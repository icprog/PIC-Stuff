

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Mon Jul 09 17:08:34 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK2,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	stringtext3,global,class=STRCODE,delta=2
     8                           	psect	stringtext4,global,class=STRCODE,delta=2
     9                           	psect	stringtext5,global,class=STRCODE,delta=2
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    19                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2
    21                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text9,local,class=CODE,merge=1,delta=2
    29                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text11,local,class=CODE,merge=1,delta=2
    31                           	psect	text12,local,class=CODE,merge=1,delta=2
    32                           	psect	text13,local,class=CODE,merge=1,delta=2
    33                           	psect	text14,local,class=CODE,merge=1,delta=2
    34                           	psect	text15,local,class=CODE,merge=1,delta=2
    35                           	psect	text16,local,class=CODE,merge=1,delta=2
    36                           	psect	text17,local,class=CODE,merge=1,delta=2
    37                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text22,local,class=CODE,merge=1,delta=2
    42                           	psect	text23,local,class=CODE,merge=1,delta=2
    43                           	psect	text24,local,class=CODE,merge=1,delta=2
    44                           	psect	text25,local,class=CODE,merge=1,delta=2
    45                           	psect	text26,local,class=CODE,merge=1,delta=2
    46                           	psect	text27,local,class=CODE,merge=1,delta=2
    47                           	psect	text28,local,class=CODE,merge=1,delta=2
    48                           	psect	text29,local,class=CODE,merge=1,delta=2
    49                           	psect	text30,local,class=CODE,merge=1,delta=2
    50                           	psect	text31,local,class=CODE,merge=1,delta=2
    51                           	psect	text32,local,class=CODE,merge=1,delta=2
    52                           	psect	text33,local,class=CODE,merge=1,delta=2
    53                           	psect	text34,local,class=CODE,merge=1,delta=2
    54                           	psect	text35,local,class=CODE,merge=1,delta=2
    55                           	psect	text36,local,class=CODE,merge=1,delta=2
    56                           	psect	text37,local,class=CODE,merge=1,delta=2,group=2
    57                           	psect	text38,local,class=CODE,merge=1,delta=2,group=2
    58                           	psect	text39,local,class=CODE,merge=1,delta=2
    59                           	psect	text40,local,class=CODE,merge=1,delta=2,group=2
    60                           	psect	text41,local,class=CODE,merge=1,delta=2
    61                           	psect	text42,local,class=CODE,merge=1,delta=2
    62                           	dabs	1,0x620,48
    63                           	dabs	1,0x5A0,80
    64                           	dabs	1,0x520,80
    65                           	dabs	1,0x4A0,80
    66                           	dabs	1,0x420,80
    67                           	dabs	1,0x3A0,80
    68                           	dabs	1,0x320,80
    69                           	dabs	1,0x2A8,72
    70                           	dabs	1,0x2198,0,_samples
    71                           	dabs	1,0x7E,2
    72  0000                     
    73                           ; Version 1.45
    74                           ; Generated 16/11/2017 GMT
    75                           ; 
    76                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    77                           ; All rights reserved.
    78                           ; 
    79                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    80                           ; 
    81                           ; Redistribution and use in source and binary forms, with or without modification, are
    82                           ; permitted provided that the following conditions are met:
    83                           ; 
    84                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    85                           ;        conditions and the following disclaimer.
    86                           ; 
    87                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    88                           ;        of conditions and the following disclaimer in the documentation and/or other
    89                           ;        materials provided with the distribution.
    90                           ; 
    91                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    92                           ;        software without specific prior written permission.
    93                           ; 
    94                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    95                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    96                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    97                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    98                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    99                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   100                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   101                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   102                           ; 
   103                           ; 
   104                           ; Code-generator required, PIC16F18855 Definitions
   105                           ; 
   106                           ; SFR Addresses
   107  0000                     	;# 
   108  0001                     	;# 
   109  0002                     	;# 
   110  0003                     	;# 
   111  0004                     	;# 
   112  0005                     	;# 
   113  0006                     	;# 
   114  0007                     	;# 
   115  0008                     	;# 
   116  0009                     	;# 
   117  000A                     	;# 
   118  000B                     	;# 
   119  000C                     	;# 
   120  000D                     	;# 
   121  000E                     	;# 
   122  0010                     	;# 
   123  0011                     	;# 
   124  0012                     	;# 
   125  0013                     	;# 
   126  0016                     	;# 
   127  0017                     	;# 
   128  0018                     	;# 
   129  001C                     	;# 
   130  001C                     	;# 
   131  001D                     	;# 
   132  001D                     	;# 
   133  001E                     	;# 
   134  001F                     	;# 
   135  008C                     	;# 
   136  008C                     	;# 
   137  008D                     	;# 
   138  008E                     	;# 
   139  008E                     	;# 
   140  008F                     	;# 
   141  0090                     	;# 
   142  0090                     	;# 
   143  0091                     	;# 
   144  0093                     	;# 
   145  0094                     	;# 
   146  0095                     	;# 
   147  0096                     	;# 
   148  0097                     	;# 
   149  0098                     	;# 
   150  0099                     	;# 
   151  009A                     	;# 
   152  009B                     	;# 
   153  009C                     	;# 
   154  009D                     	;# 
   155  009E                     	;# 
   156  010C                     	;# 
   157  010D                     	;# 
   158  010E                     	;# 
   159  010E                     	;# 
   160  010F                     	;# 
   161  0110                     	;# 
   162  0110                     	;# 
   163  0111                     	;# 
   164  0112                     	;# 
   165  0112                     	;# 
   166  0113                     	;# 
   167  0114                     	;# 
   168  0114                     	;# 
   169  0115                     	;# 
   170  0116                     	;# 
   171  0116                     	;# 
   172  0117                     	;# 
   173  0119                     	;# 
   174  0119                     	;# 
   175  0119                     	;# 
   176  011A                     	;# 
   177  011A                     	;# 
   178  011A                     	;# 
   179  011B                     	;# 
   180  011B                     	;# 
   181  011B                     	;# 
   182  011B                     	;# 
   183  011B                     	;# 
   184  011C                     	;# 
   185  011C                     	;# 
   186  011C                     	;# 
   187  011D                     	;# 
   188  011D                     	;# 
   189  011D                     	;# 
   190  011E                     	;# 
   191  011E                     	;# 
   192  011E                     	;# 
   193  011F                     	;# 
   194  011F                     	;# 
   195  011F                     	;# 
   196  011F                     	;# 
   197  011F                     	;# 
   198  018C                     	;# 
   199  018D                     	;# 
   200  018E                     	;# 
   201  018F                     	;# 
   202  0190                     	;# 
   203  0191                     	;# 
   204  0192                     	;# 
   205  0196                     	;# 
   206  0197                     	;# 
   207  0198                     	;# 
   208  0199                     	;# 
   209  019A                     	;# 
   210  019B                     	;# 
   211  019C                     	;# 
   212  020C                     	;# 
   213  020C                     	;# 
   214  020D                     	;# 
   215  020E                     	;# 
   216  020F                     	;# 
   217  020F                     	;# 
   218  0210                     	;# 
   219  0210                     	;# 
   220  0211                     	;# 
   221  0211                     	;# 
   222  0212                     	;# 
   223  0212                     	;# 
   224  0213                     	;# 
   225  0214                     	;# 
   226  0215                     	;# 
   227  0215                     	;# 
   228  0216                     	;# 
   229  0216                     	;# 
   230  0217                     	;# 
   231  0217                     	;# 
   232  0218                     	;# 
   233  0218                     	;# 
   234  0219                     	;# 
   235  021A                     	;# 
   236  021B                     	;# 
   237  021B                     	;# 
   238  021C                     	;# 
   239  021C                     	;# 
   240  021D                     	;# 
   241  021D                     	;# 
   242  021E                     	;# 
   243  021F                     	;# 
   244  028C                     	;# 
   245  028C                     	;# 
   246  028D                     	;# 
   247  028D                     	;# 
   248  028E                     	;# 
   249  028F                     	;# 
   250  0290                     	;# 
   251  0290                     	;# 
   252  0291                     	;# 
   253  0292                     	;# 
   254  0292                     	;# 
   255  0293                     	;# 
   256  0293                     	;# 
   257  0294                     	;# 
   258  0295                     	;# 
   259  0296                     	;# 
   260  0296                     	;# 
   261  0297                     	;# 
   262  0298                     	;# 
   263  0298                     	;# 
   264  0299                     	;# 
   265  0299                     	;# 
   266  029A                     	;# 
   267  029B                     	;# 
   268  029C                     	;# 
   269  029C                     	;# 
   270  029D                     	;# 
   271  030C                     	;# 
   272  030C                     	;# 
   273  030D                     	;# 
   274  030E                     	;# 
   275  030F                     	;# 
   276  0310                     	;# 
   277  0310                     	;# 
   278  0311                     	;# 
   279  0312                     	;# 
   280  0313                     	;# 
   281  0314                     	;# 
   282  0314                     	;# 
   283  0315                     	;# 
   284  0316                     	;# 
   285  0317                     	;# 
   286  0318                     	;# 
   287  0318                     	;# 
   288  0319                     	;# 
   289  031A                     	;# 
   290  031B                     	;# 
   291  031C                     	;# 
   292  031C                     	;# 
   293  031D                     	;# 
   294  031E                     	;# 
   295  031F                     	;# 
   296  038C                     	;# 
   297  038D                     	;# 
   298  038E                     	;# 
   299  0390                     	;# 
   300  0391                     	;# 
   301  0392                     	;# 
   302  040C                     	;# 
   303  040D                     	;# 
   304  040E                     	;# 
   305  040F                     	;# 
   306  0410                     	;# 
   307  0411                     	;# 
   308  0416                     	;# 
   309  0416                     	;# 
   310  0417                     	;# 
   311  0418                     	;# 
   312  0418                     	;# 
   313  0419                     	;# 
   314  041A                     	;# 
   315  041A                     	;# 
   316  041B                     	;# 
   317  041C                     	;# 
   318  041C                     	;# 
   319  041D                     	;# 
   320  041E                     	;# 
   321  041F                     	;# 
   322  048C                     	;# 
   323  048C                     	;# 
   324  048D                     	;# 
   325  048E                     	;# 
   326  048F                     	;# 
   327  048F                     	;# 
   328  0490                     	;# 
   329  0491                     	;# 
   330  0492                     	;# 
   331  0492                     	;# 
   332  0493                     	;# 
   333  0494                     	;# 
   334  0495                     	;# 
   335  0495                     	;# 
   336  0496                     	;# 
   337  0497                     	;# 
   338  0498                     	;# 
   339  0499                     	;# 
   340  049A                     	;# 
   341  049B                     	;# 
   342  049C                     	;# 
   343  049D                     	;# 
   344  050C                     	;# 
   345  050C                     	;# 
   346  050D                     	;# 
   347  050E                     	;# 
   348  050F                     	;# 
   349  050F                     	;# 
   350  0510                     	;# 
   351  0511                     	;# 
   352  0512                     	;# 
   353  0512                     	;# 
   354  0513                     	;# 
   355  0514                     	;# 
   356  0515                     	;# 
   357  0515                     	;# 
   358  0516                     	;# 
   359  0517                     	;# 
   360  0518                     	;# 
   361  0519                     	;# 
   362  051A                     	;# 
   363  051B                     	;# 
   364  051C                     	;# 
   365  051D                     	;# 
   366  058C                     	;# 
   367  058C                     	;# 
   368  058D                     	;# 
   369  058E                     	;# 
   370  058F                     	;# 
   371  058F                     	;# 
   372  0590                     	;# 
   373  0591                     	;# 
   374  0592                     	;# 
   375  0593                     	;# 
   376  060C                     	;# 
   377  060D                     	;# 
   378  060E                     	;# 
   379  060F                     	;# 
   380  0610                     	;# 
   381  0611                     	;# 
   382  0612                     	;# 
   383  0613                     	;# 
   384  0614                     	;# 
   385  0616                     	;# 
   386  0617                     	;# 
   387  0618                     	;# 
   388  0619                     	;# 
   389  061A                     	;# 
   390  061B                     	;# 
   391  061C                     	;# 
   392  061D                     	;# 
   393  061E                     	;# 
   394  068C                     	;# 
   395  068D                     	;# 
   396  068E                     	;# 
   397  068F                     	;# 
   398  0690                     	;# 
   399  0691                     	;# 
   400  0692                     	;# 
   401  0693                     	;# 
   402  0694                     	;# 
   403  070C                     	;# 
   404  070D                     	;# 
   405  070E                     	;# 
   406  070F                     	;# 
   407  0710                     	;# 
   408  0711                     	;# 
   409  0712                     	;# 
   410  0713                     	;# 
   411  0714                     	;# 
   412  0716                     	;# 
   413  0717                     	;# 
   414  0718                     	;# 
   415  0719                     	;# 
   416  071A                     	;# 
   417  071B                     	;# 
   418  071C                     	;# 
   419  071D                     	;# 
   420  071E                     	;# 
   421  0796                     	;# 
   422  0797                     	;# 
   423  0798                     	;# 
   424  0799                     	;# 
   425  079A                     	;# 
   426  079B                     	;# 
   427  080C                     	;# 
   428  080D                     	;# 
   429  080E                     	;# 
   430  080F                     	;# 
   431  0810                     	;# 
   432  0811                     	;# 
   433  0812                     	;# 
   434  0813                     	;# 
   435  0814                     	;# 
   436  081A                     	;# 
   437  081B                     	;# 
   438  081C                     	;# 
   439  081D                     	;# 
   440  081E                     	;# 
   441  081F                     	;# 
   442  088C                     	;# 
   443  088D                     	;# 
   444  088E                     	;# 
   445  088F                     	;# 
   446  0890                     	;# 
   447  0891                     	;# 
   448  0892                     	;# 
   449  0893                     	;# 
   450  0895                     	;# 
   451  0896                     	;# 
   452  0897                     	;# 
   453  0898                     	;# 
   454  0899                     	;# 
   455  089A                     	;# 
   456  089B                     	;# 
   457  090C                     	;# 
   458  090E                     	;# 
   459  090F                     	;# 
   460  091F                     	;# 
   461  091F                     	;# 
   462  098F                     	;# 
   463  098F                     	;# 
   464  0990                     	;# 
   465  0991                     	;# 
   466  0992                     	;# 
   467  0993                     	;# 
   468  0994                     	;# 
   469  0995                     	;# 
   470  0996                     	;# 
   471  0997                     	;# 
   472  0E0F                     	;# 
   473  0E10                     	;# 
   474  0E11                     	;# 
   475  0E12                     	;# 
   476  0E13                     	;# 
   477  0E14                     	;# 
   478  0E15                     	;# 
   479  0E16                     	;# 
   480  0E17                     	;# 
   481  0E18                     	;# 
   482  0E19                     	;# 
   483  0E1A                     	;# 
   484  0E1B                     	;# 
   485  0E1C                     	;# 
   486  0E1D                     	;# 
   487  0E1E                     	;# 
   488  0E1F                     	;# 
   489  0E20                     	;# 
   490  0E21                     	;# 
   491  0E22                     	;# 
   492  0E23                     	;# 
   493  0E24                     	;# 
   494  0E25                     	;# 
   495  0E26                     	;# 
   496  0E27                     	;# 
   497  0E28                     	;# 
   498  0E29                     	;# 
   499  0E2A                     	;# 
   500  0E2B                     	;# 
   501  0E2C                     	;# 
   502  0E2D                     	;# 
   503  0E2E                     	;# 
   504  0E2F                     	;# 
   505  0E30                     	;# 
   506  0E31                     	;# 
   507  0E32                     	;# 
   508  0E33                     	;# 
   509  0E34                     	;# 
   510  0E35                     	;# 
   511  0E36                     	;# 
   512  0E37                     	;# 
   513  0E8F                     	;# 
   514  0E90                     	;# 
   515  0E91                     	;# 
   516  0E92                     	;# 
   517  0E93                     	;# 
   518  0E94                     	;# 
   519  0E95                     	;# 
   520  0E96                     	;# 
   521  0E97                     	;# 
   522  0E9C                     	;# 
   523  0E9D                     	;# 
   524  0E9E                     	;# 
   525  0EA1                     	;# 
   526  0EA2                     	;# 
   527  0EA3                     	;# 
   528  0EA4                     	;# 
   529  0EA5                     	;# 
   530  0EA9                     	;# 
   531  0EAA                     	;# 
   532  0EAB                     	;# 
   533  0EAC                     	;# 
   534  0EB1                     	;# 
   535  0EB2                     	;# 
   536  0EB3                     	;# 
   537  0EB8                     	;# 
   538  0EB9                     	;# 
   539  0EBA                     	;# 
   540  0EBB                     	;# 
   541  0EBC                     	;# 
   542  0EBD                     	;# 
   543  0EBE                     	;# 
   544  0EC3                     	;# 
   545  0EC5                     	;# 
   546  0EC6                     	;# 
   547  0EC7                     	;# 
   548  0EC8                     	;# 
   549  0EC9                     	;# 
   550  0ECA                     	;# 
   551  0ECB                     	;# 
   552  0ECC                     	;# 
   553  0F10                     	;# 
   554  0F11                     	;# 
   555  0F12                     	;# 
   556  0F13                     	;# 
   557  0F14                     	;# 
   558  0F15                     	;# 
   559  0F16                     	;# 
   560  0F17                     	;# 
   561  0F18                     	;# 
   562  0F19                     	;# 
   563  0F1A                     	;# 
   564  0F1B                     	;# 
   565  0F1C                     	;# 
   566  0F1D                     	;# 
   567  0F1E                     	;# 
   568  0F1F                     	;# 
   569  0F20                     	;# 
   570  0F21                     	;# 
   571  0F22                     	;# 
   572  0F23                     	;# 
   573  0F24                     	;# 
   574  0F25                     	;# 
   575  0F26                     	;# 
   576  0F27                     	;# 
   577  0F38                     	;# 
   578  0F39                     	;# 
   579  0F3A                     	;# 
   580  0F3B                     	;# 
   581  0F3C                     	;# 
   582  0F3D                     	;# 
   583  0F3E                     	;# 
   584  0F3F                     	;# 
   585  0F40                     	;# 
   586  0F41                     	;# 
   587  0F43                     	;# 
   588  0F44                     	;# 
   589  0F45                     	;# 
   590  0F46                     	;# 
   591  0F47                     	;# 
   592  0F48                     	;# 
   593  0F49                     	;# 
   594  0F4A                     	;# 
   595  0F4B                     	;# 
   596  0F4C                     	;# 
   597  0F4E                     	;# 
   598  0F4F                     	;# 
   599  0F50                     	;# 
   600  0F51                     	;# 
   601  0F52                     	;# 
   602  0F53                     	;# 
   603  0F54                     	;# 
   604  0F55                     	;# 
   605  0F56                     	;# 
   606  0F57                     	;# 
   607  0F65                     	;# 
   608  0F68                     	;# 
   609  0F69                     	;# 
   610  0F6A                     	;# 
   611  0F6B                     	;# 
   612  0FE4                     	;# 
   613  0FE5                     	;# 
   614  0FE6                     	;# 
   615  0FE7                     	;# 
   616  0FE8                     	;# 
   617  0FE9                     	;# 
   618  0FEA                     	;# 
   619  0FEB                     	;# 
   620  0FED                     	;# 
   621  0FEE                     	;# 
   622  0FEF                     	;# 
   623  0000                     	;# 
   624  0001                     	;# 
   625  0002                     	;# 
   626  0003                     	;# 
   627  0004                     	;# 
   628  0005                     	;# 
   629  0006                     	;# 
   630  0007                     	;# 
   631  0008                     	;# 
   632  0009                     	;# 
   633  000A                     	;# 
   634  000B                     	;# 
   635  000C                     	;# 
   636  000D                     	;# 
   637  000E                     	;# 
   638  0010                     	;# 
   639  0011                     	;# 
   640  0012                     	;# 
   641  0013                     	;# 
   642  0016                     	;# 
   643  0017                     	;# 
   644  0018                     	;# 
   645  001C                     	;# 
   646  001C                     	;# 
   647  001D                     	;# 
   648  001D                     	;# 
   649  001E                     	;# 
   650  001F                     	;# 
   651  008C                     	;# 
   652  008C                     	;# 
   653  008D                     	;# 
   654  008E                     	;# 
   655  008E                     	;# 
   656  008F                     	;# 
   657  0090                     	;# 
   658  0090                     	;# 
   659  0091                     	;# 
   660  0093                     	;# 
   661  0094                     	;# 
   662  0095                     	;# 
   663  0096                     	;# 
   664  0097                     	;# 
   665  0098                     	;# 
   666  0099                     	;# 
   667  009A                     	;# 
   668  009B                     	;# 
   669  009C                     	;# 
   670  009D                     	;# 
   671  009E                     	;# 
   672  010C                     	;# 
   673  010D                     	;# 
   674  010E                     	;# 
   675  010E                     	;# 
   676  010F                     	;# 
   677  0110                     	;# 
   678  0110                     	;# 
   679  0111                     	;# 
   680  0112                     	;# 
   681  0112                     	;# 
   682  0113                     	;# 
   683  0114                     	;# 
   684  0114                     	;# 
   685  0115                     	;# 
   686  0116                     	;# 
   687  0116                     	;# 
   688  0117                     	;# 
   689  0119                     	;# 
   690  0119                     	;# 
   691  0119                     	;# 
   692  011A                     	;# 
   693  011A                     	;# 
   694  011A                     	;# 
   695  011B                     	;# 
   696  011B                     	;# 
   697  011B                     	;# 
   698  011B                     	;# 
   699  011B                     	;# 
   700  011C                     	;# 
   701  011C                     	;# 
   702  011C                     	;# 
   703  011D                     	;# 
   704  011D                     	;# 
   705  011D                     	;# 
   706  011E                     	;# 
   707  011E                     	;# 
   708  011E                     	;# 
   709  011F                     	;# 
   710  011F                     	;# 
   711  011F                     	;# 
   712  011F                     	;# 
   713  011F                     	;# 
   714  018C                     	;# 
   715  018D                     	;# 
   716  018E                     	;# 
   717  018F                     	;# 
   718  0190                     	;# 
   719  0191                     	;# 
   720  0192                     	;# 
   721  0196                     	;# 
   722  0197                     	;# 
   723  0198                     	;# 
   724  0199                     	;# 
   725  019A                     	;# 
   726  019B                     	;# 
   727  019C                     	;# 
   728  020C                     	;# 
   729  020C                     	;# 
   730  020D                     	;# 
   731  020E                     	;# 
   732  020F                     	;# 
   733  020F                     	;# 
   734  0210                     	;# 
   735  0210                     	;# 
   736  0211                     	;# 
   737  0211                     	;# 
   738  0212                     	;# 
   739  0212                     	;# 
   740  0213                     	;# 
   741  0214                     	;# 
   742  0215                     	;# 
   743  0215                     	;# 
   744  0216                     	;# 
   745  0216                     	;# 
   746  0217                     	;# 
   747  0217                     	;# 
   748  0218                     	;# 
   749  0218                     	;# 
   750  0219                     	;# 
   751  021A                     	;# 
   752  021B                     	;# 
   753  021B                     	;# 
   754  021C                     	;# 
   755  021C                     	;# 
   756  021D                     	;# 
   757  021D                     	;# 
   758  021E                     	;# 
   759  021F                     	;# 
   760  028C                     	;# 
   761  028C                     	;# 
   762  028D                     	;# 
   763  028D                     	;# 
   764  028E                     	;# 
   765  028F                     	;# 
   766  0290                     	;# 
   767  0290                     	;# 
   768  0291                     	;# 
   769  0292                     	;# 
   770  0292                     	;# 
   771  0293                     	;# 
   772  0293                     	;# 
   773  0294                     	;# 
   774  0295                     	;# 
   775  0296                     	;# 
   776  0296                     	;# 
   777  0297                     	;# 
   778  0298                     	;# 
   779  0298                     	;# 
   780  0299                     	;# 
   781  0299                     	;# 
   782  029A                     	;# 
   783  029B                     	;# 
   784  029C                     	;# 
   785  029C                     	;# 
   786  029D                     	;# 
   787  030C                     	;# 
   788  030C                     	;# 
   789  030D                     	;# 
   790  030E                     	;# 
   791  030F                     	;# 
   792  0310                     	;# 
   793  0310                     	;# 
   794  0311                     	;# 
   795  0312                     	;# 
   796  0313                     	;# 
   797  0314                     	;# 
   798  0314                     	;# 
   799  0315                     	;# 
   800  0316                     	;# 
   801  0317                     	;# 
   802  0318                     	;# 
   803  0318                     	;# 
   804  0319                     	;# 
   805  031A                     	;# 
   806  031B                     	;# 
   807  031C                     	;# 
   808  031C                     	;# 
   809  031D                     	;# 
   810  031E                     	;# 
   811  031F                     	;# 
   812  038C                     	;# 
   813  038D                     	;# 
   814  038E                     	;# 
   815  0390                     	;# 
   816  0391                     	;# 
   817  0392                     	;# 
   818  040C                     	;# 
   819  040D                     	;# 
   820  040E                     	;# 
   821  040F                     	;# 
   822  0410                     	;# 
   823  0411                     	;# 
   824  0416                     	;# 
   825  0416                     	;# 
   826  0417                     	;# 
   827  0418                     	;# 
   828  0418                     	;# 
   829  0419                     	;# 
   830  041A                     	;# 
   831  041A                     	;# 
   832  041B                     	;# 
   833  041C                     	;# 
   834  041C                     	;# 
   835  041D                     	;# 
   836  041E                     	;# 
   837  041F                     	;# 
   838  048C                     	;# 
   839  048C                     	;# 
   840  048D                     	;# 
   841  048E                     	;# 
   842  048F                     	;# 
   843  048F                     	;# 
   844  0490                     	;# 
   845  0491                     	;# 
   846  0492                     	;# 
   847  0492                     	;# 
   848  0493                     	;# 
   849  0494                     	;# 
   850  0495                     	;# 
   851  0495                     	;# 
   852  0496                     	;# 
   853  0497                     	;# 
   854  0498                     	;# 
   855  0499                     	;# 
   856  049A                     	;# 
   857  049B                     	;# 
   858  049C                     	;# 
   859  049D                     	;# 
   860  050C                     	;# 
   861  050C                     	;# 
   862  050D                     	;# 
   863  050E                     	;# 
   864  050F                     	;# 
   865  050F                     	;# 
   866  0510                     	;# 
   867  0511                     	;# 
   868  0512                     	;# 
   869  0512                     	;# 
   870  0513                     	;# 
   871  0514                     	;# 
   872  0515                     	;# 
   873  0515                     	;# 
   874  0516                     	;# 
   875  0517                     	;# 
   876  0518                     	;# 
   877  0519                     	;# 
   878  051A                     	;# 
   879  051B                     	;# 
   880  051C                     	;# 
   881  051D                     	;# 
   882  058C                     	;# 
   883  058C                     	;# 
   884  058D                     	;# 
   885  058E                     	;# 
   886  058F                     	;# 
   887  058F                     	;# 
   888  0590                     	;# 
   889  0591                     	;# 
   890  0592                     	;# 
   891  0593                     	;# 
   892  060C                     	;# 
   893  060D                     	;# 
   894  060E                     	;# 
   895  060F                     	;# 
   896  0610                     	;# 
   897  0611                     	;# 
   898  0612                     	;# 
   899  0613                     	;# 
   900  0614                     	;# 
   901  0616                     	;# 
   902  0617                     	;# 
   903  0618                     	;# 
   904  0619                     	;# 
   905  061A                     	;# 
   906  061B                     	;# 
   907  061C                     	;# 
   908  061D                     	;# 
   909  061E                     	;# 
   910  068C                     	;# 
   911  068D                     	;# 
   912  068E                     	;# 
   913  068F                     	;# 
   914  0690                     	;# 
   915  0691                     	;# 
   916  0692                     	;# 
   917  0693                     	;# 
   918  0694                     	;# 
   919  070C                     	;# 
   920  070D                     	;# 
   921  070E                     	;# 
   922  070F                     	;# 
   923  0710                     	;# 
   924  0711                     	;# 
   925  0712                     	;# 
   926  0713                     	;# 
   927  0714                     	;# 
   928  0716                     	;# 
   929  0717                     	;# 
   930  0718                     	;# 
   931  0719                     	;# 
   932  071A                     	;# 
   933  071B                     	;# 
   934  071C                     	;# 
   935  071D                     	;# 
   936  071E                     	;# 
   937  0796                     	;# 
   938  0797                     	;# 
   939  0798                     	;# 
   940  0799                     	;# 
   941  079A                     	;# 
   942  079B                     	;# 
   943  080C                     	;# 
   944  080D                     	;# 
   945  080E                     	;# 
   946  080F                     	;# 
   947  0810                     	;# 
   948  0811                     	;# 
   949  0812                     	;# 
   950  0813                     	;# 
   951  0814                     	;# 
   952  081A                     	;# 
   953  081B                     	;# 
   954  081C                     	;# 
   955  081D                     	;# 
   956  081E                     	;# 
   957  081F                     	;# 
   958  088C                     	;# 
   959  088D                     	;# 
   960  088E                     	;# 
   961  088F                     	;# 
   962  0890                     	;# 
   963  0891                     	;# 
   964  0892                     	;# 
   965  0893                     	;# 
   966  0895                     	;# 
   967  0896                     	;# 
   968  0897                     	;# 
   969  0898                     	;# 
   970  0899                     	;# 
   971  089A                     	;# 
   972  089B                     	;# 
   973  090C                     	;# 
   974  090E                     	;# 
   975  090F                     	;# 
   976  091F                     	;# 
   977  091F                     	;# 
   978  098F                     	;# 
   979  098F                     	;# 
   980  0990                     	;# 
   981  0991                     	;# 
   982  0992                     	;# 
   983  0993                     	;# 
   984  0994                     	;# 
   985  0995                     	;# 
   986  0996                     	;# 
   987  0997                     	;# 
   988  0E0F                     	;# 
   989  0E10                     	;# 
   990  0E11                     	;# 
   991  0E12                     	;# 
   992  0E13                     	;# 
   993  0E14                     	;# 
   994  0E15                     	;# 
   995  0E16                     	;# 
   996  0E17                     	;# 
   997  0E18                     	;# 
   998  0E19                     	;# 
   999  0E1A                     	;# 
  1000  0E1B                     	;# 
  1001  0E1C                     	;# 
  1002  0E1D                     	;# 
  1003  0E1E                     	;# 
  1004  0E1F                     	;# 
  1005  0E20                     	;# 
  1006  0E21                     	;# 
  1007  0E22                     	;# 
  1008  0E23                     	;# 
  1009  0E24                     	;# 
  1010  0E25                     	;# 
  1011  0E26                     	;# 
  1012  0E27                     	;# 
  1013  0E28                     	;# 
  1014  0E29                     	;# 
  1015  0E2A                     	;# 
  1016  0E2B                     	;# 
  1017  0E2C                     	;# 
  1018  0E2D                     	;# 
  1019  0E2E                     	;# 
  1020  0E2F                     	;# 
  1021  0E30                     	;# 
  1022  0E31                     	;# 
  1023  0E32                     	;# 
  1024  0E33                     	;# 
  1025  0E34                     	;# 
  1026  0E35                     	;# 
  1027  0E36                     	;# 
  1028  0E37                     	;# 
  1029  0E8F                     	;# 
  1030  0E90                     	;# 
  1031  0E91                     	;# 
  1032  0E92                     	;# 
  1033  0E93                     	;# 
  1034  0E94                     	;# 
  1035  0E95                     	;# 
  1036  0E96                     	;# 
  1037  0E97                     	;# 
  1038  0E9C                     	;# 
  1039  0E9D                     	;# 
  1040  0E9E                     	;# 
  1041  0EA1                     	;# 
  1042  0EA2                     	;# 
  1043  0EA3                     	;# 
  1044  0EA4                     	;# 
  1045  0EA5                     	;# 
  1046  0EA9                     	;# 
  1047  0EAA                     	;# 
  1048  0EAB                     	;# 
  1049  0EAC                     	;# 
  1050  0EB1                     	;# 
  1051  0EB2                     	;# 
  1052  0EB3                     	;# 
  1053  0EB8                     	;# 
  1054  0EB9                     	;# 
  1055  0EBA                     	;# 
  1056  0EBB                     	;# 
  1057  0EBC                     	;# 
  1058  0EBD                     	;# 
  1059  0EBE                     	;# 
  1060  0EC3                     	;# 
  1061  0EC5                     	;# 
  1062  0EC6                     	;# 
  1063  0EC7                     	;# 
  1064  0EC8                     	;# 
  1065  0EC9                     	;# 
  1066  0ECA                     	;# 
  1067  0ECB                     	;# 
  1068  0ECC                     	;# 
  1069  0F10                     	;# 
  1070  0F11                     	;# 
  1071  0F12                     	;# 
  1072  0F13                     	;# 
  1073  0F14                     	;# 
  1074  0F15                     	;# 
  1075  0F16                     	;# 
  1076  0F17                     	;# 
  1077  0F18                     	;# 
  1078  0F19                     	;# 
  1079  0F1A                     	;# 
  1080  0F1B                     	;# 
  1081  0F1C                     	;# 
  1082  0F1D                     	;# 
  1083  0F1E                     	;# 
  1084  0F1F                     	;# 
  1085  0F20                     	;# 
  1086  0F21                     	;# 
  1087  0F22                     	;# 
  1088  0F23                     	;# 
  1089  0F24                     	;# 
  1090  0F25                     	;# 
  1091  0F26                     	;# 
  1092  0F27                     	;# 
  1093  0F38                     	;# 
  1094  0F39                     	;# 
  1095  0F3A                     	;# 
  1096  0F3B                     	;# 
  1097  0F3C                     	;# 
  1098  0F3D                     	;# 
  1099  0F3E                     	;# 
  1100  0F3F                     	;# 
  1101  0F40                     	;# 
  1102  0F41                     	;# 
  1103  0F43                     	;# 
  1104  0F44                     	;# 
  1105  0F45                     	;# 
  1106  0F46                     	;# 
  1107  0F47                     	;# 
  1108  0F48                     	;# 
  1109  0F49                     	;# 
  1110  0F4A                     	;# 
  1111  0F4B                     	;# 
  1112  0F4C                     	;# 
  1113  0F4E                     	;# 
  1114  0F4F                     	;# 
  1115  0F50                     	;# 
  1116  0F51                     	;# 
  1117  0F52                     	;# 
  1118  0F53                     	;# 
  1119  0F54                     	;# 
  1120  0F55                     	;# 
  1121  0F56                     	;# 
  1122  0F57                     	;# 
  1123  0F65                     	;# 
  1124  0F68                     	;# 
  1125  0F69                     	;# 
  1126  0F6A                     	;# 
  1127  0F6B                     	;# 
  1128  0FE4                     	;# 
  1129  0FE5                     	;# 
  1130  0FE6                     	;# 
  1131  0FE7                     	;# 
  1132  0FE8                     	;# 
  1133  0FE9                     	;# 
  1134  0FEA                     	;# 
  1135  0FEB                     	;# 
  1136  0FED                     	;# 
  1137  0FEE                     	;# 
  1138  0FEF                     	;# 
  1139  0000                     	;# 
  1140  0001                     	;# 
  1141  0002                     	;# 
  1142  0003                     	;# 
  1143  0004                     	;# 
  1144  0005                     	;# 
  1145  0006                     	;# 
  1146  0007                     	;# 
  1147  0008                     	;# 
  1148  0009                     	;# 
  1149  000A                     	;# 
  1150  000B                     	;# 
  1151  000C                     	;# 
  1152  000D                     	;# 
  1153  000E                     	;# 
  1154  0010                     	;# 
  1155  0011                     	;# 
  1156  0012                     	;# 
  1157  0013                     	;# 
  1158  0016                     	;# 
  1159  0017                     	;# 
  1160  0018                     	;# 
  1161  001C                     	;# 
  1162  001C                     	;# 
  1163  001D                     	;# 
  1164  001D                     	;# 
  1165  001E                     	;# 
  1166  001F                     	;# 
  1167  008C                     	;# 
  1168  008C                     	;# 
  1169  008D                     	;# 
  1170  008E                     	;# 
  1171  008E                     	;# 
  1172  008F                     	;# 
  1173  0090                     	;# 
  1174  0090                     	;# 
  1175  0091                     	;# 
  1176  0093                     	;# 
  1177  0094                     	;# 
  1178  0095                     	;# 
  1179  0096                     	;# 
  1180  0097                     	;# 
  1181  0098                     	;# 
  1182  0099                     	;# 
  1183  009A                     	;# 
  1184  009B                     	;# 
  1185  009C                     	;# 
  1186  009D                     	;# 
  1187  009E                     	;# 
  1188  010C                     	;# 
  1189  010D                     	;# 
  1190  010E                     	;# 
  1191  010E                     	;# 
  1192  010F                     	;# 
  1193  0110                     	;# 
  1194  0110                     	;# 
  1195  0111                     	;# 
  1196  0112                     	;# 
  1197  0112                     	;# 
  1198  0113                     	;# 
  1199  0114                     	;# 
  1200  0114                     	;# 
  1201  0115                     	;# 
  1202  0116                     	;# 
  1203  0116                     	;# 
  1204  0117                     	;# 
  1205  0119                     	;# 
  1206  0119                     	;# 
  1207  0119                     	;# 
  1208  011A                     	;# 
  1209  011A                     	;# 
  1210  011A                     	;# 
  1211  011B                     	;# 
  1212  011B                     	;# 
  1213  011B                     	;# 
  1214  011B                     	;# 
  1215  011B                     	;# 
  1216  011C                     	;# 
  1217  011C                     	;# 
  1218  011C                     	;# 
  1219  011D                     	;# 
  1220  011D                     	;# 
  1221  011D                     	;# 
  1222  011E                     	;# 
  1223  011E                     	;# 
  1224  011E                     	;# 
  1225  011F                     	;# 
  1226  011F                     	;# 
  1227  011F                     	;# 
  1228  011F                     	;# 
  1229  011F                     	;# 
  1230  018C                     	;# 
  1231  018D                     	;# 
  1232  018E                     	;# 
  1233  018F                     	;# 
  1234  0190                     	;# 
  1235  0191                     	;# 
  1236  0192                     	;# 
  1237  0196                     	;# 
  1238  0197                     	;# 
  1239  0198                     	;# 
  1240  0199                     	;# 
  1241  019A                     	;# 
  1242  019B                     	;# 
  1243  019C                     	;# 
  1244  020C                     	;# 
  1245  020C                     	;# 
  1246  020D                     	;# 
  1247  020E                     	;# 
  1248  020F                     	;# 
  1249  020F                     	;# 
  1250  0210                     	;# 
  1251  0210                     	;# 
  1252  0211                     	;# 
  1253  0211                     	;# 
  1254  0212                     	;# 
  1255  0212                     	;# 
  1256  0213                     	;# 
  1257  0214                     	;# 
  1258  0215                     	;# 
  1259  0215                     	;# 
  1260  0216                     	;# 
  1261  0216                     	;# 
  1262  0217                     	;# 
  1263  0217                     	;# 
  1264  0218                     	;# 
  1265  0218                     	;# 
  1266  0219                     	;# 
  1267  021A                     	;# 
  1268  021B                     	;# 
  1269  021B                     	;# 
  1270  021C                     	;# 
  1271  021C                     	;# 
  1272  021D                     	;# 
  1273  021D                     	;# 
  1274  021E                     	;# 
  1275  021F                     	;# 
  1276  028C                     	;# 
  1277  028C                     	;# 
  1278  028D                     	;# 
  1279  028D                     	;# 
  1280  028E                     	;# 
  1281  028F                     	;# 
  1282  0290                     	;# 
  1283  0290                     	;# 
  1284  0291                     	;# 
  1285  0292                     	;# 
  1286  0292                     	;# 
  1287  0293                     	;# 
  1288  0293                     	;# 
  1289  0294                     	;# 
  1290  0295                     	;# 
  1291  0296                     	;# 
  1292  0296                     	;# 
  1293  0297                     	;# 
  1294  0298                     	;# 
  1295  0298                     	;# 
  1296  0299                     	;# 
  1297  0299                     	;# 
  1298  029A                     	;# 
  1299  029B                     	;# 
  1300  029C                     	;# 
  1301  029C                     	;# 
  1302  029D                     	;# 
  1303  030C                     	;# 
  1304  030C                     	;# 
  1305  030D                     	;# 
  1306  030E                     	;# 
  1307  030F                     	;# 
  1308  0310                     	;# 
  1309  0310                     	;# 
  1310  0311                     	;# 
  1311  0312                     	;# 
  1312  0313                     	;# 
  1313  0314                     	;# 
  1314  0314                     	;# 
  1315  0315                     	;# 
  1316  0316                     	;# 
  1317  0317                     	;# 
  1318  0318                     	;# 
  1319  0318                     	;# 
  1320  0319                     	;# 
  1321  031A                     	;# 
  1322  031B                     	;# 
  1323  031C                     	;# 
  1324  031C                     	;# 
  1325  031D                     	;# 
  1326  031E                     	;# 
  1327  031F                     	;# 
  1328  038C                     	;# 
  1329  038D                     	;# 
  1330  038E                     	;# 
  1331  0390                     	;# 
  1332  0391                     	;# 
  1333  0392                     	;# 
  1334  040C                     	;# 
  1335  040D                     	;# 
  1336  040E                     	;# 
  1337  040F                     	;# 
  1338  0410                     	;# 
  1339  0411                     	;# 
  1340  0416                     	;# 
  1341  0416                     	;# 
  1342  0417                     	;# 
  1343  0418                     	;# 
  1344  0418                     	;# 
  1345  0419                     	;# 
  1346  041A                     	;# 
  1347  041A                     	;# 
  1348  041B                     	;# 
  1349  041C                     	;# 
  1350  041C                     	;# 
  1351  041D                     	;# 
  1352  041E                     	;# 
  1353  041F                     	;# 
  1354  048C                     	;# 
  1355  048C                     	;# 
  1356  048D                     	;# 
  1357  048E                     	;# 
  1358  048F                     	;# 
  1359  048F                     	;# 
  1360  0490                     	;# 
  1361  0491                     	;# 
  1362  0492                     	;# 
  1363  0492                     	;# 
  1364  0493                     	;# 
  1365  0494                     	;# 
  1366  0495                     	;# 
  1367  0495                     	;# 
  1368  0496                     	;# 
  1369  0497                     	;# 
  1370  0498                     	;# 
  1371  0499                     	;# 
  1372  049A                     	;# 
  1373  049B                     	;# 
  1374  049C                     	;# 
  1375  049D                     	;# 
  1376  050C                     	;# 
  1377  050C                     	;# 
  1378  050D                     	;# 
  1379  050E                     	;# 
  1380  050F                     	;# 
  1381  050F                     	;# 
  1382  0510                     	;# 
  1383  0511                     	;# 
  1384  0512                     	;# 
  1385  0512                     	;# 
  1386  0513                     	;# 
  1387  0514                     	;# 
  1388  0515                     	;# 
  1389  0515                     	;# 
  1390  0516                     	;# 
  1391  0517                     	;# 
  1392  0518                     	;# 
  1393  0519                     	;# 
  1394  051A                     	;# 
  1395  051B                     	;# 
  1396  051C                     	;# 
  1397  051D                     	;# 
  1398  058C                     	;# 
  1399  058C                     	;# 
  1400  058D                     	;# 
  1401  058E                     	;# 
  1402  058F                     	;# 
  1403  058F                     	;# 
  1404  0590                     	;# 
  1405  0591                     	;# 
  1406  0592                     	;# 
  1407  0593                     	;# 
  1408  060C                     	;# 
  1409  060D                     	;# 
  1410  060E                     	;# 
  1411  060F                     	;# 
  1412  0610                     	;# 
  1413  0611                     	;# 
  1414  0612                     	;# 
  1415  0613                     	;# 
  1416  0614                     	;# 
  1417  0616                     	;# 
  1418  0617                     	;# 
  1419  0618                     	;# 
  1420  0619                     	;# 
  1421  061A                     	;# 
  1422  061B                     	;# 
  1423  061C                     	;# 
  1424  061D                     	;# 
  1425  061E                     	;# 
  1426  068C                     	;# 
  1427  068D                     	;# 
  1428  068E                     	;# 
  1429  068F                     	;# 
  1430  0690                     	;# 
  1431  0691                     	;# 
  1432  0692                     	;# 
  1433  0693                     	;# 
  1434  0694                     	;# 
  1435  070C                     	;# 
  1436  070D                     	;# 
  1437  070E                     	;# 
  1438  070F                     	;# 
  1439  0710                     	;# 
  1440  0711                     	;# 
  1441  0712                     	;# 
  1442  0713                     	;# 
  1443  0714                     	;# 
  1444  0716                     	;# 
  1445  0717                     	;# 
  1446  0718                     	;# 
  1447  0719                     	;# 
  1448  071A                     	;# 
  1449  071B                     	;# 
  1450  071C                     	;# 
  1451  071D                     	;# 
  1452  071E                     	;# 
  1453  0796                     	;# 
  1454  0797                     	;# 
  1455  0798                     	;# 
  1456  0799                     	;# 
  1457  079A                     	;# 
  1458  079B                     	;# 
  1459  080C                     	;# 
  1460  080D                     	;# 
  1461  080E                     	;# 
  1462  080F                     	;# 
  1463  0810                     	;# 
  1464  0811                     	;# 
  1465  0812                     	;# 
  1466  0813                     	;# 
  1467  0814                     	;# 
  1468  081A                     	;# 
  1469  081B                     	;# 
  1470  081C                     	;# 
  1471  081D                     	;# 
  1472  081E                     	;# 
  1473  081F                     	;# 
  1474  088C                     	;# 
  1475  088D                     	;# 
  1476  088E                     	;# 
  1477  088F                     	;# 
  1478  0890                     	;# 
  1479  0891                     	;# 
  1480  0892                     	;# 
  1481  0893                     	;# 
  1482  0895                     	;# 
  1483  0896                     	;# 
  1484  0897                     	;# 
  1485  0898                     	;# 
  1486  0899                     	;# 
  1487  089A                     	;# 
  1488  089B                     	;# 
  1489  090C                     	;# 
  1490  090E                     	;# 
  1491  090F                     	;# 
  1492  091F                     	;# 
  1493  091F                     	;# 
  1494  098F                     	;# 
  1495  098F                     	;# 
  1496  0990                     	;# 
  1497  0991                     	;# 
  1498  0992                     	;# 
  1499  0993                     	;# 
  1500  0994                     	;# 
  1501  0995                     	;# 
  1502  0996                     	;# 
  1503  0997                     	;# 
  1504  0E0F                     	;# 
  1505  0E10                     	;# 
  1506  0E11                     	;# 
  1507  0E12                     	;# 
  1508  0E13                     	;# 
  1509  0E14                     	;# 
  1510  0E15                     	;# 
  1511  0E16                     	;# 
  1512  0E17                     	;# 
  1513  0E18                     	;# 
  1514  0E19                     	;# 
  1515  0E1A                     	;# 
  1516  0E1B                     	;# 
  1517  0E1C                     	;# 
  1518  0E1D                     	;# 
  1519  0E1E                     	;# 
  1520  0E1F                     	;# 
  1521  0E20                     	;# 
  1522  0E21                     	;# 
  1523  0E22                     	;# 
  1524  0E23                     	;# 
  1525  0E24                     	;# 
  1526  0E25                     	;# 
  1527  0E26                     	;# 
  1528  0E27                     	;# 
  1529  0E28                     	;# 
  1530  0E29                     	;# 
  1531  0E2A                     	;# 
  1532  0E2B                     	;# 
  1533  0E2C                     	;# 
  1534  0E2D                     	;# 
  1535  0E2E                     	;# 
  1536  0E2F                     	;# 
  1537  0E30                     	;# 
  1538  0E31                     	;# 
  1539  0E32                     	;# 
  1540  0E33                     	;# 
  1541  0E34                     	;# 
  1542  0E35                     	;# 
  1543  0E36                     	;# 
  1544  0E37                     	;# 
  1545  0E8F                     	;# 
  1546  0E90                     	;# 
  1547  0E91                     	;# 
  1548  0E92                     	;# 
  1549  0E93                     	;# 
  1550  0E94                     	;# 
  1551  0E95                     	;# 
  1552  0E96                     	;# 
  1553  0E97                     	;# 
  1554  0E9C                     	;# 
  1555  0E9D                     	;# 
  1556  0E9E                     	;# 
  1557  0EA1                     	;# 
  1558  0EA2                     	;# 
  1559  0EA3                     	;# 
  1560  0EA4                     	;# 
  1561  0EA5                     	;# 
  1562  0EA9                     	;# 
  1563  0EAA                     	;# 
  1564  0EAB                     	;# 
  1565  0EAC                     	;# 
  1566  0EB1                     	;# 
  1567  0EB2                     	;# 
  1568  0EB3                     	;# 
  1569  0EB8                     	;# 
  1570  0EB9                     	;# 
  1571  0EBA                     	;# 
  1572  0EBB                     	;# 
  1573  0EBC                     	;# 
  1574  0EBD                     	;# 
  1575  0EBE                     	;# 
  1576  0EC3                     	;# 
  1577  0EC5                     	;# 
  1578  0EC6                     	;# 
  1579  0EC7                     	;# 
  1580  0EC8                     	;# 
  1581  0EC9                     	;# 
  1582  0ECA                     	;# 
  1583  0ECB                     	;# 
  1584  0ECC                     	;# 
  1585  0F10                     	;# 
  1586  0F11                     	;# 
  1587  0F12                     	;# 
  1588  0F13                     	;# 
  1589  0F14                     	;# 
  1590  0F15                     	;# 
  1591  0F16                     	;# 
  1592  0F17                     	;# 
  1593  0F18                     	;# 
  1594  0F19                     	;# 
  1595  0F1A                     	;# 
  1596  0F1B                     	;# 
  1597  0F1C                     	;# 
  1598  0F1D                     	;# 
  1599  0F1E                     	;# 
  1600  0F1F                     	;# 
  1601  0F20                     	;# 
  1602  0F21                     	;# 
  1603  0F22                     	;# 
  1604  0F23                     	;# 
  1605  0F24                     	;# 
  1606  0F25                     	;# 
  1607  0F26                     	;# 
  1608  0F27                     	;# 
  1609  0F38                     	;# 
  1610  0F39                     	;# 
  1611  0F3A                     	;# 
  1612  0F3B                     	;# 
  1613  0F3C                     	;# 
  1614  0F3D                     	;# 
  1615  0F3E                     	;# 
  1616  0F3F                     	;# 
  1617  0F40                     	;# 
  1618  0F41                     	;# 
  1619  0F43                     	;# 
  1620  0F44                     	;# 
  1621  0F45                     	;# 
  1622  0F46                     	;# 
  1623  0F47                     	;# 
  1624  0F48                     	;# 
  1625  0F49                     	;# 
  1626  0F4A                     	;# 
  1627  0F4B                     	;# 
  1628  0F4C                     	;# 
  1629  0F4E                     	;# 
  1630  0F4F                     	;# 
  1631  0F50                     	;# 
  1632  0F51                     	;# 
  1633  0F52                     	;# 
  1634  0F53                     	;# 
  1635  0F54                     	;# 
  1636  0F55                     	;# 
  1637  0F56                     	;# 
  1638  0F57                     	;# 
  1639  0F65                     	;# 
  1640  0F68                     	;# 
  1641  0F69                     	;# 
  1642  0F6A                     	;# 
  1643  0F6B                     	;# 
  1644  0FE4                     	;# 
  1645  0FE5                     	;# 
  1646  0FE6                     	;# 
  1647  0FE7                     	;# 
  1648  0FE8                     	;# 
  1649  0FE9                     	;# 
  1650  0FEA                     	;# 
  1651  0FEB                     	;# 
  1652  0FED                     	;# 
  1653  0FEE                     	;# 
  1654  0FEF                     	;# 
  1655  0000                     	;# 
  1656  0001                     	;# 
  1657  0002                     	;# 
  1658  0003                     	;# 
  1659  0004                     	;# 
  1660  0005                     	;# 
  1661  0006                     	;# 
  1662  0007                     	;# 
  1663  0008                     	;# 
  1664  0009                     	;# 
  1665  000A                     	;# 
  1666  000B                     	;# 
  1667  000C                     	;# 
  1668  000D                     	;# 
  1669  000E                     	;# 
  1670  0010                     	;# 
  1671  0011                     	;# 
  1672  0012                     	;# 
  1673  0013                     	;# 
  1674  0016                     	;# 
  1675  0017                     	;# 
  1676  0018                     	;# 
  1677  001C                     	;# 
  1678  001C                     	;# 
  1679  001D                     	;# 
  1680  001D                     	;# 
  1681  001E                     	;# 
  1682  001F                     	;# 
  1683  008C                     	;# 
  1684  008C                     	;# 
  1685  008D                     	;# 
  1686  008E                     	;# 
  1687  008E                     	;# 
  1688  008F                     	;# 
  1689  0090                     	;# 
  1690  0090                     	;# 
  1691  0091                     	;# 
  1692  0093                     	;# 
  1693  0094                     	;# 
  1694  0095                     	;# 
  1695  0096                     	;# 
  1696  0097                     	;# 
  1697  0098                     	;# 
  1698  0099                     	;# 
  1699  009A                     	;# 
  1700  009B                     	;# 
  1701  009C                     	;# 
  1702  009D                     	;# 
  1703  009E                     	;# 
  1704  010C                     	;# 
  1705  010D                     	;# 
  1706  010E                     	;# 
  1707  010E                     	;# 
  1708  010F                     	;# 
  1709  0110                     	;# 
  1710  0110                     	;# 
  1711  0111                     	;# 
  1712  0112                     	;# 
  1713  0112                     	;# 
  1714  0113                     	;# 
  1715  0114                     	;# 
  1716  0114                     	;# 
  1717  0115                     	;# 
  1718  0116                     	;# 
  1719  0116                     	;# 
  1720  0117                     	;# 
  1721  0119                     	;# 
  1722  0119                     	;# 
  1723  0119                     	;# 
  1724  011A                     	;# 
  1725  011A                     	;# 
  1726  011A                     	;# 
  1727  011B                     	;# 
  1728  011B                     	;# 
  1729  011B                     	;# 
  1730  011B                     	;# 
  1731  011B                     	;# 
  1732  011C                     	;# 
  1733  011C                     	;# 
  1734  011C                     	;# 
  1735  011D                     	;# 
  1736  011D                     	;# 
  1737  011D                     	;# 
  1738  011E                     	;# 
  1739  011E                     	;# 
  1740  011E                     	;# 
  1741  011F                     	;# 
  1742  011F                     	;# 
  1743  011F                     	;# 
  1744  011F                     	;# 
  1745  011F                     	;# 
  1746  018C                     	;# 
  1747  018D                     	;# 
  1748  018E                     	;# 
  1749  018F                     	;# 
  1750  0190                     	;# 
  1751  0191                     	;# 
  1752  0192                     	;# 
  1753  0196                     	;# 
  1754  0197                     	;# 
  1755  0198                     	;# 
  1756  0199                     	;# 
  1757  019A                     	;# 
  1758  019B                     	;# 
  1759  019C                     	;# 
  1760  020C                     	;# 
  1761  020C                     	;# 
  1762  020D                     	;# 
  1763  020E                     	;# 
  1764  020F                     	;# 
  1765  020F                     	;# 
  1766  0210                     	;# 
  1767  0210                     	;# 
  1768  0211                     	;# 
  1769  0211                     	;# 
  1770  0212                     	;# 
  1771  0212                     	;# 
  1772  0213                     	;# 
  1773  0214                     	;# 
  1774  0215                     	;# 
  1775  0215                     	;# 
  1776  0216                     	;# 
  1777  0216                     	;# 
  1778  0217                     	;# 
  1779  0217                     	;# 
  1780  0218                     	;# 
  1781  0218                     	;# 
  1782  0219                     	;# 
  1783  021A                     	;# 
  1784  021B                     	;# 
  1785  021B                     	;# 
  1786  021C                     	;# 
  1787  021C                     	;# 
  1788  021D                     	;# 
  1789  021D                     	;# 
  1790  021E                     	;# 
  1791  021F                     	;# 
  1792  028C                     	;# 
  1793  028C                     	;# 
  1794  028D                     	;# 
  1795  028D                     	;# 
  1796  028E                     	;# 
  1797  028F                     	;# 
  1798  0290                     	;# 
  1799  0290                     	;# 
  1800  0291                     	;# 
  1801  0292                     	;# 
  1802  0292                     	;# 
  1803  0293                     	;# 
  1804  0293                     	;# 
  1805  0294                     	;# 
  1806  0295                     	;# 
  1807  0296                     	;# 
  1808  0296                     	;# 
  1809  0297                     	;# 
  1810  0298                     	;# 
  1811  0298                     	;# 
  1812  0299                     	;# 
  1813  0299                     	;# 
  1814  029A                     	;# 
  1815  029B                     	;# 
  1816  029C                     	;# 
  1817  029C                     	;# 
  1818  029D                     	;# 
  1819  030C                     	;# 
  1820  030C                     	;# 
  1821  030D                     	;# 
  1822  030E                     	;# 
  1823  030F                     	;# 
  1824  0310                     	;# 
  1825  0310                     	;# 
  1826  0311                     	;# 
  1827  0312                     	;# 
  1828  0313                     	;# 
  1829  0314                     	;# 
  1830  0314                     	;# 
  1831  0315                     	;# 
  1832  0316                     	;# 
  1833  0317                     	;# 
  1834  0318                     	;# 
  1835  0318                     	;# 
  1836  0319                     	;# 
  1837  031A                     	;# 
  1838  031B                     	;# 
  1839  031C                     	;# 
  1840  031C                     	;# 
  1841  031D                     	;# 
  1842  031E                     	;# 
  1843  031F                     	;# 
  1844  038C                     	;# 
  1845  038D                     	;# 
  1846  038E                     	;# 
  1847  0390                     	;# 
  1848  0391                     	;# 
  1849  0392                     	;# 
  1850  040C                     	;# 
  1851  040D                     	;# 
  1852  040E                     	;# 
  1853  040F                     	;# 
  1854  0410                     	;# 
  1855  0411                     	;# 
  1856  0416                     	;# 
  1857  0416                     	;# 
  1858  0417                     	;# 
  1859  0418                     	;# 
  1860  0418                     	;# 
  1861  0419                     	;# 
  1862  041A                     	;# 
  1863  041A                     	;# 
  1864  041B                     	;# 
  1865  041C                     	;# 
  1866  041C                     	;# 
  1867  041D                     	;# 
  1868  041E                     	;# 
  1869  041F                     	;# 
  1870  048C                     	;# 
  1871  048C                     	;# 
  1872  048D                     	;# 
  1873  048E                     	;# 
  1874  048F                     	;# 
  1875  048F                     	;# 
  1876  0490                     	;# 
  1877  0491                     	;# 
  1878  0492                     	;# 
  1879  0492                     	;# 
  1880  0493                     	;# 
  1881  0494                     	;# 
  1882  0495                     	;# 
  1883  0495                     	;# 
  1884  0496                     	;# 
  1885  0497                     	;# 
  1886  0498                     	;# 
  1887  0499                     	;# 
  1888  049A                     	;# 
  1889  049B                     	;# 
  1890  049C                     	;# 
  1891  049D                     	;# 
  1892  050C                     	;# 
  1893  050C                     	;# 
  1894  050D                     	;# 
  1895  050E                     	;# 
  1896  050F                     	;# 
  1897  050F                     	;# 
  1898  0510                     	;# 
  1899  0511                     	;# 
  1900  0512                     	;# 
  1901  0512                     	;# 
  1902  0513                     	;# 
  1903  0514                     	;# 
  1904  0515                     	;# 
  1905  0515                     	;# 
  1906  0516                     	;# 
  1907  0517                     	;# 
  1908  0518                     	;# 
  1909  0519                     	;# 
  1910  051A                     	;# 
  1911  051B                     	;# 
  1912  051C                     	;# 
  1913  051D                     	;# 
  1914  058C                     	;# 
  1915  058C                     	;# 
  1916  058D                     	;# 
  1917  058E                     	;# 
  1918  058F                     	;# 
  1919  058F                     	;# 
  1920  0590                     	;# 
  1921  0591                     	;# 
  1922  0592                     	;# 
  1923  0593                     	;# 
  1924  060C                     	;# 
  1925  060D                     	;# 
  1926  060E                     	;# 
  1927  060F                     	;# 
  1928  0610                     	;# 
  1929  0611                     	;# 
  1930  0612                     	;# 
  1931  0613                     	;# 
  1932  0614                     	;# 
  1933  0616                     	;# 
  1934  0617                     	;# 
  1935  0618                     	;# 
  1936  0619                     	;# 
  1937  061A                     	;# 
  1938  061B                     	;# 
  1939  061C                     	;# 
  1940  061D                     	;# 
  1941  061E                     	;# 
  1942  068C                     	;# 
  1943  068D                     	;# 
  1944  068E                     	;# 
  1945  068F                     	;# 
  1946  0690                     	;# 
  1947  0691                     	;# 
  1948  0692                     	;# 
  1949  0693                     	;# 
  1950  0694                     	;# 
  1951  070C                     	;# 
  1952  070D                     	;# 
  1953  070E                     	;# 
  1954  070F                     	;# 
  1955  0710                     	;# 
  1956  0711                     	;# 
  1957  0712                     	;# 
  1958  0713                     	;# 
  1959  0714                     	;# 
  1960  0716                     	;# 
  1961  0717                     	;# 
  1962  0718                     	;# 
  1963  0719                     	;# 
  1964  071A                     	;# 
  1965  071B                     	;# 
  1966  071C                     	;# 
  1967  071D                     	;# 
  1968  071E                     	;# 
  1969  0796                     	;# 
  1970  0797                     	;# 
  1971  0798                     	;# 
  1972  0799                     	;# 
  1973  079A                     	;# 
  1974  079B                     	;# 
  1975  080C                     	;# 
  1976  080D                     	;# 
  1977  080E                     	;# 
  1978  080F                     	;# 
  1979  0810                     	;# 
  1980  0811                     	;# 
  1981  0812                     	;# 
  1982  0813                     	;# 
  1983  0814                     	;# 
  1984  081A                     	;# 
  1985  081B                     	;# 
  1986  081C                     	;# 
  1987  081D                     	;# 
  1988  081E                     	;# 
  1989  081F                     	;# 
  1990  088C                     	;# 
  1991  088D                     	;# 
  1992  088E                     	;# 
  1993  088F                     	;# 
  1994  0890                     	;# 
  1995  0891                     	;# 
  1996  0892                     	;# 
  1997  0893                     	;# 
  1998  0895                     	;# 
  1999  0896                     	;# 
  2000  0897                     	;# 
  2001  0898                     	;# 
  2002  0899                     	;# 
  2003  089A                     	;# 
  2004  089B                     	;# 
  2005  090C                     	;# 
  2006  090E                     	;# 
  2007  090F                     	;# 
  2008  091F                     	;# 
  2009  091F                     	;# 
  2010  098F                     	;# 
  2011  098F                     	;# 
  2012  0990                     	;# 
  2013  0991                     	;# 
  2014  0992                     	;# 
  2015  0993                     	;# 
  2016  0994                     	;# 
  2017  0995                     	;# 
  2018  0996                     	;# 
  2019  0997                     	;# 
  2020  0E0F                     	;# 
  2021  0E10                     	;# 
  2022  0E11                     	;# 
  2023  0E12                     	;# 
  2024  0E13                     	;# 
  2025  0E14                     	;# 
  2026  0E15                     	;# 
  2027  0E16                     	;# 
  2028  0E17                     	;# 
  2029  0E18                     	;# 
  2030  0E19                     	;# 
  2031  0E1A                     	;# 
  2032  0E1B                     	;# 
  2033  0E1C                     	;# 
  2034  0E1D                     	;# 
  2035  0E1E                     	;# 
  2036  0E1F                     	;# 
  2037  0E20                     	;# 
  2038  0E21                     	;# 
  2039  0E22                     	;# 
  2040  0E23                     	;# 
  2041  0E24                     	;# 
  2042  0E25                     	;# 
  2043  0E26                     	;# 
  2044  0E27                     	;# 
  2045  0E28                     	;# 
  2046  0E29                     	;# 
  2047  0E2A                     	;# 
  2048  0E2B                     	;# 
  2049  0E2C                     	;# 
  2050  0E2D                     	;# 
  2051  0E2E                     	;# 
  2052  0E2F                     	;# 
  2053  0E30                     	;# 
  2054  0E31                     	;# 
  2055  0E32                     	;# 
  2056  0E33                     	;# 
  2057  0E34                     	;# 
  2058  0E35                     	;# 
  2059  0E36                     	;# 
  2060  0E37                     	;# 
  2061  0E8F                     	;# 
  2062  0E90                     	;# 
  2063  0E91                     	;# 
  2064  0E92                     	;# 
  2065  0E93                     	;# 
  2066  0E94                     	;# 
  2067  0E95                     	;# 
  2068  0E96                     	;# 
  2069  0E97                     	;# 
  2070  0E9C                     	;# 
  2071  0E9D                     	;# 
  2072  0E9E                     	;# 
  2073  0EA1                     	;# 
  2074  0EA2                     	;# 
  2075  0EA3                     	;# 
  2076  0EA4                     	;# 
  2077  0EA5                     	;# 
  2078  0EA9                     	;# 
  2079  0EAA                     	;# 
  2080  0EAB                     	;# 
  2081  0EAC                     	;# 
  2082  0EB1                     	;# 
  2083  0EB2                     	;# 
  2084  0EB3                     	;# 
  2085  0EB8                     	;# 
  2086  0EB9                     	;# 
  2087  0EBA                     	;# 
  2088  0EBB                     	;# 
  2089  0EBC                     	;# 
  2090  0EBD                     	;# 
  2091  0EBE                     	;# 
  2092  0EC3                     	;# 
  2093  0EC5                     	;# 
  2094  0EC6                     	;# 
  2095  0EC7                     	;# 
  2096  0EC8                     	;# 
  2097  0EC9                     	;# 
  2098  0ECA                     	;# 
  2099  0ECB                     	;# 
  2100  0ECC                     	;# 
  2101  0F10                     	;# 
  2102  0F11                     	;# 
  2103  0F12                     	;# 
  2104  0F13                     	;# 
  2105  0F14                     	;# 
  2106  0F15                     	;# 
  2107  0F16                     	;# 
  2108  0F17                     	;# 
  2109  0F18                     	;# 
  2110  0F19                     	;# 
  2111  0F1A                     	;# 
  2112  0F1B                     	;# 
  2113  0F1C                     	;# 
  2114  0F1D                     	;# 
  2115  0F1E                     	;# 
  2116  0F1F                     	;# 
  2117  0F20                     	;# 
  2118  0F21                     	;# 
  2119  0F22                     	;# 
  2120  0F23                     	;# 
  2121  0F24                     	;# 
  2122  0F25                     	;# 
  2123  0F26                     	;# 
  2124  0F27                     	;# 
  2125  0F38                     	;# 
  2126  0F39                     	;# 
  2127  0F3A                     	;# 
  2128  0F3B                     	;# 
  2129  0F3C                     	;# 
  2130  0F3D                     	;# 
  2131  0F3E                     	;# 
  2132  0F3F                     	;# 
  2133  0F40                     	;# 
  2134  0F41                     	;# 
  2135  0F43                     	;# 
  2136  0F44                     	;# 
  2137  0F45                     	;# 
  2138  0F46                     	;# 
  2139  0F47                     	;# 
  2140  0F48                     	;# 
  2141  0F49                     	;# 
  2142  0F4A                     	;# 
  2143  0F4B                     	;# 
  2144  0F4C                     	;# 
  2145  0F4E                     	;# 
  2146  0F4F                     	;# 
  2147  0F50                     	;# 
  2148  0F51                     	;# 
  2149  0F52                     	;# 
  2150  0F53                     	;# 
  2151  0F54                     	;# 
  2152  0F55                     	;# 
  2153  0F56                     	;# 
  2154  0F57                     	;# 
  2155  0F65                     	;# 
  2156  0F68                     	;# 
  2157  0F69                     	;# 
  2158  0F6A                     	;# 
  2159  0F6B                     	;# 
  2160  0FE4                     	;# 
  2161  0FE5                     	;# 
  2162  0FE6                     	;# 
  2163  0FE7                     	;# 
  2164  0FE8                     	;# 
  2165  0FE9                     	;# 
  2166  0FEA                     	;# 
  2167  0FEB                     	;# 
  2168  0FED                     	;# 
  2169  0FEE                     	;# 
  2170  0FEF                     	;# 
  2171  0000                     	;# 
  2172  0001                     	;# 
  2173  0002                     	;# 
  2174  0003                     	;# 
  2175  0004                     	;# 
  2176  0005                     	;# 
  2177  0006                     	;# 
  2178  0007                     	;# 
  2179  0008                     	;# 
  2180  0009                     	;# 
  2181  000A                     	;# 
  2182  000B                     	;# 
  2183  000C                     	;# 
  2184  000D                     	;# 
  2185  000E                     	;# 
  2186  0010                     	;# 
  2187  0011                     	;# 
  2188  0012                     	;# 
  2189  0013                     	;# 
  2190  0016                     	;# 
  2191  0017                     	;# 
  2192  0018                     	;# 
  2193  001C                     	;# 
  2194  001C                     	;# 
  2195  001D                     	;# 
  2196  001D                     	;# 
  2197  001E                     	;# 
  2198  001F                     	;# 
  2199  008C                     	;# 
  2200  008C                     	;# 
  2201  008D                     	;# 
  2202  008E                     	;# 
  2203  008E                     	;# 
  2204  008F                     	;# 
  2205  0090                     	;# 
  2206  0090                     	;# 
  2207  0091                     	;# 
  2208  0093                     	;# 
  2209  0094                     	;# 
  2210  0095                     	;# 
  2211  0096                     	;# 
  2212  0097                     	;# 
  2213  0098                     	;# 
  2214  0099                     	;# 
  2215  009A                     	;# 
  2216  009B                     	;# 
  2217  009C                     	;# 
  2218  009D                     	;# 
  2219  009E                     	;# 
  2220  010C                     	;# 
  2221  010D                     	;# 
  2222  010E                     	;# 
  2223  010E                     	;# 
  2224  010F                     	;# 
  2225  0110                     	;# 
  2226  0110                     	;# 
  2227  0111                     	;# 
  2228  0112                     	;# 
  2229  0112                     	;# 
  2230  0113                     	;# 
  2231  0114                     	;# 
  2232  0114                     	;# 
  2233  0115                     	;# 
  2234  0116                     	;# 
  2235  0116                     	;# 
  2236  0117                     	;# 
  2237  0119                     	;# 
  2238  0119                     	;# 
  2239  0119                     	;# 
  2240  011A                     	;# 
  2241  011A                     	;# 
  2242  011A                     	;# 
  2243  011B                     	;# 
  2244  011B                     	;# 
  2245  011B                     	;# 
  2246  011B                     	;# 
  2247  011B                     	;# 
  2248  011C                     	;# 
  2249  011C                     	;# 
  2250  011C                     	;# 
  2251  011D                     	;# 
  2252  011D                     	;# 
  2253  011D                     	;# 
  2254  011E                     	;# 
  2255  011E                     	;# 
  2256  011E                     	;# 
  2257  011F                     	;# 
  2258  011F                     	;# 
  2259  011F                     	;# 
  2260  011F                     	;# 
  2261  011F                     	;# 
  2262  018C                     	;# 
  2263  018D                     	;# 
  2264  018E                     	;# 
  2265  018F                     	;# 
  2266  0190                     	;# 
  2267  0191                     	;# 
  2268  0192                     	;# 
  2269  0196                     	;# 
  2270  0197                     	;# 
  2271  0198                     	;# 
  2272  0199                     	;# 
  2273  019A                     	;# 
  2274  019B                     	;# 
  2275  019C                     	;# 
  2276  020C                     	;# 
  2277  020C                     	;# 
  2278  020D                     	;# 
  2279  020E                     	;# 
  2280  020F                     	;# 
  2281  020F                     	;# 
  2282  0210                     	;# 
  2283  0210                     	;# 
  2284  0211                     	;# 
  2285  0211                     	;# 
  2286  0212                     	;# 
  2287  0212                     	;# 
  2288  0213                     	;# 
  2289  0214                     	;# 
  2290  0215                     	;# 
  2291  0215                     	;# 
  2292  0216                     	;# 
  2293  0216                     	;# 
  2294  0217                     	;# 
  2295  0217                     	;# 
  2296  0218                     	;# 
  2297  0218                     	;# 
  2298  0219                     	;# 
  2299  021A                     	;# 
  2300  021B                     	;# 
  2301  021B                     	;# 
  2302  021C                     	;# 
  2303  021C                     	;# 
  2304  021D                     	;# 
  2305  021D                     	;# 
  2306  021E                     	;# 
  2307  021F                     	;# 
  2308  028C                     	;# 
  2309  028C                     	;# 
  2310  028D                     	;# 
  2311  028D                     	;# 
  2312  028E                     	;# 
  2313  028F                     	;# 
  2314  0290                     	;# 
  2315  0290                     	;# 
  2316  0291                     	;# 
  2317  0292                     	;# 
  2318  0292                     	;# 
  2319  0293                     	;# 
  2320  0293                     	;# 
  2321  0294                     	;# 
  2322  0295                     	;# 
  2323  0296                     	;# 
  2324  0296                     	;# 
  2325  0297                     	;# 
  2326  0298                     	;# 
  2327  0298                     	;# 
  2328  0299                     	;# 
  2329  0299                     	;# 
  2330  029A                     	;# 
  2331  029B                     	;# 
  2332  029C                     	;# 
  2333  029C                     	;# 
  2334  029D                     	;# 
  2335  030C                     	;# 
  2336  030C                     	;# 
  2337  030D                     	;# 
  2338  030E                     	;# 
  2339  030F                     	;# 
  2340  0310                     	;# 
  2341  0310                     	;# 
  2342  0311                     	;# 
  2343  0312                     	;# 
  2344  0313                     	;# 
  2345  0314                     	;# 
  2346  0314                     	;# 
  2347  0315                     	;# 
  2348  0316                     	;# 
  2349  0317                     	;# 
  2350  0318                     	;# 
  2351  0318                     	;# 
  2352  0319                     	;# 
  2353  031A                     	;# 
  2354  031B                     	;# 
  2355  031C                     	;# 
  2356  031C                     	;# 
  2357  031D                     	;# 
  2358  031E                     	;# 
  2359  031F                     	;# 
  2360  038C                     	;# 
  2361  038D                     	;# 
  2362  038E                     	;# 
  2363  0390                     	;# 
  2364  0391                     	;# 
  2365  0392                     	;# 
  2366  040C                     	;# 
  2367  040D                     	;# 
  2368  040E                     	;# 
  2369  040F                     	;# 
  2370  0410                     	;# 
  2371  0411                     	;# 
  2372  0416                     	;# 
  2373  0416                     	;# 
  2374  0417                     	;# 
  2375  0418                     	;# 
  2376  0418                     	;# 
  2377  0419                     	;# 
  2378  041A                     	;# 
  2379  041A                     	;# 
  2380  041B                     	;# 
  2381  041C                     	;# 
  2382  041C                     	;# 
  2383  041D                     	;# 
  2384  041E                     	;# 
  2385  041F                     	;# 
  2386  048C                     	;# 
  2387  048C                     	;# 
  2388  048D                     	;# 
  2389  048E                     	;# 
  2390  048F                     	;# 
  2391  048F                     	;# 
  2392  0490                     	;# 
  2393  0491                     	;# 
  2394  0492                     	;# 
  2395  0492                     	;# 
  2396  0493                     	;# 
  2397  0494                     	;# 
  2398  0495                     	;# 
  2399  0495                     	;# 
  2400  0496                     	;# 
  2401  0497                     	;# 
  2402  0498                     	;# 
  2403  0499                     	;# 
  2404  049A                     	;# 
  2405  049B                     	;# 
  2406  049C                     	;# 
  2407  049D                     	;# 
  2408  050C                     	;# 
  2409  050C                     	;# 
  2410  050D                     	;# 
  2411  050E                     	;# 
  2412  050F                     	;# 
  2413  050F                     	;# 
  2414  0510                     	;# 
  2415  0511                     	;# 
  2416  0512                     	;# 
  2417  0512                     	;# 
  2418  0513                     	;# 
  2419  0514                     	;# 
  2420  0515                     	;# 
  2421  0515                     	;# 
  2422  0516                     	;# 
  2423  0517                     	;# 
  2424  0518                     	;# 
  2425  0519                     	;# 
  2426  051A                     	;# 
  2427  051B                     	;# 
  2428  051C                     	;# 
  2429  051D                     	;# 
  2430  058C                     	;# 
  2431  058C                     	;# 
  2432  058D                     	;# 
  2433  058E                     	;# 
  2434  058F                     	;# 
  2435  058F                     	;# 
  2436  0590                     	;# 
  2437  0591                     	;# 
  2438  0592                     	;# 
  2439  0593                     	;# 
  2440  060C                     	;# 
  2441  060D                     	;# 
  2442  060E                     	;# 
  2443  060F                     	;# 
  2444  0610                     	;# 
  2445  0611                     	;# 
  2446  0612                     	;# 
  2447  0613                     	;# 
  2448  0614                     	;# 
  2449  0616                     	;# 
  2450  0617                     	;# 
  2451  0618                     	;# 
  2452  0619                     	;# 
  2453  061A                     	;# 
  2454  061B                     	;# 
  2455  061C                     	;# 
  2456  061D                     	;# 
  2457  061E                     	;# 
  2458  068C                     	;# 
  2459  068D                     	;# 
  2460  068E                     	;# 
  2461  068F                     	;# 
  2462  0690                     	;# 
  2463  0691                     	;# 
  2464  0692                     	;# 
  2465  0693                     	;# 
  2466  0694                     	;# 
  2467  070C                     	;# 
  2468  070D                     	;# 
  2469  070E                     	;# 
  2470  070F                     	;# 
  2471  0710                     	;# 
  2472  0711                     	;# 
  2473  0712                     	;# 
  2474  0713                     	;# 
  2475  0714                     	;# 
  2476  0716                     	;# 
  2477  0717                     	;# 
  2478  0718                     	;# 
  2479  0719                     	;# 
  2480  071A                     	;# 
  2481  071B                     	;# 
  2482  071C                     	;# 
  2483  071D                     	;# 
  2484  071E                     	;# 
  2485  0796                     	;# 
  2486  0797                     	;# 
  2487  0798                     	;# 
  2488  0799                     	;# 
  2489  079A                     	;# 
  2490  079B                     	;# 
  2491  080C                     	;# 
  2492  080D                     	;# 
  2493  080E                     	;# 
  2494  080F                     	;# 
  2495  0810                     	;# 
  2496  0811                     	;# 
  2497  0812                     	;# 
  2498  0813                     	;# 
  2499  0814                     	;# 
  2500  081A                     	;# 
  2501  081B                     	;# 
  2502  081C                     	;# 
  2503  081D                     	;# 
  2504  081E                     	;# 
  2505  081F                     	;# 
  2506  088C                     	;# 
  2507  088D                     	;# 
  2508  088E                     	;# 
  2509  088F                     	;# 
  2510  0890                     	;# 
  2511  0891                     	;# 
  2512  0892                     	;# 
  2513  0893                     	;# 
  2514  0895                     	;# 
  2515  0896                     	;# 
  2516  0897                     	;# 
  2517  0898                     	;# 
  2518  0899                     	;# 
  2519  089A                     	;# 
  2520  089B                     	;# 
  2521  090C                     	;# 
  2522  090E                     	;# 
  2523  090F                     	;# 
  2524  091F                     	;# 
  2525  091F                     	;# 
  2526  098F                     	;# 
  2527  098F                     	;# 
  2528  0990                     	;# 
  2529  0991                     	;# 
  2530  0992                     	;# 
  2531  0993                     	;# 
  2532  0994                     	;# 
  2533  0995                     	;# 
  2534  0996                     	;# 
  2535  0997                     	;# 
  2536  0E0F                     	;# 
  2537  0E10                     	;# 
  2538  0E11                     	;# 
  2539  0E12                     	;# 
  2540  0E13                     	;# 
  2541  0E14                     	;# 
  2542  0E15                     	;# 
  2543  0E16                     	;# 
  2544  0E17                     	;# 
  2545  0E18                     	;# 
  2546  0E19                     	;# 
  2547  0E1A                     	;# 
  2548  0E1B                     	;# 
  2549  0E1C                     	;# 
  2550  0E1D                     	;# 
  2551  0E1E                     	;# 
  2552  0E1F                     	;# 
  2553  0E20                     	;# 
  2554  0E21                     	;# 
  2555  0E22                     	;# 
  2556  0E23                     	;# 
  2557  0E24                     	;# 
  2558  0E25                     	;# 
  2559  0E26                     	;# 
  2560  0E27                     	;# 
  2561  0E28                     	;# 
  2562  0E29                     	;# 
  2563  0E2A                     	;# 
  2564  0E2B                     	;# 
  2565  0E2C                     	;# 
  2566  0E2D                     	;# 
  2567  0E2E                     	;# 
  2568  0E2F                     	;# 
  2569  0E30                     	;# 
  2570  0E31                     	;# 
  2571  0E32                     	;# 
  2572  0E33                     	;# 
  2573  0E34                     	;# 
  2574  0E35                     	;# 
  2575  0E36                     	;# 
  2576  0E37                     	;# 
  2577  0E8F                     	;# 
  2578  0E90                     	;# 
  2579  0E91                     	;# 
  2580  0E92                     	;# 
  2581  0E93                     	;# 
  2582  0E94                     	;# 
  2583  0E95                     	;# 
  2584  0E96                     	;# 
  2585  0E97                     	;# 
  2586  0E9C                     	;# 
  2587  0E9D                     	;# 
  2588  0E9E                     	;# 
  2589  0EA1                     	;# 
  2590  0EA2                     	;# 
  2591  0EA3                     	;# 
  2592  0EA4                     	;# 
  2593  0EA5                     	;# 
  2594  0EA9                     	;# 
  2595  0EAA                     	;# 
  2596  0EAB                     	;# 
  2597  0EAC                     	;# 
  2598  0EB1                     	;# 
  2599  0EB2                     	;# 
  2600  0EB3                     	;# 
  2601  0EB8                     	;# 
  2602  0EB9                     	;# 
  2603  0EBA                     	;# 
  2604  0EBB                     	;# 
  2605  0EBC                     	;# 
  2606  0EBD                     	;# 
  2607  0EBE                     	;# 
  2608  0EC3                     	;# 
  2609  0EC5                     	;# 
  2610  0EC6                     	;# 
  2611  0EC7                     	;# 
  2612  0EC8                     	;# 
  2613  0EC9                     	;# 
  2614  0ECA                     	;# 
  2615  0ECB                     	;# 
  2616  0ECC                     	;# 
  2617  0F10                     	;# 
  2618  0F11                     	;# 
  2619  0F12                     	;# 
  2620  0F13                     	;# 
  2621  0F14                     	;# 
  2622  0F15                     	;# 
  2623  0F16                     	;# 
  2624  0F17                     	;# 
  2625  0F18                     	;# 
  2626  0F19                     	;# 
  2627  0F1A                     	;# 
  2628  0F1B                     	;# 
  2629  0F1C                     	;# 
  2630  0F1D                     	;# 
  2631  0F1E                     	;# 
  2632  0F1F                     	;# 
  2633  0F20                     	;# 
  2634  0F21                     	;# 
  2635  0F22                     	;# 
  2636  0F23                     	;# 
  2637  0F24                     	;# 
  2638  0F25                     	;# 
  2639  0F26                     	;# 
  2640  0F27                     	;# 
  2641  0F38                     	;# 
  2642  0F39                     	;# 
  2643  0F3A                     	;# 
  2644  0F3B                     	;# 
  2645  0F3C                     	;# 
  2646  0F3D                     	;# 
  2647  0F3E                     	;# 
  2648  0F3F                     	;# 
  2649  0F40                     	;# 
  2650  0F41                     	;# 
  2651  0F43                     	;# 
  2652  0F44                     	;# 
  2653  0F45                     	;# 
  2654  0F46                     	;# 
  2655  0F47                     	;# 
  2656  0F48                     	;# 
  2657  0F49                     	;# 
  2658  0F4A                     	;# 
  2659  0F4B                     	;# 
  2660  0F4C                     	;# 
  2661  0F4E                     	;# 
  2662  0F4F                     	;# 
  2663  0F50                     	;# 
  2664  0F51                     	;# 
  2665  0F52                     	;# 
  2666  0F53                     	;# 
  2667  0F54                     	;# 
  2668  0F55                     	;# 
  2669  0F56                     	;# 
  2670  0F57                     	;# 
  2671  0F65                     	;# 
  2672  0F68                     	;# 
  2673  0F69                     	;# 
  2674  0F6A                     	;# 
  2675  0F6B                     	;# 
  2676  0FE4                     	;# 
  2677  0FE5                     	;# 
  2678  0FE6                     	;# 
  2679  0FE7                     	;# 
  2680  0FE8                     	;# 
  2681  0FE9                     	;# 
  2682  0FEA                     	;# 
  2683  0FEB                     	;# 
  2684  0FED                     	;# 
  2685  0FEE                     	;# 
  2686  0FEF                     	;# 
  2687  0000                     	;# 
  2688  0001                     	;# 
  2689  0002                     	;# 
  2690  0003                     	;# 
  2691  0004                     	;# 
  2692  0005                     	;# 
  2693  0006                     	;# 
  2694  0007                     	;# 
  2695  0008                     	;# 
  2696  0009                     	;# 
  2697  000A                     	;# 
  2698  000B                     	;# 
  2699  000C                     	;# 
  2700  000D                     	;# 
  2701  000E                     	;# 
  2702  0010                     	;# 
  2703  0011                     	;# 
  2704  0012                     	;# 
  2705  0013                     	;# 
  2706  0016                     	;# 
  2707  0017                     	;# 
  2708  0018                     	;# 
  2709  001C                     	;# 
  2710  001C                     	;# 
  2711  001D                     	;# 
  2712  001D                     	;# 
  2713  001E                     	;# 
  2714  001F                     	;# 
  2715  008C                     	;# 
  2716  008C                     	;# 
  2717  008D                     	;# 
  2718  008E                     	;# 
  2719  008E                     	;# 
  2720  008F                     	;# 
  2721  0090                     	;# 
  2722  0090                     	;# 
  2723  0091                     	;# 
  2724  0093                     	;# 
  2725  0094                     	;# 
  2726  0095                     	;# 
  2727  0096                     	;# 
  2728  0097                     	;# 
  2729  0098                     	;# 
  2730  0099                     	;# 
  2731  009A                     	;# 
  2732  009B                     	;# 
  2733  009C                     	;# 
  2734  009D                     	;# 
  2735  009E                     	;# 
  2736  010C                     	;# 
  2737  010D                     	;# 
  2738  010E                     	;# 
  2739  010E                     	;# 
  2740  010F                     	;# 
  2741  0110                     	;# 
  2742  0110                     	;# 
  2743  0111                     	;# 
  2744  0112                     	;# 
  2745  0112                     	;# 
  2746  0113                     	;# 
  2747  0114                     	;# 
  2748  0114                     	;# 
  2749  0115                     	;# 
  2750  0116                     	;# 
  2751  0116                     	;# 
  2752  0117                     	;# 
  2753  0119                     	;# 
  2754  0119                     	;# 
  2755  0119                     	;# 
  2756  011A                     	;# 
  2757  011A                     	;# 
  2758  011A                     	;# 
  2759  011B                     	;# 
  2760  011B                     	;# 
  2761  011B                     	;# 
  2762  011B                     	;# 
  2763  011B                     	;# 
  2764  011C                     	;# 
  2765  011C                     	;# 
  2766  011C                     	;# 
  2767  011D                     	;# 
  2768  011D                     	;# 
  2769  011D                     	;# 
  2770  011E                     	;# 
  2771  011E                     	;# 
  2772  011E                     	;# 
  2773  011F                     	;# 
  2774  011F                     	;# 
  2775  011F                     	;# 
  2776  011F                     	;# 
  2777  011F                     	;# 
  2778  018C                     	;# 
  2779  018D                     	;# 
  2780  018E                     	;# 
  2781  018F                     	;# 
  2782  0190                     	;# 
  2783  0191                     	;# 
  2784  0192                     	;# 
  2785  0196                     	;# 
  2786  0197                     	;# 
  2787  0198                     	;# 
  2788  0199                     	;# 
  2789  019A                     	;# 
  2790  019B                     	;# 
  2791  019C                     	;# 
  2792  020C                     	;# 
  2793  020C                     	;# 
  2794  020D                     	;# 
  2795  020E                     	;# 
  2796  020F                     	;# 
  2797  020F                     	;# 
  2798  0210                     	;# 
  2799  0210                     	;# 
  2800  0211                     	;# 
  2801  0211                     	;# 
  2802  0212                     	;# 
  2803  0212                     	;# 
  2804  0213                     	;# 
  2805  0214                     	;# 
  2806  0215                     	;# 
  2807  0215                     	;# 
  2808  0216                     	;# 
  2809  0216                     	;# 
  2810  0217                     	;# 
  2811  0217                     	;# 
  2812  0218                     	;# 
  2813  0218                     	;# 
  2814  0219                     	;# 
  2815  021A                     	;# 
  2816  021B                     	;# 
  2817  021B                     	;# 
  2818  021C                     	;# 
  2819  021C                     	;# 
  2820  021D                     	;# 
  2821  021D                     	;# 
  2822  021E                     	;# 
  2823  021F                     	;# 
  2824  028C                     	;# 
  2825  028C                     	;# 
  2826  028D                     	;# 
  2827  028D                     	;# 
  2828  028E                     	;# 
  2829  028F                     	;# 
  2830  0290                     	;# 
  2831  0290                     	;# 
  2832  0291                     	;# 
  2833  0292                     	;# 
  2834  0292                     	;# 
  2835  0293                     	;# 
  2836  0293                     	;# 
  2837  0294                     	;# 
  2838  0295                     	;# 
  2839  0296                     	;# 
  2840  0296                     	;# 
  2841  0297                     	;# 
  2842  0298                     	;# 
  2843  0298                     	;# 
  2844  0299                     	;# 
  2845  0299                     	;# 
  2846  029A                     	;# 
  2847  029B                     	;# 
  2848  029C                     	;# 
  2849  029C                     	;# 
  2850  029D                     	;# 
  2851  030C                     	;# 
  2852  030C                     	;# 
  2853  030D                     	;# 
  2854  030E                     	;# 
  2855  030F                     	;# 
  2856  0310                     	;# 
  2857  0310                     	;# 
  2858  0311                     	;# 
  2859  0312                     	;# 
  2860  0313                     	;# 
  2861  0314                     	;# 
  2862  0314                     	;# 
  2863  0315                     	;# 
  2864  0316                     	;# 
  2865  0317                     	;# 
  2866  0318                     	;# 
  2867  0318                     	;# 
  2868  0319                     	;# 
  2869  031A                     	;# 
  2870  031B                     	;# 
  2871  031C                     	;# 
  2872  031C                     	;# 
  2873  031D                     	;# 
  2874  031E                     	;# 
  2875  031F                     	;# 
  2876  038C                     	;# 
  2877  038D                     	;# 
  2878  038E                     	;# 
  2879  0390                     	;# 
  2880  0391                     	;# 
  2881  0392                     	;# 
  2882  040C                     	;# 
  2883  040D                     	;# 
  2884  040E                     	;# 
  2885  040F                     	;# 
  2886  0410                     	;# 
  2887  0411                     	;# 
  2888  0416                     	;# 
  2889  0416                     	;# 
  2890  0417                     	;# 
  2891  0418                     	;# 
  2892  0418                     	;# 
  2893  0419                     	;# 
  2894  041A                     	;# 
  2895  041A                     	;# 
  2896  041B                     	;# 
  2897  041C                     	;# 
  2898  041C                     	;# 
  2899  041D                     	;# 
  2900  041E                     	;# 
  2901  041F                     	;# 
  2902  048C                     	;# 
  2903  048C                     	;# 
  2904  048D                     	;# 
  2905  048E                     	;# 
  2906  048F                     	;# 
  2907  048F                     	;# 
  2908  0490                     	;# 
  2909  0491                     	;# 
  2910  0492                     	;# 
  2911  0492                     	;# 
  2912  0493                     	;# 
  2913  0494                     	;# 
  2914  0495                     	;# 
  2915  0495                     	;# 
  2916  0496                     	;# 
  2917  0497                     	;# 
  2918  0498                     	;# 
  2919  0499                     	;# 
  2920  049A                     	;# 
  2921  049B                     	;# 
  2922  049C                     	;# 
  2923  049D                     	;# 
  2924  050C                     	;# 
  2925  050C                     	;# 
  2926  050D                     	;# 
  2927  050E                     	;# 
  2928  050F                     	;# 
  2929  050F                     	;# 
  2930  0510                     	;# 
  2931  0511                     	;# 
  2932  0512                     	;# 
  2933  0512                     	;# 
  2934  0513                     	;# 
  2935  0514                     	;# 
  2936  0515                     	;# 
  2937  0515                     	;# 
  2938  0516                     	;# 
  2939  0517                     	;# 
  2940  0518                     	;# 
  2941  0519                     	;# 
  2942  051A                     	;# 
  2943  051B                     	;# 
  2944  051C                     	;# 
  2945  051D                     	;# 
  2946  058C                     	;# 
  2947  058C                     	;# 
  2948  058D                     	;# 
  2949  058E                     	;# 
  2950  058F                     	;# 
  2951  058F                     	;# 
  2952  0590                     	;# 
  2953  0591                     	;# 
  2954  0592                     	;# 
  2955  0593                     	;# 
  2956  060C                     	;# 
  2957  060D                     	;# 
  2958  060E                     	;# 
  2959  060F                     	;# 
  2960  0610                     	;# 
  2961  0611                     	;# 
  2962  0612                     	;# 
  2963  0613                     	;# 
  2964  0614                     	;# 
  2965  0616                     	;# 
  2966  0617                     	;# 
  2967  0618                     	;# 
  2968  0619                     	;# 
  2969  061A                     	;# 
  2970  061B                     	;# 
  2971  061C                     	;# 
  2972  061D                     	;# 
  2973  061E                     	;# 
  2974  068C                     	;# 
  2975  068D                     	;# 
  2976  068E                     	;# 
  2977  068F                     	;# 
  2978  0690                     	;# 
  2979  0691                     	;# 
  2980  0692                     	;# 
  2981  0693                     	;# 
  2982  0694                     	;# 
  2983  070C                     	;# 
  2984  070D                     	;# 
  2985  070E                     	;# 
  2986  070F                     	;# 
  2987  0710                     	;# 
  2988  0711                     	;# 
  2989  0712                     	;# 
  2990  0713                     	;# 
  2991  0714                     	;# 
  2992  0716                     	;# 
  2993  0717                     	;# 
  2994  0718                     	;# 
  2995  0719                     	;# 
  2996  071A                     	;# 
  2997  071B                     	;# 
  2998  071C                     	;# 
  2999  071D                     	;# 
  3000  071E                     	;# 
  3001  0796                     	;# 
  3002  0797                     	;# 
  3003  0798                     	;# 
  3004  0799                     	;# 
  3005  079A                     	;# 
  3006  079B                     	;# 
  3007  080C                     	;# 
  3008  080D                     	;# 
  3009  080E                     	;# 
  3010  080F                     	;# 
  3011  0810                     	;# 
  3012  0811                     	;# 
  3013  0812                     	;# 
  3014  0813                     	;# 
  3015  0814                     	;# 
  3016  081A                     	;# 
  3017  081B                     	;# 
  3018  081C                     	;# 
  3019  081D                     	;# 
  3020  081E                     	;# 
  3021  081F                     	;# 
  3022  088C                     	;# 
  3023  088D                     	;# 
  3024  088E                     	;# 
  3025  088F                     	;# 
  3026  0890                     	;# 
  3027  0891                     	;# 
  3028  0892                     	;# 
  3029  0893                     	;# 
  3030  0895                     	;# 
  3031  0896                     	;# 
  3032  0897                     	;# 
  3033  0898                     	;# 
  3034  0899                     	;# 
  3035  089A                     	;# 
  3036  089B                     	;# 
  3037  090C                     	;# 
  3038  090E                     	;# 
  3039  090F                     	;# 
  3040  091F                     	;# 
  3041  091F                     	;# 
  3042  098F                     	;# 
  3043  098F                     	;# 
  3044  0990                     	;# 
  3045  0991                     	;# 
  3046  0992                     	;# 
  3047  0993                     	;# 
  3048  0994                     	;# 
  3049  0995                     	;# 
  3050  0996                     	;# 
  3051  0997                     	;# 
  3052  0E0F                     	;# 
  3053  0E10                     	;# 
  3054  0E11                     	;# 
  3055  0E12                     	;# 
  3056  0E13                     	;# 
  3057  0E14                     	;# 
  3058  0E15                     	;# 
  3059  0E16                     	;# 
  3060  0E17                     	;# 
  3061  0E18                     	;# 
  3062  0E19                     	;# 
  3063  0E1A                     	;# 
  3064  0E1B                     	;# 
  3065  0E1C                     	;# 
  3066  0E1D                     	;# 
  3067  0E1E                     	;# 
  3068  0E1F                     	;# 
  3069  0E20                     	;# 
  3070  0E21                     	;# 
  3071  0E22                     	;# 
  3072  0E23                     	;# 
  3073  0E24                     	;# 
  3074  0E25                     	;# 
  3075  0E26                     	;# 
  3076  0E27                     	;# 
  3077  0E28                     	;# 
  3078  0E29                     	;# 
  3079  0E2A                     	;# 
  3080  0E2B                     	;# 
  3081  0E2C                     	;# 
  3082  0E2D                     	;# 
  3083  0E2E                     	;# 
  3084  0E2F                     	;# 
  3085  0E30                     	;# 
  3086  0E31                     	;# 
  3087  0E32                     	;# 
  3088  0E33                     	;# 
  3089  0E34                     	;# 
  3090  0E35                     	;# 
  3091  0E36                     	;# 
  3092  0E37                     	;# 
  3093  0E8F                     	;# 
  3094  0E90                     	;# 
  3095  0E91                     	;# 
  3096  0E92                     	;# 
  3097  0E93                     	;# 
  3098  0E94                     	;# 
  3099  0E95                     	;# 
  3100  0E96                     	;# 
  3101  0E97                     	;# 
  3102  0E9C                     	;# 
  3103  0E9D                     	;# 
  3104  0E9E                     	;# 
  3105  0EA1                     	;# 
  3106  0EA2                     	;# 
  3107  0EA3                     	;# 
  3108  0EA4                     	;# 
  3109  0EA5                     	;# 
  3110  0EA9                     	;# 
  3111  0EAA                     	;# 
  3112  0EAB                     	;# 
  3113  0EAC                     	;# 
  3114  0EB1                     	;# 
  3115  0EB2                     	;# 
  3116  0EB3                     	;# 
  3117  0EB8                     	;# 
  3118  0EB9                     	;# 
  3119  0EBA                     	;# 
  3120  0EBB                     	;# 
  3121  0EBC                     	;# 
  3122  0EBD                     	;# 
  3123  0EBE                     	;# 
  3124  0EC3                     	;# 
  3125  0EC5                     	;# 
  3126  0EC6                     	;# 
  3127  0EC7                     	;# 
  3128  0EC8                     	;# 
  3129  0EC9                     	;# 
  3130  0ECA                     	;# 
  3131  0ECB                     	;# 
  3132  0ECC                     	;# 
  3133  0F10                     	;# 
  3134  0F11                     	;# 
  3135  0F12                     	;# 
  3136  0F13                     	;# 
  3137  0F14                     	;# 
  3138  0F15                     	;# 
  3139  0F16                     	;# 
  3140  0F17                     	;# 
  3141  0F18                     	;# 
  3142  0F19                     	;# 
  3143  0F1A                     	;# 
  3144  0F1B                     	;# 
  3145  0F1C                     	;# 
  3146  0F1D                     	;# 
  3147  0F1E                     	;# 
  3148  0F1F                     	;# 
  3149  0F20                     	;# 
  3150  0F21                     	;# 
  3151  0F22                     	;# 
  3152  0F23                     	;# 
  3153  0F24                     	;# 
  3154  0F25                     	;# 
  3155  0F26                     	;# 
  3156  0F27                     	;# 
  3157  0F38                     	;# 
  3158  0F39                     	;# 
  3159  0F3A                     	;# 
  3160  0F3B                     	;# 
  3161  0F3C                     	;# 
  3162  0F3D                     	;# 
  3163  0F3E                     	;# 
  3164  0F3F                     	;# 
  3165  0F40                     	;# 
  3166  0F41                     	;# 
  3167  0F43                     	;# 
  3168  0F44                     	;# 
  3169  0F45                     	;# 
  3170  0F46                     	;# 
  3171  0F47                     	;# 
  3172  0F48                     	;# 
  3173  0F49                     	;# 
  3174  0F4A                     	;# 
  3175  0F4B                     	;# 
  3176  0F4C                     	;# 
  3177  0F4E                     	;# 
  3178  0F4F                     	;# 
  3179  0F50                     	;# 
  3180  0F51                     	;# 
  3181  0F52                     	;# 
  3182  0F53                     	;# 
  3183  0F54                     	;# 
  3184  0F55                     	;# 
  3185  0F56                     	;# 
  3186  0F57                     	;# 
  3187  0F65                     	;# 
  3188  0F68                     	;# 
  3189  0F69                     	;# 
  3190  0F6A                     	;# 
  3191  0F6B                     	;# 
  3192  0FE4                     	;# 
  3193  0FE5                     	;# 
  3194  0FE6                     	;# 
  3195  0FE7                     	;# 
  3196  0FE8                     	;# 
  3197  0FE9                     	;# 
  3198  0FEA                     	;# 
  3199  0FEB                     	;# 
  3200  0FED                     	;# 
  3201  0FEE                     	;# 
  3202  0FEF                     	;# 
  3203  0000                     	;# 
  3204  0001                     	;# 
  3205  0002                     	;# 
  3206  0003                     	;# 
  3207  0004                     	;# 
  3208  0005                     	;# 
  3209  0006                     	;# 
  3210  0007                     	;# 
  3211  0008                     	;# 
  3212  0009                     	;# 
  3213  000A                     	;# 
  3214  000B                     	;# 
  3215  000C                     	;# 
  3216  000D                     	;# 
  3217  000E                     	;# 
  3218  0010                     	;# 
  3219  0011                     	;# 
  3220  0012                     	;# 
  3221  0013                     	;# 
  3222  0016                     	;# 
  3223  0017                     	;# 
  3224  0018                     	;# 
  3225  001C                     	;# 
  3226  001C                     	;# 
  3227  001D                     	;# 
  3228  001D                     	;# 
  3229  001E                     	;# 
  3230  001F                     	;# 
  3231  008C                     	;# 
  3232  008C                     	;# 
  3233  008D                     	;# 
  3234  008E                     	;# 
  3235  008E                     	;# 
  3236  008F                     	;# 
  3237  0090                     	;# 
  3238  0090                     	;# 
  3239  0091                     	;# 
  3240  0093                     	;# 
  3241  0094                     	;# 
  3242  0095                     	;# 
  3243  0096                     	;# 
  3244  0097                     	;# 
  3245  0098                     	;# 
  3246  0099                     	;# 
  3247  009A                     	;# 
  3248  009B                     	;# 
  3249  009C                     	;# 
  3250  009D                     	;# 
  3251  009E                     	;# 
  3252  010C                     	;# 
  3253  010D                     	;# 
  3254  010E                     	;# 
  3255  010E                     	;# 
  3256  010F                     	;# 
  3257  0110                     	;# 
  3258  0110                     	;# 
  3259  0111                     	;# 
  3260  0112                     	;# 
  3261  0112                     	;# 
  3262  0113                     	;# 
  3263  0114                     	;# 
  3264  0114                     	;# 
  3265  0115                     	;# 
  3266  0116                     	;# 
  3267  0116                     	;# 
  3268  0117                     	;# 
  3269  0119                     	;# 
  3270  0119                     	;# 
  3271  0119                     	;# 
  3272  011A                     	;# 
  3273  011A                     	;# 
  3274  011A                     	;# 
  3275  011B                     	;# 
  3276  011B                     	;# 
  3277  011B                     	;# 
  3278  011B                     	;# 
  3279  011B                     	;# 
  3280  011C                     	;# 
  3281  011C                     	;# 
  3282  011C                     	;# 
  3283  011D                     	;# 
  3284  011D                     	;# 
  3285  011D                     	;# 
  3286  011E                     	;# 
  3287  011E                     	;# 
  3288  011E                     	;# 
  3289  011F                     	;# 
  3290  011F                     	;# 
  3291  011F                     	;# 
  3292  011F                     	;# 
  3293  011F                     	;# 
  3294  018C                     	;# 
  3295  018D                     	;# 
  3296  018E                     	;# 
  3297  018F                     	;# 
  3298  0190                     	;# 
  3299  0191                     	;# 
  3300  0192                     	;# 
  3301  0196                     	;# 
  3302  0197                     	;# 
  3303  0198                     	;# 
  3304  0199                     	;# 
  3305  019A                     	;# 
  3306  019B                     	;# 
  3307  019C                     	;# 
  3308  020C                     	;# 
  3309  020C                     	;# 
  3310  020D                     	;# 
  3311  020E                     	;# 
  3312  020F                     	;# 
  3313  020F                     	;# 
  3314  0210                     	;# 
  3315  0210                     	;# 
  3316  0211                     	;# 
  3317  0211                     	;# 
  3318  0212                     	;# 
  3319  0212                     	;# 
  3320  0213                     	;# 
  3321  0214                     	;# 
  3322  0215                     	;# 
  3323  0215                     	;# 
  3324  0216                     	;# 
  3325  0216                     	;# 
  3326  0217                     	;# 
  3327  0217                     	;# 
  3328  0218                     	;# 
  3329  0218                     	;# 
  3330  0219                     	;# 
  3331  021A                     	;# 
  3332  021B                     	;# 
  3333  021B                     	;# 
  3334  021C                     	;# 
  3335  021C                     	;# 
  3336  021D                     	;# 
  3337  021D                     	;# 
  3338  021E                     	;# 
  3339  021F                     	;# 
  3340  028C                     	;# 
  3341  028C                     	;# 
  3342  028D                     	;# 
  3343  028D                     	;# 
  3344  028E                     	;# 
  3345  028F                     	;# 
  3346  0290                     	;# 
  3347  0290                     	;# 
  3348  0291                     	;# 
  3349  0292                     	;# 
  3350  0292                     	;# 
  3351  0293                     	;# 
  3352  0293                     	;# 
  3353  0294                     	;# 
  3354  0295                     	;# 
  3355  0296                     	;# 
  3356  0296                     	;# 
  3357  0297                     	;# 
  3358  0298                     	;# 
  3359  0298                     	;# 
  3360  0299                     	;# 
  3361  0299                     	;# 
  3362  029A                     	;# 
  3363  029B                     	;# 
  3364  029C                     	;# 
  3365  029C                     	;# 
  3366  029D                     	;# 
  3367  030C                     	;# 
  3368  030C                     	;# 
  3369  030D                     	;# 
  3370  030E                     	;# 
  3371  030F                     	;# 
  3372  0310                     	;# 
  3373  0310                     	;# 
  3374  0311                     	;# 
  3375  0312                     	;# 
  3376  0313                     	;# 
  3377  0314                     	;# 
  3378  0314                     	;# 
  3379  0315                     	;# 
  3380  0316                     	;# 
  3381  0317                     	;# 
  3382  0318                     	;# 
  3383  0318                     	;# 
  3384  0319                     	;# 
  3385  031A                     	;# 
  3386  031B                     	;# 
  3387  031C                     	;# 
  3388  031C                     	;# 
  3389  031D                     	;# 
  3390  031E                     	;# 
  3391  031F                     	;# 
  3392  038C                     	;# 
  3393  038D                     	;# 
  3394  038E                     	;# 
  3395  0390                     	;# 
  3396  0391                     	;# 
  3397  0392                     	;# 
  3398  040C                     	;# 
  3399  040D                     	;# 
  3400  040E                     	;# 
  3401  040F                     	;# 
  3402  0410                     	;# 
  3403  0411                     	;# 
  3404  0416                     	;# 
  3405  0416                     	;# 
  3406  0417                     	;# 
  3407  0418                     	;# 
  3408  0418                     	;# 
  3409  0419                     	;# 
  3410  041A                     	;# 
  3411  041A                     	;# 
  3412  041B                     	;# 
  3413  041C                     	;# 
  3414  041C                     	;# 
  3415  041D                     	;# 
  3416  041E                     	;# 
  3417  041F                     	;# 
  3418  048C                     	;# 
  3419  048C                     	;# 
  3420  048D                     	;# 
  3421  048E                     	;# 
  3422  048F                     	;# 
  3423  048F                     	;# 
  3424  0490                     	;# 
  3425  0491                     	;# 
  3426  0492                     	;# 
  3427  0492                     	;# 
  3428  0493                     	;# 
  3429  0494                     	;# 
  3430  0495                     	;# 
  3431  0495                     	;# 
  3432  0496                     	;# 
  3433  0497                     	;# 
  3434  0498                     	;# 
  3435  0499                     	;# 
  3436  049A                     	;# 
  3437  049B                     	;# 
  3438  049C                     	;# 
  3439  049D                     	;# 
  3440  050C                     	;# 
  3441  050C                     	;# 
  3442  050D                     	;# 
  3443  050E                     	;# 
  3444  050F                     	;# 
  3445  050F                     	;# 
  3446  0510                     	;# 
  3447  0511                     	;# 
  3448  0512                     	;# 
  3449  0512                     	;# 
  3450  0513                     	;# 
  3451  0514                     	;# 
  3452  0515                     	;# 
  3453  0515                     	;# 
  3454  0516                     	;# 
  3455  0517                     	;# 
  3456  0518                     	;# 
  3457  0519                     	;# 
  3458  051A                     	;# 
  3459  051B                     	;# 
  3460  051C                     	;# 
  3461  051D                     	;# 
  3462  058C                     	;# 
  3463  058C                     	;# 
  3464  058D                     	;# 
  3465  058E                     	;# 
  3466  058F                     	;# 
  3467  058F                     	;# 
  3468  0590                     	;# 
  3469  0591                     	;# 
  3470  0592                     	;# 
  3471  0593                     	;# 
  3472  060C                     	;# 
  3473  060D                     	;# 
  3474  060E                     	;# 
  3475  060F                     	;# 
  3476  0610                     	;# 
  3477  0611                     	;# 
  3478  0612                     	;# 
  3479  0613                     	;# 
  3480  0614                     	;# 
  3481  0616                     	;# 
  3482  0617                     	;# 
  3483  0618                     	;# 
  3484  0619                     	;# 
  3485  061A                     	;# 
  3486  061B                     	;# 
  3487  061C                     	;# 
  3488  061D                     	;# 
  3489  061E                     	;# 
  3490  068C                     	;# 
  3491  068D                     	;# 
  3492  068E                     	;# 
  3493  068F                     	;# 
  3494  0690                     	;# 
  3495  0691                     	;# 
  3496  0692                     	;# 
  3497  0693                     	;# 
  3498  0694                     	;# 
  3499  070C                     	;# 
  3500  070D                     	;# 
  3501  070E                     	;# 
  3502  070F                     	;# 
  3503  0710                     	;# 
  3504  0711                     	;# 
  3505  0712                     	;# 
  3506  0713                     	;# 
  3507  0714                     	;# 
  3508  0716                     	;# 
  3509  0717                     	;# 
  3510  0718                     	;# 
  3511  0719                     	;# 
  3512  071A                     	;# 
  3513  071B                     	;# 
  3514  071C                     	;# 
  3515  071D                     	;# 
  3516  071E                     	;# 
  3517  0796                     	;# 
  3518  0797                     	;# 
  3519  0798                     	;# 
  3520  0799                     	;# 
  3521  079A                     	;# 
  3522  079B                     	;# 
  3523  080C                     	;# 
  3524  080D                     	;# 
  3525  080E                     	;# 
  3526  080F                     	;# 
  3527  0810                     	;# 
  3528  0811                     	;# 
  3529  0812                     	;# 
  3530  0813                     	;# 
  3531  0814                     	;# 
  3532  081A                     	;# 
  3533  081B                     	;# 
  3534  081C                     	;# 
  3535  081D                     	;# 
  3536  081E                     	;# 
  3537  081F                     	;# 
  3538  088C                     	;# 
  3539  088D                     	;# 
  3540  088E                     	;# 
  3541  088F                     	;# 
  3542  0890                     	;# 
  3543  0891                     	;# 
  3544  0892                     	;# 
  3545  0893                     	;# 
  3546  0895                     	;# 
  3547  0896                     	;# 
  3548  0897                     	;# 
  3549  0898                     	;# 
  3550  0899                     	;# 
  3551  089A                     	;# 
  3552  089B                     	;# 
  3553  090C                     	;# 
  3554  090E                     	;# 
  3555  090F                     	;# 
  3556  091F                     	;# 
  3557  091F                     	;# 
  3558  098F                     	;# 
  3559  098F                     	;# 
  3560  0990                     	;# 
  3561  0991                     	;# 
  3562  0992                     	;# 
  3563  0993                     	;# 
  3564  0994                     	;# 
  3565  0995                     	;# 
  3566  0996                     	;# 
  3567  0997                     	;# 
  3568  0E0F                     	;# 
  3569  0E10                     	;# 
  3570  0E11                     	;# 
  3571  0E12                     	;# 
  3572  0E13                     	;# 
  3573  0E14                     	;# 
  3574  0E15                     	;# 
  3575  0E16                     	;# 
  3576  0E17                     	;# 
  3577  0E18                     	;# 
  3578  0E19                     	;# 
  3579  0E1A                     	;# 
  3580  0E1B                     	;# 
  3581  0E1C                     	;# 
  3582  0E1D                     	;# 
  3583  0E1E                     	;# 
  3584  0E1F                     	;# 
  3585  0E20                     	;# 
  3586  0E21                     	;# 
  3587  0E22                     	;# 
  3588  0E23                     	;# 
  3589  0E24                     	;# 
  3590  0E25                     	;# 
  3591  0E26                     	;# 
  3592  0E27                     	;# 
  3593  0E28                     	;# 
  3594  0E29                     	;# 
  3595  0E2A                     	;# 
  3596  0E2B                     	;# 
  3597  0E2C                     	;# 
  3598  0E2D                     	;# 
  3599  0E2E                     	;# 
  3600  0E2F                     	;# 
  3601  0E30                     	;# 
  3602  0E31                     	;# 
  3603  0E32                     	;# 
  3604  0E33                     	;# 
  3605  0E34                     	;# 
  3606  0E35                     	;# 
  3607  0E36                     	;# 
  3608  0E37                     	;# 
  3609  0E8F                     	;# 
  3610  0E90                     	;# 
  3611  0E91                     	;# 
  3612  0E92                     	;# 
  3613  0E93                     	;# 
  3614  0E94                     	;# 
  3615  0E95                     	;# 
  3616  0E96                     	;# 
  3617  0E97                     	;# 
  3618  0E9C                     	;# 
  3619  0E9D                     	;# 
  3620  0E9E                     	;# 
  3621  0EA1                     	;# 
  3622  0EA2                     	;# 
  3623  0EA3                     	;# 
  3624  0EA4                     	;# 
  3625  0EA5                     	;# 
  3626  0EA9                     	;# 
  3627  0EAA                     	;# 
  3628  0EAB                     	;# 
  3629  0EAC                     	;# 
  3630  0EB1                     	;# 
  3631  0EB2                     	;# 
  3632  0EB3                     	;# 
  3633  0EB8                     	;# 
  3634  0EB9                     	;# 
  3635  0EBA                     	;# 
  3636  0EBB                     	;# 
  3637  0EBC                     	;# 
  3638  0EBD                     	;# 
  3639  0EBE                     	;# 
  3640  0EC3                     	;# 
  3641  0EC5                     	;# 
  3642  0EC6                     	;# 
  3643  0EC7                     	;# 
  3644  0EC8                     	;# 
  3645  0EC9                     	;# 
  3646  0ECA                     	;# 
  3647  0ECB                     	;# 
  3648  0ECC                     	;# 
  3649  0F10                     	;# 
  3650  0F11                     	;# 
  3651  0F12                     	;# 
  3652  0F13                     	;# 
  3653  0F14                     	;# 
  3654  0F15                     	;# 
  3655  0F16                     	;# 
  3656  0F17                     	;# 
  3657  0F18                     	;# 
  3658  0F19                     	;# 
  3659  0F1A                     	;# 
  3660  0F1B                     	;# 
  3661  0F1C                     	;# 
  3662  0F1D                     	;# 
  3663  0F1E                     	;# 
  3664  0F1F                     	;# 
  3665  0F20                     	;# 
  3666  0F21                     	;# 
  3667  0F22                     	;# 
  3668  0F23                     	;# 
  3669  0F24                     	;# 
  3670  0F25                     	;# 
  3671  0F26                     	;# 
  3672  0F27                     	;# 
  3673  0F38                     	;# 
  3674  0F39                     	;# 
  3675  0F3A                     	;# 
  3676  0F3B                     	;# 
  3677  0F3C                     	;# 
  3678  0F3D                     	;# 
  3679  0F3E                     	;# 
  3680  0F3F                     	;# 
  3681  0F40                     	;# 
  3682  0F41                     	;# 
  3683  0F43                     	;# 
  3684  0F44                     	;# 
  3685  0F45                     	;# 
  3686  0F46                     	;# 
  3687  0F47                     	;# 
  3688  0F48                     	;# 
  3689  0F49                     	;# 
  3690  0F4A                     	;# 
  3691  0F4B                     	;# 
  3692  0F4C                     	;# 
  3693  0F4E                     	;# 
  3694  0F4F                     	;# 
  3695  0F50                     	;# 
  3696  0F51                     	;# 
  3697  0F52                     	;# 
  3698  0F53                     	;# 
  3699  0F54                     	;# 
  3700  0F55                     	;# 
  3701  0F56                     	;# 
  3702  0F57                     	;# 
  3703  0F65                     	;# 
  3704  0F68                     	;# 
  3705  0F69                     	;# 
  3706  0F6A                     	;# 
  3707  0F6B                     	;# 
  3708  0FE4                     	;# 
  3709  0FE5                     	;# 
  3710  0FE6                     	;# 
  3711  0FE7                     	;# 
  3712  0FE8                     	;# 
  3713  0FE9                     	;# 
  3714  0FEA                     	;# 
  3715  0FEB                     	;# 
  3716  0FED                     	;# 
  3717  0FEE                     	;# 
  3718  0FEF                     	;# 
  3719  0000                     	;# 
  3720  0001                     	;# 
  3721  0002                     	;# 
  3722  0003                     	;# 
  3723  0004                     	;# 
  3724  0005                     	;# 
  3725  0006                     	;# 
  3726  0007                     	;# 
  3727  0008                     	;# 
  3728  0009                     	;# 
  3729  000A                     	;# 
  3730  000B                     	;# 
  3731  000C                     	;# 
  3732  000D                     	;# 
  3733  000E                     	;# 
  3734  0010                     	;# 
  3735  0011                     	;# 
  3736  0012                     	;# 
  3737  0013                     	;# 
  3738  0016                     	;# 
  3739  0017                     	;# 
  3740  0018                     	;# 
  3741  001C                     	;# 
  3742  001C                     	;# 
  3743  001D                     	;# 
  3744  001D                     	;# 
  3745  001E                     	;# 
  3746  001F                     	;# 
  3747  008C                     	;# 
  3748  008C                     	;# 
  3749  008D                     	;# 
  3750  008E                     	;# 
  3751  008E                     	;# 
  3752  008F                     	;# 
  3753  0090                     	;# 
  3754  0090                     	;# 
  3755  0091                     	;# 
  3756  0093                     	;# 
  3757  0094                     	;# 
  3758  0095                     	;# 
  3759  0096                     	;# 
  3760  0097                     	;# 
  3761  0098                     	;# 
  3762  0099                     	;# 
  3763  009A                     	;# 
  3764  009B                     	;# 
  3765  009C                     	;# 
  3766  009D                     	;# 
  3767  009E                     	;# 
  3768  010C                     	;# 
  3769  010D                     	;# 
  3770  010E                     	;# 
  3771  010E                     	;# 
  3772  010F                     	;# 
  3773  0110                     	;# 
  3774  0110                     	;# 
  3775  0111                     	;# 
  3776  0112                     	;# 
  3777  0112                     	;# 
  3778  0113                     	;# 
  3779  0114                     	;# 
  3780  0114                     	;# 
  3781  0115                     	;# 
  3782  0116                     	;# 
  3783  0116                     	;# 
  3784  0117                     	;# 
  3785  0119                     	;# 
  3786  0119                     	;# 
  3787  0119                     	;# 
  3788  011A                     	;# 
  3789  011A                     	;# 
  3790  011A                     	;# 
  3791  011B                     	;# 
  3792  011B                     	;# 
  3793  011B                     	;# 
  3794  011B                     	;# 
  3795  011B                     	;# 
  3796  011C                     	;# 
  3797  011C                     	;# 
  3798  011C                     	;# 
  3799  011D                     	;# 
  3800  011D                     	;# 
  3801  011D                     	;# 
  3802  011E                     	;# 
  3803  011E                     	;# 
  3804  011E                     	;# 
  3805  011F                     	;# 
  3806  011F                     	;# 
  3807  011F                     	;# 
  3808  011F                     	;# 
  3809  011F                     	;# 
  3810  018C                     	;# 
  3811  018D                     	;# 
  3812  018E                     	;# 
  3813  018F                     	;# 
  3814  0190                     	;# 
  3815  0191                     	;# 
  3816  0192                     	;# 
  3817  0196                     	;# 
  3818  0197                     	;# 
  3819  0198                     	;# 
  3820  0199                     	;# 
  3821  019A                     	;# 
  3822  019B                     	;# 
  3823  019C                     	;# 
  3824  020C                     	;# 
  3825  020C                     	;# 
  3826  020D                     	;# 
  3827  020E                     	;# 
  3828  020F                     	;# 
  3829  020F                     	;# 
  3830  0210                     	;# 
  3831  0210                     	;# 
  3832  0211                     	;# 
  3833  0211                     	;# 
  3834  0212                     	;# 
  3835  0212                     	;# 
  3836  0213                     	;# 
  3837  0214                     	;# 
  3838  0215                     	;# 
  3839  0215                     	;# 
  3840  0216                     	;# 
  3841  0216                     	;# 
  3842  0217                     	;# 
  3843  0217                     	;# 
  3844  0218                     	;# 
  3845  0218                     	;# 
  3846  0219                     	;# 
  3847  021A                     	;# 
  3848  021B                     	;# 
  3849  021B                     	;# 
  3850  021C                     	;# 
  3851  021C                     	;# 
  3852  021D                     	;# 
  3853  021D                     	;# 
  3854  021E                     	;# 
  3855  021F                     	;# 
  3856  028C                     	;# 
  3857  028C                     	;# 
  3858  028D                     	;# 
  3859  028D                     	;# 
  3860  028E                     	;# 
  3861  028F                     	;# 
  3862  0290                     	;# 
  3863  0290                     	;# 
  3864  0291                     	;# 
  3865  0292                     	;# 
  3866  0292                     	;# 
  3867  0293                     	;# 
  3868  0293                     	;# 
  3869  0294                     	;# 
  3870  0295                     	;# 
  3871  0296                     	;# 
  3872  0296                     	;# 
  3873  0297                     	;# 
  3874  0298                     	;# 
  3875  0298                     	;# 
  3876  0299                     	;# 
  3877  0299                     	;# 
  3878  029A                     	;# 
  3879  029B                     	;# 
  3880  029C                     	;# 
  3881  029C                     	;# 
  3882  029D                     	;# 
  3883  030C                     	;# 
  3884  030C                     	;# 
  3885  030D                     	;# 
  3886  030E                     	;# 
  3887  030F                     	;# 
  3888  0310                     	;# 
  3889  0310                     	;# 
  3890  0311                     	;# 
  3891  0312                     	;# 
  3892  0313                     	;# 
  3893  0314                     	;# 
  3894  0314                     	;# 
  3895  0315                     	;# 
  3896  0316                     	;# 
  3897  0317                     	;# 
  3898  0318                     	;# 
  3899  0318                     	;# 
  3900  0319                     	;# 
  3901  031A                     	;# 
  3902  031B                     	;# 
  3903  031C                     	;# 
  3904  031C                     	;# 
  3905  031D                     	;# 
  3906  031E                     	;# 
  3907  031F                     	;# 
  3908  038C                     	;# 
  3909  038D                     	;# 
  3910  038E                     	;# 
  3911  0390                     	;# 
  3912  0391                     	;# 
  3913  0392                     	;# 
  3914  040C                     	;# 
  3915  040D                     	;# 
  3916  040E                     	;# 
  3917  040F                     	;# 
  3918  0410                     	;# 
  3919  0411                     	;# 
  3920  0416                     	;# 
  3921  0416                     	;# 
  3922  0417                     	;# 
  3923  0418                     	;# 
  3924  0418                     	;# 
  3925  0419                     	;# 
  3926  041A                     	;# 
  3927  041A                     	;# 
  3928  041B                     	;# 
  3929  041C                     	;# 
  3930  041C                     	;# 
  3931  041D                     	;# 
  3932  041E                     	;# 
  3933  041F                     	;# 
  3934  048C                     	;# 
  3935  048C                     	;# 
  3936  048D                     	;# 
  3937  048E                     	;# 
  3938  048F                     	;# 
  3939  048F                     	;# 
  3940  0490                     	;# 
  3941  0491                     	;# 
  3942  0492                     	;# 
  3943  0492                     	;# 
  3944  0493                     	;# 
  3945  0494                     	;# 
  3946  0495                     	;# 
  3947  0495                     	;# 
  3948  0496                     	;# 
  3949  0497                     	;# 
  3950  0498                     	;# 
  3951  0499                     	;# 
  3952  049A                     	;# 
  3953  049B                     	;# 
  3954  049C                     	;# 
  3955  049D                     	;# 
  3956  050C                     	;# 
  3957  050C                     	;# 
  3958  050D                     	;# 
  3959  050E                     	;# 
  3960  050F                     	;# 
  3961  050F                     	;# 
  3962  0510                     	;# 
  3963  0511                     	;# 
  3964  0512                     	;# 
  3965  0512                     	;# 
  3966  0513                     	;# 
  3967  0514                     	;# 
  3968  0515                     	;# 
  3969  0515                     	;# 
  3970  0516                     	;# 
  3971  0517                     	;# 
  3972  0518                     	;# 
  3973  0519                     	;# 
  3974  051A                     	;# 
  3975  051B                     	;# 
  3976  051C                     	;# 
  3977  051D                     	;# 
  3978  058C                     	;# 
  3979  058C                     	;# 
  3980  058D                     	;# 
  3981  058E                     	;# 
  3982  058F                     	;# 
  3983  058F                     	;# 
  3984  0590                     	;# 
  3985  0591                     	;# 
  3986  0592                     	;# 
  3987  0593                     	;# 
  3988  060C                     	;# 
  3989  060D                     	;# 
  3990  060E                     	;# 
  3991  060F                     	;# 
  3992  0610                     	;# 
  3993  0611                     	;# 
  3994  0612                     	;# 
  3995  0613                     	;# 
  3996  0614                     	;# 
  3997  0616                     	;# 
  3998  0617                     	;# 
  3999  0618                     	;# 
  4000  0619                     	;# 
  4001  061A                     	;# 
  4002  061B                     	;# 
  4003  061C                     	;# 
  4004  061D                     	;# 
  4005  061E                     	;# 
  4006  068C                     	;# 
  4007  068D                     	;# 
  4008  068E                     	;# 
  4009  068F                     	;# 
  4010  0690                     	;# 
  4011  0691                     	;# 
  4012  0692                     	;# 
  4013  0693                     	;# 
  4014  0694                     	;# 
  4015  070C                     	;# 
  4016  070D                     	;# 
  4017  070E                     	;# 
  4018  070F                     	;# 
  4019  0710                     	;# 
  4020  0711                     	;# 
  4021  0712                     	;# 
  4022  0713                     	;# 
  4023  0714                     	;# 
  4024  0716                     	;# 
  4025  0717                     	;# 
  4026  0718                     	;# 
  4027  0719                     	;# 
  4028  071A                     	;# 
  4029  071B                     	;# 
  4030  071C                     	;# 
  4031  071D                     	;# 
  4032  071E                     	;# 
  4033  0796                     	;# 
  4034  0797                     	;# 
  4035  0798                     	;# 
  4036  0799                     	;# 
  4037  079A                     	;# 
  4038  079B                     	;# 
  4039  080C                     	;# 
  4040  080D                     	;# 
  4041  080E                     	;# 
  4042  080F                     	;# 
  4043  0810                     	;# 
  4044  0811                     	;# 
  4045  0812                     	;# 
  4046  0813                     	;# 
  4047  0814                     	;# 
  4048  081A                     	;# 
  4049  081B                     	;# 
  4050  081C                     	;# 
  4051  081D                     	;# 
  4052  081E                     	;# 
  4053  081F                     	;# 
  4054  088C                     	;# 
  4055  088D                     	;# 
  4056  088E                     	;# 
  4057  088F                     	;# 
  4058  0890                     	;# 
  4059  0891                     	;# 
  4060  0892                     	;# 
  4061  0893                     	;# 
  4062  0895                     	;# 
  4063  0896                     	;# 
  4064  0897                     	;# 
  4065  0898                     	;# 
  4066  0899                     	;# 
  4067  089A                     	;# 
  4068  089B                     	;# 
  4069  090C                     	;# 
  4070  090E                     	;# 
  4071  090F                     	;# 
  4072  091F                     	;# 
  4073  091F                     	;# 
  4074  098F                     	;# 
  4075  098F                     	;# 
  4076  0990                     	;# 
  4077  0991                     	;# 
  4078  0992                     	;# 
  4079  0993                     	;# 
  4080  0994                     	;# 
  4081  0995                     	;# 
  4082  0996                     	;# 
  4083  0997                     	;# 
  4084  0E0F                     	;# 
  4085  0E10                     	;# 
  4086  0E11                     	;# 
  4087  0E12                     	;# 
  4088  0E13                     	;# 
  4089  0E14                     	;# 
  4090  0E15                     	;# 
  4091  0E16                     	;# 
  4092  0E17                     	;# 
  4093  0E18                     	;# 
  4094  0E19                     	;# 
  4095  0E1A                     	;# 
  4096  0E1B                     	;# 
  4097  0E1C                     	;# 
  4098  0E1D                     	;# 
  4099  0E1E                     	;# 
  4100  0E1F                     	;# 
  4101  0E20                     	;# 
  4102  0E21                     	;# 
  4103  0E22                     	;# 
  4104  0E23                     	;# 
  4105  0E24                     	;# 
  4106  0E25                     	;# 
  4107  0E26                     	;# 
  4108  0E27                     	;# 
  4109  0E28                     	;# 
  4110  0E29                     	;# 
  4111  0E2A                     	;# 
  4112  0E2B                     	;# 
  4113  0E2C                     	;# 
  4114  0E2D                     	;# 
  4115  0E2E                     	;# 
  4116  0E2F                     	;# 
  4117  0E30                     	;# 
  4118  0E31                     	;# 
  4119  0E32                     	;# 
  4120  0E33                     	;# 
  4121  0E34                     	;# 
  4122  0E35                     	;# 
  4123  0E36                     	;# 
  4124  0E37                     	;# 
  4125  0E8F                     	;# 
  4126  0E90                     	;# 
  4127  0E91                     	;# 
  4128  0E92                     	;# 
  4129  0E93                     	;# 
  4130  0E94                     	;# 
  4131  0E95                     	;# 
  4132  0E96                     	;# 
  4133  0E97                     	;# 
  4134  0E9C                     	;# 
  4135  0E9D                     	;# 
  4136  0E9E                     	;# 
  4137  0EA1                     	;# 
  4138  0EA2                     	;# 
  4139  0EA3                     	;# 
  4140  0EA4                     	;# 
  4141  0EA5                     	;# 
  4142  0EA9                     	;# 
  4143  0EAA                     	;# 
  4144  0EAB                     	;# 
  4145  0EAC                     	;# 
  4146  0EB1                     	;# 
  4147  0EB2                     	;# 
  4148  0EB3                     	;# 
  4149  0EB8                     	;# 
  4150  0EB9                     	;# 
  4151  0EBA                     	;# 
  4152  0EBB                     	;# 
  4153  0EBC                     	;# 
  4154  0EBD                     	;# 
  4155  0EBE                     	;# 
  4156  0EC3                     	;# 
  4157  0EC5                     	;# 
  4158  0EC6                     	;# 
  4159  0EC7                     	;# 
  4160  0EC8                     	;# 
  4161  0EC9                     	;# 
  4162  0ECA                     	;# 
  4163  0ECB                     	;# 
  4164  0ECC                     	;# 
  4165  0F10                     	;# 
  4166  0F11                     	;# 
  4167  0F12                     	;# 
  4168  0F13                     	;# 
  4169  0F14                     	;# 
  4170  0F15                     	;# 
  4171  0F16                     	;# 
  4172  0F17                     	;# 
  4173  0F18                     	;# 
  4174  0F19                     	;# 
  4175  0F1A                     	;# 
  4176  0F1B                     	;# 
  4177  0F1C                     	;# 
  4178  0F1D                     	;# 
  4179  0F1E                     	;# 
  4180  0F1F                     	;# 
  4181  0F20                     	;# 
  4182  0F21                     	;# 
  4183  0F22                     	;# 
  4184  0F23                     	;# 
  4185  0F24                     	;# 
  4186  0F25                     	;# 
  4187  0F26                     	;# 
  4188  0F27                     	;# 
  4189  0F38                     	;# 
  4190  0F39                     	;# 
  4191  0F3A                     	;# 
  4192  0F3B                     	;# 
  4193  0F3C                     	;# 
  4194  0F3D                     	;# 
  4195  0F3E                     	;# 
  4196  0F3F                     	;# 
  4197  0F40                     	;# 
  4198  0F41                     	;# 
  4199  0F43                     	;# 
  4200  0F44                     	;# 
  4201  0F45                     	;# 
  4202  0F46                     	;# 
  4203  0F47                     	;# 
  4204  0F48                     	;# 
  4205  0F49                     	;# 
  4206  0F4A                     	;# 
  4207  0F4B                     	;# 
  4208  0F4C                     	;# 
  4209  0F4E                     	;# 
  4210  0F4F                     	;# 
  4211  0F50                     	;# 
  4212  0F51                     	;# 
  4213  0F52                     	;# 
  4214  0F53                     	;# 
  4215  0F54                     	;# 
  4216  0F55                     	;# 
  4217  0F56                     	;# 
  4218  0F57                     	;# 
  4219  0F65                     	;# 
  4220  0F68                     	;# 
  4221  0F69                     	;# 
  4222  0F6A                     	;# 
  4223  0F6B                     	;# 
  4224  0FE4                     	;# 
  4225  0FE5                     	;# 
  4226  0FE6                     	;# 
  4227  0FE7                     	;# 
  4228  0FE8                     	;# 
  4229  0FE9                     	;# 
  4230  0FEA                     	;# 
  4231  0FEB                     	;# 
  4232  0FED                     	;# 
  4233  0FEE                     	;# 
  4234  0FEF                     	;# 
  4235  0000                     	;# 
  4236  0001                     	;# 
  4237  0002                     	;# 
  4238  0003                     	;# 
  4239  0004                     	;# 
  4240  0005                     	;# 
  4241  0006                     	;# 
  4242  0007                     	;# 
  4243  0008                     	;# 
  4244  0009                     	;# 
  4245  000A                     	;# 
  4246  000B                     	;# 
  4247  000C                     	;# 
  4248  000D                     	;# 
  4249  000E                     	;# 
  4250  0010                     	;# 
  4251  0011                     	;# 
  4252  0012                     	;# 
  4253  0013                     	;# 
  4254  0016                     	;# 
  4255  0017                     	;# 
  4256  0018                     	;# 
  4257  001C                     	;# 
  4258  001C                     	;# 
  4259  001D                     	;# 
  4260  001D                     	;# 
  4261  001E                     	;# 
  4262  001F                     	;# 
  4263  008C                     	;# 
  4264  008C                     	;# 
  4265  008D                     	;# 
  4266  008E                     	;# 
  4267  008E                     	;# 
  4268  008F                     	;# 
  4269  0090                     	;# 
  4270  0090                     	;# 
  4271  0091                     	;# 
  4272  0093                     	;# 
  4273  0094                     	;# 
  4274  0095                     	;# 
  4275  0096                     	;# 
  4276  0097                     	;# 
  4277  0098                     	;# 
  4278  0099                     	;# 
  4279  009A                     	;# 
  4280  009B                     	;# 
  4281  009C                     	;# 
  4282  009D                     	;# 
  4283  009E                     	;# 
  4284  010C                     	;# 
  4285  010D                     	;# 
  4286  010E                     	;# 
  4287  010E                     	;# 
  4288  010F                     	;# 
  4289  0110                     	;# 
  4290  0110                     	;# 
  4291  0111                     	;# 
  4292  0112                     	;# 
  4293  0112                     	;# 
  4294  0113                     	;# 
  4295  0114                     	;# 
  4296  0114                     	;# 
  4297  0115                     	;# 
  4298  0116                     	;# 
  4299  0116                     	;# 
  4300  0117                     	;# 
  4301  0119                     	;# 
  4302  0119                     	;# 
  4303  0119                     	;# 
  4304  011A                     	;# 
  4305  011A                     	;# 
  4306  011A                     	;# 
  4307  011B                     	;# 
  4308  011B                     	;# 
  4309  011B                     	;# 
  4310  011B                     	;# 
  4311  011B                     	;# 
  4312  011C                     	;# 
  4313  011C                     	;# 
  4314  011C                     	;# 
  4315  011D                     	;# 
  4316  011D                     	;# 
  4317  011D                     	;# 
  4318  011E                     	;# 
  4319  011E                     	;# 
  4320  011E                     	;# 
  4321  011F                     	;# 
  4322  011F                     	;# 
  4323  011F                     	;# 
  4324  011F                     	;# 
  4325  011F                     	;# 
  4326  018C                     	;# 
  4327  018D                     	;# 
  4328  018E                     	;# 
  4329  018F                     	;# 
  4330  0190                     	;# 
  4331  0191                     	;# 
  4332  0192                     	;# 
  4333  0196                     	;# 
  4334  0197                     	;# 
  4335  0198                     	;# 
  4336  0199                     	;# 
  4337  019A                     	;# 
  4338  019B                     	;# 
  4339  019C                     	;# 
  4340  020C                     	;# 
  4341  020C                     	;# 
  4342  020D                     	;# 
  4343  020E                     	;# 
  4344  020F                     	;# 
  4345  020F                     	;# 
  4346  0210                     	;# 
  4347  0210                     	;# 
  4348  0211                     	;# 
  4349  0211                     	;# 
  4350  0212                     	;# 
  4351  0212                     	;# 
  4352  0213                     	;# 
  4353  0214                     	;# 
  4354  0215                     	;# 
  4355  0215                     	;# 
  4356  0216                     	;# 
  4357  0216                     	;# 
  4358  0217                     	;# 
  4359  0217                     	;# 
  4360  0218                     	;# 
  4361  0218                     	;# 
  4362  0219                     	;# 
  4363  021A                     	;# 
  4364  021B                     	;# 
  4365  021B                     	;# 
  4366  021C                     	;# 
  4367  021C                     	;# 
  4368  021D                     	;# 
  4369  021D                     	;# 
  4370  021E                     	;# 
  4371  021F                     	;# 
  4372  028C                     	;# 
  4373  028C                     	;# 
  4374  028D                     	;# 
  4375  028D                     	;# 
  4376  028E                     	;# 
  4377  028F                     	;# 
  4378  0290                     	;# 
  4379  0290                     	;# 
  4380  0291                     	;# 
  4381  0292                     	;# 
  4382  0292                     	;# 
  4383  0293                     	;# 
  4384  0293                     	;# 
  4385  0294                     	;# 
  4386  0295                     	;# 
  4387  0296                     	;# 
  4388  0296                     	;# 
  4389  0297                     	;# 
  4390  0298                     	;# 
  4391  0298                     	;# 
  4392  0299                     	;# 
  4393  0299                     	;# 
  4394  029A                     	;# 
  4395  029B                     	;# 
  4396  029C                     	;# 
  4397  029C                     	;# 
  4398  029D                     	;# 
  4399  030C                     	;# 
  4400  030C                     	;# 
  4401  030D                     	;# 
  4402  030E                     	;# 
  4403  030F                     	;# 
  4404  0310                     	;# 
  4405  0310                     	;# 
  4406  0311                     	;# 
  4407  0312                     	;# 
  4408  0313                     	;# 
  4409  0314                     	;# 
  4410  0314                     	;# 
  4411  0315                     	;# 
  4412  0316                     	;# 
  4413  0317                     	;# 
  4414  0318                     	;# 
  4415  0318                     	;# 
  4416  0319                     	;# 
  4417  031A                     	;# 
  4418  031B                     	;# 
  4419  031C                     	;# 
  4420  031C                     	;# 
  4421  031D                     	;# 
  4422  031E                     	;# 
  4423  031F                     	;# 
  4424  038C                     	;# 
  4425  038D                     	;# 
  4426  038E                     	;# 
  4427  0390                     	;# 
  4428  0391                     	;# 
  4429  0392                     	;# 
  4430  040C                     	;# 
  4431  040D                     	;# 
  4432  040E                     	;# 
  4433  040F                     	;# 
  4434  0410                     	;# 
  4435  0411                     	;# 
  4436  0416                     	;# 
  4437  0416                     	;# 
  4438  0417                     	;# 
  4439  0418                     	;# 
  4440  0418                     	;# 
  4441  0419                     	;# 
  4442  041A                     	;# 
  4443  041A                     	;# 
  4444  041B                     	;# 
  4445  041C                     	;# 
  4446  041C                     	;# 
  4447  041D                     	;# 
  4448  041E                     	;# 
  4449  041F                     	;# 
  4450  048C                     	;# 
  4451  048C                     	;# 
  4452  048D                     	;# 
  4453  048E                     	;# 
  4454  048F                     	;# 
  4455  048F                     	;# 
  4456  0490                     	;# 
  4457  0491                     	;# 
  4458  0492                     	;# 
  4459  0492                     	;# 
  4460  0493                     	;# 
  4461  0494                     	;# 
  4462  0495                     	;# 
  4463  0495                     	;# 
  4464  0496                     	;# 
  4465  0497                     	;# 
  4466  0498                     	;# 
  4467  0499                     	;# 
  4468  049A                     	;# 
  4469  049B                     	;# 
  4470  049C                     	;# 
  4471  049D                     	;# 
  4472  050C                     	;# 
  4473  050C                     	;# 
  4474  050D                     	;# 
  4475  050E                     	;# 
  4476  050F                     	;# 
  4477  050F                     	;# 
  4478  0510                     	;# 
  4479  0511                     	;# 
  4480  0512                     	;# 
  4481  0512                     	;# 
  4482  0513                     	;# 
  4483  0514                     	;# 
  4484  0515                     	;# 
  4485  0515                     	;# 
  4486  0516                     	;# 
  4487  0517                     	;# 
  4488  0518                     	;# 
  4489  0519                     	;# 
  4490  051A                     	;# 
  4491  051B                     	;# 
  4492  051C                     	;# 
  4493  051D                     	;# 
  4494  058C                     	;# 
  4495  058C                     	;# 
  4496  058D                     	;# 
  4497  058E                     	;# 
  4498  058F                     	;# 
  4499  058F                     	;# 
  4500  0590                     	;# 
  4501  0591                     	;# 
  4502  0592                     	;# 
  4503  0593                     	;# 
  4504  060C                     	;# 
  4505  060D                     	;# 
  4506  060E                     	;# 
  4507  060F                     	;# 
  4508  0610                     	;# 
  4509  0611                     	;# 
  4510  0612                     	;# 
  4511  0613                     	;# 
  4512  0614                     	;# 
  4513  0616                     	;# 
  4514  0617                     	;# 
  4515  0618                     	;# 
  4516  0619                     	;# 
  4517  061A                     	;# 
  4518  061B                     	;# 
  4519  061C                     	;# 
  4520  061D                     	;# 
  4521  061E                     	;# 
  4522  068C                     	;# 
  4523  068D                     	;# 
  4524  068E                     	;# 
  4525  068F                     	;# 
  4526  0690                     	;# 
  4527  0691                     	;# 
  4528  0692                     	;# 
  4529  0693                     	;# 
  4530  0694                     	;# 
  4531  070C                     	;# 
  4532  070D                     	;# 
  4533  070E                     	;# 
  4534  070F                     	;# 
  4535  0710                     	;# 
  4536  0711                     	;# 
  4537  0712                     	;# 
  4538  0713                     	;# 
  4539  0714                     	;# 
  4540  0716                     	;# 
  4541  0717                     	;# 
  4542  0718                     	;# 
  4543  0719                     	;# 
  4544  071A                     	;# 
  4545  071B                     	;# 
  4546  071C                     	;# 
  4547  071D                     	;# 
  4548  071E                     	;# 
  4549  0796                     	;# 
  4550  0797                     	;# 
  4551  0798                     	;# 
  4552  0799                     	;# 
  4553  079A                     	;# 
  4554  079B                     	;# 
  4555  080C                     	;# 
  4556  080D                     	;# 
  4557  080E                     	;# 
  4558  080F                     	;# 
  4559  0810                     	;# 
  4560  0811                     	;# 
  4561  0812                     	;# 
  4562  0813                     	;# 
  4563  0814                     	;# 
  4564  081A                     	;# 
  4565  081B                     	;# 
  4566  081C                     	;# 
  4567  081D                     	;# 
  4568  081E                     	;# 
  4569  081F                     	;# 
  4570  088C                     	;# 
  4571  088D                     	;# 
  4572  088E                     	;# 
  4573  088F                     	;# 
  4574  0890                     	;# 
  4575  0891                     	;# 
  4576  0892                     	;# 
  4577  0893                     	;# 
  4578  0895                     	;# 
  4579  0896                     	;# 
  4580  0897                     	;# 
  4581  0898                     	;# 
  4582  0899                     	;# 
  4583  089A                     	;# 
  4584  089B                     	;# 
  4585  090C                     	;# 
  4586  090E                     	;# 
  4587  090F                     	;# 
  4588  091F                     	;# 
  4589  091F                     	;# 
  4590  098F                     	;# 
  4591  098F                     	;# 
  4592  0990                     	;# 
  4593  0991                     	;# 
  4594  0992                     	;# 
  4595  0993                     	;# 
  4596  0994                     	;# 
  4597  0995                     	;# 
  4598  0996                     	;# 
  4599  0997                     	;# 
  4600  0E0F                     	;# 
  4601  0E10                     	;# 
  4602  0E11                     	;# 
  4603  0E12                     	;# 
  4604  0E13                     	;# 
  4605  0E14                     	;# 
  4606  0E15                     	;# 
  4607  0E16                     	;# 
  4608  0E17                     	;# 
  4609  0E18                     	;# 
  4610  0E19                     	;# 
  4611  0E1A                     	;# 
  4612  0E1B                     	;# 
  4613  0E1C                     	;# 
  4614  0E1D                     	;# 
  4615  0E1E                     	;# 
  4616  0E1F                     	;# 
  4617  0E20                     	;# 
  4618  0E21                     	;# 
  4619  0E22                     	;# 
  4620  0E23                     	;# 
  4621  0E24                     	;# 
  4622  0E25                     	;# 
  4623  0E26                     	;# 
  4624  0E27                     	;# 
  4625  0E28                     	;# 
  4626  0E29                     	;# 
  4627  0E2A                     	;# 
  4628  0E2B                     	;# 
  4629  0E2C                     	;# 
  4630  0E2D                     	;# 
  4631  0E2E                     	;# 
  4632  0E2F                     	;# 
  4633  0E30                     	;# 
  4634  0E31                     	;# 
  4635  0E32                     	;# 
  4636  0E33                     	;# 
  4637  0E34                     	;# 
  4638  0E35                     	;# 
  4639  0E36                     	;# 
  4640  0E37                     	;# 
  4641  0E8F                     	;# 
  4642  0E90                     	;# 
  4643  0E91                     	;# 
  4644  0E92                     	;# 
  4645  0E93                     	;# 
  4646  0E94                     	;# 
  4647  0E95                     	;# 
  4648  0E96                     	;# 
  4649  0E97                     	;# 
  4650  0E9C                     	;# 
  4651  0E9D                     	;# 
  4652  0E9E                     	;# 
  4653  0EA1                     	;# 
  4654  0EA2                     	;# 
  4655  0EA3                     	;# 
  4656  0EA4                     	;# 
  4657  0EA5                     	;# 
  4658  0EA9                     	;# 
  4659  0EAA                     	;# 
  4660  0EAB                     	;# 
  4661  0EAC                     	;# 
  4662  0EB1                     	;# 
  4663  0EB2                     	;# 
  4664  0EB3                     	;# 
  4665  0EB8                     	;# 
  4666  0EB9                     	;# 
  4667  0EBA                     	;# 
  4668  0EBB                     	;# 
  4669  0EBC                     	;# 
  4670  0EBD                     	;# 
  4671  0EBE                     	;# 
  4672  0EC3                     	;# 
  4673  0EC5                     	;# 
  4674  0EC6                     	;# 
  4675  0EC7                     	;# 
  4676  0EC8                     	;# 
  4677  0EC9                     	;# 
  4678  0ECA                     	;# 
  4679  0ECB                     	;# 
  4680  0ECC                     	;# 
  4681  0F10                     	;# 
  4682  0F11                     	;# 
  4683  0F12                     	;# 
  4684  0F13                     	;# 
  4685  0F14                     	;# 
  4686  0F15                     	;# 
  4687  0F16                     	;# 
  4688  0F17                     	;# 
  4689  0F18                     	;# 
  4690  0F19                     	;# 
  4691  0F1A                     	;# 
  4692  0F1B                     	;# 
  4693  0F1C                     	;# 
  4694  0F1D                     	;# 
  4695  0F1E                     	;# 
  4696  0F1F                     	;# 
  4697  0F20                     	;# 
  4698  0F21                     	;# 
  4699  0F22                     	;# 
  4700  0F23                     	;# 
  4701  0F24                     	;# 
  4702  0F25                     	;# 
  4703  0F26                     	;# 
  4704  0F27                     	;# 
  4705  0F38                     	;# 
  4706  0F39                     	;# 
  4707  0F3A                     	;# 
  4708  0F3B                     	;# 
  4709  0F3C                     	;# 
  4710  0F3D                     	;# 
  4711  0F3E                     	;# 
  4712  0F3F                     	;# 
  4713  0F40                     	;# 
  4714  0F41                     	;# 
  4715  0F43                     	;# 
  4716  0F44                     	;# 
  4717  0F45                     	;# 
  4718  0F46                     	;# 
  4719  0F47                     	;# 
  4720  0F48                     	;# 
  4721  0F49                     	;# 
  4722  0F4A                     	;# 
  4723  0F4B                     	;# 
  4724  0F4C                     	;# 
  4725  0F4E                     	;# 
  4726  0F4F                     	;# 
  4727  0F50                     	;# 
  4728  0F51                     	;# 
  4729  0F52                     	;# 
  4730  0F53                     	;# 
  4731  0F54                     	;# 
  4732  0F55                     	;# 
  4733  0F56                     	;# 
  4734  0F57                     	;# 
  4735  0F65                     	;# 
  4736  0F68                     	;# 
  4737  0F69                     	;# 
  4738  0F6A                     	;# 
  4739  0F6B                     	;# 
  4740  0FE4                     	;# 
  4741  0FE5                     	;# 
  4742  0FE6                     	;# 
  4743  0FE7                     	;# 
  4744  0FE8                     	;# 
  4745  0FE9                     	;# 
  4746  0FEA                     	;# 
  4747  0FEB                     	;# 
  4748  0FED                     	;# 
  4749  0FEE                     	;# 
  4750  0FEF                     	;# 
  4751  0000                     	;# 
  4752  0001                     	;# 
  4753  0002                     	;# 
  4754  0003                     	;# 
  4755  0004                     	;# 
  4756  0005                     	;# 
  4757  0006                     	;# 
  4758  0007                     	;# 
  4759  0008                     	;# 
  4760  0009                     	;# 
  4761  000A                     	;# 
  4762  000B                     	;# 
  4763  000C                     	;# 
  4764  000D                     	;# 
  4765  000E                     	;# 
  4766  0010                     	;# 
  4767  0011                     	;# 
  4768  0012                     	;# 
  4769  0013                     	;# 
  4770  0016                     	;# 
  4771  0017                     	;# 
  4772  0018                     	;# 
  4773  001C                     	;# 
  4774  001C                     	;# 
  4775  001D                     	;# 
  4776  001D                     	;# 
  4777  001E                     	;# 
  4778  001F                     	;# 
  4779  008C                     	;# 
  4780  008C                     	;# 
  4781  008D                     	;# 
  4782  008E                     	;# 
  4783  008E                     	;# 
  4784  008F                     	;# 
  4785  0090                     	;# 
  4786  0090                     	;# 
  4787  0091                     	;# 
  4788  0093                     	;# 
  4789  0094                     	;# 
  4790  0095                     	;# 
  4791  0096                     	;# 
  4792  0097                     	;# 
  4793  0098                     	;# 
  4794  0099                     	;# 
  4795  009A                     	;# 
  4796  009B                     	;# 
  4797  009C                     	;# 
  4798  009D                     	;# 
  4799  009E                     	;# 
  4800  010C                     	;# 
  4801  010D                     	;# 
  4802  010E                     	;# 
  4803  010E                     	;# 
  4804  010F                     	;# 
  4805  0110                     	;# 
  4806  0110                     	;# 
  4807  0111                     	;# 
  4808  0112                     	;# 
  4809  0112                     	;# 
  4810  0113                     	;# 
  4811  0114                     	;# 
  4812  0114                     	;# 
  4813  0115                     	;# 
  4814  0116                     	;# 
  4815  0116                     	;# 
  4816  0117                     	;# 
  4817  0119                     	;# 
  4818  0119                     	;# 
  4819  0119                     	;# 
  4820  011A                     	;# 
  4821  011A                     	;# 
  4822  011A                     	;# 
  4823  011B                     	;# 
  4824  011B                     	;# 
  4825  011B                     	;# 
  4826  011B                     	;# 
  4827  011B                     	;# 
  4828  011C                     	;# 
  4829  011C                     	;# 
  4830  011C                     	;# 
  4831  011D                     	;# 
  4832  011D                     	;# 
  4833  011D                     	;# 
  4834  011E                     	;# 
  4835  011E                     	;# 
  4836  011E                     	;# 
  4837  011F                     	;# 
  4838  011F                     	;# 
  4839  011F                     	;# 
  4840  011F                     	;# 
  4841  011F                     	;# 
  4842  018C                     	;# 
  4843  018D                     	;# 
  4844  018E                     	;# 
  4845  018F                     	;# 
  4846  0190                     	;# 
  4847  0191                     	;# 
  4848  0192                     	;# 
  4849  0196                     	;# 
  4850  0197                     	;# 
  4851  0198                     	;# 
  4852  0199                     	;# 
  4853  019A                     	;# 
  4854  019B                     	;# 
  4855  019C                     	;# 
  4856  020C                     	;# 
  4857  020C                     	;# 
  4858  020D                     	;# 
  4859  020E                     	;# 
  4860  020F                     	;# 
  4861  020F                     	;# 
  4862  0210                     	;# 
  4863  0210                     	;# 
  4864  0211                     	;# 
  4865  0211                     	;# 
  4866  0212                     	;# 
  4867  0212                     	;# 
  4868  0213                     	;# 
  4869  0214                     	;# 
  4870  0215                     	;# 
  4871  0215                     	;# 
  4872  0216                     	;# 
  4873  0216                     	;# 
  4874  0217                     	;# 
  4875  0217                     	;# 
  4876  0218                     	;# 
  4877  0218                     	;# 
  4878  0219                     	;# 
  4879  021A                     	;# 
  4880  021B                     	;# 
  4881  021B                     	;# 
  4882  021C                     	;# 
  4883  021C                     	;# 
  4884  021D                     	;# 
  4885  021D                     	;# 
  4886  021E                     	;# 
  4887  021F                     	;# 
  4888  028C                     	;# 
  4889  028C                     	;# 
  4890  028D                     	;# 
  4891  028D                     	;# 
  4892  028E                     	;# 
  4893  028F                     	;# 
  4894  0290                     	;# 
  4895  0290                     	;# 
  4896  0291                     	;# 
  4897  0292                     	;# 
  4898  0292                     	;# 
  4899  0293                     	;# 
  4900  0293                     	;# 
  4901  0294                     	;# 
  4902  0295                     	;# 
  4903  0296                     	;# 
  4904  0296                     	;# 
  4905  0297                     	;# 
  4906  0298                     	;# 
  4907  0298                     	;# 
  4908  0299                     	;# 
  4909  0299                     	;# 
  4910  029A                     	;# 
  4911  029B                     	;# 
  4912  029C                     	;# 
  4913  029C                     	;# 
  4914  029D                     	;# 
  4915  030C                     	;# 
  4916  030C                     	;# 
  4917  030D                     	;# 
  4918  030E                     	;# 
  4919  030F                     	;# 
  4920  0310                     	;# 
  4921  0310                     	;# 
  4922  0311                     	;# 
  4923  0312                     	;# 
  4924  0313                     	;# 
  4925  0314                     	;# 
  4926  0314                     	;# 
  4927  0315                     	;# 
  4928  0316                     	;# 
  4929  0317                     	;# 
  4930  0318                     	;# 
  4931  0318                     	;# 
  4932  0319                     	;# 
  4933  031A                     	;# 
  4934  031B                     	;# 
  4935  031C                     	;# 
  4936  031C                     	;# 
  4937  031D                     	;# 
  4938  031E                     	;# 
  4939  031F                     	;# 
  4940  038C                     	;# 
  4941  038D                     	;# 
  4942  038E                     	;# 
  4943  0390                     	;# 
  4944  0391                     	;# 
  4945  0392                     	;# 
  4946  040C                     	;# 
  4947  040D                     	;# 
  4948  040E                     	;# 
  4949  040F                     	;# 
  4950  0410                     	;# 
  4951  0411                     	;# 
  4952  0416                     	;# 
  4953  0416                     	;# 
  4954  0417                     	;# 
  4955  0418                     	;# 
  4956  0418                     	;# 
  4957  0419                     	;# 
  4958  041A                     	;# 
  4959  041A                     	;# 
  4960  041B                     	;# 
  4961  041C                     	;# 
  4962  041C                     	;# 
  4963  041D                     	;# 
  4964  041E                     	;# 
  4965  041F                     	;# 
  4966  048C                     	;# 
  4967  048C                     	;# 
  4968  048D                     	;# 
  4969  048E                     	;# 
  4970  048F                     	;# 
  4971  048F                     	;# 
  4972  0490                     	;# 
  4973  0491                     	;# 
  4974  0492                     	;# 
  4975  0492                     	;# 
  4976  0493                     	;# 
  4977  0494                     	;# 
  4978  0495                     	;# 
  4979  0495                     	;# 
  4980  0496                     	;# 
  4981  0497                     	;# 
  4982  0498                     	;# 
  4983  0499                     	;# 
  4984  049A                     	;# 
  4985  049B                     	;# 
  4986  049C                     	;# 
  4987  049D                     	;# 
  4988  050C                     	;# 
  4989  050C                     	;# 
  4990  050D                     	;# 
  4991  050E                     	;# 
  4992  050F                     	;# 
  4993  050F                     	;# 
  4994  0510                     	;# 
  4995  0511                     	;# 
  4996  0512                     	;# 
  4997  0512                     	;# 
  4998  0513                     	;# 
  4999  0514                     	;# 
  5000  0515                     	;# 
  5001  0515                     	;# 
  5002  0516                     	;# 
  5003  0517                     	;# 
  5004  0518                     	;# 
  5005  0519                     	;# 
  5006  051A                     	;# 
  5007  051B                     	;# 
  5008  051C                     	;# 
  5009  051D                     	;# 
  5010  058C                     	;# 
  5011  058C                     	;# 
  5012  058D                     	;# 
  5013  058E                     	;# 
  5014  058F                     	;# 
  5015  058F                     	;# 
  5016  0590                     	;# 
  5017  0591                     	;# 
  5018  0592                     	;# 
  5019  0593                     	;# 
  5020  060C                     	;# 
  5021  060D                     	;# 
  5022  060E                     	;# 
  5023  060F                     	;# 
  5024  0610                     	;# 
  5025  0611                     	;# 
  5026  0612                     	;# 
  5027  0613                     	;# 
  5028  0614                     	;# 
  5029  0616                     	;# 
  5030  0617                     	;# 
  5031  0618                     	;# 
  5032  0619                     	;# 
  5033  061A                     	;# 
  5034  061B                     	;# 
  5035  061C                     	;# 
  5036  061D                     	;# 
  5037  061E                     	;# 
  5038  068C                     	;# 
  5039  068D                     	;# 
  5040  068E                     	;# 
  5041  068F                     	;# 
  5042  0690                     	;# 
  5043  0691                     	;# 
  5044  0692                     	;# 
  5045  0693                     	;# 
  5046  0694                     	;# 
  5047  070C                     	;# 
  5048  070D                     	;# 
  5049  070E                     	;# 
  5050  070F                     	;# 
  5051  0710                     	;# 
  5052  0711                     	;# 
  5053  0712                     	;# 
  5054  0713                     	;# 
  5055  0714                     	;# 
  5056  0716                     	;# 
  5057  0717                     	;# 
  5058  0718                     	;# 
  5059  0719                     	;# 
  5060  071A                     	;# 
  5061  071B                     	;# 
  5062  071C                     	;# 
  5063  071D                     	;# 
  5064  071E                     	;# 
  5065  0796                     	;# 
  5066  0797                     	;# 
  5067  0798                     	;# 
  5068  0799                     	;# 
  5069  079A                     	;# 
  5070  079B                     	;# 
  5071  080C                     	;# 
  5072  080D                     	;# 
  5073  080E                     	;# 
  5074  080F                     	;# 
  5075  0810                     	;# 
  5076  0811                     	;# 
  5077  0812                     	;# 
  5078  0813                     	;# 
  5079  0814                     	;# 
  5080  081A                     	;# 
  5081  081B                     	;# 
  5082  081C                     	;# 
  5083  081D                     	;# 
  5084  081E                     	;# 
  5085  081F                     	;# 
  5086  088C                     	;# 
  5087  088D                     	;# 
  5088  088E                     	;# 
  5089  088F                     	;# 
  5090  0890                     	;# 
  5091  0891                     	;# 
  5092  0892                     	;# 
  5093  0893                     	;# 
  5094  0895                     	;# 
  5095  0896                     	;# 
  5096  0897                     	;# 
  5097  0898                     	;# 
  5098  0899                     	;# 
  5099  089A                     	;# 
  5100  089B                     	;# 
  5101  090C                     	;# 
  5102  090E                     	;# 
  5103  090F                     	;# 
  5104  091F                     	;# 
  5105  091F                     	;# 
  5106  098F                     	;# 
  5107  098F                     	;# 
  5108  0990                     	;# 
  5109  0991                     	;# 
  5110  0992                     	;# 
  5111  0993                     	;# 
  5112  0994                     	;# 
  5113  0995                     	;# 
  5114  0996                     	;# 
  5115  0997                     	;# 
  5116  0E0F                     	;# 
  5117  0E10                     	;# 
  5118  0E11                     	;# 
  5119  0E12                     	;# 
  5120  0E13                     	;# 
  5121  0E14                     	;# 
  5122  0E15                     	;# 
  5123  0E16                     	;# 
  5124  0E17                     	;# 
  5125  0E18                     	;# 
  5126  0E19                     	;# 
  5127  0E1A                     	;# 
  5128  0E1B                     	;# 
  5129  0E1C                     	;# 
  5130  0E1D                     	;# 
  5131  0E1E                     	;# 
  5132  0E1F                     	;# 
  5133  0E20                     	;# 
  5134  0E21                     	;# 
  5135  0E22                     	;# 
  5136  0E23                     	;# 
  5137  0E24                     	;# 
  5138  0E25                     	;# 
  5139  0E26                     	;# 
  5140  0E27                     	;# 
  5141  0E28                     	;# 
  5142  0E29                     	;# 
  5143  0E2A                     	;# 
  5144  0E2B                     	;# 
  5145  0E2C                     	;# 
  5146  0E2D                     	;# 
  5147  0E2E                     	;# 
  5148  0E2F                     	;# 
  5149  0E30                     	;# 
  5150  0E31                     	;# 
  5151  0E32                     	;# 
  5152  0E33                     	;# 
  5153  0E34                     	;# 
  5154  0E35                     	;# 
  5155  0E36                     	;# 
  5156  0E37                     	;# 
  5157  0E8F                     	;# 
  5158  0E90                     	;# 
  5159  0E91                     	;# 
  5160  0E92                     	;# 
  5161  0E93                     	;# 
  5162  0E94                     	;# 
  5163  0E95                     	;# 
  5164  0E96                     	;# 
  5165  0E97                     	;# 
  5166  0E9C                     	;# 
  5167  0E9D                     	;# 
  5168  0E9E                     	;# 
  5169  0EA1                     	;# 
  5170  0EA2                     	;# 
  5171  0EA3                     	;# 
  5172  0EA4                     	;# 
  5173  0EA5                     	;# 
  5174  0EA9                     	;# 
  5175  0EAA                     	;# 
  5176  0EAB                     	;# 
  5177  0EAC                     	;# 
  5178  0EB1                     	;# 
  5179  0EB2                     	;# 
  5180  0EB3                     	;# 
  5181  0EB8                     	;# 
  5182  0EB9                     	;# 
  5183  0EBA                     	;# 
  5184  0EBB                     	;# 
  5185  0EBC                     	;# 
  5186  0EBD                     	;# 
  5187  0EBE                     	;# 
  5188  0EC3                     	;# 
  5189  0EC5                     	;# 
  5190  0EC6                     	;# 
  5191  0EC7                     	;# 
  5192  0EC8                     	;# 
  5193  0EC9                     	;# 
  5194  0ECA                     	;# 
  5195  0ECB                     	;# 
  5196  0ECC                     	;# 
  5197  0F10                     	;# 
  5198  0F11                     	;# 
  5199  0F12                     	;# 
  5200  0F13                     	;# 
  5201  0F14                     	;# 
  5202  0F15                     	;# 
  5203  0F16                     	;# 
  5204  0F17                     	;# 
  5205  0F18                     	;# 
  5206  0F19                     	;# 
  5207  0F1A                     	;# 
  5208  0F1B                     	;# 
  5209  0F1C                     	;# 
  5210  0F1D                     	;# 
  5211  0F1E                     	;# 
  5212  0F1F                     	;# 
  5213  0F20                     	;# 
  5214  0F21                     	;# 
  5215  0F22                     	;# 
  5216  0F23                     	;# 
  5217  0F24                     	;# 
  5218  0F25                     	;# 
  5219  0F26                     	;# 
  5220  0F27                     	;# 
  5221  0F38                     	;# 
  5222  0F39                     	;# 
  5223  0F3A                     	;# 
  5224  0F3B                     	;# 
  5225  0F3C                     	;# 
  5226  0F3D                     	;# 
  5227  0F3E                     	;# 
  5228  0F3F                     	;# 
  5229  0F40                     	;# 
  5230  0F41                     	;# 
  5231  0F43                     	;# 
  5232  0F44                     	;# 
  5233  0F45                     	;# 
  5234  0F46                     	;# 
  5235  0F47                     	;# 
  5236  0F48                     	;# 
  5237  0F49                     	;# 
  5238  0F4A                     	;# 
  5239  0F4B                     	;# 
  5240  0F4C                     	;# 
  5241  0F4E                     	;# 
  5242  0F4F                     	;# 
  5243  0F50                     	;# 
  5244  0F51                     	;# 
  5245  0F52                     	;# 
  5246  0F53                     	;# 
  5247  0F54                     	;# 
  5248  0F55                     	;# 
  5249  0F56                     	;# 
  5250  0F57                     	;# 
  5251  0F65                     	;# 
  5252  0F68                     	;# 
  5253  0F69                     	;# 
  5254  0F6A                     	;# 
  5255  0F6B                     	;# 
  5256  0FE4                     	;# 
  5257  0FE5                     	;# 
  5258  0FE6                     	;# 
  5259  0FE7                     	;# 
  5260  0FE8                     	;# 
  5261  0FE9                     	;# 
  5262  0FEA                     	;# 
  5263  0FEB                     	;# 
  5264  0FED                     	;# 
  5265  0FEE                     	;# 
  5266  0FEF                     	;_samples
  5267                           
  5268                           	psect	idataBANK2
  5269  1294                     __pidataBANK2:	
  5270                           
  5271                           ;initializer for _channels
  5272  1294  3414               	retlw	20
  5273  1295  3400               	retlw	0
  5274  1296  3410               	retlw	16
  5275  1297  3400               	retlw	0
  5276  1298  3416               	retlw	22
  5277  1299  3400               	retlw	0
  5278  129A  3412               	retlw	18
  5279  129B  3400               	retlw	0
  5280                           
  5281                           	psect	stringtext1
  5282  0800                     __pstringtext1:	
  5283  0800                     _fonts:	
  5284  0800  3400               	retlw	0
  5285  0801  3400               	retlw	0
  5286  0802  3400               	retlw	0
  5287  0803  3400               	retlw	0
  5288  0804  344E               	retlw	78
  5289  0805  3400               	retlw	0
  5290  0806  3406               	retlw	6
  5291  0807  3400               	retlw	0
  5292  0808  3406               	retlw	6
  5293  0809  34FF               	retlw	255
  5294  080A  34FF               	retlw	255
  5295  080B  34FF               	retlw	255
  5296  080C  3448               	retlw	72
  5297  080D  34D6               	retlw	214
  5298  080E  3424               	retlw	36
  5299  080F  3412               	retlw	18
  5300  0810  3408               	retlw	8
  5301  0811  3424               	retlw	36
  5302  0812  34FF               	retlw	255
  5303  0813  34FF               	retlw	255
  5304  0814  34FF               	retlw	255
  5305  0815  3400               	retlw	0
  5306  0816  3406               	retlw	6
  5307  0817  3400               	retlw	0
  5308  0818  3438               	retlw	56
  5309  0819  3444               	retlw	68
  5310  081A  3482               	retlw	130
  5311  081B  3482               	retlw	130
  5312  081C  3444               	retlw	68
  5313  081D  3438               	retlw	56
  5314  081E  3414               	retlw	20
  5315  081F  3408               	retlw	8
  5316  0820  343E               	retlw	62
  5317  0821  3410               	retlw	16
  5318  0822  3438               	retlw	56
  5319  0823  3410               	retlw	16
  5320  0824  34A0               	retlw	160
  5321  0825  3460               	retlw	96
  5322  0826  3400               	retlw	0
  5323  0827  3410               	retlw	16
  5324  0828  3410               	retlw	16
  5325  0829  3410               	retlw	16
  5326  082A  3460               	retlw	96
  5327  082B  3460               	retlw	96
  5328  082C  3400               	retlw	0
  5329  082D  3460               	retlw	96
  5330  082E  3418               	retlw	24
  5331  082F  3406               	retlw	6
  5332  0830  347C               	retlw	124
  5333  0831  3442               	retlw	66
  5334  0832  347C               	retlw	124
  5335  0833  3444               	retlw	68
  5336  0834  347E               	retlw	126
  5337  0835  3440               	retlw	64
  5338  0836  3464               	retlw	100
  5339  0837  3452               	retlw	82
  5340  0838  344C               	retlw	76
  5341  0839  344A               	retlw	74
  5342  083A  344A               	retlw	74
  5343  083B  3434               	retlw	52
  5344  083C  3438               	retlw	56
  5345  083D  3424               	retlw	36
  5346  083E  347E               	retlw	126
  5347  083F  344E               	retlw	78
  5348  0840  344A               	retlw	74
  5349  0841  3432               	retlw	50
  5350  0842  343C               	retlw	60
  5351  0843  344A               	retlw	74
  5352  0844  3432               	retlw	50
  5353  0845  3462               	retlw	98
  5354  0846  341A               	retlw	26
  5355  0847  3406               	retlw	6
  5356  0848  3476               	retlw	118
  5357  0849  344A               	retlw	74
  5358  084A  3476               	retlw	118
  5359  084B  344C               	retlw	76
  5360  084C  3452               	retlw	82
  5361  084D  343C               	retlw	60
  5362  084E  346C               	retlw	108
  5363  084F  346C               	retlw	108
  5364  0850  3400               	retlw	0
  5365  0851  34AC               	retlw	172
  5366  0852  346C               	retlw	108
  5367  0853  3400               	retlw	0
  5368  0854  3410               	retlw	16
  5369  0855  3428               	retlw	40
  5370  0856  3444               	retlw	68
  5371  0857  3428               	retlw	40
  5372  0858  3428               	retlw	40
  5373  0859  3428               	retlw	40
  5374  085A  3444               	retlw	68
  5375  085B  3428               	retlw	40
  5376  085C  3410               	retlw	16
  5377  085D  3402               	retlw	2
  5378  085E  3459               	retlw	89
  5379  085F  3406               	retlw	6
  5380  0860  34FF               	retlw	255
  5381  0861  34FF               	retlw	255
  5382  0862  34FF               	retlw	255
  5383  0863  347C               	retlw	124
  5384  0864  3412               	retlw	18
  5385  0865  347C               	retlw	124
  5386  0866  347E               	retlw	126
  5387  0867  345A               	retlw	90
  5388  0868  3434               	retlw	52
  5389  0869  343C               	retlw	60
  5390  086A  3442               	retlw	66
  5391  086B  3442               	retlw	66
  5392  086C  347E               	retlw	126
  5393  086D  3442               	retlw	66
  5394  086E  343C               	retlw	60
  5395  086F  347E               	retlw	126
  5396  0870  344A               	retlw	74
  5397  0871  3442               	retlw	66
  5398  0872  347E               	retlw	126
  5399  0873  340A               	retlw	10
  5400  0874  340A               	retlw	10
  5401  0875  343C               	retlw	60
  5402  0876  3452               	retlw	82
  5403  0877  3434               	retlw	52
  5404  0878  347E               	retlw	126
  5405  0879  3408               	retlw	8
  5406  087A  347E               	retlw	126
  5407  087B  3442               	retlw	66
  5408  087C  347E               	retlw	126
  5409  087D  3442               	retlw	66
  5410  087E  3430               	retlw	48
  5411  087F  3440               	retlw	64
  5412  0880  343E               	retlw	62
  5413  0881  347E               	retlw	126
  5414  0882  3418               	retlw	24
  5415  0883  3466               	retlw	102
  5416  0884  347E               	retlw	126
  5417  0885  3440               	retlw	64
  5418  0886  3440               	retlw	64
  5419  0887  347E               	retlw	126
  5420  0888  341C               	retlw	28
  5421  0889  347E               	retlw	126
  5422  088A  347E               	retlw	126
  5423  088B  3402               	retlw	2
  5424  088C  347E               	retlw	126
  5425  088D  343C               	retlw	60
  5426  088E  3442               	retlw	66
  5427  088F  343C               	retlw	60
  5428  0890  347E               	retlw	126
  5429  0891  3412               	retlw	18
  5430  0892  340C               	retlw	12
  5431  0893  347E               	retlw	126
  5432  0894  3462               	retlw	98
  5433  0895  34FE               	retlw	254
  5434  0896  347E               	retlw	126
  5435  0897  3432               	retlw	50
  5436  0898  344E               	retlw	78
  5437  0899  3444               	retlw	68
  5438  089A  344A               	retlw	74
  5439  089B  3432               	retlw	50
  5440  089C  3402               	retlw	2
  5441  089D  347E               	retlw	126
  5442  089E  3402               	retlw	2
  5443  089F  347E               	retlw	126
  5444  08A0  3440               	retlw	64
  5445  08A1  347E               	retlw	126
  5446  08A2  343E               	retlw	62
  5447  08A3  3440               	retlw	64
  5448  08A4  343E               	retlw	62
  5449  08A5  347E               	retlw	126
  5450  08A6  3438               	retlw	56
  5451  08A7  347E               	retlw	126
  5452  08A8  3466               	retlw	102
  5453  08A9  3418               	retlw	24
  5454  08AA  3466               	retlw	102
  5455  08AB  340E               	retlw	14
  5456  08AC  3470               	retlw	112
  5457  08AD  340E               	retlw	14
  5458  08AE  3462               	retlw	98
  5459  08AF  345A               	retlw	90
  5460  08B0  3446               	retlw	70
  5461  08B1  3400               	retlw	0
  5462  08B2  347E               	retlw	126
  5463  08B3  3442               	retlw	66
  5464  08B4  3406               	retlw	6
  5465  08B5  3418               	retlw	24
  5466  08B6  3460               	retlw	96
  5467  08B7  3442               	retlw	66
  5468  08B8  347E               	retlw	126
  5469  08B9  3400               	retlw	0
  5470  08BA  3404               	retlw	4
  5471  08BB  3402               	retlw	2
  5472  08BC  3404               	retlw	4
  5473  08BD  3440               	retlw	64
  5474  08BE  3440               	retlw	64
  5475  08BF  3440               	retlw	64
  5476  08C0  3400               	retlw	0
  5477  08C1  3402               	retlw	2
  5478  08C2  3404               	retlw	4
  5479  08C3  3474               	retlw	116
  5480  08C4  3454               	retlw	84
  5481  08C5  3478               	retlw	120
  5482  08C6  347E               	retlw	126
  5483  08C7  3448               	retlw	72
  5484  08C8  3430               	retlw	48
  5485  08C9  3430               	retlw	48
  5486  08CA  3448               	retlw	72
  5487  08CB  3448               	retlw	72
  5488  08CC  3430               	retlw	48
  5489  08CD  3448               	retlw	72
  5490  08CE  347E               	retlw	126
  5491  08CF  3438               	retlw	56
  5492  08D0  3454               	retlw	84
  5493  08D1  3458               	retlw	88
  5494  08D2  347C               	retlw	124
  5495  08D3  340A               	retlw	10
  5496  08D4  3402               	retlw	2
  5497  08D5  3498               	retlw	152
  5498  08D6  34A4               	retlw	164
  5499  08D7  347C               	retlw	124
  5500  08D8  347E               	retlw	126
  5501  08D9  3408               	retlw	8
  5502  08DA  3470               	retlw	112
  5503  08DB  3448               	retlw	72
  5504  08DC  347A               	retlw	122
  5505  08DD  3440               	retlw	64
  5506  08DE  3488               	retlw	136
  5507  08DF  34FA               	retlw	250
  5508  08E0  3400               	retlw	0
  5509  08E1  347E               	retlw	126
  5510  08E2  3418               	retlw	24
  5511  08E3  3464               	retlw	100
  5512  08E4  3442               	retlw	66
  5513  08E5  347E               	retlw	126
  5514  08E6  3440               	retlw	64
  5515  08E7  347C               	retlw	124
  5516  08E8  3438               	retlw	56
  5517  08E9  347C               	retlw	124
  5518  08EA  347C               	retlw	124
  5519  08EB  3404               	retlw	4
  5520  08EC  3478               	retlw	120
  5521  08ED  3438               	retlw	56
  5522  08EE  3444               	retlw	68
  5523  08EF  3438               	retlw	56
  5524  08F0  34FC               	retlw	252
  5525  08F1  3424               	retlw	36
  5526  08F2  3418               	retlw	24
  5527  08F3  3418               	retlw	24
  5528  08F4  3424               	retlw	36
  5529  08F5  34FC               	retlw	252
  5530  08F6  3478               	retlw	120
  5531  08F7  3404               	retlw	4
  5532  08F8  3404               	retlw	4
  5533  08F9  3448               	retlw	72
  5534  08FA  3454               	retlw	84
  5535  08FB  3424               	retlw	36
  5536  08FC  3404               	retlw	4
  5537  08FD  343E               	retlw	62
  5538  08FE  3444               	retlw	68
  5539  08FF  347C               	retlw	124
  5540  0900  3440               	retlw	64
  5541  0901  347C               	retlw	124
  5542  0902  343C               	retlw	60
  5543  0903  3440               	retlw	64
  5544  0904  343C               	retlw	60
  5545  0905  347C               	retlw	124
  5546  0906  3430               	retlw	48
  5547  0907  347C               	retlw	124
  5548  0908  346C               	retlw	108
  5549  0909  3410               	retlw	16
  5550  090A  346C               	retlw	108
  5551  090B  349C               	retlw	156
  5552  090C  34A0               	retlw	160
  5553  090D  347C               	retlw	124
  5554  090E  3464               	retlw	100
  5555  090F  3454               	retlw	84
  5556  0910  344C               	retlw	76
  5557  0911  340C               	retlw	12
  5558  0912  3412               	retlw	18
  5559  0913  340C               	retlw	12
  5560  0914  34FF               	retlw	255
  5561  0915  34FF               	retlw	255
  5562  0916  34FF               	retlw	255
  5563  0917  34FF               	retlw	255
  5564  0918  34FF               	retlw	255
  5565  0919  34FF               	retlw	255
  5566  091A  34FF               	retlw	255
  5567  091B  34FF               	retlw	255
  5568  091C  34FF               	retlw	255
  5569  091D  34FF               	retlw	255
  5570  091E  34FF               	retlw	255
  5571  091F  34FF               	retlw	255
  5572  0920  34FF               	retlw	255
  5573  0921  34FF               	retlw	255
  5574  0922  34FF               	retlw	255
  5575  0923  34FF               	retlw	255
  5576  0924  34FF               	retlw	255
  5577  0925  34FF               	retlw	255
  5578  0926  34FC               	retlw	252
  5579  0927  3440               	retlw	64
  5580  0928  347C               	retlw	124
  5581  0929  34FF               	retlw	255
  5582  092A  34FF               	retlw	255
  5583  092B  34FF               	retlw	255
  5584  092C  34FF               	retlw	255
  5585  092D  34FF               	retlw	255
  5586  092E  34FF               	retlw	255
  5587  092F                     __end_of_fonts:	
  5588                           
  5589                           	psect	stringtext2
  5590  1800                     __pstringtext2:	
  5591  1800                     log@coeff:	
  5592  1800  3400               	retlw	0
  5593  1801  3400               	retlw	0
  5594  1802  3400               	retlw	0
  5595  1803  3400               	retlw	0
  5596  1804  3480               	retlw	128
  5597  1805  343F               	retlw	63
  5598  1806  34F0               	retlw	240
  5599  1807  34FF               	retlw	255
  5600  1808  34BE               	retlw	190
  5601  1809  34E2               	retlw	226
  5602  180A  34A9               	retlw	169
  5603  180B  343E               	retlw	62
  5604  180C  3483               	retlw	131
  5605  180D  3476               	retlw	118
  5606  180E  34BE               	retlw	190
  5607  180F  34AE               	retlw	174
  5608  1810  342B               	retlw	43
  5609  1811  343E               	retlw	62
  5610  1812  343C               	retlw	60
  5611  1813  34C3               	retlw	195
  5612  1814  34BD               	retlw	189
  5613  1815  34D2               	retlw	210
  5614  1816  3413               	retlw	19
  5615  1817  343D               	retlw	61
  5616  1818  3478               	retlw	120
  5617  1819  34D3               	retlw	211
  5618  181A  34BB               	retlw	187
  5619  181B                     __end_oflog@coeff:	
  5620  0013                     _TRISC	set	19
  5621  0012                     _TRISB	set	18
  5622  0011                     _TRISA	set	17
  5623  0018                     _LATC	set	24
  5624  0017                     _LATB	set	23
  5625  0016                     _LATA	set	22
  5626  0016                     _LATAbits	set	22
  5627  0011                     _TRISAbits	set	17
  5628  00B5                     _LATA5	set	181
  5629  006A                     _RB2	set	106
  5630  005F                     _GIE	set	95
  5631  0093                     _ADCON0	set	147
  5632  009D                     _ADACQ	set	157
  5633  009C                     _ADPRE	set	156
  5634  009B                     _ADCAP	set	155
  5635  009A                     _ADREF	set	154
  5636  0098                     _ADCLK	set	152
  5637  0097                     _ADSTAT	set	151
  5638  0099                     _ADACT	set	153
  5639  0096                     _ADCON3	set	150
  5640  0095                     _ADCON2	set	149
  5641  0094                     _ADCON1	set	148
  5642  008C                     _ADRESL	set	140
  5643  008D                     _ADRESH	set	141
  5644  0093                     _ADCON0bits	set	147
  5645  009E                     _ADPCH	set	158
  5646  0113                     _ADSTPTH	set	275
  5647  0112                     _ADSTPTL	set	274
  5648  0111                     _ADUTHH	set	273
  5649  0110                     _ADUTHL	set	272
  5650  010F                     _ADLTHH	set	271
  5651  010E                     _ADLTHL	set	270
  5652  010D                     _ADRPT	set	269
  5653  021F                     _CCPTMRS1bits	set	543
  5654  0294                     _T4CONbits	set	660
  5655  0292                     _T4TMR	set	658
  5656  0293                     _T4PR	set	659
  5657  0297                     _T4RST	set	663
  5658  0295                     _T4HLT	set	661
  5659  0296                     _T4CLKCON	set	662
  5660  0294                     _T4CON	set	660
  5661  028E                     _T2CONbits	set	654
  5662  028C                     _T2TMR	set	652
  5663  028D                     _T2PR	set	653
  5664  0291                     _T2RST	set	657
  5665  028F                     _T2HLT	set	655
  5666  0290                     _T2CLKCON	set	656
  5667  028E                     _T2CON	set	654
  5668  0390                     _PWM7DCL	set	912
  5669  0391                     _PWM7DCH	set	913
  5670  0392                     _PWM7CON	set	914
  5671  038C                     _PWM6DCL	set	908
  5672  038D                     _PWM6DCH	set	909
  5673  038E                     _PWM6CON	set	910
  5674  0710                     _PIR4bits	set	1808
  5675  0716                     _PIE0bits	set	1814
  5676  0892                     _OSCTUNE	set	2194
  5677  0893                     _OSCFRQ	set	2195
  5678  0891                     _OSCEN	set	2193
  5679  088F                     _OSCCON3	set	2191
  5680  088D                     _OSCCON1	set	2189
  5681  090C                     _FVRCON	set	2316
  5682  0E8F                     _PPSLOCKbits	set	3727
  5683  0E8F                     _PPSLOCK	set	3727
  5684  0F18                     _RB0PPS	set	3864
  5685  0F17                     _RA7PPS	set	3863
  5686  0F16                     _RA6PPS	set	3862
  5687  0F4E                     _ANSELC	set	3918
  5688  0F43                     _ANSELB	set	3907
  5689  0F38                     _ANSELA	set	3896
  5690  0F65                     _WPUE	set	3941
  5691  0F4F                     _WPUC	set	3919
  5692  0F44                     _WPUB	set	3908
  5693  0F39                     _WPUA	set	3897
  5694  181B                     STR_3:	
  5695  181B  3452               	retlw	82	;'R'
  5696  181C  3465               	retlw	101	;'e'
  5697  181D  3466               	retlw	102	;'f'
  5698  181E  343A               	retlw	58	;':'
  5699  181F  3400               	retlw	0
  5700                           
  5701                           	psect	stringtext3
  5702  1820                     __pstringtext3:	
  5703  1820                     STR_2:	
  5704  1820  344F               	retlw	79	;'O'
  5705  1821  3475               	retlw	117	;'u'
  5706  1822  3474               	retlw	116	;'t'
  5707  1823  343A               	retlw	58	;':'
  5708  1824  3400               	retlw	0
  5709                           
  5710                           	psect	stringtext4
  5711  1825                     __pstringtext4:	
  5712  1825                     STR_1:	
  5713  1825  3449               	retlw	73	;'I'
  5714  1826  346E               	retlw	110	;'n'
  5715  1827  343A               	retlw	58	;':'
  5716  1828  3400               	retlw	0
  5717                           
  5718                           	psect	stringtext5
  5719  0000                     __pstringtext5:	
  5720                           
  5721                           ; #config settings
  5722  0000                     
  5723                           	psect	cinit
  5724  07C2                     start_initialization:	
  5725  07C2                     __initialization:		;BIGRAM
  5726                           
  5727                           ; Initialize objects allocated to BANK2
  5728  07C2  3094               	movlw	low __pidataBANK2
  5729  07C3  0084               	movwf	4
  5730  07C4  3092               	movlw	(high __pidataBANK2)| (0+128)
  5731  07C5  0085               	movwf	5
  5732  07C6  0022               	movlb	2	; select bank2
  5733  07C7  0012               	moviw fsr0++
  5734  07C8  00C1               	movwf	__pdataBANK2& (0+127)
  5735  07C9  0012               	moviw fsr0++
  5736  07CA  00C2               	movwf	(__pdataBANK2+1)& (0+127)
  5737  07CB  0012               	moviw fsr0++
  5738  07CC  00C3               	movwf	(__pdataBANK2+2)& (0+127)
  5739  07CD  0012               	moviw fsr0++
  5740  07CE  00C4               	movwf	(__pdataBANK2+3)& (0+127)
  5741  07CF  0012               	moviw fsr0++
  5742  07D0  00C5               	movwf	(__pdataBANK2+4)& (0+127)
  5743  07D1  0012               	moviw fsr0++
  5744  07D2  00C6               	movwf	(__pdataBANK2+5)& (0+127)
  5745  07D3  0012               	moviw fsr0++
  5746  07D4  00C7               	movwf	(__pdataBANK2+6)& (0+127)
  5747  07D5  0012               	moviw fsr0++
  5748  07D6  00C8               	movwf	(__pdataBANK2+7)& (0+127)
  5749                           
  5750                           ; Clear objects allocated to BIGRAM
  5751  07D7  3098               	movlw	low (0+8600)
  5752  07D8  0084               	movwf	4
  5753  07D9  3021               	movlw	high (0+8600)
  5754  07DA  0085               	movwf	5
  5755  07DB  3058               	movlw	88
  5756  07DC  00FE               	movwf	btemp
  5757  07DD  3002               	movlw	2
  5758  07DE  00FF               	movwf	btemp+1
  5759  07DF  3192  22A5  3187   	fcall	clear_ram0
  5760                           
  5761                           ; Clear objects allocated to BANK0
  5762  07E2  0020               	movlb	0	; select bank0
  5763  07E3  01EA               	clrf	__pbssBANK0& (0+127)
  5764  07E4  01EB               	clrf	(__pbssBANK0+1)& (0+127)
  5765  07E5  01EC               	clrf	(__pbssBANK0+2)& (0+127)
  5766  07E6  01ED               	clrf	(__pbssBANK0+3)& (0+127)
  5767  07E7  01EE               	clrf	(__pbssBANK0+4)& (0+127)
  5768                           
  5769                           ; Clear objects allocated to BANK1
  5770  07E8  30A0               	movlw	low __pbssBANK1
  5771  07E9  0084               	movwf	4
  5772  07EA  3000               	movlw	high __pbssBANK1
  5773  07EB  0085               	movwf	5
  5774  07EC  3037               	movlw	55
  5775  07ED  00FE               	movwf	btemp
  5776  07EE  3000               	movlw	0
  5777  07EF  00FF               	movwf	btemp+1
  5778  07F0  3192  22A5  3187   	fcall	clear_ram0
  5779                           
  5780                           ; Clear objects allocated to BANK2
  5781  07F3  3020               	movlw	low __pbssBANK2
  5782  07F4  0084               	movwf	4
  5783  07F5  3001               	movlw	high __pbssBANK2
  5784  07F6  0085               	movwf	5
  5785  07F7  3021               	movlw	33
  5786  07F8  00FE               	movwf	btemp
  5787  07F9  3000               	movlw	0
  5788  07FA  00FF               	movwf	btemp+1
  5789  07FB  3192  22A5         	fcall	clear_ram0
  5790  07FD                     end_of_initialization:	
  5791                           ;End of C runtime variable initialization code
  5792                           
  5793  07FD                     __end_of__initialization:	
  5794  07FD  0020               	movlb	0
  5795  07FE  3182  2ACD         	ljmp	_main	;jump to C main() function
  5796                           
  5797                           	psect	bssBANK0
  5798  006A                     __pbssBANK0:	
  5799  006A                     _readButtons:	
  5800  006A                     	ds	2
  5801  006C                     _j:	
  5802  006C                     	ds	1
  5803  006D                     _lastButton:	
  5804  006D                     	ds	1
  5805  006E                     _button:	
  5806  006E                     	ds	1
  5807                           
  5808                           	psect	bssBANK1
  5809  00A0                     __pbssBANK1:	
  5810  00A0                     _Ianalogs:	
  5811  00A0                     	ds	8
  5812  00A8                     _current:	
  5813  00A8                     	ds	8
  5814  00B0                     _voltage:	
  5815  00B0                     	ds	8
  5816  00B8                     _Vref:	
  5817  00B8                     	ds	4
  5818  00BC                     _Iref:	
  5819  00BC                     	ds	4
  5820  00C0                     _stateCounter:	
  5821  00C0                     	ds	4
  5822  00C4                     _IminCount:	
  5823  00C4                     	ds	4
  5824  00C8                     _errno:	
  5825  00C8                     	ds	2
  5826  00CA                     _VHoldMode:	
  5827  00CA                     	ds	2
  5828  00CC                     _cc_cv:	
  5829  00CC                     	ds	2
  5830  00CE                     _Imode:	
  5831  00CE                     	ds	2
  5832  00D0                     _Iout:	
  5833  00D0                     	ds	2
  5834  00D2                     _batteryState:	
  5835  00D2                     	ds	2
  5836  00D4                     _sampleIndex:	
  5837  00D4                     	ds	2
  5838  00D6                     _x:	
  5839  00D6                     	ds	1
  5840                           
  5841                           	psect	bssBANK2
  5842  0120                     __pbssBANK2:	
  5843  0120                     _totals:	
  5844  0120                     	ds	16
  5845  0130                     _Vanalogs:	
  5846  0130                     	ds	8
  5847  0138                     LCDWriteInt@F14387:	
  5848  0138                     	ds	5
  5849  013D                     _Imin:	
  5850  013D                     	ds	4
  5851                           
  5852                           	psect	dataBANK2
  5853  0141                     __pdataBANK2:	
  5854  0141                     _channels:	
  5855  0141                     	ds	8
  5856                           
  5857                           	psect	clrtext
  5858  12A5                     clear_ram0:	
  5859                           ;	Called with FSR0 containing the base address, and
  5860                           ;	btemp/btemp+1 has the size to clear
  5861                           
  5862  12A5  0064               	clrwdt	;clear the watchdog before getting into this loop
  5863  12A6                     clrloop0:	
  5864  12A6  0180               	clrf	0	;clear RAM location pointed to by FSR
  5865  12A7  3101               	addfsr 0,1
  5866  12A8  3001               	movlw	1
  5867  12A9  02FE               	subwf	126,f
  5868  12AA  3000               	movlw	0
  5869  12AB  3BFF               	subwfb	127,f
  5870  12AC  087F               	movf	127,w
  5871  12AD  047E               	iorwf	126,w
  5872  12AE  1903               	btfsc	3,2
  5873  12AF  3400               	retlw	0	;all done for this memory range, return
  5874  12B0  2AA6               	goto	clrloop0	;have we reached the end yet?
  5875                           
  5876                           	psect	cstackBANK1
  5877  00D7                     __pcstackBANK1:	
  5878  00D7                     main@efficiency:	
  5879                           
  5880                           ; 3 bytes @ 0x0
  5881  00D7                     	ds	3
  5882  00DA                     main@dutyCycle1:	
  5883                           
  5884                           ; 2 bytes @ 0x3
  5885  00DA                     	ds	2
  5886  00DC                     main@IOutTotal:	
  5887                           
  5888                           ; 2 bytes @ 0x5
  5889  00DC                     	ds	2
  5890  00DE                     main@batteryTemp:	
  5891                           
  5892                           ; 2 bytes @ 0x7
  5893  00DE                     	ds	2
  5894  00E0                     main@faultCount:	
  5895                           
  5896                           ; 2 bytes @ 0x9
  5897  00E0                     	ds	2
  5898  00E2                     main@faultNotReset:	
  5899                           
  5900                           ; 2 bytes @ 0xB
  5901  00E2                     	ds	2
  5902  00E4                     main@slowLoop:	
  5903                           
  5904                           ; 1 bytes @ 0xD
  5905  00E4                     	ds	1
  5906  00E5                     main@displayRefresh:	
  5907                           
  5908                           ; 1 bytes @ 0xE
  5909  00E5                     	ds	1
  5910  00E6                     main@MPPT0:	
  5911                           
  5912                           ; 2 bytes @ 0xF
  5913  00E6                     	ds	2
  5914  00E8                     main@MPPT1:	
  5915                           
  5916                           ; 2 bytes @ 0x11
  5917  00E8                     	ds	2
  5918  00EA                     main@menuButton:	
  5919                           
  5920                           ; 1 bytes @ 0x13
  5921  00EA                     	ds	1
  5922  00EB                     main@j:	
  5923                           
  5924                           ; 1 bytes @ 0x14
  5925  00EB                     	ds	1
  5926  00EC                     main@dutyCycle6:	
  5927                           
  5928                           ; 2 bytes @ 0x15
  5929  00EC                     	ds	2
  5930  00EE                     main@dutyCycle7:	
  5931                           
  5932                           ; 2 bytes @ 0x17
  5933  00EE                     	ds	2
  5934                           
  5935                           	psect	cstackCOMMON
  5936  0070                     __pcstackCOMMON:	
  5937  0070                     ?___ftge:	
  5938  0070                     ?_LCDWrite:	
  5939                           ; 1 bit 
  5940                           
  5941  0070                     ?_OSCILLATOR_Initialize:	
  5942                           ; 1 bytes @ 0x0
  5943                           
  5944  0070                     ??_OSCILLATOR_Initialize:	
  5945                           ; 1 bytes @ 0x0
  5946                           
  5947  0070                     ?_TMR2_Initialize:	
  5948                           ; 1 bytes @ 0x0
  5949                           
  5950  0070                     ??_TMR2_Initialize:	
  5951                           ; 1 bytes @ 0x0
  5952                           
  5953  0070                     ?_TMR4_Initialize:	
  5954                           ; 1 bytes @ 0x0
  5955                           
  5956  0070                     ??_TMR4_Initialize:	
  5957                           ; 1 bytes @ 0x0
  5958                           
  5959  0070                     ?_calculateCurrent0:	
  5960                           ; 1 bytes @ 0x0
  5961                           
  5962  0070                     ?_calculateCurrent1:	
  5963                           ; 1 bytes @ 0x0
  5964                           
  5965  0070                     ?_calculateCurrent2:	
  5966                           ; 1 bytes @ 0x0
  5967                           
  5968  0070                     ?_calculateCurrent3:	
  5969                           ; 1 bytes @ 0x0
  5970                           
  5971  0070                     ?_ADC_Initialize:	
  5972                           ; 1 bytes @ 0x0
  5973                           
  5974  0070                     ??_ADC_Initialize:	
  5975                           ; 1 bytes @ 0x0
  5976                           
  5977  0070                     ?_Init_Battery_State_Machine:	
  5978                           ; 1 bytes @ 0x0
  5979                           
  5980  0070                     ??_Init_Battery_State_Machine:	
  5981                           ; 1 bytes @ 0x0
  5982                           
  5983  0070                     ?_Battery_State_Machine:	
  5984                           ; 1 bytes @ 0x0
  5985                           
  5986  0070                     ??_Battery_State_Machine:	
  5987                           ; 1 bytes @ 0x0
  5988                           
  5989  0070                     ?_cc_cv_mode:	
  5990                           ; 1 bytes @ 0x0
  5991                           
  5992  0070                     ??_cc_cv_mode:	
  5993                           ; 1 bytes @ 0x0
  5994                           
  5995  0070                     ?_readButton:	
  5996                           ; 1 bytes @ 0x0
  5997                           
  5998  0070                     ?_LCDWriteCharacter:	
  5999                           ; 1 bytes @ 0x0
  6000                           
  6001  0070                     ?_LCDClear:	
  6002                           ; 1 bytes @ 0x0
  6003                           
  6004  0070                     ?_LCDInit:	
  6005                           ; 1 bytes @ 0x0
  6006                           
  6007  0070                     ?_PIN_MANAGER_Initialize:	
  6008                           ; 1 bytes @ 0x0
  6009                           
  6010  0070                     ??_PIN_MANAGER_Initialize:	
  6011                           ; 1 bytes @ 0x0
  6012                           
  6013  0070                     ?_PWM_Initialize:	
  6014                           ; 1 bytes @ 0x0
  6015                           
  6016  0070                     ??_PWM_Initialize:	
  6017                           ; 1 bytes @ 0x0
  6018                           
  6019  0070                     ?_PWM6_LoadDutyValue:	
  6020                           ; 1 bytes @ 0x0
  6021                           
  6022  0070                     ?_PWM7_LoadDutyValue:	
  6023                           ; 1 bytes @ 0x0
  6024                           
  6025  0070                     ?_SYSTEM_Initialize:	
  6026                           ; 1 bytes @ 0x0
  6027                           
  6028  0070                     ?_main:	
  6029                           ; 1 bytes @ 0x0
  6030                           
  6031  0070                     ?_ADCRead:	
  6032                           ; 1 bytes @ 0x0
  6033                           
  6034  0070                     ?___wmul:	
  6035                           ; 2 bytes @ 0x0
  6036                           
  6037  0070                     ?___awdiv:	
  6038                           ; 2 bytes @ 0x0
  6039                           
  6040  0070                     ?___lwmod:	
  6041                           ; 2 bytes @ 0x0
  6042                           
  6043  0070                     ?___ftpack:	
  6044                           ; 2 bytes @ 0x0
  6045                           
  6046  0070                     ?_frexp:	
  6047                           ; 3 bytes @ 0x0
  6048                           
  6049  0070                     ?___aldiv:	
  6050                           ; 3 bytes @ 0x0
  6051                           
  6052  0070                     LCDWrite@data:	
  6053                           ; 4 bytes @ 0x0
  6054                           
  6055  0070                     PIN_MANAGER_Initialize@state:	
  6056                           ; 1 bytes @ 0x0
  6057                           
  6058  0070                     PWM6_LoadDutyValue@dutyCycle6:	
  6059                           ; 1 bytes @ 0x0
  6060                           
  6061  0070                     PWM7_LoadDutyValue@dutyCycle7:	
  6062                           ; 2 bytes @ 0x0
  6063                           
  6064  0070                     ___wmul@multiplier:	
  6065                           ; 2 bytes @ 0x0
  6066                           
  6067  0070                     ___awdiv@divisor:	
  6068                           ; 2 bytes @ 0x0
  6069                           
  6070  0070                     ___lwmod@divisor:	
  6071                           ; 2 bytes @ 0x0
  6072                           
  6073  0070                     ___ftpack@arg:	
  6074                           ; 2 bytes @ 0x0
  6075                           
  6076  0070                     ___ftge@ff1:	
  6077                           ; 3 bytes @ 0x0
  6078                           
  6079  0070                     frexp@value:	
  6080                           ; 3 bytes @ 0x0
  6081                           
  6082  0070                     ___aldiv@divisor:	
  6083                           ; 3 bytes @ 0x0
  6084                           
  6085                           
  6086                           ; 4 bytes @ 0x0
  6087  0070                     	ds	1
  6088  0071                     ??_LCDWrite:	
  6089  0071                     Init_Battery_State_Machine@z:	
  6090                           ; 1 bytes @ 0x1
  6091                           
  6092                           
  6093                           ; 1 bytes @ 0x1
  6094  0071                     	ds	1
  6095  0072                     ??_PWM6_LoadDutyValue:	
  6096  0072                     ??_PWM7_LoadDutyValue:	
  6097                           ; 1 bytes @ 0x2
  6098                           
  6099  0072                     LCDWrite@data_or_command:	
  6100                           ; 1 bytes @ 0x2
  6101                           
  6102  0072                     ___wmul@multiplicand:	
  6103                           ; 1 bytes @ 0x2
  6104                           
  6105  0072                     ___awdiv@dividend:	
  6106                           ; 2 bytes @ 0x2
  6107                           
  6108  0072                     ___lwmod@dividend:	
  6109                           ; 2 bytes @ 0x2
  6110                           
  6111                           
  6112                           ; 2 bytes @ 0x2
  6113  0072                     	ds	1
  6114  0073                     ??_ADCRead:	
  6115  0073                     ADCRead@channel:	
  6116                           ; 1 bytes @ 0x3
  6117                           
  6118  0073                     LCDWrite@d:	
  6119                           ; 1 bytes @ 0x3
  6120                           
  6121  0073                     ___ftpack@exp:	
  6122                           ; 1 bytes @ 0x3
  6123                           
  6124  0073                     frexp@eptr:	
  6125                           ; 1 bytes @ 0x3
  6126                           
  6127  0073                     ___ftge@ff2:	
  6128                           ; 1 bytes @ 0x3
  6129                           
  6130                           
  6131                           ; 3 bytes @ 0x3
  6132  0073                     	ds	1
  6133  0074                     ??_frexp:	
  6134  0074                     ??_readButton:	
  6135                           ; 1 bytes @ 0x4
  6136                           
  6137  0074                     ??___wmul:	
  6138                           ; 1 bytes @ 0x4
  6139                           
  6140  0074                     ??___awdiv:	
  6141                           ; 1 bytes @ 0x4
  6142                           
  6143  0074                     ??___lwmod:	
  6144                           ; 1 bytes @ 0x4
  6145                           
  6146  0074                     LCDWrite@i:	
  6147                           ; 1 bytes @ 0x4
  6148                           
  6149  0074                     ___ftpack@sign:	
  6150                           ; 1 bytes @ 0x4
  6151                           
  6152  0074                     ___wmul@product:	
  6153                           ; 1 bytes @ 0x4
  6154                           
  6155  0074                     ___aldiv@dividend:	
  6156                           ; 2 bytes @ 0x4
  6157                           
  6158                           
  6159                           ; 4 bytes @ 0x4
  6160  0074                     	ds	1
  6161  0075                     ??___ftpack:	
  6162  0075                     ?_gotoXY:	
  6163                           ; 1 bytes @ 0x5
  6164                           
  6165  0075                     ??_LCDInit:	
  6166                           ; 1 bytes @ 0x5
  6167                           
  6168  0075                     Battery_State_Machine@z:	
  6169                           ; 1 bytes @ 0x5
  6170                           
  6171  0075                     cc_cv_mode@z:	
  6172                           ; 1 bytes @ 0x5
  6173                           
  6174  0075                     gotoXY@y:	
  6175                           ; 1 bytes @ 0x5
  6176                           
  6177  0075                     ___awdiv@counter:	
  6178                           ; 1 bytes @ 0x5
  6179                           
  6180  0075                     ___lwmod@counter:	
  6181                           ; 1 bytes @ 0x5
  6182                           
  6183                           
  6184                           ; 1 bytes @ 0x5
  6185  0075                     	ds	1
  6186  0076                     ??_gotoXY:	
  6187  0076                     ??_LCDWriteCharacter:	
  6188                           ; 1 bytes @ 0x6
  6189                           
  6190  0076                     ??___ftge:	
  6191                           ; 1 bytes @ 0x6
  6192                           
  6193  0076                     ___awdiv@sign:	
  6194                           ; 1 bytes @ 0x6
  6195                           
  6196                           
  6197                           ; 1 bytes @ 0x6
  6198  0076                     	ds	1
  6199  0077                     gotoXY@x:	
  6200  0077                     ___awdiv@quotient:	
  6201                           ; 1 bytes @ 0x7
  6202                           
  6203                           
  6204                           ; 2 bytes @ 0x7
  6205  0077                     	ds	1
  6206  0078                     ??_LCDClear:	
  6207  0078                     ??___aldiv:	
  6208                           ; 1 bytes @ 0x8
  6209                           
  6210  0078                     ?___awtoft:	
  6211                           ; 1 bytes @ 0x8
  6212                           
  6213  0078                     ___awtoft@c:	
  6214                           ; 3 bytes @ 0x8
  6215                           
  6216                           
  6217                           ; 2 bytes @ 0x8
  6218  0078                     	ds	1
  6219  0079                     LCDWriteCharacter@character:	
  6220  0079                     readIAnalog@analog_channel:	
  6221                           ; 1 bytes @ 0x9
  6222                           
  6223  0079                     LCDClear@index:	
  6224                           ; 2 bytes @ 0x9
  6225                           
  6226                           
  6227                           ; 2 bytes @ 0x9
  6228  0079                     	ds	1
  6229  007A                     LCDWriteCharacter@base:	
  6230                           
  6231                           ; 2 bytes @ 0xA
  6232  007A                     	ds	1
  6233  007B                     ??_SYSTEM_Initialize:	
  6234  007B                     ??___awtoft:	
  6235                           ; 1 bytes @ 0xB
  6236                           
  6237  007B                     readIAnalog@value:	
  6238                           ; 1 bytes @ 0xB
  6239                           
  6240                           
  6241                           ; 2 bytes @ 0xB
  6242  007B                     	ds	1
  6243  007C                     ?_LCDWriteString:	
  6244  007C                     LCDWriteString@characters:	
  6245                           ; 1 bytes @ 0xC
  6246                           
  6247                           
  6248                           ; 2 bytes @ 0xC
  6249  007C                     	ds	1
  6250  007D                     ___awtoft@sign:	
  6251                           
  6252                           ; 1 bytes @ 0xD
  6253  007D                     	ds	1
  6254  007E                     ??_eval_poly:	
  6255  007E                     ??_tempCalc:	
  6256                           ; 1 bytes @ 0xE
  6257                           
  6258  007E                     ??___ftsub:	
  6259                           ; 1 bytes @ 0xE
  6260                           
  6261                           
  6262                           	psect	cstackBANK0
  6263  0020                     __pcstackBANK0:	
  6264                           ; 1 bytes @ 0xE
  6265                           
  6266  0020                     ??_LCDWriteString:	
  6267  0020                     ?_LCDWriteInt:	
  6268                           ; 1 bytes @ 0x0
  6269                           
  6270  0020                     ?___ftmul:	
  6271                           ; 1 bytes @ 0x0
  6272                           
  6273  0020                     ___aldiv@counter:	
  6274                           ; 3 bytes @ 0x0
  6275                           
  6276  0020                     LCDWriteInt@value:	
  6277                           ; 1 bytes @ 0x0
  6278                           
  6279  0020                     ___ftmul@f1:	
  6280                           ; 2 bytes @ 0x0
  6281                           
  6282                           
  6283                           ; 3 bytes @ 0x0
  6284  0020                     	ds	1
  6285  0021                     ___aldiv@sign:	
  6286                           
  6287                           ; 1 bytes @ 0x1
  6288  0021                     	ds	1
  6289  0022                     LCDWriteInt@fieldLength:	
  6290  0022                     ___aldiv@quotient:	
  6291                           ; 1 bytes @ 0x2
  6292                           
  6293                           
  6294                           ; 4 bytes @ 0x2
  6295  0022                     	ds	1
  6296  0023                     LCDWriteInt@numPlaces:	
  6297  0023                     ___ftmul@f2:	
  6298                           ; 1 bytes @ 0x3
  6299                           
  6300                           
  6301                           ; 3 bytes @ 0x3
  6302  0023                     	ds	1
  6303  0024                     LCDWriteInt@sign:	
  6304                           
  6305                           ; 1 bytes @ 0x4
  6306  0024                     	ds	1
  6307  0025                     ??_LCDWriteInt:	
  6308                           
  6309                           ; 1 bytes @ 0x5
  6310  0025                     	ds	1
  6311  0026                     ??___ftmul:	
  6312  0026                     ?_readIAnalog:	
  6313                           ; 1 bytes @ 0x6
  6314                           
  6315  0026                     readIAnalog@channel:	
  6316                           ; 2 bytes @ 0x6
  6317                           
  6318                           
  6319                           ; 2 bytes @ 0x6
  6320  0026                     	ds	2
  6321  0028                     ??_readIAnalog:	
  6322                           
  6323                           ; 1 bytes @ 0x8
  6324  0028                     	ds	1
  6325  0029                     LCDWriteInt@str:	
  6326                           
  6327                           ; 5 bytes @ 0x9
  6328  0029                     	ds	1
  6329  002A                     ___ftmul@exp:	
  6330                           
  6331                           ; 1 bytes @ 0xA
  6332  002A                     	ds	1
  6333  002B                     ___ftmul@f3_as_product:	
  6334                           
  6335                           ; 3 bytes @ 0xB
  6336  002B                     	ds	3
  6337  002E                     LCDWriteInt@j:	
  6338  002E                     ___ftmul@cntr:	
  6339                           ; 1 bytes @ 0xE
  6340                           
  6341                           
  6342                           ; 1 bytes @ 0xE
  6343  002E                     	ds	1
  6344  002F                     LCDWriteInt@i:	
  6345  002F                     ___ftmul@sign:	
  6346                           ; 1 bytes @ 0xF
  6347                           
  6348                           
  6349                           ; 1 bytes @ 0xF
  6350  002F                     	ds	1
  6351  0030                     ?___ftdiv:	
  6352  0030                     ___ftdiv@f2:	
  6353                           ; 3 bytes @ 0x10
  6354                           
  6355                           
  6356                           ; 3 bytes @ 0x10
  6357  0030                     	ds	3
  6358  0033                     ___ftdiv@f1:	
  6359                           
  6360                           ; 3 bytes @ 0x13
  6361  0033                     	ds	3
  6362  0036                     ??___ftdiv:	
  6363                           
  6364                           ; 1 bytes @ 0x16
  6365  0036                     	ds	4
  6366  003A                     ___ftdiv@cntr:	
  6367                           
  6368                           ; 1 bytes @ 0x1A
  6369  003A                     	ds	1
  6370  003B                     ___ftdiv@f3:	
  6371                           
  6372                           ; 3 bytes @ 0x1B
  6373  003B                     	ds	3
  6374  003E                     ___ftdiv@exp:	
  6375                           
  6376                           ; 1 bytes @ 0x1E
  6377  003E                     	ds	1
  6378  003F                     ___ftdiv@sign:	
  6379                           
  6380                           ; 1 bytes @ 0x1F
  6381  003F                     	ds	1
  6382  0040                     ?___ftadd:	
  6383  0040                     ?___fttol:	
  6384                           ; 3 bytes @ 0x20
  6385                           
  6386  0040                     ___ftadd@f1:	
  6387                           ; 4 bytes @ 0x20
  6388                           
  6389  0040                     ___fttol@f1:	
  6390                           ; 3 bytes @ 0x20
  6391                           
  6392                           
  6393                           ; 3 bytes @ 0x20
  6394  0040                     	ds	3
  6395  0043                     ___ftadd@f2:	
  6396                           
  6397                           ; 3 bytes @ 0x23
  6398  0043                     	ds	1
  6399  0044                     ??___fttol:	
  6400                           
  6401                           ; 1 bytes @ 0x24
  6402  0044                     	ds	2
  6403  0046                     ??___ftadd:	
  6404                           
  6405                           ; 1 bytes @ 0x26
  6406  0046                     	ds	2
  6407  0048                     ___fttol@sign1:	
  6408                           
  6409                           ; 1 bytes @ 0x28
  6410  0048                     	ds	1
  6411  0049                     ___fttol@lval:	
  6412                           
  6413                           ; 4 bytes @ 0x29
  6414  0049                     	ds	1
  6415  004A                     ___ftadd@sign:	
  6416                           
  6417                           ; 1 bytes @ 0x2A
  6418  004A                     	ds	1
  6419  004B                     ___ftadd@exp2:	
  6420                           
  6421                           ; 1 bytes @ 0x2B
  6422  004B                     	ds	1
  6423  004C                     ___ftadd@exp1:	
  6424                           
  6425                           ; 1 bytes @ 0x2C
  6426  004C                     	ds	1
  6427  004D                     ?_eval_poly:	
  6428  004D                     ?___ftsub:	
  6429                           ; 3 bytes @ 0x2D
  6430                           
  6431  004D                     ___fttol@exp1:	
  6432                           ; 3 bytes @ 0x2D
  6433                           
  6434  004D                     ___ftsub@f2:	
  6435                           ; 1 bytes @ 0x2D
  6436                           
  6437  004D                     eval_poly@x:	
  6438                           ; 3 bytes @ 0x2D
  6439                           
  6440                           
  6441                           ; 3 bytes @ 0x2D
  6442  004D                     	ds	1
  6443  004E                     ??_calculateCurrent0:	
  6444  004E                     ??_calculateCurrent1:	
  6445                           ; 1 bytes @ 0x2E
  6446                           
  6447  004E                     ??_calculateCurrent2:	
  6448                           ; 1 bytes @ 0x2E
  6449                           
  6450  004E                     ??_calculateCurrent3:	
  6451                           ; 1 bytes @ 0x2E
  6452                           
  6453                           
  6454                           ; 1 bytes @ 0x2E
  6455  004E                     	ds	2
  6456  0050                     eval_poly@d:	
  6457  0050                     ___ftsub@f1:	
  6458                           ; 2 bytes @ 0x30
  6459                           
  6460                           
  6461                           ; 3 bytes @ 0x30
  6462  0050                     	ds	2
  6463  0052                     eval_poly@n:	
  6464                           
  6465                           ; 2 bytes @ 0x32
  6466  0052                     	ds	2
  6467  0054                     eval_poly@res:	
  6468                           
  6469                           ; 3 bytes @ 0x34
  6470  0054                     	ds	3
  6471  0057                     ?_log:	
  6472  0057                     log@x:	
  6473                           ; 3 bytes @ 0x37
  6474                           
  6475                           
  6476                           ; 3 bytes @ 0x37
  6477  0057                     	ds	3
  6478  005A                     ??_log:	
  6479                           
  6480                           ; 1 bytes @ 0x3A
  6481  005A                     	ds	1
  6482  005B                     log@exponent:	
  6483                           
  6484                           ; 2 bytes @ 0x3B
  6485  005B                     	ds	2
  6486  005D                     ?_tempCalc:	
  6487  005D                     tempCalc@analogValue:	
  6488                           ; 2 bytes @ 0x3D
  6489                           
  6490                           
  6491                           ; 2 bytes @ 0x3D
  6492  005D                     	ds	2
  6493  005F                     tempCalc@R:	
  6494                           
  6495                           ; 3 bytes @ 0x3F
  6496  005F                     	ds	3
  6497  0062                     _tempCalc$1186:	
  6498                           
  6499                           ; 3 bytes @ 0x42
  6500  0062                     	ds	3
  6501  0065                     tempCalc@steinhart:	
  6502                           
  6503                           ; 3 bytes @ 0x45
  6504  0065                     	ds	3
  6505  0068                     ??_main:	
  6506                           
  6507                           ; 1 bytes @ 0x48
  6508  0068                     	ds	2
  6509                           
  6510                           	psect	maintext
  6511  02CD                     __pmaintext:	
  6512 ;;
  6513 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  6514 ;;
  6515 ;; *************** function _main *****************
  6516 ;; Defined at:
  6517 ;;		line 41 in file "main.c"
  6518 ;; Parameters:    Size  Location     Type
  6519 ;;		None
  6520 ;; Auto vars:     Size  Location     Type
  6521 ;;  efficiency      3    0[BANK1 ] float 
  6522 ;;  dutyCycle7      2   23[BANK1 ] unsigned int 
  6523 ;;  dutyCycle6      2   21[BANK1 ] unsigned int 
  6524 ;;  MPPT1           2   17[BANK1 ] int 
  6525 ;;  MPPT0           2   15[BANK1 ] int 
  6526 ;;  faultNotRese    2   11[BANK1 ] unsigned int 
  6527 ;;  faultCount      2    9[BANK1 ] unsigned int 
  6528 ;;  batteryTemp     2    7[BANK1 ] int 
  6529 ;;  IOutTotal       2    5[BANK1 ] int 
  6530 ;;  dutyCycle1      2    3[BANK1 ] unsigned int 
  6531 ;;  j               1   20[BANK1 ] unsigned char 
  6532 ;;  menuButton      1   19[BANK1 ] unsigned char 
  6533 ;;  displayRefre    1   14[BANK1 ] unsigned char 
  6534 ;;  slowLoop        1   13[BANK1 ] unsigned char 
  6535 ;; Return value:  Size  Location     Type
  6536 ;;                  1    wreg      void 
  6537 ;; Registers used:
  6538 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6539 ;; Tracked objects:
  6540 ;;		On entry : B1F/0
  6541 ;;		On exit  : 0/0
  6542 ;;		Unchanged: 0/0
  6543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6545 ;;      Locals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0
  6546 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6547 ;;      Totals:         0       2      25       0       0       0       0       0       0       0       0       0       
      +0       0
  6548 ;;Total ram usage:       27 bytes
  6549 ;; Hardware stack levels required when called:    5
  6550 ;; This function calls:
  6551 ;;		_ADCRead
  6552 ;;		_Battery_State_Machine
  6553 ;;		_LCDClear
  6554 ;;		_LCDInit
  6555 ;;		_LCDWriteCharacter
  6556 ;;		_LCDWriteInt
  6557 ;;		_LCDWriteString
  6558 ;;		_PWM6_LoadDutyValue
  6559 ;;		_PWM7_LoadDutyValue
  6560 ;;		_SYSTEM_Initialize
  6561 ;;		___awtoft
  6562 ;;		___ftdiv
  6563 ;;		___fttol
  6564 ;;		_calculateCurrent0
  6565 ;;		_calculateCurrent1
  6566 ;;		_calculateCurrent2
  6567 ;;		_calculateCurrent3
  6568 ;;		_cc_cv_mode
  6569 ;;		_gotoXY
  6570 ;;		_readButton
  6571 ;;		_readIAnalog
  6572 ;;		_tempCalc
  6573 ;; This function is called by:
  6574 ;;		Startup code after reset
  6575 ;; This function uses a non-reentrant model
  6576 ;;
  6577                           
  6578                           
  6579                           ;psect for function _main
  6580  02CD                     _main:	
  6581                           
  6582                           ;main.c: 43: int16_t MPPT0 = 1550;
  6583                           
  6584                           ;incstack = 0
  6585                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6586  02CD  300E               	movlw	14
  6587  02CE  0021               	movlb	1	; select bank1
  6588  02CF  00E6               	movwf	main@MPPT0^(0+128)
  6589  02D0  3006               	movlw	6
  6590  02D1  00E7               	movwf	(main@MPPT0^(0+128)+1)
  6591                           
  6592                           ;main.c: 44: int16_t MPPT1 = 1550;
  6593  02D2  300E               	movlw	14
  6594  02D3  00E8               	movwf	main@MPPT1^(0+128)
  6595  02D4  3006               	movlw	6
  6596  02D5  00E9               	movwf	(main@MPPT1^(0+128)+1)
  6597                           
  6598                           ;main.c: 46: uint16_t dutyCycle6 = 1023;
  6599  02D6  30FF               	movlw	255
  6600  02D7  00EC               	movwf	main@dutyCycle6^(0+128)
  6601  02D8  3003               	movlw	3
  6602  02D9  00ED               	movwf	(main@dutyCycle6^(0+128)+1)
  6603                           
  6604                           ;main.c: 47: uint16_t dutyCycle7 = 1023;
  6605  02DA  30FF               	movlw	255
  6606  02DB  00EE               	movwf	main@dutyCycle7^(0+128)
  6607  02DC  3003               	movlw	3
  6608  02DD  00EF               	movwf	(main@dutyCycle7^(0+128)+1)
  6609                           
  6610                           ;main.c: 48: uint16_t dutyCycle1 = 60;
  6611  02DE  303C               	movlw	60
  6612  02DF  00DA               	movwf	main@dutyCycle1^(0+128)
  6613  02E0  3000               	movlw	0
  6614  02E1  00DB               	movwf	(main@dutyCycle1^(0+128)+1)
  6615                           
  6616                           ;main.c: 49: int16_t IOutTotal = 0;
  6617  02E2  01DC               	clrf	main@IOutTotal^(0+128)
  6618  02E3  01DD               	clrf	(main@IOutTotal+1)^(0+128)
  6619                           
  6620                           ;main.c: 51: uint8_t j = 0;
  6621  02E4  01EB               	clrf	main@j^(0+128)
  6622                           
  6623                           ;main.c: 54: uint8_t slowLoop = 200;
  6624  02E5  30C8               	movlw	200
  6625  02E6  0020               	movlb	0	; select bank0
  6626  02E7  00E8               	movwf	??_main
  6627  02E8  0868               	movf	??_main,w
  6628  02E9  0021               	movlb	1	; select bank1
  6629  02EA  00E4               	movwf	main@slowLoop^(0+128)
  6630                           
  6631                           ;main.c: 55: uint8_t displayRefresh = 0;
  6632  02EB  01E5               	clrf	main@displayRefresh^(0+128)
  6633                           
  6634                           ;main.c: 56: int16_t batteryTemp = 250;
  6635  02EC  30FA               	movlw	250
  6636  02ED  00DE               	movwf	main@batteryTemp^(0+128)
  6637  02EE  3000               	movlw	0
  6638  02EF  00DF               	movwf	(main@batteryTemp^(0+128)+1)
  6639                           
  6640                           ;main.c: 57: float efficiency = 0;
  6641  02F0  3000               	movlw	0
  6642  02F1  00D7               	movwf	main@efficiency^(0+128)
  6643  02F2  3000               	movlw	0
  6644  02F3  00D8               	movwf	(main@efficiency+1)^(0+128)
  6645  02F4  3000               	movlw	0
  6646  02F5  00D9               	movwf	(main@efficiency+2)^(0+128)
  6647                           
  6648                           ;main.c: 58: extern int8_t Imode[2];
  6649                           ;main.c: 59: extern int16_t Vref[2];
  6650                           ;main.c: 60: extern int16_t Iref[2];
  6651                           ;main.c: 61: uint8_t menuButton = 0;
  6652  02F6  01EA               	clrf	main@menuButton^(0+128)
  6653                           
  6654                           ;main.c: 62: uint16_t faultCount = 0;
  6655  02F7  01E0               	clrf	main@faultCount^(0+128)
  6656  02F8  01E1               	clrf	(main@faultCount+1)^(0+128)
  6657                           
  6658                           ;main.c: 63: uint16_t faultNotReset = 0;
  6659  02F9  01E2               	clrf	main@faultNotReset^(0+128)
  6660  02FA  01E3               	clrf	(main@faultNotReset+1)^(0+128)
  6661                           
  6662                           ;main.c: 64: extern int8_t VHoldMode[2];
  6663                           ;main.c: 65: extern uint8_t batteryState[2];
  6664                           ;main.c: 67: extern uint16_t IminCount[2];
  6665                           ;main.c: 70: SYSTEM_Initialize();
  6666  02FB  3194  2477  3182   	fcall	_SYSTEM_Initialize
  6667                           
  6668                           ;main.c: 72: LCDClear();
  6669  02FE  3193  23E7  3182   	fcall	_LCDClear
  6670  0301                     l3094:	
  6671                           ;main.c: 74: void calculateCurrent0(void);
  6672                           ;main.c: 75: void calculateCurrent1(void);
  6673                           ;main.c: 76: void calculateCurrent2(void);
  6674                           ;main.c: 77: void calculateCurrent3(void);
  6675                           ;main.c: 91: while (1)
  6676                           
  6677                           
  6678                           ;main.c: 92: {
  6679                           ;main.c: 93: if(!(RB2))
  6680  0301  0020               	movlb	0	; select bank0
  6681  0302  190D               	btfsc	13,2	;volatile
  6682  0303  2B15               	goto	l3102
  6683                           
  6684                           ;main.c: 94: {
  6685                           ;main.c: 95: LATA5=0;
  6686  0304  1296               	bcf	22,5	;volatile
  6687                           
  6688                           ;main.c: 96: _delay((unsigned long)((400)*(32000000/4000000.0)));
  6689  0305  3005               	movlw	5
  6690  0306  0020               	movlb	0	; select bank0
  6691  0307  00E8               	movwf	??_main
  6692  0308  3026               	movlw	38
  6693  0309                     u3937:	
  6694  0309  0B89               	decfsz	9,f
  6695  030A  2B09               	goto	u3937
  6696  030B  0BE8               	decfsz	??_main,f
  6697  030C  2B09               	goto	u3937
  6698  030D  0000               	nop
  6699                           
  6700                           ;main.c: 97: faultCount+=1;
  6701  030E  3001               	movlw	1
  6702  030F  0021               	movlb	1	; select bank1
  6703  0310  07E0               	addwf	main@faultCount^(0+128),f
  6704  0311  3000               	movlw	0
  6705  0312  3DE1               	addwfc	(main@faultCount+1)^(0+128),f
  6706                           
  6707                           ;main.c: 98: LATA5=1;
  6708  0313  0020               	movlb	0	; select bank0
  6709  0314  1696               	bsf	22,5	;volatile
  6710  0315                     l3102:	
  6711                           
  6712                           ;main.c: 99: }
  6713                           ;main.c: 100: for(j=0;j<4;j++) Ianalogs[j]=readIAnalog(j);
  6714  0315  0021               	movlb	1	; select bank1
  6715  0316  01EB               	clrf	main@j^(0+128)
  6716  0317  3004               	movlw	4
  6717  0318  026B               	subwf	main@j^(0+128),w
  6718  0319  1803               	btfsc	3,0
  6719  031A  2B39               	goto	l3114
  6720  031B                     l3108:	
  6721  031B  086B               	movf	main@j^(0+128),w
  6722  031C  0020               	movlb	0	; select bank0
  6723  031D  00E8               	movwf	??_main
  6724  031E  01E9               	clrf	??_main+1
  6725  031F  0868               	movf	??_main,w
  6726  0320  00A6               	movwf	readIAnalog@channel
  6727  0321  0869               	movf	??_main+1,w
  6728  0322  00A7               	movwf	readIAnalog@channel+1
  6729  0323  3181  2181  3182   	fcall	_readIAnalog
  6730  0326  0021               	movlb	1	; select bank1
  6731  0327  356B               	lslf	main@j^(0+128),w
  6732  0328  3EA0               	addlw	(low (_Ianalogs| 0))& (0+255)
  6733  0329  0086               	movwf	6
  6734  032A  0187               	clrf	7
  6735  032B  0020               	movlb	0	; select bank0
  6736  032C  0826               	movf	?_readIAnalog,w
  6737  032D  3FC0               	movwi [0]fsr1
  6738  032E  0827               	movf	?_readIAnalog+1,w
  6739  032F  3FC1               	movwi [1]fsr1
  6740  0330  3001               	movlw	1
  6741  0331  00E8               	movwf	??_main
  6742  0332  0868               	movf	??_main,w
  6743  0333  0021               	movlb	1	; select bank1
  6744  0334  07EB               	addwf	main@j^(0+128),f
  6745  0335  3004               	movlw	4
  6746  0336  026B               	subwf	main@j^(0+128),w
  6747  0337  1C03               	skipc
  6748  0338  2B1B               	goto	l3108
  6749  0339                     l3114:	
  6750                           
  6751                           ;main.c: 102: Vanalogs[0]=ADCRead(21);
  6752  0339  3015               	movlw	21
  6753  033A  3193  2309  3182   	fcall	_ADCRead
  6754  033D  0871               	movf	?_ADCRead+1,w
  6755  033E  0022               	movlb	2	; select bank2
  6756  033F  00B1               	movwf	(_Vanalogs+1)^(0+256)
  6757  0340  0870               	movf	?_ADCRead,w
  6758  0341  00B0               	movwf	_Vanalogs^(0+256)
  6759                           
  6760                           ;main.c: 104: Vanalogs[1]=ADCRead(17);
  6761  0342  3011               	movlw	17
  6762  0343  3193  2309  3182   	fcall	_ADCRead
  6763  0346  0871               	movf	?_ADCRead+1,w
  6764  0347  0022               	movlb	2	; select bank2
  6765  0348  00B3               	movwf	((_Vanalogs+1)^(0+256)+2)
  6766  0349  0870               	movf	?_ADCRead,w
  6767  034A  00B2               	movwf	(_Vanalogs^(0+256)+2)
  6768                           
  6769                           ;main.c: 106: Vanalogs[2]=ADCRead(23);
  6770  034B  3017               	movlw	23
  6771  034C  3193  2309  3182   	fcall	_ADCRead
  6772  034F  0871               	movf	?_ADCRead+1,w
  6773  0350  0022               	movlb	2	; select bank2
  6774  0351  00B5               	movwf	((_Vanalogs+1)^(0+256)+4)
  6775  0352  0870               	movf	?_ADCRead,w
  6776  0353  00B4               	movwf	(_Vanalogs^(0+256)+4)
  6777                           
  6778                           ;main.c: 108: Vanalogs[3]=ADCRead(19);
  6779  0354  3013               	movlw	19
  6780  0355  3193  2309  3182   	fcall	_ADCRead
  6781  0358  0871               	movf	?_ADCRead+1,w
  6782  0359  0022               	movlb	2	; select bank2
  6783  035A  00B7               	movwf	((_Vanalogs+1)^(0+256)+6)
  6784  035B  0870               	movf	?_ADCRead,w
  6785  035C  00B6               	movwf	(_Vanalogs^(0+256)+6)
  6786                           
  6787                           ;main.c: 110: if(!(RB2))faultNotReset+=1;
  6788  035D  0020               	movlb	0	; select bank0
  6789  035E  190D               	btfsc	13,2	;volatile
  6790  035F  2B65               	goto	l3120
  6791  0360  3001               	movlw	1
  6792  0361  0021               	movlb	1	; select bank1
  6793  0362  07E2               	addwf	main@faultNotReset^(0+128),f
  6794  0363  3000               	movlw	0
  6795  0364  3DE3               	addwfc	(main@faultNotReset+1)^(0+128),f
  6796  0365                     l3120:	
  6797                           
  6798                           ;main.c: 112: voltage[0]=(int16_t)(Vanalogs[0]/.5448);
  6799  0365  0022               	movlb	2	; select bank2
  6800  0366  0831               	movf	(_Vanalogs+1)^(0+256),w
  6801  0367  00F9               	movwf	___awtoft@c+1
  6802  0368  0830               	movf	_Vanalogs^(0+256),w
  6803  0369  00F8               	movwf	___awtoft@c
  6804  036A  3193  23A2  3182   	fcall	___awtoft
  6805  036D  0878               	movf	?___awtoft,w
  6806  036E  0020               	movlb	0	; select bank0
  6807  036F  00B3               	movwf	___ftdiv@f1
  6808  0370  0879               	movf	?___awtoft+1,w
  6809  0371  00B4               	movwf	___ftdiv@f1+1
  6810  0372  087A               	movf	?___awtoft+2,w
  6811  0373  00B5               	movwf	___ftdiv@f1+2
  6812  0374  3078               	movlw	120
  6813  0375  00B0               	movwf	___ftdiv@f2
  6814  0376  300B               	movlw	11
  6815  0377  00B1               	movwf	___ftdiv@f2+1
  6816  0378  303F               	movlw	63
  6817  0379  00B2               	movwf	___ftdiv@f2+2
  6818  037A  318A  2267  3182   	fcall	___ftdiv
  6819  037D  0020               	movlb	0	; select bank0
  6820  037E  0830               	movf	?___ftdiv,w
  6821  037F  00C0               	movwf	___fttol@f1
  6822  0380  0831               	movf	?___ftdiv+1,w
  6823  0381  00C1               	movwf	___fttol@f1+1
  6824  0382  0832               	movf	?___ftdiv+2,w
  6825  0383  00C2               	movwf	___fttol@f1+2
  6826  0384  3189  21E0  3182   	fcall	___fttol
  6827  0387  0020               	movlb	0	; select bank0
  6828  0388  0841               	movf	?___fttol+1,w
  6829  0389  0021               	movlb	1	; select bank1
  6830  038A  00B1               	movwf	(_voltage+1)^(0+128)
  6831  038B  0020               	movlb	0	; select bank0
  6832  038C  0840               	movf	?___fttol,w
  6833  038D  0021               	movlb	1	; select bank1
  6834  038E  00B0               	movwf	_voltage^(0+128)
  6835                           
  6836                           ;main.c: 114: voltage[1]=(int16_t)(Vanalogs[1]/.540757);
  6837  038F  0022               	movlb	2	; select bank2
  6838  0390  0833               	movf	((_Vanalogs+1)^(0+256)+2),w
  6839  0391  00F9               	movwf	___awtoft@c+1
  6840  0392  0832               	movf	(_Vanalogs^(0+256)+2),w
  6841  0393  00F8               	movwf	___awtoft@c
  6842  0394  3193  23A2  3182   	fcall	___awtoft
  6843  0397  0878               	movf	?___awtoft,w
  6844  0398  0020               	movlb	0	; select bank0
  6845  0399  00B3               	movwf	___ftdiv@f1
  6846  039A  0879               	movf	?___awtoft+1,w
  6847  039B  00B4               	movwf	___ftdiv@f1+1
  6848  039C  087A               	movf	?___awtoft+2,w
  6849  039D  00B5               	movwf	___ftdiv@f1+2
  6850  039E  306F               	movlw	111
  6851  039F  00B0               	movwf	___ftdiv@f2
  6852  03A0  300A               	movlw	10
  6853  03A1  00B1               	movwf	___ftdiv@f2+1
  6854  03A2  303F               	movlw	63
  6855  03A3  00B2               	movwf	___ftdiv@f2+2
  6856  03A4  318A  2267  3182   	fcall	___ftdiv
  6857  03A7  0020               	movlb	0	; select bank0
  6858  03A8  0830               	movf	?___ftdiv,w
  6859  03A9  00C0               	movwf	___fttol@f1
  6860  03AA  0831               	movf	?___ftdiv+1,w
  6861  03AB  00C1               	movwf	___fttol@f1+1
  6862  03AC  0832               	movf	?___ftdiv+2,w
  6863  03AD  00C2               	movwf	___fttol@f1+2
  6864  03AE  3189  21E0  3182   	fcall	___fttol
  6865  03B1  0020               	movlb	0	; select bank0
  6866  03B2  0841               	movf	?___fttol+1,w
  6867  03B3  0021               	movlb	1	; select bank1
  6868  03B4  00B3               	movwf	((_voltage+1)^(0+128)+2)
  6869  03B5  0020               	movlb	0	; select bank0
  6870  03B6  0840               	movf	?___fttol,w
  6871  03B7  0021               	movlb	1	; select bank1
  6872  03B8  00B2               	movwf	(_voltage^(0+128)+2)
  6873                           
  6874                           ;main.c: 116: voltage[2]=(int16_t)(Vanalogs[2]/.405775);
  6875  03B9  0022               	movlb	2	; select bank2
  6876  03BA  0835               	movf	((_Vanalogs+1)^(0+256)+4),w
  6877  03BB  00F9               	movwf	___awtoft@c+1
  6878  03BC  0834               	movf	(_Vanalogs^(0+256)+4),w
  6879  03BD  00F8               	movwf	___awtoft@c
  6880  03BE  3193  23A2  3182   	fcall	___awtoft
  6881  03C1  0878               	movf	?___awtoft,w
  6882  03C2  0020               	movlb	0	; select bank0
  6883  03C3  00B3               	movwf	___ftdiv@f1
  6884  03C4  0879               	movf	?___awtoft+1,w
  6885  03C5  00B4               	movwf	___ftdiv@f1+1
  6886  03C6  087A               	movf	?___awtoft+2,w
  6887  03C7  00B5               	movwf	___ftdiv@f1+2
  6888  03C8  30C2               	movlw	194
  6889  03C9  00B0               	movwf	___ftdiv@f2
  6890  03CA  30CF               	movlw	207
  6891  03CB  00B1               	movwf	___ftdiv@f2+1
  6892  03CC  303E               	movlw	62
  6893  03CD  00B2               	movwf	___ftdiv@f2+2
  6894  03CE  318A  2267  3182   	fcall	___ftdiv
  6895  03D1  0020               	movlb	0	; select bank0
  6896  03D2  0830               	movf	?___ftdiv,w
  6897  03D3  00C0               	movwf	___fttol@f1
  6898  03D4  0831               	movf	?___ftdiv+1,w
  6899  03D5  00C1               	movwf	___fttol@f1+1
  6900  03D6  0832               	movf	?___ftdiv+2,w
  6901  03D7  00C2               	movwf	___fttol@f1+2
  6902  03D8  3189  21E0  3182   	fcall	___fttol
  6903  03DB  0020               	movlb	0	; select bank0
  6904  03DC  0841               	movf	?___fttol+1,w
  6905  03DD  0021               	movlb	1	; select bank1
  6906  03DE  00B5               	movwf	((_voltage+1)^(0+128)+4)
  6907  03DF  0020               	movlb	0	; select bank0
  6908  03E0  0840               	movf	?___fttol,w
  6909  03E1  0021               	movlb	1	; select bank1
  6910  03E2  00B4               	movwf	(_voltage^(0+128)+4)
  6911                           
  6912                           ;main.c: 118: voltage[3]=(int16_t)(Vanalogs[3]/.406788);
  6913  03E3  0022               	movlb	2	; select bank2
  6914  03E4  0837               	movf	((_Vanalogs+1)^(0+256)+6),w
  6915  03E5  00F9               	movwf	___awtoft@c+1
  6916  03E6  0836               	movf	(_Vanalogs^(0+256)+6),w
  6917  03E7  00F8               	movwf	___awtoft@c
  6918  03E8  3193  23A2  3182   	fcall	___awtoft
  6919  03EB  0878               	movf	?___awtoft,w
  6920  03EC  0020               	movlb	0	; select bank0
  6921  03ED  00B3               	movwf	___ftdiv@f1
  6922  03EE  0879               	movf	?___awtoft+1,w
  6923  03EF  00B4               	movwf	___ftdiv@f1+1
  6924  03F0  087A               	movf	?___awtoft+2,w
  6925  03F1  00B5               	movwf	___ftdiv@f1+2
  6926  03F2  3047               	movlw	71
  6927  03F3  00B0               	movwf	___ftdiv@f2
  6928  03F4  30D0               	movlw	208
  6929  03F5  00B1               	movwf	___ftdiv@f2+1
  6930  03F6  303E               	movlw	62
  6931  03F7  00B2               	movwf	___ftdiv@f2+2
  6932  03F8  318A  2267  3182   	fcall	___ftdiv
  6933  03FB  0020               	movlb	0	; select bank0
  6934  03FC  0830               	movf	?___ftdiv,w
  6935  03FD  00C0               	movwf	___fttol@f1
  6936  03FE  0831               	movf	?___ftdiv+1,w
  6937  03FF  00C1               	movwf	___fttol@f1+1
  6938  0400  0832               	movf	?___ftdiv+2,w
  6939  0401  00C2               	movwf	___fttol@f1+2
  6940  0402  3189  21E0  3182   	fcall	___fttol
  6941  0405  0020               	movlb	0	; select bank0
  6942  0406  0841               	movf	?___fttol+1,w
  6943  0407  0021               	movlb	1	; select bank1
  6944  0408  00B7               	movwf	((_voltage+1)^(0+128)+6)
  6945  0409  0020               	movlb	0	; select bank0
  6946  040A  0840               	movf	?___fttol,w
  6947  040B  0021               	movlb	1	; select bank1
  6948  040C  00B6               	movwf	(_voltage^(0+128)+6)
  6949                           
  6950                           ;main.c: 120: calculateCurrent0();
  6951  040D  3195  2561  3182   	fcall	_calculateCurrent0
  6952                           
  6953                           ;main.c: 122: calculateCurrent1();
  6954  0410  3195  25A6  3182   	fcall	_calculateCurrent1
  6955                           
  6956                           ;main.c: 124: calculateCurrent2();
  6957  0413  3195  25EB  3182   	fcall	_calculateCurrent2
  6958                           
  6959                           ;main.c: 126: calculateCurrent3();
  6960  0416  3196  2630  3182   	fcall	_calculateCurrent3
  6961                           
  6962                           ;main.c: 128: if(Imode[0])
  6963  0419  0021               	movlb	1	; select bank1
  6964  041A  084E               	movf	_Imode^(0+128),w
  6965  041B  1903               	btfsc	3,2
  6966  041C  2C3D               	goto	l3150
  6967                           
  6968                           ;main.c: 129: {
  6969                           ;main.c: 130: if(voltage[2]<MPPT0)
  6970  041D  0835               	movf	((_voltage+1)^(0+128)+4),w
  6971  041E  3A80               	xorlw	128
  6972  041F  0020               	movlb	0	; select bank0
  6973  0420  00E8               	movwf	??_main
  6974  0421  0021               	movlb	1	; select bank1
  6975  0422  0867               	movf	(main@MPPT0+1)^(0+128),w
  6976  0423  3A80               	xorlw	128
  6977  0424  0020               	movlb	0	; select bank0
  6978  0425  0268               	subwf	??_main,w
  6979  0426  1D03               	skipz
  6980  0427  2C2B               	goto	u3685
  6981  0428  0021               	movlb	1	; select bank1
  6982  0429  0866               	movf	main@MPPT0^(0+128),w
  6983  042A  0234               	subwf	(_voltage^(0+128)+4),w
  6984  042B                     u3685:	
  6985  042B  1C03               	btfss	3,0
  6986  042C  2C4D               	goto	L1
  6987                           
  6988                           ;main.c: 137: else if(voltage[2]>MPPT0)
  6989                           
  6990                           ;main.c: 135: }
  6991                           ;main.c: 136: }
  6992                           
  6993                           ;main.c: 133: {
  6994                           ;main.c: 134: dutyCycle6+=1;
  6995                           
  6996                           ;main.c: 131: {
  6997                           ;main.c: 132: if(dutyCycle6<1023)
  6998  042D  0021               	movlb	1	; select bank1
  6999  042E  0867               	movf	(main@MPPT0+1)^(0+128),w
  7000  042F  3A80               	xorlw	128
  7001  0430  0020               	movlb	0	; select bank0
  7002  0431  00E8               	movwf	??_main
  7003  0432  0021               	movlb	1	; select bank1
  7004  0433  0835               	movf	((_voltage+1)^(0+128)+4),w
  7005  0434  3A80               	xorlw	128
  7006  0435  0020               	movlb	0	; select bank0
  7007  0436  0268               	subwf	??_main,w
  7008  0437  1D03               	skipz
  7009  0438  2C69               	goto	u3745
  7010  0439  0021               	movlb	1	; select bank1
  7011  043A  0834               	movf	(_voltage^(0+128)+4),w
  7012  043B  0266               	subwf	main@MPPT0^(0+128),w
  7013  043C  2C69               	goto	u3745
  7014  043D                     l3150:	
  7015                           ;main.c: 145: }
  7016                           
  7017                           ;main.c: 142: }
  7018                           ;main.c: 143: }
  7019                           
  7020                           ;main.c: 140: {
  7021                           ;main.c: 141: dutyCycle6-=1;
  7022                           
  7023                           ;main.c: 138: {
  7024                           ;main.c: 139: if(dutyCycle6>0)
  7025                           
  7026                           
  7027                           ;main.c: 146: else
  7028                           ;main.c: 147: {
  7029                           ;main.c: 148: if(voltage[0]>(int16_t)Vref[0])
  7030  043D  0839               	movf	(_Vref+1)^(0+128),w
  7031  043E  3A80               	xorlw	128
  7032  043F  0020               	movlb	0	; select bank0
  7033  0440  00E8               	movwf	??_main
  7034  0441  0021               	movlb	1	; select bank1
  7035  0442  0831               	movf	(_voltage+1)^(0+128),w
  7036  0443  3A80               	xorlw	128
  7037  0444  0020               	movlb	0	; select bank0
  7038  0445  0268               	subwf	??_main,w
  7039  0446  1D03               	skipz
  7040  0447  2C4B               	goto	u3725
  7041  0448  0021               	movlb	1	; select bank1
  7042  0449  0830               	movf	_voltage^(0+128),w
  7043  044A  0238               	subwf	_Vref^(0+128),w
  7044  044B                     u3725:	
  7045  044B  1803               	skipnc
  7046  044C  2C5A               	goto	l3156
  7047  044D                     L1:	
  7048                           
  7049                           ;main.c: 149: {
  7050                           ;main.c: 150: if(dutyCycle6<1023) dutyCycle6+=1;
  7051  044D  3003               	movlw	3
  7052  044E  0021               	movlb	1	; select bank1
  7053  044F  026D               	subwf	(main@dutyCycle6+1)^(0+128),w
  7054  0450  30FF               	movlw	255
  7055  0451  1903               	skipnz
  7056  0452  026C               	subwf	main@dutyCycle6^(0+128),w
  7057  0453  1803               	skipnc
  7058  0454  2C74               	goto	l3162
  7059  0455  3001               	movlw	1
  7060  0456  07EC               	addwf	main@dutyCycle6^(0+128),f
  7061  0457  3000               	movlw	0
  7062  0458  3DED               	addwfc	(main@dutyCycle6+1)^(0+128),f
  7063                           
  7064                           ;main.c: 151: }
  7065  0459  2C74               	goto	l3162
  7066  045A                     l3156:	
  7067                           
  7068                           ;main.c: 152: else if(voltage[0]<(int16_t)Vref[0])
  7069  045A  0021               	movlb	1	; select bank1
  7070  045B  0831               	movf	(_voltage+1)^(0+128),w
  7071  045C  3A80               	xorlw	128
  7072  045D  0020               	movlb	0	; select bank0
  7073  045E  00E8               	movwf	??_main
  7074  045F  0021               	movlb	1	; select bank1
  7075  0460  0839               	movf	(_Vref+1)^(0+128),w
  7076  0461  3A80               	xorlw	128
  7077  0462  0020               	movlb	0	; select bank0
  7078  0463  0268               	subwf	??_main,w
  7079  0464  1D03               	skipz
  7080  0465  2C69               	goto	u3745
  7081  0466  0021               	movlb	1	; select bank1
  7082  0467  0838               	movf	_Vref^(0+128),w
  7083  0468  0230               	subwf	_voltage^(0+128),w
  7084  0469                     u3745:	
  7085  0469  1803               	skipnc
  7086  046A  2C74               	goto	l3162
  7087                           
  7088                           ;main.c: 153: {
  7089                           ;main.c: 154: if(dutyCycle6>0) dutyCycle6-=1;;
  7090  046B  0021               	movlb	1	; select bank1
  7091  046C  086C               	movf	main@dutyCycle6^(0+128),w
  7092  046D  046D               	iorwf	(main@dutyCycle6+1)^(0+128),w
  7093  046E  1903               	btfsc	3,2
  7094  046F  2C74               	goto	l3162
  7095  0470  3001               	movlw	1
  7096  0471  02EC               	subwf	main@dutyCycle6^(0+128),f
  7097  0472  3000               	movlw	0
  7098  0473  3BED               	subwfb	(main@dutyCycle6+1)^(0+128),f
  7099  0474                     l3162:	
  7100                           ;main.c: 155: }
  7101                           
  7102                           
  7103                           ;main.c: 157: }
  7104                           ;main.c: 159: if(Imode[1])
  7105  0474  0021               	movlb	1	; select bank1
  7106  0475  084F               	movf	(_Imode^(0+128)+1),w
  7107  0476  1903               	btfsc	3,2
  7108  0477  2C89               	goto	l3174
  7109                           
  7110                           ;main.c: 160: {
  7111                           ;main.c: 161: if(voltage[3]<MPPT1)
  7112  0478  0837               	movf	((_voltage+1)^(0+128)+6),w
  7113  0479  3A80               	xorlw	128
  7114  047A  0020               	movlb	0	; select bank0
  7115  047B  00E8               	movwf	??_main
  7116  047C  0021               	movlb	1	; select bank1
  7117  047D  0869               	movf	(main@MPPT1+1)^(0+128),w
  7118  047E  3A80               	xorlw	128
  7119  047F  0020               	movlb	0	; select bank0
  7120  0480  0268               	subwf	??_main,w
  7121  0481  1D03               	skipz
  7122  0482  2C86               	goto	u3775
  7123  0483  0021               	movlb	1	; select bank1
  7124  0484  0868               	movf	main@MPPT1^(0+128),w
  7125  0485  0236               	subwf	(_voltage^(0+128)+6),w
  7126  0486                     u3775:	
  7127  0486  1C03               	btfss	3,0
  7128  0487  2C99               	goto	L2
  7129                           
  7130                           ;main.c: 166: }
  7131                           ;main.c: 167: }
  7132                           
  7133                           ;main.c: 164: {
  7134                           ;main.c: 165: dutyCycle7+=1;
  7135                           
  7136                           ;main.c: 162: {
  7137                           ;main.c: 163: if(dutyCycle7<1023)
  7138  0488  2CB7               	goto	L3
  7139  0489                     l3174:	
  7140                           ;main.c: 171: }
  7141                           ;main.c: 172: }
  7142                           
  7143                           ;main.c: 169: {
  7144                           ;main.c: 170: dutyCycle7-=1;
  7145                           
  7146                           ;main.c: 168: else if(dutyCycle7>0)
  7147                           
  7148                           
  7149                           ;main.c: 173: else
  7150                           ;main.c: 174: {
  7151                           ;main.c: 175: if(voltage[1]>(int16_t)Vref[1])
  7152  0489  083B               	movf	((_Vref+1)^(0+128)+2),w
  7153  048A  3A80               	xorlw	128
  7154  048B  0020               	movlb	0	; select bank0
  7155  048C  00E8               	movwf	??_main
  7156  048D  0021               	movlb	1	; select bank1
  7157  048E  0833               	movf	((_voltage+1)^(0+128)+2),w
  7158  048F  3A80               	xorlw	128
  7159  0490  0020               	movlb	0	; select bank0
  7160  0491  0268               	subwf	??_main,w
  7161  0492  1D03               	skipz
  7162  0493  2C97               	goto	u3805
  7163  0494  0021               	movlb	1	; select bank1
  7164  0495  0832               	movf	(_voltage^(0+128)+2),w
  7165  0496  023A               	subwf	(_Vref^(0+128)+2),w
  7166  0497                     u3805:	
  7167  0497  1803               	skipnc
  7168  0498  2CA6               	goto	l3180
  7169  0499                     L2:	
  7170                           
  7171                           ;main.c: 176: {
  7172                           ;main.c: 177: if(dutyCycle7<1023) dutyCycle7+=1;
  7173  0499  3003               	movlw	3
  7174  049A  0021               	movlb	1	; select bank1
  7175  049B  026F               	subwf	(main@dutyCycle7+1)^(0+128),w
  7176  049C  30FF               	movlw	255
  7177  049D  1903               	skipnz
  7178  049E  026E               	subwf	main@dutyCycle7^(0+128),w
  7179  049F  1803               	skipnc
  7180  04A0  2CC0               	goto	l3186
  7181  04A1  3001               	movlw	1
  7182  04A2  07EE               	addwf	main@dutyCycle7^(0+128),f
  7183  04A3  3000               	movlw	0
  7184  04A4  3DEF               	addwfc	(main@dutyCycle7+1)^(0+128),f
  7185                           
  7186                           ;main.c: 178: }
  7187  04A5  2CC0               	goto	l3186
  7188  04A6                     l3180:	
  7189                           
  7190                           ;main.c: 179: else if(voltage[1]<(int16_t)Vref[1])
  7191  04A6  0021               	movlb	1	; select bank1
  7192  04A7  0833               	movf	((_voltage+1)^(0+128)+2),w
  7193  04A8  3A80               	xorlw	128
  7194  04A9  0020               	movlb	0	; select bank0
  7195  04AA  00E8               	movwf	??_main
  7196  04AB  0021               	movlb	1	; select bank1
  7197  04AC  083B               	movf	((_Vref+1)^(0+128)+2),w
  7198  04AD  3A80               	xorlw	128
  7199  04AE  0020               	movlb	0	; select bank0
  7200  04AF  0268               	subwf	??_main,w
  7201  04B0  1D03               	skipz
  7202  04B1  2CB5               	goto	u3825
  7203  04B2  0021               	movlb	1	; select bank1
  7204  04B3  083A               	movf	(_Vref^(0+128)+2),w
  7205  04B4  0232               	subwf	(_voltage^(0+128)+2),w
  7206  04B5                     u3825:	
  7207  04B5  1803               	skipnc
  7208  04B6  2CC0               	goto	l3186
  7209  04B7                     L3:	
  7210                           
  7211                           ;main.c: 180: {
  7212                           ;main.c: 181: if(dutyCycle7>0) dutyCycle7-=1;;
  7213  04B7  0021               	movlb	1	; select bank1
  7214  04B8  086E               	movf	main@dutyCycle7^(0+128),w
  7215  04B9  046F               	iorwf	(main@dutyCycle7+1)^(0+128),w
  7216  04BA  1903               	btfsc	3,2
  7217  04BB  2CC0               	goto	l3186
  7218  04BC  3001               	movlw	1
  7219  04BD  02EE               	subwf	main@dutyCycle7^(0+128),f
  7220  04BE  3000               	movlw	0
  7221  04BF  3BEF               	subwfb	(main@dutyCycle7+1)^(0+128),f
  7222  04C0                     l3186:	
  7223                           ;main.c: 182: }
  7224                           
  7225                           
  7226                           ;main.c: 184: }
  7227                           ;main.c: 186: slowLoop+=1;
  7228  04C0  3001               	movlw	1
  7229  04C1  0020               	movlb	0	; select bank0
  7230  04C2  00E8               	movwf	??_main
  7231  04C3  0868               	movf	??_main,w
  7232  04C4  0021               	movlb	1	; select bank1
  7233  04C5  07E4               	addwf	main@slowLoop^(0+128),f
  7234                           
  7235                           ;main.c: 189: PWM6_LoadDutyValue(dutyCycle6);
  7236  04C6  086D               	movf	(main@dutyCycle6+1)^(0+128),w
  7237  04C7  00F1               	movwf	PWM6_LoadDutyValue@dutyCycle6+1
  7238  04C8  086C               	movf	main@dutyCycle6^(0+128),w
  7239  04C9  00F0               	movwf	PWM6_LoadDutyValue@dutyCycle6
  7240  04CA  3193  231E  3182   	fcall	_PWM6_LoadDutyValue
  7241                           
  7242                           ;main.c: 190: PWM7_LoadDutyValue(dutyCycle7);
  7243  04CD  0021               	movlb	1	; select bank1
  7244  04CE  086F               	movf	(main@dutyCycle7+1)^(0+128),w
  7245  04CF  00F1               	movwf	PWM7_LoadDutyValue@dutyCycle7+1
  7246  04D0  086E               	movf	main@dutyCycle7^(0+128),w
  7247  04D1  00F0               	movwf	PWM7_LoadDutyValue@dutyCycle7
  7248  04D2  3193  2334  3182   	fcall	_PWM7_LoadDutyValue
  7249                           
  7250                           ;main.c: 192: menuButton = readButton();
  7251  04D5  3197  277E  3182   	fcall	_readButton
  7252  04D8  0020               	movlb	0	; select bank0
  7253  04D9  00E8               	movwf	??_main
  7254  04DA  0868               	movf	??_main,w
  7255  04DB  0021               	movlb	1	; select bank1
  7256  04DC  00EA               	movwf	main@menuButton^(0+128)
  7257                           
  7258                           ;main.c: 193: if(menuButton == 2) if(MPPT1>1375)MPPT1-=1;
  7259  04DD  3002               	movlw	2
  7260  04DE  066A               	xorwf	main@menuButton^(0+128),w
  7261  04DF  1D03               	btfss	3,2
  7262  04E0  2CF3               	goto	l3200
  7263  04E1  0869               	movf	(main@MPPT1+1)^(0+128),w
  7264  04E2  3A80               	xorlw	128
  7265  04E3  0020               	movlb	0	; select bank0
  7266  04E4  00E8               	movwf	??_main
  7267  04E5  3085               	movlw	133
  7268  04E6  0268               	subwf	??_main,w
  7269  04E7  1D03               	skipz
  7270  04E8  2CEC               	goto	u3855
  7271  04E9  3060               	movlw	96
  7272  04EA  0021               	movlb	1	; select bank1
  7273  04EB  0268               	subwf	main@MPPT1^(0+128),w
  7274  04EC                     u3855:	
  7275  04EC  1C03               	skipc
  7276  04ED  2CF3               	goto	l3200
  7277  04EE  30FF               	movlw	255
  7278  04EF  0021               	movlb	1	; select bank1
  7279  04F0  07E8               	addwf	main@MPPT1^(0+128),f
  7280  04F1  30FF               	movlw	255
  7281  04F2  3DE9               	addwfc	(main@MPPT1+1)^(0+128),f
  7282  04F3                     l3200:	
  7283                           
  7284                           ;main.c: 194: if(menuButton == 3)if(MPPT1<2200)MPPT1+=1;
  7285  04F3  3003               	movlw	3
  7286  04F4  0021               	movlb	1	; select bank1
  7287  04F5  066A               	xorwf	main@menuButton^(0+128),w
  7288  04F6  1D03               	btfss	3,2
  7289  04F7  2D0A               	goto	l3206
  7290  04F8  0869               	movf	(main@MPPT1+1)^(0+128),w
  7291  04F9  3A80               	xorlw	128
  7292  04FA  0020               	movlb	0	; select bank0
  7293  04FB  00E8               	movwf	??_main
  7294  04FC  3088               	movlw	136
  7295  04FD  0268               	subwf	??_main,w
  7296  04FE  1D03               	skipz
  7297  04FF  2D03               	goto	u3875
  7298  0500  3098               	movlw	152
  7299  0501  0021               	movlb	1	; select bank1
  7300  0502  0268               	subwf	main@MPPT1^(0+128),w
  7301  0503                     u3875:	
  7302  0503  1803               	skipnc
  7303  0504  2D0A               	goto	l3206
  7304  0505  3001               	movlw	1
  7305  0506  0021               	movlb	1	; select bank1
  7306  0507  07E8               	addwf	main@MPPT1^(0+128),f
  7307  0508  3000               	movlw	0
  7308  0509  3DE9               	addwfc	(main@MPPT1+1)^(0+128),f
  7309  050A                     l3206:	
  7310                           
  7311                           ;main.c: 195: if(menuButton == 1)LCDInit();
  7312  050A  0021               	movlb	1	; select bank1
  7313  050B  036A               	decf	main@menuButton^(0+128),w
  7314  050C  1D03               	btfss	3,2
  7315  050D  2D11               	goto	l3210
  7316  050E  3194  24B0  3182   	fcall	_LCDInit
  7317  0511                     l3210:	
  7318                           
  7319                           ;main.c: 199: if(slowLoop>250)
  7320  0511  30FB               	movlw	251
  7321  0512  0021               	movlb	1	; select bank1
  7322  0513  0264               	subwf	main@slowLoop^(0+128),w
  7323  0514  1C03               	skipc
  7324  0515  2B01               	goto	l3094
  7325                           
  7326                           ;main.c: 200: {
  7327                           ;main.c: 202: IOutTotal=current[0]+current[1];
  7328  0516  0828               	movf	_current^(0+128),w
  7329  0517  072A               	addwf	(_current^(0+128)+2),w
  7330  0518  00DC               	movwf	main@IOutTotal^(0+128)
  7331  0519  0829               	movf	(_current+1)^(0+128),w
  7332  051A  3D2B               	addwfc	((_current+1)^(0+128)+2),w
  7333  051B  00DD               	movwf	(main@IOutTotal+1)^(0+128)
  7334                           
  7335                           ;main.c: 222: displayRefresh+=1;
  7336  051C  3001               	movlw	1
  7337  051D  0020               	movlb	0	; select bank0
  7338  051E  00E8               	movwf	??_main
  7339  051F  0868               	movf	??_main,w
  7340  0520  0021               	movlb	1	; select bank1
  7341  0521  07E5               	addwf	main@displayRefresh^(0+128),f
  7342                           
  7343                           ;main.c: 223: if(displayRefresh>80)
  7344  0522  3051               	movlw	81
  7345  0523  0265               	subwf	main@displayRefresh^(0+128),w
  7346  0524  1C03               	skipc
  7347  0525  2D3F               	goto	l3222
  7348                           
  7349                           ;main.c: 224: {
  7350                           ;main.c: 225: LCDClear();
  7351  0526  3193  23E7  3182   	fcall	_LCDClear
  7352                           
  7353                           ;main.c: 226: displayRefresh=0;
  7354  0529  0021               	movlb	1	; select bank1
  7355  052A  01E5               	clrf	main@displayRefresh^(0+128)
  7356                           
  7357                           ;main.c: 227: batteryTemp=tempCalc(ADCRead(9));
  7358  052B  3009               	movlw	9
  7359  052C  3193  2309  3182   	fcall	_ADCRead
  7360  052F  0871               	movf	?_ADCRead+1,w
  7361  0530  0020               	movlb	0	; select bank0
  7362  0531  00DE               	movwf	tempCalc@analogValue+1
  7363  0532  0870               	movf	?_ADCRead,w
  7364  0533  00DD               	movwf	tempCalc@analogValue
  7365  0534  3180  2064  3182   	fcall	_tempCalc
  7366  0537  0020               	movlb	0	; select bank0
  7367  0538  085E               	movf	?_tempCalc+1,w
  7368  0539  0021               	movlb	1	; select bank1
  7369  053A  00DF               	movwf	(main@batteryTemp+1)^(0+128)
  7370  053B  0020               	movlb	0	; select bank0
  7371  053C  085D               	movf	?_tempCalc,w
  7372  053D  0021               	movlb	1	; select bank1
  7373  053E  00DE               	movwf	main@batteryTemp^(0+128)
  7374  053F                     l3222:	
  7375                           
  7376                           ;main.c: 228: }
  7377                           ;main.c: 229: Battery_State_Machine(0);
  7378  053F  3000               	movlw	0
  7379  0540  318E  26E5  3182   	fcall	_Battery_State_Machine
  7380                           
  7381                           ;main.c: 230: Battery_State_Machine(1);
  7382  0543  3001               	movlw	1
  7383  0544  318E  26E5  3182   	fcall	_Battery_State_Machine
  7384                           
  7385                           ;main.c: 233: { gotoXY(0,0); LCDWriteString("In:");};
  7386  0547  01F5               	clrf	gotoXY@y
  7387  0548  3000               	movlw	0
  7388  0549  3192  22CD  3182   	fcall	_gotoXY
  7389  054C  3025               	movlw	low (STR_1| (0+32768))
  7390  054D  00FC               	movwf	LCDWriteString@characters
  7391  054E  3098               	movlw	high (STR_1| (0+32768))
  7392  054F  00FD               	movwf	LCDWriteString@characters+1
  7393  0550  3192  22E0  3182   	fcall	_LCDWriteString
  7394                           
  7395                           ;main.c: 234: { gotoXY(26,0); LCDWriteString("Out:");};
  7396  0553  01F5               	clrf	gotoXY@y
  7397  0554  301A               	movlw	26
  7398  0555  3192  22CD  3182   	fcall	_gotoXY
  7399  0558  3020               	movlw	low (STR_2| (0+32768))
  7400  0559  00FC               	movwf	LCDWriteString@characters
  7401  055A  3098               	movlw	high (STR_2| (0+32768))
  7402  055B  00FD               	movwf	LCDWriteString@characters+1
  7403  055C  3192  22E0  3182   	fcall	_LCDWriteString
  7404                           
  7405                           ;main.c: 235: { gotoXY(52,0); LCDWriteString("Ref:");};
  7406  055F  01F5               	clrf	gotoXY@y
  7407  0560  3034               	movlw	52
  7408  0561  3192  22CD  3182   	fcall	_gotoXY
  7409  0564  301B               	movlw	low (STR_3| (0+32768))
  7410  0565  00FC               	movwf	LCDWriteString@characters
  7411  0566  3098               	movlw	high (STR_3| (0+32768))
  7412  0567  00FD               	movwf	LCDWriteString@characters+1
  7413  0568  3192  22E0  3182   	fcall	_LCDWriteString
  7414                           
  7415                           ;main.c: 237: { gotoXY(0,1); LCDWriteInt(voltage[2],4, 2, 0);};
  7416  056B  01F5               	clrf	gotoXY@y
  7417  056C  0AF5               	incf	gotoXY@y,f
  7418  056D  3000               	movlw	0
  7419  056E  3192  22CD  3182   	fcall	_gotoXY
  7420  0571  0021               	movlb	1	; select bank1
  7421  0572  0835               	movf	((_voltage+1)^(0+128)+4),w
  7422  0573  0020               	movlb	0	; select bank0
  7423  0574  00A1               	movwf	LCDWriteInt@value+1
  7424  0575  0021               	movlb	1	; select bank1
  7425  0576  0834               	movf	(_voltage^(0+128)+4),w
  7426  0577  0020               	movlb	0	; select bank0
  7427  0578  00A0               	movwf	LCDWriteInt@value
  7428  0579  3004               	movlw	4
  7429  057A  00E8               	movwf	??_main
  7430  057B  0868               	movf	??_main,w
  7431  057C  00A2               	movwf	LCDWriteInt@fieldLength
  7432  057D  3002               	movlw	2
  7433  057E  00E9               	movwf	??_main+1
  7434  057F  0869               	movf	??_main+1,w
  7435  0580  00A3               	movwf	LCDWriteInt@numPlaces
  7436  0581  01A4               	clrf	LCDWriteInt@sign
  7437  0582  318C  2474  3182   	fcall	_LCDWriteInt
  7438                           
  7439                           ;main.c: 238: LCDWriteCharacter('V');
  7440  0585  3056               	movlw	86
  7441  0586  3196  26C6  3182   	fcall	_LCDWriteCharacter
  7442                           
  7443                           ;main.c: 240: { gotoXY(26,1); LCDWriteInt(voltage[0],4, 2, 0);};
  7444  0589  01F5               	clrf	gotoXY@y
  7445  058A  0AF5               	incf	gotoXY@y,f
  7446  058B  301A               	movlw	26
  7447  058C  3192  22CD  3182   	fcall	_gotoXY
  7448  058F  0021               	movlb	1	; select bank1
  7449  0590  0831               	movf	(_voltage+1)^(0+128),w
  7450  0591  0020               	movlb	0	; select bank0
  7451  0592  00A1               	movwf	LCDWriteInt@value+1
  7452  0593  0021               	movlb	1	; select bank1
  7453  0594  0830               	movf	_voltage^(0+128),w
  7454  0595  0020               	movlb	0	; select bank0
  7455  0596  00A0               	movwf	LCDWriteInt@value
  7456  0597  3004               	movlw	4
  7457  0598  00E8               	movwf	??_main
  7458  0599  0868               	movf	??_main,w
  7459  059A  00A2               	movwf	LCDWriteInt@fieldLength
  7460  059B  3002               	movlw	2
  7461  059C  00E9               	movwf	??_main+1
  7462  059D  0869               	movf	??_main+1,w
  7463  059E  00A3               	movwf	LCDWriteInt@numPlaces
  7464  059F  01A4               	clrf	LCDWriteInt@sign
  7465  05A0  318C  2474  3182   	fcall	_LCDWriteInt
  7466                           
  7467                           ;main.c: 241: LCDWriteCharacter('V');
  7468  05A3  3056               	movlw	86
  7469  05A4  3196  26C6  3182   	fcall	_LCDWriteCharacter
  7470                           
  7471                           ;main.c: 243: { gotoXY(52,1); LCDWriteInt(Vref[0],4, 2, 0);};
  7472  05A7  01F5               	clrf	gotoXY@y
  7473  05A8  0AF5               	incf	gotoXY@y,f
  7474  05A9  3034               	movlw	52
  7475  05AA  3192  22CD  3182   	fcall	_gotoXY
  7476  05AD  0021               	movlb	1	; select bank1
  7477  05AE  0839               	movf	(_Vref+1)^(0+128),w
  7478  05AF  0020               	movlb	0	; select bank0
  7479  05B0  00A1               	movwf	LCDWriteInt@value+1
  7480  05B1  0021               	movlb	1	; select bank1
  7481  05B2  0838               	movf	_Vref^(0+128),w
  7482  05B3  0020               	movlb	0	; select bank0
  7483  05B4  00A0               	movwf	LCDWriteInt@value
  7484  05B5  3004               	movlw	4
  7485  05B6  00E8               	movwf	??_main
  7486  05B7  0868               	movf	??_main,w
  7487  05B8  00A2               	movwf	LCDWriteInt@fieldLength
  7488  05B9  3002               	movlw	2
  7489  05BA  00E9               	movwf	??_main+1
  7490  05BB  0869               	movf	??_main+1,w
  7491  05BC  00A3               	movwf	LCDWriteInt@numPlaces
  7492  05BD  01A4               	clrf	LCDWriteInt@sign
  7493  05BE  318C  2474  3182   	fcall	_LCDWriteInt
  7494                           
  7495                           ;main.c: 244: LCDWriteCharacter('V');
  7496  05C1  3056               	movlw	86
  7497  05C2  3196  26C6  3182   	fcall	_LCDWriteCharacter
  7498                           
  7499                           ;main.c: 246: { gotoXY(80,1); LCDWriteInt(Imode[0],1, 0, 0);};
  7500  05C5  01F5               	clrf	gotoXY@y
  7501  05C6  0AF5               	incf	gotoXY@y,f
  7502  05C7  3050               	movlw	80
  7503  05C8  3192  22CD  3182   	fcall	_gotoXY
  7504  05CB  0021               	movlb	1	; select bank1
  7505  05CC  084E               	movf	_Imode^(0+128),w
  7506  05CD  0020               	movlb	0	; select bank0
  7507  05CE  00A0               	movwf	LCDWriteInt@value
  7508  05CF  01A1               	clrf	LCDWriteInt@value+1
  7509  05D0  1BA0               	btfsc	LCDWriteInt@value,7
  7510  05D1  03A1               	decf	LCDWriteInt@value+1,f
  7511  05D2  01A2               	clrf	LCDWriteInt@fieldLength
  7512  05D3  0AA2               	incf	LCDWriteInt@fieldLength,f
  7513  05D4  01A3               	clrf	LCDWriteInt@numPlaces
  7514  05D5  01A4               	clrf	LCDWriteInt@sign
  7515  05D6  318C  2474  3182   	fcall	_LCDWriteInt
  7516                           
  7517                           ;main.c: 248: { gotoXY(0,2); LCDWriteInt(current[2],3, 1, 0);};
  7518  05D9  3002               	movlw	2
  7519  05DA  0020               	movlb	0	; select bank0
  7520  05DB  00E8               	movwf	??_main
  7521  05DC  0868               	movf	??_main,w
  7522  05DD  00F5               	movwf	gotoXY@y
  7523  05DE  3000               	movlw	0
  7524  05DF  3192  22CD  3182   	fcall	_gotoXY
  7525  05E2  0021               	movlb	1	; select bank1
  7526  05E3  082D               	movf	((_current+1)^(0+128)+4),w
  7527  05E4  0020               	movlb	0	; select bank0
  7528  05E5  00A1               	movwf	LCDWriteInt@value+1
  7529  05E6  0021               	movlb	1	; select bank1
  7530  05E7  082C               	movf	(_current^(0+128)+4),w
  7531  05E8  0020               	movlb	0	; select bank0
  7532  05E9  00A0               	movwf	LCDWriteInt@value
  7533  05EA  3003               	movlw	3
  7534  05EB  00E8               	movwf	??_main
  7535  05EC  0868               	movf	??_main,w
  7536  05ED  00A2               	movwf	LCDWriteInt@fieldLength
  7537  05EE  01A3               	clrf	LCDWriteInt@numPlaces
  7538  05EF  0AA3               	incf	LCDWriteInt@numPlaces,f
  7539  05F0  01A4               	clrf	LCDWriteInt@sign
  7540  05F1  318C  2474  3182   	fcall	_LCDWriteInt
  7541                           
  7542                           ;main.c: 249: LCDWriteCharacter('A');
  7543  05F4  3041               	movlw	65
  7544  05F5  3196  26C6  3182   	fcall	_LCDWriteCharacter
  7545                           
  7546                           ;main.c: 251: { gotoXY(26,2); LCDWriteInt(current[0],3, 1, 0);};
  7547  05F8  3002               	movlw	2
  7548  05F9  0020               	movlb	0	; select bank0
  7549  05FA  00E8               	movwf	??_main
  7550  05FB  0868               	movf	??_main,w
  7551  05FC  00F5               	movwf	gotoXY@y
  7552  05FD  301A               	movlw	26
  7553  05FE  3192  22CD  3182   	fcall	_gotoXY
  7554  0601  0021               	movlb	1	; select bank1
  7555  0602  0829               	movf	(_current+1)^(0+128),w
  7556  0603  0020               	movlb	0	; select bank0
  7557  0604  00A1               	movwf	LCDWriteInt@value+1
  7558  0605  0021               	movlb	1	; select bank1
  7559  0606  0828               	movf	_current^(0+128),w
  7560  0607  0020               	movlb	0	; select bank0
  7561  0608  00A0               	movwf	LCDWriteInt@value
  7562  0609  3003               	movlw	3
  7563  060A  00E8               	movwf	??_main
  7564  060B  0868               	movf	??_main,w
  7565  060C  00A2               	movwf	LCDWriteInt@fieldLength
  7566  060D  01A3               	clrf	LCDWriteInt@numPlaces
  7567  060E  0AA3               	incf	LCDWriteInt@numPlaces,f
  7568  060F  01A4               	clrf	LCDWriteInt@sign
  7569  0610  318C  2474  3182   	fcall	_LCDWriteInt
  7570                           
  7571                           ;main.c: 252: LCDWriteCharacter('A');
  7572  0613  3041               	movlw	65
  7573  0614  3196  26C6  3182   	fcall	_LCDWriteCharacter
  7574                           
  7575                           ;main.c: 254: { gotoXY(52,2); LCDWriteInt(Iref[0],3, 1, 0);};
  7576  0617  3002               	movlw	2
  7577  0618  0020               	movlb	0	; select bank0
  7578  0619  00E8               	movwf	??_main
  7579  061A  0868               	movf	??_main,w
  7580  061B  00F5               	movwf	gotoXY@y
  7581  061C  3034               	movlw	52
  7582  061D  3192  22CD  3182   	fcall	_gotoXY
  7583  0620  0021               	movlb	1	; select bank1
  7584  0621  083D               	movf	(_Iref+1)^(0+128),w
  7585  0622  0020               	movlb	0	; select bank0
  7586  0623  00A1               	movwf	LCDWriteInt@value+1
  7587  0624  0021               	movlb	1	; select bank1
  7588  0625  083C               	movf	_Iref^(0+128),w
  7589  0626  0020               	movlb	0	; select bank0
  7590  0627  00A0               	movwf	LCDWriteInt@value
  7591  0628  3003               	movlw	3
  7592  0629  00E8               	movwf	??_main
  7593  062A  0868               	movf	??_main,w
  7594  062B  00A2               	movwf	LCDWriteInt@fieldLength
  7595  062C  01A3               	clrf	LCDWriteInt@numPlaces
  7596  062D  0AA3               	incf	LCDWriteInt@numPlaces,f
  7597  062E  01A4               	clrf	LCDWriteInt@sign
  7598  062F  318C  2474  3182   	fcall	_LCDWriteInt
  7599                           
  7600                           ;main.c: 255: LCDWriteCharacter('A');
  7601  0632  3041               	movlw	65
  7602  0633  3196  26C6  3182   	fcall	_LCDWriteCharacter
  7603                           
  7604                           ;main.c: 257: { gotoXY(80,2); LCDWriteInt(batteryState[0],1, 0, 0);};
  7605  0636  3002               	movlw	2
  7606  0637  0020               	movlb	0	; select bank0
  7607  0638  00E8               	movwf	??_main
  7608  0639  0868               	movf	??_main,w
  7609  063A  00F5               	movwf	gotoXY@y
  7610  063B  3050               	movlw	80
  7611  063C  3192  22CD  3182   	fcall	_gotoXY
  7612  063F  0021               	movlb	1	; select bank1
  7613  0640  0852               	movf	_batteryState^(0+128),w
  7614  0641  0020               	movlb	0	; select bank0
  7615  0642  00E8               	movwf	??_main
  7616  0643  01E9               	clrf	??_main+1
  7617  0644  0868               	movf	??_main,w
  7618  0645  00A0               	movwf	LCDWriteInt@value
  7619  0646  0869               	movf	??_main+1,w
  7620  0647  00A1               	movwf	LCDWriteInt@value+1
  7621  0648  01A2               	clrf	LCDWriteInt@fieldLength
  7622  0649  0AA2               	incf	LCDWriteInt@fieldLength,f
  7623  064A  01A3               	clrf	LCDWriteInt@numPlaces
  7624  064B  01A4               	clrf	LCDWriteInt@sign
  7625  064C  318C  2474  3182   	fcall	_LCDWriteInt
  7626                           
  7627                           ;main.c: 259: { gotoXY(0,3); LCDWriteInt(voltage[3],4, 2, 0);};
  7628  064F  3003               	movlw	3
  7629  0650  0020               	movlb	0	; select bank0
  7630  0651  00E8               	movwf	??_main
  7631  0652  0868               	movf	??_main,w
  7632  0653  00F5               	movwf	gotoXY@y
  7633  0654  3000               	movlw	0
  7634  0655  3192  22CD  3182   	fcall	_gotoXY
  7635  0658  0021               	movlb	1	; select bank1
  7636  0659  0837               	movf	((_voltage+1)^(0+128)+6),w
  7637  065A  0020               	movlb	0	; select bank0
  7638  065B  00A1               	movwf	LCDWriteInt@value+1
  7639  065C  0021               	movlb	1	; select bank1
  7640  065D  0836               	movf	(_voltage^(0+128)+6),w
  7641  065E  0020               	movlb	0	; select bank0
  7642  065F  00A0               	movwf	LCDWriteInt@value
  7643  0660  3004               	movlw	4
  7644  0661  00E8               	movwf	??_main
  7645  0662  0868               	movf	??_main,w
  7646  0663  00A2               	movwf	LCDWriteInt@fieldLength
  7647  0664  3002               	movlw	2
  7648  0665  00E9               	movwf	??_main+1
  7649  0666  0869               	movf	??_main+1,w
  7650  0667  00A3               	movwf	LCDWriteInt@numPlaces
  7651  0668  01A4               	clrf	LCDWriteInt@sign
  7652  0669  318C  2474  3182   	fcall	_LCDWriteInt
  7653                           
  7654                           ;main.c: 260: LCDWriteCharacter('V');
  7655  066C  3056               	movlw	86
  7656  066D  3196  26C6  3182   	fcall	_LCDWriteCharacter
  7657                           
  7658                           ;main.c: 262: { gotoXY(26,3); LCDWriteInt(voltage[1],4, 2, 0);};
  7659  0670  3003               	movlw	3
  7660  0671  0020               	movlb	0	; select bank0
  7661  0672  00E8               	movwf	??_main
  7662  0673  0868               	movf	??_main,w
  7663  0674  00F5               	movwf	gotoXY@y
  7664  0675  301A               	movlw	26
  7665  0676  3192  22CD  3182   	fcall	_gotoXY
  7666  0679  0021               	movlb	1	; select bank1
  7667  067A  0833               	movf	((_voltage+1)^(0+128)+2),w
  7668  067B  0020               	movlb	0	; select bank0
  7669  067C  00A1               	movwf	LCDWriteInt@value+1
  7670  067D  0021               	movlb	1	; select bank1
  7671  067E  0832               	movf	(_voltage^(0+128)+2),w
  7672  067F  0020               	movlb	0	; select bank0
  7673  0680  00A0               	movwf	LCDWriteInt@value
  7674  0681  3004               	movlw	4
  7675  0682  00E8               	movwf	??_main
  7676  0683  0868               	movf	??_main,w
  7677  0684  00A2               	movwf	LCDWriteInt@fieldLength
  7678  0685  3002               	movlw	2
  7679  0686  00E9               	movwf	??_main+1
  7680  0687  0869               	movf	??_main+1,w
  7681  0688  00A3               	movwf	LCDWriteInt@numPlaces
  7682  0689  01A4               	clrf	LCDWriteInt@sign
  7683  068A  318C  2474  3182   	fcall	_LCDWriteInt
  7684                           
  7685                           ;main.c: 263: LCDWriteCharacter('V');
  7686  068D  3056               	movlw	86
  7687  068E  3196  26C6  3182   	fcall	_LCDWriteCharacter
  7688                           
  7689                           ;main.c: 265: { gotoXY(52,3); LCDWriteInt(Vref[1],4, 2, 0);};
  7690  0691  3003               	movlw	3
  7691  0692  0020               	movlb	0	; select bank0
  7692  0693  00E8               	movwf	??_main
  7693  0694  0868               	movf	??_main,w
  7694  0695  00F5               	movwf	gotoXY@y
  7695  0696  3034               	movlw	52
  7696  0697  3192  22CD  3182   	fcall	_gotoXY
  7697  069A  0021               	movlb	1	; select bank1
  7698  069B  083B               	movf	((_Vref+1)^(0+128)+2),w
  7699  069C  0020               	movlb	0	; select bank0
  7700  069D  00A1               	movwf	LCDWriteInt@value+1
  7701  069E  0021               	movlb	1	; select bank1
  7702  069F  083A               	movf	(_Vref^(0+128)+2),w
  7703  06A0  0020               	movlb	0	; select bank0
  7704  06A1  00A0               	movwf	LCDWriteInt@value
  7705  06A2  3004               	movlw	4
  7706  06A3  00E8               	movwf	??_main
  7707  06A4  0868               	movf	??_main,w
  7708  06A5  00A2               	movwf	LCDWriteInt@fieldLength
  7709  06A6  3002               	movlw	2
  7710  06A7  00E9               	movwf	??_main+1
  7711  06A8  0869               	movf	??_main+1,w
  7712  06A9  00A3               	movwf	LCDWriteInt@numPlaces
  7713  06AA  01A4               	clrf	LCDWriteInt@sign
  7714  06AB  318C  2474  3182   	fcall	_LCDWriteInt
  7715                           
  7716                           ;main.c: 266: LCDWriteCharacter('V');
  7717  06AE  3056               	movlw	86
  7718  06AF  3196  26C6  3182   	fcall	_LCDWriteCharacter
  7719                           
  7720                           ;main.c: 268: { gotoXY(80,3); LCDWriteInt(Imode[1],1, 0, 0);};
  7721  06B2  3003               	movlw	3
  7722  06B3  0020               	movlb	0	; select bank0
  7723  06B4  00E8               	movwf	??_main
  7724  06B5  0868               	movf	??_main,w
  7725  06B6  00F5               	movwf	gotoXY@y
  7726  06B7  3050               	movlw	80
  7727  06B8  3192  22CD  3182   	fcall	_gotoXY
  7728  06BB  0021               	movlb	1	; select bank1
  7729  06BC  084F               	movf	(_Imode^(0+128)+1),w
  7730  06BD  0020               	movlb	0	; select bank0
  7731  06BE  00A0               	movwf	LCDWriteInt@value
  7732  06BF  01A1               	clrf	LCDWriteInt@value+1
  7733  06C0  1BA0               	btfsc	LCDWriteInt@value,7
  7734  06C1  03A1               	decf	LCDWriteInt@value+1,f
  7735  06C2  01A2               	clrf	LCDWriteInt@fieldLength
  7736  06C3  0AA2               	incf	LCDWriteInt@fieldLength,f
  7737  06C4  01A3               	clrf	LCDWriteInt@numPlaces
  7738  06C5  01A4               	clrf	LCDWriteInt@sign
  7739  06C6  318C  2474  3182   	fcall	_LCDWriteInt
  7740                           
  7741                           ;main.c: 270: { gotoXY(0,4); LCDWriteInt(current[3],3, 1, 0);};
  7742  06C9  3004               	movlw	4
  7743  06CA  0020               	movlb	0	; select bank0
  7744  06CB  00E8               	movwf	??_main
  7745  06CC  0868               	movf	??_main,w
  7746  06CD  00F5               	movwf	gotoXY@y
  7747  06CE  3000               	movlw	0
  7748  06CF  3192  22CD  3182   	fcall	_gotoXY
  7749  06D2  0021               	movlb	1	; select bank1
  7750  06D3  082F               	movf	((_current+1)^(0+128)+6),w
  7751  06D4  0020               	movlb	0	; select bank0
  7752  06D5  00A1               	movwf	LCDWriteInt@value+1
  7753  06D6  0021               	movlb	1	; select bank1
  7754  06D7  082E               	movf	(_current^(0+128)+6),w
  7755  06D8  0020               	movlb	0	; select bank0
  7756  06D9  00A0               	movwf	LCDWriteInt@value
  7757  06DA  3003               	movlw	3
  7758  06DB  00E8               	movwf	??_main
  7759  06DC  0868               	movf	??_main,w
  7760  06DD  00A2               	movwf	LCDWriteInt@fieldLength
  7761  06DE  01A3               	clrf	LCDWriteInt@numPlaces
  7762  06DF  0AA3               	incf	LCDWriteInt@numPlaces,f
  7763  06E0  01A4               	clrf	LCDWriteInt@sign
  7764  06E1  318C  2474  3182   	fcall	_LCDWriteInt
  7765                           
  7766                           ;main.c: 271: LCDWriteCharacter('A');
  7767  06E4  3041               	movlw	65
  7768  06E5  3196  26C6  3182   	fcall	_LCDWriteCharacter
  7769                           
  7770                           ;main.c: 273: { gotoXY(26,4); LCDWriteInt(current[1],3, 1, 0);};
  7771  06E8  3004               	movlw	4
  7772  06E9  0020               	movlb	0	; select bank0
  7773  06EA  00E8               	movwf	??_main
  7774  06EB  0868               	movf	??_main,w
  7775  06EC  00F5               	movwf	gotoXY@y
  7776  06ED  301A               	movlw	26
  7777  06EE  3192  22CD  3182   	fcall	_gotoXY
  7778  06F1  0021               	movlb	1	; select bank1
  7779  06F2  082B               	movf	((_current+1)^(0+128)+2),w
  7780  06F3  0020               	movlb	0	; select bank0
  7781  06F4  00A1               	movwf	LCDWriteInt@value+1
  7782  06F5  0021               	movlb	1	; select bank1
  7783  06F6  082A               	movf	(_current^(0+128)+2),w
  7784  06F7  0020               	movlb	0	; select bank0
  7785  06F8  00A0               	movwf	LCDWriteInt@value
  7786  06F9  3003               	movlw	3
  7787  06FA  00E8               	movwf	??_main
  7788  06FB  0868               	movf	??_main,w
  7789  06FC  00A2               	movwf	LCDWriteInt@fieldLength
  7790  06FD  01A3               	clrf	LCDWriteInt@numPlaces
  7791  06FE  0AA3               	incf	LCDWriteInt@numPlaces,f
  7792  06FF  01A4               	clrf	LCDWriteInt@sign
  7793  0700  318C  2474  3182   	fcall	_LCDWriteInt
  7794                           
  7795                           ;main.c: 274: LCDWriteCharacter('A');
  7796  0703  3041               	movlw	65
  7797  0704  3196  26C6  3182   	fcall	_LCDWriteCharacter
  7798                           
  7799                           ;main.c: 276: { gotoXY(52,4); LCDWriteInt(Iref[1],3, 1, 0);};
  7800  0707  3004               	movlw	4
  7801  0708  0020               	movlb	0	; select bank0
  7802  0709  00E8               	movwf	??_main
  7803  070A  0868               	movf	??_main,w
  7804  070B  00F5               	movwf	gotoXY@y
  7805  070C  3034               	movlw	52
  7806  070D  3192  22CD  3182   	fcall	_gotoXY
  7807  0710  0021               	movlb	1	; select bank1
  7808  0711  083F               	movf	((_Iref+1)^(0+128)+2),w
  7809  0712  0020               	movlb	0	; select bank0
  7810  0713  00A1               	movwf	LCDWriteInt@value+1
  7811  0714  0021               	movlb	1	; select bank1
  7812  0715  083E               	movf	(_Iref^(0+128)+2),w
  7813  0716  0020               	movlb	0	; select bank0
  7814  0717  00A0               	movwf	LCDWriteInt@value
  7815  0718  3003               	movlw	3
  7816  0719  00E8               	movwf	??_main
  7817  071A  0868               	movf	??_main,w
  7818  071B  00A2               	movwf	LCDWriteInt@fieldLength
  7819  071C  01A3               	clrf	LCDWriteInt@numPlaces
  7820  071D  0AA3               	incf	LCDWriteInt@numPlaces,f
  7821  071E  01A4               	clrf	LCDWriteInt@sign
  7822  071F  318C  2474  3182   	fcall	_LCDWriteInt
  7823                           
  7824                           ;main.c: 277: LCDWriteCharacter('A');
  7825  0722  3041               	movlw	65
  7826  0723  3196  26C6  3182   	fcall	_LCDWriteCharacter
  7827                           
  7828                           ;main.c: 279: { gotoXY(80,4); LCDWriteInt(batteryState[1],1, 0, 0);};
  7829  0726  3004               	movlw	4
  7830  0727  0020               	movlb	0	; select bank0
  7831  0728  00E8               	movwf	??_main
  7832  0729  0868               	movf	??_main,w
  7833  072A  00F5               	movwf	gotoXY@y
  7834  072B  3050               	movlw	80
  7835  072C  3192  22CD  3182   	fcall	_gotoXY
  7836  072F  0021               	movlb	1	; select bank1
  7837  0730  0853               	movf	(_batteryState^(0+128)+1),w
  7838  0731  0020               	movlb	0	; select bank0
  7839  0732  00E8               	movwf	??_main
  7840  0733  01E9               	clrf	??_main+1
  7841  0734  0868               	movf	??_main,w
  7842  0735  00A0               	movwf	LCDWriteInt@value
  7843  0736  0869               	movf	??_main+1,w
  7844  0737  00A1               	movwf	LCDWriteInt@value+1
  7845  0738  01A2               	clrf	LCDWriteInt@fieldLength
  7846  0739  0AA2               	incf	LCDWriteInt@fieldLength,f
  7847  073A  01A3               	clrf	LCDWriteInt@numPlaces
  7848  073B  01A4               	clrf	LCDWriteInt@sign
  7849  073C  318C  2474  3182   	fcall	_LCDWriteInt
  7850                           
  7851                           ;main.c: 281: { gotoXY(0,5); LCDWriteInt(dutyCycle6,4, 0, 0);};
  7852  073F  3005               	movlw	5
  7853  0740  0020               	movlb	0	; select bank0
  7854  0741  00E8               	movwf	??_main
  7855  0742  0868               	movf	??_main,w
  7856  0743  00F5               	movwf	gotoXY@y
  7857  0744  3000               	movlw	0
  7858  0745  3192  22CD  3182   	fcall	_gotoXY
  7859  0748  0021               	movlb	1	; select bank1
  7860  0749  086D               	movf	(main@dutyCycle6+1)^(0+128),w
  7861  074A  0020               	movlb	0	; select bank0
  7862  074B  00A1               	movwf	LCDWriteInt@value+1
  7863  074C  0021               	movlb	1	; select bank1
  7864  074D  086C               	movf	main@dutyCycle6^(0+128),w
  7865  074E  0020               	movlb	0	; select bank0
  7866  074F  00A0               	movwf	LCDWriteInt@value
  7867  0750  3004               	movlw	4
  7868  0751  00E8               	movwf	??_main
  7869  0752  0868               	movf	??_main,w
  7870  0753  00A2               	movwf	LCDWriteInt@fieldLength
  7871  0754  01A3               	clrf	LCDWriteInt@numPlaces
  7872  0755  01A4               	clrf	LCDWriteInt@sign
  7873  0756  318C  2474  3182   	fcall	_LCDWriteInt
  7874                           
  7875                           ;main.c: 282: { gotoXY(20,5); LCDWriteInt(VHoldMode[0],2, 0, 0);};
  7876  0759  3005               	movlw	5
  7877  075A  0020               	movlb	0	; select bank0
  7878  075B  00E8               	movwf	??_main
  7879  075C  0868               	movf	??_main,w
  7880  075D  00F5               	movwf	gotoXY@y
  7881  075E  3014               	movlw	20
  7882  075F  3192  22CD  3182   	fcall	_gotoXY
  7883  0762  0021               	movlb	1	; select bank1
  7884  0763  084A               	movf	_VHoldMode^(0+128),w
  7885  0764  0020               	movlb	0	; select bank0
  7886  0765  00A0               	movwf	LCDWriteInt@value
  7887  0766  01A1               	clrf	LCDWriteInt@value+1
  7888  0767  1BA0               	btfsc	LCDWriteInt@value,7
  7889  0768  03A1               	decf	LCDWriteInt@value+1,f
  7890  0769  3002               	movlw	2
  7891  076A  00E8               	movwf	??_main
  7892  076B  0868               	movf	??_main,w
  7893  076C  00A2               	movwf	LCDWriteInt@fieldLength
  7894  076D  01A3               	clrf	LCDWriteInt@numPlaces
  7895  076E  01A4               	clrf	LCDWriteInt@sign
  7896  076F  318C  2474  3182   	fcall	_LCDWriteInt
  7897                           
  7898                           ;main.c: 283: LCDWriteCharacter(' ');
  7899  0772  3020               	movlw	32
  7900  0773  3196  26C6  3182   	fcall	_LCDWriteCharacter
  7901                           
  7902                           ;main.c: 284: { gotoXY(32,5); LCDWriteInt(dutyCycle7,4, 0, 0);};
  7903  0776  3005               	movlw	5
  7904  0777  0020               	movlb	0	; select bank0
  7905  0778  00E8               	movwf	??_main
  7906  0779  0868               	movf	??_main,w
  7907  077A  00F5               	movwf	gotoXY@y
  7908  077B  3020               	movlw	32
  7909  077C  3192  22CD  3182   	fcall	_gotoXY
  7910  077F  0021               	movlb	1	; select bank1
  7911  0780  086F               	movf	(main@dutyCycle7+1)^(0+128),w
  7912  0781  0020               	movlb	0	; select bank0
  7913  0782  00A1               	movwf	LCDWriteInt@value+1
  7914  0783  0021               	movlb	1	; select bank1
  7915  0784  086E               	movf	main@dutyCycle7^(0+128),w
  7916  0785  0020               	movlb	0	; select bank0
  7917  0786  00A0               	movwf	LCDWriteInt@value
  7918  0787  3004               	movlw	4
  7919  0788  00E8               	movwf	??_main
  7920  0789  0868               	movf	??_main,w
  7921  078A  00A2               	movwf	LCDWriteInt@fieldLength
  7922  078B  01A3               	clrf	LCDWriteInt@numPlaces
  7923  078C  01A4               	clrf	LCDWriteInt@sign
  7924  078D  318C  2474  3182   	fcall	_LCDWriteInt
  7925                           
  7926                           ;main.c: 285: { gotoXY(52,5); LCDWriteInt(VHoldMode[1],2, 0, 0);};
  7927  0790  3005               	movlw	5
  7928  0791  0020               	movlb	0	; select bank0
  7929  0792  00E8               	movwf	??_main
  7930  0793  0868               	movf	??_main,w
  7931  0794  00F5               	movwf	gotoXY@y
  7932  0795  3034               	movlw	52
  7933  0796  3192  22CD  3182   	fcall	_gotoXY
  7934  0799  0021               	movlb	1	; select bank1
  7935  079A  084B               	movf	(_VHoldMode^(0+128)+1),w
  7936  079B  0020               	movlb	0	; select bank0
  7937  079C  00A0               	movwf	LCDWriteInt@value
  7938  079D  01A1               	clrf	LCDWriteInt@value+1
  7939  079E  1BA0               	btfsc	LCDWriteInt@value,7
  7940  079F  03A1               	decf	LCDWriteInt@value+1,f
  7941  07A0  3002               	movlw	2
  7942  07A1  00E8               	movwf	??_main
  7943  07A2  0868               	movf	??_main,w
  7944  07A3  00A2               	movwf	LCDWriteInt@fieldLength
  7945  07A4  01A3               	clrf	LCDWriteInt@numPlaces
  7946  07A5  01A4               	clrf	LCDWriteInt@sign
  7947  07A6  318C  2474  3182   	fcall	_LCDWriteInt
  7948                           
  7949                           ;main.c: 286: LCDWriteCharacter(' ');
  7950  07A9  3020               	movlw	32
  7951  07AA  3196  26C6  3182   	fcall	_LCDWriteCharacter
  7952                           
  7953                           ;main.c: 356: if(batteryState[0] > FINISHED)
  7954  07AD  3003               	movlw	3
  7955  07AE  0021               	movlb	1	; select bank1
  7956  07AF  0252               	subwf	_batteryState^(0+128),w
  7957  07B0  1C03               	skipc
  7958  07B1  2FB6               	goto	l3350
  7959                           
  7960                           ;main.c: 357: {
  7961                           ;main.c: 358: cc_cv_mode(0);
  7962  07B2  3000               	movlw	0
  7963  07B3  318D  252D  3182   	fcall	_cc_cv_mode
  7964  07B6                     l3350:	
  7965                           
  7966                           ;main.c: 359: }
  7967                           ;main.c: 360: if(batteryState[1] > FINISHED)
  7968  07B6  3003               	movlw	3
  7969  07B7  0021               	movlb	1	; select bank1
  7970  07B8  0253               	subwf	(_batteryState^(0+128)+1),w
  7971  07B9  1C03               	skipc
  7972  07BA  2FBF               	goto	l3354
  7973                           
  7974                           ;main.c: 361: {
  7975                           ;main.c: 362: cc_cv_mode(1);
  7976  07BB  3001               	movlw	1
  7977  07BC  318D  252D  3182   	fcall	_cc_cv_mode
  7978  07BF                     l3354:	
  7979                           
  7980                           ;main.c: 363: }
  7981                           ;main.c: 364: slowLoop=0;
  7982  07BF  0021               	movlb	1	; select bank1
  7983  07C0  01E4               	clrf	main@slowLoop^(0+128)
  7984  07C1  2B01               	goto	l3094
  7985  07C2                     __end_of_main:	
  7986                           
  7987                           	psect	text1
  7988  0064                     __ptext1:	
  7989 ;; *************** function _tempCalc *****************
  7990 ;; Defined at:
  7991 ;;		line 4 in file "tempCalc.c"
  7992 ;; Parameters:    Size  Location     Type
  7993 ;;  analogValue     2   61[BANK0 ] int 
  7994 ;; Auto vars:     Size  Location     Type
  7995 ;;  steinhart       3   69[BANK0 ] float 
  7996 ;;  R               3   63[BANK0 ] float 
  7997 ;; Return value:  Size  Location     Type
  7998 ;;                  2   61[BANK0 ] int 
  7999 ;; Registers used:
  8000 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8001 ;; Tracked objects:
  8002 ;;		On entry : 0/0
  8003 ;;		On exit  : 0/0
  8004 ;;		Unchanged: 0/0
  8005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8006 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8007 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8009 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8010 ;;Total ram usage:       11 bytes
  8011 ;; Hardware stack levels used:    1
  8012 ;; Hardware stack levels required when called:    4
  8013 ;; This function calls:
  8014 ;;		___awtoft
  8015 ;;		___ftadd
  8016 ;;		___ftdiv
  8017 ;;		___ftmul
  8018 ;;		___ftsub
  8019 ;;		___fttol
  8020 ;;		_log
  8021 ;; This function is called by:
  8022 ;;		_main
  8023 ;; This function uses a non-reentrant model
  8024 ;;
  8025                           
  8026                           
  8027                           ;psect for function _tempCalc
  8028  0064                     _tempCalc:	
  8029                           
  8030                           ;tempCalc.c: 6: float R, steinhart;
  8031                           ;tempCalc.c: 8: R = 9890/(1023/(float)analogValue - 1);
  8032                           
  8033                           ;incstack = 0
  8034                           ; Regs used in _tempCalc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8035  0064  3000               	movlw	0
  8036  0065  0020               	movlb	0	; select bank0
  8037  0066  00C0               	movwf	___ftadd@f1
  8038  0067  3080               	movlw	128
  8039  0068  00C1               	movwf	___ftadd@f1+1
  8040  0069  30BF               	movlw	191
  8041  006A  00C2               	movwf	___ftadd@f1+2
  8042  006B  085E               	movf	tempCalc@analogValue+1,w
  8043  006C  00F9               	movwf	___awtoft@c+1
  8044  006D  085D               	movf	tempCalc@analogValue,w
  8045  006E  00F8               	movwf	___awtoft@c
  8046  006F  3193  23A2  3180   	fcall	___awtoft
  8047  0072  0878               	movf	?___awtoft,w
  8048  0073  0020               	movlb	0	; select bank0
  8049  0074  00B0               	movwf	___ftdiv@f2
  8050  0075  0879               	movf	?___awtoft+1,w
  8051  0076  00B1               	movwf	___ftdiv@f2+1
  8052  0077  087A               	movf	?___awtoft+2,w
  8053  0078  00B2               	movwf	___ftdiv@f2+2
  8054  0079  30C0               	movlw	192
  8055  007A  00B3               	movwf	___ftdiv@f1
  8056  007B  307F               	movlw	127
  8057  007C  00B4               	movwf	___ftdiv@f1+1
  8058  007D  3044               	movlw	68
  8059  007E  00B5               	movwf	___ftdiv@f1+2
  8060  007F  318A  2267  3180   	fcall	___ftdiv
  8061  0082  0020               	movlb	0	; select bank0
  8062  0083  0830               	movf	?___ftdiv,w
  8063  0084  00C3               	movwf	___ftadd@f2
  8064  0085  0831               	movf	?___ftdiv+1,w
  8065  0086  00C4               	movwf	___ftadd@f2+1
  8066  0087  0832               	movf	?___ftdiv+2,w
  8067  0088  00C5               	movwf	___ftadd@f2+2
  8068  0089  318D  25EF  3180   	fcall	___ftadd
  8069  008C  0020               	movlb	0	; select bank0
  8070  008D  0840               	movf	?___ftadd,w
  8071  008E  00E2               	movwf	_tempCalc$1186
  8072  008F  0841               	movf	?___ftadd+1,w
  8073  0090  00E3               	movwf	_tempCalc$1186+1
  8074  0091  0842               	movf	?___ftadd+2,w
  8075  0092  00E4               	movwf	_tempCalc$1186+2
  8076                           
  8077                           ;tempCalc.c: 6: float R, steinhart;
  8078                           ;tempCalc.c: 8: R = 9890/(1023/(float)analogValue - 1);
  8079  0093  0862               	movf	_tempCalc$1186,w
  8080  0094  00B0               	movwf	___ftdiv@f2
  8081  0095  0863               	movf	_tempCalc$1186+1,w
  8082  0096  00B1               	movwf	___ftdiv@f2+1
  8083  0097  0864               	movf	_tempCalc$1186+2,w
  8084  0098  00B2               	movwf	___ftdiv@f2+2
  8085  0099  3088               	movlw	136
  8086  009A  00B3               	movwf	___ftdiv@f1
  8087  009B  301A               	movlw	26
  8088  009C  00B4               	movwf	___ftdiv@f1+1
  8089  009D  3046               	movlw	70
  8090  009E  00B5               	movwf	___ftdiv@f1+2
  8091  009F  318A  2267  3180   	fcall	___ftdiv
  8092  00A2  0020               	movlb	0	; select bank0
  8093  00A3  0830               	movf	?___ftdiv,w
  8094  00A4  00DF               	movwf	tempCalc@R
  8095  00A5  0831               	movf	?___ftdiv+1,w
  8096  00A6  00E0               	movwf	tempCalc@R+1
  8097  00A7  0832               	movf	?___ftdiv+2,w
  8098  00A8  00E1               	movwf	tempCalc@R+2
  8099                           
  8100                           ;tempCalc.c: 10: steinhart = R /9990;
  8101  00A9  3018               	movlw	24
  8102  00AA  00B0               	movwf	___ftdiv@f2
  8103  00AB  301C               	movlw	28
  8104  00AC  00B1               	movwf	___ftdiv@f2+1
  8105  00AD  3046               	movlw	70
  8106  00AE  00B2               	movwf	___ftdiv@f2+2
  8107  00AF  085F               	movf	tempCalc@R,w
  8108  00B0  00B3               	movwf	___ftdiv@f1
  8109  00B1  0860               	movf	tempCalc@R+1,w
  8110  00B2  00B4               	movwf	___ftdiv@f1+1
  8111  00B3  0861               	movf	tempCalc@R+2,w
  8112  00B4  00B5               	movwf	___ftdiv@f1+2
  8113  00B5  318A  2267  3180   	fcall	___ftdiv
  8114  00B8  0020               	movlb	0	; select bank0
  8115  00B9  0830               	movf	?___ftdiv,w
  8116  00BA  00E5               	movwf	tempCalc@steinhart
  8117  00BB  0831               	movf	?___ftdiv+1,w
  8118  00BC  00E6               	movwf	tempCalc@steinhart+1
  8119  00BD  0832               	movf	?___ftdiv+2,w
  8120  00BE  00E7               	movwf	tempCalc@steinhart+2
  8121                           
  8122                           ;tempCalc.c: 11: steinhart = log(steinhart);
  8123  00BF  0865               	movf	tempCalc@steinhart,w
  8124  00C0  00D7               	movwf	log@x
  8125  00C1  0866               	movf	tempCalc@steinhart+1,w
  8126  00C2  00D8               	movwf	log@x+1
  8127  00C3  0867               	movf	tempCalc@steinhart+2,w
  8128  00C4  00D9               	movwf	log@x+2
  8129  00C5  318B  2310  3180   	fcall	_log
  8130  00C8  0020               	movlb	0	; select bank0
  8131  00C9  0857               	movf	?_log,w
  8132  00CA  00E5               	movwf	tempCalc@steinhart
  8133  00CB  0858               	movf	?_log+1,w
  8134  00CC  00E6               	movwf	tempCalc@steinhart+1
  8135  00CD  0859               	movf	?_log+2,w
  8136  00CE  00E7               	movwf	tempCalc@steinhart+2
  8137                           
  8138                           ;tempCalc.c: 12: steinhart /= 4030;
  8139  00CF  30E0               	movlw	224
  8140  00D0  00B0               	movwf	___ftdiv@f2
  8141  00D1  307B               	movlw	123
  8142  00D2  00B1               	movwf	___ftdiv@f2+1
  8143  00D3  3045               	movlw	69
  8144  00D4  00B2               	movwf	___ftdiv@f2+2
  8145  00D5  0865               	movf	tempCalc@steinhart,w
  8146  00D6  00B3               	movwf	___ftdiv@f1
  8147  00D7  0866               	movf	tempCalc@steinhart+1,w
  8148  00D8  00B4               	movwf	___ftdiv@f1+1
  8149  00D9  0867               	movf	tempCalc@steinhart+2,w
  8150  00DA  00B5               	movwf	___ftdiv@f1+2
  8151  00DB  318A  2267  3180   	fcall	___ftdiv
  8152  00DE  0020               	movlb	0	; select bank0
  8153  00DF  0830               	movf	?___ftdiv,w
  8154  00E0  00E5               	movwf	tempCalc@steinhart
  8155  00E1  0831               	movf	?___ftdiv+1,w
  8156  00E2  00E6               	movwf	tempCalc@steinhart+1
  8157  00E3  0832               	movf	?___ftdiv+2,w
  8158  00E4  00E7               	movwf	tempCalc@steinhart+2
  8159                           
  8160                           ;tempCalc.c: 15: steinhart += 1.0 / (25 + 273.15);
  8161  00E5  30CF               	movlw	207
  8162  00E6  00C0               	movwf	___ftadd@f1
  8163  00E7  305B               	movlw	91
  8164  00E8  00C1               	movwf	___ftadd@f1+1
  8165  00E9  303B               	movlw	59
  8166  00EA  00C2               	movwf	___ftadd@f1+2
  8167  00EB  0865               	movf	tempCalc@steinhart,w
  8168  00EC  00C3               	movwf	___ftadd@f2
  8169  00ED  0866               	movf	tempCalc@steinhart+1,w
  8170  00EE  00C4               	movwf	___ftadd@f2+1
  8171  00EF  0867               	movf	tempCalc@steinhart+2,w
  8172  00F0  00C5               	movwf	___ftadd@f2+2
  8173  00F1  318D  25EF  3180   	fcall	___ftadd
  8174  00F4  0020               	movlb	0	; select bank0
  8175  00F5  0840               	movf	?___ftadd,w
  8176  00F6  00E5               	movwf	tempCalc@steinhart
  8177  00F7  0841               	movf	?___ftadd+1,w
  8178  00F8  00E6               	movwf	tempCalc@steinhart+1
  8179  00F9  0842               	movf	?___ftadd+2,w
  8180  00FA  00E7               	movwf	tempCalc@steinhart+2
  8181                           
  8182                           ;tempCalc.c: 16: steinhart = 1.0 / steinhart;
  8183  00FB  0865               	movf	tempCalc@steinhart,w
  8184  00FC  00B0               	movwf	___ftdiv@f2
  8185  00FD  0866               	movf	tempCalc@steinhart+1,w
  8186  00FE  00B1               	movwf	___ftdiv@f2+1
  8187  00FF  0867               	movf	tempCalc@steinhart+2,w
  8188  0100  00B2               	movwf	___ftdiv@f2+2
  8189  0101  3000               	movlw	0
  8190  0102  00B3               	movwf	___ftdiv@f1
  8191  0103  3080               	movlw	128
  8192  0104  00B4               	movwf	___ftdiv@f1+1
  8193  0105  303F               	movlw	63
  8194  0106  00B5               	movwf	___ftdiv@f1+2
  8195  0107  318A  2267  3180   	fcall	___ftdiv
  8196  010A  0020               	movlb	0	; select bank0
  8197  010B  0830               	movf	?___ftdiv,w
  8198  010C  00E5               	movwf	tempCalc@steinhart
  8199  010D  0831               	movf	?___ftdiv+1,w
  8200  010E  00E6               	movwf	tempCalc@steinhart+1
  8201  010F  0832               	movf	?___ftdiv+2,w
  8202  0110  00E7               	movwf	tempCalc@steinhart+2
  8203                           
  8204                           ;tempCalc.c: 17: steinhart -= 273.15;
  8205  0111  3093               	movlw	147
  8206  0112  00CD               	movwf	___ftsub@f2
  8207  0113  3088               	movlw	136
  8208  0114  00CE               	movwf	___ftsub@f2+1
  8209  0115  3043               	movlw	67
  8210  0116  00CF               	movwf	___ftsub@f2+2
  8211  0117  0865               	movf	tempCalc@steinhart,w
  8212  0118  00D0               	movwf	___ftsub@f1
  8213  0119  0866               	movf	tempCalc@steinhart+1,w
  8214  011A  00D1               	movwf	___ftsub@f1+1
  8215  011B  0867               	movf	tempCalc@steinhart+2,w
  8216  011C  00D2               	movwf	___ftsub@f1+2
  8217  011D  3193  2365  3180   	fcall	___ftsub
  8218  0120  0020               	movlb	0	; select bank0
  8219  0121  084D               	movf	?___ftsub,w
  8220  0122  00E5               	movwf	tempCalc@steinhart
  8221  0123  084E               	movf	?___ftsub+1,w
  8222  0124  00E6               	movwf	tempCalc@steinhart+1
  8223  0125  084F               	movf	?___ftsub+2,w
  8224  0126  00E7               	movwf	tempCalc@steinhart+2
  8225                           
  8226                           ;tempCalc.c: 19: steinhart*=10;
  8227  0127  3000               	movlw	0
  8228  0128  00A0               	movwf	___ftmul@f1
  8229  0129  3020               	movlw	32
  8230  012A  00A1               	movwf	___ftmul@f1+1
  8231  012B  3041               	movlw	65
  8232  012C  00A2               	movwf	___ftmul@f1+2
  8233  012D  0865               	movf	tempCalc@steinhart,w
  8234  012E  00A3               	movwf	___ftmul@f2
  8235  012F  0866               	movf	tempCalc@steinhart+1,w
  8236  0130  00A4               	movwf	___ftmul@f2+1
  8237  0131  0867               	movf	tempCalc@steinhart+2,w
  8238  0132  00A5               	movwf	___ftmul@f2+2
  8239  0133  318B  23C0  3180   	fcall	___ftmul
  8240  0136  0020               	movlb	0	; select bank0
  8241  0137  0820               	movf	?___ftmul,w
  8242  0138  00E5               	movwf	tempCalc@steinhart
  8243  0139  0821               	movf	?___ftmul+1,w
  8244  013A  00E6               	movwf	tempCalc@steinhart+1
  8245  013B  0822               	movf	?___ftmul+2,w
  8246  013C  00E7               	movwf	tempCalc@steinhart+2
  8247                           
  8248                           ;tempCalc.c: 21: steinhart = steinhart*9/5+320;
  8249  013D  3000               	movlw	0
  8250  013E  00C0               	movwf	___ftadd@f1
  8251  013F  30A0               	movlw	160
  8252  0140  00C1               	movwf	___ftadd@f1+1
  8253  0141  3043               	movlw	67
  8254  0142  00C2               	movwf	___ftadd@f1+2
  8255  0143  3000               	movlw	0
  8256  0144  00B0               	movwf	___ftdiv@f2
  8257  0145  30A0               	movlw	160
  8258  0146  00B1               	movwf	___ftdiv@f2+1
  8259  0147  3040               	movlw	64
  8260  0148  00B2               	movwf	___ftdiv@f2+2
  8261  0149  3000               	movlw	0
  8262  014A  00A0               	movwf	___ftmul@f1
  8263  014B  3010               	movlw	16
  8264  014C  00A1               	movwf	___ftmul@f1+1
  8265  014D  3041               	movlw	65
  8266  014E  00A2               	movwf	___ftmul@f1+2
  8267  014F  0865               	movf	tempCalc@steinhart,w
  8268  0150  00A3               	movwf	___ftmul@f2
  8269  0151  0866               	movf	tempCalc@steinhart+1,w
  8270  0152  00A4               	movwf	___ftmul@f2+1
  8271  0153  0867               	movf	tempCalc@steinhart+2,w
  8272  0154  00A5               	movwf	___ftmul@f2+2
  8273  0155  318B  23C0  3180   	fcall	___ftmul
  8274  0158  0020               	movlb	0	; select bank0
  8275  0159  0820               	movf	?___ftmul,w
  8276  015A  00B3               	movwf	___ftdiv@f1
  8277  015B  0821               	movf	?___ftmul+1,w
  8278  015C  00B4               	movwf	___ftdiv@f1+1
  8279  015D  0822               	movf	?___ftmul+2,w
  8280  015E  00B5               	movwf	___ftdiv@f1+2
  8281  015F  318A  2267  3180   	fcall	___ftdiv
  8282  0162  0020               	movlb	0	; select bank0
  8283  0163  0830               	movf	?___ftdiv,w
  8284  0164  00C3               	movwf	___ftadd@f2
  8285  0165  0831               	movf	?___ftdiv+1,w
  8286  0166  00C4               	movwf	___ftadd@f2+1
  8287  0167  0832               	movf	?___ftdiv+2,w
  8288  0168  00C5               	movwf	___ftadd@f2+2
  8289  0169  318D  25EF  3180   	fcall	___ftadd
  8290  016C  0020               	movlb	0	; select bank0
  8291  016D  0840               	movf	?___ftadd,w
  8292  016E  00E5               	movwf	tempCalc@steinhart
  8293  016F  0841               	movf	?___ftadd+1,w
  8294  0170  00E6               	movwf	tempCalc@steinhart+1
  8295  0171  0842               	movf	?___ftadd+2,w
  8296  0172  00E7               	movwf	tempCalc@steinhart+2
  8297                           
  8298                           ;tempCalc.c: 23: return (int16_t)steinhart;
  8299  0173  0865               	movf	tempCalc@steinhart,w
  8300  0174  00C0               	movwf	___fttol@f1
  8301  0175  0866               	movf	tempCalc@steinhart+1,w
  8302  0176  00C1               	movwf	___fttol@f1+1
  8303  0177  0867               	movf	tempCalc@steinhart+2,w
  8304  0178  00C2               	movwf	___fttol@f1+2
  8305  0179  3189  21E0         	fcall	___fttol
  8306  017B  0020               	movlb	0	; select bank0
  8307  017C  0841               	movf	?___fttol+1,w
  8308  017D  00DE               	movwf	?_tempCalc+1
  8309  017E  0840               	movf	?___fttol,w
  8310  017F  00DD               	movwf	?_tempCalc
  8311  0180  0008               	return
  8312  0181                     __end_of_tempCalc:	
  8313                           
  8314                           	psect	text2
  8315  0B10                     __ptext2:	
  8316 ;; *************** function _log *****************
  8317 ;; Defined at:
  8318 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\log.c"
  8319 ;; Parameters:    Size  Location     Type
  8320 ;;  x               3   55[BANK0 ] int 
  8321 ;; Auto vars:     Size  Location     Type
  8322 ;;  exponent        2   59[BANK0 ] int 
  8323 ;; Return value:  Size  Location     Type
  8324 ;;                  3   55[BANK0 ] int 
  8325 ;; Registers used:
  8326 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8327 ;; Tracked objects:
  8328 ;;		On entry : 0/0
  8329 ;;		On exit  : 0/0
  8330 ;;		Unchanged: 0/0
  8331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8332 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8333 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8334 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8335 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8336 ;;Total ram usage:        6 bytes
  8337 ;; Hardware stack levels used:    1
  8338 ;; Hardware stack levels required when called:    3
  8339 ;; This function calls:
  8340 ;;		___awtoft
  8341 ;;		___ftadd
  8342 ;;		___ftge
  8343 ;;		___ftmul
  8344 ;;		_eval_poly
  8345 ;;		_frexp
  8346 ;; This function is called by:
  8347 ;;		_tempCalc
  8348 ;; This function uses a non-reentrant model
  8349 ;;
  8350                           
  8351                           
  8352                           ;psect for function _log
  8353  0B10                     _log:	
  8354                           
  8355                           ;incstack = 0
  8356                           ; Regs used in _log: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8357  0B10  0020               	movlb	0	; select bank0
  8358  0B11  0857               	movf	log@x,w
  8359  0B12  00F0               	movwf	___ftge@ff1
  8360  0B13  0858               	movf	log@x+1,w
  8361  0B14  00F1               	movwf	___ftge@ff1+1
  8362  0B15  0859               	movf	log@x+2,w
  8363  0B16  00F2               	movwf	___ftge@ff1+2
  8364  0B17  3000               	movlw	0
  8365  0B18  00F3               	movwf	___ftge@ff2
  8366  0B19  3000               	movlw	0
  8367  0B1A  00F4               	movwf	___ftge@ff2+1
  8368  0B1B  3000               	movlw	0
  8369  0B1C  00F5               	movwf	___ftge@ff2+2
  8370  0B1D  3194  24EB  318B   	fcall	___ftge
  8371  0B20  1803               	btfsc	3,0
  8372  0B21  2B2F               	goto	l2608
  8373  0B22  3021               	movlw	33
  8374  0B23  0021               	movlb	1	; select bank1
  8375  0B24  00C8               	movwf	_errno^(0+128)
  8376  0B25  3000               	movlw	0
  8377  0B26  00C9               	movwf	(_errno^(0+128)+1)
  8378  0B27  3000               	movlw	0
  8379  0B28  0020               	movlb	0	; select bank0
  8380  0B29  00D7               	movwf	?_log
  8381  0B2A  3000               	movlw	0
  8382  0B2B  00D8               	movwf	?_log+1
  8383  0B2C  3000               	movlw	0
  8384  0B2D  00D9               	movwf	?_log+2
  8385  0B2E  0008               	return
  8386  0B2F                     l2608:	
  8387  0B2F  0020               	movlb	0	; select bank0
  8388  0B30  0859               	movf	log@x+2,w
  8389  0B31  0458               	iorwf	log@x+1,w
  8390  0B32  0457               	iorwf	log@x,w
  8391  0B33  1D03               	skipz
  8392  0B34  2B42               	goto	l2614
  8393  0B35  3022               	movlw	34
  8394  0B36  0021               	movlb	1	; select bank1
  8395  0B37  00C8               	movwf	_errno^(0+128)
  8396  0B38  3000               	movlw	0
  8397  0B39  00C9               	movwf	(_errno^(0+128)+1)
  8398  0B3A  3000               	movlw	0
  8399  0B3B  0020               	movlb	0	; select bank0
  8400  0B3C  00D7               	movwf	?_log
  8401  0B3D  3000               	movlw	0
  8402  0B3E  00D8               	movwf	?_log+1
  8403  0B3F  3000               	movlw	0
  8404  0B40  00D9               	movwf	?_log+2
  8405  0B41  0008               	return
  8406  0B42                     l2614:	
  8407  0B42  3000               	movlw	0
  8408  0B43  00C0               	movwf	___ftadd@f1
  8409  0B44  3080               	movlw	128
  8410  0B45  00C1               	movwf	___ftadd@f1+1
  8411  0B46  30BF               	movlw	191
  8412  0B47  00C2               	movwf	___ftadd@f1+2
  8413  0B48  3000               	movlw	0
  8414  0B49  00A0               	movwf	___ftmul@f1
  8415  0B4A  3000               	movlw	0
  8416  0B4B  00A1               	movwf	___ftmul@f1+1
  8417  0B4C  3040               	movlw	64
  8418  0B4D  00A2               	movwf	___ftmul@f1+2
  8419  0B4E  305B               	movlw	(low (log@exponent| 0))& (0+255)
  8420  0B4F  00DA               	movwf	??_log
  8421  0B50  085A               	movf	??_log,w
  8422  0B51  00F3               	movwf	frexp@eptr
  8423  0B52  0857               	movf	log@x,w
  8424  0B53  00F0               	movwf	frexp@value
  8425  0B54  0858               	movf	log@x+1,w
  8426  0B55  00F1               	movwf	frexp@value+1
  8427  0B56  0859               	movf	log@x+2,w
  8428  0B57  00F2               	movwf	frexp@value+2
  8429  0B58  3195  2526  318B   	fcall	_frexp
  8430  0B5B  0870               	movf	?_frexp,w
  8431  0B5C  0020               	movlb	0	; select bank0
  8432  0B5D  00A3               	movwf	___ftmul@f2
  8433  0B5E  0871               	movf	?_frexp+1,w
  8434  0B5F  00A4               	movwf	___ftmul@f2+1
  8435  0B60  0872               	movf	?_frexp+2,w
  8436  0B61  00A5               	movwf	___ftmul@f2+2
  8437  0B62  318B  23C0  318B   	fcall	___ftmul
  8438  0B65  0020               	movlb	0	; select bank0
  8439  0B66  0820               	movf	?___ftmul,w
  8440  0B67  00C3               	movwf	___ftadd@f2
  8441  0B68  0821               	movf	?___ftmul+1,w
  8442  0B69  00C4               	movwf	___ftadd@f2+1
  8443  0B6A  0822               	movf	?___ftmul+2,w
  8444  0B6B  00C5               	movwf	___ftadd@f2+2
  8445  0B6C  318D  25EF  318B   	fcall	___ftadd
  8446  0B6F  0020               	movlb	0	; select bank0
  8447  0B70  0840               	movf	?___ftadd,w
  8448  0B71  00D7               	movwf	log@x
  8449  0B72  0841               	movf	?___ftadd+1,w
  8450  0B73  00D8               	movwf	log@x+1
  8451  0B74  0842               	movf	?___ftadd+2,w
  8452  0B75  00D9               	movwf	log@x+2
  8453  0B76  30FF               	movlw	255
  8454  0B77  07DB               	addwf	log@exponent,f
  8455  0B78  30FF               	movlw	255
  8456  0B79  3DDC               	addwfc	log@exponent+1,f
  8457  0B7A  0857               	movf	log@x,w
  8458  0B7B  00CD               	movwf	eval_poly@x
  8459  0B7C  0858               	movf	log@x+1,w
  8460  0B7D  00CE               	movwf	eval_poly@x+1
  8461  0B7E  0859               	movf	log@x+2,w
  8462  0B7F  00CF               	movwf	eval_poly@x+2
  8463  0B80  3000               	movlw	low (log@coeff| (0+32768))
  8464  0B81  00D0               	movwf	eval_poly@d
  8465  0B82  3098               	movlw	high (log@coeff| (0+32768))
  8466  0B83  00D1               	movwf	eval_poly@d+1
  8467  0B84  3008               	movlw	8
  8468  0B85  00D2               	movwf	eval_poly@n
  8469  0B86  3000               	movlw	0
  8470  0B87  00D3               	movwf	eval_poly@n+1
  8471  0B88  3180  2004  318B   	fcall	_eval_poly
  8472  0B8B  0020               	movlb	0	; select bank0
  8473  0B8C  084D               	movf	?_eval_poly,w
  8474  0B8D  00D7               	movwf	log@x
  8475  0B8E  084E               	movf	?_eval_poly+1,w
  8476  0B8F  00D8               	movwf	log@x+1
  8477  0B90  084F               	movf	?_eval_poly+2,w
  8478  0B91  00D9               	movwf	log@x+2
  8479  0B92  0857               	movf	log@x,w
  8480  0B93  00C0               	movwf	___ftadd@f1
  8481  0B94  0858               	movf	log@x+1,w
  8482  0B95  00C1               	movwf	___ftadd@f1+1
  8483  0B96  0859               	movf	log@x+2,w
  8484  0B97  00C2               	movwf	___ftadd@f1+2
  8485  0B98  3072               	movlw	114
  8486  0B99  00A0               	movwf	___ftmul@f1
  8487  0B9A  3031               	movlw	49
  8488  0B9B  00A1               	movwf	___ftmul@f1+1
  8489  0B9C  303F               	movlw	63
  8490  0B9D  00A2               	movwf	___ftmul@f1+2
  8491  0B9E  085C               	movf	log@exponent+1,w
  8492  0B9F  00F9               	movwf	___awtoft@c+1
  8493  0BA0  085B               	movf	log@exponent,w
  8494  0BA1  00F8               	movwf	___awtoft@c
  8495  0BA2  3193  23A2  318B   	fcall	___awtoft
  8496  0BA5  0878               	movf	?___awtoft,w
  8497  0BA6  0020               	movlb	0	; select bank0
  8498  0BA7  00A3               	movwf	___ftmul@f2
  8499  0BA8  0879               	movf	?___awtoft+1,w
  8500  0BA9  00A4               	movwf	___ftmul@f2+1
  8501  0BAA  087A               	movf	?___awtoft+2,w
  8502  0BAB  00A5               	movwf	___ftmul@f2+2
  8503  0BAC  318B  23C0  318B   	fcall	___ftmul
  8504  0BAF  0020               	movlb	0	; select bank0
  8505  0BB0  0820               	movf	?___ftmul,w
  8506  0BB1  00C3               	movwf	___ftadd@f2
  8507  0BB2  0821               	movf	?___ftmul+1,w
  8508  0BB3  00C4               	movwf	___ftadd@f2+1
  8509  0BB4  0822               	movf	?___ftmul+2,w
  8510  0BB5  00C5               	movwf	___ftadd@f2+2
  8511  0BB6  318D  25EF         	fcall	___ftadd
  8512  0BB8  0020               	movlb	0	; select bank0
  8513  0BB9  0840               	movf	?___ftadd,w
  8514  0BBA  00D7               	movwf	?_log
  8515  0BBB  0841               	movf	?___ftadd+1,w
  8516  0BBC  00D8               	movwf	?_log+1
  8517  0BBD  0842               	movf	?___ftadd+2,w
  8518  0BBE  00D9               	movwf	?_log+2
  8519  0BBF  0008               	return
  8520  0BC0                     __end_of_log:	
  8521                           
  8522                           	psect	text3
  8523  1526                     __ptext3:	
  8524 ;; *************** function _frexp *****************
  8525 ;; Defined at:
  8526 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\frexp.c"
  8527 ;; Parameters:    Size  Location     Type
  8528 ;;  value           3    0[COMMON] int 
  8529 ;;  eptr            1    3[COMMON] PTR int 
  8530 ;;		 -> log@exponent(2), 
  8531 ;; Auto vars:     Size  Location     Type
  8532 ;;		None
  8533 ;; Return value:  Size  Location     Type
  8534 ;;                  3    0[COMMON] PTR int 
  8535 ;; Registers used:
  8536 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8537 ;; Tracked objects:
  8538 ;;		On entry : 0/0
  8539 ;;		On exit  : 0/0
  8540 ;;		Unchanged: 0/0
  8541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8542 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8544 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8545 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8546 ;;Total ram usage:        6 bytes
  8547 ;; Hardware stack levels used:    1
  8548 ;; This function calls:
  8549 ;;		Nothing
  8550 ;; This function is called by:
  8551 ;;		_log
  8552 ;; This function uses a non-reentrant model
  8553 ;;
  8554                           
  8555                           
  8556                           ;psect for function _frexp
  8557  1526                     _frexp:	
  8558                           
  8559                           ;incstack = 0
  8560                           ; Regs used in _frexp: [wreg+fsr1l+fsr1h+status,2+status,0]
  8561  1526  0872               	movf	frexp@value+2,w
  8562  1527  0471               	iorwf	frexp@value+1,w
  8563  1528  0470               	iorwf	frexp@value,w
  8564  1529  1D03               	skipz
  8565  152A  2D38               	goto	l2414
  8566  152B  0873               	movf	frexp@eptr,w
  8567  152C  0086               	movwf	6
  8568  152D  0187               	clrf	7
  8569  152E  3000               	movlw	0
  8570  152F  3FC0               	movwi [0]fsr1
  8571  1530  3FC1               	movwi [1]fsr1
  8572  1531  3000               	movlw	0
  8573  1532  00F0               	movwf	?_frexp
  8574  1533  3000               	movlw	0
  8575  1534  00F1               	movwf	?_frexp+1
  8576  1535  3000               	movlw	0
  8577  1536  00F2               	movwf	?_frexp+2
  8578  1537  0008               	return
  8579  1538                     l2414:	
  8580  1538  0872               	movf	frexp@value+2,w
  8581  1539  397F               	andlw	127
  8582  153A  00F4               	movwf	??_frexp
  8583  153B  01F5               	clrf	??_frexp+1
  8584  153C  35F4               	lslf	??_frexp,f
  8585  153D  0DF5               	rlf	??_frexp+1,f
  8586  153E  0873               	movf	frexp@eptr,w
  8587  153F  0086               	movwf	6
  8588  1540  0187               	clrf	7
  8589  1541  0874               	movf	??_frexp,w
  8590  1542  3FC0               	movwi [0]fsr1
  8591  1543  0875               	movf	??_frexp+1,w
  8592  1544  3FC1               	movwi [1]fsr1
  8593  1545  0D71               	rlf	frexp@value+1,w
  8594  1546  0D71               	rlf	frexp@value+1,w
  8595  1547  3901               	andlw	1
  8596  1548  00F4               	movwf	??_frexp
  8597  1549  01F5               	clrf	??_frexp+1
  8598  154A  0873               	movf	frexp@eptr,w
  8599  154B  0086               	movwf	6
  8600  154C  0187               	clrf	7
  8601  154D  0874               	movf	??_frexp,w
  8602  154E  0481               	iorwf	1,f
  8603  154F  3141               	addfsr 1,1
  8604  1550  0875               	movf	??_frexp+1,w
  8605  1551  0481               	iorwf	1,f
  8606  1552  0873               	movf	frexp@eptr,w
  8607  1553  0086               	movwf	6
  8608  1554  0187               	clrf	7
  8609  1555  3082               	movlw	130
  8610  1556  0781               	addwf	1,f
  8611  1557  3141               	addfsr 1,1
  8612  1558  30FF               	movlw	255
  8613  1559  3D81               	addwfc	1,f
  8614  155A  317F               	addfsr 1,-1
  8615  155B  0872               	movf	frexp@value+2,w
  8616  155C  3980               	andlw	-128
  8617  155D  383F               	iorlw	63
  8618  155E  00F2               	movwf	frexp@value+2
  8619  155F  13F1               	bcf	frexp@value+1,7
  8620  1560  0008               	return
  8621  1561                     __end_of_frexp:	
  8622                           
  8623                           	psect	text4
  8624  0004                     __ptext4:	
  8625 ;; *************** function _eval_poly *****************
  8626 ;; Defined at:
  8627 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\evalpoly.c"
  8628 ;; Parameters:    Size  Location     Type
  8629 ;;  x               3   45[BANK0 ] PTR int 
  8630 ;;  d               2   48[BANK0 ] PTR const 
  8631 ;;		 -> log@coeff(27), 
  8632 ;;  n               2   50[BANK0 ] int 
  8633 ;; Auto vars:     Size  Location     Type
  8634 ;;  res             3   52[BANK0 ] int 
  8635 ;; Return value:  Size  Location     Type
  8636 ;;                  3   45[BANK0 ] int 
  8637 ;; Registers used:
  8638 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8639 ;; Tracked objects:
  8640 ;;		On entry : 0/0
  8641 ;;		On exit  : 0/0
  8642 ;;		Unchanged: 0/0
  8643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8644 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8645 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8647 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8648 ;;Total ram usage:       10 bytes
  8649 ;; Hardware stack levels used:    1
  8650 ;; Hardware stack levels required when called:    2
  8651 ;; This function calls:
  8652 ;;		___ftadd
  8653 ;;		___ftmul
  8654 ;;		___wmul
  8655 ;; This function is called by:
  8656 ;;		_log
  8657 ;; This function uses a non-reentrant model
  8658 ;;
  8659                           
  8660                           
  8661                           ;psect for function _eval_poly
  8662  0004                     _eval_poly:	
  8663                           
  8664                           ;incstack = 0
  8665                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8666  0004  0020               	movlb	0	; select bank0
  8667  0005  0853               	movf	eval_poly@n+1,w
  8668  0006  00F1               	movwf	___wmul@multiplier+1
  8669  0007  0852               	movf	eval_poly@n,w
  8670  0008  00F0               	movwf	___wmul@multiplier
  8671  0009  3003               	movlw	3
  8672  000A  00F2               	movwf	___wmul@multiplicand
  8673  000B  3000               	movlw	0
  8674  000C  00F3               	movwf	___wmul@multiplicand+1
  8675  000D  3193  234A  3180   	fcall	___wmul
  8676  0010  0020               	movlb	0	; select bank0
  8677  0011  0850               	movf	eval_poly@d,w
  8678  0012  0770               	addwf	?___wmul,w
  8679  0013  0084               	movwf	4
  8680  0014  0851               	movf	eval_poly@d+1,w
  8681  0015  3D71               	addwfc	?___wmul+1,w
  8682  0016  0085               	movwf	5
  8683  0017  3F00               	moviw [0]fsr0
  8684  0018  00D4               	movwf	eval_poly@res
  8685  0019  3F01               	moviw [1]fsr0
  8686  001A  00D5               	movwf	eval_poly@res+1
  8687  001B  3F02               	moviw [2]fsr0
  8688  001C                     L4:	
  8689  001C  00D6               	movwf	eval_poly@res+2
  8690  001D  0852               	movf	eval_poly@n,w
  8691  001E  0453               	iorwf	eval_poly@n+1,w
  8692  001F  1903               	btfsc	3,2
  8693  0020  285D               	goto	l2432
  8694  0021  30FF               	movlw	255
  8695  0022  07D2               	addwf	eval_poly@n,f
  8696  0023  30FF               	movlw	255
  8697  0024  3DD3               	addwfc	eval_poly@n+1,f
  8698  0025  0853               	movf	eval_poly@n+1,w
  8699  0026  00F1               	movwf	___wmul@multiplier+1
  8700  0027  0852               	movf	eval_poly@n,w
  8701  0028  00F0               	movwf	___wmul@multiplier
  8702  0029  3003               	movlw	3
  8703  002A  00F2               	movwf	___wmul@multiplicand
  8704  002B  3000               	movlw	0
  8705  002C  00F3               	movwf	___wmul@multiplicand+1
  8706  002D  3193  234A  3180   	fcall	___wmul
  8707  0030  0020               	movlb	0	; select bank0
  8708  0031  0850               	movf	eval_poly@d,w
  8709  0032  0770               	addwf	?___wmul,w
  8710  0033  0084               	movwf	4
  8711  0034  0851               	movf	eval_poly@d+1,w
  8712  0035  3D71               	addwfc	?___wmul+1,w
  8713  0036  0085               	movwf	5
  8714  0037  3F00               	moviw [0]fsr0
  8715  0038  00C0               	movwf	___ftadd@f1
  8716  0039  3F01               	moviw [1]fsr0
  8717  003A  00C1               	movwf	___ftadd@f1+1
  8718  003B  3F02               	moviw [2]fsr0
  8719  003C  00C2               	movwf	___ftadd@f1+2
  8720  003D  0854               	movf	eval_poly@res,w
  8721  003E  00A0               	movwf	___ftmul@f1
  8722  003F  0855               	movf	eval_poly@res+1,w
  8723  0040  00A1               	movwf	___ftmul@f1+1
  8724  0041  0856               	movf	eval_poly@res+2,w
  8725  0042  00A2               	movwf	___ftmul@f1+2
  8726  0043  084D               	movf	eval_poly@x,w
  8727  0044  00A3               	movwf	___ftmul@f2
  8728  0045  084E               	movf	eval_poly@x+1,w
  8729  0046  00A4               	movwf	___ftmul@f2+1
  8730  0047  084F               	movf	eval_poly@x+2,w
  8731  0048  00A5               	movwf	___ftmul@f2+2
  8732  0049  318B  23C0  3180   	fcall	___ftmul
  8733  004C  0020               	movlb	0	; select bank0
  8734  004D  0820               	movf	?___ftmul,w
  8735  004E  00C3               	movwf	___ftadd@f2
  8736  004F  0821               	movf	?___ftmul+1,w
  8737  0050  00C4               	movwf	___ftadd@f2+1
  8738  0051  0822               	movf	?___ftmul+2,w
  8739  0052  00C5               	movwf	___ftadd@f2+2
  8740  0053  318D  25EF  3180   	fcall	___ftadd
  8741  0056  0020               	movlb	0	; select bank0
  8742  0057  0840               	movf	?___ftadd,w
  8743  0058  00D4               	movwf	eval_poly@res
  8744  0059  0841               	movf	?___ftadd+1,w
  8745  005A  00D5               	movwf	eval_poly@res+1
  8746  005B  0842               	movf	?___ftadd+2,w
  8747  005C  281C               	goto	L4
  8748  005D                     l2432:	
  8749  005D  0854               	movf	eval_poly@res,w
  8750  005E  00CD               	movwf	?_eval_poly
  8751  005F  0855               	movf	eval_poly@res+1,w
  8752  0060  00CE               	movwf	?_eval_poly+1
  8753  0061  0856               	movf	eval_poly@res+2,w
  8754  0062  00CF               	movwf	?_eval_poly+2
  8755  0063  0008               	return
  8756  0064                     __end_of_eval_poly:	
  8757                           
  8758                           	psect	text5
  8759  0BC0                     __ptext5:	
  8760 ;; *************** function ___ftmul *****************
  8761 ;; Defined at:
  8762 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
  8763 ;; Parameters:    Size  Location     Type
  8764 ;;  f1              3    0[BANK0 ] float 
  8765 ;;  f2              3    3[BANK0 ] float 
  8766 ;; Auto vars:     Size  Location     Type
  8767 ;;  f3_as_produc    3   11[BANK0 ] unsigned um
  8768 ;;  sign            1   15[BANK0 ] unsigned char 
  8769 ;;  cntr            1   14[BANK0 ] unsigned char 
  8770 ;;  exp             1   10[BANK0 ] unsigned char 
  8771 ;; Return value:  Size  Location     Type
  8772 ;;                  3    0[BANK0 ] float 
  8773 ;; Registers used:
  8774 ;;		wreg, status,2, status,0, pclath, cstack
  8775 ;; Tracked objects:
  8776 ;;		On entry : 0/0
  8777 ;;		On exit  : 0/0
  8778 ;;		Unchanged: 0/0
  8779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8780 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8781 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8782 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8783 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8784 ;;Total ram usage:       16 bytes
  8785 ;; Hardware stack levels used:    1
  8786 ;; Hardware stack levels required when called:    1
  8787 ;; This function calls:
  8788 ;;		___ftpack
  8789 ;; This function is called by:
  8790 ;;		_tempCalc
  8791 ;;		_log
  8792 ;;		_eval_poly
  8793 ;; This function uses a non-reentrant model
  8794 ;;
  8795                           
  8796                           
  8797                           ;psect for function ___ftmul
  8798  0BC0                     ___ftmul:	
  8799                           
  8800                           ;incstack = 0
  8801                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  8802  0BC0  0020               	movlb	0	; select bank0
  8803  0BC1  0820               	movf	___ftmul@f1,w
  8804  0BC2  00A6               	movwf	??___ftmul
  8805  0BC3  0821               	movf	___ftmul@f1+1,w
  8806  0BC4  00A7               	movwf	??___ftmul+1
  8807  0BC5  0822               	movf	___ftmul@f1+2,w
  8808  0BC6  00A8               	movwf	??___ftmul+2
  8809  0BC7  1003               	clrc
  8810  0BC8  0D27               	rlf	??___ftmul+1,w
  8811  0BC9  0D28               	rlf	??___ftmul+2,w
  8812  0BCA  00A9               	movwf	??___ftmul+3
  8813  0BCB  0829               	movf	??___ftmul+3,w
  8814  0BCC  00AA               	movwf	___ftmul@exp
  8815  0BCD  082A               	movf	___ftmul@exp,w
  8816  0BCE  1D03               	btfss	3,2
  8817  0BCF  2BD7               	goto	l2328
  8818  0BD0  3000               	movlw	0
  8819  0BD1  00A0               	movwf	?___ftmul
  8820  0BD2  3000               	movlw	0
  8821  0BD3  00A1               	movwf	?___ftmul+1
  8822  0BD4  3000               	movlw	0
  8823  0BD5  00A2               	movwf	?___ftmul+2
  8824  0BD6  0008               	return
  8825  0BD7                     l2328:	
  8826  0BD7  0823               	movf	___ftmul@f2,w
  8827  0BD8  00A6               	movwf	??___ftmul
  8828  0BD9  0824               	movf	___ftmul@f2+1,w
  8829  0BDA  00A7               	movwf	??___ftmul+1
  8830  0BDB  0825               	movf	___ftmul@f2+2,w
  8831  0BDC  00A8               	movwf	??___ftmul+2
  8832  0BDD  1003               	clrc
  8833  0BDE  0D27               	rlf	??___ftmul+1,w
  8834  0BDF  0D28               	rlf	??___ftmul+2,w
  8835  0BE0  00A9               	movwf	??___ftmul+3
  8836  0BE1  0829               	movf	??___ftmul+3,w
  8837  0BE2  00AF               	movwf	___ftmul@sign
  8838  0BE3  082F               	movf	___ftmul@sign,w
  8839  0BE4  1D03               	btfss	3,2
  8840  0BE5  2BED               	goto	l2334
  8841  0BE6  3000               	movlw	0
  8842  0BE7  00A0               	movwf	?___ftmul
  8843  0BE8  3000               	movlw	0
  8844  0BE9  00A1               	movwf	?___ftmul+1
  8845  0BEA  3000               	movlw	0
  8846  0BEB  00A2               	movwf	?___ftmul+2
  8847  0BEC  0008               	return
  8848  0BED                     l2334:	
  8849  0BED  082F               	movf	___ftmul@sign,w
  8850  0BEE  3E7B               	addlw	123
  8851  0BEF  00A6               	movwf	??___ftmul
  8852  0BF0  0826               	movf	??___ftmul,w
  8853  0BF1  07AA               	addwf	___ftmul@exp,f
  8854  0BF2  0820               	movf	___ftmul@f1,w
  8855  0BF3  00A6               	movwf	??___ftmul
  8856  0BF4  0821               	movf	___ftmul@f1+1,w
  8857  0BF5  00A7               	movwf	??___ftmul+1
  8858  0BF6  0822               	movf	___ftmul@f1+2,w
  8859  0BF7  00A8               	movwf	??___ftmul+2
  8860  0BF8  3010               	movlw	16
  8861  0BF9                     u2425:	
  8862  0BF9  36A8               	lsrf	??___ftmul+2,f
  8863  0BFA  0CA7               	rrf	??___ftmul+1,f
  8864  0BFB  0CA6               	rrf	??___ftmul,f
  8865  0BFC  0B89               	decfsz	9,f
  8866  0BFD  2BF9               	goto	u2425
  8867  0BFE  0826               	movf	??___ftmul,w
  8868  0BFF  00A9               	movwf	??___ftmul+3
  8869  0C00  0829               	movf	??___ftmul+3,w
  8870  0C01  00AF               	movwf	___ftmul@sign
  8871  0C02  0823               	movf	___ftmul@f2,w
  8872  0C03  00A6               	movwf	??___ftmul
  8873  0C04  0824               	movf	___ftmul@f2+1,w
  8874  0C05  00A7               	movwf	??___ftmul+1
  8875  0C06  0825               	movf	___ftmul@f2+2,w
  8876  0C07  00A8               	movwf	??___ftmul+2
  8877  0C08  3010               	movlw	16
  8878  0C09                     u2435:	
  8879  0C09  36A8               	lsrf	??___ftmul+2,f
  8880  0C0A  0CA7               	rrf	??___ftmul+1,f
  8881  0C0B  0CA6               	rrf	??___ftmul,f
  8882  0C0C  0B89               	decfsz	9,f
  8883  0C0D  2C09               	goto	u2435
  8884  0C0E  0826               	movf	??___ftmul,w
  8885  0C0F  00A9               	movwf	??___ftmul+3
  8886  0C10  0829               	movf	??___ftmul+3,w
  8887  0C11  06AF               	xorwf	___ftmul@sign,f
  8888  0C12  3080               	movlw	128
  8889  0C13  00A6               	movwf	??___ftmul
  8890  0C14  0826               	movf	??___ftmul,w
  8891  0C15  05AF               	andwf	___ftmul@sign,f
  8892  0C16  17A1               	bsf	___ftmul@f1+1,7
  8893  0C17  17A4               	bsf	___ftmul@f2+1,7
  8894  0C18  30FF               	movlw	255
  8895  0C19  05A3               	andwf	___ftmul@f2,f
  8896  0C1A  30FF               	movlw	255
  8897  0C1B  05A4               	andwf	___ftmul@f2+1,f
  8898  0C1C  3000               	movlw	0
  8899  0C1D  05A5               	andwf	___ftmul@f2+2,f
  8900  0C1E  3000               	movlw	0
  8901  0C1F  00AB               	movwf	___ftmul@f3_as_product
  8902  0C20  3000               	movlw	0
  8903  0C21  00AC               	movwf	___ftmul@f3_as_product+1
  8904  0C22  3000               	movlw	0
  8905  0C23  00AD               	movwf	___ftmul@f3_as_product+2
  8906  0C24  3007               	movlw	7
  8907  0C25  00A6               	movwf	??___ftmul
  8908  0C26  0826               	movf	??___ftmul,w
  8909  0C27  00AE               	movwf	___ftmul@cntr
  8910  0C28                     l2346:	
  8911  0C28  1C20               	btfss	___ftmul@f1,0
  8912  0C29  2C30               	goto	l2350
  8913  0C2A  0823               	movf	___ftmul@f2,w
  8914  0C2B  07AB               	addwf	___ftmul@f3_as_product,f
  8915  0C2C  0824               	movf	___ftmul@f2+1,w
  8916  0C2D  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  8917  0C2E  0825               	movf	___ftmul@f2+2,w
  8918  0C2F  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  8919  0C30                     l2350:	
  8920  0C30  3001               	movlw	1
  8921  0C31                     u2455:	
  8922  0C31  36A2               	lsrf	___ftmul@f1+2,f
  8923  0C32  0CA1               	rrf	___ftmul@f1+1,f
  8924  0C33  0CA0               	rrf	___ftmul@f1,f
  8925  0C34  0B89               	decfsz	9,f
  8926  0C35  2C31               	goto	u2455
  8927  0C36  3001               	movlw	1
  8928  0C37                     u2465:	
  8929  0C37  35A3               	lslf	___ftmul@f2,f
  8930  0C38  0DA4               	rlf	___ftmul@f2+1,f
  8931  0C39  0DA5               	rlf	___ftmul@f2+2,f
  8932  0C3A  0B89               	decfsz	9,f
  8933  0C3B  2C37               	goto	u2465
  8934  0C3C  3001               	movlw	1
  8935  0C3D  02AE               	subwf	___ftmul@cntr,f
  8936  0C3E  1D03               	btfss	3,2
  8937  0C3F  2C28               	goto	l2346
  8938  0C40  3009               	movlw	9
  8939  0C41  00A6               	movwf	??___ftmul
  8940  0C42  0826               	movf	??___ftmul,w
  8941  0C43  00AE               	movwf	___ftmul@cntr
  8942  0C44                     l2358:	
  8943  0C44  1C20               	btfss	___ftmul@f1,0
  8944  0C45  2C4C               	goto	l2362
  8945  0C46  0823               	movf	___ftmul@f2,w
  8946  0C47  07AB               	addwf	___ftmul@f3_as_product,f
  8947  0C48  0824               	movf	___ftmul@f2+1,w
  8948  0C49  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  8949  0C4A  0825               	movf	___ftmul@f2+2,w
  8950  0C4B  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  8951  0C4C                     l2362:	
  8952  0C4C  3001               	movlw	1
  8953  0C4D                     u2495:	
  8954  0C4D  36A2               	lsrf	___ftmul@f1+2,f
  8955  0C4E  0CA1               	rrf	___ftmul@f1+1,f
  8956  0C4F  0CA0               	rrf	___ftmul@f1,f
  8957  0C50  0B89               	decfsz	9,f
  8958  0C51  2C4D               	goto	u2495
  8959  0C52  3001               	movlw	1
  8960  0C53                     u2505:	
  8961  0C53  36AD               	lsrf	___ftmul@f3_as_product+2,f
  8962  0C54  0CAC               	rrf	___ftmul@f3_as_product+1,f
  8963  0C55  0CAB               	rrf	___ftmul@f3_as_product,f
  8964  0C56  0B89               	decfsz	9,f
  8965  0C57  2C53               	goto	u2505
  8966  0C58  3001               	movlw	1
  8967  0C59  02AE               	subwf	___ftmul@cntr,f
  8968  0C5A  1D03               	btfss	3,2
  8969  0C5B  2C44               	goto	l2358
  8970  0C5C  082B               	movf	___ftmul@f3_as_product,w
  8971  0C5D  00F0               	movwf	___ftpack@arg
  8972  0C5E  082C               	movf	___ftmul@f3_as_product+1,w
  8973  0C5F  00F1               	movwf	___ftpack@arg+1
  8974  0C60  082D               	movf	___ftmul@f3_as_product+2,w
  8975  0C61  00F2               	movwf	___ftpack@arg+2
  8976  0C62  082A               	movf	___ftmul@exp,w
  8977  0C63  00A6               	movwf	??___ftmul
  8978  0C64  0826               	movf	??___ftmul,w
  8979  0C65  00F3               	movwf	___ftpack@exp
  8980  0C66  082F               	movf	___ftmul@sign,w
  8981  0C67  00A7               	movwf	??___ftmul+1
  8982  0C68  0827               	movf	??___ftmul+1,w
  8983  0C69  00F4               	movwf	___ftpack@sign
  8984  0C6A  3197  271A         	fcall	___ftpack
  8985  0C6C  0870               	movf	?___ftpack,w
  8986  0C6D  0020               	movlb	0	; select bank0
  8987  0C6E  00A0               	movwf	?___ftmul
  8988  0C6F  0871               	movf	?___ftpack+1,w
  8989  0C70  00A1               	movwf	?___ftmul+1
  8990  0C71  0872               	movf	?___ftpack+2,w
  8991  0C72  00A2               	movwf	?___ftmul+2
  8992  0C73  0008               	return
  8993  0C74                     __end_of___ftmul:	
  8994                           
  8995                           	psect	text6
  8996  14EB                     __ptext6:	
  8997 ;; *************** function ___ftge *****************
  8998 ;; Defined at:
  8999 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftge.c"
  9000 ;; Parameters:    Size  Location     Type
  9001 ;;  ff1             3    0[COMMON] float 
  9002 ;;  ff2             3    3[COMMON] float 
  9003 ;; Auto vars:     Size  Location     Type
  9004 ;;		None
  9005 ;; Return value:  Size  Location     Type
  9006 ;;		None               void
  9007 ;; Registers used:
  9008 ;;		wreg, status,2, status,0
  9009 ;; Tracked objects:
  9010 ;;		On entry : 0/0
  9011 ;;		On exit  : 0/0
  9012 ;;		Unchanged: 0/0
  9013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9014 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9016 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9017 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9018 ;;Total ram usage:        9 bytes
  9019 ;; Hardware stack levels used:    1
  9020 ;; This function calls:
  9021 ;;		Nothing
  9022 ;; This function is called by:
  9023 ;;		_log
  9024 ;; This function uses a non-reentrant model
  9025 ;;
  9026                           
  9027                           
  9028                           ;psect for function ___ftge
  9029  14EB                     ___ftge:	
  9030                           
  9031                           ;incstack = 0
  9032                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  9033  14EB  1FF2               	btfss	___ftge@ff1+2,7
  9034  14EC  2D01               	goto	l2390
  9035  14ED  0970               	comf	___ftge@ff1,w
  9036  14EE  00F6               	movwf	??___ftge
  9037  14EF  0971               	comf	___ftge@ff1+1,w
  9038  14F0  00F7               	movwf	??___ftge+1
  9039  14F1  0972               	comf	___ftge@ff1+2,w
  9040  14F2  00F8               	movwf	??___ftge+2
  9041  14F3  0AF6               	incf	??___ftge,f
  9042  14F4  1903               	skipnz
  9043  14F5  0AF7               	incf	??___ftge+1,f
  9044  14F6  1903               	skipnz
  9045  14F7  0AF8               	incf	??___ftge+2,f
  9046  14F8  3000               	movlw	0
  9047  14F9  0776               	addwf	??___ftge,w
  9048  14FA  00F0               	movwf	___ftge@ff1
  9049  14FB  3000               	movlw	0
  9050  14FC  3D77               	addwfc	??___ftge+1,w
  9051  14FD  00F1               	movwf	___ftge@ff1+1
  9052  14FE  3080               	movlw	128
  9053  14FF  3D78               	addwfc	??___ftge+2,w
  9054  1500  00F2               	movwf	___ftge@ff1+2
  9055  1501                     l2390:	
  9056  1501  1FF5               	btfss	___ftge@ff2+2,7
  9057  1502  2D17               	goto	l2394
  9058  1503  0973               	comf	___ftge@ff2,w
  9059  1504  00F6               	movwf	??___ftge
  9060  1505  0974               	comf	___ftge@ff2+1,w
  9061  1506  00F7               	movwf	??___ftge+1
  9062  1507  0975               	comf	___ftge@ff2+2,w
  9063  1508  00F8               	movwf	??___ftge+2
  9064  1509  0AF6               	incf	??___ftge,f
  9065  150A  1903               	skipnz
  9066  150B  0AF7               	incf	??___ftge+1,f
  9067  150C  1903               	skipnz
  9068  150D  0AF8               	incf	??___ftge+2,f
  9069  150E  3000               	movlw	0
  9070  150F  0776               	addwf	??___ftge,w
  9071  1510  00F3               	movwf	___ftge@ff2
  9072  1511  3000               	movlw	0
  9073  1512  3D77               	addwfc	??___ftge+1,w
  9074  1513  00F4               	movwf	___ftge@ff2+1
  9075  1514  3080               	movlw	128
  9076  1515  3D78               	addwfc	??___ftge+2,w
  9077  1516  00F5               	movwf	___ftge@ff2+2
  9078  1517                     l2394:	
  9079  1517  3080               	movlw	128
  9080  1518  06F2               	xorwf	___ftge@ff1+2,f
  9081  1519  3080               	movlw	128
  9082  151A  06F5               	xorwf	___ftge@ff2+2,f
  9083  151B  0875               	movf	___ftge@ff2+2,w
  9084  151C  0272               	subwf	___ftge@ff1+2,w
  9085  151D  1D03               	skipz
  9086  151E  0008               	return
  9087  151F  0874               	movf	___ftge@ff2+1,w
  9088  1520  0271               	subwf	___ftge@ff1+1,w
  9089  1521  1D03               	skipz
  9090  1522  0008               	return
  9091  1523  0873               	movf	___ftge@ff2,w
  9092  1524  0270               	subwf	___ftge@ff1,w
  9093  1525  0008               	return
  9094  1526                     __end_of___ftge:	
  9095                           
  9096                           	psect	text7
  9097  1365                     __ptext7:	
  9098 ;; *************** function ___ftsub *****************
  9099 ;; Defined at:
  9100 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftsub.c"
  9101 ;; Parameters:    Size  Location     Type
  9102 ;;  f2              3   45[BANK0 ] float 
  9103 ;;  f1              3   48[BANK0 ] float 
  9104 ;; Auto vars:     Size  Location     Type
  9105 ;;		None
  9106 ;; Return value:  Size  Location     Type
  9107 ;;                  3   45[BANK0 ] float 
  9108 ;; Registers used:
  9109 ;;		wreg, status,2, status,0, pclath, cstack
  9110 ;; Tracked objects:
  9111 ;;		On entry : 0/0
  9112 ;;		On exit  : 0/0
  9113 ;;		Unchanged: 0/0
  9114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9115 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9118 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9119 ;;Total ram usage:        6 bytes
  9120 ;; Hardware stack levels used:    1
  9121 ;; Hardware stack levels required when called:    2
  9122 ;; This function calls:
  9123 ;;		___ftadd
  9124 ;; This function is called by:
  9125 ;;		_tempCalc
  9126 ;; This function uses a non-reentrant model
  9127 ;;
  9128                           
  9129                           
  9130                           ;psect for function ___ftsub
  9131  1365                     ___ftsub:	
  9132                           
  9133                           ;incstack = 0
  9134                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  9135  1365  0020               	movlb	0	; select bank0
  9136  1366  084F               	movf	___ftsub@f2+2,w
  9137  1367  044E               	iorwf	___ftsub@f2+1,w
  9138  1368  044D               	iorwf	___ftsub@f2,w
  9139  1369  1903               	skipnz
  9140  136A  2B6D               	goto	l2754
  9141  136B  3080               	movlw	128
  9142  136C  06CF               	xorwf	___ftsub@f2+2,f
  9143  136D                     l2754:	
  9144  136D  0850               	movf	___ftsub@f1,w
  9145  136E  00C0               	movwf	___ftadd@f1
  9146  136F  0851               	movf	___ftsub@f1+1,w
  9147  1370  00C1               	movwf	___ftadd@f1+1
  9148  1371  0852               	movf	___ftsub@f1+2,w
  9149  1372  00C2               	movwf	___ftadd@f1+2
  9150  1373  084D               	movf	___ftsub@f2,w
  9151  1374  00C3               	movwf	___ftadd@f2
  9152  1375  084E               	movf	___ftsub@f2+1,w
  9153  1376  00C4               	movwf	___ftadd@f2+1
  9154  1377  084F               	movf	___ftsub@f2+2,w
  9155  1378  00C5               	movwf	___ftadd@f2+2
  9156  1379  318D  25EF         	fcall	___ftadd
  9157  137B  0020               	movlb	0	; select bank0
  9158  137C  0840               	movf	?___ftadd,w
  9159  137D  00CD               	movwf	?___ftsub
  9160  137E  0841               	movf	?___ftadd+1,w
  9161  137F  00CE               	movwf	?___ftsub+1
  9162  1380  0842               	movf	?___ftadd+2,w
  9163  1381  00CF               	movwf	?___ftsub+2
  9164  1382  0008               	return
  9165  1383                     __end_of___ftsub:	
  9166                           
  9167                           	psect	text8
  9168  0DEF                     __ptext8:	
  9169 ;; *************** function ___ftadd *****************
  9170 ;; Defined at:
  9171 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
  9172 ;; Parameters:    Size  Location     Type
  9173 ;;  f1              3   32[BANK0 ] float 
  9174 ;;  f2              3   35[BANK0 ] float 
  9175 ;; Auto vars:     Size  Location     Type
  9176 ;;  exp1            1   44[BANK0 ] unsigned char 
  9177 ;;  exp2            1   43[BANK0 ] unsigned char 
  9178 ;;  sign            1   42[BANK0 ] unsigned char 
  9179 ;; Return value:  Size  Location     Type
  9180 ;;                  3   32[BANK0 ] float 
  9181 ;; Registers used:
  9182 ;;		wreg, status,2, status,0, pclath, cstack
  9183 ;; Tracked objects:
  9184 ;;		On entry : 0/0
  9185 ;;		On exit  : 0/0
  9186 ;;		Unchanged: 0/0
  9187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9188 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9189 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9190 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9191 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9192 ;;Total ram usage:       13 bytes
  9193 ;; Hardware stack levels used:    1
  9194 ;; Hardware stack levels required when called:    1
  9195 ;; This function calls:
  9196 ;;		___ftpack
  9197 ;; This function is called by:
  9198 ;;		_tempCalc
  9199 ;;		___ftsub
  9200 ;;		_log
  9201 ;;		_eval_poly
  9202 ;; This function uses a non-reentrant model
  9203 ;;
  9204                           
  9205                           
  9206                           ;psect for function ___ftadd
  9207  0DEF                     ___ftadd:	
  9208                           
  9209                           ;incstack = 0
  9210                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  9211  0DEF  0020               	movlb	0	; select bank0
  9212  0DF0  0840               	movf	___ftadd@f1,w
  9213  0DF1  00C6               	movwf	??___ftadd
  9214  0DF2  0841               	movf	___ftadd@f1+1,w
  9215  0DF3  00C7               	movwf	??___ftadd+1
  9216  0DF4  0842               	movf	___ftadd@f1+2,w
  9217  0DF5  00C8               	movwf	??___ftadd+2
  9218  0DF6  1003               	clrc
  9219  0DF7  0D47               	rlf	??___ftadd+1,w
  9220  0DF8  0D48               	rlf	??___ftadd+2,w
  9221  0DF9  00C9               	movwf	??___ftadd+3
  9222  0DFA  0849               	movf	??___ftadd+3,w
  9223  0DFB  00CC               	movwf	___ftadd@exp1
  9224  0DFC  0843               	movf	___ftadd@f2,w
  9225  0DFD  00C6               	movwf	??___ftadd
  9226  0DFE  0844               	movf	___ftadd@f2+1,w
  9227  0DFF  00C7               	movwf	??___ftadd+1
  9228  0E00  0845               	movf	___ftadd@f2+2,w
  9229  0E01  00C8               	movwf	??___ftadd+2
  9230  0E02  1003               	clrc
  9231  0E03  0D47               	rlf	??___ftadd+1,w
  9232  0E04  0D48               	rlf	??___ftadd+2,w
  9233  0E05  00C9               	movwf	??___ftadd+3
  9234  0E06  0849               	movf	??___ftadd+3,w
  9235  0E07  00CB               	movwf	___ftadd@exp2
  9236  0E08  084C               	movf	___ftadd@exp1,w
  9237  0E09  1903               	btfsc	3,2
  9238  0E0A  2E17               	goto	l2258
  9239  0E0B  084B               	movf	___ftadd@exp2,w
  9240  0E0C  024C               	subwf	___ftadd@exp1,w
  9241  0E0D  1803               	skipnc
  9242  0E0E  2E1E               	goto	l2262
  9243  0E0F  034C               	decf	___ftadd@exp1,w
  9244  0E10  3AFF               	xorlw	255
  9245  0E11  074B               	addwf	___ftadd@exp2,w
  9246  0E12  00C6               	movwf	??___ftadd
  9247  0E13  3019               	movlw	25
  9248  0E14  0246               	subwf	??___ftadd,w
  9249  0E15  1C03               	skipc
  9250  0E16  2E1E               	goto	l2262
  9251  0E17                     l2258:	
  9252  0E17  0843               	movf	___ftadd@f2,w
  9253  0E18  00C0               	movwf	?___ftadd
  9254  0E19  0844               	movf	___ftadd@f2+1,w
  9255  0E1A  00C1               	movwf	?___ftadd+1
  9256  0E1B  0845               	movf	___ftadd@f2+2,w
  9257  0E1C  00C2               	movwf	?___ftadd+2
  9258  0E1D  0008               	return
  9259  0E1E                     l2262:	
  9260  0E1E  084B               	movf	___ftadd@exp2,w
  9261  0E1F  1903               	btfsc	3,2
  9262  0E20  0008               	return
  9263  0E21  084C               	movf	___ftadd@exp1,w
  9264  0E22  024B               	subwf	___ftadd@exp2,w
  9265  0E23  1803               	skipnc
  9266  0E24  2E2D               	goto	l2268
  9267  0E25  034B               	decf	___ftadd@exp2,w
  9268  0E26  3AFF               	xorlw	255
  9269  0E27  074C               	addwf	___ftadd@exp1,w
  9270  0E28  00C6               	movwf	??___ftadd
  9271  0E29  3019               	movlw	25
  9272  0E2A  0246               	subwf	??___ftadd,w
  9273  0E2B  1803               	btfsc	3,0
  9274  0E2C  0008               	return
  9275  0E2D                     l2268:	
  9276  0E2D  3006               	movlw	6
  9277  0E2E  00C6               	movwf	??___ftadd
  9278  0E2F  0846               	movf	??___ftadd,w
  9279  0E30  00CA               	movwf	___ftadd@sign
  9280  0E31  1BC2               	btfsc	___ftadd@f1+2,7
  9281  0E32  17CA               	bsf	___ftadd@sign,7
  9282  0E33  1BC5               	btfsc	___ftadd@f2+2,7
  9283  0E34  174A               	bsf	___ftadd@sign,6
  9284  0E35  17C1               	bsf	___ftadd@f1+1,7
  9285  0E36  30FF               	movlw	255
  9286  0E37  05C0               	andwf	___ftadd@f1,f
  9287  0E38  30FF               	movlw	255
  9288  0E39  05C1               	andwf	___ftadd@f1+1,f
  9289  0E3A  3000               	movlw	0
  9290  0E3B  05C2               	andwf	___ftadd@f1+2,f
  9291  0E3C  17C4               	bsf	___ftadd@f2+1,7
  9292  0E3D  30FF               	movlw	255
  9293  0E3E  05C3               	andwf	___ftadd@f2,f
  9294  0E3F  30FF               	movlw	255
  9295  0E40  05C4               	andwf	___ftadd@f2+1,f
  9296  0E41  3000               	movlw	0
  9297  0E42  05C5               	andwf	___ftadd@f2+2,f
  9298  0E43  084B               	movf	___ftadd@exp2,w
  9299  0E44  024C               	subwf	___ftadd@exp1,w
  9300  0E45  1803               	skipnc
  9301  0E46  2E69               	goto	l2290
  9302  0E47                     l2280:	
  9303  0E47  3001               	movlw	1
  9304  0E48                     u2265:	
  9305  0E48  35C3               	lslf	___ftadd@f2,f
  9306  0E49  0DC4               	rlf	___ftadd@f2+1,f
  9307  0E4A  0DC5               	rlf	___ftadd@f2+2,f
  9308  0E4B  0B89               	decfsz	9,f
  9309  0E4C  2E48               	goto	u2265
  9310  0E4D  3001               	movlw	1
  9311  0E4E  02CB               	subwf	___ftadd@exp2,f
  9312  0E4F  084B               	movf	___ftadd@exp2,w
  9313  0E50  064C               	xorwf	___ftadd@exp1,w
  9314  0E51  1903               	skipnz
  9315  0E52  2E64               	goto	l2288
  9316  0E53  3001               	movlw	1
  9317  0E54  02CA               	subwf	___ftadd@sign,f
  9318  0E55  084A               	movf	___ftadd@sign,w
  9319  0E56  3907               	andlw	7
  9320  0E57  1903               	btfsc	3,2
  9321  0E58  2E64               	goto	l2288
  9322  0E59  2E47               	goto	l2280
  9323  0E5A                     l2286:	
  9324  0E5A  3001               	movlw	1
  9325  0E5B                     u2295:	
  9326  0E5B  36C2               	lsrf	___ftadd@f1+2,f
  9327  0E5C  0CC1               	rrf	___ftadd@f1+1,f
  9328  0E5D  0CC0               	rrf	___ftadd@f1,f
  9329  0E5E  0B89               	decfsz	9,f
  9330  0E5F  2E5B               	goto	u2295
  9331  0E60  3001               	movlw	1
  9332  0E61  00C6               	movwf	??___ftadd
  9333  0E62  0846               	movf	??___ftadd,w
  9334  0E63  07CC               	addwf	___ftadd@exp1,f
  9335  0E64                     l2288:	
  9336  0E64  084C               	movf	___ftadd@exp1,w
  9337  0E65  064B               	xorwf	___ftadd@exp2,w
  9338  0E66  1903               	btfsc	3,2
  9339  0E67  2E8E               	goto	l768
  9340  0E68  2E5A               	goto	l2286
  9341  0E69                     l2290:	
  9342  0E69  084C               	movf	___ftadd@exp1,w
  9343  0E6A  024B               	subwf	___ftadd@exp2,w
  9344  0E6B  1803               	skipnc
  9345  0E6C  2E8E               	goto	l768
  9346  0E6D                     l2292:	
  9347  0E6D  3001               	movlw	1
  9348  0E6E                     u2325:	
  9349  0E6E  35C0               	lslf	___ftadd@f1,f
  9350  0E6F  0DC1               	rlf	___ftadd@f1+1,f
  9351  0E70  0DC2               	rlf	___ftadd@f1+2,f
  9352  0E71  0B89               	decfsz	9,f
  9353  0E72  2E6E               	goto	u2325
  9354  0E73  3001               	movlw	1
  9355  0E74  02CC               	subwf	___ftadd@exp1,f
  9356  0E75  084B               	movf	___ftadd@exp2,w
  9357  0E76  064C               	xorwf	___ftadd@exp1,w
  9358  0E77  1903               	skipnz
  9359  0E78  2E8A               	goto	l2300
  9360  0E79  3001               	movlw	1
  9361  0E7A  02CA               	subwf	___ftadd@sign,f
  9362  0E7B  084A               	movf	___ftadd@sign,w
  9363  0E7C  3907               	andlw	7
  9364  0E7D  1903               	btfsc	3,2
  9365  0E7E  2E8A               	goto	l2300
  9366  0E7F  2E6D               	goto	l2292
  9367  0E80                     l2298:	
  9368  0E80  3001               	movlw	1
  9369  0E81                     u2355:	
  9370  0E81  36C5               	lsrf	___ftadd@f2+2,f
  9371  0E82  0CC4               	rrf	___ftadd@f2+1,f
  9372  0E83  0CC3               	rrf	___ftadd@f2,f
  9373  0E84  0B89               	decfsz	9,f
  9374  0E85  2E81               	goto	u2355
  9375  0E86  3001               	movlw	1
  9376  0E87  00C6               	movwf	??___ftadd
  9377  0E88  0846               	movf	??___ftadd,w
  9378  0E89  07CB               	addwf	___ftadd@exp2,f
  9379  0E8A                     l2300:	
  9380  0E8A  084C               	movf	___ftadd@exp1,w
  9381  0E8B  064B               	xorwf	___ftadd@exp2,w
  9382  0E8C  1D03               	skipz
  9383  0E8D  2E80               	goto	l2298
  9384  0E8E                     l768:	
  9385  0E8E  1FCA               	btfss	___ftadd@sign,7
  9386  0E8F  2EA0               	goto	l2304
  9387  0E90  30FF               	movlw	255
  9388  0E91  06C0               	xorwf	___ftadd@f1,f
  9389  0E92  30FF               	movlw	255
  9390  0E93  06C1               	xorwf	___ftadd@f1+1,f
  9391  0E94  30FF               	movlw	255
  9392  0E95  06C2               	xorwf	___ftadd@f1+2,f
  9393  0E96  3001               	movlw	1
  9394  0E97  07C0               	addwf	___ftadd@f1,f
  9395  0E98  3000               	movlw	0
  9396  0E99  1803               	skipnc
  9397  0E9A  3001               	movlw	1
  9398  0E9B  07C1               	addwf	___ftadd@f1+1,f
  9399  0E9C  3000               	movlw	0
  9400  0E9D  1803               	skipnc
  9401  0E9E  3001               	movlw	1
  9402  0E9F  07C2               	addwf	___ftadd@f1+2,f
  9403  0EA0                     l2304:	
  9404  0EA0  1F4A               	btfss	___ftadd@sign,6
  9405  0EA1  2EB2               	goto	l2308
  9406  0EA2  30FF               	movlw	255
  9407  0EA3  06C3               	xorwf	___ftadd@f2,f
  9408  0EA4  30FF               	movlw	255
  9409  0EA5  06C4               	xorwf	___ftadd@f2+1,f
  9410  0EA6  30FF               	movlw	255
  9411  0EA7  06C5               	xorwf	___ftadd@f2+2,f
  9412  0EA8  3001               	movlw	1
  9413  0EA9  07C3               	addwf	___ftadd@f2,f
  9414  0EAA  3000               	movlw	0
  9415  0EAB  1803               	skipnc
  9416  0EAC  3001               	movlw	1
  9417  0EAD  07C4               	addwf	___ftadd@f2+1,f
  9418  0EAE  3000               	movlw	0
  9419  0EAF  1803               	skipnc
  9420  0EB0  3001               	movlw	1
  9421  0EB1  07C5               	addwf	___ftadd@f2+2,f
  9422  0EB2                     l2308:	
  9423  0EB2  01CA               	clrf	___ftadd@sign
  9424  0EB3  0840               	movf	___ftadd@f1,w
  9425  0EB4  07C3               	addwf	___ftadd@f2,f
  9426  0EB5  0841               	movf	___ftadd@f1+1,w
  9427  0EB6  3DC4               	addwfc	___ftadd@f2+1,f
  9428  0EB7  0842               	movf	___ftadd@f1+2,w
  9429  0EB8  3DC5               	addwfc	___ftadd@f2+2,f
  9430  0EB9  1FC5               	btfss	___ftadd@f2+2,7
  9431  0EBA  2ECD               	goto	l2318
  9432  0EBB  30FF               	movlw	255
  9433  0EBC  06C3               	xorwf	___ftadd@f2,f
  9434  0EBD  30FF               	movlw	255
  9435  0EBE  06C4               	xorwf	___ftadd@f2+1,f
  9436  0EBF  30FF               	movlw	255
  9437  0EC0  06C5               	xorwf	___ftadd@f2+2,f
  9438  0EC1  3001               	movlw	1
  9439  0EC2  07C3               	addwf	___ftadd@f2,f
  9440  0EC3  3000               	movlw	0
  9441  0EC4  1803               	skipnc
  9442  0EC5  3001               	movlw	1
  9443  0EC6  07C4               	addwf	___ftadd@f2+1,f
  9444  0EC7  3000               	movlw	0
  9445  0EC8  1803               	skipnc
  9446  0EC9  3001               	movlw	1
  9447  0ECA  07C5               	addwf	___ftadd@f2+2,f
  9448  0ECB  01CA               	clrf	___ftadd@sign
  9449  0ECC  0ACA               	incf	___ftadd@sign,f
  9450  0ECD                     l2318:	
  9451  0ECD  0843               	movf	___ftadd@f2,w
  9452  0ECE  00F0               	movwf	___ftpack@arg
  9453  0ECF  0844               	movf	___ftadd@f2+1,w
  9454  0ED0  00F1               	movwf	___ftpack@arg+1
  9455  0ED1  0845               	movf	___ftadd@f2+2,w
  9456  0ED2  00F2               	movwf	___ftpack@arg+2
  9457  0ED3  084C               	movf	___ftadd@exp1,w
  9458  0ED4  00C6               	movwf	??___ftadd
  9459  0ED5  0846               	movf	??___ftadd,w
  9460  0ED6  00F3               	movwf	___ftpack@exp
  9461  0ED7  084A               	movf	___ftadd@sign,w
  9462  0ED8  00C7               	movwf	??___ftadd+1
  9463  0ED9  0847               	movf	??___ftadd+1,w
  9464  0EDA  00F4               	movwf	___ftpack@sign
  9465  0EDB  3197  271A         	fcall	___ftpack
  9466  0EDD  0870               	movf	?___ftpack,w
  9467  0EDE  0020               	movlb	0	; select bank0
  9468  0EDF  00C0               	movwf	?___ftadd
  9469  0EE0  0871               	movf	?___ftpack+1,w
  9470  0EE1  00C1               	movwf	?___ftadd+1
  9471  0EE2  0872               	movf	?___ftpack+2,w
  9472  0EE3  00C2               	movwf	?___ftadd+2
  9473  0EE4  0008               	return
  9474  0EE5                     __end_of___ftadd:	
  9475                           
  9476                           	psect	text9
  9477  0181                     __ptext9:	
  9478 ;; *************** function _readIAnalog *****************
  9479 ;; Defined at:
  9480 ;;		line 77 in file "adc.c"
  9481 ;; Parameters:    Size  Location     Type
  9482 ;;  channel         2    6[BANK0 ] unsigned int 
  9483 ;; Auto vars:     Size  Location     Type
  9484 ;;  value           2   11[COMMON] int 
  9485 ;;  analog_chann    2    9[COMMON] unsigned int 
  9486 ;; Return value:  Size  Location     Type
  9487 ;;                  2    6[BANK0 ] int 
  9488 ;; Registers used:
  9489 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9490 ;; Tracked objects:
  9491 ;;		On entry : 0/0
  9492 ;;		On exit  : 0/0
  9493 ;;		Unchanged: 0/0
  9494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9495 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9496 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9497 ;;      Temps:          0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9498 ;;      Totals:         4      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9499 ;;Total ram usage:       24 bytes
  9500 ;; Hardware stack levels used:    1
  9501 ;; Hardware stack levels required when called:    1
  9502 ;; This function calls:
  9503 ;;		_ADCRead
  9504 ;;		___aldiv
  9505 ;;		___wmul
  9506 ;; This function is called by:
  9507 ;;		_main
  9508 ;; This function uses a non-reentrant model
  9509 ;;
  9510                           
  9511                           
  9512                           ;psect for function _readIAnalog
  9513  0181                     _readIAnalog:	
  9514                           
  9515                           ;adc.c: 79: int16_t value;
  9516                           ;adc.c: 81: uint16_t analog_channel = channels[channel];
  9517                           
  9518                           ;incstack = 0
  9519                           ; Regs used in _readIAnalog: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9520  0181  0020               	movlb	0	; select bank0
  9521  0182  3526               	lslf	readIAnalog@channel,w
  9522  0183  3E41               	addlw	(low (_channels| (0+256)))& (0+255)
  9523  0184  0086               	movwf	6
  9524  0185  3001               	movlw	1	; select bank2/3
  9525  0186  0087               	movwf	7
  9526  0187  3F40               	moviw [0]fsr1
  9527  0188  00F9               	movwf	readIAnalog@analog_channel
  9528  0189  3F41               	moviw [1]fsr1
  9529  018A  00FA               	movwf	readIAnalog@analog_channel+1
  9530                           
  9531                           ;adc.c: 83: value = ADCRead(analog_channel);
  9532  018B  0879               	movf	readIAnalog@analog_channel,w
  9533  018C  3193  2309  3181   	fcall	_ADCRead
  9534  018F  0871               	movf	?_ADCRead+1,w
  9535  0190  00FC               	movwf	readIAnalog@value+1
  9536  0191  0870               	movf	?_ADCRead,w
  9537  0192  00FB               	movwf	readIAnalog@value
  9538                           
  9539                           ;adc.c: 85: totals[channel] = totals[channel]-samples[channel][sampleIndex];
  9540  0193  0020               	movlb	0	; select bank0
  9541  0194  0826               	movf	readIAnalog@channel,w
  9542  0195  00A8               	movwf	??_readIAnalog
  9543  0196  3001               	movlw	1
  9544  0197                     u3115:	
  9545  0197  35A8               	lslf	??_readIAnalog,f
  9546  0198  3EFF               	addlw	-1
  9547  0199  1D03               	skipz
  9548  019A  2997               	goto	u3115
  9549  019B  3528               	lslf	??_readIAnalog,w
  9550  019C  3E20               	addlw	(low (_totals| (0+256)))& (0+255)
  9551  019D  0086               	movwf	6
  9552  019E  3001               	movlw	1	; select bank2/3
  9553  019F  0087               	movwf	7
  9554  01A0  3F40               	moviw [0]fsr1
  9555  01A1  00A9               	movwf	??_readIAnalog+1
  9556  01A2  3F41               	moviw [1]fsr1
  9557  01A3  00AA               	movwf	??_readIAnalog+2
  9558  01A4  3F42               	moviw [2]fsr1
  9559  01A5  00AB               	movwf	??_readIAnalog+3
  9560  01A6  3F43               	moviw [3]fsr1
  9561  01A7  00AC               	movwf	??_readIAnalog+4
  9562  01A8  0021               	movlb	1	; select bank1
  9563  01A9  0855               	movf	(_sampleIndex+1)^(0+128),w
  9564  01AA  0020               	movlb	0	; select bank0
  9565  01AB  00AE               	movwf	??_readIAnalog+6
  9566  01AC  0021               	movlb	1	; select bank1
  9567  01AD  0854               	movf	_sampleIndex^(0+128),w
  9568  01AE  0020               	movlb	0	; select bank0
  9569  01AF  00AD               	movwf	??_readIAnalog+5
  9570  01B0  35AD               	lslf	??_readIAnalog+5,f
  9571  01B1  0DAE               	rlf	??_readIAnalog+6,f
  9572  01B2  0827               	movf	readIAnalog@channel+1,w
  9573  01B3  00F1               	movwf	___wmul@multiplier+1
  9574  01B4  0826               	movf	readIAnalog@channel,w
  9575  01B5  00F0               	movwf	___wmul@multiplier
  9576  01B6  3096               	movlw	150
  9577  01B7  00F2               	movwf	___wmul@multiplicand
  9578  01B8  3000               	movlw	0
  9579  01B9  00F3               	movwf	___wmul@multiplicand+1
  9580  01BA  3193  234A  3181   	fcall	___wmul
  9581  01BD  3098               	movlw	152
  9582  01BE  0020               	movlb	0	; select bank0
  9583  01BF  00AF               	movwf	??_readIAnalog+7
  9584  01C0  3021               	movlw	33
  9585  01C1  00B0               	movwf	??_readIAnalog+8
  9586  01C2  0870               	movf	?___wmul,w
  9587  01C3  072F               	addwf	??_readIAnalog+7,w
  9588  01C4  00B1               	movwf	??_readIAnalog+9
  9589  01C5  0871               	movf	?___wmul+1,w
  9590  01C6  3D30               	addwfc	??_readIAnalog+8,w
  9591  01C7  00B2               	movwf	??_readIAnalog+10
  9592  01C8  082D               	movf	??_readIAnalog+5,w
  9593  01C9  0731               	addwf	??_readIAnalog+9,w
  9594  01CA  0086               	movwf	6
  9595  01CB  082E               	movf	??_readIAnalog+6,w
  9596  01CC  3D32               	addwfc	??_readIAnalog+10,w
  9597  01CD  0087               	movwf	7
  9598  01CE  3F40               	moviw [0]fsr1
  9599  01CF  00B3               	movwf	??_readIAnalog+11
  9600  01D0  3F41               	moviw [1]fsr1
  9601  01D1  00B4               	movwf	??_readIAnalog+12
  9602  01D2  0833               	movf	??_readIAnalog+11,w
  9603  01D3  00B5               	movwf	??_readIAnalog+13
  9604  01D4  0834               	movf	??_readIAnalog+12,w
  9605  01D5  00B6               	movwf	??_readIAnalog+14
  9606  01D6  3000               	movlw	0
  9607  01D7  1BB6               	btfsc	??_readIAnalog+14,7
  9608  01D8  30FF               	movlw	255
  9609  01D9  00B7               	movwf	??_readIAnalog+15
  9610  01DA  00B8               	movwf	??_readIAnalog+16
  9611  01DB  09B5               	comf	??_readIAnalog+13,f
  9612  01DC  09B6               	comf	??_readIAnalog+14,f
  9613  01DD  09B7               	comf	??_readIAnalog+15,f
  9614  01DE  09B8               	comf	??_readIAnalog+16,f
  9615  01DF  0AB5               	incf	??_readIAnalog+13,f
  9616  01E0  1903               	skipnz
  9617  01E1  0AB6               	incf	??_readIAnalog+14,f
  9618  01E2  1903               	skipnz
  9619  01E3  0AB7               	incf	??_readIAnalog+15,f
  9620  01E4  1903               	skipnz
  9621  01E5  0AB8               	incf	??_readIAnalog+16,f
  9622  01E6  0835               	movf	??_readIAnalog+13,w
  9623  01E7  07A9               	addwf	??_readIAnalog+1,f
  9624  01E8  0836               	movf	??_readIAnalog+14,w
  9625  01E9  3DAA               	addwfc	??_readIAnalog+2,f
  9626  01EA  0837               	movf	??_readIAnalog+15,w
  9627  01EB  3DAB               	addwfc	??_readIAnalog+3,f
  9628  01EC  0838               	movf	??_readIAnalog+16,w
  9629  01ED  3DAC               	addwfc	??_readIAnalog+4,f
  9630  01EE  0826               	movf	readIAnalog@channel,w
  9631  01EF  00B9               	movwf	??_readIAnalog+17
  9632  01F0  3001               	movlw	1
  9633  01F1                     u3125:	
  9634  01F1  35B9               	lslf	??_readIAnalog+17,f
  9635  01F2  3EFF               	addlw	-1
  9636  01F3  1D03               	skipz
  9637  01F4  29F1               	goto	u3125
  9638  01F5  3539               	lslf	??_readIAnalog+17,w
  9639  01F6  3E20               	addlw	(low (_totals| (0+256)))& (0+255)
  9640  01F7  0086               	movwf	6
  9641  01F8  3001               	movlw	1	; select bank2/3
  9642  01F9  0087               	movwf	7
  9643  01FA  0829               	movf	??_readIAnalog+1,w
  9644  01FB  3FC0               	movwi [0]fsr1
  9645  01FC  082A               	movf	??_readIAnalog+2,w
  9646  01FD  3FC1               	movwi [1]fsr1
  9647  01FE  082B               	movf	??_readIAnalog+3,w
  9648  01FF  3FC2               	movwi [2]fsr1
  9649  0200  082C               	movf	??_readIAnalog+4,w
  9650  0201  3FC3               	movwi [3]fsr1
  9651                           
  9652                           ;adc.c: 87: samples[channel][sampleIndex] = value;
  9653  0202  0021               	movlb	1	; select bank1
  9654  0203  0855               	movf	(_sampleIndex+1)^(0+128),w
  9655  0204  0020               	movlb	0	; select bank0
  9656  0205  00A9               	movwf	??_readIAnalog+1
  9657  0206  0021               	movlb	1	; select bank1
  9658  0207  0854               	movf	_sampleIndex^(0+128),w
  9659  0208  0020               	movlb	0	; select bank0
  9660  0209  00A8               	movwf	??_readIAnalog
  9661  020A  35A8               	lslf	??_readIAnalog,f
  9662  020B  0DA9               	rlf	??_readIAnalog+1,f
  9663  020C  0827               	movf	readIAnalog@channel+1,w
  9664  020D  00F1               	movwf	___wmul@multiplier+1
  9665  020E  0826               	movf	readIAnalog@channel,w
  9666  020F  00F0               	movwf	___wmul@multiplier
  9667  0210  3096               	movlw	150
  9668  0211  00F2               	movwf	___wmul@multiplicand
  9669  0212  3000               	movlw	0
  9670  0213  00F3               	movwf	___wmul@multiplicand+1
  9671  0214  3193  234A  3181   	fcall	___wmul
  9672  0217  3098               	movlw	152
  9673  0218  0020               	movlb	0	; select bank0
  9674  0219  00AA               	movwf	??_readIAnalog+2
  9675  021A  3021               	movlw	33
  9676  021B  00AB               	movwf	??_readIAnalog+3
  9677  021C  0870               	movf	?___wmul,w
  9678  021D  072A               	addwf	??_readIAnalog+2,w
  9679  021E  00AC               	movwf	??_readIAnalog+4
  9680  021F  0871               	movf	?___wmul+1,w
  9681  0220  3D2B               	addwfc	??_readIAnalog+3,w
  9682  0221  00AD               	movwf	??_readIAnalog+5
  9683  0222  0828               	movf	??_readIAnalog,w
  9684  0223  072C               	addwf	??_readIAnalog+4,w
  9685  0224  0086               	movwf	6
  9686  0225  0829               	movf	??_readIAnalog+1,w
  9687  0226  3D2D               	addwfc	??_readIAnalog+5,w
  9688  0227  0087               	movwf	7
  9689  0228  087B               	movf	readIAnalog@value,w
  9690  0229  3FC0               	movwi [0]fsr1
  9691  022A  087C               	movf	readIAnalog@value+1,w
  9692  022B  3FC1               	movwi [1]fsr1
  9693                           
  9694                           ;adc.c: 89: totals[channel] = totals[channel]+samples[channel][sampleIndex];
  9695  022C  0826               	movf	readIAnalog@channel,w
  9696  022D  00A8               	movwf	??_readIAnalog
  9697  022E  3001               	movlw	1
  9698  022F                     u3135:	
  9699  022F  35A8               	lslf	??_readIAnalog,f
  9700  0230  3EFF               	addlw	-1
  9701  0231  1D03               	skipz
  9702  0232  2A2F               	goto	u3135
  9703  0233  3528               	lslf	??_readIAnalog,w
  9704  0234  3E20               	addlw	(low (_totals| (0+256)))& (0+255)
  9705  0235  0086               	movwf	6
  9706  0236  3001               	movlw	1	; select bank2/3
  9707  0237  0087               	movwf	7
  9708  0238  3F40               	moviw [0]fsr1
  9709  0239  00A9               	movwf	??_readIAnalog+1
  9710  023A  3F41               	moviw [1]fsr1
  9711  023B  00AA               	movwf	??_readIAnalog+2
  9712  023C  3F42               	moviw [2]fsr1
  9713  023D  00AB               	movwf	??_readIAnalog+3
  9714  023E  3F43               	moviw [3]fsr1
  9715  023F  00AC               	movwf	??_readIAnalog+4
  9716  0240  0021               	movlb	1	; select bank1
  9717  0241  0855               	movf	(_sampleIndex+1)^(0+128),w
  9718  0242  0020               	movlb	0	; select bank0
  9719  0243  00AE               	movwf	??_readIAnalog+6
  9720  0244  0021               	movlb	1	; select bank1
  9721  0245  0854               	movf	_sampleIndex^(0+128),w
  9722  0246  0020               	movlb	0	; select bank0
  9723  0247  00AD               	movwf	??_readIAnalog+5
  9724  0248  35AD               	lslf	??_readIAnalog+5,f
  9725  0249  0DAE               	rlf	??_readIAnalog+6,f
  9726  024A  0827               	movf	readIAnalog@channel+1,w
  9727  024B  00F1               	movwf	___wmul@multiplier+1
  9728  024C  0826               	movf	readIAnalog@channel,w
  9729  024D  00F0               	movwf	___wmul@multiplier
  9730  024E  3096               	movlw	150
  9731  024F  00F2               	movwf	___wmul@multiplicand
  9732  0250  3000               	movlw	0
  9733  0251  00F3               	movwf	___wmul@multiplicand+1
  9734  0252  3193  234A  3181   	fcall	___wmul
  9735  0255  3098               	movlw	152
  9736  0256  0020               	movlb	0	; select bank0
  9737  0257  00AF               	movwf	??_readIAnalog+7
  9738  0258  3021               	movlw	33
  9739  0259  00B0               	movwf	??_readIAnalog+8
  9740  025A  0870               	movf	?___wmul,w
  9741  025B  072F               	addwf	??_readIAnalog+7,w
  9742  025C  00B1               	movwf	??_readIAnalog+9
  9743  025D  0871               	movf	?___wmul+1,w
  9744  025E  3D30               	addwfc	??_readIAnalog+8,w
  9745  025F  00B2               	movwf	??_readIAnalog+10
  9746  0260  082D               	movf	??_readIAnalog+5,w
  9747  0261  0731               	addwf	??_readIAnalog+9,w
  9748  0262  0086               	movwf	6
  9749  0263  082E               	movf	??_readIAnalog+6,w
  9750  0264  3D32               	addwfc	??_readIAnalog+10,w
  9751  0265  0087               	movwf	7
  9752  0266  3F40               	moviw [0]fsr1
  9753  0267  00B3               	movwf	??_readIAnalog+11
  9754  0268  3F41               	moviw [1]fsr1
  9755  0269  00B4               	movwf	??_readIAnalog+12
  9756  026A  0833               	movf	??_readIAnalog+11,w
  9757  026B  00B5               	movwf	??_readIAnalog+13
  9758  026C  0834               	movf	??_readIAnalog+12,w
  9759  026D  00B6               	movwf	??_readIAnalog+14
  9760  026E  3000               	movlw	0
  9761  026F  1BB6               	btfsc	??_readIAnalog+14,7
  9762  0270  30FF               	movlw	255
  9763  0271  00B7               	movwf	??_readIAnalog+15
  9764  0272  00B8               	movwf	??_readIAnalog+16
  9765  0273  0835               	movf	??_readIAnalog+13,w
  9766  0274  07A9               	addwf	??_readIAnalog+1,f
  9767  0275  0836               	movf	??_readIAnalog+14,w
  9768  0276  3DAA               	addwfc	??_readIAnalog+2,f
  9769  0277  0837               	movf	??_readIAnalog+15,w
  9770  0278  3DAB               	addwfc	??_readIAnalog+3,f
  9771  0279  0838               	movf	??_readIAnalog+16,w
  9772  027A  3DAC               	addwfc	??_readIAnalog+4,f
  9773  027B  0826               	movf	readIAnalog@channel,w
  9774  027C  00B9               	movwf	??_readIAnalog+17
  9775  027D  3001               	movlw	1
  9776  027E                     u3145:	
  9777  027E  35B9               	lslf	??_readIAnalog+17,f
  9778  027F  3EFF               	addlw	-1
  9779  0280  1D03               	skipz
  9780  0281  2A7E               	goto	u3145
  9781  0282  3539               	lslf	??_readIAnalog+17,w
  9782  0283  3E20               	addlw	(low (_totals| (0+256)))& (0+255)
  9783  0284  0086               	movwf	6
  9784  0285  3001               	movlw	1	; select bank2/3
  9785  0286  0087               	movwf	7
  9786  0287  0829               	movf	??_readIAnalog+1,w
  9787  0288  3FC0               	movwi [0]fsr1
  9788  0289  082A               	movf	??_readIAnalog+2,w
  9789  028A  3FC1               	movwi [1]fsr1
  9790  028B  082B               	movf	??_readIAnalog+3,w
  9791  028C  3FC2               	movwi [2]fsr1
  9792  028D  082C               	movf	??_readIAnalog+4,w
  9793  028E  3FC3               	movwi [3]fsr1
  9794                           
  9795                           ;adc.c: 91: if(channel>=(4-1))
  9796  028F  3000               	movlw	0
  9797  0290  0227               	subwf	readIAnalog@channel+1,w
  9798  0291  3003               	movlw	3
  9799  0292  1903               	skipnz
  9800  0293  0226               	subwf	readIAnalog@channel,w
  9801  0294  1C03               	skipc
  9802  0295  2AA4               	goto	l2836
  9803                           
  9804                           ;adc.c: 92: {
  9805                           ;adc.c: 93: sampleIndex+=1;
  9806  0296  3001               	movlw	1
  9807  0297  0021               	movlb	1	; select bank1
  9808  0298  07D4               	addwf	_sampleIndex^(0+128),f
  9809  0299  3000               	movlw	0
  9810  029A  3DD5               	addwfc	(_sampleIndex+1)^(0+128),f
  9811                           
  9812                           ;adc.c: 94: if(sampleIndex >= 75)sampleIndex = 0;
  9813  029B  3000               	movlw	0
  9814  029C  0255               	subwf	(_sampleIndex+1)^(0+128),w
  9815  029D  304B               	movlw	75
  9816  029E  1903               	skipnz
  9817  029F  0254               	subwf	_sampleIndex^(0+128),w
  9818  02A0  1C03               	skipc
  9819  02A1  2AA4               	goto	l2836
  9820  02A2  01D4               	clrf	_sampleIndex^(0+128)
  9821  02A3  01D5               	clrf	(_sampleIndex+1)^(0+128)
  9822  02A4                     l2836:	
  9823                           
  9824                           ;adc.c: 95: }
  9825                           ;adc.c: 97: value = totals[channel]/75;
  9826  02A4  3000               	movlw	0
  9827  02A5  00F3               	movwf	___aldiv@divisor+3
  9828  02A6  3000               	movlw	0
  9829  02A7  00F2               	movwf	___aldiv@divisor+2
  9830  02A8  3000               	movlw	0
  9831  02A9  00F1               	movwf	___aldiv@divisor+1
  9832  02AA  304B               	movlw	75
  9833  02AB  00F0               	movwf	___aldiv@divisor
  9834  02AC  0020               	movlb	0	; select bank0
  9835  02AD  0826               	movf	readIAnalog@channel,w
  9836  02AE  00A8               	movwf	??_readIAnalog
  9837  02AF  3001               	movlw	1
  9838  02B0                     u3175:	
  9839  02B0  35A8               	lslf	??_readIAnalog,f
  9840  02B1  3EFF               	addlw	-1
  9841  02B2  1D03               	skipz
  9842  02B3  2AB0               	goto	u3175
  9843  02B4  3528               	lslf	??_readIAnalog,w
  9844  02B5  3E20               	addlw	(low (_totals| (0+256)))& (0+255)
  9845  02B6  0086               	movwf	6
  9846  02B7  3001               	movlw	1	; select bank2/3
  9847  02B8  0087               	movwf	7
  9848  02B9  3F40               	moviw [0]fsr1
  9849  02BA  00F4               	movwf	___aldiv@dividend
  9850  02BB  3F41               	moviw [1]fsr1
  9851  02BC  00F5               	movwf	___aldiv@dividend+1
  9852  02BD  3F42               	moviw [2]fsr1
  9853  02BE  00F6               	movwf	___aldiv@dividend+2
  9854  02BF  3F43               	moviw [3]fsr1
  9855  02C0  00F7               	movwf	___aldiv@dividend+3
  9856  02C1  3189  215E         	fcall	___aldiv
  9857  02C3  0871               	movf	?___aldiv+1,w
  9858  02C4  00FC               	movwf	readIAnalog@value+1
  9859  02C5  0870               	movf	?___aldiv,w
  9860  02C6  00FB               	movwf	readIAnalog@value
  9861                           
  9862                           ;adc.c: 99: return value;
  9863  02C7  087C               	movf	readIAnalog@value+1,w
  9864  02C8  0020               	movlb	0	; select bank0
  9865  02C9  00A7               	movwf	?_readIAnalog+1
  9866  02CA  087B               	movf	readIAnalog@value,w
  9867  02CB  00A6               	movwf	?_readIAnalog
  9868  02CC  0008               	return
  9869  02CD                     __end_of_readIAnalog:	
  9870                           
  9871                           	psect	text10
  9872  095E                     __ptext10:	
  9873 ;; *************** function ___aldiv *****************
  9874 ;; Defined at:
  9875 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\aldiv.c"
  9876 ;; Parameters:    Size  Location     Type
  9877 ;;  divisor         4    0[COMMON] long 
  9878 ;;  dividend        4    4[COMMON] long 
  9879 ;; Auto vars:     Size  Location     Type
  9880 ;;  quotient        4    2[BANK0 ] long 
  9881 ;;  sign            1    1[BANK0 ] unsigned char 
  9882 ;;  counter         1    0[BANK0 ] unsigned char 
  9883 ;; Return value:  Size  Location     Type
  9884 ;;                  4    0[COMMON] long 
  9885 ;; Registers used:
  9886 ;;		wreg, status,2, status,0
  9887 ;; Tracked objects:
  9888 ;;		On entry : 0/0
  9889 ;;		On exit  : 0/0
  9890 ;;		Unchanged: 0/0
  9891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9892 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9893 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9894 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9895 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9896 ;;Total ram usage:       15 bytes
  9897 ;; Hardware stack levels used:    1
  9898 ;; This function calls:
  9899 ;;		Nothing
  9900 ;; This function is called by:
  9901 ;;		_readIAnalog
  9902 ;; This function uses a non-reentrant model
  9903 ;;
  9904                           
  9905                           
  9906                           ;psect for function ___aldiv
  9907  095E                     ___aldiv:	
  9908                           
  9909                           ;incstack = 0
  9910                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  9911  095E  0020               	movlb	0	; select bank0
  9912  095F  01A1               	clrf	___aldiv@sign
  9913  0960  1FF3               	btfss	___aldiv@divisor+3,7
  9914  0961  296F               	goto	l631
  9915  0962  09F0               	comf	___aldiv@divisor,f
  9916  0963  09F1               	comf	___aldiv@divisor+1,f
  9917  0964  09F2               	comf	___aldiv@divisor+2,f
  9918  0965  09F3               	comf	___aldiv@divisor+3,f
  9919  0966  0AF0               	incf	___aldiv@divisor,f
  9920  0967  1903               	skipnz
  9921  0968  0AF1               	incf	___aldiv@divisor+1,f
  9922  0969  1903               	skipnz
  9923  096A  0AF2               	incf	___aldiv@divisor+2,f
  9924  096B  1903               	skipnz
  9925  096C  0AF3               	incf	___aldiv@divisor+3,f
  9926  096D  01A1               	clrf	___aldiv@sign
  9927  096E  0AA1               	incf	___aldiv@sign,f
  9928  096F                     l631:	
  9929  096F  1FF7               	btfss	___aldiv@dividend+3,7
  9930  0970  2980               	goto	l2634
  9931  0971  09F4               	comf	___aldiv@dividend,f
  9932  0972  09F5               	comf	___aldiv@dividend+1,f
  9933  0973  09F6               	comf	___aldiv@dividend+2,f
  9934  0974  09F7               	comf	___aldiv@dividend+3,f
  9935  0975  0AF4               	incf	___aldiv@dividend,f
  9936  0976  1903               	skipnz
  9937  0977  0AF5               	incf	___aldiv@dividend+1,f
  9938  0978  1903               	skipnz
  9939  0979  0AF6               	incf	___aldiv@dividend+2,f
  9940  097A  1903               	skipnz
  9941  097B  0AF7               	incf	___aldiv@dividend+3,f
  9942  097C  3001               	movlw	1
  9943  097D  00F8               	movwf	??___aldiv
  9944  097E  0878               	movf	??___aldiv,w
  9945  097F  06A1               	xorwf	___aldiv@sign,f
  9946  0980                     l2634:	
  9947  0980  3000               	movlw	0
  9948  0981  00A5               	movwf	___aldiv@quotient+3
  9949  0982  3000               	movlw	0
  9950  0983  00A4               	movwf	___aldiv@quotient+2
  9951  0984  3000               	movlw	0
  9952  0985  00A3               	movwf	___aldiv@quotient+1
  9953  0986  3000               	movlw	0
  9954  0987  00A2               	movwf	___aldiv@quotient
  9955  0988  0873               	movf	___aldiv@divisor+3,w
  9956  0989  0472               	iorwf	___aldiv@divisor+2,w
  9957  098A  0471               	iorwf	___aldiv@divisor+1,w
  9958  098B  0470               	iorwf	___aldiv@divisor,w
  9959  098C  1903               	skipnz
  9960  098D  29C9               	goto	l2656
  9961  098E  01A0               	clrf	___aldiv@counter
  9962  098F  0AA0               	incf	___aldiv@counter,f
  9963  0990                     l2642:	
  9964  0990  1BF3               	btfsc	___aldiv@divisor+3,7
  9965  0991  299E               	goto	l2644
  9966  0992  3001               	movlw	1
  9967  0993                     u2695:	
  9968  0993  35F0               	lslf	___aldiv@divisor,f
  9969  0994  0DF1               	rlf	___aldiv@divisor+1,f
  9970  0995  0DF2               	rlf	___aldiv@divisor+2,f
  9971  0996  0DF3               	rlf	___aldiv@divisor+3,f
  9972  0997  0B89               	decfsz	9,f
  9973  0998  2993               	goto	u2695
  9974  0999  3001               	movlw	1
  9975  099A  00F8               	movwf	??___aldiv
  9976  099B  0878               	movf	??___aldiv,w
  9977  099C  07A0               	addwf	___aldiv@counter,f
  9978  099D  2990               	goto	l2642
  9979  099E                     l2644:	
  9980  099E  3001               	movlw	1
  9981  099F                     u2715:	
  9982  099F  35A2               	lslf	___aldiv@quotient,f
  9983  09A0  0DA3               	rlf	___aldiv@quotient+1,f
  9984  09A1  0DA4               	rlf	___aldiv@quotient+2,f
  9985  09A2  0DA5               	rlf	___aldiv@quotient+3,f
  9986  09A3  0B89               	decfsz	9,f
  9987  09A4  299F               	goto	u2715
  9988  09A5  0873               	movf	___aldiv@divisor+3,w
  9989  09A6  0277               	subwf	___aldiv@dividend+3,w
  9990  09A7  1D03               	skipz
  9991  09A8  29B3               	goto	u2725
  9992  09A9  0872               	movf	___aldiv@divisor+2,w
  9993  09AA  0276               	subwf	___aldiv@dividend+2,w
  9994  09AB  1D03               	skipz
  9995  09AC  29B3               	goto	u2725
  9996  09AD  0871               	movf	___aldiv@divisor+1,w
  9997  09AE  0275               	subwf	___aldiv@dividend+1,w
  9998  09AF  1D03               	skipz
  9999  09B0  29B3               	goto	u2725
 10000  09B1  0870               	movf	___aldiv@divisor,w
 10001  09B2  0274               	subwf	___aldiv@dividend,w
 10002  09B3                     u2725:	
 10003  09B3  1C03               	skipc
 10004  09B4  29BE               	goto	l2652
 10005  09B5  0870               	movf	___aldiv@divisor,w
 10006  09B6  02F4               	subwf	___aldiv@dividend,f
 10007  09B7  0871               	movf	___aldiv@divisor+1,w
 10008  09B8  3BF5               	subwfb	___aldiv@dividend+1,f
 10009  09B9  0872               	movf	___aldiv@divisor+2,w
 10010  09BA  3BF6               	subwfb	___aldiv@dividend+2,f
 10011  09BB  0873               	movf	___aldiv@divisor+3,w
 10012  09BC  3BF7               	subwfb	___aldiv@dividend+3,f
 10013  09BD  1422               	bsf	___aldiv@quotient,0
 10014  09BE                     l2652:	
 10015  09BE  3001               	movlw	1
 10016  09BF                     u2735:	
 10017  09BF  36F3               	lsrf	___aldiv@divisor+3,f
 10018  09C0  0CF2               	rrf	___aldiv@divisor+2,f
 10019  09C1  0CF1               	rrf	___aldiv@divisor+1,f
 10020  09C2  0CF0               	rrf	___aldiv@divisor,f
 10021  09C3  0B89               	decfsz	9,f
 10022  09C4  29BF               	goto	u2735
 10023  09C5  3001               	movlw	1
 10024  09C6  02A0               	subwf	___aldiv@counter,f
 10025  09C7  1D03               	btfss	3,2
 10026  09C8  299E               	goto	l2644
 10027  09C9                     l2656:	
 10028  09C9  0821               	movf	___aldiv@sign,w
 10029  09CA  1903               	btfsc	3,2
 10030  09CB  29D7               	goto	l2660
 10031  09CC  09A2               	comf	___aldiv@quotient,f
 10032  09CD  09A3               	comf	___aldiv@quotient+1,f
 10033  09CE  09A4               	comf	___aldiv@quotient+2,f
 10034  09CF  09A5               	comf	___aldiv@quotient+3,f
 10035  09D0  0AA2               	incf	___aldiv@quotient,f
 10036  09D1  1903               	skipnz
 10037  09D2  0AA3               	incf	___aldiv@quotient+1,f
 10038  09D3  1903               	skipnz
 10039  09D4  0AA4               	incf	___aldiv@quotient+2,f
 10040  09D5  1903               	skipnz
 10041  09D6  0AA5               	incf	___aldiv@quotient+3,f
 10042  09D7                     l2660:	
 10043  09D7  0825               	movf	___aldiv@quotient+3,w
 10044  09D8  00F3               	movwf	?___aldiv+3
 10045  09D9  0824               	movf	___aldiv@quotient+2,w
 10046  09DA  00F2               	movwf	?___aldiv+2
 10047  09DB  0823               	movf	___aldiv@quotient+1,w
 10048  09DC  00F1               	movwf	?___aldiv+1
 10049  09DD  0822               	movf	___aldiv@quotient,w
 10050  09DE  00F0               	movwf	?___aldiv
 10051  09DF  0008               	return
 10052  09E0                     __end_of___aldiv:	
 10053                           
 10054                           	psect	text11
 10055  177E                     __ptext11:	
 10056 ;; *************** function _readButton *****************
 10057 ;; Defined at:
 10058 ;;		line 9 in file "buttons.c"
 10059 ;; Parameters:    Size  Location     Type
 10060 ;;		None
 10061 ;; Auto vars:     Size  Location     Type
 10062 ;;		None
 10063 ;; Return value:  Size  Location     Type
 10064 ;;                  1    wreg      unsigned char 
 10065 ;; Registers used:
 10066 ;;		wreg, status,2, status,0, pclath, cstack
 10067 ;; Tracked objects:
 10068 ;;		On entry : 0/0
 10069 ;;		On exit  : 0/0
 10070 ;;		Unchanged: 0/0
 10071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10074 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10075 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10076 ;;Total ram usage:        2 bytes
 10077 ;; Hardware stack levels used:    1
 10078 ;; Hardware stack levels required when called:    1
 10079 ;; This function calls:
 10080 ;;		_ADCRead
 10081 ;; This function is called by:
 10082 ;;		_main
 10083 ;; This function uses a non-reentrant model
 10084 ;;
 10085                           
 10086                           
 10087                           ;psect for function _readButton
 10088  177E                     _readButton:	
 10089                           
 10090                           ;buttons.c: 11: readButtons = ADCRead(11);
 10091                           
 10092                           ;incstack = 0
 10093                           ; Regs used in _readButton: [wreg+status,2+status,0+pclath+cstack]
 10094  177E  300B               	movlw	11
 10095  177F  3193  2309  3197   	fcall	_ADCRead
 10096  1782  0871               	movf	?_ADCRead+1,w
 10097  1783  0020               	movlb	0	; select bank0
 10098  1784  00EB               	movwf	_readButtons+1
 10099  1785  0870               	movf	?_ADCRead,w
 10100  1786  00EA               	movwf	_readButtons
 10101                           
 10102                           ;buttons.c: 13: if(readButtons >= 425 && readButtons < 485)
 10103  1787  086B               	movf	_readButtons+1,w
 10104  1788  3A80               	xorlw	128
 10105  1789  00F4               	movwf	??_readButton
 10106  178A  3081               	movlw	129
 10107  178B  0274               	subwf	??_readButton,w
 10108  178C  1D03               	skipz
 10109  178D  2F90               	goto	u3385
 10110  178E  30A9               	movlw	169
 10111  178F  026A               	subwf	_readButtons,w
 10112  1790                     u3385:	
 10113  1790  1C03               	skipc
 10114  1791  2FA2               	goto	l2918
 10115  1792  0020               	movlb	0	; select bank0
 10116  1793  086B               	movf	_readButtons+1,w
 10117  1794  3A80               	xorlw	128
 10118  1795  00F4               	movwf	??_readButton
 10119  1796  3081               	movlw	129
 10120  1797  0274               	subwf	??_readButton,w
 10121  1798  1D03               	skipz
 10122  1799  2F9C               	goto	u3395
 10123  179A  30E5               	movlw	229
 10124  179B  026A               	subwf	_readButtons,w
 10125  179C                     u3395:	
 10126  179C  1803               	skipnc
 10127  179D  2FA2               	goto	l2918
 10128                           
 10129                           ;buttons.c: 14: {
 10130                           ;buttons.c: 15: button = 1;
 10131  179E  0020               	movlb	0	; select bank0
 10132  179F  01EE               	clrf	_button
 10133  17A0  0AEE               	incf	_button,f
 10134                           
 10135                           ;buttons.c: 16: }
 10136  17A1  2FD0               	goto	l2930
 10137  17A2                     l2918:	
 10138                           
 10139                           ;buttons.c: 18: else if(readButtons >= 615 && readButtons < 690)
 10140  17A2  0020               	movlb	0	; select bank0
 10141  17A3  086B               	movf	_readButtons+1,w
 10142  17A4  3A80               	xorlw	128
 10143  17A5  00F4               	movwf	??_readButton
 10144  17A6  3082               	movlw	130
 10145  17A7  0274               	subwf	??_readButton,w
 10146  17A8  1D03               	skipz
 10147  17A9  2FAC               	goto	u3405
 10148  17AA  3067               	movlw	103
 10149  17AB  026A               	subwf	_readButtons,w
 10150  17AC                     u3405:	
 10151  17AC  1C03               	skipc
 10152  17AD  2FBC               	goto	l2924
 10153  17AE  0020               	movlb	0	; select bank0
 10154  17AF  086B               	movf	_readButtons+1,w
 10155  17B0  3A80               	xorlw	128
 10156  17B1  00F4               	movwf	??_readButton
 10157  17B2  3082               	movlw	130
 10158  17B3  0274               	subwf	??_readButton,w
 10159  17B4  1D03               	skipz
 10160  17B5  2FB8               	goto	u3415
 10161  17B6  30B2               	movlw	178
 10162  17B7  026A               	subwf	_readButtons,w
 10163  17B8                     u3415:	
 10164  17B8  1803               	skipnc
 10165  17B9  2FBC               	goto	l2924
 10166                           
 10167                           ;buttons.c: 19: {
 10168                           ;buttons.c: 20: button = 2;
 10169  17BA  3002               	movlw	2
 10170  17BB  2FC9               	goto	L6
 10171  17BC                     l2924:	
 10172                           ;buttons.c: 21: }
 10173                           
 10174                           
 10175                           ;buttons.c: 23: else if(readButtons > 800)
 10176  17BC  0020               	movlb	0	; select bank0
 10177  17BD  086B               	movf	_readButtons+1,w
 10178  17BE  3A80               	xorlw	128
 10179  17BF  00F4               	movwf	??_readButton
 10180  17C0  3083               	movlw	131
 10181  17C1  0274               	subwf	??_readButton,w
 10182  17C2  1D03               	skipz
 10183  17C3  2FC6               	goto	u3425
 10184  17C4  3021               	movlw	33
 10185  17C5  026A               	subwf	_readButtons,w
 10186  17C6                     u3425:	
 10187  17C6  1C03               	skipc
 10188  17C7  2FCE               	goto	l2928
 10189                           
 10190                           ;buttons.c: 24: {
 10191                           ;buttons.c: 25: button = 3;
 10192  17C8  3003               	movlw	3
 10193  17C9                     L6:	
 10194  17C9  00F4               	movwf	??_readButton
 10195  17CA  0874               	movf	??_readButton,w
 10196  17CB  0020               	movlb	0	; select bank0
 10197  17CC  00EE               	movwf	_button
 10198                           
 10199                           ;buttons.c: 26: }
 10200  17CD  2FD0               	goto	l2930
 10201  17CE                     l2928:	
 10202                           
 10203                           ;buttons.c: 28: else
 10204                           ;buttons.c: 29: {
 10205                           ;buttons.c: 30: button = 0;
 10206  17CE  0020               	movlb	0	; select bank0
 10207  17CF  01EE               	clrf	_button
 10208  17D0                     l2930:	
 10209                           
 10210                           ;buttons.c: 31: }
 10211                           ;buttons.c: 33: if (button != 0)
 10212  17D0  086E               	movf	_button,w
 10213  17D1  1903               	btfsc	3,2
 10214  17D2  2FFD               	goto	l2950
 10215                           
 10216                           ;buttons.c: 34: {
 10217                           ;buttons.c: 35: if (button != lastButton)
 10218  17D3  086E               	movf	_button,w
 10219  17D4  066D               	xorwf	_lastButton,w
 10220  17D5  1903               	skipnz
 10221  17D6  2FDC               	goto	l2938
 10222                           
 10223                           ;buttons.c: 36: {
 10224                           ;buttons.c: 37: lastButton = button;
 10225  17D7  086E               	movf	_button,w
 10226  17D8  00F4               	movwf	??_readButton
 10227  17D9  0874               	movf	??_readButton,w
 10228  17DA  00ED               	movwf	_lastButton
 10229  17DB  2FFD               	goto	l2950
 10230  17DC                     l2938:	
 10231                           ;buttons.c: 39: }
 10232                           
 10233                           ;buttons.c: 38: j = 0;
 10234                           
 10235                           
 10236                           ;buttons.c: 40: else
 10237                           ;buttons.c: 41: {
 10238                           ;buttons.c: 42: j += 1;
 10239  17DC  3001               	movlw	1
 10240  17DD  00F4               	movwf	??_readButton
 10241  17DE  0874               	movf	??_readButton,w
 10242  17DF  07EC               	addwf	_j,f
 10243                           
 10244                           ;buttons.c: 44: if(j == 1)
 10245  17E0  036C               	decf	_j,w
 10246  17E1  1D03               	btfss	3,2
 10247  17E2  2FE5               	goto	l2944
 10248                           
 10249                           ;buttons.c: 45: {
 10250                           ;buttons.c: 46: return (lastButton);
 10251  17E3  086D               	movf	_lastButton,w
 10252  17E4  0008               	return
 10253  17E5                     l2944:	
 10254                           
 10255                           ;buttons.c: 47: }
 10256                           ;buttons.c: 49: if (j >10)
 10257  17E5  086C               	movf	_j,w
 10258  17E6  3A80               	xorlw	128
 10259  17E7  3E75               	addlw	-139
 10260  17E8  1C03               	skipc
 10261  17E9  2FFE               	goto	l2952
 10262                           
 10263                           ;buttons.c: 50: {
 10264                           ;buttons.c: 51: _delay((unsigned long)((25)*(32000000/4000.0)));
 10265  17EA  3002               	movlw	2
 10266  17EB  00F5               	movwf	??_readButton+1
 10267  17EC  3004               	movlw	4
 10268  17ED  00F4               	movwf	??_readButton
 10269  17EE  30BA               	movlw	186
 10270  17EF                     u3947:	
 10271  17EF  0B89               	decfsz	9,f
 10272  17F0  2FEF               	goto	u3947
 10273  17F1  0BF4               	decfsz	??_readButton,f
 10274  17F2  2FEF               	goto	u3947
 10275  17F3  0BF5               	decfsz	??_readButton+1,f
 10276  17F4  2FEF               	goto	u3947
 10277  17F5  3200               	nop2
 10278                           
 10279                           ;buttons.c: 52: j = 10;
 10280  17F6  300A               	movlw	10
 10281  17F7  00F4               	movwf	??_readButton
 10282  17F8  0874               	movf	??_readButton,w
 10283  17F9  0020               	movlb	0	; select bank0
 10284  17FA  00EC               	movwf	_j
 10285                           
 10286                           ;buttons.c: 53: return (lastButton);
 10287  17FB  086D               	movf	_lastButton,w
 10288  17FC  0008               	return
 10289  17FD                     l2950:	
 10290                           ;buttons.c: 54: }
 10291                           ;buttons.c: 55: }
 10292                           ;buttons.c: 56: goto end;
 10293                           
 10294                           
 10295                           ;buttons.c: 57: }
 10296                           ;buttons.c: 59: j = 0;
 10297  17FD  01EC               	clrf	_j
 10298  17FE                     l2952:	
 10299                           ;buttons.c: 61: end:
 10300                           
 10301                           
 10302                           ;buttons.c: 63: return (0);
 10303  17FE  3000               	movlw	0
 10304  17FF  0008               	return
 10305  1800                     __end_of_readButton:	
 10306                           
 10307                           	psect	text12
 10308  1309                     __ptext12:	
 10309 ;; *************** function _ADCRead *****************
 10310 ;; Defined at:
 10311 ;;		line 21 in file "adc.c"
 10312 ;; Parameters:    Size  Location     Type
 10313 ;;  channel         1    wreg     enum E14259
 10314 ;; Auto vars:     Size  Location     Type
 10315 ;;  channel         1    3[COMMON] enum E14259
 10316 ;; Return value:  Size  Location     Type
 10317 ;;                  2    0[COMMON] int 
 10318 ;; Registers used:
 10319 ;;		wreg
 10320 ;; Tracked objects:
 10321 ;;		On entry : 0/0
 10322 ;;		On exit  : 0/0
 10323 ;;		Unchanged: 0/0
 10324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10325 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10326 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10328 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10329 ;;Total ram usage:        4 bytes
 10330 ;; Hardware stack levels used:    1
 10331 ;; This function calls:
 10332 ;;		Nothing
 10333 ;; This function is called by:
 10334 ;;		_readIAnalog
 10335 ;;		_readButton
 10336 ;;		_main
 10337 ;; This function uses a non-reentrant model
 10338 ;;
 10339                           
 10340                           
 10341                           ;psect for function _ADCRead
 10342  1309                     _ADCRead:	
 10343                           
 10344                           ;incstack = 0
 10345                           ; Regs used in _ADCRead: [wreg]
 10346                           ;ADCRead@channel stored from wreg
 10347  1309  00F3               	movwf	ADCRead@channel
 10348                           
 10349                           ;adc.c: 23: ADPCH = channel_VSS;
 10350  130A  303C               	movlw	60
 10351  130B  0021               	movlb	1	; select bank1
 10352  130C  009E               	movwf	30	;volatile
 10353                           
 10354                           ;adc.c: 25: ADCON0bits.ADON = 1;
 10355  130D  1793               	bsf	19,7	;volatile
 10356                           
 10357                           ;adc.c: 27: ADCON0bits.ADCONT = 0;
 10358  130E  1313               	bcf	19,6	;volatile
 10359                           
 10360                           ;adc.c: 29: ADCON0bits.ADGO = 1;
 10361  130F  1413               	bsf	19,0	;volatile
 10362  1310                     l57:	
 10363                           ;adc.c: 32: {
 10364                           
 10365                           ;adc.c: 31: while(ADCON0bits.ADGO)
 10366                           
 10367  1310  1813               	btfsc	19,0	;volatile
 10368  1311  2B10               	goto	l57
 10369                           
 10370                           ;adc.c: 33: }
 10371                           ;adc.c: 35: ADPCH = channel;
 10372  1312  0873               	movf	ADCRead@channel,w
 10373  1313  009E               	movwf	30	;volatile
 10374                           
 10375                           ;adc.c: 37: ADCON0bits.ADON = 1;
 10376  1314  1793               	bsf	19,7	;volatile
 10377                           
 10378                           ;adc.c: 39: ADCON0bits.ADCONT = 0;
 10379  1315  1313               	bcf	19,6	;volatile
 10380                           
 10381                           ;adc.c: 41: ADCON0bits.ADGO = 1;
 10382  1316  1413               	bsf	19,0	;volatile
 10383  1317                     l60:	
 10384                           ;adc.c: 44: {
 10385                           
 10386                           ;adc.c: 43: while(ADCON0bits.ADGO)
 10387                           
 10388  1317  1813               	btfsc	19,0	;volatile
 10389  1318  2B17               	goto	l60
 10390                           
 10391                           ;adc.c: 45: }
 10392                           ;adc.c: 47: return ((ADRESH<<8)+ADRESL);
 10393  1319  080D               	movf	13,w	;volatile
 10394  131A  00F1               	movwf	?_ADCRead+1
 10395  131B  080C               	movf	12,w	;volatile
 10396  131C  00F0               	movwf	?_ADCRead
 10397  131D  0008               	return
 10398  131E                     __end_of_ADCRead:	
 10399                           
 10400                           	psect	text13
 10401  0D2D                     __ptext13:	
 10402 ;; *************** function _cc_cv_mode *****************
 10403 ;; Defined at:
 10404 ;;		line 97 in file "battery_charger.c"
 10405 ;; Parameters:    Size  Location     Type
 10406 ;;  z               1    wreg     unsigned char 
 10407 ;; Auto vars:     Size  Location     Type
 10408 ;;  z               1    5[COMMON] unsigned char 
 10409 ;; Return value:  Size  Location     Type
 10410 ;;                  1    wreg      void 
 10411 ;; Registers used:
 10412 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10413 ;; Tracked objects:
 10414 ;;		On entry : 0/0
 10415 ;;		On exit  : 0/0
 10416 ;;		Unchanged: 0/0
 10417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10419 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10420 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10421 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10422 ;;Total ram usage:        6 bytes
 10423 ;; Hardware stack levels used:    1
 10424 ;; This function calls:
 10425 ;;		Nothing
 10426 ;; This function is called by:
 10427 ;;		_main
 10428 ;; This function uses a non-reentrant model
 10429 ;;
 10430                           
 10431                           
 10432                           ;psect for function _cc_cv_mode
 10433  0D2D                     _cc_cv_mode:	
 10434                           
 10435                           ;incstack = 0
 10436                           ; Regs used in _cc_cv_mode: [wreg+fsr1l+fsr1h+status,2+status,0]
 10437                           ;cc_cv_mode@z stored from wreg
 10438  0D2D  00F5               	movwf	cc_cv_mode@z
 10439                           
 10440                           ;battery_charger.c: 99: if(voltage[z]>=Vref[z])
 10441  0D2E  3575               	lslf	cc_cv_mode@z,w
 10442  0D2F  3EB8               	addlw	(low (_Vref| 0))& (0+255)
 10443  0D30  0086               	movwf	6
 10444  0D31  0187               	clrf	7
 10445  0D32  3F40               	moviw [0]fsr1
 10446  0D33  00F0               	movwf	??_cc_cv_mode
 10447  0D34  3F41               	moviw [1]fsr1
 10448  0D35  00F1               	movwf	??_cc_cv_mode+1
 10449  0D36  3575               	lslf	cc_cv_mode@z,w
 10450  0D37  3EB0               	addlw	(low (_voltage| 0))& (0+255)
 10451  0D38  0086               	movwf	6
 10452  0D39  0187               	clrf	7
 10453  0D3A  3F40               	moviw [0]fsr1
 10454  0D3B  00F2               	movwf	??_cc_cv_mode+2
 10455  0D3C  3F41               	moviw [1]fsr1
 10456  0D3D  00F3               	movwf	??_cc_cv_mode+3
 10457  0D3E  0873               	movf	??_cc_cv_mode+3,w
 10458  0D3F  3A80               	xorlw	128
 10459  0D40  00F4               	movwf	??_cc_cv_mode+4
 10460  0D41  0871               	movf	??_cc_cv_mode+1,w
 10461  0D42  3A80               	xorlw	128
 10462  0D43  0274               	subwf	??_cc_cv_mode+4,w
 10463  0D44  1D03               	skipz
 10464  0D45  2D48               	goto	u3305
 10465  0D46  0870               	movf	??_cc_cv_mode,w
 10466  0D47  0272               	subwf	??_cc_cv_mode+2,w
 10467  0D48                     u3305:	
 10468  0D48  1C03               	skipc
 10469  0D49  2D76               	goto	l2900
 10470                           
 10471                           ;battery_charger.c: 100: {
 10472                           ;battery_charger.c: 101: if(VHoldMode[z]<10)VHoldMode[z]+=1;
 10473  0D4A  0875               	movf	cc_cv_mode@z,w
 10474  0D4B  3ECA               	addlw	(low (_VHoldMode| 0))& (0+255)
 10475  0D4C  0086               	movwf	6
 10476  0D4D  0187               	clrf	7
 10477  0D4E  0801               	movf	1,w
 10478  0D4F  3A80               	xorlw	128
 10479  0D50  3E76               	addlw	-138
 10480  0D51  1803               	skipnc
 10481  0D52  2D5B               	goto	l127
 10482  0D53  3001               	movlw	1
 10483  0D54  00F0               	movwf	??_cc_cv_mode
 10484  0D55  0875               	movf	cc_cv_mode@z,w
 10485  0D56  3ECA               	addlw	(low (_VHoldMode| 0))& (0+255)
 10486  0D57  0086               	movwf	6
 10487  0D58  0187               	clrf	7
 10488  0D59  0870               	movf	??_cc_cv_mode,w
 10489  0D5A  0781               	addwf	1,f
 10490  0D5B                     l127:	
 10491                           
 10492                           ;battery_charger.c: 103: if(cc_cv[z])
 10493  0D5B  0875               	movf	cc_cv_mode@z,w
 10494  0D5C  3ECC               	addlw	(low (_cc_cv| 0))& (0+255)
 10495  0D5D  0086               	movwf	6
 10496  0D5E  0187               	clrf	7
 10497  0D5F  0801               	movf	1,w
 10498  0D60  1903               	btfsc	3,2
 10499  0D61  2D69               	goto	l2896
 10500                           
 10501                           ;battery_charger.c: 104: {
 10502                           ;battery_charger.c: 105: cc_cv[z]-=1;
 10503  0D62  0875               	movf	cc_cv_mode@z,w
 10504  0D63  3ECC               	addlw	(low (_cc_cv| 0))& (0+255)
 10505  0D64  0086               	movwf	6
 10506  0D65  0187               	clrf	7
 10507  0D66  3001               	movlw	1
 10508  0D67  0281               	subwf	1,f
 10509                           
 10510                           ;battery_charger.c: 106: }
 10511  0D68  2D9D               	goto	l131
 10512  0D69                     l2896:	
 10513                           
 10514                           ;battery_charger.c: 107: else
 10515                           ;battery_charger.c: 108: {
 10516                           ;battery_charger.c: 109: if(Imode[z])
 10517  0D69  0875               	movf	cc_cv_mode@z,w
 10518  0D6A  3ECE               	addlw	(low (_Imode| 0))& (0+255)
 10519  0D6B  0086               	movwf	6
 10520  0D6C  0187               	clrf	7
 10521  0D6D  0801               	movf	1,w
 10522  0D6E  1903               	btfsc	3,2
 10523  0D6F  2D9D               	goto	l131
 10524                           
 10525                           ;battery_charger.c: 110: {
 10526                           ;battery_charger.c: 111: Imode[z]=0;
 10527  0D70  0875               	movf	cc_cv_mode@z,w
 10528  0D71  3ECE               	addlw	(low (_Imode| 0))& (0+255)
 10529  0D72  0086               	movwf	6
 10530  0D73  0187               	clrf	7
 10531  0D74  0181               	clrf	1
 10532                           
 10533                           ;battery_charger.c: 112: }
 10534                           ;battery_charger.c: 113: }
 10535                           ;battery_charger.c: 114: }
 10536  0D75  2D9D               	goto	l131
 10537  0D76                     l2900:	
 10538                           
 10539                           ;battery_charger.c: 115: else
 10540                           ;battery_charger.c: 116: {
 10541                           ;battery_charger.c: 117: VHoldMode[z]-=1;
 10542  0D76  30FF               	movlw	255
 10543  0D77  00F0               	movwf	??_cc_cv_mode
 10544  0D78  0875               	movf	cc_cv_mode@z,w
 10545  0D79  3ECA               	addlw	(low (_VHoldMode| 0))& (0+255)
 10546  0D7A  0086               	movwf	6
 10547  0D7B  0187               	clrf	7
 10548  0D7C  0870               	movf	??_cc_cv_mode,w
 10549  0D7D  0781               	addwf	1,f
 10550                           
 10551                           ;battery_charger.c: 118: if(VHoldMode[z]<(10*-1))
 10552  0D7E  0875               	movf	cc_cv_mode@z,w
 10553  0D7F  3ECA               	addlw	(low (_VHoldMode| 0))& (0+255)
 10554  0D80  0086               	movwf	6
 10555  0D81  0187               	clrf	7
 10556  0D82  0801               	movf	1,w
 10557  0D83  3A80               	xorlw	128
 10558  0D84  3E8A               	addlw	138
 10559  0D85  1803               	skipnc
 10560  0D86  2D9D               	goto	l131
 10561                           
 10562                           ;battery_charger.c: 119: {
 10563                           ;battery_charger.c: 120: Imode[z]=1;
 10564  0D87  0875               	movf	cc_cv_mode@z,w
 10565  0D88  3ECE               	addlw	(low (_Imode| 0))& (0+255)
 10566  0D89  0086               	movwf	6
 10567  0D8A  0187               	clrf	7
 10568  0D8B  0181               	clrf	1
 10569  0D8C  0A81               	incf	1,f
 10570                           
 10571                           ;battery_charger.c: 121: cc_cv[z]=(10*2);
 10572  0D8D  3014               	movlw	20
 10573  0D8E  00F0               	movwf	??_cc_cv_mode
 10574  0D8F  0875               	movf	cc_cv_mode@z,w
 10575  0D90  3ECC               	addlw	(low (_cc_cv| 0))& (0+255)
 10576  0D91  0086               	movwf	6
 10577  0D92  0187               	clrf	7
 10578  0D93  0870               	movf	??_cc_cv_mode,w
 10579  0D94  0081               	movwf	1
 10580                           
 10581                           ;battery_charger.c: 122: VHoldMode[z]=(10*-1);
 10582  0D95  30F6               	movlw	246
 10583  0D96  00F0               	movwf	??_cc_cv_mode
 10584  0D97  0875               	movf	cc_cv_mode@z,w
 10585  0D98  3ECA               	addlw	(low (_VHoldMode| 0))& (0+255)
 10586  0D99  0086               	movwf	6
 10587  0D9A  0187               	clrf	7
 10588  0D9B  0870               	movf	??_cc_cv_mode,w
 10589  0D9C  0081               	movwf	1
 10590  0D9D                     l131:	
 10591                           
 10592                           ;battery_charger.c: 123: }
 10593                           ;battery_charger.c: 124: }
 10594                           ;battery_charger.c: 126: if(current[z]>Iref[z])
 10595  0D9D  3575               	lslf	cc_cv_mode@z,w
 10596  0D9E  3EA8               	addlw	(low (_current| 0))& (0+255)
 10597  0D9F  0086               	movwf	6
 10598  0DA0  0187               	clrf	7
 10599  0DA1  3F40               	moviw [0]fsr1
 10600  0DA2  00F0               	movwf	??_cc_cv_mode
 10601  0DA3  3F41               	moviw [1]fsr1
 10602  0DA4  00F1               	movwf	??_cc_cv_mode+1
 10603  0DA5  3575               	lslf	cc_cv_mode@z,w
 10604  0DA6  3EBC               	addlw	(low (_Iref| 0))& (0+255)
 10605  0DA7  0086               	movwf	6
 10606  0DA8  0187               	clrf	7
 10607  0DA9  3F40               	moviw [0]fsr1
 10608  0DAA  00F2               	movwf	??_cc_cv_mode+2
 10609  0DAB  3F41               	moviw [1]fsr1
 10610  0DAC  00F3               	movwf	??_cc_cv_mode+3
 10611  0DAD  0873               	movf	??_cc_cv_mode+3,w
 10612  0DAE  3A80               	xorlw	128
 10613  0DAF  00F4               	movwf	??_cc_cv_mode+4
 10614  0DB0  0871               	movf	??_cc_cv_mode+1,w
 10615  0DB1  3A80               	xorlw	128
 10616  0DB2  0274               	subwf	??_cc_cv_mode+4,w
 10617  0DB3  1D03               	skipz
 10618  0DB4  2DB7               	goto	u3355
 10619  0DB5  0870               	movf	??_cc_cv_mode,w
 10620  0DB6  0272               	subwf	??_cc_cv_mode+2,w
 10621  0DB7                     u3355:	
 10622  0DB7  1803               	skipnc
 10623  0DB8  0008               	return
 10624                           
 10625                           ;battery_charger.c: 127: {
 10626                           ;battery_charger.c: 128: if(!Imode[z])
 10627  0DB9  0875               	movf	cc_cv_mode@z,w
 10628  0DBA  3ECE               	addlw	(low (_Imode| 0))& (0+255)
 10629  0DBB  0086               	movwf	6
 10630  0DBC  0187               	clrf	7
 10631  0DBD  0801               	movf	1,w
 10632  0DBE  1D03               	btfss	3,2
 10633  0DBF  0008               	return
 10634                           
 10635                           ;battery_charger.c: 129: {
 10636                           ;battery_charger.c: 130: if(batteryState[z]==FLOAT)
 10637  0DC0  0875               	movf	cc_cv_mode@z,w
 10638  0DC1  3ED2               	addlw	(low (_batteryState| 0))& (0+255)
 10639  0DC2  0086               	movwf	6
 10640  0DC3  0187               	clrf	7
 10641  0DC4  3005               	movlw	5
 10642  0DC5  0601               	xorwf	1,w
 10643  0DC6  1D03               	btfss	3,2
 10644  0DC7  0008               	return
 10645                           
 10646                           ;battery_charger.c: 131: {
 10647                           ;battery_charger.c: 132: batteryState[z]=CHARGE;
 10648  0DC8  3004               	movlw	4
 10649  0DC9  00F0               	movwf	??_cc_cv_mode
 10650  0DCA  0875               	movf	cc_cv_mode@z,w
 10651  0DCB  3ED2               	addlw	(low (_batteryState| 0))& (0+255)
 10652  0DCC  0086               	movwf	6
 10653  0DCD  0187               	clrf	7
 10654  0DCE  0870               	movf	??_cc_cv_mode,w
 10655  0DCF  0081               	movwf	1
 10656                           
 10657                           ;battery_charger.c: 133: Vref[z]=1425;
 10658  0DD0  3575               	lslf	cc_cv_mode@z,w
 10659  0DD1  3EB8               	addlw	(low (_Vref| 0))& (0+255)
 10660  0DD2  0086               	movwf	6
 10661  0DD3  0187               	clrf	7
 10662  0DD4  3091               	movlw	145
 10663  0DD5  3FC0               	movwi [0]fsr1
 10664  0DD6  3005               	movlw	5
 10665  0DD7  3FC1               	movwi [1]fsr1
 10666                           
 10667                           ;battery_charger.c: 134: Iref[z]=35;
 10668  0DD8  3575               	lslf	cc_cv_mode@z,w
 10669  0DD9  3EBC               	addlw	(low (_Iref| 0))& (0+255)
 10670  0DDA  0086               	movwf	6
 10671  0DDB  0187               	clrf	7
 10672  0DDC  3023               	movlw	35
 10673  0DDD  3FC0               	movwi [0]fsr1
 10674  0DDE  3000               	movlw	0
 10675  0DDF  3FC1               	movwi [1]fsr1
 10676                           
 10677                           ;battery_charger.c: 135: Imode[z]=1;
 10678  0DE0  0875               	movf	cc_cv_mode@z,w
 10679  0DE1  3ECE               	addlw	(low (_Imode| 0))& (0+255)
 10680  0DE2  0086               	movwf	6
 10681  0DE3  0187               	clrf	7
 10682  0DE4  0181               	clrf	1
 10683  0DE5  0A81               	incf	1,f
 10684                           
 10685                           ;battery_charger.c: 136: cc_cv[z]=10;
 10686  0DE6  300A               	movlw	10
 10687  0DE7  00F0               	movwf	??_cc_cv_mode
 10688  0DE8  0875               	movf	cc_cv_mode@z,w
 10689  0DE9  3ECC               	addlw	(low (_cc_cv| 0))& (0+255)
 10690  0DEA  0086               	movwf	6
 10691  0DEB  0187               	clrf	7
 10692  0DEC  0870               	movf	??_cc_cv_mode,w
 10693  0DED  0081               	movwf	1
 10694  0DEE  0008               	return
 10695  0DEF                     __end_of_cc_cv_mode:	
 10696                           
 10697                           	psect	text14
 10698  1630                     __ptext14:	
 10699 ;; *************** function _calculateCurrent3 *****************
 10700 ;; Defined at:
 10701 ;;		line 408 in file "main.c"
 10702 ;; Parameters:    Size  Location     Type
 10703 ;;		None
 10704 ;; Auto vars:     Size  Location     Type
 10705 ;;		None
 10706 ;; Return value:  Size  Location     Type
 10707 ;;                  1    wreg      void 
 10708 ;; Registers used:
 10709 ;;		wreg, status,2, status,0, pclath, cstack
 10710 ;; Tracked objects:
 10711 ;;		On entry : 0/0
 10712 ;;		On exit  : 0/0
 10713 ;;		Unchanged: 0/0
 10714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10717 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10718 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10719 ;;Total ram usage:        3 bytes
 10720 ;; Hardware stack levels used:    1
 10721 ;; Hardware stack levels required when called:    2
 10722 ;; This function calls:
 10723 ;;		___awtoft
 10724 ;;		___ftdiv
 10725 ;;		___fttol
 10726 ;; This function is called by:
 10727 ;;		_main
 10728 ;; This function uses a non-reentrant model
 10729 ;;
 10730                           
 10731                           
 10732                           ;psect for function _calculateCurrent3
 10733  1630                     _calculateCurrent3:	
 10734                           
 10735                           ;main.c: 410: if(Ianalogs[3]-559<=0)
 10736                           
 10737                           ;incstack = 0
 10738                           ; Regs used in _calculateCurrent3: [wreg+status,2+status,0+pclath+cstack]
 10739  1630  0021               	movlb	1	; select bank1
 10740  1631  0826               	movf	(_Ianalogs^(0+128)+6),w
 10741  1632  3ED1               	addlw	209
 10742  1633  0020               	movlb	0	; select bank0
 10743  1634  00CE               	movwf	??_calculateCurrent3
 10744  1635  30FD               	movlw	253
 10745  1636  0021               	movlb	1	; select bank1
 10746  1637  3D27               	addwfc	((_Ianalogs+1)^(0+128)+6),w
 10747  1638  0020               	movlb	0	; select bank0
 10748  1639  00CF               	movwf	??_calculateCurrent3+1
 10749  163A  084F               	movf	??_calculateCurrent3+1,w
 10750  163B  3A80               	xorlw	128
 10751  163C  00D0               	movwf	??_calculateCurrent3+2
 10752  163D  3080               	movlw	128
 10753  163E  0250               	subwf	??_calculateCurrent3+2,w
 10754  163F  1D03               	skipz
 10755  1640  2E43               	goto	u3625
 10756  1641  3001               	movlw	1
 10757  1642  024E               	subwf	??_calculateCurrent3,w
 10758  1643                     u3625:	
 10759  1643  1803               	skipnc
 10760  1644  2E49               	goto	l3070
 10761                           
 10762                           ;main.c: 411: {
 10763                           ;main.c: 412: current[3]=0;
 10764  1645  0021               	movlb	1	; select bank1
 10765  1646  01AE               	clrf	(_current^(0+128)+6)
 10766  1647  01AF               	clrf	((_current+1)^(0+128)+6)
 10767                           
 10768                           ;main.c: 413: }
 10769  1648  0008               	return
 10770  1649                     l3070:	
 10771                           
 10772                           ;main.c: 414: else
 10773                           ;main.c: 415: {
 10774                           ;main.c: 416: current[3]=(int16_t)((Ianalogs[3]-559)/1.60575);
 10775  1649  0021               	movlb	1	; select bank1
 10776  164A  0826               	movf	(_Ianalogs^(0+128)+6),w
 10777  164B  3ED1               	addlw	209
 10778  164C  00F8               	movwf	___awtoft@c
 10779  164D  30FD               	movlw	253
 10780  164E  3D27               	addwfc	((_Ianalogs+1)^(0+128)+6),w
 10781  164F  00F9               	movwf	___awtoft@c+1
 10782  1650  3193  23A2  3196   	fcall	___awtoft
 10783  1653  0878               	movf	?___awtoft,w
 10784  1654  0020               	movlb	0	; select bank0
 10785  1655  00B3               	movwf	___ftdiv@f1
 10786  1656  0879               	movf	?___awtoft+1,w
 10787  1657  00B4               	movwf	___ftdiv@f1+1
 10788  1658  087A               	movf	?___awtoft+2,w
 10789  1659  00B5               	movwf	___ftdiv@f1+2
 10790  165A  3089               	movlw	137
 10791  165B  00B0               	movwf	___ftdiv@f2
 10792  165C  30CD               	movlw	205
 10793  165D  00B1               	movwf	___ftdiv@f2+1
 10794  165E  303F               	movlw	63
 10795  165F  00B2               	movwf	___ftdiv@f2+2
 10796  1660  318A  2267  3196   	fcall	___ftdiv
 10797  1663  0020               	movlb	0	; select bank0
 10798  1664  0830               	movf	?___ftdiv,w
 10799  1665  00C0               	movwf	___fttol@f1
 10800  1666  0831               	movf	?___ftdiv+1,w
 10801  1667  00C1               	movwf	___fttol@f1+1
 10802  1668  0832               	movf	?___ftdiv+2,w
 10803  1669  00C2               	movwf	___fttol@f1+2
 10804  166A  3189  21E0         	fcall	___fttol
 10805  166C  0020               	movlb	0	; select bank0
 10806  166D  0841               	movf	?___fttol+1,w
 10807  166E  0021               	movlb	1	; select bank1
 10808  166F  00AF               	movwf	((_current+1)^(0+128)+6)
 10809  1670  0020               	movlb	0	; select bank0
 10810  1671  0840               	movf	?___fttol,w
 10811  1672  0021               	movlb	1	; select bank1
 10812  1673  00AE               	movwf	(_current^(0+128)+6)
 10813  1674  0008               	return
 10814  1675                     __end_of_calculateCurrent3:	
 10815                           
 10816                           	psect	text15
 10817  15EB                     __ptext15:	
 10818 ;; *************** function _calculateCurrent2 *****************
 10819 ;; Defined at:
 10820 ;;		line 395 in file "main.c"
 10821 ;; Parameters:    Size  Location     Type
 10822 ;;		None
 10823 ;; Auto vars:     Size  Location     Type
 10824 ;;		None
 10825 ;; Return value:  Size  Location     Type
 10826 ;;                  1    wreg      void 
 10827 ;; Registers used:
 10828 ;;		wreg, status,2, status,0, pclath, cstack
 10829 ;; Tracked objects:
 10830 ;;		On entry : 0/0
 10831 ;;		On exit  : 0/0
 10832 ;;		Unchanged: 0/0
 10833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10836 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10837 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10838 ;;Total ram usage:        3 bytes
 10839 ;; Hardware stack levels used:    1
 10840 ;; Hardware stack levels required when called:    2
 10841 ;; This function calls:
 10842 ;;		___awtoft
 10843 ;;		___ftdiv
 10844 ;;		___fttol
 10845 ;; This function is called by:
 10846 ;;		_main
 10847 ;; This function uses a non-reentrant model
 10848 ;;
 10849                           
 10850                           
 10851                           ;psect for function _calculateCurrent2
 10852  15EB                     _calculateCurrent2:	
 10853                           
 10854                           ;main.c: 397: if(Ianalogs[2]-565<=0)
 10855                           
 10856                           ;incstack = 0
 10857                           ; Regs used in _calculateCurrent2: [wreg+status,2+status,0+pclath+cstack]
 10858  15EB  0021               	movlb	1	; select bank1
 10859  15EC  0824               	movf	(_Ianalogs^(0+128)+4),w
 10860  15ED  3ECB               	addlw	203
 10861  15EE  0020               	movlb	0	; select bank0
 10862  15EF  00CE               	movwf	??_calculateCurrent2
 10863  15F0  30FD               	movlw	253
 10864  15F1  0021               	movlb	1	; select bank1
 10865  15F2  3D25               	addwfc	((_Ianalogs+1)^(0+128)+4),w
 10866  15F3  0020               	movlb	0	; select bank0
 10867  15F4  00CF               	movwf	??_calculateCurrent2+1
 10868  15F5  084F               	movf	??_calculateCurrent2+1,w
 10869  15F6  3A80               	xorlw	128
 10870  15F7  00D0               	movwf	??_calculateCurrent2+2
 10871  15F8  3080               	movlw	128
 10872  15F9  0250               	subwf	??_calculateCurrent2+2,w
 10873  15FA  1D03               	skipz
 10874  15FB  2DFE               	goto	u3615
 10875  15FC  3001               	movlw	1
 10876  15FD  024E               	subwf	??_calculateCurrent2,w
 10877  15FE                     u3615:	
 10878  15FE  1803               	skipnc
 10879  15FF  2E04               	goto	l3064
 10880                           
 10881                           ;main.c: 398: {
 10882                           ;main.c: 399: current[2]=0;
 10883  1600  0021               	movlb	1	; select bank1
 10884  1601  01AC               	clrf	(_current^(0+128)+4)
 10885  1602  01AD               	clrf	((_current+1)^(0+128)+4)
 10886                           
 10887                           ;main.c: 400: }
 10888  1603  0008               	return
 10889  1604                     l3064:	
 10890                           
 10891                           ;main.c: 401: else
 10892                           ;main.c: 402: {
 10893                           ;main.c: 404: current[2]=(int16_t)((Ianalogs[2]-565)/3.05);
 10894  1604  0021               	movlb	1	; select bank1
 10895  1605  0824               	movf	(_Ianalogs^(0+128)+4),w
 10896  1606  3ECB               	addlw	203
 10897  1607  00F8               	movwf	___awtoft@c
 10898  1608  30FD               	movlw	253
 10899  1609  3D25               	addwfc	((_Ianalogs+1)^(0+128)+4),w
 10900  160A  00F9               	movwf	___awtoft@c+1
 10901  160B  3193  23A2  3195   	fcall	___awtoft
 10902  160E  0878               	movf	?___awtoft,w
 10903  160F  0020               	movlb	0	; select bank0
 10904  1610  00B3               	movwf	___ftdiv@f1
 10905  1611  0879               	movf	?___awtoft+1,w
 10906  1612  00B4               	movwf	___ftdiv@f1+1
 10907  1613  087A               	movf	?___awtoft+2,w
 10908  1614  00B5               	movwf	___ftdiv@f1+2
 10909  1615  3033               	movlw	51
 10910  1616  00B0               	movwf	___ftdiv@f2
 10911  1617  3043               	movlw	67
 10912  1618  00B1               	movwf	___ftdiv@f2+1
 10913  1619  3040               	movlw	64
 10914  161A  00B2               	movwf	___ftdiv@f2+2
 10915  161B  318A  2267  3195   	fcall	___ftdiv
 10916  161E  0020               	movlb	0	; select bank0
 10917  161F  0830               	movf	?___ftdiv,w
 10918  1620  00C0               	movwf	___fttol@f1
 10919  1621  0831               	movf	?___ftdiv+1,w
 10920  1622  00C1               	movwf	___fttol@f1+1
 10921  1623  0832               	movf	?___ftdiv+2,w
 10922  1624  00C2               	movwf	___fttol@f1+2
 10923  1625  3189  21E0         	fcall	___fttol
 10924  1627  0020               	movlb	0	; select bank0
 10925  1628  0841               	movf	?___fttol+1,w
 10926  1629  0021               	movlb	1	; select bank1
 10927  162A  00AD               	movwf	((_current+1)^(0+128)+4)
 10928  162B  0020               	movlb	0	; select bank0
 10929  162C  0840               	movf	?___fttol,w
 10930  162D  0021               	movlb	1	; select bank1
 10931  162E  00AC               	movwf	(_current^(0+128)+4)
 10932  162F  0008               	return
 10933  1630                     __end_of_calculateCurrent2:	
 10934                           
 10935                           	psect	text16
 10936  15A6                     __ptext16:	
 10937 ;; *************** function _calculateCurrent1 *****************
 10938 ;; Defined at:
 10939 ;;		line 383 in file "main.c"
 10940 ;; Parameters:    Size  Location     Type
 10941 ;;		None
 10942 ;; Auto vars:     Size  Location     Type
 10943 ;;		None
 10944 ;; Return value:  Size  Location     Type
 10945 ;;                  1    wreg      void 
 10946 ;; Registers used:
 10947 ;;		wreg, status,2, status,0, pclath, cstack
 10948 ;; Tracked objects:
 10949 ;;		On entry : 0/0
 10950 ;;		On exit  : 0/0
 10951 ;;		Unchanged: 0/0
 10952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10955 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10956 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10957 ;;Total ram usage:        3 bytes
 10958 ;; Hardware stack levels used:    1
 10959 ;; Hardware stack levels required when called:    2
 10960 ;; This function calls:
 10961 ;;		___awtoft
 10962 ;;		___ftdiv
 10963 ;;		___fttol
 10964 ;; This function is called by:
 10965 ;;		_main
 10966 ;; This function uses a non-reentrant model
 10967 ;;
 10968                           
 10969                           
 10970                           ;psect for function _calculateCurrent1
 10971  15A6                     _calculateCurrent1:	
 10972                           
 10973                           ;main.c: 385: if(Ianalogs[1]-561<=0)
 10974                           
 10975                           ;incstack = 0
 10976                           ; Regs used in _calculateCurrent1: [wreg+status,2+status,0+pclath+cstack]
 10977  15A6  0021               	movlb	1	; select bank1
 10978  15A7  0822               	movf	(_Ianalogs^(0+128)+2),w
 10979  15A8  3ECF               	addlw	207
 10980  15A9  0020               	movlb	0	; select bank0
 10981  15AA  00CE               	movwf	??_calculateCurrent1
 10982  15AB  30FD               	movlw	253
 10983  15AC  0021               	movlb	1	; select bank1
 10984  15AD  3D23               	addwfc	((_Ianalogs+1)^(0+128)+2),w
 10985  15AE  0020               	movlb	0	; select bank0
 10986  15AF  00CF               	movwf	??_calculateCurrent1+1
 10987  15B0  084F               	movf	??_calculateCurrent1+1,w
 10988  15B1  3A80               	xorlw	128
 10989  15B2  00D0               	movwf	??_calculateCurrent1+2
 10990  15B3  3080               	movlw	128
 10991  15B4  0250               	subwf	??_calculateCurrent1+2,w
 10992  15B5  1D03               	skipz
 10993  15B6  2DB9               	goto	u3605
 10994  15B7  3001               	movlw	1
 10995  15B8  024E               	subwf	??_calculateCurrent1,w
 10996  15B9                     u3605:	
 10997  15B9  1803               	skipnc
 10998  15BA  2DBF               	goto	l3058
 10999                           
 11000                           ;main.c: 386: {
 11001                           ;main.c: 387: current[1]=0;
 11002  15BB  0021               	movlb	1	; select bank1
 11003  15BC  01AA               	clrf	(_current^(0+128)+2)
 11004  15BD  01AB               	clrf	((_current+1)^(0+128)+2)
 11005                           
 11006                           ;main.c: 388: }
 11007  15BE  0008               	return
 11008  15BF                     l3058:	
 11009                           
 11010                           ;main.c: 389: else
 11011                           ;main.c: 390: {
 11012                           ;main.c: 391: current[1]=(int16_t)((Ianalogs[1]-561)/1.99055);
 11013  15BF  0021               	movlb	1	; select bank1
 11014  15C0  0822               	movf	(_Ianalogs^(0+128)+2),w
 11015  15C1  3ECF               	addlw	207
 11016  15C2  00F8               	movwf	___awtoft@c
 11017  15C3  30FD               	movlw	253
 11018  15C4  3D23               	addwfc	((_Ianalogs+1)^(0+128)+2),w
 11019  15C5  00F9               	movwf	___awtoft@c+1
 11020  15C6  3193  23A2  3195   	fcall	___awtoft
 11021  15C9  0878               	movf	?___awtoft,w
 11022  15CA  0020               	movlb	0	; select bank0
 11023  15CB  00B3               	movwf	___ftdiv@f1
 11024  15CC  0879               	movf	?___awtoft+1,w
 11025  15CD  00B4               	movwf	___ftdiv@f1+1
 11026  15CE  087A               	movf	?___awtoft+2,w
 11027  15CF  00B5               	movwf	___ftdiv@f1+2
 11028  15D0  30CA               	movlw	202
 11029  15D1  00B0               	movwf	___ftdiv@f2
 11030  15D2  30FE               	movlw	254
 11031  15D3  00B1               	movwf	___ftdiv@f2+1
 11032  15D4  303F               	movlw	63
 11033  15D5  00B2               	movwf	___ftdiv@f2+2
 11034  15D6  318A  2267  3195   	fcall	___ftdiv
 11035  15D9  0020               	movlb	0	; select bank0
 11036  15DA  0830               	movf	?___ftdiv,w
 11037  15DB  00C0               	movwf	___fttol@f1
 11038  15DC  0831               	movf	?___ftdiv+1,w
 11039  15DD  00C1               	movwf	___fttol@f1+1
 11040  15DE  0832               	movf	?___ftdiv+2,w
 11041  15DF  00C2               	movwf	___fttol@f1+2
 11042  15E0  3189  21E0         	fcall	___fttol
 11043  15E2  0020               	movlb	0	; select bank0
 11044  15E3  0841               	movf	?___fttol+1,w
 11045  15E4  0021               	movlb	1	; select bank1
 11046  15E5  00AB               	movwf	((_current+1)^(0+128)+2)
 11047  15E6  0020               	movlb	0	; select bank0
 11048  15E7  0840               	movf	?___fttol,w
 11049  15E8  0021               	movlb	1	; select bank1
 11050  15E9  00AA               	movwf	(_current^(0+128)+2)
 11051  15EA  0008               	return
 11052  15EB                     __end_of_calculateCurrent1:	
 11053                           
 11054                           	psect	text17
 11055  1561                     __ptext17:	
 11056 ;; *************** function _calculateCurrent0 *****************
 11057 ;; Defined at:
 11058 ;;		line 370 in file "main.c"
 11059 ;; Parameters:    Size  Location     Type
 11060 ;;		None
 11061 ;; Auto vars:     Size  Location     Type
 11062 ;;		None
 11063 ;; Return value:  Size  Location     Type
 11064 ;;                  1    wreg      void 
 11065 ;; Registers used:
 11066 ;;		wreg, status,2, status,0, pclath, cstack
 11067 ;; Tracked objects:
 11068 ;;		On entry : 0/0
 11069 ;;		On exit  : 0/0
 11070 ;;		Unchanged: 0/0
 11071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11074 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11075 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11076 ;;Total ram usage:        3 bytes
 11077 ;; Hardware stack levels used:    1
 11078 ;; Hardware stack levels required when called:    2
 11079 ;; This function calls:
 11080 ;;		___awtoft
 11081 ;;		___ftdiv
 11082 ;;		___fttol
 11083 ;; This function is called by:
 11084 ;;		_main
 11085 ;; This function uses a non-reentrant model
 11086 ;;
 11087                           
 11088                           
 11089                           ;psect for function _calculateCurrent0
 11090  1561                     _calculateCurrent0:	
 11091                           
 11092                           ;main.c: 372: if(Ianalogs[0]-580<=0)
 11093                           
 11094                           ;incstack = 0
 11095                           ; Regs used in _calculateCurrent0: [wreg+status,2+status,0+pclath+cstack]
 11096  1561  0021               	movlb	1	; select bank1
 11097  1562  0820               	movf	_Ianalogs^(0+128),w
 11098  1563  3EBC               	addlw	188
 11099  1564  0020               	movlb	0	; select bank0
 11100  1565  00CE               	movwf	??_calculateCurrent0
 11101  1566  30FD               	movlw	253
 11102  1567  0021               	movlb	1	; select bank1
 11103  1568  3D21               	addwfc	(_Ianalogs+1)^(0+128),w
 11104  1569  0020               	movlb	0	; select bank0
 11105  156A  00CF               	movwf	??_calculateCurrent0+1
 11106  156B  084F               	movf	??_calculateCurrent0+1,w
 11107  156C  3A80               	xorlw	128
 11108  156D  00D0               	movwf	??_calculateCurrent0+2
 11109  156E  3080               	movlw	128
 11110  156F  0250               	subwf	??_calculateCurrent0+2,w
 11111  1570  1D03               	skipz
 11112  1571  2D74               	goto	u3595
 11113  1572  3001               	movlw	1
 11114  1573  024E               	subwf	??_calculateCurrent0,w
 11115  1574                     u3595:	
 11116  1574  1803               	skipnc
 11117  1575  2D7A               	goto	l3052
 11118                           
 11119                           ;main.c: 373: {
 11120                           ;main.c: 374: current[0]=0;
 11121  1576  0021               	movlb	1	; select bank1
 11122  1577  01A8               	clrf	_current^(0+128)
 11123  1578  01A9               	clrf	(_current+1)^(0+128)
 11124                           
 11125                           ;main.c: 375: }
 11126  1579  0008               	return
 11127  157A                     l3052:	
 11128                           
 11129                           ;main.c: 376: else
 11130                           ;main.c: 377: {
 11131                           ;main.c: 379: current[0]=(int16_t)((Ianalogs[0]-580)/3.15);
 11132  157A  0021               	movlb	1	; select bank1
 11133  157B  0820               	movf	_Ianalogs^(0+128),w
 11134  157C  3EBC               	addlw	188
 11135  157D  00F8               	movwf	___awtoft@c
 11136  157E  30FD               	movlw	253
 11137  157F  3D21               	addwfc	(_Ianalogs+1)^(0+128),w
 11138  1580  00F9               	movwf	___awtoft@c+1
 11139  1581  3193  23A2  3195   	fcall	___awtoft
 11140  1584  0878               	movf	?___awtoft,w
 11141  1585  0020               	movlb	0	; select bank0
 11142  1586  00B3               	movwf	___ftdiv@f1
 11143  1587  0879               	movf	?___awtoft+1,w
 11144  1588  00B4               	movwf	___ftdiv@f1+1
 11145  1589  087A               	movf	?___awtoft+2,w
 11146  158A  00B5               	movwf	___ftdiv@f1+2
 11147  158B  309A               	movlw	154
 11148  158C  00B0               	movwf	___ftdiv@f2
 11149  158D  3049               	movlw	73
 11150  158E  00B1               	movwf	___ftdiv@f2+1
 11151  158F  3040               	movlw	64
 11152  1590  00B2               	movwf	___ftdiv@f2+2
 11153  1591  318A  2267  3195   	fcall	___ftdiv
 11154  1594  0020               	movlb	0	; select bank0
 11155  1595  0830               	movf	?___ftdiv,w
 11156  1596  00C0               	movwf	___fttol@f1
 11157  1597  0831               	movf	?___ftdiv+1,w
 11158  1598  00C1               	movwf	___fttol@f1+1
 11159  1599  0832               	movf	?___ftdiv+2,w
 11160  159A  00C2               	movwf	___fttol@f1+2
 11161  159B  3189  21E0         	fcall	___fttol
 11162  159D  0020               	movlb	0	; select bank0
 11163  159E  0841               	movf	?___fttol+1,w
 11164  159F  0021               	movlb	1	; select bank1
 11165  15A0  00A9               	movwf	(_current+1)^(0+128)
 11166  15A1  0020               	movlb	0	; select bank0
 11167  15A2  0840               	movf	?___fttol,w
 11168  15A3  0021               	movlb	1	; select bank1
 11169  15A4  00A8               	movwf	_current^(0+128)
 11170  15A5  0008               	return
 11171  15A6                     __end_of_calculateCurrent0:	
 11172                           
 11173                           	psect	text18
 11174  09E0                     __ptext18:	
 11175 ;; *************** function ___fttol *****************
 11176 ;; Defined at:
 11177 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
 11178 ;; Parameters:    Size  Location     Type
 11179 ;;  f1              3   32[BANK0 ] float 
 11180 ;; Auto vars:     Size  Location     Type
 11181 ;;  lval            4   41[BANK0 ] unsigned long 
 11182 ;;  exp1            1   45[BANK0 ] unsigned char 
 11183 ;;  sign1           1   40[BANK0 ] unsigned char 
 11184 ;; Return value:  Size  Location     Type
 11185 ;;                  4   32[BANK0 ] long 
 11186 ;; Registers used:
 11187 ;;		wreg, status,2, status,0
 11188 ;; Tracked objects:
 11189 ;;		On entry : 0/0
 11190 ;;		On exit  : 0/0
 11191 ;;		Unchanged: 0/0
 11192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11193 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11194 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11195 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11196 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11197 ;;Total ram usage:       14 bytes
 11198 ;; Hardware stack levels used:    1
 11199 ;; This function calls:
 11200 ;;		Nothing
 11201 ;; This function is called by:
 11202 ;;		_tempCalc
 11203 ;;		_main
 11204 ;;		_calculateCurrent0
 11205 ;;		_calculateCurrent1
 11206 ;;		_calculateCurrent2
 11207 ;;		_calculateCurrent3
 11208 ;; This function uses a non-reentrant model
 11209 ;;
 11210                           
 11211                           
 11212                           ;psect for function ___fttol
 11213  09E0                     ___fttol:	
 11214                           
 11215                           ;incstack = 0
 11216                           ; Regs used in ___fttol: [wreg+status,2+status,0]
 11217  09E0  0020               	movlb	0	; select bank0
 11218  09E1  0840               	movf	___fttol@f1,w
 11219  09E2  00C4               	movwf	??___fttol
 11220  09E3  0841               	movf	___fttol@f1+1,w
 11221  09E4  00C5               	movwf	??___fttol+1
 11222  09E5  0842               	movf	___fttol@f1+2,w
 11223  09E6  00C6               	movwf	??___fttol+2
 11224  09E7  1003               	clrc
 11225  09E8  0D45               	rlf	??___fttol+1,w
 11226  09E9  0D46               	rlf	??___fttol+2,w
 11227  09EA  00C7               	movwf	??___fttol+3
 11228  09EB  0847               	movf	??___fttol+3,w
 11229  09EC  00CD               	movwf	___fttol@exp1
 11230  09ED  084D               	movf	___fttol@exp1,w
 11231  09EE  1D03               	btfss	3,2
 11232  09EF  29F9               	goto	l2764
 11233  09F0  3000               	movlw	0
 11234  09F1  00C3               	movwf	?___fttol+3
 11235  09F2  3000               	movlw	0
 11236  09F3  00C2               	movwf	?___fttol+2
 11237  09F4  3000               	movlw	0
 11238  09F5  00C1               	movwf	?___fttol+1
 11239  09F6  3000               	movlw	0
 11240  09F7  00C0               	movwf	?___fttol
 11241  09F8  0008               	return
 11242  09F9                     l2764:	
 11243  09F9  0840               	movf	___fttol@f1,w
 11244  09FA  00C4               	movwf	??___fttol
 11245  09FB  0841               	movf	___fttol@f1+1,w
 11246  09FC  00C5               	movwf	??___fttol+1
 11247  09FD  0842               	movf	___fttol@f1+2,w
 11248  09FE  00C6               	movwf	??___fttol+2
 11249  09FF  3017               	movlw	23
 11250  0A00                     u2965:	
 11251  0A00  36C6               	lsrf	??___fttol+2,f
 11252  0A01  0CC5               	rrf	??___fttol+1,f
 11253  0A02  0CC4               	rrf	??___fttol,f
 11254  0A03  0B89               	decfsz	9,f
 11255  0A04  2A00               	goto	u2965
 11256  0A05  0844               	movf	??___fttol,w
 11257  0A06  00C7               	movwf	??___fttol+3
 11258  0A07  0847               	movf	??___fttol+3,w
 11259  0A08  00C8               	movwf	___fttol@sign1
 11260  0A09  17C1               	bsf	___fttol@f1+1,7
 11261  0A0A  30FF               	movlw	255
 11262  0A0B  05C0               	andwf	___fttol@f1,f
 11263  0A0C  30FF               	movlw	255
 11264  0A0D  05C1               	andwf	___fttol@f1+1,f
 11265  0A0E  3000               	movlw	0
 11266  0A0F  05C2               	andwf	___fttol@f1+2,f
 11267  0A10  0840               	movf	___fttol@f1,w
 11268  0A11  00C9               	movwf	___fttol@lval
 11269  0A12  0841               	movf	___fttol@f1+1,w
 11270  0A13  00CA               	movwf	___fttol@lval+1
 11271  0A14  0842               	movf	___fttol@f1+2,w
 11272  0A15  00CB               	movwf	___fttol@lval+2
 11273  0A16  01CC               	clrf	___fttol@lval+3
 11274  0A17  308E               	movlw	142
 11275  0A18  02CD               	subwf	___fttol@exp1,f
 11276  0A19  1FCD               	btfss	___fttol@exp1,7
 11277  0A1A  2A37               	goto	l2784
 11278  0A1B  084D               	movf	___fttol@exp1,w
 11279  0A1C  3A80               	xorlw	128
 11280  0A1D  3E8F               	addlw	143
 11281  0A1E  1803               	skipnc
 11282  0A1F  2A29               	goto	l2782
 11283  0A20  3000               	movlw	0
 11284  0A21  00C3               	movwf	?___fttol+3
 11285  0A22  3000               	movlw	0
 11286  0A23  00C2               	movwf	?___fttol+2
 11287  0A24  3000               	movlw	0
 11288  0A25  00C1               	movwf	?___fttol+1
 11289  0A26  3000               	movlw	0
 11290  0A27  00C0               	movwf	?___fttol
 11291  0A28  0008               	return
 11292  0A29                     l2782:	
 11293  0A29  3001               	movlw	1
 11294  0A2A                     u2995:	
 11295  0A2A  36CC               	lsrf	___fttol@lval+3,f
 11296  0A2B  0CCB               	rrf	___fttol@lval+2,f
 11297  0A2C  0CCA               	rrf	___fttol@lval+1,f
 11298  0A2D  0CC9               	rrf	___fttol@lval,f
 11299  0A2E  0B89               	decfsz	9,f
 11300  0A2F  2A2A               	goto	u2995
 11301  0A30  3001               	movlw	1
 11302  0A31  00C4               	movwf	??___fttol
 11303  0A32  0844               	movf	??___fttol,w
 11304  0A33  07CD               	addwf	___fttol@exp1,f
 11305  0A34  1903               	btfsc	3,2
 11306  0A35  2A50               	goto	l2792
 11307  0A36  2A29               	goto	l2782
 11308  0A37                     l2784:	
 11309  0A37  3018               	movlw	24
 11310  0A38  024D               	subwf	___fttol@exp1,w
 11311  0A39  1C03               	skipc
 11312  0A3A  2A4D               	goto	l828
 11313  0A3B  3000               	movlw	0
 11314  0A3C  00C3               	movwf	?___fttol+3
 11315  0A3D  3000               	movlw	0
 11316  0A3E  00C2               	movwf	?___fttol+2
 11317  0A3F  3000               	movlw	0
 11318  0A40  00C1               	movwf	?___fttol+1
 11319  0A41  3000               	movlw	0
 11320  0A42  00C0               	movwf	?___fttol
 11321  0A43  0008               	return
 11322  0A44                     l2790:	
 11323  0A44  3001               	movlw	1
 11324  0A45                     u3025:	
 11325  0A45  35C9               	lslf	___fttol@lval,f
 11326  0A46  0DCA               	rlf	___fttol@lval+1,f
 11327  0A47  0DCB               	rlf	___fttol@lval+2,f
 11328  0A48  0DCC               	rlf	___fttol@lval+3,f
 11329  0A49  0B89               	decfsz	9,f
 11330  0A4A  2A45               	goto	u3025
 11331  0A4B  3001               	movlw	1
 11332  0A4C  02CD               	subwf	___fttol@exp1,f
 11333  0A4D                     l828:	
 11334  0A4D  084D               	movf	___fttol@exp1,w
 11335  0A4E  1D03               	btfss	3,2
 11336  0A4F  2A44               	goto	l2790
 11337  0A50                     l2792:	
 11338  0A50  0848               	movf	___fttol@sign1,w
 11339  0A51  1903               	btfsc	3,2
 11340  0A52  2A5E               	goto	l2796
 11341  0A53  09C9               	comf	___fttol@lval,f
 11342  0A54  09CA               	comf	___fttol@lval+1,f
 11343  0A55  09CB               	comf	___fttol@lval+2,f
 11344  0A56  09CC               	comf	___fttol@lval+3,f
 11345  0A57  0AC9               	incf	___fttol@lval,f
 11346  0A58  1903               	skipnz
 11347  0A59  0ACA               	incf	___fttol@lval+1,f
 11348  0A5A  1903               	skipnz
 11349  0A5B  0ACB               	incf	___fttol@lval+2,f
 11350  0A5C  1903               	skipnz
 11351  0A5D  0ACC               	incf	___fttol@lval+3,f
 11352  0A5E                     l2796:	
 11353  0A5E  084C               	movf	___fttol@lval+3,w
 11354  0A5F  00C3               	movwf	?___fttol+3
 11355  0A60  084B               	movf	___fttol@lval+2,w
 11356  0A61  00C2               	movwf	?___fttol+2
 11357  0A62  084A               	movf	___fttol@lval+1,w
 11358  0A63  00C1               	movwf	?___fttol+1
 11359  0A64  0849               	movf	___fttol@lval,w
 11360  0A65  00C0               	movwf	?___fttol
 11361  0A66  0008               	return
 11362  0A67                     __end_of___fttol:	
 11363                           
 11364                           	psect	text19
 11365  0A67                     __ptext19:	
 11366 ;; *************** function ___ftdiv *****************
 11367 ;; Defined at:
 11368 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
 11369 ;; Parameters:    Size  Location     Type
 11370 ;;  f2              3   16[BANK0 ] float 
 11371 ;;  f1              3   19[BANK0 ] float 
 11372 ;; Auto vars:     Size  Location     Type
 11373 ;;  f3              3   27[BANK0 ] float 
 11374 ;;  sign            1   31[BANK0 ] unsigned char 
 11375 ;;  exp             1   30[BANK0 ] unsigned char 
 11376 ;;  cntr            1   26[BANK0 ] unsigned char 
 11377 ;; Return value:  Size  Location     Type
 11378 ;;                  3   16[BANK0 ] float 
 11379 ;; Registers used:
 11380 ;;		wreg, status,2, status,0, pclath, cstack
 11381 ;; Tracked objects:
 11382 ;;		On entry : 0/0
 11383 ;;		On exit  : 0/0
 11384 ;;		Unchanged: 0/0
 11385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11386 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11387 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11388 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11389 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11390 ;;Total ram usage:       16 bytes
 11391 ;; Hardware stack levels used:    1
 11392 ;; Hardware stack levels required when called:    1
 11393 ;; This function calls:
 11394 ;;		___ftpack
 11395 ;; This function is called by:
 11396 ;;		_tempCalc
 11397 ;;		_main
 11398 ;;		_calculateCurrent0
 11399 ;;		_calculateCurrent1
 11400 ;;		_calculateCurrent2
 11401 ;;		_calculateCurrent3
 11402 ;; This function uses a non-reentrant model
 11403 ;;
 11404                           
 11405                           
 11406                           ;psect for function ___ftdiv
 11407  0A67                     ___ftdiv:	
 11408                           
 11409                           ;incstack = 0
 11410                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
 11411  0A67  0020               	movlb	0	; select bank0
 11412  0A68  0833               	movf	___ftdiv@f1,w
 11413  0A69  00B6               	movwf	??___ftdiv
 11414  0A6A  0834               	movf	___ftdiv@f1+1,w
 11415  0A6B  00B7               	movwf	??___ftdiv+1
 11416  0A6C  0835               	movf	___ftdiv@f1+2,w
 11417  0A6D  00B8               	movwf	??___ftdiv+2
 11418  0A6E  1003               	clrc
 11419  0A6F  0D37               	rlf	??___ftdiv+1,w
 11420  0A70  0D38               	rlf	??___ftdiv+2,w
 11421  0A71  00B9               	movwf	??___ftdiv+3
 11422  0A72  0839               	movf	??___ftdiv+3,w
 11423  0A73  00BE               	movwf	___ftdiv@exp
 11424  0A74  083E               	movf	___ftdiv@exp,w
 11425  0A75  1D03               	btfss	3,2
 11426  0A76  2A7E               	goto	l2714
 11427  0A77  3000               	movlw	0
 11428  0A78  00B0               	movwf	?___ftdiv
 11429  0A79  3000               	movlw	0
 11430  0A7A  00B1               	movwf	?___ftdiv+1
 11431  0A7B  3000               	movlw	0
 11432  0A7C  00B2               	movwf	?___ftdiv+2
 11433  0A7D  0008               	return
 11434  0A7E                     l2714:	
 11435  0A7E  0830               	movf	___ftdiv@f2,w
 11436  0A7F  00B6               	movwf	??___ftdiv
 11437  0A80  0831               	movf	___ftdiv@f2+1,w
 11438  0A81  00B7               	movwf	??___ftdiv+1
 11439  0A82  0832               	movf	___ftdiv@f2+2,w
 11440  0A83  00B8               	movwf	??___ftdiv+2
 11441  0A84  1003               	clrc
 11442  0A85  0D37               	rlf	??___ftdiv+1,w
 11443  0A86  0D38               	rlf	??___ftdiv+2,w
 11444  0A87  00B9               	movwf	??___ftdiv+3
 11445  0A88  0839               	movf	??___ftdiv+3,w
 11446  0A89  00BF               	movwf	___ftdiv@sign
 11447  0A8A  083F               	movf	___ftdiv@sign,w
 11448  0A8B  1D03               	btfss	3,2
 11449  0A8C  2A94               	goto	l2720
 11450  0A8D  3000               	movlw	0
 11451  0A8E  00B0               	movwf	?___ftdiv
 11452  0A8F  3000               	movlw	0
 11453  0A90  00B1               	movwf	?___ftdiv+1
 11454  0A91  3000               	movlw	0
 11455  0A92  00B2               	movwf	?___ftdiv+2
 11456  0A93  0008               	return
 11457  0A94                     l2720:	
 11458  0A94  3000               	movlw	0
 11459  0A95  00BB               	movwf	___ftdiv@f3
 11460  0A96  3000               	movlw	0
 11461  0A97  00BC               	movwf	___ftdiv@f3+1
 11462  0A98  3000               	movlw	0
 11463  0A99  00BD               	movwf	___ftdiv@f3+2
 11464  0A9A  3089               	movlw	137
 11465  0A9B  073F               	addwf	___ftdiv@sign,w
 11466  0A9C  00B6               	movwf	??___ftdiv
 11467  0A9D  0836               	movf	??___ftdiv,w
 11468  0A9E  02BE               	subwf	___ftdiv@exp,f
 11469  0A9F  0833               	movf	___ftdiv@f1,w
 11470  0AA0  00B6               	movwf	??___ftdiv
 11471  0AA1  0834               	movf	___ftdiv@f1+1,w
 11472  0AA2  00B7               	movwf	??___ftdiv+1
 11473  0AA3  0835               	movf	___ftdiv@f1+2,w
 11474  0AA4  00B8               	movwf	??___ftdiv+2
 11475  0AA5  3010               	movlw	16
 11476  0AA6                     u2885:	
 11477  0AA6  36B8               	lsrf	??___ftdiv+2,f
 11478  0AA7  0CB7               	rrf	??___ftdiv+1,f
 11479  0AA8  0CB6               	rrf	??___ftdiv,f
 11480  0AA9  0B89               	decfsz	9,f
 11481  0AAA  2AA6               	goto	u2885
 11482  0AAB  0836               	movf	??___ftdiv,w
 11483  0AAC  00B9               	movwf	??___ftdiv+3
 11484  0AAD  0839               	movf	??___ftdiv+3,w
 11485  0AAE  00BF               	movwf	___ftdiv@sign
 11486  0AAF  0830               	movf	___ftdiv@f2,w
 11487  0AB0  00B6               	movwf	??___ftdiv
 11488  0AB1  0831               	movf	___ftdiv@f2+1,w
 11489  0AB2  00B7               	movwf	??___ftdiv+1
 11490  0AB3  0832               	movf	___ftdiv@f2+2,w
 11491  0AB4  00B8               	movwf	??___ftdiv+2
 11492  0AB5  3010               	movlw	16
 11493  0AB6                     u2895:	
 11494  0AB6  36B8               	lsrf	??___ftdiv+2,f
 11495  0AB7  0CB7               	rrf	??___ftdiv+1,f
 11496  0AB8  0CB6               	rrf	??___ftdiv,f
 11497  0AB9  0B89               	decfsz	9,f
 11498  0ABA  2AB6               	goto	u2895
 11499  0ABB  0836               	movf	??___ftdiv,w
 11500  0ABC  00B9               	movwf	??___ftdiv+3
 11501  0ABD  0839               	movf	??___ftdiv+3,w
 11502  0ABE  06BF               	xorwf	___ftdiv@sign,f
 11503  0ABF  3080               	movlw	128
 11504  0AC0  00B6               	movwf	??___ftdiv
 11505  0AC1  0836               	movf	??___ftdiv,w
 11506  0AC2  05BF               	andwf	___ftdiv@sign,f
 11507  0AC3  17B4               	bsf	___ftdiv@f1+1,7
 11508  0AC4  30FF               	movlw	255
 11509  0AC5  05B3               	andwf	___ftdiv@f1,f
 11510  0AC6  30FF               	movlw	255
 11511  0AC7  05B4               	andwf	___ftdiv@f1+1,f
 11512  0AC8  3000               	movlw	0
 11513  0AC9  05B5               	andwf	___ftdiv@f1+2,f
 11514  0ACA  17B1               	bsf	___ftdiv@f2+1,7
 11515  0ACB  30FF               	movlw	255
 11516  0ACC  05B0               	andwf	___ftdiv@f2,f
 11517  0ACD  30FF               	movlw	255
 11518  0ACE  05B1               	andwf	___ftdiv@f2+1,f
 11519  0ACF  3000               	movlw	0
 11520  0AD0  05B2               	andwf	___ftdiv@f2+2,f
 11521  0AD1  3018               	movlw	24
 11522  0AD2  00B6               	movwf	??___ftdiv
 11523  0AD3  0836               	movf	??___ftdiv,w
 11524  0AD4  00BA               	movwf	___ftdiv@cntr
 11525  0AD5                     l2734:	
 11526  0AD5  3001               	movlw	1
 11527  0AD6                     u2905:	
 11528  0AD6  35BB               	lslf	___ftdiv@f3,f
 11529  0AD7  0DBC               	rlf	___ftdiv@f3+1,f
 11530  0AD8  0DBD               	rlf	___ftdiv@f3+2,f
 11531  0AD9  0B89               	decfsz	9,f
 11532  0ADA  2AD6               	goto	u2905
 11533  0ADB  0832               	movf	___ftdiv@f2+2,w
 11534  0ADC  0235               	subwf	___ftdiv@f1+2,w
 11535  0ADD  1D03               	skipz
 11536  0ADE  2AE5               	goto	u2915
 11537  0ADF  0831               	movf	___ftdiv@f2+1,w
 11538  0AE0  0234               	subwf	___ftdiv@f1+1,w
 11539  0AE1  1D03               	skipz
 11540  0AE2  2AE5               	goto	u2915
 11541  0AE3  0830               	movf	___ftdiv@f2,w
 11542  0AE4  0233               	subwf	___ftdiv@f1,w
 11543  0AE5                     u2915:	
 11544  0AE5  1C03               	skipc
 11545  0AE6  2AEE               	goto	l2742
 11546  0AE7  0830               	movf	___ftdiv@f2,w
 11547  0AE8  02B3               	subwf	___ftdiv@f1,f
 11548  0AE9  0831               	movf	___ftdiv@f2+1,w
 11549  0AEA  3BB4               	subwfb	___ftdiv@f1+1,f
 11550  0AEB  0832               	movf	___ftdiv@f2+2,w
 11551  0AEC  3BB5               	subwfb	___ftdiv@f1+2,f
 11552  0AED  143B               	bsf	___ftdiv@f3,0
 11553  0AEE                     l2742:	
 11554  0AEE  3001               	movlw	1
 11555  0AEF                     u2925:	
 11556  0AEF  35B3               	lslf	___ftdiv@f1,f
 11557  0AF0  0DB4               	rlf	___ftdiv@f1+1,f
 11558  0AF1  0DB5               	rlf	___ftdiv@f1+2,f
 11559  0AF2  0B89               	decfsz	9,f
 11560  0AF3  2AEF               	goto	u2925
 11561  0AF4  3001               	movlw	1
 11562  0AF5  02BA               	subwf	___ftdiv@cntr,f
 11563  0AF6  1D03               	btfss	3,2
 11564  0AF7  2AD5               	goto	l2734
 11565  0AF8  083B               	movf	___ftdiv@f3,w
 11566  0AF9  00F0               	movwf	___ftpack@arg
 11567  0AFA  083C               	movf	___ftdiv@f3+1,w
 11568  0AFB  00F1               	movwf	___ftpack@arg+1
 11569  0AFC  083D               	movf	___ftdiv@f3+2,w
 11570  0AFD  00F2               	movwf	___ftpack@arg+2
 11571  0AFE  083E               	movf	___ftdiv@exp,w
 11572  0AFF  00B6               	movwf	??___ftdiv
 11573  0B00  0836               	movf	??___ftdiv,w
 11574  0B01  00F3               	movwf	___ftpack@exp
 11575  0B02  083F               	movf	___ftdiv@sign,w
 11576  0B03  00B7               	movwf	??___ftdiv+1
 11577  0B04  0837               	movf	??___ftdiv+1,w
 11578  0B05  00F4               	movwf	___ftpack@sign
 11579  0B06  3197  271A         	fcall	___ftpack
 11580  0B08  0870               	movf	?___ftpack,w
 11581  0B09  0020               	movlb	0	; select bank0
 11582  0B0A  00B0               	movwf	?___ftdiv
 11583  0B0B  0871               	movf	?___ftpack+1,w
 11584  0B0C  00B1               	movwf	?___ftdiv+1
 11585  0B0D  0872               	movf	?___ftpack+2,w
 11586  0B0E  00B2               	movwf	?___ftdiv+2
 11587  0B0F  0008               	return
 11588  0B10                     __end_of___ftdiv:	
 11589                           
 11590                           	psect	text20
 11591  13A2                     __ptext20:	
 11592 ;; *************** function ___awtoft *****************
 11593 ;; Defined at:
 11594 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
 11595 ;; Parameters:    Size  Location     Type
 11596 ;;  c               2    8[COMMON] int 
 11597 ;; Auto vars:     Size  Location     Type
 11598 ;;  sign            1   13[COMMON] unsigned char 
 11599 ;; Return value:  Size  Location     Type
 11600 ;;                  3    8[COMMON] float 
 11601 ;; Registers used:
 11602 ;;		wreg, status,2, status,0, pclath, cstack
 11603 ;; Tracked objects:
 11604 ;;		On entry : 0/0
 11605 ;;		On exit  : 0/0
 11606 ;;		Unchanged: 0/0
 11607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11608 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11609 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11610 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11611 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11612 ;;Total ram usage:        6 bytes
 11613 ;; Hardware stack levels used:    1
 11614 ;; Hardware stack levels required when called:    1
 11615 ;; This function calls:
 11616 ;;		___ftpack
 11617 ;; This function is called by:
 11618 ;;		_tempCalc
 11619 ;;		_main
 11620 ;;		_calculateCurrent0
 11621 ;;		_calculateCurrent1
 11622 ;;		_calculateCurrent2
 11623 ;;		_calculateCurrent3
 11624 ;;		_log
 11625 ;; This function uses a non-reentrant model
 11626 ;;
 11627                           
 11628                           
 11629                           ;psect for function ___awtoft
 11630  13A2                     ___awtoft:	
 11631                           
 11632                           ;incstack = 0
 11633                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
 11634  13A2  01FD               	clrf	___awtoft@sign
 11635  13A3  1FF9               	btfss	___awtoft@c+1,7
 11636  13A4  2BAC               	goto	l2382
 11637  13A5  09F8               	comf	___awtoft@c,f
 11638  13A6  09F9               	comf	___awtoft@c+1,f
 11639  13A7  0AF8               	incf	___awtoft@c,f
 11640  13A8  1903               	skipnz
 11641  13A9  0AF9               	incf	___awtoft@c+1,f
 11642  13AA  01FD               	clrf	___awtoft@sign
 11643  13AB  0AFD               	incf	___awtoft@sign,f
 11644  13AC                     l2382:	
 11645  13AC  0878               	movf	___awtoft@c,w
 11646  13AD  00F0               	movwf	___ftpack@arg
 11647  13AE  0879               	movf	___awtoft@c+1,w
 11648  13AF  00F1               	movwf	___ftpack@arg+1
 11649  13B0  01F2               	clrf	___ftpack@arg+2
 11650  13B1  308E               	movlw	142
 11651  13B2  00FB               	movwf	??___awtoft
 11652  13B3  087B               	movf	??___awtoft,w
 11653  13B4  00F3               	movwf	___ftpack@exp
 11654  13B5  087D               	movf	___awtoft@sign,w
 11655  13B6  00FC               	movwf	??___awtoft+1
 11656  13B7  087C               	movf	??___awtoft+1,w
 11657  13B8  00F4               	movwf	___ftpack@sign
 11658  13B9  3197  271A         	fcall	___ftpack
 11659  13BB  0870               	movf	?___ftpack,w
 11660  13BC  00F8               	movwf	?___awtoft
 11661  13BD  0871               	movf	?___ftpack+1,w
 11662  13BE  00F9               	movwf	?___awtoft+1
 11663  13BF  0872               	movf	?___ftpack+2,w
 11664  13C0  00FA               	movwf	?___awtoft+2
 11665  13C1  0008               	return
 11666  13C2                     __end_of___awtoft:	
 11667                           
 11668                           	psect	text21
 11669  171A                     __ptext21:	
 11670 ;; *************** function ___ftpack *****************
 11671 ;; Defined at:
 11672 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
 11673 ;; Parameters:    Size  Location     Type
 11674 ;;  arg             3    0[COMMON] unsigned um
 11675 ;;  exp             1    3[COMMON] unsigned char 
 11676 ;;  sign            1    4[COMMON] unsigned char 
 11677 ;; Auto vars:     Size  Location     Type
 11678 ;;		None
 11679 ;; Return value:  Size  Location     Type
 11680 ;;                  3    0[COMMON] float 
 11681 ;; Registers used:
 11682 ;;		wreg, status,2, status,0
 11683 ;; Tracked objects:
 11684 ;;		On entry : 0/0
 11685 ;;		On exit  : 0/0
 11686 ;;		Unchanged: 0/0
 11687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11688 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11690 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11691 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11692 ;;Total ram usage:        8 bytes
 11693 ;; Hardware stack levels used:    1
 11694 ;; This function calls:
 11695 ;;		Nothing
 11696 ;; This function is called by:
 11697 ;;		___awtoft
 11698 ;;		___ftadd
 11699 ;;		___ftdiv
 11700 ;;		___ftmul
 11701 ;; This function uses a non-reentrant model
 11702 ;;
 11703                           
 11704                           
 11705                           ;psect for function ___ftpack
 11706  171A                     ___ftpack:	
 11707                           
 11708                           ;incstack = 0
 11709                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
 11710  171A  0873               	movf	___ftpack@exp,w
 11711  171B  1903               	btfsc	3,2
 11712  171C  2F22               	goto	l2188
 11713  171D  0872               	movf	___ftpack@arg+2,w
 11714  171E  0471               	iorwf	___ftpack@arg+1,w
 11715  171F  0470               	iorwf	___ftpack@arg,w
 11716  1720  1D03               	skipz
 11717  1721  2F33               	goto	l2194
 11718  1722                     l2188:	
 11719  1722  3000               	movlw	0
 11720  1723  00F0               	movwf	?___ftpack
 11721  1724  3000               	movlw	0
 11722  1725  00F1               	movwf	?___ftpack+1
 11723  1726  3000               	movlw	0
 11724  1727  00F2               	movwf	?___ftpack+2
 11725  1728  0008               	return
 11726  1729                     l2192:	
 11727  1729  3001               	movlw	1
 11728  172A  00F5               	movwf	??___ftpack
 11729  172B  0875               	movf	??___ftpack,w
 11730  172C  07F3               	addwf	___ftpack@exp,f
 11731  172D  3001               	movlw	1
 11732  172E                     u1995:	
 11733  172E  36F2               	lsrf	___ftpack@arg+2,f
 11734  172F  0CF1               	rrf	___ftpack@arg+1,f
 11735  1730  0CF0               	rrf	___ftpack@arg,f
 11736  1731  0B89               	decfsz	9,f
 11737  1732  2F2E               	goto	u1995
 11738  1733                     l2194:	
 11739  1733  30FE               	movlw	254
 11740  1734  0572               	andwf	___ftpack@arg+2,w
 11741  1735  1903               	btfsc	3,2
 11742  1736  2F4C               	goto	l737
 11743  1737  2F29               	goto	l2192
 11744  1738                     l2196:	
 11745  1738  3001               	movlw	1
 11746  1739  00F5               	movwf	??___ftpack
 11747  173A  0875               	movf	??___ftpack,w
 11748  173B  07F3               	addwf	___ftpack@exp,f
 11749  173C  3001               	movlw	1
 11750  173D  07F0               	addwf	___ftpack@arg,f
 11751  173E  3000               	movlw	0
 11752  173F  1803               	skipnc
 11753  1740  3001               	movlw	1
 11754  1741  07F1               	addwf	___ftpack@arg+1,f
 11755  1742  3000               	movlw	0
 11756  1743  1803               	skipnc
 11757  1744  3001               	movlw	1
 11758  1745  07F2               	addwf	___ftpack@arg+2,f
 11759  1746  3001               	movlw	1
 11760  1747                     u2015:	
 11761  1747  36F2               	lsrf	___ftpack@arg+2,f
 11762  1748  0CF1               	rrf	___ftpack@arg+1,f
 11763  1749  0CF0               	rrf	___ftpack@arg,f
 11764  174A  0B89               	decfsz	9,f
 11765  174B  2F47               	goto	u2015
 11766  174C                     l737:	
 11767  174C  30FF               	movlw	255
 11768  174D  0572               	andwf	___ftpack@arg+2,w
 11769  174E  1903               	btfsc	3,2
 11770  174F  2F59               	goto	l2204
 11771  1750  2F38               	goto	l2196
 11772  1751                     l2202:	
 11773  1751  3001               	movlw	1
 11774  1752  02F3               	subwf	___ftpack@exp,f
 11775  1753  3001               	movlw	1
 11776  1754                     u2035:	
 11777  1754  35F0               	lslf	___ftpack@arg,f
 11778  1755  0DF1               	rlf	___ftpack@arg+1,f
 11779  1756  0DF2               	rlf	___ftpack@arg+2,f
 11780  1757  0B89               	decfsz	9,f
 11781  1758  2F54               	goto	u2035
 11782  1759                     l2204:	
 11783  1759  1BF1               	btfsc	___ftpack@arg+1,7
 11784  175A  2F5F               	goto	l744
 11785  175B  3002               	movlw	2
 11786  175C  0273               	subwf	___ftpack@exp,w
 11787  175D  1803               	skipnc
 11788  175E  2F51               	goto	l2202
 11789  175F                     l744:	
 11790  175F  1873               	btfsc	___ftpack@exp,0
 11791  1760  2F67               	goto	l745
 11792  1761  30FF               	movlw	255
 11793  1762  05F0               	andwf	___ftpack@arg,f
 11794  1763  307F               	movlw	127
 11795  1764  05F1               	andwf	___ftpack@arg+1,f
 11796  1765  30FF               	movlw	255
 11797  1766  05F2               	andwf	___ftpack@arg+2,f
 11798  1767                     l745:	
 11799  1767  1003               	clrc
 11800  1768  0CF3               	rrf	___ftpack@exp,f
 11801  1769  0873               	movf	___ftpack@exp,w
 11802  176A  00F5               	movwf	??___ftpack
 11803  176B  01F6               	clrf	??___ftpack+1
 11804  176C  01F7               	clrf	??___ftpack+2
 11805  176D  3010               	movlw	16
 11806  176E                     u2075:	
 11807  176E  35F5               	lslf	??___ftpack,f
 11808  176F  0DF6               	rlf	??___ftpack+1,f
 11809  1770  0DF7               	rlf	??___ftpack+2,f
 11810  1771  0B89               	decfsz	9,f
 11811  1772  2F6E               	goto	u2075
 11812  1773  0875               	movf	??___ftpack,w
 11813  1774  04F0               	iorwf	___ftpack@arg,f
 11814  1775  0876               	movf	??___ftpack+1,w
 11815  1776  04F1               	iorwf	___ftpack@arg+1,f
 11816  1777  0877               	movf	??___ftpack+2,w
 11817  1778  04F2               	iorwf	___ftpack@arg+2,f
 11818  1779  0874               	movf	___ftpack@sign,w
 11819  177A  1903               	btfsc	3,2
 11820  177B  0008               	return
 11821  177C  17F2               	bsf	___ftpack@arg+2,7
 11822  177D  0008               	return
 11823  177E                     __end_of___ftpack:	
 11824                           
 11825                           	psect	text22
 11826  1477                     __ptext22:	
 11827 ;; *************** function _SYSTEM_Initialize *****************
 11828 ;; Defined at:
 11829 ;;		line 71 in file "system.c"
 11830 ;; Parameters:    Size  Location     Type
 11831 ;;		None
 11832 ;; Auto vars:     Size  Location     Type
 11833 ;;		None
 11834 ;; Return value:  Size  Location     Type
 11835 ;;                  1    wreg      void 
 11836 ;; Registers used:
 11837 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11838 ;; Tracked objects:
 11839 ;;		On entry : 0/0
 11840 ;;		On exit  : 0/0
 11841 ;;		Unchanged: 0/0
 11842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11845 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11846 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11847 ;;Total ram usage:        2 bytes
 11848 ;; Hardware stack levels used:    1
 11849 ;; Hardware stack levels required when called:    3
 11850 ;; This function calls:
 11851 ;;		_ADC_Initialize
 11852 ;;		_Init_Battery_State_Machine
 11853 ;;		_LCDClear
 11854 ;;		_LCDInit
 11855 ;;		_OSCILLATOR_Initialize
 11856 ;;		_PIN_MANAGER_Initialize
 11857 ;;		_PWM_Initialize
 11858 ;;		_TMR2_Initialize
 11859 ;;		_TMR4_Initialize
 11860 ;; This function is called by:
 11861 ;;		_main
 11862 ;; This function uses a non-reentrant model
 11863 ;;
 11864                           
 11865                           
 11866                           ;psect for function _SYSTEM_Initialize
 11867  1477                     _SYSTEM_Initialize:	
 11868                           
 11869                           ;system.c: 73: PIN_MANAGER_Initialize();
 11870                           
 11871                           ;incstack = 0
 11872                           ; Regs used in _SYSTEM_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11873  1477  3194  2440  3194   	fcall	_PIN_MANAGER_Initialize
 11874                           
 11875                           ;system.c: 74: OSCILLATOR_Initialize();
 11876  147A  3192  229C  3194   	fcall	_OSCILLATOR_Initialize
 11877                           
 11878                           ;system.c: 76: ADC_Initialize();
 11879  147D  3193  2383  3194   	fcall	_ADC_Initialize
 11880                           
 11881                           ;system.c: 77: PWM_Initialize();
 11882  1480  3192  22F4  3194   	fcall	_PWM_Initialize
 11883                           
 11884                           ;system.c: 79: TMR2_Initialize();
 11885  1483  3192  22B1  3194   	fcall	_TMR2_Initialize
 11886                           
 11887                           ;system.c: 80: TMR4_Initialize();
 11888  1486  3192  22BF  3194   	fcall	_TMR4_Initialize
 11889                           
 11890                           ;system.c: 81: Init_Battery_State_Machine(0);
 11891  1489  3000               	movlw	0
 11892  148A  3194  240D  3194   	fcall	_Init_Battery_State_Machine
 11893                           
 11894                           ;system.c: 82: Init_Battery_State_Machine(1);
 11895  148D  3001               	movlw	1
 11896  148E  3194  240D  3194   	fcall	_Init_Battery_State_Machine
 11897                           
 11898                           ;system.c: 83: LCDInit();
 11899  1491  3194  24B0  3194   	fcall	_LCDInit
 11900                           
 11901                           ;system.c: 84: _delay((unsigned long)((200)*(32000000/4000.0)));
 11902  1494  3009               	movlw	9
 11903  1495  00FC               	movwf	??_SYSTEM_Initialize+1
 11904  1496  301E               	movlw	30
 11905  1497  00FB               	movwf	??_SYSTEM_Initialize
 11906  1498  30E4               	movlw	228
 11907  1499                     u3957:	
 11908  1499  0B89               	decfsz	9,f
 11909  149A  2C99               	goto	u3957
 11910  149B  0BFB               	decfsz	??_SYSTEM_Initialize,f
 11911  149C  2C99               	goto	u3957
 11912  149D  0BFC               	decfsz	??_SYSTEM_Initialize+1,f
 11913  149E  2C99               	goto	u3957
 11914  149F  3200               	nop2
 11915                           
 11916                           ;system.c: 85: LCDClear();
 11917  14A0  3193  23E7  3194   	fcall	_LCDClear
 11918                           
 11919                           ;system.c: 86: _delay((unsigned long)((200)*(32000000/4000.0)));
 11920  14A3  3009               	movlw	9
 11921  14A4  00FC               	movwf	??_SYSTEM_Initialize+1
 11922  14A5  301E               	movlw	30
 11923  14A6  00FB               	movwf	??_SYSTEM_Initialize
 11924  14A7  30E4               	movlw	228
 11925  14A8                     u3967:	
 11926  14A8  0B89               	decfsz	9,f
 11927  14A9  2CA8               	goto	u3967
 11928  14AA  0BFB               	decfsz	??_SYSTEM_Initialize,f
 11929  14AB  2CA8               	goto	u3967
 11930  14AC  0BFC               	decfsz	??_SYSTEM_Initialize+1,f
 11931  14AD  2CA8               	goto	u3967
 11932  14AE  3200               	nop2
 11933  14AF  0008               	return
 11934  14B0                     __end_of_SYSTEM_Initialize:	
 11935                           
 11936                           	psect	text23
 11937  12BF                     __ptext23:	
 11938 ;; *************** function _TMR4_Initialize *****************
 11939 ;; Defined at:
 11940 ;;		line 25 in file "tmr.c"
 11941 ;; Parameters:    Size  Location     Type
 11942 ;;		None
 11943 ;; Auto vars:     Size  Location     Type
 11944 ;;		None
 11945 ;; Return value:  Size  Location     Type
 11946 ;;                  1    wreg      void 
 11947 ;; Registers used:
 11948 ;;		wreg, status,2
 11949 ;; Tracked objects:
 11950 ;;		On entry : 0/0
 11951 ;;		On exit  : 0/0
 11952 ;;		Unchanged: 0/0
 11953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11957 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11958 ;;Total ram usage:        0 bytes
 11959 ;; Hardware stack levels used:    1
 11960 ;; This function calls:
 11961 ;;		Nothing
 11962 ;; This function is called by:
 11963 ;;		_SYSTEM_Initialize
 11964 ;; This function uses a non-reentrant model
 11965 ;;
 11966                           
 11967                           
 11968                           ;psect for function _TMR4_Initialize
 11969  12BF                     _TMR4_Initialize:	
 11970                           
 11971                           ;tmr.c: 27: T4CON = 0x00;
 11972                           
 11973                           ;incstack = 0
 11974                           ; Regs used in _TMR4_Initialize: [wreg+status,2]
 11975  12BF  0025               	movlb	5	; select bank5
 11976  12C0  0194               	clrf	20	;volatile
 11977                           
 11978                           ;tmr.c: 29: T4CLKCON = 0x01;
 11979  12C1  3001               	movlw	1
 11980  12C2  0096               	movwf	22	;volatile
 11981                           
 11982                           ;tmr.c: 31: T4HLT = 0x00;
 11983  12C3  0195               	clrf	21	;volatile
 11984                           
 11985                           ;tmr.c: 33: T4RST = 0x00;
 11986  12C4  0197               	clrf	23	;volatile
 11987                           
 11988                           ;tmr.c: 35: T4PR = 0xFE;
 11989  12C5  30FE               	movlw	254
 11990  12C6  0093               	movwf	19	;volatile
 11991                           
 11992                           ;tmr.c: 39: T4TMR = 0x00;
 11993  12C7  0192               	clrf	18	;volatile
 11994                           
 11995                           ;tmr.c: 41: PIR4bits.TMR4IF = 0;
 11996  12C8  002E               	movlb	14	; select bank14
 11997  12C9  1190               	bcf	16,3	;volatile
 11998                           
 11999                           ;tmr.c: 43: T4CONbits.TMR4ON = 1;
 12000  12CA  0025               	movlb	5	; select bank5
 12001  12CB  1794               	bsf	20,7	;volatile
 12002  12CC  0008               	return
 12003  12CD                     __end_of_TMR4_Initialize:	
 12004                           
 12005                           	psect	text24
 12006  12B1                     __ptext24:	
 12007 ;; *************** function _TMR2_Initialize *****************
 12008 ;; Defined at:
 12009 ;;		line 3 in file "tmr.c"
 12010 ;; Parameters:    Size  Location     Type
 12011 ;;		None
 12012 ;; Auto vars:     Size  Location     Type
 12013 ;;		None
 12014 ;; Return value:  Size  Location     Type
 12015 ;;                  1    wreg      void 
 12016 ;; Registers used:
 12017 ;;		wreg, status,2
 12018 ;; Tracked objects:
 12019 ;;		On entry : 0/0
 12020 ;;		On exit  : 0/0
 12021 ;;		Unchanged: 0/0
 12022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12026 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12027 ;;Total ram usage:        0 bytes
 12028 ;; Hardware stack levels used:    1
 12029 ;; This function calls:
 12030 ;;		Nothing
 12031 ;; This function is called by:
 12032 ;;		_SYSTEM_Initialize
 12033 ;; This function uses a non-reentrant model
 12034 ;;
 12035                           
 12036                           
 12037                           ;psect for function _TMR2_Initialize
 12038  12B1                     _TMR2_Initialize:	
 12039                           
 12040                           ;tmr.c: 5: T2CON = 0x00;
 12041                           
 12042                           ;incstack = 0
 12043                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 12044  12B1  0025               	movlb	5	; select bank5
 12045  12B2  018E               	clrf	14	;volatile
 12046                           
 12047                           ;tmr.c: 7: T2CLKCON = 0x01;
 12048  12B3  3001               	movlw	1
 12049  12B4  0090               	movwf	16	;volatile
 12050                           
 12051                           ;tmr.c: 9: T2HLT = 0x00;
 12052  12B5  018F               	clrf	15	;volatile
 12053                           
 12054                           ;tmr.c: 11: T2RST = 0x00;
 12055  12B6  0191               	clrf	17	;volatile
 12056                           
 12057                           ;tmr.c: 13: T2PR = 0xFE;
 12058  12B7  30FE               	movlw	254
 12059  12B8  008D               	movwf	13	;volatile
 12060                           
 12061                           ;tmr.c: 18: T2TMR = 0x00;
 12062  12B9  018C               	clrf	12	;volatile
 12063                           
 12064                           ;tmr.c: 20: PIR4bits.TMR2IF = 0;
 12065  12BA  002E               	movlb	14	; select bank14
 12066  12BB  1090               	bcf	16,1	;volatile
 12067                           
 12068                           ;tmr.c: 22: T2CONbits.TMR2ON = 1;
 12069  12BC  0025               	movlb	5	; select bank5
 12070  12BD  178E               	bsf	14,7	;volatile
 12071  12BE  0008               	return
 12072  12BF                     __end_of_TMR2_Initialize:	
 12073                           
 12074                           	psect	text25
 12075  12F4                     __ptext25:	
 12076 ;; *************** function _PWM_Initialize *****************
 12077 ;; Defined at:
 12078 ;;		line 3 in file "pwm.c"
 12079 ;; Parameters:    Size  Location     Type
 12080 ;;		None
 12081 ;; Auto vars:     Size  Location     Type
 12082 ;;		None
 12083 ;; Return value:  Size  Location     Type
 12084 ;;                  1    wreg      void 
 12085 ;; Registers used:
 12086 ;;		wreg, status,2, status,0
 12087 ;; Tracked objects:
 12088 ;;		On entry : 0/0
 12089 ;;		On exit  : 0/0
 12090 ;;		Unchanged: 0/0
 12091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12095 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12096 ;;Total ram usage:        0 bytes
 12097 ;; Hardware stack levels used:    1
 12098 ;; This function calls:
 12099 ;;		Nothing
 12100 ;; This function is called by:
 12101 ;;		_SYSTEM_Initialize
 12102 ;; This function uses a non-reentrant model
 12103 ;;
 12104                           
 12105                           
 12106                           ;psect for function _PWM_Initialize
 12107  12F4                     _PWM_Initialize:	
 12108                           
 12109                           ;pwm.c: 5: PWM6CON = 0x80;
 12110                           
 12111                           ;incstack = 0
 12112                           ; Regs used in _PWM_Initialize: [wreg+status,2+status,0]
 12113  12F4  3080               	movlw	128
 12114  12F5  0027               	movlb	7	; select bank7
 12115  12F6  008E               	movwf	14	;volatile
 12116                           
 12117                           ;pwm.c: 7: PWM6DCH = 0x00;
 12118  12F7  018D               	clrf	13	;volatile
 12119                           
 12120                           ;pwm.c: 9: PWM6DCL = 0x00;
 12121  12F8  018C               	clrf	12	;volatile
 12122                           
 12123                           ;pwm.c: 11: CCPTMRS1bits.P6TSEL = 0x01;
 12124  12F9  0024               	movlb	4	; select bank4
 12125  12FA  081F               	movf	31,w	;volatile
 12126  12FB  39F3               	andlw	-13
 12127  12FC  3804               	iorlw	4
 12128  12FD  009F               	movwf	31	;volatile
 12129                           
 12130                           ;pwm.c: 14: PWM7CON = 0x80;
 12131  12FE  3080               	movlw	128
 12132  12FF  0027               	movlb	7	; select bank7
 12133  1300  0092               	movwf	18	;volatile
 12134                           
 12135                           ;pwm.c: 16: PWM7DCH = 0x00;
 12136  1301  0191               	clrf	17	;volatile
 12137                           
 12138                           ;pwm.c: 18: PWM7DCL = 0x00;
 12139  1302  0190               	clrf	16	;volatile
 12140                           
 12141                           ;pwm.c: 20: CCPTMRS1bits.P7TSEL = 0x02;
 12142  1303  0024               	movlb	4	; select bank4
 12143  1304  081F               	movf	31,w	;volatile
 12144  1305  39CF               	andlw	-49
 12145  1306  3820               	iorlw	32
 12146  1307  009F               	movwf	31	;volatile
 12147  1308  0008               	return
 12148  1309                     __end_of_PWM_Initialize:	
 12149                           
 12150                           	psect	text26
 12151  1440                     __ptext26:	
 12152 ;; *************** function _PIN_MANAGER_Initialize *****************
 12153 ;; Defined at:
 12154 ;;		line 5 in file "pin_manager.c"
 12155 ;; Parameters:    Size  Location     Type
 12156 ;;		None
 12157 ;; Auto vars:     Size  Location     Type
 12158 ;;  state           1    0[COMMON] char 
 12159 ;; Return value:  Size  Location     Type
 12160 ;;                  1    wreg      void 
 12161 ;; Registers used:
 12162 ;;		wreg, status,2
 12163 ;; Tracked objects:
 12164 ;;		On entry : 0/0
 12165 ;;		On exit  : 0/0
 12166 ;;		Unchanged: 0/0
 12167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12169 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12171 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12172 ;;Total ram usage:        1 bytes
 12173 ;; Hardware stack levels used:    1
 12174 ;; This function calls:
 12175 ;;		Nothing
 12176 ;; This function is called by:
 12177 ;;		_SYSTEM_Initialize
 12178 ;; This function uses a non-reentrant model
 12179 ;;
 12180                           
 12181                           
 12182                           ;psect for function _PIN_MANAGER_Initialize
 12183  1440                     _PIN_MANAGER_Initialize:	
 12184                           
 12185                           ;pin_manager.c: 7: LATA = 0x20;
 12186                           
 12187                           ;incstack = 0
 12188                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 12189  1440  3020               	movlw	32
 12190  1441  0020               	movlb	0	; select bank0
 12191  1442  0096               	movwf	22	;volatile
 12192                           
 12193                           ;pin_manager.c: 8: LATB = 0x00;
 12194  1443  0197               	clrf	23	;volatile
 12195                           
 12196                           ;pin_manager.c: 9: LATC = 0x00;
 12197  1444  0198               	clrf	24	;volatile
 12198                           
 12199                           ;pin_manager.c: 11: WPUA = 0x00;
 12200  1445  003E               	movlb	30	; select bank30
 12201  1446  01B9               	clrf	57	;volatile
 12202                           
 12203                           ;pin_manager.c: 12: WPUB = 0x00;
 12204  1447  01C4               	clrf	68	;volatile
 12205                           
 12206                           ;pin_manager.c: 13: WPUC = 0x00;
 12207  1448  01CF               	clrf	79	;volatile
 12208                           
 12209                           ;pin_manager.c: 14: WPUE = 0x8;
 12210  1449  3008               	movlw	8
 12211  144A  00E5               	movwf	101	;volatile
 12212                           
 12213                           ;pin_manager.c: 16: TRISA = 0x00;
 12214  144B  0020               	movlb	0	; select bank0
 12215  144C  0191               	clrf	17	;volatile
 12216                           
 12217                           ;pin_manager.c: 17: TRISB = 0x0E;
 12218  144D  300E               	movlw	14
 12219  144E  0092               	movwf	18	;volatile
 12220                           
 12221                           ;pin_manager.c: 18: TRISC = 0xFF;
 12222  144F  30FF               	movlw	255
 12223  1450  0093               	movwf	19	;volatile
 12224                           
 12225                           ;pin_manager.c: 20: ANSELA = 0x00;
 12226  1451  003E               	movlb	30	; select bank30
 12227  1452  01B8               	clrf	56	;volatile
 12228                           
 12229                           ;pin_manager.c: 21: ANSELB = 0x0A;
 12230  1453  300A               	movlw	10
 12231  1454  00C3               	movwf	67	;volatile
 12232                           
 12233                           ;pin_manager.c: 22: ANSELC = 0xFF;
 12234  1455  30FF               	movlw	255
 12235  1456  00CE               	movwf	78	;volatile
 12236                           
 12237                           ;pin_manager.c: 25: PIE0bits.IOCIE = 0;
 12238  1457  002E               	movlb	14	; select bank14
 12239  1458  1216               	bcf	22,4	;volatile
 12240                           
 12241                           ;pin_manager.c: 26: int8_t state = GIE;
 12242  1459  3000               	movlw	0
 12243  145A  1B8B               	btfsc	11,7	;volatile
 12244  145B  3001               	movlw	1
 12245  145C  00F0               	movwf	PIN_MANAGER_Initialize@state
 12246                           
 12247                           ;pin_manager.c: 27: GIE = 0;
 12248  145D  138B               	bcf	11,7	;volatile
 12249                           
 12250                           ;pin_manager.c: 28: PPSLOCK = 0x55;
 12251  145E  3055               	movlw	85
 12252  145F  003D               	movlb	29	; select bank29
 12253  1460  008F               	movwf	15	;volsfr
 12254                           
 12255                           ;pin_manager.c: 29: PPSLOCK = 0xAA;
 12256  1461  30AA               	movlw	170
 12257  1462  008F               	movwf	15	;volsfr
 12258                           
 12259                           ;pin_manager.c: 30: PPSLOCKbits.PPSLOCKED = 0x00;
 12260  1463  100F               	bcf	15,0	;volsfr
 12261                           
 12262                           ;pin_manager.c: 32: RA6PPS = 0x0E;
 12263  1464  300E               	movlw	14
 12264  1465  003E               	movlb	30	; select bank30
 12265  1466  0096               	movwf	22	;volatile
 12266                           
 12267                           ;pin_manager.c: 33: RA7PPS = 0x0F;
 12268  1467  300F               	movlw	15
 12269  1468  0097               	movwf	23	;volatile
 12270                           
 12271                           ;pin_manager.c: 34: RB0PPS = 0x09;
 12272  1469  3009               	movlw	9
 12273  146A  0098               	movwf	24	;volatile
 12274                           
 12275                           ;pin_manager.c: 35: PPSLOCK = 0x55;
 12276  146B  3055               	movlw	85
 12277  146C  003D               	movlb	29	; select bank29
 12278  146D  008F               	movwf	15	;volsfr
 12279                           
 12280                           ;pin_manager.c: 36: PPSLOCK = 0xAA;
 12281  146E  30AA               	movlw	170
 12282  146F  008F               	movwf	15	;volsfr
 12283                           
 12284                           ;pin_manager.c: 37: PPSLOCKbits.PPSLOCKED = 0x01;
 12285  1470  140F               	bsf	15,0	;volsfr
 12286                           
 12287                           ;pin_manager.c: 38: GIE = state;
 12288  1471  1C70               	btfss	PIN_MANAGER_Initialize@state,0
 12289  1472  2C75               	goto	u2620
 12290  1473  178B               	bsf	11,7	;volatile
 12291  1474  0008               	return
 12292  1475                     u2620:	
 12293  1475  138B               	bcf	11,7	;volatile
 12294  1476  0008               	return
 12295  1477                     __end_of_PIN_MANAGER_Initialize:	
 12296                           
 12297                           	psect	text27
 12298  129C                     __ptext27:	
 12299 ;; *************** function _OSCILLATOR_Initialize *****************
 12300 ;; Defined at:
 12301 ;;		line 89 in file "system.c"
 12302 ;; Parameters:    Size  Location     Type
 12303 ;;		None
 12304 ;; Auto vars:     Size  Location     Type
 12305 ;;		None
 12306 ;; Return value:  Size  Location     Type
 12307 ;;                  1    wreg      void 
 12308 ;; Registers used:
 12309 ;;		wreg, status,2
 12310 ;; Tracked objects:
 12311 ;;		On entry : 0/0
 12312 ;;		On exit  : 0/0
 12313 ;;		Unchanged: 0/0
 12314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12318 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12319 ;;Total ram usage:        0 bytes
 12320 ;; Hardware stack levels used:    1
 12321 ;; This function calls:
 12322 ;;		Nothing
 12323 ;; This function is called by:
 12324 ;;		_SYSTEM_Initialize
 12325 ;; This function uses a non-reentrant model
 12326 ;;
 12327                           
 12328                           
 12329                           ;psect for function _OSCILLATOR_Initialize
 12330  129C                     _OSCILLATOR_Initialize:	
 12331                           
 12332                           ;system.c: 91: OSCCON1 = 0x60;
 12333                           
 12334                           ;incstack = 0
 12335                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 12336  129C  3060               	movlw	96
 12337  129D  0031               	movlb	17	; select bank17
 12338  129E  008D               	movwf	13	;volatile
 12339                           
 12340                           ;system.c: 92: OSCCON3 = 0x00;
 12341  129F  018F               	clrf	15	;volatile
 12342                           
 12343                           ;system.c: 93: OSCEN = 0x00;
 12344  12A0  0191               	clrf	17	;volatile
 12345                           
 12346                           ;system.c: 94: OSCFRQ = 0x06;
 12347  12A1  3006               	movlw	6
 12348  12A2  0093               	movwf	19	;volatile
 12349                           
 12350                           ;system.c: 95: OSCTUNE = 0x00;
 12351  12A3  0192               	clrf	18	;volatile
 12352  12A4  0008               	return
 12353  12A5                     __end_of_OSCILLATOR_Initialize:	
 12354                           
 12355                           	psect	text28
 12356  14B0                     __ptext28:	
 12357 ;; *************** function _LCDInit *****************
 12358 ;; Defined at:
 12359 ;;		line 247 in file "lcd.c"
 12360 ;; Parameters:    Size  Location     Type
 12361 ;;		None
 12362 ;; Auto vars:     Size  Location     Type
 12363 ;;		None
 12364 ;; Return value:  Size  Location     Type
 12365 ;;                  1    wreg      void 
 12366 ;; Registers used:
 12367 ;;		wreg, status,2, status,0, pclath, cstack
 12368 ;; Tracked objects:
 12369 ;;		On entry : 0/0
 12370 ;;		On exit  : 0/0
 12371 ;;		Unchanged: 0/0
 12372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12375 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12376 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12377 ;;Total ram usage:        1 bytes
 12378 ;; Hardware stack levels used:    1
 12379 ;; Hardware stack levels required when called:    1
 12380 ;; This function calls:
 12381 ;;		_LCDWrite
 12382 ;; This function is called by:
 12383 ;;		_SYSTEM_Initialize
 12384 ;;		_main
 12385 ;; This function uses a non-reentrant model
 12386 ;;
 12387                           
 12388                           
 12389                           ;psect for function _LCDInit
 12390  14B0                     _LCDInit:	
 12391                           
 12392                           ;lcd.c: 249: TRISAbits.TRISA0 = 0;
 12393                           
 12394                           ;incstack = 0
 12395                           ; Regs used in _LCDInit: [wreg+status,2+status,0+pclath+cstack]
 12396  14B0  0020               	movlb	0	; select bank0
 12397  14B1  1011               	bcf	17,0	;volatile
 12398                           
 12399                           ;lcd.c: 250: TRISAbits.TRISA1 = 0;
 12400  14B2  1091               	bcf	17,1	;volatile
 12401                           
 12402                           ;lcd.c: 251: TRISAbits.TRISA2 = 0;
 12403  14B3  1111               	bcf	17,2	;volatile
 12404                           
 12405                           ;lcd.c: 252: TRISAbits.TRISA3 = 0;
 12406  14B4  1191               	bcf	17,3	;volatile
 12407                           
 12408                           ;lcd.c: 253: TRISAbits.TRISA4 = 0;
 12409  14B5  1211               	bcf	17,4	;volatile
 12410                           
 12411                           ;lcd.c: 254: LATAbits.LATA3 = 0;
 12412  14B6  1196               	bcf	22,3	;volatile
 12413                           
 12414                           ;lcd.c: 255: LATAbits.LATA4 = 0;
 12415  14B7  1216               	bcf	22,4	;volatile
 12416                           
 12417                           ;lcd.c: 256: LATAbits.LATA2 = 0;
 12418  14B8  1116               	bcf	22,2	;volatile
 12419                           
 12420                           ;lcd.c: 257: LATAbits.LATA0 = 0;
 12421  14B9  1016               	bcf	22,0	;volatile
 12422                           
 12423                           ;lcd.c: 259: LATAbits.LATA0 = 1;
 12424  14BA  1416               	bsf	22,0	;volatile
 12425                           
 12426                           ;lcd.c: 261: LCDWrite(0, 0x21);
 12427  14BB  3021               	movlw	33
 12428  14BC  00F5               	movwf	??_LCDInit
 12429  14BD  0875               	movf	??_LCDInit,w
 12430  14BE  00F0               	movwf	LCDWrite@data
 12431  14BF  3000               	movlw	0
 12432  14C0  3193  23C2  3194   	fcall	_LCDWrite
 12433                           
 12434                           ;lcd.c: 269: LCDWrite(0, 0XB9);
 12435  14C3  30B9               	movlw	185
 12436  14C4  00F5               	movwf	??_LCDInit
 12437  14C5  0875               	movf	??_LCDInit,w
 12438  14C6  00F0               	movwf	LCDWrite@data
 12439  14C7  3000               	movlw	0
 12440  14C8  3193  23C2  3194   	fcall	_LCDWrite
 12441                           
 12442                           ;lcd.c: 271: LCDWrite(0, 0x04);
 12443  14CB  3004               	movlw	4
 12444  14CC  00F5               	movwf	??_LCDInit
 12445  14CD  0875               	movf	??_LCDInit,w
 12446  14CE  00F0               	movwf	LCDWrite@data
 12447  14CF  3000               	movlw	0
 12448  14D0  3193  23C2  3194   	fcall	_LCDWrite
 12449                           
 12450                           ;lcd.c: 273: LCDWrite(0, 0x14);
 12451  14D3  3014               	movlw	20
 12452  14D4  00F5               	movwf	??_LCDInit
 12453  14D5  0875               	movf	??_LCDInit,w
 12454  14D6  00F0               	movwf	LCDWrite@data
 12455  14D7  3000               	movlw	0
 12456  14D8  3193  23C2  3194   	fcall	_LCDWrite
 12457                           
 12458                           ;lcd.c: 275: LCDWrite(0, 0x20);
 12459  14DB  3020               	movlw	32
 12460  14DC  00F5               	movwf	??_LCDInit
 12461  14DD  0875               	movf	??_LCDInit,w
 12462  14DE  00F0               	movwf	LCDWrite@data
 12463  14DF  3000               	movlw	0
 12464  14E0  3193  23C2  3194   	fcall	_LCDWrite
 12465                           
 12466                           ;lcd.c: 277: LCDWrite(0, 0x0C);
 12467  14E3  300C               	movlw	12
 12468  14E4  00F5               	movwf	??_LCDInit
 12469  14E5  0875               	movf	??_LCDInit,w
 12470  14E6  00F0               	movwf	LCDWrite@data
 12471  14E7  3000               	movlw	0
 12472  14E8  3193  23C2         	fcall	_LCDWrite
 12473  14EA  0008               	return
 12474  14EB                     __end_of_LCDInit:	
 12475                           
 12476                           	psect	text29
 12477  13E7                     __ptext29:	
 12478 ;; *************** function _LCDClear *****************
 12479 ;; Defined at:
 12480 ;;		line 182 in file "lcd.c"
 12481 ;; Parameters:    Size  Location     Type
 12482 ;;		None
 12483 ;; Auto vars:     Size  Location     Type
 12484 ;;  index           2    9[COMMON] int 
 12485 ;; Return value:  Size  Location     Type
 12486 ;;                  1    wreg      void 
 12487 ;; Registers used:
 12488 ;;		wreg, status,2, status,0, pclath, cstack
 12489 ;; Tracked objects:
 12490 ;;		On entry : 0/0
 12491 ;;		On exit  : 0/0
 12492 ;;		Unchanged: 0/0
 12493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12495 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12496 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12497 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12498 ;;Total ram usage:        3 bytes
 12499 ;; Hardware stack levels used:    1
 12500 ;; Hardware stack levels required when called:    2
 12501 ;; This function calls:
 12502 ;;		_LCDWrite
 12503 ;;		_gotoXY
 12504 ;; This function is called by:
 12505 ;;		_SYSTEM_Initialize
 12506 ;;		_main
 12507 ;; This function uses a non-reentrant model
 12508 ;;
 12509                           
 12510                           
 12511                           ;psect for function _LCDClear
 12512  13E7                     _LCDClear:	
 12513                           
 12514                           ;lcd.c: 184: int index;
 12515                           ;lcd.c: 185: for (index = 0 ; index < (84 * 48 / 8) ; index++)
 12516                           
 12517                           ;incstack = 0
 12518                           ; Regs used in _LCDClear: [wreg+status,2+status,0+pclath+cstack]
 12519  13E7  01F9               	clrf	LCDClear@index
 12520  13E8  01FA               	clrf	LCDClear@index+1
 12521  13E9  087A               	movf	LCDClear@index+1,w
 12522  13EA  3A80               	xorlw	128
 12523  13EB  00F8               	movwf	??_LCDClear
 12524  13EC  3081               	movlw	129
 12525  13ED  0278               	subwf	??_LCDClear,w
 12526  13EE  1D03               	skipz
 12527  13EF  2BF2               	goto	u2605
 12528  13F0  30F8               	movlw	248
 12529  13F1  0279               	subwf	LCDClear@index,w
 12530  13F2                     u2605:	
 12531  13F2  1803               	btfsc	3,0
 12532  13F3  2C08               	goto	l2512
 12533  13F4                     l2506:	
 12534                           
 12535                           ;lcd.c: 186: LCDWrite(1, 0x00);
 12536  13F4  01F0               	clrf	LCDWrite@data
 12537  13F5  3001               	movlw	1
 12538  13F6  3193  23C2  3193   	fcall	_LCDWrite
 12539  13F9  3001               	movlw	1
 12540  13FA  07F9               	addwf	LCDClear@index,f
 12541  13FB  3000               	movlw	0
 12542  13FC  3DFA               	addwfc	LCDClear@index+1,f
 12543  13FD  087A               	movf	LCDClear@index+1,w
 12544  13FE  3A80               	xorlw	128
 12545  13FF  00F8               	movwf	??_LCDClear
 12546  1400  3081               	movlw	129
 12547  1401  0278               	subwf	??_LCDClear,w
 12548  1402  1D03               	skipz
 12549  1403  2C06               	goto	u2615
 12550  1404  30F8               	movlw	248
 12551  1405  0279               	subwf	LCDClear@index,w
 12552  1406                     u2615:	
 12553  1406  1C03               	skipc
 12554  1407  2BF4               	goto	l2506
 12555  1408                     l2512:	
 12556                           
 12557                           ;lcd.c: 187: gotoXY(0, 0);
 12558  1408  01F5               	clrf	gotoXY@y
 12559  1409  3000               	movlw	0
 12560  140A  3192  22CD         	fcall	_gotoXY
 12561  140C  0008               	return
 12562  140D                     __end_of_LCDClear:	
 12563                           
 12564                           	psect	text30
 12565  12CD                     __ptext30:	
 12566 ;; *************** function _gotoXY *****************
 12567 ;; Defined at:
 12568 ;;		line 124 in file "lcd.c"
 12569 ;; Parameters:    Size  Location     Type
 12570 ;;  x               1    wreg     unsigned char 
 12571 ;;  y               1    5[COMMON] unsigned char 
 12572 ;; Auto vars:     Size  Location     Type
 12573 ;;  x               1    7[COMMON] unsigned char 
 12574 ;; Return value:  Size  Location     Type
 12575 ;;                  1    wreg      void 
 12576 ;; Registers used:
 12577 ;;		wreg, status,2, status,0, pclath, cstack
 12578 ;; Tracked objects:
 12579 ;;		On entry : 0/0
 12580 ;;		On exit  : 0/0
 12581 ;;		Unchanged: 0/0
 12582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12583 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12584 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12585 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12586 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12587 ;;Total ram usage:        3 bytes
 12588 ;; Hardware stack levels used:    1
 12589 ;; Hardware stack levels required when called:    1
 12590 ;; This function calls:
 12591 ;;		_LCDWrite
 12592 ;; This function is called by:
 12593 ;;		_LCDClear
 12594 ;;		_main
 12595 ;; This function uses a non-reentrant model
 12596 ;;
 12597                           
 12598                           
 12599                           ;psect for function _gotoXY
 12600  12CD                     _gotoXY:	
 12601                           
 12602                           ;incstack = 0
 12603                           ; Regs used in _gotoXY: [wreg+status,2+status,0+pclath+cstack]
 12604                           ;gotoXY@x stored from wreg
 12605  12CD  00F7               	movwf	gotoXY@x
 12606                           
 12607                           ;lcd.c: 126: LCDWrite(0,(uint8_t)(0x80 | x));
 12608  12CE  0877               	movf	gotoXY@x,w
 12609  12CF  3880               	iorlw	128
 12610  12D0  00F6               	movwf	??_gotoXY
 12611  12D1  0876               	movf	??_gotoXY,w
 12612  12D2  00F0               	movwf	LCDWrite@data
 12613  12D3  3000               	movlw	0
 12614  12D4  3193  23C2  3192   	fcall	_LCDWrite
 12615                           
 12616                           ;lcd.c: 127: LCDWrite(0,(uint8_t)(0x40 | y));
 12617  12D7  0875               	movf	gotoXY@y,w
 12618  12D8  3840               	iorlw	64
 12619  12D9  00F6               	movwf	??_gotoXY
 12620  12DA  0876               	movf	??_gotoXY,w
 12621  12DB  00F0               	movwf	LCDWrite@data
 12622  12DC  3000               	movlw	0
 12623  12DD  3193  23C2         	fcall	_LCDWrite
 12624  12DF  0008               	return
 12625  12E0                     __end_of_gotoXY:	
 12626                           
 12627                           	psect	text31
 12628  140D                     __ptext31:	
 12629 ;; *************** function _Init_Battery_State_Machine *****************
 12630 ;; Defined at:
 12631 ;;		line 20 in file "battery_charger.c"
 12632 ;; Parameters:    Size  Location     Type
 12633 ;;  z               1    wreg     unsigned char 
 12634 ;; Auto vars:     Size  Location     Type
 12635 ;;  z               1    1[COMMON] unsigned char 
 12636 ;; Return value:  Size  Location     Type
 12637 ;;                  1    wreg      void 
 12638 ;; Registers used:
 12639 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12640 ;; Tracked objects:
 12641 ;;		On entry : 0/0
 12642 ;;		On exit  : 0/0
 12643 ;;		Unchanged: 0/0
 12644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12646 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12647 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12648 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12649 ;;Total ram usage:        2 bytes
 12650 ;; Hardware stack levels used:    1
 12651 ;; This function calls:
 12652 ;;		Nothing
 12653 ;; This function is called by:
 12654 ;;		_SYSTEM_Initialize
 12655 ;; This function uses a non-reentrant model
 12656 ;;
 12657                           
 12658                           
 12659                           ;psect for function _Init_Battery_State_Machine
 12660  140D                     _Init_Battery_State_Machine:	
 12661                           
 12662                           ;incstack = 0
 12663                           ; Regs used in _Init_Battery_State_Machine: [wreg+fsr1l+fsr1h+status,2+status,0]
 12664                           ;Init_Battery_State_Machine@z stored from wreg
 12665  140D  00F1               	movwf	Init_Battery_State_Machine@z
 12666                           
 12667                           ;battery_charger.c: 22: batteryState[z] = PRECHARGE;
 12668  140E  3003               	movlw	3
 12669  140F  00F0               	movwf	??_Init_Battery_State_Machine
 12670  1410  0871               	movf	Init_Battery_State_Machine@z,w
 12671  1411  3ED2               	addlw	(low (_batteryState| 0))& (0+255)
 12672  1412  0086               	movwf	6
 12673  1413  0187               	clrf	7
 12674  1414  0870               	movf	??_Init_Battery_State_Machine,w
 12675  1415  0081               	movwf	1
 12676                           
 12677                           ;battery_charger.c: 23: stateCounter[z] = 5;
 12678  1416  3571               	lslf	Init_Battery_State_Machine@z,w
 12679  1417  3EC0               	addlw	(low (_stateCounter| 0))& (0+255)
 12680  1418  0086               	movwf	6
 12681  1419  0187               	clrf	7
 12682  141A  3005               	movlw	5
 12683  141B  3FC0               	movwi [0]fsr1
 12684  141C  3000               	movlw	0
 12685  141D  3FC1               	movwi [1]fsr1
 12686                           
 12687                           ;battery_charger.c: 25: Iref[z]=10;
 12688  141E  3571               	lslf	Init_Battery_State_Machine@z,w
 12689  141F  3EBC               	addlw	(low (_Iref| 0))& (0+255)
 12690  1420  0086               	movwf	6
 12691  1421  0187               	clrf	7
 12692  1422  300A               	movlw	10
 12693  1423  3FC0               	movwi [0]fsr1
 12694  1424  3000               	movlw	0
 12695  1425  3FC1               	movwi [1]fsr1
 12696                           
 12697                           ;battery_charger.c: 26: Vref[z]=1425;
 12698  1426  3571               	lslf	Init_Battery_State_Machine@z,w
 12699  1427  3EB8               	addlw	(low (_Vref| 0))& (0+255)
 12700  1428  0086               	movwf	6
 12701  1429  0187               	clrf	7
 12702  142A  3091               	movlw	145
 12703  142B  3FC0               	movwi [0]fsr1
 12704  142C  3005               	movlw	5
 12705  142D  3FC1               	movwi [1]fsr1
 12706                           
 12707                           ;battery_charger.c: 28: Imin[z]=15;
 12708  142E  3571               	lslf	Init_Battery_State_Machine@z,w
 12709  142F  3E3D               	addlw	(low (_Imin| (0+256)))& (0+255)
 12710  1430  0086               	movwf	6
 12711  1431  3001               	movlw	1	; select bank2/3
 12712  1432  0087               	movwf	7
 12713  1433  300F               	movlw	15
 12714  1434  3FC0               	movwi [0]fsr1
 12715  1435  3000               	movlw	0
 12716  1436  3FC1               	movwi [1]fsr1
 12717                           
 12718                           ;battery_charger.c: 29: IminCount[z] = 100;
 12719  1437  3571               	lslf	Init_Battery_State_Machine@z,w
 12720  1438  3EC4               	addlw	(low (_IminCount| 0))& (0+255)
 12721  1439  0086               	movwf	6
 12722  143A  0187               	clrf	7
 12723  143B  3064               	movlw	100
 12724  143C  3FC0               	movwi [0]fsr1
 12725  143D  3000               	movlw	0
 12726  143E  3FC1               	movwi [1]fsr1
 12727  143F  0008               	return
 12728  1440                     __end_of_Init_Battery_State_Machine:	
 12729                           
 12730                           	psect	text32
 12731  1383                     __ptext32:	
 12732 ;; *************** function _ADC_Initialize *****************
 12733 ;; Defined at:
 12734 ;;		line 111 in file "adc.c"
 12735 ;; Parameters:    Size  Location     Type
 12736 ;;		None
 12737 ;; Auto vars:     Size  Location     Type
 12738 ;;		None
 12739 ;; Return value:  Size  Location     Type
 12740 ;;                  1    wreg      void 
 12741 ;; Registers used:
 12742 ;;		wreg, status,2
 12743 ;; Tracked objects:
 12744 ;;		On entry : 0/0
 12745 ;;		On exit  : 0/0
 12746 ;;		Unchanged: 0/0
 12747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12751 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12752 ;;Total ram usage:        0 bytes
 12753 ;; Hardware stack levels used:    1
 12754 ;; This function calls:
 12755 ;;		Nothing
 12756 ;; This function is called by:
 12757 ;;		_SYSTEM_Initialize
 12758 ;; This function uses a non-reentrant model
 12759 ;;
 12760                           
 12761                           
 12762                           ;psect for function _ADC_Initialize
 12763  1383                     _ADC_Initialize:	
 12764                           
 12765                           ;adc.c: 113: ADCON1 = 0x00;
 12766                           
 12767                           ;incstack = 0
 12768                           ; Regs used in _ADC_Initialize: [wreg+status,2]
 12769  1383  0021               	movlb	1	; select bank1
 12770  1384  0194               	clrf	20	;volatile
 12771                           
 12772                           ;adc.c: 115: ADCON2 = 0x00;
 12773  1385  0195               	clrf	21	;volatile
 12774                           
 12775                           ;adc.c: 117: ADCON3 = 0x00;
 12776  1386  0196               	clrf	22	;volatile
 12777                           
 12778                           ;adc.c: 119: ADACT = 0x00;
 12779  1387  0199               	clrf	25	;volatile
 12780                           
 12781                           ;adc.c: 121: ADSTAT = 0x00;
 12782  1388  0197               	clrf	23	;volatile
 12783                           
 12784                           ;adc.c: 123: FVRCON = 0b11000011;
 12785  1389  30C3               	movlw	195
 12786  138A  0032               	movlb	18	; select bank18
 12787  138B  008C               	movwf	12	;volatile
 12788                           
 12789                           ;adc.c: 124: ADCLK = 0x3F;
 12790  138C  303F               	movlw	63
 12791  138D  0021               	movlb	1	; select bank1
 12792  138E  0098               	movwf	24	;volatile
 12793                           
 12794                           ;adc.c: 131: ADREF = 0x03;
 12795  138F  3003               	movlw	3
 12796  1390  009A               	movwf	26	;volatile
 12797                           
 12798                           ;adc.c: 134: ADCAP = 0x00;
 12799  1391  019B               	clrf	27	;volatile
 12800                           
 12801                           ;adc.c: 137: ADPRE = 0x07;
 12802  1392  3007               	movlw	7
 12803  1393  009C               	movwf	28	;volatile
 12804                           
 12805                           ;adc.c: 139: ADACQ = 0x00;
 12806  1394  019D               	clrf	29	;volatile
 12807                           
 12808                           ;adc.c: 141: ADPCH = 0x00;
 12809  1395  019E               	clrf	30	;volatile
 12810                           
 12811                           ;adc.c: 143: ADRPT = 0x00;
 12812  1396  0022               	movlb	2	; select bank2
 12813  1397  018D               	clrf	13	;volatile
 12814                           
 12815                           ;adc.c: 145: ADLTHL = 0x00;
 12816  1398  018E               	clrf	14	;volatile
 12817                           
 12818                           ;adc.c: 147: ADLTHH = 0x00;
 12819  1399  018F               	clrf	15	;volatile
 12820                           
 12821                           ;adc.c: 149: ADUTHL = 0x00;
 12822  139A  0190               	clrf	16	;volatile
 12823                           
 12824                           ;adc.c: 151: ADUTHH = 0x00;
 12825  139B  0191               	clrf	17	;volatile
 12826                           
 12827                           ;adc.c: 153: ADSTPTL = 0x00;
 12828  139C  0192               	clrf	18	;volatile
 12829                           
 12830                           ;adc.c: 155: ADSTPTH = 0x00;
 12831  139D  0193               	clrf	19	;volatile
 12832                           
 12833                           ;adc.c: 157: ADCON0 = 0x84;
 12834  139E  3084               	movlw	132
 12835  139F  0021               	movlb	1	; select bank1
 12836  13A0  0093               	movwf	19	;volatile
 12837  13A1  0008               	return
 12838  13A2                     __end_of_ADC_Initialize:	
 12839                           
 12840                           	psect	text33
 12841  1334                     __ptext33:	
 12842 ;; *************** function _PWM7_LoadDutyValue *****************
 12843 ;; Defined at:
 12844 ;;		line 37 in file "pwm.c"
 12845 ;; Parameters:    Size  Location     Type
 12846 ;;  dutyCycle7      2    0[COMMON] unsigned int 
 12847 ;; Auto vars:     Size  Location     Type
 12848 ;;		None
 12849 ;; Return value:  Size  Location     Type
 12850 ;;                  1    wreg      void 
 12851 ;; Registers used:
 12852 ;;		wreg, status,2, status,0
 12853 ;; Tracked objects:
 12854 ;;		On entry : 0/0
 12855 ;;		On exit  : 0/0
 12856 ;;		Unchanged: 0/0
 12857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12858 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12860 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12861 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12862 ;;Total ram usage:        4 bytes
 12863 ;; Hardware stack levels used:    1
 12864 ;; This function calls:
 12865 ;;		Nothing
 12866 ;; This function is called by:
 12867 ;;		_main
 12868 ;; This function uses a non-reentrant model
 12869 ;;
 12870                           
 12871                           
 12872                           ;psect for function _PWM7_LoadDutyValue
 12873  1334                     _PWM7_LoadDutyValue:	
 12874                           
 12875                           ;pwm.c: 39: PWM7DCH = (dutyCycle7 & 0x03FC)>>2;
 12876                           
 12877                           ;incstack = 0
 12878                           ; Regs used in _PWM7_LoadDutyValue: [wreg+status,2+status,0]
 12879  1334  0871               	movf	PWM7_LoadDutyValue@dutyCycle7+1,w
 12880  1335  00F3               	movwf	??_PWM7_LoadDutyValue+1
 12881  1336  0870               	movf	PWM7_LoadDutyValue@dutyCycle7,w
 12882  1337  00F2               	movwf	??_PWM7_LoadDutyValue
 12883  1338  36F3               	lsrf	??_PWM7_LoadDutyValue+1,f
 12884  1339  0CF2               	rrf	??_PWM7_LoadDutyValue,f
 12885  133A  36F3               	lsrf	??_PWM7_LoadDutyValue+1,f
 12886  133B  0CF2               	rrf	??_PWM7_LoadDutyValue,f
 12887  133C  0872               	movf	??_PWM7_LoadDutyValue,w
 12888  133D  0027               	movlb	7	; select bank7
 12889  133E  0091               	movwf	17	;volatile
 12890                           
 12891                           ;pwm.c: 41: PWM7DCL = (dutyCycle7 & 0x0003)<<6;
 12892  133F  0870               	movf	PWM7_LoadDutyValue@dutyCycle7,w
 12893  1340  3903               	andlw	3
 12894  1341  00F2               	movwf	??_PWM7_LoadDutyValue
 12895  1342  3005               	movlw	5
 12896  1343                     u3585:	
 12897  1343  35F2               	lslf	??_PWM7_LoadDutyValue,f
 12898  1344  3EFF               	addlw	-1
 12899  1345  1D03               	skipz
 12900  1346  2B43               	goto	u3585
 12901  1347  3572               	lslf	??_PWM7_LoadDutyValue,w
 12902  1348  0090               	movwf	16	;volatile
 12903  1349  0008               	return
 12904  134A                     __end_of_PWM7_LoadDutyValue:	
 12905                           
 12906                           	psect	text34
 12907  131E                     __ptext34:	
 12908 ;; *************** function _PWM6_LoadDutyValue *****************
 12909 ;; Defined at:
 12910 ;;		line 30 in file "pwm.c"
 12911 ;; Parameters:    Size  Location     Type
 12912 ;;  dutyCycle6      2    0[COMMON] unsigned int 
 12913 ;; Auto vars:     Size  Location     Type
 12914 ;;		None
 12915 ;; Return value:  Size  Location     Type
 12916 ;;                  1    wreg      void 
 12917 ;; Registers used:
 12918 ;;		wreg, status,2, status,0
 12919 ;; Tracked objects:
 12920 ;;		On entry : 0/0
 12921 ;;		On exit  : 0/0
 12922 ;;		Unchanged: 0/0
 12923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12924 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12926 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12927 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12928 ;;Total ram usage:        4 bytes
 12929 ;; Hardware stack levels used:    1
 12930 ;; This function calls:
 12931 ;;		Nothing
 12932 ;; This function is called by:
 12933 ;;		_main
 12934 ;; This function uses a non-reentrant model
 12935 ;;
 12936                           
 12937                           
 12938                           ;psect for function _PWM6_LoadDutyValue
 12939  131E                     _PWM6_LoadDutyValue:	
 12940                           
 12941                           ;pwm.c: 32: PWM6DCH = (dutyCycle6 & 0x03FC)>>2;
 12942                           
 12943                           ;incstack = 0
 12944                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
 12945  131E  0871               	movf	PWM6_LoadDutyValue@dutyCycle6+1,w
 12946  131F  00F3               	movwf	??_PWM6_LoadDutyValue+1
 12947  1320  0870               	movf	PWM6_LoadDutyValue@dutyCycle6,w
 12948  1321  00F2               	movwf	??_PWM6_LoadDutyValue
 12949  1322  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
 12950  1323  0CF2               	rrf	??_PWM6_LoadDutyValue,f
 12951  1324  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
 12952  1325  0CF2               	rrf	??_PWM6_LoadDutyValue,f
 12953  1326  0872               	movf	??_PWM6_LoadDutyValue,w
 12954  1327  0027               	movlb	7	; select bank7
 12955  1328  008D               	movwf	13	;volatile
 12956                           
 12957                           ;pwm.c: 34: PWM6DCL = (dutyCycle6 & 0x0003)<<6;
 12958  1329  0870               	movf	PWM6_LoadDutyValue@dutyCycle6,w
 12959  132A  3903               	andlw	3
 12960  132B  00F2               	movwf	??_PWM6_LoadDutyValue
 12961  132C  3005               	movlw	5
 12962  132D                     u3575:	
 12963  132D  35F2               	lslf	??_PWM6_LoadDutyValue,f
 12964  132E  3EFF               	addlw	-1
 12965  132F  1D03               	skipz
 12966  1330  2B2D               	goto	u3575
 12967  1331  3572               	lslf	??_PWM6_LoadDutyValue,w
 12968  1332  008C               	movwf	12	;volatile
 12969  1333  0008               	return
 12970  1334                     __end_of_PWM6_LoadDutyValue:	
 12971                           
 12972                           	psect	text35
 12973  12E0                     __ptext35:	
 12974 ;; *************** function _LCDWriteString *****************
 12975 ;; Defined at:
 12976 ;;		line 176 in file "lcd.c"
 12977 ;; Parameters:    Size  Location     Type
 12978 ;;  characters      2   12[COMMON] PTR const unsigned char 
 12979 ;;		 -> STR_3(5), STR_2(5), STR_1(4), 
 12980 ;; Auto vars:     Size  Location     Type
 12981 ;;		None
 12982 ;; Return value:  Size  Location     Type
 12983 ;;                  1    wreg      void 
 12984 ;; Registers used:
 12985 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12986 ;; Tracked objects:
 12987 ;;		On entry : 0/0
 12988 ;;		On exit  : 0/0
 12989 ;;		Unchanged: 0/0
 12990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12991 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12993 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12994 ;;      Totals:         2       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12995 ;;Total ram usage:        3 bytes
 12996 ;; Hardware stack levels used:    1
 12997 ;; Hardware stack levels required when called:    2
 12998 ;; This function calls:
 12999 ;;		_LCDWriteCharacter
 13000 ;; This function is called by:
 13001 ;;		_main
 13002 ;; This function uses a non-reentrant model
 13003 ;;
 13004                           
 13005                           
 13006                           ;psect for function _LCDWriteString
 13007  12E0                     _LCDWriteString:	
 13008  12E0                     l2962:	
 13009                           ;lcd.c: 178: while (*characters)
 13010                           
 13011                           ;incstack = 0
 13012                           ; Regs used in _LCDWriteString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 13013                           
 13014  12E0  087C               	movf	LCDWriteString@characters,w
 13015  12E1  0084               	movwf	4
 13016  12E2  087D               	movf	LCDWriteString@characters+1,w
 13017  12E3  0085               	movwf	5
 13018  12E4  0012               	moviw fsr0++
 13019  12E5  1903               	btfsc	3,2
 13020  12E6  0008               	return
 13021                           
 13022                           ;lcd.c: 179: LCDWriteCharacter(*characters++);
 13023  12E7  087C               	movf	LCDWriteString@characters,w
 13024  12E8  0084               	movwf	4
 13025  12E9  087D               	movf	LCDWriteString@characters+1,w
 13026  12EA  0085               	movwf	5
 13027  12EB  0800               	movf	0,w	;code access
 13028  12EC  3196  26C6  3192   	fcall	_LCDWriteCharacter
 13029  12EF  3001               	movlw	1
 13030  12F0  07FC               	addwf	LCDWriteString@characters,f
 13031  12F1  3000               	movlw	0
 13032  12F2  3DFD               	addwfc	LCDWriteString@characters+1,f
 13033  12F3  2AE0               	goto	l2962
 13034  12F4                     __end_of_LCDWriteString:	
 13035                           
 13036                           	psect	text36
 13037  0C74                     __ptext36:	
 13038 ;; *************** function _LCDWriteInt *****************
 13039 ;; Defined at:
 13040 ;;		line 190 in file "lcd.c"
 13041 ;; Parameters:    Size  Location     Type
 13042 ;;  value           2    0[BANK0 ] int 
 13043 ;;  fieldLength     1    2[BANK0 ] char 
 13044 ;;  numPlaces       1    3[BANK0 ] unsigned char 
 13045 ;;  sign            1    4[BANK0 ] unsigned char 
 13046 ;; Auto vars:     Size  Location     Type
 13047 ;;  str             5    9[BANK0 ] unsigned char [5]
 13048 ;;  i               1   15[BANK0 ] unsigned char 
 13049 ;;  j               1   14[BANK0 ] unsigned char 
 13050 ;; Return value:  Size  Location     Type
 13051 ;;                  1    wreg      void 
 13052 ;; Registers used:
 13053 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13054 ;; Tracked objects:
 13055 ;;		On entry : 0/0
 13056 ;;		On exit  : 0/0
 13057 ;;		Unchanged: 0/0
 13058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13059 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13060 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13061 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13062 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13063 ;;Total ram usage:       16 bytes
 13064 ;; Hardware stack levels used:    1
 13065 ;; Hardware stack levels required when called:    2
 13066 ;; This function calls:
 13067 ;;		_LCDWriteCharacter
 13068 ;;		___awdiv
 13069 ;;		___lwmod
 13070 ;; This function is called by:
 13071 ;;		_main
 13072 ;; This function uses a non-reentrant model
 13073 ;;
 13074                           
 13075                           
 13076                           ;psect for function _LCDWriteInt
 13077  0C74                     _LCDWriteInt:	
 13078                           
 13079                           ;lcd.c: 192: uint8_t str[5]={0,0,0,0,0};
 13080                           
 13081                           ;incstack = 0
 13082                           ; Regs used in _LCDWriteInt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13083  0C74  3038               	movlw	low LCDWriteInt@F14387
 13084  0C75  0086               	movwf	6
 13085  0C76  3001               	movlw	high LCDWriteInt@F14387
 13086  0C77  0087               	movwf	7
 13087  0C78  3029               	movlw	low LCDWriteInt@str
 13088  0C79  0084               	movwf	4
 13089  0C7A  3000               	movlw	high LCDWriteInt@str
 13090  0C7B  0085               	movwf	5
 13091  0C7C  3005               	movlw	5
 13092  0C7D  0020               	movlb	0	; select bank0
 13093  0C7E  00A5               	movwf	??_LCDWriteInt
 13094  0C7F                     u3480:	
 13095  0C7F  0016               	moviw fsr1++
 13096  0C80  001A               	movwi fsr0++
 13097  0C81  0BA5               	decfsz	??_LCDWriteInt,f
 13098  0C82  2C7F               	goto	u3480
 13099                           
 13100                           ;lcd.c: 193: uint8_t i=4,j=0;
 13101  0C83  3004               	movlw	4
 13102  0C84  00A5               	movwf	??_LCDWriteInt
 13103  0C85  0825               	movf	??_LCDWriteInt,w
 13104  0C86  00AF               	movwf	LCDWriteInt@i
 13105  0C87  01AE               	clrf	LCDWriteInt@j
 13106                           
 13107                           ;lcd.c: 195: if(value<0)
 13108  0C88  1FA1               	btfss	LCDWriteInt@value+1,7
 13109  0C89  2C95               	goto	l2976
 13110                           
 13111                           ;lcd.c: 196: {
 13112                           ;lcd.c: 197: LCDWriteCharacter('-');
 13113  0C8A  302D               	movlw	45
 13114  0C8B  3196  26C6  318C   	fcall	_LCDWriteCharacter
 13115                           
 13116                           ;lcd.c: 198: value=value*-1;
 13117  0C8E  0020               	movlb	0	; select bank0
 13118  0C8F  09A0               	comf	LCDWriteInt@value,f
 13119  0C90  09A1               	comf	LCDWriteInt@value+1,f
 13120  0C91  0AA0               	incf	LCDWriteInt@value,f
 13121  0C92  1903               	skipnz
 13122  0C93  0AA1               	incf	LCDWriteInt@value+1,f
 13123                           
 13124                           ;lcd.c: 199: }
 13125  0C94  2C9C               	goto	l2986
 13126  0C95                     l2976:	
 13127                           
 13128                           ;lcd.c: 201: else
 13129                           ;lcd.c: 202: {
 13130                           ;lcd.c: 203: if(sign == 1)
 13131  0C95  0324               	decf	LCDWriteInt@sign,w
 13132  0C96  1D03               	btfss	3,2
 13133  0C97  2C9C               	goto	l2986
 13134                           
 13135                           ;lcd.c: 204: {
 13136                           ;lcd.c: 205: LCDWriteCharacter('+');
 13137  0C98  302B               	movlw	43
 13138  0C99  3196  26C6  318C   	fcall	_LCDWriteCharacter
 13139  0C9C                     l2986:	
 13140                           ;lcd.c: 206: }
 13141                           ;lcd.c: 207: }
 13142                           ;lcd.c: 209: while(value)
 13143                           
 13144  0C9C  0020               	movlb	0	; select bank0
 13145  0C9D  0820               	movf	LCDWriteInt@value,w
 13146  0C9E  0421               	iorwf	LCDWriteInt@value+1,w
 13147  0C9F  1903               	btfsc	3,2
 13148  0CA0  2CC9               	goto	l2988
 13149                           
 13150                           ;lcd.c: 210: {
 13151                           ;lcd.c: 211: str[i]=(uint16_t)value%10;
 13152  0CA1  300A               	movlw	10
 13153  0CA2  00F0               	movwf	___lwmod@divisor
 13154  0CA3  3000               	movlw	0
 13155  0CA4  00F1               	movwf	___lwmod@divisor+1
 13156  0CA5  0020               	movlb	0	; select bank0
 13157  0CA6  0821               	movf	LCDWriteInt@value+1,w
 13158  0CA7  00F3               	movwf	___lwmod@dividend+1
 13159  0CA8  0820               	movf	LCDWriteInt@value,w
 13160  0CA9  00F2               	movwf	___lwmod@dividend
 13161  0CAA  3189  2132  318C   	fcall	___lwmod
 13162  0CAD  0870               	movf	?___lwmod,w
 13163  0CAE  0020               	movlb	0	; select bank0
 13164  0CAF  00A5               	movwf	??_LCDWriteInt
 13165  0CB0  082F               	movf	LCDWriteInt@i,w
 13166  0CB1  3E29               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
 13167  0CB2  0086               	movwf	6
 13168  0CB3  0187               	clrf	7
 13169  0CB4  0825               	movf	??_LCDWriteInt,w
 13170  0CB5  0081               	movwf	1
 13171                           
 13172                           ;lcd.c: 212: value=value/10;
 13173  0CB6  300A               	movlw	10
 13174  0CB7  00F0               	movwf	___awdiv@divisor
 13175  0CB8  3000               	movlw	0
 13176  0CB9  00F1               	movwf	___awdiv@divisor+1
 13177  0CBA  0821               	movf	LCDWriteInt@value+1,w
 13178  0CBB  00F3               	movwf	___awdiv@dividend+1
 13179  0CBC  0820               	movf	LCDWriteInt@value,w
 13180  0CBD  00F2               	movwf	___awdiv@dividend
 13181  0CBE  3196  2675  318C   	fcall	___awdiv
 13182  0CC1  0871               	movf	?___awdiv+1,w
 13183  0CC2  0020               	movlb	0	; select bank0
 13184  0CC3  00A1               	movwf	LCDWriteInt@value+1
 13185  0CC4  0870               	movf	?___awdiv,w
 13186  0CC5  00A0               	movwf	LCDWriteInt@value
 13187                           
 13188                           ;lcd.c: 213: i--;
 13189  0CC6  3001               	movlw	1
 13190  0CC7  02AF               	subwf	LCDWriteInt@i,f
 13191  0CC8  2C9C               	goto	l2986
 13192  0CC9                     l2988:	
 13193                           
 13194                           ;lcd.c: 214: }
 13195                           ;lcd.c: 215: if(fieldLength==-1)
 13196  0CC9  0A22               	incf	LCDWriteInt@fieldLength,w
 13197  0CCA  1903               	btfsc	3,2
 13198  0CCB  2CD1               	goto	l2994
 13199  0CCC  2CD9               	goto	l2996
 13200  0CCD                     l2992:	
 13201                           ;lcd.c: 216: {
 13202                           ;lcd.c: 217: while(str[j]==0)
 13203                           
 13204                           
 13205                           ;lcd.c: 218: {
 13206                           ;lcd.c: 219: j++;
 13207  0CCD  3001               	movlw	1
 13208  0CCE  00A5               	movwf	??_LCDWriteInt
 13209  0CCF  0825               	movf	??_LCDWriteInt,w
 13210  0CD0  07AE               	addwf	LCDWriteInt@j,f
 13211  0CD1                     l2994:	
 13212  0CD1  082E               	movf	LCDWriteInt@j,w
 13213  0CD2  3E29               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
 13214  0CD3  0086               	movwf	6
 13215  0CD4  0187               	clrf	7
 13216  0CD5  0801               	movf	1,w
 13217  0CD6  1D03               	btfss	3,2
 13218  0CD7  2CDF               	goto	l2998
 13219  0CD8  2CCD               	goto	l2992
 13220  0CD9                     l2996:	
 13221                           ;lcd.c: 220: }
 13222                           ;lcd.c: 221: }
 13223                           
 13224                           
 13225                           ;lcd.c: 222: else
 13226                           ;lcd.c: 223: {
 13227                           ;lcd.c: 224: j=(uint8_t)(5-fieldLength);
 13228  0CD9  0322               	decf	LCDWriteInt@fieldLength,w
 13229  0CDA  3AFF               	xorlw	255
 13230  0CDB  3E05               	addlw	5
 13231  0CDC  00A5               	movwf	??_LCDWriteInt
 13232  0CDD  0825               	movf	??_LCDWriteInt,w
 13233  0CDE  00AE               	movwf	LCDWriteInt@j
 13234  0CDF                     l2998:	
 13235                           
 13236                           ;lcd.c: 225: }
 13237                           ;lcd.c: 227: for(i=j;i<(5-numPlaces);i++)
 13238  0CDF  082E               	movf	LCDWriteInt@j,w
 13239  0CE0  00A5               	movwf	??_LCDWriteInt
 13240  0CE1  0825               	movf	??_LCDWriteInt,w
 13241  0CE2  00AF               	movwf	LCDWriteInt@i
 13242  0CE3                     l3004:	
 13243  0CE3  0823               	movf	LCDWriteInt@numPlaces,w
 13244  0CE4  00A5               	movwf	??_LCDWriteInt
 13245  0CE5  01A6               	clrf	??_LCDWriteInt+1
 13246  0CE6  09A5               	comf	??_LCDWriteInt,f
 13247  0CE7  09A6               	comf	??_LCDWriteInt+1,f
 13248  0CE8  0AA5               	incf	??_LCDWriteInt,f
 13249  0CE9  1903               	skipnz
 13250  0CEA  0AA6               	incf	??_LCDWriteInt+1,f
 13251  0CEB  0825               	movf	??_LCDWriteInt,w
 13252  0CEC  3E05               	addlw	5
 13253  0CED  00A7               	movwf	??_LCDWriteInt+2
 13254  0CEE  3000               	movlw	0
 13255  0CEF  3D26               	addwfc	??_LCDWriteInt+1,w
 13256  0CF0  00A8               	movwf	??_LCDWriteInt+3
 13257  0CF1  0828               	movf	??_LCDWriteInt+3,w
 13258  0CF2  3A80               	xorlw	128
 13259  0CF3  3C80               	sublw	128
 13260  0CF4  1D03               	skipz
 13261  0CF5  2CF8               	goto	u3545
 13262  0CF6  0827               	movf	??_LCDWriteInt+2,w
 13263  0CF7  022F               	subwf	LCDWriteInt@i,w
 13264  0CF8                     u3545:	
 13265  0CF8  1803               	btfsc	3,0
 13266  0CF9  2D0A               	goto	l3006
 13267                           
 13268                           ;lcd.c: 228: {
 13269                           ;lcd.c: 229: LCDWriteCharacter((uint8_t)(48+str[i]));
 13270  0CFA  0020               	movlb	0	; select bank0
 13271  0CFB  082F               	movf	LCDWriteInt@i,w
 13272  0CFC  3E29               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
 13273  0CFD  0086               	movwf	6
 13274  0CFE  0187               	clrf	7
 13275  0CFF  0801               	movf	1,w
 13276  0D00  3E30               	addlw	48
 13277  0D01  3196  26C6  318C   	fcall	_LCDWriteCharacter
 13278  0D04  3001               	movlw	1
 13279  0D05  0020               	movlb	0	; select bank0
 13280  0D06  00A5               	movwf	??_LCDWriteInt
 13281  0D07  0825               	movf	??_LCDWriteInt,w
 13282  0D08  07AF               	addwf	LCDWriteInt@i,f
 13283  0D09  2CE3               	goto	l3004
 13284  0D0A                     l3006:	
 13285                           
 13286                           ;lcd.c: 230: }
 13287                           ;lcd.c: 232: if(numPlaces == 1)
 13288  0D0A  0020               	movlb	0	; select bank0
 13289  0D0B  0323               	decf	LCDWriteInt@numPlaces,w
 13290  0D0C  1D03               	btfss	3,2
 13291  0D0D  2D18               	goto	l3010
 13292                           
 13293                           ;lcd.c: 233: {
 13294                           ;lcd.c: 234: LCDWriteCharacter(46);
 13295  0D0E  302E               	movlw	46
 13296  0D0F  3196  26C6  318C   	fcall	_LCDWriteCharacter
 13297                           
 13298                           ;lcd.c: 235: LCDWriteCharacter ((uint8_t)(48+str[4]));
 13299  0D12  0020               	movlb	0	; select bank0
 13300  0D13  082D               	movf	LCDWriteInt@str+4,w
 13301  0D14  3E30               	addlw	48
 13302  0D15  3196  26C6  318C   	fcall	_LCDWriteCharacter
 13303  0D18                     l3010:	
 13304                           
 13305                           ;lcd.c: 236: }
 13306                           ;lcd.c: 238: if(numPlaces == 2)
 13307  0D18  3002               	movlw	2
 13308  0D19  0020               	movlb	0	; select bank0
 13309  0D1A  0623               	xorwf	LCDWriteInt@numPlaces,w
 13310  0D1B  1D03               	btfss	3,2
 13311  0D1C  0008               	return
 13312                           
 13313                           ;lcd.c: 239: {
 13314                           ;lcd.c: 240: LCDWriteCharacter(46);
 13315  0D1D  302E               	movlw	46
 13316  0D1E  3196  26C6  318C   	fcall	_LCDWriteCharacter
 13317                           
 13318                           ;lcd.c: 241: LCDWriteCharacter((uint8_t)(48+str[3]));
 13319  0D21  0020               	movlb	0	; select bank0
 13320  0D22  082C               	movf	LCDWriteInt@str+3,w
 13321  0D23  3E30               	addlw	48
 13322  0D24  3196  26C6  318C   	fcall	_LCDWriteCharacter
 13323                           
 13324                           ;lcd.c: 242: LCDWriteCharacter((uint8_t)(48+str[4]));
 13325  0D27  0020               	movlb	0	; select bank0
 13326  0D28  082D               	movf	LCDWriteInt@str+4,w
 13327  0D29  3E30               	addlw	48
 13328  0D2A  3196  26C6         	fcall	_LCDWriteCharacter
 13329  0D2C  0008               	return
 13330  0D2D                     __end_of_LCDWriteInt:	
 13331                           
 13332                           	psect	text37
 13333  0932                     __ptext37:	
 13334 ;; *************** function ___lwmod *****************
 13335 ;; Defined at:
 13336 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
 13337 ;; Parameters:    Size  Location     Type
 13338 ;;  divisor         2    0[COMMON] unsigned int 
 13339 ;;  dividend        2    2[COMMON] unsigned int 
 13340 ;; Auto vars:     Size  Location     Type
 13341 ;;  counter         1    5[COMMON] unsigned char 
 13342 ;; Return value:  Size  Location     Type
 13343 ;;                  2    0[COMMON] unsigned int 
 13344 ;; Registers used:
 13345 ;;		wreg, status,2, status,0
 13346 ;; Tracked objects:
 13347 ;;		On entry : 0/0
 13348 ;;		On exit  : 0/0
 13349 ;;		Unchanged: 0/0
 13350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13351 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13352 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13353 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13354 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13355 ;;Total ram usage:        6 bytes
 13356 ;; Hardware stack levels used:    1
 13357 ;; This function calls:
 13358 ;;		Nothing
 13359 ;; This function is called by:
 13360 ;;		_LCDWriteInt
 13361 ;; This function uses a non-reentrant model
 13362 ;;
 13363                           
 13364                           
 13365                           ;psect for function ___lwmod
 13366  0932                     ___lwmod:	
 13367                           
 13368                           ;incstack = 0
 13369                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 13370  0932  0870               	movf	___lwmod@divisor,w
 13371  0933  0471               	iorwf	___lwmod@divisor+1,w
 13372  0934  1903               	btfsc	3,2
 13373  0935  2959               	goto	l2818
 13374  0936  01F5               	clrf	___lwmod@counter
 13375  0937  0AF5               	incf	___lwmod@counter,f
 13376  0938                     l2808:	
 13377  0938  1BF1               	btfsc	___lwmod@divisor+1,7
 13378  0939  2944               	goto	l2810
 13379  093A  3001               	movlw	1
 13380  093B                     u3065:	
 13381  093B  35F0               	lslf	___lwmod@divisor,f
 13382  093C  0DF1               	rlf	___lwmod@divisor+1,f
 13383  093D  0B89               	decfsz	9,f
 13384  093E  293B               	goto	u3065
 13385  093F  3001               	movlw	1
 13386  0940  00F4               	movwf	??___lwmod
 13387  0941  0874               	movf	??___lwmod,w
 13388  0942  07F5               	addwf	___lwmod@counter,f
 13389  0943  2938               	goto	l2808
 13390  0944                     l2810:	
 13391  0944  0871               	movf	___lwmod@divisor+1,w
 13392  0945  0273               	subwf	___lwmod@dividend+1,w
 13393  0946  1D03               	skipz
 13394  0947  294A               	goto	u3085
 13395  0948  0870               	movf	___lwmod@divisor,w
 13396  0949  0272               	subwf	___lwmod@dividend,w
 13397  094A                     u3085:	
 13398  094A  1C03               	skipc
 13399  094B  2950               	goto	l2814
 13400  094C  0870               	movf	___lwmod@divisor,w
 13401  094D  02F2               	subwf	___lwmod@dividend,f
 13402  094E  0871               	movf	___lwmod@divisor+1,w
 13403  094F  3BF3               	subwfb	___lwmod@dividend+1,f
 13404  0950                     l2814:	
 13405  0950  3001               	movlw	1
 13406  0951                     u3095:	
 13407  0951  36F1               	lsrf	___lwmod@divisor+1,f
 13408  0952  0CF0               	rrf	___lwmod@divisor,f
 13409  0953  0B89               	decfsz	9,f
 13410  0954  2951               	goto	u3095
 13411  0955  3001               	movlw	1
 13412  0956  02F5               	subwf	___lwmod@counter,f
 13413  0957  1D03               	btfss	3,2
 13414  0958  2944               	goto	l2810
 13415  0959                     l2818:	
 13416  0959  0873               	movf	___lwmod@dividend+1,w
 13417  095A  00F1               	movwf	?___lwmod+1
 13418  095B  0872               	movf	___lwmod@dividend,w
 13419  095C  00F0               	movwf	?___lwmod
 13420  095D  0008               	return
 13421  095E                     __end_of___lwmod:	
 13422                           
 13423                           	psect	text38
 13424  1675                     __ptext38:	
 13425 ;; *************** function ___awdiv *****************
 13426 ;; Defined at:
 13427 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 13428 ;; Parameters:    Size  Location     Type
 13429 ;;  divisor         2    0[COMMON] int 
 13430 ;;  dividend        2    2[COMMON] int 
 13431 ;; Auto vars:     Size  Location     Type
 13432 ;;  quotient        2    7[COMMON] int 
 13433 ;;  sign            1    6[COMMON] unsigned char 
 13434 ;;  counter         1    5[COMMON] unsigned char 
 13435 ;; Return value:  Size  Location     Type
 13436 ;;                  2    0[COMMON] int 
 13437 ;; Registers used:
 13438 ;;		wreg, status,2, status,0
 13439 ;; Tracked objects:
 13440 ;;		On entry : 0/0
 13441 ;;		On exit  : 0/0
 13442 ;;		Unchanged: 0/0
 13443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13444 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13445 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13446 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13447 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13448 ;;Total ram usage:        9 bytes
 13449 ;; Hardware stack levels used:    1
 13450 ;; This function calls:
 13451 ;;		Nothing
 13452 ;; This function is called by:
 13453 ;;		_LCDWriteInt
 13454 ;; This function uses a non-reentrant model
 13455 ;;
 13456                           
 13457                           
 13458                           ;psect for function ___awdiv
 13459  1675                     ___awdiv:	
 13460                           
 13461                           ;incstack = 0
 13462                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 13463  1675  01F6               	clrf	___awdiv@sign
 13464  1676  1FF1               	btfss	___awdiv@divisor+1,7
 13465  1677  2E7F               	goto	l2672
 13466  1678  09F0               	comf	___awdiv@divisor,f
 13467  1679  09F1               	comf	___awdiv@divisor+1,f
 13468  167A  0AF0               	incf	___awdiv@divisor,f
 13469  167B  1903               	skipnz
 13470  167C  0AF1               	incf	___awdiv@divisor+1,f
 13471  167D  01F6               	clrf	___awdiv@sign
 13472  167E  0AF6               	incf	___awdiv@sign,f
 13473  167F                     l2672:	
 13474  167F  1FF3               	btfss	___awdiv@dividend+1,7
 13475  1680  2E8A               	goto	l2678
 13476  1681  09F2               	comf	___awdiv@dividend,f
 13477  1682  09F3               	comf	___awdiv@dividend+1,f
 13478  1683  0AF2               	incf	___awdiv@dividend,f
 13479  1684  1903               	skipnz
 13480  1685  0AF3               	incf	___awdiv@dividend+1,f
 13481  1686  3001               	movlw	1
 13482  1687  00F4               	movwf	??___awdiv
 13483  1688  0874               	movf	??___awdiv,w
 13484  1689  06F6               	xorwf	___awdiv@sign,f
 13485  168A                     l2678:	
 13486  168A  01F7               	clrf	___awdiv@quotient
 13487  168B  01F8               	clrf	___awdiv@quotient+1
 13488  168C  0870               	movf	___awdiv@divisor,w
 13489  168D  0471               	iorwf	___awdiv@divisor+1,w
 13490  168E  1903               	btfsc	3,2
 13491  168F  2EB9               	goto	l2700
 13492  1690  01F5               	clrf	___awdiv@counter
 13493  1691  0AF5               	incf	___awdiv@counter,f
 13494  1692                     l2688:	
 13495  1692  1BF1               	btfsc	___awdiv@divisor+1,7
 13496  1693  2E9E               	goto	l2690
 13497  1694  3001               	movlw	1
 13498  1695                     u2795:	
 13499  1695  35F0               	lslf	___awdiv@divisor,f
 13500  1696  0DF1               	rlf	___awdiv@divisor+1,f
 13501  1697  0B89               	decfsz	9,f
 13502  1698  2E95               	goto	u2795
 13503  1699  3001               	movlw	1
 13504  169A  00F4               	movwf	??___awdiv
 13505  169B  0874               	movf	??___awdiv,w
 13506  169C  07F5               	addwf	___awdiv@counter,f
 13507  169D  2E92               	goto	l2688
 13508  169E                     l2690:	
 13509  169E  3001               	movlw	1
 13510  169F                     u2815:	
 13511  169F  35F7               	lslf	___awdiv@quotient,f
 13512  16A0  0DF8               	rlf	___awdiv@quotient+1,f
 13513  16A1  0B89               	decfsz	9,f
 13514  16A2  2E9F               	goto	u2815
 13515  16A3  0871               	movf	___awdiv@divisor+1,w
 13516  16A4  0273               	subwf	___awdiv@dividend+1,w
 13517  16A5  1D03               	skipz
 13518  16A6  2EA9               	goto	u2825
 13519  16A7  0870               	movf	___awdiv@divisor,w
 13520  16A8  0272               	subwf	___awdiv@dividend,w
 13521  16A9                     u2825:	
 13522  16A9  1C03               	skipc
 13523  16AA  2EB0               	goto	l2696
 13524  16AB  0870               	movf	___awdiv@divisor,w
 13525  16AC  02F2               	subwf	___awdiv@dividend,f
 13526  16AD  0871               	movf	___awdiv@divisor+1,w
 13527  16AE  3BF3               	subwfb	___awdiv@dividend+1,f
 13528  16AF  1477               	bsf	___awdiv@quotient,0
 13529  16B0                     l2696:	
 13530  16B0  3001               	movlw	1
 13531  16B1                     u2835:	
 13532  16B1  36F1               	lsrf	___awdiv@divisor+1,f
 13533  16B2  0CF0               	rrf	___awdiv@divisor,f
 13534  16B3  0B89               	decfsz	9,f
 13535  16B4  2EB1               	goto	u2835
 13536  16B5  3001               	movlw	1
 13537  16B6  02F5               	subwf	___awdiv@counter,f
 13538  16B7  1D03               	btfss	3,2
 13539  16B8  2E9E               	goto	l2690
 13540  16B9                     l2700:	
 13541  16B9  0876               	movf	___awdiv@sign,w
 13542  16BA  1903               	btfsc	3,2
 13543  16BB  2EC1               	goto	l2704
 13544  16BC  09F7               	comf	___awdiv@quotient,f
 13545  16BD  09F8               	comf	___awdiv@quotient+1,f
 13546  16BE  0AF7               	incf	___awdiv@quotient,f
 13547  16BF  1903               	skipnz
 13548  16C0  0AF8               	incf	___awdiv@quotient+1,f
 13549  16C1                     l2704:	
 13550  16C1  0878               	movf	___awdiv@quotient+1,w
 13551  16C2  00F1               	movwf	?___awdiv+1
 13552  16C3  0877               	movf	___awdiv@quotient,w
 13553  16C4  00F0               	movwf	?___awdiv
 13554  16C5  0008               	return
 13555  16C6                     __end_of___awdiv:	
 13556                           
 13557                           	psect	text39
 13558  16C6                     __ptext39:	
 13559 ;; *************** function _LCDWriteCharacter *****************
 13560 ;; Defined at:
 13561 ;;		line 140 in file "lcd.c"
 13562 ;; Parameters:    Size  Location     Type
 13563 ;;  character       1    wreg     const unsigned char 
 13564 ;; Auto vars:     Size  Location     Type
 13565 ;;  character       1    9[COMMON] const unsigned char 
 13566 ;;  base            2   10[COMMON] unsigned int 
 13567 ;; Return value:  Size  Location     Type
 13568 ;;                  1    wreg      void 
 13569 ;; Registers used:
 13570 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13571 ;; Tracked objects:
 13572 ;;		On entry : 0/0
 13573 ;;		On exit  : 0/0
 13574 ;;		Unchanged: 0/0
 13575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13577 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13578 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13579 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13580 ;;Total ram usage:        6 bytes
 13581 ;; Hardware stack levels used:    1
 13582 ;; Hardware stack levels required when called:    1
 13583 ;; This function calls:
 13584 ;;		_LCDWrite
 13585 ;;		___wmul
 13586 ;; This function is called by:
 13587 ;;		_LCDWriteString
 13588 ;;		_LCDWriteInt
 13589 ;;		_main
 13590 ;; This function uses a non-reentrant model
 13591 ;;
 13592                           
 13593                           
 13594                           ;psect for function _LCDWriteCharacter
 13595  16C6                     _LCDWriteCharacter:	
 13596                           
 13597                           ;incstack = 0
 13598                           ; Regs used in _LCDWriteCharacter: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 13599                           ;LCDWriteCharacter@character stored from wreg
 13600  16C6  00F9               	movwf	LCDWriteCharacter@character
 13601                           
 13602                           ;lcd.c: 142: uint16_t base;
 13603                           ;lcd.c: 143: base = character - 0x20;
 13604  16C7  0879               	movf	LCDWriteCharacter@character,w
 13605  16C8  3EE0               	addlw	224
 13606  16C9  00FA               	movwf	LCDWriteCharacter@base
 13607  16CA  30FF               	movlw	255
 13608  16CB  1803               	skipnc
 13609  16CC  3000               	movlw	0
 13610  16CD  00FB               	movwf	LCDWriteCharacter@base+1
 13611                           
 13612                           ;lcd.c: 144: base *= 3;
 13613  16CE  3003               	movlw	3
 13614  16CF  00F0               	movwf	___wmul@multiplier
 13615  16D0  3000               	movlw	0
 13616  16D1  00F1               	movwf	___wmul@multiplier+1
 13617  16D2  087B               	movf	LCDWriteCharacter@base+1,w
 13618  16D3  00F3               	movwf	___wmul@multiplicand+1
 13619  16D4  087A               	movf	LCDWriteCharacter@base,w
 13620  16D5  00F2               	movwf	___wmul@multiplicand
 13621  16D6  3193  234A  3196   	fcall	___wmul
 13622  16D9  0871               	movf	?___wmul+1,w
 13623  16DA  00FB               	movwf	LCDWriteCharacter@base+1
 13624  16DB  0870               	movf	?___wmul,w
 13625  16DC  00FA               	movwf	LCDWriteCharacter@base
 13626                           
 13627                           ;lcd.c: 145: LCDWrite(1,fonts[base]);
 13628  16DD  087B               	movf	LCDWriteCharacter@base+1,w
 13629  16DE  0085               	movwf	5
 13630  16DF  087A               	movf	LCDWriteCharacter@base,w
 13631  16E0  0084               	movwf	4
 13632  16E1  3000               	movlw	low (_fonts| (0+32768))
 13633  16E2  0784               	addwf	4,f
 13634  16E3  3088               	movlw	high (_fonts| (0+32768))
 13635  16E4  3D85               	addwfc	5,f
 13636  16E5  0800               	movf	0,w	;code access
 13637  16E6  00F6               	movwf	??_LCDWriteCharacter
 13638  16E7  0876               	movf	??_LCDWriteCharacter,w
 13639  16E8  00F0               	movwf	LCDWrite@data
 13640  16E9  3001               	movlw	1
 13641  16EA  3193  23C2  3196   	fcall	_LCDWrite
 13642                           
 13643                           ;lcd.c: 146: LCDWrite(1,fonts[base + 1]);
 13644  16ED  087A               	movf	LCDWriteCharacter@base,w
 13645  16EE  3E01               	addlw	1
 13646  16EF  00F6               	movwf	??_LCDWriteCharacter
 13647  16F0  3000               	movlw	0
 13648  16F1  3D7B               	addwfc	LCDWriteCharacter@base+1,w
 13649  16F2  00F7               	movwf	??_LCDWriteCharacter+1
 13650  16F3  3000               	movlw	low (_fonts| (0+32768))
 13651  16F4  0776               	addwf	??_LCDWriteCharacter,w
 13652  16F5  0084               	movwf	4
 13653  16F6  3088               	movlw	high (_fonts| (0+32768))
 13654  16F7  3D77               	addwfc	??_LCDWriteCharacter+1,w
 13655  16F8  0085               	movwf	5
 13656  16F9  0800               	movf	0,w	;code access
 13657  16FA  00F8               	movwf	??_LCDWriteCharacter+2
 13658  16FB  0878               	movf	??_LCDWriteCharacter+2,w
 13659  16FC  00F0               	movwf	LCDWrite@data
 13660  16FD  3001               	movlw	1
 13661  16FE  3193  23C2  3196   	fcall	_LCDWrite
 13662                           
 13663                           ;lcd.c: 147: LCDWrite(1,fonts[base + 2]);
 13664  1701  087A               	movf	LCDWriteCharacter@base,w
 13665  1702  3E02               	addlw	2
 13666  1703  00F6               	movwf	??_LCDWriteCharacter
 13667  1704  3000               	movlw	0
 13668  1705  3D7B               	addwfc	LCDWriteCharacter@base+1,w
 13669  1706  00F7               	movwf	??_LCDWriteCharacter+1
 13670  1707  3000               	movlw	low (_fonts| (0+32768))
 13671  1708  0776               	addwf	??_LCDWriteCharacter,w
 13672  1709  0084               	movwf	4
 13673  170A  3088               	movlw	high (_fonts| (0+32768))
 13674  170B  3D77               	addwfc	??_LCDWriteCharacter+1,w
 13675  170C  0085               	movwf	5
 13676  170D  0800               	movf	0,w	;code access
 13677  170E  00F8               	movwf	??_LCDWriteCharacter+2
 13678  170F  0878               	movf	??_LCDWriteCharacter+2,w
 13679  1710  00F0               	movwf	LCDWrite@data
 13680  1711  3001               	movlw	1
 13681  1712  3193  23C2  3196   	fcall	_LCDWrite
 13682                           
 13683                           ;lcd.c: 148: LCDWrite(1, 0x00);
 13684  1715  01F0               	clrf	LCDWrite@data
 13685  1716  3001               	movlw	1
 13686  1717  3193  23C2         	fcall	_LCDWrite
 13687  1719  0008               	return
 13688  171A                     __end_of_LCDWriteCharacter:	
 13689                           
 13690                           	psect	text40
 13691  134A                     __ptext40:	
 13692 ;; *************** function ___wmul *****************
 13693 ;; Defined at:
 13694 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 13695 ;; Parameters:    Size  Location     Type
 13696 ;;  multiplier      2    0[COMMON] unsigned int 
 13697 ;;  multiplicand    2    2[COMMON] unsigned int 
 13698 ;; Auto vars:     Size  Location     Type
 13699 ;;  product         2    4[COMMON] unsigned int 
 13700 ;; Return value:  Size  Location     Type
 13701 ;;                  2    0[COMMON] unsigned int 
 13702 ;; Registers used:
 13703 ;;		wreg, status,2, status,0
 13704 ;; Tracked objects:
 13705 ;;		On entry : 0/0
 13706 ;;		On exit  : 0/0
 13707 ;;		Unchanged: 0/0
 13708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13709 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13710 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13712 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13713 ;;Total ram usage:        6 bytes
 13714 ;; Hardware stack levels used:    1
 13715 ;; This function calls:
 13716 ;;		Nothing
 13717 ;; This function is called by:
 13718 ;;		_readIAnalog
 13719 ;;		_LCDWriteCharacter
 13720 ;;		_eval_poly
 13721 ;; This function uses a non-reentrant model
 13722 ;;
 13723                           
 13724                           
 13725                           ;psect for function ___wmul
 13726  134A                     ___wmul:	
 13727                           
 13728                           ;incstack = 0
 13729                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 13730  134A  01F4               	clrf	___wmul@product
 13731  134B  01F5               	clrf	___wmul@product+1
 13732  134C                     l2240:	
 13733  134C  1C70               	btfss	___wmul@multiplier,0
 13734  134D  2B52               	goto	l576
 13735  134E  0872               	movf	___wmul@multiplicand,w
 13736  134F  07F4               	addwf	___wmul@product,f
 13737  1350  0873               	movf	___wmul@multiplicand+1,w
 13738  1351  3DF5               	addwfc	___wmul@product+1,f
 13739  1352                     l576:	
 13740  1352  3001               	movlw	1
 13741  1353                     u2145:	
 13742  1353  35F2               	lslf	___wmul@multiplicand,f
 13743  1354  0DF3               	rlf	___wmul@multiplicand+1,f
 13744  1355  0B89               	decfsz	9,f
 13745  1356  2B53               	goto	u2145
 13746  1357  3001               	movlw	1
 13747  1358                     u2155:	
 13748  1358  36F1               	lsrf	___wmul@multiplier+1,f
 13749  1359  0CF0               	rrf	___wmul@multiplier,f
 13750  135A  0B89               	decfsz	9,f
 13751  135B  2B58               	goto	u2155
 13752  135C  0870               	movf	___wmul@multiplier,w
 13753  135D  0471               	iorwf	___wmul@multiplier+1,w
 13754  135E  1D03               	btfss	3,2
 13755  135F  2B4C               	goto	l2240
 13756  1360  0875               	movf	___wmul@product+1,w
 13757  1361  00F1               	movwf	?___wmul+1
 13758  1362  0874               	movf	___wmul@product,w
 13759  1363  00F0               	movwf	?___wmul
 13760  1364  0008               	return
 13761  1365                     __end_of___wmul:	
 13762                           
 13763                           	psect	text41
 13764  13C2                     __ptext41:	
 13765 ;; *************** function _LCDWrite *****************
 13766 ;; Defined at:
 13767 ;;		line 281 in file "lcd.c"
 13768 ;; Parameters:    Size  Location     Type
 13769 ;;  data_or_comm    1    wreg     unsigned char 
 13770 ;;  data            1    0[COMMON] unsigned char 
 13771 ;; Auto vars:     Size  Location     Type
 13772 ;;  data_or_comm    1    2[COMMON] unsigned char 
 13773 ;;  i               1    4[COMMON] unsigned char 
 13774 ;;  d               1    3[COMMON] unsigned char 
 13775 ;; Return value:  Size  Location     Type
 13776 ;;                  1    wreg      void 
 13777 ;; Registers used:
 13778 ;;		wreg, status,2, status,0
 13779 ;; Tracked objects:
 13780 ;;		On entry : 0/0
 13781 ;;		On exit  : 0/0
 13782 ;;		Unchanged: 0/0
 13783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13784 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13785 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13786 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13787 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13788 ;;Total ram usage:        5 bytes
 13789 ;; Hardware stack levels used:    1
 13790 ;; This function calls:
 13791 ;;		Nothing
 13792 ;; This function is called by:
 13793 ;;		_gotoXY
 13794 ;;		_LCDWriteCharacter
 13795 ;;		_LCDClear
 13796 ;;		_LCDInit
 13797 ;; This function uses a non-reentrant model
 13798 ;;
 13799                           
 13800                           
 13801                           ;psect for function _LCDWrite
 13802  13C2                     _LCDWrite:	
 13803                           
 13804                           ;incstack = 0
 13805                           ; Regs used in _LCDWrite: [wreg+status,2+status,0]
 13806                           ;LCDWrite@data_or_command stored from wreg
 13807  13C2  00F2               	movwf	LCDWrite@data_or_command
 13808                           
 13809                           ;lcd.c: 283: uint8_t i,d;
 13810                           ;lcd.c: 285: d=data;
 13811  13C3  0870               	movf	LCDWrite@data,w
 13812  13C4  00F1               	movwf	??_LCDWrite
 13813  13C5  0871               	movf	??_LCDWrite,w
 13814  13C6  00F3               	movwf	LCDWrite@d
 13815                           
 13816                           ;lcd.c: 287: if(data_or_command == 0)
 13817  13C7  0872               	movf	LCDWrite@data_or_command,w
 13818  13C8  1D03               	btfss	3,2
 13819  13C9  2BCD               	goto	l215
 13820                           
 13821                           ;lcd.c: 288: {
 13822                           ;lcd.c: 289: LATAbits.LATA2 = 0;
 13823  13CA  0020               	movlb	0	; select bank0
 13824  13CB  1116               	bcf	22,2	;volatile
 13825                           
 13826                           ;lcd.c: 290: }
 13827  13CC  2BCF               	goto	l216
 13828  13CD                     l215:	
 13829                           
 13830                           ;lcd.c: 291: else
 13831                           ;lcd.c: 292: {
 13832                           ;lcd.c: 293: LATAbits.LATA2 = 1;
 13833  13CD  0020               	movlb	0	; select bank0
 13834  13CE  1516               	bsf	22,2	;volatile
 13835  13CF                     l216:	
 13836                           
 13837                           ;lcd.c: 294: }
 13838                           ;lcd.c: 296: LATAbits.LATA1 = 0;
 13839  13CF  1096               	bcf	22,1	;volatile
 13840                           
 13841                           ;lcd.c: 298: for(i=0;i<8;i++)
 13842  13D0  01F4               	clrf	LCDWrite@i
 13843  13D1  3008               	movlw	8
 13844  13D2  0274               	subwf	LCDWrite@i,w
 13845  13D3  1803               	btfsc	3,0
 13846  13D4  2BE5               	goto	l218
 13847  13D5                     l217:	
 13848                           
 13849                           ;lcd.c: 299: {
 13850                           ;lcd.c: 300: LATAbits.LATA3 = 0;
 13851  13D5  1196               	bcf	22,3	;volatile
 13852                           
 13853                           ;lcd.c: 302: if(d&0x80)
 13854  13D6  1FF3               	btfss	LCDWrite@d,7
 13855  13D7  2BD9               	goto	l219
 13856                           
 13857                           ;lcd.c: 303: {
 13858                           ;lcd.c: 304: LATAbits.LATA3 = 1;
 13859  13D8  1596               	bsf	22,3	;volatile
 13860  13D9                     l219:	
 13861                           
 13862                           ;lcd.c: 305: }
 13863                           ;lcd.c: 307: LATAbits.LATA4 = 1;
 13864  13D9  1616               	bsf	22,4	;volatile
 13865                           
 13866                           ;lcd.c: 309: d<<=1;
 13867  13DA  1003               	clrc
 13868  13DB  0DF3               	rlf	LCDWrite@d,f
 13869                           
 13870                           ;lcd.c: 311: LATAbits.LATA4=0;
 13871  13DC  1216               	bcf	22,4	;volatile
 13872  13DD  3001               	movlw	1
 13873  13DE  00F1               	movwf	??_LCDWrite
 13874  13DF  0871               	movf	??_LCDWrite,w
 13875  13E0  07F4               	addwf	LCDWrite@i,f
 13876  13E1  3008               	movlw	8
 13877  13E2  0274               	subwf	LCDWrite@i,w
 13878  13E3  1C03               	skipc
 13879  13E4  2BD5               	goto	l217
 13880  13E5                     l218:	
 13881                           
 13882                           ;lcd.c: 312: }
 13883                           ;lcd.c: 314: LATAbits.LATA1 = 1;
 13884  13E5  1496               	bsf	22,1	;volatile
 13885  13E6  0008               	return
 13886  13E7                     __end_of_LCDWrite:	
 13887                           
 13888                           	psect	text42
 13889  0EE5                     __ptext42:	
 13890 ;; *************** function _Battery_State_Machine *****************
 13891 ;; Defined at:
 13892 ;;		line 32 in file "battery_charger.c"
 13893 ;; Parameters:    Size  Location     Type
 13894 ;;  z               1    wreg     unsigned char 
 13895 ;; Auto vars:     Size  Location     Type
 13896 ;;  z               1    5[COMMON] unsigned char 
 13897 ;; Return value:  Size  Location     Type
 13898 ;;                  1    wreg      void 
 13899 ;; Registers used:
 13900 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13901 ;; Tracked objects:
 13902 ;;		On entry : 0/0
 13903 ;;		On exit  : 0/0
 13904 ;;		Unchanged: 0/0
 13905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13907 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13908 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13909 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13910 ;;Total ram usage:        6 bytes
 13911 ;; Hardware stack levels used:    1
 13912 ;; This function calls:
 13913 ;;		Nothing
 13914 ;; This function is called by:
 13915 ;;		_main
 13916 ;; This function uses a non-reentrant model
 13917 ;;
 13918                           
 13919                           
 13920                           ;psect for function _Battery_State_Machine
 13921  0EE5                     _Battery_State_Machine:	
 13922                           
 13923                           ;incstack = 0
 13924                           ; Regs used in _Battery_State_Machine: [wreg+fsr1l+fsr1h+status,2+status,0]
 13925                           ;Battery_State_Machine@z stored from wreg
 13926  0EE5  00F5               	movwf	Battery_State_Machine@z
 13927                           
 13928                           ;battery_charger.c: 34: if(batteryState[z]==PRECHARGE)
 13929  0EE6  0875               	movf	Battery_State_Machine@z,w
 13930  0EE7  3ED2               	addlw	(low (_batteryState| 0))& (0+255)
 13931  0EE8  0086               	movwf	6
 13932  0EE9  0187               	clrf	7
 13933  0EEA  3003               	movlw	3
 13934  0EEB  0601               	xorwf	1,w
 13935  0EEC  1D03               	btfss	3,2
 13936  0EED  2F37               	goto	l2854
 13937                           
 13938                           ;battery_charger.c: 35: {
 13939                           ;battery_charger.c: 36: if(voltage[z]<1075)
 13940  0EEE  3575               	lslf	Battery_State_Machine@z,w
 13941  0EEF  3EB0               	addlw	(low (_voltage| 0))& (0+255)
 13942  0EF0  0086               	movwf	6
 13943  0EF1  0187               	clrf	7
 13944  0EF2  3F40               	moviw [0]fsr1
 13945  0EF3  00F0               	movwf	??_Battery_State_Machine
 13946  0EF4  3F41               	moviw [1]fsr1
 13947  0EF5  00F1               	movwf	??_Battery_State_Machine+1
 13948  0EF6  0871               	movf	??_Battery_State_Machine+1,w
 13949  0EF7  3A80               	xorlw	128
 13950  0EF8  00F2               	movwf	??_Battery_State_Machine+2
 13951  0EF9  3084               	movlw	132
 13952  0EFA  0272               	subwf	??_Battery_State_Machine+2,w
 13953  0EFB  1D03               	skipz
 13954  0EFC  2EFF               	goto	u3195
 13955  0EFD  3033               	movlw	51
 13956  0EFE  0270               	subwf	??_Battery_State_Machine,w
 13957  0EFF                     u3195:	
 13958  0EFF  1803               	skipnc
 13959  0F00  2F26               	goto	l2852
 13960                           
 13961                           ;battery_charger.c: 37: {
 13962                           ;battery_charger.c: 38: if(stateCounter[z]>0)
 13963  0F01  3575               	lslf	Battery_State_Machine@z,w
 13964  0F02  3EC0               	addlw	(low (_stateCounter| 0))& (0+255)
 13965  0F03  0086               	movwf	6
 13966  0F04  0187               	clrf	7
 13967  0F05  3F40               	moviw [0]fsr1
 13968  0F06  00F0               	movwf	??_Battery_State_Machine
 13969  0F07  3F41               	moviw [1]fsr1
 13970  0F08  00F1               	movwf	??_Battery_State_Machine+1
 13971  0F09  0871               	movf	??_Battery_State_Machine+1,w
 13972  0F0A  3A80               	xorlw	128
 13973  0F0B  00F2               	movwf	??_Battery_State_Machine+2
 13974  0F0C  3080               	movlw	128
 13975  0F0D  0272               	subwf	??_Battery_State_Machine+2,w
 13976  0F0E  1D03               	skipz
 13977  0F0F  2F12               	goto	u3205
 13978  0F10  3001               	movlw	1
 13979  0F11  0270               	subwf	??_Battery_State_Machine,w
 13980  0F12                     u3205:	
 13981  0F12  1C03               	skipc
 13982  0F13  2F1F               	goto	l2850
 13983                           
 13984                           ;battery_charger.c: 39: {
 13985                           ;battery_charger.c: 40: stateCounter[z]-=1;
 13986  0F14  3575               	lslf	Battery_State_Machine@z,w
 13987  0F15  3EC0               	addlw	(low (_stateCounter| 0))& (0+255)
 13988  0F16  0086               	movwf	6
 13989  0F17  0187               	clrf	7
 13990  0F18  30FF               	movlw	255
 13991  0F19  0781               	addwf	1,f
 13992  0F1A  3141               	addfsr 1,1
 13993  0F1B  30FF               	movlw	255
 13994  0F1C  3D81               	addwfc	1,f
 13995  0F1D  317F               	addfsr 1,-1
 13996                           
 13997                           ;battery_charger.c: 41: }
 13998  0F1E  0008               	return
 13999  0F1F                     l2850:	
 14000                           
 14001                           ;battery_charger.c: 42: else
 14002                           ;battery_charger.c: 43: {
 14003                           ;battery_charger.c: 44: batteryState[z]=FAULT;
 14004  0F1F  0875               	movf	Battery_State_Machine@z,w
 14005  0F20  3ED2               	addlw	(low (_batteryState| 0))& (0+255)
 14006  0F21  0086               	movwf	6
 14007  0F22  0187               	clrf	7
 14008  0F23  0181               	clrf	1
 14009  0F24  0A81               	incf	1,f
 14010                           
 14011                           ;battery_charger.c: 45: }
 14012                           ;battery_charger.c: 46: }
 14013  0F25  0008               	return
 14014  0F26                     l2852:	
 14015                           
 14016                           ;battery_charger.c: 47: else
 14017                           ;battery_charger.c: 48: {
 14018                           ;battery_charger.c: 49: batteryState[z]=CHARGE;
 14019  0F26  3004               	movlw	4
 14020  0F27  00F0               	movwf	??_Battery_State_Machine
 14021  0F28  0875               	movf	Battery_State_Machine@z,w
 14022  0F29  3ED2               	addlw	(low (_batteryState| 0))& (0+255)
 14023  0F2A  0086               	movwf	6
 14024  0F2B  0187               	clrf	7
 14025  0F2C  0870               	movf	??_Battery_State_Machine,w
 14026  0F2D  0081               	movwf	1
 14027                           
 14028                           ;battery_charger.c: 50: Iref[z]=35;
 14029  0F2E  3575               	lslf	Battery_State_Machine@z,w
 14030  0F2F  3EBC               	addlw	(low (_Iref| 0))& (0+255)
 14031  0F30  0086               	movwf	6
 14032  0F31  0187               	clrf	7
 14033  0F32  3023               	movlw	35
 14034  0F33  3FC0               	movwi [0]fsr1
 14035  0F34  3000               	movlw	0
 14036  0F35  3FC1               	movwi [1]fsr1
 14037                           
 14038                           ;battery_charger.c: 51: }
 14039                           ;battery_charger.c: 52: }
 14040  0F36  0008               	return
 14041  0F37                     l2854:	
 14042                           
 14043                           ;battery_charger.c: 53: else if(batteryState[z]==CHARGE)
 14044  0F37  0875               	movf	Battery_State_Machine@z,w
 14045  0F38  3ED2               	addlw	(low (_batteryState| 0))& (0+255)
 14046  0F39  0086               	movwf	6
 14047  0F3A  0187               	clrf	7
 14048  0F3B  3004               	movlw	4
 14049  0F3C  0601               	xorwf	1,w
 14050  0F3D  1D03               	btfss	3,2
 14051  0F3E  2FE7               	goto	l2882
 14052                           
 14053                           ;battery_charger.c: 54: {
 14054                           ;battery_charger.c: 55: if(!Imode[z])
 14055  0F3F  0875               	movf	Battery_State_Machine@z,w
 14056  0F40  3ECE               	addlw	(low (_Imode| 0))& (0+255)
 14057  0F41  0086               	movwf	6
 14058  0F42  0187               	clrf	7
 14059  0F43  0801               	movf	1,w
 14060  0F44  1D03               	btfss	3,2
 14061  0F45  2FCE               	goto	l2878
 14062                           
 14063                           ;battery_charger.c: 56: {
 14064                           ;battery_charger.c: 57: if(current[z] < Imin[z])
 14065  0F46  3575               	lslf	Battery_State_Machine@z,w
 14066  0F47  3E3D               	addlw	(low (_Imin| (0+256)))& (0+255)
 14067  0F48  0086               	movwf	6
 14068  0F49  3001               	movlw	1	; select bank2/3
 14069  0F4A  0087               	movwf	7
 14070  0F4B  3F40               	moviw [0]fsr1
 14071  0F4C  00F0               	movwf	??_Battery_State_Machine
 14072  0F4D  3F41               	moviw [1]fsr1
 14073  0F4E  00F1               	movwf	??_Battery_State_Machine+1
 14074  0F4F  3575               	lslf	Battery_State_Machine@z,w
 14075  0F50  3EA8               	addlw	(low (_current| 0))& (0+255)
 14076  0F51  0086               	movwf	6
 14077  0F52  0187               	clrf	7
 14078  0F53  3F40               	moviw [0]fsr1
 14079  0F54  00F2               	movwf	??_Battery_State_Machine+2
 14080  0F55  3F41               	moviw [1]fsr1
 14081  0F56  00F3               	movwf	??_Battery_State_Machine+3
 14082  0F57  0873               	movf	??_Battery_State_Machine+3,w
 14083  0F58  3A80               	xorlw	128
 14084  0F59  00F4               	movwf	??_Battery_State_Machine+4
 14085  0F5A  0871               	movf	??_Battery_State_Machine+1,w
 14086  0F5B  3A80               	xorlw	128
 14087  0F5C  0274               	subwf	??_Battery_State_Machine+4,w
 14088  0F5D  1D03               	skipz
 14089  0F5E  2F61               	goto	u3235
 14090  0F5F  0870               	movf	??_Battery_State_Machine,w
 14091  0F60  0272               	subwf	??_Battery_State_Machine+2,w
 14092  0F61                     u3235:	
 14093  0F61  1803               	skipnc
 14094  0F62  2F8D               	goto	l2864
 14095                           
 14096                           ;battery_charger.c: 58: {
 14097                           ;battery_charger.c: 59: IminCount[z]-=2;
 14098  0F63  3575               	lslf	Battery_State_Machine@z,w
 14099  0F64  3EC4               	addlw	(low (_IminCount| 0))& (0+255)
 14100  0F65  0086               	movwf	6
 14101  0F66  0187               	clrf	7
 14102  0F67  3002               	movlw	2
 14103  0F68  0281               	subwf	1,f
 14104  0F69  3141               	addfsr 1,1
 14105  0F6A  3000               	movlw	0
 14106  0F6B  3B81               	subwfb	1,f
 14107  0F6C  317F               	addfsr 1,-1
 14108                           
 14109                           ;battery_charger.c: 60: if(IminCount[z]<10)
 14110  0F6D  3575               	lslf	Battery_State_Machine@z,w
 14111  0F6E  3EC4               	addlw	(low (_IminCount| 0))& (0+255)
 14112  0F6F  0086               	movwf	6
 14113  0F70  0187               	clrf	7
 14114  0F71  3F40               	moviw [0]fsr1
 14115  0F72  00F0               	movwf	??_Battery_State_Machine
 14116  0F73  3F41               	moviw [1]fsr1
 14117  0F74  00F1               	movwf	??_Battery_State_Machine+1
 14118  0F75  3000               	movlw	0
 14119  0F76  0271               	subwf	??_Battery_State_Machine+1,w
 14120  0F77  300A               	movlw	10
 14121  0F78  1903               	skipnz
 14122  0F79  0270               	subwf	??_Battery_State_Machine,w
 14123  0F7A  1803               	skipnc
 14124  0F7B  0008               	return
 14125                           
 14126                           ;battery_charger.c: 61: {
 14127                           ;battery_charger.c: 62: batteryState[z] = FLOAT;
 14128  0F7C  3005               	movlw	5
 14129  0F7D  00F0               	movwf	??_Battery_State_Machine
 14130  0F7E  0875               	movf	Battery_State_Machine@z,w
 14131  0F7F  3ED2               	addlw	(low (_batteryState| 0))& (0+255)
 14132  0F80  0086               	movwf	6
 14133  0F81  0187               	clrf	7
 14134  0F82  0870               	movf	??_Battery_State_Machine,w
 14135  0F83  0081               	movwf	1
 14136                           
 14137                           ;battery_charger.c: 63: IminCount[z]=10;
 14138  0F84  3575               	lslf	Battery_State_Machine@z,w
 14139  0F85  3EC4               	addlw	(low (_IminCount| 0))& (0+255)
 14140  0F86  0086               	movwf	6
 14141  0F87  0187               	clrf	7
 14142  0F88  300A               	movlw	10
 14143  0F89  3FC0               	movwi [0]fsr1
 14144  0F8A  3000               	movlw	0
 14145  0F8B  3FC1               	movwi [1]fsr1
 14146                           
 14147                           ;battery_charger.c: 64: }
 14148                           ;battery_charger.c: 65: }
 14149  0F8C  0008               	return
 14150  0F8D                     l2864:	
 14151                           
 14152                           ;battery_charger.c: 66: else
 14153                           ;battery_charger.c: 67: {
 14154                           ;battery_charger.c: 68: x+=1;
 14155  0F8D  3001               	movlw	1
 14156  0F8E  00F0               	movwf	??_Battery_State_Machine
 14157  0F8F  0870               	movf	??_Battery_State_Machine,w
 14158  0F90  0021               	movlb	1	; select bank1
 14159  0F91  07D6               	addwf	_x^(0+128),f
 14160                           
 14161                           ;battery_charger.c: 69: if(x>25)
 14162  0F92  301A               	movlw	26
 14163  0F93  0256               	subwf	_x^(0+128),w
 14164  0F94  1C03               	skipc
 14165  0F95  2FB5               	goto	l2874
 14166                           
 14167                           ;battery_charger.c: 70: {
 14168                           ;battery_charger.c: 71: if(Vref[z]>1378)Vref[z]-=1;
 14169  0F96  3575               	lslf	Battery_State_Machine@z,w
 14170  0F97  3EB8               	addlw	(low (_Vref| 0))& (0+255)
 14171  0F98  0086               	movwf	6
 14172  0F99  0187               	clrf	7
 14173  0F9A  3F40               	moviw [0]fsr1
 14174  0F9B  00F0               	movwf	??_Battery_State_Machine
 14175  0F9C  3F41               	moviw [1]fsr1
 14176  0F9D  00F1               	movwf	??_Battery_State_Machine+1
 14177  0F9E  0871               	movf	??_Battery_State_Machine+1,w
 14178  0F9F  3A80               	xorlw	128
 14179  0FA0  00F2               	movwf	??_Battery_State_Machine+2
 14180  0FA1  3085               	movlw	133
 14181  0FA2  0272               	subwf	??_Battery_State_Machine+2,w
 14182  0FA3  1D03               	skipz
 14183  0FA4  2FA7               	goto	u3265
 14184  0FA5  3063               	movlw	99
 14185  0FA6  0270               	subwf	??_Battery_State_Machine,w
 14186  0FA7                     u3265:	
 14187  0FA7  1C03               	skipc
 14188  0FA8  2FB3               	goto	l2872
 14189  0FA9  3575               	lslf	Battery_State_Machine@z,w
 14190  0FAA  3EB8               	addlw	(low (_Vref| 0))& (0+255)
 14191  0FAB  0086               	movwf	6
 14192  0FAC  0187               	clrf	7
 14193  0FAD  30FF               	movlw	255
 14194  0FAE  0781               	addwf	1,f
 14195  0FAF  3141               	addfsr 1,1
 14196  0FB0  30FF               	movlw	255
 14197  0FB1  3D81               	addwfc	1,f
 14198  0FB2  317F               	addfsr 1,-1
 14199  0FB3                     l2872:	
 14200                           
 14201                           ;battery_charger.c: 72: x=0;
 14202  0FB3  0021               	movlb	1	; select bank1
 14203  0FB4  01D6               	clrf	_x^(0+128)
 14204  0FB5                     l2874:	
 14205                           
 14206                           ;battery_charger.c: 73: }
 14207                           ;battery_charger.c: 74: if(IminCount[z]<100)IminCount[z]+=1;
 14208  0FB5  3575               	lslf	Battery_State_Machine@z,w
 14209  0FB6  3EC4               	addlw	(low (_IminCount| 0))& (0+255)
 14210  0FB7  0086               	movwf	6
 14211  0FB8  0187               	clrf	7
 14212  0FB9  3F40               	moviw [0]fsr1
 14213  0FBA  00F0               	movwf	??_Battery_State_Machine
 14214  0FBB  3F41               	moviw [1]fsr1
 14215  0FBC  00F1               	movwf	??_Battery_State_Machine+1
 14216  0FBD  3000               	movlw	0
 14217  0FBE  0271               	subwf	??_Battery_State_Machine+1,w
 14218  0FBF  3064               	movlw	100
 14219  0FC0  1903               	skipnz
 14220  0FC1  0270               	subwf	??_Battery_State_Machine,w
 14221  0FC2  1803               	skipnc
 14222  0FC3  0008               	return
 14223  0FC4  3575               	lslf	Battery_State_Machine@z,w
 14224  0FC5  3EC4               	addlw	(low (_IminCount| 0))& (0+255)
 14225  0FC6  0086               	movwf	6
 14226  0FC7  0187               	clrf	7
 14227  0FC8  3001               	movlw	1
 14228  0FC9  0781               	addwf	1,f
 14229  0FCA  3141               	addfsr 1,1
 14230  0FCB  1803               	skipnc
 14231  0FCC  0A81               	incf	1,f
 14232                           
 14233                           ;battery_charger.c: 75: }
 14234                           ;battery_charger.c: 76: }
 14235  0FCD  0008               	return
 14236  0FCE                     l2878:	
 14237                           
 14238                           ;battery_charger.c: 77: else if(IminCount[z]<100)IminCount[z]+=1;
 14239  0FCE  3575               	lslf	Battery_State_Machine@z,w
 14240  0FCF  3EC4               	addlw	(low (_IminCount| 0))& (0+255)
 14241  0FD0  0086               	movwf	6
 14242  0FD1  0187               	clrf	7
 14243  0FD2  3F40               	moviw [0]fsr1
 14244  0FD3  00F0               	movwf	??_Battery_State_Machine
 14245  0FD4  3F41               	moviw [1]fsr1
 14246  0FD5  00F1               	movwf	??_Battery_State_Machine+1
 14247  0FD6  3000               	movlw	0
 14248  0FD7  0271               	subwf	??_Battery_State_Machine+1,w
 14249  0FD8  3064               	movlw	100
 14250  0FD9  1903               	skipnz
 14251  0FDA  0270               	subwf	??_Battery_State_Machine,w
 14252  0FDB  1803               	skipnc
 14253  0FDC  0008               	return
 14254  0FDD  3575               	lslf	Battery_State_Machine@z,w
 14255  0FDE  3EC4               	addlw	(low (_IminCount| 0))& (0+255)
 14256  0FDF  0086               	movwf	6
 14257  0FE0  0187               	clrf	7
 14258  0FE1  3001               	movlw	1
 14259  0FE2  0781               	addwf	1,f
 14260  0FE3  3141               	addfsr 1,1
 14261  0FE4  1803               	skipnc
 14262  0FE5  0A81               	incf	1,f
 14263                           
 14264                           ;battery_charger.c: 78: }
 14265  0FE6  0008               	return
 14266  0FE7                     l2882:	
 14267                           
 14268                           ;battery_charger.c: 79: else if(batteryState[z] == FLOAT)
 14269  0FE7  0875               	movf	Battery_State_Machine@z,w
 14270  0FE8  3ED2               	addlw	(low (_batteryState| 0))& (0+255)
 14271  0FE9  0086               	movwf	6
 14272  0FEA  0187               	clrf	7
 14273  0FEB  3005               	movlw	5
 14274  0FEC  0601               	xorwf	1,w
 14275  0FED  1D03               	btfss	3,2
 14276  0FEE  0008               	return
 14277                           
 14278                           ;battery_charger.c: 80: {
 14279                           ;battery_charger.c: 81: Vref[z]=1378;
 14280  0FEF  3575               	lslf	Battery_State_Machine@z,w
 14281  0FF0  3EB8               	addlw	(low (_Vref| 0))& (0+255)
 14282  0FF1  0086               	movwf	6
 14283  0FF2  0187               	clrf	7
 14284  0FF3  3062               	movlw	98
 14285  0FF4  3FC0               	movwi [0]fsr1
 14286  0FF5  3005               	movlw	5
 14287  0FF6  3FC1               	movwi [1]fsr1
 14288                           
 14289                           ;battery_charger.c: 82: Iref[z]=15;
 14290  0FF7  3575               	lslf	Battery_State_Machine@z,w
 14291  0FF8  3EBC               	addlw	(low (_Iref| 0))& (0+255)
 14292  0FF9  0086               	movwf	6
 14293  0FFA  0187               	clrf	7
 14294  0FFB  300F               	movlw	15
 14295  0FFC  3FC0               	movwi [0]fsr1
 14296  0FFD  3000               	movlw	0
 14297  0FFE  3FC1               	movwi [1]fsr1
 14298                           
 14299                           ;battery_charger.c: 86: {
 14300                           
 14301                           ;battery_charger.c: 83: }
 14302  0FFF  0008               	return
 14303  1000                     __end_of_Battery_State_Machine:	
 14304  007E                     btemp	set	126	;btemp
 14305  007E                     wtemp0	set	126


Data Sizes:
    Strings     14
    Constant    330
    Data        8
    BSS         93
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     74      79
    BANK1            80     25      80
    BANK2            80      0      41
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5             8      0       0
    BANK6             0      0       0
    BANK7             0      0       0
    BANK8             0      0       0
    BANK9             0      0       0
    BANK10            0      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 27
		 -> log@coeff(CODE[27]), 

    LCDWriteString@characters	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_3(CODE[5]), STR_2(CODE[5]), STR_1(CODE[4]), 


Critical Paths under _main in COMMON

    _main->_LCDWriteString
    _main->___awtoft
    _tempCalc->___awtoft
    _log->___awtoft
    ___ftmul->___awtoft
    ___ftadd->___awtoft
    _readIAnalog->___aldiv
    _readButton->_ADCRead
    _calculateCurrent3->___awtoft
    _calculateCurrent2->___awtoft
    _calculateCurrent1->___awtoft
    _calculateCurrent0->___awtoft
    ___fttol->___awtoft
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    _SYSTEM_Initialize->_LCDClear
    _LCDInit->_LCDWrite
    _LCDClear->_gotoXY
    _gotoXY->_LCDWrite
    _LCDWriteString->_LCDWriteCharacter
    _LCDWriteInt->_LCDWriteCharacter
    _LCDWriteCharacter->___wmul

Critical Paths under _main in BANK0

    _main->_tempCalc
    _tempCalc->_log
    _log->_eval_poly
    _eval_poly->___ftadd
    ___ftsub->___ftadd
    ___ftadd->___ftdiv
    _readIAnalog->___aldiv
    _calculateCurrent3->___fttol
    _calculateCurrent2->___fttol
    _calculateCurrent1->___fttol
    _calculateCurrent0->___fttol
    ___fttol->___ftdiv
    ___ftdiv->___ftmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                27    27      0   88772
                                             72 BANK0      2     2      0
                                              0 BANK1     25    25      0
                            _ADCRead
              _Battery_State_Machine
                           _LCDClear
                            _LCDInit
                  _LCDWriteCharacter
                        _LCDWriteInt
                     _LCDWriteString
                 _PWM6_LoadDutyValue
                 _PWM7_LoadDutyValue
                  _SYSTEM_Initialize
                           ___awtoft
                            ___ftdiv
                            ___fttol
                  _calculateCurrent0
                  _calculateCurrent1
                  _calculateCurrent2
                  _calculateCurrent3
                         _cc_cv_mode
                             _gotoXY
                         _readButton
                        _readIAnalog
                           _tempCalc
 ---------------------------------------------------------------------------------
 (1) _tempCalc                                            11     9      2   32394
                                             61 BANK0     11     9      2
                            _ADCRead (ARG)
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftsub
                            ___fttol
                                _log
 ---------------------------------------------------------------------------------
 (2) _log                                                  6     3      3   16167
                                             55 BANK0      6     3      3
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _frexp                                                6     2      4     330
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) _eval_poly                                           10     3      7    6997
                                             45 BANK0     10     3      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             16    10      6    2643
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6     322
                                              0 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3462
                                             45 BANK0      6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             13     7      6    3289
                                             32 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (1) _readIAnalog                                         24    22      2    1498
                                              9 COMMON     4     4      0
                                              6 BANK0     20    18      2
                            _ADCRead
                            ___aldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     406
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _readButton                                           2     2      0      22
                                              4 COMMON     2     2      0
                            _ADCRead
 ---------------------------------------------------------------------------------
 (2) _ADCRead                                              4     1      3      22
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _cc_cv_mode                                           6     6      0     484
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 (1) _calculateCurrent3                                    3     3      0    6528
                                             46 BANK0      3     3      0
                           ___awtoft
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (1) _calculateCurrent2                                    3     3      0    6528
                                             46 BANK0      3     3      0
                           ___awtoft
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (1) _calculateCurrent1                                    3     3      0    6528
                                             46 BANK0      3     3      0
                           ___awtoft
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (1) _calculateCurrent0                                    3     3      0    6528
                                             46 BANK0      3     3      0
                           ___awtoft
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     729
                                             32 BANK0     14    10      4
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    3471
                                             16 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             6     3      3    2328
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    1707
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    2     2      0    3926
                                             11 COMMON     2     2      0
                     _ADC_Initialize
         _Init_Battery_State_Machine
                           _LCDClear
                            _LCDInit
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PWM_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCDInit                                              1     1      0     803
                                              5 COMMON     1     1      0
                           _LCDWrite
 ---------------------------------------------------------------------------------
 (2) _LCDClear                                             3     3      0    2968
                                              8 COMMON     3     3      0
                           _LCDWrite
                             _gotoXY
 ---------------------------------------------------------------------------------
 (1) _gotoXY                                               3     2      1    2119
                                              5 COMMON     3     2      1
                           _LCDWrite
 ---------------------------------------------------------------------------------
 (2) _Init_Battery_State_Machine                           2     2      0     132
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM7_LoadDutyValue                                   4     2      2      97
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _PWM6_LoadDutyValue                                   4     2      2      97
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCDWriteString                                       3     1      2    1847
                                             12 COMMON     2     0      2
                                              0 BANK0      1     1      0
                  _LCDWriteCharacter
 ---------------------------------------------------------------------------------
 (1) _LCDWriteInt                                         16    11      5    7055
                                              0 BANK0     16    11      5
                  _LCDWriteCharacter
                            ___awdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     265
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     406
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (2) _LCDWriteCharacter                                    6     6      0    1643
                                              6 COMMON     6     6      0
                           _LCDWrite
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     728
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) _LCDWrite                                             5     4      1     803
                                              0 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (1) _Battery_State_Machine                                6     6      0     550
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCRead
   _Battery_State_Machine
   _LCDClear
     _LCDWrite
     _gotoXY
       _LCDWrite
   _LCDInit
     _LCDWrite
   _LCDWriteCharacter
     _LCDWrite
     ___wmul
   _LCDWriteInt
     _LCDWriteCharacter
       _LCDWrite
       ___wmul
     ___awdiv
     ___lwmod
   _LCDWriteString
     _LCDWriteCharacter
       _LCDWrite
       ___wmul
   _PWM6_LoadDutyValue
   _PWM7_LoadDutyValue
   _SYSTEM_Initialize
     _ADC_Initialize
     _Init_Battery_State_Machine
     _LCDClear
       _LCDWrite
       _gotoXY
         _LCDWrite
     _LCDInit
       _LCDWrite
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM_Initialize
     _TMR2_Initialize
     _TMR4_Initialize
   ___awtoft
     ___ftpack
   ___ftdiv
     ___awtoft (ARG)
       ___ftpack
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftpack (ARG)
     ___ftpack (ARG)
   ___fttol
     ___awtoft (ARG)
       ___ftpack
     ___ftdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
   _calculateCurrent0
     ___awtoft
       ___ftpack
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
   _calculateCurrent1
     ___awtoft
       ___ftpack
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
   _calculateCurrent2
     ___awtoft
       ___ftpack
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
   _calculateCurrent3
     ___awtoft
       ___ftpack
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
   _cc_cv_mode
   _gotoXY
     _LCDWrite
   _readButton
     _ADCRead
   _readIAnalog
     _ADCRead
     ___aldiv
     ___wmul
   _tempCalc
     _ADCRead (ARG)
     ___awtoft (ARG)
       ___ftpack
     ___ftadd (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
       _frexp (ARG)
     ___ftdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftsub (ARG)
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
     ___fttol (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
     _log (ARG)
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftge
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       _eval_poly
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___wmul
       _frexp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4A      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     19      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      29       9       51.3%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5                8      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      D6      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BANK8                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BANK9                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK10               0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      D6      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon Jul 09 17:08:34 2018

                       _stateCounter 00C0                                    _j 006C  
                                  _x 00D6               LCDWriteInt@fieldLength 0022  
            __size_of_PWM_Initialize 0015                          __CFG_CP$OFF 0000  
                                 l60 1317                                   l57 1310  
                       ___awdiv@sign 0076                  ___wmul@multiplicand 0072  
        __size_of_PWM6_LoadDutyValue 0016                         ___ftadd@exp1 004C  
                       ___ftadd@exp2 004B                          __CFG_LVP$ON 0000  
                       ___ftadd@sign 004A                                  l131 0D9D  
                                l215 13CD                                  l127 0D5B  
                                l216 13CF                                  l217 13D5  
                                l218 13E5                                  l219 13D9  
                      LCDClear@index 0079                                  l631 096F  
                                l576 1352                                  l744 175F  
                                l745 1767                                  l737 174C  
                                l828 0A4D                                  l768 0E8E  
                                _GIE 005F                                  _RB2 006A  
                       __CFG_CPD$OFF 0000                                  _log 0B10  
                    __end_of_ADCRead 131E                      _TMR2_Initialize 12B1  
                       __CFG_BORV$LO 0000                                  wreg 0009  
                    __end_of_LCDInit 14EB                         ?_LCDWriteInt 0020  
                       __CFG_ZCD$OFF 0000                         ___ftdiv@cntr 003A  
                       ___ftdiv@sign 003F                                 l3010 0D18  
                               l2202 1751                                 l3004 0CE3  
                               l2204 1759                                 l2300 0E8A  
                               l3006 0D0A                                 l3102 0315  
                               l2240 134C                                 l2304 0EA0  
                               l3200 04F3                                 l3120 0365  
                               l3210 0511                                 l3114 0339  
                               l3052 157A                                 l2308 0EB2  
                               l3108 031B                                 l3070 1649  
                               l2318 0ECD                                 l2262 0E1E  
                               l2350 0C30                                 l2334 0BED  
                               l2414 1538                                 l3222 053F  
                               l3206 050A                                 l3150 043D  
                               l2512 1408                                 l2192 1729  
                               l3064 1604                                 l2280 0E47  
                               l2328 0BD7                                 l2432 005D  
                               l2506 13F4                                 l2194 1733  
                               l3058 15BF                                 l2290 0E69  
                               l2258 0E17                                 l2362 0C4C  
                               l2346 0C28                                 l3162 0474  
                               l2700 16B9                                 l2196 1738  
                               l2188 1722                                 l2292 0E6D  
                               l2268 0E2D                                 l3180 04A6  
                               l3156 045A                                 l2382 13AC  
                               l2286 0E5A                                 l2390 1501  
                               l2358 0C44                                 l2614 0B42  
                               l3350 07B6                                 l3174 0489  
                               l3094 0301                                 l2704 16C1  
                               l2720 0A94                                 l2288 0E64  
                               l2608 0B2F                                 l2810 0944  
                               l2714 0A7E                                 l2642 0990  
                               l2634 0980                                 l2298 0E80  
                               l2394 1517                                 l3354 07BF  
                               l3186 04C0                                 l2900 0D76  
                               l2660 09D7                                 l2652 09BE  
                               l2644 099E                                 l2814 0950  
                               l2742 0AEE                                 l2734 0AD5  
                               l2672 167F                                 l2808 0938  
                               l2656 09C9                                 l2850 0F1F  
                               l2690 169E                                 l2818 0959  
                               l2930 17D0                                 l2754 136D  
                               l2852 0F26                                 l2764 09F9  
                               l2924 17BC                                 l2836 02A4  
                               l2854 0F37                                 l2678 168A  
                               l2790 0A44                                 l2782 0A29  
                               l2950 17FD                                 l2918 17A2  
                               l2872 0FB3                                 l2864 0F8D  
                               l2696 16B0                                 l2688 1692  
                               l2792 0A50                                 l2784 0A37  
                               l2944 17E5                                 l2952 17FE  
                               l2928 17CE                                 l2874 0FB5  
                               l2882 0FE7                                 l2962 12E0  
                               l2938 17DC                                 l2796 0A5E  
                               l2878 0FCE                                 l2992 0CCD  
                               l2976 0C95                                 l2896 0D69  
                               l2994 0CD1                                 l2986 0C9C  
                               l2996 0CD9                                 l2988 0CC9  
                               ?_log 0057                                 l2998 0CDF  
                               STR_1 1825                                 STR_2 1820  
                               STR_3 181B                                 u2015 1747  
                               u2035 1754                                 _LATA 0016  
                               _LATB 0017                                 _LATC 0018  
                               u2145 1353                                 u3025 0A45  
                               u2155 1358                                 u2075 176E  
                               u3115 0197                                 u3205 0F12  
                               u3125 01F1                                 u2325 0E6E  
                               u3135 022F                                 u3065 093B  
                               u3305 0D48                                 u3145 027E  
                               u2265 0E48                                 u2505 0C53  
                               u2425 0BF9                                 _T2PR 028D  
                               u3235 0F61                                 u2355 0E81  
                               u2435 0C09                                 u2620 1475  
                               u3085 094A                                 u2605 13F2  
                               u3405 17AC                                 u3095 0951  
                               u2615 1406                                 u3415 17B8  
                               u3175 02B0                                 u2295 0E5B  
                               u2455 0C31                                 u3265 0FA7  
                               u3425 17C6                                 u2465 0C37  
                               _T4PR 0293                                 u3195 0EFF  
                               u3355 0DB7                                 u2715 099F  
                               u3605 15B9                                 u2725 09B3  
                               u2815 169F                                 u3615 15FE  
                               u2735 09BF                                 u2495 0C4D  
                               u3480 0C7F                                 u2825 16A9  
                               u3545 0CF8                                 u2905 0AD6  
                               u3625 1643                                 u3385 1790  
                               u2835 16B1                                 u2915 0AE5  
                               u3395 179C                                 u2925 0AEF  
                               u3805 0497                                 u3725 044B  
                               u3575 132D                                 u2695 0993  
                               u3585 1343                                 u3825 04B5  
                               u3745 0469                                 u2795 1695  
                               u1995 172E                                 u3595 1574  
                               u2885 0AA6                                 u2965 0A00  
                               u3685 042B                                 u2895 0AB6  
                               u3855 04EC                                 u3775 0486  
                               u3937 0309                                 u2995 0A2A  
                               u3947 17EF                                 u3875 0503  
                               u3957 1499                                 u3967 14A8  
                tempCalc@analogValue 005D                                 _WPUA 0F39  
                               _WPUB 0F44                                 _WPUC 0F4F  
                               _WPUE 0F65                                 _Imin 013D  
                               _Iref 00BC                                 _Iout 00D0  
                       __CFG_WRT$OFF 0000                        __CFG_FCMEN$ON 0000  
                               _Vref 00B8                                 _main 02CD  
                       ___ftpack@arg 0070                         ___ftpack@exp 0073  
                               fsr0h 0005                                 fsr1h 0007  
                               indf0 0000                                 fsr0l 0004  
                               indf1 0001                                 fsr1l 0006  
                               btemp 007E                                 log@x 0057  
                       ?_readIAnalog 0026                        __CFG_BOREN$ON 0000  
                               start 0002                        __CFG_CSWEN$ON 0000  
                      __CFG_MCLRE$ON 0000                         ___ftmul@cntr 002E  
                       ___ftmul@sign 002F                     __end_of_LCDClear 140D  
                       ___fttol@exp1 004D                                ??_log 005A  
                       ___fttol@lval 0049  __size_of_Init_Battery_State_Machine 0033  
     __size_of_OSCILLATOR_Initialize 0009                     __end_of_LCDWrite 13E7  
      __end_of_OSCILLATOR_Initialize 12A5                      __end_of___aldiv 09E0  
                              _ADACQ 009D                                _ADACT 0099  
                              _ADCAP 009B                                ?_main 0070  
                              _ADCLK 0098                                _ADPCH 009E  
                              _ADREF 009A                      __end_of___awdiv 16C6  
                              _ADPRE 009C                      __end_of___ftadd 0EE5  
                      __CFG_WDTE$OFF 0000                                _ADRPT 010D  
                    __end_of___ftdiv 0B10                      __end_of___ftmul 0C74  
                    ___awdiv@divisor 0070                      __end_of___ftsub 1383  
                    __end_of___fttol 0A67                                _T2CON 028E  
                              _LATA5 00B5                                _T4CON 0294  
                              _T2HLT 028F                                _T4HLT 0295  
                              _T2TMR 028C                                _T2RST 0291  
                    __end_of___lwmod 095E                                _T4TMR 0292  
                              _T4RST 0297                      ___awdiv@counter 0075  
                              _OSCEN 0891                                _TRISA 0011  
                              _TRISB 0012                                _TRISC 0013  
                    _TMR4_Initialize 12BF                                _Imode 00CE  
             ?_Battery_State_Machine 0070                                _cc_cv 00CC  
                      ___awtoft@sign 007D                                _frexp 1526  
                              _fonts 0800                                _errno 00C8  
                      ___ftpack@sign 0074                                main@j 00EB  
                       main@slowLoop 00E4                                status 0003  
                              wtemp0 007E                      __initialization 07C2  
                        log@exponent 005B                         __end_of_main 07C2  
            __end_of_TMR2_Initialize 12BF                            ??_ADCRead 0073  
                             ??_main 0068                        ___fttol@sign1 0048  
                          ??_LCDInit 0075               Battery_State_Machine@z 0075  
            LCDWrite@data_or_command 0072                               _ADCON0 0093  
                             _ADCON1 0094                               _ADCON2 0095  
                             _ADCON3 0096                               ?_frexp 0070  
                             _ADLTHH 010F                               _ADLTHL 010E  
                             _ADRESH 008D                               _ADRESL 008C  
                             _ADSTAT 0097                               _ADUTHH 0111  
                   ___awdiv@dividend 0072                               _ADUTHL 0110  
                   __end_of___awtoft 13C2                               _ANSELA 0F38  
                             _ANSELB 0F43                               _ANSELC 0F4E  
                   __end_of___ftpack 177E                               _RB0PPS 0F18  
                             _RA6PPS 0F16                               _RA7PPS 0F17  
                     __CFG_WDTCCS$SC 0000                               _FVRCON 090C  
                             _OSCFRQ 0893                       __CFG_PWRTE$OFF 0000  
                     _LCDWriteString 12E0                         _CCPTMRS1bits 021F  
                             ___ftge 14EB                            ??___aldiv 0078  
                             ___wmul 134A                            ??___awdiv 0074  
                          ??___ftadd 0046                       __CFG_STVREN$ON 0000  
                     _PWM_Initialize 12F4                            ??___ftdiv 0036  
                          ??___ftmul 0026                            ??___ftsub 007E  
                          ??___fttol 0044                            ??___lwmod 0074  
                             _gotoXY 12CD                               _button 006E  
            __end_of_TMR4_Initialize 12CD                     ___awdiv@quotient 0077  
                             _totals 0120                ___ftmul@f3_as_product 002B  
                   __end_of_tempCalc 0181                         LCDWrite@data 0070  
                       LCDWriteInt@i 002F                         LCDWriteInt@j 002E  
                          ?_LCDClear 0070                    _SYSTEM_Initialize 1477  
               __size_of_LCDWriteInt 00B9                     __end_oflog@coeff 181B  
            __end_of__initialization 07FD                           ___ftadd@f1 0040  
                         ___ftadd@f2 0043                           ___ftge@ff1 0070  
                         ___ftge@ff2 0073                            ?_LCDWrite 0070  
                 ?_SYSTEM_Initialize 0070               __end_of_LCDWriteString 12F4  
                       eval_poly@res 0054                           ___ftdiv@f1 0033  
                         ___ftdiv@f2 0030                           ___ftdiv@f3 003B  
                         ___awtoft@c 0078                           ___ftmul@f1 0020  
                         ___ftmul@f2 0023               __end_of_PWM_Initialize 1309  
               __size_of_readIAnalog 014C                           ___ftsub@f1 0050  
                         ___ftsub@f2 004D                           ___fttol@f1 0040  
                     __pcstackCOMMON 0070                         __pidataBANK2 1294  
                ??_SYSTEM_Initialize 007B                        __end_of_frexp 1561  
                      __end_of_fonts 092F                            LCDWrite@d 0073  
                          LCDWrite@i 0074                     ?_TMR2_Initialize 0070  
                         _cc_cv_mode 0D2D          __size_of_PWM7_LoadDutyValue 0016  
                     main@efficiency 00D7                    LCDWriteInt@F14387 0138  
                  _calculateCurrent0 1561                    _calculateCurrent1 15A6  
                  _calculateCurrent2 15EB                    _calculateCurrent3 1630  
                            ??_frexp 0074            __end_of_SYSTEM_Initialize 14B0  
                         __pbssBANK0 006A                           __pbssBANK1 00A0  
                         __pbssBANK2 0120                   ?_calculateCurrent0 0070  
                 ?_calculateCurrent1 0070                   ?_calculateCurrent2 0070  
                 ?_calculateCurrent3 0070                         _batteryState 00D2  
                 __size_of_eval_poly 0060                           ??_LCDClear 0078  
                     main@faultCount 00E0                           ??_LCDWrite 0071  
                    ?_LCDWriteString 007C                  ??_calculateCurrent0 004E  
                ??_calculateCurrent1 004E                  ??_calculateCurrent2 004E  
                ??_calculateCurrent3 004E                      ?_PWM_Initialize 0070  
                         __pmaintext 02CD                              ?___ftge 0070  
                            ?___wmul 0070                      __CFG_PPS1WAY$ON 0000  
         __end_of_PWM6_LoadDutyValue 1334                              ?_gotoXY 0075  
                            _ADCRead 1309                     ?_TMR4_Initialize 0070  
                          ?___awtoft 0078                            ?___ftpack 0070  
                            _ADSTPTH 0113                              _ADSTPTL 0112  
           __CFG_SCANE$not_available 0000                  __CFG_RSTOSC$HFINT32 0000  
            __size_of_ADC_Initialize 001F              ??_Battery_State_Machine 0070  
                            _LCDInit 14B0            __end_of_calculateCurrent0 15A6  
          __end_of_calculateCurrent1 15EB            __end_of_calculateCurrent2 1630  
          __end_of_calculateCurrent3 1675                              _OSCCON1 088D  
                            _OSCCON3 088F                              _OSCTUNE 0892  
                            _PWM6DCH 038D                              _PWM6DCL 038C  
                            _PWM7DCH 0391                              _PWM7DCL 0390  
                            _PWM6CON 038E                              _PWM7CON 0392  
                            _PPSLOCK 0E8F                       main@menuButton 00EA  
                     main@dutyCycle1 00DA                       main@dutyCycle6 00EC  
                     main@dutyCycle7 00EE                           _lastButton 006D  
                          ?_tempCalc 005D                              ___aldiv 095E  
                    __size_of___ftge 003B                              ___awdiv 1675  
                            ___ftadd 0DEF                           _readButton 177E  
                            ___ftdiv 0A67                      __size_of___wmul 001B  
                            ___ftmul 0BC0                              ___ftsub 1365  
                            ___fttol 09E0                   main@displayRefresh 00E5  
                            ___lwmod 0932                      __size_of_gotoXY 0013  
                         ??___awtoft 007B                           ??___ftpack 0075  
                  __end_of_eval_poly 0064                              __ptext1 0064  
                            __ptext2 0B10                              __ptext3 1526  
                            __ptext4 0004                              __ptext5 0BC0  
                            __ptext6 14EB                              __ptext7 1365  
                            __ptext8 0DEF                              __ptext9 0181  
                        ?_cc_cv_mode 0070                _OSCILLATOR_Initialize 129C  
                          _T2CONbits 028E                              _current 00A8  
                       __size_of_log 00B0                       ADCRead@channel 0073  
                   ___aldiv@dividend 0074                            _T4CONbits 0294  
           ??_PIN_MANAGER_Initialize 0070                              _samples 2198  
         __size_of_SYSTEM_Initialize 0039                              clrloop0 12A6  
                            _voltage 00B0         ??_Init_Battery_State_Machine 0070  
               end_of_initialization 07FD                LCDWriteCharacter@base 007A  
                            gotoXY@x 0077                              gotoXY@y 0075  
                         ??_tempCalc 007E                     ___aldiv@quotient 0022  
                  _LCDWriteCharacter 16C6                __CFG_WDTCPS$WDTCPS_31 0000  
                 ?_LCDWriteCharacter 0070           __size_of_calculateCurrent0 0045  
         __size_of_calculateCurrent1 0045           __size_of_calculateCurrent2 0045  
         __size_of_calculateCurrent3 0045                            _TRISAbits 0011  
                ??_LCDWriteCharacter 0076                     __CFG_FEXTOSC$OFF 0000  
                        ___ftdiv@exp 003E                  __size_of_cc_cv_mode 00C2  
                  __size_of_LCDClear 0026           LCDWriteCharacter@character 0079  
                  __size_of_LCDWrite 0025                          ___ftmul@exp 002A  
          __end_of_LCDWriteCharacter 171A                          ?_readButton 0070  
          readIAnalog@analog_channel 0079                       __end_of___ftge 1526  
                          _VHoldMode 00CA                       __end_of___wmul 1365  
                     _ADC_Initialize 1383                       __end_of_gotoXY 12E0  
             ?_OSCILLATOR_Initialize 0070                            _IminCount 00C4  
                start_initialization 07C2                           eval_poly@d 0050  
                         eval_poly@n 0052                           eval_poly@x 004D  
                  main@faultNotReset 00E2      __size_of_PIN_MANAGER_Initialize 0037  
                        __end_of_log 0BC0                        ??_LCDWriteInt 0025  
                   ??_LCDWriteString 0020                           frexp@value 0070  
                   ??_PWM_Initialize 0070                        ??_readIAnalog 0028  
                    main@batteryTemp 00DE                     __CFG_LPBOREN$OFF 0000  
                           ??___ftge 0076                    tempCalc@steinhart 0065  
                           ??___wmul 0074               __end_of_ADC_Initialize 13A2  
                      _tempCalc$1186 0062                          __pdataBANK2 0141  
         __end_of_PWM7_LoadDutyValue 134A                             ??_gotoXY 0076  
                           ?_ADCRead 0070         PWM7_LoadDutyValue@dutyCycle7 0070  
                  __size_of___awtoft 0020                             ?_LCDInit 0070  
                  __size_of___ftpack 0064                          __pbssBIGRAM 2198  
     __size_of_Battery_State_Machine 011B        __end_of_Battery_State_Machine 1000  
                          ___latbits 0002                        __pcstackBANK0 0020  
                      __pcstackBANK1 00D7                   _PWM6_LoadDutyValue 131E  
           __size_of_TMR2_Initialize 000E   __end_of_Init_Battery_State_Machine 1440  
         _Init_Battery_State_Machine 140D                  __size_of_readButton 0082  
                ?_PWM6_LoadDutyValue 0070                  __end_of_LCDWriteInt 0D2D  
             _PIN_MANAGER_Initialize 1440           __size_of_LCDWriteCharacter 0054  
                           ?___aldiv 0070                  __end_of_readIAnalog 02CD  
                  __size_of_tempCalc 011D                             ?___awdiv 0070  
                           ?___ftadd 0040                             ?___ftdiv 0030  
                           ?___ftmul 0020                             ?___ftsub 004D  
                           ?___fttol 0040                     LCDWriteInt@value 0020  
                           ?___lwmod 0070                      ?_ADC_Initialize 0070  
               ??_PWM6_LoadDutyValue 0072                         ??_cc_cv_mode 0070  
                          _eval_poly 0004             __size_of_TMR4_Initialize 000E  
                     __size_of_frexp 003B                             _T2CLKCON 0290  
                           _T4CLKCON 0296                          cc_cv_mode@z 0075  
                           _LCDClear 13E7                      ___aldiv@divisor 0070  
                    ___aldiv@counter 0020                       ___wmul@product 0074  
                           _LATAbits 0016                             _LCDWrite 13C2  
                          clear_ram0 12A5                             _PIE0bits 0716  
                 __end_of_cc_cv_mode 0DEF                             _PIR4bits 0710  
                   readIAnalog@value 007B                            main@MPPT0 00E6  
                          main@MPPT1 00E8                     __size_of_ADCRead 0015  
                         _ADCON0bits 0093                    ___wmul@multiplier 0070  
                         ?_eval_poly 004D                     __size_of_LCDInit 003B  
                           _Ianalogs 00A0                          _LCDWriteInt 0C74  
        Init_Battery_State_Machine@z 0071                    ??_TMR2_Initialize 0070  
                        _readIAnalog 0181                            frexp@eptr 0073  
                           _Vanalogs 0130                         ??_readButton 0074  
            ??_OSCILLATOR_Initialize 0070                 LCDWriteInt@numPlaces 0023  
                   __size_of___aldiv 0082                     __size_of___awdiv 0051  
                   __size_of___ftadd 00F6                     __size_of___ftdiv 00A9  
                   __size_of___ftmul 00B4                     __size_of___ftsub 001E  
                   __size_of___fttol 0087                     __size_of___lwmod 002C  
                        _readButtons 006A                             ___awtoft 13A2  
                           ___ftpack 171A                             _channels 0141  
                           __ptext10 095E                             __ptext11 177E  
                           __ptext20 13A2                             __ptext12 1309  
                           __ptext21 171A                             __ptext13 0D2D  
                           __ptext30 12CD                             __ptext22 1477  
                           __ptext14 1630                             __ptext31 140D  
                           __ptext23 12BF                             __ptext15 15EB  
                           __ptext40 134A                             __ptext32 1383  
                           __ptext24 12B1                             __ptext16 15A6  
                           __ptext41 13C2                             __ptext33 1334  
                           __ptext25 12F4                             __ptext17 1561  
                           __ptext42 0EE5                             __ptext34 131E  
                           __ptext26 1440                             __ptext18 09E0  
                           __ptext35 12E0                             __ptext27 129C  
                           __ptext19 0A67                             __ptext36 0C74  
                           __ptext28 14B0                             __ptext37 0932  
                           __ptext29 13E7                             __ptext38 1675  
                           __ptext39 16C6                      LCDWriteInt@sign 0024  
                          tempCalc@R 005F                   __end_of_readButton 1800  
                  ??_TMR4_Initialize 0070                        __size_of_main 04F5  
               __CFG_WDTCWS$WDTCWS_7 0000                             _tempCalc 0064  
        PIN_MANAGER_Initialize@state 0070                             log@coeff 1800  
                        ??_eval_poly 007E                          _sampleIndex 00D4  
                 _PWM7_LoadDutyValue 1334          ?_Init_Battery_State_Machine 0070  
                   ___lwmod@dividend 0072                       LCDWriteInt@str 0029  
            ?_PIN_MANAGER_Initialize 0070                  ?_PWM7_LoadDutyValue 0070  
                  __CFG_CLKOUTEN$OFF 0000                          _PPSLOCKbits 0E8F  
                   ??_ADC_Initialize 0070         PWM6_LoadDutyValue@dutyCycle6 0070  
                      __pstringtext1 0800                        __pstringtext2 1800  
                      __pstringtext3 1820                        __pstringtext4 1825  
                      __pstringtext5 0000                 ??_PWM7_LoadDutyValue 0072  
                    ___lwmod@divisor 0070                      ___lwmod@counter 0075  
           LCDWriteString@characters 007C                         ___aldiv@sign 0021  
                 readIAnalog@channel 0026                _Battery_State_Machine 0EE5  
     __end_of_PIN_MANAGER_Initialize 1477                        main@IOutTotal 00DC  
            __size_of_LCDWriteString 0014  
