

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Fri Jul 06 14:41:36 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	stringtext2,global,class=STRCODE,delta=2
     8                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1
    10                           	psect	stringtext3,global,class=STRCODE,delta=2
    11                           	psect	stringtext4,global,class=STRCODE,delta=2
    12                           	psect	cinit,global,class=CODE,merge=1,delta=2
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    17                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    18                           	psect	clrtext,global,class=CODE,delta=2
    19                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    20                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    22                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    23                           	psect	text1,local,class=CODE,merge=1,delta=2
    24                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text9,local,class=CODE,merge=1,delta=2
    32                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text11,local,class=CODE,merge=1,delta=2
    34                           	psect	text12,local,class=CODE,merge=1,delta=2
    35                           	psect	text13,local,class=CODE,merge=1,delta=2
    36                           	psect	text14,local,class=CODE,merge=1,delta=2
    37                           	psect	text15,local,class=CODE,merge=1,delta=2
    38                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text20,local,class=CODE,merge=1,delta=2
    43                           	psect	text21,local,class=CODE,merge=1,delta=2
    44                           	psect	text22,local,class=CODE,merge=1,delta=2
    45                           	psect	text23,local,class=CODE,merge=1,delta=2
    46                           	psect	text24,local,class=CODE,merge=1,delta=2
    47                           	psect	text25,local,class=CODE,merge=1,delta=2
    48                           	psect	text26,local,class=CODE,merge=1,delta=2
    49                           	psect	text27,local,class=CODE,merge=1,delta=2
    50                           	psect	text28,local,class=CODE,merge=1,delta=2
    51                           	psect	text29,local,class=CODE,merge=1,delta=2
    52                           	psect	text30,local,class=CODE,merge=1,delta=2
    53                           	psect	text31,local,class=CODE,merge=1,delta=2
    54                           	psect	text32,local,class=CODE,merge=1,delta=2
    55                           	psect	text33,local,class=CODE,merge=1,delta=2
    56                           	psect	text34,local,class=CODE,merge=1,delta=2,group=2
    57                           	psect	text35,local,class=CODE,merge=1,delta=2,group=2
    58                           	psect	text36,local,class=CODE,merge=1,delta=2
    59                           	psect	text37,local,class=CODE,merge=1,delta=2
    60                           	psect	text38,local,class=CODE,merge=1,delta=2
    61                           	psect	text39,local,class=CODE,merge=1,delta=2
    62                           	psect	text40,local,class=CODE,merge=1,delta=2,group=2
    63                           	psect	text41,local,class=CODE,merge=1,delta=2
    64                           	dabs	1,0x620,48
    65                           	dabs	1,0x5A0,80
    66                           	dabs	1,0x520,80
    67                           	dabs	1,0x4A0,80
    68                           	dabs	1,0x420,80
    69                           	dabs	1,0x3A0,80
    70                           	dabs	1,0x320,80
    71                           	dabs	1,0x2A8,72
    72                           	dabs	1,0x2198,0,_samples
    73                           	dabs	1,0x7E,2
    74  0000                     
    75                           ; Version 1.45
    76                           ; Generated 16/11/2017 GMT
    77                           ; 
    78                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    79                           ; All rights reserved.
    80                           ; 
    81                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    82                           ; 
    83                           ; Redistribution and use in source and binary forms, with or without modification, are
    84                           ; permitted provided that the following conditions are met:
    85                           ; 
    86                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    87                           ;        conditions and the following disclaimer.
    88                           ; 
    89                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    90                           ;        of conditions and the following disclaimer in the documentation and/or other
    91                           ;        materials provided with the distribution.
    92                           ; 
    93                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    94                           ;        software without specific prior written permission.
    95                           ; 
    96                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    97                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    98                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    99                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   100                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   101                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   102                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   103                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   104                           ; 
   105                           ; 
   106                           ; Code-generator required, PIC16F18855 Definitions
   107                           ; 
   108                           ; SFR Addresses
   109  0000                     	;# 
   110  0001                     	;# 
   111  0002                     	;# 
   112  0003                     	;# 
   113  0004                     	;# 
   114  0005                     	;# 
   115  0006                     	;# 
   116  0007                     	;# 
   117  0008                     	;# 
   118  0009                     	;# 
   119  000A                     	;# 
   120  000B                     	;# 
   121  000C                     	;# 
   122  000D                     	;# 
   123  000E                     	;# 
   124  0010                     	;# 
   125  0011                     	;# 
   126  0012                     	;# 
   127  0013                     	;# 
   128  0016                     	;# 
   129  0017                     	;# 
   130  0018                     	;# 
   131  001C                     	;# 
   132  001C                     	;# 
   133  001D                     	;# 
   134  001D                     	;# 
   135  001E                     	;# 
   136  001F                     	;# 
   137  008C                     	;# 
   138  008C                     	;# 
   139  008D                     	;# 
   140  008E                     	;# 
   141  008E                     	;# 
   142  008F                     	;# 
   143  0090                     	;# 
   144  0090                     	;# 
   145  0091                     	;# 
   146  0093                     	;# 
   147  0094                     	;# 
   148  0095                     	;# 
   149  0096                     	;# 
   150  0097                     	;# 
   151  0098                     	;# 
   152  0099                     	;# 
   153  009A                     	;# 
   154  009B                     	;# 
   155  009C                     	;# 
   156  009D                     	;# 
   157  009E                     	;# 
   158  010C                     	;# 
   159  010D                     	;# 
   160  010E                     	;# 
   161  010E                     	;# 
   162  010F                     	;# 
   163  0110                     	;# 
   164  0110                     	;# 
   165  0111                     	;# 
   166  0112                     	;# 
   167  0112                     	;# 
   168  0113                     	;# 
   169  0114                     	;# 
   170  0114                     	;# 
   171  0115                     	;# 
   172  0116                     	;# 
   173  0116                     	;# 
   174  0117                     	;# 
   175  0119                     	;# 
   176  0119                     	;# 
   177  0119                     	;# 
   178  011A                     	;# 
   179  011A                     	;# 
   180  011A                     	;# 
   181  011B                     	;# 
   182  011B                     	;# 
   183  011B                     	;# 
   184  011B                     	;# 
   185  011B                     	;# 
   186  011C                     	;# 
   187  011C                     	;# 
   188  011C                     	;# 
   189  011D                     	;# 
   190  011D                     	;# 
   191  011D                     	;# 
   192  011E                     	;# 
   193  011E                     	;# 
   194  011E                     	;# 
   195  011F                     	;# 
   196  011F                     	;# 
   197  011F                     	;# 
   198  011F                     	;# 
   199  011F                     	;# 
   200  018C                     	;# 
   201  018D                     	;# 
   202  018E                     	;# 
   203  018F                     	;# 
   204  0190                     	;# 
   205  0191                     	;# 
   206  0192                     	;# 
   207  0196                     	;# 
   208  0197                     	;# 
   209  0198                     	;# 
   210  0199                     	;# 
   211  019A                     	;# 
   212  019B                     	;# 
   213  019C                     	;# 
   214  020C                     	;# 
   215  020C                     	;# 
   216  020D                     	;# 
   217  020E                     	;# 
   218  020F                     	;# 
   219  020F                     	;# 
   220  0210                     	;# 
   221  0210                     	;# 
   222  0211                     	;# 
   223  0211                     	;# 
   224  0212                     	;# 
   225  0212                     	;# 
   226  0213                     	;# 
   227  0214                     	;# 
   228  0215                     	;# 
   229  0215                     	;# 
   230  0216                     	;# 
   231  0216                     	;# 
   232  0217                     	;# 
   233  0217                     	;# 
   234  0218                     	;# 
   235  0218                     	;# 
   236  0219                     	;# 
   237  021A                     	;# 
   238  021B                     	;# 
   239  021B                     	;# 
   240  021C                     	;# 
   241  021C                     	;# 
   242  021D                     	;# 
   243  021D                     	;# 
   244  021E                     	;# 
   245  021F                     	;# 
   246  028C                     	;# 
   247  028C                     	;# 
   248  028D                     	;# 
   249  028D                     	;# 
   250  028E                     	;# 
   251  028F                     	;# 
   252  0290                     	;# 
   253  0290                     	;# 
   254  0291                     	;# 
   255  0292                     	;# 
   256  0292                     	;# 
   257  0293                     	;# 
   258  0293                     	;# 
   259  0294                     	;# 
   260  0295                     	;# 
   261  0296                     	;# 
   262  0296                     	;# 
   263  0297                     	;# 
   264  0298                     	;# 
   265  0298                     	;# 
   266  0299                     	;# 
   267  0299                     	;# 
   268  029A                     	;# 
   269  029B                     	;# 
   270  029C                     	;# 
   271  029C                     	;# 
   272  029D                     	;# 
   273  030C                     	;# 
   274  030C                     	;# 
   275  030D                     	;# 
   276  030E                     	;# 
   277  030F                     	;# 
   278  0310                     	;# 
   279  0310                     	;# 
   280  0311                     	;# 
   281  0312                     	;# 
   282  0313                     	;# 
   283  0314                     	;# 
   284  0314                     	;# 
   285  0315                     	;# 
   286  0316                     	;# 
   287  0317                     	;# 
   288  0318                     	;# 
   289  0318                     	;# 
   290  0319                     	;# 
   291  031A                     	;# 
   292  031B                     	;# 
   293  031C                     	;# 
   294  031C                     	;# 
   295  031D                     	;# 
   296  031E                     	;# 
   297  031F                     	;# 
   298  038C                     	;# 
   299  038D                     	;# 
   300  038E                     	;# 
   301  0390                     	;# 
   302  0391                     	;# 
   303  0392                     	;# 
   304  040C                     	;# 
   305  040D                     	;# 
   306  040E                     	;# 
   307  040F                     	;# 
   308  0410                     	;# 
   309  0411                     	;# 
   310  0416                     	;# 
   311  0416                     	;# 
   312  0417                     	;# 
   313  0418                     	;# 
   314  0418                     	;# 
   315  0419                     	;# 
   316  041A                     	;# 
   317  041A                     	;# 
   318  041B                     	;# 
   319  041C                     	;# 
   320  041C                     	;# 
   321  041D                     	;# 
   322  041E                     	;# 
   323  041F                     	;# 
   324  048C                     	;# 
   325  048C                     	;# 
   326  048D                     	;# 
   327  048E                     	;# 
   328  048F                     	;# 
   329  048F                     	;# 
   330  0490                     	;# 
   331  0491                     	;# 
   332  0492                     	;# 
   333  0492                     	;# 
   334  0493                     	;# 
   335  0494                     	;# 
   336  0495                     	;# 
   337  0495                     	;# 
   338  0496                     	;# 
   339  0497                     	;# 
   340  0498                     	;# 
   341  0499                     	;# 
   342  049A                     	;# 
   343  049B                     	;# 
   344  049C                     	;# 
   345  049D                     	;# 
   346  050C                     	;# 
   347  050C                     	;# 
   348  050D                     	;# 
   349  050E                     	;# 
   350  050F                     	;# 
   351  050F                     	;# 
   352  0510                     	;# 
   353  0511                     	;# 
   354  0512                     	;# 
   355  0512                     	;# 
   356  0513                     	;# 
   357  0514                     	;# 
   358  0515                     	;# 
   359  0515                     	;# 
   360  0516                     	;# 
   361  0517                     	;# 
   362  0518                     	;# 
   363  0519                     	;# 
   364  051A                     	;# 
   365  051B                     	;# 
   366  051C                     	;# 
   367  051D                     	;# 
   368  058C                     	;# 
   369  058C                     	;# 
   370  058D                     	;# 
   371  058E                     	;# 
   372  058F                     	;# 
   373  058F                     	;# 
   374  0590                     	;# 
   375  0591                     	;# 
   376  0592                     	;# 
   377  0593                     	;# 
   378  060C                     	;# 
   379  060D                     	;# 
   380  060E                     	;# 
   381  060F                     	;# 
   382  0610                     	;# 
   383  0611                     	;# 
   384  0612                     	;# 
   385  0613                     	;# 
   386  0614                     	;# 
   387  0616                     	;# 
   388  0617                     	;# 
   389  0618                     	;# 
   390  0619                     	;# 
   391  061A                     	;# 
   392  061B                     	;# 
   393  061C                     	;# 
   394  061D                     	;# 
   395  061E                     	;# 
   396  068C                     	;# 
   397  068D                     	;# 
   398  068E                     	;# 
   399  068F                     	;# 
   400  0690                     	;# 
   401  0691                     	;# 
   402  0692                     	;# 
   403  0693                     	;# 
   404  0694                     	;# 
   405  070C                     	;# 
   406  070D                     	;# 
   407  070E                     	;# 
   408  070F                     	;# 
   409  0710                     	;# 
   410  0711                     	;# 
   411  0712                     	;# 
   412  0713                     	;# 
   413  0714                     	;# 
   414  0716                     	;# 
   415  0717                     	;# 
   416  0718                     	;# 
   417  0719                     	;# 
   418  071A                     	;# 
   419  071B                     	;# 
   420  071C                     	;# 
   421  071D                     	;# 
   422  071E                     	;# 
   423  0796                     	;# 
   424  0797                     	;# 
   425  0798                     	;# 
   426  0799                     	;# 
   427  079A                     	;# 
   428  079B                     	;# 
   429  080C                     	;# 
   430  080D                     	;# 
   431  080E                     	;# 
   432  080F                     	;# 
   433  0810                     	;# 
   434  0811                     	;# 
   435  0812                     	;# 
   436  0813                     	;# 
   437  0814                     	;# 
   438  081A                     	;# 
   439  081B                     	;# 
   440  081C                     	;# 
   441  081D                     	;# 
   442  081E                     	;# 
   443  081F                     	;# 
   444  088C                     	;# 
   445  088D                     	;# 
   446  088E                     	;# 
   447  088F                     	;# 
   448  0890                     	;# 
   449  0891                     	;# 
   450  0892                     	;# 
   451  0893                     	;# 
   452  0895                     	;# 
   453  0896                     	;# 
   454  0897                     	;# 
   455  0898                     	;# 
   456  0899                     	;# 
   457  089A                     	;# 
   458  089B                     	;# 
   459  090C                     	;# 
   460  090E                     	;# 
   461  090F                     	;# 
   462  091F                     	;# 
   463  091F                     	;# 
   464  098F                     	;# 
   465  098F                     	;# 
   466  0990                     	;# 
   467  0991                     	;# 
   468  0992                     	;# 
   469  0993                     	;# 
   470  0994                     	;# 
   471  0995                     	;# 
   472  0996                     	;# 
   473  0997                     	;# 
   474  0E0F                     	;# 
   475  0E10                     	;# 
   476  0E11                     	;# 
   477  0E12                     	;# 
   478  0E13                     	;# 
   479  0E14                     	;# 
   480  0E15                     	;# 
   481  0E16                     	;# 
   482  0E17                     	;# 
   483  0E18                     	;# 
   484  0E19                     	;# 
   485  0E1A                     	;# 
   486  0E1B                     	;# 
   487  0E1C                     	;# 
   488  0E1D                     	;# 
   489  0E1E                     	;# 
   490  0E1F                     	;# 
   491  0E20                     	;# 
   492  0E21                     	;# 
   493  0E22                     	;# 
   494  0E23                     	;# 
   495  0E24                     	;# 
   496  0E25                     	;# 
   497  0E26                     	;# 
   498  0E27                     	;# 
   499  0E28                     	;# 
   500  0E29                     	;# 
   501  0E2A                     	;# 
   502  0E2B                     	;# 
   503  0E2C                     	;# 
   504  0E2D                     	;# 
   505  0E2E                     	;# 
   506  0E2F                     	;# 
   507  0E30                     	;# 
   508  0E31                     	;# 
   509  0E32                     	;# 
   510  0E33                     	;# 
   511  0E34                     	;# 
   512  0E35                     	;# 
   513  0E36                     	;# 
   514  0E37                     	;# 
   515  0E8F                     	;# 
   516  0E90                     	;# 
   517  0E91                     	;# 
   518  0E92                     	;# 
   519  0E93                     	;# 
   520  0E94                     	;# 
   521  0E95                     	;# 
   522  0E96                     	;# 
   523  0E97                     	;# 
   524  0E9C                     	;# 
   525  0E9D                     	;# 
   526  0E9E                     	;# 
   527  0EA1                     	;# 
   528  0EA2                     	;# 
   529  0EA3                     	;# 
   530  0EA4                     	;# 
   531  0EA5                     	;# 
   532  0EA9                     	;# 
   533  0EAA                     	;# 
   534  0EAB                     	;# 
   535  0EAC                     	;# 
   536  0EB1                     	;# 
   537  0EB2                     	;# 
   538  0EB3                     	;# 
   539  0EB8                     	;# 
   540  0EB9                     	;# 
   541  0EBA                     	;# 
   542  0EBB                     	;# 
   543  0EBC                     	;# 
   544  0EBD                     	;# 
   545  0EBE                     	;# 
   546  0EC3                     	;# 
   547  0EC5                     	;# 
   548  0EC6                     	;# 
   549  0EC7                     	;# 
   550  0EC8                     	;# 
   551  0EC9                     	;# 
   552  0ECA                     	;# 
   553  0ECB                     	;# 
   554  0ECC                     	;# 
   555  0F10                     	;# 
   556  0F11                     	;# 
   557  0F12                     	;# 
   558  0F13                     	;# 
   559  0F14                     	;# 
   560  0F15                     	;# 
   561  0F16                     	;# 
   562  0F17                     	;# 
   563  0F18                     	;# 
   564  0F19                     	;# 
   565  0F1A                     	;# 
   566  0F1B                     	;# 
   567  0F1C                     	;# 
   568  0F1D                     	;# 
   569  0F1E                     	;# 
   570  0F1F                     	;# 
   571  0F20                     	;# 
   572  0F21                     	;# 
   573  0F22                     	;# 
   574  0F23                     	;# 
   575  0F24                     	;# 
   576  0F25                     	;# 
   577  0F26                     	;# 
   578  0F27                     	;# 
   579  0F38                     	;# 
   580  0F39                     	;# 
   581  0F3A                     	;# 
   582  0F3B                     	;# 
   583  0F3C                     	;# 
   584  0F3D                     	;# 
   585  0F3E                     	;# 
   586  0F3F                     	;# 
   587  0F40                     	;# 
   588  0F41                     	;# 
   589  0F43                     	;# 
   590  0F44                     	;# 
   591  0F45                     	;# 
   592  0F46                     	;# 
   593  0F47                     	;# 
   594  0F48                     	;# 
   595  0F49                     	;# 
   596  0F4A                     	;# 
   597  0F4B                     	;# 
   598  0F4C                     	;# 
   599  0F4E                     	;# 
   600  0F4F                     	;# 
   601  0F50                     	;# 
   602  0F51                     	;# 
   603  0F52                     	;# 
   604  0F53                     	;# 
   605  0F54                     	;# 
   606  0F55                     	;# 
   607  0F56                     	;# 
   608  0F57                     	;# 
   609  0F65                     	;# 
   610  0F68                     	;# 
   611  0F69                     	;# 
   612  0F6A                     	;# 
   613  0F6B                     	;# 
   614  0FE4                     	;# 
   615  0FE5                     	;# 
   616  0FE6                     	;# 
   617  0FE7                     	;# 
   618  0FE8                     	;# 
   619  0FE9                     	;# 
   620  0FEA                     	;# 
   621  0FEB                     	;# 
   622  0FED                     	;# 
   623  0FEE                     	;# 
   624  0FEF                     	;# 
   625  0000                     	;# 
   626  0001                     	;# 
   627  0002                     	;# 
   628  0003                     	;# 
   629  0004                     	;# 
   630  0005                     	;# 
   631  0006                     	;# 
   632  0007                     	;# 
   633  0008                     	;# 
   634  0009                     	;# 
   635  000A                     	;# 
   636  000B                     	;# 
   637  000C                     	;# 
   638  000D                     	;# 
   639  000E                     	;# 
   640  0010                     	;# 
   641  0011                     	;# 
   642  0012                     	;# 
   643  0013                     	;# 
   644  0016                     	;# 
   645  0017                     	;# 
   646  0018                     	;# 
   647  001C                     	;# 
   648  001C                     	;# 
   649  001D                     	;# 
   650  001D                     	;# 
   651  001E                     	;# 
   652  001F                     	;# 
   653  008C                     	;# 
   654  008C                     	;# 
   655  008D                     	;# 
   656  008E                     	;# 
   657  008E                     	;# 
   658  008F                     	;# 
   659  0090                     	;# 
   660  0090                     	;# 
   661  0091                     	;# 
   662  0093                     	;# 
   663  0094                     	;# 
   664  0095                     	;# 
   665  0096                     	;# 
   666  0097                     	;# 
   667  0098                     	;# 
   668  0099                     	;# 
   669  009A                     	;# 
   670  009B                     	;# 
   671  009C                     	;# 
   672  009D                     	;# 
   673  009E                     	;# 
   674  010C                     	;# 
   675  010D                     	;# 
   676  010E                     	;# 
   677  010E                     	;# 
   678  010F                     	;# 
   679  0110                     	;# 
   680  0110                     	;# 
   681  0111                     	;# 
   682  0112                     	;# 
   683  0112                     	;# 
   684  0113                     	;# 
   685  0114                     	;# 
   686  0114                     	;# 
   687  0115                     	;# 
   688  0116                     	;# 
   689  0116                     	;# 
   690  0117                     	;# 
   691  0119                     	;# 
   692  0119                     	;# 
   693  0119                     	;# 
   694  011A                     	;# 
   695  011A                     	;# 
   696  011A                     	;# 
   697  011B                     	;# 
   698  011B                     	;# 
   699  011B                     	;# 
   700  011B                     	;# 
   701  011B                     	;# 
   702  011C                     	;# 
   703  011C                     	;# 
   704  011C                     	;# 
   705  011D                     	;# 
   706  011D                     	;# 
   707  011D                     	;# 
   708  011E                     	;# 
   709  011E                     	;# 
   710  011E                     	;# 
   711  011F                     	;# 
   712  011F                     	;# 
   713  011F                     	;# 
   714  011F                     	;# 
   715  011F                     	;# 
   716  018C                     	;# 
   717  018D                     	;# 
   718  018E                     	;# 
   719  018F                     	;# 
   720  0190                     	;# 
   721  0191                     	;# 
   722  0192                     	;# 
   723  0196                     	;# 
   724  0197                     	;# 
   725  0198                     	;# 
   726  0199                     	;# 
   727  019A                     	;# 
   728  019B                     	;# 
   729  019C                     	;# 
   730  020C                     	;# 
   731  020C                     	;# 
   732  020D                     	;# 
   733  020E                     	;# 
   734  020F                     	;# 
   735  020F                     	;# 
   736  0210                     	;# 
   737  0210                     	;# 
   738  0211                     	;# 
   739  0211                     	;# 
   740  0212                     	;# 
   741  0212                     	;# 
   742  0213                     	;# 
   743  0214                     	;# 
   744  0215                     	;# 
   745  0215                     	;# 
   746  0216                     	;# 
   747  0216                     	;# 
   748  0217                     	;# 
   749  0217                     	;# 
   750  0218                     	;# 
   751  0218                     	;# 
   752  0219                     	;# 
   753  021A                     	;# 
   754  021B                     	;# 
   755  021B                     	;# 
   756  021C                     	;# 
   757  021C                     	;# 
   758  021D                     	;# 
   759  021D                     	;# 
   760  021E                     	;# 
   761  021F                     	;# 
   762  028C                     	;# 
   763  028C                     	;# 
   764  028D                     	;# 
   765  028D                     	;# 
   766  028E                     	;# 
   767  028F                     	;# 
   768  0290                     	;# 
   769  0290                     	;# 
   770  0291                     	;# 
   771  0292                     	;# 
   772  0292                     	;# 
   773  0293                     	;# 
   774  0293                     	;# 
   775  0294                     	;# 
   776  0295                     	;# 
   777  0296                     	;# 
   778  0296                     	;# 
   779  0297                     	;# 
   780  0298                     	;# 
   781  0298                     	;# 
   782  0299                     	;# 
   783  0299                     	;# 
   784  029A                     	;# 
   785  029B                     	;# 
   786  029C                     	;# 
   787  029C                     	;# 
   788  029D                     	;# 
   789  030C                     	;# 
   790  030C                     	;# 
   791  030D                     	;# 
   792  030E                     	;# 
   793  030F                     	;# 
   794  0310                     	;# 
   795  0310                     	;# 
   796  0311                     	;# 
   797  0312                     	;# 
   798  0313                     	;# 
   799  0314                     	;# 
   800  0314                     	;# 
   801  0315                     	;# 
   802  0316                     	;# 
   803  0317                     	;# 
   804  0318                     	;# 
   805  0318                     	;# 
   806  0319                     	;# 
   807  031A                     	;# 
   808  031B                     	;# 
   809  031C                     	;# 
   810  031C                     	;# 
   811  031D                     	;# 
   812  031E                     	;# 
   813  031F                     	;# 
   814  038C                     	;# 
   815  038D                     	;# 
   816  038E                     	;# 
   817  0390                     	;# 
   818  0391                     	;# 
   819  0392                     	;# 
   820  040C                     	;# 
   821  040D                     	;# 
   822  040E                     	;# 
   823  040F                     	;# 
   824  0410                     	;# 
   825  0411                     	;# 
   826  0416                     	;# 
   827  0416                     	;# 
   828  0417                     	;# 
   829  0418                     	;# 
   830  0418                     	;# 
   831  0419                     	;# 
   832  041A                     	;# 
   833  041A                     	;# 
   834  041B                     	;# 
   835  041C                     	;# 
   836  041C                     	;# 
   837  041D                     	;# 
   838  041E                     	;# 
   839  041F                     	;# 
   840  048C                     	;# 
   841  048C                     	;# 
   842  048D                     	;# 
   843  048E                     	;# 
   844  048F                     	;# 
   845  048F                     	;# 
   846  0490                     	;# 
   847  0491                     	;# 
   848  0492                     	;# 
   849  0492                     	;# 
   850  0493                     	;# 
   851  0494                     	;# 
   852  0495                     	;# 
   853  0495                     	;# 
   854  0496                     	;# 
   855  0497                     	;# 
   856  0498                     	;# 
   857  0499                     	;# 
   858  049A                     	;# 
   859  049B                     	;# 
   860  049C                     	;# 
   861  049D                     	;# 
   862  050C                     	;# 
   863  050C                     	;# 
   864  050D                     	;# 
   865  050E                     	;# 
   866  050F                     	;# 
   867  050F                     	;# 
   868  0510                     	;# 
   869  0511                     	;# 
   870  0512                     	;# 
   871  0512                     	;# 
   872  0513                     	;# 
   873  0514                     	;# 
   874  0515                     	;# 
   875  0515                     	;# 
   876  0516                     	;# 
   877  0517                     	;# 
   878  0518                     	;# 
   879  0519                     	;# 
   880  051A                     	;# 
   881  051B                     	;# 
   882  051C                     	;# 
   883  051D                     	;# 
   884  058C                     	;# 
   885  058C                     	;# 
   886  058D                     	;# 
   887  058E                     	;# 
   888  058F                     	;# 
   889  058F                     	;# 
   890  0590                     	;# 
   891  0591                     	;# 
   892  0592                     	;# 
   893  0593                     	;# 
   894  060C                     	;# 
   895  060D                     	;# 
   896  060E                     	;# 
   897  060F                     	;# 
   898  0610                     	;# 
   899  0611                     	;# 
   900  0612                     	;# 
   901  0613                     	;# 
   902  0614                     	;# 
   903  0616                     	;# 
   904  0617                     	;# 
   905  0618                     	;# 
   906  0619                     	;# 
   907  061A                     	;# 
   908  061B                     	;# 
   909  061C                     	;# 
   910  061D                     	;# 
   911  061E                     	;# 
   912  068C                     	;# 
   913  068D                     	;# 
   914  068E                     	;# 
   915  068F                     	;# 
   916  0690                     	;# 
   917  0691                     	;# 
   918  0692                     	;# 
   919  0693                     	;# 
   920  0694                     	;# 
   921  070C                     	;# 
   922  070D                     	;# 
   923  070E                     	;# 
   924  070F                     	;# 
   925  0710                     	;# 
   926  0711                     	;# 
   927  0712                     	;# 
   928  0713                     	;# 
   929  0714                     	;# 
   930  0716                     	;# 
   931  0717                     	;# 
   932  0718                     	;# 
   933  0719                     	;# 
   934  071A                     	;# 
   935  071B                     	;# 
   936  071C                     	;# 
   937  071D                     	;# 
   938  071E                     	;# 
   939  0796                     	;# 
   940  0797                     	;# 
   941  0798                     	;# 
   942  0799                     	;# 
   943  079A                     	;# 
   944  079B                     	;# 
   945  080C                     	;# 
   946  080D                     	;# 
   947  080E                     	;# 
   948  080F                     	;# 
   949  0810                     	;# 
   950  0811                     	;# 
   951  0812                     	;# 
   952  0813                     	;# 
   953  0814                     	;# 
   954  081A                     	;# 
   955  081B                     	;# 
   956  081C                     	;# 
   957  081D                     	;# 
   958  081E                     	;# 
   959  081F                     	;# 
   960  088C                     	;# 
   961  088D                     	;# 
   962  088E                     	;# 
   963  088F                     	;# 
   964  0890                     	;# 
   965  0891                     	;# 
   966  0892                     	;# 
   967  0893                     	;# 
   968  0895                     	;# 
   969  0896                     	;# 
   970  0897                     	;# 
   971  0898                     	;# 
   972  0899                     	;# 
   973  089A                     	;# 
   974  089B                     	;# 
   975  090C                     	;# 
   976  090E                     	;# 
   977  090F                     	;# 
   978  091F                     	;# 
   979  091F                     	;# 
   980  098F                     	;# 
   981  098F                     	;# 
   982  0990                     	;# 
   983  0991                     	;# 
   984  0992                     	;# 
   985  0993                     	;# 
   986  0994                     	;# 
   987  0995                     	;# 
   988  0996                     	;# 
   989  0997                     	;# 
   990  0E0F                     	;# 
   991  0E10                     	;# 
   992  0E11                     	;# 
   993  0E12                     	;# 
   994  0E13                     	;# 
   995  0E14                     	;# 
   996  0E15                     	;# 
   997  0E16                     	;# 
   998  0E17                     	;# 
   999  0E18                     	;# 
  1000  0E19                     	;# 
  1001  0E1A                     	;# 
  1002  0E1B                     	;# 
  1003  0E1C                     	;# 
  1004  0E1D                     	;# 
  1005  0E1E                     	;# 
  1006  0E1F                     	;# 
  1007  0E20                     	;# 
  1008  0E21                     	;# 
  1009  0E22                     	;# 
  1010  0E23                     	;# 
  1011  0E24                     	;# 
  1012  0E25                     	;# 
  1013  0E26                     	;# 
  1014  0E27                     	;# 
  1015  0E28                     	;# 
  1016  0E29                     	;# 
  1017  0E2A                     	;# 
  1018  0E2B                     	;# 
  1019  0E2C                     	;# 
  1020  0E2D                     	;# 
  1021  0E2E                     	;# 
  1022  0E2F                     	;# 
  1023  0E30                     	;# 
  1024  0E31                     	;# 
  1025  0E32                     	;# 
  1026  0E33                     	;# 
  1027  0E34                     	;# 
  1028  0E35                     	;# 
  1029  0E36                     	;# 
  1030  0E37                     	;# 
  1031  0E8F                     	;# 
  1032  0E90                     	;# 
  1033  0E91                     	;# 
  1034  0E92                     	;# 
  1035  0E93                     	;# 
  1036  0E94                     	;# 
  1037  0E95                     	;# 
  1038  0E96                     	;# 
  1039  0E97                     	;# 
  1040  0E9C                     	;# 
  1041  0E9D                     	;# 
  1042  0E9E                     	;# 
  1043  0EA1                     	;# 
  1044  0EA2                     	;# 
  1045  0EA3                     	;# 
  1046  0EA4                     	;# 
  1047  0EA5                     	;# 
  1048  0EA9                     	;# 
  1049  0EAA                     	;# 
  1050  0EAB                     	;# 
  1051  0EAC                     	;# 
  1052  0EB1                     	;# 
  1053  0EB2                     	;# 
  1054  0EB3                     	;# 
  1055  0EB8                     	;# 
  1056  0EB9                     	;# 
  1057  0EBA                     	;# 
  1058  0EBB                     	;# 
  1059  0EBC                     	;# 
  1060  0EBD                     	;# 
  1061  0EBE                     	;# 
  1062  0EC3                     	;# 
  1063  0EC5                     	;# 
  1064  0EC6                     	;# 
  1065  0EC7                     	;# 
  1066  0EC8                     	;# 
  1067  0EC9                     	;# 
  1068  0ECA                     	;# 
  1069  0ECB                     	;# 
  1070  0ECC                     	;# 
  1071  0F10                     	;# 
  1072  0F11                     	;# 
  1073  0F12                     	;# 
  1074  0F13                     	;# 
  1075  0F14                     	;# 
  1076  0F15                     	;# 
  1077  0F16                     	;# 
  1078  0F17                     	;# 
  1079  0F18                     	;# 
  1080  0F19                     	;# 
  1081  0F1A                     	;# 
  1082  0F1B                     	;# 
  1083  0F1C                     	;# 
  1084  0F1D                     	;# 
  1085  0F1E                     	;# 
  1086  0F1F                     	;# 
  1087  0F20                     	;# 
  1088  0F21                     	;# 
  1089  0F22                     	;# 
  1090  0F23                     	;# 
  1091  0F24                     	;# 
  1092  0F25                     	;# 
  1093  0F26                     	;# 
  1094  0F27                     	;# 
  1095  0F38                     	;# 
  1096  0F39                     	;# 
  1097  0F3A                     	;# 
  1098  0F3B                     	;# 
  1099  0F3C                     	;# 
  1100  0F3D                     	;# 
  1101  0F3E                     	;# 
  1102  0F3F                     	;# 
  1103  0F40                     	;# 
  1104  0F41                     	;# 
  1105  0F43                     	;# 
  1106  0F44                     	;# 
  1107  0F45                     	;# 
  1108  0F46                     	;# 
  1109  0F47                     	;# 
  1110  0F48                     	;# 
  1111  0F49                     	;# 
  1112  0F4A                     	;# 
  1113  0F4B                     	;# 
  1114  0F4C                     	;# 
  1115  0F4E                     	;# 
  1116  0F4F                     	;# 
  1117  0F50                     	;# 
  1118  0F51                     	;# 
  1119  0F52                     	;# 
  1120  0F53                     	;# 
  1121  0F54                     	;# 
  1122  0F55                     	;# 
  1123  0F56                     	;# 
  1124  0F57                     	;# 
  1125  0F65                     	;# 
  1126  0F68                     	;# 
  1127  0F69                     	;# 
  1128  0F6A                     	;# 
  1129  0F6B                     	;# 
  1130  0FE4                     	;# 
  1131  0FE5                     	;# 
  1132  0FE6                     	;# 
  1133  0FE7                     	;# 
  1134  0FE8                     	;# 
  1135  0FE9                     	;# 
  1136  0FEA                     	;# 
  1137  0FEB                     	;# 
  1138  0FED                     	;# 
  1139  0FEE                     	;# 
  1140  0FEF                     	;# 
  1141  0000                     	;# 
  1142  0001                     	;# 
  1143  0002                     	;# 
  1144  0003                     	;# 
  1145  0004                     	;# 
  1146  0005                     	;# 
  1147  0006                     	;# 
  1148  0007                     	;# 
  1149  0008                     	;# 
  1150  0009                     	;# 
  1151  000A                     	;# 
  1152  000B                     	;# 
  1153  000C                     	;# 
  1154  000D                     	;# 
  1155  000E                     	;# 
  1156  0010                     	;# 
  1157  0011                     	;# 
  1158  0012                     	;# 
  1159  0013                     	;# 
  1160  0016                     	;# 
  1161  0017                     	;# 
  1162  0018                     	;# 
  1163  001C                     	;# 
  1164  001C                     	;# 
  1165  001D                     	;# 
  1166  001D                     	;# 
  1167  001E                     	;# 
  1168  001F                     	;# 
  1169  008C                     	;# 
  1170  008C                     	;# 
  1171  008D                     	;# 
  1172  008E                     	;# 
  1173  008E                     	;# 
  1174  008F                     	;# 
  1175  0090                     	;# 
  1176  0090                     	;# 
  1177  0091                     	;# 
  1178  0093                     	;# 
  1179  0094                     	;# 
  1180  0095                     	;# 
  1181  0096                     	;# 
  1182  0097                     	;# 
  1183  0098                     	;# 
  1184  0099                     	;# 
  1185  009A                     	;# 
  1186  009B                     	;# 
  1187  009C                     	;# 
  1188  009D                     	;# 
  1189  009E                     	;# 
  1190  010C                     	;# 
  1191  010D                     	;# 
  1192  010E                     	;# 
  1193  010E                     	;# 
  1194  010F                     	;# 
  1195  0110                     	;# 
  1196  0110                     	;# 
  1197  0111                     	;# 
  1198  0112                     	;# 
  1199  0112                     	;# 
  1200  0113                     	;# 
  1201  0114                     	;# 
  1202  0114                     	;# 
  1203  0115                     	;# 
  1204  0116                     	;# 
  1205  0116                     	;# 
  1206  0117                     	;# 
  1207  0119                     	;# 
  1208  0119                     	;# 
  1209  0119                     	;# 
  1210  011A                     	;# 
  1211  011A                     	;# 
  1212  011A                     	;# 
  1213  011B                     	;# 
  1214  011B                     	;# 
  1215  011B                     	;# 
  1216  011B                     	;# 
  1217  011B                     	;# 
  1218  011C                     	;# 
  1219  011C                     	;# 
  1220  011C                     	;# 
  1221  011D                     	;# 
  1222  011D                     	;# 
  1223  011D                     	;# 
  1224  011E                     	;# 
  1225  011E                     	;# 
  1226  011E                     	;# 
  1227  011F                     	;# 
  1228  011F                     	;# 
  1229  011F                     	;# 
  1230  011F                     	;# 
  1231  011F                     	;# 
  1232  018C                     	;# 
  1233  018D                     	;# 
  1234  018E                     	;# 
  1235  018F                     	;# 
  1236  0190                     	;# 
  1237  0191                     	;# 
  1238  0192                     	;# 
  1239  0196                     	;# 
  1240  0197                     	;# 
  1241  0198                     	;# 
  1242  0199                     	;# 
  1243  019A                     	;# 
  1244  019B                     	;# 
  1245  019C                     	;# 
  1246  020C                     	;# 
  1247  020C                     	;# 
  1248  020D                     	;# 
  1249  020E                     	;# 
  1250  020F                     	;# 
  1251  020F                     	;# 
  1252  0210                     	;# 
  1253  0210                     	;# 
  1254  0211                     	;# 
  1255  0211                     	;# 
  1256  0212                     	;# 
  1257  0212                     	;# 
  1258  0213                     	;# 
  1259  0214                     	;# 
  1260  0215                     	;# 
  1261  0215                     	;# 
  1262  0216                     	;# 
  1263  0216                     	;# 
  1264  0217                     	;# 
  1265  0217                     	;# 
  1266  0218                     	;# 
  1267  0218                     	;# 
  1268  0219                     	;# 
  1269  021A                     	;# 
  1270  021B                     	;# 
  1271  021B                     	;# 
  1272  021C                     	;# 
  1273  021C                     	;# 
  1274  021D                     	;# 
  1275  021D                     	;# 
  1276  021E                     	;# 
  1277  021F                     	;# 
  1278  028C                     	;# 
  1279  028C                     	;# 
  1280  028D                     	;# 
  1281  028D                     	;# 
  1282  028E                     	;# 
  1283  028F                     	;# 
  1284  0290                     	;# 
  1285  0290                     	;# 
  1286  0291                     	;# 
  1287  0292                     	;# 
  1288  0292                     	;# 
  1289  0293                     	;# 
  1290  0293                     	;# 
  1291  0294                     	;# 
  1292  0295                     	;# 
  1293  0296                     	;# 
  1294  0296                     	;# 
  1295  0297                     	;# 
  1296  0298                     	;# 
  1297  0298                     	;# 
  1298  0299                     	;# 
  1299  0299                     	;# 
  1300  029A                     	;# 
  1301  029B                     	;# 
  1302  029C                     	;# 
  1303  029C                     	;# 
  1304  029D                     	;# 
  1305  030C                     	;# 
  1306  030C                     	;# 
  1307  030D                     	;# 
  1308  030E                     	;# 
  1309  030F                     	;# 
  1310  0310                     	;# 
  1311  0310                     	;# 
  1312  0311                     	;# 
  1313  0312                     	;# 
  1314  0313                     	;# 
  1315  0314                     	;# 
  1316  0314                     	;# 
  1317  0315                     	;# 
  1318  0316                     	;# 
  1319  0317                     	;# 
  1320  0318                     	;# 
  1321  0318                     	;# 
  1322  0319                     	;# 
  1323  031A                     	;# 
  1324  031B                     	;# 
  1325  031C                     	;# 
  1326  031C                     	;# 
  1327  031D                     	;# 
  1328  031E                     	;# 
  1329  031F                     	;# 
  1330  038C                     	;# 
  1331  038D                     	;# 
  1332  038E                     	;# 
  1333  0390                     	;# 
  1334  0391                     	;# 
  1335  0392                     	;# 
  1336  040C                     	;# 
  1337  040D                     	;# 
  1338  040E                     	;# 
  1339  040F                     	;# 
  1340  0410                     	;# 
  1341  0411                     	;# 
  1342  0416                     	;# 
  1343  0416                     	;# 
  1344  0417                     	;# 
  1345  0418                     	;# 
  1346  0418                     	;# 
  1347  0419                     	;# 
  1348  041A                     	;# 
  1349  041A                     	;# 
  1350  041B                     	;# 
  1351  041C                     	;# 
  1352  041C                     	;# 
  1353  041D                     	;# 
  1354  041E                     	;# 
  1355  041F                     	;# 
  1356  048C                     	;# 
  1357  048C                     	;# 
  1358  048D                     	;# 
  1359  048E                     	;# 
  1360  048F                     	;# 
  1361  048F                     	;# 
  1362  0490                     	;# 
  1363  0491                     	;# 
  1364  0492                     	;# 
  1365  0492                     	;# 
  1366  0493                     	;# 
  1367  0494                     	;# 
  1368  0495                     	;# 
  1369  0495                     	;# 
  1370  0496                     	;# 
  1371  0497                     	;# 
  1372  0498                     	;# 
  1373  0499                     	;# 
  1374  049A                     	;# 
  1375  049B                     	;# 
  1376  049C                     	;# 
  1377  049D                     	;# 
  1378  050C                     	;# 
  1379  050C                     	;# 
  1380  050D                     	;# 
  1381  050E                     	;# 
  1382  050F                     	;# 
  1383  050F                     	;# 
  1384  0510                     	;# 
  1385  0511                     	;# 
  1386  0512                     	;# 
  1387  0512                     	;# 
  1388  0513                     	;# 
  1389  0514                     	;# 
  1390  0515                     	;# 
  1391  0515                     	;# 
  1392  0516                     	;# 
  1393  0517                     	;# 
  1394  0518                     	;# 
  1395  0519                     	;# 
  1396  051A                     	;# 
  1397  051B                     	;# 
  1398  051C                     	;# 
  1399  051D                     	;# 
  1400  058C                     	;# 
  1401  058C                     	;# 
  1402  058D                     	;# 
  1403  058E                     	;# 
  1404  058F                     	;# 
  1405  058F                     	;# 
  1406  0590                     	;# 
  1407  0591                     	;# 
  1408  0592                     	;# 
  1409  0593                     	;# 
  1410  060C                     	;# 
  1411  060D                     	;# 
  1412  060E                     	;# 
  1413  060F                     	;# 
  1414  0610                     	;# 
  1415  0611                     	;# 
  1416  0612                     	;# 
  1417  0613                     	;# 
  1418  0614                     	;# 
  1419  0616                     	;# 
  1420  0617                     	;# 
  1421  0618                     	;# 
  1422  0619                     	;# 
  1423  061A                     	;# 
  1424  061B                     	;# 
  1425  061C                     	;# 
  1426  061D                     	;# 
  1427  061E                     	;# 
  1428  068C                     	;# 
  1429  068D                     	;# 
  1430  068E                     	;# 
  1431  068F                     	;# 
  1432  0690                     	;# 
  1433  0691                     	;# 
  1434  0692                     	;# 
  1435  0693                     	;# 
  1436  0694                     	;# 
  1437  070C                     	;# 
  1438  070D                     	;# 
  1439  070E                     	;# 
  1440  070F                     	;# 
  1441  0710                     	;# 
  1442  0711                     	;# 
  1443  0712                     	;# 
  1444  0713                     	;# 
  1445  0714                     	;# 
  1446  0716                     	;# 
  1447  0717                     	;# 
  1448  0718                     	;# 
  1449  0719                     	;# 
  1450  071A                     	;# 
  1451  071B                     	;# 
  1452  071C                     	;# 
  1453  071D                     	;# 
  1454  071E                     	;# 
  1455  0796                     	;# 
  1456  0797                     	;# 
  1457  0798                     	;# 
  1458  0799                     	;# 
  1459  079A                     	;# 
  1460  079B                     	;# 
  1461  080C                     	;# 
  1462  080D                     	;# 
  1463  080E                     	;# 
  1464  080F                     	;# 
  1465  0810                     	;# 
  1466  0811                     	;# 
  1467  0812                     	;# 
  1468  0813                     	;# 
  1469  0814                     	;# 
  1470  081A                     	;# 
  1471  081B                     	;# 
  1472  081C                     	;# 
  1473  081D                     	;# 
  1474  081E                     	;# 
  1475  081F                     	;# 
  1476  088C                     	;# 
  1477  088D                     	;# 
  1478  088E                     	;# 
  1479  088F                     	;# 
  1480  0890                     	;# 
  1481  0891                     	;# 
  1482  0892                     	;# 
  1483  0893                     	;# 
  1484  0895                     	;# 
  1485  0896                     	;# 
  1486  0897                     	;# 
  1487  0898                     	;# 
  1488  0899                     	;# 
  1489  089A                     	;# 
  1490  089B                     	;# 
  1491  090C                     	;# 
  1492  090E                     	;# 
  1493  090F                     	;# 
  1494  091F                     	;# 
  1495  091F                     	;# 
  1496  098F                     	;# 
  1497  098F                     	;# 
  1498  0990                     	;# 
  1499  0991                     	;# 
  1500  0992                     	;# 
  1501  0993                     	;# 
  1502  0994                     	;# 
  1503  0995                     	;# 
  1504  0996                     	;# 
  1505  0997                     	;# 
  1506  0E0F                     	;# 
  1507  0E10                     	;# 
  1508  0E11                     	;# 
  1509  0E12                     	;# 
  1510  0E13                     	;# 
  1511  0E14                     	;# 
  1512  0E15                     	;# 
  1513  0E16                     	;# 
  1514  0E17                     	;# 
  1515  0E18                     	;# 
  1516  0E19                     	;# 
  1517  0E1A                     	;# 
  1518  0E1B                     	;# 
  1519  0E1C                     	;# 
  1520  0E1D                     	;# 
  1521  0E1E                     	;# 
  1522  0E1F                     	;# 
  1523  0E20                     	;# 
  1524  0E21                     	;# 
  1525  0E22                     	;# 
  1526  0E23                     	;# 
  1527  0E24                     	;# 
  1528  0E25                     	;# 
  1529  0E26                     	;# 
  1530  0E27                     	;# 
  1531  0E28                     	;# 
  1532  0E29                     	;# 
  1533  0E2A                     	;# 
  1534  0E2B                     	;# 
  1535  0E2C                     	;# 
  1536  0E2D                     	;# 
  1537  0E2E                     	;# 
  1538  0E2F                     	;# 
  1539  0E30                     	;# 
  1540  0E31                     	;# 
  1541  0E32                     	;# 
  1542  0E33                     	;# 
  1543  0E34                     	;# 
  1544  0E35                     	;# 
  1545  0E36                     	;# 
  1546  0E37                     	;# 
  1547  0E8F                     	;# 
  1548  0E90                     	;# 
  1549  0E91                     	;# 
  1550  0E92                     	;# 
  1551  0E93                     	;# 
  1552  0E94                     	;# 
  1553  0E95                     	;# 
  1554  0E96                     	;# 
  1555  0E97                     	;# 
  1556  0E9C                     	;# 
  1557  0E9D                     	;# 
  1558  0E9E                     	;# 
  1559  0EA1                     	;# 
  1560  0EA2                     	;# 
  1561  0EA3                     	;# 
  1562  0EA4                     	;# 
  1563  0EA5                     	;# 
  1564  0EA9                     	;# 
  1565  0EAA                     	;# 
  1566  0EAB                     	;# 
  1567  0EAC                     	;# 
  1568  0EB1                     	;# 
  1569  0EB2                     	;# 
  1570  0EB3                     	;# 
  1571  0EB8                     	;# 
  1572  0EB9                     	;# 
  1573  0EBA                     	;# 
  1574  0EBB                     	;# 
  1575  0EBC                     	;# 
  1576  0EBD                     	;# 
  1577  0EBE                     	;# 
  1578  0EC3                     	;# 
  1579  0EC5                     	;# 
  1580  0EC6                     	;# 
  1581  0EC7                     	;# 
  1582  0EC8                     	;# 
  1583  0EC9                     	;# 
  1584  0ECA                     	;# 
  1585  0ECB                     	;# 
  1586  0ECC                     	;# 
  1587  0F10                     	;# 
  1588  0F11                     	;# 
  1589  0F12                     	;# 
  1590  0F13                     	;# 
  1591  0F14                     	;# 
  1592  0F15                     	;# 
  1593  0F16                     	;# 
  1594  0F17                     	;# 
  1595  0F18                     	;# 
  1596  0F19                     	;# 
  1597  0F1A                     	;# 
  1598  0F1B                     	;# 
  1599  0F1C                     	;# 
  1600  0F1D                     	;# 
  1601  0F1E                     	;# 
  1602  0F1F                     	;# 
  1603  0F20                     	;# 
  1604  0F21                     	;# 
  1605  0F22                     	;# 
  1606  0F23                     	;# 
  1607  0F24                     	;# 
  1608  0F25                     	;# 
  1609  0F26                     	;# 
  1610  0F27                     	;# 
  1611  0F38                     	;# 
  1612  0F39                     	;# 
  1613  0F3A                     	;# 
  1614  0F3B                     	;# 
  1615  0F3C                     	;# 
  1616  0F3D                     	;# 
  1617  0F3E                     	;# 
  1618  0F3F                     	;# 
  1619  0F40                     	;# 
  1620  0F41                     	;# 
  1621  0F43                     	;# 
  1622  0F44                     	;# 
  1623  0F45                     	;# 
  1624  0F46                     	;# 
  1625  0F47                     	;# 
  1626  0F48                     	;# 
  1627  0F49                     	;# 
  1628  0F4A                     	;# 
  1629  0F4B                     	;# 
  1630  0F4C                     	;# 
  1631  0F4E                     	;# 
  1632  0F4F                     	;# 
  1633  0F50                     	;# 
  1634  0F51                     	;# 
  1635  0F52                     	;# 
  1636  0F53                     	;# 
  1637  0F54                     	;# 
  1638  0F55                     	;# 
  1639  0F56                     	;# 
  1640  0F57                     	;# 
  1641  0F65                     	;# 
  1642  0F68                     	;# 
  1643  0F69                     	;# 
  1644  0F6A                     	;# 
  1645  0F6B                     	;# 
  1646  0FE4                     	;# 
  1647  0FE5                     	;# 
  1648  0FE6                     	;# 
  1649  0FE7                     	;# 
  1650  0FE8                     	;# 
  1651  0FE9                     	;# 
  1652  0FEA                     	;# 
  1653  0FEB                     	;# 
  1654  0FED                     	;# 
  1655  0FEE                     	;# 
  1656  0FEF                     	;# 
  1657  0000                     	;# 
  1658  0001                     	;# 
  1659  0002                     	;# 
  1660  0003                     	;# 
  1661  0004                     	;# 
  1662  0005                     	;# 
  1663  0006                     	;# 
  1664  0007                     	;# 
  1665  0008                     	;# 
  1666  0009                     	;# 
  1667  000A                     	;# 
  1668  000B                     	;# 
  1669  000C                     	;# 
  1670  000D                     	;# 
  1671  000E                     	;# 
  1672  0010                     	;# 
  1673  0011                     	;# 
  1674  0012                     	;# 
  1675  0013                     	;# 
  1676  0016                     	;# 
  1677  0017                     	;# 
  1678  0018                     	;# 
  1679  001C                     	;# 
  1680  001C                     	;# 
  1681  001D                     	;# 
  1682  001D                     	;# 
  1683  001E                     	;# 
  1684  001F                     	;# 
  1685  008C                     	;# 
  1686  008C                     	;# 
  1687  008D                     	;# 
  1688  008E                     	;# 
  1689  008E                     	;# 
  1690  008F                     	;# 
  1691  0090                     	;# 
  1692  0090                     	;# 
  1693  0091                     	;# 
  1694  0093                     	;# 
  1695  0094                     	;# 
  1696  0095                     	;# 
  1697  0096                     	;# 
  1698  0097                     	;# 
  1699  0098                     	;# 
  1700  0099                     	;# 
  1701  009A                     	;# 
  1702  009B                     	;# 
  1703  009C                     	;# 
  1704  009D                     	;# 
  1705  009E                     	;# 
  1706  010C                     	;# 
  1707  010D                     	;# 
  1708  010E                     	;# 
  1709  010E                     	;# 
  1710  010F                     	;# 
  1711  0110                     	;# 
  1712  0110                     	;# 
  1713  0111                     	;# 
  1714  0112                     	;# 
  1715  0112                     	;# 
  1716  0113                     	;# 
  1717  0114                     	;# 
  1718  0114                     	;# 
  1719  0115                     	;# 
  1720  0116                     	;# 
  1721  0116                     	;# 
  1722  0117                     	;# 
  1723  0119                     	;# 
  1724  0119                     	;# 
  1725  0119                     	;# 
  1726  011A                     	;# 
  1727  011A                     	;# 
  1728  011A                     	;# 
  1729  011B                     	;# 
  1730  011B                     	;# 
  1731  011B                     	;# 
  1732  011B                     	;# 
  1733  011B                     	;# 
  1734  011C                     	;# 
  1735  011C                     	;# 
  1736  011C                     	;# 
  1737  011D                     	;# 
  1738  011D                     	;# 
  1739  011D                     	;# 
  1740  011E                     	;# 
  1741  011E                     	;# 
  1742  011E                     	;# 
  1743  011F                     	;# 
  1744  011F                     	;# 
  1745  011F                     	;# 
  1746  011F                     	;# 
  1747  011F                     	;# 
  1748  018C                     	;# 
  1749  018D                     	;# 
  1750  018E                     	;# 
  1751  018F                     	;# 
  1752  0190                     	;# 
  1753  0191                     	;# 
  1754  0192                     	;# 
  1755  0196                     	;# 
  1756  0197                     	;# 
  1757  0198                     	;# 
  1758  0199                     	;# 
  1759  019A                     	;# 
  1760  019B                     	;# 
  1761  019C                     	;# 
  1762  020C                     	;# 
  1763  020C                     	;# 
  1764  020D                     	;# 
  1765  020E                     	;# 
  1766  020F                     	;# 
  1767  020F                     	;# 
  1768  0210                     	;# 
  1769  0210                     	;# 
  1770  0211                     	;# 
  1771  0211                     	;# 
  1772  0212                     	;# 
  1773  0212                     	;# 
  1774  0213                     	;# 
  1775  0214                     	;# 
  1776  0215                     	;# 
  1777  0215                     	;# 
  1778  0216                     	;# 
  1779  0216                     	;# 
  1780  0217                     	;# 
  1781  0217                     	;# 
  1782  0218                     	;# 
  1783  0218                     	;# 
  1784  0219                     	;# 
  1785  021A                     	;# 
  1786  021B                     	;# 
  1787  021B                     	;# 
  1788  021C                     	;# 
  1789  021C                     	;# 
  1790  021D                     	;# 
  1791  021D                     	;# 
  1792  021E                     	;# 
  1793  021F                     	;# 
  1794  028C                     	;# 
  1795  028C                     	;# 
  1796  028D                     	;# 
  1797  028D                     	;# 
  1798  028E                     	;# 
  1799  028F                     	;# 
  1800  0290                     	;# 
  1801  0290                     	;# 
  1802  0291                     	;# 
  1803  0292                     	;# 
  1804  0292                     	;# 
  1805  0293                     	;# 
  1806  0293                     	;# 
  1807  0294                     	;# 
  1808  0295                     	;# 
  1809  0296                     	;# 
  1810  0296                     	;# 
  1811  0297                     	;# 
  1812  0298                     	;# 
  1813  0298                     	;# 
  1814  0299                     	;# 
  1815  0299                     	;# 
  1816  029A                     	;# 
  1817  029B                     	;# 
  1818  029C                     	;# 
  1819  029C                     	;# 
  1820  029D                     	;# 
  1821  030C                     	;# 
  1822  030C                     	;# 
  1823  030D                     	;# 
  1824  030E                     	;# 
  1825  030F                     	;# 
  1826  0310                     	;# 
  1827  0310                     	;# 
  1828  0311                     	;# 
  1829  0312                     	;# 
  1830  0313                     	;# 
  1831  0314                     	;# 
  1832  0314                     	;# 
  1833  0315                     	;# 
  1834  0316                     	;# 
  1835  0317                     	;# 
  1836  0318                     	;# 
  1837  0318                     	;# 
  1838  0319                     	;# 
  1839  031A                     	;# 
  1840  031B                     	;# 
  1841  031C                     	;# 
  1842  031C                     	;# 
  1843  031D                     	;# 
  1844  031E                     	;# 
  1845  031F                     	;# 
  1846  038C                     	;# 
  1847  038D                     	;# 
  1848  038E                     	;# 
  1849  0390                     	;# 
  1850  0391                     	;# 
  1851  0392                     	;# 
  1852  040C                     	;# 
  1853  040D                     	;# 
  1854  040E                     	;# 
  1855  040F                     	;# 
  1856  0410                     	;# 
  1857  0411                     	;# 
  1858  0416                     	;# 
  1859  0416                     	;# 
  1860  0417                     	;# 
  1861  0418                     	;# 
  1862  0418                     	;# 
  1863  0419                     	;# 
  1864  041A                     	;# 
  1865  041A                     	;# 
  1866  041B                     	;# 
  1867  041C                     	;# 
  1868  041C                     	;# 
  1869  041D                     	;# 
  1870  041E                     	;# 
  1871  041F                     	;# 
  1872  048C                     	;# 
  1873  048C                     	;# 
  1874  048D                     	;# 
  1875  048E                     	;# 
  1876  048F                     	;# 
  1877  048F                     	;# 
  1878  0490                     	;# 
  1879  0491                     	;# 
  1880  0492                     	;# 
  1881  0492                     	;# 
  1882  0493                     	;# 
  1883  0494                     	;# 
  1884  0495                     	;# 
  1885  0495                     	;# 
  1886  0496                     	;# 
  1887  0497                     	;# 
  1888  0498                     	;# 
  1889  0499                     	;# 
  1890  049A                     	;# 
  1891  049B                     	;# 
  1892  049C                     	;# 
  1893  049D                     	;# 
  1894  050C                     	;# 
  1895  050C                     	;# 
  1896  050D                     	;# 
  1897  050E                     	;# 
  1898  050F                     	;# 
  1899  050F                     	;# 
  1900  0510                     	;# 
  1901  0511                     	;# 
  1902  0512                     	;# 
  1903  0512                     	;# 
  1904  0513                     	;# 
  1905  0514                     	;# 
  1906  0515                     	;# 
  1907  0515                     	;# 
  1908  0516                     	;# 
  1909  0517                     	;# 
  1910  0518                     	;# 
  1911  0519                     	;# 
  1912  051A                     	;# 
  1913  051B                     	;# 
  1914  051C                     	;# 
  1915  051D                     	;# 
  1916  058C                     	;# 
  1917  058C                     	;# 
  1918  058D                     	;# 
  1919  058E                     	;# 
  1920  058F                     	;# 
  1921  058F                     	;# 
  1922  0590                     	;# 
  1923  0591                     	;# 
  1924  0592                     	;# 
  1925  0593                     	;# 
  1926  060C                     	;# 
  1927  060D                     	;# 
  1928  060E                     	;# 
  1929  060F                     	;# 
  1930  0610                     	;# 
  1931  0611                     	;# 
  1932  0612                     	;# 
  1933  0613                     	;# 
  1934  0614                     	;# 
  1935  0616                     	;# 
  1936  0617                     	;# 
  1937  0618                     	;# 
  1938  0619                     	;# 
  1939  061A                     	;# 
  1940  061B                     	;# 
  1941  061C                     	;# 
  1942  061D                     	;# 
  1943  061E                     	;# 
  1944  068C                     	;# 
  1945  068D                     	;# 
  1946  068E                     	;# 
  1947  068F                     	;# 
  1948  0690                     	;# 
  1949  0691                     	;# 
  1950  0692                     	;# 
  1951  0693                     	;# 
  1952  0694                     	;# 
  1953  070C                     	;# 
  1954  070D                     	;# 
  1955  070E                     	;# 
  1956  070F                     	;# 
  1957  0710                     	;# 
  1958  0711                     	;# 
  1959  0712                     	;# 
  1960  0713                     	;# 
  1961  0714                     	;# 
  1962  0716                     	;# 
  1963  0717                     	;# 
  1964  0718                     	;# 
  1965  0719                     	;# 
  1966  071A                     	;# 
  1967  071B                     	;# 
  1968  071C                     	;# 
  1969  071D                     	;# 
  1970  071E                     	;# 
  1971  0796                     	;# 
  1972  0797                     	;# 
  1973  0798                     	;# 
  1974  0799                     	;# 
  1975  079A                     	;# 
  1976  079B                     	;# 
  1977  080C                     	;# 
  1978  080D                     	;# 
  1979  080E                     	;# 
  1980  080F                     	;# 
  1981  0810                     	;# 
  1982  0811                     	;# 
  1983  0812                     	;# 
  1984  0813                     	;# 
  1985  0814                     	;# 
  1986  081A                     	;# 
  1987  081B                     	;# 
  1988  081C                     	;# 
  1989  081D                     	;# 
  1990  081E                     	;# 
  1991  081F                     	;# 
  1992  088C                     	;# 
  1993  088D                     	;# 
  1994  088E                     	;# 
  1995  088F                     	;# 
  1996  0890                     	;# 
  1997  0891                     	;# 
  1998  0892                     	;# 
  1999  0893                     	;# 
  2000  0895                     	;# 
  2001  0896                     	;# 
  2002  0897                     	;# 
  2003  0898                     	;# 
  2004  0899                     	;# 
  2005  089A                     	;# 
  2006  089B                     	;# 
  2007  090C                     	;# 
  2008  090E                     	;# 
  2009  090F                     	;# 
  2010  091F                     	;# 
  2011  091F                     	;# 
  2012  098F                     	;# 
  2013  098F                     	;# 
  2014  0990                     	;# 
  2015  0991                     	;# 
  2016  0992                     	;# 
  2017  0993                     	;# 
  2018  0994                     	;# 
  2019  0995                     	;# 
  2020  0996                     	;# 
  2021  0997                     	;# 
  2022  0E0F                     	;# 
  2023  0E10                     	;# 
  2024  0E11                     	;# 
  2025  0E12                     	;# 
  2026  0E13                     	;# 
  2027  0E14                     	;# 
  2028  0E15                     	;# 
  2029  0E16                     	;# 
  2030  0E17                     	;# 
  2031  0E18                     	;# 
  2032  0E19                     	;# 
  2033  0E1A                     	;# 
  2034  0E1B                     	;# 
  2035  0E1C                     	;# 
  2036  0E1D                     	;# 
  2037  0E1E                     	;# 
  2038  0E1F                     	;# 
  2039  0E20                     	;# 
  2040  0E21                     	;# 
  2041  0E22                     	;# 
  2042  0E23                     	;# 
  2043  0E24                     	;# 
  2044  0E25                     	;# 
  2045  0E26                     	;# 
  2046  0E27                     	;# 
  2047  0E28                     	;# 
  2048  0E29                     	;# 
  2049  0E2A                     	;# 
  2050  0E2B                     	;# 
  2051  0E2C                     	;# 
  2052  0E2D                     	;# 
  2053  0E2E                     	;# 
  2054  0E2F                     	;# 
  2055  0E30                     	;# 
  2056  0E31                     	;# 
  2057  0E32                     	;# 
  2058  0E33                     	;# 
  2059  0E34                     	;# 
  2060  0E35                     	;# 
  2061  0E36                     	;# 
  2062  0E37                     	;# 
  2063  0E8F                     	;# 
  2064  0E90                     	;# 
  2065  0E91                     	;# 
  2066  0E92                     	;# 
  2067  0E93                     	;# 
  2068  0E94                     	;# 
  2069  0E95                     	;# 
  2070  0E96                     	;# 
  2071  0E97                     	;# 
  2072  0E9C                     	;# 
  2073  0E9D                     	;# 
  2074  0E9E                     	;# 
  2075  0EA1                     	;# 
  2076  0EA2                     	;# 
  2077  0EA3                     	;# 
  2078  0EA4                     	;# 
  2079  0EA5                     	;# 
  2080  0EA9                     	;# 
  2081  0EAA                     	;# 
  2082  0EAB                     	;# 
  2083  0EAC                     	;# 
  2084  0EB1                     	;# 
  2085  0EB2                     	;# 
  2086  0EB3                     	;# 
  2087  0EB8                     	;# 
  2088  0EB9                     	;# 
  2089  0EBA                     	;# 
  2090  0EBB                     	;# 
  2091  0EBC                     	;# 
  2092  0EBD                     	;# 
  2093  0EBE                     	;# 
  2094  0EC3                     	;# 
  2095  0EC5                     	;# 
  2096  0EC6                     	;# 
  2097  0EC7                     	;# 
  2098  0EC8                     	;# 
  2099  0EC9                     	;# 
  2100  0ECA                     	;# 
  2101  0ECB                     	;# 
  2102  0ECC                     	;# 
  2103  0F10                     	;# 
  2104  0F11                     	;# 
  2105  0F12                     	;# 
  2106  0F13                     	;# 
  2107  0F14                     	;# 
  2108  0F15                     	;# 
  2109  0F16                     	;# 
  2110  0F17                     	;# 
  2111  0F18                     	;# 
  2112  0F19                     	;# 
  2113  0F1A                     	;# 
  2114  0F1B                     	;# 
  2115  0F1C                     	;# 
  2116  0F1D                     	;# 
  2117  0F1E                     	;# 
  2118  0F1F                     	;# 
  2119  0F20                     	;# 
  2120  0F21                     	;# 
  2121  0F22                     	;# 
  2122  0F23                     	;# 
  2123  0F24                     	;# 
  2124  0F25                     	;# 
  2125  0F26                     	;# 
  2126  0F27                     	;# 
  2127  0F38                     	;# 
  2128  0F39                     	;# 
  2129  0F3A                     	;# 
  2130  0F3B                     	;# 
  2131  0F3C                     	;# 
  2132  0F3D                     	;# 
  2133  0F3E                     	;# 
  2134  0F3F                     	;# 
  2135  0F40                     	;# 
  2136  0F41                     	;# 
  2137  0F43                     	;# 
  2138  0F44                     	;# 
  2139  0F45                     	;# 
  2140  0F46                     	;# 
  2141  0F47                     	;# 
  2142  0F48                     	;# 
  2143  0F49                     	;# 
  2144  0F4A                     	;# 
  2145  0F4B                     	;# 
  2146  0F4C                     	;# 
  2147  0F4E                     	;# 
  2148  0F4F                     	;# 
  2149  0F50                     	;# 
  2150  0F51                     	;# 
  2151  0F52                     	;# 
  2152  0F53                     	;# 
  2153  0F54                     	;# 
  2154  0F55                     	;# 
  2155  0F56                     	;# 
  2156  0F57                     	;# 
  2157  0F65                     	;# 
  2158  0F68                     	;# 
  2159  0F69                     	;# 
  2160  0F6A                     	;# 
  2161  0F6B                     	;# 
  2162  0FE4                     	;# 
  2163  0FE5                     	;# 
  2164  0FE6                     	;# 
  2165  0FE7                     	;# 
  2166  0FE8                     	;# 
  2167  0FE9                     	;# 
  2168  0FEA                     	;# 
  2169  0FEB                     	;# 
  2170  0FED                     	;# 
  2171  0FEE                     	;# 
  2172  0FEF                     	;# 
  2173  0000                     	;# 
  2174  0001                     	;# 
  2175  0002                     	;# 
  2176  0003                     	;# 
  2177  0004                     	;# 
  2178  0005                     	;# 
  2179  0006                     	;# 
  2180  0007                     	;# 
  2181  0008                     	;# 
  2182  0009                     	;# 
  2183  000A                     	;# 
  2184  000B                     	;# 
  2185  000C                     	;# 
  2186  000D                     	;# 
  2187  000E                     	;# 
  2188  0010                     	;# 
  2189  0011                     	;# 
  2190  0012                     	;# 
  2191  0013                     	;# 
  2192  0016                     	;# 
  2193  0017                     	;# 
  2194  0018                     	;# 
  2195  001C                     	;# 
  2196  001C                     	;# 
  2197  001D                     	;# 
  2198  001D                     	;# 
  2199  001E                     	;# 
  2200  001F                     	;# 
  2201  008C                     	;# 
  2202  008C                     	;# 
  2203  008D                     	;# 
  2204  008E                     	;# 
  2205  008E                     	;# 
  2206  008F                     	;# 
  2207  0090                     	;# 
  2208  0090                     	;# 
  2209  0091                     	;# 
  2210  0093                     	;# 
  2211  0094                     	;# 
  2212  0095                     	;# 
  2213  0096                     	;# 
  2214  0097                     	;# 
  2215  0098                     	;# 
  2216  0099                     	;# 
  2217  009A                     	;# 
  2218  009B                     	;# 
  2219  009C                     	;# 
  2220  009D                     	;# 
  2221  009E                     	;# 
  2222  010C                     	;# 
  2223  010D                     	;# 
  2224  010E                     	;# 
  2225  010E                     	;# 
  2226  010F                     	;# 
  2227  0110                     	;# 
  2228  0110                     	;# 
  2229  0111                     	;# 
  2230  0112                     	;# 
  2231  0112                     	;# 
  2232  0113                     	;# 
  2233  0114                     	;# 
  2234  0114                     	;# 
  2235  0115                     	;# 
  2236  0116                     	;# 
  2237  0116                     	;# 
  2238  0117                     	;# 
  2239  0119                     	;# 
  2240  0119                     	;# 
  2241  0119                     	;# 
  2242  011A                     	;# 
  2243  011A                     	;# 
  2244  011A                     	;# 
  2245  011B                     	;# 
  2246  011B                     	;# 
  2247  011B                     	;# 
  2248  011B                     	;# 
  2249  011B                     	;# 
  2250  011C                     	;# 
  2251  011C                     	;# 
  2252  011C                     	;# 
  2253  011D                     	;# 
  2254  011D                     	;# 
  2255  011D                     	;# 
  2256  011E                     	;# 
  2257  011E                     	;# 
  2258  011E                     	;# 
  2259  011F                     	;# 
  2260  011F                     	;# 
  2261  011F                     	;# 
  2262  011F                     	;# 
  2263  011F                     	;# 
  2264  018C                     	;# 
  2265  018D                     	;# 
  2266  018E                     	;# 
  2267  018F                     	;# 
  2268  0190                     	;# 
  2269  0191                     	;# 
  2270  0192                     	;# 
  2271  0196                     	;# 
  2272  0197                     	;# 
  2273  0198                     	;# 
  2274  0199                     	;# 
  2275  019A                     	;# 
  2276  019B                     	;# 
  2277  019C                     	;# 
  2278  020C                     	;# 
  2279  020C                     	;# 
  2280  020D                     	;# 
  2281  020E                     	;# 
  2282  020F                     	;# 
  2283  020F                     	;# 
  2284  0210                     	;# 
  2285  0210                     	;# 
  2286  0211                     	;# 
  2287  0211                     	;# 
  2288  0212                     	;# 
  2289  0212                     	;# 
  2290  0213                     	;# 
  2291  0214                     	;# 
  2292  0215                     	;# 
  2293  0215                     	;# 
  2294  0216                     	;# 
  2295  0216                     	;# 
  2296  0217                     	;# 
  2297  0217                     	;# 
  2298  0218                     	;# 
  2299  0218                     	;# 
  2300  0219                     	;# 
  2301  021A                     	;# 
  2302  021B                     	;# 
  2303  021B                     	;# 
  2304  021C                     	;# 
  2305  021C                     	;# 
  2306  021D                     	;# 
  2307  021D                     	;# 
  2308  021E                     	;# 
  2309  021F                     	;# 
  2310  028C                     	;# 
  2311  028C                     	;# 
  2312  028D                     	;# 
  2313  028D                     	;# 
  2314  028E                     	;# 
  2315  028F                     	;# 
  2316  0290                     	;# 
  2317  0290                     	;# 
  2318  0291                     	;# 
  2319  0292                     	;# 
  2320  0292                     	;# 
  2321  0293                     	;# 
  2322  0293                     	;# 
  2323  0294                     	;# 
  2324  0295                     	;# 
  2325  0296                     	;# 
  2326  0296                     	;# 
  2327  0297                     	;# 
  2328  0298                     	;# 
  2329  0298                     	;# 
  2330  0299                     	;# 
  2331  0299                     	;# 
  2332  029A                     	;# 
  2333  029B                     	;# 
  2334  029C                     	;# 
  2335  029C                     	;# 
  2336  029D                     	;# 
  2337  030C                     	;# 
  2338  030C                     	;# 
  2339  030D                     	;# 
  2340  030E                     	;# 
  2341  030F                     	;# 
  2342  0310                     	;# 
  2343  0310                     	;# 
  2344  0311                     	;# 
  2345  0312                     	;# 
  2346  0313                     	;# 
  2347  0314                     	;# 
  2348  0314                     	;# 
  2349  0315                     	;# 
  2350  0316                     	;# 
  2351  0317                     	;# 
  2352  0318                     	;# 
  2353  0318                     	;# 
  2354  0319                     	;# 
  2355  031A                     	;# 
  2356  031B                     	;# 
  2357  031C                     	;# 
  2358  031C                     	;# 
  2359  031D                     	;# 
  2360  031E                     	;# 
  2361  031F                     	;# 
  2362  038C                     	;# 
  2363  038D                     	;# 
  2364  038E                     	;# 
  2365  0390                     	;# 
  2366  0391                     	;# 
  2367  0392                     	;# 
  2368  040C                     	;# 
  2369  040D                     	;# 
  2370  040E                     	;# 
  2371  040F                     	;# 
  2372  0410                     	;# 
  2373  0411                     	;# 
  2374  0416                     	;# 
  2375  0416                     	;# 
  2376  0417                     	;# 
  2377  0418                     	;# 
  2378  0418                     	;# 
  2379  0419                     	;# 
  2380  041A                     	;# 
  2381  041A                     	;# 
  2382  041B                     	;# 
  2383  041C                     	;# 
  2384  041C                     	;# 
  2385  041D                     	;# 
  2386  041E                     	;# 
  2387  041F                     	;# 
  2388  048C                     	;# 
  2389  048C                     	;# 
  2390  048D                     	;# 
  2391  048E                     	;# 
  2392  048F                     	;# 
  2393  048F                     	;# 
  2394  0490                     	;# 
  2395  0491                     	;# 
  2396  0492                     	;# 
  2397  0492                     	;# 
  2398  0493                     	;# 
  2399  0494                     	;# 
  2400  0495                     	;# 
  2401  0495                     	;# 
  2402  0496                     	;# 
  2403  0497                     	;# 
  2404  0498                     	;# 
  2405  0499                     	;# 
  2406  049A                     	;# 
  2407  049B                     	;# 
  2408  049C                     	;# 
  2409  049D                     	;# 
  2410  050C                     	;# 
  2411  050C                     	;# 
  2412  050D                     	;# 
  2413  050E                     	;# 
  2414  050F                     	;# 
  2415  050F                     	;# 
  2416  0510                     	;# 
  2417  0511                     	;# 
  2418  0512                     	;# 
  2419  0512                     	;# 
  2420  0513                     	;# 
  2421  0514                     	;# 
  2422  0515                     	;# 
  2423  0515                     	;# 
  2424  0516                     	;# 
  2425  0517                     	;# 
  2426  0518                     	;# 
  2427  0519                     	;# 
  2428  051A                     	;# 
  2429  051B                     	;# 
  2430  051C                     	;# 
  2431  051D                     	;# 
  2432  058C                     	;# 
  2433  058C                     	;# 
  2434  058D                     	;# 
  2435  058E                     	;# 
  2436  058F                     	;# 
  2437  058F                     	;# 
  2438  0590                     	;# 
  2439  0591                     	;# 
  2440  0592                     	;# 
  2441  0593                     	;# 
  2442  060C                     	;# 
  2443  060D                     	;# 
  2444  060E                     	;# 
  2445  060F                     	;# 
  2446  0610                     	;# 
  2447  0611                     	;# 
  2448  0612                     	;# 
  2449  0613                     	;# 
  2450  0614                     	;# 
  2451  0616                     	;# 
  2452  0617                     	;# 
  2453  0618                     	;# 
  2454  0619                     	;# 
  2455  061A                     	;# 
  2456  061B                     	;# 
  2457  061C                     	;# 
  2458  061D                     	;# 
  2459  061E                     	;# 
  2460  068C                     	;# 
  2461  068D                     	;# 
  2462  068E                     	;# 
  2463  068F                     	;# 
  2464  0690                     	;# 
  2465  0691                     	;# 
  2466  0692                     	;# 
  2467  0693                     	;# 
  2468  0694                     	;# 
  2469  070C                     	;# 
  2470  070D                     	;# 
  2471  070E                     	;# 
  2472  070F                     	;# 
  2473  0710                     	;# 
  2474  0711                     	;# 
  2475  0712                     	;# 
  2476  0713                     	;# 
  2477  0714                     	;# 
  2478  0716                     	;# 
  2479  0717                     	;# 
  2480  0718                     	;# 
  2481  0719                     	;# 
  2482  071A                     	;# 
  2483  071B                     	;# 
  2484  071C                     	;# 
  2485  071D                     	;# 
  2486  071E                     	;# 
  2487  0796                     	;# 
  2488  0797                     	;# 
  2489  0798                     	;# 
  2490  0799                     	;# 
  2491  079A                     	;# 
  2492  079B                     	;# 
  2493  080C                     	;# 
  2494  080D                     	;# 
  2495  080E                     	;# 
  2496  080F                     	;# 
  2497  0810                     	;# 
  2498  0811                     	;# 
  2499  0812                     	;# 
  2500  0813                     	;# 
  2501  0814                     	;# 
  2502  081A                     	;# 
  2503  081B                     	;# 
  2504  081C                     	;# 
  2505  081D                     	;# 
  2506  081E                     	;# 
  2507  081F                     	;# 
  2508  088C                     	;# 
  2509  088D                     	;# 
  2510  088E                     	;# 
  2511  088F                     	;# 
  2512  0890                     	;# 
  2513  0891                     	;# 
  2514  0892                     	;# 
  2515  0893                     	;# 
  2516  0895                     	;# 
  2517  0896                     	;# 
  2518  0897                     	;# 
  2519  0898                     	;# 
  2520  0899                     	;# 
  2521  089A                     	;# 
  2522  089B                     	;# 
  2523  090C                     	;# 
  2524  090E                     	;# 
  2525  090F                     	;# 
  2526  091F                     	;# 
  2527  091F                     	;# 
  2528  098F                     	;# 
  2529  098F                     	;# 
  2530  0990                     	;# 
  2531  0991                     	;# 
  2532  0992                     	;# 
  2533  0993                     	;# 
  2534  0994                     	;# 
  2535  0995                     	;# 
  2536  0996                     	;# 
  2537  0997                     	;# 
  2538  0E0F                     	;# 
  2539  0E10                     	;# 
  2540  0E11                     	;# 
  2541  0E12                     	;# 
  2542  0E13                     	;# 
  2543  0E14                     	;# 
  2544  0E15                     	;# 
  2545  0E16                     	;# 
  2546  0E17                     	;# 
  2547  0E18                     	;# 
  2548  0E19                     	;# 
  2549  0E1A                     	;# 
  2550  0E1B                     	;# 
  2551  0E1C                     	;# 
  2552  0E1D                     	;# 
  2553  0E1E                     	;# 
  2554  0E1F                     	;# 
  2555  0E20                     	;# 
  2556  0E21                     	;# 
  2557  0E22                     	;# 
  2558  0E23                     	;# 
  2559  0E24                     	;# 
  2560  0E25                     	;# 
  2561  0E26                     	;# 
  2562  0E27                     	;# 
  2563  0E28                     	;# 
  2564  0E29                     	;# 
  2565  0E2A                     	;# 
  2566  0E2B                     	;# 
  2567  0E2C                     	;# 
  2568  0E2D                     	;# 
  2569  0E2E                     	;# 
  2570  0E2F                     	;# 
  2571  0E30                     	;# 
  2572  0E31                     	;# 
  2573  0E32                     	;# 
  2574  0E33                     	;# 
  2575  0E34                     	;# 
  2576  0E35                     	;# 
  2577  0E36                     	;# 
  2578  0E37                     	;# 
  2579  0E8F                     	;# 
  2580  0E90                     	;# 
  2581  0E91                     	;# 
  2582  0E92                     	;# 
  2583  0E93                     	;# 
  2584  0E94                     	;# 
  2585  0E95                     	;# 
  2586  0E96                     	;# 
  2587  0E97                     	;# 
  2588  0E9C                     	;# 
  2589  0E9D                     	;# 
  2590  0E9E                     	;# 
  2591  0EA1                     	;# 
  2592  0EA2                     	;# 
  2593  0EA3                     	;# 
  2594  0EA4                     	;# 
  2595  0EA5                     	;# 
  2596  0EA9                     	;# 
  2597  0EAA                     	;# 
  2598  0EAB                     	;# 
  2599  0EAC                     	;# 
  2600  0EB1                     	;# 
  2601  0EB2                     	;# 
  2602  0EB3                     	;# 
  2603  0EB8                     	;# 
  2604  0EB9                     	;# 
  2605  0EBA                     	;# 
  2606  0EBB                     	;# 
  2607  0EBC                     	;# 
  2608  0EBD                     	;# 
  2609  0EBE                     	;# 
  2610  0EC3                     	;# 
  2611  0EC5                     	;# 
  2612  0EC6                     	;# 
  2613  0EC7                     	;# 
  2614  0EC8                     	;# 
  2615  0EC9                     	;# 
  2616  0ECA                     	;# 
  2617  0ECB                     	;# 
  2618  0ECC                     	;# 
  2619  0F10                     	;# 
  2620  0F11                     	;# 
  2621  0F12                     	;# 
  2622  0F13                     	;# 
  2623  0F14                     	;# 
  2624  0F15                     	;# 
  2625  0F16                     	;# 
  2626  0F17                     	;# 
  2627  0F18                     	;# 
  2628  0F19                     	;# 
  2629  0F1A                     	;# 
  2630  0F1B                     	;# 
  2631  0F1C                     	;# 
  2632  0F1D                     	;# 
  2633  0F1E                     	;# 
  2634  0F1F                     	;# 
  2635  0F20                     	;# 
  2636  0F21                     	;# 
  2637  0F22                     	;# 
  2638  0F23                     	;# 
  2639  0F24                     	;# 
  2640  0F25                     	;# 
  2641  0F26                     	;# 
  2642  0F27                     	;# 
  2643  0F38                     	;# 
  2644  0F39                     	;# 
  2645  0F3A                     	;# 
  2646  0F3B                     	;# 
  2647  0F3C                     	;# 
  2648  0F3D                     	;# 
  2649  0F3E                     	;# 
  2650  0F3F                     	;# 
  2651  0F40                     	;# 
  2652  0F41                     	;# 
  2653  0F43                     	;# 
  2654  0F44                     	;# 
  2655  0F45                     	;# 
  2656  0F46                     	;# 
  2657  0F47                     	;# 
  2658  0F48                     	;# 
  2659  0F49                     	;# 
  2660  0F4A                     	;# 
  2661  0F4B                     	;# 
  2662  0F4C                     	;# 
  2663  0F4E                     	;# 
  2664  0F4F                     	;# 
  2665  0F50                     	;# 
  2666  0F51                     	;# 
  2667  0F52                     	;# 
  2668  0F53                     	;# 
  2669  0F54                     	;# 
  2670  0F55                     	;# 
  2671  0F56                     	;# 
  2672  0F57                     	;# 
  2673  0F65                     	;# 
  2674  0F68                     	;# 
  2675  0F69                     	;# 
  2676  0F6A                     	;# 
  2677  0F6B                     	;# 
  2678  0FE4                     	;# 
  2679  0FE5                     	;# 
  2680  0FE6                     	;# 
  2681  0FE7                     	;# 
  2682  0FE8                     	;# 
  2683  0FE9                     	;# 
  2684  0FEA                     	;# 
  2685  0FEB                     	;# 
  2686  0FED                     	;# 
  2687  0FEE                     	;# 
  2688  0FEF                     	;# 
  2689  0000                     	;# 
  2690  0001                     	;# 
  2691  0002                     	;# 
  2692  0003                     	;# 
  2693  0004                     	;# 
  2694  0005                     	;# 
  2695  0006                     	;# 
  2696  0007                     	;# 
  2697  0008                     	;# 
  2698  0009                     	;# 
  2699  000A                     	;# 
  2700  000B                     	;# 
  2701  000C                     	;# 
  2702  000D                     	;# 
  2703  000E                     	;# 
  2704  0010                     	;# 
  2705  0011                     	;# 
  2706  0012                     	;# 
  2707  0013                     	;# 
  2708  0016                     	;# 
  2709  0017                     	;# 
  2710  0018                     	;# 
  2711  001C                     	;# 
  2712  001C                     	;# 
  2713  001D                     	;# 
  2714  001D                     	;# 
  2715  001E                     	;# 
  2716  001F                     	;# 
  2717  008C                     	;# 
  2718  008C                     	;# 
  2719  008D                     	;# 
  2720  008E                     	;# 
  2721  008E                     	;# 
  2722  008F                     	;# 
  2723  0090                     	;# 
  2724  0090                     	;# 
  2725  0091                     	;# 
  2726  0093                     	;# 
  2727  0094                     	;# 
  2728  0095                     	;# 
  2729  0096                     	;# 
  2730  0097                     	;# 
  2731  0098                     	;# 
  2732  0099                     	;# 
  2733  009A                     	;# 
  2734  009B                     	;# 
  2735  009C                     	;# 
  2736  009D                     	;# 
  2737  009E                     	;# 
  2738  010C                     	;# 
  2739  010D                     	;# 
  2740  010E                     	;# 
  2741  010E                     	;# 
  2742  010F                     	;# 
  2743  0110                     	;# 
  2744  0110                     	;# 
  2745  0111                     	;# 
  2746  0112                     	;# 
  2747  0112                     	;# 
  2748  0113                     	;# 
  2749  0114                     	;# 
  2750  0114                     	;# 
  2751  0115                     	;# 
  2752  0116                     	;# 
  2753  0116                     	;# 
  2754  0117                     	;# 
  2755  0119                     	;# 
  2756  0119                     	;# 
  2757  0119                     	;# 
  2758  011A                     	;# 
  2759  011A                     	;# 
  2760  011A                     	;# 
  2761  011B                     	;# 
  2762  011B                     	;# 
  2763  011B                     	;# 
  2764  011B                     	;# 
  2765  011B                     	;# 
  2766  011C                     	;# 
  2767  011C                     	;# 
  2768  011C                     	;# 
  2769  011D                     	;# 
  2770  011D                     	;# 
  2771  011D                     	;# 
  2772  011E                     	;# 
  2773  011E                     	;# 
  2774  011E                     	;# 
  2775  011F                     	;# 
  2776  011F                     	;# 
  2777  011F                     	;# 
  2778  011F                     	;# 
  2779  011F                     	;# 
  2780  018C                     	;# 
  2781  018D                     	;# 
  2782  018E                     	;# 
  2783  018F                     	;# 
  2784  0190                     	;# 
  2785  0191                     	;# 
  2786  0192                     	;# 
  2787  0196                     	;# 
  2788  0197                     	;# 
  2789  0198                     	;# 
  2790  0199                     	;# 
  2791  019A                     	;# 
  2792  019B                     	;# 
  2793  019C                     	;# 
  2794  020C                     	;# 
  2795  020C                     	;# 
  2796  020D                     	;# 
  2797  020E                     	;# 
  2798  020F                     	;# 
  2799  020F                     	;# 
  2800  0210                     	;# 
  2801  0210                     	;# 
  2802  0211                     	;# 
  2803  0211                     	;# 
  2804  0212                     	;# 
  2805  0212                     	;# 
  2806  0213                     	;# 
  2807  0214                     	;# 
  2808  0215                     	;# 
  2809  0215                     	;# 
  2810  0216                     	;# 
  2811  0216                     	;# 
  2812  0217                     	;# 
  2813  0217                     	;# 
  2814  0218                     	;# 
  2815  0218                     	;# 
  2816  0219                     	;# 
  2817  021A                     	;# 
  2818  021B                     	;# 
  2819  021B                     	;# 
  2820  021C                     	;# 
  2821  021C                     	;# 
  2822  021D                     	;# 
  2823  021D                     	;# 
  2824  021E                     	;# 
  2825  021F                     	;# 
  2826  028C                     	;# 
  2827  028C                     	;# 
  2828  028D                     	;# 
  2829  028D                     	;# 
  2830  028E                     	;# 
  2831  028F                     	;# 
  2832  0290                     	;# 
  2833  0290                     	;# 
  2834  0291                     	;# 
  2835  0292                     	;# 
  2836  0292                     	;# 
  2837  0293                     	;# 
  2838  0293                     	;# 
  2839  0294                     	;# 
  2840  0295                     	;# 
  2841  0296                     	;# 
  2842  0296                     	;# 
  2843  0297                     	;# 
  2844  0298                     	;# 
  2845  0298                     	;# 
  2846  0299                     	;# 
  2847  0299                     	;# 
  2848  029A                     	;# 
  2849  029B                     	;# 
  2850  029C                     	;# 
  2851  029C                     	;# 
  2852  029D                     	;# 
  2853  030C                     	;# 
  2854  030C                     	;# 
  2855  030D                     	;# 
  2856  030E                     	;# 
  2857  030F                     	;# 
  2858  0310                     	;# 
  2859  0310                     	;# 
  2860  0311                     	;# 
  2861  0312                     	;# 
  2862  0313                     	;# 
  2863  0314                     	;# 
  2864  0314                     	;# 
  2865  0315                     	;# 
  2866  0316                     	;# 
  2867  0317                     	;# 
  2868  0318                     	;# 
  2869  0318                     	;# 
  2870  0319                     	;# 
  2871  031A                     	;# 
  2872  031B                     	;# 
  2873  031C                     	;# 
  2874  031C                     	;# 
  2875  031D                     	;# 
  2876  031E                     	;# 
  2877  031F                     	;# 
  2878  038C                     	;# 
  2879  038D                     	;# 
  2880  038E                     	;# 
  2881  0390                     	;# 
  2882  0391                     	;# 
  2883  0392                     	;# 
  2884  040C                     	;# 
  2885  040D                     	;# 
  2886  040E                     	;# 
  2887  040F                     	;# 
  2888  0410                     	;# 
  2889  0411                     	;# 
  2890  0416                     	;# 
  2891  0416                     	;# 
  2892  0417                     	;# 
  2893  0418                     	;# 
  2894  0418                     	;# 
  2895  0419                     	;# 
  2896  041A                     	;# 
  2897  041A                     	;# 
  2898  041B                     	;# 
  2899  041C                     	;# 
  2900  041C                     	;# 
  2901  041D                     	;# 
  2902  041E                     	;# 
  2903  041F                     	;# 
  2904  048C                     	;# 
  2905  048C                     	;# 
  2906  048D                     	;# 
  2907  048E                     	;# 
  2908  048F                     	;# 
  2909  048F                     	;# 
  2910  0490                     	;# 
  2911  0491                     	;# 
  2912  0492                     	;# 
  2913  0492                     	;# 
  2914  0493                     	;# 
  2915  0494                     	;# 
  2916  0495                     	;# 
  2917  0495                     	;# 
  2918  0496                     	;# 
  2919  0497                     	;# 
  2920  0498                     	;# 
  2921  0499                     	;# 
  2922  049A                     	;# 
  2923  049B                     	;# 
  2924  049C                     	;# 
  2925  049D                     	;# 
  2926  050C                     	;# 
  2927  050C                     	;# 
  2928  050D                     	;# 
  2929  050E                     	;# 
  2930  050F                     	;# 
  2931  050F                     	;# 
  2932  0510                     	;# 
  2933  0511                     	;# 
  2934  0512                     	;# 
  2935  0512                     	;# 
  2936  0513                     	;# 
  2937  0514                     	;# 
  2938  0515                     	;# 
  2939  0515                     	;# 
  2940  0516                     	;# 
  2941  0517                     	;# 
  2942  0518                     	;# 
  2943  0519                     	;# 
  2944  051A                     	;# 
  2945  051B                     	;# 
  2946  051C                     	;# 
  2947  051D                     	;# 
  2948  058C                     	;# 
  2949  058C                     	;# 
  2950  058D                     	;# 
  2951  058E                     	;# 
  2952  058F                     	;# 
  2953  058F                     	;# 
  2954  0590                     	;# 
  2955  0591                     	;# 
  2956  0592                     	;# 
  2957  0593                     	;# 
  2958  060C                     	;# 
  2959  060D                     	;# 
  2960  060E                     	;# 
  2961  060F                     	;# 
  2962  0610                     	;# 
  2963  0611                     	;# 
  2964  0612                     	;# 
  2965  0613                     	;# 
  2966  0614                     	;# 
  2967  0616                     	;# 
  2968  0617                     	;# 
  2969  0618                     	;# 
  2970  0619                     	;# 
  2971  061A                     	;# 
  2972  061B                     	;# 
  2973  061C                     	;# 
  2974  061D                     	;# 
  2975  061E                     	;# 
  2976  068C                     	;# 
  2977  068D                     	;# 
  2978  068E                     	;# 
  2979  068F                     	;# 
  2980  0690                     	;# 
  2981  0691                     	;# 
  2982  0692                     	;# 
  2983  0693                     	;# 
  2984  0694                     	;# 
  2985  070C                     	;# 
  2986  070D                     	;# 
  2987  070E                     	;# 
  2988  070F                     	;# 
  2989  0710                     	;# 
  2990  0711                     	;# 
  2991  0712                     	;# 
  2992  0713                     	;# 
  2993  0714                     	;# 
  2994  0716                     	;# 
  2995  0717                     	;# 
  2996  0718                     	;# 
  2997  0719                     	;# 
  2998  071A                     	;# 
  2999  071B                     	;# 
  3000  071C                     	;# 
  3001  071D                     	;# 
  3002  071E                     	;# 
  3003  0796                     	;# 
  3004  0797                     	;# 
  3005  0798                     	;# 
  3006  0799                     	;# 
  3007  079A                     	;# 
  3008  079B                     	;# 
  3009  080C                     	;# 
  3010  080D                     	;# 
  3011  080E                     	;# 
  3012  080F                     	;# 
  3013  0810                     	;# 
  3014  0811                     	;# 
  3015  0812                     	;# 
  3016  0813                     	;# 
  3017  0814                     	;# 
  3018  081A                     	;# 
  3019  081B                     	;# 
  3020  081C                     	;# 
  3021  081D                     	;# 
  3022  081E                     	;# 
  3023  081F                     	;# 
  3024  088C                     	;# 
  3025  088D                     	;# 
  3026  088E                     	;# 
  3027  088F                     	;# 
  3028  0890                     	;# 
  3029  0891                     	;# 
  3030  0892                     	;# 
  3031  0893                     	;# 
  3032  0895                     	;# 
  3033  0896                     	;# 
  3034  0897                     	;# 
  3035  0898                     	;# 
  3036  0899                     	;# 
  3037  089A                     	;# 
  3038  089B                     	;# 
  3039  090C                     	;# 
  3040  090E                     	;# 
  3041  090F                     	;# 
  3042  091F                     	;# 
  3043  091F                     	;# 
  3044  098F                     	;# 
  3045  098F                     	;# 
  3046  0990                     	;# 
  3047  0991                     	;# 
  3048  0992                     	;# 
  3049  0993                     	;# 
  3050  0994                     	;# 
  3051  0995                     	;# 
  3052  0996                     	;# 
  3053  0997                     	;# 
  3054  0E0F                     	;# 
  3055  0E10                     	;# 
  3056  0E11                     	;# 
  3057  0E12                     	;# 
  3058  0E13                     	;# 
  3059  0E14                     	;# 
  3060  0E15                     	;# 
  3061  0E16                     	;# 
  3062  0E17                     	;# 
  3063  0E18                     	;# 
  3064  0E19                     	;# 
  3065  0E1A                     	;# 
  3066  0E1B                     	;# 
  3067  0E1C                     	;# 
  3068  0E1D                     	;# 
  3069  0E1E                     	;# 
  3070  0E1F                     	;# 
  3071  0E20                     	;# 
  3072  0E21                     	;# 
  3073  0E22                     	;# 
  3074  0E23                     	;# 
  3075  0E24                     	;# 
  3076  0E25                     	;# 
  3077  0E26                     	;# 
  3078  0E27                     	;# 
  3079  0E28                     	;# 
  3080  0E29                     	;# 
  3081  0E2A                     	;# 
  3082  0E2B                     	;# 
  3083  0E2C                     	;# 
  3084  0E2D                     	;# 
  3085  0E2E                     	;# 
  3086  0E2F                     	;# 
  3087  0E30                     	;# 
  3088  0E31                     	;# 
  3089  0E32                     	;# 
  3090  0E33                     	;# 
  3091  0E34                     	;# 
  3092  0E35                     	;# 
  3093  0E36                     	;# 
  3094  0E37                     	;# 
  3095  0E8F                     	;# 
  3096  0E90                     	;# 
  3097  0E91                     	;# 
  3098  0E92                     	;# 
  3099  0E93                     	;# 
  3100  0E94                     	;# 
  3101  0E95                     	;# 
  3102  0E96                     	;# 
  3103  0E97                     	;# 
  3104  0E9C                     	;# 
  3105  0E9D                     	;# 
  3106  0E9E                     	;# 
  3107  0EA1                     	;# 
  3108  0EA2                     	;# 
  3109  0EA3                     	;# 
  3110  0EA4                     	;# 
  3111  0EA5                     	;# 
  3112  0EA9                     	;# 
  3113  0EAA                     	;# 
  3114  0EAB                     	;# 
  3115  0EAC                     	;# 
  3116  0EB1                     	;# 
  3117  0EB2                     	;# 
  3118  0EB3                     	;# 
  3119  0EB8                     	;# 
  3120  0EB9                     	;# 
  3121  0EBA                     	;# 
  3122  0EBB                     	;# 
  3123  0EBC                     	;# 
  3124  0EBD                     	;# 
  3125  0EBE                     	;# 
  3126  0EC3                     	;# 
  3127  0EC5                     	;# 
  3128  0EC6                     	;# 
  3129  0EC7                     	;# 
  3130  0EC8                     	;# 
  3131  0EC9                     	;# 
  3132  0ECA                     	;# 
  3133  0ECB                     	;# 
  3134  0ECC                     	;# 
  3135  0F10                     	;# 
  3136  0F11                     	;# 
  3137  0F12                     	;# 
  3138  0F13                     	;# 
  3139  0F14                     	;# 
  3140  0F15                     	;# 
  3141  0F16                     	;# 
  3142  0F17                     	;# 
  3143  0F18                     	;# 
  3144  0F19                     	;# 
  3145  0F1A                     	;# 
  3146  0F1B                     	;# 
  3147  0F1C                     	;# 
  3148  0F1D                     	;# 
  3149  0F1E                     	;# 
  3150  0F1F                     	;# 
  3151  0F20                     	;# 
  3152  0F21                     	;# 
  3153  0F22                     	;# 
  3154  0F23                     	;# 
  3155  0F24                     	;# 
  3156  0F25                     	;# 
  3157  0F26                     	;# 
  3158  0F27                     	;# 
  3159  0F38                     	;# 
  3160  0F39                     	;# 
  3161  0F3A                     	;# 
  3162  0F3B                     	;# 
  3163  0F3C                     	;# 
  3164  0F3D                     	;# 
  3165  0F3E                     	;# 
  3166  0F3F                     	;# 
  3167  0F40                     	;# 
  3168  0F41                     	;# 
  3169  0F43                     	;# 
  3170  0F44                     	;# 
  3171  0F45                     	;# 
  3172  0F46                     	;# 
  3173  0F47                     	;# 
  3174  0F48                     	;# 
  3175  0F49                     	;# 
  3176  0F4A                     	;# 
  3177  0F4B                     	;# 
  3178  0F4C                     	;# 
  3179  0F4E                     	;# 
  3180  0F4F                     	;# 
  3181  0F50                     	;# 
  3182  0F51                     	;# 
  3183  0F52                     	;# 
  3184  0F53                     	;# 
  3185  0F54                     	;# 
  3186  0F55                     	;# 
  3187  0F56                     	;# 
  3188  0F57                     	;# 
  3189  0F65                     	;# 
  3190  0F68                     	;# 
  3191  0F69                     	;# 
  3192  0F6A                     	;# 
  3193  0F6B                     	;# 
  3194  0FE4                     	;# 
  3195  0FE5                     	;# 
  3196  0FE6                     	;# 
  3197  0FE7                     	;# 
  3198  0FE8                     	;# 
  3199  0FE9                     	;# 
  3200  0FEA                     	;# 
  3201  0FEB                     	;# 
  3202  0FED                     	;# 
  3203  0FEE                     	;# 
  3204  0FEF                     	;# 
  3205  0000                     	;# 
  3206  0001                     	;# 
  3207  0002                     	;# 
  3208  0003                     	;# 
  3209  0004                     	;# 
  3210  0005                     	;# 
  3211  0006                     	;# 
  3212  0007                     	;# 
  3213  0008                     	;# 
  3214  0009                     	;# 
  3215  000A                     	;# 
  3216  000B                     	;# 
  3217  000C                     	;# 
  3218  000D                     	;# 
  3219  000E                     	;# 
  3220  0010                     	;# 
  3221  0011                     	;# 
  3222  0012                     	;# 
  3223  0013                     	;# 
  3224  0016                     	;# 
  3225  0017                     	;# 
  3226  0018                     	;# 
  3227  001C                     	;# 
  3228  001C                     	;# 
  3229  001D                     	;# 
  3230  001D                     	;# 
  3231  001E                     	;# 
  3232  001F                     	;# 
  3233  008C                     	;# 
  3234  008C                     	;# 
  3235  008D                     	;# 
  3236  008E                     	;# 
  3237  008E                     	;# 
  3238  008F                     	;# 
  3239  0090                     	;# 
  3240  0090                     	;# 
  3241  0091                     	;# 
  3242  0093                     	;# 
  3243  0094                     	;# 
  3244  0095                     	;# 
  3245  0096                     	;# 
  3246  0097                     	;# 
  3247  0098                     	;# 
  3248  0099                     	;# 
  3249  009A                     	;# 
  3250  009B                     	;# 
  3251  009C                     	;# 
  3252  009D                     	;# 
  3253  009E                     	;# 
  3254  010C                     	;# 
  3255  010D                     	;# 
  3256  010E                     	;# 
  3257  010E                     	;# 
  3258  010F                     	;# 
  3259  0110                     	;# 
  3260  0110                     	;# 
  3261  0111                     	;# 
  3262  0112                     	;# 
  3263  0112                     	;# 
  3264  0113                     	;# 
  3265  0114                     	;# 
  3266  0114                     	;# 
  3267  0115                     	;# 
  3268  0116                     	;# 
  3269  0116                     	;# 
  3270  0117                     	;# 
  3271  0119                     	;# 
  3272  0119                     	;# 
  3273  0119                     	;# 
  3274  011A                     	;# 
  3275  011A                     	;# 
  3276  011A                     	;# 
  3277  011B                     	;# 
  3278  011B                     	;# 
  3279  011B                     	;# 
  3280  011B                     	;# 
  3281  011B                     	;# 
  3282  011C                     	;# 
  3283  011C                     	;# 
  3284  011C                     	;# 
  3285  011D                     	;# 
  3286  011D                     	;# 
  3287  011D                     	;# 
  3288  011E                     	;# 
  3289  011E                     	;# 
  3290  011E                     	;# 
  3291  011F                     	;# 
  3292  011F                     	;# 
  3293  011F                     	;# 
  3294  011F                     	;# 
  3295  011F                     	;# 
  3296  018C                     	;# 
  3297  018D                     	;# 
  3298  018E                     	;# 
  3299  018F                     	;# 
  3300  0190                     	;# 
  3301  0191                     	;# 
  3302  0192                     	;# 
  3303  0196                     	;# 
  3304  0197                     	;# 
  3305  0198                     	;# 
  3306  0199                     	;# 
  3307  019A                     	;# 
  3308  019B                     	;# 
  3309  019C                     	;# 
  3310  020C                     	;# 
  3311  020C                     	;# 
  3312  020D                     	;# 
  3313  020E                     	;# 
  3314  020F                     	;# 
  3315  020F                     	;# 
  3316  0210                     	;# 
  3317  0210                     	;# 
  3318  0211                     	;# 
  3319  0211                     	;# 
  3320  0212                     	;# 
  3321  0212                     	;# 
  3322  0213                     	;# 
  3323  0214                     	;# 
  3324  0215                     	;# 
  3325  0215                     	;# 
  3326  0216                     	;# 
  3327  0216                     	;# 
  3328  0217                     	;# 
  3329  0217                     	;# 
  3330  0218                     	;# 
  3331  0218                     	;# 
  3332  0219                     	;# 
  3333  021A                     	;# 
  3334  021B                     	;# 
  3335  021B                     	;# 
  3336  021C                     	;# 
  3337  021C                     	;# 
  3338  021D                     	;# 
  3339  021D                     	;# 
  3340  021E                     	;# 
  3341  021F                     	;# 
  3342  028C                     	;# 
  3343  028C                     	;# 
  3344  028D                     	;# 
  3345  028D                     	;# 
  3346  028E                     	;# 
  3347  028F                     	;# 
  3348  0290                     	;# 
  3349  0290                     	;# 
  3350  0291                     	;# 
  3351  0292                     	;# 
  3352  0292                     	;# 
  3353  0293                     	;# 
  3354  0293                     	;# 
  3355  0294                     	;# 
  3356  0295                     	;# 
  3357  0296                     	;# 
  3358  0296                     	;# 
  3359  0297                     	;# 
  3360  0298                     	;# 
  3361  0298                     	;# 
  3362  0299                     	;# 
  3363  0299                     	;# 
  3364  029A                     	;# 
  3365  029B                     	;# 
  3366  029C                     	;# 
  3367  029C                     	;# 
  3368  029D                     	;# 
  3369  030C                     	;# 
  3370  030C                     	;# 
  3371  030D                     	;# 
  3372  030E                     	;# 
  3373  030F                     	;# 
  3374  0310                     	;# 
  3375  0310                     	;# 
  3376  0311                     	;# 
  3377  0312                     	;# 
  3378  0313                     	;# 
  3379  0314                     	;# 
  3380  0314                     	;# 
  3381  0315                     	;# 
  3382  0316                     	;# 
  3383  0317                     	;# 
  3384  0318                     	;# 
  3385  0318                     	;# 
  3386  0319                     	;# 
  3387  031A                     	;# 
  3388  031B                     	;# 
  3389  031C                     	;# 
  3390  031C                     	;# 
  3391  031D                     	;# 
  3392  031E                     	;# 
  3393  031F                     	;# 
  3394  038C                     	;# 
  3395  038D                     	;# 
  3396  038E                     	;# 
  3397  0390                     	;# 
  3398  0391                     	;# 
  3399  0392                     	;# 
  3400  040C                     	;# 
  3401  040D                     	;# 
  3402  040E                     	;# 
  3403  040F                     	;# 
  3404  0410                     	;# 
  3405  0411                     	;# 
  3406  0416                     	;# 
  3407  0416                     	;# 
  3408  0417                     	;# 
  3409  0418                     	;# 
  3410  0418                     	;# 
  3411  0419                     	;# 
  3412  041A                     	;# 
  3413  041A                     	;# 
  3414  041B                     	;# 
  3415  041C                     	;# 
  3416  041C                     	;# 
  3417  041D                     	;# 
  3418  041E                     	;# 
  3419  041F                     	;# 
  3420  048C                     	;# 
  3421  048C                     	;# 
  3422  048D                     	;# 
  3423  048E                     	;# 
  3424  048F                     	;# 
  3425  048F                     	;# 
  3426  0490                     	;# 
  3427  0491                     	;# 
  3428  0492                     	;# 
  3429  0492                     	;# 
  3430  0493                     	;# 
  3431  0494                     	;# 
  3432  0495                     	;# 
  3433  0495                     	;# 
  3434  0496                     	;# 
  3435  0497                     	;# 
  3436  0498                     	;# 
  3437  0499                     	;# 
  3438  049A                     	;# 
  3439  049B                     	;# 
  3440  049C                     	;# 
  3441  049D                     	;# 
  3442  050C                     	;# 
  3443  050C                     	;# 
  3444  050D                     	;# 
  3445  050E                     	;# 
  3446  050F                     	;# 
  3447  050F                     	;# 
  3448  0510                     	;# 
  3449  0511                     	;# 
  3450  0512                     	;# 
  3451  0512                     	;# 
  3452  0513                     	;# 
  3453  0514                     	;# 
  3454  0515                     	;# 
  3455  0515                     	;# 
  3456  0516                     	;# 
  3457  0517                     	;# 
  3458  0518                     	;# 
  3459  0519                     	;# 
  3460  051A                     	;# 
  3461  051B                     	;# 
  3462  051C                     	;# 
  3463  051D                     	;# 
  3464  058C                     	;# 
  3465  058C                     	;# 
  3466  058D                     	;# 
  3467  058E                     	;# 
  3468  058F                     	;# 
  3469  058F                     	;# 
  3470  0590                     	;# 
  3471  0591                     	;# 
  3472  0592                     	;# 
  3473  0593                     	;# 
  3474  060C                     	;# 
  3475  060D                     	;# 
  3476  060E                     	;# 
  3477  060F                     	;# 
  3478  0610                     	;# 
  3479  0611                     	;# 
  3480  0612                     	;# 
  3481  0613                     	;# 
  3482  0614                     	;# 
  3483  0616                     	;# 
  3484  0617                     	;# 
  3485  0618                     	;# 
  3486  0619                     	;# 
  3487  061A                     	;# 
  3488  061B                     	;# 
  3489  061C                     	;# 
  3490  061D                     	;# 
  3491  061E                     	;# 
  3492  068C                     	;# 
  3493  068D                     	;# 
  3494  068E                     	;# 
  3495  068F                     	;# 
  3496  0690                     	;# 
  3497  0691                     	;# 
  3498  0692                     	;# 
  3499  0693                     	;# 
  3500  0694                     	;# 
  3501  070C                     	;# 
  3502  070D                     	;# 
  3503  070E                     	;# 
  3504  070F                     	;# 
  3505  0710                     	;# 
  3506  0711                     	;# 
  3507  0712                     	;# 
  3508  0713                     	;# 
  3509  0714                     	;# 
  3510  0716                     	;# 
  3511  0717                     	;# 
  3512  0718                     	;# 
  3513  0719                     	;# 
  3514  071A                     	;# 
  3515  071B                     	;# 
  3516  071C                     	;# 
  3517  071D                     	;# 
  3518  071E                     	;# 
  3519  0796                     	;# 
  3520  0797                     	;# 
  3521  0798                     	;# 
  3522  0799                     	;# 
  3523  079A                     	;# 
  3524  079B                     	;# 
  3525  080C                     	;# 
  3526  080D                     	;# 
  3527  080E                     	;# 
  3528  080F                     	;# 
  3529  0810                     	;# 
  3530  0811                     	;# 
  3531  0812                     	;# 
  3532  0813                     	;# 
  3533  0814                     	;# 
  3534  081A                     	;# 
  3535  081B                     	;# 
  3536  081C                     	;# 
  3537  081D                     	;# 
  3538  081E                     	;# 
  3539  081F                     	;# 
  3540  088C                     	;# 
  3541  088D                     	;# 
  3542  088E                     	;# 
  3543  088F                     	;# 
  3544  0890                     	;# 
  3545  0891                     	;# 
  3546  0892                     	;# 
  3547  0893                     	;# 
  3548  0895                     	;# 
  3549  0896                     	;# 
  3550  0897                     	;# 
  3551  0898                     	;# 
  3552  0899                     	;# 
  3553  089A                     	;# 
  3554  089B                     	;# 
  3555  090C                     	;# 
  3556  090E                     	;# 
  3557  090F                     	;# 
  3558  091F                     	;# 
  3559  091F                     	;# 
  3560  098F                     	;# 
  3561  098F                     	;# 
  3562  0990                     	;# 
  3563  0991                     	;# 
  3564  0992                     	;# 
  3565  0993                     	;# 
  3566  0994                     	;# 
  3567  0995                     	;# 
  3568  0996                     	;# 
  3569  0997                     	;# 
  3570  0E0F                     	;# 
  3571  0E10                     	;# 
  3572  0E11                     	;# 
  3573  0E12                     	;# 
  3574  0E13                     	;# 
  3575  0E14                     	;# 
  3576  0E15                     	;# 
  3577  0E16                     	;# 
  3578  0E17                     	;# 
  3579  0E18                     	;# 
  3580  0E19                     	;# 
  3581  0E1A                     	;# 
  3582  0E1B                     	;# 
  3583  0E1C                     	;# 
  3584  0E1D                     	;# 
  3585  0E1E                     	;# 
  3586  0E1F                     	;# 
  3587  0E20                     	;# 
  3588  0E21                     	;# 
  3589  0E22                     	;# 
  3590  0E23                     	;# 
  3591  0E24                     	;# 
  3592  0E25                     	;# 
  3593  0E26                     	;# 
  3594  0E27                     	;# 
  3595  0E28                     	;# 
  3596  0E29                     	;# 
  3597  0E2A                     	;# 
  3598  0E2B                     	;# 
  3599  0E2C                     	;# 
  3600  0E2D                     	;# 
  3601  0E2E                     	;# 
  3602  0E2F                     	;# 
  3603  0E30                     	;# 
  3604  0E31                     	;# 
  3605  0E32                     	;# 
  3606  0E33                     	;# 
  3607  0E34                     	;# 
  3608  0E35                     	;# 
  3609  0E36                     	;# 
  3610  0E37                     	;# 
  3611  0E8F                     	;# 
  3612  0E90                     	;# 
  3613  0E91                     	;# 
  3614  0E92                     	;# 
  3615  0E93                     	;# 
  3616  0E94                     	;# 
  3617  0E95                     	;# 
  3618  0E96                     	;# 
  3619  0E97                     	;# 
  3620  0E9C                     	;# 
  3621  0E9D                     	;# 
  3622  0E9E                     	;# 
  3623  0EA1                     	;# 
  3624  0EA2                     	;# 
  3625  0EA3                     	;# 
  3626  0EA4                     	;# 
  3627  0EA5                     	;# 
  3628  0EA9                     	;# 
  3629  0EAA                     	;# 
  3630  0EAB                     	;# 
  3631  0EAC                     	;# 
  3632  0EB1                     	;# 
  3633  0EB2                     	;# 
  3634  0EB3                     	;# 
  3635  0EB8                     	;# 
  3636  0EB9                     	;# 
  3637  0EBA                     	;# 
  3638  0EBB                     	;# 
  3639  0EBC                     	;# 
  3640  0EBD                     	;# 
  3641  0EBE                     	;# 
  3642  0EC3                     	;# 
  3643  0EC5                     	;# 
  3644  0EC6                     	;# 
  3645  0EC7                     	;# 
  3646  0EC8                     	;# 
  3647  0EC9                     	;# 
  3648  0ECA                     	;# 
  3649  0ECB                     	;# 
  3650  0ECC                     	;# 
  3651  0F10                     	;# 
  3652  0F11                     	;# 
  3653  0F12                     	;# 
  3654  0F13                     	;# 
  3655  0F14                     	;# 
  3656  0F15                     	;# 
  3657  0F16                     	;# 
  3658  0F17                     	;# 
  3659  0F18                     	;# 
  3660  0F19                     	;# 
  3661  0F1A                     	;# 
  3662  0F1B                     	;# 
  3663  0F1C                     	;# 
  3664  0F1D                     	;# 
  3665  0F1E                     	;# 
  3666  0F1F                     	;# 
  3667  0F20                     	;# 
  3668  0F21                     	;# 
  3669  0F22                     	;# 
  3670  0F23                     	;# 
  3671  0F24                     	;# 
  3672  0F25                     	;# 
  3673  0F26                     	;# 
  3674  0F27                     	;# 
  3675  0F38                     	;# 
  3676  0F39                     	;# 
  3677  0F3A                     	;# 
  3678  0F3B                     	;# 
  3679  0F3C                     	;# 
  3680  0F3D                     	;# 
  3681  0F3E                     	;# 
  3682  0F3F                     	;# 
  3683  0F40                     	;# 
  3684  0F41                     	;# 
  3685  0F43                     	;# 
  3686  0F44                     	;# 
  3687  0F45                     	;# 
  3688  0F46                     	;# 
  3689  0F47                     	;# 
  3690  0F48                     	;# 
  3691  0F49                     	;# 
  3692  0F4A                     	;# 
  3693  0F4B                     	;# 
  3694  0F4C                     	;# 
  3695  0F4E                     	;# 
  3696  0F4F                     	;# 
  3697  0F50                     	;# 
  3698  0F51                     	;# 
  3699  0F52                     	;# 
  3700  0F53                     	;# 
  3701  0F54                     	;# 
  3702  0F55                     	;# 
  3703  0F56                     	;# 
  3704  0F57                     	;# 
  3705  0F65                     	;# 
  3706  0F68                     	;# 
  3707  0F69                     	;# 
  3708  0F6A                     	;# 
  3709  0F6B                     	;# 
  3710  0FE4                     	;# 
  3711  0FE5                     	;# 
  3712  0FE6                     	;# 
  3713  0FE7                     	;# 
  3714  0FE8                     	;# 
  3715  0FE9                     	;# 
  3716  0FEA                     	;# 
  3717  0FEB                     	;# 
  3718  0FED                     	;# 
  3719  0FEE                     	;# 
  3720  0FEF                     	;# 
  3721  0000                     	;# 
  3722  0001                     	;# 
  3723  0002                     	;# 
  3724  0003                     	;# 
  3725  0004                     	;# 
  3726  0005                     	;# 
  3727  0006                     	;# 
  3728  0007                     	;# 
  3729  0008                     	;# 
  3730  0009                     	;# 
  3731  000A                     	;# 
  3732  000B                     	;# 
  3733  000C                     	;# 
  3734  000D                     	;# 
  3735  000E                     	;# 
  3736  0010                     	;# 
  3737  0011                     	;# 
  3738  0012                     	;# 
  3739  0013                     	;# 
  3740  0016                     	;# 
  3741  0017                     	;# 
  3742  0018                     	;# 
  3743  001C                     	;# 
  3744  001C                     	;# 
  3745  001D                     	;# 
  3746  001D                     	;# 
  3747  001E                     	;# 
  3748  001F                     	;# 
  3749  008C                     	;# 
  3750  008C                     	;# 
  3751  008D                     	;# 
  3752  008E                     	;# 
  3753  008E                     	;# 
  3754  008F                     	;# 
  3755  0090                     	;# 
  3756  0090                     	;# 
  3757  0091                     	;# 
  3758  0093                     	;# 
  3759  0094                     	;# 
  3760  0095                     	;# 
  3761  0096                     	;# 
  3762  0097                     	;# 
  3763  0098                     	;# 
  3764  0099                     	;# 
  3765  009A                     	;# 
  3766  009B                     	;# 
  3767  009C                     	;# 
  3768  009D                     	;# 
  3769  009E                     	;# 
  3770  010C                     	;# 
  3771  010D                     	;# 
  3772  010E                     	;# 
  3773  010E                     	;# 
  3774  010F                     	;# 
  3775  0110                     	;# 
  3776  0110                     	;# 
  3777  0111                     	;# 
  3778  0112                     	;# 
  3779  0112                     	;# 
  3780  0113                     	;# 
  3781  0114                     	;# 
  3782  0114                     	;# 
  3783  0115                     	;# 
  3784  0116                     	;# 
  3785  0116                     	;# 
  3786  0117                     	;# 
  3787  0119                     	;# 
  3788  0119                     	;# 
  3789  0119                     	;# 
  3790  011A                     	;# 
  3791  011A                     	;# 
  3792  011A                     	;# 
  3793  011B                     	;# 
  3794  011B                     	;# 
  3795  011B                     	;# 
  3796  011B                     	;# 
  3797  011B                     	;# 
  3798  011C                     	;# 
  3799  011C                     	;# 
  3800  011C                     	;# 
  3801  011D                     	;# 
  3802  011D                     	;# 
  3803  011D                     	;# 
  3804  011E                     	;# 
  3805  011E                     	;# 
  3806  011E                     	;# 
  3807  011F                     	;# 
  3808  011F                     	;# 
  3809  011F                     	;# 
  3810  011F                     	;# 
  3811  011F                     	;# 
  3812  018C                     	;# 
  3813  018D                     	;# 
  3814  018E                     	;# 
  3815  018F                     	;# 
  3816  0190                     	;# 
  3817  0191                     	;# 
  3818  0192                     	;# 
  3819  0196                     	;# 
  3820  0197                     	;# 
  3821  0198                     	;# 
  3822  0199                     	;# 
  3823  019A                     	;# 
  3824  019B                     	;# 
  3825  019C                     	;# 
  3826  020C                     	;# 
  3827  020C                     	;# 
  3828  020D                     	;# 
  3829  020E                     	;# 
  3830  020F                     	;# 
  3831  020F                     	;# 
  3832  0210                     	;# 
  3833  0210                     	;# 
  3834  0211                     	;# 
  3835  0211                     	;# 
  3836  0212                     	;# 
  3837  0212                     	;# 
  3838  0213                     	;# 
  3839  0214                     	;# 
  3840  0215                     	;# 
  3841  0215                     	;# 
  3842  0216                     	;# 
  3843  0216                     	;# 
  3844  0217                     	;# 
  3845  0217                     	;# 
  3846  0218                     	;# 
  3847  0218                     	;# 
  3848  0219                     	;# 
  3849  021A                     	;# 
  3850  021B                     	;# 
  3851  021B                     	;# 
  3852  021C                     	;# 
  3853  021C                     	;# 
  3854  021D                     	;# 
  3855  021D                     	;# 
  3856  021E                     	;# 
  3857  021F                     	;# 
  3858  028C                     	;# 
  3859  028C                     	;# 
  3860  028D                     	;# 
  3861  028D                     	;# 
  3862  028E                     	;# 
  3863  028F                     	;# 
  3864  0290                     	;# 
  3865  0290                     	;# 
  3866  0291                     	;# 
  3867  0292                     	;# 
  3868  0292                     	;# 
  3869  0293                     	;# 
  3870  0293                     	;# 
  3871  0294                     	;# 
  3872  0295                     	;# 
  3873  0296                     	;# 
  3874  0296                     	;# 
  3875  0297                     	;# 
  3876  0298                     	;# 
  3877  0298                     	;# 
  3878  0299                     	;# 
  3879  0299                     	;# 
  3880  029A                     	;# 
  3881  029B                     	;# 
  3882  029C                     	;# 
  3883  029C                     	;# 
  3884  029D                     	;# 
  3885  030C                     	;# 
  3886  030C                     	;# 
  3887  030D                     	;# 
  3888  030E                     	;# 
  3889  030F                     	;# 
  3890  0310                     	;# 
  3891  0310                     	;# 
  3892  0311                     	;# 
  3893  0312                     	;# 
  3894  0313                     	;# 
  3895  0314                     	;# 
  3896  0314                     	;# 
  3897  0315                     	;# 
  3898  0316                     	;# 
  3899  0317                     	;# 
  3900  0318                     	;# 
  3901  0318                     	;# 
  3902  0319                     	;# 
  3903  031A                     	;# 
  3904  031B                     	;# 
  3905  031C                     	;# 
  3906  031C                     	;# 
  3907  031D                     	;# 
  3908  031E                     	;# 
  3909  031F                     	;# 
  3910  038C                     	;# 
  3911  038D                     	;# 
  3912  038E                     	;# 
  3913  0390                     	;# 
  3914  0391                     	;# 
  3915  0392                     	;# 
  3916  040C                     	;# 
  3917  040D                     	;# 
  3918  040E                     	;# 
  3919  040F                     	;# 
  3920  0410                     	;# 
  3921  0411                     	;# 
  3922  0416                     	;# 
  3923  0416                     	;# 
  3924  0417                     	;# 
  3925  0418                     	;# 
  3926  0418                     	;# 
  3927  0419                     	;# 
  3928  041A                     	;# 
  3929  041A                     	;# 
  3930  041B                     	;# 
  3931  041C                     	;# 
  3932  041C                     	;# 
  3933  041D                     	;# 
  3934  041E                     	;# 
  3935  041F                     	;# 
  3936  048C                     	;# 
  3937  048C                     	;# 
  3938  048D                     	;# 
  3939  048E                     	;# 
  3940  048F                     	;# 
  3941  048F                     	;# 
  3942  0490                     	;# 
  3943  0491                     	;# 
  3944  0492                     	;# 
  3945  0492                     	;# 
  3946  0493                     	;# 
  3947  0494                     	;# 
  3948  0495                     	;# 
  3949  0495                     	;# 
  3950  0496                     	;# 
  3951  0497                     	;# 
  3952  0498                     	;# 
  3953  0499                     	;# 
  3954  049A                     	;# 
  3955  049B                     	;# 
  3956  049C                     	;# 
  3957  049D                     	;# 
  3958  050C                     	;# 
  3959  050C                     	;# 
  3960  050D                     	;# 
  3961  050E                     	;# 
  3962  050F                     	;# 
  3963  050F                     	;# 
  3964  0510                     	;# 
  3965  0511                     	;# 
  3966  0512                     	;# 
  3967  0512                     	;# 
  3968  0513                     	;# 
  3969  0514                     	;# 
  3970  0515                     	;# 
  3971  0515                     	;# 
  3972  0516                     	;# 
  3973  0517                     	;# 
  3974  0518                     	;# 
  3975  0519                     	;# 
  3976  051A                     	;# 
  3977  051B                     	;# 
  3978  051C                     	;# 
  3979  051D                     	;# 
  3980  058C                     	;# 
  3981  058C                     	;# 
  3982  058D                     	;# 
  3983  058E                     	;# 
  3984  058F                     	;# 
  3985  058F                     	;# 
  3986  0590                     	;# 
  3987  0591                     	;# 
  3988  0592                     	;# 
  3989  0593                     	;# 
  3990  060C                     	;# 
  3991  060D                     	;# 
  3992  060E                     	;# 
  3993  060F                     	;# 
  3994  0610                     	;# 
  3995  0611                     	;# 
  3996  0612                     	;# 
  3997  0613                     	;# 
  3998  0614                     	;# 
  3999  0616                     	;# 
  4000  0617                     	;# 
  4001  0618                     	;# 
  4002  0619                     	;# 
  4003  061A                     	;# 
  4004  061B                     	;# 
  4005  061C                     	;# 
  4006  061D                     	;# 
  4007  061E                     	;# 
  4008  068C                     	;# 
  4009  068D                     	;# 
  4010  068E                     	;# 
  4011  068F                     	;# 
  4012  0690                     	;# 
  4013  0691                     	;# 
  4014  0692                     	;# 
  4015  0693                     	;# 
  4016  0694                     	;# 
  4017  070C                     	;# 
  4018  070D                     	;# 
  4019  070E                     	;# 
  4020  070F                     	;# 
  4021  0710                     	;# 
  4022  0711                     	;# 
  4023  0712                     	;# 
  4024  0713                     	;# 
  4025  0714                     	;# 
  4026  0716                     	;# 
  4027  0717                     	;# 
  4028  0718                     	;# 
  4029  0719                     	;# 
  4030  071A                     	;# 
  4031  071B                     	;# 
  4032  071C                     	;# 
  4033  071D                     	;# 
  4034  071E                     	;# 
  4035  0796                     	;# 
  4036  0797                     	;# 
  4037  0798                     	;# 
  4038  0799                     	;# 
  4039  079A                     	;# 
  4040  079B                     	;# 
  4041  080C                     	;# 
  4042  080D                     	;# 
  4043  080E                     	;# 
  4044  080F                     	;# 
  4045  0810                     	;# 
  4046  0811                     	;# 
  4047  0812                     	;# 
  4048  0813                     	;# 
  4049  0814                     	;# 
  4050  081A                     	;# 
  4051  081B                     	;# 
  4052  081C                     	;# 
  4053  081D                     	;# 
  4054  081E                     	;# 
  4055  081F                     	;# 
  4056  088C                     	;# 
  4057  088D                     	;# 
  4058  088E                     	;# 
  4059  088F                     	;# 
  4060  0890                     	;# 
  4061  0891                     	;# 
  4062  0892                     	;# 
  4063  0893                     	;# 
  4064  0895                     	;# 
  4065  0896                     	;# 
  4066  0897                     	;# 
  4067  0898                     	;# 
  4068  0899                     	;# 
  4069  089A                     	;# 
  4070  089B                     	;# 
  4071  090C                     	;# 
  4072  090E                     	;# 
  4073  090F                     	;# 
  4074  091F                     	;# 
  4075  091F                     	;# 
  4076  098F                     	;# 
  4077  098F                     	;# 
  4078  0990                     	;# 
  4079  0991                     	;# 
  4080  0992                     	;# 
  4081  0993                     	;# 
  4082  0994                     	;# 
  4083  0995                     	;# 
  4084  0996                     	;# 
  4085  0997                     	;# 
  4086  0E0F                     	;# 
  4087  0E10                     	;# 
  4088  0E11                     	;# 
  4089  0E12                     	;# 
  4090  0E13                     	;# 
  4091  0E14                     	;# 
  4092  0E15                     	;# 
  4093  0E16                     	;# 
  4094  0E17                     	;# 
  4095  0E18                     	;# 
  4096  0E19                     	;# 
  4097  0E1A                     	;# 
  4098  0E1B                     	;# 
  4099  0E1C                     	;# 
  4100  0E1D                     	;# 
  4101  0E1E                     	;# 
  4102  0E1F                     	;# 
  4103  0E20                     	;# 
  4104  0E21                     	;# 
  4105  0E22                     	;# 
  4106  0E23                     	;# 
  4107  0E24                     	;# 
  4108  0E25                     	;# 
  4109  0E26                     	;# 
  4110  0E27                     	;# 
  4111  0E28                     	;# 
  4112  0E29                     	;# 
  4113  0E2A                     	;# 
  4114  0E2B                     	;# 
  4115  0E2C                     	;# 
  4116  0E2D                     	;# 
  4117  0E2E                     	;# 
  4118  0E2F                     	;# 
  4119  0E30                     	;# 
  4120  0E31                     	;# 
  4121  0E32                     	;# 
  4122  0E33                     	;# 
  4123  0E34                     	;# 
  4124  0E35                     	;# 
  4125  0E36                     	;# 
  4126  0E37                     	;# 
  4127  0E8F                     	;# 
  4128  0E90                     	;# 
  4129  0E91                     	;# 
  4130  0E92                     	;# 
  4131  0E93                     	;# 
  4132  0E94                     	;# 
  4133  0E95                     	;# 
  4134  0E96                     	;# 
  4135  0E97                     	;# 
  4136  0E9C                     	;# 
  4137  0E9D                     	;# 
  4138  0E9E                     	;# 
  4139  0EA1                     	;# 
  4140  0EA2                     	;# 
  4141  0EA3                     	;# 
  4142  0EA4                     	;# 
  4143  0EA5                     	;# 
  4144  0EA9                     	;# 
  4145  0EAA                     	;# 
  4146  0EAB                     	;# 
  4147  0EAC                     	;# 
  4148  0EB1                     	;# 
  4149  0EB2                     	;# 
  4150  0EB3                     	;# 
  4151  0EB8                     	;# 
  4152  0EB9                     	;# 
  4153  0EBA                     	;# 
  4154  0EBB                     	;# 
  4155  0EBC                     	;# 
  4156  0EBD                     	;# 
  4157  0EBE                     	;# 
  4158  0EC3                     	;# 
  4159  0EC5                     	;# 
  4160  0EC6                     	;# 
  4161  0EC7                     	;# 
  4162  0EC8                     	;# 
  4163  0EC9                     	;# 
  4164  0ECA                     	;# 
  4165  0ECB                     	;# 
  4166  0ECC                     	;# 
  4167  0F10                     	;# 
  4168  0F11                     	;# 
  4169  0F12                     	;# 
  4170  0F13                     	;# 
  4171  0F14                     	;# 
  4172  0F15                     	;# 
  4173  0F16                     	;# 
  4174  0F17                     	;# 
  4175  0F18                     	;# 
  4176  0F19                     	;# 
  4177  0F1A                     	;# 
  4178  0F1B                     	;# 
  4179  0F1C                     	;# 
  4180  0F1D                     	;# 
  4181  0F1E                     	;# 
  4182  0F1F                     	;# 
  4183  0F20                     	;# 
  4184  0F21                     	;# 
  4185  0F22                     	;# 
  4186  0F23                     	;# 
  4187  0F24                     	;# 
  4188  0F25                     	;# 
  4189  0F26                     	;# 
  4190  0F27                     	;# 
  4191  0F38                     	;# 
  4192  0F39                     	;# 
  4193  0F3A                     	;# 
  4194  0F3B                     	;# 
  4195  0F3C                     	;# 
  4196  0F3D                     	;# 
  4197  0F3E                     	;# 
  4198  0F3F                     	;# 
  4199  0F40                     	;# 
  4200  0F41                     	;# 
  4201  0F43                     	;# 
  4202  0F44                     	;# 
  4203  0F45                     	;# 
  4204  0F46                     	;# 
  4205  0F47                     	;# 
  4206  0F48                     	;# 
  4207  0F49                     	;# 
  4208  0F4A                     	;# 
  4209  0F4B                     	;# 
  4210  0F4C                     	;# 
  4211  0F4E                     	;# 
  4212  0F4F                     	;# 
  4213  0F50                     	;# 
  4214  0F51                     	;# 
  4215  0F52                     	;# 
  4216  0F53                     	;# 
  4217  0F54                     	;# 
  4218  0F55                     	;# 
  4219  0F56                     	;# 
  4220  0F57                     	;# 
  4221  0F65                     	;# 
  4222  0F68                     	;# 
  4223  0F69                     	;# 
  4224  0F6A                     	;# 
  4225  0F6B                     	;# 
  4226  0FE4                     	;# 
  4227  0FE5                     	;# 
  4228  0FE6                     	;# 
  4229  0FE7                     	;# 
  4230  0FE8                     	;# 
  4231  0FE9                     	;# 
  4232  0FEA                     	;# 
  4233  0FEB                     	;# 
  4234  0FED                     	;# 
  4235  0FEE                     	;# 
  4236  0FEF                     	;# 
  4237  0000                     	;# 
  4238  0001                     	;# 
  4239  0002                     	;# 
  4240  0003                     	;# 
  4241  0004                     	;# 
  4242  0005                     	;# 
  4243  0006                     	;# 
  4244  0007                     	;# 
  4245  0008                     	;# 
  4246  0009                     	;# 
  4247  000A                     	;# 
  4248  000B                     	;# 
  4249  000C                     	;# 
  4250  000D                     	;# 
  4251  000E                     	;# 
  4252  0010                     	;# 
  4253  0011                     	;# 
  4254  0012                     	;# 
  4255  0013                     	;# 
  4256  0016                     	;# 
  4257  0017                     	;# 
  4258  0018                     	;# 
  4259  001C                     	;# 
  4260  001C                     	;# 
  4261  001D                     	;# 
  4262  001D                     	;# 
  4263  001E                     	;# 
  4264  001F                     	;# 
  4265  008C                     	;# 
  4266  008C                     	;# 
  4267  008D                     	;# 
  4268  008E                     	;# 
  4269  008E                     	;# 
  4270  008F                     	;# 
  4271  0090                     	;# 
  4272  0090                     	;# 
  4273  0091                     	;# 
  4274  0093                     	;# 
  4275  0094                     	;# 
  4276  0095                     	;# 
  4277  0096                     	;# 
  4278  0097                     	;# 
  4279  0098                     	;# 
  4280  0099                     	;# 
  4281  009A                     	;# 
  4282  009B                     	;# 
  4283  009C                     	;# 
  4284  009D                     	;# 
  4285  009E                     	;# 
  4286  010C                     	;# 
  4287  010D                     	;# 
  4288  010E                     	;# 
  4289  010E                     	;# 
  4290  010F                     	;# 
  4291  0110                     	;# 
  4292  0110                     	;# 
  4293  0111                     	;# 
  4294  0112                     	;# 
  4295  0112                     	;# 
  4296  0113                     	;# 
  4297  0114                     	;# 
  4298  0114                     	;# 
  4299  0115                     	;# 
  4300  0116                     	;# 
  4301  0116                     	;# 
  4302  0117                     	;# 
  4303  0119                     	;# 
  4304  0119                     	;# 
  4305  0119                     	;# 
  4306  011A                     	;# 
  4307  011A                     	;# 
  4308  011A                     	;# 
  4309  011B                     	;# 
  4310  011B                     	;# 
  4311  011B                     	;# 
  4312  011B                     	;# 
  4313  011B                     	;# 
  4314  011C                     	;# 
  4315  011C                     	;# 
  4316  011C                     	;# 
  4317  011D                     	;# 
  4318  011D                     	;# 
  4319  011D                     	;# 
  4320  011E                     	;# 
  4321  011E                     	;# 
  4322  011E                     	;# 
  4323  011F                     	;# 
  4324  011F                     	;# 
  4325  011F                     	;# 
  4326  011F                     	;# 
  4327  011F                     	;# 
  4328  018C                     	;# 
  4329  018D                     	;# 
  4330  018E                     	;# 
  4331  018F                     	;# 
  4332  0190                     	;# 
  4333  0191                     	;# 
  4334  0192                     	;# 
  4335  0196                     	;# 
  4336  0197                     	;# 
  4337  0198                     	;# 
  4338  0199                     	;# 
  4339  019A                     	;# 
  4340  019B                     	;# 
  4341  019C                     	;# 
  4342  020C                     	;# 
  4343  020C                     	;# 
  4344  020D                     	;# 
  4345  020E                     	;# 
  4346  020F                     	;# 
  4347  020F                     	;# 
  4348  0210                     	;# 
  4349  0210                     	;# 
  4350  0211                     	;# 
  4351  0211                     	;# 
  4352  0212                     	;# 
  4353  0212                     	;# 
  4354  0213                     	;# 
  4355  0214                     	;# 
  4356  0215                     	;# 
  4357  0215                     	;# 
  4358  0216                     	;# 
  4359  0216                     	;# 
  4360  0217                     	;# 
  4361  0217                     	;# 
  4362  0218                     	;# 
  4363  0218                     	;# 
  4364  0219                     	;# 
  4365  021A                     	;# 
  4366  021B                     	;# 
  4367  021B                     	;# 
  4368  021C                     	;# 
  4369  021C                     	;# 
  4370  021D                     	;# 
  4371  021D                     	;# 
  4372  021E                     	;# 
  4373  021F                     	;# 
  4374  028C                     	;# 
  4375  028C                     	;# 
  4376  028D                     	;# 
  4377  028D                     	;# 
  4378  028E                     	;# 
  4379  028F                     	;# 
  4380  0290                     	;# 
  4381  0290                     	;# 
  4382  0291                     	;# 
  4383  0292                     	;# 
  4384  0292                     	;# 
  4385  0293                     	;# 
  4386  0293                     	;# 
  4387  0294                     	;# 
  4388  0295                     	;# 
  4389  0296                     	;# 
  4390  0296                     	;# 
  4391  0297                     	;# 
  4392  0298                     	;# 
  4393  0298                     	;# 
  4394  0299                     	;# 
  4395  0299                     	;# 
  4396  029A                     	;# 
  4397  029B                     	;# 
  4398  029C                     	;# 
  4399  029C                     	;# 
  4400  029D                     	;# 
  4401  030C                     	;# 
  4402  030C                     	;# 
  4403  030D                     	;# 
  4404  030E                     	;# 
  4405  030F                     	;# 
  4406  0310                     	;# 
  4407  0310                     	;# 
  4408  0311                     	;# 
  4409  0312                     	;# 
  4410  0313                     	;# 
  4411  0314                     	;# 
  4412  0314                     	;# 
  4413  0315                     	;# 
  4414  0316                     	;# 
  4415  0317                     	;# 
  4416  0318                     	;# 
  4417  0318                     	;# 
  4418  0319                     	;# 
  4419  031A                     	;# 
  4420  031B                     	;# 
  4421  031C                     	;# 
  4422  031C                     	;# 
  4423  031D                     	;# 
  4424  031E                     	;# 
  4425  031F                     	;# 
  4426  038C                     	;# 
  4427  038D                     	;# 
  4428  038E                     	;# 
  4429  0390                     	;# 
  4430  0391                     	;# 
  4431  0392                     	;# 
  4432  040C                     	;# 
  4433  040D                     	;# 
  4434  040E                     	;# 
  4435  040F                     	;# 
  4436  0410                     	;# 
  4437  0411                     	;# 
  4438  0416                     	;# 
  4439  0416                     	;# 
  4440  0417                     	;# 
  4441  0418                     	;# 
  4442  0418                     	;# 
  4443  0419                     	;# 
  4444  041A                     	;# 
  4445  041A                     	;# 
  4446  041B                     	;# 
  4447  041C                     	;# 
  4448  041C                     	;# 
  4449  041D                     	;# 
  4450  041E                     	;# 
  4451  041F                     	;# 
  4452  048C                     	;# 
  4453  048C                     	;# 
  4454  048D                     	;# 
  4455  048E                     	;# 
  4456  048F                     	;# 
  4457  048F                     	;# 
  4458  0490                     	;# 
  4459  0491                     	;# 
  4460  0492                     	;# 
  4461  0492                     	;# 
  4462  0493                     	;# 
  4463  0494                     	;# 
  4464  0495                     	;# 
  4465  0495                     	;# 
  4466  0496                     	;# 
  4467  0497                     	;# 
  4468  0498                     	;# 
  4469  0499                     	;# 
  4470  049A                     	;# 
  4471  049B                     	;# 
  4472  049C                     	;# 
  4473  049D                     	;# 
  4474  050C                     	;# 
  4475  050C                     	;# 
  4476  050D                     	;# 
  4477  050E                     	;# 
  4478  050F                     	;# 
  4479  050F                     	;# 
  4480  0510                     	;# 
  4481  0511                     	;# 
  4482  0512                     	;# 
  4483  0512                     	;# 
  4484  0513                     	;# 
  4485  0514                     	;# 
  4486  0515                     	;# 
  4487  0515                     	;# 
  4488  0516                     	;# 
  4489  0517                     	;# 
  4490  0518                     	;# 
  4491  0519                     	;# 
  4492  051A                     	;# 
  4493  051B                     	;# 
  4494  051C                     	;# 
  4495  051D                     	;# 
  4496  058C                     	;# 
  4497  058C                     	;# 
  4498  058D                     	;# 
  4499  058E                     	;# 
  4500  058F                     	;# 
  4501  058F                     	;# 
  4502  0590                     	;# 
  4503  0591                     	;# 
  4504  0592                     	;# 
  4505  0593                     	;# 
  4506  060C                     	;# 
  4507  060D                     	;# 
  4508  060E                     	;# 
  4509  060F                     	;# 
  4510  0610                     	;# 
  4511  0611                     	;# 
  4512  0612                     	;# 
  4513  0613                     	;# 
  4514  0614                     	;# 
  4515  0616                     	;# 
  4516  0617                     	;# 
  4517  0618                     	;# 
  4518  0619                     	;# 
  4519  061A                     	;# 
  4520  061B                     	;# 
  4521  061C                     	;# 
  4522  061D                     	;# 
  4523  061E                     	;# 
  4524  068C                     	;# 
  4525  068D                     	;# 
  4526  068E                     	;# 
  4527  068F                     	;# 
  4528  0690                     	;# 
  4529  0691                     	;# 
  4530  0692                     	;# 
  4531  0693                     	;# 
  4532  0694                     	;# 
  4533  070C                     	;# 
  4534  070D                     	;# 
  4535  070E                     	;# 
  4536  070F                     	;# 
  4537  0710                     	;# 
  4538  0711                     	;# 
  4539  0712                     	;# 
  4540  0713                     	;# 
  4541  0714                     	;# 
  4542  0716                     	;# 
  4543  0717                     	;# 
  4544  0718                     	;# 
  4545  0719                     	;# 
  4546  071A                     	;# 
  4547  071B                     	;# 
  4548  071C                     	;# 
  4549  071D                     	;# 
  4550  071E                     	;# 
  4551  0796                     	;# 
  4552  0797                     	;# 
  4553  0798                     	;# 
  4554  0799                     	;# 
  4555  079A                     	;# 
  4556  079B                     	;# 
  4557  080C                     	;# 
  4558  080D                     	;# 
  4559  080E                     	;# 
  4560  080F                     	;# 
  4561  0810                     	;# 
  4562  0811                     	;# 
  4563  0812                     	;# 
  4564  0813                     	;# 
  4565  0814                     	;# 
  4566  081A                     	;# 
  4567  081B                     	;# 
  4568  081C                     	;# 
  4569  081D                     	;# 
  4570  081E                     	;# 
  4571  081F                     	;# 
  4572  088C                     	;# 
  4573  088D                     	;# 
  4574  088E                     	;# 
  4575  088F                     	;# 
  4576  0890                     	;# 
  4577  0891                     	;# 
  4578  0892                     	;# 
  4579  0893                     	;# 
  4580  0895                     	;# 
  4581  0896                     	;# 
  4582  0897                     	;# 
  4583  0898                     	;# 
  4584  0899                     	;# 
  4585  089A                     	;# 
  4586  089B                     	;# 
  4587  090C                     	;# 
  4588  090E                     	;# 
  4589  090F                     	;# 
  4590  091F                     	;# 
  4591  091F                     	;# 
  4592  098F                     	;# 
  4593  098F                     	;# 
  4594  0990                     	;# 
  4595  0991                     	;# 
  4596  0992                     	;# 
  4597  0993                     	;# 
  4598  0994                     	;# 
  4599  0995                     	;# 
  4600  0996                     	;# 
  4601  0997                     	;# 
  4602  0E0F                     	;# 
  4603  0E10                     	;# 
  4604  0E11                     	;# 
  4605  0E12                     	;# 
  4606  0E13                     	;# 
  4607  0E14                     	;# 
  4608  0E15                     	;# 
  4609  0E16                     	;# 
  4610  0E17                     	;# 
  4611  0E18                     	;# 
  4612  0E19                     	;# 
  4613  0E1A                     	;# 
  4614  0E1B                     	;# 
  4615  0E1C                     	;# 
  4616  0E1D                     	;# 
  4617  0E1E                     	;# 
  4618  0E1F                     	;# 
  4619  0E20                     	;# 
  4620  0E21                     	;# 
  4621  0E22                     	;# 
  4622  0E23                     	;# 
  4623  0E24                     	;# 
  4624  0E25                     	;# 
  4625  0E26                     	;# 
  4626  0E27                     	;# 
  4627  0E28                     	;# 
  4628  0E29                     	;# 
  4629  0E2A                     	;# 
  4630  0E2B                     	;# 
  4631  0E2C                     	;# 
  4632  0E2D                     	;# 
  4633  0E2E                     	;# 
  4634  0E2F                     	;# 
  4635  0E30                     	;# 
  4636  0E31                     	;# 
  4637  0E32                     	;# 
  4638  0E33                     	;# 
  4639  0E34                     	;# 
  4640  0E35                     	;# 
  4641  0E36                     	;# 
  4642  0E37                     	;# 
  4643  0E8F                     	;# 
  4644  0E90                     	;# 
  4645  0E91                     	;# 
  4646  0E92                     	;# 
  4647  0E93                     	;# 
  4648  0E94                     	;# 
  4649  0E95                     	;# 
  4650  0E96                     	;# 
  4651  0E97                     	;# 
  4652  0E9C                     	;# 
  4653  0E9D                     	;# 
  4654  0E9E                     	;# 
  4655  0EA1                     	;# 
  4656  0EA2                     	;# 
  4657  0EA3                     	;# 
  4658  0EA4                     	;# 
  4659  0EA5                     	;# 
  4660  0EA9                     	;# 
  4661  0EAA                     	;# 
  4662  0EAB                     	;# 
  4663  0EAC                     	;# 
  4664  0EB1                     	;# 
  4665  0EB2                     	;# 
  4666  0EB3                     	;# 
  4667  0EB8                     	;# 
  4668  0EB9                     	;# 
  4669  0EBA                     	;# 
  4670  0EBB                     	;# 
  4671  0EBC                     	;# 
  4672  0EBD                     	;# 
  4673  0EBE                     	;# 
  4674  0EC3                     	;# 
  4675  0EC5                     	;# 
  4676  0EC6                     	;# 
  4677  0EC7                     	;# 
  4678  0EC8                     	;# 
  4679  0EC9                     	;# 
  4680  0ECA                     	;# 
  4681  0ECB                     	;# 
  4682  0ECC                     	;# 
  4683  0F10                     	;# 
  4684  0F11                     	;# 
  4685  0F12                     	;# 
  4686  0F13                     	;# 
  4687  0F14                     	;# 
  4688  0F15                     	;# 
  4689  0F16                     	;# 
  4690  0F17                     	;# 
  4691  0F18                     	;# 
  4692  0F19                     	;# 
  4693  0F1A                     	;# 
  4694  0F1B                     	;# 
  4695  0F1C                     	;# 
  4696  0F1D                     	;# 
  4697  0F1E                     	;# 
  4698  0F1F                     	;# 
  4699  0F20                     	;# 
  4700  0F21                     	;# 
  4701  0F22                     	;# 
  4702  0F23                     	;# 
  4703  0F24                     	;# 
  4704  0F25                     	;# 
  4705  0F26                     	;# 
  4706  0F27                     	;# 
  4707  0F38                     	;# 
  4708  0F39                     	;# 
  4709  0F3A                     	;# 
  4710  0F3B                     	;# 
  4711  0F3C                     	;# 
  4712  0F3D                     	;# 
  4713  0F3E                     	;# 
  4714  0F3F                     	;# 
  4715  0F40                     	;# 
  4716  0F41                     	;# 
  4717  0F43                     	;# 
  4718  0F44                     	;# 
  4719  0F45                     	;# 
  4720  0F46                     	;# 
  4721  0F47                     	;# 
  4722  0F48                     	;# 
  4723  0F49                     	;# 
  4724  0F4A                     	;# 
  4725  0F4B                     	;# 
  4726  0F4C                     	;# 
  4727  0F4E                     	;# 
  4728  0F4F                     	;# 
  4729  0F50                     	;# 
  4730  0F51                     	;# 
  4731  0F52                     	;# 
  4732  0F53                     	;# 
  4733  0F54                     	;# 
  4734  0F55                     	;# 
  4735  0F56                     	;# 
  4736  0F57                     	;# 
  4737  0F65                     	;# 
  4738  0F68                     	;# 
  4739  0F69                     	;# 
  4740  0F6A                     	;# 
  4741  0F6B                     	;# 
  4742  0FE4                     	;# 
  4743  0FE5                     	;# 
  4744  0FE6                     	;# 
  4745  0FE7                     	;# 
  4746  0FE8                     	;# 
  4747  0FE9                     	;# 
  4748  0FEA                     	;# 
  4749  0FEB                     	;# 
  4750  0FED                     	;# 
  4751  0FEE                     	;# 
  4752  0FEF                     	;# 
  4753  0000                     	;# 
  4754  0001                     	;# 
  4755  0002                     	;# 
  4756  0003                     	;# 
  4757  0004                     	;# 
  4758  0005                     	;# 
  4759  0006                     	;# 
  4760  0007                     	;# 
  4761  0008                     	;# 
  4762  0009                     	;# 
  4763  000A                     	;# 
  4764  000B                     	;# 
  4765  000C                     	;# 
  4766  000D                     	;# 
  4767  000E                     	;# 
  4768  0010                     	;# 
  4769  0011                     	;# 
  4770  0012                     	;# 
  4771  0013                     	;# 
  4772  0016                     	;# 
  4773  0017                     	;# 
  4774  0018                     	;# 
  4775  001C                     	;# 
  4776  001C                     	;# 
  4777  001D                     	;# 
  4778  001D                     	;# 
  4779  001E                     	;# 
  4780  001F                     	;# 
  4781  008C                     	;# 
  4782  008C                     	;# 
  4783  008D                     	;# 
  4784  008E                     	;# 
  4785  008E                     	;# 
  4786  008F                     	;# 
  4787  0090                     	;# 
  4788  0090                     	;# 
  4789  0091                     	;# 
  4790  0093                     	;# 
  4791  0094                     	;# 
  4792  0095                     	;# 
  4793  0096                     	;# 
  4794  0097                     	;# 
  4795  0098                     	;# 
  4796  0099                     	;# 
  4797  009A                     	;# 
  4798  009B                     	;# 
  4799  009C                     	;# 
  4800  009D                     	;# 
  4801  009E                     	;# 
  4802  010C                     	;# 
  4803  010D                     	;# 
  4804  010E                     	;# 
  4805  010E                     	;# 
  4806  010F                     	;# 
  4807  0110                     	;# 
  4808  0110                     	;# 
  4809  0111                     	;# 
  4810  0112                     	;# 
  4811  0112                     	;# 
  4812  0113                     	;# 
  4813  0114                     	;# 
  4814  0114                     	;# 
  4815  0115                     	;# 
  4816  0116                     	;# 
  4817  0116                     	;# 
  4818  0117                     	;# 
  4819  0119                     	;# 
  4820  0119                     	;# 
  4821  0119                     	;# 
  4822  011A                     	;# 
  4823  011A                     	;# 
  4824  011A                     	;# 
  4825  011B                     	;# 
  4826  011B                     	;# 
  4827  011B                     	;# 
  4828  011B                     	;# 
  4829  011B                     	;# 
  4830  011C                     	;# 
  4831  011C                     	;# 
  4832  011C                     	;# 
  4833  011D                     	;# 
  4834  011D                     	;# 
  4835  011D                     	;# 
  4836  011E                     	;# 
  4837  011E                     	;# 
  4838  011E                     	;# 
  4839  011F                     	;# 
  4840  011F                     	;# 
  4841  011F                     	;# 
  4842  011F                     	;# 
  4843  011F                     	;# 
  4844  018C                     	;# 
  4845  018D                     	;# 
  4846  018E                     	;# 
  4847  018F                     	;# 
  4848  0190                     	;# 
  4849  0191                     	;# 
  4850  0192                     	;# 
  4851  0196                     	;# 
  4852  0197                     	;# 
  4853  0198                     	;# 
  4854  0199                     	;# 
  4855  019A                     	;# 
  4856  019B                     	;# 
  4857  019C                     	;# 
  4858  020C                     	;# 
  4859  020C                     	;# 
  4860  020D                     	;# 
  4861  020E                     	;# 
  4862  020F                     	;# 
  4863  020F                     	;# 
  4864  0210                     	;# 
  4865  0210                     	;# 
  4866  0211                     	;# 
  4867  0211                     	;# 
  4868  0212                     	;# 
  4869  0212                     	;# 
  4870  0213                     	;# 
  4871  0214                     	;# 
  4872  0215                     	;# 
  4873  0215                     	;# 
  4874  0216                     	;# 
  4875  0216                     	;# 
  4876  0217                     	;# 
  4877  0217                     	;# 
  4878  0218                     	;# 
  4879  0218                     	;# 
  4880  0219                     	;# 
  4881  021A                     	;# 
  4882  021B                     	;# 
  4883  021B                     	;# 
  4884  021C                     	;# 
  4885  021C                     	;# 
  4886  021D                     	;# 
  4887  021D                     	;# 
  4888  021E                     	;# 
  4889  021F                     	;# 
  4890  028C                     	;# 
  4891  028C                     	;# 
  4892  028D                     	;# 
  4893  028D                     	;# 
  4894  028E                     	;# 
  4895  028F                     	;# 
  4896  0290                     	;# 
  4897  0290                     	;# 
  4898  0291                     	;# 
  4899  0292                     	;# 
  4900  0292                     	;# 
  4901  0293                     	;# 
  4902  0293                     	;# 
  4903  0294                     	;# 
  4904  0295                     	;# 
  4905  0296                     	;# 
  4906  0296                     	;# 
  4907  0297                     	;# 
  4908  0298                     	;# 
  4909  0298                     	;# 
  4910  0299                     	;# 
  4911  0299                     	;# 
  4912  029A                     	;# 
  4913  029B                     	;# 
  4914  029C                     	;# 
  4915  029C                     	;# 
  4916  029D                     	;# 
  4917  030C                     	;# 
  4918  030C                     	;# 
  4919  030D                     	;# 
  4920  030E                     	;# 
  4921  030F                     	;# 
  4922  0310                     	;# 
  4923  0310                     	;# 
  4924  0311                     	;# 
  4925  0312                     	;# 
  4926  0313                     	;# 
  4927  0314                     	;# 
  4928  0314                     	;# 
  4929  0315                     	;# 
  4930  0316                     	;# 
  4931  0317                     	;# 
  4932  0318                     	;# 
  4933  0318                     	;# 
  4934  0319                     	;# 
  4935  031A                     	;# 
  4936  031B                     	;# 
  4937  031C                     	;# 
  4938  031C                     	;# 
  4939  031D                     	;# 
  4940  031E                     	;# 
  4941  031F                     	;# 
  4942  038C                     	;# 
  4943  038D                     	;# 
  4944  038E                     	;# 
  4945  0390                     	;# 
  4946  0391                     	;# 
  4947  0392                     	;# 
  4948  040C                     	;# 
  4949  040D                     	;# 
  4950  040E                     	;# 
  4951  040F                     	;# 
  4952  0410                     	;# 
  4953  0411                     	;# 
  4954  0416                     	;# 
  4955  0416                     	;# 
  4956  0417                     	;# 
  4957  0418                     	;# 
  4958  0418                     	;# 
  4959  0419                     	;# 
  4960  041A                     	;# 
  4961  041A                     	;# 
  4962  041B                     	;# 
  4963  041C                     	;# 
  4964  041C                     	;# 
  4965  041D                     	;# 
  4966  041E                     	;# 
  4967  041F                     	;# 
  4968  048C                     	;# 
  4969  048C                     	;# 
  4970  048D                     	;# 
  4971  048E                     	;# 
  4972  048F                     	;# 
  4973  048F                     	;# 
  4974  0490                     	;# 
  4975  0491                     	;# 
  4976  0492                     	;# 
  4977  0492                     	;# 
  4978  0493                     	;# 
  4979  0494                     	;# 
  4980  0495                     	;# 
  4981  0495                     	;# 
  4982  0496                     	;# 
  4983  0497                     	;# 
  4984  0498                     	;# 
  4985  0499                     	;# 
  4986  049A                     	;# 
  4987  049B                     	;# 
  4988  049C                     	;# 
  4989  049D                     	;# 
  4990  050C                     	;# 
  4991  050C                     	;# 
  4992  050D                     	;# 
  4993  050E                     	;# 
  4994  050F                     	;# 
  4995  050F                     	;# 
  4996  0510                     	;# 
  4997  0511                     	;# 
  4998  0512                     	;# 
  4999  0512                     	;# 
  5000  0513                     	;# 
  5001  0514                     	;# 
  5002  0515                     	;# 
  5003  0515                     	;# 
  5004  0516                     	;# 
  5005  0517                     	;# 
  5006  0518                     	;# 
  5007  0519                     	;# 
  5008  051A                     	;# 
  5009  051B                     	;# 
  5010  051C                     	;# 
  5011  051D                     	;# 
  5012  058C                     	;# 
  5013  058C                     	;# 
  5014  058D                     	;# 
  5015  058E                     	;# 
  5016  058F                     	;# 
  5017  058F                     	;# 
  5018  0590                     	;# 
  5019  0591                     	;# 
  5020  0592                     	;# 
  5021  0593                     	;# 
  5022  060C                     	;# 
  5023  060D                     	;# 
  5024  060E                     	;# 
  5025  060F                     	;# 
  5026  0610                     	;# 
  5027  0611                     	;# 
  5028  0612                     	;# 
  5029  0613                     	;# 
  5030  0614                     	;# 
  5031  0616                     	;# 
  5032  0617                     	;# 
  5033  0618                     	;# 
  5034  0619                     	;# 
  5035  061A                     	;# 
  5036  061B                     	;# 
  5037  061C                     	;# 
  5038  061D                     	;# 
  5039  061E                     	;# 
  5040  068C                     	;# 
  5041  068D                     	;# 
  5042  068E                     	;# 
  5043  068F                     	;# 
  5044  0690                     	;# 
  5045  0691                     	;# 
  5046  0692                     	;# 
  5047  0693                     	;# 
  5048  0694                     	;# 
  5049  070C                     	;# 
  5050  070D                     	;# 
  5051  070E                     	;# 
  5052  070F                     	;# 
  5053  0710                     	;# 
  5054  0711                     	;# 
  5055  0712                     	;# 
  5056  0713                     	;# 
  5057  0714                     	;# 
  5058  0716                     	;# 
  5059  0717                     	;# 
  5060  0718                     	;# 
  5061  0719                     	;# 
  5062  071A                     	;# 
  5063  071B                     	;# 
  5064  071C                     	;# 
  5065  071D                     	;# 
  5066  071E                     	;# 
  5067  0796                     	;# 
  5068  0797                     	;# 
  5069  0798                     	;# 
  5070  0799                     	;# 
  5071  079A                     	;# 
  5072  079B                     	;# 
  5073  080C                     	;# 
  5074  080D                     	;# 
  5075  080E                     	;# 
  5076  080F                     	;# 
  5077  0810                     	;# 
  5078  0811                     	;# 
  5079  0812                     	;# 
  5080  0813                     	;# 
  5081  0814                     	;# 
  5082  081A                     	;# 
  5083  081B                     	;# 
  5084  081C                     	;# 
  5085  081D                     	;# 
  5086  081E                     	;# 
  5087  081F                     	;# 
  5088  088C                     	;# 
  5089  088D                     	;# 
  5090  088E                     	;# 
  5091  088F                     	;# 
  5092  0890                     	;# 
  5093  0891                     	;# 
  5094  0892                     	;# 
  5095  0893                     	;# 
  5096  0895                     	;# 
  5097  0896                     	;# 
  5098  0897                     	;# 
  5099  0898                     	;# 
  5100  0899                     	;# 
  5101  089A                     	;# 
  5102  089B                     	;# 
  5103  090C                     	;# 
  5104  090E                     	;# 
  5105  090F                     	;# 
  5106  091F                     	;# 
  5107  091F                     	;# 
  5108  098F                     	;# 
  5109  098F                     	;# 
  5110  0990                     	;# 
  5111  0991                     	;# 
  5112  0992                     	;# 
  5113  0993                     	;# 
  5114  0994                     	;# 
  5115  0995                     	;# 
  5116  0996                     	;# 
  5117  0997                     	;# 
  5118  0E0F                     	;# 
  5119  0E10                     	;# 
  5120  0E11                     	;# 
  5121  0E12                     	;# 
  5122  0E13                     	;# 
  5123  0E14                     	;# 
  5124  0E15                     	;# 
  5125  0E16                     	;# 
  5126  0E17                     	;# 
  5127  0E18                     	;# 
  5128  0E19                     	;# 
  5129  0E1A                     	;# 
  5130  0E1B                     	;# 
  5131  0E1C                     	;# 
  5132  0E1D                     	;# 
  5133  0E1E                     	;# 
  5134  0E1F                     	;# 
  5135  0E20                     	;# 
  5136  0E21                     	;# 
  5137  0E22                     	;# 
  5138  0E23                     	;# 
  5139  0E24                     	;# 
  5140  0E25                     	;# 
  5141  0E26                     	;# 
  5142  0E27                     	;# 
  5143  0E28                     	;# 
  5144  0E29                     	;# 
  5145  0E2A                     	;# 
  5146  0E2B                     	;# 
  5147  0E2C                     	;# 
  5148  0E2D                     	;# 
  5149  0E2E                     	;# 
  5150  0E2F                     	;# 
  5151  0E30                     	;# 
  5152  0E31                     	;# 
  5153  0E32                     	;# 
  5154  0E33                     	;# 
  5155  0E34                     	;# 
  5156  0E35                     	;# 
  5157  0E36                     	;# 
  5158  0E37                     	;# 
  5159  0E8F                     	;# 
  5160  0E90                     	;# 
  5161  0E91                     	;# 
  5162  0E92                     	;# 
  5163  0E93                     	;# 
  5164  0E94                     	;# 
  5165  0E95                     	;# 
  5166  0E96                     	;# 
  5167  0E97                     	;# 
  5168  0E9C                     	;# 
  5169  0E9D                     	;# 
  5170  0E9E                     	;# 
  5171  0EA1                     	;# 
  5172  0EA2                     	;# 
  5173  0EA3                     	;# 
  5174  0EA4                     	;# 
  5175  0EA5                     	;# 
  5176  0EA9                     	;# 
  5177  0EAA                     	;# 
  5178  0EAB                     	;# 
  5179  0EAC                     	;# 
  5180  0EB1                     	;# 
  5181  0EB2                     	;# 
  5182  0EB3                     	;# 
  5183  0EB8                     	;# 
  5184  0EB9                     	;# 
  5185  0EBA                     	;# 
  5186  0EBB                     	;# 
  5187  0EBC                     	;# 
  5188  0EBD                     	;# 
  5189  0EBE                     	;# 
  5190  0EC3                     	;# 
  5191  0EC5                     	;# 
  5192  0EC6                     	;# 
  5193  0EC7                     	;# 
  5194  0EC8                     	;# 
  5195  0EC9                     	;# 
  5196  0ECA                     	;# 
  5197  0ECB                     	;# 
  5198  0ECC                     	;# 
  5199  0F10                     	;# 
  5200  0F11                     	;# 
  5201  0F12                     	;# 
  5202  0F13                     	;# 
  5203  0F14                     	;# 
  5204  0F15                     	;# 
  5205  0F16                     	;# 
  5206  0F17                     	;# 
  5207  0F18                     	;# 
  5208  0F19                     	;# 
  5209  0F1A                     	;# 
  5210  0F1B                     	;# 
  5211  0F1C                     	;# 
  5212  0F1D                     	;# 
  5213  0F1E                     	;# 
  5214  0F1F                     	;# 
  5215  0F20                     	;# 
  5216  0F21                     	;# 
  5217  0F22                     	;# 
  5218  0F23                     	;# 
  5219  0F24                     	;# 
  5220  0F25                     	;# 
  5221  0F26                     	;# 
  5222  0F27                     	;# 
  5223  0F38                     	;# 
  5224  0F39                     	;# 
  5225  0F3A                     	;# 
  5226  0F3B                     	;# 
  5227  0F3C                     	;# 
  5228  0F3D                     	;# 
  5229  0F3E                     	;# 
  5230  0F3F                     	;# 
  5231  0F40                     	;# 
  5232  0F41                     	;# 
  5233  0F43                     	;# 
  5234  0F44                     	;# 
  5235  0F45                     	;# 
  5236  0F46                     	;# 
  5237  0F47                     	;# 
  5238  0F48                     	;# 
  5239  0F49                     	;# 
  5240  0F4A                     	;# 
  5241  0F4B                     	;# 
  5242  0F4C                     	;# 
  5243  0F4E                     	;# 
  5244  0F4F                     	;# 
  5245  0F50                     	;# 
  5246  0F51                     	;# 
  5247  0F52                     	;# 
  5248  0F53                     	;# 
  5249  0F54                     	;# 
  5250  0F55                     	;# 
  5251  0F56                     	;# 
  5252  0F57                     	;# 
  5253  0F65                     	;# 
  5254  0F68                     	;# 
  5255  0F69                     	;# 
  5256  0F6A                     	;# 
  5257  0F6B                     	;# 
  5258  0FE4                     	;# 
  5259  0FE5                     	;# 
  5260  0FE6                     	;# 
  5261  0FE7                     	;# 
  5262  0FE8                     	;# 
  5263  0FE9                     	;# 
  5264  0FEA                     	;# 
  5265  0FEB                     	;# 
  5266  0FED                     	;# 
  5267  0FEE                     	;# 
  5268  0FEF                     	;_samples
  5269                           
  5270                           	psect	idataBANK1
  5271  092F                     __pidataBANK1:	
  5272                           
  5273                           ;initializer for _Imode1
  5274  092F  3401               	retlw	1
  5275                           
  5276                           ;initializer for _Imode0
  5277  0930  3401               	retlw	1
  5278                           
  5279                           	psect	idataBANK2
  5280  1205                     __pidataBANK2:	
  5281                           
  5282                           ;initializer for _channels
  5283  1205  3416               	retlw	22
  5284  1206  3400               	retlw	0
  5285  1207  3414               	retlw	20
  5286  1208  3400               	retlw	0
  5287  1209  3412               	retlw	18
  5288  120A  3400               	retlw	0
  5289  120B  3410               	retlw	16
  5290  120C  3400               	retlw	0
  5291                           
  5292                           	psect	stringtext1
  5293  0800                     __pstringtext1:	
  5294  0800                     _fonts:	
  5295  0800  3400               	retlw	0
  5296  0801  3400               	retlw	0
  5297  0802  3400               	retlw	0
  5298  0803  3400               	retlw	0
  5299  0804  344E               	retlw	78
  5300  0805  3400               	retlw	0
  5301  0806  3406               	retlw	6
  5302  0807  3400               	retlw	0
  5303  0808  3406               	retlw	6
  5304  0809  34FF               	retlw	255
  5305  080A  34FF               	retlw	255
  5306  080B  34FF               	retlw	255
  5307  080C  3448               	retlw	72
  5308  080D  34D6               	retlw	214
  5309  080E  3424               	retlw	36
  5310  080F  3412               	retlw	18
  5311  0810  3408               	retlw	8
  5312  0811  3424               	retlw	36
  5313  0812  34FF               	retlw	255
  5314  0813  34FF               	retlw	255
  5315  0814  34FF               	retlw	255
  5316  0815  3400               	retlw	0
  5317  0816  3406               	retlw	6
  5318  0817  3400               	retlw	0
  5319  0818  3438               	retlw	56
  5320  0819  3444               	retlw	68
  5321  081A  3482               	retlw	130
  5322  081B  3482               	retlw	130
  5323  081C  3444               	retlw	68
  5324  081D  3438               	retlw	56
  5325  081E  3414               	retlw	20
  5326  081F  3408               	retlw	8
  5327  0820  343E               	retlw	62
  5328  0821  3410               	retlw	16
  5329  0822  3438               	retlw	56
  5330  0823  3410               	retlw	16
  5331  0824  34A0               	retlw	160
  5332  0825  3460               	retlw	96
  5333  0826  3400               	retlw	0
  5334  0827  3410               	retlw	16
  5335  0828  3410               	retlw	16
  5336  0829  3410               	retlw	16
  5337  082A  3460               	retlw	96
  5338  082B  3460               	retlw	96
  5339  082C  3400               	retlw	0
  5340  082D  3460               	retlw	96
  5341  082E  3418               	retlw	24
  5342  082F  3406               	retlw	6
  5343  0830  347C               	retlw	124
  5344  0831  3442               	retlw	66
  5345  0832  347C               	retlw	124
  5346  0833  3444               	retlw	68
  5347  0834  347E               	retlw	126
  5348  0835  3440               	retlw	64
  5349  0836  3464               	retlw	100
  5350  0837  3452               	retlw	82
  5351  0838  344C               	retlw	76
  5352  0839  344A               	retlw	74
  5353  083A  344A               	retlw	74
  5354  083B  3434               	retlw	52
  5355  083C  3438               	retlw	56
  5356  083D  3424               	retlw	36
  5357  083E  347E               	retlw	126
  5358  083F  344E               	retlw	78
  5359  0840  344A               	retlw	74
  5360  0841  3432               	retlw	50
  5361  0842  343C               	retlw	60
  5362  0843  344A               	retlw	74
  5363  0844  3432               	retlw	50
  5364  0845  3462               	retlw	98
  5365  0846  341A               	retlw	26
  5366  0847  3406               	retlw	6
  5367  0848  3476               	retlw	118
  5368  0849  344A               	retlw	74
  5369  084A  3476               	retlw	118
  5370  084B  344C               	retlw	76
  5371  084C  3452               	retlw	82
  5372  084D  343C               	retlw	60
  5373  084E  346C               	retlw	108
  5374  084F  346C               	retlw	108
  5375  0850  3400               	retlw	0
  5376  0851  34AC               	retlw	172
  5377  0852  346C               	retlw	108
  5378  0853  3400               	retlw	0
  5379  0854  3410               	retlw	16
  5380  0855  3428               	retlw	40
  5381  0856  3444               	retlw	68
  5382  0857  3428               	retlw	40
  5383  0858  3428               	retlw	40
  5384  0859  3428               	retlw	40
  5385  085A  3444               	retlw	68
  5386  085B  3428               	retlw	40
  5387  085C  3410               	retlw	16
  5388  085D  3402               	retlw	2
  5389  085E  3459               	retlw	89
  5390  085F  3406               	retlw	6
  5391  0860  34FF               	retlw	255
  5392  0861  34FF               	retlw	255
  5393  0862  34FF               	retlw	255
  5394  0863  347C               	retlw	124
  5395  0864  3412               	retlw	18
  5396  0865  347C               	retlw	124
  5397  0866  347E               	retlw	126
  5398  0867  345A               	retlw	90
  5399  0868  3434               	retlw	52
  5400  0869  343C               	retlw	60
  5401  086A  3442               	retlw	66
  5402  086B  3442               	retlw	66
  5403  086C  347E               	retlw	126
  5404  086D  3442               	retlw	66
  5405  086E  343C               	retlw	60
  5406  086F  347E               	retlw	126
  5407  0870  344A               	retlw	74
  5408  0871  3442               	retlw	66
  5409  0872  347E               	retlw	126
  5410  0873  340A               	retlw	10
  5411  0874  340A               	retlw	10
  5412  0875  343C               	retlw	60
  5413  0876  3452               	retlw	82
  5414  0877  3434               	retlw	52
  5415  0878  347E               	retlw	126
  5416  0879  3408               	retlw	8
  5417  087A  347E               	retlw	126
  5418  087B  3442               	retlw	66
  5419  087C  347E               	retlw	126
  5420  087D  3442               	retlw	66
  5421  087E  3430               	retlw	48
  5422  087F  3440               	retlw	64
  5423  0880  343E               	retlw	62
  5424  0881  347E               	retlw	126
  5425  0882  3418               	retlw	24
  5426  0883  3466               	retlw	102
  5427  0884  347E               	retlw	126
  5428  0885  3440               	retlw	64
  5429  0886  3440               	retlw	64
  5430  0887  347E               	retlw	126
  5431  0888  341C               	retlw	28
  5432  0889  347E               	retlw	126
  5433  088A  347E               	retlw	126
  5434  088B  3402               	retlw	2
  5435  088C  347E               	retlw	126
  5436  088D  343C               	retlw	60
  5437  088E  3442               	retlw	66
  5438  088F  343C               	retlw	60
  5439  0890  347E               	retlw	126
  5440  0891  3412               	retlw	18
  5441  0892  340C               	retlw	12
  5442  0893  347E               	retlw	126
  5443  0894  3462               	retlw	98
  5444  0895  34FE               	retlw	254
  5445  0896  347E               	retlw	126
  5446  0897  3432               	retlw	50
  5447  0898  344E               	retlw	78
  5448  0899  3444               	retlw	68
  5449  089A  344A               	retlw	74
  5450  089B  3432               	retlw	50
  5451  089C  3402               	retlw	2
  5452  089D  347E               	retlw	126
  5453  089E  3402               	retlw	2
  5454  089F  347E               	retlw	126
  5455  08A0  3440               	retlw	64
  5456  08A1  347E               	retlw	126
  5457  08A2  343E               	retlw	62
  5458  08A3  3440               	retlw	64
  5459  08A4  343E               	retlw	62
  5460  08A5  347E               	retlw	126
  5461  08A6  3438               	retlw	56
  5462  08A7  347E               	retlw	126
  5463  08A8  3466               	retlw	102
  5464  08A9  3418               	retlw	24
  5465  08AA  3466               	retlw	102
  5466  08AB  340E               	retlw	14
  5467  08AC  3470               	retlw	112
  5468  08AD  340E               	retlw	14
  5469  08AE  3462               	retlw	98
  5470  08AF  345A               	retlw	90
  5471  08B0  3446               	retlw	70
  5472  08B1  3400               	retlw	0
  5473  08B2  347E               	retlw	126
  5474  08B3  3442               	retlw	66
  5475  08B4  3406               	retlw	6
  5476  08B5  3418               	retlw	24
  5477  08B6  3460               	retlw	96
  5478  08B7  3442               	retlw	66
  5479  08B8  347E               	retlw	126
  5480  08B9  3400               	retlw	0
  5481  08BA  3404               	retlw	4
  5482  08BB  3402               	retlw	2
  5483  08BC  3404               	retlw	4
  5484  08BD  3440               	retlw	64
  5485  08BE  3440               	retlw	64
  5486  08BF  3440               	retlw	64
  5487  08C0  3400               	retlw	0
  5488  08C1  3402               	retlw	2
  5489  08C2  3404               	retlw	4
  5490  08C3  3474               	retlw	116
  5491  08C4  3454               	retlw	84
  5492  08C5  3478               	retlw	120
  5493  08C6  347E               	retlw	126
  5494  08C7  3448               	retlw	72
  5495  08C8  3430               	retlw	48
  5496  08C9  3430               	retlw	48
  5497  08CA  3448               	retlw	72
  5498  08CB  3448               	retlw	72
  5499  08CC  3430               	retlw	48
  5500  08CD  3448               	retlw	72
  5501  08CE  347E               	retlw	126
  5502  08CF  3438               	retlw	56
  5503  08D0  3454               	retlw	84
  5504  08D1  3458               	retlw	88
  5505  08D2  347C               	retlw	124
  5506  08D3  340A               	retlw	10
  5507  08D4  3402               	retlw	2
  5508  08D5  3498               	retlw	152
  5509  08D6  34A4               	retlw	164
  5510  08D7  347C               	retlw	124
  5511  08D8  347E               	retlw	126
  5512  08D9  3408               	retlw	8
  5513  08DA  3470               	retlw	112
  5514  08DB  3448               	retlw	72
  5515  08DC  347A               	retlw	122
  5516  08DD  3440               	retlw	64
  5517  08DE  3488               	retlw	136
  5518  08DF  34FA               	retlw	250
  5519  08E0  3400               	retlw	0
  5520  08E1  347E               	retlw	126
  5521  08E2  3418               	retlw	24
  5522  08E3  3464               	retlw	100
  5523  08E4  3442               	retlw	66
  5524  08E5  347E               	retlw	126
  5525  08E6  3440               	retlw	64
  5526  08E7  347C               	retlw	124
  5527  08E8  3438               	retlw	56
  5528  08E9  347C               	retlw	124
  5529  08EA  347C               	retlw	124
  5530  08EB  3404               	retlw	4
  5531  08EC  3478               	retlw	120
  5532  08ED  3438               	retlw	56
  5533  08EE  3444               	retlw	68
  5534  08EF  3438               	retlw	56
  5535  08F0  34FC               	retlw	252
  5536  08F1  3424               	retlw	36
  5537  08F2  3418               	retlw	24
  5538  08F3  3418               	retlw	24
  5539  08F4  3424               	retlw	36
  5540  08F5  34FC               	retlw	252
  5541  08F6  3478               	retlw	120
  5542  08F7  3404               	retlw	4
  5543  08F8  3404               	retlw	4
  5544  08F9  3448               	retlw	72
  5545  08FA  3454               	retlw	84
  5546  08FB  3424               	retlw	36
  5547  08FC  3404               	retlw	4
  5548  08FD  343E               	retlw	62
  5549  08FE  3444               	retlw	68
  5550  08FF  347C               	retlw	124
  5551  0900  3440               	retlw	64
  5552  0901  347C               	retlw	124
  5553  0902  343C               	retlw	60
  5554  0903  3440               	retlw	64
  5555  0904  343C               	retlw	60
  5556  0905  347C               	retlw	124
  5557  0906  3430               	retlw	48
  5558  0907  347C               	retlw	124
  5559  0908  346C               	retlw	108
  5560  0909  3410               	retlw	16
  5561  090A  346C               	retlw	108
  5562  090B  349C               	retlw	156
  5563  090C  34A0               	retlw	160
  5564  090D  347C               	retlw	124
  5565  090E  3464               	retlw	100
  5566  090F  3454               	retlw	84
  5567  0910  344C               	retlw	76
  5568  0911  340C               	retlw	12
  5569  0912  3412               	retlw	18
  5570  0913  340C               	retlw	12
  5571  0914  34FF               	retlw	255
  5572  0915  34FF               	retlw	255
  5573  0916  34FF               	retlw	255
  5574  0917  34FF               	retlw	255
  5575  0918  34FF               	retlw	255
  5576  0919  34FF               	retlw	255
  5577  091A  34FF               	retlw	255
  5578  091B  34FF               	retlw	255
  5579  091C  34FF               	retlw	255
  5580  091D  34FF               	retlw	255
  5581  091E  34FF               	retlw	255
  5582  091F  34FF               	retlw	255
  5583  0920  34FF               	retlw	255
  5584  0921  34FF               	retlw	255
  5585  0922  34FF               	retlw	255
  5586  0923  34FF               	retlw	255
  5587  0924  34FF               	retlw	255
  5588  0925  34FF               	retlw	255
  5589  0926  34FC               	retlw	252
  5590  0927  3440               	retlw	64
  5591  0928  347C               	retlw	124
  5592  0929  34FF               	retlw	255
  5593  092A  34FF               	retlw	255
  5594  092B  34FF               	retlw	255
  5595  092C  34FF               	retlw	255
  5596  092D  34FF               	retlw	255
  5597  092E  34FF               	retlw	255
  5598  092F                     __end_of_fonts:	
  5599                           
  5600                           	psect	stringtext2
  5601  1800                     __pstringtext2:	
  5602  1800                     log@coeff:	
  5603  1800  3400               	retlw	0
  5604  1801  3400               	retlw	0
  5605  1802  3400               	retlw	0
  5606  1803  3400               	retlw	0
  5607  1804  3480               	retlw	128
  5608  1805  343F               	retlw	63
  5609  1806  34F0               	retlw	240
  5610  1807  34FF               	retlw	255
  5611  1808  34BE               	retlw	190
  5612  1809  34E2               	retlw	226
  5613  180A  34A9               	retlw	169
  5614  180B  343E               	retlw	62
  5615  180C  3483               	retlw	131
  5616  180D  3476               	retlw	118
  5617  180E  34BE               	retlw	190
  5618  180F  34AE               	retlw	174
  5619  1810  342B               	retlw	43
  5620  1811  343E               	retlw	62
  5621  1812  343C               	retlw	60
  5622  1813  34C3               	retlw	195
  5623  1814  34BD               	retlw	189
  5624  1815  34D2               	retlw	210
  5625  1816  3413               	retlw	19
  5626  1817  343D               	retlw	61
  5627  1818  3478               	retlw	120
  5628  1819  34D3               	retlw	211
  5629  181A  34BB               	retlw	187
  5630  181B                     __end_oflog@coeff:	
  5631                           
  5632                           	psect	nvBANK1
  5633  00C7                     __pnvBANK1:	
  5634  00C7                     _Iref0:	
  5635  00C7                     	ds	2
  5636  00C9                     _Vref0:	
  5637  00C9                     	ds	2
  5638  00CB                     _battery_state0:	
  5639  00CB                     	ds	1
  5640                           
  5641                           	psect	nvBANK2
  5642  014D                     __pnvBANK2:	
  5643  014D                     _Imin0:	
  5644  014D                     	ds	2
  5645  014F                     _state_counter0:	
  5646  014F                     	ds	2
  5647  0151                     _Imin0Count:	
  5648  0151                     	ds	2
  5649  0013                     _TRISC	set	19
  5650  0012                     _TRISB	set	18
  5651  0011                     _TRISA	set	17
  5652  0018                     _LATC	set	24
  5653  0017                     _LATB	set	23
  5654  0016                     _LATA	set	22
  5655  0016                     _LATAbits	set	22
  5656  0011                     _TRISAbits	set	17
  5657  005F                     _GIE	set	95
  5658  00B5                     _LATA5	set	181
  5659  006A                     _RB2	set	106
  5660  0093                     _ADCON0	set	147
  5661  009D                     _ADACQ	set	157
  5662  009C                     _ADPRE	set	156
  5663  009B                     _ADCAP	set	155
  5664  009A                     _ADREF	set	154
  5665  0098                     _ADCLK	set	152
  5666  0097                     _ADSTAT	set	151
  5667  0099                     _ADACT	set	153
  5668  0096                     _ADCON3	set	150
  5669  0095                     _ADCON2	set	149
  5670  0094                     _ADCON1	set	148
  5671  008C                     _ADRESL	set	140
  5672  008D                     _ADRESH	set	141
  5673  0093                     _ADCON0bits	set	147
  5674  009E                     _ADPCH	set	158
  5675  0113                     _ADSTPTH	set	275
  5676  0112                     _ADSTPTL	set	274
  5677  0111                     _ADUTHH	set	273
  5678  0110                     _ADUTHL	set	272
  5679  010F                     _ADLTHH	set	271
  5680  010E                     _ADLTHL	set	270
  5681  010D                     _ADRPT	set	269
  5682  021E                     _CCPTMRS0bits	set	542
  5683  021F                     _CCPTMRS1bits	set	543
  5684  0294                     _T4CONbits	set	660
  5685  0292                     _T4TMR	set	658
  5686  0293                     _T4PR	set	659
  5687  0297                     _T4RST	set	663
  5688  0295                     _T4HLT	set	661
  5689  0296                     _T4CLKCON	set	662
  5690  0294                     _T4CON	set	660
  5691  028E                     _T2CONbits	set	654
  5692  028C                     _T2TMR	set	652
  5693  028D                     _T2PR	set	653
  5694  0291                     _T2RST	set	657
  5695  028F                     _T2HLT	set	655
  5696  0290                     _T2CLKCON	set	656
  5697  028E                     _T2CON	set	654
  5698  030C                     _CCPR1L	set	780
  5699  030D                     _CCPR1H	set	781
  5700  030E                     _CCP1CONbits	set	782
  5701  0390                     _PWM7DCL	set	912
  5702  0391                     _PWM7DCH	set	913
  5703  0392                     _PWM7CON	set	914
  5704  038C                     _PWM6DCL	set	908
  5705  038D                     _PWM6DCH	set	909
  5706  038E                     _PWM6CON	set	910
  5707  0710                     _PIR4bits	set	1808
  5708  0716                     _PIE0bits	set	1814
  5709  0892                     _OSCTUNE	set	2194
  5710  0893                     _OSCFRQ	set	2195
  5711  0891                     _OSCEN	set	2193
  5712  088F                     _OSCCON3	set	2191
  5713  088D                     _OSCCON1	set	2189
  5714  090C                     _FVRCON	set	2316
  5715  0E8F                     _PPSLOCKbits	set	3727
  5716  0E8F                     _PPSLOCK	set	3727
  5717  0F18                     _RB0PPS	set	3864
  5718  0F17                     _RA7PPS	set	3863
  5719  0F16                     _RA6PPS	set	3862
  5720  0F4E                     _ANSELC	set	3918
  5721  0F43                     _ANSELB	set	3907
  5722  0F38                     _ANSELA	set	3896
  5723  0F65                     _WPUE	set	3941
  5724  0F4F                     _WPUC	set	3919
  5725  0F44                     _WPUB	set	3908
  5726  0F39                     _WPUA	set	3897
  5727                           
  5728                           	psect	stringtext3
  5729  181B                     __pstringtext3:	
  5730  181B                     STR_1:	
  5731  181B  3442               	retlw	66	;'B'
  5732  181C  3441               	retlw	65	;'A'
  5733  181D  3454               	retlw	84	;'T'
  5734  181E  3454               	retlw	84	;'T'
  5735  181F  3445               	retlw	69	;'E'
  5736  1820  3452               	retlw	82	;'R'
  5737  1821  3459               	retlw	89	;'Y'
  5738  1822  3420               	retlw	32	;' '
  5739  1823  3446               	retlw	70	;'F'
  5740  1824  3441               	retlw	65	;'A'
  5741  1825  3455               	retlw	85	;'U'
  5742  1826  344C               	retlw	76	;'L'
  5743  1827  3454               	retlw	84	;'T'
  5744  1828  3400               	retlw	0
  5745                           
  5746                           	psect	stringtext4
  5747  0000                     __pstringtext4:	
  5748                           
  5749                           ; #config settings
  5750  0000                     
  5751                           	psect	cinit
  5752  07BB                     start_initialization:	
  5753  07BB                     __initialization:		;BIGRAM
  5754                           
  5755                           ; Initialize objects allocated to BANK1
  5756  07BB  0021               	movlb	1	; select bank1
  5757  07BC  3189  212F  3187   	fcall	__pidataBANK1	;fetch initializer
  5758  07BF  00CC               	movwf	__pdataBANK1& (0+127)
  5759  07C0  3189  2130  3187   	fcall	__pidataBANK1+1	;fetch initializer
  5760  07C3  00CD               	movwf	(__pdataBANK1+1)& (0+127)
  5761                           
  5762                           ; Initialize objects allocated to BANK2
  5763  07C4  3005               	movlw	low __pidataBANK2
  5764  07C5  0084               	movwf	4
  5765  07C6  3092               	movlw	(high __pidataBANK2)| (0+128)
  5766  07C7  0085               	movwf	5
  5767  07C8  0022               	movlb	2	; select bank2
  5768  07C9  0012               	moviw fsr0++
  5769  07CA  00C5               	movwf	__pdataBANK2& (0+127)
  5770  07CB  0012               	moviw fsr0++
  5771  07CC  00C6               	movwf	(__pdataBANK2+1)& (0+127)
  5772  07CD  0012               	moviw fsr0++
  5773  07CE  00C7               	movwf	(__pdataBANK2+2)& (0+127)
  5774  07CF  0012               	moviw fsr0++
  5775  07D0  00C8               	movwf	(__pdataBANK2+3)& (0+127)
  5776  07D1  0012               	moviw fsr0++
  5777  07D2  00C9               	movwf	(__pdataBANK2+4)& (0+127)
  5778  07D3  0012               	moviw fsr0++
  5779  07D4  00CA               	movwf	(__pdataBANK2+5)& (0+127)
  5780  07D5  0012               	moviw fsr0++
  5781  07D6  00CB               	movwf	(__pdataBANK2+6)& (0+127)
  5782  07D7  0012               	moviw fsr0++
  5783  07D8  00CC               	movwf	(__pdataBANK2+7)& (0+127)
  5784                           
  5785                           ; Clear objects allocated to BIGRAM
  5786  07D9  3098               	movlw	low (0+8600)
  5787  07DA  0084               	movwf	4
  5788  07DB  3021               	movlw	high (0+8600)
  5789  07DC  0085               	movwf	5
  5790  07DD  3058               	movlw	88
  5791  07DE  00FE               	movwf	btemp
  5792  07DF  3002               	movlw	2
  5793  07E0  00FF               	movwf	btemp+1
  5794  07E1  3192  2216  3187   	fcall	clear_ram0
  5795                           
  5796                           ; Clear objects allocated to BANK0
  5797  07E4  0020               	movlb	0	; select bank0
  5798  07E5  01EC               	clrf	__pbssBANK0& (0+127)
  5799  07E6  01ED               	clrf	(__pbssBANK0+1)& (0+127)
  5800  07E7  01EE               	clrf	(__pbssBANK0+2)& (0+127)
  5801                           
  5802                           ; Clear objects allocated to BANK1
  5803  07E8  30A0               	movlw	low __pbssBANK1
  5804  07E9  0084               	movwf	4
  5805  07EA  3000               	movlw	high __pbssBANK1
  5806  07EB  0085               	movwf	5
  5807  07EC  3027               	movlw	39
  5808  07ED  00FE               	movwf	btemp
  5809  07EE  3000               	movlw	0
  5810  07EF  00FF               	movwf	btemp+1
  5811  07F0  3192  2216  3187   	fcall	clear_ram0
  5812                           
  5813                           ; Clear objects allocated to BANK2
  5814  07F3  3020               	movlw	low __pbssBANK2
  5815  07F4  0084               	movwf	4
  5816  07F5  3001               	movlw	high __pbssBANK2
  5817  07F6  0085               	movwf	5
  5818  07F7  3025               	movlw	37
  5819  07F8  00FE               	movwf	btemp
  5820  07F9  3000               	movlw	0
  5821  07FA  00FF               	movwf	btemp+1
  5822  07FB  3192  2216         	fcall	clear_ram0
  5823  07FD                     end_of_initialization:	
  5824                           ;End of C runtime variable initialization code
  5825                           
  5826  07FD                     __end_of__initialization:	
  5827  07FD  0020               	movlb	0
  5828  07FE  3181  295E         	ljmp	_main	;jump to C main() function
  5829                           
  5830                           	psect	bssBANK0
  5831  006C                     __pbssBANK0:	
  5832  006C                     _lastButton:	
  5833  006C                     	ds	1
  5834  006D                     _button:	
  5835  006D                     	ds	1
  5836  006E                     _V1HoldMode:	
  5837  006E                     	ds	1
  5838                           
  5839                           	psect	bssBANK1
  5840  00A0                     __pbssBANK1:	
  5841  00A0                     _current:	
  5842  00A0                     	ds	8
  5843  00A8                     _voltage:	
  5844  00A8                     	ds	8
  5845  00B0                     _errno:	
  5846  00B0                     	ds	2
  5847  00B2                     _readButtons:	
  5848  00B2                     	ds	2
  5849  00B4                     _Iout:	
  5850  00B4                     	ds	2
  5851  00B6                     _Imin1:	
  5852  00B6                     	ds	2
  5853  00B8                     _state_counter1:	
  5854  00B8                     	ds	2
  5855  00BA                     _Imin1Count:	
  5856  00BA                     	ds	2
  5857  00BC                     _sampleIndex:	
  5858  00BC                     	ds	2
  5859  00BE                     _Iref1:	
  5860  00BE                     	ds	2
  5861  00C0                     _Vref1:	
  5862  00C0                     	ds	2
  5863  00C2                     _j:	
  5864  00C2                     	ds	1
  5865  00C3                     _cc_cv1:	
  5866  00C3                     	ds	1
  5867  00C4                     _cc_cv0:	
  5868  00C4                     	ds	1
  5869  00C5                     _battery_state1:	
  5870  00C5                     	ds	1
  5871  00C6                     _V0HoldMode:	
  5872  00C6                     	ds	1
  5873                           
  5874                           	psect	dataBANK1
  5875  00CC                     __pdataBANK1:	
  5876  00CC                     _Imode1:	
  5877  00CC                     	ds	1
  5878  00CD                     _Imode0:	
  5879  00CD                     	ds	1
  5880                           
  5881                           	psect	bssBANK2
  5882  0120                     __pbssBANK2:	
  5883  0120                     _totals:	
  5884  0120                     	ds	16
  5885  0130                     _Ianalogs:	
  5886  0130                     	ds	8
  5887  0138                     _Vanalogs:	
  5888  0138                     	ds	8
  5889  0140                     LCDWriteInt@F14388:	
  5890  0140                     	ds	5
  5891                           
  5892                           	psect	dataBANK2
  5893  0145                     __pdataBANK2:	
  5894  0145                     _channels:	
  5895  0145                     	ds	8
  5896                           
  5897                           	psect	clrtext
  5898  1216                     clear_ram0:	
  5899                           ;	Called with FSR0 containing the base address, and
  5900                           ;	btemp/btemp+1 has the size to clear
  5901                           
  5902  1216  0064               	clrwdt	;clear the watchdog before getting into this loop
  5903  1217                     clrloop0:	
  5904  1217  0180               	clrf	0	;clear RAM location pointed to by FSR
  5905  1218  3101               	addfsr 0,1
  5906  1219  3001               	movlw	1
  5907  121A  02FE               	subwf	126,f
  5908  121B  3000               	movlw	0
  5909  121C  3BFF               	subwfb	127,f
  5910  121D  087F               	movf	127,w
  5911  121E  047E               	iorwf	126,w
  5912  121F  1903               	btfsc	3,2
  5913  1220  3400               	retlw	0	;all done for this memory range, return
  5914  1221  2A17               	goto	clrloop0	;have we reached the end yet?
  5915                           
  5916                           	psect	cstackBANK3
  5917  01A0                     __pcstackBANK3:	
  5918  01A0                     _main$1313:	
  5919                           
  5920                           ; 3 bytes @ 0x0
  5921  01A0                     	ds	3
  5922  01A3                     main@batteryTemp:	
  5923                           
  5924                           ; 2 bytes @ 0x3
  5925  01A3                     	ds	2
  5926  01A5                     main@MPPT1:	
  5927                           
  5928                           ; 2 bytes @ 0x5
  5929  01A5                     	ds	2
  5930  01A7                     main@faultCount:	
  5931                           
  5932                           ; 2 bytes @ 0x7
  5933  01A7                     	ds	2
  5934  01A9                     main@faultNotReset:	
  5935                           
  5936                           ; 2 bytes @ 0x9
  5937  01A9                     	ds	2
  5938  01AB                     _main$1306:	
  5939                           
  5940                           ; 3 bytes @ 0xB
  5941  01AB                     	ds	3
  5942  01AE                     _main$1308:	
  5943                           
  5944                           ; 2 bytes @ 0xE
  5945  01AE                     	ds	2
  5946  01B0                     _main$1309:	
  5947                           
  5948                           ; 2 bytes @ 0x10
  5949  01B0                     	ds	2
  5950  01B2                     main@slowLoop:	
  5951                           
  5952                           ; 1 bytes @ 0x12
  5953  01B2                     	ds	1
  5954  01B3                     main@displayRefresh:	
  5955                           
  5956                           ; 1 bytes @ 0x13
  5957  01B3                     	ds	1
  5958  01B4                     main@IOutTotal:	
  5959                           
  5960                           ; 2 bytes @ 0x14
  5961  01B4                     	ds	2
  5962  01B6                     main@efficiency:	
  5963                           
  5964                           ; 3 bytes @ 0x16
  5965  01B6                     	ds	3
  5966  01B9                     main@menuButton:	
  5967                           
  5968                           ; 1 bytes @ 0x19
  5969  01B9                     	ds	1
  5970  01BA                     main@dutyCycle1:	
  5971                           
  5972                           ; 2 bytes @ 0x1A
  5973  01BA                     	ds	2
  5974  01BC                     main@j:	
  5975                           
  5976                           ; 1 bytes @ 0x1C
  5977  01BC                     	ds	1
  5978  01BD                     main@MPPT0:	
  5979                           
  5980                           ; 2 bytes @ 0x1D
  5981  01BD                     	ds	2
  5982  01BF                     main@dutyCycle6:	
  5983                           
  5984                           ; 2 bytes @ 0x1F
  5985  01BF                     	ds	2
  5986  01C1                     main@dutyCycle7:	
  5987                           
  5988                           ; 2 bytes @ 0x21
  5989  01C1                     	ds	2
  5990                           
  5991                           	psect	cstackCOMMON
  5992  0070                     __pcstackCOMMON:	
  5993  0070                     ?___ftge:	
  5994  0070                     ?_SYSTEM_Initialize:	
  5995                           ; 1 bit 
  5996                           
  5997  0070                     ?_LCDClear:	
  5998                           ; 1 bytes @ 0x0
  5999                           
  6000  0070                     ?_PWM1_LoadDutyValue:	
  6001                           ; 1 bytes @ 0x0
  6002                           
  6003  0070                     ?_PWM6_LoadDutyValue:	
  6004                           ; 1 bytes @ 0x0
  6005                           
  6006  0070                     ?_PWM7_LoadDutyValue:	
  6007                           ; 1 bytes @ 0x0
  6008                           
  6009  0070                     ?_readButton:	
  6010                           ; 1 bytes @ 0x0
  6011                           
  6012  0070                     ?_LCDInit:	
  6013                           ; 1 bytes @ 0x0
  6014                           
  6015  0070                     ?_Battery_State_Machine:	
  6016                           ; 1 bytes @ 0x0
  6017                           
  6018  0070                     ?_LCDWriteCharacter:	
  6019                           ; 1 bytes @ 0x0
  6020                           
  6021  0070                     ?_cc_cv_mode:	
  6022                           ; 1 bytes @ 0x0
  6023                           
  6024  0070                     ??_cc_cv_mode:	
  6025                           ; 1 bytes @ 0x0
  6026                           
  6027  0070                     ?_calculateCurrent0:	
  6028                           ; 1 bytes @ 0x0
  6029                           
  6030  0070                     ?_calculateCurrent1:	
  6031                           ; 1 bytes @ 0x0
  6032                           
  6033  0070                     ?_LCDWrite:	
  6034                           ; 1 bytes @ 0x0
  6035                           
  6036  0070                     ?_OSCILLATOR_Initialize:	
  6037                           ; 1 bytes @ 0x0
  6038                           
  6039  0070                     ??_OSCILLATOR_Initialize:	
  6040                           ; 1 bytes @ 0x0
  6041                           
  6042  0070                     ?_TMR2_Initialize:	
  6043                           ; 1 bytes @ 0x0
  6044                           
  6045  0070                     ??_TMR2_Initialize:	
  6046                           ; 1 bytes @ 0x0
  6047                           
  6048  0070                     ?_TMR4_Initialize:	
  6049                           ; 1 bytes @ 0x0
  6050                           
  6051  0070                     ??_TMR4_Initialize:	
  6052                           ; 1 bytes @ 0x0
  6053                           
  6054  0070                     ?_main:	
  6055                           ; 1 bytes @ 0x0
  6056                           
  6057  0070                     ?_ADC_Initialize:	
  6058                           ; 1 bytes @ 0x0
  6059                           
  6060  0070                     ??_ADC_Initialize:	
  6061                           ; 1 bytes @ 0x0
  6062                           
  6063  0070                     ?_Init_Battery_State_Machine:	
  6064                           ; 1 bytes @ 0x0
  6065                           
  6066  0070                     ??_Init_Battery_State_Machine:	
  6067                           ; 1 bytes @ 0x0
  6068                           
  6069  0070                     ?_PIN_MANAGER_Initialize:	
  6070                           ; 1 bytes @ 0x0
  6071                           
  6072  0070                     ??_PIN_MANAGER_Initialize:	
  6073                           ; 1 bytes @ 0x0
  6074                           
  6075  0070                     ?_PWM_Initialize:	
  6076                           ; 1 bytes @ 0x0
  6077                           
  6078  0070                     ??_PWM_Initialize:	
  6079                           ; 1 bytes @ 0x0
  6080                           
  6081  0070                     ?_ADCRead:	
  6082                           ; 1 bytes @ 0x0
  6083                           
  6084  0070                     ?___awdiv:	
  6085                           ; 2 bytes @ 0x0
  6086                           
  6087  0070                     ?___lwmod:	
  6088                           ; 2 bytes @ 0x0
  6089                           
  6090  0070                     ?___ftpack:	
  6091                           ; 2 bytes @ 0x0
  6092                           
  6093  0070                     ?_frexp:	
  6094                           ; 3 bytes @ 0x0
  6095                           
  6096  0070                     ?___aldiv:	
  6097                           ; 3 bytes @ 0x0
  6098                           
  6099  0070                     LCDWrite@data:	
  6100                           ; 4 bytes @ 0x0
  6101                           
  6102  0070                     PIN_MANAGER_Initialize@state:	
  6103                           ; 1 bytes @ 0x0
  6104                           
  6105  0070                     PWM6_LoadDutyValue@dutyCycle6:	
  6106                           ; 1 bytes @ 0x0
  6107                           
  6108  0070                     PWM7_LoadDutyValue@dutyCycle7:	
  6109                           ; 2 bytes @ 0x0
  6110                           
  6111  0070                     PWM1_LoadDutyValue@dutyCycle1:	
  6112                           ; 2 bytes @ 0x0
  6113                           
  6114  0070                     ___awdiv@divisor:	
  6115                           ; 2 bytes @ 0x0
  6116                           
  6117  0070                     ___lwmod@divisor:	
  6118                           ; 2 bytes @ 0x0
  6119                           
  6120  0070                     ___ftpack@arg:	
  6121                           ; 2 bytes @ 0x0
  6122                           
  6123  0070                     ___ftge@ff1:	
  6124                           ; 3 bytes @ 0x0
  6125                           
  6126  0070                     frexp@value:	
  6127                           ; 3 bytes @ 0x0
  6128                           
  6129  0070                     ___aldiv@divisor:	
  6130                           ; 3 bytes @ 0x0
  6131                           
  6132                           
  6133                           ; 4 bytes @ 0x0
  6134  0070                     	ds	1
  6135  0071                     ??_LCDWrite:	
  6136                           
  6137                           ; 1 bytes @ 0x1
  6138  0071                     	ds	1
  6139  0072                     ??_PWM1_LoadDutyValue:	
  6140  0072                     ??_PWM6_LoadDutyValue:	
  6141                           ; 1 bytes @ 0x2
  6142                           
  6143  0072                     ??_PWM7_LoadDutyValue:	
  6144                           ; 1 bytes @ 0x2
  6145                           
  6146  0072                     LCDWrite@data_or_command:	
  6147                           ; 1 bytes @ 0x2
  6148                           
  6149  0072                     ___awdiv@dividend:	
  6150                           ; 1 bytes @ 0x2
  6151                           
  6152  0072                     ___lwmod@dividend:	
  6153                           ; 2 bytes @ 0x2
  6154                           
  6155                           
  6156                           ; 2 bytes @ 0x2
  6157  0072                     	ds	1
  6158  0073                     ??_ADCRead:	
  6159  0073                     ADCRead@channel:	
  6160                           ; 1 bytes @ 0x3
  6161                           
  6162  0073                     LCDWrite@d:	
  6163                           ; 1 bytes @ 0x3
  6164                           
  6165  0073                     ___ftpack@exp:	
  6166                           ; 1 bytes @ 0x3
  6167                           
  6168  0073                     frexp@eptr:	
  6169                           ; 1 bytes @ 0x3
  6170                           
  6171  0073                     ___ftge@ff2:	
  6172                           ; 1 bytes @ 0x3
  6173                           
  6174                           
  6175                           ; 3 bytes @ 0x3
  6176  0073                     	ds	1
  6177  0074                     ??_readButton:	
  6178  0074                     ??_frexp:	
  6179                           ; 1 bytes @ 0x4
  6180                           
  6181  0074                     ??___awdiv:	
  6182                           ; 1 bytes @ 0x4
  6183                           
  6184  0074                     ??___lwmod:	
  6185                           ; 1 bytes @ 0x4
  6186                           
  6187  0074                     LCDWrite@i:	
  6188                           ; 1 bytes @ 0x4
  6189                           
  6190  0074                     ___ftpack@sign:	
  6191                           ; 1 bytes @ 0x4
  6192                           
  6193  0074                     ___aldiv@dividend:	
  6194                           ; 1 bytes @ 0x4
  6195                           
  6196                           
  6197                           ; 4 bytes @ 0x4
  6198  0074                     	ds	1
  6199  0075                     ??_LCDInit:	
  6200  0075                     ?_gotoXY:	
  6201                           ; 1 bytes @ 0x5
  6202                           
  6203  0075                     ??___ftpack:	
  6204                           ; 1 bytes @ 0x5
  6205                           
  6206  0075                     gotoXY@y:	
  6207                           ; 1 bytes @ 0x5
  6208                           
  6209  0075                     ___awdiv@counter:	
  6210                           ; 1 bytes @ 0x5
  6211                           
  6212  0075                     ___lwmod@counter:	
  6213                           ; 1 bytes @ 0x5
  6214                           
  6215                           
  6216                           ; 1 bytes @ 0x5
  6217  0075                     	ds	1
  6218  0076                     ??_gotoXY:	
  6219  0076                     ??___ftge:	
  6220                           ; 1 bytes @ 0x6
  6221                           
  6222  0076                     ___awdiv@sign:	
  6223                           ; 1 bytes @ 0x6
  6224                           
  6225                           
  6226                           ; 1 bytes @ 0x6
  6227  0076                     	ds	1
  6228  0077                     gotoXY@x:	
  6229  0077                     ___awdiv@quotient:	
  6230                           ; 1 bytes @ 0x7
  6231                           
  6232                           
  6233                           ; 2 bytes @ 0x7
  6234  0077                     	ds	1
  6235  0078                     ??_LCDClear:	
  6236  0078                     ??___aldiv:	
  6237                           ; 1 bytes @ 0x8
  6238                           
  6239  0078                     ?___awtoft:	
  6240                           ; 1 bytes @ 0x8
  6241                           
  6242  0078                     ___awtoft@c:	
  6243                           ; 3 bytes @ 0x8
  6244                           
  6245                           
  6246                           ; 2 bytes @ 0x8
  6247  0078                     	ds	1
  6248  0079                     ?___wmul:	
  6249  0079                     LCDClear@index:	
  6250                           ; 2 bytes @ 0x9
  6251                           
  6252  0079                     ___wmul@multiplier:	
  6253                           ; 2 bytes @ 0x9
  6254                           
  6255                           
  6256                           ; 2 bytes @ 0x9
  6257  0079                     	ds	2
  6258  007B                     ??_SYSTEM_Initialize:	
  6259  007B                     ??___awtoft:	
  6260                           ; 1 bytes @ 0xB
  6261                           
  6262  007B                     ___wmul@multiplicand:	
  6263                           ; 1 bytes @ 0xB
  6264                           
  6265                           
  6266                           ; 2 bytes @ 0xB
  6267  007B                     	ds	2
  6268  007D                     ??_LCDWriteString:	
  6269  007D                     ??___wmul:	
  6270                           ; 1 bytes @ 0xD
  6271                           
  6272  007D                     ___awtoft@sign:	
  6273                           ; 1 bytes @ 0xD
  6274                           
  6275                           
  6276                           ; 1 bytes @ 0xD
  6277  007D                     	ds	1
  6278  007E                     ??_tempCalc:	
  6279  007E                     ??_eval_poly:	
  6280                           ; 1 bytes @ 0xE
  6281                           
  6282  007E                     ??___ftsub:	
  6283                           ; 1 bytes @ 0xE
  6284                           
  6285                           
  6286                           	psect	cstackBANK0
  6287  0020                     __pcstackBANK0:	
  6288                           ; 1 bytes @ 0xE
  6289                           
  6290  0020                     ?___ftdiv:	
  6291  0020                     ___aldiv@counter:	
  6292                           ; 3 bytes @ 0x0
  6293                           
  6294  0020                     ___wmul@product:	
  6295                           ; 1 bytes @ 0x0
  6296                           
  6297  0020                     ___ftdiv@f2:	
  6298                           ; 2 bytes @ 0x0
  6299                           
  6300                           
  6301                           ; 3 bytes @ 0x0
  6302  0020                     	ds	1
  6303  0021                     ___aldiv@sign:	
  6304                           
  6305                           ; 1 bytes @ 0x1
  6306  0021                     	ds	1
  6307  0022                     ??_LCDWriteCharacter:	
  6308  0022                     ___aldiv@quotient:	
  6309                           ; 1 bytes @ 0x2
  6310                           
  6311                           
  6312                           ; 4 bytes @ 0x2
  6313  0022                     	ds	1
  6314  0023                     ___ftdiv@f1:	
  6315                           
  6316                           ; 3 bytes @ 0x3
  6317  0023                     	ds	2
  6318  0025                     LCDWriteCharacter@character:	
  6319                           
  6320                           ; 1 bytes @ 0x5
  6321  0025                     	ds	1
  6322  0026                     ??___ftdiv:	
  6323  0026                     ?_readIAnalog:	
  6324                           ; 1 bytes @ 0x6
  6325                           
  6326  0026                     readIAnalog@channel:	
  6327                           ; 2 bytes @ 0x6
  6328                           
  6329  0026                     LCDWriteCharacter@base:	
  6330                           ; 2 bytes @ 0x6
  6331                           
  6332                           
  6333                           ; 2 bytes @ 0x6
  6334  0026                     	ds	2
  6335  0028                     ??_readIAnalog:	
  6336  0028                     ?_LCDWriteString:	
  6337                           ; 1 bytes @ 0x8
  6338                           
  6339  0028                     LCDWriteString@characters:	
  6340                           ; 1 bytes @ 0x8
  6341                           
  6342                           
  6343                           ; 2 bytes @ 0x8
  6344  0028                     	ds	2
  6345  002A                     ??_Battery_State_Machine:	
  6346  002A                     ___ftdiv@cntr:	
  6347                           ; 1 bytes @ 0xA
  6348                           
  6349                           
  6350                           ; 1 bytes @ 0xA
  6351  002A                     	ds	1
  6352  002B                     ___ftdiv@f3:	
  6353                           
  6354                           ; 3 bytes @ 0xB
  6355  002B                     	ds	3
  6356  002E                     ___ftdiv@exp:	
  6357                           
  6358                           ; 1 bytes @ 0xE
  6359  002E                     	ds	1
  6360  002F                     ___ftdiv@sign:	
  6361                           
  6362                           ; 1 bytes @ 0xF
  6363  002F                     	ds	1
  6364  0030                     ?___ftmul:	
  6365  0030                     ?___fttol:	
  6366                           ; 3 bytes @ 0x10
  6367                           
  6368  0030                     ___ftmul@f1:	
  6369                           ; 4 bytes @ 0x10
  6370                           
  6371  0030                     ___fttol@f1:	
  6372                           ; 3 bytes @ 0x10
  6373                           
  6374                           
  6375                           ; 3 bytes @ 0x10
  6376  0030                     	ds	3
  6377  0033                     ___ftmul@f2:	
  6378                           
  6379                           ; 3 bytes @ 0x13
  6380  0033                     	ds	1
  6381  0034                     ??___fttol:	
  6382                           
  6383                           ; 1 bytes @ 0x14
  6384  0034                     	ds	2
  6385  0036                     ??___ftmul:	
  6386                           
  6387                           ; 1 bytes @ 0x16
  6388  0036                     	ds	2
  6389  0038                     ___fttol@sign1:	
  6390                           
  6391                           ; 1 bytes @ 0x18
  6392  0038                     	ds	1
  6393  0039                     ___fttol@lval:	
  6394                           
  6395                           ; 4 bytes @ 0x19
  6396  0039                     	ds	1
  6397  003A                     ___ftmul@exp:	
  6398  003A                     readIAnalog@analog_channel:	
  6399                           ; 1 bytes @ 0x1A
  6400                           
  6401                           
  6402                           ; 2 bytes @ 0x1A
  6403  003A                     	ds	1
  6404  003B                     ___ftmul@f3_as_product:	
  6405                           
  6406                           ; 3 bytes @ 0x1B
  6407  003B                     	ds	1
  6408  003C                     readIAnalog@value:	
  6409                           
  6410                           ; 2 bytes @ 0x1C
  6411  003C                     	ds	1
  6412  003D                     ___fttol@exp1:	
  6413                           
  6414                           ; 1 bytes @ 0x1D
  6415  003D                     	ds	1
  6416  003E                     ?_LCDWriteInt:	
  6417  003E                     ??_calculateCurrent0:	
  6418                           ; 1 bytes @ 0x1E
  6419                           
  6420  003E                     ??_calculateCurrent1:	
  6421                           ; 1 bytes @ 0x1E
  6422                           
  6423  003E                     ___ftmul@cntr:	
  6424                           ; 1 bytes @ 0x1E
  6425                           
  6426  003E                     LCDWriteInt@value:	
  6427                           ; 1 bytes @ 0x1E
  6428                           
  6429                           
  6430                           ; 2 bytes @ 0x1E
  6431  003E                     	ds	1
  6432  003F                     ___ftmul@sign:	
  6433                           
  6434                           ; 1 bytes @ 0x1F
  6435  003F                     	ds	1
  6436  0040                     ?___ftadd:	
  6437  0040                     LCDWriteInt@fieldLength:	
  6438                           ; 3 bytes @ 0x20
  6439                           
  6440  0040                     ___ftadd@f1:	
  6441                           ; 1 bytes @ 0x20
  6442                           
  6443                           
  6444                           ; 3 bytes @ 0x20
  6445  0040                     	ds	1
  6446  0041                     LCDWriteInt@numPlaces:	
  6447                           
  6448                           ; 1 bytes @ 0x21
  6449  0041                     	ds	1
  6450  0042                     LCDWriteInt@sign:	
  6451                           
  6452                           ; 1 bytes @ 0x22
  6453  0042                     	ds	1
  6454  0043                     ??_LCDWriteInt:	
  6455  0043                     ___ftadd@f2:	
  6456                           ; 1 bytes @ 0x23
  6457                           
  6458                           
  6459                           ; 3 bytes @ 0x23
  6460  0043                     	ds	3
  6461  0046                     ??___ftadd:	
  6462                           
  6463                           ; 1 bytes @ 0x26
  6464  0046                     	ds	1
  6465  0047                     LCDWriteInt@str:	
  6466                           
  6467                           ; 5 bytes @ 0x27
  6468  0047                     	ds	3
  6469  004A                     ___ftadd@sign:	
  6470                           
  6471                           ; 1 bytes @ 0x2A
  6472  004A                     	ds	1
  6473  004B                     ___ftadd@exp2:	
  6474                           
  6475                           ; 1 bytes @ 0x2B
  6476  004B                     	ds	1
  6477  004C                     LCDWriteInt@j:	
  6478  004C                     ___ftadd@exp1:	
  6479                           ; 1 bytes @ 0x2C
  6480                           
  6481                           
  6482                           ; 1 bytes @ 0x2C
  6483  004C                     	ds	1
  6484  004D                     ?_eval_poly:	
  6485  004D                     ?___ftsub:	
  6486                           ; 3 bytes @ 0x2D
  6487                           
  6488  004D                     LCDWriteInt@i:	
  6489                           ; 3 bytes @ 0x2D
  6490                           
  6491  004D                     ___ftsub@f2:	
  6492                           ; 1 bytes @ 0x2D
  6493                           
  6494  004D                     eval_poly@x:	
  6495                           ; 3 bytes @ 0x2D
  6496                           
  6497                           
  6498                           ; 3 bytes @ 0x2D
  6499  004D                     	ds	3
  6500  0050                     eval_poly@d:	
  6501  0050                     ___ftsub@f1:	
  6502                           ; 2 bytes @ 0x30
  6503                           
  6504                           
  6505                           ; 3 bytes @ 0x30
  6506  0050                     	ds	2
  6507  0052                     eval_poly@n:	
  6508                           
  6509                           ; 2 bytes @ 0x32
  6510  0052                     	ds	2
  6511  0054                     eval_poly@res:	
  6512                           
  6513                           ; 3 bytes @ 0x34
  6514  0054                     	ds	3
  6515  0057                     ?_log:	
  6516  0057                     log@x:	
  6517                           ; 3 bytes @ 0x37
  6518                           
  6519                           
  6520                           ; 3 bytes @ 0x37
  6521  0057                     	ds	3
  6522  005A                     ??_log:	
  6523                           
  6524                           ; 1 bytes @ 0x3A
  6525  005A                     	ds	1
  6526  005B                     log@exponent:	
  6527                           
  6528                           ; 2 bytes @ 0x3B
  6529  005B                     	ds	2
  6530  005D                     ?_tempCalc:	
  6531  005D                     tempCalc@analogValue:	
  6532                           ; 2 bytes @ 0x3D
  6533                           
  6534                           
  6535                           ; 2 bytes @ 0x3D
  6536  005D                     	ds	2
  6537  005F                     tempCalc@R:	
  6538                           
  6539                           ; 3 bytes @ 0x3F
  6540  005F                     	ds	3
  6541  0062                     _tempCalc$1310:	
  6542                           
  6543                           ; 3 bytes @ 0x42
  6544  0062                     	ds	3
  6545  0065                     tempCalc@steinhart:	
  6546                           
  6547                           ; 3 bytes @ 0x45
  6548  0065                     	ds	3
  6549  0068                     ??_main:	
  6550                           
  6551                           ; 1 bytes @ 0x48
  6552  0068                     	ds	4
  6553                           
  6554                           	psect	maintext
  6555  015E                     __pmaintext:	
  6556 ;;
  6557 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  6558 ;;
  6559 ;; *************** function _main *****************
  6560 ;; Defined at:
  6561 ;;		line 42 in file "main.c"
  6562 ;; Parameters:    Size  Location     Type
  6563 ;;		None
  6564 ;; Auto vars:     Size  Location     Type
  6565 ;;  efficiency      3   22[BANK3 ] float 
  6566 ;;  dutyCycle7      2   33[BANK3 ] unsigned int 
  6567 ;;  dutyCycle6      2   31[BANK3 ] unsigned int 
  6568 ;;  MPPT0           2   29[BANK3 ] int 
  6569 ;;  dutyCycle1      2   26[BANK3 ] unsigned int 
  6570 ;;  IOutTotal       2   20[BANK3 ] int 
  6571 ;;  faultNotRese    2    9[BANK3 ] unsigned int 
  6572 ;;  faultCount      2    7[BANK3 ] unsigned int 
  6573 ;;  MPPT1           2    5[BANK3 ] int 
  6574 ;;  batteryTemp     2    3[BANK3 ] int 
  6575 ;;  j               1   28[BANK3 ] unsigned char 
  6576 ;;  menuButton      1   25[BANK3 ] unsigned char 
  6577 ;;  displayRefre    1   19[BANK3 ] unsigned char 
  6578 ;;  slowLoop        1   18[BANK3 ] unsigned char 
  6579 ;; Return value:  Size  Location     Type
  6580 ;;                  1    wreg      void 
  6581 ;; Registers used:
  6582 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6583 ;; Tracked objects:
  6584 ;;		On entry : B1F/0
  6585 ;;		On exit  : 0/0
  6586 ;;		Unchanged: 0/0
  6587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6589 ;;      Locals:         0       0       0       0      35       0       0       0       0       0       0       0       
      +0       0
  6590 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6591 ;;      Totals:         0       4       0       0      35       0       0       0       0       0       0       0       
      +0       0
  6592 ;;Total ram usage:       39 bytes
  6593 ;; Hardware stack levels required when called:    5
  6594 ;; This function calls:
  6595 ;;		_ADCRead
  6596 ;;		_Battery_State_Machine
  6597 ;;		_LCDClear
  6598 ;;		_LCDInit
  6599 ;;		_LCDWriteCharacter
  6600 ;;		_LCDWriteInt
  6601 ;;		_PWM1_LoadDutyValue
  6602 ;;		_PWM6_LoadDutyValue
  6603 ;;		_PWM7_LoadDutyValue
  6604 ;;		_SYSTEM_Initialize
  6605 ;;		___awdiv
  6606 ;;		___awtoft
  6607 ;;		___ftdiv
  6608 ;;		___ftmul
  6609 ;;		___fttol
  6610 ;;		___wmul
  6611 ;;		_calculateCurrent0
  6612 ;;		_calculateCurrent1
  6613 ;;		_cc_cv_mode
  6614 ;;		_gotoXY
  6615 ;;		_readButton
  6616 ;;		_readIAnalog
  6617 ;;		_tempCalc
  6618 ;; This function is called by:
  6619 ;;		Startup code after reset
  6620 ;; This function uses a non-reentrant model
  6621 ;;
  6622                           
  6623                           
  6624                           ;psect for function _main
  6625  015E                     _main:	
  6626                           
  6627                           ;main.c: 44: int16_t MPPT0 = 1750;
  6628                           
  6629                           ;incstack = 0
  6630                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6631  015E  30D6               	movlw	214
  6632  015F  0023               	movlb	3	; select bank3
  6633  0160  00BD               	movwf	main@MPPT0^(0+384)
  6634  0161  3006               	movlw	6
  6635  0162  00BE               	movwf	(main@MPPT0^(0+384)+1)
  6636                           
  6637                           ;main.c: 45: int16_t MPPT1 = 1760;
  6638  0163  30E0               	movlw	224
  6639  0164  00A5               	movwf	main@MPPT1^(0+384)
  6640  0165  3006               	movlw	6
  6641  0166  00A6               	movwf	(main@MPPT1^(0+384)+1)
  6642                           
  6643                           ;main.c: 47: uint16_t dutyCycle6 = 1023;
  6644  0167  30FF               	movlw	255
  6645  0168  00BF               	movwf	main@dutyCycle6^(0+384)
  6646  0169  3003               	movlw	3
  6647  016A  00C0               	movwf	(main@dutyCycle6^(0+384)+1)
  6648                           
  6649                           ;main.c: 48: uint16_t dutyCycle7 = 256;
  6650  016B  3000               	movlw	0
  6651  016C  00C1               	movwf	main@dutyCycle7^(0+384)
  6652  016D  3001               	movlw	1
  6653  016E  00C2               	movwf	(main@dutyCycle7^(0+384)+1)
  6654                           
  6655                           ;main.c: 49: uint16_t dutyCycle1 = 60;
  6656  016F  303C               	movlw	60
  6657  0170  00BA               	movwf	main@dutyCycle1^(0+384)
  6658  0171  3000               	movlw	0
  6659  0172  00BB               	movwf	(main@dutyCycle1^(0+384)+1)
  6660                           
  6661                           ;main.c: 50: int16_t IOutTotal = 0;
  6662  0173  01B4               	clrf	main@IOutTotal^(0+384)
  6663  0174  01B5               	clrf	(main@IOutTotal+1)^(0+384)
  6664                           
  6665                           ;main.c: 52: uint8_t j = 0;
  6666  0175  01BC               	clrf	main@j^(0+384)
  6667                           
  6668                           ;main.c: 55: uint8_t slowLoop = 200;
  6669  0176  30C8               	movlw	200
  6670  0177  0020               	movlb	0	; select bank0
  6671  0178  00E8               	movwf	??_main
  6672  0179  0868               	movf	??_main,w
  6673  017A  0023               	movlb	3	; select bank3
  6674  017B  00B2               	movwf	main@slowLoop^(0+384)
  6675                           
  6676                           ;main.c: 56: uint8_t displayRefresh = 0;
  6677  017C  01B3               	clrf	main@displayRefresh^(0+384)
  6678                           
  6679                           ;main.c: 57: int16_t batteryTemp = 250;
  6680  017D  30FA               	movlw	250
  6681  017E  00A3               	movwf	main@batteryTemp^(0+384)
  6682  017F  3000               	movlw	0
  6683  0180  00A4               	movwf	(main@batteryTemp^(0+384)+1)
  6684                           
  6685                           ;main.c: 58: float efficiency = 0;
  6686  0181  3000               	movlw	0
  6687  0182  00B6               	movwf	main@efficiency^(0+384)
  6688  0183  3000               	movlw	0
  6689  0184  00B7               	movwf	(main@efficiency+1)^(0+384)
  6690  0185  3000               	movlw	0
  6691  0186  00B8               	movwf	(main@efficiency+2)^(0+384)
  6692                           
  6693                           ;main.c: 59: extern int8_t Imode0;
  6694                           ;main.c: 60: extern int8_t Imode1;
  6695                           ;main.c: 61: extern int16_t Vref0;
  6696                           ;main.c: 62: extern int16_t Iref0;
  6697                           ;main.c: 63: extern int16_t Vref1;
  6698                           ;main.c: 64: extern int16_t Iref1;
  6699                           ;main.c: 65: uint8_t menuButton = 0;
  6700  0187  01B9               	clrf	main@menuButton^(0+384)
  6701                           
  6702                           ;main.c: 66: uint16_t faultCount = 0;
  6703  0188  01A7               	clrf	main@faultCount^(0+384)
  6704  0189  01A8               	clrf	(main@faultCount+1)^(0+384)
  6705                           
  6706                           ;main.c: 67: uint16_t faultNotReset = 0;
  6707  018A  01A9               	clrf	main@faultNotReset^(0+384)
  6708  018B  01AA               	clrf	(main@faultNotReset+1)^(0+384)
  6709                           
  6710                           ;main.c: 68: extern int8_t V0HoldMode;
  6711                           ;main.c: 71: SYSTEM_Initialize();
  6712  018C  3193  23DF  3181   	fcall	_SYSTEM_Initialize
  6713                           
  6714                           ;main.c: 73: LCDClear();
  6715  018F  3193  238D  3181   	fcall	_LCDClear
  6716  0192                     l4367:	
  6717                           ;main.c: 75: void calculateCurrent0(void);
  6718                           ;main.c: 76: void calculateCurrent1(void);
  6719                           ;main.c: 92: while (1)
  6720                           
  6721                           
  6722                           ;main.c: 93: {
  6723                           ;main.c: 94: if(!(RB2))
  6724  0192  0020               	movlb	0	; select bank0
  6725  0193  190D               	btfsc	13,2	;volatile
  6726  0194  29A6               	goto	l4375
  6727                           
  6728                           ;main.c: 95: {
  6729                           ;main.c: 96: LATA5=0;
  6730  0195  1296               	bcf	22,5	;volatile
  6731                           
  6732                           ;main.c: 97: _delay((unsigned long)((400)*(32000000/4000000.0)));
  6733  0196  3005               	movlw	5
  6734  0197  0020               	movlb	0	; select bank0
  6735  0198  00E8               	movwf	??_main
  6736  0199  3026               	movlw	38
  6737  019A                     u5897:	
  6738  019A  0B89               	decfsz	9,f
  6739  019B  299A               	goto	u5897
  6740  019C  0BE8               	decfsz	??_main,f
  6741  019D  299A               	goto	u5897
  6742  019E  0000               	nop
  6743                           
  6744                           ;main.c: 98: faultCount+=1;
  6745  019F  3001               	movlw	1
  6746  01A0  0023               	movlb	3	; select bank3
  6747  01A1  07A7               	addwf	main@faultCount^(0+384),f
  6748  01A2  3000               	movlw	0
  6749  01A3  3DA8               	addwfc	(main@faultCount+1)^(0+384),f
  6750                           
  6751                           ;main.c: 99: LATA5=1;
  6752  01A4  0020               	movlb	0	; select bank0
  6753  01A5  1696               	bsf	22,5	;volatile
  6754  01A6                     l4375:	
  6755                           
  6756                           ;main.c: 100: }
  6757                           ;main.c: 101: for(j=0;j<4;j++) Ianalogs[j]=readIAnalog(j);
  6758  01A6  0023               	movlb	3	; select bank3
  6759  01A7  01BC               	clrf	main@j^(0+384)
  6760  01A8  3004               	movlw	4
  6761  01A9  023C               	subwf	main@j^(0+384),w
  6762  01AA  1803               	btfsc	3,0
  6763  01AB  29CB               	goto	l4387
  6764  01AC                     l4381:	
  6765  01AC  083C               	movf	main@j^(0+384),w
  6766  01AD  0020               	movlb	0	; select bank0
  6767  01AE  00E8               	movwf	??_main
  6768  01AF  01E9               	clrf	??_main+1
  6769  01B0  0868               	movf	??_main,w
  6770  01B1  00A6               	movwf	readIAnalog@channel
  6771  01B2  0869               	movf	??_main+1,w
  6772  01B3  00A7               	movwf	readIAnalog@channel+1
  6773  01B4  3180  2012  3181   	fcall	_readIAnalog
  6774  01B7  0023               	movlb	3	; select bank3
  6775  01B8  353C               	lslf	main@j^(0+384),w
  6776  01B9  3E30               	addlw	(low (_Ianalogs| (0+256)))& (0+255)
  6777  01BA  0086               	movwf	6
  6778  01BB  3001               	movlw	1	; select bank2/3
  6779  01BC  0087               	movwf	7
  6780  01BD  0020               	movlb	0	; select bank0
  6781  01BE  0826               	movf	?_readIAnalog,w
  6782  01BF  3FC0               	movwi [0]fsr1
  6783  01C0  0827               	movf	?_readIAnalog+1,w
  6784  01C1  3FC1               	movwi [1]fsr1
  6785  01C2  3001               	movlw	1
  6786  01C3  00E8               	movwf	??_main
  6787  01C4  0868               	movf	??_main,w
  6788  01C5  0023               	movlb	3	; select bank3
  6789  01C6  07BC               	addwf	main@j^(0+384),f
  6790  01C7  3004               	movlw	4
  6791  01C8  023C               	subwf	main@j^(0+384),w
  6792  01C9  1C03               	skipc
  6793  01CA  29AC               	goto	l4381
  6794  01CB                     l4387:	
  6795                           
  6796                           ;main.c: 103: Vanalogs[0]=ADCRead(23);
  6797  01CB  3017               	movlw	23
  6798  01CC  3192  2243  3181   	fcall	_ADCRead
  6799  01CF  0871               	movf	?_ADCRead+1,w
  6800  01D0  0022               	movlb	2	; select bank2
  6801  01D1  00B9               	movwf	(_Vanalogs+1)^(0+256)
  6802  01D2  0870               	movf	?_ADCRead,w
  6803  01D3  00B8               	movwf	_Vanalogs^(0+256)
  6804                           
  6805                           ;main.c: 105: Vanalogs[1]=ADCRead(21);
  6806  01D4  3015               	movlw	21
  6807  01D5  3192  2243  3181   	fcall	_ADCRead
  6808  01D8  0871               	movf	?_ADCRead+1,w
  6809  01D9  0022               	movlb	2	; select bank2
  6810  01DA  00BB               	movwf	((_Vanalogs+1)^(0+256)+2)
  6811  01DB  0870               	movf	?_ADCRead,w
  6812  01DC  00BA               	movwf	(_Vanalogs^(0+256)+2)
  6813                           
  6814                           ;main.c: 107: Vanalogs[2]=ADCRead(19);
  6815  01DD  3013               	movlw	19
  6816  01DE  3192  2243  3181   	fcall	_ADCRead
  6817  01E1  0871               	movf	?_ADCRead+1,w
  6818  01E2  0022               	movlb	2	; select bank2
  6819  01E3  00BD               	movwf	((_Vanalogs+1)^(0+256)+4)
  6820  01E4  0870               	movf	?_ADCRead,w
  6821  01E5  00BC               	movwf	(_Vanalogs^(0+256)+4)
  6822                           
  6823                           ;main.c: 109: Vanalogs[3]=ADCRead(17);
  6824  01E6  3011               	movlw	17
  6825  01E7  3192  2243  3181   	fcall	_ADCRead
  6826  01EA  0871               	movf	?_ADCRead+1,w
  6827  01EB  0022               	movlb	2	; select bank2
  6828  01EC  00BF               	movwf	((_Vanalogs+1)^(0+256)+6)
  6829  01ED  0870               	movf	?_ADCRead,w
  6830  01EE  00BE               	movwf	(_Vanalogs^(0+256)+6)
  6831                           
  6832                           ;main.c: 111: if(!(RB2))faultNotReset+=1;
  6833  01EF  0020               	movlb	0	; select bank0
  6834  01F0  190D               	btfsc	13,2	;volatile
  6835  01F1  29F7               	goto	l4393
  6836  01F2  3001               	movlw	1
  6837  01F3  0023               	movlb	3	; select bank3
  6838  01F4  07A9               	addwf	main@faultNotReset^(0+384),f
  6839  01F5  3000               	movlw	0
  6840  01F6  3DAA               	addwfc	(main@faultNotReset+1)^(0+384),f
  6841  01F7                     l4393:	
  6842                           
  6843                           ;main.c: 113: voltage[0]=(int16_t)(Vanalogs[0]/.405775);
  6844  01F7  0022               	movlb	2	; select bank2
  6845  01F8  0839               	movf	(_Vanalogs+1)^(0+256),w
  6846  01F9  00F9               	movwf	___awtoft@c+1
  6847  01FA  0838               	movf	_Vanalogs^(0+256),w
  6848  01FB  00F8               	movwf	___awtoft@c
  6849  01FC  3193  2348  3181   	fcall	___awtoft
  6850  01FF  0878               	movf	?___awtoft,w
  6851  0200  0020               	movlb	0	; select bank0
  6852  0201  00A3               	movwf	___ftdiv@f1
  6853  0202  0879               	movf	?___awtoft+1,w
  6854  0203  00A4               	movwf	___ftdiv@f1+1
  6855  0204  087A               	movf	?___awtoft+2,w
  6856  0205  00A5               	movwf	___ftdiv@f1+2
  6857  0206  30C2               	movlw	194
  6858  0207  00A0               	movwf	___ftdiv@f2
  6859  0208  30CF               	movlw	207
  6860  0209  00A1               	movwf	___ftdiv@f2+1
  6861  020A  303E               	movlw	62
  6862  020B  00A2               	movwf	___ftdiv@f2+2
  6863  020C  318A  224F  3181   	fcall	___ftdiv
  6864  020F  0020               	movlb	0	; select bank0
  6865  0210  0820               	movf	?___ftdiv,w
  6866  0211  00B0               	movwf	___fttol@f1
  6867  0212  0821               	movf	?___ftdiv+1,w
  6868  0213  00B1               	movwf	___fttol@f1+1
  6869  0214  0822               	movf	?___ftdiv+2,w
  6870  0215  00B2               	movwf	___fttol@f1+2
  6871  0216  3196  26F2  3181   	fcall	___fttol
  6872  0219  0020               	movlb	0	; select bank0
  6873  021A  0831               	movf	?___fttol+1,w
  6874  021B  0021               	movlb	1	; select bank1
  6875  021C  00A9               	movwf	(_voltage+1)^(0+128)
  6876  021D  0020               	movlb	0	; select bank0
  6877  021E  0830               	movf	?___fttol,w
  6878  021F  0021               	movlb	1	; select bank1
  6879  0220  00A8               	movwf	_voltage^(0+128)
  6880                           
  6881                           ;main.c: 115: voltage[1]=(int16_t)(Vanalogs[1]/.54503);
  6882  0221  0022               	movlb	2	; select bank2
  6883  0222  083B               	movf	((_Vanalogs+1)^(0+256)+2),w
  6884  0223  00F9               	movwf	___awtoft@c+1
  6885  0224  083A               	movf	(_Vanalogs^(0+256)+2),w
  6886  0225  00F8               	movwf	___awtoft@c
  6887  0226  3193  2348  3181   	fcall	___awtoft
  6888  0229  0878               	movf	?___awtoft,w
  6889  022A  0020               	movlb	0	; select bank0
  6890  022B  00A3               	movwf	___ftdiv@f1
  6891  022C  0879               	movf	?___awtoft+1,w
  6892  022D  00A4               	movwf	___ftdiv@f1+1
  6893  022E  087A               	movf	?___awtoft+2,w
  6894  022F  00A5               	movwf	___ftdiv@f1+2
  6895  0230  3087               	movlw	135
  6896  0231  00A0               	movwf	___ftdiv@f2
  6897  0232  300B               	movlw	11
  6898  0233  00A1               	movwf	___ftdiv@f2+1
  6899  0234  303F               	movlw	63
  6900  0235  00A2               	movwf	___ftdiv@f2+2
  6901  0236  318A  224F  3181   	fcall	___ftdiv
  6902  0239  0020               	movlb	0	; select bank0
  6903  023A  0820               	movf	?___ftdiv,w
  6904  023B  00B0               	movwf	___fttol@f1
  6905  023C  0821               	movf	?___ftdiv+1,w
  6906  023D  00B1               	movwf	___fttol@f1+1
  6907  023E  0822               	movf	?___ftdiv+2,w
  6908  023F  00B2               	movwf	___fttol@f1+2
  6909  0240  3196  26F2  3181   	fcall	___fttol
  6910  0243  0020               	movlb	0	; select bank0
  6911  0244  0831               	movf	?___fttol+1,w
  6912  0245  0021               	movlb	1	; select bank1
  6913  0246  00AB               	movwf	((_voltage+1)^(0+128)+2)
  6914  0247  0020               	movlb	0	; select bank0
  6915  0248  0830               	movf	?___fttol,w
  6916  0249  0021               	movlb	1	; select bank1
  6917  024A  00AA               	movwf	(_voltage^(0+128)+2)
  6918                           
  6919                           ;main.c: 117: voltage[2]=(int16_t)(Vanalogs[2]/.405775);
  6920  024B  0022               	movlb	2	; select bank2
  6921  024C  083D               	movf	((_Vanalogs+1)^(0+256)+4),w
  6922  024D  00F9               	movwf	___awtoft@c+1
  6923  024E  083C               	movf	(_Vanalogs^(0+256)+4),w
  6924  024F  00F8               	movwf	___awtoft@c
  6925  0250  3193  2348  3181   	fcall	___awtoft
  6926  0253  0878               	movf	?___awtoft,w
  6927  0254  0020               	movlb	0	; select bank0
  6928  0255  00A3               	movwf	___ftdiv@f1
  6929  0256  0879               	movf	?___awtoft+1,w
  6930  0257  00A4               	movwf	___ftdiv@f1+1
  6931  0258  087A               	movf	?___awtoft+2,w
  6932  0259  00A5               	movwf	___ftdiv@f1+2
  6933  025A  30C2               	movlw	194
  6934  025B  00A0               	movwf	___ftdiv@f2
  6935  025C  30CF               	movlw	207
  6936  025D  00A1               	movwf	___ftdiv@f2+1
  6937  025E  303E               	movlw	62
  6938  025F  00A2               	movwf	___ftdiv@f2+2
  6939  0260  318A  224F  3181   	fcall	___ftdiv
  6940  0263  0020               	movlb	0	; select bank0
  6941  0264  0820               	movf	?___ftdiv,w
  6942  0265  00B0               	movwf	___fttol@f1
  6943  0266  0821               	movf	?___ftdiv+1,w
  6944  0267  00B1               	movwf	___fttol@f1+1
  6945  0268  0822               	movf	?___ftdiv+2,w
  6946  0269  00B2               	movwf	___fttol@f1+2
  6947  026A  3196  26F2  3181   	fcall	___fttol
  6948  026D  0020               	movlb	0	; select bank0
  6949  026E  0831               	movf	?___fttol+1,w
  6950  026F  0021               	movlb	1	; select bank1
  6951  0270  00AD               	movwf	((_voltage+1)^(0+128)+4)
  6952  0271  0020               	movlb	0	; select bank0
  6953  0272  0830               	movf	?___fttol,w
  6954  0273  0021               	movlb	1	; select bank1
  6955  0274  00AC               	movwf	(_voltage^(0+128)+4)
  6956                           
  6957                           ;main.c: 119: voltage[3]=(int16_t)(Vanalogs[3]/.54503);
  6958  0275  0022               	movlb	2	; select bank2
  6959  0276  083F               	movf	((_Vanalogs+1)^(0+256)+6),w
  6960  0277  00F9               	movwf	___awtoft@c+1
  6961  0278  083E               	movf	(_Vanalogs^(0+256)+6),w
  6962  0279  00F8               	movwf	___awtoft@c
  6963  027A  3193  2348  3181   	fcall	___awtoft
  6964  027D  0878               	movf	?___awtoft,w
  6965  027E  0020               	movlb	0	; select bank0
  6966  027F  00A3               	movwf	___ftdiv@f1
  6967  0280  0879               	movf	?___awtoft+1,w
  6968  0281  00A4               	movwf	___ftdiv@f1+1
  6969  0282  087A               	movf	?___awtoft+2,w
  6970  0283  00A5               	movwf	___ftdiv@f1+2
  6971  0284  3087               	movlw	135
  6972  0285  00A0               	movwf	___ftdiv@f2
  6973  0286  300B               	movlw	11
  6974  0287  00A1               	movwf	___ftdiv@f2+1
  6975  0288  303F               	movlw	63
  6976  0289  00A2               	movwf	___ftdiv@f2+2
  6977  028A  318A  224F  3181   	fcall	___ftdiv
  6978  028D  0020               	movlb	0	; select bank0
  6979  028E  0820               	movf	?___ftdiv,w
  6980  028F  00B0               	movwf	___fttol@f1
  6981  0290  0821               	movf	?___ftdiv+1,w
  6982  0291  00B1               	movwf	___fttol@f1+1
  6983  0292  0822               	movf	?___ftdiv+2,w
  6984  0293  00B2               	movwf	___fttol@f1+2
  6985  0294  3196  26F2  3181   	fcall	___fttol
  6986  0297  0020               	movlb	0	; select bank0
  6987  0298  0831               	movf	?___fttol+1,w
  6988  0299  0021               	movlb	1	; select bank1
  6989  029A  00AF               	movwf	((_voltage+1)^(0+128)+6)
  6990  029B  0020               	movlb	0	; select bank0
  6991  029C  0830               	movf	?___fttol,w
  6992  029D  0021               	movlb	1	; select bank1
  6993  029E  00AE               	movwf	(_voltage^(0+128)+6)
  6994                           
  6995                           ;main.c: 121: calculateCurrent0();
  6996  029F  3194  24FB  3181   	fcall	_calculateCurrent0
  6997                           
  6998                           ;main.c: 123: calculateCurrent1();
  6999  02A2  3195  2540  3181   	fcall	_calculateCurrent1
  7000                           
  7001                           ;main.c: 125: if(Imode0)
  7002  02A5  0021               	movlb	1	; select bank1
  7003  02A6  084D               	movf	_Imode0^(0+128),w
  7004  02A7  1903               	btfsc	3,2
  7005  02A8  2ACB               	goto	l4419
  7006                           
  7007                           ;main.c: 126: {
  7008                           ;main.c: 127: if(voltage[0]<MPPT0)
  7009  02A9  0829               	movf	(_voltage+1)^(0+128),w
  7010  02AA  3A80               	xorlw	128
  7011  02AB  0020               	movlb	0	; select bank0
  7012  02AC  00E8               	movwf	??_main
  7013  02AD  0023               	movlb	3	; select bank3
  7014  02AE  083E               	movf	(main@MPPT0+1)^(0+384),w
  7015  02AF  3A80               	xorlw	128
  7016  02B0  0020               	movlb	0	; select bank0
  7017  02B1  0268               	subwf	??_main,w
  7018  02B2  1D03               	skipz
  7019  02B3  2AB8               	goto	u5625
  7020  02B4  0023               	movlb	3	; select bank3
  7021  02B5  083D               	movf	main@MPPT0^(0+384),w
  7022  02B6  0021               	movlb	1	; select bank1
  7023  02B7  0228               	subwf	_voltage^(0+128),w
  7024  02B8                     u5625:	
  7025  02B8  1C03               	btfss	3,0
  7026  02B9  2ADC               	goto	L1
  7027                           
  7028                           ;main.c: 134: else if(voltage[0]>MPPT0)
  7029                           
  7030                           ;main.c: 132: }
  7031                           ;main.c: 133: }
  7032                           
  7033                           ;main.c: 130: {
  7034                           ;main.c: 131: dutyCycle6+=1;
  7035                           
  7036                           ;main.c: 128: {
  7037                           ;main.c: 129: if(dutyCycle6<1023)
  7038  02BA  0023               	movlb	3	; select bank3
  7039  02BB  083E               	movf	(main@MPPT0+1)^(0+384),w
  7040  02BC  3A80               	xorlw	128
  7041  02BD  0020               	movlb	0	; select bank0
  7042  02BE  00E8               	movwf	??_main
  7043  02BF  0021               	movlb	1	; select bank1
  7044  02C0  0829               	movf	(_voltage+1)^(0+128),w
  7045  02C1  3A80               	xorlw	128
  7046  02C2  0020               	movlb	0	; select bank0
  7047  02C3  0268               	subwf	??_main,w
  7048  02C4  1D03               	skipz
  7049  02C5  2AF8               	goto	u5685
  7050  02C6  0021               	movlb	1	; select bank1
  7051  02C7  0828               	movf	_voltage^(0+128),w
  7052  02C8  0023               	movlb	3	; select bank3
  7053  02C9  023D               	subwf	main@MPPT0^(0+384),w
  7054  02CA  2AF8               	goto	u5685
  7055  02CB                     l4419:	
  7056                           ;main.c: 142: }
  7057                           
  7058                           ;main.c: 139: }
  7059                           ;main.c: 140: }
  7060                           
  7061                           ;main.c: 137: {
  7062                           ;main.c: 138: dutyCycle6-=1;
  7063                           
  7064                           ;main.c: 135: {
  7065                           ;main.c: 136: if(dutyCycle6>0)
  7066                           
  7067                           
  7068                           ;main.c: 143: else
  7069                           ;main.c: 144: {
  7070                           ;main.c: 145: if(voltage[1]>(int16_t)Vref0)
  7071  02CB  0021               	movlb	1	; select bank1
  7072  02CC  084A               	movf	(_Vref0+1)^(0+128),w
  7073  02CD  3A80               	xorlw	128
  7074  02CE  0020               	movlb	0	; select bank0
  7075  02CF  00E8               	movwf	??_main
  7076  02D0  0021               	movlb	1	; select bank1
  7077  02D1  082B               	movf	((_voltage+1)^(0+128)+2),w
  7078  02D2  3A80               	xorlw	128
  7079  02D3  0020               	movlb	0	; select bank0
  7080  02D4  0268               	subwf	??_main,w
  7081  02D5  1D03               	skipz
  7082  02D6  2ADA               	goto	u5665
  7083  02D7  0021               	movlb	1	; select bank1
  7084  02D8  082A               	movf	(_voltage^(0+128)+2),w
  7085  02D9  0249               	subwf	_Vref0^(0+128),w
  7086  02DA                     u5665:	
  7087  02DA  1803               	skipnc
  7088  02DB  2AE9               	goto	l4425
  7089  02DC                     L1:	
  7090                           
  7091                           ;main.c: 146: {
  7092                           ;main.c: 147: if(dutyCycle6<1023) dutyCycle6+=1;
  7093  02DC  3003               	movlw	3
  7094  02DD  0023               	movlb	3	; select bank3
  7095  02DE  0240               	subwf	(main@dutyCycle6+1)^(0+384),w
  7096  02DF  30FF               	movlw	255
  7097  02E0  1903               	skipnz
  7098  02E1  023F               	subwf	main@dutyCycle6^(0+384),w
  7099  02E2  1803               	skipnc
  7100  02E3  2B03               	goto	l4431
  7101  02E4  3001               	movlw	1
  7102  02E5  07BF               	addwf	main@dutyCycle6^(0+384),f
  7103  02E6  3000               	movlw	0
  7104  02E7  3DC0               	addwfc	(main@dutyCycle6+1)^(0+384),f
  7105                           
  7106                           ;main.c: 148: }
  7107  02E8  2B03               	goto	l4431
  7108  02E9                     l4425:	
  7109                           
  7110                           ;main.c: 149: else if(voltage[1]<(int16_t)Vref0)
  7111  02E9  0021               	movlb	1	; select bank1
  7112  02EA  082B               	movf	((_voltage+1)^(0+128)+2),w
  7113  02EB  3A80               	xorlw	128
  7114  02EC  0020               	movlb	0	; select bank0
  7115  02ED  00E8               	movwf	??_main
  7116  02EE  0021               	movlb	1	; select bank1
  7117  02EF  084A               	movf	(_Vref0+1)^(0+128),w
  7118  02F0  3A80               	xorlw	128
  7119  02F1  0020               	movlb	0	; select bank0
  7120  02F2  0268               	subwf	??_main,w
  7121  02F3  1D03               	skipz
  7122  02F4  2AF8               	goto	u5685
  7123  02F5  0021               	movlb	1	; select bank1
  7124  02F6  0849               	movf	_Vref0^(0+128),w
  7125  02F7  022A               	subwf	(_voltage^(0+128)+2),w
  7126  02F8                     u5685:	
  7127  02F8  1803               	skipnc
  7128  02F9  2B03               	goto	l4431
  7129                           
  7130                           ;main.c: 150: {
  7131                           ;main.c: 151: if(dutyCycle6>0) dutyCycle6-=1;;
  7132  02FA  0023               	movlb	3	; select bank3
  7133  02FB  083F               	movf	main@dutyCycle6^(0+384),w
  7134  02FC  0440               	iorwf	(main@dutyCycle6+1)^(0+384),w
  7135  02FD  1903               	btfsc	3,2
  7136  02FE  2B03               	goto	l4431
  7137  02FF  3001               	movlw	1
  7138  0300  02BF               	subwf	main@dutyCycle6^(0+384),f
  7139  0301  3000               	movlw	0
  7140  0302  3BC0               	subwfb	(main@dutyCycle6+1)^(0+384),f
  7141  0303                     l4431:	
  7142                           ;main.c: 152: }
  7143                           
  7144                           
  7145                           ;main.c: 154: }
  7146                           ;main.c: 156: if(Imode1)
  7147  0303  0021               	movlb	1	; select bank1
  7148  0304  084C               	movf	_Imode1^(0+128),w
  7149  0305  1903               	btfsc	3,2
  7150  0306  2B19               	goto	l4443
  7151                           
  7152                           ;main.c: 157: {
  7153                           ;main.c: 158: if(voltage[2]<MPPT1)
  7154  0307  082D               	movf	((_voltage+1)^(0+128)+4),w
  7155  0308  3A80               	xorlw	128
  7156  0309  0020               	movlb	0	; select bank0
  7157  030A  00E8               	movwf	??_main
  7158  030B  0023               	movlb	3	; select bank3
  7159  030C  0826               	movf	(main@MPPT1+1)^(0+384),w
  7160  030D  3A80               	xorlw	128
  7161  030E  0020               	movlb	0	; select bank0
  7162  030F  0268               	subwf	??_main,w
  7163  0310  1D03               	skipz
  7164  0311  2B16               	goto	u5715
  7165  0312  0023               	movlb	3	; select bank3
  7166  0313  0825               	movf	main@MPPT1^(0+384),w
  7167  0314  0021               	movlb	1	; select bank1
  7168  0315  022C               	subwf	(_voltage^(0+128)+4),w
  7169  0316                     u5715:	
  7170  0316  1C03               	btfss	3,0
  7171  0317  2B2A               	goto	L2
  7172                           
  7173                           ;main.c: 163: }
  7174                           ;main.c: 164: }
  7175                           
  7176                           ;main.c: 161: {
  7177                           ;main.c: 162: dutyCycle7+=1;
  7178                           
  7179                           ;main.c: 159: {
  7180                           ;main.c: 160: if(dutyCycle7<1023)
  7181  0318  2B48               	goto	L3
  7182  0319                     l4443:	
  7183                           ;main.c: 168: }
  7184                           ;main.c: 169: }
  7185                           
  7186                           ;main.c: 166: {
  7187                           ;main.c: 167: dutyCycle7-=1;
  7188                           
  7189                           ;main.c: 165: else if(dutyCycle7>0)
  7190                           
  7191                           
  7192                           ;main.c: 170: else
  7193                           ;main.c: 171: {
  7194                           ;main.c: 172: if(voltage[3]>(int16_t)Vref1)
  7195  0319  0021               	movlb	1	; select bank1
  7196  031A  0841               	movf	(_Vref1+1)^(0+128),w
  7197  031B  3A80               	xorlw	128
  7198  031C  0020               	movlb	0	; select bank0
  7199  031D  00E8               	movwf	??_main
  7200  031E  0021               	movlb	1	; select bank1
  7201  031F  082F               	movf	((_voltage+1)^(0+128)+6),w
  7202  0320  3A80               	xorlw	128
  7203  0321  0020               	movlb	0	; select bank0
  7204  0322  0268               	subwf	??_main,w
  7205  0323  1D03               	skipz
  7206  0324  2B28               	goto	u5745
  7207  0325  0021               	movlb	1	; select bank1
  7208  0326  082E               	movf	(_voltage^(0+128)+6),w
  7209  0327  0240               	subwf	_Vref1^(0+128),w
  7210  0328                     u5745:	
  7211  0328  1803               	skipnc
  7212  0329  2B37               	goto	l4449
  7213  032A                     L2:	
  7214                           
  7215                           ;main.c: 173: {
  7216                           ;main.c: 174: if(dutyCycle7<1023) dutyCycle7+=1;
  7217  032A  3003               	movlw	3
  7218  032B  0023               	movlb	3	; select bank3
  7219  032C  0242               	subwf	(main@dutyCycle7+1)^(0+384),w
  7220  032D  30FF               	movlw	255
  7221  032E  1903               	skipnz
  7222  032F  0241               	subwf	main@dutyCycle7^(0+384),w
  7223  0330  1803               	skipnc
  7224  0331  2B51               	goto	l4455
  7225  0332  3001               	movlw	1
  7226  0333  07C1               	addwf	main@dutyCycle7^(0+384),f
  7227  0334  3000               	movlw	0
  7228  0335  3DC2               	addwfc	(main@dutyCycle7+1)^(0+384),f
  7229                           
  7230                           ;main.c: 175: }
  7231  0336  2B51               	goto	l4455
  7232  0337                     l4449:	
  7233                           
  7234                           ;main.c: 176: else if(voltage[3]<(int16_t)Vref1)
  7235  0337  0021               	movlb	1	; select bank1
  7236  0338  082F               	movf	((_voltage+1)^(0+128)+6),w
  7237  0339  3A80               	xorlw	128
  7238  033A  0020               	movlb	0	; select bank0
  7239  033B  00E8               	movwf	??_main
  7240  033C  0021               	movlb	1	; select bank1
  7241  033D  0841               	movf	(_Vref1+1)^(0+128),w
  7242  033E  3A80               	xorlw	128
  7243  033F  0020               	movlb	0	; select bank0
  7244  0340  0268               	subwf	??_main,w
  7245  0341  1D03               	skipz
  7246  0342  2B46               	goto	u5765
  7247  0343  0021               	movlb	1	; select bank1
  7248  0344  0840               	movf	_Vref1^(0+128),w
  7249  0345  022E               	subwf	(_voltage^(0+128)+6),w
  7250  0346                     u5765:	
  7251  0346  1803               	skipnc
  7252  0347  2B51               	goto	l4455
  7253  0348                     L3:	
  7254                           
  7255                           ;main.c: 177: {
  7256                           ;main.c: 178: if(dutyCycle7>0) dutyCycle7-=1;;
  7257  0348  0023               	movlb	3	; select bank3
  7258  0349  0841               	movf	main@dutyCycle7^(0+384),w
  7259  034A  0442               	iorwf	(main@dutyCycle7+1)^(0+384),w
  7260  034B  1903               	btfsc	3,2
  7261  034C  2B51               	goto	l4455
  7262  034D  3001               	movlw	1
  7263  034E  02C1               	subwf	main@dutyCycle7^(0+384),f
  7264  034F  3000               	movlw	0
  7265  0350  3BC2               	subwfb	(main@dutyCycle7+1)^(0+384),f
  7266  0351                     l4455:	
  7267                           ;main.c: 179: }
  7268                           
  7269                           
  7270                           ;main.c: 181: }
  7271                           ;main.c: 183: slowLoop+=1;
  7272  0351  3001               	movlw	1
  7273  0352  0020               	movlb	0	; select bank0
  7274  0353  00E8               	movwf	??_main
  7275  0354  0868               	movf	??_main,w
  7276  0355  0023               	movlb	3	; select bank3
  7277  0356  07B2               	addwf	main@slowLoop^(0+384),f
  7278                           
  7279                           ;main.c: 185: PWM1_LoadDutyValue(dutyCycle1);
  7280  0357  083B               	movf	(main@dutyCycle1+1)^(0+384),w
  7281  0358  00F1               	movwf	PWM1_LoadDutyValue@dutyCycle1+1
  7282  0359  083A               	movf	main@dutyCycle1^(0+384),w
  7283  035A  00F0               	movwf	PWM1_LoadDutyValue@dutyCycle1
  7284  035B  3192  2258  3181   	fcall	_PWM1_LoadDutyValue
  7285                           
  7286                           ;main.c: 186: PWM6_LoadDutyValue(dutyCycle6);
  7287  035E  0023               	movlb	3	; select bank3
  7288  035F  0840               	movf	(main@dutyCycle6+1)^(0+384),w
  7289  0360  00F1               	movwf	PWM6_LoadDutyValue@dutyCycle6+1
  7290  0361  083F               	movf	main@dutyCycle6^(0+384),w
  7291  0362  00F0               	movwf	PWM6_LoadDutyValue@dutyCycle6
  7292  0363  3192  226E  3181   	fcall	_PWM6_LoadDutyValue
  7293                           
  7294                           ;main.c: 187: PWM7_LoadDutyValue(dutyCycle7);
  7295  0366  0023               	movlb	3	; select bank3
  7296  0367  0842               	movf	(main@dutyCycle7+1)^(0+384),w
  7297  0368  00F1               	movwf	PWM7_LoadDutyValue@dutyCycle7+1
  7298  0369  0841               	movf	main@dutyCycle7^(0+384),w
  7299  036A  00F0               	movwf	PWM7_LoadDutyValue@dutyCycle7
  7300  036B  3192  2284  3181   	fcall	_PWM7_LoadDutyValue
  7301                           
  7302                           ;main.c: 189: menuButton = readButton();
  7303  036E  3197  2779  3181   	fcall	_readButton
  7304  0371  0020               	movlb	0	; select bank0
  7305  0372  00E8               	movwf	??_main
  7306  0373  0868               	movf	??_main,w
  7307  0374  0023               	movlb	3	; select bank3
  7308  0375  00B9               	movwf	main@menuButton^(0+384)
  7309                           
  7310                           ;main.c: 190: if(menuButton == 2) if(MPPT0>1550)MPPT0-=10;
  7311  0376  3002               	movlw	2
  7312  0377  0639               	xorwf	main@menuButton^(0+384),w
  7313  0378  1D03               	btfss	3,2
  7314  0379  2B8C               	goto	l4469
  7315  037A  083E               	movf	(main@MPPT0+1)^(0+384),w
  7316  037B  3A80               	xorlw	128
  7317  037C  0020               	movlb	0	; select bank0
  7318  037D  00E8               	movwf	??_main
  7319  037E  3086               	movlw	134
  7320  037F  0268               	subwf	??_main,w
  7321  0380  1D03               	skipz
  7322  0381  2B85               	goto	u5795
  7323  0382  300F               	movlw	15
  7324  0383  0023               	movlb	3	; select bank3
  7325  0384  023D               	subwf	main@MPPT0^(0+384),w
  7326  0385                     u5795:	
  7327  0385  1C03               	skipc
  7328  0386  2B8C               	goto	l4469
  7329  0387  30F6               	movlw	246
  7330  0388  0023               	movlb	3	; select bank3
  7331  0389  07BD               	addwf	main@MPPT0^(0+384),f
  7332  038A  30FF               	movlw	255
  7333  038B  3DBE               	addwfc	(main@MPPT0+1)^(0+384),f
  7334  038C                     l4469:	
  7335                           
  7336                           ;main.c: 191: if(menuButton == 3)if(MPPT0<2200)MPPT0+=10;
  7337  038C  3003               	movlw	3
  7338  038D  0023               	movlb	3	; select bank3
  7339  038E  0639               	xorwf	main@menuButton^(0+384),w
  7340  038F  1D03               	btfss	3,2
  7341  0390  2BA3               	goto	l4475
  7342  0391  083E               	movf	(main@MPPT0+1)^(0+384),w
  7343  0392  3A80               	xorlw	128
  7344  0393  0020               	movlb	0	; select bank0
  7345  0394  00E8               	movwf	??_main
  7346  0395  3088               	movlw	136
  7347  0396  0268               	subwf	??_main,w
  7348  0397  1D03               	skipz
  7349  0398  2B9C               	goto	u5815
  7350  0399  3098               	movlw	152
  7351  039A  0023               	movlb	3	; select bank3
  7352  039B  023D               	subwf	main@MPPT0^(0+384),w
  7353  039C                     u5815:	
  7354  039C  1803               	skipnc
  7355  039D  2BA3               	goto	l4475
  7356  039E  300A               	movlw	10
  7357  039F  0023               	movlb	3	; select bank3
  7358  03A0  07BD               	addwf	main@MPPT0^(0+384),f
  7359  03A1  3000               	movlw	0
  7360  03A2  3DBE               	addwfc	(main@MPPT0+1)^(0+384),f
  7361  03A3                     l4475:	
  7362                           
  7363                           ;main.c: 192: if(menuButton == 1)LCDInit();
  7364  03A3  0023               	movlb	3	; select bank3
  7365  03A4  0339               	decf	main@menuButton^(0+384),w
  7366  03A5  1D03               	btfss	3,2
  7367  03A6  2BAA               	goto	l4479
  7368  03A7  3194  244A  3181   	fcall	_LCDInit
  7369  03AA                     l4479:	
  7370                           
  7371                           ;main.c: 196: if(slowLoop>200)
  7372  03AA  30C9               	movlw	201
  7373  03AB  0023               	movlb	3	; select bank3
  7374  03AC  0232               	subwf	main@slowLoop^(0+384),w
  7375  03AD  1C03               	skipc
  7376  03AE  2992               	goto	l4367
  7377                           
  7378                           ;main.c: 197: {
  7379                           ;main.c: 199: IOutTotal=current[1]+current[3];
  7380  03AF  3006               	movlw	6
  7381  03B0  3EA0               	addlw	(low (_current| 0))& (0+255)
  7382  03B1  0086               	movwf	6
  7383  03B2  0187               	clrf	7
  7384  03B3  3002               	movlw	2
  7385  03B4  3EA0               	addlw	(low (_current| 0))& (0+255)
  7386  03B5  0084               	movwf	4
  7387  03B6  0185               	clrf	5
  7388  03B7  3F40               	moviw [0]fsr1
  7389  03B8  0700               	addwf	0,w
  7390  03B9  00B4               	movwf	main@IOutTotal^(0+384)
  7391  03BA  3101               	addfsr 0,1
  7392  03BB  3F41               	moviw [1]fsr1
  7393  03BC  3D00               	addwfc	0,w
  7394  03BD  00B5               	movwf	(main@IOutTotal^(0+384)+1)
  7395                           
  7396                           ;main.c: 201: if(IOutTotal>20)
  7397  03BE  0835               	movf	(main@IOutTotal+1)^(0+384),w
  7398  03BF  3A80               	xorlw	128
  7399  03C0  0020               	movlb	0	; select bank0
  7400  03C1  00E8               	movwf	??_main
  7401  03C2  3080               	movlw	128
  7402  03C3  0268               	subwf	??_main,w
  7403  03C4  1D03               	skipz
  7404  03C5  2BC9               	goto	u5845
  7405  03C6  3015               	movlw	21
  7406  03C7  0023               	movlb	3	; select bank3
  7407  03C8  0234               	subwf	main@IOutTotal^(0+384),w
  7408  03C9                     u5845:	
  7409  03C9  1C03               	skipc
  7410  03CA  2BF0               	goto	l4491
  7411                           
  7412                           ;main.c: 202: {
  7413                           ;main.c: 203: if((uint16_t)IOutTotal/2+10>dutyCycle1)dutyCycle1+=1;else dutyCycle1-=1;
  7414  03CB  0023               	movlb	3	; select bank3
  7415  03CC  0835               	movf	(main@IOutTotal+1)^(0+384),w
  7416  03CD  0020               	movlb	0	; select bank0
  7417  03CE  00E9               	movwf	??_main+1
  7418  03CF  0023               	movlb	3	; select bank3
  7419  03D0  0834               	movf	main@IOutTotal^(0+384),w
  7420  03D1  0020               	movlb	0	; select bank0
  7421  03D2  00E8               	movwf	??_main
  7422  03D3  36E9               	lsrf	??_main+1,f
  7423  03D4  0CE8               	rrf	??_main,f
  7424  03D5  0868               	movf	??_main,w
  7425  03D6  3E0A               	addlw	10
  7426  03D7  00EA               	movwf	??_main+2
  7427  03D8  3000               	movlw	0
  7428  03D9  3D69               	addwfc	??_main+1,w
  7429  03DA  00EB               	movwf	??_main+3
  7430  03DB  086B               	movf	??_main+3,w
  7431  03DC  0023               	movlb	3	; select bank3
  7432  03DD  023B               	subwf	(main@dutyCycle1+1)^(0+384),w
  7433  03DE  1D03               	skipz
  7434  03DF  2BE4               	goto	u5855
  7435  03E0  0020               	movlb	0	; select bank0
  7436  03E1  086A               	movf	??_main+2,w
  7437  03E2  0023               	movlb	3	; select bank3
  7438  03E3  023A               	subwf	main@dutyCycle1^(0+384),w
  7439  03E4                     u5855:	
  7440  03E4  1803               	skipnc
  7441  03E5  2BEB               	goto	l4489
  7442  03E6  3001               	movlw	1
  7443  03E7  07BA               	addwf	main@dutyCycle1^(0+384),f
  7444  03E8  3000               	movlw	0
  7445  03E9  3DBB               	addwfc	(main@dutyCycle1+1)^(0+384),f
  7446  03EA  2BF3               	goto	l4493
  7447  03EB                     l4489:	
  7448  03EB  3001               	movlw	1
  7449  03EC  02BA               	subwf	main@dutyCycle1^(0+384),f
  7450  03ED  3000               	movlw	0
  7451  03EE  3BBB               	subwfb	(main@dutyCycle1+1)^(0+384),f
  7452                           
  7453                           ;main.c: 207: }
  7454  03EF  2BF3               	goto	l4493
  7455  03F0                     l4491:	
  7456                           
  7457                           ;main.c: 208: else
  7458                           ;main.c: 209: {
  7459                           ;main.c: 210: dutyCycle1=0;
  7460  03F0  0023               	movlb	3	; select bank3
  7461  03F1  01BA               	clrf	main@dutyCycle1^(0+384)
  7462  03F2  01BB               	clrf	(main@dutyCycle1+1)^(0+384)
  7463  03F3                     l4493:	
  7464                           
  7465                           ;main.c: 211: }
  7466                           ;main.c: 212: if(!(RB2))
  7467  03F3  0020               	movlb	0	; select bank0
  7468  03F4  190D               	btfsc	13,2	;volatile
  7469  03F5  2C01               	goto	l4497
  7470                           
  7471                           ;main.c: 213: {
  7472                           ;main.c: 214: dutyCycle1=55;
  7473  03F6  3037               	movlw	55
  7474  03F7  0023               	movlb	3	; select bank3
  7475  03F8  00BA               	movwf	main@dutyCycle1^(0+384)
  7476  03F9  3000               	movlw	0
  7477  03FA  00BB               	movwf	(main@dutyCycle1^(0+384)+1)
  7478                           
  7479                           ;main.c: 215: battery_state0=CHARGE;
  7480  03FB  3004               	movlw	4
  7481  03FC  0020               	movlb	0	; select bank0
  7482  03FD  00E8               	movwf	??_main
  7483  03FE  0868               	movf	??_main,w
  7484  03FF  0021               	movlb	1	; select bank1
  7485  0400  00CB               	movwf	_battery_state0^(0+128)
  7486  0401                     l4497:	
  7487                           
  7488                           ;main.c: 216: }
  7489                           ;main.c: 218: displayRefresh+=1;
  7490  0401  3001               	movlw	1
  7491  0402  0020               	movlb	0	; select bank0
  7492  0403  00E8               	movwf	??_main
  7493  0404  0868               	movf	??_main,w
  7494  0405  0023               	movlb	3	; select bank3
  7495  0406  07B3               	addwf	main@displayRefresh^(0+384),f
  7496                           
  7497                           ;main.c: 219: if(displayRefresh>80)
  7498  0407  3051               	movlw	81
  7499  0408  0233               	subwf	main@displayRefresh^(0+384),w
  7500  0409  1C03               	skipc
  7501  040A  2C24               	goto	l4507
  7502                           
  7503                           ;main.c: 220: {
  7504                           ;main.c: 221: LCDClear();
  7505  040B  3193  238D  3181   	fcall	_LCDClear
  7506                           
  7507                           ;main.c: 222: displayRefresh=0;
  7508  040E  0023               	movlb	3	; select bank3
  7509  040F  01B3               	clrf	main@displayRefresh^(0+384)
  7510                           
  7511                           ;main.c: 223: batteryTemp=tempCalc(ADCRead(9));
  7512  0410  3009               	movlw	9
  7513  0411  3192  2243  3181   	fcall	_ADCRead
  7514  0414  0871               	movf	?_ADCRead+1,w
  7515  0415  0020               	movlb	0	; select bank0
  7516  0416  00DE               	movwf	tempCalc@analogValue+1
  7517  0417  0870               	movf	?_ADCRead,w
  7518  0418  00DD               	movwf	tempCalc@analogValue
  7519  0419  318E  26E3  3181   	fcall	_tempCalc
  7520  041C  0020               	movlb	0	; select bank0
  7521  041D  085E               	movf	?_tempCalc+1,w
  7522  041E  0023               	movlb	3	; select bank3
  7523  041F  00A4               	movwf	(main@batteryTemp+1)^(0+384)
  7524  0420  0020               	movlb	0	; select bank0
  7525  0421  085D               	movf	?_tempCalc,w
  7526  0422  0023               	movlb	3	; select bank3
  7527  0423  00A3               	movwf	main@batteryTemp^(0+384)
  7528  0424                     l4507:	
  7529                           
  7530                           ;main.c: 224: }
  7531                           ;main.c: 225: Battery_State_Machine();
  7532  0424  3189  21B3  3181   	fcall	_Battery_State_Machine
  7533                           
  7534                           ;main.c: 226: efficiency=(float)voltage[1]/100*current[1]/10;
  7535  0427  0021               	movlb	1	; select bank1
  7536  0428  0823               	movf	((_current+1)^(0+128)+2),w
  7537  0429  00F9               	movwf	___awtoft@c+1
  7538  042A  0822               	movf	(_current^(0+128)+2),w
  7539  042B  00F8               	movwf	___awtoft@c
  7540  042C  3193  2348  3181   	fcall	___awtoft
  7541  042F  0878               	movf	?___awtoft,w
  7542  0430  0020               	movlb	0	; select bank0
  7543  0431  00B0               	movwf	___ftmul@f1
  7544  0432  0879               	movf	?___awtoft+1,w
  7545  0433  00B1               	movwf	___ftmul@f1+1
  7546  0434  087A               	movf	?___awtoft+2,w
  7547  0435  00B2               	movwf	___ftmul@f1+2
  7548  0436  3000               	movlw	0
  7549  0437  00A0               	movwf	___ftdiv@f2
  7550  0438  30C8               	movlw	200
  7551  0439  00A1               	movwf	___ftdiv@f2+1
  7552  043A  3042               	movlw	66
  7553  043B  00A2               	movwf	___ftdiv@f2+2
  7554  043C  0021               	movlb	1	; select bank1
  7555  043D  082B               	movf	((_voltage+1)^(0+128)+2),w
  7556  043E  00F9               	movwf	___awtoft@c+1
  7557  043F  082A               	movf	(_voltage^(0+128)+2),w
  7558  0440  00F8               	movwf	___awtoft@c
  7559  0441  3193  2348  3181   	fcall	___awtoft
  7560  0444  0878               	movf	?___awtoft,w
  7561  0445  0020               	movlb	0	; select bank0
  7562  0446  00A3               	movwf	___ftdiv@f1
  7563  0447  0879               	movf	?___awtoft+1,w
  7564  0448  00A4               	movwf	___ftdiv@f1+1
  7565  0449  087A               	movf	?___awtoft+2,w
  7566  044A  00A5               	movwf	___ftdiv@f1+2
  7567  044B  318A  224F  3181   	fcall	___ftdiv
  7568  044E  0020               	movlb	0	; select bank0
  7569  044F  0820               	movf	?___ftdiv,w
  7570  0450  00B3               	movwf	___ftmul@f2
  7571  0451  0821               	movf	?___ftdiv+1,w
  7572  0452  00B4               	movwf	___ftmul@f2+1
  7573  0453  0822               	movf	?___ftdiv+2,w
  7574  0454  00B5               	movwf	___ftmul@f2+2
  7575  0455  318B  23A8  3181   	fcall	___ftmul
  7576  0458  0020               	movlb	0	; select bank0
  7577  0459  0830               	movf	?___ftmul,w
  7578  045A  0023               	movlb	3	; select bank3
  7579  045B  00AB               	movwf	_main$1306^(0+384)
  7580  045C  0020               	movlb	0	; select bank0
  7581  045D  0831               	movf	?___ftmul+1,w
  7582  045E  0023               	movlb	3	; select bank3
  7583  045F  00AC               	movwf	(_main$1306+1)^(0+384)
  7584  0460  0020               	movlb	0	; select bank0
  7585  0461  0832               	movf	?___ftmul+2,w
  7586  0462  0023               	movlb	3	; select bank3
  7587  0463  00AD               	movwf	(_main$1306+2)^(0+384)
  7588                           
  7589                           ;main.c: 226: efficiency=(float)voltage[1]/100*current[1]/10;
  7590  0464  3000               	movlw	0
  7591  0465  0020               	movlb	0	; select bank0
  7592  0466  00A0               	movwf	___ftdiv@f2
  7593  0467  3020               	movlw	32
  7594  0468  00A1               	movwf	___ftdiv@f2+1
  7595  0469  3041               	movlw	65
  7596  046A  00A2               	movwf	___ftdiv@f2+2
  7597  046B  0023               	movlb	3	; select bank3
  7598  046C  082B               	movf	_main$1306^(0+384),w
  7599  046D  0020               	movlb	0	; select bank0
  7600  046E  00A3               	movwf	___ftdiv@f1
  7601  046F  0023               	movlb	3	; select bank3
  7602  0470  082C               	movf	(_main$1306+1)^(0+384),w
  7603  0471  0020               	movlb	0	; select bank0
  7604  0472  00A4               	movwf	___ftdiv@f1+1
  7605  0473  0023               	movlb	3	; select bank3
  7606  0474  082D               	movf	(_main$1306+2)^(0+384),w
  7607  0475  0020               	movlb	0	; select bank0
  7608  0476  00A5               	movwf	___ftdiv@f1+2
  7609  0477  318A  224F  3181   	fcall	___ftdiv
  7610  047A  0020               	movlb	0	; select bank0
  7611  047B  0820               	movf	?___ftdiv,w
  7612  047C  0023               	movlb	3	; select bank3
  7613  047D  00B6               	movwf	main@efficiency^(0+384)
  7614  047E  0020               	movlb	0	; select bank0
  7615  047F  0821               	movf	?___ftdiv+1,w
  7616  0480  0023               	movlb	3	; select bank3
  7617  0481  00B7               	movwf	(main@efficiency+1)^(0+384)
  7618  0482  0020               	movlb	0	; select bank0
  7619  0483  0822               	movf	?___ftdiv+2,w
  7620  0484  0023               	movlb	3	; select bank3
  7621  0485  00B8               	movwf	(main@efficiency+2)^(0+384)
  7622                           
  7623                           ;main.c: 227: efficiency/=(float)voltage[0]/100*current[0]/10;
  7624  0486  0021               	movlb	1	; select bank1
  7625  0487  0829               	movf	(_voltage+1)^(0+128),w
  7626  0488  00F9               	movwf	___awtoft@c+1
  7627  0489  0828               	movf	_voltage^(0+128),w
  7628  048A  00F8               	movwf	___awtoft@c
  7629  048B  3193  2348  3181   	fcall	___awtoft
  7630  048E  0878               	movf	?___awtoft,w
  7631  048F  0020               	movlb	0	; select bank0
  7632  0490  00A3               	movwf	___ftdiv@f1
  7633  0491  0879               	movf	?___awtoft+1,w
  7634  0492  00A4               	movwf	___ftdiv@f1+1
  7635  0493  087A               	movf	?___awtoft+2,w
  7636  0494  00A5               	movwf	___ftdiv@f1+2
  7637  0495  3000               	movlw	0
  7638  0496  00A0               	movwf	___ftdiv@f2
  7639  0497  30C8               	movlw	200
  7640  0498  00A1               	movwf	___ftdiv@f2+1
  7641  0499  3042               	movlw	66
  7642  049A  00A2               	movwf	___ftdiv@f2+2
  7643  049B  318A  224F  3181   	fcall	___ftdiv
  7644  049E  0020               	movlb	0	; select bank0
  7645  049F  0820               	movf	?___ftdiv,w
  7646  04A0  00B3               	movwf	___ftmul@f2
  7647  04A1  0821               	movf	?___ftdiv+1,w
  7648  04A2  00B4               	movwf	___ftmul@f2+1
  7649  04A3  0822               	movf	?___ftdiv+2,w
  7650  04A4  00B5               	movwf	___ftmul@f2+2
  7651  04A5  0021               	movlb	1	; select bank1
  7652  04A6  0821               	movf	(_current+1)^(0+128),w
  7653  04A7  00F9               	movwf	___awtoft@c+1
  7654  04A8  0820               	movf	_current^(0+128),w
  7655  04A9  00F8               	movwf	___awtoft@c
  7656  04AA  3193  2348  3181   	fcall	___awtoft
  7657  04AD  0878               	movf	?___awtoft,w
  7658  04AE  0020               	movlb	0	; select bank0
  7659  04AF  00B0               	movwf	___ftmul@f1
  7660  04B0  0879               	movf	?___awtoft+1,w
  7661  04B1  00B1               	movwf	___ftmul@f1+1
  7662  04B2  087A               	movf	?___awtoft+2,w
  7663  04B3  00B2               	movwf	___ftmul@f1+2
  7664  04B4  318B  23A8  3181   	fcall	___ftmul
  7665  04B7  0020               	movlb	0	; select bank0
  7666  04B8  0830               	movf	?___ftmul,w
  7667  04B9  0023               	movlb	3	; select bank3
  7668  04BA  00AB               	movwf	_main$1306^(0+384)
  7669  04BB  0020               	movlb	0	; select bank0
  7670  04BC  0831               	movf	?___ftmul+1,w
  7671  04BD  0023               	movlb	3	; select bank3
  7672  04BE  00AC               	movwf	(_main$1306+1)^(0+384)
  7673  04BF  0020               	movlb	0	; select bank0
  7674  04C0  0832               	movf	?___ftmul+2,w
  7675  04C1  0023               	movlb	3	; select bank3
  7676  04C2  00AD               	movwf	(_main$1306+2)^(0+384)
  7677                           
  7678                           ;main.c: 227: efficiency/=(float)voltage[0]/100*current[0]/10;
  7679  04C3  082B               	movf	_main$1306^(0+384),w
  7680  04C4  0020               	movlb	0	; select bank0
  7681  04C5  00A3               	movwf	___ftdiv@f1
  7682  04C6  0023               	movlb	3	; select bank3
  7683  04C7  082C               	movf	(_main$1306+1)^(0+384),w
  7684  04C8  0020               	movlb	0	; select bank0
  7685  04C9  00A4               	movwf	___ftdiv@f1+1
  7686  04CA  0023               	movlb	3	; select bank3
  7687  04CB  082D               	movf	(_main$1306+2)^(0+384),w
  7688  04CC  0020               	movlb	0	; select bank0
  7689  04CD  00A5               	movwf	___ftdiv@f1+2
  7690  04CE  3000               	movlw	0
  7691  04CF  00A0               	movwf	___ftdiv@f2
  7692  04D0  3020               	movlw	32
  7693  04D1  00A1               	movwf	___ftdiv@f2+1
  7694  04D2  3041               	movlw	65
  7695  04D3  00A2               	movwf	___ftdiv@f2+2
  7696  04D4  318A  224F  3181   	fcall	___ftdiv
  7697  04D7  0020               	movlb	0	; select bank0
  7698  04D8  0820               	movf	?___ftdiv,w
  7699  04D9  0023               	movlb	3	; select bank3
  7700  04DA  00A0               	movwf	_main$1313^(0+384)
  7701  04DB  0020               	movlb	0	; select bank0
  7702  04DC  0821               	movf	?___ftdiv+1,w
  7703  04DD  0023               	movlb	3	; select bank3
  7704  04DE  00A1               	movwf	(_main$1313+1)^(0+384)
  7705  04DF  0020               	movlb	0	; select bank0
  7706  04E0  0822               	movf	?___ftdiv+2,w
  7707  04E1  0023               	movlb	3	; select bank3
  7708  04E2  00A2               	movwf	(_main$1313+2)^(0+384)
  7709                           
  7710                           ;main.c: 227: efficiency/=(float)voltage[0]/100*current[0]/10;
  7711  04E3  0820               	movf	_main$1313^(0+384),w
  7712  04E4  0020               	movlb	0	; select bank0
  7713  04E5  00A0               	movwf	___ftdiv@f2
  7714  04E6  0023               	movlb	3	; select bank3
  7715  04E7  0821               	movf	(_main$1313+1)^(0+384),w
  7716  04E8  0020               	movlb	0	; select bank0
  7717  04E9  00A1               	movwf	___ftdiv@f2+1
  7718  04EA  0023               	movlb	3	; select bank3
  7719  04EB  0822               	movf	(_main$1313+2)^(0+384),w
  7720  04EC  0020               	movlb	0	; select bank0
  7721  04ED  00A2               	movwf	___ftdiv@f2+2
  7722  04EE  0023               	movlb	3	; select bank3
  7723  04EF  0836               	movf	main@efficiency^(0+384),w
  7724  04F0  0020               	movlb	0	; select bank0
  7725  04F1  00A3               	movwf	___ftdiv@f1
  7726  04F2  0023               	movlb	3	; select bank3
  7727  04F3  0837               	movf	(main@efficiency+1)^(0+384),w
  7728  04F4  0020               	movlb	0	; select bank0
  7729  04F5  00A4               	movwf	___ftdiv@f1+1
  7730  04F6  0023               	movlb	3	; select bank3
  7731  04F7  0838               	movf	(main@efficiency+2)^(0+384),w
  7732  04F8  0020               	movlb	0	; select bank0
  7733  04F9  00A5               	movwf	___ftdiv@f1+2
  7734  04FA  318A  224F  3181   	fcall	___ftdiv
  7735  04FD  0020               	movlb	0	; select bank0
  7736  04FE  0820               	movf	?___ftdiv,w
  7737  04FF  0023               	movlb	3	; select bank3
  7738  0500  00B6               	movwf	main@efficiency^(0+384)
  7739  0501  0020               	movlb	0	; select bank0
  7740  0502  0821               	movf	?___ftdiv+1,w
  7741  0503  0023               	movlb	3	; select bank3
  7742  0504  00B7               	movwf	(main@efficiency+1)^(0+384)
  7743  0505  0020               	movlb	0	; select bank0
  7744  0506  0822               	movf	?___ftdiv+2,w
  7745  0507  0023               	movlb	3	; select bank3
  7746  0508  00B8               	movwf	(main@efficiency+2)^(0+384)
  7747                           
  7748                           ;main.c: 228: efficiency*=100;
  7749  0509  3000               	movlw	0
  7750  050A  0020               	movlb	0	; select bank0
  7751  050B  00B0               	movwf	___ftmul@f1
  7752  050C  30C8               	movlw	200
  7753  050D  00B1               	movwf	___ftmul@f1+1
  7754  050E  3042               	movlw	66
  7755  050F  00B2               	movwf	___ftmul@f1+2
  7756  0510  0023               	movlb	3	; select bank3
  7757  0511  0836               	movf	main@efficiency^(0+384),w
  7758  0512  0020               	movlb	0	; select bank0
  7759  0513  00B3               	movwf	___ftmul@f2
  7760  0514  0023               	movlb	3	; select bank3
  7761  0515  0837               	movf	(main@efficiency+1)^(0+384),w
  7762  0516  0020               	movlb	0	; select bank0
  7763  0517  00B4               	movwf	___ftmul@f2+1
  7764  0518  0023               	movlb	3	; select bank3
  7765  0519  0838               	movf	(main@efficiency+2)^(0+384),w
  7766  051A  0020               	movlb	0	; select bank0
  7767  051B  00B5               	movwf	___ftmul@f2+2
  7768  051C  318B  23A8  3181   	fcall	___ftmul
  7769  051F  0020               	movlb	0	; select bank0
  7770  0520  0830               	movf	?___ftmul,w
  7771  0521  0023               	movlb	3	; select bank3
  7772  0522  00B6               	movwf	main@efficiency^(0+384)
  7773  0523  0020               	movlb	0	; select bank0
  7774  0524  0831               	movf	?___ftmul+1,w
  7775  0525  0023               	movlb	3	; select bank3
  7776  0526  00B7               	movwf	(main@efficiency+1)^(0+384)
  7777  0527  0020               	movlb	0	; select bank0
  7778  0528  0832               	movf	?___ftmul+2,w
  7779  0529  0023               	movlb	3	; select bank3
  7780  052A  00B8               	movwf	(main@efficiency+2)^(0+384)
  7781                           
  7782                           ;main.c: 245: { gotoXY(0,0); LCDWriteInt(faultCount,5, 0, 0);};
  7783  052B  01F5               	clrf	gotoXY@y
  7784  052C  3000               	movlw	0
  7785  052D  3192  2230  3181   	fcall	_gotoXY
  7786  0530  0023               	movlb	3	; select bank3
  7787  0531  0828               	movf	(main@faultCount+1)^(0+384),w
  7788  0532  0020               	movlb	0	; select bank0
  7789  0533  00BF               	movwf	LCDWriteInt@value+1
  7790  0534  0023               	movlb	3	; select bank3
  7791  0535  0827               	movf	main@faultCount^(0+384),w
  7792  0536  0020               	movlb	0	; select bank0
  7793  0537  00BE               	movwf	LCDWriteInt@value
  7794  0538  3005               	movlw	5
  7795  0539  00E8               	movwf	??_main
  7796  053A  0868               	movf	??_main,w
  7797  053B  00C0               	movwf	LCDWriteInt@fieldLength
  7798  053C  01C1               	clrf	LCDWriteInt@numPlaces
  7799  053D  01C2               	clrf	LCDWriteInt@sign
  7800  053E  318C  245C  3181   	fcall	_LCDWriteInt
  7801                           
  7802                           ;main.c: 246: { gotoXY(24,0); LCDWriteInt(faultNotReset,5, 0, 0);};
  7803  0541  01F5               	clrf	gotoXY@y
  7804  0542  3018               	movlw	24
  7805  0543  3192  2230  3181   	fcall	_gotoXY
  7806  0546  0023               	movlb	3	; select bank3
  7807  0547  082A               	movf	(main@faultNotReset+1)^(0+384),w
  7808  0548  0020               	movlb	0	; select bank0
  7809  0549  00BF               	movwf	LCDWriteInt@value+1
  7810  054A  0023               	movlb	3	; select bank3
  7811  054B  0829               	movf	main@faultNotReset^(0+384),w
  7812  054C  0020               	movlb	0	; select bank0
  7813  054D  00BE               	movwf	LCDWriteInt@value
  7814  054E  3005               	movlw	5
  7815  054F  00E8               	movwf	??_main
  7816  0550  0868               	movf	??_main,w
  7817  0551  00C0               	movwf	LCDWriteInt@fieldLength
  7818  0552  01C1               	clrf	LCDWriteInt@numPlaces
  7819  0553  01C2               	clrf	LCDWriteInt@sign
  7820  0554  318C  245C  3181   	fcall	_LCDWriteInt
  7821                           
  7822                           ;main.c: 247: { gotoXY(48,0); LCDWriteInt(V0HoldMode,2, 0, 0);};
  7823  0557  01F5               	clrf	gotoXY@y
  7824  0558  3030               	movlw	48
  7825  0559  3192  2230  3181   	fcall	_gotoXY
  7826  055C  0021               	movlb	1	; select bank1
  7827  055D  0846               	movf	_V0HoldMode^(0+128),w
  7828  055E  0020               	movlb	0	; select bank0
  7829  055F  00BE               	movwf	LCDWriteInt@value
  7830  0560  01BF               	clrf	LCDWriteInt@value+1
  7831  0561  1BBE               	btfsc	LCDWriteInt@value,7
  7832  0562  03BF               	decf	LCDWriteInt@value+1,f
  7833  0563  3002               	movlw	2
  7834  0564  00E8               	movwf	??_main
  7835  0565  0868               	movf	??_main,w
  7836  0566  00C0               	movwf	LCDWriteInt@fieldLength
  7837  0567  01C1               	clrf	LCDWriteInt@numPlaces
  7838  0568  01C2               	clrf	LCDWriteInt@sign
  7839  0569  318C  245C  3181   	fcall	_LCDWriteInt
  7840                           
  7841                           ;main.c: 248: LCDWriteCharacter(' ');
  7842  056C  3020               	movlw	32
  7843  056D  3195  25D6  3181   	fcall	_LCDWriteCharacter
  7844                           
  7845                           ;main.c: 250: { gotoXY(64,0); LCDWriteInt((int16_t)efficiency,3, 0, 0);};
  7846  0570  01F5               	clrf	gotoXY@y
  7847  0571  3040               	movlw	64
  7848  0572  3192  2230  3181   	fcall	_gotoXY
  7849  0575  0023               	movlb	3	; select bank3
  7850  0576  0836               	movf	main@efficiency^(0+384),w
  7851  0577  0020               	movlb	0	; select bank0
  7852  0578  00B0               	movwf	___fttol@f1
  7853  0579  0023               	movlb	3	; select bank3
  7854  057A  0837               	movf	(main@efficiency+1)^(0+384),w
  7855  057B  0020               	movlb	0	; select bank0
  7856  057C  00B1               	movwf	___fttol@f1+1
  7857  057D  0023               	movlb	3	; select bank3
  7858  057E  0838               	movf	(main@efficiency+2)^(0+384),w
  7859  057F  0020               	movlb	0	; select bank0
  7860  0580  00B2               	movwf	___fttol@f1+2
  7861  0581  3196  26F2  3181   	fcall	___fttol
  7862  0584  0020               	movlb	0	; select bank0
  7863  0585  0831               	movf	?___fttol+1,w
  7864  0586  00BF               	movwf	LCDWriteInt@value+1
  7865  0587  0830               	movf	?___fttol,w
  7866  0588  00BE               	movwf	LCDWriteInt@value
  7867  0589  3003               	movlw	3
  7868  058A  00E8               	movwf	??_main
  7869  058B  0868               	movf	??_main,w
  7870  058C  00C0               	movwf	LCDWriteInt@fieldLength
  7871  058D  01C1               	clrf	LCDWriteInt@numPlaces
  7872  058E  01C2               	clrf	LCDWriteInt@sign
  7873  058F  318C  245C  3181   	fcall	_LCDWriteInt
  7874                           
  7875                           ;main.c: 251: LCDWriteCharacter(' ');
  7876  0592  3020               	movlw	32
  7877  0593  3195  25D6  3181   	fcall	_LCDWriteCharacter
  7878                           
  7879                           ;main.c: 255: { gotoXY(0,1); LCDWriteInt(voltage[0],4, 2, 0);};
  7880  0596  01F5               	clrf	gotoXY@y
  7881  0597  0AF5               	incf	gotoXY@y,f
  7882  0598  3000               	movlw	0
  7883  0599  3192  2230  3181   	fcall	_gotoXY
  7884  059C  0021               	movlb	1	; select bank1
  7885  059D  0829               	movf	(_voltage+1)^(0+128),w
  7886  059E  0020               	movlb	0	; select bank0
  7887  059F  00BF               	movwf	LCDWriteInt@value+1
  7888  05A0  0021               	movlb	1	; select bank1
  7889  05A1  0828               	movf	_voltage^(0+128),w
  7890  05A2  0020               	movlb	0	; select bank0
  7891  05A3  00BE               	movwf	LCDWriteInt@value
  7892  05A4  3004               	movlw	4
  7893  05A5  00E8               	movwf	??_main
  7894  05A6  0868               	movf	??_main,w
  7895  05A7  00C0               	movwf	LCDWriteInt@fieldLength
  7896  05A8  3002               	movlw	2
  7897  05A9  00E9               	movwf	??_main+1
  7898  05AA  0869               	movf	??_main+1,w
  7899  05AB  00C1               	movwf	LCDWriteInt@numPlaces
  7900  05AC  01C2               	clrf	LCDWriteInt@sign
  7901  05AD  318C  245C  3181   	fcall	_LCDWriteInt
  7902                           
  7903                           ;main.c: 256: LCDWriteCharacter('V');
  7904  05B0  3056               	movlw	86
  7905  05B1  3195  25D6  3181   	fcall	_LCDWriteCharacter
  7906                           
  7907                           ;main.c: 257: { gotoXY(28,1); LCDWriteInt(current[0],3, 1, 0);};
  7908  05B4  01F5               	clrf	gotoXY@y
  7909  05B5  0AF5               	incf	gotoXY@y,f
  7910  05B6  301C               	movlw	28
  7911  05B7  3192  2230  3181   	fcall	_gotoXY
  7912  05BA  0021               	movlb	1	; select bank1
  7913  05BB  0821               	movf	(_current+1)^(0+128),w
  7914  05BC  0020               	movlb	0	; select bank0
  7915  05BD  00BF               	movwf	LCDWriteInt@value+1
  7916  05BE  0021               	movlb	1	; select bank1
  7917  05BF  0820               	movf	_current^(0+128),w
  7918  05C0  0020               	movlb	0	; select bank0
  7919  05C1  00BE               	movwf	LCDWriteInt@value
  7920  05C2  3003               	movlw	3
  7921  05C3  00E8               	movwf	??_main
  7922  05C4  0868               	movf	??_main,w
  7923  05C5  00C0               	movwf	LCDWriteInt@fieldLength
  7924  05C6  01C1               	clrf	LCDWriteInt@numPlaces
  7925  05C7  0AC1               	incf	LCDWriteInt@numPlaces,f
  7926  05C8  01C2               	clrf	LCDWriteInt@sign
  7927  05C9  318C  245C  3181   	fcall	_LCDWriteInt
  7928                           
  7929                           ;main.c: 258: LCDWriteCharacter('A');
  7930  05CC  3041               	movlw	65
  7931  05CD  3195  25D6  3181   	fcall	_LCDWriteCharacter
  7932                           
  7933                           ;main.c: 259: { gotoXY(56,1); LCDWriteInt(ADCRead(11),4, 0, 0);};
  7934  05D0  01F5               	clrf	gotoXY@y
  7935  05D1  0AF5               	incf	gotoXY@y,f
  7936  05D2  3038               	movlw	56
  7937  05D3  3192  2230  3181   	fcall	_gotoXY
  7938  05D6  300B               	movlw	11
  7939  05D7  3192  2243  3181   	fcall	_ADCRead
  7940  05DA  0871               	movf	?_ADCRead+1,w
  7941  05DB  0020               	movlb	0	; select bank0
  7942  05DC  00BF               	movwf	LCDWriteInt@value+1
  7943  05DD  0870               	movf	?_ADCRead,w
  7944  05DE  00BE               	movwf	LCDWriteInt@value
  7945  05DF  3004               	movlw	4
  7946  05E0  00E8               	movwf	??_main
  7947  05E1  0868               	movf	??_main,w
  7948  05E2  00C0               	movwf	LCDWriteInt@fieldLength
  7949  05E3  01C1               	clrf	LCDWriteInt@numPlaces
  7950  05E4  01C2               	clrf	LCDWriteInt@sign
  7951  05E5  318C  245C  3181   	fcall	_LCDWriteInt
  7952                           
  7953                           ;main.c: 260: { gotoXY(0,2); LCDWriteInt(voltage[1],4, 2, 0);};
  7954  05E8  3002               	movlw	2
  7955  05E9  0020               	movlb	0	; select bank0
  7956  05EA  00E8               	movwf	??_main
  7957  05EB  0868               	movf	??_main,w
  7958  05EC  00F5               	movwf	gotoXY@y
  7959  05ED  3000               	movlw	0
  7960  05EE  3192  2230  3181   	fcall	_gotoXY
  7961  05F1  0021               	movlb	1	; select bank1
  7962  05F2  082B               	movf	((_voltage+1)^(0+128)+2),w
  7963  05F3  0020               	movlb	0	; select bank0
  7964  05F4  00BF               	movwf	LCDWriteInt@value+1
  7965  05F5  0021               	movlb	1	; select bank1
  7966  05F6  082A               	movf	(_voltage^(0+128)+2),w
  7967  05F7  0020               	movlb	0	; select bank0
  7968  05F8  00BE               	movwf	LCDWriteInt@value
  7969  05F9  3004               	movlw	4
  7970  05FA  00E8               	movwf	??_main
  7971  05FB  0868               	movf	??_main,w
  7972  05FC  00C0               	movwf	LCDWriteInt@fieldLength
  7973  05FD  3002               	movlw	2
  7974  05FE  00E9               	movwf	??_main+1
  7975  05FF  0869               	movf	??_main+1,w
  7976  0600  00C1               	movwf	LCDWriteInt@numPlaces
  7977  0601  01C2               	clrf	LCDWriteInt@sign
  7978  0602  318C  245C  3181   	fcall	_LCDWriteInt
  7979                           
  7980                           ;main.c: 261: LCDWriteCharacter('V');
  7981  0605  3056               	movlw	86
  7982  0606  3195  25D6  3181   	fcall	_LCDWriteCharacter
  7983                           
  7984                           ;main.c: 262: { gotoXY(28,2); LCDWriteInt(current[1],3, 1, 0);};
  7985  0609  3002               	movlw	2
  7986  060A  0020               	movlb	0	; select bank0
  7987  060B  00E8               	movwf	??_main
  7988  060C  0868               	movf	??_main,w
  7989  060D  00F5               	movwf	gotoXY@y
  7990  060E  301C               	movlw	28
  7991  060F  3192  2230  3181   	fcall	_gotoXY
  7992  0612  0021               	movlb	1	; select bank1
  7993  0613  0823               	movf	((_current+1)^(0+128)+2),w
  7994  0614  0020               	movlb	0	; select bank0
  7995  0615  00BF               	movwf	LCDWriteInt@value+1
  7996  0616  0021               	movlb	1	; select bank1
  7997  0617  0822               	movf	(_current^(0+128)+2),w
  7998  0618  0020               	movlb	0	; select bank0
  7999  0619  00BE               	movwf	LCDWriteInt@value
  8000  061A  3003               	movlw	3
  8001  061B  00E8               	movwf	??_main
  8002  061C  0868               	movf	??_main,w
  8003  061D  00C0               	movwf	LCDWriteInt@fieldLength
  8004  061E  01C1               	clrf	LCDWriteInt@numPlaces
  8005  061F  0AC1               	incf	LCDWriteInt@numPlaces,f
  8006  0620  01C2               	clrf	LCDWriteInt@sign
  8007  0621  318C  245C  3181   	fcall	_LCDWriteInt
  8008                           
  8009                           ;main.c: 263: LCDWriteCharacter('A');
  8010  0624  3041               	movlw	65
  8011  0625  3195  25D6  3181   	fcall	_LCDWriteCharacter
  8012                           
  8013                           ;main.c: 264: { gotoXY(56,2); LCDWriteInt(Vref0,4, 2, 0);};
  8014  0628  3002               	movlw	2
  8015  0629  0020               	movlb	0	; select bank0
  8016  062A  00E8               	movwf	??_main
  8017  062B  0868               	movf	??_main,w
  8018  062C  00F5               	movwf	gotoXY@y
  8019  062D  3038               	movlw	56
  8020  062E  3192  2230  3181   	fcall	_gotoXY
  8021  0631  0021               	movlb	1	; select bank1
  8022  0632  084A               	movf	(_Vref0+1)^(0+128),w
  8023  0633  0020               	movlb	0	; select bank0
  8024  0634  00BF               	movwf	LCDWriteInt@value+1
  8025  0635  0021               	movlb	1	; select bank1
  8026  0636  0849               	movf	_Vref0^(0+128),w
  8027  0637  0020               	movlb	0	; select bank0
  8028  0638  00BE               	movwf	LCDWriteInt@value
  8029  0639  3004               	movlw	4
  8030  063A  00E8               	movwf	??_main
  8031  063B  0868               	movf	??_main,w
  8032  063C  00C0               	movwf	LCDWriteInt@fieldLength
  8033  063D  3002               	movlw	2
  8034  063E  00E9               	movwf	??_main+1
  8035  063F  0869               	movf	??_main+1,w
  8036  0640  00C1               	movwf	LCDWriteInt@numPlaces
  8037  0641  01C2               	clrf	LCDWriteInt@sign
  8038  0642  318C  245C  3181   	fcall	_LCDWriteInt
  8039                           
  8040                           ;main.c: 265: LCDWriteCharacter('V');
  8041  0645  3056               	movlw	86
  8042  0646  3195  25D6  3181   	fcall	_LCDWriteCharacter
  8043                           
  8044                           ;main.c: 267: { gotoXY(0,3); LCDWriteInt(voltage[0]/100*current[0]/10,3, 0, 0);};
  8045  0649  3003               	movlw	3
  8046  064A  0020               	movlb	0	; select bank0
  8047  064B  00E8               	movwf	??_main
  8048  064C  0868               	movf	??_main,w
  8049  064D  00F5               	movwf	gotoXY@y
  8050  064E  3000               	movlw	0
  8051  064F  3192  2230  3181   	fcall	_gotoXY
  8052  0652  3064               	movlw	100
  8053  0653  00F0               	movwf	___awdiv@divisor
  8054  0654  3000               	movlw	0
  8055  0655  00F1               	movwf	___awdiv@divisor+1
  8056  0656  0021               	movlb	1	; select bank1
  8057  0657  0829               	movf	(_voltage+1)^(0+128),w
  8058  0658  00F3               	movwf	___awdiv@dividend+1
  8059  0659  0828               	movf	_voltage^(0+128),w
  8060  065A  00F2               	movwf	___awdiv@dividend
  8061  065B  3195  2585  3181   	fcall	___awdiv
  8062  065E  0871               	movf	?___awdiv+1,w
  8063  065F  00FA               	movwf	___wmul@multiplier+1
  8064  0660  0870               	movf	?___awdiv,w
  8065  0661  00F9               	movwf	___wmul@multiplier
  8066  0662  0021               	movlb	1	; select bank1
  8067  0663  0821               	movf	(_current+1)^(0+128),w
  8068  0664  00FC               	movwf	___wmul@multiplicand+1
  8069  0665  0820               	movf	_current^(0+128),w
  8070  0666  00FB               	movwf	___wmul@multiplicand
  8071  0667  3192  22CE  3181   	fcall	___wmul
  8072  066A  087A               	movf	?___wmul+1,w
  8073  066B  0023               	movlb	3	; select bank3
  8074  066C  00AF               	movwf	(_main$1308+1)^(0+384)
  8075  066D  0879               	movf	?___wmul,w
  8076  066E  00AE               	movwf	_main$1308^(0+384)
  8077  066F  300A               	movlw	10
  8078  0670  00F0               	movwf	___awdiv@divisor
  8079  0671  3000               	movlw	0
  8080  0672  00F1               	movwf	___awdiv@divisor+1
  8081  0673  082F               	movf	(_main$1308+1)^(0+384),w
  8082  0674  00F3               	movwf	___awdiv@dividend+1
  8083  0675  082E               	movf	_main$1308^(0+384),w
  8084  0676  00F2               	movwf	___awdiv@dividend
  8085  0677  3195  2585  3181   	fcall	___awdiv
  8086  067A  0871               	movf	?___awdiv+1,w
  8087  067B  0023               	movlb	3	; select bank3
  8088  067C  00B1               	movwf	(_main$1309+1)^(0+384)
  8089  067D  0870               	movf	?___awdiv,w
  8090  067E  00B0               	movwf	_main$1309^(0+384)
  8091  067F  0831               	movf	(_main$1309+1)^(0+384),w
  8092  0680  0020               	movlb	0	; select bank0
  8093  0681  00BF               	movwf	LCDWriteInt@value+1
  8094  0682  0023               	movlb	3	; select bank3
  8095  0683  0830               	movf	_main$1309^(0+384),w
  8096  0684  0020               	movlb	0	; select bank0
  8097  0685  00BE               	movwf	LCDWriteInt@value
  8098  0686  3003               	movlw	3
  8099  0687  00E8               	movwf	??_main
  8100  0688  0868               	movf	??_main,w
  8101  0689  00C0               	movwf	LCDWriteInt@fieldLength
  8102  068A  01C1               	clrf	LCDWriteInt@numPlaces
  8103  068B  01C2               	clrf	LCDWriteInt@sign
  8104  068C  318C  245C  3181   	fcall	_LCDWriteInt
  8105                           
  8106                           ;main.c: 268: LCDWriteCharacter('W');
  8107  068F  3057               	movlw	87
  8108  0690  3195  25D6  3181   	fcall	_LCDWriteCharacter
  8109                           
  8110                           ;main.c: 269: { gotoXY(28,3); LCDWriteInt(battery_state0,1, 0, 0);};
  8111  0693  3003               	movlw	3
  8112  0694  0020               	movlb	0	; select bank0
  8113  0695  00E8               	movwf	??_main
  8114  0696  0868               	movf	??_main,w
  8115  0697  00F5               	movwf	gotoXY@y
  8116  0698  301C               	movlw	28
  8117  0699  3192  2230  3181   	fcall	_gotoXY
  8118  069C  0021               	movlb	1	; select bank1
  8119  069D  084B               	movf	_battery_state0^(0+128),w
  8120  069E  0020               	movlb	0	; select bank0
  8121  069F  00E8               	movwf	??_main
  8122  06A0  01E9               	clrf	??_main+1
  8123  06A1  0868               	movf	??_main,w
  8124  06A2  00BE               	movwf	LCDWriteInt@value
  8125  06A3  0869               	movf	??_main+1,w
  8126  06A4  00BF               	movwf	LCDWriteInt@value+1
  8127  06A5  01C0               	clrf	LCDWriteInt@fieldLength
  8128  06A6  0AC0               	incf	LCDWriteInt@fieldLength,f
  8129  06A7  01C1               	clrf	LCDWriteInt@numPlaces
  8130  06A8  01C2               	clrf	LCDWriteInt@sign
  8131  06A9  318C  245C  3181   	fcall	_LCDWriteInt
  8132                           
  8133                           ;main.c: 270: { gotoXY(36,3); LCDWriteInt(Imode0,1, 0, 0);};
  8134  06AC  3003               	movlw	3
  8135  06AD  0020               	movlb	0	; select bank0
  8136  06AE  00E8               	movwf	??_main
  8137  06AF  0868               	movf	??_main,w
  8138  06B0  00F5               	movwf	gotoXY@y
  8139  06B1  3024               	movlw	36
  8140  06B2  3192  2230  3181   	fcall	_gotoXY
  8141  06B5  0021               	movlb	1	; select bank1
  8142  06B6  084D               	movf	_Imode0^(0+128),w
  8143  06B7  0020               	movlb	0	; select bank0
  8144  06B8  00BE               	movwf	LCDWriteInt@value
  8145  06B9  01BF               	clrf	LCDWriteInt@value+1
  8146  06BA  1BBE               	btfsc	LCDWriteInt@value,7
  8147  06BB  03BF               	decf	LCDWriteInt@value+1,f
  8148  06BC  01C0               	clrf	LCDWriteInt@fieldLength
  8149  06BD  0AC0               	incf	LCDWriteInt@fieldLength,f
  8150  06BE  01C1               	clrf	LCDWriteInt@numPlaces
  8151  06BF  01C2               	clrf	LCDWriteInt@sign
  8152  06C0  318C  245C  3181   	fcall	_LCDWriteInt
  8153                           
  8154                           ;main.c: 271: { gotoXY(48,3); LCDWriteInt(Iref0,3, 1, 0);};
  8155  06C3  3003               	movlw	3
  8156  06C4  0020               	movlb	0	; select bank0
  8157  06C5  00E8               	movwf	??_main
  8158  06C6  0868               	movf	??_main,w
  8159  06C7  00F5               	movwf	gotoXY@y
  8160  06C8  3030               	movlw	48
  8161  06C9  3192  2230  3181   	fcall	_gotoXY
  8162  06CC  0021               	movlb	1	; select bank1
  8163  06CD  0848               	movf	(_Iref0+1)^(0+128),w
  8164  06CE  0020               	movlb	0	; select bank0
  8165  06CF  00BF               	movwf	LCDWriteInt@value+1
  8166  06D0  0021               	movlb	1	; select bank1
  8167  06D1  0847               	movf	_Iref0^(0+128),w
  8168  06D2  0020               	movlb	0	; select bank0
  8169  06D3  00BE               	movwf	LCDWriteInt@value
  8170  06D4  3003               	movlw	3
  8171  06D5  00E8               	movwf	??_main
  8172  06D6  0868               	movf	??_main,w
  8173  06D7  00C0               	movwf	LCDWriteInt@fieldLength
  8174  06D8  01C1               	clrf	LCDWriteInt@numPlaces
  8175  06D9  0AC1               	incf	LCDWriteInt@numPlaces,f
  8176  06DA  01C2               	clrf	LCDWriteInt@sign
  8177  06DB  318C  245C  3181   	fcall	_LCDWriteInt
  8178                           
  8179                           ;main.c: 272: LCDWriteCharacter('A');
  8180  06DE  3041               	movlw	65
  8181  06DF  3195  25D6  3181   	fcall	_LCDWriteCharacter
  8182                           
  8183                           ;main.c: 274: { gotoXY(0,4); LCDWriteInt(voltage[1]/100*current[1]/10,3, 0, 0);};
  8184  06E2  3004               	movlw	4
  8185  06E3  0020               	movlb	0	; select bank0
  8186  06E4  00E8               	movwf	??_main
  8187  06E5  0868               	movf	??_main,w
  8188  06E6  00F5               	movwf	gotoXY@y
  8189  06E7  3000               	movlw	0
  8190  06E8  3192  2230  3181   	fcall	_gotoXY
  8191  06EB  3064               	movlw	100
  8192  06EC  00F0               	movwf	___awdiv@divisor
  8193  06ED  3000               	movlw	0
  8194  06EE  00F1               	movwf	___awdiv@divisor+1
  8195  06EF  0021               	movlb	1	; select bank1
  8196  06F0  082B               	movf	((_voltage+1)^(0+128)+2),w
  8197  06F1  00F3               	movwf	___awdiv@dividend+1
  8198  06F2  082A               	movf	(_voltage^(0+128)+2),w
  8199  06F3  00F2               	movwf	___awdiv@dividend
  8200  06F4  3195  2585  3181   	fcall	___awdiv
  8201  06F7  0871               	movf	?___awdiv+1,w
  8202  06F8  00FA               	movwf	___wmul@multiplier+1
  8203  06F9  0870               	movf	?___awdiv,w
  8204  06FA  00F9               	movwf	___wmul@multiplier
  8205  06FB  0021               	movlb	1	; select bank1
  8206  06FC  0823               	movf	((_current+1)^(0+128)+2),w
  8207  06FD  00FC               	movwf	___wmul@multiplicand+1
  8208  06FE  0822               	movf	(_current^(0+128)+2),w
  8209  06FF  00FB               	movwf	___wmul@multiplicand
  8210  0700  3192  22CE  3181   	fcall	___wmul
  8211  0703  087A               	movf	?___wmul+1,w
  8212  0704  0023               	movlb	3	; select bank3
  8213  0705  00AF               	movwf	(_main$1308+1)^(0+384)
  8214  0706  0879               	movf	?___wmul,w
  8215  0707  00AE               	movwf	_main$1308^(0+384)
  8216  0708  300A               	movlw	10
  8217  0709  00F0               	movwf	___awdiv@divisor
  8218  070A  3000               	movlw	0
  8219  070B  00F1               	movwf	___awdiv@divisor+1
  8220  070C  082F               	movf	(_main$1308+1)^(0+384),w
  8221  070D  00F3               	movwf	___awdiv@dividend+1
  8222  070E  082E               	movf	_main$1308^(0+384),w
  8223  070F  00F2               	movwf	___awdiv@dividend
  8224  0710  3195  2585  3181   	fcall	___awdiv
  8225  0713  0871               	movf	?___awdiv+1,w
  8226  0714  0023               	movlb	3	; select bank3
  8227  0715  00B1               	movwf	(_main$1309+1)^(0+384)
  8228  0716  0870               	movf	?___awdiv,w
  8229  0717  00B0               	movwf	_main$1309^(0+384)
  8230  0718  0831               	movf	(_main$1309+1)^(0+384),w
  8231  0719  0020               	movlb	0	; select bank0
  8232  071A  00BF               	movwf	LCDWriteInt@value+1
  8233  071B  0023               	movlb	3	; select bank3
  8234  071C  0830               	movf	_main$1309^(0+384),w
  8235  071D  0020               	movlb	0	; select bank0
  8236  071E  00BE               	movwf	LCDWriteInt@value
  8237  071F  3003               	movlw	3
  8238  0720  00E8               	movwf	??_main
  8239  0721  0868               	movf	??_main,w
  8240  0722  00C0               	movwf	LCDWriteInt@fieldLength
  8241  0723  01C1               	clrf	LCDWriteInt@numPlaces
  8242  0724  01C2               	clrf	LCDWriteInt@sign
  8243  0725  318C  245C  3181   	fcall	_LCDWriteInt
  8244                           
  8245                           ;main.c: 275: LCDWriteCharacter('W');
  8246  0728  3057               	movlw	87
  8247  0729  3195  25D6  3181   	fcall	_LCDWriteCharacter
  8248                           
  8249                           ;main.c: 278: { gotoXY(48,4); LCDWriteInt(MPPT0,4, 0, 0);};
  8250  072C  3004               	movlw	4
  8251  072D  0020               	movlb	0	; select bank0
  8252  072E  00E8               	movwf	??_main
  8253  072F  0868               	movf	??_main,w
  8254  0730  00F5               	movwf	gotoXY@y
  8255  0731  3030               	movlw	48
  8256  0732  3192  2230  3181   	fcall	_gotoXY
  8257  0735  0023               	movlb	3	; select bank3
  8258  0736  083E               	movf	(main@MPPT0+1)^(0+384),w
  8259  0737  0020               	movlb	0	; select bank0
  8260  0738  00BF               	movwf	LCDWriteInt@value+1
  8261  0739  0023               	movlb	3	; select bank3
  8262  073A  083D               	movf	main@MPPT0^(0+384),w
  8263  073B  0020               	movlb	0	; select bank0
  8264  073C  00BE               	movwf	LCDWriteInt@value
  8265  073D  3004               	movlw	4
  8266  073E  00E8               	movwf	??_main
  8267  073F  0868               	movf	??_main,w
  8268  0740  00C0               	movwf	LCDWriteInt@fieldLength
  8269  0741  01C1               	clrf	LCDWriteInt@numPlaces
  8270  0742  01C2               	clrf	LCDWriteInt@sign
  8271  0743  318C  245C  3181   	fcall	_LCDWriteInt
  8272                           
  8273                           ;main.c: 286: { gotoXY(0,5); LCDWriteInt(dutyCycle6,4, 0, 0);};
  8274  0746  3005               	movlw	5
  8275  0747  0020               	movlb	0	; select bank0
  8276  0748  00E8               	movwf	??_main
  8277  0749  0868               	movf	??_main,w
  8278  074A  00F5               	movwf	gotoXY@y
  8279  074B  3000               	movlw	0
  8280  074C  3192  2230  3181   	fcall	_gotoXY
  8281  074F  0023               	movlb	3	; select bank3
  8282  0750  0840               	movf	(main@dutyCycle6+1)^(0+384),w
  8283  0751  0020               	movlb	0	; select bank0
  8284  0752  00BF               	movwf	LCDWriteInt@value+1
  8285  0753  0023               	movlb	3	; select bank3
  8286  0754  083F               	movf	main@dutyCycle6^(0+384),w
  8287  0755  0020               	movlb	0	; select bank0
  8288  0756  00BE               	movwf	LCDWriteInt@value
  8289  0757  3004               	movlw	4
  8290  0758  00E8               	movwf	??_main
  8291  0759  0868               	movf	??_main,w
  8292  075A  00C0               	movwf	LCDWriteInt@fieldLength
  8293  075B  01C1               	clrf	LCDWriteInt@numPlaces
  8294  075C  01C2               	clrf	LCDWriteInt@sign
  8295  075D  318C  245C  3181   	fcall	_LCDWriteInt
  8296                           
  8297                           ;main.c: 287: { gotoXY(24,5); LCDWriteInt(dutyCycle7,4, 0, 0);};
  8298  0760  3005               	movlw	5
  8299  0761  0020               	movlb	0	; select bank0
  8300  0762  00E8               	movwf	??_main
  8301  0763  0868               	movf	??_main,w
  8302  0764  00F5               	movwf	gotoXY@y
  8303  0765  3018               	movlw	24
  8304  0766  3192  2230  3181   	fcall	_gotoXY
  8305  0769  0023               	movlb	3	; select bank3
  8306  076A  0842               	movf	(main@dutyCycle7+1)^(0+384),w
  8307  076B  0020               	movlb	0	; select bank0
  8308  076C  00BF               	movwf	LCDWriteInt@value+1
  8309  076D  0023               	movlb	3	; select bank3
  8310  076E  0841               	movf	main@dutyCycle7^(0+384),w
  8311  076F  0020               	movlb	0	; select bank0
  8312  0770  00BE               	movwf	LCDWriteInt@value
  8313  0771  3004               	movlw	4
  8314  0772  00E8               	movwf	??_main
  8315  0773  0868               	movf	??_main,w
  8316  0774  00C0               	movwf	LCDWriteInt@fieldLength
  8317  0775  01C1               	clrf	LCDWriteInt@numPlaces
  8318  0776  01C2               	clrf	LCDWriteInt@sign
  8319  0777  318C  245C  3181   	fcall	_LCDWriteInt
  8320                           
  8321                           ;main.c: 288: { gotoXY(48,5); LCDWriteInt(dutyCycle1,4, 0, 0);};
  8322  077A  3005               	movlw	5
  8323  077B  0020               	movlb	0	; select bank0
  8324  077C  00E8               	movwf	??_main
  8325  077D  0868               	movf	??_main,w
  8326  077E  00F5               	movwf	gotoXY@y
  8327  077F  3030               	movlw	48
  8328  0780  3192  2230  3181   	fcall	_gotoXY
  8329  0783  0023               	movlb	3	; select bank3
  8330  0784  083B               	movf	(main@dutyCycle1+1)^(0+384),w
  8331  0785  0020               	movlb	0	; select bank0
  8332  0786  00BF               	movwf	LCDWriteInt@value+1
  8333  0787  0023               	movlb	3	; select bank3
  8334  0788  083A               	movf	main@dutyCycle1^(0+384),w
  8335  0789  0020               	movlb	0	; select bank0
  8336  078A  00BE               	movwf	LCDWriteInt@value
  8337  078B  3004               	movlw	4
  8338  078C  00E8               	movwf	??_main
  8339  078D  0868               	movf	??_main,w
  8340  078E  00C0               	movwf	LCDWriteInt@fieldLength
  8341  078F  01C1               	clrf	LCDWriteInt@numPlaces
  8342  0790  01C2               	clrf	LCDWriteInt@sign
  8343  0791  318C  245C  3181   	fcall	_LCDWriteInt
  8344                           
  8345                           ;main.c: 289: { gotoXY(74,5); LCDWriteInt(!(RB2),1, 0, 0);};
  8346  0794  3005               	movlw	5
  8347  0795  0020               	movlb	0	; select bank0
  8348  0796  00E8               	movwf	??_main
  8349  0797  0868               	movf	??_main,w
  8350  0798  00F5               	movwf	gotoXY@y
  8351  0799  304A               	movlw	74
  8352  079A  3192  2230  3181   	fcall	_gotoXY
  8353  079D  1003               	clrc
  8354  079E  0020               	movlb	0	; select bank0
  8355  079F  1D0D               	btfss	13,2	;volatile
  8356  07A0  1403               	setc
  8357  07A1  3000               	movlw	0
  8358  07A2  3D09               	addwfc	9,w
  8359  07A3  00E8               	movwf	??_main
  8360  07A4  01E9               	clrf	??_main+1
  8361  07A5  0868               	movf	??_main,w
  8362  07A6  00BE               	movwf	LCDWriteInt@value
  8363  07A7  0869               	movf	??_main+1,w
  8364  07A8  00BF               	movwf	LCDWriteInt@value+1
  8365  07A9  01C0               	clrf	LCDWriteInt@fieldLength
  8366  07AA  0AC0               	incf	LCDWriteInt@fieldLength,f
  8367  07AB  01C1               	clrf	LCDWriteInt@numPlaces
  8368  07AC  01C2               	clrf	LCDWriteInt@sign
  8369  07AD  318C  245C  3181   	fcall	_LCDWriteInt
  8370                           
  8371                           ;main.c: 291: if(battery_state0 > FINISHED)
  8372  07B0  3003               	movlw	3
  8373  07B1  0021               	movlb	1	; select bank1
  8374  07B2  024B               	subwf	_battery_state0^(0+128),w
  8375  07B3  1C03               	skipc
  8376  07B4  2FB8               	goto	l4633
  8377                           
  8378                           ;main.c: 292: {
  8379                           ;main.c: 293: cc_cv_mode();
  8380  07B5  318D  2515  3181   	fcall	_cc_cv_mode
  8381  07B8                     l4633:	
  8382                           
  8383                           ;main.c: 294: }
  8384                           ;main.c: 295: slowLoop=0;
  8385  07B8  0023               	movlb	3	; select bank3
  8386  07B9  01B2               	clrf	main@slowLoop^(0+384)
  8387  07BA  2992               	goto	l4367
  8388  07BB                     __end_of_main:	
  8389                           
  8390                           	psect	text1
  8391  0EE3                     __ptext1:	
  8392 ;; *************** function _tempCalc *****************
  8393 ;; Defined at:
  8394 ;;		line 4 in file "tempCalc.c"
  8395 ;; Parameters:    Size  Location     Type
  8396 ;;  analogValue     2   61[BANK0 ] int 
  8397 ;; Auto vars:     Size  Location     Type
  8398 ;;  steinhart       3   69[BANK0 ] float 
  8399 ;;  R               3   63[BANK0 ] float 
  8400 ;; Return value:  Size  Location     Type
  8401 ;;                  2   61[BANK0 ] int 
  8402 ;; Registers used:
  8403 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8404 ;; Tracked objects:
  8405 ;;		On entry : 0/0
  8406 ;;		On exit  : 0/0
  8407 ;;		Unchanged: 0/0
  8408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8409 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8410 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8412 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8413 ;;Total ram usage:       11 bytes
  8414 ;; Hardware stack levels used:    1
  8415 ;; Hardware stack levels required when called:    4
  8416 ;; This function calls:
  8417 ;;		___awtoft
  8418 ;;		___ftadd
  8419 ;;		___ftdiv
  8420 ;;		___ftmul
  8421 ;;		___ftsub
  8422 ;;		___fttol
  8423 ;;		_log
  8424 ;; This function is called by:
  8425 ;;		_main
  8426 ;; This function uses a non-reentrant model
  8427 ;;
  8428                           
  8429                           
  8430                           ;psect for function _tempCalc
  8431  0EE3                     _tempCalc:	
  8432                           
  8433                           ;tempCalc.c: 6: float R, steinhart;
  8434                           ;tempCalc.c: 8: R = 9890/(1023/(float)analogValue - 1);
  8435                           
  8436                           ;incstack = 0
  8437                           ; Regs used in _tempCalc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8438  0EE3  3000               	movlw	0
  8439  0EE4  0020               	movlb	0	; select bank0
  8440  0EE5  00C0               	movwf	___ftadd@f1
  8441  0EE6  3080               	movlw	128
  8442  0EE7  00C1               	movwf	___ftadd@f1+1
  8443  0EE8  30BF               	movlw	191
  8444  0EE9  00C2               	movwf	___ftadd@f1+2
  8445  0EEA  085E               	movf	tempCalc@analogValue+1,w
  8446  0EEB  00F9               	movwf	___awtoft@c+1
  8447  0EEC  085D               	movf	tempCalc@analogValue,w
  8448  0EED  00F8               	movwf	___awtoft@c
  8449  0EEE  3193  2348  318E   	fcall	___awtoft
  8450  0EF1  0878               	movf	?___awtoft,w
  8451  0EF2  0020               	movlb	0	; select bank0
  8452  0EF3  00A0               	movwf	___ftdiv@f2
  8453  0EF4  0879               	movf	?___awtoft+1,w
  8454  0EF5  00A1               	movwf	___ftdiv@f2+1
  8455  0EF6  087A               	movf	?___awtoft+2,w
  8456  0EF7  00A2               	movwf	___ftdiv@f2+2
  8457  0EF8  30C0               	movlw	192
  8458  0EF9  00A3               	movwf	___ftdiv@f1
  8459  0EFA  307F               	movlw	127
  8460  0EFB  00A4               	movwf	___ftdiv@f1+1
  8461  0EFC  3044               	movlw	68
  8462  0EFD  00A5               	movwf	___ftdiv@f1+2
  8463  0EFE  318A  224F  318E   	fcall	___ftdiv
  8464  0F01  0020               	movlb	0	; select bank0
  8465  0F02  0820               	movf	?___ftdiv,w
  8466  0F03  00C3               	movwf	___ftadd@f2
  8467  0F04  0821               	movf	?___ftdiv+1,w
  8468  0F05  00C4               	movwf	___ftadd@f2+1
  8469  0F06  0822               	movf	?___ftdiv+2,w
  8470  0F07  00C5               	movwf	___ftadd@f2+2
  8471  0F08  318D  25ED  318E   	fcall	___ftadd
  8472  0F0B  0020               	movlb	0	; select bank0
  8473  0F0C  0840               	movf	?___ftadd,w
  8474  0F0D  00E2               	movwf	_tempCalc$1310
  8475  0F0E  0841               	movf	?___ftadd+1,w
  8476  0F0F  00E3               	movwf	_tempCalc$1310+1
  8477  0F10  0842               	movf	?___ftadd+2,w
  8478  0F11  00E4               	movwf	_tempCalc$1310+2
  8479                           
  8480                           ;tempCalc.c: 6: float R, steinhart;
  8481                           ;tempCalc.c: 8: R = 9890/(1023/(float)analogValue - 1);
  8482  0F12  0862               	movf	_tempCalc$1310,w
  8483  0F13  00A0               	movwf	___ftdiv@f2
  8484  0F14  0863               	movf	_tempCalc$1310+1,w
  8485  0F15  00A1               	movwf	___ftdiv@f2+1
  8486  0F16  0864               	movf	_tempCalc$1310+2,w
  8487  0F17  00A2               	movwf	___ftdiv@f2+2
  8488  0F18  3088               	movlw	136
  8489  0F19  00A3               	movwf	___ftdiv@f1
  8490  0F1A  301A               	movlw	26
  8491  0F1B  00A4               	movwf	___ftdiv@f1+1
  8492  0F1C  3046               	movlw	70
  8493  0F1D  00A5               	movwf	___ftdiv@f1+2
  8494  0F1E  318A  224F  318E   	fcall	___ftdiv
  8495  0F21  0020               	movlb	0	; select bank0
  8496  0F22  0820               	movf	?___ftdiv,w
  8497  0F23  00DF               	movwf	tempCalc@R
  8498  0F24  0821               	movf	?___ftdiv+1,w
  8499  0F25  00E0               	movwf	tempCalc@R+1
  8500  0F26  0822               	movf	?___ftdiv+2,w
  8501  0F27  00E1               	movwf	tempCalc@R+2
  8502                           
  8503                           ;tempCalc.c: 10: steinhart = R /9990;
  8504  0F28  3018               	movlw	24
  8505  0F29  00A0               	movwf	___ftdiv@f2
  8506  0F2A  301C               	movlw	28
  8507  0F2B  00A1               	movwf	___ftdiv@f2+1
  8508  0F2C  3046               	movlw	70
  8509  0F2D  00A2               	movwf	___ftdiv@f2+2
  8510  0F2E  085F               	movf	tempCalc@R,w
  8511  0F2F  00A3               	movwf	___ftdiv@f1
  8512  0F30  0860               	movf	tempCalc@R+1,w
  8513  0F31  00A4               	movwf	___ftdiv@f1+1
  8514  0F32  0861               	movf	tempCalc@R+2,w
  8515  0F33  00A5               	movwf	___ftdiv@f1+2
  8516  0F34  318A  224F  318E   	fcall	___ftdiv
  8517  0F37  0020               	movlb	0	; select bank0
  8518  0F38  0820               	movf	?___ftdiv,w
  8519  0F39  00E5               	movwf	tempCalc@steinhart
  8520  0F3A  0821               	movf	?___ftdiv+1,w
  8521  0F3B  00E6               	movwf	tempCalc@steinhart+1
  8522  0F3C  0822               	movf	?___ftdiv+2,w
  8523  0F3D  00E7               	movwf	tempCalc@steinhart+2
  8524                           
  8525                           ;tempCalc.c: 11: steinhart = log(steinhart);
  8526  0F3E  0865               	movf	tempCalc@steinhart,w
  8527  0F3F  00D7               	movwf	log@x
  8528  0F40  0866               	movf	tempCalc@steinhart+1,w
  8529  0F41  00D8               	movwf	log@x+1
  8530  0F42  0867               	movf	tempCalc@steinhart+2,w
  8531  0F43  00D9               	movwf	log@x+2
  8532  0F44  318A  22F8  318E   	fcall	_log
  8533  0F47  0020               	movlb	0	; select bank0
  8534  0F48  0857               	movf	?_log,w
  8535  0F49  00E5               	movwf	tempCalc@steinhart
  8536  0F4A  0858               	movf	?_log+1,w
  8537  0F4B  00E6               	movwf	tempCalc@steinhart+1
  8538  0F4C  0859               	movf	?_log+2,w
  8539  0F4D  00E7               	movwf	tempCalc@steinhart+2
  8540                           
  8541                           ;tempCalc.c: 12: steinhart /= 4030;
  8542  0F4E  30E0               	movlw	224
  8543  0F4F  00A0               	movwf	___ftdiv@f2
  8544  0F50  307B               	movlw	123
  8545  0F51  00A1               	movwf	___ftdiv@f2+1
  8546  0F52  3045               	movlw	69
  8547  0F53  00A2               	movwf	___ftdiv@f2+2
  8548  0F54  0865               	movf	tempCalc@steinhart,w
  8549  0F55  00A3               	movwf	___ftdiv@f1
  8550  0F56  0866               	movf	tempCalc@steinhart+1,w
  8551  0F57  00A4               	movwf	___ftdiv@f1+1
  8552  0F58  0867               	movf	tempCalc@steinhart+2,w
  8553  0F59  00A5               	movwf	___ftdiv@f1+2
  8554  0F5A  318A  224F  318E   	fcall	___ftdiv
  8555  0F5D  0020               	movlb	0	; select bank0
  8556  0F5E  0820               	movf	?___ftdiv,w
  8557  0F5F  00E5               	movwf	tempCalc@steinhart
  8558  0F60  0821               	movf	?___ftdiv+1,w
  8559  0F61  00E6               	movwf	tempCalc@steinhart+1
  8560  0F62  0822               	movf	?___ftdiv+2,w
  8561  0F63  00E7               	movwf	tempCalc@steinhart+2
  8562                           
  8563                           ;tempCalc.c: 15: steinhart += 1.0 / (25 + 273.15);
  8564  0F64  30CF               	movlw	207
  8565  0F65  00C0               	movwf	___ftadd@f1
  8566  0F66  305B               	movlw	91
  8567  0F67  00C1               	movwf	___ftadd@f1+1
  8568  0F68  303B               	movlw	59
  8569  0F69  00C2               	movwf	___ftadd@f1+2
  8570  0F6A  0865               	movf	tempCalc@steinhart,w
  8571  0F6B  00C3               	movwf	___ftadd@f2
  8572  0F6C  0866               	movf	tempCalc@steinhart+1,w
  8573  0F6D  00C4               	movwf	___ftadd@f2+1
  8574  0F6E  0867               	movf	tempCalc@steinhart+2,w
  8575  0F6F  00C5               	movwf	___ftadd@f2+2
  8576  0F70  318D  25ED  318E   	fcall	___ftadd
  8577  0F73  0020               	movlb	0	; select bank0
  8578  0F74  0840               	movf	?___ftadd,w
  8579  0F75  00E5               	movwf	tempCalc@steinhart
  8580  0F76  0841               	movf	?___ftadd+1,w
  8581  0F77  00E6               	movwf	tempCalc@steinhart+1
  8582  0F78  0842               	movf	?___ftadd+2,w
  8583  0F79  00E7               	movwf	tempCalc@steinhart+2
  8584                           
  8585                           ;tempCalc.c: 16: steinhart = 1.0 / steinhart;
  8586  0F7A  0865               	movf	tempCalc@steinhart,w
  8587  0F7B  00A0               	movwf	___ftdiv@f2
  8588  0F7C  0866               	movf	tempCalc@steinhart+1,w
  8589  0F7D  00A1               	movwf	___ftdiv@f2+1
  8590  0F7E  0867               	movf	tempCalc@steinhart+2,w
  8591  0F7F  00A2               	movwf	___ftdiv@f2+2
  8592  0F80  3000               	movlw	0
  8593  0F81  00A3               	movwf	___ftdiv@f1
  8594  0F82  3080               	movlw	128
  8595  0F83  00A4               	movwf	___ftdiv@f1+1
  8596  0F84  303F               	movlw	63
  8597  0F85  00A5               	movwf	___ftdiv@f1+2
  8598  0F86  318A  224F  318E   	fcall	___ftdiv
  8599  0F89  0020               	movlb	0	; select bank0
  8600  0F8A  0820               	movf	?___ftdiv,w
  8601  0F8B  00E5               	movwf	tempCalc@steinhart
  8602  0F8C  0821               	movf	?___ftdiv+1,w
  8603  0F8D  00E6               	movwf	tempCalc@steinhart+1
  8604  0F8E  0822               	movf	?___ftdiv+2,w
  8605  0F8F  00E7               	movwf	tempCalc@steinhart+2
  8606                           
  8607                           ;tempCalc.c: 17: steinhart -= 273.15;
  8608  0F90  3093               	movlw	147
  8609  0F91  00CD               	movwf	___ftsub@f2
  8610  0F92  3088               	movlw	136
  8611  0F93  00CE               	movwf	___ftsub@f2+1
  8612  0F94  3043               	movlw	67
  8613  0F95  00CF               	movwf	___ftsub@f2+2
  8614  0F96  0865               	movf	tempCalc@steinhart,w
  8615  0F97  00D0               	movwf	___ftsub@f1
  8616  0F98  0866               	movf	tempCalc@steinhart+1,w
  8617  0F99  00D1               	movwf	___ftsub@f1+1
  8618  0F9A  0867               	movf	tempCalc@steinhart+2,w
  8619  0F9B  00D2               	movwf	___ftsub@f1+2
  8620  0F9C  3192  22EC  318E   	fcall	___ftsub
  8621  0F9F  0020               	movlb	0	; select bank0
  8622  0FA0  084D               	movf	?___ftsub,w
  8623  0FA1  00E5               	movwf	tempCalc@steinhart
  8624  0FA2  084E               	movf	?___ftsub+1,w
  8625  0FA3  00E6               	movwf	tempCalc@steinhart+1
  8626  0FA4  084F               	movf	?___ftsub+2,w
  8627  0FA5  00E7               	movwf	tempCalc@steinhart+2
  8628                           
  8629                           ;tempCalc.c: 19: steinhart*=10;
  8630  0FA6  3000               	movlw	0
  8631  0FA7  00B0               	movwf	___ftmul@f1
  8632  0FA8  3020               	movlw	32
  8633  0FA9  00B1               	movwf	___ftmul@f1+1
  8634  0FAA  3041               	movlw	65
  8635  0FAB  00B2               	movwf	___ftmul@f1+2
  8636  0FAC  0865               	movf	tempCalc@steinhart,w
  8637  0FAD  00B3               	movwf	___ftmul@f2
  8638  0FAE  0866               	movf	tempCalc@steinhart+1,w
  8639  0FAF  00B4               	movwf	___ftmul@f2+1
  8640  0FB0  0867               	movf	tempCalc@steinhart+2,w
  8641  0FB1  00B5               	movwf	___ftmul@f2+2
  8642  0FB2  318B  23A8  318E   	fcall	___ftmul
  8643  0FB5  0020               	movlb	0	; select bank0
  8644  0FB6  0830               	movf	?___ftmul,w
  8645  0FB7  00E5               	movwf	tempCalc@steinhart
  8646  0FB8  0831               	movf	?___ftmul+1,w
  8647  0FB9  00E6               	movwf	tempCalc@steinhart+1
  8648  0FBA  0832               	movf	?___ftmul+2,w
  8649  0FBB  00E7               	movwf	tempCalc@steinhart+2
  8650                           
  8651                           ;tempCalc.c: 21: steinhart = steinhart*9/5+320;
  8652  0FBC  3000               	movlw	0
  8653  0FBD  00C0               	movwf	___ftadd@f1
  8654  0FBE  30A0               	movlw	160
  8655  0FBF  00C1               	movwf	___ftadd@f1+1
  8656  0FC0  3043               	movlw	67
  8657  0FC1  00C2               	movwf	___ftadd@f1+2
  8658  0FC2  3000               	movlw	0
  8659  0FC3  00A0               	movwf	___ftdiv@f2
  8660  0FC4  30A0               	movlw	160
  8661  0FC5  00A1               	movwf	___ftdiv@f2+1
  8662  0FC6  3040               	movlw	64
  8663  0FC7  00A2               	movwf	___ftdiv@f2+2
  8664  0FC8  3000               	movlw	0
  8665  0FC9  00B0               	movwf	___ftmul@f1
  8666  0FCA  3010               	movlw	16
  8667  0FCB  00B1               	movwf	___ftmul@f1+1
  8668  0FCC  3041               	movlw	65
  8669  0FCD  00B2               	movwf	___ftmul@f1+2
  8670  0FCE  0865               	movf	tempCalc@steinhart,w
  8671  0FCF  00B3               	movwf	___ftmul@f2
  8672  0FD0  0866               	movf	tempCalc@steinhart+1,w
  8673  0FD1  00B4               	movwf	___ftmul@f2+1
  8674  0FD2  0867               	movf	tempCalc@steinhart+2,w
  8675  0FD3  00B5               	movwf	___ftmul@f2+2
  8676  0FD4  318B  23A8  318E   	fcall	___ftmul
  8677  0FD7  0020               	movlb	0	; select bank0
  8678  0FD8  0830               	movf	?___ftmul,w
  8679  0FD9  00A3               	movwf	___ftdiv@f1
  8680  0FDA  0831               	movf	?___ftmul+1,w
  8681  0FDB  00A4               	movwf	___ftdiv@f1+1
  8682  0FDC  0832               	movf	?___ftmul+2,w
  8683  0FDD  00A5               	movwf	___ftdiv@f1+2
  8684  0FDE  318A  224F  318E   	fcall	___ftdiv
  8685  0FE1  0020               	movlb	0	; select bank0
  8686  0FE2  0820               	movf	?___ftdiv,w
  8687  0FE3  00C3               	movwf	___ftadd@f2
  8688  0FE4  0821               	movf	?___ftdiv+1,w
  8689  0FE5  00C4               	movwf	___ftadd@f2+1
  8690  0FE6  0822               	movf	?___ftdiv+2,w
  8691  0FE7  00C5               	movwf	___ftadd@f2+2
  8692  0FE8  318D  25ED  318E   	fcall	___ftadd
  8693  0FEB  0020               	movlb	0	; select bank0
  8694  0FEC  0840               	movf	?___ftadd,w
  8695  0FED  00E5               	movwf	tempCalc@steinhart
  8696  0FEE  0841               	movf	?___ftadd+1,w
  8697  0FEF  00E6               	movwf	tempCalc@steinhart+1
  8698  0FF0  0842               	movf	?___ftadd+2,w
  8699  0FF1  00E7               	movwf	tempCalc@steinhart+2
  8700                           
  8701                           ;tempCalc.c: 23: return (int16_t)steinhart;
  8702  0FF2  0865               	movf	tempCalc@steinhart,w
  8703  0FF3  00B0               	movwf	___fttol@f1
  8704  0FF4  0866               	movf	tempCalc@steinhart+1,w
  8705  0FF5  00B1               	movwf	___fttol@f1+1
  8706  0FF6  0867               	movf	tempCalc@steinhart+2,w
  8707  0FF7  00B2               	movwf	___fttol@f1+2
  8708  0FF8  3196  26F2         	fcall	___fttol
  8709  0FFA  0020               	movlb	0	; select bank0
  8710  0FFB  0831               	movf	?___fttol+1,w
  8711  0FFC  00DE               	movwf	?_tempCalc+1
  8712  0FFD  0830               	movf	?___fttol,w
  8713  0FFE  00DD               	movwf	?_tempCalc
  8714  0FFF  0008               	return
  8715  1000                     __end_of_tempCalc:	
  8716                           
  8717                           	psect	text2
  8718  0AF8                     __ptext2:	
  8719 ;; *************** function _log *****************
  8720 ;; Defined at:
  8721 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\log.c"
  8722 ;; Parameters:    Size  Location     Type
  8723 ;;  x               3   55[BANK0 ] int 
  8724 ;; Auto vars:     Size  Location     Type
  8725 ;;  exponent        2   59[BANK0 ] int 
  8726 ;; Return value:  Size  Location     Type
  8727 ;;                  3   55[BANK0 ] int 
  8728 ;; Registers used:
  8729 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8730 ;; Tracked objects:
  8731 ;;		On entry : 0/0
  8732 ;;		On exit  : 0/0
  8733 ;;		Unchanged: 0/0
  8734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8735 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8736 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8737 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8738 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8739 ;;Total ram usage:        6 bytes
  8740 ;; Hardware stack levels used:    1
  8741 ;; Hardware stack levels required when called:    3
  8742 ;; This function calls:
  8743 ;;		___awtoft
  8744 ;;		___ftadd
  8745 ;;		___ftge
  8746 ;;		___ftmul
  8747 ;;		_eval_poly
  8748 ;;		_frexp
  8749 ;; This function is called by:
  8750 ;;		_tempCalc
  8751 ;; This function uses a non-reentrant model
  8752 ;;
  8753                           
  8754                           
  8755                           ;psect for function _log
  8756  0AF8                     _log:	
  8757                           
  8758                           ;incstack = 0
  8759                           ; Regs used in _log: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8760  0AF8  0020               	movlb	0	; select bank0
  8761  0AF9  0857               	movf	log@x,w
  8762  0AFA  00F0               	movwf	___ftge@ff1
  8763  0AFB  0858               	movf	log@x+1,w
  8764  0AFC  00F1               	movwf	___ftge@ff1+1
  8765  0AFD  0859               	movf	log@x+2,w
  8766  0AFE  00F2               	movwf	___ftge@ff1+2
  8767  0AFF  3000               	movlw	0
  8768  0B00  00F3               	movwf	___ftge@ff2
  8769  0B01  3000               	movlw	0
  8770  0B02  00F4               	movwf	___ftge@ff2+1
  8771  0B03  3000               	movlw	0
  8772  0B04  00F5               	movwf	___ftge@ff2+2
  8773  0B05  3194  2485  318A   	fcall	___ftge
  8774  0B08  1803               	btfsc	3,0
  8775  0B09  2B17               	goto	l3869
  8776  0B0A  3021               	movlw	33
  8777  0B0B  0021               	movlb	1	; select bank1
  8778  0B0C  00B0               	movwf	_errno^(0+128)
  8779  0B0D  3000               	movlw	0
  8780  0B0E  00B1               	movwf	(_errno^(0+128)+1)
  8781  0B0F  3000               	movlw	0
  8782  0B10  0020               	movlb	0	; select bank0
  8783  0B11  00D7               	movwf	?_log
  8784  0B12  3000               	movlw	0
  8785  0B13  00D8               	movwf	?_log+1
  8786  0B14  3000               	movlw	0
  8787  0B15  00D9               	movwf	?_log+2
  8788  0B16  0008               	return
  8789  0B17                     l3869:	
  8790  0B17  0020               	movlb	0	; select bank0
  8791  0B18  0859               	movf	log@x+2,w
  8792  0B19  0458               	iorwf	log@x+1,w
  8793  0B1A  0457               	iorwf	log@x,w
  8794  0B1B  1D03               	skipz
  8795  0B1C  2B2A               	goto	l3875
  8796  0B1D  3022               	movlw	34
  8797  0B1E  0021               	movlb	1	; select bank1
  8798  0B1F  00B0               	movwf	_errno^(0+128)
  8799  0B20  3000               	movlw	0
  8800  0B21  00B1               	movwf	(_errno^(0+128)+1)
  8801  0B22  3000               	movlw	0
  8802  0B23  0020               	movlb	0	; select bank0
  8803  0B24  00D7               	movwf	?_log
  8804  0B25  3000               	movlw	0
  8805  0B26  00D8               	movwf	?_log+1
  8806  0B27  3000               	movlw	0
  8807  0B28  00D9               	movwf	?_log+2
  8808  0B29  0008               	return
  8809  0B2A                     l3875:	
  8810  0B2A  3000               	movlw	0
  8811  0B2B  00C0               	movwf	___ftadd@f1
  8812  0B2C  3080               	movlw	128
  8813  0B2D  00C1               	movwf	___ftadd@f1+1
  8814  0B2E  30BF               	movlw	191
  8815  0B2F  00C2               	movwf	___ftadd@f1+2
  8816  0B30  3000               	movlw	0
  8817  0B31  00B0               	movwf	___ftmul@f1
  8818  0B32  3000               	movlw	0
  8819  0B33  00B1               	movwf	___ftmul@f1+1
  8820  0B34  3040               	movlw	64
  8821  0B35  00B2               	movwf	___ftmul@f1+2
  8822  0B36  305B               	movlw	(low (log@exponent| 0))& (0+255)
  8823  0B37  00DA               	movwf	??_log
  8824  0B38  085A               	movf	??_log,w
  8825  0B39  00F3               	movwf	frexp@eptr
  8826  0B3A  0857               	movf	log@x,w
  8827  0B3B  00F0               	movwf	frexp@value
  8828  0B3C  0858               	movf	log@x+1,w
  8829  0B3D  00F1               	movwf	frexp@value+1
  8830  0B3E  0859               	movf	log@x+2,w
  8831  0B3F  00F2               	movwf	frexp@value+2
  8832  0B40  3194  24C0  318A   	fcall	_frexp
  8833  0B43  0870               	movf	?_frexp,w
  8834  0B44  0020               	movlb	0	; select bank0
  8835  0B45  00B3               	movwf	___ftmul@f2
  8836  0B46  0871               	movf	?_frexp+1,w
  8837  0B47  00B4               	movwf	___ftmul@f2+1
  8838  0B48  0872               	movf	?_frexp+2,w
  8839  0B49  00B5               	movwf	___ftmul@f2+2
  8840  0B4A  318B  23A8  318A   	fcall	___ftmul
  8841  0B4D  0020               	movlb	0	; select bank0
  8842  0B4E  0830               	movf	?___ftmul,w
  8843  0B4F  00C3               	movwf	___ftadd@f2
  8844  0B50  0831               	movf	?___ftmul+1,w
  8845  0B51  00C4               	movwf	___ftadd@f2+1
  8846  0B52  0832               	movf	?___ftmul+2,w
  8847  0B53  00C5               	movwf	___ftadd@f2+2
  8848  0B54  318D  25ED  318A   	fcall	___ftadd
  8849  0B57  0020               	movlb	0	; select bank0
  8850  0B58  0840               	movf	?___ftadd,w
  8851  0B59  00D7               	movwf	log@x
  8852  0B5A  0841               	movf	?___ftadd+1,w
  8853  0B5B  00D8               	movwf	log@x+1
  8854  0B5C  0842               	movf	?___ftadd+2,w
  8855  0B5D  00D9               	movwf	log@x+2
  8856  0B5E  30FF               	movlw	255
  8857  0B5F  07DB               	addwf	log@exponent,f
  8858  0B60  30FF               	movlw	255
  8859  0B61  3DDC               	addwfc	log@exponent+1,f
  8860  0B62  0857               	movf	log@x,w
  8861  0B63  00CD               	movwf	eval_poly@x
  8862  0B64  0858               	movf	log@x+1,w
  8863  0B65  00CE               	movwf	eval_poly@x+1
  8864  0B66  0859               	movf	log@x+2,w
  8865  0B67  00CF               	movwf	eval_poly@x+2
  8866  0B68  3000               	movlw	low (log@coeff| (0+32768))
  8867  0B69  00D0               	movwf	eval_poly@d
  8868  0B6A  3098               	movlw	high (log@coeff| (0+32768))
  8869  0B6B  00D1               	movwf	eval_poly@d+1
  8870  0B6C  3008               	movlw	8
  8871  0B6D  00D2               	movwf	eval_poly@n
  8872  0B6E  3000               	movlw	0
  8873  0B6F  00D3               	movwf	eval_poly@n+1
  8874  0B70  3196  262E  318A   	fcall	_eval_poly
  8875  0B73  0020               	movlb	0	; select bank0
  8876  0B74  084D               	movf	?_eval_poly,w
  8877  0B75  00D7               	movwf	log@x
  8878  0B76  084E               	movf	?_eval_poly+1,w
  8879  0B77  00D8               	movwf	log@x+1
  8880  0B78  084F               	movf	?_eval_poly+2,w
  8881  0B79  00D9               	movwf	log@x+2
  8882  0B7A  0857               	movf	log@x,w
  8883  0B7B  00C0               	movwf	___ftadd@f1
  8884  0B7C  0858               	movf	log@x+1,w
  8885  0B7D  00C1               	movwf	___ftadd@f1+1
  8886  0B7E  0859               	movf	log@x+2,w
  8887  0B7F  00C2               	movwf	___ftadd@f1+2
  8888  0B80  3072               	movlw	114
  8889  0B81  00B0               	movwf	___ftmul@f1
  8890  0B82  3031               	movlw	49
  8891  0B83  00B1               	movwf	___ftmul@f1+1
  8892  0B84  303F               	movlw	63
  8893  0B85  00B2               	movwf	___ftmul@f1+2
  8894  0B86  085C               	movf	log@exponent+1,w
  8895  0B87  00F9               	movwf	___awtoft@c+1
  8896  0B88  085B               	movf	log@exponent,w
  8897  0B89  00F8               	movwf	___awtoft@c
  8898  0B8A  3193  2348  318A   	fcall	___awtoft
  8899  0B8D  0878               	movf	?___awtoft,w
  8900  0B8E  0020               	movlb	0	; select bank0
  8901  0B8F  00B3               	movwf	___ftmul@f2
  8902  0B90  0879               	movf	?___awtoft+1,w
  8903  0B91  00B4               	movwf	___ftmul@f2+1
  8904  0B92  087A               	movf	?___awtoft+2,w
  8905  0B93  00B5               	movwf	___ftmul@f2+2
  8906  0B94  318B  23A8  318A   	fcall	___ftmul
  8907  0B97  0020               	movlb	0	; select bank0
  8908  0B98  0830               	movf	?___ftmul,w
  8909  0B99  00C3               	movwf	___ftadd@f2
  8910  0B9A  0831               	movf	?___ftmul+1,w
  8911  0B9B  00C4               	movwf	___ftadd@f2+1
  8912  0B9C  0832               	movf	?___ftmul+2,w
  8913  0B9D  00C5               	movwf	___ftadd@f2+2
  8914  0B9E  318D  25ED         	fcall	___ftadd
  8915  0BA0  0020               	movlb	0	; select bank0
  8916  0BA1  0840               	movf	?___ftadd,w
  8917  0BA2  00D7               	movwf	?_log
  8918  0BA3  0841               	movf	?___ftadd+1,w
  8919  0BA4  00D8               	movwf	?_log+1
  8920  0BA5  0842               	movf	?___ftadd+2,w
  8921  0BA6  00D9               	movwf	?_log+2
  8922  0BA7  0008               	return
  8923  0BA8                     __end_of_log:	
  8924                           
  8925                           	psect	text3
  8926  14C0                     __ptext3:	
  8927 ;; *************** function _frexp *****************
  8928 ;; Defined at:
  8929 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\frexp.c"
  8930 ;; Parameters:    Size  Location     Type
  8931 ;;  value           3    0[COMMON] int 
  8932 ;;  eptr            1    3[COMMON] PTR int 
  8933 ;;		 -> log@exponent(2), 
  8934 ;; Auto vars:     Size  Location     Type
  8935 ;;		None
  8936 ;; Return value:  Size  Location     Type
  8937 ;;                  3    0[COMMON] PTR int 
  8938 ;; Registers used:
  8939 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8940 ;; Tracked objects:
  8941 ;;		On entry : 0/0
  8942 ;;		On exit  : 0/0
  8943 ;;		Unchanged: 0/0
  8944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8945 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8947 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8948 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8949 ;;Total ram usage:        6 bytes
  8950 ;; Hardware stack levels used:    1
  8951 ;; This function calls:
  8952 ;;		Nothing
  8953 ;; This function is called by:
  8954 ;;		_log
  8955 ;; This function uses a non-reentrant model
  8956 ;;
  8957                           
  8958                           
  8959                           ;psect for function _frexp
  8960  14C0                     _frexp:	
  8961                           
  8962                           ;incstack = 0
  8963                           ; Regs used in _frexp: [wreg+fsr1l+fsr1h+status,2+status,0]
  8964  14C0  0872               	movf	frexp@value+2,w
  8965  14C1  0471               	iorwf	frexp@value+1,w
  8966  14C2  0470               	iorwf	frexp@value,w
  8967  14C3  1D03               	skipz
  8968  14C4  2CD2               	goto	l3675
  8969  14C5  0873               	movf	frexp@eptr,w
  8970  14C6  0086               	movwf	6
  8971  14C7  0187               	clrf	7
  8972  14C8  3000               	movlw	0
  8973  14C9  3FC0               	movwi [0]fsr1
  8974  14CA  3FC1               	movwi [1]fsr1
  8975  14CB  3000               	movlw	0
  8976  14CC  00F0               	movwf	?_frexp
  8977  14CD  3000               	movlw	0
  8978  14CE  00F1               	movwf	?_frexp+1
  8979  14CF  3000               	movlw	0
  8980  14D0  00F2               	movwf	?_frexp+2
  8981  14D1  0008               	return
  8982  14D2                     l3675:	
  8983  14D2  0872               	movf	frexp@value+2,w
  8984  14D3  397F               	andlw	127
  8985  14D4  00F4               	movwf	??_frexp
  8986  14D5  01F5               	clrf	??_frexp+1
  8987  14D6  35F4               	lslf	??_frexp,f
  8988  14D7  0DF5               	rlf	??_frexp+1,f
  8989  14D8  0873               	movf	frexp@eptr,w
  8990  14D9  0086               	movwf	6
  8991  14DA  0187               	clrf	7
  8992  14DB  0874               	movf	??_frexp,w
  8993  14DC  3FC0               	movwi [0]fsr1
  8994  14DD  0875               	movf	??_frexp+1,w
  8995  14DE  3FC1               	movwi [1]fsr1
  8996  14DF  0D71               	rlf	frexp@value+1,w
  8997  14E0  0D71               	rlf	frexp@value+1,w
  8998  14E1  3901               	andlw	1
  8999  14E2  00F4               	movwf	??_frexp
  9000  14E3  01F5               	clrf	??_frexp+1
  9001  14E4  0873               	movf	frexp@eptr,w
  9002  14E5  0086               	movwf	6
  9003  14E6  0187               	clrf	7
  9004  14E7  0874               	movf	??_frexp,w
  9005  14E8  0481               	iorwf	1,f
  9006  14E9  3141               	addfsr 1,1
  9007  14EA  0875               	movf	??_frexp+1,w
  9008  14EB  0481               	iorwf	1,f
  9009  14EC  0873               	movf	frexp@eptr,w
  9010  14ED  0086               	movwf	6
  9011  14EE  0187               	clrf	7
  9012  14EF  3082               	movlw	130
  9013  14F0  0781               	addwf	1,f
  9014  14F1  3141               	addfsr 1,1
  9015  14F2  30FF               	movlw	255
  9016  14F3  3D81               	addwfc	1,f
  9017  14F4  317F               	addfsr 1,-1
  9018  14F5  0872               	movf	frexp@value+2,w
  9019  14F6  3980               	andlw	-128
  9020  14F7  383F               	iorlw	63
  9021  14F8  00F2               	movwf	frexp@value+2
  9022  14F9  13F1               	bcf	frexp@value+1,7
  9023  14FA  0008               	return
  9024  14FB                     __end_of_frexp:	
  9025                           
  9026                           	psect	text4
  9027  162E                     __ptext4:	
  9028 ;; *************** function _eval_poly *****************
  9029 ;; Defined at:
  9030 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\evalpoly.c"
  9031 ;; Parameters:    Size  Location     Type
  9032 ;;  x               3   45[BANK0 ] PTR int 
  9033 ;;  d               2   48[BANK0 ] PTR const 
  9034 ;;		 -> log@coeff(27), 
  9035 ;;  n               2   50[BANK0 ] int 
  9036 ;; Auto vars:     Size  Location     Type
  9037 ;;  res             3   52[BANK0 ] int 
  9038 ;; Return value:  Size  Location     Type
  9039 ;;                  3   45[BANK0 ] int 
  9040 ;; Registers used:
  9041 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9042 ;; Tracked objects:
  9043 ;;		On entry : 0/0
  9044 ;;		On exit  : 0/0
  9045 ;;		Unchanged: 0/0
  9046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9047 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9048 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9050 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9051 ;;Total ram usage:       10 bytes
  9052 ;; Hardware stack levels used:    1
  9053 ;; Hardware stack levels required when called:    2
  9054 ;; This function calls:
  9055 ;;		___ftadd
  9056 ;;		___ftmul
  9057 ;;		___wmul
  9058 ;; This function is called by:
  9059 ;;		_log
  9060 ;; This function uses a non-reentrant model
  9061 ;;
  9062                           
  9063                           
  9064                           ;psect for function _eval_poly
  9065  162E                     _eval_poly:	
  9066                           
  9067                           ;incstack = 0
  9068                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9069  162E  0020               	movlb	0	; select bank0
  9070  162F  0853               	movf	eval_poly@n+1,w
  9071  1630  00FA               	movwf	___wmul@multiplier+1
  9072  1631  0852               	movf	eval_poly@n,w
  9073  1632  00F9               	movwf	___wmul@multiplier
  9074  1633  3003               	movlw	3
  9075  1634  00FB               	movwf	___wmul@multiplicand
  9076  1635  3000               	movlw	0
  9077  1636  00FC               	movwf	___wmul@multiplicand+1
  9078  1637  3192  22CE  3196   	fcall	___wmul
  9079  163A  0020               	movlb	0	; select bank0
  9080  163B  0850               	movf	eval_poly@d,w
  9081  163C  0779               	addwf	?___wmul,w
  9082  163D  0084               	movwf	4
  9083  163E  0851               	movf	eval_poly@d+1,w
  9084  163F  3D7A               	addwfc	?___wmul+1,w
  9085  1640  0085               	movwf	5
  9086  1641  3F00               	moviw [0]fsr0
  9087  1642  00D4               	movwf	eval_poly@res
  9088  1643  3F01               	moviw [1]fsr0
  9089  1644  00D5               	movwf	eval_poly@res+1
  9090  1645  3F02               	moviw [2]fsr0
  9091  1646                     L4:	
  9092  1646  00D6               	movwf	eval_poly@res+2
  9093  1647  0852               	movf	eval_poly@n,w
  9094  1648  0453               	iorwf	eval_poly@n+1,w
  9095  1649  1903               	btfsc	3,2
  9096  164A  2E87               	goto	l3693
  9097  164B  30FF               	movlw	255
  9098  164C  07D2               	addwf	eval_poly@n,f
  9099  164D  30FF               	movlw	255
  9100  164E  3DD3               	addwfc	eval_poly@n+1,f
  9101  164F  0853               	movf	eval_poly@n+1,w
  9102  1650  00FA               	movwf	___wmul@multiplier+1
  9103  1651  0852               	movf	eval_poly@n,w
  9104  1652  00F9               	movwf	___wmul@multiplier
  9105  1653  3003               	movlw	3
  9106  1654  00FB               	movwf	___wmul@multiplicand
  9107  1655  3000               	movlw	0
  9108  1656  00FC               	movwf	___wmul@multiplicand+1
  9109  1657  3192  22CE  3196   	fcall	___wmul
  9110  165A  0020               	movlb	0	; select bank0
  9111  165B  0850               	movf	eval_poly@d,w
  9112  165C  0779               	addwf	?___wmul,w
  9113  165D  0084               	movwf	4
  9114  165E  0851               	movf	eval_poly@d+1,w
  9115  165F  3D7A               	addwfc	?___wmul+1,w
  9116  1660  0085               	movwf	5
  9117  1661  3F00               	moviw [0]fsr0
  9118  1662  00C0               	movwf	___ftadd@f1
  9119  1663  3F01               	moviw [1]fsr0
  9120  1664  00C1               	movwf	___ftadd@f1+1
  9121  1665  3F02               	moviw [2]fsr0
  9122  1666  00C2               	movwf	___ftadd@f1+2
  9123  1667  0854               	movf	eval_poly@res,w
  9124  1668  00B0               	movwf	___ftmul@f1
  9125  1669  0855               	movf	eval_poly@res+1,w
  9126  166A  00B1               	movwf	___ftmul@f1+1
  9127  166B  0856               	movf	eval_poly@res+2,w
  9128  166C  00B2               	movwf	___ftmul@f1+2
  9129  166D  084D               	movf	eval_poly@x,w
  9130  166E  00B3               	movwf	___ftmul@f2
  9131  166F  084E               	movf	eval_poly@x+1,w
  9132  1670  00B4               	movwf	___ftmul@f2+1
  9133  1671  084F               	movf	eval_poly@x+2,w
  9134  1672  00B5               	movwf	___ftmul@f2+2
  9135  1673  318B  23A8  3196   	fcall	___ftmul
  9136  1676  0020               	movlb	0	; select bank0
  9137  1677  0830               	movf	?___ftmul,w
  9138  1678  00C3               	movwf	___ftadd@f2
  9139  1679  0831               	movf	?___ftmul+1,w
  9140  167A  00C4               	movwf	___ftadd@f2+1
  9141  167B  0832               	movf	?___ftmul+2,w
  9142  167C  00C5               	movwf	___ftadd@f2+2
  9143  167D  318D  25ED  3196   	fcall	___ftadd
  9144  1680  0020               	movlb	0	; select bank0
  9145  1681  0840               	movf	?___ftadd,w
  9146  1682  00D4               	movwf	eval_poly@res
  9147  1683  0841               	movf	?___ftadd+1,w
  9148  1684  00D5               	movwf	eval_poly@res+1
  9149  1685  0842               	movf	?___ftadd+2,w
  9150  1686  2E46               	goto	L4
  9151  1687                     l3693:	
  9152  1687  0854               	movf	eval_poly@res,w
  9153  1688  00CD               	movwf	?_eval_poly
  9154  1689  0855               	movf	eval_poly@res+1,w
  9155  168A  00CE               	movwf	?_eval_poly+1
  9156  168B  0856               	movf	eval_poly@res+2,w
  9157  168C  00CF               	movwf	?_eval_poly+2
  9158  168D  0008               	return
  9159  168E                     __end_of_eval_poly:	
  9160                           
  9161                           	psect	text5
  9162  0BA8                     __ptext5:	
  9163 ;; *************** function ___ftmul *****************
  9164 ;; Defined at:
  9165 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
  9166 ;; Parameters:    Size  Location     Type
  9167 ;;  f1              3   16[BANK0 ] float 
  9168 ;;  f2              3   19[BANK0 ] float 
  9169 ;; Auto vars:     Size  Location     Type
  9170 ;;  f3_as_produc    3   27[BANK0 ] unsigned um
  9171 ;;  sign            1   31[BANK0 ] unsigned char 
  9172 ;;  cntr            1   30[BANK0 ] unsigned char 
  9173 ;;  exp             1   26[BANK0 ] unsigned char 
  9174 ;; Return value:  Size  Location     Type
  9175 ;;                  3   16[BANK0 ] float 
  9176 ;; Registers used:
  9177 ;;		wreg, status,2, status,0, pclath, cstack
  9178 ;; Tracked objects:
  9179 ;;		On entry : 0/0
  9180 ;;		On exit  : 0/0
  9181 ;;		Unchanged: 0/0
  9182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9183 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9184 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9185 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9186 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9187 ;;Total ram usage:       16 bytes
  9188 ;; Hardware stack levels used:    1
  9189 ;; Hardware stack levels required when called:    1
  9190 ;; This function calls:
  9191 ;;		___ftpack
  9192 ;; This function is called by:
  9193 ;;		_main
  9194 ;;		_tempCalc
  9195 ;;		_log
  9196 ;;		_eval_poly
  9197 ;; This function uses a non-reentrant model
  9198 ;;
  9199                           
  9200                           
  9201                           ;psect for function ___ftmul
  9202  0BA8                     ___ftmul:	
  9203                           
  9204                           ;incstack = 0
  9205                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  9206  0BA8  0020               	movlb	0	; select bank0
  9207  0BA9  0830               	movf	___ftmul@f1,w
  9208  0BAA  00B6               	movwf	??___ftmul
  9209  0BAB  0831               	movf	___ftmul@f1+1,w
  9210  0BAC  00B7               	movwf	??___ftmul+1
  9211  0BAD  0832               	movf	___ftmul@f1+2,w
  9212  0BAE  00B8               	movwf	??___ftmul+2
  9213  0BAF  1003               	clrc
  9214  0BB0  0D37               	rlf	??___ftmul+1,w
  9215  0BB1  0D38               	rlf	??___ftmul+2,w
  9216  0BB2  00B9               	movwf	??___ftmul+3
  9217  0BB3  0839               	movf	??___ftmul+3,w
  9218  0BB4  00BA               	movwf	___ftmul@exp
  9219  0BB5  083A               	movf	___ftmul@exp,w
  9220  0BB6  1D03               	btfss	3,2
  9221  0BB7  2BBF               	goto	l3577
  9222  0BB8  3000               	movlw	0
  9223  0BB9  00B0               	movwf	?___ftmul
  9224  0BBA  3000               	movlw	0
  9225  0BBB  00B1               	movwf	?___ftmul+1
  9226  0BBC  3000               	movlw	0
  9227  0BBD  00B2               	movwf	?___ftmul+2
  9228  0BBE  0008               	return
  9229  0BBF                     l3577:	
  9230  0BBF  0833               	movf	___ftmul@f2,w
  9231  0BC0  00B6               	movwf	??___ftmul
  9232  0BC1  0834               	movf	___ftmul@f2+1,w
  9233  0BC2  00B7               	movwf	??___ftmul+1
  9234  0BC3  0835               	movf	___ftmul@f2+2,w
  9235  0BC4  00B8               	movwf	??___ftmul+2
  9236  0BC5  1003               	clrc
  9237  0BC6  0D37               	rlf	??___ftmul+1,w
  9238  0BC7  0D38               	rlf	??___ftmul+2,w
  9239  0BC8  00B9               	movwf	??___ftmul+3
  9240  0BC9  0839               	movf	??___ftmul+3,w
  9241  0BCA  00BF               	movwf	___ftmul@sign
  9242  0BCB  083F               	movf	___ftmul@sign,w
  9243  0BCC  1D03               	btfss	3,2
  9244  0BCD  2BD5               	goto	l3583
  9245  0BCE  3000               	movlw	0
  9246  0BCF  00B0               	movwf	?___ftmul
  9247  0BD0  3000               	movlw	0
  9248  0BD1  00B1               	movwf	?___ftmul+1
  9249  0BD2  3000               	movlw	0
  9250  0BD3  00B2               	movwf	?___ftmul+2
  9251  0BD4  0008               	return
  9252  0BD5                     l3583:	
  9253  0BD5  083F               	movf	___ftmul@sign,w
  9254  0BD6  3E7B               	addlw	123
  9255  0BD7  00B6               	movwf	??___ftmul
  9256  0BD8  0836               	movf	??___ftmul,w
  9257  0BD9  07BA               	addwf	___ftmul@exp,f
  9258  0BDA  0830               	movf	___ftmul@f1,w
  9259  0BDB  00B6               	movwf	??___ftmul
  9260  0BDC  0831               	movf	___ftmul@f1+1,w
  9261  0BDD  00B7               	movwf	??___ftmul+1
  9262  0BDE  0832               	movf	___ftmul@f1+2,w
  9263  0BDF  00B8               	movwf	??___ftmul+2
  9264  0BE0  3010               	movlw	16
  9265  0BE1                     u4295:	
  9266  0BE1  36B8               	lsrf	??___ftmul+2,f
  9267  0BE2  0CB7               	rrf	??___ftmul+1,f
  9268  0BE3  0CB6               	rrf	??___ftmul,f
  9269  0BE4  0B89               	decfsz	9,f
  9270  0BE5  2BE1               	goto	u4295
  9271  0BE6  0836               	movf	??___ftmul,w
  9272  0BE7  00B9               	movwf	??___ftmul+3
  9273  0BE8  0839               	movf	??___ftmul+3,w
  9274  0BE9  00BF               	movwf	___ftmul@sign
  9275  0BEA  0833               	movf	___ftmul@f2,w
  9276  0BEB  00B6               	movwf	??___ftmul
  9277  0BEC  0834               	movf	___ftmul@f2+1,w
  9278  0BED  00B7               	movwf	??___ftmul+1
  9279  0BEE  0835               	movf	___ftmul@f2+2,w
  9280  0BEF  00B8               	movwf	??___ftmul+2
  9281  0BF0  3010               	movlw	16
  9282  0BF1                     u4305:	
  9283  0BF1  36B8               	lsrf	??___ftmul+2,f
  9284  0BF2  0CB7               	rrf	??___ftmul+1,f
  9285  0BF3  0CB6               	rrf	??___ftmul,f
  9286  0BF4  0B89               	decfsz	9,f
  9287  0BF5  2BF1               	goto	u4305
  9288  0BF6  0836               	movf	??___ftmul,w
  9289  0BF7  00B9               	movwf	??___ftmul+3
  9290  0BF8  0839               	movf	??___ftmul+3,w
  9291  0BF9  06BF               	xorwf	___ftmul@sign,f
  9292  0BFA  3080               	movlw	128
  9293  0BFB  00B6               	movwf	??___ftmul
  9294  0BFC  0836               	movf	??___ftmul,w
  9295  0BFD  05BF               	andwf	___ftmul@sign,f
  9296  0BFE  17B1               	bsf	___ftmul@f1+1,7
  9297  0BFF  17B4               	bsf	___ftmul@f2+1,7
  9298  0C00  30FF               	movlw	255
  9299  0C01  05B3               	andwf	___ftmul@f2,f
  9300  0C02  30FF               	movlw	255
  9301  0C03  05B4               	andwf	___ftmul@f2+1,f
  9302  0C04  3000               	movlw	0
  9303  0C05  05B5               	andwf	___ftmul@f2+2,f
  9304  0C06  3000               	movlw	0
  9305  0C07  00BB               	movwf	___ftmul@f3_as_product
  9306  0C08  3000               	movlw	0
  9307  0C09  00BC               	movwf	___ftmul@f3_as_product+1
  9308  0C0A  3000               	movlw	0
  9309  0C0B  00BD               	movwf	___ftmul@f3_as_product+2
  9310  0C0C  3007               	movlw	7
  9311  0C0D  00B6               	movwf	??___ftmul
  9312  0C0E  0836               	movf	??___ftmul,w
  9313  0C0F  00BE               	movwf	___ftmul@cntr
  9314  0C10                     l3595:	
  9315  0C10  1C30               	btfss	___ftmul@f1,0
  9316  0C11  2C18               	goto	l3599
  9317  0C12  0833               	movf	___ftmul@f2,w
  9318  0C13  07BB               	addwf	___ftmul@f3_as_product,f
  9319  0C14  0834               	movf	___ftmul@f2+1,w
  9320  0C15  3DBC               	addwfc	___ftmul@f3_as_product+1,f
  9321  0C16  0835               	movf	___ftmul@f2+2,w
  9322  0C17  3DBD               	addwfc	___ftmul@f3_as_product+2,f
  9323  0C18                     l3599:	
  9324  0C18  3001               	movlw	1
  9325  0C19                     u4325:	
  9326  0C19  36B2               	lsrf	___ftmul@f1+2,f
  9327  0C1A  0CB1               	rrf	___ftmul@f1+1,f
  9328  0C1B  0CB0               	rrf	___ftmul@f1,f
  9329  0C1C  0B89               	decfsz	9,f
  9330  0C1D  2C19               	goto	u4325
  9331  0C1E  3001               	movlw	1
  9332  0C1F                     u4335:	
  9333  0C1F  35B3               	lslf	___ftmul@f2,f
  9334  0C20  0DB4               	rlf	___ftmul@f2+1,f
  9335  0C21  0DB5               	rlf	___ftmul@f2+2,f
  9336  0C22  0B89               	decfsz	9,f
  9337  0C23  2C1F               	goto	u4335
  9338  0C24  3001               	movlw	1
  9339  0C25  02BE               	subwf	___ftmul@cntr,f
  9340  0C26  1D03               	btfss	3,2
  9341  0C27  2C10               	goto	l3595
  9342  0C28  3009               	movlw	9
  9343  0C29  00B6               	movwf	??___ftmul
  9344  0C2A  0836               	movf	??___ftmul,w
  9345  0C2B  00BE               	movwf	___ftmul@cntr
  9346  0C2C                     l3607:	
  9347  0C2C  1C30               	btfss	___ftmul@f1,0
  9348  0C2D  2C34               	goto	l3611
  9349  0C2E  0833               	movf	___ftmul@f2,w
  9350  0C2F  07BB               	addwf	___ftmul@f3_as_product,f
  9351  0C30  0834               	movf	___ftmul@f2+1,w
  9352  0C31  3DBC               	addwfc	___ftmul@f3_as_product+1,f
  9353  0C32  0835               	movf	___ftmul@f2+2,w
  9354  0C33  3DBD               	addwfc	___ftmul@f3_as_product+2,f
  9355  0C34                     l3611:	
  9356  0C34  3001               	movlw	1
  9357  0C35                     u4365:	
  9358  0C35  36B2               	lsrf	___ftmul@f1+2,f
  9359  0C36  0CB1               	rrf	___ftmul@f1+1,f
  9360  0C37  0CB0               	rrf	___ftmul@f1,f
  9361  0C38  0B89               	decfsz	9,f
  9362  0C39  2C35               	goto	u4365
  9363  0C3A  3001               	movlw	1
  9364  0C3B                     u4375:	
  9365  0C3B  36BD               	lsrf	___ftmul@f3_as_product+2,f
  9366  0C3C  0CBC               	rrf	___ftmul@f3_as_product+1,f
  9367  0C3D  0CBB               	rrf	___ftmul@f3_as_product,f
  9368  0C3E  0B89               	decfsz	9,f
  9369  0C3F  2C3B               	goto	u4375
  9370  0C40  3001               	movlw	1
  9371  0C41  02BE               	subwf	___ftmul@cntr,f
  9372  0C42  1D03               	btfss	3,2
  9373  0C43  2C2C               	goto	l3607
  9374  0C44  083B               	movf	___ftmul@f3_as_product,w
  9375  0C45  00F0               	movwf	___ftpack@arg
  9376  0C46  083C               	movf	___ftmul@f3_as_product+1,w
  9377  0C47  00F1               	movwf	___ftpack@arg+1
  9378  0C48  083D               	movf	___ftmul@f3_as_product+2,w
  9379  0C49  00F2               	movwf	___ftpack@arg+2
  9380  0C4A  083A               	movf	___ftmul@exp,w
  9381  0C4B  00B6               	movwf	??___ftmul
  9382  0C4C  0836               	movf	??___ftmul,w
  9383  0C4D  00F3               	movwf	___ftpack@exp
  9384  0C4E  083F               	movf	___ftmul@sign,w
  9385  0C4F  00B7               	movwf	??___ftmul+1
  9386  0C50  0837               	movf	??___ftmul+1,w
  9387  0C51  00F4               	movwf	___ftpack@sign
  9388  0C52  3196  268E         	fcall	___ftpack
  9389  0C54  0870               	movf	?___ftpack,w
  9390  0C55  0020               	movlb	0	; select bank0
  9391  0C56  00B0               	movwf	?___ftmul
  9392  0C57  0871               	movf	?___ftpack+1,w
  9393  0C58  00B1               	movwf	?___ftmul+1
  9394  0C59  0872               	movf	?___ftpack+2,w
  9395  0C5A  00B2               	movwf	?___ftmul+2
  9396  0C5B  0008               	return
  9397  0C5C                     __end_of___ftmul:	
  9398                           
  9399                           	psect	text6
  9400  1485                     __ptext6:	
  9401 ;; *************** function ___ftge *****************
  9402 ;; Defined at:
  9403 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftge.c"
  9404 ;; Parameters:    Size  Location     Type
  9405 ;;  ff1             3    0[COMMON] float 
  9406 ;;  ff2             3    3[COMMON] float 
  9407 ;; Auto vars:     Size  Location     Type
  9408 ;;		None
  9409 ;; Return value:  Size  Location     Type
  9410 ;;		None               void
  9411 ;; Registers used:
  9412 ;;		wreg, status,2, status,0
  9413 ;; Tracked objects:
  9414 ;;		On entry : 0/0
  9415 ;;		On exit  : 0/0
  9416 ;;		Unchanged: 0/0
  9417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9418 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9420 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9421 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9422 ;;Total ram usage:        9 bytes
  9423 ;; Hardware stack levels used:    1
  9424 ;; This function calls:
  9425 ;;		Nothing
  9426 ;; This function is called by:
  9427 ;;		_log
  9428 ;; This function uses a non-reentrant model
  9429 ;;
  9430                           
  9431                           
  9432                           ;psect for function ___ftge
  9433  1485                     ___ftge:	
  9434                           
  9435                           ;incstack = 0
  9436                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  9437  1485  1FF2               	btfss	___ftge@ff1+2,7
  9438  1486  2C9B               	goto	l3651
  9439  1487  0970               	comf	___ftge@ff1,w
  9440  1488  00F6               	movwf	??___ftge
  9441  1489  0971               	comf	___ftge@ff1+1,w
  9442  148A  00F7               	movwf	??___ftge+1
  9443  148B  0972               	comf	___ftge@ff1+2,w
  9444  148C  00F8               	movwf	??___ftge+2
  9445  148D  0AF6               	incf	??___ftge,f
  9446  148E  1903               	skipnz
  9447  148F  0AF7               	incf	??___ftge+1,f
  9448  1490  1903               	skipnz
  9449  1491  0AF8               	incf	??___ftge+2,f
  9450  1492  3000               	movlw	0
  9451  1493  0776               	addwf	??___ftge,w
  9452  1494  00F0               	movwf	___ftge@ff1
  9453  1495  3000               	movlw	0
  9454  1496  3D77               	addwfc	??___ftge+1,w
  9455  1497  00F1               	movwf	___ftge@ff1+1
  9456  1498  3080               	movlw	128
  9457  1499  3D78               	addwfc	??___ftge+2,w
  9458  149A  00F2               	movwf	___ftge@ff1+2
  9459  149B                     l3651:	
  9460  149B  1FF5               	btfss	___ftge@ff2+2,7
  9461  149C  2CB1               	goto	l3655
  9462  149D  0973               	comf	___ftge@ff2,w
  9463  149E  00F6               	movwf	??___ftge
  9464  149F  0974               	comf	___ftge@ff2+1,w
  9465  14A0  00F7               	movwf	??___ftge+1
  9466  14A1  0975               	comf	___ftge@ff2+2,w
  9467  14A2  00F8               	movwf	??___ftge+2
  9468  14A3  0AF6               	incf	??___ftge,f
  9469  14A4  1903               	skipnz
  9470  14A5  0AF7               	incf	??___ftge+1,f
  9471  14A6  1903               	skipnz
  9472  14A7  0AF8               	incf	??___ftge+2,f
  9473  14A8  3000               	movlw	0
  9474  14A9  0776               	addwf	??___ftge,w
  9475  14AA  00F3               	movwf	___ftge@ff2
  9476  14AB  3000               	movlw	0
  9477  14AC  3D77               	addwfc	??___ftge+1,w
  9478  14AD  00F4               	movwf	___ftge@ff2+1
  9479  14AE  3080               	movlw	128
  9480  14AF  3D78               	addwfc	??___ftge+2,w
  9481  14B0  00F5               	movwf	___ftge@ff2+2
  9482  14B1                     l3655:	
  9483  14B1  3080               	movlw	128
  9484  14B2  06F2               	xorwf	___ftge@ff1+2,f
  9485  14B3  3080               	movlw	128
  9486  14B4  06F5               	xorwf	___ftge@ff2+2,f
  9487  14B5  0875               	movf	___ftge@ff2+2,w
  9488  14B6  0272               	subwf	___ftge@ff1+2,w
  9489  14B7  1D03               	skipz
  9490  14B8  0008               	return
  9491  14B9  0874               	movf	___ftge@ff2+1,w
  9492  14BA  0271               	subwf	___ftge@ff1+1,w
  9493  14BB  1D03               	skipz
  9494  14BC  0008               	return
  9495  14BD  0873               	movf	___ftge@ff2,w
  9496  14BE  0270               	subwf	___ftge@ff1,w
  9497  14BF  0008               	return
  9498  14C0                     __end_of___ftge:	
  9499                           
  9500                           	psect	text7
  9501  12EC                     __ptext7:	
  9502 ;; *************** function ___ftsub *****************
  9503 ;; Defined at:
  9504 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftsub.c"
  9505 ;; Parameters:    Size  Location     Type
  9506 ;;  f2              3   45[BANK0 ] float 
  9507 ;;  f1              3   48[BANK0 ] float 
  9508 ;; Auto vars:     Size  Location     Type
  9509 ;;		None
  9510 ;; Return value:  Size  Location     Type
  9511 ;;                  3   45[BANK0 ] float 
  9512 ;; Registers used:
  9513 ;;		wreg, status,2, status,0, pclath, cstack
  9514 ;; Tracked objects:
  9515 ;;		On entry : 0/0
  9516 ;;		On exit  : 0/0
  9517 ;;		Unchanged: 0/0
  9518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9519 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9522 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9523 ;;Total ram usage:        6 bytes
  9524 ;; Hardware stack levels used:    1
  9525 ;; Hardware stack levels required when called:    2
  9526 ;; This function calls:
  9527 ;;		___ftadd
  9528 ;; This function is called by:
  9529 ;;		_tempCalc
  9530 ;; This function uses a non-reentrant model
  9531 ;;
  9532                           
  9533                           
  9534                           ;psect for function ___ftsub
  9535  12EC                     ___ftsub:	
  9536                           
  9537                           ;incstack = 0
  9538                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  9539  12EC  0020               	movlb	0	; select bank0
  9540  12ED  084F               	movf	___ftsub@f2+2,w
  9541  12EE  044E               	iorwf	___ftsub@f2+1,w
  9542  12EF  044D               	iorwf	___ftsub@f2,w
  9543  12F0  1903               	skipnz
  9544  12F1  2AF4               	goto	l4015
  9545  12F2  3080               	movlw	128
  9546  12F3  06CF               	xorwf	___ftsub@f2+2,f
  9547  12F4                     l4015:	
  9548  12F4  0850               	movf	___ftsub@f1,w
  9549  12F5  00C0               	movwf	___ftadd@f1
  9550  12F6  0851               	movf	___ftsub@f1+1,w
  9551  12F7  00C1               	movwf	___ftadd@f1+1
  9552  12F8  0852               	movf	___ftsub@f1+2,w
  9553  12F9  00C2               	movwf	___ftadd@f1+2
  9554  12FA  084D               	movf	___ftsub@f2,w
  9555  12FB  00C3               	movwf	___ftadd@f2
  9556  12FC  084E               	movf	___ftsub@f2+1,w
  9557  12FD  00C4               	movwf	___ftadd@f2+1
  9558  12FE  084F               	movf	___ftsub@f2+2,w
  9559  12FF  00C5               	movwf	___ftadd@f2+2
  9560  1300  318D  25ED         	fcall	___ftadd
  9561  1302  0020               	movlb	0	; select bank0
  9562  1303  0840               	movf	?___ftadd,w
  9563  1304  00CD               	movwf	?___ftsub
  9564  1305  0841               	movf	?___ftadd+1,w
  9565  1306  00CE               	movwf	?___ftsub+1
  9566  1307  0842               	movf	?___ftadd+2,w
  9567  1308  00CF               	movwf	?___ftsub+2
  9568  1309  0008               	return
  9569  130A                     __end_of___ftsub:	
  9570                           
  9571                           	psect	text8
  9572  0DED                     __ptext8:	
  9573 ;; *************** function ___ftadd *****************
  9574 ;; Defined at:
  9575 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
  9576 ;; Parameters:    Size  Location     Type
  9577 ;;  f1              3   32[BANK0 ] float 
  9578 ;;  f2              3   35[BANK0 ] float 
  9579 ;; Auto vars:     Size  Location     Type
  9580 ;;  exp1            1   44[BANK0 ] unsigned char 
  9581 ;;  exp2            1   43[BANK0 ] unsigned char 
  9582 ;;  sign            1   42[BANK0 ] unsigned char 
  9583 ;; Return value:  Size  Location     Type
  9584 ;;                  3   32[BANK0 ] float 
  9585 ;; Registers used:
  9586 ;;		wreg, status,2, status,0, pclath, cstack
  9587 ;; Tracked objects:
  9588 ;;		On entry : 0/0
  9589 ;;		On exit  : 0/0
  9590 ;;		Unchanged: 0/0
  9591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9592 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9593 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9594 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9595 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9596 ;;Total ram usage:       13 bytes
  9597 ;; Hardware stack levels used:    1
  9598 ;; Hardware stack levels required when called:    1
  9599 ;; This function calls:
  9600 ;;		___ftpack
  9601 ;; This function is called by:
  9602 ;;		_tempCalc
  9603 ;;		___ftsub
  9604 ;;		_log
  9605 ;;		_eval_poly
  9606 ;; This function uses a non-reentrant model
  9607 ;;
  9608                           
  9609                           
  9610                           ;psect for function ___ftadd
  9611  0DED                     ___ftadd:	
  9612                           
  9613                           ;incstack = 0
  9614                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  9615  0DED  0020               	movlb	0	; select bank0
  9616  0DEE  0840               	movf	___ftadd@f1,w
  9617  0DEF  00C6               	movwf	??___ftadd
  9618  0DF0  0841               	movf	___ftadd@f1+1,w
  9619  0DF1  00C7               	movwf	??___ftadd+1
  9620  0DF2  0842               	movf	___ftadd@f1+2,w
  9621  0DF3  00C8               	movwf	??___ftadd+2
  9622  0DF4  1003               	clrc
  9623  0DF5  0D47               	rlf	??___ftadd+1,w
  9624  0DF6  0D48               	rlf	??___ftadd+2,w
  9625  0DF7  00C9               	movwf	??___ftadd+3
  9626  0DF8  0849               	movf	??___ftadd+3,w
  9627  0DF9  00CC               	movwf	___ftadd@exp1
  9628  0DFA  0843               	movf	___ftadd@f2,w
  9629  0DFB  00C6               	movwf	??___ftadd
  9630  0DFC  0844               	movf	___ftadd@f2+1,w
  9631  0DFD  00C7               	movwf	??___ftadd+1
  9632  0DFE  0845               	movf	___ftadd@f2+2,w
  9633  0DFF  00C8               	movwf	??___ftadd+2
  9634  0E00  1003               	clrc
  9635  0E01  0D47               	rlf	??___ftadd+1,w
  9636  0E02  0D48               	rlf	??___ftadd+2,w
  9637  0E03  00C9               	movwf	??___ftadd+3
  9638  0E04  0849               	movf	??___ftadd+3,w
  9639  0E05  00CB               	movwf	___ftadd@exp2
  9640  0E06  084C               	movf	___ftadd@exp1,w
  9641  0E07  1903               	btfsc	3,2
  9642  0E08  2E15               	goto	l3507
  9643  0E09  084B               	movf	___ftadd@exp2,w
  9644  0E0A  024C               	subwf	___ftadd@exp1,w
  9645  0E0B  1803               	skipnc
  9646  0E0C  2E1C               	goto	l3511
  9647  0E0D  034C               	decf	___ftadd@exp1,w
  9648  0E0E  3AFF               	xorlw	255
  9649  0E0F  074B               	addwf	___ftadd@exp2,w
  9650  0E10  00C6               	movwf	??___ftadd
  9651  0E11  3019               	movlw	25
  9652  0E12  0246               	subwf	??___ftadd,w
  9653  0E13  1C03               	skipc
  9654  0E14  2E1C               	goto	l3511
  9655  0E15                     l3507:	
  9656  0E15  0843               	movf	___ftadd@f2,w
  9657  0E16  00C0               	movwf	?___ftadd
  9658  0E17  0844               	movf	___ftadd@f2+1,w
  9659  0E18  00C1               	movwf	?___ftadd+1
  9660  0E19  0845               	movf	___ftadd@f2+2,w
  9661  0E1A  00C2               	movwf	?___ftadd+2
  9662  0E1B  0008               	return
  9663  0E1C                     l3511:	
  9664  0E1C  084B               	movf	___ftadd@exp2,w
  9665  0E1D  1903               	btfsc	3,2
  9666  0E1E  0008               	return
  9667  0E1F  084C               	movf	___ftadd@exp1,w
  9668  0E20  024B               	subwf	___ftadd@exp2,w
  9669  0E21  1803               	skipnc
  9670  0E22  2E2B               	goto	l3517
  9671  0E23  034B               	decf	___ftadd@exp2,w
  9672  0E24  3AFF               	xorlw	255
  9673  0E25  074C               	addwf	___ftadd@exp1,w
  9674  0E26  00C6               	movwf	??___ftadd
  9675  0E27  3019               	movlw	25
  9676  0E28  0246               	subwf	??___ftadd,w
  9677  0E29  1803               	btfsc	3,0
  9678  0E2A  0008               	return
  9679  0E2B                     l3517:	
  9680  0E2B  3006               	movlw	6
  9681  0E2C  00C6               	movwf	??___ftadd
  9682  0E2D  0846               	movf	??___ftadd,w
  9683  0E2E  00CA               	movwf	___ftadd@sign
  9684  0E2F  1BC2               	btfsc	___ftadd@f1+2,7
  9685  0E30  17CA               	bsf	___ftadd@sign,7
  9686  0E31  1BC5               	btfsc	___ftadd@f2+2,7
  9687  0E32  174A               	bsf	___ftadd@sign,6
  9688  0E33  17C1               	bsf	___ftadd@f1+1,7
  9689  0E34  30FF               	movlw	255
  9690  0E35  05C0               	andwf	___ftadd@f1,f
  9691  0E36  30FF               	movlw	255
  9692  0E37  05C1               	andwf	___ftadd@f1+1,f
  9693  0E38  3000               	movlw	0
  9694  0E39  05C2               	andwf	___ftadd@f1+2,f
  9695  0E3A  17C4               	bsf	___ftadd@f2+1,7
  9696  0E3B  30FF               	movlw	255
  9697  0E3C  05C3               	andwf	___ftadd@f2,f
  9698  0E3D  30FF               	movlw	255
  9699  0E3E  05C4               	andwf	___ftadd@f2+1,f
  9700  0E3F  3000               	movlw	0
  9701  0E40  05C5               	andwf	___ftadd@f2+2,f
  9702  0E41  084B               	movf	___ftadd@exp2,w
  9703  0E42  024C               	subwf	___ftadd@exp1,w
  9704  0E43  1803               	skipnc
  9705  0E44  2E67               	goto	l3539
  9706  0E45                     l3529:	
  9707  0E45  3001               	movlw	1
  9708  0E46                     u4135:	
  9709  0E46  35C3               	lslf	___ftadd@f2,f
  9710  0E47  0DC4               	rlf	___ftadd@f2+1,f
  9711  0E48  0DC5               	rlf	___ftadd@f2+2,f
  9712  0E49  0B89               	decfsz	9,f
  9713  0E4A  2E46               	goto	u4135
  9714  0E4B  3001               	movlw	1
  9715  0E4C  02CB               	subwf	___ftadd@exp2,f
  9716  0E4D  084B               	movf	___ftadd@exp2,w
  9717  0E4E  064C               	xorwf	___ftadd@exp1,w
  9718  0E4F  1903               	skipnz
  9719  0E50  2E62               	goto	l3537
  9720  0E51  3001               	movlw	1
  9721  0E52  02CA               	subwf	___ftadd@sign,f
  9722  0E53  084A               	movf	___ftadd@sign,w
  9723  0E54  3907               	andlw	7
  9724  0E55  1903               	btfsc	3,2
  9725  0E56  2E62               	goto	l3537
  9726  0E57  2E45               	goto	l3529
  9727  0E58                     l3535:	
  9728  0E58  3001               	movlw	1
  9729  0E59                     u4165:	
  9730  0E59  36C2               	lsrf	___ftadd@f1+2,f
  9731  0E5A  0CC1               	rrf	___ftadd@f1+1,f
  9732  0E5B  0CC0               	rrf	___ftadd@f1,f
  9733  0E5C  0B89               	decfsz	9,f
  9734  0E5D  2E59               	goto	u4165
  9735  0E5E  3001               	movlw	1
  9736  0E5F  00C6               	movwf	??___ftadd
  9737  0E60  0846               	movf	??___ftadd,w
  9738  0E61  07CC               	addwf	___ftadd@exp1,f
  9739  0E62                     l3537:	
  9740  0E62  084C               	movf	___ftadd@exp1,w
  9741  0E63  064B               	xorwf	___ftadd@exp2,w
  9742  0E64  1903               	btfsc	3,2
  9743  0E65  2E8C               	goto	l805
  9744  0E66  2E58               	goto	l3535
  9745  0E67                     l3539:	
  9746  0E67  084C               	movf	___ftadd@exp1,w
  9747  0E68  024B               	subwf	___ftadd@exp2,w
  9748  0E69  1803               	skipnc
  9749  0E6A  2E8C               	goto	l805
  9750  0E6B                     l3541:	
  9751  0E6B  3001               	movlw	1
  9752  0E6C                     u4195:	
  9753  0E6C  35C0               	lslf	___ftadd@f1,f
  9754  0E6D  0DC1               	rlf	___ftadd@f1+1,f
  9755  0E6E  0DC2               	rlf	___ftadd@f1+2,f
  9756  0E6F  0B89               	decfsz	9,f
  9757  0E70  2E6C               	goto	u4195
  9758  0E71  3001               	movlw	1
  9759  0E72  02CC               	subwf	___ftadd@exp1,f
  9760  0E73  084B               	movf	___ftadd@exp2,w
  9761  0E74  064C               	xorwf	___ftadd@exp1,w
  9762  0E75  1903               	skipnz
  9763  0E76  2E88               	goto	l3549
  9764  0E77  3001               	movlw	1
  9765  0E78  02CA               	subwf	___ftadd@sign,f
  9766  0E79  084A               	movf	___ftadd@sign,w
  9767  0E7A  3907               	andlw	7
  9768  0E7B  1903               	btfsc	3,2
  9769  0E7C  2E88               	goto	l3549
  9770  0E7D  2E6B               	goto	l3541
  9771  0E7E                     l3547:	
  9772  0E7E  3001               	movlw	1
  9773  0E7F                     u4225:	
  9774  0E7F  36C5               	lsrf	___ftadd@f2+2,f
  9775  0E80  0CC4               	rrf	___ftadd@f2+1,f
  9776  0E81  0CC3               	rrf	___ftadd@f2,f
  9777  0E82  0B89               	decfsz	9,f
  9778  0E83  2E7F               	goto	u4225
  9779  0E84  3001               	movlw	1
  9780  0E85  00C6               	movwf	??___ftadd
  9781  0E86  0846               	movf	??___ftadd,w
  9782  0E87  07CB               	addwf	___ftadd@exp2,f
  9783  0E88                     l3549:	
  9784  0E88  084C               	movf	___ftadd@exp1,w
  9785  0E89  064B               	xorwf	___ftadd@exp2,w
  9786  0E8A  1D03               	skipz
  9787  0E8B  2E7E               	goto	l3547
  9788  0E8C                     l805:	
  9789  0E8C  1FCA               	btfss	___ftadd@sign,7
  9790  0E8D  2E9E               	goto	l3553
  9791  0E8E  30FF               	movlw	255
  9792  0E8F  06C0               	xorwf	___ftadd@f1,f
  9793  0E90  30FF               	movlw	255
  9794  0E91  06C1               	xorwf	___ftadd@f1+1,f
  9795  0E92  30FF               	movlw	255
  9796  0E93  06C2               	xorwf	___ftadd@f1+2,f
  9797  0E94  3001               	movlw	1
  9798  0E95  07C0               	addwf	___ftadd@f1,f
  9799  0E96  3000               	movlw	0
  9800  0E97  1803               	skipnc
  9801  0E98  3001               	movlw	1
  9802  0E99  07C1               	addwf	___ftadd@f1+1,f
  9803  0E9A  3000               	movlw	0
  9804  0E9B  1803               	skipnc
  9805  0E9C  3001               	movlw	1
  9806  0E9D  07C2               	addwf	___ftadd@f1+2,f
  9807  0E9E                     l3553:	
  9808  0E9E  1F4A               	btfss	___ftadd@sign,6
  9809  0E9F  2EB0               	goto	l3557
  9810  0EA0  30FF               	movlw	255
  9811  0EA1  06C3               	xorwf	___ftadd@f2,f
  9812  0EA2  30FF               	movlw	255
  9813  0EA3  06C4               	xorwf	___ftadd@f2+1,f
  9814  0EA4  30FF               	movlw	255
  9815  0EA5  06C5               	xorwf	___ftadd@f2+2,f
  9816  0EA6  3001               	movlw	1
  9817  0EA7  07C3               	addwf	___ftadd@f2,f
  9818  0EA8  3000               	movlw	0
  9819  0EA9  1803               	skipnc
  9820  0EAA  3001               	movlw	1
  9821  0EAB  07C4               	addwf	___ftadd@f2+1,f
  9822  0EAC  3000               	movlw	0
  9823  0EAD  1803               	skipnc
  9824  0EAE  3001               	movlw	1
  9825  0EAF  07C5               	addwf	___ftadd@f2+2,f
  9826  0EB0                     l3557:	
  9827  0EB0  01CA               	clrf	___ftadd@sign
  9828  0EB1  0840               	movf	___ftadd@f1,w
  9829  0EB2  07C3               	addwf	___ftadd@f2,f
  9830  0EB3  0841               	movf	___ftadd@f1+1,w
  9831  0EB4  3DC4               	addwfc	___ftadd@f2+1,f
  9832  0EB5  0842               	movf	___ftadd@f1+2,w
  9833  0EB6  3DC5               	addwfc	___ftadd@f2+2,f
  9834  0EB7  1FC5               	btfss	___ftadd@f2+2,7
  9835  0EB8  2ECB               	goto	l3567
  9836  0EB9  30FF               	movlw	255
  9837  0EBA  06C3               	xorwf	___ftadd@f2,f
  9838  0EBB  30FF               	movlw	255
  9839  0EBC  06C4               	xorwf	___ftadd@f2+1,f
  9840  0EBD  30FF               	movlw	255
  9841  0EBE  06C5               	xorwf	___ftadd@f2+2,f
  9842  0EBF  3001               	movlw	1
  9843  0EC0  07C3               	addwf	___ftadd@f2,f
  9844  0EC1  3000               	movlw	0
  9845  0EC2  1803               	skipnc
  9846  0EC3  3001               	movlw	1
  9847  0EC4  07C4               	addwf	___ftadd@f2+1,f
  9848  0EC5  3000               	movlw	0
  9849  0EC6  1803               	skipnc
  9850  0EC7  3001               	movlw	1
  9851  0EC8  07C5               	addwf	___ftadd@f2+2,f
  9852  0EC9  01CA               	clrf	___ftadd@sign
  9853  0ECA  0ACA               	incf	___ftadd@sign,f
  9854  0ECB                     l3567:	
  9855  0ECB  0843               	movf	___ftadd@f2,w
  9856  0ECC  00F0               	movwf	___ftpack@arg
  9857  0ECD  0844               	movf	___ftadd@f2+1,w
  9858  0ECE  00F1               	movwf	___ftpack@arg+1
  9859  0ECF  0845               	movf	___ftadd@f2+2,w
  9860  0ED0  00F2               	movwf	___ftpack@arg+2
  9861  0ED1  084C               	movf	___ftadd@exp1,w
  9862  0ED2  00C6               	movwf	??___ftadd
  9863  0ED3  0846               	movf	??___ftadd,w
  9864  0ED4  00F3               	movwf	___ftpack@exp
  9865  0ED5  084A               	movf	___ftadd@sign,w
  9866  0ED6  00C7               	movwf	??___ftadd+1
  9867  0ED7  0847               	movf	??___ftadd+1,w
  9868  0ED8  00F4               	movwf	___ftpack@sign
  9869  0ED9  3196  268E         	fcall	___ftpack
  9870  0EDB  0870               	movf	?___ftpack,w
  9871  0EDC  0020               	movlb	0	; select bank0
  9872  0EDD  00C0               	movwf	?___ftadd
  9873  0EDE  0871               	movf	?___ftpack+1,w
  9874  0EDF  00C1               	movwf	?___ftadd+1
  9875  0EE0  0872               	movf	?___ftpack+2,w
  9876  0EE1  00C2               	movwf	?___ftadd+2
  9877  0EE2  0008               	return
  9878  0EE3                     __end_of___ftadd:	
  9879                           
  9880                           	psect	text9
  9881  0012                     __ptext9:	
  9882 ;; *************** function _readIAnalog *****************
  9883 ;; Defined at:
  9884 ;;		line 77 in file "adc.c"
  9885 ;; Parameters:    Size  Location     Type
  9886 ;;  channel         2    6[BANK0 ] unsigned int 
  9887 ;; Auto vars:     Size  Location     Type
  9888 ;;  value           2   28[BANK0 ] int 
  9889 ;;  analog_chann    2   26[BANK0 ] unsigned int 
  9890 ;; Return value:  Size  Location     Type
  9891 ;;                  2    6[BANK0 ] int 
  9892 ;; Registers used:
  9893 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9894 ;; Tracked objects:
  9895 ;;		On entry : 0/0
  9896 ;;		On exit  : 0/0
  9897 ;;		Unchanged: 0/0
  9898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9899 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9900 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9901 ;;      Temps:          0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9902 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9903 ;;Total ram usage:       24 bytes
  9904 ;; Hardware stack levels used:    1
  9905 ;; Hardware stack levels required when called:    1
  9906 ;; This function calls:
  9907 ;;		_ADCRead
  9908 ;;		___aldiv
  9909 ;;		___wmul
  9910 ;; This function is called by:
  9911 ;;		_main
  9912 ;; This function uses a non-reentrant model
  9913 ;;
  9914                           
  9915                           
  9916                           ;psect for function _readIAnalog
  9917  0012                     _readIAnalog:	
  9918                           
  9919                           ;adc.c: 79: int16_t value;
  9920                           ;adc.c: 81: uint16_t analog_channel = channels[channel];
  9921                           
  9922                           ;incstack = 0
  9923                           ; Regs used in _readIAnalog: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9924  0012  0020               	movlb	0	; select bank0
  9925  0013  3526               	lslf	readIAnalog@channel,w
  9926  0014  3E45               	addlw	(low (_channels| (0+256)))& (0+255)
  9927  0015  0086               	movwf	6
  9928  0016  3001               	movlw	1	; select bank2/3
  9929  0017  0087               	movwf	7
  9930  0018  3F40               	moviw [0]fsr1
  9931  0019  00BA               	movwf	readIAnalog@analog_channel
  9932  001A  3F41               	moviw [1]fsr1
  9933  001B  00BB               	movwf	readIAnalog@analog_channel+1
  9934                           
  9935                           ;adc.c: 83: value = ADCRead(analog_channel);
  9936  001C  083A               	movf	readIAnalog@analog_channel,w
  9937  001D  3192  2243  3180   	fcall	_ADCRead
  9938  0020  0871               	movf	?_ADCRead+1,w
  9939  0021  0020               	movlb	0	; select bank0
  9940  0022  00BD               	movwf	readIAnalog@value+1
  9941  0023  0870               	movf	?_ADCRead,w
  9942  0024  00BC               	movwf	readIAnalog@value
  9943                           
  9944                           ;adc.c: 85: totals[channel] = totals[channel]-samples[channel][sampleIndex];
  9945  0025  0826               	movf	readIAnalog@channel,w
  9946  0026  00A8               	movwf	??_readIAnalog
  9947  0027  3001               	movlw	1
  9948  0028                     u4995:	
  9949  0028  35A8               	lslf	??_readIAnalog,f
  9950  0029  3EFF               	addlw	-1
  9951  002A  1D03               	skipz
  9952  002B  2828               	goto	u4995
  9953  002C  3528               	lslf	??_readIAnalog,w
  9954  002D  3E20               	addlw	(low (_totals| (0+256)))& (0+255)
  9955  002E  0086               	movwf	6
  9956  002F  3001               	movlw	1	; select bank2/3
  9957  0030  0087               	movwf	7
  9958  0031  3F40               	moviw [0]fsr1
  9959  0032  00A9               	movwf	??_readIAnalog+1
  9960  0033  3F41               	moviw [1]fsr1
  9961  0034  00AA               	movwf	??_readIAnalog+2
  9962  0035  3F42               	moviw [2]fsr1
  9963  0036  00AB               	movwf	??_readIAnalog+3
  9964  0037  3F43               	moviw [3]fsr1
  9965  0038  00AC               	movwf	??_readIAnalog+4
  9966  0039  0021               	movlb	1	; select bank1
  9967  003A  083D               	movf	(_sampleIndex+1)^(0+128),w
  9968  003B  0020               	movlb	0	; select bank0
  9969  003C  00AE               	movwf	??_readIAnalog+6
  9970  003D  0021               	movlb	1	; select bank1
  9971  003E  083C               	movf	_sampleIndex^(0+128),w
  9972  003F  0020               	movlb	0	; select bank0
  9973  0040  00AD               	movwf	??_readIAnalog+5
  9974  0041  35AD               	lslf	??_readIAnalog+5,f
  9975  0042  0DAE               	rlf	??_readIAnalog+6,f
  9976  0043  0827               	movf	readIAnalog@channel+1,w
  9977  0044  00FA               	movwf	___wmul@multiplier+1
  9978  0045  0826               	movf	readIAnalog@channel,w
  9979  0046  00F9               	movwf	___wmul@multiplier
  9980  0047  3096               	movlw	150
  9981  0048  00FB               	movwf	___wmul@multiplicand
  9982  0049  3000               	movlw	0
  9983  004A  00FC               	movwf	___wmul@multiplicand+1
  9984  004B  3192  22CE  3180   	fcall	___wmul
  9985  004E  3098               	movlw	152
  9986  004F  0020               	movlb	0	; select bank0
  9987  0050  00AF               	movwf	??_readIAnalog+7
  9988  0051  3021               	movlw	33
  9989  0052  00B0               	movwf	??_readIAnalog+8
  9990  0053  0879               	movf	?___wmul,w
  9991  0054  072F               	addwf	??_readIAnalog+7,w
  9992  0055  00B1               	movwf	??_readIAnalog+9
  9993  0056  087A               	movf	?___wmul+1,w
  9994  0057  3D30               	addwfc	??_readIAnalog+8,w
  9995  0058  00B2               	movwf	??_readIAnalog+10
  9996  0059  082D               	movf	??_readIAnalog+5,w
  9997  005A  0731               	addwf	??_readIAnalog+9,w
  9998  005B  0086               	movwf	6
  9999  005C  082E               	movf	??_readIAnalog+6,w
 10000  005D  3D32               	addwfc	??_readIAnalog+10,w
 10001  005E  0087               	movwf	7
 10002  005F  3F40               	moviw [0]fsr1
 10003  0060  00B3               	movwf	??_readIAnalog+11
 10004  0061  3F41               	moviw [1]fsr1
 10005  0062  00B4               	movwf	??_readIAnalog+12
 10006  0063  0833               	movf	??_readIAnalog+11,w
 10007  0064  00B5               	movwf	??_readIAnalog+13
 10008  0065  0834               	movf	??_readIAnalog+12,w
 10009  0066  00B6               	movwf	??_readIAnalog+14
 10010  0067  3000               	movlw	0
 10011  0068  1BB6               	btfsc	??_readIAnalog+14,7
 10012  0069  30FF               	movlw	255
 10013  006A  00B7               	movwf	??_readIAnalog+15
 10014  006B  00B8               	movwf	??_readIAnalog+16
 10015  006C  09B5               	comf	??_readIAnalog+13,f
 10016  006D  09B6               	comf	??_readIAnalog+14,f
 10017  006E  09B7               	comf	??_readIAnalog+15,f
 10018  006F  09B8               	comf	??_readIAnalog+16,f
 10019  0070  0AB5               	incf	??_readIAnalog+13,f
 10020  0071  1903               	skipnz
 10021  0072  0AB6               	incf	??_readIAnalog+14,f
 10022  0073  1903               	skipnz
 10023  0074  0AB7               	incf	??_readIAnalog+15,f
 10024  0075  1903               	skipnz
 10025  0076  0AB8               	incf	??_readIAnalog+16,f
 10026  0077  0835               	movf	??_readIAnalog+13,w
 10027  0078  07A9               	addwf	??_readIAnalog+1,f
 10028  0079  0836               	movf	??_readIAnalog+14,w
 10029  007A  3DAA               	addwfc	??_readIAnalog+2,f
 10030  007B  0837               	movf	??_readIAnalog+15,w
 10031  007C  3DAB               	addwfc	??_readIAnalog+3,f
 10032  007D  0838               	movf	??_readIAnalog+16,w
 10033  007E  3DAC               	addwfc	??_readIAnalog+4,f
 10034  007F  0826               	movf	readIAnalog@channel,w
 10035  0080  00B9               	movwf	??_readIAnalog+17
 10036  0081  3001               	movlw	1
 10037  0082                     u5005:	
 10038  0082  35B9               	lslf	??_readIAnalog+17,f
 10039  0083  3EFF               	addlw	-1
 10040  0084  1D03               	skipz
 10041  0085  2882               	goto	u5005
 10042  0086  3539               	lslf	??_readIAnalog+17,w
 10043  0087  3E20               	addlw	(low (_totals| (0+256)))& (0+255)
 10044  0088  0086               	movwf	6
 10045  0089  3001               	movlw	1	; select bank2/3
 10046  008A  0087               	movwf	7
 10047  008B  0829               	movf	??_readIAnalog+1,w
 10048  008C  3FC0               	movwi [0]fsr1
 10049  008D  082A               	movf	??_readIAnalog+2,w
 10050  008E  3FC1               	movwi [1]fsr1
 10051  008F  082B               	movf	??_readIAnalog+3,w
 10052  0090  3FC2               	movwi [2]fsr1
 10053  0091  082C               	movf	??_readIAnalog+4,w
 10054  0092  3FC3               	movwi [3]fsr1
 10055                           
 10056                           ;adc.c: 87: samples[channel][sampleIndex] = value;
 10057  0093  0021               	movlb	1	; select bank1
 10058  0094  083D               	movf	(_sampleIndex+1)^(0+128),w
 10059  0095  0020               	movlb	0	; select bank0
 10060  0096  00A9               	movwf	??_readIAnalog+1
 10061  0097  0021               	movlb	1	; select bank1
 10062  0098  083C               	movf	_sampleIndex^(0+128),w
 10063  0099  0020               	movlb	0	; select bank0
 10064  009A  00A8               	movwf	??_readIAnalog
 10065  009B  35A8               	lslf	??_readIAnalog,f
 10066  009C  0DA9               	rlf	??_readIAnalog+1,f
 10067  009D  0827               	movf	readIAnalog@channel+1,w
 10068  009E  00FA               	movwf	___wmul@multiplier+1
 10069  009F  0826               	movf	readIAnalog@channel,w
 10070  00A0  00F9               	movwf	___wmul@multiplier
 10071  00A1  3096               	movlw	150
 10072  00A2  00FB               	movwf	___wmul@multiplicand
 10073  00A3  3000               	movlw	0
 10074  00A4  00FC               	movwf	___wmul@multiplicand+1
 10075  00A5  3192  22CE  3180   	fcall	___wmul
 10076  00A8  3098               	movlw	152
 10077  00A9  0020               	movlb	0	; select bank0
 10078  00AA  00AA               	movwf	??_readIAnalog+2
 10079  00AB  3021               	movlw	33
 10080  00AC  00AB               	movwf	??_readIAnalog+3
 10081  00AD  0879               	movf	?___wmul,w
 10082  00AE  072A               	addwf	??_readIAnalog+2,w
 10083  00AF  00AC               	movwf	??_readIAnalog+4
 10084  00B0  087A               	movf	?___wmul+1,w
 10085  00B1  3D2B               	addwfc	??_readIAnalog+3,w
 10086  00B2  00AD               	movwf	??_readIAnalog+5
 10087  00B3  0828               	movf	??_readIAnalog,w
 10088  00B4  072C               	addwf	??_readIAnalog+4,w
 10089  00B5  0086               	movwf	6
 10090  00B6  0829               	movf	??_readIAnalog+1,w
 10091  00B7  3D2D               	addwfc	??_readIAnalog+5,w
 10092  00B8  0087               	movwf	7
 10093  00B9  083C               	movf	readIAnalog@value,w
 10094  00BA  3FC0               	movwi [0]fsr1
 10095  00BB  083D               	movf	readIAnalog@value+1,w
 10096  00BC  3FC1               	movwi [1]fsr1
 10097                           
 10098                           ;adc.c: 89: totals[channel] = totals[channel]+samples[channel][sampleIndex];
 10099  00BD  0826               	movf	readIAnalog@channel,w
 10100  00BE  00A8               	movwf	??_readIAnalog
 10101  00BF  3001               	movlw	1
 10102  00C0                     u5015:	
 10103  00C0  35A8               	lslf	??_readIAnalog,f
 10104  00C1  3EFF               	addlw	-1
 10105  00C2  1D03               	skipz
 10106  00C3  28C0               	goto	u5015
 10107  00C4  3528               	lslf	??_readIAnalog,w
 10108  00C5  3E20               	addlw	(low (_totals| (0+256)))& (0+255)
 10109  00C6  0086               	movwf	6
 10110  00C7  3001               	movlw	1	; select bank2/3
 10111  00C8  0087               	movwf	7
 10112  00C9  3F40               	moviw [0]fsr1
 10113  00CA  00A9               	movwf	??_readIAnalog+1
 10114  00CB  3F41               	moviw [1]fsr1
 10115  00CC  00AA               	movwf	??_readIAnalog+2
 10116  00CD  3F42               	moviw [2]fsr1
 10117  00CE  00AB               	movwf	??_readIAnalog+3
 10118  00CF  3F43               	moviw [3]fsr1
 10119  00D0  00AC               	movwf	??_readIAnalog+4
 10120  00D1  0021               	movlb	1	; select bank1
 10121  00D2  083D               	movf	(_sampleIndex+1)^(0+128),w
 10122  00D3  0020               	movlb	0	; select bank0
 10123  00D4  00AE               	movwf	??_readIAnalog+6
 10124  00D5  0021               	movlb	1	; select bank1
 10125  00D6  083C               	movf	_sampleIndex^(0+128),w
 10126  00D7  0020               	movlb	0	; select bank0
 10127  00D8  00AD               	movwf	??_readIAnalog+5
 10128  00D9  35AD               	lslf	??_readIAnalog+5,f
 10129  00DA  0DAE               	rlf	??_readIAnalog+6,f
 10130  00DB  0827               	movf	readIAnalog@channel+1,w
 10131  00DC  00FA               	movwf	___wmul@multiplier+1
 10132  00DD  0826               	movf	readIAnalog@channel,w
 10133  00DE  00F9               	movwf	___wmul@multiplier
 10134  00DF  3096               	movlw	150
 10135  00E0  00FB               	movwf	___wmul@multiplicand
 10136  00E1  3000               	movlw	0
 10137  00E2  00FC               	movwf	___wmul@multiplicand+1
 10138  00E3  3192  22CE  3180   	fcall	___wmul
 10139  00E6  3098               	movlw	152
 10140  00E7  0020               	movlb	0	; select bank0
 10141  00E8  00AF               	movwf	??_readIAnalog+7
 10142  00E9  3021               	movlw	33
 10143  00EA  00B0               	movwf	??_readIAnalog+8
 10144  00EB  0879               	movf	?___wmul,w
 10145  00EC  072F               	addwf	??_readIAnalog+7,w
 10146  00ED  00B1               	movwf	??_readIAnalog+9
 10147  00EE  087A               	movf	?___wmul+1,w
 10148  00EF  3D30               	addwfc	??_readIAnalog+8,w
 10149  00F0  00B2               	movwf	??_readIAnalog+10
 10150  00F1  082D               	movf	??_readIAnalog+5,w
 10151  00F2  0731               	addwf	??_readIAnalog+9,w
 10152  00F3  0086               	movwf	6
 10153  00F4  082E               	movf	??_readIAnalog+6,w
 10154  00F5  3D32               	addwfc	??_readIAnalog+10,w
 10155  00F6  0087               	movwf	7
 10156  00F7  3F40               	moviw [0]fsr1
 10157  00F8  00B3               	movwf	??_readIAnalog+11
 10158  00F9  3F41               	moviw [1]fsr1
 10159  00FA  00B4               	movwf	??_readIAnalog+12
 10160  00FB  0833               	movf	??_readIAnalog+11,w
 10161  00FC  00B5               	movwf	??_readIAnalog+13
 10162  00FD  0834               	movf	??_readIAnalog+12,w
 10163  00FE  00B6               	movwf	??_readIAnalog+14
 10164  00FF  3000               	movlw	0
 10165  0100  1BB6               	btfsc	??_readIAnalog+14,7
 10166  0101  30FF               	movlw	255
 10167  0102  00B7               	movwf	??_readIAnalog+15
 10168  0103  00B8               	movwf	??_readIAnalog+16
 10169  0104  0835               	movf	??_readIAnalog+13,w
 10170  0105  07A9               	addwf	??_readIAnalog+1,f
 10171  0106  0836               	movf	??_readIAnalog+14,w
 10172  0107  3DAA               	addwfc	??_readIAnalog+2,f
 10173  0108  0837               	movf	??_readIAnalog+15,w
 10174  0109  3DAB               	addwfc	??_readIAnalog+3,f
 10175  010A  0838               	movf	??_readIAnalog+16,w
 10176  010B  3DAC               	addwfc	??_readIAnalog+4,f
 10177  010C  0826               	movf	readIAnalog@channel,w
 10178  010D  00B9               	movwf	??_readIAnalog+17
 10179  010E  3001               	movlw	1
 10180  010F                     u5025:	
 10181  010F  35B9               	lslf	??_readIAnalog+17,f
 10182  0110  3EFF               	addlw	-1
 10183  0111  1D03               	skipz
 10184  0112  290F               	goto	u5025
 10185  0113  3539               	lslf	??_readIAnalog+17,w
 10186  0114  3E20               	addlw	(low (_totals| (0+256)))& (0+255)
 10187  0115  0086               	movwf	6
 10188  0116  3001               	movlw	1	; select bank2/3
 10189  0117  0087               	movwf	7
 10190  0118  0829               	movf	??_readIAnalog+1,w
 10191  0119  3FC0               	movwi [0]fsr1
 10192  011A  082A               	movf	??_readIAnalog+2,w
 10193  011B  3FC1               	movwi [1]fsr1
 10194  011C  082B               	movf	??_readIAnalog+3,w
 10195  011D  3FC2               	movwi [2]fsr1
 10196  011E  082C               	movf	??_readIAnalog+4,w
 10197  011F  3FC3               	movwi [3]fsr1
 10198                           
 10199                           ;adc.c: 91: if(channel>=(4-1))
 10200  0120  3000               	movlw	0
 10201  0121  0227               	subwf	readIAnalog@channel+1,w
 10202  0122  3003               	movlw	3
 10203  0123  1903               	skipnz
 10204  0124  0226               	subwf	readIAnalog@channel,w
 10205  0125  1C03               	skipc
 10206  0126  2935               	goto	l4103
 10207                           
 10208                           ;adc.c: 92: {
 10209                           ;adc.c: 93: sampleIndex+=1;
 10210  0127  3001               	movlw	1
 10211  0128  0021               	movlb	1	; select bank1
 10212  0129  07BC               	addwf	_sampleIndex^(0+128),f
 10213  012A  3000               	movlw	0
 10214  012B  3DBD               	addwfc	(_sampleIndex+1)^(0+128),f
 10215                           
 10216                           ;adc.c: 94: if(sampleIndex >= 75)sampleIndex = 0;
 10217  012C  3000               	movlw	0
 10218  012D  023D               	subwf	(_sampleIndex+1)^(0+128),w
 10219  012E  304B               	movlw	75
 10220  012F  1903               	skipnz
 10221  0130  023C               	subwf	_sampleIndex^(0+128),w
 10222  0131  1C03               	skipc
 10223  0132  2935               	goto	l4103
 10224  0133  01BC               	clrf	_sampleIndex^(0+128)
 10225  0134  01BD               	clrf	(_sampleIndex+1)^(0+128)
 10226  0135                     l4103:	
 10227                           
 10228                           ;adc.c: 95: }
 10229                           ;adc.c: 97: value = totals[channel]/75;
 10230  0135  3000               	movlw	0
 10231  0136  00F3               	movwf	___aldiv@divisor+3
 10232  0137  3000               	movlw	0
 10233  0138  00F2               	movwf	___aldiv@divisor+2
 10234  0139  3000               	movlw	0
 10235  013A  00F1               	movwf	___aldiv@divisor+1
 10236  013B  304B               	movlw	75
 10237  013C  00F0               	movwf	___aldiv@divisor
 10238  013D  0020               	movlb	0	; select bank0
 10239  013E  0826               	movf	readIAnalog@channel,w
 10240  013F  00A8               	movwf	??_readIAnalog
 10241  0140  3001               	movlw	1
 10242  0141                     u5055:	
 10243  0141  35A8               	lslf	??_readIAnalog,f
 10244  0142  3EFF               	addlw	-1
 10245  0143  1D03               	skipz
 10246  0144  2941               	goto	u5055
 10247  0145  3528               	lslf	??_readIAnalog,w
 10248  0146  3E20               	addlw	(low (_totals| (0+256)))& (0+255)
 10249  0147  0086               	movwf	6
 10250  0148  3001               	movlw	1	; select bank2/3
 10251  0149  0087               	movwf	7
 10252  014A  3F40               	moviw [0]fsr1
 10253  014B  00F4               	movwf	___aldiv@dividend
 10254  014C  3F41               	moviw [1]fsr1
 10255  014D  00F5               	movwf	___aldiv@dividend+1
 10256  014E  3F42               	moviw [2]fsr1
 10257  014F  00F6               	movwf	___aldiv@dividend+2
 10258  0150  3F43               	moviw [3]fsr1
 10259  0151  00F7               	movwf	___aldiv@dividend+3
 10260  0152  3189  2131         	fcall	___aldiv
 10261  0154  0871               	movf	?___aldiv+1,w
 10262  0155  0020               	movlb	0	; select bank0
 10263  0156  00BD               	movwf	readIAnalog@value+1
 10264  0157  0870               	movf	?___aldiv,w
 10265  0158  00BC               	movwf	readIAnalog@value
 10266                           
 10267                           ;adc.c: 99: return value;
 10268  0159  083D               	movf	readIAnalog@value+1,w
 10269  015A  00A7               	movwf	?_readIAnalog+1
 10270  015B  083C               	movf	readIAnalog@value,w
 10271  015C  00A6               	movwf	?_readIAnalog
 10272  015D  0008               	return
 10273  015E                     __end_of_readIAnalog:	
 10274                           
 10275                           	psect	text10
 10276  0931                     __ptext10:	
 10277 ;; *************** function ___aldiv *****************
 10278 ;; Defined at:
 10279 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\aldiv.c"
 10280 ;; Parameters:    Size  Location     Type
 10281 ;;  divisor         4    0[COMMON] long 
 10282 ;;  dividend        4    4[COMMON] long 
 10283 ;; Auto vars:     Size  Location     Type
 10284 ;;  quotient        4    2[BANK0 ] long 
 10285 ;;  sign            1    1[BANK0 ] unsigned char 
 10286 ;;  counter         1    0[BANK0 ] unsigned char 
 10287 ;; Return value:  Size  Location     Type
 10288 ;;                  4    0[COMMON] long 
 10289 ;; Registers used:
 10290 ;;		wreg, status,2, status,0
 10291 ;; Tracked objects:
 10292 ;;		On entry : 0/0
 10293 ;;		On exit  : 0/0
 10294 ;;		Unchanged: 0/0
 10295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10296 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10297 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10298 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10299 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10300 ;;Total ram usage:       15 bytes
 10301 ;; Hardware stack levels used:    1
 10302 ;; This function calls:
 10303 ;;		Nothing
 10304 ;; This function is called by:
 10305 ;;		_readIAnalog
 10306 ;; This function uses a non-reentrant model
 10307 ;;
 10308                           
 10309                           
 10310                           ;psect for function ___aldiv
 10311  0931                     ___aldiv:	
 10312                           
 10313                           ;incstack = 0
 10314                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
 10315  0931  0020               	movlb	0	; select bank0
 10316  0932  01A1               	clrf	___aldiv@sign
 10317  0933  1FF3               	btfss	___aldiv@divisor+3,7
 10318  0934  2942               	goto	l668
 10319  0935  09F0               	comf	___aldiv@divisor,f
 10320  0936  09F1               	comf	___aldiv@divisor+1,f
 10321  0937  09F2               	comf	___aldiv@divisor+2,f
 10322  0938  09F3               	comf	___aldiv@divisor+3,f
 10323  0939  0AF0               	incf	___aldiv@divisor,f
 10324  093A  1903               	skipnz
 10325  093B  0AF1               	incf	___aldiv@divisor+1,f
 10326  093C  1903               	skipnz
 10327  093D  0AF2               	incf	___aldiv@divisor+2,f
 10328  093E  1903               	skipnz
 10329  093F  0AF3               	incf	___aldiv@divisor+3,f
 10330  0940  01A1               	clrf	___aldiv@sign
 10331  0941  0AA1               	incf	___aldiv@sign,f
 10332  0942                     l668:	
 10333  0942  1FF7               	btfss	___aldiv@dividend+3,7
 10334  0943  2953               	goto	l3895
 10335  0944  09F4               	comf	___aldiv@dividend,f
 10336  0945  09F5               	comf	___aldiv@dividend+1,f
 10337  0946  09F6               	comf	___aldiv@dividend+2,f
 10338  0947  09F7               	comf	___aldiv@dividend+3,f
 10339  0948  0AF4               	incf	___aldiv@dividend,f
 10340  0949  1903               	skipnz
 10341  094A  0AF5               	incf	___aldiv@dividend+1,f
 10342  094B  1903               	skipnz
 10343  094C  0AF6               	incf	___aldiv@dividend+2,f
 10344  094D  1903               	skipnz
 10345  094E  0AF7               	incf	___aldiv@dividend+3,f
 10346  094F  3001               	movlw	1
 10347  0950  00F8               	movwf	??___aldiv
 10348  0951  0878               	movf	??___aldiv,w
 10349  0952  06A1               	xorwf	___aldiv@sign,f
 10350  0953                     l3895:	
 10351  0953  3000               	movlw	0
 10352  0954  00A5               	movwf	___aldiv@quotient+3
 10353  0955  3000               	movlw	0
 10354  0956  00A4               	movwf	___aldiv@quotient+2
 10355  0957  3000               	movlw	0
 10356  0958  00A3               	movwf	___aldiv@quotient+1
 10357  0959  3000               	movlw	0
 10358  095A  00A2               	movwf	___aldiv@quotient
 10359  095B  0873               	movf	___aldiv@divisor+3,w
 10360  095C  0472               	iorwf	___aldiv@divisor+2,w
 10361  095D  0471               	iorwf	___aldiv@divisor+1,w
 10362  095E  0470               	iorwf	___aldiv@divisor,w
 10363  095F  1903               	skipnz
 10364  0960  299C               	goto	l3917
 10365  0961  01A0               	clrf	___aldiv@counter
 10366  0962  0AA0               	incf	___aldiv@counter,f
 10367  0963                     l3903:	
 10368  0963  1BF3               	btfsc	___aldiv@divisor+3,7
 10369  0964  2971               	goto	l3905
 10370  0965  3001               	movlw	1
 10371  0966                     u4575:	
 10372  0966  35F0               	lslf	___aldiv@divisor,f
 10373  0967  0DF1               	rlf	___aldiv@divisor+1,f
 10374  0968  0DF2               	rlf	___aldiv@divisor+2,f
 10375  0969  0DF3               	rlf	___aldiv@divisor+3,f
 10376  096A  0B89               	decfsz	9,f
 10377  096B  2966               	goto	u4575
 10378  096C  3001               	movlw	1
 10379  096D  00F8               	movwf	??___aldiv
 10380  096E  0878               	movf	??___aldiv,w
 10381  096F  07A0               	addwf	___aldiv@counter,f
 10382  0970  2963               	goto	l3903
 10383  0971                     l3905:	
 10384  0971  3001               	movlw	1
 10385  0972                     u4595:	
 10386  0972  35A2               	lslf	___aldiv@quotient,f
 10387  0973  0DA3               	rlf	___aldiv@quotient+1,f
 10388  0974  0DA4               	rlf	___aldiv@quotient+2,f
 10389  0975  0DA5               	rlf	___aldiv@quotient+3,f
 10390  0976  0B89               	decfsz	9,f
 10391  0977  2972               	goto	u4595
 10392  0978  0873               	movf	___aldiv@divisor+3,w
 10393  0979  0277               	subwf	___aldiv@dividend+3,w
 10394  097A  1D03               	skipz
 10395  097B  2986               	goto	u4605
 10396  097C  0872               	movf	___aldiv@divisor+2,w
 10397  097D  0276               	subwf	___aldiv@dividend+2,w
 10398  097E  1D03               	skipz
 10399  097F  2986               	goto	u4605
 10400  0980  0871               	movf	___aldiv@divisor+1,w
 10401  0981  0275               	subwf	___aldiv@dividend+1,w
 10402  0982  1D03               	skipz
 10403  0983  2986               	goto	u4605
 10404  0984  0870               	movf	___aldiv@divisor,w
 10405  0985  0274               	subwf	___aldiv@dividend,w
 10406  0986                     u4605:	
 10407  0986  1C03               	skipc
 10408  0987  2991               	goto	l3913
 10409  0988  0870               	movf	___aldiv@divisor,w
 10410  0989  02F4               	subwf	___aldiv@dividend,f
 10411  098A  0871               	movf	___aldiv@divisor+1,w
 10412  098B  3BF5               	subwfb	___aldiv@dividend+1,f
 10413  098C  0872               	movf	___aldiv@divisor+2,w
 10414  098D  3BF6               	subwfb	___aldiv@dividend+2,f
 10415  098E  0873               	movf	___aldiv@divisor+3,w
 10416  098F  3BF7               	subwfb	___aldiv@dividend+3,f
 10417  0990  1422               	bsf	___aldiv@quotient,0
 10418  0991                     l3913:	
 10419  0991  3001               	movlw	1
 10420  0992                     u4615:	
 10421  0992  36F3               	lsrf	___aldiv@divisor+3,f
 10422  0993  0CF2               	rrf	___aldiv@divisor+2,f
 10423  0994  0CF1               	rrf	___aldiv@divisor+1,f
 10424  0995  0CF0               	rrf	___aldiv@divisor,f
 10425  0996  0B89               	decfsz	9,f
 10426  0997  2992               	goto	u4615
 10427  0998  3001               	movlw	1
 10428  0999  02A0               	subwf	___aldiv@counter,f
 10429  099A  1D03               	btfss	3,2
 10430  099B  2971               	goto	l3905
 10431  099C                     l3917:	
 10432  099C  0821               	movf	___aldiv@sign,w
 10433  099D  1903               	btfsc	3,2
 10434  099E  29AA               	goto	l3921
 10435  099F  09A2               	comf	___aldiv@quotient,f
 10436  09A0  09A3               	comf	___aldiv@quotient+1,f
 10437  09A1  09A4               	comf	___aldiv@quotient+2,f
 10438  09A2  09A5               	comf	___aldiv@quotient+3,f
 10439  09A3  0AA2               	incf	___aldiv@quotient,f
 10440  09A4  1903               	skipnz
 10441  09A5  0AA3               	incf	___aldiv@quotient+1,f
 10442  09A6  1903               	skipnz
 10443  09A7  0AA4               	incf	___aldiv@quotient+2,f
 10444  09A8  1903               	skipnz
 10445  09A9  0AA5               	incf	___aldiv@quotient+3,f
 10446  09AA                     l3921:	
 10447  09AA  0825               	movf	___aldiv@quotient+3,w
 10448  09AB  00F3               	movwf	?___aldiv+3
 10449  09AC  0824               	movf	___aldiv@quotient+2,w
 10450  09AD  00F2               	movwf	?___aldiv+2
 10451  09AE  0823               	movf	___aldiv@quotient+1,w
 10452  09AF  00F1               	movwf	?___aldiv+1
 10453  09B0  0822               	movf	___aldiv@quotient,w
 10454  09B1  00F0               	movwf	?___aldiv
 10455  09B2  0008               	return
 10456  09B3                     __end_of___aldiv:	
 10457                           
 10458                           	psect	text11
 10459  1779                     __ptext11:	
 10460 ;; *************** function _readButton *****************
 10461 ;; Defined at:
 10462 ;;		line 9 in file "buttons.c"
 10463 ;; Parameters:    Size  Location     Type
 10464 ;;		None
 10465 ;; Auto vars:     Size  Location     Type
 10466 ;;		None
 10467 ;; Return value:  Size  Location     Type
 10468 ;;                  1    wreg      unsigned char 
 10469 ;; Registers used:
 10470 ;;		wreg, status,2, status,0, pclath, cstack
 10471 ;; Tracked objects:
 10472 ;;		On entry : 0/0
 10473 ;;		On exit  : 0/0
 10474 ;;		Unchanged: 0/0
 10475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10478 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10479 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10480 ;;Total ram usage:        2 bytes
 10481 ;; Hardware stack levels used:    1
 10482 ;; Hardware stack levels required when called:    1
 10483 ;; This function calls:
 10484 ;;		_ADCRead
 10485 ;; This function is called by:
 10486 ;;		_main
 10487 ;; This function uses a non-reentrant model
 10488 ;;
 10489                           
 10490                           
 10491                           ;psect for function _readButton
 10492  1779                     _readButton:	
 10493                           
 10494                           ;buttons.c: 11: readButtons = ADCRead(11);
 10495                           
 10496                           ;incstack = 0
 10497                           ; Regs used in _readButton: [wreg+status,2+status,0+pclath+cstack]
 10498  1779  300B               	movlw	11
 10499  177A  3192  2243  3197   	fcall	_ADCRead
 10500  177D  0871               	movf	?_ADCRead+1,w
 10501  177E  0021               	movlb	1	; select bank1
 10502  177F  00B3               	movwf	(_readButtons+1)^(0+128)
 10503  1780  0870               	movf	?_ADCRead,w
 10504  1781  00B2               	movwf	_readButtons^(0+128)
 10505                           
 10506                           ;buttons.c: 13: if(readButtons >= 425 && readButtons < 485)
 10507  1782  0833               	movf	(_readButtons+1)^(0+128),w
 10508  1783  3A80               	xorlw	128
 10509  1784  00F4               	movwf	??_readButton
 10510  1785  3081               	movlw	129
 10511  1786  0274               	subwf	??_readButton,w
 10512  1787  1D03               	skipz
 10513  1788  2F8B               	goto	u5115
 10514  1789  30A9               	movlw	169
 10515  178A  0232               	subwf	_readButtons^(0+128),w
 10516  178B                     u5115:	
 10517  178B  1C03               	skipc
 10518  178C  2F9D               	goto	l4135
 10519  178D  0021               	movlb	1	; select bank1
 10520  178E  0833               	movf	(_readButtons+1)^(0+128),w
 10521  178F  3A80               	xorlw	128
 10522  1790  00F4               	movwf	??_readButton
 10523  1791  3081               	movlw	129
 10524  1792  0274               	subwf	??_readButton,w
 10525  1793  1D03               	skipz
 10526  1794  2F97               	goto	u5125
 10527  1795  30E5               	movlw	229
 10528  1796  0232               	subwf	_readButtons^(0+128),w
 10529  1797                     u5125:	
 10530  1797  1803               	skipnc
 10531  1798  2F9D               	goto	l4135
 10532                           
 10533                           ;buttons.c: 14: {
 10534                           ;buttons.c: 15: button = 1;
 10535  1799  0020               	movlb	0	; select bank0
 10536  179A  01ED               	clrf	_button
 10537  179B  0AED               	incf	_button,f
 10538                           
 10539                           ;buttons.c: 16: }
 10540  179C  2FCB               	goto	l4147
 10541  179D                     l4135:	
 10542                           
 10543                           ;buttons.c: 18: else if(readButtons >= 615 && readButtons < 690)
 10544  179D  0021               	movlb	1	; select bank1
 10545  179E  0833               	movf	(_readButtons+1)^(0+128),w
 10546  179F  3A80               	xorlw	128
 10547  17A0  00F4               	movwf	??_readButton
 10548  17A1  3082               	movlw	130
 10549  17A2  0274               	subwf	??_readButton,w
 10550  17A3  1D03               	skipz
 10551  17A4  2FA7               	goto	u5135
 10552  17A5  3067               	movlw	103
 10553  17A6  0232               	subwf	_readButtons^(0+128),w
 10554  17A7                     u5135:	
 10555  17A7  1C03               	skipc
 10556  17A8  2FB7               	goto	l4141
 10557  17A9  0021               	movlb	1	; select bank1
 10558  17AA  0833               	movf	(_readButtons+1)^(0+128),w
 10559  17AB  3A80               	xorlw	128
 10560  17AC  00F4               	movwf	??_readButton
 10561  17AD  3082               	movlw	130
 10562  17AE  0274               	subwf	??_readButton,w
 10563  17AF  1D03               	skipz
 10564  17B0  2FB3               	goto	u5145
 10565  17B1  30B2               	movlw	178
 10566  17B2  0232               	subwf	_readButtons^(0+128),w
 10567  17B3                     u5145:	
 10568  17B3  1803               	skipnc
 10569  17B4  2FB7               	goto	l4141
 10570                           
 10571                           ;buttons.c: 19: {
 10572                           ;buttons.c: 20: button = 2;
 10573  17B5  3002               	movlw	2
 10574  17B6  2FC4               	goto	L6
 10575  17B7                     l4141:	
 10576                           ;buttons.c: 21: }
 10577                           
 10578                           
 10579                           ;buttons.c: 23: else if(readButtons > 800)
 10580  17B7  0021               	movlb	1	; select bank1
 10581  17B8  0833               	movf	(_readButtons+1)^(0+128),w
 10582  17B9  3A80               	xorlw	128
 10583  17BA  00F4               	movwf	??_readButton
 10584  17BB  3083               	movlw	131
 10585  17BC  0274               	subwf	??_readButton,w
 10586  17BD  1D03               	skipz
 10587  17BE  2FC1               	goto	u5155
 10588  17BF  3021               	movlw	33
 10589  17C0  0232               	subwf	_readButtons^(0+128),w
 10590  17C1                     u5155:	
 10591  17C1  1C03               	skipc
 10592  17C2  2FC9               	goto	l4145
 10593                           
 10594                           ;buttons.c: 24: {
 10595                           ;buttons.c: 25: button = 3;
 10596  17C3  3003               	movlw	3
 10597  17C4                     L6:	
 10598  17C4  00F4               	movwf	??_readButton
 10599  17C5  0874               	movf	??_readButton,w
 10600  17C6  0020               	movlb	0	; select bank0
 10601  17C7  00ED               	movwf	_button
 10602                           
 10603                           ;buttons.c: 26: }
 10604  17C8  2FCB               	goto	l4147
 10605  17C9                     l4145:	
 10606                           
 10607                           ;buttons.c: 28: else
 10608                           ;buttons.c: 29: {
 10609                           ;buttons.c: 30: button = 0;
 10610  17C9  0020               	movlb	0	; select bank0
 10611  17CA  01ED               	clrf	_button
 10612  17CB                     l4147:	
 10613                           
 10614                           ;buttons.c: 31: }
 10615                           ;buttons.c: 33: if (button != 0)
 10616  17CB  086D               	movf	_button,w
 10617  17CC  1903               	btfsc	3,2
 10618  17CD  2FFC               	goto	l4167
 10619                           
 10620                           ;buttons.c: 34: {
 10621                           ;buttons.c: 35: if (button != lastButton)
 10622  17CE  086D               	movf	_button,w
 10623  17CF  066C               	xorwf	_lastButton,w
 10624  17D0  1903               	skipnz
 10625  17D1  2FD7               	goto	l4155
 10626                           
 10627                           ;buttons.c: 36: {
 10628                           ;buttons.c: 37: lastButton = button;
 10629  17D2  086D               	movf	_button,w
 10630  17D3  00F4               	movwf	??_readButton
 10631  17D4  0874               	movf	??_readButton,w
 10632  17D5  00EC               	movwf	_lastButton
 10633  17D6  2FFC               	goto	l4167
 10634  17D7                     l4155:	
 10635                           ;buttons.c: 39: }
 10636                           
 10637                           ;buttons.c: 38: j = 0;
 10638                           
 10639                           
 10640                           ;buttons.c: 40: else
 10641                           ;buttons.c: 41: {
 10642                           ;buttons.c: 42: j += 1;
 10643  17D7  3001               	movlw	1
 10644  17D8  00F4               	movwf	??_readButton
 10645  17D9  0874               	movf	??_readButton,w
 10646  17DA  0021               	movlb	1	; select bank1
 10647  17DB  07C2               	addwf	_j^(0+128),f
 10648                           
 10649                           ;buttons.c: 44: if(j == 1)
 10650  17DC  0342               	decf	_j^(0+128),w
 10651  17DD  1D03               	btfss	3,2
 10652  17DE  2FE2               	goto	l4161
 10653                           
 10654                           ;buttons.c: 45: {
 10655                           ;buttons.c: 46: return (lastButton);
 10656  17DF  0020               	movlb	0	; select bank0
 10657  17E0  086C               	movf	_lastButton,w
 10658  17E1  0008               	return
 10659  17E2                     l4161:	
 10660                           
 10661                           ;buttons.c: 47: }
 10662                           ;buttons.c: 49: if (j >10)
 10663  17E2  0021               	movlb	1	; select bank1
 10664  17E3  0842               	movf	_j^(0+128),w
 10665  17E4  3A80               	xorlw	128
 10666  17E5  3E75               	addlw	-139
 10667  17E6  1C03               	skipc
 10668  17E7  2FFE               	goto	l4169
 10669                           
 10670                           ;buttons.c: 50: {
 10671                           ;buttons.c: 51: _delay((unsigned long)((25)*(32000000/4000.0)));
 10672  17E8  3002               	movlw	2
 10673  17E9  00F5               	movwf	??_readButton+1
 10674  17EA  3004               	movlw	4
 10675  17EB  00F4               	movwf	??_readButton
 10676  17EC  30BA               	movlw	186
 10677  17ED                     u5907:	
 10678  17ED  0B89               	decfsz	9,f
 10679  17EE  2FED               	goto	u5907
 10680  17EF  0BF4               	decfsz	??_readButton,f
 10681  17F0  2FED               	goto	u5907
 10682  17F1  0BF5               	decfsz	??_readButton+1,f
 10683  17F2  2FED               	goto	u5907
 10684  17F3  3200               	nop2
 10685                           
 10686                           ;buttons.c: 52: j = 10;
 10687  17F4  300A               	movlw	10
 10688  17F5  00F4               	movwf	??_readButton
 10689  17F6  0874               	movf	??_readButton,w
 10690  17F7  0021               	movlb	1	; select bank1
 10691  17F8  00C2               	movwf	_j^(0+128)
 10692                           
 10693                           ;buttons.c: 53: return (lastButton);
 10694  17F9  0020               	movlb	0	; select bank0
 10695  17FA  086C               	movf	_lastButton,w
 10696  17FB  0008               	return
 10697  17FC                     l4167:	
 10698                           ;buttons.c: 54: }
 10699                           ;buttons.c: 55: }
 10700                           ;buttons.c: 56: goto end;
 10701                           
 10702                           
 10703                           ;buttons.c: 57: }
 10704                           ;buttons.c: 59: j = 0;
 10705  17FC  0021               	movlb	1	; select bank1
 10706  17FD  01C2               	clrf	_j^(0+128)
 10707  17FE                     l4169:	
 10708                           ;buttons.c: 61: end:
 10709                           
 10710                           
 10711                           ;buttons.c: 63: return (0);
 10712  17FE  3000               	movlw	0
 10713  17FF  0008               	return
 10714  1800                     __end_of_readButton:	
 10715                           
 10716                           	psect	text12
 10717  1243                     __ptext12:	
 10718 ;; *************** function _ADCRead *****************
 10719 ;; Defined at:
 10720 ;;		line 21 in file "adc.c"
 10721 ;; Parameters:    Size  Location     Type
 10722 ;;  channel         1    wreg     enum E14259
 10723 ;; Auto vars:     Size  Location     Type
 10724 ;;  channel         1    3[COMMON] enum E14259
 10725 ;; Return value:  Size  Location     Type
 10726 ;;                  2    0[COMMON] int 
 10727 ;; Registers used:
 10728 ;;		wreg
 10729 ;; Tracked objects:
 10730 ;;		On entry : 0/0
 10731 ;;		On exit  : 0/0
 10732 ;;		Unchanged: 0/0
 10733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10734 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10735 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10737 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10738 ;;Total ram usage:        4 bytes
 10739 ;; Hardware stack levels used:    1
 10740 ;; This function calls:
 10741 ;;		Nothing
 10742 ;; This function is called by:
 10743 ;;		_main
 10744 ;;		_readIAnalog
 10745 ;;		_readButton
 10746 ;; This function uses a non-reentrant model
 10747 ;;
 10748                           
 10749                           
 10750                           ;psect for function _ADCRead
 10751  1243                     _ADCRead:	
 10752                           
 10753                           ;incstack = 0
 10754                           ; Regs used in _ADCRead: [wreg]
 10755                           ;ADCRead@channel stored from wreg
 10756  1243  00F3               	movwf	ADCRead@channel
 10757                           
 10758                           ;adc.c: 23: ADPCH = channel_VSS;
 10759  1244  303C               	movlw	60
 10760  1245  0021               	movlb	1	; select bank1
 10761  1246  009E               	movwf	30	;volatile
 10762                           
 10763                           ;adc.c: 25: ADCON0bits.ADON = 1;
 10764  1247  1793               	bsf	19,7	;volatile
 10765                           
 10766                           ;adc.c: 27: ADCON0bits.ADCONT = 0;
 10767  1248  1313               	bcf	19,6	;volatile
 10768                           
 10769                           ;adc.c: 29: ADCON0bits.ADGO = 1;
 10770  1249  1413               	bsf	19,0	;volatile
 10771  124A                     l182:	
 10772                           ;adc.c: 32: {
 10773                           
 10774                           ;adc.c: 31: while(ADCON0bits.ADGO)
 10775                           
 10776  124A  1813               	btfsc	19,0	;volatile
 10777  124B  2A4A               	goto	l182
 10778                           
 10779                           ;adc.c: 33: }
 10780                           ;adc.c: 35: ADPCH = channel;
 10781  124C  0873               	movf	ADCRead@channel,w
 10782  124D  009E               	movwf	30	;volatile
 10783                           
 10784                           ;adc.c: 37: ADCON0bits.ADON = 1;
 10785  124E  1793               	bsf	19,7	;volatile
 10786                           
 10787                           ;adc.c: 39: ADCON0bits.ADCONT = 0;
 10788  124F  1313               	bcf	19,6	;volatile
 10789                           
 10790                           ;adc.c: 41: ADCON0bits.ADGO = 1;
 10791  1250  1413               	bsf	19,0	;volatile
 10792  1251                     l185:	
 10793                           ;adc.c: 44: {
 10794                           
 10795                           ;adc.c: 43: while(ADCON0bits.ADGO)
 10796                           
 10797  1251  1813               	btfsc	19,0	;volatile
 10798  1252  2A51               	goto	l185
 10799                           
 10800                           ;adc.c: 45: }
 10801                           ;adc.c: 47: return ((ADRESH<<8)+ADRESL);
 10802  1253  080D               	movf	13,w	;volatile
 10803  1254  00F1               	movwf	?_ADCRead+1
 10804  1255  080C               	movf	12,w	;volatile
 10805  1256  00F0               	movwf	?_ADCRead
 10806  1257  0008               	return
 10807  1258                     __end_of_ADCRead:	
 10808                           
 10809                           	psect	text13
 10810  0D15                     __ptext13:	
 10811 ;; *************** function _cc_cv_mode *****************
 10812 ;; Defined at:
 10813 ;;		line 100 in file "battery_charger.c"
 10814 ;; Parameters:    Size  Location     Type
 10815 ;;		None
 10816 ;; Auto vars:     Size  Location     Type
 10817 ;;		None
 10818 ;; Return value:  Size  Location     Type
 10819 ;;                  1    wreg      void 
 10820 ;; Registers used:
 10821 ;;		wreg, status,2, status,0
 10822 ;; Tracked objects:
 10823 ;;		On entry : 0/0
 10824 ;;		On exit  : 0/0
 10825 ;;		Unchanged: 0/0
 10826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10829 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10830 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10831 ;;Total ram usage:        1 bytes
 10832 ;; Hardware stack levels used:    1
 10833 ;; This function calls:
 10834 ;;		Nothing
 10835 ;; This function is called by:
 10836 ;;		_main
 10837 ;; This function uses a non-reentrant model
 10838 ;;
 10839                           
 10840                           
 10841                           ;psect for function _cc_cv_mode
 10842  0D15                     _cc_cv_mode:	
 10843                           
 10844                           ;battery_charger.c: 102: if(voltage[1]>Vref0)
 10845                           
 10846                           ;incstack = 0
 10847                           ; Regs used in _cc_cv_mode: [wreg+status,2+status,0]
 10848  0D15  0021               	movlb	1	; select bank1
 10849  0D16  084A               	movf	(_Vref0+1)^(0+128),w
 10850  0D17  3A80               	xorlw	128
 10851  0D18  00F0               	movwf	??_cc_cv_mode
 10852  0D19  082B               	movf	((_voltage+1)^(0+128)+2),w
 10853  0D1A  3A80               	xorlw	128
 10854  0D1B  0270               	subwf	??_cc_cv_mode,w
 10855  0D1C  1D03               	skipz
 10856  0D1D  2D20               	goto	u5395
 10857  0D1E  082A               	movf	(_voltage^(0+128)+2),w
 10858  0D1F  0249               	subwf	_Vref0^(0+128),w
 10859  0D20                     u5395:	
 10860  0D20  1803               	skipnc
 10861  0D21  2D37               	goto	l4295
 10862                           
 10863                           ;battery_charger.c: 103: {
 10864                           ;battery_charger.c: 104: if(V0HoldMode<12)V0HoldMode+=1;
 10865  0D22  0021               	movlb	1	; select bank1
 10866  0D23  0846               	movf	_V0HoldMode^(0+128),w
 10867  0D24  3A80               	xorlw	128
 10868  0D25  3E74               	addlw	-140
 10869  0D26  1803               	skipnc
 10870  0D27  2D2C               	goto	l270
 10871  0D28  3001               	movlw	1
 10872  0D29  00F0               	movwf	??_cc_cv_mode
 10873  0D2A  0870               	movf	??_cc_cv_mode,w
 10874  0D2B  07C6               	addwf	_V0HoldMode^(0+128),f
 10875  0D2C                     l270:	
 10876                           
 10877                           ;battery_charger.c: 106: if(cc_cv0)
 10878  0D2C  0844               	movf	_cc_cv0^(0+128),w
 10879  0D2D  1903               	btfsc	3,2
 10880  0D2E  2D32               	goto	l4291
 10881                           
 10882                           ;battery_charger.c: 107: {
 10883                           ;battery_charger.c: 108: cc_cv0-=1;
 10884  0D2F  3001               	movlw	1
 10885  0D30  02C4               	subwf	_cc_cv0^(0+128),f
 10886                           
 10887                           ;battery_charger.c: 109: }
 10888  0D31  2D58               	goto	l4305
 10889  0D32                     l4291:	
 10890                           
 10891                           ;battery_charger.c: 110: else
 10892                           ;battery_charger.c: 111: {
 10893                           ;battery_charger.c: 112: if(Imode0)
 10894  0D32  084D               	movf	_Imode0^(0+128),w
 10895  0D33  1903               	btfsc	3,2
 10896  0D34  2D58               	goto	l4305
 10897                           
 10898                           ;battery_charger.c: 113: {
 10899                           ;battery_charger.c: 114: Imode0 = 0;
 10900  0D35  01CD               	clrf	_Imode0^(0+128)
 10901                           
 10902                           ;battery_charger.c: 115: }
 10903                           ;battery_charger.c: 116: }
 10904                           ;battery_charger.c: 117: }
 10905  0D36  2D58               	goto	l4305
 10906  0D37                     l4295:	
 10907                           
 10908                           ;battery_charger.c: 118: else if(voltage[1]<Vref0)
 10909  0D37  0021               	movlb	1	; select bank1
 10910  0D38  082B               	movf	((_voltage+1)^(0+128)+2),w
 10911  0D39  3A80               	xorlw	128
 10912  0D3A  00F0               	movwf	??_cc_cv_mode
 10913  0D3B  084A               	movf	(_Vref0+1)^(0+128),w
 10914  0D3C  3A80               	xorlw	128
 10915  0D3D  0270               	subwf	??_cc_cv_mode,w
 10916  0D3E  1D03               	skipz
 10917  0D3F  2D42               	goto	u5435
 10918  0D40  0849               	movf	_Vref0^(0+128),w
 10919  0D41  022A               	subwf	(_voltage^(0+128)+2),w
 10920  0D42                     u5435:	
 10921  0D42  1803               	skipnc
 10922  0D43  2D58               	goto	l4305
 10923                           
 10924                           ;battery_charger.c: 119: {
 10925                           ;battery_charger.c: 120: V0HoldMode-=1;
 10926  0D44  30FF               	movlw	255
 10927  0D45  00F0               	movwf	??_cc_cv_mode
 10928  0D46  0870               	movf	??_cc_cv_mode,w
 10929  0D47  0021               	movlb	1	; select bank1
 10930  0D48  07C6               	addwf	_V0HoldMode^(0+128),f
 10931                           
 10932                           ;battery_charger.c: 121: if(V0HoldMode<(10*-1))
 10933  0D49  0846               	movf	_V0HoldMode^(0+128),w
 10934  0D4A  3A80               	xorlw	128
 10935  0D4B  3E8A               	addlw	138
 10936  0D4C  1803               	skipnc
 10937  0D4D  2D58               	goto	l4305
 10938                           
 10939                           ;battery_charger.c: 122: {
 10940                           ;battery_charger.c: 123: Imode0 = 1;
 10941  0D4E  01CD               	clrf	_Imode0^(0+128)
 10942  0D4F  0ACD               	incf	_Imode0^(0+128),f
 10943                           
 10944                           ;battery_charger.c: 124: cc_cv0 = (10*2);
 10945  0D50  3014               	movlw	20
 10946  0D51  00F0               	movwf	??_cc_cv_mode
 10947  0D52  0870               	movf	??_cc_cv_mode,w
 10948  0D53  00C4               	movwf	_cc_cv0^(0+128)
 10949                           
 10950                           ;battery_charger.c: 125: V0HoldMode=(10*-1);
 10951  0D54  30F6               	movlw	246
 10952  0D55  00F0               	movwf	??_cc_cv_mode
 10953  0D56  0870               	movf	??_cc_cv_mode,w
 10954  0D57  00C6               	movwf	_V0HoldMode^(0+128)
 10955  0D58                     l4305:	
 10956                           ;battery_charger.c: 126: }
 10957                           ;battery_charger.c: 127: }
 10958                           
 10959                           
 10960                           ;battery_charger.c: 130: if(current[1]>Iref0)
 10961  0D58  0021               	movlb	1	; select bank1
 10962  0D59  0848               	movf	(_Iref0+1)^(0+128),w
 10963  0D5A  3A80               	xorlw	128
 10964  0D5B  00F0               	movwf	??_cc_cv_mode
 10965  0D5C  0823               	movf	((_current+1)^(0+128)+2),w
 10966  0D5D  3A80               	xorlw	128
 10967  0D5E  0270               	subwf	??_cc_cv_mode,w
 10968  0D5F  1D03               	skipz
 10969  0D60  2D63               	goto	u5455
 10970  0D61  0822               	movf	(_current^(0+128)+2),w
 10971  0D62  0247               	subwf	_Iref0^(0+128),w
 10972  0D63                     u5455:	
 10973  0D63  1803               	skipnc
 10974  0D64  2D7F               	goto	l278
 10975                           
 10976                           ;battery_charger.c: 131: {
 10977                           ;battery_charger.c: 132: if(!Imode0)
 10978  0D65  0021               	movlb	1	; select bank1
 10979  0D66  084D               	movf	_Imode0^(0+128),w
 10980  0D67  1D03               	btfss	3,2
 10981  0D68  2D7F               	goto	l278
 10982                           
 10983                           ;battery_charger.c: 133: {
 10984                           ;battery_charger.c: 134: if(battery_state0 == FLOAT)
 10985  0D69  3005               	movlw	5
 10986  0D6A  064B               	xorwf	_battery_state0^(0+128),w
 10987  0D6B  1D03               	btfss	3,2
 10988  0D6C  2D7F               	goto	l278
 10989                           
 10990                           ;battery_charger.c: 135: {
 10991                           ;battery_charger.c: 136: battery_state0=CHARGE;
 10992  0D6D  3004               	movlw	4
 10993  0D6E  00F0               	movwf	??_cc_cv_mode
 10994  0D6F  0870               	movf	??_cc_cv_mode,w
 10995  0D70  00CB               	movwf	_battery_state0^(0+128)
 10996                           
 10997                           ;battery_charger.c: 137: { Vref0 = 1425; };
 10998  0D71  3091               	movlw	145
 10999  0D72  00C9               	movwf	_Vref0^(0+128)
 11000  0D73  3005               	movlw	5
 11001  0D74  00CA               	movwf	(_Vref0^(0+128)+1)
 11002                           
 11003                           ;battery_charger.c: 138: { Iref0 = 35; };
 11004  0D75  3023               	movlw	35
 11005  0D76  00C7               	movwf	_Iref0^(0+128)
 11006  0D77  3000               	movlw	0
 11007  0D78  00C8               	movwf	(_Iref0^(0+128)+1)
 11008                           
 11009                           ;battery_charger.c: 139: Imode0 = 1;
 11010  0D79  01CD               	clrf	_Imode0^(0+128)
 11011  0D7A  0ACD               	incf	_Imode0^(0+128),f
 11012                           
 11013                           ;battery_charger.c: 140: cc_cv0 = 10;
 11014  0D7B  300A               	movlw	10
 11015  0D7C  00F0               	movwf	??_cc_cv_mode
 11016  0D7D  0870               	movf	??_cc_cv_mode,w
 11017  0D7E  00C4               	movwf	_cc_cv0^(0+128)
 11018  0D7F                     l278:	
 11019                           
 11020                           ;battery_charger.c: 141: }
 11021                           ;battery_charger.c: 142: }
 11022                           ;battery_charger.c: 143: }
 11023                           ;battery_charger.c: 148: if(voltage[3]>Vref1)
 11024  0D7F  0021               	movlb	1	; select bank1
 11025  0D80  0841               	movf	(_Vref1+1)^(0+128),w
 11026  0D81  3A80               	xorlw	128
 11027  0D82  00F0               	movwf	??_cc_cv_mode
 11028  0D83  082F               	movf	((_voltage+1)^(0+128)+6),w
 11029  0D84  3A80               	xorlw	128
 11030  0D85  0270               	subwf	??_cc_cv_mode,w
 11031  0D86  1D03               	skipz
 11032  0D87  2D8A               	goto	u5485
 11033  0D88  082E               	movf	(_voltage^(0+128)+6),w
 11034  0D89  0240               	subwf	_Vref1^(0+128),w
 11035  0D8A                     u5485:	
 11036  0D8A  1803               	skipnc
 11037  0D8B  2DA2               	goto	l4325
 11038                           
 11039                           ;battery_charger.c: 149: {
 11040                           ;battery_charger.c: 150: if(V1HoldMode<12)V1HoldMode+=1;
 11041  0D8C  0020               	movlb	0	; select bank0
 11042  0D8D  086E               	movf	_V1HoldMode,w
 11043  0D8E  3A80               	xorlw	128
 11044  0D8F  3E74               	addlw	-140
 11045  0D90  1803               	skipnc
 11046  0D91  2D96               	goto	l282
 11047  0D92  3001               	movlw	1
 11048  0D93  00F0               	movwf	??_cc_cv_mode
 11049  0D94  0870               	movf	??_cc_cv_mode,w
 11050  0D95  07EE               	addwf	_V1HoldMode,f
 11051  0D96                     l282:	
 11052                           
 11053                           ;battery_charger.c: 152: if(cc_cv1)
 11054  0D96  0021               	movlb	1	; select bank1
 11055  0D97  0843               	movf	_cc_cv1^(0+128),w
 11056  0D98  1903               	btfsc	3,2
 11057  0D99  2D9D               	goto	l4321
 11058                           
 11059                           ;battery_charger.c: 153: {
 11060                           ;battery_charger.c: 154: cc_cv1-=1;
 11061  0D9A  3001               	movlw	1
 11062  0D9B  02C3               	subwf	_cc_cv1^(0+128),f
 11063                           
 11064                           ;battery_charger.c: 155: }
 11065  0D9C  2DC5               	goto	l4335
 11066  0D9D                     l4321:	
 11067                           
 11068                           ;battery_charger.c: 156: else
 11069                           ;battery_charger.c: 157: {
 11070                           ;battery_charger.c: 158: if(Imode1)
 11071  0D9D  084C               	movf	_Imode1^(0+128),w
 11072  0D9E  1903               	btfsc	3,2
 11073  0D9F  2DC5               	goto	l4335
 11074                           
 11075                           ;battery_charger.c: 159: {
 11076                           ;battery_charger.c: 160: Imode1 = 0;
 11077  0DA0  01CC               	clrf	_Imode1^(0+128)
 11078                           
 11079                           ;battery_charger.c: 161: }
 11080                           ;battery_charger.c: 162: }
 11081                           ;battery_charger.c: 163: }
 11082  0DA1  2DC5               	goto	l4335
 11083  0DA2                     l4325:	
 11084                           
 11085                           ;battery_charger.c: 164: else if(voltage[3]<Vref1)
 11086  0DA2  0021               	movlb	1	; select bank1
 11087  0DA3  082F               	movf	((_voltage+1)^(0+128)+6),w
 11088  0DA4  3A80               	xorlw	128
 11089  0DA5  00F0               	movwf	??_cc_cv_mode
 11090  0DA6  0841               	movf	(_Vref1+1)^(0+128),w
 11091  0DA7  3A80               	xorlw	128
 11092  0DA8  0270               	subwf	??_cc_cv_mode,w
 11093  0DA9  1D03               	skipz
 11094  0DAA  2DAD               	goto	u5525
 11095  0DAB  0840               	movf	_Vref1^(0+128),w
 11096  0DAC  022E               	subwf	(_voltage^(0+128)+6),w
 11097  0DAD                     u5525:	
 11098  0DAD  1803               	skipnc
 11099  0DAE  2DC5               	goto	l4335
 11100                           
 11101                           ;battery_charger.c: 165: {
 11102                           ;battery_charger.c: 166: V1HoldMode-=1;
 11103  0DAF  30FF               	movlw	255
 11104  0DB0  00F0               	movwf	??_cc_cv_mode
 11105  0DB1  0870               	movf	??_cc_cv_mode,w
 11106  0DB2  0020               	movlb	0	; select bank0
 11107  0DB3  07EE               	addwf	_V1HoldMode,f
 11108                           
 11109                           ;battery_charger.c: 167: if(V1HoldMode<(10*-1))
 11110  0DB4  086E               	movf	_V1HoldMode,w
 11111  0DB5  3A80               	xorlw	128
 11112  0DB6  3E8A               	addlw	138
 11113  0DB7  1803               	skipnc
 11114  0DB8  2DC5               	goto	l4335
 11115                           
 11116                           ;battery_charger.c: 168: {
 11117                           ;battery_charger.c: 169: Imode1 = 1;
 11118  0DB9  0021               	movlb	1	; select bank1
 11119  0DBA  01CC               	clrf	_Imode1^(0+128)
 11120  0DBB  0ACC               	incf	_Imode1^(0+128),f
 11121                           
 11122                           ;battery_charger.c: 170: cc_cv1 = (10*2);
 11123  0DBC  3014               	movlw	20
 11124  0DBD  00F0               	movwf	??_cc_cv_mode
 11125  0DBE  0870               	movf	??_cc_cv_mode,w
 11126  0DBF  00C3               	movwf	_cc_cv1^(0+128)
 11127                           
 11128                           ;battery_charger.c: 171: V1HoldMode=(10*-1);
 11129  0DC0  30F6               	movlw	246
 11130  0DC1  00F0               	movwf	??_cc_cv_mode
 11131  0DC2  0870               	movf	??_cc_cv_mode,w
 11132  0DC3  0020               	movlb	0	; select bank0
 11133  0DC4  00EE               	movwf	_V1HoldMode
 11134  0DC5                     l4335:	
 11135                           ;battery_charger.c: 172: }
 11136                           ;battery_charger.c: 173: }
 11137                           
 11138                           
 11139                           ;battery_charger.c: 176: if(current[3]>Iref1)
 11140  0DC5  0021               	movlb	1	; select bank1
 11141  0DC6  083F               	movf	(_Iref1+1)^(0+128),w
 11142  0DC7  3A80               	xorlw	128
 11143  0DC8  00F0               	movwf	??_cc_cv_mode
 11144  0DC9  0827               	movf	((_current+1)^(0+128)+6),w
 11145  0DCA  3A80               	xorlw	128
 11146  0DCB  0270               	subwf	??_cc_cv_mode,w
 11147  0DCC  1D03               	skipz
 11148  0DCD  2DD0               	goto	u5545
 11149  0DCE  0826               	movf	(_current^(0+128)+6),w
 11150  0DCF  023E               	subwf	_Iref1^(0+128),w
 11151  0DD0                     u5545:	
 11152  0DD0  1803               	skipnc
 11153  0DD1  0008               	return
 11154                           
 11155                           ;battery_charger.c: 177: {
 11156                           ;battery_charger.c: 178: if(!Imode1)
 11157  0DD2  0021               	movlb	1	; select bank1
 11158  0DD3  084C               	movf	_Imode1^(0+128),w
 11159  0DD4  1D03               	btfss	3,2
 11160  0DD5  0008               	return
 11161                           
 11162                           ;battery_charger.c: 179: {
 11163                           ;battery_charger.c: 180: if(battery_state1 == FLOAT)
 11164  0DD6  3005               	movlw	5
 11165  0DD7  0645               	xorwf	_battery_state1^(0+128),w
 11166  0DD8  1D03               	btfss	3,2
 11167  0DD9  0008               	return
 11168                           
 11169                           ;battery_charger.c: 181: {
 11170                           ;battery_charger.c: 182: battery_state1=CHARGE;
 11171  0DDA  3004               	movlw	4
 11172  0DDB  00F0               	movwf	??_cc_cv_mode
 11173  0DDC  0870               	movf	??_cc_cv_mode,w
 11174  0DDD  00C5               	movwf	_battery_state1^(0+128)
 11175                           
 11176                           ;battery_charger.c: 183: { Vref1 = 1425; };
 11177  0DDE  3091               	movlw	145
 11178  0DDF  00C0               	movwf	_Vref1^(0+128)
 11179  0DE0  3005               	movlw	5
 11180  0DE1  00C1               	movwf	(_Vref1^(0+128)+1)
 11181                           
 11182                           ;battery_charger.c: 184: { Iref1 = 35; };
 11183  0DE2  3023               	movlw	35
 11184  0DE3  00BE               	movwf	_Iref1^(0+128)
 11185  0DE4  3000               	movlw	0
 11186  0DE5  00BF               	movwf	(_Iref1^(0+128)+1)
 11187                           
 11188                           ;battery_charger.c: 185: Imode1 = 1;
 11189  0DE6  01CC               	clrf	_Imode1^(0+128)
 11190  0DE7  0ACC               	incf	_Imode1^(0+128),f
 11191                           
 11192                           ;battery_charger.c: 186: cc_cv1 = 10;
 11193  0DE8  300A               	movlw	10
 11194  0DE9  00F0               	movwf	??_cc_cv_mode
 11195  0DEA  0870               	movf	??_cc_cv_mode,w
 11196  0DEB  00C3               	movwf	_cc_cv1^(0+128)
 11197  0DEC  0008               	return
 11198  0DED                     __end_of_cc_cv_mode:	
 11199                           
 11200                           	psect	text14
 11201  1540                     __ptext14:	
 11202 ;; *************** function _calculateCurrent1 *****************
 11203 ;; Defined at:
 11204 ;;		line 312 in file "main.c"
 11205 ;; Parameters:    Size  Location     Type
 11206 ;;		None
 11207 ;; Auto vars:     Size  Location     Type
 11208 ;;		None
 11209 ;; Return value:  Size  Location     Type
 11210 ;;                  1    wreg      void 
 11211 ;; Registers used:
 11212 ;;		wreg, status,2, status,0, pclath, cstack
 11213 ;; Tracked objects:
 11214 ;;		On entry : 0/0
 11215 ;;		On exit  : 0/0
 11216 ;;		Unchanged: 0/0
 11217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11220 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11221 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11222 ;;Total ram usage:        3 bytes
 11223 ;; Hardware stack levels used:    1
 11224 ;; Hardware stack levels required when called:    2
 11225 ;; This function calls:
 11226 ;;		___awtoft
 11227 ;;		___ftdiv
 11228 ;;		___fttol
 11229 ;; This function is called by:
 11230 ;;		_main
 11231 ;; This function uses a non-reentrant model
 11232 ;;
 11233                           
 11234                           
 11235                           ;psect for function _calculateCurrent1
 11236  1540                     _calculateCurrent1:	
 11237                           
 11238                           ;main.c: 314: if(Ianalogs[1]-580<=0)
 11239                           
 11240                           ;incstack = 0
 11241                           ; Regs used in _calculateCurrent1: [wreg+status,2+status,0+pclath+cstack]
 11242  1540  0022               	movlb	2	; select bank2
 11243  1541  0832               	movf	(_Ianalogs^(0+256)+2),w
 11244  1542  3EBC               	addlw	188
 11245  1543  0020               	movlb	0	; select bank0
 11246  1544  00BE               	movwf	??_calculateCurrent1
 11247  1545  30FD               	movlw	253
 11248  1546  0022               	movlb	2	; select bank2
 11249  1547  3D33               	addwfc	((_Ianalogs+1)^(0+256)+2),w
 11250  1548  0020               	movlb	0	; select bank0
 11251  1549  00BF               	movwf	??_calculateCurrent1+1
 11252  154A  083F               	movf	??_calculateCurrent1+1,w
 11253  154B  3A80               	xorlw	128
 11254  154C  00C0               	movwf	??_calculateCurrent1+2
 11255  154D  3080               	movlw	128
 11256  154E  0240               	subwf	??_calculateCurrent1+2,w
 11257  154F  1D03               	skipz
 11258  1550  2D53               	goto	u5075
 11259  1551  3001               	movlw	1
 11260  1552  023E               	subwf	??_calculateCurrent1,w
 11261  1553                     u5075:	
 11262  1553  1803               	skipnc
 11263  1554  2D59               	goto	l4119
 11264                           
 11265                           ;main.c: 315: {
 11266                           ;main.c: 316: current[1]=0;
 11267  1555  0021               	movlb	1	; select bank1
 11268  1556  01A2               	clrf	(_current^(0+128)+2)
 11269  1557  01A3               	clrf	((_current+1)^(0+128)+2)
 11270                           
 11271                           ;main.c: 317: }
 11272  1558  0008               	return
 11273  1559                     l4119:	
 11274                           
 11275                           ;main.c: 318: else
 11276                           ;main.c: 319: {
 11277                           ;main.c: 320: current[1]=(int16_t)((Ianalogs[1]-580)/3.22);
 11278  1559  0022               	movlb	2	; select bank2
 11279  155A  0832               	movf	(_Ianalogs^(0+256)+2),w
 11280  155B  3EBC               	addlw	188
 11281  155C  00F8               	movwf	___awtoft@c
 11282  155D  30FD               	movlw	253
 11283  155E  3D33               	addwfc	((_Ianalogs+1)^(0+256)+2),w
 11284  155F  00F9               	movwf	___awtoft@c+1
 11285  1560  3193  2348  3195   	fcall	___awtoft
 11286  1563  0878               	movf	?___awtoft,w
 11287  1564  0020               	movlb	0	; select bank0
 11288  1565  00A3               	movwf	___ftdiv@f1
 11289  1566  0879               	movf	?___awtoft+1,w
 11290  1567  00A4               	movwf	___ftdiv@f1+1
 11291  1568  087A               	movf	?___awtoft+2,w
 11292  1569  00A5               	movwf	___ftdiv@f1+2
 11293  156A  3014               	movlw	20
 11294  156B  00A0               	movwf	___ftdiv@f2
 11295  156C  304E               	movlw	78
 11296  156D  00A1               	movwf	___ftdiv@f2+1
 11297  156E  3040               	movlw	64
 11298  156F  00A2               	movwf	___ftdiv@f2+2
 11299  1570  318A  224F  3195   	fcall	___ftdiv
 11300  1573  0020               	movlb	0	; select bank0
 11301  1574  0820               	movf	?___ftdiv,w
 11302  1575  00B0               	movwf	___fttol@f1
 11303  1576  0821               	movf	?___ftdiv+1,w
 11304  1577  00B1               	movwf	___fttol@f1+1
 11305  1578  0822               	movf	?___ftdiv+2,w
 11306  1579  00B2               	movwf	___fttol@f1+2
 11307  157A  3196  26F2         	fcall	___fttol
 11308  157C  0020               	movlb	0	; select bank0
 11309  157D  0831               	movf	?___fttol+1,w
 11310  157E  0021               	movlb	1	; select bank1
 11311  157F  00A3               	movwf	((_current+1)^(0+128)+2)
 11312  1580  0020               	movlb	0	; select bank0
 11313  1581  0830               	movf	?___fttol,w
 11314  1582  0021               	movlb	1	; select bank1
 11315  1583  00A2               	movwf	(_current^(0+128)+2)
 11316  1584  0008               	return
 11317  1585                     __end_of_calculateCurrent1:	
 11318                           
 11319                           	psect	text15
 11320  14FB                     __ptext15:	
 11321 ;; *************** function _calculateCurrent0 *****************
 11322 ;; Defined at:
 11323 ;;		line 300 in file "main.c"
 11324 ;; Parameters:    Size  Location     Type
 11325 ;;		None
 11326 ;; Auto vars:     Size  Location     Type
 11327 ;;		None
 11328 ;; Return value:  Size  Location     Type
 11329 ;;                  1    wreg      void 
 11330 ;; Registers used:
 11331 ;;		wreg, status,2, status,0, pclath, cstack
 11332 ;; Tracked objects:
 11333 ;;		On entry : 0/0
 11334 ;;		On exit  : 0/0
 11335 ;;		Unchanged: 0/0
 11336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11339 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11340 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11341 ;;Total ram usage:        3 bytes
 11342 ;; Hardware stack levels used:    1
 11343 ;; Hardware stack levels required when called:    2
 11344 ;; This function calls:
 11345 ;;		___awtoft
 11346 ;;		___ftdiv
 11347 ;;		___fttol
 11348 ;; This function is called by:
 11349 ;;		_main
 11350 ;; This function uses a non-reentrant model
 11351 ;;
 11352                           
 11353                           
 11354                           ;psect for function _calculateCurrent0
 11355  14FB                     _calculateCurrent0:	
 11356                           
 11357                           ;main.c: 302: if(Ianalogs[0]-565<=0)
 11358                           
 11359                           ;incstack = 0
 11360                           ; Regs used in _calculateCurrent0: [wreg+status,2+status,0+pclath+cstack]
 11361  14FB  0022               	movlb	2	; select bank2
 11362  14FC  0830               	movf	_Ianalogs^(0+256),w
 11363  14FD  3ECB               	addlw	203
 11364  14FE  0020               	movlb	0	; select bank0
 11365  14FF  00BE               	movwf	??_calculateCurrent0
 11366  1500  30FD               	movlw	253
 11367  1501  0022               	movlb	2	; select bank2
 11368  1502  3D31               	addwfc	(_Ianalogs+1)^(0+256),w
 11369  1503  0020               	movlb	0	; select bank0
 11370  1504  00BF               	movwf	??_calculateCurrent0+1
 11371  1505  083F               	movf	??_calculateCurrent0+1,w
 11372  1506  3A80               	xorlw	128
 11373  1507  00C0               	movwf	??_calculateCurrent0+2
 11374  1508  3080               	movlw	128
 11375  1509  0240               	subwf	??_calculateCurrent0+2,w
 11376  150A  1D03               	skipz
 11377  150B  2D0E               	goto	u5065
 11378  150C  3001               	movlw	1
 11379  150D  023E               	subwf	??_calculateCurrent0,w
 11380  150E                     u5065:	
 11381  150E  1803               	skipnc
 11382  150F  2D14               	goto	l4113
 11383                           
 11384                           ;main.c: 303: {
 11385                           ;main.c: 304: current[0]=0;
 11386  1510  0021               	movlb	1	; select bank1
 11387  1511  01A0               	clrf	_current^(0+128)
 11388  1512  01A1               	clrf	(_current+1)^(0+128)
 11389                           
 11390                           ;main.c: 305: }
 11391  1513  0008               	return
 11392  1514                     l4113:	
 11393                           
 11394                           ;main.c: 306: else
 11395                           ;main.c: 307: {
 11396                           ;main.c: 308: current[0]=(int16_t)((Ianalogs[0]-565)/3.12);
 11397  1514  0022               	movlb	2	; select bank2
 11398  1515  0830               	movf	_Ianalogs^(0+256),w
 11399  1516  3ECB               	addlw	203
 11400  1517  00F8               	movwf	___awtoft@c
 11401  1518  30FD               	movlw	253
 11402  1519  3D31               	addwfc	(_Ianalogs+1)^(0+256),w
 11403  151A  00F9               	movwf	___awtoft@c+1
 11404  151B  3193  2348  3194   	fcall	___awtoft
 11405  151E  0878               	movf	?___awtoft,w
 11406  151F  0020               	movlb	0	; select bank0
 11407  1520  00A3               	movwf	___ftdiv@f1
 11408  1521  0879               	movf	?___awtoft+1,w
 11409  1522  00A4               	movwf	___ftdiv@f1+1
 11410  1523  087A               	movf	?___awtoft+2,w
 11411  1524  00A5               	movwf	___ftdiv@f1+2
 11412  1525  30AE               	movlw	174
 11413  1526  00A0               	movwf	___ftdiv@f2
 11414  1527  3047               	movlw	71
 11415  1528  00A1               	movwf	___ftdiv@f2+1
 11416  1529  3040               	movlw	64
 11417  152A  00A2               	movwf	___ftdiv@f2+2
 11418  152B  318A  224F  3194   	fcall	___ftdiv
 11419  152E  0020               	movlb	0	; select bank0
 11420  152F  0820               	movf	?___ftdiv,w
 11421  1530  00B0               	movwf	___fttol@f1
 11422  1531  0821               	movf	?___ftdiv+1,w
 11423  1532  00B1               	movwf	___fttol@f1+1
 11424  1533  0822               	movf	?___ftdiv+2,w
 11425  1534  00B2               	movwf	___fttol@f1+2
 11426  1535  3196  26F2         	fcall	___fttol
 11427  1537  0020               	movlb	0	; select bank0
 11428  1538  0831               	movf	?___fttol+1,w
 11429  1539  0021               	movlb	1	; select bank1
 11430  153A  00A1               	movwf	(_current+1)^(0+128)
 11431  153B  0020               	movlb	0	; select bank0
 11432  153C  0830               	movf	?___fttol,w
 11433  153D  0021               	movlb	1	; select bank1
 11434  153E  00A0               	movwf	_current^(0+128)
 11435  153F  0008               	return
 11436  1540                     __end_of_calculateCurrent0:	
 11437                           
 11438                           	psect	text16
 11439  16F2                     __ptext16:	
 11440 ;; *************** function ___fttol *****************
 11441 ;; Defined at:
 11442 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
 11443 ;; Parameters:    Size  Location     Type
 11444 ;;  f1              3   16[BANK0 ] float 
 11445 ;; Auto vars:     Size  Location     Type
 11446 ;;  lval            4   25[BANK0 ] unsigned long 
 11447 ;;  exp1            1   29[BANK0 ] unsigned char 
 11448 ;;  sign1           1   24[BANK0 ] unsigned char 
 11449 ;; Return value:  Size  Location     Type
 11450 ;;                  4   16[BANK0 ] long 
 11451 ;; Registers used:
 11452 ;;		wreg, status,2, status,0
 11453 ;; Tracked objects:
 11454 ;;		On entry : 0/0
 11455 ;;		On exit  : 0/0
 11456 ;;		Unchanged: 0/0
 11457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11458 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11459 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11460 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11461 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11462 ;;Total ram usage:       14 bytes
 11463 ;; Hardware stack levels used:    1
 11464 ;; This function calls:
 11465 ;;		Nothing
 11466 ;; This function is called by:
 11467 ;;		_main
 11468 ;;		_calculateCurrent0
 11469 ;;		_calculateCurrent1
 11470 ;;		_tempCalc
 11471 ;; This function uses a non-reentrant model
 11472 ;;
 11473                           
 11474                           
 11475                           ;psect for function ___fttol
 11476  16F2                     ___fttol:	
 11477                           
 11478                           ;incstack = 0
 11479                           ; Regs used in ___fttol: [wreg+status,2+status,0]
 11480  16F2  0020               	movlb	0	; select bank0
 11481  16F3  0830               	movf	___fttol@f1,w
 11482  16F4  00B4               	movwf	??___fttol
 11483  16F5  0831               	movf	___fttol@f1+1,w
 11484  16F6  00B5               	movwf	??___fttol+1
 11485  16F7  0832               	movf	___fttol@f1+2,w
 11486  16F8  00B6               	movwf	??___fttol+2
 11487  16F9  1003               	clrc
 11488  16FA  0D35               	rlf	??___fttol+1,w
 11489  16FB  0D36               	rlf	??___fttol+2,w
 11490  16FC  00B7               	movwf	??___fttol+3
 11491  16FD  0837               	movf	??___fttol+3,w
 11492  16FE  00BD               	movwf	___fttol@exp1
 11493  16FF  083D               	movf	___fttol@exp1,w
 11494  1700  1D03               	btfss	3,2
 11495  1701  2F0B               	goto	l4025
 11496  1702  3000               	movlw	0
 11497  1703  00B3               	movwf	?___fttol+3
 11498  1704  3000               	movlw	0
 11499  1705  00B2               	movwf	?___fttol+2
 11500  1706  3000               	movlw	0
 11501  1707  00B1               	movwf	?___fttol+1
 11502  1708  3000               	movlw	0
 11503  1709  00B0               	movwf	?___fttol
 11504  170A  0008               	return
 11505  170B                     l4025:	
 11506  170B  0830               	movf	___fttol@f1,w
 11507  170C  00B4               	movwf	??___fttol
 11508  170D  0831               	movf	___fttol@f1+1,w
 11509  170E  00B5               	movwf	??___fttol+1
 11510  170F  0832               	movf	___fttol@f1+2,w
 11511  1710  00B6               	movwf	??___fttol+2
 11512  1711  3017               	movlw	23
 11513  1712                     u4845:	
 11514  1712  36B6               	lsrf	??___fttol+2,f
 11515  1713  0CB5               	rrf	??___fttol+1,f
 11516  1714  0CB4               	rrf	??___fttol,f
 11517  1715  0B89               	decfsz	9,f
 11518  1716  2F12               	goto	u4845
 11519  1717  0834               	movf	??___fttol,w
 11520  1718  00B7               	movwf	??___fttol+3
 11521  1719  0837               	movf	??___fttol+3,w
 11522  171A  00B8               	movwf	___fttol@sign1
 11523  171B  17B1               	bsf	___fttol@f1+1,7
 11524  171C  30FF               	movlw	255
 11525  171D  05B0               	andwf	___fttol@f1,f
 11526  171E  30FF               	movlw	255
 11527  171F  05B1               	andwf	___fttol@f1+1,f
 11528  1720  3000               	movlw	0
 11529  1721  05B2               	andwf	___fttol@f1+2,f
 11530  1722  0830               	movf	___fttol@f1,w
 11531  1723  00B9               	movwf	___fttol@lval
 11532  1724  0831               	movf	___fttol@f1+1,w
 11533  1725  00BA               	movwf	___fttol@lval+1
 11534  1726  0832               	movf	___fttol@f1+2,w
 11535  1727  00BB               	movwf	___fttol@lval+2
 11536  1728  01BC               	clrf	___fttol@lval+3
 11537  1729  308E               	movlw	142
 11538  172A  02BD               	subwf	___fttol@exp1,f
 11539  172B  1FBD               	btfss	___fttol@exp1,7
 11540  172C  2F49               	goto	l4045
 11541  172D  083D               	movf	___fttol@exp1,w
 11542  172E  3A80               	xorlw	128
 11543  172F  3E8F               	addlw	143
 11544  1730  1803               	skipnc
 11545  1731  2F3B               	goto	l4043
 11546  1732  3000               	movlw	0
 11547  1733  00B3               	movwf	?___fttol+3
 11548  1734  3000               	movlw	0
 11549  1735  00B2               	movwf	?___fttol+2
 11550  1736  3000               	movlw	0
 11551  1737  00B1               	movwf	?___fttol+1
 11552  1738  3000               	movlw	0
 11553  1739  00B0               	movwf	?___fttol
 11554  173A  0008               	return
 11555  173B                     l4043:	
 11556  173B  3001               	movlw	1
 11557  173C                     u4875:	
 11558  173C  36BC               	lsrf	___fttol@lval+3,f
 11559  173D  0CBB               	rrf	___fttol@lval+2,f
 11560  173E  0CBA               	rrf	___fttol@lval+1,f
 11561  173F  0CB9               	rrf	___fttol@lval,f
 11562  1740  0B89               	decfsz	9,f
 11563  1741  2F3C               	goto	u4875
 11564  1742  3001               	movlw	1
 11565  1743  00B4               	movwf	??___fttol
 11566  1744  0834               	movf	??___fttol,w
 11567  1745  07BD               	addwf	___fttol@exp1,f
 11568  1746  1903               	btfsc	3,2
 11569  1747  2F62               	goto	l4053
 11570  1748  2F3B               	goto	l4043
 11571  1749                     l4045:	
 11572  1749  3018               	movlw	24
 11573  174A  023D               	subwf	___fttol@exp1,w
 11574  174B  1C03               	skipc
 11575  174C  2F5F               	goto	l865
 11576  174D  3000               	movlw	0
 11577  174E  00B3               	movwf	?___fttol+3
 11578  174F  3000               	movlw	0
 11579  1750  00B2               	movwf	?___fttol+2
 11580  1751  3000               	movlw	0
 11581  1752  00B1               	movwf	?___fttol+1
 11582  1753  3000               	movlw	0
 11583  1754  00B0               	movwf	?___fttol
 11584  1755  0008               	return
 11585  1756                     l4051:	
 11586  1756  3001               	movlw	1
 11587  1757                     u4905:	
 11588  1757  35B9               	lslf	___fttol@lval,f
 11589  1758  0DBA               	rlf	___fttol@lval+1,f
 11590  1759  0DBB               	rlf	___fttol@lval+2,f
 11591  175A  0DBC               	rlf	___fttol@lval+3,f
 11592  175B  0B89               	decfsz	9,f
 11593  175C  2F57               	goto	u4905
 11594  175D  3001               	movlw	1
 11595  175E  02BD               	subwf	___fttol@exp1,f
 11596  175F                     l865:	
 11597  175F  083D               	movf	___fttol@exp1,w
 11598  1760  1D03               	btfss	3,2
 11599  1761  2F56               	goto	l4051
 11600  1762                     l4053:	
 11601  1762  0838               	movf	___fttol@sign1,w
 11602  1763  1903               	btfsc	3,2
 11603  1764  2F70               	goto	l4057
 11604  1765  09B9               	comf	___fttol@lval,f
 11605  1766  09BA               	comf	___fttol@lval+1,f
 11606  1767  09BB               	comf	___fttol@lval+2,f
 11607  1768  09BC               	comf	___fttol@lval+3,f
 11608  1769  0AB9               	incf	___fttol@lval,f
 11609  176A  1903               	skipnz
 11610  176B  0ABA               	incf	___fttol@lval+1,f
 11611  176C  1903               	skipnz
 11612  176D  0ABB               	incf	___fttol@lval+2,f
 11613  176E  1903               	skipnz
 11614  176F  0ABC               	incf	___fttol@lval+3,f
 11615  1770                     l4057:	
 11616  1770  083C               	movf	___fttol@lval+3,w
 11617  1771  00B3               	movwf	?___fttol+3
 11618  1772  083B               	movf	___fttol@lval+2,w
 11619  1773  00B2               	movwf	?___fttol+2
 11620  1774  083A               	movf	___fttol@lval+1,w
 11621  1775  00B1               	movwf	?___fttol+1
 11622  1776  0839               	movf	___fttol@lval,w
 11623  1777  00B0               	movwf	?___fttol
 11624  1778  0008               	return
 11625  1779                     __end_of___fttol:	
 11626                           
 11627                           	psect	text17
 11628  0A4F                     __ptext17:	
 11629 ;; *************** function ___ftdiv *****************
 11630 ;; Defined at:
 11631 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
 11632 ;; Parameters:    Size  Location     Type
 11633 ;;  f2              3    0[BANK0 ] float 
 11634 ;;  f1              3    3[BANK0 ] float 
 11635 ;; Auto vars:     Size  Location     Type
 11636 ;;  f3              3   11[BANK0 ] float 
 11637 ;;  sign            1   15[BANK0 ] unsigned char 
 11638 ;;  exp             1   14[BANK0 ] unsigned char 
 11639 ;;  cntr            1   10[BANK0 ] unsigned char 
 11640 ;; Return value:  Size  Location     Type
 11641 ;;                  3    0[BANK0 ] float 
 11642 ;; Registers used:
 11643 ;;		wreg, status,2, status,0, pclath, cstack
 11644 ;; Tracked objects:
 11645 ;;		On entry : 0/0
 11646 ;;		On exit  : 0/0
 11647 ;;		Unchanged: 0/0
 11648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11649 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11650 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11651 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11652 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11653 ;;Total ram usage:       16 bytes
 11654 ;; Hardware stack levels used:    1
 11655 ;; Hardware stack levels required when called:    1
 11656 ;; This function calls:
 11657 ;;		___ftpack
 11658 ;; This function is called by:
 11659 ;;		_main
 11660 ;;		_calculateCurrent0
 11661 ;;		_calculateCurrent1
 11662 ;;		_tempCalc
 11663 ;; This function uses a non-reentrant model
 11664 ;;
 11665                           
 11666                           
 11667                           ;psect for function ___ftdiv
 11668  0A4F                     ___ftdiv:	
 11669                           
 11670                           ;incstack = 0
 11671                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
 11672  0A4F  0020               	movlb	0	; select bank0
 11673  0A50  0823               	movf	___ftdiv@f1,w
 11674  0A51  00A6               	movwf	??___ftdiv
 11675  0A52  0824               	movf	___ftdiv@f1+1,w
 11676  0A53  00A7               	movwf	??___ftdiv+1
 11677  0A54  0825               	movf	___ftdiv@f1+2,w
 11678  0A55  00A8               	movwf	??___ftdiv+2
 11679  0A56  1003               	clrc
 11680  0A57  0D27               	rlf	??___ftdiv+1,w
 11681  0A58  0D28               	rlf	??___ftdiv+2,w
 11682  0A59  00A9               	movwf	??___ftdiv+3
 11683  0A5A  0829               	movf	??___ftdiv+3,w
 11684  0A5B  00AE               	movwf	___ftdiv@exp
 11685  0A5C  082E               	movf	___ftdiv@exp,w
 11686  0A5D  1D03               	btfss	3,2
 11687  0A5E  2A66               	goto	l3975
 11688  0A5F  3000               	movlw	0
 11689  0A60  00A0               	movwf	?___ftdiv
 11690  0A61  3000               	movlw	0
 11691  0A62  00A1               	movwf	?___ftdiv+1
 11692  0A63  3000               	movlw	0
 11693  0A64  00A2               	movwf	?___ftdiv+2
 11694  0A65  0008               	return
 11695  0A66                     l3975:	
 11696  0A66  0820               	movf	___ftdiv@f2,w
 11697  0A67  00A6               	movwf	??___ftdiv
 11698  0A68  0821               	movf	___ftdiv@f2+1,w
 11699  0A69  00A7               	movwf	??___ftdiv+1
 11700  0A6A  0822               	movf	___ftdiv@f2+2,w
 11701  0A6B  00A8               	movwf	??___ftdiv+2
 11702  0A6C  1003               	clrc
 11703  0A6D  0D27               	rlf	??___ftdiv+1,w
 11704  0A6E  0D28               	rlf	??___ftdiv+2,w
 11705  0A6F  00A9               	movwf	??___ftdiv+3
 11706  0A70  0829               	movf	??___ftdiv+3,w
 11707  0A71  00AF               	movwf	___ftdiv@sign
 11708  0A72  082F               	movf	___ftdiv@sign,w
 11709  0A73  1D03               	btfss	3,2
 11710  0A74  2A7C               	goto	l3981
 11711  0A75  3000               	movlw	0
 11712  0A76  00A0               	movwf	?___ftdiv
 11713  0A77  3000               	movlw	0
 11714  0A78  00A1               	movwf	?___ftdiv+1
 11715  0A79  3000               	movlw	0
 11716  0A7A  00A2               	movwf	?___ftdiv+2
 11717  0A7B  0008               	return
 11718  0A7C                     l3981:	
 11719  0A7C  3000               	movlw	0
 11720  0A7D  00AB               	movwf	___ftdiv@f3
 11721  0A7E  3000               	movlw	0
 11722  0A7F  00AC               	movwf	___ftdiv@f3+1
 11723  0A80  3000               	movlw	0
 11724  0A81  00AD               	movwf	___ftdiv@f3+2
 11725  0A82  3089               	movlw	137
 11726  0A83  072F               	addwf	___ftdiv@sign,w
 11727  0A84  00A6               	movwf	??___ftdiv
 11728  0A85  0826               	movf	??___ftdiv,w
 11729  0A86  02AE               	subwf	___ftdiv@exp,f
 11730  0A87  0823               	movf	___ftdiv@f1,w
 11731  0A88  00A6               	movwf	??___ftdiv
 11732  0A89  0824               	movf	___ftdiv@f1+1,w
 11733  0A8A  00A7               	movwf	??___ftdiv+1
 11734  0A8B  0825               	movf	___ftdiv@f1+2,w
 11735  0A8C  00A8               	movwf	??___ftdiv+2
 11736  0A8D  3010               	movlw	16
 11737  0A8E                     u4765:	
 11738  0A8E  36A8               	lsrf	??___ftdiv+2,f
 11739  0A8F  0CA7               	rrf	??___ftdiv+1,f
 11740  0A90  0CA6               	rrf	??___ftdiv,f
 11741  0A91  0B89               	decfsz	9,f
 11742  0A92  2A8E               	goto	u4765
 11743  0A93  0826               	movf	??___ftdiv,w
 11744  0A94  00A9               	movwf	??___ftdiv+3
 11745  0A95  0829               	movf	??___ftdiv+3,w
 11746  0A96  00AF               	movwf	___ftdiv@sign
 11747  0A97  0820               	movf	___ftdiv@f2,w
 11748  0A98  00A6               	movwf	??___ftdiv
 11749  0A99  0821               	movf	___ftdiv@f2+1,w
 11750  0A9A  00A7               	movwf	??___ftdiv+1
 11751  0A9B  0822               	movf	___ftdiv@f2+2,w
 11752  0A9C  00A8               	movwf	??___ftdiv+2
 11753  0A9D  3010               	movlw	16
 11754  0A9E                     u4775:	
 11755  0A9E  36A8               	lsrf	??___ftdiv+2,f
 11756  0A9F  0CA7               	rrf	??___ftdiv+1,f
 11757  0AA0  0CA6               	rrf	??___ftdiv,f
 11758  0AA1  0B89               	decfsz	9,f
 11759  0AA2  2A9E               	goto	u4775
 11760  0AA3  0826               	movf	??___ftdiv,w
 11761  0AA4  00A9               	movwf	??___ftdiv+3
 11762  0AA5  0829               	movf	??___ftdiv+3,w
 11763  0AA6  06AF               	xorwf	___ftdiv@sign,f
 11764  0AA7  3080               	movlw	128
 11765  0AA8  00A6               	movwf	??___ftdiv
 11766  0AA9  0826               	movf	??___ftdiv,w
 11767  0AAA  05AF               	andwf	___ftdiv@sign,f
 11768  0AAB  17A4               	bsf	___ftdiv@f1+1,7
 11769  0AAC  30FF               	movlw	255
 11770  0AAD  05A3               	andwf	___ftdiv@f1,f
 11771  0AAE  30FF               	movlw	255
 11772  0AAF  05A4               	andwf	___ftdiv@f1+1,f
 11773  0AB0  3000               	movlw	0
 11774  0AB1  05A5               	andwf	___ftdiv@f1+2,f
 11775  0AB2  17A1               	bsf	___ftdiv@f2+1,7
 11776  0AB3  30FF               	movlw	255
 11777  0AB4  05A0               	andwf	___ftdiv@f2,f
 11778  0AB5  30FF               	movlw	255
 11779  0AB6  05A1               	andwf	___ftdiv@f2+1,f
 11780  0AB7  3000               	movlw	0
 11781  0AB8  05A2               	andwf	___ftdiv@f2+2,f
 11782  0AB9  3018               	movlw	24
 11783  0ABA  00A6               	movwf	??___ftdiv
 11784  0ABB  0826               	movf	??___ftdiv,w
 11785  0ABC  00AA               	movwf	___ftdiv@cntr
 11786  0ABD                     l3995:	
 11787  0ABD  3001               	movlw	1
 11788  0ABE                     u4785:	
 11789  0ABE  35AB               	lslf	___ftdiv@f3,f
 11790  0ABF  0DAC               	rlf	___ftdiv@f3+1,f
 11791  0AC0  0DAD               	rlf	___ftdiv@f3+2,f
 11792  0AC1  0B89               	decfsz	9,f
 11793  0AC2  2ABE               	goto	u4785
 11794  0AC3  0822               	movf	___ftdiv@f2+2,w
 11795  0AC4  0225               	subwf	___ftdiv@f1+2,w
 11796  0AC5  1D03               	skipz
 11797  0AC6  2ACD               	goto	u4795
 11798  0AC7  0821               	movf	___ftdiv@f2+1,w
 11799  0AC8  0224               	subwf	___ftdiv@f1+1,w
 11800  0AC9  1D03               	skipz
 11801  0ACA  2ACD               	goto	u4795
 11802  0ACB  0820               	movf	___ftdiv@f2,w
 11803  0ACC  0223               	subwf	___ftdiv@f1,w
 11804  0ACD                     u4795:	
 11805  0ACD  1C03               	skipc
 11806  0ACE  2AD6               	goto	l4003
 11807  0ACF  0820               	movf	___ftdiv@f2,w
 11808  0AD0  02A3               	subwf	___ftdiv@f1,f
 11809  0AD1  0821               	movf	___ftdiv@f2+1,w
 11810  0AD2  3BA4               	subwfb	___ftdiv@f1+1,f
 11811  0AD3  0822               	movf	___ftdiv@f2+2,w
 11812  0AD4  3BA5               	subwfb	___ftdiv@f1+2,f
 11813  0AD5  142B               	bsf	___ftdiv@f3,0
 11814  0AD6                     l4003:	
 11815  0AD6  3001               	movlw	1
 11816  0AD7                     u4805:	
 11817  0AD7  35A3               	lslf	___ftdiv@f1,f
 11818  0AD8  0DA4               	rlf	___ftdiv@f1+1,f
 11819  0AD9  0DA5               	rlf	___ftdiv@f1+2,f
 11820  0ADA  0B89               	decfsz	9,f
 11821  0ADB  2AD7               	goto	u4805
 11822  0ADC  3001               	movlw	1
 11823  0ADD  02AA               	subwf	___ftdiv@cntr,f
 11824  0ADE  1D03               	btfss	3,2
 11825  0ADF  2ABD               	goto	l3995
 11826  0AE0  082B               	movf	___ftdiv@f3,w
 11827  0AE1  00F0               	movwf	___ftpack@arg
 11828  0AE2  082C               	movf	___ftdiv@f3+1,w
 11829  0AE3  00F1               	movwf	___ftpack@arg+1
 11830  0AE4  082D               	movf	___ftdiv@f3+2,w
 11831  0AE5  00F2               	movwf	___ftpack@arg+2
 11832  0AE6  082E               	movf	___ftdiv@exp,w
 11833  0AE7  00A6               	movwf	??___ftdiv
 11834  0AE8  0826               	movf	??___ftdiv,w
 11835  0AE9  00F3               	movwf	___ftpack@exp
 11836  0AEA  082F               	movf	___ftdiv@sign,w
 11837  0AEB  00A7               	movwf	??___ftdiv+1
 11838  0AEC  0827               	movf	??___ftdiv+1,w
 11839  0AED  00F4               	movwf	___ftpack@sign
 11840  0AEE  3196  268E         	fcall	___ftpack
 11841  0AF0  0870               	movf	?___ftpack,w
 11842  0AF1  0020               	movlb	0	; select bank0
 11843  0AF2  00A0               	movwf	?___ftdiv
 11844  0AF3  0871               	movf	?___ftpack+1,w
 11845  0AF4  00A1               	movwf	?___ftdiv+1
 11846  0AF5  0872               	movf	?___ftpack+2,w
 11847  0AF6  00A2               	movwf	?___ftdiv+2
 11848  0AF7  0008               	return
 11849  0AF8                     __end_of___ftdiv:	
 11850                           
 11851                           	psect	text18
 11852  1348                     __ptext18:	
 11853 ;; *************** function ___awtoft *****************
 11854 ;; Defined at:
 11855 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
 11856 ;; Parameters:    Size  Location     Type
 11857 ;;  c               2    8[COMMON] int 
 11858 ;; Auto vars:     Size  Location     Type
 11859 ;;  sign            1   13[COMMON] unsigned char 
 11860 ;; Return value:  Size  Location     Type
 11861 ;;                  3    8[COMMON] float 
 11862 ;; Registers used:
 11863 ;;		wreg, status,2, status,0, pclath, cstack
 11864 ;; Tracked objects:
 11865 ;;		On entry : 0/0
 11866 ;;		On exit  : 0/0
 11867 ;;		Unchanged: 0/0
 11868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11869 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11870 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11871 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11872 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11873 ;;Total ram usage:        6 bytes
 11874 ;; Hardware stack levels used:    1
 11875 ;; Hardware stack levels required when called:    1
 11876 ;; This function calls:
 11877 ;;		___ftpack
 11878 ;; This function is called by:
 11879 ;;		_main
 11880 ;;		_calculateCurrent0
 11881 ;;		_calculateCurrent1
 11882 ;;		_tempCalc
 11883 ;;		_log
 11884 ;; This function uses a non-reentrant model
 11885 ;;
 11886                           
 11887                           
 11888                           ;psect for function ___awtoft
 11889  1348                     ___awtoft:	
 11890                           
 11891                           ;incstack = 0
 11892                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
 11893  1348  01FD               	clrf	___awtoft@sign
 11894  1349  1FF9               	btfss	___awtoft@c+1,7
 11895  134A  2B52               	goto	l3643
 11896  134B  09F8               	comf	___awtoft@c,f
 11897  134C  09F9               	comf	___awtoft@c+1,f
 11898  134D  0AF8               	incf	___awtoft@c,f
 11899  134E  1903               	skipnz
 11900  134F  0AF9               	incf	___awtoft@c+1,f
 11901  1350  01FD               	clrf	___awtoft@sign
 11902  1351  0AFD               	incf	___awtoft@sign,f
 11903  1352                     l3643:	
 11904  1352  0878               	movf	___awtoft@c,w
 11905  1353  00F0               	movwf	___ftpack@arg
 11906  1354  0879               	movf	___awtoft@c+1,w
 11907  1355  00F1               	movwf	___ftpack@arg+1
 11908  1356  01F2               	clrf	___ftpack@arg+2
 11909  1357  308E               	movlw	142
 11910  1358  00FB               	movwf	??___awtoft
 11911  1359  087B               	movf	??___awtoft,w
 11912  135A  00F3               	movwf	___ftpack@exp
 11913  135B  087D               	movf	___awtoft@sign,w
 11914  135C  00FC               	movwf	??___awtoft+1
 11915  135D  087C               	movf	??___awtoft+1,w
 11916  135E  00F4               	movwf	___ftpack@sign
 11917  135F  3196  268E         	fcall	___ftpack
 11918  1361  0870               	movf	?___ftpack,w
 11919  1362  00F8               	movwf	?___awtoft
 11920  1363  0871               	movf	?___ftpack+1,w
 11921  1364  00F9               	movwf	?___awtoft+1
 11922  1365  0872               	movf	?___ftpack+2,w
 11923  1366  00FA               	movwf	?___awtoft+2
 11924  1367  0008               	return
 11925  1368                     __end_of___awtoft:	
 11926                           
 11927                           	psect	text19
 11928  168E                     __ptext19:	
 11929 ;; *************** function ___ftpack *****************
 11930 ;; Defined at:
 11931 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
 11932 ;; Parameters:    Size  Location     Type
 11933 ;;  arg             3    0[COMMON] unsigned um
 11934 ;;  exp             1    3[COMMON] unsigned char 
 11935 ;;  sign            1    4[COMMON] unsigned char 
 11936 ;; Auto vars:     Size  Location     Type
 11937 ;;		None
 11938 ;; Return value:  Size  Location     Type
 11939 ;;                  3    0[COMMON] float 
 11940 ;; Registers used:
 11941 ;;		wreg, status,2, status,0
 11942 ;; Tracked objects:
 11943 ;;		On entry : 0/0
 11944 ;;		On exit  : 0/0
 11945 ;;		Unchanged: 0/0
 11946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11947 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11949 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11950 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11951 ;;Total ram usage:        8 bytes
 11952 ;; Hardware stack levels used:    1
 11953 ;; This function calls:
 11954 ;;		Nothing
 11955 ;; This function is called by:
 11956 ;;		___awtoft
 11957 ;;		___ftadd
 11958 ;;		___ftdiv
 11959 ;;		___ftmul
 11960 ;; This function uses a non-reentrant model
 11961 ;;
 11962                           
 11963                           
 11964                           ;psect for function ___ftpack
 11965  168E                     ___ftpack:	
 11966                           
 11967                           ;incstack = 0
 11968                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
 11969  168E  0873               	movf	___ftpack@exp,w
 11970  168F  1903               	btfsc	3,2
 11971  1690  2E96               	goto	l3437
 11972  1691  0872               	movf	___ftpack@arg+2,w
 11973  1692  0471               	iorwf	___ftpack@arg+1,w
 11974  1693  0470               	iorwf	___ftpack@arg,w
 11975  1694  1D03               	skipz
 11976  1695  2EA7               	goto	l3443
 11977  1696                     l3437:	
 11978  1696  3000               	movlw	0
 11979  1697  00F0               	movwf	?___ftpack
 11980  1698  3000               	movlw	0
 11981  1699  00F1               	movwf	?___ftpack+1
 11982  169A  3000               	movlw	0
 11983  169B  00F2               	movwf	?___ftpack+2
 11984  169C  0008               	return
 11985  169D                     l3441:	
 11986  169D  3001               	movlw	1
 11987  169E  00F5               	movwf	??___ftpack
 11988  169F  0875               	movf	??___ftpack,w
 11989  16A0  07F3               	addwf	___ftpack@exp,f
 11990  16A1  3001               	movlw	1
 11991  16A2                     u3865:	
 11992  16A2  36F2               	lsrf	___ftpack@arg+2,f
 11993  16A3  0CF1               	rrf	___ftpack@arg+1,f
 11994  16A4  0CF0               	rrf	___ftpack@arg,f
 11995  16A5  0B89               	decfsz	9,f
 11996  16A6  2EA2               	goto	u3865
 11997  16A7                     l3443:	
 11998  16A7  30FE               	movlw	254
 11999  16A8  0572               	andwf	___ftpack@arg+2,w
 12000  16A9  1903               	btfsc	3,2
 12001  16AA  2EC0               	goto	l774
 12002  16AB  2E9D               	goto	l3441
 12003  16AC                     l3445:	
 12004  16AC  3001               	movlw	1
 12005  16AD  00F5               	movwf	??___ftpack
 12006  16AE  0875               	movf	??___ftpack,w
 12007  16AF  07F3               	addwf	___ftpack@exp,f
 12008  16B0  3001               	movlw	1
 12009  16B1  07F0               	addwf	___ftpack@arg,f
 12010  16B2  3000               	movlw	0
 12011  16B3  1803               	skipnc
 12012  16B4  3001               	movlw	1
 12013  16B5  07F1               	addwf	___ftpack@arg+1,f
 12014  16B6  3000               	movlw	0
 12015  16B7  1803               	skipnc
 12016  16B8  3001               	movlw	1
 12017  16B9  07F2               	addwf	___ftpack@arg+2,f
 12018  16BA  3001               	movlw	1
 12019  16BB                     u3885:	
 12020  16BB  36F2               	lsrf	___ftpack@arg+2,f
 12021  16BC  0CF1               	rrf	___ftpack@arg+1,f
 12022  16BD  0CF0               	rrf	___ftpack@arg,f
 12023  16BE  0B89               	decfsz	9,f
 12024  16BF  2EBB               	goto	u3885
 12025  16C0                     l774:	
 12026  16C0  30FF               	movlw	255
 12027  16C1  0572               	andwf	___ftpack@arg+2,w
 12028  16C2  1903               	btfsc	3,2
 12029  16C3  2ECD               	goto	l3453
 12030  16C4  2EAC               	goto	l3445
 12031  16C5                     l3451:	
 12032  16C5  3001               	movlw	1
 12033  16C6  02F3               	subwf	___ftpack@exp,f
 12034  16C7  3001               	movlw	1
 12035  16C8                     u3905:	
 12036  16C8  35F0               	lslf	___ftpack@arg,f
 12037  16C9  0DF1               	rlf	___ftpack@arg+1,f
 12038  16CA  0DF2               	rlf	___ftpack@arg+2,f
 12039  16CB  0B89               	decfsz	9,f
 12040  16CC  2EC8               	goto	u3905
 12041  16CD                     l3453:	
 12042  16CD  1BF1               	btfsc	___ftpack@arg+1,7
 12043  16CE  2ED3               	goto	l781
 12044  16CF  3002               	movlw	2
 12045  16D0  0273               	subwf	___ftpack@exp,w
 12046  16D1  1803               	skipnc
 12047  16D2  2EC5               	goto	l3451
 12048  16D3                     l781:	
 12049  16D3  1873               	btfsc	___ftpack@exp,0
 12050  16D4  2EDB               	goto	l782
 12051  16D5  30FF               	movlw	255
 12052  16D6  05F0               	andwf	___ftpack@arg,f
 12053  16D7  307F               	movlw	127
 12054  16D8  05F1               	andwf	___ftpack@arg+1,f
 12055  16D9  30FF               	movlw	255
 12056  16DA  05F2               	andwf	___ftpack@arg+2,f
 12057  16DB                     l782:	
 12058  16DB  1003               	clrc
 12059  16DC  0CF3               	rrf	___ftpack@exp,f
 12060  16DD  0873               	movf	___ftpack@exp,w
 12061  16DE  00F5               	movwf	??___ftpack
 12062  16DF  01F6               	clrf	??___ftpack+1
 12063  16E0  01F7               	clrf	??___ftpack+2
 12064  16E1  3010               	movlw	16
 12065  16E2                     u3945:	
 12066  16E2  35F5               	lslf	??___ftpack,f
 12067  16E3  0DF6               	rlf	??___ftpack+1,f
 12068  16E4  0DF7               	rlf	??___ftpack+2,f
 12069  16E5  0B89               	decfsz	9,f
 12070  16E6  2EE2               	goto	u3945
 12071  16E7  0875               	movf	??___ftpack,w
 12072  16E8  04F0               	iorwf	___ftpack@arg,f
 12073  16E9  0876               	movf	??___ftpack+1,w
 12074  16EA  04F1               	iorwf	___ftpack@arg+1,f
 12075  16EB  0877               	movf	??___ftpack+2,w
 12076  16EC  04F2               	iorwf	___ftpack@arg+2,f
 12077  16ED  0874               	movf	___ftpack@sign,w
 12078  16EE  1903               	btfsc	3,2
 12079  16EF  0008               	return
 12080  16F0  17F2               	bsf	___ftpack@arg+2,7
 12081  16F1  0008               	return
 12082  16F2                     __end_of___ftpack:	
 12083                           
 12084                           	psect	text20
 12085  13DF                     __ptext20:	
 12086 ;; *************** function _SYSTEM_Initialize *****************
 12087 ;; Defined at:
 12088 ;;		line 71 in file "system.c"
 12089 ;; Parameters:    Size  Location     Type
 12090 ;;		None
 12091 ;; Auto vars:     Size  Location     Type
 12092 ;;		None
 12093 ;; Return value:  Size  Location     Type
 12094 ;;                  1    wreg      void 
 12095 ;; Registers used:
 12096 ;;		wreg, status,2, status,0, pclath, cstack
 12097 ;; Tracked objects:
 12098 ;;		On entry : 0/0
 12099 ;;		On exit  : 0/0
 12100 ;;		Unchanged: 0/0
 12101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12104 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12105 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12106 ;;Total ram usage:        2 bytes
 12107 ;; Hardware stack levels used:    1
 12108 ;; Hardware stack levels required when called:    3
 12109 ;; This function calls:
 12110 ;;		_ADC_Initialize
 12111 ;;		_Init_Battery_State_Machine
 12112 ;;		_LCDClear
 12113 ;;		_LCDInit
 12114 ;;		_OSCILLATOR_Initialize
 12115 ;;		_PIN_MANAGER_Initialize
 12116 ;;		_PWM_Initialize
 12117 ;;		_TMR2_Initialize
 12118 ;;		_TMR4_Initialize
 12119 ;; This function is called by:
 12120 ;;		_main
 12121 ;; This function uses a non-reentrant model
 12122 ;;
 12123                           
 12124                           
 12125                           ;psect for function _SYSTEM_Initialize
 12126  13DF                     _SYSTEM_Initialize:	
 12127                           
 12128                           ;system.c: 73: PIN_MANAGER_Initialize();
 12129                           
 12130                           ;incstack = 0
 12131                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12132  13DF  3194  2413  3193   	fcall	_PIN_MANAGER_Initialize
 12133                           
 12134                           ;system.c: 74: OSCILLATOR_Initialize();
 12135  13E2  3192  220D  3193   	fcall	_OSCILLATOR_Initialize
 12136                           
 12137                           ;system.c: 76: ADC_Initialize();
 12138  13E5  3193  230A  3193   	fcall	_ADC_Initialize
 12139                           
 12140                           ;system.c: 77: PWM_Initialize();
 12141  13E8  3193  2329  3193   	fcall	_PWM_Initialize
 12142                           
 12143                           ;system.c: 79: TMR2_Initialize();
 12144  13EB  3192  2222  3193   	fcall	_TMR2_Initialize
 12145                           
 12146                           ;system.c: 80: TMR4_Initialize();
 12147  13EE  3180  2004  3193   	fcall	_TMR4_Initialize
 12148                           
 12149                           ;system.c: 81: Init_Battery_State_Machine();
 12150  13F1  3192  22B1  3193   	fcall	_Init_Battery_State_Machine
 12151                           
 12152                           ;system.c: 82: LCDInit();
 12153  13F4  3194  244A  3193   	fcall	_LCDInit
 12154                           
 12155                           ;system.c: 83: _delay((unsigned long)((200)*(32000000/4000.0)));
 12156  13F7  3009               	movlw	9
 12157  13F8  00FC               	movwf	??_SYSTEM_Initialize+1
 12158  13F9  301E               	movlw	30
 12159  13FA  00FB               	movwf	??_SYSTEM_Initialize
 12160  13FB  30E4               	movlw	228
 12161  13FC                     u5917:	
 12162  13FC  0B89               	decfsz	9,f
 12163  13FD  2BFC               	goto	u5917
 12164  13FE  0BFB               	decfsz	??_SYSTEM_Initialize,f
 12165  13FF  2BFC               	goto	u5917
 12166  1400  0BFC               	decfsz	??_SYSTEM_Initialize+1,f
 12167  1401  2BFC               	goto	u5917
 12168  1402  3200               	nop2
 12169                           
 12170                           ;system.c: 84: LCDClear();
 12171  1403  3193  238D  3193   	fcall	_LCDClear
 12172                           
 12173                           ;system.c: 85: _delay((unsigned long)((200)*(32000000/4000.0)));
 12174  1406  3009               	movlw	9
 12175  1407  00FC               	movwf	??_SYSTEM_Initialize+1
 12176  1408  301E               	movlw	30
 12177  1409  00FB               	movwf	??_SYSTEM_Initialize
 12178  140A  30E4               	movlw	228
 12179  140B                     u5927:	
 12180  140B  0B89               	decfsz	9,f
 12181  140C  2C0B               	goto	u5927
 12182  140D  0BFB               	decfsz	??_SYSTEM_Initialize,f
 12183  140E  2C0B               	goto	u5927
 12184  140F  0BFC               	decfsz	??_SYSTEM_Initialize+1,f
 12185  1410  2C0B               	goto	u5927
 12186  1411  3200               	nop2
 12187  1412  0008               	return
 12188  1413                     __end_of_SYSTEM_Initialize:	
 12189                           
 12190                           	psect	text21
 12191  0004                     __ptext21:	
 12192 ;; *************** function _TMR4_Initialize *****************
 12193 ;; Defined at:
 12194 ;;		line 25 in file "tmr.c"
 12195 ;; Parameters:    Size  Location     Type
 12196 ;;		None
 12197 ;; Auto vars:     Size  Location     Type
 12198 ;;		None
 12199 ;; Return value:  Size  Location     Type
 12200 ;;                  1    wreg      void 
 12201 ;; Registers used:
 12202 ;;		wreg, status,2
 12203 ;; Tracked objects:
 12204 ;;		On entry : 0/0
 12205 ;;		On exit  : 0/0
 12206 ;;		Unchanged: 0/0
 12207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12211 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12212 ;;Total ram usage:        0 bytes
 12213 ;; Hardware stack levels used:    1
 12214 ;; This function calls:
 12215 ;;		Nothing
 12216 ;; This function is called by:
 12217 ;;		_SYSTEM_Initialize
 12218 ;; This function uses a non-reentrant model
 12219 ;;
 12220                           
 12221                           
 12222                           ;psect for function _TMR4_Initialize
 12223  0004                     _TMR4_Initialize:	
 12224                           
 12225                           ;tmr.c: 27: T4CON = 0x00;
 12226                           
 12227                           ;incstack = 0
 12228                           ; Regs used in _TMR4_Initialize: [wreg+status,2]
 12229  0004  0025               	movlb	5	; select bank5
 12230  0005  0194               	clrf	20	;volatile
 12231                           
 12232                           ;tmr.c: 29: T4CLKCON = 0x01;
 12233  0006  3001               	movlw	1
 12234  0007  0096               	movwf	22	;volatile
 12235                           
 12236                           ;tmr.c: 31: T4HLT = 0x00;
 12237  0008  0195               	clrf	21	;volatile
 12238                           
 12239                           ;tmr.c: 33: T4RST = 0x00;
 12240  0009  0197               	clrf	23	;volatile
 12241                           
 12242                           ;tmr.c: 35: T4PR = 0xFE;
 12243  000A  30FE               	movlw	254
 12244  000B  0093               	movwf	19	;volatile
 12245                           
 12246                           ;tmr.c: 39: T4TMR = 0x00;
 12247  000C  0192               	clrf	18	;volatile
 12248                           
 12249                           ;tmr.c: 41: PIR4bits.TMR4IF = 0;
 12250  000D  002E               	movlb	14	; select bank14
 12251  000E  1190               	bcf	16,3	;volatile
 12252                           
 12253                           ;tmr.c: 43: T4CONbits.TMR4ON = 1;
 12254  000F  0025               	movlb	5	; select bank5
 12255  0010  1794               	bsf	20,7	;volatile
 12256  0011  0008               	return
 12257  0012                     __end_of_TMR4_Initialize:	
 12258                           
 12259                           	psect	text22
 12260  1222                     __ptext22:	
 12261 ;; *************** function _TMR2_Initialize *****************
 12262 ;; Defined at:
 12263 ;;		line 3 in file "tmr.c"
 12264 ;; Parameters:    Size  Location     Type
 12265 ;;		None
 12266 ;; Auto vars:     Size  Location     Type
 12267 ;;		None
 12268 ;; Return value:  Size  Location     Type
 12269 ;;                  1    wreg      void 
 12270 ;; Registers used:
 12271 ;;		wreg, status,2
 12272 ;; Tracked objects:
 12273 ;;		On entry : 0/0
 12274 ;;		On exit  : 0/0
 12275 ;;		Unchanged: 0/0
 12276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12280 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12281 ;;Total ram usage:        0 bytes
 12282 ;; Hardware stack levels used:    1
 12283 ;; This function calls:
 12284 ;;		Nothing
 12285 ;; This function is called by:
 12286 ;;		_SYSTEM_Initialize
 12287 ;; This function uses a non-reentrant model
 12288 ;;
 12289                           
 12290                           
 12291                           ;psect for function _TMR2_Initialize
 12292  1222                     _TMR2_Initialize:	
 12293                           
 12294                           ;tmr.c: 5: T2CON = 0x00;
 12295                           
 12296                           ;incstack = 0
 12297                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 12298  1222  0025               	movlb	5	; select bank5
 12299  1223  018E               	clrf	14	;volatile
 12300                           
 12301                           ;tmr.c: 7: T2CLKCON = 0x01;
 12302  1224  3001               	movlw	1
 12303  1225  0090               	movwf	16	;volatile
 12304                           
 12305                           ;tmr.c: 9: T2HLT = 0x00;
 12306  1226  018F               	clrf	15	;volatile
 12307                           
 12308                           ;tmr.c: 11: T2RST = 0x00;
 12309  1227  0191               	clrf	17	;volatile
 12310                           
 12311                           ;tmr.c: 13: T2PR = 0xFE;
 12312  1228  30FE               	movlw	254
 12313  1229  008D               	movwf	13	;volatile
 12314                           
 12315                           ;tmr.c: 18: T2TMR = 0x00;
 12316  122A  018C               	clrf	12	;volatile
 12317                           
 12318                           ;tmr.c: 20: PIR4bits.TMR2IF = 0;
 12319  122B  002E               	movlb	14	; select bank14
 12320  122C  1090               	bcf	16,1	;volatile
 12321                           
 12322                           ;tmr.c: 22: T2CONbits.TMR2ON = 1;
 12323  122D  0025               	movlb	5	; select bank5
 12324  122E  178E               	bsf	14,7	;volatile
 12325  122F  0008               	return
 12326  1230                     __end_of_TMR2_Initialize:	
 12327                           
 12328                           	psect	text23
 12329  1329                     __ptext23:	
 12330 ;; *************** function _PWM_Initialize *****************
 12331 ;; Defined at:
 12332 ;;		line 3 in file "pwm.c"
 12333 ;; Parameters:    Size  Location     Type
 12334 ;;		None
 12335 ;; Auto vars:     Size  Location     Type
 12336 ;;		None
 12337 ;; Return value:  Size  Location     Type
 12338 ;;                  1    wreg      void 
 12339 ;; Registers used:
 12340 ;;		wreg, status,2, status,0
 12341 ;; Tracked objects:
 12342 ;;		On entry : 0/0
 12343 ;;		On exit  : 0/0
 12344 ;;		Unchanged: 0/0
 12345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12349 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12350 ;;Total ram usage:        0 bytes
 12351 ;; Hardware stack levels used:    1
 12352 ;; This function calls:
 12353 ;;		Nothing
 12354 ;; This function is called by:
 12355 ;;		_SYSTEM_Initialize
 12356 ;; This function uses a non-reentrant model
 12357 ;;
 12358                           
 12359                           
 12360                           ;psect for function _PWM_Initialize
 12361  1329                     _PWM_Initialize:	
 12362                           
 12363                           ;pwm.c: 5: PWM6CON = 0x80;
 12364                           
 12365                           ;incstack = 0
 12366                           ; Regs used in _PWM_Initialize: [wreg+status,2+status,0]
 12367  1329  3080               	movlw	128
 12368  132A  0027               	movlb	7	; select bank7
 12369  132B  008E               	movwf	14	;volatile
 12370                           
 12371                           ;pwm.c: 7: PWM6DCH = 0x00;
 12372  132C  018D               	clrf	13	;volatile
 12373                           
 12374                           ;pwm.c: 9: PWM6DCL = 0x00;
 12375  132D  018C               	clrf	12	;volatile
 12376                           
 12377                           ;pwm.c: 11: CCPTMRS1bits.P6TSEL = 0x01;
 12378  132E  0024               	movlb	4	; select bank4
 12379  132F  081F               	movf	31,w	;volatile
 12380  1330  39F3               	andlw	-13
 12381  1331  3804               	iorlw	4
 12382  1332  009F               	movwf	31	;volatile
 12383                           
 12384                           ;pwm.c: 14: PWM7CON = 0x80;
 12385  1333  3080               	movlw	128
 12386  1334  0027               	movlb	7	; select bank7
 12387  1335  0092               	movwf	18	;volatile
 12388                           
 12389                           ;pwm.c: 16: PWM7DCH = 0x00;
 12390  1336  0191               	clrf	17	;volatile
 12391                           
 12392                           ;pwm.c: 18: PWM7DCL = 0x00;
 12393  1337  0190               	clrf	16	;volatile
 12394                           
 12395                           ;pwm.c: 20: CCPTMRS1bits.P7TSEL = 0x02;
 12396  1338  0024               	movlb	4	; select bank4
 12397  1339  081F               	movf	31,w	;volatile
 12398  133A  39CF               	andlw	-49
 12399  133B  3820               	iorlw	32
 12400  133C  009F               	movwf	31	;volatile
 12401                           
 12402                           ;pwm.c: 23: CCP1CONbits.CCP1EN = 1;
 12403  133D  0026               	movlb	6	; select bank6
 12404  133E  178E               	bsf	14,7	;volatile
 12405                           
 12406                           ;pwm.c: 24: CCP1CONbits.CCP1FMT = 1;
 12407  133F  160E               	bsf	14,4	;volatile
 12408                           
 12409                           ;pwm.c: 25: CCP1CONbits.CCP1MODE = 0xF;
 12410  1340  300F               	movlw	15
 12411  1341  048E               	iorwf	14,f	;volatile
 12412                           
 12413                           ;pwm.c: 26: CCPTMRS0bits.C1TSEL = 0x1;
 12414  1342  0024               	movlb	4	; select bank4
 12415  1343  081E               	movf	30,w	;volatile
 12416  1344  39FC               	andlw	-4
 12417  1345  3801               	iorlw	1
 12418  1346  009E               	movwf	30	;volatile
 12419  1347  0008               	return
 12420  1348                     __end_of_PWM_Initialize:	
 12421                           
 12422                           	psect	text24
 12423  1413                     __ptext24:	
 12424 ;; *************** function _PIN_MANAGER_Initialize *****************
 12425 ;; Defined at:
 12426 ;;		line 5 in file "pin_manager.c"
 12427 ;; Parameters:    Size  Location     Type
 12428 ;;		None
 12429 ;; Auto vars:     Size  Location     Type
 12430 ;;  state           1    0[COMMON] char 
 12431 ;; Return value:  Size  Location     Type
 12432 ;;                  1    wreg      void 
 12433 ;; Registers used:
 12434 ;;		wreg, status,2
 12435 ;; Tracked objects:
 12436 ;;		On entry : 0/0
 12437 ;;		On exit  : 0/0
 12438 ;;		Unchanged: 0/0
 12439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12441 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12443 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12444 ;;Total ram usage:        1 bytes
 12445 ;; Hardware stack levels used:    1
 12446 ;; This function calls:
 12447 ;;		Nothing
 12448 ;; This function is called by:
 12449 ;;		_SYSTEM_Initialize
 12450 ;; This function uses a non-reentrant model
 12451 ;;
 12452                           
 12453                           
 12454                           ;psect for function _PIN_MANAGER_Initialize
 12455  1413                     _PIN_MANAGER_Initialize:	
 12456                           
 12457                           ;pin_manager.c: 7: LATA = 0x20;
 12458                           
 12459                           ;incstack = 0
 12460                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 12461  1413  3020               	movlw	32
 12462  1414  0020               	movlb	0	; select bank0
 12463  1415  0096               	movwf	22	;volatile
 12464                           
 12465                           ;pin_manager.c: 8: LATB = 0x00;
 12466  1416  0197               	clrf	23	;volatile
 12467                           
 12468                           ;pin_manager.c: 9: LATC = 0x00;
 12469  1417  0198               	clrf	24	;volatile
 12470                           
 12471                           ;pin_manager.c: 11: WPUA = 0x00;
 12472  1418  003E               	movlb	30	; select bank30
 12473  1419  01B9               	clrf	57	;volatile
 12474                           
 12475                           ;pin_manager.c: 12: WPUB = 0x00;
 12476  141A  01C4               	clrf	68	;volatile
 12477                           
 12478                           ;pin_manager.c: 13: WPUC = 0x00;
 12479  141B  01CF               	clrf	79	;volatile
 12480                           
 12481                           ;pin_manager.c: 14: WPUE = 0x8;
 12482  141C  3008               	movlw	8
 12483  141D  00E5               	movwf	101	;volatile
 12484                           
 12485                           ;pin_manager.c: 16: TRISA = 0x00;
 12486  141E  0020               	movlb	0	; select bank0
 12487  141F  0191               	clrf	17	;volatile
 12488                           
 12489                           ;pin_manager.c: 17: TRISB = 0x0E;
 12490  1420  300E               	movlw	14
 12491  1421  0092               	movwf	18	;volatile
 12492                           
 12493                           ;pin_manager.c: 18: TRISC = 0xFF;
 12494  1422  30FF               	movlw	255
 12495  1423  0093               	movwf	19	;volatile
 12496                           
 12497                           ;pin_manager.c: 20: ANSELA = 0x00;
 12498  1424  003E               	movlb	30	; select bank30
 12499  1425  01B8               	clrf	56	;volatile
 12500                           
 12501                           ;pin_manager.c: 21: ANSELB = 0x0A;
 12502  1426  300A               	movlw	10
 12503  1427  00C3               	movwf	67	;volatile
 12504                           
 12505                           ;pin_manager.c: 22: ANSELC = 0xFF;
 12506  1428  30FF               	movlw	255
 12507  1429  00CE               	movwf	78	;volatile
 12508                           
 12509                           ;pin_manager.c: 25: PIE0bits.IOCIE = 0;
 12510  142A  002E               	movlb	14	; select bank14
 12511  142B  1216               	bcf	22,4	;volatile
 12512                           
 12513                           ;pin_manager.c: 26: int8_t state = GIE;
 12514  142C  3000               	movlw	0
 12515  142D  1B8B               	btfsc	11,7	;volatile
 12516  142E  3001               	movlw	1
 12517  142F  00F0               	movwf	PIN_MANAGER_Initialize@state
 12518                           
 12519                           ;pin_manager.c: 27: GIE = 0;
 12520  1430  138B               	bcf	11,7	;volatile
 12521                           
 12522                           ;pin_manager.c: 28: PPSLOCK = 0x55;
 12523  1431  3055               	movlw	85
 12524  1432  003D               	movlb	29	; select bank29
 12525  1433  008F               	movwf	15	;volsfr
 12526                           
 12527                           ;pin_manager.c: 29: PPSLOCK = 0xAA;
 12528  1434  30AA               	movlw	170
 12529  1435  008F               	movwf	15	;volsfr
 12530                           
 12531                           ;pin_manager.c: 30: PPSLOCKbits.PPSLOCKED = 0x00;
 12532  1436  100F               	bcf	15,0	;volsfr
 12533                           
 12534                           ;pin_manager.c: 32: RA6PPS = 0x0E;
 12535  1437  300E               	movlw	14
 12536  1438  003E               	movlb	30	; select bank30
 12537  1439  0096               	movwf	22	;volatile
 12538                           
 12539                           ;pin_manager.c: 33: RA7PPS = 0x0F;
 12540  143A  300F               	movlw	15
 12541  143B  0097               	movwf	23	;volatile
 12542                           
 12543                           ;pin_manager.c: 34: RB0PPS = 0x09;
 12544  143C  3009               	movlw	9
 12545  143D  0098               	movwf	24	;volatile
 12546                           
 12547                           ;pin_manager.c: 35: PPSLOCK = 0x55;
 12548  143E  3055               	movlw	85
 12549  143F  003D               	movlb	29	; select bank29
 12550  1440  008F               	movwf	15	;volsfr
 12551                           
 12552                           ;pin_manager.c: 36: PPSLOCK = 0xAA;
 12553  1441  30AA               	movlw	170
 12554  1442  008F               	movwf	15	;volsfr
 12555                           
 12556                           ;pin_manager.c: 37: PPSLOCKbits.PPSLOCKED = 0x01;
 12557  1443  140F               	bsf	15,0	;volsfr
 12558                           
 12559                           ;pin_manager.c: 38: GIE = state;
 12560  1444  1C70               	btfss	PIN_MANAGER_Initialize@state,0
 12561  1445  2C48               	goto	u4500
 12562  1446  178B               	bsf	11,7	;volatile
 12563  1447  0008               	return
 12564  1448                     u4500:	
 12565  1448  138B               	bcf	11,7	;volatile
 12566  1449  0008               	return
 12567  144A                     __end_of_PIN_MANAGER_Initialize:	
 12568                           
 12569                           	psect	text25
 12570  120D                     __ptext25:	
 12571 ;; *************** function _OSCILLATOR_Initialize *****************
 12572 ;; Defined at:
 12573 ;;		line 88 in file "system.c"
 12574 ;; Parameters:    Size  Location     Type
 12575 ;;		None
 12576 ;; Auto vars:     Size  Location     Type
 12577 ;;		None
 12578 ;; Return value:  Size  Location     Type
 12579 ;;                  1    wreg      void 
 12580 ;; Registers used:
 12581 ;;		wreg, status,2
 12582 ;; Tracked objects:
 12583 ;;		On entry : 0/0
 12584 ;;		On exit  : 0/0
 12585 ;;		Unchanged: 0/0
 12586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12590 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12591 ;;Total ram usage:        0 bytes
 12592 ;; Hardware stack levels used:    1
 12593 ;; This function calls:
 12594 ;;		Nothing
 12595 ;; This function is called by:
 12596 ;;		_SYSTEM_Initialize
 12597 ;; This function uses a non-reentrant model
 12598 ;;
 12599                           
 12600                           
 12601                           ;psect for function _OSCILLATOR_Initialize
 12602  120D                     _OSCILLATOR_Initialize:	
 12603                           
 12604                           ;system.c: 90: OSCCON1 = 0x60;
 12605                           
 12606                           ;incstack = 0
 12607                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 12608  120D  3060               	movlw	96
 12609  120E  0031               	movlb	17	; select bank17
 12610  120F  008D               	movwf	13	;volatile
 12611                           
 12612                           ;system.c: 91: OSCCON3 = 0x00;
 12613  1210  018F               	clrf	15	;volatile
 12614                           
 12615                           ;system.c: 92: OSCEN = 0x00;
 12616  1211  0191               	clrf	17	;volatile
 12617                           
 12618                           ;system.c: 93: OSCFRQ = 0x06;
 12619  1212  3006               	movlw	6
 12620  1213  0093               	movwf	19	;volatile
 12621                           
 12622                           ;system.c: 94: OSCTUNE = 0x00;
 12623  1214  0192               	clrf	18	;volatile
 12624  1215  0008               	return
 12625  1216                     __end_of_OSCILLATOR_Initialize:	
 12626                           
 12627                           	psect	text26
 12628  144A                     __ptext26:	
 12629 ;; *************** function _LCDInit *****************
 12630 ;; Defined at:
 12631 ;;		line 247 in file "lcd.c"
 12632 ;; Parameters:    Size  Location     Type
 12633 ;;		None
 12634 ;; Auto vars:     Size  Location     Type
 12635 ;;		None
 12636 ;; Return value:  Size  Location     Type
 12637 ;;                  1    wreg      void 
 12638 ;; Registers used:
 12639 ;;		wreg, status,2, status,0, pclath, cstack
 12640 ;; Tracked objects:
 12641 ;;		On entry : 0/0
 12642 ;;		On exit  : 0/0
 12643 ;;		Unchanged: 0/0
 12644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12647 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12648 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12649 ;;Total ram usage:        1 bytes
 12650 ;; Hardware stack levels used:    1
 12651 ;; Hardware stack levels required when called:    1
 12652 ;; This function calls:
 12653 ;;		_LCDWrite
 12654 ;; This function is called by:
 12655 ;;		_main
 12656 ;;		_SYSTEM_Initialize
 12657 ;; This function uses a non-reentrant model
 12658 ;;
 12659                           
 12660                           
 12661                           ;psect for function _LCDInit
 12662  144A                     _LCDInit:	
 12663                           
 12664                           ;lcd.c: 249: TRISAbits.TRISA0 = 0;
 12665                           
 12666                           ;incstack = 0
 12667                           ; Regs used in _LCDInit: [wreg+status,2+status,0+pclath+cstack]
 12668  144A  0020               	movlb	0	; select bank0
 12669  144B  1011               	bcf	17,0	;volatile
 12670                           
 12671                           ;lcd.c: 250: TRISAbits.TRISA1 = 0;
 12672  144C  1091               	bcf	17,1	;volatile
 12673                           
 12674                           ;lcd.c: 251: TRISAbits.TRISA2 = 0;
 12675  144D  1111               	bcf	17,2	;volatile
 12676                           
 12677                           ;lcd.c: 252: TRISAbits.TRISA3 = 0;
 12678  144E  1191               	bcf	17,3	;volatile
 12679                           
 12680                           ;lcd.c: 253: TRISAbits.TRISA4 = 0;
 12681  144F  1211               	bcf	17,4	;volatile
 12682                           
 12683                           ;lcd.c: 254: LATAbits.LATA3 = 0;
 12684  1450  1196               	bcf	22,3	;volatile
 12685                           
 12686                           ;lcd.c: 255: LATAbits.LATA4 = 0;
 12687  1451  1216               	bcf	22,4	;volatile
 12688                           
 12689                           ;lcd.c: 256: LATAbits.LATA2 = 0;
 12690  1452  1116               	bcf	22,2	;volatile
 12691                           
 12692                           ;lcd.c: 257: LATAbits.LATA0 = 0;
 12693  1453  1016               	bcf	22,0	;volatile
 12694                           
 12695                           ;lcd.c: 259: LATAbits.LATA0 = 1;
 12696  1454  1416               	bsf	22,0	;volatile
 12697                           
 12698                           ;lcd.c: 261: LCDWrite(0, 0x21);
 12699  1455  3021               	movlw	33
 12700  1456  00F5               	movwf	??_LCDInit
 12701  1457  0875               	movf	??_LCDInit,w
 12702  1458  00F0               	movwf	LCDWrite@data
 12703  1459  3000               	movlw	0
 12704  145A  3193  2368  3194   	fcall	_LCDWrite
 12705                           
 12706                           ;lcd.c: 269: LCDWrite(0, 0XB9);
 12707  145D  30B9               	movlw	185
 12708  145E  00F5               	movwf	??_LCDInit
 12709  145F  0875               	movf	??_LCDInit,w
 12710  1460  00F0               	movwf	LCDWrite@data
 12711  1461  3000               	movlw	0
 12712  1462  3193  2368  3194   	fcall	_LCDWrite
 12713                           
 12714                           ;lcd.c: 271: LCDWrite(0, 0x04);
 12715  1465  3004               	movlw	4
 12716  1466  00F5               	movwf	??_LCDInit
 12717  1467  0875               	movf	??_LCDInit,w
 12718  1468  00F0               	movwf	LCDWrite@data
 12719  1469  3000               	movlw	0
 12720  146A  3193  2368  3194   	fcall	_LCDWrite
 12721                           
 12722                           ;lcd.c: 273: LCDWrite(0, 0x14);
 12723  146D  3014               	movlw	20
 12724  146E  00F5               	movwf	??_LCDInit
 12725  146F  0875               	movf	??_LCDInit,w
 12726  1470  00F0               	movwf	LCDWrite@data
 12727  1471  3000               	movlw	0
 12728  1472  3193  2368  3194   	fcall	_LCDWrite
 12729                           
 12730                           ;lcd.c: 275: LCDWrite(0, 0x20);
 12731  1475  3020               	movlw	32
 12732  1476  00F5               	movwf	??_LCDInit
 12733  1477  0875               	movf	??_LCDInit,w
 12734  1478  00F0               	movwf	LCDWrite@data
 12735  1479  3000               	movlw	0
 12736  147A  3193  2368  3194   	fcall	_LCDWrite
 12737                           
 12738                           ;lcd.c: 277: LCDWrite(0, 0x0C);
 12739  147D  300C               	movlw	12
 12740  147E  00F5               	movwf	??_LCDInit
 12741  147F  0875               	movf	??_LCDInit,w
 12742  1480  00F0               	movwf	LCDWrite@data
 12743  1481  3000               	movlw	0
 12744  1482  3193  2368         	fcall	_LCDWrite
 12745  1484  0008               	return
 12746  1485                     __end_of_LCDInit:	
 12747                           
 12748                           	psect	text27
 12749  138D                     __ptext27:	
 12750 ;; *************** function _LCDClear *****************
 12751 ;; Defined at:
 12752 ;;		line 182 in file "lcd.c"
 12753 ;; Parameters:    Size  Location     Type
 12754 ;;		None
 12755 ;; Auto vars:     Size  Location     Type
 12756 ;;  index           2    9[COMMON] int 
 12757 ;; Return value:  Size  Location     Type
 12758 ;;                  1    wreg      void 
 12759 ;; Registers used:
 12760 ;;		wreg, status,2, status,0, pclath, cstack
 12761 ;; Tracked objects:
 12762 ;;		On entry : 0/0
 12763 ;;		On exit  : 0/0
 12764 ;;		Unchanged: 0/0
 12765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12767 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12768 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12769 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12770 ;;Total ram usage:        3 bytes
 12771 ;; Hardware stack levels used:    1
 12772 ;; Hardware stack levels required when called:    2
 12773 ;; This function calls:
 12774 ;;		_LCDWrite
 12775 ;;		_gotoXY
 12776 ;; This function is called by:
 12777 ;;		_main
 12778 ;;		_SYSTEM_Initialize
 12779 ;; This function uses a non-reentrant model
 12780 ;;
 12781                           
 12782                           
 12783                           ;psect for function _LCDClear
 12784  138D                     _LCDClear:	
 12785                           
 12786                           ;lcd.c: 184: int index;
 12787                           ;lcd.c: 185: for (index = 0 ; index < (84 * 48 / 8) ; index++)
 12788                           
 12789                           ;incstack = 0
 12790                           ; Regs used in _LCDClear: [wreg+status,2+status,0+pclath+cstack]
 12791  138D  01F9               	clrf	LCDClear@index
 12792  138E  01FA               	clrf	LCDClear@index+1
 12793  138F  087A               	movf	LCDClear@index+1,w
 12794  1390  3A80               	xorlw	128
 12795  1391  00F8               	movwf	??_LCDClear
 12796  1392  3081               	movlw	129
 12797  1393  0278               	subwf	??_LCDClear,w
 12798  1394  1D03               	skipz
 12799  1395  2B98               	goto	u4455
 12800  1396  30F8               	movlw	248
 12801  1397  0279               	subwf	LCDClear@index,w
 12802  1398                     u4455:	
 12803  1398  1803               	btfsc	3,0
 12804  1399  2BAE               	goto	l3709
 12805  139A                     l3703:	
 12806                           
 12807                           ;lcd.c: 186: LCDWrite(1, 0x00);
 12808  139A  01F0               	clrf	LCDWrite@data
 12809  139B  3001               	movlw	1
 12810  139C  3193  2368  3193   	fcall	_LCDWrite
 12811  139F  3001               	movlw	1
 12812  13A0  07F9               	addwf	LCDClear@index,f
 12813  13A1  3000               	movlw	0
 12814  13A2  3DFA               	addwfc	LCDClear@index+1,f
 12815  13A3  087A               	movf	LCDClear@index+1,w
 12816  13A4  3A80               	xorlw	128
 12817  13A5  00F8               	movwf	??_LCDClear
 12818  13A6  3081               	movlw	129
 12819  13A7  0278               	subwf	??_LCDClear,w
 12820  13A8  1D03               	skipz
 12821  13A9  2BAC               	goto	u4465
 12822  13AA  30F8               	movlw	248
 12823  13AB  0279               	subwf	LCDClear@index,w
 12824  13AC                     u4465:	
 12825  13AC  1C03               	skipc
 12826  13AD  2B9A               	goto	l3703
 12827  13AE                     l3709:	
 12828                           
 12829                           ;lcd.c: 187: gotoXY(0, 0);
 12830  13AE  01F5               	clrf	gotoXY@y
 12831  13AF  3000               	movlw	0
 12832  13B0  3192  2230         	fcall	_gotoXY
 12833  13B2  0008               	return
 12834  13B3                     __end_of_LCDClear:	
 12835                           
 12836                           	psect	text28
 12837  12B1                     __ptext28:	
 12838 ;; *************** function _Init_Battery_State_Machine *****************
 12839 ;; Defined at:
 12840 ;;		line 31 in file "battery_charger.c"
 12841 ;; Parameters:    Size  Location     Type
 12842 ;;		None
 12843 ;; Auto vars:     Size  Location     Type
 12844 ;;		None
 12845 ;; Return value:  Size  Location     Type
 12846 ;;                  1    wreg      void 
 12847 ;; Registers used:
 12848 ;;		wreg
 12849 ;; Tracked objects:
 12850 ;;		On entry : 0/0
 12851 ;;		On exit  : 0/0
 12852 ;;		Unchanged: 0/0
 12853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12856 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12857 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12858 ;;Total ram usage:        1 bytes
 12859 ;; Hardware stack levels used:    1
 12860 ;; This function calls:
 12861 ;;		Nothing
 12862 ;; This function is called by:
 12863 ;;		_SYSTEM_Initialize
 12864 ;; This function uses a non-reentrant model
 12865 ;;
 12866                           
 12867                           
 12868                           ;psect for function _Init_Battery_State_Machine
 12869  12B1                     _Init_Battery_State_Machine:	
 12870                           
 12871                           ;battery_charger.c: 33: battery_state0 = PRECHARGE;
 12872                           
 12873                           ;incstack = 0
 12874                           ; Regs used in _Init_Battery_State_Machine: [wreg]
 12875  12B1  3003               	movlw	3
 12876  12B2  00F0               	movwf	??_Init_Battery_State_Machine
 12877  12B3  0870               	movf	??_Init_Battery_State_Machine,w
 12878  12B4  0021               	movlb	1	; select bank1
 12879  12B5  00CB               	movwf	_battery_state0^(0+128)
 12880                           
 12881                           ;battery_charger.c: 34: state_counter0 = 3;
 12882  12B6  3003               	movlw	3
 12883  12B7  0022               	movlb	2	; select bank2
 12884  12B8  00CF               	movwf	_state_counter0^(0+256)
 12885  12B9  3000               	movlw	0
 12886  12BA  00D0               	movwf	(_state_counter0^(0+256)+1)
 12887                           
 12888                           ;battery_charger.c: 36: { Iref0 = 10; };
 12889  12BB  300A               	movlw	10
 12890  12BC  0021               	movlb	1	; select bank1
 12891  12BD  00C7               	movwf	_Iref0^(0+128)
 12892  12BE  3000               	movlw	0
 12893  12BF  00C8               	movwf	(_Iref0^(0+128)+1)
 12894                           
 12895                           ;battery_charger.c: 37: { Vref0 = 1425; };
 12896  12C0  3091               	movlw	145
 12897  12C1  00C9               	movwf	_Vref0^(0+128)
 12898  12C2  3005               	movlw	5
 12899  12C3  00CA               	movwf	(_Vref0^(0+128)+1)
 12900                           
 12901                           ;battery_charger.c: 39: Imin0 = 20;
 12902  12C4  3014               	movlw	20
 12903  12C5  0022               	movlb	2	; select bank2
 12904  12C6  00CD               	movwf	_Imin0^(0+256)
 12905  12C7  3000               	movlw	0
 12906  12C8  00CE               	movwf	(_Imin0^(0+256)+1)
 12907                           
 12908                           ;battery_charger.c: 40: Imin0Count = 10;
 12909  12C9  300A               	movlw	10
 12910  12CA  00D1               	movwf	_Imin0Count^(0+256)
 12911  12CB  3000               	movlw	0
 12912  12CC  00D2               	movwf	(_Imin0Count^(0+256)+1)
 12913  12CD  0008               	return
 12914  12CE                     __end_of_Init_Battery_State_Machine:	
 12915                           
 12916                           	psect	text29
 12917  130A                     __ptext29:	
 12918 ;; *************** function _ADC_Initialize *****************
 12919 ;; Defined at:
 12920 ;;		line 111 in file "adc.c"
 12921 ;; Parameters:    Size  Location     Type
 12922 ;;		None
 12923 ;; Auto vars:     Size  Location     Type
 12924 ;;		None
 12925 ;; Return value:  Size  Location     Type
 12926 ;;                  1    wreg      void 
 12927 ;; Registers used:
 12928 ;;		wreg, status,2
 12929 ;; Tracked objects:
 12930 ;;		On entry : 0/0
 12931 ;;		On exit  : 0/0
 12932 ;;		Unchanged: 0/0
 12933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12937 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12938 ;;Total ram usage:        0 bytes
 12939 ;; Hardware stack levels used:    1
 12940 ;; This function calls:
 12941 ;;		Nothing
 12942 ;; This function is called by:
 12943 ;;		_SYSTEM_Initialize
 12944 ;; This function uses a non-reentrant model
 12945 ;;
 12946                           
 12947                           
 12948                           ;psect for function _ADC_Initialize
 12949  130A                     _ADC_Initialize:	
 12950                           
 12951                           ;adc.c: 113: ADCON1 = 0x00;
 12952                           
 12953                           ;incstack = 0
 12954                           ; Regs used in _ADC_Initialize: [wreg+status,2]
 12955  130A  0021               	movlb	1	; select bank1
 12956  130B  0194               	clrf	20	;volatile
 12957                           
 12958                           ;adc.c: 115: ADCON2 = 0x00;
 12959  130C  0195               	clrf	21	;volatile
 12960                           
 12961                           ;adc.c: 117: ADCON3 = 0x00;
 12962  130D  0196               	clrf	22	;volatile
 12963                           
 12964                           ;adc.c: 119: ADACT = 0x00;
 12965  130E  0199               	clrf	25	;volatile
 12966                           
 12967                           ;adc.c: 121: ADSTAT = 0x00;
 12968  130F  0197               	clrf	23	;volatile
 12969                           
 12970                           ;adc.c: 123: FVRCON = 0b11000011;
 12971  1310  30C3               	movlw	195
 12972  1311  0032               	movlb	18	; select bank18
 12973  1312  008C               	movwf	12	;volatile
 12974                           
 12975                           ;adc.c: 124: ADCLK = 0x3F;
 12976  1313  303F               	movlw	63
 12977  1314  0021               	movlb	1	; select bank1
 12978  1315  0098               	movwf	24	;volatile
 12979                           
 12980                           ;adc.c: 131: ADREF = 0x03;
 12981  1316  3003               	movlw	3
 12982  1317  009A               	movwf	26	;volatile
 12983                           
 12984                           ;adc.c: 134: ADCAP = 0x00;
 12985  1318  019B               	clrf	27	;volatile
 12986                           
 12987                           ;adc.c: 137: ADPRE = 0x07;
 12988  1319  3007               	movlw	7
 12989  131A  009C               	movwf	28	;volatile
 12990                           
 12991                           ;adc.c: 139: ADACQ = 0x00;
 12992  131B  019D               	clrf	29	;volatile
 12993                           
 12994                           ;adc.c: 141: ADPCH = 0x00;
 12995  131C  019E               	clrf	30	;volatile
 12996                           
 12997                           ;adc.c: 143: ADRPT = 0x00;
 12998  131D  0022               	movlb	2	; select bank2
 12999  131E  018D               	clrf	13	;volatile
 13000                           
 13001                           ;adc.c: 145: ADLTHL = 0x00;
 13002  131F  018E               	clrf	14	;volatile
 13003                           
 13004                           ;adc.c: 147: ADLTHH = 0x00;
 13005  1320  018F               	clrf	15	;volatile
 13006                           
 13007                           ;adc.c: 149: ADUTHL = 0x00;
 13008  1321  0190               	clrf	16	;volatile
 13009                           
 13010                           ;adc.c: 151: ADUTHH = 0x00;
 13011  1322  0191               	clrf	17	;volatile
 13012                           
 13013                           ;adc.c: 153: ADSTPTL = 0x00;
 13014  1323  0192               	clrf	18	;volatile
 13015                           
 13016                           ;adc.c: 155: ADSTPTH = 0x00;
 13017  1324  0193               	clrf	19	;volatile
 13018                           
 13019                           ;adc.c: 157: ADCON0 = 0x84;
 13020  1325  3084               	movlw	132
 13021  1326  0021               	movlb	1	; select bank1
 13022  1327  0093               	movwf	19	;volatile
 13023  1328  0008               	return
 13024  1329                     __end_of_ADC_Initialize:	
 13025                           
 13026                           	psect	text30
 13027  1284                     __ptext30:	
 13028 ;; *************** function _PWM7_LoadDutyValue *****************
 13029 ;; Defined at:
 13030 ;;		line 37 in file "pwm.c"
 13031 ;; Parameters:    Size  Location     Type
 13032 ;;  dutyCycle7      2    0[COMMON] unsigned int 
 13033 ;; Auto vars:     Size  Location     Type
 13034 ;;		None
 13035 ;; Return value:  Size  Location     Type
 13036 ;;                  1    wreg      void 
 13037 ;; Registers used:
 13038 ;;		wreg, status,2, status,0
 13039 ;; Tracked objects:
 13040 ;;		On entry : 0/0
 13041 ;;		On exit  : 0/0
 13042 ;;		Unchanged: 0/0
 13043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13044 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13046 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13047 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13048 ;;Total ram usage:        4 bytes
 13049 ;; Hardware stack levels used:    1
 13050 ;; This function calls:
 13051 ;;		Nothing
 13052 ;; This function is called by:
 13053 ;;		_main
 13054 ;; This function uses a non-reentrant model
 13055 ;;
 13056                           
 13057                           
 13058                           ;psect for function _PWM7_LoadDutyValue
 13059  1284                     _PWM7_LoadDutyValue:	
 13060                           
 13061                           ;pwm.c: 39: PWM7DCH = (dutyCycle7 & 0x03FC)>>2;
 13062                           
 13063                           ;incstack = 0
 13064                           ; Regs used in _PWM7_LoadDutyValue: [wreg+status,2+status,0]
 13065  1284  0871               	movf	PWM7_LoadDutyValue@dutyCycle7+1,w
 13066  1285  00F3               	movwf	??_PWM7_LoadDutyValue+1
 13067  1286  0870               	movf	PWM7_LoadDutyValue@dutyCycle7,w
 13068  1287  00F2               	movwf	??_PWM7_LoadDutyValue
 13069  1288  36F3               	lsrf	??_PWM7_LoadDutyValue+1,f
 13070  1289  0CF2               	rrf	??_PWM7_LoadDutyValue,f
 13071  128A  36F3               	lsrf	??_PWM7_LoadDutyValue+1,f
 13072  128B  0CF2               	rrf	??_PWM7_LoadDutyValue,f
 13073  128C  0872               	movf	??_PWM7_LoadDutyValue,w
 13074  128D  0027               	movlb	7	; select bank7
 13075  128E  0091               	movwf	17	;volatile
 13076                           
 13077                           ;pwm.c: 41: PWM7DCL = (dutyCycle7 & 0x0003)<<6;
 13078  128F  0870               	movf	PWM7_LoadDutyValue@dutyCycle7,w
 13079  1290  3903               	andlw	3
 13080  1291  00F2               	movwf	??_PWM7_LoadDutyValue
 13081  1292  3005               	movlw	5
 13082  1293                     u5105:	
 13083  1293  35F2               	lslf	??_PWM7_LoadDutyValue,f
 13084  1294  3EFF               	addlw	-1
 13085  1295  1D03               	skipz
 13086  1296  2A93               	goto	u5105
 13087  1297  3572               	lslf	??_PWM7_LoadDutyValue,w
 13088  1298  0090               	movwf	16	;volatile
 13089  1299  0008               	return
 13090  129A                     __end_of_PWM7_LoadDutyValue:	
 13091                           
 13092                           	psect	text31
 13093  126E                     __ptext31:	
 13094 ;; *************** function _PWM6_LoadDutyValue *****************
 13095 ;; Defined at:
 13096 ;;		line 30 in file "pwm.c"
 13097 ;; Parameters:    Size  Location     Type
 13098 ;;  dutyCycle6      2    0[COMMON] unsigned int 
 13099 ;; Auto vars:     Size  Location     Type
 13100 ;;		None
 13101 ;; Return value:  Size  Location     Type
 13102 ;;                  1    wreg      void 
 13103 ;; Registers used:
 13104 ;;		wreg, status,2, status,0
 13105 ;; Tracked objects:
 13106 ;;		On entry : 0/0
 13107 ;;		On exit  : 0/0
 13108 ;;		Unchanged: 0/0
 13109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13110 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13112 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13113 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13114 ;;Total ram usage:        4 bytes
 13115 ;; Hardware stack levels used:    1
 13116 ;; This function calls:
 13117 ;;		Nothing
 13118 ;; This function is called by:
 13119 ;;		_main
 13120 ;; This function uses a non-reentrant model
 13121 ;;
 13122                           
 13123                           
 13124                           ;psect for function _PWM6_LoadDutyValue
 13125  126E                     _PWM6_LoadDutyValue:	
 13126                           
 13127                           ;pwm.c: 32: PWM6DCH = (dutyCycle6 & 0x03FC)>>2;
 13128                           
 13129                           ;incstack = 0
 13130                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
 13131  126E  0871               	movf	PWM6_LoadDutyValue@dutyCycle6+1,w
 13132  126F  00F3               	movwf	??_PWM6_LoadDutyValue+1
 13133  1270  0870               	movf	PWM6_LoadDutyValue@dutyCycle6,w
 13134  1271  00F2               	movwf	??_PWM6_LoadDutyValue
 13135  1272  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
 13136  1273  0CF2               	rrf	??_PWM6_LoadDutyValue,f
 13137  1274  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
 13138  1275  0CF2               	rrf	??_PWM6_LoadDutyValue,f
 13139  1276  0872               	movf	??_PWM6_LoadDutyValue,w
 13140  1277  0027               	movlb	7	; select bank7
 13141  1278  008D               	movwf	13	;volatile
 13142                           
 13143                           ;pwm.c: 34: PWM6DCL = (dutyCycle6 & 0x0003)<<6;
 13144  1279  0870               	movf	PWM6_LoadDutyValue@dutyCycle6,w
 13145  127A  3903               	andlw	3
 13146  127B  00F2               	movwf	??_PWM6_LoadDutyValue
 13147  127C  3005               	movlw	5
 13148  127D                     u5095:	
 13149  127D  35F2               	lslf	??_PWM6_LoadDutyValue,f
 13150  127E  3EFF               	addlw	-1
 13151  127F  1D03               	skipz
 13152  1280  2A7D               	goto	u5095
 13153  1281  3572               	lslf	??_PWM6_LoadDutyValue,w
 13154  1282  008C               	movwf	12	;volatile
 13155  1283  0008               	return
 13156  1284                     __end_of_PWM6_LoadDutyValue:	
 13157                           
 13158                           	psect	text32
 13159  1258                     __ptext32:	
 13160 ;; *************** function _PWM1_LoadDutyValue *****************
 13161 ;; Defined at:
 13162 ;;		line 44 in file "pwm.c"
 13163 ;; Parameters:    Size  Location     Type
 13164 ;;  dutyCycle1      2    0[COMMON] unsigned int 
 13165 ;; Auto vars:     Size  Location     Type
 13166 ;;		None
 13167 ;; Return value:  Size  Location     Type
 13168 ;;                  1    wreg      void 
 13169 ;; Registers used:
 13170 ;;		wreg, status,2, status,0
 13171 ;; Tracked objects:
 13172 ;;		On entry : 0/0
 13173 ;;		On exit  : 0/0
 13174 ;;		Unchanged: 0/0
 13175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13176 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13178 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13179 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13180 ;;Total ram usage:        4 bytes
 13181 ;; Hardware stack levels used:    1
 13182 ;; This function calls:
 13183 ;;		Nothing
 13184 ;; This function is called by:
 13185 ;;		_main
 13186 ;; This function uses a non-reentrant model
 13187 ;;
 13188                           
 13189                           
 13190                           ;psect for function _PWM1_LoadDutyValue
 13191  1258                     _PWM1_LoadDutyValue:	
 13192                           
 13193                           ;pwm.c: 46: CCPR1H = (dutyCycle1& 0x03FC)>>2;
 13194                           
 13195                           ;incstack = 0
 13196                           ; Regs used in _PWM1_LoadDutyValue: [wreg+status,2+status,0]
 13197  1258  0871               	movf	PWM1_LoadDutyValue@dutyCycle1+1,w
 13198  1259  00F3               	movwf	??_PWM1_LoadDutyValue+1
 13199  125A  0870               	movf	PWM1_LoadDutyValue@dutyCycle1,w
 13200  125B  00F2               	movwf	??_PWM1_LoadDutyValue
 13201  125C  36F3               	lsrf	??_PWM1_LoadDutyValue+1,f
 13202  125D  0CF2               	rrf	??_PWM1_LoadDutyValue,f
 13203  125E  36F3               	lsrf	??_PWM1_LoadDutyValue+1,f
 13204  125F  0CF2               	rrf	??_PWM1_LoadDutyValue,f
 13205  1260  0872               	movf	??_PWM1_LoadDutyValue,w
 13206  1261  0026               	movlb	6	; select bank6
 13207  1262  008D               	movwf	13	;volatile
 13208                           
 13209                           ;pwm.c: 47: CCPR1L = (dutyCycle1 & 0x0003)<<6;
 13210  1263  0870               	movf	PWM1_LoadDutyValue@dutyCycle1,w
 13211  1264  3903               	andlw	3
 13212  1265  00F2               	movwf	??_PWM1_LoadDutyValue
 13213  1266  3005               	movlw	5
 13214  1267                     u5085:	
 13215  1267  35F2               	lslf	??_PWM1_LoadDutyValue,f
 13216  1268  3EFF               	addlw	-1
 13217  1269  1D03               	skipz
 13218  126A  2A67               	goto	u5085
 13219  126B  3572               	lslf	??_PWM1_LoadDutyValue,w
 13220  126C  008C               	movwf	12	;volatile
 13221  126D  0008               	return
 13222  126E                     __end_of_PWM1_LoadDutyValue:	
 13223                           
 13224                           	psect	text33
 13225  0C5C                     __ptext33:	
 13226 ;; *************** function _LCDWriteInt *****************
 13227 ;; Defined at:
 13228 ;;		line 190 in file "lcd.c"
 13229 ;; Parameters:    Size  Location     Type
 13230 ;;  value           2   30[BANK0 ] int 
 13231 ;;  fieldLength     1   32[BANK0 ] char 
 13232 ;;  numPlaces       1   33[BANK0 ] unsigned char 
 13233 ;;  sign            1   34[BANK0 ] unsigned char 
 13234 ;; Auto vars:     Size  Location     Type
 13235 ;;  str             5   39[BANK0 ] unsigned char [5]
 13236 ;;  i               1   45[BANK0 ] unsigned char 
 13237 ;;  j               1   44[BANK0 ] unsigned char 
 13238 ;; Return value:  Size  Location     Type
 13239 ;;                  1    wreg      void 
 13240 ;; Registers used:
 13241 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13242 ;; Tracked objects:
 13243 ;;		On entry : 0/0
 13244 ;;		On exit  : 0/0
 13245 ;;		Unchanged: 0/0
 13246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13247 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13248 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13249 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13250 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13251 ;;Total ram usage:       16 bytes
 13252 ;; Hardware stack levels used:    1
 13253 ;; Hardware stack levels required when called:    2
 13254 ;; This function calls:
 13255 ;;		_LCDWriteCharacter
 13256 ;;		___awdiv
 13257 ;;		___lwmod
 13258 ;; This function is called by:
 13259 ;;		_main
 13260 ;; This function uses a non-reentrant model
 13261 ;;
 13262                           
 13263                           
 13264                           ;psect for function _LCDWriteInt
 13265  0C5C                     _LCDWriteInt:	
 13266                           
 13267                           ;lcd.c: 192: uint8_t str[5]={0,0,0,0,0};
 13268                           
 13269                           ;incstack = 0
 13270                           ; Regs used in _LCDWriteInt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13271  0C5C  3040               	movlw	low LCDWriteInt@F14388
 13272  0C5D  0086               	movwf	6
 13273  0C5E  3001               	movlw	high LCDWriteInt@F14388
 13274  0C5F  0087               	movwf	7
 13275  0C60  3047               	movlw	low LCDWriteInt@str
 13276  0C61  0084               	movwf	4
 13277  0C62  3000               	movlw	high LCDWriteInt@str
 13278  0C63  0085               	movwf	5
 13279  0C64  3005               	movlw	5
 13280  0C65  0020               	movlb	0	; select bank0
 13281  0C66  00C3               	movwf	??_LCDWriteInt
 13282  0C67                     u5300:	
 13283  0C67  0016               	moviw fsr1++
 13284  0C68  001A               	movwi fsr0++
 13285  0C69  0BC3               	decfsz	??_LCDWriteInt,f
 13286  0C6A  2C67               	goto	u5300
 13287                           
 13288                           ;lcd.c: 193: uint8_t i=4,j=0;
 13289  0C6B  3004               	movlw	4
 13290  0C6C  00C3               	movwf	??_LCDWriteInt
 13291  0C6D  0843               	movf	??_LCDWriteInt,w
 13292  0C6E  00CD               	movwf	LCDWriteInt@i
 13293  0C6F  01CC               	clrf	LCDWriteInt@j
 13294                           
 13295                           ;lcd.c: 195: if(value<0)
 13296  0C70  1FBF               	btfss	LCDWriteInt@value+1,7
 13297  0C71  2C7D               	goto	l4245
 13298                           
 13299                           ;lcd.c: 196: {
 13300                           ;lcd.c: 197: LCDWriteCharacter('-');
 13301  0C72  302D               	movlw	45
 13302  0C73  3195  25D6  318C   	fcall	_LCDWriteCharacter
 13303                           
 13304                           ;lcd.c: 198: value=value*-1;
 13305  0C76  0020               	movlb	0	; select bank0
 13306  0C77  09BE               	comf	LCDWriteInt@value,f
 13307  0C78  09BF               	comf	LCDWriteInt@value+1,f
 13308  0C79  0ABE               	incf	LCDWriteInt@value,f
 13309  0C7A  1903               	skipnz
 13310  0C7B  0ABF               	incf	LCDWriteInt@value+1,f
 13311                           
 13312                           ;lcd.c: 199: }
 13313  0C7C  2C84               	goto	l4255
 13314  0C7D                     l4245:	
 13315                           
 13316                           ;lcd.c: 201: else
 13317                           ;lcd.c: 202: {
 13318                           ;lcd.c: 203: if(sign == 1)
 13319  0C7D  0342               	decf	LCDWriteInt@sign,w
 13320  0C7E  1D03               	btfss	3,2
 13321  0C7F  2C84               	goto	l4255
 13322                           
 13323                           ;lcd.c: 204: {
 13324                           ;lcd.c: 205: LCDWriteCharacter('+');
 13325  0C80  302B               	movlw	43
 13326  0C81  3195  25D6  318C   	fcall	_LCDWriteCharacter
 13327  0C84                     l4255:	
 13328                           ;lcd.c: 206: }
 13329                           ;lcd.c: 207: }
 13330                           ;lcd.c: 209: while(value)
 13331                           
 13332  0C84  0020               	movlb	0	; select bank0
 13333  0C85  083E               	movf	LCDWriteInt@value,w
 13334  0C86  043F               	iorwf	LCDWriteInt@value+1,w
 13335  0C87  1903               	btfsc	3,2
 13336  0C88  2CB1               	goto	l4257
 13337                           
 13338                           ;lcd.c: 210: {
 13339                           ;lcd.c: 211: str[i]=(uint16_t)value%10;
 13340  0C89  300A               	movlw	10
 13341  0C8A  00F0               	movwf	___lwmod@divisor
 13342  0C8B  3000               	movlw	0
 13343  0C8C  00F1               	movwf	___lwmod@divisor+1
 13344  0C8D  0020               	movlb	0	; select bank0
 13345  0C8E  083F               	movf	LCDWriteInt@value+1,w
 13346  0C8F  00F3               	movwf	___lwmod@dividend+1
 13347  0C90  083E               	movf	LCDWriteInt@value,w
 13348  0C91  00F2               	movwf	___lwmod@dividend
 13349  0C92  3193  23B3  318C   	fcall	___lwmod
 13350  0C95  0870               	movf	?___lwmod,w
 13351  0C96  0020               	movlb	0	; select bank0
 13352  0C97  00C3               	movwf	??_LCDWriteInt
 13353  0C98  084D               	movf	LCDWriteInt@i,w
 13354  0C99  3E47               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
 13355  0C9A  0086               	movwf	6
 13356  0C9B  0187               	clrf	7
 13357  0C9C  0843               	movf	??_LCDWriteInt,w
 13358  0C9D  0081               	movwf	1
 13359                           
 13360                           ;lcd.c: 212: value=value/10;
 13361  0C9E  300A               	movlw	10
 13362  0C9F  00F0               	movwf	___awdiv@divisor
 13363  0CA0  3000               	movlw	0
 13364  0CA1  00F1               	movwf	___awdiv@divisor+1
 13365  0CA2  083F               	movf	LCDWriteInt@value+1,w
 13366  0CA3  00F3               	movwf	___awdiv@dividend+1
 13367  0CA4  083E               	movf	LCDWriteInt@value,w
 13368  0CA5  00F2               	movwf	___awdiv@dividend
 13369  0CA6  3195  2585  318C   	fcall	___awdiv
 13370  0CA9  0871               	movf	?___awdiv+1,w
 13371  0CAA  0020               	movlb	0	; select bank0
 13372  0CAB  00BF               	movwf	LCDWriteInt@value+1
 13373  0CAC  0870               	movf	?___awdiv,w
 13374  0CAD  00BE               	movwf	LCDWriteInt@value
 13375                           
 13376                           ;lcd.c: 213: i--;
 13377  0CAE  3001               	movlw	1
 13378  0CAF  02CD               	subwf	LCDWriteInt@i,f
 13379  0CB0  2C84               	goto	l4255
 13380  0CB1                     l4257:	
 13381                           
 13382                           ;lcd.c: 214: }
 13383                           ;lcd.c: 215: if(fieldLength==-1)
 13384  0CB1  0A40               	incf	LCDWriteInt@fieldLength,w
 13385  0CB2  1903               	btfsc	3,2
 13386  0CB3  2CB9               	goto	l4263
 13387  0CB4  2CC1               	goto	l4265
 13388  0CB5                     l4261:	
 13389                           ;lcd.c: 216: {
 13390                           ;lcd.c: 217: while(str[j]==0)
 13391                           
 13392                           
 13393                           ;lcd.c: 218: {
 13394                           ;lcd.c: 219: j++;
 13395  0CB5  3001               	movlw	1
 13396  0CB6  00C3               	movwf	??_LCDWriteInt
 13397  0CB7  0843               	movf	??_LCDWriteInt,w
 13398  0CB8  07CC               	addwf	LCDWriteInt@j,f
 13399  0CB9                     l4263:	
 13400  0CB9  084C               	movf	LCDWriteInt@j,w
 13401  0CBA  3E47               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
 13402  0CBB  0086               	movwf	6
 13403  0CBC  0187               	clrf	7
 13404  0CBD  0801               	movf	1,w
 13405  0CBE  1D03               	btfss	3,2
 13406  0CBF  2CC7               	goto	l4267
 13407  0CC0  2CB5               	goto	l4261
 13408  0CC1                     l4265:	
 13409                           ;lcd.c: 220: }
 13410                           ;lcd.c: 221: }
 13411                           
 13412                           
 13413                           ;lcd.c: 222: else
 13414                           ;lcd.c: 223: {
 13415                           ;lcd.c: 224: j=(uint8_t)(5-fieldLength);
 13416  0CC1  0340               	decf	LCDWriteInt@fieldLength,w
 13417  0CC2  3AFF               	xorlw	255
 13418  0CC3  3E05               	addlw	5
 13419  0CC4  00C3               	movwf	??_LCDWriteInt
 13420  0CC5  0843               	movf	??_LCDWriteInt,w
 13421  0CC6  00CC               	movwf	LCDWriteInt@j
 13422  0CC7                     l4267:	
 13423                           
 13424                           ;lcd.c: 225: }
 13425                           ;lcd.c: 227: for(i=j;i<(5-numPlaces);i++)
 13426  0CC7  084C               	movf	LCDWriteInt@j,w
 13427  0CC8  00C3               	movwf	??_LCDWriteInt
 13428  0CC9  0843               	movf	??_LCDWriteInt,w
 13429  0CCA  00CD               	movwf	LCDWriteInt@i
 13430  0CCB                     l4273:	
 13431  0CCB  0841               	movf	LCDWriteInt@numPlaces,w
 13432  0CCC  00C3               	movwf	??_LCDWriteInt
 13433  0CCD  01C4               	clrf	??_LCDWriteInt+1
 13434  0CCE  09C3               	comf	??_LCDWriteInt,f
 13435  0CCF  09C4               	comf	??_LCDWriteInt+1,f
 13436  0CD0  0AC3               	incf	??_LCDWriteInt,f
 13437  0CD1  1903               	skipnz
 13438  0CD2  0AC4               	incf	??_LCDWriteInt+1,f
 13439  0CD3  0843               	movf	??_LCDWriteInt,w
 13440  0CD4  3E05               	addlw	5
 13441  0CD5  00C5               	movwf	??_LCDWriteInt+2
 13442  0CD6  3000               	movlw	0
 13443  0CD7  3D44               	addwfc	??_LCDWriteInt+1,w
 13444  0CD8  00C6               	movwf	??_LCDWriteInt+3
 13445  0CD9  0846               	movf	??_LCDWriteInt+3,w
 13446  0CDA  3A80               	xorlw	128
 13447  0CDB  3C80               	sublw	128
 13448  0CDC  1D03               	skipz
 13449  0CDD  2CE0               	goto	u5365
 13450  0CDE  0845               	movf	??_LCDWriteInt+2,w
 13451  0CDF  024D               	subwf	LCDWriteInt@i,w
 13452  0CE0                     u5365:	
 13453  0CE0  1803               	btfsc	3,0
 13454  0CE1  2CF2               	goto	l4275
 13455                           
 13456                           ;lcd.c: 228: {
 13457                           ;lcd.c: 229: LCDWriteCharacter((uint8_t)(48+str[i]));
 13458  0CE2  0020               	movlb	0	; select bank0
 13459  0CE3  084D               	movf	LCDWriteInt@i,w
 13460  0CE4  3E47               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
 13461  0CE5  0086               	movwf	6
 13462  0CE6  0187               	clrf	7
 13463  0CE7  0801               	movf	1,w
 13464  0CE8  3E30               	addlw	48
 13465  0CE9  3195  25D6  318C   	fcall	_LCDWriteCharacter
 13466  0CEC  3001               	movlw	1
 13467  0CED  0020               	movlb	0	; select bank0
 13468  0CEE  00C3               	movwf	??_LCDWriteInt
 13469  0CEF  0843               	movf	??_LCDWriteInt,w
 13470  0CF0  07CD               	addwf	LCDWriteInt@i,f
 13471  0CF1  2CCB               	goto	l4273
 13472  0CF2                     l4275:	
 13473                           
 13474                           ;lcd.c: 230: }
 13475                           ;lcd.c: 232: if(numPlaces == 1)
 13476  0CF2  0020               	movlb	0	; select bank0
 13477  0CF3  0341               	decf	LCDWriteInt@numPlaces,w
 13478  0CF4  1D03               	btfss	3,2
 13479  0CF5  2D00               	goto	l4279
 13480                           
 13481                           ;lcd.c: 233: {
 13482                           ;lcd.c: 234: LCDWriteCharacter(46);
 13483  0CF6  302E               	movlw	46
 13484  0CF7  3195  25D6  318C   	fcall	_LCDWriteCharacter
 13485                           
 13486                           ;lcd.c: 235: LCDWriteCharacter ((uint8_t)(48+str[4]));
 13487  0CFA  0020               	movlb	0	; select bank0
 13488  0CFB  084B               	movf	LCDWriteInt@str+4,w
 13489  0CFC  3E30               	addlw	48
 13490  0CFD  3195  25D6  318C   	fcall	_LCDWriteCharacter
 13491  0D00                     l4279:	
 13492                           
 13493                           ;lcd.c: 236: }
 13494                           ;lcd.c: 238: if(numPlaces == 2)
 13495  0D00  3002               	movlw	2
 13496  0D01  0020               	movlb	0	; select bank0
 13497  0D02  0641               	xorwf	LCDWriteInt@numPlaces,w
 13498  0D03  1D03               	btfss	3,2
 13499  0D04  0008               	return
 13500                           
 13501                           ;lcd.c: 239: {
 13502                           ;lcd.c: 240: LCDWriteCharacter(46);
 13503  0D05  302E               	movlw	46
 13504  0D06  3195  25D6  318C   	fcall	_LCDWriteCharacter
 13505                           
 13506                           ;lcd.c: 241: LCDWriteCharacter((uint8_t)(48+str[3]));
 13507  0D09  0020               	movlb	0	; select bank0
 13508  0D0A  084A               	movf	LCDWriteInt@str+3,w
 13509  0D0B  3E30               	addlw	48
 13510  0D0C  3195  25D6  318C   	fcall	_LCDWriteCharacter
 13511                           
 13512                           ;lcd.c: 242: LCDWriteCharacter((uint8_t)(48+str[4]));
 13513  0D0F  0020               	movlb	0	; select bank0
 13514  0D10  084B               	movf	LCDWriteInt@str+4,w
 13515  0D11  3E30               	addlw	48
 13516  0D12  3195  25D6         	fcall	_LCDWriteCharacter
 13517  0D14  0008               	return
 13518  0D15                     __end_of_LCDWriteInt:	
 13519                           
 13520                           	psect	text34
 13521  13B3                     __ptext34:	
 13522 ;; *************** function ___lwmod *****************
 13523 ;; Defined at:
 13524 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
 13525 ;; Parameters:    Size  Location     Type
 13526 ;;  divisor         2    0[COMMON] unsigned int 
 13527 ;;  dividend        2    2[COMMON] unsigned int 
 13528 ;; Auto vars:     Size  Location     Type
 13529 ;;  counter         1    5[COMMON] unsigned char 
 13530 ;; Return value:  Size  Location     Type
 13531 ;;                  2    0[COMMON] unsigned int 
 13532 ;; Registers used:
 13533 ;;		wreg, status,2, status,0
 13534 ;; Tracked objects:
 13535 ;;		On entry : 0/0
 13536 ;;		On exit  : 0/0
 13537 ;;		Unchanged: 0/0
 13538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13539 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13540 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13541 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13542 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13543 ;;Total ram usage:        6 bytes
 13544 ;; Hardware stack levels used:    1
 13545 ;; This function calls:
 13546 ;;		Nothing
 13547 ;; This function is called by:
 13548 ;;		_LCDWriteInt
 13549 ;; This function uses a non-reentrant model
 13550 ;;
 13551                           
 13552                           
 13553                           ;psect for function ___lwmod
 13554  13B3                     ___lwmod:	
 13555                           
 13556                           ;incstack = 0
 13557                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 13558  13B3  0870               	movf	___lwmod@divisor,w
 13559  13B4  0471               	iorwf	___lwmod@divisor+1,w
 13560  13B5  1903               	btfsc	3,2
 13561  13B6  2BDA               	goto	l4079
 13562  13B7  01F5               	clrf	___lwmod@counter
 13563  13B8  0AF5               	incf	___lwmod@counter,f
 13564  13B9                     l4069:	
 13565  13B9  1BF1               	btfsc	___lwmod@divisor+1,7
 13566  13BA  2BC5               	goto	l4071
 13567  13BB  3001               	movlw	1
 13568  13BC                     u4945:	
 13569  13BC  35F0               	lslf	___lwmod@divisor,f
 13570  13BD  0DF1               	rlf	___lwmod@divisor+1,f
 13571  13BE  0B89               	decfsz	9,f
 13572  13BF  2BBC               	goto	u4945
 13573  13C0  3001               	movlw	1
 13574  13C1  00F4               	movwf	??___lwmod
 13575  13C2  0874               	movf	??___lwmod,w
 13576  13C3  07F5               	addwf	___lwmod@counter,f
 13577  13C4  2BB9               	goto	l4069
 13578  13C5                     l4071:	
 13579  13C5  0871               	movf	___lwmod@divisor+1,w
 13580  13C6  0273               	subwf	___lwmod@dividend+1,w
 13581  13C7  1D03               	skipz
 13582  13C8  2BCB               	goto	u4965
 13583  13C9  0870               	movf	___lwmod@divisor,w
 13584  13CA  0272               	subwf	___lwmod@dividend,w
 13585  13CB                     u4965:	
 13586  13CB  1C03               	skipc
 13587  13CC  2BD1               	goto	l4075
 13588  13CD  0870               	movf	___lwmod@divisor,w
 13589  13CE  02F2               	subwf	___lwmod@dividend,f
 13590  13CF  0871               	movf	___lwmod@divisor+1,w
 13591  13D0  3BF3               	subwfb	___lwmod@dividend+1,f
 13592  13D1                     l4075:	
 13593  13D1  3001               	movlw	1
 13594  13D2                     u4975:	
 13595  13D2  36F1               	lsrf	___lwmod@divisor+1,f
 13596  13D3  0CF0               	rrf	___lwmod@divisor,f
 13597  13D4  0B89               	decfsz	9,f
 13598  13D5  2BD2               	goto	u4975
 13599  13D6  3001               	movlw	1
 13600  13D7  02F5               	subwf	___lwmod@counter,f
 13601  13D8  1D03               	btfss	3,2
 13602  13D9  2BC5               	goto	l4071
 13603  13DA                     l4079:	
 13604  13DA  0873               	movf	___lwmod@dividend+1,w
 13605  13DB  00F1               	movwf	?___lwmod+1
 13606  13DC  0872               	movf	___lwmod@dividend,w
 13607  13DD  00F0               	movwf	?___lwmod
 13608  13DE  0008               	return
 13609  13DF                     __end_of___lwmod:	
 13610                           
 13611                           	psect	text35
 13612  1585                     __ptext35:	
 13613 ;; *************** function ___awdiv *****************
 13614 ;; Defined at:
 13615 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 13616 ;; Parameters:    Size  Location     Type
 13617 ;;  divisor         2    0[COMMON] int 
 13618 ;;  dividend        2    2[COMMON] int 
 13619 ;; Auto vars:     Size  Location     Type
 13620 ;;  quotient        2    7[COMMON] int 
 13621 ;;  sign            1    6[COMMON] unsigned char 
 13622 ;;  counter         1    5[COMMON] unsigned char 
 13623 ;; Return value:  Size  Location     Type
 13624 ;;                  2    0[COMMON] int 
 13625 ;; Registers used:
 13626 ;;		wreg, status,2, status,0
 13627 ;; Tracked objects:
 13628 ;;		On entry : 0/0
 13629 ;;		On exit  : 0/0
 13630 ;;		Unchanged: 0/0
 13631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13632 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13633 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13634 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13635 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13636 ;;Total ram usage:        9 bytes
 13637 ;; Hardware stack levels used:    1
 13638 ;; This function calls:
 13639 ;;		Nothing
 13640 ;; This function is called by:
 13641 ;;		_main
 13642 ;;		_LCDWriteInt
 13643 ;; This function uses a non-reentrant model
 13644 ;;
 13645                           
 13646                           
 13647                           ;psect for function ___awdiv
 13648  1585                     ___awdiv:	
 13649                           
 13650                           ;incstack = 0
 13651                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 13652  1585  01F6               	clrf	___awdiv@sign
 13653  1586  1FF1               	btfss	___awdiv@divisor+1,7
 13654  1587  2D8F               	goto	l3933
 13655  1588  09F0               	comf	___awdiv@divisor,f
 13656  1589  09F1               	comf	___awdiv@divisor+1,f
 13657  158A  0AF0               	incf	___awdiv@divisor,f
 13658  158B  1903               	skipnz
 13659  158C  0AF1               	incf	___awdiv@divisor+1,f
 13660  158D  01F6               	clrf	___awdiv@sign
 13661  158E  0AF6               	incf	___awdiv@sign,f
 13662  158F                     l3933:	
 13663  158F  1FF3               	btfss	___awdiv@dividend+1,7
 13664  1590  2D9A               	goto	l3939
 13665  1591  09F2               	comf	___awdiv@dividend,f
 13666  1592  09F3               	comf	___awdiv@dividend+1,f
 13667  1593  0AF2               	incf	___awdiv@dividend,f
 13668  1594  1903               	skipnz
 13669  1595  0AF3               	incf	___awdiv@dividend+1,f
 13670  1596  3001               	movlw	1
 13671  1597  00F4               	movwf	??___awdiv
 13672  1598  0874               	movf	??___awdiv,w
 13673  1599  06F6               	xorwf	___awdiv@sign,f
 13674  159A                     l3939:	
 13675  159A  01F7               	clrf	___awdiv@quotient
 13676  159B  01F8               	clrf	___awdiv@quotient+1
 13677  159C  0870               	movf	___awdiv@divisor,w
 13678  159D  0471               	iorwf	___awdiv@divisor+1,w
 13679  159E  1903               	btfsc	3,2
 13680  159F  2DC9               	goto	l3961
 13681  15A0  01F5               	clrf	___awdiv@counter
 13682  15A1  0AF5               	incf	___awdiv@counter,f
 13683  15A2                     l3949:	
 13684  15A2  1BF1               	btfsc	___awdiv@divisor+1,7
 13685  15A3  2DAE               	goto	l3951
 13686  15A4  3001               	movlw	1
 13687  15A5                     u4675:	
 13688  15A5  35F0               	lslf	___awdiv@divisor,f
 13689  15A6  0DF1               	rlf	___awdiv@divisor+1,f
 13690  15A7  0B89               	decfsz	9,f
 13691  15A8  2DA5               	goto	u4675
 13692  15A9  3001               	movlw	1
 13693  15AA  00F4               	movwf	??___awdiv
 13694  15AB  0874               	movf	??___awdiv,w
 13695  15AC  07F5               	addwf	___awdiv@counter,f
 13696  15AD  2DA2               	goto	l3949
 13697  15AE                     l3951:	
 13698  15AE  3001               	movlw	1
 13699  15AF                     u4695:	
 13700  15AF  35F7               	lslf	___awdiv@quotient,f
 13701  15B0  0DF8               	rlf	___awdiv@quotient+1,f
 13702  15B1  0B89               	decfsz	9,f
 13703  15B2  2DAF               	goto	u4695
 13704  15B3  0871               	movf	___awdiv@divisor+1,w
 13705  15B4  0273               	subwf	___awdiv@dividend+1,w
 13706  15B5  1D03               	skipz
 13707  15B6  2DB9               	goto	u4705
 13708  15B7  0870               	movf	___awdiv@divisor,w
 13709  15B8  0272               	subwf	___awdiv@dividend,w
 13710  15B9                     u4705:	
 13711  15B9  1C03               	skipc
 13712  15BA  2DC0               	goto	l3957
 13713  15BB  0870               	movf	___awdiv@divisor,w
 13714  15BC  02F2               	subwf	___awdiv@dividend,f
 13715  15BD  0871               	movf	___awdiv@divisor+1,w
 13716  15BE  3BF3               	subwfb	___awdiv@dividend+1,f
 13717  15BF  1477               	bsf	___awdiv@quotient,0
 13718  15C0                     l3957:	
 13719  15C0  3001               	movlw	1
 13720  15C1                     u4715:	
 13721  15C1  36F1               	lsrf	___awdiv@divisor+1,f
 13722  15C2  0CF0               	rrf	___awdiv@divisor,f
 13723  15C3  0B89               	decfsz	9,f
 13724  15C4  2DC1               	goto	u4715
 13725  15C5  3001               	movlw	1
 13726  15C6  02F5               	subwf	___awdiv@counter,f
 13727  15C7  1D03               	btfss	3,2
 13728  15C8  2DAE               	goto	l3951
 13729  15C9                     l3961:	
 13730  15C9  0876               	movf	___awdiv@sign,w
 13731  15CA  1903               	btfsc	3,2
 13732  15CB  2DD1               	goto	l3965
 13733  15CC  09F7               	comf	___awdiv@quotient,f
 13734  15CD  09F8               	comf	___awdiv@quotient+1,f
 13735  15CE  0AF7               	incf	___awdiv@quotient,f
 13736  15CF  1903               	skipnz
 13737  15D0  0AF8               	incf	___awdiv@quotient+1,f
 13738  15D1                     l3965:	
 13739  15D1  0878               	movf	___awdiv@quotient+1,w
 13740  15D2  00F1               	movwf	?___awdiv+1
 13741  15D3  0877               	movf	___awdiv@quotient,w
 13742  15D4  00F0               	movwf	?___awdiv
 13743  15D5  0008               	return
 13744  15D6                     __end_of___awdiv:	
 13745                           
 13746                           	psect	text36
 13747  09B3                     __ptext36:	
 13748 ;; *************** function _Battery_State_Machine *****************
 13749 ;; Defined at:
 13750 ;;		line 43 in file "battery_charger.c"
 13751 ;; Parameters:    Size  Location     Type
 13752 ;;		None
 13753 ;; Auto vars:     Size  Location     Type
 13754 ;;		None
 13755 ;; Return value:  Size  Location     Type
 13756 ;;                  1    wreg      void 
 13757 ;; Registers used:
 13758 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13759 ;; Tracked objects:
 13760 ;;		On entry : 0/0
 13761 ;;		On exit  : 0/0
 13762 ;;		Unchanged: 0/0
 13763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13766 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13767 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13768 ;;Total ram usage:        2 bytes
 13769 ;; Hardware stack levels used:    1
 13770 ;; Hardware stack levels required when called:    3
 13771 ;; This function calls:
 13772 ;;		_LCDWriteString
 13773 ;;		_gotoXY
 13774 ;; This function is called by:
 13775 ;;		_main
 13776 ;; This function uses a non-reentrant model
 13777 ;;
 13778                           
 13779                           
 13780                           ;psect for function _Battery_State_Machine
 13781  09B3                     _Battery_State_Machine:	
 13782                           
 13783                           ;battery_charger.c: 45: if(battery_state0 == PRECHARGE)
 13784                           
 13785                           ;incstack = 0
 13786                           ; Regs used in _Battery_State_Machine: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 13787  09B3  3003               	movlw	3
 13788  09B4  0021               	movlb	1	; select bank1
 13789  09B5  064B               	xorwf	_battery_state0^(0+128),w
 13790  09B6  1D03               	btfss	3,2
 13791  09B7  29E8               	goto	l4203
 13792                           
 13793                           ;battery_charger.c: 46: {
 13794                           ;battery_charger.c: 47: if(voltage[1] < 1075)
 13795  09B8  082B               	movf	((_voltage+1)^(0+128)+2),w
 13796  09B9  3A80               	xorlw	128
 13797  09BA  0020               	movlb	0	; select bank0
 13798  09BB  00AA               	movwf	??_Battery_State_Machine
 13799  09BC  3084               	movlw	132
 13800  09BD  022A               	subwf	??_Battery_State_Machine,w
 13801  09BE  1D03               	skipz
 13802  09BF  29C3               	goto	u5215
 13803  09C0  3033               	movlw	51
 13804  09C1  0021               	movlb	1	; select bank1
 13805  09C2  022A               	subwf	(_voltage^(0+128)+2),w
 13806  09C3                     u5215:	
 13807  09C3  1803               	skipnc
 13808  09C4  29DD               	goto	l4201
 13809                           
 13810                           ;battery_charger.c: 48: {
 13811                           ;battery_charger.c: 49: if(state_counter0>0)
 13812  09C5  0022               	movlb	2	; select bank2
 13813  09C6  0850               	movf	(_state_counter0+1)^(0+256),w
 13814  09C7  3A80               	xorlw	128
 13815  09C8  0020               	movlb	0	; select bank0
 13816  09C9  00AA               	movwf	??_Battery_State_Machine
 13817  09CA  3080               	movlw	128
 13818  09CB  022A               	subwf	??_Battery_State_Machine,w
 13819  09CC  1D03               	skipz
 13820  09CD  29D1               	goto	u5225
 13821  09CE  3001               	movlw	1
 13822  09CF  0022               	movlb	2	; select bank2
 13823  09D0  024F               	subwf	_state_counter0^(0+256),w
 13824  09D1                     u5225:	
 13825  09D1  1C03               	skipc
 13826  09D2  29D9               	goto	l252
 13827                           
 13828                           ;battery_charger.c: 50: {
 13829                           ;battery_charger.c: 51: state_counter0-=1;
 13830  09D3  30FF               	movlw	255
 13831  09D4  0022               	movlb	2	; select bank2
 13832  09D5  07CF               	addwf	_state_counter0^(0+256),f
 13833  09D6  30FF               	movlw	255
 13834  09D7  3DD0               	addwfc	(_state_counter0+1)^(0+256),f
 13835                           
 13836                           ;battery_charger.c: 52: }
 13837  09D8  0008               	return
 13838  09D9                     l252:	
 13839                           
 13840                           ;battery_charger.c: 53: else
 13841                           ;battery_charger.c: 54: {
 13842                           ;battery_charger.c: 55: battery_state0 = FAULT;
 13843  09D9  0021               	movlb	1	; select bank1
 13844  09DA  01CB               	clrf	_battery_state0^(0+128)
 13845  09DB  0ACB               	incf	_battery_state0^(0+128),f
 13846                           
 13847                           ;battery_charger.c: 56: }
 13848                           ;battery_charger.c: 57: }
 13849  09DC  0008               	return
 13850  09DD                     l4201:	
 13851                           
 13852                           ;battery_charger.c: 58: else
 13853                           ;battery_charger.c: 59: {
 13854                           ;battery_charger.c: 60: battery_state0 = CHARGE;
 13855  09DD  3004               	movlw	4
 13856  09DE  0020               	movlb	0	; select bank0
 13857  09DF  00AA               	movwf	??_Battery_State_Machine
 13858  09E0  082A               	movf	??_Battery_State_Machine,w
 13859  09E1  0021               	movlb	1	; select bank1
 13860  09E2  00CB               	movwf	_battery_state0^(0+128)
 13861                           
 13862                           ;battery_charger.c: 61: { Iref0 = 35; };
 13863  09E3  3023               	movlw	35
 13864  09E4  00C7               	movwf	_Iref0^(0+128)
 13865  09E5  3000               	movlw	0
 13866  09E6  00C8               	movwf	(_Iref0^(0+128)+1)
 13867                           
 13868                           ;battery_charger.c: 62: }
 13869                           ;battery_charger.c: 63: }
 13870  09E7  0008               	return
 13871  09E8                     l4203:	
 13872                           
 13873                           ;battery_charger.c: 64: else if(battery_state0 == CHARGE)
 13874  09E8  3004               	movlw	4
 13875  09E9  064B               	xorwf	_battery_state0^(0+128),w
 13876  09EA  1D03               	btfss	3,2
 13877  09EB  2A20               	goto	l4217
 13878                           
 13879                           ;battery_charger.c: 65: {
 13880                           ;battery_charger.c: 66: if((!Imode0))
 13881  09EC  084D               	movf	_Imode0^(0+128),w
 13882  09ED  1D03               	btfss	3,2
 13883  09EE  0008               	return
 13884                           
 13885                           ;battery_charger.c: 67: {
 13886                           ;battery_charger.c: 68: if(current[1] < Imin0)
 13887  09EF  0823               	movf	((_current+1)^(0+128)+2),w
 13888  09F0  3A80               	xorlw	128
 13889  09F1  0020               	movlb	0	; select bank0
 13890  09F2  00AA               	movwf	??_Battery_State_Machine
 13891  09F3  0022               	movlb	2	; select bank2
 13892  09F4  084E               	movf	(_Imin0+1)^(0+256),w
 13893  09F5  3A80               	xorlw	128
 13894  09F6  0020               	movlb	0	; select bank0
 13895  09F7  022A               	subwf	??_Battery_State_Machine,w
 13896  09F8  1D03               	skipz
 13897  09F9  29FE               	goto	u5255
 13898  09FA  0022               	movlb	2	; select bank2
 13899  09FB  084D               	movf	_Imin0^(0+256),w
 13900  09FC  0021               	movlb	1	; select bank1
 13901  09FD  0222               	subwf	(_current^(0+128)+2),w
 13902  09FE                     u5255:	
 13903  09FE  1803               	skipnc
 13904  09FF  2A13               	goto	l4213
 13905                           
 13906                           ;battery_charger.c: 69: {
 13907                           ;battery_charger.c: 70: Imin0Count-=2;
 13908  0A00  3002               	movlw	2
 13909  0A01  0022               	movlb	2	; select bank2
 13910  0A02  02D1               	subwf	_Imin0Count^(0+256),f
 13911  0A03  3000               	movlw	0
 13912  0A04  3BD2               	subwfb	(_Imin0Count+1)^(0+256),f
 13913                           
 13914                           ;battery_charger.c: 71: if(Imin0Count<2)
 13915  0A05  3000               	movlw	0
 13916  0A06  0252               	subwf	(_Imin0Count+1)^(0+256),w
 13917  0A07  3002               	movlw	2
 13918  0A08  1903               	skipnz
 13919  0A09  0251               	subwf	_Imin0Count^(0+256),w
 13920  0A0A  1803               	skipnc
 13921  0A0B  0008               	return
 13922                           
 13923                           ;battery_charger.c: 72: {
 13924                           ;battery_charger.c: 73: battery_state0 = FLOAT;
 13925  0A0C  3005               	movlw	5
 13926  0A0D  0020               	movlb	0	; select bank0
 13927  0A0E  00AA               	movwf	??_Battery_State_Machine
 13928  0A0F  082A               	movf	??_Battery_State_Machine,w
 13929  0A10  0021               	movlb	1	; select bank1
 13930  0A11  00CB               	movwf	_battery_state0^(0+128)
 13931                           
 13932                           ;battery_charger.c: 74: }
 13933                           ;battery_charger.c: 75: }
 13934  0A12  0008               	return
 13935  0A13                     l4213:	
 13936                           
 13937                           ;battery_charger.c: 76: else
 13938                           ;battery_charger.c: 77: {
 13939                           ;battery_charger.c: 78: if(Imin0Count<10)Imin0Count+=1;
 13940  0A13  3000               	movlw	0
 13941  0A14  0022               	movlb	2	; select bank2
 13942  0A15  0252               	subwf	(_Imin0Count+1)^(0+256),w
 13943  0A16  300A               	movlw	10
 13944  0A17  1903               	skipnz
 13945  0A18  0251               	subwf	_Imin0Count^(0+256),w
 13946  0A19  1803               	skipnc
 13947  0A1A  0008               	return
 13948  0A1B  3001               	movlw	1
 13949  0A1C  07D1               	addwf	_Imin0Count^(0+256),f
 13950  0A1D  3000               	movlw	0
 13951  0A1E  3DD2               	addwfc	(_Imin0Count+1)^(0+256),f
 13952                           
 13953                           ;battery_charger.c: 79: }
 13954                           ;battery_charger.c: 80: }
 13955                           ;battery_charger.c: 81: }
 13956  0A1F  0008               	return
 13957  0A20                     l4217:	
 13958                           
 13959                           ;battery_charger.c: 82: else if(battery_state0 == FLOAT)
 13960  0A20  3005               	movlw	5
 13961  0A21  0021               	movlb	1	; select bank1
 13962  0A22  064B               	xorwf	_battery_state0^(0+128),w
 13963  0A23  1D03               	btfss	3,2
 13964  0A24  2A2E               	goto	l4221
 13965                           
 13966                           ;battery_charger.c: 83: {
 13967                           ;battery_charger.c: 84: { Vref0 = 1379; };
 13968  0A25  3063               	movlw	99
 13969  0A26  00C9               	movwf	_Vref0^(0+128)
 13970  0A27  3005               	movlw	5
 13971  0A28  00CA               	movwf	(_Vref0^(0+128)+1)
 13972                           
 13973                           ;battery_charger.c: 85: { Iref0 = 20; };
 13974  0A29  3014               	movlw	20
 13975  0A2A  00C7               	movwf	_Iref0^(0+128)
 13976  0A2B  3000               	movlw	0
 13977  0A2C  00C8               	movwf	(_Iref0^(0+128)+1)
 13978                           
 13979                           ;battery_charger.c: 86: }
 13980  0A2D  0008               	return
 13981  0A2E                     l4221:	
 13982                           
 13983                           ;battery_charger.c: 87: else
 13984                           ;battery_charger.c: 88: if(battery_state0 == FAULT)
 13985  0A2E  034B               	decf	_battery_state0^(0+128),w
 13986  0A2F  1D03               	btfss	3,2
 13987  0A30  0008               	return
 13988                           
 13989                           ;battery_charger.c: 89: {
 13990                           ;battery_charger.c: 90: { gotoXY(0,0); LCDWriteString("BATTERY FAULT");};
 13991  0A31  01F5               	clrf	gotoXY@y
 13992  0A32  3000               	movlw	0
 13993  0A33  3192  2230  3189   	fcall	_gotoXY
 13994  0A36  301B               	movlw	low (STR_1| (0+32768))
 13995  0A37  0020               	movlb	0	; select bank0
 13996  0A38  00A8               	movwf	LCDWriteString@characters
 13997  0A39  3098               	movlw	high (STR_1| (0+32768))
 13998  0A3A  00A9               	movwf	LCDWriteString@characters+1
 13999  0A3B  3192  229A  3189   	fcall	_LCDWriteString
 14000                           
 14001                           ;battery_charger.c: 91: Imode0=0;
 14002  0A3E  0021               	movlb	1	; select bank1
 14003  0A3F  01CD               	clrf	_Imode0^(0+128)
 14004                           
 14005                           ;battery_charger.c: 92: Imode1=0;
 14006  0A40  01CC               	clrf	_Imode1^(0+128)
 14007                           
 14008                           ;battery_charger.c: 93: _delay((unsigned long)((2000)*(32000000/4000.0)));
 14009  0A41  3052               	movlw	82
 14010  0A42  0020               	movlb	0	; select bank0
 14011  0A43  00AB               	movwf	??_Battery_State_Machine+1
 14012  0A44  302B               	movlw	43
 14013  0A45  00AA               	movwf	??_Battery_State_Machine
 14014  0A46  3000               	movlw	0
 14015  0A47                     u5937:	
 14016  0A47  0B89               	decfsz	9,f
 14017  0A48  2A47               	goto	u5937
 14018  0A49  0BAA               	decfsz	??_Battery_State_Machine,f
 14019  0A4A  2A47               	goto	u5937
 14020  0A4B  0BAB               	decfsz	??_Battery_State_Machine+1,f
 14021  0A4C  2A47               	goto	u5937
 14022  0A4D  0000               	nop
 14023  0A4E  0008               	return
 14024  0A4F                     __end_of_Battery_State_Machine:	
 14025                           
 14026                           	psect	text37
 14027  1230                     __ptext37:	
 14028 ;; *************** function _gotoXY *****************
 14029 ;; Defined at:
 14030 ;;		line 124 in file "lcd.c"
 14031 ;; Parameters:    Size  Location     Type
 14032 ;;  x               1    wreg     unsigned char 
 14033 ;;  y               1    5[COMMON] unsigned char 
 14034 ;; Auto vars:     Size  Location     Type
 14035 ;;  x               1    7[COMMON] unsigned char 
 14036 ;; Return value:  Size  Location     Type
 14037 ;;                  1    wreg      void 
 14038 ;; Registers used:
 14039 ;;		wreg, status,2, status,0, pclath, cstack
 14040 ;; Tracked objects:
 14041 ;;		On entry : 0/0
 14042 ;;		On exit  : 0/0
 14043 ;;		Unchanged: 0/0
 14044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14045 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14046 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14047 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14048 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14049 ;;Total ram usage:        3 bytes
 14050 ;; Hardware stack levels used:    1
 14051 ;; Hardware stack levels required when called:    1
 14052 ;; This function calls:
 14053 ;;		_LCDWrite
 14054 ;; This function is called by:
 14055 ;;		_main
 14056 ;;		_Battery_State_Machine
 14057 ;;		_LCDClear
 14058 ;; This function uses a non-reentrant model
 14059 ;;
 14060                           
 14061                           
 14062                           ;psect for function _gotoXY
 14063  1230                     _gotoXY:	
 14064                           
 14065                           ;incstack = 0
 14066                           ; Regs used in _gotoXY: [wreg+status,2+status,0+pclath+cstack]
 14067                           ;gotoXY@x stored from wreg
 14068  1230  00F7               	movwf	gotoXY@x
 14069                           
 14070                           ;lcd.c: 126: LCDWrite(0,(uint8_t)(0x80 | x));
 14071  1231  0877               	movf	gotoXY@x,w
 14072  1232  3880               	iorlw	128
 14073  1233  00F6               	movwf	??_gotoXY
 14074  1234  0876               	movf	??_gotoXY,w
 14075  1235  00F0               	movwf	LCDWrite@data
 14076  1236  3000               	movlw	0
 14077  1237  3193  2368  3192   	fcall	_LCDWrite
 14078                           
 14079                           ;lcd.c: 127: LCDWrite(0,(uint8_t)(0x40 | y));
 14080  123A  0875               	movf	gotoXY@y,w
 14081  123B  3840               	iorlw	64
 14082  123C  00F6               	movwf	??_gotoXY
 14083  123D  0876               	movf	??_gotoXY,w
 14084  123E  00F0               	movwf	LCDWrite@data
 14085  123F  3000               	movlw	0
 14086  1240  3193  2368         	fcall	_LCDWrite
 14087  1242  0008               	return
 14088  1243                     __end_of_gotoXY:	
 14089                           
 14090                           	psect	text38
 14091  129A                     __ptext38:	
 14092 ;; *************** function _LCDWriteString *****************
 14093 ;; Defined at:
 14094 ;;		line 176 in file "lcd.c"
 14095 ;; Parameters:    Size  Location     Type
 14096 ;;  characters      2    8[BANK0 ] PTR const unsigned char 
 14097 ;;		 -> STR_1(14), 
 14098 ;; Auto vars:     Size  Location     Type
 14099 ;;		None
 14100 ;; Return value:  Size  Location     Type
 14101 ;;                  1    wreg      void 
 14102 ;; Registers used:
 14103 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 14104 ;; Tracked objects:
 14105 ;;		On entry : 0/0
 14106 ;;		On exit  : 0/0
 14107 ;;		Unchanged: 0/0
 14108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14109 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14111 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14112 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14113 ;;Total ram usage:        3 bytes
 14114 ;; Hardware stack levels used:    1
 14115 ;; Hardware stack levels required when called:    2
 14116 ;; This function calls:
 14117 ;;		_LCDWriteCharacter
 14118 ;; This function is called by:
 14119 ;;		_Battery_State_Machine
 14120 ;; This function uses a non-reentrant model
 14121 ;;
 14122                           
 14123                           
 14124                           ;psect for function _LCDWriteString
 14125  129A                     _LCDWriteString:	
 14126  129A                     l3773:	
 14127                           ;lcd.c: 178: while (*characters)
 14128                           
 14129                           ;incstack = 0
 14130                           ; Regs used in _LCDWriteString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 14131                           
 14132  129A  0020               	movlb	0	; select bank0
 14133  129B  0828               	movf	LCDWriteString@characters,w
 14134  129C  0084               	movwf	4
 14135  129D  0829               	movf	LCDWriteString@characters+1,w
 14136  129E  0085               	movwf	5
 14137  129F  0012               	moviw fsr0++
 14138  12A0  1903               	btfsc	3,2
 14139  12A1  0008               	return
 14140                           
 14141                           ;lcd.c: 179: LCDWriteCharacter(*characters++);
 14142  12A2  0020               	movlb	0	; select bank0
 14143  12A3  0828               	movf	LCDWriteString@characters,w
 14144  12A4  0084               	movwf	4
 14145  12A5  0829               	movf	LCDWriteString@characters+1,w
 14146  12A6  0085               	movwf	5
 14147  12A7  0800               	movf	0,w	;code access
 14148  12A8  3195  25D6  3192   	fcall	_LCDWriteCharacter
 14149  12AB  3001               	movlw	1
 14150  12AC  0020               	movlb	0	; select bank0
 14151  12AD  07A8               	addwf	LCDWriteString@characters,f
 14152  12AE  3000               	movlw	0
 14153  12AF  3DA9               	addwfc	LCDWriteString@characters+1,f
 14154  12B0  2A9A               	goto	l3773
 14155  12B1                     __end_of_LCDWriteString:	
 14156                           
 14157                           	psect	text39
 14158  15D6                     __ptext39:	
 14159 ;; *************** function _LCDWriteCharacter *****************
 14160 ;; Defined at:
 14161 ;;		line 140 in file "lcd.c"
 14162 ;; Parameters:    Size  Location     Type
 14163 ;;  character       1    wreg     const unsigned char 
 14164 ;; Auto vars:     Size  Location     Type
 14165 ;;  character       1    5[BANK0 ] const unsigned char 
 14166 ;;  base            2    6[BANK0 ] unsigned int 
 14167 ;; Return value:  Size  Location     Type
 14168 ;;                  1    wreg      void 
 14169 ;; Registers used:
 14170 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 14171 ;; Tracked objects:
 14172 ;;		On entry : 0/0
 14173 ;;		On exit  : 0/0
 14174 ;;		Unchanged: 0/0
 14175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14177 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14178 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14179 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14180 ;;Total ram usage:        6 bytes
 14181 ;; Hardware stack levels used:    1
 14182 ;; Hardware stack levels required when called:    1
 14183 ;; This function calls:
 14184 ;;		_LCDWrite
 14185 ;;		___wmul
 14186 ;; This function is called by:
 14187 ;;		_main
 14188 ;;		_LCDWriteString
 14189 ;;		_LCDWriteInt
 14190 ;; This function uses a non-reentrant model
 14191 ;;
 14192                           
 14193                           
 14194                           ;psect for function _LCDWriteCharacter
 14195  15D6                     _LCDWriteCharacter:	
 14196                           
 14197                           ;incstack = 0
 14198                           ; Regs used in _LCDWriteCharacter: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 14199                           ;LCDWriteCharacter@character stored from wreg
 14200  15D6  0020               	movlb	0	; select bank0
 14201  15D7  00A5               	movwf	LCDWriteCharacter@character
 14202                           
 14203                           ;lcd.c: 142: uint16_t base;
 14204                           ;lcd.c: 143: base = character - 0x20;
 14205  15D8  0825               	movf	LCDWriteCharacter@character,w
 14206  15D9  3EE0               	addlw	224
 14207  15DA  00A6               	movwf	LCDWriteCharacter@base
 14208  15DB  30FF               	movlw	255
 14209  15DC  1803               	skipnc
 14210  15DD  3000               	movlw	0
 14211  15DE  00A7               	movwf	LCDWriteCharacter@base+1
 14212                           
 14213                           ;lcd.c: 144: base *= 3;
 14214  15DF  3003               	movlw	3
 14215  15E0  00F9               	movwf	___wmul@multiplier
 14216  15E1  3000               	movlw	0
 14217  15E2  00FA               	movwf	___wmul@multiplier+1
 14218  15E3  0827               	movf	LCDWriteCharacter@base+1,w
 14219  15E4  00FC               	movwf	___wmul@multiplicand+1
 14220  15E5  0826               	movf	LCDWriteCharacter@base,w
 14221  15E6  00FB               	movwf	___wmul@multiplicand
 14222  15E7  3192  22CE  3195   	fcall	___wmul
 14223  15EA  087A               	movf	?___wmul+1,w
 14224  15EB  0020               	movlb	0	; select bank0
 14225  15EC  00A7               	movwf	LCDWriteCharacter@base+1
 14226  15ED  0879               	movf	?___wmul,w
 14227  15EE  00A6               	movwf	LCDWriteCharacter@base
 14228                           
 14229                           ;lcd.c: 145: LCDWrite(1,fonts[base]);
 14230  15EF  0827               	movf	LCDWriteCharacter@base+1,w
 14231  15F0  0085               	movwf	5
 14232  15F1  0826               	movf	LCDWriteCharacter@base,w
 14233  15F2  0084               	movwf	4
 14234  15F3  3000               	movlw	low (_fonts| (0+32768))
 14235  15F4  0784               	addwf	4,f
 14236  15F5  3088               	movlw	high (_fonts| (0+32768))
 14237  15F6  3D85               	addwfc	5,f
 14238  15F7  0800               	movf	0,w	;code access
 14239  15F8  00A2               	movwf	??_LCDWriteCharacter
 14240  15F9  0822               	movf	??_LCDWriteCharacter,w
 14241  15FA  00F0               	movwf	LCDWrite@data
 14242  15FB  3001               	movlw	1
 14243  15FC  3193  2368  3195   	fcall	_LCDWrite
 14244                           
 14245                           ;lcd.c: 146: LCDWrite(1,fonts[base + 1]);
 14246  15FF  0020               	movlb	0	; select bank0
 14247  1600  0826               	movf	LCDWriteCharacter@base,w
 14248  1601  3E01               	addlw	1
 14249  1602  00A2               	movwf	??_LCDWriteCharacter
 14250  1603  3000               	movlw	0
 14251  1604  3D27               	addwfc	LCDWriteCharacter@base+1,w
 14252  1605  00A3               	movwf	??_LCDWriteCharacter+1
 14253  1606  3000               	movlw	low (_fonts| (0+32768))
 14254  1607  0722               	addwf	??_LCDWriteCharacter,w
 14255  1608  0084               	movwf	4
 14256  1609  3088               	movlw	high (_fonts| (0+32768))
 14257  160A  3D23               	addwfc	??_LCDWriteCharacter+1,w
 14258  160B  0085               	movwf	5
 14259  160C  0800               	movf	0,w	;code access
 14260  160D  00A4               	movwf	??_LCDWriteCharacter+2
 14261  160E  0824               	movf	??_LCDWriteCharacter+2,w
 14262  160F  00F0               	movwf	LCDWrite@data
 14263  1610  3001               	movlw	1
 14264  1611  3193  2368  3195   	fcall	_LCDWrite
 14265                           
 14266                           ;lcd.c: 147: LCDWrite(1,fonts[base + 2]);
 14267  1614  0020               	movlb	0	; select bank0
 14268  1615  0826               	movf	LCDWriteCharacter@base,w
 14269  1616  3E02               	addlw	2
 14270  1617  00A2               	movwf	??_LCDWriteCharacter
 14271  1618  3000               	movlw	0
 14272  1619  3D27               	addwfc	LCDWriteCharacter@base+1,w
 14273  161A  00A3               	movwf	??_LCDWriteCharacter+1
 14274  161B  3000               	movlw	low (_fonts| (0+32768))
 14275  161C  0722               	addwf	??_LCDWriteCharacter,w
 14276  161D  0084               	movwf	4
 14277  161E  3088               	movlw	high (_fonts| (0+32768))
 14278  161F  3D23               	addwfc	??_LCDWriteCharacter+1,w
 14279  1620  0085               	movwf	5
 14280  1621  0800               	movf	0,w	;code access
 14281  1622  00A4               	movwf	??_LCDWriteCharacter+2
 14282  1623  0824               	movf	??_LCDWriteCharacter+2,w
 14283  1624  00F0               	movwf	LCDWrite@data
 14284  1625  3001               	movlw	1
 14285  1626  3193  2368  3195   	fcall	_LCDWrite
 14286                           
 14287                           ;lcd.c: 148: LCDWrite(1, 0x00);
 14288  1629  01F0               	clrf	LCDWrite@data
 14289  162A  3001               	movlw	1
 14290  162B  3193  2368         	fcall	_LCDWrite
 14291  162D  0008               	return
 14292  162E                     __end_of_LCDWriteCharacter:	
 14293                           
 14294                           	psect	text40
 14295  12CE                     __ptext40:	
 14296 ;; *************** function ___wmul *****************
 14297 ;; Defined at:
 14298 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 14299 ;; Parameters:    Size  Location     Type
 14300 ;;  multiplier      2    9[COMMON] unsigned int 
 14301 ;;  multiplicand    2   11[COMMON] unsigned int 
 14302 ;; Auto vars:     Size  Location     Type
 14303 ;;  product         2    0[BANK0 ] unsigned int 
 14304 ;; Return value:  Size  Location     Type
 14305 ;;                  2    9[COMMON] unsigned int 
 14306 ;; Registers used:
 14307 ;;		wreg, status,2, status,0
 14308 ;; Tracked objects:
 14309 ;;		On entry : 0/0
 14310 ;;		On exit  : 0/0
 14311 ;;		Unchanged: 0/0
 14312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14313 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14314 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14316 ;;      Totals:         4       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14317 ;;Total ram usage:        6 bytes
 14318 ;; Hardware stack levels used:    1
 14319 ;; This function calls:
 14320 ;;		Nothing
 14321 ;; This function is called by:
 14322 ;;		_main
 14323 ;;		_readIAnalog
 14324 ;;		_LCDWriteCharacter
 14325 ;;		_eval_poly
 14326 ;; This function uses a non-reentrant model
 14327 ;;
 14328                           
 14329                           
 14330                           ;psect for function ___wmul
 14331  12CE                     ___wmul:	
 14332                           
 14333                           ;incstack = 0
 14334                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 14335  12CE  0020               	movlb	0	; select bank0
 14336  12CF  01A0               	clrf	___wmul@product
 14337  12D0  01A1               	clrf	___wmul@product+1
 14338  12D1                     l3489:	
 14339  12D1  1C79               	btfss	___wmul@multiplier,0
 14340  12D2  2AD8               	goto	l613
 14341  12D3  087B               	movf	___wmul@multiplicand,w
 14342  12D4  0020               	movlb	0	; select bank0
 14343  12D5  07A0               	addwf	___wmul@product,f
 14344  12D6  087C               	movf	___wmul@multiplicand+1,w
 14345  12D7  3DA1               	addwfc	___wmul@product+1,f
 14346  12D8                     l613:	
 14347  12D8  3001               	movlw	1
 14348  12D9                     u4015:	
 14349  12D9  35FB               	lslf	___wmul@multiplicand,f
 14350  12DA  0DFC               	rlf	___wmul@multiplicand+1,f
 14351  12DB  0B89               	decfsz	9,f
 14352  12DC  2AD9               	goto	u4015
 14353  12DD  3001               	movlw	1
 14354  12DE                     u4025:	
 14355  12DE  36FA               	lsrf	___wmul@multiplier+1,f
 14356  12DF  0CF9               	rrf	___wmul@multiplier,f
 14357  12E0  0B89               	decfsz	9,f
 14358  12E1  2ADE               	goto	u4025
 14359  12E2  0879               	movf	___wmul@multiplier,w
 14360  12E3  047A               	iorwf	___wmul@multiplier+1,w
 14361  12E4  1D03               	btfss	3,2
 14362  12E5  2AD1               	goto	l3489
 14363  12E6  0020               	movlb	0	; select bank0
 14364  12E7  0821               	movf	___wmul@product+1,w
 14365  12E8  00FA               	movwf	?___wmul+1
 14366  12E9  0820               	movf	___wmul@product,w
 14367  12EA  00F9               	movwf	?___wmul
 14368  12EB  0008               	return
 14369  12EC                     __end_of___wmul:	
 14370                           
 14371                           	psect	text41
 14372  1368                     __ptext41:	
 14373 ;; *************** function _LCDWrite *****************
 14374 ;; Defined at:
 14375 ;;		line 281 in file "lcd.c"
 14376 ;; Parameters:    Size  Location     Type
 14377 ;;  data_or_comm    1    wreg     unsigned char 
 14378 ;;  data            1    0[COMMON] unsigned char 
 14379 ;; Auto vars:     Size  Location     Type
 14380 ;;  data_or_comm    1    2[COMMON] unsigned char 
 14381 ;;  i               1    4[COMMON] unsigned char 
 14382 ;;  d               1    3[COMMON] unsigned char 
 14383 ;; Return value:  Size  Location     Type
 14384 ;;                  1    wreg      void 
 14385 ;; Registers used:
 14386 ;;		wreg, status,2, status,0
 14387 ;; Tracked objects:
 14388 ;;		On entry : 0/0
 14389 ;;		On exit  : 0/0
 14390 ;;		Unchanged: 0/0
 14391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14392 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14393 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14394 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14395 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14396 ;;Total ram usage:        5 bytes
 14397 ;; Hardware stack levels used:    1
 14398 ;; This function calls:
 14399 ;;		Nothing
 14400 ;; This function is called by:
 14401 ;;		_gotoXY
 14402 ;;		_LCDWriteCharacter
 14403 ;;		_LCDClear
 14404 ;;		_LCDInit
 14405 ;; This function uses a non-reentrant model
 14406 ;;
 14407                           
 14408                           
 14409                           ;psect for function _LCDWrite
 14410  1368                     _LCDWrite:	
 14411                           
 14412                           ;incstack = 0
 14413                           ; Regs used in _LCDWrite: [wreg+status,2+status,0]
 14414                           ;LCDWrite@data_or_command stored from wreg
 14415  1368  00F2               	movwf	LCDWrite@data_or_command
 14416                           
 14417                           ;lcd.c: 283: uint8_t i,d;
 14418                           ;lcd.c: 285: d=data;
 14419  1369  0870               	movf	LCDWrite@data,w
 14420  136A  00F1               	movwf	??_LCDWrite
 14421  136B  0871               	movf	??_LCDWrite,w
 14422  136C  00F3               	movwf	LCDWrite@d
 14423                           
 14424                           ;lcd.c: 287: if(data_or_command == 0)
 14425  136D  0872               	movf	LCDWrite@data_or_command,w
 14426  136E  1D03               	btfss	3,2
 14427  136F  2B73               	goto	l372
 14428                           
 14429                           ;lcd.c: 288: {
 14430                           ;lcd.c: 289: LATAbits.LATA2 = 0;
 14431  1370  0020               	movlb	0	; select bank0
 14432  1371  1116               	bcf	22,2	;volatile
 14433                           
 14434                           ;lcd.c: 290: }
 14435  1372  2B75               	goto	l373
 14436  1373                     l372:	
 14437                           
 14438                           ;lcd.c: 291: else
 14439                           ;lcd.c: 292: {
 14440                           ;lcd.c: 293: LATAbits.LATA2 = 1;
 14441  1373  0020               	movlb	0	; select bank0
 14442  1374  1516               	bsf	22,2	;volatile
 14443  1375                     l373:	
 14444                           
 14445                           ;lcd.c: 294: }
 14446                           ;lcd.c: 296: LATAbits.LATA1 = 0;
 14447  1375  1096               	bcf	22,1	;volatile
 14448                           
 14449                           ;lcd.c: 298: for(i=0;i<8;i++)
 14450  1376  01F4               	clrf	LCDWrite@i
 14451  1377  3008               	movlw	8
 14452  1378  0274               	subwf	LCDWrite@i,w
 14453  1379  1803               	btfsc	3,0
 14454  137A  2B8B               	goto	l375
 14455  137B                     l374:	
 14456                           
 14457                           ;lcd.c: 299: {
 14458                           ;lcd.c: 300: LATAbits.LATA3 = 0;
 14459  137B  1196               	bcf	22,3	;volatile
 14460                           
 14461                           ;lcd.c: 302: if(d&0x80)
 14462  137C  1FF3               	btfss	LCDWrite@d,7
 14463  137D  2B7F               	goto	l376
 14464                           
 14465                           ;lcd.c: 303: {
 14466                           ;lcd.c: 304: LATAbits.LATA3 = 1;
 14467  137E  1596               	bsf	22,3	;volatile
 14468  137F                     l376:	
 14469                           
 14470                           ;lcd.c: 305: }
 14471                           ;lcd.c: 307: LATAbits.LATA4 = 1;
 14472  137F  1616               	bsf	22,4	;volatile
 14473                           
 14474                           ;lcd.c: 309: d<<=1;
 14475  1380  1003               	clrc
 14476  1381  0DF3               	rlf	LCDWrite@d,f
 14477                           
 14478                           ;lcd.c: 311: LATAbits.LATA4=0;
 14479  1382  1216               	bcf	22,4	;volatile
 14480  1383  3001               	movlw	1
 14481  1384  00F1               	movwf	??_LCDWrite
 14482  1385  0871               	movf	??_LCDWrite,w
 14483  1386  07F4               	addwf	LCDWrite@i,f
 14484  1387  3008               	movlw	8
 14485  1388  0274               	subwf	LCDWrite@i,w
 14486  1389  1C03               	skipc
 14487  138A  2B7B               	goto	l374
 14488  138B                     l375:	
 14489                           
 14490                           ;lcd.c: 312: }
 14491                           ;lcd.c: 314: LATAbits.LATA1 = 1;
 14492  138B  1496               	bsf	22,1	;volatile
 14493  138C  0008               	return
 14494  138D                     __end_of_LCDWrite:	
 14495  007E                     btemp	set	126	;btemp
 14496  007E                     wtemp0	set	126


Data Sizes:
    Strings     14
    Constant    330
    Data        10
    BSS         79
    Persistent  11
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     76      79
    BANK1            80      0      46
    BANK2            80      0      51
    BANK3            80     35      35
    BANK4            80      0       0
    BANK5             8      0       0
    BANK6             0      0       0
    BANK7             0      0       0
    BANK8             0      0       0
    BANK9             0      0       0
    BANK10            0      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 27
		 -> log@coeff(CODE[27]), 

    LCDWriteString@characters	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_1(CODE[14]), 


Critical Paths under _main in COMMON

    _main->___awtoft
    _tempCalc->___awtoft
    _log->___awtoft
    ___ftmul->___awtoft
    ___ftadd->___awtoft
    _readIAnalog->___wmul
    _readButton->_ADCRead
    _calculateCurrent1->___awtoft
    _calculateCurrent0->___awtoft
    ___fttol->___awtoft
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    _SYSTEM_Initialize->_LCDClear
    _LCDInit->_LCDWrite
    _LCDClear->_gotoXY
    _Battery_State_Machine->_LCDWriteString
    _gotoXY->_LCDWrite
    _LCDWriteCharacter->___wmul
    ___wmul->___awdiv

Critical Paths under _main in BANK0

    _main->_tempCalc
    _tempCalc->_log
    _log->_eval_poly
    _eval_poly->___ftadd
    ___ftmul->___ftdiv
    ___ftsub->___ftadd
    ___ftadd->___ftmul
    _readIAnalog->___aldiv
    _calculateCurrent1->___fttol
    _calculateCurrent0->___fttol
    ___fttol->___ftdiv
    _LCDWriteInt->___fttol
    _Battery_State_Machine->_LCDWriteString
    _LCDWriteString->_LCDWriteCharacter
    _LCDWriteCharacter->___wmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                39    39      0  104441
                                             72 BANK0      4     4      0
                                              0 BANK3     35    35      0
                            _ADCRead
              _Battery_State_Machine
                           _LCDClear
                            _LCDInit
                  _LCDWriteCharacter
                        _LCDWriteInt
                 _PWM1_LoadDutyValue
                 _PWM6_LoadDutyValue
                 _PWM7_LoadDutyValue
                  _SYSTEM_Initialize
                            ___awdiv
                           ___awtoft
                            ___ftdiv
                            ___ftmul
                            ___fttol
                             ___wmul
                  _calculateCurrent0
                  _calculateCurrent1
                         _cc_cv_mode
                             _gotoXY
                         _readButton
                        _readIAnalog
                           _tempCalc
 ---------------------------------------------------------------------------------
 (1) _tempCalc                                            11     9      2   41962
                                             61 BANK0     11     9      2
                            _ADCRead (ARG)
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftsub
                            ___fttol
                                _log
 ---------------------------------------------------------------------------------
 (2) _log                                                  6     3      3   21126
                                             55 BANK0      6     3      3
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _frexp                                                6     2      4     452
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) _eval_poly                                           10     3      7    9270
                                             45 BANK0     10     3      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             16    10      6    3564
                                             16 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                           ___ftpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6     418
                                              0 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    4429
                                             45 BANK0      6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             13     7      6    4203
                                             32 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (1) _readIAnalog                                         24    22      2    2137
                                              6 BANK0     24    22      2
                            _ADCRead
                            ___aldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     575
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _readButton                                           2     2      0      31
                                              4 COMMON     2     2      0
                            _ADCRead
 ---------------------------------------------------------------------------------
 (2) _ADCRead                                              4     1      3      31
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _cc_cv_mode                                           1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _calculateCurrent1                                    3     3      0    8204
                                             30 BANK0      3     3      0
                           ___awtoft
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (1) _calculateCurrent0                                    3     3      0    8204
                                             30 BANK0      3     3      0
                           ___awtoft
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     891
                                             16 BANK0     14    10      4
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    4454
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
                           ___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             6     3      3    2859
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    2068
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    2     2      0    4630
                                             11 COMMON     2     2      0
                     _ADC_Initialize
         _Init_Battery_State_Machine
                           _LCDClear
                            _LCDInit
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PWM_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      34
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCDInit                                              1     1      0    1012
                                              5 COMMON     1     1      0
                           _LCDWrite
 ---------------------------------------------------------------------------------
 (2) _LCDClear                                             3     3      0    3584
                                              8 COMMON     3     3      0
                           _LCDWrite
                             _gotoXY
 ---------------------------------------------------------------------------------
 (2) _Init_Battery_State_Machine                           1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM7_LoadDutyValue                                   4     2      2     127
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _PWM6_LoadDutyValue                                   4     2      2     127
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _PWM1_LoadDutyValue                                   4     2      2     127
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCDWriteInt                                         16    11      5    9495
                                             30 BANK0     16    11      5
                            _ADCRead (ARG)
                  _LCDWriteCharacter
                            ___awdiv
                            ___fttol (ARG)
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     362
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     973
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _Battery_State_Machine                                2     2      0    4861
                                             10 BANK0      2     2      0
                     _LCDWriteString
                             _gotoXY
 ---------------------------------------------------------------------------------
 (1) _gotoXY                                               3     2      1    2504
                                              5 COMMON     3     2      1
                           _LCDWrite
 ---------------------------------------------------------------------------------
 (2) _LCDWriteString                                       3     1      2    2357
                                             13 COMMON     1     1      0
                                              8 BANK0      2     0      2
                  _LCDWriteCharacter
 ---------------------------------------------------------------------------------
 (2) _LCDWriteCharacter                                    6     6      0    2227
                                              2 BANK0      6     6      0
                           _LCDWrite
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    1054
                                              9 COMMON     4     0      4
                                              0 BANK0      2     2      0
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCDWrite                                             5     4      1    1012
                                              0 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCRead
   _Battery_State_Machine
     _LCDWriteString
       _LCDWriteCharacter
         _LCDWrite
         ___wmul
           ___awdiv (ARG)
     _gotoXY
       _LCDWrite
   _LCDClear
     _LCDWrite
     _gotoXY
       _LCDWrite
   _LCDInit
     _LCDWrite
   _LCDWriteCharacter
     _LCDWrite
     ___wmul
       ___awdiv (ARG)
   _LCDWriteInt
     _ADCRead (ARG)
     _LCDWriteCharacter (ARG)
       _LCDWrite
       ___wmul
         ___awdiv (ARG)
     ___awdiv (ARG)
     ___fttol (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
     ___lwmod (ARG)
   _PWM1_LoadDutyValue
   _PWM6_LoadDutyValue
   _PWM7_LoadDutyValue
   _SYSTEM_Initialize
     _ADC_Initialize
     _Init_Battery_State_Machine
     _LCDClear
       _LCDWrite
       _gotoXY
         _LCDWrite
     _LCDInit
       _LCDWrite
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM_Initialize
     _TMR2_Initialize
     _TMR4_Initialize
   ___awdiv
   ___awtoft
     ___ftpack
   ___ftdiv
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)
     ___ftpack (ARG)
   ___ftmul
     ___awtoft (ARG)
       ___ftpack
     ___ftdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftpack (ARG)
     _frexp (ARG)
   ___fttol
     ___awtoft (ARG)
       ___ftpack
     ___ftdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
   ___wmul
     ___awdiv (ARG)
   _calculateCurrent0
     ___awtoft
       ___ftpack
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
   _calculateCurrent1
     ___awtoft
       ___ftpack
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
   _cc_cv_mode
   _gotoXY
     _LCDWrite
   _readButton
     _ADCRead
   _readIAnalog
     _ADCRead
     ___aldiv
     ___wmul
       ___awdiv (ARG)
   _tempCalc
     _ADCRead (ARG)
     ___awtoft (ARG)
       ___ftpack
     ___ftadd (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
       _frexp (ARG)
     ___ftdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftsub (ARG)
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
         _frexp (ARG)
     ___fttol (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
     _log (ARG)
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
         _frexp (ARG)
       ___ftge
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       _eval_poly
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
           _frexp (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___wmul
           ___awdiv (ARG)
       _frexp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4C      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      2E       7       57.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      33       9       63.8%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50     23      23      11       43.8%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5                8      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      E1      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BANK8                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BANK9                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK10               0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      E1      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri Jul 06 14:41:36 2018

                                  _j 00C2               LCDWriteInt@fieldLength 0040  
            __size_of_PWM_Initialize 001F                          __CFG_CP$OFF 0000  
                       ___awdiv@sign 0076                  ___wmul@multiplicand 007B  
        __size_of_PWM6_LoadDutyValue 0016                         ___ftadd@exp1 004C  
                       ___ftadd@exp2 004B                          __CFG_LVP$ON 0000  
                       ___ftadd@sign 004A                                  l252 09D9  
                                l270 0D2C                                  l182 124A  
                                l185 1251                                  l282 0D96  
                                l372 1373                                  l373 1375  
                                l613 12D8                                  l374 137B  
                                l278 0D7F                        LCDClear@index 0079  
                                l375 138B                                  l376 137F  
                                l805 0E8C                                  l668 0942  
                                l781 16D3                                  l782 16DB  
                                l774 16C0                                  l865 175F  
                                _GIE 005F                                  _RB2 006A  
                       __CFG_CPD$OFF 0000                                  _log 0AF8  
                    __end_of_ADCRead 1258                      _TMR2_Initialize 1222  
                       __CFG_BORV$LO 0000                                  wreg 0009  
                    __end_of_LCDInit 1485                         ?_LCDWriteInt 003E  
                       __CFG_ZCD$OFF 0000                         ___ftdiv@cntr 002A  
                       ___ftdiv@sign 002F                                 l4003 0AD6  
                               l4103 0135                                 l4015 12F4  
                               l4201 09DD                                 l4025 170B  
                               l4113 1514                                 l4203 09E8  
                               l4051 1756                                 l4043 173B  
                               l4221 0A2E                                 l4213 0A13  
                               l4053 1762                                 l4045 1749  
                               l4141 17B7                                 l4071 13C5  
                               l4119 1559                                 l4135 179D  
                               l3511 0E1C                                 l4217 0A20  
                               l3441 169D                                 l4057 1770  
                               l4321 0D9D                                 l4305 0D58  
                               l4161 17E2                                 l4145 17C9  
                               l4075 13D1                                 l3451 16C5  
                               l3443 16A7                                 l4155 17D7  
                               l4147 17CB                                 l3507 0E15  
                               l3611 0C34                                 l4069 13B9  
                               l4261 0CB5                                 l4245 0C7D  
                               l3453 16CD                                 l3445 16AC  
                               l3437 1696                                 l4325 0DA2  
                               l3541 0E6B                                 l3517 0E2B  
                               l4079 13DA                                 l4263 0CB9  
                               l4255 0C84                                 l3703 139A  
                               l4335 0DC5                                 l4167 17FC  
                               l3535 0E58                                 l3607 0C2C  
                               l4431 0303                                 l4273 0CCB  
                               l4265 0CC1                                 l4257 0CB1  
                               l4169 17FE                                 l3553 0E9E  
                               l3537 0E62                                 l3529 0E45  
                               l4425 02E9                                 l4275 0CF2  
                               l4267 0CC7                                 l3643 1352  
                               l4291 0D32                                 l3547 0E7E  
                               l3539 0E67                                 l3651 149B  
                               l4507 0424                                 l4443 0319  
                               l4419 02CB                                 l3709 13AE  
                               l3557 0EB0                                 l3549 0E88  
                               l4381 01AC                                 l4279 0D00  
                               l4295 0D37                                 l3903 0963  
                               l3567 0ECB                                 l3655 14B1  
                               l3583 0BD5                                 l4455 0351  
                               l4375 01A6                                 l4367 0192  
                               l3489 12D1                                 l3921 09AA  
                               l3913 0991                                 l3905 0971  
                               l3577 0BBF                                 l4633 07B8  
                               l4449 0337                                 l4393 01F7  
                               l3595 0C10                                 l3675 14D2  
                               l4491 03F0                                 l4475 03A3  
                               l4387 01CB                                 l3773 129A  
                               l3933 158F                                 l3917 099C  
                               l3693 1687                                 l4493 03F3  
                               l4469 038C                                 l3951 15AE  
                               l3599 0C18                                 l4479 03AA  
                               l3961 15C9                                 l4497 0401  
                               l4489 03EB                                 l3939 159A  
                               l3875 0B2A                                 l3965 15D1  
                               l3957 15C0                                 l3949 15A2  
                               l3981 0A7C                                 l3869 0B17  
                               ?_log 0057                                 l3975 0A66  
                               l3895 0953                                 l3995 0ABD  
                               STR_1 181B                                 _LATA 0016  
                               _LATB 0017                                 _LATC 0018  
                               u4015 12D9                                 u4025 12DE  
                               _T2PR 028D                                 u5005 0082  
                               u5015 00C0                                 u4135 0E46  
                               u5105 1293                                 u5025 010F  
                               u4225 0E7F                                 u4305 0BF1  
                               _T4PR 0293                                 u5115 178B  
                               u5300 0C67                                 u4500 1448  
                               u5125 1797                                 u4165 0E59  
                               u4325 0C19                                 u5215 09C3  
                               u5135 17A7                                 u5055 0141  
                               u4335 0C1F                                 u5225 09D1  
                               u5065 150E                                 u5145 17B3  
                               u5075 1553                                 u5155 17C1  
                               u4195 0E6C                                 u5085 1267  
                               u4605 0986                                 u4365 0C35  
                               u5255 09FE                                 u5095 127D  
                               u4455 1398                                 u4615 0992  
                               u4375 0C3B                                 u4295 0BE1  
                               u4705 15B9                                 u4465 13AC  
                               u3905 16C8                                 u4715 15C1  
                               u5435 0D42                                 u5365 0CE0  
                               u4805 0AD7                                 u5525 0DAD  
                               u5455 0D63                                 u4575 0966  
                               u3945 16E2                                 u3865 16A2  
                               u4905 1757                                 u5545 0DD0  
                               u5625 02B8                                 u4675 15A5  
                               u5395 0D20                                 u4595 0972  
                               u5715 0316                                 u3885 16BB  
                               u4765 0A8E                                 u4845 1712  
                               u5485 0D8A                                 u4695 15AF  
                               u4775 0A9E                                 u5815 039C  
                               u4945 13BC                                 u4785 0ABE  
                               u5745 0328                                 u5665 02DA  
                               u4795 0ACD                                 u4875 173C  
                               u5907 17ED                                 u4965 13CB  
                               u5917 13FC                                 u5845 03C9  
                               u5765 0346                                 u5685 02F8  
                               u4975 13D2                                 u5927 140B  
                               u5855 03E4                                 u5937 0A47  
                               u4995 0028                                 u5795 0385  
                               u5897 019A                  tempCalc@analogValue 005D  
                               _WPUA 0F39                                 _WPUB 0F44  
                               _WPUC 0F4F                                 _WPUE 0F65  
                               _Iout 00B4                         __CFG_WRT$OFF 0000  
                      __CFG_FCMEN$ON 0000                                 _main 015E  
                       ___ftpack@arg 0070                         ___ftpack@exp 0073  
                               fsr0h 0005                                 fsr1h 0007  
                               indf0 0000                                 fsr0l 0004  
                               indf1 0001                                 fsr1l 0006  
                               btemp 007E                                 log@x 0057  
                       ?_readIAnalog 0026                        __CFG_BOREN$ON 0000  
                               start 0002                        __CFG_CSWEN$ON 0000  
                      __CFG_MCLRE$ON 0000                         ___ftmul@cntr 003E  
                       ___ftmul@sign 003F                     __end_of_LCDClear 13B3  
                       ___fttol@exp1 003D                                ??_log 005A  
                       ___fttol@lval 0039  __size_of_Init_Battery_State_Machine 001D  
     __size_of_OSCILLATOR_Initialize 0009                     __end_of_LCDWrite 138D  
      __end_of_OSCILLATOR_Initialize 1216                      __end_of___aldiv 09B3  
                              _ADACQ 009D                                _ADACT 0099  
                              _ADCAP 009B                                ?_main 0070  
                              _ADCLK 0098                                _ADPCH 009E  
                              _ADREF 009A                      __end_of___awdiv 15D6  
                              _ADPRE 009C                      __end_of___ftadd 0EE3  
                      __CFG_WDTE$OFF 0000                                _ADRPT 010D  
                    __end_of___ftdiv 0AF8                      __end_of___ftmul 0C5C  
                    ___awdiv@divisor 0070                      __end_of___ftsub 130A  
                    __end_of___fttol 1779                                _T2CON 028E  
                              _LATA5 00B5                                _T4CON 0294  
                              _T2HLT 028F                                _T4HLT 0295  
                              _T2TMR 028C                                _T2RST 0291  
                    __end_of___lwmod 13DF                                _T4TMR 0292  
                              _T4RST 0297                      ___awdiv@counter 0075  
                              _OSCEN 0891                                _TRISA 0011  
                              _TRISB 0012                                _TRISC 0013  
                    _TMR4_Initialize 0004                                _Imin0 014D  
                              _Imin1 00B6                                _Iref0 00C7  
                              _Iref1 00BE                           _Imin0Count 0151  
             ?_Battery_State_Machine 0070                           _Imin1Count 00BA  
                              _Vref0 00C9                                _Vref1 00C0  
                      ___awtoft@sign 007D                                _frexp 14C0  
                              _fonts 0800                                _errno 00B0  
                     _state_counter0 014F                       _state_counter1 00B8  
                      ___ftpack@sign 0074                                main@j 01BC  
                       main@slowLoop 01B2                                status 0003  
                              wtemp0 007E                      __initialization 07BB  
                        log@exponent 005B                         __end_of_main 07BB  
            __end_of_TMR2_Initialize 1230                            ??_ADCRead 0073  
                             ??_main 0068                        ___fttol@sign1 0038  
                          ??_LCDInit 0075              LCDWrite@data_or_command 0072  
                             _ADCON0 0093                               _ADCON1 0094  
                             _ADCON2 0095                               _ADCON3 0096  
                             ?_frexp 0070                               _ADLTHH 010F  
                             _ADLTHL 010E                               _ADRESH 008D  
                             _ADRESL 008C                               _CCPR1H 030D  
                             _CCPR1L 030C                               _ADSTAT 0097  
                             _ADUTHH 0111                     ___awdiv@dividend 0072  
                             _ADUTHL 0110                     __end_of___awtoft 1368  
                             _ANSELA 0F38                               _ANSELB 0F43  
                             _ANSELC 0F4E                     __end_of___ftpack 16F2  
                             _RB0PPS 0F18                               _RA6PPS 0F16  
                             _RA7PPS 0F17                       __CFG_WDTCCS$SC 0000  
                             _FVRCON 090C                               _OSCFRQ 0893  
                     __CFG_PWRTE$OFF 0000                               _Imode0 00CD  
                             _Imode1 00CC                       _LCDWriteString 129A  
                       _CCPTMRS0bits 021E                         _CCPTMRS1bits 021F  
                             ___ftge 1485                               _cc_cv0 00C4  
                             _cc_cv1 00C3                            ??___aldiv 0078  
                             ___wmul 12CE                            ??___awdiv 0074  
                          ??___ftadd 0046                       __CFG_STVREN$ON 0000  
                     _PWM_Initialize 1329                            ??___ftdiv 0026  
                          ??___ftmul 0036                            ??___ftsub 007E  
                          ??___fttol 0034                            ??___lwmod 0074  
                             _gotoXY 1230                               _button 006D  
            __end_of_TMR4_Initialize 0012                     ___awdiv@quotient 0077  
                             _totals 0120                ___ftmul@f3_as_product 003B  
                   __end_of_tempCalc 1000                         LCDWrite@data 0070  
                       LCDWriteInt@i 004D                         LCDWriteInt@j 004C  
                          ?_LCDClear 0070                    _SYSTEM_Initialize 13DF  
               __size_of_LCDWriteInt 00B9                     __end_oflog@coeff 181B  
            __end_of__initialization 07FD                           ___ftadd@f1 0040  
                         ___ftadd@f2 0043                           ___ftge@ff1 0070  
                         ___ftge@ff2 0073                            ?_LCDWrite 0070  
                 ?_SYSTEM_Initialize 0070               __end_of_LCDWriteString 12B1  
                       eval_poly@res 0054                           ___ftdiv@f1 0023  
                         ___ftdiv@f2 0020                           ___ftdiv@f3 002B  
                         ___awtoft@c 0078                           ___ftmul@f1 0030  
                         ___ftmul@f2 0033               __end_of_PWM_Initialize 1348  
               __size_of_readIAnalog 014C                           ___ftsub@f1 0050  
                         ___ftsub@f2 004D                           ___fttol@f1 0030  
                     __pcstackCOMMON 0070                       _battery_state0 00CB  
                     _battery_state1 00C5                         __pidataBANK1 092F  
                       __pidataBANK2 1205                  ??_SYSTEM_Initialize 007B  
                      __end_of_frexp 14FB                        __end_of_fonts 092F  
                          LCDWrite@d 0073                            LCDWrite@i 0074  
                 _PWM1_LoadDutyValue 1258                     ?_TMR2_Initialize 0070  
                         _cc_cv_mode 0D15          __size_of_PWM7_LoadDutyValue 0016  
                     main@efficiency 01B6                  ?_PWM1_LoadDutyValue 0070  
                  LCDWriteInt@F14388 0140                    _calculateCurrent0 14FB  
                  _calculateCurrent1 1540                              ??_frexp 0074  
          __end_of_SYSTEM_Initialize 1413                           __pbssBANK0 006C  
                         __pbssBANK1 00A0                           __pbssBANK2 0120  
                 ?_calculateCurrent0 0070                   ?_calculateCurrent1 0070  
                 __size_of_eval_poly 0060                           ??_LCDClear 0078  
                     main@faultCount 01A7                           ??_LCDWrite 0071  
                    ?_LCDWriteString 0028                 ??_PWM1_LoadDutyValue 0072  
                ??_calculateCurrent0 003E                  ??_calculateCurrent1 003E  
                    ?_PWM_Initialize 0070                           __pmaintext 015E  
                            ?___ftge 0070                              ?___wmul 0079  
                    __CFG_PPS1WAY$ON 0000           __end_of_PWM6_LoadDutyValue 1284  
                            ?_gotoXY 0075                              _ADCRead 1243  
                   ?_TMR4_Initialize 0070                            ?___awtoft 0078  
                          ?___ftpack 0070                              _ADSTPTH 0113  
                            _ADSTPTL 0112             __CFG_SCANE$not_available 0000  
                __CFG_RSTOSC$HFINT32 0000              __size_of_ADC_Initialize 001F  
            ??_Battery_State_Machine 002A                              _LCDInit 144A  
          __end_of_calculateCurrent0 1540            __end_of_calculateCurrent1 1585  
                            _OSCCON1 088D                              _OSCCON3 088F  
                            _OSCTUNE 0892                              _PWM6DCH 038D  
                            _PWM6DCL 038C                              _PWM7DCH 0391  
                            _PWM7DCL 0390                              _PWM6CON 038E  
                            _PWM7CON 0392                              _PPSLOCK 0E8F  
                     main@menuButton 01B9                       main@dutyCycle1 01BA  
                     main@dutyCycle6 01BF                       main@dutyCycle7 01C1  
                         _lastButton 006C                            ?_tempCalc 005D  
                            ___aldiv 0931                      __size_of___ftge 003B  
                            ___awdiv 1585                              ___ftadd 0DED  
                         _readButton 1779                              ___ftdiv 0A4F  
                    __size_of___wmul 001E                              ___ftmul 0BA8  
                            ___ftsub 12EC                              ___fttol 16F2  
                 main@displayRefresh 01B3                              ___lwmod 13B3  
                    __size_of_gotoXY 0013                           ??___awtoft 007B  
                         ??___ftpack 0075                    __end_of_eval_poly 168E  
                            __ptext1 0EE3                              __ptext2 0AF8  
                            __ptext3 14C0                              __ptext4 162E  
                            __ptext5 0BA8                              __ptext6 1485  
                            __ptext7 12EC                              __ptext8 0DED  
                            __ptext9 0012                          ?_cc_cv_mode 0070  
              _OSCILLATOR_Initialize 120D                            _T2CONbits 028E  
                            _current 00A0                         __size_of_log 00B0  
                     ADCRead@channel 0073                     ___aldiv@dividend 0074  
                          _T4CONbits 0294             ??_PIN_MANAGER_Initialize 0070  
                            _samples 2198           __size_of_SYSTEM_Initialize 0034  
                            clrloop0 1217                              _voltage 00A8  
       ??_Init_Battery_State_Machine 0070                 end_of_initialization 07FD  
              LCDWriteCharacter@base 0026                              gotoXY@x 0077  
                            gotoXY@y 0075                           ??_tempCalc 007E  
                   ___aldiv@quotient 0022                    _LCDWriteCharacter 15D6  
              __CFG_WDTCPS$WDTCPS_31 0000                   ?_LCDWriteCharacter 0070  
         __size_of_calculateCurrent0 0045           __size_of_calculateCurrent1 0045  
                          _TRISAbits 0011                  ??_LCDWriteCharacter 0022  
                   __CFG_FEXTOSC$OFF 0000         PWM1_LoadDutyValue@dutyCycle1 0070  
                        _CCP1CONbits 030E                          ___ftdiv@exp 002E  
                __size_of_cc_cv_mode 00D8                    __size_of_LCDClear 0026  
         LCDWriteCharacter@character 0025                    __size_of_LCDWrite 0025  
                        ___ftmul@exp 003A            __end_of_LCDWriteCharacter 162E  
                        ?_readButton 0070            readIAnalog@analog_channel 003A  
                     __end_of___ftge 14C0                       __end_of___wmul 12EC  
                     _ADC_Initialize 130A                       __end_of_gotoXY 1243  
             ?_OSCILLATOR_Initialize 0070                  start_initialization 07BB  
                         eval_poly@d 0050                           eval_poly@n 0052  
                         eval_poly@x 004D                    main@faultNotReset 01A9  
    __size_of_PIN_MANAGER_Initialize 0037                          __end_of_log 0BA8  
                      ??_LCDWriteInt 0043                     ??_LCDWriteString 007D  
                         frexp@value 0070                     ??_PWM_Initialize 0070  
                      ??_readIAnalog 0028                      main@batteryTemp 01A3  
                   __CFG_LPBOREN$OFF 0000                             ??___ftge 0076  
                  tempCalc@steinhart 0065                             ??___wmul 007D  
             __end_of_ADC_Initialize 1329                        _tempCalc$1310 0062  
                        __pdataBANK1 00CC                          __pdataBANK2 0145  
         __end_of_PWM7_LoadDutyValue 129A                             ??_gotoXY 0076  
                           ?_ADCRead 0070         PWM7_LoadDutyValue@dutyCycle7 0070  
                  __size_of___awtoft 0020                             ?_LCDInit 0070  
                  __size_of___ftpack 0064                          __pbssBIGRAM 2198  
     __size_of_Battery_State_Machine 009C        __end_of_Battery_State_Machine 0A4F  
                          ___latbits 0002                        __pcstackBANK0 0020  
                      __pcstackBANK3 01A0                   _PWM6_LoadDutyValue 126E  
           __size_of_TMR2_Initialize 000E   __end_of_Init_Battery_State_Machine 12CE  
         _Init_Battery_State_Machine 12B1                  __size_of_readButton 0087  
                ?_PWM6_LoadDutyValue 0070                  __end_of_LCDWriteInt 0D15  
                          __pnvBANK1 00C7                            __pnvBANK2 014D  
        __size_of_PWM1_LoadDutyValue 0016                            _main$1313 01A0  
                          _main$1306 01AB                            _main$1308 01AE  
                          _main$1309 01B0               _PIN_MANAGER_Initialize 1413  
         __size_of_LCDWriteCharacter 0058                             ?___aldiv 0070  
                __end_of_readIAnalog 015E                    __size_of_tempCalc 011D  
                           ?___awdiv 0070                             ?___ftadd 0040  
                           ?___ftdiv 0020                             ?___ftmul 0030  
                           ?___ftsub 004D                             ?___fttol 0030  
                   LCDWriteInt@value 003E                             ?___lwmod 0070  
                    ?_ADC_Initialize 0070                 ??_PWM6_LoadDutyValue 0072  
                       ??_cc_cv_mode 0070                            _eval_poly 162E  
           __size_of_TMR4_Initialize 000E                       __size_of_frexp 003B  
                           _T2CLKCON 0290                             _T4CLKCON 0296  
                           _LCDClear 138D                      ___aldiv@divisor 0070  
                    ___aldiv@counter 0020                       ___wmul@product 0020  
                           _LATAbits 0016                             _LCDWrite 1368  
                          clear_ram0 1216                             _PIE0bits 0716  
                 __end_of_cc_cv_mode 0DED                             _PIR4bits 0710  
                   readIAnalog@value 003C                            main@MPPT0 01BD  
                          main@MPPT1 01A5                     __size_of_ADCRead 0015  
                         _ADCON0bits 0093                    ___wmul@multiplier 0079  
                         ?_eval_poly 004D                     __size_of_LCDInit 003B  
                           _Ianalogs 0130                          _LCDWriteInt 0C5C  
                  ??_TMR2_Initialize 0070                          _readIAnalog 0012  
                          frexp@eptr 0073                             _Vanalogs 0138  
                       ??_readButton 0074              ??_OSCILLATOR_Initialize 0070  
               LCDWriteInt@numPlaces 0041                     __size_of___aldiv 0082  
                   __size_of___awdiv 0051                     __size_of___ftadd 00F6  
                   __size_of___ftdiv 00A9                     __size_of___ftmul 00B4  
                   __size_of___ftsub 001E                     __size_of___fttol 0087  
                   __size_of___lwmod 002C                          _readButtons 00B2  
                           ___awtoft 1348                             ___ftpack 168E  
                           _channels 0145                             __ptext10 0931  
                           __ptext11 1779                             __ptext20 13DF  
                           __ptext12 1243                             __ptext21 0004  
                           __ptext13 0D15                             __ptext30 1284  
                           __ptext22 1222                             __ptext14 1540  
                           __ptext31 126E                             __ptext23 1329  
                           __ptext15 14FB                             __ptext40 12CE  
                           __ptext32 1258                             __ptext24 1413  
                           __ptext16 16F2                             __ptext41 1368  
                           __ptext33 0C5C                             __ptext25 120D  
                           __ptext17 0A4F                             __ptext34 13B3  
                           __ptext26 144A                             __ptext18 1348  
                           __ptext35 1585                             __ptext27 138D  
                           __ptext19 168E                             __ptext36 09B3  
                           __ptext28 12B1                             __ptext37 1230  
                           __ptext29 130A                             __ptext38 129A  
                           __ptext39 15D6                      LCDWriteInt@sign 0042  
                          tempCalc@R 005F                   __end_of_readButton 1800  
                  ??_TMR4_Initialize 0070                        __size_of_main 065D  
               __CFG_WDTCWS$WDTCWS_7 0000                             _tempCalc 0EE3  
        PIN_MANAGER_Initialize@state 0070                             log@coeff 1800  
                        ??_eval_poly 007E                          _sampleIndex 00BC  
                 _PWM7_LoadDutyValue 1284          ?_Init_Battery_State_Machine 0070  
                         _V0HoldMode 00C6                     ___lwmod@dividend 0072  
                     LCDWriteInt@str 0047              ?_PIN_MANAGER_Initialize 0070  
                ?_PWM7_LoadDutyValue 0070                           _V1HoldMode 006E  
                  __CFG_CLKOUTEN$OFF 0000                          _PPSLOCKbits 0E8F  
                   ??_ADC_Initialize 0070         PWM6_LoadDutyValue@dutyCycle6 0070  
                      __pstringtext1 0800                        __pstringtext2 1800  
                      __pstringtext3 181B                        __pstringtext4 0000  
               ??_PWM7_LoadDutyValue 0072                      ___lwmod@divisor 0070  
                    ___lwmod@counter 0075             LCDWriteString@characters 0028  
                       ___aldiv@sign 0021                   readIAnalog@channel 0026  
              _Battery_State_Machine 09B3       __end_of_PIN_MANAGER_Initialize 144A  
         __end_of_PWM1_LoadDutyValue 126E                        main@IOutTotal 01B4  
            __size_of_LCDWriteString 0017  
