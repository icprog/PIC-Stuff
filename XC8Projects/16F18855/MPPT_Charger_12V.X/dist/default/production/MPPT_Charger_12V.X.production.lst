

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Thu Jul 05 21:34:29 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	idataBANK2,global,class=CODE,delta=2
     7                           	psect	stringtext1,global,class=STRCODE,delta=2
     8                           	psect	stringtext2,global,class=STRCODE,delta=2
     9                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1
    11                           	psect	stringtext3,global,class=STRCODE,delta=2
    12                           	psect	stringtext4,global,class=STRCODE,delta=2
    13                           	psect	cinit,global,class=CODE,merge=1,delta=2
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    18                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    19                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    20                           	psect	clrtext,global,class=CODE,delta=2
    21                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    22                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    23                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    24                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    25                           	psect	text1,local,class=CODE,merge=1,delta=2
    26                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text9,local,class=CODE,merge=1,delta=2
    34                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text11,local,class=CODE,merge=1,delta=2
    36                           	psect	text12,local,class=CODE,merge=1,delta=2
    37                           	psect	text13,local,class=CODE,merge=1,delta=2
    38                           	psect	text14,local,class=CODE,merge=1,delta=2
    39                           	psect	text15,local,class=CODE,merge=1,delta=2
    40                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    43                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    44                           	psect	text20,local,class=CODE,merge=1,delta=2
    45                           	psect	text21,local,class=CODE,merge=1,delta=2
    46                           	psect	text22,local,class=CODE,merge=1,delta=2
    47                           	psect	text23,local,class=CODE,merge=1,delta=2
    48                           	psect	text24,local,class=CODE,merge=1,delta=2
    49                           	psect	text25,local,class=CODE,merge=1,delta=2
    50                           	psect	text26,local,class=CODE,merge=1,delta=2
    51                           	psect	text27,local,class=CODE,merge=1,delta=2
    52                           	psect	text28,local,class=CODE,merge=1,delta=2
    53                           	psect	text29,local,class=CODE,merge=1,delta=2
    54                           	psect	text30,local,class=CODE,merge=1,delta=2
    55                           	psect	text31,local,class=CODE,merge=1,delta=2
    56                           	psect	text32,local,class=CODE,merge=1,delta=2
    57                           	psect	text33,local,class=CODE,merge=1,delta=2
    58                           	psect	text34,local,class=CODE,merge=1,delta=2,group=2
    59                           	psect	text35,local,class=CODE,merge=1,delta=2,group=2
    60                           	psect	text36,local,class=CODE,merge=1,delta=2
    61                           	psect	text37,local,class=CODE,merge=1,delta=2
    62                           	psect	text38,local,class=CODE,merge=1,delta=2
    63                           	psect	text39,local,class=CODE,merge=1,delta=2
    64                           	psect	text40,local,class=CODE,merge=1,delta=2,group=2
    65                           	psect	text41,local,class=CODE,merge=1,delta=2
    66                           	dabs	1,0x620,48
    67                           	dabs	1,0x5A0,80
    68                           	dabs	1,0x520,80
    69                           	dabs	1,0x4A0,80
    70                           	dabs	1,0x420,80
    71                           	dabs	1,0x3A0,80
    72                           	dabs	1,0x320,80
    73                           	dabs	1,0x2A8,72
    74                           	dabs	1,0x2198,0,_samples
    75                           	dabs	1,0x7E,2
    76  0000                     
    77                           ; Version 1.45
    78                           ; Generated 16/11/2017 GMT
    79                           ; 
    80                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    81                           ; All rights reserved.
    82                           ; 
    83                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    84                           ; 
    85                           ; Redistribution and use in source and binary forms, with or without modification, are
    86                           ; permitted provided that the following conditions are met:
    87                           ; 
    88                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    89                           ;        conditions and the following disclaimer.
    90                           ; 
    91                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    92                           ;        of conditions and the following disclaimer in the documentation and/or other
    93                           ;        materials provided with the distribution.
    94                           ; 
    95                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    96                           ;        software without specific prior written permission.
    97                           ; 
    98                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    99                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   100                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   101                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   102                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   103                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   104                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   105                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   106                           ; 
   107                           ; 
   108                           ; Code-generator required, PIC16F18855 Definitions
   109                           ; 
   110                           ; SFR Addresses
   111  0000                     	;# 
   112  0001                     	;# 
   113  0002                     	;# 
   114  0003                     	;# 
   115  0004                     	;# 
   116  0005                     	;# 
   117  0006                     	;# 
   118  0007                     	;# 
   119  0008                     	;# 
   120  0009                     	;# 
   121  000A                     	;# 
   122  000B                     	;# 
   123  000C                     	;# 
   124  000D                     	;# 
   125  000E                     	;# 
   126  0010                     	;# 
   127  0011                     	;# 
   128  0012                     	;# 
   129  0013                     	;# 
   130  0016                     	;# 
   131  0017                     	;# 
   132  0018                     	;# 
   133  001C                     	;# 
   134  001C                     	;# 
   135  001D                     	;# 
   136  001D                     	;# 
   137  001E                     	;# 
   138  001F                     	;# 
   139  008C                     	;# 
   140  008C                     	;# 
   141  008D                     	;# 
   142  008E                     	;# 
   143  008E                     	;# 
   144  008F                     	;# 
   145  0090                     	;# 
   146  0090                     	;# 
   147  0091                     	;# 
   148  0093                     	;# 
   149  0094                     	;# 
   150  0095                     	;# 
   151  0096                     	;# 
   152  0097                     	;# 
   153  0098                     	;# 
   154  0099                     	;# 
   155  009A                     	;# 
   156  009B                     	;# 
   157  009C                     	;# 
   158  009D                     	;# 
   159  009E                     	;# 
   160  010C                     	;# 
   161  010D                     	;# 
   162  010E                     	;# 
   163  010E                     	;# 
   164  010F                     	;# 
   165  0110                     	;# 
   166  0110                     	;# 
   167  0111                     	;# 
   168  0112                     	;# 
   169  0112                     	;# 
   170  0113                     	;# 
   171  0114                     	;# 
   172  0114                     	;# 
   173  0115                     	;# 
   174  0116                     	;# 
   175  0116                     	;# 
   176  0117                     	;# 
   177  0119                     	;# 
   178  0119                     	;# 
   179  0119                     	;# 
   180  011A                     	;# 
   181  011A                     	;# 
   182  011A                     	;# 
   183  011B                     	;# 
   184  011B                     	;# 
   185  011B                     	;# 
   186  011B                     	;# 
   187  011B                     	;# 
   188  011C                     	;# 
   189  011C                     	;# 
   190  011C                     	;# 
   191  011D                     	;# 
   192  011D                     	;# 
   193  011D                     	;# 
   194  011E                     	;# 
   195  011E                     	;# 
   196  011E                     	;# 
   197  011F                     	;# 
   198  011F                     	;# 
   199  011F                     	;# 
   200  011F                     	;# 
   201  011F                     	;# 
   202  018C                     	;# 
   203  018D                     	;# 
   204  018E                     	;# 
   205  018F                     	;# 
   206  0190                     	;# 
   207  0191                     	;# 
   208  0192                     	;# 
   209  0196                     	;# 
   210  0197                     	;# 
   211  0198                     	;# 
   212  0199                     	;# 
   213  019A                     	;# 
   214  019B                     	;# 
   215  019C                     	;# 
   216  020C                     	;# 
   217  020C                     	;# 
   218  020D                     	;# 
   219  020E                     	;# 
   220  020F                     	;# 
   221  020F                     	;# 
   222  0210                     	;# 
   223  0210                     	;# 
   224  0211                     	;# 
   225  0211                     	;# 
   226  0212                     	;# 
   227  0212                     	;# 
   228  0213                     	;# 
   229  0214                     	;# 
   230  0215                     	;# 
   231  0215                     	;# 
   232  0216                     	;# 
   233  0216                     	;# 
   234  0217                     	;# 
   235  0217                     	;# 
   236  0218                     	;# 
   237  0218                     	;# 
   238  0219                     	;# 
   239  021A                     	;# 
   240  021B                     	;# 
   241  021B                     	;# 
   242  021C                     	;# 
   243  021C                     	;# 
   244  021D                     	;# 
   245  021D                     	;# 
   246  021E                     	;# 
   247  021F                     	;# 
   248  028C                     	;# 
   249  028C                     	;# 
   250  028D                     	;# 
   251  028D                     	;# 
   252  028E                     	;# 
   253  028F                     	;# 
   254  0290                     	;# 
   255  0290                     	;# 
   256  0291                     	;# 
   257  0292                     	;# 
   258  0292                     	;# 
   259  0293                     	;# 
   260  0293                     	;# 
   261  0294                     	;# 
   262  0295                     	;# 
   263  0296                     	;# 
   264  0296                     	;# 
   265  0297                     	;# 
   266  0298                     	;# 
   267  0298                     	;# 
   268  0299                     	;# 
   269  0299                     	;# 
   270  029A                     	;# 
   271  029B                     	;# 
   272  029C                     	;# 
   273  029C                     	;# 
   274  029D                     	;# 
   275  030C                     	;# 
   276  030C                     	;# 
   277  030D                     	;# 
   278  030E                     	;# 
   279  030F                     	;# 
   280  0310                     	;# 
   281  0310                     	;# 
   282  0311                     	;# 
   283  0312                     	;# 
   284  0313                     	;# 
   285  0314                     	;# 
   286  0314                     	;# 
   287  0315                     	;# 
   288  0316                     	;# 
   289  0317                     	;# 
   290  0318                     	;# 
   291  0318                     	;# 
   292  0319                     	;# 
   293  031A                     	;# 
   294  031B                     	;# 
   295  031C                     	;# 
   296  031C                     	;# 
   297  031D                     	;# 
   298  031E                     	;# 
   299  031F                     	;# 
   300  038C                     	;# 
   301  038D                     	;# 
   302  038E                     	;# 
   303  0390                     	;# 
   304  0391                     	;# 
   305  0392                     	;# 
   306  040C                     	;# 
   307  040D                     	;# 
   308  040E                     	;# 
   309  040F                     	;# 
   310  0410                     	;# 
   311  0411                     	;# 
   312  0416                     	;# 
   313  0416                     	;# 
   314  0417                     	;# 
   315  0418                     	;# 
   316  0418                     	;# 
   317  0419                     	;# 
   318  041A                     	;# 
   319  041A                     	;# 
   320  041B                     	;# 
   321  041C                     	;# 
   322  041C                     	;# 
   323  041D                     	;# 
   324  041E                     	;# 
   325  041F                     	;# 
   326  048C                     	;# 
   327  048C                     	;# 
   328  048D                     	;# 
   329  048E                     	;# 
   330  048F                     	;# 
   331  048F                     	;# 
   332  0490                     	;# 
   333  0491                     	;# 
   334  0492                     	;# 
   335  0492                     	;# 
   336  0493                     	;# 
   337  0494                     	;# 
   338  0495                     	;# 
   339  0495                     	;# 
   340  0496                     	;# 
   341  0497                     	;# 
   342  0498                     	;# 
   343  0499                     	;# 
   344  049A                     	;# 
   345  049B                     	;# 
   346  049C                     	;# 
   347  049D                     	;# 
   348  050C                     	;# 
   349  050C                     	;# 
   350  050D                     	;# 
   351  050E                     	;# 
   352  050F                     	;# 
   353  050F                     	;# 
   354  0510                     	;# 
   355  0511                     	;# 
   356  0512                     	;# 
   357  0512                     	;# 
   358  0513                     	;# 
   359  0514                     	;# 
   360  0515                     	;# 
   361  0515                     	;# 
   362  0516                     	;# 
   363  0517                     	;# 
   364  0518                     	;# 
   365  0519                     	;# 
   366  051A                     	;# 
   367  051B                     	;# 
   368  051C                     	;# 
   369  051D                     	;# 
   370  058C                     	;# 
   371  058C                     	;# 
   372  058D                     	;# 
   373  058E                     	;# 
   374  058F                     	;# 
   375  058F                     	;# 
   376  0590                     	;# 
   377  0591                     	;# 
   378  0592                     	;# 
   379  0593                     	;# 
   380  060C                     	;# 
   381  060D                     	;# 
   382  060E                     	;# 
   383  060F                     	;# 
   384  0610                     	;# 
   385  0611                     	;# 
   386  0612                     	;# 
   387  0613                     	;# 
   388  0614                     	;# 
   389  0616                     	;# 
   390  0617                     	;# 
   391  0618                     	;# 
   392  0619                     	;# 
   393  061A                     	;# 
   394  061B                     	;# 
   395  061C                     	;# 
   396  061D                     	;# 
   397  061E                     	;# 
   398  068C                     	;# 
   399  068D                     	;# 
   400  068E                     	;# 
   401  068F                     	;# 
   402  0690                     	;# 
   403  0691                     	;# 
   404  0692                     	;# 
   405  0693                     	;# 
   406  0694                     	;# 
   407  070C                     	;# 
   408  070D                     	;# 
   409  070E                     	;# 
   410  070F                     	;# 
   411  0710                     	;# 
   412  0711                     	;# 
   413  0712                     	;# 
   414  0713                     	;# 
   415  0714                     	;# 
   416  0716                     	;# 
   417  0717                     	;# 
   418  0718                     	;# 
   419  0719                     	;# 
   420  071A                     	;# 
   421  071B                     	;# 
   422  071C                     	;# 
   423  071D                     	;# 
   424  071E                     	;# 
   425  0796                     	;# 
   426  0797                     	;# 
   427  0798                     	;# 
   428  0799                     	;# 
   429  079A                     	;# 
   430  079B                     	;# 
   431  080C                     	;# 
   432  080D                     	;# 
   433  080E                     	;# 
   434  080F                     	;# 
   435  0810                     	;# 
   436  0811                     	;# 
   437  0812                     	;# 
   438  0813                     	;# 
   439  0814                     	;# 
   440  081A                     	;# 
   441  081B                     	;# 
   442  081C                     	;# 
   443  081D                     	;# 
   444  081E                     	;# 
   445  081F                     	;# 
   446  088C                     	;# 
   447  088D                     	;# 
   448  088E                     	;# 
   449  088F                     	;# 
   450  0890                     	;# 
   451  0891                     	;# 
   452  0892                     	;# 
   453  0893                     	;# 
   454  0895                     	;# 
   455  0896                     	;# 
   456  0897                     	;# 
   457  0898                     	;# 
   458  0899                     	;# 
   459  089A                     	;# 
   460  089B                     	;# 
   461  090C                     	;# 
   462  090E                     	;# 
   463  090F                     	;# 
   464  091F                     	;# 
   465  091F                     	;# 
   466  098F                     	;# 
   467  098F                     	;# 
   468  0990                     	;# 
   469  0991                     	;# 
   470  0992                     	;# 
   471  0993                     	;# 
   472  0994                     	;# 
   473  0995                     	;# 
   474  0996                     	;# 
   475  0997                     	;# 
   476  0E0F                     	;# 
   477  0E10                     	;# 
   478  0E11                     	;# 
   479  0E12                     	;# 
   480  0E13                     	;# 
   481  0E14                     	;# 
   482  0E15                     	;# 
   483  0E16                     	;# 
   484  0E17                     	;# 
   485  0E18                     	;# 
   486  0E19                     	;# 
   487  0E1A                     	;# 
   488  0E1B                     	;# 
   489  0E1C                     	;# 
   490  0E1D                     	;# 
   491  0E1E                     	;# 
   492  0E1F                     	;# 
   493  0E20                     	;# 
   494  0E21                     	;# 
   495  0E22                     	;# 
   496  0E23                     	;# 
   497  0E24                     	;# 
   498  0E25                     	;# 
   499  0E26                     	;# 
   500  0E27                     	;# 
   501  0E28                     	;# 
   502  0E29                     	;# 
   503  0E2A                     	;# 
   504  0E2B                     	;# 
   505  0E2C                     	;# 
   506  0E2D                     	;# 
   507  0E2E                     	;# 
   508  0E2F                     	;# 
   509  0E30                     	;# 
   510  0E31                     	;# 
   511  0E32                     	;# 
   512  0E33                     	;# 
   513  0E34                     	;# 
   514  0E35                     	;# 
   515  0E36                     	;# 
   516  0E37                     	;# 
   517  0E8F                     	;# 
   518  0E90                     	;# 
   519  0E91                     	;# 
   520  0E92                     	;# 
   521  0E93                     	;# 
   522  0E94                     	;# 
   523  0E95                     	;# 
   524  0E96                     	;# 
   525  0E97                     	;# 
   526  0E9C                     	;# 
   527  0E9D                     	;# 
   528  0E9E                     	;# 
   529  0EA1                     	;# 
   530  0EA2                     	;# 
   531  0EA3                     	;# 
   532  0EA4                     	;# 
   533  0EA5                     	;# 
   534  0EA9                     	;# 
   535  0EAA                     	;# 
   536  0EAB                     	;# 
   537  0EAC                     	;# 
   538  0EB1                     	;# 
   539  0EB2                     	;# 
   540  0EB3                     	;# 
   541  0EB8                     	;# 
   542  0EB9                     	;# 
   543  0EBA                     	;# 
   544  0EBB                     	;# 
   545  0EBC                     	;# 
   546  0EBD                     	;# 
   547  0EBE                     	;# 
   548  0EC3                     	;# 
   549  0EC5                     	;# 
   550  0EC6                     	;# 
   551  0EC7                     	;# 
   552  0EC8                     	;# 
   553  0EC9                     	;# 
   554  0ECA                     	;# 
   555  0ECB                     	;# 
   556  0ECC                     	;# 
   557  0F10                     	;# 
   558  0F11                     	;# 
   559  0F12                     	;# 
   560  0F13                     	;# 
   561  0F14                     	;# 
   562  0F15                     	;# 
   563  0F16                     	;# 
   564  0F17                     	;# 
   565  0F18                     	;# 
   566  0F19                     	;# 
   567  0F1A                     	;# 
   568  0F1B                     	;# 
   569  0F1C                     	;# 
   570  0F1D                     	;# 
   571  0F1E                     	;# 
   572  0F1F                     	;# 
   573  0F20                     	;# 
   574  0F21                     	;# 
   575  0F22                     	;# 
   576  0F23                     	;# 
   577  0F24                     	;# 
   578  0F25                     	;# 
   579  0F26                     	;# 
   580  0F27                     	;# 
   581  0F38                     	;# 
   582  0F39                     	;# 
   583  0F3A                     	;# 
   584  0F3B                     	;# 
   585  0F3C                     	;# 
   586  0F3D                     	;# 
   587  0F3E                     	;# 
   588  0F3F                     	;# 
   589  0F40                     	;# 
   590  0F41                     	;# 
   591  0F43                     	;# 
   592  0F44                     	;# 
   593  0F45                     	;# 
   594  0F46                     	;# 
   595  0F47                     	;# 
   596  0F48                     	;# 
   597  0F49                     	;# 
   598  0F4A                     	;# 
   599  0F4B                     	;# 
   600  0F4C                     	;# 
   601  0F4E                     	;# 
   602  0F4F                     	;# 
   603  0F50                     	;# 
   604  0F51                     	;# 
   605  0F52                     	;# 
   606  0F53                     	;# 
   607  0F54                     	;# 
   608  0F55                     	;# 
   609  0F56                     	;# 
   610  0F57                     	;# 
   611  0F65                     	;# 
   612  0F68                     	;# 
   613  0F69                     	;# 
   614  0F6A                     	;# 
   615  0F6B                     	;# 
   616  0FE4                     	;# 
   617  0FE5                     	;# 
   618  0FE6                     	;# 
   619  0FE7                     	;# 
   620  0FE8                     	;# 
   621  0FE9                     	;# 
   622  0FEA                     	;# 
   623  0FEB                     	;# 
   624  0FED                     	;# 
   625  0FEE                     	;# 
   626  0FEF                     	;# 
   627  0000                     	;# 
   628  0001                     	;# 
   629  0002                     	;# 
   630  0003                     	;# 
   631  0004                     	;# 
   632  0005                     	;# 
   633  0006                     	;# 
   634  0007                     	;# 
   635  0008                     	;# 
   636  0009                     	;# 
   637  000A                     	;# 
   638  000B                     	;# 
   639  000C                     	;# 
   640  000D                     	;# 
   641  000E                     	;# 
   642  0010                     	;# 
   643  0011                     	;# 
   644  0012                     	;# 
   645  0013                     	;# 
   646  0016                     	;# 
   647  0017                     	;# 
   648  0018                     	;# 
   649  001C                     	;# 
   650  001C                     	;# 
   651  001D                     	;# 
   652  001D                     	;# 
   653  001E                     	;# 
   654  001F                     	;# 
   655  008C                     	;# 
   656  008C                     	;# 
   657  008D                     	;# 
   658  008E                     	;# 
   659  008E                     	;# 
   660  008F                     	;# 
   661  0090                     	;# 
   662  0090                     	;# 
   663  0091                     	;# 
   664  0093                     	;# 
   665  0094                     	;# 
   666  0095                     	;# 
   667  0096                     	;# 
   668  0097                     	;# 
   669  0098                     	;# 
   670  0099                     	;# 
   671  009A                     	;# 
   672  009B                     	;# 
   673  009C                     	;# 
   674  009D                     	;# 
   675  009E                     	;# 
   676  010C                     	;# 
   677  010D                     	;# 
   678  010E                     	;# 
   679  010E                     	;# 
   680  010F                     	;# 
   681  0110                     	;# 
   682  0110                     	;# 
   683  0111                     	;# 
   684  0112                     	;# 
   685  0112                     	;# 
   686  0113                     	;# 
   687  0114                     	;# 
   688  0114                     	;# 
   689  0115                     	;# 
   690  0116                     	;# 
   691  0116                     	;# 
   692  0117                     	;# 
   693  0119                     	;# 
   694  0119                     	;# 
   695  0119                     	;# 
   696  011A                     	;# 
   697  011A                     	;# 
   698  011A                     	;# 
   699  011B                     	;# 
   700  011B                     	;# 
   701  011B                     	;# 
   702  011B                     	;# 
   703  011B                     	;# 
   704  011C                     	;# 
   705  011C                     	;# 
   706  011C                     	;# 
   707  011D                     	;# 
   708  011D                     	;# 
   709  011D                     	;# 
   710  011E                     	;# 
   711  011E                     	;# 
   712  011E                     	;# 
   713  011F                     	;# 
   714  011F                     	;# 
   715  011F                     	;# 
   716  011F                     	;# 
   717  011F                     	;# 
   718  018C                     	;# 
   719  018D                     	;# 
   720  018E                     	;# 
   721  018F                     	;# 
   722  0190                     	;# 
   723  0191                     	;# 
   724  0192                     	;# 
   725  0196                     	;# 
   726  0197                     	;# 
   727  0198                     	;# 
   728  0199                     	;# 
   729  019A                     	;# 
   730  019B                     	;# 
   731  019C                     	;# 
   732  020C                     	;# 
   733  020C                     	;# 
   734  020D                     	;# 
   735  020E                     	;# 
   736  020F                     	;# 
   737  020F                     	;# 
   738  0210                     	;# 
   739  0210                     	;# 
   740  0211                     	;# 
   741  0211                     	;# 
   742  0212                     	;# 
   743  0212                     	;# 
   744  0213                     	;# 
   745  0214                     	;# 
   746  0215                     	;# 
   747  0215                     	;# 
   748  0216                     	;# 
   749  0216                     	;# 
   750  0217                     	;# 
   751  0217                     	;# 
   752  0218                     	;# 
   753  0218                     	;# 
   754  0219                     	;# 
   755  021A                     	;# 
   756  021B                     	;# 
   757  021B                     	;# 
   758  021C                     	;# 
   759  021C                     	;# 
   760  021D                     	;# 
   761  021D                     	;# 
   762  021E                     	;# 
   763  021F                     	;# 
   764  028C                     	;# 
   765  028C                     	;# 
   766  028D                     	;# 
   767  028D                     	;# 
   768  028E                     	;# 
   769  028F                     	;# 
   770  0290                     	;# 
   771  0290                     	;# 
   772  0291                     	;# 
   773  0292                     	;# 
   774  0292                     	;# 
   775  0293                     	;# 
   776  0293                     	;# 
   777  0294                     	;# 
   778  0295                     	;# 
   779  0296                     	;# 
   780  0296                     	;# 
   781  0297                     	;# 
   782  0298                     	;# 
   783  0298                     	;# 
   784  0299                     	;# 
   785  0299                     	;# 
   786  029A                     	;# 
   787  029B                     	;# 
   788  029C                     	;# 
   789  029C                     	;# 
   790  029D                     	;# 
   791  030C                     	;# 
   792  030C                     	;# 
   793  030D                     	;# 
   794  030E                     	;# 
   795  030F                     	;# 
   796  0310                     	;# 
   797  0310                     	;# 
   798  0311                     	;# 
   799  0312                     	;# 
   800  0313                     	;# 
   801  0314                     	;# 
   802  0314                     	;# 
   803  0315                     	;# 
   804  0316                     	;# 
   805  0317                     	;# 
   806  0318                     	;# 
   807  0318                     	;# 
   808  0319                     	;# 
   809  031A                     	;# 
   810  031B                     	;# 
   811  031C                     	;# 
   812  031C                     	;# 
   813  031D                     	;# 
   814  031E                     	;# 
   815  031F                     	;# 
   816  038C                     	;# 
   817  038D                     	;# 
   818  038E                     	;# 
   819  0390                     	;# 
   820  0391                     	;# 
   821  0392                     	;# 
   822  040C                     	;# 
   823  040D                     	;# 
   824  040E                     	;# 
   825  040F                     	;# 
   826  0410                     	;# 
   827  0411                     	;# 
   828  0416                     	;# 
   829  0416                     	;# 
   830  0417                     	;# 
   831  0418                     	;# 
   832  0418                     	;# 
   833  0419                     	;# 
   834  041A                     	;# 
   835  041A                     	;# 
   836  041B                     	;# 
   837  041C                     	;# 
   838  041C                     	;# 
   839  041D                     	;# 
   840  041E                     	;# 
   841  041F                     	;# 
   842  048C                     	;# 
   843  048C                     	;# 
   844  048D                     	;# 
   845  048E                     	;# 
   846  048F                     	;# 
   847  048F                     	;# 
   848  0490                     	;# 
   849  0491                     	;# 
   850  0492                     	;# 
   851  0492                     	;# 
   852  0493                     	;# 
   853  0494                     	;# 
   854  0495                     	;# 
   855  0495                     	;# 
   856  0496                     	;# 
   857  0497                     	;# 
   858  0498                     	;# 
   859  0499                     	;# 
   860  049A                     	;# 
   861  049B                     	;# 
   862  049C                     	;# 
   863  049D                     	;# 
   864  050C                     	;# 
   865  050C                     	;# 
   866  050D                     	;# 
   867  050E                     	;# 
   868  050F                     	;# 
   869  050F                     	;# 
   870  0510                     	;# 
   871  0511                     	;# 
   872  0512                     	;# 
   873  0512                     	;# 
   874  0513                     	;# 
   875  0514                     	;# 
   876  0515                     	;# 
   877  0515                     	;# 
   878  0516                     	;# 
   879  0517                     	;# 
   880  0518                     	;# 
   881  0519                     	;# 
   882  051A                     	;# 
   883  051B                     	;# 
   884  051C                     	;# 
   885  051D                     	;# 
   886  058C                     	;# 
   887  058C                     	;# 
   888  058D                     	;# 
   889  058E                     	;# 
   890  058F                     	;# 
   891  058F                     	;# 
   892  0590                     	;# 
   893  0591                     	;# 
   894  0592                     	;# 
   895  0593                     	;# 
   896  060C                     	;# 
   897  060D                     	;# 
   898  060E                     	;# 
   899  060F                     	;# 
   900  0610                     	;# 
   901  0611                     	;# 
   902  0612                     	;# 
   903  0613                     	;# 
   904  0614                     	;# 
   905  0616                     	;# 
   906  0617                     	;# 
   907  0618                     	;# 
   908  0619                     	;# 
   909  061A                     	;# 
   910  061B                     	;# 
   911  061C                     	;# 
   912  061D                     	;# 
   913  061E                     	;# 
   914  068C                     	;# 
   915  068D                     	;# 
   916  068E                     	;# 
   917  068F                     	;# 
   918  0690                     	;# 
   919  0691                     	;# 
   920  0692                     	;# 
   921  0693                     	;# 
   922  0694                     	;# 
   923  070C                     	;# 
   924  070D                     	;# 
   925  070E                     	;# 
   926  070F                     	;# 
   927  0710                     	;# 
   928  0711                     	;# 
   929  0712                     	;# 
   930  0713                     	;# 
   931  0714                     	;# 
   932  0716                     	;# 
   933  0717                     	;# 
   934  0718                     	;# 
   935  0719                     	;# 
   936  071A                     	;# 
   937  071B                     	;# 
   938  071C                     	;# 
   939  071D                     	;# 
   940  071E                     	;# 
   941  0796                     	;# 
   942  0797                     	;# 
   943  0798                     	;# 
   944  0799                     	;# 
   945  079A                     	;# 
   946  079B                     	;# 
   947  080C                     	;# 
   948  080D                     	;# 
   949  080E                     	;# 
   950  080F                     	;# 
   951  0810                     	;# 
   952  0811                     	;# 
   953  0812                     	;# 
   954  0813                     	;# 
   955  0814                     	;# 
   956  081A                     	;# 
   957  081B                     	;# 
   958  081C                     	;# 
   959  081D                     	;# 
   960  081E                     	;# 
   961  081F                     	;# 
   962  088C                     	;# 
   963  088D                     	;# 
   964  088E                     	;# 
   965  088F                     	;# 
   966  0890                     	;# 
   967  0891                     	;# 
   968  0892                     	;# 
   969  0893                     	;# 
   970  0895                     	;# 
   971  0896                     	;# 
   972  0897                     	;# 
   973  0898                     	;# 
   974  0899                     	;# 
   975  089A                     	;# 
   976  089B                     	;# 
   977  090C                     	;# 
   978  090E                     	;# 
   979  090F                     	;# 
   980  091F                     	;# 
   981  091F                     	;# 
   982  098F                     	;# 
   983  098F                     	;# 
   984  0990                     	;# 
   985  0991                     	;# 
   986  0992                     	;# 
   987  0993                     	;# 
   988  0994                     	;# 
   989  0995                     	;# 
   990  0996                     	;# 
   991  0997                     	;# 
   992  0E0F                     	;# 
   993  0E10                     	;# 
   994  0E11                     	;# 
   995  0E12                     	;# 
   996  0E13                     	;# 
   997  0E14                     	;# 
   998  0E15                     	;# 
   999  0E16                     	;# 
  1000  0E17                     	;# 
  1001  0E18                     	;# 
  1002  0E19                     	;# 
  1003  0E1A                     	;# 
  1004  0E1B                     	;# 
  1005  0E1C                     	;# 
  1006  0E1D                     	;# 
  1007  0E1E                     	;# 
  1008  0E1F                     	;# 
  1009  0E20                     	;# 
  1010  0E21                     	;# 
  1011  0E22                     	;# 
  1012  0E23                     	;# 
  1013  0E24                     	;# 
  1014  0E25                     	;# 
  1015  0E26                     	;# 
  1016  0E27                     	;# 
  1017  0E28                     	;# 
  1018  0E29                     	;# 
  1019  0E2A                     	;# 
  1020  0E2B                     	;# 
  1021  0E2C                     	;# 
  1022  0E2D                     	;# 
  1023  0E2E                     	;# 
  1024  0E2F                     	;# 
  1025  0E30                     	;# 
  1026  0E31                     	;# 
  1027  0E32                     	;# 
  1028  0E33                     	;# 
  1029  0E34                     	;# 
  1030  0E35                     	;# 
  1031  0E36                     	;# 
  1032  0E37                     	;# 
  1033  0E8F                     	;# 
  1034  0E90                     	;# 
  1035  0E91                     	;# 
  1036  0E92                     	;# 
  1037  0E93                     	;# 
  1038  0E94                     	;# 
  1039  0E95                     	;# 
  1040  0E96                     	;# 
  1041  0E97                     	;# 
  1042  0E9C                     	;# 
  1043  0E9D                     	;# 
  1044  0E9E                     	;# 
  1045  0EA1                     	;# 
  1046  0EA2                     	;# 
  1047  0EA3                     	;# 
  1048  0EA4                     	;# 
  1049  0EA5                     	;# 
  1050  0EA9                     	;# 
  1051  0EAA                     	;# 
  1052  0EAB                     	;# 
  1053  0EAC                     	;# 
  1054  0EB1                     	;# 
  1055  0EB2                     	;# 
  1056  0EB3                     	;# 
  1057  0EB8                     	;# 
  1058  0EB9                     	;# 
  1059  0EBA                     	;# 
  1060  0EBB                     	;# 
  1061  0EBC                     	;# 
  1062  0EBD                     	;# 
  1063  0EBE                     	;# 
  1064  0EC3                     	;# 
  1065  0EC5                     	;# 
  1066  0EC6                     	;# 
  1067  0EC7                     	;# 
  1068  0EC8                     	;# 
  1069  0EC9                     	;# 
  1070  0ECA                     	;# 
  1071  0ECB                     	;# 
  1072  0ECC                     	;# 
  1073  0F10                     	;# 
  1074  0F11                     	;# 
  1075  0F12                     	;# 
  1076  0F13                     	;# 
  1077  0F14                     	;# 
  1078  0F15                     	;# 
  1079  0F16                     	;# 
  1080  0F17                     	;# 
  1081  0F18                     	;# 
  1082  0F19                     	;# 
  1083  0F1A                     	;# 
  1084  0F1B                     	;# 
  1085  0F1C                     	;# 
  1086  0F1D                     	;# 
  1087  0F1E                     	;# 
  1088  0F1F                     	;# 
  1089  0F20                     	;# 
  1090  0F21                     	;# 
  1091  0F22                     	;# 
  1092  0F23                     	;# 
  1093  0F24                     	;# 
  1094  0F25                     	;# 
  1095  0F26                     	;# 
  1096  0F27                     	;# 
  1097  0F38                     	;# 
  1098  0F39                     	;# 
  1099  0F3A                     	;# 
  1100  0F3B                     	;# 
  1101  0F3C                     	;# 
  1102  0F3D                     	;# 
  1103  0F3E                     	;# 
  1104  0F3F                     	;# 
  1105  0F40                     	;# 
  1106  0F41                     	;# 
  1107  0F43                     	;# 
  1108  0F44                     	;# 
  1109  0F45                     	;# 
  1110  0F46                     	;# 
  1111  0F47                     	;# 
  1112  0F48                     	;# 
  1113  0F49                     	;# 
  1114  0F4A                     	;# 
  1115  0F4B                     	;# 
  1116  0F4C                     	;# 
  1117  0F4E                     	;# 
  1118  0F4F                     	;# 
  1119  0F50                     	;# 
  1120  0F51                     	;# 
  1121  0F52                     	;# 
  1122  0F53                     	;# 
  1123  0F54                     	;# 
  1124  0F55                     	;# 
  1125  0F56                     	;# 
  1126  0F57                     	;# 
  1127  0F65                     	;# 
  1128  0F68                     	;# 
  1129  0F69                     	;# 
  1130  0F6A                     	;# 
  1131  0F6B                     	;# 
  1132  0FE4                     	;# 
  1133  0FE5                     	;# 
  1134  0FE6                     	;# 
  1135  0FE7                     	;# 
  1136  0FE8                     	;# 
  1137  0FE9                     	;# 
  1138  0FEA                     	;# 
  1139  0FEB                     	;# 
  1140  0FED                     	;# 
  1141  0FEE                     	;# 
  1142  0FEF                     	;# 
  1143  0000                     	;# 
  1144  0001                     	;# 
  1145  0002                     	;# 
  1146  0003                     	;# 
  1147  0004                     	;# 
  1148  0005                     	;# 
  1149  0006                     	;# 
  1150  0007                     	;# 
  1151  0008                     	;# 
  1152  0009                     	;# 
  1153  000A                     	;# 
  1154  000B                     	;# 
  1155  000C                     	;# 
  1156  000D                     	;# 
  1157  000E                     	;# 
  1158  0010                     	;# 
  1159  0011                     	;# 
  1160  0012                     	;# 
  1161  0013                     	;# 
  1162  0016                     	;# 
  1163  0017                     	;# 
  1164  0018                     	;# 
  1165  001C                     	;# 
  1166  001C                     	;# 
  1167  001D                     	;# 
  1168  001D                     	;# 
  1169  001E                     	;# 
  1170  001F                     	;# 
  1171  008C                     	;# 
  1172  008C                     	;# 
  1173  008D                     	;# 
  1174  008E                     	;# 
  1175  008E                     	;# 
  1176  008F                     	;# 
  1177  0090                     	;# 
  1178  0090                     	;# 
  1179  0091                     	;# 
  1180  0093                     	;# 
  1181  0094                     	;# 
  1182  0095                     	;# 
  1183  0096                     	;# 
  1184  0097                     	;# 
  1185  0098                     	;# 
  1186  0099                     	;# 
  1187  009A                     	;# 
  1188  009B                     	;# 
  1189  009C                     	;# 
  1190  009D                     	;# 
  1191  009E                     	;# 
  1192  010C                     	;# 
  1193  010D                     	;# 
  1194  010E                     	;# 
  1195  010E                     	;# 
  1196  010F                     	;# 
  1197  0110                     	;# 
  1198  0110                     	;# 
  1199  0111                     	;# 
  1200  0112                     	;# 
  1201  0112                     	;# 
  1202  0113                     	;# 
  1203  0114                     	;# 
  1204  0114                     	;# 
  1205  0115                     	;# 
  1206  0116                     	;# 
  1207  0116                     	;# 
  1208  0117                     	;# 
  1209  0119                     	;# 
  1210  0119                     	;# 
  1211  0119                     	;# 
  1212  011A                     	;# 
  1213  011A                     	;# 
  1214  011A                     	;# 
  1215  011B                     	;# 
  1216  011B                     	;# 
  1217  011B                     	;# 
  1218  011B                     	;# 
  1219  011B                     	;# 
  1220  011C                     	;# 
  1221  011C                     	;# 
  1222  011C                     	;# 
  1223  011D                     	;# 
  1224  011D                     	;# 
  1225  011D                     	;# 
  1226  011E                     	;# 
  1227  011E                     	;# 
  1228  011E                     	;# 
  1229  011F                     	;# 
  1230  011F                     	;# 
  1231  011F                     	;# 
  1232  011F                     	;# 
  1233  011F                     	;# 
  1234  018C                     	;# 
  1235  018D                     	;# 
  1236  018E                     	;# 
  1237  018F                     	;# 
  1238  0190                     	;# 
  1239  0191                     	;# 
  1240  0192                     	;# 
  1241  0196                     	;# 
  1242  0197                     	;# 
  1243  0198                     	;# 
  1244  0199                     	;# 
  1245  019A                     	;# 
  1246  019B                     	;# 
  1247  019C                     	;# 
  1248  020C                     	;# 
  1249  020C                     	;# 
  1250  020D                     	;# 
  1251  020E                     	;# 
  1252  020F                     	;# 
  1253  020F                     	;# 
  1254  0210                     	;# 
  1255  0210                     	;# 
  1256  0211                     	;# 
  1257  0211                     	;# 
  1258  0212                     	;# 
  1259  0212                     	;# 
  1260  0213                     	;# 
  1261  0214                     	;# 
  1262  0215                     	;# 
  1263  0215                     	;# 
  1264  0216                     	;# 
  1265  0216                     	;# 
  1266  0217                     	;# 
  1267  0217                     	;# 
  1268  0218                     	;# 
  1269  0218                     	;# 
  1270  0219                     	;# 
  1271  021A                     	;# 
  1272  021B                     	;# 
  1273  021B                     	;# 
  1274  021C                     	;# 
  1275  021C                     	;# 
  1276  021D                     	;# 
  1277  021D                     	;# 
  1278  021E                     	;# 
  1279  021F                     	;# 
  1280  028C                     	;# 
  1281  028C                     	;# 
  1282  028D                     	;# 
  1283  028D                     	;# 
  1284  028E                     	;# 
  1285  028F                     	;# 
  1286  0290                     	;# 
  1287  0290                     	;# 
  1288  0291                     	;# 
  1289  0292                     	;# 
  1290  0292                     	;# 
  1291  0293                     	;# 
  1292  0293                     	;# 
  1293  0294                     	;# 
  1294  0295                     	;# 
  1295  0296                     	;# 
  1296  0296                     	;# 
  1297  0297                     	;# 
  1298  0298                     	;# 
  1299  0298                     	;# 
  1300  0299                     	;# 
  1301  0299                     	;# 
  1302  029A                     	;# 
  1303  029B                     	;# 
  1304  029C                     	;# 
  1305  029C                     	;# 
  1306  029D                     	;# 
  1307  030C                     	;# 
  1308  030C                     	;# 
  1309  030D                     	;# 
  1310  030E                     	;# 
  1311  030F                     	;# 
  1312  0310                     	;# 
  1313  0310                     	;# 
  1314  0311                     	;# 
  1315  0312                     	;# 
  1316  0313                     	;# 
  1317  0314                     	;# 
  1318  0314                     	;# 
  1319  0315                     	;# 
  1320  0316                     	;# 
  1321  0317                     	;# 
  1322  0318                     	;# 
  1323  0318                     	;# 
  1324  0319                     	;# 
  1325  031A                     	;# 
  1326  031B                     	;# 
  1327  031C                     	;# 
  1328  031C                     	;# 
  1329  031D                     	;# 
  1330  031E                     	;# 
  1331  031F                     	;# 
  1332  038C                     	;# 
  1333  038D                     	;# 
  1334  038E                     	;# 
  1335  0390                     	;# 
  1336  0391                     	;# 
  1337  0392                     	;# 
  1338  040C                     	;# 
  1339  040D                     	;# 
  1340  040E                     	;# 
  1341  040F                     	;# 
  1342  0410                     	;# 
  1343  0411                     	;# 
  1344  0416                     	;# 
  1345  0416                     	;# 
  1346  0417                     	;# 
  1347  0418                     	;# 
  1348  0418                     	;# 
  1349  0419                     	;# 
  1350  041A                     	;# 
  1351  041A                     	;# 
  1352  041B                     	;# 
  1353  041C                     	;# 
  1354  041C                     	;# 
  1355  041D                     	;# 
  1356  041E                     	;# 
  1357  041F                     	;# 
  1358  048C                     	;# 
  1359  048C                     	;# 
  1360  048D                     	;# 
  1361  048E                     	;# 
  1362  048F                     	;# 
  1363  048F                     	;# 
  1364  0490                     	;# 
  1365  0491                     	;# 
  1366  0492                     	;# 
  1367  0492                     	;# 
  1368  0493                     	;# 
  1369  0494                     	;# 
  1370  0495                     	;# 
  1371  0495                     	;# 
  1372  0496                     	;# 
  1373  0497                     	;# 
  1374  0498                     	;# 
  1375  0499                     	;# 
  1376  049A                     	;# 
  1377  049B                     	;# 
  1378  049C                     	;# 
  1379  049D                     	;# 
  1380  050C                     	;# 
  1381  050C                     	;# 
  1382  050D                     	;# 
  1383  050E                     	;# 
  1384  050F                     	;# 
  1385  050F                     	;# 
  1386  0510                     	;# 
  1387  0511                     	;# 
  1388  0512                     	;# 
  1389  0512                     	;# 
  1390  0513                     	;# 
  1391  0514                     	;# 
  1392  0515                     	;# 
  1393  0515                     	;# 
  1394  0516                     	;# 
  1395  0517                     	;# 
  1396  0518                     	;# 
  1397  0519                     	;# 
  1398  051A                     	;# 
  1399  051B                     	;# 
  1400  051C                     	;# 
  1401  051D                     	;# 
  1402  058C                     	;# 
  1403  058C                     	;# 
  1404  058D                     	;# 
  1405  058E                     	;# 
  1406  058F                     	;# 
  1407  058F                     	;# 
  1408  0590                     	;# 
  1409  0591                     	;# 
  1410  0592                     	;# 
  1411  0593                     	;# 
  1412  060C                     	;# 
  1413  060D                     	;# 
  1414  060E                     	;# 
  1415  060F                     	;# 
  1416  0610                     	;# 
  1417  0611                     	;# 
  1418  0612                     	;# 
  1419  0613                     	;# 
  1420  0614                     	;# 
  1421  0616                     	;# 
  1422  0617                     	;# 
  1423  0618                     	;# 
  1424  0619                     	;# 
  1425  061A                     	;# 
  1426  061B                     	;# 
  1427  061C                     	;# 
  1428  061D                     	;# 
  1429  061E                     	;# 
  1430  068C                     	;# 
  1431  068D                     	;# 
  1432  068E                     	;# 
  1433  068F                     	;# 
  1434  0690                     	;# 
  1435  0691                     	;# 
  1436  0692                     	;# 
  1437  0693                     	;# 
  1438  0694                     	;# 
  1439  070C                     	;# 
  1440  070D                     	;# 
  1441  070E                     	;# 
  1442  070F                     	;# 
  1443  0710                     	;# 
  1444  0711                     	;# 
  1445  0712                     	;# 
  1446  0713                     	;# 
  1447  0714                     	;# 
  1448  0716                     	;# 
  1449  0717                     	;# 
  1450  0718                     	;# 
  1451  0719                     	;# 
  1452  071A                     	;# 
  1453  071B                     	;# 
  1454  071C                     	;# 
  1455  071D                     	;# 
  1456  071E                     	;# 
  1457  0796                     	;# 
  1458  0797                     	;# 
  1459  0798                     	;# 
  1460  0799                     	;# 
  1461  079A                     	;# 
  1462  079B                     	;# 
  1463  080C                     	;# 
  1464  080D                     	;# 
  1465  080E                     	;# 
  1466  080F                     	;# 
  1467  0810                     	;# 
  1468  0811                     	;# 
  1469  0812                     	;# 
  1470  0813                     	;# 
  1471  0814                     	;# 
  1472  081A                     	;# 
  1473  081B                     	;# 
  1474  081C                     	;# 
  1475  081D                     	;# 
  1476  081E                     	;# 
  1477  081F                     	;# 
  1478  088C                     	;# 
  1479  088D                     	;# 
  1480  088E                     	;# 
  1481  088F                     	;# 
  1482  0890                     	;# 
  1483  0891                     	;# 
  1484  0892                     	;# 
  1485  0893                     	;# 
  1486  0895                     	;# 
  1487  0896                     	;# 
  1488  0897                     	;# 
  1489  0898                     	;# 
  1490  0899                     	;# 
  1491  089A                     	;# 
  1492  089B                     	;# 
  1493  090C                     	;# 
  1494  090E                     	;# 
  1495  090F                     	;# 
  1496  091F                     	;# 
  1497  091F                     	;# 
  1498  098F                     	;# 
  1499  098F                     	;# 
  1500  0990                     	;# 
  1501  0991                     	;# 
  1502  0992                     	;# 
  1503  0993                     	;# 
  1504  0994                     	;# 
  1505  0995                     	;# 
  1506  0996                     	;# 
  1507  0997                     	;# 
  1508  0E0F                     	;# 
  1509  0E10                     	;# 
  1510  0E11                     	;# 
  1511  0E12                     	;# 
  1512  0E13                     	;# 
  1513  0E14                     	;# 
  1514  0E15                     	;# 
  1515  0E16                     	;# 
  1516  0E17                     	;# 
  1517  0E18                     	;# 
  1518  0E19                     	;# 
  1519  0E1A                     	;# 
  1520  0E1B                     	;# 
  1521  0E1C                     	;# 
  1522  0E1D                     	;# 
  1523  0E1E                     	;# 
  1524  0E1F                     	;# 
  1525  0E20                     	;# 
  1526  0E21                     	;# 
  1527  0E22                     	;# 
  1528  0E23                     	;# 
  1529  0E24                     	;# 
  1530  0E25                     	;# 
  1531  0E26                     	;# 
  1532  0E27                     	;# 
  1533  0E28                     	;# 
  1534  0E29                     	;# 
  1535  0E2A                     	;# 
  1536  0E2B                     	;# 
  1537  0E2C                     	;# 
  1538  0E2D                     	;# 
  1539  0E2E                     	;# 
  1540  0E2F                     	;# 
  1541  0E30                     	;# 
  1542  0E31                     	;# 
  1543  0E32                     	;# 
  1544  0E33                     	;# 
  1545  0E34                     	;# 
  1546  0E35                     	;# 
  1547  0E36                     	;# 
  1548  0E37                     	;# 
  1549  0E8F                     	;# 
  1550  0E90                     	;# 
  1551  0E91                     	;# 
  1552  0E92                     	;# 
  1553  0E93                     	;# 
  1554  0E94                     	;# 
  1555  0E95                     	;# 
  1556  0E96                     	;# 
  1557  0E97                     	;# 
  1558  0E9C                     	;# 
  1559  0E9D                     	;# 
  1560  0E9E                     	;# 
  1561  0EA1                     	;# 
  1562  0EA2                     	;# 
  1563  0EA3                     	;# 
  1564  0EA4                     	;# 
  1565  0EA5                     	;# 
  1566  0EA9                     	;# 
  1567  0EAA                     	;# 
  1568  0EAB                     	;# 
  1569  0EAC                     	;# 
  1570  0EB1                     	;# 
  1571  0EB2                     	;# 
  1572  0EB3                     	;# 
  1573  0EB8                     	;# 
  1574  0EB9                     	;# 
  1575  0EBA                     	;# 
  1576  0EBB                     	;# 
  1577  0EBC                     	;# 
  1578  0EBD                     	;# 
  1579  0EBE                     	;# 
  1580  0EC3                     	;# 
  1581  0EC5                     	;# 
  1582  0EC6                     	;# 
  1583  0EC7                     	;# 
  1584  0EC8                     	;# 
  1585  0EC9                     	;# 
  1586  0ECA                     	;# 
  1587  0ECB                     	;# 
  1588  0ECC                     	;# 
  1589  0F10                     	;# 
  1590  0F11                     	;# 
  1591  0F12                     	;# 
  1592  0F13                     	;# 
  1593  0F14                     	;# 
  1594  0F15                     	;# 
  1595  0F16                     	;# 
  1596  0F17                     	;# 
  1597  0F18                     	;# 
  1598  0F19                     	;# 
  1599  0F1A                     	;# 
  1600  0F1B                     	;# 
  1601  0F1C                     	;# 
  1602  0F1D                     	;# 
  1603  0F1E                     	;# 
  1604  0F1F                     	;# 
  1605  0F20                     	;# 
  1606  0F21                     	;# 
  1607  0F22                     	;# 
  1608  0F23                     	;# 
  1609  0F24                     	;# 
  1610  0F25                     	;# 
  1611  0F26                     	;# 
  1612  0F27                     	;# 
  1613  0F38                     	;# 
  1614  0F39                     	;# 
  1615  0F3A                     	;# 
  1616  0F3B                     	;# 
  1617  0F3C                     	;# 
  1618  0F3D                     	;# 
  1619  0F3E                     	;# 
  1620  0F3F                     	;# 
  1621  0F40                     	;# 
  1622  0F41                     	;# 
  1623  0F43                     	;# 
  1624  0F44                     	;# 
  1625  0F45                     	;# 
  1626  0F46                     	;# 
  1627  0F47                     	;# 
  1628  0F48                     	;# 
  1629  0F49                     	;# 
  1630  0F4A                     	;# 
  1631  0F4B                     	;# 
  1632  0F4C                     	;# 
  1633  0F4E                     	;# 
  1634  0F4F                     	;# 
  1635  0F50                     	;# 
  1636  0F51                     	;# 
  1637  0F52                     	;# 
  1638  0F53                     	;# 
  1639  0F54                     	;# 
  1640  0F55                     	;# 
  1641  0F56                     	;# 
  1642  0F57                     	;# 
  1643  0F65                     	;# 
  1644  0F68                     	;# 
  1645  0F69                     	;# 
  1646  0F6A                     	;# 
  1647  0F6B                     	;# 
  1648  0FE4                     	;# 
  1649  0FE5                     	;# 
  1650  0FE6                     	;# 
  1651  0FE7                     	;# 
  1652  0FE8                     	;# 
  1653  0FE9                     	;# 
  1654  0FEA                     	;# 
  1655  0FEB                     	;# 
  1656  0FED                     	;# 
  1657  0FEE                     	;# 
  1658  0FEF                     	;# 
  1659  0000                     	;# 
  1660  0001                     	;# 
  1661  0002                     	;# 
  1662  0003                     	;# 
  1663  0004                     	;# 
  1664  0005                     	;# 
  1665  0006                     	;# 
  1666  0007                     	;# 
  1667  0008                     	;# 
  1668  0009                     	;# 
  1669  000A                     	;# 
  1670  000B                     	;# 
  1671  000C                     	;# 
  1672  000D                     	;# 
  1673  000E                     	;# 
  1674  0010                     	;# 
  1675  0011                     	;# 
  1676  0012                     	;# 
  1677  0013                     	;# 
  1678  0016                     	;# 
  1679  0017                     	;# 
  1680  0018                     	;# 
  1681  001C                     	;# 
  1682  001C                     	;# 
  1683  001D                     	;# 
  1684  001D                     	;# 
  1685  001E                     	;# 
  1686  001F                     	;# 
  1687  008C                     	;# 
  1688  008C                     	;# 
  1689  008D                     	;# 
  1690  008E                     	;# 
  1691  008E                     	;# 
  1692  008F                     	;# 
  1693  0090                     	;# 
  1694  0090                     	;# 
  1695  0091                     	;# 
  1696  0093                     	;# 
  1697  0094                     	;# 
  1698  0095                     	;# 
  1699  0096                     	;# 
  1700  0097                     	;# 
  1701  0098                     	;# 
  1702  0099                     	;# 
  1703  009A                     	;# 
  1704  009B                     	;# 
  1705  009C                     	;# 
  1706  009D                     	;# 
  1707  009E                     	;# 
  1708  010C                     	;# 
  1709  010D                     	;# 
  1710  010E                     	;# 
  1711  010E                     	;# 
  1712  010F                     	;# 
  1713  0110                     	;# 
  1714  0110                     	;# 
  1715  0111                     	;# 
  1716  0112                     	;# 
  1717  0112                     	;# 
  1718  0113                     	;# 
  1719  0114                     	;# 
  1720  0114                     	;# 
  1721  0115                     	;# 
  1722  0116                     	;# 
  1723  0116                     	;# 
  1724  0117                     	;# 
  1725  0119                     	;# 
  1726  0119                     	;# 
  1727  0119                     	;# 
  1728  011A                     	;# 
  1729  011A                     	;# 
  1730  011A                     	;# 
  1731  011B                     	;# 
  1732  011B                     	;# 
  1733  011B                     	;# 
  1734  011B                     	;# 
  1735  011B                     	;# 
  1736  011C                     	;# 
  1737  011C                     	;# 
  1738  011C                     	;# 
  1739  011D                     	;# 
  1740  011D                     	;# 
  1741  011D                     	;# 
  1742  011E                     	;# 
  1743  011E                     	;# 
  1744  011E                     	;# 
  1745  011F                     	;# 
  1746  011F                     	;# 
  1747  011F                     	;# 
  1748  011F                     	;# 
  1749  011F                     	;# 
  1750  018C                     	;# 
  1751  018D                     	;# 
  1752  018E                     	;# 
  1753  018F                     	;# 
  1754  0190                     	;# 
  1755  0191                     	;# 
  1756  0192                     	;# 
  1757  0196                     	;# 
  1758  0197                     	;# 
  1759  0198                     	;# 
  1760  0199                     	;# 
  1761  019A                     	;# 
  1762  019B                     	;# 
  1763  019C                     	;# 
  1764  020C                     	;# 
  1765  020C                     	;# 
  1766  020D                     	;# 
  1767  020E                     	;# 
  1768  020F                     	;# 
  1769  020F                     	;# 
  1770  0210                     	;# 
  1771  0210                     	;# 
  1772  0211                     	;# 
  1773  0211                     	;# 
  1774  0212                     	;# 
  1775  0212                     	;# 
  1776  0213                     	;# 
  1777  0214                     	;# 
  1778  0215                     	;# 
  1779  0215                     	;# 
  1780  0216                     	;# 
  1781  0216                     	;# 
  1782  0217                     	;# 
  1783  0217                     	;# 
  1784  0218                     	;# 
  1785  0218                     	;# 
  1786  0219                     	;# 
  1787  021A                     	;# 
  1788  021B                     	;# 
  1789  021B                     	;# 
  1790  021C                     	;# 
  1791  021C                     	;# 
  1792  021D                     	;# 
  1793  021D                     	;# 
  1794  021E                     	;# 
  1795  021F                     	;# 
  1796  028C                     	;# 
  1797  028C                     	;# 
  1798  028D                     	;# 
  1799  028D                     	;# 
  1800  028E                     	;# 
  1801  028F                     	;# 
  1802  0290                     	;# 
  1803  0290                     	;# 
  1804  0291                     	;# 
  1805  0292                     	;# 
  1806  0292                     	;# 
  1807  0293                     	;# 
  1808  0293                     	;# 
  1809  0294                     	;# 
  1810  0295                     	;# 
  1811  0296                     	;# 
  1812  0296                     	;# 
  1813  0297                     	;# 
  1814  0298                     	;# 
  1815  0298                     	;# 
  1816  0299                     	;# 
  1817  0299                     	;# 
  1818  029A                     	;# 
  1819  029B                     	;# 
  1820  029C                     	;# 
  1821  029C                     	;# 
  1822  029D                     	;# 
  1823  030C                     	;# 
  1824  030C                     	;# 
  1825  030D                     	;# 
  1826  030E                     	;# 
  1827  030F                     	;# 
  1828  0310                     	;# 
  1829  0310                     	;# 
  1830  0311                     	;# 
  1831  0312                     	;# 
  1832  0313                     	;# 
  1833  0314                     	;# 
  1834  0314                     	;# 
  1835  0315                     	;# 
  1836  0316                     	;# 
  1837  0317                     	;# 
  1838  0318                     	;# 
  1839  0318                     	;# 
  1840  0319                     	;# 
  1841  031A                     	;# 
  1842  031B                     	;# 
  1843  031C                     	;# 
  1844  031C                     	;# 
  1845  031D                     	;# 
  1846  031E                     	;# 
  1847  031F                     	;# 
  1848  038C                     	;# 
  1849  038D                     	;# 
  1850  038E                     	;# 
  1851  0390                     	;# 
  1852  0391                     	;# 
  1853  0392                     	;# 
  1854  040C                     	;# 
  1855  040D                     	;# 
  1856  040E                     	;# 
  1857  040F                     	;# 
  1858  0410                     	;# 
  1859  0411                     	;# 
  1860  0416                     	;# 
  1861  0416                     	;# 
  1862  0417                     	;# 
  1863  0418                     	;# 
  1864  0418                     	;# 
  1865  0419                     	;# 
  1866  041A                     	;# 
  1867  041A                     	;# 
  1868  041B                     	;# 
  1869  041C                     	;# 
  1870  041C                     	;# 
  1871  041D                     	;# 
  1872  041E                     	;# 
  1873  041F                     	;# 
  1874  048C                     	;# 
  1875  048C                     	;# 
  1876  048D                     	;# 
  1877  048E                     	;# 
  1878  048F                     	;# 
  1879  048F                     	;# 
  1880  0490                     	;# 
  1881  0491                     	;# 
  1882  0492                     	;# 
  1883  0492                     	;# 
  1884  0493                     	;# 
  1885  0494                     	;# 
  1886  0495                     	;# 
  1887  0495                     	;# 
  1888  0496                     	;# 
  1889  0497                     	;# 
  1890  0498                     	;# 
  1891  0499                     	;# 
  1892  049A                     	;# 
  1893  049B                     	;# 
  1894  049C                     	;# 
  1895  049D                     	;# 
  1896  050C                     	;# 
  1897  050C                     	;# 
  1898  050D                     	;# 
  1899  050E                     	;# 
  1900  050F                     	;# 
  1901  050F                     	;# 
  1902  0510                     	;# 
  1903  0511                     	;# 
  1904  0512                     	;# 
  1905  0512                     	;# 
  1906  0513                     	;# 
  1907  0514                     	;# 
  1908  0515                     	;# 
  1909  0515                     	;# 
  1910  0516                     	;# 
  1911  0517                     	;# 
  1912  0518                     	;# 
  1913  0519                     	;# 
  1914  051A                     	;# 
  1915  051B                     	;# 
  1916  051C                     	;# 
  1917  051D                     	;# 
  1918  058C                     	;# 
  1919  058C                     	;# 
  1920  058D                     	;# 
  1921  058E                     	;# 
  1922  058F                     	;# 
  1923  058F                     	;# 
  1924  0590                     	;# 
  1925  0591                     	;# 
  1926  0592                     	;# 
  1927  0593                     	;# 
  1928  060C                     	;# 
  1929  060D                     	;# 
  1930  060E                     	;# 
  1931  060F                     	;# 
  1932  0610                     	;# 
  1933  0611                     	;# 
  1934  0612                     	;# 
  1935  0613                     	;# 
  1936  0614                     	;# 
  1937  0616                     	;# 
  1938  0617                     	;# 
  1939  0618                     	;# 
  1940  0619                     	;# 
  1941  061A                     	;# 
  1942  061B                     	;# 
  1943  061C                     	;# 
  1944  061D                     	;# 
  1945  061E                     	;# 
  1946  068C                     	;# 
  1947  068D                     	;# 
  1948  068E                     	;# 
  1949  068F                     	;# 
  1950  0690                     	;# 
  1951  0691                     	;# 
  1952  0692                     	;# 
  1953  0693                     	;# 
  1954  0694                     	;# 
  1955  070C                     	;# 
  1956  070D                     	;# 
  1957  070E                     	;# 
  1958  070F                     	;# 
  1959  0710                     	;# 
  1960  0711                     	;# 
  1961  0712                     	;# 
  1962  0713                     	;# 
  1963  0714                     	;# 
  1964  0716                     	;# 
  1965  0717                     	;# 
  1966  0718                     	;# 
  1967  0719                     	;# 
  1968  071A                     	;# 
  1969  071B                     	;# 
  1970  071C                     	;# 
  1971  071D                     	;# 
  1972  071E                     	;# 
  1973  0796                     	;# 
  1974  0797                     	;# 
  1975  0798                     	;# 
  1976  0799                     	;# 
  1977  079A                     	;# 
  1978  079B                     	;# 
  1979  080C                     	;# 
  1980  080D                     	;# 
  1981  080E                     	;# 
  1982  080F                     	;# 
  1983  0810                     	;# 
  1984  0811                     	;# 
  1985  0812                     	;# 
  1986  0813                     	;# 
  1987  0814                     	;# 
  1988  081A                     	;# 
  1989  081B                     	;# 
  1990  081C                     	;# 
  1991  081D                     	;# 
  1992  081E                     	;# 
  1993  081F                     	;# 
  1994  088C                     	;# 
  1995  088D                     	;# 
  1996  088E                     	;# 
  1997  088F                     	;# 
  1998  0890                     	;# 
  1999  0891                     	;# 
  2000  0892                     	;# 
  2001  0893                     	;# 
  2002  0895                     	;# 
  2003  0896                     	;# 
  2004  0897                     	;# 
  2005  0898                     	;# 
  2006  0899                     	;# 
  2007  089A                     	;# 
  2008  089B                     	;# 
  2009  090C                     	;# 
  2010  090E                     	;# 
  2011  090F                     	;# 
  2012  091F                     	;# 
  2013  091F                     	;# 
  2014  098F                     	;# 
  2015  098F                     	;# 
  2016  0990                     	;# 
  2017  0991                     	;# 
  2018  0992                     	;# 
  2019  0993                     	;# 
  2020  0994                     	;# 
  2021  0995                     	;# 
  2022  0996                     	;# 
  2023  0997                     	;# 
  2024  0E0F                     	;# 
  2025  0E10                     	;# 
  2026  0E11                     	;# 
  2027  0E12                     	;# 
  2028  0E13                     	;# 
  2029  0E14                     	;# 
  2030  0E15                     	;# 
  2031  0E16                     	;# 
  2032  0E17                     	;# 
  2033  0E18                     	;# 
  2034  0E19                     	;# 
  2035  0E1A                     	;# 
  2036  0E1B                     	;# 
  2037  0E1C                     	;# 
  2038  0E1D                     	;# 
  2039  0E1E                     	;# 
  2040  0E1F                     	;# 
  2041  0E20                     	;# 
  2042  0E21                     	;# 
  2043  0E22                     	;# 
  2044  0E23                     	;# 
  2045  0E24                     	;# 
  2046  0E25                     	;# 
  2047  0E26                     	;# 
  2048  0E27                     	;# 
  2049  0E28                     	;# 
  2050  0E29                     	;# 
  2051  0E2A                     	;# 
  2052  0E2B                     	;# 
  2053  0E2C                     	;# 
  2054  0E2D                     	;# 
  2055  0E2E                     	;# 
  2056  0E2F                     	;# 
  2057  0E30                     	;# 
  2058  0E31                     	;# 
  2059  0E32                     	;# 
  2060  0E33                     	;# 
  2061  0E34                     	;# 
  2062  0E35                     	;# 
  2063  0E36                     	;# 
  2064  0E37                     	;# 
  2065  0E8F                     	;# 
  2066  0E90                     	;# 
  2067  0E91                     	;# 
  2068  0E92                     	;# 
  2069  0E93                     	;# 
  2070  0E94                     	;# 
  2071  0E95                     	;# 
  2072  0E96                     	;# 
  2073  0E97                     	;# 
  2074  0E9C                     	;# 
  2075  0E9D                     	;# 
  2076  0E9E                     	;# 
  2077  0EA1                     	;# 
  2078  0EA2                     	;# 
  2079  0EA3                     	;# 
  2080  0EA4                     	;# 
  2081  0EA5                     	;# 
  2082  0EA9                     	;# 
  2083  0EAA                     	;# 
  2084  0EAB                     	;# 
  2085  0EAC                     	;# 
  2086  0EB1                     	;# 
  2087  0EB2                     	;# 
  2088  0EB3                     	;# 
  2089  0EB8                     	;# 
  2090  0EB9                     	;# 
  2091  0EBA                     	;# 
  2092  0EBB                     	;# 
  2093  0EBC                     	;# 
  2094  0EBD                     	;# 
  2095  0EBE                     	;# 
  2096  0EC3                     	;# 
  2097  0EC5                     	;# 
  2098  0EC6                     	;# 
  2099  0EC7                     	;# 
  2100  0EC8                     	;# 
  2101  0EC9                     	;# 
  2102  0ECA                     	;# 
  2103  0ECB                     	;# 
  2104  0ECC                     	;# 
  2105  0F10                     	;# 
  2106  0F11                     	;# 
  2107  0F12                     	;# 
  2108  0F13                     	;# 
  2109  0F14                     	;# 
  2110  0F15                     	;# 
  2111  0F16                     	;# 
  2112  0F17                     	;# 
  2113  0F18                     	;# 
  2114  0F19                     	;# 
  2115  0F1A                     	;# 
  2116  0F1B                     	;# 
  2117  0F1C                     	;# 
  2118  0F1D                     	;# 
  2119  0F1E                     	;# 
  2120  0F1F                     	;# 
  2121  0F20                     	;# 
  2122  0F21                     	;# 
  2123  0F22                     	;# 
  2124  0F23                     	;# 
  2125  0F24                     	;# 
  2126  0F25                     	;# 
  2127  0F26                     	;# 
  2128  0F27                     	;# 
  2129  0F38                     	;# 
  2130  0F39                     	;# 
  2131  0F3A                     	;# 
  2132  0F3B                     	;# 
  2133  0F3C                     	;# 
  2134  0F3D                     	;# 
  2135  0F3E                     	;# 
  2136  0F3F                     	;# 
  2137  0F40                     	;# 
  2138  0F41                     	;# 
  2139  0F43                     	;# 
  2140  0F44                     	;# 
  2141  0F45                     	;# 
  2142  0F46                     	;# 
  2143  0F47                     	;# 
  2144  0F48                     	;# 
  2145  0F49                     	;# 
  2146  0F4A                     	;# 
  2147  0F4B                     	;# 
  2148  0F4C                     	;# 
  2149  0F4E                     	;# 
  2150  0F4F                     	;# 
  2151  0F50                     	;# 
  2152  0F51                     	;# 
  2153  0F52                     	;# 
  2154  0F53                     	;# 
  2155  0F54                     	;# 
  2156  0F55                     	;# 
  2157  0F56                     	;# 
  2158  0F57                     	;# 
  2159  0F65                     	;# 
  2160  0F68                     	;# 
  2161  0F69                     	;# 
  2162  0F6A                     	;# 
  2163  0F6B                     	;# 
  2164  0FE4                     	;# 
  2165  0FE5                     	;# 
  2166  0FE6                     	;# 
  2167  0FE7                     	;# 
  2168  0FE8                     	;# 
  2169  0FE9                     	;# 
  2170  0FEA                     	;# 
  2171  0FEB                     	;# 
  2172  0FED                     	;# 
  2173  0FEE                     	;# 
  2174  0FEF                     	;# 
  2175  0000                     	;# 
  2176  0001                     	;# 
  2177  0002                     	;# 
  2178  0003                     	;# 
  2179  0004                     	;# 
  2180  0005                     	;# 
  2181  0006                     	;# 
  2182  0007                     	;# 
  2183  0008                     	;# 
  2184  0009                     	;# 
  2185  000A                     	;# 
  2186  000B                     	;# 
  2187  000C                     	;# 
  2188  000D                     	;# 
  2189  000E                     	;# 
  2190  0010                     	;# 
  2191  0011                     	;# 
  2192  0012                     	;# 
  2193  0013                     	;# 
  2194  0016                     	;# 
  2195  0017                     	;# 
  2196  0018                     	;# 
  2197  001C                     	;# 
  2198  001C                     	;# 
  2199  001D                     	;# 
  2200  001D                     	;# 
  2201  001E                     	;# 
  2202  001F                     	;# 
  2203  008C                     	;# 
  2204  008C                     	;# 
  2205  008D                     	;# 
  2206  008E                     	;# 
  2207  008E                     	;# 
  2208  008F                     	;# 
  2209  0090                     	;# 
  2210  0090                     	;# 
  2211  0091                     	;# 
  2212  0093                     	;# 
  2213  0094                     	;# 
  2214  0095                     	;# 
  2215  0096                     	;# 
  2216  0097                     	;# 
  2217  0098                     	;# 
  2218  0099                     	;# 
  2219  009A                     	;# 
  2220  009B                     	;# 
  2221  009C                     	;# 
  2222  009D                     	;# 
  2223  009E                     	;# 
  2224  010C                     	;# 
  2225  010D                     	;# 
  2226  010E                     	;# 
  2227  010E                     	;# 
  2228  010F                     	;# 
  2229  0110                     	;# 
  2230  0110                     	;# 
  2231  0111                     	;# 
  2232  0112                     	;# 
  2233  0112                     	;# 
  2234  0113                     	;# 
  2235  0114                     	;# 
  2236  0114                     	;# 
  2237  0115                     	;# 
  2238  0116                     	;# 
  2239  0116                     	;# 
  2240  0117                     	;# 
  2241  0119                     	;# 
  2242  0119                     	;# 
  2243  0119                     	;# 
  2244  011A                     	;# 
  2245  011A                     	;# 
  2246  011A                     	;# 
  2247  011B                     	;# 
  2248  011B                     	;# 
  2249  011B                     	;# 
  2250  011B                     	;# 
  2251  011B                     	;# 
  2252  011C                     	;# 
  2253  011C                     	;# 
  2254  011C                     	;# 
  2255  011D                     	;# 
  2256  011D                     	;# 
  2257  011D                     	;# 
  2258  011E                     	;# 
  2259  011E                     	;# 
  2260  011E                     	;# 
  2261  011F                     	;# 
  2262  011F                     	;# 
  2263  011F                     	;# 
  2264  011F                     	;# 
  2265  011F                     	;# 
  2266  018C                     	;# 
  2267  018D                     	;# 
  2268  018E                     	;# 
  2269  018F                     	;# 
  2270  0190                     	;# 
  2271  0191                     	;# 
  2272  0192                     	;# 
  2273  0196                     	;# 
  2274  0197                     	;# 
  2275  0198                     	;# 
  2276  0199                     	;# 
  2277  019A                     	;# 
  2278  019B                     	;# 
  2279  019C                     	;# 
  2280  020C                     	;# 
  2281  020C                     	;# 
  2282  020D                     	;# 
  2283  020E                     	;# 
  2284  020F                     	;# 
  2285  020F                     	;# 
  2286  0210                     	;# 
  2287  0210                     	;# 
  2288  0211                     	;# 
  2289  0211                     	;# 
  2290  0212                     	;# 
  2291  0212                     	;# 
  2292  0213                     	;# 
  2293  0214                     	;# 
  2294  0215                     	;# 
  2295  0215                     	;# 
  2296  0216                     	;# 
  2297  0216                     	;# 
  2298  0217                     	;# 
  2299  0217                     	;# 
  2300  0218                     	;# 
  2301  0218                     	;# 
  2302  0219                     	;# 
  2303  021A                     	;# 
  2304  021B                     	;# 
  2305  021B                     	;# 
  2306  021C                     	;# 
  2307  021C                     	;# 
  2308  021D                     	;# 
  2309  021D                     	;# 
  2310  021E                     	;# 
  2311  021F                     	;# 
  2312  028C                     	;# 
  2313  028C                     	;# 
  2314  028D                     	;# 
  2315  028D                     	;# 
  2316  028E                     	;# 
  2317  028F                     	;# 
  2318  0290                     	;# 
  2319  0290                     	;# 
  2320  0291                     	;# 
  2321  0292                     	;# 
  2322  0292                     	;# 
  2323  0293                     	;# 
  2324  0293                     	;# 
  2325  0294                     	;# 
  2326  0295                     	;# 
  2327  0296                     	;# 
  2328  0296                     	;# 
  2329  0297                     	;# 
  2330  0298                     	;# 
  2331  0298                     	;# 
  2332  0299                     	;# 
  2333  0299                     	;# 
  2334  029A                     	;# 
  2335  029B                     	;# 
  2336  029C                     	;# 
  2337  029C                     	;# 
  2338  029D                     	;# 
  2339  030C                     	;# 
  2340  030C                     	;# 
  2341  030D                     	;# 
  2342  030E                     	;# 
  2343  030F                     	;# 
  2344  0310                     	;# 
  2345  0310                     	;# 
  2346  0311                     	;# 
  2347  0312                     	;# 
  2348  0313                     	;# 
  2349  0314                     	;# 
  2350  0314                     	;# 
  2351  0315                     	;# 
  2352  0316                     	;# 
  2353  0317                     	;# 
  2354  0318                     	;# 
  2355  0318                     	;# 
  2356  0319                     	;# 
  2357  031A                     	;# 
  2358  031B                     	;# 
  2359  031C                     	;# 
  2360  031C                     	;# 
  2361  031D                     	;# 
  2362  031E                     	;# 
  2363  031F                     	;# 
  2364  038C                     	;# 
  2365  038D                     	;# 
  2366  038E                     	;# 
  2367  0390                     	;# 
  2368  0391                     	;# 
  2369  0392                     	;# 
  2370  040C                     	;# 
  2371  040D                     	;# 
  2372  040E                     	;# 
  2373  040F                     	;# 
  2374  0410                     	;# 
  2375  0411                     	;# 
  2376  0416                     	;# 
  2377  0416                     	;# 
  2378  0417                     	;# 
  2379  0418                     	;# 
  2380  0418                     	;# 
  2381  0419                     	;# 
  2382  041A                     	;# 
  2383  041A                     	;# 
  2384  041B                     	;# 
  2385  041C                     	;# 
  2386  041C                     	;# 
  2387  041D                     	;# 
  2388  041E                     	;# 
  2389  041F                     	;# 
  2390  048C                     	;# 
  2391  048C                     	;# 
  2392  048D                     	;# 
  2393  048E                     	;# 
  2394  048F                     	;# 
  2395  048F                     	;# 
  2396  0490                     	;# 
  2397  0491                     	;# 
  2398  0492                     	;# 
  2399  0492                     	;# 
  2400  0493                     	;# 
  2401  0494                     	;# 
  2402  0495                     	;# 
  2403  0495                     	;# 
  2404  0496                     	;# 
  2405  0497                     	;# 
  2406  0498                     	;# 
  2407  0499                     	;# 
  2408  049A                     	;# 
  2409  049B                     	;# 
  2410  049C                     	;# 
  2411  049D                     	;# 
  2412  050C                     	;# 
  2413  050C                     	;# 
  2414  050D                     	;# 
  2415  050E                     	;# 
  2416  050F                     	;# 
  2417  050F                     	;# 
  2418  0510                     	;# 
  2419  0511                     	;# 
  2420  0512                     	;# 
  2421  0512                     	;# 
  2422  0513                     	;# 
  2423  0514                     	;# 
  2424  0515                     	;# 
  2425  0515                     	;# 
  2426  0516                     	;# 
  2427  0517                     	;# 
  2428  0518                     	;# 
  2429  0519                     	;# 
  2430  051A                     	;# 
  2431  051B                     	;# 
  2432  051C                     	;# 
  2433  051D                     	;# 
  2434  058C                     	;# 
  2435  058C                     	;# 
  2436  058D                     	;# 
  2437  058E                     	;# 
  2438  058F                     	;# 
  2439  058F                     	;# 
  2440  0590                     	;# 
  2441  0591                     	;# 
  2442  0592                     	;# 
  2443  0593                     	;# 
  2444  060C                     	;# 
  2445  060D                     	;# 
  2446  060E                     	;# 
  2447  060F                     	;# 
  2448  0610                     	;# 
  2449  0611                     	;# 
  2450  0612                     	;# 
  2451  0613                     	;# 
  2452  0614                     	;# 
  2453  0616                     	;# 
  2454  0617                     	;# 
  2455  0618                     	;# 
  2456  0619                     	;# 
  2457  061A                     	;# 
  2458  061B                     	;# 
  2459  061C                     	;# 
  2460  061D                     	;# 
  2461  061E                     	;# 
  2462  068C                     	;# 
  2463  068D                     	;# 
  2464  068E                     	;# 
  2465  068F                     	;# 
  2466  0690                     	;# 
  2467  0691                     	;# 
  2468  0692                     	;# 
  2469  0693                     	;# 
  2470  0694                     	;# 
  2471  070C                     	;# 
  2472  070D                     	;# 
  2473  070E                     	;# 
  2474  070F                     	;# 
  2475  0710                     	;# 
  2476  0711                     	;# 
  2477  0712                     	;# 
  2478  0713                     	;# 
  2479  0714                     	;# 
  2480  0716                     	;# 
  2481  0717                     	;# 
  2482  0718                     	;# 
  2483  0719                     	;# 
  2484  071A                     	;# 
  2485  071B                     	;# 
  2486  071C                     	;# 
  2487  071D                     	;# 
  2488  071E                     	;# 
  2489  0796                     	;# 
  2490  0797                     	;# 
  2491  0798                     	;# 
  2492  0799                     	;# 
  2493  079A                     	;# 
  2494  079B                     	;# 
  2495  080C                     	;# 
  2496  080D                     	;# 
  2497  080E                     	;# 
  2498  080F                     	;# 
  2499  0810                     	;# 
  2500  0811                     	;# 
  2501  0812                     	;# 
  2502  0813                     	;# 
  2503  0814                     	;# 
  2504  081A                     	;# 
  2505  081B                     	;# 
  2506  081C                     	;# 
  2507  081D                     	;# 
  2508  081E                     	;# 
  2509  081F                     	;# 
  2510  088C                     	;# 
  2511  088D                     	;# 
  2512  088E                     	;# 
  2513  088F                     	;# 
  2514  0890                     	;# 
  2515  0891                     	;# 
  2516  0892                     	;# 
  2517  0893                     	;# 
  2518  0895                     	;# 
  2519  0896                     	;# 
  2520  0897                     	;# 
  2521  0898                     	;# 
  2522  0899                     	;# 
  2523  089A                     	;# 
  2524  089B                     	;# 
  2525  090C                     	;# 
  2526  090E                     	;# 
  2527  090F                     	;# 
  2528  091F                     	;# 
  2529  091F                     	;# 
  2530  098F                     	;# 
  2531  098F                     	;# 
  2532  0990                     	;# 
  2533  0991                     	;# 
  2534  0992                     	;# 
  2535  0993                     	;# 
  2536  0994                     	;# 
  2537  0995                     	;# 
  2538  0996                     	;# 
  2539  0997                     	;# 
  2540  0E0F                     	;# 
  2541  0E10                     	;# 
  2542  0E11                     	;# 
  2543  0E12                     	;# 
  2544  0E13                     	;# 
  2545  0E14                     	;# 
  2546  0E15                     	;# 
  2547  0E16                     	;# 
  2548  0E17                     	;# 
  2549  0E18                     	;# 
  2550  0E19                     	;# 
  2551  0E1A                     	;# 
  2552  0E1B                     	;# 
  2553  0E1C                     	;# 
  2554  0E1D                     	;# 
  2555  0E1E                     	;# 
  2556  0E1F                     	;# 
  2557  0E20                     	;# 
  2558  0E21                     	;# 
  2559  0E22                     	;# 
  2560  0E23                     	;# 
  2561  0E24                     	;# 
  2562  0E25                     	;# 
  2563  0E26                     	;# 
  2564  0E27                     	;# 
  2565  0E28                     	;# 
  2566  0E29                     	;# 
  2567  0E2A                     	;# 
  2568  0E2B                     	;# 
  2569  0E2C                     	;# 
  2570  0E2D                     	;# 
  2571  0E2E                     	;# 
  2572  0E2F                     	;# 
  2573  0E30                     	;# 
  2574  0E31                     	;# 
  2575  0E32                     	;# 
  2576  0E33                     	;# 
  2577  0E34                     	;# 
  2578  0E35                     	;# 
  2579  0E36                     	;# 
  2580  0E37                     	;# 
  2581  0E8F                     	;# 
  2582  0E90                     	;# 
  2583  0E91                     	;# 
  2584  0E92                     	;# 
  2585  0E93                     	;# 
  2586  0E94                     	;# 
  2587  0E95                     	;# 
  2588  0E96                     	;# 
  2589  0E97                     	;# 
  2590  0E9C                     	;# 
  2591  0E9D                     	;# 
  2592  0E9E                     	;# 
  2593  0EA1                     	;# 
  2594  0EA2                     	;# 
  2595  0EA3                     	;# 
  2596  0EA4                     	;# 
  2597  0EA5                     	;# 
  2598  0EA9                     	;# 
  2599  0EAA                     	;# 
  2600  0EAB                     	;# 
  2601  0EAC                     	;# 
  2602  0EB1                     	;# 
  2603  0EB2                     	;# 
  2604  0EB3                     	;# 
  2605  0EB8                     	;# 
  2606  0EB9                     	;# 
  2607  0EBA                     	;# 
  2608  0EBB                     	;# 
  2609  0EBC                     	;# 
  2610  0EBD                     	;# 
  2611  0EBE                     	;# 
  2612  0EC3                     	;# 
  2613  0EC5                     	;# 
  2614  0EC6                     	;# 
  2615  0EC7                     	;# 
  2616  0EC8                     	;# 
  2617  0EC9                     	;# 
  2618  0ECA                     	;# 
  2619  0ECB                     	;# 
  2620  0ECC                     	;# 
  2621  0F10                     	;# 
  2622  0F11                     	;# 
  2623  0F12                     	;# 
  2624  0F13                     	;# 
  2625  0F14                     	;# 
  2626  0F15                     	;# 
  2627  0F16                     	;# 
  2628  0F17                     	;# 
  2629  0F18                     	;# 
  2630  0F19                     	;# 
  2631  0F1A                     	;# 
  2632  0F1B                     	;# 
  2633  0F1C                     	;# 
  2634  0F1D                     	;# 
  2635  0F1E                     	;# 
  2636  0F1F                     	;# 
  2637  0F20                     	;# 
  2638  0F21                     	;# 
  2639  0F22                     	;# 
  2640  0F23                     	;# 
  2641  0F24                     	;# 
  2642  0F25                     	;# 
  2643  0F26                     	;# 
  2644  0F27                     	;# 
  2645  0F38                     	;# 
  2646  0F39                     	;# 
  2647  0F3A                     	;# 
  2648  0F3B                     	;# 
  2649  0F3C                     	;# 
  2650  0F3D                     	;# 
  2651  0F3E                     	;# 
  2652  0F3F                     	;# 
  2653  0F40                     	;# 
  2654  0F41                     	;# 
  2655  0F43                     	;# 
  2656  0F44                     	;# 
  2657  0F45                     	;# 
  2658  0F46                     	;# 
  2659  0F47                     	;# 
  2660  0F48                     	;# 
  2661  0F49                     	;# 
  2662  0F4A                     	;# 
  2663  0F4B                     	;# 
  2664  0F4C                     	;# 
  2665  0F4E                     	;# 
  2666  0F4F                     	;# 
  2667  0F50                     	;# 
  2668  0F51                     	;# 
  2669  0F52                     	;# 
  2670  0F53                     	;# 
  2671  0F54                     	;# 
  2672  0F55                     	;# 
  2673  0F56                     	;# 
  2674  0F57                     	;# 
  2675  0F65                     	;# 
  2676  0F68                     	;# 
  2677  0F69                     	;# 
  2678  0F6A                     	;# 
  2679  0F6B                     	;# 
  2680  0FE4                     	;# 
  2681  0FE5                     	;# 
  2682  0FE6                     	;# 
  2683  0FE7                     	;# 
  2684  0FE8                     	;# 
  2685  0FE9                     	;# 
  2686  0FEA                     	;# 
  2687  0FEB                     	;# 
  2688  0FED                     	;# 
  2689  0FEE                     	;# 
  2690  0FEF                     	;# 
  2691  0000                     	;# 
  2692  0001                     	;# 
  2693  0002                     	;# 
  2694  0003                     	;# 
  2695  0004                     	;# 
  2696  0005                     	;# 
  2697  0006                     	;# 
  2698  0007                     	;# 
  2699  0008                     	;# 
  2700  0009                     	;# 
  2701  000A                     	;# 
  2702  000B                     	;# 
  2703  000C                     	;# 
  2704  000D                     	;# 
  2705  000E                     	;# 
  2706  0010                     	;# 
  2707  0011                     	;# 
  2708  0012                     	;# 
  2709  0013                     	;# 
  2710  0016                     	;# 
  2711  0017                     	;# 
  2712  0018                     	;# 
  2713  001C                     	;# 
  2714  001C                     	;# 
  2715  001D                     	;# 
  2716  001D                     	;# 
  2717  001E                     	;# 
  2718  001F                     	;# 
  2719  008C                     	;# 
  2720  008C                     	;# 
  2721  008D                     	;# 
  2722  008E                     	;# 
  2723  008E                     	;# 
  2724  008F                     	;# 
  2725  0090                     	;# 
  2726  0090                     	;# 
  2727  0091                     	;# 
  2728  0093                     	;# 
  2729  0094                     	;# 
  2730  0095                     	;# 
  2731  0096                     	;# 
  2732  0097                     	;# 
  2733  0098                     	;# 
  2734  0099                     	;# 
  2735  009A                     	;# 
  2736  009B                     	;# 
  2737  009C                     	;# 
  2738  009D                     	;# 
  2739  009E                     	;# 
  2740  010C                     	;# 
  2741  010D                     	;# 
  2742  010E                     	;# 
  2743  010E                     	;# 
  2744  010F                     	;# 
  2745  0110                     	;# 
  2746  0110                     	;# 
  2747  0111                     	;# 
  2748  0112                     	;# 
  2749  0112                     	;# 
  2750  0113                     	;# 
  2751  0114                     	;# 
  2752  0114                     	;# 
  2753  0115                     	;# 
  2754  0116                     	;# 
  2755  0116                     	;# 
  2756  0117                     	;# 
  2757  0119                     	;# 
  2758  0119                     	;# 
  2759  0119                     	;# 
  2760  011A                     	;# 
  2761  011A                     	;# 
  2762  011A                     	;# 
  2763  011B                     	;# 
  2764  011B                     	;# 
  2765  011B                     	;# 
  2766  011B                     	;# 
  2767  011B                     	;# 
  2768  011C                     	;# 
  2769  011C                     	;# 
  2770  011C                     	;# 
  2771  011D                     	;# 
  2772  011D                     	;# 
  2773  011D                     	;# 
  2774  011E                     	;# 
  2775  011E                     	;# 
  2776  011E                     	;# 
  2777  011F                     	;# 
  2778  011F                     	;# 
  2779  011F                     	;# 
  2780  011F                     	;# 
  2781  011F                     	;# 
  2782  018C                     	;# 
  2783  018D                     	;# 
  2784  018E                     	;# 
  2785  018F                     	;# 
  2786  0190                     	;# 
  2787  0191                     	;# 
  2788  0192                     	;# 
  2789  0196                     	;# 
  2790  0197                     	;# 
  2791  0198                     	;# 
  2792  0199                     	;# 
  2793  019A                     	;# 
  2794  019B                     	;# 
  2795  019C                     	;# 
  2796  020C                     	;# 
  2797  020C                     	;# 
  2798  020D                     	;# 
  2799  020E                     	;# 
  2800  020F                     	;# 
  2801  020F                     	;# 
  2802  0210                     	;# 
  2803  0210                     	;# 
  2804  0211                     	;# 
  2805  0211                     	;# 
  2806  0212                     	;# 
  2807  0212                     	;# 
  2808  0213                     	;# 
  2809  0214                     	;# 
  2810  0215                     	;# 
  2811  0215                     	;# 
  2812  0216                     	;# 
  2813  0216                     	;# 
  2814  0217                     	;# 
  2815  0217                     	;# 
  2816  0218                     	;# 
  2817  0218                     	;# 
  2818  0219                     	;# 
  2819  021A                     	;# 
  2820  021B                     	;# 
  2821  021B                     	;# 
  2822  021C                     	;# 
  2823  021C                     	;# 
  2824  021D                     	;# 
  2825  021D                     	;# 
  2826  021E                     	;# 
  2827  021F                     	;# 
  2828  028C                     	;# 
  2829  028C                     	;# 
  2830  028D                     	;# 
  2831  028D                     	;# 
  2832  028E                     	;# 
  2833  028F                     	;# 
  2834  0290                     	;# 
  2835  0290                     	;# 
  2836  0291                     	;# 
  2837  0292                     	;# 
  2838  0292                     	;# 
  2839  0293                     	;# 
  2840  0293                     	;# 
  2841  0294                     	;# 
  2842  0295                     	;# 
  2843  0296                     	;# 
  2844  0296                     	;# 
  2845  0297                     	;# 
  2846  0298                     	;# 
  2847  0298                     	;# 
  2848  0299                     	;# 
  2849  0299                     	;# 
  2850  029A                     	;# 
  2851  029B                     	;# 
  2852  029C                     	;# 
  2853  029C                     	;# 
  2854  029D                     	;# 
  2855  030C                     	;# 
  2856  030C                     	;# 
  2857  030D                     	;# 
  2858  030E                     	;# 
  2859  030F                     	;# 
  2860  0310                     	;# 
  2861  0310                     	;# 
  2862  0311                     	;# 
  2863  0312                     	;# 
  2864  0313                     	;# 
  2865  0314                     	;# 
  2866  0314                     	;# 
  2867  0315                     	;# 
  2868  0316                     	;# 
  2869  0317                     	;# 
  2870  0318                     	;# 
  2871  0318                     	;# 
  2872  0319                     	;# 
  2873  031A                     	;# 
  2874  031B                     	;# 
  2875  031C                     	;# 
  2876  031C                     	;# 
  2877  031D                     	;# 
  2878  031E                     	;# 
  2879  031F                     	;# 
  2880  038C                     	;# 
  2881  038D                     	;# 
  2882  038E                     	;# 
  2883  0390                     	;# 
  2884  0391                     	;# 
  2885  0392                     	;# 
  2886  040C                     	;# 
  2887  040D                     	;# 
  2888  040E                     	;# 
  2889  040F                     	;# 
  2890  0410                     	;# 
  2891  0411                     	;# 
  2892  0416                     	;# 
  2893  0416                     	;# 
  2894  0417                     	;# 
  2895  0418                     	;# 
  2896  0418                     	;# 
  2897  0419                     	;# 
  2898  041A                     	;# 
  2899  041A                     	;# 
  2900  041B                     	;# 
  2901  041C                     	;# 
  2902  041C                     	;# 
  2903  041D                     	;# 
  2904  041E                     	;# 
  2905  041F                     	;# 
  2906  048C                     	;# 
  2907  048C                     	;# 
  2908  048D                     	;# 
  2909  048E                     	;# 
  2910  048F                     	;# 
  2911  048F                     	;# 
  2912  0490                     	;# 
  2913  0491                     	;# 
  2914  0492                     	;# 
  2915  0492                     	;# 
  2916  0493                     	;# 
  2917  0494                     	;# 
  2918  0495                     	;# 
  2919  0495                     	;# 
  2920  0496                     	;# 
  2921  0497                     	;# 
  2922  0498                     	;# 
  2923  0499                     	;# 
  2924  049A                     	;# 
  2925  049B                     	;# 
  2926  049C                     	;# 
  2927  049D                     	;# 
  2928  050C                     	;# 
  2929  050C                     	;# 
  2930  050D                     	;# 
  2931  050E                     	;# 
  2932  050F                     	;# 
  2933  050F                     	;# 
  2934  0510                     	;# 
  2935  0511                     	;# 
  2936  0512                     	;# 
  2937  0512                     	;# 
  2938  0513                     	;# 
  2939  0514                     	;# 
  2940  0515                     	;# 
  2941  0515                     	;# 
  2942  0516                     	;# 
  2943  0517                     	;# 
  2944  0518                     	;# 
  2945  0519                     	;# 
  2946  051A                     	;# 
  2947  051B                     	;# 
  2948  051C                     	;# 
  2949  051D                     	;# 
  2950  058C                     	;# 
  2951  058C                     	;# 
  2952  058D                     	;# 
  2953  058E                     	;# 
  2954  058F                     	;# 
  2955  058F                     	;# 
  2956  0590                     	;# 
  2957  0591                     	;# 
  2958  0592                     	;# 
  2959  0593                     	;# 
  2960  060C                     	;# 
  2961  060D                     	;# 
  2962  060E                     	;# 
  2963  060F                     	;# 
  2964  0610                     	;# 
  2965  0611                     	;# 
  2966  0612                     	;# 
  2967  0613                     	;# 
  2968  0614                     	;# 
  2969  0616                     	;# 
  2970  0617                     	;# 
  2971  0618                     	;# 
  2972  0619                     	;# 
  2973  061A                     	;# 
  2974  061B                     	;# 
  2975  061C                     	;# 
  2976  061D                     	;# 
  2977  061E                     	;# 
  2978  068C                     	;# 
  2979  068D                     	;# 
  2980  068E                     	;# 
  2981  068F                     	;# 
  2982  0690                     	;# 
  2983  0691                     	;# 
  2984  0692                     	;# 
  2985  0693                     	;# 
  2986  0694                     	;# 
  2987  070C                     	;# 
  2988  070D                     	;# 
  2989  070E                     	;# 
  2990  070F                     	;# 
  2991  0710                     	;# 
  2992  0711                     	;# 
  2993  0712                     	;# 
  2994  0713                     	;# 
  2995  0714                     	;# 
  2996  0716                     	;# 
  2997  0717                     	;# 
  2998  0718                     	;# 
  2999  0719                     	;# 
  3000  071A                     	;# 
  3001  071B                     	;# 
  3002  071C                     	;# 
  3003  071D                     	;# 
  3004  071E                     	;# 
  3005  0796                     	;# 
  3006  0797                     	;# 
  3007  0798                     	;# 
  3008  0799                     	;# 
  3009  079A                     	;# 
  3010  079B                     	;# 
  3011  080C                     	;# 
  3012  080D                     	;# 
  3013  080E                     	;# 
  3014  080F                     	;# 
  3015  0810                     	;# 
  3016  0811                     	;# 
  3017  0812                     	;# 
  3018  0813                     	;# 
  3019  0814                     	;# 
  3020  081A                     	;# 
  3021  081B                     	;# 
  3022  081C                     	;# 
  3023  081D                     	;# 
  3024  081E                     	;# 
  3025  081F                     	;# 
  3026  088C                     	;# 
  3027  088D                     	;# 
  3028  088E                     	;# 
  3029  088F                     	;# 
  3030  0890                     	;# 
  3031  0891                     	;# 
  3032  0892                     	;# 
  3033  0893                     	;# 
  3034  0895                     	;# 
  3035  0896                     	;# 
  3036  0897                     	;# 
  3037  0898                     	;# 
  3038  0899                     	;# 
  3039  089A                     	;# 
  3040  089B                     	;# 
  3041  090C                     	;# 
  3042  090E                     	;# 
  3043  090F                     	;# 
  3044  091F                     	;# 
  3045  091F                     	;# 
  3046  098F                     	;# 
  3047  098F                     	;# 
  3048  0990                     	;# 
  3049  0991                     	;# 
  3050  0992                     	;# 
  3051  0993                     	;# 
  3052  0994                     	;# 
  3053  0995                     	;# 
  3054  0996                     	;# 
  3055  0997                     	;# 
  3056  0E0F                     	;# 
  3057  0E10                     	;# 
  3058  0E11                     	;# 
  3059  0E12                     	;# 
  3060  0E13                     	;# 
  3061  0E14                     	;# 
  3062  0E15                     	;# 
  3063  0E16                     	;# 
  3064  0E17                     	;# 
  3065  0E18                     	;# 
  3066  0E19                     	;# 
  3067  0E1A                     	;# 
  3068  0E1B                     	;# 
  3069  0E1C                     	;# 
  3070  0E1D                     	;# 
  3071  0E1E                     	;# 
  3072  0E1F                     	;# 
  3073  0E20                     	;# 
  3074  0E21                     	;# 
  3075  0E22                     	;# 
  3076  0E23                     	;# 
  3077  0E24                     	;# 
  3078  0E25                     	;# 
  3079  0E26                     	;# 
  3080  0E27                     	;# 
  3081  0E28                     	;# 
  3082  0E29                     	;# 
  3083  0E2A                     	;# 
  3084  0E2B                     	;# 
  3085  0E2C                     	;# 
  3086  0E2D                     	;# 
  3087  0E2E                     	;# 
  3088  0E2F                     	;# 
  3089  0E30                     	;# 
  3090  0E31                     	;# 
  3091  0E32                     	;# 
  3092  0E33                     	;# 
  3093  0E34                     	;# 
  3094  0E35                     	;# 
  3095  0E36                     	;# 
  3096  0E37                     	;# 
  3097  0E8F                     	;# 
  3098  0E90                     	;# 
  3099  0E91                     	;# 
  3100  0E92                     	;# 
  3101  0E93                     	;# 
  3102  0E94                     	;# 
  3103  0E95                     	;# 
  3104  0E96                     	;# 
  3105  0E97                     	;# 
  3106  0E9C                     	;# 
  3107  0E9D                     	;# 
  3108  0E9E                     	;# 
  3109  0EA1                     	;# 
  3110  0EA2                     	;# 
  3111  0EA3                     	;# 
  3112  0EA4                     	;# 
  3113  0EA5                     	;# 
  3114  0EA9                     	;# 
  3115  0EAA                     	;# 
  3116  0EAB                     	;# 
  3117  0EAC                     	;# 
  3118  0EB1                     	;# 
  3119  0EB2                     	;# 
  3120  0EB3                     	;# 
  3121  0EB8                     	;# 
  3122  0EB9                     	;# 
  3123  0EBA                     	;# 
  3124  0EBB                     	;# 
  3125  0EBC                     	;# 
  3126  0EBD                     	;# 
  3127  0EBE                     	;# 
  3128  0EC3                     	;# 
  3129  0EC5                     	;# 
  3130  0EC6                     	;# 
  3131  0EC7                     	;# 
  3132  0EC8                     	;# 
  3133  0EC9                     	;# 
  3134  0ECA                     	;# 
  3135  0ECB                     	;# 
  3136  0ECC                     	;# 
  3137  0F10                     	;# 
  3138  0F11                     	;# 
  3139  0F12                     	;# 
  3140  0F13                     	;# 
  3141  0F14                     	;# 
  3142  0F15                     	;# 
  3143  0F16                     	;# 
  3144  0F17                     	;# 
  3145  0F18                     	;# 
  3146  0F19                     	;# 
  3147  0F1A                     	;# 
  3148  0F1B                     	;# 
  3149  0F1C                     	;# 
  3150  0F1D                     	;# 
  3151  0F1E                     	;# 
  3152  0F1F                     	;# 
  3153  0F20                     	;# 
  3154  0F21                     	;# 
  3155  0F22                     	;# 
  3156  0F23                     	;# 
  3157  0F24                     	;# 
  3158  0F25                     	;# 
  3159  0F26                     	;# 
  3160  0F27                     	;# 
  3161  0F38                     	;# 
  3162  0F39                     	;# 
  3163  0F3A                     	;# 
  3164  0F3B                     	;# 
  3165  0F3C                     	;# 
  3166  0F3D                     	;# 
  3167  0F3E                     	;# 
  3168  0F3F                     	;# 
  3169  0F40                     	;# 
  3170  0F41                     	;# 
  3171  0F43                     	;# 
  3172  0F44                     	;# 
  3173  0F45                     	;# 
  3174  0F46                     	;# 
  3175  0F47                     	;# 
  3176  0F48                     	;# 
  3177  0F49                     	;# 
  3178  0F4A                     	;# 
  3179  0F4B                     	;# 
  3180  0F4C                     	;# 
  3181  0F4E                     	;# 
  3182  0F4F                     	;# 
  3183  0F50                     	;# 
  3184  0F51                     	;# 
  3185  0F52                     	;# 
  3186  0F53                     	;# 
  3187  0F54                     	;# 
  3188  0F55                     	;# 
  3189  0F56                     	;# 
  3190  0F57                     	;# 
  3191  0F65                     	;# 
  3192  0F68                     	;# 
  3193  0F69                     	;# 
  3194  0F6A                     	;# 
  3195  0F6B                     	;# 
  3196  0FE4                     	;# 
  3197  0FE5                     	;# 
  3198  0FE6                     	;# 
  3199  0FE7                     	;# 
  3200  0FE8                     	;# 
  3201  0FE9                     	;# 
  3202  0FEA                     	;# 
  3203  0FEB                     	;# 
  3204  0FED                     	;# 
  3205  0FEE                     	;# 
  3206  0FEF                     	;# 
  3207  0000                     	;# 
  3208  0001                     	;# 
  3209  0002                     	;# 
  3210  0003                     	;# 
  3211  0004                     	;# 
  3212  0005                     	;# 
  3213  0006                     	;# 
  3214  0007                     	;# 
  3215  0008                     	;# 
  3216  0009                     	;# 
  3217  000A                     	;# 
  3218  000B                     	;# 
  3219  000C                     	;# 
  3220  000D                     	;# 
  3221  000E                     	;# 
  3222  0010                     	;# 
  3223  0011                     	;# 
  3224  0012                     	;# 
  3225  0013                     	;# 
  3226  0016                     	;# 
  3227  0017                     	;# 
  3228  0018                     	;# 
  3229  001C                     	;# 
  3230  001C                     	;# 
  3231  001D                     	;# 
  3232  001D                     	;# 
  3233  001E                     	;# 
  3234  001F                     	;# 
  3235  008C                     	;# 
  3236  008C                     	;# 
  3237  008D                     	;# 
  3238  008E                     	;# 
  3239  008E                     	;# 
  3240  008F                     	;# 
  3241  0090                     	;# 
  3242  0090                     	;# 
  3243  0091                     	;# 
  3244  0093                     	;# 
  3245  0094                     	;# 
  3246  0095                     	;# 
  3247  0096                     	;# 
  3248  0097                     	;# 
  3249  0098                     	;# 
  3250  0099                     	;# 
  3251  009A                     	;# 
  3252  009B                     	;# 
  3253  009C                     	;# 
  3254  009D                     	;# 
  3255  009E                     	;# 
  3256  010C                     	;# 
  3257  010D                     	;# 
  3258  010E                     	;# 
  3259  010E                     	;# 
  3260  010F                     	;# 
  3261  0110                     	;# 
  3262  0110                     	;# 
  3263  0111                     	;# 
  3264  0112                     	;# 
  3265  0112                     	;# 
  3266  0113                     	;# 
  3267  0114                     	;# 
  3268  0114                     	;# 
  3269  0115                     	;# 
  3270  0116                     	;# 
  3271  0116                     	;# 
  3272  0117                     	;# 
  3273  0119                     	;# 
  3274  0119                     	;# 
  3275  0119                     	;# 
  3276  011A                     	;# 
  3277  011A                     	;# 
  3278  011A                     	;# 
  3279  011B                     	;# 
  3280  011B                     	;# 
  3281  011B                     	;# 
  3282  011B                     	;# 
  3283  011B                     	;# 
  3284  011C                     	;# 
  3285  011C                     	;# 
  3286  011C                     	;# 
  3287  011D                     	;# 
  3288  011D                     	;# 
  3289  011D                     	;# 
  3290  011E                     	;# 
  3291  011E                     	;# 
  3292  011E                     	;# 
  3293  011F                     	;# 
  3294  011F                     	;# 
  3295  011F                     	;# 
  3296  011F                     	;# 
  3297  011F                     	;# 
  3298  018C                     	;# 
  3299  018D                     	;# 
  3300  018E                     	;# 
  3301  018F                     	;# 
  3302  0190                     	;# 
  3303  0191                     	;# 
  3304  0192                     	;# 
  3305  0196                     	;# 
  3306  0197                     	;# 
  3307  0198                     	;# 
  3308  0199                     	;# 
  3309  019A                     	;# 
  3310  019B                     	;# 
  3311  019C                     	;# 
  3312  020C                     	;# 
  3313  020C                     	;# 
  3314  020D                     	;# 
  3315  020E                     	;# 
  3316  020F                     	;# 
  3317  020F                     	;# 
  3318  0210                     	;# 
  3319  0210                     	;# 
  3320  0211                     	;# 
  3321  0211                     	;# 
  3322  0212                     	;# 
  3323  0212                     	;# 
  3324  0213                     	;# 
  3325  0214                     	;# 
  3326  0215                     	;# 
  3327  0215                     	;# 
  3328  0216                     	;# 
  3329  0216                     	;# 
  3330  0217                     	;# 
  3331  0217                     	;# 
  3332  0218                     	;# 
  3333  0218                     	;# 
  3334  0219                     	;# 
  3335  021A                     	;# 
  3336  021B                     	;# 
  3337  021B                     	;# 
  3338  021C                     	;# 
  3339  021C                     	;# 
  3340  021D                     	;# 
  3341  021D                     	;# 
  3342  021E                     	;# 
  3343  021F                     	;# 
  3344  028C                     	;# 
  3345  028C                     	;# 
  3346  028D                     	;# 
  3347  028D                     	;# 
  3348  028E                     	;# 
  3349  028F                     	;# 
  3350  0290                     	;# 
  3351  0290                     	;# 
  3352  0291                     	;# 
  3353  0292                     	;# 
  3354  0292                     	;# 
  3355  0293                     	;# 
  3356  0293                     	;# 
  3357  0294                     	;# 
  3358  0295                     	;# 
  3359  0296                     	;# 
  3360  0296                     	;# 
  3361  0297                     	;# 
  3362  0298                     	;# 
  3363  0298                     	;# 
  3364  0299                     	;# 
  3365  0299                     	;# 
  3366  029A                     	;# 
  3367  029B                     	;# 
  3368  029C                     	;# 
  3369  029C                     	;# 
  3370  029D                     	;# 
  3371  030C                     	;# 
  3372  030C                     	;# 
  3373  030D                     	;# 
  3374  030E                     	;# 
  3375  030F                     	;# 
  3376  0310                     	;# 
  3377  0310                     	;# 
  3378  0311                     	;# 
  3379  0312                     	;# 
  3380  0313                     	;# 
  3381  0314                     	;# 
  3382  0314                     	;# 
  3383  0315                     	;# 
  3384  0316                     	;# 
  3385  0317                     	;# 
  3386  0318                     	;# 
  3387  0318                     	;# 
  3388  0319                     	;# 
  3389  031A                     	;# 
  3390  031B                     	;# 
  3391  031C                     	;# 
  3392  031C                     	;# 
  3393  031D                     	;# 
  3394  031E                     	;# 
  3395  031F                     	;# 
  3396  038C                     	;# 
  3397  038D                     	;# 
  3398  038E                     	;# 
  3399  0390                     	;# 
  3400  0391                     	;# 
  3401  0392                     	;# 
  3402  040C                     	;# 
  3403  040D                     	;# 
  3404  040E                     	;# 
  3405  040F                     	;# 
  3406  0410                     	;# 
  3407  0411                     	;# 
  3408  0416                     	;# 
  3409  0416                     	;# 
  3410  0417                     	;# 
  3411  0418                     	;# 
  3412  0418                     	;# 
  3413  0419                     	;# 
  3414  041A                     	;# 
  3415  041A                     	;# 
  3416  041B                     	;# 
  3417  041C                     	;# 
  3418  041C                     	;# 
  3419  041D                     	;# 
  3420  041E                     	;# 
  3421  041F                     	;# 
  3422  048C                     	;# 
  3423  048C                     	;# 
  3424  048D                     	;# 
  3425  048E                     	;# 
  3426  048F                     	;# 
  3427  048F                     	;# 
  3428  0490                     	;# 
  3429  0491                     	;# 
  3430  0492                     	;# 
  3431  0492                     	;# 
  3432  0493                     	;# 
  3433  0494                     	;# 
  3434  0495                     	;# 
  3435  0495                     	;# 
  3436  0496                     	;# 
  3437  0497                     	;# 
  3438  0498                     	;# 
  3439  0499                     	;# 
  3440  049A                     	;# 
  3441  049B                     	;# 
  3442  049C                     	;# 
  3443  049D                     	;# 
  3444  050C                     	;# 
  3445  050C                     	;# 
  3446  050D                     	;# 
  3447  050E                     	;# 
  3448  050F                     	;# 
  3449  050F                     	;# 
  3450  0510                     	;# 
  3451  0511                     	;# 
  3452  0512                     	;# 
  3453  0512                     	;# 
  3454  0513                     	;# 
  3455  0514                     	;# 
  3456  0515                     	;# 
  3457  0515                     	;# 
  3458  0516                     	;# 
  3459  0517                     	;# 
  3460  0518                     	;# 
  3461  0519                     	;# 
  3462  051A                     	;# 
  3463  051B                     	;# 
  3464  051C                     	;# 
  3465  051D                     	;# 
  3466  058C                     	;# 
  3467  058C                     	;# 
  3468  058D                     	;# 
  3469  058E                     	;# 
  3470  058F                     	;# 
  3471  058F                     	;# 
  3472  0590                     	;# 
  3473  0591                     	;# 
  3474  0592                     	;# 
  3475  0593                     	;# 
  3476  060C                     	;# 
  3477  060D                     	;# 
  3478  060E                     	;# 
  3479  060F                     	;# 
  3480  0610                     	;# 
  3481  0611                     	;# 
  3482  0612                     	;# 
  3483  0613                     	;# 
  3484  0614                     	;# 
  3485  0616                     	;# 
  3486  0617                     	;# 
  3487  0618                     	;# 
  3488  0619                     	;# 
  3489  061A                     	;# 
  3490  061B                     	;# 
  3491  061C                     	;# 
  3492  061D                     	;# 
  3493  061E                     	;# 
  3494  068C                     	;# 
  3495  068D                     	;# 
  3496  068E                     	;# 
  3497  068F                     	;# 
  3498  0690                     	;# 
  3499  0691                     	;# 
  3500  0692                     	;# 
  3501  0693                     	;# 
  3502  0694                     	;# 
  3503  070C                     	;# 
  3504  070D                     	;# 
  3505  070E                     	;# 
  3506  070F                     	;# 
  3507  0710                     	;# 
  3508  0711                     	;# 
  3509  0712                     	;# 
  3510  0713                     	;# 
  3511  0714                     	;# 
  3512  0716                     	;# 
  3513  0717                     	;# 
  3514  0718                     	;# 
  3515  0719                     	;# 
  3516  071A                     	;# 
  3517  071B                     	;# 
  3518  071C                     	;# 
  3519  071D                     	;# 
  3520  071E                     	;# 
  3521  0796                     	;# 
  3522  0797                     	;# 
  3523  0798                     	;# 
  3524  0799                     	;# 
  3525  079A                     	;# 
  3526  079B                     	;# 
  3527  080C                     	;# 
  3528  080D                     	;# 
  3529  080E                     	;# 
  3530  080F                     	;# 
  3531  0810                     	;# 
  3532  0811                     	;# 
  3533  0812                     	;# 
  3534  0813                     	;# 
  3535  0814                     	;# 
  3536  081A                     	;# 
  3537  081B                     	;# 
  3538  081C                     	;# 
  3539  081D                     	;# 
  3540  081E                     	;# 
  3541  081F                     	;# 
  3542  088C                     	;# 
  3543  088D                     	;# 
  3544  088E                     	;# 
  3545  088F                     	;# 
  3546  0890                     	;# 
  3547  0891                     	;# 
  3548  0892                     	;# 
  3549  0893                     	;# 
  3550  0895                     	;# 
  3551  0896                     	;# 
  3552  0897                     	;# 
  3553  0898                     	;# 
  3554  0899                     	;# 
  3555  089A                     	;# 
  3556  089B                     	;# 
  3557  090C                     	;# 
  3558  090E                     	;# 
  3559  090F                     	;# 
  3560  091F                     	;# 
  3561  091F                     	;# 
  3562  098F                     	;# 
  3563  098F                     	;# 
  3564  0990                     	;# 
  3565  0991                     	;# 
  3566  0992                     	;# 
  3567  0993                     	;# 
  3568  0994                     	;# 
  3569  0995                     	;# 
  3570  0996                     	;# 
  3571  0997                     	;# 
  3572  0E0F                     	;# 
  3573  0E10                     	;# 
  3574  0E11                     	;# 
  3575  0E12                     	;# 
  3576  0E13                     	;# 
  3577  0E14                     	;# 
  3578  0E15                     	;# 
  3579  0E16                     	;# 
  3580  0E17                     	;# 
  3581  0E18                     	;# 
  3582  0E19                     	;# 
  3583  0E1A                     	;# 
  3584  0E1B                     	;# 
  3585  0E1C                     	;# 
  3586  0E1D                     	;# 
  3587  0E1E                     	;# 
  3588  0E1F                     	;# 
  3589  0E20                     	;# 
  3590  0E21                     	;# 
  3591  0E22                     	;# 
  3592  0E23                     	;# 
  3593  0E24                     	;# 
  3594  0E25                     	;# 
  3595  0E26                     	;# 
  3596  0E27                     	;# 
  3597  0E28                     	;# 
  3598  0E29                     	;# 
  3599  0E2A                     	;# 
  3600  0E2B                     	;# 
  3601  0E2C                     	;# 
  3602  0E2D                     	;# 
  3603  0E2E                     	;# 
  3604  0E2F                     	;# 
  3605  0E30                     	;# 
  3606  0E31                     	;# 
  3607  0E32                     	;# 
  3608  0E33                     	;# 
  3609  0E34                     	;# 
  3610  0E35                     	;# 
  3611  0E36                     	;# 
  3612  0E37                     	;# 
  3613  0E8F                     	;# 
  3614  0E90                     	;# 
  3615  0E91                     	;# 
  3616  0E92                     	;# 
  3617  0E93                     	;# 
  3618  0E94                     	;# 
  3619  0E95                     	;# 
  3620  0E96                     	;# 
  3621  0E97                     	;# 
  3622  0E9C                     	;# 
  3623  0E9D                     	;# 
  3624  0E9E                     	;# 
  3625  0EA1                     	;# 
  3626  0EA2                     	;# 
  3627  0EA3                     	;# 
  3628  0EA4                     	;# 
  3629  0EA5                     	;# 
  3630  0EA9                     	;# 
  3631  0EAA                     	;# 
  3632  0EAB                     	;# 
  3633  0EAC                     	;# 
  3634  0EB1                     	;# 
  3635  0EB2                     	;# 
  3636  0EB3                     	;# 
  3637  0EB8                     	;# 
  3638  0EB9                     	;# 
  3639  0EBA                     	;# 
  3640  0EBB                     	;# 
  3641  0EBC                     	;# 
  3642  0EBD                     	;# 
  3643  0EBE                     	;# 
  3644  0EC3                     	;# 
  3645  0EC5                     	;# 
  3646  0EC6                     	;# 
  3647  0EC7                     	;# 
  3648  0EC8                     	;# 
  3649  0EC9                     	;# 
  3650  0ECA                     	;# 
  3651  0ECB                     	;# 
  3652  0ECC                     	;# 
  3653  0F10                     	;# 
  3654  0F11                     	;# 
  3655  0F12                     	;# 
  3656  0F13                     	;# 
  3657  0F14                     	;# 
  3658  0F15                     	;# 
  3659  0F16                     	;# 
  3660  0F17                     	;# 
  3661  0F18                     	;# 
  3662  0F19                     	;# 
  3663  0F1A                     	;# 
  3664  0F1B                     	;# 
  3665  0F1C                     	;# 
  3666  0F1D                     	;# 
  3667  0F1E                     	;# 
  3668  0F1F                     	;# 
  3669  0F20                     	;# 
  3670  0F21                     	;# 
  3671  0F22                     	;# 
  3672  0F23                     	;# 
  3673  0F24                     	;# 
  3674  0F25                     	;# 
  3675  0F26                     	;# 
  3676  0F27                     	;# 
  3677  0F38                     	;# 
  3678  0F39                     	;# 
  3679  0F3A                     	;# 
  3680  0F3B                     	;# 
  3681  0F3C                     	;# 
  3682  0F3D                     	;# 
  3683  0F3E                     	;# 
  3684  0F3F                     	;# 
  3685  0F40                     	;# 
  3686  0F41                     	;# 
  3687  0F43                     	;# 
  3688  0F44                     	;# 
  3689  0F45                     	;# 
  3690  0F46                     	;# 
  3691  0F47                     	;# 
  3692  0F48                     	;# 
  3693  0F49                     	;# 
  3694  0F4A                     	;# 
  3695  0F4B                     	;# 
  3696  0F4C                     	;# 
  3697  0F4E                     	;# 
  3698  0F4F                     	;# 
  3699  0F50                     	;# 
  3700  0F51                     	;# 
  3701  0F52                     	;# 
  3702  0F53                     	;# 
  3703  0F54                     	;# 
  3704  0F55                     	;# 
  3705  0F56                     	;# 
  3706  0F57                     	;# 
  3707  0F65                     	;# 
  3708  0F68                     	;# 
  3709  0F69                     	;# 
  3710  0F6A                     	;# 
  3711  0F6B                     	;# 
  3712  0FE4                     	;# 
  3713  0FE5                     	;# 
  3714  0FE6                     	;# 
  3715  0FE7                     	;# 
  3716  0FE8                     	;# 
  3717  0FE9                     	;# 
  3718  0FEA                     	;# 
  3719  0FEB                     	;# 
  3720  0FED                     	;# 
  3721  0FEE                     	;# 
  3722  0FEF                     	;# 
  3723  0000                     	;# 
  3724  0001                     	;# 
  3725  0002                     	;# 
  3726  0003                     	;# 
  3727  0004                     	;# 
  3728  0005                     	;# 
  3729  0006                     	;# 
  3730  0007                     	;# 
  3731  0008                     	;# 
  3732  0009                     	;# 
  3733  000A                     	;# 
  3734  000B                     	;# 
  3735  000C                     	;# 
  3736  000D                     	;# 
  3737  000E                     	;# 
  3738  0010                     	;# 
  3739  0011                     	;# 
  3740  0012                     	;# 
  3741  0013                     	;# 
  3742  0016                     	;# 
  3743  0017                     	;# 
  3744  0018                     	;# 
  3745  001C                     	;# 
  3746  001C                     	;# 
  3747  001D                     	;# 
  3748  001D                     	;# 
  3749  001E                     	;# 
  3750  001F                     	;# 
  3751  008C                     	;# 
  3752  008C                     	;# 
  3753  008D                     	;# 
  3754  008E                     	;# 
  3755  008E                     	;# 
  3756  008F                     	;# 
  3757  0090                     	;# 
  3758  0090                     	;# 
  3759  0091                     	;# 
  3760  0093                     	;# 
  3761  0094                     	;# 
  3762  0095                     	;# 
  3763  0096                     	;# 
  3764  0097                     	;# 
  3765  0098                     	;# 
  3766  0099                     	;# 
  3767  009A                     	;# 
  3768  009B                     	;# 
  3769  009C                     	;# 
  3770  009D                     	;# 
  3771  009E                     	;# 
  3772  010C                     	;# 
  3773  010D                     	;# 
  3774  010E                     	;# 
  3775  010E                     	;# 
  3776  010F                     	;# 
  3777  0110                     	;# 
  3778  0110                     	;# 
  3779  0111                     	;# 
  3780  0112                     	;# 
  3781  0112                     	;# 
  3782  0113                     	;# 
  3783  0114                     	;# 
  3784  0114                     	;# 
  3785  0115                     	;# 
  3786  0116                     	;# 
  3787  0116                     	;# 
  3788  0117                     	;# 
  3789  0119                     	;# 
  3790  0119                     	;# 
  3791  0119                     	;# 
  3792  011A                     	;# 
  3793  011A                     	;# 
  3794  011A                     	;# 
  3795  011B                     	;# 
  3796  011B                     	;# 
  3797  011B                     	;# 
  3798  011B                     	;# 
  3799  011B                     	;# 
  3800  011C                     	;# 
  3801  011C                     	;# 
  3802  011C                     	;# 
  3803  011D                     	;# 
  3804  011D                     	;# 
  3805  011D                     	;# 
  3806  011E                     	;# 
  3807  011E                     	;# 
  3808  011E                     	;# 
  3809  011F                     	;# 
  3810  011F                     	;# 
  3811  011F                     	;# 
  3812  011F                     	;# 
  3813  011F                     	;# 
  3814  018C                     	;# 
  3815  018D                     	;# 
  3816  018E                     	;# 
  3817  018F                     	;# 
  3818  0190                     	;# 
  3819  0191                     	;# 
  3820  0192                     	;# 
  3821  0196                     	;# 
  3822  0197                     	;# 
  3823  0198                     	;# 
  3824  0199                     	;# 
  3825  019A                     	;# 
  3826  019B                     	;# 
  3827  019C                     	;# 
  3828  020C                     	;# 
  3829  020C                     	;# 
  3830  020D                     	;# 
  3831  020E                     	;# 
  3832  020F                     	;# 
  3833  020F                     	;# 
  3834  0210                     	;# 
  3835  0210                     	;# 
  3836  0211                     	;# 
  3837  0211                     	;# 
  3838  0212                     	;# 
  3839  0212                     	;# 
  3840  0213                     	;# 
  3841  0214                     	;# 
  3842  0215                     	;# 
  3843  0215                     	;# 
  3844  0216                     	;# 
  3845  0216                     	;# 
  3846  0217                     	;# 
  3847  0217                     	;# 
  3848  0218                     	;# 
  3849  0218                     	;# 
  3850  0219                     	;# 
  3851  021A                     	;# 
  3852  021B                     	;# 
  3853  021B                     	;# 
  3854  021C                     	;# 
  3855  021C                     	;# 
  3856  021D                     	;# 
  3857  021D                     	;# 
  3858  021E                     	;# 
  3859  021F                     	;# 
  3860  028C                     	;# 
  3861  028C                     	;# 
  3862  028D                     	;# 
  3863  028D                     	;# 
  3864  028E                     	;# 
  3865  028F                     	;# 
  3866  0290                     	;# 
  3867  0290                     	;# 
  3868  0291                     	;# 
  3869  0292                     	;# 
  3870  0292                     	;# 
  3871  0293                     	;# 
  3872  0293                     	;# 
  3873  0294                     	;# 
  3874  0295                     	;# 
  3875  0296                     	;# 
  3876  0296                     	;# 
  3877  0297                     	;# 
  3878  0298                     	;# 
  3879  0298                     	;# 
  3880  0299                     	;# 
  3881  0299                     	;# 
  3882  029A                     	;# 
  3883  029B                     	;# 
  3884  029C                     	;# 
  3885  029C                     	;# 
  3886  029D                     	;# 
  3887  030C                     	;# 
  3888  030C                     	;# 
  3889  030D                     	;# 
  3890  030E                     	;# 
  3891  030F                     	;# 
  3892  0310                     	;# 
  3893  0310                     	;# 
  3894  0311                     	;# 
  3895  0312                     	;# 
  3896  0313                     	;# 
  3897  0314                     	;# 
  3898  0314                     	;# 
  3899  0315                     	;# 
  3900  0316                     	;# 
  3901  0317                     	;# 
  3902  0318                     	;# 
  3903  0318                     	;# 
  3904  0319                     	;# 
  3905  031A                     	;# 
  3906  031B                     	;# 
  3907  031C                     	;# 
  3908  031C                     	;# 
  3909  031D                     	;# 
  3910  031E                     	;# 
  3911  031F                     	;# 
  3912  038C                     	;# 
  3913  038D                     	;# 
  3914  038E                     	;# 
  3915  0390                     	;# 
  3916  0391                     	;# 
  3917  0392                     	;# 
  3918  040C                     	;# 
  3919  040D                     	;# 
  3920  040E                     	;# 
  3921  040F                     	;# 
  3922  0410                     	;# 
  3923  0411                     	;# 
  3924  0416                     	;# 
  3925  0416                     	;# 
  3926  0417                     	;# 
  3927  0418                     	;# 
  3928  0418                     	;# 
  3929  0419                     	;# 
  3930  041A                     	;# 
  3931  041A                     	;# 
  3932  041B                     	;# 
  3933  041C                     	;# 
  3934  041C                     	;# 
  3935  041D                     	;# 
  3936  041E                     	;# 
  3937  041F                     	;# 
  3938  048C                     	;# 
  3939  048C                     	;# 
  3940  048D                     	;# 
  3941  048E                     	;# 
  3942  048F                     	;# 
  3943  048F                     	;# 
  3944  0490                     	;# 
  3945  0491                     	;# 
  3946  0492                     	;# 
  3947  0492                     	;# 
  3948  0493                     	;# 
  3949  0494                     	;# 
  3950  0495                     	;# 
  3951  0495                     	;# 
  3952  0496                     	;# 
  3953  0497                     	;# 
  3954  0498                     	;# 
  3955  0499                     	;# 
  3956  049A                     	;# 
  3957  049B                     	;# 
  3958  049C                     	;# 
  3959  049D                     	;# 
  3960  050C                     	;# 
  3961  050C                     	;# 
  3962  050D                     	;# 
  3963  050E                     	;# 
  3964  050F                     	;# 
  3965  050F                     	;# 
  3966  0510                     	;# 
  3967  0511                     	;# 
  3968  0512                     	;# 
  3969  0512                     	;# 
  3970  0513                     	;# 
  3971  0514                     	;# 
  3972  0515                     	;# 
  3973  0515                     	;# 
  3974  0516                     	;# 
  3975  0517                     	;# 
  3976  0518                     	;# 
  3977  0519                     	;# 
  3978  051A                     	;# 
  3979  051B                     	;# 
  3980  051C                     	;# 
  3981  051D                     	;# 
  3982  058C                     	;# 
  3983  058C                     	;# 
  3984  058D                     	;# 
  3985  058E                     	;# 
  3986  058F                     	;# 
  3987  058F                     	;# 
  3988  0590                     	;# 
  3989  0591                     	;# 
  3990  0592                     	;# 
  3991  0593                     	;# 
  3992  060C                     	;# 
  3993  060D                     	;# 
  3994  060E                     	;# 
  3995  060F                     	;# 
  3996  0610                     	;# 
  3997  0611                     	;# 
  3998  0612                     	;# 
  3999  0613                     	;# 
  4000  0614                     	;# 
  4001  0616                     	;# 
  4002  0617                     	;# 
  4003  0618                     	;# 
  4004  0619                     	;# 
  4005  061A                     	;# 
  4006  061B                     	;# 
  4007  061C                     	;# 
  4008  061D                     	;# 
  4009  061E                     	;# 
  4010  068C                     	;# 
  4011  068D                     	;# 
  4012  068E                     	;# 
  4013  068F                     	;# 
  4014  0690                     	;# 
  4015  0691                     	;# 
  4016  0692                     	;# 
  4017  0693                     	;# 
  4018  0694                     	;# 
  4019  070C                     	;# 
  4020  070D                     	;# 
  4021  070E                     	;# 
  4022  070F                     	;# 
  4023  0710                     	;# 
  4024  0711                     	;# 
  4025  0712                     	;# 
  4026  0713                     	;# 
  4027  0714                     	;# 
  4028  0716                     	;# 
  4029  0717                     	;# 
  4030  0718                     	;# 
  4031  0719                     	;# 
  4032  071A                     	;# 
  4033  071B                     	;# 
  4034  071C                     	;# 
  4035  071D                     	;# 
  4036  071E                     	;# 
  4037  0796                     	;# 
  4038  0797                     	;# 
  4039  0798                     	;# 
  4040  0799                     	;# 
  4041  079A                     	;# 
  4042  079B                     	;# 
  4043  080C                     	;# 
  4044  080D                     	;# 
  4045  080E                     	;# 
  4046  080F                     	;# 
  4047  0810                     	;# 
  4048  0811                     	;# 
  4049  0812                     	;# 
  4050  0813                     	;# 
  4051  0814                     	;# 
  4052  081A                     	;# 
  4053  081B                     	;# 
  4054  081C                     	;# 
  4055  081D                     	;# 
  4056  081E                     	;# 
  4057  081F                     	;# 
  4058  088C                     	;# 
  4059  088D                     	;# 
  4060  088E                     	;# 
  4061  088F                     	;# 
  4062  0890                     	;# 
  4063  0891                     	;# 
  4064  0892                     	;# 
  4065  0893                     	;# 
  4066  0895                     	;# 
  4067  0896                     	;# 
  4068  0897                     	;# 
  4069  0898                     	;# 
  4070  0899                     	;# 
  4071  089A                     	;# 
  4072  089B                     	;# 
  4073  090C                     	;# 
  4074  090E                     	;# 
  4075  090F                     	;# 
  4076  091F                     	;# 
  4077  091F                     	;# 
  4078  098F                     	;# 
  4079  098F                     	;# 
  4080  0990                     	;# 
  4081  0991                     	;# 
  4082  0992                     	;# 
  4083  0993                     	;# 
  4084  0994                     	;# 
  4085  0995                     	;# 
  4086  0996                     	;# 
  4087  0997                     	;# 
  4088  0E0F                     	;# 
  4089  0E10                     	;# 
  4090  0E11                     	;# 
  4091  0E12                     	;# 
  4092  0E13                     	;# 
  4093  0E14                     	;# 
  4094  0E15                     	;# 
  4095  0E16                     	;# 
  4096  0E17                     	;# 
  4097  0E18                     	;# 
  4098  0E19                     	;# 
  4099  0E1A                     	;# 
  4100  0E1B                     	;# 
  4101  0E1C                     	;# 
  4102  0E1D                     	;# 
  4103  0E1E                     	;# 
  4104  0E1F                     	;# 
  4105  0E20                     	;# 
  4106  0E21                     	;# 
  4107  0E22                     	;# 
  4108  0E23                     	;# 
  4109  0E24                     	;# 
  4110  0E25                     	;# 
  4111  0E26                     	;# 
  4112  0E27                     	;# 
  4113  0E28                     	;# 
  4114  0E29                     	;# 
  4115  0E2A                     	;# 
  4116  0E2B                     	;# 
  4117  0E2C                     	;# 
  4118  0E2D                     	;# 
  4119  0E2E                     	;# 
  4120  0E2F                     	;# 
  4121  0E30                     	;# 
  4122  0E31                     	;# 
  4123  0E32                     	;# 
  4124  0E33                     	;# 
  4125  0E34                     	;# 
  4126  0E35                     	;# 
  4127  0E36                     	;# 
  4128  0E37                     	;# 
  4129  0E8F                     	;# 
  4130  0E90                     	;# 
  4131  0E91                     	;# 
  4132  0E92                     	;# 
  4133  0E93                     	;# 
  4134  0E94                     	;# 
  4135  0E95                     	;# 
  4136  0E96                     	;# 
  4137  0E97                     	;# 
  4138  0E9C                     	;# 
  4139  0E9D                     	;# 
  4140  0E9E                     	;# 
  4141  0EA1                     	;# 
  4142  0EA2                     	;# 
  4143  0EA3                     	;# 
  4144  0EA4                     	;# 
  4145  0EA5                     	;# 
  4146  0EA9                     	;# 
  4147  0EAA                     	;# 
  4148  0EAB                     	;# 
  4149  0EAC                     	;# 
  4150  0EB1                     	;# 
  4151  0EB2                     	;# 
  4152  0EB3                     	;# 
  4153  0EB8                     	;# 
  4154  0EB9                     	;# 
  4155  0EBA                     	;# 
  4156  0EBB                     	;# 
  4157  0EBC                     	;# 
  4158  0EBD                     	;# 
  4159  0EBE                     	;# 
  4160  0EC3                     	;# 
  4161  0EC5                     	;# 
  4162  0EC6                     	;# 
  4163  0EC7                     	;# 
  4164  0EC8                     	;# 
  4165  0EC9                     	;# 
  4166  0ECA                     	;# 
  4167  0ECB                     	;# 
  4168  0ECC                     	;# 
  4169  0F10                     	;# 
  4170  0F11                     	;# 
  4171  0F12                     	;# 
  4172  0F13                     	;# 
  4173  0F14                     	;# 
  4174  0F15                     	;# 
  4175  0F16                     	;# 
  4176  0F17                     	;# 
  4177  0F18                     	;# 
  4178  0F19                     	;# 
  4179  0F1A                     	;# 
  4180  0F1B                     	;# 
  4181  0F1C                     	;# 
  4182  0F1D                     	;# 
  4183  0F1E                     	;# 
  4184  0F1F                     	;# 
  4185  0F20                     	;# 
  4186  0F21                     	;# 
  4187  0F22                     	;# 
  4188  0F23                     	;# 
  4189  0F24                     	;# 
  4190  0F25                     	;# 
  4191  0F26                     	;# 
  4192  0F27                     	;# 
  4193  0F38                     	;# 
  4194  0F39                     	;# 
  4195  0F3A                     	;# 
  4196  0F3B                     	;# 
  4197  0F3C                     	;# 
  4198  0F3D                     	;# 
  4199  0F3E                     	;# 
  4200  0F3F                     	;# 
  4201  0F40                     	;# 
  4202  0F41                     	;# 
  4203  0F43                     	;# 
  4204  0F44                     	;# 
  4205  0F45                     	;# 
  4206  0F46                     	;# 
  4207  0F47                     	;# 
  4208  0F48                     	;# 
  4209  0F49                     	;# 
  4210  0F4A                     	;# 
  4211  0F4B                     	;# 
  4212  0F4C                     	;# 
  4213  0F4E                     	;# 
  4214  0F4F                     	;# 
  4215  0F50                     	;# 
  4216  0F51                     	;# 
  4217  0F52                     	;# 
  4218  0F53                     	;# 
  4219  0F54                     	;# 
  4220  0F55                     	;# 
  4221  0F56                     	;# 
  4222  0F57                     	;# 
  4223  0F65                     	;# 
  4224  0F68                     	;# 
  4225  0F69                     	;# 
  4226  0F6A                     	;# 
  4227  0F6B                     	;# 
  4228  0FE4                     	;# 
  4229  0FE5                     	;# 
  4230  0FE6                     	;# 
  4231  0FE7                     	;# 
  4232  0FE8                     	;# 
  4233  0FE9                     	;# 
  4234  0FEA                     	;# 
  4235  0FEB                     	;# 
  4236  0FED                     	;# 
  4237  0FEE                     	;# 
  4238  0FEF                     	;# 
  4239  0000                     	;# 
  4240  0001                     	;# 
  4241  0002                     	;# 
  4242  0003                     	;# 
  4243  0004                     	;# 
  4244  0005                     	;# 
  4245  0006                     	;# 
  4246  0007                     	;# 
  4247  0008                     	;# 
  4248  0009                     	;# 
  4249  000A                     	;# 
  4250  000B                     	;# 
  4251  000C                     	;# 
  4252  000D                     	;# 
  4253  000E                     	;# 
  4254  0010                     	;# 
  4255  0011                     	;# 
  4256  0012                     	;# 
  4257  0013                     	;# 
  4258  0016                     	;# 
  4259  0017                     	;# 
  4260  0018                     	;# 
  4261  001C                     	;# 
  4262  001C                     	;# 
  4263  001D                     	;# 
  4264  001D                     	;# 
  4265  001E                     	;# 
  4266  001F                     	;# 
  4267  008C                     	;# 
  4268  008C                     	;# 
  4269  008D                     	;# 
  4270  008E                     	;# 
  4271  008E                     	;# 
  4272  008F                     	;# 
  4273  0090                     	;# 
  4274  0090                     	;# 
  4275  0091                     	;# 
  4276  0093                     	;# 
  4277  0094                     	;# 
  4278  0095                     	;# 
  4279  0096                     	;# 
  4280  0097                     	;# 
  4281  0098                     	;# 
  4282  0099                     	;# 
  4283  009A                     	;# 
  4284  009B                     	;# 
  4285  009C                     	;# 
  4286  009D                     	;# 
  4287  009E                     	;# 
  4288  010C                     	;# 
  4289  010D                     	;# 
  4290  010E                     	;# 
  4291  010E                     	;# 
  4292  010F                     	;# 
  4293  0110                     	;# 
  4294  0110                     	;# 
  4295  0111                     	;# 
  4296  0112                     	;# 
  4297  0112                     	;# 
  4298  0113                     	;# 
  4299  0114                     	;# 
  4300  0114                     	;# 
  4301  0115                     	;# 
  4302  0116                     	;# 
  4303  0116                     	;# 
  4304  0117                     	;# 
  4305  0119                     	;# 
  4306  0119                     	;# 
  4307  0119                     	;# 
  4308  011A                     	;# 
  4309  011A                     	;# 
  4310  011A                     	;# 
  4311  011B                     	;# 
  4312  011B                     	;# 
  4313  011B                     	;# 
  4314  011B                     	;# 
  4315  011B                     	;# 
  4316  011C                     	;# 
  4317  011C                     	;# 
  4318  011C                     	;# 
  4319  011D                     	;# 
  4320  011D                     	;# 
  4321  011D                     	;# 
  4322  011E                     	;# 
  4323  011E                     	;# 
  4324  011E                     	;# 
  4325  011F                     	;# 
  4326  011F                     	;# 
  4327  011F                     	;# 
  4328  011F                     	;# 
  4329  011F                     	;# 
  4330  018C                     	;# 
  4331  018D                     	;# 
  4332  018E                     	;# 
  4333  018F                     	;# 
  4334  0190                     	;# 
  4335  0191                     	;# 
  4336  0192                     	;# 
  4337  0196                     	;# 
  4338  0197                     	;# 
  4339  0198                     	;# 
  4340  0199                     	;# 
  4341  019A                     	;# 
  4342  019B                     	;# 
  4343  019C                     	;# 
  4344  020C                     	;# 
  4345  020C                     	;# 
  4346  020D                     	;# 
  4347  020E                     	;# 
  4348  020F                     	;# 
  4349  020F                     	;# 
  4350  0210                     	;# 
  4351  0210                     	;# 
  4352  0211                     	;# 
  4353  0211                     	;# 
  4354  0212                     	;# 
  4355  0212                     	;# 
  4356  0213                     	;# 
  4357  0214                     	;# 
  4358  0215                     	;# 
  4359  0215                     	;# 
  4360  0216                     	;# 
  4361  0216                     	;# 
  4362  0217                     	;# 
  4363  0217                     	;# 
  4364  0218                     	;# 
  4365  0218                     	;# 
  4366  0219                     	;# 
  4367  021A                     	;# 
  4368  021B                     	;# 
  4369  021B                     	;# 
  4370  021C                     	;# 
  4371  021C                     	;# 
  4372  021D                     	;# 
  4373  021D                     	;# 
  4374  021E                     	;# 
  4375  021F                     	;# 
  4376  028C                     	;# 
  4377  028C                     	;# 
  4378  028D                     	;# 
  4379  028D                     	;# 
  4380  028E                     	;# 
  4381  028F                     	;# 
  4382  0290                     	;# 
  4383  0290                     	;# 
  4384  0291                     	;# 
  4385  0292                     	;# 
  4386  0292                     	;# 
  4387  0293                     	;# 
  4388  0293                     	;# 
  4389  0294                     	;# 
  4390  0295                     	;# 
  4391  0296                     	;# 
  4392  0296                     	;# 
  4393  0297                     	;# 
  4394  0298                     	;# 
  4395  0298                     	;# 
  4396  0299                     	;# 
  4397  0299                     	;# 
  4398  029A                     	;# 
  4399  029B                     	;# 
  4400  029C                     	;# 
  4401  029C                     	;# 
  4402  029D                     	;# 
  4403  030C                     	;# 
  4404  030C                     	;# 
  4405  030D                     	;# 
  4406  030E                     	;# 
  4407  030F                     	;# 
  4408  0310                     	;# 
  4409  0310                     	;# 
  4410  0311                     	;# 
  4411  0312                     	;# 
  4412  0313                     	;# 
  4413  0314                     	;# 
  4414  0314                     	;# 
  4415  0315                     	;# 
  4416  0316                     	;# 
  4417  0317                     	;# 
  4418  0318                     	;# 
  4419  0318                     	;# 
  4420  0319                     	;# 
  4421  031A                     	;# 
  4422  031B                     	;# 
  4423  031C                     	;# 
  4424  031C                     	;# 
  4425  031D                     	;# 
  4426  031E                     	;# 
  4427  031F                     	;# 
  4428  038C                     	;# 
  4429  038D                     	;# 
  4430  038E                     	;# 
  4431  0390                     	;# 
  4432  0391                     	;# 
  4433  0392                     	;# 
  4434  040C                     	;# 
  4435  040D                     	;# 
  4436  040E                     	;# 
  4437  040F                     	;# 
  4438  0410                     	;# 
  4439  0411                     	;# 
  4440  0416                     	;# 
  4441  0416                     	;# 
  4442  0417                     	;# 
  4443  0418                     	;# 
  4444  0418                     	;# 
  4445  0419                     	;# 
  4446  041A                     	;# 
  4447  041A                     	;# 
  4448  041B                     	;# 
  4449  041C                     	;# 
  4450  041C                     	;# 
  4451  041D                     	;# 
  4452  041E                     	;# 
  4453  041F                     	;# 
  4454  048C                     	;# 
  4455  048C                     	;# 
  4456  048D                     	;# 
  4457  048E                     	;# 
  4458  048F                     	;# 
  4459  048F                     	;# 
  4460  0490                     	;# 
  4461  0491                     	;# 
  4462  0492                     	;# 
  4463  0492                     	;# 
  4464  0493                     	;# 
  4465  0494                     	;# 
  4466  0495                     	;# 
  4467  0495                     	;# 
  4468  0496                     	;# 
  4469  0497                     	;# 
  4470  0498                     	;# 
  4471  0499                     	;# 
  4472  049A                     	;# 
  4473  049B                     	;# 
  4474  049C                     	;# 
  4475  049D                     	;# 
  4476  050C                     	;# 
  4477  050C                     	;# 
  4478  050D                     	;# 
  4479  050E                     	;# 
  4480  050F                     	;# 
  4481  050F                     	;# 
  4482  0510                     	;# 
  4483  0511                     	;# 
  4484  0512                     	;# 
  4485  0512                     	;# 
  4486  0513                     	;# 
  4487  0514                     	;# 
  4488  0515                     	;# 
  4489  0515                     	;# 
  4490  0516                     	;# 
  4491  0517                     	;# 
  4492  0518                     	;# 
  4493  0519                     	;# 
  4494  051A                     	;# 
  4495  051B                     	;# 
  4496  051C                     	;# 
  4497  051D                     	;# 
  4498  058C                     	;# 
  4499  058C                     	;# 
  4500  058D                     	;# 
  4501  058E                     	;# 
  4502  058F                     	;# 
  4503  058F                     	;# 
  4504  0590                     	;# 
  4505  0591                     	;# 
  4506  0592                     	;# 
  4507  0593                     	;# 
  4508  060C                     	;# 
  4509  060D                     	;# 
  4510  060E                     	;# 
  4511  060F                     	;# 
  4512  0610                     	;# 
  4513  0611                     	;# 
  4514  0612                     	;# 
  4515  0613                     	;# 
  4516  0614                     	;# 
  4517  0616                     	;# 
  4518  0617                     	;# 
  4519  0618                     	;# 
  4520  0619                     	;# 
  4521  061A                     	;# 
  4522  061B                     	;# 
  4523  061C                     	;# 
  4524  061D                     	;# 
  4525  061E                     	;# 
  4526  068C                     	;# 
  4527  068D                     	;# 
  4528  068E                     	;# 
  4529  068F                     	;# 
  4530  0690                     	;# 
  4531  0691                     	;# 
  4532  0692                     	;# 
  4533  0693                     	;# 
  4534  0694                     	;# 
  4535  070C                     	;# 
  4536  070D                     	;# 
  4537  070E                     	;# 
  4538  070F                     	;# 
  4539  0710                     	;# 
  4540  0711                     	;# 
  4541  0712                     	;# 
  4542  0713                     	;# 
  4543  0714                     	;# 
  4544  0716                     	;# 
  4545  0717                     	;# 
  4546  0718                     	;# 
  4547  0719                     	;# 
  4548  071A                     	;# 
  4549  071B                     	;# 
  4550  071C                     	;# 
  4551  071D                     	;# 
  4552  071E                     	;# 
  4553  0796                     	;# 
  4554  0797                     	;# 
  4555  0798                     	;# 
  4556  0799                     	;# 
  4557  079A                     	;# 
  4558  079B                     	;# 
  4559  080C                     	;# 
  4560  080D                     	;# 
  4561  080E                     	;# 
  4562  080F                     	;# 
  4563  0810                     	;# 
  4564  0811                     	;# 
  4565  0812                     	;# 
  4566  0813                     	;# 
  4567  0814                     	;# 
  4568  081A                     	;# 
  4569  081B                     	;# 
  4570  081C                     	;# 
  4571  081D                     	;# 
  4572  081E                     	;# 
  4573  081F                     	;# 
  4574  088C                     	;# 
  4575  088D                     	;# 
  4576  088E                     	;# 
  4577  088F                     	;# 
  4578  0890                     	;# 
  4579  0891                     	;# 
  4580  0892                     	;# 
  4581  0893                     	;# 
  4582  0895                     	;# 
  4583  0896                     	;# 
  4584  0897                     	;# 
  4585  0898                     	;# 
  4586  0899                     	;# 
  4587  089A                     	;# 
  4588  089B                     	;# 
  4589  090C                     	;# 
  4590  090E                     	;# 
  4591  090F                     	;# 
  4592  091F                     	;# 
  4593  091F                     	;# 
  4594  098F                     	;# 
  4595  098F                     	;# 
  4596  0990                     	;# 
  4597  0991                     	;# 
  4598  0992                     	;# 
  4599  0993                     	;# 
  4600  0994                     	;# 
  4601  0995                     	;# 
  4602  0996                     	;# 
  4603  0997                     	;# 
  4604  0E0F                     	;# 
  4605  0E10                     	;# 
  4606  0E11                     	;# 
  4607  0E12                     	;# 
  4608  0E13                     	;# 
  4609  0E14                     	;# 
  4610  0E15                     	;# 
  4611  0E16                     	;# 
  4612  0E17                     	;# 
  4613  0E18                     	;# 
  4614  0E19                     	;# 
  4615  0E1A                     	;# 
  4616  0E1B                     	;# 
  4617  0E1C                     	;# 
  4618  0E1D                     	;# 
  4619  0E1E                     	;# 
  4620  0E1F                     	;# 
  4621  0E20                     	;# 
  4622  0E21                     	;# 
  4623  0E22                     	;# 
  4624  0E23                     	;# 
  4625  0E24                     	;# 
  4626  0E25                     	;# 
  4627  0E26                     	;# 
  4628  0E27                     	;# 
  4629  0E28                     	;# 
  4630  0E29                     	;# 
  4631  0E2A                     	;# 
  4632  0E2B                     	;# 
  4633  0E2C                     	;# 
  4634  0E2D                     	;# 
  4635  0E2E                     	;# 
  4636  0E2F                     	;# 
  4637  0E30                     	;# 
  4638  0E31                     	;# 
  4639  0E32                     	;# 
  4640  0E33                     	;# 
  4641  0E34                     	;# 
  4642  0E35                     	;# 
  4643  0E36                     	;# 
  4644  0E37                     	;# 
  4645  0E8F                     	;# 
  4646  0E90                     	;# 
  4647  0E91                     	;# 
  4648  0E92                     	;# 
  4649  0E93                     	;# 
  4650  0E94                     	;# 
  4651  0E95                     	;# 
  4652  0E96                     	;# 
  4653  0E97                     	;# 
  4654  0E9C                     	;# 
  4655  0E9D                     	;# 
  4656  0E9E                     	;# 
  4657  0EA1                     	;# 
  4658  0EA2                     	;# 
  4659  0EA3                     	;# 
  4660  0EA4                     	;# 
  4661  0EA5                     	;# 
  4662  0EA9                     	;# 
  4663  0EAA                     	;# 
  4664  0EAB                     	;# 
  4665  0EAC                     	;# 
  4666  0EB1                     	;# 
  4667  0EB2                     	;# 
  4668  0EB3                     	;# 
  4669  0EB8                     	;# 
  4670  0EB9                     	;# 
  4671  0EBA                     	;# 
  4672  0EBB                     	;# 
  4673  0EBC                     	;# 
  4674  0EBD                     	;# 
  4675  0EBE                     	;# 
  4676  0EC3                     	;# 
  4677  0EC5                     	;# 
  4678  0EC6                     	;# 
  4679  0EC7                     	;# 
  4680  0EC8                     	;# 
  4681  0EC9                     	;# 
  4682  0ECA                     	;# 
  4683  0ECB                     	;# 
  4684  0ECC                     	;# 
  4685  0F10                     	;# 
  4686  0F11                     	;# 
  4687  0F12                     	;# 
  4688  0F13                     	;# 
  4689  0F14                     	;# 
  4690  0F15                     	;# 
  4691  0F16                     	;# 
  4692  0F17                     	;# 
  4693  0F18                     	;# 
  4694  0F19                     	;# 
  4695  0F1A                     	;# 
  4696  0F1B                     	;# 
  4697  0F1C                     	;# 
  4698  0F1D                     	;# 
  4699  0F1E                     	;# 
  4700  0F1F                     	;# 
  4701  0F20                     	;# 
  4702  0F21                     	;# 
  4703  0F22                     	;# 
  4704  0F23                     	;# 
  4705  0F24                     	;# 
  4706  0F25                     	;# 
  4707  0F26                     	;# 
  4708  0F27                     	;# 
  4709  0F38                     	;# 
  4710  0F39                     	;# 
  4711  0F3A                     	;# 
  4712  0F3B                     	;# 
  4713  0F3C                     	;# 
  4714  0F3D                     	;# 
  4715  0F3E                     	;# 
  4716  0F3F                     	;# 
  4717  0F40                     	;# 
  4718  0F41                     	;# 
  4719  0F43                     	;# 
  4720  0F44                     	;# 
  4721  0F45                     	;# 
  4722  0F46                     	;# 
  4723  0F47                     	;# 
  4724  0F48                     	;# 
  4725  0F49                     	;# 
  4726  0F4A                     	;# 
  4727  0F4B                     	;# 
  4728  0F4C                     	;# 
  4729  0F4E                     	;# 
  4730  0F4F                     	;# 
  4731  0F50                     	;# 
  4732  0F51                     	;# 
  4733  0F52                     	;# 
  4734  0F53                     	;# 
  4735  0F54                     	;# 
  4736  0F55                     	;# 
  4737  0F56                     	;# 
  4738  0F57                     	;# 
  4739  0F65                     	;# 
  4740  0F68                     	;# 
  4741  0F69                     	;# 
  4742  0F6A                     	;# 
  4743  0F6B                     	;# 
  4744  0FE4                     	;# 
  4745  0FE5                     	;# 
  4746  0FE6                     	;# 
  4747  0FE7                     	;# 
  4748  0FE8                     	;# 
  4749  0FE9                     	;# 
  4750  0FEA                     	;# 
  4751  0FEB                     	;# 
  4752  0FED                     	;# 
  4753  0FEE                     	;# 
  4754  0FEF                     	;# 
  4755  0000                     	;# 
  4756  0001                     	;# 
  4757  0002                     	;# 
  4758  0003                     	;# 
  4759  0004                     	;# 
  4760  0005                     	;# 
  4761  0006                     	;# 
  4762  0007                     	;# 
  4763  0008                     	;# 
  4764  0009                     	;# 
  4765  000A                     	;# 
  4766  000B                     	;# 
  4767  000C                     	;# 
  4768  000D                     	;# 
  4769  000E                     	;# 
  4770  0010                     	;# 
  4771  0011                     	;# 
  4772  0012                     	;# 
  4773  0013                     	;# 
  4774  0016                     	;# 
  4775  0017                     	;# 
  4776  0018                     	;# 
  4777  001C                     	;# 
  4778  001C                     	;# 
  4779  001D                     	;# 
  4780  001D                     	;# 
  4781  001E                     	;# 
  4782  001F                     	;# 
  4783  008C                     	;# 
  4784  008C                     	;# 
  4785  008D                     	;# 
  4786  008E                     	;# 
  4787  008E                     	;# 
  4788  008F                     	;# 
  4789  0090                     	;# 
  4790  0090                     	;# 
  4791  0091                     	;# 
  4792  0093                     	;# 
  4793  0094                     	;# 
  4794  0095                     	;# 
  4795  0096                     	;# 
  4796  0097                     	;# 
  4797  0098                     	;# 
  4798  0099                     	;# 
  4799  009A                     	;# 
  4800  009B                     	;# 
  4801  009C                     	;# 
  4802  009D                     	;# 
  4803  009E                     	;# 
  4804  010C                     	;# 
  4805  010D                     	;# 
  4806  010E                     	;# 
  4807  010E                     	;# 
  4808  010F                     	;# 
  4809  0110                     	;# 
  4810  0110                     	;# 
  4811  0111                     	;# 
  4812  0112                     	;# 
  4813  0112                     	;# 
  4814  0113                     	;# 
  4815  0114                     	;# 
  4816  0114                     	;# 
  4817  0115                     	;# 
  4818  0116                     	;# 
  4819  0116                     	;# 
  4820  0117                     	;# 
  4821  0119                     	;# 
  4822  0119                     	;# 
  4823  0119                     	;# 
  4824  011A                     	;# 
  4825  011A                     	;# 
  4826  011A                     	;# 
  4827  011B                     	;# 
  4828  011B                     	;# 
  4829  011B                     	;# 
  4830  011B                     	;# 
  4831  011B                     	;# 
  4832  011C                     	;# 
  4833  011C                     	;# 
  4834  011C                     	;# 
  4835  011D                     	;# 
  4836  011D                     	;# 
  4837  011D                     	;# 
  4838  011E                     	;# 
  4839  011E                     	;# 
  4840  011E                     	;# 
  4841  011F                     	;# 
  4842  011F                     	;# 
  4843  011F                     	;# 
  4844  011F                     	;# 
  4845  011F                     	;# 
  4846  018C                     	;# 
  4847  018D                     	;# 
  4848  018E                     	;# 
  4849  018F                     	;# 
  4850  0190                     	;# 
  4851  0191                     	;# 
  4852  0192                     	;# 
  4853  0196                     	;# 
  4854  0197                     	;# 
  4855  0198                     	;# 
  4856  0199                     	;# 
  4857  019A                     	;# 
  4858  019B                     	;# 
  4859  019C                     	;# 
  4860  020C                     	;# 
  4861  020C                     	;# 
  4862  020D                     	;# 
  4863  020E                     	;# 
  4864  020F                     	;# 
  4865  020F                     	;# 
  4866  0210                     	;# 
  4867  0210                     	;# 
  4868  0211                     	;# 
  4869  0211                     	;# 
  4870  0212                     	;# 
  4871  0212                     	;# 
  4872  0213                     	;# 
  4873  0214                     	;# 
  4874  0215                     	;# 
  4875  0215                     	;# 
  4876  0216                     	;# 
  4877  0216                     	;# 
  4878  0217                     	;# 
  4879  0217                     	;# 
  4880  0218                     	;# 
  4881  0218                     	;# 
  4882  0219                     	;# 
  4883  021A                     	;# 
  4884  021B                     	;# 
  4885  021B                     	;# 
  4886  021C                     	;# 
  4887  021C                     	;# 
  4888  021D                     	;# 
  4889  021D                     	;# 
  4890  021E                     	;# 
  4891  021F                     	;# 
  4892  028C                     	;# 
  4893  028C                     	;# 
  4894  028D                     	;# 
  4895  028D                     	;# 
  4896  028E                     	;# 
  4897  028F                     	;# 
  4898  0290                     	;# 
  4899  0290                     	;# 
  4900  0291                     	;# 
  4901  0292                     	;# 
  4902  0292                     	;# 
  4903  0293                     	;# 
  4904  0293                     	;# 
  4905  0294                     	;# 
  4906  0295                     	;# 
  4907  0296                     	;# 
  4908  0296                     	;# 
  4909  0297                     	;# 
  4910  0298                     	;# 
  4911  0298                     	;# 
  4912  0299                     	;# 
  4913  0299                     	;# 
  4914  029A                     	;# 
  4915  029B                     	;# 
  4916  029C                     	;# 
  4917  029C                     	;# 
  4918  029D                     	;# 
  4919  030C                     	;# 
  4920  030C                     	;# 
  4921  030D                     	;# 
  4922  030E                     	;# 
  4923  030F                     	;# 
  4924  0310                     	;# 
  4925  0310                     	;# 
  4926  0311                     	;# 
  4927  0312                     	;# 
  4928  0313                     	;# 
  4929  0314                     	;# 
  4930  0314                     	;# 
  4931  0315                     	;# 
  4932  0316                     	;# 
  4933  0317                     	;# 
  4934  0318                     	;# 
  4935  0318                     	;# 
  4936  0319                     	;# 
  4937  031A                     	;# 
  4938  031B                     	;# 
  4939  031C                     	;# 
  4940  031C                     	;# 
  4941  031D                     	;# 
  4942  031E                     	;# 
  4943  031F                     	;# 
  4944  038C                     	;# 
  4945  038D                     	;# 
  4946  038E                     	;# 
  4947  0390                     	;# 
  4948  0391                     	;# 
  4949  0392                     	;# 
  4950  040C                     	;# 
  4951  040D                     	;# 
  4952  040E                     	;# 
  4953  040F                     	;# 
  4954  0410                     	;# 
  4955  0411                     	;# 
  4956  0416                     	;# 
  4957  0416                     	;# 
  4958  0417                     	;# 
  4959  0418                     	;# 
  4960  0418                     	;# 
  4961  0419                     	;# 
  4962  041A                     	;# 
  4963  041A                     	;# 
  4964  041B                     	;# 
  4965  041C                     	;# 
  4966  041C                     	;# 
  4967  041D                     	;# 
  4968  041E                     	;# 
  4969  041F                     	;# 
  4970  048C                     	;# 
  4971  048C                     	;# 
  4972  048D                     	;# 
  4973  048E                     	;# 
  4974  048F                     	;# 
  4975  048F                     	;# 
  4976  0490                     	;# 
  4977  0491                     	;# 
  4978  0492                     	;# 
  4979  0492                     	;# 
  4980  0493                     	;# 
  4981  0494                     	;# 
  4982  0495                     	;# 
  4983  0495                     	;# 
  4984  0496                     	;# 
  4985  0497                     	;# 
  4986  0498                     	;# 
  4987  0499                     	;# 
  4988  049A                     	;# 
  4989  049B                     	;# 
  4990  049C                     	;# 
  4991  049D                     	;# 
  4992  050C                     	;# 
  4993  050C                     	;# 
  4994  050D                     	;# 
  4995  050E                     	;# 
  4996  050F                     	;# 
  4997  050F                     	;# 
  4998  0510                     	;# 
  4999  0511                     	;# 
  5000  0512                     	;# 
  5001  0512                     	;# 
  5002  0513                     	;# 
  5003  0514                     	;# 
  5004  0515                     	;# 
  5005  0515                     	;# 
  5006  0516                     	;# 
  5007  0517                     	;# 
  5008  0518                     	;# 
  5009  0519                     	;# 
  5010  051A                     	;# 
  5011  051B                     	;# 
  5012  051C                     	;# 
  5013  051D                     	;# 
  5014  058C                     	;# 
  5015  058C                     	;# 
  5016  058D                     	;# 
  5017  058E                     	;# 
  5018  058F                     	;# 
  5019  058F                     	;# 
  5020  0590                     	;# 
  5021  0591                     	;# 
  5022  0592                     	;# 
  5023  0593                     	;# 
  5024  060C                     	;# 
  5025  060D                     	;# 
  5026  060E                     	;# 
  5027  060F                     	;# 
  5028  0610                     	;# 
  5029  0611                     	;# 
  5030  0612                     	;# 
  5031  0613                     	;# 
  5032  0614                     	;# 
  5033  0616                     	;# 
  5034  0617                     	;# 
  5035  0618                     	;# 
  5036  0619                     	;# 
  5037  061A                     	;# 
  5038  061B                     	;# 
  5039  061C                     	;# 
  5040  061D                     	;# 
  5041  061E                     	;# 
  5042  068C                     	;# 
  5043  068D                     	;# 
  5044  068E                     	;# 
  5045  068F                     	;# 
  5046  0690                     	;# 
  5047  0691                     	;# 
  5048  0692                     	;# 
  5049  0693                     	;# 
  5050  0694                     	;# 
  5051  070C                     	;# 
  5052  070D                     	;# 
  5053  070E                     	;# 
  5054  070F                     	;# 
  5055  0710                     	;# 
  5056  0711                     	;# 
  5057  0712                     	;# 
  5058  0713                     	;# 
  5059  0714                     	;# 
  5060  0716                     	;# 
  5061  0717                     	;# 
  5062  0718                     	;# 
  5063  0719                     	;# 
  5064  071A                     	;# 
  5065  071B                     	;# 
  5066  071C                     	;# 
  5067  071D                     	;# 
  5068  071E                     	;# 
  5069  0796                     	;# 
  5070  0797                     	;# 
  5071  0798                     	;# 
  5072  0799                     	;# 
  5073  079A                     	;# 
  5074  079B                     	;# 
  5075  080C                     	;# 
  5076  080D                     	;# 
  5077  080E                     	;# 
  5078  080F                     	;# 
  5079  0810                     	;# 
  5080  0811                     	;# 
  5081  0812                     	;# 
  5082  0813                     	;# 
  5083  0814                     	;# 
  5084  081A                     	;# 
  5085  081B                     	;# 
  5086  081C                     	;# 
  5087  081D                     	;# 
  5088  081E                     	;# 
  5089  081F                     	;# 
  5090  088C                     	;# 
  5091  088D                     	;# 
  5092  088E                     	;# 
  5093  088F                     	;# 
  5094  0890                     	;# 
  5095  0891                     	;# 
  5096  0892                     	;# 
  5097  0893                     	;# 
  5098  0895                     	;# 
  5099  0896                     	;# 
  5100  0897                     	;# 
  5101  0898                     	;# 
  5102  0899                     	;# 
  5103  089A                     	;# 
  5104  089B                     	;# 
  5105  090C                     	;# 
  5106  090E                     	;# 
  5107  090F                     	;# 
  5108  091F                     	;# 
  5109  091F                     	;# 
  5110  098F                     	;# 
  5111  098F                     	;# 
  5112  0990                     	;# 
  5113  0991                     	;# 
  5114  0992                     	;# 
  5115  0993                     	;# 
  5116  0994                     	;# 
  5117  0995                     	;# 
  5118  0996                     	;# 
  5119  0997                     	;# 
  5120  0E0F                     	;# 
  5121  0E10                     	;# 
  5122  0E11                     	;# 
  5123  0E12                     	;# 
  5124  0E13                     	;# 
  5125  0E14                     	;# 
  5126  0E15                     	;# 
  5127  0E16                     	;# 
  5128  0E17                     	;# 
  5129  0E18                     	;# 
  5130  0E19                     	;# 
  5131  0E1A                     	;# 
  5132  0E1B                     	;# 
  5133  0E1C                     	;# 
  5134  0E1D                     	;# 
  5135  0E1E                     	;# 
  5136  0E1F                     	;# 
  5137  0E20                     	;# 
  5138  0E21                     	;# 
  5139  0E22                     	;# 
  5140  0E23                     	;# 
  5141  0E24                     	;# 
  5142  0E25                     	;# 
  5143  0E26                     	;# 
  5144  0E27                     	;# 
  5145  0E28                     	;# 
  5146  0E29                     	;# 
  5147  0E2A                     	;# 
  5148  0E2B                     	;# 
  5149  0E2C                     	;# 
  5150  0E2D                     	;# 
  5151  0E2E                     	;# 
  5152  0E2F                     	;# 
  5153  0E30                     	;# 
  5154  0E31                     	;# 
  5155  0E32                     	;# 
  5156  0E33                     	;# 
  5157  0E34                     	;# 
  5158  0E35                     	;# 
  5159  0E36                     	;# 
  5160  0E37                     	;# 
  5161  0E8F                     	;# 
  5162  0E90                     	;# 
  5163  0E91                     	;# 
  5164  0E92                     	;# 
  5165  0E93                     	;# 
  5166  0E94                     	;# 
  5167  0E95                     	;# 
  5168  0E96                     	;# 
  5169  0E97                     	;# 
  5170  0E9C                     	;# 
  5171  0E9D                     	;# 
  5172  0E9E                     	;# 
  5173  0EA1                     	;# 
  5174  0EA2                     	;# 
  5175  0EA3                     	;# 
  5176  0EA4                     	;# 
  5177  0EA5                     	;# 
  5178  0EA9                     	;# 
  5179  0EAA                     	;# 
  5180  0EAB                     	;# 
  5181  0EAC                     	;# 
  5182  0EB1                     	;# 
  5183  0EB2                     	;# 
  5184  0EB3                     	;# 
  5185  0EB8                     	;# 
  5186  0EB9                     	;# 
  5187  0EBA                     	;# 
  5188  0EBB                     	;# 
  5189  0EBC                     	;# 
  5190  0EBD                     	;# 
  5191  0EBE                     	;# 
  5192  0EC3                     	;# 
  5193  0EC5                     	;# 
  5194  0EC6                     	;# 
  5195  0EC7                     	;# 
  5196  0EC8                     	;# 
  5197  0EC9                     	;# 
  5198  0ECA                     	;# 
  5199  0ECB                     	;# 
  5200  0ECC                     	;# 
  5201  0F10                     	;# 
  5202  0F11                     	;# 
  5203  0F12                     	;# 
  5204  0F13                     	;# 
  5205  0F14                     	;# 
  5206  0F15                     	;# 
  5207  0F16                     	;# 
  5208  0F17                     	;# 
  5209  0F18                     	;# 
  5210  0F19                     	;# 
  5211  0F1A                     	;# 
  5212  0F1B                     	;# 
  5213  0F1C                     	;# 
  5214  0F1D                     	;# 
  5215  0F1E                     	;# 
  5216  0F1F                     	;# 
  5217  0F20                     	;# 
  5218  0F21                     	;# 
  5219  0F22                     	;# 
  5220  0F23                     	;# 
  5221  0F24                     	;# 
  5222  0F25                     	;# 
  5223  0F26                     	;# 
  5224  0F27                     	;# 
  5225  0F38                     	;# 
  5226  0F39                     	;# 
  5227  0F3A                     	;# 
  5228  0F3B                     	;# 
  5229  0F3C                     	;# 
  5230  0F3D                     	;# 
  5231  0F3E                     	;# 
  5232  0F3F                     	;# 
  5233  0F40                     	;# 
  5234  0F41                     	;# 
  5235  0F43                     	;# 
  5236  0F44                     	;# 
  5237  0F45                     	;# 
  5238  0F46                     	;# 
  5239  0F47                     	;# 
  5240  0F48                     	;# 
  5241  0F49                     	;# 
  5242  0F4A                     	;# 
  5243  0F4B                     	;# 
  5244  0F4C                     	;# 
  5245  0F4E                     	;# 
  5246  0F4F                     	;# 
  5247  0F50                     	;# 
  5248  0F51                     	;# 
  5249  0F52                     	;# 
  5250  0F53                     	;# 
  5251  0F54                     	;# 
  5252  0F55                     	;# 
  5253  0F56                     	;# 
  5254  0F57                     	;# 
  5255  0F65                     	;# 
  5256  0F68                     	;# 
  5257  0F69                     	;# 
  5258  0F6A                     	;# 
  5259  0F6B                     	;# 
  5260  0FE4                     	;# 
  5261  0FE5                     	;# 
  5262  0FE6                     	;# 
  5263  0FE7                     	;# 
  5264  0FE8                     	;# 
  5265  0FE9                     	;# 
  5266  0FEA                     	;# 
  5267  0FEB                     	;# 
  5268  0FED                     	;# 
  5269  0FEE                     	;# 
  5270  0FEF                     	;_samples
  5271                           
  5272                           	psect	idataBANK0
  5273  0004                     __pidataBANK0:	
  5274                           
  5275                           ;initializer for _Imode0
  5276  0004  3401               	retlw	1
  5277                           
  5278                           	psect	idataBANK1
  5279  139F                     __pidataBANK1:	
  5280                           
  5281                           ;initializer for _Imode1
  5282  139F  3401               	retlw	1
  5283                           
  5284                           	psect	idataBANK2
  5285  13A0                     __pidataBANK2:	
  5286                           
  5287                           ;initializer for _channels
  5288  13A0  3416               	retlw	22
  5289  13A1  3400               	retlw	0
  5290  13A2  3414               	retlw	20
  5291  13A3  3400               	retlw	0
  5292  13A4  3412               	retlw	18
  5293  13A5  3400               	retlw	0
  5294  13A6  3410               	retlw	16
  5295  13A7  3400               	retlw	0
  5296                           
  5297                           	psect	stringtext1
  5298  0800                     __pstringtext1:	
  5299  0800                     _fonts:	
  5300  0800  3400               	retlw	0
  5301  0801  3400               	retlw	0
  5302  0802  3400               	retlw	0
  5303  0803  3400               	retlw	0
  5304  0804  344E               	retlw	78
  5305  0805  3400               	retlw	0
  5306  0806  3406               	retlw	6
  5307  0807  3400               	retlw	0
  5308  0808  3406               	retlw	6
  5309  0809  34FF               	retlw	255
  5310  080A  34FF               	retlw	255
  5311  080B  34FF               	retlw	255
  5312  080C  3448               	retlw	72
  5313  080D  34D6               	retlw	214
  5314  080E  3424               	retlw	36
  5315  080F  3412               	retlw	18
  5316  0810  3408               	retlw	8
  5317  0811  3424               	retlw	36
  5318  0812  34FF               	retlw	255
  5319  0813  34FF               	retlw	255
  5320  0814  34FF               	retlw	255
  5321  0815  3400               	retlw	0
  5322  0816  3406               	retlw	6
  5323  0817  3400               	retlw	0
  5324  0818  3438               	retlw	56
  5325  0819  3444               	retlw	68
  5326  081A  3482               	retlw	130
  5327  081B  3482               	retlw	130
  5328  081C  3444               	retlw	68
  5329  081D  3438               	retlw	56
  5330  081E  3414               	retlw	20
  5331  081F  3408               	retlw	8
  5332  0820  343E               	retlw	62
  5333  0821  3410               	retlw	16
  5334  0822  3438               	retlw	56
  5335  0823  3410               	retlw	16
  5336  0824  34A0               	retlw	160
  5337  0825  3460               	retlw	96
  5338  0826  3400               	retlw	0
  5339  0827  3410               	retlw	16
  5340  0828  3410               	retlw	16
  5341  0829  3410               	retlw	16
  5342  082A  3460               	retlw	96
  5343  082B  3460               	retlw	96
  5344  082C  3400               	retlw	0
  5345  082D  3460               	retlw	96
  5346  082E  3418               	retlw	24
  5347  082F  3406               	retlw	6
  5348  0830  347C               	retlw	124
  5349  0831  3442               	retlw	66
  5350  0832  347C               	retlw	124
  5351  0833  3444               	retlw	68
  5352  0834  347E               	retlw	126
  5353  0835  3440               	retlw	64
  5354  0836  3464               	retlw	100
  5355  0837  3452               	retlw	82
  5356  0838  344C               	retlw	76
  5357  0839  344A               	retlw	74
  5358  083A  344A               	retlw	74
  5359  083B  3434               	retlw	52
  5360  083C  3438               	retlw	56
  5361  083D  3424               	retlw	36
  5362  083E  347E               	retlw	126
  5363  083F  344E               	retlw	78
  5364  0840  344A               	retlw	74
  5365  0841  3432               	retlw	50
  5366  0842  343C               	retlw	60
  5367  0843  344A               	retlw	74
  5368  0844  3432               	retlw	50
  5369  0845  3462               	retlw	98
  5370  0846  341A               	retlw	26
  5371  0847  3406               	retlw	6
  5372  0848  3476               	retlw	118
  5373  0849  344A               	retlw	74
  5374  084A  3476               	retlw	118
  5375  084B  344C               	retlw	76
  5376  084C  3452               	retlw	82
  5377  084D  343C               	retlw	60
  5378  084E  346C               	retlw	108
  5379  084F  346C               	retlw	108
  5380  0850  3400               	retlw	0
  5381  0851  34AC               	retlw	172
  5382  0852  346C               	retlw	108
  5383  0853  3400               	retlw	0
  5384  0854  3410               	retlw	16
  5385  0855  3428               	retlw	40
  5386  0856  3444               	retlw	68
  5387  0857  3428               	retlw	40
  5388  0858  3428               	retlw	40
  5389  0859  3428               	retlw	40
  5390  085A  3444               	retlw	68
  5391  085B  3428               	retlw	40
  5392  085C  3410               	retlw	16
  5393  085D  3402               	retlw	2
  5394  085E  3459               	retlw	89
  5395  085F  3406               	retlw	6
  5396  0860  34FF               	retlw	255
  5397  0861  34FF               	retlw	255
  5398  0862  34FF               	retlw	255
  5399  0863  347C               	retlw	124
  5400  0864  3412               	retlw	18
  5401  0865  347C               	retlw	124
  5402  0866  347E               	retlw	126
  5403  0867  345A               	retlw	90
  5404  0868  3434               	retlw	52
  5405  0869  343C               	retlw	60
  5406  086A  3442               	retlw	66
  5407  086B  3442               	retlw	66
  5408  086C  347E               	retlw	126
  5409  086D  3442               	retlw	66
  5410  086E  343C               	retlw	60
  5411  086F  347E               	retlw	126
  5412  0870  344A               	retlw	74
  5413  0871  3442               	retlw	66
  5414  0872  347E               	retlw	126
  5415  0873  340A               	retlw	10
  5416  0874  340A               	retlw	10
  5417  0875  343C               	retlw	60
  5418  0876  3452               	retlw	82
  5419  0877  3434               	retlw	52
  5420  0878  347E               	retlw	126
  5421  0879  3408               	retlw	8
  5422  087A  347E               	retlw	126
  5423  087B  3442               	retlw	66
  5424  087C  347E               	retlw	126
  5425  087D  3442               	retlw	66
  5426  087E  3430               	retlw	48
  5427  087F  3440               	retlw	64
  5428  0880  343E               	retlw	62
  5429  0881  347E               	retlw	126
  5430  0882  3418               	retlw	24
  5431  0883  3466               	retlw	102
  5432  0884  347E               	retlw	126
  5433  0885  3440               	retlw	64
  5434  0886  3440               	retlw	64
  5435  0887  347E               	retlw	126
  5436  0888  341C               	retlw	28
  5437  0889  347E               	retlw	126
  5438  088A  347E               	retlw	126
  5439  088B  3402               	retlw	2
  5440  088C  347E               	retlw	126
  5441  088D  343C               	retlw	60
  5442  088E  3442               	retlw	66
  5443  088F  343C               	retlw	60
  5444  0890  347E               	retlw	126
  5445  0891  3412               	retlw	18
  5446  0892  340C               	retlw	12
  5447  0893  347E               	retlw	126
  5448  0894  3462               	retlw	98
  5449  0895  34FE               	retlw	254
  5450  0896  347E               	retlw	126
  5451  0897  3432               	retlw	50
  5452  0898  344E               	retlw	78
  5453  0899  3444               	retlw	68
  5454  089A  344A               	retlw	74
  5455  089B  3432               	retlw	50
  5456  089C  3402               	retlw	2
  5457  089D  347E               	retlw	126
  5458  089E  3402               	retlw	2
  5459  089F  347E               	retlw	126
  5460  08A0  3440               	retlw	64
  5461  08A1  347E               	retlw	126
  5462  08A2  343E               	retlw	62
  5463  08A3  3440               	retlw	64
  5464  08A4  343E               	retlw	62
  5465  08A5  347E               	retlw	126
  5466  08A6  3438               	retlw	56
  5467  08A7  347E               	retlw	126
  5468  08A8  3466               	retlw	102
  5469  08A9  3418               	retlw	24
  5470  08AA  3466               	retlw	102
  5471  08AB  340E               	retlw	14
  5472  08AC  3470               	retlw	112
  5473  08AD  340E               	retlw	14
  5474  08AE  3462               	retlw	98
  5475  08AF  345A               	retlw	90
  5476  08B0  3446               	retlw	70
  5477  08B1  3400               	retlw	0
  5478  08B2  347E               	retlw	126
  5479  08B3  3442               	retlw	66
  5480  08B4  3406               	retlw	6
  5481  08B5  3418               	retlw	24
  5482  08B6  3460               	retlw	96
  5483  08B7  3442               	retlw	66
  5484  08B8  347E               	retlw	126
  5485  08B9  3400               	retlw	0
  5486  08BA  3404               	retlw	4
  5487  08BB  3402               	retlw	2
  5488  08BC  3404               	retlw	4
  5489  08BD  3440               	retlw	64
  5490  08BE  3440               	retlw	64
  5491  08BF  3440               	retlw	64
  5492  08C0  3400               	retlw	0
  5493  08C1  3402               	retlw	2
  5494  08C2  3404               	retlw	4
  5495  08C3  3474               	retlw	116
  5496  08C4  3454               	retlw	84
  5497  08C5  3478               	retlw	120
  5498  08C6  347E               	retlw	126
  5499  08C7  3448               	retlw	72
  5500  08C8  3430               	retlw	48
  5501  08C9  3430               	retlw	48
  5502  08CA  3448               	retlw	72
  5503  08CB  3448               	retlw	72
  5504  08CC  3430               	retlw	48
  5505  08CD  3448               	retlw	72
  5506  08CE  347E               	retlw	126
  5507  08CF  3438               	retlw	56
  5508  08D0  3454               	retlw	84
  5509  08D1  3458               	retlw	88
  5510  08D2  347C               	retlw	124
  5511  08D3  340A               	retlw	10
  5512  08D4  3402               	retlw	2
  5513  08D5  3498               	retlw	152
  5514  08D6  34A4               	retlw	164
  5515  08D7  347C               	retlw	124
  5516  08D8  347E               	retlw	126
  5517  08D9  3408               	retlw	8
  5518  08DA  3470               	retlw	112
  5519  08DB  3448               	retlw	72
  5520  08DC  347A               	retlw	122
  5521  08DD  3440               	retlw	64
  5522  08DE  3488               	retlw	136
  5523  08DF  34FA               	retlw	250
  5524  08E0  3400               	retlw	0
  5525  08E1  347E               	retlw	126
  5526  08E2  3418               	retlw	24
  5527  08E3  3464               	retlw	100
  5528  08E4  3442               	retlw	66
  5529  08E5  347E               	retlw	126
  5530  08E6  3440               	retlw	64
  5531  08E7  347C               	retlw	124
  5532  08E8  3438               	retlw	56
  5533  08E9  347C               	retlw	124
  5534  08EA  347C               	retlw	124
  5535  08EB  3404               	retlw	4
  5536  08EC  3478               	retlw	120
  5537  08ED  3438               	retlw	56
  5538  08EE  3444               	retlw	68
  5539  08EF  3438               	retlw	56
  5540  08F0  34FC               	retlw	252
  5541  08F1  3424               	retlw	36
  5542  08F2  3418               	retlw	24
  5543  08F3  3418               	retlw	24
  5544  08F4  3424               	retlw	36
  5545  08F5  34FC               	retlw	252
  5546  08F6  3478               	retlw	120
  5547  08F7  3404               	retlw	4
  5548  08F8  3404               	retlw	4
  5549  08F9  3448               	retlw	72
  5550  08FA  3454               	retlw	84
  5551  08FB  3424               	retlw	36
  5552  08FC  3404               	retlw	4
  5553  08FD  343E               	retlw	62
  5554  08FE  3444               	retlw	68
  5555  08FF  347C               	retlw	124
  5556  0900  3440               	retlw	64
  5557  0901  347C               	retlw	124
  5558  0902  343C               	retlw	60
  5559  0903  3440               	retlw	64
  5560  0904  343C               	retlw	60
  5561  0905  347C               	retlw	124
  5562  0906  3430               	retlw	48
  5563  0907  347C               	retlw	124
  5564  0908  346C               	retlw	108
  5565  0909  3410               	retlw	16
  5566  090A  346C               	retlw	108
  5567  090B  349C               	retlw	156
  5568  090C  34A0               	retlw	160
  5569  090D  347C               	retlw	124
  5570  090E  3464               	retlw	100
  5571  090F  3454               	retlw	84
  5572  0910  344C               	retlw	76
  5573  0911  340C               	retlw	12
  5574  0912  3412               	retlw	18
  5575  0913  340C               	retlw	12
  5576  0914  34FF               	retlw	255
  5577  0915  34FF               	retlw	255
  5578  0916  34FF               	retlw	255
  5579  0917  34FF               	retlw	255
  5580  0918  34FF               	retlw	255
  5581  0919  34FF               	retlw	255
  5582  091A  34FF               	retlw	255
  5583  091B  34FF               	retlw	255
  5584  091C  34FF               	retlw	255
  5585  091D  34FF               	retlw	255
  5586  091E  34FF               	retlw	255
  5587  091F  34FF               	retlw	255
  5588  0920  34FF               	retlw	255
  5589  0921  34FF               	retlw	255
  5590  0922  34FF               	retlw	255
  5591  0923  34FF               	retlw	255
  5592  0924  34FF               	retlw	255
  5593  0925  34FF               	retlw	255
  5594  0926  34FC               	retlw	252
  5595  0927  3440               	retlw	64
  5596  0928  347C               	retlw	124
  5597  0929  34FF               	retlw	255
  5598  092A  34FF               	retlw	255
  5599  092B  34FF               	retlw	255
  5600  092C  34FF               	retlw	255
  5601  092D  34FF               	retlw	255
  5602  092E  34FF               	retlw	255
  5603  092F                     __end_of_fonts:	
  5604                           
  5605                           	psect	stringtext2
  5606  1800                     __pstringtext2:	
  5607  1800                     log@coeff:	
  5608  1800  3400               	retlw	0
  5609  1801  3400               	retlw	0
  5610  1802  3400               	retlw	0
  5611  1803  3400               	retlw	0
  5612  1804  3480               	retlw	128
  5613  1805  343F               	retlw	63
  5614  1806  34F0               	retlw	240
  5615  1807  34FF               	retlw	255
  5616  1808  34BE               	retlw	190
  5617  1809  34E2               	retlw	226
  5618  180A  34A9               	retlw	169
  5619  180B  343E               	retlw	62
  5620  180C  3483               	retlw	131
  5621  180D  3476               	retlw	118
  5622  180E  34BE               	retlw	190
  5623  180F  34AE               	retlw	174
  5624  1810  342B               	retlw	43
  5625  1811  343E               	retlw	62
  5626  1812  343C               	retlw	60
  5627  1813  34C3               	retlw	195
  5628  1814  34BD               	retlw	189
  5629  1815  34D2               	retlw	210
  5630  1816  3413               	retlw	19
  5631  1817  343D               	retlw	61
  5632  1818  3478               	retlw	120
  5633  1819  34D3               	retlw	211
  5634  181A  34BB               	retlw	187
  5635  181B                     __end_oflog@coeff:	
  5636                           
  5637                           	psect	nvBANK1
  5638  00E6                     __pnvBANK1:	
  5639  00E6                     _Vref:	
  5640  00E6                     	ds	2
  5641  00E8                     _Iref:	
  5642  00E8                     	ds	2
  5643  00EA                     _state_counter:	
  5644  00EA                     	ds	2
  5645  00EC                     _IminCount:	
  5646  00EC                     	ds	2
  5647  00EE                     _battery_state:	
  5648  00EE                     	ds	1
  5649                           
  5650                           	psect	nvBANK2
  5651  0145                     __pnvBANK2:	
  5652  0145                     _Imin:	
  5653  0145                     	ds	2
  5654  0013                     _TRISC	set	19
  5655  0012                     _TRISB	set	18
  5656  0011                     _TRISA	set	17
  5657  0018                     _LATC	set	24
  5658  0017                     _LATB	set	23
  5659  0016                     _LATA	set	22
  5660  0016                     _LATAbits	set	22
  5661  0011                     _TRISAbits	set	17
  5662  00B5                     _LATA5	set	181
  5663  006A                     _RB2	set	106
  5664  005F                     _GIE	set	95
  5665  0093                     _ADCON0	set	147
  5666  009D                     _ADACQ	set	157
  5667  009C                     _ADPRE	set	156
  5668  009B                     _ADCAP	set	155
  5669  009A                     _ADREF	set	154
  5670  0098                     _ADCLK	set	152
  5671  0097                     _ADSTAT	set	151
  5672  0099                     _ADACT	set	153
  5673  0096                     _ADCON3	set	150
  5674  0095                     _ADCON2	set	149
  5675  0094                     _ADCON1	set	148
  5676  008C                     _ADRESL	set	140
  5677  008D                     _ADRESH	set	141
  5678  0093                     _ADCON0bits	set	147
  5679  009E                     _ADPCH	set	158
  5680  0113                     _ADSTPTH	set	275
  5681  0112                     _ADSTPTL	set	274
  5682  0111                     _ADUTHH	set	273
  5683  0110                     _ADUTHL	set	272
  5684  010F                     _ADLTHH	set	271
  5685  010E                     _ADLTHL	set	270
  5686  010D                     _ADRPT	set	269
  5687  021E                     _CCPTMRS0bits	set	542
  5688  021F                     _CCPTMRS1bits	set	543
  5689  0294                     _T4CONbits	set	660
  5690  0292                     _T4TMR	set	658
  5691  0293                     _T4PR	set	659
  5692  0297                     _T4RST	set	663
  5693  0295                     _T4HLT	set	661
  5694  0296                     _T4CLKCON	set	662
  5695  0294                     _T4CON	set	660
  5696  028E                     _T2CONbits	set	654
  5697  028C                     _T2TMR	set	652
  5698  028D                     _T2PR	set	653
  5699  0291                     _T2RST	set	657
  5700  028F                     _T2HLT	set	655
  5701  0290                     _T2CLKCON	set	656
  5702  028E                     _T2CON	set	654
  5703  030C                     _CCPR1L	set	780
  5704  030D                     _CCPR1H	set	781
  5705  030E                     _CCP1CONbits	set	782
  5706  0390                     _PWM7DCL	set	912
  5707  0391                     _PWM7DCH	set	913
  5708  0392                     _PWM7CON	set	914
  5709  038C                     _PWM6DCL	set	908
  5710  038D                     _PWM6DCH	set	909
  5711  038E                     _PWM6CON	set	910
  5712  0710                     _PIR4bits	set	1808
  5713  0716                     _PIE0bits	set	1814
  5714  0892                     _OSCTUNE	set	2194
  5715  0893                     _OSCFRQ	set	2195
  5716  0891                     _OSCEN	set	2193
  5717  088F                     _OSCCON3	set	2191
  5718  088D                     _OSCCON1	set	2189
  5719  090C                     _FVRCON	set	2316
  5720  0E8F                     _PPSLOCKbits	set	3727
  5721  0E8F                     _PPSLOCK	set	3727
  5722  0F18                     _RB0PPS	set	3864
  5723  0F17                     _RA7PPS	set	3863
  5724  0F16                     _RA6PPS	set	3862
  5725  0F4E                     _ANSELC	set	3918
  5726  0F43                     _ANSELB	set	3907
  5727  0F38                     _ANSELA	set	3896
  5728  0F65                     _WPUE	set	3941
  5729  0F4F                     _WPUC	set	3919
  5730  0F44                     _WPUB	set	3908
  5731  0F39                     _WPUA	set	3897
  5732                           
  5733                           	psect	stringtext3
  5734  181B                     __pstringtext3:	
  5735  181B                     STR_1:	
  5736  181B  3442               	retlw	66	;'B'
  5737  181C  3441               	retlw	65	;'A'
  5738  181D  3454               	retlw	84	;'T'
  5739  181E  3454               	retlw	84	;'T'
  5740  181F  3445               	retlw	69	;'E'
  5741  1820  3452               	retlw	82	;'R'
  5742  1821  3459               	retlw	89	;'Y'
  5743  1822  3420               	retlw	32	;' '
  5744  1823  3446               	retlw	70	;'F'
  5745  1824  3441               	retlw	65	;'A'
  5746  1825  3455               	retlw	85	;'U'
  5747  1826  344C               	retlw	76	;'L'
  5748  1827  3454               	retlw	84	;'T'
  5749  1828  3400               	retlw	0
  5750                           
  5751                           	psect	stringtext4
  5752  0000                     __pstringtext4:	
  5753                           
  5754                           ; #config settings
  5755  0000                     
  5756                           	psect	cinit
  5757  07BC                     start_initialization:	
  5758  07BC                     __initialization:		;BIGRAM
  5759                           
  5760                           ; Initialize objects allocated to BANK0
  5761  07BC  3180  2004  3187   	fcall	__pidataBANK0	;fetch initializer
  5762  07BF  00EE               	movwf	__pdataBANK0& (0+127)
  5763                           
  5764                           ; Initialize objects allocated to BANK1
  5765  07C0  0021               	movlb	1	; select bank1
  5766  07C1  3193  239F  3187   	fcall	__pidataBANK1	;fetch initializer
  5767  07C4  00EF               	movwf	__pdataBANK1& (0+127)
  5768                           
  5769                           ; Initialize objects allocated to BANK2
  5770  07C5  30A0               	movlw	low __pidataBANK2
  5771  07C6  0084               	movwf	4
  5772  07C7  3093               	movlw	(high __pidataBANK2)| (0+128)
  5773  07C8  0085               	movwf	5
  5774  07C9  0022               	movlb	2	; select bank2
  5775  07CA  0012               	moviw fsr0++
  5776  07CB  00BD               	movwf	__pdataBANK2& (0+127)
  5777  07CC  0012               	moviw fsr0++
  5778  07CD  00BE               	movwf	(__pdataBANK2+1)& (0+127)
  5779  07CE  0012               	moviw fsr0++
  5780  07CF  00BF               	movwf	(__pdataBANK2+2)& (0+127)
  5781  07D0  0012               	moviw fsr0++
  5782  07D1  00C0               	movwf	(__pdataBANK2+3)& (0+127)
  5783  07D2  0012               	moviw fsr0++
  5784  07D3  00C1               	movwf	(__pdataBANK2+4)& (0+127)
  5785  07D4  0012               	moviw fsr0++
  5786  07D5  00C2               	movwf	(__pdataBANK2+5)& (0+127)
  5787  07D6  0012               	moviw fsr0++
  5788  07D7  00C3               	movwf	(__pdataBANK2+6)& (0+127)
  5789  07D8  0012               	moviw fsr0++
  5790  07D9  00C4               	movwf	(__pdataBANK2+7)& (0+127)
  5791                           
  5792                           ; Clear objects allocated to BIGRAM
  5793  07DA  3098               	movlw	low (0+8600)
  5794  07DB  0084               	movwf	4
  5795  07DC  3021               	movlw	high (0+8600)
  5796  07DD  0085               	movwf	5
  5797  07DE  3058               	movlw	88
  5798  07DF  00FE               	movwf	btemp
  5799  07E0  3002               	movlw	2
  5800  07E1  00FF               	movwf	btemp+1
  5801  07E2  3193  23B1  3187   	fcall	clear_ram0
  5802                           
  5803                           ; Clear objects allocated to BANK0
  5804  07E5  0020               	movlb	0	; select bank0
  5805  07E6  01EC               	clrf	__pbssBANK0& (0+127)
  5806  07E7  01ED               	clrf	(__pbssBANK0+1)& (0+127)
  5807                           
  5808                           ; Clear objects allocated to BANK1
  5809  07E8  30A0               	movlw	low __pbssBANK1
  5810  07E9  0084               	movwf	4
  5811  07EA  3000               	movlw	high __pbssBANK1
  5812  07EB  0085               	movwf	5
  5813  07EC  3023               	movlw	35
  5814  07ED  00FE               	movwf	btemp
  5815  07EE  3000               	movlw	0
  5816  07EF  00FF               	movwf	btemp+1
  5817  07F0  3193  23B1  3187   	fcall	clear_ram0
  5818                           
  5819                           ; Clear objects allocated to BANK2
  5820  07F3  3020               	movlw	low __pbssBANK2
  5821  07F4  0084               	movwf	4
  5822  07F5  3001               	movlw	high __pbssBANK2
  5823  07F6  0085               	movwf	5
  5824  07F7  301D               	movlw	29
  5825  07F8  00FE               	movwf	btemp
  5826  07F9  3000               	movlw	0
  5827  07FA  00FF               	movwf	btemp+1
  5828  07FB  3193  23B1         	fcall	clear_ram0
  5829  07FD                     end_of_initialization:	
  5830                           ;End of C runtime variable initialization code
  5831                           
  5832  07FD                     __end_of__initialization:	
  5833  07FD  0020               	movlb	0
  5834  07FE  3182  2A85         	ljmp	_main	;jump to C main() function
  5835                           
  5836                           	psect	bssBANK0
  5837  006C                     __pbssBANK0:	
  5838  006C                     _lastButton:	
  5839  006C                     	ds	1
  5840  006D                     _button:	
  5841  006D                     	ds	1
  5842                           
  5843                           	psect	dataBANK0
  5844  006E                     __pdataBANK0:	
  5845  006E                     _Imode0:	
  5846  006E                     	ds	1
  5847                           
  5848                           	psect	bssBANK1
  5849  00A0                     __pbssBANK1:	
  5850  00A0                     _Vanalogs:	
  5851  00A0                     	ds	8
  5852  00A8                     _current:	
  5853  00A8                     	ds	8
  5854  00B0                     _voltage:	
  5855  00B0                     	ds	8
  5856  00B8                     _errno:	
  5857  00B8                     	ds	2
  5858  00BA                     _readButtons:	
  5859  00BA                     	ds	2
  5860  00BC                     _Iout:	
  5861  00BC                     	ds	2
  5862  00BE                     _sampleIndex:	
  5863  00BE                     	ds	2
  5864  00C0                     _j:	
  5865  00C0                     	ds	1
  5866  00C1                     _VHoldMode:	
  5867  00C1                     	ds	1
  5868  00C2                     _cc_cv:	
  5869  00C2                     	ds	1
  5870                           
  5871                           	psect	dataBANK1
  5872  00EF                     __pdataBANK1:	
  5873  00EF                     _Imode1:	
  5874  00EF                     	ds	1
  5875                           
  5876                           	psect	bssBANK2
  5877  0120                     __pbssBANK2:	
  5878  0120                     _totals:	
  5879  0120                     	ds	16
  5880  0130                     _Ianalogs:	
  5881  0130                     	ds	8
  5882  0138                     LCDWriteInt@F14388:	
  5883  0138                     	ds	5
  5884                           
  5885                           	psect	dataBANK2
  5886  013D                     __pdataBANK2:	
  5887  013D                     _channels:	
  5888  013D                     	ds	8
  5889                           
  5890                           	psect	clrtext
  5891  13B1                     clear_ram0:	
  5892                           ;	Called with FSR0 containing the base address, and
  5893                           ;	btemp/btemp+1 has the size to clear
  5894                           
  5895  13B1  0064               	clrwdt	;clear the watchdog before getting into this loop
  5896  13B2                     clrloop0:	
  5897  13B2  0180               	clrf	0	;clear RAM location pointed to by FSR
  5898  13B3  3101               	addfsr 0,1
  5899  13B4  3001               	movlw	1
  5900  13B5  02FE               	subwf	126,f
  5901  13B6  3000               	movlw	0
  5902  13B7  3BFF               	subwfb	127,f
  5903  13B8  087F               	movf	127,w
  5904  13B9  047E               	iorwf	126,w
  5905  13BA  1903               	btfsc	3,2
  5906  13BB  3400               	retlw	0	;all done for this memory range, return
  5907  13BC  2BB2               	goto	clrloop0	;have we reached the end yet?
  5908                           
  5909                           	psect	cstackBANK1
  5910  00C3                     __pcstackBANK1:	
  5911  00C3                     main@batteryTemp:	
  5912                           
  5913                           ; 2 bytes @ 0x0
  5914  00C3                     	ds	2
  5915  00C5                     main@faultCount:	
  5916                           
  5917                           ; 2 bytes @ 0x2
  5918  00C5                     	ds	2
  5919  00C7                     main@faultNotReset:	
  5920                           
  5921                           ; 2 bytes @ 0x4
  5922  00C7                     	ds	2
  5923  00C9                     _main$1287:	
  5924                           
  5925                           ; 3 bytes @ 0x6
  5926  00C9                     	ds	3
  5927  00CC                     main@MPPT1:	
  5928                           
  5929                           ; 2 bytes @ 0x9
  5930  00CC                     	ds	2
  5931  00CE                     main@slowLoop:	
  5932                           
  5933                           ; 1 bytes @ 0xB
  5934  00CE                     	ds	1
  5935  00CF                     main@displayRefresh:	
  5936                           
  5937                           ; 1 bytes @ 0xC
  5938  00CF                     	ds	1
  5939  00D0                     _main$1286:	
  5940                           
  5941                           ; 3 bytes @ 0xD
  5942  00D0                     	ds	3
  5943  00D3                     main@IOutTotal:	
  5944                           
  5945                           ; 2 bytes @ 0x10
  5946  00D3                     	ds	2
  5947  00D5                     _main$1288:	
  5948                           
  5949                           ; 2 bytes @ 0x12
  5950  00D5                     	ds	2
  5951  00D7                     _main$1289:	
  5952                           
  5953                           ; 2 bytes @ 0x14
  5954  00D7                     	ds	2
  5955  00D9                     main@efficiency:	
  5956                           
  5957                           ; 3 bytes @ 0x16
  5958  00D9                     	ds	3
  5959  00DC                     main@menuButton:	
  5960                           
  5961                           ; 1 bytes @ 0x19
  5962  00DC                     	ds	1
  5963  00DD                     main@dutyCycle7:	
  5964                           
  5965                           ; 2 bytes @ 0x1A
  5966  00DD                     	ds	2
  5967  00DF                     main@dutyCycle1:	
  5968                           
  5969                           ; 2 bytes @ 0x1C
  5970  00DF                     	ds	2
  5971  00E1                     main@MPPT0:	
  5972                           
  5973                           ; 2 bytes @ 0x1E
  5974  00E1                     	ds	2
  5975  00E3                     main@j:	
  5976                           
  5977                           ; 1 bytes @ 0x20
  5978  00E3                     	ds	1
  5979  00E4                     main@dutyCycle6:	
  5980                           
  5981                           ; 2 bytes @ 0x21
  5982  00E4                     	ds	2
  5983                           
  5984                           	psect	cstackCOMMON
  5985  0070                     __pcstackCOMMON:	
  5986  0070                     ?___ftge:	
  5987  0070                     ?_LCDWrite:	
  5988                           ; 1 bit 
  5989                           
  5990  0070                     ?_OSCILLATOR_Initialize:	
  5991                           ; 1 bytes @ 0x0
  5992                           
  5993  0070                     ??_OSCILLATOR_Initialize:	
  5994                           ; 1 bytes @ 0x0
  5995                           
  5996  0070                     ?_TMR2_Initialize:	
  5997                           ; 1 bytes @ 0x0
  5998                           
  5999  0070                     ??_TMR2_Initialize:	
  6000                           ; 1 bytes @ 0x0
  6001                           
  6002  0070                     ?_TMR4_Initialize:	
  6003                           ; 1 bytes @ 0x0
  6004                           
  6005  0070                     ??_TMR4_Initialize:	
  6006                           ; 1 bytes @ 0x0
  6007                           
  6008  0070                     ?_calculateCurrent0:	
  6009                           ; 1 bytes @ 0x0
  6010                           
  6011  0070                     ?_calculateCurrent1:	
  6012                           ; 1 bytes @ 0x0
  6013                           
  6014  0070                     ?_ADC_Initialize:	
  6015                           ; 1 bytes @ 0x0
  6016                           
  6017  0070                     ??_ADC_Initialize:	
  6018                           ; 1 bytes @ 0x0
  6019                           
  6020  0070                     ?_Init_Battery_State_Machine:	
  6021                           ; 1 bytes @ 0x0
  6022                           
  6023  0070                     ??_Init_Battery_State_Machine:	
  6024                           ; 1 bytes @ 0x0
  6025                           
  6026  0070                     ?_Battery_State_Machine:	
  6027                           ; 1 bytes @ 0x0
  6028                           
  6029  0070                     ?_cc_cv_mode:	
  6030                           ; 1 bytes @ 0x0
  6031                           
  6032  0070                     ??_cc_cv_mode:	
  6033                           ; 1 bytes @ 0x0
  6034                           
  6035  0070                     ?_readButton:	
  6036                           ; 1 bytes @ 0x0
  6037                           
  6038  0070                     ?_LCDWriteCharacter:	
  6039                           ; 1 bytes @ 0x0
  6040                           
  6041  0070                     ?_LCDClear:	
  6042                           ; 1 bytes @ 0x0
  6043                           
  6044  0070                     ?_LCDInit:	
  6045                           ; 1 bytes @ 0x0
  6046                           
  6047  0070                     ?_PIN_MANAGER_Initialize:	
  6048                           ; 1 bytes @ 0x0
  6049                           
  6050  0070                     ??_PIN_MANAGER_Initialize:	
  6051                           ; 1 bytes @ 0x0
  6052                           
  6053  0070                     ?_PWM_Initialize:	
  6054                           ; 1 bytes @ 0x0
  6055                           
  6056  0070                     ??_PWM_Initialize:	
  6057                           ; 1 bytes @ 0x0
  6058                           
  6059  0070                     ?_PWM6_LoadDutyValue:	
  6060                           ; 1 bytes @ 0x0
  6061                           
  6062  0070                     ?_PWM7_LoadDutyValue:	
  6063                           ; 1 bytes @ 0x0
  6064                           
  6065  0070                     ?_PWM1_LoadDutyValue:	
  6066                           ; 1 bytes @ 0x0
  6067                           
  6068  0070                     ?_SYSTEM_Initialize:	
  6069                           ; 1 bytes @ 0x0
  6070                           
  6071  0070                     ?_main:	
  6072                           ; 1 bytes @ 0x0
  6073                           
  6074  0070                     ?_ADCRead:	
  6075                           ; 1 bytes @ 0x0
  6076                           
  6077  0070                     ?___awdiv:	
  6078                           ; 2 bytes @ 0x0
  6079                           
  6080  0070                     ?___lwmod:	
  6081                           ; 2 bytes @ 0x0
  6082                           
  6083  0070                     ?___ftpack:	
  6084                           ; 2 bytes @ 0x0
  6085                           
  6086  0070                     ?_frexp:	
  6087                           ; 3 bytes @ 0x0
  6088                           
  6089  0070                     ?___aldiv:	
  6090                           ; 3 bytes @ 0x0
  6091                           
  6092  0070                     LCDWrite@data:	
  6093                           ; 4 bytes @ 0x0
  6094                           
  6095  0070                     PIN_MANAGER_Initialize@state:	
  6096                           ; 1 bytes @ 0x0
  6097                           
  6098  0070                     PWM6_LoadDutyValue@dutyCycle6:	
  6099                           ; 1 bytes @ 0x0
  6100                           
  6101  0070                     PWM7_LoadDutyValue@dutyCycle7:	
  6102                           ; 2 bytes @ 0x0
  6103                           
  6104  0070                     PWM1_LoadDutyValue@dutyCycle1:	
  6105                           ; 2 bytes @ 0x0
  6106                           
  6107  0070                     ___awdiv@divisor:	
  6108                           ; 2 bytes @ 0x0
  6109                           
  6110  0070                     ___lwmod@divisor:	
  6111                           ; 2 bytes @ 0x0
  6112                           
  6113  0070                     ___ftpack@arg:	
  6114                           ; 2 bytes @ 0x0
  6115                           
  6116  0070                     ___ftge@ff1:	
  6117                           ; 3 bytes @ 0x0
  6118                           
  6119  0070                     frexp@value:	
  6120                           ; 3 bytes @ 0x0
  6121                           
  6122  0070                     ___aldiv@divisor:	
  6123                           ; 3 bytes @ 0x0
  6124                           
  6125                           
  6126                           ; 4 bytes @ 0x0
  6127  0070                     	ds	1
  6128  0071                     ??_LCDWrite:	
  6129                           
  6130                           ; 1 bytes @ 0x1
  6131  0071                     	ds	1
  6132  0072                     ??_PWM6_LoadDutyValue:	
  6133  0072                     ??_PWM7_LoadDutyValue:	
  6134                           ; 1 bytes @ 0x2
  6135                           
  6136  0072                     ??_PWM1_LoadDutyValue:	
  6137                           ; 1 bytes @ 0x2
  6138                           
  6139  0072                     LCDWrite@data_or_command:	
  6140                           ; 1 bytes @ 0x2
  6141                           
  6142  0072                     ___awdiv@dividend:	
  6143                           ; 1 bytes @ 0x2
  6144                           
  6145  0072                     ___lwmod@dividend:	
  6146                           ; 2 bytes @ 0x2
  6147                           
  6148                           
  6149                           ; 2 bytes @ 0x2
  6150  0072                     	ds	1
  6151  0073                     ??_ADCRead:	
  6152  0073                     ADCRead@channel:	
  6153                           ; 1 bytes @ 0x3
  6154                           
  6155  0073                     LCDWrite@d:	
  6156                           ; 1 bytes @ 0x3
  6157                           
  6158  0073                     ___ftpack@exp:	
  6159                           ; 1 bytes @ 0x3
  6160                           
  6161  0073                     frexp@eptr:	
  6162                           ; 1 bytes @ 0x3
  6163                           
  6164  0073                     ___ftge@ff2:	
  6165                           ; 1 bytes @ 0x3
  6166                           
  6167                           
  6168                           ; 3 bytes @ 0x3
  6169  0073                     	ds	1
  6170  0074                     ??_frexp:	
  6171  0074                     ??_readButton:	
  6172                           ; 1 bytes @ 0x4
  6173                           
  6174  0074                     ??___awdiv:	
  6175                           ; 1 bytes @ 0x4
  6176                           
  6177  0074                     ??___lwmod:	
  6178                           ; 1 bytes @ 0x4
  6179                           
  6180  0074                     LCDWrite@i:	
  6181                           ; 1 bytes @ 0x4
  6182                           
  6183  0074                     ___ftpack@sign:	
  6184                           ; 1 bytes @ 0x4
  6185                           
  6186  0074                     ___aldiv@dividend:	
  6187                           ; 1 bytes @ 0x4
  6188                           
  6189                           
  6190                           ; 4 bytes @ 0x4
  6191  0074                     	ds	1
  6192  0075                     ?_gotoXY:	
  6193  0075                     ??___ftpack:	
  6194                           ; 1 bytes @ 0x5
  6195                           
  6196  0075                     ??_LCDInit:	
  6197                           ; 1 bytes @ 0x5
  6198                           
  6199  0075                     gotoXY@y:	
  6200                           ; 1 bytes @ 0x5
  6201                           
  6202  0075                     ___awdiv@counter:	
  6203                           ; 1 bytes @ 0x5
  6204                           
  6205  0075                     ___lwmod@counter:	
  6206                           ; 1 bytes @ 0x5
  6207                           
  6208                           
  6209                           ; 1 bytes @ 0x5
  6210  0075                     	ds	1
  6211  0076                     ??_gotoXY:	
  6212  0076                     ??___ftge:	
  6213                           ; 1 bytes @ 0x6
  6214                           
  6215  0076                     ___awdiv@sign:	
  6216                           ; 1 bytes @ 0x6
  6217                           
  6218                           
  6219                           ; 1 bytes @ 0x6
  6220  0076                     	ds	1
  6221  0077                     gotoXY@x:	
  6222  0077                     ___awdiv@quotient:	
  6223                           ; 1 bytes @ 0x7
  6224                           
  6225                           
  6226                           ; 2 bytes @ 0x7
  6227  0077                     	ds	1
  6228  0078                     ??_LCDClear:	
  6229  0078                     ??___aldiv:	
  6230                           ; 1 bytes @ 0x8
  6231                           
  6232  0078                     ?___awtoft:	
  6233                           ; 1 bytes @ 0x8
  6234                           
  6235  0078                     ___awtoft@c:	
  6236                           ; 3 bytes @ 0x8
  6237                           
  6238                           
  6239                           ; 2 bytes @ 0x8
  6240  0078                     	ds	1
  6241  0079                     ?___wmul:	
  6242  0079                     LCDClear@index:	
  6243                           ; 2 bytes @ 0x9
  6244                           
  6245  0079                     ___wmul@multiplier:	
  6246                           ; 2 bytes @ 0x9
  6247                           
  6248                           
  6249                           ; 2 bytes @ 0x9
  6250  0079                     	ds	2
  6251  007B                     ??_SYSTEM_Initialize:	
  6252  007B                     ??___awtoft:	
  6253                           ; 1 bytes @ 0xB
  6254                           
  6255  007B                     ___wmul@multiplicand:	
  6256                           ; 1 bytes @ 0xB
  6257                           
  6258                           
  6259                           ; 2 bytes @ 0xB
  6260  007B                     	ds	2
  6261  007D                     ??_LCDWriteString:	
  6262  007D                     ??___wmul:	
  6263                           ; 1 bytes @ 0xD
  6264                           
  6265  007D                     ___awtoft@sign:	
  6266                           ; 1 bytes @ 0xD
  6267                           
  6268                           
  6269                           ; 1 bytes @ 0xD
  6270  007D                     	ds	1
  6271  007E                     ??_eval_poly:	
  6272  007E                     ??_tempCalc:	
  6273                           ; 1 bytes @ 0xE
  6274                           
  6275  007E                     ??___ftsub:	
  6276                           ; 1 bytes @ 0xE
  6277                           
  6278                           
  6279                           	psect	cstackBANK0
  6280  0020                     __pcstackBANK0:	
  6281                           ; 1 bytes @ 0xE
  6282                           
  6283  0020                     ?___ftdiv:	
  6284  0020                     ___aldiv@counter:	
  6285                           ; 3 bytes @ 0x0
  6286                           
  6287  0020                     ___wmul@product:	
  6288                           ; 1 bytes @ 0x0
  6289                           
  6290  0020                     ___ftdiv@f2:	
  6291                           ; 2 bytes @ 0x0
  6292                           
  6293                           
  6294                           ; 3 bytes @ 0x0
  6295  0020                     	ds	1
  6296  0021                     ___aldiv@sign:	
  6297                           
  6298                           ; 1 bytes @ 0x1
  6299  0021                     	ds	1
  6300  0022                     ??_LCDWriteCharacter:	
  6301  0022                     ___aldiv@quotient:	
  6302                           ; 1 bytes @ 0x2
  6303                           
  6304                           
  6305                           ; 4 bytes @ 0x2
  6306  0022                     	ds	1
  6307  0023                     ___ftdiv@f1:	
  6308                           
  6309                           ; 3 bytes @ 0x3
  6310  0023                     	ds	2
  6311  0025                     LCDWriteCharacter@character:	
  6312                           
  6313                           ; 1 bytes @ 0x5
  6314  0025                     	ds	1
  6315  0026                     ??___ftdiv:	
  6316  0026                     ?_readIAnalog:	
  6317                           ; 1 bytes @ 0x6
  6318                           
  6319  0026                     readIAnalog@channel:	
  6320                           ; 2 bytes @ 0x6
  6321                           
  6322  0026                     LCDWriteCharacter@base:	
  6323                           ; 2 bytes @ 0x6
  6324                           
  6325                           
  6326                           ; 2 bytes @ 0x6
  6327  0026                     	ds	2
  6328  0028                     ?_LCDWriteString:	
  6329  0028                     ??_readIAnalog:	
  6330                           ; 1 bytes @ 0x8
  6331                           
  6332  0028                     ?_LCDWriteInt:	
  6333                           ; 1 bytes @ 0x8
  6334                           
  6335  0028                     LCDWriteString@characters:	
  6336                           ; 1 bytes @ 0x8
  6337                           
  6338  0028                     LCDWriteInt@value:	
  6339                           ; 2 bytes @ 0x8
  6340                           
  6341                           
  6342                           ; 2 bytes @ 0x8
  6343  0028                     	ds	2
  6344  002A                     ??_Battery_State_Machine:	
  6345  002A                     LCDWriteInt@fieldLength:	
  6346                           ; 1 bytes @ 0xA
  6347                           
  6348  002A                     ___ftdiv@cntr:	
  6349                           ; 1 bytes @ 0xA
  6350                           
  6351                           
  6352                           ; 1 bytes @ 0xA
  6353  002A                     	ds	1
  6354  002B                     LCDWriteInt@numPlaces:	
  6355  002B                     ___ftdiv@f3:	
  6356                           ; 1 bytes @ 0xB
  6357                           
  6358                           
  6359                           ; 3 bytes @ 0xB
  6360  002B                     	ds	1
  6361  002C                     LCDWriteInt@sign:	
  6362                           
  6363                           ; 1 bytes @ 0xC
  6364  002C                     	ds	1
  6365  002D                     ??_LCDWriteInt:	
  6366                           
  6367                           ; 1 bytes @ 0xD
  6368  002D                     	ds	1
  6369  002E                     ___ftdiv@exp:	
  6370                           
  6371                           ; 1 bytes @ 0xE
  6372  002E                     	ds	1
  6373  002F                     ___ftdiv@sign:	
  6374                           
  6375                           ; 1 bytes @ 0xF
  6376  002F                     	ds	1
  6377  0030                     ?___ftmul:	
  6378  0030                     ?___fttol:	
  6379                           ; 3 bytes @ 0x10
  6380                           
  6381  0030                     ___ftmul@f1:	
  6382                           ; 4 bytes @ 0x10
  6383                           
  6384  0030                     ___fttol@f1:	
  6385                           ; 3 bytes @ 0x10
  6386                           
  6387                           
  6388                           ; 3 bytes @ 0x10
  6389  0030                     	ds	1
  6390  0031                     LCDWriteInt@str:	
  6391                           
  6392                           ; 5 bytes @ 0x11
  6393  0031                     	ds	2
  6394  0033                     ___ftmul@f2:	
  6395                           
  6396                           ; 3 bytes @ 0x13
  6397  0033                     	ds	1
  6398  0034                     ??___fttol:	
  6399                           
  6400                           ; 1 bytes @ 0x14
  6401  0034                     	ds	2
  6402  0036                     ??___ftmul:	
  6403  0036                     LCDWriteInt@j:	
  6404                           ; 1 bytes @ 0x16
  6405                           
  6406                           
  6407                           ; 1 bytes @ 0x16
  6408  0036                     	ds	1
  6409  0037                     LCDWriteInt@i:	
  6410                           
  6411                           ; 1 bytes @ 0x17
  6412  0037                     	ds	1
  6413  0038                     ___fttol@sign1:	
  6414                           
  6415                           ; 1 bytes @ 0x18
  6416  0038                     	ds	1
  6417  0039                     ___fttol@lval:	
  6418                           
  6419                           ; 4 bytes @ 0x19
  6420  0039                     	ds	1
  6421  003A                     ___ftmul@exp:	
  6422  003A                     readIAnalog@analog_channel:	
  6423                           ; 1 bytes @ 0x1A
  6424                           
  6425                           
  6426                           ; 2 bytes @ 0x1A
  6427  003A                     	ds	1
  6428  003B                     ___ftmul@f3_as_product:	
  6429                           
  6430                           ; 3 bytes @ 0x1B
  6431  003B                     	ds	1
  6432  003C                     readIAnalog@value:	
  6433                           
  6434                           ; 2 bytes @ 0x1C
  6435  003C                     	ds	1
  6436  003D                     ___fttol@exp1:	
  6437                           
  6438                           ; 1 bytes @ 0x1D
  6439  003D                     	ds	1
  6440  003E                     ??_calculateCurrent0:	
  6441  003E                     ??_calculateCurrent1:	
  6442                           ; 1 bytes @ 0x1E
  6443                           
  6444  003E                     ___ftmul@cntr:	
  6445                           ; 1 bytes @ 0x1E
  6446                           
  6447                           
  6448                           ; 1 bytes @ 0x1E
  6449  003E                     	ds	1
  6450  003F                     ___ftmul@sign:	
  6451                           
  6452                           ; 1 bytes @ 0x1F
  6453  003F                     	ds	1
  6454  0040                     ?___ftadd:	
  6455  0040                     ___ftadd@f1:	
  6456                           ; 3 bytes @ 0x20
  6457                           
  6458                           
  6459                           ; 3 bytes @ 0x20
  6460  0040                     	ds	3
  6461  0043                     ___ftadd@f2:	
  6462                           
  6463                           ; 3 bytes @ 0x23
  6464  0043                     	ds	3
  6465  0046                     ??___ftadd:	
  6466                           
  6467                           ; 1 bytes @ 0x26
  6468  0046                     	ds	4
  6469  004A                     ___ftadd@sign:	
  6470                           
  6471                           ; 1 bytes @ 0x2A
  6472  004A                     	ds	1
  6473  004B                     ___ftadd@exp2:	
  6474                           
  6475                           ; 1 bytes @ 0x2B
  6476  004B                     	ds	1
  6477  004C                     ___ftadd@exp1:	
  6478                           
  6479                           ; 1 bytes @ 0x2C
  6480  004C                     	ds	1
  6481  004D                     ?_eval_poly:	
  6482  004D                     ?___ftsub:	
  6483                           ; 3 bytes @ 0x2D
  6484                           
  6485  004D                     ___ftsub@f2:	
  6486                           ; 3 bytes @ 0x2D
  6487                           
  6488  004D                     eval_poly@x:	
  6489                           ; 3 bytes @ 0x2D
  6490                           
  6491                           
  6492                           ; 3 bytes @ 0x2D
  6493  004D                     	ds	3
  6494  0050                     eval_poly@d:	
  6495  0050                     ___ftsub@f1:	
  6496                           ; 2 bytes @ 0x30
  6497                           
  6498                           
  6499                           ; 3 bytes @ 0x30
  6500  0050                     	ds	2
  6501  0052                     eval_poly@n:	
  6502                           
  6503                           ; 2 bytes @ 0x32
  6504  0052                     	ds	2
  6505  0054                     eval_poly@res:	
  6506                           
  6507                           ; 3 bytes @ 0x34
  6508  0054                     	ds	3
  6509  0057                     ?_log:	
  6510  0057                     log@x:	
  6511                           ; 3 bytes @ 0x37
  6512                           
  6513                           
  6514                           ; 3 bytes @ 0x37
  6515  0057                     	ds	3
  6516  005A                     ??_log:	
  6517                           
  6518                           ; 1 bytes @ 0x3A
  6519  005A                     	ds	1
  6520  005B                     log@exponent:	
  6521                           
  6522                           ; 2 bytes @ 0x3B
  6523  005B                     	ds	2
  6524  005D                     ?_tempCalc:	
  6525  005D                     tempCalc@analogValue:	
  6526                           ; 2 bytes @ 0x3D
  6527                           
  6528                           
  6529                           ; 2 bytes @ 0x3D
  6530  005D                     	ds	2
  6531  005F                     tempCalc@R:	
  6532                           
  6533                           ; 3 bytes @ 0x3F
  6534  005F                     	ds	3
  6535  0062                     _tempCalc$1285:	
  6536                           
  6537                           ; 3 bytes @ 0x42
  6538  0062                     	ds	3
  6539  0065                     tempCalc@steinhart:	
  6540                           
  6541                           ; 3 bytes @ 0x45
  6542  0065                     	ds	3
  6543  0068                     ??_main:	
  6544                           
  6545                           ; 1 bytes @ 0x48
  6546  0068                     	ds	4
  6547                           
  6548                           	psect	maintext
  6549  0285                     __pmaintext:	
  6550 ;;
  6551 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  6552 ;;
  6553 ;; *************** function _main *****************
  6554 ;; Defined at:
  6555 ;;		line 42 in file "main.c"
  6556 ;; Parameters:    Size  Location     Type
  6557 ;;		None
  6558 ;; Auto vars:     Size  Location     Type
  6559 ;;  efficiency      3   22[BANK1 ] float 
  6560 ;;  dutyCycle6      2   33[BANK1 ] unsigned int 
  6561 ;;  MPPT0           2   30[BANK1 ] int 
  6562 ;;  dutyCycle1      2   28[BANK1 ] unsigned int 
  6563 ;;  dutyCycle7      2   26[BANK1 ] unsigned int 
  6564 ;;  IOutTotal       2   16[BANK1 ] int 
  6565 ;;  MPPT1           2    9[BANK1 ] int 
  6566 ;;  faultNotRese    2    4[BANK1 ] unsigned int 
  6567 ;;  faultCount      2    2[BANK1 ] unsigned int 
  6568 ;;  batteryTemp     2    0[BANK1 ] int 
  6569 ;;  j               1   32[BANK1 ] unsigned char 
  6570 ;;  menuButton      1   25[BANK1 ] unsigned char 
  6571 ;;  displayRefre    1   12[BANK1 ] unsigned char 
  6572 ;;  slowLoop        1   11[BANK1 ] unsigned char 
  6573 ;; Return value:  Size  Location     Type
  6574 ;;                  1    wreg      void 
  6575 ;; Registers used:
  6576 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6577 ;; Tracked objects:
  6578 ;;		On entry : B1F/0
  6579 ;;		On exit  : 0/0
  6580 ;;		Unchanged: 0/0
  6581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6583 ;;      Locals:         0       0      35       0       0       0       0       0       0       0       0       0       
      +0       0
  6584 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6585 ;;      Totals:         0       4      35       0       0       0       0       0       0       0       0       0       
      +0       0
  6586 ;;Total ram usage:       39 bytes
  6587 ;; Hardware stack levels required when called:    5
  6588 ;; This function calls:
  6589 ;;		_ADCRead
  6590 ;;		_Battery_State_Machine
  6591 ;;		_LCDClear
  6592 ;;		_LCDInit
  6593 ;;		_LCDWriteCharacter
  6594 ;;		_LCDWriteInt
  6595 ;;		_PWM1_LoadDutyValue
  6596 ;;		_PWM6_LoadDutyValue
  6597 ;;		_PWM7_LoadDutyValue
  6598 ;;		_SYSTEM_Initialize
  6599 ;;		___awdiv
  6600 ;;		___awtoft
  6601 ;;		___ftdiv
  6602 ;;		___ftmul
  6603 ;;		___fttol
  6604 ;;		___wmul
  6605 ;;		_calculateCurrent0
  6606 ;;		_calculateCurrent1
  6607 ;;		_cc_cv_mode
  6608 ;;		_gotoXY
  6609 ;;		_readButton
  6610 ;;		_readIAnalog
  6611 ;;		_tempCalc
  6612 ;; This function is called by:
  6613 ;;		Startup code after reset
  6614 ;; This function uses a non-reentrant model
  6615 ;;
  6616                           
  6617                           
  6618                           ;psect for function _main
  6619  0285                     _main:	
  6620                           
  6621                           ;main.c: 44: int16_t MPPT0 = 1750;
  6622                           
  6623                           ;incstack = 0
  6624                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6625  0285  30D6               	movlw	214
  6626  0286  0021               	movlb	1	; select bank1
  6627  0287  00E1               	movwf	main@MPPT0^(0+128)
  6628  0288  3006               	movlw	6
  6629  0289  00E2               	movwf	(main@MPPT0^(0+128)+1)
  6630                           
  6631                           ;main.c: 45: int16_t MPPT1 = 1760;
  6632  028A  30E0               	movlw	224
  6633  028B  00CC               	movwf	main@MPPT1^(0+128)
  6634  028C  3006               	movlw	6
  6635  028D  00CD               	movwf	(main@MPPT1^(0+128)+1)
  6636                           
  6637                           ;main.c: 47: uint16_t dutyCycle6 = 1023;
  6638  028E  30FF               	movlw	255
  6639  028F  00E4               	movwf	main@dutyCycle6^(0+128)
  6640  0290  3003               	movlw	3
  6641  0291  00E5               	movwf	(main@dutyCycle6^(0+128)+1)
  6642                           
  6643                           ;main.c: 48: uint16_t dutyCycle7 = 256;
  6644  0292  3000               	movlw	0
  6645  0293  00DD               	movwf	main@dutyCycle7^(0+128)
  6646  0294  3001               	movlw	1
  6647  0295  00DE               	movwf	(main@dutyCycle7^(0+128)+1)
  6648                           
  6649                           ;main.c: 49: uint16_t dutyCycle1 = 60;
  6650  0296  303C               	movlw	60
  6651  0297  00DF               	movwf	main@dutyCycle1^(0+128)
  6652  0298  3000               	movlw	0
  6653  0299  00E0               	movwf	(main@dutyCycle1^(0+128)+1)
  6654                           
  6655                           ;main.c: 50: int16_t IOutTotal = 0;
  6656  029A  01D3               	clrf	main@IOutTotal^(0+128)
  6657  029B  01D4               	clrf	(main@IOutTotal+1)^(0+128)
  6658                           
  6659                           ;main.c: 52: uint8_t j = 0;
  6660  029C  01E3               	clrf	main@j^(0+128)
  6661                           
  6662                           ;main.c: 55: uint8_t slowLoop = 200;
  6663  029D  30C8               	movlw	200
  6664  029E  0020               	movlb	0	; select bank0
  6665  029F  00E8               	movwf	??_main
  6666  02A0  0868               	movf	??_main,w
  6667  02A1  0021               	movlb	1	; select bank1
  6668  02A2  00CE               	movwf	main@slowLoop^(0+128)
  6669                           
  6670                           ;main.c: 56: uint8_t displayRefresh = 0;
  6671  02A3  01CF               	clrf	main@displayRefresh^(0+128)
  6672                           
  6673                           ;main.c: 57: int16_t batteryTemp = 250;
  6674  02A4  30FA               	movlw	250
  6675  02A5  00C3               	movwf	main@batteryTemp^(0+128)
  6676  02A6  3000               	movlw	0
  6677  02A7  00C4               	movwf	(main@batteryTemp^(0+128)+1)
  6678                           
  6679                           ;main.c: 58: float efficiency = 0;
  6680  02A8  3000               	movlw	0
  6681  02A9  00D9               	movwf	main@efficiency^(0+128)
  6682  02AA  3000               	movlw	0
  6683  02AB  00DA               	movwf	(main@efficiency+1)^(0+128)
  6684  02AC  3000               	movlw	0
  6685  02AD  00DB               	movwf	(main@efficiency+2)^(0+128)
  6686                           
  6687                           ;main.c: 59: extern int8_t Imode0;
  6688                           ;main.c: 60: extern int8_t Imode1;
  6689                           ;main.c: 61: extern int16_t Vref;
  6690                           ;main.c: 62: extern int16_t Iref;
  6691                           ;main.c: 63: uint8_t menuButton = 0;
  6692  02AE  01DC               	clrf	main@menuButton^(0+128)
  6693                           
  6694                           ;main.c: 64: uint16_t faultCount = 0;
  6695  02AF  01C5               	clrf	main@faultCount^(0+128)
  6696  02B0  01C6               	clrf	(main@faultCount+1)^(0+128)
  6697                           
  6698                           ;main.c: 65: uint16_t faultNotReset = 0;
  6699  02B1  01C7               	clrf	main@faultNotReset^(0+128)
  6700  02B2  01C8               	clrf	(main@faultNotReset+1)^(0+128)
  6701                           
  6702                           ;main.c: 66: extern int8_t VHoldMode;
  6703                           ;main.c: 69: SYSTEM_Initialize();
  6704  02B3  3195  2551  3182   	fcall	_SYSTEM_Initialize
  6705                           
  6706                           ;main.c: 71: LCDClear();
  6707  02B6  3194  24FF  3182   	fcall	_LCDClear
  6708  02B9                     l3031:	
  6709                           ;main.c: 73: void calculateCurrent0(void);
  6710                           ;main.c: 74: void calculateCurrent1(void);
  6711                           ;main.c: 90: while (1)
  6712                           
  6713                           
  6714                           ;main.c: 91: {
  6715                           ;main.c: 92: if(!(RB2))
  6716  02B9  0020               	movlb	0	; select bank0
  6717  02BA  190D               	btfsc	13,2	;volatile
  6718  02BB  2ACD               	goto	l3039
  6719                           
  6720                           ;main.c: 93: {
  6721                           ;main.c: 94: LATA5=0;
  6722  02BC  1296               	bcf	22,5	;volatile
  6723                           
  6724                           ;main.c: 95: _delay((unsigned long)((400)*(32000000/4000000.0)));
  6725  02BD  3005               	movlw	5
  6726  02BE  0020               	movlb	0	; select bank0
  6727  02BF  00E8               	movwf	??_main
  6728  02C0  3026               	movlw	38
  6729  02C1                     u3717:	
  6730  02C1  0B89               	decfsz	9,f
  6731  02C2  2AC1               	goto	u3717
  6732  02C3  0BE8               	decfsz	??_main,f
  6733  02C4  2AC1               	goto	u3717
  6734  02C5  0000               	nop
  6735                           
  6736                           ;main.c: 96: faultCount+=1;
  6737  02C6  3001               	movlw	1
  6738  02C7  0021               	movlb	1	; select bank1
  6739  02C8  07C5               	addwf	main@faultCount^(0+128),f
  6740  02C9  3000               	movlw	0
  6741  02CA  3DC6               	addwfc	(main@faultCount+1)^(0+128),f
  6742                           
  6743                           ;main.c: 97: LATA5=1;
  6744  02CB  0020               	movlb	0	; select bank0
  6745  02CC  1696               	bsf	22,5	;volatile
  6746  02CD                     l3039:	
  6747                           
  6748                           ;main.c: 98: }
  6749                           ;main.c: 99: for(j=0;j<4;j++) Ianalogs[j]=readIAnalog(j);
  6750  02CD  0021               	movlb	1	; select bank1
  6751  02CE  01E3               	clrf	main@j^(0+128)
  6752  02CF  3004               	movlw	4
  6753  02D0  0263               	subwf	main@j^(0+128),w
  6754  02D1  1803               	btfsc	3,0
  6755  02D2  2AF2               	goto	l3051
  6756  02D3                     l3045:	
  6757  02D3  0863               	movf	main@j^(0+128),w
  6758  02D4  0020               	movlb	0	; select bank0
  6759  02D5  00E8               	movwf	??_main
  6760  02D6  01E9               	clrf	??_main+1
  6761  02D7  0868               	movf	??_main,w
  6762  02D8  00A6               	movwf	readIAnalog@channel
  6763  02D9  0869               	movf	??_main+1,w
  6764  02DA  00A7               	movwf	readIAnalog@channel+1
  6765  02DB  3181  2139  3182   	fcall	_readIAnalog
  6766  02DE  0021               	movlb	1	; select bank1
  6767  02DF  3563               	lslf	main@j^(0+128),w
  6768  02E0  3E30               	addlw	(low (_Ianalogs| (0+256)))& (0+255)
  6769  02E1  0086               	movwf	6
  6770  02E2  3001               	movlw	1	; select bank2/3
  6771  02E3  0087               	movwf	7
  6772  02E4  0020               	movlb	0	; select bank0
  6773  02E5  0826               	movf	?_readIAnalog,w
  6774  02E6  3FC0               	movwi [0]fsr1
  6775  02E7  0827               	movf	?_readIAnalog+1,w
  6776  02E8  3FC1               	movwi [1]fsr1
  6777  02E9  3001               	movlw	1
  6778  02EA  00E8               	movwf	??_main
  6779  02EB  0868               	movf	??_main,w
  6780  02EC  0021               	movlb	1	; select bank1
  6781  02ED  07E3               	addwf	main@j^(0+128),f
  6782  02EE  3004               	movlw	4
  6783  02EF  0263               	subwf	main@j^(0+128),w
  6784  02F0  1C03               	skipc
  6785  02F1  2AD3               	goto	l3045
  6786  02F2                     l3051:	
  6787                           
  6788                           ;main.c: 101: Vanalogs[0]=ADCRead(23);
  6789  02F2  3017               	movlw	23
  6790  02F3  3193  23EC  3182   	fcall	_ADCRead
  6791  02F6  0871               	movf	?_ADCRead+1,w
  6792  02F7  0021               	movlb	1	; select bank1
  6793  02F8  00A1               	movwf	(_Vanalogs+1)^(0+128)
  6794  02F9  0870               	movf	?_ADCRead,w
  6795  02FA  00A0               	movwf	_Vanalogs^(0+128)
  6796                           
  6797                           ;main.c: 103: Vanalogs[1]=ADCRead(21);
  6798  02FB  3015               	movlw	21
  6799  02FC  3193  23EC  3182   	fcall	_ADCRead
  6800  02FF  0871               	movf	?_ADCRead+1,w
  6801  0300  0021               	movlb	1	; select bank1
  6802  0301  00A3               	movwf	((_Vanalogs+1)^(0+128)+2)
  6803  0302  0870               	movf	?_ADCRead,w
  6804  0303  00A2               	movwf	(_Vanalogs^(0+128)+2)
  6805                           
  6806                           ;main.c: 105: Vanalogs[2]=ADCRead(19);
  6807  0304  3013               	movlw	19
  6808  0305  3193  23EC  3182   	fcall	_ADCRead
  6809  0308  0871               	movf	?_ADCRead+1,w
  6810  0309  0021               	movlb	1	; select bank1
  6811  030A  00A5               	movwf	((_Vanalogs+1)^(0+128)+4)
  6812  030B  0870               	movf	?_ADCRead,w
  6813  030C  00A4               	movwf	(_Vanalogs^(0+128)+4)
  6814                           
  6815                           ;main.c: 107: Vanalogs[3]=ADCRead(17);
  6816  030D  3011               	movlw	17
  6817  030E  3193  23EC  3182   	fcall	_ADCRead
  6818  0311  0871               	movf	?_ADCRead+1,w
  6819  0312  0021               	movlb	1	; select bank1
  6820  0313  00A7               	movwf	((_Vanalogs+1)^(0+128)+6)
  6821  0314  0870               	movf	?_ADCRead,w
  6822  0315  00A6               	movwf	(_Vanalogs^(0+128)+6)
  6823                           
  6824                           ;main.c: 109: if(!(RB2))faultNotReset+=1;
  6825  0316  0020               	movlb	0	; select bank0
  6826  0317  190D               	btfsc	13,2	;volatile
  6827  0318  2B1E               	goto	l3057
  6828  0319  3001               	movlw	1
  6829  031A  0021               	movlb	1	; select bank1
  6830  031B  07C7               	addwf	main@faultNotReset^(0+128),f
  6831  031C  3000               	movlw	0
  6832  031D  3DC8               	addwfc	(main@faultNotReset+1)^(0+128),f
  6833  031E                     l3057:	
  6834                           
  6835                           ;main.c: 111: voltage[0]=(int16_t)(Vanalogs[0]/.405775);
  6836  031E  0021               	movlb	1	; select bank1
  6837  031F  0821               	movf	(_Vanalogs+1)^(0+128),w
  6838  0320  00F9               	movwf	___awtoft@c+1
  6839  0321  0820               	movf	_Vanalogs^(0+128),w
  6840  0322  00F8               	movwf	___awtoft@c
  6841  0323  3194  24BA  3182   	fcall	___awtoft
  6842  0326  0878               	movf	?___awtoft,w
  6843  0327  0020               	movlb	0	; select bank0
  6844  0328  00A3               	movwf	___ftdiv@f1
  6845  0329  0879               	movf	?___awtoft+1,w
  6846  032A  00A4               	movwf	___ftdiv@f1+1
  6847  032B  087A               	movf	?___awtoft+2,w
  6848  032C  00A5               	movwf	___ftdiv@f1+2
  6849  032D  30C2               	movlw	194
  6850  032E  00A0               	movwf	___ftdiv@f2
  6851  032F  30CF               	movlw	207
  6852  0330  00A1               	movwf	___ftdiv@f2+1
  6853  0331  303E               	movlw	62
  6854  0332  00A2               	movwf	___ftdiv@f2+2
  6855  0333  318C  2444  3182   	fcall	___ftdiv
  6856  0336  0020               	movlb	0	; select bank0
  6857  0337  0820               	movf	?___ftdiv,w
  6858  0338  00B0               	movwf	___fttol@f1
  6859  0339  0821               	movf	?___ftdiv+1,w
  6860  033A  00B1               	movwf	___fttol@f1+1
  6861  033B  0822               	movf	?___ftdiv+2,w
  6862  033C  00B2               	movwf	___fttol@f1+2
  6863  033D  318A  2298  3182   	fcall	___fttol
  6864  0340  0020               	movlb	0	; select bank0
  6865  0341  0831               	movf	?___fttol+1,w
  6866  0342  0021               	movlb	1	; select bank1
  6867  0343  00B1               	movwf	(_voltage+1)^(0+128)
  6868  0344  0020               	movlb	0	; select bank0
  6869  0345  0830               	movf	?___fttol,w
  6870  0346  0021               	movlb	1	; select bank1
  6871  0347  00B0               	movwf	_voltage^(0+128)
  6872                           
  6873                           ;main.c: 113: voltage[1]=(int16_t)(Vanalogs[1]/.54503);
  6874  0348  0823               	movf	((_Vanalogs+1)^(0+128)+2),w
  6875  0349  00F9               	movwf	___awtoft@c+1
  6876  034A  0822               	movf	(_Vanalogs^(0+128)+2),w
  6877  034B  00F8               	movwf	___awtoft@c
  6878  034C  3194  24BA  3182   	fcall	___awtoft
  6879  034F  0878               	movf	?___awtoft,w
  6880  0350  0020               	movlb	0	; select bank0
  6881  0351  00A3               	movwf	___ftdiv@f1
  6882  0352  0879               	movf	?___awtoft+1,w
  6883  0353  00A4               	movwf	___ftdiv@f1+1
  6884  0354  087A               	movf	?___awtoft+2,w
  6885  0355  00A5               	movwf	___ftdiv@f1+2
  6886  0356  3087               	movlw	135
  6887  0357  00A0               	movwf	___ftdiv@f2
  6888  0358  300B               	movlw	11
  6889  0359  00A1               	movwf	___ftdiv@f2+1
  6890  035A  303F               	movlw	63
  6891  035B  00A2               	movwf	___ftdiv@f2+2
  6892  035C  318C  2444  3182   	fcall	___ftdiv
  6893  035F  0020               	movlb	0	; select bank0
  6894  0360  0820               	movf	?___ftdiv,w
  6895  0361  00B0               	movwf	___fttol@f1
  6896  0362  0821               	movf	?___ftdiv+1,w
  6897  0363  00B1               	movwf	___fttol@f1+1
  6898  0364  0822               	movf	?___ftdiv+2,w
  6899  0365  00B2               	movwf	___fttol@f1+2
  6900  0366  318A  2298  3182   	fcall	___fttol
  6901  0369  0020               	movlb	0	; select bank0
  6902  036A  0831               	movf	?___fttol+1,w
  6903  036B  0021               	movlb	1	; select bank1
  6904  036C  00B3               	movwf	((_voltage+1)^(0+128)+2)
  6905  036D  0020               	movlb	0	; select bank0
  6906  036E  0830               	movf	?___fttol,w
  6907  036F  0021               	movlb	1	; select bank1
  6908  0370  00B2               	movwf	(_voltage^(0+128)+2)
  6909                           
  6910                           ;main.c: 119: calculateCurrent0();
  6911  0371  3196  266D  3182   	fcall	_calculateCurrent0
  6912                           
  6913                           ;main.c: 122: calculateCurrent1();
  6914  0374  3196  26B2  3182   	fcall	_calculateCurrent1
  6915                           
  6916                           ;main.c: 128: if(Imode0)
  6917  0377  0020               	movlb	0	; select bank0
  6918  0378  086E               	movf	_Imode0,w
  6919  0379  1903               	btfsc	3,2
  6920  037A  2B8B               	goto	l3081
  6921                           
  6922                           ;main.c: 129: {
  6923                           ;main.c: 130: if(voltage[0]<MPPT0)
  6924  037B  0021               	movlb	1	; select bank1
  6925  037C  0831               	movf	(_voltage+1)^(0+128),w
  6926  037D  3A80               	xorlw	128
  6927  037E  0020               	movlb	0	; select bank0
  6928  037F  00E8               	movwf	??_main
  6929  0380  0021               	movlb	1	; select bank1
  6930  0381  0862               	movf	(main@MPPT0+1)^(0+128),w
  6931  0382  3A80               	xorlw	128
  6932  0383  0020               	movlb	0	; select bank0
  6933  0384  0268               	subwf	??_main,w
  6934  0385  1D03               	skipz
  6935  0386  2B9A               	goto	u3575
  6936  0387  0021               	movlb	1	; select bank1
  6937  0388  0861               	movf	main@MPPT0^(0+128),w
  6938  0389  0230               	subwf	_voltage^(0+128),w
  6939  038A  2B9A               	goto	u3575
  6940  038B                     l3081:	
  6941                           ;main.c: 154: }
  6942                           ;main.c: 155: }
  6943                           
  6944                           ;main.c: 152: {
  6945                           
  6946                           ;main.c: 149: }
  6947                           ;main.c: 150: }
  6948                           
  6949                           ;main.c: 147: {
  6950                           
  6951                           ;main.c: 139: {
  6952                           ;main.c: 141: dutyCycle6=1023;
  6953                           
  6954                           ;main.c: 138: else if(dutyCycle6>0)
  6955                           
  6956                           ;main.c: 136: }
  6957                           ;main.c: 137: }
  6958                           
  6959                           ;main.c: 133: {
  6960                           ;main.c: 134: dutyCycle6=1023;
  6961                           
  6962                           ;main.c: 131: {
  6963                           ;main.c: 132: if(dutyCycle6<1023)
  6964                           
  6965                           
  6966                           ;main.c: 156: else
  6967                           ;main.c: 157: {
  6968                           ;main.c: 158: if(voltage[1]>(int16_t)Vref)
  6969  038B  0021               	movlb	1	; select bank1
  6970  038C  0867               	movf	(_Vref+1)^(0+128),w
  6971  038D  3A80               	xorlw	128
  6972  038E  0020               	movlb	0	; select bank0
  6973  038F  00E8               	movwf	??_main
  6974  0390  0021               	movlb	1	; select bank1
  6975  0391  0833               	movf	((_voltage+1)^(0+128)+2),w
  6976  0392  3A80               	xorlw	128
  6977  0393  0020               	movlb	0	; select bank0
  6978  0394  0268               	subwf	??_main,w
  6979  0395  1D03               	skipz
  6980  0396  2B9A               	goto	u3575
  6981  0397  0021               	movlb	1	; select bank1
  6982  0398  0832               	movf	(_voltage^(0+128)+2),w
  6983  0399  0266               	subwf	_Vref^(0+128),w
  6984  039A                     u3575:	
  6985  039A  1803               	skipnc
  6986  039B  2BA5               	goto	l3087
  6987                           
  6988                           ;main.c: 159: {
  6989                           ;main.c: 161: if(dutyCycle6<1023) dutyCycle6=1023;
  6990  039C  3003               	movlw	3
  6991  039D  0021               	movlb	1	; select bank1
  6992  039E  0265               	subwf	(main@dutyCycle6+1)^(0+128),w
  6993  039F  30FF               	movlw	255
  6994  03A0  1903               	skipnz
  6995  03A1  0264               	subwf	main@dutyCycle6^(0+128),w
  6996  03A2  1803               	skipnc
  6997  03A3  2BAE               	goto	l3093
  6998  03A4  2BAA               	goto	l3089
  6999  03A5                     l3087:	
  7000                           ;main.c: 162: }
  7001                           
  7002                           
  7003                           ;main.c: 163: else
  7004                           ;main.c: 164: {
  7005                           ;main.c: 166: if(dutyCycle6>0) dutyCycle6=1023;
  7006  03A5  0021               	movlb	1	; select bank1
  7007  03A6  0864               	movf	main@dutyCycle6^(0+128),w
  7008  03A7  0465               	iorwf	(main@dutyCycle6+1)^(0+128),w
  7009  03A8  1903               	btfsc	3,2
  7010  03A9  2BAE               	goto	l3093
  7011  03AA                     l3089:	
  7012  03AA  30FF               	movlw	255
  7013  03AB  00E4               	movwf	main@dutyCycle6^(0+128)
  7014  03AC  3003               	movlw	3
  7015  03AD  00E5               	movwf	(main@dutyCycle6^(0+128)+1)
  7016  03AE                     l3093:	
  7017                           ;main.c: 173: else
  7018                           ;main.c: 174: {
  7019                           
  7020                           ;main.c: 170: {
  7021                           ;main.c: 172: }
  7022                           
  7023                           
  7024                           ;main.c: 176: }
  7025                           ;main.c: 178: }
  7026                           ;main.c: 180: slowLoop+=1;
  7027  03AE  3001               	movlw	1
  7028  03AF  0020               	movlb	0	; select bank0
  7029  03B0  00E8               	movwf	??_main
  7030  03B1  0868               	movf	??_main,w
  7031  03B2  0021               	movlb	1	; select bank1
  7032  03B3  07CE               	addwf	main@slowLoop^(0+128),f
  7033                           
  7034                           ;main.c: 182: PWM1_LoadDutyValue(dutyCycle1);
  7035  03B4  0860               	movf	(main@dutyCycle1+1)^(0+128),w
  7036  03B5  00F1               	movwf	PWM1_LoadDutyValue@dutyCycle1+1
  7037  03B6  085F               	movf	main@dutyCycle1^(0+128),w
  7038  03B7  00F0               	movwf	PWM1_LoadDutyValue@dutyCycle1
  7039  03B8  3194  2401  3182   	fcall	_PWM1_LoadDutyValue
  7040                           
  7041                           ;main.c: 183: PWM6_LoadDutyValue(dutyCycle6);
  7042  03BB  0021               	movlb	1	; select bank1
  7043  03BC  0865               	movf	(main@dutyCycle6+1)^(0+128),w
  7044  03BD  00F1               	movwf	PWM6_LoadDutyValue@dutyCycle6+1
  7045  03BE  0864               	movf	main@dutyCycle6^(0+128),w
  7046  03BF  00F0               	movwf	PWM6_LoadDutyValue@dutyCycle6
  7047  03C0  3194  2417  3182   	fcall	_PWM6_LoadDutyValue
  7048                           
  7049                           ;main.c: 184: PWM7_LoadDutyValue(dutyCycle7);
  7050  03C3  0021               	movlb	1	; select bank1
  7051  03C4  085E               	movf	(main@dutyCycle7+1)^(0+128),w
  7052  03C5  00F1               	movwf	PWM7_LoadDutyValue@dutyCycle7+1
  7053  03C6  085D               	movf	main@dutyCycle7^(0+128),w
  7054  03C7  00F0               	movwf	PWM7_LoadDutyValue@dutyCycle7
  7055  03C8  3194  242D  3182   	fcall	_PWM7_LoadDutyValue
  7056                           
  7057                           ;main.c: 186: menuButton = readButton();
  7058  03CB  318B  231F  3182   	fcall	_readButton
  7059  03CE  0020               	movlb	0	; select bank0
  7060  03CF  00E8               	movwf	??_main
  7061  03D0  0868               	movf	??_main,w
  7062  03D1  0021               	movlb	1	; select bank1
  7063  03D2  00DC               	movwf	main@menuButton^(0+128)
  7064                           
  7065                           ;main.c: 187: if(menuButton == 2) if(MPPT0>1550)MPPT0-=10;
  7066  03D3  3002               	movlw	2
  7067  03D4  065C               	xorwf	main@menuButton^(0+128),w
  7068  03D5  1D03               	btfss	3,2
  7069  03D6  2BE9               	goto	l3107
  7070  03D7  0862               	movf	(main@MPPT0+1)^(0+128),w
  7071  03D8  3A80               	xorlw	128
  7072  03D9  0020               	movlb	0	; select bank0
  7073  03DA  00E8               	movwf	??_main
  7074  03DB  3086               	movlw	134
  7075  03DC  0268               	subwf	??_main,w
  7076  03DD  1D03               	skipz
  7077  03DE  2BE2               	goto	u3615
  7078  03DF  300F               	movlw	15
  7079  03E0  0021               	movlb	1	; select bank1
  7080  03E1  0261               	subwf	main@MPPT0^(0+128),w
  7081  03E2                     u3615:	
  7082  03E2  1C03               	skipc
  7083  03E3  2BE9               	goto	l3107
  7084  03E4  30F6               	movlw	246
  7085  03E5  0021               	movlb	1	; select bank1
  7086  03E6  07E1               	addwf	main@MPPT0^(0+128),f
  7087  03E7  30FF               	movlw	255
  7088  03E8  3DE2               	addwfc	(main@MPPT0+1)^(0+128),f
  7089  03E9                     l3107:	
  7090                           
  7091                           ;main.c: 188: if(menuButton == 3)if(MPPT0<2200)MPPT0+=10;
  7092  03E9  3003               	movlw	3
  7093  03EA  0021               	movlb	1	; select bank1
  7094  03EB  065C               	xorwf	main@menuButton^(0+128),w
  7095  03EC  1D03               	btfss	3,2
  7096  03ED  2C00               	goto	l3113
  7097  03EE  0862               	movf	(main@MPPT0+1)^(0+128),w
  7098  03EF  3A80               	xorlw	128
  7099  03F0  0020               	movlb	0	; select bank0
  7100  03F1  00E8               	movwf	??_main
  7101  03F2  3088               	movlw	136
  7102  03F3  0268               	subwf	??_main,w
  7103  03F4  1D03               	skipz
  7104  03F5  2BF9               	goto	u3635
  7105  03F6  3098               	movlw	152
  7106  03F7  0021               	movlb	1	; select bank1
  7107  03F8  0261               	subwf	main@MPPT0^(0+128),w
  7108  03F9                     u3635:	
  7109  03F9  1803               	skipnc
  7110  03FA  2C00               	goto	l3113
  7111  03FB  300A               	movlw	10
  7112  03FC  0021               	movlb	1	; select bank1
  7113  03FD  07E1               	addwf	main@MPPT0^(0+128),f
  7114  03FE  3000               	movlw	0
  7115  03FF  3DE2               	addwfc	(main@MPPT0+1)^(0+128),f
  7116  0400                     l3113:	
  7117                           
  7118                           ;main.c: 189: if(menuButton == 1)LCDInit();
  7119  0400  0021               	movlb	1	; select bank1
  7120  0401  035C               	decf	main@menuButton^(0+128),w
  7121  0402  1D03               	btfss	3,2
  7122  0403  2C07               	goto	l3117
  7123  0404  3195  25BC  3182   	fcall	_LCDInit
  7124  0407                     l3117:	
  7125                           
  7126                           ;main.c: 193: if(slowLoop>200)
  7127  0407  30C9               	movlw	201
  7128  0408  0021               	movlb	1	; select bank1
  7129  0409  024E               	subwf	main@slowLoop^(0+128),w
  7130  040A  1C03               	skipc
  7131  040B  2AB9               	goto	l3031
  7132                           
  7133                           ;main.c: 194: {
  7134                           ;main.c: 196: IOutTotal=current[1]+current[3];
  7135  040C  3006               	movlw	6
  7136  040D  3EA8               	addlw	(low (_current| 0))& (0+255)
  7137  040E  0086               	movwf	6
  7138  040F  0187               	clrf	7
  7139  0410  3002               	movlw	2
  7140  0411  3EA8               	addlw	(low (_current| 0))& (0+255)
  7141  0412  0084               	movwf	4
  7142  0413  0185               	clrf	5
  7143  0414  3F40               	moviw [0]fsr1
  7144  0415  0700               	addwf	0,w
  7145  0416  00D3               	movwf	main@IOutTotal^(0+128)
  7146  0417  3101               	addfsr 0,1
  7147  0418  3F41               	moviw [1]fsr1
  7148  0419  3D00               	addwfc	0,w
  7149  041A  00D4               	movwf	(main@IOutTotal^(0+128)+1)
  7150                           
  7151                           ;main.c: 198: if(IOutTotal>20)
  7152  041B  0854               	movf	(main@IOutTotal+1)^(0+128),w
  7153  041C  3A80               	xorlw	128
  7154  041D  0020               	movlb	0	; select bank0
  7155  041E  00E8               	movwf	??_main
  7156  041F  3080               	movlw	128
  7157  0420  0268               	subwf	??_main,w
  7158  0421  1D03               	skipz
  7159  0422  2C26               	goto	u3665
  7160  0423  3015               	movlw	21
  7161  0424  0021               	movlb	1	; select bank1
  7162  0425  0253               	subwf	main@IOutTotal^(0+128),w
  7163  0426                     u3665:	
  7164  0426  1C03               	skipc
  7165  0427  2C4D               	goto	l3129
  7166                           
  7167                           ;main.c: 199: {
  7168                           ;main.c: 200: if((uint16_t)IOutTotal/2+10>dutyCycle1)dutyCycle1+=1;else dutyCycle1-=1;
  7169  0428  0021               	movlb	1	; select bank1
  7170  0429  0854               	movf	(main@IOutTotal+1)^(0+128),w
  7171  042A  0020               	movlb	0	; select bank0
  7172  042B  00E9               	movwf	??_main+1
  7173  042C  0021               	movlb	1	; select bank1
  7174  042D  0853               	movf	main@IOutTotal^(0+128),w
  7175  042E  0020               	movlb	0	; select bank0
  7176  042F  00E8               	movwf	??_main
  7177  0430  36E9               	lsrf	??_main+1,f
  7178  0431  0CE8               	rrf	??_main,f
  7179  0432  0868               	movf	??_main,w
  7180  0433  3E0A               	addlw	10
  7181  0434  00EA               	movwf	??_main+2
  7182  0435  3000               	movlw	0
  7183  0436  3D69               	addwfc	??_main+1,w
  7184  0437  00EB               	movwf	??_main+3
  7185  0438  086B               	movf	??_main+3,w
  7186  0439  0021               	movlb	1	; select bank1
  7187  043A  0260               	subwf	(main@dutyCycle1+1)^(0+128),w
  7188  043B  1D03               	skipz
  7189  043C  2C41               	goto	u3675
  7190  043D  0020               	movlb	0	; select bank0
  7191  043E  086A               	movf	??_main+2,w
  7192  043F  0021               	movlb	1	; select bank1
  7193  0440  025F               	subwf	main@dutyCycle1^(0+128),w
  7194  0441                     u3675:	
  7195  0441  1803               	skipnc
  7196  0442  2C48               	goto	l3127
  7197  0443  3001               	movlw	1
  7198  0444  07DF               	addwf	main@dutyCycle1^(0+128),f
  7199  0445  3000               	movlw	0
  7200  0446  3DE0               	addwfc	(main@dutyCycle1+1)^(0+128),f
  7201  0447  2C50               	goto	l3131
  7202  0448                     l3127:	
  7203  0448  3001               	movlw	1
  7204  0449  02DF               	subwf	main@dutyCycle1^(0+128),f
  7205  044A  3000               	movlw	0
  7206  044B  3BE0               	subwfb	(main@dutyCycle1+1)^(0+128),f
  7207                           
  7208                           ;main.c: 204: }
  7209  044C  2C50               	goto	l3131
  7210  044D                     l3129:	
  7211                           
  7212                           ;main.c: 205: else
  7213                           ;main.c: 206: {
  7214                           ;main.c: 207: dutyCycle1=0;
  7215  044D  0021               	movlb	1	; select bank1
  7216  044E  01DF               	clrf	main@dutyCycle1^(0+128)
  7217  044F  01E0               	clrf	(main@dutyCycle1+1)^(0+128)
  7218  0450                     l3131:	
  7219                           
  7220                           ;main.c: 208: }
  7221                           ;main.c: 209: if(!(RB2))
  7222  0450  0020               	movlb	0	; select bank0
  7223  0451  190D               	btfsc	13,2	;volatile
  7224  0452  2C5E               	goto	l3135
  7225                           
  7226                           ;main.c: 210: {
  7227                           ;main.c: 211: dutyCycle1=55;
  7228  0453  3037               	movlw	55
  7229  0454  0021               	movlb	1	; select bank1
  7230  0455  00DF               	movwf	main@dutyCycle1^(0+128)
  7231  0456  3000               	movlw	0
  7232  0457  00E0               	movwf	(main@dutyCycle1^(0+128)+1)
  7233                           
  7234                           ;main.c: 212: battery_state=CHARGE;
  7235  0458  3004               	movlw	4
  7236  0459  0020               	movlb	0	; select bank0
  7237  045A  00E8               	movwf	??_main
  7238  045B  0868               	movf	??_main,w
  7239  045C  0021               	movlb	1	; select bank1
  7240  045D  00EE               	movwf	_battery_state^(0+128)
  7241  045E                     l3135:	
  7242                           
  7243                           ;main.c: 213: }
  7244                           ;main.c: 215: displayRefresh+=1;
  7245  045E  3001               	movlw	1
  7246  045F  0020               	movlb	0	; select bank0
  7247  0460  00E8               	movwf	??_main
  7248  0461  0868               	movf	??_main,w
  7249  0462  0021               	movlb	1	; select bank1
  7250  0463  07CF               	addwf	main@displayRefresh^(0+128),f
  7251                           
  7252                           ;main.c: 216: if(displayRefresh>80)
  7253  0464  3051               	movlw	81
  7254  0465  024F               	subwf	main@displayRefresh^(0+128),w
  7255  0466  1C03               	skipc
  7256  0467  2C81               	goto	l3145
  7257                           
  7258                           ;main.c: 217: {
  7259                           ;main.c: 218: LCDClear();
  7260  0468  3194  24FF  3182   	fcall	_LCDClear
  7261                           
  7262                           ;main.c: 219: displayRefresh=0;
  7263  046B  0021               	movlb	1	; select bank1
  7264  046C  01CF               	clrf	main@displayRefresh^(0+128)
  7265                           
  7266                           ;main.c: 220: batteryTemp=tempCalc(ADCRead(9));
  7267  046D  3009               	movlw	9
  7268  046E  3193  23EC  3182   	fcall	_ADCRead
  7269  0471  0871               	movf	?_ADCRead+1,w
  7270  0472  0020               	movlb	0	; select bank0
  7271  0473  00DE               	movwf	tempCalc@analogValue+1
  7272  0474  0870               	movf	?_ADCRead,w
  7273  0475  00DD               	movwf	tempCalc@analogValue
  7274  0476  3180  201C  3182   	fcall	_tempCalc
  7275  0479  0020               	movlb	0	; select bank0
  7276  047A  085E               	movf	?_tempCalc+1,w
  7277  047B  0021               	movlb	1	; select bank1
  7278  047C  00C4               	movwf	(main@batteryTemp+1)^(0+128)
  7279  047D  0020               	movlb	0	; select bank0
  7280  047E  085D               	movf	?_tempCalc,w
  7281  047F  0021               	movlb	1	; select bank1
  7282  0480  00C3               	movwf	main@batteryTemp^(0+128)
  7283  0481                     l3145:	
  7284                           
  7285                           ;main.c: 221: }
  7286                           ;main.c: 222: Battery_State_Machine();
  7287  0481  318B  23A6  3182   	fcall	_Battery_State_Machine
  7288                           
  7289                           ;main.c: 223: efficiency=(float)voltage[1]/100*current[1]/10;
  7290  0484  0021               	movlb	1	; select bank1
  7291  0485  082B               	movf	((_current+1)^(0+128)+2),w
  7292  0486  00F9               	movwf	___awtoft@c+1
  7293  0487  082A               	movf	(_current^(0+128)+2),w
  7294  0488  00F8               	movwf	___awtoft@c
  7295  0489  3194  24BA  3182   	fcall	___awtoft
  7296  048C  0878               	movf	?___awtoft,w
  7297  048D  0020               	movlb	0	; select bank0
  7298  048E  00B0               	movwf	___ftmul@f1
  7299  048F  0879               	movf	?___awtoft+1,w
  7300  0490  00B1               	movwf	___ftmul@f1+1
  7301  0491  087A               	movf	?___awtoft+2,w
  7302  0492  00B2               	movwf	___ftmul@f1+2
  7303  0493  3000               	movlw	0
  7304  0494  00A0               	movwf	___ftdiv@f2
  7305  0495  30C8               	movlw	200
  7306  0496  00A1               	movwf	___ftdiv@f2+1
  7307  0497  3042               	movlw	66
  7308  0498  00A2               	movwf	___ftdiv@f2+2
  7309  0499  0021               	movlb	1	; select bank1
  7310  049A  0833               	movf	((_voltage+1)^(0+128)+2),w
  7311  049B  00F9               	movwf	___awtoft@c+1
  7312  049C  0832               	movf	(_voltage^(0+128)+2),w
  7313  049D  00F8               	movwf	___awtoft@c
  7314  049E  3194  24BA  3182   	fcall	___awtoft
  7315  04A1  0878               	movf	?___awtoft,w
  7316  04A2  0020               	movlb	0	; select bank0
  7317  04A3  00A3               	movwf	___ftdiv@f1
  7318  04A4  0879               	movf	?___awtoft+1,w
  7319  04A5  00A4               	movwf	___ftdiv@f1+1
  7320  04A6  087A               	movf	?___awtoft+2,w
  7321  04A7  00A5               	movwf	___ftdiv@f1+2
  7322  04A8  318C  2444  3182   	fcall	___ftdiv
  7323  04AB  0020               	movlb	0	; select bank0
  7324  04AC  0820               	movf	?___ftdiv,w
  7325  04AD  00B3               	movwf	___ftmul@f2
  7326  04AE  0821               	movf	?___ftdiv+1,w
  7327  04AF  00B4               	movwf	___ftmul@f2+1
  7328  04B0  0822               	movf	?___ftdiv+2,w
  7329  04B1  00B5               	movwf	___ftmul@f2+2
  7330  04B2  318D  259D  3182   	fcall	___ftmul
  7331  04B5  0020               	movlb	0	; select bank0
  7332  04B6  0830               	movf	?___ftmul,w
  7333  04B7  0021               	movlb	1	; select bank1
  7334  04B8  00D0               	movwf	_main$1286^(0+128)
  7335  04B9  0020               	movlb	0	; select bank0
  7336  04BA  0831               	movf	?___ftmul+1,w
  7337  04BB  0021               	movlb	1	; select bank1
  7338  04BC  00D1               	movwf	(_main$1286+1)^(0+128)
  7339  04BD  0020               	movlb	0	; select bank0
  7340  04BE  0832               	movf	?___ftmul+2,w
  7341  04BF  0021               	movlb	1	; select bank1
  7342  04C0  00D2               	movwf	(_main$1286+2)^(0+128)
  7343                           
  7344                           ;main.c: 223: efficiency=(float)voltage[1]/100*current[1]/10;
  7345  04C1  3000               	movlw	0
  7346  04C2  0020               	movlb	0	; select bank0
  7347  04C3  00A0               	movwf	___ftdiv@f2
  7348  04C4  3020               	movlw	32
  7349  04C5  00A1               	movwf	___ftdiv@f2+1
  7350  04C6  3041               	movlw	65
  7351  04C7  00A2               	movwf	___ftdiv@f2+2
  7352  04C8  0021               	movlb	1	; select bank1
  7353  04C9  0850               	movf	_main$1286^(0+128),w
  7354  04CA  0020               	movlb	0	; select bank0
  7355  04CB  00A3               	movwf	___ftdiv@f1
  7356  04CC  0021               	movlb	1	; select bank1
  7357  04CD  0851               	movf	(_main$1286+1)^(0+128),w
  7358  04CE  0020               	movlb	0	; select bank0
  7359  04CF  00A4               	movwf	___ftdiv@f1+1
  7360  04D0  0021               	movlb	1	; select bank1
  7361  04D1  0852               	movf	(_main$1286+2)^(0+128),w
  7362  04D2  0020               	movlb	0	; select bank0
  7363  04D3  00A5               	movwf	___ftdiv@f1+2
  7364  04D4  318C  2444  3182   	fcall	___ftdiv
  7365  04D7  0020               	movlb	0	; select bank0
  7366  04D8  0820               	movf	?___ftdiv,w
  7367  04D9  0021               	movlb	1	; select bank1
  7368  04DA  00D9               	movwf	main@efficiency^(0+128)
  7369  04DB  0020               	movlb	0	; select bank0
  7370  04DC  0821               	movf	?___ftdiv+1,w
  7371  04DD  0021               	movlb	1	; select bank1
  7372  04DE  00DA               	movwf	(main@efficiency+1)^(0+128)
  7373  04DF  0020               	movlb	0	; select bank0
  7374  04E0  0822               	movf	?___ftdiv+2,w
  7375  04E1  0021               	movlb	1	; select bank1
  7376  04E2  00DB               	movwf	(main@efficiency+2)^(0+128)
  7377                           
  7378                           ;main.c: 224: efficiency/=(float)voltage[0]/100*current[0]/10;
  7379  04E3  0831               	movf	(_voltage+1)^(0+128),w
  7380  04E4  00F9               	movwf	___awtoft@c+1
  7381  04E5  0830               	movf	_voltage^(0+128),w
  7382  04E6  00F8               	movwf	___awtoft@c
  7383  04E7  3194  24BA  3182   	fcall	___awtoft
  7384  04EA  0878               	movf	?___awtoft,w
  7385  04EB  0020               	movlb	0	; select bank0
  7386  04EC  00A3               	movwf	___ftdiv@f1
  7387  04ED  0879               	movf	?___awtoft+1,w
  7388  04EE  00A4               	movwf	___ftdiv@f1+1
  7389  04EF  087A               	movf	?___awtoft+2,w
  7390  04F0  00A5               	movwf	___ftdiv@f1+2
  7391  04F1  3000               	movlw	0
  7392  04F2  00A0               	movwf	___ftdiv@f2
  7393  04F3  30C8               	movlw	200
  7394  04F4  00A1               	movwf	___ftdiv@f2+1
  7395  04F5  3042               	movlw	66
  7396  04F6  00A2               	movwf	___ftdiv@f2+2
  7397  04F7  318C  2444  3182   	fcall	___ftdiv
  7398  04FA  0020               	movlb	0	; select bank0
  7399  04FB  0820               	movf	?___ftdiv,w
  7400  04FC  00B3               	movwf	___ftmul@f2
  7401  04FD  0821               	movf	?___ftdiv+1,w
  7402  04FE  00B4               	movwf	___ftmul@f2+1
  7403  04FF  0822               	movf	?___ftdiv+2,w
  7404  0500  00B5               	movwf	___ftmul@f2+2
  7405  0501  0021               	movlb	1	; select bank1
  7406  0502  0829               	movf	(_current+1)^(0+128),w
  7407  0503  00F9               	movwf	___awtoft@c+1
  7408  0504  0828               	movf	_current^(0+128),w
  7409  0505  00F8               	movwf	___awtoft@c
  7410  0506  3194  24BA  3182   	fcall	___awtoft
  7411  0509  0878               	movf	?___awtoft,w
  7412  050A  0020               	movlb	0	; select bank0
  7413  050B  00B0               	movwf	___ftmul@f1
  7414  050C  0879               	movf	?___awtoft+1,w
  7415  050D  00B1               	movwf	___ftmul@f1+1
  7416  050E  087A               	movf	?___awtoft+2,w
  7417  050F  00B2               	movwf	___ftmul@f1+2
  7418  0510  318D  259D  3182   	fcall	___ftmul
  7419  0513  0020               	movlb	0	; select bank0
  7420  0514  0830               	movf	?___ftmul,w
  7421  0515  0021               	movlb	1	; select bank1
  7422  0516  00D0               	movwf	_main$1286^(0+128)
  7423  0517  0020               	movlb	0	; select bank0
  7424  0518  0831               	movf	?___ftmul+1,w
  7425  0519  0021               	movlb	1	; select bank1
  7426  051A  00D1               	movwf	(_main$1286+1)^(0+128)
  7427  051B  0020               	movlb	0	; select bank0
  7428  051C  0832               	movf	?___ftmul+2,w
  7429  051D  0021               	movlb	1	; select bank1
  7430  051E  00D2               	movwf	(_main$1286+2)^(0+128)
  7431                           
  7432                           ;main.c: 224: efficiency/=(float)voltage[0]/100*current[0]/10;
  7433  051F  0850               	movf	_main$1286^(0+128),w
  7434  0520  0020               	movlb	0	; select bank0
  7435  0521  00A3               	movwf	___ftdiv@f1
  7436  0522  0021               	movlb	1	; select bank1
  7437  0523  0851               	movf	(_main$1286+1)^(0+128),w
  7438  0524  0020               	movlb	0	; select bank0
  7439  0525  00A4               	movwf	___ftdiv@f1+1
  7440  0526  0021               	movlb	1	; select bank1
  7441  0527  0852               	movf	(_main$1286+2)^(0+128),w
  7442  0528  0020               	movlb	0	; select bank0
  7443  0529  00A5               	movwf	___ftdiv@f1+2
  7444  052A  3000               	movlw	0
  7445  052B  00A0               	movwf	___ftdiv@f2
  7446  052C  3020               	movlw	32
  7447  052D  00A1               	movwf	___ftdiv@f2+1
  7448  052E  3041               	movlw	65
  7449  052F  00A2               	movwf	___ftdiv@f2+2
  7450  0530  318C  2444  3182   	fcall	___ftdiv
  7451  0533  0020               	movlb	0	; select bank0
  7452  0534  0820               	movf	?___ftdiv,w
  7453  0535  0021               	movlb	1	; select bank1
  7454  0536  00C9               	movwf	_main$1287^(0+128)
  7455  0537  0020               	movlb	0	; select bank0
  7456  0538  0821               	movf	?___ftdiv+1,w
  7457  0539  0021               	movlb	1	; select bank1
  7458  053A  00CA               	movwf	(_main$1287+1)^(0+128)
  7459  053B  0020               	movlb	0	; select bank0
  7460  053C  0822               	movf	?___ftdiv+2,w
  7461  053D  0021               	movlb	1	; select bank1
  7462  053E  00CB               	movwf	(_main$1287+2)^(0+128)
  7463                           
  7464                           ;main.c: 224: efficiency/=(float)voltage[0]/100*current[0]/10;
  7465  053F  0849               	movf	_main$1287^(0+128),w
  7466  0540  0020               	movlb	0	; select bank0
  7467  0541  00A0               	movwf	___ftdiv@f2
  7468  0542  0021               	movlb	1	; select bank1
  7469  0543  084A               	movf	(_main$1287+1)^(0+128),w
  7470  0544  0020               	movlb	0	; select bank0
  7471  0545  00A1               	movwf	___ftdiv@f2+1
  7472  0546  0021               	movlb	1	; select bank1
  7473  0547  084B               	movf	(_main$1287+2)^(0+128),w
  7474  0548  0020               	movlb	0	; select bank0
  7475  0549  00A2               	movwf	___ftdiv@f2+2
  7476  054A  0021               	movlb	1	; select bank1
  7477  054B  0859               	movf	main@efficiency^(0+128),w
  7478  054C  0020               	movlb	0	; select bank0
  7479  054D  00A3               	movwf	___ftdiv@f1
  7480  054E  0021               	movlb	1	; select bank1
  7481  054F  085A               	movf	(main@efficiency+1)^(0+128),w
  7482  0550  0020               	movlb	0	; select bank0
  7483  0551  00A4               	movwf	___ftdiv@f1+1
  7484  0552  0021               	movlb	1	; select bank1
  7485  0553  085B               	movf	(main@efficiency+2)^(0+128),w
  7486  0554  0020               	movlb	0	; select bank0
  7487  0555  00A5               	movwf	___ftdiv@f1+2
  7488  0556  318C  2444  3182   	fcall	___ftdiv
  7489  0559  0020               	movlb	0	; select bank0
  7490  055A  0820               	movf	?___ftdiv,w
  7491  055B  0021               	movlb	1	; select bank1
  7492  055C  00D9               	movwf	main@efficiency^(0+128)
  7493  055D  0020               	movlb	0	; select bank0
  7494  055E  0821               	movf	?___ftdiv+1,w
  7495  055F  0021               	movlb	1	; select bank1
  7496  0560  00DA               	movwf	(main@efficiency+1)^(0+128)
  7497  0561  0020               	movlb	0	; select bank0
  7498  0562  0822               	movf	?___ftdiv+2,w
  7499  0563  0021               	movlb	1	; select bank1
  7500  0564  00DB               	movwf	(main@efficiency+2)^(0+128)
  7501                           
  7502                           ;main.c: 225: efficiency*=100;
  7503  0565  3000               	movlw	0
  7504  0566  0020               	movlb	0	; select bank0
  7505  0567  00B0               	movwf	___ftmul@f1
  7506  0568  30C8               	movlw	200
  7507  0569  00B1               	movwf	___ftmul@f1+1
  7508  056A  3042               	movlw	66
  7509  056B  00B2               	movwf	___ftmul@f1+2
  7510  056C  0021               	movlb	1	; select bank1
  7511  056D  0859               	movf	main@efficiency^(0+128),w
  7512  056E  0020               	movlb	0	; select bank0
  7513  056F  00B3               	movwf	___ftmul@f2
  7514  0570  0021               	movlb	1	; select bank1
  7515  0571  085A               	movf	(main@efficiency+1)^(0+128),w
  7516  0572  0020               	movlb	0	; select bank0
  7517  0573  00B4               	movwf	___ftmul@f2+1
  7518  0574  0021               	movlb	1	; select bank1
  7519  0575  085B               	movf	(main@efficiency+2)^(0+128),w
  7520  0576  0020               	movlb	0	; select bank0
  7521  0577  00B5               	movwf	___ftmul@f2+2
  7522  0578  318D  259D  3182   	fcall	___ftmul
  7523  057B  0020               	movlb	0	; select bank0
  7524  057C  0830               	movf	?___ftmul,w
  7525  057D  0021               	movlb	1	; select bank1
  7526  057E  00D9               	movwf	main@efficiency^(0+128)
  7527  057F  0020               	movlb	0	; select bank0
  7528  0580  0831               	movf	?___ftmul+1,w
  7529  0581  0021               	movlb	1	; select bank1
  7530  0582  00DA               	movwf	(main@efficiency+1)^(0+128)
  7531  0583  0020               	movlb	0	; select bank0
  7532  0584  0832               	movf	?___ftmul+2,w
  7533  0585  0021               	movlb	1	; select bank1
  7534  0586  00DB               	movwf	(main@efficiency+2)^(0+128)
  7535                           
  7536                           ;main.c: 228: { gotoXY(0,0); LCDWriteInt(ADCRead(22),4, 0, 0);};
  7537  0587  01F5               	clrf	gotoXY@y
  7538  0588  3000               	movlw	0
  7539  0589  3193  23D9  3182   	fcall	_gotoXY
  7540  058C  3016               	movlw	22
  7541  058D  3193  23EC  3182   	fcall	_ADCRead
  7542  0590  0871               	movf	?_ADCRead+1,w
  7543  0591  0020               	movlb	0	; select bank0
  7544  0592  00A9               	movwf	LCDWriteInt@value+1
  7545  0593  0870               	movf	?_ADCRead,w
  7546  0594  00A8               	movwf	LCDWriteInt@value
  7547  0595  3004               	movlw	4
  7548  0596  00E8               	movwf	??_main
  7549  0597  0868               	movf	??_main,w
  7550  0598  00AA               	movwf	LCDWriteInt@fieldLength
  7551  0599  01AB               	clrf	LCDWriteInt@numPlaces
  7552  059A  01AC               	clrf	LCDWriteInt@sign
  7553  059B  318E  2651  3182   	fcall	_LCDWriteInt
  7554                           
  7555                           ;main.c: 230: { gotoXY(28,0); LCDWriteInt(ADCRead(20),4, 0, 0);};
  7556  059E  01F5               	clrf	gotoXY@y
  7557  059F  301C               	movlw	28
  7558  05A0  3193  23D9  3182   	fcall	_gotoXY
  7559  05A3  3014               	movlw	20
  7560  05A4  3193  23EC  3182   	fcall	_ADCRead
  7561  05A7  0871               	movf	?_ADCRead+1,w
  7562  05A8  0020               	movlb	0	; select bank0
  7563  05A9  00A9               	movwf	LCDWriteInt@value+1
  7564  05AA  0870               	movf	?_ADCRead,w
  7565  05AB  00A8               	movwf	LCDWriteInt@value
  7566  05AC  3004               	movlw	4
  7567  05AD  00E8               	movwf	??_main
  7568  05AE  0868               	movf	??_main,w
  7569  05AF  00AA               	movwf	LCDWriteInt@fieldLength
  7570  05B0  01AB               	clrf	LCDWriteInt@numPlaces
  7571  05B1  01AC               	clrf	LCDWriteInt@sign
  7572  05B2  318E  2651  3182   	fcall	_LCDWriteInt
  7573                           
  7574                           ;main.c: 245: LCDWriteCharacter(' ');
  7575  05B5  3020               	movlw	32
  7576  05B6  3197  2748  3182   	fcall	_LCDWriteCharacter
  7577                           
  7578                           ;main.c: 249: { gotoXY(0,1); LCDWriteInt(voltage[0],4, 2, 0);};
  7579  05B9  01F5               	clrf	gotoXY@y
  7580  05BA  0AF5               	incf	gotoXY@y,f
  7581  05BB  3000               	movlw	0
  7582  05BC  3193  23D9  3182   	fcall	_gotoXY
  7583  05BF  0021               	movlb	1	; select bank1
  7584  05C0  0831               	movf	(_voltage+1)^(0+128),w
  7585  05C1  0020               	movlb	0	; select bank0
  7586  05C2  00A9               	movwf	LCDWriteInt@value+1
  7587  05C3  0021               	movlb	1	; select bank1
  7588  05C4  0830               	movf	_voltage^(0+128),w
  7589  05C5  0020               	movlb	0	; select bank0
  7590  05C6  00A8               	movwf	LCDWriteInt@value
  7591  05C7  3004               	movlw	4
  7592  05C8  00E8               	movwf	??_main
  7593  05C9  0868               	movf	??_main,w
  7594  05CA  00AA               	movwf	LCDWriteInt@fieldLength
  7595  05CB  3002               	movlw	2
  7596  05CC  00E9               	movwf	??_main+1
  7597  05CD  0869               	movf	??_main+1,w
  7598  05CE  00AB               	movwf	LCDWriteInt@numPlaces
  7599  05CF  01AC               	clrf	LCDWriteInt@sign
  7600  05D0  318E  2651  3182   	fcall	_LCDWriteInt
  7601                           
  7602                           ;main.c: 250: LCDWriteCharacter('V');
  7603  05D3  3056               	movlw	86
  7604  05D4  3197  2748  3182   	fcall	_LCDWriteCharacter
  7605                           
  7606                           ;main.c: 251: { gotoXY(28,1); LCDWriteInt(current[0],3, 1, 0);};
  7607  05D7  01F5               	clrf	gotoXY@y
  7608  05D8  0AF5               	incf	gotoXY@y,f
  7609  05D9  301C               	movlw	28
  7610  05DA  3193  23D9  3182   	fcall	_gotoXY
  7611  05DD  0021               	movlb	1	; select bank1
  7612  05DE  0829               	movf	(_current+1)^(0+128),w
  7613  05DF  0020               	movlb	0	; select bank0
  7614  05E0  00A9               	movwf	LCDWriteInt@value+1
  7615  05E1  0021               	movlb	1	; select bank1
  7616  05E2  0828               	movf	_current^(0+128),w
  7617  05E3  0020               	movlb	0	; select bank0
  7618  05E4  00A8               	movwf	LCDWriteInt@value
  7619  05E5  3003               	movlw	3
  7620  05E6  00E8               	movwf	??_main
  7621  05E7  0868               	movf	??_main,w
  7622  05E8  00AA               	movwf	LCDWriteInt@fieldLength
  7623  05E9  01AB               	clrf	LCDWriteInt@numPlaces
  7624  05EA  0AAB               	incf	LCDWriteInt@numPlaces,f
  7625  05EB  01AC               	clrf	LCDWriteInt@sign
  7626  05EC  318E  2651  3182   	fcall	_LCDWriteInt
  7627                           
  7628                           ;main.c: 252: LCDWriteCharacter('A');
  7629  05EF  3041               	movlw	65
  7630  05F0  3197  2748  3182   	fcall	_LCDWriteCharacter
  7631                           
  7632                           ;main.c: 253: { gotoXY(56,1); LCDWriteInt(ADCRead(11),4, 0, 0);};
  7633  05F3  01F5               	clrf	gotoXY@y
  7634  05F4  0AF5               	incf	gotoXY@y,f
  7635  05F5  3038               	movlw	56
  7636  05F6  3193  23D9  3182   	fcall	_gotoXY
  7637  05F9  300B               	movlw	11
  7638  05FA  3193  23EC  3182   	fcall	_ADCRead
  7639  05FD  0871               	movf	?_ADCRead+1,w
  7640  05FE  0020               	movlb	0	; select bank0
  7641  05FF  00A9               	movwf	LCDWriteInt@value+1
  7642  0600  0870               	movf	?_ADCRead,w
  7643  0601  00A8               	movwf	LCDWriteInt@value
  7644  0602  3004               	movlw	4
  7645  0603  00E8               	movwf	??_main
  7646  0604  0868               	movf	??_main,w
  7647  0605  00AA               	movwf	LCDWriteInt@fieldLength
  7648  0606  01AB               	clrf	LCDWriteInt@numPlaces
  7649  0607  01AC               	clrf	LCDWriteInt@sign
  7650  0608  318E  2651  3182   	fcall	_LCDWriteInt
  7651                           
  7652                           ;main.c: 254: { gotoXY(0,2); LCDWriteInt(voltage[1],4, 2, 0);};
  7653  060B  3002               	movlw	2
  7654  060C  0020               	movlb	0	; select bank0
  7655  060D  00E8               	movwf	??_main
  7656  060E  0868               	movf	??_main,w
  7657  060F  00F5               	movwf	gotoXY@y
  7658  0610  3000               	movlw	0
  7659  0611  3193  23D9  3182   	fcall	_gotoXY
  7660  0614  0021               	movlb	1	; select bank1
  7661  0615  0833               	movf	((_voltage+1)^(0+128)+2),w
  7662  0616  0020               	movlb	0	; select bank0
  7663  0617  00A9               	movwf	LCDWriteInt@value+1
  7664  0618  0021               	movlb	1	; select bank1
  7665  0619  0832               	movf	(_voltage^(0+128)+2),w
  7666  061A  0020               	movlb	0	; select bank0
  7667  061B  00A8               	movwf	LCDWriteInt@value
  7668  061C  3004               	movlw	4
  7669  061D  00E8               	movwf	??_main
  7670  061E  0868               	movf	??_main,w
  7671  061F  00AA               	movwf	LCDWriteInt@fieldLength
  7672  0620  3002               	movlw	2
  7673  0621  00E9               	movwf	??_main+1
  7674  0622  0869               	movf	??_main+1,w
  7675  0623  00AB               	movwf	LCDWriteInt@numPlaces
  7676  0624  01AC               	clrf	LCDWriteInt@sign
  7677  0625  318E  2651  3182   	fcall	_LCDWriteInt
  7678                           
  7679                           ;main.c: 255: LCDWriteCharacter('V');
  7680  0628  3056               	movlw	86
  7681  0629  3197  2748  3182   	fcall	_LCDWriteCharacter
  7682                           
  7683                           ;main.c: 256: { gotoXY(28,2); LCDWriteInt(current[1],3, 1, 0);};
  7684  062C  3002               	movlw	2
  7685  062D  0020               	movlb	0	; select bank0
  7686  062E  00E8               	movwf	??_main
  7687  062F  0868               	movf	??_main,w
  7688  0630  00F5               	movwf	gotoXY@y
  7689  0631  301C               	movlw	28
  7690  0632  3193  23D9  3182   	fcall	_gotoXY
  7691  0635  0021               	movlb	1	; select bank1
  7692  0636  082B               	movf	((_current+1)^(0+128)+2),w
  7693  0637  0020               	movlb	0	; select bank0
  7694  0638  00A9               	movwf	LCDWriteInt@value+1
  7695  0639  0021               	movlb	1	; select bank1
  7696  063A  082A               	movf	(_current^(0+128)+2),w
  7697  063B  0020               	movlb	0	; select bank0
  7698  063C  00A8               	movwf	LCDWriteInt@value
  7699  063D  3003               	movlw	3
  7700  063E  00E8               	movwf	??_main
  7701  063F  0868               	movf	??_main,w
  7702  0640  00AA               	movwf	LCDWriteInt@fieldLength
  7703  0641  01AB               	clrf	LCDWriteInt@numPlaces
  7704  0642  0AAB               	incf	LCDWriteInt@numPlaces,f
  7705  0643  01AC               	clrf	LCDWriteInt@sign
  7706  0644  318E  2651  3182   	fcall	_LCDWriteInt
  7707                           
  7708                           ;main.c: 257: LCDWriteCharacter('A');
  7709  0647  3041               	movlw	65
  7710  0648  3197  2748  3182   	fcall	_LCDWriteCharacter
  7711                           
  7712                           ;main.c: 261: { gotoXY(0,3); LCDWriteInt(voltage[0]/100*current[0]/10,3, 0, 0);};
  7713  064B  3003               	movlw	3
  7714  064C  0020               	movlb	0	; select bank0
  7715  064D  00E8               	movwf	??_main
  7716  064E  0868               	movf	??_main,w
  7717  064F  00F5               	movwf	gotoXY@y
  7718  0650  3000               	movlw	0
  7719  0651  3193  23D9  3182   	fcall	_gotoXY
  7720  0654  3064               	movlw	100
  7721  0655  00F0               	movwf	___awdiv@divisor
  7722  0656  3000               	movlw	0
  7723  0657  00F1               	movwf	___awdiv@divisor+1
  7724  0658  0021               	movlb	1	; select bank1
  7725  0659  0831               	movf	(_voltage+1)^(0+128),w
  7726  065A  00F3               	movwf	___awdiv@dividend+1
  7727  065B  0830               	movf	_voltage^(0+128),w
  7728  065C  00F2               	movwf	___awdiv@dividend
  7729  065D  3196  26F7  3182   	fcall	___awdiv
  7730  0660  0871               	movf	?___awdiv+1,w
  7731  0661  00FA               	movwf	___wmul@multiplier+1
  7732  0662  0870               	movf	?___awdiv,w
  7733  0663  00F9               	movwf	___wmul@multiplier
  7734  0664  0021               	movlb	1	; select bank1
  7735  0665  0829               	movf	(_current+1)^(0+128),w
  7736  0666  00FC               	movwf	___wmul@multiplicand+1
  7737  0667  0828               	movf	_current^(0+128),w
  7738  0668  00FB               	movwf	___wmul@multiplicand
  7739  0669  3194  245F  3182   	fcall	___wmul
  7740  066C  087A               	movf	?___wmul+1,w
  7741  066D  0021               	movlb	1	; select bank1
  7742  066E  00D6               	movwf	(_main$1288+1)^(0+128)
  7743  066F  0879               	movf	?___wmul,w
  7744  0670  00D5               	movwf	_main$1288^(0+128)
  7745  0671  300A               	movlw	10
  7746  0672  00F0               	movwf	___awdiv@divisor
  7747  0673  3000               	movlw	0
  7748  0674  00F1               	movwf	___awdiv@divisor+1
  7749  0675  0856               	movf	(_main$1288+1)^(0+128),w
  7750  0676  00F3               	movwf	___awdiv@dividend+1
  7751  0677  0855               	movf	_main$1288^(0+128),w
  7752  0678  00F2               	movwf	___awdiv@dividend
  7753  0679  3196  26F7  3182   	fcall	___awdiv
  7754  067C  0871               	movf	?___awdiv+1,w
  7755  067D  0021               	movlb	1	; select bank1
  7756  067E  00D8               	movwf	(_main$1289+1)^(0+128)
  7757  067F  0870               	movf	?___awdiv,w
  7758  0680  00D7               	movwf	_main$1289^(0+128)
  7759  0681  0858               	movf	(_main$1289+1)^(0+128),w
  7760  0682  0020               	movlb	0	; select bank0
  7761  0683  00A9               	movwf	LCDWriteInt@value+1
  7762  0684  0021               	movlb	1	; select bank1
  7763  0685  0857               	movf	_main$1289^(0+128),w
  7764  0686  0020               	movlb	0	; select bank0
  7765  0687  00A8               	movwf	LCDWriteInt@value
  7766  0688  3003               	movlw	3
  7767  0689  00E8               	movwf	??_main
  7768  068A  0868               	movf	??_main,w
  7769  068B  00AA               	movwf	LCDWriteInt@fieldLength
  7770  068C  01AB               	clrf	LCDWriteInt@numPlaces
  7771  068D  01AC               	clrf	LCDWriteInt@sign
  7772  068E  318E  2651  3182   	fcall	_LCDWriteInt
  7773                           
  7774                           ;main.c: 262: LCDWriteCharacter('W');
  7775  0691  3057               	movlw	87
  7776  0692  3197  2748  3182   	fcall	_LCDWriteCharacter
  7777                           
  7778                           ;main.c: 263: { gotoXY(28,3); LCDWriteInt(battery_state,1, 0, 0);};
  7779  0695  3003               	movlw	3
  7780  0696  0020               	movlb	0	; select bank0
  7781  0697  00E8               	movwf	??_main
  7782  0698  0868               	movf	??_main,w
  7783  0699  00F5               	movwf	gotoXY@y
  7784  069A  301C               	movlw	28
  7785  069B  3193  23D9  3182   	fcall	_gotoXY
  7786  069E  0021               	movlb	1	; select bank1
  7787  069F  086E               	movf	_battery_state^(0+128),w
  7788  06A0  0020               	movlb	0	; select bank0
  7789  06A1  00E8               	movwf	??_main
  7790  06A2  01E9               	clrf	??_main+1
  7791  06A3  0868               	movf	??_main,w
  7792  06A4  00A8               	movwf	LCDWriteInt@value
  7793  06A5  0869               	movf	??_main+1,w
  7794  06A6  00A9               	movwf	LCDWriteInt@value+1
  7795  06A7  01AA               	clrf	LCDWriteInt@fieldLength
  7796  06A8  0AAA               	incf	LCDWriteInt@fieldLength,f
  7797  06A9  01AB               	clrf	LCDWriteInt@numPlaces
  7798  06AA  01AC               	clrf	LCDWriteInt@sign
  7799  06AB  318E  2651  3182   	fcall	_LCDWriteInt
  7800                           
  7801                           ;main.c: 264: { gotoXY(36,3); LCDWriteInt(Imode0,1, 0, 0);};
  7802  06AE  3003               	movlw	3
  7803  06AF  0020               	movlb	0	; select bank0
  7804  06B0  00E8               	movwf	??_main
  7805  06B1  0868               	movf	??_main,w
  7806  06B2  00F5               	movwf	gotoXY@y
  7807  06B3  3024               	movlw	36
  7808  06B4  3193  23D9  3182   	fcall	_gotoXY
  7809  06B7  0020               	movlb	0	; select bank0
  7810  06B8  086E               	movf	_Imode0,w
  7811  06B9  00A8               	movwf	LCDWriteInt@value
  7812  06BA  01A9               	clrf	LCDWriteInt@value+1
  7813  06BB  1BA8               	btfsc	LCDWriteInt@value,7
  7814  06BC  03A9               	decf	LCDWriteInt@value+1,f
  7815  06BD  01AA               	clrf	LCDWriteInt@fieldLength
  7816  06BE  0AAA               	incf	LCDWriteInt@fieldLength,f
  7817  06BF  01AB               	clrf	LCDWriteInt@numPlaces
  7818  06C0  01AC               	clrf	LCDWriteInt@sign
  7819  06C1  318E  2651  3182   	fcall	_LCDWriteInt
  7820                           
  7821                           ;main.c: 265: { gotoXY(48,3); LCDWriteInt(Iref,3, 1, 0);};
  7822  06C4  3003               	movlw	3
  7823  06C5  0020               	movlb	0	; select bank0
  7824  06C6  00E8               	movwf	??_main
  7825  06C7  0868               	movf	??_main,w
  7826  06C8  00F5               	movwf	gotoXY@y
  7827  06C9  3030               	movlw	48
  7828  06CA  3193  23D9  3182   	fcall	_gotoXY
  7829  06CD  0021               	movlb	1	; select bank1
  7830  06CE  0869               	movf	(_Iref+1)^(0+128),w
  7831  06CF  0020               	movlb	0	; select bank0
  7832  06D0  00A9               	movwf	LCDWriteInt@value+1
  7833  06D1  0021               	movlb	1	; select bank1
  7834  06D2  0868               	movf	_Iref^(0+128),w
  7835  06D3  0020               	movlb	0	; select bank0
  7836  06D4  00A8               	movwf	LCDWriteInt@value
  7837  06D5  3003               	movlw	3
  7838  06D6  00E8               	movwf	??_main
  7839  06D7  0868               	movf	??_main,w
  7840  06D8  00AA               	movwf	LCDWriteInt@fieldLength
  7841  06D9  01AB               	clrf	LCDWriteInt@numPlaces
  7842  06DA  0AAB               	incf	LCDWriteInt@numPlaces,f
  7843  06DB  01AC               	clrf	LCDWriteInt@sign
  7844  06DC  318E  2651  3182   	fcall	_LCDWriteInt
  7845                           
  7846                           ;main.c: 266: LCDWriteCharacter('A');
  7847  06DF  3041               	movlw	65
  7848  06E0  3197  2748  3182   	fcall	_LCDWriteCharacter
  7849                           
  7850                           ;main.c: 268: { gotoXY(0,4); LCDWriteInt(voltage[1]/100*current[1]/10,3, 0, 0);};
  7851  06E3  3004               	movlw	4
  7852  06E4  0020               	movlb	0	; select bank0
  7853  06E5  00E8               	movwf	??_main
  7854  06E6  0868               	movf	??_main,w
  7855  06E7  00F5               	movwf	gotoXY@y
  7856  06E8  3000               	movlw	0
  7857  06E9  3193  23D9  3182   	fcall	_gotoXY
  7858  06EC  3064               	movlw	100
  7859  06ED  00F0               	movwf	___awdiv@divisor
  7860  06EE  3000               	movlw	0
  7861  06EF  00F1               	movwf	___awdiv@divisor+1
  7862  06F0  0021               	movlb	1	; select bank1
  7863  06F1  0833               	movf	((_voltage+1)^(0+128)+2),w
  7864  06F2  00F3               	movwf	___awdiv@dividend+1
  7865  06F3  0832               	movf	(_voltage^(0+128)+2),w
  7866  06F4  00F2               	movwf	___awdiv@dividend
  7867  06F5  3196  26F7  3182   	fcall	___awdiv
  7868  06F8  0871               	movf	?___awdiv+1,w
  7869  06F9  00FA               	movwf	___wmul@multiplier+1
  7870  06FA  0870               	movf	?___awdiv,w
  7871  06FB  00F9               	movwf	___wmul@multiplier
  7872  06FC  0021               	movlb	1	; select bank1
  7873  06FD  082B               	movf	((_current+1)^(0+128)+2),w
  7874  06FE  00FC               	movwf	___wmul@multiplicand+1
  7875  06FF  082A               	movf	(_current^(0+128)+2),w
  7876  0700  00FB               	movwf	___wmul@multiplicand
  7877  0701  3194  245F  3182   	fcall	___wmul
  7878  0704  087A               	movf	?___wmul+1,w
  7879  0705  0021               	movlb	1	; select bank1
  7880  0706  00D6               	movwf	(_main$1288+1)^(0+128)
  7881  0707  0879               	movf	?___wmul,w
  7882  0708  00D5               	movwf	_main$1288^(0+128)
  7883  0709  300A               	movlw	10
  7884  070A  00F0               	movwf	___awdiv@divisor
  7885  070B  3000               	movlw	0
  7886  070C  00F1               	movwf	___awdiv@divisor+1
  7887  070D  0856               	movf	(_main$1288+1)^(0+128),w
  7888  070E  00F3               	movwf	___awdiv@dividend+1
  7889  070F  0855               	movf	_main$1288^(0+128),w
  7890  0710  00F2               	movwf	___awdiv@dividend
  7891  0711  3196  26F7  3182   	fcall	___awdiv
  7892  0714  0871               	movf	?___awdiv+1,w
  7893  0715  0021               	movlb	1	; select bank1
  7894  0716  00D8               	movwf	(_main$1289+1)^(0+128)
  7895  0717  0870               	movf	?___awdiv,w
  7896  0718  00D7               	movwf	_main$1289^(0+128)
  7897  0719  0858               	movf	(_main$1289+1)^(0+128),w
  7898  071A  0020               	movlb	0	; select bank0
  7899  071B  00A9               	movwf	LCDWriteInt@value+1
  7900  071C  0021               	movlb	1	; select bank1
  7901  071D  0857               	movf	_main$1289^(0+128),w
  7902  071E  0020               	movlb	0	; select bank0
  7903  071F  00A8               	movwf	LCDWriteInt@value
  7904  0720  3003               	movlw	3
  7905  0721  00E8               	movwf	??_main
  7906  0722  0868               	movf	??_main,w
  7907  0723  00AA               	movwf	LCDWriteInt@fieldLength
  7908  0724  01AB               	clrf	LCDWriteInt@numPlaces
  7909  0725  01AC               	clrf	LCDWriteInt@sign
  7910  0726  318E  2651  3182   	fcall	_LCDWriteInt
  7911                           
  7912                           ;main.c: 269: LCDWriteCharacter('W');
  7913  0729  3057               	movlw	87
  7914  072A  3197  2748  3182   	fcall	_LCDWriteCharacter
  7915                           
  7916                           ;main.c: 272: { gotoXY(48,4); LCDWriteInt(MPPT0,4, 0, 0);};
  7917  072D  3004               	movlw	4
  7918  072E  0020               	movlb	0	; select bank0
  7919  072F  00E8               	movwf	??_main
  7920  0730  0868               	movf	??_main,w
  7921  0731  00F5               	movwf	gotoXY@y
  7922  0732  3030               	movlw	48
  7923  0733  3193  23D9  3182   	fcall	_gotoXY
  7924  0736  0021               	movlb	1	; select bank1
  7925  0737  0862               	movf	(main@MPPT0+1)^(0+128),w
  7926  0738  0020               	movlb	0	; select bank0
  7927  0739  00A9               	movwf	LCDWriteInt@value+1
  7928  073A  0021               	movlb	1	; select bank1
  7929  073B  0861               	movf	main@MPPT0^(0+128),w
  7930  073C  0020               	movlb	0	; select bank0
  7931  073D  00A8               	movwf	LCDWriteInt@value
  7932  073E  3004               	movlw	4
  7933  073F  00E8               	movwf	??_main
  7934  0740  0868               	movf	??_main,w
  7935  0741  00AA               	movwf	LCDWriteInt@fieldLength
  7936  0742  01AB               	clrf	LCDWriteInt@numPlaces
  7937  0743  01AC               	clrf	LCDWriteInt@sign
  7938  0744  318E  2651  3182   	fcall	_LCDWriteInt
  7939                           
  7940                           ;main.c: 280: { gotoXY(0,5); LCDWriteInt(dutyCycle6,4, 0, 0);};
  7941  0747  3005               	movlw	5
  7942  0748  0020               	movlb	0	; select bank0
  7943  0749  00E8               	movwf	??_main
  7944  074A  0868               	movf	??_main,w
  7945  074B  00F5               	movwf	gotoXY@y
  7946  074C  3000               	movlw	0
  7947  074D  3193  23D9  3182   	fcall	_gotoXY
  7948  0750  0021               	movlb	1	; select bank1
  7949  0751  0865               	movf	(main@dutyCycle6+1)^(0+128),w
  7950  0752  0020               	movlb	0	; select bank0
  7951  0753  00A9               	movwf	LCDWriteInt@value+1
  7952  0754  0021               	movlb	1	; select bank1
  7953  0755  0864               	movf	main@dutyCycle6^(0+128),w
  7954  0756  0020               	movlb	0	; select bank0
  7955  0757  00A8               	movwf	LCDWriteInt@value
  7956  0758  3004               	movlw	4
  7957  0759  00E8               	movwf	??_main
  7958  075A  0868               	movf	??_main,w
  7959  075B  00AA               	movwf	LCDWriteInt@fieldLength
  7960  075C  01AB               	clrf	LCDWriteInt@numPlaces
  7961  075D  01AC               	clrf	LCDWriteInt@sign
  7962  075E  318E  2651  3182   	fcall	_LCDWriteInt
  7963                           
  7964                           ;main.c: 281: { gotoXY(24,5); LCDWriteInt(dutyCycle7,4, 0, 0);};
  7965  0761  3005               	movlw	5
  7966  0762  0020               	movlb	0	; select bank0
  7967  0763  00E8               	movwf	??_main
  7968  0764  0868               	movf	??_main,w
  7969  0765  00F5               	movwf	gotoXY@y
  7970  0766  3018               	movlw	24
  7971  0767  3193  23D9  3182   	fcall	_gotoXY
  7972  076A  0021               	movlb	1	; select bank1
  7973  076B  085E               	movf	(main@dutyCycle7+1)^(0+128),w
  7974  076C  0020               	movlb	0	; select bank0
  7975  076D  00A9               	movwf	LCDWriteInt@value+1
  7976  076E  0021               	movlb	1	; select bank1
  7977  076F  085D               	movf	main@dutyCycle7^(0+128),w
  7978  0770  0020               	movlb	0	; select bank0
  7979  0771  00A8               	movwf	LCDWriteInt@value
  7980  0772  3004               	movlw	4
  7981  0773  00E8               	movwf	??_main
  7982  0774  0868               	movf	??_main,w
  7983  0775  00AA               	movwf	LCDWriteInt@fieldLength
  7984  0776  01AB               	clrf	LCDWriteInt@numPlaces
  7985  0777  01AC               	clrf	LCDWriteInt@sign
  7986  0778  318E  2651  3182   	fcall	_LCDWriteInt
  7987                           
  7988                           ;main.c: 282: { gotoXY(48,5); LCDWriteInt(dutyCycle1,4, 0, 0);};
  7989  077B  3005               	movlw	5
  7990  077C  0020               	movlb	0	; select bank0
  7991  077D  00E8               	movwf	??_main
  7992  077E  0868               	movf	??_main,w
  7993  077F  00F5               	movwf	gotoXY@y
  7994  0780  3030               	movlw	48
  7995  0781  3193  23D9  3182   	fcall	_gotoXY
  7996  0784  0021               	movlb	1	; select bank1
  7997  0785  0860               	movf	(main@dutyCycle1+1)^(0+128),w
  7998  0786  0020               	movlb	0	; select bank0
  7999  0787  00A9               	movwf	LCDWriteInt@value+1
  8000  0788  0021               	movlb	1	; select bank1
  8001  0789  085F               	movf	main@dutyCycle1^(0+128),w
  8002  078A  0020               	movlb	0	; select bank0
  8003  078B  00A8               	movwf	LCDWriteInt@value
  8004  078C  3004               	movlw	4
  8005  078D  00E8               	movwf	??_main
  8006  078E  0868               	movf	??_main,w
  8007  078F  00AA               	movwf	LCDWriteInt@fieldLength
  8008  0790  01AB               	clrf	LCDWriteInt@numPlaces
  8009  0791  01AC               	clrf	LCDWriteInt@sign
  8010  0792  318E  2651  3182   	fcall	_LCDWriteInt
  8011                           
  8012                           ;main.c: 283: { gotoXY(74,5); LCDWriteInt(!(RB2),1, 0, 0);};
  8013  0795  3005               	movlw	5
  8014  0796  0020               	movlb	0	; select bank0
  8015  0797  00E8               	movwf	??_main
  8016  0798  0868               	movf	??_main,w
  8017  0799  00F5               	movwf	gotoXY@y
  8018  079A  304A               	movlw	74
  8019  079B  3193  23D9  3182   	fcall	_gotoXY
  8020  079E  1003               	clrc
  8021  079F  0020               	movlb	0	; select bank0
  8022  07A0  1D0D               	btfss	13,2	;volatile
  8023  07A1  1403               	setc
  8024  07A2  3000               	movlw	0
  8025  07A3  3D09               	addwfc	9,w
  8026  07A4  00E8               	movwf	??_main
  8027  07A5  01E9               	clrf	??_main+1
  8028  07A6  0868               	movf	??_main,w
  8029  07A7  00A8               	movwf	LCDWriteInt@value
  8030  07A8  0869               	movf	??_main+1,w
  8031  07A9  00A9               	movwf	LCDWriteInt@value+1
  8032  07AA  01AA               	clrf	LCDWriteInt@fieldLength
  8033  07AB  0AAA               	incf	LCDWriteInt@fieldLength,f
  8034  07AC  01AB               	clrf	LCDWriteInt@numPlaces
  8035  07AD  01AC               	clrf	LCDWriteInt@sign
  8036  07AE  318E  2651  3182   	fcall	_LCDWriteInt
  8037                           
  8038                           ;main.c: 285: if(battery_state > FINISHED)
  8039  07B1  3003               	movlw	3
  8040  07B2  0021               	movlb	1	; select bank1
  8041  07B3  026E               	subwf	_battery_state^(0+128),w
  8042  07B4  1C03               	skipc
  8043  07B5  2FB9               	goto	l3255
  8044                           
  8045                           ;main.c: 286: {
  8046                           ;main.c: 287: cc_cv_mode();
  8047  07B6  3189  21B2  3182   	fcall	_cc_cv_mode
  8048  07B9                     l3255:	
  8049                           
  8050                           ;main.c: 288: }
  8051                           ;main.c: 289: slowLoop=0;
  8052  07B9  0021               	movlb	1	; select bank1
  8053  07BA  01CE               	clrf	main@slowLoop^(0+128)
  8054  07BB  2AB9               	goto	l3031
  8055  07BC                     __end_of_main:	
  8056                           
  8057                           	psect	text1
  8058  001C                     __ptext1:	
  8059 ;; *************** function _tempCalc *****************
  8060 ;; Defined at:
  8061 ;;		line 4 in file "tempCalc.c"
  8062 ;; Parameters:    Size  Location     Type
  8063 ;;  analogValue     2   61[BANK0 ] int 
  8064 ;; Auto vars:     Size  Location     Type
  8065 ;;  steinhart       3   69[BANK0 ] float 
  8066 ;;  R               3   63[BANK0 ] float 
  8067 ;; Return value:  Size  Location     Type
  8068 ;;                  2   61[BANK0 ] int 
  8069 ;; Registers used:
  8070 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8071 ;; Tracked objects:
  8072 ;;		On entry : 0/0
  8073 ;;		On exit  : 0/0
  8074 ;;		Unchanged: 0/0
  8075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8076 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8077 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8079 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8080 ;;Total ram usage:       11 bytes
  8081 ;; Hardware stack levels used:    1
  8082 ;; Hardware stack levels required when called:    4
  8083 ;; This function calls:
  8084 ;;		___awtoft
  8085 ;;		___ftadd
  8086 ;;		___ftdiv
  8087 ;;		___ftmul
  8088 ;;		___ftsub
  8089 ;;		___fttol
  8090 ;;		_log
  8091 ;; This function is called by:
  8092 ;;		_main
  8093 ;; This function uses a non-reentrant model
  8094 ;;
  8095                           
  8096                           
  8097                           ;psect for function _tempCalc
  8098  001C                     _tempCalc:	
  8099                           
  8100                           ;tempCalc.c: 6: float R, steinhart;
  8101                           ;tempCalc.c: 8: R = 9890/(1023/(float)analogValue - 1);
  8102                           
  8103                           ;incstack = 0
  8104                           ; Regs used in _tempCalc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8105  001C  3000               	movlw	0
  8106  001D  0020               	movlb	0	; select bank0
  8107  001E  00C0               	movwf	___ftadd@f1
  8108  001F  3080               	movlw	128
  8109  0020  00C1               	movwf	___ftadd@f1+1
  8110  0021  30BF               	movlw	191
  8111  0022  00C2               	movwf	___ftadd@f1+2
  8112  0023  085E               	movf	tempCalc@analogValue+1,w
  8113  0024  00F9               	movwf	___awtoft@c+1
  8114  0025  085D               	movf	tempCalc@analogValue,w
  8115  0026  00F8               	movwf	___awtoft@c
  8116  0027  3194  24BA  3180   	fcall	___awtoft
  8117  002A  0878               	movf	?___awtoft,w
  8118  002B  0020               	movlb	0	; select bank0
  8119  002C  00A0               	movwf	___ftdiv@f2
  8120  002D  0879               	movf	?___awtoft+1,w
  8121  002E  00A1               	movwf	___ftdiv@f2+1
  8122  002F  087A               	movf	?___awtoft+2,w
  8123  0030  00A2               	movwf	___ftdiv@f2+2
  8124  0031  30C0               	movlw	192
  8125  0032  00A3               	movwf	___ftdiv@f1
  8126  0033  307F               	movlw	127
  8127  0034  00A4               	movwf	___ftdiv@f1+1
  8128  0035  3044               	movlw	68
  8129  0036  00A5               	movwf	___ftdiv@f1+2
  8130  0037  318C  2444  3180   	fcall	___ftdiv
  8131  003A  0020               	movlb	0	; select bank0
  8132  003B  0820               	movf	?___ftdiv,w
  8133  003C  00C3               	movwf	___ftadd@f2
  8134  003D  0821               	movf	?___ftdiv+1,w
  8135  003E  00C4               	movwf	___ftadd@f2+1
  8136  003F  0822               	movf	?___ftdiv+2,w
  8137  0040  00C5               	movwf	___ftadd@f2+2
  8138  0041  318F  270A  3180   	fcall	___ftadd
  8139  0044  0020               	movlb	0	; select bank0
  8140  0045  0840               	movf	?___ftadd,w
  8141  0046  00E2               	movwf	_tempCalc$1285
  8142  0047  0841               	movf	?___ftadd+1,w
  8143  0048  00E3               	movwf	_tempCalc$1285+1
  8144  0049  0842               	movf	?___ftadd+2,w
  8145  004A  00E4               	movwf	_tempCalc$1285+2
  8146                           
  8147                           ;tempCalc.c: 6: float R, steinhart;
  8148                           ;tempCalc.c: 8: R = 9890/(1023/(float)analogValue - 1);
  8149  004B  0862               	movf	_tempCalc$1285,w
  8150  004C  00A0               	movwf	___ftdiv@f2
  8151  004D  0863               	movf	_tempCalc$1285+1,w
  8152  004E  00A1               	movwf	___ftdiv@f2+1
  8153  004F  0864               	movf	_tempCalc$1285+2,w
  8154  0050  00A2               	movwf	___ftdiv@f2+2
  8155  0051  3088               	movlw	136
  8156  0052  00A3               	movwf	___ftdiv@f1
  8157  0053  301A               	movlw	26
  8158  0054  00A4               	movwf	___ftdiv@f1+1
  8159  0055  3046               	movlw	70
  8160  0056  00A5               	movwf	___ftdiv@f1+2
  8161  0057  318C  2444  3180   	fcall	___ftdiv
  8162  005A  0020               	movlb	0	; select bank0
  8163  005B  0820               	movf	?___ftdiv,w
  8164  005C  00DF               	movwf	tempCalc@R
  8165  005D  0821               	movf	?___ftdiv+1,w
  8166  005E  00E0               	movwf	tempCalc@R+1
  8167  005F  0822               	movf	?___ftdiv+2,w
  8168  0060  00E1               	movwf	tempCalc@R+2
  8169                           
  8170                           ;tempCalc.c: 10: steinhart = R /9990;
  8171  0061  3018               	movlw	24
  8172  0062  00A0               	movwf	___ftdiv@f2
  8173  0063  301C               	movlw	28
  8174  0064  00A1               	movwf	___ftdiv@f2+1
  8175  0065  3046               	movlw	70
  8176  0066  00A2               	movwf	___ftdiv@f2+2
  8177  0067  085F               	movf	tempCalc@R,w
  8178  0068  00A3               	movwf	___ftdiv@f1
  8179  0069  0860               	movf	tempCalc@R+1,w
  8180  006A  00A4               	movwf	___ftdiv@f1+1
  8181  006B  0861               	movf	tempCalc@R+2,w
  8182  006C  00A5               	movwf	___ftdiv@f1+2
  8183  006D  318C  2444  3180   	fcall	___ftdiv
  8184  0070  0020               	movlb	0	; select bank0
  8185  0071  0820               	movf	?___ftdiv,w
  8186  0072  00E5               	movwf	tempCalc@steinhart
  8187  0073  0821               	movf	?___ftdiv+1,w
  8188  0074  00E6               	movwf	tempCalc@steinhart+1
  8189  0075  0822               	movf	?___ftdiv+2,w
  8190  0076  00E7               	movwf	tempCalc@steinhart+2
  8191                           
  8192                           ;tempCalc.c: 11: steinhart = log(steinhart);
  8193  0077  0865               	movf	tempCalc@steinhart,w
  8194  0078  00D7               	movwf	log@x
  8195  0079  0866               	movf	tempCalc@steinhart+1,w
  8196  007A  00D8               	movwf	log@x+1
  8197  007B  0867               	movf	tempCalc@steinhart+2,w
  8198  007C  00D9               	movwf	log@x+2
  8199  007D  318C  24ED  3180   	fcall	_log
  8200  0080  0020               	movlb	0	; select bank0
  8201  0081  0857               	movf	?_log,w
  8202  0082  00E5               	movwf	tempCalc@steinhart
  8203  0083  0858               	movf	?_log+1,w
  8204  0084  00E6               	movwf	tempCalc@steinhart+1
  8205  0085  0859               	movf	?_log+2,w
  8206  0086  00E7               	movwf	tempCalc@steinhart+2
  8207                           
  8208                           ;tempCalc.c: 12: steinhart /= 4030;
  8209  0087  30E0               	movlw	224
  8210  0088  00A0               	movwf	___ftdiv@f2
  8211  0089  307B               	movlw	123
  8212  008A  00A1               	movwf	___ftdiv@f2+1
  8213  008B  3045               	movlw	69
  8214  008C  00A2               	movwf	___ftdiv@f2+2
  8215  008D  0865               	movf	tempCalc@steinhart,w
  8216  008E  00A3               	movwf	___ftdiv@f1
  8217  008F  0866               	movf	tempCalc@steinhart+1,w
  8218  0090  00A4               	movwf	___ftdiv@f1+1
  8219  0091  0867               	movf	tempCalc@steinhart+2,w
  8220  0092  00A5               	movwf	___ftdiv@f1+2
  8221  0093  318C  2444  3180   	fcall	___ftdiv
  8222  0096  0020               	movlb	0	; select bank0
  8223  0097  0820               	movf	?___ftdiv,w
  8224  0098  00E5               	movwf	tempCalc@steinhart
  8225  0099  0821               	movf	?___ftdiv+1,w
  8226  009A  00E6               	movwf	tempCalc@steinhart+1
  8227  009B  0822               	movf	?___ftdiv+2,w
  8228  009C  00E7               	movwf	tempCalc@steinhart+2
  8229                           
  8230                           ;tempCalc.c: 15: steinhart += 1.0 / (25 + 273.15);
  8231  009D  30CF               	movlw	207
  8232  009E  00C0               	movwf	___ftadd@f1
  8233  009F  305B               	movlw	91
  8234  00A0  00C1               	movwf	___ftadd@f1+1
  8235  00A1  303B               	movlw	59
  8236  00A2  00C2               	movwf	___ftadd@f1+2
  8237  00A3  0865               	movf	tempCalc@steinhart,w
  8238  00A4  00C3               	movwf	___ftadd@f2
  8239  00A5  0866               	movf	tempCalc@steinhart+1,w
  8240  00A6  00C4               	movwf	___ftadd@f2+1
  8241  00A7  0867               	movf	tempCalc@steinhart+2,w
  8242  00A8  00C5               	movwf	___ftadd@f2+2
  8243  00A9  318F  270A  3180   	fcall	___ftadd
  8244  00AC  0020               	movlb	0	; select bank0
  8245  00AD  0840               	movf	?___ftadd,w
  8246  00AE  00E5               	movwf	tempCalc@steinhart
  8247  00AF  0841               	movf	?___ftadd+1,w
  8248  00B0  00E6               	movwf	tempCalc@steinhart+1
  8249  00B1  0842               	movf	?___ftadd+2,w
  8250  00B2  00E7               	movwf	tempCalc@steinhart+2
  8251                           
  8252                           ;tempCalc.c: 16: steinhart = 1.0 / steinhart;
  8253  00B3  0865               	movf	tempCalc@steinhart,w
  8254  00B4  00A0               	movwf	___ftdiv@f2
  8255  00B5  0866               	movf	tempCalc@steinhart+1,w
  8256  00B6  00A1               	movwf	___ftdiv@f2+1
  8257  00B7  0867               	movf	tempCalc@steinhart+2,w
  8258  00B8  00A2               	movwf	___ftdiv@f2+2
  8259  00B9  3000               	movlw	0
  8260  00BA  00A3               	movwf	___ftdiv@f1
  8261  00BB  3080               	movlw	128
  8262  00BC  00A4               	movwf	___ftdiv@f1+1
  8263  00BD  303F               	movlw	63
  8264  00BE  00A5               	movwf	___ftdiv@f1+2
  8265  00BF  318C  2444  3180   	fcall	___ftdiv
  8266  00C2  0020               	movlb	0	; select bank0
  8267  00C3  0820               	movf	?___ftdiv,w
  8268  00C4  00E5               	movwf	tempCalc@steinhart
  8269  00C5  0821               	movf	?___ftdiv+1,w
  8270  00C6  00E6               	movwf	tempCalc@steinhart+1
  8271  00C7  0822               	movf	?___ftdiv+2,w
  8272  00C8  00E7               	movwf	tempCalc@steinhart+2
  8273                           
  8274                           ;tempCalc.c: 17: steinhart -= 273.15;
  8275  00C9  3093               	movlw	147
  8276  00CA  00CD               	movwf	___ftsub@f2
  8277  00CB  3088               	movlw	136
  8278  00CC  00CE               	movwf	___ftsub@f2+1
  8279  00CD  3043               	movlw	67
  8280  00CE  00CF               	movwf	___ftsub@f2+2
  8281  00CF  0865               	movf	tempCalc@steinhart,w
  8282  00D0  00D0               	movwf	___ftsub@f1
  8283  00D1  0866               	movf	tempCalc@steinhart+1,w
  8284  00D2  00D1               	movwf	___ftsub@f1+1
  8285  00D3  0867               	movf	tempCalc@steinhart+2,w
  8286  00D4  00D2               	movwf	___ftsub@f1+2
  8287  00D5  3194  247D  3180   	fcall	___ftsub
  8288  00D8  0020               	movlb	0	; select bank0
  8289  00D9  084D               	movf	?___ftsub,w
  8290  00DA  00E5               	movwf	tempCalc@steinhart
  8291  00DB  084E               	movf	?___ftsub+1,w
  8292  00DC  00E6               	movwf	tempCalc@steinhart+1
  8293  00DD  084F               	movf	?___ftsub+2,w
  8294  00DE  00E7               	movwf	tempCalc@steinhart+2
  8295                           
  8296                           ;tempCalc.c: 19: steinhart*=10;
  8297  00DF  3000               	movlw	0
  8298  00E0  00B0               	movwf	___ftmul@f1
  8299  00E1  3020               	movlw	32
  8300  00E2  00B1               	movwf	___ftmul@f1+1
  8301  00E3  3041               	movlw	65
  8302  00E4  00B2               	movwf	___ftmul@f1+2
  8303  00E5  0865               	movf	tempCalc@steinhart,w
  8304  00E6  00B3               	movwf	___ftmul@f2
  8305  00E7  0866               	movf	tempCalc@steinhart+1,w
  8306  00E8  00B4               	movwf	___ftmul@f2+1
  8307  00E9  0867               	movf	tempCalc@steinhart+2,w
  8308  00EA  00B5               	movwf	___ftmul@f2+2
  8309  00EB  318D  259D  3180   	fcall	___ftmul
  8310  00EE  0020               	movlb	0	; select bank0
  8311  00EF  0830               	movf	?___ftmul,w
  8312  00F0  00E5               	movwf	tempCalc@steinhart
  8313  00F1  0831               	movf	?___ftmul+1,w
  8314  00F2  00E6               	movwf	tempCalc@steinhart+1
  8315  00F3  0832               	movf	?___ftmul+2,w
  8316  00F4  00E7               	movwf	tempCalc@steinhart+2
  8317                           
  8318                           ;tempCalc.c: 21: steinhart = steinhart*9/5+320;
  8319  00F5  3000               	movlw	0
  8320  00F6  00C0               	movwf	___ftadd@f1
  8321  00F7  30A0               	movlw	160
  8322  00F8  00C1               	movwf	___ftadd@f1+1
  8323  00F9  3043               	movlw	67
  8324  00FA  00C2               	movwf	___ftadd@f1+2
  8325  00FB  3000               	movlw	0
  8326  00FC  00A0               	movwf	___ftdiv@f2
  8327  00FD  30A0               	movlw	160
  8328  00FE  00A1               	movwf	___ftdiv@f2+1
  8329  00FF  3040               	movlw	64
  8330  0100  00A2               	movwf	___ftdiv@f2+2
  8331  0101  3000               	movlw	0
  8332  0102  00B0               	movwf	___ftmul@f1
  8333  0103  3010               	movlw	16
  8334  0104  00B1               	movwf	___ftmul@f1+1
  8335  0105  3041               	movlw	65
  8336  0106  00B2               	movwf	___ftmul@f1+2
  8337  0107  0865               	movf	tempCalc@steinhart,w
  8338  0108  00B3               	movwf	___ftmul@f2
  8339  0109  0866               	movf	tempCalc@steinhart+1,w
  8340  010A  00B4               	movwf	___ftmul@f2+1
  8341  010B  0867               	movf	tempCalc@steinhart+2,w
  8342  010C  00B5               	movwf	___ftmul@f2+2
  8343  010D  318D  259D  3180   	fcall	___ftmul
  8344  0110  0020               	movlb	0	; select bank0
  8345  0111  0830               	movf	?___ftmul,w
  8346  0112  00A3               	movwf	___ftdiv@f1
  8347  0113  0831               	movf	?___ftmul+1,w
  8348  0114  00A4               	movwf	___ftdiv@f1+1
  8349  0115  0832               	movf	?___ftmul+2,w
  8350  0116  00A5               	movwf	___ftdiv@f1+2
  8351  0117  318C  2444  3180   	fcall	___ftdiv
  8352  011A  0020               	movlb	0	; select bank0
  8353  011B  0820               	movf	?___ftdiv,w
  8354  011C  00C3               	movwf	___ftadd@f2
  8355  011D  0821               	movf	?___ftdiv+1,w
  8356  011E  00C4               	movwf	___ftadd@f2+1
  8357  011F  0822               	movf	?___ftdiv+2,w
  8358  0120  00C5               	movwf	___ftadd@f2+2
  8359  0121  318F  270A  3180   	fcall	___ftadd
  8360  0124  0020               	movlb	0	; select bank0
  8361  0125  0840               	movf	?___ftadd,w
  8362  0126  00E5               	movwf	tempCalc@steinhart
  8363  0127  0841               	movf	?___ftadd+1,w
  8364  0128  00E6               	movwf	tempCalc@steinhart+1
  8365  0129  0842               	movf	?___ftadd+2,w
  8366  012A  00E7               	movwf	tempCalc@steinhart+2
  8367                           
  8368                           ;tempCalc.c: 23: return (int16_t)steinhart;
  8369  012B  0865               	movf	tempCalc@steinhart,w
  8370  012C  00B0               	movwf	___fttol@f1
  8371  012D  0866               	movf	tempCalc@steinhart+1,w
  8372  012E  00B1               	movwf	___fttol@f1+1
  8373  012F  0867               	movf	tempCalc@steinhart+2,w
  8374  0130  00B2               	movwf	___fttol@f1+2
  8375  0131  318A  2298         	fcall	___fttol
  8376  0133  0020               	movlb	0	; select bank0
  8377  0134  0831               	movf	?___fttol+1,w
  8378  0135  00DE               	movwf	?_tempCalc+1
  8379  0136  0830               	movf	?___fttol,w
  8380  0137  00DD               	movwf	?_tempCalc
  8381  0138  0008               	return
  8382  0139                     __end_of_tempCalc:	
  8383                           
  8384                           	psect	text2
  8385  0CED                     __ptext2:	
  8386 ;; *************** function _log *****************
  8387 ;; Defined at:
  8388 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\log.c"
  8389 ;; Parameters:    Size  Location     Type
  8390 ;;  x               3   55[BANK0 ] int 
  8391 ;; Auto vars:     Size  Location     Type
  8392 ;;  exponent        2   59[BANK0 ] int 
  8393 ;; Return value:  Size  Location     Type
  8394 ;;                  3   55[BANK0 ] int 
  8395 ;; Registers used:
  8396 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8397 ;; Tracked objects:
  8398 ;;		On entry : 0/0
  8399 ;;		On exit  : 0/0
  8400 ;;		Unchanged: 0/0
  8401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8402 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8403 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8404 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8405 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8406 ;;Total ram usage:        6 bytes
  8407 ;; Hardware stack levels used:    1
  8408 ;; Hardware stack levels required when called:    3
  8409 ;; This function calls:
  8410 ;;		___awtoft
  8411 ;;		___ftadd
  8412 ;;		___ftge
  8413 ;;		___ftmul
  8414 ;;		_eval_poly
  8415 ;;		_frexp
  8416 ;; This function is called by:
  8417 ;;		_tempCalc
  8418 ;; This function uses a non-reentrant model
  8419 ;;
  8420                           
  8421                           
  8422                           ;psect for function _log
  8423  0CED                     _log:	
  8424                           
  8425                           ;incstack = 0
  8426                           ; Regs used in _log: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8427  0CED  0020               	movlb	0	; select bank0
  8428  0CEE  0857               	movf	log@x,w
  8429  0CEF  00F0               	movwf	___ftge@ff1
  8430  0CF0  0858               	movf	log@x+1,w
  8431  0CF1  00F1               	movwf	___ftge@ff1+1
  8432  0CF2  0859               	movf	log@x+2,w
  8433  0CF3  00F2               	movwf	___ftge@ff1+2
  8434  0CF4  3000               	movlw	0
  8435  0CF5  00F3               	movwf	___ftge@ff2
  8436  0CF6  3000               	movlw	0
  8437  0CF7  00F4               	movwf	___ftge@ff2+1
  8438  0CF8  3000               	movlw	0
  8439  0CF9  00F5               	movwf	___ftge@ff2+2
  8440  0CFA  3195  25F7  318C   	fcall	___ftge
  8441  0CFD  1803               	btfsc	3,0
  8442  0CFE  2D0C               	goto	l2567
  8443  0CFF  3021               	movlw	33
  8444  0D00  0021               	movlb	1	; select bank1
  8445  0D01  00B8               	movwf	_errno^(0+128)
  8446  0D02  3000               	movlw	0
  8447  0D03  00B9               	movwf	(_errno^(0+128)+1)
  8448  0D04  3000               	movlw	0
  8449  0D05  0020               	movlb	0	; select bank0
  8450  0D06  00D7               	movwf	?_log
  8451  0D07  3000               	movlw	0
  8452  0D08  00D8               	movwf	?_log+1
  8453  0D09  3000               	movlw	0
  8454  0D0A  00D9               	movwf	?_log+2
  8455  0D0B  0008               	return
  8456  0D0C                     l2567:	
  8457  0D0C  0020               	movlb	0	; select bank0
  8458  0D0D  0859               	movf	log@x+2,w
  8459  0D0E  0458               	iorwf	log@x+1,w
  8460  0D0F  0457               	iorwf	log@x,w
  8461  0D10  1D03               	skipz
  8462  0D11  2D1F               	goto	l2573
  8463  0D12  3022               	movlw	34
  8464  0D13  0021               	movlb	1	; select bank1
  8465  0D14  00B8               	movwf	_errno^(0+128)
  8466  0D15  3000               	movlw	0
  8467  0D16  00B9               	movwf	(_errno^(0+128)+1)
  8468  0D17  3000               	movlw	0
  8469  0D18  0020               	movlb	0	; select bank0
  8470  0D19  00D7               	movwf	?_log
  8471  0D1A  3000               	movlw	0
  8472  0D1B  00D8               	movwf	?_log+1
  8473  0D1C  3000               	movlw	0
  8474  0D1D  00D9               	movwf	?_log+2
  8475  0D1E  0008               	return
  8476  0D1F                     l2573:	
  8477  0D1F  3000               	movlw	0
  8478  0D20  00C0               	movwf	___ftadd@f1
  8479  0D21  3080               	movlw	128
  8480  0D22  00C1               	movwf	___ftadd@f1+1
  8481  0D23  30BF               	movlw	191
  8482  0D24  00C2               	movwf	___ftadd@f1+2
  8483  0D25  3000               	movlw	0
  8484  0D26  00B0               	movwf	___ftmul@f1
  8485  0D27  3000               	movlw	0
  8486  0D28  00B1               	movwf	___ftmul@f1+1
  8487  0D29  3040               	movlw	64
  8488  0D2A  00B2               	movwf	___ftmul@f1+2
  8489  0D2B  305B               	movlw	(low (log@exponent| 0))& (0+255)
  8490  0D2C  00DA               	movwf	??_log
  8491  0D2D  085A               	movf	??_log,w
  8492  0D2E  00F3               	movwf	frexp@eptr
  8493  0D2F  0857               	movf	log@x,w
  8494  0D30  00F0               	movwf	frexp@value
  8495  0D31  0858               	movf	log@x+1,w
  8496  0D32  00F1               	movwf	frexp@value+1
  8497  0D33  0859               	movf	log@x+2,w
  8498  0D34  00F2               	movwf	frexp@value+2
  8499  0D35  3196  2632  318C   	fcall	_frexp
  8500  0D38  0870               	movf	?_frexp,w
  8501  0D39  0020               	movlb	0	; select bank0
  8502  0D3A  00B3               	movwf	___ftmul@f2
  8503  0D3B  0871               	movf	?_frexp+1,w
  8504  0D3C  00B4               	movwf	___ftmul@f2+1
  8505  0D3D  0872               	movf	?_frexp+2,w
  8506  0D3E  00B5               	movwf	___ftmul@f2+2
  8507  0D3F  318D  259D  318C   	fcall	___ftmul
  8508  0D42  0020               	movlb	0	; select bank0
  8509  0D43  0830               	movf	?___ftmul,w
  8510  0D44  00C3               	movwf	___ftadd@f2
  8511  0D45  0831               	movf	?___ftmul+1,w
  8512  0D46  00C4               	movwf	___ftadd@f2+1
  8513  0D47  0832               	movf	?___ftmul+2,w
  8514  0D48  00C5               	movwf	___ftadd@f2+2
  8515  0D49  318F  270A  318C   	fcall	___ftadd
  8516  0D4C  0020               	movlb	0	; select bank0
  8517  0D4D  0840               	movf	?___ftadd,w
  8518  0D4E  00D7               	movwf	log@x
  8519  0D4F  0841               	movf	?___ftadd+1,w
  8520  0D50  00D8               	movwf	log@x+1
  8521  0D51  0842               	movf	?___ftadd+2,w
  8522  0D52  00D9               	movwf	log@x+2
  8523  0D53  30FF               	movlw	255
  8524  0D54  07DB               	addwf	log@exponent,f
  8525  0D55  30FF               	movlw	255
  8526  0D56  3DDC               	addwfc	log@exponent+1,f
  8527  0D57  0857               	movf	log@x,w
  8528  0D58  00CD               	movwf	eval_poly@x
  8529  0D59  0858               	movf	log@x+1,w
  8530  0D5A  00CE               	movwf	eval_poly@x+1
  8531  0D5B  0859               	movf	log@x+2,w
  8532  0D5C  00CF               	movwf	eval_poly@x+2
  8533  0D5D  3000               	movlw	low (log@coeff| (0+32768))
  8534  0D5E  00D0               	movwf	eval_poly@d
  8535  0D5F  3098               	movlw	high (log@coeff| (0+32768))
  8536  0D60  00D1               	movwf	eval_poly@d+1
  8537  0D61  3008               	movlw	8
  8538  0D62  00D2               	movwf	eval_poly@n
  8539  0D63  3000               	movlw	0
  8540  0D64  00D3               	movwf	eval_poly@n+1
  8541  0D65  3197  27A0  318C   	fcall	_eval_poly
  8542  0D68  0020               	movlb	0	; select bank0
  8543  0D69  084D               	movf	?_eval_poly,w
  8544  0D6A  00D7               	movwf	log@x
  8545  0D6B  084E               	movf	?_eval_poly+1,w
  8546  0D6C  00D8               	movwf	log@x+1
  8547  0D6D  084F               	movf	?_eval_poly+2,w
  8548  0D6E  00D9               	movwf	log@x+2
  8549  0D6F  0857               	movf	log@x,w
  8550  0D70  00C0               	movwf	___ftadd@f1
  8551  0D71  0858               	movf	log@x+1,w
  8552  0D72  00C1               	movwf	___ftadd@f1+1
  8553  0D73  0859               	movf	log@x+2,w
  8554  0D74  00C2               	movwf	___ftadd@f1+2
  8555  0D75  3072               	movlw	114
  8556  0D76  00B0               	movwf	___ftmul@f1
  8557  0D77  3031               	movlw	49
  8558  0D78  00B1               	movwf	___ftmul@f1+1
  8559  0D79  303F               	movlw	63
  8560  0D7A  00B2               	movwf	___ftmul@f1+2
  8561  0D7B  085C               	movf	log@exponent+1,w
  8562  0D7C  00F9               	movwf	___awtoft@c+1
  8563  0D7D  085B               	movf	log@exponent,w
  8564  0D7E  00F8               	movwf	___awtoft@c
  8565  0D7F  3194  24BA  318C   	fcall	___awtoft
  8566  0D82  0878               	movf	?___awtoft,w
  8567  0D83  0020               	movlb	0	; select bank0
  8568  0D84  00B3               	movwf	___ftmul@f2
  8569  0D85  0879               	movf	?___awtoft+1,w
  8570  0D86  00B4               	movwf	___ftmul@f2+1
  8571  0D87  087A               	movf	?___awtoft+2,w
  8572  0D88  00B5               	movwf	___ftmul@f2+2
  8573  0D89  318D  259D  318C   	fcall	___ftmul
  8574  0D8C  0020               	movlb	0	; select bank0
  8575  0D8D  0830               	movf	?___ftmul,w
  8576  0D8E  00C3               	movwf	___ftadd@f2
  8577  0D8F  0831               	movf	?___ftmul+1,w
  8578  0D90  00C4               	movwf	___ftadd@f2+1
  8579  0D91  0832               	movf	?___ftmul+2,w
  8580  0D92  00C5               	movwf	___ftadd@f2+2
  8581  0D93  318F  270A         	fcall	___ftadd
  8582  0D95  0020               	movlb	0	; select bank0
  8583  0D96  0840               	movf	?___ftadd,w
  8584  0D97  00D7               	movwf	?_log
  8585  0D98  0841               	movf	?___ftadd+1,w
  8586  0D99  00D8               	movwf	?_log+1
  8587  0D9A  0842               	movf	?___ftadd+2,w
  8588  0D9B  00D9               	movwf	?_log+2
  8589  0D9C  0008               	return
  8590  0D9D                     __end_of_log:	
  8591                           
  8592                           	psect	text3
  8593  1632                     __ptext3:	
  8594 ;; *************** function _frexp *****************
  8595 ;; Defined at:
  8596 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\frexp.c"
  8597 ;; Parameters:    Size  Location     Type
  8598 ;;  value           3    0[COMMON] int 
  8599 ;;  eptr            1    3[COMMON] PTR int 
  8600 ;;		 -> log@exponent(2), 
  8601 ;; Auto vars:     Size  Location     Type
  8602 ;;		None
  8603 ;; Return value:  Size  Location     Type
  8604 ;;                  3    0[COMMON] PTR int 
  8605 ;; Registers used:
  8606 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8607 ;; Tracked objects:
  8608 ;;		On entry : 0/0
  8609 ;;		On exit  : 0/0
  8610 ;;		Unchanged: 0/0
  8611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8612 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8614 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8615 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8616 ;;Total ram usage:        6 bytes
  8617 ;; Hardware stack levels used:    1
  8618 ;; This function calls:
  8619 ;;		Nothing
  8620 ;; This function is called by:
  8621 ;;		_log
  8622 ;; This function uses a non-reentrant model
  8623 ;;
  8624                           
  8625                           
  8626                           ;psect for function _frexp
  8627  1632                     _frexp:	
  8628                           
  8629                           ;incstack = 0
  8630                           ; Regs used in _frexp: [wreg+fsr1l+fsr1h+status,2+status,0]
  8631  1632  0872               	movf	frexp@value+2,w
  8632  1633  0471               	iorwf	frexp@value+1,w
  8633  1634  0470               	iorwf	frexp@value,w
  8634  1635  1D03               	skipz
  8635  1636  2E44               	goto	l2373
  8636  1637  0873               	movf	frexp@eptr,w
  8637  1638  0086               	movwf	6
  8638  1639  0187               	clrf	7
  8639  163A  3000               	movlw	0
  8640  163B  3FC0               	movwi [0]fsr1
  8641  163C  3FC1               	movwi [1]fsr1
  8642  163D  3000               	movlw	0
  8643  163E  00F0               	movwf	?_frexp
  8644  163F  3000               	movlw	0
  8645  1640  00F1               	movwf	?_frexp+1
  8646  1641  3000               	movlw	0
  8647  1642  00F2               	movwf	?_frexp+2
  8648  1643  0008               	return
  8649  1644                     l2373:	
  8650  1644  0872               	movf	frexp@value+2,w
  8651  1645  397F               	andlw	127
  8652  1646  00F4               	movwf	??_frexp
  8653  1647  01F5               	clrf	??_frexp+1
  8654  1648  35F4               	lslf	??_frexp,f
  8655  1649  0DF5               	rlf	??_frexp+1,f
  8656  164A  0873               	movf	frexp@eptr,w
  8657  164B  0086               	movwf	6
  8658  164C  0187               	clrf	7
  8659  164D  0874               	movf	??_frexp,w
  8660  164E  3FC0               	movwi [0]fsr1
  8661  164F  0875               	movf	??_frexp+1,w
  8662  1650  3FC1               	movwi [1]fsr1
  8663  1651  0D71               	rlf	frexp@value+1,w
  8664  1652  0D71               	rlf	frexp@value+1,w
  8665  1653  3901               	andlw	1
  8666  1654  00F4               	movwf	??_frexp
  8667  1655  01F5               	clrf	??_frexp+1
  8668  1656  0873               	movf	frexp@eptr,w
  8669  1657  0086               	movwf	6
  8670  1658  0187               	clrf	7
  8671  1659  0874               	movf	??_frexp,w
  8672  165A  0481               	iorwf	1,f
  8673  165B  3141               	addfsr 1,1
  8674  165C  0875               	movf	??_frexp+1,w
  8675  165D  0481               	iorwf	1,f
  8676  165E  0873               	movf	frexp@eptr,w
  8677  165F  0086               	movwf	6
  8678  1660  0187               	clrf	7
  8679  1661  3082               	movlw	130
  8680  1662  0781               	addwf	1,f
  8681  1663  3141               	addfsr 1,1
  8682  1664  30FF               	movlw	255
  8683  1665  3D81               	addwfc	1,f
  8684  1666  317F               	addfsr 1,-1
  8685  1667  0872               	movf	frexp@value+2,w
  8686  1668  3980               	andlw	-128
  8687  1669  383F               	iorlw	63
  8688  166A  00F2               	movwf	frexp@value+2
  8689  166B  13F1               	bcf	frexp@value+1,7
  8690  166C  0008               	return
  8691  166D                     __end_of_frexp:	
  8692                           
  8693                           	psect	text4
  8694  17A0                     __ptext4:	
  8695 ;; *************** function _eval_poly *****************
  8696 ;; Defined at:
  8697 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\evalpoly.c"
  8698 ;; Parameters:    Size  Location     Type
  8699 ;;  x               3   45[BANK0 ] PTR int 
  8700 ;;  d               2   48[BANK0 ] PTR const 
  8701 ;;		 -> log@coeff(27), 
  8702 ;;  n               2   50[BANK0 ] int 
  8703 ;; Auto vars:     Size  Location     Type
  8704 ;;  res             3   52[BANK0 ] int 
  8705 ;; Return value:  Size  Location     Type
  8706 ;;                  3   45[BANK0 ] int 
  8707 ;; Registers used:
  8708 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8709 ;; Tracked objects:
  8710 ;;		On entry : 0/0
  8711 ;;		On exit  : 0/0
  8712 ;;		Unchanged: 0/0
  8713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8714 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8715 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8717 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8718 ;;Total ram usage:       10 bytes
  8719 ;; Hardware stack levels used:    1
  8720 ;; Hardware stack levels required when called:    2
  8721 ;; This function calls:
  8722 ;;		___ftadd
  8723 ;;		___ftmul
  8724 ;;		___wmul
  8725 ;; This function is called by:
  8726 ;;		_log
  8727 ;; This function uses a non-reentrant model
  8728 ;;
  8729                           
  8730                           
  8731                           ;psect for function _eval_poly
  8732  17A0                     _eval_poly:	
  8733                           
  8734                           ;incstack = 0
  8735                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8736  17A0  0020               	movlb	0	; select bank0
  8737  17A1  0853               	movf	eval_poly@n+1,w
  8738  17A2  00FA               	movwf	___wmul@multiplier+1
  8739  17A3  0852               	movf	eval_poly@n,w
  8740  17A4  00F9               	movwf	___wmul@multiplier
  8741  17A5  3003               	movlw	3
  8742  17A6  00FB               	movwf	___wmul@multiplicand
  8743  17A7  3000               	movlw	0
  8744  17A8  00FC               	movwf	___wmul@multiplicand+1
  8745  17A9  3194  245F  3197   	fcall	___wmul
  8746  17AC  0020               	movlb	0	; select bank0
  8747  17AD  0850               	movf	eval_poly@d,w
  8748  17AE  0779               	addwf	?___wmul,w
  8749  17AF  0084               	movwf	4
  8750  17B0  0851               	movf	eval_poly@d+1,w
  8751  17B1  3D7A               	addwfc	?___wmul+1,w
  8752  17B2  0085               	movwf	5
  8753  17B3  3F00               	moviw [0]fsr0
  8754  17B4  00D4               	movwf	eval_poly@res
  8755  17B5  3F01               	moviw [1]fsr0
  8756  17B6  00D5               	movwf	eval_poly@res+1
  8757  17B7  3F02               	moviw [2]fsr0
  8758  17B8                     L1:	
  8759  17B8  00D6               	movwf	eval_poly@res+2
  8760  17B9  0852               	movf	eval_poly@n,w
  8761  17BA  0453               	iorwf	eval_poly@n+1,w
  8762  17BB  1903               	btfsc	3,2
  8763  17BC  2FF9               	goto	l2391
  8764  17BD  30FF               	movlw	255
  8765  17BE  07D2               	addwf	eval_poly@n,f
  8766  17BF  30FF               	movlw	255
  8767  17C0  3DD3               	addwfc	eval_poly@n+1,f
  8768  17C1  0853               	movf	eval_poly@n+1,w
  8769  17C2  00FA               	movwf	___wmul@multiplier+1
  8770  17C3  0852               	movf	eval_poly@n,w
  8771  17C4  00F9               	movwf	___wmul@multiplier
  8772  17C5  3003               	movlw	3
  8773  17C6  00FB               	movwf	___wmul@multiplicand
  8774  17C7  3000               	movlw	0
  8775  17C8  00FC               	movwf	___wmul@multiplicand+1
  8776  17C9  3194  245F  3197   	fcall	___wmul
  8777  17CC  0020               	movlb	0	; select bank0
  8778  17CD  0850               	movf	eval_poly@d,w
  8779  17CE  0779               	addwf	?___wmul,w
  8780  17CF  0084               	movwf	4
  8781  17D0  0851               	movf	eval_poly@d+1,w
  8782  17D1  3D7A               	addwfc	?___wmul+1,w
  8783  17D2  0085               	movwf	5
  8784  17D3  3F00               	moviw [0]fsr0
  8785  17D4  00C0               	movwf	___ftadd@f1
  8786  17D5  3F01               	moviw [1]fsr0
  8787  17D6  00C1               	movwf	___ftadd@f1+1
  8788  17D7  3F02               	moviw [2]fsr0
  8789  17D8  00C2               	movwf	___ftadd@f1+2
  8790  17D9  0854               	movf	eval_poly@res,w
  8791  17DA  00B0               	movwf	___ftmul@f1
  8792  17DB  0855               	movf	eval_poly@res+1,w
  8793  17DC  00B1               	movwf	___ftmul@f1+1
  8794  17DD  0856               	movf	eval_poly@res+2,w
  8795  17DE  00B2               	movwf	___ftmul@f1+2
  8796  17DF  084D               	movf	eval_poly@x,w
  8797  17E0  00B3               	movwf	___ftmul@f2
  8798  17E1  084E               	movf	eval_poly@x+1,w
  8799  17E2  00B4               	movwf	___ftmul@f2+1
  8800  17E3  084F               	movf	eval_poly@x+2,w
  8801  17E4  00B5               	movwf	___ftmul@f2+2
  8802  17E5  318D  259D  3197   	fcall	___ftmul
  8803  17E8  0020               	movlb	0	; select bank0
  8804  17E9  0830               	movf	?___ftmul,w
  8805  17EA  00C3               	movwf	___ftadd@f2
  8806  17EB  0831               	movf	?___ftmul+1,w
  8807  17EC  00C4               	movwf	___ftadd@f2+1
  8808  17ED  0832               	movf	?___ftmul+2,w
  8809  17EE  00C5               	movwf	___ftadd@f2+2
  8810  17EF  318F  270A  3197   	fcall	___ftadd
  8811  17F2  0020               	movlb	0	; select bank0
  8812  17F3  0840               	movf	?___ftadd,w
  8813  17F4  00D4               	movwf	eval_poly@res
  8814  17F5  0841               	movf	?___ftadd+1,w
  8815  17F6  00D5               	movwf	eval_poly@res+1
  8816  17F7  0842               	movf	?___ftadd+2,w
  8817  17F8  2FB8               	goto	L1
  8818  17F9                     l2391:	
  8819  17F9  0854               	movf	eval_poly@res,w
  8820  17FA  00CD               	movwf	?_eval_poly
  8821  17FB  0855               	movf	eval_poly@res+1,w
  8822  17FC  00CE               	movwf	?_eval_poly+1
  8823  17FD  0856               	movf	eval_poly@res+2,w
  8824  17FE  00CF               	movwf	?_eval_poly+2
  8825  17FF  0008               	return
  8826  1800                     __end_of_eval_poly:	
  8827                           
  8828                           	psect	text5
  8829  0D9D                     __ptext5:	
  8830 ;; *************** function ___ftmul *****************
  8831 ;; Defined at:
  8832 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
  8833 ;; Parameters:    Size  Location     Type
  8834 ;;  f1              3   16[BANK0 ] float 
  8835 ;;  f2              3   19[BANK0 ] float 
  8836 ;; Auto vars:     Size  Location     Type
  8837 ;;  f3_as_produc    3   27[BANK0 ] unsigned um
  8838 ;;  sign            1   31[BANK0 ] unsigned char 
  8839 ;;  cntr            1   30[BANK0 ] unsigned char 
  8840 ;;  exp             1   26[BANK0 ] unsigned char 
  8841 ;; Return value:  Size  Location     Type
  8842 ;;                  3   16[BANK0 ] float 
  8843 ;; Registers used:
  8844 ;;		wreg, status,2, status,0, pclath, cstack
  8845 ;; Tracked objects:
  8846 ;;		On entry : 0/0
  8847 ;;		On exit  : 0/0
  8848 ;;		Unchanged: 0/0
  8849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8850 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8851 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8852 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8853 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8854 ;;Total ram usage:       16 bytes
  8855 ;; Hardware stack levels used:    1
  8856 ;; Hardware stack levels required when called:    1
  8857 ;; This function calls:
  8858 ;;		___ftpack
  8859 ;; This function is called by:
  8860 ;;		_tempCalc
  8861 ;;		_main
  8862 ;;		_log
  8863 ;;		_eval_poly
  8864 ;; This function uses a non-reentrant model
  8865 ;;
  8866                           
  8867                           
  8868                           ;psect for function ___ftmul
  8869  0D9D                     ___ftmul:	
  8870                           
  8871                           ;incstack = 0
  8872                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  8873  0D9D  0020               	movlb	0	; select bank0
  8874  0D9E  0830               	movf	___ftmul@f1,w
  8875  0D9F  00B6               	movwf	??___ftmul
  8876  0DA0  0831               	movf	___ftmul@f1+1,w
  8877  0DA1  00B7               	movwf	??___ftmul+1
  8878  0DA2  0832               	movf	___ftmul@f1+2,w
  8879  0DA3  00B8               	movwf	??___ftmul+2
  8880  0DA4  1003               	clrc
  8881  0DA5  0D37               	rlf	??___ftmul+1,w
  8882  0DA6  0D38               	rlf	??___ftmul+2,w
  8883  0DA7  00B9               	movwf	??___ftmul+3
  8884  0DA8  0839               	movf	??___ftmul+3,w
  8885  0DA9  00BA               	movwf	___ftmul@exp
  8886  0DAA  083A               	movf	___ftmul@exp,w
  8887  0DAB  1D03               	btfss	3,2
  8888  0DAC  2DB4               	goto	l2275
  8889  0DAD  3000               	movlw	0
  8890  0DAE  00B0               	movwf	?___ftmul
  8891  0DAF  3000               	movlw	0
  8892  0DB0  00B1               	movwf	?___ftmul+1
  8893  0DB1  3000               	movlw	0
  8894  0DB2  00B2               	movwf	?___ftmul+2
  8895  0DB3  0008               	return
  8896  0DB4                     l2275:	
  8897  0DB4  0833               	movf	___ftmul@f2,w
  8898  0DB5  00B6               	movwf	??___ftmul
  8899  0DB6  0834               	movf	___ftmul@f2+1,w
  8900  0DB7  00B7               	movwf	??___ftmul+1
  8901  0DB8  0835               	movf	___ftmul@f2+2,w
  8902  0DB9  00B8               	movwf	??___ftmul+2
  8903  0DBA  1003               	clrc
  8904  0DBB  0D37               	rlf	??___ftmul+1,w
  8905  0DBC  0D38               	rlf	??___ftmul+2,w
  8906  0DBD  00B9               	movwf	??___ftmul+3
  8907  0DBE  0839               	movf	??___ftmul+3,w
  8908  0DBF  00BF               	movwf	___ftmul@sign
  8909  0DC0  083F               	movf	___ftmul@sign,w
  8910  0DC1  1D03               	btfss	3,2
  8911  0DC2  2DCA               	goto	l2281
  8912  0DC3  3000               	movlw	0
  8913  0DC4  00B0               	movwf	?___ftmul
  8914  0DC5  3000               	movlw	0
  8915  0DC6  00B1               	movwf	?___ftmul+1
  8916  0DC7  3000               	movlw	0
  8917  0DC8  00B2               	movwf	?___ftmul+2
  8918  0DC9  0008               	return
  8919  0DCA                     l2281:	
  8920  0DCA  083F               	movf	___ftmul@sign,w
  8921  0DCB  3E7B               	addlw	123
  8922  0DCC  00B6               	movwf	??___ftmul
  8923  0DCD  0836               	movf	??___ftmul,w
  8924  0DCE  07BA               	addwf	___ftmul@exp,f
  8925  0DCF  0830               	movf	___ftmul@f1,w
  8926  0DD0  00B6               	movwf	??___ftmul
  8927  0DD1  0831               	movf	___ftmul@f1+1,w
  8928  0DD2  00B7               	movwf	??___ftmul+1
  8929  0DD3  0832               	movf	___ftmul@f1+2,w
  8930  0DD4  00B8               	movwf	??___ftmul+2
  8931  0DD5  3010               	movlw	16
  8932  0DD6                     u2315:	
  8933  0DD6  36B8               	lsrf	??___ftmul+2,f
  8934  0DD7  0CB7               	rrf	??___ftmul+1,f
  8935  0DD8  0CB6               	rrf	??___ftmul,f
  8936  0DD9  0B89               	decfsz	9,f
  8937  0DDA  2DD6               	goto	u2315
  8938  0DDB  0836               	movf	??___ftmul,w
  8939  0DDC  00B9               	movwf	??___ftmul+3
  8940  0DDD  0839               	movf	??___ftmul+3,w
  8941  0DDE  00BF               	movwf	___ftmul@sign
  8942  0DDF  0833               	movf	___ftmul@f2,w
  8943  0DE0  00B6               	movwf	??___ftmul
  8944  0DE1  0834               	movf	___ftmul@f2+1,w
  8945  0DE2  00B7               	movwf	??___ftmul+1
  8946  0DE3  0835               	movf	___ftmul@f2+2,w
  8947  0DE4  00B8               	movwf	??___ftmul+2
  8948  0DE5  3010               	movlw	16
  8949  0DE6                     u2325:	
  8950  0DE6  36B8               	lsrf	??___ftmul+2,f
  8951  0DE7  0CB7               	rrf	??___ftmul+1,f
  8952  0DE8  0CB6               	rrf	??___ftmul,f
  8953  0DE9  0B89               	decfsz	9,f
  8954  0DEA  2DE6               	goto	u2325
  8955  0DEB  0836               	movf	??___ftmul,w
  8956  0DEC  00B9               	movwf	??___ftmul+3
  8957  0DED  0839               	movf	??___ftmul+3,w
  8958  0DEE  06BF               	xorwf	___ftmul@sign,f
  8959  0DEF  3080               	movlw	128
  8960  0DF0  00B6               	movwf	??___ftmul
  8961  0DF1  0836               	movf	??___ftmul,w
  8962  0DF2  05BF               	andwf	___ftmul@sign,f
  8963  0DF3  17B1               	bsf	___ftmul@f1+1,7
  8964  0DF4  17B4               	bsf	___ftmul@f2+1,7
  8965  0DF5  30FF               	movlw	255
  8966  0DF6  05B3               	andwf	___ftmul@f2,f
  8967  0DF7  30FF               	movlw	255
  8968  0DF8  05B4               	andwf	___ftmul@f2+1,f
  8969  0DF9  3000               	movlw	0
  8970  0DFA  05B5               	andwf	___ftmul@f2+2,f
  8971  0DFB  3000               	movlw	0
  8972  0DFC  00BB               	movwf	___ftmul@f3_as_product
  8973  0DFD  3000               	movlw	0
  8974  0DFE  00BC               	movwf	___ftmul@f3_as_product+1
  8975  0DFF  3000               	movlw	0
  8976  0E00  00BD               	movwf	___ftmul@f3_as_product+2
  8977  0E01  3007               	movlw	7
  8978  0E02  00B6               	movwf	??___ftmul
  8979  0E03  0836               	movf	??___ftmul,w
  8980  0E04  00BE               	movwf	___ftmul@cntr
  8981  0E05                     l2293:	
  8982  0E05  1C30               	btfss	___ftmul@f1,0
  8983  0E06  2E0D               	goto	l2297
  8984  0E07  0833               	movf	___ftmul@f2,w
  8985  0E08  07BB               	addwf	___ftmul@f3_as_product,f
  8986  0E09  0834               	movf	___ftmul@f2+1,w
  8987  0E0A  3DBC               	addwfc	___ftmul@f3_as_product+1,f
  8988  0E0B  0835               	movf	___ftmul@f2+2,w
  8989  0E0C  3DBD               	addwfc	___ftmul@f3_as_product+2,f
  8990  0E0D                     l2297:	
  8991  0E0D  3001               	movlw	1
  8992  0E0E                     u2345:	
  8993  0E0E  36B2               	lsrf	___ftmul@f1+2,f
  8994  0E0F  0CB1               	rrf	___ftmul@f1+1,f
  8995  0E10  0CB0               	rrf	___ftmul@f1,f
  8996  0E11  0B89               	decfsz	9,f
  8997  0E12  2E0E               	goto	u2345
  8998  0E13  3001               	movlw	1
  8999  0E14                     u2355:	
  9000  0E14  35B3               	lslf	___ftmul@f2,f
  9001  0E15  0DB4               	rlf	___ftmul@f2+1,f
  9002  0E16  0DB5               	rlf	___ftmul@f2+2,f
  9003  0E17  0B89               	decfsz	9,f
  9004  0E18  2E14               	goto	u2355
  9005  0E19  3001               	movlw	1
  9006  0E1A  02BE               	subwf	___ftmul@cntr,f
  9007  0E1B  1D03               	btfss	3,2
  9008  0E1C  2E05               	goto	l2293
  9009  0E1D  3009               	movlw	9
  9010  0E1E  00B6               	movwf	??___ftmul
  9011  0E1F  0836               	movf	??___ftmul,w
  9012  0E20  00BE               	movwf	___ftmul@cntr
  9013  0E21                     l2305:	
  9014  0E21  1C30               	btfss	___ftmul@f1,0
  9015  0E22  2E29               	goto	l2309
  9016  0E23  0833               	movf	___ftmul@f2,w
  9017  0E24  07BB               	addwf	___ftmul@f3_as_product,f
  9018  0E25  0834               	movf	___ftmul@f2+1,w
  9019  0E26  3DBC               	addwfc	___ftmul@f3_as_product+1,f
  9020  0E27  0835               	movf	___ftmul@f2+2,w
  9021  0E28  3DBD               	addwfc	___ftmul@f3_as_product+2,f
  9022  0E29                     l2309:	
  9023  0E29  3001               	movlw	1
  9024  0E2A                     u2385:	
  9025  0E2A  36B2               	lsrf	___ftmul@f1+2,f
  9026  0E2B  0CB1               	rrf	___ftmul@f1+1,f
  9027  0E2C  0CB0               	rrf	___ftmul@f1,f
  9028  0E2D  0B89               	decfsz	9,f
  9029  0E2E  2E2A               	goto	u2385
  9030  0E2F  3001               	movlw	1
  9031  0E30                     u2395:	
  9032  0E30  36BD               	lsrf	___ftmul@f3_as_product+2,f
  9033  0E31  0CBC               	rrf	___ftmul@f3_as_product+1,f
  9034  0E32  0CBB               	rrf	___ftmul@f3_as_product,f
  9035  0E33  0B89               	decfsz	9,f
  9036  0E34  2E30               	goto	u2395
  9037  0E35  3001               	movlw	1
  9038  0E36  02BE               	subwf	___ftmul@cntr,f
  9039  0E37  1D03               	btfss	3,2
  9040  0E38  2E21               	goto	l2305
  9041  0E39  083B               	movf	___ftmul@f3_as_product,w
  9042  0E3A  00F0               	movwf	___ftpack@arg
  9043  0E3B  083C               	movf	___ftmul@f3_as_product+1,w
  9044  0E3C  00F1               	movwf	___ftpack@arg+1
  9045  0E3D  083D               	movf	___ftmul@f3_as_product+2,w
  9046  0E3E  00F2               	movwf	___ftpack@arg+2
  9047  0E3F  083A               	movf	___ftmul@exp,w
  9048  0E40  00B6               	movwf	??___ftmul
  9049  0E41  0836               	movf	??___ftmul,w
  9050  0E42  00F3               	movwf	___ftpack@exp
  9051  0E43  083F               	movf	___ftmul@sign,w
  9052  0E44  00B7               	movwf	??___ftmul+1
  9053  0E45  0837               	movf	??___ftmul+1,w
  9054  0E46  00F4               	movwf	___ftpack@sign
  9055  0E47  3189  214E         	fcall	___ftpack
  9056  0E49  0870               	movf	?___ftpack,w
  9057  0E4A  0020               	movlb	0	; select bank0
  9058  0E4B  00B0               	movwf	?___ftmul
  9059  0E4C  0871               	movf	?___ftpack+1,w
  9060  0E4D  00B1               	movwf	?___ftmul+1
  9061  0E4E  0872               	movf	?___ftpack+2,w
  9062  0E4F  00B2               	movwf	?___ftmul+2
  9063  0E50  0008               	return
  9064  0E51                     __end_of___ftmul:	
  9065                           
  9066                           	psect	text6
  9067  15F7                     __ptext6:	
  9068 ;; *************** function ___ftge *****************
  9069 ;; Defined at:
  9070 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftge.c"
  9071 ;; Parameters:    Size  Location     Type
  9072 ;;  ff1             3    0[COMMON] float 
  9073 ;;  ff2             3    3[COMMON] float 
  9074 ;; Auto vars:     Size  Location     Type
  9075 ;;		None
  9076 ;; Return value:  Size  Location     Type
  9077 ;;		None               void
  9078 ;; Registers used:
  9079 ;;		wreg, status,2, status,0
  9080 ;; Tracked objects:
  9081 ;;		On entry : 0/0
  9082 ;;		On exit  : 0/0
  9083 ;;		Unchanged: 0/0
  9084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9085 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9087 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9088 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9089 ;;Total ram usage:        9 bytes
  9090 ;; Hardware stack levels used:    1
  9091 ;; This function calls:
  9092 ;;		Nothing
  9093 ;; This function is called by:
  9094 ;;		_log
  9095 ;; This function uses a non-reentrant model
  9096 ;;
  9097                           
  9098                           
  9099                           ;psect for function ___ftge
  9100  15F7                     ___ftge:	
  9101                           
  9102                           ;incstack = 0
  9103                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  9104  15F7  1FF2               	btfss	___ftge@ff1+2,7
  9105  15F8  2E0D               	goto	l2349
  9106  15F9  0970               	comf	___ftge@ff1,w
  9107  15FA  00F6               	movwf	??___ftge
  9108  15FB  0971               	comf	___ftge@ff1+1,w
  9109  15FC  00F7               	movwf	??___ftge+1
  9110  15FD  0972               	comf	___ftge@ff1+2,w
  9111  15FE  00F8               	movwf	??___ftge+2
  9112  15FF  0AF6               	incf	??___ftge,f
  9113  1600  1903               	skipnz
  9114  1601  0AF7               	incf	??___ftge+1,f
  9115  1602  1903               	skipnz
  9116  1603  0AF8               	incf	??___ftge+2,f
  9117  1604  3000               	movlw	0
  9118  1605  0776               	addwf	??___ftge,w
  9119  1606  00F0               	movwf	___ftge@ff1
  9120  1607  3000               	movlw	0
  9121  1608  3D77               	addwfc	??___ftge+1,w
  9122  1609  00F1               	movwf	___ftge@ff1+1
  9123  160A  3080               	movlw	128
  9124  160B  3D78               	addwfc	??___ftge+2,w
  9125  160C  00F2               	movwf	___ftge@ff1+2
  9126  160D                     l2349:	
  9127  160D  1FF5               	btfss	___ftge@ff2+2,7
  9128  160E  2E23               	goto	l2353
  9129  160F  0973               	comf	___ftge@ff2,w
  9130  1610  00F6               	movwf	??___ftge
  9131  1611  0974               	comf	___ftge@ff2+1,w
  9132  1612  00F7               	movwf	??___ftge+1
  9133  1613  0975               	comf	___ftge@ff2+2,w
  9134  1614  00F8               	movwf	??___ftge+2
  9135  1615  0AF6               	incf	??___ftge,f
  9136  1616  1903               	skipnz
  9137  1617  0AF7               	incf	??___ftge+1,f
  9138  1618  1903               	skipnz
  9139  1619  0AF8               	incf	??___ftge+2,f
  9140  161A  3000               	movlw	0
  9141  161B  0776               	addwf	??___ftge,w
  9142  161C  00F3               	movwf	___ftge@ff2
  9143  161D  3000               	movlw	0
  9144  161E  3D77               	addwfc	??___ftge+1,w
  9145  161F  00F4               	movwf	___ftge@ff2+1
  9146  1620  3080               	movlw	128
  9147  1621  3D78               	addwfc	??___ftge+2,w
  9148  1622  00F5               	movwf	___ftge@ff2+2
  9149  1623                     l2353:	
  9150  1623  3080               	movlw	128
  9151  1624  06F2               	xorwf	___ftge@ff1+2,f
  9152  1625  3080               	movlw	128
  9153  1626  06F5               	xorwf	___ftge@ff2+2,f
  9154  1627  0875               	movf	___ftge@ff2+2,w
  9155  1628  0272               	subwf	___ftge@ff1+2,w
  9156  1629  1D03               	skipz
  9157  162A  0008               	return
  9158  162B  0874               	movf	___ftge@ff2+1,w
  9159  162C  0271               	subwf	___ftge@ff1+1,w
  9160  162D  1D03               	skipz
  9161  162E  0008               	return
  9162  162F  0873               	movf	___ftge@ff2,w
  9163  1630  0270               	subwf	___ftge@ff1,w
  9164  1631  0008               	return
  9165  1632                     __end_of___ftge:	
  9166                           
  9167                           	psect	text7
  9168  147D                     __ptext7:	
  9169 ;; *************** function ___ftsub *****************
  9170 ;; Defined at:
  9171 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftsub.c"
  9172 ;; Parameters:    Size  Location     Type
  9173 ;;  f2              3   45[BANK0 ] float 
  9174 ;;  f1              3   48[BANK0 ] float 
  9175 ;; Auto vars:     Size  Location     Type
  9176 ;;		None
  9177 ;; Return value:  Size  Location     Type
  9178 ;;                  3   45[BANK0 ] float 
  9179 ;; Registers used:
  9180 ;;		wreg, status,2, status,0, pclath, cstack
  9181 ;; Tracked objects:
  9182 ;;		On entry : 0/0
  9183 ;;		On exit  : 0/0
  9184 ;;		Unchanged: 0/0
  9185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9186 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9189 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9190 ;;Total ram usage:        6 bytes
  9191 ;; Hardware stack levels used:    1
  9192 ;; Hardware stack levels required when called:    2
  9193 ;; This function calls:
  9194 ;;		___ftadd
  9195 ;; This function is called by:
  9196 ;;		_tempCalc
  9197 ;; This function uses a non-reentrant model
  9198 ;;
  9199                           
  9200                           
  9201                           ;psect for function ___ftsub
  9202  147D                     ___ftsub:	
  9203                           
  9204                           ;incstack = 0
  9205                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  9206  147D  0020               	movlb	0	; select bank0
  9207  147E  084F               	movf	___ftsub@f2+2,w
  9208  147F  044E               	iorwf	___ftsub@f2+1,w
  9209  1480  044D               	iorwf	___ftsub@f2,w
  9210  1481  1903               	skipnz
  9211  1482  2C85               	goto	l2713
  9212  1483  3080               	movlw	128
  9213  1484  06CF               	xorwf	___ftsub@f2+2,f
  9214  1485                     l2713:	
  9215  1485  0850               	movf	___ftsub@f1,w
  9216  1486  00C0               	movwf	___ftadd@f1
  9217  1487  0851               	movf	___ftsub@f1+1,w
  9218  1488  00C1               	movwf	___ftadd@f1+1
  9219  1489  0852               	movf	___ftsub@f1+2,w
  9220  148A  00C2               	movwf	___ftadd@f1+2
  9221  148B  084D               	movf	___ftsub@f2,w
  9222  148C  00C3               	movwf	___ftadd@f2
  9223  148D  084E               	movf	___ftsub@f2+1,w
  9224  148E  00C4               	movwf	___ftadd@f2+1
  9225  148F  084F               	movf	___ftsub@f2+2,w
  9226  1490  00C5               	movwf	___ftadd@f2+2
  9227  1491  318F  270A         	fcall	___ftadd
  9228  1493  0020               	movlb	0	; select bank0
  9229  1494  0840               	movf	?___ftadd,w
  9230  1495  00CD               	movwf	?___ftsub
  9231  1496  0841               	movf	?___ftadd+1,w
  9232  1497  00CE               	movwf	?___ftsub+1
  9233  1498  0842               	movf	?___ftadd+2,w
  9234  1499  00CF               	movwf	?___ftsub+2
  9235  149A  0008               	return
  9236  149B                     __end_of___ftsub:	
  9237                           
  9238                           	psect	text8
  9239  0F0A                     __ptext8:	
  9240 ;; *************** function ___ftadd *****************
  9241 ;; Defined at:
  9242 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
  9243 ;; Parameters:    Size  Location     Type
  9244 ;;  f1              3   32[BANK0 ] float 
  9245 ;;  f2              3   35[BANK0 ] float 
  9246 ;; Auto vars:     Size  Location     Type
  9247 ;;  exp1            1   44[BANK0 ] unsigned char 
  9248 ;;  exp2            1   43[BANK0 ] unsigned char 
  9249 ;;  sign            1   42[BANK0 ] unsigned char 
  9250 ;; Return value:  Size  Location     Type
  9251 ;;                  3   32[BANK0 ] float 
  9252 ;; Registers used:
  9253 ;;		wreg, status,2, status,0, pclath, cstack
  9254 ;; Tracked objects:
  9255 ;;		On entry : 0/0
  9256 ;;		On exit  : 0/0
  9257 ;;		Unchanged: 0/0
  9258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9259 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9260 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9261 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9262 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9263 ;;Total ram usage:       13 bytes
  9264 ;; Hardware stack levels used:    1
  9265 ;; Hardware stack levels required when called:    1
  9266 ;; This function calls:
  9267 ;;		___ftpack
  9268 ;; This function is called by:
  9269 ;;		_tempCalc
  9270 ;;		___ftsub
  9271 ;;		_log
  9272 ;;		_eval_poly
  9273 ;; This function uses a non-reentrant model
  9274 ;;
  9275                           
  9276                           
  9277                           ;psect for function ___ftadd
  9278  0F0A                     ___ftadd:	
  9279                           
  9280                           ;incstack = 0
  9281                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  9282  0F0A  0020               	movlb	0	; select bank0
  9283  0F0B  0840               	movf	___ftadd@f1,w
  9284  0F0C  00C6               	movwf	??___ftadd
  9285  0F0D  0841               	movf	___ftadd@f1+1,w
  9286  0F0E  00C7               	movwf	??___ftadd+1
  9287  0F0F  0842               	movf	___ftadd@f1+2,w
  9288  0F10  00C8               	movwf	??___ftadd+2
  9289  0F11  1003               	clrc
  9290  0F12  0D47               	rlf	??___ftadd+1,w
  9291  0F13  0D48               	rlf	??___ftadd+2,w
  9292  0F14  00C9               	movwf	??___ftadd+3
  9293  0F15  0849               	movf	??___ftadd+3,w
  9294  0F16  00CC               	movwf	___ftadd@exp1
  9295  0F17  0843               	movf	___ftadd@f2,w
  9296  0F18  00C6               	movwf	??___ftadd
  9297  0F19  0844               	movf	___ftadd@f2+1,w
  9298  0F1A  00C7               	movwf	??___ftadd+1
  9299  0F1B  0845               	movf	___ftadd@f2+2,w
  9300  0F1C  00C8               	movwf	??___ftadd+2
  9301  0F1D  1003               	clrc
  9302  0F1E  0D47               	rlf	??___ftadd+1,w
  9303  0F1F  0D48               	rlf	??___ftadd+2,w
  9304  0F20  00C9               	movwf	??___ftadd+3
  9305  0F21  0849               	movf	??___ftadd+3,w
  9306  0F22  00CB               	movwf	___ftadd@exp2
  9307  0F23  084C               	movf	___ftadd@exp1,w
  9308  0F24  1903               	btfsc	3,2
  9309  0F25  2F32               	goto	l2205
  9310  0F26  084B               	movf	___ftadd@exp2,w
  9311  0F27  024C               	subwf	___ftadd@exp1,w
  9312  0F28  1803               	skipnc
  9313  0F29  2F39               	goto	l2209
  9314  0F2A  034C               	decf	___ftadd@exp1,w
  9315  0F2B  3AFF               	xorlw	255
  9316  0F2C  074B               	addwf	___ftadd@exp2,w
  9317  0F2D  00C6               	movwf	??___ftadd
  9318  0F2E  3019               	movlw	25
  9319  0F2F  0246               	subwf	??___ftadd,w
  9320  0F30  1C03               	skipc
  9321  0F31  2F39               	goto	l2209
  9322  0F32                     l2205:	
  9323  0F32  0843               	movf	___ftadd@f2,w
  9324  0F33  00C0               	movwf	?___ftadd
  9325  0F34  0844               	movf	___ftadd@f2+1,w
  9326  0F35  00C1               	movwf	?___ftadd+1
  9327  0F36  0845               	movf	___ftadd@f2+2,w
  9328  0F37  00C2               	movwf	?___ftadd+2
  9329  0F38  0008               	return
  9330  0F39                     l2209:	
  9331  0F39  084B               	movf	___ftadd@exp2,w
  9332  0F3A  1903               	btfsc	3,2
  9333  0F3B  0008               	return
  9334  0F3C  084C               	movf	___ftadd@exp1,w
  9335  0F3D  024B               	subwf	___ftadd@exp2,w
  9336  0F3E  1803               	skipnc
  9337  0F3F  2F48               	goto	l2215
  9338  0F40  034B               	decf	___ftadd@exp2,w
  9339  0F41  3AFF               	xorlw	255
  9340  0F42  074C               	addwf	___ftadd@exp1,w
  9341  0F43  00C6               	movwf	??___ftadd
  9342  0F44  3019               	movlw	25
  9343  0F45  0246               	subwf	??___ftadd,w
  9344  0F46  1803               	btfsc	3,0
  9345  0F47  0008               	return
  9346  0F48                     l2215:	
  9347  0F48  3006               	movlw	6
  9348  0F49  00C6               	movwf	??___ftadd
  9349  0F4A  0846               	movf	??___ftadd,w
  9350  0F4B  00CA               	movwf	___ftadd@sign
  9351  0F4C  1BC2               	btfsc	___ftadd@f1+2,7
  9352  0F4D  17CA               	bsf	___ftadd@sign,7
  9353  0F4E  1BC5               	btfsc	___ftadd@f2+2,7
  9354  0F4F  174A               	bsf	___ftadd@sign,6
  9355  0F50  17C1               	bsf	___ftadd@f1+1,7
  9356  0F51  30FF               	movlw	255
  9357  0F52  05C0               	andwf	___ftadd@f1,f
  9358  0F53  30FF               	movlw	255
  9359  0F54  05C1               	andwf	___ftadd@f1+1,f
  9360  0F55  3000               	movlw	0
  9361  0F56  05C2               	andwf	___ftadd@f1+2,f
  9362  0F57  17C4               	bsf	___ftadd@f2+1,7
  9363  0F58  30FF               	movlw	255
  9364  0F59  05C3               	andwf	___ftadd@f2,f
  9365  0F5A  30FF               	movlw	255
  9366  0F5B  05C4               	andwf	___ftadd@f2+1,f
  9367  0F5C  3000               	movlw	0
  9368  0F5D  05C5               	andwf	___ftadd@f2+2,f
  9369  0F5E  084B               	movf	___ftadd@exp2,w
  9370  0F5F  024C               	subwf	___ftadd@exp1,w
  9371  0F60  1803               	skipnc
  9372  0F61  2F84               	goto	l2237
  9373  0F62                     l2227:	
  9374  0F62  3001               	movlw	1
  9375  0F63                     u2155:	
  9376  0F63  35C3               	lslf	___ftadd@f2,f
  9377  0F64  0DC4               	rlf	___ftadd@f2+1,f
  9378  0F65  0DC5               	rlf	___ftadd@f2+2,f
  9379  0F66  0B89               	decfsz	9,f
  9380  0F67  2F63               	goto	u2155
  9381  0F68  3001               	movlw	1
  9382  0F69  02CB               	subwf	___ftadd@exp2,f
  9383  0F6A  084B               	movf	___ftadd@exp2,w
  9384  0F6B  064C               	xorwf	___ftadd@exp1,w
  9385  0F6C  1903               	skipnz
  9386  0F6D  2F7F               	goto	l2235
  9387  0F6E  3001               	movlw	1
  9388  0F6F  02CA               	subwf	___ftadd@sign,f
  9389  0F70  084A               	movf	___ftadd@sign,w
  9390  0F71  3907               	andlw	7
  9391  0F72  1903               	btfsc	3,2
  9392  0F73  2F7F               	goto	l2235
  9393  0F74  2F62               	goto	l2227
  9394  0F75                     l2233:	
  9395  0F75  3001               	movlw	1
  9396  0F76                     u2185:	
  9397  0F76  36C2               	lsrf	___ftadd@f1+2,f
  9398  0F77  0CC1               	rrf	___ftadd@f1+1,f
  9399  0F78  0CC0               	rrf	___ftadd@f1,f
  9400  0F79  0B89               	decfsz	9,f
  9401  0F7A  2F76               	goto	u2185
  9402  0F7B  3001               	movlw	1
  9403  0F7C  00C6               	movwf	??___ftadd
  9404  0F7D  0846               	movf	??___ftadd,w
  9405  0F7E  07CC               	addwf	___ftadd@exp1,f
  9406  0F7F                     l2235:	
  9407  0F7F  084C               	movf	___ftadd@exp1,w
  9408  0F80  064B               	xorwf	___ftadd@exp2,w
  9409  0F81  1903               	btfsc	3,2
  9410  0F82  2FA9               	goto	l761
  9411  0F83  2F75               	goto	l2233
  9412  0F84                     l2237:	
  9413  0F84  084C               	movf	___ftadd@exp1,w
  9414  0F85  024B               	subwf	___ftadd@exp2,w
  9415  0F86  1803               	skipnc
  9416  0F87  2FA9               	goto	l761
  9417  0F88                     l2239:	
  9418  0F88  3001               	movlw	1
  9419  0F89                     u2215:	
  9420  0F89  35C0               	lslf	___ftadd@f1,f
  9421  0F8A  0DC1               	rlf	___ftadd@f1+1,f
  9422  0F8B  0DC2               	rlf	___ftadd@f1+2,f
  9423  0F8C  0B89               	decfsz	9,f
  9424  0F8D  2F89               	goto	u2215
  9425  0F8E  3001               	movlw	1
  9426  0F8F  02CC               	subwf	___ftadd@exp1,f
  9427  0F90  084B               	movf	___ftadd@exp2,w
  9428  0F91  064C               	xorwf	___ftadd@exp1,w
  9429  0F92  1903               	skipnz
  9430  0F93  2FA5               	goto	l2247
  9431  0F94  3001               	movlw	1
  9432  0F95  02CA               	subwf	___ftadd@sign,f
  9433  0F96  084A               	movf	___ftadd@sign,w
  9434  0F97  3907               	andlw	7
  9435  0F98  1903               	btfsc	3,2
  9436  0F99  2FA5               	goto	l2247
  9437  0F9A  2F88               	goto	l2239
  9438  0F9B                     l2245:	
  9439  0F9B  3001               	movlw	1
  9440  0F9C                     u2245:	
  9441  0F9C  36C5               	lsrf	___ftadd@f2+2,f
  9442  0F9D  0CC4               	rrf	___ftadd@f2+1,f
  9443  0F9E  0CC3               	rrf	___ftadd@f2,f
  9444  0F9F  0B89               	decfsz	9,f
  9445  0FA0  2F9C               	goto	u2245
  9446  0FA1  3001               	movlw	1
  9447  0FA2  00C6               	movwf	??___ftadd
  9448  0FA3  0846               	movf	??___ftadd,w
  9449  0FA4  07CB               	addwf	___ftadd@exp2,f
  9450  0FA5                     l2247:	
  9451  0FA5  084C               	movf	___ftadd@exp1,w
  9452  0FA6  064B               	xorwf	___ftadd@exp2,w
  9453  0FA7  1D03               	skipz
  9454  0FA8  2F9B               	goto	l2245
  9455  0FA9                     l761:	
  9456  0FA9  1FCA               	btfss	___ftadd@sign,7
  9457  0FAA  2FBB               	goto	l2251
  9458  0FAB  30FF               	movlw	255
  9459  0FAC  06C0               	xorwf	___ftadd@f1,f
  9460  0FAD  30FF               	movlw	255
  9461  0FAE  06C1               	xorwf	___ftadd@f1+1,f
  9462  0FAF  30FF               	movlw	255
  9463  0FB0  06C2               	xorwf	___ftadd@f1+2,f
  9464  0FB1  3001               	movlw	1
  9465  0FB2  07C0               	addwf	___ftadd@f1,f
  9466  0FB3  3000               	movlw	0
  9467  0FB4  1803               	skipnc
  9468  0FB5  3001               	movlw	1
  9469  0FB6  07C1               	addwf	___ftadd@f1+1,f
  9470  0FB7  3000               	movlw	0
  9471  0FB8  1803               	skipnc
  9472  0FB9  3001               	movlw	1
  9473  0FBA  07C2               	addwf	___ftadd@f1+2,f
  9474  0FBB                     l2251:	
  9475  0FBB  1F4A               	btfss	___ftadd@sign,6
  9476  0FBC  2FCD               	goto	l2255
  9477  0FBD  30FF               	movlw	255
  9478  0FBE  06C3               	xorwf	___ftadd@f2,f
  9479  0FBF  30FF               	movlw	255
  9480  0FC0  06C4               	xorwf	___ftadd@f2+1,f
  9481  0FC1  30FF               	movlw	255
  9482  0FC2  06C5               	xorwf	___ftadd@f2+2,f
  9483  0FC3  3001               	movlw	1
  9484  0FC4  07C3               	addwf	___ftadd@f2,f
  9485  0FC5  3000               	movlw	0
  9486  0FC6  1803               	skipnc
  9487  0FC7  3001               	movlw	1
  9488  0FC8  07C4               	addwf	___ftadd@f2+1,f
  9489  0FC9  3000               	movlw	0
  9490  0FCA  1803               	skipnc
  9491  0FCB  3001               	movlw	1
  9492  0FCC  07C5               	addwf	___ftadd@f2+2,f
  9493  0FCD                     l2255:	
  9494  0FCD  01CA               	clrf	___ftadd@sign
  9495  0FCE  0840               	movf	___ftadd@f1,w
  9496  0FCF  07C3               	addwf	___ftadd@f2,f
  9497  0FD0  0841               	movf	___ftadd@f1+1,w
  9498  0FD1  3DC4               	addwfc	___ftadd@f2+1,f
  9499  0FD2  0842               	movf	___ftadd@f1+2,w
  9500  0FD3  3DC5               	addwfc	___ftadd@f2+2,f
  9501  0FD4  1FC5               	btfss	___ftadd@f2+2,7
  9502  0FD5  2FE8               	goto	l2265
  9503  0FD6  30FF               	movlw	255
  9504  0FD7  06C3               	xorwf	___ftadd@f2,f
  9505  0FD8  30FF               	movlw	255
  9506  0FD9  06C4               	xorwf	___ftadd@f2+1,f
  9507  0FDA  30FF               	movlw	255
  9508  0FDB  06C5               	xorwf	___ftadd@f2+2,f
  9509  0FDC  3001               	movlw	1
  9510  0FDD  07C3               	addwf	___ftadd@f2,f
  9511  0FDE  3000               	movlw	0
  9512  0FDF  1803               	skipnc
  9513  0FE0  3001               	movlw	1
  9514  0FE1  07C4               	addwf	___ftadd@f2+1,f
  9515  0FE2  3000               	movlw	0
  9516  0FE3  1803               	skipnc
  9517  0FE4  3001               	movlw	1
  9518  0FE5  07C5               	addwf	___ftadd@f2+2,f
  9519  0FE6  01CA               	clrf	___ftadd@sign
  9520  0FE7  0ACA               	incf	___ftadd@sign,f
  9521  0FE8                     l2265:	
  9522  0FE8  0843               	movf	___ftadd@f2,w
  9523  0FE9  00F0               	movwf	___ftpack@arg
  9524  0FEA  0844               	movf	___ftadd@f2+1,w
  9525  0FEB  00F1               	movwf	___ftpack@arg+1
  9526  0FEC  0845               	movf	___ftadd@f2+2,w
  9527  0FED  00F2               	movwf	___ftpack@arg+2
  9528  0FEE  084C               	movf	___ftadd@exp1,w
  9529  0FEF  00C6               	movwf	??___ftadd
  9530  0FF0  0846               	movf	??___ftadd,w
  9531  0FF1  00F3               	movwf	___ftpack@exp
  9532  0FF2  084A               	movf	___ftadd@sign,w
  9533  0FF3  00C7               	movwf	??___ftadd+1
  9534  0FF4  0847               	movf	??___ftadd+1,w
  9535  0FF5  00F4               	movwf	___ftpack@sign
  9536  0FF6  3189  214E         	fcall	___ftpack
  9537  0FF8  0870               	movf	?___ftpack,w
  9538  0FF9  0020               	movlb	0	; select bank0
  9539  0FFA  00C0               	movwf	?___ftadd
  9540  0FFB  0871               	movf	?___ftpack+1,w
  9541  0FFC  00C1               	movwf	?___ftadd+1
  9542  0FFD  0872               	movf	?___ftpack+2,w
  9543  0FFE  00C2               	movwf	?___ftadd+2
  9544  0FFF  0008               	return
  9545  1000                     __end_of___ftadd:	
  9546                           
  9547                           	psect	text9
  9548  0139                     __ptext9:	
  9549 ;; *************** function _readIAnalog *****************
  9550 ;; Defined at:
  9551 ;;		line 77 in file "adc.c"
  9552 ;; Parameters:    Size  Location     Type
  9553 ;;  channel         2    6[BANK0 ] unsigned int 
  9554 ;; Auto vars:     Size  Location     Type
  9555 ;;  value           2   28[BANK0 ] int 
  9556 ;;  analog_chann    2   26[BANK0 ] unsigned int 
  9557 ;; Return value:  Size  Location     Type
  9558 ;;                  2    6[BANK0 ] int 
  9559 ;; Registers used:
  9560 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9561 ;; Tracked objects:
  9562 ;;		On entry : 0/0
  9563 ;;		On exit  : 0/0
  9564 ;;		Unchanged: 0/0
  9565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9566 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9567 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9568 ;;      Temps:          0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9569 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9570 ;;Total ram usage:       24 bytes
  9571 ;; Hardware stack levels used:    1
  9572 ;; Hardware stack levels required when called:    1
  9573 ;; This function calls:
  9574 ;;		_ADCRead
  9575 ;;		___aldiv
  9576 ;;		___wmul
  9577 ;; This function is called by:
  9578 ;;		_main
  9579 ;; This function uses a non-reentrant model
  9580 ;;
  9581                           
  9582                           
  9583                           ;psect for function _readIAnalog
  9584  0139                     _readIAnalog:	
  9585                           
  9586                           ;adc.c: 79: int16_t value;
  9587                           ;adc.c: 81: uint16_t analog_channel = channels[channel];
  9588                           
  9589                           ;incstack = 0
  9590                           ; Regs used in _readIAnalog: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9591  0139  0020               	movlb	0	; select bank0
  9592  013A  3526               	lslf	readIAnalog@channel,w
  9593  013B  3E3D               	addlw	(low (_channels| (0+256)))& (0+255)
  9594  013C  0086               	movwf	6
  9595  013D  3001               	movlw	1	; select bank2/3
  9596  013E  0087               	movwf	7
  9597  013F  3F40               	moviw [0]fsr1
  9598  0140  00BA               	movwf	readIAnalog@analog_channel
  9599  0141  3F41               	moviw [1]fsr1
  9600  0142  00BB               	movwf	readIAnalog@analog_channel+1
  9601                           
  9602                           ;adc.c: 83: value = ADCRead(analog_channel);
  9603  0143  083A               	movf	readIAnalog@analog_channel,w
  9604  0144  3193  23EC  3181   	fcall	_ADCRead
  9605  0147  0871               	movf	?_ADCRead+1,w
  9606  0148  0020               	movlb	0	; select bank0
  9607  0149  00BD               	movwf	readIAnalog@value+1
  9608  014A  0870               	movf	?_ADCRead,w
  9609  014B  00BC               	movwf	readIAnalog@value
  9610                           
  9611                           ;adc.c: 85: totals[channel] = totals[channel]-samples[channel][sampleIndex];
  9612  014C  0826               	movf	readIAnalog@channel,w
  9613  014D  00A8               	movwf	??_readIAnalog
  9614  014E  3001               	movlw	1
  9615  014F                     u3015:	
  9616  014F  35A8               	lslf	??_readIAnalog,f
  9617  0150  3EFF               	addlw	-1
  9618  0151  1D03               	skipz
  9619  0152  294F               	goto	u3015
  9620  0153  3528               	lslf	??_readIAnalog,w
  9621  0154  3E20               	addlw	(low (_totals| (0+256)))& (0+255)
  9622  0155  0086               	movwf	6
  9623  0156  3001               	movlw	1	; select bank2/3
  9624  0157  0087               	movwf	7
  9625  0158  3F40               	moviw [0]fsr1
  9626  0159  00A9               	movwf	??_readIAnalog+1
  9627  015A  3F41               	moviw [1]fsr1
  9628  015B  00AA               	movwf	??_readIAnalog+2
  9629  015C  3F42               	moviw [2]fsr1
  9630  015D  00AB               	movwf	??_readIAnalog+3
  9631  015E  3F43               	moviw [3]fsr1
  9632  015F  00AC               	movwf	??_readIAnalog+4
  9633  0160  0021               	movlb	1	; select bank1
  9634  0161  083F               	movf	(_sampleIndex+1)^(0+128),w
  9635  0162  0020               	movlb	0	; select bank0
  9636  0163  00AE               	movwf	??_readIAnalog+6
  9637  0164  0021               	movlb	1	; select bank1
  9638  0165  083E               	movf	_sampleIndex^(0+128),w
  9639  0166  0020               	movlb	0	; select bank0
  9640  0167  00AD               	movwf	??_readIAnalog+5
  9641  0168  35AD               	lslf	??_readIAnalog+5,f
  9642  0169  0DAE               	rlf	??_readIAnalog+6,f
  9643  016A  0827               	movf	readIAnalog@channel+1,w
  9644  016B  00FA               	movwf	___wmul@multiplier+1
  9645  016C  0826               	movf	readIAnalog@channel,w
  9646  016D  00F9               	movwf	___wmul@multiplier
  9647  016E  3096               	movlw	150
  9648  016F  00FB               	movwf	___wmul@multiplicand
  9649  0170  3000               	movlw	0
  9650  0171  00FC               	movwf	___wmul@multiplicand+1
  9651  0172  3194  245F  3181   	fcall	___wmul
  9652  0175  3098               	movlw	152
  9653  0176  0020               	movlb	0	; select bank0
  9654  0177  00AF               	movwf	??_readIAnalog+7
  9655  0178  3021               	movlw	33
  9656  0179  00B0               	movwf	??_readIAnalog+8
  9657  017A  0879               	movf	?___wmul,w
  9658  017B  072F               	addwf	??_readIAnalog+7,w
  9659  017C  00B1               	movwf	??_readIAnalog+9
  9660  017D  087A               	movf	?___wmul+1,w
  9661  017E  3D30               	addwfc	??_readIAnalog+8,w
  9662  017F  00B2               	movwf	??_readIAnalog+10
  9663  0180  082D               	movf	??_readIAnalog+5,w
  9664  0181  0731               	addwf	??_readIAnalog+9,w
  9665  0182  0086               	movwf	6
  9666  0183  082E               	movf	??_readIAnalog+6,w
  9667  0184  3D32               	addwfc	??_readIAnalog+10,w
  9668  0185  0087               	movwf	7
  9669  0186  3F40               	moviw [0]fsr1
  9670  0187  00B3               	movwf	??_readIAnalog+11
  9671  0188  3F41               	moviw [1]fsr1
  9672  0189  00B4               	movwf	??_readIAnalog+12
  9673  018A  0833               	movf	??_readIAnalog+11,w
  9674  018B  00B5               	movwf	??_readIAnalog+13
  9675  018C  0834               	movf	??_readIAnalog+12,w
  9676  018D  00B6               	movwf	??_readIAnalog+14
  9677  018E  3000               	movlw	0
  9678  018F  1BB6               	btfsc	??_readIAnalog+14,7
  9679  0190  30FF               	movlw	255
  9680  0191  00B7               	movwf	??_readIAnalog+15
  9681  0192  00B8               	movwf	??_readIAnalog+16
  9682  0193  09B5               	comf	??_readIAnalog+13,f
  9683  0194  09B6               	comf	??_readIAnalog+14,f
  9684  0195  09B7               	comf	??_readIAnalog+15,f
  9685  0196  09B8               	comf	??_readIAnalog+16,f
  9686  0197  0AB5               	incf	??_readIAnalog+13,f
  9687  0198  1903               	skipnz
  9688  0199  0AB6               	incf	??_readIAnalog+14,f
  9689  019A  1903               	skipnz
  9690  019B  0AB7               	incf	??_readIAnalog+15,f
  9691  019C  1903               	skipnz
  9692  019D  0AB8               	incf	??_readIAnalog+16,f
  9693  019E  0835               	movf	??_readIAnalog+13,w
  9694  019F  07A9               	addwf	??_readIAnalog+1,f
  9695  01A0  0836               	movf	??_readIAnalog+14,w
  9696  01A1  3DAA               	addwfc	??_readIAnalog+2,f
  9697  01A2  0837               	movf	??_readIAnalog+15,w
  9698  01A3  3DAB               	addwfc	??_readIAnalog+3,f
  9699  01A4  0838               	movf	??_readIAnalog+16,w
  9700  01A5  3DAC               	addwfc	??_readIAnalog+4,f
  9701  01A6  0826               	movf	readIAnalog@channel,w
  9702  01A7  00B9               	movwf	??_readIAnalog+17
  9703  01A8  3001               	movlw	1
  9704  01A9                     u3025:	
  9705  01A9  35B9               	lslf	??_readIAnalog+17,f
  9706  01AA  3EFF               	addlw	-1
  9707  01AB  1D03               	skipz
  9708  01AC  29A9               	goto	u3025
  9709  01AD  3539               	lslf	??_readIAnalog+17,w
  9710  01AE  3E20               	addlw	(low (_totals| (0+256)))& (0+255)
  9711  01AF  0086               	movwf	6
  9712  01B0  3001               	movlw	1	; select bank2/3
  9713  01B1  0087               	movwf	7
  9714  01B2  0829               	movf	??_readIAnalog+1,w
  9715  01B3  3FC0               	movwi [0]fsr1
  9716  01B4  082A               	movf	??_readIAnalog+2,w
  9717  01B5  3FC1               	movwi [1]fsr1
  9718  01B6  082B               	movf	??_readIAnalog+3,w
  9719  01B7  3FC2               	movwi [2]fsr1
  9720  01B8  082C               	movf	??_readIAnalog+4,w
  9721  01B9  3FC3               	movwi [3]fsr1
  9722                           
  9723                           ;adc.c: 87: samples[channel][sampleIndex] = value;
  9724  01BA  0021               	movlb	1	; select bank1
  9725  01BB  083F               	movf	(_sampleIndex+1)^(0+128),w
  9726  01BC  0020               	movlb	0	; select bank0
  9727  01BD  00A9               	movwf	??_readIAnalog+1
  9728  01BE  0021               	movlb	1	; select bank1
  9729  01BF  083E               	movf	_sampleIndex^(0+128),w
  9730  01C0  0020               	movlb	0	; select bank0
  9731  01C1  00A8               	movwf	??_readIAnalog
  9732  01C2  35A8               	lslf	??_readIAnalog,f
  9733  01C3  0DA9               	rlf	??_readIAnalog+1,f
  9734  01C4  0827               	movf	readIAnalog@channel+1,w
  9735  01C5  00FA               	movwf	___wmul@multiplier+1
  9736  01C6  0826               	movf	readIAnalog@channel,w
  9737  01C7  00F9               	movwf	___wmul@multiplier
  9738  01C8  3096               	movlw	150
  9739  01C9  00FB               	movwf	___wmul@multiplicand
  9740  01CA  3000               	movlw	0
  9741  01CB  00FC               	movwf	___wmul@multiplicand+1
  9742  01CC  3194  245F  3181   	fcall	___wmul
  9743  01CF  3098               	movlw	152
  9744  01D0  0020               	movlb	0	; select bank0
  9745  01D1  00AA               	movwf	??_readIAnalog+2
  9746  01D2  3021               	movlw	33
  9747  01D3  00AB               	movwf	??_readIAnalog+3
  9748  01D4  0879               	movf	?___wmul,w
  9749  01D5  072A               	addwf	??_readIAnalog+2,w
  9750  01D6  00AC               	movwf	??_readIAnalog+4
  9751  01D7  087A               	movf	?___wmul+1,w
  9752  01D8  3D2B               	addwfc	??_readIAnalog+3,w
  9753  01D9  00AD               	movwf	??_readIAnalog+5
  9754  01DA  0828               	movf	??_readIAnalog,w
  9755  01DB  072C               	addwf	??_readIAnalog+4,w
  9756  01DC  0086               	movwf	6
  9757  01DD  0829               	movf	??_readIAnalog+1,w
  9758  01DE  3D2D               	addwfc	??_readIAnalog+5,w
  9759  01DF  0087               	movwf	7
  9760  01E0  083C               	movf	readIAnalog@value,w
  9761  01E1  3FC0               	movwi [0]fsr1
  9762  01E2  083D               	movf	readIAnalog@value+1,w
  9763  01E3  3FC1               	movwi [1]fsr1
  9764                           
  9765                           ;adc.c: 89: totals[channel] = totals[channel]+samples[channel][sampleIndex];
  9766  01E4  0826               	movf	readIAnalog@channel,w
  9767  01E5  00A8               	movwf	??_readIAnalog
  9768  01E6  3001               	movlw	1
  9769  01E7                     u3035:	
  9770  01E7  35A8               	lslf	??_readIAnalog,f
  9771  01E8  3EFF               	addlw	-1
  9772  01E9  1D03               	skipz
  9773  01EA  29E7               	goto	u3035
  9774  01EB  3528               	lslf	??_readIAnalog,w
  9775  01EC  3E20               	addlw	(low (_totals| (0+256)))& (0+255)
  9776  01ED  0086               	movwf	6
  9777  01EE  3001               	movlw	1	; select bank2/3
  9778  01EF  0087               	movwf	7
  9779  01F0  3F40               	moviw [0]fsr1
  9780  01F1  00A9               	movwf	??_readIAnalog+1
  9781  01F2  3F41               	moviw [1]fsr1
  9782  01F3  00AA               	movwf	??_readIAnalog+2
  9783  01F4  3F42               	moviw [2]fsr1
  9784  01F5  00AB               	movwf	??_readIAnalog+3
  9785  01F6  3F43               	moviw [3]fsr1
  9786  01F7  00AC               	movwf	??_readIAnalog+4
  9787  01F8  0021               	movlb	1	; select bank1
  9788  01F9  083F               	movf	(_sampleIndex+1)^(0+128),w
  9789  01FA  0020               	movlb	0	; select bank0
  9790  01FB  00AE               	movwf	??_readIAnalog+6
  9791  01FC  0021               	movlb	1	; select bank1
  9792  01FD  083E               	movf	_sampleIndex^(0+128),w
  9793  01FE  0020               	movlb	0	; select bank0
  9794  01FF  00AD               	movwf	??_readIAnalog+5
  9795  0200  35AD               	lslf	??_readIAnalog+5,f
  9796  0201  0DAE               	rlf	??_readIAnalog+6,f
  9797  0202  0827               	movf	readIAnalog@channel+1,w
  9798  0203  00FA               	movwf	___wmul@multiplier+1
  9799  0204  0826               	movf	readIAnalog@channel,w
  9800  0205  00F9               	movwf	___wmul@multiplier
  9801  0206  3096               	movlw	150
  9802  0207  00FB               	movwf	___wmul@multiplicand
  9803  0208  3000               	movlw	0
  9804  0209  00FC               	movwf	___wmul@multiplicand+1
  9805  020A  3194  245F  3181   	fcall	___wmul
  9806  020D  3098               	movlw	152
  9807  020E  0020               	movlb	0	; select bank0
  9808  020F  00AF               	movwf	??_readIAnalog+7
  9809  0210  3021               	movlw	33
  9810  0211  00B0               	movwf	??_readIAnalog+8
  9811  0212  0879               	movf	?___wmul,w
  9812  0213  072F               	addwf	??_readIAnalog+7,w
  9813  0214  00B1               	movwf	??_readIAnalog+9
  9814  0215  087A               	movf	?___wmul+1,w
  9815  0216  3D30               	addwfc	??_readIAnalog+8,w
  9816  0217  00B2               	movwf	??_readIAnalog+10
  9817  0218  082D               	movf	??_readIAnalog+5,w
  9818  0219  0731               	addwf	??_readIAnalog+9,w
  9819  021A  0086               	movwf	6
  9820  021B  082E               	movf	??_readIAnalog+6,w
  9821  021C  3D32               	addwfc	??_readIAnalog+10,w
  9822  021D  0087               	movwf	7
  9823  021E  3F40               	moviw [0]fsr1
  9824  021F  00B3               	movwf	??_readIAnalog+11
  9825  0220  3F41               	moviw [1]fsr1
  9826  0221  00B4               	movwf	??_readIAnalog+12
  9827  0222  0833               	movf	??_readIAnalog+11,w
  9828  0223  00B5               	movwf	??_readIAnalog+13
  9829  0224  0834               	movf	??_readIAnalog+12,w
  9830  0225  00B6               	movwf	??_readIAnalog+14
  9831  0226  3000               	movlw	0
  9832  0227  1BB6               	btfsc	??_readIAnalog+14,7
  9833  0228  30FF               	movlw	255
  9834  0229  00B7               	movwf	??_readIAnalog+15
  9835  022A  00B8               	movwf	??_readIAnalog+16
  9836  022B  0835               	movf	??_readIAnalog+13,w
  9837  022C  07A9               	addwf	??_readIAnalog+1,f
  9838  022D  0836               	movf	??_readIAnalog+14,w
  9839  022E  3DAA               	addwfc	??_readIAnalog+2,f
  9840  022F  0837               	movf	??_readIAnalog+15,w
  9841  0230  3DAB               	addwfc	??_readIAnalog+3,f
  9842  0231  0838               	movf	??_readIAnalog+16,w
  9843  0232  3DAC               	addwfc	??_readIAnalog+4,f
  9844  0233  0826               	movf	readIAnalog@channel,w
  9845  0234  00B9               	movwf	??_readIAnalog+17
  9846  0235  3001               	movlw	1
  9847  0236                     u3045:	
  9848  0236  35B9               	lslf	??_readIAnalog+17,f
  9849  0237  3EFF               	addlw	-1
  9850  0238  1D03               	skipz
  9851  0239  2A36               	goto	u3045
  9852  023A  3539               	lslf	??_readIAnalog+17,w
  9853  023B  3E20               	addlw	(low (_totals| (0+256)))& (0+255)
  9854  023C  0086               	movwf	6
  9855  023D  3001               	movlw	1	; select bank2/3
  9856  023E  0087               	movwf	7
  9857  023F  0829               	movf	??_readIAnalog+1,w
  9858  0240  3FC0               	movwi [0]fsr1
  9859  0241  082A               	movf	??_readIAnalog+2,w
  9860  0242  3FC1               	movwi [1]fsr1
  9861  0243  082B               	movf	??_readIAnalog+3,w
  9862  0244  3FC2               	movwi [2]fsr1
  9863  0245  082C               	movf	??_readIAnalog+4,w
  9864  0246  3FC3               	movwi [3]fsr1
  9865                           
  9866                           ;adc.c: 91: if(channel>=(4-1))
  9867  0247  3000               	movlw	0
  9868  0248  0227               	subwf	readIAnalog@channel+1,w
  9869  0249  3003               	movlw	3
  9870  024A  1903               	skipnz
  9871  024B  0226               	subwf	readIAnalog@channel,w
  9872  024C  1C03               	skipc
  9873  024D  2A5C               	goto	l2795
  9874                           
  9875                           ;adc.c: 92: {
  9876                           ;adc.c: 93: sampleIndex+=1;
  9877  024E  3001               	movlw	1
  9878  024F  0021               	movlb	1	; select bank1
  9879  0250  07BE               	addwf	_sampleIndex^(0+128),f
  9880  0251  3000               	movlw	0
  9881  0252  3DBF               	addwfc	(_sampleIndex+1)^(0+128),f
  9882                           
  9883                           ;adc.c: 94: if(sampleIndex >= 75)sampleIndex = 0;
  9884  0253  3000               	movlw	0
  9885  0254  023F               	subwf	(_sampleIndex+1)^(0+128),w
  9886  0255  304B               	movlw	75
  9887  0256  1903               	skipnz
  9888  0257  023E               	subwf	_sampleIndex^(0+128),w
  9889  0258  1C03               	skipc
  9890  0259  2A5C               	goto	l2795
  9891  025A  01BE               	clrf	_sampleIndex^(0+128)
  9892  025B  01BF               	clrf	(_sampleIndex+1)^(0+128)
  9893  025C                     l2795:	
  9894                           
  9895                           ;adc.c: 95: }
  9896                           ;adc.c: 97: value = totals[channel]/75;
  9897  025C  3000               	movlw	0
  9898  025D  00F3               	movwf	___aldiv@divisor+3
  9899  025E  3000               	movlw	0
  9900  025F  00F2               	movwf	___aldiv@divisor+2
  9901  0260  3000               	movlw	0
  9902  0261  00F1               	movwf	___aldiv@divisor+1
  9903  0262  304B               	movlw	75
  9904  0263  00F0               	movwf	___aldiv@divisor
  9905  0264  0020               	movlb	0	; select bank0
  9906  0265  0826               	movf	readIAnalog@channel,w
  9907  0266  00A8               	movwf	??_readIAnalog
  9908  0267  3001               	movlw	1
  9909  0268                     u3075:	
  9910  0268  35A8               	lslf	??_readIAnalog,f
  9911  0269  3EFF               	addlw	-1
  9912  026A  1D03               	skipz
  9913  026B  2A68               	goto	u3075
  9914  026C  3528               	lslf	??_readIAnalog,w
  9915  026D  3E20               	addlw	(low (_totals| (0+256)))& (0+255)
  9916  026E  0086               	movwf	6
  9917  026F  3001               	movlw	1	; select bank2/3
  9918  0270  0087               	movwf	7
  9919  0271  3F40               	moviw [0]fsr1
  9920  0272  00F4               	movwf	___aldiv@dividend
  9921  0273  3F41               	moviw [1]fsr1
  9922  0274  00F5               	movwf	___aldiv@dividend+1
  9923  0275  3F42               	moviw [2]fsr1
  9924  0276  00F6               	movwf	___aldiv@dividend+2
  9925  0277  3F43               	moviw [3]fsr1
  9926  0278  00F7               	movwf	___aldiv@dividend+3
  9927  0279  318A  2216         	fcall	___aldiv
  9928  027B  0871               	movf	?___aldiv+1,w
  9929  027C  0020               	movlb	0	; select bank0
  9930  027D  00BD               	movwf	readIAnalog@value+1
  9931  027E  0870               	movf	?___aldiv,w
  9932  027F  00BC               	movwf	readIAnalog@value
  9933                           
  9934                           ;adc.c: 99: return value;
  9935  0280  083D               	movf	readIAnalog@value+1,w
  9936  0281  00A7               	movwf	?_readIAnalog+1
  9937  0282  083C               	movf	readIAnalog@value,w
  9938  0283  00A6               	movwf	?_readIAnalog
  9939  0284  0008               	return
  9940  0285                     __end_of_readIAnalog:	
  9941                           
  9942                           	psect	text10
  9943  0A16                     __ptext10:	
  9944 ;; *************** function ___aldiv *****************
  9945 ;; Defined at:
  9946 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\aldiv.c"
  9947 ;; Parameters:    Size  Location     Type
  9948 ;;  divisor         4    0[COMMON] long 
  9949 ;;  dividend        4    4[COMMON] long 
  9950 ;; Auto vars:     Size  Location     Type
  9951 ;;  quotient        4    2[BANK0 ] long 
  9952 ;;  sign            1    1[BANK0 ] unsigned char 
  9953 ;;  counter         1    0[BANK0 ] unsigned char 
  9954 ;; Return value:  Size  Location     Type
  9955 ;;                  4    0[COMMON] long 
  9956 ;; Registers used:
  9957 ;;		wreg, status,2, status,0
  9958 ;; Tracked objects:
  9959 ;;		On entry : 0/0
  9960 ;;		On exit  : 0/0
  9961 ;;		Unchanged: 0/0
  9962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9963 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9964 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9965 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9966 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9967 ;;Total ram usage:       15 bytes
  9968 ;; Hardware stack levels used:    1
  9969 ;; This function calls:
  9970 ;;		Nothing
  9971 ;; This function is called by:
  9972 ;;		_readIAnalog
  9973 ;; This function uses a non-reentrant model
  9974 ;;
  9975                           
  9976                           
  9977                           ;psect for function ___aldiv
  9978  0A16                     ___aldiv:	
  9979                           
  9980                           ;incstack = 0
  9981                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  9982  0A16  0020               	movlb	0	; select bank0
  9983  0A17  01A1               	clrf	___aldiv@sign
  9984  0A18  1FF3               	btfss	___aldiv@divisor+3,7
  9985  0A19  2A27               	goto	l624
  9986  0A1A  09F0               	comf	___aldiv@divisor,f
  9987  0A1B  09F1               	comf	___aldiv@divisor+1,f
  9988  0A1C  09F2               	comf	___aldiv@divisor+2,f
  9989  0A1D  09F3               	comf	___aldiv@divisor+3,f
  9990  0A1E  0AF0               	incf	___aldiv@divisor,f
  9991  0A1F  1903               	skipnz
  9992  0A20  0AF1               	incf	___aldiv@divisor+1,f
  9993  0A21  1903               	skipnz
  9994  0A22  0AF2               	incf	___aldiv@divisor+2,f
  9995  0A23  1903               	skipnz
  9996  0A24  0AF3               	incf	___aldiv@divisor+3,f
  9997  0A25  01A1               	clrf	___aldiv@sign
  9998  0A26  0AA1               	incf	___aldiv@sign,f
  9999  0A27                     l624:	
 10000  0A27  1FF7               	btfss	___aldiv@dividend+3,7
 10001  0A28  2A38               	goto	l2593
 10002  0A29  09F4               	comf	___aldiv@dividend,f
 10003  0A2A  09F5               	comf	___aldiv@dividend+1,f
 10004  0A2B  09F6               	comf	___aldiv@dividend+2,f
 10005  0A2C  09F7               	comf	___aldiv@dividend+3,f
 10006  0A2D  0AF4               	incf	___aldiv@dividend,f
 10007  0A2E  1903               	skipnz
 10008  0A2F  0AF5               	incf	___aldiv@dividend+1,f
 10009  0A30  1903               	skipnz
 10010  0A31  0AF6               	incf	___aldiv@dividend+2,f
 10011  0A32  1903               	skipnz
 10012  0A33  0AF7               	incf	___aldiv@dividend+3,f
 10013  0A34  3001               	movlw	1
 10014  0A35  00F8               	movwf	??___aldiv
 10015  0A36  0878               	movf	??___aldiv,w
 10016  0A37  06A1               	xorwf	___aldiv@sign,f
 10017  0A38                     l2593:	
 10018  0A38  3000               	movlw	0
 10019  0A39  00A5               	movwf	___aldiv@quotient+3
 10020  0A3A  3000               	movlw	0
 10021  0A3B  00A4               	movwf	___aldiv@quotient+2
 10022  0A3C  3000               	movlw	0
 10023  0A3D  00A3               	movwf	___aldiv@quotient+1
 10024  0A3E  3000               	movlw	0
 10025  0A3F  00A2               	movwf	___aldiv@quotient
 10026  0A40  0873               	movf	___aldiv@divisor+3,w
 10027  0A41  0472               	iorwf	___aldiv@divisor+2,w
 10028  0A42  0471               	iorwf	___aldiv@divisor+1,w
 10029  0A43  0470               	iorwf	___aldiv@divisor,w
 10030  0A44  1903               	skipnz
 10031  0A45  2A81               	goto	l2615
 10032  0A46  01A0               	clrf	___aldiv@counter
 10033  0A47  0AA0               	incf	___aldiv@counter,f
 10034  0A48                     l2601:	
 10035  0A48  1BF3               	btfsc	___aldiv@divisor+3,7
 10036  0A49  2A56               	goto	l2603
 10037  0A4A  3001               	movlw	1
 10038  0A4B                     u2595:	
 10039  0A4B  35F0               	lslf	___aldiv@divisor,f
 10040  0A4C  0DF1               	rlf	___aldiv@divisor+1,f
 10041  0A4D  0DF2               	rlf	___aldiv@divisor+2,f
 10042  0A4E  0DF3               	rlf	___aldiv@divisor+3,f
 10043  0A4F  0B89               	decfsz	9,f
 10044  0A50  2A4B               	goto	u2595
 10045  0A51  3001               	movlw	1
 10046  0A52  00F8               	movwf	??___aldiv
 10047  0A53  0878               	movf	??___aldiv,w
 10048  0A54  07A0               	addwf	___aldiv@counter,f
 10049  0A55  2A48               	goto	l2601
 10050  0A56                     l2603:	
 10051  0A56  3001               	movlw	1
 10052  0A57                     u2615:	
 10053  0A57  35A2               	lslf	___aldiv@quotient,f
 10054  0A58  0DA3               	rlf	___aldiv@quotient+1,f
 10055  0A59  0DA4               	rlf	___aldiv@quotient+2,f
 10056  0A5A  0DA5               	rlf	___aldiv@quotient+3,f
 10057  0A5B  0B89               	decfsz	9,f
 10058  0A5C  2A57               	goto	u2615
 10059  0A5D  0873               	movf	___aldiv@divisor+3,w
 10060  0A5E  0277               	subwf	___aldiv@dividend+3,w
 10061  0A5F  1D03               	skipz
 10062  0A60  2A6B               	goto	u2625
 10063  0A61  0872               	movf	___aldiv@divisor+2,w
 10064  0A62  0276               	subwf	___aldiv@dividend+2,w
 10065  0A63  1D03               	skipz
 10066  0A64  2A6B               	goto	u2625
 10067  0A65  0871               	movf	___aldiv@divisor+1,w
 10068  0A66  0275               	subwf	___aldiv@dividend+1,w
 10069  0A67  1D03               	skipz
 10070  0A68  2A6B               	goto	u2625
 10071  0A69  0870               	movf	___aldiv@divisor,w
 10072  0A6A  0274               	subwf	___aldiv@dividend,w
 10073  0A6B                     u2625:	
 10074  0A6B  1C03               	skipc
 10075  0A6C  2A76               	goto	l2611
 10076  0A6D  0870               	movf	___aldiv@divisor,w
 10077  0A6E  02F4               	subwf	___aldiv@dividend,f
 10078  0A6F  0871               	movf	___aldiv@divisor+1,w
 10079  0A70  3BF5               	subwfb	___aldiv@dividend+1,f
 10080  0A71  0872               	movf	___aldiv@divisor+2,w
 10081  0A72  3BF6               	subwfb	___aldiv@dividend+2,f
 10082  0A73  0873               	movf	___aldiv@divisor+3,w
 10083  0A74  3BF7               	subwfb	___aldiv@dividend+3,f
 10084  0A75  1422               	bsf	___aldiv@quotient,0
 10085  0A76                     l2611:	
 10086  0A76  3001               	movlw	1
 10087  0A77                     u2635:	
 10088  0A77  36F3               	lsrf	___aldiv@divisor+3,f
 10089  0A78  0CF2               	rrf	___aldiv@divisor+2,f
 10090  0A79  0CF1               	rrf	___aldiv@divisor+1,f
 10091  0A7A  0CF0               	rrf	___aldiv@divisor,f
 10092  0A7B  0B89               	decfsz	9,f
 10093  0A7C  2A77               	goto	u2635
 10094  0A7D  3001               	movlw	1
 10095  0A7E  02A0               	subwf	___aldiv@counter,f
 10096  0A7F  1D03               	btfss	3,2
 10097  0A80  2A56               	goto	l2603
 10098  0A81                     l2615:	
 10099  0A81  0821               	movf	___aldiv@sign,w
 10100  0A82  1903               	btfsc	3,2
 10101  0A83  2A8F               	goto	l2619
 10102  0A84  09A2               	comf	___aldiv@quotient,f
 10103  0A85  09A3               	comf	___aldiv@quotient+1,f
 10104  0A86  09A4               	comf	___aldiv@quotient+2,f
 10105  0A87  09A5               	comf	___aldiv@quotient+3,f
 10106  0A88  0AA2               	incf	___aldiv@quotient,f
 10107  0A89  1903               	skipnz
 10108  0A8A  0AA3               	incf	___aldiv@quotient+1,f
 10109  0A8B  1903               	skipnz
 10110  0A8C  0AA4               	incf	___aldiv@quotient+2,f
 10111  0A8D  1903               	skipnz
 10112  0A8E  0AA5               	incf	___aldiv@quotient+3,f
 10113  0A8F                     l2619:	
 10114  0A8F  0825               	movf	___aldiv@quotient+3,w
 10115  0A90  00F3               	movwf	?___aldiv+3
 10116  0A91  0824               	movf	___aldiv@quotient+2,w
 10117  0A92  00F2               	movwf	?___aldiv+2
 10118  0A93  0823               	movf	___aldiv@quotient+1,w
 10119  0A94  00F1               	movwf	?___aldiv+1
 10120  0A95  0822               	movf	___aldiv@quotient,w
 10121  0A96  00F0               	movwf	?___aldiv
 10122  0A97  0008               	return
 10123  0A98                     __end_of___aldiv:	
 10124                           
 10125                           	psect	text11
 10126  0B1F                     __ptext11:	
 10127 ;; *************** function _readButton *****************
 10128 ;; Defined at:
 10129 ;;		line 9 in file "buttons.c"
 10130 ;; Parameters:    Size  Location     Type
 10131 ;;		None
 10132 ;; Auto vars:     Size  Location     Type
 10133 ;;		None
 10134 ;; Return value:  Size  Location     Type
 10135 ;;                  1    wreg      unsigned char 
 10136 ;; Registers used:
 10137 ;;		wreg, status,2, status,0, pclath, cstack
 10138 ;; Tracked objects:
 10139 ;;		On entry : 0/0
 10140 ;;		On exit  : 0/0
 10141 ;;		Unchanged: 0/0
 10142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10145 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10146 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10147 ;;Total ram usage:        2 bytes
 10148 ;; Hardware stack levels used:    1
 10149 ;; Hardware stack levels required when called:    1
 10150 ;; This function calls:
 10151 ;;		_ADCRead
 10152 ;; This function is called by:
 10153 ;;		_main
 10154 ;; This function uses a non-reentrant model
 10155 ;;
 10156                           
 10157                           
 10158                           ;psect for function _readButton
 10159  0B1F                     _readButton:	
 10160                           
 10161                           ;buttons.c: 11: readButtons = ADCRead(11);
 10162                           
 10163                           ;incstack = 0
 10164                           ; Regs used in _readButton: [wreg+status,2+status,0+pclath+cstack]
 10165  0B1F  300B               	movlw	11
 10166  0B20  3193  23EC  318B   	fcall	_ADCRead
 10167  0B23  0871               	movf	?_ADCRead+1,w
 10168  0B24  0021               	movlb	1	; select bank1
 10169  0B25  00BB               	movwf	(_readButtons+1)^(0+128)
 10170  0B26  0870               	movf	?_ADCRead,w
 10171  0B27  00BA               	movwf	_readButtons^(0+128)
 10172                           
 10173                           ;buttons.c: 13: if(readButtons >= 425 && readButtons < 485)
 10174  0B28  083B               	movf	(_readButtons+1)^(0+128),w
 10175  0B29  3A80               	xorlw	128
 10176  0B2A  00F4               	movwf	??_readButton
 10177  0B2B  3081               	movlw	129
 10178  0B2C  0274               	subwf	??_readButton,w
 10179  0B2D  1D03               	skipz
 10180  0B2E  2B31               	goto	u3265
 10181  0B2F  30A9               	movlw	169
 10182  0B30  023A               	subwf	_readButtons^(0+128),w
 10183  0B31                     u3265:	
 10184  0B31  1C03               	skipc
 10185  0B32  2B43               	goto	l2877
 10186  0B33  0021               	movlb	1	; select bank1
 10187  0B34  083B               	movf	(_readButtons+1)^(0+128),w
 10188  0B35  3A80               	xorlw	128
 10189  0B36  00F4               	movwf	??_readButton
 10190  0B37  3081               	movlw	129
 10191  0B38  0274               	subwf	??_readButton,w
 10192  0B39  1D03               	skipz
 10193  0B3A  2B3D               	goto	u3275
 10194  0B3B  30E5               	movlw	229
 10195  0B3C  023A               	subwf	_readButtons^(0+128),w
 10196  0B3D                     u3275:	
 10197  0B3D  1803               	skipnc
 10198  0B3E  2B43               	goto	l2877
 10199                           
 10200                           ;buttons.c: 14: {
 10201                           ;buttons.c: 15: button = 1;
 10202  0B3F  0020               	movlb	0	; select bank0
 10203  0B40  01ED               	clrf	_button
 10204  0B41  0AED               	incf	_button,f
 10205                           
 10206                           ;buttons.c: 16: }
 10207  0B42  2B71               	goto	l2889
 10208  0B43                     l2877:	
 10209                           
 10210                           ;buttons.c: 18: else if(readButtons >= 615 && readButtons < 690)
 10211  0B43  0021               	movlb	1	; select bank1
 10212  0B44  083B               	movf	(_readButtons+1)^(0+128),w
 10213  0B45  3A80               	xorlw	128
 10214  0B46  00F4               	movwf	??_readButton
 10215  0B47  3082               	movlw	130
 10216  0B48  0274               	subwf	??_readButton,w
 10217  0B49  1D03               	skipz
 10218  0B4A  2B4D               	goto	u3285
 10219  0B4B  3067               	movlw	103
 10220  0B4C  023A               	subwf	_readButtons^(0+128),w
 10221  0B4D                     u3285:	
 10222  0B4D  1C03               	skipc
 10223  0B4E  2B5D               	goto	l2883
 10224  0B4F  0021               	movlb	1	; select bank1
 10225  0B50  083B               	movf	(_readButtons+1)^(0+128),w
 10226  0B51  3A80               	xorlw	128
 10227  0B52  00F4               	movwf	??_readButton
 10228  0B53  3082               	movlw	130
 10229  0B54  0274               	subwf	??_readButton,w
 10230  0B55  1D03               	skipz
 10231  0B56  2B59               	goto	u3295
 10232  0B57  30B2               	movlw	178
 10233  0B58  023A               	subwf	_readButtons^(0+128),w
 10234  0B59                     u3295:	
 10235  0B59  1803               	skipnc
 10236  0B5A  2B5D               	goto	l2883
 10237                           
 10238                           ;buttons.c: 19: {
 10239                           ;buttons.c: 20: button = 2;
 10240  0B5B  3002               	movlw	2
 10241  0B5C  2B6A               	goto	L3
 10242  0B5D                     l2883:	
 10243                           ;buttons.c: 21: }
 10244                           
 10245                           
 10246                           ;buttons.c: 23: else if(readButtons > 800)
 10247  0B5D  0021               	movlb	1	; select bank1
 10248  0B5E  083B               	movf	(_readButtons+1)^(0+128),w
 10249  0B5F  3A80               	xorlw	128
 10250  0B60  00F4               	movwf	??_readButton
 10251  0B61  3083               	movlw	131
 10252  0B62  0274               	subwf	??_readButton,w
 10253  0B63  1D03               	skipz
 10254  0B64  2B67               	goto	u3305
 10255  0B65  3021               	movlw	33
 10256  0B66  023A               	subwf	_readButtons^(0+128),w
 10257  0B67                     u3305:	
 10258  0B67  1C03               	skipc
 10259  0B68  2B6F               	goto	l2887
 10260                           
 10261                           ;buttons.c: 24: {
 10262                           ;buttons.c: 25: button = 3;
 10263  0B69  3003               	movlw	3
 10264  0B6A                     L3:	
 10265  0B6A  00F4               	movwf	??_readButton
 10266  0B6B  0874               	movf	??_readButton,w
 10267  0B6C  0020               	movlb	0	; select bank0
 10268  0B6D  00ED               	movwf	_button
 10269                           
 10270                           ;buttons.c: 26: }
 10271  0B6E  2B71               	goto	l2889
 10272  0B6F                     l2887:	
 10273                           
 10274                           ;buttons.c: 28: else
 10275                           ;buttons.c: 29: {
 10276                           ;buttons.c: 30: button = 0;
 10277  0B6F  0020               	movlb	0	; select bank0
 10278  0B70  01ED               	clrf	_button
 10279  0B71                     l2889:	
 10280                           
 10281                           ;buttons.c: 31: }
 10282                           ;buttons.c: 33: if (button != 0)
 10283  0B71  086D               	movf	_button,w
 10284  0B72  1903               	btfsc	3,2
 10285  0B73  2BA2               	goto	l2909
 10286                           
 10287                           ;buttons.c: 34: {
 10288                           ;buttons.c: 35: if (button != lastButton)
 10289  0B74  086D               	movf	_button,w
 10290  0B75  066C               	xorwf	_lastButton,w
 10291  0B76  1903               	skipnz
 10292  0B77  2B7D               	goto	l2897
 10293                           
 10294                           ;buttons.c: 36: {
 10295                           ;buttons.c: 37: lastButton = button;
 10296  0B78  086D               	movf	_button,w
 10297  0B79  00F4               	movwf	??_readButton
 10298  0B7A  0874               	movf	??_readButton,w
 10299  0B7B  00EC               	movwf	_lastButton
 10300  0B7C  2BA2               	goto	l2909
 10301  0B7D                     l2897:	
 10302                           ;buttons.c: 39: }
 10303                           
 10304                           ;buttons.c: 38: j = 0;
 10305                           
 10306                           
 10307                           ;buttons.c: 40: else
 10308                           ;buttons.c: 41: {
 10309                           ;buttons.c: 42: j += 1;
 10310  0B7D  3001               	movlw	1
 10311  0B7E  00F4               	movwf	??_readButton
 10312  0B7F  0874               	movf	??_readButton,w
 10313  0B80  0021               	movlb	1	; select bank1
 10314  0B81  07C0               	addwf	_j^(0+128),f
 10315                           
 10316                           ;buttons.c: 44: if(j == 1)
 10317  0B82  0340               	decf	_j^(0+128),w
 10318  0B83  1D03               	btfss	3,2
 10319  0B84  2B88               	goto	l2903
 10320                           
 10321                           ;buttons.c: 45: {
 10322                           ;buttons.c: 46: return (lastButton);
 10323  0B85  0020               	movlb	0	; select bank0
 10324  0B86  086C               	movf	_lastButton,w
 10325  0B87  0008               	return
 10326  0B88                     l2903:	
 10327                           
 10328                           ;buttons.c: 47: }
 10329                           ;buttons.c: 49: if (j >10)
 10330  0B88  0021               	movlb	1	; select bank1
 10331  0B89  0840               	movf	_j^(0+128),w
 10332  0B8A  3A80               	xorlw	128
 10333  0B8B  3E75               	addlw	-139
 10334  0B8C  1C03               	skipc
 10335  0B8D  2BA4               	goto	l2911
 10336                           
 10337                           ;buttons.c: 50: {
 10338                           ;buttons.c: 51: _delay((unsigned long)((25)*(32000000/4000.0)));
 10339  0B8E  3002               	movlw	2
 10340  0B8F  00F5               	movwf	??_readButton+1
 10341  0B90  3004               	movlw	4
 10342  0B91  00F4               	movwf	??_readButton
 10343  0B92  30BA               	movlw	186
 10344  0B93                     u3727:	
 10345  0B93  0B89               	decfsz	9,f
 10346  0B94  2B93               	goto	u3727
 10347  0B95  0BF4               	decfsz	??_readButton,f
 10348  0B96  2B93               	goto	u3727
 10349  0B97  0BF5               	decfsz	??_readButton+1,f
 10350  0B98  2B93               	goto	u3727
 10351  0B99  3200               	nop2
 10352                           
 10353                           ;buttons.c: 52: j = 10;
 10354  0B9A  300A               	movlw	10
 10355  0B9B  00F4               	movwf	??_readButton
 10356  0B9C  0874               	movf	??_readButton,w
 10357  0B9D  0021               	movlb	1	; select bank1
 10358  0B9E  00C0               	movwf	_j^(0+128)
 10359                           
 10360                           ;buttons.c: 53: return (lastButton);
 10361  0B9F  0020               	movlb	0	; select bank0
 10362  0BA0  086C               	movf	_lastButton,w
 10363  0BA1  0008               	return
 10364  0BA2                     l2909:	
 10365                           ;buttons.c: 54: }
 10366                           ;buttons.c: 55: }
 10367                           ;buttons.c: 56: goto end;
 10368                           
 10369                           
 10370                           ;buttons.c: 57: }
 10371                           ;buttons.c: 59: j = 0;
 10372  0BA2  0021               	movlb	1	; select bank1
 10373  0BA3  01C0               	clrf	_j^(0+128)
 10374  0BA4                     l2911:	
 10375                           ;buttons.c: 61: end:
 10376                           
 10377                           
 10378                           ;buttons.c: 63: return (0);
 10379  0BA4  3000               	movlw	0
 10380  0BA5  0008               	return
 10381  0BA6                     __end_of_readButton:	
 10382                           
 10383                           	psect	text12
 10384  13EC                     __ptext12:	
 10385 ;; *************** function _ADCRead *****************
 10386 ;; Defined at:
 10387 ;;		line 21 in file "adc.c"
 10388 ;; Parameters:    Size  Location     Type
 10389 ;;  channel         1    wreg     enum E14259
 10390 ;; Auto vars:     Size  Location     Type
 10391 ;;  channel         1    3[COMMON] enum E14259
 10392 ;; Return value:  Size  Location     Type
 10393 ;;                  2    0[COMMON] int 
 10394 ;; Registers used:
 10395 ;;		wreg
 10396 ;; Tracked objects:
 10397 ;;		On entry : 0/0
 10398 ;;		On exit  : 0/0
 10399 ;;		Unchanged: 0/0
 10400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10401 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10402 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10404 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10405 ;;Total ram usage:        4 bytes
 10406 ;; Hardware stack levels used:    1
 10407 ;; This function calls:
 10408 ;;		Nothing
 10409 ;; This function is called by:
 10410 ;;		_readIAnalog
 10411 ;;		_readButton
 10412 ;;		_main
 10413 ;; This function uses a non-reentrant model
 10414 ;;
 10415                           
 10416                           
 10417                           ;psect for function _ADCRead
 10418  13EC                     _ADCRead:	
 10419                           
 10420                           ;incstack = 0
 10421                           ; Regs used in _ADCRead: [wreg]
 10422                           ;ADCRead@channel stored from wreg
 10423  13EC  00F3               	movwf	ADCRead@channel
 10424                           
 10425                           ;adc.c: 23: ADPCH = channel_VSS;
 10426  13ED  303C               	movlw	60
 10427  13EE  0021               	movlb	1	; select bank1
 10428  13EF  009E               	movwf	30	;volatile
 10429                           
 10430                           ;adc.c: 25: ADCON0bits.ADON = 1;
 10431  13F0  1793               	bsf	19,7	;volatile
 10432                           
 10433                           ;adc.c: 27: ADCON0bits.ADCONT = 0;
 10434  13F1  1313               	bcf	19,6	;volatile
 10435                           
 10436                           ;adc.c: 29: ADCON0bits.ADGO = 1;
 10437  13F2  1413               	bsf	19,0	;volatile
 10438  13F3                     l57:	
 10439                           ;adc.c: 32: {
 10440                           
 10441                           ;adc.c: 31: while(ADCON0bits.ADGO)
 10442                           
 10443  13F3  1813               	btfsc	19,0	;volatile
 10444  13F4  2BF3               	goto	l57
 10445                           
 10446                           ;adc.c: 33: }
 10447                           ;adc.c: 35: ADPCH = channel;
 10448  13F5  0873               	movf	ADCRead@channel,w
 10449  13F6  009E               	movwf	30	;volatile
 10450                           
 10451                           ;adc.c: 37: ADCON0bits.ADON = 1;
 10452  13F7  1793               	bsf	19,7	;volatile
 10453                           
 10454                           ;adc.c: 39: ADCON0bits.ADCONT = 0;
 10455  13F8  1313               	bcf	19,6	;volatile
 10456                           
 10457                           ;adc.c: 41: ADCON0bits.ADGO = 1;
 10458  13F9  1413               	bsf	19,0	;volatile
 10459  13FA                     l60:	
 10460                           ;adc.c: 44: {
 10461                           
 10462                           ;adc.c: 43: while(ADCON0bits.ADGO)
 10463                           
 10464  13FA  1813               	btfsc	19,0	;volatile
 10465  13FB  2BFA               	goto	l60
 10466                           
 10467                           ;adc.c: 45: }
 10468                           ;adc.c: 47: return ((ADRESH<<8)+ADRESL);
 10469  13FC  080D               	movf	13,w	;volatile
 10470  13FD  00F1               	movwf	?_ADCRead+1
 10471  13FE  080C               	movf	12,w	;volatile
 10472  13FF  00F0               	movwf	?_ADCRead
 10473  1400  0008               	return
 10474  1401                     __end_of_ADCRead:	
 10475                           
 10476                           	psect	text13
 10477  09B2                     __ptext13:	
 10478 ;; *************** function _cc_cv_mode *****************
 10479 ;; Defined at:
 10480 ;;		line 92 in file "battery_charger.c"
 10481 ;; Parameters:    Size  Location     Type
 10482 ;;		None
 10483 ;; Auto vars:     Size  Location     Type
 10484 ;;		None
 10485 ;; Return value:  Size  Location     Type
 10486 ;;                  1    wreg      void 
 10487 ;; Registers used:
 10488 ;;		wreg, status,2, status,0
 10489 ;; Tracked objects:
 10490 ;;		On entry : 0/0
 10491 ;;		On exit  : 0/0
 10492 ;;		Unchanged: 0/0
 10493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10496 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10497 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10498 ;;Total ram usage:        1 bytes
 10499 ;; Hardware stack levels used:    1
 10500 ;; This function calls:
 10501 ;;		Nothing
 10502 ;; This function is called by:
 10503 ;;		_main
 10504 ;; This function uses a non-reentrant model
 10505 ;;
 10506                           
 10507                           
 10508                           ;psect for function _cc_cv_mode
 10509  09B2                     _cc_cv_mode:	
 10510                           
 10511                           ;battery_charger.c: 94: if(voltage[1] > Vref)
 10512                           
 10513                           ;incstack = 0
 10514                           ; Regs used in _cc_cv_mode: [wreg+status,2+status,0]
 10515  09B2  0021               	movlb	1	; select bank1
 10516  09B3  0867               	movf	(_Vref+1)^(0+128),w
 10517  09B4  3A80               	xorlw	128
 10518  09B5  00F0               	movwf	??_cc_cv_mode
 10519  09B6  0833               	movf	((_voltage+1)^(0+128)+2),w
 10520  09B7  3A80               	xorlw	128
 10521  09B8  0270               	subwf	??_cc_cv_mode,w
 10522  09B9  1D03               	skipz
 10523  09BA  29BD               	goto	u3185
 10524  09BB  0832               	movf	(_voltage^(0+128)+2),w
 10525  09BC  0266               	subwf	_Vref^(0+128),w
 10526  09BD                     u3185:	
 10527  09BD  1803               	skipnc
 10528  09BE  29D5               	goto	l2853
 10529                           
 10530                           ;battery_charger.c: 95: {
 10531                           ;battery_charger.c: 96: if(VHoldMode<12)VHoldMode+=1;
 10532  09BF  0021               	movlb	1	; select bank1
 10533  09C0  0841               	movf	_VHoldMode^(0+128),w
 10534  09C1  3A80               	xorlw	128
 10535  09C2  3E74               	addlw	-140
 10536  09C3  1803               	skipnc
 10537  09C4  29C9               	goto	l129
 10538  09C5  3001               	movlw	1
 10539  09C6  00F0               	movwf	??_cc_cv_mode
 10540  09C7  0870               	movf	??_cc_cv_mode,w
 10541  09C8  07C1               	addwf	_VHoldMode^(0+128),f
 10542  09C9                     l129:	
 10543                           
 10544                           ;battery_charger.c: 98: if(cc_cv)
 10545  09C9  0842               	movf	_cc_cv^(0+128),w
 10546  09CA  1903               	btfsc	3,2
 10547  09CB  29CF               	goto	l2849
 10548                           
 10549                           ;battery_charger.c: 99: {
 10550                           ;battery_charger.c: 100: cc_cv-=1;
 10551  09CC  3001               	movlw	1
 10552  09CD  02C2               	subwf	_cc_cv^(0+128),f
 10553                           
 10554                           ;battery_charger.c: 101: }
 10555  09CE  29EB               	goto	l133
 10556  09CF                     l2849:	
 10557                           
 10558                           ;battery_charger.c: 102: else
 10559                           ;battery_charger.c: 103: {
 10560                           ;battery_charger.c: 104: if(Imode0)
 10561  09CF  0020               	movlb	0	; select bank0
 10562  09D0  086E               	movf	_Imode0,w
 10563  09D1  1903               	btfsc	3,2
 10564  09D2  29EB               	goto	l133
 10565                           
 10566                           ;battery_charger.c: 105: {
 10567                           ;battery_charger.c: 106: Imode0 = 0;
 10568  09D3  01EE               	clrf	_Imode0
 10569                           
 10570                           ;battery_charger.c: 107: }
 10571                           ;battery_charger.c: 108: }
 10572                           ;battery_charger.c: 109: }
 10573  09D4  29EB               	goto	l133
 10574  09D5                     l2853:	
 10575                           
 10576                           ;battery_charger.c: 110: else
 10577                           ;battery_charger.c: 111: {
 10578                           ;battery_charger.c: 112: VHoldMode-=1;
 10579  09D5  30FF               	movlw	255
 10580  09D6  00F0               	movwf	??_cc_cv_mode
 10581  09D7  0870               	movf	??_cc_cv_mode,w
 10582  09D8  0021               	movlb	1	; select bank1
 10583  09D9  07C1               	addwf	_VHoldMode^(0+128),f
 10584                           
 10585                           ;battery_charger.c: 113: if(VHoldMode<(10*-1))
 10586  09DA  0841               	movf	_VHoldMode^(0+128),w
 10587  09DB  3A80               	xorlw	128
 10588  09DC  3E8A               	addlw	138
 10589  09DD  1803               	skipnc
 10590  09DE  29EB               	goto	l133
 10591                           
 10592                           ;battery_charger.c: 114: {
 10593                           ;battery_charger.c: 115: Imode0 = 1;
 10594  09DF  0020               	movlb	0	; select bank0
 10595  09E0  01EE               	clrf	_Imode0
 10596  09E1  0AEE               	incf	_Imode0,f
 10597                           
 10598                           ;battery_charger.c: 116: cc_cv = 10;
 10599  09E2  300A               	movlw	10
 10600  09E3  00F0               	movwf	??_cc_cv_mode
 10601  09E4  0870               	movf	??_cc_cv_mode,w
 10602  09E5  0021               	movlb	1	; select bank1
 10603  09E6  00C2               	movwf	_cc_cv^(0+128)
 10604                           
 10605                           ;battery_charger.c: 117: VHoldMode=(10*-1);
 10606  09E7  30F6               	movlw	246
 10607  09E8  00F0               	movwf	??_cc_cv_mode
 10608  09E9  0870               	movf	??_cc_cv_mode,w
 10609  09EA  00C1               	movwf	_VHoldMode^(0+128)
 10610  09EB                     l133:	
 10611                           
 10612                           ;battery_charger.c: 118: }
 10613                           ;battery_charger.c: 119: }
 10614                           ;battery_charger.c: 121: if(current[1] > Iref)
 10615  09EB  0021               	movlb	1	; select bank1
 10616  09EC  0869               	movf	(_Iref+1)^(0+128),w
 10617  09ED  3A80               	xorlw	128
 10618  09EE  00F0               	movwf	??_cc_cv_mode
 10619  09EF  082B               	movf	((_current+1)^(0+128)+2),w
 10620  09F0  3A80               	xorlw	128
 10621  09F1  0270               	subwf	??_cc_cv_mode,w
 10622  09F2  1D03               	skipz
 10623  09F3  29F6               	goto	u3235
 10624  09F4  082A               	movf	(_current^(0+128)+2),w
 10625  09F5  0268               	subwf	_Iref^(0+128),w
 10626  09F6                     u3235:	
 10627  09F6  1803               	skipnc
 10628  09F7  0008               	return
 10629                           
 10630                           ;battery_charger.c: 122: {
 10631                           ;battery_charger.c: 123: if(!Imode0)
 10632  09F8  0020               	movlb	0	; select bank0
 10633  09F9  086E               	movf	_Imode0,w
 10634  09FA  1D03               	btfss	3,2
 10635  09FB  0008               	return
 10636                           
 10637                           ;battery_charger.c: 124: {
 10638                           ;battery_charger.c: 125: if(battery_state == FLOAT)
 10639  09FC  3005               	movlw	5
 10640  09FD  0021               	movlb	1	; select bank1
 10641  09FE  066E               	xorwf	_battery_state^(0+128),w
 10642  09FF  1D03               	btfss	3,2
 10643  0A00  0008               	return
 10644                           
 10645                           ;battery_charger.c: 126: {
 10646                           ;battery_charger.c: 127: battery_state=CHARGE;
 10647  0A01  3004               	movlw	4
 10648  0A02  00F0               	movwf	??_cc_cv_mode
 10649  0A03  0870               	movf	??_cc_cv_mode,w
 10650  0A04  00EE               	movwf	_battery_state^(0+128)
 10651                           
 10652                           ;battery_charger.c: 128: { Vref = 1445; };
 10653  0A05  30A5               	movlw	165
 10654  0A06  00E6               	movwf	_Vref^(0+128)
 10655  0A07  3005               	movlw	5
 10656  0A08  00E7               	movwf	(_Vref^(0+128)+1)
 10657                           
 10658                           ;battery_charger.c: 129: { Iref = 35; };
 10659  0A09  3023               	movlw	35
 10660  0A0A  00E8               	movwf	_Iref^(0+128)
 10661  0A0B  3000               	movlw	0
 10662  0A0C  00E9               	movwf	(_Iref^(0+128)+1)
 10663                           
 10664                           ;battery_charger.c: 130: Imode0 = 1;
 10665  0A0D  0020               	movlb	0	; select bank0
 10666  0A0E  01EE               	clrf	_Imode0
 10667  0A0F  0AEE               	incf	_Imode0,f
 10668                           
 10669                           ;battery_charger.c: 131: cc_cv = 10;
 10670  0A10  300A               	movlw	10
 10671  0A11  00F0               	movwf	??_cc_cv_mode
 10672  0A12  0870               	movf	??_cc_cv_mode,w
 10673  0A13  0021               	movlb	1	; select bank1
 10674  0A14  00C2               	movwf	_cc_cv^(0+128)
 10675  0A15  0008               	return
 10676  0A16                     __end_of_cc_cv_mode:	
 10677                           
 10678                           	psect	text14
 10679  16B2                     __ptext14:	
 10680 ;; *************** function _calculateCurrent1 *****************
 10681 ;; Defined at:
 10682 ;;		line 306 in file "main.c"
 10683 ;; Parameters:    Size  Location     Type
 10684 ;;		None
 10685 ;; Auto vars:     Size  Location     Type
 10686 ;;		None
 10687 ;; Return value:  Size  Location     Type
 10688 ;;                  1    wreg      void 
 10689 ;; Registers used:
 10690 ;;		wreg, status,2, status,0, pclath, cstack
 10691 ;; Tracked objects:
 10692 ;;		On entry : 0/0
 10693 ;;		On exit  : 0/0
 10694 ;;		Unchanged: 0/0
 10695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10698 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10699 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10700 ;;Total ram usage:        3 bytes
 10701 ;; Hardware stack levels used:    1
 10702 ;; Hardware stack levels required when called:    2
 10703 ;; This function calls:
 10704 ;;		___awtoft
 10705 ;;		___ftdiv
 10706 ;;		___fttol
 10707 ;; This function is called by:
 10708 ;;		_main
 10709 ;; This function uses a non-reentrant model
 10710 ;;
 10711                           
 10712                           
 10713                           ;psect for function _calculateCurrent1
 10714  16B2                     _calculateCurrent1:	
 10715                           
 10716                           ;main.c: 308: if(Ianalogs[1]-580<=0)
 10717                           
 10718                           ;incstack = 0
 10719                           ; Regs used in _calculateCurrent1: [wreg+status,2+status,0+pclath+cstack]
 10720  16B2  0022               	movlb	2	; select bank2
 10721  16B3  0832               	movf	(_Ianalogs^(0+256)+2),w
 10722  16B4  3EBC               	addlw	188
 10723  16B5  0020               	movlb	0	; select bank0
 10724  16B6  00BE               	movwf	??_calculateCurrent1
 10725  16B7  30FD               	movlw	253
 10726  16B8  0022               	movlb	2	; select bank2
 10727  16B9  3D33               	addwfc	((_Ianalogs+1)^(0+256)+2),w
 10728  16BA  0020               	movlb	0	; select bank0
 10729  16BB  00BF               	movwf	??_calculateCurrent1+1
 10730  16BC  083F               	movf	??_calculateCurrent1+1,w
 10731  16BD  3A80               	xorlw	128
 10732  16BE  00C0               	movwf	??_calculateCurrent1+2
 10733  16BF  3080               	movlw	128
 10734  16C0  0240               	subwf	??_calculateCurrent1+2,w
 10735  16C1  1D03               	skipz
 10736  16C2  2EC5               	goto	u3485
 10737  16C3  3001               	movlw	1
 10738  16C4  023E               	subwf	??_calculateCurrent1,w
 10739  16C5                     u3485:	
 10740  16C5  1803               	skipnc
 10741  16C6  2ECB               	goto	l3007
 10742                           
 10743                           ;main.c: 309: {
 10744                           ;main.c: 310: current[1]=0;
 10745  16C7  0021               	movlb	1	; select bank1
 10746  16C8  01AA               	clrf	(_current^(0+128)+2)
 10747  16C9  01AB               	clrf	((_current+1)^(0+128)+2)
 10748                           
 10749                           ;main.c: 311: }
 10750  16CA  0008               	return
 10751  16CB                     l3007:	
 10752                           
 10753                           ;main.c: 312: else
 10754                           ;main.c: 313: {
 10755                           ;main.c: 314: current[1]=(int16_t)((Ianalogs[1]-580)/3.2323);
 10756  16CB  0022               	movlb	2	; select bank2
 10757  16CC  0832               	movf	(_Ianalogs^(0+256)+2),w
 10758  16CD  3EBC               	addlw	188
 10759  16CE  00F8               	movwf	___awtoft@c
 10760  16CF  30FD               	movlw	253
 10761  16D0  3D33               	addwfc	((_Ianalogs+1)^(0+256)+2),w
 10762  16D1  00F9               	movwf	___awtoft@c+1
 10763  16D2  3194  24BA  3196   	fcall	___awtoft
 10764  16D5  0878               	movf	?___awtoft,w
 10765  16D6  0020               	movlb	0	; select bank0
 10766  16D7  00A3               	movwf	___ftdiv@f1
 10767  16D8  0879               	movf	?___awtoft+1,w
 10768  16D9  00A4               	movwf	___ftdiv@f1+1
 10769  16DA  087A               	movf	?___awtoft+2,w
 10770  16DB  00A5               	movwf	___ftdiv@f1+2
 10771  16DC  30DE               	movlw	222
 10772  16DD  00A0               	movwf	___ftdiv@f2
 10773  16DE  304E               	movlw	78
 10774  16DF  00A1               	movwf	___ftdiv@f2+1
 10775  16E0  3040               	movlw	64
 10776  16E1  00A2               	movwf	___ftdiv@f2+2
 10777  16E2  318C  2444  3196   	fcall	___ftdiv
 10778  16E5  0020               	movlb	0	; select bank0
 10779  16E6  0820               	movf	?___ftdiv,w
 10780  16E7  00B0               	movwf	___fttol@f1
 10781  16E8  0821               	movf	?___ftdiv+1,w
 10782  16E9  00B1               	movwf	___fttol@f1+1
 10783  16EA  0822               	movf	?___ftdiv+2,w
 10784  16EB  00B2               	movwf	___fttol@f1+2
 10785  16EC  318A  2298         	fcall	___fttol
 10786  16EE  0020               	movlb	0	; select bank0
 10787  16EF  0831               	movf	?___fttol+1,w
 10788  16F0  0021               	movlb	1	; select bank1
 10789  16F1  00AB               	movwf	((_current+1)^(0+128)+2)
 10790  16F2  0020               	movlb	0	; select bank0
 10791  16F3  0830               	movf	?___fttol,w
 10792  16F4  0021               	movlb	1	; select bank1
 10793  16F5  00AA               	movwf	(_current^(0+128)+2)
 10794  16F6  0008               	return
 10795  16F7                     __end_of_calculateCurrent1:	
 10796                           
 10797                           	psect	text15
 10798  166D                     __ptext15:	
 10799 ;; *************** function _calculateCurrent0 *****************
 10800 ;; Defined at:
 10801 ;;		line 294 in file "main.c"
 10802 ;; Parameters:    Size  Location     Type
 10803 ;;		None
 10804 ;; Auto vars:     Size  Location     Type
 10805 ;;		None
 10806 ;; Return value:  Size  Location     Type
 10807 ;;                  1    wreg      void 
 10808 ;; Registers used:
 10809 ;;		wreg, status,2, status,0, pclath, cstack
 10810 ;; Tracked objects:
 10811 ;;		On entry : 0/0
 10812 ;;		On exit  : 0/0
 10813 ;;		Unchanged: 0/0
 10814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10817 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10818 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10819 ;;Total ram usage:        3 bytes
 10820 ;; Hardware stack levels used:    1
 10821 ;; Hardware stack levels required when called:    2
 10822 ;; This function calls:
 10823 ;;		___awtoft
 10824 ;;		___ftdiv
 10825 ;;		___fttol
 10826 ;; This function is called by:
 10827 ;;		_main
 10828 ;; This function uses a non-reentrant model
 10829 ;;
 10830                           
 10831                           
 10832                           ;psect for function _calculateCurrent0
 10833  166D                     _calculateCurrent0:	
 10834                           
 10835                           ;main.c: 296: if(Ianalogs[0]-568<=0)
 10836                           
 10837                           ;incstack = 0
 10838                           ; Regs used in _calculateCurrent0: [wreg+status,2+status,0+pclath+cstack]
 10839  166D  0022               	movlb	2	; select bank2
 10840  166E  0830               	movf	_Ianalogs^(0+256),w
 10841  166F  3EC8               	addlw	200
 10842  1670  0020               	movlb	0	; select bank0
 10843  1671  00BE               	movwf	??_calculateCurrent0
 10844  1672  30FD               	movlw	253
 10845  1673  0022               	movlb	2	; select bank2
 10846  1674  3D31               	addwfc	(_Ianalogs+1)^(0+256),w
 10847  1675  0020               	movlb	0	; select bank0
 10848  1676  00BF               	movwf	??_calculateCurrent0+1
 10849  1677  083F               	movf	??_calculateCurrent0+1,w
 10850  1678  3A80               	xorlw	128
 10851  1679  00C0               	movwf	??_calculateCurrent0+2
 10852  167A  3080               	movlw	128
 10853  167B  0240               	subwf	??_calculateCurrent0+2,w
 10854  167C  1D03               	skipz
 10855  167D  2E80               	goto	u3475
 10856  167E  3001               	movlw	1
 10857  167F  023E               	subwf	??_calculateCurrent0,w
 10858  1680                     u3475:	
 10859  1680  1803               	skipnc
 10860  1681  2E86               	goto	l3001
 10861                           
 10862                           ;main.c: 297: {
 10863                           ;main.c: 298: current[0]=0;
 10864  1682  0021               	movlb	1	; select bank1
 10865  1683  01A8               	clrf	_current^(0+128)
 10866  1684  01A9               	clrf	(_current+1)^(0+128)
 10867                           
 10868                           ;main.c: 299: }
 10869  1685  0008               	return
 10870  1686                     l3001:	
 10871                           
 10872                           ;main.c: 300: else
 10873                           ;main.c: 301: {
 10874                           ;main.c: 302: current[0]=(int16_t)((Ianalogs[0]-568)/1.3165);
 10875  1686  0022               	movlb	2	; select bank2
 10876  1687  0830               	movf	_Ianalogs^(0+256),w
 10877  1688  3EC8               	addlw	200
 10878  1689  00F8               	movwf	___awtoft@c
 10879  168A  30FD               	movlw	253
 10880  168B  3D31               	addwfc	(_Ianalogs+1)^(0+256),w
 10881  168C  00F9               	movwf	___awtoft@c+1
 10882  168D  3194  24BA  3196   	fcall	___awtoft
 10883  1690  0878               	movf	?___awtoft,w
 10884  1691  0020               	movlb	0	; select bank0
 10885  1692  00A3               	movwf	___ftdiv@f1
 10886  1693  0879               	movf	?___awtoft+1,w
 10887  1694  00A4               	movwf	___ftdiv@f1+1
 10888  1695  087A               	movf	?___awtoft+2,w
 10889  1696  00A5               	movwf	___ftdiv@f1+2
 10890  1697  3083               	movlw	131
 10891  1698  00A0               	movwf	___ftdiv@f2
 10892  1699  30A8               	movlw	168
 10893  169A  00A1               	movwf	___ftdiv@f2+1
 10894  169B  303F               	movlw	63
 10895  169C  00A2               	movwf	___ftdiv@f2+2
 10896  169D  318C  2444  3196   	fcall	___ftdiv
 10897  16A0  0020               	movlb	0	; select bank0
 10898  16A1  0820               	movf	?___ftdiv,w
 10899  16A2  00B0               	movwf	___fttol@f1
 10900  16A3  0821               	movf	?___ftdiv+1,w
 10901  16A4  00B1               	movwf	___fttol@f1+1
 10902  16A5  0822               	movf	?___ftdiv+2,w
 10903  16A6  00B2               	movwf	___fttol@f1+2
 10904  16A7  318A  2298         	fcall	___fttol
 10905  16A9  0020               	movlb	0	; select bank0
 10906  16AA  0831               	movf	?___fttol+1,w
 10907  16AB  0021               	movlb	1	; select bank1
 10908  16AC  00A9               	movwf	(_current+1)^(0+128)
 10909  16AD  0020               	movlb	0	; select bank0
 10910  16AE  0830               	movf	?___fttol,w
 10911  16AF  0021               	movlb	1	; select bank1
 10912  16B0  00A8               	movwf	_current^(0+128)
 10913  16B1  0008               	return
 10914  16B2                     __end_of_calculateCurrent0:	
 10915                           
 10916                           	psect	text16
 10917  0A98                     __ptext16:	
 10918 ;; *************** function ___fttol *****************
 10919 ;; Defined at:
 10920 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
 10921 ;; Parameters:    Size  Location     Type
 10922 ;;  f1              3   16[BANK0 ] float 
 10923 ;; Auto vars:     Size  Location     Type
 10924 ;;  lval            4   25[BANK0 ] unsigned long 
 10925 ;;  exp1            1   29[BANK0 ] unsigned char 
 10926 ;;  sign1           1   24[BANK0 ] unsigned char 
 10927 ;; Return value:  Size  Location     Type
 10928 ;;                  4   16[BANK0 ] long 
 10929 ;; Registers used:
 10930 ;;		wreg, status,2, status,0
 10931 ;; Tracked objects:
 10932 ;;		On entry : 0/0
 10933 ;;		On exit  : 0/0
 10934 ;;		Unchanged: 0/0
 10935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10936 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10937 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10938 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10939 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10940 ;;Total ram usage:       14 bytes
 10941 ;; Hardware stack levels used:    1
 10942 ;; This function calls:
 10943 ;;		Nothing
 10944 ;; This function is called by:
 10945 ;;		_tempCalc
 10946 ;;		_main
 10947 ;;		_calculateCurrent0
 10948 ;;		_calculateCurrent1
 10949 ;; This function uses a non-reentrant model
 10950 ;;
 10951                           
 10952                           
 10953                           ;psect for function ___fttol
 10954  0A98                     ___fttol:	
 10955                           
 10956                           ;incstack = 0
 10957                           ; Regs used in ___fttol: [wreg+status,2+status,0]
 10958  0A98  0020               	movlb	0	; select bank0
 10959  0A99  0830               	movf	___fttol@f1,w
 10960  0A9A  00B4               	movwf	??___fttol
 10961  0A9B  0831               	movf	___fttol@f1+1,w
 10962  0A9C  00B5               	movwf	??___fttol+1
 10963  0A9D  0832               	movf	___fttol@f1+2,w
 10964  0A9E  00B6               	movwf	??___fttol+2
 10965  0A9F  1003               	clrc
 10966  0AA0  0D35               	rlf	??___fttol+1,w
 10967  0AA1  0D36               	rlf	??___fttol+2,w
 10968  0AA2  00B7               	movwf	??___fttol+3
 10969  0AA3  0837               	movf	??___fttol+3,w
 10970  0AA4  00BD               	movwf	___fttol@exp1
 10971  0AA5  083D               	movf	___fttol@exp1,w
 10972  0AA6  1D03               	btfss	3,2
 10973  0AA7  2AB1               	goto	l2723
 10974  0AA8  3000               	movlw	0
 10975  0AA9  00B3               	movwf	?___fttol+3
 10976  0AAA  3000               	movlw	0
 10977  0AAB  00B2               	movwf	?___fttol+2
 10978  0AAC  3000               	movlw	0
 10979  0AAD  00B1               	movwf	?___fttol+1
 10980  0AAE  3000               	movlw	0
 10981  0AAF  00B0               	movwf	?___fttol
 10982  0AB0  0008               	return
 10983  0AB1                     l2723:	
 10984  0AB1  0830               	movf	___fttol@f1,w
 10985  0AB2  00B4               	movwf	??___fttol
 10986  0AB3  0831               	movf	___fttol@f1+1,w
 10987  0AB4  00B5               	movwf	??___fttol+1
 10988  0AB5  0832               	movf	___fttol@f1+2,w
 10989  0AB6  00B6               	movwf	??___fttol+2
 10990  0AB7  3017               	movlw	23
 10991  0AB8                     u2865:	
 10992  0AB8  36B6               	lsrf	??___fttol+2,f
 10993  0AB9  0CB5               	rrf	??___fttol+1,f
 10994  0ABA  0CB4               	rrf	??___fttol,f
 10995  0ABB  0B89               	decfsz	9,f
 10996  0ABC  2AB8               	goto	u2865
 10997  0ABD  0834               	movf	??___fttol,w
 10998  0ABE  00B7               	movwf	??___fttol+3
 10999  0ABF  0837               	movf	??___fttol+3,w
 11000  0AC0  00B8               	movwf	___fttol@sign1
 11001  0AC1  17B1               	bsf	___fttol@f1+1,7
 11002  0AC2  30FF               	movlw	255
 11003  0AC3  05B0               	andwf	___fttol@f1,f
 11004  0AC4  30FF               	movlw	255
 11005  0AC5  05B1               	andwf	___fttol@f1+1,f
 11006  0AC6  3000               	movlw	0
 11007  0AC7  05B2               	andwf	___fttol@f1+2,f
 11008  0AC8  0830               	movf	___fttol@f1,w
 11009  0AC9  00B9               	movwf	___fttol@lval
 11010  0ACA  0831               	movf	___fttol@f1+1,w
 11011  0ACB  00BA               	movwf	___fttol@lval+1
 11012  0ACC  0832               	movf	___fttol@f1+2,w
 11013  0ACD  00BB               	movwf	___fttol@lval+2
 11014  0ACE  01BC               	clrf	___fttol@lval+3
 11015  0ACF  308E               	movlw	142
 11016  0AD0  02BD               	subwf	___fttol@exp1,f
 11017  0AD1  1FBD               	btfss	___fttol@exp1,7
 11018  0AD2  2AEF               	goto	l2743
 11019  0AD3  083D               	movf	___fttol@exp1,w
 11020  0AD4  3A80               	xorlw	128
 11021  0AD5  3E8F               	addlw	143
 11022  0AD6  1803               	skipnc
 11023  0AD7  2AE1               	goto	l2741
 11024  0AD8  3000               	movlw	0
 11025  0AD9  00B3               	movwf	?___fttol+3
 11026  0ADA  3000               	movlw	0
 11027  0ADB  00B2               	movwf	?___fttol+2
 11028  0ADC  3000               	movlw	0
 11029  0ADD  00B1               	movwf	?___fttol+1
 11030  0ADE  3000               	movlw	0
 11031  0ADF  00B0               	movwf	?___fttol
 11032  0AE0  0008               	return
 11033  0AE1                     l2741:	
 11034  0AE1  3001               	movlw	1
 11035  0AE2                     u2895:	
 11036  0AE2  36BC               	lsrf	___fttol@lval+3,f
 11037  0AE3  0CBB               	rrf	___fttol@lval+2,f
 11038  0AE4  0CBA               	rrf	___fttol@lval+1,f
 11039  0AE5  0CB9               	rrf	___fttol@lval,f
 11040  0AE6  0B89               	decfsz	9,f
 11041  0AE7  2AE2               	goto	u2895
 11042  0AE8  3001               	movlw	1
 11043  0AE9  00B4               	movwf	??___fttol
 11044  0AEA  0834               	movf	??___fttol,w
 11045  0AEB  07BD               	addwf	___fttol@exp1,f
 11046  0AEC  1903               	btfsc	3,2
 11047  0AED  2B08               	goto	l2751
 11048  0AEE  2AE1               	goto	l2741
 11049  0AEF                     l2743:	
 11050  0AEF  3018               	movlw	24
 11051  0AF0  023D               	subwf	___fttol@exp1,w
 11052  0AF1  1C03               	skipc
 11053  0AF2  2B05               	goto	l821
 11054  0AF3  3000               	movlw	0
 11055  0AF4  00B3               	movwf	?___fttol+3
 11056  0AF5  3000               	movlw	0
 11057  0AF6  00B2               	movwf	?___fttol+2
 11058  0AF7  3000               	movlw	0
 11059  0AF8  00B1               	movwf	?___fttol+1
 11060  0AF9  3000               	movlw	0
 11061  0AFA  00B0               	movwf	?___fttol
 11062  0AFB  0008               	return
 11063  0AFC                     l2749:	
 11064  0AFC  3001               	movlw	1
 11065  0AFD                     u2925:	
 11066  0AFD  35B9               	lslf	___fttol@lval,f
 11067  0AFE  0DBA               	rlf	___fttol@lval+1,f
 11068  0AFF  0DBB               	rlf	___fttol@lval+2,f
 11069  0B00  0DBC               	rlf	___fttol@lval+3,f
 11070  0B01  0B89               	decfsz	9,f
 11071  0B02  2AFD               	goto	u2925
 11072  0B03  3001               	movlw	1
 11073  0B04  02BD               	subwf	___fttol@exp1,f
 11074  0B05                     l821:	
 11075  0B05  083D               	movf	___fttol@exp1,w
 11076  0B06  1D03               	btfss	3,2
 11077  0B07  2AFC               	goto	l2749
 11078  0B08                     l2751:	
 11079  0B08  0838               	movf	___fttol@sign1,w
 11080  0B09  1903               	btfsc	3,2
 11081  0B0A  2B16               	goto	l2755
 11082  0B0B  09B9               	comf	___fttol@lval,f
 11083  0B0C  09BA               	comf	___fttol@lval+1,f
 11084  0B0D  09BB               	comf	___fttol@lval+2,f
 11085  0B0E  09BC               	comf	___fttol@lval+3,f
 11086  0B0F  0AB9               	incf	___fttol@lval,f
 11087  0B10  1903               	skipnz
 11088  0B11  0ABA               	incf	___fttol@lval+1,f
 11089  0B12  1903               	skipnz
 11090  0B13  0ABB               	incf	___fttol@lval+2,f
 11091  0B14  1903               	skipnz
 11092  0B15  0ABC               	incf	___fttol@lval+3,f
 11093  0B16                     l2755:	
 11094  0B16  083C               	movf	___fttol@lval+3,w
 11095  0B17  00B3               	movwf	?___fttol+3
 11096  0B18  083B               	movf	___fttol@lval+2,w
 11097  0B19  00B2               	movwf	?___fttol+2
 11098  0B1A  083A               	movf	___fttol@lval+1,w
 11099  0B1B  00B1               	movwf	?___fttol+1
 11100  0B1C  0839               	movf	___fttol@lval,w
 11101  0B1D  00B0               	movwf	?___fttol
 11102  0B1E  0008               	return
 11103  0B1F                     __end_of___fttol:	
 11104                           
 11105                           	psect	text17
 11106  0C44                     __ptext17:	
 11107 ;; *************** function ___ftdiv *****************
 11108 ;; Defined at:
 11109 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
 11110 ;; Parameters:    Size  Location     Type
 11111 ;;  f2              3    0[BANK0 ] float 
 11112 ;;  f1              3    3[BANK0 ] float 
 11113 ;; Auto vars:     Size  Location     Type
 11114 ;;  f3              3   11[BANK0 ] float 
 11115 ;;  sign            1   15[BANK0 ] unsigned char 
 11116 ;;  exp             1   14[BANK0 ] unsigned char 
 11117 ;;  cntr            1   10[BANK0 ] unsigned char 
 11118 ;; Return value:  Size  Location     Type
 11119 ;;                  3    0[BANK0 ] float 
 11120 ;; Registers used:
 11121 ;;		wreg, status,2, status,0, pclath, cstack
 11122 ;; Tracked objects:
 11123 ;;		On entry : 0/0
 11124 ;;		On exit  : 0/0
 11125 ;;		Unchanged: 0/0
 11126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11127 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11128 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11129 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11130 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11131 ;;Total ram usage:       16 bytes
 11132 ;; Hardware stack levels used:    1
 11133 ;; Hardware stack levels required when called:    1
 11134 ;; This function calls:
 11135 ;;		___ftpack
 11136 ;; This function is called by:
 11137 ;;		_tempCalc
 11138 ;;		_main
 11139 ;;		_calculateCurrent0
 11140 ;;		_calculateCurrent1
 11141 ;; This function uses a non-reentrant model
 11142 ;;
 11143                           
 11144                           
 11145                           ;psect for function ___ftdiv
 11146  0C44                     ___ftdiv:	
 11147                           
 11148                           ;incstack = 0
 11149                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
 11150  0C44  0020               	movlb	0	; select bank0
 11151  0C45  0823               	movf	___ftdiv@f1,w
 11152  0C46  00A6               	movwf	??___ftdiv
 11153  0C47  0824               	movf	___ftdiv@f1+1,w
 11154  0C48  00A7               	movwf	??___ftdiv+1
 11155  0C49  0825               	movf	___ftdiv@f1+2,w
 11156  0C4A  00A8               	movwf	??___ftdiv+2
 11157  0C4B  1003               	clrc
 11158  0C4C  0D27               	rlf	??___ftdiv+1,w
 11159  0C4D  0D28               	rlf	??___ftdiv+2,w
 11160  0C4E  00A9               	movwf	??___ftdiv+3
 11161  0C4F  0829               	movf	??___ftdiv+3,w
 11162  0C50  00AE               	movwf	___ftdiv@exp
 11163  0C51  082E               	movf	___ftdiv@exp,w
 11164  0C52  1D03               	btfss	3,2
 11165  0C53  2C5B               	goto	l2673
 11166  0C54  3000               	movlw	0
 11167  0C55  00A0               	movwf	?___ftdiv
 11168  0C56  3000               	movlw	0
 11169  0C57  00A1               	movwf	?___ftdiv+1
 11170  0C58  3000               	movlw	0
 11171  0C59  00A2               	movwf	?___ftdiv+2
 11172  0C5A  0008               	return
 11173  0C5B                     l2673:	
 11174  0C5B  0820               	movf	___ftdiv@f2,w
 11175  0C5C  00A6               	movwf	??___ftdiv
 11176  0C5D  0821               	movf	___ftdiv@f2+1,w
 11177  0C5E  00A7               	movwf	??___ftdiv+1
 11178  0C5F  0822               	movf	___ftdiv@f2+2,w
 11179  0C60  00A8               	movwf	??___ftdiv+2
 11180  0C61  1003               	clrc
 11181  0C62  0D27               	rlf	??___ftdiv+1,w
 11182  0C63  0D28               	rlf	??___ftdiv+2,w
 11183  0C64  00A9               	movwf	??___ftdiv+3
 11184  0C65  0829               	movf	??___ftdiv+3,w
 11185  0C66  00AF               	movwf	___ftdiv@sign
 11186  0C67  082F               	movf	___ftdiv@sign,w
 11187  0C68  1D03               	btfss	3,2
 11188  0C69  2C71               	goto	l2679
 11189  0C6A  3000               	movlw	0
 11190  0C6B  00A0               	movwf	?___ftdiv
 11191  0C6C  3000               	movlw	0
 11192  0C6D  00A1               	movwf	?___ftdiv+1
 11193  0C6E  3000               	movlw	0
 11194  0C6F  00A2               	movwf	?___ftdiv+2
 11195  0C70  0008               	return
 11196  0C71                     l2679:	
 11197  0C71  3000               	movlw	0
 11198  0C72  00AB               	movwf	___ftdiv@f3
 11199  0C73  3000               	movlw	0
 11200  0C74  00AC               	movwf	___ftdiv@f3+1
 11201  0C75  3000               	movlw	0
 11202  0C76  00AD               	movwf	___ftdiv@f3+2
 11203  0C77  3089               	movlw	137
 11204  0C78  072F               	addwf	___ftdiv@sign,w
 11205  0C79  00A6               	movwf	??___ftdiv
 11206  0C7A  0826               	movf	??___ftdiv,w
 11207  0C7B  02AE               	subwf	___ftdiv@exp,f
 11208  0C7C  0823               	movf	___ftdiv@f1,w
 11209  0C7D  00A6               	movwf	??___ftdiv
 11210  0C7E  0824               	movf	___ftdiv@f1+1,w
 11211  0C7F  00A7               	movwf	??___ftdiv+1
 11212  0C80  0825               	movf	___ftdiv@f1+2,w
 11213  0C81  00A8               	movwf	??___ftdiv+2
 11214  0C82  3010               	movlw	16
 11215  0C83                     u2785:	
 11216  0C83  36A8               	lsrf	??___ftdiv+2,f
 11217  0C84  0CA7               	rrf	??___ftdiv+1,f
 11218  0C85  0CA6               	rrf	??___ftdiv,f
 11219  0C86  0B89               	decfsz	9,f
 11220  0C87  2C83               	goto	u2785
 11221  0C88  0826               	movf	??___ftdiv,w
 11222  0C89  00A9               	movwf	??___ftdiv+3
 11223  0C8A  0829               	movf	??___ftdiv+3,w
 11224  0C8B  00AF               	movwf	___ftdiv@sign
 11225  0C8C  0820               	movf	___ftdiv@f2,w
 11226  0C8D  00A6               	movwf	??___ftdiv
 11227  0C8E  0821               	movf	___ftdiv@f2+1,w
 11228  0C8F  00A7               	movwf	??___ftdiv+1
 11229  0C90  0822               	movf	___ftdiv@f2+2,w
 11230  0C91  00A8               	movwf	??___ftdiv+2
 11231  0C92  3010               	movlw	16
 11232  0C93                     u2795:	
 11233  0C93  36A8               	lsrf	??___ftdiv+2,f
 11234  0C94  0CA7               	rrf	??___ftdiv+1,f
 11235  0C95  0CA6               	rrf	??___ftdiv,f
 11236  0C96  0B89               	decfsz	9,f
 11237  0C97  2C93               	goto	u2795
 11238  0C98  0826               	movf	??___ftdiv,w
 11239  0C99  00A9               	movwf	??___ftdiv+3
 11240  0C9A  0829               	movf	??___ftdiv+3,w
 11241  0C9B  06AF               	xorwf	___ftdiv@sign,f
 11242  0C9C  3080               	movlw	128
 11243  0C9D  00A6               	movwf	??___ftdiv
 11244  0C9E  0826               	movf	??___ftdiv,w
 11245  0C9F  05AF               	andwf	___ftdiv@sign,f
 11246  0CA0  17A4               	bsf	___ftdiv@f1+1,7
 11247  0CA1  30FF               	movlw	255
 11248  0CA2  05A3               	andwf	___ftdiv@f1,f
 11249  0CA3  30FF               	movlw	255
 11250  0CA4  05A4               	andwf	___ftdiv@f1+1,f
 11251  0CA5  3000               	movlw	0
 11252  0CA6  05A5               	andwf	___ftdiv@f1+2,f
 11253  0CA7  17A1               	bsf	___ftdiv@f2+1,7
 11254  0CA8  30FF               	movlw	255
 11255  0CA9  05A0               	andwf	___ftdiv@f2,f
 11256  0CAA  30FF               	movlw	255
 11257  0CAB  05A1               	andwf	___ftdiv@f2+1,f
 11258  0CAC  3000               	movlw	0
 11259  0CAD  05A2               	andwf	___ftdiv@f2+2,f
 11260  0CAE  3018               	movlw	24
 11261  0CAF  00A6               	movwf	??___ftdiv
 11262  0CB0  0826               	movf	??___ftdiv,w
 11263  0CB1  00AA               	movwf	___ftdiv@cntr
 11264  0CB2                     l2693:	
 11265  0CB2  3001               	movlw	1
 11266  0CB3                     u2805:	
 11267  0CB3  35AB               	lslf	___ftdiv@f3,f
 11268  0CB4  0DAC               	rlf	___ftdiv@f3+1,f
 11269  0CB5  0DAD               	rlf	___ftdiv@f3+2,f
 11270  0CB6  0B89               	decfsz	9,f
 11271  0CB7  2CB3               	goto	u2805
 11272  0CB8  0822               	movf	___ftdiv@f2+2,w
 11273  0CB9  0225               	subwf	___ftdiv@f1+2,w
 11274  0CBA  1D03               	skipz
 11275  0CBB  2CC2               	goto	u2815
 11276  0CBC  0821               	movf	___ftdiv@f2+1,w
 11277  0CBD  0224               	subwf	___ftdiv@f1+1,w
 11278  0CBE  1D03               	skipz
 11279  0CBF  2CC2               	goto	u2815
 11280  0CC0  0820               	movf	___ftdiv@f2,w
 11281  0CC1  0223               	subwf	___ftdiv@f1,w
 11282  0CC2                     u2815:	
 11283  0CC2  1C03               	skipc
 11284  0CC3  2CCB               	goto	l2701
 11285  0CC4  0820               	movf	___ftdiv@f2,w
 11286  0CC5  02A3               	subwf	___ftdiv@f1,f
 11287  0CC6  0821               	movf	___ftdiv@f2+1,w
 11288  0CC7  3BA4               	subwfb	___ftdiv@f1+1,f
 11289  0CC8  0822               	movf	___ftdiv@f2+2,w
 11290  0CC9  3BA5               	subwfb	___ftdiv@f1+2,f
 11291  0CCA  142B               	bsf	___ftdiv@f3,0
 11292  0CCB                     l2701:	
 11293  0CCB  3001               	movlw	1
 11294  0CCC                     u2825:	
 11295  0CCC  35A3               	lslf	___ftdiv@f1,f
 11296  0CCD  0DA4               	rlf	___ftdiv@f1+1,f
 11297  0CCE  0DA5               	rlf	___ftdiv@f1+2,f
 11298  0CCF  0B89               	decfsz	9,f
 11299  0CD0  2CCC               	goto	u2825
 11300  0CD1  3001               	movlw	1
 11301  0CD2  02AA               	subwf	___ftdiv@cntr,f
 11302  0CD3  1D03               	btfss	3,2
 11303  0CD4  2CB2               	goto	l2693
 11304  0CD5  082B               	movf	___ftdiv@f3,w
 11305  0CD6  00F0               	movwf	___ftpack@arg
 11306  0CD7  082C               	movf	___ftdiv@f3+1,w
 11307  0CD8  00F1               	movwf	___ftpack@arg+1
 11308  0CD9  082D               	movf	___ftdiv@f3+2,w
 11309  0CDA  00F2               	movwf	___ftpack@arg+2
 11310  0CDB  082E               	movf	___ftdiv@exp,w
 11311  0CDC  00A6               	movwf	??___ftdiv
 11312  0CDD  0826               	movf	??___ftdiv,w
 11313  0CDE  00F3               	movwf	___ftpack@exp
 11314  0CDF  082F               	movf	___ftdiv@sign,w
 11315  0CE0  00A7               	movwf	??___ftdiv+1
 11316  0CE1  0827               	movf	??___ftdiv+1,w
 11317  0CE2  00F4               	movwf	___ftpack@sign
 11318  0CE3  3189  214E         	fcall	___ftpack
 11319  0CE5  0870               	movf	?___ftpack,w
 11320  0CE6  0020               	movlb	0	; select bank0
 11321  0CE7  00A0               	movwf	?___ftdiv
 11322  0CE8  0871               	movf	?___ftpack+1,w
 11323  0CE9  00A1               	movwf	?___ftdiv+1
 11324  0CEA  0872               	movf	?___ftpack+2,w
 11325  0CEB  00A2               	movwf	?___ftdiv+2
 11326  0CEC  0008               	return
 11327  0CED                     __end_of___ftdiv:	
 11328                           
 11329                           	psect	text18
 11330  14BA                     __ptext18:	
 11331 ;; *************** function ___awtoft *****************
 11332 ;; Defined at:
 11333 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
 11334 ;; Parameters:    Size  Location     Type
 11335 ;;  c               2    8[COMMON] int 
 11336 ;; Auto vars:     Size  Location     Type
 11337 ;;  sign            1   13[COMMON] unsigned char 
 11338 ;; Return value:  Size  Location     Type
 11339 ;;                  3    8[COMMON] float 
 11340 ;; Registers used:
 11341 ;;		wreg, status,2, status,0, pclath, cstack
 11342 ;; Tracked objects:
 11343 ;;		On entry : 0/0
 11344 ;;		On exit  : 0/0
 11345 ;;		Unchanged: 0/0
 11346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11347 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11348 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11349 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11350 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11351 ;;Total ram usage:        6 bytes
 11352 ;; Hardware stack levels used:    1
 11353 ;; Hardware stack levels required when called:    1
 11354 ;; This function calls:
 11355 ;;		___ftpack
 11356 ;; This function is called by:
 11357 ;;		_tempCalc
 11358 ;;		_main
 11359 ;;		_calculateCurrent0
 11360 ;;		_calculateCurrent1
 11361 ;;		_log
 11362 ;; This function uses a non-reentrant model
 11363 ;;
 11364                           
 11365                           
 11366                           ;psect for function ___awtoft
 11367  14BA                     ___awtoft:	
 11368                           
 11369                           ;incstack = 0
 11370                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
 11371  14BA  01FD               	clrf	___awtoft@sign
 11372  14BB  1FF9               	btfss	___awtoft@c+1,7
 11373  14BC  2CC4               	goto	l2341
 11374  14BD  09F8               	comf	___awtoft@c,f
 11375  14BE  09F9               	comf	___awtoft@c+1,f
 11376  14BF  0AF8               	incf	___awtoft@c,f
 11377  14C0  1903               	skipnz
 11378  14C1  0AF9               	incf	___awtoft@c+1,f
 11379  14C2  01FD               	clrf	___awtoft@sign
 11380  14C3  0AFD               	incf	___awtoft@sign,f
 11381  14C4                     l2341:	
 11382  14C4  0878               	movf	___awtoft@c,w
 11383  14C5  00F0               	movwf	___ftpack@arg
 11384  14C6  0879               	movf	___awtoft@c+1,w
 11385  14C7  00F1               	movwf	___ftpack@arg+1
 11386  14C8  01F2               	clrf	___ftpack@arg+2
 11387  14C9  308E               	movlw	142
 11388  14CA  00FB               	movwf	??___awtoft
 11389  14CB  087B               	movf	??___awtoft,w
 11390  14CC  00F3               	movwf	___ftpack@exp
 11391  14CD  087D               	movf	___awtoft@sign,w
 11392  14CE  00FC               	movwf	??___awtoft+1
 11393  14CF  087C               	movf	??___awtoft+1,w
 11394  14D0  00F4               	movwf	___ftpack@sign
 11395  14D1  3189  214E         	fcall	___ftpack
 11396  14D3  0870               	movf	?___ftpack,w
 11397  14D4  00F8               	movwf	?___awtoft
 11398  14D5  0871               	movf	?___ftpack+1,w
 11399  14D6  00F9               	movwf	?___awtoft+1
 11400  14D7  0872               	movf	?___ftpack+2,w
 11401  14D8  00FA               	movwf	?___awtoft+2
 11402  14D9  0008               	return
 11403  14DA                     __end_of___awtoft:	
 11404                           
 11405                           	psect	text19
 11406  094E                     __ptext19:	
 11407 ;; *************** function ___ftpack *****************
 11408 ;; Defined at:
 11409 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
 11410 ;; Parameters:    Size  Location     Type
 11411 ;;  arg             3    0[COMMON] unsigned um
 11412 ;;  exp             1    3[COMMON] unsigned char 
 11413 ;;  sign            1    4[COMMON] unsigned char 
 11414 ;; Auto vars:     Size  Location     Type
 11415 ;;		None
 11416 ;; Return value:  Size  Location     Type
 11417 ;;                  3    0[COMMON] float 
 11418 ;; Registers used:
 11419 ;;		wreg, status,2, status,0
 11420 ;; Tracked objects:
 11421 ;;		On entry : 0/0
 11422 ;;		On exit  : 0/0
 11423 ;;		Unchanged: 0/0
 11424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11425 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11427 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11428 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11429 ;;Total ram usage:        8 bytes
 11430 ;; Hardware stack levels used:    1
 11431 ;; This function calls:
 11432 ;;		Nothing
 11433 ;; This function is called by:
 11434 ;;		___awtoft
 11435 ;;		___ftadd
 11436 ;;		___ftdiv
 11437 ;;		___ftmul
 11438 ;; This function uses a non-reentrant model
 11439 ;;
 11440                           
 11441                           
 11442                           ;psect for function ___ftpack
 11443  094E                     ___ftpack:	
 11444                           
 11445                           ;incstack = 0
 11446                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
 11447  094E  0873               	movf	___ftpack@exp,w
 11448  094F  1903               	btfsc	3,2
 11449  0950  2956               	goto	l2135
 11450  0951  0872               	movf	___ftpack@arg+2,w
 11451  0952  0471               	iorwf	___ftpack@arg+1,w
 11452  0953  0470               	iorwf	___ftpack@arg,w
 11453  0954  1D03               	skipz
 11454  0955  2967               	goto	l2141
 11455  0956                     l2135:	
 11456  0956  3000               	movlw	0
 11457  0957  00F0               	movwf	?___ftpack
 11458  0958  3000               	movlw	0
 11459  0959  00F1               	movwf	?___ftpack+1
 11460  095A  3000               	movlw	0
 11461  095B  00F2               	movwf	?___ftpack+2
 11462  095C  0008               	return
 11463  095D                     l2139:	
 11464  095D  3001               	movlw	1
 11465  095E  00F5               	movwf	??___ftpack
 11466  095F  0875               	movf	??___ftpack,w
 11467  0960  07F3               	addwf	___ftpack@exp,f
 11468  0961  3001               	movlw	1
 11469  0962                     u1885:	
 11470  0962  36F2               	lsrf	___ftpack@arg+2,f
 11471  0963  0CF1               	rrf	___ftpack@arg+1,f
 11472  0964  0CF0               	rrf	___ftpack@arg,f
 11473  0965  0B89               	decfsz	9,f
 11474  0966  2962               	goto	u1885
 11475  0967                     l2141:	
 11476  0967  30FE               	movlw	254
 11477  0968  0572               	andwf	___ftpack@arg+2,w
 11478  0969  1903               	btfsc	3,2
 11479  096A  2980               	goto	l730
 11480  096B  295D               	goto	l2139
 11481  096C                     l2143:	
 11482  096C  3001               	movlw	1
 11483  096D  00F5               	movwf	??___ftpack
 11484  096E  0875               	movf	??___ftpack,w
 11485  096F  07F3               	addwf	___ftpack@exp,f
 11486  0970  3001               	movlw	1
 11487  0971  07F0               	addwf	___ftpack@arg,f
 11488  0972  3000               	movlw	0
 11489  0973  1803               	skipnc
 11490  0974  3001               	movlw	1
 11491  0975  07F1               	addwf	___ftpack@arg+1,f
 11492  0976  3000               	movlw	0
 11493  0977  1803               	skipnc
 11494  0978  3001               	movlw	1
 11495  0979  07F2               	addwf	___ftpack@arg+2,f
 11496  097A  3001               	movlw	1
 11497  097B                     u1905:	
 11498  097B  36F2               	lsrf	___ftpack@arg+2,f
 11499  097C  0CF1               	rrf	___ftpack@arg+1,f
 11500  097D  0CF0               	rrf	___ftpack@arg,f
 11501  097E  0B89               	decfsz	9,f
 11502  097F  297B               	goto	u1905
 11503  0980                     l730:	
 11504  0980  30FF               	movlw	255
 11505  0981  0572               	andwf	___ftpack@arg+2,w
 11506  0982  1903               	btfsc	3,2
 11507  0983  298D               	goto	l2151
 11508  0984  296C               	goto	l2143
 11509  0985                     l2149:	
 11510  0985  3001               	movlw	1
 11511  0986  02F3               	subwf	___ftpack@exp,f
 11512  0987  3001               	movlw	1
 11513  0988                     u1925:	
 11514  0988  35F0               	lslf	___ftpack@arg,f
 11515  0989  0DF1               	rlf	___ftpack@arg+1,f
 11516  098A  0DF2               	rlf	___ftpack@arg+2,f
 11517  098B  0B89               	decfsz	9,f
 11518  098C  2988               	goto	u1925
 11519  098D                     l2151:	
 11520  098D  1BF1               	btfsc	___ftpack@arg+1,7
 11521  098E  2993               	goto	l737
 11522  098F  3002               	movlw	2
 11523  0990  0273               	subwf	___ftpack@exp,w
 11524  0991  1803               	skipnc
 11525  0992  2985               	goto	l2149
 11526  0993                     l737:	
 11527  0993  1873               	btfsc	___ftpack@exp,0
 11528  0994  299B               	goto	l738
 11529  0995  30FF               	movlw	255
 11530  0996  05F0               	andwf	___ftpack@arg,f
 11531  0997  307F               	movlw	127
 11532  0998  05F1               	andwf	___ftpack@arg+1,f
 11533  0999  30FF               	movlw	255
 11534  099A  05F2               	andwf	___ftpack@arg+2,f
 11535  099B                     l738:	
 11536  099B  1003               	clrc
 11537  099C  0CF3               	rrf	___ftpack@exp,f
 11538  099D  0873               	movf	___ftpack@exp,w
 11539  099E  00F5               	movwf	??___ftpack
 11540  099F  01F6               	clrf	??___ftpack+1
 11541  09A0  01F7               	clrf	??___ftpack+2
 11542  09A1  3010               	movlw	16
 11543  09A2                     u1965:	
 11544  09A2  35F5               	lslf	??___ftpack,f
 11545  09A3  0DF6               	rlf	??___ftpack+1,f
 11546  09A4  0DF7               	rlf	??___ftpack+2,f
 11547  09A5  0B89               	decfsz	9,f
 11548  09A6  29A2               	goto	u1965
 11549  09A7  0875               	movf	??___ftpack,w
 11550  09A8  04F0               	iorwf	___ftpack@arg,f
 11551  09A9  0876               	movf	??___ftpack+1,w
 11552  09AA  04F1               	iorwf	___ftpack@arg+1,f
 11553  09AB  0877               	movf	??___ftpack+2,w
 11554  09AC  04F2               	iorwf	___ftpack@arg+2,f
 11555  09AD  0874               	movf	___ftpack@sign,w
 11556  09AE  1903               	btfsc	3,2
 11557  09AF  0008               	return
 11558  09B0  17F2               	bsf	___ftpack@arg+2,7
 11559  09B1  0008               	return
 11560  09B2                     __end_of___ftpack:	
 11561                           
 11562                           	psect	text20
 11563  1551                     __ptext20:	
 11564 ;; *************** function _SYSTEM_Initialize *****************
 11565 ;; Defined at:
 11566 ;;		line 71 in file "system.c"
 11567 ;; Parameters:    Size  Location     Type
 11568 ;;		None
 11569 ;; Auto vars:     Size  Location     Type
 11570 ;;		None
 11571 ;; Return value:  Size  Location     Type
 11572 ;;                  1    wreg      void 
 11573 ;; Registers used:
 11574 ;;		wreg, status,2, status,0, pclath, cstack
 11575 ;; Tracked objects:
 11576 ;;		On entry : 0/0
 11577 ;;		On exit  : 0/0
 11578 ;;		Unchanged: 0/0
 11579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11582 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11583 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11584 ;;Total ram usage:        2 bytes
 11585 ;; Hardware stack levels used:    1
 11586 ;; Hardware stack levels required when called:    3
 11587 ;; This function calls:
 11588 ;;		_ADC_Initialize
 11589 ;;		_Init_Battery_State_Machine
 11590 ;;		_LCDClear
 11591 ;;		_LCDInit
 11592 ;;		_OSCILLATOR_Initialize
 11593 ;;		_PIN_MANAGER_Initialize
 11594 ;;		_PWM_Initialize
 11595 ;;		_TMR2_Initialize
 11596 ;;		_TMR4_Initialize
 11597 ;; This function is called by:
 11598 ;;		_main
 11599 ;; This function uses a non-reentrant model
 11600 ;;
 11601                           
 11602                           
 11603                           ;psect for function _SYSTEM_Initialize
 11604  1551                     _SYSTEM_Initialize:	
 11605                           
 11606                           ;system.c: 73: PIN_MANAGER_Initialize();
 11607                           
 11608                           ;incstack = 0
 11609                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 11610  1551  3195  2585  3195   	fcall	_PIN_MANAGER_Initialize
 11611                           
 11612                           ;system.c: 74: OSCILLATOR_Initialize();
 11613  1554  3193  23A8  3195   	fcall	_OSCILLATOR_Initialize
 11614                           
 11615                           ;system.c: 76: ADC_Initialize();
 11616  1557  3194  249B  3195   	fcall	_ADC_Initialize
 11617                           
 11618                           ;system.c: 77: PWM_Initialize();
 11619  155A  3189  212F  3195   	fcall	_PWM_Initialize
 11620                           
 11621                           ;system.c: 79: TMR2_Initialize();
 11622  155D  3193  23BD  3195   	fcall	_TMR2_Initialize
 11623                           
 11624                           ;system.c: 80: TMR4_Initialize();
 11625  1560  3193  23CB  3195   	fcall	_TMR4_Initialize
 11626                           
 11627                           ;system.c: 81: Init_Battery_State_Machine();
 11628  1563  3194  2443  3195   	fcall	_Init_Battery_State_Machine
 11629                           
 11630                           ;system.c: 82: LCDInit();
 11631  1566  3195  25BC  3195   	fcall	_LCDInit
 11632                           
 11633                           ;system.c: 83: _delay((unsigned long)((200)*(32000000/4000.0)));
 11634  1569  3009               	movlw	9
 11635  156A  00FC               	movwf	??_SYSTEM_Initialize+1
 11636  156B  301E               	movlw	30
 11637  156C  00FB               	movwf	??_SYSTEM_Initialize
 11638  156D  30E4               	movlw	228
 11639  156E                     u3737:	
 11640  156E  0B89               	decfsz	9,f
 11641  156F  2D6E               	goto	u3737
 11642  1570  0BFB               	decfsz	??_SYSTEM_Initialize,f
 11643  1571  2D6E               	goto	u3737
 11644  1572  0BFC               	decfsz	??_SYSTEM_Initialize+1,f
 11645  1573  2D6E               	goto	u3737
 11646  1574  3200               	nop2
 11647                           
 11648                           ;system.c: 84: LCDClear();
 11649  1575  3194  24FF  3195   	fcall	_LCDClear
 11650                           
 11651                           ;system.c: 85: _delay((unsigned long)((200)*(32000000/4000.0)));
 11652  1578  3009               	movlw	9
 11653  1579  00FC               	movwf	??_SYSTEM_Initialize+1
 11654  157A  301E               	movlw	30
 11655  157B  00FB               	movwf	??_SYSTEM_Initialize
 11656  157C  30E4               	movlw	228
 11657  157D                     u3747:	
 11658  157D  0B89               	decfsz	9,f
 11659  157E  2D7D               	goto	u3747
 11660  157F  0BFB               	decfsz	??_SYSTEM_Initialize,f
 11661  1580  2D7D               	goto	u3747
 11662  1581  0BFC               	decfsz	??_SYSTEM_Initialize+1,f
 11663  1582  2D7D               	goto	u3747
 11664  1583  3200               	nop2
 11665  1584  0008               	return
 11666  1585                     __end_of_SYSTEM_Initialize:	
 11667                           
 11668                           	psect	text21
 11669  13CB                     __ptext21:	
 11670 ;; *************** function _TMR4_Initialize *****************
 11671 ;; Defined at:
 11672 ;;		line 25 in file "tmr.c"
 11673 ;; Parameters:    Size  Location     Type
 11674 ;;		None
 11675 ;; Auto vars:     Size  Location     Type
 11676 ;;		None
 11677 ;; Return value:  Size  Location     Type
 11678 ;;                  1    wreg      void 
 11679 ;; Registers used:
 11680 ;;		wreg, status,2
 11681 ;; Tracked objects:
 11682 ;;		On entry : 0/0
 11683 ;;		On exit  : 0/0
 11684 ;;		Unchanged: 0/0
 11685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11689 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11690 ;;Total ram usage:        0 bytes
 11691 ;; Hardware stack levels used:    1
 11692 ;; This function calls:
 11693 ;;		Nothing
 11694 ;; This function is called by:
 11695 ;;		_SYSTEM_Initialize
 11696 ;; This function uses a non-reentrant model
 11697 ;;
 11698                           
 11699                           
 11700                           ;psect for function _TMR4_Initialize
 11701  13CB                     _TMR4_Initialize:	
 11702                           
 11703                           ;tmr.c: 27: T4CON = 0x00;
 11704                           
 11705                           ;incstack = 0
 11706                           ; Regs used in _TMR4_Initialize: [wreg+status,2]
 11707  13CB  0025               	movlb	5	; select bank5
 11708  13CC  0194               	clrf	20	;volatile
 11709                           
 11710                           ;tmr.c: 29: T4CLKCON = 0x01;
 11711  13CD  3001               	movlw	1
 11712  13CE  0096               	movwf	22	;volatile
 11713                           
 11714                           ;tmr.c: 31: T4HLT = 0x00;
 11715  13CF  0195               	clrf	21	;volatile
 11716                           
 11717                           ;tmr.c: 33: T4RST = 0x00;
 11718  13D0  0197               	clrf	23	;volatile
 11719                           
 11720                           ;tmr.c: 35: T4PR = 0xFE;
 11721  13D1  30FE               	movlw	254
 11722  13D2  0093               	movwf	19	;volatile
 11723                           
 11724                           ;tmr.c: 39: T4TMR = 0x00;
 11725  13D3  0192               	clrf	18	;volatile
 11726                           
 11727                           ;tmr.c: 41: PIR4bits.TMR4IF = 0;
 11728  13D4  002E               	movlb	14	; select bank14
 11729  13D5  1190               	bcf	16,3	;volatile
 11730                           
 11731                           ;tmr.c: 43: T4CONbits.TMR4ON = 1;
 11732  13D6  0025               	movlb	5	; select bank5
 11733  13D7  1794               	bsf	20,7	;volatile
 11734  13D8  0008               	return
 11735  13D9                     __end_of_TMR4_Initialize:	
 11736                           
 11737                           	psect	text22
 11738  13BD                     __ptext22:	
 11739 ;; *************** function _TMR2_Initialize *****************
 11740 ;; Defined at:
 11741 ;;		line 3 in file "tmr.c"
 11742 ;; Parameters:    Size  Location     Type
 11743 ;;		None
 11744 ;; Auto vars:     Size  Location     Type
 11745 ;;		None
 11746 ;; Return value:  Size  Location     Type
 11747 ;;                  1    wreg      void 
 11748 ;; Registers used:
 11749 ;;		wreg, status,2
 11750 ;; Tracked objects:
 11751 ;;		On entry : 0/0
 11752 ;;		On exit  : 0/0
 11753 ;;		Unchanged: 0/0
 11754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11759 ;;Total ram usage:        0 bytes
 11760 ;; Hardware stack levels used:    1
 11761 ;; This function calls:
 11762 ;;		Nothing
 11763 ;; This function is called by:
 11764 ;;		_SYSTEM_Initialize
 11765 ;; This function uses a non-reentrant model
 11766 ;;
 11767                           
 11768                           
 11769                           ;psect for function _TMR2_Initialize
 11770  13BD                     _TMR2_Initialize:	
 11771                           
 11772                           ;tmr.c: 5: T2CON = 0x00;
 11773                           
 11774                           ;incstack = 0
 11775                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 11776  13BD  0025               	movlb	5	; select bank5
 11777  13BE  018E               	clrf	14	;volatile
 11778                           
 11779                           ;tmr.c: 7: T2CLKCON = 0x01;
 11780  13BF  3001               	movlw	1
 11781  13C0  0090               	movwf	16	;volatile
 11782                           
 11783                           ;tmr.c: 9: T2HLT = 0x00;
 11784  13C1  018F               	clrf	15	;volatile
 11785                           
 11786                           ;tmr.c: 11: T2RST = 0x00;
 11787  13C2  0191               	clrf	17	;volatile
 11788                           
 11789                           ;tmr.c: 13: T2PR = 0xFE;
 11790  13C3  30FE               	movlw	254
 11791  13C4  008D               	movwf	13	;volatile
 11792                           
 11793                           ;tmr.c: 18: T2TMR = 0x00;
 11794  13C5  018C               	clrf	12	;volatile
 11795                           
 11796                           ;tmr.c: 20: PIR4bits.TMR2IF = 0;
 11797  13C6  002E               	movlb	14	; select bank14
 11798  13C7  1090               	bcf	16,1	;volatile
 11799                           
 11800                           ;tmr.c: 22: T2CONbits.TMR2ON = 1;
 11801  13C8  0025               	movlb	5	; select bank5
 11802  13C9  178E               	bsf	14,7	;volatile
 11803  13CA  0008               	return
 11804  13CB                     __end_of_TMR2_Initialize:	
 11805                           
 11806                           	psect	text23
 11807  092F                     __ptext23:	
 11808 ;; *************** function _PWM_Initialize *****************
 11809 ;; Defined at:
 11810 ;;		line 3 in file "pwm.c"
 11811 ;; Parameters:    Size  Location     Type
 11812 ;;		None
 11813 ;; Auto vars:     Size  Location     Type
 11814 ;;		None
 11815 ;; Return value:  Size  Location     Type
 11816 ;;                  1    wreg      void 
 11817 ;; Registers used:
 11818 ;;		wreg, status,2, status,0
 11819 ;; Tracked objects:
 11820 ;;		On entry : 0/0
 11821 ;;		On exit  : 0/0
 11822 ;;		Unchanged: 0/0
 11823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11828 ;;Total ram usage:        0 bytes
 11829 ;; Hardware stack levels used:    1
 11830 ;; This function calls:
 11831 ;;		Nothing
 11832 ;; This function is called by:
 11833 ;;		_SYSTEM_Initialize
 11834 ;; This function uses a non-reentrant model
 11835 ;;
 11836                           
 11837                           
 11838                           ;psect for function _PWM_Initialize
 11839  092F                     _PWM_Initialize:	
 11840                           
 11841                           ;pwm.c: 5: PWM6CON = 0x80;
 11842                           
 11843                           ;incstack = 0
 11844                           ; Regs used in _PWM_Initialize: [wreg+status,2+status,0]
 11845  092F  3080               	movlw	128
 11846  0930  0027               	movlb	7	; select bank7
 11847  0931  008E               	movwf	14	;volatile
 11848                           
 11849                           ;pwm.c: 7: PWM6DCH = 0x00;
 11850  0932  018D               	clrf	13	;volatile
 11851                           
 11852                           ;pwm.c: 9: PWM6DCL = 0x00;
 11853  0933  018C               	clrf	12	;volatile
 11854                           
 11855                           ;pwm.c: 11: CCPTMRS1bits.P6TSEL = 0x01;
 11856  0934  0024               	movlb	4	; select bank4
 11857  0935  081F               	movf	31,w	;volatile
 11858  0936  39F3               	andlw	-13
 11859  0937  3804               	iorlw	4
 11860  0938  009F               	movwf	31	;volatile
 11861                           
 11862                           ;pwm.c: 14: PWM7CON = 0x80;
 11863  0939  3080               	movlw	128
 11864  093A  0027               	movlb	7	; select bank7
 11865  093B  0092               	movwf	18	;volatile
 11866                           
 11867                           ;pwm.c: 16: PWM7DCH = 0x00;
 11868  093C  0191               	clrf	17	;volatile
 11869                           
 11870                           ;pwm.c: 18: PWM7DCL = 0x00;
 11871  093D  0190               	clrf	16	;volatile
 11872                           
 11873                           ;pwm.c: 20: CCPTMRS1bits.P7TSEL = 0x02;
 11874  093E  0024               	movlb	4	; select bank4
 11875  093F  081F               	movf	31,w	;volatile
 11876  0940  39CF               	andlw	-49
 11877  0941  3820               	iorlw	32
 11878  0942  009F               	movwf	31	;volatile
 11879                           
 11880                           ;pwm.c: 23: CCP1CONbits.CCP1EN = 1;
 11881  0943  0026               	movlb	6	; select bank6
 11882  0944  178E               	bsf	14,7	;volatile
 11883                           
 11884                           ;pwm.c: 24: CCP1CONbits.CCP1FMT = 1;
 11885  0945  160E               	bsf	14,4	;volatile
 11886                           
 11887                           ;pwm.c: 25: CCP1CONbits.CCP1MODE = 0xF;
 11888  0946  300F               	movlw	15
 11889  0947  048E               	iorwf	14,f	;volatile
 11890                           
 11891                           ;pwm.c: 26: CCPTMRS0bits.C1TSEL = 0x1;
 11892  0948  0024               	movlb	4	; select bank4
 11893  0949  081E               	movf	30,w	;volatile
 11894  094A  39FC               	andlw	-4
 11895  094B  3801               	iorlw	1
 11896  094C  009E               	movwf	30	;volatile
 11897  094D  0008               	return
 11898  094E                     __end_of_PWM_Initialize:	
 11899                           
 11900                           	psect	text24
 11901  1585                     __ptext24:	
 11902 ;; *************** function _PIN_MANAGER_Initialize *****************
 11903 ;; Defined at:
 11904 ;;		line 5 in file "pin_manager.c"
 11905 ;; Parameters:    Size  Location     Type
 11906 ;;		None
 11907 ;; Auto vars:     Size  Location     Type
 11908 ;;  state           1    0[COMMON] char 
 11909 ;; Return value:  Size  Location     Type
 11910 ;;                  1    wreg      void 
 11911 ;; Registers used:
 11912 ;;		wreg, status,2
 11913 ;; Tracked objects:
 11914 ;;		On entry : 0/0
 11915 ;;		On exit  : 0/0
 11916 ;;		Unchanged: 0/0
 11917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11919 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11921 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11922 ;;Total ram usage:        1 bytes
 11923 ;; Hardware stack levels used:    1
 11924 ;; This function calls:
 11925 ;;		Nothing
 11926 ;; This function is called by:
 11927 ;;		_SYSTEM_Initialize
 11928 ;; This function uses a non-reentrant model
 11929 ;;
 11930                           
 11931                           
 11932                           ;psect for function _PIN_MANAGER_Initialize
 11933  1585                     _PIN_MANAGER_Initialize:	
 11934                           
 11935                           ;pin_manager.c: 7: LATA = 0x20;
 11936                           
 11937                           ;incstack = 0
 11938                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 11939  1585  3020               	movlw	32
 11940  1586  0020               	movlb	0	; select bank0
 11941  1587  0096               	movwf	22	;volatile
 11942                           
 11943                           ;pin_manager.c: 8: LATB = 0x00;
 11944  1588  0197               	clrf	23	;volatile
 11945                           
 11946                           ;pin_manager.c: 9: LATC = 0x00;
 11947  1589  0198               	clrf	24	;volatile
 11948                           
 11949                           ;pin_manager.c: 11: WPUA = 0x00;
 11950  158A  003E               	movlb	30	; select bank30
 11951  158B  01B9               	clrf	57	;volatile
 11952                           
 11953                           ;pin_manager.c: 12: WPUB = 0x00;
 11954  158C  01C4               	clrf	68	;volatile
 11955                           
 11956                           ;pin_manager.c: 13: WPUC = 0x00;
 11957  158D  01CF               	clrf	79	;volatile
 11958                           
 11959                           ;pin_manager.c: 14: WPUE = 0x8;
 11960  158E  3008               	movlw	8
 11961  158F  00E5               	movwf	101	;volatile
 11962                           
 11963                           ;pin_manager.c: 16: TRISA = 0x00;
 11964  1590  0020               	movlb	0	; select bank0
 11965  1591  0191               	clrf	17	;volatile
 11966                           
 11967                           ;pin_manager.c: 17: TRISB = 0x0E;
 11968  1592  300E               	movlw	14
 11969  1593  0092               	movwf	18	;volatile
 11970                           
 11971                           ;pin_manager.c: 18: TRISC = 0xFF;
 11972  1594  30FF               	movlw	255
 11973  1595  0093               	movwf	19	;volatile
 11974                           
 11975                           ;pin_manager.c: 20: ANSELA = 0x00;
 11976  1596  003E               	movlb	30	; select bank30
 11977  1597  01B8               	clrf	56	;volatile
 11978                           
 11979                           ;pin_manager.c: 21: ANSELB = 0x0A;
 11980  1598  300A               	movlw	10
 11981  1599  00C3               	movwf	67	;volatile
 11982                           
 11983                           ;pin_manager.c: 22: ANSELC = 0xFF;
 11984  159A  30FF               	movlw	255
 11985  159B  00CE               	movwf	78	;volatile
 11986                           
 11987                           ;pin_manager.c: 25: PIE0bits.IOCIE = 0;
 11988  159C  002E               	movlb	14	; select bank14
 11989  159D  1216               	bcf	22,4	;volatile
 11990                           
 11991                           ;pin_manager.c: 26: int8_t state = GIE;
 11992  159E  3000               	movlw	0
 11993  159F  1B8B               	btfsc	11,7	;volatile
 11994  15A0  3001               	movlw	1
 11995  15A1  00F0               	movwf	PIN_MANAGER_Initialize@state
 11996                           
 11997                           ;pin_manager.c: 27: GIE = 0;
 11998  15A2  138B               	bcf	11,7	;volatile
 11999                           
 12000                           ;pin_manager.c: 28: PPSLOCK = 0x55;
 12001  15A3  3055               	movlw	85
 12002  15A4  003D               	movlb	29	; select bank29
 12003  15A5  008F               	movwf	15	;volsfr
 12004                           
 12005                           ;pin_manager.c: 29: PPSLOCK = 0xAA;
 12006  15A6  30AA               	movlw	170
 12007  15A7  008F               	movwf	15	;volsfr
 12008                           
 12009                           ;pin_manager.c: 30: PPSLOCKbits.PPSLOCKED = 0x00;
 12010  15A8  100F               	bcf	15,0	;volsfr
 12011                           
 12012                           ;pin_manager.c: 32: RA6PPS = 0x0E;
 12013  15A9  300E               	movlw	14
 12014  15AA  003E               	movlb	30	; select bank30
 12015  15AB  0096               	movwf	22	;volatile
 12016                           
 12017                           ;pin_manager.c: 33: RA7PPS = 0x0F;
 12018  15AC  300F               	movlw	15
 12019  15AD  0097               	movwf	23	;volatile
 12020                           
 12021                           ;pin_manager.c: 34: RB0PPS = 0x09;
 12022  15AE  3009               	movlw	9
 12023  15AF  0098               	movwf	24	;volatile
 12024                           
 12025                           ;pin_manager.c: 35: PPSLOCK = 0x55;
 12026  15B0  3055               	movlw	85
 12027  15B1  003D               	movlb	29	; select bank29
 12028  15B2  008F               	movwf	15	;volsfr
 12029                           
 12030                           ;pin_manager.c: 36: PPSLOCK = 0xAA;
 12031  15B3  30AA               	movlw	170
 12032  15B4  008F               	movwf	15	;volsfr
 12033                           
 12034                           ;pin_manager.c: 37: PPSLOCKbits.PPSLOCKED = 0x01;
 12035  15B5  140F               	bsf	15,0	;volsfr
 12036                           
 12037                           ;pin_manager.c: 38: GIE = state;
 12038  15B6  1C70               	btfss	PIN_MANAGER_Initialize@state,0
 12039  15B7  2DBA               	goto	u2520
 12040  15B8  178B               	bsf	11,7	;volatile
 12041  15B9  0008               	return
 12042  15BA                     u2520:	
 12043  15BA  138B               	bcf	11,7	;volatile
 12044  15BB  0008               	return
 12045  15BC                     __end_of_PIN_MANAGER_Initialize:	
 12046                           
 12047                           	psect	text25
 12048  13A8                     __ptext25:	
 12049 ;; *************** function _OSCILLATOR_Initialize *****************
 12050 ;; Defined at:
 12051 ;;		line 88 in file "system.c"
 12052 ;; Parameters:    Size  Location     Type
 12053 ;;		None
 12054 ;; Auto vars:     Size  Location     Type
 12055 ;;		None
 12056 ;; Return value:  Size  Location     Type
 12057 ;;                  1    wreg      void 
 12058 ;; Registers used:
 12059 ;;		wreg, status,2
 12060 ;; Tracked objects:
 12061 ;;		On entry : 0/0
 12062 ;;		On exit  : 0/0
 12063 ;;		Unchanged: 0/0
 12064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12068 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12069 ;;Total ram usage:        0 bytes
 12070 ;; Hardware stack levels used:    1
 12071 ;; This function calls:
 12072 ;;		Nothing
 12073 ;; This function is called by:
 12074 ;;		_SYSTEM_Initialize
 12075 ;; This function uses a non-reentrant model
 12076 ;;
 12077                           
 12078                           
 12079                           ;psect for function _OSCILLATOR_Initialize
 12080  13A8                     _OSCILLATOR_Initialize:	
 12081                           
 12082                           ;system.c: 90: OSCCON1 = 0x60;
 12083                           
 12084                           ;incstack = 0
 12085                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 12086  13A8  3060               	movlw	96
 12087  13A9  0031               	movlb	17	; select bank17
 12088  13AA  008D               	movwf	13	;volatile
 12089                           
 12090                           ;system.c: 91: OSCCON3 = 0x00;
 12091  13AB  018F               	clrf	15	;volatile
 12092                           
 12093                           ;system.c: 92: OSCEN = 0x00;
 12094  13AC  0191               	clrf	17	;volatile
 12095                           
 12096                           ;system.c: 93: OSCFRQ = 0x06;
 12097  13AD  3006               	movlw	6
 12098  13AE  0093               	movwf	19	;volatile
 12099                           
 12100                           ;system.c: 94: OSCTUNE = 0x00;
 12101  13AF  0192               	clrf	18	;volatile
 12102  13B0  0008               	return
 12103  13B1                     __end_of_OSCILLATOR_Initialize:	
 12104                           
 12105                           	psect	text26
 12106  15BC                     __ptext26:	
 12107 ;; *************** function _LCDInit *****************
 12108 ;; Defined at:
 12109 ;;		line 247 in file "lcd.c"
 12110 ;; Parameters:    Size  Location     Type
 12111 ;;		None
 12112 ;; Auto vars:     Size  Location     Type
 12113 ;;		None
 12114 ;; Return value:  Size  Location     Type
 12115 ;;                  1    wreg      void 
 12116 ;; Registers used:
 12117 ;;		wreg, status,2, status,0, pclath, cstack
 12118 ;; Tracked objects:
 12119 ;;		On entry : 0/0
 12120 ;;		On exit  : 0/0
 12121 ;;		Unchanged: 0/0
 12122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12125 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12126 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12127 ;;Total ram usage:        1 bytes
 12128 ;; Hardware stack levels used:    1
 12129 ;; Hardware stack levels required when called:    1
 12130 ;; This function calls:
 12131 ;;		_LCDWrite
 12132 ;; This function is called by:
 12133 ;;		_SYSTEM_Initialize
 12134 ;;		_main
 12135 ;; This function uses a non-reentrant model
 12136 ;;
 12137                           
 12138                           
 12139                           ;psect for function _LCDInit
 12140  15BC                     _LCDInit:	
 12141                           
 12142                           ;lcd.c: 249: TRISAbits.TRISA0 = 0;
 12143                           
 12144                           ;incstack = 0
 12145                           ; Regs used in _LCDInit: [wreg+status,2+status,0+pclath+cstack]
 12146  15BC  0020               	movlb	0	; select bank0
 12147  15BD  1011               	bcf	17,0	;volatile
 12148                           
 12149                           ;lcd.c: 250: TRISAbits.TRISA1 = 0;
 12150  15BE  1091               	bcf	17,1	;volatile
 12151                           
 12152                           ;lcd.c: 251: TRISAbits.TRISA2 = 0;
 12153  15BF  1111               	bcf	17,2	;volatile
 12154                           
 12155                           ;lcd.c: 252: TRISAbits.TRISA3 = 0;
 12156  15C0  1191               	bcf	17,3	;volatile
 12157                           
 12158                           ;lcd.c: 253: TRISAbits.TRISA4 = 0;
 12159  15C1  1211               	bcf	17,4	;volatile
 12160                           
 12161                           ;lcd.c: 254: LATAbits.LATA3 = 0;
 12162  15C2  1196               	bcf	22,3	;volatile
 12163                           
 12164                           ;lcd.c: 255: LATAbits.LATA4 = 0;
 12165  15C3  1216               	bcf	22,4	;volatile
 12166                           
 12167                           ;lcd.c: 256: LATAbits.LATA2 = 0;
 12168  15C4  1116               	bcf	22,2	;volatile
 12169                           
 12170                           ;lcd.c: 257: LATAbits.LATA0 = 0;
 12171  15C5  1016               	bcf	22,0	;volatile
 12172                           
 12173                           ;lcd.c: 259: LATAbits.LATA0 = 1;
 12174  15C6  1416               	bsf	22,0	;volatile
 12175                           
 12176                           ;lcd.c: 261: LCDWrite(0, 0x21);
 12177  15C7  3021               	movlw	33
 12178  15C8  00F5               	movwf	??_LCDInit
 12179  15C9  0875               	movf	??_LCDInit,w
 12180  15CA  00F0               	movwf	LCDWrite@data
 12181  15CB  3000               	movlw	0
 12182  15CC  3194  24DA  3195   	fcall	_LCDWrite
 12183                           
 12184                           ;lcd.c: 269: LCDWrite(0, 0XB9);
 12185  15CF  30B9               	movlw	185
 12186  15D0  00F5               	movwf	??_LCDInit
 12187  15D1  0875               	movf	??_LCDInit,w
 12188  15D2  00F0               	movwf	LCDWrite@data
 12189  15D3  3000               	movlw	0
 12190  15D4  3194  24DA  3195   	fcall	_LCDWrite
 12191                           
 12192                           ;lcd.c: 271: LCDWrite(0, 0x04);
 12193  15D7  3004               	movlw	4
 12194  15D8  00F5               	movwf	??_LCDInit
 12195  15D9  0875               	movf	??_LCDInit,w
 12196  15DA  00F0               	movwf	LCDWrite@data
 12197  15DB  3000               	movlw	0
 12198  15DC  3194  24DA  3195   	fcall	_LCDWrite
 12199                           
 12200                           ;lcd.c: 273: LCDWrite(0, 0x14);
 12201  15DF  3014               	movlw	20
 12202  15E0  00F5               	movwf	??_LCDInit
 12203  15E1  0875               	movf	??_LCDInit,w
 12204  15E2  00F0               	movwf	LCDWrite@data
 12205  15E3  3000               	movlw	0
 12206  15E4  3194  24DA  3195   	fcall	_LCDWrite
 12207                           
 12208                           ;lcd.c: 275: LCDWrite(0, 0x20);
 12209  15E7  3020               	movlw	32
 12210  15E8  00F5               	movwf	??_LCDInit
 12211  15E9  0875               	movf	??_LCDInit,w
 12212  15EA  00F0               	movwf	LCDWrite@data
 12213  15EB  3000               	movlw	0
 12214  15EC  3194  24DA  3195   	fcall	_LCDWrite
 12215                           
 12216                           ;lcd.c: 277: LCDWrite(0, 0x0C);
 12217  15EF  300C               	movlw	12
 12218  15F0  00F5               	movwf	??_LCDInit
 12219  15F1  0875               	movf	??_LCDInit,w
 12220  15F2  00F0               	movwf	LCDWrite@data
 12221  15F3  3000               	movlw	0
 12222  15F4  3194  24DA         	fcall	_LCDWrite
 12223  15F6  0008               	return
 12224  15F7                     __end_of_LCDInit:	
 12225                           
 12226                           	psect	text27
 12227  14FF                     __ptext27:	
 12228 ;; *************** function _LCDClear *****************
 12229 ;; Defined at:
 12230 ;;		line 182 in file "lcd.c"
 12231 ;; Parameters:    Size  Location     Type
 12232 ;;		None
 12233 ;; Auto vars:     Size  Location     Type
 12234 ;;  index           2    9[COMMON] int 
 12235 ;; Return value:  Size  Location     Type
 12236 ;;                  1    wreg      void 
 12237 ;; Registers used:
 12238 ;;		wreg, status,2, status,0, pclath, cstack
 12239 ;; Tracked objects:
 12240 ;;		On entry : 0/0
 12241 ;;		On exit  : 0/0
 12242 ;;		Unchanged: 0/0
 12243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12245 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12246 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12247 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12248 ;;Total ram usage:        3 bytes
 12249 ;; Hardware stack levels used:    1
 12250 ;; Hardware stack levels required when called:    2
 12251 ;; This function calls:
 12252 ;;		_LCDWrite
 12253 ;;		_gotoXY
 12254 ;; This function is called by:
 12255 ;;		_SYSTEM_Initialize
 12256 ;;		_main
 12257 ;; This function uses a non-reentrant model
 12258 ;;
 12259                           
 12260                           
 12261                           ;psect for function _LCDClear
 12262  14FF                     _LCDClear:	
 12263                           
 12264                           ;lcd.c: 184: int index;
 12265                           ;lcd.c: 185: for (index = 0 ; index < (84 * 48 / 8) ; index++)
 12266                           
 12267                           ;incstack = 0
 12268                           ; Regs used in _LCDClear: [wreg+status,2+status,0+pclath+cstack]
 12269  14FF  01F9               	clrf	LCDClear@index
 12270  1500  01FA               	clrf	LCDClear@index+1
 12271  1501  087A               	movf	LCDClear@index+1,w
 12272  1502  3A80               	xorlw	128
 12273  1503  00F8               	movwf	??_LCDClear
 12274  1504  3081               	movlw	129
 12275  1505  0278               	subwf	??_LCDClear,w
 12276  1506  1D03               	skipz
 12277  1507  2D0A               	goto	u2505
 12278  1508  30F8               	movlw	248
 12279  1509  0279               	subwf	LCDClear@index,w
 12280  150A                     u2505:	
 12281  150A  1803               	btfsc	3,0
 12282  150B  2D20               	goto	l2467
 12283  150C                     l2461:	
 12284                           
 12285                           ;lcd.c: 186: LCDWrite(1, 0x00);
 12286  150C  01F0               	clrf	LCDWrite@data
 12287  150D  3001               	movlw	1
 12288  150E  3194  24DA  3194   	fcall	_LCDWrite
 12289  1511  3001               	movlw	1
 12290  1512  07F9               	addwf	LCDClear@index,f
 12291  1513  3000               	movlw	0
 12292  1514  3DFA               	addwfc	LCDClear@index+1,f
 12293  1515  087A               	movf	LCDClear@index+1,w
 12294  1516  3A80               	xorlw	128
 12295  1517  00F8               	movwf	??_LCDClear
 12296  1518  3081               	movlw	129
 12297  1519  0278               	subwf	??_LCDClear,w
 12298  151A  1D03               	skipz
 12299  151B  2D1E               	goto	u2515
 12300  151C  30F8               	movlw	248
 12301  151D  0279               	subwf	LCDClear@index,w
 12302  151E                     u2515:	
 12303  151E  1C03               	skipc
 12304  151F  2D0C               	goto	l2461
 12305  1520                     l2467:	
 12306                           
 12307                           ;lcd.c: 187: gotoXY(0, 0);
 12308  1520  01F5               	clrf	gotoXY@y
 12309  1521  3000               	movlw	0
 12310  1522  3193  23D9         	fcall	_gotoXY
 12311  1524  0008               	return
 12312  1525                     __end_of_LCDClear:	
 12313                           
 12314                           	psect	text28
 12315  1443                     __ptext28:	
 12316 ;; *************** function _Init_Battery_State_Machine *****************
 12317 ;; Defined at:
 12318 ;;		line 23 in file "battery_charger.c"
 12319 ;; Parameters:    Size  Location     Type
 12320 ;;		None
 12321 ;; Auto vars:     Size  Location     Type
 12322 ;;		None
 12323 ;; Return value:  Size  Location     Type
 12324 ;;                  1    wreg      void 
 12325 ;; Registers used:
 12326 ;;		wreg
 12327 ;; Tracked objects:
 12328 ;;		On entry : 0/0
 12329 ;;		On exit  : 0/0
 12330 ;;		Unchanged: 0/0
 12331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12334 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12335 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12336 ;;Total ram usage:        1 bytes
 12337 ;; Hardware stack levels used:    1
 12338 ;; This function calls:
 12339 ;;		Nothing
 12340 ;; This function is called by:
 12341 ;;		_SYSTEM_Initialize
 12342 ;; This function uses a non-reentrant model
 12343 ;;
 12344                           
 12345                           
 12346                           ;psect for function _Init_Battery_State_Machine
 12347  1443                     _Init_Battery_State_Machine:	
 12348                           
 12349                           ;battery_charger.c: 25: battery_state = PRECHARGE;
 12350                           
 12351                           ;incstack = 0
 12352                           ; Regs used in _Init_Battery_State_Machine: [wreg]
 12353  1443  3003               	movlw	3
 12354  1444  00F0               	movwf	??_Init_Battery_State_Machine
 12355  1445  0870               	movf	??_Init_Battery_State_Machine,w
 12356  1446  0021               	movlb	1	; select bank1
 12357  1447  00EE               	movwf	_battery_state^(0+128)
 12358                           
 12359                           ;battery_charger.c: 26: state_counter = 3;
 12360  1448  3003               	movlw	3
 12361  1449  00EA               	movwf	_state_counter^(0+128)
 12362  144A  3000               	movlw	0
 12363  144B  00EB               	movwf	(_state_counter^(0+128)+1)
 12364                           
 12365                           ;battery_charger.c: 28: { Iref = 10; };
 12366  144C  300A               	movlw	10
 12367  144D  00E8               	movwf	_Iref^(0+128)
 12368  144E  3000               	movlw	0
 12369  144F  00E9               	movwf	(_Iref^(0+128)+1)
 12370                           
 12371                           ;battery_charger.c: 29: { Vref = 1445; };
 12372  1450  30A5               	movlw	165
 12373  1451  00E6               	movwf	_Vref^(0+128)
 12374  1452  3005               	movlw	5
 12375  1453  00E7               	movwf	(_Vref^(0+128)+1)
 12376                           
 12377                           ;battery_charger.c: 31: Imin = 20;
 12378  1454  3014               	movlw	20
 12379  1455  0022               	movlb	2	; select bank2
 12380  1456  00C5               	movwf	_Imin^(0+256)
 12381  1457  3000               	movlw	0
 12382  1458  00C6               	movwf	(_Imin^(0+256)+1)
 12383                           
 12384                           ;battery_charger.c: 32: IminCount = 10;
 12385  1459  300A               	movlw	10
 12386  145A  0021               	movlb	1	; select bank1
 12387  145B  00EC               	movwf	_IminCount^(0+128)
 12388  145C  3000               	movlw	0
 12389  145D  00ED               	movwf	(_IminCount^(0+128)+1)
 12390  145E  0008               	return
 12391  145F                     __end_of_Init_Battery_State_Machine:	
 12392                           
 12393                           	psect	text29
 12394  149B                     __ptext29:	
 12395 ;; *************** function _ADC_Initialize *****************
 12396 ;; Defined at:
 12397 ;;		line 111 in file "adc.c"
 12398 ;; Parameters:    Size  Location     Type
 12399 ;;		None
 12400 ;; Auto vars:     Size  Location     Type
 12401 ;;		None
 12402 ;; Return value:  Size  Location     Type
 12403 ;;                  1    wreg      void 
 12404 ;; Registers used:
 12405 ;;		wreg, status,2
 12406 ;; Tracked objects:
 12407 ;;		On entry : 0/0
 12408 ;;		On exit  : 0/0
 12409 ;;		Unchanged: 0/0
 12410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12414 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12415 ;;Total ram usage:        0 bytes
 12416 ;; Hardware stack levels used:    1
 12417 ;; This function calls:
 12418 ;;		Nothing
 12419 ;; This function is called by:
 12420 ;;		_SYSTEM_Initialize
 12421 ;; This function uses a non-reentrant model
 12422 ;;
 12423                           
 12424                           
 12425                           ;psect for function _ADC_Initialize
 12426  149B                     _ADC_Initialize:	
 12427                           
 12428                           ;adc.c: 113: ADCON1 = 0x00;
 12429                           
 12430                           ;incstack = 0
 12431                           ; Regs used in _ADC_Initialize: [wreg+status,2]
 12432  149B  0021               	movlb	1	; select bank1
 12433  149C  0194               	clrf	20	;volatile
 12434                           
 12435                           ;adc.c: 115: ADCON2 = 0x00;
 12436  149D  0195               	clrf	21	;volatile
 12437                           
 12438                           ;adc.c: 117: ADCON3 = 0x00;
 12439  149E  0196               	clrf	22	;volatile
 12440                           
 12441                           ;adc.c: 119: ADACT = 0x00;
 12442  149F  0199               	clrf	25	;volatile
 12443                           
 12444                           ;adc.c: 121: ADSTAT = 0x00;
 12445  14A0  0197               	clrf	23	;volatile
 12446                           
 12447                           ;adc.c: 123: FVRCON = 0b11000011;
 12448  14A1  30C3               	movlw	195
 12449  14A2  0032               	movlb	18	; select bank18
 12450  14A3  008C               	movwf	12	;volatile
 12451                           
 12452                           ;adc.c: 124: ADCLK = 0x3F;
 12453  14A4  303F               	movlw	63
 12454  14A5  0021               	movlb	1	; select bank1
 12455  14A6  0098               	movwf	24	;volatile
 12456                           
 12457                           ;adc.c: 131: ADREF = 0x03;
 12458  14A7  3003               	movlw	3
 12459  14A8  009A               	movwf	26	;volatile
 12460                           
 12461                           ;adc.c: 134: ADCAP = 0x00;
 12462  14A9  019B               	clrf	27	;volatile
 12463                           
 12464                           ;adc.c: 137: ADPRE = 0x07;
 12465  14AA  3007               	movlw	7
 12466  14AB  009C               	movwf	28	;volatile
 12467                           
 12468                           ;adc.c: 139: ADACQ = 0x00;
 12469  14AC  019D               	clrf	29	;volatile
 12470                           
 12471                           ;adc.c: 141: ADPCH = 0x00;
 12472  14AD  019E               	clrf	30	;volatile
 12473                           
 12474                           ;adc.c: 143: ADRPT = 0x00;
 12475  14AE  0022               	movlb	2	; select bank2
 12476  14AF  018D               	clrf	13	;volatile
 12477                           
 12478                           ;adc.c: 145: ADLTHL = 0x00;
 12479  14B0  018E               	clrf	14	;volatile
 12480                           
 12481                           ;adc.c: 147: ADLTHH = 0x00;
 12482  14B1  018F               	clrf	15	;volatile
 12483                           
 12484                           ;adc.c: 149: ADUTHL = 0x00;
 12485  14B2  0190               	clrf	16	;volatile
 12486                           
 12487                           ;adc.c: 151: ADUTHH = 0x00;
 12488  14B3  0191               	clrf	17	;volatile
 12489                           
 12490                           ;adc.c: 153: ADSTPTL = 0x00;
 12491  14B4  0192               	clrf	18	;volatile
 12492                           
 12493                           ;adc.c: 155: ADSTPTH = 0x00;
 12494  14B5  0193               	clrf	19	;volatile
 12495                           
 12496                           ;adc.c: 157: ADCON0 = 0x84;
 12497  14B6  3084               	movlw	132
 12498  14B7  0021               	movlb	1	; select bank1
 12499  14B8  0093               	movwf	19	;volatile
 12500  14B9  0008               	return
 12501  14BA                     __end_of_ADC_Initialize:	
 12502                           
 12503                           	psect	text30
 12504  142D                     __ptext30:	
 12505 ;; *************** function _PWM7_LoadDutyValue *****************
 12506 ;; Defined at:
 12507 ;;		line 37 in file "pwm.c"
 12508 ;; Parameters:    Size  Location     Type
 12509 ;;  dutyCycle7      2    0[COMMON] unsigned int 
 12510 ;; Auto vars:     Size  Location     Type
 12511 ;;		None
 12512 ;; Return value:  Size  Location     Type
 12513 ;;                  1    wreg      void 
 12514 ;; Registers used:
 12515 ;;		wreg, status,2, status,0
 12516 ;; Tracked objects:
 12517 ;;		On entry : 0/0
 12518 ;;		On exit  : 0/0
 12519 ;;		Unchanged: 0/0
 12520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12521 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12523 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12524 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12525 ;;Total ram usage:        4 bytes
 12526 ;; Hardware stack levels used:    1
 12527 ;; This function calls:
 12528 ;;		Nothing
 12529 ;; This function is called by:
 12530 ;;		_main
 12531 ;; This function uses a non-reentrant model
 12532 ;;
 12533                           
 12534                           
 12535                           ;psect for function _PWM7_LoadDutyValue
 12536  142D                     _PWM7_LoadDutyValue:	
 12537                           
 12538                           ;pwm.c: 39: PWM7DCH = (dutyCycle7 & 0x03FC)>>2;
 12539                           
 12540                           ;incstack = 0
 12541                           ; Regs used in _PWM7_LoadDutyValue: [wreg+status,2+status,0]
 12542  142D  0871               	movf	PWM7_LoadDutyValue@dutyCycle7+1,w
 12543  142E  00F3               	movwf	??_PWM7_LoadDutyValue+1
 12544  142F  0870               	movf	PWM7_LoadDutyValue@dutyCycle7,w
 12545  1430  00F2               	movwf	??_PWM7_LoadDutyValue
 12546  1431  36F3               	lsrf	??_PWM7_LoadDutyValue+1,f
 12547  1432  0CF2               	rrf	??_PWM7_LoadDutyValue,f
 12548  1433  36F3               	lsrf	??_PWM7_LoadDutyValue+1,f
 12549  1434  0CF2               	rrf	??_PWM7_LoadDutyValue,f
 12550  1435  0872               	movf	??_PWM7_LoadDutyValue,w
 12551  1436  0027               	movlb	7	; select bank7
 12552  1437  0091               	movwf	17	;volatile
 12553                           
 12554                           ;pwm.c: 41: PWM7DCL = (dutyCycle7 & 0x0003)<<6;
 12555  1438  0870               	movf	PWM7_LoadDutyValue@dutyCycle7,w
 12556  1439  3903               	andlw	3
 12557  143A  00F2               	movwf	??_PWM7_LoadDutyValue
 12558  143B  3005               	movlw	5
 12559  143C                     u3455:	
 12560  143C  35F2               	lslf	??_PWM7_LoadDutyValue,f
 12561  143D  3EFF               	addlw	-1
 12562  143E  1D03               	skipz
 12563  143F  2C3C               	goto	u3455
 12564  1440  3572               	lslf	??_PWM7_LoadDutyValue,w
 12565  1441  0090               	movwf	16	;volatile
 12566  1442  0008               	return
 12567  1443                     __end_of_PWM7_LoadDutyValue:	
 12568                           
 12569                           	psect	text31
 12570  1417                     __ptext31:	
 12571 ;; *************** function _PWM6_LoadDutyValue *****************
 12572 ;; Defined at:
 12573 ;;		line 30 in file "pwm.c"
 12574 ;; Parameters:    Size  Location     Type
 12575 ;;  dutyCycle6      2    0[COMMON] unsigned int 
 12576 ;; Auto vars:     Size  Location     Type
 12577 ;;		None
 12578 ;; Return value:  Size  Location     Type
 12579 ;;                  1    wreg      void 
 12580 ;; Registers used:
 12581 ;;		wreg, status,2, status,0
 12582 ;; Tracked objects:
 12583 ;;		On entry : 0/0
 12584 ;;		On exit  : 0/0
 12585 ;;		Unchanged: 0/0
 12586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12587 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12589 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12590 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12591 ;;Total ram usage:        4 bytes
 12592 ;; Hardware stack levels used:    1
 12593 ;; This function calls:
 12594 ;;		Nothing
 12595 ;; This function is called by:
 12596 ;;		_main
 12597 ;; This function uses a non-reentrant model
 12598 ;;
 12599                           
 12600                           
 12601                           ;psect for function _PWM6_LoadDutyValue
 12602  1417                     _PWM6_LoadDutyValue:	
 12603                           
 12604                           ;pwm.c: 32: PWM6DCH = (dutyCycle6 & 0x03FC)>>2;
 12605                           
 12606                           ;incstack = 0
 12607                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
 12608  1417  0871               	movf	PWM6_LoadDutyValue@dutyCycle6+1,w
 12609  1418  00F3               	movwf	??_PWM6_LoadDutyValue+1
 12610  1419  0870               	movf	PWM6_LoadDutyValue@dutyCycle6,w
 12611  141A  00F2               	movwf	??_PWM6_LoadDutyValue
 12612  141B  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
 12613  141C  0CF2               	rrf	??_PWM6_LoadDutyValue,f
 12614  141D  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
 12615  141E  0CF2               	rrf	??_PWM6_LoadDutyValue,f
 12616  141F  0872               	movf	??_PWM6_LoadDutyValue,w
 12617  1420  0027               	movlb	7	; select bank7
 12618  1421  008D               	movwf	13	;volatile
 12619                           
 12620                           ;pwm.c: 34: PWM6DCL = (dutyCycle6 & 0x0003)<<6;
 12621  1422  0870               	movf	PWM6_LoadDutyValue@dutyCycle6,w
 12622  1423  3903               	andlw	3
 12623  1424  00F2               	movwf	??_PWM6_LoadDutyValue
 12624  1425  3005               	movlw	5
 12625  1426                     u3445:	
 12626  1426  35F2               	lslf	??_PWM6_LoadDutyValue,f
 12627  1427  3EFF               	addlw	-1
 12628  1428  1D03               	skipz
 12629  1429  2C26               	goto	u3445
 12630  142A  3572               	lslf	??_PWM6_LoadDutyValue,w
 12631  142B  008C               	movwf	12	;volatile
 12632  142C  0008               	return
 12633  142D                     __end_of_PWM6_LoadDutyValue:	
 12634                           
 12635                           	psect	text32
 12636  1401                     __ptext32:	
 12637 ;; *************** function _PWM1_LoadDutyValue *****************
 12638 ;; Defined at:
 12639 ;;		line 44 in file "pwm.c"
 12640 ;; Parameters:    Size  Location     Type
 12641 ;;  dutyCycle1      2    0[COMMON] unsigned int 
 12642 ;; Auto vars:     Size  Location     Type
 12643 ;;		None
 12644 ;; Return value:  Size  Location     Type
 12645 ;;                  1    wreg      void 
 12646 ;; Registers used:
 12647 ;;		wreg, status,2, status,0
 12648 ;; Tracked objects:
 12649 ;;		On entry : 0/0
 12650 ;;		On exit  : 0/0
 12651 ;;		Unchanged: 0/0
 12652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12653 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12655 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12656 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12657 ;;Total ram usage:        4 bytes
 12658 ;; Hardware stack levels used:    1
 12659 ;; This function calls:
 12660 ;;		Nothing
 12661 ;; This function is called by:
 12662 ;;		_main
 12663 ;; This function uses a non-reentrant model
 12664 ;;
 12665                           
 12666                           
 12667                           ;psect for function _PWM1_LoadDutyValue
 12668  1401                     _PWM1_LoadDutyValue:	
 12669                           
 12670                           ;pwm.c: 46: CCPR1H = (dutyCycle1& 0x03FC)>>2;
 12671                           
 12672                           ;incstack = 0
 12673                           ; Regs used in _PWM1_LoadDutyValue: [wreg+status,2+status,0]
 12674  1401  0871               	movf	PWM1_LoadDutyValue@dutyCycle1+1,w
 12675  1402  00F3               	movwf	??_PWM1_LoadDutyValue+1
 12676  1403  0870               	movf	PWM1_LoadDutyValue@dutyCycle1,w
 12677  1404  00F2               	movwf	??_PWM1_LoadDutyValue
 12678  1405  36F3               	lsrf	??_PWM1_LoadDutyValue+1,f
 12679  1406  0CF2               	rrf	??_PWM1_LoadDutyValue,f
 12680  1407  36F3               	lsrf	??_PWM1_LoadDutyValue+1,f
 12681  1408  0CF2               	rrf	??_PWM1_LoadDutyValue,f
 12682  1409  0872               	movf	??_PWM1_LoadDutyValue,w
 12683  140A  0026               	movlb	6	; select bank6
 12684  140B  008D               	movwf	13	;volatile
 12685                           
 12686                           ;pwm.c: 47: CCPR1L = (dutyCycle1 & 0x0003)<<6;
 12687  140C  0870               	movf	PWM1_LoadDutyValue@dutyCycle1,w
 12688  140D  3903               	andlw	3
 12689  140E  00F2               	movwf	??_PWM1_LoadDutyValue
 12690  140F  3005               	movlw	5
 12691  1410                     u3465:	
 12692  1410  35F2               	lslf	??_PWM1_LoadDutyValue,f
 12693  1411  3EFF               	addlw	-1
 12694  1412  1D03               	skipz
 12695  1413  2C10               	goto	u3465
 12696  1414  3572               	lslf	??_PWM1_LoadDutyValue,w
 12697  1415  008C               	movwf	12	;volatile
 12698  1416  0008               	return
 12699  1417                     __end_of_PWM1_LoadDutyValue:	
 12700                           
 12701                           	psect	text33
 12702  0E51                     __ptext33:	
 12703 ;; *************** function _LCDWriteInt *****************
 12704 ;; Defined at:
 12705 ;;		line 190 in file "lcd.c"
 12706 ;; Parameters:    Size  Location     Type
 12707 ;;  value           2    8[BANK0 ] int 
 12708 ;;  fieldLength     1   10[BANK0 ] char 
 12709 ;;  numPlaces       1   11[BANK0 ] unsigned char 
 12710 ;;  sign            1   12[BANK0 ] unsigned char 
 12711 ;; Auto vars:     Size  Location     Type
 12712 ;;  str             5   17[BANK0 ] unsigned char [5]
 12713 ;;  i               1   23[BANK0 ] unsigned char 
 12714 ;;  j               1   22[BANK0 ] unsigned char 
 12715 ;; Return value:  Size  Location     Type
 12716 ;;                  1    wreg      void 
 12717 ;; Registers used:
 12718 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12719 ;; Tracked objects:
 12720 ;;		On entry : 0/0
 12721 ;;		On exit  : 0/0
 12722 ;;		Unchanged: 0/0
 12723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12724 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12725 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12726 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12727 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12728 ;;Total ram usage:       16 bytes
 12729 ;; Hardware stack levels used:    1
 12730 ;; Hardware stack levels required when called:    2
 12731 ;; This function calls:
 12732 ;;		_LCDWriteCharacter
 12733 ;;		___awdiv
 12734 ;;		___lwmod
 12735 ;; This function is called by:
 12736 ;;		_main
 12737 ;; This function uses a non-reentrant model
 12738 ;;
 12739                           
 12740                           
 12741                           ;psect for function _LCDWriteInt
 12742  0E51                     _LCDWriteInt:	
 12743                           
 12744                           ;lcd.c: 192: uint8_t str[5]={0,0,0,0,0};
 12745                           
 12746                           ;incstack = 0
 12747                           ; Regs used in _LCDWriteInt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12748  0E51  3038               	movlw	low LCDWriteInt@F14388
 12749  0E52  0086               	movwf	6
 12750  0E53  3001               	movlw	high LCDWriteInt@F14388
 12751  0E54  0087               	movwf	7
 12752  0E55  3031               	movlw	low LCDWriteInt@str
 12753  0E56  0084               	movwf	4
 12754  0E57  3000               	movlw	high LCDWriteInt@str
 12755  0E58  0085               	movwf	5
 12756  0E59  3005               	movlw	5
 12757  0E5A  0020               	movlb	0	; select bank0
 12758  0E5B  00AD               	movwf	??_LCDWriteInt
 12759  0E5C                     u3350:	
 12760  0E5C  0016               	moviw fsr1++
 12761  0E5D  001A               	movwi fsr0++
 12762  0E5E  0BAD               	decfsz	??_LCDWriteInt,f
 12763  0E5F  2E5C               	goto	u3350
 12764                           
 12765                           ;lcd.c: 193: uint8_t i=4,j=0;
 12766  0E60  3004               	movlw	4
 12767  0E61  00AD               	movwf	??_LCDWriteInt
 12768  0E62  082D               	movf	??_LCDWriteInt,w
 12769  0E63  00B7               	movwf	LCDWriteInt@i
 12770  0E64  01B6               	clrf	LCDWriteInt@j
 12771                           
 12772                           ;lcd.c: 195: if(value<0)
 12773  0E65  1FA9               	btfss	LCDWriteInt@value+1,7
 12774  0E66  2E72               	goto	l2927
 12775                           
 12776                           ;lcd.c: 196: {
 12777                           ;lcd.c: 197: LCDWriteCharacter('-');
 12778  0E67  302D               	movlw	45
 12779  0E68  3197  2748  318E   	fcall	_LCDWriteCharacter
 12780                           
 12781                           ;lcd.c: 198: value=value*-1;
 12782  0E6B  0020               	movlb	0	; select bank0
 12783  0E6C  09A8               	comf	LCDWriteInt@value,f
 12784  0E6D  09A9               	comf	LCDWriteInt@value+1,f
 12785  0E6E  0AA8               	incf	LCDWriteInt@value,f
 12786  0E6F  1903               	skipnz
 12787  0E70  0AA9               	incf	LCDWriteInt@value+1,f
 12788                           
 12789                           ;lcd.c: 199: }
 12790  0E71  2E79               	goto	l2937
 12791  0E72                     l2927:	
 12792                           
 12793                           ;lcd.c: 201: else
 12794                           ;lcd.c: 202: {
 12795                           ;lcd.c: 203: if(sign == 1)
 12796  0E72  032C               	decf	LCDWriteInt@sign,w
 12797  0E73  1D03               	btfss	3,2
 12798  0E74  2E79               	goto	l2937
 12799                           
 12800                           ;lcd.c: 204: {
 12801                           ;lcd.c: 205: LCDWriteCharacter('+');
 12802  0E75  302B               	movlw	43
 12803  0E76  3197  2748  318E   	fcall	_LCDWriteCharacter
 12804  0E79                     l2937:	
 12805                           ;lcd.c: 206: }
 12806                           ;lcd.c: 207: }
 12807                           ;lcd.c: 209: while(value)
 12808                           
 12809  0E79  0020               	movlb	0	; select bank0
 12810  0E7A  0828               	movf	LCDWriteInt@value,w
 12811  0E7B  0429               	iorwf	LCDWriteInt@value+1,w
 12812  0E7C  1903               	btfsc	3,2
 12813  0E7D  2EA6               	goto	l2939
 12814                           
 12815                           ;lcd.c: 210: {
 12816                           ;lcd.c: 211: str[i]=(uint16_t)value%10;
 12817  0E7E  300A               	movlw	10
 12818  0E7F  00F0               	movwf	___lwmod@divisor
 12819  0E80  3000               	movlw	0
 12820  0E81  00F1               	movwf	___lwmod@divisor+1
 12821  0E82  0020               	movlb	0	; select bank0
 12822  0E83  0829               	movf	LCDWriteInt@value+1,w
 12823  0E84  00F3               	movwf	___lwmod@dividend+1
 12824  0E85  0828               	movf	LCDWriteInt@value,w
 12825  0E86  00F2               	movwf	___lwmod@dividend
 12826  0E87  3195  2525  318E   	fcall	___lwmod
 12827  0E8A  0870               	movf	?___lwmod,w
 12828  0E8B  0020               	movlb	0	; select bank0
 12829  0E8C  00AD               	movwf	??_LCDWriteInt
 12830  0E8D  0837               	movf	LCDWriteInt@i,w
 12831  0E8E  3E31               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
 12832  0E8F  0086               	movwf	6
 12833  0E90  0187               	clrf	7
 12834  0E91  082D               	movf	??_LCDWriteInt,w
 12835  0E92  0081               	movwf	1
 12836                           
 12837                           ;lcd.c: 212: value=value/10;
 12838  0E93  300A               	movlw	10
 12839  0E94  00F0               	movwf	___awdiv@divisor
 12840  0E95  3000               	movlw	0
 12841  0E96  00F1               	movwf	___awdiv@divisor+1
 12842  0E97  0829               	movf	LCDWriteInt@value+1,w
 12843  0E98  00F3               	movwf	___awdiv@dividend+1
 12844  0E99  0828               	movf	LCDWriteInt@value,w
 12845  0E9A  00F2               	movwf	___awdiv@dividend
 12846  0E9B  3196  26F7  318E   	fcall	___awdiv
 12847  0E9E  0871               	movf	?___awdiv+1,w
 12848  0E9F  0020               	movlb	0	; select bank0
 12849  0EA0  00A9               	movwf	LCDWriteInt@value+1
 12850  0EA1  0870               	movf	?___awdiv,w
 12851  0EA2  00A8               	movwf	LCDWriteInt@value
 12852                           
 12853                           ;lcd.c: 213: i--;
 12854  0EA3  3001               	movlw	1
 12855  0EA4  02B7               	subwf	LCDWriteInt@i,f
 12856  0EA5  2E79               	goto	l2937
 12857  0EA6                     l2939:	
 12858                           
 12859                           ;lcd.c: 214: }
 12860                           ;lcd.c: 215: if(fieldLength==-1)
 12861  0EA6  0A2A               	incf	LCDWriteInt@fieldLength,w
 12862  0EA7  1903               	btfsc	3,2
 12863  0EA8  2EAE               	goto	l2945
 12864  0EA9  2EB6               	goto	l2947
 12865  0EAA                     l2943:	
 12866                           ;lcd.c: 216: {
 12867                           ;lcd.c: 217: while(str[j]==0)
 12868                           
 12869                           
 12870                           ;lcd.c: 218: {
 12871                           ;lcd.c: 219: j++;
 12872  0EAA  3001               	movlw	1
 12873  0EAB  00AD               	movwf	??_LCDWriteInt
 12874  0EAC  082D               	movf	??_LCDWriteInt,w
 12875  0EAD  07B6               	addwf	LCDWriteInt@j,f
 12876  0EAE                     l2945:	
 12877  0EAE  0836               	movf	LCDWriteInt@j,w
 12878  0EAF  3E31               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
 12879  0EB0  0086               	movwf	6
 12880  0EB1  0187               	clrf	7
 12881  0EB2  0801               	movf	1,w
 12882  0EB3  1D03               	btfss	3,2
 12883  0EB4  2EBC               	goto	l2949
 12884  0EB5  2EAA               	goto	l2943
 12885  0EB6                     l2947:	
 12886                           ;lcd.c: 220: }
 12887                           ;lcd.c: 221: }
 12888                           
 12889                           
 12890                           ;lcd.c: 222: else
 12891                           ;lcd.c: 223: {
 12892                           ;lcd.c: 224: j=(uint8_t)(5-fieldLength);
 12893  0EB6  032A               	decf	LCDWriteInt@fieldLength,w
 12894  0EB7  3AFF               	xorlw	255
 12895  0EB8  3E05               	addlw	5
 12896  0EB9  00AD               	movwf	??_LCDWriteInt
 12897  0EBA  082D               	movf	??_LCDWriteInt,w
 12898  0EBB  00B6               	movwf	LCDWriteInt@j
 12899  0EBC                     l2949:	
 12900                           
 12901                           ;lcd.c: 225: }
 12902                           ;lcd.c: 227: for(i=j;i<(5-numPlaces);i++)
 12903  0EBC  0836               	movf	LCDWriteInt@j,w
 12904  0EBD  00AD               	movwf	??_LCDWriteInt
 12905  0EBE  082D               	movf	??_LCDWriteInt,w
 12906  0EBF  00B7               	movwf	LCDWriteInt@i
 12907  0EC0                     l2955:	
 12908  0EC0  082B               	movf	LCDWriteInt@numPlaces,w
 12909  0EC1  00AD               	movwf	??_LCDWriteInt
 12910  0EC2  01AE               	clrf	??_LCDWriteInt+1
 12911  0EC3  09AD               	comf	??_LCDWriteInt,f
 12912  0EC4  09AE               	comf	??_LCDWriteInt+1,f
 12913  0EC5  0AAD               	incf	??_LCDWriteInt,f
 12914  0EC6  1903               	skipnz
 12915  0EC7  0AAE               	incf	??_LCDWriteInt+1,f
 12916  0EC8  082D               	movf	??_LCDWriteInt,w
 12917  0EC9  3E05               	addlw	5
 12918  0ECA  00AF               	movwf	??_LCDWriteInt+2
 12919  0ECB  3000               	movlw	0
 12920  0ECC  3D2E               	addwfc	??_LCDWriteInt+1,w
 12921  0ECD  00B0               	movwf	??_LCDWriteInt+3
 12922  0ECE  0830               	movf	??_LCDWriteInt+3,w
 12923  0ECF  3A80               	xorlw	128
 12924  0ED0  3C80               	sublw	128
 12925  0ED1  1D03               	skipz
 12926  0ED2  2ED5               	goto	u3415
 12927  0ED3  082F               	movf	??_LCDWriteInt+2,w
 12928  0ED4  0237               	subwf	LCDWriteInt@i,w
 12929  0ED5                     u3415:	
 12930  0ED5  1803               	btfsc	3,0
 12931  0ED6  2EE7               	goto	l2957
 12932                           
 12933                           ;lcd.c: 228: {
 12934                           ;lcd.c: 229: LCDWriteCharacter((uint8_t)(48+str[i]));
 12935  0ED7  0020               	movlb	0	; select bank0
 12936  0ED8  0837               	movf	LCDWriteInt@i,w
 12937  0ED9  3E31               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
 12938  0EDA  0086               	movwf	6
 12939  0EDB  0187               	clrf	7
 12940  0EDC  0801               	movf	1,w
 12941  0EDD  3E30               	addlw	48
 12942  0EDE  3197  2748  318E   	fcall	_LCDWriteCharacter
 12943  0EE1  3001               	movlw	1
 12944  0EE2  0020               	movlb	0	; select bank0
 12945  0EE3  00AD               	movwf	??_LCDWriteInt
 12946  0EE4  082D               	movf	??_LCDWriteInt,w
 12947  0EE5  07B7               	addwf	LCDWriteInt@i,f
 12948  0EE6  2EC0               	goto	l2955
 12949  0EE7                     l2957:	
 12950                           
 12951                           ;lcd.c: 230: }
 12952                           ;lcd.c: 232: if(numPlaces == 1)
 12953  0EE7  0020               	movlb	0	; select bank0
 12954  0EE8  032B               	decf	LCDWriteInt@numPlaces,w
 12955  0EE9  1D03               	btfss	3,2
 12956  0EEA  2EF5               	goto	l2961
 12957                           
 12958                           ;lcd.c: 233: {
 12959                           ;lcd.c: 234: LCDWriteCharacter(46);
 12960  0EEB  302E               	movlw	46
 12961  0EEC  3197  2748  318E   	fcall	_LCDWriteCharacter
 12962                           
 12963                           ;lcd.c: 235: LCDWriteCharacter ((uint8_t)(48+str[4]));
 12964  0EEF  0020               	movlb	0	; select bank0
 12965  0EF0  0835               	movf	LCDWriteInt@str+4,w
 12966  0EF1  3E30               	addlw	48
 12967  0EF2  3197  2748  318E   	fcall	_LCDWriteCharacter
 12968  0EF5                     l2961:	
 12969                           
 12970                           ;lcd.c: 236: }
 12971                           ;lcd.c: 238: if(numPlaces == 2)
 12972  0EF5  3002               	movlw	2
 12973  0EF6  0020               	movlb	0	; select bank0
 12974  0EF7  062B               	xorwf	LCDWriteInt@numPlaces,w
 12975  0EF8  1D03               	btfss	3,2
 12976  0EF9  0008               	return
 12977                           
 12978                           ;lcd.c: 239: {
 12979                           ;lcd.c: 240: LCDWriteCharacter(46);
 12980  0EFA  302E               	movlw	46
 12981  0EFB  3197  2748  318E   	fcall	_LCDWriteCharacter
 12982                           
 12983                           ;lcd.c: 241: LCDWriteCharacter((uint8_t)(48+str[3]));
 12984  0EFE  0020               	movlb	0	; select bank0
 12985  0EFF  0834               	movf	LCDWriteInt@str+3,w
 12986  0F00  3E30               	addlw	48
 12987  0F01  3197  2748  318E   	fcall	_LCDWriteCharacter
 12988                           
 12989                           ;lcd.c: 242: LCDWriteCharacter((uint8_t)(48+str[4]));
 12990  0F04  0020               	movlb	0	; select bank0
 12991  0F05  0835               	movf	LCDWriteInt@str+4,w
 12992  0F06  3E30               	addlw	48
 12993  0F07  3197  2748         	fcall	_LCDWriteCharacter
 12994  0F09  0008               	return
 12995  0F0A                     __end_of_LCDWriteInt:	
 12996                           
 12997                           	psect	text34
 12998  1525                     __ptext34:	
 12999 ;; *************** function ___lwmod *****************
 13000 ;; Defined at:
 13001 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
 13002 ;; Parameters:    Size  Location     Type
 13003 ;;  divisor         2    0[COMMON] unsigned int 
 13004 ;;  dividend        2    2[COMMON] unsigned int 
 13005 ;; Auto vars:     Size  Location     Type
 13006 ;;  counter         1    5[COMMON] unsigned char 
 13007 ;; Return value:  Size  Location     Type
 13008 ;;                  2    0[COMMON] unsigned int 
 13009 ;; Registers used:
 13010 ;;		wreg, status,2, status,0
 13011 ;; Tracked objects:
 13012 ;;		On entry : 0/0
 13013 ;;		On exit  : 0/0
 13014 ;;		Unchanged: 0/0
 13015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13016 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13017 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13018 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13019 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13020 ;;Total ram usage:        6 bytes
 13021 ;; Hardware stack levels used:    1
 13022 ;; This function calls:
 13023 ;;		Nothing
 13024 ;; This function is called by:
 13025 ;;		_LCDWriteInt
 13026 ;; This function uses a non-reentrant model
 13027 ;;
 13028                           
 13029                           
 13030                           ;psect for function ___lwmod
 13031  1525                     ___lwmod:	
 13032                           
 13033                           ;incstack = 0
 13034                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 13035  1525  0870               	movf	___lwmod@divisor,w
 13036  1526  0471               	iorwf	___lwmod@divisor+1,w
 13037  1527  1903               	btfsc	3,2
 13038  1528  2D4C               	goto	l2777
 13039  1529  01F5               	clrf	___lwmod@counter
 13040  152A  0AF5               	incf	___lwmod@counter,f
 13041  152B                     l2767:	
 13042  152B  1BF1               	btfsc	___lwmod@divisor+1,7
 13043  152C  2D37               	goto	l2769
 13044  152D  3001               	movlw	1
 13045  152E                     u2965:	
 13046  152E  35F0               	lslf	___lwmod@divisor,f
 13047  152F  0DF1               	rlf	___lwmod@divisor+1,f
 13048  1530  0B89               	decfsz	9,f
 13049  1531  2D2E               	goto	u2965
 13050  1532  3001               	movlw	1
 13051  1533  00F4               	movwf	??___lwmod
 13052  1534  0874               	movf	??___lwmod,w
 13053  1535  07F5               	addwf	___lwmod@counter,f
 13054  1536  2D2B               	goto	l2767
 13055  1537                     l2769:	
 13056  1537  0871               	movf	___lwmod@divisor+1,w
 13057  1538  0273               	subwf	___lwmod@dividend+1,w
 13058  1539  1D03               	skipz
 13059  153A  2D3D               	goto	u2985
 13060  153B  0870               	movf	___lwmod@divisor,w
 13061  153C  0272               	subwf	___lwmod@dividend,w
 13062  153D                     u2985:	
 13063  153D  1C03               	skipc
 13064  153E  2D43               	goto	l2773
 13065  153F  0870               	movf	___lwmod@divisor,w
 13066  1540  02F2               	subwf	___lwmod@dividend,f
 13067  1541  0871               	movf	___lwmod@divisor+1,w
 13068  1542  3BF3               	subwfb	___lwmod@dividend+1,f
 13069  1543                     l2773:	
 13070  1543  3001               	movlw	1
 13071  1544                     u2995:	
 13072  1544  36F1               	lsrf	___lwmod@divisor+1,f
 13073  1545  0CF0               	rrf	___lwmod@divisor,f
 13074  1546  0B89               	decfsz	9,f
 13075  1547  2D44               	goto	u2995
 13076  1548  3001               	movlw	1
 13077  1549  02F5               	subwf	___lwmod@counter,f
 13078  154A  1D03               	btfss	3,2
 13079  154B  2D37               	goto	l2769
 13080  154C                     l2777:	
 13081  154C  0873               	movf	___lwmod@dividend+1,w
 13082  154D  00F1               	movwf	?___lwmod+1
 13083  154E  0872               	movf	___lwmod@dividend,w
 13084  154F  00F0               	movwf	?___lwmod
 13085  1550  0008               	return
 13086  1551                     __end_of___lwmod:	
 13087                           
 13088                           	psect	text35
 13089  16F7                     __ptext35:	
 13090 ;; *************** function ___awdiv *****************
 13091 ;; Defined at:
 13092 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 13093 ;; Parameters:    Size  Location     Type
 13094 ;;  divisor         2    0[COMMON] int 
 13095 ;;  dividend        2    2[COMMON] int 
 13096 ;; Auto vars:     Size  Location     Type
 13097 ;;  quotient        2    7[COMMON] int 
 13098 ;;  sign            1    6[COMMON] unsigned char 
 13099 ;;  counter         1    5[COMMON] unsigned char 
 13100 ;; Return value:  Size  Location     Type
 13101 ;;                  2    0[COMMON] int 
 13102 ;; Registers used:
 13103 ;;		wreg, status,2, status,0
 13104 ;; Tracked objects:
 13105 ;;		On entry : 0/0
 13106 ;;		On exit  : 0/0
 13107 ;;		Unchanged: 0/0
 13108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13109 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13110 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13111 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13112 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13113 ;;Total ram usage:        9 bytes
 13114 ;; Hardware stack levels used:    1
 13115 ;; This function calls:
 13116 ;;		Nothing
 13117 ;; This function is called by:
 13118 ;;		_LCDWriteInt
 13119 ;;		_main
 13120 ;; This function uses a non-reentrant model
 13121 ;;
 13122                           
 13123                           
 13124                           ;psect for function ___awdiv
 13125  16F7                     ___awdiv:	
 13126                           
 13127                           ;incstack = 0
 13128                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 13129  16F7  01F6               	clrf	___awdiv@sign
 13130  16F8  1FF1               	btfss	___awdiv@divisor+1,7
 13131  16F9  2F01               	goto	l2631
 13132  16FA  09F0               	comf	___awdiv@divisor,f
 13133  16FB  09F1               	comf	___awdiv@divisor+1,f
 13134  16FC  0AF0               	incf	___awdiv@divisor,f
 13135  16FD  1903               	skipnz
 13136  16FE  0AF1               	incf	___awdiv@divisor+1,f
 13137  16FF  01F6               	clrf	___awdiv@sign
 13138  1700  0AF6               	incf	___awdiv@sign,f
 13139  1701                     l2631:	
 13140  1701  1FF3               	btfss	___awdiv@dividend+1,7
 13141  1702  2F0C               	goto	l2637
 13142  1703  09F2               	comf	___awdiv@dividend,f
 13143  1704  09F3               	comf	___awdiv@dividend+1,f
 13144  1705  0AF2               	incf	___awdiv@dividend,f
 13145  1706  1903               	skipnz
 13146  1707  0AF3               	incf	___awdiv@dividend+1,f
 13147  1708  3001               	movlw	1
 13148  1709  00F4               	movwf	??___awdiv
 13149  170A  0874               	movf	??___awdiv,w
 13150  170B  06F6               	xorwf	___awdiv@sign,f
 13151  170C                     l2637:	
 13152  170C  01F7               	clrf	___awdiv@quotient
 13153  170D  01F8               	clrf	___awdiv@quotient+1
 13154  170E  0870               	movf	___awdiv@divisor,w
 13155  170F  0471               	iorwf	___awdiv@divisor+1,w
 13156  1710  1903               	btfsc	3,2
 13157  1711  2F3B               	goto	l2659
 13158  1712  01F5               	clrf	___awdiv@counter
 13159  1713  0AF5               	incf	___awdiv@counter,f
 13160  1714                     l2647:	
 13161  1714  1BF1               	btfsc	___awdiv@divisor+1,7
 13162  1715  2F20               	goto	l2649
 13163  1716  3001               	movlw	1
 13164  1717                     u2695:	
 13165  1717  35F0               	lslf	___awdiv@divisor,f
 13166  1718  0DF1               	rlf	___awdiv@divisor+1,f
 13167  1719  0B89               	decfsz	9,f
 13168  171A  2F17               	goto	u2695
 13169  171B  3001               	movlw	1
 13170  171C  00F4               	movwf	??___awdiv
 13171  171D  0874               	movf	??___awdiv,w
 13172  171E  07F5               	addwf	___awdiv@counter,f
 13173  171F  2F14               	goto	l2647
 13174  1720                     l2649:	
 13175  1720  3001               	movlw	1
 13176  1721                     u2715:	
 13177  1721  35F7               	lslf	___awdiv@quotient,f
 13178  1722  0DF8               	rlf	___awdiv@quotient+1,f
 13179  1723  0B89               	decfsz	9,f
 13180  1724  2F21               	goto	u2715
 13181  1725  0871               	movf	___awdiv@divisor+1,w
 13182  1726  0273               	subwf	___awdiv@dividend+1,w
 13183  1727  1D03               	skipz
 13184  1728  2F2B               	goto	u2725
 13185  1729  0870               	movf	___awdiv@divisor,w
 13186  172A  0272               	subwf	___awdiv@dividend,w
 13187  172B                     u2725:	
 13188  172B  1C03               	skipc
 13189  172C  2F32               	goto	l2655
 13190  172D  0870               	movf	___awdiv@divisor,w
 13191  172E  02F2               	subwf	___awdiv@dividend,f
 13192  172F  0871               	movf	___awdiv@divisor+1,w
 13193  1730  3BF3               	subwfb	___awdiv@dividend+1,f
 13194  1731  1477               	bsf	___awdiv@quotient,0
 13195  1732                     l2655:	
 13196  1732  3001               	movlw	1
 13197  1733                     u2735:	
 13198  1733  36F1               	lsrf	___awdiv@divisor+1,f
 13199  1734  0CF0               	rrf	___awdiv@divisor,f
 13200  1735  0B89               	decfsz	9,f
 13201  1736  2F33               	goto	u2735
 13202  1737  3001               	movlw	1
 13203  1738  02F5               	subwf	___awdiv@counter,f
 13204  1739  1D03               	btfss	3,2
 13205  173A  2F20               	goto	l2649
 13206  173B                     l2659:	
 13207  173B  0876               	movf	___awdiv@sign,w
 13208  173C  1903               	btfsc	3,2
 13209  173D  2F43               	goto	l2663
 13210  173E  09F7               	comf	___awdiv@quotient,f
 13211  173F  09F8               	comf	___awdiv@quotient+1,f
 13212  1740  0AF7               	incf	___awdiv@quotient,f
 13213  1741  1903               	skipnz
 13214  1742  0AF8               	incf	___awdiv@quotient+1,f
 13215  1743                     l2663:	
 13216  1743  0878               	movf	___awdiv@quotient+1,w
 13217  1744  00F1               	movwf	?___awdiv+1
 13218  1745  0877               	movf	___awdiv@quotient,w
 13219  1746  00F0               	movwf	?___awdiv
 13220  1747  0008               	return
 13221  1748                     __end_of___awdiv:	
 13222                           
 13223                           	psect	text36
 13224  0BA6                     __ptext36:	
 13225 ;; *************** function _Battery_State_Machine *****************
 13226 ;; Defined at:
 13227 ;;		line 35 in file "battery_charger.c"
 13228 ;; Parameters:    Size  Location     Type
 13229 ;;		None
 13230 ;; Auto vars:     Size  Location     Type
 13231 ;;		None
 13232 ;; Return value:  Size  Location     Type
 13233 ;;                  1    wreg      void 
 13234 ;; Registers used:
 13235 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13236 ;; Tracked objects:
 13237 ;;		On entry : 0/0
 13238 ;;		On exit  : 0/0
 13239 ;;		Unchanged: 0/0
 13240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13243 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13244 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13245 ;;Total ram usage:        2 bytes
 13246 ;; Hardware stack levels used:    1
 13247 ;; Hardware stack levels required when called:    3
 13248 ;; This function calls:
 13249 ;;		_LCDWriteString
 13250 ;;		_gotoXY
 13251 ;; This function is called by:
 13252 ;;		_main
 13253 ;; This function uses a non-reentrant model
 13254 ;;
 13255                           
 13256                           
 13257                           ;psect for function _Battery_State_Machine
 13258  0BA6                     _Battery_State_Machine:	
 13259                           
 13260                           ;battery_charger.c: 37: if(battery_state == PRECHARGE)
 13261                           
 13262                           ;incstack = 0
 13263                           ; Regs used in _Battery_State_Machine: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 13264  0BA6  3003               	movlw	3
 13265  0BA7  0021               	movlb	1	; select bank1
 13266  0BA8  066E               	xorwf	_battery_state^(0+128),w
 13267  0BA9  1D03               	btfss	3,2
 13268  0BAA  2BDB               	goto	l2811
 13269                           
 13270                           ;battery_charger.c: 38: {
 13271                           ;battery_charger.c: 39: if(voltage[1] < 1075)
 13272  0BAB  0833               	movf	((_voltage+1)^(0+128)+2),w
 13273  0BAC  3A80               	xorlw	128
 13274  0BAD  0020               	movlb	0	; select bank0
 13275  0BAE  00AA               	movwf	??_Battery_State_Machine
 13276  0BAF  3084               	movlw	132
 13277  0BB0  022A               	subwf	??_Battery_State_Machine,w
 13278  0BB1  1D03               	skipz
 13279  0BB2  2BB6               	goto	u3095
 13280  0BB3  3033               	movlw	51
 13281  0BB4  0021               	movlb	1	; select bank1
 13282  0BB5  0232               	subwf	(_voltage^(0+128)+2),w
 13283  0BB6                     u3095:	
 13284  0BB6  1803               	skipnc
 13285  0BB7  2BD0               	goto	l2809
 13286                           
 13287                           ;battery_charger.c: 40: {
 13288                           ;battery_charger.c: 41: if(state_counter>0)
 13289  0BB8  0021               	movlb	1	; select bank1
 13290  0BB9  086B               	movf	(_state_counter+1)^(0+128),w
 13291  0BBA  3A80               	xorlw	128
 13292  0BBB  0020               	movlb	0	; select bank0
 13293  0BBC  00AA               	movwf	??_Battery_State_Machine
 13294  0BBD  3080               	movlw	128
 13295  0BBE  022A               	subwf	??_Battery_State_Machine,w
 13296  0BBF  1D03               	skipz
 13297  0BC0  2BC4               	goto	u3105
 13298  0BC1  3001               	movlw	1
 13299  0BC2  0021               	movlb	1	; select bank1
 13300  0BC3  026A               	subwf	_state_counter^(0+128),w
 13301  0BC4                     u3105:	
 13302  0BC4  1C03               	skipc
 13303  0BC5  2BCC               	goto	l111
 13304                           
 13305                           ;battery_charger.c: 42: {
 13306                           ;battery_charger.c: 43: state_counter-=1;
 13307  0BC6  30FF               	movlw	255
 13308  0BC7  0021               	movlb	1	; select bank1
 13309  0BC8  07EA               	addwf	_state_counter^(0+128),f
 13310  0BC9  30FF               	movlw	255
 13311  0BCA  3DEB               	addwfc	(_state_counter+1)^(0+128),f
 13312                           
 13313                           ;battery_charger.c: 44: }
 13314  0BCB  0008               	return
 13315  0BCC                     l111:	
 13316                           
 13317                           ;battery_charger.c: 45: else
 13318                           ;battery_charger.c: 46: {
 13319                           ;battery_charger.c: 47: battery_state = FAULT;
 13320  0BCC  0021               	movlb	1	; select bank1
 13321  0BCD  01EE               	clrf	_battery_state^(0+128)
 13322  0BCE  0AEE               	incf	_battery_state^(0+128),f
 13323                           
 13324                           ;battery_charger.c: 48: }
 13325                           ;battery_charger.c: 49: }
 13326  0BCF  0008               	return
 13327  0BD0                     l2809:	
 13328                           
 13329                           ;battery_charger.c: 50: else
 13330                           ;battery_charger.c: 51: {
 13331                           ;battery_charger.c: 52: battery_state = CHARGE;
 13332  0BD0  3004               	movlw	4
 13333  0BD1  0020               	movlb	0	; select bank0
 13334  0BD2  00AA               	movwf	??_Battery_State_Machine
 13335  0BD3  082A               	movf	??_Battery_State_Machine,w
 13336  0BD4  0021               	movlb	1	; select bank1
 13337  0BD5  00EE               	movwf	_battery_state^(0+128)
 13338                           
 13339                           ;battery_charger.c: 53: { Iref = 35; };
 13340  0BD6  3023               	movlw	35
 13341  0BD7  00E8               	movwf	_Iref^(0+128)
 13342  0BD8  3000               	movlw	0
 13343  0BD9  00E9               	movwf	(_Iref^(0+128)+1)
 13344                           
 13345                           ;battery_charger.c: 54: }
 13346                           ;battery_charger.c: 55: }
 13347  0BDA  0008               	return
 13348  0BDB                     l2811:	
 13349                           
 13350                           ;battery_charger.c: 56: else if(battery_state == CHARGE)
 13351  0BDB  3004               	movlw	4
 13352  0BDC  066E               	xorwf	_battery_state^(0+128),w
 13353  0BDD  1D03               	btfss	3,2
 13354  0BDE  2C15               	goto	l2825
 13355                           
 13356                           ;battery_charger.c: 57: {
 13357                           ;battery_charger.c: 58: if((!Imode0))
 13358  0BDF  0020               	movlb	0	; select bank0
 13359  0BE0  086E               	movf	_Imode0,w
 13360  0BE1  1D03               	btfss	3,2
 13361  0BE2  0008               	return
 13362                           
 13363                           ;battery_charger.c: 59: {
 13364                           ;battery_charger.c: 60: if(current[1] < Imin)
 13365  0BE3  0021               	movlb	1	; select bank1
 13366  0BE4  082B               	movf	((_current+1)^(0+128)+2),w
 13367  0BE5  3A80               	xorlw	128
 13368  0BE6  0020               	movlb	0	; select bank0
 13369  0BE7  00AA               	movwf	??_Battery_State_Machine
 13370  0BE8  0022               	movlb	2	; select bank2
 13371  0BE9  0846               	movf	(_Imin+1)^(0+256),w
 13372  0BEA  3A80               	xorlw	128
 13373  0BEB  0020               	movlb	0	; select bank0
 13374  0BEC  022A               	subwf	??_Battery_State_Machine,w
 13375  0BED  1D03               	skipz
 13376  0BEE  2BF3               	goto	u3135
 13377  0BEF  0022               	movlb	2	; select bank2
 13378  0BF0  0845               	movf	_Imin^(0+256),w
 13379  0BF1  0021               	movlb	1	; select bank1
 13380  0BF2  022A               	subwf	(_current^(0+128)+2),w
 13381  0BF3                     u3135:	
 13382  0BF3  1803               	skipnc
 13383  0BF4  2C08               	goto	l2821
 13384                           
 13385                           ;battery_charger.c: 61: {
 13386                           ;battery_charger.c: 62: IminCount-=2;
 13387  0BF5  3002               	movlw	2
 13388  0BF6  0021               	movlb	1	; select bank1
 13389  0BF7  02EC               	subwf	_IminCount^(0+128),f
 13390  0BF8  3000               	movlw	0
 13391  0BF9  3BED               	subwfb	(_IminCount+1)^(0+128),f
 13392                           
 13393                           ;battery_charger.c: 63: if(IminCount<2)
 13394  0BFA  3000               	movlw	0
 13395  0BFB  026D               	subwf	(_IminCount+1)^(0+128),w
 13396  0BFC  3002               	movlw	2
 13397  0BFD  1903               	skipnz
 13398  0BFE  026C               	subwf	_IminCount^(0+128),w
 13399  0BFF  1803               	skipnc
 13400  0C00  0008               	return
 13401                           
 13402                           ;battery_charger.c: 64: {
 13403                           ;battery_charger.c: 65: battery_state = FLOAT;
 13404  0C01  3005               	movlw	5
 13405  0C02  0020               	movlb	0	; select bank0
 13406  0C03  00AA               	movwf	??_Battery_State_Machine
 13407  0C04  082A               	movf	??_Battery_State_Machine,w
 13408  0C05  0021               	movlb	1	; select bank1
 13409  0C06  00EE               	movwf	_battery_state^(0+128)
 13410                           
 13411                           ;battery_charger.c: 66: }
 13412                           ;battery_charger.c: 67: }
 13413  0C07  0008               	return
 13414  0C08                     l2821:	
 13415                           
 13416                           ;battery_charger.c: 68: else
 13417                           ;battery_charger.c: 69: {
 13418                           ;battery_charger.c: 70: if(IminCount<10)IminCount+=1;
 13419  0C08  3000               	movlw	0
 13420  0C09  0021               	movlb	1	; select bank1
 13421  0C0A  026D               	subwf	(_IminCount+1)^(0+128),w
 13422  0C0B  300A               	movlw	10
 13423  0C0C  1903               	skipnz
 13424  0C0D  026C               	subwf	_IminCount^(0+128),w
 13425  0C0E  1803               	skipnc
 13426  0C0F  0008               	return
 13427  0C10  3001               	movlw	1
 13428  0C11  07EC               	addwf	_IminCount^(0+128),f
 13429  0C12  3000               	movlw	0
 13430  0C13  3DED               	addwfc	(_IminCount+1)^(0+128),f
 13431                           
 13432                           ;battery_charger.c: 71: }
 13433                           ;battery_charger.c: 72: }
 13434                           ;battery_charger.c: 73: }
 13435  0C14  0008               	return
 13436  0C15                     l2825:	
 13437                           
 13438                           ;battery_charger.c: 74: else if(battery_state == FLOAT)
 13439  0C15  3005               	movlw	5
 13440  0C16  066E               	xorwf	_battery_state^(0+128),w
 13441  0C17  1D03               	btfss	3,2
 13442  0C18  2C22               	goto	l2829
 13443                           
 13444                           ;battery_charger.c: 75: {
 13445                           ;battery_charger.c: 76: { Vref = 1380; };
 13446  0C19  3064               	movlw	100
 13447  0C1A  00E6               	movwf	_Vref^(0+128)
 13448  0C1B  3005               	movlw	5
 13449  0C1C  00E7               	movwf	(_Vref^(0+128)+1)
 13450                           
 13451                           ;battery_charger.c: 77: { Iref = 20; };
 13452  0C1D  3014               	movlw	20
 13453  0C1E  00E8               	movwf	_Iref^(0+128)
 13454  0C1F  3000               	movlw	0
 13455  0C20  00E9               	movwf	(_Iref^(0+128)+1)
 13456                           
 13457                           ;battery_charger.c: 78: }
 13458  0C21  0008               	return
 13459  0C22                     l2829:	
 13460                           
 13461                           ;battery_charger.c: 79: else
 13462                           ;battery_charger.c: 80: if(battery_state == FAULT)
 13463  0C22  036E               	decf	_battery_state^(0+128),w
 13464  0C23  1D03               	btfss	3,2
 13465  0C24  0008               	return
 13466                           
 13467                           ;battery_charger.c: 81: {
 13468                           ;battery_charger.c: 82: { gotoXY(0,0); LCDWriteString("BATTERY FAULT");};
 13469  0C25  01F5               	clrf	gotoXY@y
 13470  0C26  3000               	movlw	0
 13471  0C27  3193  23D9  318B   	fcall	_gotoXY
 13472  0C2A  301B               	movlw	low (STR_1| (0+32768))
 13473  0C2B  0020               	movlb	0	; select bank0
 13474  0C2C  00A8               	movwf	LCDWriteString@characters
 13475  0C2D  3098               	movlw	high (STR_1| (0+32768))
 13476  0C2E  00A9               	movwf	LCDWriteString@characters+1
 13477  0C2F  3180  2005  318B   	fcall	_LCDWriteString
 13478                           
 13479                           ;battery_charger.c: 83: Imode0=0;
 13480  0C32  0020               	movlb	0	; select bank0
 13481  0C33  01EE               	clrf	_Imode0
 13482                           
 13483                           ;battery_charger.c: 84: Imode1=0;
 13484  0C34  0021               	movlb	1	; select bank1
 13485  0C35  01EF               	clrf	_Imode1^(0+128)
 13486                           
 13487                           ;battery_charger.c: 85: _delay((unsigned long)((2000)*(32000000/4000.0)));
 13488  0C36  3052               	movlw	82
 13489  0C37  0020               	movlb	0	; select bank0
 13490  0C38  00AB               	movwf	??_Battery_State_Machine+1
 13491  0C39  302B               	movlw	43
 13492  0C3A  00AA               	movwf	??_Battery_State_Machine
 13493  0C3B  3000               	movlw	0
 13494  0C3C                     u3757:	
 13495  0C3C  0B89               	decfsz	9,f
 13496  0C3D  2C3C               	goto	u3757
 13497  0C3E  0BAA               	decfsz	??_Battery_State_Machine,f
 13498  0C3F  2C3C               	goto	u3757
 13499  0C40  0BAB               	decfsz	??_Battery_State_Machine+1,f
 13500  0C41  2C3C               	goto	u3757
 13501  0C42  0000               	nop
 13502  0C43  0008               	return
 13503  0C44                     __end_of_Battery_State_Machine:	
 13504                           
 13505                           	psect	text37
 13506  13D9                     __ptext37:	
 13507 ;; *************** function _gotoXY *****************
 13508 ;; Defined at:
 13509 ;;		line 124 in file "lcd.c"
 13510 ;; Parameters:    Size  Location     Type
 13511 ;;  x               1    wreg     unsigned char 
 13512 ;;  y               1    5[COMMON] unsigned char 
 13513 ;; Auto vars:     Size  Location     Type
 13514 ;;  x               1    7[COMMON] unsigned char 
 13515 ;; Return value:  Size  Location     Type
 13516 ;;                  1    wreg      void 
 13517 ;; Registers used:
 13518 ;;		wreg, status,2, status,0, pclath, cstack
 13519 ;; Tracked objects:
 13520 ;;		On entry : 0/0
 13521 ;;		On exit  : 0/0
 13522 ;;		Unchanged: 0/0
 13523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13524 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13525 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13526 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13527 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13528 ;;Total ram usage:        3 bytes
 13529 ;; Hardware stack levels used:    1
 13530 ;; Hardware stack levels required when called:    1
 13531 ;; This function calls:
 13532 ;;		_LCDWrite
 13533 ;; This function is called by:
 13534 ;;		_Battery_State_Machine
 13535 ;;		_LCDClear
 13536 ;;		_main
 13537 ;; This function uses a non-reentrant model
 13538 ;;
 13539                           
 13540                           
 13541                           ;psect for function _gotoXY
 13542  13D9                     _gotoXY:	
 13543                           
 13544                           ;incstack = 0
 13545                           ; Regs used in _gotoXY: [wreg+status,2+status,0+pclath+cstack]
 13546                           ;gotoXY@x stored from wreg
 13547  13D9  00F7               	movwf	gotoXY@x
 13548                           
 13549                           ;lcd.c: 126: LCDWrite(0,(uint8_t)(0x80 | x));
 13550  13DA  0877               	movf	gotoXY@x,w
 13551  13DB  3880               	iorlw	128
 13552  13DC  00F6               	movwf	??_gotoXY
 13553  13DD  0876               	movf	??_gotoXY,w
 13554  13DE  00F0               	movwf	LCDWrite@data
 13555  13DF  3000               	movlw	0
 13556  13E0  3194  24DA  3193   	fcall	_LCDWrite
 13557                           
 13558                           ;lcd.c: 127: LCDWrite(0,(uint8_t)(0x40 | y));
 13559  13E3  0875               	movf	gotoXY@y,w
 13560  13E4  3840               	iorlw	64
 13561  13E5  00F6               	movwf	??_gotoXY
 13562  13E6  0876               	movf	??_gotoXY,w
 13563  13E7  00F0               	movwf	LCDWrite@data
 13564  13E8  3000               	movlw	0
 13565  13E9  3194  24DA         	fcall	_LCDWrite
 13566  13EB  0008               	return
 13567  13EC                     __end_of_gotoXY:	
 13568                           
 13569                           	psect	text38
 13570  0005                     __ptext38:	
 13571 ;; *************** function _LCDWriteString *****************
 13572 ;; Defined at:
 13573 ;;		line 176 in file "lcd.c"
 13574 ;; Parameters:    Size  Location     Type
 13575 ;;  characters      2    8[BANK0 ] PTR const unsigned char 
 13576 ;;		 -> STR_1(14), 
 13577 ;; Auto vars:     Size  Location     Type
 13578 ;;		None
 13579 ;; Return value:  Size  Location     Type
 13580 ;;                  1    wreg      void 
 13581 ;; Registers used:
 13582 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13583 ;; Tracked objects:
 13584 ;;		On entry : 0/0
 13585 ;;		On exit  : 0/0
 13586 ;;		Unchanged: 0/0
 13587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13588 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13590 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13591 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13592 ;;Total ram usage:        3 bytes
 13593 ;; Hardware stack levels used:    1
 13594 ;; Hardware stack levels required when called:    2
 13595 ;; This function calls:
 13596 ;;		_LCDWriteCharacter
 13597 ;; This function is called by:
 13598 ;;		_Battery_State_Machine
 13599 ;; This function uses a non-reentrant model
 13600 ;;
 13601                           
 13602                           
 13603                           ;psect for function _LCDWriteString
 13604  0005                     _LCDWriteString:	
 13605  0005                     l2453:	
 13606                           ;lcd.c: 178: while (*characters)
 13607                           
 13608                           ;incstack = 0
 13609                           ; Regs used in _LCDWriteString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 13610                           
 13611  0005  0020               	movlb	0	; select bank0
 13612  0006  0828               	movf	LCDWriteString@characters,w
 13613  0007  0084               	movwf	4
 13614  0008  0829               	movf	LCDWriteString@characters+1,w
 13615  0009  0085               	movwf	5
 13616  000A  0012               	moviw fsr0++
 13617  000B  1903               	btfsc	3,2
 13618  000C  0008               	return
 13619                           
 13620                           ;lcd.c: 179: LCDWriteCharacter(*characters++);
 13621  000D  0020               	movlb	0	; select bank0
 13622  000E  0828               	movf	LCDWriteString@characters,w
 13623  000F  0084               	movwf	4
 13624  0010  0829               	movf	LCDWriteString@characters+1,w
 13625  0011  0085               	movwf	5
 13626  0012  0800               	movf	0,w	;code access
 13627  0013  3197  2748  3180   	fcall	_LCDWriteCharacter
 13628  0016  3001               	movlw	1
 13629  0017  0020               	movlb	0	; select bank0
 13630  0018  07A8               	addwf	LCDWriteString@characters,f
 13631  0019  3000               	movlw	0
 13632  001A  3DA9               	addwfc	LCDWriteString@characters+1,f
 13633  001B  2805               	goto	l2453
 13634  001C                     __end_of_LCDWriteString:	
 13635                           
 13636                           	psect	text39
 13637  1748                     __ptext39:	
 13638 ;; *************** function _LCDWriteCharacter *****************
 13639 ;; Defined at:
 13640 ;;		line 140 in file "lcd.c"
 13641 ;; Parameters:    Size  Location     Type
 13642 ;;  character       1    wreg     const unsigned char 
 13643 ;; Auto vars:     Size  Location     Type
 13644 ;;  character       1    5[BANK0 ] const unsigned char 
 13645 ;;  base            2    6[BANK0 ] unsigned int 
 13646 ;; Return value:  Size  Location     Type
 13647 ;;                  1    wreg      void 
 13648 ;; Registers used:
 13649 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13650 ;; Tracked objects:
 13651 ;;		On entry : 0/0
 13652 ;;		On exit  : 0/0
 13653 ;;		Unchanged: 0/0
 13654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13656 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13657 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13658 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13659 ;;Total ram usage:        6 bytes
 13660 ;; Hardware stack levels used:    1
 13661 ;; Hardware stack levels required when called:    1
 13662 ;; This function calls:
 13663 ;;		_LCDWrite
 13664 ;;		___wmul
 13665 ;; This function is called by:
 13666 ;;		_LCDWriteString
 13667 ;;		_LCDWriteInt
 13668 ;;		_main
 13669 ;; This function uses a non-reentrant model
 13670 ;;
 13671                           
 13672                           
 13673                           ;psect for function _LCDWriteCharacter
 13674  1748                     _LCDWriteCharacter:	
 13675                           
 13676                           ;incstack = 0
 13677                           ; Regs used in _LCDWriteCharacter: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 13678                           ;LCDWriteCharacter@character stored from wreg
 13679  1748  0020               	movlb	0	; select bank0
 13680  1749  00A5               	movwf	LCDWriteCharacter@character
 13681                           
 13682                           ;lcd.c: 142: uint16_t base;
 13683                           ;lcd.c: 143: base = character - 0x20;
 13684  174A  0825               	movf	LCDWriteCharacter@character,w
 13685  174B  3EE0               	addlw	224
 13686  174C  00A6               	movwf	LCDWriteCharacter@base
 13687  174D  30FF               	movlw	255
 13688  174E  1803               	skipnc
 13689  174F  3000               	movlw	0
 13690  1750  00A7               	movwf	LCDWriteCharacter@base+1
 13691                           
 13692                           ;lcd.c: 144: base *= 3;
 13693  1751  3003               	movlw	3
 13694  1752  00F9               	movwf	___wmul@multiplier
 13695  1753  3000               	movlw	0
 13696  1754  00FA               	movwf	___wmul@multiplier+1
 13697  1755  0827               	movf	LCDWriteCharacter@base+1,w
 13698  1756  00FC               	movwf	___wmul@multiplicand+1
 13699  1757  0826               	movf	LCDWriteCharacter@base,w
 13700  1758  00FB               	movwf	___wmul@multiplicand
 13701  1759  3194  245F  3197   	fcall	___wmul
 13702  175C  087A               	movf	?___wmul+1,w
 13703  175D  0020               	movlb	0	; select bank0
 13704  175E  00A7               	movwf	LCDWriteCharacter@base+1
 13705  175F  0879               	movf	?___wmul,w
 13706  1760  00A6               	movwf	LCDWriteCharacter@base
 13707                           
 13708                           ;lcd.c: 145: LCDWrite(1,fonts[base]);
 13709  1761  0827               	movf	LCDWriteCharacter@base+1,w
 13710  1762  0085               	movwf	5
 13711  1763  0826               	movf	LCDWriteCharacter@base,w
 13712  1764  0084               	movwf	4
 13713  1765  3000               	movlw	low (_fonts| (0+32768))
 13714  1766  0784               	addwf	4,f
 13715  1767  3088               	movlw	high (_fonts| (0+32768))
 13716  1768  3D85               	addwfc	5,f
 13717  1769  0800               	movf	0,w	;code access
 13718  176A  00A2               	movwf	??_LCDWriteCharacter
 13719  176B  0822               	movf	??_LCDWriteCharacter,w
 13720  176C  00F0               	movwf	LCDWrite@data
 13721  176D  3001               	movlw	1
 13722  176E  3194  24DA  3197   	fcall	_LCDWrite
 13723                           
 13724                           ;lcd.c: 146: LCDWrite(1,fonts[base + 1]);
 13725  1771  0020               	movlb	0	; select bank0
 13726  1772  0826               	movf	LCDWriteCharacter@base,w
 13727  1773  3E01               	addlw	1
 13728  1774  00A2               	movwf	??_LCDWriteCharacter
 13729  1775  3000               	movlw	0
 13730  1776  3D27               	addwfc	LCDWriteCharacter@base+1,w
 13731  1777  00A3               	movwf	??_LCDWriteCharacter+1
 13732  1778  3000               	movlw	low (_fonts| (0+32768))
 13733  1779  0722               	addwf	??_LCDWriteCharacter,w
 13734  177A  0084               	movwf	4
 13735  177B  3088               	movlw	high (_fonts| (0+32768))
 13736  177C  3D23               	addwfc	??_LCDWriteCharacter+1,w
 13737  177D  0085               	movwf	5
 13738  177E  0800               	movf	0,w	;code access
 13739  177F  00A4               	movwf	??_LCDWriteCharacter+2
 13740  1780  0824               	movf	??_LCDWriteCharacter+2,w
 13741  1781  00F0               	movwf	LCDWrite@data
 13742  1782  3001               	movlw	1
 13743  1783  3194  24DA  3197   	fcall	_LCDWrite
 13744                           
 13745                           ;lcd.c: 147: LCDWrite(1,fonts[base + 2]);
 13746  1786  0020               	movlb	0	; select bank0
 13747  1787  0826               	movf	LCDWriteCharacter@base,w
 13748  1788  3E02               	addlw	2
 13749  1789  00A2               	movwf	??_LCDWriteCharacter
 13750  178A  3000               	movlw	0
 13751  178B  3D27               	addwfc	LCDWriteCharacter@base+1,w
 13752  178C  00A3               	movwf	??_LCDWriteCharacter+1
 13753  178D  3000               	movlw	low (_fonts| (0+32768))
 13754  178E  0722               	addwf	??_LCDWriteCharacter,w
 13755  178F  0084               	movwf	4
 13756  1790  3088               	movlw	high (_fonts| (0+32768))
 13757  1791  3D23               	addwfc	??_LCDWriteCharacter+1,w
 13758  1792  0085               	movwf	5
 13759  1793  0800               	movf	0,w	;code access
 13760  1794  00A4               	movwf	??_LCDWriteCharacter+2
 13761  1795  0824               	movf	??_LCDWriteCharacter+2,w
 13762  1796  00F0               	movwf	LCDWrite@data
 13763  1797  3001               	movlw	1
 13764  1798  3194  24DA  3197   	fcall	_LCDWrite
 13765                           
 13766                           ;lcd.c: 148: LCDWrite(1, 0x00);
 13767  179B  01F0               	clrf	LCDWrite@data
 13768  179C  3001               	movlw	1
 13769  179D  3194  24DA         	fcall	_LCDWrite
 13770  179F  0008               	return
 13771  17A0                     __end_of_LCDWriteCharacter:	
 13772                           
 13773                           	psect	text40
 13774  145F                     __ptext40:	
 13775 ;; *************** function ___wmul *****************
 13776 ;; Defined at:
 13777 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 13778 ;; Parameters:    Size  Location     Type
 13779 ;;  multiplier      2    9[COMMON] unsigned int 
 13780 ;;  multiplicand    2   11[COMMON] unsigned int 
 13781 ;; Auto vars:     Size  Location     Type
 13782 ;;  product         2    0[BANK0 ] unsigned int 
 13783 ;; Return value:  Size  Location     Type
 13784 ;;                  2    9[COMMON] unsigned int 
 13785 ;; Registers used:
 13786 ;;		wreg, status,2, status,0
 13787 ;; Tracked objects:
 13788 ;;		On entry : 0/0
 13789 ;;		On exit  : 0/0
 13790 ;;		Unchanged: 0/0
 13791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13792 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13793 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13795 ;;      Totals:         4       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13796 ;;Total ram usage:        6 bytes
 13797 ;; Hardware stack levels used:    1
 13798 ;; This function calls:
 13799 ;;		Nothing
 13800 ;; This function is called by:
 13801 ;;		_readIAnalog
 13802 ;;		_LCDWriteCharacter
 13803 ;;		_main
 13804 ;;		_eval_poly
 13805 ;; This function uses a non-reentrant model
 13806 ;;
 13807                           
 13808                           
 13809                           ;psect for function ___wmul
 13810  145F                     ___wmul:	
 13811                           
 13812                           ;incstack = 0
 13813                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 13814  145F  0020               	movlb	0	; select bank0
 13815  1460  01A0               	clrf	___wmul@product
 13816  1461  01A1               	clrf	___wmul@product+1
 13817  1462                     l2187:	
 13818  1462  1C79               	btfss	___wmul@multiplier,0
 13819  1463  2C69               	goto	l569
 13820  1464  087B               	movf	___wmul@multiplicand,w
 13821  1465  0020               	movlb	0	; select bank0
 13822  1466  07A0               	addwf	___wmul@product,f
 13823  1467  087C               	movf	___wmul@multiplicand+1,w
 13824  1468  3DA1               	addwfc	___wmul@product+1,f
 13825  1469                     l569:	
 13826  1469  3001               	movlw	1
 13827  146A                     u2035:	
 13828  146A  35FB               	lslf	___wmul@multiplicand,f
 13829  146B  0DFC               	rlf	___wmul@multiplicand+1,f
 13830  146C  0B89               	decfsz	9,f
 13831  146D  2C6A               	goto	u2035
 13832  146E  3001               	movlw	1
 13833  146F                     u2045:	
 13834  146F  36FA               	lsrf	___wmul@multiplier+1,f
 13835  1470  0CF9               	rrf	___wmul@multiplier,f
 13836  1471  0B89               	decfsz	9,f
 13837  1472  2C6F               	goto	u2045
 13838  1473  0879               	movf	___wmul@multiplier,w
 13839  1474  047A               	iorwf	___wmul@multiplier+1,w
 13840  1475  1D03               	btfss	3,2
 13841  1476  2C62               	goto	l2187
 13842  1477  0020               	movlb	0	; select bank0
 13843  1478  0821               	movf	___wmul@product+1,w
 13844  1479  00FA               	movwf	?___wmul+1
 13845  147A  0820               	movf	___wmul@product,w
 13846  147B  00F9               	movwf	?___wmul
 13847  147C  0008               	return
 13848  147D                     __end_of___wmul:	
 13849                           
 13850                           	psect	text41
 13851  14DA                     __ptext41:	
 13852 ;; *************** function _LCDWrite *****************
 13853 ;; Defined at:
 13854 ;;		line 281 in file "lcd.c"
 13855 ;; Parameters:    Size  Location     Type
 13856 ;;  data_or_comm    1    wreg     unsigned char 
 13857 ;;  data            1    0[COMMON] unsigned char 
 13858 ;; Auto vars:     Size  Location     Type
 13859 ;;  data_or_comm    1    2[COMMON] unsigned char 
 13860 ;;  i               1    4[COMMON] unsigned char 
 13861 ;;  d               1    3[COMMON] unsigned char 
 13862 ;; Return value:  Size  Location     Type
 13863 ;;                  1    wreg      void 
 13864 ;; Registers used:
 13865 ;;		wreg, status,2, status,0
 13866 ;; Tracked objects:
 13867 ;;		On entry : 0/0
 13868 ;;		On exit  : 0/0
 13869 ;;		Unchanged: 0/0
 13870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13871 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13872 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13873 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13874 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13875 ;;Total ram usage:        5 bytes
 13876 ;; Hardware stack levels used:    1
 13877 ;; This function calls:
 13878 ;;		Nothing
 13879 ;; This function is called by:
 13880 ;;		_gotoXY
 13881 ;;		_LCDWriteCharacter
 13882 ;;		_LCDClear
 13883 ;;		_LCDInit
 13884 ;; This function uses a non-reentrant model
 13885 ;;
 13886                           
 13887                           
 13888                           ;psect for function _LCDWrite
 13889  14DA                     _LCDWrite:	
 13890                           
 13891                           ;incstack = 0
 13892                           ; Regs used in _LCDWrite: [wreg+status,2+status,0]
 13893                           ;LCDWrite@data_or_command stored from wreg
 13894  14DA  00F2               	movwf	LCDWrite@data_or_command
 13895                           
 13896                           ;lcd.c: 283: uint8_t i,d;
 13897                           ;lcd.c: 285: d=data;
 13898  14DB  0870               	movf	LCDWrite@data,w
 13899  14DC  00F1               	movwf	??_LCDWrite
 13900  14DD  0871               	movf	??_LCDWrite,w
 13901  14DE  00F3               	movwf	LCDWrite@d
 13902                           
 13903                           ;lcd.c: 287: if(data_or_command == 0)
 13904  14DF  0872               	movf	LCDWrite@data_or_command,w
 13905  14E0  1D03               	btfss	3,2
 13906  14E1  2CE5               	goto	l217
 13907                           
 13908                           ;lcd.c: 288: {
 13909                           ;lcd.c: 289: LATAbits.LATA2 = 0;
 13910  14E2  0020               	movlb	0	; select bank0
 13911  14E3  1116               	bcf	22,2	;volatile
 13912                           
 13913                           ;lcd.c: 290: }
 13914  14E4  2CE7               	goto	l218
 13915  14E5                     l217:	
 13916                           
 13917                           ;lcd.c: 291: else
 13918                           ;lcd.c: 292: {
 13919                           ;lcd.c: 293: LATAbits.LATA2 = 1;
 13920  14E5  0020               	movlb	0	; select bank0
 13921  14E6  1516               	bsf	22,2	;volatile
 13922  14E7                     l218:	
 13923                           
 13924                           ;lcd.c: 294: }
 13925                           ;lcd.c: 296: LATAbits.LATA1 = 0;
 13926  14E7  1096               	bcf	22,1	;volatile
 13927                           
 13928                           ;lcd.c: 298: for(i=0;i<8;i++)
 13929  14E8  01F4               	clrf	LCDWrite@i
 13930  14E9  3008               	movlw	8
 13931  14EA  0274               	subwf	LCDWrite@i,w
 13932  14EB  1803               	btfsc	3,0
 13933  14EC  2CFD               	goto	l220
 13934  14ED                     l219:	
 13935                           
 13936                           ;lcd.c: 299: {
 13937                           ;lcd.c: 300: LATAbits.LATA3 = 0;
 13938  14ED  1196               	bcf	22,3	;volatile
 13939                           
 13940                           ;lcd.c: 302: if(d&0x80)
 13941  14EE  1FF3               	btfss	LCDWrite@d,7
 13942  14EF  2CF1               	goto	l221
 13943                           
 13944                           ;lcd.c: 303: {
 13945                           ;lcd.c: 304: LATAbits.LATA3 = 1;
 13946  14F0  1596               	bsf	22,3	;volatile
 13947  14F1                     l221:	
 13948                           
 13949                           ;lcd.c: 305: }
 13950                           ;lcd.c: 307: LATAbits.LATA4 = 1;
 13951  14F1  1616               	bsf	22,4	;volatile
 13952                           
 13953                           ;lcd.c: 309: d<<=1;
 13954  14F2  1003               	clrc
 13955  14F3  0DF3               	rlf	LCDWrite@d,f
 13956                           
 13957                           ;lcd.c: 311: LATAbits.LATA4=0;
 13958  14F4  1216               	bcf	22,4	;volatile
 13959  14F5  3001               	movlw	1
 13960  14F6  00F1               	movwf	??_LCDWrite
 13961  14F7  0871               	movf	??_LCDWrite,w
 13962  14F8  07F4               	addwf	LCDWrite@i,f
 13963  14F9  3008               	movlw	8
 13964  14FA  0274               	subwf	LCDWrite@i,w
 13965  14FB  1C03               	skipc
 13966  14FC  2CED               	goto	l219
 13967  14FD                     l220:	
 13968                           
 13969                           ;lcd.c: 312: }
 13970                           ;lcd.c: 314: LATAbits.LATA1 = 1;
 13971  14FD  1496               	bsf	22,1	;volatile
 13972  14FE  0008               	return
 13973  14FF                     __end_of_LCDWrite:	
 13974  007E                     btemp	set	126	;btemp
 13975  007E                     wtemp0	set	126


Data Sizes:
    Strings     14
    Constant    330
    Data        10
    BSS         66
    Persistent  11
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     76      79
    BANK1            80     35      80
    BANK2            80      0      39
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5             8      0       0
    BANK6             0      0       0
    BANK7             0      0       0
    BANK8             0      0       0
    BANK9             0      0       0
    BANK10            0      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 27
		 -> log@coeff(CODE[27]), 

    LCDWriteString@characters	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_1(CODE[14]), 


Critical Paths under _main in COMMON

    _main->___awtoft
    _tempCalc->___awtoft
    _log->___awtoft
    ___ftmul->___awtoft
    ___ftadd->___awtoft
    _readIAnalog->___wmul
    _readButton->_ADCRead
    _calculateCurrent1->___awtoft
    _calculateCurrent0->___awtoft
    ___fttol->___awtoft
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    _SYSTEM_Initialize->_LCDClear
    _LCDInit->_LCDWrite
    _LCDClear->_gotoXY
    _Battery_State_Machine->_LCDWriteString
    _gotoXY->_LCDWrite
    _LCDWriteCharacter->___wmul
    ___wmul->___awdiv

Critical Paths under _main in BANK0

    _main->_tempCalc
    _tempCalc->_log
    _log->_eval_poly
    _eval_poly->___ftadd
    ___ftmul->___ftdiv
    ___ftsub->___ftadd
    ___ftadd->___ftmul
    _readIAnalog->___aldiv
    _calculateCurrent1->___fttol
    _calculateCurrent0->___fttol
    ___fttol->___ftdiv
    _LCDWriteInt->_LCDWriteCharacter
    _Battery_State_Machine->_LCDWriteString
    _LCDWriteString->_LCDWriteCharacter
    _LCDWriteCharacter->___wmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                39    39      0   81983
                                             72 BANK0      4     4      0
                                              0 BANK1     35    35      0
                            _ADCRead
              _Battery_State_Machine
                           _LCDClear
                            _LCDInit
                  _LCDWriteCharacter
                        _LCDWriteInt
                 _PWM1_LoadDutyValue
                 _PWM6_LoadDutyValue
                 _PWM7_LoadDutyValue
                  _SYSTEM_Initialize
                            ___awdiv
                           ___awtoft
                            ___ftdiv
                            ___ftmul
                            ___fttol
                             ___wmul
                  _calculateCurrent0
                  _calculateCurrent1
                         _cc_cv_mode
                             _gotoXY
                         _readButton
                        _readIAnalog
                           _tempCalc
 ---------------------------------------------------------------------------------
 (1) _tempCalc                                            11     9      2   33454
                                             61 BANK0     11     9      2
                            _ADCRead (ARG)
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftsub
                            ___fttol
                                _log
 ---------------------------------------------------------------------------------
 (2) _log                                                  6     3      3   17015
                                             55 BANK0      6     3      3
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _frexp                                                6     2      4     330
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) _eval_poly                                           10     3      7    7527
                                             45 BANK0     10     3      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             16    10      6    2961
                                             16 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                           ___ftpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6     322
                                              0 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3462
                                             45 BANK0      6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             13     7      6    3289
                                             32 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (1) _readIAnalog                                         24    22      2    1710
                                              6 BANK0     24    22      2
                            _ADCRead
                            ___aldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     406
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _readButton                                           2     2      0      22
                                              4 COMMON     2     2      0
                            _ADCRead
 ---------------------------------------------------------------------------------
 (2) _ADCRead                                              4     1      3      22
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _cc_cv_mode                                           1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _calculateCurrent1                                    3     3      0    6422
                                             30 BANK0      3     3      0
                           ___awtoft
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (1) _calculateCurrent0                                    3     3      0    6422
                                             30 BANK0      3     3      0
                           ___awtoft
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     517
                                             16 BANK0     14    10      4
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    3577
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
                           ___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             6     3      3    2328
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    1707
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    2     2      0    3529
                                             11 COMMON     2     2      0
                     _ADC_Initialize
         _Init_Battery_State_Machine
                           _LCDClear
                            _LCDInit
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PWM_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCDInit                                              1     1      0     803
                                              5 COMMON     1     1      0
                           _LCDWrite
 ---------------------------------------------------------------------------------
 (2) _LCDClear                                             3     3      0    2703
                                              8 COMMON     3     3      0
                           _LCDWrite
                             _gotoXY
 ---------------------------------------------------------------------------------
 (2) _Init_Battery_State_Machine                           1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM7_LoadDutyValue                                   4     2      2      97
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _PWM6_LoadDutyValue                                   4     2      2      97
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _PWM1_LoadDutyValue                                   4     2      2      97
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCDWriteInt                                         16    11      5    7055
                                              8 BANK0     16    11      5
                            _ADCRead (ARG)
                  _LCDWriteCharacter
                            ___awdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     265
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     830
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _Battery_State_Machine                                2     2      0    3807
                                             10 BANK0      2     2      0
                     _LCDWriteString
                             _gotoXY
 ---------------------------------------------------------------------------------
 (1) _gotoXY                                               3     2      1    1854
                                              5 COMMON     3     2      1
                           _LCDWrite
 ---------------------------------------------------------------------------------
 (2) _LCDWriteString                                       3     1      2    1953
                                             13 COMMON     1     1      0
                                              8 BANK0      2     0      2
                  _LCDWriteCharacter
 ---------------------------------------------------------------------------------
 (2) _LCDWriteCharacter                                    6     6      0    1855
                                              2 BANK0      6     6      0
                           _LCDWrite
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     940
                                              9 COMMON     4     0      4
                                              0 BANK0      2     2      0
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCDWrite                                             5     4      1     803
                                              0 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCRead
   _Battery_State_Machine
     _LCDWriteString
       _LCDWriteCharacter
         _LCDWrite
         ___wmul
           ___awdiv (ARG)
     _gotoXY
       _LCDWrite
   _LCDClear
     _LCDWrite
     _gotoXY
       _LCDWrite
   _LCDInit
     _LCDWrite
   _LCDWriteCharacter
     _LCDWrite
     ___wmul
       ___awdiv (ARG)
   _LCDWriteInt
     _ADCRead (ARG)
     _LCDWriteCharacter (ARG)
       _LCDWrite
       ___wmul
         ___awdiv (ARG)
     ___awdiv (ARG)
     ___lwmod (ARG)
   _PWM1_LoadDutyValue
   _PWM6_LoadDutyValue
   _PWM7_LoadDutyValue
   _SYSTEM_Initialize
     _ADC_Initialize
     _Init_Battery_State_Machine
     _LCDClear
       _LCDWrite
       _gotoXY
         _LCDWrite
     _LCDInit
       _LCDWrite
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM_Initialize
     _TMR2_Initialize
     _TMR4_Initialize
   ___awdiv
   ___awtoft
     ___ftpack
   ___ftdiv
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)
     ___ftpack (ARG)
   ___ftmul
     ___awtoft (ARG)
       ___ftpack
     ___ftdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftpack (ARG)
     _frexp (ARG)
   ___fttol
     ___awtoft (ARG)
       ___ftpack
     ___ftdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
   ___wmul
     ___awdiv (ARG)
   _calculateCurrent0
     ___awtoft
       ___ftpack
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
   _calculateCurrent1
     ___awtoft
       ___ftpack
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
   _cc_cv_mode
   _gotoXY
     _LCDWrite
   _readButton
     _ADCRead
   _readIAnalog
     _ADCRead
     ___aldiv
     ___wmul
       ___awdiv (ARG)
   _tempCalc
     _ADCRead (ARG)
     ___awtoft (ARG)
       ___ftpack
     ___ftadd (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
       _frexp (ARG)
     ___ftdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftsub (ARG)
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
         _frexp (ARG)
     ___fttol (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
     _log (ARG)
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
         _frexp (ARG)
       ___ftge
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       _eval_poly
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
           _frexp (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___wmul
           ___awdiv (ARG)
       _frexp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4C      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     23      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      27       9       48.8%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5                8      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      D4      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BANK8                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BANK9                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK10               0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      D4      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu Jul 05 21:34:29 2018

                                  _j 00C0               LCDWriteInt@fieldLength 002A  
            __size_of_PWM_Initialize 001F                          __CFG_CP$OFF 0000  
                                 l60 13FA                                   l57 13F3  
                       ___awdiv@sign 0076                  ___wmul@multiplicand 007B  
        __size_of_PWM6_LoadDutyValue 0016                         ___ftadd@exp1 004C  
                       ___ftadd@exp2 004B                          __CFG_LVP$ON 0000  
                       ___ftadd@sign 004A                                  l111 0BCC  
                                l220 14FD                                  l221 14F1  
                                l133 09EB                                  l217 14E5  
                                l129 09C9                                  l218 14E7  
                                l219 14ED                        LCDClear@index 0079  
                                l624 0A27                                  l730 0980  
                                l821 0B05                                  l569 1469  
                                l737 0993                                  l761 0FA9  
                                l738 099B                                  _GIE 005F  
                                _RB2 006A                         __CFG_CPD$OFF 0000  
                                _log 0CED                      __end_of_ADCRead 1401  
                    _TMR2_Initialize 13BD                         __CFG_BORV$LO 0000  
                                wreg 0009                      __end_of_LCDInit 15F7  
                       ?_LCDWriteInt 0028                         __CFG_ZCD$OFF 0000  
                       ___ftdiv@cntr 002A                         ___ftdiv@sign 002F  
                               l3001 1686                                 l2141 0967  
                               l2205 0F32                                 l2151 098D  
                               l2143 096C                                 l2135 0956  
                               l3007 16CB                                 l2215 0F48  
                               l3031 02B9                                 l2233 0F75  
                               l2209 0F39                                 l2305 0E21  
                               l3113 0400                                 l2139 095D  
                               l2251 0FBB                                 l2235 0F7F  
                               l2227 0F62                                 l3131 0450  
                               l3107 03E9                                 l3051 02F2  
                               l2149 0985                                 l2341 14C4  
                               l2245 0F9B                                 l2237 0F84  
                               l2309 0E29                                 l3117 0407  
                               l3045 02D3                                 l2255 0FCD  
                               l2247 0FA5                                 l2239 0F88  
                               l3135 045E                                 l3127 0448  
                               l3039 02CD                                 l2601 0A48  
                               l2265 0FE8                                 l2353 1623  
                               l2281 0DCA                                 l3145 0481  
                               l3129 044D                                 l3081 038B  
                               l3057 031E                                 l2187 1462  
                               l2611 0A76                                 l2603 0A56  
                               l2275 0DB4                                 l2453 0005  
                               l2461 150C                                 l2701 0CCB  
                               l2349 160D                                 l2293 0E05  
                               l2373 1644                                 l3093 03AE  
                               l2631 1701                                 l2615 0A81  
                               l2391 17F9                                 l3255 07B9  
                               l3087 03A5                                 l2713 1485  
                               l2297 0E0D                                 l3089 03AA  
                               l2811 0BDB                                 l2467 1520  
                               l2723 0AB1                                 l2619 0A8F  
                               l2821 0C08                                 l2637 170C  
                               l2741 0AE1                                 l2573 0D1F  
                               l2663 1743                                 l2655 1732  
                               l2647 1714                                 l2751 0B08  
                               l2743 0AEF                                 l2903 0B88  
                               l2911 0BA4                                 l2567 0D0C  
                               l2825 0C15                                 l2809 0BD0  
                               l2649 1720                                 l2673 0C5B  
                               l2593 0A38                                 l2659 173B  
                               l2755 0B16                                 l2829 0C22  
                               l2773 1543                                 l2693 0CB2  
                               l2749 0AFC                                 l2853 09D5  
                               l2909 0BA2                                 l2767 152B  
                               l2943 0EAA                                 l2927 0E72  
                               l2679 0C71                                 l2769 1537  
                               l2777 154C                                 l2961 0EF5  
                               l2945 0EAE                                 l2937 0E79  
                               l2849 09CF                                 l2955 0EC0  
                               l2947 0EB6                                 l2939 0EA6  
                               l2883 0B5D                                 l2795 025C  
                               l2957 0EE7                                 l2949 0EBC  
                               l2877 0B43                                 l2887 0B6F  
                               l2897 0B7D                                 l2889 0B71  
                               ?_log 0057                                 STR_1 181B  
                               u2035 146A                                 u2045 146F  
                               _LATA 0016                                 _LATB 0017  
                               u3015 014F                                 u2215 0F89  
                               _LATC 0018                                 u3105 0BC4  
                               u3025 01A9                                 u3035 01E7  
                               u2155 0F63                                 u2315 0DD6  
                               u3045 0236                                 u2245 0F9C  
                               u2325 0DE6                                 u3135 0BF3  
                               u2520 15BA                                 u2505 150A  
                               u3305 0B67                                 u2185 0F76  
                               u2345 0E0E                                 _T2PR 028D  
                               u2515 151E                                 u3235 09F6  
                               u3075 0268                                 u2355 0E14  
                               u3350 0E5C                                 u3095 0BB6  
                               u3415 0ED5                                 u2615 0A57  
                               u1905 097B                                 u3185 09BD  
                               u3265 0B31                                 u2625 0A6B  
                               u2385 0E2A                                 _T4PR 0293  
                               u2715 1721                                 u3275 0B3D  
                               u2635 0A77                                 u2395 0E30  
                               u2725 172B                                 u3445 1426  
                               u1925 0988                                 u2805 0CB3  
                               u3285 0B4D                                 u2735 1733  
                               u3455 143C                                 u2815 0CC2  
                               u3295 0B59                                 u3615 03E2  
                               u3465 1410                                 u2825 0CCC  
                               u3475 1680                                 u2595 0A4B  
                               u3635 03F9                                 u1965 09A2  
                               u1885 0962                                 u2925 0AFD  
                               u3485 16C5                                 u3717 02C1  
                               u2695 1717                                 u3727 0B93  
                               u3575 039A                                 u3737 156E  
                               u2785 0C83                                 u2865 0AB8  
                               u3665 0426                                 u3747 157D  
                               u2795 0C93                                 u3675 0441  
                               u3757 0C3C                                 u2965 152E  
                               u2895 0AE2                                 u2985 153D  
                               u2995 1544                  tempCalc@analogValue 005D  
                               _WPUA 0F39                                 _WPUB 0F44  
                               _WPUC 0F4F                                 _WPUE 0F65  
                               _Imin 0145                                 _Iref 00E8  
                               _Iout 00BC                         __CFG_WRT$OFF 0000  
                      __CFG_FCMEN$ON 0000                                 _Vref 00E6  
                               _main 0285                         ___ftpack@arg 0070  
                       ___ftpack@exp 0073                        _state_counter 00EA  
                               fsr0h 0005                                 fsr1h 0007  
                               indf0 0000                                 fsr0l 0004  
                               indf1 0001                                 fsr1l 0006  
                               btemp 007E                                 log@x 0057  
                       ?_readIAnalog 0026                        __CFG_BOREN$ON 0000  
                               start 0002                        __CFG_CSWEN$ON 0000  
                      __CFG_MCLRE$ON 0000                         ___ftmul@cntr 003E  
                       ___ftmul@sign 003F                     __end_of_LCDClear 1525  
                       ___fttol@exp1 003D                                ??_log 005A  
                       ___fttol@lval 0039  __size_of_Init_Battery_State_Machine 001C  
     __size_of_OSCILLATOR_Initialize 0009                     __end_of_LCDWrite 14FF  
      __end_of_OSCILLATOR_Initialize 13B1                      __end_of___aldiv 0A98  
                              _ADACQ 009D                                _ADACT 0099  
                              _ADCAP 009B                                ?_main 0070  
                              _ADCLK 0098                                _ADPCH 009E  
                              _ADREF 009A                      __end_of___awdiv 1748  
                              _ADPRE 009C                      __end_of___ftadd 1000  
                      __CFG_WDTE$OFF 0000                                _ADRPT 010D  
                    __end_of___ftdiv 0CED                      __end_of___ftmul 0E51  
                    ___awdiv@divisor 0070                      __end_of___ftsub 149B  
                    __end_of___fttol 0B1F                                _T2CON 028E  
                              _LATA5 00B5                                _T4CON 0294  
                              _T2HLT 028F                                _T4HLT 0295  
                              _T2TMR 028C                                _T2RST 0291  
                    __end_of___lwmod 1551                                _T4TMR 0292  
                              _T4RST 0297                      ___awdiv@counter 0075  
                              _OSCEN 0891                                _TRISA 0011  
                              _TRISB 0012                                _TRISC 0013  
                    _TMR4_Initialize 13CB               ?_Battery_State_Machine 0070  
                              _cc_cv 00C2                        ___awtoft@sign 007D  
                              _frexp 1632                                _fonts 0800  
                              _errno 00B8                        ___ftpack@sign 0074  
                              main@j 00E3                         main@slowLoop 00CE  
                              status 0003                                wtemp0 007E  
                    __initialization 07BC                          log@exponent 005B  
                       __end_of_main 07BC              __end_of_TMR2_Initialize 13CB  
                          ??_ADCRead 0073                               ??_main 0068  
                      ___fttol@sign1 0038                            ??_LCDInit 0075  
            LCDWrite@data_or_command 0072                               _ADCON0 0093  
                             _ADCON1 0094                               _ADCON2 0095  
                             _ADCON3 0096                               ?_frexp 0070  
                             _ADLTHH 010F                               _ADLTHL 010E  
                             _ADRESH 008D                               _ADRESL 008C  
                             _CCPR1H 030D                               _CCPR1L 030C  
                             _ADSTAT 0097                               _ADUTHH 0111  
                   ___awdiv@dividend 0072                               _ADUTHL 0110  
                   __end_of___awtoft 14DA                               _ANSELA 0F38  
                             _ANSELB 0F43                               _ANSELC 0F4E  
                   __end_of___ftpack 09B2                               _RB0PPS 0F18  
                             _RA6PPS 0F16                               _RA7PPS 0F17  
                     __CFG_WDTCCS$SC 0000                               _FVRCON 090C  
                             _OSCFRQ 0893                       __CFG_PWRTE$OFF 0000  
                             _Imode0 006E                               _Imode1 00EF  
                     _LCDWriteString 0005                         _CCPTMRS0bits 021E  
                       _CCPTMRS1bits 021F                               ___ftge 15F7  
                          ??___aldiv 0078                               ___wmul 145F  
                          ??___awdiv 0074                            ??___ftadd 0046  
                     __CFG_STVREN$ON 0000                       _PWM_Initialize 092F  
                          ??___ftdiv 0026                            ??___ftmul 0036  
                          ??___ftsub 007E                            ??___fttol 0034  
                          ??___lwmod 0074                               _gotoXY 13D9  
                             _button 006D              __end_of_TMR4_Initialize 13D9  
                   ___awdiv@quotient 0077                               _totals 0120  
              ___ftmul@f3_as_product 003B                     __end_of_tempCalc 0139  
                       LCDWrite@data 0070                         LCDWriteInt@i 0037  
                       LCDWriteInt@j 0036                            ?_LCDClear 0070  
                  _SYSTEM_Initialize 1551                 __size_of_LCDWriteInt 00B9  
                   __end_oflog@coeff 181B              __end_of__initialization 07FD  
                         ___ftadd@f1 0040                           ___ftadd@f2 0043  
                         ___ftge@ff1 0070                           ___ftge@ff2 0073  
                          ?_LCDWrite 0070                   ?_SYSTEM_Initialize 0070  
             __end_of_LCDWriteString 001C                         eval_poly@res 0054  
                         ___ftdiv@f1 0023                           ___ftdiv@f2 0020  
                         ___ftdiv@f3 002B                           ___awtoft@c 0078  
                         ___ftmul@f1 0030                           ___ftmul@f2 0033  
             __end_of_PWM_Initialize 094E                 __size_of_readIAnalog 014C  
                         ___ftsub@f1 0050                           ___ftsub@f2 004D  
                         ___fttol@f1 0030                       __pcstackCOMMON 0070  
                       __pidataBANK0 0004                         __pidataBANK1 139F  
                       __pidataBANK2 13A0                  ??_SYSTEM_Initialize 007B  
                      __end_of_frexp 166D                        __end_of_fonts 092F  
                          LCDWrite@d 0073                            LCDWrite@i 0074  
                 _PWM1_LoadDutyValue 1401                     ?_TMR2_Initialize 0070  
                         _cc_cv_mode 09B2          __size_of_PWM7_LoadDutyValue 0016  
                     main@efficiency 00D9                  ?_PWM1_LoadDutyValue 0070  
                  LCDWriteInt@F14388 0138                    _calculateCurrent0 166D  
                  _calculateCurrent1 16B2                              ??_frexp 0074  
          __end_of_SYSTEM_Initialize 1585                           __pbssBANK0 006C  
                         __pbssBANK1 00A0                           __pbssBANK2 0120  
                 ?_calculateCurrent0 0070                   ?_calculateCurrent1 0070  
                 __size_of_eval_poly 0060                           ??_LCDClear 0078  
                     main@faultCount 00C5                           ??_LCDWrite 0071  
                    ?_LCDWriteString 0028                 ??_PWM1_LoadDutyValue 0072  
                ??_calculateCurrent0 003E                  ??_calculateCurrent1 003E  
                    ?_PWM_Initialize 0070                           __pmaintext 0285  
                            ?___ftge 0070                              ?___wmul 0079  
                    __CFG_PPS1WAY$ON 0000           __end_of_PWM6_LoadDutyValue 142D  
                            ?_gotoXY 0075                              _ADCRead 13EC  
                   ?_TMR4_Initialize 0070                            ?___awtoft 0078  
                          ?___ftpack 0070                              _ADSTPTH 0113  
                            _ADSTPTL 0112             __CFG_SCANE$not_available 0000  
                __CFG_RSTOSC$HFINT32 0000              __size_of_ADC_Initialize 001F  
            ??_Battery_State_Machine 002A                              _LCDInit 15BC  
          __end_of_calculateCurrent0 16B2            __end_of_calculateCurrent1 16F7  
                            _OSCCON1 088D                              _OSCCON3 088F  
                            _OSCTUNE 0892                              _PWM6DCH 038D  
                            _PWM6DCL 038C                              _PWM7DCH 0391  
                            _PWM7DCL 0390                              _PWM6CON 038E  
                            _PWM7CON 0392                              _PPSLOCK 0E8F  
                     main@menuButton 00DC                       main@dutyCycle1 00DF  
                     main@dutyCycle6 00E4                       main@dutyCycle7 00DD  
                         _lastButton 006C                            ?_tempCalc 005D  
                            ___aldiv 0A16                      __size_of___ftge 003B  
                            ___awdiv 16F7                              ___ftadd 0F0A  
                         _readButton 0B1F                              ___ftdiv 0C44  
                    __size_of___wmul 001E                              ___ftmul 0D9D  
                            ___ftsub 147D                              ___fttol 0A98  
                 main@displayRefresh 00CF                              ___lwmod 1525  
                    __size_of_gotoXY 0013                           ??___awtoft 007B  
                         ??___ftpack 0075                    __end_of_eval_poly 1800  
                            __ptext1 001C                              __ptext2 0CED  
                            __ptext3 1632                              __ptext4 17A0  
                            __ptext5 0D9D                              __ptext6 15F7  
                            __ptext7 147D                              __ptext8 0F0A  
                            __ptext9 0139                          ?_cc_cv_mode 0070  
              _OSCILLATOR_Initialize 13A8                            _T2CONbits 028E  
                            _current 00A8                         __size_of_log 00B0  
                     ADCRead@channel 0073                     ___aldiv@dividend 0074  
                          _T4CONbits 0294             ??_PIN_MANAGER_Initialize 0070  
                            _samples 2198           __size_of_SYSTEM_Initialize 0034  
                            clrloop0 13B2                              _voltage 00B0  
       ??_Init_Battery_State_Machine 0070                 end_of_initialization 07FD  
              LCDWriteCharacter@base 0026                              gotoXY@x 0077  
                            gotoXY@y 0075                           ??_tempCalc 007E  
                   ___aldiv@quotient 0022                    _LCDWriteCharacter 1748  
              __CFG_WDTCPS$WDTCPS_31 0000                   ?_LCDWriteCharacter 0070  
         __size_of_calculateCurrent0 0045           __size_of_calculateCurrent1 0045  
                          _TRISAbits 0011                  ??_LCDWriteCharacter 0022  
                   __CFG_FEXTOSC$OFF 0000         PWM1_LoadDutyValue@dutyCycle1 0070  
                        _CCP1CONbits 030E                          ___ftdiv@exp 002E  
                __size_of_cc_cv_mode 0064                    __size_of_LCDClear 0026  
         LCDWriteCharacter@character 0025                    __size_of_LCDWrite 0025  
                        ___ftmul@exp 003A            __end_of_LCDWriteCharacter 17A0  
                        ?_readButton 0070            readIAnalog@analog_channel 003A  
                     __end_of___ftge 1632                            _VHoldMode 00C1  
                     __end_of___wmul 147D                       _ADC_Initialize 149B  
                     __end_of_gotoXY 13EC               ?_OSCILLATOR_Initialize 0070  
                          _IminCount 00EC                  start_initialization 07BC  
                         eval_poly@d 0050                           eval_poly@n 0052  
                         eval_poly@x 004D                    main@faultNotReset 00C7  
    __size_of_PIN_MANAGER_Initialize 0037                          __end_of_log 0D9D  
                      ??_LCDWriteInt 002D                     ??_LCDWriteString 007D  
                         frexp@value 0070                     ??_PWM_Initialize 0070  
                      ??_readIAnalog 0028                      main@batteryTemp 00C3  
                   __CFG_LPBOREN$OFF 0000                             ??___ftge 0076  
                  tempCalc@steinhart 0065                             ??___wmul 007D  
             __end_of_ADC_Initialize 14BA                        _tempCalc$1285 0062  
                        __pdataBANK0 006E                          __pdataBANK1 00EF  
                        __pdataBANK2 013D           __end_of_PWM7_LoadDutyValue 1443  
                           ??_gotoXY 0076                             ?_ADCRead 0070  
       PWM7_LoadDutyValue@dutyCycle7 0070                    __size_of___awtoft 0020  
                           ?_LCDInit 0070                    __size_of___ftpack 0064  
                        __pbssBIGRAM 2198       __size_of_Battery_State_Machine 009E  
      __end_of_Battery_State_Machine 0C44                            ___latbits 0002  
                      __pcstackBANK0 0020                        __pcstackBANK1 00C3  
                 _PWM6_LoadDutyValue 1417             __size_of_TMR2_Initialize 000E  
                      _battery_state 00EE   __end_of_Init_Battery_State_Machine 145F  
         _Init_Battery_State_Machine 1443                  __size_of_readButton 0087  
                ?_PWM6_LoadDutyValue 0070                  __end_of_LCDWriteInt 0F0A  
                          __pnvBANK1 00E6                            __pnvBANK2 0145  
        __size_of_PWM1_LoadDutyValue 0016                            _main$1286 00D0  
                          _main$1287 00C9                            _main$1288 00D5  
                          _main$1289 00D7               _PIN_MANAGER_Initialize 1585  
         __size_of_LCDWriteCharacter 0058                             ?___aldiv 0070  
                __end_of_readIAnalog 0285                    __size_of_tempCalc 011D  
                           ?___awdiv 0070                             ?___ftadd 0040  
                           ?___ftdiv 0020                             ?___ftmul 0030  
                           ?___ftsub 004D                             ?___fttol 0030  
                   LCDWriteInt@value 0028                             ?___lwmod 0070  
                    ?_ADC_Initialize 0070                 ??_PWM6_LoadDutyValue 0072  
                       ??_cc_cv_mode 0070                            _eval_poly 17A0  
           __size_of_TMR4_Initialize 000E                       __size_of_frexp 003B  
                           _T2CLKCON 0290                             _T4CLKCON 0296  
                           _LCDClear 14FF                      ___aldiv@divisor 0070  
                    ___aldiv@counter 0020                       ___wmul@product 0020  
                           _LATAbits 0016                             _LCDWrite 14DA  
                          clear_ram0 13B1                             _PIE0bits 0716  
                 __end_of_cc_cv_mode 0A16                             _PIR4bits 0710  
                   readIAnalog@value 003C                            main@MPPT0 00E1  
                          main@MPPT1 00CC                     __size_of_ADCRead 0015  
                         _ADCON0bits 0093                    ___wmul@multiplier 0079  
                         ?_eval_poly 004D                     __size_of_LCDInit 003B  
                           _Ianalogs 0130                          _LCDWriteInt 0E51  
                  ??_TMR2_Initialize 0070                          _readIAnalog 0139  
                          frexp@eptr 0073                             _Vanalogs 00A0  
                       ??_readButton 0074              ??_OSCILLATOR_Initialize 0070  
               LCDWriteInt@numPlaces 002B                     __size_of___aldiv 0082  
                   __size_of___awdiv 0051                     __size_of___ftadd 00F6  
                   __size_of___ftdiv 00A9                     __size_of___ftmul 00B4  
                   __size_of___ftsub 001E                     __size_of___fttol 0087  
                   __size_of___lwmod 002C                          _readButtons 00BA  
                           ___awtoft 14BA                             ___ftpack 094E  
                           _channels 013D                             __ptext10 0A16  
                           __ptext11 0B1F                             __ptext20 1551  
                           __ptext12 13EC                             __ptext21 13CB  
                           __ptext13 09B2                             __ptext30 142D  
                           __ptext22 13BD                             __ptext14 16B2  
                           __ptext31 1417                             __ptext23 092F  
                           __ptext15 166D                             __ptext40 145F  
                           __ptext32 1401                             __ptext24 1585  
                           __ptext16 0A98                             __ptext41 14DA  
                           __ptext33 0E51                             __ptext25 13A8  
                           __ptext17 0C44                             __ptext34 1525  
                           __ptext26 15BC                             __ptext18 14BA  
                           __ptext35 16F7                             __ptext27 14FF  
                           __ptext19 094E                             __ptext36 0BA6  
                           __ptext28 1443                             __ptext37 13D9  
                           __ptext29 149B                             __ptext38 0005  
                           __ptext39 1748                      LCDWriteInt@sign 002C  
                          tempCalc@R 005F                   __end_of_readButton 0BA6  
                  ??_TMR4_Initialize 0070                        __size_of_main 0537  
               __CFG_WDTCWS$WDTCWS_7 0000                             _tempCalc 001C  
        PIN_MANAGER_Initialize@state 0070                             log@coeff 1800  
                        ??_eval_poly 007E                          _sampleIndex 00BE  
                 _PWM7_LoadDutyValue 142D          ?_Init_Battery_State_Machine 0070  
                   ___lwmod@dividend 0072                       LCDWriteInt@str 0031  
            ?_PIN_MANAGER_Initialize 0070                  ?_PWM7_LoadDutyValue 0070  
                  __CFG_CLKOUTEN$OFF 0000                          _PPSLOCKbits 0E8F  
                   ??_ADC_Initialize 0070         PWM6_LoadDutyValue@dutyCycle6 0070  
                      __pstringtext1 0800                        __pstringtext2 1800  
                      __pstringtext3 181B                        __pstringtext4 0000  
               ??_PWM7_LoadDutyValue 0072                      ___lwmod@divisor 0070  
                    ___lwmod@counter 0075             LCDWriteString@characters 0028  
                       ___aldiv@sign 0021                   readIAnalog@channel 0026  
              _Battery_State_Machine 0BA6       __end_of_PIN_MANAGER_Initialize 15BC  
         __end_of_PWM1_LoadDutyValue 1417                        main@IOutTotal 00D3  
            __size_of_LCDWriteString 0017  
