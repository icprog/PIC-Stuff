

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Wed Jul 04 23:51:48 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	stringtext2,global,class=STRCODE,delta=2
     8                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	stringtext3,global,class=STRCODE,delta=2
    10                           	psect	stringtext4,global,class=STRCODE,delta=2
    11                           	psect	cinit,global,class=CODE,merge=1,delta=2
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    17                           	psect	inittext,global,class=CODE,delta=2
    18                           	psect	clrtext,global,class=CODE,delta=2
    19                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    20                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    22                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    23                           	psect	text1,local,class=CODE,merge=1,delta=2
    24                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text9,local,class=CODE,merge=1,delta=2
    32                           	psect	text10,local,class=CODE,merge=1,delta=2
    33                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text12,local,class=CODE,merge=1,delta=2
    35                           	psect	text13,local,class=CODE,merge=1,delta=2
    36                           	psect	text14,local,class=CODE,merge=1,delta=2
    37                           	psect	text15,local,class=CODE,merge=1,delta=2
    38                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text20,local,class=CODE,merge=1,delta=2
    43                           	psect	text21,local,class=CODE,merge=1,delta=2
    44                           	psect	text22,local,class=CODE,merge=1,delta=2
    45                           	psect	text23,local,class=CODE,merge=1,delta=2
    46                           	psect	text24,local,class=CODE,merge=1,delta=2
    47                           	psect	text25,local,class=CODE,merge=1,delta=2
    48                           	psect	text26,local,class=CODE,merge=1,delta=2
    49                           	psect	text27,local,class=CODE,merge=1,delta=2
    50                           	psect	text28,local,class=CODE,merge=1,delta=2
    51                           	psect	text29,local,class=CODE,merge=1,delta=2
    52                           	psect	text30,local,class=CODE,merge=1,delta=2
    53                           	psect	text31,local,class=CODE,merge=1,delta=2
    54                           	psect	text32,local,class=CODE,merge=1,delta=2
    55                           	psect	text33,local,class=CODE,merge=1,delta=2
    56                           	psect	text34,local,class=CODE,merge=1,delta=2,group=2
    57                           	psect	text35,local,class=CODE,merge=1,delta=2,group=2
    58                           	psect	text36,local,class=CODE,merge=1,delta=2
    59                           	psect	text37,local,class=CODE,merge=1,delta=2
    60                           	psect	text38,local,class=CODE,merge=1,delta=2
    61                           	psect	text39,local,class=CODE,merge=1,delta=2
    62                           	psect	text40,local,class=CODE,merge=1,delta=2,group=2
    63                           	psect	text41,local,class=CODE,merge=1,delta=2
    64                           	dabs	1,0x620,48
    65                           	dabs	1,0x5A0,80
    66                           	dabs	1,0x530,64
    67                           	dabs	1,0x2330,0,_samples
    68                           	dabs	1,0x7E,2
    69  0000                     
    70                           ; Version 1.45
    71                           ; Generated 16/11/2017 GMT
    72                           ; 
    73                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    74                           ; All rights reserved.
    75                           ; 
    76                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    77                           ; 
    78                           ; Redistribution and use in source and binary forms, with or without modification, are
    79                           ; permitted provided that the following conditions are met:
    80                           ; 
    81                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    82                           ;        conditions and the following disclaimer.
    83                           ; 
    84                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    85                           ;        of conditions and the following disclaimer in the documentation and/or other
    86                           ;        materials provided with the distribution.
    87                           ; 
    88                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    89                           ;        software without specific prior written permission.
    90                           ; 
    91                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    92                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    93                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    94                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    95                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    96                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    97                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    98                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    99                           ; 
   100                           ; 
   101                           ; Code-generator required, PIC16F18855 Definitions
   102                           ; 
   103                           ; SFR Addresses
   104  0000                     	;# 
   105  0001                     	;# 
   106  0002                     	;# 
   107  0003                     	;# 
   108  0004                     	;# 
   109  0005                     	;# 
   110  0006                     	;# 
   111  0007                     	;# 
   112  0008                     	;# 
   113  0009                     	;# 
   114  000A                     	;# 
   115  000B                     	;# 
   116  000C                     	;# 
   117  000D                     	;# 
   118  000E                     	;# 
   119  0010                     	;# 
   120  0011                     	;# 
   121  0012                     	;# 
   122  0013                     	;# 
   123  0016                     	;# 
   124  0017                     	;# 
   125  0018                     	;# 
   126  001C                     	;# 
   127  001C                     	;# 
   128  001D                     	;# 
   129  001D                     	;# 
   130  001E                     	;# 
   131  001F                     	;# 
   132  008C                     	;# 
   133  008C                     	;# 
   134  008D                     	;# 
   135  008E                     	;# 
   136  008E                     	;# 
   137  008F                     	;# 
   138  0090                     	;# 
   139  0090                     	;# 
   140  0091                     	;# 
   141  0093                     	;# 
   142  0094                     	;# 
   143  0095                     	;# 
   144  0096                     	;# 
   145  0097                     	;# 
   146  0098                     	;# 
   147  0099                     	;# 
   148  009A                     	;# 
   149  009B                     	;# 
   150  009C                     	;# 
   151  009D                     	;# 
   152  009E                     	;# 
   153  010C                     	;# 
   154  010D                     	;# 
   155  010E                     	;# 
   156  010E                     	;# 
   157  010F                     	;# 
   158  0110                     	;# 
   159  0110                     	;# 
   160  0111                     	;# 
   161  0112                     	;# 
   162  0112                     	;# 
   163  0113                     	;# 
   164  0114                     	;# 
   165  0114                     	;# 
   166  0115                     	;# 
   167  0116                     	;# 
   168  0116                     	;# 
   169  0117                     	;# 
   170  0119                     	;# 
   171  0119                     	;# 
   172  0119                     	;# 
   173  011A                     	;# 
   174  011A                     	;# 
   175  011A                     	;# 
   176  011B                     	;# 
   177  011B                     	;# 
   178  011B                     	;# 
   179  011B                     	;# 
   180  011B                     	;# 
   181  011C                     	;# 
   182  011C                     	;# 
   183  011C                     	;# 
   184  011D                     	;# 
   185  011D                     	;# 
   186  011D                     	;# 
   187  011E                     	;# 
   188  011E                     	;# 
   189  011E                     	;# 
   190  011F                     	;# 
   191  011F                     	;# 
   192  011F                     	;# 
   193  011F                     	;# 
   194  011F                     	;# 
   195  018C                     	;# 
   196  018D                     	;# 
   197  018E                     	;# 
   198  018F                     	;# 
   199  0190                     	;# 
   200  0191                     	;# 
   201  0192                     	;# 
   202  0196                     	;# 
   203  0197                     	;# 
   204  0198                     	;# 
   205  0199                     	;# 
   206  019A                     	;# 
   207  019B                     	;# 
   208  019C                     	;# 
   209  020C                     	;# 
   210  020C                     	;# 
   211  020D                     	;# 
   212  020E                     	;# 
   213  020F                     	;# 
   214  020F                     	;# 
   215  0210                     	;# 
   216  0210                     	;# 
   217  0211                     	;# 
   218  0211                     	;# 
   219  0212                     	;# 
   220  0212                     	;# 
   221  0213                     	;# 
   222  0214                     	;# 
   223  0215                     	;# 
   224  0215                     	;# 
   225  0216                     	;# 
   226  0216                     	;# 
   227  0217                     	;# 
   228  0217                     	;# 
   229  0218                     	;# 
   230  0218                     	;# 
   231  0219                     	;# 
   232  021A                     	;# 
   233  021B                     	;# 
   234  021B                     	;# 
   235  021C                     	;# 
   236  021C                     	;# 
   237  021D                     	;# 
   238  021D                     	;# 
   239  021E                     	;# 
   240  021F                     	;# 
   241  028C                     	;# 
   242  028C                     	;# 
   243  028D                     	;# 
   244  028D                     	;# 
   245  028E                     	;# 
   246  028F                     	;# 
   247  0290                     	;# 
   248  0290                     	;# 
   249  0291                     	;# 
   250  0292                     	;# 
   251  0292                     	;# 
   252  0293                     	;# 
   253  0293                     	;# 
   254  0294                     	;# 
   255  0295                     	;# 
   256  0296                     	;# 
   257  0296                     	;# 
   258  0297                     	;# 
   259  0298                     	;# 
   260  0298                     	;# 
   261  0299                     	;# 
   262  0299                     	;# 
   263  029A                     	;# 
   264  029B                     	;# 
   265  029C                     	;# 
   266  029C                     	;# 
   267  029D                     	;# 
   268  030C                     	;# 
   269  030C                     	;# 
   270  030D                     	;# 
   271  030E                     	;# 
   272  030F                     	;# 
   273  0310                     	;# 
   274  0310                     	;# 
   275  0311                     	;# 
   276  0312                     	;# 
   277  0313                     	;# 
   278  0314                     	;# 
   279  0314                     	;# 
   280  0315                     	;# 
   281  0316                     	;# 
   282  0317                     	;# 
   283  0318                     	;# 
   284  0318                     	;# 
   285  0319                     	;# 
   286  031A                     	;# 
   287  031B                     	;# 
   288  031C                     	;# 
   289  031C                     	;# 
   290  031D                     	;# 
   291  031E                     	;# 
   292  031F                     	;# 
   293  038C                     	;# 
   294  038D                     	;# 
   295  038E                     	;# 
   296  0390                     	;# 
   297  0391                     	;# 
   298  0392                     	;# 
   299  040C                     	;# 
   300  040D                     	;# 
   301  040E                     	;# 
   302  040F                     	;# 
   303  0410                     	;# 
   304  0411                     	;# 
   305  0416                     	;# 
   306  0416                     	;# 
   307  0417                     	;# 
   308  0418                     	;# 
   309  0418                     	;# 
   310  0419                     	;# 
   311  041A                     	;# 
   312  041A                     	;# 
   313  041B                     	;# 
   314  041C                     	;# 
   315  041C                     	;# 
   316  041D                     	;# 
   317  041E                     	;# 
   318  041F                     	;# 
   319  048C                     	;# 
   320  048C                     	;# 
   321  048D                     	;# 
   322  048E                     	;# 
   323  048F                     	;# 
   324  048F                     	;# 
   325  0490                     	;# 
   326  0491                     	;# 
   327  0492                     	;# 
   328  0492                     	;# 
   329  0493                     	;# 
   330  0494                     	;# 
   331  0495                     	;# 
   332  0495                     	;# 
   333  0496                     	;# 
   334  0497                     	;# 
   335  0498                     	;# 
   336  0499                     	;# 
   337  049A                     	;# 
   338  049B                     	;# 
   339  049C                     	;# 
   340  049D                     	;# 
   341  050C                     	;# 
   342  050C                     	;# 
   343  050D                     	;# 
   344  050E                     	;# 
   345  050F                     	;# 
   346  050F                     	;# 
   347  0510                     	;# 
   348  0511                     	;# 
   349  0512                     	;# 
   350  0512                     	;# 
   351  0513                     	;# 
   352  0514                     	;# 
   353  0515                     	;# 
   354  0515                     	;# 
   355  0516                     	;# 
   356  0517                     	;# 
   357  0518                     	;# 
   358  0519                     	;# 
   359  051A                     	;# 
   360  051B                     	;# 
   361  051C                     	;# 
   362  051D                     	;# 
   363  058C                     	;# 
   364  058C                     	;# 
   365  058D                     	;# 
   366  058E                     	;# 
   367  058F                     	;# 
   368  058F                     	;# 
   369  0590                     	;# 
   370  0591                     	;# 
   371  0592                     	;# 
   372  0593                     	;# 
   373  060C                     	;# 
   374  060D                     	;# 
   375  060E                     	;# 
   376  060F                     	;# 
   377  0610                     	;# 
   378  0611                     	;# 
   379  0612                     	;# 
   380  0613                     	;# 
   381  0614                     	;# 
   382  0616                     	;# 
   383  0617                     	;# 
   384  0618                     	;# 
   385  0619                     	;# 
   386  061A                     	;# 
   387  061B                     	;# 
   388  061C                     	;# 
   389  061D                     	;# 
   390  061E                     	;# 
   391  068C                     	;# 
   392  068D                     	;# 
   393  068E                     	;# 
   394  068F                     	;# 
   395  0690                     	;# 
   396  0691                     	;# 
   397  0692                     	;# 
   398  0693                     	;# 
   399  0694                     	;# 
   400  070C                     	;# 
   401  070D                     	;# 
   402  070E                     	;# 
   403  070F                     	;# 
   404  0710                     	;# 
   405  0711                     	;# 
   406  0712                     	;# 
   407  0713                     	;# 
   408  0714                     	;# 
   409  0716                     	;# 
   410  0717                     	;# 
   411  0718                     	;# 
   412  0719                     	;# 
   413  071A                     	;# 
   414  071B                     	;# 
   415  071C                     	;# 
   416  071D                     	;# 
   417  071E                     	;# 
   418  0796                     	;# 
   419  0797                     	;# 
   420  0798                     	;# 
   421  0799                     	;# 
   422  079A                     	;# 
   423  079B                     	;# 
   424  080C                     	;# 
   425  080D                     	;# 
   426  080E                     	;# 
   427  080F                     	;# 
   428  0810                     	;# 
   429  0811                     	;# 
   430  0812                     	;# 
   431  0813                     	;# 
   432  0814                     	;# 
   433  081A                     	;# 
   434  081B                     	;# 
   435  081C                     	;# 
   436  081D                     	;# 
   437  081E                     	;# 
   438  081F                     	;# 
   439  088C                     	;# 
   440  088D                     	;# 
   441  088E                     	;# 
   442  088F                     	;# 
   443  0890                     	;# 
   444  0891                     	;# 
   445  0892                     	;# 
   446  0893                     	;# 
   447  0895                     	;# 
   448  0896                     	;# 
   449  0897                     	;# 
   450  0898                     	;# 
   451  0899                     	;# 
   452  089A                     	;# 
   453  089B                     	;# 
   454  090C                     	;# 
   455  090E                     	;# 
   456  090F                     	;# 
   457  091F                     	;# 
   458  091F                     	;# 
   459  098F                     	;# 
   460  098F                     	;# 
   461  0990                     	;# 
   462  0991                     	;# 
   463  0992                     	;# 
   464  0993                     	;# 
   465  0994                     	;# 
   466  0995                     	;# 
   467  0996                     	;# 
   468  0997                     	;# 
   469  0E0F                     	;# 
   470  0E10                     	;# 
   471  0E11                     	;# 
   472  0E12                     	;# 
   473  0E13                     	;# 
   474  0E14                     	;# 
   475  0E15                     	;# 
   476  0E16                     	;# 
   477  0E17                     	;# 
   478  0E18                     	;# 
   479  0E19                     	;# 
   480  0E1A                     	;# 
   481  0E1B                     	;# 
   482  0E1C                     	;# 
   483  0E1D                     	;# 
   484  0E1E                     	;# 
   485  0E1F                     	;# 
   486  0E20                     	;# 
   487  0E21                     	;# 
   488  0E22                     	;# 
   489  0E23                     	;# 
   490  0E24                     	;# 
   491  0E25                     	;# 
   492  0E26                     	;# 
   493  0E27                     	;# 
   494  0E28                     	;# 
   495  0E29                     	;# 
   496  0E2A                     	;# 
   497  0E2B                     	;# 
   498  0E2C                     	;# 
   499  0E2D                     	;# 
   500  0E2E                     	;# 
   501  0E2F                     	;# 
   502  0E30                     	;# 
   503  0E31                     	;# 
   504  0E32                     	;# 
   505  0E33                     	;# 
   506  0E34                     	;# 
   507  0E35                     	;# 
   508  0E36                     	;# 
   509  0E37                     	;# 
   510  0E8F                     	;# 
   511  0E90                     	;# 
   512  0E91                     	;# 
   513  0E92                     	;# 
   514  0E93                     	;# 
   515  0E94                     	;# 
   516  0E95                     	;# 
   517  0E96                     	;# 
   518  0E97                     	;# 
   519  0E9C                     	;# 
   520  0E9D                     	;# 
   521  0E9E                     	;# 
   522  0EA1                     	;# 
   523  0EA2                     	;# 
   524  0EA3                     	;# 
   525  0EA4                     	;# 
   526  0EA5                     	;# 
   527  0EA9                     	;# 
   528  0EAA                     	;# 
   529  0EAB                     	;# 
   530  0EAC                     	;# 
   531  0EB1                     	;# 
   532  0EB2                     	;# 
   533  0EB3                     	;# 
   534  0EB8                     	;# 
   535  0EB9                     	;# 
   536  0EBA                     	;# 
   537  0EBB                     	;# 
   538  0EBC                     	;# 
   539  0EBD                     	;# 
   540  0EBE                     	;# 
   541  0EC3                     	;# 
   542  0EC5                     	;# 
   543  0EC6                     	;# 
   544  0EC7                     	;# 
   545  0EC8                     	;# 
   546  0EC9                     	;# 
   547  0ECA                     	;# 
   548  0ECB                     	;# 
   549  0ECC                     	;# 
   550  0F10                     	;# 
   551  0F11                     	;# 
   552  0F12                     	;# 
   553  0F13                     	;# 
   554  0F14                     	;# 
   555  0F15                     	;# 
   556  0F16                     	;# 
   557  0F17                     	;# 
   558  0F18                     	;# 
   559  0F19                     	;# 
   560  0F1A                     	;# 
   561  0F1B                     	;# 
   562  0F1C                     	;# 
   563  0F1D                     	;# 
   564  0F1E                     	;# 
   565  0F1F                     	;# 
   566  0F20                     	;# 
   567  0F21                     	;# 
   568  0F22                     	;# 
   569  0F23                     	;# 
   570  0F24                     	;# 
   571  0F25                     	;# 
   572  0F26                     	;# 
   573  0F27                     	;# 
   574  0F38                     	;# 
   575  0F39                     	;# 
   576  0F3A                     	;# 
   577  0F3B                     	;# 
   578  0F3C                     	;# 
   579  0F3D                     	;# 
   580  0F3E                     	;# 
   581  0F3F                     	;# 
   582  0F40                     	;# 
   583  0F41                     	;# 
   584  0F43                     	;# 
   585  0F44                     	;# 
   586  0F45                     	;# 
   587  0F46                     	;# 
   588  0F47                     	;# 
   589  0F48                     	;# 
   590  0F49                     	;# 
   591  0F4A                     	;# 
   592  0F4B                     	;# 
   593  0F4C                     	;# 
   594  0F4E                     	;# 
   595  0F4F                     	;# 
   596  0F50                     	;# 
   597  0F51                     	;# 
   598  0F52                     	;# 
   599  0F53                     	;# 
   600  0F54                     	;# 
   601  0F55                     	;# 
   602  0F56                     	;# 
   603  0F57                     	;# 
   604  0F65                     	;# 
   605  0F68                     	;# 
   606  0F69                     	;# 
   607  0F6A                     	;# 
   608  0F6B                     	;# 
   609  0FE4                     	;# 
   610  0FE5                     	;# 
   611  0FE6                     	;# 
   612  0FE7                     	;# 
   613  0FE8                     	;# 
   614  0FE9                     	;# 
   615  0FEA                     	;# 
   616  0FEB                     	;# 
   617  0FED                     	;# 
   618  0FEE                     	;# 
   619  0FEF                     	;# 
   620  0000                     	;# 
   621  0001                     	;# 
   622  0002                     	;# 
   623  0003                     	;# 
   624  0004                     	;# 
   625  0005                     	;# 
   626  0006                     	;# 
   627  0007                     	;# 
   628  0008                     	;# 
   629  0009                     	;# 
   630  000A                     	;# 
   631  000B                     	;# 
   632  000C                     	;# 
   633  000D                     	;# 
   634  000E                     	;# 
   635  0010                     	;# 
   636  0011                     	;# 
   637  0012                     	;# 
   638  0013                     	;# 
   639  0016                     	;# 
   640  0017                     	;# 
   641  0018                     	;# 
   642  001C                     	;# 
   643  001C                     	;# 
   644  001D                     	;# 
   645  001D                     	;# 
   646  001E                     	;# 
   647  001F                     	;# 
   648  008C                     	;# 
   649  008C                     	;# 
   650  008D                     	;# 
   651  008E                     	;# 
   652  008E                     	;# 
   653  008F                     	;# 
   654  0090                     	;# 
   655  0090                     	;# 
   656  0091                     	;# 
   657  0093                     	;# 
   658  0094                     	;# 
   659  0095                     	;# 
   660  0096                     	;# 
   661  0097                     	;# 
   662  0098                     	;# 
   663  0099                     	;# 
   664  009A                     	;# 
   665  009B                     	;# 
   666  009C                     	;# 
   667  009D                     	;# 
   668  009E                     	;# 
   669  010C                     	;# 
   670  010D                     	;# 
   671  010E                     	;# 
   672  010E                     	;# 
   673  010F                     	;# 
   674  0110                     	;# 
   675  0110                     	;# 
   676  0111                     	;# 
   677  0112                     	;# 
   678  0112                     	;# 
   679  0113                     	;# 
   680  0114                     	;# 
   681  0114                     	;# 
   682  0115                     	;# 
   683  0116                     	;# 
   684  0116                     	;# 
   685  0117                     	;# 
   686  0119                     	;# 
   687  0119                     	;# 
   688  0119                     	;# 
   689  011A                     	;# 
   690  011A                     	;# 
   691  011A                     	;# 
   692  011B                     	;# 
   693  011B                     	;# 
   694  011B                     	;# 
   695  011B                     	;# 
   696  011B                     	;# 
   697  011C                     	;# 
   698  011C                     	;# 
   699  011C                     	;# 
   700  011D                     	;# 
   701  011D                     	;# 
   702  011D                     	;# 
   703  011E                     	;# 
   704  011E                     	;# 
   705  011E                     	;# 
   706  011F                     	;# 
   707  011F                     	;# 
   708  011F                     	;# 
   709  011F                     	;# 
   710  011F                     	;# 
   711  018C                     	;# 
   712  018D                     	;# 
   713  018E                     	;# 
   714  018F                     	;# 
   715  0190                     	;# 
   716  0191                     	;# 
   717  0192                     	;# 
   718  0196                     	;# 
   719  0197                     	;# 
   720  0198                     	;# 
   721  0199                     	;# 
   722  019A                     	;# 
   723  019B                     	;# 
   724  019C                     	;# 
   725  020C                     	;# 
   726  020C                     	;# 
   727  020D                     	;# 
   728  020E                     	;# 
   729  020F                     	;# 
   730  020F                     	;# 
   731  0210                     	;# 
   732  0210                     	;# 
   733  0211                     	;# 
   734  0211                     	;# 
   735  0212                     	;# 
   736  0212                     	;# 
   737  0213                     	;# 
   738  0214                     	;# 
   739  0215                     	;# 
   740  0215                     	;# 
   741  0216                     	;# 
   742  0216                     	;# 
   743  0217                     	;# 
   744  0217                     	;# 
   745  0218                     	;# 
   746  0218                     	;# 
   747  0219                     	;# 
   748  021A                     	;# 
   749  021B                     	;# 
   750  021B                     	;# 
   751  021C                     	;# 
   752  021C                     	;# 
   753  021D                     	;# 
   754  021D                     	;# 
   755  021E                     	;# 
   756  021F                     	;# 
   757  028C                     	;# 
   758  028C                     	;# 
   759  028D                     	;# 
   760  028D                     	;# 
   761  028E                     	;# 
   762  028F                     	;# 
   763  0290                     	;# 
   764  0290                     	;# 
   765  0291                     	;# 
   766  0292                     	;# 
   767  0292                     	;# 
   768  0293                     	;# 
   769  0293                     	;# 
   770  0294                     	;# 
   771  0295                     	;# 
   772  0296                     	;# 
   773  0296                     	;# 
   774  0297                     	;# 
   775  0298                     	;# 
   776  0298                     	;# 
   777  0299                     	;# 
   778  0299                     	;# 
   779  029A                     	;# 
   780  029B                     	;# 
   781  029C                     	;# 
   782  029C                     	;# 
   783  029D                     	;# 
   784  030C                     	;# 
   785  030C                     	;# 
   786  030D                     	;# 
   787  030E                     	;# 
   788  030F                     	;# 
   789  0310                     	;# 
   790  0310                     	;# 
   791  0311                     	;# 
   792  0312                     	;# 
   793  0313                     	;# 
   794  0314                     	;# 
   795  0314                     	;# 
   796  0315                     	;# 
   797  0316                     	;# 
   798  0317                     	;# 
   799  0318                     	;# 
   800  0318                     	;# 
   801  0319                     	;# 
   802  031A                     	;# 
   803  031B                     	;# 
   804  031C                     	;# 
   805  031C                     	;# 
   806  031D                     	;# 
   807  031E                     	;# 
   808  031F                     	;# 
   809  038C                     	;# 
   810  038D                     	;# 
   811  038E                     	;# 
   812  0390                     	;# 
   813  0391                     	;# 
   814  0392                     	;# 
   815  040C                     	;# 
   816  040D                     	;# 
   817  040E                     	;# 
   818  040F                     	;# 
   819  0410                     	;# 
   820  0411                     	;# 
   821  0416                     	;# 
   822  0416                     	;# 
   823  0417                     	;# 
   824  0418                     	;# 
   825  0418                     	;# 
   826  0419                     	;# 
   827  041A                     	;# 
   828  041A                     	;# 
   829  041B                     	;# 
   830  041C                     	;# 
   831  041C                     	;# 
   832  041D                     	;# 
   833  041E                     	;# 
   834  041F                     	;# 
   835  048C                     	;# 
   836  048C                     	;# 
   837  048D                     	;# 
   838  048E                     	;# 
   839  048F                     	;# 
   840  048F                     	;# 
   841  0490                     	;# 
   842  0491                     	;# 
   843  0492                     	;# 
   844  0492                     	;# 
   845  0493                     	;# 
   846  0494                     	;# 
   847  0495                     	;# 
   848  0495                     	;# 
   849  0496                     	;# 
   850  0497                     	;# 
   851  0498                     	;# 
   852  0499                     	;# 
   853  049A                     	;# 
   854  049B                     	;# 
   855  049C                     	;# 
   856  049D                     	;# 
   857  050C                     	;# 
   858  050C                     	;# 
   859  050D                     	;# 
   860  050E                     	;# 
   861  050F                     	;# 
   862  050F                     	;# 
   863  0510                     	;# 
   864  0511                     	;# 
   865  0512                     	;# 
   866  0512                     	;# 
   867  0513                     	;# 
   868  0514                     	;# 
   869  0515                     	;# 
   870  0515                     	;# 
   871  0516                     	;# 
   872  0517                     	;# 
   873  0518                     	;# 
   874  0519                     	;# 
   875  051A                     	;# 
   876  051B                     	;# 
   877  051C                     	;# 
   878  051D                     	;# 
   879  058C                     	;# 
   880  058C                     	;# 
   881  058D                     	;# 
   882  058E                     	;# 
   883  058F                     	;# 
   884  058F                     	;# 
   885  0590                     	;# 
   886  0591                     	;# 
   887  0592                     	;# 
   888  0593                     	;# 
   889  060C                     	;# 
   890  060D                     	;# 
   891  060E                     	;# 
   892  060F                     	;# 
   893  0610                     	;# 
   894  0611                     	;# 
   895  0612                     	;# 
   896  0613                     	;# 
   897  0614                     	;# 
   898  0616                     	;# 
   899  0617                     	;# 
   900  0618                     	;# 
   901  0619                     	;# 
   902  061A                     	;# 
   903  061B                     	;# 
   904  061C                     	;# 
   905  061D                     	;# 
   906  061E                     	;# 
   907  068C                     	;# 
   908  068D                     	;# 
   909  068E                     	;# 
   910  068F                     	;# 
   911  0690                     	;# 
   912  0691                     	;# 
   913  0692                     	;# 
   914  0693                     	;# 
   915  0694                     	;# 
   916  070C                     	;# 
   917  070D                     	;# 
   918  070E                     	;# 
   919  070F                     	;# 
   920  0710                     	;# 
   921  0711                     	;# 
   922  0712                     	;# 
   923  0713                     	;# 
   924  0714                     	;# 
   925  0716                     	;# 
   926  0717                     	;# 
   927  0718                     	;# 
   928  0719                     	;# 
   929  071A                     	;# 
   930  071B                     	;# 
   931  071C                     	;# 
   932  071D                     	;# 
   933  071E                     	;# 
   934  0796                     	;# 
   935  0797                     	;# 
   936  0798                     	;# 
   937  0799                     	;# 
   938  079A                     	;# 
   939  079B                     	;# 
   940  080C                     	;# 
   941  080D                     	;# 
   942  080E                     	;# 
   943  080F                     	;# 
   944  0810                     	;# 
   945  0811                     	;# 
   946  0812                     	;# 
   947  0813                     	;# 
   948  0814                     	;# 
   949  081A                     	;# 
   950  081B                     	;# 
   951  081C                     	;# 
   952  081D                     	;# 
   953  081E                     	;# 
   954  081F                     	;# 
   955  088C                     	;# 
   956  088D                     	;# 
   957  088E                     	;# 
   958  088F                     	;# 
   959  0890                     	;# 
   960  0891                     	;# 
   961  0892                     	;# 
   962  0893                     	;# 
   963  0895                     	;# 
   964  0896                     	;# 
   965  0897                     	;# 
   966  0898                     	;# 
   967  0899                     	;# 
   968  089A                     	;# 
   969  089B                     	;# 
   970  090C                     	;# 
   971  090E                     	;# 
   972  090F                     	;# 
   973  091F                     	;# 
   974  091F                     	;# 
   975  098F                     	;# 
   976  098F                     	;# 
   977  0990                     	;# 
   978  0991                     	;# 
   979  0992                     	;# 
   980  0993                     	;# 
   981  0994                     	;# 
   982  0995                     	;# 
   983  0996                     	;# 
   984  0997                     	;# 
   985  0E0F                     	;# 
   986  0E10                     	;# 
   987  0E11                     	;# 
   988  0E12                     	;# 
   989  0E13                     	;# 
   990  0E14                     	;# 
   991  0E15                     	;# 
   992  0E16                     	;# 
   993  0E17                     	;# 
   994  0E18                     	;# 
   995  0E19                     	;# 
   996  0E1A                     	;# 
   997  0E1B                     	;# 
   998  0E1C                     	;# 
   999  0E1D                     	;# 
  1000  0E1E                     	;# 
  1001  0E1F                     	;# 
  1002  0E20                     	;# 
  1003  0E21                     	;# 
  1004  0E22                     	;# 
  1005  0E23                     	;# 
  1006  0E24                     	;# 
  1007  0E25                     	;# 
  1008  0E26                     	;# 
  1009  0E27                     	;# 
  1010  0E28                     	;# 
  1011  0E29                     	;# 
  1012  0E2A                     	;# 
  1013  0E2B                     	;# 
  1014  0E2C                     	;# 
  1015  0E2D                     	;# 
  1016  0E2E                     	;# 
  1017  0E2F                     	;# 
  1018  0E30                     	;# 
  1019  0E31                     	;# 
  1020  0E32                     	;# 
  1021  0E33                     	;# 
  1022  0E34                     	;# 
  1023  0E35                     	;# 
  1024  0E36                     	;# 
  1025  0E37                     	;# 
  1026  0E8F                     	;# 
  1027  0E90                     	;# 
  1028  0E91                     	;# 
  1029  0E92                     	;# 
  1030  0E93                     	;# 
  1031  0E94                     	;# 
  1032  0E95                     	;# 
  1033  0E96                     	;# 
  1034  0E97                     	;# 
  1035  0E9C                     	;# 
  1036  0E9D                     	;# 
  1037  0E9E                     	;# 
  1038  0EA1                     	;# 
  1039  0EA2                     	;# 
  1040  0EA3                     	;# 
  1041  0EA4                     	;# 
  1042  0EA5                     	;# 
  1043  0EA9                     	;# 
  1044  0EAA                     	;# 
  1045  0EAB                     	;# 
  1046  0EAC                     	;# 
  1047  0EB1                     	;# 
  1048  0EB2                     	;# 
  1049  0EB3                     	;# 
  1050  0EB8                     	;# 
  1051  0EB9                     	;# 
  1052  0EBA                     	;# 
  1053  0EBB                     	;# 
  1054  0EBC                     	;# 
  1055  0EBD                     	;# 
  1056  0EBE                     	;# 
  1057  0EC3                     	;# 
  1058  0EC5                     	;# 
  1059  0EC6                     	;# 
  1060  0EC7                     	;# 
  1061  0EC8                     	;# 
  1062  0EC9                     	;# 
  1063  0ECA                     	;# 
  1064  0ECB                     	;# 
  1065  0ECC                     	;# 
  1066  0F10                     	;# 
  1067  0F11                     	;# 
  1068  0F12                     	;# 
  1069  0F13                     	;# 
  1070  0F14                     	;# 
  1071  0F15                     	;# 
  1072  0F16                     	;# 
  1073  0F17                     	;# 
  1074  0F18                     	;# 
  1075  0F19                     	;# 
  1076  0F1A                     	;# 
  1077  0F1B                     	;# 
  1078  0F1C                     	;# 
  1079  0F1D                     	;# 
  1080  0F1E                     	;# 
  1081  0F1F                     	;# 
  1082  0F20                     	;# 
  1083  0F21                     	;# 
  1084  0F22                     	;# 
  1085  0F23                     	;# 
  1086  0F24                     	;# 
  1087  0F25                     	;# 
  1088  0F26                     	;# 
  1089  0F27                     	;# 
  1090  0F38                     	;# 
  1091  0F39                     	;# 
  1092  0F3A                     	;# 
  1093  0F3B                     	;# 
  1094  0F3C                     	;# 
  1095  0F3D                     	;# 
  1096  0F3E                     	;# 
  1097  0F3F                     	;# 
  1098  0F40                     	;# 
  1099  0F41                     	;# 
  1100  0F43                     	;# 
  1101  0F44                     	;# 
  1102  0F45                     	;# 
  1103  0F46                     	;# 
  1104  0F47                     	;# 
  1105  0F48                     	;# 
  1106  0F49                     	;# 
  1107  0F4A                     	;# 
  1108  0F4B                     	;# 
  1109  0F4C                     	;# 
  1110  0F4E                     	;# 
  1111  0F4F                     	;# 
  1112  0F50                     	;# 
  1113  0F51                     	;# 
  1114  0F52                     	;# 
  1115  0F53                     	;# 
  1116  0F54                     	;# 
  1117  0F55                     	;# 
  1118  0F56                     	;# 
  1119  0F57                     	;# 
  1120  0F65                     	;# 
  1121  0F68                     	;# 
  1122  0F69                     	;# 
  1123  0F6A                     	;# 
  1124  0F6B                     	;# 
  1125  0FE4                     	;# 
  1126  0FE5                     	;# 
  1127  0FE6                     	;# 
  1128  0FE7                     	;# 
  1129  0FE8                     	;# 
  1130  0FE9                     	;# 
  1131  0FEA                     	;# 
  1132  0FEB                     	;# 
  1133  0FED                     	;# 
  1134  0FEE                     	;# 
  1135  0FEF                     	;# 
  1136  0000                     	;# 
  1137  0001                     	;# 
  1138  0002                     	;# 
  1139  0003                     	;# 
  1140  0004                     	;# 
  1141  0005                     	;# 
  1142  0006                     	;# 
  1143  0007                     	;# 
  1144  0008                     	;# 
  1145  0009                     	;# 
  1146  000A                     	;# 
  1147  000B                     	;# 
  1148  000C                     	;# 
  1149  000D                     	;# 
  1150  000E                     	;# 
  1151  0010                     	;# 
  1152  0011                     	;# 
  1153  0012                     	;# 
  1154  0013                     	;# 
  1155  0016                     	;# 
  1156  0017                     	;# 
  1157  0018                     	;# 
  1158  001C                     	;# 
  1159  001C                     	;# 
  1160  001D                     	;# 
  1161  001D                     	;# 
  1162  001E                     	;# 
  1163  001F                     	;# 
  1164  008C                     	;# 
  1165  008C                     	;# 
  1166  008D                     	;# 
  1167  008E                     	;# 
  1168  008E                     	;# 
  1169  008F                     	;# 
  1170  0090                     	;# 
  1171  0090                     	;# 
  1172  0091                     	;# 
  1173  0093                     	;# 
  1174  0094                     	;# 
  1175  0095                     	;# 
  1176  0096                     	;# 
  1177  0097                     	;# 
  1178  0098                     	;# 
  1179  0099                     	;# 
  1180  009A                     	;# 
  1181  009B                     	;# 
  1182  009C                     	;# 
  1183  009D                     	;# 
  1184  009E                     	;# 
  1185  010C                     	;# 
  1186  010D                     	;# 
  1187  010E                     	;# 
  1188  010E                     	;# 
  1189  010F                     	;# 
  1190  0110                     	;# 
  1191  0110                     	;# 
  1192  0111                     	;# 
  1193  0112                     	;# 
  1194  0112                     	;# 
  1195  0113                     	;# 
  1196  0114                     	;# 
  1197  0114                     	;# 
  1198  0115                     	;# 
  1199  0116                     	;# 
  1200  0116                     	;# 
  1201  0117                     	;# 
  1202  0119                     	;# 
  1203  0119                     	;# 
  1204  0119                     	;# 
  1205  011A                     	;# 
  1206  011A                     	;# 
  1207  011A                     	;# 
  1208  011B                     	;# 
  1209  011B                     	;# 
  1210  011B                     	;# 
  1211  011B                     	;# 
  1212  011B                     	;# 
  1213  011C                     	;# 
  1214  011C                     	;# 
  1215  011C                     	;# 
  1216  011D                     	;# 
  1217  011D                     	;# 
  1218  011D                     	;# 
  1219  011E                     	;# 
  1220  011E                     	;# 
  1221  011E                     	;# 
  1222  011F                     	;# 
  1223  011F                     	;# 
  1224  011F                     	;# 
  1225  011F                     	;# 
  1226  011F                     	;# 
  1227  018C                     	;# 
  1228  018D                     	;# 
  1229  018E                     	;# 
  1230  018F                     	;# 
  1231  0190                     	;# 
  1232  0191                     	;# 
  1233  0192                     	;# 
  1234  0196                     	;# 
  1235  0197                     	;# 
  1236  0198                     	;# 
  1237  0199                     	;# 
  1238  019A                     	;# 
  1239  019B                     	;# 
  1240  019C                     	;# 
  1241  020C                     	;# 
  1242  020C                     	;# 
  1243  020D                     	;# 
  1244  020E                     	;# 
  1245  020F                     	;# 
  1246  020F                     	;# 
  1247  0210                     	;# 
  1248  0210                     	;# 
  1249  0211                     	;# 
  1250  0211                     	;# 
  1251  0212                     	;# 
  1252  0212                     	;# 
  1253  0213                     	;# 
  1254  0214                     	;# 
  1255  0215                     	;# 
  1256  0215                     	;# 
  1257  0216                     	;# 
  1258  0216                     	;# 
  1259  0217                     	;# 
  1260  0217                     	;# 
  1261  0218                     	;# 
  1262  0218                     	;# 
  1263  0219                     	;# 
  1264  021A                     	;# 
  1265  021B                     	;# 
  1266  021B                     	;# 
  1267  021C                     	;# 
  1268  021C                     	;# 
  1269  021D                     	;# 
  1270  021D                     	;# 
  1271  021E                     	;# 
  1272  021F                     	;# 
  1273  028C                     	;# 
  1274  028C                     	;# 
  1275  028D                     	;# 
  1276  028D                     	;# 
  1277  028E                     	;# 
  1278  028F                     	;# 
  1279  0290                     	;# 
  1280  0290                     	;# 
  1281  0291                     	;# 
  1282  0292                     	;# 
  1283  0292                     	;# 
  1284  0293                     	;# 
  1285  0293                     	;# 
  1286  0294                     	;# 
  1287  0295                     	;# 
  1288  0296                     	;# 
  1289  0296                     	;# 
  1290  0297                     	;# 
  1291  0298                     	;# 
  1292  0298                     	;# 
  1293  0299                     	;# 
  1294  0299                     	;# 
  1295  029A                     	;# 
  1296  029B                     	;# 
  1297  029C                     	;# 
  1298  029C                     	;# 
  1299  029D                     	;# 
  1300  030C                     	;# 
  1301  030C                     	;# 
  1302  030D                     	;# 
  1303  030E                     	;# 
  1304  030F                     	;# 
  1305  0310                     	;# 
  1306  0310                     	;# 
  1307  0311                     	;# 
  1308  0312                     	;# 
  1309  0313                     	;# 
  1310  0314                     	;# 
  1311  0314                     	;# 
  1312  0315                     	;# 
  1313  0316                     	;# 
  1314  0317                     	;# 
  1315  0318                     	;# 
  1316  0318                     	;# 
  1317  0319                     	;# 
  1318  031A                     	;# 
  1319  031B                     	;# 
  1320  031C                     	;# 
  1321  031C                     	;# 
  1322  031D                     	;# 
  1323  031E                     	;# 
  1324  031F                     	;# 
  1325  038C                     	;# 
  1326  038D                     	;# 
  1327  038E                     	;# 
  1328  0390                     	;# 
  1329  0391                     	;# 
  1330  0392                     	;# 
  1331  040C                     	;# 
  1332  040D                     	;# 
  1333  040E                     	;# 
  1334  040F                     	;# 
  1335  0410                     	;# 
  1336  0411                     	;# 
  1337  0416                     	;# 
  1338  0416                     	;# 
  1339  0417                     	;# 
  1340  0418                     	;# 
  1341  0418                     	;# 
  1342  0419                     	;# 
  1343  041A                     	;# 
  1344  041A                     	;# 
  1345  041B                     	;# 
  1346  041C                     	;# 
  1347  041C                     	;# 
  1348  041D                     	;# 
  1349  041E                     	;# 
  1350  041F                     	;# 
  1351  048C                     	;# 
  1352  048C                     	;# 
  1353  048D                     	;# 
  1354  048E                     	;# 
  1355  048F                     	;# 
  1356  048F                     	;# 
  1357  0490                     	;# 
  1358  0491                     	;# 
  1359  0492                     	;# 
  1360  0492                     	;# 
  1361  0493                     	;# 
  1362  0494                     	;# 
  1363  0495                     	;# 
  1364  0495                     	;# 
  1365  0496                     	;# 
  1366  0497                     	;# 
  1367  0498                     	;# 
  1368  0499                     	;# 
  1369  049A                     	;# 
  1370  049B                     	;# 
  1371  049C                     	;# 
  1372  049D                     	;# 
  1373  050C                     	;# 
  1374  050C                     	;# 
  1375  050D                     	;# 
  1376  050E                     	;# 
  1377  050F                     	;# 
  1378  050F                     	;# 
  1379  0510                     	;# 
  1380  0511                     	;# 
  1381  0512                     	;# 
  1382  0512                     	;# 
  1383  0513                     	;# 
  1384  0514                     	;# 
  1385  0515                     	;# 
  1386  0515                     	;# 
  1387  0516                     	;# 
  1388  0517                     	;# 
  1389  0518                     	;# 
  1390  0519                     	;# 
  1391  051A                     	;# 
  1392  051B                     	;# 
  1393  051C                     	;# 
  1394  051D                     	;# 
  1395  058C                     	;# 
  1396  058C                     	;# 
  1397  058D                     	;# 
  1398  058E                     	;# 
  1399  058F                     	;# 
  1400  058F                     	;# 
  1401  0590                     	;# 
  1402  0591                     	;# 
  1403  0592                     	;# 
  1404  0593                     	;# 
  1405  060C                     	;# 
  1406  060D                     	;# 
  1407  060E                     	;# 
  1408  060F                     	;# 
  1409  0610                     	;# 
  1410  0611                     	;# 
  1411  0612                     	;# 
  1412  0613                     	;# 
  1413  0614                     	;# 
  1414  0616                     	;# 
  1415  0617                     	;# 
  1416  0618                     	;# 
  1417  0619                     	;# 
  1418  061A                     	;# 
  1419  061B                     	;# 
  1420  061C                     	;# 
  1421  061D                     	;# 
  1422  061E                     	;# 
  1423  068C                     	;# 
  1424  068D                     	;# 
  1425  068E                     	;# 
  1426  068F                     	;# 
  1427  0690                     	;# 
  1428  0691                     	;# 
  1429  0692                     	;# 
  1430  0693                     	;# 
  1431  0694                     	;# 
  1432  070C                     	;# 
  1433  070D                     	;# 
  1434  070E                     	;# 
  1435  070F                     	;# 
  1436  0710                     	;# 
  1437  0711                     	;# 
  1438  0712                     	;# 
  1439  0713                     	;# 
  1440  0714                     	;# 
  1441  0716                     	;# 
  1442  0717                     	;# 
  1443  0718                     	;# 
  1444  0719                     	;# 
  1445  071A                     	;# 
  1446  071B                     	;# 
  1447  071C                     	;# 
  1448  071D                     	;# 
  1449  071E                     	;# 
  1450  0796                     	;# 
  1451  0797                     	;# 
  1452  0798                     	;# 
  1453  0799                     	;# 
  1454  079A                     	;# 
  1455  079B                     	;# 
  1456  080C                     	;# 
  1457  080D                     	;# 
  1458  080E                     	;# 
  1459  080F                     	;# 
  1460  0810                     	;# 
  1461  0811                     	;# 
  1462  0812                     	;# 
  1463  0813                     	;# 
  1464  0814                     	;# 
  1465  081A                     	;# 
  1466  081B                     	;# 
  1467  081C                     	;# 
  1468  081D                     	;# 
  1469  081E                     	;# 
  1470  081F                     	;# 
  1471  088C                     	;# 
  1472  088D                     	;# 
  1473  088E                     	;# 
  1474  088F                     	;# 
  1475  0890                     	;# 
  1476  0891                     	;# 
  1477  0892                     	;# 
  1478  0893                     	;# 
  1479  0895                     	;# 
  1480  0896                     	;# 
  1481  0897                     	;# 
  1482  0898                     	;# 
  1483  0899                     	;# 
  1484  089A                     	;# 
  1485  089B                     	;# 
  1486  090C                     	;# 
  1487  090E                     	;# 
  1488  090F                     	;# 
  1489  091F                     	;# 
  1490  091F                     	;# 
  1491  098F                     	;# 
  1492  098F                     	;# 
  1493  0990                     	;# 
  1494  0991                     	;# 
  1495  0992                     	;# 
  1496  0993                     	;# 
  1497  0994                     	;# 
  1498  0995                     	;# 
  1499  0996                     	;# 
  1500  0997                     	;# 
  1501  0E0F                     	;# 
  1502  0E10                     	;# 
  1503  0E11                     	;# 
  1504  0E12                     	;# 
  1505  0E13                     	;# 
  1506  0E14                     	;# 
  1507  0E15                     	;# 
  1508  0E16                     	;# 
  1509  0E17                     	;# 
  1510  0E18                     	;# 
  1511  0E19                     	;# 
  1512  0E1A                     	;# 
  1513  0E1B                     	;# 
  1514  0E1C                     	;# 
  1515  0E1D                     	;# 
  1516  0E1E                     	;# 
  1517  0E1F                     	;# 
  1518  0E20                     	;# 
  1519  0E21                     	;# 
  1520  0E22                     	;# 
  1521  0E23                     	;# 
  1522  0E24                     	;# 
  1523  0E25                     	;# 
  1524  0E26                     	;# 
  1525  0E27                     	;# 
  1526  0E28                     	;# 
  1527  0E29                     	;# 
  1528  0E2A                     	;# 
  1529  0E2B                     	;# 
  1530  0E2C                     	;# 
  1531  0E2D                     	;# 
  1532  0E2E                     	;# 
  1533  0E2F                     	;# 
  1534  0E30                     	;# 
  1535  0E31                     	;# 
  1536  0E32                     	;# 
  1537  0E33                     	;# 
  1538  0E34                     	;# 
  1539  0E35                     	;# 
  1540  0E36                     	;# 
  1541  0E37                     	;# 
  1542  0E8F                     	;# 
  1543  0E90                     	;# 
  1544  0E91                     	;# 
  1545  0E92                     	;# 
  1546  0E93                     	;# 
  1547  0E94                     	;# 
  1548  0E95                     	;# 
  1549  0E96                     	;# 
  1550  0E97                     	;# 
  1551  0E9C                     	;# 
  1552  0E9D                     	;# 
  1553  0E9E                     	;# 
  1554  0EA1                     	;# 
  1555  0EA2                     	;# 
  1556  0EA3                     	;# 
  1557  0EA4                     	;# 
  1558  0EA5                     	;# 
  1559  0EA9                     	;# 
  1560  0EAA                     	;# 
  1561  0EAB                     	;# 
  1562  0EAC                     	;# 
  1563  0EB1                     	;# 
  1564  0EB2                     	;# 
  1565  0EB3                     	;# 
  1566  0EB8                     	;# 
  1567  0EB9                     	;# 
  1568  0EBA                     	;# 
  1569  0EBB                     	;# 
  1570  0EBC                     	;# 
  1571  0EBD                     	;# 
  1572  0EBE                     	;# 
  1573  0EC3                     	;# 
  1574  0EC5                     	;# 
  1575  0EC6                     	;# 
  1576  0EC7                     	;# 
  1577  0EC8                     	;# 
  1578  0EC9                     	;# 
  1579  0ECA                     	;# 
  1580  0ECB                     	;# 
  1581  0ECC                     	;# 
  1582  0F10                     	;# 
  1583  0F11                     	;# 
  1584  0F12                     	;# 
  1585  0F13                     	;# 
  1586  0F14                     	;# 
  1587  0F15                     	;# 
  1588  0F16                     	;# 
  1589  0F17                     	;# 
  1590  0F18                     	;# 
  1591  0F19                     	;# 
  1592  0F1A                     	;# 
  1593  0F1B                     	;# 
  1594  0F1C                     	;# 
  1595  0F1D                     	;# 
  1596  0F1E                     	;# 
  1597  0F1F                     	;# 
  1598  0F20                     	;# 
  1599  0F21                     	;# 
  1600  0F22                     	;# 
  1601  0F23                     	;# 
  1602  0F24                     	;# 
  1603  0F25                     	;# 
  1604  0F26                     	;# 
  1605  0F27                     	;# 
  1606  0F38                     	;# 
  1607  0F39                     	;# 
  1608  0F3A                     	;# 
  1609  0F3B                     	;# 
  1610  0F3C                     	;# 
  1611  0F3D                     	;# 
  1612  0F3E                     	;# 
  1613  0F3F                     	;# 
  1614  0F40                     	;# 
  1615  0F41                     	;# 
  1616  0F43                     	;# 
  1617  0F44                     	;# 
  1618  0F45                     	;# 
  1619  0F46                     	;# 
  1620  0F47                     	;# 
  1621  0F48                     	;# 
  1622  0F49                     	;# 
  1623  0F4A                     	;# 
  1624  0F4B                     	;# 
  1625  0F4C                     	;# 
  1626  0F4E                     	;# 
  1627  0F4F                     	;# 
  1628  0F50                     	;# 
  1629  0F51                     	;# 
  1630  0F52                     	;# 
  1631  0F53                     	;# 
  1632  0F54                     	;# 
  1633  0F55                     	;# 
  1634  0F56                     	;# 
  1635  0F57                     	;# 
  1636  0F65                     	;# 
  1637  0F68                     	;# 
  1638  0F69                     	;# 
  1639  0F6A                     	;# 
  1640  0F6B                     	;# 
  1641  0FE4                     	;# 
  1642  0FE5                     	;# 
  1643  0FE6                     	;# 
  1644  0FE7                     	;# 
  1645  0FE8                     	;# 
  1646  0FE9                     	;# 
  1647  0FEA                     	;# 
  1648  0FEB                     	;# 
  1649  0FED                     	;# 
  1650  0FEE                     	;# 
  1651  0FEF                     	;# 
  1652  0000                     	;# 
  1653  0001                     	;# 
  1654  0002                     	;# 
  1655  0003                     	;# 
  1656  0004                     	;# 
  1657  0005                     	;# 
  1658  0006                     	;# 
  1659  0007                     	;# 
  1660  0008                     	;# 
  1661  0009                     	;# 
  1662  000A                     	;# 
  1663  000B                     	;# 
  1664  000C                     	;# 
  1665  000D                     	;# 
  1666  000E                     	;# 
  1667  0010                     	;# 
  1668  0011                     	;# 
  1669  0012                     	;# 
  1670  0013                     	;# 
  1671  0016                     	;# 
  1672  0017                     	;# 
  1673  0018                     	;# 
  1674  001C                     	;# 
  1675  001C                     	;# 
  1676  001D                     	;# 
  1677  001D                     	;# 
  1678  001E                     	;# 
  1679  001F                     	;# 
  1680  008C                     	;# 
  1681  008C                     	;# 
  1682  008D                     	;# 
  1683  008E                     	;# 
  1684  008E                     	;# 
  1685  008F                     	;# 
  1686  0090                     	;# 
  1687  0090                     	;# 
  1688  0091                     	;# 
  1689  0093                     	;# 
  1690  0094                     	;# 
  1691  0095                     	;# 
  1692  0096                     	;# 
  1693  0097                     	;# 
  1694  0098                     	;# 
  1695  0099                     	;# 
  1696  009A                     	;# 
  1697  009B                     	;# 
  1698  009C                     	;# 
  1699  009D                     	;# 
  1700  009E                     	;# 
  1701  010C                     	;# 
  1702  010D                     	;# 
  1703  010E                     	;# 
  1704  010E                     	;# 
  1705  010F                     	;# 
  1706  0110                     	;# 
  1707  0110                     	;# 
  1708  0111                     	;# 
  1709  0112                     	;# 
  1710  0112                     	;# 
  1711  0113                     	;# 
  1712  0114                     	;# 
  1713  0114                     	;# 
  1714  0115                     	;# 
  1715  0116                     	;# 
  1716  0116                     	;# 
  1717  0117                     	;# 
  1718  0119                     	;# 
  1719  0119                     	;# 
  1720  0119                     	;# 
  1721  011A                     	;# 
  1722  011A                     	;# 
  1723  011A                     	;# 
  1724  011B                     	;# 
  1725  011B                     	;# 
  1726  011B                     	;# 
  1727  011B                     	;# 
  1728  011B                     	;# 
  1729  011C                     	;# 
  1730  011C                     	;# 
  1731  011C                     	;# 
  1732  011D                     	;# 
  1733  011D                     	;# 
  1734  011D                     	;# 
  1735  011E                     	;# 
  1736  011E                     	;# 
  1737  011E                     	;# 
  1738  011F                     	;# 
  1739  011F                     	;# 
  1740  011F                     	;# 
  1741  011F                     	;# 
  1742  011F                     	;# 
  1743  018C                     	;# 
  1744  018D                     	;# 
  1745  018E                     	;# 
  1746  018F                     	;# 
  1747  0190                     	;# 
  1748  0191                     	;# 
  1749  0192                     	;# 
  1750  0196                     	;# 
  1751  0197                     	;# 
  1752  0198                     	;# 
  1753  0199                     	;# 
  1754  019A                     	;# 
  1755  019B                     	;# 
  1756  019C                     	;# 
  1757  020C                     	;# 
  1758  020C                     	;# 
  1759  020D                     	;# 
  1760  020E                     	;# 
  1761  020F                     	;# 
  1762  020F                     	;# 
  1763  0210                     	;# 
  1764  0210                     	;# 
  1765  0211                     	;# 
  1766  0211                     	;# 
  1767  0212                     	;# 
  1768  0212                     	;# 
  1769  0213                     	;# 
  1770  0214                     	;# 
  1771  0215                     	;# 
  1772  0215                     	;# 
  1773  0216                     	;# 
  1774  0216                     	;# 
  1775  0217                     	;# 
  1776  0217                     	;# 
  1777  0218                     	;# 
  1778  0218                     	;# 
  1779  0219                     	;# 
  1780  021A                     	;# 
  1781  021B                     	;# 
  1782  021B                     	;# 
  1783  021C                     	;# 
  1784  021C                     	;# 
  1785  021D                     	;# 
  1786  021D                     	;# 
  1787  021E                     	;# 
  1788  021F                     	;# 
  1789  028C                     	;# 
  1790  028C                     	;# 
  1791  028D                     	;# 
  1792  028D                     	;# 
  1793  028E                     	;# 
  1794  028F                     	;# 
  1795  0290                     	;# 
  1796  0290                     	;# 
  1797  0291                     	;# 
  1798  0292                     	;# 
  1799  0292                     	;# 
  1800  0293                     	;# 
  1801  0293                     	;# 
  1802  0294                     	;# 
  1803  0295                     	;# 
  1804  0296                     	;# 
  1805  0296                     	;# 
  1806  0297                     	;# 
  1807  0298                     	;# 
  1808  0298                     	;# 
  1809  0299                     	;# 
  1810  0299                     	;# 
  1811  029A                     	;# 
  1812  029B                     	;# 
  1813  029C                     	;# 
  1814  029C                     	;# 
  1815  029D                     	;# 
  1816  030C                     	;# 
  1817  030C                     	;# 
  1818  030D                     	;# 
  1819  030E                     	;# 
  1820  030F                     	;# 
  1821  0310                     	;# 
  1822  0310                     	;# 
  1823  0311                     	;# 
  1824  0312                     	;# 
  1825  0313                     	;# 
  1826  0314                     	;# 
  1827  0314                     	;# 
  1828  0315                     	;# 
  1829  0316                     	;# 
  1830  0317                     	;# 
  1831  0318                     	;# 
  1832  0318                     	;# 
  1833  0319                     	;# 
  1834  031A                     	;# 
  1835  031B                     	;# 
  1836  031C                     	;# 
  1837  031C                     	;# 
  1838  031D                     	;# 
  1839  031E                     	;# 
  1840  031F                     	;# 
  1841  038C                     	;# 
  1842  038D                     	;# 
  1843  038E                     	;# 
  1844  0390                     	;# 
  1845  0391                     	;# 
  1846  0392                     	;# 
  1847  040C                     	;# 
  1848  040D                     	;# 
  1849  040E                     	;# 
  1850  040F                     	;# 
  1851  0410                     	;# 
  1852  0411                     	;# 
  1853  0416                     	;# 
  1854  0416                     	;# 
  1855  0417                     	;# 
  1856  0418                     	;# 
  1857  0418                     	;# 
  1858  0419                     	;# 
  1859  041A                     	;# 
  1860  041A                     	;# 
  1861  041B                     	;# 
  1862  041C                     	;# 
  1863  041C                     	;# 
  1864  041D                     	;# 
  1865  041E                     	;# 
  1866  041F                     	;# 
  1867  048C                     	;# 
  1868  048C                     	;# 
  1869  048D                     	;# 
  1870  048E                     	;# 
  1871  048F                     	;# 
  1872  048F                     	;# 
  1873  0490                     	;# 
  1874  0491                     	;# 
  1875  0492                     	;# 
  1876  0492                     	;# 
  1877  0493                     	;# 
  1878  0494                     	;# 
  1879  0495                     	;# 
  1880  0495                     	;# 
  1881  0496                     	;# 
  1882  0497                     	;# 
  1883  0498                     	;# 
  1884  0499                     	;# 
  1885  049A                     	;# 
  1886  049B                     	;# 
  1887  049C                     	;# 
  1888  049D                     	;# 
  1889  050C                     	;# 
  1890  050C                     	;# 
  1891  050D                     	;# 
  1892  050E                     	;# 
  1893  050F                     	;# 
  1894  050F                     	;# 
  1895  0510                     	;# 
  1896  0511                     	;# 
  1897  0512                     	;# 
  1898  0512                     	;# 
  1899  0513                     	;# 
  1900  0514                     	;# 
  1901  0515                     	;# 
  1902  0515                     	;# 
  1903  0516                     	;# 
  1904  0517                     	;# 
  1905  0518                     	;# 
  1906  0519                     	;# 
  1907  051A                     	;# 
  1908  051B                     	;# 
  1909  051C                     	;# 
  1910  051D                     	;# 
  1911  058C                     	;# 
  1912  058C                     	;# 
  1913  058D                     	;# 
  1914  058E                     	;# 
  1915  058F                     	;# 
  1916  058F                     	;# 
  1917  0590                     	;# 
  1918  0591                     	;# 
  1919  0592                     	;# 
  1920  0593                     	;# 
  1921  060C                     	;# 
  1922  060D                     	;# 
  1923  060E                     	;# 
  1924  060F                     	;# 
  1925  0610                     	;# 
  1926  0611                     	;# 
  1927  0612                     	;# 
  1928  0613                     	;# 
  1929  0614                     	;# 
  1930  0616                     	;# 
  1931  0617                     	;# 
  1932  0618                     	;# 
  1933  0619                     	;# 
  1934  061A                     	;# 
  1935  061B                     	;# 
  1936  061C                     	;# 
  1937  061D                     	;# 
  1938  061E                     	;# 
  1939  068C                     	;# 
  1940  068D                     	;# 
  1941  068E                     	;# 
  1942  068F                     	;# 
  1943  0690                     	;# 
  1944  0691                     	;# 
  1945  0692                     	;# 
  1946  0693                     	;# 
  1947  0694                     	;# 
  1948  070C                     	;# 
  1949  070D                     	;# 
  1950  070E                     	;# 
  1951  070F                     	;# 
  1952  0710                     	;# 
  1953  0711                     	;# 
  1954  0712                     	;# 
  1955  0713                     	;# 
  1956  0714                     	;# 
  1957  0716                     	;# 
  1958  0717                     	;# 
  1959  0718                     	;# 
  1960  0719                     	;# 
  1961  071A                     	;# 
  1962  071B                     	;# 
  1963  071C                     	;# 
  1964  071D                     	;# 
  1965  071E                     	;# 
  1966  0796                     	;# 
  1967  0797                     	;# 
  1968  0798                     	;# 
  1969  0799                     	;# 
  1970  079A                     	;# 
  1971  079B                     	;# 
  1972  080C                     	;# 
  1973  080D                     	;# 
  1974  080E                     	;# 
  1975  080F                     	;# 
  1976  0810                     	;# 
  1977  0811                     	;# 
  1978  0812                     	;# 
  1979  0813                     	;# 
  1980  0814                     	;# 
  1981  081A                     	;# 
  1982  081B                     	;# 
  1983  081C                     	;# 
  1984  081D                     	;# 
  1985  081E                     	;# 
  1986  081F                     	;# 
  1987  088C                     	;# 
  1988  088D                     	;# 
  1989  088E                     	;# 
  1990  088F                     	;# 
  1991  0890                     	;# 
  1992  0891                     	;# 
  1993  0892                     	;# 
  1994  0893                     	;# 
  1995  0895                     	;# 
  1996  0896                     	;# 
  1997  0897                     	;# 
  1998  0898                     	;# 
  1999  0899                     	;# 
  2000  089A                     	;# 
  2001  089B                     	;# 
  2002  090C                     	;# 
  2003  090E                     	;# 
  2004  090F                     	;# 
  2005  091F                     	;# 
  2006  091F                     	;# 
  2007  098F                     	;# 
  2008  098F                     	;# 
  2009  0990                     	;# 
  2010  0991                     	;# 
  2011  0992                     	;# 
  2012  0993                     	;# 
  2013  0994                     	;# 
  2014  0995                     	;# 
  2015  0996                     	;# 
  2016  0997                     	;# 
  2017  0E0F                     	;# 
  2018  0E10                     	;# 
  2019  0E11                     	;# 
  2020  0E12                     	;# 
  2021  0E13                     	;# 
  2022  0E14                     	;# 
  2023  0E15                     	;# 
  2024  0E16                     	;# 
  2025  0E17                     	;# 
  2026  0E18                     	;# 
  2027  0E19                     	;# 
  2028  0E1A                     	;# 
  2029  0E1B                     	;# 
  2030  0E1C                     	;# 
  2031  0E1D                     	;# 
  2032  0E1E                     	;# 
  2033  0E1F                     	;# 
  2034  0E20                     	;# 
  2035  0E21                     	;# 
  2036  0E22                     	;# 
  2037  0E23                     	;# 
  2038  0E24                     	;# 
  2039  0E25                     	;# 
  2040  0E26                     	;# 
  2041  0E27                     	;# 
  2042  0E28                     	;# 
  2043  0E29                     	;# 
  2044  0E2A                     	;# 
  2045  0E2B                     	;# 
  2046  0E2C                     	;# 
  2047  0E2D                     	;# 
  2048  0E2E                     	;# 
  2049  0E2F                     	;# 
  2050  0E30                     	;# 
  2051  0E31                     	;# 
  2052  0E32                     	;# 
  2053  0E33                     	;# 
  2054  0E34                     	;# 
  2055  0E35                     	;# 
  2056  0E36                     	;# 
  2057  0E37                     	;# 
  2058  0E8F                     	;# 
  2059  0E90                     	;# 
  2060  0E91                     	;# 
  2061  0E92                     	;# 
  2062  0E93                     	;# 
  2063  0E94                     	;# 
  2064  0E95                     	;# 
  2065  0E96                     	;# 
  2066  0E97                     	;# 
  2067  0E9C                     	;# 
  2068  0E9D                     	;# 
  2069  0E9E                     	;# 
  2070  0EA1                     	;# 
  2071  0EA2                     	;# 
  2072  0EA3                     	;# 
  2073  0EA4                     	;# 
  2074  0EA5                     	;# 
  2075  0EA9                     	;# 
  2076  0EAA                     	;# 
  2077  0EAB                     	;# 
  2078  0EAC                     	;# 
  2079  0EB1                     	;# 
  2080  0EB2                     	;# 
  2081  0EB3                     	;# 
  2082  0EB8                     	;# 
  2083  0EB9                     	;# 
  2084  0EBA                     	;# 
  2085  0EBB                     	;# 
  2086  0EBC                     	;# 
  2087  0EBD                     	;# 
  2088  0EBE                     	;# 
  2089  0EC3                     	;# 
  2090  0EC5                     	;# 
  2091  0EC6                     	;# 
  2092  0EC7                     	;# 
  2093  0EC8                     	;# 
  2094  0EC9                     	;# 
  2095  0ECA                     	;# 
  2096  0ECB                     	;# 
  2097  0ECC                     	;# 
  2098  0F10                     	;# 
  2099  0F11                     	;# 
  2100  0F12                     	;# 
  2101  0F13                     	;# 
  2102  0F14                     	;# 
  2103  0F15                     	;# 
  2104  0F16                     	;# 
  2105  0F17                     	;# 
  2106  0F18                     	;# 
  2107  0F19                     	;# 
  2108  0F1A                     	;# 
  2109  0F1B                     	;# 
  2110  0F1C                     	;# 
  2111  0F1D                     	;# 
  2112  0F1E                     	;# 
  2113  0F1F                     	;# 
  2114  0F20                     	;# 
  2115  0F21                     	;# 
  2116  0F22                     	;# 
  2117  0F23                     	;# 
  2118  0F24                     	;# 
  2119  0F25                     	;# 
  2120  0F26                     	;# 
  2121  0F27                     	;# 
  2122  0F38                     	;# 
  2123  0F39                     	;# 
  2124  0F3A                     	;# 
  2125  0F3B                     	;# 
  2126  0F3C                     	;# 
  2127  0F3D                     	;# 
  2128  0F3E                     	;# 
  2129  0F3F                     	;# 
  2130  0F40                     	;# 
  2131  0F41                     	;# 
  2132  0F43                     	;# 
  2133  0F44                     	;# 
  2134  0F45                     	;# 
  2135  0F46                     	;# 
  2136  0F47                     	;# 
  2137  0F48                     	;# 
  2138  0F49                     	;# 
  2139  0F4A                     	;# 
  2140  0F4B                     	;# 
  2141  0F4C                     	;# 
  2142  0F4E                     	;# 
  2143  0F4F                     	;# 
  2144  0F50                     	;# 
  2145  0F51                     	;# 
  2146  0F52                     	;# 
  2147  0F53                     	;# 
  2148  0F54                     	;# 
  2149  0F55                     	;# 
  2150  0F56                     	;# 
  2151  0F57                     	;# 
  2152  0F65                     	;# 
  2153  0F68                     	;# 
  2154  0F69                     	;# 
  2155  0F6A                     	;# 
  2156  0F6B                     	;# 
  2157  0FE4                     	;# 
  2158  0FE5                     	;# 
  2159  0FE6                     	;# 
  2160  0FE7                     	;# 
  2161  0FE8                     	;# 
  2162  0FE9                     	;# 
  2163  0FEA                     	;# 
  2164  0FEB                     	;# 
  2165  0FED                     	;# 
  2166  0FEE                     	;# 
  2167  0FEF                     	;# 
  2168  0000                     	;# 
  2169  0001                     	;# 
  2170  0002                     	;# 
  2171  0003                     	;# 
  2172  0004                     	;# 
  2173  0005                     	;# 
  2174  0006                     	;# 
  2175  0007                     	;# 
  2176  0008                     	;# 
  2177  0009                     	;# 
  2178  000A                     	;# 
  2179  000B                     	;# 
  2180  000C                     	;# 
  2181  000D                     	;# 
  2182  000E                     	;# 
  2183  0010                     	;# 
  2184  0011                     	;# 
  2185  0012                     	;# 
  2186  0013                     	;# 
  2187  0016                     	;# 
  2188  0017                     	;# 
  2189  0018                     	;# 
  2190  001C                     	;# 
  2191  001C                     	;# 
  2192  001D                     	;# 
  2193  001D                     	;# 
  2194  001E                     	;# 
  2195  001F                     	;# 
  2196  008C                     	;# 
  2197  008C                     	;# 
  2198  008D                     	;# 
  2199  008E                     	;# 
  2200  008E                     	;# 
  2201  008F                     	;# 
  2202  0090                     	;# 
  2203  0090                     	;# 
  2204  0091                     	;# 
  2205  0093                     	;# 
  2206  0094                     	;# 
  2207  0095                     	;# 
  2208  0096                     	;# 
  2209  0097                     	;# 
  2210  0098                     	;# 
  2211  0099                     	;# 
  2212  009A                     	;# 
  2213  009B                     	;# 
  2214  009C                     	;# 
  2215  009D                     	;# 
  2216  009E                     	;# 
  2217  010C                     	;# 
  2218  010D                     	;# 
  2219  010E                     	;# 
  2220  010E                     	;# 
  2221  010F                     	;# 
  2222  0110                     	;# 
  2223  0110                     	;# 
  2224  0111                     	;# 
  2225  0112                     	;# 
  2226  0112                     	;# 
  2227  0113                     	;# 
  2228  0114                     	;# 
  2229  0114                     	;# 
  2230  0115                     	;# 
  2231  0116                     	;# 
  2232  0116                     	;# 
  2233  0117                     	;# 
  2234  0119                     	;# 
  2235  0119                     	;# 
  2236  0119                     	;# 
  2237  011A                     	;# 
  2238  011A                     	;# 
  2239  011A                     	;# 
  2240  011B                     	;# 
  2241  011B                     	;# 
  2242  011B                     	;# 
  2243  011B                     	;# 
  2244  011B                     	;# 
  2245  011C                     	;# 
  2246  011C                     	;# 
  2247  011C                     	;# 
  2248  011D                     	;# 
  2249  011D                     	;# 
  2250  011D                     	;# 
  2251  011E                     	;# 
  2252  011E                     	;# 
  2253  011E                     	;# 
  2254  011F                     	;# 
  2255  011F                     	;# 
  2256  011F                     	;# 
  2257  011F                     	;# 
  2258  011F                     	;# 
  2259  018C                     	;# 
  2260  018D                     	;# 
  2261  018E                     	;# 
  2262  018F                     	;# 
  2263  0190                     	;# 
  2264  0191                     	;# 
  2265  0192                     	;# 
  2266  0196                     	;# 
  2267  0197                     	;# 
  2268  0198                     	;# 
  2269  0199                     	;# 
  2270  019A                     	;# 
  2271  019B                     	;# 
  2272  019C                     	;# 
  2273  020C                     	;# 
  2274  020C                     	;# 
  2275  020D                     	;# 
  2276  020E                     	;# 
  2277  020F                     	;# 
  2278  020F                     	;# 
  2279  0210                     	;# 
  2280  0210                     	;# 
  2281  0211                     	;# 
  2282  0211                     	;# 
  2283  0212                     	;# 
  2284  0212                     	;# 
  2285  0213                     	;# 
  2286  0214                     	;# 
  2287  0215                     	;# 
  2288  0215                     	;# 
  2289  0216                     	;# 
  2290  0216                     	;# 
  2291  0217                     	;# 
  2292  0217                     	;# 
  2293  0218                     	;# 
  2294  0218                     	;# 
  2295  0219                     	;# 
  2296  021A                     	;# 
  2297  021B                     	;# 
  2298  021B                     	;# 
  2299  021C                     	;# 
  2300  021C                     	;# 
  2301  021D                     	;# 
  2302  021D                     	;# 
  2303  021E                     	;# 
  2304  021F                     	;# 
  2305  028C                     	;# 
  2306  028C                     	;# 
  2307  028D                     	;# 
  2308  028D                     	;# 
  2309  028E                     	;# 
  2310  028F                     	;# 
  2311  0290                     	;# 
  2312  0290                     	;# 
  2313  0291                     	;# 
  2314  0292                     	;# 
  2315  0292                     	;# 
  2316  0293                     	;# 
  2317  0293                     	;# 
  2318  0294                     	;# 
  2319  0295                     	;# 
  2320  0296                     	;# 
  2321  0296                     	;# 
  2322  0297                     	;# 
  2323  0298                     	;# 
  2324  0298                     	;# 
  2325  0299                     	;# 
  2326  0299                     	;# 
  2327  029A                     	;# 
  2328  029B                     	;# 
  2329  029C                     	;# 
  2330  029C                     	;# 
  2331  029D                     	;# 
  2332  030C                     	;# 
  2333  030C                     	;# 
  2334  030D                     	;# 
  2335  030E                     	;# 
  2336  030F                     	;# 
  2337  0310                     	;# 
  2338  0310                     	;# 
  2339  0311                     	;# 
  2340  0312                     	;# 
  2341  0313                     	;# 
  2342  0314                     	;# 
  2343  0314                     	;# 
  2344  0315                     	;# 
  2345  0316                     	;# 
  2346  0317                     	;# 
  2347  0318                     	;# 
  2348  0318                     	;# 
  2349  0319                     	;# 
  2350  031A                     	;# 
  2351  031B                     	;# 
  2352  031C                     	;# 
  2353  031C                     	;# 
  2354  031D                     	;# 
  2355  031E                     	;# 
  2356  031F                     	;# 
  2357  038C                     	;# 
  2358  038D                     	;# 
  2359  038E                     	;# 
  2360  0390                     	;# 
  2361  0391                     	;# 
  2362  0392                     	;# 
  2363  040C                     	;# 
  2364  040D                     	;# 
  2365  040E                     	;# 
  2366  040F                     	;# 
  2367  0410                     	;# 
  2368  0411                     	;# 
  2369  0416                     	;# 
  2370  0416                     	;# 
  2371  0417                     	;# 
  2372  0418                     	;# 
  2373  0418                     	;# 
  2374  0419                     	;# 
  2375  041A                     	;# 
  2376  041A                     	;# 
  2377  041B                     	;# 
  2378  041C                     	;# 
  2379  041C                     	;# 
  2380  041D                     	;# 
  2381  041E                     	;# 
  2382  041F                     	;# 
  2383  048C                     	;# 
  2384  048C                     	;# 
  2385  048D                     	;# 
  2386  048E                     	;# 
  2387  048F                     	;# 
  2388  048F                     	;# 
  2389  0490                     	;# 
  2390  0491                     	;# 
  2391  0492                     	;# 
  2392  0492                     	;# 
  2393  0493                     	;# 
  2394  0494                     	;# 
  2395  0495                     	;# 
  2396  0495                     	;# 
  2397  0496                     	;# 
  2398  0497                     	;# 
  2399  0498                     	;# 
  2400  0499                     	;# 
  2401  049A                     	;# 
  2402  049B                     	;# 
  2403  049C                     	;# 
  2404  049D                     	;# 
  2405  050C                     	;# 
  2406  050C                     	;# 
  2407  050D                     	;# 
  2408  050E                     	;# 
  2409  050F                     	;# 
  2410  050F                     	;# 
  2411  0510                     	;# 
  2412  0511                     	;# 
  2413  0512                     	;# 
  2414  0512                     	;# 
  2415  0513                     	;# 
  2416  0514                     	;# 
  2417  0515                     	;# 
  2418  0515                     	;# 
  2419  0516                     	;# 
  2420  0517                     	;# 
  2421  0518                     	;# 
  2422  0519                     	;# 
  2423  051A                     	;# 
  2424  051B                     	;# 
  2425  051C                     	;# 
  2426  051D                     	;# 
  2427  058C                     	;# 
  2428  058C                     	;# 
  2429  058D                     	;# 
  2430  058E                     	;# 
  2431  058F                     	;# 
  2432  058F                     	;# 
  2433  0590                     	;# 
  2434  0591                     	;# 
  2435  0592                     	;# 
  2436  0593                     	;# 
  2437  060C                     	;# 
  2438  060D                     	;# 
  2439  060E                     	;# 
  2440  060F                     	;# 
  2441  0610                     	;# 
  2442  0611                     	;# 
  2443  0612                     	;# 
  2444  0613                     	;# 
  2445  0614                     	;# 
  2446  0616                     	;# 
  2447  0617                     	;# 
  2448  0618                     	;# 
  2449  0619                     	;# 
  2450  061A                     	;# 
  2451  061B                     	;# 
  2452  061C                     	;# 
  2453  061D                     	;# 
  2454  061E                     	;# 
  2455  068C                     	;# 
  2456  068D                     	;# 
  2457  068E                     	;# 
  2458  068F                     	;# 
  2459  0690                     	;# 
  2460  0691                     	;# 
  2461  0692                     	;# 
  2462  0693                     	;# 
  2463  0694                     	;# 
  2464  070C                     	;# 
  2465  070D                     	;# 
  2466  070E                     	;# 
  2467  070F                     	;# 
  2468  0710                     	;# 
  2469  0711                     	;# 
  2470  0712                     	;# 
  2471  0713                     	;# 
  2472  0714                     	;# 
  2473  0716                     	;# 
  2474  0717                     	;# 
  2475  0718                     	;# 
  2476  0719                     	;# 
  2477  071A                     	;# 
  2478  071B                     	;# 
  2479  071C                     	;# 
  2480  071D                     	;# 
  2481  071E                     	;# 
  2482  0796                     	;# 
  2483  0797                     	;# 
  2484  0798                     	;# 
  2485  0799                     	;# 
  2486  079A                     	;# 
  2487  079B                     	;# 
  2488  080C                     	;# 
  2489  080D                     	;# 
  2490  080E                     	;# 
  2491  080F                     	;# 
  2492  0810                     	;# 
  2493  0811                     	;# 
  2494  0812                     	;# 
  2495  0813                     	;# 
  2496  0814                     	;# 
  2497  081A                     	;# 
  2498  081B                     	;# 
  2499  081C                     	;# 
  2500  081D                     	;# 
  2501  081E                     	;# 
  2502  081F                     	;# 
  2503  088C                     	;# 
  2504  088D                     	;# 
  2505  088E                     	;# 
  2506  088F                     	;# 
  2507  0890                     	;# 
  2508  0891                     	;# 
  2509  0892                     	;# 
  2510  0893                     	;# 
  2511  0895                     	;# 
  2512  0896                     	;# 
  2513  0897                     	;# 
  2514  0898                     	;# 
  2515  0899                     	;# 
  2516  089A                     	;# 
  2517  089B                     	;# 
  2518  090C                     	;# 
  2519  090E                     	;# 
  2520  090F                     	;# 
  2521  091F                     	;# 
  2522  091F                     	;# 
  2523  098F                     	;# 
  2524  098F                     	;# 
  2525  0990                     	;# 
  2526  0991                     	;# 
  2527  0992                     	;# 
  2528  0993                     	;# 
  2529  0994                     	;# 
  2530  0995                     	;# 
  2531  0996                     	;# 
  2532  0997                     	;# 
  2533  0E0F                     	;# 
  2534  0E10                     	;# 
  2535  0E11                     	;# 
  2536  0E12                     	;# 
  2537  0E13                     	;# 
  2538  0E14                     	;# 
  2539  0E15                     	;# 
  2540  0E16                     	;# 
  2541  0E17                     	;# 
  2542  0E18                     	;# 
  2543  0E19                     	;# 
  2544  0E1A                     	;# 
  2545  0E1B                     	;# 
  2546  0E1C                     	;# 
  2547  0E1D                     	;# 
  2548  0E1E                     	;# 
  2549  0E1F                     	;# 
  2550  0E20                     	;# 
  2551  0E21                     	;# 
  2552  0E22                     	;# 
  2553  0E23                     	;# 
  2554  0E24                     	;# 
  2555  0E25                     	;# 
  2556  0E26                     	;# 
  2557  0E27                     	;# 
  2558  0E28                     	;# 
  2559  0E29                     	;# 
  2560  0E2A                     	;# 
  2561  0E2B                     	;# 
  2562  0E2C                     	;# 
  2563  0E2D                     	;# 
  2564  0E2E                     	;# 
  2565  0E2F                     	;# 
  2566  0E30                     	;# 
  2567  0E31                     	;# 
  2568  0E32                     	;# 
  2569  0E33                     	;# 
  2570  0E34                     	;# 
  2571  0E35                     	;# 
  2572  0E36                     	;# 
  2573  0E37                     	;# 
  2574  0E8F                     	;# 
  2575  0E90                     	;# 
  2576  0E91                     	;# 
  2577  0E92                     	;# 
  2578  0E93                     	;# 
  2579  0E94                     	;# 
  2580  0E95                     	;# 
  2581  0E96                     	;# 
  2582  0E97                     	;# 
  2583  0E9C                     	;# 
  2584  0E9D                     	;# 
  2585  0E9E                     	;# 
  2586  0EA1                     	;# 
  2587  0EA2                     	;# 
  2588  0EA3                     	;# 
  2589  0EA4                     	;# 
  2590  0EA5                     	;# 
  2591  0EA9                     	;# 
  2592  0EAA                     	;# 
  2593  0EAB                     	;# 
  2594  0EAC                     	;# 
  2595  0EB1                     	;# 
  2596  0EB2                     	;# 
  2597  0EB3                     	;# 
  2598  0EB8                     	;# 
  2599  0EB9                     	;# 
  2600  0EBA                     	;# 
  2601  0EBB                     	;# 
  2602  0EBC                     	;# 
  2603  0EBD                     	;# 
  2604  0EBE                     	;# 
  2605  0EC3                     	;# 
  2606  0EC5                     	;# 
  2607  0EC6                     	;# 
  2608  0EC7                     	;# 
  2609  0EC8                     	;# 
  2610  0EC9                     	;# 
  2611  0ECA                     	;# 
  2612  0ECB                     	;# 
  2613  0ECC                     	;# 
  2614  0F10                     	;# 
  2615  0F11                     	;# 
  2616  0F12                     	;# 
  2617  0F13                     	;# 
  2618  0F14                     	;# 
  2619  0F15                     	;# 
  2620  0F16                     	;# 
  2621  0F17                     	;# 
  2622  0F18                     	;# 
  2623  0F19                     	;# 
  2624  0F1A                     	;# 
  2625  0F1B                     	;# 
  2626  0F1C                     	;# 
  2627  0F1D                     	;# 
  2628  0F1E                     	;# 
  2629  0F1F                     	;# 
  2630  0F20                     	;# 
  2631  0F21                     	;# 
  2632  0F22                     	;# 
  2633  0F23                     	;# 
  2634  0F24                     	;# 
  2635  0F25                     	;# 
  2636  0F26                     	;# 
  2637  0F27                     	;# 
  2638  0F38                     	;# 
  2639  0F39                     	;# 
  2640  0F3A                     	;# 
  2641  0F3B                     	;# 
  2642  0F3C                     	;# 
  2643  0F3D                     	;# 
  2644  0F3E                     	;# 
  2645  0F3F                     	;# 
  2646  0F40                     	;# 
  2647  0F41                     	;# 
  2648  0F43                     	;# 
  2649  0F44                     	;# 
  2650  0F45                     	;# 
  2651  0F46                     	;# 
  2652  0F47                     	;# 
  2653  0F48                     	;# 
  2654  0F49                     	;# 
  2655  0F4A                     	;# 
  2656  0F4B                     	;# 
  2657  0F4C                     	;# 
  2658  0F4E                     	;# 
  2659  0F4F                     	;# 
  2660  0F50                     	;# 
  2661  0F51                     	;# 
  2662  0F52                     	;# 
  2663  0F53                     	;# 
  2664  0F54                     	;# 
  2665  0F55                     	;# 
  2666  0F56                     	;# 
  2667  0F57                     	;# 
  2668  0F65                     	;# 
  2669  0F68                     	;# 
  2670  0F69                     	;# 
  2671  0F6A                     	;# 
  2672  0F6B                     	;# 
  2673  0FE4                     	;# 
  2674  0FE5                     	;# 
  2675  0FE6                     	;# 
  2676  0FE7                     	;# 
  2677  0FE8                     	;# 
  2678  0FE9                     	;# 
  2679  0FEA                     	;# 
  2680  0FEB                     	;# 
  2681  0FED                     	;# 
  2682  0FEE                     	;# 
  2683  0FEF                     	;# 
  2684  0000                     	;# 
  2685  0001                     	;# 
  2686  0002                     	;# 
  2687  0003                     	;# 
  2688  0004                     	;# 
  2689  0005                     	;# 
  2690  0006                     	;# 
  2691  0007                     	;# 
  2692  0008                     	;# 
  2693  0009                     	;# 
  2694  000A                     	;# 
  2695  000B                     	;# 
  2696  000C                     	;# 
  2697  000D                     	;# 
  2698  000E                     	;# 
  2699  0010                     	;# 
  2700  0011                     	;# 
  2701  0012                     	;# 
  2702  0013                     	;# 
  2703  0016                     	;# 
  2704  0017                     	;# 
  2705  0018                     	;# 
  2706  001C                     	;# 
  2707  001C                     	;# 
  2708  001D                     	;# 
  2709  001D                     	;# 
  2710  001E                     	;# 
  2711  001F                     	;# 
  2712  008C                     	;# 
  2713  008C                     	;# 
  2714  008D                     	;# 
  2715  008E                     	;# 
  2716  008E                     	;# 
  2717  008F                     	;# 
  2718  0090                     	;# 
  2719  0090                     	;# 
  2720  0091                     	;# 
  2721  0093                     	;# 
  2722  0094                     	;# 
  2723  0095                     	;# 
  2724  0096                     	;# 
  2725  0097                     	;# 
  2726  0098                     	;# 
  2727  0099                     	;# 
  2728  009A                     	;# 
  2729  009B                     	;# 
  2730  009C                     	;# 
  2731  009D                     	;# 
  2732  009E                     	;# 
  2733  010C                     	;# 
  2734  010D                     	;# 
  2735  010E                     	;# 
  2736  010E                     	;# 
  2737  010F                     	;# 
  2738  0110                     	;# 
  2739  0110                     	;# 
  2740  0111                     	;# 
  2741  0112                     	;# 
  2742  0112                     	;# 
  2743  0113                     	;# 
  2744  0114                     	;# 
  2745  0114                     	;# 
  2746  0115                     	;# 
  2747  0116                     	;# 
  2748  0116                     	;# 
  2749  0117                     	;# 
  2750  0119                     	;# 
  2751  0119                     	;# 
  2752  0119                     	;# 
  2753  011A                     	;# 
  2754  011A                     	;# 
  2755  011A                     	;# 
  2756  011B                     	;# 
  2757  011B                     	;# 
  2758  011B                     	;# 
  2759  011B                     	;# 
  2760  011B                     	;# 
  2761  011C                     	;# 
  2762  011C                     	;# 
  2763  011C                     	;# 
  2764  011D                     	;# 
  2765  011D                     	;# 
  2766  011D                     	;# 
  2767  011E                     	;# 
  2768  011E                     	;# 
  2769  011E                     	;# 
  2770  011F                     	;# 
  2771  011F                     	;# 
  2772  011F                     	;# 
  2773  011F                     	;# 
  2774  011F                     	;# 
  2775  018C                     	;# 
  2776  018D                     	;# 
  2777  018E                     	;# 
  2778  018F                     	;# 
  2779  0190                     	;# 
  2780  0191                     	;# 
  2781  0192                     	;# 
  2782  0196                     	;# 
  2783  0197                     	;# 
  2784  0198                     	;# 
  2785  0199                     	;# 
  2786  019A                     	;# 
  2787  019B                     	;# 
  2788  019C                     	;# 
  2789  020C                     	;# 
  2790  020C                     	;# 
  2791  020D                     	;# 
  2792  020E                     	;# 
  2793  020F                     	;# 
  2794  020F                     	;# 
  2795  0210                     	;# 
  2796  0210                     	;# 
  2797  0211                     	;# 
  2798  0211                     	;# 
  2799  0212                     	;# 
  2800  0212                     	;# 
  2801  0213                     	;# 
  2802  0214                     	;# 
  2803  0215                     	;# 
  2804  0215                     	;# 
  2805  0216                     	;# 
  2806  0216                     	;# 
  2807  0217                     	;# 
  2808  0217                     	;# 
  2809  0218                     	;# 
  2810  0218                     	;# 
  2811  0219                     	;# 
  2812  021A                     	;# 
  2813  021B                     	;# 
  2814  021B                     	;# 
  2815  021C                     	;# 
  2816  021C                     	;# 
  2817  021D                     	;# 
  2818  021D                     	;# 
  2819  021E                     	;# 
  2820  021F                     	;# 
  2821  028C                     	;# 
  2822  028C                     	;# 
  2823  028D                     	;# 
  2824  028D                     	;# 
  2825  028E                     	;# 
  2826  028F                     	;# 
  2827  0290                     	;# 
  2828  0290                     	;# 
  2829  0291                     	;# 
  2830  0292                     	;# 
  2831  0292                     	;# 
  2832  0293                     	;# 
  2833  0293                     	;# 
  2834  0294                     	;# 
  2835  0295                     	;# 
  2836  0296                     	;# 
  2837  0296                     	;# 
  2838  0297                     	;# 
  2839  0298                     	;# 
  2840  0298                     	;# 
  2841  0299                     	;# 
  2842  0299                     	;# 
  2843  029A                     	;# 
  2844  029B                     	;# 
  2845  029C                     	;# 
  2846  029C                     	;# 
  2847  029D                     	;# 
  2848  030C                     	;# 
  2849  030C                     	;# 
  2850  030D                     	;# 
  2851  030E                     	;# 
  2852  030F                     	;# 
  2853  0310                     	;# 
  2854  0310                     	;# 
  2855  0311                     	;# 
  2856  0312                     	;# 
  2857  0313                     	;# 
  2858  0314                     	;# 
  2859  0314                     	;# 
  2860  0315                     	;# 
  2861  0316                     	;# 
  2862  0317                     	;# 
  2863  0318                     	;# 
  2864  0318                     	;# 
  2865  0319                     	;# 
  2866  031A                     	;# 
  2867  031B                     	;# 
  2868  031C                     	;# 
  2869  031C                     	;# 
  2870  031D                     	;# 
  2871  031E                     	;# 
  2872  031F                     	;# 
  2873  038C                     	;# 
  2874  038D                     	;# 
  2875  038E                     	;# 
  2876  0390                     	;# 
  2877  0391                     	;# 
  2878  0392                     	;# 
  2879  040C                     	;# 
  2880  040D                     	;# 
  2881  040E                     	;# 
  2882  040F                     	;# 
  2883  0410                     	;# 
  2884  0411                     	;# 
  2885  0416                     	;# 
  2886  0416                     	;# 
  2887  0417                     	;# 
  2888  0418                     	;# 
  2889  0418                     	;# 
  2890  0419                     	;# 
  2891  041A                     	;# 
  2892  041A                     	;# 
  2893  041B                     	;# 
  2894  041C                     	;# 
  2895  041C                     	;# 
  2896  041D                     	;# 
  2897  041E                     	;# 
  2898  041F                     	;# 
  2899  048C                     	;# 
  2900  048C                     	;# 
  2901  048D                     	;# 
  2902  048E                     	;# 
  2903  048F                     	;# 
  2904  048F                     	;# 
  2905  0490                     	;# 
  2906  0491                     	;# 
  2907  0492                     	;# 
  2908  0492                     	;# 
  2909  0493                     	;# 
  2910  0494                     	;# 
  2911  0495                     	;# 
  2912  0495                     	;# 
  2913  0496                     	;# 
  2914  0497                     	;# 
  2915  0498                     	;# 
  2916  0499                     	;# 
  2917  049A                     	;# 
  2918  049B                     	;# 
  2919  049C                     	;# 
  2920  049D                     	;# 
  2921  050C                     	;# 
  2922  050C                     	;# 
  2923  050D                     	;# 
  2924  050E                     	;# 
  2925  050F                     	;# 
  2926  050F                     	;# 
  2927  0510                     	;# 
  2928  0511                     	;# 
  2929  0512                     	;# 
  2930  0512                     	;# 
  2931  0513                     	;# 
  2932  0514                     	;# 
  2933  0515                     	;# 
  2934  0515                     	;# 
  2935  0516                     	;# 
  2936  0517                     	;# 
  2937  0518                     	;# 
  2938  0519                     	;# 
  2939  051A                     	;# 
  2940  051B                     	;# 
  2941  051C                     	;# 
  2942  051D                     	;# 
  2943  058C                     	;# 
  2944  058C                     	;# 
  2945  058D                     	;# 
  2946  058E                     	;# 
  2947  058F                     	;# 
  2948  058F                     	;# 
  2949  0590                     	;# 
  2950  0591                     	;# 
  2951  0592                     	;# 
  2952  0593                     	;# 
  2953  060C                     	;# 
  2954  060D                     	;# 
  2955  060E                     	;# 
  2956  060F                     	;# 
  2957  0610                     	;# 
  2958  0611                     	;# 
  2959  0612                     	;# 
  2960  0613                     	;# 
  2961  0614                     	;# 
  2962  0616                     	;# 
  2963  0617                     	;# 
  2964  0618                     	;# 
  2965  0619                     	;# 
  2966  061A                     	;# 
  2967  061B                     	;# 
  2968  061C                     	;# 
  2969  061D                     	;# 
  2970  061E                     	;# 
  2971  068C                     	;# 
  2972  068D                     	;# 
  2973  068E                     	;# 
  2974  068F                     	;# 
  2975  0690                     	;# 
  2976  0691                     	;# 
  2977  0692                     	;# 
  2978  0693                     	;# 
  2979  0694                     	;# 
  2980  070C                     	;# 
  2981  070D                     	;# 
  2982  070E                     	;# 
  2983  070F                     	;# 
  2984  0710                     	;# 
  2985  0711                     	;# 
  2986  0712                     	;# 
  2987  0713                     	;# 
  2988  0714                     	;# 
  2989  0716                     	;# 
  2990  0717                     	;# 
  2991  0718                     	;# 
  2992  0719                     	;# 
  2993  071A                     	;# 
  2994  071B                     	;# 
  2995  071C                     	;# 
  2996  071D                     	;# 
  2997  071E                     	;# 
  2998  0796                     	;# 
  2999  0797                     	;# 
  3000  0798                     	;# 
  3001  0799                     	;# 
  3002  079A                     	;# 
  3003  079B                     	;# 
  3004  080C                     	;# 
  3005  080D                     	;# 
  3006  080E                     	;# 
  3007  080F                     	;# 
  3008  0810                     	;# 
  3009  0811                     	;# 
  3010  0812                     	;# 
  3011  0813                     	;# 
  3012  0814                     	;# 
  3013  081A                     	;# 
  3014  081B                     	;# 
  3015  081C                     	;# 
  3016  081D                     	;# 
  3017  081E                     	;# 
  3018  081F                     	;# 
  3019  088C                     	;# 
  3020  088D                     	;# 
  3021  088E                     	;# 
  3022  088F                     	;# 
  3023  0890                     	;# 
  3024  0891                     	;# 
  3025  0892                     	;# 
  3026  0893                     	;# 
  3027  0895                     	;# 
  3028  0896                     	;# 
  3029  0897                     	;# 
  3030  0898                     	;# 
  3031  0899                     	;# 
  3032  089A                     	;# 
  3033  089B                     	;# 
  3034  090C                     	;# 
  3035  090E                     	;# 
  3036  090F                     	;# 
  3037  091F                     	;# 
  3038  091F                     	;# 
  3039  098F                     	;# 
  3040  098F                     	;# 
  3041  0990                     	;# 
  3042  0991                     	;# 
  3043  0992                     	;# 
  3044  0993                     	;# 
  3045  0994                     	;# 
  3046  0995                     	;# 
  3047  0996                     	;# 
  3048  0997                     	;# 
  3049  0E0F                     	;# 
  3050  0E10                     	;# 
  3051  0E11                     	;# 
  3052  0E12                     	;# 
  3053  0E13                     	;# 
  3054  0E14                     	;# 
  3055  0E15                     	;# 
  3056  0E16                     	;# 
  3057  0E17                     	;# 
  3058  0E18                     	;# 
  3059  0E19                     	;# 
  3060  0E1A                     	;# 
  3061  0E1B                     	;# 
  3062  0E1C                     	;# 
  3063  0E1D                     	;# 
  3064  0E1E                     	;# 
  3065  0E1F                     	;# 
  3066  0E20                     	;# 
  3067  0E21                     	;# 
  3068  0E22                     	;# 
  3069  0E23                     	;# 
  3070  0E24                     	;# 
  3071  0E25                     	;# 
  3072  0E26                     	;# 
  3073  0E27                     	;# 
  3074  0E28                     	;# 
  3075  0E29                     	;# 
  3076  0E2A                     	;# 
  3077  0E2B                     	;# 
  3078  0E2C                     	;# 
  3079  0E2D                     	;# 
  3080  0E2E                     	;# 
  3081  0E2F                     	;# 
  3082  0E30                     	;# 
  3083  0E31                     	;# 
  3084  0E32                     	;# 
  3085  0E33                     	;# 
  3086  0E34                     	;# 
  3087  0E35                     	;# 
  3088  0E36                     	;# 
  3089  0E37                     	;# 
  3090  0E8F                     	;# 
  3091  0E90                     	;# 
  3092  0E91                     	;# 
  3093  0E92                     	;# 
  3094  0E93                     	;# 
  3095  0E94                     	;# 
  3096  0E95                     	;# 
  3097  0E96                     	;# 
  3098  0E97                     	;# 
  3099  0E9C                     	;# 
  3100  0E9D                     	;# 
  3101  0E9E                     	;# 
  3102  0EA1                     	;# 
  3103  0EA2                     	;# 
  3104  0EA3                     	;# 
  3105  0EA4                     	;# 
  3106  0EA5                     	;# 
  3107  0EA9                     	;# 
  3108  0EAA                     	;# 
  3109  0EAB                     	;# 
  3110  0EAC                     	;# 
  3111  0EB1                     	;# 
  3112  0EB2                     	;# 
  3113  0EB3                     	;# 
  3114  0EB8                     	;# 
  3115  0EB9                     	;# 
  3116  0EBA                     	;# 
  3117  0EBB                     	;# 
  3118  0EBC                     	;# 
  3119  0EBD                     	;# 
  3120  0EBE                     	;# 
  3121  0EC3                     	;# 
  3122  0EC5                     	;# 
  3123  0EC6                     	;# 
  3124  0EC7                     	;# 
  3125  0EC8                     	;# 
  3126  0EC9                     	;# 
  3127  0ECA                     	;# 
  3128  0ECB                     	;# 
  3129  0ECC                     	;# 
  3130  0F10                     	;# 
  3131  0F11                     	;# 
  3132  0F12                     	;# 
  3133  0F13                     	;# 
  3134  0F14                     	;# 
  3135  0F15                     	;# 
  3136  0F16                     	;# 
  3137  0F17                     	;# 
  3138  0F18                     	;# 
  3139  0F19                     	;# 
  3140  0F1A                     	;# 
  3141  0F1B                     	;# 
  3142  0F1C                     	;# 
  3143  0F1D                     	;# 
  3144  0F1E                     	;# 
  3145  0F1F                     	;# 
  3146  0F20                     	;# 
  3147  0F21                     	;# 
  3148  0F22                     	;# 
  3149  0F23                     	;# 
  3150  0F24                     	;# 
  3151  0F25                     	;# 
  3152  0F26                     	;# 
  3153  0F27                     	;# 
  3154  0F38                     	;# 
  3155  0F39                     	;# 
  3156  0F3A                     	;# 
  3157  0F3B                     	;# 
  3158  0F3C                     	;# 
  3159  0F3D                     	;# 
  3160  0F3E                     	;# 
  3161  0F3F                     	;# 
  3162  0F40                     	;# 
  3163  0F41                     	;# 
  3164  0F43                     	;# 
  3165  0F44                     	;# 
  3166  0F45                     	;# 
  3167  0F46                     	;# 
  3168  0F47                     	;# 
  3169  0F48                     	;# 
  3170  0F49                     	;# 
  3171  0F4A                     	;# 
  3172  0F4B                     	;# 
  3173  0F4C                     	;# 
  3174  0F4E                     	;# 
  3175  0F4F                     	;# 
  3176  0F50                     	;# 
  3177  0F51                     	;# 
  3178  0F52                     	;# 
  3179  0F53                     	;# 
  3180  0F54                     	;# 
  3181  0F55                     	;# 
  3182  0F56                     	;# 
  3183  0F57                     	;# 
  3184  0F65                     	;# 
  3185  0F68                     	;# 
  3186  0F69                     	;# 
  3187  0F6A                     	;# 
  3188  0F6B                     	;# 
  3189  0FE4                     	;# 
  3190  0FE5                     	;# 
  3191  0FE6                     	;# 
  3192  0FE7                     	;# 
  3193  0FE8                     	;# 
  3194  0FE9                     	;# 
  3195  0FEA                     	;# 
  3196  0FEB                     	;# 
  3197  0FED                     	;# 
  3198  0FEE                     	;# 
  3199  0FEF                     	;# 
  3200  0000                     	;# 
  3201  0001                     	;# 
  3202  0002                     	;# 
  3203  0003                     	;# 
  3204  0004                     	;# 
  3205  0005                     	;# 
  3206  0006                     	;# 
  3207  0007                     	;# 
  3208  0008                     	;# 
  3209  0009                     	;# 
  3210  000A                     	;# 
  3211  000B                     	;# 
  3212  000C                     	;# 
  3213  000D                     	;# 
  3214  000E                     	;# 
  3215  0010                     	;# 
  3216  0011                     	;# 
  3217  0012                     	;# 
  3218  0013                     	;# 
  3219  0016                     	;# 
  3220  0017                     	;# 
  3221  0018                     	;# 
  3222  001C                     	;# 
  3223  001C                     	;# 
  3224  001D                     	;# 
  3225  001D                     	;# 
  3226  001E                     	;# 
  3227  001F                     	;# 
  3228  008C                     	;# 
  3229  008C                     	;# 
  3230  008D                     	;# 
  3231  008E                     	;# 
  3232  008E                     	;# 
  3233  008F                     	;# 
  3234  0090                     	;# 
  3235  0090                     	;# 
  3236  0091                     	;# 
  3237  0093                     	;# 
  3238  0094                     	;# 
  3239  0095                     	;# 
  3240  0096                     	;# 
  3241  0097                     	;# 
  3242  0098                     	;# 
  3243  0099                     	;# 
  3244  009A                     	;# 
  3245  009B                     	;# 
  3246  009C                     	;# 
  3247  009D                     	;# 
  3248  009E                     	;# 
  3249  010C                     	;# 
  3250  010D                     	;# 
  3251  010E                     	;# 
  3252  010E                     	;# 
  3253  010F                     	;# 
  3254  0110                     	;# 
  3255  0110                     	;# 
  3256  0111                     	;# 
  3257  0112                     	;# 
  3258  0112                     	;# 
  3259  0113                     	;# 
  3260  0114                     	;# 
  3261  0114                     	;# 
  3262  0115                     	;# 
  3263  0116                     	;# 
  3264  0116                     	;# 
  3265  0117                     	;# 
  3266  0119                     	;# 
  3267  0119                     	;# 
  3268  0119                     	;# 
  3269  011A                     	;# 
  3270  011A                     	;# 
  3271  011A                     	;# 
  3272  011B                     	;# 
  3273  011B                     	;# 
  3274  011B                     	;# 
  3275  011B                     	;# 
  3276  011B                     	;# 
  3277  011C                     	;# 
  3278  011C                     	;# 
  3279  011C                     	;# 
  3280  011D                     	;# 
  3281  011D                     	;# 
  3282  011D                     	;# 
  3283  011E                     	;# 
  3284  011E                     	;# 
  3285  011E                     	;# 
  3286  011F                     	;# 
  3287  011F                     	;# 
  3288  011F                     	;# 
  3289  011F                     	;# 
  3290  011F                     	;# 
  3291  018C                     	;# 
  3292  018D                     	;# 
  3293  018E                     	;# 
  3294  018F                     	;# 
  3295  0190                     	;# 
  3296  0191                     	;# 
  3297  0192                     	;# 
  3298  0196                     	;# 
  3299  0197                     	;# 
  3300  0198                     	;# 
  3301  0199                     	;# 
  3302  019A                     	;# 
  3303  019B                     	;# 
  3304  019C                     	;# 
  3305  020C                     	;# 
  3306  020C                     	;# 
  3307  020D                     	;# 
  3308  020E                     	;# 
  3309  020F                     	;# 
  3310  020F                     	;# 
  3311  0210                     	;# 
  3312  0210                     	;# 
  3313  0211                     	;# 
  3314  0211                     	;# 
  3315  0212                     	;# 
  3316  0212                     	;# 
  3317  0213                     	;# 
  3318  0214                     	;# 
  3319  0215                     	;# 
  3320  0215                     	;# 
  3321  0216                     	;# 
  3322  0216                     	;# 
  3323  0217                     	;# 
  3324  0217                     	;# 
  3325  0218                     	;# 
  3326  0218                     	;# 
  3327  0219                     	;# 
  3328  021A                     	;# 
  3329  021B                     	;# 
  3330  021B                     	;# 
  3331  021C                     	;# 
  3332  021C                     	;# 
  3333  021D                     	;# 
  3334  021D                     	;# 
  3335  021E                     	;# 
  3336  021F                     	;# 
  3337  028C                     	;# 
  3338  028C                     	;# 
  3339  028D                     	;# 
  3340  028D                     	;# 
  3341  028E                     	;# 
  3342  028F                     	;# 
  3343  0290                     	;# 
  3344  0290                     	;# 
  3345  0291                     	;# 
  3346  0292                     	;# 
  3347  0292                     	;# 
  3348  0293                     	;# 
  3349  0293                     	;# 
  3350  0294                     	;# 
  3351  0295                     	;# 
  3352  0296                     	;# 
  3353  0296                     	;# 
  3354  0297                     	;# 
  3355  0298                     	;# 
  3356  0298                     	;# 
  3357  0299                     	;# 
  3358  0299                     	;# 
  3359  029A                     	;# 
  3360  029B                     	;# 
  3361  029C                     	;# 
  3362  029C                     	;# 
  3363  029D                     	;# 
  3364  030C                     	;# 
  3365  030C                     	;# 
  3366  030D                     	;# 
  3367  030E                     	;# 
  3368  030F                     	;# 
  3369  0310                     	;# 
  3370  0310                     	;# 
  3371  0311                     	;# 
  3372  0312                     	;# 
  3373  0313                     	;# 
  3374  0314                     	;# 
  3375  0314                     	;# 
  3376  0315                     	;# 
  3377  0316                     	;# 
  3378  0317                     	;# 
  3379  0318                     	;# 
  3380  0318                     	;# 
  3381  0319                     	;# 
  3382  031A                     	;# 
  3383  031B                     	;# 
  3384  031C                     	;# 
  3385  031C                     	;# 
  3386  031D                     	;# 
  3387  031E                     	;# 
  3388  031F                     	;# 
  3389  038C                     	;# 
  3390  038D                     	;# 
  3391  038E                     	;# 
  3392  0390                     	;# 
  3393  0391                     	;# 
  3394  0392                     	;# 
  3395  040C                     	;# 
  3396  040D                     	;# 
  3397  040E                     	;# 
  3398  040F                     	;# 
  3399  0410                     	;# 
  3400  0411                     	;# 
  3401  0416                     	;# 
  3402  0416                     	;# 
  3403  0417                     	;# 
  3404  0418                     	;# 
  3405  0418                     	;# 
  3406  0419                     	;# 
  3407  041A                     	;# 
  3408  041A                     	;# 
  3409  041B                     	;# 
  3410  041C                     	;# 
  3411  041C                     	;# 
  3412  041D                     	;# 
  3413  041E                     	;# 
  3414  041F                     	;# 
  3415  048C                     	;# 
  3416  048C                     	;# 
  3417  048D                     	;# 
  3418  048E                     	;# 
  3419  048F                     	;# 
  3420  048F                     	;# 
  3421  0490                     	;# 
  3422  0491                     	;# 
  3423  0492                     	;# 
  3424  0492                     	;# 
  3425  0493                     	;# 
  3426  0494                     	;# 
  3427  0495                     	;# 
  3428  0495                     	;# 
  3429  0496                     	;# 
  3430  0497                     	;# 
  3431  0498                     	;# 
  3432  0499                     	;# 
  3433  049A                     	;# 
  3434  049B                     	;# 
  3435  049C                     	;# 
  3436  049D                     	;# 
  3437  050C                     	;# 
  3438  050C                     	;# 
  3439  050D                     	;# 
  3440  050E                     	;# 
  3441  050F                     	;# 
  3442  050F                     	;# 
  3443  0510                     	;# 
  3444  0511                     	;# 
  3445  0512                     	;# 
  3446  0512                     	;# 
  3447  0513                     	;# 
  3448  0514                     	;# 
  3449  0515                     	;# 
  3450  0515                     	;# 
  3451  0516                     	;# 
  3452  0517                     	;# 
  3453  0518                     	;# 
  3454  0519                     	;# 
  3455  051A                     	;# 
  3456  051B                     	;# 
  3457  051C                     	;# 
  3458  051D                     	;# 
  3459  058C                     	;# 
  3460  058C                     	;# 
  3461  058D                     	;# 
  3462  058E                     	;# 
  3463  058F                     	;# 
  3464  058F                     	;# 
  3465  0590                     	;# 
  3466  0591                     	;# 
  3467  0592                     	;# 
  3468  0593                     	;# 
  3469  060C                     	;# 
  3470  060D                     	;# 
  3471  060E                     	;# 
  3472  060F                     	;# 
  3473  0610                     	;# 
  3474  0611                     	;# 
  3475  0612                     	;# 
  3476  0613                     	;# 
  3477  0614                     	;# 
  3478  0616                     	;# 
  3479  0617                     	;# 
  3480  0618                     	;# 
  3481  0619                     	;# 
  3482  061A                     	;# 
  3483  061B                     	;# 
  3484  061C                     	;# 
  3485  061D                     	;# 
  3486  061E                     	;# 
  3487  068C                     	;# 
  3488  068D                     	;# 
  3489  068E                     	;# 
  3490  068F                     	;# 
  3491  0690                     	;# 
  3492  0691                     	;# 
  3493  0692                     	;# 
  3494  0693                     	;# 
  3495  0694                     	;# 
  3496  070C                     	;# 
  3497  070D                     	;# 
  3498  070E                     	;# 
  3499  070F                     	;# 
  3500  0710                     	;# 
  3501  0711                     	;# 
  3502  0712                     	;# 
  3503  0713                     	;# 
  3504  0714                     	;# 
  3505  0716                     	;# 
  3506  0717                     	;# 
  3507  0718                     	;# 
  3508  0719                     	;# 
  3509  071A                     	;# 
  3510  071B                     	;# 
  3511  071C                     	;# 
  3512  071D                     	;# 
  3513  071E                     	;# 
  3514  0796                     	;# 
  3515  0797                     	;# 
  3516  0798                     	;# 
  3517  0799                     	;# 
  3518  079A                     	;# 
  3519  079B                     	;# 
  3520  080C                     	;# 
  3521  080D                     	;# 
  3522  080E                     	;# 
  3523  080F                     	;# 
  3524  0810                     	;# 
  3525  0811                     	;# 
  3526  0812                     	;# 
  3527  0813                     	;# 
  3528  0814                     	;# 
  3529  081A                     	;# 
  3530  081B                     	;# 
  3531  081C                     	;# 
  3532  081D                     	;# 
  3533  081E                     	;# 
  3534  081F                     	;# 
  3535  088C                     	;# 
  3536  088D                     	;# 
  3537  088E                     	;# 
  3538  088F                     	;# 
  3539  0890                     	;# 
  3540  0891                     	;# 
  3541  0892                     	;# 
  3542  0893                     	;# 
  3543  0895                     	;# 
  3544  0896                     	;# 
  3545  0897                     	;# 
  3546  0898                     	;# 
  3547  0899                     	;# 
  3548  089A                     	;# 
  3549  089B                     	;# 
  3550  090C                     	;# 
  3551  090E                     	;# 
  3552  090F                     	;# 
  3553  091F                     	;# 
  3554  091F                     	;# 
  3555  098F                     	;# 
  3556  098F                     	;# 
  3557  0990                     	;# 
  3558  0991                     	;# 
  3559  0992                     	;# 
  3560  0993                     	;# 
  3561  0994                     	;# 
  3562  0995                     	;# 
  3563  0996                     	;# 
  3564  0997                     	;# 
  3565  0E0F                     	;# 
  3566  0E10                     	;# 
  3567  0E11                     	;# 
  3568  0E12                     	;# 
  3569  0E13                     	;# 
  3570  0E14                     	;# 
  3571  0E15                     	;# 
  3572  0E16                     	;# 
  3573  0E17                     	;# 
  3574  0E18                     	;# 
  3575  0E19                     	;# 
  3576  0E1A                     	;# 
  3577  0E1B                     	;# 
  3578  0E1C                     	;# 
  3579  0E1D                     	;# 
  3580  0E1E                     	;# 
  3581  0E1F                     	;# 
  3582  0E20                     	;# 
  3583  0E21                     	;# 
  3584  0E22                     	;# 
  3585  0E23                     	;# 
  3586  0E24                     	;# 
  3587  0E25                     	;# 
  3588  0E26                     	;# 
  3589  0E27                     	;# 
  3590  0E28                     	;# 
  3591  0E29                     	;# 
  3592  0E2A                     	;# 
  3593  0E2B                     	;# 
  3594  0E2C                     	;# 
  3595  0E2D                     	;# 
  3596  0E2E                     	;# 
  3597  0E2F                     	;# 
  3598  0E30                     	;# 
  3599  0E31                     	;# 
  3600  0E32                     	;# 
  3601  0E33                     	;# 
  3602  0E34                     	;# 
  3603  0E35                     	;# 
  3604  0E36                     	;# 
  3605  0E37                     	;# 
  3606  0E8F                     	;# 
  3607  0E90                     	;# 
  3608  0E91                     	;# 
  3609  0E92                     	;# 
  3610  0E93                     	;# 
  3611  0E94                     	;# 
  3612  0E95                     	;# 
  3613  0E96                     	;# 
  3614  0E97                     	;# 
  3615  0E9C                     	;# 
  3616  0E9D                     	;# 
  3617  0E9E                     	;# 
  3618  0EA1                     	;# 
  3619  0EA2                     	;# 
  3620  0EA3                     	;# 
  3621  0EA4                     	;# 
  3622  0EA5                     	;# 
  3623  0EA9                     	;# 
  3624  0EAA                     	;# 
  3625  0EAB                     	;# 
  3626  0EAC                     	;# 
  3627  0EB1                     	;# 
  3628  0EB2                     	;# 
  3629  0EB3                     	;# 
  3630  0EB8                     	;# 
  3631  0EB9                     	;# 
  3632  0EBA                     	;# 
  3633  0EBB                     	;# 
  3634  0EBC                     	;# 
  3635  0EBD                     	;# 
  3636  0EBE                     	;# 
  3637  0EC3                     	;# 
  3638  0EC5                     	;# 
  3639  0EC6                     	;# 
  3640  0EC7                     	;# 
  3641  0EC8                     	;# 
  3642  0EC9                     	;# 
  3643  0ECA                     	;# 
  3644  0ECB                     	;# 
  3645  0ECC                     	;# 
  3646  0F10                     	;# 
  3647  0F11                     	;# 
  3648  0F12                     	;# 
  3649  0F13                     	;# 
  3650  0F14                     	;# 
  3651  0F15                     	;# 
  3652  0F16                     	;# 
  3653  0F17                     	;# 
  3654  0F18                     	;# 
  3655  0F19                     	;# 
  3656  0F1A                     	;# 
  3657  0F1B                     	;# 
  3658  0F1C                     	;# 
  3659  0F1D                     	;# 
  3660  0F1E                     	;# 
  3661  0F1F                     	;# 
  3662  0F20                     	;# 
  3663  0F21                     	;# 
  3664  0F22                     	;# 
  3665  0F23                     	;# 
  3666  0F24                     	;# 
  3667  0F25                     	;# 
  3668  0F26                     	;# 
  3669  0F27                     	;# 
  3670  0F38                     	;# 
  3671  0F39                     	;# 
  3672  0F3A                     	;# 
  3673  0F3B                     	;# 
  3674  0F3C                     	;# 
  3675  0F3D                     	;# 
  3676  0F3E                     	;# 
  3677  0F3F                     	;# 
  3678  0F40                     	;# 
  3679  0F41                     	;# 
  3680  0F43                     	;# 
  3681  0F44                     	;# 
  3682  0F45                     	;# 
  3683  0F46                     	;# 
  3684  0F47                     	;# 
  3685  0F48                     	;# 
  3686  0F49                     	;# 
  3687  0F4A                     	;# 
  3688  0F4B                     	;# 
  3689  0F4C                     	;# 
  3690  0F4E                     	;# 
  3691  0F4F                     	;# 
  3692  0F50                     	;# 
  3693  0F51                     	;# 
  3694  0F52                     	;# 
  3695  0F53                     	;# 
  3696  0F54                     	;# 
  3697  0F55                     	;# 
  3698  0F56                     	;# 
  3699  0F57                     	;# 
  3700  0F65                     	;# 
  3701  0F68                     	;# 
  3702  0F69                     	;# 
  3703  0F6A                     	;# 
  3704  0F6B                     	;# 
  3705  0FE4                     	;# 
  3706  0FE5                     	;# 
  3707  0FE6                     	;# 
  3708  0FE7                     	;# 
  3709  0FE8                     	;# 
  3710  0FE9                     	;# 
  3711  0FEA                     	;# 
  3712  0FEB                     	;# 
  3713  0FED                     	;# 
  3714  0FEE                     	;# 
  3715  0FEF                     	;# 
  3716  0000                     	;# 
  3717  0001                     	;# 
  3718  0002                     	;# 
  3719  0003                     	;# 
  3720  0004                     	;# 
  3721  0005                     	;# 
  3722  0006                     	;# 
  3723  0007                     	;# 
  3724  0008                     	;# 
  3725  0009                     	;# 
  3726  000A                     	;# 
  3727  000B                     	;# 
  3728  000C                     	;# 
  3729  000D                     	;# 
  3730  000E                     	;# 
  3731  0010                     	;# 
  3732  0011                     	;# 
  3733  0012                     	;# 
  3734  0013                     	;# 
  3735  0016                     	;# 
  3736  0017                     	;# 
  3737  0018                     	;# 
  3738  001C                     	;# 
  3739  001C                     	;# 
  3740  001D                     	;# 
  3741  001D                     	;# 
  3742  001E                     	;# 
  3743  001F                     	;# 
  3744  008C                     	;# 
  3745  008C                     	;# 
  3746  008D                     	;# 
  3747  008E                     	;# 
  3748  008E                     	;# 
  3749  008F                     	;# 
  3750  0090                     	;# 
  3751  0090                     	;# 
  3752  0091                     	;# 
  3753  0093                     	;# 
  3754  0094                     	;# 
  3755  0095                     	;# 
  3756  0096                     	;# 
  3757  0097                     	;# 
  3758  0098                     	;# 
  3759  0099                     	;# 
  3760  009A                     	;# 
  3761  009B                     	;# 
  3762  009C                     	;# 
  3763  009D                     	;# 
  3764  009E                     	;# 
  3765  010C                     	;# 
  3766  010D                     	;# 
  3767  010E                     	;# 
  3768  010E                     	;# 
  3769  010F                     	;# 
  3770  0110                     	;# 
  3771  0110                     	;# 
  3772  0111                     	;# 
  3773  0112                     	;# 
  3774  0112                     	;# 
  3775  0113                     	;# 
  3776  0114                     	;# 
  3777  0114                     	;# 
  3778  0115                     	;# 
  3779  0116                     	;# 
  3780  0116                     	;# 
  3781  0117                     	;# 
  3782  0119                     	;# 
  3783  0119                     	;# 
  3784  0119                     	;# 
  3785  011A                     	;# 
  3786  011A                     	;# 
  3787  011A                     	;# 
  3788  011B                     	;# 
  3789  011B                     	;# 
  3790  011B                     	;# 
  3791  011B                     	;# 
  3792  011B                     	;# 
  3793  011C                     	;# 
  3794  011C                     	;# 
  3795  011C                     	;# 
  3796  011D                     	;# 
  3797  011D                     	;# 
  3798  011D                     	;# 
  3799  011E                     	;# 
  3800  011E                     	;# 
  3801  011E                     	;# 
  3802  011F                     	;# 
  3803  011F                     	;# 
  3804  011F                     	;# 
  3805  011F                     	;# 
  3806  011F                     	;# 
  3807  018C                     	;# 
  3808  018D                     	;# 
  3809  018E                     	;# 
  3810  018F                     	;# 
  3811  0190                     	;# 
  3812  0191                     	;# 
  3813  0192                     	;# 
  3814  0196                     	;# 
  3815  0197                     	;# 
  3816  0198                     	;# 
  3817  0199                     	;# 
  3818  019A                     	;# 
  3819  019B                     	;# 
  3820  019C                     	;# 
  3821  020C                     	;# 
  3822  020C                     	;# 
  3823  020D                     	;# 
  3824  020E                     	;# 
  3825  020F                     	;# 
  3826  020F                     	;# 
  3827  0210                     	;# 
  3828  0210                     	;# 
  3829  0211                     	;# 
  3830  0211                     	;# 
  3831  0212                     	;# 
  3832  0212                     	;# 
  3833  0213                     	;# 
  3834  0214                     	;# 
  3835  0215                     	;# 
  3836  0215                     	;# 
  3837  0216                     	;# 
  3838  0216                     	;# 
  3839  0217                     	;# 
  3840  0217                     	;# 
  3841  0218                     	;# 
  3842  0218                     	;# 
  3843  0219                     	;# 
  3844  021A                     	;# 
  3845  021B                     	;# 
  3846  021B                     	;# 
  3847  021C                     	;# 
  3848  021C                     	;# 
  3849  021D                     	;# 
  3850  021D                     	;# 
  3851  021E                     	;# 
  3852  021F                     	;# 
  3853  028C                     	;# 
  3854  028C                     	;# 
  3855  028D                     	;# 
  3856  028D                     	;# 
  3857  028E                     	;# 
  3858  028F                     	;# 
  3859  0290                     	;# 
  3860  0290                     	;# 
  3861  0291                     	;# 
  3862  0292                     	;# 
  3863  0292                     	;# 
  3864  0293                     	;# 
  3865  0293                     	;# 
  3866  0294                     	;# 
  3867  0295                     	;# 
  3868  0296                     	;# 
  3869  0296                     	;# 
  3870  0297                     	;# 
  3871  0298                     	;# 
  3872  0298                     	;# 
  3873  0299                     	;# 
  3874  0299                     	;# 
  3875  029A                     	;# 
  3876  029B                     	;# 
  3877  029C                     	;# 
  3878  029C                     	;# 
  3879  029D                     	;# 
  3880  030C                     	;# 
  3881  030C                     	;# 
  3882  030D                     	;# 
  3883  030E                     	;# 
  3884  030F                     	;# 
  3885  0310                     	;# 
  3886  0310                     	;# 
  3887  0311                     	;# 
  3888  0312                     	;# 
  3889  0313                     	;# 
  3890  0314                     	;# 
  3891  0314                     	;# 
  3892  0315                     	;# 
  3893  0316                     	;# 
  3894  0317                     	;# 
  3895  0318                     	;# 
  3896  0318                     	;# 
  3897  0319                     	;# 
  3898  031A                     	;# 
  3899  031B                     	;# 
  3900  031C                     	;# 
  3901  031C                     	;# 
  3902  031D                     	;# 
  3903  031E                     	;# 
  3904  031F                     	;# 
  3905  038C                     	;# 
  3906  038D                     	;# 
  3907  038E                     	;# 
  3908  0390                     	;# 
  3909  0391                     	;# 
  3910  0392                     	;# 
  3911  040C                     	;# 
  3912  040D                     	;# 
  3913  040E                     	;# 
  3914  040F                     	;# 
  3915  0410                     	;# 
  3916  0411                     	;# 
  3917  0416                     	;# 
  3918  0416                     	;# 
  3919  0417                     	;# 
  3920  0418                     	;# 
  3921  0418                     	;# 
  3922  0419                     	;# 
  3923  041A                     	;# 
  3924  041A                     	;# 
  3925  041B                     	;# 
  3926  041C                     	;# 
  3927  041C                     	;# 
  3928  041D                     	;# 
  3929  041E                     	;# 
  3930  041F                     	;# 
  3931  048C                     	;# 
  3932  048C                     	;# 
  3933  048D                     	;# 
  3934  048E                     	;# 
  3935  048F                     	;# 
  3936  048F                     	;# 
  3937  0490                     	;# 
  3938  0491                     	;# 
  3939  0492                     	;# 
  3940  0492                     	;# 
  3941  0493                     	;# 
  3942  0494                     	;# 
  3943  0495                     	;# 
  3944  0495                     	;# 
  3945  0496                     	;# 
  3946  0497                     	;# 
  3947  0498                     	;# 
  3948  0499                     	;# 
  3949  049A                     	;# 
  3950  049B                     	;# 
  3951  049C                     	;# 
  3952  049D                     	;# 
  3953  050C                     	;# 
  3954  050C                     	;# 
  3955  050D                     	;# 
  3956  050E                     	;# 
  3957  050F                     	;# 
  3958  050F                     	;# 
  3959  0510                     	;# 
  3960  0511                     	;# 
  3961  0512                     	;# 
  3962  0512                     	;# 
  3963  0513                     	;# 
  3964  0514                     	;# 
  3965  0515                     	;# 
  3966  0515                     	;# 
  3967  0516                     	;# 
  3968  0517                     	;# 
  3969  0518                     	;# 
  3970  0519                     	;# 
  3971  051A                     	;# 
  3972  051B                     	;# 
  3973  051C                     	;# 
  3974  051D                     	;# 
  3975  058C                     	;# 
  3976  058C                     	;# 
  3977  058D                     	;# 
  3978  058E                     	;# 
  3979  058F                     	;# 
  3980  058F                     	;# 
  3981  0590                     	;# 
  3982  0591                     	;# 
  3983  0592                     	;# 
  3984  0593                     	;# 
  3985  060C                     	;# 
  3986  060D                     	;# 
  3987  060E                     	;# 
  3988  060F                     	;# 
  3989  0610                     	;# 
  3990  0611                     	;# 
  3991  0612                     	;# 
  3992  0613                     	;# 
  3993  0614                     	;# 
  3994  0616                     	;# 
  3995  0617                     	;# 
  3996  0618                     	;# 
  3997  0619                     	;# 
  3998  061A                     	;# 
  3999  061B                     	;# 
  4000  061C                     	;# 
  4001  061D                     	;# 
  4002  061E                     	;# 
  4003  068C                     	;# 
  4004  068D                     	;# 
  4005  068E                     	;# 
  4006  068F                     	;# 
  4007  0690                     	;# 
  4008  0691                     	;# 
  4009  0692                     	;# 
  4010  0693                     	;# 
  4011  0694                     	;# 
  4012  070C                     	;# 
  4013  070D                     	;# 
  4014  070E                     	;# 
  4015  070F                     	;# 
  4016  0710                     	;# 
  4017  0711                     	;# 
  4018  0712                     	;# 
  4019  0713                     	;# 
  4020  0714                     	;# 
  4021  0716                     	;# 
  4022  0717                     	;# 
  4023  0718                     	;# 
  4024  0719                     	;# 
  4025  071A                     	;# 
  4026  071B                     	;# 
  4027  071C                     	;# 
  4028  071D                     	;# 
  4029  071E                     	;# 
  4030  0796                     	;# 
  4031  0797                     	;# 
  4032  0798                     	;# 
  4033  0799                     	;# 
  4034  079A                     	;# 
  4035  079B                     	;# 
  4036  080C                     	;# 
  4037  080D                     	;# 
  4038  080E                     	;# 
  4039  080F                     	;# 
  4040  0810                     	;# 
  4041  0811                     	;# 
  4042  0812                     	;# 
  4043  0813                     	;# 
  4044  0814                     	;# 
  4045  081A                     	;# 
  4046  081B                     	;# 
  4047  081C                     	;# 
  4048  081D                     	;# 
  4049  081E                     	;# 
  4050  081F                     	;# 
  4051  088C                     	;# 
  4052  088D                     	;# 
  4053  088E                     	;# 
  4054  088F                     	;# 
  4055  0890                     	;# 
  4056  0891                     	;# 
  4057  0892                     	;# 
  4058  0893                     	;# 
  4059  0895                     	;# 
  4060  0896                     	;# 
  4061  0897                     	;# 
  4062  0898                     	;# 
  4063  0899                     	;# 
  4064  089A                     	;# 
  4065  089B                     	;# 
  4066  090C                     	;# 
  4067  090E                     	;# 
  4068  090F                     	;# 
  4069  091F                     	;# 
  4070  091F                     	;# 
  4071  098F                     	;# 
  4072  098F                     	;# 
  4073  0990                     	;# 
  4074  0991                     	;# 
  4075  0992                     	;# 
  4076  0993                     	;# 
  4077  0994                     	;# 
  4078  0995                     	;# 
  4079  0996                     	;# 
  4080  0997                     	;# 
  4081  0E0F                     	;# 
  4082  0E10                     	;# 
  4083  0E11                     	;# 
  4084  0E12                     	;# 
  4085  0E13                     	;# 
  4086  0E14                     	;# 
  4087  0E15                     	;# 
  4088  0E16                     	;# 
  4089  0E17                     	;# 
  4090  0E18                     	;# 
  4091  0E19                     	;# 
  4092  0E1A                     	;# 
  4093  0E1B                     	;# 
  4094  0E1C                     	;# 
  4095  0E1D                     	;# 
  4096  0E1E                     	;# 
  4097  0E1F                     	;# 
  4098  0E20                     	;# 
  4099  0E21                     	;# 
  4100  0E22                     	;# 
  4101  0E23                     	;# 
  4102  0E24                     	;# 
  4103  0E25                     	;# 
  4104  0E26                     	;# 
  4105  0E27                     	;# 
  4106  0E28                     	;# 
  4107  0E29                     	;# 
  4108  0E2A                     	;# 
  4109  0E2B                     	;# 
  4110  0E2C                     	;# 
  4111  0E2D                     	;# 
  4112  0E2E                     	;# 
  4113  0E2F                     	;# 
  4114  0E30                     	;# 
  4115  0E31                     	;# 
  4116  0E32                     	;# 
  4117  0E33                     	;# 
  4118  0E34                     	;# 
  4119  0E35                     	;# 
  4120  0E36                     	;# 
  4121  0E37                     	;# 
  4122  0E8F                     	;# 
  4123  0E90                     	;# 
  4124  0E91                     	;# 
  4125  0E92                     	;# 
  4126  0E93                     	;# 
  4127  0E94                     	;# 
  4128  0E95                     	;# 
  4129  0E96                     	;# 
  4130  0E97                     	;# 
  4131  0E9C                     	;# 
  4132  0E9D                     	;# 
  4133  0E9E                     	;# 
  4134  0EA1                     	;# 
  4135  0EA2                     	;# 
  4136  0EA3                     	;# 
  4137  0EA4                     	;# 
  4138  0EA5                     	;# 
  4139  0EA9                     	;# 
  4140  0EAA                     	;# 
  4141  0EAB                     	;# 
  4142  0EAC                     	;# 
  4143  0EB1                     	;# 
  4144  0EB2                     	;# 
  4145  0EB3                     	;# 
  4146  0EB8                     	;# 
  4147  0EB9                     	;# 
  4148  0EBA                     	;# 
  4149  0EBB                     	;# 
  4150  0EBC                     	;# 
  4151  0EBD                     	;# 
  4152  0EBE                     	;# 
  4153  0EC3                     	;# 
  4154  0EC5                     	;# 
  4155  0EC6                     	;# 
  4156  0EC7                     	;# 
  4157  0EC8                     	;# 
  4158  0EC9                     	;# 
  4159  0ECA                     	;# 
  4160  0ECB                     	;# 
  4161  0ECC                     	;# 
  4162  0F10                     	;# 
  4163  0F11                     	;# 
  4164  0F12                     	;# 
  4165  0F13                     	;# 
  4166  0F14                     	;# 
  4167  0F15                     	;# 
  4168  0F16                     	;# 
  4169  0F17                     	;# 
  4170  0F18                     	;# 
  4171  0F19                     	;# 
  4172  0F1A                     	;# 
  4173  0F1B                     	;# 
  4174  0F1C                     	;# 
  4175  0F1D                     	;# 
  4176  0F1E                     	;# 
  4177  0F1F                     	;# 
  4178  0F20                     	;# 
  4179  0F21                     	;# 
  4180  0F22                     	;# 
  4181  0F23                     	;# 
  4182  0F24                     	;# 
  4183  0F25                     	;# 
  4184  0F26                     	;# 
  4185  0F27                     	;# 
  4186  0F38                     	;# 
  4187  0F39                     	;# 
  4188  0F3A                     	;# 
  4189  0F3B                     	;# 
  4190  0F3C                     	;# 
  4191  0F3D                     	;# 
  4192  0F3E                     	;# 
  4193  0F3F                     	;# 
  4194  0F40                     	;# 
  4195  0F41                     	;# 
  4196  0F43                     	;# 
  4197  0F44                     	;# 
  4198  0F45                     	;# 
  4199  0F46                     	;# 
  4200  0F47                     	;# 
  4201  0F48                     	;# 
  4202  0F49                     	;# 
  4203  0F4A                     	;# 
  4204  0F4B                     	;# 
  4205  0F4C                     	;# 
  4206  0F4E                     	;# 
  4207  0F4F                     	;# 
  4208  0F50                     	;# 
  4209  0F51                     	;# 
  4210  0F52                     	;# 
  4211  0F53                     	;# 
  4212  0F54                     	;# 
  4213  0F55                     	;# 
  4214  0F56                     	;# 
  4215  0F57                     	;# 
  4216  0F65                     	;# 
  4217  0F68                     	;# 
  4218  0F69                     	;# 
  4219  0F6A                     	;# 
  4220  0F6B                     	;# 
  4221  0FE4                     	;# 
  4222  0FE5                     	;# 
  4223  0FE6                     	;# 
  4224  0FE7                     	;# 
  4225  0FE8                     	;# 
  4226  0FE9                     	;# 
  4227  0FEA                     	;# 
  4228  0FEB                     	;# 
  4229  0FED                     	;# 
  4230  0FEE                     	;# 
  4231  0FEF                     	;# 
  4232  0000                     	;# 
  4233  0001                     	;# 
  4234  0002                     	;# 
  4235  0003                     	;# 
  4236  0004                     	;# 
  4237  0005                     	;# 
  4238  0006                     	;# 
  4239  0007                     	;# 
  4240  0008                     	;# 
  4241  0009                     	;# 
  4242  000A                     	;# 
  4243  000B                     	;# 
  4244  000C                     	;# 
  4245  000D                     	;# 
  4246  000E                     	;# 
  4247  0010                     	;# 
  4248  0011                     	;# 
  4249  0012                     	;# 
  4250  0013                     	;# 
  4251  0016                     	;# 
  4252  0017                     	;# 
  4253  0018                     	;# 
  4254  001C                     	;# 
  4255  001C                     	;# 
  4256  001D                     	;# 
  4257  001D                     	;# 
  4258  001E                     	;# 
  4259  001F                     	;# 
  4260  008C                     	;# 
  4261  008C                     	;# 
  4262  008D                     	;# 
  4263  008E                     	;# 
  4264  008E                     	;# 
  4265  008F                     	;# 
  4266  0090                     	;# 
  4267  0090                     	;# 
  4268  0091                     	;# 
  4269  0093                     	;# 
  4270  0094                     	;# 
  4271  0095                     	;# 
  4272  0096                     	;# 
  4273  0097                     	;# 
  4274  0098                     	;# 
  4275  0099                     	;# 
  4276  009A                     	;# 
  4277  009B                     	;# 
  4278  009C                     	;# 
  4279  009D                     	;# 
  4280  009E                     	;# 
  4281  010C                     	;# 
  4282  010D                     	;# 
  4283  010E                     	;# 
  4284  010E                     	;# 
  4285  010F                     	;# 
  4286  0110                     	;# 
  4287  0110                     	;# 
  4288  0111                     	;# 
  4289  0112                     	;# 
  4290  0112                     	;# 
  4291  0113                     	;# 
  4292  0114                     	;# 
  4293  0114                     	;# 
  4294  0115                     	;# 
  4295  0116                     	;# 
  4296  0116                     	;# 
  4297  0117                     	;# 
  4298  0119                     	;# 
  4299  0119                     	;# 
  4300  0119                     	;# 
  4301  011A                     	;# 
  4302  011A                     	;# 
  4303  011A                     	;# 
  4304  011B                     	;# 
  4305  011B                     	;# 
  4306  011B                     	;# 
  4307  011B                     	;# 
  4308  011B                     	;# 
  4309  011C                     	;# 
  4310  011C                     	;# 
  4311  011C                     	;# 
  4312  011D                     	;# 
  4313  011D                     	;# 
  4314  011D                     	;# 
  4315  011E                     	;# 
  4316  011E                     	;# 
  4317  011E                     	;# 
  4318  011F                     	;# 
  4319  011F                     	;# 
  4320  011F                     	;# 
  4321  011F                     	;# 
  4322  011F                     	;# 
  4323  018C                     	;# 
  4324  018D                     	;# 
  4325  018E                     	;# 
  4326  018F                     	;# 
  4327  0190                     	;# 
  4328  0191                     	;# 
  4329  0192                     	;# 
  4330  0196                     	;# 
  4331  0197                     	;# 
  4332  0198                     	;# 
  4333  0199                     	;# 
  4334  019A                     	;# 
  4335  019B                     	;# 
  4336  019C                     	;# 
  4337  020C                     	;# 
  4338  020C                     	;# 
  4339  020D                     	;# 
  4340  020E                     	;# 
  4341  020F                     	;# 
  4342  020F                     	;# 
  4343  0210                     	;# 
  4344  0210                     	;# 
  4345  0211                     	;# 
  4346  0211                     	;# 
  4347  0212                     	;# 
  4348  0212                     	;# 
  4349  0213                     	;# 
  4350  0214                     	;# 
  4351  0215                     	;# 
  4352  0215                     	;# 
  4353  0216                     	;# 
  4354  0216                     	;# 
  4355  0217                     	;# 
  4356  0217                     	;# 
  4357  0218                     	;# 
  4358  0218                     	;# 
  4359  0219                     	;# 
  4360  021A                     	;# 
  4361  021B                     	;# 
  4362  021B                     	;# 
  4363  021C                     	;# 
  4364  021C                     	;# 
  4365  021D                     	;# 
  4366  021D                     	;# 
  4367  021E                     	;# 
  4368  021F                     	;# 
  4369  028C                     	;# 
  4370  028C                     	;# 
  4371  028D                     	;# 
  4372  028D                     	;# 
  4373  028E                     	;# 
  4374  028F                     	;# 
  4375  0290                     	;# 
  4376  0290                     	;# 
  4377  0291                     	;# 
  4378  0292                     	;# 
  4379  0292                     	;# 
  4380  0293                     	;# 
  4381  0293                     	;# 
  4382  0294                     	;# 
  4383  0295                     	;# 
  4384  0296                     	;# 
  4385  0296                     	;# 
  4386  0297                     	;# 
  4387  0298                     	;# 
  4388  0298                     	;# 
  4389  0299                     	;# 
  4390  0299                     	;# 
  4391  029A                     	;# 
  4392  029B                     	;# 
  4393  029C                     	;# 
  4394  029C                     	;# 
  4395  029D                     	;# 
  4396  030C                     	;# 
  4397  030C                     	;# 
  4398  030D                     	;# 
  4399  030E                     	;# 
  4400  030F                     	;# 
  4401  0310                     	;# 
  4402  0310                     	;# 
  4403  0311                     	;# 
  4404  0312                     	;# 
  4405  0313                     	;# 
  4406  0314                     	;# 
  4407  0314                     	;# 
  4408  0315                     	;# 
  4409  0316                     	;# 
  4410  0317                     	;# 
  4411  0318                     	;# 
  4412  0318                     	;# 
  4413  0319                     	;# 
  4414  031A                     	;# 
  4415  031B                     	;# 
  4416  031C                     	;# 
  4417  031C                     	;# 
  4418  031D                     	;# 
  4419  031E                     	;# 
  4420  031F                     	;# 
  4421  038C                     	;# 
  4422  038D                     	;# 
  4423  038E                     	;# 
  4424  0390                     	;# 
  4425  0391                     	;# 
  4426  0392                     	;# 
  4427  040C                     	;# 
  4428  040D                     	;# 
  4429  040E                     	;# 
  4430  040F                     	;# 
  4431  0410                     	;# 
  4432  0411                     	;# 
  4433  0416                     	;# 
  4434  0416                     	;# 
  4435  0417                     	;# 
  4436  0418                     	;# 
  4437  0418                     	;# 
  4438  0419                     	;# 
  4439  041A                     	;# 
  4440  041A                     	;# 
  4441  041B                     	;# 
  4442  041C                     	;# 
  4443  041C                     	;# 
  4444  041D                     	;# 
  4445  041E                     	;# 
  4446  041F                     	;# 
  4447  048C                     	;# 
  4448  048C                     	;# 
  4449  048D                     	;# 
  4450  048E                     	;# 
  4451  048F                     	;# 
  4452  048F                     	;# 
  4453  0490                     	;# 
  4454  0491                     	;# 
  4455  0492                     	;# 
  4456  0492                     	;# 
  4457  0493                     	;# 
  4458  0494                     	;# 
  4459  0495                     	;# 
  4460  0495                     	;# 
  4461  0496                     	;# 
  4462  0497                     	;# 
  4463  0498                     	;# 
  4464  0499                     	;# 
  4465  049A                     	;# 
  4466  049B                     	;# 
  4467  049C                     	;# 
  4468  049D                     	;# 
  4469  050C                     	;# 
  4470  050C                     	;# 
  4471  050D                     	;# 
  4472  050E                     	;# 
  4473  050F                     	;# 
  4474  050F                     	;# 
  4475  0510                     	;# 
  4476  0511                     	;# 
  4477  0512                     	;# 
  4478  0512                     	;# 
  4479  0513                     	;# 
  4480  0514                     	;# 
  4481  0515                     	;# 
  4482  0515                     	;# 
  4483  0516                     	;# 
  4484  0517                     	;# 
  4485  0518                     	;# 
  4486  0519                     	;# 
  4487  051A                     	;# 
  4488  051B                     	;# 
  4489  051C                     	;# 
  4490  051D                     	;# 
  4491  058C                     	;# 
  4492  058C                     	;# 
  4493  058D                     	;# 
  4494  058E                     	;# 
  4495  058F                     	;# 
  4496  058F                     	;# 
  4497  0590                     	;# 
  4498  0591                     	;# 
  4499  0592                     	;# 
  4500  0593                     	;# 
  4501  060C                     	;# 
  4502  060D                     	;# 
  4503  060E                     	;# 
  4504  060F                     	;# 
  4505  0610                     	;# 
  4506  0611                     	;# 
  4507  0612                     	;# 
  4508  0613                     	;# 
  4509  0614                     	;# 
  4510  0616                     	;# 
  4511  0617                     	;# 
  4512  0618                     	;# 
  4513  0619                     	;# 
  4514  061A                     	;# 
  4515  061B                     	;# 
  4516  061C                     	;# 
  4517  061D                     	;# 
  4518  061E                     	;# 
  4519  068C                     	;# 
  4520  068D                     	;# 
  4521  068E                     	;# 
  4522  068F                     	;# 
  4523  0690                     	;# 
  4524  0691                     	;# 
  4525  0692                     	;# 
  4526  0693                     	;# 
  4527  0694                     	;# 
  4528  070C                     	;# 
  4529  070D                     	;# 
  4530  070E                     	;# 
  4531  070F                     	;# 
  4532  0710                     	;# 
  4533  0711                     	;# 
  4534  0712                     	;# 
  4535  0713                     	;# 
  4536  0714                     	;# 
  4537  0716                     	;# 
  4538  0717                     	;# 
  4539  0718                     	;# 
  4540  0719                     	;# 
  4541  071A                     	;# 
  4542  071B                     	;# 
  4543  071C                     	;# 
  4544  071D                     	;# 
  4545  071E                     	;# 
  4546  0796                     	;# 
  4547  0797                     	;# 
  4548  0798                     	;# 
  4549  0799                     	;# 
  4550  079A                     	;# 
  4551  079B                     	;# 
  4552  080C                     	;# 
  4553  080D                     	;# 
  4554  080E                     	;# 
  4555  080F                     	;# 
  4556  0810                     	;# 
  4557  0811                     	;# 
  4558  0812                     	;# 
  4559  0813                     	;# 
  4560  0814                     	;# 
  4561  081A                     	;# 
  4562  081B                     	;# 
  4563  081C                     	;# 
  4564  081D                     	;# 
  4565  081E                     	;# 
  4566  081F                     	;# 
  4567  088C                     	;# 
  4568  088D                     	;# 
  4569  088E                     	;# 
  4570  088F                     	;# 
  4571  0890                     	;# 
  4572  0891                     	;# 
  4573  0892                     	;# 
  4574  0893                     	;# 
  4575  0895                     	;# 
  4576  0896                     	;# 
  4577  0897                     	;# 
  4578  0898                     	;# 
  4579  0899                     	;# 
  4580  089A                     	;# 
  4581  089B                     	;# 
  4582  090C                     	;# 
  4583  090E                     	;# 
  4584  090F                     	;# 
  4585  091F                     	;# 
  4586  091F                     	;# 
  4587  098F                     	;# 
  4588  098F                     	;# 
  4589  0990                     	;# 
  4590  0991                     	;# 
  4591  0992                     	;# 
  4592  0993                     	;# 
  4593  0994                     	;# 
  4594  0995                     	;# 
  4595  0996                     	;# 
  4596  0997                     	;# 
  4597  0E0F                     	;# 
  4598  0E10                     	;# 
  4599  0E11                     	;# 
  4600  0E12                     	;# 
  4601  0E13                     	;# 
  4602  0E14                     	;# 
  4603  0E15                     	;# 
  4604  0E16                     	;# 
  4605  0E17                     	;# 
  4606  0E18                     	;# 
  4607  0E19                     	;# 
  4608  0E1A                     	;# 
  4609  0E1B                     	;# 
  4610  0E1C                     	;# 
  4611  0E1D                     	;# 
  4612  0E1E                     	;# 
  4613  0E1F                     	;# 
  4614  0E20                     	;# 
  4615  0E21                     	;# 
  4616  0E22                     	;# 
  4617  0E23                     	;# 
  4618  0E24                     	;# 
  4619  0E25                     	;# 
  4620  0E26                     	;# 
  4621  0E27                     	;# 
  4622  0E28                     	;# 
  4623  0E29                     	;# 
  4624  0E2A                     	;# 
  4625  0E2B                     	;# 
  4626  0E2C                     	;# 
  4627  0E2D                     	;# 
  4628  0E2E                     	;# 
  4629  0E2F                     	;# 
  4630  0E30                     	;# 
  4631  0E31                     	;# 
  4632  0E32                     	;# 
  4633  0E33                     	;# 
  4634  0E34                     	;# 
  4635  0E35                     	;# 
  4636  0E36                     	;# 
  4637  0E37                     	;# 
  4638  0E8F                     	;# 
  4639  0E90                     	;# 
  4640  0E91                     	;# 
  4641  0E92                     	;# 
  4642  0E93                     	;# 
  4643  0E94                     	;# 
  4644  0E95                     	;# 
  4645  0E96                     	;# 
  4646  0E97                     	;# 
  4647  0E9C                     	;# 
  4648  0E9D                     	;# 
  4649  0E9E                     	;# 
  4650  0EA1                     	;# 
  4651  0EA2                     	;# 
  4652  0EA3                     	;# 
  4653  0EA4                     	;# 
  4654  0EA5                     	;# 
  4655  0EA9                     	;# 
  4656  0EAA                     	;# 
  4657  0EAB                     	;# 
  4658  0EAC                     	;# 
  4659  0EB1                     	;# 
  4660  0EB2                     	;# 
  4661  0EB3                     	;# 
  4662  0EB8                     	;# 
  4663  0EB9                     	;# 
  4664  0EBA                     	;# 
  4665  0EBB                     	;# 
  4666  0EBC                     	;# 
  4667  0EBD                     	;# 
  4668  0EBE                     	;# 
  4669  0EC3                     	;# 
  4670  0EC5                     	;# 
  4671  0EC6                     	;# 
  4672  0EC7                     	;# 
  4673  0EC8                     	;# 
  4674  0EC9                     	;# 
  4675  0ECA                     	;# 
  4676  0ECB                     	;# 
  4677  0ECC                     	;# 
  4678  0F10                     	;# 
  4679  0F11                     	;# 
  4680  0F12                     	;# 
  4681  0F13                     	;# 
  4682  0F14                     	;# 
  4683  0F15                     	;# 
  4684  0F16                     	;# 
  4685  0F17                     	;# 
  4686  0F18                     	;# 
  4687  0F19                     	;# 
  4688  0F1A                     	;# 
  4689  0F1B                     	;# 
  4690  0F1C                     	;# 
  4691  0F1D                     	;# 
  4692  0F1E                     	;# 
  4693  0F1F                     	;# 
  4694  0F20                     	;# 
  4695  0F21                     	;# 
  4696  0F22                     	;# 
  4697  0F23                     	;# 
  4698  0F24                     	;# 
  4699  0F25                     	;# 
  4700  0F26                     	;# 
  4701  0F27                     	;# 
  4702  0F38                     	;# 
  4703  0F39                     	;# 
  4704  0F3A                     	;# 
  4705  0F3B                     	;# 
  4706  0F3C                     	;# 
  4707  0F3D                     	;# 
  4708  0F3E                     	;# 
  4709  0F3F                     	;# 
  4710  0F40                     	;# 
  4711  0F41                     	;# 
  4712  0F43                     	;# 
  4713  0F44                     	;# 
  4714  0F45                     	;# 
  4715  0F46                     	;# 
  4716  0F47                     	;# 
  4717  0F48                     	;# 
  4718  0F49                     	;# 
  4719  0F4A                     	;# 
  4720  0F4B                     	;# 
  4721  0F4C                     	;# 
  4722  0F4E                     	;# 
  4723  0F4F                     	;# 
  4724  0F50                     	;# 
  4725  0F51                     	;# 
  4726  0F52                     	;# 
  4727  0F53                     	;# 
  4728  0F54                     	;# 
  4729  0F55                     	;# 
  4730  0F56                     	;# 
  4731  0F57                     	;# 
  4732  0F65                     	;# 
  4733  0F68                     	;# 
  4734  0F69                     	;# 
  4735  0F6A                     	;# 
  4736  0F6B                     	;# 
  4737  0FE4                     	;# 
  4738  0FE5                     	;# 
  4739  0FE6                     	;# 
  4740  0FE7                     	;# 
  4741  0FE8                     	;# 
  4742  0FE9                     	;# 
  4743  0FEA                     	;# 
  4744  0FEB                     	;# 
  4745  0FED                     	;# 
  4746  0FEE                     	;# 
  4747  0FEF                     	;# 
  4748  0000                     	;# 
  4749  0001                     	;# 
  4750  0002                     	;# 
  4751  0003                     	;# 
  4752  0004                     	;# 
  4753  0005                     	;# 
  4754  0006                     	;# 
  4755  0007                     	;# 
  4756  0008                     	;# 
  4757  0009                     	;# 
  4758  000A                     	;# 
  4759  000B                     	;# 
  4760  000C                     	;# 
  4761  000D                     	;# 
  4762  000E                     	;# 
  4763  0010                     	;# 
  4764  0011                     	;# 
  4765  0012                     	;# 
  4766  0013                     	;# 
  4767  0016                     	;# 
  4768  0017                     	;# 
  4769  0018                     	;# 
  4770  001C                     	;# 
  4771  001C                     	;# 
  4772  001D                     	;# 
  4773  001D                     	;# 
  4774  001E                     	;# 
  4775  001F                     	;# 
  4776  008C                     	;# 
  4777  008C                     	;# 
  4778  008D                     	;# 
  4779  008E                     	;# 
  4780  008E                     	;# 
  4781  008F                     	;# 
  4782  0090                     	;# 
  4783  0090                     	;# 
  4784  0091                     	;# 
  4785  0093                     	;# 
  4786  0094                     	;# 
  4787  0095                     	;# 
  4788  0096                     	;# 
  4789  0097                     	;# 
  4790  0098                     	;# 
  4791  0099                     	;# 
  4792  009A                     	;# 
  4793  009B                     	;# 
  4794  009C                     	;# 
  4795  009D                     	;# 
  4796  009E                     	;# 
  4797  010C                     	;# 
  4798  010D                     	;# 
  4799  010E                     	;# 
  4800  010E                     	;# 
  4801  010F                     	;# 
  4802  0110                     	;# 
  4803  0110                     	;# 
  4804  0111                     	;# 
  4805  0112                     	;# 
  4806  0112                     	;# 
  4807  0113                     	;# 
  4808  0114                     	;# 
  4809  0114                     	;# 
  4810  0115                     	;# 
  4811  0116                     	;# 
  4812  0116                     	;# 
  4813  0117                     	;# 
  4814  0119                     	;# 
  4815  0119                     	;# 
  4816  0119                     	;# 
  4817  011A                     	;# 
  4818  011A                     	;# 
  4819  011A                     	;# 
  4820  011B                     	;# 
  4821  011B                     	;# 
  4822  011B                     	;# 
  4823  011B                     	;# 
  4824  011B                     	;# 
  4825  011C                     	;# 
  4826  011C                     	;# 
  4827  011C                     	;# 
  4828  011D                     	;# 
  4829  011D                     	;# 
  4830  011D                     	;# 
  4831  011E                     	;# 
  4832  011E                     	;# 
  4833  011E                     	;# 
  4834  011F                     	;# 
  4835  011F                     	;# 
  4836  011F                     	;# 
  4837  011F                     	;# 
  4838  011F                     	;# 
  4839  018C                     	;# 
  4840  018D                     	;# 
  4841  018E                     	;# 
  4842  018F                     	;# 
  4843  0190                     	;# 
  4844  0191                     	;# 
  4845  0192                     	;# 
  4846  0196                     	;# 
  4847  0197                     	;# 
  4848  0198                     	;# 
  4849  0199                     	;# 
  4850  019A                     	;# 
  4851  019B                     	;# 
  4852  019C                     	;# 
  4853  020C                     	;# 
  4854  020C                     	;# 
  4855  020D                     	;# 
  4856  020E                     	;# 
  4857  020F                     	;# 
  4858  020F                     	;# 
  4859  0210                     	;# 
  4860  0210                     	;# 
  4861  0211                     	;# 
  4862  0211                     	;# 
  4863  0212                     	;# 
  4864  0212                     	;# 
  4865  0213                     	;# 
  4866  0214                     	;# 
  4867  0215                     	;# 
  4868  0215                     	;# 
  4869  0216                     	;# 
  4870  0216                     	;# 
  4871  0217                     	;# 
  4872  0217                     	;# 
  4873  0218                     	;# 
  4874  0218                     	;# 
  4875  0219                     	;# 
  4876  021A                     	;# 
  4877  021B                     	;# 
  4878  021B                     	;# 
  4879  021C                     	;# 
  4880  021C                     	;# 
  4881  021D                     	;# 
  4882  021D                     	;# 
  4883  021E                     	;# 
  4884  021F                     	;# 
  4885  028C                     	;# 
  4886  028C                     	;# 
  4887  028D                     	;# 
  4888  028D                     	;# 
  4889  028E                     	;# 
  4890  028F                     	;# 
  4891  0290                     	;# 
  4892  0290                     	;# 
  4893  0291                     	;# 
  4894  0292                     	;# 
  4895  0292                     	;# 
  4896  0293                     	;# 
  4897  0293                     	;# 
  4898  0294                     	;# 
  4899  0295                     	;# 
  4900  0296                     	;# 
  4901  0296                     	;# 
  4902  0297                     	;# 
  4903  0298                     	;# 
  4904  0298                     	;# 
  4905  0299                     	;# 
  4906  0299                     	;# 
  4907  029A                     	;# 
  4908  029B                     	;# 
  4909  029C                     	;# 
  4910  029C                     	;# 
  4911  029D                     	;# 
  4912  030C                     	;# 
  4913  030C                     	;# 
  4914  030D                     	;# 
  4915  030E                     	;# 
  4916  030F                     	;# 
  4917  0310                     	;# 
  4918  0310                     	;# 
  4919  0311                     	;# 
  4920  0312                     	;# 
  4921  0313                     	;# 
  4922  0314                     	;# 
  4923  0314                     	;# 
  4924  0315                     	;# 
  4925  0316                     	;# 
  4926  0317                     	;# 
  4927  0318                     	;# 
  4928  0318                     	;# 
  4929  0319                     	;# 
  4930  031A                     	;# 
  4931  031B                     	;# 
  4932  031C                     	;# 
  4933  031C                     	;# 
  4934  031D                     	;# 
  4935  031E                     	;# 
  4936  031F                     	;# 
  4937  038C                     	;# 
  4938  038D                     	;# 
  4939  038E                     	;# 
  4940  0390                     	;# 
  4941  0391                     	;# 
  4942  0392                     	;# 
  4943  040C                     	;# 
  4944  040D                     	;# 
  4945  040E                     	;# 
  4946  040F                     	;# 
  4947  0410                     	;# 
  4948  0411                     	;# 
  4949  0416                     	;# 
  4950  0416                     	;# 
  4951  0417                     	;# 
  4952  0418                     	;# 
  4953  0418                     	;# 
  4954  0419                     	;# 
  4955  041A                     	;# 
  4956  041A                     	;# 
  4957  041B                     	;# 
  4958  041C                     	;# 
  4959  041C                     	;# 
  4960  041D                     	;# 
  4961  041E                     	;# 
  4962  041F                     	;# 
  4963  048C                     	;# 
  4964  048C                     	;# 
  4965  048D                     	;# 
  4966  048E                     	;# 
  4967  048F                     	;# 
  4968  048F                     	;# 
  4969  0490                     	;# 
  4970  0491                     	;# 
  4971  0492                     	;# 
  4972  0492                     	;# 
  4973  0493                     	;# 
  4974  0494                     	;# 
  4975  0495                     	;# 
  4976  0495                     	;# 
  4977  0496                     	;# 
  4978  0497                     	;# 
  4979  0498                     	;# 
  4980  0499                     	;# 
  4981  049A                     	;# 
  4982  049B                     	;# 
  4983  049C                     	;# 
  4984  049D                     	;# 
  4985  050C                     	;# 
  4986  050C                     	;# 
  4987  050D                     	;# 
  4988  050E                     	;# 
  4989  050F                     	;# 
  4990  050F                     	;# 
  4991  0510                     	;# 
  4992  0511                     	;# 
  4993  0512                     	;# 
  4994  0512                     	;# 
  4995  0513                     	;# 
  4996  0514                     	;# 
  4997  0515                     	;# 
  4998  0515                     	;# 
  4999  0516                     	;# 
  5000  0517                     	;# 
  5001  0518                     	;# 
  5002  0519                     	;# 
  5003  051A                     	;# 
  5004  051B                     	;# 
  5005  051C                     	;# 
  5006  051D                     	;# 
  5007  058C                     	;# 
  5008  058C                     	;# 
  5009  058D                     	;# 
  5010  058E                     	;# 
  5011  058F                     	;# 
  5012  058F                     	;# 
  5013  0590                     	;# 
  5014  0591                     	;# 
  5015  0592                     	;# 
  5016  0593                     	;# 
  5017  060C                     	;# 
  5018  060D                     	;# 
  5019  060E                     	;# 
  5020  060F                     	;# 
  5021  0610                     	;# 
  5022  0611                     	;# 
  5023  0612                     	;# 
  5024  0613                     	;# 
  5025  0614                     	;# 
  5026  0616                     	;# 
  5027  0617                     	;# 
  5028  0618                     	;# 
  5029  0619                     	;# 
  5030  061A                     	;# 
  5031  061B                     	;# 
  5032  061C                     	;# 
  5033  061D                     	;# 
  5034  061E                     	;# 
  5035  068C                     	;# 
  5036  068D                     	;# 
  5037  068E                     	;# 
  5038  068F                     	;# 
  5039  0690                     	;# 
  5040  0691                     	;# 
  5041  0692                     	;# 
  5042  0693                     	;# 
  5043  0694                     	;# 
  5044  070C                     	;# 
  5045  070D                     	;# 
  5046  070E                     	;# 
  5047  070F                     	;# 
  5048  0710                     	;# 
  5049  0711                     	;# 
  5050  0712                     	;# 
  5051  0713                     	;# 
  5052  0714                     	;# 
  5053  0716                     	;# 
  5054  0717                     	;# 
  5055  0718                     	;# 
  5056  0719                     	;# 
  5057  071A                     	;# 
  5058  071B                     	;# 
  5059  071C                     	;# 
  5060  071D                     	;# 
  5061  071E                     	;# 
  5062  0796                     	;# 
  5063  0797                     	;# 
  5064  0798                     	;# 
  5065  0799                     	;# 
  5066  079A                     	;# 
  5067  079B                     	;# 
  5068  080C                     	;# 
  5069  080D                     	;# 
  5070  080E                     	;# 
  5071  080F                     	;# 
  5072  0810                     	;# 
  5073  0811                     	;# 
  5074  0812                     	;# 
  5075  0813                     	;# 
  5076  0814                     	;# 
  5077  081A                     	;# 
  5078  081B                     	;# 
  5079  081C                     	;# 
  5080  081D                     	;# 
  5081  081E                     	;# 
  5082  081F                     	;# 
  5083  088C                     	;# 
  5084  088D                     	;# 
  5085  088E                     	;# 
  5086  088F                     	;# 
  5087  0890                     	;# 
  5088  0891                     	;# 
  5089  0892                     	;# 
  5090  0893                     	;# 
  5091  0895                     	;# 
  5092  0896                     	;# 
  5093  0897                     	;# 
  5094  0898                     	;# 
  5095  0899                     	;# 
  5096  089A                     	;# 
  5097  089B                     	;# 
  5098  090C                     	;# 
  5099  090E                     	;# 
  5100  090F                     	;# 
  5101  091F                     	;# 
  5102  091F                     	;# 
  5103  098F                     	;# 
  5104  098F                     	;# 
  5105  0990                     	;# 
  5106  0991                     	;# 
  5107  0992                     	;# 
  5108  0993                     	;# 
  5109  0994                     	;# 
  5110  0995                     	;# 
  5111  0996                     	;# 
  5112  0997                     	;# 
  5113  0E0F                     	;# 
  5114  0E10                     	;# 
  5115  0E11                     	;# 
  5116  0E12                     	;# 
  5117  0E13                     	;# 
  5118  0E14                     	;# 
  5119  0E15                     	;# 
  5120  0E16                     	;# 
  5121  0E17                     	;# 
  5122  0E18                     	;# 
  5123  0E19                     	;# 
  5124  0E1A                     	;# 
  5125  0E1B                     	;# 
  5126  0E1C                     	;# 
  5127  0E1D                     	;# 
  5128  0E1E                     	;# 
  5129  0E1F                     	;# 
  5130  0E20                     	;# 
  5131  0E21                     	;# 
  5132  0E22                     	;# 
  5133  0E23                     	;# 
  5134  0E24                     	;# 
  5135  0E25                     	;# 
  5136  0E26                     	;# 
  5137  0E27                     	;# 
  5138  0E28                     	;# 
  5139  0E29                     	;# 
  5140  0E2A                     	;# 
  5141  0E2B                     	;# 
  5142  0E2C                     	;# 
  5143  0E2D                     	;# 
  5144  0E2E                     	;# 
  5145  0E2F                     	;# 
  5146  0E30                     	;# 
  5147  0E31                     	;# 
  5148  0E32                     	;# 
  5149  0E33                     	;# 
  5150  0E34                     	;# 
  5151  0E35                     	;# 
  5152  0E36                     	;# 
  5153  0E37                     	;# 
  5154  0E8F                     	;# 
  5155  0E90                     	;# 
  5156  0E91                     	;# 
  5157  0E92                     	;# 
  5158  0E93                     	;# 
  5159  0E94                     	;# 
  5160  0E95                     	;# 
  5161  0E96                     	;# 
  5162  0E97                     	;# 
  5163  0E9C                     	;# 
  5164  0E9D                     	;# 
  5165  0E9E                     	;# 
  5166  0EA1                     	;# 
  5167  0EA2                     	;# 
  5168  0EA3                     	;# 
  5169  0EA4                     	;# 
  5170  0EA5                     	;# 
  5171  0EA9                     	;# 
  5172  0EAA                     	;# 
  5173  0EAB                     	;# 
  5174  0EAC                     	;# 
  5175  0EB1                     	;# 
  5176  0EB2                     	;# 
  5177  0EB3                     	;# 
  5178  0EB8                     	;# 
  5179  0EB9                     	;# 
  5180  0EBA                     	;# 
  5181  0EBB                     	;# 
  5182  0EBC                     	;# 
  5183  0EBD                     	;# 
  5184  0EBE                     	;# 
  5185  0EC3                     	;# 
  5186  0EC5                     	;# 
  5187  0EC6                     	;# 
  5188  0EC7                     	;# 
  5189  0EC8                     	;# 
  5190  0EC9                     	;# 
  5191  0ECA                     	;# 
  5192  0ECB                     	;# 
  5193  0ECC                     	;# 
  5194  0F10                     	;# 
  5195  0F11                     	;# 
  5196  0F12                     	;# 
  5197  0F13                     	;# 
  5198  0F14                     	;# 
  5199  0F15                     	;# 
  5200  0F16                     	;# 
  5201  0F17                     	;# 
  5202  0F18                     	;# 
  5203  0F19                     	;# 
  5204  0F1A                     	;# 
  5205  0F1B                     	;# 
  5206  0F1C                     	;# 
  5207  0F1D                     	;# 
  5208  0F1E                     	;# 
  5209  0F1F                     	;# 
  5210  0F20                     	;# 
  5211  0F21                     	;# 
  5212  0F22                     	;# 
  5213  0F23                     	;# 
  5214  0F24                     	;# 
  5215  0F25                     	;# 
  5216  0F26                     	;# 
  5217  0F27                     	;# 
  5218  0F38                     	;# 
  5219  0F39                     	;# 
  5220  0F3A                     	;# 
  5221  0F3B                     	;# 
  5222  0F3C                     	;# 
  5223  0F3D                     	;# 
  5224  0F3E                     	;# 
  5225  0F3F                     	;# 
  5226  0F40                     	;# 
  5227  0F41                     	;# 
  5228  0F43                     	;# 
  5229  0F44                     	;# 
  5230  0F45                     	;# 
  5231  0F46                     	;# 
  5232  0F47                     	;# 
  5233  0F48                     	;# 
  5234  0F49                     	;# 
  5235  0F4A                     	;# 
  5236  0F4B                     	;# 
  5237  0F4C                     	;# 
  5238  0F4E                     	;# 
  5239  0F4F                     	;# 
  5240  0F50                     	;# 
  5241  0F51                     	;# 
  5242  0F52                     	;# 
  5243  0F53                     	;# 
  5244  0F54                     	;# 
  5245  0F55                     	;# 
  5246  0F56                     	;# 
  5247  0F57                     	;# 
  5248  0F65                     	;# 
  5249  0F68                     	;# 
  5250  0F69                     	;# 
  5251  0F6A                     	;# 
  5252  0F6B                     	;# 
  5253  0FE4                     	;# 
  5254  0FE5                     	;# 
  5255  0FE6                     	;# 
  5256  0FE7                     	;# 
  5257  0FE8                     	;# 
  5258  0FE9                     	;# 
  5259  0FEA                     	;# 
  5260  0FEB                     	;# 
  5261  0FED                     	;# 
  5262  0FEE                     	;# 
  5263  0FEF                     	;_samples
  5264                           
  5265                           	psect	idataBANK1
  5266  139C                     __pidataBANK1:	
  5267                           
  5268                           ;initializer for _Imode1
  5269  139C  3401               	retlw	1
  5270                           
  5271                           ;initializer for _Imode0
  5272  139D  3401               	retlw	1
  5273                           
  5274                           	psect	idataBANK2
  5275  13DB                     __pidataBANK2:	
  5276                           
  5277                           ;initializer for _channels
  5278  13DB  3417               	retlw	23
  5279  13DC  3400               	retlw	0
  5280  13DD  3415               	retlw	21
  5281  13DE  3400               	retlw	0
  5282  13DF  3413               	retlw	19
  5283  13E0  3400               	retlw	0
  5284  13E1  3411               	retlw	17
  5285  13E2  3400               	retlw	0
  5286  13E3  3416               	retlw	22
  5287  13E4  3400               	retlw	0
  5288  13E5  3414               	retlw	20
  5289  13E6  3400               	retlw	0
  5290  13E7  3412               	retlw	18
  5291  13E8  3400               	retlw	0
  5292  13E9  3410               	retlw	16
  5293  13EA  3400               	retlw	0
  5294                           
  5295                           	psect	stringtext1
  5296  0800                     __pstringtext1:	
  5297  0800                     _fonts:	
  5298  0800  3400               	retlw	0
  5299  0801  3400               	retlw	0
  5300  0802  3400               	retlw	0
  5301  0803  3400               	retlw	0
  5302  0804  344E               	retlw	78
  5303  0805  3400               	retlw	0
  5304  0806  3406               	retlw	6
  5305  0807  3400               	retlw	0
  5306  0808  3406               	retlw	6
  5307  0809  34FF               	retlw	255
  5308  080A  34FF               	retlw	255
  5309  080B  34FF               	retlw	255
  5310  080C  3448               	retlw	72
  5311  080D  34D6               	retlw	214
  5312  080E  3424               	retlw	36
  5313  080F  3412               	retlw	18
  5314  0810  3408               	retlw	8
  5315  0811  3424               	retlw	36
  5316  0812  34FF               	retlw	255
  5317  0813  34FF               	retlw	255
  5318  0814  34FF               	retlw	255
  5319  0815  3400               	retlw	0
  5320  0816  3406               	retlw	6
  5321  0817  3400               	retlw	0
  5322  0818  3438               	retlw	56
  5323  0819  3444               	retlw	68
  5324  081A  3482               	retlw	130
  5325  081B  3482               	retlw	130
  5326  081C  3444               	retlw	68
  5327  081D  3438               	retlw	56
  5328  081E  3414               	retlw	20
  5329  081F  3408               	retlw	8
  5330  0820  343E               	retlw	62
  5331  0821  3410               	retlw	16
  5332  0822  3438               	retlw	56
  5333  0823  3410               	retlw	16
  5334  0824  34A0               	retlw	160
  5335  0825  3460               	retlw	96
  5336  0826  3400               	retlw	0
  5337  0827  3410               	retlw	16
  5338  0828  3410               	retlw	16
  5339  0829  3410               	retlw	16
  5340  082A  3460               	retlw	96
  5341  082B  3460               	retlw	96
  5342  082C  3400               	retlw	0
  5343  082D  3460               	retlw	96
  5344  082E  3418               	retlw	24
  5345  082F  3406               	retlw	6
  5346  0830  347C               	retlw	124
  5347  0831  3442               	retlw	66
  5348  0832  347C               	retlw	124
  5349  0833  3444               	retlw	68
  5350  0834  347E               	retlw	126
  5351  0835  3440               	retlw	64
  5352  0836  3464               	retlw	100
  5353  0837  3452               	retlw	82
  5354  0838  344C               	retlw	76
  5355  0839  344A               	retlw	74
  5356  083A  344A               	retlw	74
  5357  083B  3434               	retlw	52
  5358  083C  3438               	retlw	56
  5359  083D  3424               	retlw	36
  5360  083E  347E               	retlw	126
  5361  083F  344E               	retlw	78
  5362  0840  344A               	retlw	74
  5363  0841  3432               	retlw	50
  5364  0842  343C               	retlw	60
  5365  0843  344A               	retlw	74
  5366  0844  3432               	retlw	50
  5367  0845  3462               	retlw	98
  5368  0846  341A               	retlw	26
  5369  0847  3406               	retlw	6
  5370  0848  3476               	retlw	118
  5371  0849  344A               	retlw	74
  5372  084A  3476               	retlw	118
  5373  084B  344C               	retlw	76
  5374  084C  3452               	retlw	82
  5375  084D  343C               	retlw	60
  5376  084E  346C               	retlw	108
  5377  084F  346C               	retlw	108
  5378  0850  3400               	retlw	0
  5379  0851  34AC               	retlw	172
  5380  0852  346C               	retlw	108
  5381  0853  3400               	retlw	0
  5382  0854  3410               	retlw	16
  5383  0855  3428               	retlw	40
  5384  0856  3444               	retlw	68
  5385  0857  3428               	retlw	40
  5386  0858  3428               	retlw	40
  5387  0859  3428               	retlw	40
  5388  085A  3444               	retlw	68
  5389  085B  3428               	retlw	40
  5390  085C  3410               	retlw	16
  5391  085D  3402               	retlw	2
  5392  085E  3459               	retlw	89
  5393  085F  3406               	retlw	6
  5394  0860  34FF               	retlw	255
  5395  0861  34FF               	retlw	255
  5396  0862  34FF               	retlw	255
  5397  0863  347C               	retlw	124
  5398  0864  3412               	retlw	18
  5399  0865  347C               	retlw	124
  5400  0866  347E               	retlw	126
  5401  0867  345A               	retlw	90
  5402  0868  3434               	retlw	52
  5403  0869  343C               	retlw	60
  5404  086A  3442               	retlw	66
  5405  086B  3442               	retlw	66
  5406  086C  347E               	retlw	126
  5407  086D  3442               	retlw	66
  5408  086E  343C               	retlw	60
  5409  086F  347E               	retlw	126
  5410  0870  344A               	retlw	74
  5411  0871  3442               	retlw	66
  5412  0872  347E               	retlw	126
  5413  0873  340A               	retlw	10
  5414  0874  340A               	retlw	10
  5415  0875  343C               	retlw	60
  5416  0876  3452               	retlw	82
  5417  0877  3434               	retlw	52
  5418  0878  347E               	retlw	126
  5419  0879  3408               	retlw	8
  5420  087A  347E               	retlw	126
  5421  087B  3442               	retlw	66
  5422  087C  347E               	retlw	126
  5423  087D  3442               	retlw	66
  5424  087E  3430               	retlw	48
  5425  087F  3440               	retlw	64
  5426  0880  343E               	retlw	62
  5427  0881  347E               	retlw	126
  5428  0882  3418               	retlw	24
  5429  0883  3466               	retlw	102
  5430  0884  347E               	retlw	126
  5431  0885  3440               	retlw	64
  5432  0886  3440               	retlw	64
  5433  0887  347E               	retlw	126
  5434  0888  341C               	retlw	28
  5435  0889  347E               	retlw	126
  5436  088A  347E               	retlw	126
  5437  088B  3402               	retlw	2
  5438  088C  347E               	retlw	126
  5439  088D  343C               	retlw	60
  5440  088E  3442               	retlw	66
  5441  088F  343C               	retlw	60
  5442  0890  347E               	retlw	126
  5443  0891  3412               	retlw	18
  5444  0892  340C               	retlw	12
  5445  0893  347E               	retlw	126
  5446  0894  3462               	retlw	98
  5447  0895  34FE               	retlw	254
  5448  0896  347E               	retlw	126
  5449  0897  3432               	retlw	50
  5450  0898  344E               	retlw	78
  5451  0899  3444               	retlw	68
  5452  089A  344A               	retlw	74
  5453  089B  3432               	retlw	50
  5454  089C  3402               	retlw	2
  5455  089D  347E               	retlw	126
  5456  089E  3402               	retlw	2
  5457  089F  347E               	retlw	126
  5458  08A0  3440               	retlw	64
  5459  08A1  347E               	retlw	126
  5460  08A2  343E               	retlw	62
  5461  08A3  3440               	retlw	64
  5462  08A4  343E               	retlw	62
  5463  08A5  347E               	retlw	126
  5464  08A6  3438               	retlw	56
  5465  08A7  347E               	retlw	126
  5466  08A8  3466               	retlw	102
  5467  08A9  3418               	retlw	24
  5468  08AA  3466               	retlw	102
  5469  08AB  340E               	retlw	14
  5470  08AC  3470               	retlw	112
  5471  08AD  340E               	retlw	14
  5472  08AE  3462               	retlw	98
  5473  08AF  345A               	retlw	90
  5474  08B0  3446               	retlw	70
  5475  08B1  3400               	retlw	0
  5476  08B2  347E               	retlw	126
  5477  08B3  3442               	retlw	66
  5478  08B4  3406               	retlw	6
  5479  08B5  3418               	retlw	24
  5480  08B6  3460               	retlw	96
  5481  08B7  3442               	retlw	66
  5482  08B8  347E               	retlw	126
  5483  08B9  3400               	retlw	0
  5484  08BA  3404               	retlw	4
  5485  08BB  3402               	retlw	2
  5486  08BC  3404               	retlw	4
  5487  08BD  3440               	retlw	64
  5488  08BE  3440               	retlw	64
  5489  08BF  3440               	retlw	64
  5490  08C0  3400               	retlw	0
  5491  08C1  3402               	retlw	2
  5492  08C2  3404               	retlw	4
  5493  08C3  3474               	retlw	116
  5494  08C4  3454               	retlw	84
  5495  08C5  3478               	retlw	120
  5496  08C6  347E               	retlw	126
  5497  08C7  3448               	retlw	72
  5498  08C8  3430               	retlw	48
  5499  08C9  3430               	retlw	48
  5500  08CA  3448               	retlw	72
  5501  08CB  3448               	retlw	72
  5502  08CC  3430               	retlw	48
  5503  08CD  3448               	retlw	72
  5504  08CE  347E               	retlw	126
  5505  08CF  3438               	retlw	56
  5506  08D0  3454               	retlw	84
  5507  08D1  3458               	retlw	88
  5508  08D2  347C               	retlw	124
  5509  08D3  340A               	retlw	10
  5510  08D4  3402               	retlw	2
  5511  08D5  3498               	retlw	152
  5512  08D6  34A4               	retlw	164
  5513  08D7  347C               	retlw	124
  5514  08D8  347E               	retlw	126
  5515  08D9  3408               	retlw	8
  5516  08DA  3470               	retlw	112
  5517  08DB  3448               	retlw	72
  5518  08DC  347A               	retlw	122
  5519  08DD  3440               	retlw	64
  5520  08DE  3488               	retlw	136
  5521  08DF  34FA               	retlw	250
  5522  08E0  3400               	retlw	0
  5523  08E1  347E               	retlw	126
  5524  08E2  3418               	retlw	24
  5525  08E3  3464               	retlw	100
  5526  08E4  3442               	retlw	66
  5527  08E5  347E               	retlw	126
  5528  08E6  3440               	retlw	64
  5529  08E7  347C               	retlw	124
  5530  08E8  3438               	retlw	56
  5531  08E9  347C               	retlw	124
  5532  08EA  347C               	retlw	124
  5533  08EB  3404               	retlw	4
  5534  08EC  3478               	retlw	120
  5535  08ED  3438               	retlw	56
  5536  08EE  3444               	retlw	68
  5537  08EF  3438               	retlw	56
  5538  08F0  34FC               	retlw	252
  5539  08F1  3424               	retlw	36
  5540  08F2  3418               	retlw	24
  5541  08F3  3418               	retlw	24
  5542  08F4  3424               	retlw	36
  5543  08F5  34FC               	retlw	252
  5544  08F6  3478               	retlw	120
  5545  08F7  3404               	retlw	4
  5546  08F8  3404               	retlw	4
  5547  08F9  3448               	retlw	72
  5548  08FA  3454               	retlw	84
  5549  08FB  3424               	retlw	36
  5550  08FC  3404               	retlw	4
  5551  08FD  343E               	retlw	62
  5552  08FE  3444               	retlw	68
  5553  08FF  347C               	retlw	124
  5554  0900  3440               	retlw	64
  5555  0901  347C               	retlw	124
  5556  0902  343C               	retlw	60
  5557  0903  3440               	retlw	64
  5558  0904  343C               	retlw	60
  5559  0905  347C               	retlw	124
  5560  0906  3430               	retlw	48
  5561  0907  347C               	retlw	124
  5562  0908  346C               	retlw	108
  5563  0909  3410               	retlw	16
  5564  090A  346C               	retlw	108
  5565  090B  349C               	retlw	156
  5566  090C  34A0               	retlw	160
  5567  090D  347C               	retlw	124
  5568  090E  3464               	retlw	100
  5569  090F  3454               	retlw	84
  5570  0910  344C               	retlw	76
  5571  0911  340C               	retlw	12
  5572  0912  3412               	retlw	18
  5573  0913  340C               	retlw	12
  5574  0914  34FF               	retlw	255
  5575  0915  34FF               	retlw	255
  5576  0916  34FF               	retlw	255
  5577  0917  34FF               	retlw	255
  5578  0918  34FF               	retlw	255
  5579  0919  34FF               	retlw	255
  5580  091A  34FF               	retlw	255
  5581  091B  34FF               	retlw	255
  5582  091C  34FF               	retlw	255
  5583  091D  34FF               	retlw	255
  5584  091E  34FF               	retlw	255
  5585  091F  34FF               	retlw	255
  5586  0920  34FF               	retlw	255
  5587  0921  34FF               	retlw	255
  5588  0922  34FF               	retlw	255
  5589  0923  34FF               	retlw	255
  5590  0924  34FF               	retlw	255
  5591  0925  34FF               	retlw	255
  5592  0926  34FC               	retlw	252
  5593  0927  3440               	retlw	64
  5594  0928  347C               	retlw	124
  5595  0929  34FF               	retlw	255
  5596  092A  34FF               	retlw	255
  5597  092B  34FF               	retlw	255
  5598  092C  34FF               	retlw	255
  5599  092D  34FF               	retlw	255
  5600  092E  34FF               	retlw	255
  5601  092F                     __end_of_fonts:	
  5602                           
  5603                           	psect	stringtext2
  5604  1800                     __pstringtext2:	
  5605  1800                     log@coeff:	
  5606  1800  3400               	retlw	0
  5607  1801  3400               	retlw	0
  5608  1802  3400               	retlw	0
  5609  1803  3400               	retlw	0
  5610  1804  3480               	retlw	128
  5611  1805  343F               	retlw	63
  5612  1806  34F0               	retlw	240
  5613  1807  34FF               	retlw	255
  5614  1808  34BE               	retlw	190
  5615  1809  34E2               	retlw	226
  5616  180A  34A9               	retlw	169
  5617  180B  343E               	retlw	62
  5618  180C  3483               	retlw	131
  5619  180D  3476               	retlw	118
  5620  180E  34BE               	retlw	190
  5621  180F  34AE               	retlw	174
  5622  1810  342B               	retlw	43
  5623  1811  343E               	retlw	62
  5624  1812  343C               	retlw	60
  5625  1813  34C3               	retlw	195
  5626  1814  34BD               	retlw	189
  5627  1815  34D2               	retlw	210
  5628  1816  3413               	retlw	19
  5629  1817  343D               	retlw	61
  5630  1818  3478               	retlw	120
  5631  1819  34D3               	retlw	211
  5632  181A  34BB               	retlw	187
  5633  181B                     __end_oflog@coeff:	
  5634                           
  5635                           	psect	nvBANK1
  5636  00E3                     __pnvBANK1:	
  5637  00E3                     _Imin:	
  5638  00E3                     	ds	2
  5639  00E5                     _state_counter:	
  5640  00E5                     	ds	2
  5641  00E7                     _IminCount:	
  5642  00E7                     	ds	2
  5643  00E9                     _Iref:	
  5644  00E9                     	ds	2
  5645  00EB                     _Vref:	
  5646  00EB                     	ds	2
  5647  00ED                     _battery_state:	
  5648  00ED                     	ds	1
  5649  0013                     _TRISC	set	19
  5650  0012                     _TRISB	set	18
  5651  0011                     _TRISA	set	17
  5652  0018                     _LATC	set	24
  5653  0017                     _LATB	set	23
  5654  0016                     _LATA	set	22
  5655  0016                     _LATAbits	set	22
  5656  0011                     _TRISAbits	set	17
  5657  005F                     _GIE	set	95
  5658  00B5                     _LATA5	set	181
  5659  006A                     _RB2	set	106
  5660  0093                     _ADCON0	set	147
  5661  009D                     _ADACQ	set	157
  5662  009C                     _ADPRE	set	156
  5663  009B                     _ADCAP	set	155
  5664  009A                     _ADREF	set	154
  5665  0098                     _ADCLK	set	152
  5666  0097                     _ADSTAT	set	151
  5667  0099                     _ADACT	set	153
  5668  0096                     _ADCON3	set	150
  5669  0095                     _ADCON2	set	149
  5670  0094                     _ADCON1	set	148
  5671  008C                     _ADRESL	set	140
  5672  008D                     _ADRESH	set	141
  5673  0093                     _ADCON0bits	set	147
  5674  009E                     _ADPCH	set	158
  5675  0113                     _ADSTPTH	set	275
  5676  0112                     _ADSTPTL	set	274
  5677  0111                     _ADUTHH	set	273
  5678  0110                     _ADUTHL	set	272
  5679  010F                     _ADLTHH	set	271
  5680  010E                     _ADLTHL	set	270
  5681  010D                     _ADRPT	set	269
  5682  021E                     _CCPTMRS0bits	set	542
  5683  021F                     _CCPTMRS1bits	set	543
  5684  0294                     _T4CONbits	set	660
  5685  0292                     _T4TMR	set	658
  5686  0293                     _T4PR	set	659
  5687  0297                     _T4RST	set	663
  5688  0295                     _T4HLT	set	661
  5689  0296                     _T4CLKCON	set	662
  5690  0294                     _T4CON	set	660
  5691  028E                     _T2CONbits	set	654
  5692  028C                     _T2TMR	set	652
  5693  028D                     _T2PR	set	653
  5694  0291                     _T2RST	set	657
  5695  028F                     _T2HLT	set	655
  5696  0290                     _T2CLKCON	set	656
  5697  028E                     _T2CON	set	654
  5698  030C                     _CCPR1L	set	780
  5699  030D                     _CCPR1H	set	781
  5700  030E                     _CCP1CONbits	set	782
  5701  0390                     _PWM7DCL	set	912
  5702  0391                     _PWM7DCH	set	913
  5703  0392                     _PWM7CON	set	914
  5704  038C                     _PWM6DCL	set	908
  5705  038D                     _PWM6DCH	set	909
  5706  038E                     _PWM6CON	set	910
  5707  0710                     _PIR4bits	set	1808
  5708  0716                     _PIE0bits	set	1814
  5709  0892                     _OSCTUNE	set	2194
  5710  0893                     _OSCFRQ	set	2195
  5711  0891                     _OSCEN	set	2193
  5712  088F                     _OSCCON3	set	2191
  5713  088D                     _OSCCON1	set	2189
  5714  090C                     _FVRCON	set	2316
  5715  0E8F                     _PPSLOCKbits	set	3727
  5716  0E8F                     _PPSLOCK	set	3727
  5717  0F18                     _RB0PPS	set	3864
  5718  0F17                     _RA7PPS	set	3863
  5719  0F16                     _RA6PPS	set	3862
  5720  0F4E                     _ANSELC	set	3918
  5721  0F43                     _ANSELB	set	3907
  5722  0F38                     _ANSELA	set	3896
  5723  0F65                     _WPUE	set	3941
  5724  0F4F                     _WPUC	set	3919
  5725  0F44                     _WPUB	set	3908
  5726  0F39                     _WPUA	set	3897
  5727                           
  5728                           	psect	stringtext3
  5729  181B                     __pstringtext3:	
  5730  181B                     STR_1:	
  5731  181B  3442               	retlw	66	;'B'
  5732  181C  3441               	retlw	65	;'A'
  5733  181D  3454               	retlw	84	;'T'
  5734  181E  3454               	retlw	84	;'T'
  5735  181F  3445               	retlw	69	;'E'
  5736  1820  3452               	retlw	82	;'R'
  5737  1821  3459               	retlw	89	;'Y'
  5738  1822  3420               	retlw	32	;' '
  5739  1823  3446               	retlw	70	;'F'
  5740  1824  3441               	retlw	65	;'A'
  5741  1825  3455               	retlw	85	;'U'
  5742  1826  344C               	retlw	76	;'L'
  5743  1827  3454               	retlw	84	;'T'
  5744  1828  3400               	retlw	0
  5745                           
  5746                           	psect	stringtext4
  5747  0000                     __pstringtext4:	
  5748                           
  5749                           ; #config settings
  5750  0000                     
  5751                           	psect	cinit
  5752  07C2                     start_initialization:	
  5753  07C2                     __initialization:		;BIGRAM
  5754                           
  5755                           ; Initialize objects allocated to BANK1
  5756  07C2  0021               	movlb	1	; select bank1
  5757  07C3  3193  239C  3187   	fcall	__pidataBANK1	;fetch initializer
  5758  07C6  00EE               	movwf	__pdataBANK1& (0+127)
  5759  07C7  3193  239D  3187   	fcall	__pidataBANK1+1	;fetch initializer
  5760  07CA  00EF               	movwf	(__pdataBANK1+1)& (0+127)
  5761                           
  5762                           ; Initialize objects allocated to BANK2
  5763  07CB  30DB               	movlw	low __pidataBANK2
  5764  07CC  0084               	movwf	4
  5765  07CD  3093               	movlw	(high __pidataBANK2)| (0+128)
  5766  07CE  0085               	movwf	5
  5767  07CF  3050               	movlw	low __pdataBANK2
  5768  07D0  0086               	movwf	6
  5769  07D1  3001               	movlw	high __pdataBANK2
  5770  07D2  0087               	movwf	7
  5771  07D3  3000               	movlw	0
  5772  07D4  00FF               	movwf	btemp+1
  5773  07D5  3010               	movlw	16
  5774  07D6  3193  23B3  3187   	fcall	init_ram
  5775                           
  5776                           ; Clear objects allocated to BIGRAM
  5777  07D9  3030               	movlw	low (0+9008)
  5778  07DA  0084               	movwf	4
  5779  07DB  3023               	movlw	high (0+9008)
  5780  07DC  0085               	movwf	5
  5781  07DD  30C0               	movlw	192
  5782  07DE  00FE               	movwf	btemp
  5783  07DF  3000               	movlw	0
  5784  07E0  00FF               	movwf	btemp+1
  5785  07E1  3193  23A7  3187   	fcall	clear_ram0
  5786                           
  5787                           ; Clear objects allocated to BANK0
  5788  07E4  0020               	movlb	0	; select bank0
  5789  07E5  01EC               	clrf	__pbssBANK0& (0+127)
  5790  07E6  01ED               	clrf	(__pbssBANK0+1)& (0+127)
  5791  07E7  01EE               	clrf	(__pbssBANK0+2)& (0+127)
  5792                           
  5793                           ; Clear objects allocated to BANK1
  5794  07E8  30C4               	movlw	low __pbssBANK1
  5795  07E9  0084               	movwf	4
  5796  07EA  3000               	movlw	high __pbssBANK1
  5797  07EB  0085               	movwf	5
  5798  07EC  301F               	movlw	31
  5799  07ED  00FE               	movwf	btemp
  5800  07EE  3000               	movlw	0
  5801  07EF  00FF               	movwf	btemp+1
  5802  07F0  3193  23A7  3187   	fcall	clear_ram0
  5803                           
  5804                           ; Clear objects allocated to BANK2
  5805  07F3  3020               	movlw	low __pbssBANK2
  5806  07F4  0084               	movwf	4
  5807  07F5  3001               	movlw	high __pbssBANK2
  5808  07F6  0085               	movwf	5
  5809  07F7  3030               	movlw	48
  5810  07F8  00FE               	movwf	btemp
  5811  07F9  3000               	movlw	0
  5812  07FA  00FF               	movwf	btemp+1
  5813  07FB  3193  23A7         	fcall	clear_ram0
  5814  07FD                     end_of_initialization:	
  5815                           ;End of C runtime variable initialization code
  5816                           
  5817  07FD                     __end_of__initialization:	
  5818  07FD  0020               	movlb	0
  5819  07FE  3182  2A84         	ljmp	_main	;jump to C main() function
  5820                           
  5821                           	psect	bssBANK0
  5822  006C                     __pbssBANK0:	
  5823  006C                     _j:	
  5824  006C                     	ds	1
  5825  006D                     _lastButton:	
  5826  006D                     	ds	1
  5827  006E                     _button:	
  5828  006E                     	ds	1
  5829                           
  5830                           	psect	bssBANK1
  5831  00C4                     __pbssBANK1:	
  5832  00C4                     _current:	
  5833  00C4                     	ds	8
  5834  00CC                     _voltage:	
  5835  00CC                     	ds	8
  5836  00D4                     LCDWriteInt@F14388:	
  5837  00D4                     	ds	5
  5838  00D9                     _errno:	
  5839  00D9                     	ds	2
  5840  00DB                     _readButtons:	
  5841  00DB                     	ds	2
  5842  00DD                     _Iout:	
  5843  00DD                     	ds	2
  5844  00DF                     _sampleIndex:	
  5845  00DF                     	ds	2
  5846  00E1                     _cc_cv:	
  5847  00E1                     	ds	1
  5848  00E2                     _VHoldMode:	
  5849  00E2                     	ds	1
  5850                           
  5851                           	psect	dataBANK1
  5852  00EE                     __pdataBANK1:	
  5853  00EE                     _Imode1:	
  5854  00EE                     	ds	1
  5855  00EF                     _Imode0:	
  5856  00EF                     	ds	1
  5857                           
  5858                           	psect	bssBANK2
  5859  0120                     __pbssBANK2:	
  5860  0120                     _totals:	
  5861  0120                     	ds	32
  5862  0140                     _analogs:	
  5863  0140                     	ds	16
  5864                           
  5865                           	psect	dataBANK2
  5866  0150                     __pdataBANK2:	
  5867  0150                     _channels:	
  5868  0150                     	ds	16
  5869                           
  5870                           	psect	inittext
  5871  13B3                     init_ram:	
  5872  13B3  00FE               	movwf	126
  5873  13B4                     initloop:	
  5874  13B4  0012               	moviw fsr0++
  5875  13B5  001E               	movwi fsr1++
  5876  13B6  3001               	movlw	1
  5877  13B7  02FE               	subwf	126,f
  5878  13B8  3000               	movlw	0
  5879  13B9  3BFF               	subwfb	127,f
  5880  13BA  087F               	movf	127,w
  5881  13BB  047E               	iorwf	126,w
  5882  13BC  1903               	btfsc	3,2
  5883  13BD  3400               	retlw	0
  5884  13BE  2BB4               	goto	initloop
  5885                           
  5886                           	psect	clrtext
  5887  13A7                     clear_ram0:	
  5888                           ;	Called with FSR0 containing the base address, and
  5889                           ;	btemp/btemp+1 has the size to clear
  5890                           
  5891  13A7  0064               	clrwdt	;clear the watchdog before getting into this loop
  5892  13A8                     clrloop0:	
  5893  13A8  0180               	clrf	0	;clear RAM location pointed to by FSR
  5894  13A9  3101               	addfsr 0,1
  5895  13AA  3001               	movlw	1
  5896  13AB  02FE               	subwf	126,f
  5897  13AC  3000               	movlw	0
  5898  13AD  3BFF               	subwfb	127,f
  5899  13AE  087F               	movf	127,w
  5900  13AF  047E               	iorwf	126,w
  5901  13B0  1903               	btfsc	3,2
  5902  13B1  3400               	retlw	0	;all done for this memory range, return
  5903  13B2  2BA8               	goto	clrloop0	;have we reached the end yet?
  5904                           
  5905                           	psect	cstackBANK1
  5906  00A0                     __pcstackBANK1:	
  5907  00A0                     _main$1302:	
  5908                           
  5909                           ; 3 bytes @ 0x0
  5910  00A0                     	ds	3
  5911  00A3                     main@batteryTemp:	
  5912                           
  5913                           ; 2 bytes @ 0x3
  5914  00A3                     	ds	2
  5915  00A5                     main@MPPT1:	
  5916                           
  5917                           ; 2 bytes @ 0x5
  5918  00A5                     	ds	2
  5919  00A7                     main@faultCount:	
  5920                           
  5921                           ; 2 bytes @ 0x7
  5922  00A7                     	ds	2
  5923  00A9                     main@faultNotReset:	
  5924                           
  5925                           ; 2 bytes @ 0x9
  5926  00A9                     	ds	2
  5927  00AB                     _main$1295:	
  5928                           
  5929                           ; 3 bytes @ 0xB
  5930  00AB                     	ds	3
  5931  00AE                     _main$1297:	
  5932                           
  5933                           ; 2 bytes @ 0xE
  5934  00AE                     	ds	2
  5935  00B0                     _main$1298:	
  5936                           
  5937                           ; 2 bytes @ 0x10
  5938  00B0                     	ds	2
  5939  00B2                     main@fastLoop:	
  5940                           
  5941                           ; 1 bytes @ 0x12
  5942  00B2                     	ds	1
  5943  00B3                     main@slowLoop:	
  5944                           
  5945                           ; 1 bytes @ 0x13
  5946  00B3                     	ds	1
  5947  00B4                     main@displayRefresh:	
  5948                           
  5949                           ; 1 bytes @ 0x14
  5950  00B4                     	ds	1
  5951  00B5                     main@efficiency:	
  5952                           
  5953                           ; 3 bytes @ 0x15
  5954  00B5                     	ds	3
  5955  00B8                     main@IOutTotal:	
  5956                           
  5957                           ; 2 bytes @ 0x18
  5958  00B8                     	ds	2
  5959  00BA                     main@menuButton:	
  5960                           
  5961                           ; 1 bytes @ 0x1A
  5962  00BA                     	ds	1
  5963  00BB                     main@dutyCycle7:	
  5964                           
  5965                           ; 2 bytes @ 0x1B
  5966  00BB                     	ds	2
  5967  00BD                     main@dutyCycle1:	
  5968                           
  5969                           ; 2 bytes @ 0x1D
  5970  00BD                     	ds	2
  5971  00BF                     main@MPPT0:	
  5972                           
  5973                           ; 2 bytes @ 0x1F
  5974  00BF                     	ds	2
  5975  00C1                     main@j:	
  5976                           
  5977                           ; 1 bytes @ 0x21
  5978  00C1                     	ds	1
  5979  00C2                     main@dutyCycle6:	
  5980                           
  5981                           ; 2 bytes @ 0x22
  5982  00C2                     	ds	2
  5983                           
  5984                           	psect	cstackCOMMON
  5985  0070                     __pcstackCOMMON:	
  5986  0070                     ?___ftge:	
  5987  0070                     ?_SYSTEM_Initialize:	
  5988                           ; 1 bit 
  5989                           
  5990  0070                     ?_LCDClear:	
  5991                           ; 1 bytes @ 0x0
  5992                           
  5993  0070                     ?_PWM1_LoadDutyValue:	
  5994                           ; 1 bytes @ 0x0
  5995                           
  5996  0070                     ?_PWM6_LoadDutyValue:	
  5997                           ; 1 bytes @ 0x0
  5998                           
  5999  0070                     ?_PWM7_LoadDutyValue:	
  6000                           ; 1 bytes @ 0x0
  6001                           
  6002  0070                     ?_readButton:	
  6003                           ; 1 bytes @ 0x0
  6004                           
  6005  0070                     ?_LCDInit:	
  6006                           ; 1 bytes @ 0x0
  6007                           
  6008  0070                     ?_Battery_State_Machine:	
  6009                           ; 1 bytes @ 0x0
  6010                           
  6011  0070                     ?_LCDWriteCharacter:	
  6012                           ; 1 bytes @ 0x0
  6013                           
  6014  0070                     ?_cc_cv_mode:	
  6015                           ; 1 bytes @ 0x0
  6016                           
  6017  0070                     ??_cc_cv_mode:	
  6018                           ; 1 bytes @ 0x0
  6019                           
  6020  0070                     ?_calculateCurrent0:	
  6021                           ; 1 bytes @ 0x0
  6022                           
  6023  0070                     ?_calculateCurrent1:	
  6024                           ; 1 bytes @ 0x0
  6025                           
  6026  0070                     ?_LCDWrite:	
  6027                           ; 1 bytes @ 0x0
  6028                           
  6029  0070                     ?_OSCILLATOR_Initialize:	
  6030                           ; 1 bytes @ 0x0
  6031                           
  6032  0070                     ??_OSCILLATOR_Initialize:	
  6033                           ; 1 bytes @ 0x0
  6034                           
  6035  0070                     ?_TMR2_Initialize:	
  6036                           ; 1 bytes @ 0x0
  6037                           
  6038  0070                     ??_TMR2_Initialize:	
  6039                           ; 1 bytes @ 0x0
  6040                           
  6041  0070                     ?_TMR4_Initialize:	
  6042                           ; 1 bytes @ 0x0
  6043                           
  6044  0070                     ??_TMR4_Initialize:	
  6045                           ; 1 bytes @ 0x0
  6046                           
  6047  0070                     ?_main:	
  6048                           ; 1 bytes @ 0x0
  6049                           
  6050  0070                     ?_ADC_Initialize:	
  6051                           ; 1 bytes @ 0x0
  6052                           
  6053  0070                     ??_ADC_Initialize:	
  6054                           ; 1 bytes @ 0x0
  6055                           
  6056  0070                     ?_Init_Battery_State_Machine:	
  6057                           ; 1 bytes @ 0x0
  6058                           
  6059  0070                     ??_Init_Battery_State_Machine:	
  6060                           ; 1 bytes @ 0x0
  6061                           
  6062  0070                     ?_PIN_MANAGER_Initialize:	
  6063                           ; 1 bytes @ 0x0
  6064                           
  6065  0070                     ??_PIN_MANAGER_Initialize:	
  6066                           ; 1 bytes @ 0x0
  6067                           
  6068  0070                     ?_PWM_Initialize:	
  6069                           ; 1 bytes @ 0x0
  6070                           
  6071  0070                     ??_PWM_Initialize:	
  6072                           ; 1 bytes @ 0x0
  6073                           
  6074  0070                     ?_ADCRead:	
  6075                           ; 1 bytes @ 0x0
  6076                           
  6077  0070                     ?___awdiv:	
  6078                           ; 2 bytes @ 0x0
  6079                           
  6080  0070                     ?___lwmod:	
  6081                           ; 2 bytes @ 0x0
  6082                           
  6083  0070                     ?___ftpack:	
  6084                           ; 2 bytes @ 0x0
  6085                           
  6086  0070                     ?_frexp:	
  6087                           ; 3 bytes @ 0x0
  6088                           
  6089  0070                     ?___aldiv:	
  6090                           ; 3 bytes @ 0x0
  6091                           
  6092  0070                     LCDWrite@data:	
  6093                           ; 4 bytes @ 0x0
  6094                           
  6095  0070                     PIN_MANAGER_Initialize@state:	
  6096                           ; 1 bytes @ 0x0
  6097                           
  6098  0070                     PWM6_LoadDutyValue@dutyCycle6:	
  6099                           ; 1 bytes @ 0x0
  6100                           
  6101  0070                     PWM7_LoadDutyValue@dutyCycle7:	
  6102                           ; 2 bytes @ 0x0
  6103                           
  6104  0070                     PWM1_LoadDutyValue@dutyCycle1:	
  6105                           ; 2 bytes @ 0x0
  6106                           
  6107  0070                     ___awdiv@divisor:	
  6108                           ; 2 bytes @ 0x0
  6109                           
  6110  0070                     ___lwmod@divisor:	
  6111                           ; 2 bytes @ 0x0
  6112                           
  6113  0070                     ___ftpack@arg:	
  6114                           ; 2 bytes @ 0x0
  6115                           
  6116  0070                     ___ftge@ff1:	
  6117                           ; 3 bytes @ 0x0
  6118                           
  6119  0070                     frexp@value:	
  6120                           ; 3 bytes @ 0x0
  6121                           
  6122  0070                     ___aldiv@divisor:	
  6123                           ; 3 bytes @ 0x0
  6124                           
  6125                           
  6126                           ; 4 bytes @ 0x0
  6127  0070                     	ds	1
  6128  0071                     ??_LCDWrite:	
  6129                           
  6130                           ; 1 bytes @ 0x1
  6131  0071                     	ds	1
  6132  0072                     ??_PWM1_LoadDutyValue:	
  6133  0072                     ??_PWM6_LoadDutyValue:	
  6134                           ; 1 bytes @ 0x2
  6135                           
  6136  0072                     ??_PWM7_LoadDutyValue:	
  6137                           ; 1 bytes @ 0x2
  6138                           
  6139  0072                     LCDWrite@data_or_command:	
  6140                           ; 1 bytes @ 0x2
  6141                           
  6142  0072                     ___awdiv@dividend:	
  6143                           ; 1 bytes @ 0x2
  6144                           
  6145  0072                     ___lwmod@dividend:	
  6146                           ; 2 bytes @ 0x2
  6147                           
  6148                           
  6149                           ; 2 bytes @ 0x2
  6150  0072                     	ds	1
  6151  0073                     ??_ADCRead:	
  6152  0073                     ADCRead@channel:	
  6153                           ; 1 bytes @ 0x3
  6154                           
  6155  0073                     LCDWrite@d:	
  6156                           ; 1 bytes @ 0x3
  6157                           
  6158  0073                     ___ftpack@exp:	
  6159                           ; 1 bytes @ 0x3
  6160                           
  6161  0073                     frexp@eptr:	
  6162                           ; 1 bytes @ 0x3
  6163                           
  6164  0073                     ___ftge@ff2:	
  6165                           ; 1 bytes @ 0x3
  6166                           
  6167                           
  6168                           ; 3 bytes @ 0x3
  6169  0073                     	ds	1
  6170  0074                     ??_readButton:	
  6171  0074                     ??_frexp:	
  6172                           ; 1 bytes @ 0x4
  6173                           
  6174  0074                     ??___awdiv:	
  6175                           ; 1 bytes @ 0x4
  6176                           
  6177  0074                     ??___lwmod:	
  6178                           ; 1 bytes @ 0x4
  6179                           
  6180  0074                     LCDWrite@i:	
  6181                           ; 1 bytes @ 0x4
  6182                           
  6183  0074                     ___ftpack@sign:	
  6184                           ; 1 bytes @ 0x4
  6185                           
  6186  0074                     ___aldiv@dividend:	
  6187                           ; 1 bytes @ 0x4
  6188                           
  6189                           
  6190                           ; 4 bytes @ 0x4
  6191  0074                     	ds	1
  6192  0075                     ??_LCDInit:	
  6193  0075                     ?_gotoXY:	
  6194                           ; 1 bytes @ 0x5
  6195                           
  6196  0075                     ??___ftpack:	
  6197                           ; 1 bytes @ 0x5
  6198                           
  6199  0075                     gotoXY@y:	
  6200                           ; 1 bytes @ 0x5
  6201                           
  6202  0075                     ___awdiv@counter:	
  6203                           ; 1 bytes @ 0x5
  6204                           
  6205  0075                     ___lwmod@counter:	
  6206                           ; 1 bytes @ 0x5
  6207                           
  6208                           
  6209                           ; 1 bytes @ 0x5
  6210  0075                     	ds	1
  6211  0076                     ??_gotoXY:	
  6212  0076                     ??___ftge:	
  6213                           ; 1 bytes @ 0x6
  6214                           
  6215  0076                     ___awdiv@sign:	
  6216                           ; 1 bytes @ 0x6
  6217                           
  6218                           
  6219                           ; 1 bytes @ 0x6
  6220  0076                     	ds	1
  6221  0077                     gotoXY@x:	
  6222  0077                     ___awdiv@quotient:	
  6223                           ; 1 bytes @ 0x7
  6224                           
  6225                           
  6226                           ; 2 bytes @ 0x7
  6227  0077                     	ds	1
  6228  0078                     ??_LCDClear:	
  6229  0078                     ??___aldiv:	
  6230                           ; 1 bytes @ 0x8
  6231                           
  6232  0078                     ?___awtoft:	
  6233                           ; 1 bytes @ 0x8
  6234                           
  6235  0078                     ___awtoft@c:	
  6236                           ; 3 bytes @ 0x8
  6237                           
  6238                           
  6239                           ; 2 bytes @ 0x8
  6240  0078                     	ds	1
  6241  0079                     ?___wmul:	
  6242  0079                     LCDClear@index:	
  6243                           ; 2 bytes @ 0x9
  6244                           
  6245  0079                     ___wmul@multiplier:	
  6246                           ; 2 bytes @ 0x9
  6247                           
  6248                           
  6249                           ; 2 bytes @ 0x9
  6250  0079                     	ds	2
  6251  007B                     ??_SYSTEM_Initialize:	
  6252  007B                     ??___awtoft:	
  6253                           ; 1 bytes @ 0xB
  6254                           
  6255  007B                     ___wmul@multiplicand:	
  6256                           ; 1 bytes @ 0xB
  6257                           
  6258                           
  6259                           ; 2 bytes @ 0xB
  6260  007B                     	ds	2
  6261  007D                     ??_LCDWriteString:	
  6262  007D                     ??___wmul:	
  6263                           ; 1 bytes @ 0xD
  6264                           
  6265  007D                     ___awtoft@sign:	
  6266                           ; 1 bytes @ 0xD
  6267                           
  6268                           
  6269                           ; 1 bytes @ 0xD
  6270  007D                     	ds	1
  6271  007E                     ??_tempCalc:	
  6272  007E                     ??_eval_poly:	
  6273                           ; 1 bytes @ 0xE
  6274                           
  6275  007E                     ??___ftsub:	
  6276                           ; 1 bytes @ 0xE
  6277                           
  6278                           
  6279                           	psect	cstackBANK0
  6280  0020                     __pcstackBANK0:	
  6281                           ; 1 bytes @ 0xE
  6282                           
  6283  0020                     ?___ftdiv:	
  6284  0020                     ___aldiv@counter:	
  6285                           ; 3 bytes @ 0x0
  6286                           
  6287  0020                     ___wmul@product:	
  6288                           ; 1 bytes @ 0x0
  6289                           
  6290  0020                     ___ftdiv@f2:	
  6291                           ; 2 bytes @ 0x0
  6292                           
  6293                           
  6294                           ; 3 bytes @ 0x0
  6295  0020                     	ds	1
  6296  0021                     ___aldiv@sign:	
  6297                           
  6298                           ; 1 bytes @ 0x1
  6299  0021                     	ds	1
  6300  0022                     ??_LCDWriteCharacter:	
  6301  0022                     ___aldiv@quotient:	
  6302                           ; 1 bytes @ 0x2
  6303                           
  6304                           
  6305                           ; 4 bytes @ 0x2
  6306  0022                     	ds	1
  6307  0023                     ___ftdiv@f1:	
  6308                           
  6309                           ; 3 bytes @ 0x3
  6310  0023                     	ds	2
  6311  0025                     LCDWriteCharacter@character:	
  6312                           
  6313                           ; 1 bytes @ 0x5
  6314  0025                     	ds	1
  6315  0026                     ??___ftdiv:	
  6316  0026                     ?_readAnalog:	
  6317                           ; 1 bytes @ 0x6
  6318                           
  6319  0026                     readAnalog@channel:	
  6320                           ; 2 bytes @ 0x6
  6321                           
  6322  0026                     LCDWriteCharacter@base:	
  6323                           ; 2 bytes @ 0x6
  6324                           
  6325                           
  6326                           ; 2 bytes @ 0x6
  6327  0026                     	ds	2
  6328  0028                     ??_readAnalog:	
  6329  0028                     ?_LCDWriteInt:	
  6330                           ; 1 bytes @ 0x8
  6331                           
  6332  0028                     ?_LCDWriteString:	
  6333                           ; 1 bytes @ 0x8
  6334                           
  6335  0028                     LCDWriteString@characters:	
  6336                           ; 1 bytes @ 0x8
  6337                           
  6338  0028                     LCDWriteInt@value:	
  6339                           ; 2 bytes @ 0x8
  6340                           
  6341                           
  6342                           ; 2 bytes @ 0x8
  6343  0028                     	ds	2
  6344  002A                     ??_Battery_State_Machine:	
  6345  002A                     LCDWriteInt@fieldLength:	
  6346                           ; 1 bytes @ 0xA
  6347                           
  6348  002A                     ___ftdiv@cntr:	
  6349                           ; 1 bytes @ 0xA
  6350                           
  6351                           
  6352                           ; 1 bytes @ 0xA
  6353  002A                     	ds	1
  6354  002B                     LCDWriteInt@numPlaces:	
  6355  002B                     ___ftdiv@f3:	
  6356                           ; 1 bytes @ 0xB
  6357                           
  6358                           
  6359                           ; 3 bytes @ 0xB
  6360  002B                     	ds	1
  6361  002C                     LCDWriteInt@sign:	
  6362                           
  6363                           ; 1 bytes @ 0xC
  6364  002C                     	ds	1
  6365  002D                     ??_LCDWriteInt:	
  6366                           
  6367                           ; 1 bytes @ 0xD
  6368  002D                     	ds	1
  6369  002E                     ___ftdiv@exp:	
  6370                           
  6371                           ; 1 bytes @ 0xE
  6372  002E                     	ds	1
  6373  002F                     ___ftdiv@sign:	
  6374                           
  6375                           ; 1 bytes @ 0xF
  6376  002F                     	ds	1
  6377  0030                     ?___ftmul:	
  6378  0030                     ?___fttol:	
  6379                           ; 3 bytes @ 0x10
  6380                           
  6381  0030                     ___ftmul@f1:	
  6382                           ; 4 bytes @ 0x10
  6383                           
  6384  0030                     ___fttol@f1:	
  6385                           ; 3 bytes @ 0x10
  6386                           
  6387                           
  6388                           ; 3 bytes @ 0x10
  6389  0030                     	ds	1
  6390  0031                     LCDWriteInt@str:	
  6391                           
  6392                           ; 5 bytes @ 0x11
  6393  0031                     	ds	2
  6394  0033                     ___ftmul@f2:	
  6395                           
  6396                           ; 3 bytes @ 0x13
  6397  0033                     	ds	1
  6398  0034                     ??___fttol:	
  6399                           
  6400                           ; 1 bytes @ 0x14
  6401  0034                     	ds	2
  6402  0036                     ??___ftmul:	
  6403  0036                     LCDWriteInt@j:	
  6404                           ; 1 bytes @ 0x16
  6405                           
  6406                           
  6407                           ; 1 bytes @ 0x16
  6408  0036                     	ds	1
  6409  0037                     LCDWriteInt@i:	
  6410                           
  6411                           ; 1 bytes @ 0x17
  6412  0037                     	ds	1
  6413  0038                     ___fttol@sign1:	
  6414                           
  6415                           ; 1 bytes @ 0x18
  6416  0038                     	ds	1
  6417  0039                     ___fttol@lval:	
  6418                           
  6419                           ; 4 bytes @ 0x19
  6420  0039                     	ds	1
  6421  003A                     ___ftmul@exp:	
  6422  003A                     readAnalog@analog_channel:	
  6423                           ; 1 bytes @ 0x1A
  6424                           
  6425                           
  6426                           ; 2 bytes @ 0x1A
  6427  003A                     	ds	1
  6428  003B                     ___ftmul@f3_as_product:	
  6429                           
  6430                           ; 3 bytes @ 0x1B
  6431  003B                     	ds	1
  6432  003C                     readAnalog@value:	
  6433                           
  6434                           ; 2 bytes @ 0x1C
  6435  003C                     	ds	1
  6436  003D                     ___fttol@exp1:	
  6437                           
  6438                           ; 1 bytes @ 0x1D
  6439  003D                     	ds	1
  6440  003E                     ??_calculateCurrent0:	
  6441  003E                     ??_calculateCurrent1:	
  6442                           ; 1 bytes @ 0x1E
  6443                           
  6444  003E                     ___ftmul@cntr:	
  6445                           ; 1 bytes @ 0x1E
  6446                           
  6447                           
  6448                           ; 1 bytes @ 0x1E
  6449  003E                     	ds	1
  6450  003F                     ___ftmul@sign:	
  6451                           
  6452                           ; 1 bytes @ 0x1F
  6453  003F                     	ds	1
  6454  0040                     ?___ftadd:	
  6455  0040                     ___ftadd@f1:	
  6456                           ; 3 bytes @ 0x20
  6457                           
  6458                           
  6459                           ; 3 bytes @ 0x20
  6460  0040                     	ds	3
  6461  0043                     ___ftadd@f2:	
  6462                           
  6463                           ; 3 bytes @ 0x23
  6464  0043                     	ds	3
  6465  0046                     ??___ftadd:	
  6466                           
  6467                           ; 1 bytes @ 0x26
  6468  0046                     	ds	4
  6469  004A                     ___ftadd@sign:	
  6470                           
  6471                           ; 1 bytes @ 0x2A
  6472  004A                     	ds	1
  6473  004B                     ___ftadd@exp2:	
  6474                           
  6475                           ; 1 bytes @ 0x2B
  6476  004B                     	ds	1
  6477  004C                     ___ftadd@exp1:	
  6478                           
  6479                           ; 1 bytes @ 0x2C
  6480  004C                     	ds	1
  6481  004D                     ?_eval_poly:	
  6482  004D                     ?___ftsub:	
  6483                           ; 3 bytes @ 0x2D
  6484                           
  6485  004D                     ___ftsub@f2:	
  6486                           ; 3 bytes @ 0x2D
  6487                           
  6488  004D                     eval_poly@x:	
  6489                           ; 3 bytes @ 0x2D
  6490                           
  6491                           
  6492                           ; 3 bytes @ 0x2D
  6493  004D                     	ds	3
  6494  0050                     eval_poly@d:	
  6495  0050                     ___ftsub@f1:	
  6496                           ; 2 bytes @ 0x30
  6497                           
  6498                           
  6499                           ; 3 bytes @ 0x30
  6500  0050                     	ds	2
  6501  0052                     eval_poly@n:	
  6502                           
  6503                           ; 2 bytes @ 0x32
  6504  0052                     	ds	2
  6505  0054                     eval_poly@res:	
  6506                           
  6507                           ; 3 bytes @ 0x34
  6508  0054                     	ds	3
  6509  0057                     ?_log:	
  6510  0057                     log@x:	
  6511                           ; 3 bytes @ 0x37
  6512                           
  6513                           
  6514                           ; 3 bytes @ 0x37
  6515  0057                     	ds	3
  6516  005A                     ??_log:	
  6517                           
  6518                           ; 1 bytes @ 0x3A
  6519  005A                     	ds	1
  6520  005B                     log@exponent:	
  6521                           
  6522                           ; 2 bytes @ 0x3B
  6523  005B                     	ds	2
  6524  005D                     ?_tempCalc:	
  6525  005D                     tempCalc@analogValue:	
  6526                           ; 2 bytes @ 0x3D
  6527                           
  6528                           
  6529                           ; 2 bytes @ 0x3D
  6530  005D                     	ds	2
  6531  005F                     tempCalc@R:	
  6532                           
  6533                           ; 3 bytes @ 0x3F
  6534  005F                     	ds	3
  6535  0062                     _tempCalc$1299:	
  6536                           
  6537                           ; 3 bytes @ 0x42
  6538  0062                     	ds	3
  6539  0065                     tempCalc@steinhart:	
  6540                           
  6541                           ; 3 bytes @ 0x45
  6542  0065                     	ds	3
  6543  0068                     ??_main:	
  6544                           
  6545                           ; 1 bytes @ 0x48
  6546  0068                     	ds	4
  6547                           
  6548                           	psect	maintext
  6549  0284                     __pmaintext:	
  6550 ;;
  6551 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  6552 ;;
  6553 ;; *************** function _main *****************
  6554 ;; Defined at:
  6555 ;;		line 41 in file "main.c"
  6556 ;; Parameters:    Size  Location     Type
  6557 ;;		None
  6558 ;; Auto vars:     Size  Location     Type
  6559 ;;  efficiency      3   21[BANK1 ] float 
  6560 ;;  dutyCycle6      2   34[BANK1 ] unsigned int 
  6561 ;;  MPPT0           2   31[BANK1 ] int 
  6562 ;;  dutyCycle1      2   29[BANK1 ] unsigned int 
  6563 ;;  dutyCycle7      2   27[BANK1 ] unsigned int 
  6564 ;;  IOutTotal       2   24[BANK1 ] int 
  6565 ;;  faultNotRese    2    9[BANK1 ] unsigned int 
  6566 ;;  faultCount      2    7[BANK1 ] unsigned int 
  6567 ;;  MPPT1           2    5[BANK1 ] int 
  6568 ;;  batteryTemp     2    3[BANK1 ] int 
  6569 ;;  j               1   33[BANK1 ] unsigned char 
  6570 ;;  menuButton      1   26[BANK1 ] unsigned char 
  6571 ;;  displayRefre    1   20[BANK1 ] unsigned char 
  6572 ;;  slowLoop        1   19[BANK1 ] unsigned char 
  6573 ;;  fastLoop        1   18[BANK1 ] unsigned char 
  6574 ;; Return value:  Size  Location     Type
  6575 ;;                  1    wreg      void 
  6576 ;; Registers used:
  6577 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6578 ;; Tracked objects:
  6579 ;;		On entry : B1F/0
  6580 ;;		On exit  : 0/0
  6581 ;;		Unchanged: 0/0
  6582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6584 ;;      Locals:         0       0      36       0       0       0       0       0       0       0       0       0       
      +0       0
  6585 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6586 ;;      Totals:         0       4      36       0       0       0       0       0       0       0       0       0       
      +0       0
  6587 ;;Total ram usage:       40 bytes
  6588 ;; Hardware stack levels required when called:    5
  6589 ;; This function calls:
  6590 ;;		_ADCRead
  6591 ;;		_Battery_State_Machine
  6592 ;;		_LCDClear
  6593 ;;		_LCDInit
  6594 ;;		_LCDWriteCharacter
  6595 ;;		_LCDWriteInt
  6596 ;;		_PWM1_LoadDutyValue
  6597 ;;		_PWM6_LoadDutyValue
  6598 ;;		_PWM7_LoadDutyValue
  6599 ;;		_SYSTEM_Initialize
  6600 ;;		___awdiv
  6601 ;;		___awtoft
  6602 ;;		___ftdiv
  6603 ;;		___ftmul
  6604 ;;		___fttol
  6605 ;;		___wmul
  6606 ;;		_calculateCurrent0
  6607 ;;		_calculateCurrent1
  6608 ;;		_cc_cv_mode
  6609 ;;		_gotoXY
  6610 ;;		_readAnalog
  6611 ;;		_readButton
  6612 ;;		_tempCalc
  6613 ;; This function is called by:
  6614 ;;		Startup code after reset
  6615 ;; This function uses a non-reentrant model
  6616 ;;
  6617                           
  6618                           
  6619                           ;psect for function _main
  6620  0284                     _main:	
  6621                           
  6622                           ;main.c: 43: int16_t MPPT0 = 3144;
  6623                           
  6624                           ;incstack = 0
  6625                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6626  0284  3048               	movlw	72
  6627  0285  0021               	movlb	1	; select bank1
  6628  0286  00BF               	movwf	main@MPPT0^(0+128)
  6629  0287  300C               	movlw	12
  6630  0288  00C0               	movwf	(main@MPPT0^(0+128)+1)
  6631                           
  6632                           ;main.c: 44: int16_t MPPT1 = 3144;
  6633  0289  3048               	movlw	72
  6634  028A  00A5               	movwf	main@MPPT1^(0+128)
  6635  028B  300C               	movlw	12
  6636  028C  00A6               	movwf	(main@MPPT1^(0+128)+1)
  6637                           
  6638                           ;main.c: 46: uint16_t dutyCycle6 = 1023;
  6639  028D  30FF               	movlw	255
  6640  028E  00C2               	movwf	main@dutyCycle6^(0+128)
  6641  028F  3003               	movlw	3
  6642  0290  00C3               	movwf	(main@dutyCycle6^(0+128)+1)
  6643                           
  6644                           ;main.c: 47: uint16_t dutyCycle7 = 256;
  6645  0291  3000               	movlw	0
  6646  0292  00BB               	movwf	main@dutyCycle7^(0+128)
  6647  0293  3001               	movlw	1
  6648  0294  00BC               	movwf	(main@dutyCycle7^(0+128)+1)
  6649                           
  6650                           ;main.c: 48: uint16_t dutyCycle1 = 60;
  6651  0295  303C               	movlw	60
  6652  0296  00BD               	movwf	main@dutyCycle1^(0+128)
  6653  0297  3000               	movlw	0
  6654  0298  00BE               	movwf	(main@dutyCycle1^(0+128)+1)
  6655                           
  6656                           ;main.c: 49: int16_t IOutTotal = 0;
  6657  0299  01B8               	clrf	main@IOutTotal^(0+128)
  6658  029A  01B9               	clrf	(main@IOutTotal+1)^(0+128)
  6659                           
  6660                           ;main.c: 51: uint8_t j = 0;
  6661  029B  01C1               	clrf	main@j^(0+128)
  6662                           
  6663                           ;main.c: 53: uint8_t fastLoop = 0;
  6664  029C  01B2               	clrf	main@fastLoop^(0+128)
  6665                           
  6666                           ;main.c: 54: uint8_t slowLoop = 200;
  6667  029D  30C8               	movlw	200
  6668  029E  0020               	movlb	0	; select bank0
  6669  029F  00E8               	movwf	??_main
  6670  02A0  0868               	movf	??_main,w
  6671  02A1  0021               	movlb	1	; select bank1
  6672  02A2  00B3               	movwf	main@slowLoop^(0+128)
  6673                           
  6674                           ;main.c: 55: uint8_t displayRefresh = 0;
  6675  02A3  01B4               	clrf	main@displayRefresh^(0+128)
  6676                           
  6677                           ;main.c: 56: int16_t batteryTemp = 250;
  6678  02A4  30FA               	movlw	250
  6679  02A5  00A3               	movwf	main@batteryTemp^(0+128)
  6680  02A6  3000               	movlw	0
  6681  02A7  00A4               	movwf	(main@batteryTemp^(0+128)+1)
  6682                           
  6683                           ;main.c: 57: float efficiency = 0;
  6684  02A8  3000               	movlw	0
  6685  02A9  00B5               	movwf	main@efficiency^(0+128)
  6686  02AA  3000               	movlw	0
  6687  02AB  00B6               	movwf	(main@efficiency+1)^(0+128)
  6688  02AC  3000               	movlw	0
  6689  02AD  00B7               	movwf	(main@efficiency+2)^(0+128)
  6690                           
  6691                           ;main.c: 58: extern int8_t Imode0;
  6692                           ;main.c: 59: extern int16_t Vref;
  6693                           ;main.c: 60: extern int16_t Iref;
  6694                           ;main.c: 61: uint8_t menuButton = 0;
  6695  02AE  01BA               	clrf	main@menuButton^(0+128)
  6696                           
  6697                           ;main.c: 62: uint16_t faultCount = 0;
  6698  02AF  01A7               	clrf	main@faultCount^(0+128)
  6699  02B0  01A8               	clrf	(main@faultCount+1)^(0+128)
  6700                           
  6701                           ;main.c: 63: uint16_t faultNotReset = 0;
  6702  02B1  01A9               	clrf	main@faultNotReset^(0+128)
  6703  02B2  01AA               	clrf	(main@faultNotReset+1)^(0+128)
  6704                           
  6705                           ;main.c: 64: extern int8_t VHoldMode;
  6706                           ;main.c: 67: SYSTEM_Initialize();
  6707  02B3  3195  2554  3182   	fcall	_SYSTEM_Initialize
  6708                           
  6709                           ;main.c: 69: LCDClear();
  6710  02B6  3195  252E  3182   	fcall	_LCDClear
  6711  02B9                     l4158:	
  6712                           ;main.c: 71: void calculateCurrent0(void);
  6713                           ;main.c: 72: void calculateCurrent1(void);
  6714                           ;main.c: 88: while (1)
  6715                           
  6716                           
  6717                           ;main.c: 89: {
  6718                           ;main.c: 90: if(!(RB2))
  6719  02B9  0020               	movlb	0	; select bank0
  6720  02BA  190D               	btfsc	13,2	;volatile
  6721  02BB  2ACD               	goto	l4166
  6722                           
  6723                           ;main.c: 91: {
  6724                           ;main.c: 92: LATA5=0;
  6725  02BC  1296               	bcf	22,5	;volatile
  6726                           
  6727                           ;main.c: 93: _delay((unsigned long)((400)*(32000000/4000000.0)));
  6728  02BD  3005               	movlw	5
  6729  02BE  0020               	movlb	0	; select bank0
  6730  02BF  00E8               	movwf	??_main
  6731  02C0  3026               	movlw	38
  6732  02C1                     u5437:	
  6733  02C1  0B89               	decfsz	9,f
  6734  02C2  2AC1               	goto	u5437
  6735  02C3  0BE8               	decfsz	??_main,f
  6736  02C4  2AC1               	goto	u5437
  6737  02C5  0000               	nop
  6738                           
  6739                           ;main.c: 94: faultCount+=1;
  6740  02C6  3001               	movlw	1
  6741  02C7  0021               	movlb	1	; select bank1
  6742  02C8  07A7               	addwf	main@faultCount^(0+128),f
  6743  02C9  3000               	movlw	0
  6744  02CA  3DA8               	addwfc	(main@faultCount+1)^(0+128),f
  6745                           
  6746                           ;main.c: 95: LATA5=1;
  6747  02CB  0020               	movlb	0	; select bank0
  6748  02CC  1696               	bsf	22,5	;volatile
  6749  02CD                     l4166:	
  6750                           
  6751                           ;main.c: 96: }
  6752                           ;main.c: 97: for(j=0;j<8;j++) analogs[j]=readAnalog(j);
  6753  02CD  0021               	movlb	1	; select bank1
  6754  02CE  01C1               	clrf	main@j^(0+128)
  6755  02CF  3008               	movlw	8
  6756  02D0  0241               	subwf	main@j^(0+128),w
  6757  02D1  1803               	btfsc	3,0
  6758  02D2  2AF2               	goto	l64
  6759  02D3                     l4172:	
  6760  02D3  0841               	movf	main@j^(0+128),w
  6761  02D4  0020               	movlb	0	; select bank0
  6762  02D5  00E8               	movwf	??_main
  6763  02D6  01E9               	clrf	??_main+1
  6764  02D7  0868               	movf	??_main,w
  6765  02D8  00A6               	movwf	readAnalog@channel
  6766  02D9  0869               	movf	??_main+1,w
  6767  02DA  00A7               	movwf	readAnalog@channel+1
  6768  02DB  3181  2138  3182   	fcall	_readAnalog
  6769  02DE  0021               	movlb	1	; select bank1
  6770  02DF  3541               	lslf	main@j^(0+128),w
  6771  02E0  3E40               	addlw	(low (_analogs| (0+256)))& (0+255)
  6772  02E1  0086               	movwf	6
  6773  02E2  3001               	movlw	1	; select bank2/3
  6774  02E3  0087               	movwf	7
  6775  02E4  0020               	movlb	0	; select bank0
  6776  02E5  0826               	movf	?_readAnalog,w
  6777  02E6  3FC0               	movwi [0]fsr1
  6778  02E7  0827               	movf	?_readAnalog+1,w
  6779  02E8  3FC1               	movwi [1]fsr1
  6780  02E9  3001               	movlw	1
  6781  02EA  00E8               	movwf	??_main
  6782  02EB  0868               	movf	??_main,w
  6783  02EC  0021               	movlb	1	; select bank1
  6784  02ED  07C1               	addwf	main@j^(0+128),f
  6785  02EE  3008               	movlw	8
  6786  02EF  0241               	subwf	main@j^(0+128),w
  6787  02F0  1C03               	skipc
  6788  02F1  2AD3               	goto	l4172
  6789  02F2                     l64:	
  6790                           
  6791                           ;main.c: 99: if(!(RB2))faultNotReset+=1;
  6792  02F2  0020               	movlb	0	; select bank0
  6793  02F3  190D               	btfsc	13,2	;volatile
  6794  02F4  2AFA               	goto	l4180
  6795  02F5  3001               	movlw	1
  6796  02F6  0021               	movlb	1	; select bank1
  6797  02F7  07A9               	addwf	main@faultNotReset^(0+128),f
  6798  02F8  3000               	movlw	0
  6799  02F9  3DAA               	addwfc	(main@faultNotReset+1)^(0+128),f
  6800  02FA                     l4180:	
  6801                           
  6802                           ;main.c: 101: voltage[0]=(int16_t)(analogs[0]/.20885);
  6803  02FA  0022               	movlb	2	; select bank2
  6804  02FB  0841               	movf	(_analogs+1)^(0+256),w
  6805  02FC  00F9               	movwf	___awtoft@c+1
  6806  02FD  0840               	movf	_analogs^(0+256),w
  6807  02FE  00F8               	movwf	___awtoft@c
  6808  02FF  3194  24E9  3182   	fcall	___awtoft
  6809  0302  0878               	movf	?___awtoft,w
  6810  0303  0020               	movlb	0	; select bank0
  6811  0304  00A3               	movwf	___ftdiv@f1
  6812  0305  0879               	movf	?___awtoft+1,w
  6813  0306  00A4               	movwf	___ftdiv@f1+1
  6814  0307  087A               	movf	?___awtoft+2,w
  6815  0308  00A5               	movwf	___ftdiv@f1+2
  6816  0309  30DD               	movlw	221
  6817  030A  00A0               	movwf	___ftdiv@f2
  6818  030B  3055               	movlw	85
  6819  030C  00A1               	movwf	___ftdiv@f2+1
  6820  030D  303E               	movlw	62
  6821  030E  00A2               	movwf	___ftdiv@f2+2
  6822  030F  318C  2444  3182   	fcall	___ftdiv
  6823  0312  0020               	movlb	0	; select bank0
  6824  0313  0820               	movf	?___ftdiv,w
  6825  0314  00B0               	movwf	___fttol@f1
  6826  0315  0821               	movf	?___ftdiv+1,w
  6827  0316  00B1               	movwf	___fttol@f1+1
  6828  0317  0822               	movf	?___ftdiv+2,w
  6829  0318  00B2               	movwf	___fttol@f1+2
  6830  0319  318B  2323  3182   	fcall	___fttol
  6831  031C  0020               	movlb	0	; select bank0
  6832  031D  0831               	movf	?___fttol+1,w
  6833  031E  0021               	movlb	1	; select bank1
  6834  031F  00CD               	movwf	(_voltage+1)^(0+128)
  6835  0320  0020               	movlb	0	; select bank0
  6836  0321  0830               	movf	?___fttol,w
  6837  0322  0021               	movlb	1	; select bank1
  6838  0323  00CC               	movwf	_voltage^(0+128)
  6839                           
  6840                           ;main.c: 103: voltage[1]=(int16_t)(analogs[1]/.54503);
  6841  0324  0022               	movlb	2	; select bank2
  6842  0325  0843               	movf	((_analogs+1)^(0+256)+2),w
  6843  0326  00F9               	movwf	___awtoft@c+1
  6844  0327  0842               	movf	(_analogs^(0+256)+2),w
  6845  0328  00F8               	movwf	___awtoft@c
  6846  0329  3194  24E9  3182   	fcall	___awtoft
  6847  032C  0878               	movf	?___awtoft,w
  6848  032D  0020               	movlb	0	; select bank0
  6849  032E  00A3               	movwf	___ftdiv@f1
  6850  032F  0879               	movf	?___awtoft+1,w
  6851  0330  00A4               	movwf	___ftdiv@f1+1
  6852  0331  087A               	movf	?___awtoft+2,w
  6853  0332  00A5               	movwf	___ftdiv@f1+2
  6854  0333  3087               	movlw	135
  6855  0334  00A0               	movwf	___ftdiv@f2
  6856  0335  300B               	movlw	11
  6857  0336  00A1               	movwf	___ftdiv@f2+1
  6858  0337  303F               	movlw	63
  6859  0338  00A2               	movwf	___ftdiv@f2+2
  6860  0339  318C  2444  3182   	fcall	___ftdiv
  6861  033C  0020               	movlb	0	; select bank0
  6862  033D  0820               	movf	?___ftdiv,w
  6863  033E  00B0               	movwf	___fttol@f1
  6864  033F  0821               	movf	?___ftdiv+1,w
  6865  0340  00B1               	movwf	___fttol@f1+1
  6866  0341  0822               	movf	?___ftdiv+2,w
  6867  0342  00B2               	movwf	___fttol@f1+2
  6868  0343  318B  2323  3182   	fcall	___fttol
  6869  0346  0020               	movlb	0	; select bank0
  6870  0347  0831               	movf	?___fttol+1,w
  6871  0348  0021               	movlb	1	; select bank1
  6872  0349  00CF               	movwf	((_voltage+1)^(0+128)+2)
  6873  034A  0020               	movlb	0	; select bank0
  6874  034B  0830               	movf	?___fttol,w
  6875  034C  0021               	movlb	1	; select bank1
  6876  034D  00CE               	movwf	(_voltage^(0+128)+2)
  6877                           
  6878                           ;main.c: 109: calculateCurrent0();
  6879  034E  3196  2670  3182   	fcall	_calculateCurrent0
  6880                           
  6881                           ;main.c: 112: calculateCurrent1();
  6882  0351  3196  26B5  3182   	fcall	_calculateCurrent1
  6883                           
  6884                           ;main.c: 116: if(fastLoop>11)
  6885  0354  300C               	movlw	12
  6886  0355  0021               	movlb	1	; select bank1
  6887  0356  0232               	subwf	main@fastLoop^(0+128),w
  6888  0357  1C03               	skipc
  6889  0358  2BEB               	goto	l4244
  6890                           
  6891                           ;main.c: 117: {
  6892                           ;main.c: 118: if(Imode0)
  6893  0359  086F               	movf	_Imode0^(0+128),w
  6894  035A  1903               	btfsc	3,2
  6895  035B  2B6B               	goto	l4204
  6896                           
  6897                           ;main.c: 119: {
  6898                           ;main.c: 120: if(voltage[0]<MPPT0)
  6899  035C  084D               	movf	(_voltage+1)^(0+128),w
  6900  035D  3A80               	xorlw	128
  6901  035E  0020               	movlb	0	; select bank0
  6902  035F  00E8               	movwf	??_main
  6903  0360  0021               	movlb	1	; select bank1
  6904  0361  0840               	movf	(main@MPPT0+1)^(0+128),w
  6905  0362  3A80               	xorlw	128
  6906  0363  0020               	movlb	0	; select bank0
  6907  0364  0268               	subwf	??_main,w
  6908  0365  1D03               	skipz
  6909  0366  2B79               	goto	u5295
  6910  0367  0021               	movlb	1	; select bank1
  6911  0368  083F               	movf	main@MPPT0^(0+128),w
  6912  0369  024C               	subwf	_voltage^(0+128),w
  6913  036A  2B79               	goto	u5295
  6914  036B                     l4204:	
  6915                           ;main.c: 142: }
  6916                           ;main.c: 143: }
  6917                           
  6918                           ;main.c: 140: {
  6919                           
  6920                           ;main.c: 137: }
  6921                           ;main.c: 138: }
  6922                           
  6923                           ;main.c: 135: {
  6924                           
  6925                           ;main.c: 128: {
  6926                           ;main.c: 129: dutyCycle6-=1;
  6927                           
  6928                           ;main.c: 127: else if(dutyCycle6>0)
  6929                           
  6930                           ;main.c: 125: }
  6931                           ;main.c: 126: }
  6932                           
  6933                           ;main.c: 123: {
  6934                           ;main.c: 124: dutyCycle6+=1;
  6935                           
  6936                           ;main.c: 121: {
  6937                           ;main.c: 122: if(dutyCycle6<1023)
  6938                           
  6939                           
  6940                           ;main.c: 144: else
  6941                           ;main.c: 145: {
  6942                           ;main.c: 146: if(voltage[1]>(int16_t)Vref)
  6943  036B  086C               	movf	(_Vref+1)^(0+128),w
  6944  036C  3A80               	xorlw	128
  6945  036D  0020               	movlb	0	; select bank0
  6946  036E  00E8               	movwf	??_main
  6947  036F  0021               	movlb	1	; select bank1
  6948  0370  084F               	movf	((_voltage+1)^(0+128)+2),w
  6949  0371  3A80               	xorlw	128
  6950  0372  0020               	movlb	0	; select bank0
  6951  0373  0268               	subwf	??_main,w
  6952  0374  1D03               	skipz
  6953  0375  2B79               	goto	u5295
  6954  0376  0021               	movlb	1	; select bank1
  6955  0377  084E               	movf	(_voltage^(0+128)+2),w
  6956  0378  026B               	subwf	_Vref^(0+128),w
  6957  0379                     u5295:	
  6958  0379  1803               	skipnc
  6959  037A  2B88               	goto	l4210
  6960                           
  6961                           ;main.c: 147: {
  6962                           ;main.c: 148: if(dutyCycle6<1023) dutyCycle6+=1;
  6963  037B  3003               	movlw	3
  6964  037C  0021               	movlb	1	; select bank1
  6965  037D  0243               	subwf	(main@dutyCycle6+1)^(0+128),w
  6966  037E  30FF               	movlw	255
  6967  037F  1903               	skipnz
  6968  0380  0242               	subwf	main@dutyCycle6^(0+128),w
  6969  0381  1803               	skipnc
  6970  0382  2B91               	goto	l4216
  6971  0383  3001               	movlw	1
  6972  0384  07C2               	addwf	main@dutyCycle6^(0+128),f
  6973  0385  3000               	movlw	0
  6974  0386  3DC3               	addwfc	(main@dutyCycle6+1)^(0+128),f
  6975                           
  6976                           ;main.c: 149: }
  6977  0387  2B91               	goto	l4216
  6978  0388                     l4210:	
  6979                           
  6980                           ;main.c: 150: else
  6981                           ;main.c: 151: {
  6982                           ;main.c: 152: if(dutyCycle6>0) dutyCycle6-=1;;
  6983  0388  0021               	movlb	1	; select bank1
  6984  0389  0842               	movf	main@dutyCycle6^(0+128),w
  6985  038A  0443               	iorwf	(main@dutyCycle6+1)^(0+128),w
  6986  038B  1903               	btfsc	3,2
  6987  038C  2B91               	goto	l4216
  6988  038D  3001               	movlw	1
  6989  038E  02C2               	subwf	main@dutyCycle6^(0+128),f
  6990  038F  3000               	movlw	0
  6991  0390  3BC3               	subwfb	(main@dutyCycle6+1)^(0+128),f
  6992  0391                     l4216:	
  6993                           ;main.c: 159: else
  6994                           ;main.c: 160: {
  6995                           
  6996                           ;main.c: 156: {
  6997                           ;main.c: 158: }
  6998                           
  6999                           
  7000                           ;main.c: 162: }
  7001                           ;main.c: 164: }
  7002                           ;main.c: 165: fastLoop=0;
  7003  0391  01B2               	clrf	main@fastLoop^(0+128)
  7004                           
  7005                           ;main.c: 166: slowLoop+=1;
  7006  0392  3001               	movlw	1
  7007  0393  0020               	movlb	0	; select bank0
  7008  0394  00E8               	movwf	??_main
  7009  0395  0868               	movf	??_main,w
  7010  0396  0021               	movlb	1	; select bank1
  7011  0397  07B3               	addwf	main@slowLoop^(0+128),f
  7012                           
  7013                           ;main.c: 168: PWM1_LoadDutyValue(dutyCycle1);
  7014  0398  083E               	movf	(main@dutyCycle1+1)^(0+128),w
  7015  0399  00F1               	movwf	PWM1_LoadDutyValue@dutyCycle1+1
  7016  039A  083D               	movf	main@dutyCycle1^(0+128),w
  7017  039B  00F0               	movwf	PWM1_LoadDutyValue@dutyCycle1
  7018  039C  3194  2413  3182   	fcall	_PWM1_LoadDutyValue
  7019                           
  7020                           ;main.c: 169: PWM6_LoadDutyValue(dutyCycle6);
  7021  039F  0021               	movlb	1	; select bank1
  7022  03A0  0843               	movf	(main@dutyCycle6+1)^(0+128),w
  7023  03A1  00F1               	movwf	PWM6_LoadDutyValue@dutyCycle6+1
  7024  03A2  0842               	movf	main@dutyCycle6^(0+128),w
  7025  03A3  00F0               	movwf	PWM6_LoadDutyValue@dutyCycle6
  7026  03A4  3194  2429  3182   	fcall	_PWM6_LoadDutyValue
  7027                           
  7028                           ;main.c: 170: PWM7_LoadDutyValue(dutyCycle7);
  7029  03A7  0021               	movlb	1	; select bank1
  7030  03A8  083C               	movf	(main@dutyCycle7+1)^(0+128),w
  7031  03A9  00F1               	movwf	PWM7_LoadDutyValue@dutyCycle7+1
  7032  03AA  083B               	movf	main@dutyCycle7^(0+128),w
  7033  03AB  00F0               	movwf	PWM7_LoadDutyValue@dutyCycle7
  7034  03AC  3194  243F  3182   	fcall	_PWM7_LoadDutyValue
  7035                           
  7036                           ;main.c: 172: menuButton = readButton();
  7037  03AF  318A  22A1  3182   	fcall	_readButton
  7038  03B2  0020               	movlb	0	; select bank0
  7039  03B3  00E8               	movwf	??_main
  7040  03B4  0868               	movf	??_main,w
  7041  03B5  0021               	movlb	1	; select bank1
  7042  03B6  00BA               	movwf	main@menuButton^(0+128)
  7043                           
  7044                           ;main.c: 173: if(menuButton == 2) if(MPPT0>2800)MPPT0-=10;
  7045  03B7  3002               	movlw	2
  7046  03B8  063A               	xorwf	main@menuButton^(0+128),w
  7047  03B9  1D03               	btfss	3,2
  7048  03BA  2BCD               	goto	l4234
  7049  03BB  0840               	movf	(main@MPPT0+1)^(0+128),w
  7050  03BC  3A80               	xorlw	128
  7051  03BD  0020               	movlb	0	; select bank0
  7052  03BE  00E8               	movwf	??_main
  7053  03BF  308A               	movlw	138
  7054  03C0  0268               	subwf	??_main,w
  7055  03C1  1D03               	skipz
  7056  03C2  2BC6               	goto	u5335
  7057  03C3  30F1               	movlw	241
  7058  03C4  0021               	movlb	1	; select bank1
  7059  03C5  023F               	subwf	main@MPPT0^(0+128),w
  7060  03C6                     u5335:	
  7061  03C6  1C03               	skipc
  7062  03C7  2BCD               	goto	l4234
  7063  03C8  30F6               	movlw	246
  7064  03C9  0021               	movlb	1	; select bank1
  7065  03CA  07BF               	addwf	main@MPPT0^(0+128),f
  7066  03CB  30FF               	movlw	255
  7067  03CC  3DC0               	addwfc	(main@MPPT0+1)^(0+128),f
  7068  03CD                     l4234:	
  7069                           
  7070                           ;main.c: 174: if(menuButton == 3)if(MPPT0<3400)MPPT0+=10;
  7071  03CD  3003               	movlw	3
  7072  03CE  0021               	movlb	1	; select bank1
  7073  03CF  063A               	xorwf	main@menuButton^(0+128),w
  7074  03D0  1D03               	btfss	3,2
  7075  03D1  2BE4               	goto	l4240
  7076  03D2  0840               	movf	(main@MPPT0+1)^(0+128),w
  7077  03D3  3A80               	xorlw	128
  7078  03D4  0020               	movlb	0	; select bank0
  7079  03D5  00E8               	movwf	??_main
  7080  03D6  308D               	movlw	141
  7081  03D7  0268               	subwf	??_main,w
  7082  03D8  1D03               	skipz
  7083  03D9  2BDD               	goto	u5355
  7084  03DA  3048               	movlw	72
  7085  03DB  0021               	movlb	1	; select bank1
  7086  03DC  023F               	subwf	main@MPPT0^(0+128),w
  7087  03DD                     u5355:	
  7088  03DD  1803               	skipnc
  7089  03DE  2BE4               	goto	l4240
  7090  03DF  300A               	movlw	10
  7091  03E0  0021               	movlb	1	; select bank1
  7092  03E1  07BF               	addwf	main@MPPT0^(0+128),f
  7093  03E2  3000               	movlw	0
  7094  03E3  3DC0               	addwfc	(main@MPPT0+1)^(0+128),f
  7095  03E4                     l4240:	
  7096                           
  7097                           ;main.c: 175: if(menuButton == 1)LCDInit();
  7098  03E4  0021               	movlb	1	; select bank1
  7099  03E5  033A               	decf	main@menuButton^(0+128),w
  7100  03E6  1D03               	btfss	3,2
  7101  03E7  2BEB               	goto	l4244
  7102  03E8  3195  25BF  3182   	fcall	_LCDInit
  7103  03EB                     l4244:	
  7104                           
  7105                           ;main.c: 176: }
  7106                           ;main.c: 177: fastLoop+=1;
  7107  03EB  3001               	movlw	1
  7108  03EC  0020               	movlb	0	; select bank0
  7109  03ED  00E8               	movwf	??_main
  7110  03EE  0868               	movf	??_main,w
  7111  03EF  0021               	movlb	1	; select bank1
  7112  03F0  07B2               	addwf	main@fastLoop^(0+128),f
  7113                           
  7114                           ;main.c: 179: if(slowLoop>20)
  7115  03F1  3015               	movlw	21
  7116  03F2  0233               	subwf	main@slowLoop^(0+128),w
  7117  03F3  1C03               	skipc
  7118  03F4  2AB9               	goto	l4158
  7119                           
  7120                           ;main.c: 180: {
  7121                           ;main.c: 182: IOutTotal=current[1]+current[3];
  7122  03F5  3006               	movlw	6
  7123  03F6  3EC4               	addlw	(low (_current| 0))& (0+255)
  7124  03F7  0086               	movwf	6
  7125  03F8  0187               	clrf	7
  7126  03F9  3002               	movlw	2
  7127  03FA  3EC4               	addlw	(low (_current| 0))& (0+255)
  7128  03FB  0084               	movwf	4
  7129  03FC  0185               	clrf	5
  7130  03FD  3F40               	moviw [0]fsr1
  7131  03FE  0700               	addwf	0,w
  7132  03FF  00B8               	movwf	main@IOutTotal^(0+128)
  7133  0400  3101               	addfsr 0,1
  7134  0401  3F41               	moviw [1]fsr1
  7135  0402  3D00               	addwfc	0,w
  7136  0403  00B9               	movwf	(main@IOutTotal^(0+128)+1)
  7137                           
  7138                           ;main.c: 184: if(IOutTotal>20)
  7139  0404  0839               	movf	(main@IOutTotal+1)^(0+128),w
  7140  0405  3A80               	xorlw	128
  7141  0406  0020               	movlb	0	; select bank0
  7142  0407  00E8               	movwf	??_main
  7143  0408  3080               	movlw	128
  7144  0409  0268               	subwf	??_main,w
  7145  040A  1D03               	skipz
  7146  040B  2C0F               	goto	u5385
  7147  040C  3015               	movlw	21
  7148  040D  0021               	movlb	1	; select bank1
  7149  040E  0238               	subwf	main@IOutTotal^(0+128),w
  7150  040F                     u5385:	
  7151  040F  1C03               	skipc
  7152  0410  2C36               	goto	l4258
  7153                           
  7154                           ;main.c: 185: {
  7155                           ;main.c: 186: if((uint16_t)IOutTotal/2+10>dutyCycle1)dutyCycle1+=1;else dutyCycle1-=1;
  7156  0411  0021               	movlb	1	; select bank1
  7157  0412  0839               	movf	(main@IOutTotal+1)^(0+128),w
  7158  0413  0020               	movlb	0	; select bank0
  7159  0414  00E9               	movwf	??_main+1
  7160  0415  0021               	movlb	1	; select bank1
  7161  0416  0838               	movf	main@IOutTotal^(0+128),w
  7162  0417  0020               	movlb	0	; select bank0
  7163  0418  00E8               	movwf	??_main
  7164  0419  36E9               	lsrf	??_main+1,f
  7165  041A  0CE8               	rrf	??_main,f
  7166  041B  0868               	movf	??_main,w
  7167  041C  3E0A               	addlw	10
  7168  041D  00EA               	movwf	??_main+2
  7169  041E  3000               	movlw	0
  7170  041F  3D69               	addwfc	??_main+1,w
  7171  0420  00EB               	movwf	??_main+3
  7172  0421  086B               	movf	??_main+3,w
  7173  0422  0021               	movlb	1	; select bank1
  7174  0423  023E               	subwf	(main@dutyCycle1+1)^(0+128),w
  7175  0424  1D03               	skipz
  7176  0425  2C2A               	goto	u5395
  7177  0426  0020               	movlb	0	; select bank0
  7178  0427  086A               	movf	??_main+2,w
  7179  0428  0021               	movlb	1	; select bank1
  7180  0429  023D               	subwf	main@dutyCycle1^(0+128),w
  7181  042A                     u5395:	
  7182  042A  1803               	skipnc
  7183  042B  2C31               	goto	l4256
  7184  042C  3001               	movlw	1
  7185  042D  07BD               	addwf	main@dutyCycle1^(0+128),f
  7186  042E  3000               	movlw	0
  7187  042F  3DBE               	addwfc	(main@dutyCycle1+1)^(0+128),f
  7188  0430  2C39               	goto	l4260
  7189  0431                     l4256:	
  7190  0431  3001               	movlw	1
  7191  0432  02BD               	subwf	main@dutyCycle1^(0+128),f
  7192  0433  3000               	movlw	0
  7193  0434  3BBE               	subwfb	(main@dutyCycle1+1)^(0+128),f
  7194                           
  7195                           ;main.c: 190: }
  7196  0435  2C39               	goto	l4260
  7197  0436                     l4258:	
  7198                           
  7199                           ;main.c: 191: else
  7200                           ;main.c: 192: {
  7201                           ;main.c: 193: dutyCycle1=0;
  7202  0436  0021               	movlb	1	; select bank1
  7203  0437  01BD               	clrf	main@dutyCycle1^(0+128)
  7204  0438  01BE               	clrf	(main@dutyCycle1+1)^(0+128)
  7205  0439                     l4260:	
  7206                           
  7207                           ;main.c: 194: }
  7208                           ;main.c: 195: if(!(RB2))
  7209  0439  0020               	movlb	0	; select bank0
  7210  043A  190D               	btfsc	13,2	;volatile
  7211  043B  2C47               	goto	l4264
  7212                           
  7213                           ;main.c: 196: {
  7214                           ;main.c: 197: dutyCycle1=55;
  7215  043C  3037               	movlw	55
  7216  043D  0021               	movlb	1	; select bank1
  7217  043E  00BD               	movwf	main@dutyCycle1^(0+128)
  7218  043F  3000               	movlw	0
  7219  0440  00BE               	movwf	(main@dutyCycle1^(0+128)+1)
  7220                           
  7221                           ;main.c: 198: battery_state=CHARGE;
  7222  0441  3004               	movlw	4
  7223  0442  0020               	movlb	0	; select bank0
  7224  0443  00E8               	movwf	??_main
  7225  0444  0868               	movf	??_main,w
  7226  0445  0021               	movlb	1	; select bank1
  7227  0446  00ED               	movwf	_battery_state^(0+128)
  7228  0447                     l4264:	
  7229                           
  7230                           ;main.c: 199: }
  7231                           ;main.c: 201: displayRefresh+=1;
  7232  0447  3001               	movlw	1
  7233  0448  0020               	movlb	0	; select bank0
  7234  0449  00E8               	movwf	??_main
  7235  044A  0868               	movf	??_main,w
  7236  044B  0021               	movlb	1	; select bank1
  7237  044C  07B4               	addwf	main@displayRefresh^(0+128),f
  7238                           
  7239                           ;main.c: 202: if(displayRefresh>80)
  7240  044D  3051               	movlw	81
  7241  044E  0234               	subwf	main@displayRefresh^(0+128),w
  7242  044F  1C03               	skipc
  7243  0450  2C6A               	goto	l4274
  7244                           
  7245                           ;main.c: 203: {
  7246                           ;main.c: 204: LCDClear();
  7247  0451  3195  252E  3182   	fcall	_LCDClear
  7248                           
  7249                           ;main.c: 205: displayRefresh=0;
  7250  0454  0021               	movlb	1	; select bank1
  7251  0455  01B4               	clrf	main@displayRefresh^(0+128)
  7252                           
  7253                           ;main.c: 206: batteryTemp=tempCalc(ADCRead(9));
  7254  0456  3009               	movlw	9
  7255  0457  3193  23FE  3182   	fcall	_ADCRead
  7256  045A  0871               	movf	?_ADCRead+1,w
  7257  045B  0020               	movlb	0	; select bank0
  7258  045C  00DE               	movwf	tempCalc@analogValue+1
  7259  045D  0870               	movf	?_ADCRead,w
  7260  045E  00DD               	movwf	tempCalc@analogValue
  7261  045F  3180  201B  3182   	fcall	_tempCalc
  7262  0462  0020               	movlb	0	; select bank0
  7263  0463  085E               	movf	?_tempCalc+1,w
  7264  0464  0021               	movlb	1	; select bank1
  7265  0465  00A4               	movwf	(main@batteryTemp+1)^(0+128)
  7266  0466  0020               	movlb	0	; select bank0
  7267  0467  085D               	movf	?_tempCalc,w
  7268  0468  0021               	movlb	1	; select bank1
  7269  0469  00A3               	movwf	main@batteryTemp^(0+128)
  7270  046A                     l4274:	
  7271                           
  7272                           ;main.c: 207: }
  7273                           ;main.c: 208: Battery_State_Machine();
  7274  046A  318B  23AA  3182   	fcall	_Battery_State_Machine
  7275                           
  7276                           ;main.c: 209: efficiency=(float)voltage[1]/100*current[1]/10;
  7277  046D  0021               	movlb	1	; select bank1
  7278  046E  0847               	movf	((_current+1)^(0+128)+2),w
  7279  046F  00F9               	movwf	___awtoft@c+1
  7280  0470  0846               	movf	(_current^(0+128)+2),w
  7281  0471  00F8               	movwf	___awtoft@c
  7282  0472  3194  24E9  3182   	fcall	___awtoft
  7283  0475  0878               	movf	?___awtoft,w
  7284  0476  0020               	movlb	0	; select bank0
  7285  0477  00B0               	movwf	___ftmul@f1
  7286  0478  0879               	movf	?___awtoft+1,w
  7287  0479  00B1               	movwf	___ftmul@f1+1
  7288  047A  087A               	movf	?___awtoft+2,w
  7289  047B  00B2               	movwf	___ftmul@f1+2
  7290  047C  3000               	movlw	0
  7291  047D  00A0               	movwf	___ftdiv@f2
  7292  047E  30C8               	movlw	200
  7293  047F  00A1               	movwf	___ftdiv@f2+1
  7294  0480  3042               	movlw	66
  7295  0481  00A2               	movwf	___ftdiv@f2+2
  7296  0482  0021               	movlb	1	; select bank1
  7297  0483  084F               	movf	((_voltage+1)^(0+128)+2),w
  7298  0484  00F9               	movwf	___awtoft@c+1
  7299  0485  084E               	movf	(_voltage^(0+128)+2),w
  7300  0486  00F8               	movwf	___awtoft@c
  7301  0487  3194  24E9  3182   	fcall	___awtoft
  7302  048A  0878               	movf	?___awtoft,w
  7303  048B  0020               	movlb	0	; select bank0
  7304  048C  00A3               	movwf	___ftdiv@f1
  7305  048D  0879               	movf	?___awtoft+1,w
  7306  048E  00A4               	movwf	___ftdiv@f1+1
  7307  048F  087A               	movf	?___awtoft+2,w
  7308  0490  00A5               	movwf	___ftdiv@f1+2
  7309  0491  318C  2444  3182   	fcall	___ftdiv
  7310  0494  0020               	movlb	0	; select bank0
  7311  0495  0820               	movf	?___ftdiv,w
  7312  0496  00B3               	movwf	___ftmul@f2
  7313  0497  0821               	movf	?___ftdiv+1,w
  7314  0498  00B4               	movwf	___ftmul@f2+1
  7315  0499  0822               	movf	?___ftdiv+2,w
  7316  049A  00B5               	movwf	___ftmul@f2+2
  7317  049B  318D  259D  3182   	fcall	___ftmul
  7318  049E  0020               	movlb	0	; select bank0
  7319  049F  0830               	movf	?___ftmul,w
  7320  04A0  0021               	movlb	1	; select bank1
  7321  04A1  00AB               	movwf	_main$1295^(0+128)
  7322  04A2  0020               	movlb	0	; select bank0
  7323  04A3  0831               	movf	?___ftmul+1,w
  7324  04A4  0021               	movlb	1	; select bank1
  7325  04A5  00AC               	movwf	(_main$1295+1)^(0+128)
  7326  04A6  0020               	movlb	0	; select bank0
  7327  04A7  0832               	movf	?___ftmul+2,w
  7328  04A8  0021               	movlb	1	; select bank1
  7329  04A9  00AD               	movwf	(_main$1295+2)^(0+128)
  7330                           
  7331                           ;main.c: 209: efficiency=(float)voltage[1]/100*current[1]/10;
  7332  04AA  3000               	movlw	0
  7333  04AB  0020               	movlb	0	; select bank0
  7334  04AC  00A0               	movwf	___ftdiv@f2
  7335  04AD  3020               	movlw	32
  7336  04AE  00A1               	movwf	___ftdiv@f2+1
  7337  04AF  3041               	movlw	65
  7338  04B0  00A2               	movwf	___ftdiv@f2+2
  7339  04B1  0021               	movlb	1	; select bank1
  7340  04B2  082B               	movf	_main$1295^(0+128),w
  7341  04B3  0020               	movlb	0	; select bank0
  7342  04B4  00A3               	movwf	___ftdiv@f1
  7343  04B5  0021               	movlb	1	; select bank1
  7344  04B6  082C               	movf	(_main$1295+1)^(0+128),w
  7345  04B7  0020               	movlb	0	; select bank0
  7346  04B8  00A4               	movwf	___ftdiv@f1+1
  7347  04B9  0021               	movlb	1	; select bank1
  7348  04BA  082D               	movf	(_main$1295+2)^(0+128),w
  7349  04BB  0020               	movlb	0	; select bank0
  7350  04BC  00A5               	movwf	___ftdiv@f1+2
  7351  04BD  318C  2444  3182   	fcall	___ftdiv
  7352  04C0  0020               	movlb	0	; select bank0
  7353  04C1  0820               	movf	?___ftdiv,w
  7354  04C2  0021               	movlb	1	; select bank1
  7355  04C3  00B5               	movwf	main@efficiency^(0+128)
  7356  04C4  0020               	movlb	0	; select bank0
  7357  04C5  0821               	movf	?___ftdiv+1,w
  7358  04C6  0021               	movlb	1	; select bank1
  7359  04C7  00B6               	movwf	(main@efficiency+1)^(0+128)
  7360  04C8  0020               	movlb	0	; select bank0
  7361  04C9  0822               	movf	?___ftdiv+2,w
  7362  04CA  0021               	movlb	1	; select bank1
  7363  04CB  00B7               	movwf	(main@efficiency+2)^(0+128)
  7364                           
  7365                           ;main.c: 210: efficiency/=(float)voltage[0]/100*current[0]/10;
  7366  04CC  084D               	movf	(_voltage+1)^(0+128),w
  7367  04CD  00F9               	movwf	___awtoft@c+1
  7368  04CE  084C               	movf	_voltage^(0+128),w
  7369  04CF  00F8               	movwf	___awtoft@c
  7370  04D0  3194  24E9  3182   	fcall	___awtoft
  7371  04D3  0878               	movf	?___awtoft,w
  7372  04D4  0020               	movlb	0	; select bank0
  7373  04D5  00A3               	movwf	___ftdiv@f1
  7374  04D6  0879               	movf	?___awtoft+1,w
  7375  04D7  00A4               	movwf	___ftdiv@f1+1
  7376  04D8  087A               	movf	?___awtoft+2,w
  7377  04D9  00A5               	movwf	___ftdiv@f1+2
  7378  04DA  3000               	movlw	0
  7379  04DB  00A0               	movwf	___ftdiv@f2
  7380  04DC  30C8               	movlw	200
  7381  04DD  00A1               	movwf	___ftdiv@f2+1
  7382  04DE  3042               	movlw	66
  7383  04DF  00A2               	movwf	___ftdiv@f2+2
  7384  04E0  318C  2444  3182   	fcall	___ftdiv
  7385  04E3  0020               	movlb	0	; select bank0
  7386  04E4  0820               	movf	?___ftdiv,w
  7387  04E5  00B3               	movwf	___ftmul@f2
  7388  04E6  0821               	movf	?___ftdiv+1,w
  7389  04E7  00B4               	movwf	___ftmul@f2+1
  7390  04E8  0822               	movf	?___ftdiv+2,w
  7391  04E9  00B5               	movwf	___ftmul@f2+2
  7392  04EA  0021               	movlb	1	; select bank1
  7393  04EB  0845               	movf	(_current+1)^(0+128),w
  7394  04EC  00F9               	movwf	___awtoft@c+1
  7395  04ED  0844               	movf	_current^(0+128),w
  7396  04EE  00F8               	movwf	___awtoft@c
  7397  04EF  3194  24E9  3182   	fcall	___awtoft
  7398  04F2  0878               	movf	?___awtoft,w
  7399  04F3  0020               	movlb	0	; select bank0
  7400  04F4  00B0               	movwf	___ftmul@f1
  7401  04F5  0879               	movf	?___awtoft+1,w
  7402  04F6  00B1               	movwf	___ftmul@f1+1
  7403  04F7  087A               	movf	?___awtoft+2,w
  7404  04F8  00B2               	movwf	___ftmul@f1+2
  7405  04F9  318D  259D  3182   	fcall	___ftmul
  7406  04FC  0020               	movlb	0	; select bank0
  7407  04FD  0830               	movf	?___ftmul,w
  7408  04FE  0021               	movlb	1	; select bank1
  7409  04FF  00AB               	movwf	_main$1295^(0+128)
  7410  0500  0020               	movlb	0	; select bank0
  7411  0501  0831               	movf	?___ftmul+1,w
  7412  0502  0021               	movlb	1	; select bank1
  7413  0503  00AC               	movwf	(_main$1295+1)^(0+128)
  7414  0504  0020               	movlb	0	; select bank0
  7415  0505  0832               	movf	?___ftmul+2,w
  7416  0506  0021               	movlb	1	; select bank1
  7417  0507  00AD               	movwf	(_main$1295+2)^(0+128)
  7418                           
  7419                           ;main.c: 210: efficiency/=(float)voltage[0]/100*current[0]/10;
  7420  0508  082B               	movf	_main$1295^(0+128),w
  7421  0509  0020               	movlb	0	; select bank0
  7422  050A  00A3               	movwf	___ftdiv@f1
  7423  050B  0021               	movlb	1	; select bank1
  7424  050C  082C               	movf	(_main$1295+1)^(0+128),w
  7425  050D  0020               	movlb	0	; select bank0
  7426  050E  00A4               	movwf	___ftdiv@f1+1
  7427  050F  0021               	movlb	1	; select bank1
  7428  0510  082D               	movf	(_main$1295+2)^(0+128),w
  7429  0511  0020               	movlb	0	; select bank0
  7430  0512  00A5               	movwf	___ftdiv@f1+2
  7431  0513  3000               	movlw	0
  7432  0514  00A0               	movwf	___ftdiv@f2
  7433  0515  3020               	movlw	32
  7434  0516  00A1               	movwf	___ftdiv@f2+1
  7435  0517  3041               	movlw	65
  7436  0518  00A2               	movwf	___ftdiv@f2+2
  7437  0519  318C  2444  3182   	fcall	___ftdiv
  7438  051C  0020               	movlb	0	; select bank0
  7439  051D  0820               	movf	?___ftdiv,w
  7440  051E  0021               	movlb	1	; select bank1
  7441  051F  00A0               	movwf	_main$1302^(0+128)
  7442  0520  0020               	movlb	0	; select bank0
  7443  0521  0821               	movf	?___ftdiv+1,w
  7444  0522  0021               	movlb	1	; select bank1
  7445  0523  00A1               	movwf	(_main$1302+1)^(0+128)
  7446  0524  0020               	movlb	0	; select bank0
  7447  0525  0822               	movf	?___ftdiv+2,w
  7448  0526  0021               	movlb	1	; select bank1
  7449  0527  00A2               	movwf	(_main$1302+2)^(0+128)
  7450                           
  7451                           ;main.c: 210: efficiency/=(float)voltage[0]/100*current[0]/10;
  7452  0528  0820               	movf	_main$1302^(0+128),w
  7453  0529  0020               	movlb	0	; select bank0
  7454  052A  00A0               	movwf	___ftdiv@f2
  7455  052B  0021               	movlb	1	; select bank1
  7456  052C  0821               	movf	(_main$1302+1)^(0+128),w
  7457  052D  0020               	movlb	0	; select bank0
  7458  052E  00A1               	movwf	___ftdiv@f2+1
  7459  052F  0021               	movlb	1	; select bank1
  7460  0530  0822               	movf	(_main$1302+2)^(0+128),w
  7461  0531  0020               	movlb	0	; select bank0
  7462  0532  00A2               	movwf	___ftdiv@f2+2
  7463  0533  0021               	movlb	1	; select bank1
  7464  0534  0835               	movf	main@efficiency^(0+128),w
  7465  0535  0020               	movlb	0	; select bank0
  7466  0536  00A3               	movwf	___ftdiv@f1
  7467  0537  0021               	movlb	1	; select bank1
  7468  0538  0836               	movf	(main@efficiency+1)^(0+128),w
  7469  0539  0020               	movlb	0	; select bank0
  7470  053A  00A4               	movwf	___ftdiv@f1+1
  7471  053B  0021               	movlb	1	; select bank1
  7472  053C  0837               	movf	(main@efficiency+2)^(0+128),w
  7473  053D  0020               	movlb	0	; select bank0
  7474  053E  00A5               	movwf	___ftdiv@f1+2
  7475  053F  318C  2444  3182   	fcall	___ftdiv
  7476  0542  0020               	movlb	0	; select bank0
  7477  0543  0820               	movf	?___ftdiv,w
  7478  0544  0021               	movlb	1	; select bank1
  7479  0545  00B5               	movwf	main@efficiency^(0+128)
  7480  0546  0020               	movlb	0	; select bank0
  7481  0547  0821               	movf	?___ftdiv+1,w
  7482  0548  0021               	movlb	1	; select bank1
  7483  0549  00B6               	movwf	(main@efficiency+1)^(0+128)
  7484  054A  0020               	movlb	0	; select bank0
  7485  054B  0822               	movf	?___ftdiv+2,w
  7486  054C  0021               	movlb	1	; select bank1
  7487  054D  00B7               	movwf	(main@efficiency+2)^(0+128)
  7488                           
  7489                           ;main.c: 211: efficiency*=100;
  7490  054E  3000               	movlw	0
  7491  054F  0020               	movlb	0	; select bank0
  7492  0550  00B0               	movwf	___ftmul@f1
  7493  0551  30C8               	movlw	200
  7494  0552  00B1               	movwf	___ftmul@f1+1
  7495  0553  3042               	movlw	66
  7496  0554  00B2               	movwf	___ftmul@f1+2
  7497  0555  0021               	movlb	1	; select bank1
  7498  0556  0835               	movf	main@efficiency^(0+128),w
  7499  0557  0020               	movlb	0	; select bank0
  7500  0558  00B3               	movwf	___ftmul@f2
  7501  0559  0021               	movlb	1	; select bank1
  7502  055A  0836               	movf	(main@efficiency+1)^(0+128),w
  7503  055B  0020               	movlb	0	; select bank0
  7504  055C  00B4               	movwf	___ftmul@f2+1
  7505  055D  0021               	movlb	1	; select bank1
  7506  055E  0837               	movf	(main@efficiency+2)^(0+128),w
  7507  055F  0020               	movlb	0	; select bank0
  7508  0560  00B5               	movwf	___ftmul@f2+2
  7509  0561  318D  259D  3182   	fcall	___ftmul
  7510  0564  0020               	movlb	0	; select bank0
  7511  0565  0830               	movf	?___ftmul,w
  7512  0566  0021               	movlb	1	; select bank1
  7513  0567  00B5               	movwf	main@efficiency^(0+128)
  7514  0568  0020               	movlb	0	; select bank0
  7515  0569  0831               	movf	?___ftmul+1,w
  7516  056A  0021               	movlb	1	; select bank1
  7517  056B  00B6               	movwf	(main@efficiency+1)^(0+128)
  7518  056C  0020               	movlb	0	; select bank0
  7519  056D  0832               	movf	?___ftmul+2,w
  7520  056E  0021               	movlb	1	; select bank1
  7521  056F  00B7               	movwf	(main@efficiency+2)^(0+128)
  7522                           
  7523                           ;main.c: 226: { gotoXY(0,0); LCDWriteInt(faultCount,5, 0, 0);};
  7524  0570  01F5               	clrf	gotoXY@y
  7525  0571  3000               	movlw	0
  7526  0572  3193  23EB  3182   	fcall	_gotoXY
  7527  0575  0021               	movlb	1	; select bank1
  7528  0576  0828               	movf	(main@faultCount+1)^(0+128),w
  7529  0577  0020               	movlb	0	; select bank0
  7530  0578  00A9               	movwf	LCDWriteInt@value+1
  7531  0579  0021               	movlb	1	; select bank1
  7532  057A  0827               	movf	main@faultCount^(0+128),w
  7533  057B  0020               	movlb	0	; select bank0
  7534  057C  00A8               	movwf	LCDWriteInt@value
  7535  057D  3005               	movlw	5
  7536  057E  00E8               	movwf	??_main
  7537  057F  0868               	movf	??_main,w
  7538  0580  00AA               	movwf	LCDWriteInt@fieldLength
  7539  0581  01AB               	clrf	LCDWriteInt@numPlaces
  7540  0582  01AC               	clrf	LCDWriteInt@sign
  7541  0583  318E  2651  3182   	fcall	_LCDWriteInt
  7542                           
  7543                           ;main.c: 227: { gotoXY(24,0); LCDWriteInt(faultNotReset,5, 0, 0);};
  7544  0586  01F5               	clrf	gotoXY@y
  7545  0587  3018               	movlw	24
  7546  0588  3193  23EB  3182   	fcall	_gotoXY
  7547  058B  0021               	movlb	1	; select bank1
  7548  058C  082A               	movf	(main@faultNotReset+1)^(0+128),w
  7549  058D  0020               	movlb	0	; select bank0
  7550  058E  00A9               	movwf	LCDWriteInt@value+1
  7551  058F  0021               	movlb	1	; select bank1
  7552  0590  0829               	movf	main@faultNotReset^(0+128),w
  7553  0591  0020               	movlb	0	; select bank0
  7554  0592  00A8               	movwf	LCDWriteInt@value
  7555  0593  3005               	movlw	5
  7556  0594  00E8               	movwf	??_main
  7557  0595  0868               	movf	??_main,w
  7558  0596  00AA               	movwf	LCDWriteInt@fieldLength
  7559  0597  01AB               	clrf	LCDWriteInt@numPlaces
  7560  0598  01AC               	clrf	LCDWriteInt@sign
  7561  0599  318E  2651  3182   	fcall	_LCDWriteInt
  7562                           
  7563                           ;main.c: 228: { gotoXY(48,0); LCDWriteInt(VHoldMode,3, 0, 0);};
  7564  059C  01F5               	clrf	gotoXY@y
  7565  059D  3030               	movlw	48
  7566  059E  3193  23EB  3182   	fcall	_gotoXY
  7567  05A1  0021               	movlb	1	; select bank1
  7568  05A2  0862               	movf	_VHoldMode^(0+128),w
  7569  05A3  0020               	movlb	0	; select bank0
  7570  05A4  00A8               	movwf	LCDWriteInt@value
  7571  05A5  01A9               	clrf	LCDWriteInt@value+1
  7572  05A6  1BA8               	btfsc	LCDWriteInt@value,7
  7573  05A7  03A9               	decf	LCDWriteInt@value+1,f
  7574  05A8  3003               	movlw	3
  7575  05A9  00E8               	movwf	??_main
  7576  05AA  0868               	movf	??_main,w
  7577  05AB  00AA               	movwf	LCDWriteInt@fieldLength
  7578  05AC  01AB               	clrf	LCDWriteInt@numPlaces
  7579  05AD  01AC               	clrf	LCDWriteInt@sign
  7580  05AE  318E  2651  3182   	fcall	_LCDWriteInt
  7581                           
  7582                           ;main.c: 231: LCDWriteCharacter(' ');
  7583  05B1  3020               	movlw	32
  7584  05B2  3197  274B  3182   	fcall	_LCDWriteCharacter
  7585                           
  7586                           ;main.c: 235: { gotoXY(0,1); LCDWriteInt(voltage[0],4, 2, 0);};
  7587  05B5  01F5               	clrf	gotoXY@y
  7588  05B6  0AF5               	incf	gotoXY@y,f
  7589  05B7  3000               	movlw	0
  7590  05B8  3193  23EB  3182   	fcall	_gotoXY
  7591  05BB  0021               	movlb	1	; select bank1
  7592  05BC  084D               	movf	(_voltage+1)^(0+128),w
  7593  05BD  0020               	movlb	0	; select bank0
  7594  05BE  00A9               	movwf	LCDWriteInt@value+1
  7595  05BF  0021               	movlb	1	; select bank1
  7596  05C0  084C               	movf	_voltage^(0+128),w
  7597  05C1  0020               	movlb	0	; select bank0
  7598  05C2  00A8               	movwf	LCDWriteInt@value
  7599  05C3  3004               	movlw	4
  7600  05C4  00E8               	movwf	??_main
  7601  05C5  0868               	movf	??_main,w
  7602  05C6  00AA               	movwf	LCDWriteInt@fieldLength
  7603  05C7  3002               	movlw	2
  7604  05C8  00E9               	movwf	??_main+1
  7605  05C9  0869               	movf	??_main+1,w
  7606  05CA  00AB               	movwf	LCDWriteInt@numPlaces
  7607  05CB  01AC               	clrf	LCDWriteInt@sign
  7608  05CC  318E  2651  3182   	fcall	_LCDWriteInt
  7609                           
  7610                           ;main.c: 236: LCDWriteCharacter('V');
  7611  05CF  3056               	movlw	86
  7612  05D0  3197  274B  3182   	fcall	_LCDWriteCharacter
  7613                           
  7614                           ;main.c: 237: { gotoXY(28,1); LCDWriteInt(current[0],3, 1, 0);};
  7615  05D3  01F5               	clrf	gotoXY@y
  7616  05D4  0AF5               	incf	gotoXY@y,f
  7617  05D5  301C               	movlw	28
  7618  05D6  3193  23EB  3182   	fcall	_gotoXY
  7619  05D9  0021               	movlb	1	; select bank1
  7620  05DA  0845               	movf	(_current+1)^(0+128),w
  7621  05DB  0020               	movlb	0	; select bank0
  7622  05DC  00A9               	movwf	LCDWriteInt@value+1
  7623  05DD  0021               	movlb	1	; select bank1
  7624  05DE  0844               	movf	_current^(0+128),w
  7625  05DF  0020               	movlb	0	; select bank0
  7626  05E0  00A8               	movwf	LCDWriteInt@value
  7627  05E1  3003               	movlw	3
  7628  05E2  00E8               	movwf	??_main
  7629  05E3  0868               	movf	??_main,w
  7630  05E4  00AA               	movwf	LCDWriteInt@fieldLength
  7631  05E5  01AB               	clrf	LCDWriteInt@numPlaces
  7632  05E6  0AAB               	incf	LCDWriteInt@numPlaces,f
  7633  05E7  01AC               	clrf	LCDWriteInt@sign
  7634  05E8  318E  2651  3182   	fcall	_LCDWriteInt
  7635                           
  7636                           ;main.c: 238: LCDWriteCharacter('A');
  7637  05EB  3041               	movlw	65
  7638  05EC  3197  274B  3182   	fcall	_LCDWriteCharacter
  7639                           
  7640                           ;main.c: 240: { gotoXY(0,2); LCDWriteInt(voltage[1],4, 2, 0);};
  7641  05EF  3002               	movlw	2
  7642  05F0  0020               	movlb	0	; select bank0
  7643  05F1  00E8               	movwf	??_main
  7644  05F2  0868               	movf	??_main,w
  7645  05F3  00F5               	movwf	gotoXY@y
  7646  05F4  3000               	movlw	0
  7647  05F5  3193  23EB  3182   	fcall	_gotoXY
  7648  05F8  0021               	movlb	1	; select bank1
  7649  05F9  084F               	movf	((_voltage+1)^(0+128)+2),w
  7650  05FA  0020               	movlb	0	; select bank0
  7651  05FB  00A9               	movwf	LCDWriteInt@value+1
  7652  05FC  0021               	movlb	1	; select bank1
  7653  05FD  084E               	movf	(_voltage^(0+128)+2),w
  7654  05FE  0020               	movlb	0	; select bank0
  7655  05FF  00A8               	movwf	LCDWriteInt@value
  7656  0600  3004               	movlw	4
  7657  0601  00E8               	movwf	??_main
  7658  0602  0868               	movf	??_main,w
  7659  0603  00AA               	movwf	LCDWriteInt@fieldLength
  7660  0604  3002               	movlw	2
  7661  0605  00E9               	movwf	??_main+1
  7662  0606  0869               	movf	??_main+1,w
  7663  0607  00AB               	movwf	LCDWriteInt@numPlaces
  7664  0608  01AC               	clrf	LCDWriteInt@sign
  7665  0609  318E  2651  3182   	fcall	_LCDWriteInt
  7666                           
  7667                           ;main.c: 241: LCDWriteCharacter('V');
  7668  060C  3056               	movlw	86
  7669  060D  3197  274B  3182   	fcall	_LCDWriteCharacter
  7670                           
  7671                           ;main.c: 242: { gotoXY(28,2); LCDWriteInt(current[1],3, 1, 0);};
  7672  0610  3002               	movlw	2
  7673  0611  0020               	movlb	0	; select bank0
  7674  0612  00E8               	movwf	??_main
  7675  0613  0868               	movf	??_main,w
  7676  0614  00F5               	movwf	gotoXY@y
  7677  0615  301C               	movlw	28
  7678  0616  3193  23EB  3182   	fcall	_gotoXY
  7679  0619  0021               	movlb	1	; select bank1
  7680  061A  0847               	movf	((_current+1)^(0+128)+2),w
  7681  061B  0020               	movlb	0	; select bank0
  7682  061C  00A9               	movwf	LCDWriteInt@value+1
  7683  061D  0021               	movlb	1	; select bank1
  7684  061E  0846               	movf	(_current^(0+128)+2),w
  7685  061F  0020               	movlb	0	; select bank0
  7686  0620  00A8               	movwf	LCDWriteInt@value
  7687  0621  3003               	movlw	3
  7688  0622  00E8               	movwf	??_main
  7689  0623  0868               	movf	??_main,w
  7690  0624  00AA               	movwf	LCDWriteInt@fieldLength
  7691  0625  01AB               	clrf	LCDWriteInt@numPlaces
  7692  0626  0AAB               	incf	LCDWriteInt@numPlaces,f
  7693  0627  01AC               	clrf	LCDWriteInt@sign
  7694  0628  318E  2651  3182   	fcall	_LCDWriteInt
  7695                           
  7696                           ;main.c: 243: LCDWriteCharacter('A');
  7697  062B  3041               	movlw	65
  7698  062C  3197  274B  3182   	fcall	_LCDWriteCharacter
  7699                           
  7700                           ;main.c: 244: { gotoXY(56,2); LCDWriteInt(Vref,4, 2, 0);};
  7701  062F  3002               	movlw	2
  7702  0630  0020               	movlb	0	; select bank0
  7703  0631  00E8               	movwf	??_main
  7704  0632  0868               	movf	??_main,w
  7705  0633  00F5               	movwf	gotoXY@y
  7706  0634  3038               	movlw	56
  7707  0635  3193  23EB  3182   	fcall	_gotoXY
  7708  0638  0021               	movlb	1	; select bank1
  7709  0639  086C               	movf	(_Vref+1)^(0+128),w
  7710  063A  0020               	movlb	0	; select bank0
  7711  063B  00A9               	movwf	LCDWriteInt@value+1
  7712  063C  0021               	movlb	1	; select bank1
  7713  063D  086B               	movf	_Vref^(0+128),w
  7714  063E  0020               	movlb	0	; select bank0
  7715  063F  00A8               	movwf	LCDWriteInt@value
  7716  0640  3004               	movlw	4
  7717  0641  00E8               	movwf	??_main
  7718  0642  0868               	movf	??_main,w
  7719  0643  00AA               	movwf	LCDWriteInt@fieldLength
  7720  0644  3002               	movlw	2
  7721  0645  00E9               	movwf	??_main+1
  7722  0646  0869               	movf	??_main+1,w
  7723  0647  00AB               	movwf	LCDWriteInt@numPlaces
  7724  0648  01AC               	clrf	LCDWriteInt@sign
  7725  0649  318E  2651  3182   	fcall	_LCDWriteInt
  7726                           
  7727                           ;main.c: 245: LCDWriteCharacter('V');
  7728  064C  3056               	movlw	86
  7729  064D  3197  274B  3182   	fcall	_LCDWriteCharacter
  7730                           
  7731                           ;main.c: 247: { gotoXY(0,3); LCDWriteInt(voltage[0]/100*current[0]/10,3, 0, 0);};
  7732  0650  3003               	movlw	3
  7733  0651  0020               	movlb	0	; select bank0
  7734  0652  00E8               	movwf	??_main
  7735  0653  0868               	movf	??_main,w
  7736  0654  00F5               	movwf	gotoXY@y
  7737  0655  3000               	movlw	0
  7738  0656  3193  23EB  3182   	fcall	_gotoXY
  7739  0659  3064               	movlw	100
  7740  065A  00F0               	movwf	___awdiv@divisor
  7741  065B  3000               	movlw	0
  7742  065C  00F1               	movwf	___awdiv@divisor+1
  7743  065D  0021               	movlb	1	; select bank1
  7744  065E  084D               	movf	(_voltage+1)^(0+128),w
  7745  065F  00F3               	movwf	___awdiv@dividend+1
  7746  0660  084C               	movf	_voltage^(0+128),w
  7747  0661  00F2               	movwf	___awdiv@dividend
  7748  0662  3196  26FA  3182   	fcall	___awdiv
  7749  0665  0871               	movf	?___awdiv+1,w
  7750  0666  00FA               	movwf	___wmul@multiplier+1
  7751  0667  0870               	movf	?___awdiv,w
  7752  0668  00F9               	movwf	___wmul@multiplier
  7753  0669  0021               	movlb	1	; select bank1
  7754  066A  0845               	movf	(_current+1)^(0+128),w
  7755  066B  00FC               	movwf	___wmul@multiplicand+1
  7756  066C  0844               	movf	_current^(0+128),w
  7757  066D  00FB               	movwf	___wmul@multiplicand
  7758  066E  3194  246F  3182   	fcall	___wmul
  7759  0671  087A               	movf	?___wmul+1,w
  7760  0672  0021               	movlb	1	; select bank1
  7761  0673  00AF               	movwf	(_main$1297+1)^(0+128)
  7762  0674  0879               	movf	?___wmul,w
  7763  0675  00AE               	movwf	_main$1297^(0+128)
  7764  0676  300A               	movlw	10
  7765  0677  00F0               	movwf	___awdiv@divisor
  7766  0678  3000               	movlw	0
  7767  0679  00F1               	movwf	___awdiv@divisor+1
  7768  067A  082F               	movf	(_main$1297+1)^(0+128),w
  7769  067B  00F3               	movwf	___awdiv@dividend+1
  7770  067C  082E               	movf	_main$1297^(0+128),w
  7771  067D  00F2               	movwf	___awdiv@dividend
  7772  067E  3196  26FA  3182   	fcall	___awdiv
  7773  0681  0871               	movf	?___awdiv+1,w
  7774  0682  0021               	movlb	1	; select bank1
  7775  0683  00B1               	movwf	(_main$1298+1)^(0+128)
  7776  0684  0870               	movf	?___awdiv,w
  7777  0685  00B0               	movwf	_main$1298^(0+128)
  7778  0686  0831               	movf	(_main$1298+1)^(0+128),w
  7779  0687  0020               	movlb	0	; select bank0
  7780  0688  00A9               	movwf	LCDWriteInt@value+1
  7781  0689  0021               	movlb	1	; select bank1
  7782  068A  0830               	movf	_main$1298^(0+128),w
  7783  068B  0020               	movlb	0	; select bank0
  7784  068C  00A8               	movwf	LCDWriteInt@value
  7785  068D  3003               	movlw	3
  7786  068E  00E8               	movwf	??_main
  7787  068F  0868               	movf	??_main,w
  7788  0690  00AA               	movwf	LCDWriteInt@fieldLength
  7789  0691  01AB               	clrf	LCDWriteInt@numPlaces
  7790  0692  01AC               	clrf	LCDWriteInt@sign
  7791  0693  318E  2651  3182   	fcall	_LCDWriteInt
  7792                           
  7793                           ;main.c: 248: LCDWriteCharacter('W');
  7794  0696  3057               	movlw	87
  7795  0697  3197  274B  3182   	fcall	_LCDWriteCharacter
  7796                           
  7797                           ;main.c: 249: { gotoXY(28,3); LCDWriteInt(battery_state,1, 0, 0);};
  7798  069A  3003               	movlw	3
  7799  069B  0020               	movlb	0	; select bank0
  7800  069C  00E8               	movwf	??_main
  7801  069D  0868               	movf	??_main,w
  7802  069E  00F5               	movwf	gotoXY@y
  7803  069F  301C               	movlw	28
  7804  06A0  3193  23EB  3182   	fcall	_gotoXY
  7805  06A3  0021               	movlb	1	; select bank1
  7806  06A4  086D               	movf	_battery_state^(0+128),w
  7807  06A5  0020               	movlb	0	; select bank0
  7808  06A6  00E8               	movwf	??_main
  7809  06A7  01E9               	clrf	??_main+1
  7810  06A8  0868               	movf	??_main,w
  7811  06A9  00A8               	movwf	LCDWriteInt@value
  7812  06AA  0869               	movf	??_main+1,w
  7813  06AB  00A9               	movwf	LCDWriteInt@value+1
  7814  06AC  01AA               	clrf	LCDWriteInt@fieldLength
  7815  06AD  0AAA               	incf	LCDWriteInt@fieldLength,f
  7816  06AE  01AB               	clrf	LCDWriteInt@numPlaces
  7817  06AF  01AC               	clrf	LCDWriteInt@sign
  7818  06B0  318E  2651  3182   	fcall	_LCDWriteInt
  7819                           
  7820                           ;main.c: 250: { gotoXY(36,3); LCDWriteInt(Imode0,1, 0, 0);};
  7821  06B3  3003               	movlw	3
  7822  06B4  0020               	movlb	0	; select bank0
  7823  06B5  00E8               	movwf	??_main
  7824  06B6  0868               	movf	??_main,w
  7825  06B7  00F5               	movwf	gotoXY@y
  7826  06B8  3024               	movlw	36
  7827  06B9  3193  23EB  3182   	fcall	_gotoXY
  7828  06BC  0021               	movlb	1	; select bank1
  7829  06BD  086F               	movf	_Imode0^(0+128),w
  7830  06BE  0020               	movlb	0	; select bank0
  7831  06BF  00A8               	movwf	LCDWriteInt@value
  7832  06C0  01A9               	clrf	LCDWriteInt@value+1
  7833  06C1  1BA8               	btfsc	LCDWriteInt@value,7
  7834  06C2  03A9               	decf	LCDWriteInt@value+1,f
  7835  06C3  01AA               	clrf	LCDWriteInt@fieldLength
  7836  06C4  0AAA               	incf	LCDWriteInt@fieldLength,f
  7837  06C5  01AB               	clrf	LCDWriteInt@numPlaces
  7838  06C6  01AC               	clrf	LCDWriteInt@sign
  7839  06C7  318E  2651  3182   	fcall	_LCDWriteInt
  7840                           
  7841                           ;main.c: 251: { gotoXY(48,3); LCDWriteInt(Iref,3, 1, 0);};
  7842  06CA  3003               	movlw	3
  7843  06CB  0020               	movlb	0	; select bank0
  7844  06CC  00E8               	movwf	??_main
  7845  06CD  0868               	movf	??_main,w
  7846  06CE  00F5               	movwf	gotoXY@y
  7847  06CF  3030               	movlw	48
  7848  06D0  3193  23EB  3182   	fcall	_gotoXY
  7849  06D3  0021               	movlb	1	; select bank1
  7850  06D4  086A               	movf	(_Iref+1)^(0+128),w
  7851  06D5  0020               	movlb	0	; select bank0
  7852  06D6  00A9               	movwf	LCDWriteInt@value+1
  7853  06D7  0021               	movlb	1	; select bank1
  7854  06D8  0869               	movf	_Iref^(0+128),w
  7855  06D9  0020               	movlb	0	; select bank0
  7856  06DA  00A8               	movwf	LCDWriteInt@value
  7857  06DB  3003               	movlw	3
  7858  06DC  00E8               	movwf	??_main
  7859  06DD  0868               	movf	??_main,w
  7860  06DE  00AA               	movwf	LCDWriteInt@fieldLength
  7861  06DF  01AB               	clrf	LCDWriteInt@numPlaces
  7862  06E0  0AAB               	incf	LCDWriteInt@numPlaces,f
  7863  06E1  01AC               	clrf	LCDWriteInt@sign
  7864  06E2  318E  2651  3182   	fcall	_LCDWriteInt
  7865                           
  7866                           ;main.c: 252: LCDWriteCharacter('A');
  7867  06E5  3041               	movlw	65
  7868  06E6  3197  274B  3182   	fcall	_LCDWriteCharacter
  7869                           
  7870                           ;main.c: 254: { gotoXY(0,4); LCDWriteInt(voltage[1]/100*current[1]/10,3, 0, 0);};
  7871  06E9  3004               	movlw	4
  7872  06EA  0020               	movlb	0	; select bank0
  7873  06EB  00E8               	movwf	??_main
  7874  06EC  0868               	movf	??_main,w
  7875  06ED  00F5               	movwf	gotoXY@y
  7876  06EE  3000               	movlw	0
  7877  06EF  3193  23EB  3182   	fcall	_gotoXY
  7878  06F2  3064               	movlw	100
  7879  06F3  00F0               	movwf	___awdiv@divisor
  7880  06F4  3000               	movlw	0
  7881  06F5  00F1               	movwf	___awdiv@divisor+1
  7882  06F6  0021               	movlb	1	; select bank1
  7883  06F7  084F               	movf	((_voltage+1)^(0+128)+2),w
  7884  06F8  00F3               	movwf	___awdiv@dividend+1
  7885  06F9  084E               	movf	(_voltage^(0+128)+2),w
  7886  06FA  00F2               	movwf	___awdiv@dividend
  7887  06FB  3196  26FA  3182   	fcall	___awdiv
  7888  06FE  0871               	movf	?___awdiv+1,w
  7889  06FF  00FA               	movwf	___wmul@multiplier+1
  7890  0700  0870               	movf	?___awdiv,w
  7891  0701  00F9               	movwf	___wmul@multiplier
  7892  0702  0021               	movlb	1	; select bank1
  7893  0703  0847               	movf	((_current+1)^(0+128)+2),w
  7894  0704  00FC               	movwf	___wmul@multiplicand+1
  7895  0705  0846               	movf	(_current^(0+128)+2),w
  7896  0706  00FB               	movwf	___wmul@multiplicand
  7897  0707  3194  246F  3182   	fcall	___wmul
  7898  070A  087A               	movf	?___wmul+1,w
  7899  070B  0021               	movlb	1	; select bank1
  7900  070C  00AF               	movwf	(_main$1297+1)^(0+128)
  7901  070D  0879               	movf	?___wmul,w
  7902  070E  00AE               	movwf	_main$1297^(0+128)
  7903  070F  300A               	movlw	10
  7904  0710  00F0               	movwf	___awdiv@divisor
  7905  0711  3000               	movlw	0
  7906  0712  00F1               	movwf	___awdiv@divisor+1
  7907  0713  082F               	movf	(_main$1297+1)^(0+128),w
  7908  0714  00F3               	movwf	___awdiv@dividend+1
  7909  0715  082E               	movf	_main$1297^(0+128),w
  7910  0716  00F2               	movwf	___awdiv@dividend
  7911  0717  3196  26FA  3182   	fcall	___awdiv
  7912  071A  0871               	movf	?___awdiv+1,w
  7913  071B  0021               	movlb	1	; select bank1
  7914  071C  00B1               	movwf	(_main$1298+1)^(0+128)
  7915  071D  0870               	movf	?___awdiv,w
  7916  071E  00B0               	movwf	_main$1298^(0+128)
  7917  071F  0831               	movf	(_main$1298+1)^(0+128),w
  7918  0720  0020               	movlb	0	; select bank0
  7919  0721  00A9               	movwf	LCDWriteInt@value+1
  7920  0722  0021               	movlb	1	; select bank1
  7921  0723  0830               	movf	_main$1298^(0+128),w
  7922  0724  0020               	movlb	0	; select bank0
  7923  0725  00A8               	movwf	LCDWriteInt@value
  7924  0726  3003               	movlw	3
  7925  0727  00E8               	movwf	??_main
  7926  0728  0868               	movf	??_main,w
  7927  0729  00AA               	movwf	LCDWriteInt@fieldLength
  7928  072A  01AB               	clrf	LCDWriteInt@numPlaces
  7929  072B  01AC               	clrf	LCDWriteInt@sign
  7930  072C  318E  2651  3182   	fcall	_LCDWriteInt
  7931                           
  7932                           ;main.c: 255: LCDWriteCharacter('W');
  7933  072F  3057               	movlw	87
  7934  0730  3197  274B  3182   	fcall	_LCDWriteCharacter
  7935                           
  7936                           ;main.c: 258: { gotoXY(48,4); LCDWriteInt(MPPT0,4, 0, 0);};
  7937  0733  3004               	movlw	4
  7938  0734  0020               	movlb	0	; select bank0
  7939  0735  00E8               	movwf	??_main
  7940  0736  0868               	movf	??_main,w
  7941  0737  00F5               	movwf	gotoXY@y
  7942  0738  3030               	movlw	48
  7943  0739  3193  23EB  3182   	fcall	_gotoXY
  7944  073C  0021               	movlb	1	; select bank1
  7945  073D  0840               	movf	(main@MPPT0+1)^(0+128),w
  7946  073E  0020               	movlb	0	; select bank0
  7947  073F  00A9               	movwf	LCDWriteInt@value+1
  7948  0740  0021               	movlb	1	; select bank1
  7949  0741  083F               	movf	main@MPPT0^(0+128),w
  7950  0742  0020               	movlb	0	; select bank0
  7951  0743  00A8               	movwf	LCDWriteInt@value
  7952  0744  3004               	movlw	4
  7953  0745  00E8               	movwf	??_main
  7954  0746  0868               	movf	??_main,w
  7955  0747  00AA               	movwf	LCDWriteInt@fieldLength
  7956  0748  01AB               	clrf	LCDWriteInt@numPlaces
  7957  0749  01AC               	clrf	LCDWriteInt@sign
  7958  074A  318E  2651  3182   	fcall	_LCDWriteInt
  7959                           
  7960                           ;main.c: 266: { gotoXY(0,5); LCDWriteInt(dutyCycle6,4, 0, 0);};
  7961  074D  3005               	movlw	5
  7962  074E  0020               	movlb	0	; select bank0
  7963  074F  00E8               	movwf	??_main
  7964  0750  0868               	movf	??_main,w
  7965  0751  00F5               	movwf	gotoXY@y
  7966  0752  3000               	movlw	0
  7967  0753  3193  23EB  3182   	fcall	_gotoXY
  7968  0756  0021               	movlb	1	; select bank1
  7969  0757  0843               	movf	(main@dutyCycle6+1)^(0+128),w
  7970  0758  0020               	movlb	0	; select bank0
  7971  0759  00A9               	movwf	LCDWriteInt@value+1
  7972  075A  0021               	movlb	1	; select bank1
  7973  075B  0842               	movf	main@dutyCycle6^(0+128),w
  7974  075C  0020               	movlb	0	; select bank0
  7975  075D  00A8               	movwf	LCDWriteInt@value
  7976  075E  3004               	movlw	4
  7977  075F  00E8               	movwf	??_main
  7978  0760  0868               	movf	??_main,w
  7979  0761  00AA               	movwf	LCDWriteInt@fieldLength
  7980  0762  01AB               	clrf	LCDWriteInt@numPlaces
  7981  0763  01AC               	clrf	LCDWriteInt@sign
  7982  0764  318E  2651  3182   	fcall	_LCDWriteInt
  7983                           
  7984                           ;main.c: 267: { gotoXY(24,5); LCDWriteInt(dutyCycle7,4, 0, 0);};
  7985  0767  3005               	movlw	5
  7986  0768  0020               	movlb	0	; select bank0
  7987  0769  00E8               	movwf	??_main
  7988  076A  0868               	movf	??_main,w
  7989  076B  00F5               	movwf	gotoXY@y
  7990  076C  3018               	movlw	24
  7991  076D  3193  23EB  3182   	fcall	_gotoXY
  7992  0770  0021               	movlb	1	; select bank1
  7993  0771  083C               	movf	(main@dutyCycle7+1)^(0+128),w
  7994  0772  0020               	movlb	0	; select bank0
  7995  0773  00A9               	movwf	LCDWriteInt@value+1
  7996  0774  0021               	movlb	1	; select bank1
  7997  0775  083B               	movf	main@dutyCycle7^(0+128),w
  7998  0776  0020               	movlb	0	; select bank0
  7999  0777  00A8               	movwf	LCDWriteInt@value
  8000  0778  3004               	movlw	4
  8001  0779  00E8               	movwf	??_main
  8002  077A  0868               	movf	??_main,w
  8003  077B  00AA               	movwf	LCDWriteInt@fieldLength
  8004  077C  01AB               	clrf	LCDWriteInt@numPlaces
  8005  077D  01AC               	clrf	LCDWriteInt@sign
  8006  077E  318E  2651  3182   	fcall	_LCDWriteInt
  8007                           
  8008                           ;main.c: 268: { gotoXY(48,5); LCDWriteInt(dutyCycle1,4, 0, 0);};
  8009  0781  3005               	movlw	5
  8010  0782  0020               	movlb	0	; select bank0
  8011  0783  00E8               	movwf	??_main
  8012  0784  0868               	movf	??_main,w
  8013  0785  00F5               	movwf	gotoXY@y
  8014  0786  3030               	movlw	48
  8015  0787  3193  23EB  3182   	fcall	_gotoXY
  8016  078A  0021               	movlb	1	; select bank1
  8017  078B  083E               	movf	(main@dutyCycle1+1)^(0+128),w
  8018  078C  0020               	movlb	0	; select bank0
  8019  078D  00A9               	movwf	LCDWriteInt@value+1
  8020  078E  0021               	movlb	1	; select bank1
  8021  078F  083D               	movf	main@dutyCycle1^(0+128),w
  8022  0790  0020               	movlb	0	; select bank0
  8023  0791  00A8               	movwf	LCDWriteInt@value
  8024  0792  3004               	movlw	4
  8025  0793  00E8               	movwf	??_main
  8026  0794  0868               	movf	??_main,w
  8027  0795  00AA               	movwf	LCDWriteInt@fieldLength
  8028  0796  01AB               	clrf	LCDWriteInt@numPlaces
  8029  0797  01AC               	clrf	LCDWriteInt@sign
  8030  0798  318E  2651  3182   	fcall	_LCDWriteInt
  8031                           
  8032                           ;main.c: 269: { gotoXY(74,5); LCDWriteInt(!(RB2),1, 0, 0);};
  8033  079B  3005               	movlw	5
  8034  079C  0020               	movlb	0	; select bank0
  8035  079D  00E8               	movwf	??_main
  8036  079E  0868               	movf	??_main,w
  8037  079F  00F5               	movwf	gotoXY@y
  8038  07A0  304A               	movlw	74
  8039  07A1  3193  23EB  3182   	fcall	_gotoXY
  8040  07A4  1003               	clrc
  8041  07A5  0020               	movlb	0	; select bank0
  8042  07A6  1D0D               	btfss	13,2	;volatile
  8043  07A7  1403               	setc
  8044  07A8  3000               	movlw	0
  8045  07A9  3D09               	addwfc	9,w
  8046  07AA  00E8               	movwf	??_main
  8047  07AB  01E9               	clrf	??_main+1
  8048  07AC  0868               	movf	??_main,w
  8049  07AD  00A8               	movwf	LCDWriteInt@value
  8050  07AE  0869               	movf	??_main+1,w
  8051  07AF  00A9               	movwf	LCDWriteInt@value+1
  8052  07B0  01AA               	clrf	LCDWriteInt@fieldLength
  8053  07B1  0AAA               	incf	LCDWriteInt@fieldLength,f
  8054  07B2  01AB               	clrf	LCDWriteInt@numPlaces
  8055  07B3  01AC               	clrf	LCDWriteInt@sign
  8056  07B4  318E  2651  3182   	fcall	_LCDWriteInt
  8057                           
  8058                           ;main.c: 271: if(battery_state > FINISHED)
  8059  07B7  3003               	movlw	3
  8060  07B8  0021               	movlb	1	; select bank1
  8061  07B9  026D               	subwf	_battery_state^(0+128),w
  8062  07BA  1C03               	skipc
  8063  07BB  2FBF               	goto	l4390
  8064                           
  8065                           ;main.c: 272: {
  8066                           ;main.c: 273: cc_cv_mode();
  8067  07BC  3197  27A3  3182   	fcall	_cc_cv_mode
  8068  07BF                     l4390:	
  8069                           
  8070                           ;main.c: 274: }
  8071                           ;main.c: 275: slowLoop=0;
  8072  07BF  0021               	movlb	1	; select bank1
  8073  07C0  01B3               	clrf	main@slowLoop^(0+128)
  8074  07C1  2AB9               	goto	l4158
  8075  07C2                     __end_of_main:	
  8076                           
  8077                           	psect	text1
  8078  001B                     __ptext1:	
  8079 ;; *************** function _tempCalc *****************
  8080 ;; Defined at:
  8081 ;;		line 4 in file "tempCalc.c"
  8082 ;; Parameters:    Size  Location     Type
  8083 ;;  analogValue     2   61[BANK0 ] int 
  8084 ;; Auto vars:     Size  Location     Type
  8085 ;;  steinhart       3   69[BANK0 ] float 
  8086 ;;  R               3   63[BANK0 ] float 
  8087 ;; Return value:  Size  Location     Type
  8088 ;;                  2   61[BANK0 ] int 
  8089 ;; Registers used:
  8090 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8091 ;; Tracked objects:
  8092 ;;		On entry : 0/0
  8093 ;;		On exit  : 0/0
  8094 ;;		Unchanged: 0/0
  8095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8096 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8097 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8099 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8100 ;;Total ram usage:       11 bytes
  8101 ;; Hardware stack levels used:    1
  8102 ;; Hardware stack levels required when called:    4
  8103 ;; This function calls:
  8104 ;;		___awtoft
  8105 ;;		___ftadd
  8106 ;;		___ftdiv
  8107 ;;		___ftmul
  8108 ;;		___ftsub
  8109 ;;		___fttol
  8110 ;;		_log
  8111 ;; This function is called by:
  8112 ;;		_main
  8113 ;; This function uses a non-reentrant model
  8114 ;;
  8115                           
  8116                           
  8117                           ;psect for function _tempCalc
  8118  001B                     _tempCalc:	
  8119                           
  8120                           ;tempCalc.c: 6: float R, steinhart;
  8121                           ;tempCalc.c: 8: R = 9890/(1023/(float)analogValue - 1);
  8122                           
  8123                           ;incstack = 0
  8124                           ; Regs used in _tempCalc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8125  001B  3000               	movlw	0
  8126  001C  0020               	movlb	0	; select bank0
  8127  001D  00C0               	movwf	___ftadd@f1
  8128  001E  3080               	movlw	128
  8129  001F  00C1               	movwf	___ftadd@f1+1
  8130  0020  30BF               	movlw	191
  8131  0021  00C2               	movwf	___ftadd@f1+2
  8132  0022  085E               	movf	tempCalc@analogValue+1,w
  8133  0023  00F9               	movwf	___awtoft@c+1
  8134  0024  085D               	movf	tempCalc@analogValue,w
  8135  0025  00F8               	movwf	___awtoft@c
  8136  0026  3194  24E9  3180   	fcall	___awtoft
  8137  0029  0878               	movf	?___awtoft,w
  8138  002A  0020               	movlb	0	; select bank0
  8139  002B  00A0               	movwf	___ftdiv@f2
  8140  002C  0879               	movf	?___awtoft+1,w
  8141  002D  00A1               	movwf	___ftdiv@f2+1
  8142  002E  087A               	movf	?___awtoft+2,w
  8143  002F  00A2               	movwf	___ftdiv@f2+2
  8144  0030  30C0               	movlw	192
  8145  0031  00A3               	movwf	___ftdiv@f1
  8146  0032  307F               	movlw	127
  8147  0033  00A4               	movwf	___ftdiv@f1+1
  8148  0034  3044               	movlw	68
  8149  0035  00A5               	movwf	___ftdiv@f1+2
  8150  0036  318C  2444  3180   	fcall	___ftdiv
  8151  0039  0020               	movlb	0	; select bank0
  8152  003A  0820               	movf	?___ftdiv,w
  8153  003B  00C3               	movwf	___ftadd@f2
  8154  003C  0821               	movf	?___ftdiv+1,w
  8155  003D  00C4               	movwf	___ftadd@f2+1
  8156  003E  0822               	movf	?___ftdiv+2,w
  8157  003F  00C5               	movwf	___ftadd@f2+2
  8158  0040  318F  270A  3180   	fcall	___ftadd
  8159  0043  0020               	movlb	0	; select bank0
  8160  0044  0840               	movf	?___ftadd,w
  8161  0045  00E2               	movwf	_tempCalc$1299
  8162  0046  0841               	movf	?___ftadd+1,w
  8163  0047  00E3               	movwf	_tempCalc$1299+1
  8164  0048  0842               	movf	?___ftadd+2,w
  8165  0049  00E4               	movwf	_tempCalc$1299+2
  8166                           
  8167                           ;tempCalc.c: 6: float R, steinhart;
  8168                           ;tempCalc.c: 8: R = 9890/(1023/(float)analogValue - 1);
  8169  004A  0862               	movf	_tempCalc$1299,w
  8170  004B  00A0               	movwf	___ftdiv@f2
  8171  004C  0863               	movf	_tempCalc$1299+1,w
  8172  004D  00A1               	movwf	___ftdiv@f2+1
  8173  004E  0864               	movf	_tempCalc$1299+2,w
  8174  004F  00A2               	movwf	___ftdiv@f2+2
  8175  0050  3088               	movlw	136
  8176  0051  00A3               	movwf	___ftdiv@f1
  8177  0052  301A               	movlw	26
  8178  0053  00A4               	movwf	___ftdiv@f1+1
  8179  0054  3046               	movlw	70
  8180  0055  00A5               	movwf	___ftdiv@f1+2
  8181  0056  318C  2444  3180   	fcall	___ftdiv
  8182  0059  0020               	movlb	0	; select bank0
  8183  005A  0820               	movf	?___ftdiv,w
  8184  005B  00DF               	movwf	tempCalc@R
  8185  005C  0821               	movf	?___ftdiv+1,w
  8186  005D  00E0               	movwf	tempCalc@R+1
  8187  005E  0822               	movf	?___ftdiv+2,w
  8188  005F  00E1               	movwf	tempCalc@R+2
  8189                           
  8190                           ;tempCalc.c: 10: steinhart = R /9990;
  8191  0060  3018               	movlw	24
  8192  0061  00A0               	movwf	___ftdiv@f2
  8193  0062  301C               	movlw	28
  8194  0063  00A1               	movwf	___ftdiv@f2+1
  8195  0064  3046               	movlw	70
  8196  0065  00A2               	movwf	___ftdiv@f2+2
  8197  0066  085F               	movf	tempCalc@R,w
  8198  0067  00A3               	movwf	___ftdiv@f1
  8199  0068  0860               	movf	tempCalc@R+1,w
  8200  0069  00A4               	movwf	___ftdiv@f1+1
  8201  006A  0861               	movf	tempCalc@R+2,w
  8202  006B  00A5               	movwf	___ftdiv@f1+2
  8203  006C  318C  2444  3180   	fcall	___ftdiv
  8204  006F  0020               	movlb	0	; select bank0
  8205  0070  0820               	movf	?___ftdiv,w
  8206  0071  00E5               	movwf	tempCalc@steinhart
  8207  0072  0821               	movf	?___ftdiv+1,w
  8208  0073  00E6               	movwf	tempCalc@steinhart+1
  8209  0074  0822               	movf	?___ftdiv+2,w
  8210  0075  00E7               	movwf	tempCalc@steinhart+2
  8211                           
  8212                           ;tempCalc.c: 11: steinhart = log(steinhart);
  8213  0076  0865               	movf	tempCalc@steinhart,w
  8214  0077  00D7               	movwf	log@x
  8215  0078  0866               	movf	tempCalc@steinhart+1,w
  8216  0079  00D8               	movwf	log@x+1
  8217  007A  0867               	movf	tempCalc@steinhart+2,w
  8218  007B  00D9               	movwf	log@x+2
  8219  007C  318C  24ED  3180   	fcall	_log
  8220  007F  0020               	movlb	0	; select bank0
  8221  0080  0857               	movf	?_log,w
  8222  0081  00E5               	movwf	tempCalc@steinhart
  8223  0082  0858               	movf	?_log+1,w
  8224  0083  00E6               	movwf	tempCalc@steinhart+1
  8225  0084  0859               	movf	?_log+2,w
  8226  0085  00E7               	movwf	tempCalc@steinhart+2
  8227                           
  8228                           ;tempCalc.c: 12: steinhart /= 4030;
  8229  0086  30E0               	movlw	224
  8230  0087  00A0               	movwf	___ftdiv@f2
  8231  0088  307B               	movlw	123
  8232  0089  00A1               	movwf	___ftdiv@f2+1
  8233  008A  3045               	movlw	69
  8234  008B  00A2               	movwf	___ftdiv@f2+2
  8235  008C  0865               	movf	tempCalc@steinhart,w
  8236  008D  00A3               	movwf	___ftdiv@f1
  8237  008E  0866               	movf	tempCalc@steinhart+1,w
  8238  008F  00A4               	movwf	___ftdiv@f1+1
  8239  0090  0867               	movf	tempCalc@steinhart+2,w
  8240  0091  00A5               	movwf	___ftdiv@f1+2
  8241  0092  318C  2444  3180   	fcall	___ftdiv
  8242  0095  0020               	movlb	0	; select bank0
  8243  0096  0820               	movf	?___ftdiv,w
  8244  0097  00E5               	movwf	tempCalc@steinhart
  8245  0098  0821               	movf	?___ftdiv+1,w
  8246  0099  00E6               	movwf	tempCalc@steinhart+1
  8247  009A  0822               	movf	?___ftdiv+2,w
  8248  009B  00E7               	movwf	tempCalc@steinhart+2
  8249                           
  8250                           ;tempCalc.c: 15: steinhart += 1.0 / (25 + 273.15);
  8251  009C  30CF               	movlw	207
  8252  009D  00C0               	movwf	___ftadd@f1
  8253  009E  305B               	movlw	91
  8254  009F  00C1               	movwf	___ftadd@f1+1
  8255  00A0  303B               	movlw	59
  8256  00A1  00C2               	movwf	___ftadd@f1+2
  8257  00A2  0865               	movf	tempCalc@steinhart,w
  8258  00A3  00C3               	movwf	___ftadd@f2
  8259  00A4  0866               	movf	tempCalc@steinhart+1,w
  8260  00A5  00C4               	movwf	___ftadd@f2+1
  8261  00A6  0867               	movf	tempCalc@steinhart+2,w
  8262  00A7  00C5               	movwf	___ftadd@f2+2
  8263  00A8  318F  270A  3180   	fcall	___ftadd
  8264  00AB  0020               	movlb	0	; select bank0
  8265  00AC  0840               	movf	?___ftadd,w
  8266  00AD  00E5               	movwf	tempCalc@steinhart
  8267  00AE  0841               	movf	?___ftadd+1,w
  8268  00AF  00E6               	movwf	tempCalc@steinhart+1
  8269  00B0  0842               	movf	?___ftadd+2,w
  8270  00B1  00E7               	movwf	tempCalc@steinhart+2
  8271                           
  8272                           ;tempCalc.c: 16: steinhart = 1.0 / steinhart;
  8273  00B2  0865               	movf	tempCalc@steinhart,w
  8274  00B3  00A0               	movwf	___ftdiv@f2
  8275  00B4  0866               	movf	tempCalc@steinhart+1,w
  8276  00B5  00A1               	movwf	___ftdiv@f2+1
  8277  00B6  0867               	movf	tempCalc@steinhart+2,w
  8278  00B7  00A2               	movwf	___ftdiv@f2+2
  8279  00B8  3000               	movlw	0
  8280  00B9  00A3               	movwf	___ftdiv@f1
  8281  00BA  3080               	movlw	128
  8282  00BB  00A4               	movwf	___ftdiv@f1+1
  8283  00BC  303F               	movlw	63
  8284  00BD  00A5               	movwf	___ftdiv@f1+2
  8285  00BE  318C  2444  3180   	fcall	___ftdiv
  8286  00C1  0020               	movlb	0	; select bank0
  8287  00C2  0820               	movf	?___ftdiv,w
  8288  00C3  00E5               	movwf	tempCalc@steinhart
  8289  00C4  0821               	movf	?___ftdiv+1,w
  8290  00C5  00E6               	movwf	tempCalc@steinhart+1
  8291  00C6  0822               	movf	?___ftdiv+2,w
  8292  00C7  00E7               	movwf	tempCalc@steinhart+2
  8293                           
  8294                           ;tempCalc.c: 17: steinhart -= 273.15;
  8295  00C8  3093               	movlw	147
  8296  00C9  00CD               	movwf	___ftsub@f2
  8297  00CA  3088               	movlw	136
  8298  00CB  00CE               	movwf	___ftsub@f2+1
  8299  00CC  3043               	movlw	67
  8300  00CD  00CF               	movwf	___ftsub@f2+2
  8301  00CE  0865               	movf	tempCalc@steinhart,w
  8302  00CF  00D0               	movwf	___ftsub@f1
  8303  00D0  0866               	movf	tempCalc@steinhart+1,w
  8304  00D1  00D1               	movwf	___ftsub@f1+1
  8305  00D2  0867               	movf	tempCalc@steinhart+2,w
  8306  00D3  00D2               	movwf	___ftsub@f1+2
  8307  00D4  3194  248D  3180   	fcall	___ftsub
  8308  00D7  0020               	movlb	0	; select bank0
  8309  00D8  084D               	movf	?___ftsub,w
  8310  00D9  00E5               	movwf	tempCalc@steinhart
  8311  00DA  084E               	movf	?___ftsub+1,w
  8312  00DB  00E6               	movwf	tempCalc@steinhart+1
  8313  00DC  084F               	movf	?___ftsub+2,w
  8314  00DD  00E7               	movwf	tempCalc@steinhart+2
  8315                           
  8316                           ;tempCalc.c: 19: steinhart*=10;
  8317  00DE  3000               	movlw	0
  8318  00DF  00B0               	movwf	___ftmul@f1
  8319  00E0  3020               	movlw	32
  8320  00E1  00B1               	movwf	___ftmul@f1+1
  8321  00E2  3041               	movlw	65
  8322  00E3  00B2               	movwf	___ftmul@f1+2
  8323  00E4  0865               	movf	tempCalc@steinhart,w
  8324  00E5  00B3               	movwf	___ftmul@f2
  8325  00E6  0866               	movf	tempCalc@steinhart+1,w
  8326  00E7  00B4               	movwf	___ftmul@f2+1
  8327  00E8  0867               	movf	tempCalc@steinhart+2,w
  8328  00E9  00B5               	movwf	___ftmul@f2+2
  8329  00EA  318D  259D  3180   	fcall	___ftmul
  8330  00ED  0020               	movlb	0	; select bank0
  8331  00EE  0830               	movf	?___ftmul,w
  8332  00EF  00E5               	movwf	tempCalc@steinhart
  8333  00F0  0831               	movf	?___ftmul+1,w
  8334  00F1  00E6               	movwf	tempCalc@steinhart+1
  8335  00F2  0832               	movf	?___ftmul+2,w
  8336  00F3  00E7               	movwf	tempCalc@steinhart+2
  8337                           
  8338                           ;tempCalc.c: 21: steinhart = steinhart*9/5+320;
  8339  00F4  3000               	movlw	0
  8340  00F5  00C0               	movwf	___ftadd@f1
  8341  00F6  30A0               	movlw	160
  8342  00F7  00C1               	movwf	___ftadd@f1+1
  8343  00F8  3043               	movlw	67
  8344  00F9  00C2               	movwf	___ftadd@f1+2
  8345  00FA  3000               	movlw	0
  8346  00FB  00A0               	movwf	___ftdiv@f2
  8347  00FC  30A0               	movlw	160
  8348  00FD  00A1               	movwf	___ftdiv@f2+1
  8349  00FE  3040               	movlw	64
  8350  00FF  00A2               	movwf	___ftdiv@f2+2
  8351  0100  3000               	movlw	0
  8352  0101  00B0               	movwf	___ftmul@f1
  8353  0102  3010               	movlw	16
  8354  0103  00B1               	movwf	___ftmul@f1+1
  8355  0104  3041               	movlw	65
  8356  0105  00B2               	movwf	___ftmul@f1+2
  8357  0106  0865               	movf	tempCalc@steinhart,w
  8358  0107  00B3               	movwf	___ftmul@f2
  8359  0108  0866               	movf	tempCalc@steinhart+1,w
  8360  0109  00B4               	movwf	___ftmul@f2+1
  8361  010A  0867               	movf	tempCalc@steinhart+2,w
  8362  010B  00B5               	movwf	___ftmul@f2+2
  8363  010C  318D  259D  3180   	fcall	___ftmul
  8364  010F  0020               	movlb	0	; select bank0
  8365  0110  0830               	movf	?___ftmul,w
  8366  0111  00A3               	movwf	___ftdiv@f1
  8367  0112  0831               	movf	?___ftmul+1,w
  8368  0113  00A4               	movwf	___ftdiv@f1+1
  8369  0114  0832               	movf	?___ftmul+2,w
  8370  0115  00A5               	movwf	___ftdiv@f1+2
  8371  0116  318C  2444  3180   	fcall	___ftdiv
  8372  0119  0020               	movlb	0	; select bank0
  8373  011A  0820               	movf	?___ftdiv,w
  8374  011B  00C3               	movwf	___ftadd@f2
  8375  011C  0821               	movf	?___ftdiv+1,w
  8376  011D  00C4               	movwf	___ftadd@f2+1
  8377  011E  0822               	movf	?___ftdiv+2,w
  8378  011F  00C5               	movwf	___ftadd@f2+2
  8379  0120  318F  270A  3180   	fcall	___ftadd
  8380  0123  0020               	movlb	0	; select bank0
  8381  0124  0840               	movf	?___ftadd,w
  8382  0125  00E5               	movwf	tempCalc@steinhart
  8383  0126  0841               	movf	?___ftadd+1,w
  8384  0127  00E6               	movwf	tempCalc@steinhart+1
  8385  0128  0842               	movf	?___ftadd+2,w
  8386  0129  00E7               	movwf	tempCalc@steinhart+2
  8387                           
  8388                           ;tempCalc.c: 23: return (int16_t)steinhart;
  8389  012A  0865               	movf	tempCalc@steinhart,w
  8390  012B  00B0               	movwf	___fttol@f1
  8391  012C  0866               	movf	tempCalc@steinhart+1,w
  8392  012D  00B1               	movwf	___fttol@f1+1
  8393  012E  0867               	movf	tempCalc@steinhart+2,w
  8394  012F  00B2               	movwf	___fttol@f1+2
  8395  0130  318B  2323         	fcall	___fttol
  8396  0132  0020               	movlb	0	; select bank0
  8397  0133  0831               	movf	?___fttol+1,w
  8398  0134  00DE               	movwf	?_tempCalc+1
  8399  0135  0830               	movf	?___fttol,w
  8400  0136  00DD               	movwf	?_tempCalc
  8401  0137  0008               	return
  8402  0138                     __end_of_tempCalc:	
  8403                           
  8404                           	psect	text2
  8405  0CED                     __ptext2:	
  8406 ;; *************** function _log *****************
  8407 ;; Defined at:
  8408 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\log.c"
  8409 ;; Parameters:    Size  Location     Type
  8410 ;;  x               3   55[BANK0 ] int 
  8411 ;; Auto vars:     Size  Location     Type
  8412 ;;  exponent        2   59[BANK0 ] int 
  8413 ;; Return value:  Size  Location     Type
  8414 ;;                  3   55[BANK0 ] int 
  8415 ;; Registers used:
  8416 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8417 ;; Tracked objects:
  8418 ;;		On entry : 0/0
  8419 ;;		On exit  : 0/0
  8420 ;;		Unchanged: 0/0
  8421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8422 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8423 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8424 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8425 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8426 ;;Total ram usage:        6 bytes
  8427 ;; Hardware stack levels used:    1
  8428 ;; Hardware stack levels required when called:    3
  8429 ;; This function calls:
  8430 ;;		___awtoft
  8431 ;;		___ftadd
  8432 ;;		___ftge
  8433 ;;		___ftmul
  8434 ;;		_eval_poly
  8435 ;;		_frexp
  8436 ;; This function is called by:
  8437 ;;		_tempCalc
  8438 ;; This function uses a non-reentrant model
  8439 ;;
  8440                           
  8441                           
  8442                           ;psect for function _log
  8443  0CED                     _log:	
  8444                           
  8445                           ;incstack = 0
  8446                           ; Regs used in _log: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8447  0CED  0020               	movlb	0	; select bank0
  8448  0CEE  0857               	movf	log@x,w
  8449  0CEF  00F0               	movwf	___ftge@ff1
  8450  0CF0  0858               	movf	log@x+1,w
  8451  0CF1  00F1               	movwf	___ftge@ff1+1
  8452  0CF2  0859               	movf	log@x+2,w
  8453  0CF3  00F2               	movwf	___ftge@ff1+2
  8454  0CF4  3000               	movlw	0
  8455  0CF5  00F3               	movwf	___ftge@ff2
  8456  0CF6  3000               	movlw	0
  8457  0CF7  00F4               	movwf	___ftge@ff2+1
  8458  0CF8  3000               	movlw	0
  8459  0CF9  00F5               	movwf	___ftge@ff2+2
  8460  0CFA  3195  25FA  318C   	fcall	___ftge
  8461  0CFD  1803               	btfsc	3,0
  8462  0CFE  2D0C               	goto	l3698
  8463  0CFF  3021               	movlw	33
  8464  0D00  0021               	movlb	1	; select bank1
  8465  0D01  00D9               	movwf	_errno^(0+128)
  8466  0D02  3000               	movlw	0
  8467  0D03  00DA               	movwf	(_errno^(0+128)+1)
  8468  0D04  3000               	movlw	0
  8469  0D05  0020               	movlb	0	; select bank0
  8470  0D06  00D7               	movwf	?_log
  8471  0D07  3000               	movlw	0
  8472  0D08  00D8               	movwf	?_log+1
  8473  0D09  3000               	movlw	0
  8474  0D0A  00D9               	movwf	?_log+2
  8475  0D0B  0008               	return
  8476  0D0C                     l3698:	
  8477  0D0C  0020               	movlb	0	; select bank0
  8478  0D0D  0859               	movf	log@x+2,w
  8479  0D0E  0458               	iorwf	log@x+1,w
  8480  0D0F  0457               	iorwf	log@x,w
  8481  0D10  1D03               	skipz
  8482  0D11  2D1F               	goto	l3704
  8483  0D12  3022               	movlw	34
  8484  0D13  0021               	movlb	1	; select bank1
  8485  0D14  00D9               	movwf	_errno^(0+128)
  8486  0D15  3000               	movlw	0
  8487  0D16  00DA               	movwf	(_errno^(0+128)+1)
  8488  0D17  3000               	movlw	0
  8489  0D18  0020               	movlb	0	; select bank0
  8490  0D19  00D7               	movwf	?_log
  8491  0D1A  3000               	movlw	0
  8492  0D1B  00D8               	movwf	?_log+1
  8493  0D1C  3000               	movlw	0
  8494  0D1D  00D9               	movwf	?_log+2
  8495  0D1E  0008               	return
  8496  0D1F                     l3704:	
  8497  0D1F  3000               	movlw	0
  8498  0D20  00C0               	movwf	___ftadd@f1
  8499  0D21  3080               	movlw	128
  8500  0D22  00C1               	movwf	___ftadd@f1+1
  8501  0D23  30BF               	movlw	191
  8502  0D24  00C2               	movwf	___ftadd@f1+2
  8503  0D25  3000               	movlw	0
  8504  0D26  00B0               	movwf	___ftmul@f1
  8505  0D27  3000               	movlw	0
  8506  0D28  00B1               	movwf	___ftmul@f1+1
  8507  0D29  3040               	movlw	64
  8508  0D2A  00B2               	movwf	___ftmul@f1+2
  8509  0D2B  305B               	movlw	(low (log@exponent| 0))& (0+255)
  8510  0D2C  00DA               	movwf	??_log
  8511  0D2D  085A               	movf	??_log,w
  8512  0D2E  00F3               	movwf	frexp@eptr
  8513  0D2F  0857               	movf	log@x,w
  8514  0D30  00F0               	movwf	frexp@value
  8515  0D31  0858               	movf	log@x+1,w
  8516  0D32  00F1               	movwf	frexp@value+1
  8517  0D33  0859               	movf	log@x+2,w
  8518  0D34  00F2               	movwf	frexp@value+2
  8519  0D35  3196  2635  318C   	fcall	_frexp
  8520  0D38  0870               	movf	?_frexp,w
  8521  0D39  0020               	movlb	0	; select bank0
  8522  0D3A  00B3               	movwf	___ftmul@f2
  8523  0D3B  0871               	movf	?_frexp+1,w
  8524  0D3C  00B4               	movwf	___ftmul@f2+1
  8525  0D3D  0872               	movf	?_frexp+2,w
  8526  0D3E  00B5               	movwf	___ftmul@f2+2
  8527  0D3F  318D  259D  318C   	fcall	___ftmul
  8528  0D42  0020               	movlb	0	; select bank0
  8529  0D43  0830               	movf	?___ftmul,w
  8530  0D44  00C3               	movwf	___ftadd@f2
  8531  0D45  0831               	movf	?___ftmul+1,w
  8532  0D46  00C4               	movwf	___ftadd@f2+1
  8533  0D47  0832               	movf	?___ftmul+2,w
  8534  0D48  00C5               	movwf	___ftadd@f2+2
  8535  0D49  318F  270A  318C   	fcall	___ftadd
  8536  0D4C  0020               	movlb	0	; select bank0
  8537  0D4D  0840               	movf	?___ftadd,w
  8538  0D4E  00D7               	movwf	log@x
  8539  0D4F  0841               	movf	?___ftadd+1,w
  8540  0D50  00D8               	movwf	log@x+1
  8541  0D51  0842               	movf	?___ftadd+2,w
  8542  0D52  00D9               	movwf	log@x+2
  8543  0D53  30FF               	movlw	255
  8544  0D54  07DB               	addwf	log@exponent,f
  8545  0D55  30FF               	movlw	255
  8546  0D56  3DDC               	addwfc	log@exponent+1,f
  8547  0D57  0857               	movf	log@x,w
  8548  0D58  00CD               	movwf	eval_poly@x
  8549  0D59  0858               	movf	log@x+1,w
  8550  0D5A  00CE               	movwf	eval_poly@x+1
  8551  0D5B  0859               	movf	log@x+2,w
  8552  0D5C  00CF               	movwf	eval_poly@x+2
  8553  0D5D  3000               	movlw	low (log@coeff| (0+32768))
  8554  0D5E  00D0               	movwf	eval_poly@d
  8555  0D5F  3098               	movlw	high (log@coeff| (0+32768))
  8556  0D60  00D1               	movwf	eval_poly@d+1
  8557  0D61  3008               	movlw	8
  8558  0D62  00D2               	movwf	eval_poly@n
  8559  0D63  3000               	movlw	0
  8560  0D64  00D3               	movwf	eval_poly@n+1
  8561  0D65  3189  215B  318C   	fcall	_eval_poly
  8562  0D68  0020               	movlb	0	; select bank0
  8563  0D69  084D               	movf	?_eval_poly,w
  8564  0D6A  00D7               	movwf	log@x
  8565  0D6B  084E               	movf	?_eval_poly+1,w
  8566  0D6C  00D8               	movwf	log@x+1
  8567  0D6D  084F               	movf	?_eval_poly+2,w
  8568  0D6E  00D9               	movwf	log@x+2
  8569  0D6F  0857               	movf	log@x,w
  8570  0D70  00C0               	movwf	___ftadd@f1
  8571  0D71  0858               	movf	log@x+1,w
  8572  0D72  00C1               	movwf	___ftadd@f1+1
  8573  0D73  0859               	movf	log@x+2,w
  8574  0D74  00C2               	movwf	___ftadd@f1+2
  8575  0D75  3072               	movlw	114
  8576  0D76  00B0               	movwf	___ftmul@f1
  8577  0D77  3031               	movlw	49
  8578  0D78  00B1               	movwf	___ftmul@f1+1
  8579  0D79  303F               	movlw	63
  8580  0D7A  00B2               	movwf	___ftmul@f1+2
  8581  0D7B  085C               	movf	log@exponent+1,w
  8582  0D7C  00F9               	movwf	___awtoft@c+1
  8583  0D7D  085B               	movf	log@exponent,w
  8584  0D7E  00F8               	movwf	___awtoft@c
  8585  0D7F  3194  24E9  318C   	fcall	___awtoft
  8586  0D82  0878               	movf	?___awtoft,w
  8587  0D83  0020               	movlb	0	; select bank0
  8588  0D84  00B3               	movwf	___ftmul@f2
  8589  0D85  0879               	movf	?___awtoft+1,w
  8590  0D86  00B4               	movwf	___ftmul@f2+1
  8591  0D87  087A               	movf	?___awtoft+2,w
  8592  0D88  00B5               	movwf	___ftmul@f2+2
  8593  0D89  318D  259D  318C   	fcall	___ftmul
  8594  0D8C  0020               	movlb	0	; select bank0
  8595  0D8D  0830               	movf	?___ftmul,w
  8596  0D8E  00C3               	movwf	___ftadd@f2
  8597  0D8F  0831               	movf	?___ftmul+1,w
  8598  0D90  00C4               	movwf	___ftadd@f2+1
  8599  0D91  0832               	movf	?___ftmul+2,w
  8600  0D92  00C5               	movwf	___ftadd@f2+2
  8601  0D93  318F  270A         	fcall	___ftadd
  8602  0D95  0020               	movlb	0	; select bank0
  8603  0D96  0840               	movf	?___ftadd,w
  8604  0D97  00D7               	movwf	?_log
  8605  0D98  0841               	movf	?___ftadd+1,w
  8606  0D99  00D8               	movwf	?_log+1
  8607  0D9A  0842               	movf	?___ftadd+2,w
  8608  0D9B  00D9               	movwf	?_log+2
  8609  0D9C  0008               	return
  8610  0D9D                     __end_of_log:	
  8611                           
  8612                           	psect	text3
  8613  1635                     __ptext3:	
  8614 ;; *************** function _frexp *****************
  8615 ;; Defined at:
  8616 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\frexp.c"
  8617 ;; Parameters:    Size  Location     Type
  8618 ;;  value           3    0[COMMON] int 
  8619 ;;  eptr            1    3[COMMON] PTR int 
  8620 ;;		 -> log@exponent(2), 
  8621 ;; Auto vars:     Size  Location     Type
  8622 ;;		None
  8623 ;; Return value:  Size  Location     Type
  8624 ;;                  3    0[COMMON] PTR int 
  8625 ;; Registers used:
  8626 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8627 ;; Tracked objects:
  8628 ;;		On entry : 0/0
  8629 ;;		On exit  : 0/0
  8630 ;;		Unchanged: 0/0
  8631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8632 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8634 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8635 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8636 ;;Total ram usage:        6 bytes
  8637 ;; Hardware stack levels used:    1
  8638 ;; This function calls:
  8639 ;;		Nothing
  8640 ;; This function is called by:
  8641 ;;		_log
  8642 ;; This function uses a non-reentrant model
  8643 ;;
  8644                           
  8645                           
  8646                           ;psect for function _frexp
  8647  1635                     _frexp:	
  8648                           
  8649                           ;incstack = 0
  8650                           ; Regs used in _frexp: [wreg+fsr1l+fsr1h+status,2+status,0]
  8651  1635  0872               	movf	frexp@value+2,w
  8652  1636  0471               	iorwf	frexp@value+1,w
  8653  1637  0470               	iorwf	frexp@value,w
  8654  1638  1D03               	skipz
  8655  1639  2E47               	goto	l3504
  8656  163A  0873               	movf	frexp@eptr,w
  8657  163B  0086               	movwf	6
  8658  163C  0187               	clrf	7
  8659  163D  3000               	movlw	0
  8660  163E  3FC0               	movwi [0]fsr1
  8661  163F  3FC1               	movwi [1]fsr1
  8662  1640  3000               	movlw	0
  8663  1641  00F0               	movwf	?_frexp
  8664  1642  3000               	movlw	0
  8665  1643  00F1               	movwf	?_frexp+1
  8666  1644  3000               	movlw	0
  8667  1645  00F2               	movwf	?_frexp+2
  8668  1646  0008               	return
  8669  1647                     l3504:	
  8670  1647  0872               	movf	frexp@value+2,w
  8671  1648  397F               	andlw	127
  8672  1649  00F4               	movwf	??_frexp
  8673  164A  01F5               	clrf	??_frexp+1
  8674  164B  35F4               	lslf	??_frexp,f
  8675  164C  0DF5               	rlf	??_frexp+1,f
  8676  164D  0873               	movf	frexp@eptr,w
  8677  164E  0086               	movwf	6
  8678  164F  0187               	clrf	7
  8679  1650  0874               	movf	??_frexp,w
  8680  1651  3FC0               	movwi [0]fsr1
  8681  1652  0875               	movf	??_frexp+1,w
  8682  1653  3FC1               	movwi [1]fsr1
  8683  1654  0D71               	rlf	frexp@value+1,w
  8684  1655  0D71               	rlf	frexp@value+1,w
  8685  1656  3901               	andlw	1
  8686  1657  00F4               	movwf	??_frexp
  8687  1658  01F5               	clrf	??_frexp+1
  8688  1659  0873               	movf	frexp@eptr,w
  8689  165A  0086               	movwf	6
  8690  165B  0187               	clrf	7
  8691  165C  0874               	movf	??_frexp,w
  8692  165D  0481               	iorwf	1,f
  8693  165E  3141               	addfsr 1,1
  8694  165F  0875               	movf	??_frexp+1,w
  8695  1660  0481               	iorwf	1,f
  8696  1661  0873               	movf	frexp@eptr,w
  8697  1662  0086               	movwf	6
  8698  1663  0187               	clrf	7
  8699  1664  3082               	movlw	130
  8700  1665  0781               	addwf	1,f
  8701  1666  3141               	addfsr 1,1
  8702  1667  30FF               	movlw	255
  8703  1668  3D81               	addwfc	1,f
  8704  1669  317F               	addfsr 1,-1
  8705  166A  0872               	movf	frexp@value+2,w
  8706  166B  3980               	andlw	-128
  8707  166C  383F               	iorlw	63
  8708  166D  00F2               	movwf	frexp@value+2
  8709  166E  13F1               	bcf	frexp@value+1,7
  8710  166F  0008               	return
  8711  1670                     __end_of_frexp:	
  8712                           
  8713                           	psect	text4
  8714  095B                     __ptext4:	
  8715 ;; *************** function _eval_poly *****************
  8716 ;; Defined at:
  8717 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\evalpoly.c"
  8718 ;; Parameters:    Size  Location     Type
  8719 ;;  x               3   45[BANK0 ] PTR int 
  8720 ;;  d               2   48[BANK0 ] PTR const 
  8721 ;;		 -> log@coeff(27), 
  8722 ;;  n               2   50[BANK0 ] int 
  8723 ;; Auto vars:     Size  Location     Type
  8724 ;;  res             3   52[BANK0 ] int 
  8725 ;; Return value:  Size  Location     Type
  8726 ;;                  3   45[BANK0 ] int 
  8727 ;; Registers used:
  8728 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8729 ;; Tracked objects:
  8730 ;;		On entry : 0/0
  8731 ;;		On exit  : 0/0
  8732 ;;		Unchanged: 0/0
  8733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8734 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8735 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8737 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8738 ;;Total ram usage:       10 bytes
  8739 ;; Hardware stack levels used:    1
  8740 ;; Hardware stack levels required when called:    2
  8741 ;; This function calls:
  8742 ;;		___ftadd
  8743 ;;		___ftmul
  8744 ;;		___wmul
  8745 ;; This function is called by:
  8746 ;;		_log
  8747 ;; This function uses a non-reentrant model
  8748 ;;
  8749                           
  8750                           
  8751                           ;psect for function _eval_poly
  8752  095B                     _eval_poly:	
  8753                           
  8754                           ;incstack = 0
  8755                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8756  095B  0020               	movlb	0	; select bank0
  8757  095C  0853               	movf	eval_poly@n+1,w
  8758  095D  00FA               	movwf	___wmul@multiplier+1
  8759  095E  0852               	movf	eval_poly@n,w
  8760  095F  00F9               	movwf	___wmul@multiplier
  8761  0960  3003               	movlw	3
  8762  0961  00FB               	movwf	___wmul@multiplicand
  8763  0962  3000               	movlw	0
  8764  0963  00FC               	movwf	___wmul@multiplicand+1
  8765  0964  3194  246F  3189   	fcall	___wmul
  8766  0967  0020               	movlb	0	; select bank0
  8767  0968  0850               	movf	eval_poly@d,w
  8768  0969  0779               	addwf	?___wmul,w
  8769  096A  0084               	movwf	4
  8770  096B  0851               	movf	eval_poly@d+1,w
  8771  096C  3D7A               	addwfc	?___wmul+1,w
  8772  096D  0085               	movwf	5
  8773  096E  3F00               	moviw [0]fsr0
  8774  096F  00D4               	movwf	eval_poly@res
  8775  0970  3F01               	moviw [1]fsr0
  8776  0971  00D5               	movwf	eval_poly@res+1
  8777  0972  3F02               	moviw [2]fsr0
  8778  0973                     L2:	
  8779  0973  00D6               	movwf	eval_poly@res+2
  8780  0974  0852               	movf	eval_poly@n,w
  8781  0975  0453               	iorwf	eval_poly@n+1,w
  8782  0976  1903               	btfsc	3,2
  8783  0977  29B4               	goto	l3522
  8784  0978  30FF               	movlw	255
  8785  0979  07D2               	addwf	eval_poly@n,f
  8786  097A  30FF               	movlw	255
  8787  097B  3DD3               	addwfc	eval_poly@n+1,f
  8788  097C  0853               	movf	eval_poly@n+1,w
  8789  097D  00FA               	movwf	___wmul@multiplier+1
  8790  097E  0852               	movf	eval_poly@n,w
  8791  097F  00F9               	movwf	___wmul@multiplier
  8792  0980  3003               	movlw	3
  8793  0981  00FB               	movwf	___wmul@multiplicand
  8794  0982  3000               	movlw	0
  8795  0983  00FC               	movwf	___wmul@multiplicand+1
  8796  0984  3194  246F  3189   	fcall	___wmul
  8797  0987  0020               	movlb	0	; select bank0
  8798  0988  0850               	movf	eval_poly@d,w
  8799  0989  0779               	addwf	?___wmul,w
  8800  098A  0084               	movwf	4
  8801  098B  0851               	movf	eval_poly@d+1,w
  8802  098C  3D7A               	addwfc	?___wmul+1,w
  8803  098D  0085               	movwf	5
  8804  098E  3F00               	moviw [0]fsr0
  8805  098F  00C0               	movwf	___ftadd@f1
  8806  0990  3F01               	moviw [1]fsr0
  8807  0991  00C1               	movwf	___ftadd@f1+1
  8808  0992  3F02               	moviw [2]fsr0
  8809  0993  00C2               	movwf	___ftadd@f1+2
  8810  0994  0854               	movf	eval_poly@res,w
  8811  0995  00B0               	movwf	___ftmul@f1
  8812  0996  0855               	movf	eval_poly@res+1,w
  8813  0997  00B1               	movwf	___ftmul@f1+1
  8814  0998  0856               	movf	eval_poly@res+2,w
  8815  0999  00B2               	movwf	___ftmul@f1+2
  8816  099A  084D               	movf	eval_poly@x,w
  8817  099B  00B3               	movwf	___ftmul@f2
  8818  099C  084E               	movf	eval_poly@x+1,w
  8819  099D  00B4               	movwf	___ftmul@f2+1
  8820  099E  084F               	movf	eval_poly@x+2,w
  8821  099F  00B5               	movwf	___ftmul@f2+2
  8822  09A0  318D  259D  3189   	fcall	___ftmul
  8823  09A3  0020               	movlb	0	; select bank0
  8824  09A4  0830               	movf	?___ftmul,w
  8825  09A5  00C3               	movwf	___ftadd@f2
  8826  09A6  0831               	movf	?___ftmul+1,w
  8827  09A7  00C4               	movwf	___ftadd@f2+1
  8828  09A8  0832               	movf	?___ftmul+2,w
  8829  09A9  00C5               	movwf	___ftadd@f2+2
  8830  09AA  318F  270A  3189   	fcall	___ftadd
  8831  09AD  0020               	movlb	0	; select bank0
  8832  09AE  0840               	movf	?___ftadd,w
  8833  09AF  00D4               	movwf	eval_poly@res
  8834  09B0  0841               	movf	?___ftadd+1,w
  8835  09B1  00D5               	movwf	eval_poly@res+1
  8836  09B2  0842               	movf	?___ftadd+2,w
  8837  09B3  2973               	goto	L2
  8838  09B4                     l3522:	
  8839  09B4  0854               	movf	eval_poly@res,w
  8840  09B5  00CD               	movwf	?_eval_poly
  8841  09B6  0855               	movf	eval_poly@res+1,w
  8842  09B7  00CE               	movwf	?_eval_poly+1
  8843  09B8  0856               	movf	eval_poly@res+2,w
  8844  09B9  00CF               	movwf	?_eval_poly+2
  8845  09BA  0008               	return
  8846  09BB                     __end_of_eval_poly:	
  8847                           
  8848                           	psect	text5
  8849  0D9D                     __ptext5:	
  8850 ;; *************** function ___ftmul *****************
  8851 ;; Defined at:
  8852 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
  8853 ;; Parameters:    Size  Location     Type
  8854 ;;  f1              3   16[BANK0 ] float 
  8855 ;;  f2              3   19[BANK0 ] float 
  8856 ;; Auto vars:     Size  Location     Type
  8857 ;;  f3_as_produc    3   27[BANK0 ] unsigned um
  8858 ;;  sign            1   31[BANK0 ] unsigned char 
  8859 ;;  cntr            1   30[BANK0 ] unsigned char 
  8860 ;;  exp             1   26[BANK0 ] unsigned char 
  8861 ;; Return value:  Size  Location     Type
  8862 ;;                  3   16[BANK0 ] float 
  8863 ;; Registers used:
  8864 ;;		wreg, status,2, status,0, pclath, cstack
  8865 ;; Tracked objects:
  8866 ;;		On entry : 0/0
  8867 ;;		On exit  : 0/0
  8868 ;;		Unchanged: 0/0
  8869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8870 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8871 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8872 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8873 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8874 ;;Total ram usage:       16 bytes
  8875 ;; Hardware stack levels used:    1
  8876 ;; Hardware stack levels required when called:    1
  8877 ;; This function calls:
  8878 ;;		___ftpack
  8879 ;; This function is called by:
  8880 ;;		_main
  8881 ;;		_tempCalc
  8882 ;;		_log
  8883 ;;		_eval_poly
  8884 ;; This function uses a non-reentrant model
  8885 ;;
  8886                           
  8887                           
  8888                           ;psect for function ___ftmul
  8889  0D9D                     ___ftmul:	
  8890                           
  8891                           ;incstack = 0
  8892                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  8893  0D9D  0020               	movlb	0	; select bank0
  8894  0D9E  0830               	movf	___ftmul@f1,w
  8895  0D9F  00B6               	movwf	??___ftmul
  8896  0DA0  0831               	movf	___ftmul@f1+1,w
  8897  0DA1  00B7               	movwf	??___ftmul+1
  8898  0DA2  0832               	movf	___ftmul@f1+2,w
  8899  0DA3  00B8               	movwf	??___ftmul+2
  8900  0DA4  1003               	clrc
  8901  0DA5  0D37               	rlf	??___ftmul+1,w
  8902  0DA6  0D38               	rlf	??___ftmul+2,w
  8903  0DA7  00B9               	movwf	??___ftmul+3
  8904  0DA8  0839               	movf	??___ftmul+3,w
  8905  0DA9  00BA               	movwf	___ftmul@exp
  8906  0DAA  083A               	movf	___ftmul@exp,w
  8907  0DAB  1D03               	btfss	3,2
  8908  0DAC  2DB4               	goto	l3406
  8909  0DAD  3000               	movlw	0
  8910  0DAE  00B0               	movwf	?___ftmul
  8911  0DAF  3000               	movlw	0
  8912  0DB0  00B1               	movwf	?___ftmul+1
  8913  0DB1  3000               	movlw	0
  8914  0DB2  00B2               	movwf	?___ftmul+2
  8915  0DB3  0008               	return
  8916  0DB4                     l3406:	
  8917  0DB4  0833               	movf	___ftmul@f2,w
  8918  0DB5  00B6               	movwf	??___ftmul
  8919  0DB6  0834               	movf	___ftmul@f2+1,w
  8920  0DB7  00B7               	movwf	??___ftmul+1
  8921  0DB8  0835               	movf	___ftmul@f2+2,w
  8922  0DB9  00B8               	movwf	??___ftmul+2
  8923  0DBA  1003               	clrc
  8924  0DBB  0D37               	rlf	??___ftmul+1,w
  8925  0DBC  0D38               	rlf	??___ftmul+2,w
  8926  0DBD  00B9               	movwf	??___ftmul+3
  8927  0DBE  0839               	movf	??___ftmul+3,w
  8928  0DBF  00BF               	movwf	___ftmul@sign
  8929  0DC0  083F               	movf	___ftmul@sign,w
  8930  0DC1  1D03               	btfss	3,2
  8931  0DC2  2DCA               	goto	l3412
  8932  0DC3  3000               	movlw	0
  8933  0DC4  00B0               	movwf	?___ftmul
  8934  0DC5  3000               	movlw	0
  8935  0DC6  00B1               	movwf	?___ftmul+1
  8936  0DC7  3000               	movlw	0
  8937  0DC8  00B2               	movwf	?___ftmul+2
  8938  0DC9  0008               	return
  8939  0DCA                     l3412:	
  8940  0DCA  083F               	movf	___ftmul@sign,w
  8941  0DCB  3E7B               	addlw	123
  8942  0DCC  00B6               	movwf	??___ftmul
  8943  0DCD  0836               	movf	??___ftmul,w
  8944  0DCE  07BA               	addwf	___ftmul@exp,f
  8945  0DCF  0830               	movf	___ftmul@f1,w
  8946  0DD0  00B6               	movwf	??___ftmul
  8947  0DD1  0831               	movf	___ftmul@f1+1,w
  8948  0DD2  00B7               	movwf	??___ftmul+1
  8949  0DD3  0832               	movf	___ftmul@f1+2,w
  8950  0DD4  00B8               	movwf	??___ftmul+2
  8951  0DD5  3010               	movlw	16
  8952  0DD6                     u4025:	
  8953  0DD6  36B8               	lsrf	??___ftmul+2,f
  8954  0DD7  0CB7               	rrf	??___ftmul+1,f
  8955  0DD8  0CB6               	rrf	??___ftmul,f
  8956  0DD9  0B89               	decfsz	9,f
  8957  0DDA  2DD6               	goto	u4025
  8958  0DDB  0836               	movf	??___ftmul,w
  8959  0DDC  00B9               	movwf	??___ftmul+3
  8960  0DDD  0839               	movf	??___ftmul+3,w
  8961  0DDE  00BF               	movwf	___ftmul@sign
  8962  0DDF  0833               	movf	___ftmul@f2,w
  8963  0DE0  00B6               	movwf	??___ftmul
  8964  0DE1  0834               	movf	___ftmul@f2+1,w
  8965  0DE2  00B7               	movwf	??___ftmul+1
  8966  0DE3  0835               	movf	___ftmul@f2+2,w
  8967  0DE4  00B8               	movwf	??___ftmul+2
  8968  0DE5  3010               	movlw	16
  8969  0DE6                     u4035:	
  8970  0DE6  36B8               	lsrf	??___ftmul+2,f
  8971  0DE7  0CB7               	rrf	??___ftmul+1,f
  8972  0DE8  0CB6               	rrf	??___ftmul,f
  8973  0DE9  0B89               	decfsz	9,f
  8974  0DEA  2DE6               	goto	u4035
  8975  0DEB  0836               	movf	??___ftmul,w
  8976  0DEC  00B9               	movwf	??___ftmul+3
  8977  0DED  0839               	movf	??___ftmul+3,w
  8978  0DEE  06BF               	xorwf	___ftmul@sign,f
  8979  0DEF  3080               	movlw	128
  8980  0DF0  00B6               	movwf	??___ftmul
  8981  0DF1  0836               	movf	??___ftmul,w
  8982  0DF2  05BF               	andwf	___ftmul@sign,f
  8983  0DF3  17B1               	bsf	___ftmul@f1+1,7
  8984  0DF4  17B4               	bsf	___ftmul@f2+1,7
  8985  0DF5  30FF               	movlw	255
  8986  0DF6  05B3               	andwf	___ftmul@f2,f
  8987  0DF7  30FF               	movlw	255
  8988  0DF8  05B4               	andwf	___ftmul@f2+1,f
  8989  0DF9  3000               	movlw	0
  8990  0DFA  05B5               	andwf	___ftmul@f2+2,f
  8991  0DFB  3000               	movlw	0
  8992  0DFC  00BB               	movwf	___ftmul@f3_as_product
  8993  0DFD  3000               	movlw	0
  8994  0DFE  00BC               	movwf	___ftmul@f3_as_product+1
  8995  0DFF  3000               	movlw	0
  8996  0E00  00BD               	movwf	___ftmul@f3_as_product+2
  8997  0E01  3007               	movlw	7
  8998  0E02  00B6               	movwf	??___ftmul
  8999  0E03  0836               	movf	??___ftmul,w
  9000  0E04  00BE               	movwf	___ftmul@cntr
  9001  0E05                     l3424:	
  9002  0E05  1C30               	btfss	___ftmul@f1,0
  9003  0E06  2E0D               	goto	l3428
  9004  0E07  0833               	movf	___ftmul@f2,w
  9005  0E08  07BB               	addwf	___ftmul@f3_as_product,f
  9006  0E09  0834               	movf	___ftmul@f2+1,w
  9007  0E0A  3DBC               	addwfc	___ftmul@f3_as_product+1,f
  9008  0E0B  0835               	movf	___ftmul@f2+2,w
  9009  0E0C  3DBD               	addwfc	___ftmul@f3_as_product+2,f
  9010  0E0D                     l3428:	
  9011  0E0D  3001               	movlw	1
  9012  0E0E                     u4055:	
  9013  0E0E  36B2               	lsrf	___ftmul@f1+2,f
  9014  0E0F  0CB1               	rrf	___ftmul@f1+1,f
  9015  0E10  0CB0               	rrf	___ftmul@f1,f
  9016  0E11  0B89               	decfsz	9,f
  9017  0E12  2E0E               	goto	u4055
  9018  0E13  3001               	movlw	1
  9019  0E14                     u4065:	
  9020  0E14  35B3               	lslf	___ftmul@f2,f
  9021  0E15  0DB4               	rlf	___ftmul@f2+1,f
  9022  0E16  0DB5               	rlf	___ftmul@f2+2,f
  9023  0E17  0B89               	decfsz	9,f
  9024  0E18  2E14               	goto	u4065
  9025  0E19  3001               	movlw	1
  9026  0E1A  02BE               	subwf	___ftmul@cntr,f
  9027  0E1B  1D03               	btfss	3,2
  9028  0E1C  2E05               	goto	l3424
  9029  0E1D  3009               	movlw	9
  9030  0E1E  00B6               	movwf	??___ftmul
  9031  0E1F  0836               	movf	??___ftmul,w
  9032  0E20  00BE               	movwf	___ftmul@cntr
  9033  0E21                     l3436:	
  9034  0E21  1C30               	btfss	___ftmul@f1,0
  9035  0E22  2E29               	goto	l3440
  9036  0E23  0833               	movf	___ftmul@f2,w
  9037  0E24  07BB               	addwf	___ftmul@f3_as_product,f
  9038  0E25  0834               	movf	___ftmul@f2+1,w
  9039  0E26  3DBC               	addwfc	___ftmul@f3_as_product+1,f
  9040  0E27  0835               	movf	___ftmul@f2+2,w
  9041  0E28  3DBD               	addwfc	___ftmul@f3_as_product+2,f
  9042  0E29                     l3440:	
  9043  0E29  3001               	movlw	1
  9044  0E2A                     u4095:	
  9045  0E2A  36B2               	lsrf	___ftmul@f1+2,f
  9046  0E2B  0CB1               	rrf	___ftmul@f1+1,f
  9047  0E2C  0CB0               	rrf	___ftmul@f1,f
  9048  0E2D  0B89               	decfsz	9,f
  9049  0E2E  2E2A               	goto	u4095
  9050  0E2F  3001               	movlw	1
  9051  0E30                     u4105:	
  9052  0E30  36BD               	lsrf	___ftmul@f3_as_product+2,f
  9053  0E31  0CBC               	rrf	___ftmul@f3_as_product+1,f
  9054  0E32  0CBB               	rrf	___ftmul@f3_as_product,f
  9055  0E33  0B89               	decfsz	9,f
  9056  0E34  2E30               	goto	u4105
  9057  0E35  3001               	movlw	1
  9058  0E36  02BE               	subwf	___ftmul@cntr,f
  9059  0E37  1D03               	btfss	3,2
  9060  0E38  2E21               	goto	l3436
  9061  0E39  083B               	movf	___ftmul@f3_as_product,w
  9062  0E3A  00F0               	movwf	___ftpack@arg
  9063  0E3B  083C               	movf	___ftmul@f3_as_product+1,w
  9064  0E3C  00F1               	movwf	___ftpack@arg+1
  9065  0E3D  083D               	movf	___ftmul@f3_as_product+2,w
  9066  0E3E  00F2               	movwf	___ftpack@arg+2
  9067  0E3F  083A               	movf	___ftmul@exp,w
  9068  0E40  00B6               	movwf	??___ftmul
  9069  0E41  0836               	movf	??___ftmul,w
  9070  0E42  00F3               	movwf	___ftpack@exp
  9071  0E43  083F               	movf	___ftmul@sign,w
  9072  0E44  00B7               	movwf	??___ftmul+1
  9073  0E45  0837               	movf	??___ftmul+1,w
  9074  0E46  00F4               	movwf	___ftpack@sign
  9075  0E47  3189  21BB         	fcall	___ftpack
  9076  0E49  0870               	movf	?___ftpack,w
  9077  0E4A  0020               	movlb	0	; select bank0
  9078  0E4B  00B0               	movwf	?___ftmul
  9079  0E4C  0871               	movf	?___ftpack+1,w
  9080  0E4D  00B1               	movwf	?___ftmul+1
  9081  0E4E  0872               	movf	?___ftpack+2,w
  9082  0E4F  00B2               	movwf	?___ftmul+2
  9083  0E50  0008               	return
  9084  0E51                     __end_of___ftmul:	
  9085                           
  9086                           	psect	text6
  9087  15FA                     __ptext6:	
  9088 ;; *************** function ___ftge *****************
  9089 ;; Defined at:
  9090 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftge.c"
  9091 ;; Parameters:    Size  Location     Type
  9092 ;;  ff1             3    0[COMMON] float 
  9093 ;;  ff2             3    3[COMMON] float 
  9094 ;; Auto vars:     Size  Location     Type
  9095 ;;		None
  9096 ;; Return value:  Size  Location     Type
  9097 ;;		None               void
  9098 ;; Registers used:
  9099 ;;		wreg, status,2, status,0
  9100 ;; Tracked objects:
  9101 ;;		On entry : 0/0
  9102 ;;		On exit  : 0/0
  9103 ;;		Unchanged: 0/0
  9104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9105 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9107 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9108 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9109 ;;Total ram usage:        9 bytes
  9110 ;; Hardware stack levels used:    1
  9111 ;; This function calls:
  9112 ;;		Nothing
  9113 ;; This function is called by:
  9114 ;;		_log
  9115 ;; This function uses a non-reentrant model
  9116 ;;
  9117                           
  9118                           
  9119                           ;psect for function ___ftge
  9120  15FA                     ___ftge:	
  9121                           
  9122                           ;incstack = 0
  9123                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  9124  15FA  1FF2               	btfss	___ftge@ff1+2,7
  9125  15FB  2E10               	goto	l3480
  9126  15FC  0970               	comf	___ftge@ff1,w
  9127  15FD  00F6               	movwf	??___ftge
  9128  15FE  0971               	comf	___ftge@ff1+1,w
  9129  15FF  00F7               	movwf	??___ftge+1
  9130  1600  0972               	comf	___ftge@ff1+2,w
  9131  1601  00F8               	movwf	??___ftge+2
  9132  1602  0AF6               	incf	??___ftge,f
  9133  1603  1903               	skipnz
  9134  1604  0AF7               	incf	??___ftge+1,f
  9135  1605  1903               	skipnz
  9136  1606  0AF8               	incf	??___ftge+2,f
  9137  1607  3000               	movlw	0
  9138  1608  0776               	addwf	??___ftge,w
  9139  1609  00F0               	movwf	___ftge@ff1
  9140  160A  3000               	movlw	0
  9141  160B  3D77               	addwfc	??___ftge+1,w
  9142  160C  00F1               	movwf	___ftge@ff1+1
  9143  160D  3080               	movlw	128
  9144  160E  3D78               	addwfc	??___ftge+2,w
  9145  160F  00F2               	movwf	___ftge@ff1+2
  9146  1610                     l3480:	
  9147  1610  1FF5               	btfss	___ftge@ff2+2,7
  9148  1611  2E26               	goto	l3484
  9149  1612  0973               	comf	___ftge@ff2,w
  9150  1613  00F6               	movwf	??___ftge
  9151  1614  0974               	comf	___ftge@ff2+1,w
  9152  1615  00F7               	movwf	??___ftge+1
  9153  1616  0975               	comf	___ftge@ff2+2,w
  9154  1617  00F8               	movwf	??___ftge+2
  9155  1618  0AF6               	incf	??___ftge,f
  9156  1619  1903               	skipnz
  9157  161A  0AF7               	incf	??___ftge+1,f
  9158  161B  1903               	skipnz
  9159  161C  0AF8               	incf	??___ftge+2,f
  9160  161D  3000               	movlw	0
  9161  161E  0776               	addwf	??___ftge,w
  9162  161F  00F3               	movwf	___ftge@ff2
  9163  1620  3000               	movlw	0
  9164  1621  3D77               	addwfc	??___ftge+1,w
  9165  1622  00F4               	movwf	___ftge@ff2+1
  9166  1623  3080               	movlw	128
  9167  1624  3D78               	addwfc	??___ftge+2,w
  9168  1625  00F5               	movwf	___ftge@ff2+2
  9169  1626                     l3484:	
  9170  1626  3080               	movlw	128
  9171  1627  06F2               	xorwf	___ftge@ff1+2,f
  9172  1628  3080               	movlw	128
  9173  1629  06F5               	xorwf	___ftge@ff2+2,f
  9174  162A  0875               	movf	___ftge@ff2+2,w
  9175  162B  0272               	subwf	___ftge@ff1+2,w
  9176  162C  1D03               	skipz
  9177  162D  0008               	return
  9178  162E  0874               	movf	___ftge@ff2+1,w
  9179  162F  0271               	subwf	___ftge@ff1+1,w
  9180  1630  1D03               	skipz
  9181  1631  0008               	return
  9182  1632  0873               	movf	___ftge@ff2,w
  9183  1633  0270               	subwf	___ftge@ff1,w
  9184  1634  0008               	return
  9185  1635                     __end_of___ftge:	
  9186                           
  9187                           	psect	text7
  9188  148D                     __ptext7:	
  9189 ;; *************** function ___ftsub *****************
  9190 ;; Defined at:
  9191 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftsub.c"
  9192 ;; Parameters:    Size  Location     Type
  9193 ;;  f2              3   45[BANK0 ] float 
  9194 ;;  f1              3   48[BANK0 ] float 
  9195 ;; Auto vars:     Size  Location     Type
  9196 ;;		None
  9197 ;; Return value:  Size  Location     Type
  9198 ;;                  3   45[BANK0 ] float 
  9199 ;; Registers used:
  9200 ;;		wreg, status,2, status,0, pclath, cstack
  9201 ;; Tracked objects:
  9202 ;;		On entry : 0/0
  9203 ;;		On exit  : 0/0
  9204 ;;		Unchanged: 0/0
  9205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9206 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9209 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9210 ;;Total ram usage:        6 bytes
  9211 ;; Hardware stack levels used:    1
  9212 ;; Hardware stack levels required when called:    2
  9213 ;; This function calls:
  9214 ;;		___ftadd
  9215 ;; This function is called by:
  9216 ;;		_tempCalc
  9217 ;; This function uses a non-reentrant model
  9218 ;;
  9219                           
  9220                           
  9221                           ;psect for function ___ftsub
  9222  148D                     ___ftsub:	
  9223                           
  9224                           ;incstack = 0
  9225                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  9226  148D  0020               	movlb	0	; select bank0
  9227  148E  084F               	movf	___ftsub@f2+2,w
  9228  148F  044E               	iorwf	___ftsub@f2+1,w
  9229  1490  044D               	iorwf	___ftsub@f2,w
  9230  1491  1903               	skipnz
  9231  1492  2C95               	goto	l3844
  9232  1493  3080               	movlw	128
  9233  1494  06CF               	xorwf	___ftsub@f2+2,f
  9234  1495                     l3844:	
  9235  1495  0850               	movf	___ftsub@f1,w
  9236  1496  00C0               	movwf	___ftadd@f1
  9237  1497  0851               	movf	___ftsub@f1+1,w
  9238  1498  00C1               	movwf	___ftadd@f1+1
  9239  1499  0852               	movf	___ftsub@f1+2,w
  9240  149A  00C2               	movwf	___ftadd@f1+2
  9241  149B  084D               	movf	___ftsub@f2,w
  9242  149C  00C3               	movwf	___ftadd@f2
  9243  149D  084E               	movf	___ftsub@f2+1,w
  9244  149E  00C4               	movwf	___ftadd@f2+1
  9245  149F  084F               	movf	___ftsub@f2+2,w
  9246  14A0  00C5               	movwf	___ftadd@f2+2
  9247  14A1  318F  270A         	fcall	___ftadd
  9248  14A3  0020               	movlb	0	; select bank0
  9249  14A4  0840               	movf	?___ftadd,w
  9250  14A5  00CD               	movwf	?___ftsub
  9251  14A6  0841               	movf	?___ftadd+1,w
  9252  14A7  00CE               	movwf	?___ftsub+1
  9253  14A8  0842               	movf	?___ftadd+2,w
  9254  14A9  00CF               	movwf	?___ftsub+2
  9255  14AA  0008               	return
  9256  14AB                     __end_of___ftsub:	
  9257                           
  9258                           	psect	text8
  9259  0F0A                     __ptext8:	
  9260 ;; *************** function ___ftadd *****************
  9261 ;; Defined at:
  9262 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
  9263 ;; Parameters:    Size  Location     Type
  9264 ;;  f1              3   32[BANK0 ] float 
  9265 ;;  f2              3   35[BANK0 ] float 
  9266 ;; Auto vars:     Size  Location     Type
  9267 ;;  exp1            1   44[BANK0 ] unsigned char 
  9268 ;;  exp2            1   43[BANK0 ] unsigned char 
  9269 ;;  sign            1   42[BANK0 ] unsigned char 
  9270 ;; Return value:  Size  Location     Type
  9271 ;;                  3   32[BANK0 ] float 
  9272 ;; Registers used:
  9273 ;;		wreg, status,2, status,0, pclath, cstack
  9274 ;; Tracked objects:
  9275 ;;		On entry : 0/0
  9276 ;;		On exit  : 0/0
  9277 ;;		Unchanged: 0/0
  9278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9279 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9280 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9281 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9282 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9283 ;;Total ram usage:       13 bytes
  9284 ;; Hardware stack levels used:    1
  9285 ;; Hardware stack levels required when called:    1
  9286 ;; This function calls:
  9287 ;;		___ftpack
  9288 ;; This function is called by:
  9289 ;;		_tempCalc
  9290 ;;		___ftsub
  9291 ;;		_log
  9292 ;;		_eval_poly
  9293 ;; This function uses a non-reentrant model
  9294 ;;
  9295                           
  9296                           
  9297                           ;psect for function ___ftadd
  9298  0F0A                     ___ftadd:	
  9299                           
  9300                           ;incstack = 0
  9301                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  9302  0F0A  0020               	movlb	0	; select bank0
  9303  0F0B  0840               	movf	___ftadd@f1,w
  9304  0F0C  00C6               	movwf	??___ftadd
  9305  0F0D  0841               	movf	___ftadd@f1+1,w
  9306  0F0E  00C7               	movwf	??___ftadd+1
  9307  0F0F  0842               	movf	___ftadd@f1+2,w
  9308  0F10  00C8               	movwf	??___ftadd+2
  9309  0F11  1003               	clrc
  9310  0F12  0D47               	rlf	??___ftadd+1,w
  9311  0F13  0D48               	rlf	??___ftadd+2,w
  9312  0F14  00C9               	movwf	??___ftadd+3
  9313  0F15  0849               	movf	??___ftadd+3,w
  9314  0F16  00CC               	movwf	___ftadd@exp1
  9315  0F17  0843               	movf	___ftadd@f2,w
  9316  0F18  00C6               	movwf	??___ftadd
  9317  0F19  0844               	movf	___ftadd@f2+1,w
  9318  0F1A  00C7               	movwf	??___ftadd+1
  9319  0F1B  0845               	movf	___ftadd@f2+2,w
  9320  0F1C  00C8               	movwf	??___ftadd+2
  9321  0F1D  1003               	clrc
  9322  0F1E  0D47               	rlf	??___ftadd+1,w
  9323  0F1F  0D48               	rlf	??___ftadd+2,w
  9324  0F20  00C9               	movwf	??___ftadd+3
  9325  0F21  0849               	movf	??___ftadd+3,w
  9326  0F22  00CB               	movwf	___ftadd@exp2
  9327  0F23  084C               	movf	___ftadd@exp1,w
  9328  0F24  1903               	btfsc	3,2
  9329  0F25  2F32               	goto	l3336
  9330  0F26  084B               	movf	___ftadd@exp2,w
  9331  0F27  024C               	subwf	___ftadd@exp1,w
  9332  0F28  1803               	skipnc
  9333  0F29  2F39               	goto	l3340
  9334  0F2A  034C               	decf	___ftadd@exp1,w
  9335  0F2B  3AFF               	xorlw	255
  9336  0F2C  074B               	addwf	___ftadd@exp2,w
  9337  0F2D  00C6               	movwf	??___ftadd
  9338  0F2E  3019               	movlw	25
  9339  0F2F  0246               	subwf	??___ftadd,w
  9340  0F30  1C03               	skipc
  9341  0F31  2F39               	goto	l3340
  9342  0F32                     l3336:	
  9343  0F32  0843               	movf	___ftadd@f2,w
  9344  0F33  00C0               	movwf	?___ftadd
  9345  0F34  0844               	movf	___ftadd@f2+1,w
  9346  0F35  00C1               	movwf	?___ftadd+1
  9347  0F36  0845               	movf	___ftadd@f2+2,w
  9348  0F37  00C2               	movwf	?___ftadd+2
  9349  0F38  0008               	return
  9350  0F39                     l3340:	
  9351  0F39  084B               	movf	___ftadd@exp2,w
  9352  0F3A  1903               	btfsc	3,2
  9353  0F3B  0008               	return
  9354  0F3C  084C               	movf	___ftadd@exp1,w
  9355  0F3D  024B               	subwf	___ftadd@exp2,w
  9356  0F3E  1803               	skipnc
  9357  0F3F  2F48               	goto	l3346
  9358  0F40  034B               	decf	___ftadd@exp2,w
  9359  0F41  3AFF               	xorlw	255
  9360  0F42  074C               	addwf	___ftadd@exp1,w
  9361  0F43  00C6               	movwf	??___ftadd
  9362  0F44  3019               	movlw	25
  9363  0F45  0246               	subwf	??___ftadd,w
  9364  0F46  1803               	btfsc	3,0
  9365  0F47  0008               	return
  9366  0F48                     l3346:	
  9367  0F48  3006               	movlw	6
  9368  0F49  00C6               	movwf	??___ftadd
  9369  0F4A  0846               	movf	??___ftadd,w
  9370  0F4B  00CA               	movwf	___ftadd@sign
  9371  0F4C  1BC2               	btfsc	___ftadd@f1+2,7
  9372  0F4D  17CA               	bsf	___ftadd@sign,7
  9373  0F4E  1BC5               	btfsc	___ftadd@f2+2,7
  9374  0F4F  174A               	bsf	___ftadd@sign,6
  9375  0F50  17C1               	bsf	___ftadd@f1+1,7
  9376  0F51  30FF               	movlw	255
  9377  0F52  05C0               	andwf	___ftadd@f1,f
  9378  0F53  30FF               	movlw	255
  9379  0F54  05C1               	andwf	___ftadd@f1+1,f
  9380  0F55  3000               	movlw	0
  9381  0F56  05C2               	andwf	___ftadd@f1+2,f
  9382  0F57  17C4               	bsf	___ftadd@f2+1,7
  9383  0F58  30FF               	movlw	255
  9384  0F59  05C3               	andwf	___ftadd@f2,f
  9385  0F5A  30FF               	movlw	255
  9386  0F5B  05C4               	andwf	___ftadd@f2+1,f
  9387  0F5C  3000               	movlw	0
  9388  0F5D  05C5               	andwf	___ftadd@f2+2,f
  9389  0F5E  084B               	movf	___ftadd@exp2,w
  9390  0F5F  024C               	subwf	___ftadd@exp1,w
  9391  0F60  1803               	skipnc
  9392  0F61  2F84               	goto	l3368
  9393  0F62                     l3358:	
  9394  0F62  3001               	movlw	1
  9395  0F63                     u3865:	
  9396  0F63  35C3               	lslf	___ftadd@f2,f
  9397  0F64  0DC4               	rlf	___ftadd@f2+1,f
  9398  0F65  0DC5               	rlf	___ftadd@f2+2,f
  9399  0F66  0B89               	decfsz	9,f
  9400  0F67  2F63               	goto	u3865
  9401  0F68  3001               	movlw	1
  9402  0F69  02CB               	subwf	___ftadd@exp2,f
  9403  0F6A  084B               	movf	___ftadd@exp2,w
  9404  0F6B  064C               	xorwf	___ftadd@exp1,w
  9405  0F6C  1903               	skipnz
  9406  0F6D  2F7F               	goto	l3366
  9407  0F6E  3001               	movlw	1
  9408  0F6F  02CA               	subwf	___ftadd@sign,f
  9409  0F70  084A               	movf	___ftadd@sign,w
  9410  0F71  3907               	andlw	7
  9411  0F72  1903               	btfsc	3,2
  9412  0F73  2F7F               	goto	l3366
  9413  0F74  2F62               	goto	l3358
  9414  0F75                     l3364:	
  9415  0F75  3001               	movlw	1
  9416  0F76                     u3895:	
  9417  0F76  36C2               	lsrf	___ftadd@f1+2,f
  9418  0F77  0CC1               	rrf	___ftadd@f1+1,f
  9419  0F78  0CC0               	rrf	___ftadd@f1,f
  9420  0F79  0B89               	decfsz	9,f
  9421  0F7A  2F76               	goto	u3895
  9422  0F7B  3001               	movlw	1
  9423  0F7C  00C6               	movwf	??___ftadd
  9424  0F7D  0846               	movf	??___ftadd,w
  9425  0F7E  07CC               	addwf	___ftadd@exp1,f
  9426  0F7F                     l3366:	
  9427  0F7F  084C               	movf	___ftadd@exp1,w
  9428  0F80  064B               	xorwf	___ftadd@exp2,w
  9429  0F81  1903               	btfsc	3,2
  9430  0F82  2FA9               	goto	l758
  9431  0F83  2F75               	goto	l3364
  9432  0F84                     l3368:	
  9433  0F84  084C               	movf	___ftadd@exp1,w
  9434  0F85  024B               	subwf	___ftadd@exp2,w
  9435  0F86  1803               	skipnc
  9436  0F87  2FA9               	goto	l758
  9437  0F88                     l3370:	
  9438  0F88  3001               	movlw	1
  9439  0F89                     u3925:	
  9440  0F89  35C0               	lslf	___ftadd@f1,f
  9441  0F8A  0DC1               	rlf	___ftadd@f1+1,f
  9442  0F8B  0DC2               	rlf	___ftadd@f1+2,f
  9443  0F8C  0B89               	decfsz	9,f
  9444  0F8D  2F89               	goto	u3925
  9445  0F8E  3001               	movlw	1
  9446  0F8F  02CC               	subwf	___ftadd@exp1,f
  9447  0F90  084B               	movf	___ftadd@exp2,w
  9448  0F91  064C               	xorwf	___ftadd@exp1,w
  9449  0F92  1903               	skipnz
  9450  0F93  2FA5               	goto	l3378
  9451  0F94  3001               	movlw	1
  9452  0F95  02CA               	subwf	___ftadd@sign,f
  9453  0F96  084A               	movf	___ftadd@sign,w
  9454  0F97  3907               	andlw	7
  9455  0F98  1903               	btfsc	3,2
  9456  0F99  2FA5               	goto	l3378
  9457  0F9A  2F88               	goto	l3370
  9458  0F9B                     l3376:	
  9459  0F9B  3001               	movlw	1
  9460  0F9C                     u3955:	
  9461  0F9C  36C5               	lsrf	___ftadd@f2+2,f
  9462  0F9D  0CC4               	rrf	___ftadd@f2+1,f
  9463  0F9E  0CC3               	rrf	___ftadd@f2,f
  9464  0F9F  0B89               	decfsz	9,f
  9465  0FA0  2F9C               	goto	u3955
  9466  0FA1  3001               	movlw	1
  9467  0FA2  00C6               	movwf	??___ftadd
  9468  0FA3  0846               	movf	??___ftadd,w
  9469  0FA4  07CB               	addwf	___ftadd@exp2,f
  9470  0FA5                     l3378:	
  9471  0FA5  084C               	movf	___ftadd@exp1,w
  9472  0FA6  064B               	xorwf	___ftadd@exp2,w
  9473  0FA7  1D03               	skipz
  9474  0FA8  2F9B               	goto	l3376
  9475  0FA9                     l758:	
  9476  0FA9  1FCA               	btfss	___ftadd@sign,7
  9477  0FAA  2FBB               	goto	l3382
  9478  0FAB  30FF               	movlw	255
  9479  0FAC  06C0               	xorwf	___ftadd@f1,f
  9480  0FAD  30FF               	movlw	255
  9481  0FAE  06C1               	xorwf	___ftadd@f1+1,f
  9482  0FAF  30FF               	movlw	255
  9483  0FB0  06C2               	xorwf	___ftadd@f1+2,f
  9484  0FB1  3001               	movlw	1
  9485  0FB2  07C0               	addwf	___ftadd@f1,f
  9486  0FB3  3000               	movlw	0
  9487  0FB4  1803               	skipnc
  9488  0FB5  3001               	movlw	1
  9489  0FB6  07C1               	addwf	___ftadd@f1+1,f
  9490  0FB7  3000               	movlw	0
  9491  0FB8  1803               	skipnc
  9492  0FB9  3001               	movlw	1
  9493  0FBA  07C2               	addwf	___ftadd@f1+2,f
  9494  0FBB                     l3382:	
  9495  0FBB  1F4A               	btfss	___ftadd@sign,6
  9496  0FBC  2FCD               	goto	l3386
  9497  0FBD  30FF               	movlw	255
  9498  0FBE  06C3               	xorwf	___ftadd@f2,f
  9499  0FBF  30FF               	movlw	255
  9500  0FC0  06C4               	xorwf	___ftadd@f2+1,f
  9501  0FC1  30FF               	movlw	255
  9502  0FC2  06C5               	xorwf	___ftadd@f2+2,f
  9503  0FC3  3001               	movlw	1
  9504  0FC4  07C3               	addwf	___ftadd@f2,f
  9505  0FC5  3000               	movlw	0
  9506  0FC6  1803               	skipnc
  9507  0FC7  3001               	movlw	1
  9508  0FC8  07C4               	addwf	___ftadd@f2+1,f
  9509  0FC9  3000               	movlw	0
  9510  0FCA  1803               	skipnc
  9511  0FCB  3001               	movlw	1
  9512  0FCC  07C5               	addwf	___ftadd@f2+2,f
  9513  0FCD                     l3386:	
  9514  0FCD  01CA               	clrf	___ftadd@sign
  9515  0FCE  0840               	movf	___ftadd@f1,w
  9516  0FCF  07C3               	addwf	___ftadd@f2,f
  9517  0FD0  0841               	movf	___ftadd@f1+1,w
  9518  0FD1  3DC4               	addwfc	___ftadd@f2+1,f
  9519  0FD2  0842               	movf	___ftadd@f1+2,w
  9520  0FD3  3DC5               	addwfc	___ftadd@f2+2,f
  9521  0FD4  1FC5               	btfss	___ftadd@f2+2,7
  9522  0FD5  2FE8               	goto	l3396
  9523  0FD6  30FF               	movlw	255
  9524  0FD7  06C3               	xorwf	___ftadd@f2,f
  9525  0FD8  30FF               	movlw	255
  9526  0FD9  06C4               	xorwf	___ftadd@f2+1,f
  9527  0FDA  30FF               	movlw	255
  9528  0FDB  06C5               	xorwf	___ftadd@f2+2,f
  9529  0FDC  3001               	movlw	1
  9530  0FDD  07C3               	addwf	___ftadd@f2,f
  9531  0FDE  3000               	movlw	0
  9532  0FDF  1803               	skipnc
  9533  0FE0  3001               	movlw	1
  9534  0FE1  07C4               	addwf	___ftadd@f2+1,f
  9535  0FE2  3000               	movlw	0
  9536  0FE3  1803               	skipnc
  9537  0FE4  3001               	movlw	1
  9538  0FE5  07C5               	addwf	___ftadd@f2+2,f
  9539  0FE6  01CA               	clrf	___ftadd@sign
  9540  0FE7  0ACA               	incf	___ftadd@sign,f
  9541  0FE8                     l3396:	
  9542  0FE8  0843               	movf	___ftadd@f2,w
  9543  0FE9  00F0               	movwf	___ftpack@arg
  9544  0FEA  0844               	movf	___ftadd@f2+1,w
  9545  0FEB  00F1               	movwf	___ftpack@arg+1
  9546  0FEC  0845               	movf	___ftadd@f2+2,w
  9547  0FED  00F2               	movwf	___ftpack@arg+2
  9548  0FEE  084C               	movf	___ftadd@exp1,w
  9549  0FEF  00C6               	movwf	??___ftadd
  9550  0FF0  0846               	movf	??___ftadd,w
  9551  0FF1  00F3               	movwf	___ftpack@exp
  9552  0FF2  084A               	movf	___ftadd@sign,w
  9553  0FF3  00C7               	movwf	??___ftadd+1
  9554  0FF4  0847               	movf	??___ftadd+1,w
  9555  0FF5  00F4               	movwf	___ftpack@sign
  9556  0FF6  3189  21BB         	fcall	___ftpack
  9557  0FF8  0870               	movf	?___ftpack,w
  9558  0FF9  0020               	movlb	0	; select bank0
  9559  0FFA  00C0               	movwf	?___ftadd
  9560  0FFB  0871               	movf	?___ftpack+1,w
  9561  0FFC  00C1               	movwf	?___ftadd+1
  9562  0FFD  0872               	movf	?___ftpack+2,w
  9563  0FFE  00C2               	movwf	?___ftadd+2
  9564  0FFF  0008               	return
  9565  1000                     __end_of___ftadd:	
  9566                           
  9567                           	psect	text9
  9568  0AA1                     __ptext9:	
  9569 ;; *************** function _readButton *****************
  9570 ;; Defined at:
  9571 ;;		line 9 in file "buttons.c"
  9572 ;; Parameters:    Size  Location     Type
  9573 ;;		None
  9574 ;; Auto vars:     Size  Location     Type
  9575 ;;		None
  9576 ;; Return value:  Size  Location     Type
  9577 ;;                  1    wreg      unsigned char 
  9578 ;; Registers used:
  9579 ;;		wreg, status,2, status,0, pclath, cstack
  9580 ;; Tracked objects:
  9581 ;;		On entry : 0/0
  9582 ;;		On exit  : 0/0
  9583 ;;		Unchanged: 0/0
  9584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9587 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9588 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9589 ;;Total ram usage:        2 bytes
  9590 ;; Hardware stack levels used:    1
  9591 ;; Hardware stack levels required when called:    1
  9592 ;; This function calls:
  9593 ;;		_ADCRead
  9594 ;; This function is called by:
  9595 ;;		_main
  9596 ;; This function uses a non-reentrant model
  9597 ;;
  9598                           
  9599                           
  9600                           ;psect for function _readButton
  9601  0AA1                     _readButton:	
  9602                           
  9603                           ;buttons.c: 11: readButtons = ADCRead(11);
  9604                           
  9605                           ;incstack = 0
  9606                           ; Regs used in _readButton: [wreg+status,2+status,0+pclath+cstack]
  9607  0AA1  300B               	movlw	11
  9608  0AA2  3193  23FE  318A   	fcall	_ADCRead
  9609  0AA5  0871               	movf	?_ADCRead+1,w
  9610  0AA6  0021               	movlb	1	; select bank1
  9611  0AA7  00DC               	movwf	(_readButtons+1)^(0+128)
  9612  0AA8  0870               	movf	?_ADCRead,w
  9613  0AA9  00DB               	movwf	_readButtons^(0+128)
  9614                           
  9615                           ;buttons.c: 13: if(readButtons >= 365 && readButtons < 405)
  9616  0AAA  085C               	movf	(_readButtons+1)^(0+128),w
  9617  0AAB  3A80               	xorlw	128
  9618  0AAC  00F4               	movwf	??_readButton
  9619  0AAD  3081               	movlw	129
  9620  0AAE  0274               	subwf	??_readButton,w
  9621  0AAF  1D03               	skipz
  9622  0AB0  2AB3               	goto	u4845
  9623  0AB1  306D               	movlw	109
  9624  0AB2  025B               	subwf	_readButtons^(0+128),w
  9625  0AB3                     u4845:	
  9626  0AB3  1C03               	skipc
  9627  0AB4  2AC5               	goto	l3964
  9628  0AB5  0021               	movlb	1	; select bank1
  9629  0AB6  085C               	movf	(_readButtons+1)^(0+128),w
  9630  0AB7  3A80               	xorlw	128
  9631  0AB8  00F4               	movwf	??_readButton
  9632  0AB9  3081               	movlw	129
  9633  0ABA  0274               	subwf	??_readButton,w
  9634  0ABB  1D03               	skipz
  9635  0ABC  2ABF               	goto	u4855
  9636  0ABD  3095               	movlw	149
  9637  0ABE  025B               	subwf	_readButtons^(0+128),w
  9638  0ABF                     u4855:	
  9639  0ABF  1803               	skipnc
  9640  0AC0  2AC5               	goto	l3964
  9641                           
  9642                           ;buttons.c: 14: {
  9643                           ;buttons.c: 15: button = 1;
  9644  0AC1  0020               	movlb	0	; select bank0
  9645  0AC2  01EE               	clrf	_button
  9646  0AC3  0AEE               	incf	_button,f
  9647                           
  9648                           ;buttons.c: 16: }
  9649  0AC4  2AF3               	goto	l3976
  9650  0AC5                     l3964:	
  9651                           
  9652                           ;buttons.c: 18: else if(readButtons >= 535 && readButtons < 590)
  9653  0AC5  0021               	movlb	1	; select bank1
  9654  0AC6  085C               	movf	(_readButtons+1)^(0+128),w
  9655  0AC7  3A80               	xorlw	128
  9656  0AC8  00F4               	movwf	??_readButton
  9657  0AC9  3082               	movlw	130
  9658  0ACA  0274               	subwf	??_readButton,w
  9659  0ACB  1D03               	skipz
  9660  0ACC  2ACF               	goto	u4865
  9661  0ACD  3017               	movlw	23
  9662  0ACE  025B               	subwf	_readButtons^(0+128),w
  9663  0ACF                     u4865:	
  9664  0ACF  1C03               	skipc
  9665  0AD0  2ADF               	goto	l3970
  9666  0AD1  0021               	movlb	1	; select bank1
  9667  0AD2  085C               	movf	(_readButtons+1)^(0+128),w
  9668  0AD3  3A80               	xorlw	128
  9669  0AD4  00F4               	movwf	??_readButton
  9670  0AD5  3082               	movlw	130
  9671  0AD6  0274               	subwf	??_readButton,w
  9672  0AD7  1D03               	skipz
  9673  0AD8  2ADB               	goto	u4875
  9674  0AD9  304E               	movlw	78
  9675  0ADA  025B               	subwf	_readButtons^(0+128),w
  9676  0ADB                     u4875:	
  9677  0ADB  1803               	skipnc
  9678  0ADC  2ADF               	goto	l3970
  9679                           
  9680                           ;buttons.c: 19: {
  9681                           ;buttons.c: 20: button = 2;
  9682  0ADD  3002               	movlw	2
  9683  0ADE  2AEC               	goto	L4
  9684  0ADF                     l3970:	
  9685                           ;buttons.c: 21: }
  9686                           
  9687                           
  9688                           ;buttons.c: 23: else if(readButtons > 745)
  9689  0ADF  0021               	movlb	1	; select bank1
  9690  0AE0  085C               	movf	(_readButtons+1)^(0+128),w
  9691  0AE1  3A80               	xorlw	128
  9692  0AE2  00F4               	movwf	??_readButton
  9693  0AE3  3082               	movlw	130
  9694  0AE4  0274               	subwf	??_readButton,w
  9695  0AE5  1D03               	skipz
  9696  0AE6  2AE9               	goto	u4885
  9697  0AE7  30EA               	movlw	234
  9698  0AE8  025B               	subwf	_readButtons^(0+128),w
  9699  0AE9                     u4885:	
  9700  0AE9  1C03               	skipc
  9701  0AEA  2AF1               	goto	l3974
  9702                           
  9703                           ;buttons.c: 24: {
  9704                           ;buttons.c: 25: button = 3;
  9705  0AEB  3003               	movlw	3
  9706  0AEC                     L4:	
  9707  0AEC  00F4               	movwf	??_readButton
  9708  0AED  0874               	movf	??_readButton,w
  9709  0AEE  0020               	movlb	0	; select bank0
  9710  0AEF  00EE               	movwf	_button
  9711                           
  9712                           ;buttons.c: 26: }
  9713  0AF0  2AF3               	goto	l3976
  9714  0AF1                     l3974:	
  9715                           
  9716                           ;buttons.c: 28: else
  9717                           ;buttons.c: 29: {
  9718                           ;buttons.c: 30: button = 0;
  9719  0AF1  0020               	movlb	0	; select bank0
  9720  0AF2  01EE               	clrf	_button
  9721  0AF3                     l3976:	
  9722                           
  9723                           ;buttons.c: 31: }
  9724                           ;buttons.c: 33: if (button != 0)
  9725  0AF3  086E               	movf	_button,w
  9726  0AF4  1903               	btfsc	3,2
  9727  0AF5  2B20               	goto	l3996
  9728                           
  9729                           ;buttons.c: 34: {
  9730                           ;buttons.c: 35: if (button != lastButton)
  9731  0AF6  086E               	movf	_button,w
  9732  0AF7  066D               	xorwf	_lastButton,w
  9733  0AF8  1903               	skipnz
  9734  0AF9  2AFF               	goto	l3984
  9735                           
  9736                           ;buttons.c: 36: {
  9737                           ;buttons.c: 37: lastButton = button;
  9738  0AFA  086E               	movf	_button,w
  9739  0AFB  00F4               	movwf	??_readButton
  9740  0AFC  0874               	movf	??_readButton,w
  9741  0AFD  00ED               	movwf	_lastButton
  9742  0AFE  2B20               	goto	l3996
  9743  0AFF                     l3984:	
  9744                           ;buttons.c: 39: }
  9745                           
  9746                           ;buttons.c: 38: j = 0;
  9747                           
  9748                           
  9749                           ;buttons.c: 40: else
  9750                           ;buttons.c: 41: {
  9751                           ;buttons.c: 42: j += 1;
  9752  0AFF  3001               	movlw	1
  9753  0B00  00F4               	movwf	??_readButton
  9754  0B01  0874               	movf	??_readButton,w
  9755  0B02  07EC               	addwf	_j,f
  9756                           
  9757                           ;buttons.c: 44: if(j == 1)
  9758  0B03  036C               	decf	_j,w
  9759  0B04  1D03               	btfss	3,2
  9760  0B05  2B08               	goto	l3990
  9761                           
  9762                           ;buttons.c: 45: {
  9763                           ;buttons.c: 46: return (lastButton);
  9764  0B06  086D               	movf	_lastButton,w
  9765  0B07  0008               	return
  9766  0B08                     l3990:	
  9767                           
  9768                           ;buttons.c: 47: }
  9769                           ;buttons.c: 49: if (j >10)
  9770  0B08  086C               	movf	_j,w
  9771  0B09  3A80               	xorlw	128
  9772  0B0A  3E75               	addlw	-139
  9773  0B0B  1C03               	skipc
  9774  0B0C  2B21               	goto	l3998
  9775                           
  9776                           ;buttons.c: 50: {
  9777                           ;buttons.c: 51: _delay((unsigned long)((25)*(32000000/4000.0)));
  9778  0B0D  3002               	movlw	2
  9779  0B0E  00F5               	movwf	??_readButton+1
  9780  0B0F  3004               	movlw	4
  9781  0B10  00F4               	movwf	??_readButton
  9782  0B11  30BA               	movlw	186
  9783  0B12                     u5447:	
  9784  0B12  0B89               	decfsz	9,f
  9785  0B13  2B12               	goto	u5447
  9786  0B14  0BF4               	decfsz	??_readButton,f
  9787  0B15  2B12               	goto	u5447
  9788  0B16  0BF5               	decfsz	??_readButton+1,f
  9789  0B17  2B12               	goto	u5447
  9790  0B18  3200               	nop2
  9791                           
  9792                           ;buttons.c: 52: j = 10;
  9793  0B19  300A               	movlw	10
  9794  0B1A  00F4               	movwf	??_readButton
  9795  0B1B  0874               	movf	??_readButton,w
  9796  0B1C  0020               	movlb	0	; select bank0
  9797  0B1D  00EC               	movwf	_j
  9798                           
  9799                           ;buttons.c: 53: return (lastButton);
  9800  0B1E  086D               	movf	_lastButton,w
  9801  0B1F  0008               	return
  9802  0B20                     l3996:	
  9803                           ;buttons.c: 54: }
  9804                           ;buttons.c: 55: }
  9805                           ;buttons.c: 56: goto end;
  9806                           
  9807                           
  9808                           ;buttons.c: 57: }
  9809                           ;buttons.c: 59: j = 0;
  9810  0B20  01EC               	clrf	_j
  9811  0B21                     l3998:	
  9812                           ;buttons.c: 61: end:
  9813                           
  9814                           
  9815                           ;buttons.c: 63: return (0);
  9816  0B21  3000               	movlw	0
  9817  0B22  0008               	return
  9818  0B23                     __end_of_readButton:	
  9819                           
  9820                           	psect	text10
  9821  0138                     __ptext10:	
  9822 ;; *************** function _readAnalog *****************
  9823 ;; Defined at:
  9824 ;;		line 49 in file "adc.c"
  9825 ;; Parameters:    Size  Location     Type
  9826 ;;  channel         2    6[BANK0 ] unsigned int 
  9827 ;; Auto vars:     Size  Location     Type
  9828 ;;  value           2   28[BANK0 ] int 
  9829 ;;  analog_chann    2   26[BANK0 ] unsigned int 
  9830 ;; Return value:  Size  Location     Type
  9831 ;;                  2    6[BANK0 ] int 
  9832 ;; Registers used:
  9833 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9834 ;; Tracked objects:
  9835 ;;		On entry : 0/0
  9836 ;;		On exit  : 0/0
  9837 ;;		Unchanged: 0/0
  9838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9839 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9840 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9841 ;;      Temps:          0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9842 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9843 ;;Total ram usage:       24 bytes
  9844 ;; Hardware stack levels used:    1
  9845 ;; Hardware stack levels required when called:    1
  9846 ;; This function calls:
  9847 ;;		_ADCRead
  9848 ;;		___aldiv
  9849 ;;		___wmul
  9850 ;; This function is called by:
  9851 ;;		_main
  9852 ;; This function uses a non-reentrant model
  9853 ;;
  9854                           
  9855                           
  9856                           ;psect for function _readAnalog
  9857  0138                     _readAnalog:	
  9858                           
  9859                           ;adc.c: 51: int16_t value;
  9860                           ;adc.c: 53: uint16_t analog_channel = channels[channel];
  9861                           
  9862                           ;incstack = 0
  9863                           ; Regs used in _readAnalog: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9864  0138  0020               	movlb	0	; select bank0
  9865  0139  3526               	lslf	readAnalog@channel,w
  9866  013A  3E50               	addlw	(low (_channels| (0+256)))& (0+255)
  9867  013B  0086               	movwf	6
  9868  013C  3001               	movlw	1	; select bank2/3
  9869  013D  0087               	movwf	7
  9870  013E  3F40               	moviw [0]fsr1
  9871  013F  00BA               	movwf	readAnalog@analog_channel
  9872  0140  3F41               	moviw [1]fsr1
  9873  0141  00BB               	movwf	readAnalog@analog_channel+1
  9874                           
  9875                           ;adc.c: 55: value = ADCRead(analog_channel);
  9876  0142  083A               	movf	readAnalog@analog_channel,w
  9877  0143  3193  23FE  3181   	fcall	_ADCRead
  9878  0146  0871               	movf	?_ADCRead+1,w
  9879  0147  0020               	movlb	0	; select bank0
  9880  0148  00BD               	movwf	readAnalog@value+1
  9881  0149  0870               	movf	?_ADCRead,w
  9882  014A  00BC               	movwf	readAnalog@value
  9883                           
  9884                           ;adc.c: 57: totals[channel] = totals[channel]-samples[channel][sampleIndex];
  9885  014B  0826               	movf	readAnalog@channel,w
  9886  014C  00A8               	movwf	??_readAnalog
  9887  014D  3001               	movlw	1
  9888  014E                     u4725:	
  9889  014E  35A8               	lslf	??_readAnalog,f
  9890  014F  3EFF               	addlw	-1
  9891  0150  1D03               	skipz
  9892  0151  294E               	goto	u4725
  9893  0152  3528               	lslf	??_readAnalog,w
  9894  0153  3E20               	addlw	(low (_totals| (0+256)))& (0+255)
  9895  0154  0086               	movwf	6
  9896  0155  3001               	movlw	1	; select bank2/3
  9897  0156  0087               	movwf	7
  9898  0157  3F40               	moviw [0]fsr1
  9899  0158  00A9               	movwf	??_readAnalog+1
  9900  0159  3F41               	moviw [1]fsr1
  9901  015A  00AA               	movwf	??_readAnalog+2
  9902  015B  3F42               	moviw [2]fsr1
  9903  015C  00AB               	movwf	??_readAnalog+3
  9904  015D  3F43               	moviw [3]fsr1
  9905  015E  00AC               	movwf	??_readAnalog+4
  9906  015F  0021               	movlb	1	; select bank1
  9907  0160  0860               	movf	(_sampleIndex+1)^(0+128),w
  9908  0161  0020               	movlb	0	; select bank0
  9909  0162  00AE               	movwf	??_readAnalog+6
  9910  0163  0021               	movlb	1	; select bank1
  9911  0164  085F               	movf	_sampleIndex^(0+128),w
  9912  0165  0020               	movlb	0	; select bank0
  9913  0166  00AD               	movwf	??_readAnalog+5
  9914  0167  35AD               	lslf	??_readAnalog+5,f
  9915  0168  0DAE               	rlf	??_readAnalog+6,f
  9916  0169  0827               	movf	readAnalog@channel+1,w
  9917  016A  00FA               	movwf	___wmul@multiplier+1
  9918  016B  0826               	movf	readAnalog@channel,w
  9919  016C  00F9               	movwf	___wmul@multiplier
  9920  016D  3018               	movlw	24
  9921  016E  00FB               	movwf	___wmul@multiplicand
  9922  016F  3000               	movlw	0
  9923  0170  00FC               	movwf	___wmul@multiplicand+1
  9924  0171  3194  246F  3181   	fcall	___wmul
  9925  0174  3030               	movlw	48
  9926  0175  0020               	movlb	0	; select bank0
  9927  0176  00AF               	movwf	??_readAnalog+7
  9928  0177  3023               	movlw	35
  9929  0178  00B0               	movwf	??_readAnalog+8
  9930  0179  0879               	movf	?___wmul,w
  9931  017A  072F               	addwf	??_readAnalog+7,w
  9932  017B  00B1               	movwf	??_readAnalog+9
  9933  017C  087A               	movf	?___wmul+1,w
  9934  017D  3D30               	addwfc	??_readAnalog+8,w
  9935  017E  00B2               	movwf	??_readAnalog+10
  9936  017F  082D               	movf	??_readAnalog+5,w
  9937  0180  0731               	addwf	??_readAnalog+9,w
  9938  0181  0086               	movwf	6
  9939  0182  082E               	movf	??_readAnalog+6,w
  9940  0183  3D32               	addwfc	??_readAnalog+10,w
  9941  0184  0087               	movwf	7
  9942  0185  3F40               	moviw [0]fsr1
  9943  0186  00B3               	movwf	??_readAnalog+11
  9944  0187  3F41               	moviw [1]fsr1
  9945  0188  00B4               	movwf	??_readAnalog+12
  9946  0189  0833               	movf	??_readAnalog+11,w
  9947  018A  00B5               	movwf	??_readAnalog+13
  9948  018B  0834               	movf	??_readAnalog+12,w
  9949  018C  00B6               	movwf	??_readAnalog+14
  9950  018D  3000               	movlw	0
  9951  018E  1BB6               	btfsc	??_readAnalog+14,7
  9952  018F  30FF               	movlw	255
  9953  0190  00B7               	movwf	??_readAnalog+15
  9954  0191  00B8               	movwf	??_readAnalog+16
  9955  0192  09B5               	comf	??_readAnalog+13,f
  9956  0193  09B6               	comf	??_readAnalog+14,f
  9957  0194  09B7               	comf	??_readAnalog+15,f
  9958  0195  09B8               	comf	??_readAnalog+16,f
  9959  0196  0AB5               	incf	??_readAnalog+13,f
  9960  0197  1903               	skipnz
  9961  0198  0AB6               	incf	??_readAnalog+14,f
  9962  0199  1903               	skipnz
  9963  019A  0AB7               	incf	??_readAnalog+15,f
  9964  019B  1903               	skipnz
  9965  019C  0AB8               	incf	??_readAnalog+16,f
  9966  019D  0835               	movf	??_readAnalog+13,w
  9967  019E  07A9               	addwf	??_readAnalog+1,f
  9968  019F  0836               	movf	??_readAnalog+14,w
  9969  01A0  3DAA               	addwfc	??_readAnalog+2,f
  9970  01A1  0837               	movf	??_readAnalog+15,w
  9971  01A2  3DAB               	addwfc	??_readAnalog+3,f
  9972  01A3  0838               	movf	??_readAnalog+16,w
  9973  01A4  3DAC               	addwfc	??_readAnalog+4,f
  9974  01A5  0826               	movf	readAnalog@channel,w
  9975  01A6  00B9               	movwf	??_readAnalog+17
  9976  01A7  3001               	movlw	1
  9977  01A8                     u4735:	
  9978  01A8  35B9               	lslf	??_readAnalog+17,f
  9979  01A9  3EFF               	addlw	-1
  9980  01AA  1D03               	skipz
  9981  01AB  29A8               	goto	u4735
  9982  01AC  3539               	lslf	??_readAnalog+17,w
  9983  01AD  3E20               	addlw	(low (_totals| (0+256)))& (0+255)
  9984  01AE  0086               	movwf	6
  9985  01AF  3001               	movlw	1	; select bank2/3
  9986  01B0  0087               	movwf	7
  9987  01B1  0829               	movf	??_readAnalog+1,w
  9988  01B2  3FC0               	movwi [0]fsr1
  9989  01B3  082A               	movf	??_readAnalog+2,w
  9990  01B4  3FC1               	movwi [1]fsr1
  9991  01B5  082B               	movf	??_readAnalog+3,w
  9992  01B6  3FC2               	movwi [2]fsr1
  9993  01B7  082C               	movf	??_readAnalog+4,w
  9994  01B8  3FC3               	movwi [3]fsr1
  9995                           
  9996                           ;adc.c: 59: samples[channel][sampleIndex] = value;
  9997  01B9  0021               	movlb	1	; select bank1
  9998  01BA  0860               	movf	(_sampleIndex+1)^(0+128),w
  9999  01BB  0020               	movlb	0	; select bank0
 10000  01BC  00A9               	movwf	??_readAnalog+1
 10001  01BD  0021               	movlb	1	; select bank1
 10002  01BE  085F               	movf	_sampleIndex^(0+128),w
 10003  01BF  0020               	movlb	0	; select bank0
 10004  01C0  00A8               	movwf	??_readAnalog
 10005  01C1  35A8               	lslf	??_readAnalog,f
 10006  01C2  0DA9               	rlf	??_readAnalog+1,f
 10007  01C3  0827               	movf	readAnalog@channel+1,w
 10008  01C4  00FA               	movwf	___wmul@multiplier+1
 10009  01C5  0826               	movf	readAnalog@channel,w
 10010  01C6  00F9               	movwf	___wmul@multiplier
 10011  01C7  3018               	movlw	24
 10012  01C8  00FB               	movwf	___wmul@multiplicand
 10013  01C9  3000               	movlw	0
 10014  01CA  00FC               	movwf	___wmul@multiplicand+1
 10015  01CB  3194  246F  3181   	fcall	___wmul
 10016  01CE  3030               	movlw	48
 10017  01CF  0020               	movlb	0	; select bank0
 10018  01D0  00AA               	movwf	??_readAnalog+2
 10019  01D1  3023               	movlw	35
 10020  01D2  00AB               	movwf	??_readAnalog+3
 10021  01D3  0879               	movf	?___wmul,w
 10022  01D4  072A               	addwf	??_readAnalog+2,w
 10023  01D5  00AC               	movwf	??_readAnalog+4
 10024  01D6  087A               	movf	?___wmul+1,w
 10025  01D7  3D2B               	addwfc	??_readAnalog+3,w
 10026  01D8  00AD               	movwf	??_readAnalog+5
 10027  01D9  0828               	movf	??_readAnalog,w
 10028  01DA  072C               	addwf	??_readAnalog+4,w
 10029  01DB  0086               	movwf	6
 10030  01DC  0829               	movf	??_readAnalog+1,w
 10031  01DD  3D2D               	addwfc	??_readAnalog+5,w
 10032  01DE  0087               	movwf	7
 10033  01DF  083C               	movf	readAnalog@value,w
 10034  01E0  3FC0               	movwi [0]fsr1
 10035  01E1  083D               	movf	readAnalog@value+1,w
 10036  01E2  3FC1               	movwi [1]fsr1
 10037                           
 10038                           ;adc.c: 61: totals[channel] = totals[channel]+samples[channel][sampleIndex];
 10039  01E3  0826               	movf	readAnalog@channel,w
 10040  01E4  00A8               	movwf	??_readAnalog
 10041  01E5  3001               	movlw	1
 10042  01E6                     u4745:	
 10043  01E6  35A8               	lslf	??_readAnalog,f
 10044  01E7  3EFF               	addlw	-1
 10045  01E8  1D03               	skipz
 10046  01E9  29E6               	goto	u4745
 10047  01EA  3528               	lslf	??_readAnalog,w
 10048  01EB  3E20               	addlw	(low (_totals| (0+256)))& (0+255)
 10049  01EC  0086               	movwf	6
 10050  01ED  3001               	movlw	1	; select bank2/3
 10051  01EE  0087               	movwf	7
 10052  01EF  3F40               	moviw [0]fsr1
 10053  01F0  00A9               	movwf	??_readAnalog+1
 10054  01F1  3F41               	moviw [1]fsr1
 10055  01F2  00AA               	movwf	??_readAnalog+2
 10056  01F3  3F42               	moviw [2]fsr1
 10057  01F4  00AB               	movwf	??_readAnalog+3
 10058  01F5  3F43               	moviw [3]fsr1
 10059  01F6  00AC               	movwf	??_readAnalog+4
 10060  01F7  0021               	movlb	1	; select bank1
 10061  01F8  0860               	movf	(_sampleIndex+1)^(0+128),w
 10062  01F9  0020               	movlb	0	; select bank0
 10063  01FA  00AE               	movwf	??_readAnalog+6
 10064  01FB  0021               	movlb	1	; select bank1
 10065  01FC  085F               	movf	_sampleIndex^(0+128),w
 10066  01FD  0020               	movlb	0	; select bank0
 10067  01FE  00AD               	movwf	??_readAnalog+5
 10068  01FF  35AD               	lslf	??_readAnalog+5,f
 10069  0200  0DAE               	rlf	??_readAnalog+6,f
 10070  0201  0827               	movf	readAnalog@channel+1,w
 10071  0202  00FA               	movwf	___wmul@multiplier+1
 10072  0203  0826               	movf	readAnalog@channel,w
 10073  0204  00F9               	movwf	___wmul@multiplier
 10074  0205  3018               	movlw	24
 10075  0206  00FB               	movwf	___wmul@multiplicand
 10076  0207  3000               	movlw	0
 10077  0208  00FC               	movwf	___wmul@multiplicand+1
 10078  0209  3194  246F  3181   	fcall	___wmul
 10079  020C  3030               	movlw	48
 10080  020D  0020               	movlb	0	; select bank0
 10081  020E  00AF               	movwf	??_readAnalog+7
 10082  020F  3023               	movlw	35
 10083  0210  00B0               	movwf	??_readAnalog+8
 10084  0211  0879               	movf	?___wmul,w
 10085  0212  072F               	addwf	??_readAnalog+7,w
 10086  0213  00B1               	movwf	??_readAnalog+9
 10087  0214  087A               	movf	?___wmul+1,w
 10088  0215  3D30               	addwfc	??_readAnalog+8,w
 10089  0216  00B2               	movwf	??_readAnalog+10
 10090  0217  082D               	movf	??_readAnalog+5,w
 10091  0218  0731               	addwf	??_readAnalog+9,w
 10092  0219  0086               	movwf	6
 10093  021A  082E               	movf	??_readAnalog+6,w
 10094  021B  3D32               	addwfc	??_readAnalog+10,w
 10095  021C  0087               	movwf	7
 10096  021D  3F40               	moviw [0]fsr1
 10097  021E  00B3               	movwf	??_readAnalog+11
 10098  021F  3F41               	moviw [1]fsr1
 10099  0220  00B4               	movwf	??_readAnalog+12
 10100  0221  0833               	movf	??_readAnalog+11,w
 10101  0222  00B5               	movwf	??_readAnalog+13
 10102  0223  0834               	movf	??_readAnalog+12,w
 10103  0224  00B6               	movwf	??_readAnalog+14
 10104  0225  3000               	movlw	0
 10105  0226  1BB6               	btfsc	??_readAnalog+14,7
 10106  0227  30FF               	movlw	255
 10107  0228  00B7               	movwf	??_readAnalog+15
 10108  0229  00B8               	movwf	??_readAnalog+16
 10109  022A  0835               	movf	??_readAnalog+13,w
 10110  022B  07A9               	addwf	??_readAnalog+1,f
 10111  022C  0836               	movf	??_readAnalog+14,w
 10112  022D  3DAA               	addwfc	??_readAnalog+2,f
 10113  022E  0837               	movf	??_readAnalog+15,w
 10114  022F  3DAB               	addwfc	??_readAnalog+3,f
 10115  0230  0838               	movf	??_readAnalog+16,w
 10116  0231  3DAC               	addwfc	??_readAnalog+4,f
 10117  0232  0826               	movf	readAnalog@channel,w
 10118  0233  00B9               	movwf	??_readAnalog+17
 10119  0234  3001               	movlw	1
 10120  0235                     u4755:	
 10121  0235  35B9               	lslf	??_readAnalog+17,f
 10122  0236  3EFF               	addlw	-1
 10123  0237  1D03               	skipz
 10124  0238  2A35               	goto	u4755
 10125  0239  3539               	lslf	??_readAnalog+17,w
 10126  023A  3E20               	addlw	(low (_totals| (0+256)))& (0+255)
 10127  023B  0086               	movwf	6
 10128  023C  3001               	movlw	1	; select bank2/3
 10129  023D  0087               	movwf	7
 10130  023E  0829               	movf	??_readAnalog+1,w
 10131  023F  3FC0               	movwi [0]fsr1
 10132  0240  082A               	movf	??_readAnalog+2,w
 10133  0241  3FC1               	movwi [1]fsr1
 10134  0242  082B               	movf	??_readAnalog+3,w
 10135  0243  3FC2               	movwi [2]fsr1
 10136  0244  082C               	movf	??_readAnalog+4,w
 10137  0245  3FC3               	movwi [3]fsr1
 10138                           
 10139                           ;adc.c: 63: if(channel>=(8-1))
 10140  0246  3000               	movlw	0
 10141  0247  0227               	subwf	readAnalog@channel+1,w
 10142  0248  3007               	movlw	7
 10143  0249  1903               	skipnz
 10144  024A  0226               	subwf	readAnalog@channel,w
 10145  024B  1C03               	skipc
 10146  024C  2A5B               	goto	l3932
 10147                           
 10148                           ;adc.c: 64: {
 10149                           ;adc.c: 65: sampleIndex+=1;
 10150  024D  3001               	movlw	1
 10151  024E  0021               	movlb	1	; select bank1
 10152  024F  07DF               	addwf	_sampleIndex^(0+128),f
 10153  0250  3000               	movlw	0
 10154  0251  3DE0               	addwfc	(_sampleIndex+1)^(0+128),f
 10155                           
 10156                           ;adc.c: 66: if(sampleIndex >= 12)sampleIndex = 0;
 10157  0252  3000               	movlw	0
 10158  0253  0260               	subwf	(_sampleIndex+1)^(0+128),w
 10159  0254  300C               	movlw	12
 10160  0255  1903               	skipnz
 10161  0256  025F               	subwf	_sampleIndex^(0+128),w
 10162  0257  1C03               	skipc
 10163  0258  2A5B               	goto	l3932
 10164  0259  01DF               	clrf	_sampleIndex^(0+128)
 10165  025A  01E0               	clrf	(_sampleIndex+1)^(0+128)
 10166  025B                     l3932:	
 10167                           
 10168                           ;adc.c: 67: }
 10169                           ;adc.c: 69: value = totals[channel]/12;
 10170  025B  3000               	movlw	0
 10171  025C  00F3               	movwf	___aldiv@divisor+3
 10172  025D  3000               	movlw	0
 10173  025E  00F2               	movwf	___aldiv@divisor+2
 10174  025F  3000               	movlw	0
 10175  0260  00F1               	movwf	___aldiv@divisor+1
 10176  0261  300C               	movlw	12
 10177  0262  00F0               	movwf	___aldiv@divisor
 10178  0263  0020               	movlb	0	; select bank0
 10179  0264  0826               	movf	readAnalog@channel,w
 10180  0265  00A8               	movwf	??_readAnalog
 10181  0266  3001               	movlw	1
 10182  0267                     u4785:	
 10183  0267  35A8               	lslf	??_readAnalog,f
 10184  0268  3EFF               	addlw	-1
 10185  0269  1D03               	skipz
 10186  026A  2A67               	goto	u4785
 10187  026B  3528               	lslf	??_readAnalog,w
 10188  026C  3E20               	addlw	(low (_totals| (0+256)))& (0+255)
 10189  026D  0086               	movwf	6
 10190  026E  3001               	movlw	1	; select bank2/3
 10191  026F  0087               	movwf	7
 10192  0270  3F40               	moviw [0]fsr1
 10193  0271  00F4               	movwf	___aldiv@dividend
 10194  0272  3F41               	moviw [1]fsr1
 10195  0273  00F5               	movwf	___aldiv@dividend+1
 10196  0274  3F42               	moviw [2]fsr1
 10197  0275  00F6               	movwf	___aldiv@dividend+2
 10198  0276  3F43               	moviw [3]fsr1
 10199  0277  00F7               	movwf	___aldiv@dividend+3
 10200  0278  318A  221F         	fcall	___aldiv
 10201  027A  0871               	movf	?___aldiv+1,w
 10202  027B  0020               	movlb	0	; select bank0
 10203  027C  00BD               	movwf	readAnalog@value+1
 10204  027D  0870               	movf	?___aldiv,w
 10205  027E  00BC               	movwf	readAnalog@value
 10206                           
 10207                           ;adc.c: 71: return value;
 10208  027F  083D               	movf	readAnalog@value+1,w
 10209  0280  00A7               	movwf	?_readAnalog+1
 10210  0281  083C               	movf	readAnalog@value,w
 10211  0282  00A6               	movwf	?_readAnalog
 10212  0283  0008               	return
 10213  0284                     __end_of_readAnalog:	
 10214                           
 10215                           	psect	text11
 10216  0A1F                     __ptext11:	
 10217 ;; *************** function ___aldiv *****************
 10218 ;; Defined at:
 10219 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\aldiv.c"
 10220 ;; Parameters:    Size  Location     Type
 10221 ;;  divisor         4    0[COMMON] long 
 10222 ;;  dividend        4    4[COMMON] long 
 10223 ;; Auto vars:     Size  Location     Type
 10224 ;;  quotient        4    2[BANK0 ] long 
 10225 ;;  sign            1    1[BANK0 ] unsigned char 
 10226 ;;  counter         1    0[BANK0 ] unsigned char 
 10227 ;; Return value:  Size  Location     Type
 10228 ;;                  4    0[COMMON] long 
 10229 ;; Registers used:
 10230 ;;		wreg, status,2, status,0
 10231 ;; Tracked objects:
 10232 ;;		On entry : 0/0
 10233 ;;		On exit  : 0/0
 10234 ;;		Unchanged: 0/0
 10235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10236 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10237 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10238 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10239 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10240 ;;Total ram usage:       15 bytes
 10241 ;; Hardware stack levels used:    1
 10242 ;; This function calls:
 10243 ;;		Nothing
 10244 ;; This function is called by:
 10245 ;;		_readAnalog
 10246 ;; This function uses a non-reentrant model
 10247 ;;
 10248                           
 10249                           
 10250                           ;psect for function ___aldiv
 10251  0A1F                     ___aldiv:	
 10252                           
 10253                           ;incstack = 0
 10254                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
 10255  0A1F  0020               	movlb	0	; select bank0
 10256  0A20  01A1               	clrf	___aldiv@sign
 10257  0A21  1FF3               	btfss	___aldiv@divisor+3,7
 10258  0A22  2A30               	goto	l621
 10259  0A23  09F0               	comf	___aldiv@divisor,f
 10260  0A24  09F1               	comf	___aldiv@divisor+1,f
 10261  0A25  09F2               	comf	___aldiv@divisor+2,f
 10262  0A26  09F3               	comf	___aldiv@divisor+3,f
 10263  0A27  0AF0               	incf	___aldiv@divisor,f
 10264  0A28  1903               	skipnz
 10265  0A29  0AF1               	incf	___aldiv@divisor+1,f
 10266  0A2A  1903               	skipnz
 10267  0A2B  0AF2               	incf	___aldiv@divisor+2,f
 10268  0A2C  1903               	skipnz
 10269  0A2D  0AF3               	incf	___aldiv@divisor+3,f
 10270  0A2E  01A1               	clrf	___aldiv@sign
 10271  0A2F  0AA1               	incf	___aldiv@sign,f
 10272  0A30                     l621:	
 10273  0A30  1FF7               	btfss	___aldiv@dividend+3,7
 10274  0A31  2A41               	goto	l3724
 10275  0A32  09F4               	comf	___aldiv@dividend,f
 10276  0A33  09F5               	comf	___aldiv@dividend+1,f
 10277  0A34  09F6               	comf	___aldiv@dividend+2,f
 10278  0A35  09F7               	comf	___aldiv@dividend+3,f
 10279  0A36  0AF4               	incf	___aldiv@dividend,f
 10280  0A37  1903               	skipnz
 10281  0A38  0AF5               	incf	___aldiv@dividend+1,f
 10282  0A39  1903               	skipnz
 10283  0A3A  0AF6               	incf	___aldiv@dividend+2,f
 10284  0A3B  1903               	skipnz
 10285  0A3C  0AF7               	incf	___aldiv@dividend+3,f
 10286  0A3D  3001               	movlw	1
 10287  0A3E  00F8               	movwf	??___aldiv
 10288  0A3F  0878               	movf	??___aldiv,w
 10289  0A40  06A1               	xorwf	___aldiv@sign,f
 10290  0A41                     l3724:	
 10291  0A41  3000               	movlw	0
 10292  0A42  00A5               	movwf	___aldiv@quotient+3
 10293  0A43  3000               	movlw	0
 10294  0A44  00A4               	movwf	___aldiv@quotient+2
 10295  0A45  3000               	movlw	0
 10296  0A46  00A3               	movwf	___aldiv@quotient+1
 10297  0A47  3000               	movlw	0
 10298  0A48  00A2               	movwf	___aldiv@quotient
 10299  0A49  0873               	movf	___aldiv@divisor+3,w
 10300  0A4A  0472               	iorwf	___aldiv@divisor+2,w
 10301  0A4B  0471               	iorwf	___aldiv@divisor+1,w
 10302  0A4C  0470               	iorwf	___aldiv@divisor,w
 10303  0A4D  1903               	skipnz
 10304  0A4E  2A8A               	goto	l3746
 10305  0A4F  01A0               	clrf	___aldiv@counter
 10306  0A50  0AA0               	incf	___aldiv@counter,f
 10307  0A51                     l3732:	
 10308  0A51  1BF3               	btfsc	___aldiv@divisor+3,7
 10309  0A52  2A5F               	goto	l3734
 10310  0A53  3001               	movlw	1
 10311  0A54                     u4305:	
 10312  0A54  35F0               	lslf	___aldiv@divisor,f
 10313  0A55  0DF1               	rlf	___aldiv@divisor+1,f
 10314  0A56  0DF2               	rlf	___aldiv@divisor+2,f
 10315  0A57  0DF3               	rlf	___aldiv@divisor+3,f
 10316  0A58  0B89               	decfsz	9,f
 10317  0A59  2A54               	goto	u4305
 10318  0A5A  3001               	movlw	1
 10319  0A5B  00F8               	movwf	??___aldiv
 10320  0A5C  0878               	movf	??___aldiv,w
 10321  0A5D  07A0               	addwf	___aldiv@counter,f
 10322  0A5E  2A51               	goto	l3732
 10323  0A5F                     l3734:	
 10324  0A5F  3001               	movlw	1
 10325  0A60                     u4325:	
 10326  0A60  35A2               	lslf	___aldiv@quotient,f
 10327  0A61  0DA3               	rlf	___aldiv@quotient+1,f
 10328  0A62  0DA4               	rlf	___aldiv@quotient+2,f
 10329  0A63  0DA5               	rlf	___aldiv@quotient+3,f
 10330  0A64  0B89               	decfsz	9,f
 10331  0A65  2A60               	goto	u4325
 10332  0A66  0873               	movf	___aldiv@divisor+3,w
 10333  0A67  0277               	subwf	___aldiv@dividend+3,w
 10334  0A68  1D03               	skipz
 10335  0A69  2A74               	goto	u4335
 10336  0A6A  0872               	movf	___aldiv@divisor+2,w
 10337  0A6B  0276               	subwf	___aldiv@dividend+2,w
 10338  0A6C  1D03               	skipz
 10339  0A6D  2A74               	goto	u4335
 10340  0A6E  0871               	movf	___aldiv@divisor+1,w
 10341  0A6F  0275               	subwf	___aldiv@dividend+1,w
 10342  0A70  1D03               	skipz
 10343  0A71  2A74               	goto	u4335
 10344  0A72  0870               	movf	___aldiv@divisor,w
 10345  0A73  0274               	subwf	___aldiv@dividend,w
 10346  0A74                     u4335:	
 10347  0A74  1C03               	skipc
 10348  0A75  2A7F               	goto	l3742
 10349  0A76  0870               	movf	___aldiv@divisor,w
 10350  0A77  02F4               	subwf	___aldiv@dividend,f
 10351  0A78  0871               	movf	___aldiv@divisor+1,w
 10352  0A79  3BF5               	subwfb	___aldiv@dividend+1,f
 10353  0A7A  0872               	movf	___aldiv@divisor+2,w
 10354  0A7B  3BF6               	subwfb	___aldiv@dividend+2,f
 10355  0A7C  0873               	movf	___aldiv@divisor+3,w
 10356  0A7D  3BF7               	subwfb	___aldiv@dividend+3,f
 10357  0A7E  1422               	bsf	___aldiv@quotient,0
 10358  0A7F                     l3742:	
 10359  0A7F  3001               	movlw	1
 10360  0A80                     u4345:	
 10361  0A80  36F3               	lsrf	___aldiv@divisor+3,f
 10362  0A81  0CF2               	rrf	___aldiv@divisor+2,f
 10363  0A82  0CF1               	rrf	___aldiv@divisor+1,f
 10364  0A83  0CF0               	rrf	___aldiv@divisor,f
 10365  0A84  0B89               	decfsz	9,f
 10366  0A85  2A80               	goto	u4345
 10367  0A86  3001               	movlw	1
 10368  0A87  02A0               	subwf	___aldiv@counter,f
 10369  0A88  1D03               	btfss	3,2
 10370  0A89  2A5F               	goto	l3734
 10371  0A8A                     l3746:	
 10372  0A8A  0821               	movf	___aldiv@sign,w
 10373  0A8B  1903               	btfsc	3,2
 10374  0A8C  2A98               	goto	l3750
 10375  0A8D  09A2               	comf	___aldiv@quotient,f
 10376  0A8E  09A3               	comf	___aldiv@quotient+1,f
 10377  0A8F  09A4               	comf	___aldiv@quotient+2,f
 10378  0A90  09A5               	comf	___aldiv@quotient+3,f
 10379  0A91  0AA2               	incf	___aldiv@quotient,f
 10380  0A92  1903               	skipnz
 10381  0A93  0AA3               	incf	___aldiv@quotient+1,f
 10382  0A94  1903               	skipnz
 10383  0A95  0AA4               	incf	___aldiv@quotient+2,f
 10384  0A96  1903               	skipnz
 10385  0A97  0AA5               	incf	___aldiv@quotient+3,f
 10386  0A98                     l3750:	
 10387  0A98  0825               	movf	___aldiv@quotient+3,w
 10388  0A99  00F3               	movwf	?___aldiv+3
 10389  0A9A  0824               	movf	___aldiv@quotient+2,w
 10390  0A9B  00F2               	movwf	?___aldiv+2
 10391  0A9C  0823               	movf	___aldiv@quotient+1,w
 10392  0A9D  00F1               	movwf	?___aldiv+1
 10393  0A9E  0822               	movf	___aldiv@quotient,w
 10394  0A9F  00F0               	movwf	?___aldiv
 10395  0AA0  0008               	return
 10396  0AA1                     __end_of___aldiv:	
 10397                           
 10398                           	psect	text12
 10399  13FE                     __ptext12:	
 10400 ;; *************** function _ADCRead *****************
 10401 ;; Defined at:
 10402 ;;		line 19 in file "adc.c"
 10403 ;; Parameters:    Size  Location     Type
 10404 ;;  channel         1    wreg     enum E14259
 10405 ;; Auto vars:     Size  Location     Type
 10406 ;;  channel         1    3[COMMON] enum E14259
 10407 ;; Return value:  Size  Location     Type
 10408 ;;                  2    0[COMMON] int 
 10409 ;; Registers used:
 10410 ;;		wreg
 10411 ;; Tracked objects:
 10412 ;;		On entry : 0/0
 10413 ;;		On exit  : 0/0
 10414 ;;		Unchanged: 0/0
 10415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10416 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10417 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10419 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10420 ;;Total ram usage:        4 bytes
 10421 ;; Hardware stack levels used:    1
 10422 ;; This function calls:
 10423 ;;		Nothing
 10424 ;; This function is called by:
 10425 ;;		_main
 10426 ;;		_readAnalog
 10427 ;;		_readButton
 10428 ;; This function uses a non-reentrant model
 10429 ;;
 10430                           
 10431                           
 10432                           ;psect for function _ADCRead
 10433  13FE                     _ADCRead:	
 10434                           
 10435                           ;incstack = 0
 10436                           ; Regs used in _ADCRead: [wreg]
 10437                           ;ADCRead@channel stored from wreg
 10438  13FE  00F3               	movwf	ADCRead@channel
 10439                           
 10440                           ;adc.c: 21: ADPCH = channel_VSS;
 10441  13FF  303C               	movlw	60
 10442  1400  0021               	movlb	1	; select bank1
 10443  1401  009E               	movwf	30	;volatile
 10444                           
 10445                           ;adc.c: 23: ADCON0bits.ADON = 1;
 10446  1402  1793               	bsf	19,7	;volatile
 10447                           
 10448                           ;adc.c: 25: ADCON0bits.ADCONT = 0;
 10449  1403  1313               	bcf	19,6	;volatile
 10450                           
 10451                           ;adc.c: 27: ADCON0bits.ADGO = 1;
 10452  1404  1413               	bsf	19,0	;volatile
 10453  1405                     l165:	
 10454                           ;adc.c: 30: {
 10455                           
 10456                           ;adc.c: 29: while(ADCON0bits.ADGO)
 10457                           
 10458  1405  1813               	btfsc	19,0	;volatile
 10459  1406  2C05               	goto	l165
 10460                           
 10461                           ;adc.c: 31: }
 10462                           ;adc.c: 33: ADPCH = channel;
 10463  1407  0873               	movf	ADCRead@channel,w
 10464  1408  009E               	movwf	30	;volatile
 10465                           
 10466                           ;adc.c: 35: ADCON0bits.ADON = 1;
 10467  1409  1793               	bsf	19,7	;volatile
 10468                           
 10469                           ;adc.c: 37: ADCON0bits.ADCONT = 0;
 10470  140A  1313               	bcf	19,6	;volatile
 10471                           
 10472                           ;adc.c: 39: ADCON0bits.ADGO = 1;
 10473  140B  1413               	bsf	19,0	;volatile
 10474  140C                     l168:	
 10475                           ;adc.c: 42: {
 10476                           
 10477                           ;adc.c: 41: while(ADCON0bits.ADGO)
 10478                           
 10479  140C  1813               	btfsc	19,0	;volatile
 10480  140D  2C0C               	goto	l168
 10481                           
 10482                           ;adc.c: 43: }
 10483                           ;adc.c: 45: return ((ADRESH<<8)+ADRESL);
 10484  140E  080D               	movf	13,w	;volatile
 10485  140F  00F1               	movwf	?_ADCRead+1
 10486  1410  080C               	movf	12,w	;volatile
 10487  1411  00F0               	movwf	?_ADCRead
 10488  1412  0008               	return
 10489  1413                     __end_of_ADCRead:	
 10490                           
 10491                           	psect	text13
 10492  17A3                     __ptext13:	
 10493 ;; *************** function _cc_cv_mode *****************
 10494 ;; Defined at:
 10495 ;;		line 92 in file "battery_charger.c"
 10496 ;; Parameters:    Size  Location     Type
 10497 ;;		None
 10498 ;; Auto vars:     Size  Location     Type
 10499 ;;		None
 10500 ;; Return value:  Size  Location     Type
 10501 ;;                  1    wreg      void 
 10502 ;; Registers used:
 10503 ;;		wreg, status,2, status,0
 10504 ;; Tracked objects:
 10505 ;;		On entry : 0/0
 10506 ;;		On exit  : 0/0
 10507 ;;		Unchanged: 0/0
 10508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10511 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10512 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10513 ;;Total ram usage:        1 bytes
 10514 ;; Hardware stack levels used:    1
 10515 ;; This function calls:
 10516 ;;		Nothing
 10517 ;; This function is called by:
 10518 ;;		_main
 10519 ;; This function uses a non-reentrant model
 10520 ;;
 10521                           
 10522                           
 10523                           ;psect for function _cc_cv_mode
 10524  17A3                     _cc_cv_mode:	
 10525                           
 10526                           ;battery_charger.c: 94: if(voltage[1] > Vref)
 10527                           
 10528                           ;incstack = 0
 10529                           ; Regs used in _cc_cv_mode: [wreg+status,2+status,0]
 10530  17A3  0021               	movlb	1	; select bank1
 10531  17A4  086C               	movf	(_Vref+1)^(0+128),w
 10532  17A5  3A80               	xorlw	128
 10533  17A6  00F0               	movwf	??_cc_cv_mode
 10534  17A7  084F               	movf	((_voltage+1)^(0+128)+2),w
 10535  17A8  3A80               	xorlw	128
 10536  17A9  0270               	subwf	??_cc_cv_mode,w
 10537  17AA  1D03               	skipz
 10538  17AB  2FAE               	goto	u5125
 10539  17AC  084E               	movf	(_voltage^(0+128)+2),w
 10540  17AD  026B               	subwf	_Vref^(0+128),w
 10541  17AE                     u5125:	
 10542  17AE  1803               	skipnc
 10543  17AF  2FC5               	goto	l4124
 10544                           
 10545                           ;battery_charger.c: 95: {
 10546                           ;battery_charger.c: 96: if(VHoldMode<12)VHoldMode+=1;
 10547  17B0  0021               	movlb	1	; select bank1
 10548  17B1  0862               	movf	_VHoldMode^(0+128),w
 10549  17B2  3A80               	xorlw	128
 10550  17B3  3E74               	addlw	-140
 10551  17B4  1803               	skipnc
 10552  17B5  2FBA               	goto	l237
 10553  17B6  3001               	movlw	1
 10554  17B7  00F0               	movwf	??_cc_cv_mode
 10555  17B8  0870               	movf	??_cc_cv_mode,w
 10556  17B9  07E2               	addwf	_VHoldMode^(0+128),f
 10557  17BA                     l237:	
 10558                           
 10559                           ;battery_charger.c: 98: if(cc_cv)
 10560  17BA  0861               	movf	_cc_cv^(0+128),w
 10561  17BB  1903               	btfsc	3,2
 10562  17BC  2FC0               	goto	l4120
 10563                           
 10564                           ;battery_charger.c: 99: {
 10565                           ;battery_charger.c: 100: cc_cv-=1;
 10566  17BD  3001               	movlw	1
 10567  17BE  02E1               	subwf	_cc_cv^(0+128),f
 10568                           
 10569                           ;battery_charger.c: 101: }
 10570  17BF  2FD9               	goto	l241
 10571  17C0                     l4120:	
 10572                           
 10573                           ;battery_charger.c: 102: else
 10574                           ;battery_charger.c: 103: {
 10575                           ;battery_charger.c: 104: if(Imode0)
 10576  17C0  086F               	movf	_Imode0^(0+128),w
 10577  17C1  1903               	btfsc	3,2
 10578  17C2  2FD9               	goto	l241
 10579                           
 10580                           ;battery_charger.c: 105: {
 10581                           ;battery_charger.c: 106: Imode0 = 0;
 10582  17C3  01EF               	clrf	_Imode0^(0+128)
 10583                           
 10584                           ;battery_charger.c: 107: }
 10585                           ;battery_charger.c: 108: }
 10586                           ;battery_charger.c: 109: }
 10587  17C4  2FD9               	goto	l241
 10588  17C5                     l4124:	
 10589                           
 10590                           ;battery_charger.c: 110: else
 10591                           ;battery_charger.c: 111: {
 10592                           ;battery_charger.c: 112: VHoldMode-=1;
 10593  17C5  30FF               	movlw	255
 10594  17C6  00F0               	movwf	??_cc_cv_mode
 10595  17C7  0870               	movf	??_cc_cv_mode,w
 10596  17C8  0021               	movlb	1	; select bank1
 10597  17C9  07E2               	addwf	_VHoldMode^(0+128),f
 10598                           
 10599                           ;battery_charger.c: 113: if(VHoldMode<(10*-1))
 10600  17CA  0862               	movf	_VHoldMode^(0+128),w
 10601  17CB  3A80               	xorlw	128
 10602  17CC  3E8A               	addlw	138
 10603  17CD  1803               	skipnc
 10604  17CE  2FD9               	goto	l241
 10605                           
 10606                           ;battery_charger.c: 114: {
 10607                           ;battery_charger.c: 115: Imode0 = 1;
 10608  17CF  01EF               	clrf	_Imode0^(0+128)
 10609  17D0  0AEF               	incf	_Imode0^(0+128),f
 10610                           
 10611                           ;battery_charger.c: 116: cc_cv = 10;
 10612  17D1  300A               	movlw	10
 10613  17D2  00F0               	movwf	??_cc_cv_mode
 10614  17D3  0870               	movf	??_cc_cv_mode,w
 10615  17D4  00E1               	movwf	_cc_cv^(0+128)
 10616                           
 10617                           ;battery_charger.c: 117: VHoldMode=(10*-1);
 10618  17D5  30F6               	movlw	246
 10619  17D6  00F0               	movwf	??_cc_cv_mode
 10620  17D7  0870               	movf	??_cc_cv_mode,w
 10621  17D8  00E2               	movwf	_VHoldMode^(0+128)
 10622  17D9                     l241:	
 10623                           
 10624                           ;battery_charger.c: 118: }
 10625                           ;battery_charger.c: 119: }
 10626                           ;battery_charger.c: 121: if(current[1] > Iref)
 10627  17D9  086A               	movf	(_Iref+1)^(0+128),w
 10628  17DA  3A80               	xorlw	128
 10629  17DB  00F0               	movwf	??_cc_cv_mode
 10630  17DC  0847               	movf	((_current+1)^(0+128)+2),w
 10631  17DD  3A80               	xorlw	128
 10632  17DE  0270               	subwf	??_cc_cv_mode,w
 10633  17DF  1D03               	skipz
 10634  17E0  2FE3               	goto	u5175
 10635  17E1  0846               	movf	(_current^(0+128)+2),w
 10636  17E2  0269               	subwf	_Iref^(0+128),w
 10637  17E3                     u5175:	
 10638  17E3  1803               	skipnc
 10639  17E4  0008               	return
 10640                           
 10641                           ;battery_charger.c: 122: {
 10642                           ;battery_charger.c: 123: if(!Imode0)
 10643  17E5  0021               	movlb	1	; select bank1
 10644  17E6  086F               	movf	_Imode0^(0+128),w
 10645  17E7  1D03               	btfss	3,2
 10646  17E8  0008               	return
 10647                           
 10648                           ;battery_charger.c: 124: {
 10649                           ;battery_charger.c: 125: if(battery_state == FLOAT)
 10650  17E9  3005               	movlw	5
 10651  17EA  066D               	xorwf	_battery_state^(0+128),w
 10652  17EB  1D03               	btfss	3,2
 10653  17EC  0008               	return
 10654                           
 10655                           ;battery_charger.c: 126: {
 10656                           ;battery_charger.c: 127: battery_state=CHARGE;
 10657  17ED  3004               	movlw	4
 10658  17EE  00F0               	movwf	??_cc_cv_mode
 10659  17EF  0870               	movf	??_cc_cv_mode,w
 10660  17F0  00ED               	movwf	_battery_state^(0+128)
 10661                           
 10662                           ;battery_charger.c: 128: { Vref = 1445; };
 10663  17F1  30A5               	movlw	165
 10664  17F2  00EB               	movwf	_Vref^(0+128)
 10665  17F3  3005               	movlw	5
 10666  17F4  00EC               	movwf	(_Vref^(0+128)+1)
 10667                           
 10668                           ;battery_charger.c: 129: { Iref = 55; };
 10669  17F5  3037               	movlw	55
 10670  17F6  00E9               	movwf	_Iref^(0+128)
 10671  17F7  3000               	movlw	0
 10672  17F8  00EA               	movwf	(_Iref^(0+128)+1)
 10673                           
 10674                           ;battery_charger.c: 130: Imode0 = 1;
 10675  17F9  01EF               	clrf	_Imode0^(0+128)
 10676  17FA  0AEF               	incf	_Imode0^(0+128),f
 10677                           
 10678                           ;battery_charger.c: 131: cc_cv = 10;
 10679  17FB  300A               	movlw	10
 10680  17FC  00F0               	movwf	??_cc_cv_mode
 10681  17FD  0870               	movf	??_cc_cv_mode,w
 10682  17FE  00E1               	movwf	_cc_cv^(0+128)
 10683  17FF  0008               	return
 10684  1800                     __end_of_cc_cv_mode:	
 10685                           
 10686                           	psect	text14
 10687  16B5                     __ptext14:	
 10688 ;; *************** function _calculateCurrent1 *****************
 10689 ;; Defined at:
 10690 ;;		line 292 in file "main.c"
 10691 ;; Parameters:    Size  Location     Type
 10692 ;;		None
 10693 ;; Auto vars:     Size  Location     Type
 10694 ;;		None
 10695 ;; Return value:  Size  Location     Type
 10696 ;;                  1    wreg      void 
 10697 ;; Registers used:
 10698 ;;		wreg, status,2, status,0, pclath, cstack
 10699 ;; Tracked objects:
 10700 ;;		On entry : 0/0
 10701 ;;		On exit  : 0/0
 10702 ;;		Unchanged: 0/0
 10703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10706 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10707 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10708 ;;Total ram usage:        3 bytes
 10709 ;; Hardware stack levels used:    1
 10710 ;; Hardware stack levels required when called:    2
 10711 ;; This function calls:
 10712 ;;		___awtoft
 10713 ;;		___ftdiv
 10714 ;;		___fttol
 10715 ;; This function is called by:
 10716 ;;		_main
 10717 ;; This function uses a non-reentrant model
 10718 ;;
 10719                           
 10720                           
 10721                           ;psect for function _calculateCurrent1
 10722  16B5                     _calculateCurrent1:	
 10723                           
 10724                           ;main.c: 294: if(analogs[5]-578<=0)
 10725                           
 10726                           ;incstack = 0
 10727                           ; Regs used in _calculateCurrent1: [wreg+status,2+status,0+pclath+cstack]
 10728  16B5  0022               	movlb	2	; select bank2
 10729  16B6  084A               	movf	(_analogs^(0+256)+10),w
 10730  16B7  3EBE               	addlw	190
 10731  16B8  0020               	movlb	0	; select bank0
 10732  16B9  00BE               	movwf	??_calculateCurrent1
 10733  16BA  30FD               	movlw	253
 10734  16BB  0022               	movlb	2	; select bank2
 10735  16BC  3D4B               	addwfc	((_analogs+1)^(0+256)+10),w
 10736  16BD  0020               	movlb	0	; select bank0
 10737  16BE  00BF               	movwf	??_calculateCurrent1+1
 10738  16BF  083F               	movf	??_calculateCurrent1+1,w
 10739  16C0  3A80               	xorlw	128
 10740  16C1  00C0               	movwf	??_calculateCurrent1+2
 10741  16C2  3080               	movlw	128
 10742  16C3  0240               	subwf	??_calculateCurrent1+2,w
 10743  16C4  1D03               	skipz
 10744  16C5  2EC8               	goto	u4805
 10745  16C6  3001               	movlw	1
 10746  16C7  023E               	subwf	??_calculateCurrent1,w
 10747  16C8                     u4805:	
 10748  16C8  1803               	skipnc
 10749  16C9  2ECE               	goto	l3948
 10750                           
 10751                           ;main.c: 295: {
 10752                           ;main.c: 296: current[1]=0;
 10753  16CA  0021               	movlb	1	; select bank1
 10754  16CB  01C6               	clrf	(_current^(0+128)+2)
 10755  16CC  01C7               	clrf	((_current+1)^(0+128)+2)
 10756                           
 10757                           ;main.c: 297: }
 10758  16CD  0008               	return
 10759  16CE                     l3948:	
 10760                           
 10761                           ;main.c: 298: else
 10762                           ;main.c: 299: {
 10763                           ;main.c: 300: current[1]=(int16_t)((analogs[5]-578)/3.2323);
 10764  16CE  0022               	movlb	2	; select bank2
 10765  16CF  084A               	movf	(_analogs^(0+256)+10),w
 10766  16D0  3EBE               	addlw	190
 10767  16D1  00F8               	movwf	___awtoft@c
 10768  16D2  30FD               	movlw	253
 10769  16D3  3D4B               	addwfc	((_analogs+1)^(0+256)+10),w
 10770  16D4  00F9               	movwf	___awtoft@c+1
 10771  16D5  3194  24E9  3196   	fcall	___awtoft
 10772  16D8  0878               	movf	?___awtoft,w
 10773  16D9  0020               	movlb	0	; select bank0
 10774  16DA  00A3               	movwf	___ftdiv@f1
 10775  16DB  0879               	movf	?___awtoft+1,w
 10776  16DC  00A4               	movwf	___ftdiv@f1+1
 10777  16DD  087A               	movf	?___awtoft+2,w
 10778  16DE  00A5               	movwf	___ftdiv@f1+2
 10779  16DF  30DE               	movlw	222
 10780  16E0  00A0               	movwf	___ftdiv@f2
 10781  16E1  304E               	movlw	78
 10782  16E2  00A1               	movwf	___ftdiv@f2+1
 10783  16E3  3040               	movlw	64
 10784  16E4  00A2               	movwf	___ftdiv@f2+2
 10785  16E5  318C  2444  3196   	fcall	___ftdiv
 10786  16E8  0020               	movlb	0	; select bank0
 10787  16E9  0820               	movf	?___ftdiv,w
 10788  16EA  00B0               	movwf	___fttol@f1
 10789  16EB  0821               	movf	?___ftdiv+1,w
 10790  16EC  00B1               	movwf	___fttol@f1+1
 10791  16ED  0822               	movf	?___ftdiv+2,w
 10792  16EE  00B2               	movwf	___fttol@f1+2
 10793  16EF  318B  2323         	fcall	___fttol
 10794  16F1  0020               	movlb	0	; select bank0
 10795  16F2  0831               	movf	?___fttol+1,w
 10796  16F3  0021               	movlb	1	; select bank1
 10797  16F4  00C7               	movwf	((_current+1)^(0+128)+2)
 10798  16F5  0020               	movlb	0	; select bank0
 10799  16F6  0830               	movf	?___fttol,w
 10800  16F7  0021               	movlb	1	; select bank1
 10801  16F8  00C6               	movwf	(_current^(0+128)+2)
 10802  16F9  0008               	return
 10803  16FA                     __end_of_calculateCurrent1:	
 10804                           
 10805                           	psect	text15
 10806  1670                     __ptext15:	
 10807 ;; *************** function _calculateCurrent0 *****************
 10808 ;; Defined at:
 10809 ;;		line 280 in file "main.c"
 10810 ;; Parameters:    Size  Location     Type
 10811 ;;		None
 10812 ;; Auto vars:     Size  Location     Type
 10813 ;;		None
 10814 ;; Return value:  Size  Location     Type
 10815 ;;                  1    wreg      void 
 10816 ;; Registers used:
 10817 ;;		wreg, status,2, status,0, pclath, cstack
 10818 ;; Tracked objects:
 10819 ;;		On entry : 0/0
 10820 ;;		On exit  : 0/0
 10821 ;;		Unchanged: 0/0
 10822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10825 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10826 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10827 ;;Total ram usage:        3 bytes
 10828 ;; Hardware stack levels used:    1
 10829 ;; Hardware stack levels required when called:    2
 10830 ;; This function calls:
 10831 ;;		___awtoft
 10832 ;;		___ftdiv
 10833 ;;		___fttol
 10834 ;; This function is called by:
 10835 ;;		_main
 10836 ;; This function uses a non-reentrant model
 10837 ;;
 10838                           
 10839                           
 10840                           ;psect for function _calculateCurrent0
 10841  1670                     _calculateCurrent0:	
 10842                           
 10843                           ;main.c: 282: if(analogs[4]-589<=0)
 10844                           
 10845                           ;incstack = 0
 10846                           ; Regs used in _calculateCurrent0: [wreg+status,2+status,0+pclath+cstack]
 10847  1670  0022               	movlb	2	; select bank2
 10848  1671  0848               	movf	(_analogs^(0+256)+8),w
 10849  1672  3EB3               	addlw	179
 10850  1673  0020               	movlb	0	; select bank0
 10851  1674  00BE               	movwf	??_calculateCurrent0
 10852  1675  30FD               	movlw	253
 10853  1676  0022               	movlb	2	; select bank2
 10854  1677  3D49               	addwfc	((_analogs+1)^(0+256)+8),w
 10855  1678  0020               	movlb	0	; select bank0
 10856  1679  00BF               	movwf	??_calculateCurrent0+1
 10857  167A  083F               	movf	??_calculateCurrent0+1,w
 10858  167B  3A80               	xorlw	128
 10859  167C  00C0               	movwf	??_calculateCurrent0+2
 10860  167D  3080               	movlw	128
 10861  167E  0240               	subwf	??_calculateCurrent0+2,w
 10862  167F  1D03               	skipz
 10863  1680  2E83               	goto	u4795
 10864  1681  3001               	movlw	1
 10865  1682  023E               	subwf	??_calculateCurrent0,w
 10866  1683                     u4795:	
 10867  1683  1803               	skipnc
 10868  1684  2E89               	goto	l3942
 10869                           
 10870                           ;main.c: 283: {
 10871                           ;main.c: 284: current[0]=0;
 10872  1685  0021               	movlb	1	; select bank1
 10873  1686  01C4               	clrf	_current^(0+128)
 10874  1687  01C5               	clrf	(_current+1)^(0+128)
 10875                           
 10876                           ;main.c: 285: }
 10877  1688  0008               	return
 10878  1689                     l3942:	
 10879                           
 10880                           ;main.c: 286: else
 10881                           ;main.c: 287: {
 10882                           ;main.c: 288: current[0]=(int16_t)((analogs[4]-589)/1.3165);
 10883  1689  0022               	movlb	2	; select bank2
 10884  168A  0848               	movf	(_analogs^(0+256)+8),w
 10885  168B  3EB3               	addlw	179
 10886  168C  00F8               	movwf	___awtoft@c
 10887  168D  30FD               	movlw	253
 10888  168E  3D49               	addwfc	((_analogs+1)^(0+256)+8),w
 10889  168F  00F9               	movwf	___awtoft@c+1
 10890  1690  3194  24E9  3196   	fcall	___awtoft
 10891  1693  0878               	movf	?___awtoft,w
 10892  1694  0020               	movlb	0	; select bank0
 10893  1695  00A3               	movwf	___ftdiv@f1
 10894  1696  0879               	movf	?___awtoft+1,w
 10895  1697  00A4               	movwf	___ftdiv@f1+1
 10896  1698  087A               	movf	?___awtoft+2,w
 10897  1699  00A5               	movwf	___ftdiv@f1+2
 10898  169A  3083               	movlw	131
 10899  169B  00A0               	movwf	___ftdiv@f2
 10900  169C  30A8               	movlw	168
 10901  169D  00A1               	movwf	___ftdiv@f2+1
 10902  169E  303F               	movlw	63
 10903  169F  00A2               	movwf	___ftdiv@f2+2
 10904  16A0  318C  2444  3196   	fcall	___ftdiv
 10905  16A3  0020               	movlb	0	; select bank0
 10906  16A4  0820               	movf	?___ftdiv,w
 10907  16A5  00B0               	movwf	___fttol@f1
 10908  16A6  0821               	movf	?___ftdiv+1,w
 10909  16A7  00B1               	movwf	___fttol@f1+1
 10910  16A8  0822               	movf	?___ftdiv+2,w
 10911  16A9  00B2               	movwf	___fttol@f1+2
 10912  16AA  318B  2323         	fcall	___fttol
 10913  16AC  0020               	movlb	0	; select bank0
 10914  16AD  0831               	movf	?___fttol+1,w
 10915  16AE  0021               	movlb	1	; select bank1
 10916  16AF  00C5               	movwf	(_current+1)^(0+128)
 10917  16B0  0020               	movlb	0	; select bank0
 10918  16B1  0830               	movf	?___fttol,w
 10919  16B2  0021               	movlb	1	; select bank1
 10920  16B3  00C4               	movwf	_current^(0+128)
 10921  16B4  0008               	return
 10922  16B5                     __end_of_calculateCurrent0:	
 10923                           
 10924                           	psect	text16
 10925  0B23                     __ptext16:	
 10926 ;; *************** function ___fttol *****************
 10927 ;; Defined at:
 10928 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
 10929 ;; Parameters:    Size  Location     Type
 10930 ;;  f1              3   16[BANK0 ] float 
 10931 ;; Auto vars:     Size  Location     Type
 10932 ;;  lval            4   25[BANK0 ] unsigned long 
 10933 ;;  exp1            1   29[BANK0 ] unsigned char 
 10934 ;;  sign1           1   24[BANK0 ] unsigned char 
 10935 ;; Return value:  Size  Location     Type
 10936 ;;                  4   16[BANK0 ] long 
 10937 ;; Registers used:
 10938 ;;		wreg, status,2, status,0
 10939 ;; Tracked objects:
 10940 ;;		On entry : 0/0
 10941 ;;		On exit  : 0/0
 10942 ;;		Unchanged: 0/0
 10943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10944 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10945 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10946 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10947 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10948 ;;Total ram usage:       14 bytes
 10949 ;; Hardware stack levels used:    1
 10950 ;; This function calls:
 10951 ;;		Nothing
 10952 ;; This function is called by:
 10953 ;;		_main
 10954 ;;		_calculateCurrent0
 10955 ;;		_calculateCurrent1
 10956 ;;		_tempCalc
 10957 ;; This function uses a non-reentrant model
 10958 ;;
 10959                           
 10960                           
 10961                           ;psect for function ___fttol
 10962  0B23                     ___fttol:	
 10963                           
 10964                           ;incstack = 0
 10965                           ; Regs used in ___fttol: [wreg+status,2+status,0]
 10966  0B23  0020               	movlb	0	; select bank0
 10967  0B24  0830               	movf	___fttol@f1,w
 10968  0B25  00B4               	movwf	??___fttol
 10969  0B26  0831               	movf	___fttol@f1+1,w
 10970  0B27  00B5               	movwf	??___fttol+1
 10971  0B28  0832               	movf	___fttol@f1+2,w
 10972  0B29  00B6               	movwf	??___fttol+2
 10973  0B2A  1003               	clrc
 10974  0B2B  0D35               	rlf	??___fttol+1,w
 10975  0B2C  0D36               	rlf	??___fttol+2,w
 10976  0B2D  00B7               	movwf	??___fttol+3
 10977  0B2E  0837               	movf	??___fttol+3,w
 10978  0B2F  00BD               	movwf	___fttol@exp1
 10979  0B30  083D               	movf	___fttol@exp1,w
 10980  0B31  1D03               	btfss	3,2
 10981  0B32  2B3C               	goto	l3854
 10982  0B33  3000               	movlw	0
 10983  0B34  00B3               	movwf	?___fttol+3
 10984  0B35  3000               	movlw	0
 10985  0B36  00B2               	movwf	?___fttol+2
 10986  0B37  3000               	movlw	0
 10987  0B38  00B1               	movwf	?___fttol+1
 10988  0B39  3000               	movlw	0
 10989  0B3A  00B0               	movwf	?___fttol
 10990  0B3B  0008               	return
 10991  0B3C                     l3854:	
 10992  0B3C  0830               	movf	___fttol@f1,w
 10993  0B3D  00B4               	movwf	??___fttol
 10994  0B3E  0831               	movf	___fttol@f1+1,w
 10995  0B3F  00B5               	movwf	??___fttol+1
 10996  0B40  0832               	movf	___fttol@f1+2,w
 10997  0B41  00B6               	movwf	??___fttol+2
 10998  0B42  3017               	movlw	23
 10999  0B43                     u4575:	
 11000  0B43  36B6               	lsrf	??___fttol+2,f
 11001  0B44  0CB5               	rrf	??___fttol+1,f
 11002  0B45  0CB4               	rrf	??___fttol,f
 11003  0B46  0B89               	decfsz	9,f
 11004  0B47  2B43               	goto	u4575
 11005  0B48  0834               	movf	??___fttol,w
 11006  0B49  00B7               	movwf	??___fttol+3
 11007  0B4A  0837               	movf	??___fttol+3,w
 11008  0B4B  00B8               	movwf	___fttol@sign1
 11009  0B4C  17B1               	bsf	___fttol@f1+1,7
 11010  0B4D  30FF               	movlw	255
 11011  0B4E  05B0               	andwf	___fttol@f1,f
 11012  0B4F  30FF               	movlw	255
 11013  0B50  05B1               	andwf	___fttol@f1+1,f
 11014  0B51  3000               	movlw	0
 11015  0B52  05B2               	andwf	___fttol@f1+2,f
 11016  0B53  0830               	movf	___fttol@f1,w
 11017  0B54  00B9               	movwf	___fttol@lval
 11018  0B55  0831               	movf	___fttol@f1+1,w
 11019  0B56  00BA               	movwf	___fttol@lval+1
 11020  0B57  0832               	movf	___fttol@f1+2,w
 11021  0B58  00BB               	movwf	___fttol@lval+2
 11022  0B59  01BC               	clrf	___fttol@lval+3
 11023  0B5A  308E               	movlw	142
 11024  0B5B  02BD               	subwf	___fttol@exp1,f
 11025  0B5C  1FBD               	btfss	___fttol@exp1,7
 11026  0B5D  2B7A               	goto	l3874
 11027  0B5E  083D               	movf	___fttol@exp1,w
 11028  0B5F  3A80               	xorlw	128
 11029  0B60  3E8F               	addlw	143
 11030  0B61  1803               	skipnc
 11031  0B62  2B6C               	goto	l3872
 11032  0B63  3000               	movlw	0
 11033  0B64  00B3               	movwf	?___fttol+3
 11034  0B65  3000               	movlw	0
 11035  0B66  00B2               	movwf	?___fttol+2
 11036  0B67  3000               	movlw	0
 11037  0B68  00B1               	movwf	?___fttol+1
 11038  0B69  3000               	movlw	0
 11039  0B6A  00B0               	movwf	?___fttol
 11040  0B6B  0008               	return
 11041  0B6C                     l3872:	
 11042  0B6C  3001               	movlw	1
 11043  0B6D                     u4605:	
 11044  0B6D  36BC               	lsrf	___fttol@lval+3,f
 11045  0B6E  0CBB               	rrf	___fttol@lval+2,f
 11046  0B6F  0CBA               	rrf	___fttol@lval+1,f
 11047  0B70  0CB9               	rrf	___fttol@lval,f
 11048  0B71  0B89               	decfsz	9,f
 11049  0B72  2B6D               	goto	u4605
 11050  0B73  3001               	movlw	1
 11051  0B74  00B4               	movwf	??___fttol
 11052  0B75  0834               	movf	??___fttol,w
 11053  0B76  07BD               	addwf	___fttol@exp1,f
 11054  0B77  1903               	btfsc	3,2
 11055  0B78  2B93               	goto	l3882
 11056  0B79  2B6C               	goto	l3872
 11057  0B7A                     l3874:	
 11058  0B7A  3018               	movlw	24
 11059  0B7B  023D               	subwf	___fttol@exp1,w
 11060  0B7C  1C03               	skipc
 11061  0B7D  2B90               	goto	l818
 11062  0B7E  3000               	movlw	0
 11063  0B7F  00B3               	movwf	?___fttol+3
 11064  0B80  3000               	movlw	0
 11065  0B81  00B2               	movwf	?___fttol+2
 11066  0B82  3000               	movlw	0
 11067  0B83  00B1               	movwf	?___fttol+1
 11068  0B84  3000               	movlw	0
 11069  0B85  00B0               	movwf	?___fttol
 11070  0B86  0008               	return
 11071  0B87                     l3880:	
 11072  0B87  3001               	movlw	1
 11073  0B88                     u4635:	
 11074  0B88  35B9               	lslf	___fttol@lval,f
 11075  0B89  0DBA               	rlf	___fttol@lval+1,f
 11076  0B8A  0DBB               	rlf	___fttol@lval+2,f
 11077  0B8B  0DBC               	rlf	___fttol@lval+3,f
 11078  0B8C  0B89               	decfsz	9,f
 11079  0B8D  2B88               	goto	u4635
 11080  0B8E  3001               	movlw	1
 11081  0B8F  02BD               	subwf	___fttol@exp1,f
 11082  0B90                     l818:	
 11083  0B90  083D               	movf	___fttol@exp1,w
 11084  0B91  1D03               	btfss	3,2
 11085  0B92  2B87               	goto	l3880
 11086  0B93                     l3882:	
 11087  0B93  0838               	movf	___fttol@sign1,w
 11088  0B94  1903               	btfsc	3,2
 11089  0B95  2BA1               	goto	l3886
 11090  0B96  09B9               	comf	___fttol@lval,f
 11091  0B97  09BA               	comf	___fttol@lval+1,f
 11092  0B98  09BB               	comf	___fttol@lval+2,f
 11093  0B99  09BC               	comf	___fttol@lval+3,f
 11094  0B9A  0AB9               	incf	___fttol@lval,f
 11095  0B9B  1903               	skipnz
 11096  0B9C  0ABA               	incf	___fttol@lval+1,f
 11097  0B9D  1903               	skipnz
 11098  0B9E  0ABB               	incf	___fttol@lval+2,f
 11099  0B9F  1903               	skipnz
 11100  0BA0  0ABC               	incf	___fttol@lval+3,f
 11101  0BA1                     l3886:	
 11102  0BA1  083C               	movf	___fttol@lval+3,w
 11103  0BA2  00B3               	movwf	?___fttol+3
 11104  0BA3  083B               	movf	___fttol@lval+2,w
 11105  0BA4  00B2               	movwf	?___fttol+2
 11106  0BA5  083A               	movf	___fttol@lval+1,w
 11107  0BA6  00B1               	movwf	?___fttol+1
 11108  0BA7  0839               	movf	___fttol@lval,w
 11109  0BA8  00B0               	movwf	?___fttol
 11110  0BA9  0008               	return
 11111  0BAA                     __end_of___fttol:	
 11112                           
 11113                           	psect	text17
 11114  0C44                     __ptext17:	
 11115 ;; *************** function ___ftdiv *****************
 11116 ;; Defined at:
 11117 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
 11118 ;; Parameters:    Size  Location     Type
 11119 ;;  f2              3    0[BANK0 ] float 
 11120 ;;  f1              3    3[BANK0 ] float 
 11121 ;; Auto vars:     Size  Location     Type
 11122 ;;  f3              3   11[BANK0 ] float 
 11123 ;;  sign            1   15[BANK0 ] unsigned char 
 11124 ;;  exp             1   14[BANK0 ] unsigned char 
 11125 ;;  cntr            1   10[BANK0 ] unsigned char 
 11126 ;; Return value:  Size  Location     Type
 11127 ;;                  3    0[BANK0 ] float 
 11128 ;; Registers used:
 11129 ;;		wreg, status,2, status,0, pclath, cstack
 11130 ;; Tracked objects:
 11131 ;;		On entry : 0/0
 11132 ;;		On exit  : 0/0
 11133 ;;		Unchanged: 0/0
 11134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11135 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11136 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11137 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11138 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11139 ;;Total ram usage:       16 bytes
 11140 ;; Hardware stack levels used:    1
 11141 ;; Hardware stack levels required when called:    1
 11142 ;; This function calls:
 11143 ;;		___ftpack
 11144 ;; This function is called by:
 11145 ;;		_main
 11146 ;;		_calculateCurrent0
 11147 ;;		_calculateCurrent1
 11148 ;;		_tempCalc
 11149 ;; This function uses a non-reentrant model
 11150 ;;
 11151                           
 11152                           
 11153                           ;psect for function ___ftdiv
 11154  0C44                     ___ftdiv:	
 11155                           
 11156                           ;incstack = 0
 11157                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
 11158  0C44  0020               	movlb	0	; select bank0
 11159  0C45  0823               	movf	___ftdiv@f1,w
 11160  0C46  00A6               	movwf	??___ftdiv
 11161  0C47  0824               	movf	___ftdiv@f1+1,w
 11162  0C48  00A7               	movwf	??___ftdiv+1
 11163  0C49  0825               	movf	___ftdiv@f1+2,w
 11164  0C4A  00A8               	movwf	??___ftdiv+2
 11165  0C4B  1003               	clrc
 11166  0C4C  0D27               	rlf	??___ftdiv+1,w
 11167  0C4D  0D28               	rlf	??___ftdiv+2,w
 11168  0C4E  00A9               	movwf	??___ftdiv+3
 11169  0C4F  0829               	movf	??___ftdiv+3,w
 11170  0C50  00AE               	movwf	___ftdiv@exp
 11171  0C51  082E               	movf	___ftdiv@exp,w
 11172  0C52  1D03               	btfss	3,2
 11173  0C53  2C5B               	goto	l3804
 11174  0C54  3000               	movlw	0
 11175  0C55  00A0               	movwf	?___ftdiv
 11176  0C56  3000               	movlw	0
 11177  0C57  00A1               	movwf	?___ftdiv+1
 11178  0C58  3000               	movlw	0
 11179  0C59  00A2               	movwf	?___ftdiv+2
 11180  0C5A  0008               	return
 11181  0C5B                     l3804:	
 11182  0C5B  0820               	movf	___ftdiv@f2,w
 11183  0C5C  00A6               	movwf	??___ftdiv
 11184  0C5D  0821               	movf	___ftdiv@f2+1,w
 11185  0C5E  00A7               	movwf	??___ftdiv+1
 11186  0C5F  0822               	movf	___ftdiv@f2+2,w
 11187  0C60  00A8               	movwf	??___ftdiv+2
 11188  0C61  1003               	clrc
 11189  0C62  0D27               	rlf	??___ftdiv+1,w
 11190  0C63  0D28               	rlf	??___ftdiv+2,w
 11191  0C64  00A9               	movwf	??___ftdiv+3
 11192  0C65  0829               	movf	??___ftdiv+3,w
 11193  0C66  00AF               	movwf	___ftdiv@sign
 11194  0C67  082F               	movf	___ftdiv@sign,w
 11195  0C68  1D03               	btfss	3,2
 11196  0C69  2C71               	goto	l3810
 11197  0C6A  3000               	movlw	0
 11198  0C6B  00A0               	movwf	?___ftdiv
 11199  0C6C  3000               	movlw	0
 11200  0C6D  00A1               	movwf	?___ftdiv+1
 11201  0C6E  3000               	movlw	0
 11202  0C6F  00A2               	movwf	?___ftdiv+2
 11203  0C70  0008               	return
 11204  0C71                     l3810:	
 11205  0C71  3000               	movlw	0
 11206  0C72  00AB               	movwf	___ftdiv@f3
 11207  0C73  3000               	movlw	0
 11208  0C74  00AC               	movwf	___ftdiv@f3+1
 11209  0C75  3000               	movlw	0
 11210  0C76  00AD               	movwf	___ftdiv@f3+2
 11211  0C77  3089               	movlw	137
 11212  0C78  072F               	addwf	___ftdiv@sign,w
 11213  0C79  00A6               	movwf	??___ftdiv
 11214  0C7A  0826               	movf	??___ftdiv,w
 11215  0C7B  02AE               	subwf	___ftdiv@exp,f
 11216  0C7C  0823               	movf	___ftdiv@f1,w
 11217  0C7D  00A6               	movwf	??___ftdiv
 11218  0C7E  0824               	movf	___ftdiv@f1+1,w
 11219  0C7F  00A7               	movwf	??___ftdiv+1
 11220  0C80  0825               	movf	___ftdiv@f1+2,w
 11221  0C81  00A8               	movwf	??___ftdiv+2
 11222  0C82  3010               	movlw	16
 11223  0C83                     u4495:	
 11224  0C83  36A8               	lsrf	??___ftdiv+2,f
 11225  0C84  0CA7               	rrf	??___ftdiv+1,f
 11226  0C85  0CA6               	rrf	??___ftdiv,f
 11227  0C86  0B89               	decfsz	9,f
 11228  0C87  2C83               	goto	u4495
 11229  0C88  0826               	movf	??___ftdiv,w
 11230  0C89  00A9               	movwf	??___ftdiv+3
 11231  0C8A  0829               	movf	??___ftdiv+3,w
 11232  0C8B  00AF               	movwf	___ftdiv@sign
 11233  0C8C  0820               	movf	___ftdiv@f2,w
 11234  0C8D  00A6               	movwf	??___ftdiv
 11235  0C8E  0821               	movf	___ftdiv@f2+1,w
 11236  0C8F  00A7               	movwf	??___ftdiv+1
 11237  0C90  0822               	movf	___ftdiv@f2+2,w
 11238  0C91  00A8               	movwf	??___ftdiv+2
 11239  0C92  3010               	movlw	16
 11240  0C93                     u4505:	
 11241  0C93  36A8               	lsrf	??___ftdiv+2,f
 11242  0C94  0CA7               	rrf	??___ftdiv+1,f
 11243  0C95  0CA6               	rrf	??___ftdiv,f
 11244  0C96  0B89               	decfsz	9,f
 11245  0C97  2C93               	goto	u4505
 11246  0C98  0826               	movf	??___ftdiv,w
 11247  0C99  00A9               	movwf	??___ftdiv+3
 11248  0C9A  0829               	movf	??___ftdiv+3,w
 11249  0C9B  06AF               	xorwf	___ftdiv@sign,f
 11250  0C9C  3080               	movlw	128
 11251  0C9D  00A6               	movwf	??___ftdiv
 11252  0C9E  0826               	movf	??___ftdiv,w
 11253  0C9F  05AF               	andwf	___ftdiv@sign,f
 11254  0CA0  17A4               	bsf	___ftdiv@f1+1,7
 11255  0CA1  30FF               	movlw	255
 11256  0CA2  05A3               	andwf	___ftdiv@f1,f
 11257  0CA3  30FF               	movlw	255
 11258  0CA4  05A4               	andwf	___ftdiv@f1+1,f
 11259  0CA5  3000               	movlw	0
 11260  0CA6  05A5               	andwf	___ftdiv@f1+2,f
 11261  0CA7  17A1               	bsf	___ftdiv@f2+1,7
 11262  0CA8  30FF               	movlw	255
 11263  0CA9  05A0               	andwf	___ftdiv@f2,f
 11264  0CAA  30FF               	movlw	255
 11265  0CAB  05A1               	andwf	___ftdiv@f2+1,f
 11266  0CAC  3000               	movlw	0
 11267  0CAD  05A2               	andwf	___ftdiv@f2+2,f
 11268  0CAE  3018               	movlw	24
 11269  0CAF  00A6               	movwf	??___ftdiv
 11270  0CB0  0826               	movf	??___ftdiv,w
 11271  0CB1  00AA               	movwf	___ftdiv@cntr
 11272  0CB2                     l3824:	
 11273  0CB2  3001               	movlw	1
 11274  0CB3                     u4515:	
 11275  0CB3  35AB               	lslf	___ftdiv@f3,f
 11276  0CB4  0DAC               	rlf	___ftdiv@f3+1,f
 11277  0CB5  0DAD               	rlf	___ftdiv@f3+2,f
 11278  0CB6  0B89               	decfsz	9,f
 11279  0CB7  2CB3               	goto	u4515
 11280  0CB8  0822               	movf	___ftdiv@f2+2,w
 11281  0CB9  0225               	subwf	___ftdiv@f1+2,w
 11282  0CBA  1D03               	skipz
 11283  0CBB  2CC2               	goto	u4525
 11284  0CBC  0821               	movf	___ftdiv@f2+1,w
 11285  0CBD  0224               	subwf	___ftdiv@f1+1,w
 11286  0CBE  1D03               	skipz
 11287  0CBF  2CC2               	goto	u4525
 11288  0CC0  0820               	movf	___ftdiv@f2,w
 11289  0CC1  0223               	subwf	___ftdiv@f1,w
 11290  0CC2                     u4525:	
 11291  0CC2  1C03               	skipc
 11292  0CC3  2CCB               	goto	l3832
 11293  0CC4  0820               	movf	___ftdiv@f2,w
 11294  0CC5  02A3               	subwf	___ftdiv@f1,f
 11295  0CC6  0821               	movf	___ftdiv@f2+1,w
 11296  0CC7  3BA4               	subwfb	___ftdiv@f1+1,f
 11297  0CC8  0822               	movf	___ftdiv@f2+2,w
 11298  0CC9  3BA5               	subwfb	___ftdiv@f1+2,f
 11299  0CCA  142B               	bsf	___ftdiv@f3,0
 11300  0CCB                     l3832:	
 11301  0CCB  3001               	movlw	1
 11302  0CCC                     u4535:	
 11303  0CCC  35A3               	lslf	___ftdiv@f1,f
 11304  0CCD  0DA4               	rlf	___ftdiv@f1+1,f
 11305  0CCE  0DA5               	rlf	___ftdiv@f1+2,f
 11306  0CCF  0B89               	decfsz	9,f
 11307  0CD0  2CCC               	goto	u4535
 11308  0CD1  3001               	movlw	1
 11309  0CD2  02AA               	subwf	___ftdiv@cntr,f
 11310  0CD3  1D03               	btfss	3,2
 11311  0CD4  2CB2               	goto	l3824
 11312  0CD5  082B               	movf	___ftdiv@f3,w
 11313  0CD6  00F0               	movwf	___ftpack@arg
 11314  0CD7  082C               	movf	___ftdiv@f3+1,w
 11315  0CD8  00F1               	movwf	___ftpack@arg+1
 11316  0CD9  082D               	movf	___ftdiv@f3+2,w
 11317  0CDA  00F2               	movwf	___ftpack@arg+2
 11318  0CDB  082E               	movf	___ftdiv@exp,w
 11319  0CDC  00A6               	movwf	??___ftdiv
 11320  0CDD  0826               	movf	??___ftdiv,w
 11321  0CDE  00F3               	movwf	___ftpack@exp
 11322  0CDF  082F               	movf	___ftdiv@sign,w
 11323  0CE0  00A7               	movwf	??___ftdiv+1
 11324  0CE1  0827               	movf	??___ftdiv+1,w
 11325  0CE2  00F4               	movwf	___ftpack@sign
 11326  0CE3  3189  21BB         	fcall	___ftpack
 11327  0CE5  0870               	movf	?___ftpack,w
 11328  0CE6  0020               	movlb	0	; select bank0
 11329  0CE7  00A0               	movwf	?___ftdiv
 11330  0CE8  0871               	movf	?___ftpack+1,w
 11331  0CE9  00A1               	movwf	?___ftdiv+1
 11332  0CEA  0872               	movf	?___ftpack+2,w
 11333  0CEB  00A2               	movwf	?___ftdiv+2
 11334  0CEC  0008               	return
 11335  0CED                     __end_of___ftdiv:	
 11336                           
 11337                           	psect	text18
 11338  14E9                     __ptext18:	
 11339 ;; *************** function ___awtoft *****************
 11340 ;; Defined at:
 11341 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
 11342 ;; Parameters:    Size  Location     Type
 11343 ;;  c               2    8[COMMON] int 
 11344 ;; Auto vars:     Size  Location     Type
 11345 ;;  sign            1   13[COMMON] unsigned char 
 11346 ;; Return value:  Size  Location     Type
 11347 ;;                  3    8[COMMON] float 
 11348 ;; Registers used:
 11349 ;;		wreg, status,2, status,0, pclath, cstack
 11350 ;; Tracked objects:
 11351 ;;		On entry : 0/0
 11352 ;;		On exit  : 0/0
 11353 ;;		Unchanged: 0/0
 11354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11355 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11356 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11357 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11358 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11359 ;;Total ram usage:        6 bytes
 11360 ;; Hardware stack levels used:    1
 11361 ;; Hardware stack levels required when called:    1
 11362 ;; This function calls:
 11363 ;;		___ftpack
 11364 ;; This function is called by:
 11365 ;;		_main
 11366 ;;		_calculateCurrent0
 11367 ;;		_calculateCurrent1
 11368 ;;		_tempCalc
 11369 ;;		_log
 11370 ;; This function uses a non-reentrant model
 11371 ;;
 11372                           
 11373                           
 11374                           ;psect for function ___awtoft
 11375  14E9                     ___awtoft:	
 11376                           
 11377                           ;incstack = 0
 11378                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
 11379  14E9  01FD               	clrf	___awtoft@sign
 11380  14EA  1FF9               	btfss	___awtoft@c+1,7
 11381  14EB  2CF3               	goto	l3472
 11382  14EC  09F8               	comf	___awtoft@c,f
 11383  14ED  09F9               	comf	___awtoft@c+1,f
 11384  14EE  0AF8               	incf	___awtoft@c,f
 11385  14EF  1903               	skipnz
 11386  14F0  0AF9               	incf	___awtoft@c+1,f
 11387  14F1  01FD               	clrf	___awtoft@sign
 11388  14F2  0AFD               	incf	___awtoft@sign,f
 11389  14F3                     l3472:	
 11390  14F3  0878               	movf	___awtoft@c,w
 11391  14F4  00F0               	movwf	___ftpack@arg
 11392  14F5  0879               	movf	___awtoft@c+1,w
 11393  14F6  00F1               	movwf	___ftpack@arg+1
 11394  14F7  01F2               	clrf	___ftpack@arg+2
 11395  14F8  308E               	movlw	142
 11396  14F9  00FB               	movwf	??___awtoft
 11397  14FA  087B               	movf	??___awtoft,w
 11398  14FB  00F3               	movwf	___ftpack@exp
 11399  14FC  087D               	movf	___awtoft@sign,w
 11400  14FD  00FC               	movwf	??___awtoft+1
 11401  14FE  087C               	movf	??___awtoft+1,w
 11402  14FF  00F4               	movwf	___ftpack@sign
 11403  1500  3189  21BB         	fcall	___ftpack
 11404  1502  0870               	movf	?___ftpack,w
 11405  1503  00F8               	movwf	?___awtoft
 11406  1504  0871               	movf	?___ftpack+1,w
 11407  1505  00F9               	movwf	?___awtoft+1
 11408  1506  0872               	movf	?___ftpack+2,w
 11409  1507  00FA               	movwf	?___awtoft+2
 11410  1508  0008               	return
 11411  1509                     __end_of___awtoft:	
 11412                           
 11413                           	psect	text19
 11414  09BB                     __ptext19:	
 11415 ;; *************** function ___ftpack *****************
 11416 ;; Defined at:
 11417 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
 11418 ;; Parameters:    Size  Location     Type
 11419 ;;  arg             3    0[COMMON] unsigned um
 11420 ;;  exp             1    3[COMMON] unsigned char 
 11421 ;;  sign            1    4[COMMON] unsigned char 
 11422 ;; Auto vars:     Size  Location     Type
 11423 ;;		None
 11424 ;; Return value:  Size  Location     Type
 11425 ;;                  3    0[COMMON] float 
 11426 ;; Registers used:
 11427 ;;		wreg, status,2, status,0
 11428 ;; Tracked objects:
 11429 ;;		On entry : 0/0
 11430 ;;		On exit  : 0/0
 11431 ;;		Unchanged: 0/0
 11432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11433 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11435 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11436 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11437 ;;Total ram usage:        8 bytes
 11438 ;; Hardware stack levels used:    1
 11439 ;; This function calls:
 11440 ;;		Nothing
 11441 ;; This function is called by:
 11442 ;;		___awtoft
 11443 ;;		___ftadd
 11444 ;;		___ftdiv
 11445 ;;		___ftmul
 11446 ;; This function uses a non-reentrant model
 11447 ;;
 11448                           
 11449                           
 11450                           ;psect for function ___ftpack
 11451  09BB                     ___ftpack:	
 11452                           
 11453                           ;incstack = 0
 11454                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
 11455  09BB  0873               	movf	___ftpack@exp,w
 11456  09BC  1903               	btfsc	3,2
 11457  09BD  29C3               	goto	l3266
 11458  09BE  0872               	movf	___ftpack@arg+2,w
 11459  09BF  0471               	iorwf	___ftpack@arg+1,w
 11460  09C0  0470               	iorwf	___ftpack@arg,w
 11461  09C1  1D03               	skipz
 11462  09C2  29D4               	goto	l3272
 11463  09C3                     l3266:	
 11464  09C3  3000               	movlw	0
 11465  09C4  00F0               	movwf	?___ftpack
 11466  09C5  3000               	movlw	0
 11467  09C6  00F1               	movwf	?___ftpack+1
 11468  09C7  3000               	movlw	0
 11469  09C8  00F2               	movwf	?___ftpack+2
 11470  09C9  0008               	return
 11471  09CA                     l3270:	
 11472  09CA  3001               	movlw	1
 11473  09CB  00F5               	movwf	??___ftpack
 11474  09CC  0875               	movf	??___ftpack,w
 11475  09CD  07F3               	addwf	___ftpack@exp,f
 11476  09CE  3001               	movlw	1
 11477  09CF                     u3595:	
 11478  09CF  36F2               	lsrf	___ftpack@arg+2,f
 11479  09D0  0CF1               	rrf	___ftpack@arg+1,f
 11480  09D1  0CF0               	rrf	___ftpack@arg,f
 11481  09D2  0B89               	decfsz	9,f
 11482  09D3  29CF               	goto	u3595
 11483  09D4                     l3272:	
 11484  09D4  30FE               	movlw	254
 11485  09D5  0572               	andwf	___ftpack@arg+2,w
 11486  09D6  1903               	btfsc	3,2
 11487  09D7  29ED               	goto	l727
 11488  09D8  29CA               	goto	l3270
 11489  09D9                     l3274:	
 11490  09D9  3001               	movlw	1
 11491  09DA  00F5               	movwf	??___ftpack
 11492  09DB  0875               	movf	??___ftpack,w
 11493  09DC  07F3               	addwf	___ftpack@exp,f
 11494  09DD  3001               	movlw	1
 11495  09DE  07F0               	addwf	___ftpack@arg,f
 11496  09DF  3000               	movlw	0
 11497  09E0  1803               	skipnc
 11498  09E1  3001               	movlw	1
 11499  09E2  07F1               	addwf	___ftpack@arg+1,f
 11500  09E3  3000               	movlw	0
 11501  09E4  1803               	skipnc
 11502  09E5  3001               	movlw	1
 11503  09E6  07F2               	addwf	___ftpack@arg+2,f
 11504  09E7  3001               	movlw	1
 11505  09E8                     u3615:	
 11506  09E8  36F2               	lsrf	___ftpack@arg+2,f
 11507  09E9  0CF1               	rrf	___ftpack@arg+1,f
 11508  09EA  0CF0               	rrf	___ftpack@arg,f
 11509  09EB  0B89               	decfsz	9,f
 11510  09EC  29E8               	goto	u3615
 11511  09ED                     l727:	
 11512  09ED  30FF               	movlw	255
 11513  09EE  0572               	andwf	___ftpack@arg+2,w
 11514  09EF  1903               	btfsc	3,2
 11515  09F0  29FA               	goto	l3282
 11516  09F1  29D9               	goto	l3274
 11517  09F2                     l3280:	
 11518  09F2  3001               	movlw	1
 11519  09F3  02F3               	subwf	___ftpack@exp,f
 11520  09F4  3001               	movlw	1
 11521  09F5                     u3635:	
 11522  09F5  35F0               	lslf	___ftpack@arg,f
 11523  09F6  0DF1               	rlf	___ftpack@arg+1,f
 11524  09F7  0DF2               	rlf	___ftpack@arg+2,f
 11525  09F8  0B89               	decfsz	9,f
 11526  09F9  29F5               	goto	u3635
 11527  09FA                     l3282:	
 11528  09FA  1BF1               	btfsc	___ftpack@arg+1,7
 11529  09FB  2A00               	goto	l734
 11530  09FC  3002               	movlw	2
 11531  09FD  0273               	subwf	___ftpack@exp,w
 11532  09FE  1803               	skipnc
 11533  09FF  29F2               	goto	l3280
 11534  0A00                     l734:	
 11535  0A00  1873               	btfsc	___ftpack@exp,0
 11536  0A01  2A08               	goto	l735
 11537  0A02  30FF               	movlw	255
 11538  0A03  05F0               	andwf	___ftpack@arg,f
 11539  0A04  307F               	movlw	127
 11540  0A05  05F1               	andwf	___ftpack@arg+1,f
 11541  0A06  30FF               	movlw	255
 11542  0A07  05F2               	andwf	___ftpack@arg+2,f
 11543  0A08                     l735:	
 11544  0A08  1003               	clrc
 11545  0A09  0CF3               	rrf	___ftpack@exp,f
 11546  0A0A  0873               	movf	___ftpack@exp,w
 11547  0A0B  00F5               	movwf	??___ftpack
 11548  0A0C  01F6               	clrf	??___ftpack+1
 11549  0A0D  01F7               	clrf	??___ftpack+2
 11550  0A0E  3010               	movlw	16
 11551  0A0F                     u3675:	
 11552  0A0F  35F5               	lslf	??___ftpack,f
 11553  0A10  0DF6               	rlf	??___ftpack+1,f
 11554  0A11  0DF7               	rlf	??___ftpack+2,f
 11555  0A12  0B89               	decfsz	9,f
 11556  0A13  2A0F               	goto	u3675
 11557  0A14  0875               	movf	??___ftpack,w
 11558  0A15  04F0               	iorwf	___ftpack@arg,f
 11559  0A16  0876               	movf	??___ftpack+1,w
 11560  0A17  04F1               	iorwf	___ftpack@arg+1,f
 11561  0A18  0877               	movf	??___ftpack+2,w
 11562  0A19  04F2               	iorwf	___ftpack@arg+2,f
 11563  0A1A  0874               	movf	___ftpack@sign,w
 11564  0A1B  1903               	btfsc	3,2
 11565  0A1C  0008               	return
 11566  0A1D  17F2               	bsf	___ftpack@arg+2,7
 11567  0A1E  0008               	return
 11568  0A1F                     __end_of___ftpack:	
 11569                           
 11570                           	psect	text20
 11571  1554                     __ptext20:	
 11572 ;; *************** function _SYSTEM_Initialize *****************
 11573 ;; Defined at:
 11574 ;;		line 71 in file "system.c"
 11575 ;; Parameters:    Size  Location     Type
 11576 ;;		None
 11577 ;; Auto vars:     Size  Location     Type
 11578 ;;		None
 11579 ;; Return value:  Size  Location     Type
 11580 ;;                  1    wreg      void 
 11581 ;; Registers used:
 11582 ;;		wreg, status,2, status,0, pclath, cstack
 11583 ;; Tracked objects:
 11584 ;;		On entry : 0/0
 11585 ;;		On exit  : 0/0
 11586 ;;		Unchanged: 0/0
 11587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11590 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11591 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11592 ;;Total ram usage:        2 bytes
 11593 ;; Hardware stack levels used:    1
 11594 ;; Hardware stack levels required when called:    3
 11595 ;; This function calls:
 11596 ;;		_ADC_Initialize
 11597 ;;		_Init_Battery_State_Machine
 11598 ;;		_LCDClear
 11599 ;;		_LCDInit
 11600 ;;		_OSCILLATOR_Initialize
 11601 ;;		_PIN_MANAGER_Initialize
 11602 ;;		_PWM_Initialize
 11603 ;;		_TMR2_Initialize
 11604 ;;		_TMR4_Initialize
 11605 ;; This function is called by:
 11606 ;;		_main
 11607 ;; This function uses a non-reentrant model
 11608 ;;
 11609                           
 11610                           
 11611                           ;psect for function _SYSTEM_Initialize
 11612  1554                     _SYSTEM_Initialize:	
 11613                           
 11614                           ;system.c: 73: PIN_MANAGER_Initialize();
 11615                           
 11616                           ;incstack = 0
 11617                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 11618  1554  3195  2588  3195   	fcall	_PIN_MANAGER_Initialize
 11619                           
 11620                           ;system.c: 74: OSCILLATOR_Initialize();
 11621  1557  3193  239E  3195   	fcall	_OSCILLATOR_Initialize
 11622                           
 11623                           ;system.c: 76: ADC_Initialize();
 11624  155A  3194  24AB  3195   	fcall	_ADC_Initialize
 11625                           
 11626                           ;system.c: 77: PWM_Initialize();
 11627  155D  3194  24CA  3195   	fcall	_PWM_Initialize
 11628                           
 11629                           ;system.c: 79: TMR2_Initialize();
 11630  1560  3193  23BF  3195   	fcall	_TMR2_Initialize
 11631                           
 11632                           ;system.c: 80: TMR4_Initialize();
 11633  1563  3193  23CD  3195   	fcall	_TMR4_Initialize
 11634                           
 11635                           ;system.c: 81: Init_Battery_State_Machine();
 11636  1566  3194  2455  3195   	fcall	_Init_Battery_State_Machine
 11637                           
 11638                           ;system.c: 82: LCDInit();
 11639  1569  3195  25BF  3195   	fcall	_LCDInit
 11640                           
 11641                           ;system.c: 83: _delay((unsigned long)((200)*(32000000/4000.0)));
 11642  156C  3009               	movlw	9
 11643  156D  00FC               	movwf	??_SYSTEM_Initialize+1
 11644  156E  301E               	movlw	30
 11645  156F  00FB               	movwf	??_SYSTEM_Initialize
 11646  1570  30E4               	movlw	228
 11647  1571                     u5457:	
 11648  1571  0B89               	decfsz	9,f
 11649  1572  2D71               	goto	u5457
 11650  1573  0BFB               	decfsz	??_SYSTEM_Initialize,f
 11651  1574  2D71               	goto	u5457
 11652  1575  0BFC               	decfsz	??_SYSTEM_Initialize+1,f
 11653  1576  2D71               	goto	u5457
 11654  1577  3200               	nop2
 11655                           
 11656                           ;system.c: 84: LCDClear();
 11657  1578  3195  252E  3195   	fcall	_LCDClear
 11658                           
 11659                           ;system.c: 85: _delay((unsigned long)((200)*(32000000/4000.0)));
 11660  157B  3009               	movlw	9
 11661  157C  00FC               	movwf	??_SYSTEM_Initialize+1
 11662  157D  301E               	movlw	30
 11663  157E  00FB               	movwf	??_SYSTEM_Initialize
 11664  157F  30E4               	movlw	228
 11665  1580                     u5467:	
 11666  1580  0B89               	decfsz	9,f
 11667  1581  2D80               	goto	u5467
 11668  1582  0BFB               	decfsz	??_SYSTEM_Initialize,f
 11669  1583  2D80               	goto	u5467
 11670  1584  0BFC               	decfsz	??_SYSTEM_Initialize+1,f
 11671  1585  2D80               	goto	u5467
 11672  1586  3200               	nop2
 11673  1587  0008               	return
 11674  1588                     __end_of_SYSTEM_Initialize:	
 11675                           
 11676                           	psect	text21
 11677  13CD                     __ptext21:	
 11678 ;; *************** function _TMR4_Initialize *****************
 11679 ;; Defined at:
 11680 ;;		line 25 in file "tmr.c"
 11681 ;; Parameters:    Size  Location     Type
 11682 ;;		None
 11683 ;; Auto vars:     Size  Location     Type
 11684 ;;		None
 11685 ;; Return value:  Size  Location     Type
 11686 ;;                  1    wreg      void 
 11687 ;; Registers used:
 11688 ;;		wreg, status,2
 11689 ;; Tracked objects:
 11690 ;;		On entry : 0/0
 11691 ;;		On exit  : 0/0
 11692 ;;		Unchanged: 0/0
 11693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11697 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11698 ;;Total ram usage:        0 bytes
 11699 ;; Hardware stack levels used:    1
 11700 ;; This function calls:
 11701 ;;		Nothing
 11702 ;; This function is called by:
 11703 ;;		_SYSTEM_Initialize
 11704 ;; This function uses a non-reentrant model
 11705 ;;
 11706                           
 11707                           
 11708                           ;psect for function _TMR4_Initialize
 11709  13CD                     _TMR4_Initialize:	
 11710                           
 11711                           ;tmr.c: 27: T4CON = 0x00;
 11712                           
 11713                           ;incstack = 0
 11714                           ; Regs used in _TMR4_Initialize: [wreg+status,2]
 11715  13CD  0025               	movlb	5	; select bank5
 11716  13CE  0194               	clrf	20	;volatile
 11717                           
 11718                           ;tmr.c: 29: T4CLKCON = 0x01;
 11719  13CF  3001               	movlw	1
 11720  13D0  0096               	movwf	22	;volatile
 11721                           
 11722                           ;tmr.c: 31: T4HLT = 0x00;
 11723  13D1  0195               	clrf	21	;volatile
 11724                           
 11725                           ;tmr.c: 33: T4RST = 0x00;
 11726  13D2  0197               	clrf	23	;volatile
 11727                           
 11728                           ;tmr.c: 35: T4PR = 0xFE;
 11729  13D3  30FE               	movlw	254
 11730  13D4  0093               	movwf	19	;volatile
 11731                           
 11732                           ;tmr.c: 39: T4TMR = 0x00;
 11733  13D5  0192               	clrf	18	;volatile
 11734                           
 11735                           ;tmr.c: 41: PIR4bits.TMR4IF = 0;
 11736  13D6  002E               	movlb	14	; select bank14
 11737  13D7  1190               	bcf	16,3	;volatile
 11738                           
 11739                           ;tmr.c: 43: T4CONbits.TMR4ON = 1;
 11740  13D8  0025               	movlb	5	; select bank5
 11741  13D9  1794               	bsf	20,7	;volatile
 11742  13DA  0008               	return
 11743  13DB                     __end_of_TMR4_Initialize:	
 11744                           
 11745                           	psect	text22
 11746  13BF                     __ptext22:	
 11747 ;; *************** function _TMR2_Initialize *****************
 11748 ;; Defined at:
 11749 ;;		line 3 in file "tmr.c"
 11750 ;; Parameters:    Size  Location     Type
 11751 ;;		None
 11752 ;; Auto vars:     Size  Location     Type
 11753 ;;		None
 11754 ;; Return value:  Size  Location     Type
 11755 ;;                  1    wreg      void 
 11756 ;; Registers used:
 11757 ;;		wreg, status,2
 11758 ;; Tracked objects:
 11759 ;;		On entry : 0/0
 11760 ;;		On exit  : 0/0
 11761 ;;		Unchanged: 0/0
 11762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11766 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11767 ;;Total ram usage:        0 bytes
 11768 ;; Hardware stack levels used:    1
 11769 ;; This function calls:
 11770 ;;		Nothing
 11771 ;; This function is called by:
 11772 ;;		_SYSTEM_Initialize
 11773 ;; This function uses a non-reentrant model
 11774 ;;
 11775                           
 11776                           
 11777                           ;psect for function _TMR2_Initialize
 11778  13BF                     _TMR2_Initialize:	
 11779                           
 11780                           ;tmr.c: 5: T2CON = 0x00;
 11781                           
 11782                           ;incstack = 0
 11783                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 11784  13BF  0025               	movlb	5	; select bank5
 11785  13C0  018E               	clrf	14	;volatile
 11786                           
 11787                           ;tmr.c: 7: T2CLKCON = 0x01;
 11788  13C1  3001               	movlw	1
 11789  13C2  0090               	movwf	16	;volatile
 11790                           
 11791                           ;tmr.c: 9: T2HLT = 0x00;
 11792  13C3  018F               	clrf	15	;volatile
 11793                           
 11794                           ;tmr.c: 11: T2RST = 0x00;
 11795  13C4  0191               	clrf	17	;volatile
 11796                           
 11797                           ;tmr.c: 13: T2PR = 0xFE;
 11798  13C5  30FE               	movlw	254
 11799  13C6  008D               	movwf	13	;volatile
 11800                           
 11801                           ;tmr.c: 18: T2TMR = 0x00;
 11802  13C7  018C               	clrf	12	;volatile
 11803                           
 11804                           ;tmr.c: 20: PIR4bits.TMR2IF = 0;
 11805  13C8  002E               	movlb	14	; select bank14
 11806  13C9  1090               	bcf	16,1	;volatile
 11807                           
 11808                           ;tmr.c: 22: T2CONbits.TMR2ON = 1;
 11809  13CA  0025               	movlb	5	; select bank5
 11810  13CB  178E               	bsf	14,7	;volatile
 11811  13CC  0008               	return
 11812  13CD                     __end_of_TMR2_Initialize:	
 11813                           
 11814                           	psect	text23
 11815  14CA                     __ptext23:	
 11816 ;; *************** function _PWM_Initialize *****************
 11817 ;; Defined at:
 11818 ;;		line 3 in file "pwm.c"
 11819 ;; Parameters:    Size  Location     Type
 11820 ;;		None
 11821 ;; Auto vars:     Size  Location     Type
 11822 ;;		None
 11823 ;; Return value:  Size  Location     Type
 11824 ;;                  1    wreg      void 
 11825 ;; Registers used:
 11826 ;;		wreg, status,2, status,0
 11827 ;; Tracked objects:
 11828 ;;		On entry : 0/0
 11829 ;;		On exit  : 0/0
 11830 ;;		Unchanged: 0/0
 11831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11835 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11836 ;;Total ram usage:        0 bytes
 11837 ;; Hardware stack levels used:    1
 11838 ;; This function calls:
 11839 ;;		Nothing
 11840 ;; This function is called by:
 11841 ;;		_SYSTEM_Initialize
 11842 ;; This function uses a non-reentrant model
 11843 ;;
 11844                           
 11845                           
 11846                           ;psect for function _PWM_Initialize
 11847  14CA                     _PWM_Initialize:	
 11848                           
 11849                           ;pwm.c: 5: PWM6CON = 0x80;
 11850                           
 11851                           ;incstack = 0
 11852                           ; Regs used in _PWM_Initialize: [wreg+status,2+status,0]
 11853  14CA  3080               	movlw	128
 11854  14CB  0027               	movlb	7	; select bank7
 11855  14CC  008E               	movwf	14	;volatile
 11856                           
 11857                           ;pwm.c: 7: PWM6DCH = 0x00;
 11858  14CD  018D               	clrf	13	;volatile
 11859                           
 11860                           ;pwm.c: 9: PWM6DCL = 0x00;
 11861  14CE  018C               	clrf	12	;volatile
 11862                           
 11863                           ;pwm.c: 11: CCPTMRS1bits.P6TSEL = 0x01;
 11864  14CF  0024               	movlb	4	; select bank4
 11865  14D0  081F               	movf	31,w	;volatile
 11866  14D1  39F3               	andlw	-13
 11867  14D2  3804               	iorlw	4
 11868  14D3  009F               	movwf	31	;volatile
 11869                           
 11870                           ;pwm.c: 14: PWM7CON = 0x80;
 11871  14D4  3080               	movlw	128
 11872  14D5  0027               	movlb	7	; select bank7
 11873  14D6  0092               	movwf	18	;volatile
 11874                           
 11875                           ;pwm.c: 16: PWM7DCH = 0x00;
 11876  14D7  0191               	clrf	17	;volatile
 11877                           
 11878                           ;pwm.c: 18: PWM7DCL = 0x00;
 11879  14D8  0190               	clrf	16	;volatile
 11880                           
 11881                           ;pwm.c: 20: CCPTMRS1bits.P7TSEL = 0x02;
 11882  14D9  0024               	movlb	4	; select bank4
 11883  14DA  081F               	movf	31,w	;volatile
 11884  14DB  39CF               	andlw	-49
 11885  14DC  3820               	iorlw	32
 11886  14DD  009F               	movwf	31	;volatile
 11887                           
 11888                           ;pwm.c: 23: CCP1CONbits.CCP1EN = 1;
 11889  14DE  0026               	movlb	6	; select bank6
 11890  14DF  178E               	bsf	14,7	;volatile
 11891                           
 11892                           ;pwm.c: 24: CCP1CONbits.CCP1FMT = 1;
 11893  14E0  160E               	bsf	14,4	;volatile
 11894                           
 11895                           ;pwm.c: 25: CCP1CONbits.CCP1MODE = 0xF;
 11896  14E1  300F               	movlw	15
 11897  14E2  048E               	iorwf	14,f	;volatile
 11898                           
 11899                           ;pwm.c: 26: CCPTMRS0bits.C1TSEL = 0x1;
 11900  14E3  0024               	movlb	4	; select bank4
 11901  14E4  081E               	movf	30,w	;volatile
 11902  14E5  39FC               	andlw	-4
 11903  14E6  3801               	iorlw	1
 11904  14E7  009E               	movwf	30	;volatile
 11905  14E8  0008               	return
 11906  14E9                     __end_of_PWM_Initialize:	
 11907                           
 11908                           	psect	text24
 11909  1588                     __ptext24:	
 11910 ;; *************** function _PIN_MANAGER_Initialize *****************
 11911 ;; Defined at:
 11912 ;;		line 5 in file "pin_manager.c"
 11913 ;; Parameters:    Size  Location     Type
 11914 ;;		None
 11915 ;; Auto vars:     Size  Location     Type
 11916 ;;  state           1    0[COMMON] char 
 11917 ;; Return value:  Size  Location     Type
 11918 ;;                  1    wreg      void 
 11919 ;; Registers used:
 11920 ;;		wreg, status,2
 11921 ;; Tracked objects:
 11922 ;;		On entry : 0/0
 11923 ;;		On exit  : 0/0
 11924 ;;		Unchanged: 0/0
 11925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11927 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11929 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11930 ;;Total ram usage:        1 bytes
 11931 ;; Hardware stack levels used:    1
 11932 ;; This function calls:
 11933 ;;		Nothing
 11934 ;; This function is called by:
 11935 ;;		_SYSTEM_Initialize
 11936 ;; This function uses a non-reentrant model
 11937 ;;
 11938                           
 11939                           
 11940                           ;psect for function _PIN_MANAGER_Initialize
 11941  1588                     _PIN_MANAGER_Initialize:	
 11942                           
 11943                           ;pin_manager.c: 7: LATA = 0x20;
 11944                           
 11945                           ;incstack = 0
 11946                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 11947  1588  3020               	movlw	32
 11948  1589  0020               	movlb	0	; select bank0
 11949  158A  0096               	movwf	22	;volatile
 11950                           
 11951                           ;pin_manager.c: 8: LATB = 0x00;
 11952  158B  0197               	clrf	23	;volatile
 11953                           
 11954                           ;pin_manager.c: 9: LATC = 0x00;
 11955  158C  0198               	clrf	24	;volatile
 11956                           
 11957                           ;pin_manager.c: 11: WPUA = 0x00;
 11958  158D  003E               	movlb	30	; select bank30
 11959  158E  01B9               	clrf	57	;volatile
 11960                           
 11961                           ;pin_manager.c: 12: WPUB = 0x00;
 11962  158F  01C4               	clrf	68	;volatile
 11963                           
 11964                           ;pin_manager.c: 13: WPUC = 0x00;
 11965  1590  01CF               	clrf	79	;volatile
 11966                           
 11967                           ;pin_manager.c: 14: WPUE = 0x8;
 11968  1591  3008               	movlw	8
 11969  1592  00E5               	movwf	101	;volatile
 11970                           
 11971                           ;pin_manager.c: 16: TRISA = 0x00;
 11972  1593  0020               	movlb	0	; select bank0
 11973  1594  0191               	clrf	17	;volatile
 11974                           
 11975                           ;pin_manager.c: 17: TRISB = 0x0E;
 11976  1595  300E               	movlw	14
 11977  1596  0092               	movwf	18	;volatile
 11978                           
 11979                           ;pin_manager.c: 18: TRISC = 0xFF;
 11980  1597  30FF               	movlw	255
 11981  1598  0093               	movwf	19	;volatile
 11982                           
 11983                           ;pin_manager.c: 20: ANSELA = 0x00;
 11984  1599  003E               	movlb	30	; select bank30
 11985  159A  01B8               	clrf	56	;volatile
 11986                           
 11987                           ;pin_manager.c: 21: ANSELB = 0x0A;
 11988  159B  300A               	movlw	10
 11989  159C  00C3               	movwf	67	;volatile
 11990                           
 11991                           ;pin_manager.c: 22: ANSELC = 0xFF;
 11992  159D  30FF               	movlw	255
 11993  159E  00CE               	movwf	78	;volatile
 11994                           
 11995                           ;pin_manager.c: 25: PIE0bits.IOCIE = 0;
 11996  159F  002E               	movlb	14	; select bank14
 11997  15A0  1216               	bcf	22,4	;volatile
 11998                           
 11999                           ;pin_manager.c: 26: int8_t state = GIE;
 12000  15A1  3000               	movlw	0
 12001  15A2  1B8B               	btfsc	11,7	;volatile
 12002  15A3  3001               	movlw	1
 12003  15A4  00F0               	movwf	PIN_MANAGER_Initialize@state
 12004                           
 12005                           ;pin_manager.c: 27: GIE = 0;
 12006  15A5  138B               	bcf	11,7	;volatile
 12007                           
 12008                           ;pin_manager.c: 28: PPSLOCK = 0x55;
 12009  15A6  3055               	movlw	85
 12010  15A7  003D               	movlb	29	; select bank29
 12011  15A8  008F               	movwf	15	;volsfr
 12012                           
 12013                           ;pin_manager.c: 29: PPSLOCK = 0xAA;
 12014  15A9  30AA               	movlw	170
 12015  15AA  008F               	movwf	15	;volsfr
 12016                           
 12017                           ;pin_manager.c: 30: PPSLOCKbits.PPSLOCKED = 0x00;
 12018  15AB  100F               	bcf	15,0	;volsfr
 12019                           
 12020                           ;pin_manager.c: 32: RA6PPS = 0x0E;
 12021  15AC  300E               	movlw	14
 12022  15AD  003E               	movlb	30	; select bank30
 12023  15AE  0096               	movwf	22	;volatile
 12024                           
 12025                           ;pin_manager.c: 33: RA7PPS = 0x0F;
 12026  15AF  300F               	movlw	15
 12027  15B0  0097               	movwf	23	;volatile
 12028                           
 12029                           ;pin_manager.c: 34: RB0PPS = 0x09;
 12030  15B1  3009               	movlw	9
 12031  15B2  0098               	movwf	24	;volatile
 12032                           
 12033                           ;pin_manager.c: 35: PPSLOCK = 0x55;
 12034  15B3  3055               	movlw	85
 12035  15B4  003D               	movlb	29	; select bank29
 12036  15B5  008F               	movwf	15	;volsfr
 12037                           
 12038                           ;pin_manager.c: 36: PPSLOCK = 0xAA;
 12039  15B6  30AA               	movlw	170
 12040  15B7  008F               	movwf	15	;volsfr
 12041                           
 12042                           ;pin_manager.c: 37: PPSLOCKbits.PPSLOCKED = 0x01;
 12043  15B8  140F               	bsf	15,0	;volsfr
 12044                           
 12045                           ;pin_manager.c: 38: GIE = state;
 12046  15B9  1C70               	btfss	PIN_MANAGER_Initialize@state,0
 12047  15BA  2DBD               	goto	u4230
 12048  15BB  178B               	bsf	11,7	;volatile
 12049  15BC  0008               	return
 12050  15BD                     u4230:	
 12051  15BD  138B               	bcf	11,7	;volatile
 12052  15BE  0008               	return
 12053  15BF                     __end_of_PIN_MANAGER_Initialize:	
 12054                           
 12055                           	psect	text25
 12056  139E                     __ptext25:	
 12057 ;; *************** function _OSCILLATOR_Initialize *****************
 12058 ;; Defined at:
 12059 ;;		line 88 in file "system.c"
 12060 ;; Parameters:    Size  Location     Type
 12061 ;;		None
 12062 ;; Auto vars:     Size  Location     Type
 12063 ;;		None
 12064 ;; Return value:  Size  Location     Type
 12065 ;;                  1    wreg      void 
 12066 ;; Registers used:
 12067 ;;		wreg, status,2
 12068 ;; Tracked objects:
 12069 ;;		On entry : 0/0
 12070 ;;		On exit  : 0/0
 12071 ;;		Unchanged: 0/0
 12072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12076 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12077 ;;Total ram usage:        0 bytes
 12078 ;; Hardware stack levels used:    1
 12079 ;; This function calls:
 12080 ;;		Nothing
 12081 ;; This function is called by:
 12082 ;;		_SYSTEM_Initialize
 12083 ;; This function uses a non-reentrant model
 12084 ;;
 12085                           
 12086                           
 12087                           ;psect for function _OSCILLATOR_Initialize
 12088  139E                     _OSCILLATOR_Initialize:	
 12089                           
 12090                           ;system.c: 90: OSCCON1 = 0x60;
 12091                           
 12092                           ;incstack = 0
 12093                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 12094  139E  3060               	movlw	96
 12095  139F  0031               	movlb	17	; select bank17
 12096  13A0  008D               	movwf	13	;volatile
 12097                           
 12098                           ;system.c: 91: OSCCON3 = 0x00;
 12099  13A1  018F               	clrf	15	;volatile
 12100                           
 12101                           ;system.c: 92: OSCEN = 0x00;
 12102  13A2  0191               	clrf	17	;volatile
 12103                           
 12104                           ;system.c: 93: OSCFRQ = 0x06;
 12105  13A3  3006               	movlw	6
 12106  13A4  0093               	movwf	19	;volatile
 12107                           
 12108                           ;system.c: 94: OSCTUNE = 0x00;
 12109  13A5  0192               	clrf	18	;volatile
 12110  13A6  0008               	return
 12111  13A7                     __end_of_OSCILLATOR_Initialize:	
 12112                           
 12113                           	psect	text26
 12114  15BF                     __ptext26:	
 12115 ;; *************** function _LCDInit *****************
 12116 ;; Defined at:
 12117 ;;		line 247 in file "lcd.c"
 12118 ;; Parameters:    Size  Location     Type
 12119 ;;		None
 12120 ;; Auto vars:     Size  Location     Type
 12121 ;;		None
 12122 ;; Return value:  Size  Location     Type
 12123 ;;                  1    wreg      void 
 12124 ;; Registers used:
 12125 ;;		wreg, status,2, status,0, pclath, cstack
 12126 ;; Tracked objects:
 12127 ;;		On entry : 0/0
 12128 ;;		On exit  : 0/0
 12129 ;;		Unchanged: 0/0
 12130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12133 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12134 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12135 ;;Total ram usage:        1 bytes
 12136 ;; Hardware stack levels used:    1
 12137 ;; Hardware stack levels required when called:    1
 12138 ;; This function calls:
 12139 ;;		_LCDWrite
 12140 ;; This function is called by:
 12141 ;;		_main
 12142 ;;		_SYSTEM_Initialize
 12143 ;; This function uses a non-reentrant model
 12144 ;;
 12145                           
 12146                           
 12147                           ;psect for function _LCDInit
 12148  15BF                     _LCDInit:	
 12149                           
 12150                           ;lcd.c: 249: TRISAbits.TRISA0 = 0;
 12151                           
 12152                           ;incstack = 0
 12153                           ; Regs used in _LCDInit: [wreg+status,2+status,0+pclath+cstack]
 12154  15BF  0020               	movlb	0	; select bank0
 12155  15C0  1011               	bcf	17,0	;volatile
 12156                           
 12157                           ;lcd.c: 250: TRISAbits.TRISA1 = 0;
 12158  15C1  1091               	bcf	17,1	;volatile
 12159                           
 12160                           ;lcd.c: 251: TRISAbits.TRISA2 = 0;
 12161  15C2  1111               	bcf	17,2	;volatile
 12162                           
 12163                           ;lcd.c: 252: TRISAbits.TRISA3 = 0;
 12164  15C3  1191               	bcf	17,3	;volatile
 12165                           
 12166                           ;lcd.c: 253: TRISAbits.TRISA4 = 0;
 12167  15C4  1211               	bcf	17,4	;volatile
 12168                           
 12169                           ;lcd.c: 254: LATAbits.LATA3 = 0;
 12170  15C5  1196               	bcf	22,3	;volatile
 12171                           
 12172                           ;lcd.c: 255: LATAbits.LATA4 = 0;
 12173  15C6  1216               	bcf	22,4	;volatile
 12174                           
 12175                           ;lcd.c: 256: LATAbits.LATA2 = 0;
 12176  15C7  1116               	bcf	22,2	;volatile
 12177                           
 12178                           ;lcd.c: 257: LATAbits.LATA0 = 0;
 12179  15C8  1016               	bcf	22,0	;volatile
 12180                           
 12181                           ;lcd.c: 259: LATAbits.LATA0 = 1;
 12182  15C9  1416               	bsf	22,0	;volatile
 12183                           
 12184                           ;lcd.c: 261: LCDWrite(0, 0x21);
 12185  15CA  3021               	movlw	33
 12186  15CB  00F5               	movwf	??_LCDInit
 12187  15CC  0875               	movf	??_LCDInit,w
 12188  15CD  00F0               	movwf	LCDWrite@data
 12189  15CE  3000               	movlw	0
 12190  15CF  3195  2509  3195   	fcall	_LCDWrite
 12191                           
 12192                           ;lcd.c: 269: LCDWrite(0, 0XB9);
 12193  15D2  30B9               	movlw	185
 12194  15D3  00F5               	movwf	??_LCDInit
 12195  15D4  0875               	movf	??_LCDInit,w
 12196  15D5  00F0               	movwf	LCDWrite@data
 12197  15D6  3000               	movlw	0
 12198  15D7  3195  2509  3195   	fcall	_LCDWrite
 12199                           
 12200                           ;lcd.c: 271: LCDWrite(0, 0x04);
 12201  15DA  3004               	movlw	4
 12202  15DB  00F5               	movwf	??_LCDInit
 12203  15DC  0875               	movf	??_LCDInit,w
 12204  15DD  00F0               	movwf	LCDWrite@data
 12205  15DE  3000               	movlw	0
 12206  15DF  3195  2509  3195   	fcall	_LCDWrite
 12207                           
 12208                           ;lcd.c: 273: LCDWrite(0, 0x14);
 12209  15E2  3014               	movlw	20
 12210  15E3  00F5               	movwf	??_LCDInit
 12211  15E4  0875               	movf	??_LCDInit,w
 12212  15E5  00F0               	movwf	LCDWrite@data
 12213  15E6  3000               	movlw	0
 12214  15E7  3195  2509  3195   	fcall	_LCDWrite
 12215                           
 12216                           ;lcd.c: 275: LCDWrite(0, 0x20);
 12217  15EA  3020               	movlw	32
 12218  15EB  00F5               	movwf	??_LCDInit
 12219  15EC  0875               	movf	??_LCDInit,w
 12220  15ED  00F0               	movwf	LCDWrite@data
 12221  15EE  3000               	movlw	0
 12222  15EF  3195  2509  3195   	fcall	_LCDWrite
 12223                           
 12224                           ;lcd.c: 277: LCDWrite(0, 0x0C);
 12225  15F2  300C               	movlw	12
 12226  15F3  00F5               	movwf	??_LCDInit
 12227  15F4  0875               	movf	??_LCDInit,w
 12228  15F5  00F0               	movwf	LCDWrite@data
 12229  15F6  3000               	movlw	0
 12230  15F7  3195  2509         	fcall	_LCDWrite
 12231  15F9  0008               	return
 12232  15FA                     __end_of_LCDInit:	
 12233                           
 12234                           	psect	text27
 12235  152E                     __ptext27:	
 12236 ;; *************** function _LCDClear *****************
 12237 ;; Defined at:
 12238 ;;		line 182 in file "lcd.c"
 12239 ;; Parameters:    Size  Location     Type
 12240 ;;		None
 12241 ;; Auto vars:     Size  Location     Type
 12242 ;;  index           2    9[COMMON] int 
 12243 ;; Return value:  Size  Location     Type
 12244 ;;                  1    wreg      void 
 12245 ;; Registers used:
 12246 ;;		wreg, status,2, status,0, pclath, cstack
 12247 ;; Tracked objects:
 12248 ;;		On entry : 0/0
 12249 ;;		On exit  : 0/0
 12250 ;;		Unchanged: 0/0
 12251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12253 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12254 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12255 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12256 ;;Total ram usage:        3 bytes
 12257 ;; Hardware stack levels used:    1
 12258 ;; Hardware stack levels required when called:    2
 12259 ;; This function calls:
 12260 ;;		_LCDWrite
 12261 ;;		_gotoXY
 12262 ;; This function is called by:
 12263 ;;		_main
 12264 ;;		_SYSTEM_Initialize
 12265 ;; This function uses a non-reentrant model
 12266 ;;
 12267                           
 12268                           
 12269                           ;psect for function _LCDClear
 12270  152E                     _LCDClear:	
 12271                           
 12272                           ;lcd.c: 184: int index;
 12273                           ;lcd.c: 185: for (index = 0 ; index < (84 * 48 / 8) ; index++)
 12274                           
 12275                           ;incstack = 0
 12276                           ; Regs used in _LCDClear: [wreg+status,2+status,0+pclath+cstack]
 12277  152E  01F9               	clrf	LCDClear@index
 12278  152F  01FA               	clrf	LCDClear@index+1
 12279  1530  087A               	movf	LCDClear@index+1,w
 12280  1531  3A80               	xorlw	128
 12281  1532  00F8               	movwf	??_LCDClear
 12282  1533  3081               	movlw	129
 12283  1534  0278               	subwf	??_LCDClear,w
 12284  1535  1D03               	skipz
 12285  1536  2D39               	goto	u4185
 12286  1537  30F8               	movlw	248
 12287  1538  0279               	subwf	LCDClear@index,w
 12288  1539                     u4185:	
 12289  1539  1803               	btfsc	3,0
 12290  153A  2D4F               	goto	l3538
 12291  153B                     l3532:	
 12292                           
 12293                           ;lcd.c: 186: LCDWrite(1, 0x00);
 12294  153B  01F0               	clrf	LCDWrite@data
 12295  153C  3001               	movlw	1
 12296  153D  3195  2509  3195   	fcall	_LCDWrite
 12297  1540  3001               	movlw	1
 12298  1541  07F9               	addwf	LCDClear@index,f
 12299  1542  3000               	movlw	0
 12300  1543  3DFA               	addwfc	LCDClear@index+1,f
 12301  1544  087A               	movf	LCDClear@index+1,w
 12302  1545  3A80               	xorlw	128
 12303  1546  00F8               	movwf	??_LCDClear
 12304  1547  3081               	movlw	129
 12305  1548  0278               	subwf	??_LCDClear,w
 12306  1549  1D03               	skipz
 12307  154A  2D4D               	goto	u4195
 12308  154B  30F8               	movlw	248
 12309  154C  0279               	subwf	LCDClear@index,w
 12310  154D                     u4195:	
 12311  154D  1C03               	skipc
 12312  154E  2D3B               	goto	l3532
 12313  154F                     l3538:	
 12314                           
 12315                           ;lcd.c: 187: gotoXY(0, 0);
 12316  154F  01F5               	clrf	gotoXY@y
 12317  1550  3000               	movlw	0
 12318  1551  3193  23EB         	fcall	_gotoXY
 12319  1553  0008               	return
 12320  1554                     __end_of_LCDClear:	
 12321                           
 12322                           	psect	text28
 12323  1455                     __ptext28:	
 12324 ;; *************** function _Init_Battery_State_Machine *****************
 12325 ;; Defined at:
 12326 ;;		line 23 in file "battery_charger.c"
 12327 ;; Parameters:    Size  Location     Type
 12328 ;;		None
 12329 ;; Auto vars:     Size  Location     Type
 12330 ;;		None
 12331 ;; Return value:  Size  Location     Type
 12332 ;;                  1    wreg      void 
 12333 ;; Registers used:
 12334 ;;		wreg
 12335 ;; Tracked objects:
 12336 ;;		On entry : 0/0
 12337 ;;		On exit  : 0/0
 12338 ;;		Unchanged: 0/0
 12339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12342 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12343 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12344 ;;Total ram usage:        1 bytes
 12345 ;; Hardware stack levels used:    1
 12346 ;; This function calls:
 12347 ;;		Nothing
 12348 ;; This function is called by:
 12349 ;;		_SYSTEM_Initialize
 12350 ;; This function uses a non-reentrant model
 12351 ;;
 12352                           
 12353                           
 12354                           ;psect for function _Init_Battery_State_Machine
 12355  1455                     _Init_Battery_State_Machine:	
 12356                           
 12357                           ;battery_charger.c: 25: battery_state = PRECHARGE;
 12358                           
 12359                           ;incstack = 0
 12360                           ; Regs used in _Init_Battery_State_Machine: [wreg]
 12361  1455  3003               	movlw	3
 12362  1456  00F0               	movwf	??_Init_Battery_State_Machine
 12363  1457  0870               	movf	??_Init_Battery_State_Machine,w
 12364  1458  0021               	movlb	1	; select bank1
 12365  1459  00ED               	movwf	_battery_state^(0+128)
 12366                           
 12367                           ;battery_charger.c: 26: state_counter = 3;
 12368  145A  3003               	movlw	3
 12369  145B  00E5               	movwf	_state_counter^(0+128)
 12370  145C  3000               	movlw	0
 12371  145D  00E6               	movwf	(_state_counter^(0+128)+1)
 12372                           
 12373                           ;battery_charger.c: 28: { Iref = 10; };
 12374  145E  300A               	movlw	10
 12375  145F  00E9               	movwf	_Iref^(0+128)
 12376  1460  3000               	movlw	0
 12377  1461  00EA               	movwf	(_Iref^(0+128)+1)
 12378                           
 12379                           ;battery_charger.c: 29: { Vref = 1445; };
 12380  1462  30A5               	movlw	165
 12381  1463  00EB               	movwf	_Vref^(0+128)
 12382  1464  3005               	movlw	5
 12383  1465  00EC               	movwf	(_Vref^(0+128)+1)
 12384                           
 12385                           ;battery_charger.c: 31: Imin = 25;
 12386  1466  3019               	movlw	25
 12387  1467  00E3               	movwf	_Imin^(0+128)
 12388  1468  3000               	movlw	0
 12389  1469  00E4               	movwf	(_Imin^(0+128)+1)
 12390                           
 12391                           ;battery_charger.c: 32: IminCount = 10;
 12392  146A  300A               	movlw	10
 12393  146B  00E7               	movwf	_IminCount^(0+128)
 12394  146C  3000               	movlw	0
 12395  146D  00E8               	movwf	(_IminCount^(0+128)+1)
 12396  146E  0008               	return
 12397  146F                     __end_of_Init_Battery_State_Machine:	
 12398                           
 12399                           	psect	text29
 12400  14AB                     __ptext29:	
 12401 ;; *************** function _ADC_Initialize *****************
 12402 ;; Defined at:
 12403 ;;		line 83 in file "adc.c"
 12404 ;; Parameters:    Size  Location     Type
 12405 ;;		None
 12406 ;; Auto vars:     Size  Location     Type
 12407 ;;		None
 12408 ;; Return value:  Size  Location     Type
 12409 ;;                  1    wreg      void 
 12410 ;; Registers used:
 12411 ;;		wreg, status,2
 12412 ;; Tracked objects:
 12413 ;;		On entry : 0/0
 12414 ;;		On exit  : 0/0
 12415 ;;		Unchanged: 0/0
 12416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12420 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12421 ;;Total ram usage:        0 bytes
 12422 ;; Hardware stack levels used:    1
 12423 ;; This function calls:
 12424 ;;		Nothing
 12425 ;; This function is called by:
 12426 ;;		_SYSTEM_Initialize
 12427 ;; This function uses a non-reentrant model
 12428 ;;
 12429                           
 12430                           
 12431                           ;psect for function _ADC_Initialize
 12432  14AB                     _ADC_Initialize:	
 12433                           
 12434                           ;adc.c: 85: ADCON1 = 0x00;
 12435                           
 12436                           ;incstack = 0
 12437                           ; Regs used in _ADC_Initialize: [wreg+status,2]
 12438  14AB  0021               	movlb	1	; select bank1
 12439  14AC  0194               	clrf	20	;volatile
 12440                           
 12441                           ;adc.c: 87: ADCON2 = 0x00;
 12442  14AD  0195               	clrf	21	;volatile
 12443                           
 12444                           ;adc.c: 89: ADCON3 = 0x00;
 12445  14AE  0196               	clrf	22	;volatile
 12446                           
 12447                           ;adc.c: 91: ADACT = 0x00;
 12448  14AF  0199               	clrf	25	;volatile
 12449                           
 12450                           ;adc.c: 93: ADSTAT = 0x00;
 12451  14B0  0197               	clrf	23	;volatile
 12452                           
 12453                           ;adc.c: 95: FVRCON = 0b11000011;
 12454  14B1  30C3               	movlw	195
 12455  14B2  0032               	movlb	18	; select bank18
 12456  14B3  008C               	movwf	12	;volatile
 12457                           
 12458                           ;adc.c: 96: ADCLK = 0x3F;
 12459  14B4  303F               	movlw	63
 12460  14B5  0021               	movlb	1	; select bank1
 12461  14B6  0098               	movwf	24	;volatile
 12462                           
 12463                           ;adc.c: 103: ADREF = 0x03;
 12464  14B7  3003               	movlw	3
 12465  14B8  009A               	movwf	26	;volatile
 12466                           
 12467                           ;adc.c: 106: ADCAP = 0x00;
 12468  14B9  019B               	clrf	27	;volatile
 12469                           
 12470                           ;adc.c: 109: ADPRE = 0x07;
 12471  14BA  3007               	movlw	7
 12472  14BB  009C               	movwf	28	;volatile
 12473                           
 12474                           ;adc.c: 111: ADACQ = 0x00;
 12475  14BC  019D               	clrf	29	;volatile
 12476                           
 12477                           ;adc.c: 113: ADPCH = 0x00;
 12478  14BD  019E               	clrf	30	;volatile
 12479                           
 12480                           ;adc.c: 115: ADRPT = 0x00;
 12481  14BE  0022               	movlb	2	; select bank2
 12482  14BF  018D               	clrf	13	;volatile
 12483                           
 12484                           ;adc.c: 117: ADLTHL = 0x00;
 12485  14C0  018E               	clrf	14	;volatile
 12486                           
 12487                           ;adc.c: 119: ADLTHH = 0x00;
 12488  14C1  018F               	clrf	15	;volatile
 12489                           
 12490                           ;adc.c: 121: ADUTHL = 0x00;
 12491  14C2  0190               	clrf	16	;volatile
 12492                           
 12493                           ;adc.c: 123: ADUTHH = 0x00;
 12494  14C3  0191               	clrf	17	;volatile
 12495                           
 12496                           ;adc.c: 125: ADSTPTL = 0x00;
 12497  14C4  0192               	clrf	18	;volatile
 12498                           
 12499                           ;adc.c: 127: ADSTPTH = 0x00;
 12500  14C5  0193               	clrf	19	;volatile
 12501                           
 12502                           ;adc.c: 129: ADCON0 = 0x84;
 12503  14C6  3084               	movlw	132
 12504  14C7  0021               	movlb	1	; select bank1
 12505  14C8  0093               	movwf	19	;volatile
 12506  14C9  0008               	return
 12507  14CA                     __end_of_ADC_Initialize:	
 12508                           
 12509                           	psect	text30
 12510  143F                     __ptext30:	
 12511 ;; *************** function _PWM7_LoadDutyValue *****************
 12512 ;; Defined at:
 12513 ;;		line 37 in file "pwm.c"
 12514 ;; Parameters:    Size  Location     Type
 12515 ;;  dutyCycle7      2    0[COMMON] unsigned int 
 12516 ;; Auto vars:     Size  Location     Type
 12517 ;;		None
 12518 ;; Return value:  Size  Location     Type
 12519 ;;                  1    wreg      void 
 12520 ;; Registers used:
 12521 ;;		wreg, status,2, status,0
 12522 ;; Tracked objects:
 12523 ;;		On entry : 0/0
 12524 ;;		On exit  : 0/0
 12525 ;;		Unchanged: 0/0
 12526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12527 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12529 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12530 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12531 ;;Total ram usage:        4 bytes
 12532 ;; Hardware stack levels used:    1
 12533 ;; This function calls:
 12534 ;;		Nothing
 12535 ;; This function is called by:
 12536 ;;		_main
 12537 ;; This function uses a non-reentrant model
 12538 ;;
 12539                           
 12540                           
 12541                           ;psect for function _PWM7_LoadDutyValue
 12542  143F                     _PWM7_LoadDutyValue:	
 12543                           
 12544                           ;pwm.c: 39: PWM7DCH = (dutyCycle7 & 0x03FC)>>2;
 12545                           
 12546                           ;incstack = 0
 12547                           ; Regs used in _PWM7_LoadDutyValue: [wreg+status,2+status,0]
 12548  143F  0871               	movf	PWM7_LoadDutyValue@dutyCycle7+1,w
 12549  1440  00F3               	movwf	??_PWM7_LoadDutyValue+1
 12550  1441  0870               	movf	PWM7_LoadDutyValue@dutyCycle7,w
 12551  1442  00F2               	movwf	??_PWM7_LoadDutyValue
 12552  1443  36F3               	lsrf	??_PWM7_LoadDutyValue+1,f
 12553  1444  0CF2               	rrf	??_PWM7_LoadDutyValue,f
 12554  1445  36F3               	lsrf	??_PWM7_LoadDutyValue+1,f
 12555  1446  0CF2               	rrf	??_PWM7_LoadDutyValue,f
 12556  1447  0872               	movf	??_PWM7_LoadDutyValue,w
 12557  1448  0027               	movlb	7	; select bank7
 12558  1449  0091               	movwf	17	;volatile
 12559                           
 12560                           ;pwm.c: 41: PWM7DCL = (dutyCycle7 & 0x0003)<<6;
 12561  144A  0870               	movf	PWM7_LoadDutyValue@dutyCycle7,w
 12562  144B  3903               	andlw	3
 12563  144C  00F2               	movwf	??_PWM7_LoadDutyValue
 12564  144D  3005               	movlw	5
 12565  144E                     u4835:	
 12566  144E  35F2               	lslf	??_PWM7_LoadDutyValue,f
 12567  144F  3EFF               	addlw	-1
 12568  1450  1D03               	skipz
 12569  1451  2C4E               	goto	u4835
 12570  1452  3572               	lslf	??_PWM7_LoadDutyValue,w
 12571  1453  0090               	movwf	16	;volatile
 12572  1454  0008               	return
 12573  1455                     __end_of_PWM7_LoadDutyValue:	
 12574                           
 12575                           	psect	text31
 12576  1429                     __ptext31:	
 12577 ;; *************** function _PWM6_LoadDutyValue *****************
 12578 ;; Defined at:
 12579 ;;		line 30 in file "pwm.c"
 12580 ;; Parameters:    Size  Location     Type
 12581 ;;  dutyCycle6      2    0[COMMON] unsigned int 
 12582 ;; Auto vars:     Size  Location     Type
 12583 ;;		None
 12584 ;; Return value:  Size  Location     Type
 12585 ;;                  1    wreg      void 
 12586 ;; Registers used:
 12587 ;;		wreg, status,2, status,0
 12588 ;; Tracked objects:
 12589 ;;		On entry : 0/0
 12590 ;;		On exit  : 0/0
 12591 ;;		Unchanged: 0/0
 12592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12593 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12595 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12596 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12597 ;;Total ram usage:        4 bytes
 12598 ;; Hardware stack levels used:    1
 12599 ;; This function calls:
 12600 ;;		Nothing
 12601 ;; This function is called by:
 12602 ;;		_main
 12603 ;; This function uses a non-reentrant model
 12604 ;;
 12605                           
 12606                           
 12607                           ;psect for function _PWM6_LoadDutyValue
 12608  1429                     _PWM6_LoadDutyValue:	
 12609                           
 12610                           ;pwm.c: 32: PWM6DCH = (dutyCycle6 & 0x03FC)>>2;
 12611                           
 12612                           ;incstack = 0
 12613                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
 12614  1429  0871               	movf	PWM6_LoadDutyValue@dutyCycle6+1,w
 12615  142A  00F3               	movwf	??_PWM6_LoadDutyValue+1
 12616  142B  0870               	movf	PWM6_LoadDutyValue@dutyCycle6,w
 12617  142C  00F2               	movwf	??_PWM6_LoadDutyValue
 12618  142D  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
 12619  142E  0CF2               	rrf	??_PWM6_LoadDutyValue,f
 12620  142F  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
 12621  1430  0CF2               	rrf	??_PWM6_LoadDutyValue,f
 12622  1431  0872               	movf	??_PWM6_LoadDutyValue,w
 12623  1432  0027               	movlb	7	; select bank7
 12624  1433  008D               	movwf	13	;volatile
 12625                           
 12626                           ;pwm.c: 34: PWM6DCL = (dutyCycle6 & 0x0003)<<6;
 12627  1434  0870               	movf	PWM6_LoadDutyValue@dutyCycle6,w
 12628  1435  3903               	andlw	3
 12629  1436  00F2               	movwf	??_PWM6_LoadDutyValue
 12630  1437  3005               	movlw	5
 12631  1438                     u4825:	
 12632  1438  35F2               	lslf	??_PWM6_LoadDutyValue,f
 12633  1439  3EFF               	addlw	-1
 12634  143A  1D03               	skipz
 12635  143B  2C38               	goto	u4825
 12636  143C  3572               	lslf	??_PWM6_LoadDutyValue,w
 12637  143D  008C               	movwf	12	;volatile
 12638  143E  0008               	return
 12639  143F                     __end_of_PWM6_LoadDutyValue:	
 12640                           
 12641                           	psect	text32
 12642  1413                     __ptext32:	
 12643 ;; *************** function _PWM1_LoadDutyValue *****************
 12644 ;; Defined at:
 12645 ;;		line 44 in file "pwm.c"
 12646 ;; Parameters:    Size  Location     Type
 12647 ;;  dutyCycle1      2    0[COMMON] unsigned int 
 12648 ;; Auto vars:     Size  Location     Type
 12649 ;;		None
 12650 ;; Return value:  Size  Location     Type
 12651 ;;                  1    wreg      void 
 12652 ;; Registers used:
 12653 ;;		wreg, status,2, status,0
 12654 ;; Tracked objects:
 12655 ;;		On entry : 0/0
 12656 ;;		On exit  : 0/0
 12657 ;;		Unchanged: 0/0
 12658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12659 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12661 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12662 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12663 ;;Total ram usage:        4 bytes
 12664 ;; Hardware stack levels used:    1
 12665 ;; This function calls:
 12666 ;;		Nothing
 12667 ;; This function is called by:
 12668 ;;		_main
 12669 ;; This function uses a non-reentrant model
 12670 ;;
 12671                           
 12672                           
 12673                           ;psect for function _PWM1_LoadDutyValue
 12674  1413                     _PWM1_LoadDutyValue:	
 12675                           
 12676                           ;pwm.c: 46: CCPR1H = (dutyCycle1& 0x03FC)>>2;
 12677                           
 12678                           ;incstack = 0
 12679                           ; Regs used in _PWM1_LoadDutyValue: [wreg+status,2+status,0]
 12680  1413  0871               	movf	PWM1_LoadDutyValue@dutyCycle1+1,w
 12681  1414  00F3               	movwf	??_PWM1_LoadDutyValue+1
 12682  1415  0870               	movf	PWM1_LoadDutyValue@dutyCycle1,w
 12683  1416  00F2               	movwf	??_PWM1_LoadDutyValue
 12684  1417  36F3               	lsrf	??_PWM1_LoadDutyValue+1,f
 12685  1418  0CF2               	rrf	??_PWM1_LoadDutyValue,f
 12686  1419  36F3               	lsrf	??_PWM1_LoadDutyValue+1,f
 12687  141A  0CF2               	rrf	??_PWM1_LoadDutyValue,f
 12688  141B  0872               	movf	??_PWM1_LoadDutyValue,w
 12689  141C  0026               	movlb	6	; select bank6
 12690  141D  008D               	movwf	13	;volatile
 12691                           
 12692                           ;pwm.c: 47: CCPR1L = (dutyCycle1 & 0x0003)<<6;
 12693  141E  0870               	movf	PWM1_LoadDutyValue@dutyCycle1,w
 12694  141F  3903               	andlw	3
 12695  1420  00F2               	movwf	??_PWM1_LoadDutyValue
 12696  1421  3005               	movlw	5
 12697  1422                     u4815:	
 12698  1422  35F2               	lslf	??_PWM1_LoadDutyValue,f
 12699  1423  3EFF               	addlw	-1
 12700  1424  1D03               	skipz
 12701  1425  2C22               	goto	u4815
 12702  1426  3572               	lslf	??_PWM1_LoadDutyValue,w
 12703  1427  008C               	movwf	12	;volatile
 12704  1428  0008               	return
 12705  1429                     __end_of_PWM1_LoadDutyValue:	
 12706                           
 12707                           	psect	text33
 12708  0E51                     __ptext33:	
 12709 ;; *************** function _LCDWriteInt *****************
 12710 ;; Defined at:
 12711 ;;		line 190 in file "lcd.c"
 12712 ;; Parameters:    Size  Location     Type
 12713 ;;  value           2    8[BANK0 ] int 
 12714 ;;  fieldLength     1   10[BANK0 ] char 
 12715 ;;  numPlaces       1   11[BANK0 ] unsigned char 
 12716 ;;  sign            1   12[BANK0 ] unsigned char 
 12717 ;; Auto vars:     Size  Location     Type
 12718 ;;  str             5   17[BANK0 ] unsigned char [5]
 12719 ;;  i               1   23[BANK0 ] unsigned char 
 12720 ;;  j               1   22[BANK0 ] unsigned char 
 12721 ;; Return value:  Size  Location     Type
 12722 ;;                  1    wreg      void 
 12723 ;; Registers used:
 12724 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12725 ;; Tracked objects:
 12726 ;;		On entry : 0/0
 12727 ;;		On exit  : 0/0
 12728 ;;		Unchanged: 0/0
 12729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12730 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12731 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12732 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12733 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12734 ;;Total ram usage:       16 bytes
 12735 ;; Hardware stack levels used:    1
 12736 ;; Hardware stack levels required when called:    2
 12737 ;; This function calls:
 12738 ;;		_LCDWriteCharacter
 12739 ;;		___awdiv
 12740 ;;		___lwmod
 12741 ;; This function is called by:
 12742 ;;		_main
 12743 ;; This function uses a non-reentrant model
 12744 ;;
 12745                           
 12746                           
 12747                           ;psect for function _LCDWriteInt
 12748  0E51                     _LCDWriteInt:	
 12749                           
 12750                           ;lcd.c: 192: uint8_t str[5]={0,0,0,0,0};
 12751                           
 12752                           ;incstack = 0
 12753                           ; Regs used in _LCDWriteInt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12754  0E51  30D4               	movlw	low LCDWriteInt@F14388
 12755  0E52  0086               	movwf	6
 12756  0E53  3000               	movlw	high LCDWriteInt@F14388
 12757  0E54  0087               	movwf	7
 12758  0E55  3031               	movlw	low LCDWriteInt@str
 12759  0E56  0084               	movwf	4
 12760  0E57  3000               	movlw	high LCDWriteInt@str
 12761  0E58  0085               	movwf	5
 12762  0E59  3005               	movlw	5
 12763  0E5A  0020               	movlb	0	; select bank0
 12764  0E5B  00AD               	movwf	??_LCDWriteInt
 12765  0E5C                     u5030:	
 12766  0E5C  0016               	moviw fsr1++
 12767  0E5D  001A               	movwi fsr0++
 12768  0E5E  0BAD               	decfsz	??_LCDWriteInt,f
 12769  0E5F  2E5C               	goto	u5030
 12770                           
 12771                           ;lcd.c: 193: uint8_t i=4,j=0;
 12772  0E60  3004               	movlw	4
 12773  0E61  00AD               	movwf	??_LCDWriteInt
 12774  0E62  082D               	movf	??_LCDWriteInt,w
 12775  0E63  00B7               	movwf	LCDWriteInt@i
 12776  0E64  01B6               	clrf	LCDWriteInt@j
 12777                           
 12778                           ;lcd.c: 195: if(value<0)
 12779  0E65  1FA9               	btfss	LCDWriteInt@value+1,7
 12780  0E66  2E72               	goto	l4074
 12781                           
 12782                           ;lcd.c: 196: {
 12783                           ;lcd.c: 197: LCDWriteCharacter('-');
 12784  0E67  302D               	movlw	45
 12785  0E68  3197  274B  318E   	fcall	_LCDWriteCharacter
 12786                           
 12787                           ;lcd.c: 198: value=value*-1;
 12788  0E6B  0020               	movlb	0	; select bank0
 12789  0E6C  09A8               	comf	LCDWriteInt@value,f
 12790  0E6D  09A9               	comf	LCDWriteInt@value+1,f
 12791  0E6E  0AA8               	incf	LCDWriteInt@value,f
 12792  0E6F  1903               	skipnz
 12793  0E70  0AA9               	incf	LCDWriteInt@value+1,f
 12794                           
 12795                           ;lcd.c: 199: }
 12796  0E71  2E79               	goto	l4084
 12797  0E72                     l4074:	
 12798                           
 12799                           ;lcd.c: 201: else
 12800                           ;lcd.c: 202: {
 12801                           ;lcd.c: 203: if(sign == 1)
 12802  0E72  032C               	decf	LCDWriteInt@sign,w
 12803  0E73  1D03               	btfss	3,2
 12804  0E74  2E79               	goto	l4084
 12805                           
 12806                           ;lcd.c: 204: {
 12807                           ;lcd.c: 205: LCDWriteCharacter('+');
 12808  0E75  302B               	movlw	43
 12809  0E76  3197  274B  318E   	fcall	_LCDWriteCharacter
 12810  0E79                     l4084:	
 12811                           ;lcd.c: 206: }
 12812                           ;lcd.c: 207: }
 12813                           ;lcd.c: 209: while(value)
 12814                           
 12815  0E79  0020               	movlb	0	; select bank0
 12816  0E7A  0828               	movf	LCDWriteInt@value,w
 12817  0E7B  0429               	iorwf	LCDWriteInt@value+1,w
 12818  0E7C  1903               	btfsc	3,2
 12819  0E7D  2EA6               	goto	l4086
 12820                           
 12821                           ;lcd.c: 210: {
 12822                           ;lcd.c: 211: str[i]=(uint16_t)value%10;
 12823  0E7E  300A               	movlw	10
 12824  0E7F  00F0               	movwf	___lwmod@divisor
 12825  0E80  3000               	movlw	0
 12826  0E81  00F1               	movwf	___lwmod@divisor+1
 12827  0E82  0020               	movlb	0	; select bank0
 12828  0E83  0829               	movf	LCDWriteInt@value+1,w
 12829  0E84  00F3               	movwf	___lwmod@dividend+1
 12830  0E85  0828               	movf	LCDWriteInt@value,w
 12831  0E86  00F2               	movwf	___lwmod@dividend
 12832  0E87  3189  212F  318E   	fcall	___lwmod
 12833  0E8A  0870               	movf	?___lwmod,w
 12834  0E8B  0020               	movlb	0	; select bank0
 12835  0E8C  00AD               	movwf	??_LCDWriteInt
 12836  0E8D  0837               	movf	LCDWriteInt@i,w
 12837  0E8E  3E31               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
 12838  0E8F  0086               	movwf	6
 12839  0E90  0187               	clrf	7
 12840  0E91  082D               	movf	??_LCDWriteInt,w
 12841  0E92  0081               	movwf	1
 12842                           
 12843                           ;lcd.c: 212: value=value/10;
 12844  0E93  300A               	movlw	10
 12845  0E94  00F0               	movwf	___awdiv@divisor
 12846  0E95  3000               	movlw	0
 12847  0E96  00F1               	movwf	___awdiv@divisor+1
 12848  0E97  0829               	movf	LCDWriteInt@value+1,w
 12849  0E98  00F3               	movwf	___awdiv@dividend+1
 12850  0E99  0828               	movf	LCDWriteInt@value,w
 12851  0E9A  00F2               	movwf	___awdiv@dividend
 12852  0E9B  3196  26FA  318E   	fcall	___awdiv
 12853  0E9E  0871               	movf	?___awdiv+1,w
 12854  0E9F  0020               	movlb	0	; select bank0
 12855  0EA0  00A9               	movwf	LCDWriteInt@value+1
 12856  0EA1  0870               	movf	?___awdiv,w
 12857  0EA2  00A8               	movwf	LCDWriteInt@value
 12858                           
 12859                           ;lcd.c: 213: i--;
 12860  0EA3  3001               	movlw	1
 12861  0EA4  02B7               	subwf	LCDWriteInt@i,f
 12862  0EA5  2E79               	goto	l4084
 12863  0EA6                     l4086:	
 12864                           
 12865                           ;lcd.c: 214: }
 12866                           ;lcd.c: 215: if(fieldLength==-1)
 12867  0EA6  0A2A               	incf	LCDWriteInt@fieldLength,w
 12868  0EA7  1903               	btfsc	3,2
 12869  0EA8  2EAE               	goto	l4092
 12870  0EA9  2EB6               	goto	l4094
 12871  0EAA                     l4090:	
 12872                           ;lcd.c: 216: {
 12873                           ;lcd.c: 217: while(str[j]==0)
 12874                           
 12875                           
 12876                           ;lcd.c: 218: {
 12877                           ;lcd.c: 219: j++;
 12878  0EAA  3001               	movlw	1
 12879  0EAB  00AD               	movwf	??_LCDWriteInt
 12880  0EAC  082D               	movf	??_LCDWriteInt,w
 12881  0EAD  07B6               	addwf	LCDWriteInt@j,f
 12882  0EAE                     l4092:	
 12883  0EAE  0836               	movf	LCDWriteInt@j,w
 12884  0EAF  3E31               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
 12885  0EB0  0086               	movwf	6
 12886  0EB1  0187               	clrf	7
 12887  0EB2  0801               	movf	1,w
 12888  0EB3  1D03               	btfss	3,2
 12889  0EB4  2EBC               	goto	l4096
 12890  0EB5  2EAA               	goto	l4090
 12891  0EB6                     l4094:	
 12892                           ;lcd.c: 220: }
 12893                           ;lcd.c: 221: }
 12894                           
 12895                           
 12896                           ;lcd.c: 222: else
 12897                           ;lcd.c: 223: {
 12898                           ;lcd.c: 224: j=(uint8_t)(5-fieldLength);
 12899  0EB6  032A               	decf	LCDWriteInt@fieldLength,w
 12900  0EB7  3AFF               	xorlw	255
 12901  0EB8  3E05               	addlw	5
 12902  0EB9  00AD               	movwf	??_LCDWriteInt
 12903  0EBA  082D               	movf	??_LCDWriteInt,w
 12904  0EBB  00B6               	movwf	LCDWriteInt@j
 12905  0EBC                     l4096:	
 12906                           
 12907                           ;lcd.c: 225: }
 12908                           ;lcd.c: 227: for(i=j;i<(5-numPlaces);i++)
 12909  0EBC  0836               	movf	LCDWriteInt@j,w
 12910  0EBD  00AD               	movwf	??_LCDWriteInt
 12911  0EBE  082D               	movf	??_LCDWriteInt,w
 12912  0EBF  00B7               	movwf	LCDWriteInt@i
 12913  0EC0                     l4102:	
 12914  0EC0  082B               	movf	LCDWriteInt@numPlaces,w
 12915  0EC1  00AD               	movwf	??_LCDWriteInt
 12916  0EC2  01AE               	clrf	??_LCDWriteInt+1
 12917  0EC3  09AD               	comf	??_LCDWriteInt,f
 12918  0EC4  09AE               	comf	??_LCDWriteInt+1,f
 12919  0EC5  0AAD               	incf	??_LCDWriteInt,f
 12920  0EC6  1903               	skipnz
 12921  0EC7  0AAE               	incf	??_LCDWriteInt+1,f
 12922  0EC8  082D               	movf	??_LCDWriteInt,w
 12923  0EC9  3E05               	addlw	5
 12924  0ECA  00AF               	movwf	??_LCDWriteInt+2
 12925  0ECB  3000               	movlw	0
 12926  0ECC  3D2E               	addwfc	??_LCDWriteInt+1,w
 12927  0ECD  00B0               	movwf	??_LCDWriteInt+3
 12928  0ECE  0830               	movf	??_LCDWriteInt+3,w
 12929  0ECF  3A80               	xorlw	128
 12930  0ED0  3C80               	sublw	128
 12931  0ED1  1D03               	skipz
 12932  0ED2  2ED5               	goto	u5095
 12933  0ED3  082F               	movf	??_LCDWriteInt+2,w
 12934  0ED4  0237               	subwf	LCDWriteInt@i,w
 12935  0ED5                     u5095:	
 12936  0ED5  1803               	btfsc	3,0
 12937  0ED6  2EE7               	goto	l4104
 12938                           
 12939                           ;lcd.c: 228: {
 12940                           ;lcd.c: 229: LCDWriteCharacter((uint8_t)(48+str[i]));
 12941  0ED7  0020               	movlb	0	; select bank0
 12942  0ED8  0837               	movf	LCDWriteInt@i,w
 12943  0ED9  3E31               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
 12944  0EDA  0086               	movwf	6
 12945  0EDB  0187               	clrf	7
 12946  0EDC  0801               	movf	1,w
 12947  0EDD  3E30               	addlw	48
 12948  0EDE  3197  274B  318E   	fcall	_LCDWriteCharacter
 12949  0EE1  3001               	movlw	1
 12950  0EE2  0020               	movlb	0	; select bank0
 12951  0EE3  00AD               	movwf	??_LCDWriteInt
 12952  0EE4  082D               	movf	??_LCDWriteInt,w
 12953  0EE5  07B7               	addwf	LCDWriteInt@i,f
 12954  0EE6  2EC0               	goto	l4102
 12955  0EE7                     l4104:	
 12956                           
 12957                           ;lcd.c: 230: }
 12958                           ;lcd.c: 232: if(numPlaces == 1)
 12959  0EE7  0020               	movlb	0	; select bank0
 12960  0EE8  032B               	decf	LCDWriteInt@numPlaces,w
 12961  0EE9  1D03               	btfss	3,2
 12962  0EEA  2EF5               	goto	l4108
 12963                           
 12964                           ;lcd.c: 233: {
 12965                           ;lcd.c: 234: LCDWriteCharacter(46);
 12966  0EEB  302E               	movlw	46
 12967  0EEC  3197  274B  318E   	fcall	_LCDWriteCharacter
 12968                           
 12969                           ;lcd.c: 235: LCDWriteCharacter ((uint8_t)(48+str[4]));
 12970  0EEF  0020               	movlb	0	; select bank0
 12971  0EF0  0835               	movf	LCDWriteInt@str+4,w
 12972  0EF1  3E30               	addlw	48
 12973  0EF2  3197  274B  318E   	fcall	_LCDWriteCharacter
 12974  0EF5                     l4108:	
 12975                           
 12976                           ;lcd.c: 236: }
 12977                           ;lcd.c: 238: if(numPlaces == 2)
 12978  0EF5  3002               	movlw	2
 12979  0EF6  0020               	movlb	0	; select bank0
 12980  0EF7  062B               	xorwf	LCDWriteInt@numPlaces,w
 12981  0EF8  1D03               	btfss	3,2
 12982  0EF9  0008               	return
 12983                           
 12984                           ;lcd.c: 239: {
 12985                           ;lcd.c: 240: LCDWriteCharacter(46);
 12986  0EFA  302E               	movlw	46
 12987  0EFB  3197  274B  318E   	fcall	_LCDWriteCharacter
 12988                           
 12989                           ;lcd.c: 241: LCDWriteCharacter((uint8_t)(48+str[3]));
 12990  0EFE  0020               	movlb	0	; select bank0
 12991  0EFF  0834               	movf	LCDWriteInt@str+3,w
 12992  0F00  3E30               	addlw	48
 12993  0F01  3197  274B  318E   	fcall	_LCDWriteCharacter
 12994                           
 12995                           ;lcd.c: 242: LCDWriteCharacter((uint8_t)(48+str[4]));
 12996  0F04  0020               	movlb	0	; select bank0
 12997  0F05  0835               	movf	LCDWriteInt@str+4,w
 12998  0F06  3E30               	addlw	48
 12999  0F07  3197  274B         	fcall	_LCDWriteCharacter
 13000  0F09  0008               	return
 13001  0F0A                     __end_of_LCDWriteInt:	
 13002                           
 13003                           	psect	text34
 13004  092F                     __ptext34:	
 13005 ;; *************** function ___lwmod *****************
 13006 ;; Defined at:
 13007 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
 13008 ;; Parameters:    Size  Location     Type
 13009 ;;  divisor         2    0[COMMON] unsigned int 
 13010 ;;  dividend        2    2[COMMON] unsigned int 
 13011 ;; Auto vars:     Size  Location     Type
 13012 ;;  counter         1    5[COMMON] unsigned char 
 13013 ;; Return value:  Size  Location     Type
 13014 ;;                  2    0[COMMON] unsigned int 
 13015 ;; Registers used:
 13016 ;;		wreg, status,2, status,0
 13017 ;; Tracked objects:
 13018 ;;		On entry : 0/0
 13019 ;;		On exit  : 0/0
 13020 ;;		Unchanged: 0/0
 13021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13022 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13023 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13024 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13025 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13026 ;;Total ram usage:        6 bytes
 13027 ;; Hardware stack levels used:    1
 13028 ;; This function calls:
 13029 ;;		Nothing
 13030 ;; This function is called by:
 13031 ;;		_LCDWriteInt
 13032 ;; This function uses a non-reentrant model
 13033 ;;
 13034                           
 13035                           
 13036                           ;psect for function ___lwmod
 13037  092F                     ___lwmod:	
 13038                           
 13039                           ;incstack = 0
 13040                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 13041  092F  0870               	movf	___lwmod@divisor,w
 13042  0930  0471               	iorwf	___lwmod@divisor+1,w
 13043  0931  1903               	btfsc	3,2
 13044  0932  2956               	goto	l3908
 13045  0933  01F5               	clrf	___lwmod@counter
 13046  0934  0AF5               	incf	___lwmod@counter,f
 13047  0935                     l3898:	
 13048  0935  1BF1               	btfsc	___lwmod@divisor+1,7
 13049  0936  2941               	goto	l3900
 13050  0937  3001               	movlw	1
 13051  0938                     u4675:	
 13052  0938  35F0               	lslf	___lwmod@divisor,f
 13053  0939  0DF1               	rlf	___lwmod@divisor+1,f
 13054  093A  0B89               	decfsz	9,f
 13055  093B  2938               	goto	u4675
 13056  093C  3001               	movlw	1
 13057  093D  00F4               	movwf	??___lwmod
 13058  093E  0874               	movf	??___lwmod,w
 13059  093F  07F5               	addwf	___lwmod@counter,f
 13060  0940  2935               	goto	l3898
 13061  0941                     l3900:	
 13062  0941  0871               	movf	___lwmod@divisor+1,w
 13063  0942  0273               	subwf	___lwmod@dividend+1,w
 13064  0943  1D03               	skipz
 13065  0944  2947               	goto	u4695
 13066  0945  0870               	movf	___lwmod@divisor,w
 13067  0946  0272               	subwf	___lwmod@dividend,w
 13068  0947                     u4695:	
 13069  0947  1C03               	skipc
 13070  0948  294D               	goto	l3904
 13071  0949  0870               	movf	___lwmod@divisor,w
 13072  094A  02F2               	subwf	___lwmod@dividend,f
 13073  094B  0871               	movf	___lwmod@divisor+1,w
 13074  094C  3BF3               	subwfb	___lwmod@dividend+1,f
 13075  094D                     l3904:	
 13076  094D  3001               	movlw	1
 13077  094E                     u4705:	
 13078  094E  36F1               	lsrf	___lwmod@divisor+1,f
 13079  094F  0CF0               	rrf	___lwmod@divisor,f
 13080  0950  0B89               	decfsz	9,f
 13081  0951  294E               	goto	u4705
 13082  0952  3001               	movlw	1
 13083  0953  02F5               	subwf	___lwmod@counter,f
 13084  0954  1D03               	btfss	3,2
 13085  0955  2941               	goto	l3900
 13086  0956                     l3908:	
 13087  0956  0873               	movf	___lwmod@dividend+1,w
 13088  0957  00F1               	movwf	?___lwmod+1
 13089  0958  0872               	movf	___lwmod@dividend,w
 13090  0959  00F0               	movwf	?___lwmod
 13091  095A  0008               	return
 13092  095B                     __end_of___lwmod:	
 13093                           
 13094                           	psect	text35
 13095  16FA                     __ptext35:	
 13096 ;; *************** function ___awdiv *****************
 13097 ;; Defined at:
 13098 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 13099 ;; Parameters:    Size  Location     Type
 13100 ;;  divisor         2    0[COMMON] int 
 13101 ;;  dividend        2    2[COMMON] int 
 13102 ;; Auto vars:     Size  Location     Type
 13103 ;;  quotient        2    7[COMMON] int 
 13104 ;;  sign            1    6[COMMON] unsigned char 
 13105 ;;  counter         1    5[COMMON] unsigned char 
 13106 ;; Return value:  Size  Location     Type
 13107 ;;                  2    0[COMMON] int 
 13108 ;; Registers used:
 13109 ;;		wreg, status,2, status,0
 13110 ;; Tracked objects:
 13111 ;;		On entry : 0/0
 13112 ;;		On exit  : 0/0
 13113 ;;		Unchanged: 0/0
 13114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13115 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13116 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13117 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13118 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13119 ;;Total ram usage:        9 bytes
 13120 ;; Hardware stack levels used:    1
 13121 ;; This function calls:
 13122 ;;		Nothing
 13123 ;; This function is called by:
 13124 ;;		_main
 13125 ;;		_LCDWriteInt
 13126 ;; This function uses a non-reentrant model
 13127 ;;
 13128                           
 13129                           
 13130                           ;psect for function ___awdiv
 13131  16FA                     ___awdiv:	
 13132                           
 13133                           ;incstack = 0
 13134                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 13135  16FA  01F6               	clrf	___awdiv@sign
 13136  16FB  1FF1               	btfss	___awdiv@divisor+1,7
 13137  16FC  2F04               	goto	l3762
 13138  16FD  09F0               	comf	___awdiv@divisor,f
 13139  16FE  09F1               	comf	___awdiv@divisor+1,f
 13140  16FF  0AF0               	incf	___awdiv@divisor,f
 13141  1700  1903               	skipnz
 13142  1701  0AF1               	incf	___awdiv@divisor+1,f
 13143  1702  01F6               	clrf	___awdiv@sign
 13144  1703  0AF6               	incf	___awdiv@sign,f
 13145  1704                     l3762:	
 13146  1704  1FF3               	btfss	___awdiv@dividend+1,7
 13147  1705  2F0F               	goto	l3768
 13148  1706  09F2               	comf	___awdiv@dividend,f
 13149  1707  09F3               	comf	___awdiv@dividend+1,f
 13150  1708  0AF2               	incf	___awdiv@dividend,f
 13151  1709  1903               	skipnz
 13152  170A  0AF3               	incf	___awdiv@dividend+1,f
 13153  170B  3001               	movlw	1
 13154  170C  00F4               	movwf	??___awdiv
 13155  170D  0874               	movf	??___awdiv,w
 13156  170E  06F6               	xorwf	___awdiv@sign,f
 13157  170F                     l3768:	
 13158  170F  01F7               	clrf	___awdiv@quotient
 13159  1710  01F8               	clrf	___awdiv@quotient+1
 13160  1711  0870               	movf	___awdiv@divisor,w
 13161  1712  0471               	iorwf	___awdiv@divisor+1,w
 13162  1713  1903               	btfsc	3,2
 13163  1714  2F3E               	goto	l3790
 13164  1715  01F5               	clrf	___awdiv@counter
 13165  1716  0AF5               	incf	___awdiv@counter,f
 13166  1717                     l3778:	
 13167  1717  1BF1               	btfsc	___awdiv@divisor+1,7
 13168  1718  2F23               	goto	l3780
 13169  1719  3001               	movlw	1
 13170  171A                     u4405:	
 13171  171A  35F0               	lslf	___awdiv@divisor,f
 13172  171B  0DF1               	rlf	___awdiv@divisor+1,f
 13173  171C  0B89               	decfsz	9,f
 13174  171D  2F1A               	goto	u4405
 13175  171E  3001               	movlw	1
 13176  171F  00F4               	movwf	??___awdiv
 13177  1720  0874               	movf	??___awdiv,w
 13178  1721  07F5               	addwf	___awdiv@counter,f
 13179  1722  2F17               	goto	l3778
 13180  1723                     l3780:	
 13181  1723  3001               	movlw	1
 13182  1724                     u4425:	
 13183  1724  35F7               	lslf	___awdiv@quotient,f
 13184  1725  0DF8               	rlf	___awdiv@quotient+1,f
 13185  1726  0B89               	decfsz	9,f
 13186  1727  2F24               	goto	u4425
 13187  1728  0871               	movf	___awdiv@divisor+1,w
 13188  1729  0273               	subwf	___awdiv@dividend+1,w
 13189  172A  1D03               	skipz
 13190  172B  2F2E               	goto	u4435
 13191  172C  0870               	movf	___awdiv@divisor,w
 13192  172D  0272               	subwf	___awdiv@dividend,w
 13193  172E                     u4435:	
 13194  172E  1C03               	skipc
 13195  172F  2F35               	goto	l3786
 13196  1730  0870               	movf	___awdiv@divisor,w
 13197  1731  02F2               	subwf	___awdiv@dividend,f
 13198  1732  0871               	movf	___awdiv@divisor+1,w
 13199  1733  3BF3               	subwfb	___awdiv@dividend+1,f
 13200  1734  1477               	bsf	___awdiv@quotient,0
 13201  1735                     l3786:	
 13202  1735  3001               	movlw	1
 13203  1736                     u4445:	
 13204  1736  36F1               	lsrf	___awdiv@divisor+1,f
 13205  1737  0CF0               	rrf	___awdiv@divisor,f
 13206  1738  0B89               	decfsz	9,f
 13207  1739  2F36               	goto	u4445
 13208  173A  3001               	movlw	1
 13209  173B  02F5               	subwf	___awdiv@counter,f
 13210  173C  1D03               	btfss	3,2
 13211  173D  2F23               	goto	l3780
 13212  173E                     l3790:	
 13213  173E  0876               	movf	___awdiv@sign,w
 13214  173F  1903               	btfsc	3,2
 13215  1740  2F46               	goto	l3794
 13216  1741  09F7               	comf	___awdiv@quotient,f
 13217  1742  09F8               	comf	___awdiv@quotient+1,f
 13218  1743  0AF7               	incf	___awdiv@quotient,f
 13219  1744  1903               	skipnz
 13220  1745  0AF8               	incf	___awdiv@quotient+1,f
 13221  1746                     l3794:	
 13222  1746  0878               	movf	___awdiv@quotient+1,w
 13223  1747  00F1               	movwf	?___awdiv+1
 13224  1748  0877               	movf	___awdiv@quotient,w
 13225  1749  00F0               	movwf	?___awdiv
 13226  174A  0008               	return
 13227  174B                     __end_of___awdiv:	
 13228                           
 13229                           	psect	text36
 13230  0BAA                     __ptext36:	
 13231 ;; *************** function _Battery_State_Machine *****************
 13232 ;; Defined at:
 13233 ;;		line 35 in file "battery_charger.c"
 13234 ;; Parameters:    Size  Location     Type
 13235 ;;		None
 13236 ;; Auto vars:     Size  Location     Type
 13237 ;;		None
 13238 ;; Return value:  Size  Location     Type
 13239 ;;                  1    wreg      void 
 13240 ;; Registers used:
 13241 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13242 ;; Tracked objects:
 13243 ;;		On entry : 0/0
 13244 ;;		On exit  : 0/0
 13245 ;;		Unchanged: 0/0
 13246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13249 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13250 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13251 ;;Total ram usage:        2 bytes
 13252 ;; Hardware stack levels used:    1
 13253 ;; Hardware stack levels required when called:    3
 13254 ;; This function calls:
 13255 ;;		_LCDWriteString
 13256 ;;		_gotoXY
 13257 ;; This function is called by:
 13258 ;;		_main
 13259 ;; This function uses a non-reentrant model
 13260 ;;
 13261                           
 13262                           
 13263                           ;psect for function _Battery_State_Machine
 13264  0BAA                     _Battery_State_Machine:	
 13265                           
 13266                           ;battery_charger.c: 37: if(battery_state == PRECHARGE)
 13267                           
 13268                           ;incstack = 0
 13269                           ; Regs used in _Battery_State_Machine: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 13270  0BAA  3003               	movlw	3
 13271  0BAB  0021               	movlb	1	; select bank1
 13272  0BAC  066D               	xorwf	_battery_state^(0+128),w
 13273  0BAD  1D03               	btfss	3,2
 13274  0BAE  2BDF               	goto	l4032
 13275                           
 13276                           ;battery_charger.c: 38: {
 13277                           ;battery_charger.c: 39: if(voltage[1] < 1075)
 13278  0BAF  084F               	movf	((_voltage+1)^(0+128)+2),w
 13279  0BB0  3A80               	xorlw	128
 13280  0BB1  0020               	movlb	0	; select bank0
 13281  0BB2  00AA               	movwf	??_Battery_State_Machine
 13282  0BB3  3084               	movlw	132
 13283  0BB4  022A               	subwf	??_Battery_State_Machine,w
 13284  0BB5  1D03               	skipz
 13285  0BB6  2BBA               	goto	u4945
 13286  0BB7  3033               	movlw	51
 13287  0BB8  0021               	movlb	1	; select bank1
 13288  0BB9  024E               	subwf	(_voltage^(0+128)+2),w
 13289  0BBA                     u4945:	
 13290  0BBA  1803               	skipnc
 13291  0BBB  2BD4               	goto	l4030
 13292                           
 13293                           ;battery_charger.c: 40: {
 13294                           ;battery_charger.c: 41: if(state_counter>0)
 13295  0BBC  0021               	movlb	1	; select bank1
 13296  0BBD  0866               	movf	(_state_counter+1)^(0+128),w
 13297  0BBE  3A80               	xorlw	128
 13298  0BBF  0020               	movlb	0	; select bank0
 13299  0BC0  00AA               	movwf	??_Battery_State_Machine
 13300  0BC1  3080               	movlw	128
 13301  0BC2  022A               	subwf	??_Battery_State_Machine,w
 13302  0BC3  1D03               	skipz
 13303  0BC4  2BC8               	goto	u4955
 13304  0BC5  3001               	movlw	1
 13305  0BC6  0021               	movlb	1	; select bank1
 13306  0BC7  0265               	subwf	_state_counter^(0+128),w
 13307  0BC8                     u4955:	
 13308  0BC8  1C03               	skipc
 13309  0BC9  2BD0               	goto	l219
 13310                           
 13311                           ;battery_charger.c: 42: {
 13312                           ;battery_charger.c: 43: state_counter-=1;
 13313  0BCA  30FF               	movlw	255
 13314  0BCB  0021               	movlb	1	; select bank1
 13315  0BCC  07E5               	addwf	_state_counter^(0+128),f
 13316  0BCD  30FF               	movlw	255
 13317  0BCE  3DE6               	addwfc	(_state_counter+1)^(0+128),f
 13318                           
 13319                           ;battery_charger.c: 44: }
 13320  0BCF  0008               	return
 13321  0BD0                     l219:	
 13322                           
 13323                           ;battery_charger.c: 45: else
 13324                           ;battery_charger.c: 46: {
 13325                           ;battery_charger.c: 47: battery_state = FAULT;
 13326  0BD0  0021               	movlb	1	; select bank1
 13327  0BD1  01ED               	clrf	_battery_state^(0+128)
 13328  0BD2  0AED               	incf	_battery_state^(0+128),f
 13329                           
 13330                           ;battery_charger.c: 48: }
 13331                           ;battery_charger.c: 49: }
 13332  0BD3  0008               	return
 13333  0BD4                     l4030:	
 13334                           
 13335                           ;battery_charger.c: 50: else
 13336                           ;battery_charger.c: 51: {
 13337                           ;battery_charger.c: 52: battery_state = CHARGE;
 13338  0BD4  3004               	movlw	4
 13339  0BD5  0020               	movlb	0	; select bank0
 13340  0BD6  00AA               	movwf	??_Battery_State_Machine
 13341  0BD7  082A               	movf	??_Battery_State_Machine,w
 13342  0BD8  0021               	movlb	1	; select bank1
 13343  0BD9  00ED               	movwf	_battery_state^(0+128)
 13344                           
 13345                           ;battery_charger.c: 53: { Iref = 55; };
 13346  0BDA  3037               	movlw	55
 13347  0BDB  00E9               	movwf	_Iref^(0+128)
 13348  0BDC  3000               	movlw	0
 13349  0BDD  00EA               	movwf	(_Iref^(0+128)+1)
 13350                           
 13351                           ;battery_charger.c: 54: }
 13352                           ;battery_charger.c: 55: }
 13353  0BDE  0008               	return
 13354  0BDF                     l4032:	
 13355                           
 13356                           ;battery_charger.c: 56: else if(battery_state == CHARGE)
 13357  0BDF  3004               	movlw	4
 13358  0BE0  066D               	xorwf	_battery_state^(0+128),w
 13359  0BE1  1D03               	btfss	3,2
 13360  0BE2  2C16               	goto	l4046
 13361                           
 13362                           ;battery_charger.c: 57: {
 13363                           ;battery_charger.c: 58: if((!Imode0))
 13364  0BE3  086F               	movf	_Imode0^(0+128),w
 13365  0BE4  1D03               	btfss	3,2
 13366  0BE5  0008               	return
 13367                           
 13368                           ;battery_charger.c: 59: {
 13369                           ;battery_charger.c: 60: if(current[1] < Imin)
 13370  0BE6  0847               	movf	((_current+1)^(0+128)+2),w
 13371  0BE7  3A80               	xorlw	128
 13372  0BE8  0020               	movlb	0	; select bank0
 13373  0BE9  00AA               	movwf	??_Battery_State_Machine
 13374  0BEA  0021               	movlb	1	; select bank1
 13375  0BEB  0864               	movf	(_Imin+1)^(0+128),w
 13376  0BEC  3A80               	xorlw	128
 13377  0BED  0020               	movlb	0	; select bank0
 13378  0BEE  022A               	subwf	??_Battery_State_Machine,w
 13379  0BEF  1D03               	skipz
 13380  0BF0  2BF4               	goto	u4985
 13381  0BF1  0021               	movlb	1	; select bank1
 13382  0BF2  0863               	movf	_Imin^(0+128),w
 13383  0BF3  0246               	subwf	(_current^(0+128)+2),w
 13384  0BF4                     u4985:	
 13385  0BF4  1803               	skipnc
 13386  0BF5  2C09               	goto	l4042
 13387                           
 13388                           ;battery_charger.c: 61: {
 13389                           ;battery_charger.c: 62: IminCount-=2;
 13390  0BF6  3002               	movlw	2
 13391  0BF7  0021               	movlb	1	; select bank1
 13392  0BF8  02E7               	subwf	_IminCount^(0+128),f
 13393  0BF9  3000               	movlw	0
 13394  0BFA  3BE8               	subwfb	(_IminCount+1)^(0+128),f
 13395                           
 13396                           ;battery_charger.c: 63: if(IminCount<2)
 13397  0BFB  3000               	movlw	0
 13398  0BFC  0268               	subwf	(_IminCount+1)^(0+128),w
 13399  0BFD  3002               	movlw	2
 13400  0BFE  1903               	skipnz
 13401  0BFF  0267               	subwf	_IminCount^(0+128),w
 13402  0C00  1803               	skipnc
 13403  0C01  0008               	return
 13404                           
 13405                           ;battery_charger.c: 64: {
 13406                           ;battery_charger.c: 65: battery_state = FLOAT;
 13407  0C02  3005               	movlw	5
 13408  0C03  0020               	movlb	0	; select bank0
 13409  0C04  00AA               	movwf	??_Battery_State_Machine
 13410  0C05  082A               	movf	??_Battery_State_Machine,w
 13411  0C06  0021               	movlb	1	; select bank1
 13412  0C07  00ED               	movwf	_battery_state^(0+128)
 13413                           
 13414                           ;battery_charger.c: 66: }
 13415                           ;battery_charger.c: 67: }
 13416  0C08  0008               	return
 13417  0C09                     l4042:	
 13418                           
 13419                           ;battery_charger.c: 68: else
 13420                           ;battery_charger.c: 69: {
 13421                           ;battery_charger.c: 70: if(IminCount<10)IminCount+=1;
 13422  0C09  3000               	movlw	0
 13423  0C0A  0021               	movlb	1	; select bank1
 13424  0C0B  0268               	subwf	(_IminCount+1)^(0+128),w
 13425  0C0C  300A               	movlw	10
 13426  0C0D  1903               	skipnz
 13427  0C0E  0267               	subwf	_IminCount^(0+128),w
 13428  0C0F  1803               	skipnc
 13429  0C10  0008               	return
 13430  0C11  3001               	movlw	1
 13431  0C12  07E7               	addwf	_IminCount^(0+128),f
 13432  0C13  3000               	movlw	0
 13433  0C14  3DE8               	addwfc	(_IminCount+1)^(0+128),f
 13434                           
 13435                           ;battery_charger.c: 71: }
 13436                           ;battery_charger.c: 72: }
 13437                           ;battery_charger.c: 73: }
 13438  0C15  0008               	return
 13439  0C16                     l4046:	
 13440                           
 13441                           ;battery_charger.c: 74: else if(battery_state == FLOAT)
 13442  0C16  3005               	movlw	5
 13443  0C17  066D               	xorwf	_battery_state^(0+128),w
 13444  0C18  1D03               	btfss	3,2
 13445  0C19  2C23               	goto	l4050
 13446                           
 13447                           ;battery_charger.c: 75: {
 13448                           ;battery_charger.c: 76: { Vref = 1380; };
 13449  0C1A  3064               	movlw	100
 13450  0C1B  00EB               	movwf	_Vref^(0+128)
 13451  0C1C  3005               	movlw	5
 13452  0C1D  00EC               	movwf	(_Vref^(0+128)+1)
 13453                           
 13454                           ;battery_charger.c: 77: { Iref = 25; };
 13455  0C1E  3019               	movlw	25
 13456  0C1F  00E9               	movwf	_Iref^(0+128)
 13457  0C20  3000               	movlw	0
 13458  0C21  00EA               	movwf	(_Iref^(0+128)+1)
 13459                           
 13460                           ;battery_charger.c: 78: }
 13461  0C22  0008               	return
 13462  0C23                     l4050:	
 13463                           
 13464                           ;battery_charger.c: 79: else
 13465                           ;battery_charger.c: 80: if(battery_state == FAULT)
 13466  0C23  036D               	decf	_battery_state^(0+128),w
 13467  0C24  1D03               	btfss	3,2
 13468  0C25  0008               	return
 13469                           
 13470                           ;battery_charger.c: 81: {
 13471                           ;battery_charger.c: 82: { gotoXY(0,0); LCDWriteString("BATTERY FAULT");};
 13472  0C26  01F5               	clrf	gotoXY@y
 13473  0C27  3000               	movlw	0
 13474  0C28  3193  23EB  318B   	fcall	_gotoXY
 13475  0C2B  301B               	movlw	low (STR_1| (0+32768))
 13476  0C2C  0020               	movlb	0	; select bank0
 13477  0C2D  00A8               	movwf	LCDWriteString@characters
 13478  0C2E  3098               	movlw	high (STR_1| (0+32768))
 13479  0C2F  00A9               	movwf	LCDWriteString@characters+1
 13480  0C30  3180  2004  318B   	fcall	_LCDWriteString
 13481                           
 13482                           ;battery_charger.c: 83: Imode0=0;
 13483  0C33  0021               	movlb	1	; select bank1
 13484  0C34  01EF               	clrf	_Imode0^(0+128)
 13485                           
 13486                           ;battery_charger.c: 84: Imode1=0;
 13487  0C35  01EE               	clrf	_Imode1^(0+128)
 13488                           
 13489                           ;battery_charger.c: 85: _delay((unsigned long)((2000)*(32000000/4000.0)));
 13490  0C36  3052               	movlw	82
 13491  0C37  0020               	movlb	0	; select bank0
 13492  0C38  00AB               	movwf	??_Battery_State_Machine+1
 13493  0C39  302B               	movlw	43
 13494  0C3A  00AA               	movwf	??_Battery_State_Machine
 13495  0C3B  3000               	movlw	0
 13496  0C3C                     u5477:	
 13497  0C3C  0B89               	decfsz	9,f
 13498  0C3D  2C3C               	goto	u5477
 13499  0C3E  0BAA               	decfsz	??_Battery_State_Machine,f
 13500  0C3F  2C3C               	goto	u5477
 13501  0C40  0BAB               	decfsz	??_Battery_State_Machine+1,f
 13502  0C41  2C3C               	goto	u5477
 13503  0C42  0000               	nop
 13504  0C43  0008               	return
 13505  0C44                     __end_of_Battery_State_Machine:	
 13506                           
 13507                           	psect	text37
 13508  13EB                     __ptext37:	
 13509 ;; *************** function _gotoXY *****************
 13510 ;; Defined at:
 13511 ;;		line 124 in file "lcd.c"
 13512 ;; Parameters:    Size  Location     Type
 13513 ;;  x               1    wreg     unsigned char 
 13514 ;;  y               1    5[COMMON] unsigned char 
 13515 ;; Auto vars:     Size  Location     Type
 13516 ;;  x               1    7[COMMON] unsigned char 
 13517 ;; Return value:  Size  Location     Type
 13518 ;;                  1    wreg      void 
 13519 ;; Registers used:
 13520 ;;		wreg, status,2, status,0, pclath, cstack
 13521 ;; Tracked objects:
 13522 ;;		On entry : 0/0
 13523 ;;		On exit  : 0/0
 13524 ;;		Unchanged: 0/0
 13525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13526 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13527 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13528 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13529 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13530 ;;Total ram usage:        3 bytes
 13531 ;; Hardware stack levels used:    1
 13532 ;; Hardware stack levels required when called:    1
 13533 ;; This function calls:
 13534 ;;		_LCDWrite
 13535 ;; This function is called by:
 13536 ;;		_main
 13537 ;;		_Battery_State_Machine
 13538 ;;		_LCDClear
 13539 ;; This function uses a non-reentrant model
 13540 ;;
 13541                           
 13542                           
 13543                           ;psect for function _gotoXY
 13544  13EB                     _gotoXY:	
 13545                           
 13546                           ;incstack = 0
 13547                           ; Regs used in _gotoXY: [wreg+status,2+status,0+pclath+cstack]
 13548                           ;gotoXY@x stored from wreg
 13549  13EB  00F7               	movwf	gotoXY@x
 13550                           
 13551                           ;lcd.c: 126: LCDWrite(0,(uint8_t)(0x80 | x));
 13552  13EC  0877               	movf	gotoXY@x,w
 13553  13ED  3880               	iorlw	128
 13554  13EE  00F6               	movwf	??_gotoXY
 13555  13EF  0876               	movf	??_gotoXY,w
 13556  13F0  00F0               	movwf	LCDWrite@data
 13557  13F1  3000               	movlw	0
 13558  13F2  3195  2509  3193   	fcall	_LCDWrite
 13559                           
 13560                           ;lcd.c: 127: LCDWrite(0,(uint8_t)(0x40 | y));
 13561  13F5  0875               	movf	gotoXY@y,w
 13562  13F6  3840               	iorlw	64
 13563  13F7  00F6               	movwf	??_gotoXY
 13564  13F8  0876               	movf	??_gotoXY,w
 13565  13F9  00F0               	movwf	LCDWrite@data
 13566  13FA  3000               	movlw	0
 13567  13FB  3195  2509         	fcall	_LCDWrite
 13568  13FD  0008               	return
 13569  13FE                     __end_of_gotoXY:	
 13570                           
 13571                           	psect	text38
 13572  0004                     __ptext38:	
 13573 ;; *************** function _LCDWriteString *****************
 13574 ;; Defined at:
 13575 ;;		line 176 in file "lcd.c"
 13576 ;; Parameters:    Size  Location     Type
 13577 ;;  characters      2    8[BANK0 ] PTR const unsigned char 
 13578 ;;		 -> STR_1(14), 
 13579 ;; Auto vars:     Size  Location     Type
 13580 ;;		None
 13581 ;; Return value:  Size  Location     Type
 13582 ;;                  1    wreg      void 
 13583 ;; Registers used:
 13584 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13585 ;; Tracked objects:
 13586 ;;		On entry : 0/0
 13587 ;;		On exit  : 0/0
 13588 ;;		Unchanged: 0/0
 13589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13590 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13592 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13593 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13594 ;;Total ram usage:        3 bytes
 13595 ;; Hardware stack levels used:    1
 13596 ;; Hardware stack levels required when called:    2
 13597 ;; This function calls:
 13598 ;;		_LCDWriteCharacter
 13599 ;; This function is called by:
 13600 ;;		_Battery_State_Machine
 13601 ;; This function uses a non-reentrant model
 13602 ;;
 13603                           
 13604                           
 13605                           ;psect for function _LCDWriteString
 13606  0004                     _LCDWriteString:	
 13607  0004                     l3602:	
 13608                           ;lcd.c: 178: while (*characters)
 13609                           
 13610                           ;incstack = 0
 13611                           ; Regs used in _LCDWriteString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 13612                           
 13613  0004  0020               	movlb	0	; select bank0
 13614  0005  0828               	movf	LCDWriteString@characters,w
 13615  0006  0084               	movwf	4
 13616  0007  0829               	movf	LCDWriteString@characters+1,w
 13617  0008  0085               	movwf	5
 13618  0009  0012               	moviw fsr0++
 13619  000A  1903               	btfsc	3,2
 13620  000B  0008               	return
 13621                           
 13622                           ;lcd.c: 179: LCDWriteCharacter(*characters++);
 13623  000C  0020               	movlb	0	; select bank0
 13624  000D  0828               	movf	LCDWriteString@characters,w
 13625  000E  0084               	movwf	4
 13626  000F  0829               	movf	LCDWriteString@characters+1,w
 13627  0010  0085               	movwf	5
 13628  0011  0800               	movf	0,w	;code access
 13629  0012  3197  274B  3180   	fcall	_LCDWriteCharacter
 13630  0015  3001               	movlw	1
 13631  0016  0020               	movlb	0	; select bank0
 13632  0017  07A8               	addwf	LCDWriteString@characters,f
 13633  0018  3000               	movlw	0
 13634  0019  3DA9               	addwfc	LCDWriteString@characters+1,f
 13635  001A  2804               	goto	l3602
 13636  001B                     __end_of_LCDWriteString:	
 13637                           
 13638                           	psect	text39
 13639  174B                     __ptext39:	
 13640 ;; *************** function _LCDWriteCharacter *****************
 13641 ;; Defined at:
 13642 ;;		line 140 in file "lcd.c"
 13643 ;; Parameters:    Size  Location     Type
 13644 ;;  character       1    wreg     const unsigned char 
 13645 ;; Auto vars:     Size  Location     Type
 13646 ;;  character       1    5[BANK0 ] const unsigned char 
 13647 ;;  base            2    6[BANK0 ] unsigned int 
 13648 ;; Return value:  Size  Location     Type
 13649 ;;                  1    wreg      void 
 13650 ;; Registers used:
 13651 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13652 ;; Tracked objects:
 13653 ;;		On entry : 0/0
 13654 ;;		On exit  : 0/0
 13655 ;;		Unchanged: 0/0
 13656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13658 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13659 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13660 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13661 ;;Total ram usage:        6 bytes
 13662 ;; Hardware stack levels used:    1
 13663 ;; Hardware stack levels required when called:    1
 13664 ;; This function calls:
 13665 ;;		_LCDWrite
 13666 ;;		___wmul
 13667 ;; This function is called by:
 13668 ;;		_main
 13669 ;;		_LCDWriteString
 13670 ;;		_LCDWriteInt
 13671 ;; This function uses a non-reentrant model
 13672 ;;
 13673                           
 13674                           
 13675                           ;psect for function _LCDWriteCharacter
 13676  174B                     _LCDWriteCharacter:	
 13677                           
 13678                           ;incstack = 0
 13679                           ; Regs used in _LCDWriteCharacter: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 13680                           ;LCDWriteCharacter@character stored from wreg
 13681  174B  0020               	movlb	0	; select bank0
 13682  174C  00A5               	movwf	LCDWriteCharacter@character
 13683                           
 13684                           ;lcd.c: 142: uint16_t base;
 13685                           ;lcd.c: 143: base = character - 0x20;
 13686  174D  0825               	movf	LCDWriteCharacter@character,w
 13687  174E  3EE0               	addlw	224
 13688  174F  00A6               	movwf	LCDWriteCharacter@base
 13689  1750  30FF               	movlw	255
 13690  1751  1803               	skipnc
 13691  1752  3000               	movlw	0
 13692  1753  00A7               	movwf	LCDWriteCharacter@base+1
 13693                           
 13694                           ;lcd.c: 144: base *= 3;
 13695  1754  3003               	movlw	3
 13696  1755  00F9               	movwf	___wmul@multiplier
 13697  1756  3000               	movlw	0
 13698  1757  00FA               	movwf	___wmul@multiplier+1
 13699  1758  0827               	movf	LCDWriteCharacter@base+1,w
 13700  1759  00FC               	movwf	___wmul@multiplicand+1
 13701  175A  0826               	movf	LCDWriteCharacter@base,w
 13702  175B  00FB               	movwf	___wmul@multiplicand
 13703  175C  3194  246F  3197   	fcall	___wmul
 13704  175F  087A               	movf	?___wmul+1,w
 13705  1760  0020               	movlb	0	; select bank0
 13706  1761  00A7               	movwf	LCDWriteCharacter@base+1
 13707  1762  0879               	movf	?___wmul,w
 13708  1763  00A6               	movwf	LCDWriteCharacter@base
 13709                           
 13710                           ;lcd.c: 145: LCDWrite(1,fonts[base]);
 13711  1764  0827               	movf	LCDWriteCharacter@base+1,w
 13712  1765  0085               	movwf	5
 13713  1766  0826               	movf	LCDWriteCharacter@base,w
 13714  1767  0084               	movwf	4
 13715  1768  3000               	movlw	low (_fonts| (0+32768))
 13716  1769  0784               	addwf	4,f
 13717  176A  3088               	movlw	high (_fonts| (0+32768))
 13718  176B  3D85               	addwfc	5,f
 13719  176C  0800               	movf	0,w	;code access
 13720  176D  00A2               	movwf	??_LCDWriteCharacter
 13721  176E  0822               	movf	??_LCDWriteCharacter,w
 13722  176F  00F0               	movwf	LCDWrite@data
 13723  1770  3001               	movlw	1
 13724  1771  3195  2509  3197   	fcall	_LCDWrite
 13725                           
 13726                           ;lcd.c: 146: LCDWrite(1,fonts[base + 1]);
 13727  1774  0020               	movlb	0	; select bank0
 13728  1775  0826               	movf	LCDWriteCharacter@base,w
 13729  1776  3E01               	addlw	1
 13730  1777  00A2               	movwf	??_LCDWriteCharacter
 13731  1778  3000               	movlw	0
 13732  1779  3D27               	addwfc	LCDWriteCharacter@base+1,w
 13733  177A  00A3               	movwf	??_LCDWriteCharacter+1
 13734  177B  3000               	movlw	low (_fonts| (0+32768))
 13735  177C  0722               	addwf	??_LCDWriteCharacter,w
 13736  177D  0084               	movwf	4
 13737  177E  3088               	movlw	high (_fonts| (0+32768))
 13738  177F  3D23               	addwfc	??_LCDWriteCharacter+1,w
 13739  1780  0085               	movwf	5
 13740  1781  0800               	movf	0,w	;code access
 13741  1782  00A4               	movwf	??_LCDWriteCharacter+2
 13742  1783  0824               	movf	??_LCDWriteCharacter+2,w
 13743  1784  00F0               	movwf	LCDWrite@data
 13744  1785  3001               	movlw	1
 13745  1786  3195  2509  3197   	fcall	_LCDWrite
 13746                           
 13747                           ;lcd.c: 147: LCDWrite(1,fonts[base + 2]);
 13748  1789  0020               	movlb	0	; select bank0
 13749  178A  0826               	movf	LCDWriteCharacter@base,w
 13750  178B  3E02               	addlw	2
 13751  178C  00A2               	movwf	??_LCDWriteCharacter
 13752  178D  3000               	movlw	0
 13753  178E  3D27               	addwfc	LCDWriteCharacter@base+1,w
 13754  178F  00A3               	movwf	??_LCDWriteCharacter+1
 13755  1790  3000               	movlw	low (_fonts| (0+32768))
 13756  1791  0722               	addwf	??_LCDWriteCharacter,w
 13757  1792  0084               	movwf	4
 13758  1793  3088               	movlw	high (_fonts| (0+32768))
 13759  1794  3D23               	addwfc	??_LCDWriteCharacter+1,w
 13760  1795  0085               	movwf	5
 13761  1796  0800               	movf	0,w	;code access
 13762  1797  00A4               	movwf	??_LCDWriteCharacter+2
 13763  1798  0824               	movf	??_LCDWriteCharacter+2,w
 13764  1799  00F0               	movwf	LCDWrite@data
 13765  179A  3001               	movlw	1
 13766  179B  3195  2509  3197   	fcall	_LCDWrite
 13767                           
 13768                           ;lcd.c: 148: LCDWrite(1, 0x00);
 13769  179E  01F0               	clrf	LCDWrite@data
 13770  179F  3001               	movlw	1
 13771  17A0  3195  2509         	fcall	_LCDWrite
 13772  17A2  0008               	return
 13773  17A3                     __end_of_LCDWriteCharacter:	
 13774                           
 13775                           	psect	text40
 13776  146F                     __ptext40:	
 13777 ;; *************** function ___wmul *****************
 13778 ;; Defined at:
 13779 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 13780 ;; Parameters:    Size  Location     Type
 13781 ;;  multiplier      2    9[COMMON] unsigned int 
 13782 ;;  multiplicand    2   11[COMMON] unsigned int 
 13783 ;; Auto vars:     Size  Location     Type
 13784 ;;  product         2    0[BANK0 ] unsigned int 
 13785 ;; Return value:  Size  Location     Type
 13786 ;;                  2    9[COMMON] unsigned int 
 13787 ;; Registers used:
 13788 ;;		wreg, status,2, status,0
 13789 ;; Tracked objects:
 13790 ;;		On entry : 0/0
 13791 ;;		On exit  : 0/0
 13792 ;;		Unchanged: 0/0
 13793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13794 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13795 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13797 ;;      Totals:         4       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13798 ;;Total ram usage:        6 bytes
 13799 ;; Hardware stack levels used:    1
 13800 ;; This function calls:
 13801 ;;		Nothing
 13802 ;; This function is called by:
 13803 ;;		_main
 13804 ;;		_readAnalog
 13805 ;;		_LCDWriteCharacter
 13806 ;;		_eval_poly
 13807 ;; This function uses a non-reentrant model
 13808 ;;
 13809                           
 13810                           
 13811                           ;psect for function ___wmul
 13812  146F                     ___wmul:	
 13813                           
 13814                           ;incstack = 0
 13815                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 13816  146F  0020               	movlb	0	; select bank0
 13817  1470  01A0               	clrf	___wmul@product
 13818  1471  01A1               	clrf	___wmul@product+1
 13819  1472                     l3318:	
 13820  1472  1C79               	btfss	___wmul@multiplier,0
 13821  1473  2C79               	goto	l566
 13822  1474  087B               	movf	___wmul@multiplicand,w
 13823  1475  0020               	movlb	0	; select bank0
 13824  1476  07A0               	addwf	___wmul@product,f
 13825  1477  087C               	movf	___wmul@multiplicand+1,w
 13826  1478  3DA1               	addwfc	___wmul@product+1,f
 13827  1479                     l566:	
 13828  1479  3001               	movlw	1
 13829  147A                     u3745:	
 13830  147A  35FB               	lslf	___wmul@multiplicand,f
 13831  147B  0DFC               	rlf	___wmul@multiplicand+1,f
 13832  147C  0B89               	decfsz	9,f
 13833  147D  2C7A               	goto	u3745
 13834  147E  3001               	movlw	1
 13835  147F                     u3755:	
 13836  147F  36FA               	lsrf	___wmul@multiplier+1,f
 13837  1480  0CF9               	rrf	___wmul@multiplier,f
 13838  1481  0B89               	decfsz	9,f
 13839  1482  2C7F               	goto	u3755
 13840  1483  0879               	movf	___wmul@multiplier,w
 13841  1484  047A               	iorwf	___wmul@multiplier+1,w
 13842  1485  1D03               	btfss	3,2
 13843  1486  2C72               	goto	l3318
 13844  1487  0020               	movlb	0	; select bank0
 13845  1488  0821               	movf	___wmul@product+1,w
 13846  1489  00FA               	movwf	?___wmul+1
 13847  148A  0820               	movf	___wmul@product,w
 13848  148B  00F9               	movwf	?___wmul
 13849  148C  0008               	return
 13850  148D                     __end_of___wmul:	
 13851                           
 13852                           	psect	text41
 13853  1509                     __ptext41:	
 13854 ;; *************** function _LCDWrite *****************
 13855 ;; Defined at:
 13856 ;;		line 281 in file "lcd.c"
 13857 ;; Parameters:    Size  Location     Type
 13858 ;;  data_or_comm    1    wreg     unsigned char 
 13859 ;;  data            1    0[COMMON] unsigned char 
 13860 ;; Auto vars:     Size  Location     Type
 13861 ;;  data_or_comm    1    2[COMMON] unsigned char 
 13862 ;;  i               1    4[COMMON] unsigned char 
 13863 ;;  d               1    3[COMMON] unsigned char 
 13864 ;; Return value:  Size  Location     Type
 13865 ;;                  1    wreg      void 
 13866 ;; Registers used:
 13867 ;;		wreg, status,2, status,0
 13868 ;; Tracked objects:
 13869 ;;		On entry : 0/0
 13870 ;;		On exit  : 0/0
 13871 ;;		Unchanged: 0/0
 13872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13873 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13874 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13875 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13876 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13877 ;;Total ram usage:        5 bytes
 13878 ;; Hardware stack levels used:    1
 13879 ;; This function calls:
 13880 ;;		Nothing
 13881 ;; This function is called by:
 13882 ;;		_gotoXY
 13883 ;;		_LCDWriteCharacter
 13884 ;;		_LCDClear
 13885 ;;		_LCDInit
 13886 ;; This function uses a non-reentrant model
 13887 ;;
 13888                           
 13889                           
 13890                           ;psect for function _LCDWrite
 13891  1509                     _LCDWrite:	
 13892                           
 13893                           ;incstack = 0
 13894                           ; Regs used in _LCDWrite: [wreg+status,2+status,0]
 13895                           ;LCDWrite@data_or_command stored from wreg
 13896  1509  00F2               	movwf	LCDWrite@data_or_command
 13897                           
 13898                           ;lcd.c: 283: uint8_t i,d;
 13899                           ;lcd.c: 285: d=data;
 13900  150A  0870               	movf	LCDWrite@data,w
 13901  150B  00F1               	movwf	??_LCDWrite
 13902  150C  0871               	movf	??_LCDWrite,w
 13903  150D  00F3               	movwf	LCDWrite@d
 13904                           
 13905                           ;lcd.c: 287: if(data_or_command == 0)
 13906  150E  0872               	movf	LCDWrite@data_or_command,w
 13907  150F  1D03               	btfss	3,2
 13908  1510  2D14               	goto	l325
 13909                           
 13910                           ;lcd.c: 288: {
 13911                           ;lcd.c: 289: LATAbits.LATA2 = 0;
 13912  1511  0020               	movlb	0	; select bank0
 13913  1512  1116               	bcf	22,2	;volatile
 13914                           
 13915                           ;lcd.c: 290: }
 13916  1513  2D16               	goto	l326
 13917  1514                     l325:	
 13918                           
 13919                           ;lcd.c: 291: else
 13920                           ;lcd.c: 292: {
 13921                           ;lcd.c: 293: LATAbits.LATA2 = 1;
 13922  1514  0020               	movlb	0	; select bank0
 13923  1515  1516               	bsf	22,2	;volatile
 13924  1516                     l326:	
 13925                           
 13926                           ;lcd.c: 294: }
 13927                           ;lcd.c: 296: LATAbits.LATA1 = 0;
 13928  1516  1096               	bcf	22,1	;volatile
 13929                           
 13930                           ;lcd.c: 298: for(i=0;i<8;i++)
 13931  1517  01F4               	clrf	LCDWrite@i
 13932  1518  3008               	movlw	8
 13933  1519  0274               	subwf	LCDWrite@i,w
 13934  151A  1803               	btfsc	3,0
 13935  151B  2D2C               	goto	l328
 13936  151C                     l327:	
 13937                           
 13938                           ;lcd.c: 299: {
 13939                           ;lcd.c: 300: LATAbits.LATA3 = 0;
 13940  151C  1196               	bcf	22,3	;volatile
 13941                           
 13942                           ;lcd.c: 302: if(d&0x80)
 13943  151D  1FF3               	btfss	LCDWrite@d,7
 13944  151E  2D20               	goto	l329
 13945                           
 13946                           ;lcd.c: 303: {
 13947                           ;lcd.c: 304: LATAbits.LATA3 = 1;
 13948  151F  1596               	bsf	22,3	;volatile
 13949  1520                     l329:	
 13950                           
 13951                           ;lcd.c: 305: }
 13952                           ;lcd.c: 307: LATAbits.LATA4 = 1;
 13953  1520  1616               	bsf	22,4	;volatile
 13954                           
 13955                           ;lcd.c: 309: d<<=1;
 13956  1521  1003               	clrc
 13957  1522  0DF3               	rlf	LCDWrite@d,f
 13958                           
 13959                           ;lcd.c: 311: LATAbits.LATA4=0;
 13960  1523  1216               	bcf	22,4	;volatile
 13961  1524  3001               	movlw	1
 13962  1525  00F1               	movwf	??_LCDWrite
 13963  1526  0871               	movf	??_LCDWrite,w
 13964  1527  07F4               	addwf	LCDWrite@i,f
 13965  1528  3008               	movlw	8
 13966  1529  0274               	subwf	LCDWrite@i,w
 13967  152A  1C03               	skipc
 13968  152B  2D1C               	goto	l327
 13969  152C                     l328:	
 13970                           
 13971                           ;lcd.c: 312: }
 13972                           ;lcd.c: 314: LATAbits.LATA1 = 1;
 13973  152C  1496               	bsf	22,1	;volatile
 13974  152D  0008               	return
 13975  152E                     __end_of_LCDWrite:	
 13976  007E                     btemp	set	126	;btemp
 13977  007E                     wtemp0	set	126


Data Sizes:
    Strings     14
    Constant    330
    Data        18
    BSS         82
    Persistent  11
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     76      79
    BANK1            80     36      80
    BANK2            80      0      64
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           16      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 27
		 -> log@coeff(CODE[27]), 

    LCDWriteString@characters	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_1(CODE[14]), 


Critical Paths under _main in COMMON

    _main->___awtoft
    _tempCalc->___awtoft
    _log->___awtoft
    ___ftmul->___awtoft
    ___ftadd->___awtoft
    _readButton->_ADCRead
    _readAnalog->___wmul
    _calculateCurrent1->___awtoft
    _calculateCurrent0->___awtoft
    ___fttol->___awtoft
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    _SYSTEM_Initialize->_LCDClear
    _LCDInit->_LCDWrite
    _LCDClear->_gotoXY
    _Battery_State_Machine->_LCDWriteString
    _gotoXY->_LCDWrite
    _LCDWriteCharacter->___wmul
    ___wmul->___awdiv

Critical Paths under _main in BANK0

    _main->_tempCalc
    _tempCalc->_log
    _log->_eval_poly
    _eval_poly->___ftadd
    ___ftmul->___ftdiv
    ___ftsub->___ftadd
    ___ftadd->___ftmul
    _readAnalog->___aldiv
    _calculateCurrent1->___fttol
    _calculateCurrent0->___fttol
    ___fttol->___ftdiv
    _LCDWriteInt->_LCDWriteCharacter
    _Battery_State_Machine->_LCDWriteString
    _LCDWriteString->_LCDWriteCharacter
    _LCDWriteCharacter->___wmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                40    40      0  100835
                                             72 BANK0      4     4      0
                                              0 BANK1     36    36      0
                            _ADCRead
              _Battery_State_Machine
                           _LCDClear
                            _LCDInit
                  _LCDWriteCharacter
                        _LCDWriteInt
                 _PWM1_LoadDutyValue
                 _PWM6_LoadDutyValue
                 _PWM7_LoadDutyValue
                  _SYSTEM_Initialize
                            ___awdiv
                           ___awtoft
                            ___ftdiv
                            ___ftmul
                            ___fttol
                             ___wmul
                  _calculateCurrent0
                  _calculateCurrent1
                         _cc_cv_mode
                             _gotoXY
                         _readAnalog
                         _readButton
                           _tempCalc
 ---------------------------------------------------------------------------------
 (1) _tempCalc                                            11     9      2   41247
                                             61 BANK0     11     9      2
                            _ADCRead (ARG)
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftsub
                            ___fttol
                                _log
 ---------------------------------------------------------------------------------
 (2) _log                                                  6     3      3   20996
                                             55 BANK0      6     3      3
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _frexp                                                6     2      4     452
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) _eval_poly                                           10     3      7    9270
                                             45 BANK0     10     3      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             16    10      6    3564
                                             16 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                           ___ftpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6     418
                                              0 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    4429
                                             45 BANK0      6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             13     7      6    4203
                                             32 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (1) _readButton                                           2     2      0      31
                                              4 COMMON     2     2      0
                            _ADCRead
 ---------------------------------------------------------------------------------
 (1) _readAnalog                                          24    22      2    2137
                                              6 BANK0     24    22      2
                            _ADCRead
                            ___aldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     575
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _ADCRead                                              4     1      3      31
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _cc_cv_mode                                           1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _calculateCurrent1                                    3     3      0    7619
                                             30 BANK0      3     3      0
                           ___awtoft
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (1) _calculateCurrent0                                    3     3      0    7619
                                             30 BANK0      3     3      0
                           ___awtoft
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     696
                                             16 BANK0     14    10      4
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    4194
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
                           ___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             6     3      3    2729
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    2068
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    2     2      0    4500
                                             11 COMMON     2     2      0
                     _ADC_Initialize
         _Init_Battery_State_Machine
                           _LCDClear
                            _LCDInit
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PWM_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      34
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCDInit                                              1     1      0    1012
                                              5 COMMON     1     1      0
                           _LCDWrite
 ---------------------------------------------------------------------------------
 (2) _LCDClear                                             3     3      0    3454
                                              8 COMMON     3     3      0
                           _LCDWrite
                             _gotoXY
 ---------------------------------------------------------------------------------
 (2) _Init_Battery_State_Machine                           1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM7_LoadDutyValue                                   4     2      2     127
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _PWM6_LoadDutyValue                                   4     2      2     127
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _PWM1_LoadDutyValue                                   4     2      2     127
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCDWriteInt                                         16    11      5    8975
                                              8 BANK0     16    11      5
                  _LCDWriteCharacter
                            ___awdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     362
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     973
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _Battery_State_Machine                                2     2      0    4731
                                             10 BANK0      2     2      0
                     _LCDWriteString
                             _gotoXY
 ---------------------------------------------------------------------------------
 (1) _gotoXY                                               3     2      1    2374
                                              5 COMMON     3     2      1
                           _LCDWrite
 ---------------------------------------------------------------------------------
 (2) _LCDWriteString                                       3     1      2    2357
                                             13 COMMON     1     1      0
                                              8 BANK0      2     0      2
                  _LCDWriteCharacter
 ---------------------------------------------------------------------------------
 (2) _LCDWriteCharacter                                    6     6      0    2227
                                              2 BANK0      6     6      0
                           _LCDWrite
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    1054
                                              9 COMMON     4     0      4
                                              0 BANK0      2     2      0
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCDWrite                                             5     4      1    1012
                                              0 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCRead
   _Battery_State_Machine
     _LCDWriteString
       _LCDWriteCharacter
         _LCDWrite
         ___wmul
           ___awdiv (ARG)
     _gotoXY
       _LCDWrite
   _LCDClear
     _LCDWrite
     _gotoXY
       _LCDWrite
   _LCDInit
     _LCDWrite
   _LCDWriteCharacter
     _LCDWrite
     ___wmul
       ___awdiv (ARG)
   _LCDWriteInt
     _LCDWriteCharacter
       _LCDWrite
       ___wmul
         ___awdiv (ARG)
     ___awdiv
     ___lwmod
   _PWM1_LoadDutyValue
   _PWM6_LoadDutyValue
   _PWM7_LoadDutyValue
   _SYSTEM_Initialize
     _ADC_Initialize
     _Init_Battery_State_Machine
     _LCDClear
       _LCDWrite
       _gotoXY
         _LCDWrite
     _LCDInit
       _LCDWrite
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM_Initialize
     _TMR2_Initialize
     _TMR4_Initialize
   ___awdiv
   ___awtoft
     ___ftpack
   ___ftdiv
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)
     ___ftpack (ARG)
   ___ftmul
     ___awtoft (ARG)
       ___ftpack
     ___ftdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftpack (ARG)
     _frexp (ARG)
   ___fttol
     ___awtoft (ARG)
       ___ftpack
     ___ftdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
   ___wmul
     ___awdiv (ARG)
   _calculateCurrent0
     ___awtoft
       ___ftpack
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
   _calculateCurrent1
     ___awtoft
       ___ftpack
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
   _cc_cv_mode
   _gotoXY
     _LCDWrite
   _readAnalog
     _ADCRead
     ___aldiv
     ___wmul
       ___awdiv (ARG)
   _readButton
     _ADCRead
   _tempCalc
     _ADCRead (ARG)
     ___awtoft (ARG)
       ___ftpack
     ___ftadd (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
       _frexp (ARG)
     ___ftdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftsub (ARG)
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
         _frexp (ARG)
     ___fttol (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
     _log (ARG)
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
         _frexp (ARG)
       ___ftge
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       _eval_poly
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
           _frexp (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___wmul
           ___awdiv (ARG)
       _frexp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4C      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     24      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      40       9       80.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      ED      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              10      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      ED      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed Jul 04 23:51:48 2018

                                  _j 006C               LCDWriteInt@fieldLength 002A  
            __size_of_PWM_Initialize 001F                          __CFG_CP$OFF 0000  
                                 l64 02F2                         ___awdiv@sign 0076  
                ___wmul@multiplicand 007B          __size_of_PWM6_LoadDutyValue 0016  
                       ___ftadd@exp1 004C                         ___ftadd@exp2 004B  
                        __CFG_LVP$ON 0000                         ___ftadd@sign 004A  
                                l241 17D9                                  l219 0BD0  
                                l325 1514                                  l237 17BA  
                                l165 1405                                  l326 1516  
                                l327 151C                                  l328 152C  
                                l168 140C                                  l329 1520  
                                l621 0A30                        LCDClear@index 0079  
                                l566 1479                                  l734 0A00  
                                l735 0A08                                  l727 09ED  
                                l818 0B90                                  l758 0FA9  
                                _GIE 005F                                  _RB2 006A  
                       __CFG_CPD$OFF 0000                                  _log 0CED  
                    __end_of_ADCRead 1413                      _TMR2_Initialize 13BF  
                       __CFG_BORV$LO 0000                                  wreg 0009  
                    __end_of_LCDInit 15FA                         ?_LCDWriteInt 0028  
                       __CFG_ZCD$OFF 0000                         ___ftdiv@cntr 002A  
                       ___ftdiv@sign 002F                                 l4030 0BD4  
                               l4102 0EC0                                 l4032 0BDF  
                               l4104 0EE7                                 l4120 17C0  
                               l4050 0C23                                 l4042 0C09  
                               l4210 0388                                 l4108 0EF5  
                               l4124 17C5                                 l3340 0F39  
                               l3412 0DCA                                 l4204 036B  
                               l3318 1472                                 l4046 0C16  
                               l3270 09CA                                 l3406 0DB4  
                               l3280 09F2                                 l3272 09D4  
                               l3336 0F32                                 l3440 0E29  
                               l3424 0E05                                 l3504 1647  
                               l4240 03E4                                 l4216 0391  
                               l3602 0004                                 l4090 0EAA  
                               l4074 0E72                                 l3282 09FA  
                               l3274 09D9                                 l3266 09C3  
                               l3370 0F88                                 l3346 0F48  
                               l3522 09B4                                 l4234 03CD  
                               l4092 0EAE                                 l4084 0E79  
                               l3532 153B                                 l3364 0F75  
                               l3436 0E21                                 l3428 0E0D  
                               l4260 0439                                 l4244 03EB  
                               l4180 02FA                                 l4172 02D3  
                               l4094 0EB6                                 l4086 0EA6  
                               l3382 0FBB                                 l3366 0F7F  
                               l3358 0F62                                 l4166 02CD  
                               l4158 02B9                                 l4096 0EBC  
                               l3472 14F3                                 l3376 0F9B  
                               l3368 0F84                                 l3480 1610  
                               l3704 0D1F                                 l4264 0447  
                               l4256 0431                                 l3538 154F  
                               l3810 0C71                                 l3386 0FCD  
                               l3378 0FA5                                 l4274 046A  
                               l4258 0436                                 l3900 0941  
                               l3804 0C5B                                 l3732 0A51  
                               l3724 0A41                                 l3396 0FE8  
                               l3484 1626                                 l3750 0A98  
                               l3742 0A7F                                 l3734 0A5F  
                               l4390 07BF                                 l3904 094D  
                               l3832 0CCB                                 l3824 0CB2  
                               l3762 1704                                 l3746 0A8A  
                               l3780 1723                                 l3908 0956  
                               l3932 025B                                 l3844 1495  
                               l3790 173E                                 l3854 0B3C  
                               l3942 1689                                 l3768 170F  
                               l3880 0B87                                 l3872 0B6C  
                               l3794 1746                                 l3786 1735  
                               l3778 1717                                 l3882 0B93  
                               l3874 0B7A                                 l3970 0ADF  
                               l3698 0D0C                                 l3948 16CE  
                               l3964 0AC5                                 ?_log 0057  
                               l3886 0BA1                                 l3990 0B08  
                               l3974 0AF1                                 l3984 0AFF  
                               l3976 0AF3                                 l3898 0935  
                               l3996 0B20                                 l3998 0B21  
                               STR_1 181B                                 _LATA 0016  
                               _LATB 0017                                 _LATC 0018  
                               u4105 0E30                                 u4025 0DD6  
                               _T2PR 028D                                 u4035 0DE6  
                               u5030 0E5C                                 u4230 15BD  
                               u4055 0E0E                                 u4305 0A54  
                               u4065 0E14                                 _T4PR 0293  
                               u4405 171A                                 u5125 17AE  
                               u4325 0A60                                 u3615 09E8  
                               u4335 0A74                                 u4095 0E2A  
                               u4425 1724                                 u4185 1539  
                               u4505 0C93                                 u4345 0A80  
                               u4435 172E                                 u4195 154D  
                               u3635 09F5                                 u4515 0CB3  
                               u4445 1736                                 u4525 0CC2  
                               u4605 0B6D                                 u5095 0ED5  
                               u4535 0CCC                                 u5175 17E3  
                               u5335 03C6                                 u3745 147A  
                               u4705 094E                                 u3755 147F  
                               u3675 0A0F                                 u3595 09CF  
                               u4635 0B88                                 u5355 03DD  
                               u4805 16C8                                 u4725 014E  
                               u3925 0F89                                 u5437 02C1  
                               u4815 1422                                 u4495 0C83  
                               u4575 0B43                                 u4735 01A8  
                               u5447 0B12                                 u5295 0379  
                               u4825 1438                                 u5457 1571  
                               u4745 01E6                                 u3865 0F63  
                               u5385 040F                                 u4675 0938  
                               u4835 144E                                 u5467 1580  
                               u4755 0235                                 u3955 0F9C  
                               u5395 042A                                 u5477 0C3C  
                               u4845 0AB3                                 u4695 0947  
                               u4855 0ABF                                 u3895 0F76  
                               u4945 0BBA                                 u4785 0267  
                               u4865 0ACF                                 u4955 0BC8  
                               u4795 1683                                 u4875 0ADB  
                               u4885 0AE9                                 u4985 0BF4  
                tempCalc@analogValue 005D                                 _WPUA 0F39  
                               _WPUB 0F44                                 _WPUC 0F4F  
                               _WPUE 0F65                                 _Imin 00E3  
                               _Iref 00E9                                 _Iout 00DD  
                       __CFG_WRT$OFF 0000                        __CFG_FCMEN$ON 0000  
                               _Vref 00EB                                 _main 0284  
                       ___ftpack@arg 0070                         ___ftpack@exp 0073  
                      _state_counter 00E5                                 fsr0h 0005  
                               fsr1h 0007                                 indf0 0000  
                               fsr0l 0004                                 indf1 0001  
                               fsr1l 0006                                 btemp 007E  
                               log@x 0057                        __CFG_BOREN$ON 0000  
                               start 0002                        __CFG_CSWEN$ON 0000  
                      __CFG_MCLRE$ON 0000                         ___ftmul@cntr 003E  
                       ___ftmul@sign 003F                     __end_of_LCDClear 1554  
                       ___fttol@exp1 003D                                ??_log 005A  
                       ___fttol@lval 0039                         main@fastLoop 00B2  
__size_of_Init_Battery_State_Machine 001A       __size_of_OSCILLATOR_Initialize 0009  
                   __end_of_LCDWrite 152E        __end_of_OSCILLATOR_Initialize 13A7  
                    __end_of___aldiv 0AA1                                _ADACQ 009D  
                              _ADACT 0099                                _ADCAP 009B  
                              ?_main 0070                                _ADCLK 0098  
                              _ADPCH 009E                                _ADREF 009A  
                    __end_of___awdiv 174B                                _ADPRE 009C  
                    __end_of___ftadd 1000                        __CFG_WDTE$OFF 0000  
                              _ADRPT 010D                      __end_of___ftdiv 0CED  
                    __end_of___ftmul 0E51                      ___awdiv@divisor 0070  
                    __end_of___ftsub 14AB                      __end_of___fttol 0BAA  
                              _T2CON 028E                                _LATA5 00B5  
                              _T4CON 0294                                _T2HLT 028F  
                              _T4HLT 0295                                _T2TMR 028C  
                              _T2RST 0291                      __end_of___lwmod 095B  
                              _T4TMR 0292                                _T4RST 0297  
                    ___awdiv@counter 0075                                _OSCEN 0891  
                              _TRISA 0011                                _TRISB 0012  
                              _TRISC 0013                      _TMR4_Initialize 13CD  
             ?_Battery_State_Machine 0070                                _cc_cv 00E1  
                      ___awtoft@sign 007D                                _frexp 1635  
                              _fonts 0800                                _errno 00D9  
                      ___ftpack@sign 0074                                main@j 00C1  
                       main@slowLoop 00B3                                status 0003  
                              wtemp0 007E                      __initialization 07C2  
                        log@exponent 005B                         __end_of_main 07C2  
                  readAnalog@channel 0026              __end_of_TMR2_Initialize 13CD  
                          ??_ADCRead 0073                               ??_main 0068  
                      ___fttol@sign1 0038                            ??_LCDInit 0075  
            LCDWrite@data_or_command 0072                               _ADCON0 0093  
                             _ADCON1 0094                               _ADCON2 0095  
                             _ADCON3 0096                               ?_frexp 0070  
                             _ADLTHH 010F                               _ADLTHL 010E  
                             _ADRESH 008D                               _ADRESL 008C  
                             _CCPR1H 030D                               _CCPR1L 030C  
                             _ADSTAT 0097                               _ADUTHH 0111  
                   ___awdiv@dividend 0072                               _ADUTHL 0110  
                   __end_of___awtoft 1509                               _ANSELA 0F38  
                             _ANSELB 0F43                               _ANSELC 0F4E  
                   __end_of___ftpack 0A1F                               _RB0PPS 0F18  
                             _RA6PPS 0F16                               _RA7PPS 0F17  
                     __CFG_WDTCCS$SC 0000                               _FVRCON 090C  
                             _OSCFRQ 0893                       __CFG_PWRTE$OFF 0000  
                             _Imode0 00EF                               _Imode1 00EE  
                     _LCDWriteString 0004                         _CCPTMRS0bits 021E  
                       _CCPTMRS1bits 021F                               ___ftge 15FA  
                          ??___aldiv 0078                               ___wmul 146F  
                          ??___awdiv 0074                            ??___ftadd 0046  
                     __CFG_STVREN$ON 0000                       _PWM_Initialize 14CA  
                          ??___ftdiv 0026                            ??___ftmul 0036  
                          ??___ftsub 007E                            ??___fttol 0034  
                          ??___lwmod 0074                               _gotoXY 13EB  
                             _button 006E              __end_of_TMR4_Initialize 13DB  
                   ___awdiv@quotient 0077                               _totals 0120  
              ___ftmul@f3_as_product 003B                     __end_of_tempCalc 0138  
                       LCDWrite@data 0070                         LCDWriteInt@i 0037  
                       LCDWriteInt@j 0036             readAnalog@analog_channel 003A  
                          ?_LCDClear 0070                    _SYSTEM_Initialize 1554  
               __size_of_LCDWriteInt 00B9                     __end_oflog@coeff 181B  
            __end_of__initialization 07FD                           ___ftadd@f1 0040  
                         ___ftadd@f2 0043                           ___ftge@ff1 0070  
                         ___ftge@ff2 0073                            ?_LCDWrite 0070  
                 ?_SYSTEM_Initialize 0070               __end_of_LCDWriteString 001B  
                       eval_poly@res 0054                           ___ftdiv@f1 0023  
                         ___ftdiv@f2 0020                           ___ftdiv@f3 002B  
                         ___awtoft@c 0078                           ___ftmul@f1 0030  
                         ___ftmul@f2 0033               __end_of_PWM_Initialize 14E9  
                         ___ftsub@f1 0050                           ___ftsub@f2 004D  
                         ___fttol@f1 0030                       __pcstackCOMMON 0070  
                       __pidataBANK1 139C                         __pidataBANK2 13DB  
                ??_SYSTEM_Initialize 007B                        __end_of_frexp 1670  
                      __end_of_fonts 092F                            LCDWrite@d 0073  
                          LCDWrite@i 0074                   _PWM1_LoadDutyValue 1413  
                   ?_TMR2_Initialize 0070                           _cc_cv_mode 17A3  
        __size_of_PWM7_LoadDutyValue 0016                       main@efficiency 00B5  
                ?_PWM1_LoadDutyValue 0070                    LCDWriteInt@F14388 00D4  
                  _calculateCurrent0 1670                    _calculateCurrent1 16B5  
                            ??_frexp 0074            __end_of_SYSTEM_Initialize 1588  
                         __pbssBANK0 006C                           __pbssBANK1 00C4  
                         __pbssBANK2 0120                   ?_calculateCurrent0 0070  
                 ?_calculateCurrent1 0070                   __size_of_eval_poly 0060  
                         ??_LCDClear 0078                       main@faultCount 00A7  
                         ??_LCDWrite 0071                      ?_LCDWriteString 0028  
               ??_PWM1_LoadDutyValue 0072                  ??_calculateCurrent0 003E  
                ??_calculateCurrent1 003E                      ?_PWM_Initialize 0070  
                         __pmaintext 0284                              ?___ftge 0070  
                            ?___wmul 0079                      __CFG_PPS1WAY$ON 0000  
         __end_of_PWM6_LoadDutyValue 143F                              ?_gotoXY 0075  
                            _ADCRead 13FE                     ?_TMR4_Initialize 0070  
                          ?___awtoft 0078                            ?___ftpack 0070  
                            _ADSTPTH 0113                              _ADSTPTL 0112  
           __CFG_SCANE$not_available 0000                  __CFG_RSTOSC$HFINT32 0000  
            __size_of_ADC_Initialize 001F              ??_Battery_State_Machine 002A  
                            _LCDInit 15BF            __end_of_calculateCurrent0 16B5  
          __end_of_calculateCurrent1 16FA                              _OSCCON1 088D  
                            _OSCCON3 088F                              _OSCTUNE 0892  
                            _PWM6DCH 038D                              _PWM6DCL 038C  
                            _PWM7DCH 0391                              _PWM7DCL 0390  
                            _PWM6CON 038E                              _PWM7CON 0392  
                            _PPSLOCK 0E8F                       main@menuButton 00BA  
                     main@dutyCycle1 00BD                       main@dutyCycle6 00C2  
                     main@dutyCycle7 00BB                           _lastButton 006D  
                          ?_tempCalc 005D                           _readAnalog 0138  
                            ___aldiv 0A1F                      __size_of___ftge 003B  
                            ___awdiv 16FA                              ___ftadd 0F0A  
                         _readButton 0AA1                              ___ftdiv 0C44  
                    __size_of___wmul 001E                              ___ftmul 0D9D  
                            ___ftsub 148D                              ___fttol 0B23  
                 main@displayRefresh 00B4                              ___lwmod 092F  
                    __size_of_gotoXY 0013                           ??___awtoft 007B  
                         ??___ftpack 0075                    __end_of_eval_poly 09BB  
                            _analogs 0140                              __ptext1 001B  
                            __ptext2 0CED                              __ptext3 1635  
                            __ptext4 095B                              __ptext5 0D9D  
                            __ptext6 15FA                              __ptext7 148D  
                            __ptext8 0F0A                              __ptext9 0AA1  
                        ?_cc_cv_mode 0070                _OSCILLATOR_Initialize 139E  
                          _T2CONbits 028E                              _current 00C4  
                       __size_of_log 00B0                       ADCRead@channel 0073  
                   ___aldiv@dividend 0074                            _T4CONbits 0294  
           ??_PIN_MANAGER_Initialize 0070                              _samples 2330  
         __size_of_SYSTEM_Initialize 0034                              clrloop0 13A8  
                            _voltage 00CC         ??_Init_Battery_State_Machine 0070  
               end_of_initialization 07FD                LCDWriteCharacter@base 0026  
                            gotoXY@x 0077                              gotoXY@y 0075  
                            init_ram 13B3                              initloop 13B4  
                         ??_tempCalc 007E                     ___aldiv@quotient 0022  
                  _LCDWriteCharacter 174B                __CFG_WDTCPS$WDTCPS_31 0000  
                 ?_LCDWriteCharacter 0070           __size_of_calculateCurrent0 0045  
         __size_of_calculateCurrent1 0045                            _TRISAbits 0011  
                ??_LCDWriteCharacter 0022                     __CFG_FEXTOSC$OFF 0000  
       PWM1_LoadDutyValue@dutyCycle1 0070                          _CCP1CONbits 030E  
                        ___ftdiv@exp 002E                  __size_of_cc_cv_mode 005D  
                  __size_of_LCDClear 0026           LCDWriteCharacter@character 0025  
                  __size_of_LCDWrite 0025                          ___ftmul@exp 003A  
                        ?_readAnalog 0026            __end_of_LCDWriteCharacter 17A3  
                        ?_readButton 0070                       __end_of___ftge 1635  
                          _VHoldMode 00E2                       __end_of___wmul 148D  
                     _ADC_Initialize 14AB                       __end_of_gotoXY 13FE  
             ?_OSCILLATOR_Initialize 0070                            _IminCount 00E7  
                start_initialization 07C2                           eval_poly@d 0050  
                         eval_poly@n 0052                           eval_poly@x 004D  
                  main@faultNotReset 00A9      __size_of_PIN_MANAGER_Initialize 0037  
                        __end_of_log 0D9D                        ??_LCDWriteInt 002D  
                   ??_LCDWriteString 007D                           frexp@value 0070  
                   ??_PWM_Initialize 0070                      main@batteryTemp 00A3  
                   __CFG_LPBOREN$OFF 0000                             ??___ftge 0076  
                  tempCalc@steinhart 0065                             ??___wmul 007D  
             __end_of_ADC_Initialize 14CA                          __pdataBANK1 00EE  
                        __pdataBANK2 0150                        _tempCalc$1299 0062  
         __end_of_PWM7_LoadDutyValue 1455                             ??_gotoXY 0076  
                           ?_ADCRead 0070         PWM7_LoadDutyValue@dutyCycle7 0070  
                  __size_of___awtoft 0020                             ?_LCDInit 0070  
                  __size_of___ftpack 0064                          __pbssBIGRAM 2330  
     __size_of_Battery_State_Machine 009A        __end_of_Battery_State_Machine 0C44  
                          ___latbits 0002                        __pcstackBANK0 0020  
                      __pcstackBANK1 00A0                   _PWM6_LoadDutyValue 1429  
           __size_of_TMR2_Initialize 000E                        _battery_state 00ED  
 __end_of_Init_Battery_State_Machine 146F           _Init_Battery_State_Machine 1455  
                __size_of_readAnalog 014C                  __size_of_readButton 0082  
                ?_PWM6_LoadDutyValue 0070                  __end_of_LCDWriteInt 0F0A  
                          __pnvBANK1 00E3          __size_of_PWM1_LoadDutyValue 0016  
                          _main$1302 00A0                            _main$1295 00AB  
                          _main$1297 00AE                            _main$1298 00B0  
             _PIN_MANAGER_Initialize 1588           __size_of_LCDWriteCharacter 0058  
                           ?___aldiv 0070                    __size_of_tempCalc 011D  
                           ?___awdiv 0070                             ?___ftadd 0040  
                           ?___ftdiv 0020                             ?___ftmul 0030  
                           ?___ftsub 004D                             ?___fttol 0030  
                   LCDWriteInt@value 0028                             ?___lwmod 0070  
                    ?_ADC_Initialize 0070                 ??_PWM6_LoadDutyValue 0072  
                       ??_cc_cv_mode 0070                            _eval_poly 095B  
           __size_of_TMR4_Initialize 000E                       __size_of_frexp 003B  
                           _T2CLKCON 0290                             _T4CLKCON 0296  
                           _LCDClear 152E                      ___aldiv@divisor 0070  
                    ___aldiv@counter 0020                       ___wmul@product 0020  
                           _LATAbits 0016                             _LCDWrite 1509  
                          clear_ram0 13A7                             _PIE0bits 0716  
                 __end_of_cc_cv_mode 1800                             _PIR4bits 0710  
                          main@MPPT0 00BF                            main@MPPT1 00A5  
                   __size_of_ADCRead 0015                           _ADCON0bits 0093  
                  ___wmul@multiplier 0079                           ?_eval_poly 004D  
                   __size_of_LCDInit 003B                          _LCDWriteInt 0E51  
                  ??_TMR2_Initialize 0070                      readAnalog@value 003C  
                          frexp@eptr 0073                         ??_readAnalog 0028  
                       ??_readButton 0074              ??_OSCILLATOR_Initialize 0070  
               LCDWriteInt@numPlaces 002B                     __size_of___aldiv 0082  
                   __size_of___awdiv 0051                     __size_of___ftadd 00F6  
                   __size_of___ftdiv 00A9                     __size_of___ftmul 00B4  
                   __size_of___ftsub 001E                     __size_of___fttol 0087  
                   __size_of___lwmod 002C                          _readButtons 00DB  
                           ___awtoft 14E9                             ___ftpack 09BB  
                           _channels 0150                             __ptext10 0138  
                           __ptext11 0A1F                             __ptext20 1554  
                           __ptext12 13FE                             __ptext21 13CD  
                           __ptext13 17A3                             __ptext30 143F  
                           __ptext22 13BF                             __ptext14 16B5  
                           __ptext31 1429                             __ptext23 14CA  
                           __ptext15 1670                             __ptext40 146F  
                           __ptext32 1413                             __ptext24 1588  
                           __ptext16 0B23                             __ptext41 1509  
                           __ptext33 0E51                             __ptext25 139E  
                           __ptext17 0C44                             __ptext34 092F  
                           __ptext26 15BF                             __ptext18 14E9  
                           __ptext35 16FA                             __ptext27 152E  
                           __ptext19 09BB                             __ptext36 0BAA  
                           __ptext28 1455                             __ptext37 13EB  
                           __ptext29 14AB                             __ptext38 0004  
                           __ptext39 174B                      LCDWriteInt@sign 002C  
                 __end_of_readAnalog 0284                            tempCalc@R 005F  
                 __end_of_readButton 0B23                    ??_TMR4_Initialize 0070  
                      __size_of_main 053E                 __CFG_WDTCWS$WDTCWS_7 0000  
                           _tempCalc 001B          PIN_MANAGER_Initialize@state 0070  
                           log@coeff 1800                          ??_eval_poly 007E  
                        _sampleIndex 00DF                   _PWM7_LoadDutyValue 143F  
        ?_Init_Battery_State_Machine 0070                     ___lwmod@dividend 0072  
                     LCDWriteInt@str 0031              ?_PIN_MANAGER_Initialize 0070  
                ?_PWM7_LoadDutyValue 0070                    __CFG_CLKOUTEN$OFF 0000  
                        _PPSLOCKbits 0E8F                     ??_ADC_Initialize 0070  
       PWM6_LoadDutyValue@dutyCycle6 0070                        __pstringtext1 0800  
                      __pstringtext2 1800                        __pstringtext3 181B  
                      __pstringtext4 0000                 ??_PWM7_LoadDutyValue 0072  
                    ___lwmod@divisor 0070                      ___lwmod@counter 0075  
           LCDWriteString@characters 0028                         ___aldiv@sign 0021  
              _Battery_State_Machine 0BAA       __end_of_PIN_MANAGER_Initialize 15BF  
         __end_of_PWM1_LoadDutyValue 1429                        main@IOutTotal 00B8  
            __size_of_LCDWriteString 0017  
