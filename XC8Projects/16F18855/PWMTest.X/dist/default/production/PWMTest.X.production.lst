

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Tue Sep 05 22:04:02 2017

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	stringtext,global,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2
    41                           	psect	text28,local,class=CODE,merge=1,delta=2
    42                           	psect	text29,local,class=CODE,merge=1,delta=2
    43                           	psect	text30,local,class=CODE,merge=1,delta=2
    44                           	psect	text31,local,class=CODE,merge=1,delta=2
    45                           	psect	text32,local,class=CODE,merge=1,delta=2
    46                           	psect	text33,local,class=CODE,merge=1,delta=2
    47                           	dabs	1,0x620,48
    48                           	dabs	1,0x5BC,52
    49                           	dabs	1,0x238C,0,_samples
    50                           	dabs	1,0x7E,2
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0016                     	;# 
    71  0017                     	;# 
    72  0018                     	;# 
    73  001C                     	;# 
    74  001C                     	;# 
    75  001D                     	;# 
    76  001D                     	;# 
    77  001E                     	;# 
    78  001F                     	;# 
    79  008C                     	;# 
    80  008C                     	;# 
    81  008D                     	;# 
    82  008E                     	;# 
    83  008E                     	;# 
    84  008F                     	;# 
    85  0090                     	;# 
    86  0090                     	;# 
    87  0091                     	;# 
    88  0093                     	;# 
    89  0094                     	;# 
    90  0095                     	;# 
    91  0096                     	;# 
    92  0097                     	;# 
    93  0098                     	;# 
    94  0099                     	;# 
    95  009A                     	;# 
    96  009B                     	;# 
    97  009C                     	;# 
    98  009D                     	;# 
    99  009E                     	;# 
   100  010C                     	;# 
   101  010D                     	;# 
   102  010E                     	;# 
   103  010E                     	;# 
   104  010F                     	;# 
   105  0110                     	;# 
   106  0110                     	;# 
   107  0111                     	;# 
   108  0112                     	;# 
   109  0112                     	;# 
   110  0113                     	;# 
   111  0114                     	;# 
   112  0114                     	;# 
   113  0115                     	;# 
   114  0116                     	;# 
   115  0116                     	;# 
   116  0117                     	;# 
   117  0119                     	;# 
   118  0119                     	;# 
   119  0119                     	;# 
   120  011A                     	;# 
   121  011A                     	;# 
   122  011A                     	;# 
   123  011B                     	;# 
   124  011B                     	;# 
   125  011B                     	;# 
   126  011B                     	;# 
   127  011B                     	;# 
   128  011C                     	;# 
   129  011C                     	;# 
   130  011C                     	;# 
   131  011D                     	;# 
   132  011D                     	;# 
   133  011D                     	;# 
   134  011E                     	;# 
   135  011E                     	;# 
   136  011E                     	;# 
   137  011F                     	;# 
   138  011F                     	;# 
   139  011F                     	;# 
   140  011F                     	;# 
   141  011F                     	;# 
   142  018C                     	;# 
   143  018D                     	;# 
   144  018E                     	;# 
   145  018F                     	;# 
   146  0190                     	;# 
   147  0191                     	;# 
   148  0192                     	;# 
   149  0196                     	;# 
   150  0197                     	;# 
   151  0198                     	;# 
   152  0199                     	;# 
   153  019A                     	;# 
   154  019B                     	;# 
   155  019C                     	;# 
   156  020C                     	;# 
   157  020D                     	;# 
   158  020E                     	;# 
   159  020F                     	;# 
   160  020F                     	;# 
   161  0210                     	;# 
   162  0210                     	;# 
   163  0211                     	;# 
   164  0211                     	;# 
   165  0212                     	;# 
   166  0213                     	;# 
   167  0214                     	;# 
   168  0215                     	;# 
   169  0215                     	;# 
   170  0216                     	;# 
   171  0216                     	;# 
   172  0217                     	;# 
   173  0217                     	;# 
   174  0218                     	;# 
   175  0219                     	;# 
   176  021A                     	;# 
   177  021B                     	;# 
   178  021B                     	;# 
   179  021C                     	;# 
   180  021C                     	;# 
   181  021D                     	;# 
   182  021D                     	;# 
   183  021E                     	;# 
   184  021F                     	;# 
   185  028C                     	;# 
   186  028C                     	;# 
   187  028D                     	;# 
   188  028D                     	;# 
   189  028E                     	;# 
   190  028F                     	;# 
   191  0290                     	;# 
   192  0290                     	;# 
   193  0291                     	;# 
   194  0292                     	;# 
   195  0292                     	;# 
   196  0293                     	;# 
   197  0293                     	;# 
   198  0294                     	;# 
   199  0295                     	;# 
   200  0296                     	;# 
   201  0296                     	;# 
   202  0297                     	;# 
   203  0298                     	;# 
   204  0298                     	;# 
   205  0299                     	;# 
   206  0299                     	;# 
   207  029A                     	;# 
   208  029B                     	;# 
   209  029C                     	;# 
   210  029C                     	;# 
   211  029D                     	;# 
   212  030C                     	;# 
   213  030C                     	;# 
   214  030D                     	;# 
   215  030E                     	;# 
   216  030F                     	;# 
   217  0310                     	;# 
   218  0310                     	;# 
   219  0311                     	;# 
   220  0312                     	;# 
   221  0313                     	;# 
   222  0314                     	;# 
   223  0314                     	;# 
   224  0315                     	;# 
   225  0316                     	;# 
   226  0317                     	;# 
   227  0318                     	;# 
   228  0318                     	;# 
   229  0319                     	;# 
   230  031A                     	;# 
   231  031B                     	;# 
   232  031C                     	;# 
   233  031C                     	;# 
   234  031D                     	;# 
   235  031E                     	;# 
   236  031F                     	;# 
   237  038C                     	;# 
   238  038D                     	;# 
   239  038E                     	;# 
   240  0390                     	;# 
   241  0391                     	;# 
   242  0392                     	;# 
   243  040C                     	;# 
   244  040D                     	;# 
   245  040E                     	;# 
   246  040F                     	;# 
   247  0410                     	;# 
   248  0411                     	;# 
   249  0416                     	;# 
   250  0416                     	;# 
   251  0417                     	;# 
   252  0418                     	;# 
   253  0418                     	;# 
   254  0419                     	;# 
   255  041A                     	;# 
   256  041A                     	;# 
   257  041B                     	;# 
   258  041C                     	;# 
   259  041C                     	;# 
   260  041D                     	;# 
   261  041E                     	;# 
   262  041F                     	;# 
   263  048C                     	;# 
   264  048C                     	;# 
   265  048D                     	;# 
   266  048E                     	;# 
   267  048F                     	;# 
   268  048F                     	;# 
   269  0490                     	;# 
   270  0491                     	;# 
   271  0492                     	;# 
   272  0492                     	;# 
   273  0493                     	;# 
   274  0494                     	;# 
   275  0495                     	;# 
   276  0495                     	;# 
   277  0496                     	;# 
   278  0497                     	;# 
   279  0498                     	;# 
   280  0499                     	;# 
   281  049A                     	;# 
   282  049B                     	;# 
   283  049C                     	;# 
   284  049D                     	;# 
   285  050C                     	;# 
   286  050C                     	;# 
   287  050D                     	;# 
   288  050E                     	;# 
   289  050F                     	;# 
   290  050F                     	;# 
   291  0510                     	;# 
   292  0511                     	;# 
   293  0512                     	;# 
   294  0512                     	;# 
   295  0513                     	;# 
   296  0514                     	;# 
   297  0515                     	;# 
   298  0515                     	;# 
   299  0516                     	;# 
   300  0517                     	;# 
   301  0518                     	;# 
   302  0519                     	;# 
   303  051A                     	;# 
   304  051B                     	;# 
   305  051C                     	;# 
   306  051D                     	;# 
   307  058C                     	;# 
   308  058C                     	;# 
   309  058D                     	;# 
   310  058E                     	;# 
   311  058F                     	;# 
   312  058F                     	;# 
   313  0590                     	;# 
   314  0591                     	;# 
   315  0592                     	;# 
   316  0593                     	;# 
   317  060C                     	;# 
   318  060D                     	;# 
   319  060E                     	;# 
   320  060F                     	;# 
   321  0610                     	;# 
   322  0611                     	;# 
   323  0612                     	;# 
   324  0613                     	;# 
   325  0614                     	;# 
   326  0616                     	;# 
   327  0617                     	;# 
   328  0618                     	;# 
   329  0619                     	;# 
   330  061A                     	;# 
   331  061B                     	;# 
   332  061C                     	;# 
   333  061D                     	;# 
   334  061E                     	;# 
   335  068C                     	;# 
   336  068D                     	;# 
   337  068E                     	;# 
   338  068F                     	;# 
   339  0690                     	;# 
   340  0691                     	;# 
   341  0692                     	;# 
   342  0693                     	;# 
   343  0694                     	;# 
   344  070C                     	;# 
   345  070D                     	;# 
   346  070E                     	;# 
   347  070F                     	;# 
   348  0710                     	;# 
   349  0711                     	;# 
   350  0712                     	;# 
   351  0713                     	;# 
   352  0714                     	;# 
   353  0716                     	;# 
   354  0717                     	;# 
   355  0718                     	;# 
   356  0719                     	;# 
   357  071A                     	;# 
   358  071B                     	;# 
   359  071C                     	;# 
   360  071D                     	;# 
   361  071E                     	;# 
   362  0796                     	;# 
   363  0797                     	;# 
   364  0798                     	;# 
   365  0799                     	;# 
   366  079A                     	;# 
   367  079B                     	;# 
   368  080C                     	;# 
   369  080D                     	;# 
   370  080E                     	;# 
   371  080F                     	;# 
   372  0810                     	;# 
   373  0811                     	;# 
   374  0812                     	;# 
   375  0813                     	;# 
   376  0814                     	;# 
   377  081A                     	;# 
   378  081B                     	;# 
   379  081C                     	;# 
   380  081D                     	;# 
   381  081E                     	;# 
   382  081F                     	;# 
   383  088C                     	;# 
   384  088D                     	;# 
   385  088E                     	;# 
   386  088F                     	;# 
   387  0890                     	;# 
   388  0891                     	;# 
   389  0892                     	;# 
   390  0893                     	;# 
   391  0895                     	;# 
   392  0896                     	;# 
   393  0897                     	;# 
   394  0898                     	;# 
   395  0899                     	;# 
   396  089A                     	;# 
   397  089B                     	;# 
   398  090C                     	;# 
   399  090E                     	;# 
   400  090F                     	;# 
   401  091F                     	;# 
   402  091F                     	;# 
   403  098F                     	;# 
   404  098F                     	;# 
   405  0990                     	;# 
   406  0991                     	;# 
   407  0992                     	;# 
   408  0993                     	;# 
   409  0994                     	;# 
   410  0995                     	;# 
   411  0996                     	;# 
   412  0997                     	;# 
   413  0E0F                     	;# 
   414  0E10                     	;# 
   415  0E11                     	;# 
   416  0E12                     	;# 
   417  0E13                     	;# 
   418  0E14                     	;# 
   419  0E15                     	;# 
   420  0E16                     	;# 
   421  0E17                     	;# 
   422  0E18                     	;# 
   423  0E19                     	;# 
   424  0E1A                     	;# 
   425  0E1B                     	;# 
   426  0E1C                     	;# 
   427  0E1D                     	;# 
   428  0E1E                     	;# 
   429  0E1F                     	;# 
   430  0E20                     	;# 
   431  0E21                     	;# 
   432  0E22                     	;# 
   433  0E23                     	;# 
   434  0E24                     	;# 
   435  0E25                     	;# 
   436  0E26                     	;# 
   437  0E27                     	;# 
   438  0E28                     	;# 
   439  0E29                     	;# 
   440  0E2A                     	;# 
   441  0E2B                     	;# 
   442  0E2C                     	;# 
   443  0E2D                     	;# 
   444  0E2E                     	;# 
   445  0E2F                     	;# 
   446  0E30                     	;# 
   447  0E31                     	;# 
   448  0E32                     	;# 
   449  0E33                     	;# 
   450  0E34                     	;# 
   451  0E35                     	;# 
   452  0E36                     	;# 
   453  0E37                     	;# 
   454  0E8F                     	;# 
   455  0E90                     	;# 
   456  0E91                     	;# 
   457  0E92                     	;# 
   458  0E93                     	;# 
   459  0E94                     	;# 
   460  0E95                     	;# 
   461  0E96                     	;# 
   462  0E97                     	;# 
   463  0E9C                     	;# 
   464  0E9D                     	;# 
   465  0E9E                     	;# 
   466  0EA1                     	;# 
   467  0EA2                     	;# 
   468  0EA3                     	;# 
   469  0EA4                     	;# 
   470  0EA5                     	;# 
   471  0EA9                     	;# 
   472  0EAA                     	;# 
   473  0EAB                     	;# 
   474  0EAC                     	;# 
   475  0EB1                     	;# 
   476  0EB2                     	;# 
   477  0EB3                     	;# 
   478  0EB8                     	;# 
   479  0EB9                     	;# 
   480  0EBA                     	;# 
   481  0EBB                     	;# 
   482  0EBC                     	;# 
   483  0EBD                     	;# 
   484  0EBE                     	;# 
   485  0EC3                     	;# 
   486  0EC5                     	;# 
   487  0EC6                     	;# 
   488  0EC7                     	;# 
   489  0EC8                     	;# 
   490  0EC9                     	;# 
   491  0ECA                     	;# 
   492  0ECB                     	;# 
   493  0ECC                     	;# 
   494  0F10                     	;# 
   495  0F11                     	;# 
   496  0F12                     	;# 
   497  0F13                     	;# 
   498  0F14                     	;# 
   499  0F15                     	;# 
   500  0F16                     	;# 
   501  0F17                     	;# 
   502  0F18                     	;# 
   503  0F19                     	;# 
   504  0F1A                     	;# 
   505  0F1B                     	;# 
   506  0F1C                     	;# 
   507  0F1D                     	;# 
   508  0F1E                     	;# 
   509  0F1F                     	;# 
   510  0F20                     	;# 
   511  0F21                     	;# 
   512  0F22                     	;# 
   513  0F23                     	;# 
   514  0F24                     	;# 
   515  0F25                     	;# 
   516  0F26                     	;# 
   517  0F27                     	;# 
   518  0F38                     	;# 
   519  0F39                     	;# 
   520  0F3A                     	;# 
   521  0F3B                     	;# 
   522  0F3C                     	;# 
   523  0F3D                     	;# 
   524  0F3E                     	;# 
   525  0F3F                     	;# 
   526  0F40                     	;# 
   527  0F41                     	;# 
   528  0F43                     	;# 
   529  0F44                     	;# 
   530  0F45                     	;# 
   531  0F46                     	;# 
   532  0F47                     	;# 
   533  0F48                     	;# 
   534  0F49                     	;# 
   535  0F4A                     	;# 
   536  0F4B                     	;# 
   537  0F4C                     	;# 
   538  0F4E                     	;# 
   539  0F4F                     	;# 
   540  0F50                     	;# 
   541  0F51                     	;# 
   542  0F52                     	;# 
   543  0F53                     	;# 
   544  0F54                     	;# 
   545  0F55                     	;# 
   546  0F56                     	;# 
   547  0F57                     	;# 
   548  0F65                     	;# 
   549  0F68                     	;# 
   550  0F69                     	;# 
   551  0F6A                     	;# 
   552  0F6B                     	;# 
   553  0FE4                     	;# 
   554  0FE5                     	;# 
   555  0FE6                     	;# 
   556  0FE7                     	;# 
   557  0FE8                     	;# 
   558  0FE9                     	;# 
   559  0FEA                     	;# 
   560  0FEB                     	;# 
   561  0FED                     	;# 
   562  0FEE                     	;# 
   563  0FEF                     	;# 
   564  0000                     	;# 
   565  0001                     	;# 
   566  0002                     	;# 
   567  0003                     	;# 
   568  0004                     	;# 
   569  0005                     	;# 
   570  0006                     	;# 
   571  0007                     	;# 
   572  0008                     	;# 
   573  0009                     	;# 
   574  000A                     	;# 
   575  000B                     	;# 
   576  000C                     	;# 
   577  000D                     	;# 
   578  000E                     	;# 
   579  0010                     	;# 
   580  0011                     	;# 
   581  0012                     	;# 
   582  0013                     	;# 
   583  0016                     	;# 
   584  0017                     	;# 
   585  0018                     	;# 
   586  001C                     	;# 
   587  001C                     	;# 
   588  001D                     	;# 
   589  001D                     	;# 
   590  001E                     	;# 
   591  001F                     	;# 
   592  008C                     	;# 
   593  008C                     	;# 
   594  008D                     	;# 
   595  008E                     	;# 
   596  008E                     	;# 
   597  008F                     	;# 
   598  0090                     	;# 
   599  0090                     	;# 
   600  0091                     	;# 
   601  0093                     	;# 
   602  0094                     	;# 
   603  0095                     	;# 
   604  0096                     	;# 
   605  0097                     	;# 
   606  0098                     	;# 
   607  0099                     	;# 
   608  009A                     	;# 
   609  009B                     	;# 
   610  009C                     	;# 
   611  009D                     	;# 
   612  009E                     	;# 
   613  010C                     	;# 
   614  010D                     	;# 
   615  010E                     	;# 
   616  010E                     	;# 
   617  010F                     	;# 
   618  0110                     	;# 
   619  0110                     	;# 
   620  0111                     	;# 
   621  0112                     	;# 
   622  0112                     	;# 
   623  0113                     	;# 
   624  0114                     	;# 
   625  0114                     	;# 
   626  0115                     	;# 
   627  0116                     	;# 
   628  0116                     	;# 
   629  0117                     	;# 
   630  0119                     	;# 
   631  0119                     	;# 
   632  0119                     	;# 
   633  011A                     	;# 
   634  011A                     	;# 
   635  011A                     	;# 
   636  011B                     	;# 
   637  011B                     	;# 
   638  011B                     	;# 
   639  011B                     	;# 
   640  011B                     	;# 
   641  011C                     	;# 
   642  011C                     	;# 
   643  011C                     	;# 
   644  011D                     	;# 
   645  011D                     	;# 
   646  011D                     	;# 
   647  011E                     	;# 
   648  011E                     	;# 
   649  011E                     	;# 
   650  011F                     	;# 
   651  011F                     	;# 
   652  011F                     	;# 
   653  011F                     	;# 
   654  011F                     	;# 
   655  018C                     	;# 
   656  018D                     	;# 
   657  018E                     	;# 
   658  018F                     	;# 
   659  0190                     	;# 
   660  0191                     	;# 
   661  0192                     	;# 
   662  0196                     	;# 
   663  0197                     	;# 
   664  0198                     	;# 
   665  0199                     	;# 
   666  019A                     	;# 
   667  019B                     	;# 
   668  019C                     	;# 
   669  020C                     	;# 
   670  020D                     	;# 
   671  020E                     	;# 
   672  020F                     	;# 
   673  020F                     	;# 
   674  0210                     	;# 
   675  0210                     	;# 
   676  0211                     	;# 
   677  0211                     	;# 
   678  0212                     	;# 
   679  0213                     	;# 
   680  0214                     	;# 
   681  0215                     	;# 
   682  0215                     	;# 
   683  0216                     	;# 
   684  0216                     	;# 
   685  0217                     	;# 
   686  0217                     	;# 
   687  0218                     	;# 
   688  0219                     	;# 
   689  021A                     	;# 
   690  021B                     	;# 
   691  021B                     	;# 
   692  021C                     	;# 
   693  021C                     	;# 
   694  021D                     	;# 
   695  021D                     	;# 
   696  021E                     	;# 
   697  021F                     	;# 
   698  028C                     	;# 
   699  028C                     	;# 
   700  028D                     	;# 
   701  028D                     	;# 
   702  028E                     	;# 
   703  028F                     	;# 
   704  0290                     	;# 
   705  0290                     	;# 
   706  0291                     	;# 
   707  0292                     	;# 
   708  0292                     	;# 
   709  0293                     	;# 
   710  0293                     	;# 
   711  0294                     	;# 
   712  0295                     	;# 
   713  0296                     	;# 
   714  0296                     	;# 
   715  0297                     	;# 
   716  0298                     	;# 
   717  0298                     	;# 
   718  0299                     	;# 
   719  0299                     	;# 
   720  029A                     	;# 
   721  029B                     	;# 
   722  029C                     	;# 
   723  029C                     	;# 
   724  029D                     	;# 
   725  030C                     	;# 
   726  030C                     	;# 
   727  030D                     	;# 
   728  030E                     	;# 
   729  030F                     	;# 
   730  0310                     	;# 
   731  0310                     	;# 
   732  0311                     	;# 
   733  0312                     	;# 
   734  0313                     	;# 
   735  0314                     	;# 
   736  0314                     	;# 
   737  0315                     	;# 
   738  0316                     	;# 
   739  0317                     	;# 
   740  0318                     	;# 
   741  0318                     	;# 
   742  0319                     	;# 
   743  031A                     	;# 
   744  031B                     	;# 
   745  031C                     	;# 
   746  031C                     	;# 
   747  031D                     	;# 
   748  031E                     	;# 
   749  031F                     	;# 
   750  038C                     	;# 
   751  038D                     	;# 
   752  038E                     	;# 
   753  0390                     	;# 
   754  0391                     	;# 
   755  0392                     	;# 
   756  040C                     	;# 
   757  040D                     	;# 
   758  040E                     	;# 
   759  040F                     	;# 
   760  0410                     	;# 
   761  0411                     	;# 
   762  0416                     	;# 
   763  0416                     	;# 
   764  0417                     	;# 
   765  0418                     	;# 
   766  0418                     	;# 
   767  0419                     	;# 
   768  041A                     	;# 
   769  041A                     	;# 
   770  041B                     	;# 
   771  041C                     	;# 
   772  041C                     	;# 
   773  041D                     	;# 
   774  041E                     	;# 
   775  041F                     	;# 
   776  048C                     	;# 
   777  048C                     	;# 
   778  048D                     	;# 
   779  048E                     	;# 
   780  048F                     	;# 
   781  048F                     	;# 
   782  0490                     	;# 
   783  0491                     	;# 
   784  0492                     	;# 
   785  0492                     	;# 
   786  0493                     	;# 
   787  0494                     	;# 
   788  0495                     	;# 
   789  0495                     	;# 
   790  0496                     	;# 
   791  0497                     	;# 
   792  0498                     	;# 
   793  0499                     	;# 
   794  049A                     	;# 
   795  049B                     	;# 
   796  049C                     	;# 
   797  049D                     	;# 
   798  050C                     	;# 
   799  050C                     	;# 
   800  050D                     	;# 
   801  050E                     	;# 
   802  050F                     	;# 
   803  050F                     	;# 
   804  0510                     	;# 
   805  0511                     	;# 
   806  0512                     	;# 
   807  0512                     	;# 
   808  0513                     	;# 
   809  0514                     	;# 
   810  0515                     	;# 
   811  0515                     	;# 
   812  0516                     	;# 
   813  0517                     	;# 
   814  0518                     	;# 
   815  0519                     	;# 
   816  051A                     	;# 
   817  051B                     	;# 
   818  051C                     	;# 
   819  051D                     	;# 
   820  058C                     	;# 
   821  058C                     	;# 
   822  058D                     	;# 
   823  058E                     	;# 
   824  058F                     	;# 
   825  058F                     	;# 
   826  0590                     	;# 
   827  0591                     	;# 
   828  0592                     	;# 
   829  0593                     	;# 
   830  060C                     	;# 
   831  060D                     	;# 
   832  060E                     	;# 
   833  060F                     	;# 
   834  0610                     	;# 
   835  0611                     	;# 
   836  0612                     	;# 
   837  0613                     	;# 
   838  0614                     	;# 
   839  0616                     	;# 
   840  0617                     	;# 
   841  0618                     	;# 
   842  0619                     	;# 
   843  061A                     	;# 
   844  061B                     	;# 
   845  061C                     	;# 
   846  061D                     	;# 
   847  061E                     	;# 
   848  068C                     	;# 
   849  068D                     	;# 
   850  068E                     	;# 
   851  068F                     	;# 
   852  0690                     	;# 
   853  0691                     	;# 
   854  0692                     	;# 
   855  0693                     	;# 
   856  0694                     	;# 
   857  070C                     	;# 
   858  070D                     	;# 
   859  070E                     	;# 
   860  070F                     	;# 
   861  0710                     	;# 
   862  0711                     	;# 
   863  0712                     	;# 
   864  0713                     	;# 
   865  0714                     	;# 
   866  0716                     	;# 
   867  0717                     	;# 
   868  0718                     	;# 
   869  0719                     	;# 
   870  071A                     	;# 
   871  071B                     	;# 
   872  071C                     	;# 
   873  071D                     	;# 
   874  071E                     	;# 
   875  0796                     	;# 
   876  0797                     	;# 
   877  0798                     	;# 
   878  0799                     	;# 
   879  079A                     	;# 
   880  079B                     	;# 
   881  080C                     	;# 
   882  080D                     	;# 
   883  080E                     	;# 
   884  080F                     	;# 
   885  0810                     	;# 
   886  0811                     	;# 
   887  0812                     	;# 
   888  0813                     	;# 
   889  0814                     	;# 
   890  081A                     	;# 
   891  081B                     	;# 
   892  081C                     	;# 
   893  081D                     	;# 
   894  081E                     	;# 
   895  081F                     	;# 
   896  088C                     	;# 
   897  088D                     	;# 
   898  088E                     	;# 
   899  088F                     	;# 
   900  0890                     	;# 
   901  0891                     	;# 
   902  0892                     	;# 
   903  0893                     	;# 
   904  0895                     	;# 
   905  0896                     	;# 
   906  0897                     	;# 
   907  0898                     	;# 
   908  0899                     	;# 
   909  089A                     	;# 
   910  089B                     	;# 
   911  090C                     	;# 
   912  090E                     	;# 
   913  090F                     	;# 
   914  091F                     	;# 
   915  091F                     	;# 
   916  098F                     	;# 
   917  098F                     	;# 
   918  0990                     	;# 
   919  0991                     	;# 
   920  0992                     	;# 
   921  0993                     	;# 
   922  0994                     	;# 
   923  0995                     	;# 
   924  0996                     	;# 
   925  0997                     	;# 
   926  0E0F                     	;# 
   927  0E10                     	;# 
   928  0E11                     	;# 
   929  0E12                     	;# 
   930  0E13                     	;# 
   931  0E14                     	;# 
   932  0E15                     	;# 
   933  0E16                     	;# 
   934  0E17                     	;# 
   935  0E18                     	;# 
   936  0E19                     	;# 
   937  0E1A                     	;# 
   938  0E1B                     	;# 
   939  0E1C                     	;# 
   940  0E1D                     	;# 
   941  0E1E                     	;# 
   942  0E1F                     	;# 
   943  0E20                     	;# 
   944  0E21                     	;# 
   945  0E22                     	;# 
   946  0E23                     	;# 
   947  0E24                     	;# 
   948  0E25                     	;# 
   949  0E26                     	;# 
   950  0E27                     	;# 
   951  0E28                     	;# 
   952  0E29                     	;# 
   953  0E2A                     	;# 
   954  0E2B                     	;# 
   955  0E2C                     	;# 
   956  0E2D                     	;# 
   957  0E2E                     	;# 
   958  0E2F                     	;# 
   959  0E30                     	;# 
   960  0E31                     	;# 
   961  0E32                     	;# 
   962  0E33                     	;# 
   963  0E34                     	;# 
   964  0E35                     	;# 
   965  0E36                     	;# 
   966  0E37                     	;# 
   967  0E8F                     	;# 
   968  0E90                     	;# 
   969  0E91                     	;# 
   970  0E92                     	;# 
   971  0E93                     	;# 
   972  0E94                     	;# 
   973  0E95                     	;# 
   974  0E96                     	;# 
   975  0E97                     	;# 
   976  0E9C                     	;# 
   977  0E9D                     	;# 
   978  0E9E                     	;# 
   979  0EA1                     	;# 
   980  0EA2                     	;# 
   981  0EA3                     	;# 
   982  0EA4                     	;# 
   983  0EA5                     	;# 
   984  0EA9                     	;# 
   985  0EAA                     	;# 
   986  0EAB                     	;# 
   987  0EAC                     	;# 
   988  0EB1                     	;# 
   989  0EB2                     	;# 
   990  0EB3                     	;# 
   991  0EB8                     	;# 
   992  0EB9                     	;# 
   993  0EBA                     	;# 
   994  0EBB                     	;# 
   995  0EBC                     	;# 
   996  0EBD                     	;# 
   997  0EBE                     	;# 
   998  0EC3                     	;# 
   999  0EC5                     	;# 
  1000  0EC6                     	;# 
  1001  0EC7                     	;# 
  1002  0EC8                     	;# 
  1003  0EC9                     	;# 
  1004  0ECA                     	;# 
  1005  0ECB                     	;# 
  1006  0ECC                     	;# 
  1007  0F10                     	;# 
  1008  0F11                     	;# 
  1009  0F12                     	;# 
  1010  0F13                     	;# 
  1011  0F14                     	;# 
  1012  0F15                     	;# 
  1013  0F16                     	;# 
  1014  0F17                     	;# 
  1015  0F18                     	;# 
  1016  0F19                     	;# 
  1017  0F1A                     	;# 
  1018  0F1B                     	;# 
  1019  0F1C                     	;# 
  1020  0F1D                     	;# 
  1021  0F1E                     	;# 
  1022  0F1F                     	;# 
  1023  0F20                     	;# 
  1024  0F21                     	;# 
  1025  0F22                     	;# 
  1026  0F23                     	;# 
  1027  0F24                     	;# 
  1028  0F25                     	;# 
  1029  0F26                     	;# 
  1030  0F27                     	;# 
  1031  0F38                     	;# 
  1032  0F39                     	;# 
  1033  0F3A                     	;# 
  1034  0F3B                     	;# 
  1035  0F3C                     	;# 
  1036  0F3D                     	;# 
  1037  0F3E                     	;# 
  1038  0F3F                     	;# 
  1039  0F40                     	;# 
  1040  0F41                     	;# 
  1041  0F43                     	;# 
  1042  0F44                     	;# 
  1043  0F45                     	;# 
  1044  0F46                     	;# 
  1045  0F47                     	;# 
  1046  0F48                     	;# 
  1047  0F49                     	;# 
  1048  0F4A                     	;# 
  1049  0F4B                     	;# 
  1050  0F4C                     	;# 
  1051  0F4E                     	;# 
  1052  0F4F                     	;# 
  1053  0F50                     	;# 
  1054  0F51                     	;# 
  1055  0F52                     	;# 
  1056  0F53                     	;# 
  1057  0F54                     	;# 
  1058  0F55                     	;# 
  1059  0F56                     	;# 
  1060  0F57                     	;# 
  1061  0F65                     	;# 
  1062  0F68                     	;# 
  1063  0F69                     	;# 
  1064  0F6A                     	;# 
  1065  0F6B                     	;# 
  1066  0FE4                     	;# 
  1067  0FE5                     	;# 
  1068  0FE6                     	;# 
  1069  0FE7                     	;# 
  1070  0FE8                     	;# 
  1071  0FE9                     	;# 
  1072  0FEA                     	;# 
  1073  0FEB                     	;# 
  1074  0FED                     	;# 
  1075  0FEE                     	;# 
  1076  0FEF                     	;# 
  1077  0000                     	;# 
  1078  0001                     	;# 
  1079  0002                     	;# 
  1080  0003                     	;# 
  1081  0004                     	;# 
  1082  0005                     	;# 
  1083  0006                     	;# 
  1084  0007                     	;# 
  1085  0008                     	;# 
  1086  0009                     	;# 
  1087  000A                     	;# 
  1088  000B                     	;# 
  1089  000C                     	;# 
  1090  000D                     	;# 
  1091  000E                     	;# 
  1092  0010                     	;# 
  1093  0011                     	;# 
  1094  0012                     	;# 
  1095  0013                     	;# 
  1096  0016                     	;# 
  1097  0017                     	;# 
  1098  0018                     	;# 
  1099  001C                     	;# 
  1100  001C                     	;# 
  1101  001D                     	;# 
  1102  001D                     	;# 
  1103  001E                     	;# 
  1104  001F                     	;# 
  1105  008C                     	;# 
  1106  008C                     	;# 
  1107  008D                     	;# 
  1108  008E                     	;# 
  1109  008E                     	;# 
  1110  008F                     	;# 
  1111  0090                     	;# 
  1112  0090                     	;# 
  1113  0091                     	;# 
  1114  0093                     	;# 
  1115  0094                     	;# 
  1116  0095                     	;# 
  1117  0096                     	;# 
  1118  0097                     	;# 
  1119  0098                     	;# 
  1120  0099                     	;# 
  1121  009A                     	;# 
  1122  009B                     	;# 
  1123  009C                     	;# 
  1124  009D                     	;# 
  1125  009E                     	;# 
  1126  010C                     	;# 
  1127  010D                     	;# 
  1128  010E                     	;# 
  1129  010E                     	;# 
  1130  010F                     	;# 
  1131  0110                     	;# 
  1132  0110                     	;# 
  1133  0111                     	;# 
  1134  0112                     	;# 
  1135  0112                     	;# 
  1136  0113                     	;# 
  1137  0114                     	;# 
  1138  0114                     	;# 
  1139  0115                     	;# 
  1140  0116                     	;# 
  1141  0116                     	;# 
  1142  0117                     	;# 
  1143  0119                     	;# 
  1144  0119                     	;# 
  1145  0119                     	;# 
  1146  011A                     	;# 
  1147  011A                     	;# 
  1148  011A                     	;# 
  1149  011B                     	;# 
  1150  011B                     	;# 
  1151  011B                     	;# 
  1152  011B                     	;# 
  1153  011B                     	;# 
  1154  011C                     	;# 
  1155  011C                     	;# 
  1156  011C                     	;# 
  1157  011D                     	;# 
  1158  011D                     	;# 
  1159  011D                     	;# 
  1160  011E                     	;# 
  1161  011E                     	;# 
  1162  011E                     	;# 
  1163  011F                     	;# 
  1164  011F                     	;# 
  1165  011F                     	;# 
  1166  011F                     	;# 
  1167  011F                     	;# 
  1168  018C                     	;# 
  1169  018D                     	;# 
  1170  018E                     	;# 
  1171  018F                     	;# 
  1172  0190                     	;# 
  1173  0191                     	;# 
  1174  0192                     	;# 
  1175  0196                     	;# 
  1176  0197                     	;# 
  1177  0198                     	;# 
  1178  0199                     	;# 
  1179  019A                     	;# 
  1180  019B                     	;# 
  1181  019C                     	;# 
  1182  020C                     	;# 
  1183  020D                     	;# 
  1184  020E                     	;# 
  1185  020F                     	;# 
  1186  020F                     	;# 
  1187  0210                     	;# 
  1188  0210                     	;# 
  1189  0211                     	;# 
  1190  0211                     	;# 
  1191  0212                     	;# 
  1192  0213                     	;# 
  1193  0214                     	;# 
  1194  0215                     	;# 
  1195  0215                     	;# 
  1196  0216                     	;# 
  1197  0216                     	;# 
  1198  0217                     	;# 
  1199  0217                     	;# 
  1200  0218                     	;# 
  1201  0219                     	;# 
  1202  021A                     	;# 
  1203  021B                     	;# 
  1204  021B                     	;# 
  1205  021C                     	;# 
  1206  021C                     	;# 
  1207  021D                     	;# 
  1208  021D                     	;# 
  1209  021E                     	;# 
  1210  021F                     	;# 
  1211  028C                     	;# 
  1212  028C                     	;# 
  1213  028D                     	;# 
  1214  028D                     	;# 
  1215  028E                     	;# 
  1216  028F                     	;# 
  1217  0290                     	;# 
  1218  0290                     	;# 
  1219  0291                     	;# 
  1220  0292                     	;# 
  1221  0292                     	;# 
  1222  0293                     	;# 
  1223  0293                     	;# 
  1224  0294                     	;# 
  1225  0295                     	;# 
  1226  0296                     	;# 
  1227  0296                     	;# 
  1228  0297                     	;# 
  1229  0298                     	;# 
  1230  0298                     	;# 
  1231  0299                     	;# 
  1232  0299                     	;# 
  1233  029A                     	;# 
  1234  029B                     	;# 
  1235  029C                     	;# 
  1236  029C                     	;# 
  1237  029D                     	;# 
  1238  030C                     	;# 
  1239  030C                     	;# 
  1240  030D                     	;# 
  1241  030E                     	;# 
  1242  030F                     	;# 
  1243  0310                     	;# 
  1244  0310                     	;# 
  1245  0311                     	;# 
  1246  0312                     	;# 
  1247  0313                     	;# 
  1248  0314                     	;# 
  1249  0314                     	;# 
  1250  0315                     	;# 
  1251  0316                     	;# 
  1252  0317                     	;# 
  1253  0318                     	;# 
  1254  0318                     	;# 
  1255  0319                     	;# 
  1256  031A                     	;# 
  1257  031B                     	;# 
  1258  031C                     	;# 
  1259  031C                     	;# 
  1260  031D                     	;# 
  1261  031E                     	;# 
  1262  031F                     	;# 
  1263  038C                     	;# 
  1264  038D                     	;# 
  1265  038E                     	;# 
  1266  0390                     	;# 
  1267  0391                     	;# 
  1268  0392                     	;# 
  1269  040C                     	;# 
  1270  040D                     	;# 
  1271  040E                     	;# 
  1272  040F                     	;# 
  1273  0410                     	;# 
  1274  0411                     	;# 
  1275  0416                     	;# 
  1276  0416                     	;# 
  1277  0417                     	;# 
  1278  0418                     	;# 
  1279  0418                     	;# 
  1280  0419                     	;# 
  1281  041A                     	;# 
  1282  041A                     	;# 
  1283  041B                     	;# 
  1284  041C                     	;# 
  1285  041C                     	;# 
  1286  041D                     	;# 
  1287  041E                     	;# 
  1288  041F                     	;# 
  1289  048C                     	;# 
  1290  048C                     	;# 
  1291  048D                     	;# 
  1292  048E                     	;# 
  1293  048F                     	;# 
  1294  048F                     	;# 
  1295  0490                     	;# 
  1296  0491                     	;# 
  1297  0492                     	;# 
  1298  0492                     	;# 
  1299  0493                     	;# 
  1300  0494                     	;# 
  1301  0495                     	;# 
  1302  0495                     	;# 
  1303  0496                     	;# 
  1304  0497                     	;# 
  1305  0498                     	;# 
  1306  0499                     	;# 
  1307  049A                     	;# 
  1308  049B                     	;# 
  1309  049C                     	;# 
  1310  049D                     	;# 
  1311  050C                     	;# 
  1312  050C                     	;# 
  1313  050D                     	;# 
  1314  050E                     	;# 
  1315  050F                     	;# 
  1316  050F                     	;# 
  1317  0510                     	;# 
  1318  0511                     	;# 
  1319  0512                     	;# 
  1320  0512                     	;# 
  1321  0513                     	;# 
  1322  0514                     	;# 
  1323  0515                     	;# 
  1324  0515                     	;# 
  1325  0516                     	;# 
  1326  0517                     	;# 
  1327  0518                     	;# 
  1328  0519                     	;# 
  1329  051A                     	;# 
  1330  051B                     	;# 
  1331  051C                     	;# 
  1332  051D                     	;# 
  1333  058C                     	;# 
  1334  058C                     	;# 
  1335  058D                     	;# 
  1336  058E                     	;# 
  1337  058F                     	;# 
  1338  058F                     	;# 
  1339  0590                     	;# 
  1340  0591                     	;# 
  1341  0592                     	;# 
  1342  0593                     	;# 
  1343  060C                     	;# 
  1344  060D                     	;# 
  1345  060E                     	;# 
  1346  060F                     	;# 
  1347  0610                     	;# 
  1348  0611                     	;# 
  1349  0612                     	;# 
  1350  0613                     	;# 
  1351  0614                     	;# 
  1352  0616                     	;# 
  1353  0617                     	;# 
  1354  0618                     	;# 
  1355  0619                     	;# 
  1356  061A                     	;# 
  1357  061B                     	;# 
  1358  061C                     	;# 
  1359  061D                     	;# 
  1360  061E                     	;# 
  1361  068C                     	;# 
  1362  068D                     	;# 
  1363  068E                     	;# 
  1364  068F                     	;# 
  1365  0690                     	;# 
  1366  0691                     	;# 
  1367  0692                     	;# 
  1368  0693                     	;# 
  1369  0694                     	;# 
  1370  070C                     	;# 
  1371  070D                     	;# 
  1372  070E                     	;# 
  1373  070F                     	;# 
  1374  0710                     	;# 
  1375  0711                     	;# 
  1376  0712                     	;# 
  1377  0713                     	;# 
  1378  0714                     	;# 
  1379  0716                     	;# 
  1380  0717                     	;# 
  1381  0718                     	;# 
  1382  0719                     	;# 
  1383  071A                     	;# 
  1384  071B                     	;# 
  1385  071C                     	;# 
  1386  071D                     	;# 
  1387  071E                     	;# 
  1388  0796                     	;# 
  1389  0797                     	;# 
  1390  0798                     	;# 
  1391  0799                     	;# 
  1392  079A                     	;# 
  1393  079B                     	;# 
  1394  080C                     	;# 
  1395  080D                     	;# 
  1396  080E                     	;# 
  1397  080F                     	;# 
  1398  0810                     	;# 
  1399  0811                     	;# 
  1400  0812                     	;# 
  1401  0813                     	;# 
  1402  0814                     	;# 
  1403  081A                     	;# 
  1404  081B                     	;# 
  1405  081C                     	;# 
  1406  081D                     	;# 
  1407  081E                     	;# 
  1408  081F                     	;# 
  1409  088C                     	;# 
  1410  088D                     	;# 
  1411  088E                     	;# 
  1412  088F                     	;# 
  1413  0890                     	;# 
  1414  0891                     	;# 
  1415  0892                     	;# 
  1416  0893                     	;# 
  1417  0895                     	;# 
  1418  0896                     	;# 
  1419  0897                     	;# 
  1420  0898                     	;# 
  1421  0899                     	;# 
  1422  089A                     	;# 
  1423  089B                     	;# 
  1424  090C                     	;# 
  1425  090E                     	;# 
  1426  090F                     	;# 
  1427  091F                     	;# 
  1428  091F                     	;# 
  1429  098F                     	;# 
  1430  098F                     	;# 
  1431  0990                     	;# 
  1432  0991                     	;# 
  1433  0992                     	;# 
  1434  0993                     	;# 
  1435  0994                     	;# 
  1436  0995                     	;# 
  1437  0996                     	;# 
  1438  0997                     	;# 
  1439  0E0F                     	;# 
  1440  0E10                     	;# 
  1441  0E11                     	;# 
  1442  0E12                     	;# 
  1443  0E13                     	;# 
  1444  0E14                     	;# 
  1445  0E15                     	;# 
  1446  0E16                     	;# 
  1447  0E17                     	;# 
  1448  0E18                     	;# 
  1449  0E19                     	;# 
  1450  0E1A                     	;# 
  1451  0E1B                     	;# 
  1452  0E1C                     	;# 
  1453  0E1D                     	;# 
  1454  0E1E                     	;# 
  1455  0E1F                     	;# 
  1456  0E20                     	;# 
  1457  0E21                     	;# 
  1458  0E22                     	;# 
  1459  0E23                     	;# 
  1460  0E24                     	;# 
  1461  0E25                     	;# 
  1462  0E26                     	;# 
  1463  0E27                     	;# 
  1464  0E28                     	;# 
  1465  0E29                     	;# 
  1466  0E2A                     	;# 
  1467  0E2B                     	;# 
  1468  0E2C                     	;# 
  1469  0E2D                     	;# 
  1470  0E2E                     	;# 
  1471  0E2F                     	;# 
  1472  0E30                     	;# 
  1473  0E31                     	;# 
  1474  0E32                     	;# 
  1475  0E33                     	;# 
  1476  0E34                     	;# 
  1477  0E35                     	;# 
  1478  0E36                     	;# 
  1479  0E37                     	;# 
  1480  0E8F                     	;# 
  1481  0E90                     	;# 
  1482  0E91                     	;# 
  1483  0E92                     	;# 
  1484  0E93                     	;# 
  1485  0E94                     	;# 
  1486  0E95                     	;# 
  1487  0E96                     	;# 
  1488  0E97                     	;# 
  1489  0E9C                     	;# 
  1490  0E9D                     	;# 
  1491  0E9E                     	;# 
  1492  0EA1                     	;# 
  1493  0EA2                     	;# 
  1494  0EA3                     	;# 
  1495  0EA4                     	;# 
  1496  0EA5                     	;# 
  1497  0EA9                     	;# 
  1498  0EAA                     	;# 
  1499  0EAB                     	;# 
  1500  0EAC                     	;# 
  1501  0EB1                     	;# 
  1502  0EB2                     	;# 
  1503  0EB3                     	;# 
  1504  0EB8                     	;# 
  1505  0EB9                     	;# 
  1506  0EBA                     	;# 
  1507  0EBB                     	;# 
  1508  0EBC                     	;# 
  1509  0EBD                     	;# 
  1510  0EBE                     	;# 
  1511  0EC3                     	;# 
  1512  0EC5                     	;# 
  1513  0EC6                     	;# 
  1514  0EC7                     	;# 
  1515  0EC8                     	;# 
  1516  0EC9                     	;# 
  1517  0ECA                     	;# 
  1518  0ECB                     	;# 
  1519  0ECC                     	;# 
  1520  0F10                     	;# 
  1521  0F11                     	;# 
  1522  0F12                     	;# 
  1523  0F13                     	;# 
  1524  0F14                     	;# 
  1525  0F15                     	;# 
  1526  0F16                     	;# 
  1527  0F17                     	;# 
  1528  0F18                     	;# 
  1529  0F19                     	;# 
  1530  0F1A                     	;# 
  1531  0F1B                     	;# 
  1532  0F1C                     	;# 
  1533  0F1D                     	;# 
  1534  0F1E                     	;# 
  1535  0F1F                     	;# 
  1536  0F20                     	;# 
  1537  0F21                     	;# 
  1538  0F22                     	;# 
  1539  0F23                     	;# 
  1540  0F24                     	;# 
  1541  0F25                     	;# 
  1542  0F26                     	;# 
  1543  0F27                     	;# 
  1544  0F38                     	;# 
  1545  0F39                     	;# 
  1546  0F3A                     	;# 
  1547  0F3B                     	;# 
  1548  0F3C                     	;# 
  1549  0F3D                     	;# 
  1550  0F3E                     	;# 
  1551  0F3F                     	;# 
  1552  0F40                     	;# 
  1553  0F41                     	;# 
  1554  0F43                     	;# 
  1555  0F44                     	;# 
  1556  0F45                     	;# 
  1557  0F46                     	;# 
  1558  0F47                     	;# 
  1559  0F48                     	;# 
  1560  0F49                     	;# 
  1561  0F4A                     	;# 
  1562  0F4B                     	;# 
  1563  0F4C                     	;# 
  1564  0F4E                     	;# 
  1565  0F4F                     	;# 
  1566  0F50                     	;# 
  1567  0F51                     	;# 
  1568  0F52                     	;# 
  1569  0F53                     	;# 
  1570  0F54                     	;# 
  1571  0F55                     	;# 
  1572  0F56                     	;# 
  1573  0F57                     	;# 
  1574  0F65                     	;# 
  1575  0F68                     	;# 
  1576  0F69                     	;# 
  1577  0F6A                     	;# 
  1578  0F6B                     	;# 
  1579  0FE4                     	;# 
  1580  0FE5                     	;# 
  1581  0FE6                     	;# 
  1582  0FE7                     	;# 
  1583  0FE8                     	;# 
  1584  0FE9                     	;# 
  1585  0FEA                     	;# 
  1586  0FEB                     	;# 
  1587  0FED                     	;# 
  1588  0FEE                     	;# 
  1589  0FEF                     	;# 
  1590  0000                     	;# 
  1591  0001                     	;# 
  1592  0002                     	;# 
  1593  0003                     	;# 
  1594  0004                     	;# 
  1595  0005                     	;# 
  1596  0006                     	;# 
  1597  0007                     	;# 
  1598  0008                     	;# 
  1599  0009                     	;# 
  1600  000A                     	;# 
  1601  000B                     	;# 
  1602  000C                     	;# 
  1603  000D                     	;# 
  1604  000E                     	;# 
  1605  0010                     	;# 
  1606  0011                     	;# 
  1607  0012                     	;# 
  1608  0013                     	;# 
  1609  0016                     	;# 
  1610  0017                     	;# 
  1611  0018                     	;# 
  1612  001C                     	;# 
  1613  001C                     	;# 
  1614  001D                     	;# 
  1615  001D                     	;# 
  1616  001E                     	;# 
  1617  001F                     	;# 
  1618  008C                     	;# 
  1619  008C                     	;# 
  1620  008D                     	;# 
  1621  008E                     	;# 
  1622  008E                     	;# 
  1623  008F                     	;# 
  1624  0090                     	;# 
  1625  0090                     	;# 
  1626  0091                     	;# 
  1627  0093                     	;# 
  1628  0094                     	;# 
  1629  0095                     	;# 
  1630  0096                     	;# 
  1631  0097                     	;# 
  1632  0098                     	;# 
  1633  0099                     	;# 
  1634  009A                     	;# 
  1635  009B                     	;# 
  1636  009C                     	;# 
  1637  009D                     	;# 
  1638  009E                     	;# 
  1639  010C                     	;# 
  1640  010D                     	;# 
  1641  010E                     	;# 
  1642  010E                     	;# 
  1643  010F                     	;# 
  1644  0110                     	;# 
  1645  0110                     	;# 
  1646  0111                     	;# 
  1647  0112                     	;# 
  1648  0112                     	;# 
  1649  0113                     	;# 
  1650  0114                     	;# 
  1651  0114                     	;# 
  1652  0115                     	;# 
  1653  0116                     	;# 
  1654  0116                     	;# 
  1655  0117                     	;# 
  1656  0119                     	;# 
  1657  0119                     	;# 
  1658  0119                     	;# 
  1659  011A                     	;# 
  1660  011A                     	;# 
  1661  011A                     	;# 
  1662  011B                     	;# 
  1663  011B                     	;# 
  1664  011B                     	;# 
  1665  011B                     	;# 
  1666  011B                     	;# 
  1667  011C                     	;# 
  1668  011C                     	;# 
  1669  011C                     	;# 
  1670  011D                     	;# 
  1671  011D                     	;# 
  1672  011D                     	;# 
  1673  011E                     	;# 
  1674  011E                     	;# 
  1675  011E                     	;# 
  1676  011F                     	;# 
  1677  011F                     	;# 
  1678  011F                     	;# 
  1679  011F                     	;# 
  1680  011F                     	;# 
  1681  018C                     	;# 
  1682  018D                     	;# 
  1683  018E                     	;# 
  1684  018F                     	;# 
  1685  0190                     	;# 
  1686  0191                     	;# 
  1687  0192                     	;# 
  1688  0196                     	;# 
  1689  0197                     	;# 
  1690  0198                     	;# 
  1691  0199                     	;# 
  1692  019A                     	;# 
  1693  019B                     	;# 
  1694  019C                     	;# 
  1695  020C                     	;# 
  1696  020D                     	;# 
  1697  020E                     	;# 
  1698  020F                     	;# 
  1699  020F                     	;# 
  1700  0210                     	;# 
  1701  0210                     	;# 
  1702  0211                     	;# 
  1703  0211                     	;# 
  1704  0212                     	;# 
  1705  0213                     	;# 
  1706  0214                     	;# 
  1707  0215                     	;# 
  1708  0215                     	;# 
  1709  0216                     	;# 
  1710  0216                     	;# 
  1711  0217                     	;# 
  1712  0217                     	;# 
  1713  0218                     	;# 
  1714  0219                     	;# 
  1715  021A                     	;# 
  1716  021B                     	;# 
  1717  021B                     	;# 
  1718  021C                     	;# 
  1719  021C                     	;# 
  1720  021D                     	;# 
  1721  021D                     	;# 
  1722  021E                     	;# 
  1723  021F                     	;# 
  1724  028C                     	;# 
  1725  028C                     	;# 
  1726  028D                     	;# 
  1727  028D                     	;# 
  1728  028E                     	;# 
  1729  028F                     	;# 
  1730  0290                     	;# 
  1731  0290                     	;# 
  1732  0291                     	;# 
  1733  0292                     	;# 
  1734  0292                     	;# 
  1735  0293                     	;# 
  1736  0293                     	;# 
  1737  0294                     	;# 
  1738  0295                     	;# 
  1739  0296                     	;# 
  1740  0296                     	;# 
  1741  0297                     	;# 
  1742  0298                     	;# 
  1743  0298                     	;# 
  1744  0299                     	;# 
  1745  0299                     	;# 
  1746  029A                     	;# 
  1747  029B                     	;# 
  1748  029C                     	;# 
  1749  029C                     	;# 
  1750  029D                     	;# 
  1751  030C                     	;# 
  1752  030C                     	;# 
  1753  030D                     	;# 
  1754  030E                     	;# 
  1755  030F                     	;# 
  1756  0310                     	;# 
  1757  0310                     	;# 
  1758  0311                     	;# 
  1759  0312                     	;# 
  1760  0313                     	;# 
  1761  0314                     	;# 
  1762  0314                     	;# 
  1763  0315                     	;# 
  1764  0316                     	;# 
  1765  0317                     	;# 
  1766  0318                     	;# 
  1767  0318                     	;# 
  1768  0319                     	;# 
  1769  031A                     	;# 
  1770  031B                     	;# 
  1771  031C                     	;# 
  1772  031C                     	;# 
  1773  031D                     	;# 
  1774  031E                     	;# 
  1775  031F                     	;# 
  1776  038C                     	;# 
  1777  038D                     	;# 
  1778  038E                     	;# 
  1779  0390                     	;# 
  1780  0391                     	;# 
  1781  0392                     	;# 
  1782  040C                     	;# 
  1783  040D                     	;# 
  1784  040E                     	;# 
  1785  040F                     	;# 
  1786  0410                     	;# 
  1787  0411                     	;# 
  1788  0416                     	;# 
  1789  0416                     	;# 
  1790  0417                     	;# 
  1791  0418                     	;# 
  1792  0418                     	;# 
  1793  0419                     	;# 
  1794  041A                     	;# 
  1795  041A                     	;# 
  1796  041B                     	;# 
  1797  041C                     	;# 
  1798  041C                     	;# 
  1799  041D                     	;# 
  1800  041E                     	;# 
  1801  041F                     	;# 
  1802  048C                     	;# 
  1803  048C                     	;# 
  1804  048D                     	;# 
  1805  048E                     	;# 
  1806  048F                     	;# 
  1807  048F                     	;# 
  1808  0490                     	;# 
  1809  0491                     	;# 
  1810  0492                     	;# 
  1811  0492                     	;# 
  1812  0493                     	;# 
  1813  0494                     	;# 
  1814  0495                     	;# 
  1815  0495                     	;# 
  1816  0496                     	;# 
  1817  0497                     	;# 
  1818  0498                     	;# 
  1819  0499                     	;# 
  1820  049A                     	;# 
  1821  049B                     	;# 
  1822  049C                     	;# 
  1823  049D                     	;# 
  1824  050C                     	;# 
  1825  050C                     	;# 
  1826  050D                     	;# 
  1827  050E                     	;# 
  1828  050F                     	;# 
  1829  050F                     	;# 
  1830  0510                     	;# 
  1831  0511                     	;# 
  1832  0512                     	;# 
  1833  0512                     	;# 
  1834  0513                     	;# 
  1835  0514                     	;# 
  1836  0515                     	;# 
  1837  0515                     	;# 
  1838  0516                     	;# 
  1839  0517                     	;# 
  1840  0518                     	;# 
  1841  0519                     	;# 
  1842  051A                     	;# 
  1843  051B                     	;# 
  1844  051C                     	;# 
  1845  051D                     	;# 
  1846  058C                     	;# 
  1847  058C                     	;# 
  1848  058D                     	;# 
  1849  058E                     	;# 
  1850  058F                     	;# 
  1851  058F                     	;# 
  1852  0590                     	;# 
  1853  0591                     	;# 
  1854  0592                     	;# 
  1855  0593                     	;# 
  1856  060C                     	;# 
  1857  060D                     	;# 
  1858  060E                     	;# 
  1859  060F                     	;# 
  1860  0610                     	;# 
  1861  0611                     	;# 
  1862  0612                     	;# 
  1863  0613                     	;# 
  1864  0614                     	;# 
  1865  0616                     	;# 
  1866  0617                     	;# 
  1867  0618                     	;# 
  1868  0619                     	;# 
  1869  061A                     	;# 
  1870  061B                     	;# 
  1871  061C                     	;# 
  1872  061D                     	;# 
  1873  061E                     	;# 
  1874  068C                     	;# 
  1875  068D                     	;# 
  1876  068E                     	;# 
  1877  068F                     	;# 
  1878  0690                     	;# 
  1879  0691                     	;# 
  1880  0692                     	;# 
  1881  0693                     	;# 
  1882  0694                     	;# 
  1883  070C                     	;# 
  1884  070D                     	;# 
  1885  070E                     	;# 
  1886  070F                     	;# 
  1887  0710                     	;# 
  1888  0711                     	;# 
  1889  0712                     	;# 
  1890  0713                     	;# 
  1891  0714                     	;# 
  1892  0716                     	;# 
  1893  0717                     	;# 
  1894  0718                     	;# 
  1895  0719                     	;# 
  1896  071A                     	;# 
  1897  071B                     	;# 
  1898  071C                     	;# 
  1899  071D                     	;# 
  1900  071E                     	;# 
  1901  0796                     	;# 
  1902  0797                     	;# 
  1903  0798                     	;# 
  1904  0799                     	;# 
  1905  079A                     	;# 
  1906  079B                     	;# 
  1907  080C                     	;# 
  1908  080D                     	;# 
  1909  080E                     	;# 
  1910  080F                     	;# 
  1911  0810                     	;# 
  1912  0811                     	;# 
  1913  0812                     	;# 
  1914  0813                     	;# 
  1915  0814                     	;# 
  1916  081A                     	;# 
  1917  081B                     	;# 
  1918  081C                     	;# 
  1919  081D                     	;# 
  1920  081E                     	;# 
  1921  081F                     	;# 
  1922  088C                     	;# 
  1923  088D                     	;# 
  1924  088E                     	;# 
  1925  088F                     	;# 
  1926  0890                     	;# 
  1927  0891                     	;# 
  1928  0892                     	;# 
  1929  0893                     	;# 
  1930  0895                     	;# 
  1931  0896                     	;# 
  1932  0897                     	;# 
  1933  0898                     	;# 
  1934  0899                     	;# 
  1935  089A                     	;# 
  1936  089B                     	;# 
  1937  090C                     	;# 
  1938  090E                     	;# 
  1939  090F                     	;# 
  1940  091F                     	;# 
  1941  091F                     	;# 
  1942  098F                     	;# 
  1943  098F                     	;# 
  1944  0990                     	;# 
  1945  0991                     	;# 
  1946  0992                     	;# 
  1947  0993                     	;# 
  1948  0994                     	;# 
  1949  0995                     	;# 
  1950  0996                     	;# 
  1951  0997                     	;# 
  1952  0E0F                     	;# 
  1953  0E10                     	;# 
  1954  0E11                     	;# 
  1955  0E12                     	;# 
  1956  0E13                     	;# 
  1957  0E14                     	;# 
  1958  0E15                     	;# 
  1959  0E16                     	;# 
  1960  0E17                     	;# 
  1961  0E18                     	;# 
  1962  0E19                     	;# 
  1963  0E1A                     	;# 
  1964  0E1B                     	;# 
  1965  0E1C                     	;# 
  1966  0E1D                     	;# 
  1967  0E1E                     	;# 
  1968  0E1F                     	;# 
  1969  0E20                     	;# 
  1970  0E21                     	;# 
  1971  0E22                     	;# 
  1972  0E23                     	;# 
  1973  0E24                     	;# 
  1974  0E25                     	;# 
  1975  0E26                     	;# 
  1976  0E27                     	;# 
  1977  0E28                     	;# 
  1978  0E29                     	;# 
  1979  0E2A                     	;# 
  1980  0E2B                     	;# 
  1981  0E2C                     	;# 
  1982  0E2D                     	;# 
  1983  0E2E                     	;# 
  1984  0E2F                     	;# 
  1985  0E30                     	;# 
  1986  0E31                     	;# 
  1987  0E32                     	;# 
  1988  0E33                     	;# 
  1989  0E34                     	;# 
  1990  0E35                     	;# 
  1991  0E36                     	;# 
  1992  0E37                     	;# 
  1993  0E8F                     	;# 
  1994  0E90                     	;# 
  1995  0E91                     	;# 
  1996  0E92                     	;# 
  1997  0E93                     	;# 
  1998  0E94                     	;# 
  1999  0E95                     	;# 
  2000  0E96                     	;# 
  2001  0E97                     	;# 
  2002  0E9C                     	;# 
  2003  0E9D                     	;# 
  2004  0E9E                     	;# 
  2005  0EA1                     	;# 
  2006  0EA2                     	;# 
  2007  0EA3                     	;# 
  2008  0EA4                     	;# 
  2009  0EA5                     	;# 
  2010  0EA9                     	;# 
  2011  0EAA                     	;# 
  2012  0EAB                     	;# 
  2013  0EAC                     	;# 
  2014  0EB1                     	;# 
  2015  0EB2                     	;# 
  2016  0EB3                     	;# 
  2017  0EB8                     	;# 
  2018  0EB9                     	;# 
  2019  0EBA                     	;# 
  2020  0EBB                     	;# 
  2021  0EBC                     	;# 
  2022  0EBD                     	;# 
  2023  0EBE                     	;# 
  2024  0EC3                     	;# 
  2025  0EC5                     	;# 
  2026  0EC6                     	;# 
  2027  0EC7                     	;# 
  2028  0EC8                     	;# 
  2029  0EC9                     	;# 
  2030  0ECA                     	;# 
  2031  0ECB                     	;# 
  2032  0ECC                     	;# 
  2033  0F10                     	;# 
  2034  0F11                     	;# 
  2035  0F12                     	;# 
  2036  0F13                     	;# 
  2037  0F14                     	;# 
  2038  0F15                     	;# 
  2039  0F16                     	;# 
  2040  0F17                     	;# 
  2041  0F18                     	;# 
  2042  0F19                     	;# 
  2043  0F1A                     	;# 
  2044  0F1B                     	;# 
  2045  0F1C                     	;# 
  2046  0F1D                     	;# 
  2047  0F1E                     	;# 
  2048  0F1F                     	;# 
  2049  0F20                     	;# 
  2050  0F21                     	;# 
  2051  0F22                     	;# 
  2052  0F23                     	;# 
  2053  0F24                     	;# 
  2054  0F25                     	;# 
  2055  0F26                     	;# 
  2056  0F27                     	;# 
  2057  0F38                     	;# 
  2058  0F39                     	;# 
  2059  0F3A                     	;# 
  2060  0F3B                     	;# 
  2061  0F3C                     	;# 
  2062  0F3D                     	;# 
  2063  0F3E                     	;# 
  2064  0F3F                     	;# 
  2065  0F40                     	;# 
  2066  0F41                     	;# 
  2067  0F43                     	;# 
  2068  0F44                     	;# 
  2069  0F45                     	;# 
  2070  0F46                     	;# 
  2071  0F47                     	;# 
  2072  0F48                     	;# 
  2073  0F49                     	;# 
  2074  0F4A                     	;# 
  2075  0F4B                     	;# 
  2076  0F4C                     	;# 
  2077  0F4E                     	;# 
  2078  0F4F                     	;# 
  2079  0F50                     	;# 
  2080  0F51                     	;# 
  2081  0F52                     	;# 
  2082  0F53                     	;# 
  2083  0F54                     	;# 
  2084  0F55                     	;# 
  2085  0F56                     	;# 
  2086  0F57                     	;# 
  2087  0F65                     	;# 
  2088  0F68                     	;# 
  2089  0F69                     	;# 
  2090  0F6A                     	;# 
  2091  0F6B                     	;# 
  2092  0FE4                     	;# 
  2093  0FE5                     	;# 
  2094  0FE6                     	;# 
  2095  0FE7                     	;# 
  2096  0FE8                     	;# 
  2097  0FE9                     	;# 
  2098  0FEA                     	;# 
  2099  0FEB                     	;# 
  2100  0FED                     	;# 
  2101  0FEE                     	;# 
  2102  0FEF                     	;# 
  2103  0000                     	;# 
  2104  0001                     	;# 
  2105  0002                     	;# 
  2106  0003                     	;# 
  2107  0004                     	;# 
  2108  0005                     	;# 
  2109  0006                     	;# 
  2110  0007                     	;# 
  2111  0008                     	;# 
  2112  0009                     	;# 
  2113  000A                     	;# 
  2114  000B                     	;# 
  2115  000C                     	;# 
  2116  000D                     	;# 
  2117  000E                     	;# 
  2118  0010                     	;# 
  2119  0011                     	;# 
  2120  0012                     	;# 
  2121  0013                     	;# 
  2122  0016                     	;# 
  2123  0017                     	;# 
  2124  0018                     	;# 
  2125  001C                     	;# 
  2126  001C                     	;# 
  2127  001D                     	;# 
  2128  001D                     	;# 
  2129  001E                     	;# 
  2130  001F                     	;# 
  2131  008C                     	;# 
  2132  008C                     	;# 
  2133  008D                     	;# 
  2134  008E                     	;# 
  2135  008E                     	;# 
  2136  008F                     	;# 
  2137  0090                     	;# 
  2138  0090                     	;# 
  2139  0091                     	;# 
  2140  0093                     	;# 
  2141  0094                     	;# 
  2142  0095                     	;# 
  2143  0096                     	;# 
  2144  0097                     	;# 
  2145  0098                     	;# 
  2146  0099                     	;# 
  2147  009A                     	;# 
  2148  009B                     	;# 
  2149  009C                     	;# 
  2150  009D                     	;# 
  2151  009E                     	;# 
  2152  010C                     	;# 
  2153  010D                     	;# 
  2154  010E                     	;# 
  2155  010E                     	;# 
  2156  010F                     	;# 
  2157  0110                     	;# 
  2158  0110                     	;# 
  2159  0111                     	;# 
  2160  0112                     	;# 
  2161  0112                     	;# 
  2162  0113                     	;# 
  2163  0114                     	;# 
  2164  0114                     	;# 
  2165  0115                     	;# 
  2166  0116                     	;# 
  2167  0116                     	;# 
  2168  0117                     	;# 
  2169  0119                     	;# 
  2170  0119                     	;# 
  2171  0119                     	;# 
  2172  011A                     	;# 
  2173  011A                     	;# 
  2174  011A                     	;# 
  2175  011B                     	;# 
  2176  011B                     	;# 
  2177  011B                     	;# 
  2178  011B                     	;# 
  2179  011B                     	;# 
  2180  011C                     	;# 
  2181  011C                     	;# 
  2182  011C                     	;# 
  2183  011D                     	;# 
  2184  011D                     	;# 
  2185  011D                     	;# 
  2186  011E                     	;# 
  2187  011E                     	;# 
  2188  011E                     	;# 
  2189  011F                     	;# 
  2190  011F                     	;# 
  2191  011F                     	;# 
  2192  011F                     	;# 
  2193  011F                     	;# 
  2194  018C                     	;# 
  2195  018D                     	;# 
  2196  018E                     	;# 
  2197  018F                     	;# 
  2198  0190                     	;# 
  2199  0191                     	;# 
  2200  0192                     	;# 
  2201  0196                     	;# 
  2202  0197                     	;# 
  2203  0198                     	;# 
  2204  0199                     	;# 
  2205  019A                     	;# 
  2206  019B                     	;# 
  2207  019C                     	;# 
  2208  020C                     	;# 
  2209  020D                     	;# 
  2210  020E                     	;# 
  2211  020F                     	;# 
  2212  020F                     	;# 
  2213  0210                     	;# 
  2214  0210                     	;# 
  2215  0211                     	;# 
  2216  0211                     	;# 
  2217  0212                     	;# 
  2218  0213                     	;# 
  2219  0214                     	;# 
  2220  0215                     	;# 
  2221  0215                     	;# 
  2222  0216                     	;# 
  2223  0216                     	;# 
  2224  0217                     	;# 
  2225  0217                     	;# 
  2226  0218                     	;# 
  2227  0219                     	;# 
  2228  021A                     	;# 
  2229  021B                     	;# 
  2230  021B                     	;# 
  2231  021C                     	;# 
  2232  021C                     	;# 
  2233  021D                     	;# 
  2234  021D                     	;# 
  2235  021E                     	;# 
  2236  021F                     	;# 
  2237  028C                     	;# 
  2238  028C                     	;# 
  2239  028D                     	;# 
  2240  028D                     	;# 
  2241  028E                     	;# 
  2242  028F                     	;# 
  2243  0290                     	;# 
  2244  0290                     	;# 
  2245  0291                     	;# 
  2246  0292                     	;# 
  2247  0292                     	;# 
  2248  0293                     	;# 
  2249  0293                     	;# 
  2250  0294                     	;# 
  2251  0295                     	;# 
  2252  0296                     	;# 
  2253  0296                     	;# 
  2254  0297                     	;# 
  2255  0298                     	;# 
  2256  0298                     	;# 
  2257  0299                     	;# 
  2258  0299                     	;# 
  2259  029A                     	;# 
  2260  029B                     	;# 
  2261  029C                     	;# 
  2262  029C                     	;# 
  2263  029D                     	;# 
  2264  030C                     	;# 
  2265  030C                     	;# 
  2266  030D                     	;# 
  2267  030E                     	;# 
  2268  030F                     	;# 
  2269  0310                     	;# 
  2270  0310                     	;# 
  2271  0311                     	;# 
  2272  0312                     	;# 
  2273  0313                     	;# 
  2274  0314                     	;# 
  2275  0314                     	;# 
  2276  0315                     	;# 
  2277  0316                     	;# 
  2278  0317                     	;# 
  2279  0318                     	;# 
  2280  0318                     	;# 
  2281  0319                     	;# 
  2282  031A                     	;# 
  2283  031B                     	;# 
  2284  031C                     	;# 
  2285  031C                     	;# 
  2286  031D                     	;# 
  2287  031E                     	;# 
  2288  031F                     	;# 
  2289  038C                     	;# 
  2290  038D                     	;# 
  2291  038E                     	;# 
  2292  0390                     	;# 
  2293  0391                     	;# 
  2294  0392                     	;# 
  2295  040C                     	;# 
  2296  040D                     	;# 
  2297  040E                     	;# 
  2298  040F                     	;# 
  2299  0410                     	;# 
  2300  0411                     	;# 
  2301  0416                     	;# 
  2302  0416                     	;# 
  2303  0417                     	;# 
  2304  0418                     	;# 
  2305  0418                     	;# 
  2306  0419                     	;# 
  2307  041A                     	;# 
  2308  041A                     	;# 
  2309  041B                     	;# 
  2310  041C                     	;# 
  2311  041C                     	;# 
  2312  041D                     	;# 
  2313  041E                     	;# 
  2314  041F                     	;# 
  2315  048C                     	;# 
  2316  048C                     	;# 
  2317  048D                     	;# 
  2318  048E                     	;# 
  2319  048F                     	;# 
  2320  048F                     	;# 
  2321  0490                     	;# 
  2322  0491                     	;# 
  2323  0492                     	;# 
  2324  0492                     	;# 
  2325  0493                     	;# 
  2326  0494                     	;# 
  2327  0495                     	;# 
  2328  0495                     	;# 
  2329  0496                     	;# 
  2330  0497                     	;# 
  2331  0498                     	;# 
  2332  0499                     	;# 
  2333  049A                     	;# 
  2334  049B                     	;# 
  2335  049C                     	;# 
  2336  049D                     	;# 
  2337  050C                     	;# 
  2338  050C                     	;# 
  2339  050D                     	;# 
  2340  050E                     	;# 
  2341  050F                     	;# 
  2342  050F                     	;# 
  2343  0510                     	;# 
  2344  0511                     	;# 
  2345  0512                     	;# 
  2346  0512                     	;# 
  2347  0513                     	;# 
  2348  0514                     	;# 
  2349  0515                     	;# 
  2350  0515                     	;# 
  2351  0516                     	;# 
  2352  0517                     	;# 
  2353  0518                     	;# 
  2354  0519                     	;# 
  2355  051A                     	;# 
  2356  051B                     	;# 
  2357  051C                     	;# 
  2358  051D                     	;# 
  2359  058C                     	;# 
  2360  058C                     	;# 
  2361  058D                     	;# 
  2362  058E                     	;# 
  2363  058F                     	;# 
  2364  058F                     	;# 
  2365  0590                     	;# 
  2366  0591                     	;# 
  2367  0592                     	;# 
  2368  0593                     	;# 
  2369  060C                     	;# 
  2370  060D                     	;# 
  2371  060E                     	;# 
  2372  060F                     	;# 
  2373  0610                     	;# 
  2374  0611                     	;# 
  2375  0612                     	;# 
  2376  0613                     	;# 
  2377  0614                     	;# 
  2378  0616                     	;# 
  2379  0617                     	;# 
  2380  0618                     	;# 
  2381  0619                     	;# 
  2382  061A                     	;# 
  2383  061B                     	;# 
  2384  061C                     	;# 
  2385  061D                     	;# 
  2386  061E                     	;# 
  2387  068C                     	;# 
  2388  068D                     	;# 
  2389  068E                     	;# 
  2390  068F                     	;# 
  2391  0690                     	;# 
  2392  0691                     	;# 
  2393  0692                     	;# 
  2394  0693                     	;# 
  2395  0694                     	;# 
  2396  070C                     	;# 
  2397  070D                     	;# 
  2398  070E                     	;# 
  2399  070F                     	;# 
  2400  0710                     	;# 
  2401  0711                     	;# 
  2402  0712                     	;# 
  2403  0713                     	;# 
  2404  0714                     	;# 
  2405  0716                     	;# 
  2406  0717                     	;# 
  2407  0718                     	;# 
  2408  0719                     	;# 
  2409  071A                     	;# 
  2410  071B                     	;# 
  2411  071C                     	;# 
  2412  071D                     	;# 
  2413  071E                     	;# 
  2414  0796                     	;# 
  2415  0797                     	;# 
  2416  0798                     	;# 
  2417  0799                     	;# 
  2418  079A                     	;# 
  2419  079B                     	;# 
  2420  080C                     	;# 
  2421  080D                     	;# 
  2422  080E                     	;# 
  2423  080F                     	;# 
  2424  0810                     	;# 
  2425  0811                     	;# 
  2426  0812                     	;# 
  2427  0813                     	;# 
  2428  0814                     	;# 
  2429  081A                     	;# 
  2430  081B                     	;# 
  2431  081C                     	;# 
  2432  081D                     	;# 
  2433  081E                     	;# 
  2434  081F                     	;# 
  2435  088C                     	;# 
  2436  088D                     	;# 
  2437  088E                     	;# 
  2438  088F                     	;# 
  2439  0890                     	;# 
  2440  0891                     	;# 
  2441  0892                     	;# 
  2442  0893                     	;# 
  2443  0895                     	;# 
  2444  0896                     	;# 
  2445  0897                     	;# 
  2446  0898                     	;# 
  2447  0899                     	;# 
  2448  089A                     	;# 
  2449  089B                     	;# 
  2450  090C                     	;# 
  2451  090E                     	;# 
  2452  090F                     	;# 
  2453  091F                     	;# 
  2454  091F                     	;# 
  2455  098F                     	;# 
  2456  098F                     	;# 
  2457  0990                     	;# 
  2458  0991                     	;# 
  2459  0992                     	;# 
  2460  0993                     	;# 
  2461  0994                     	;# 
  2462  0995                     	;# 
  2463  0996                     	;# 
  2464  0997                     	;# 
  2465  0E0F                     	;# 
  2466  0E10                     	;# 
  2467  0E11                     	;# 
  2468  0E12                     	;# 
  2469  0E13                     	;# 
  2470  0E14                     	;# 
  2471  0E15                     	;# 
  2472  0E16                     	;# 
  2473  0E17                     	;# 
  2474  0E18                     	;# 
  2475  0E19                     	;# 
  2476  0E1A                     	;# 
  2477  0E1B                     	;# 
  2478  0E1C                     	;# 
  2479  0E1D                     	;# 
  2480  0E1E                     	;# 
  2481  0E1F                     	;# 
  2482  0E20                     	;# 
  2483  0E21                     	;# 
  2484  0E22                     	;# 
  2485  0E23                     	;# 
  2486  0E24                     	;# 
  2487  0E25                     	;# 
  2488  0E26                     	;# 
  2489  0E27                     	;# 
  2490  0E28                     	;# 
  2491  0E29                     	;# 
  2492  0E2A                     	;# 
  2493  0E2B                     	;# 
  2494  0E2C                     	;# 
  2495  0E2D                     	;# 
  2496  0E2E                     	;# 
  2497  0E2F                     	;# 
  2498  0E30                     	;# 
  2499  0E31                     	;# 
  2500  0E32                     	;# 
  2501  0E33                     	;# 
  2502  0E34                     	;# 
  2503  0E35                     	;# 
  2504  0E36                     	;# 
  2505  0E37                     	;# 
  2506  0E8F                     	;# 
  2507  0E90                     	;# 
  2508  0E91                     	;# 
  2509  0E92                     	;# 
  2510  0E93                     	;# 
  2511  0E94                     	;# 
  2512  0E95                     	;# 
  2513  0E96                     	;# 
  2514  0E97                     	;# 
  2515  0E9C                     	;# 
  2516  0E9D                     	;# 
  2517  0E9E                     	;# 
  2518  0EA1                     	;# 
  2519  0EA2                     	;# 
  2520  0EA3                     	;# 
  2521  0EA4                     	;# 
  2522  0EA5                     	;# 
  2523  0EA9                     	;# 
  2524  0EAA                     	;# 
  2525  0EAB                     	;# 
  2526  0EAC                     	;# 
  2527  0EB1                     	;# 
  2528  0EB2                     	;# 
  2529  0EB3                     	;# 
  2530  0EB8                     	;# 
  2531  0EB9                     	;# 
  2532  0EBA                     	;# 
  2533  0EBB                     	;# 
  2534  0EBC                     	;# 
  2535  0EBD                     	;# 
  2536  0EBE                     	;# 
  2537  0EC3                     	;# 
  2538  0EC5                     	;# 
  2539  0EC6                     	;# 
  2540  0EC7                     	;# 
  2541  0EC8                     	;# 
  2542  0EC9                     	;# 
  2543  0ECA                     	;# 
  2544  0ECB                     	;# 
  2545  0ECC                     	;# 
  2546  0F10                     	;# 
  2547  0F11                     	;# 
  2548  0F12                     	;# 
  2549  0F13                     	;# 
  2550  0F14                     	;# 
  2551  0F15                     	;# 
  2552  0F16                     	;# 
  2553  0F17                     	;# 
  2554  0F18                     	;# 
  2555  0F19                     	;# 
  2556  0F1A                     	;# 
  2557  0F1B                     	;# 
  2558  0F1C                     	;# 
  2559  0F1D                     	;# 
  2560  0F1E                     	;# 
  2561  0F1F                     	;# 
  2562  0F20                     	;# 
  2563  0F21                     	;# 
  2564  0F22                     	;# 
  2565  0F23                     	;# 
  2566  0F24                     	;# 
  2567  0F25                     	;# 
  2568  0F26                     	;# 
  2569  0F27                     	;# 
  2570  0F38                     	;# 
  2571  0F39                     	;# 
  2572  0F3A                     	;# 
  2573  0F3B                     	;# 
  2574  0F3C                     	;# 
  2575  0F3D                     	;# 
  2576  0F3E                     	;# 
  2577  0F3F                     	;# 
  2578  0F40                     	;# 
  2579  0F41                     	;# 
  2580  0F43                     	;# 
  2581  0F44                     	;# 
  2582  0F45                     	;# 
  2583  0F46                     	;# 
  2584  0F47                     	;# 
  2585  0F48                     	;# 
  2586  0F49                     	;# 
  2587  0F4A                     	;# 
  2588  0F4B                     	;# 
  2589  0F4C                     	;# 
  2590  0F4E                     	;# 
  2591  0F4F                     	;# 
  2592  0F50                     	;# 
  2593  0F51                     	;# 
  2594  0F52                     	;# 
  2595  0F53                     	;# 
  2596  0F54                     	;# 
  2597  0F55                     	;# 
  2598  0F56                     	;# 
  2599  0F57                     	;# 
  2600  0F65                     	;# 
  2601  0F68                     	;# 
  2602  0F69                     	;# 
  2603  0F6A                     	;# 
  2604  0F6B                     	;# 
  2605  0FE4                     	;# 
  2606  0FE5                     	;# 
  2607  0FE6                     	;# 
  2608  0FE7                     	;# 
  2609  0FE8                     	;# 
  2610  0FE9                     	;# 
  2611  0FEA                     	;# 
  2612  0FEB                     	;# 
  2613  0FED                     	;# 
  2614  0FEE                     	;# 
  2615  0FEF                     	;# 
  2616  0000                     	;# 
  2617  0001                     	;# 
  2618  0002                     	;# 
  2619  0003                     	;# 
  2620  0004                     	;# 
  2621  0005                     	;# 
  2622  0006                     	;# 
  2623  0007                     	;# 
  2624  0008                     	;# 
  2625  0009                     	;# 
  2626  000A                     	;# 
  2627  000B                     	;# 
  2628  000C                     	;# 
  2629  000D                     	;# 
  2630  000E                     	;# 
  2631  0010                     	;# 
  2632  0011                     	;# 
  2633  0012                     	;# 
  2634  0013                     	;# 
  2635  0016                     	;# 
  2636  0017                     	;# 
  2637  0018                     	;# 
  2638  001C                     	;# 
  2639  001C                     	;# 
  2640  001D                     	;# 
  2641  001D                     	;# 
  2642  001E                     	;# 
  2643  001F                     	;# 
  2644  008C                     	;# 
  2645  008C                     	;# 
  2646  008D                     	;# 
  2647  008E                     	;# 
  2648  008E                     	;# 
  2649  008F                     	;# 
  2650  0090                     	;# 
  2651  0090                     	;# 
  2652  0091                     	;# 
  2653  0093                     	;# 
  2654  0094                     	;# 
  2655  0095                     	;# 
  2656  0096                     	;# 
  2657  0097                     	;# 
  2658  0098                     	;# 
  2659  0099                     	;# 
  2660  009A                     	;# 
  2661  009B                     	;# 
  2662  009C                     	;# 
  2663  009D                     	;# 
  2664  009E                     	;# 
  2665  010C                     	;# 
  2666  010D                     	;# 
  2667  010E                     	;# 
  2668  010E                     	;# 
  2669  010F                     	;# 
  2670  0110                     	;# 
  2671  0110                     	;# 
  2672  0111                     	;# 
  2673  0112                     	;# 
  2674  0112                     	;# 
  2675  0113                     	;# 
  2676  0114                     	;# 
  2677  0114                     	;# 
  2678  0115                     	;# 
  2679  0116                     	;# 
  2680  0116                     	;# 
  2681  0117                     	;# 
  2682  0119                     	;# 
  2683  0119                     	;# 
  2684  0119                     	;# 
  2685  011A                     	;# 
  2686  011A                     	;# 
  2687  011A                     	;# 
  2688  011B                     	;# 
  2689  011B                     	;# 
  2690  011B                     	;# 
  2691  011B                     	;# 
  2692  011B                     	;# 
  2693  011C                     	;# 
  2694  011C                     	;# 
  2695  011C                     	;# 
  2696  011D                     	;# 
  2697  011D                     	;# 
  2698  011D                     	;# 
  2699  011E                     	;# 
  2700  011E                     	;# 
  2701  011E                     	;# 
  2702  011F                     	;# 
  2703  011F                     	;# 
  2704  011F                     	;# 
  2705  011F                     	;# 
  2706  011F                     	;# 
  2707  018C                     	;# 
  2708  018D                     	;# 
  2709  018E                     	;# 
  2710  018F                     	;# 
  2711  0190                     	;# 
  2712  0191                     	;# 
  2713  0192                     	;# 
  2714  0196                     	;# 
  2715  0197                     	;# 
  2716  0198                     	;# 
  2717  0199                     	;# 
  2718  019A                     	;# 
  2719  019B                     	;# 
  2720  019C                     	;# 
  2721  020C                     	;# 
  2722  020D                     	;# 
  2723  020E                     	;# 
  2724  020F                     	;# 
  2725  020F                     	;# 
  2726  0210                     	;# 
  2727  0210                     	;# 
  2728  0211                     	;# 
  2729  0211                     	;# 
  2730  0212                     	;# 
  2731  0213                     	;# 
  2732  0214                     	;# 
  2733  0215                     	;# 
  2734  0215                     	;# 
  2735  0216                     	;# 
  2736  0216                     	;# 
  2737  0217                     	;# 
  2738  0217                     	;# 
  2739  0218                     	;# 
  2740  0219                     	;# 
  2741  021A                     	;# 
  2742  021B                     	;# 
  2743  021B                     	;# 
  2744  021C                     	;# 
  2745  021C                     	;# 
  2746  021D                     	;# 
  2747  021D                     	;# 
  2748  021E                     	;# 
  2749  021F                     	;# 
  2750  028C                     	;# 
  2751  028C                     	;# 
  2752  028D                     	;# 
  2753  028D                     	;# 
  2754  028E                     	;# 
  2755  028F                     	;# 
  2756  0290                     	;# 
  2757  0290                     	;# 
  2758  0291                     	;# 
  2759  0292                     	;# 
  2760  0292                     	;# 
  2761  0293                     	;# 
  2762  0293                     	;# 
  2763  0294                     	;# 
  2764  0295                     	;# 
  2765  0296                     	;# 
  2766  0296                     	;# 
  2767  0297                     	;# 
  2768  0298                     	;# 
  2769  0298                     	;# 
  2770  0299                     	;# 
  2771  0299                     	;# 
  2772  029A                     	;# 
  2773  029B                     	;# 
  2774  029C                     	;# 
  2775  029C                     	;# 
  2776  029D                     	;# 
  2777  030C                     	;# 
  2778  030C                     	;# 
  2779  030D                     	;# 
  2780  030E                     	;# 
  2781  030F                     	;# 
  2782  0310                     	;# 
  2783  0310                     	;# 
  2784  0311                     	;# 
  2785  0312                     	;# 
  2786  0313                     	;# 
  2787  0314                     	;# 
  2788  0314                     	;# 
  2789  0315                     	;# 
  2790  0316                     	;# 
  2791  0317                     	;# 
  2792  0318                     	;# 
  2793  0318                     	;# 
  2794  0319                     	;# 
  2795  031A                     	;# 
  2796  031B                     	;# 
  2797  031C                     	;# 
  2798  031C                     	;# 
  2799  031D                     	;# 
  2800  031E                     	;# 
  2801  031F                     	;# 
  2802  038C                     	;# 
  2803  038D                     	;# 
  2804  038E                     	;# 
  2805  0390                     	;# 
  2806  0391                     	;# 
  2807  0392                     	;# 
  2808  040C                     	;# 
  2809  040D                     	;# 
  2810  040E                     	;# 
  2811  040F                     	;# 
  2812  0410                     	;# 
  2813  0411                     	;# 
  2814  0416                     	;# 
  2815  0416                     	;# 
  2816  0417                     	;# 
  2817  0418                     	;# 
  2818  0418                     	;# 
  2819  0419                     	;# 
  2820  041A                     	;# 
  2821  041A                     	;# 
  2822  041B                     	;# 
  2823  041C                     	;# 
  2824  041C                     	;# 
  2825  041D                     	;# 
  2826  041E                     	;# 
  2827  041F                     	;# 
  2828  048C                     	;# 
  2829  048C                     	;# 
  2830  048D                     	;# 
  2831  048E                     	;# 
  2832  048F                     	;# 
  2833  048F                     	;# 
  2834  0490                     	;# 
  2835  0491                     	;# 
  2836  0492                     	;# 
  2837  0492                     	;# 
  2838  0493                     	;# 
  2839  0494                     	;# 
  2840  0495                     	;# 
  2841  0495                     	;# 
  2842  0496                     	;# 
  2843  0497                     	;# 
  2844  0498                     	;# 
  2845  0499                     	;# 
  2846  049A                     	;# 
  2847  049B                     	;# 
  2848  049C                     	;# 
  2849  049D                     	;# 
  2850  050C                     	;# 
  2851  050C                     	;# 
  2852  050D                     	;# 
  2853  050E                     	;# 
  2854  050F                     	;# 
  2855  050F                     	;# 
  2856  0510                     	;# 
  2857  0511                     	;# 
  2858  0512                     	;# 
  2859  0512                     	;# 
  2860  0513                     	;# 
  2861  0514                     	;# 
  2862  0515                     	;# 
  2863  0515                     	;# 
  2864  0516                     	;# 
  2865  0517                     	;# 
  2866  0518                     	;# 
  2867  0519                     	;# 
  2868  051A                     	;# 
  2869  051B                     	;# 
  2870  051C                     	;# 
  2871  051D                     	;# 
  2872  058C                     	;# 
  2873  058C                     	;# 
  2874  058D                     	;# 
  2875  058E                     	;# 
  2876  058F                     	;# 
  2877  058F                     	;# 
  2878  0590                     	;# 
  2879  0591                     	;# 
  2880  0592                     	;# 
  2881  0593                     	;# 
  2882  060C                     	;# 
  2883  060D                     	;# 
  2884  060E                     	;# 
  2885  060F                     	;# 
  2886  0610                     	;# 
  2887  0611                     	;# 
  2888  0612                     	;# 
  2889  0613                     	;# 
  2890  0614                     	;# 
  2891  0616                     	;# 
  2892  0617                     	;# 
  2893  0618                     	;# 
  2894  0619                     	;# 
  2895  061A                     	;# 
  2896  061B                     	;# 
  2897  061C                     	;# 
  2898  061D                     	;# 
  2899  061E                     	;# 
  2900  068C                     	;# 
  2901  068D                     	;# 
  2902  068E                     	;# 
  2903  068F                     	;# 
  2904  0690                     	;# 
  2905  0691                     	;# 
  2906  0692                     	;# 
  2907  0693                     	;# 
  2908  0694                     	;# 
  2909  070C                     	;# 
  2910  070D                     	;# 
  2911  070E                     	;# 
  2912  070F                     	;# 
  2913  0710                     	;# 
  2914  0711                     	;# 
  2915  0712                     	;# 
  2916  0713                     	;# 
  2917  0714                     	;# 
  2918  0716                     	;# 
  2919  0717                     	;# 
  2920  0718                     	;# 
  2921  0719                     	;# 
  2922  071A                     	;# 
  2923  071B                     	;# 
  2924  071C                     	;# 
  2925  071D                     	;# 
  2926  071E                     	;# 
  2927  0796                     	;# 
  2928  0797                     	;# 
  2929  0798                     	;# 
  2930  0799                     	;# 
  2931  079A                     	;# 
  2932  079B                     	;# 
  2933  080C                     	;# 
  2934  080D                     	;# 
  2935  080E                     	;# 
  2936  080F                     	;# 
  2937  0810                     	;# 
  2938  0811                     	;# 
  2939  0812                     	;# 
  2940  0813                     	;# 
  2941  0814                     	;# 
  2942  081A                     	;# 
  2943  081B                     	;# 
  2944  081C                     	;# 
  2945  081D                     	;# 
  2946  081E                     	;# 
  2947  081F                     	;# 
  2948  088C                     	;# 
  2949  088D                     	;# 
  2950  088E                     	;# 
  2951  088F                     	;# 
  2952  0890                     	;# 
  2953  0891                     	;# 
  2954  0892                     	;# 
  2955  0893                     	;# 
  2956  0895                     	;# 
  2957  0896                     	;# 
  2958  0897                     	;# 
  2959  0898                     	;# 
  2960  0899                     	;# 
  2961  089A                     	;# 
  2962  089B                     	;# 
  2963  090C                     	;# 
  2964  090E                     	;# 
  2965  090F                     	;# 
  2966  091F                     	;# 
  2967  091F                     	;# 
  2968  098F                     	;# 
  2969  098F                     	;# 
  2970  0990                     	;# 
  2971  0991                     	;# 
  2972  0992                     	;# 
  2973  0993                     	;# 
  2974  0994                     	;# 
  2975  0995                     	;# 
  2976  0996                     	;# 
  2977  0997                     	;# 
  2978  0E0F                     	;# 
  2979  0E10                     	;# 
  2980  0E11                     	;# 
  2981  0E12                     	;# 
  2982  0E13                     	;# 
  2983  0E14                     	;# 
  2984  0E15                     	;# 
  2985  0E16                     	;# 
  2986  0E17                     	;# 
  2987  0E18                     	;# 
  2988  0E19                     	;# 
  2989  0E1A                     	;# 
  2990  0E1B                     	;# 
  2991  0E1C                     	;# 
  2992  0E1D                     	;# 
  2993  0E1E                     	;# 
  2994  0E1F                     	;# 
  2995  0E20                     	;# 
  2996  0E21                     	;# 
  2997  0E22                     	;# 
  2998  0E23                     	;# 
  2999  0E24                     	;# 
  3000  0E25                     	;# 
  3001  0E26                     	;# 
  3002  0E27                     	;# 
  3003  0E28                     	;# 
  3004  0E29                     	;# 
  3005  0E2A                     	;# 
  3006  0E2B                     	;# 
  3007  0E2C                     	;# 
  3008  0E2D                     	;# 
  3009  0E2E                     	;# 
  3010  0E2F                     	;# 
  3011  0E30                     	;# 
  3012  0E31                     	;# 
  3013  0E32                     	;# 
  3014  0E33                     	;# 
  3015  0E34                     	;# 
  3016  0E35                     	;# 
  3017  0E36                     	;# 
  3018  0E37                     	;# 
  3019  0E8F                     	;# 
  3020  0E90                     	;# 
  3021  0E91                     	;# 
  3022  0E92                     	;# 
  3023  0E93                     	;# 
  3024  0E94                     	;# 
  3025  0E95                     	;# 
  3026  0E96                     	;# 
  3027  0E97                     	;# 
  3028  0E9C                     	;# 
  3029  0E9D                     	;# 
  3030  0E9E                     	;# 
  3031  0EA1                     	;# 
  3032  0EA2                     	;# 
  3033  0EA3                     	;# 
  3034  0EA4                     	;# 
  3035  0EA5                     	;# 
  3036  0EA9                     	;# 
  3037  0EAA                     	;# 
  3038  0EAB                     	;# 
  3039  0EAC                     	;# 
  3040  0EB1                     	;# 
  3041  0EB2                     	;# 
  3042  0EB3                     	;# 
  3043  0EB8                     	;# 
  3044  0EB9                     	;# 
  3045  0EBA                     	;# 
  3046  0EBB                     	;# 
  3047  0EBC                     	;# 
  3048  0EBD                     	;# 
  3049  0EBE                     	;# 
  3050  0EC3                     	;# 
  3051  0EC5                     	;# 
  3052  0EC6                     	;# 
  3053  0EC7                     	;# 
  3054  0EC8                     	;# 
  3055  0EC9                     	;# 
  3056  0ECA                     	;# 
  3057  0ECB                     	;# 
  3058  0ECC                     	;# 
  3059  0F10                     	;# 
  3060  0F11                     	;# 
  3061  0F12                     	;# 
  3062  0F13                     	;# 
  3063  0F14                     	;# 
  3064  0F15                     	;# 
  3065  0F16                     	;# 
  3066  0F17                     	;# 
  3067  0F18                     	;# 
  3068  0F19                     	;# 
  3069  0F1A                     	;# 
  3070  0F1B                     	;# 
  3071  0F1C                     	;# 
  3072  0F1D                     	;# 
  3073  0F1E                     	;# 
  3074  0F1F                     	;# 
  3075  0F20                     	;# 
  3076  0F21                     	;# 
  3077  0F22                     	;# 
  3078  0F23                     	;# 
  3079  0F24                     	;# 
  3080  0F25                     	;# 
  3081  0F26                     	;# 
  3082  0F27                     	;# 
  3083  0F38                     	;# 
  3084  0F39                     	;# 
  3085  0F3A                     	;# 
  3086  0F3B                     	;# 
  3087  0F3C                     	;# 
  3088  0F3D                     	;# 
  3089  0F3E                     	;# 
  3090  0F3F                     	;# 
  3091  0F40                     	;# 
  3092  0F41                     	;# 
  3093  0F43                     	;# 
  3094  0F44                     	;# 
  3095  0F45                     	;# 
  3096  0F46                     	;# 
  3097  0F47                     	;# 
  3098  0F48                     	;# 
  3099  0F49                     	;# 
  3100  0F4A                     	;# 
  3101  0F4B                     	;# 
  3102  0F4C                     	;# 
  3103  0F4E                     	;# 
  3104  0F4F                     	;# 
  3105  0F50                     	;# 
  3106  0F51                     	;# 
  3107  0F52                     	;# 
  3108  0F53                     	;# 
  3109  0F54                     	;# 
  3110  0F55                     	;# 
  3111  0F56                     	;# 
  3112  0F57                     	;# 
  3113  0F65                     	;# 
  3114  0F68                     	;# 
  3115  0F69                     	;# 
  3116  0F6A                     	;# 
  3117  0F6B                     	;# 
  3118  0FE4                     	;# 
  3119  0FE5                     	;# 
  3120  0FE6                     	;# 
  3121  0FE7                     	;# 
  3122  0FE8                     	;# 
  3123  0FE9                     	;# 
  3124  0FEA                     	;# 
  3125  0FEB                     	;# 
  3126  0FED                     	;# 
  3127  0FEE                     	;# 
  3128  0FEF                     	;# 
  3129  0000                     	;# 
  3130  0001                     	;# 
  3131  0002                     	;# 
  3132  0003                     	;# 
  3133  0004                     	;# 
  3134  0005                     	;# 
  3135  0006                     	;# 
  3136  0007                     	;# 
  3137  0008                     	;# 
  3138  0009                     	;# 
  3139  000A                     	;# 
  3140  000B                     	;# 
  3141  000C                     	;# 
  3142  000D                     	;# 
  3143  000E                     	;# 
  3144  0010                     	;# 
  3145  0011                     	;# 
  3146  0012                     	;# 
  3147  0013                     	;# 
  3148  0016                     	;# 
  3149  0017                     	;# 
  3150  0018                     	;# 
  3151  001C                     	;# 
  3152  001C                     	;# 
  3153  001D                     	;# 
  3154  001D                     	;# 
  3155  001E                     	;# 
  3156  001F                     	;# 
  3157  008C                     	;# 
  3158  008C                     	;# 
  3159  008D                     	;# 
  3160  008E                     	;# 
  3161  008E                     	;# 
  3162  008F                     	;# 
  3163  0090                     	;# 
  3164  0090                     	;# 
  3165  0091                     	;# 
  3166  0093                     	;# 
  3167  0094                     	;# 
  3168  0095                     	;# 
  3169  0096                     	;# 
  3170  0097                     	;# 
  3171  0098                     	;# 
  3172  0099                     	;# 
  3173  009A                     	;# 
  3174  009B                     	;# 
  3175  009C                     	;# 
  3176  009D                     	;# 
  3177  009E                     	;# 
  3178  010C                     	;# 
  3179  010D                     	;# 
  3180  010E                     	;# 
  3181  010E                     	;# 
  3182  010F                     	;# 
  3183  0110                     	;# 
  3184  0110                     	;# 
  3185  0111                     	;# 
  3186  0112                     	;# 
  3187  0112                     	;# 
  3188  0113                     	;# 
  3189  0114                     	;# 
  3190  0114                     	;# 
  3191  0115                     	;# 
  3192  0116                     	;# 
  3193  0116                     	;# 
  3194  0117                     	;# 
  3195  0119                     	;# 
  3196  0119                     	;# 
  3197  0119                     	;# 
  3198  011A                     	;# 
  3199  011A                     	;# 
  3200  011A                     	;# 
  3201  011B                     	;# 
  3202  011B                     	;# 
  3203  011B                     	;# 
  3204  011B                     	;# 
  3205  011B                     	;# 
  3206  011C                     	;# 
  3207  011C                     	;# 
  3208  011C                     	;# 
  3209  011D                     	;# 
  3210  011D                     	;# 
  3211  011D                     	;# 
  3212  011E                     	;# 
  3213  011E                     	;# 
  3214  011E                     	;# 
  3215  011F                     	;# 
  3216  011F                     	;# 
  3217  011F                     	;# 
  3218  011F                     	;# 
  3219  011F                     	;# 
  3220  018C                     	;# 
  3221  018D                     	;# 
  3222  018E                     	;# 
  3223  018F                     	;# 
  3224  0190                     	;# 
  3225  0191                     	;# 
  3226  0192                     	;# 
  3227  0196                     	;# 
  3228  0197                     	;# 
  3229  0198                     	;# 
  3230  0199                     	;# 
  3231  019A                     	;# 
  3232  019B                     	;# 
  3233  019C                     	;# 
  3234  020C                     	;# 
  3235  020D                     	;# 
  3236  020E                     	;# 
  3237  020F                     	;# 
  3238  020F                     	;# 
  3239  0210                     	;# 
  3240  0210                     	;# 
  3241  0211                     	;# 
  3242  0211                     	;# 
  3243  0212                     	;# 
  3244  0213                     	;# 
  3245  0214                     	;# 
  3246  0215                     	;# 
  3247  0215                     	;# 
  3248  0216                     	;# 
  3249  0216                     	;# 
  3250  0217                     	;# 
  3251  0217                     	;# 
  3252  0218                     	;# 
  3253  0219                     	;# 
  3254  021A                     	;# 
  3255  021B                     	;# 
  3256  021B                     	;# 
  3257  021C                     	;# 
  3258  021C                     	;# 
  3259  021D                     	;# 
  3260  021D                     	;# 
  3261  021E                     	;# 
  3262  021F                     	;# 
  3263  028C                     	;# 
  3264  028C                     	;# 
  3265  028D                     	;# 
  3266  028D                     	;# 
  3267  028E                     	;# 
  3268  028F                     	;# 
  3269  0290                     	;# 
  3270  0290                     	;# 
  3271  0291                     	;# 
  3272  0292                     	;# 
  3273  0292                     	;# 
  3274  0293                     	;# 
  3275  0293                     	;# 
  3276  0294                     	;# 
  3277  0295                     	;# 
  3278  0296                     	;# 
  3279  0296                     	;# 
  3280  0297                     	;# 
  3281  0298                     	;# 
  3282  0298                     	;# 
  3283  0299                     	;# 
  3284  0299                     	;# 
  3285  029A                     	;# 
  3286  029B                     	;# 
  3287  029C                     	;# 
  3288  029C                     	;# 
  3289  029D                     	;# 
  3290  030C                     	;# 
  3291  030C                     	;# 
  3292  030D                     	;# 
  3293  030E                     	;# 
  3294  030F                     	;# 
  3295  0310                     	;# 
  3296  0310                     	;# 
  3297  0311                     	;# 
  3298  0312                     	;# 
  3299  0313                     	;# 
  3300  0314                     	;# 
  3301  0314                     	;# 
  3302  0315                     	;# 
  3303  0316                     	;# 
  3304  0317                     	;# 
  3305  0318                     	;# 
  3306  0318                     	;# 
  3307  0319                     	;# 
  3308  031A                     	;# 
  3309  031B                     	;# 
  3310  031C                     	;# 
  3311  031C                     	;# 
  3312  031D                     	;# 
  3313  031E                     	;# 
  3314  031F                     	;# 
  3315  038C                     	;# 
  3316  038D                     	;# 
  3317  038E                     	;# 
  3318  0390                     	;# 
  3319  0391                     	;# 
  3320  0392                     	;# 
  3321  040C                     	;# 
  3322  040D                     	;# 
  3323  040E                     	;# 
  3324  040F                     	;# 
  3325  0410                     	;# 
  3326  0411                     	;# 
  3327  0416                     	;# 
  3328  0416                     	;# 
  3329  0417                     	;# 
  3330  0418                     	;# 
  3331  0418                     	;# 
  3332  0419                     	;# 
  3333  041A                     	;# 
  3334  041A                     	;# 
  3335  041B                     	;# 
  3336  041C                     	;# 
  3337  041C                     	;# 
  3338  041D                     	;# 
  3339  041E                     	;# 
  3340  041F                     	;# 
  3341  048C                     	;# 
  3342  048C                     	;# 
  3343  048D                     	;# 
  3344  048E                     	;# 
  3345  048F                     	;# 
  3346  048F                     	;# 
  3347  0490                     	;# 
  3348  0491                     	;# 
  3349  0492                     	;# 
  3350  0492                     	;# 
  3351  0493                     	;# 
  3352  0494                     	;# 
  3353  0495                     	;# 
  3354  0495                     	;# 
  3355  0496                     	;# 
  3356  0497                     	;# 
  3357  0498                     	;# 
  3358  0499                     	;# 
  3359  049A                     	;# 
  3360  049B                     	;# 
  3361  049C                     	;# 
  3362  049D                     	;# 
  3363  050C                     	;# 
  3364  050C                     	;# 
  3365  050D                     	;# 
  3366  050E                     	;# 
  3367  050F                     	;# 
  3368  050F                     	;# 
  3369  0510                     	;# 
  3370  0511                     	;# 
  3371  0512                     	;# 
  3372  0512                     	;# 
  3373  0513                     	;# 
  3374  0514                     	;# 
  3375  0515                     	;# 
  3376  0515                     	;# 
  3377  0516                     	;# 
  3378  0517                     	;# 
  3379  0518                     	;# 
  3380  0519                     	;# 
  3381  051A                     	;# 
  3382  051B                     	;# 
  3383  051C                     	;# 
  3384  051D                     	;# 
  3385  058C                     	;# 
  3386  058C                     	;# 
  3387  058D                     	;# 
  3388  058E                     	;# 
  3389  058F                     	;# 
  3390  058F                     	;# 
  3391  0590                     	;# 
  3392  0591                     	;# 
  3393  0592                     	;# 
  3394  0593                     	;# 
  3395  060C                     	;# 
  3396  060D                     	;# 
  3397  060E                     	;# 
  3398  060F                     	;# 
  3399  0610                     	;# 
  3400  0611                     	;# 
  3401  0612                     	;# 
  3402  0613                     	;# 
  3403  0614                     	;# 
  3404  0616                     	;# 
  3405  0617                     	;# 
  3406  0618                     	;# 
  3407  0619                     	;# 
  3408  061A                     	;# 
  3409  061B                     	;# 
  3410  061C                     	;# 
  3411  061D                     	;# 
  3412  061E                     	;# 
  3413  068C                     	;# 
  3414  068D                     	;# 
  3415  068E                     	;# 
  3416  068F                     	;# 
  3417  0690                     	;# 
  3418  0691                     	;# 
  3419  0692                     	;# 
  3420  0693                     	;# 
  3421  0694                     	;# 
  3422  070C                     	;# 
  3423  070D                     	;# 
  3424  070E                     	;# 
  3425  070F                     	;# 
  3426  0710                     	;# 
  3427  0711                     	;# 
  3428  0712                     	;# 
  3429  0713                     	;# 
  3430  0714                     	;# 
  3431  0716                     	;# 
  3432  0717                     	;# 
  3433  0718                     	;# 
  3434  0719                     	;# 
  3435  071A                     	;# 
  3436  071B                     	;# 
  3437  071C                     	;# 
  3438  071D                     	;# 
  3439  071E                     	;# 
  3440  0796                     	;# 
  3441  0797                     	;# 
  3442  0798                     	;# 
  3443  0799                     	;# 
  3444  079A                     	;# 
  3445  079B                     	;# 
  3446  080C                     	;# 
  3447  080D                     	;# 
  3448  080E                     	;# 
  3449  080F                     	;# 
  3450  0810                     	;# 
  3451  0811                     	;# 
  3452  0812                     	;# 
  3453  0813                     	;# 
  3454  0814                     	;# 
  3455  081A                     	;# 
  3456  081B                     	;# 
  3457  081C                     	;# 
  3458  081D                     	;# 
  3459  081E                     	;# 
  3460  081F                     	;# 
  3461  088C                     	;# 
  3462  088D                     	;# 
  3463  088E                     	;# 
  3464  088F                     	;# 
  3465  0890                     	;# 
  3466  0891                     	;# 
  3467  0892                     	;# 
  3468  0893                     	;# 
  3469  0895                     	;# 
  3470  0896                     	;# 
  3471  0897                     	;# 
  3472  0898                     	;# 
  3473  0899                     	;# 
  3474  089A                     	;# 
  3475  089B                     	;# 
  3476  090C                     	;# 
  3477  090E                     	;# 
  3478  090F                     	;# 
  3479  091F                     	;# 
  3480  091F                     	;# 
  3481  098F                     	;# 
  3482  098F                     	;# 
  3483  0990                     	;# 
  3484  0991                     	;# 
  3485  0992                     	;# 
  3486  0993                     	;# 
  3487  0994                     	;# 
  3488  0995                     	;# 
  3489  0996                     	;# 
  3490  0997                     	;# 
  3491  0E0F                     	;# 
  3492  0E10                     	;# 
  3493  0E11                     	;# 
  3494  0E12                     	;# 
  3495  0E13                     	;# 
  3496  0E14                     	;# 
  3497  0E15                     	;# 
  3498  0E16                     	;# 
  3499  0E17                     	;# 
  3500  0E18                     	;# 
  3501  0E19                     	;# 
  3502  0E1A                     	;# 
  3503  0E1B                     	;# 
  3504  0E1C                     	;# 
  3505  0E1D                     	;# 
  3506  0E1E                     	;# 
  3507  0E1F                     	;# 
  3508  0E20                     	;# 
  3509  0E21                     	;# 
  3510  0E22                     	;# 
  3511  0E23                     	;# 
  3512  0E24                     	;# 
  3513  0E25                     	;# 
  3514  0E26                     	;# 
  3515  0E27                     	;# 
  3516  0E28                     	;# 
  3517  0E29                     	;# 
  3518  0E2A                     	;# 
  3519  0E2B                     	;# 
  3520  0E2C                     	;# 
  3521  0E2D                     	;# 
  3522  0E2E                     	;# 
  3523  0E2F                     	;# 
  3524  0E30                     	;# 
  3525  0E31                     	;# 
  3526  0E32                     	;# 
  3527  0E33                     	;# 
  3528  0E34                     	;# 
  3529  0E35                     	;# 
  3530  0E36                     	;# 
  3531  0E37                     	;# 
  3532  0E8F                     	;# 
  3533  0E90                     	;# 
  3534  0E91                     	;# 
  3535  0E92                     	;# 
  3536  0E93                     	;# 
  3537  0E94                     	;# 
  3538  0E95                     	;# 
  3539  0E96                     	;# 
  3540  0E97                     	;# 
  3541  0E9C                     	;# 
  3542  0E9D                     	;# 
  3543  0E9E                     	;# 
  3544  0EA1                     	;# 
  3545  0EA2                     	;# 
  3546  0EA3                     	;# 
  3547  0EA4                     	;# 
  3548  0EA5                     	;# 
  3549  0EA9                     	;# 
  3550  0EAA                     	;# 
  3551  0EAB                     	;# 
  3552  0EAC                     	;# 
  3553  0EB1                     	;# 
  3554  0EB2                     	;# 
  3555  0EB3                     	;# 
  3556  0EB8                     	;# 
  3557  0EB9                     	;# 
  3558  0EBA                     	;# 
  3559  0EBB                     	;# 
  3560  0EBC                     	;# 
  3561  0EBD                     	;# 
  3562  0EBE                     	;# 
  3563  0EC3                     	;# 
  3564  0EC5                     	;# 
  3565  0EC6                     	;# 
  3566  0EC7                     	;# 
  3567  0EC8                     	;# 
  3568  0EC9                     	;# 
  3569  0ECA                     	;# 
  3570  0ECB                     	;# 
  3571  0ECC                     	;# 
  3572  0F10                     	;# 
  3573  0F11                     	;# 
  3574  0F12                     	;# 
  3575  0F13                     	;# 
  3576  0F14                     	;# 
  3577  0F15                     	;# 
  3578  0F16                     	;# 
  3579  0F17                     	;# 
  3580  0F18                     	;# 
  3581  0F19                     	;# 
  3582  0F1A                     	;# 
  3583  0F1B                     	;# 
  3584  0F1C                     	;# 
  3585  0F1D                     	;# 
  3586  0F1E                     	;# 
  3587  0F1F                     	;# 
  3588  0F20                     	;# 
  3589  0F21                     	;# 
  3590  0F22                     	;# 
  3591  0F23                     	;# 
  3592  0F24                     	;# 
  3593  0F25                     	;# 
  3594  0F26                     	;# 
  3595  0F27                     	;# 
  3596  0F38                     	;# 
  3597  0F39                     	;# 
  3598  0F3A                     	;# 
  3599  0F3B                     	;# 
  3600  0F3C                     	;# 
  3601  0F3D                     	;# 
  3602  0F3E                     	;# 
  3603  0F3F                     	;# 
  3604  0F40                     	;# 
  3605  0F41                     	;# 
  3606  0F43                     	;# 
  3607  0F44                     	;# 
  3608  0F45                     	;# 
  3609  0F46                     	;# 
  3610  0F47                     	;# 
  3611  0F48                     	;# 
  3612  0F49                     	;# 
  3613  0F4A                     	;# 
  3614  0F4B                     	;# 
  3615  0F4C                     	;# 
  3616  0F4E                     	;# 
  3617  0F4F                     	;# 
  3618  0F50                     	;# 
  3619  0F51                     	;# 
  3620  0F52                     	;# 
  3621  0F53                     	;# 
  3622  0F54                     	;# 
  3623  0F55                     	;# 
  3624  0F56                     	;# 
  3625  0F57                     	;# 
  3626  0F65                     	;# 
  3627  0F68                     	;# 
  3628  0F69                     	;# 
  3629  0F6A                     	;# 
  3630  0F6B                     	;# 
  3631  0FE4                     	;# 
  3632  0FE5                     	;# 
  3633  0FE6                     	;# 
  3634  0FE7                     	;# 
  3635  0FE8                     	;# 
  3636  0FE9                     	;# 
  3637  0FEA                     	;# 
  3638  0FEB                     	;# 
  3639  0FED                     	;# 
  3640  0FEE                     	;# 
  3641  0FEF                     	;_samples
  3642                           
  3643                           	psect	idataBANK1
  3644  0D0B                     __pidataBANK1:	
  3645                           
  3646                           ;initializer for ___cgram
  3647  0D0B  340C               	retlw	12
  3648  0D0C  3412               	retlw	18
  3649  0D0D  3412               	retlw	18
  3650  0D0E  340C               	retlw	12
  3651  0D0F  3400               	retlw	0
  3652  0D10  3400               	retlw	0
  3653  0D11  3400               	retlw	0
  3654  0D12  3400               	retlw	0
  3655  0D13  340A               	retlw	10
  3656  0D14  3415               	retlw	21
  3657  0D15  3411               	retlw	17
  3658  0D16  340A               	retlw	10
  3659  0D17  3404               	retlw	4
  3660  0D18  3400               	retlw	0
  3661  0D19  3400               	retlw	0
  3662  0D1A  3400               	retlw	0
  3663  0D1B  340A               	retlw	10
  3664  0D1C  341F               	retlw	31
  3665  0D1D  341F               	retlw	31
  3666  0D1E  340E               	retlw	14
  3667  0D1F  3404               	retlw	4
  3668  0D20  3400               	retlw	0
  3669  0D21  3400               	retlw	0
  3670  0D22  3400               	retlw	0
  3671                           
  3672                           	psect	stringtext
  3673  1000                     __pstringtext:	
  3674  1000                     log@coeff:	
  3675  1000  3400               	retlw	0
  3676  1001  3400               	retlw	0
  3677  1002  3400               	retlw	0
  3678  1003  3400               	retlw	0
  3679  1004  3480               	retlw	128
  3680  1005  343F               	retlw	63
  3681  1006  34F0               	retlw	240
  3682  1007  34FF               	retlw	255
  3683  1008  34BE               	retlw	190
  3684  1009  34E2               	retlw	226
  3685  100A  34A9               	retlw	169
  3686  100B  343E               	retlw	62
  3687  100C  3483               	retlw	131
  3688  100D  3476               	retlw	118
  3689  100E  34BE               	retlw	190
  3690  100F  34AE               	retlw	174
  3691  1010  342B               	retlw	43
  3692  1011  343E               	retlw	62
  3693  1012  343C               	retlw	60
  3694  1013  34C3               	retlw	195
  3695  1014  34BD               	retlw	189
  3696  1015  34D2               	retlw	210
  3697  1016  3413               	retlw	19
  3698  1017  343D               	retlw	61
  3699  1018  3478               	retlw	120
  3700  1019  34D3               	retlw	211
  3701  101A  34BB               	retlw	187
  3702  101B                     __end_oflog@coeff:	
  3703  0016                     _LATA	set	22
  3704  0017                     _LATB	set	23
  3705  0018                     _LATC	set	24
  3706  0011                     _TRISA	set	17
  3707  0012                     _TRISB	set	18
  3708  0013                     _TRISC	set	19
  3709  005F                     _GIE	set	95
  3710  0068                     _RB0	set	104
  3711  0069                     _RB1	set	105
  3712  006A                     _RB2	set	106
  3713  006B                     _RB3	set	107
  3714  006C                     _RB4	set	108
  3715  006D                     _RB5	set	109
  3716  009D                     _ADACQ	set	157
  3717  0099                     _ADACT	set	153
  3718  009B                     _ADCAP	set	155
  3719  0098                     _ADCLK	set	152
  3720  0093                     _ADCON0	set	147
  3721  0093                     _ADCON0bits	set	147
  3722  0094                     _ADCON1	set	148
  3723  0095                     _ADCON2	set	149
  3724  0096                     _ADCON3	set	150
  3725  009E                     _ADPCH	set	158
  3726  009C                     _ADPRE	set	156
  3727  009A                     _ADREF	set	154
  3728  008D                     _ADRESH	set	141
  3729  008C                     _ADRESL	set	140
  3730  0097                     _ADSTAT	set	151
  3731  010F                     _ADLTHH	set	271
  3732  010E                     _ADLTHL	set	270
  3733  010D                     _ADRPT	set	269
  3734  0113                     _ADSTPTH	set	275
  3735  0112                     _ADSTPTL	set	274
  3736  0111                     _ADUTHH	set	273
  3737  0110                     _ADUTHL	set	272
  3738  021F                     _CCPTMRS1bits	set	543
  3739  0290                     _T2CLKCON	set	656
  3740  028E                     _T2CON	set	654
  3741  028E                     _T2CONbits	set	654
  3742  028F                     _T2HLT	set	655
  3743  028D                     _T2PR	set	653
  3744  0291                     _T2RST	set	657
  3745  028C                     _T2TMR	set	652
  3746  038E                     _PWM6CON	set	910
  3747  038D                     _PWM6DCH	set	909
  3748  038C                     _PWM6DCL	set	908
  3749  0716                     _PIE0bits	set	1814
  3750  0710                     _PIR4bits	set	1808
  3751  088D                     _OSCCON1	set	2189
  3752  088F                     _OSCCON3	set	2191
  3753  0891                     _OSCEN	set	2193
  3754  0893                     _OSCFRQ	set	2195
  3755  0892                     _OSCTUNE	set	2194
  3756  090C                     _FVRCON	set	2316
  3757  0E8F                     _PPSLOCK	set	3727
  3758  0E8F                     _PPSLOCKbits	set	3727
  3759  0F38                     _ANSELA	set	3896
  3760  0F43                     _ANSELB	set	3907
  3761  0F4E                     _ANSELC	set	3918
  3762  0F11                     _RA1PPS	set	3857
  3763  0F39                     _WPUA	set	3897
  3764  0F44                     _WPUB	set	3908
  3765  0F4F                     _WPUC	set	3919
  3766  0F65                     _WPUE	set	3941
  3767                           
  3768                           ; #config settings
  3769  0000                     
  3770                           	psect	cinit
  3771  07DC                     start_initialization:	
  3772  07DC                     __initialization:		;BIGRAM
  3773                           
  3774                           ; Initialize objects allocated to BANK1
  3775  07DC  300B               	movlw	low __pidataBANK1
  3776  07DD  0084               	movwf	4
  3777  07DE  308D               	movlw	(high __pidataBANK1)| (0+128)
  3778  07DF  0085               	movwf	5
  3779  07E0  30A0               	movlw	low __pdataBANK1
  3780  07E1  0086               	movwf	6
  3781  07E2  3000               	movlw	high __pdataBANK1
  3782  07E3  0087               	movwf	7
  3783  07E4  3000               	movlw	0
  3784  07E5  00FF               	movwf	btemp+1
  3785  07E6  3018               	movlw	24
  3786  07E7  318C  246C  3187   	fcall	init_ram
  3787                           
  3788                           ; Clear objects allocated to BIGRAM
  3789  07EA  308C               	movlw	low (0+9100)
  3790  07EB  0084               	movwf	4
  3791  07EC  3023               	movlw	high (0+9100)
  3792  07ED  0085               	movwf	5
  3793  07EE  3064               	movlw	100
  3794  07EF  00FE               	movwf	btemp
  3795  07F0  3000               	movlw	0
  3796  07F1  00FF               	movwf	btemp+1
  3797  07F2  318C  2460         	fcall	clear_ram0
  3798                           
  3799                           ; Clear objects allocated to BANK0
  3800  07F4  01E6               	clrf	__pbssBANK0& (0+127)
  3801  07F5  01E7               	clrf	(__pbssBANK0+1)& (0+127)
  3802  07F6  01E8               	clrf	(__pbssBANK0+2)& (0+127)
  3803  07F7  01E9               	clrf	(__pbssBANK0+3)& (0+127)
  3804  07F8  01EA               	clrf	(__pbssBANK0+4)& (0+127)
  3805  07F9  01EB               	clrf	(__pbssBANK0+5)& (0+127)
  3806  07FA  01EC               	clrf	(__pbssBANK0+6)& (0+127)
  3807  07FB  01ED               	clrf	(__pbssBANK0+7)& (0+127)
  3808  07FC  01EE               	clrf	(__pbssBANK0+8)& (0+127)
  3809  07FD                     end_of_initialization:	
  3810                           ;End of C runtime variable initialization code
  3811                           
  3812  07FD                     __end_of__initialization:	
  3813  07FD  0020               	movlb	0
  3814  07FE  3185  2DE5         	ljmp	_main	;jump to C main() function
  3815                           
  3816                           	psect	bssBANK0
  3817  0066                     __pbssBANK0:	
  3818  0066                     LCD_Write_Int@F13684:	
  3819  0066                     	ds	5
  3820  006B                     _errno:	
  3821  006B                     	ds	2
  3822  006D                     main@sampleIndex:	
  3823  006D                     	ds	2
  3824                           
  3825                           	psect	dataBANK1
  3826  00A0                     __pdataBANK1:	
  3827  00A0                     ___cgram:	
  3828  00A0                     	ds	24
  3829                           
  3830                           	psect	inittext
  3831  0C6C                     init_ram:	
  3832  0C6C  00FE               	movwf	126
  3833  0C6D                     initloop:	
  3834  0C6D  0012               	moviw fsr0++
  3835  0C6E  001E               	movwi fsr1++
  3836  0C6F  3001               	movlw	1
  3837  0C70  02FE               	subwf	126,f
  3838  0C71  3000               	movlw	0
  3839  0C72  3BFF               	subwfb	127,f
  3840  0C73  087F               	movf	127,w
  3841  0C74  047E               	iorwf	126,w
  3842  0C75  1903               	btfsc	3,2
  3843  0C76  3400               	retlw	0
  3844  0C77  2C6D               	goto	initloop
  3845                           
  3846                           	psect	clrtext
  3847  0C60                     clear_ram0:	
  3848                           ;	Called with FSR0 containing the base address, and
  3849                           ;	btemp/btemp+1 has the size to clear
  3850                           
  3851  0C60  0064               	clrwdt	;clear the watchdog before getting into this loop
  3852  0C61                     clrloop0:	
  3853  0C61  0180               	clrf	0	;clear RAM location pointed to by FSR
  3854  0C62  3101               	addfsr 0,1
  3855  0C63  3001               	movlw	1
  3856  0C64  02FE               	subwf	126,f
  3857  0C65  3000               	movlw	0
  3858  0C66  3BFF               	subwfb	127,f
  3859  0C67  087F               	movf	127,w
  3860  0C68  047E               	iorwf	126,w
  3861  0C69  1903               	btfsc	3,2
  3862  0C6A  3400               	retlw	0	;all done for this memory range, return
  3863  0C6B  2C61               	goto	clrloop0	;have we reached the end yet?
  3864                           
  3865                           	psect	cstackCOMMON
  3866  0070                     __pcstackCOMMON:	
  3867  0070                     ?___ftge:	
  3868  0070                     ?_SYSTEM_Initialize:	
  3869                           ; 1 bit 
  3870                           
  3871  0070                     ?_LCD_Init:	
  3872                           ; 1 bytes @ 0x0
  3873                           
  3874  0070                     ?_LCD_Clear:	
  3875                           ; 1 bytes @ 0x0
  3876                           
  3877  0070                     ?_InitCustomChars:	
  3878                           ; 1 bytes @ 0x0
  3879                           
  3880  0070                     ?_LCD_Write_Char:	
  3881                           ; 1 bytes @ 0x0
  3882                           
  3883  0070                     ?_PWM6_LoadDutyValue:	
  3884                           ; 1 bytes @ 0x0
  3885                           
  3886  0070                     ?_OSCILLATOR_Initialize:	
  3887                           ; 1 bytes @ 0x0
  3888                           
  3889  0070                     ??_OSCILLATOR_Initialize:	
  3890                           ; 1 bytes @ 0x0
  3891                           
  3892  0070                     ?_TMR2_Initialize:	
  3893                           ; 1 bytes @ 0x0
  3894                           
  3895  0070                     ??_TMR2_Initialize:	
  3896                           ; 1 bytes @ 0x0
  3897                           
  3898  0070                     ?_LCD_Cmd:	
  3899                           ; 1 bytes @ 0x0
  3900                           
  3901  0070                     ?_main:	
  3902                           ; 1 bytes @ 0x0
  3903                           
  3904  0070                     ?_ADCC_Initialize:	
  3905                           ; 1 bytes @ 0x0
  3906                           
  3907  0070                     ??_ADCC_Initialize:	
  3908                           ; 1 bytes @ 0x0
  3909                           
  3910  0070                     ?_PIN_MANAGER_Initialize:	
  3911                           ; 1 bytes @ 0x0
  3912                           
  3913  0070                     ??_PIN_MANAGER_Initialize:	
  3914                           ; 1 bytes @ 0x0
  3915                           
  3916  0070                     ?_PWM6_Initialize:	
  3917                           ; 1 bytes @ 0x0
  3918                           
  3919  0070                     ??_PWM6_Initialize:	
  3920                           ; 1 bytes @ 0x0
  3921                           
  3922  0070                     ?_LCD_Port:	
  3923                           ; 1 bytes @ 0x0
  3924                           
  3925  0070                     ??_LCD_Port:	
  3926                           ; 1 bytes @ 0x0
  3927                           
  3928  0070                     ?_ADCC_GetSingleConversion:	
  3929                           ; 1 bytes @ 0x0
  3930                           
  3931  0070                     ?___wmul:	
  3932                           ; 2 bytes @ 0x0
  3933                           
  3934  0070                     ?___awdiv:	
  3935                           ; 2 bytes @ 0x0
  3936                           
  3937  0070                     ?___awmod:	
  3938                           ; 2 bytes @ 0x0
  3939                           
  3940  0070                     ?___lwdiv:	
  3941                           ; 2 bytes @ 0x0
  3942                           
  3943  0070                     ?___ftpack:	
  3944                           ; 2 bytes @ 0x0
  3945                           
  3946  0070                     ?_frexp:	
  3947                           ; 3 bytes @ 0x0
  3948                           
  3949  0070                     ?___aldiv:	
  3950                           ; 3 bytes @ 0x0
  3951                           
  3952  0070                     ?___fttol:	
  3953                           ; 4 bytes @ 0x0
  3954                           
  3955  0070                     PIN_MANAGER_Initialize@state:	
  3956                           ; 4 bytes @ 0x0
  3957                           
  3958  0070                     LCD_Port@a:	
  3959                           ; 1 bytes @ 0x0
  3960                           
  3961  0070                     PWM6_LoadDutyValue@dutyValue:	
  3962                           ; 1 bytes @ 0x0
  3963                           
  3964  0070                     ___wmul@multiplier:	
  3965                           ; 2 bytes @ 0x0
  3966                           
  3967  0070                     ___awdiv@divisor:	
  3968                           ; 2 bytes @ 0x0
  3969                           
  3970  0070                     ___awmod@divisor:	
  3971                           ; 2 bytes @ 0x0
  3972                           
  3973  0070                     ___lwdiv@divisor:	
  3974                           ; 2 bytes @ 0x0
  3975                           
  3976  0070                     ___ftpack@arg:	
  3977                           ; 2 bytes @ 0x0
  3978                           
  3979  0070                     ___ftge@ff1:	
  3980                           ; 3 bytes @ 0x0
  3981                           
  3982  0070                     ___fttol@f1:	
  3983                           ; 3 bytes @ 0x0
  3984                           
  3985  0070                     frexp@value:	
  3986                           ; 3 bytes @ 0x0
  3987                           
  3988  0070                     ___aldiv@divisor:	
  3989                           ; 3 bytes @ 0x0
  3990                           
  3991                           
  3992                           ; 4 bytes @ 0x0
  3993  0070                     	ds	1
  3994  0071                     ??_SYSTEM_Initialize:	
  3995  0071                     ??_LCD_Write_Char:	
  3996                           ; 1 bytes @ 0x1
  3997                           
  3998  0071                     ??_LCD_Cmd:	
  3999                           ; 1 bytes @ 0x1
  4000                           
  4001                           
  4002                           ; 1 bytes @ 0x1
  4003  0071                     	ds	1
  4004  0072                     ??_PWM6_LoadDutyValue:	
  4005  0072                     LCD_Cmd@a:	
  4006                           ; 1 bytes @ 0x2
  4007                           
  4008  0072                     LCD_Write_Char@temp:	
  4009                           ; 1 bytes @ 0x2
  4010                           
  4011  0072                     ___wmul@multiplicand:	
  4012                           ; 1 bytes @ 0x2
  4013                           
  4014  0072                     ___awdiv@dividend:	
  4015                           ; 2 bytes @ 0x2
  4016                           
  4017  0072                     ___awmod@dividend:	
  4018                           ; 2 bytes @ 0x2
  4019                           
  4020  0072                     ___lwdiv@dividend:	
  4021                           ; 2 bytes @ 0x2
  4022                           
  4023                           
  4024                           ; 2 bytes @ 0x2
  4025  0072                     	ds	1
  4026  0073                     ??_LCD_Init:	
  4027  0073                     ??_LCD_Clear:	
  4028                           ; 1 bytes @ 0x3
  4029                           
  4030  0073                     ??_ADCC_GetSingleConversion:	
  4031                           ; 1 bytes @ 0x3
  4032                           
  4033  0073                     ?_LCD_Set_Cursor:	
  4034                           ; 1 bytes @ 0x3
  4035                           
  4036  0073                     ADCC_GetSingleConversion@channel:	
  4037                           ; 1 bytes @ 0x3
  4038                           
  4039  0073                     LCD_Set_Cursor@y:	
  4040                           ; 1 bytes @ 0x3
  4041                           
  4042  0073                     LCD_Write_Char@y:	
  4043                           ; 1 bytes @ 0x3
  4044                           
  4045  0073                     ___ftpack@exp:	
  4046                           ; 1 bytes @ 0x3
  4047                           
  4048  0073                     frexp@eptr:	
  4049                           ; 1 bytes @ 0x3
  4050                           
  4051  0073                     ___ftge@ff2:	
  4052                           ; 1 bytes @ 0x3
  4053                           
  4054                           
  4055                           ; 3 bytes @ 0x3
  4056  0073                     	ds	1
  4057  0074                     ??_LCD_Set_Cursor:	
  4058  0074                     ??_frexp:	
  4059                           ; 1 bytes @ 0x4
  4060                           
  4061  0074                     ??___wmul:	
  4062                           ; 1 bytes @ 0x4
  4063                           
  4064  0074                     ??___awdiv:	
  4065                           ; 1 bytes @ 0x4
  4066                           
  4067  0074                     ??___awmod:	
  4068                           ; 1 bytes @ 0x4
  4069                           
  4070  0074                     ??___fttol:	
  4071                           ; 1 bytes @ 0x4
  4072                           
  4073  0074                     ??___lwdiv:	
  4074                           ; 1 bytes @ 0x4
  4075                           
  4076  0074                     LCD_Write_Char@a:	
  4077                           ; 1 bytes @ 0x4
  4078                           
  4079  0074                     ___ftpack@sign:	
  4080                           ; 1 bytes @ 0x4
  4081                           
  4082  0074                     ___wmul@product:	
  4083                           ; 1 bytes @ 0x4
  4084                           
  4085  0074                     ___aldiv@dividend:	
  4086                           ; 2 bytes @ 0x4
  4087                           
  4088                           
  4089                           ; 4 bytes @ 0x4
  4090  0074                     	ds	1
  4091  0075                     ??_InitCustomChars:	
  4092  0075                     ??___ftpack:	
  4093                           ; 1 bytes @ 0x5
  4094                           
  4095  0075                     LCD_Init@style:	
  4096                           ; 1 bytes @ 0x5
  4097                           
  4098  0075                     ___awdiv@counter:	
  4099                           ; 1 bytes @ 0x5
  4100                           
  4101  0075                     ___awmod@counter:	
  4102                           ; 1 bytes @ 0x5
  4103                           
  4104  0075                     ___lwdiv@quotient:	
  4105                           ; 1 bytes @ 0x5
  4106                           
  4107                           
  4108                           ; 2 bytes @ 0x5
  4109  0075                     	ds	1
  4110  0076                     ??___ftge:	
  4111  0076                     InitCustomChars@i:	
  4112                           ; 1 bytes @ 0x6
  4113                           
  4114  0076                     LCD_Set_Cursor@x:	
  4115                           ; 1 bytes @ 0x6
  4116                           
  4117  0076                     ___awdiv@sign:	
  4118                           ; 1 bytes @ 0x6
  4119                           
  4120  0076                     ___awmod@sign:	
  4121                           ; 1 bytes @ 0x6
  4122                           
  4123                           
  4124                           ; 1 bytes @ 0x6
  4125  0076                     	ds	1
  4126  0077                     LCD_Set_Cursor@z:	
  4127  0077                     ___lwdiv@counter:	
  4128                           ; 1 bytes @ 0x7
  4129                           
  4130  0077                     ___awdiv@quotient:	
  4131                           ; 1 bytes @ 0x7
  4132                           
  4133                           
  4134                           ; 2 bytes @ 0x7
  4135  0077                     	ds	1
  4136  0078                     ??___aldiv:	
  4137  0078                     ?___awtoft:	
  4138                           ; 1 bytes @ 0x8
  4139                           
  4140  0078                     ?___ftdiv:	
  4141                           ; 3 bytes @ 0x8
  4142                           
  4143  0078                     ?___lwtoft:	
  4144                           ; 3 bytes @ 0x8
  4145                           
  4146  0078                     LCD_Set_Cursor@w:	
  4147                           ; 3 bytes @ 0x8
  4148                           
  4149  0078                     ___fttol@sign1:	
  4150                           ; 1 bytes @ 0x8
  4151                           
  4152  0078                     ___awtoft@c:	
  4153                           ; 1 bytes @ 0x8
  4154                           
  4155  0078                     ___lwtoft@c:	
  4156                           ; 2 bytes @ 0x8
  4157                           
  4158  0078                     ___ftdiv@f2:	
  4159                           ; 2 bytes @ 0x8
  4160                           
  4161                           
  4162                           ; 3 bytes @ 0x8
  4163  0078                     	ds	1
  4164  0079                     LCD_Set_Cursor@temp:	
  4165  0079                     ___fttol@lval:	
  4166                           ; 1 bytes @ 0x9
  4167                           
  4168                           
  4169                           ; 4 bytes @ 0x9
  4170  0079                     	ds	2
  4171  007B                     ??___awtoft:	
  4172  007B                     ??___lwtoft:	
  4173                           ; 1 bytes @ 0xB
  4174                           
  4175  007B                     ___ftdiv@f1:	
  4176                           ; 1 bytes @ 0xB
  4177                           
  4178                           
  4179                           ; 3 bytes @ 0xB
  4180  007B                     	ds	2
  4181  007D                     ___awtoft@sign:	
  4182  007D                     ___fttol@exp1:	
  4183                           ; 1 bytes @ 0xD
  4184                           
  4185                           
  4186                           ; 1 bytes @ 0xD
  4187  007D                     	ds	1
  4188  007E                     ??_eval_poly:	
  4189  007E                     ??___ftsub:	
  4190                           ; 1 bytes @ 0xE
  4191                           
  4192                           
  4193                           	psect	cstackBANK0
  4194  0020                     __pcstackBANK0:	
  4195                           ; 1 bytes @ 0xE
  4196                           
  4197  0020                     ?_LCD_Write_Int:	
  4198  0020                     ??___ftdiv:	
  4199                           ; 1 bytes @ 0x0
  4200                           
  4201  0020                     ?___ftmul:	
  4202                           ; 1 bytes @ 0x0
  4203                           
  4204  0020                     ___aldiv@counter:	
  4205                           ; 3 bytes @ 0x0
  4206                           
  4207  0020                     LCD_Write_Int@value:	
  4208                           ; 1 bytes @ 0x0
  4209                           
  4210  0020                     ___ftmul@f1:	
  4211                           ; 2 bytes @ 0x0
  4212                           
  4213                           
  4214                           ; 3 bytes @ 0x0
  4215  0020                     	ds	1
  4216  0021                     ___aldiv@sign:	
  4217                           
  4218                           ; 1 bytes @ 0x1
  4219  0021                     	ds	1
  4220  0022                     LCD_Write_Int@fieldLength:	
  4221  0022                     ___aldiv@quotient:	
  4222                           ; 1 bytes @ 0x2
  4223                           
  4224                           
  4225                           ; 4 bytes @ 0x2
  4226  0022                     	ds	1
  4227  0023                     LCD_Write_Int@numPlaces:	
  4228  0023                     ___ftmul@f2:	
  4229                           ; 1 bytes @ 0x3
  4230                           
  4231                           
  4232                           ; 3 bytes @ 0x3
  4233  0023                     	ds	1
  4234  0024                     LCD_Write_Int@sign:	
  4235  0024                     ___ftdiv@cntr:	
  4236                           ; 1 bytes @ 0x4
  4237                           
  4238                           
  4239                           ; 1 bytes @ 0x4
  4240  0024                     	ds	1
  4241  0025                     ??_LCD_Write_Int:	
  4242  0025                     ___ftdiv@f3:	
  4243                           ; 1 bytes @ 0x5
  4244                           
  4245                           
  4246                           ; 3 bytes @ 0x5
  4247  0025                     	ds	1
  4248  0026                     ??___ftmul:	
  4249                           
  4250                           ; 1 bytes @ 0x6
  4251  0026                     	ds	2
  4252  0028                     ___ftdiv@exp:	
  4253                           
  4254                           ; 1 bytes @ 0x8
  4255  0028                     	ds	1
  4256  0029                     ___ftdiv@sign:	
  4257                           
  4258                           ; 1 bytes @ 0x9
  4259  0029                     	ds	1
  4260  002A                     ___ftmul@exp:	
  4261  002A                     LCD_Write_Int@str:	
  4262                           ; 1 bytes @ 0xA
  4263                           
  4264                           
  4265                           ; 5 bytes @ 0xA
  4266  002A                     	ds	1
  4267  002B                     ___ftmul@f3_as_product:	
  4268                           
  4269                           ; 3 bytes @ 0xB
  4270  002B                     	ds	3
  4271  002E                     ___ftmul@cntr:	
  4272                           
  4273                           ; 1 bytes @ 0xE
  4274  002E                     	ds	1
  4275  002F                     ___ftmul@sign:	
  4276  002F                     LCD_Write_Int@j:	
  4277                           ; 1 bytes @ 0xF
  4278                           
  4279                           
  4280                           ; 2 bytes @ 0xF
  4281  002F                     	ds	1
  4282  0030                     ?___ftadd:	
  4283  0030                     ___ftadd@f1:	
  4284                           ; 3 bytes @ 0x10
  4285                           
  4286                           
  4287                           ; 3 bytes @ 0x10
  4288  0030                     	ds	1
  4289  0031                     LCD_Write_Int@i:	
  4290                           
  4291                           ; 2 bytes @ 0x11
  4292  0031                     	ds	2
  4293  0033                     ___ftadd@f2:	
  4294                           
  4295                           ; 3 bytes @ 0x13
  4296  0033                     	ds	3
  4297  0036                     ??___ftadd:	
  4298                           
  4299                           ; 1 bytes @ 0x16
  4300  0036                     	ds	4
  4301  003A                     ___ftadd@sign:	
  4302                           
  4303                           ; 1 bytes @ 0x1A
  4304  003A                     	ds	1
  4305  003B                     ___ftadd@exp2:	
  4306                           
  4307                           ; 1 bytes @ 0x1B
  4308  003B                     	ds	1
  4309  003C                     ___ftadd@exp1:	
  4310                           
  4311                           ; 1 bytes @ 0x1C
  4312  003C                     	ds	1
  4313  003D                     ?_eval_poly:	
  4314  003D                     ?___ftsub:	
  4315                           ; 3 bytes @ 0x1D
  4316                           
  4317  003D                     ___ftsub@f2:	
  4318                           ; 3 bytes @ 0x1D
  4319                           
  4320  003D                     eval_poly@x:	
  4321                           ; 3 bytes @ 0x1D
  4322                           
  4323                           
  4324                           ; 3 bytes @ 0x1D
  4325  003D                     	ds	3
  4326  0040                     eval_poly@d:	
  4327  0040                     ___ftsub@f1:	
  4328                           ; 2 bytes @ 0x20
  4329                           
  4330                           
  4331                           ; 3 bytes @ 0x20
  4332  0040                     	ds	2
  4333  0042                     eval_poly@n:	
  4334                           
  4335                           ; 2 bytes @ 0x22
  4336  0042                     	ds	2
  4337  0044                     eval_poly@res:	
  4338                           
  4339                           ; 3 bytes @ 0x24
  4340  0044                     	ds	3
  4341  0047                     ?_log:	
  4342  0047                     log@x:	
  4343                           ; 3 bytes @ 0x27
  4344                           
  4345                           
  4346                           ; 3 bytes @ 0x27
  4347  0047                     	ds	3
  4348  004A                     ??_log:	
  4349                           
  4350                           ; 1 bytes @ 0x2A
  4351  004A                     	ds	1
  4352  004B                     log@exponent:	
  4353                           
  4354                           ; 2 bytes @ 0x2B
  4355  004B                     	ds	2
  4356  004D                     ??_main:	
  4357                           
  4358                           ; 1 bytes @ 0x2D
  4359  004D                     	ds	10
  4360  0057                     main@setpoint:	
  4361                           
  4362                           ; 2 bytes @ 0x37
  4363  0057                     	ds	2
  4364  0059                     main@totals:	
  4365                           
  4366                           ; 4 bytes @ 0x39
  4367  0059                     	ds	4
  4368  005D                     main@readTemperatureOld:	
  4369                           
  4370                           ; 2 bytes @ 0x3D
  4371  005D                     	ds	2
  4372  005F                     main@outCurrent:	
  4373                           
  4374                           ; 2 bytes @ 0x3F
  4375  005F                     	ds	2
  4376  0061                     main@steinhart:	
  4377                           
  4378                           ; 3 bytes @ 0x41
  4379  0061                     	ds	3
  4380  0064                     main@readTemperature:	
  4381                           
  4382                           ; 2 bytes @ 0x44
  4383  0064                     	ds	2
  4384                           
  4385                           	psect	maintext
  4386  05E5                     __pmaintext:	
  4387 ;;
  4388 ;;Main: autosize = 0, tempsize = 10, incstack = 0, save=0
  4389 ;;
  4390 ;; *************** function _main *****************
  4391 ;; Defined at:
  4392 ;;		line 11 in file "../PWMTest.X/main.c"
  4393 ;; Parameters:    Size  Location     Type
  4394 ;;		None
  4395 ;; Auto vars:     Size  Location     Type
  4396 ;;  steinhart       3   65[BANK0 ] float 
  4397 ;;  totals          4   57[BANK0 ] long 
  4398 ;;  readTemperat    2   68[BANK0 ] unsigned int 
  4399 ;;  outCurrent      2   63[BANK0 ] unsigned int 
  4400 ;;  readTemperat    2   61[BANK0 ] unsigned int 
  4401 ;;  setpoint        2   55[BANK0 ] unsigned int 
  4402 ;; Return value:  Size  Location     Type
  4403 ;;                  1    wreg      void 
  4404 ;; Registers used:
  4405 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4406 ;; Tracked objects:
  4407 ;;		On entry : B1F/0
  4408 ;;		On exit  : 0/0
  4409 ;;		Unchanged: 0/0
  4410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4412 ;;      Locals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4413 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4414 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4415 ;;Total ram usage:       25 bytes
  4416 ;; Hardware stack levels required when called:    4
  4417 ;; This function calls:
  4418 ;;		_ADCC_GetSingleConversion
  4419 ;;		_InitCustomChars
  4420 ;;		_LCD_Clear
  4421 ;;		_LCD_Init
  4422 ;;		_LCD_Set_Cursor
  4423 ;;		_LCD_Write_Char
  4424 ;;		_LCD_Write_Int
  4425 ;;		_PWM6_LoadDutyValue
  4426 ;;		_SYSTEM_Initialize
  4427 ;;		___aldiv
  4428 ;;		___ftadd
  4429 ;;		___ftdiv
  4430 ;;		___ftsub
  4431 ;;		___fttol
  4432 ;;		___lwdiv
  4433 ;;		___lwtoft
  4434 ;;		_log
  4435 ;; This function is called by:
  4436 ;;		Startup code after reset
  4437 ;; This function uses a non-reentrant model
  4438 ;;
  4439                           
  4440                           
  4441                           ;psect for function _main
  4442  05E5                     _main:	
  4443                           
  4444                           ;main.c: 13: SYSTEM_Initialize();
  4445                           
  4446                           ;incstack = 0
  4447                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4448  05E5  318C  24A2  3185   	fcall	_SYSTEM_Initialize
  4449                           
  4450                           ;main.c: 15: LCD_Init(0X00);
  4451  05E8  3000               	movlw	0
  4452  05E9  3180  2019  3185   	fcall	_LCD_Init
  4453                           
  4454                           ;main.c: 17: _delay((unsigned long)((100)*(1000000/4000.0)));
  4455  05EC  3021               	movlw	33
  4456  05ED  0020               	movlb	0	; select bank0
  4457  05EE  00CE               	movwf	??_main+1
  4458  05EF  3076               	movlw	118
  4459  05F0  00CD               	movwf	??_main
  4460  05F1                     u3017:	
  4461  05F1  0BCD               	decfsz	??_main,f
  4462  05F2  2DF1               	goto	u3017
  4463  05F3  0BCE               	decfsz	??_main+1,f
  4464  05F4  2DF1               	goto	u3017
  4465  05F5  0000               	nop
  4466                           
  4467                           ;main.c: 19: LCD_Clear();
  4468  05F6  318C  244F  3185   	fcall	_LCD_Clear
  4469                           
  4470                           ;main.c: 21: InitCustomChars();
  4471  05F9  318D  257C  3185   	fcall	_InitCustomChars
  4472                           
  4473                           ;main.c: 23: uint16_t readTemperature, setpoint = 70, outCurrent = 1023, readTemperature
      +                          Old = 20;
  4474  05FC  3046               	movlw	70
  4475  05FD  0020               	movlb	0	; select bank0
  4476  05FE  00D7               	movwf	main@setpoint
  4477  05FF  3000               	movlw	0
  4478  0600  00D8               	movwf	main@setpoint+1
  4479  0601  30FF               	movlw	255
  4480  0602  00DF               	movwf	main@outCurrent
  4481  0603  3003               	movlw	3
  4482  0604  00E0               	movwf	main@outCurrent+1
  4483  0605  3014               	movlw	20
  4484  0606  00DD               	movwf	main@readTemperatureOld
  4485  0607  3000               	movlw	0
  4486  0608  00DE               	movwf	main@readTemperatureOld+1
  4487                           
  4488                           ;main.c: 25: static uint16_t sampleIndex = 0;
  4489                           ;main.c: 27: int32_t totals = 0;
  4490  0609  3000               	movlw	0
  4491  060A  00DC               	movwf	main@totals+3
  4492  060B  3000               	movlw	0
  4493  060C  00DB               	movwf	main@totals+2
  4494  060D  3000               	movlw	0
  4495  060E  00DA               	movwf	main@totals+1
  4496  060F  3000               	movlw	0
  4497  0610  00D9               	movwf	main@totals
  4498  0611                     l2413:	
  4499                           ;main.c: 31: while (1)
  4500                           
  4501                           
  4502                           ;main.c: 32: {
  4503                           ;main.c: 33: readTemperature = ADCC_GetSingleConversion(2);
  4504  0611  3002               	movlw	2
  4505  0612  318C  2485  3185   	fcall	_ADCC_GetSingleConversion
  4506  0615  0871               	movf	?_ADCC_GetSingleConversion+1,w
  4507  0616  0020               	movlb	0	; select bank0
  4508  0617  00E5               	movwf	main@readTemperature+1
  4509  0618  0870               	movf	?_ADCC_GetSingleConversion,w
  4510  0619  00E4               	movwf	main@readTemperature
  4511                           
  4512                           ;main.c: 35: totals = totals - samples[sampleIndex];
  4513  061A  0859               	movf	main@totals,w
  4514  061B  00CD               	movwf	??_main
  4515  061C  085A               	movf	main@totals+1,w
  4516  061D  00CE               	movwf	??_main+1
  4517  061E  085B               	movf	main@totals+2,w
  4518  061F  00CF               	movwf	??_main+2
  4519  0620  085C               	movf	main@totals+3,w
  4520  0621  00D0               	movwf	??_main+3
  4521  0622  086E               	movf	main@sampleIndex+1,w
  4522  0623  00D2               	movwf	??_main+5
  4523  0624  086D               	movf	main@sampleIndex,w
  4524  0625  00D1               	movwf	??_main+4
  4525  0626  35D1               	lslf	??_main+4,f
  4526  0627  0DD2               	rlf	??_main+5,f
  4527  0628  308C               	movlw	140
  4528  0629  0751               	addwf	??_main+4,w
  4529  062A  0084               	movwf	4
  4530  062B  3023               	movlw	35
  4531  062C  3D52               	addwfc	??_main+5,w
  4532  062D  0085               	movwf	5
  4533  062E  3F00               	moviw [0]fsr0
  4534  062F  00D3               	movwf	??_main+6
  4535  0630  3F01               	moviw [1]fsr0
  4536  0631  00D4               	movwf	??_main+7
  4537  0632  01D5               	clrf	??_main+8
  4538  0633  01D6               	clrf	??_main+9
  4539  0634  09D3               	comf	??_main+6,f
  4540  0635  09D4               	comf	??_main+7,f
  4541  0636  09D5               	comf	??_main+8,f
  4542  0637  09D6               	comf	??_main+9,f
  4543  0638  0AD3               	incf	??_main+6,f
  4544  0639  1903               	skipnz
  4545  063A  0AD4               	incf	??_main+7,f
  4546  063B  1903               	skipnz
  4547  063C  0AD5               	incf	??_main+8,f
  4548  063D  1903               	skipnz
  4549  063E  0AD6               	incf	??_main+9,f
  4550  063F  0853               	movf	??_main+6,w
  4551  0640  07CD               	addwf	??_main,f
  4552  0641  0854               	movf	??_main+7,w
  4553  0642  3DCE               	addwfc	??_main+1,f
  4554  0643  0855               	movf	??_main+8,w
  4555  0644  3DCF               	addwfc	??_main+2,f
  4556  0645  0856               	movf	??_main+9,w
  4557  0646  3DD0               	addwfc	??_main+3,f
  4558  0647  0850               	movf	??_main+3,w
  4559  0648  00DC               	movwf	main@totals+3
  4560  0649  084F               	movf	??_main+2,w
  4561  064A  00DB               	movwf	main@totals+2
  4562  064B  084E               	movf	??_main+1,w
  4563  064C  00DA               	movwf	main@totals+1
  4564  064D  084D               	movf	??_main,w
  4565  064E  00D9               	movwf	main@totals
  4566                           
  4567                           ;main.c: 37: samples[sampleIndex] = readTemperature;
  4568  064F  086E               	movf	main@sampleIndex+1,w
  4569  0650  00CE               	movwf	??_main+1
  4570  0651  086D               	movf	main@sampleIndex,w
  4571  0652  00CD               	movwf	??_main
  4572  0653  35CD               	lslf	??_main,f
  4573  0654  0DCE               	rlf	??_main+1,f
  4574  0655  308C               	movlw	140
  4575  0656  00CF               	movwf	??_main+2
  4576  0657  3023               	movlw	35
  4577  0658  00D0               	movwf	??_main+3
  4578  0659  084D               	movf	??_main,w
  4579  065A  074F               	addwf	??_main+2,w
  4580  065B  0086               	movwf	6
  4581  065C  084E               	movf	??_main+1,w
  4582  065D  3D50               	addwfc	??_main+3,w
  4583  065E  0087               	movwf	7
  4584  065F  0864               	movf	main@readTemperature,w
  4585  0660  3FC0               	movwi [0]fsr1
  4586  0661  0865               	movf	main@readTemperature+1,w
  4587  0662  3FC1               	movwi [1]fsr1
  4588                           
  4589                           ;main.c: 39: totals = totals + samples[sampleIndex];
  4590  0663  0859               	movf	main@totals,w
  4591  0664  00CD               	movwf	??_main
  4592  0665  085A               	movf	main@totals+1,w
  4593  0666  00CE               	movwf	??_main+1
  4594  0667  085B               	movf	main@totals+2,w
  4595  0668  00CF               	movwf	??_main+2
  4596  0669  085C               	movf	main@totals+3,w
  4597  066A  00D0               	movwf	??_main+3
  4598  066B  086E               	movf	main@sampleIndex+1,w
  4599  066C  00D2               	movwf	??_main+5
  4600  066D  086D               	movf	main@sampleIndex,w
  4601  066E  00D1               	movwf	??_main+4
  4602  066F  35D1               	lslf	??_main+4,f
  4603  0670  0DD2               	rlf	??_main+5,f
  4604  0671  308C               	movlw	140
  4605  0672  0751               	addwf	??_main+4,w
  4606  0673  0084               	movwf	4
  4607  0674  3023               	movlw	35
  4608  0675  3D52               	addwfc	??_main+5,w
  4609  0676  0085               	movwf	5
  4610  0677  3F00               	moviw [0]fsr0
  4611  0678  00D3               	movwf	??_main+6
  4612  0679  3F01               	moviw [1]fsr0
  4613  067A  00D4               	movwf	??_main+7
  4614  067B  01D5               	clrf	??_main+8
  4615  067C  01D6               	clrf	??_main+9
  4616  067D  0853               	movf	??_main+6,w
  4617  067E  07CD               	addwf	??_main,f
  4618  067F  0854               	movf	??_main+7,w
  4619  0680  3DCE               	addwfc	??_main+1,f
  4620  0681  0855               	movf	??_main+8,w
  4621  0682  3DCF               	addwfc	??_main+2,f
  4622  0683  0856               	movf	??_main+9,w
  4623  0684  3DD0               	addwfc	??_main+3,f
  4624  0685  0850               	movf	??_main+3,w
  4625  0686  00DC               	movwf	main@totals+3
  4626  0687  084F               	movf	??_main+2,w
  4627  0688  00DB               	movwf	main@totals+2
  4628  0689  084E               	movf	??_main+1,w
  4629  068A  00DA               	movwf	main@totals+1
  4630  068B  084D               	movf	??_main,w
  4631  068C  00D9               	movwf	main@totals
  4632                           
  4633                           ;main.c: 41: sampleIndex += 1;
  4634  068D  3001               	movlw	1
  4635  068E  07ED               	addwf	main@sampleIndex,f
  4636  068F  3000               	movlw	0
  4637  0690  3DEE               	addwfc	main@sampleIndex+1,f
  4638                           
  4639                           ;main.c: 43: if(sampleIndex >= 50)
  4640  0691  3000               	movlw	0
  4641  0692  026E               	subwf	main@sampleIndex+1,w
  4642  0693  3032               	movlw	50
  4643  0694  1903               	skipnz
  4644  0695  026D               	subwf	main@sampleIndex,w
  4645  0696  1C03               	skipc
  4646  0697  2E9A               	goto	l2425
  4647                           
  4648                           ;main.c: 44: {
  4649                           ;main.c: 45: sampleIndex = 0;
  4650  0698  01ED               	clrf	main@sampleIndex
  4651  0699  01EE               	clrf	main@sampleIndex+1
  4652  069A                     l2425:	
  4653                           
  4654                           ;main.c: 46: }
  4655                           ;main.c: 48: readTemperature = totals / 50;
  4656  069A  3000               	movlw	0
  4657  069B  00F3               	movwf	___aldiv@divisor+3
  4658  069C  3000               	movlw	0
  4659  069D  00F2               	movwf	___aldiv@divisor+2
  4660  069E  3000               	movlw	0
  4661  069F  00F1               	movwf	___aldiv@divisor+1
  4662  06A0  3032               	movlw	50
  4663  06A1  00F0               	movwf	___aldiv@divisor
  4664  06A2  085C               	movf	main@totals+3,w
  4665  06A3  00F7               	movwf	___aldiv@dividend+3
  4666  06A4  085B               	movf	main@totals+2,w
  4667  06A5  00F6               	movwf	___aldiv@dividend+2
  4668  06A6  085A               	movf	main@totals+1,w
  4669  06A7  00F5               	movwf	___aldiv@dividend+1
  4670  06A8  0859               	movf	main@totals,w
  4671  06A9  00F4               	movwf	___aldiv@dividend
  4672  06AA  3181  2113  3185   	fcall	___aldiv
  4673  06AD  0871               	movf	?___aldiv+1,w
  4674  06AE  0020               	movlb	0	; select bank0
  4675  06AF  00E5               	movwf	main@readTemperature+1
  4676  06B0  0870               	movf	?___aldiv,w
  4677  06B1  00E4               	movwf	main@readTemperature
  4678                           
  4679                           ;main.c: 50: if(readTemperature > readTemperatureOld)
  4680  06B2  0865               	movf	main@readTemperature+1,w
  4681  06B3  025E               	subwf	main@readTemperatureOld+1,w
  4682  06B4  1D03               	skipz
  4683  06B5  2EB8               	goto	u2945
  4684  06B6  0864               	movf	main@readTemperature,w
  4685  06B7  025D               	subwf	main@readTemperatureOld,w
  4686  06B8                     u2945:	
  4687  06B8  1803               	skipnc
  4688  06B9  2EBE               	goto	l31
  4689                           
  4690                           ;main.c: 51: {
  4691                           ;main.c: 52: readTemperatureOld += 1;
  4692  06BA  3001               	movlw	1
  4693  06BB  07DD               	addwf	main@readTemperatureOld,f
  4694  06BC  3000               	movlw	0
  4695  06BD  3DDE               	addwfc	main@readTemperatureOld+1,f
  4696  06BE                     l31:	
  4697                           
  4698                           ;main.c: 53: }
  4699                           ;main.c: 55: if(readTemperature < readTemperatureOld)
  4700  06BE  085E               	movf	main@readTemperatureOld+1,w
  4701  06BF  0265               	subwf	main@readTemperature+1,w
  4702  06C0  1D03               	skipz
  4703  06C1  2EC4               	goto	u2955
  4704  06C2  085D               	movf	main@readTemperatureOld,w
  4705  06C3  0264               	subwf	main@readTemperature,w
  4706  06C4                     u2955:	
  4707  06C4  1803               	skipnc
  4708  06C5  2ECA               	goto	l32
  4709                           
  4710                           ;main.c: 56: {
  4711                           ;main.c: 57: readTemperatureOld -= 1;
  4712  06C6  3001               	movlw	1
  4713  06C7  02DD               	subwf	main@readTemperatureOld,f
  4714  06C8  3000               	movlw	0
  4715  06C9  3BDE               	subwfb	main@readTemperatureOld+1,f
  4716  06CA                     l32:	
  4717                           
  4718                           ;main.c: 58: }
  4719                           ;main.c: 60: readTemperature = readTemperatureOld;
  4720  06CA  085E               	movf	main@readTemperatureOld+1,w
  4721  06CB  00E5               	movwf	main@readTemperature+1
  4722  06CC  085D               	movf	main@readTemperatureOld,w
  4723  06CD  00E4               	movwf	main@readTemperature
  4724                           
  4725                           ;main.c: 63: if(setpoint > readTemperature)
  4726  06CE  0858               	movf	main@setpoint+1,w
  4727  06CF  0265               	subwf	main@readTemperature+1,w
  4728  06D0  1D03               	skipz
  4729  06D1  2ED4               	goto	u2965
  4730  06D2  0857               	movf	main@setpoint,w
  4731  06D3  0264               	subwf	main@readTemperature,w
  4732  06D4                     u2965:	
  4733  06D4  1803               	skipnc
  4734  06D5  2EE6               	goto	l33
  4735                           
  4736                           ;main.c: 64: {
  4737                           ;main.c: 65: if(outCurrent < 1022)
  4738  06D6  3003               	movlw	3
  4739  06D7  0260               	subwf	main@outCurrent+1,w
  4740  06D8  30FE               	movlw	254
  4741  06D9  1903               	skipnz
  4742  06DA  025F               	subwf	main@outCurrent,w
  4743  06DB  1803               	skipnc
  4744  06DC  2EE2               	goto	l2437
  4745                           
  4746                           ;main.c: 66: {
  4747                           ;main.c: 70: outCurrent++;
  4748  06DD  3001               	movlw	1
  4749  06DE  07DF               	addwf	main@outCurrent,f
  4750  06DF  3000               	movlw	0
  4751  06E0  3DE0               	addwfc	main@outCurrent+1,f
  4752                           
  4753                           ;main.c: 73: }
  4754  06E1  2EE6               	goto	l33
  4755  06E2                     l2437:	
  4756                           
  4757                           ;main.c: 74: else
  4758                           ;main.c: 75: {
  4759                           ;main.c: 76: outCurrent = 1023;
  4760  06E2  30FF               	movlw	255
  4761  06E3  00DF               	movwf	main@outCurrent
  4762  06E4  3003               	movlw	3
  4763  06E5  00E0               	movwf	main@outCurrent+1
  4764  06E6                     l33:	
  4765                           
  4766                           ;main.c: 77: }
  4767                           ;main.c: 78: }
  4768                           ;main.c: 80: if(setpoint < readTemperature)
  4769  06E6  0865               	movf	main@readTemperature+1,w
  4770  06E7  0258               	subwf	main@setpoint+1,w
  4771  06E8  1D03               	skipz
  4772  06E9  2EEC               	goto	u2985
  4773  06EA  0864               	movf	main@readTemperature,w
  4774  06EB  0257               	subwf	main@setpoint,w
  4775  06EC                     u2985:	
  4776  06EC  1803               	skipnc
  4777  06ED  2EFC               	goto	l2445
  4778                           
  4779                           ;main.c: 81: {
  4780                           ;main.c: 82: if(outCurrent > 1)
  4781  06EE  3000               	movlw	0
  4782  06EF  0260               	subwf	main@outCurrent+1,w
  4783  06F0  3002               	movlw	2
  4784  06F1  1903               	skipnz
  4785  06F2  025F               	subwf	main@outCurrent,w
  4786  06F3  1C03               	skipc
  4787  06F4  2EFA               	goto	l2443
  4788                           
  4789                           ;main.c: 83: {
  4790                           ;main.c: 87: outCurrent-=1;
  4791  06F5  3001               	movlw	1
  4792  06F6  02DF               	subwf	main@outCurrent,f
  4793  06F7  3000               	movlw	0
  4794  06F8  3BE0               	subwfb	main@outCurrent+1,f
  4795                           
  4796                           ;main.c: 90: }
  4797  06F9  2EFC               	goto	l2445
  4798  06FA                     l2443:	
  4799                           
  4800                           ;main.c: 91: else
  4801                           ;main.c: 92: {
  4802                           ;main.c: 93: outCurrent = 0;
  4803  06FA  01DF               	clrf	main@outCurrent
  4804  06FB  01E0               	clrf	main@outCurrent+1
  4805  06FC                     l2445:	
  4806                           
  4807                           ;main.c: 94: }
  4808                           ;main.c: 95: }
  4809                           ;main.c: 99: readTemperature = (1023 / readTemperature) - 1;
  4810  06FC  0865               	movf	main@readTemperature+1,w
  4811  06FD  00F1               	movwf	___lwdiv@divisor+1
  4812  06FE  0864               	movf	main@readTemperature,w
  4813  06FF  00F0               	movwf	___lwdiv@divisor
  4814  0700  30FF               	movlw	255
  4815  0701  00F2               	movwf	___lwdiv@dividend
  4816  0702  3003               	movlw	3
  4817  0703  00F3               	movwf	___lwdiv@dividend+1
  4818  0704  318D  25FC  3185   	fcall	___lwdiv
  4819  0707  0870               	movf	?___lwdiv,w
  4820  0708  3EFF               	addlw	255
  4821  0709  0020               	movlb	0	; select bank0
  4822  070A  00E4               	movwf	main@readTemperature
  4823  070B  30FF               	movlw	255
  4824  070C  3D71               	addwfc	?___lwdiv+1,w
  4825  070D  00E5               	movwf	main@readTemperature+1
  4826                           
  4827                           ;main.c: 100: readTemperature = 10000 / readTemperature;
  4828  070E  0865               	movf	main@readTemperature+1,w
  4829  070F  00F1               	movwf	___lwdiv@divisor+1
  4830  0710  0864               	movf	main@readTemperature,w
  4831  0711  00F0               	movwf	___lwdiv@divisor
  4832  0712  3010               	movlw	16
  4833  0713  00F2               	movwf	___lwdiv@dividend
  4834  0714  3027               	movlw	39
  4835  0715  00F3               	movwf	___lwdiv@dividend+1
  4836  0716  318D  25FC  3185   	fcall	___lwdiv
  4837  0719  0871               	movf	?___lwdiv+1,w
  4838  071A  0020               	movlb	0	; select bank0
  4839  071B  00E5               	movwf	main@readTemperature+1
  4840  071C  0870               	movf	?___lwdiv,w
  4841  071D  00E4               	movwf	main@readTemperature
  4842                           
  4843                           ;main.c: 102: float steinhart;
  4844                           ;main.c: 103: steinhart = readTemperature / 10000;
  4845  071E  3010               	movlw	16
  4846  071F  00F0               	movwf	___lwdiv@divisor
  4847  0720  3027               	movlw	39
  4848  0721  00F1               	movwf	___lwdiv@divisor+1
  4849  0722  0865               	movf	main@readTemperature+1,w
  4850  0723  00F3               	movwf	___lwdiv@dividend+1
  4851  0724  0864               	movf	main@readTemperature,w
  4852  0725  00F2               	movwf	___lwdiv@dividend
  4853  0726  318D  25FC  3185   	fcall	___lwdiv
  4854  0729  0871               	movf	?___lwdiv+1,w
  4855  072A  00F9               	movwf	___lwtoft@c+1
  4856  072B  0870               	movf	?___lwdiv,w
  4857  072C  00F8               	movwf	___lwtoft@c
  4858  072D  3180  2006  3185   	fcall	___lwtoft
  4859  0730  0878               	movf	?___lwtoft,w
  4860  0731  0020               	movlb	0	; select bank0
  4861  0732  00E1               	movwf	main@steinhart
  4862  0733  0879               	movf	?___lwtoft+1,w
  4863  0734  00E2               	movwf	main@steinhart+1
  4864  0735  087A               	movf	?___lwtoft+2,w
  4865  0736  00E3               	movwf	main@steinhart+2
  4866                           
  4867                           ;main.c: 104: steinhart = log(steinhart);
  4868  0737  0861               	movf	main@steinhart,w
  4869  0738  00C7               	movwf	log@x
  4870  0739  0862               	movf	main@steinhart+1,w
  4871  073A  00C8               	movwf	log@x+1
  4872  073B  0863               	movf	main@steinhart+2,w
  4873  073C  00C9               	movwf	log@x+2
  4874  073D  3182  22C3  3185   	fcall	_log
  4875  0740  0020               	movlb	0	; select bank0
  4876  0741  0847               	movf	?_log,w
  4877  0742  00E1               	movwf	main@steinhart
  4878  0743  0848               	movf	?_log+1,w
  4879  0744  00E2               	movwf	main@steinhart+1
  4880  0745  0849               	movf	?_log+2,w
  4881  0746  00E3               	movwf	main@steinhart+2
  4882                           
  4883                           ;main.c: 105: steinhart /= 3490;
  4884  0747  3020               	movlw	32
  4885  0748  00F8               	movwf	___ftdiv@f2
  4886  0749  305A               	movlw	90
  4887  074A  00F9               	movwf	___ftdiv@f2+1
  4888  074B  3045               	movlw	69
  4889  074C  00FA               	movwf	___ftdiv@f2+2
  4890  074D  0861               	movf	main@steinhart,w
  4891  074E  00FB               	movwf	___ftdiv@f1
  4892  074F  0862               	movf	main@steinhart+1,w
  4893  0750  00FC               	movwf	___ftdiv@f1+1
  4894  0751  0863               	movf	main@steinhart+2,w
  4895  0752  00FD               	movwf	___ftdiv@f1+2
  4896  0753  3182  221B  3185   	fcall	___ftdiv
  4897  0756  0878               	movf	?___ftdiv,w
  4898  0757  0020               	movlb	0	; select bank0
  4899  0758  00E1               	movwf	main@steinhart
  4900  0759  0879               	movf	?___ftdiv+1,w
  4901  075A  00E2               	movwf	main@steinhart+1
  4902  075B  087A               	movf	?___ftdiv+2,w
  4903  075C  00E3               	movwf	main@steinhart+2
  4904                           
  4905                           ;main.c: 106: steinhart += 1.0 / (25 + 273.15);
  4906  075D  30CF               	movlw	207
  4907  075E  00B0               	movwf	___ftadd@f1
  4908  075F  305B               	movlw	91
  4909  0760  00B1               	movwf	___ftadd@f1+1
  4910  0761  303B               	movlw	59
  4911  0762  00B2               	movwf	___ftadd@f1+2
  4912  0763  0861               	movf	main@steinhart,w
  4913  0764  00B3               	movwf	___ftadd@f2
  4914  0765  0862               	movf	main@steinhart+1,w
  4915  0766  00B4               	movwf	___ftadd@f2+1
  4916  0767  0863               	movf	main@steinhart+2,w
  4917  0768  00B5               	movwf	___ftadd@f2+2
  4918  0769  3184  24EF  3185   	fcall	___ftadd
  4919  076C  0020               	movlb	0	; select bank0
  4920  076D  0830               	movf	?___ftadd,w
  4921  076E  00E1               	movwf	main@steinhart
  4922  076F  0831               	movf	?___ftadd+1,w
  4923  0770  00E2               	movwf	main@steinhart+1
  4924  0771  0832               	movf	?___ftadd+2,w
  4925  0772  00E3               	movwf	main@steinhart+2
  4926                           
  4927                           ;main.c: 107: steinhart = 1.0 / steinhart;
  4928  0773  0861               	movf	main@steinhart,w
  4929  0774  00F8               	movwf	___ftdiv@f2
  4930  0775  0862               	movf	main@steinhart+1,w
  4931  0776  00F9               	movwf	___ftdiv@f2+1
  4932  0777  0863               	movf	main@steinhart+2,w
  4933  0778  00FA               	movwf	___ftdiv@f2+2
  4934  0779  3000               	movlw	0
  4935  077A  00FB               	movwf	___ftdiv@f1
  4936  077B  3080               	movlw	128
  4937  077C  00FC               	movwf	___ftdiv@f1+1
  4938  077D  303F               	movlw	63
  4939  077E  00FD               	movwf	___ftdiv@f1+2
  4940  077F  3182  221B  3185   	fcall	___ftdiv
  4941  0782  0878               	movf	?___ftdiv,w
  4942  0783  0020               	movlb	0	; select bank0
  4943  0784  00E1               	movwf	main@steinhart
  4944  0785  0879               	movf	?___ftdiv+1,w
  4945  0786  00E2               	movwf	main@steinhart+1
  4946  0787  087A               	movf	?___ftdiv+2,w
  4947  0788  00E3               	movwf	main@steinhart+2
  4948                           
  4949                           ;main.c: 108: steinhart -= 273.15;
  4950  0789  3093               	movlw	147
  4951  078A  00BD               	movwf	___ftsub@f2
  4952  078B  3088               	movlw	136
  4953  078C  00BE               	movwf	___ftsub@f2+1
  4954  078D  3043               	movlw	67
  4955  078E  00BF               	movwf	___ftsub@f2+2
  4956  078F  0861               	movf	main@steinhart,w
  4957  0790  00C0               	movwf	___ftsub@f1
  4958  0791  0862               	movf	main@steinhart+1,w
  4959  0792  00C1               	movwf	___ftsub@f1+1
  4960  0793  0863               	movf	main@steinhart+2,w
  4961  0794  00C2               	movwf	___ftsub@f1+2
  4962  0795  318D  253E  3185   	fcall	___ftsub
  4963  0798  0020               	movlb	0	; select bank0
  4964  0799  083D               	movf	?___ftsub,w
  4965  079A  00E1               	movwf	main@steinhart
  4966  079B  083E               	movf	?___ftsub+1,w
  4967  079C  00E2               	movwf	main@steinhart+1
  4968  079D  083F               	movf	?___ftsub+2,w
  4969  079E  00E3               	movwf	main@steinhart+2
  4970                           
  4971                           ;main.c: 126: { LCD_Set_Cursor(0,0); LCD_Write_Int(steinhart,-1, 0, 0);};
  4972  079F  01F3               	clrf	LCD_Set_Cursor@y
  4973  07A0  3000               	movlw	0
  4974  07A1  3180  2094  3185   	fcall	_LCD_Set_Cursor
  4975  07A4  0020               	movlb	0	; select bank0
  4976  07A5  0861               	movf	main@steinhart,w
  4977  07A6  00F0               	movwf	___fttol@f1
  4978  07A7  0862               	movf	main@steinhart+1,w
  4979  07A8  00F1               	movwf	___fttol@f1+1
  4980  07A9  0863               	movf	main@steinhart+2,w
  4981  07AA  00F2               	movwf	___fttol@f1+2
  4982  07AB  3181  2195  3185   	fcall	___fttol
  4983  07AE  0871               	movf	?___fttol+1,w
  4984  07AF  0020               	movlb	0	; select bank0
  4985  07B0  00A1               	movwf	LCD_Write_Int@value+1
  4986  07B1  0870               	movf	?___fttol,w
  4987  07B2  00A0               	movwf	LCD_Write_Int@value
  4988  07B3  01A2               	clrf	LCD_Write_Int@fieldLength
  4989  07B4  03A2               	decf	LCD_Write_Int@fieldLength,f
  4990  07B5  01A3               	clrf	LCD_Write_Int@numPlaces
  4991  07B6  01A4               	clrf	LCD_Write_Int@sign
  4992  07B7  3184  2424  3185   	fcall	_LCD_Write_Int
  4993                           
  4994                           ;main.c: 130: { LCD_Set_Cursor(1,0); LCD_Write_Int(ADCC_GetSingleConversion(2),-1, 0, 0)
      +                          ;};
  4995  07BA  01F3               	clrf	LCD_Set_Cursor@y
  4996  07BB  3001               	movlw	1
  4997  07BC  3180  2094  3185   	fcall	_LCD_Set_Cursor
  4998  07BF  3002               	movlw	2
  4999  07C0  318C  2485  3185   	fcall	_ADCC_GetSingleConversion
  5000  07C3  0871               	movf	?_ADCC_GetSingleConversion+1,w
  5001  07C4  0020               	movlb	0	; select bank0
  5002  07C5  00A1               	movwf	LCD_Write_Int@value+1
  5003  07C6  0870               	movf	?_ADCC_GetSingleConversion,w
  5004  07C7  00A0               	movwf	LCD_Write_Int@value
  5005  07C8  01A2               	clrf	LCD_Write_Int@fieldLength
  5006  07C9  03A2               	decf	LCD_Write_Int@fieldLength,f
  5007  07CA  01A3               	clrf	LCD_Write_Int@numPlaces
  5008  07CB  01A4               	clrf	LCD_Write_Int@sign
  5009  07CC  3184  2424  3185   	fcall	_LCD_Write_Int
  5010                           
  5011                           ;main.c: 131: LCD_Write_Char(' ');
  5012  07CF  3020               	movlw	32
  5013  07D0  318D  25A1  3185   	fcall	_LCD_Write_Char
  5014                           
  5015                           ;main.c: 143: PWM6_LoadDutyValue(outCurrent);
  5016  07D3  0020               	movlb	0	; select bank0
  5017  07D4  0860               	movf	main@outCurrent+1,w
  5018  07D5  00F1               	movwf	PWM6_LoadDutyValue@dutyValue+1
  5019  07D6  085F               	movf	main@outCurrent,w
  5020  07D7  00F0               	movwf	PWM6_LoadDutyValue@dutyValue
  5021  07D8  318C  24C5  3185   	fcall	_PWM6_LoadDutyValue
  5022  07DB  2E11               	goto	l2413
  5023  07DC                     __end_of_main:	
  5024                           
  5025                           	psect	text1
  5026  02C3                     __ptext1:	
  5027 ;; *************** function _log *****************
  5028 ;; Defined at:
  5029 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\log.c"
  5030 ;; Parameters:    Size  Location     Type
  5031 ;;  x               3   39[BANK0 ] void 
  5032 ;; Auto vars:     Size  Location     Type
  5033 ;;  exponent        2   43[BANK0 ] int 
  5034 ;; Return value:  Size  Location     Type
  5035 ;;                  3   39[BANK0 ] int 
  5036 ;; Registers used:
  5037 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5038 ;; Tracked objects:
  5039 ;;		On entry : 0/0
  5040 ;;		On exit  : 0/0
  5041 ;;		Unchanged: 0/0
  5042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5043 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5044 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5045 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5046 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5047 ;;Total ram usage:        6 bytes
  5048 ;; Hardware stack levels used:    1
  5049 ;; Hardware stack levels required when called:    3
  5050 ;; This function calls:
  5051 ;;		___awtoft
  5052 ;;		___ftadd
  5053 ;;		___ftge
  5054 ;;		___ftmul
  5055 ;;		_eval_poly
  5056 ;;		_frexp
  5057 ;; This function is called by:
  5058 ;;		_main
  5059 ;; This function uses a non-reentrant model
  5060 ;;
  5061                           
  5062                           
  5063                           ;psect for function _log
  5064  02C3                     _log:	
  5065                           
  5066                           ;incstack = 0
  5067                           ; Regs used in _log: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5068  02C3  0020               	movlb	0	; select bank0
  5069  02C4  0847               	movf	log@x,w
  5070  02C5  00F0               	movwf	___ftge@ff1
  5071  02C6  0848               	movf	log@x+1,w
  5072  02C7  00F1               	movwf	___ftge@ff1+1
  5073  02C8  0849               	movf	log@x+2,w
  5074  02C9  00F2               	movwf	___ftge@ff1+2
  5075  02CA  3000               	movlw	0
  5076  02CB  00F3               	movwf	___ftge@ff2
  5077  02CC  3000               	movlw	0
  5078  02CD  00F4               	movwf	___ftge@ff2+1
  5079  02CE  3000               	movlw	0
  5080  02CF  00F5               	movwf	___ftge@ff2+2
  5081  02D0  318E  2630  3182   	fcall	___ftge
  5082  02D3  1803               	btfsc	3,0
  5083  02D4  2AE1               	goto	l2127
  5084  02D5  3021               	movlw	33
  5085  02D6  0020               	movlb	0	; select bank0
  5086  02D7  00EB               	movwf	_errno
  5087  02D8  3000               	movlw	0
  5088  02D9  00EC               	movwf	_errno+1
  5089  02DA  3000               	movlw	0
  5090  02DB  00C7               	movwf	?_log
  5091  02DC  3000               	movlw	0
  5092  02DD  00C8               	movwf	?_log+1
  5093  02DE  3000               	movlw	0
  5094  02DF  00C9               	movwf	?_log+2
  5095  02E0  0008               	return
  5096  02E1                     l2127:	
  5097  02E1  0020               	movlb	0	; select bank0
  5098  02E2  0849               	movf	log@x+2,w
  5099  02E3  0448               	iorwf	log@x+1,w
  5100  02E4  0447               	iorwf	log@x,w
  5101  02E5  1D03               	skipz
  5102  02E6  2AF2               	goto	l2133
  5103  02E7  3022               	movlw	34
  5104  02E8  00EB               	movwf	_errno
  5105  02E9  3000               	movlw	0
  5106  02EA  00EC               	movwf	_errno+1
  5107  02EB  3000               	movlw	0
  5108  02EC  00C7               	movwf	?_log
  5109  02ED  3000               	movlw	0
  5110  02EE  00C8               	movwf	?_log+1
  5111  02EF  3000               	movlw	0
  5112  02F0  00C9               	movwf	?_log+2
  5113  02F1  0008               	return
  5114  02F2                     l2133:	
  5115  02F2  3000               	movlw	0
  5116  02F3  00B0               	movwf	___ftadd@f1
  5117  02F4  3080               	movlw	128
  5118  02F5  00B1               	movwf	___ftadd@f1+1
  5119  02F6  30BF               	movlw	191
  5120  02F7  00B2               	movwf	___ftadd@f1+2
  5121  02F8  3000               	movlw	0
  5122  02F9  00A0               	movwf	___ftmul@f1
  5123  02FA  3000               	movlw	0
  5124  02FB  00A1               	movwf	___ftmul@f1+1
  5125  02FC  3040               	movlw	64
  5126  02FD  00A2               	movwf	___ftmul@f1+2
  5127  02FE  304B               	movlw	(low (log@exponent| 0))& (0+255)
  5128  02FF  00CA               	movwf	??_log
  5129  0300  084A               	movf	??_log,w
  5130  0301  00F3               	movwf	frexp@eptr
  5131  0302  0847               	movf	log@x,w
  5132  0303  00F0               	movwf	frexp@value
  5133  0304  0848               	movf	log@x+1,w
  5134  0305  00F1               	movwf	frexp@value+1
  5135  0306  0849               	movf	log@x+2,w
  5136  0307  00F2               	movwf	frexp@value+2
  5137  0308  318E  266B  3182   	fcall	_frexp
  5138  030B  0870               	movf	?_frexp,w
  5139  030C  0020               	movlb	0	; select bank0
  5140  030D  00A3               	movwf	___ftmul@f2
  5141  030E  0871               	movf	?_frexp+1,w
  5142  030F  00A4               	movwf	___ftmul@f2+1
  5143  0310  0872               	movf	?_frexp+2,w
  5144  0311  00A5               	movwf	___ftmul@f2+2
  5145  0312  3183  2370  3182   	fcall	___ftmul
  5146  0315  0020               	movlb	0	; select bank0
  5147  0316  0820               	movf	?___ftmul,w
  5148  0317  00B3               	movwf	___ftadd@f2
  5149  0318  0821               	movf	?___ftmul+1,w
  5150  0319  00B4               	movwf	___ftadd@f2+1
  5151  031A  0822               	movf	?___ftmul+2,w
  5152  031B  00B5               	movwf	___ftadd@f2+2
  5153  031C  3184  24EF  3182   	fcall	___ftadd
  5154  031F  0020               	movlb	0	; select bank0
  5155  0320  0830               	movf	?___ftadd,w
  5156  0321  00C7               	movwf	log@x
  5157  0322  0831               	movf	?___ftadd+1,w
  5158  0323  00C8               	movwf	log@x+1
  5159  0324  0832               	movf	?___ftadd+2,w
  5160  0325  00C9               	movwf	log@x+2
  5161  0326  30FF               	movlw	255
  5162  0327  07CB               	addwf	log@exponent,f
  5163  0328  30FF               	movlw	255
  5164  0329  3DCC               	addwfc	log@exponent+1,f
  5165  032A  0847               	movf	log@x,w
  5166  032B  00BD               	movwf	eval_poly@x
  5167  032C  0848               	movf	log@x+1,w
  5168  032D  00BE               	movwf	eval_poly@x+1
  5169  032E  0849               	movf	log@x+2,w
  5170  032F  00BF               	movwf	eval_poly@x+2
  5171  0330  3000               	movlw	low (log@coeff| (0+32768))
  5172  0331  00C0               	movwf	eval_poly@d
  5173  0332  3090               	movlw	high (log@coeff| (0+32768))
  5174  0333  00C1               	movwf	eval_poly@d+1
  5175  0334  3008               	movlw	8
  5176  0335  00C2               	movwf	eval_poly@n
  5177  0336  3000               	movlw	0
  5178  0337  00C3               	movwf	eval_poly@n+1
  5179  0338  318F  273C  3182   	fcall	_eval_poly
  5180  033B  0020               	movlb	0	; select bank0
  5181  033C  083D               	movf	?_eval_poly,w
  5182  033D  00C7               	movwf	log@x
  5183  033E  083E               	movf	?_eval_poly+1,w
  5184  033F  00C8               	movwf	log@x+1
  5185  0340  083F               	movf	?_eval_poly+2,w
  5186  0341  00C9               	movwf	log@x+2
  5187  0342  0847               	movf	log@x,w
  5188  0343  00B0               	movwf	___ftadd@f1
  5189  0344  0848               	movf	log@x+1,w
  5190  0345  00B1               	movwf	___ftadd@f1+1
  5191  0346  0849               	movf	log@x+2,w
  5192  0347  00B2               	movwf	___ftadd@f1+2
  5193  0348  3072               	movlw	114
  5194  0349  00A0               	movwf	___ftmul@f1
  5195  034A  3031               	movlw	49
  5196  034B  00A1               	movwf	___ftmul@f1+1
  5197  034C  303F               	movlw	63
  5198  034D  00A2               	movwf	___ftmul@f1+2
  5199  034E  084C               	movf	log@exponent+1,w
  5200  034F  00F9               	movwf	___awtoft@c+1
  5201  0350  084B               	movf	log@exponent,w
  5202  0351  00F8               	movwf	___awtoft@c
  5203  0352  318D  255C  3182   	fcall	___awtoft
  5204  0355  0878               	movf	?___awtoft,w
  5205  0356  0020               	movlb	0	; select bank0
  5206  0357  00A3               	movwf	___ftmul@f2
  5207  0358  0879               	movf	?___awtoft+1,w
  5208  0359  00A4               	movwf	___ftmul@f2+1
  5209  035A  087A               	movf	?___awtoft+2,w
  5210  035B  00A5               	movwf	___ftmul@f2+2
  5211  035C  3183  2370  3182   	fcall	___ftmul
  5212  035F  0020               	movlb	0	; select bank0
  5213  0360  0820               	movf	?___ftmul,w
  5214  0361  00B3               	movwf	___ftadd@f2
  5215  0362  0821               	movf	?___ftmul+1,w
  5216  0363  00B4               	movwf	___ftadd@f2+1
  5217  0364  0822               	movf	?___ftmul+2,w
  5218  0365  00B5               	movwf	___ftadd@f2+2
  5219  0366  3184  24EF         	fcall	___ftadd
  5220  0368  0020               	movlb	0	; select bank0
  5221  0369  0830               	movf	?___ftadd,w
  5222  036A  00C7               	movwf	?_log
  5223  036B  0831               	movf	?___ftadd+1,w
  5224  036C  00C8               	movwf	?_log+1
  5225  036D  0832               	movf	?___ftadd+2,w
  5226  036E  00C9               	movwf	?_log+2
  5227  036F  0008               	return
  5228  0370                     __end_of_log:	
  5229                           
  5230                           	psect	text2
  5231  0E6B                     __ptext2:	
  5232 ;; *************** function _frexp *****************
  5233 ;; Defined at:
  5234 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\frexp.c"
  5235 ;; Parameters:    Size  Location     Type
  5236 ;;  value           3    0[COMMON] int 
  5237 ;;  eptr            1    3[COMMON] PTR int 
  5238 ;;		 -> log@exponent(2), 
  5239 ;; Auto vars:     Size  Location     Type
  5240 ;;		None
  5241 ;; Return value:  Size  Location     Type
  5242 ;;                  3    0[COMMON] PTR int 
  5243 ;; Registers used:
  5244 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5245 ;; Tracked objects:
  5246 ;;		On entry : 0/0
  5247 ;;		On exit  : 0/0
  5248 ;;		Unchanged: 0/0
  5249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5250 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5252 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5253 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5254 ;;Total ram usage:        6 bytes
  5255 ;; Hardware stack levels used:    1
  5256 ;; This function calls:
  5257 ;;		Nothing
  5258 ;; This function is called by:
  5259 ;;		_log
  5260 ;; This function uses a non-reentrant model
  5261 ;;
  5262                           
  5263                           
  5264                           ;psect for function _frexp
  5265  0E6B                     _frexp:	
  5266                           
  5267                           ;incstack = 0
  5268                           ; Regs used in _frexp: [wreg+fsr1l+fsr1h+status,2+status,0]
  5269  0E6B  0872               	movf	frexp@value+2,w
  5270  0E6C  0471               	iorwf	frexp@value+1,w
  5271  0E6D  0470               	iorwf	frexp@value,w
  5272  0E6E  1D03               	skipz
  5273  0E6F  2E7D               	goto	l2025
  5274  0E70  0873               	movf	frexp@eptr,w
  5275  0E71  0086               	movwf	6
  5276  0E72  0187               	clrf	7
  5277  0E73  3000               	movlw	0
  5278  0E74  3FC0               	movwi [0]fsr1
  5279  0E75  3FC1               	movwi [1]fsr1
  5280  0E76  3000               	movlw	0
  5281  0E77  00F0               	movwf	?_frexp
  5282  0E78  3000               	movlw	0
  5283  0E79  00F1               	movwf	?_frexp+1
  5284  0E7A  3000               	movlw	0
  5285  0E7B  00F2               	movwf	?_frexp+2
  5286  0E7C  0008               	return
  5287  0E7D                     l2025:	
  5288  0E7D  0872               	movf	frexp@value+2,w
  5289  0E7E  397F               	andlw	127
  5290  0E7F  00F4               	movwf	??_frexp
  5291  0E80  01F5               	clrf	??_frexp+1
  5292  0E81  35F4               	lslf	??_frexp,f
  5293  0E82  0DF5               	rlf	??_frexp+1,f
  5294  0E83  0873               	movf	frexp@eptr,w
  5295  0E84  0086               	movwf	6
  5296  0E85  0187               	clrf	7
  5297  0E86  0874               	movf	??_frexp,w
  5298  0E87  3FC0               	movwi [0]fsr1
  5299  0E88  0875               	movf	??_frexp+1,w
  5300  0E89  3FC1               	movwi [1]fsr1
  5301  0E8A  0D71               	rlf	frexp@value+1,w
  5302  0E8B  0D71               	rlf	frexp@value+1,w
  5303  0E8C  3901               	andlw	1
  5304  0E8D  00F4               	movwf	??_frexp
  5305  0E8E  01F5               	clrf	??_frexp+1
  5306  0E8F  0873               	movf	frexp@eptr,w
  5307  0E90  0086               	movwf	6
  5308  0E91  0187               	clrf	7
  5309  0E92  0874               	movf	??_frexp,w
  5310  0E93  0481               	iorwf	1,f
  5311  0E94  3141               	addfsr 1,1
  5312  0E95  0875               	movf	??_frexp+1,w
  5313  0E96  0481               	iorwf	1,f
  5314  0E97  0873               	movf	frexp@eptr,w
  5315  0E98  0086               	movwf	6
  5316  0E99  0187               	clrf	7
  5317  0E9A  3082               	movlw	130
  5318  0E9B  0781               	addwf	1,f
  5319  0E9C  3141               	addfsr 1,1
  5320  0E9D  30FF               	movlw	255
  5321  0E9E  3D81               	addwfc	1,f
  5322  0E9F  317F               	addfsr 1,-1
  5323  0EA0  0872               	movf	frexp@value+2,w
  5324  0EA1  3980               	andlw	-128
  5325  0EA2  383F               	iorlw	63
  5326  0EA3  00F2               	movwf	frexp@value+2
  5327  0EA4  13F1               	bcf	frexp@value+1,7
  5328  0EA5  0008               	return
  5329  0EA6                     __end_of_frexp:	
  5330                           
  5331                           	psect	text3
  5332  0F3C                     __ptext3:	
  5333 ;; *************** function _eval_poly *****************
  5334 ;; Defined at:
  5335 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\evalpoly.c"
  5336 ;; Parameters:    Size  Location     Type
  5337 ;;  x               3   29[BANK0 ] PTR int 
  5338 ;;  d               2   32[BANK0 ] PTR const 
  5339 ;;		 -> log@coeff(27), 
  5340 ;;  n               2   34[BANK0 ] int 
  5341 ;; Auto vars:     Size  Location     Type
  5342 ;;  res             3   36[BANK0 ] int 
  5343 ;; Return value:  Size  Location     Type
  5344 ;;                  3   29[BANK0 ] int 
  5345 ;; Registers used:
  5346 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5347 ;; Tracked objects:
  5348 ;;		On entry : 0/0
  5349 ;;		On exit  : 0/0
  5350 ;;		Unchanged: 0/0
  5351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5352 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5353 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5355 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5356 ;;Total ram usage:       10 bytes
  5357 ;; Hardware stack levels used:    1
  5358 ;; Hardware stack levels required when called:    2
  5359 ;; This function calls:
  5360 ;;		___ftadd
  5361 ;;		___ftmul
  5362 ;;		___wmul
  5363 ;; This function is called by:
  5364 ;;		_log
  5365 ;; This function uses a non-reentrant model
  5366 ;;
  5367                           
  5368                           
  5369                           ;psect for function _eval_poly
  5370  0F3C                     _eval_poly:	
  5371                           
  5372                           ;incstack = 0
  5373                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5374  0F3C  0020               	movlb	0	; select bank0
  5375  0F3D  0843               	movf	eval_poly@n+1,w
  5376  0F3E  00F1               	movwf	___wmul@multiplier+1
  5377  0F3F  0842               	movf	eval_poly@n,w
  5378  0F40  00F0               	movwf	___wmul@multiplier
  5379  0F41  3003               	movlw	3
  5380  0F42  00F2               	movwf	___wmul@multiplicand
  5381  0F43  3000               	movlw	0
  5382  0F44  00F3               	movwf	___wmul@multiplicand+1
  5383  0F45  318D  2523  318F   	fcall	___wmul
  5384  0F48  0020               	movlb	0	; select bank0
  5385  0F49  0840               	movf	eval_poly@d,w
  5386  0F4A  0770               	addwf	?___wmul,w
  5387  0F4B  0084               	movwf	4
  5388  0F4C  0841               	movf	eval_poly@d+1,w
  5389  0F4D  3D71               	addwfc	?___wmul+1,w
  5390  0F4E  0085               	movwf	5
  5391  0F4F  3F00               	moviw [0]fsr0
  5392  0F50  00C4               	movwf	eval_poly@res
  5393  0F51  3F01               	moviw [1]fsr0
  5394  0F52  00C5               	movwf	eval_poly@res+1
  5395  0F53  3F02               	moviw [2]fsr0
  5396  0F54                     L1:	
  5397  0F54  00C6               	movwf	eval_poly@res+2
  5398  0F55  0842               	movf	eval_poly@n,w
  5399  0F56  0443               	iorwf	eval_poly@n+1,w
  5400  0F57  1903               	btfsc	3,2
  5401  0F58  2F95               	goto	l2043
  5402  0F59  30FF               	movlw	255
  5403  0F5A  07C2               	addwf	eval_poly@n,f
  5404  0F5B  30FF               	movlw	255
  5405  0F5C  3DC3               	addwfc	eval_poly@n+1,f
  5406  0F5D  0843               	movf	eval_poly@n+1,w
  5407  0F5E  00F1               	movwf	___wmul@multiplier+1
  5408  0F5F  0842               	movf	eval_poly@n,w
  5409  0F60  00F0               	movwf	___wmul@multiplier
  5410  0F61  3003               	movlw	3
  5411  0F62  00F2               	movwf	___wmul@multiplicand
  5412  0F63  3000               	movlw	0
  5413  0F64  00F3               	movwf	___wmul@multiplicand+1
  5414  0F65  318D  2523  318F   	fcall	___wmul
  5415  0F68  0020               	movlb	0	; select bank0
  5416  0F69  0840               	movf	eval_poly@d,w
  5417  0F6A  0770               	addwf	?___wmul,w
  5418  0F6B  0084               	movwf	4
  5419  0F6C  0841               	movf	eval_poly@d+1,w
  5420  0F6D  3D71               	addwfc	?___wmul+1,w
  5421  0F6E  0085               	movwf	5
  5422  0F6F  3F00               	moviw [0]fsr0
  5423  0F70  00B0               	movwf	___ftadd@f1
  5424  0F71  3F01               	moviw [1]fsr0
  5425  0F72  00B1               	movwf	___ftadd@f1+1
  5426  0F73  3F02               	moviw [2]fsr0
  5427  0F74  00B2               	movwf	___ftadd@f1+2
  5428  0F75  0844               	movf	eval_poly@res,w
  5429  0F76  00A0               	movwf	___ftmul@f1
  5430  0F77  0845               	movf	eval_poly@res+1,w
  5431  0F78  00A1               	movwf	___ftmul@f1+1
  5432  0F79  0846               	movf	eval_poly@res+2,w
  5433  0F7A  00A2               	movwf	___ftmul@f1+2
  5434  0F7B  083D               	movf	eval_poly@x,w
  5435  0F7C  00A3               	movwf	___ftmul@f2
  5436  0F7D  083E               	movf	eval_poly@x+1,w
  5437  0F7E  00A4               	movwf	___ftmul@f2+1
  5438  0F7F  083F               	movf	eval_poly@x+2,w
  5439  0F80  00A5               	movwf	___ftmul@f2+2
  5440  0F81  3183  2370  318F   	fcall	___ftmul
  5441  0F84  0020               	movlb	0	; select bank0
  5442  0F85  0820               	movf	?___ftmul,w
  5443  0F86  00B3               	movwf	___ftadd@f2
  5444  0F87  0821               	movf	?___ftmul+1,w
  5445  0F88  00B4               	movwf	___ftadd@f2+1
  5446  0F89  0822               	movf	?___ftmul+2,w
  5447  0F8A  00B5               	movwf	___ftadd@f2+2
  5448  0F8B  3184  24EF  318F   	fcall	___ftadd
  5449  0F8E  0020               	movlb	0	; select bank0
  5450  0F8F  0830               	movf	?___ftadd,w
  5451  0F90  00C4               	movwf	eval_poly@res
  5452  0F91  0831               	movf	?___ftadd+1,w
  5453  0F92  00C5               	movwf	eval_poly@res+1
  5454  0F93  0832               	movf	?___ftadd+2,w
  5455  0F94  2F54               	goto	L1
  5456  0F95                     l2043:	
  5457  0F95  0844               	movf	eval_poly@res,w
  5458  0F96  00BD               	movwf	?_eval_poly
  5459  0F97  0845               	movf	eval_poly@res+1,w
  5460  0F98  00BE               	movwf	?_eval_poly+1
  5461  0F99  0846               	movf	eval_poly@res+2,w
  5462  0F9A  00BF               	movwf	?_eval_poly+2
  5463  0F9B  0008               	return
  5464  0F9C                     __end_of_eval_poly:	
  5465                           
  5466                           	psect	text4
  5467  0D23                     __ptext4:	
  5468 ;; *************** function ___wmul *****************
  5469 ;; Defined at:
  5470 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
  5471 ;; Parameters:    Size  Location     Type
  5472 ;;  multiplier      2    0[COMMON] unsigned int 
  5473 ;;  multiplicand    2    2[COMMON] unsigned int 
  5474 ;; Auto vars:     Size  Location     Type
  5475 ;;  product         2    4[COMMON] unsigned int 
  5476 ;; Return value:  Size  Location     Type
  5477 ;;                  2    0[COMMON] unsigned int 
  5478 ;; Registers used:
  5479 ;;		wreg, status,2, status,0
  5480 ;; Tracked objects:
  5481 ;;		On entry : 0/0
  5482 ;;		On exit  : 0/0
  5483 ;;		Unchanged: 0/0
  5484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5485 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5486 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5488 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5489 ;;Total ram usage:        6 bytes
  5490 ;; Hardware stack levels used:    1
  5491 ;; This function calls:
  5492 ;;		Nothing
  5493 ;; This function is called by:
  5494 ;;		_eval_poly
  5495 ;; This function uses a non-reentrant model
  5496 ;;
  5497                           
  5498                           
  5499                           ;psect for function ___wmul
  5500  0D23                     ___wmul:	
  5501                           
  5502                           ;incstack = 0
  5503                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5504  0D23  01F4               	clrf	___wmul@product
  5505  0D24  01F5               	clrf	___wmul@product+1
  5506  0D25                     l1691:	
  5507  0D25  1C70               	btfss	___wmul@multiplier,0
  5508  0D26  2D2B               	goto	l361
  5509  0D27  0872               	movf	___wmul@multiplicand,w
  5510  0D28  07F4               	addwf	___wmul@product,f
  5511  0D29  0873               	movf	___wmul@multiplicand+1,w
  5512  0D2A  3DF5               	addwfc	___wmul@product+1,f
  5513  0D2B                     l361:	
  5514  0D2B  3001               	movlw	1
  5515  0D2C                     u1685:	
  5516  0D2C  35F2               	lslf	___wmul@multiplicand,f
  5517  0D2D  0DF3               	rlf	___wmul@multiplicand+1,f
  5518  0D2E  0B89               	decfsz	9,f
  5519  0D2F  2D2C               	goto	u1685
  5520  0D30  3001               	movlw	1
  5521  0D31                     u1695:	
  5522  0D31  36F1               	lsrf	___wmul@multiplier+1,f
  5523  0D32  0CF0               	rrf	___wmul@multiplier,f
  5524  0D33  0B89               	decfsz	9,f
  5525  0D34  2D31               	goto	u1695
  5526  0D35  0870               	movf	___wmul@multiplier,w
  5527  0D36  0471               	iorwf	___wmul@multiplier+1,w
  5528  0D37  1D03               	btfss	3,2
  5529  0D38  2D25               	goto	l1691
  5530  0D39  0875               	movf	___wmul@product+1,w
  5531  0D3A  00F1               	movwf	?___wmul+1
  5532  0D3B  0874               	movf	___wmul@product,w
  5533  0D3C  00F0               	movwf	?___wmul
  5534  0D3D  0008               	return
  5535  0D3E                     __end_of___wmul:	
  5536                           
  5537                           	psect	text5
  5538  0370                     __ptext5:	
  5539 ;; *************** function ___ftmul *****************
  5540 ;; Defined at:
  5541 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftmul.c"
  5542 ;; Parameters:    Size  Location     Type
  5543 ;;  f1              3    0[BANK0 ] float 
  5544 ;;  f2              3    3[BANK0 ] float 
  5545 ;; Auto vars:     Size  Location     Type
  5546 ;;  f3_as_produc    3   11[BANK0 ] unsigned um
  5547 ;;  sign            1   15[BANK0 ] unsigned char 
  5548 ;;  cntr            1   14[BANK0 ] unsigned char 
  5549 ;;  exp             1   10[BANK0 ] unsigned char 
  5550 ;; Return value:  Size  Location     Type
  5551 ;;                  3    0[BANK0 ] float 
  5552 ;; Registers used:
  5553 ;;		wreg, status,2, status,0, pclath, cstack
  5554 ;; Tracked objects:
  5555 ;;		On entry : 0/0
  5556 ;;		On exit  : 0/0
  5557 ;;		Unchanged: 0/0
  5558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5559 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5560 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5561 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5562 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5563 ;;Total ram usage:       16 bytes
  5564 ;; Hardware stack levels used:    1
  5565 ;; Hardware stack levels required when called:    1
  5566 ;; This function calls:
  5567 ;;		___ftpack
  5568 ;; This function is called by:
  5569 ;;		_log
  5570 ;;		_eval_poly
  5571 ;; This function uses a non-reentrant model
  5572 ;;
  5573                           
  5574                           
  5575                           ;psect for function ___ftmul
  5576  0370                     ___ftmul:	
  5577                           
  5578                           ;incstack = 0
  5579                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  5580  0370  0020               	movlb	0	; select bank0
  5581  0371  0820               	movf	___ftmul@f1,w
  5582  0372  00A6               	movwf	??___ftmul
  5583  0373  0821               	movf	___ftmul@f1+1,w
  5584  0374  00A7               	movwf	??___ftmul+1
  5585  0375  0822               	movf	___ftmul@f1+2,w
  5586  0376  00A8               	movwf	??___ftmul+2
  5587  0377  1003               	clrc
  5588  0378  0D27               	rlf	??___ftmul+1,w
  5589  0379  0D28               	rlf	??___ftmul+2,w
  5590  037A  00A9               	movwf	??___ftmul+3
  5591  037B  0829               	movf	??___ftmul+3,w
  5592  037C  00AA               	movwf	___ftmul@exp
  5593  037D  082A               	movf	___ftmul@exp,w
  5594  037E  1D03               	btfss	3,2
  5595  037F  2B87               	goto	l1779
  5596  0380  3000               	movlw	0
  5597  0381  00A0               	movwf	?___ftmul
  5598  0382  3000               	movlw	0
  5599  0383  00A1               	movwf	?___ftmul+1
  5600  0384  3000               	movlw	0
  5601  0385  00A2               	movwf	?___ftmul+2
  5602  0386  0008               	return
  5603  0387                     l1779:	
  5604  0387  0823               	movf	___ftmul@f2,w
  5605  0388  00A6               	movwf	??___ftmul
  5606  0389  0824               	movf	___ftmul@f2+1,w
  5607  038A  00A7               	movwf	??___ftmul+1
  5608  038B  0825               	movf	___ftmul@f2+2,w
  5609  038C  00A8               	movwf	??___ftmul+2
  5610  038D  1003               	clrc
  5611  038E  0D27               	rlf	??___ftmul+1,w
  5612  038F  0D28               	rlf	??___ftmul+2,w
  5613  0390  00A9               	movwf	??___ftmul+3
  5614  0391  0829               	movf	??___ftmul+3,w
  5615  0392  00AF               	movwf	___ftmul@sign
  5616  0393  082F               	movf	___ftmul@sign,w
  5617  0394  1D03               	btfss	3,2
  5618  0395  2B9D               	goto	l1785
  5619  0396  3000               	movlw	0
  5620  0397  00A0               	movwf	?___ftmul
  5621  0398  3000               	movlw	0
  5622  0399  00A1               	movwf	?___ftmul+1
  5623  039A  3000               	movlw	0
  5624  039B  00A2               	movwf	?___ftmul+2
  5625  039C  0008               	return
  5626  039D                     l1785:	
  5627  039D  082F               	movf	___ftmul@sign,w
  5628  039E  3E7B               	addlw	123
  5629  039F  00A6               	movwf	??___ftmul
  5630  03A0  0826               	movf	??___ftmul,w
  5631  03A1  07AA               	addwf	___ftmul@exp,f
  5632  03A2  0820               	movf	___ftmul@f1,w
  5633  03A3  00A6               	movwf	??___ftmul
  5634  03A4  0821               	movf	___ftmul@f1+1,w
  5635  03A5  00A7               	movwf	??___ftmul+1
  5636  03A6  0822               	movf	___ftmul@f1+2,w
  5637  03A7  00A8               	movwf	??___ftmul+2
  5638  03A8  3010               	movlw	16
  5639  03A9                     u1965:	
  5640  03A9  36A8               	lsrf	??___ftmul+2,f
  5641  03AA  0CA7               	rrf	??___ftmul+1,f
  5642  03AB  0CA6               	rrf	??___ftmul,f
  5643  03AC  0B89               	decfsz	9,f
  5644  03AD  2BA9               	goto	u1965
  5645  03AE  0826               	movf	??___ftmul,w
  5646  03AF  00A9               	movwf	??___ftmul+3
  5647  03B0  0829               	movf	??___ftmul+3,w
  5648  03B1  00AF               	movwf	___ftmul@sign
  5649  03B2  0823               	movf	___ftmul@f2,w
  5650  03B3  00A6               	movwf	??___ftmul
  5651  03B4  0824               	movf	___ftmul@f2+1,w
  5652  03B5  00A7               	movwf	??___ftmul+1
  5653  03B6  0825               	movf	___ftmul@f2+2,w
  5654  03B7  00A8               	movwf	??___ftmul+2
  5655  03B8  3010               	movlw	16
  5656  03B9                     u1975:	
  5657  03B9  36A8               	lsrf	??___ftmul+2,f
  5658  03BA  0CA7               	rrf	??___ftmul+1,f
  5659  03BB  0CA6               	rrf	??___ftmul,f
  5660  03BC  0B89               	decfsz	9,f
  5661  03BD  2BB9               	goto	u1975
  5662  03BE  0826               	movf	??___ftmul,w
  5663  03BF  00A9               	movwf	??___ftmul+3
  5664  03C0  0829               	movf	??___ftmul+3,w
  5665  03C1  06AF               	xorwf	___ftmul@sign,f
  5666  03C2  3080               	movlw	128
  5667  03C3  00A6               	movwf	??___ftmul
  5668  03C4  0826               	movf	??___ftmul,w
  5669  03C5  05AF               	andwf	___ftmul@sign,f
  5670  03C6  17A1               	bsf	___ftmul@f1+1,7
  5671  03C7  17A4               	bsf	___ftmul@f2+1,7
  5672  03C8  30FF               	movlw	255
  5673  03C9  05A3               	andwf	___ftmul@f2,f
  5674  03CA  30FF               	movlw	255
  5675  03CB  05A4               	andwf	___ftmul@f2+1,f
  5676  03CC  3000               	movlw	0
  5677  03CD  05A5               	andwf	___ftmul@f2+2,f
  5678  03CE  3000               	movlw	0
  5679  03CF  00AB               	movwf	___ftmul@f3_as_product
  5680  03D0  3000               	movlw	0
  5681  03D1  00AC               	movwf	___ftmul@f3_as_product+1
  5682  03D2  3000               	movlw	0
  5683  03D3  00AD               	movwf	___ftmul@f3_as_product+2
  5684  03D4  3007               	movlw	7
  5685  03D5  00A6               	movwf	??___ftmul
  5686  03D6  0826               	movf	??___ftmul,w
  5687  03D7  00AE               	movwf	___ftmul@cntr
  5688  03D8                     l1797:	
  5689  03D8  1C20               	btfss	___ftmul@f1,0
  5690  03D9  2BE0               	goto	l1801
  5691  03DA  0823               	movf	___ftmul@f2,w
  5692  03DB  07AB               	addwf	___ftmul@f3_as_product,f
  5693  03DC  0824               	movf	___ftmul@f2+1,w
  5694  03DD  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  5695  03DE  0825               	movf	___ftmul@f2+2,w
  5696  03DF  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  5697  03E0                     l1801:	
  5698  03E0  3001               	movlw	1
  5699  03E1                     u1995:	
  5700  03E1  36A2               	lsrf	___ftmul@f1+2,f
  5701  03E2  0CA1               	rrf	___ftmul@f1+1,f
  5702  03E3  0CA0               	rrf	___ftmul@f1,f
  5703  03E4  0B89               	decfsz	9,f
  5704  03E5  2BE1               	goto	u1995
  5705  03E6  3001               	movlw	1
  5706  03E7                     u2005:	
  5707  03E7  35A3               	lslf	___ftmul@f2,f
  5708  03E8  0DA4               	rlf	___ftmul@f2+1,f
  5709  03E9  0DA5               	rlf	___ftmul@f2+2,f
  5710  03EA  0B89               	decfsz	9,f
  5711  03EB  2BE7               	goto	u2005
  5712  03EC  3001               	movlw	1
  5713  03ED  02AE               	subwf	___ftmul@cntr,f
  5714  03EE  1D03               	btfss	3,2
  5715  03EF  2BD8               	goto	l1797
  5716  03F0  3009               	movlw	9
  5717  03F1  00A6               	movwf	??___ftmul
  5718  03F2  0826               	movf	??___ftmul,w
  5719  03F3  00AE               	movwf	___ftmul@cntr
  5720  03F4                     l1809:	
  5721  03F4  1C20               	btfss	___ftmul@f1,0
  5722  03F5  2BFC               	goto	l1813
  5723  03F6  0823               	movf	___ftmul@f2,w
  5724  03F7  07AB               	addwf	___ftmul@f3_as_product,f
  5725  03F8  0824               	movf	___ftmul@f2+1,w
  5726  03F9  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  5727  03FA  0825               	movf	___ftmul@f2+2,w
  5728  03FB  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  5729  03FC                     l1813:	
  5730  03FC  3001               	movlw	1
  5731  03FD                     u2035:	
  5732  03FD  36A2               	lsrf	___ftmul@f1+2,f
  5733  03FE  0CA1               	rrf	___ftmul@f1+1,f
  5734  03FF  0CA0               	rrf	___ftmul@f1,f
  5735  0400  0B89               	decfsz	9,f
  5736  0401  2BFD               	goto	u2035
  5737  0402  3001               	movlw	1
  5738  0403                     u2045:	
  5739  0403  36AD               	lsrf	___ftmul@f3_as_product+2,f
  5740  0404  0CAC               	rrf	___ftmul@f3_as_product+1,f
  5741  0405  0CAB               	rrf	___ftmul@f3_as_product,f
  5742  0406  0B89               	decfsz	9,f
  5743  0407  2C03               	goto	u2045
  5744  0408  3001               	movlw	1
  5745  0409  02AE               	subwf	___ftmul@cntr,f
  5746  040A  1D03               	btfss	3,2
  5747  040B  2BF4               	goto	l1809
  5748  040C  082B               	movf	___ftmul@f3_as_product,w
  5749  040D  00F0               	movwf	___ftpack@arg
  5750  040E  082C               	movf	___ftmul@f3_as_product+1,w
  5751  040F  00F1               	movwf	___ftpack@arg+1
  5752  0410  082D               	movf	___ftmul@f3_as_product+2,w
  5753  0411  00F2               	movwf	___ftpack@arg+2
  5754  0412  082A               	movf	___ftmul@exp,w
  5755  0413  00A6               	movwf	??___ftmul
  5756  0414  0826               	movf	??___ftmul,w
  5757  0415  00F3               	movwf	___ftpack@exp
  5758  0416  082F               	movf	___ftmul@sign,w
  5759  0417  00A7               	movwf	??___ftmul+1
  5760  0418  0827               	movf	??___ftmul+1,w
  5761  0419  00F4               	movwf	___ftpack@sign
  5762  041A  318F  279C         	fcall	___ftpack
  5763  041C  0870               	movf	?___ftpack,w
  5764  041D  0020               	movlb	0	; select bank0
  5765  041E  00A0               	movwf	?___ftmul
  5766  041F  0871               	movf	?___ftpack+1,w
  5767  0420  00A1               	movwf	?___ftmul+1
  5768  0421  0872               	movf	?___ftpack+2,w
  5769  0422  00A2               	movwf	?___ftmul+2
  5770  0423  0008               	return
  5771  0424                     __end_of___ftmul:	
  5772                           
  5773                           	psect	text6
  5774  0E30                     __ptext6:	
  5775 ;; *************** function ___ftge *****************
  5776 ;; Defined at:
  5777 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftge.c"
  5778 ;; Parameters:    Size  Location     Type
  5779 ;;  ff1             3    0[COMMON] float 
  5780 ;;  ff2             3    3[COMMON] float 
  5781 ;; Auto vars:     Size  Location     Type
  5782 ;;		None
  5783 ;; Return value:  Size  Location     Type
  5784 ;;		None               void
  5785 ;; Registers used:
  5786 ;;		wreg, status,2, status,0
  5787 ;; Tracked objects:
  5788 ;;		On entry : 0/0
  5789 ;;		On exit  : 0/0
  5790 ;;		Unchanged: 0/0
  5791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5792 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5794 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5795 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5796 ;;Total ram usage:        9 bytes
  5797 ;; Hardware stack levels used:    1
  5798 ;; This function calls:
  5799 ;;		Nothing
  5800 ;; This function is called by:
  5801 ;;		_log
  5802 ;; This function uses a non-reentrant model
  5803 ;;
  5804                           
  5805                           
  5806                           ;psect for function ___ftge
  5807  0E30                     ___ftge:	
  5808                           
  5809                           ;incstack = 0
  5810                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  5811  0E30  1FF2               	btfss	___ftge@ff1+2,7
  5812  0E31  2E46               	goto	l2001
  5813  0E32  0970               	comf	___ftge@ff1,w
  5814  0E33  00F6               	movwf	??___ftge
  5815  0E34  0971               	comf	___ftge@ff1+1,w
  5816  0E35  00F7               	movwf	??___ftge+1
  5817  0E36  0972               	comf	___ftge@ff1+2,w
  5818  0E37  00F8               	movwf	??___ftge+2
  5819  0E38  0AF6               	incf	??___ftge,f
  5820  0E39  1903               	skipnz
  5821  0E3A  0AF7               	incf	??___ftge+1,f
  5822  0E3B  1903               	skipnz
  5823  0E3C  0AF8               	incf	??___ftge+2,f
  5824  0E3D  3000               	movlw	0
  5825  0E3E  0776               	addwf	??___ftge,w
  5826  0E3F  00F0               	movwf	___ftge@ff1
  5827  0E40  3000               	movlw	0
  5828  0E41  3D77               	addwfc	??___ftge+1,w
  5829  0E42  00F1               	movwf	___ftge@ff1+1
  5830  0E43  3080               	movlw	128
  5831  0E44  3D78               	addwfc	??___ftge+2,w
  5832  0E45  00F2               	movwf	___ftge@ff1+2
  5833  0E46                     l2001:	
  5834  0E46  1FF5               	btfss	___ftge@ff2+2,7
  5835  0E47  2E5C               	goto	l2005
  5836  0E48  0973               	comf	___ftge@ff2,w
  5837  0E49  00F6               	movwf	??___ftge
  5838  0E4A  0974               	comf	___ftge@ff2+1,w
  5839  0E4B  00F7               	movwf	??___ftge+1
  5840  0E4C  0975               	comf	___ftge@ff2+2,w
  5841  0E4D  00F8               	movwf	??___ftge+2
  5842  0E4E  0AF6               	incf	??___ftge,f
  5843  0E4F  1903               	skipnz
  5844  0E50  0AF7               	incf	??___ftge+1,f
  5845  0E51  1903               	skipnz
  5846  0E52  0AF8               	incf	??___ftge+2,f
  5847  0E53  3000               	movlw	0
  5848  0E54  0776               	addwf	??___ftge,w
  5849  0E55  00F3               	movwf	___ftge@ff2
  5850  0E56  3000               	movlw	0
  5851  0E57  3D77               	addwfc	??___ftge+1,w
  5852  0E58  00F4               	movwf	___ftge@ff2+1
  5853  0E59  3080               	movlw	128
  5854  0E5A  3D78               	addwfc	??___ftge+2,w
  5855  0E5B  00F5               	movwf	___ftge@ff2+2
  5856  0E5C                     l2005:	
  5857  0E5C  3080               	movlw	128
  5858  0E5D  06F2               	xorwf	___ftge@ff1+2,f
  5859  0E5E  3080               	movlw	128
  5860  0E5F  06F5               	xorwf	___ftge@ff2+2,f
  5861  0E60  0875               	movf	___ftge@ff2+2,w
  5862  0E61  0272               	subwf	___ftge@ff1+2,w
  5863  0E62  1D03               	skipz
  5864  0E63  0008               	return
  5865  0E64  0874               	movf	___ftge@ff2+1,w
  5866  0E65  0271               	subwf	___ftge@ff1+1,w
  5867  0E66  1D03               	skipz
  5868  0E67  0008               	return
  5869  0E68  0873               	movf	___ftge@ff2,w
  5870  0E69  0270               	subwf	___ftge@ff1,w
  5871  0E6A  0008               	return
  5872  0E6B                     __end_of___ftge:	
  5873                           
  5874                           	psect	text7
  5875  0D5C                     __ptext7:	
  5876 ;; *************** function ___awtoft *****************
  5877 ;; Defined at:
  5878 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awtoft.c"
  5879 ;; Parameters:    Size  Location     Type
  5880 ;;  c               2    8[COMMON] int 
  5881 ;; Auto vars:     Size  Location     Type
  5882 ;;  sign            1   13[COMMON] unsigned char 
  5883 ;; Return value:  Size  Location     Type
  5884 ;;                  3    8[COMMON] float 
  5885 ;; Registers used:
  5886 ;;		wreg, status,2, status,0, pclath, cstack
  5887 ;; Tracked objects:
  5888 ;;		On entry : 0/0
  5889 ;;		On exit  : 0/0
  5890 ;;		Unchanged: 0/0
  5891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5892 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5893 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5894 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5895 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5896 ;;Total ram usage:        6 bytes
  5897 ;; Hardware stack levels used:    1
  5898 ;; Hardware stack levels required when called:    1
  5899 ;; This function calls:
  5900 ;;		___ftpack
  5901 ;; This function is called by:
  5902 ;;		_log
  5903 ;; This function uses a non-reentrant model
  5904 ;;
  5905                           
  5906                           
  5907                           ;psect for function ___awtoft
  5908  0D5C                     ___awtoft:	
  5909                           
  5910                           ;incstack = 0
  5911                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  5912  0D5C  01FD               	clrf	___awtoft@sign
  5913  0D5D  1FF9               	btfss	___awtoft@c+1,7
  5914  0D5E  2D66               	goto	l1993
  5915  0D5F  09F8               	comf	___awtoft@c,f
  5916  0D60  09F9               	comf	___awtoft@c+1,f
  5917  0D61  0AF8               	incf	___awtoft@c,f
  5918  0D62  1903               	skipnz
  5919  0D63  0AF9               	incf	___awtoft@c+1,f
  5920  0D64  01FD               	clrf	___awtoft@sign
  5921  0D65  0AFD               	incf	___awtoft@sign,f
  5922  0D66                     l1993:	
  5923  0D66  0878               	movf	___awtoft@c,w
  5924  0D67  00F0               	movwf	___ftpack@arg
  5925  0D68  0879               	movf	___awtoft@c+1,w
  5926  0D69  00F1               	movwf	___ftpack@arg+1
  5927  0D6A  01F2               	clrf	___ftpack@arg+2
  5928  0D6B  308E               	movlw	142
  5929  0D6C  00FB               	movwf	??___awtoft
  5930  0D6D  087B               	movf	??___awtoft,w
  5931  0D6E  00F3               	movwf	___ftpack@exp
  5932  0D6F  087D               	movf	___awtoft@sign,w
  5933  0D70  00FC               	movwf	??___awtoft+1
  5934  0D71  087C               	movf	??___awtoft+1,w
  5935  0D72  00F4               	movwf	___ftpack@sign
  5936  0D73  318F  279C         	fcall	___ftpack
  5937  0D75  0870               	movf	?___ftpack,w
  5938  0D76  00F8               	movwf	?___awtoft
  5939  0D77  0871               	movf	?___ftpack+1,w
  5940  0D78  00F9               	movwf	?___awtoft+1
  5941  0D79  0872               	movf	?___ftpack+2,w
  5942  0D7A  00FA               	movwf	?___awtoft+2
  5943  0D7B  0008               	return
  5944  0D7C                     __end_of___awtoft:	
  5945                           
  5946                           	psect	text8
  5947  0006                     __ptext8:	
  5948 ;; *************** function ___lwtoft *****************
  5949 ;; Defined at:
  5950 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwtoft.c"
  5951 ;; Parameters:    Size  Location     Type
  5952 ;;  c               2    8[COMMON] unsigned int 
  5953 ;; Auto vars:     Size  Location     Type
  5954 ;;		None
  5955 ;; Return value:  Size  Location     Type
  5956 ;;                  3    8[COMMON] float 
  5957 ;; Registers used:
  5958 ;;		wreg, status,2, status,0, pclath, cstack
  5959 ;; Tracked objects:
  5960 ;;		On entry : 0/0
  5961 ;;		On exit  : 0/0
  5962 ;;		Unchanged: 0/0
  5963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5964 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5966 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5967 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5968 ;;Total ram usage:        4 bytes
  5969 ;; Hardware stack levels used:    1
  5970 ;; Hardware stack levels required when called:    1
  5971 ;; This function calls:
  5972 ;;		___ftpack
  5973 ;; This function is called by:
  5974 ;;		_main
  5975 ;; This function uses a non-reentrant model
  5976 ;;
  5977                           
  5978                           
  5979                           ;psect for function ___lwtoft
  5980  0006                     ___lwtoft:	
  5981                           
  5982                           ;incstack = 0
  5983                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  5984  0006  0878               	movf	___lwtoft@c,w
  5985  0007  00F0               	movwf	___ftpack@arg
  5986  0008  0879               	movf	___lwtoft@c+1,w
  5987  0009  00F1               	movwf	___ftpack@arg+1
  5988  000A  01F2               	clrf	___ftpack@arg+2
  5989  000B  308E               	movlw	142
  5990  000C  00FB               	movwf	??___lwtoft
  5991  000D  087B               	movf	??___lwtoft,w
  5992  000E  00F3               	movwf	___ftpack@exp
  5993  000F  01F4               	clrf	___ftpack@sign
  5994  0010  318F  279C         	fcall	___ftpack
  5995  0012  0870               	movf	?___ftpack,w
  5996  0013  00F8               	movwf	?___lwtoft
  5997  0014  0871               	movf	?___ftpack+1,w
  5998  0015  00F9               	movwf	?___lwtoft+1
  5999  0016  0872               	movf	?___ftpack+2,w
  6000  0017  00FA               	movwf	?___lwtoft+2
  6001  0018  0008               	return
  6002  0019                     __end_of___lwtoft:	
  6003                           
  6004                           	psect	text9
  6005  0DFC                     __ptext9:	
  6006 ;; *************** function ___lwdiv *****************
  6007 ;; Defined at:
  6008 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwdiv.c"
  6009 ;; Parameters:    Size  Location     Type
  6010 ;;  divisor         2    0[COMMON] unsigned int 
  6011 ;;  dividend        2    2[COMMON] unsigned int 
  6012 ;; Auto vars:     Size  Location     Type
  6013 ;;  quotient        2    5[COMMON] unsigned int 
  6014 ;;  counter         1    7[COMMON] unsigned char 
  6015 ;; Return value:  Size  Location     Type
  6016 ;;                  2    0[COMMON] unsigned int 
  6017 ;; Registers used:
  6018 ;;		wreg, status,2, status,0
  6019 ;; Tracked objects:
  6020 ;;		On entry : 0/0
  6021 ;;		On exit  : 0/0
  6022 ;;		Unchanged: 0/0
  6023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6024 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6025 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6026 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6027 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6028 ;;Total ram usage:        8 bytes
  6029 ;; Hardware stack levels used:    1
  6030 ;; This function calls:
  6031 ;;		Nothing
  6032 ;; This function is called by:
  6033 ;;		_main
  6034 ;; This function uses a non-reentrant model
  6035 ;;
  6036                           
  6037                           
  6038                           ;psect for function ___lwdiv
  6039  0DFC                     ___lwdiv:	
  6040                           
  6041                           ;incstack = 0
  6042                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  6043  0DFC  01F5               	clrf	___lwdiv@quotient
  6044  0DFD  01F6               	clrf	___lwdiv@quotient+1
  6045  0DFE  0870               	movf	___lwdiv@divisor,w
  6046  0DFF  0471               	iorwf	___lwdiv@divisor+1,w
  6047  0E00  1903               	btfsc	3,2
  6048  0E01  2E2B               	goto	l2389
  6049  0E02  01F7               	clrf	___lwdiv@counter
  6050  0E03  0AF7               	incf	___lwdiv@counter,f
  6051  0E04                     l2377:	
  6052  0E04  1BF1               	btfsc	___lwdiv@divisor+1,7
  6053  0E05  2E10               	goto	l2379
  6054  0E06  3001               	movlw	1
  6055  0E07                     u2875:	
  6056  0E07  35F0               	lslf	___lwdiv@divisor,f
  6057  0E08  0DF1               	rlf	___lwdiv@divisor+1,f
  6058  0E09  0B89               	decfsz	9,f
  6059  0E0A  2E07               	goto	u2875
  6060  0E0B  3001               	movlw	1
  6061  0E0C  00F4               	movwf	??___lwdiv
  6062  0E0D  0874               	movf	??___lwdiv,w
  6063  0E0E  07F7               	addwf	___lwdiv@counter,f
  6064  0E0F  2E04               	goto	l2377
  6065  0E10                     l2379:	
  6066  0E10  3001               	movlw	1
  6067  0E11                     u2895:	
  6068  0E11  35F5               	lslf	___lwdiv@quotient,f
  6069  0E12  0DF6               	rlf	___lwdiv@quotient+1,f
  6070  0E13  0B89               	decfsz	9,f
  6071  0E14  2E11               	goto	u2895
  6072  0E15  0871               	movf	___lwdiv@divisor+1,w
  6073  0E16  0273               	subwf	___lwdiv@dividend+1,w
  6074  0E17  1D03               	skipz
  6075  0E18  2E1B               	goto	u2905
  6076  0E19  0870               	movf	___lwdiv@divisor,w
  6077  0E1A  0272               	subwf	___lwdiv@dividend,w
  6078  0E1B                     u2905:	
  6079  0E1B  1C03               	skipc
  6080  0E1C  2E22               	goto	l2385
  6081  0E1D  0870               	movf	___lwdiv@divisor,w
  6082  0E1E  02F2               	subwf	___lwdiv@dividend,f
  6083  0E1F  0871               	movf	___lwdiv@divisor+1,w
  6084  0E20  3BF3               	subwfb	___lwdiv@dividend+1,f
  6085  0E21  1475               	bsf	___lwdiv@quotient,0
  6086  0E22                     l2385:	
  6087  0E22  3001               	movlw	1
  6088  0E23                     u2915:	
  6089  0E23  36F1               	lsrf	___lwdiv@divisor+1,f
  6090  0E24  0CF0               	rrf	___lwdiv@divisor,f
  6091  0E25  0B89               	decfsz	9,f
  6092  0E26  2E23               	goto	u2915
  6093  0E27  3001               	movlw	1
  6094  0E28  02F7               	subwf	___lwdiv@counter,f
  6095  0E29  1D03               	btfss	3,2
  6096  0E2A  2E10               	goto	l2379
  6097  0E2B                     l2389:	
  6098  0E2B  0876               	movf	___lwdiv@quotient+1,w
  6099  0E2C  00F1               	movwf	?___lwdiv+1
  6100  0E2D  0875               	movf	___lwdiv@quotient,w
  6101  0E2E  00F0               	movwf	?___lwdiv
  6102  0E2F  0008               	return
  6103  0E30                     __end_of___lwdiv:	
  6104                           
  6105                           	psect	text10
  6106  0195                     __ptext10:	
  6107 ;; *************** function ___fttol *****************
  6108 ;; Defined at:
  6109 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fttol.c"
  6110 ;; Parameters:    Size  Location     Type
  6111 ;;  f1              3    0[COMMON] float 
  6112 ;; Auto vars:     Size  Location     Type
  6113 ;;  lval            4    9[COMMON] unsigned long 
  6114 ;;  exp1            1   13[COMMON] unsigned char 
  6115 ;;  sign1           1    8[COMMON] unsigned char 
  6116 ;; Return value:  Size  Location     Type
  6117 ;;                  4    0[COMMON] long 
  6118 ;; Registers used:
  6119 ;;		wreg, status,2, status,0
  6120 ;; Tracked objects:
  6121 ;;		On entry : 0/0
  6122 ;;		On exit  : 0/0
  6123 ;;		Unchanged: 0/0
  6124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6125 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6126 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6127 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6128 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6129 ;;Total ram usage:       14 bytes
  6130 ;; Hardware stack levels used:    1
  6131 ;; This function calls:
  6132 ;;		Nothing
  6133 ;; This function is called by:
  6134 ;;		_main
  6135 ;; This function uses a non-reentrant model
  6136 ;;
  6137                           
  6138                           
  6139                           ;psect for function ___fttol
  6140  0195                     ___fttol:	
  6141                           
  6142                           ;incstack = 0
  6143                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  6144  0195  0870               	movf	___fttol@f1,w
  6145  0196  00F4               	movwf	??___fttol
  6146  0197  0871               	movf	___fttol@f1+1,w
  6147  0198  00F5               	movwf	??___fttol+1
  6148  0199  0872               	movf	___fttol@f1+2,w
  6149  019A  00F6               	movwf	??___fttol+2
  6150  019B  1003               	clrc
  6151  019C  0D75               	rlf	??___fttol+1,w
  6152  019D  0D76               	rlf	??___fttol+2,w
  6153  019E  00F7               	movwf	??___fttol+3
  6154  019F  0877               	movf	??___fttol+3,w
  6155  01A0  00FD               	movwf	___fttol@exp1
  6156  01A1  087D               	movf	___fttol@exp1,w
  6157  01A2  1D03               	btfss	3,2
  6158  01A3  29AD               	goto	l2331
  6159  01A4  3000               	movlw	0
  6160  01A5  00F3               	movwf	?___fttol+3
  6161  01A6  3000               	movlw	0
  6162  01A7  00F2               	movwf	?___fttol+2
  6163  01A8  3000               	movlw	0
  6164  01A9  00F1               	movwf	?___fttol+1
  6165  01AA  3000               	movlw	0
  6166  01AB  00F0               	movwf	?___fttol
  6167  01AC  0008               	return
  6168  01AD                     l2331:	
  6169  01AD  0870               	movf	___fttol@f1,w
  6170  01AE  00F4               	movwf	??___fttol
  6171  01AF  0871               	movf	___fttol@f1+1,w
  6172  01B0  00F5               	movwf	??___fttol+1
  6173  01B1  0872               	movf	___fttol@f1+2,w
  6174  01B2  00F6               	movwf	??___fttol+2
  6175  01B3  3017               	movlw	23
  6176  01B4                     u2775:	
  6177  01B4  36F6               	lsrf	??___fttol+2,f
  6178  01B5  0CF5               	rrf	??___fttol+1,f
  6179  01B6  0CF4               	rrf	??___fttol,f
  6180  01B7  0B89               	decfsz	9,f
  6181  01B8  29B4               	goto	u2775
  6182  01B9  0874               	movf	??___fttol,w
  6183  01BA  00F7               	movwf	??___fttol+3
  6184  01BB  0877               	movf	??___fttol+3,w
  6185  01BC  00F8               	movwf	___fttol@sign1
  6186  01BD  17F1               	bsf	___fttol@f1+1,7
  6187  01BE  30FF               	movlw	255
  6188  01BF  05F0               	andwf	___fttol@f1,f
  6189  01C0  30FF               	movlw	255
  6190  01C1  05F1               	andwf	___fttol@f1+1,f
  6191  01C2  3000               	movlw	0
  6192  01C3  05F2               	andwf	___fttol@f1+2,f
  6193  01C4  0870               	movf	___fttol@f1,w
  6194  01C5  00F9               	movwf	___fttol@lval
  6195  01C6  0871               	movf	___fttol@f1+1,w
  6196  01C7  00FA               	movwf	___fttol@lval+1
  6197  01C8  0872               	movf	___fttol@f1+2,w
  6198  01C9  00FB               	movwf	___fttol@lval+2
  6199  01CA  01FC               	clrf	___fttol@lval+3
  6200  01CB  308E               	movlw	142
  6201  01CC  02FD               	subwf	___fttol@exp1,f
  6202  01CD  1FFD               	btfss	___fttol@exp1,7
  6203  01CE  29EB               	goto	l2351
  6204  01CF  087D               	movf	___fttol@exp1,w
  6205  01D0  3A80               	xorlw	128
  6206  01D1  3E8F               	addlw	143
  6207  01D2  1803               	skipnc
  6208  01D3  29DD               	goto	l2349
  6209  01D4  3000               	movlw	0
  6210  01D5  00F3               	movwf	?___fttol+3
  6211  01D6  3000               	movlw	0
  6212  01D7  00F2               	movwf	?___fttol+2
  6213  01D8  3000               	movlw	0
  6214  01D9  00F1               	movwf	?___fttol+1
  6215  01DA  3000               	movlw	0
  6216  01DB  00F0               	movwf	?___fttol
  6217  01DC  0008               	return
  6218  01DD                     l2349:	
  6219  01DD  3001               	movlw	1
  6220  01DE                     u2805:	
  6221  01DE  36FC               	lsrf	___fttol@lval+3,f
  6222  01DF  0CFB               	rrf	___fttol@lval+2,f
  6223  01E0  0CFA               	rrf	___fttol@lval+1,f
  6224  01E1  0CF9               	rrf	___fttol@lval,f
  6225  01E2  0B89               	decfsz	9,f
  6226  01E3  29DE               	goto	u2805
  6227  01E4  3001               	movlw	1
  6228  01E5  00F4               	movwf	??___fttol
  6229  01E6  0874               	movf	??___fttol,w
  6230  01E7  07FD               	addwf	___fttol@exp1,f
  6231  01E8  1903               	btfsc	3,2
  6232  01E9  2A04               	goto	l2359
  6233  01EA  29DD               	goto	l2349
  6234  01EB                     l2351:	
  6235  01EB  3018               	movlw	24
  6236  01EC  027D               	subwf	___fttol@exp1,w
  6237  01ED  1C03               	skipc
  6238  01EE  2A01               	goto	l613
  6239  01EF  3000               	movlw	0
  6240  01F0  00F3               	movwf	?___fttol+3
  6241  01F1  3000               	movlw	0
  6242  01F2  00F2               	movwf	?___fttol+2
  6243  01F3  3000               	movlw	0
  6244  01F4  00F1               	movwf	?___fttol+1
  6245  01F5  3000               	movlw	0
  6246  01F6  00F0               	movwf	?___fttol
  6247  01F7  0008               	return
  6248  01F8                     l2357:	
  6249  01F8  3001               	movlw	1
  6250  01F9                     u2835:	
  6251  01F9  35F9               	lslf	___fttol@lval,f
  6252  01FA  0DFA               	rlf	___fttol@lval+1,f
  6253  01FB  0DFB               	rlf	___fttol@lval+2,f
  6254  01FC  0DFC               	rlf	___fttol@lval+3,f
  6255  01FD  0B89               	decfsz	9,f
  6256  01FE  29F9               	goto	u2835
  6257  01FF  3001               	movlw	1
  6258  0200  02FD               	subwf	___fttol@exp1,f
  6259  0201                     l613:	
  6260  0201  087D               	movf	___fttol@exp1,w
  6261  0202  1D03               	btfss	3,2
  6262  0203  29F8               	goto	l2357
  6263  0204                     l2359:	
  6264  0204  0878               	movf	___fttol@sign1,w
  6265  0205  1903               	btfsc	3,2
  6266  0206  2A12               	goto	l2363
  6267  0207  09F9               	comf	___fttol@lval,f
  6268  0208  09FA               	comf	___fttol@lval+1,f
  6269  0209  09FB               	comf	___fttol@lval+2,f
  6270  020A  09FC               	comf	___fttol@lval+3,f
  6271  020B  0AF9               	incf	___fttol@lval,f
  6272  020C  1903               	skipnz
  6273  020D  0AFA               	incf	___fttol@lval+1,f
  6274  020E  1903               	skipnz
  6275  020F  0AFB               	incf	___fttol@lval+2,f
  6276  0210  1903               	skipnz
  6277  0211  0AFC               	incf	___fttol@lval+3,f
  6278  0212                     l2363:	
  6279  0212  087C               	movf	___fttol@lval+3,w
  6280  0213  00F3               	movwf	?___fttol+3
  6281  0214  087B               	movf	___fttol@lval+2,w
  6282  0215  00F2               	movwf	?___fttol+2
  6283  0216  087A               	movf	___fttol@lval+1,w
  6284  0217  00F1               	movwf	?___fttol+1
  6285  0218  0879               	movf	___fttol@lval,w
  6286  0219  00F0               	movwf	?___fttol
  6287  021A  0008               	return
  6288  021B                     __end_of___fttol:	
  6289                           
  6290                           	psect	text11
  6291  0D3E                     __ptext11:	
  6292 ;; *************** function ___ftsub *****************
  6293 ;; Defined at:
  6294 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftsub.c"
  6295 ;; Parameters:    Size  Location     Type
  6296 ;;  f2              3   29[BANK0 ] float 
  6297 ;;  f1              3   32[BANK0 ] float 
  6298 ;; Auto vars:     Size  Location     Type
  6299 ;;		None
  6300 ;; Return value:  Size  Location     Type
  6301 ;;                  3   29[BANK0 ] float 
  6302 ;; Registers used:
  6303 ;;		wreg, status,2, status,0, pclath, cstack
  6304 ;; Tracked objects:
  6305 ;;		On entry : 0/0
  6306 ;;		On exit  : 0/0
  6307 ;;		Unchanged: 0/0
  6308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6309 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6312 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6313 ;;Total ram usage:        6 bytes
  6314 ;; Hardware stack levels used:    1
  6315 ;; Hardware stack levels required when called:    2
  6316 ;; This function calls:
  6317 ;;		___ftadd
  6318 ;; This function is called by:
  6319 ;;		_main
  6320 ;; This function uses a non-reentrant model
  6321 ;;
  6322                           
  6323                           
  6324                           ;psect for function ___ftsub
  6325  0D3E                     ___ftsub:	
  6326                           
  6327                           ;incstack = 0
  6328                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  6329  0D3E  0020               	movlb	0	; select bank0
  6330  0D3F  083F               	movf	___ftsub@f2+2,w
  6331  0D40  043E               	iorwf	___ftsub@f2+1,w
  6332  0D41  043D               	iorwf	___ftsub@f2,w
  6333  0D42  1903               	skipnz
  6334  0D43  2D46               	goto	l2321
  6335  0D44  3080               	movlw	128
  6336  0D45  06BF               	xorwf	___ftsub@f2+2,f
  6337  0D46                     l2321:	
  6338  0D46  0840               	movf	___ftsub@f1,w
  6339  0D47  00B0               	movwf	___ftadd@f1
  6340  0D48  0841               	movf	___ftsub@f1+1,w
  6341  0D49  00B1               	movwf	___ftadd@f1+1
  6342  0D4A  0842               	movf	___ftsub@f1+2,w
  6343  0D4B  00B2               	movwf	___ftadd@f1+2
  6344  0D4C  083D               	movf	___ftsub@f2,w
  6345  0D4D  00B3               	movwf	___ftadd@f2
  6346  0D4E  083E               	movf	___ftsub@f2+1,w
  6347  0D4F  00B4               	movwf	___ftadd@f2+1
  6348  0D50  083F               	movf	___ftsub@f2+2,w
  6349  0D51  00B5               	movwf	___ftadd@f2+2
  6350  0D52  3184  24EF         	fcall	___ftadd
  6351  0D54  0020               	movlb	0	; select bank0
  6352  0D55  0830               	movf	?___ftadd,w
  6353  0D56  00BD               	movwf	?___ftsub
  6354  0D57  0831               	movf	?___ftadd+1,w
  6355  0D58  00BE               	movwf	?___ftsub+1
  6356  0D59  0832               	movf	?___ftadd+2,w
  6357  0D5A  00BF               	movwf	?___ftsub+2
  6358  0D5B  0008               	return
  6359  0D5C                     __end_of___ftsub:	
  6360                           
  6361                           	psect	text12
  6362  04EF                     __ptext12:	
  6363 ;; *************** function ___ftadd *****************
  6364 ;; Defined at:
  6365 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftadd.c"
  6366 ;; Parameters:    Size  Location     Type
  6367 ;;  f1              3   16[BANK0 ] float 
  6368 ;;  f2              3   19[BANK0 ] float 
  6369 ;; Auto vars:     Size  Location     Type
  6370 ;;  exp1            1   28[BANK0 ] unsigned char 
  6371 ;;  exp2            1   27[BANK0 ] unsigned char 
  6372 ;;  sign            1   26[BANK0 ] unsigned char 
  6373 ;; Return value:  Size  Location     Type
  6374 ;;                  3   16[BANK0 ] float 
  6375 ;; Registers used:
  6376 ;;		wreg, status,2, status,0, pclath, cstack
  6377 ;; Tracked objects:
  6378 ;;		On entry : 0/0
  6379 ;;		On exit  : 0/0
  6380 ;;		Unchanged: 0/0
  6381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6382 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6383 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6384 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6385 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6386 ;;Total ram usage:       13 bytes
  6387 ;; Hardware stack levels used:    1
  6388 ;; Hardware stack levels required when called:    1
  6389 ;; This function calls:
  6390 ;;		___ftpack
  6391 ;; This function is called by:
  6392 ;;		_main
  6393 ;;		___ftsub
  6394 ;;		_log
  6395 ;;		_eval_poly
  6396 ;; This function uses a non-reentrant model
  6397 ;;
  6398                           
  6399                           
  6400                           ;psect for function ___ftadd
  6401  04EF                     ___ftadd:	
  6402                           
  6403                           ;incstack = 0
  6404                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  6405  04EF  0020               	movlb	0	; select bank0
  6406  04F0  0830               	movf	___ftadd@f1,w
  6407  04F1  00B6               	movwf	??___ftadd
  6408  04F2  0831               	movf	___ftadd@f1+1,w
  6409  04F3  00B7               	movwf	??___ftadd+1
  6410  04F4  0832               	movf	___ftadd@f1+2,w
  6411  04F5  00B8               	movwf	??___ftadd+2
  6412  04F6  1003               	clrc
  6413  04F7  0D37               	rlf	??___ftadd+1,w
  6414  04F8  0D38               	rlf	??___ftadd+2,w
  6415  04F9  00B9               	movwf	??___ftadd+3
  6416  04FA  0839               	movf	??___ftadd+3,w
  6417  04FB  00BC               	movwf	___ftadd@exp1
  6418  04FC  0833               	movf	___ftadd@f2,w
  6419  04FD  00B6               	movwf	??___ftadd
  6420  04FE  0834               	movf	___ftadd@f2+1,w
  6421  04FF  00B7               	movwf	??___ftadd+1
  6422  0500  0835               	movf	___ftadd@f2+2,w
  6423  0501  00B8               	movwf	??___ftadd+2
  6424  0502  1003               	clrc
  6425  0503  0D37               	rlf	??___ftadd+1,w
  6426  0504  0D38               	rlf	??___ftadd+2,w
  6427  0505  00B9               	movwf	??___ftadd+3
  6428  0506  0839               	movf	??___ftadd+3,w
  6429  0507  00BB               	movwf	___ftadd@exp2
  6430  0508  083C               	movf	___ftadd@exp1,w
  6431  0509  1903               	btfsc	3,2
  6432  050A  2D17               	goto	l1709
  6433  050B  083B               	movf	___ftadd@exp2,w
  6434  050C  023C               	subwf	___ftadd@exp1,w
  6435  050D  1803               	skipnc
  6436  050E  2D1E               	goto	l1713
  6437  050F  033C               	decf	___ftadd@exp1,w
  6438  0510  3AFF               	xorlw	255
  6439  0511  073B               	addwf	___ftadd@exp2,w
  6440  0512  00B6               	movwf	??___ftadd
  6441  0513  3019               	movlw	25
  6442  0514  0236               	subwf	??___ftadd,w
  6443  0515  1C03               	skipc
  6444  0516  2D1E               	goto	l1713
  6445  0517                     l1709:	
  6446  0517  0833               	movf	___ftadd@f2,w
  6447  0518  00B0               	movwf	?___ftadd
  6448  0519  0834               	movf	___ftadd@f2+1,w
  6449  051A  00B1               	movwf	?___ftadd+1
  6450  051B  0835               	movf	___ftadd@f2+2,w
  6451  051C  00B2               	movwf	?___ftadd+2
  6452  051D  0008               	return
  6453  051E                     l1713:	
  6454  051E  083B               	movf	___ftadd@exp2,w
  6455  051F  1903               	btfsc	3,2
  6456  0520  0008               	return
  6457  0521  083C               	movf	___ftadd@exp1,w
  6458  0522  023B               	subwf	___ftadd@exp2,w
  6459  0523  1803               	skipnc
  6460  0524  2D2D               	goto	l1719
  6461  0525  033B               	decf	___ftadd@exp2,w
  6462  0526  3AFF               	xorlw	255
  6463  0527  073C               	addwf	___ftadd@exp1,w
  6464  0528  00B6               	movwf	??___ftadd
  6465  0529  3019               	movlw	25
  6466  052A  0236               	subwf	??___ftadd,w
  6467  052B  1803               	btfsc	3,0
  6468  052C  0008               	return
  6469  052D                     l1719:	
  6470  052D  3006               	movlw	6
  6471  052E  00B6               	movwf	??___ftadd
  6472  052F  0836               	movf	??___ftadd,w
  6473  0530  00BA               	movwf	___ftadd@sign
  6474  0531  1BB2               	btfsc	___ftadd@f1+2,7
  6475  0532  17BA               	bsf	___ftadd@sign,7
  6476  0533  1BB5               	btfsc	___ftadd@f2+2,7
  6477  0534  173A               	bsf	___ftadd@sign,6
  6478  0535  17B1               	bsf	___ftadd@f1+1,7
  6479  0536  30FF               	movlw	255
  6480  0537  05B0               	andwf	___ftadd@f1,f
  6481  0538  30FF               	movlw	255
  6482  0539  05B1               	andwf	___ftadd@f1+1,f
  6483  053A  3000               	movlw	0
  6484  053B  05B2               	andwf	___ftadd@f1+2,f
  6485  053C  17B4               	bsf	___ftadd@f2+1,7
  6486  053D  30FF               	movlw	255
  6487  053E  05B3               	andwf	___ftadd@f2,f
  6488  053F  30FF               	movlw	255
  6489  0540  05B4               	andwf	___ftadd@f2+1,f
  6490  0541  3000               	movlw	0
  6491  0542  05B5               	andwf	___ftadd@f2+2,f
  6492  0543  083B               	movf	___ftadd@exp2,w
  6493  0544  023C               	subwf	___ftadd@exp1,w
  6494  0545  1803               	skipnc
  6495  0546  2D69               	goto	l1741
  6496  0547                     l1731:	
  6497  0547  3001               	movlw	1
  6498  0548                     u1805:	
  6499  0548  35B3               	lslf	___ftadd@f2,f
  6500  0549  0DB4               	rlf	___ftadd@f2+1,f
  6501  054A  0DB5               	rlf	___ftadd@f2+2,f
  6502  054B  0B89               	decfsz	9,f
  6503  054C  2D48               	goto	u1805
  6504  054D  3001               	movlw	1
  6505  054E  02BB               	subwf	___ftadd@exp2,f
  6506  054F  083B               	movf	___ftadd@exp2,w
  6507  0550  063C               	xorwf	___ftadd@exp1,w
  6508  0551  1903               	skipnz
  6509  0552  2D64               	goto	l1739
  6510  0553  3001               	movlw	1
  6511  0554  02BA               	subwf	___ftadd@sign,f
  6512  0555  083A               	movf	___ftadd@sign,w
  6513  0556  3907               	andlw	7
  6514  0557  1903               	btfsc	3,2
  6515  0558  2D64               	goto	l1739
  6516  0559  2D47               	goto	l1731
  6517  055A                     l1737:	
  6518  055A  3001               	movlw	1
  6519  055B                     u1835:	
  6520  055B  36B2               	lsrf	___ftadd@f1+2,f
  6521  055C  0CB1               	rrf	___ftadd@f1+1,f
  6522  055D  0CB0               	rrf	___ftadd@f1,f
  6523  055E  0B89               	decfsz	9,f
  6524  055F  2D5B               	goto	u1835
  6525  0560  3001               	movlw	1
  6526  0561  00B6               	movwf	??___ftadd
  6527  0562  0836               	movf	??___ftadd,w
  6528  0563  07BC               	addwf	___ftadd@exp1,f
  6529  0564                     l1739:	
  6530  0564  083C               	movf	___ftadd@exp1,w
  6531  0565  063B               	xorwf	___ftadd@exp2,w
  6532  0566  1903               	btfsc	3,2
  6533  0567  2D8E               	goto	l553
  6534  0568  2D5A               	goto	l1737
  6535  0569                     l1741:	
  6536  0569  083C               	movf	___ftadd@exp1,w
  6537  056A  023B               	subwf	___ftadd@exp2,w
  6538  056B  1803               	skipnc
  6539  056C  2D8E               	goto	l553
  6540  056D                     l1743:	
  6541  056D  3001               	movlw	1
  6542  056E                     u1865:	
  6543  056E  35B0               	lslf	___ftadd@f1,f
  6544  056F  0DB1               	rlf	___ftadd@f1+1,f
  6545  0570  0DB2               	rlf	___ftadd@f1+2,f
  6546  0571  0B89               	decfsz	9,f
  6547  0572  2D6E               	goto	u1865
  6548  0573  3001               	movlw	1
  6549  0574  02BC               	subwf	___ftadd@exp1,f
  6550  0575  083B               	movf	___ftadd@exp2,w
  6551  0576  063C               	xorwf	___ftadd@exp1,w
  6552  0577  1903               	skipnz
  6553  0578  2D8A               	goto	l1751
  6554  0579  3001               	movlw	1
  6555  057A  02BA               	subwf	___ftadd@sign,f
  6556  057B  083A               	movf	___ftadd@sign,w
  6557  057C  3907               	andlw	7
  6558  057D  1903               	btfsc	3,2
  6559  057E  2D8A               	goto	l1751
  6560  057F  2D6D               	goto	l1743
  6561  0580                     l1749:	
  6562  0580  3001               	movlw	1
  6563  0581                     u1895:	
  6564  0581  36B5               	lsrf	___ftadd@f2+2,f
  6565  0582  0CB4               	rrf	___ftadd@f2+1,f
  6566  0583  0CB3               	rrf	___ftadd@f2,f
  6567  0584  0B89               	decfsz	9,f
  6568  0585  2D81               	goto	u1895
  6569  0586  3001               	movlw	1
  6570  0587  00B6               	movwf	??___ftadd
  6571  0588  0836               	movf	??___ftadd,w
  6572  0589  07BB               	addwf	___ftadd@exp2,f
  6573  058A                     l1751:	
  6574  058A  083C               	movf	___ftadd@exp1,w
  6575  058B  063B               	xorwf	___ftadd@exp2,w
  6576  058C  1D03               	skipz
  6577  058D  2D80               	goto	l1749
  6578  058E                     l553:	
  6579  058E  1FBA               	btfss	___ftadd@sign,7
  6580  058F  2DA0               	goto	l1755
  6581  0590  30FF               	movlw	255
  6582  0591  06B0               	xorwf	___ftadd@f1,f
  6583  0592  30FF               	movlw	255
  6584  0593  06B1               	xorwf	___ftadd@f1+1,f
  6585  0594  30FF               	movlw	255
  6586  0595  06B2               	xorwf	___ftadd@f1+2,f
  6587  0596  3001               	movlw	1
  6588  0597  07B0               	addwf	___ftadd@f1,f
  6589  0598  3000               	movlw	0
  6590  0599  1803               	skipnc
  6591  059A  3001               	movlw	1
  6592  059B  07B1               	addwf	___ftadd@f1+1,f
  6593  059C  3000               	movlw	0
  6594  059D  1803               	skipnc
  6595  059E  3001               	movlw	1
  6596  059F  07B2               	addwf	___ftadd@f1+2,f
  6597  05A0                     l1755:	
  6598  05A0  1F3A               	btfss	___ftadd@sign,6
  6599  05A1  2DB2               	goto	l1759
  6600  05A2  30FF               	movlw	255
  6601  05A3  06B3               	xorwf	___ftadd@f2,f
  6602  05A4  30FF               	movlw	255
  6603  05A5  06B4               	xorwf	___ftadd@f2+1,f
  6604  05A6  30FF               	movlw	255
  6605  05A7  06B5               	xorwf	___ftadd@f2+2,f
  6606  05A8  3001               	movlw	1
  6607  05A9  07B3               	addwf	___ftadd@f2,f
  6608  05AA  3000               	movlw	0
  6609  05AB  1803               	skipnc
  6610  05AC  3001               	movlw	1
  6611  05AD  07B4               	addwf	___ftadd@f2+1,f
  6612  05AE  3000               	movlw	0
  6613  05AF  1803               	skipnc
  6614  05B0  3001               	movlw	1
  6615  05B1  07B5               	addwf	___ftadd@f2+2,f
  6616  05B2                     l1759:	
  6617  05B2  01BA               	clrf	___ftadd@sign
  6618  05B3  0830               	movf	___ftadd@f1,w
  6619  05B4  07B3               	addwf	___ftadd@f2,f
  6620  05B5  0831               	movf	___ftadd@f1+1,w
  6621  05B6  3DB4               	addwfc	___ftadd@f2+1,f
  6622  05B7  0832               	movf	___ftadd@f1+2,w
  6623  05B8  3DB5               	addwfc	___ftadd@f2+2,f
  6624  05B9  1FB5               	btfss	___ftadd@f2+2,7
  6625  05BA  2DCD               	goto	l1769
  6626  05BB  30FF               	movlw	255
  6627  05BC  06B3               	xorwf	___ftadd@f2,f
  6628  05BD  30FF               	movlw	255
  6629  05BE  06B4               	xorwf	___ftadd@f2+1,f
  6630  05BF  30FF               	movlw	255
  6631  05C0  06B5               	xorwf	___ftadd@f2+2,f
  6632  05C1  3001               	movlw	1
  6633  05C2  07B3               	addwf	___ftadd@f2,f
  6634  05C3  3000               	movlw	0
  6635  05C4  1803               	skipnc
  6636  05C5  3001               	movlw	1
  6637  05C6  07B4               	addwf	___ftadd@f2+1,f
  6638  05C7  3000               	movlw	0
  6639  05C8  1803               	skipnc
  6640  05C9  3001               	movlw	1
  6641  05CA  07B5               	addwf	___ftadd@f2+2,f
  6642  05CB  01BA               	clrf	___ftadd@sign
  6643  05CC  0ABA               	incf	___ftadd@sign,f
  6644  05CD                     l1769:	
  6645  05CD  0833               	movf	___ftadd@f2,w
  6646  05CE  00F0               	movwf	___ftpack@arg
  6647  05CF  0834               	movf	___ftadd@f2+1,w
  6648  05D0  00F1               	movwf	___ftpack@arg+1
  6649  05D1  0835               	movf	___ftadd@f2+2,w
  6650  05D2  00F2               	movwf	___ftpack@arg+2
  6651  05D3  083C               	movf	___ftadd@exp1,w
  6652  05D4  00B6               	movwf	??___ftadd
  6653  05D5  0836               	movf	??___ftadd,w
  6654  05D6  00F3               	movwf	___ftpack@exp
  6655  05D7  083A               	movf	___ftadd@sign,w
  6656  05D8  00B7               	movwf	??___ftadd+1
  6657  05D9  0837               	movf	??___ftadd+1,w
  6658  05DA  00F4               	movwf	___ftpack@sign
  6659  05DB  318F  279C         	fcall	___ftpack
  6660  05DD  0870               	movf	?___ftpack,w
  6661  05DE  0020               	movlb	0	; select bank0
  6662  05DF  00B0               	movwf	?___ftadd
  6663  05E0  0871               	movf	?___ftpack+1,w
  6664  05E1  00B1               	movwf	?___ftadd+1
  6665  05E2  0872               	movf	?___ftpack+2,w
  6666  05E3  00B2               	movwf	?___ftadd+2
  6667  05E4  0008               	return
  6668  05E5                     __end_of___ftadd:	
  6669                           
  6670                           	psect	text13
  6671  021B                     __ptext13:	
  6672 ;; *************** function ___ftdiv *****************
  6673 ;; Defined at:
  6674 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftdiv.c"
  6675 ;; Parameters:    Size  Location     Type
  6676 ;;  f2              3    8[COMMON] float 
  6677 ;;  f1              3   11[COMMON] float 
  6678 ;; Auto vars:     Size  Location     Type
  6679 ;;  f3              3    5[BANK0 ] float 
  6680 ;;  sign            1    9[BANK0 ] unsigned char 
  6681 ;;  exp             1    8[BANK0 ] unsigned char 
  6682 ;;  cntr            1    4[BANK0 ] unsigned char 
  6683 ;; Return value:  Size  Location     Type
  6684 ;;                  3    8[COMMON] float 
  6685 ;; Registers used:
  6686 ;;		wreg, status,2, status,0, pclath, cstack
  6687 ;; Tracked objects:
  6688 ;;		On entry : 0/0
  6689 ;;		On exit  : 0/0
  6690 ;;		Unchanged: 0/0
  6691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6692 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6693 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6694 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6695 ;;      Totals:         6      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6696 ;;Total ram usage:       16 bytes
  6697 ;; Hardware stack levels used:    1
  6698 ;; Hardware stack levels required when called:    1
  6699 ;; This function calls:
  6700 ;;		___ftpack
  6701 ;; This function is called by:
  6702 ;;		_main
  6703 ;; This function uses a non-reentrant model
  6704 ;;
  6705                           
  6706                           
  6707                           ;psect for function ___ftdiv
  6708  021B                     ___ftdiv:	
  6709                           
  6710                           ;incstack = 0
  6711                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  6712  021B  087B               	movf	___ftdiv@f1,w
  6713  021C  0020               	movlb	0	; select bank0
  6714  021D  00A0               	movwf	??___ftdiv
  6715  021E  087C               	movf	___ftdiv@f1+1,w
  6716  021F  00A1               	movwf	??___ftdiv+1
  6717  0220  087D               	movf	___ftdiv@f1+2,w
  6718  0221  00A2               	movwf	??___ftdiv+2
  6719  0222  1003               	clrc
  6720  0223  0D21               	rlf	??___ftdiv+1,w
  6721  0224  0D22               	rlf	??___ftdiv+2,w
  6722  0225  00A3               	movwf	??___ftdiv+3
  6723  0226  0823               	movf	??___ftdiv+3,w
  6724  0227  00A8               	movwf	___ftdiv@exp
  6725  0228  0828               	movf	___ftdiv@exp,w
  6726  0229  1D03               	btfss	3,2
  6727  022A  2A32               	goto	l2281
  6728  022B  3000               	movlw	0
  6729  022C  00F8               	movwf	?___ftdiv
  6730  022D  3000               	movlw	0
  6731  022E  00F9               	movwf	?___ftdiv+1
  6732  022F  3000               	movlw	0
  6733  0230  00FA               	movwf	?___ftdiv+2
  6734  0231  0008               	return
  6735  0232                     l2281:	
  6736  0232  0878               	movf	___ftdiv@f2,w
  6737  0233  00A0               	movwf	??___ftdiv
  6738  0234  0879               	movf	___ftdiv@f2+1,w
  6739  0235  00A1               	movwf	??___ftdiv+1
  6740  0236  087A               	movf	___ftdiv@f2+2,w
  6741  0237  00A2               	movwf	??___ftdiv+2
  6742  0238  1003               	clrc
  6743  0239  0D21               	rlf	??___ftdiv+1,w
  6744  023A  0D22               	rlf	??___ftdiv+2,w
  6745  023B  00A3               	movwf	??___ftdiv+3
  6746  023C  0823               	movf	??___ftdiv+3,w
  6747  023D  00A9               	movwf	___ftdiv@sign
  6748  023E  0829               	movf	___ftdiv@sign,w
  6749  023F  1D03               	btfss	3,2
  6750  0240  2A48               	goto	l2287
  6751  0241  3000               	movlw	0
  6752  0242  00F8               	movwf	?___ftdiv
  6753  0243  3000               	movlw	0
  6754  0244  00F9               	movwf	?___ftdiv+1
  6755  0245  3000               	movlw	0
  6756  0246  00FA               	movwf	?___ftdiv+2
  6757  0247  0008               	return
  6758  0248                     l2287:	
  6759  0248  3000               	movlw	0
  6760  0249  00A5               	movwf	___ftdiv@f3
  6761  024A  3000               	movlw	0
  6762  024B  00A6               	movwf	___ftdiv@f3+1
  6763  024C  3000               	movlw	0
  6764  024D  00A7               	movwf	___ftdiv@f3+2
  6765  024E  3089               	movlw	137
  6766  024F  0729               	addwf	___ftdiv@sign,w
  6767  0250  00A0               	movwf	??___ftdiv
  6768  0251  0820               	movf	??___ftdiv,w
  6769  0252  02A8               	subwf	___ftdiv@exp,f
  6770  0253  087B               	movf	___ftdiv@f1,w
  6771  0254  00A0               	movwf	??___ftdiv
  6772  0255  087C               	movf	___ftdiv@f1+1,w
  6773  0256  00A1               	movwf	??___ftdiv+1
  6774  0257  087D               	movf	___ftdiv@f1+2,w
  6775  0258  00A2               	movwf	??___ftdiv+2
  6776  0259  3010               	movlw	16
  6777  025A                     u2695:	
  6778  025A  36A2               	lsrf	??___ftdiv+2,f
  6779  025B  0CA1               	rrf	??___ftdiv+1,f
  6780  025C  0CA0               	rrf	??___ftdiv,f
  6781  025D  0B89               	decfsz	9,f
  6782  025E  2A5A               	goto	u2695
  6783  025F  0820               	movf	??___ftdiv,w
  6784  0260  00A3               	movwf	??___ftdiv+3
  6785  0261  0823               	movf	??___ftdiv+3,w
  6786  0262  00A9               	movwf	___ftdiv@sign
  6787  0263  0878               	movf	___ftdiv@f2,w
  6788  0264  00A0               	movwf	??___ftdiv
  6789  0265  0879               	movf	___ftdiv@f2+1,w
  6790  0266  00A1               	movwf	??___ftdiv+1
  6791  0267  087A               	movf	___ftdiv@f2+2,w
  6792  0268  00A2               	movwf	??___ftdiv+2
  6793  0269  3010               	movlw	16
  6794  026A                     u2705:	
  6795  026A  36A2               	lsrf	??___ftdiv+2,f
  6796  026B  0CA1               	rrf	??___ftdiv+1,f
  6797  026C  0CA0               	rrf	??___ftdiv,f
  6798  026D  0B89               	decfsz	9,f
  6799  026E  2A6A               	goto	u2705
  6800  026F  0820               	movf	??___ftdiv,w
  6801  0270  00A3               	movwf	??___ftdiv+3
  6802  0271  0823               	movf	??___ftdiv+3,w
  6803  0272  06A9               	xorwf	___ftdiv@sign,f
  6804  0273  3080               	movlw	128
  6805  0274  00A0               	movwf	??___ftdiv
  6806  0275  0820               	movf	??___ftdiv,w
  6807  0276  05A9               	andwf	___ftdiv@sign,f
  6808  0277  17FC               	bsf	___ftdiv@f1+1,7
  6809  0278  30FF               	movlw	255
  6810  0279  05FB               	andwf	___ftdiv@f1,f
  6811  027A  30FF               	movlw	255
  6812  027B  05FC               	andwf	___ftdiv@f1+1,f
  6813  027C  3000               	movlw	0
  6814  027D  05FD               	andwf	___ftdiv@f1+2,f
  6815  027E  17F9               	bsf	___ftdiv@f2+1,7
  6816  027F  30FF               	movlw	255
  6817  0280  05F8               	andwf	___ftdiv@f2,f
  6818  0281  30FF               	movlw	255
  6819  0282  05F9               	andwf	___ftdiv@f2+1,f
  6820  0283  3000               	movlw	0
  6821  0284  05FA               	andwf	___ftdiv@f2+2,f
  6822  0285  3018               	movlw	24
  6823  0286  00A0               	movwf	??___ftdiv
  6824  0287  0820               	movf	??___ftdiv,w
  6825  0288  00A4               	movwf	___ftdiv@cntr
  6826  0289                     l2301:	
  6827  0289  3001               	movlw	1
  6828  028A                     u2715:	
  6829  028A  35A5               	lslf	___ftdiv@f3,f
  6830  028B  0DA6               	rlf	___ftdiv@f3+1,f
  6831  028C  0DA7               	rlf	___ftdiv@f3+2,f
  6832  028D  0B89               	decfsz	9,f
  6833  028E  2A8A               	goto	u2715
  6834  028F  087A               	movf	___ftdiv@f2+2,w
  6835  0290  027D               	subwf	___ftdiv@f1+2,w
  6836  0291  1D03               	skipz
  6837  0292  2A99               	goto	u2725
  6838  0293  0879               	movf	___ftdiv@f2+1,w
  6839  0294  027C               	subwf	___ftdiv@f1+1,w
  6840  0295  1D03               	skipz
  6841  0296  2A99               	goto	u2725
  6842  0297  0878               	movf	___ftdiv@f2,w
  6843  0298  027B               	subwf	___ftdiv@f1,w
  6844  0299                     u2725:	
  6845  0299  1C03               	skipc
  6846  029A  2AA2               	goto	l2309
  6847  029B  0878               	movf	___ftdiv@f2,w
  6848  029C  02FB               	subwf	___ftdiv@f1,f
  6849  029D  0879               	movf	___ftdiv@f2+1,w
  6850  029E  3BFC               	subwfb	___ftdiv@f1+1,f
  6851  029F  087A               	movf	___ftdiv@f2+2,w
  6852  02A0  3BFD               	subwfb	___ftdiv@f1+2,f
  6853  02A1  1425               	bsf	___ftdiv@f3,0
  6854  02A2                     l2309:	
  6855  02A2  3001               	movlw	1
  6856  02A3                     u2735:	
  6857  02A3  35FB               	lslf	___ftdiv@f1,f
  6858  02A4  0DFC               	rlf	___ftdiv@f1+1,f
  6859  02A5  0DFD               	rlf	___ftdiv@f1+2,f
  6860  02A6  0B89               	decfsz	9,f
  6861  02A7  2AA3               	goto	u2735
  6862  02A8  3001               	movlw	1
  6863  02A9  02A4               	subwf	___ftdiv@cntr,f
  6864  02AA  1D03               	btfss	3,2
  6865  02AB  2A89               	goto	l2301
  6866  02AC  0825               	movf	___ftdiv@f3,w
  6867  02AD  00F0               	movwf	___ftpack@arg
  6868  02AE  0826               	movf	___ftdiv@f3+1,w
  6869  02AF  00F1               	movwf	___ftpack@arg+1
  6870  02B0  0827               	movf	___ftdiv@f3+2,w
  6871  02B1  00F2               	movwf	___ftpack@arg+2
  6872  02B2  0828               	movf	___ftdiv@exp,w
  6873  02B3  00A0               	movwf	??___ftdiv
  6874  02B4  0820               	movf	??___ftdiv,w
  6875  02B5  00F3               	movwf	___ftpack@exp
  6876  02B6  0829               	movf	___ftdiv@sign,w
  6877  02B7  00A1               	movwf	??___ftdiv+1
  6878  02B8  0821               	movf	??___ftdiv+1,w
  6879  02B9  00F4               	movwf	___ftpack@sign
  6880  02BA  318F  279C         	fcall	___ftpack
  6881  02BC  0870               	movf	?___ftpack,w
  6882  02BD  00F8               	movwf	?___ftdiv
  6883  02BE  0871               	movf	?___ftpack+1,w
  6884  02BF  00F9               	movwf	?___ftdiv+1
  6885  02C0  0872               	movf	?___ftpack+2,w
  6886  02C1  00FA               	movwf	?___ftdiv+2
  6887  02C2  0008               	return
  6888  02C3                     __end_of___ftdiv:	
  6889                           
  6890                           	psect	text14
  6891  0F9C                     __ptext14:	
  6892 ;; *************** function ___ftpack *****************
  6893 ;; Defined at:
  6894 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\float.c"
  6895 ;; Parameters:    Size  Location     Type
  6896 ;;  arg             3    0[COMMON] unsigned um
  6897 ;;  exp             1    3[COMMON] unsigned char 
  6898 ;;  sign            1    4[COMMON] unsigned char 
  6899 ;; Auto vars:     Size  Location     Type
  6900 ;;		None
  6901 ;; Return value:  Size  Location     Type
  6902 ;;                  3    0[COMMON] float 
  6903 ;; Registers used:
  6904 ;;		wreg, status,2, status,0
  6905 ;; Tracked objects:
  6906 ;;		On entry : 0/0
  6907 ;;		On exit  : 0/0
  6908 ;;		Unchanged: 0/0
  6909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6910 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6912 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6913 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6914 ;;Total ram usage:        8 bytes
  6915 ;; Hardware stack levels used:    1
  6916 ;; This function calls:
  6917 ;;		Nothing
  6918 ;; This function is called by:
  6919 ;;		___awtoft
  6920 ;;		___ftadd
  6921 ;;		___ftdiv
  6922 ;;		___ftmul
  6923 ;;		___lwtoft
  6924 ;; This function uses a non-reentrant model
  6925 ;;
  6926                           
  6927                           
  6928                           ;psect for function ___ftpack
  6929  0F9C                     ___ftpack:	
  6930                           
  6931                           ;incstack = 0
  6932                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  6933  0F9C  0873               	movf	___ftpack@exp,w
  6934  0F9D  1903               	btfsc	3,2
  6935  0F9E  2FA4               	goto	l1645
  6936  0F9F  0872               	movf	___ftpack@arg+2,w
  6937  0FA0  0471               	iorwf	___ftpack@arg+1,w
  6938  0FA1  0470               	iorwf	___ftpack@arg,w
  6939  0FA2  1D03               	skipz
  6940  0FA3  2FB5               	goto	l1651
  6941  0FA4                     l1645:	
  6942  0FA4  3000               	movlw	0
  6943  0FA5  00F0               	movwf	?___ftpack
  6944  0FA6  3000               	movlw	0
  6945  0FA7  00F1               	movwf	?___ftpack+1
  6946  0FA8  3000               	movlw	0
  6947  0FA9  00F2               	movwf	?___ftpack+2
  6948  0FAA  0008               	return
  6949  0FAB                     l1649:	
  6950  0FAB  3001               	movlw	1
  6951  0FAC  00F5               	movwf	??___ftpack
  6952  0FAD  0875               	movf	??___ftpack,w
  6953  0FAE  07F3               	addwf	___ftpack@exp,f
  6954  0FAF  3001               	movlw	1
  6955  0FB0                     u1535:	
  6956  0FB0  36F2               	lsrf	___ftpack@arg+2,f
  6957  0FB1  0CF1               	rrf	___ftpack@arg+1,f
  6958  0FB2  0CF0               	rrf	___ftpack@arg,f
  6959  0FB3  0B89               	decfsz	9,f
  6960  0FB4  2FB0               	goto	u1535
  6961  0FB5                     l1651:	
  6962  0FB5  30FE               	movlw	254
  6963  0FB6  0572               	andwf	___ftpack@arg+2,w
  6964  0FB7  1903               	btfsc	3,2
  6965  0FB8  2FCE               	goto	l522
  6966  0FB9  2FAB               	goto	l1649
  6967  0FBA                     l1653:	
  6968  0FBA  3001               	movlw	1
  6969  0FBB  00F5               	movwf	??___ftpack
  6970  0FBC  0875               	movf	??___ftpack,w
  6971  0FBD  07F3               	addwf	___ftpack@exp,f
  6972  0FBE  3001               	movlw	1
  6973  0FBF  07F0               	addwf	___ftpack@arg,f
  6974  0FC0  3000               	movlw	0
  6975  0FC1  1803               	skipnc
  6976  0FC2  3001               	movlw	1
  6977  0FC3  07F1               	addwf	___ftpack@arg+1,f
  6978  0FC4  3000               	movlw	0
  6979  0FC5  1803               	skipnc
  6980  0FC6  3001               	movlw	1
  6981  0FC7  07F2               	addwf	___ftpack@arg+2,f
  6982  0FC8  3001               	movlw	1
  6983  0FC9                     u1555:	
  6984  0FC9  36F2               	lsrf	___ftpack@arg+2,f
  6985  0FCA  0CF1               	rrf	___ftpack@arg+1,f
  6986  0FCB  0CF0               	rrf	___ftpack@arg,f
  6987  0FCC  0B89               	decfsz	9,f
  6988  0FCD  2FC9               	goto	u1555
  6989  0FCE                     l522:	
  6990  0FCE  30FF               	movlw	255
  6991  0FCF  0572               	andwf	___ftpack@arg+2,w
  6992  0FD0  1903               	btfsc	3,2
  6993  0FD1  2FDB               	goto	l1661
  6994  0FD2  2FBA               	goto	l1653
  6995  0FD3                     l1659:	
  6996  0FD3  3001               	movlw	1
  6997  0FD4  02F3               	subwf	___ftpack@exp,f
  6998  0FD5  3001               	movlw	1
  6999  0FD6                     u1575:	
  7000  0FD6  35F0               	lslf	___ftpack@arg,f
  7001  0FD7  0DF1               	rlf	___ftpack@arg+1,f
  7002  0FD8  0DF2               	rlf	___ftpack@arg+2,f
  7003  0FD9  0B89               	decfsz	9,f
  7004  0FDA  2FD6               	goto	u1575
  7005  0FDB                     l1661:	
  7006  0FDB  1BF1               	btfsc	___ftpack@arg+1,7
  7007  0FDC  2FE1               	goto	l529
  7008  0FDD  3002               	movlw	2
  7009  0FDE  0273               	subwf	___ftpack@exp,w
  7010  0FDF  1803               	skipnc
  7011  0FE0  2FD3               	goto	l1659
  7012  0FE1                     l529:	
  7013  0FE1  1873               	btfsc	___ftpack@exp,0
  7014  0FE2  2FE9               	goto	l530
  7015  0FE3  30FF               	movlw	255
  7016  0FE4  05F0               	andwf	___ftpack@arg,f
  7017  0FE5  307F               	movlw	127
  7018  0FE6  05F1               	andwf	___ftpack@arg+1,f
  7019  0FE7  30FF               	movlw	255
  7020  0FE8  05F2               	andwf	___ftpack@arg+2,f
  7021  0FE9                     l530:	
  7022  0FE9  1003               	clrc
  7023  0FEA  0CF3               	rrf	___ftpack@exp,f
  7024  0FEB  0873               	movf	___ftpack@exp,w
  7025  0FEC  00F5               	movwf	??___ftpack
  7026  0FED  01F6               	clrf	??___ftpack+1
  7027  0FEE  01F7               	clrf	??___ftpack+2
  7028  0FEF  3010               	movlw	16
  7029  0FF0                     u1615:	
  7030  0FF0  35F5               	lslf	??___ftpack,f
  7031  0FF1  0DF6               	rlf	??___ftpack+1,f
  7032  0FF2  0DF7               	rlf	??___ftpack+2,f
  7033  0FF3  0B89               	decfsz	9,f
  7034  0FF4  2FF0               	goto	u1615
  7035  0FF5  0875               	movf	??___ftpack,w
  7036  0FF6  04F0               	iorwf	___ftpack@arg,f
  7037  0FF7  0876               	movf	??___ftpack+1,w
  7038  0FF8  04F1               	iorwf	___ftpack@arg+1,f
  7039  0FF9  0877               	movf	??___ftpack+2,w
  7040  0FFA  04F2               	iorwf	___ftpack@arg+2,f
  7041  0FFB  0874               	movf	___ftpack@sign,w
  7042  0FFC  1903               	btfsc	3,2
  7043  0FFD  0008               	return
  7044  0FFE  17F2               	bsf	___ftpack@arg+2,7
  7045  0FFF  0008               	return
  7046  1000                     __end_of___ftpack:	
  7047                           
  7048                           	psect	text15
  7049  0113                     __ptext15:	
  7050 ;; *************** function ___aldiv *****************
  7051 ;; Defined at:
  7052 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\aldiv.c"
  7053 ;; Parameters:    Size  Location     Type
  7054 ;;  divisor         4    0[COMMON] long 
  7055 ;;  dividend        4    4[COMMON] long 
  7056 ;; Auto vars:     Size  Location     Type
  7057 ;;  quotient        4    2[BANK0 ] long 
  7058 ;;  sign            1    1[BANK0 ] unsigned char 
  7059 ;;  counter         1    0[BANK0 ] unsigned char 
  7060 ;; Return value:  Size  Location     Type
  7061 ;;                  4    0[COMMON] long 
  7062 ;; Registers used:
  7063 ;;		wreg, status,2, status,0
  7064 ;; Tracked objects:
  7065 ;;		On entry : 0/0
  7066 ;;		On exit  : 0/0
  7067 ;;		Unchanged: 0/0
  7068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7069 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7070 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7071 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7072 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7073 ;;Total ram usage:       15 bytes
  7074 ;; Hardware stack levels used:    1
  7075 ;; This function calls:
  7076 ;;		Nothing
  7077 ;; This function is called by:
  7078 ;;		_main
  7079 ;; This function uses a non-reentrant model
  7080 ;;
  7081                           
  7082                           
  7083                           ;psect for function ___aldiv
  7084  0113                     ___aldiv:	
  7085                           
  7086                           ;incstack = 0
  7087                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  7088  0113  0020               	movlb	0	; select bank0
  7089  0114  01A1               	clrf	___aldiv@sign
  7090  0115  1FF3               	btfss	___aldiv@divisor+3,7
  7091  0116  2924               	goto	l416
  7092  0117  09F0               	comf	___aldiv@divisor,f
  7093  0118  09F1               	comf	___aldiv@divisor+1,f
  7094  0119  09F2               	comf	___aldiv@divisor+2,f
  7095  011A  09F3               	comf	___aldiv@divisor+3,f
  7096  011B  0AF0               	incf	___aldiv@divisor,f
  7097  011C  1903               	skipnz
  7098  011D  0AF1               	incf	___aldiv@divisor+1,f
  7099  011E  1903               	skipnz
  7100  011F  0AF2               	incf	___aldiv@divisor+2,f
  7101  0120  1903               	skipnz
  7102  0121  0AF3               	incf	___aldiv@divisor+3,f
  7103  0122  01A1               	clrf	___aldiv@sign
  7104  0123  0AA1               	incf	___aldiv@sign,f
  7105  0124                     l416:	
  7106  0124  1FF7               	btfss	___aldiv@dividend+3,7
  7107  0125  2935               	goto	l2245
  7108  0126  09F4               	comf	___aldiv@dividend,f
  7109  0127  09F5               	comf	___aldiv@dividend+1,f
  7110  0128  09F6               	comf	___aldiv@dividend+2,f
  7111  0129  09F7               	comf	___aldiv@dividend+3,f
  7112  012A  0AF4               	incf	___aldiv@dividend,f
  7113  012B  1903               	skipnz
  7114  012C  0AF5               	incf	___aldiv@dividend+1,f
  7115  012D  1903               	skipnz
  7116  012E  0AF6               	incf	___aldiv@dividend+2,f
  7117  012F  1903               	skipnz
  7118  0130  0AF7               	incf	___aldiv@dividend+3,f
  7119  0131  3001               	movlw	1
  7120  0132  00F8               	movwf	??___aldiv
  7121  0133  0878               	movf	??___aldiv,w
  7122  0134  06A1               	xorwf	___aldiv@sign,f
  7123  0135                     l2245:	
  7124  0135  3000               	movlw	0
  7125  0136  00A5               	movwf	___aldiv@quotient+3
  7126  0137  3000               	movlw	0
  7127  0138  00A4               	movwf	___aldiv@quotient+2
  7128  0139  3000               	movlw	0
  7129  013A  00A3               	movwf	___aldiv@quotient+1
  7130  013B  3000               	movlw	0
  7131  013C  00A2               	movwf	___aldiv@quotient
  7132  013D  0873               	movf	___aldiv@divisor+3,w
  7133  013E  0472               	iorwf	___aldiv@divisor+2,w
  7134  013F  0471               	iorwf	___aldiv@divisor+1,w
  7135  0140  0470               	iorwf	___aldiv@divisor,w
  7136  0141  1903               	skipnz
  7137  0142  297E               	goto	l2267
  7138  0143  01A0               	clrf	___aldiv@counter
  7139  0144  0AA0               	incf	___aldiv@counter,f
  7140  0145                     l2253:	
  7141  0145  1BF3               	btfsc	___aldiv@divisor+3,7
  7142  0146  2953               	goto	l2255
  7143  0147  3001               	movlw	1
  7144  0148                     u2605:	
  7145  0148  35F0               	lslf	___aldiv@divisor,f
  7146  0149  0DF1               	rlf	___aldiv@divisor+1,f
  7147  014A  0DF2               	rlf	___aldiv@divisor+2,f
  7148  014B  0DF3               	rlf	___aldiv@divisor+3,f
  7149  014C  0B89               	decfsz	9,f
  7150  014D  2948               	goto	u2605
  7151  014E  3001               	movlw	1
  7152  014F  00F8               	movwf	??___aldiv
  7153  0150  0878               	movf	??___aldiv,w
  7154  0151  07A0               	addwf	___aldiv@counter,f
  7155  0152  2945               	goto	l2253
  7156  0153                     l2255:	
  7157  0153  3001               	movlw	1
  7158  0154                     u2625:	
  7159  0154  35A2               	lslf	___aldiv@quotient,f
  7160  0155  0DA3               	rlf	___aldiv@quotient+1,f
  7161  0156  0DA4               	rlf	___aldiv@quotient+2,f
  7162  0157  0DA5               	rlf	___aldiv@quotient+3,f
  7163  0158  0B89               	decfsz	9,f
  7164  0159  2954               	goto	u2625
  7165  015A  0873               	movf	___aldiv@divisor+3,w
  7166  015B  0277               	subwf	___aldiv@dividend+3,w
  7167  015C  1D03               	skipz
  7168  015D  2968               	goto	u2635
  7169  015E  0872               	movf	___aldiv@divisor+2,w
  7170  015F  0276               	subwf	___aldiv@dividend+2,w
  7171  0160  1D03               	skipz
  7172  0161  2968               	goto	u2635
  7173  0162  0871               	movf	___aldiv@divisor+1,w
  7174  0163  0275               	subwf	___aldiv@dividend+1,w
  7175  0164  1D03               	skipz
  7176  0165  2968               	goto	u2635
  7177  0166  0870               	movf	___aldiv@divisor,w
  7178  0167  0274               	subwf	___aldiv@dividend,w
  7179  0168                     u2635:	
  7180  0168  1C03               	skipc
  7181  0169  2973               	goto	l2263
  7182  016A  0870               	movf	___aldiv@divisor,w
  7183  016B  02F4               	subwf	___aldiv@dividend,f
  7184  016C  0871               	movf	___aldiv@divisor+1,w
  7185  016D  3BF5               	subwfb	___aldiv@dividend+1,f
  7186  016E  0872               	movf	___aldiv@divisor+2,w
  7187  016F  3BF6               	subwfb	___aldiv@dividend+2,f
  7188  0170  0873               	movf	___aldiv@divisor+3,w
  7189  0171  3BF7               	subwfb	___aldiv@dividend+3,f
  7190  0172  1422               	bsf	___aldiv@quotient,0
  7191  0173                     l2263:	
  7192  0173  3001               	movlw	1
  7193  0174                     u2645:	
  7194  0174  36F3               	lsrf	___aldiv@divisor+3,f
  7195  0175  0CF2               	rrf	___aldiv@divisor+2,f
  7196  0176  0CF1               	rrf	___aldiv@divisor+1,f
  7197  0177  0CF0               	rrf	___aldiv@divisor,f
  7198  0178  0B89               	decfsz	9,f
  7199  0179  2974               	goto	u2645
  7200  017A  3001               	movlw	1
  7201  017B  02A0               	subwf	___aldiv@counter,f
  7202  017C  1D03               	btfss	3,2
  7203  017D  2953               	goto	l2255
  7204  017E                     l2267:	
  7205  017E  0821               	movf	___aldiv@sign,w
  7206  017F  1903               	btfsc	3,2
  7207  0180  298C               	goto	l2271
  7208  0181  09A2               	comf	___aldiv@quotient,f
  7209  0182  09A3               	comf	___aldiv@quotient+1,f
  7210  0183  09A4               	comf	___aldiv@quotient+2,f
  7211  0184  09A5               	comf	___aldiv@quotient+3,f
  7212  0185  0AA2               	incf	___aldiv@quotient,f
  7213  0186  1903               	skipnz
  7214  0187  0AA3               	incf	___aldiv@quotient+1,f
  7215  0188  1903               	skipnz
  7216  0189  0AA4               	incf	___aldiv@quotient+2,f
  7217  018A  1903               	skipnz
  7218  018B  0AA5               	incf	___aldiv@quotient+3,f
  7219  018C                     l2271:	
  7220  018C  0825               	movf	___aldiv@quotient+3,w
  7221  018D  00F3               	movwf	?___aldiv+3
  7222  018E  0824               	movf	___aldiv@quotient+2,w
  7223  018F  00F2               	movwf	?___aldiv+2
  7224  0190  0823               	movf	___aldiv@quotient+1,w
  7225  0191  00F1               	movwf	?___aldiv+1
  7226  0192  0822               	movf	___aldiv@quotient,w
  7227  0193  00F0               	movwf	?___aldiv
  7228  0194  0008               	return
  7229  0195                     __end_of___aldiv:	
  7230                           
  7231                           	psect	text16
  7232  0CA2                     __ptext16:	
  7233 ;; *************** function _SYSTEM_Initialize *****************
  7234 ;; Defined at:
  7235 ;;		line 68 in file "../PWMTest.X/system.c"
  7236 ;; Parameters:    Size  Location     Type
  7237 ;;		None
  7238 ;; Auto vars:     Size  Location     Type
  7239 ;;		None
  7240 ;; Return value:  Size  Location     Type
  7241 ;;                  1    wreg      void 
  7242 ;; Registers used:
  7243 ;;		wreg, status,2, status,0, pclath, cstack
  7244 ;; Tracked objects:
  7245 ;;		On entry : 0/0
  7246 ;;		On exit  : 0/0
  7247 ;;		Unchanged: 0/0
  7248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7252 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7253 ;;Total ram usage:        0 bytes
  7254 ;; Hardware stack levels used:    1
  7255 ;; Hardware stack levels required when called:    1
  7256 ;; This function calls:
  7257 ;;		_ADCC_Initialize
  7258 ;;		_OSCILLATOR_Initialize
  7259 ;;		_PIN_MANAGER_Initialize
  7260 ;;		_PWM6_Initialize
  7261 ;;		_TMR2_Initialize
  7262 ;; This function is called by:
  7263 ;;		_main
  7264 ;; This function uses a non-reentrant model
  7265 ;;
  7266                           
  7267                           
  7268                           ;psect for function _SYSTEM_Initialize
  7269  0CA2                     _SYSTEM_Initialize:	
  7270                           
  7271                           ;system.c: 71: PIN_MANAGER_Initialize();
  7272                           
  7273                           ;incstack = 0
  7274                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7275  0CA2  318D  25CB  318C   	fcall	_PIN_MANAGER_Initialize
  7276                           
  7277                           ;system.c: 72: OSCILLATOR_Initialize();
  7278  0CA5  318C  2457  318C   	fcall	_OSCILLATOR_Initialize
  7279                           
  7280                           ;system.c: 73: FVRCON = 0x00;
  7281  0CA8  0032               	movlb	18	; select bank18
  7282  0CA9  018C               	clrf	12	;volatile
  7283                           
  7284                           ;system.c: 74: ADCC_Initialize();
  7285  0CAA  318C  24F3  318C   	fcall	_ADCC_Initialize
  7286                           
  7287                           ;system.c: 75: PWM6_Initialize();
  7288  0CAD  318C  2478  318C   	fcall	_PWM6_Initialize
  7289                           
  7290                           ;system.c: 76: TMR2_Initialize();
  7291  0CB0  318C  2493         	fcall	_TMR2_Initialize
  7292  0CB2  0008               	return
  7293  0CB3                     __end_of_SYSTEM_Initialize:	
  7294                           
  7295                           	psect	text17
  7296  0C93                     __ptext17:	
  7297 ;; *************** function _TMR2_Initialize *****************
  7298 ;; Defined at:
  7299 ;;		line 4 in file "../PWMTest.X/tmr2.c"
  7300 ;; Parameters:    Size  Location     Type
  7301 ;;		None
  7302 ;; Auto vars:     Size  Location     Type
  7303 ;;		None
  7304 ;; Return value:  Size  Location     Type
  7305 ;;                  1    wreg      void 
  7306 ;; Registers used:
  7307 ;;		wreg, status,2
  7308 ;; Tracked objects:
  7309 ;;		On entry : 0/0
  7310 ;;		On exit  : 0/0
  7311 ;;		Unchanged: 0/0
  7312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7316 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7317 ;;Total ram usage:        0 bytes
  7318 ;; Hardware stack levels used:    1
  7319 ;; This function calls:
  7320 ;;		Nothing
  7321 ;; This function is called by:
  7322 ;;		_SYSTEM_Initialize
  7323 ;; This function uses a non-reentrant model
  7324 ;;
  7325                           
  7326                           
  7327                           ;psect for function _TMR2_Initialize
  7328  0C93                     _TMR2_Initialize:	
  7329                           
  7330                           ;tmr2.c: 6: T2CON = 0x02;
  7331                           
  7332                           ;incstack = 0
  7333                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  7334  0C93  3002               	movlw	2
  7335  0C94  0025               	movlb	5	; select bank5
  7336  0C95  008E               	movwf	14	;volatile
  7337                           
  7338                           ;tmr2.c: 8: T2CLKCON = 0x01;
  7339  0C96  3001               	movlw	1
  7340  0C97  0090               	movwf	16	;volatile
  7341                           
  7342                           ;tmr2.c: 10: T2HLT = 0x00;
  7343  0C98  018F               	clrf	15	;volatile
  7344                           
  7345                           ;tmr2.c: 12: T2RST = 0x00;
  7346  0C99  0191               	clrf	17	;volatile
  7347                           
  7348                           ;tmr2.c: 14: T2PR = 0xFF;
  7349  0C9A  30FF               	movlw	255
  7350  0C9B  008D               	movwf	13	;volatile
  7351                           
  7352                           ;tmr2.c: 16: T2TMR = 0x00;
  7353  0C9C  018C               	clrf	12	;volatile
  7354                           
  7355                           ;tmr2.c: 18: PIR4bits.TMR2IF = 0;
  7356  0C9D  002E               	movlb	14	; select bank14
  7357  0C9E  1090               	bcf	16,1	;volatile
  7358                           
  7359                           ;tmr2.c: 20: T2CONbits.TMR2ON = 1;
  7360  0C9F  0025               	movlb	5	; select bank5
  7361  0CA0  178E               	bsf	14,7	;volatile
  7362  0CA1  0008               	return
  7363  0CA2                     __end_of_TMR2_Initialize:	
  7364                           
  7365                           	psect	text18
  7366  0C78                     __ptext18:	
  7367 ;; *************** function _PWM6_Initialize *****************
  7368 ;; Defined at:
  7369 ;;		line 4 in file "../PWMTest.X/pwm6.c"
  7370 ;; Parameters:    Size  Location     Type
  7371 ;;		None
  7372 ;; Auto vars:     Size  Location     Type
  7373 ;;		None
  7374 ;; Return value:  Size  Location     Type
  7375 ;;                  1    wreg      void 
  7376 ;; Registers used:
  7377 ;;		wreg, status,2, status,0
  7378 ;; Tracked objects:
  7379 ;;		On entry : 0/0
  7380 ;;		On exit  : 0/0
  7381 ;;		Unchanged: 0/0
  7382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7386 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7387 ;;Total ram usage:        0 bytes
  7388 ;; Hardware stack levels used:    1
  7389 ;; This function calls:
  7390 ;;		Nothing
  7391 ;; This function is called by:
  7392 ;;		_SYSTEM_Initialize
  7393 ;; This function uses a non-reentrant model
  7394 ;;
  7395                           
  7396                           
  7397                           ;psect for function _PWM6_Initialize
  7398  0C78                     _PWM6_Initialize:	
  7399                           
  7400                           ;pwm6.c: 6: PWM6CON = 0x80;
  7401                           
  7402                           ;incstack = 0
  7403                           ; Regs used in _PWM6_Initialize: [wreg+status,2+status,0]
  7404  0C78  3080               	movlw	128
  7405  0C79  0027               	movlb	7	; select bank7
  7406  0C7A  008E               	movwf	14	;volatile
  7407                           
  7408                           ;pwm6.c: 8: PWM6DCH = 0x3C;
  7409  0C7B  303C               	movlw	60
  7410  0C7C  008D               	movwf	13	;volatile
  7411                           
  7412                           ;pwm6.c: 10: PWM6DCL = 0x40;
  7413  0C7D  3040               	movlw	64
  7414  0C7E  008C               	movwf	12	;volatile
  7415                           
  7416                           ;pwm6.c: 12: CCPTMRS1bits.P6TSEL = 0x1;
  7417  0C7F  0024               	movlb	4	; select bank4
  7418  0C80  081F               	movf	31,w	;volatile
  7419  0C81  39F3               	andlw	-13
  7420  0C82  3804               	iorlw	4
  7421  0C83  009F               	movwf	31	;volatile
  7422  0C84  0008               	return
  7423  0C85                     __end_of_PWM6_Initialize:	
  7424                           
  7425                           	psect	text19
  7426  0DCB                     __ptext19:	
  7427 ;; *************** function _PIN_MANAGER_Initialize *****************
  7428 ;; Defined at:
  7429 ;;		line 5 in file "../PWMTest.X/pin_manager.c"
  7430 ;; Parameters:    Size  Location     Type
  7431 ;;		None
  7432 ;; Auto vars:     Size  Location     Type
  7433 ;;  state           1    0[COMMON] unsigned char 
  7434 ;; Return value:  Size  Location     Type
  7435 ;;                  1    wreg      void 
  7436 ;; Registers used:
  7437 ;;		wreg, status,2
  7438 ;; Tracked objects:
  7439 ;;		On entry : 0/0
  7440 ;;		On exit  : 0/0
  7441 ;;		Unchanged: 0/0
  7442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7444 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7446 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7447 ;;Total ram usage:        1 bytes
  7448 ;; Hardware stack levels used:    1
  7449 ;; This function calls:
  7450 ;;		Nothing
  7451 ;; This function is called by:
  7452 ;;		_SYSTEM_Initialize
  7453 ;; This function uses a non-reentrant model
  7454 ;;
  7455                           
  7456                           
  7457                           ;psect for function _PIN_MANAGER_Initialize
  7458  0DCB                     _PIN_MANAGER_Initialize:	
  7459                           
  7460                           ;pin_manager.c: 7: LATA = 0x00;
  7461                           
  7462                           ;incstack = 0
  7463                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  7464  0DCB  0020               	movlb	0	; select bank0
  7465  0DCC  0196               	clrf	22	;volatile
  7466                           
  7467                           ;pin_manager.c: 8: LATB = 0x0;
  7468  0DCD  0197               	clrf	23	;volatile
  7469                           
  7470                           ;pin_manager.c: 9: LATC = 0x0;
  7471  0DCE  0198               	clrf	24	;volatile
  7472                           
  7473                           ;pin_manager.c: 11: WPUA = 0x00;
  7474  0DCF  003E               	movlb	30	; select bank30
  7475  0DD0  01B9               	clrf	57	;volatile
  7476                           
  7477                           ;pin_manager.c: 12: WPUB = 0x00;
  7478  0DD1  01C4               	clrf	68	;volatile
  7479                           
  7480                           ;pin_manager.c: 13: WPUC = 0x00;
  7481  0DD2  01CF               	clrf	79	;volatile
  7482                           
  7483                           ;pin_manager.c: 14: WPUE = 0x8;
  7484  0DD3  3008               	movlw	8
  7485  0DD4  00E5               	movwf	101	;volatile
  7486                           
  7487                           ;pin_manager.c: 16: TRISA = 0x04;
  7488  0DD5  3004               	movlw	4
  7489  0DD6  0020               	movlb	0	; select bank0
  7490  0DD7  0091               	movwf	17	;volatile
  7491                           
  7492                           ;pin_manager.c: 17: TRISB = 0x00;
  7493  0DD8  0192               	clrf	18	;volatile
  7494                           
  7495                           ;pin_manager.c: 18: TRISC = 0x10;
  7496  0DD9  3010               	movlw	16
  7497  0DDA  0093               	movwf	19	;volatile
  7498                           
  7499                           ;pin_manager.c: 20: ANSELA = 0x04;
  7500  0DDB  3004               	movlw	4
  7501  0DDC  003E               	movlb	30	; select bank30
  7502  0DDD  00B8               	movwf	56	;volatile
  7503                           
  7504                           ;pin_manager.c: 21: ANSELB = 0x00;
  7505  0DDE  01C3               	clrf	67	;volatile
  7506                           
  7507                           ;pin_manager.c: 22: ANSELC = 0x00;
  7508  0DDF  01CE               	clrf	78	;volatile
  7509                           
  7510                           ;pin_manager.c: 26: PIE0bits.IOCIE = 0;
  7511  0DE0  002E               	movlb	14	; select bank14
  7512  0DE1  1216               	bcf	22,4	;volatile
  7513                           
  7514                           ;pin_manager.c: 27: bool state = GIE;
  7515  0DE2  3000               	movlw	0
  7516  0DE3  1B8B               	btfsc	11,7	;volatile
  7517  0DE4  3001               	movlw	1
  7518  0DE5  00F0               	movwf	PIN_MANAGER_Initialize@state
  7519                           
  7520                           ;pin_manager.c: 28: GIE = 0;
  7521  0DE6  138B               	bcf	11,7	;volatile
  7522                           
  7523                           ;pin_manager.c: 29: PPSLOCK = 0x55;
  7524  0DE7  3055               	movlw	85
  7525  0DE8  003D               	movlb	29	; select bank29
  7526  0DE9  008F               	movwf	15	;volatile
  7527                           
  7528                           ;pin_manager.c: 30: PPSLOCK = 0xAA;
  7529  0DEA  30AA               	movlw	170
  7530  0DEB  008F               	movwf	15	;volatile
  7531                           
  7532                           ;pin_manager.c: 31: PPSLOCKbits.PPSLOCKED = 0x00;
  7533  0DEC  100F               	bcf	15,0	;volatile
  7534                           
  7535                           ;pin_manager.c: 34: RA1PPS = 0x000E;
  7536  0DED  300E               	movlw	14
  7537  0DEE  003E               	movlb	30	; select bank30
  7538  0DEF  0091               	movwf	17	;volatile
  7539                           
  7540                           ;pin_manager.c: 38: PPSLOCK = 0x55;
  7541  0DF0  3055               	movlw	85
  7542  0DF1  003D               	movlb	29	; select bank29
  7543  0DF2  008F               	movwf	15	;volatile
  7544                           
  7545                           ;pin_manager.c: 39: PPSLOCK = 0xAA;
  7546  0DF3  30AA               	movlw	170
  7547  0DF4  008F               	movwf	15	;volatile
  7548                           
  7549                           ;pin_manager.c: 40: PPSLOCKbits.PPSLOCKED = 0x01;
  7550  0DF5  140F               	bsf	15,0	;volatile
  7551                           
  7552                           ;pin_manager.c: 41: GIE = state;
  7553  0DF6  1C70               	btfss	PIN_MANAGER_Initialize@state,0
  7554  0DF7  2DFA               	goto	u2070
  7555  0DF8  178B               	bsf	11,7	;volatile
  7556  0DF9  0008               	return
  7557  0DFA                     u2070:	
  7558  0DFA  138B               	bcf	11,7	;volatile
  7559  0DFB  0008               	return
  7560  0DFC                     __end_of_PIN_MANAGER_Initialize:	
  7561                           
  7562                           	psect	text20
  7563  0C57                     __ptext20:	
  7564 ;; *************** function _OSCILLATOR_Initialize *****************
  7565 ;; Defined at:
  7566 ;;		line 79 in file "../PWMTest.X/system.c"
  7567 ;; Parameters:    Size  Location     Type
  7568 ;;		None
  7569 ;; Auto vars:     Size  Location     Type
  7570 ;;		None
  7571 ;; Return value:  Size  Location     Type
  7572 ;;                  1    wreg      void 
  7573 ;; Registers used:
  7574 ;;		wreg, status,2
  7575 ;; Tracked objects:
  7576 ;;		On entry : 0/0
  7577 ;;		On exit  : 0/0
  7578 ;;		Unchanged: 0/0
  7579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7583 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7584 ;;Total ram usage:        0 bytes
  7585 ;; Hardware stack levels used:    1
  7586 ;; This function calls:
  7587 ;;		Nothing
  7588 ;; This function is called by:
  7589 ;;		_SYSTEM_Initialize
  7590 ;; This function uses a non-reentrant model
  7591 ;;
  7592                           
  7593                           
  7594                           ;psect for function _OSCILLATOR_Initialize
  7595  0C57                     _OSCILLATOR_Initialize:	
  7596                           
  7597                           ;system.c: 94: OSCCON1 = 0x62;
  7598                           
  7599                           ;incstack = 0
  7600                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  7601  0C57  3062               	movlw	98
  7602  0C58  0031               	movlb	17	; select bank17
  7603  0C59  008D               	movwf	13	;volatile
  7604                           
  7605                           ;system.c: 96: OSCCON3 = 0x00;
  7606  0C5A  018F               	clrf	15	;volatile
  7607                           
  7608                           ;system.c: 98: OSCEN = 0x00;
  7609  0C5B  0191               	clrf	17	;volatile
  7610                           
  7611                           ;system.c: 100: OSCFRQ = 0x02;
  7612  0C5C  3002               	movlw	2
  7613  0C5D  0093               	movwf	19	;volatile
  7614                           
  7615                           ;system.c: 102: OSCTUNE = 0x00;
  7616  0C5E  0192               	clrf	18	;volatile
  7617  0C5F  0008               	return
  7618  0C60                     __end_of_OSCILLATOR_Initialize:	
  7619                           
  7620                           	psect	text21
  7621  0CF3                     __ptext21:	
  7622 ;; *************** function _ADCC_Initialize *****************
  7623 ;; Defined at:
  7624 ;;		line 5 in file "../PWMTest.X/adcc.c"
  7625 ;; Parameters:    Size  Location     Type
  7626 ;;		None
  7627 ;; Auto vars:     Size  Location     Type
  7628 ;;		None
  7629 ;; Return value:  Size  Location     Type
  7630 ;;                  1    wreg      void 
  7631 ;; Registers used:
  7632 ;;		wreg, status,2
  7633 ;; Tracked objects:
  7634 ;;		On entry : 0/0
  7635 ;;		On exit  : 0/0
  7636 ;;		Unchanged: 0/0
  7637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7641 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7642 ;;Total ram usage:        0 bytes
  7643 ;; Hardware stack levels used:    1
  7644 ;; This function calls:
  7645 ;;		Nothing
  7646 ;; This function is called by:
  7647 ;;		_SYSTEM_Initialize
  7648 ;; This function uses a non-reentrant model
  7649 ;;
  7650                           
  7651                           
  7652                           ;psect for function _ADCC_Initialize
  7653  0CF3                     _ADCC_Initialize:	
  7654                           
  7655                           ;adcc.c: 9: ADCON1 = 0x00;
  7656                           
  7657                           ;incstack = 0
  7658                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
  7659  0CF3  0021               	movlb	1	; select bank1
  7660  0CF4  0194               	clrf	20	;volatile
  7661                           
  7662                           ;adcc.c: 11: ADCON2 = 0x00;
  7663  0CF5  0195               	clrf	21	;volatile
  7664                           
  7665                           ;adcc.c: 13: ADCON3 = 0x00;
  7666  0CF6  0196               	clrf	22	;volatile
  7667                           
  7668                           ;adcc.c: 15: ADACT = 0x00;
  7669  0CF7  0199               	clrf	25	;volatile
  7670                           
  7671                           ;adcc.c: 17: ADSTAT = 0x00;
  7672  0CF8  0197               	clrf	23	;volatile
  7673                           
  7674                           ;adcc.c: 19: ADCLK = 0x00;
  7675  0CF9  0198               	clrf	24	;volatile
  7676                           
  7677                           ;adcc.c: 22: ADREF = 0x00;
  7678  0CFA  019A               	clrf	26	;volatile
  7679                           
  7680                           ;adcc.c: 24: ADCAP = 0x00;
  7681  0CFB  019B               	clrf	27	;volatile
  7682                           
  7683                           ;adcc.c: 26: ADPRE = 0x00;
  7684  0CFC  019C               	clrf	28	;volatile
  7685                           
  7686                           ;adcc.c: 28: ADACQ = 0x00;
  7687  0CFD  019D               	clrf	29	;volatile
  7688                           
  7689                           ;adcc.c: 30: ADPCH = 0x00;
  7690  0CFE  019E               	clrf	30	;volatile
  7691                           
  7692                           ;adcc.c: 32: ADRPT = 0x00;
  7693  0CFF  0022               	movlb	2	; select bank2
  7694  0D00  018D               	clrf	13	;volatile
  7695                           
  7696                           ;adcc.c: 34: ADLTHL = 0x00;
  7697  0D01  018E               	clrf	14	;volatile
  7698                           
  7699                           ;adcc.c: 36: ADLTHH = 0x00;
  7700  0D02  018F               	clrf	15	;volatile
  7701                           
  7702                           ;adcc.c: 38: ADUTHL = 0x00;
  7703  0D03  0190               	clrf	16	;volatile
  7704                           
  7705                           ;adcc.c: 40: ADUTHH = 0x00;
  7706  0D04  0191               	clrf	17	;volatile
  7707                           
  7708                           ;adcc.c: 42: ADSTPTL = 0x00;
  7709  0D05  0192               	clrf	18	;volatile
  7710                           
  7711                           ;adcc.c: 44: ADSTPTH = 0x00;
  7712  0D06  0193               	clrf	19	;volatile
  7713                           
  7714                           ;adcc.c: 47: ADCON0 = 0x84;
  7715  0D07  3084               	movlw	132
  7716  0D08  0021               	movlb	1	; select bank1
  7717  0D09  0093               	movwf	19	;volatile
  7718  0D0A  0008               	return
  7719  0D0B                     __end_of_ADCC_Initialize:	
  7720                           
  7721                           	psect	text22
  7722  0CC5                     __ptext22:	
  7723 ;; *************** function _PWM6_LoadDutyValue *****************
  7724 ;; Defined at:
  7725 ;;		line 15 in file "../PWMTest.X/pwm6.c"
  7726 ;; Parameters:    Size  Location     Type
  7727 ;;  dutyValue       2    0[COMMON] unsigned int 
  7728 ;; Auto vars:     Size  Location     Type
  7729 ;;		None
  7730 ;; Return value:  Size  Location     Type
  7731 ;;                  1    wreg      void 
  7732 ;; Registers used:
  7733 ;;		wreg, status,2, status,0
  7734 ;; Tracked objects:
  7735 ;;		On entry : 0/0
  7736 ;;		On exit  : 0/0
  7737 ;;		Unchanged: 0/0
  7738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7739 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7741 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7742 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7743 ;;Total ram usage:        4 bytes
  7744 ;; Hardware stack levels used:    1
  7745 ;; This function calls:
  7746 ;;		Nothing
  7747 ;; This function is called by:
  7748 ;;		_main
  7749 ;; This function uses a non-reentrant model
  7750 ;;
  7751                           
  7752                           
  7753                           ;psect for function _PWM6_LoadDutyValue
  7754  0CC5                     _PWM6_LoadDutyValue:	
  7755                           
  7756                           ;pwm6.c: 17: PWM6DCH = (dutyValue & 0x03FC)>>2;
  7757                           
  7758                           ;incstack = 0
  7759                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
  7760  0CC5  0871               	movf	PWM6_LoadDutyValue@dutyValue+1,w
  7761  0CC6  00F3               	movwf	??_PWM6_LoadDutyValue+1
  7762  0CC7  0870               	movf	PWM6_LoadDutyValue@dutyValue,w
  7763  0CC8  00F2               	movwf	??_PWM6_LoadDutyValue
  7764  0CC9  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
  7765  0CCA  0CF2               	rrf	??_PWM6_LoadDutyValue,f
  7766  0CCB  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
  7767  0CCC  0CF2               	rrf	??_PWM6_LoadDutyValue,f
  7768  0CCD  0872               	movf	??_PWM6_LoadDutyValue,w
  7769  0CCE  0027               	movlb	7	; select bank7
  7770  0CCF  008D               	movwf	13	;volatile
  7771                           
  7772                           ;pwm6.c: 19: PWM6DCL = (dutyValue & 0x0003)<<6;
  7773  0CD0  0870               	movf	PWM6_LoadDutyValue@dutyValue,w
  7774  0CD1  3903               	andlw	3
  7775  0CD2  00F2               	movwf	??_PWM6_LoadDutyValue
  7776  0CD3  3005               	movlw	5
  7777  0CD4                     u2565:	
  7778  0CD4  35F2               	lslf	??_PWM6_LoadDutyValue,f
  7779  0CD5  3EFF               	addlw	-1
  7780  0CD6  1D03               	skipz
  7781  0CD7  2CD4               	goto	u2565
  7782  0CD8  3572               	lslf	??_PWM6_LoadDutyValue,w
  7783  0CD9  008C               	movwf	12	;volatile
  7784  0CDA  0008               	return
  7785  0CDB                     __end_of_PWM6_LoadDutyValue:	
  7786                           
  7787                           	psect	text23
  7788  0424                     __ptext23:	
  7789 ;; *************** function _LCD_Write_Int *****************
  7790 ;; Defined at:
  7791 ;;		line 246 in file "../PWMTest.X/lcd.c"
  7792 ;; Parameters:    Size  Location     Type
  7793 ;;  value           2    0[BANK0 ] int 
  7794 ;;  fieldLength     1    2[BANK0 ] char 
  7795 ;;  numPlaces       1    3[BANK0 ] char 
  7796 ;;  sign            1    4[BANK0 ] char 
  7797 ;; Auto vars:     Size  Location     Type
  7798 ;;  str             5   10[BANK0 ] unsigned char [5]
  7799 ;;  i               2   17[BANK0 ] int 
  7800 ;;  j               2   15[BANK0 ] int 
  7801 ;; Return value:  Size  Location     Type
  7802 ;;                  1    wreg      void 
  7803 ;; Registers used:
  7804 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7805 ;; Tracked objects:
  7806 ;;		On entry : 0/0
  7807 ;;		On exit  : 0/0
  7808 ;;		Unchanged: 0/0
  7809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7810 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7811 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7812 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7813 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7814 ;;Total ram usage:       19 bytes
  7815 ;; Hardware stack levels used:    1
  7816 ;; Hardware stack levels required when called:    2
  7817 ;; This function calls:
  7818 ;;		_LCD_Write_Char
  7819 ;;		___awdiv
  7820 ;;		___awmod
  7821 ;; This function is called by:
  7822 ;;		_main
  7823 ;; This function uses a non-reentrant model
  7824 ;;
  7825                           
  7826                           
  7827                           ;psect for function _LCD_Write_Int
  7828  0424                     _LCD_Write_Int:	
  7829                           
  7830                           ;lcd.c: 248: char str[5]={0,0,0,0,0};
  7831                           
  7832                           ;incstack = 0
  7833                           ; Regs used in _LCD_Write_Int: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7834  0424  3066               	movlw	low LCD_Write_Int@F13684
  7835  0425  0086               	movwf	6
  7836  0426  3000               	movlw	high LCD_Write_Int@F13684
  7837  0427  0087               	movwf	7
  7838  0428  302A               	movlw	low LCD_Write_Int@str
  7839  0429  0084               	movwf	4
  7840  042A  3000               	movlw	high LCD_Write_Int@str
  7841  042B  0085               	movwf	5
  7842  042C  3005               	movlw	5
  7843  042D  0020               	movlb	0	; select bank0
  7844  042E  00A5               	movwf	??_LCD_Write_Int
  7845  042F                     u2470:	
  7846  042F  0016               	moviw fsr1++
  7847  0430  001A               	movwi fsr0++
  7848  0431  0BA5               	decfsz	??_LCD_Write_Int,f
  7849  0432  2C2F               	goto	u2470
  7850                           
  7851                           ;lcd.c: 249: int i=4,j=0;
  7852  0433  3004               	movlw	4
  7853  0434  00B1               	movwf	LCD_Write_Int@i
  7854  0435  3000               	movlw	0
  7855  0436  00B2               	movwf	LCD_Write_Int@i+1
  7856  0437  01AF               	clrf	LCD_Write_Int@j
  7857  0438  01B0               	clrf	LCD_Write_Int@j+1
  7858                           
  7859                           ;lcd.c: 251: if(value<0)
  7860  0439  1FA1               	btfss	LCD_Write_Int@value+1,7
  7861  043A  2C46               	goto	l2195
  7862                           
  7863                           ;lcd.c: 252: {
  7864                           ;lcd.c: 253: LCD_Write_Char('-');
  7865  043B  302D               	movlw	45
  7866  043C  318D  25A1  3184   	fcall	_LCD_Write_Char
  7867                           
  7868                           ;lcd.c: 254: value=value*-1;
  7869  043F  0020               	movlb	0	; select bank0
  7870  0440  09A0               	comf	LCD_Write_Int@value,f
  7871  0441  09A1               	comf	LCD_Write_Int@value+1,f
  7872  0442  0AA0               	incf	LCD_Write_Int@value,f
  7873  0443  1903               	skipnz
  7874  0444  0AA1               	incf	LCD_Write_Int@value+1,f
  7875                           
  7876                           ;lcd.c: 255: }
  7877  0445  2C4D               	goto	l2205
  7878  0446                     l2195:	
  7879                           
  7880                           ;lcd.c: 257: else
  7881                           ;lcd.c: 258: {
  7882                           ;lcd.c: 259: if(sign == 1)
  7883  0446  0324               	decf	LCD_Write_Int@sign,w
  7884  0447  1D03               	btfss	3,2
  7885  0448  2C4D               	goto	l2205
  7886                           
  7887                           ;lcd.c: 260: {
  7888                           ;lcd.c: 261: LCD_Write_Char('+');
  7889  0449  302B               	movlw	43
  7890  044A  318D  25A1  3184   	fcall	_LCD_Write_Char
  7891  044D                     l2205:	
  7892                           ;lcd.c: 262: }
  7893                           ;lcd.c: 263: }
  7894                           ;lcd.c: 265: while(value)
  7895                           
  7896  044D  0020               	movlb	0	; select bank0
  7897  044E  0820               	movf	LCD_Write_Int@value,w
  7898  044F  0421               	iorwf	LCD_Write_Int@value+1,w
  7899  0450  1903               	btfsc	3,2
  7900  0451  2C7C               	goto	l2207
  7901                           
  7902                           ;lcd.c: 266: {
  7903                           ;lcd.c: 267: str[i]=value%10;
  7904  0452  300A               	movlw	10
  7905  0453  00F0               	movwf	___awmod@divisor
  7906  0454  3000               	movlw	0
  7907  0455  00F1               	movwf	___awmod@divisor+1
  7908  0456  0020               	movlb	0	; select bank0
  7909  0457  0821               	movf	LCD_Write_Int@value+1,w
  7910  0458  00F3               	movwf	___awmod@dividend+1
  7911  0459  0820               	movf	LCD_Write_Int@value,w
  7912  045A  00F2               	movwf	___awmod@dividend
  7913  045B  318E  26A6  3184   	fcall	___awmod
  7914  045E  0870               	movf	?___awmod,w
  7915  045F  0020               	movlb	0	; select bank0
  7916  0460  00A5               	movwf	??_LCD_Write_Int
  7917  0461  0831               	movf	LCD_Write_Int@i,w
  7918  0462  3E2A               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
  7919  0463  0086               	movwf	6
  7920  0464  0187               	clrf	7
  7921  0465  0825               	movf	??_LCD_Write_Int,w
  7922  0466  0081               	movwf	1
  7923                           
  7924                           ;lcd.c: 268: value=value/10;
  7925  0467  300A               	movlw	10
  7926  0468  00F0               	movwf	___awdiv@divisor
  7927  0469  3000               	movlw	0
  7928  046A  00F1               	movwf	___awdiv@divisor+1
  7929  046B  0821               	movf	LCD_Write_Int@value+1,w
  7930  046C  00F3               	movwf	___awdiv@dividend+1
  7931  046D  0820               	movf	LCD_Write_Int@value,w
  7932  046E  00F2               	movwf	___awdiv@dividend
  7933  046F  318E  26EB  3184   	fcall	___awdiv
  7934  0472  0871               	movf	?___awdiv+1,w
  7935  0473  0020               	movlb	0	; select bank0
  7936  0474  00A1               	movwf	LCD_Write_Int@value+1
  7937  0475  0870               	movf	?___awdiv,w
  7938  0476  00A0               	movwf	LCD_Write_Int@value
  7939                           
  7940                           ;lcd.c: 269: i--;
  7941  0477  30FF               	movlw	255
  7942  0478  07B1               	addwf	LCD_Write_Int@i,f
  7943  0479  30FF               	movlw	255
  7944  047A  3DB2               	addwfc	LCD_Write_Int@i+1,f
  7945  047B  2C4D               	goto	l2205
  7946  047C                     l2207:	
  7947                           
  7948                           ;lcd.c: 270: }
  7949                           ;lcd.c: 271: if(fieldLength==-1)
  7950  047C  0A22               	incf	LCD_Write_Int@fieldLength,w
  7951  047D  1903               	btfsc	3,2
  7952  047E  2C84               	goto	l2213
  7953  047F  2C8C               	goto	l2215
  7954  0480                     l2211:	
  7955                           ;lcd.c: 272: {
  7956                           ;lcd.c: 273: while(str[j]==0)
  7957                           
  7958                           
  7959                           ;lcd.c: 274: {
  7960                           ;lcd.c: 275: j++;
  7961  0480  3001               	movlw	1
  7962  0481  07AF               	addwf	LCD_Write_Int@j,f
  7963  0482  3000               	movlw	0
  7964  0483  3DB0               	addwfc	LCD_Write_Int@j+1,f
  7965  0484                     l2213:	
  7966  0484  082F               	movf	LCD_Write_Int@j,w
  7967  0485  3E2A               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
  7968  0486  0086               	movwf	6
  7969  0487  0187               	clrf	7
  7970  0488  0801               	movf	1,w
  7971  0489  1D03               	btfss	3,2
  7972  048A  2C9C               	goto	l2217
  7973  048B  2C80               	goto	l2211
  7974  048C                     l2215:	
  7975                           ;lcd.c: 276: }
  7976                           ;lcd.c: 277: }
  7977                           
  7978                           
  7979                           ;lcd.c: 278: else
  7980                           ;lcd.c: 279: {
  7981                           ;lcd.c: 280: j=5-fieldLength;
  7982  048C  0822               	movf	LCD_Write_Int@fieldLength,w
  7983  048D  00A5               	movwf	??_LCD_Write_Int
  7984  048E  01A6               	clrf	??_LCD_Write_Int+1
  7985  048F  1BA5               	btfsc	??_LCD_Write_Int,7
  7986  0490  03A6               	decf	??_LCD_Write_Int+1,f
  7987  0491  09A5               	comf	??_LCD_Write_Int,f
  7988  0492  09A6               	comf	??_LCD_Write_Int+1,f
  7989  0493  0AA5               	incf	??_LCD_Write_Int,f
  7990  0494  1903               	skipnz
  7991  0495  0AA6               	incf	??_LCD_Write_Int+1,f
  7992  0496  0825               	movf	??_LCD_Write_Int,w
  7993  0497  3E05               	addlw	5
  7994  0498  00AF               	movwf	LCD_Write_Int@j
  7995  0499  3000               	movlw	0
  7996  049A  3D26               	addwfc	??_LCD_Write_Int+1,w
  7997  049B  00B0               	movwf	LCD_Write_Int@j+1
  7998  049C                     l2217:	
  7999                           
  8000                           ;lcd.c: 281: }
  8001                           ;lcd.c: 283: for(i=j;i<(5-numPlaces);i++)
  8002  049C  0830               	movf	LCD_Write_Int@j+1,w
  8003  049D  00B2               	movwf	LCD_Write_Int@i+1
  8004  049E  082F               	movf	LCD_Write_Int@j,w
  8005  049F  00B1               	movwf	LCD_Write_Int@i
  8006  04A0                     l2223:	
  8007  04A0  0823               	movf	LCD_Write_Int@numPlaces,w
  8008  04A1  00A5               	movwf	??_LCD_Write_Int
  8009  04A2  01A6               	clrf	??_LCD_Write_Int+1
  8010  04A3  1BA5               	btfsc	??_LCD_Write_Int,7
  8011  04A4  03A6               	decf	??_LCD_Write_Int+1,f
  8012  04A5  09A5               	comf	??_LCD_Write_Int,f
  8013  04A6  09A6               	comf	??_LCD_Write_Int+1,f
  8014  04A7  0AA5               	incf	??_LCD_Write_Int,f
  8015  04A8  1903               	skipnz
  8016  04A9  0AA6               	incf	??_LCD_Write_Int+1,f
  8017  04AA  0825               	movf	??_LCD_Write_Int,w
  8018  04AB  3E05               	addlw	5
  8019  04AC  00A7               	movwf	??_LCD_Write_Int+2
  8020  04AD  3000               	movlw	0
  8021  04AE  3D26               	addwfc	??_LCD_Write_Int+1,w
  8022  04AF  00A8               	movwf	??_LCD_Write_Int+3
  8023  04B0  0832               	movf	LCD_Write_Int@i+1,w
  8024  04B1  3A80               	xorlw	128
  8025  04B2  00A9               	movwf	??_LCD_Write_Int+4
  8026  04B3  0828               	movf	??_LCD_Write_Int+3,w
  8027  04B4  3A80               	xorlw	128
  8028  04B5  0229               	subwf	??_LCD_Write_Int+4,w
  8029  04B6  1D03               	skipz
  8030  04B7  2CBA               	goto	u2535
  8031  04B8  0827               	movf	??_LCD_Write_Int+2,w
  8032  04B9  0231               	subwf	LCD_Write_Int@i,w
  8033  04BA                     u2535:	
  8034  04BA  1803               	btfsc	3,0
  8035  04BB  2CCC               	goto	l2225
  8036                           
  8037                           ;lcd.c: 284: {
  8038                           ;lcd.c: 285: LCD_Write_Char(48+str[i]);
  8039  04BC  0020               	movlb	0	; select bank0
  8040  04BD  0831               	movf	LCD_Write_Int@i,w
  8041  04BE  3E2A               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
  8042  04BF  0086               	movwf	6
  8043  04C0  0187               	clrf	7
  8044  04C1  0801               	movf	1,w
  8045  04C2  3E30               	addlw	48
  8046  04C3  318D  25A1  3184   	fcall	_LCD_Write_Char
  8047  04C6  3001               	movlw	1
  8048  04C7  0020               	movlb	0	; select bank0
  8049  04C8  07B1               	addwf	LCD_Write_Int@i,f
  8050  04C9  3000               	movlw	0
  8051  04CA  3DB2               	addwfc	LCD_Write_Int@i+1,f
  8052  04CB  2CA0               	goto	l2223
  8053  04CC                     l2225:	
  8054                           
  8055                           ;lcd.c: 286: }
  8056                           ;lcd.c: 288: if(numPlaces == 1)
  8057  04CC  0020               	movlb	0	; select bank0
  8058  04CD  0323               	decf	LCD_Write_Int@numPlaces,w
  8059  04CE  1D03               	btfss	3,2
  8060  04CF  2CDA               	goto	l2229
  8061                           
  8062                           ;lcd.c: 289: {
  8063                           ;lcd.c: 290: LCD_Write_Char(46);
  8064  04D0  302E               	movlw	46
  8065  04D1  318D  25A1  3184   	fcall	_LCD_Write_Char
  8066                           
  8067                           ;lcd.c: 291: LCD_Write_Char(48+str[4]);
  8068  04D4  0020               	movlb	0	; select bank0
  8069  04D5  082E               	movf	LCD_Write_Int@str+4,w
  8070  04D6  3E30               	addlw	48
  8071  04D7  318D  25A1  3184   	fcall	_LCD_Write_Char
  8072  04DA                     l2229:	
  8073                           
  8074                           ;lcd.c: 292: }
  8075                           ;lcd.c: 294: if(numPlaces == 2)
  8076  04DA  3002               	movlw	2
  8077  04DB  0020               	movlb	0	; select bank0
  8078  04DC  0623               	xorwf	LCD_Write_Int@numPlaces,w
  8079  04DD  1D03               	btfss	3,2
  8080  04DE  0008               	return
  8081                           
  8082                           ;lcd.c: 295: {
  8083                           ;lcd.c: 296: LCD_Write_Char(46);
  8084  04DF  302E               	movlw	46
  8085  04E0  318D  25A1  3184   	fcall	_LCD_Write_Char
  8086                           
  8087                           ;lcd.c: 297: LCD_Write_Char(48+str[3]);
  8088  04E3  0020               	movlb	0	; select bank0
  8089  04E4  082D               	movf	LCD_Write_Int@str+3,w
  8090  04E5  3E30               	addlw	48
  8091  04E6  318D  25A1  3184   	fcall	_LCD_Write_Char
  8092                           
  8093                           ;lcd.c: 298: LCD_Write_Char(48+str[4]);
  8094  04E9  0020               	movlb	0	; select bank0
  8095  04EA  082E               	movf	LCD_Write_Int@str+4,w
  8096  04EB  3E30               	addlw	48
  8097  04EC  318D  25A1         	fcall	_LCD_Write_Char
  8098  04EE  0008               	return
  8099  04EF                     __end_of_LCD_Write_Int:	
  8100                           
  8101                           	psect	text24
  8102  0EA6                     __ptext24:	
  8103 ;; *************** function ___awmod *****************
  8104 ;; Defined at:
  8105 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c"
  8106 ;; Parameters:    Size  Location     Type
  8107 ;;  divisor         2    0[COMMON] int 
  8108 ;;  dividend        2    2[COMMON] int 
  8109 ;; Auto vars:     Size  Location     Type
  8110 ;;  sign            1    6[COMMON] unsigned char 
  8111 ;;  counter         1    5[COMMON] unsigned char 
  8112 ;; Return value:  Size  Location     Type
  8113 ;;                  2    0[COMMON] int 
  8114 ;; Registers used:
  8115 ;;		wreg, status,2, status,0
  8116 ;; Tracked objects:
  8117 ;;		On entry : 0/0
  8118 ;;		On exit  : 0/0
  8119 ;;		Unchanged: 0/0
  8120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8121 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8122 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8123 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8124 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8125 ;;Total ram usage:        7 bytes
  8126 ;; Hardware stack levels used:    1
  8127 ;; This function calls:
  8128 ;;		Nothing
  8129 ;; This function is called by:
  8130 ;;		_LCD_Write_Int
  8131 ;; This function uses a non-reentrant model
  8132 ;;
  8133                           
  8134                           
  8135                           ;psect for function ___awmod
  8136  0EA6                     ___awmod:	
  8137                           
  8138                           ;incstack = 0
  8139                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  8140  0EA6  01F6               	clrf	___awmod@sign
  8141  0EA7  1FF3               	btfss	___awmod@dividend+1,7
  8142  0EA8  2EB0               	goto	l1955
  8143  0EA9  09F2               	comf	___awmod@dividend,f
  8144  0EAA  09F3               	comf	___awmod@dividend+1,f
  8145  0EAB  0AF2               	incf	___awmod@dividend,f
  8146  0EAC  1903               	skipnz
  8147  0EAD  0AF3               	incf	___awmod@dividend+1,f
  8148  0EAE  01F6               	clrf	___awmod@sign
  8149  0EAF  0AF6               	incf	___awmod@sign,f
  8150  0EB0                     l1955:	
  8151  0EB0  1FF1               	btfss	___awmod@divisor+1,7
  8152  0EB1  2EB7               	goto	l1959
  8153  0EB2  09F0               	comf	___awmod@divisor,f
  8154  0EB3  09F1               	comf	___awmod@divisor+1,f
  8155  0EB4  0AF0               	incf	___awmod@divisor,f
  8156  0EB5  1903               	skipnz
  8157  0EB6  0AF1               	incf	___awmod@divisor+1,f
  8158  0EB7                     l1959:	
  8159  0EB7  0870               	movf	___awmod@divisor,w
  8160  0EB8  0471               	iorwf	___awmod@divisor+1,w
  8161  0EB9  1903               	btfsc	3,2
  8162  0EBA  2EDE               	goto	l1977
  8163  0EBB  01F5               	clrf	___awmod@counter
  8164  0EBC  0AF5               	incf	___awmod@counter,f
  8165  0EBD                     l1967:	
  8166  0EBD  1BF1               	btfsc	___awmod@divisor+1,7
  8167  0EBE  2EC9               	goto	l1969
  8168  0EBF  3001               	movlw	1
  8169  0EC0                     u2225:	
  8170  0EC0  35F0               	lslf	___awmod@divisor,f
  8171  0EC1  0DF1               	rlf	___awmod@divisor+1,f
  8172  0EC2  0B89               	decfsz	9,f
  8173  0EC3  2EC0               	goto	u2225
  8174  0EC4  3001               	movlw	1
  8175  0EC5  00F4               	movwf	??___awmod
  8176  0EC6  0874               	movf	??___awmod,w
  8177  0EC7  07F5               	addwf	___awmod@counter,f
  8178  0EC8  2EBD               	goto	l1967
  8179  0EC9                     l1969:	
  8180  0EC9  0871               	movf	___awmod@divisor+1,w
  8181  0ECA  0273               	subwf	___awmod@dividend+1,w
  8182  0ECB  1D03               	skipz
  8183  0ECC  2ECF               	goto	u2245
  8184  0ECD  0870               	movf	___awmod@divisor,w
  8185  0ECE  0272               	subwf	___awmod@dividend,w
  8186  0ECF                     u2245:	
  8187  0ECF  1C03               	skipc
  8188  0ED0  2ED5               	goto	l1973
  8189  0ED1  0870               	movf	___awmod@divisor,w
  8190  0ED2  02F2               	subwf	___awmod@dividend,f
  8191  0ED3  0871               	movf	___awmod@divisor+1,w
  8192  0ED4  3BF3               	subwfb	___awmod@dividend+1,f
  8193  0ED5                     l1973:	
  8194  0ED5  3001               	movlw	1
  8195  0ED6                     u2255:	
  8196  0ED6  36F1               	lsrf	___awmod@divisor+1,f
  8197  0ED7  0CF0               	rrf	___awmod@divisor,f
  8198  0ED8  0B89               	decfsz	9,f
  8199  0ED9  2ED6               	goto	u2255
  8200  0EDA  3001               	movlw	1
  8201  0EDB  02F5               	subwf	___awmod@counter,f
  8202  0EDC  1D03               	btfss	3,2
  8203  0EDD  2EC9               	goto	l1969
  8204  0EDE                     l1977:	
  8205  0EDE  0876               	movf	___awmod@sign,w
  8206  0EDF  1903               	btfsc	3,2
  8207  0EE0  2EE6               	goto	l1981
  8208  0EE1  09F2               	comf	___awmod@dividend,f
  8209  0EE2  09F3               	comf	___awmod@dividend+1,f
  8210  0EE3  0AF2               	incf	___awmod@dividend,f
  8211  0EE4  1903               	skipnz
  8212  0EE5  0AF3               	incf	___awmod@dividend+1,f
  8213  0EE6                     l1981:	
  8214  0EE6  0873               	movf	___awmod@dividend+1,w
  8215  0EE7  00F1               	movwf	?___awmod+1
  8216  0EE8  0872               	movf	___awmod@dividend,w
  8217  0EE9  00F0               	movwf	?___awmod
  8218  0EEA  0008               	return
  8219  0EEB                     __end_of___awmod:	
  8220                           
  8221                           	psect	text25
  8222  0EEB                     __ptext25:	
  8223 ;; *************** function ___awdiv *****************
  8224 ;; Defined at:
  8225 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c"
  8226 ;; Parameters:    Size  Location     Type
  8227 ;;  divisor         2    0[COMMON] int 
  8228 ;;  dividend        2    2[COMMON] int 
  8229 ;; Auto vars:     Size  Location     Type
  8230 ;;  quotient        2    7[COMMON] int 
  8231 ;;  sign            1    6[COMMON] unsigned char 
  8232 ;;  counter         1    5[COMMON] unsigned char 
  8233 ;; Return value:  Size  Location     Type
  8234 ;;                  2    0[COMMON] int 
  8235 ;; Registers used:
  8236 ;;		wreg, status,2, status,0
  8237 ;; Tracked objects:
  8238 ;;		On entry : 0/0
  8239 ;;		On exit  : 0/0
  8240 ;;		Unchanged: 0/0
  8241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8242 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8243 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8244 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8245 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8246 ;;Total ram usage:        9 bytes
  8247 ;; Hardware stack levels used:    1
  8248 ;; This function calls:
  8249 ;;		Nothing
  8250 ;; This function is called by:
  8251 ;;		_LCD_Write_Int
  8252 ;; This function uses a non-reentrant model
  8253 ;;
  8254                           
  8255                           
  8256                           ;psect for function ___awdiv
  8257  0EEB                     ___awdiv:	
  8258                           
  8259                           ;incstack = 0
  8260                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  8261  0EEB  01F6               	clrf	___awdiv@sign
  8262  0EEC  1FF1               	btfss	___awdiv@divisor+1,7
  8263  0EED  2EF5               	goto	l1911
  8264  0EEE  09F0               	comf	___awdiv@divisor,f
  8265  0EEF  09F1               	comf	___awdiv@divisor+1,f
  8266  0EF0  0AF0               	incf	___awdiv@divisor,f
  8267  0EF1  1903               	skipnz
  8268  0EF2  0AF1               	incf	___awdiv@divisor+1,f
  8269  0EF3  01F6               	clrf	___awdiv@sign
  8270  0EF4  0AF6               	incf	___awdiv@sign,f
  8271  0EF5                     l1911:	
  8272  0EF5  1FF3               	btfss	___awdiv@dividend+1,7
  8273  0EF6  2F00               	goto	l1917
  8274  0EF7  09F2               	comf	___awdiv@dividend,f
  8275  0EF8  09F3               	comf	___awdiv@dividend+1,f
  8276  0EF9  0AF2               	incf	___awdiv@dividend,f
  8277  0EFA  1903               	skipnz
  8278  0EFB  0AF3               	incf	___awdiv@dividend+1,f
  8279  0EFC  3001               	movlw	1
  8280  0EFD  00F4               	movwf	??___awdiv
  8281  0EFE  0874               	movf	??___awdiv,w
  8282  0EFF  06F6               	xorwf	___awdiv@sign,f
  8283  0F00                     l1917:	
  8284  0F00  01F7               	clrf	___awdiv@quotient
  8285  0F01  01F8               	clrf	___awdiv@quotient+1
  8286  0F02  0870               	movf	___awdiv@divisor,w
  8287  0F03  0471               	iorwf	___awdiv@divisor+1,w
  8288  0F04  1903               	btfsc	3,2
  8289  0F05  2F2F               	goto	l1939
  8290  0F06  01F5               	clrf	___awdiv@counter
  8291  0F07  0AF5               	incf	___awdiv@counter,f
  8292  0F08                     l1927:	
  8293  0F08  1BF1               	btfsc	___awdiv@divisor+1,7
  8294  0F09  2F14               	goto	l1929
  8295  0F0A  3001               	movlw	1
  8296  0F0B                     u2125:	
  8297  0F0B  35F0               	lslf	___awdiv@divisor,f
  8298  0F0C  0DF1               	rlf	___awdiv@divisor+1,f
  8299  0F0D  0B89               	decfsz	9,f
  8300  0F0E  2F0B               	goto	u2125
  8301  0F0F  3001               	movlw	1
  8302  0F10  00F4               	movwf	??___awdiv
  8303  0F11  0874               	movf	??___awdiv,w
  8304  0F12  07F5               	addwf	___awdiv@counter,f
  8305  0F13  2F08               	goto	l1927
  8306  0F14                     l1929:	
  8307  0F14  3001               	movlw	1
  8308  0F15                     u2145:	
  8309  0F15  35F7               	lslf	___awdiv@quotient,f
  8310  0F16  0DF8               	rlf	___awdiv@quotient+1,f
  8311  0F17  0B89               	decfsz	9,f
  8312  0F18  2F15               	goto	u2145
  8313  0F19  0871               	movf	___awdiv@divisor+1,w
  8314  0F1A  0273               	subwf	___awdiv@dividend+1,w
  8315  0F1B  1D03               	skipz
  8316  0F1C  2F1F               	goto	u2155
  8317  0F1D  0870               	movf	___awdiv@divisor,w
  8318  0F1E  0272               	subwf	___awdiv@dividend,w
  8319  0F1F                     u2155:	
  8320  0F1F  1C03               	skipc
  8321  0F20  2F26               	goto	l1935
  8322  0F21  0870               	movf	___awdiv@divisor,w
  8323  0F22  02F2               	subwf	___awdiv@dividend,f
  8324  0F23  0871               	movf	___awdiv@divisor+1,w
  8325  0F24  3BF3               	subwfb	___awdiv@dividend+1,f
  8326  0F25  1477               	bsf	___awdiv@quotient,0
  8327  0F26                     l1935:	
  8328  0F26  3001               	movlw	1
  8329  0F27                     u2165:	
  8330  0F27  36F1               	lsrf	___awdiv@divisor+1,f
  8331  0F28  0CF0               	rrf	___awdiv@divisor,f
  8332  0F29  0B89               	decfsz	9,f
  8333  0F2A  2F27               	goto	u2165
  8334  0F2B  3001               	movlw	1
  8335  0F2C  02F5               	subwf	___awdiv@counter,f
  8336  0F2D  1D03               	btfss	3,2
  8337  0F2E  2F14               	goto	l1929
  8338  0F2F                     l1939:	
  8339  0F2F  0876               	movf	___awdiv@sign,w
  8340  0F30  1903               	btfsc	3,2
  8341  0F31  2F37               	goto	l1943
  8342  0F32  09F7               	comf	___awdiv@quotient,f
  8343  0F33  09F8               	comf	___awdiv@quotient+1,f
  8344  0F34  0AF7               	incf	___awdiv@quotient,f
  8345  0F35  1903               	skipnz
  8346  0F36  0AF8               	incf	___awdiv@quotient+1,f
  8347  0F37                     l1943:	
  8348  0F37  0878               	movf	___awdiv@quotient+1,w
  8349  0F38  00F1               	movwf	?___awdiv+1
  8350  0F39  0877               	movf	___awdiv@quotient,w
  8351  0F3A  00F0               	movwf	?___awdiv
  8352  0F3B  0008               	return
  8353  0F3C                     __end_of___awdiv:	
  8354                           
  8355                           	psect	text26
  8356  0094                     __ptext26:	
  8357 ;; *************** function _LCD_Set_Cursor *****************
  8358 ;; Defined at:
  8359 ;;		line 82 in file "../PWMTest.X/lcd.c"
  8360 ;; Parameters:    Size  Location     Type
  8361 ;;  x               1    wreg     unsigned char 
  8362 ;;  y               1    3[COMMON] unsigned char 
  8363 ;; Auto vars:     Size  Location     Type
  8364 ;;  x               1    6[COMMON] unsigned char 
  8365 ;;  temp            1    9[COMMON] unsigned char 
  8366 ;;  w               1    8[COMMON] unsigned char 
  8367 ;;  z               1    7[COMMON] unsigned char 
  8368 ;; Return value:  Size  Location     Type
  8369 ;;                  1    wreg      void 
  8370 ;; Registers used:
  8371 ;;		wreg, status,2, status,0, pclath, cstack
  8372 ;; Tracked objects:
  8373 ;;		On entry : 0/0
  8374 ;;		On exit  : 0/0
  8375 ;;		Unchanged: 0/0
  8376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8377 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8378 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8379 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8380 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8381 ;;Total ram usage:        7 bytes
  8382 ;; Hardware stack levels used:    1
  8383 ;; Hardware stack levels required when called:    2
  8384 ;; This function calls:
  8385 ;;		_LCD_Cmd
  8386 ;; This function is called by:
  8387 ;;		_main
  8388 ;; This function uses a non-reentrant model
  8389 ;;
  8390                           
  8391                           
  8392                           ;psect for function _LCD_Set_Cursor
  8393  0094                     _LCD_Set_Cursor:	
  8394                           
  8395                           ;incstack = 0
  8396                           ; Regs used in _LCD_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  8397                           ;LCD_Set_Cursor@x stored from wreg
  8398  0094  00F6               	movwf	LCD_Set_Cursor@x
  8399                           
  8400                           ;lcd.c: 109: char temp,z,w;
  8401                           ;lcd.c: 111: if(x == 0)
  8402  0095  0876               	movf	LCD_Set_Cursor@x,w
  8403  0096  1D03               	btfss	3,2
  8404  0097  28B4               	goto	l2153
  8405                           
  8406                           ;lcd.c: 112: {
  8407                           ;lcd.c: 113: temp = 0x80 + y;
  8408  0098  0873               	movf	LCD_Set_Cursor@y,w
  8409  0099  3E80               	addlw	128
  8410  009A  00F4               	movwf	??_LCD_Set_Cursor
  8411  009B  0874               	movf	??_LCD_Set_Cursor,w
  8412  009C  00F9               	movwf	LCD_Set_Cursor@temp
  8413                           
  8414                           ;lcd.c: 115: z = temp>>4;
  8415  009D  0879               	movf	LCD_Set_Cursor@temp,w
  8416  009E  00F4               	movwf	??_LCD_Set_Cursor
  8417  009F  3004               	movlw	4
  8418  00A0                     u2405:	
  8419  00A0  36F4               	lsrf	??_LCD_Set_Cursor,f
  8420  00A1  0B89               	decfsz	9,f
  8421  00A2  28A0               	goto	u2405
  8422  00A3  0874               	movf	??_LCD_Set_Cursor,w
  8423  00A4  00F5               	movwf	??_LCD_Set_Cursor+1
  8424  00A5  0875               	movf	??_LCD_Set_Cursor+1,w
  8425  00A6  00F7               	movwf	LCD_Set_Cursor@z
  8426                           
  8427                           ;lcd.c: 116: w = temp & 0x0F;
  8428  00A7  0879               	movf	LCD_Set_Cursor@temp,w
  8429  00A8  390F               	andlw	15
  8430  00A9  00F4               	movwf	??_LCD_Set_Cursor
  8431  00AA  0874               	movf	??_LCD_Set_Cursor,w
  8432  00AB  00F8               	movwf	LCD_Set_Cursor@w
  8433                           
  8434                           ;lcd.c: 117: LCD_Cmd(z);
  8435  00AC  0877               	movf	LCD_Set_Cursor@z,w
  8436  00AD  318C  24B3  3180   	fcall	_LCD_Cmd
  8437                           
  8438                           ;lcd.c: 118: LCD_Cmd(w);
  8439  00B0  0878               	movf	LCD_Set_Cursor@w,w
  8440  00B1  318C  24B3         	fcall	_LCD_Cmd
  8441                           
  8442                           ;lcd.c: 119: }
  8443  00B3  0008               	return
  8444  00B4                     l2153:	
  8445                           
  8446                           ;lcd.c: 121: else if(x == 1)
  8447  00B4  0376               	decf	LCD_Set_Cursor@x,w
  8448  00B5  1D03               	btfss	3,2
  8449  00B6  28D3               	goto	l2163
  8450                           
  8451                           ;lcd.c: 122: {
  8452                           ;lcd.c: 123: temp = 0xC0 + y;
  8453  00B7  0873               	movf	LCD_Set_Cursor@y,w
  8454  00B8  3EC0               	addlw	192
  8455  00B9  00F4               	movwf	??_LCD_Set_Cursor
  8456  00BA  0874               	movf	??_LCD_Set_Cursor,w
  8457  00BB  00F9               	movwf	LCD_Set_Cursor@temp
  8458                           
  8459                           ;lcd.c: 125: z = temp>>4;
  8460  00BC  0879               	movf	LCD_Set_Cursor@temp,w
  8461  00BD  00F4               	movwf	??_LCD_Set_Cursor
  8462  00BE  3004               	movlw	4
  8463  00BF                     u2425:	
  8464  00BF  36F4               	lsrf	??_LCD_Set_Cursor,f
  8465  00C0  0B89               	decfsz	9,f
  8466  00C1  28BF               	goto	u2425
  8467  00C2  0874               	movf	??_LCD_Set_Cursor,w
  8468  00C3  00F5               	movwf	??_LCD_Set_Cursor+1
  8469  00C4  0875               	movf	??_LCD_Set_Cursor+1,w
  8470  00C5  00F7               	movwf	LCD_Set_Cursor@z
  8471                           
  8472                           ;lcd.c: 126: w = temp & 0x0F;
  8473  00C6  0879               	movf	LCD_Set_Cursor@temp,w
  8474  00C7  390F               	andlw	15
  8475  00C8  00F4               	movwf	??_LCD_Set_Cursor
  8476  00C9  0874               	movf	??_LCD_Set_Cursor,w
  8477  00CA  00F8               	movwf	LCD_Set_Cursor@w
  8478                           
  8479                           ;lcd.c: 127: LCD_Cmd(z);
  8480  00CB  0877               	movf	LCD_Set_Cursor@z,w
  8481  00CC  318C  24B3  3180   	fcall	_LCD_Cmd
  8482                           
  8483                           ;lcd.c: 128: LCD_Cmd(w);
  8484  00CF  0878               	movf	LCD_Set_Cursor@w,w
  8485  00D0  318C  24B3         	fcall	_LCD_Cmd
  8486                           
  8487                           ;lcd.c: 129: }
  8488  00D2  0008               	return
  8489  00D3                     l2163:	
  8490                           
  8491                           ;lcd.c: 132: else if(x == 2)
  8492  00D3  3002               	movlw	2
  8493  00D4  0676               	xorwf	LCD_Set_Cursor@x,w
  8494  00D5  1D03               	btfss	3,2
  8495  00D6  28F3               	goto	l2173
  8496                           
  8497                           ;lcd.c: 133: {
  8498                           ;lcd.c: 134: temp = 0x94 + y;
  8499  00D7  0873               	movf	LCD_Set_Cursor@y,w
  8500  00D8  3E94               	addlw	148
  8501  00D9  00F4               	movwf	??_LCD_Set_Cursor
  8502  00DA  0874               	movf	??_LCD_Set_Cursor,w
  8503  00DB  00F9               	movwf	LCD_Set_Cursor@temp
  8504                           
  8505                           ;lcd.c: 136: z = temp>>4;
  8506  00DC  0879               	movf	LCD_Set_Cursor@temp,w
  8507  00DD  00F4               	movwf	??_LCD_Set_Cursor
  8508  00DE  3004               	movlw	4
  8509  00DF                     u2445:	
  8510  00DF  36F4               	lsrf	??_LCD_Set_Cursor,f
  8511  00E0  0B89               	decfsz	9,f
  8512  00E1  28DF               	goto	u2445
  8513  00E2  0874               	movf	??_LCD_Set_Cursor,w
  8514  00E3  00F5               	movwf	??_LCD_Set_Cursor+1
  8515  00E4  0875               	movf	??_LCD_Set_Cursor+1,w
  8516  00E5  00F7               	movwf	LCD_Set_Cursor@z
  8517                           
  8518                           ;lcd.c: 137: w = temp & 0x0F;
  8519  00E6  0879               	movf	LCD_Set_Cursor@temp,w
  8520  00E7  390F               	andlw	15
  8521  00E8  00F4               	movwf	??_LCD_Set_Cursor
  8522  00E9  0874               	movf	??_LCD_Set_Cursor,w
  8523  00EA  00F8               	movwf	LCD_Set_Cursor@w
  8524                           
  8525                           ;lcd.c: 138: LCD_Cmd(z);
  8526  00EB  0877               	movf	LCD_Set_Cursor@z,w
  8527  00EC  318C  24B3  3180   	fcall	_LCD_Cmd
  8528                           
  8529                           ;lcd.c: 139: LCD_Cmd(w);
  8530  00EF  0878               	movf	LCD_Set_Cursor@w,w
  8531  00F0  318C  24B3         	fcall	_LCD_Cmd
  8532                           
  8533                           ;lcd.c: 140: }
  8534  00F2  0008               	return
  8535  00F3                     l2173:	
  8536                           
  8537                           ;lcd.c: 142: else if(x == 3)
  8538  00F3  3003               	movlw	3
  8539  00F4  0676               	xorwf	LCD_Set_Cursor@x,w
  8540  00F5  1D03               	btfss	3,2
  8541  00F6  0008               	return
  8542                           
  8543                           ;lcd.c: 143: {
  8544                           ;lcd.c: 144: temp = 0xD4 + y;
  8545  00F7  0873               	movf	LCD_Set_Cursor@y,w
  8546  00F8  3ED4               	addlw	212
  8547  00F9  00F4               	movwf	??_LCD_Set_Cursor
  8548  00FA  0874               	movf	??_LCD_Set_Cursor,w
  8549  00FB  00F9               	movwf	LCD_Set_Cursor@temp
  8550                           
  8551                           ;lcd.c: 146: z = temp>>4;
  8552  00FC  0879               	movf	LCD_Set_Cursor@temp,w
  8553  00FD  00F4               	movwf	??_LCD_Set_Cursor
  8554  00FE  3004               	movlw	4
  8555  00FF                     u2465:	
  8556  00FF  36F4               	lsrf	??_LCD_Set_Cursor,f
  8557  0100  0B89               	decfsz	9,f
  8558  0101  28FF               	goto	u2465
  8559  0102  0874               	movf	??_LCD_Set_Cursor,w
  8560  0103  00F5               	movwf	??_LCD_Set_Cursor+1
  8561  0104  0875               	movf	??_LCD_Set_Cursor+1,w
  8562  0105  00F7               	movwf	LCD_Set_Cursor@z
  8563                           
  8564                           ;lcd.c: 147: w = temp & 0x0F;
  8565  0106  0879               	movf	LCD_Set_Cursor@temp,w
  8566  0107  390F               	andlw	15
  8567  0108  00F4               	movwf	??_LCD_Set_Cursor
  8568  0109  0874               	movf	??_LCD_Set_Cursor,w
  8569  010A  00F8               	movwf	LCD_Set_Cursor@w
  8570                           
  8571                           ;lcd.c: 148: LCD_Cmd(z);
  8572  010B  0877               	movf	LCD_Set_Cursor@z,w
  8573  010C  318C  24B3  3180   	fcall	_LCD_Cmd
  8574                           
  8575                           ;lcd.c: 149: LCD_Cmd(w);
  8576  010F  0878               	movf	LCD_Set_Cursor@w,w
  8577  0110  318C  24B3         	fcall	_LCD_Cmd
  8578  0112  0008               	return
  8579  0113                     __end_of_LCD_Set_Cursor:	
  8580                           
  8581                           	psect	text27
  8582  0019                     __ptext27:	
  8583 ;; *************** function _LCD_Init *****************
  8584 ;; Defined at:
  8585 ;;		line 154 in file "../PWMTest.X/lcd.c"
  8586 ;; Parameters:    Size  Location     Type
  8587 ;;  style           1    wreg     unsigned char 
  8588 ;; Auto vars:     Size  Location     Type
  8589 ;;  style           1    5[COMMON] unsigned char 
  8590 ;; Return value:  Size  Location     Type
  8591 ;;                  1    wreg      void 
  8592 ;; Registers used:
  8593 ;;		wreg, status,2, status,0, pclath, cstack
  8594 ;; Tracked objects:
  8595 ;;		On entry : 0/0
  8596 ;;		On exit  : 0/0
  8597 ;;		Unchanged: 0/0
  8598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8600 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8601 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8602 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8603 ;;Total ram usage:        3 bytes
  8604 ;; Hardware stack levels used:    1
  8605 ;; Hardware stack levels required when called:    2
  8606 ;; This function calls:
  8607 ;;		_LCD_Cmd
  8608 ;;		_LCD_Port
  8609 ;; This function is called by:
  8610 ;;		_main
  8611 ;; This function uses a non-reentrant model
  8612 ;;
  8613                           
  8614                           
  8615                           ;psect for function _LCD_Init
  8616  0019                     _LCD_Init:	
  8617                           
  8618                           ;incstack = 0
  8619                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  8620                           ;LCD_Init@style stored from wreg
  8621  0019  00F5               	movwf	LCD_Init@style
  8622                           
  8623                           ;lcd.c: 156: LCD_Port(0x00);
  8624  001A  3000               	movlw	0
  8625  001B  318C  24DB  3180   	fcall	_LCD_Port
  8626                           
  8627                           ;lcd.c: 158: _delay((unsigned long)((100)*(1000000/4000.0)));
  8628  001E  3021               	movlw	33
  8629  001F  00F4               	movwf	??_LCD_Init+1
  8630  0020  3076               	movlw	118
  8631  0021  00F3               	movwf	??_LCD_Init
  8632  0022                     u3027:	
  8633  0022  0BF3               	decfsz	??_LCD_Init,f
  8634  0023  2822               	goto	u3027
  8635  0024  0BF4               	decfsz	??_LCD_Init+1,f
  8636  0025  2822               	goto	u3027
  8637  0026  0000               	nop
  8638                           
  8639                           ;lcd.c: 160: LCD_Cmd(0x03);
  8640  0027  3003               	movlw	3
  8641  0028  318C  24B3  3180   	fcall	_LCD_Cmd
  8642                           
  8643                           ;lcd.c: 162: _delay((unsigned long)((10)*(1000000/4000.0)));
  8644  002B  3004               	movlw	4
  8645  002C  00F4               	movwf	??_LCD_Init+1
  8646  002D  303D               	movlw	61
  8647  002E  00F3               	movwf	??_LCD_Init
  8648  002F                     u3037:	
  8649  002F  0BF3               	decfsz	??_LCD_Init,f
  8650  0030  282F               	goto	u3037
  8651  0031  0BF4               	decfsz	??_LCD_Init+1,f
  8652  0032  282F               	goto	u3037
  8653  0033  3200               	nop2
  8654                           
  8655                           ;lcd.c: 164: LCD_Cmd(0x03);
  8656  0034  3003               	movlw	3
  8657  0035  318C  24B3  3180   	fcall	_LCD_Cmd
  8658                           
  8659                           ;lcd.c: 166: _delay((unsigned long)((120)*(1000000/4000000.0)));
  8660  0038  3009               	movlw	9
  8661  0039  00F3               	movwf	??_LCD_Init
  8662  003A                     u3047:	
  8663  003A  0BF3               	decfsz	??_LCD_Init,f
  8664  003B  283A               	goto	u3047
  8665  003C  3200               	nop2	;nop
  8666                           
  8667                           ;lcd.c: 168: LCD_Cmd(0x03);
  8668  003D  3003               	movlw	3
  8669  003E  318C  24B3  3180   	fcall	_LCD_Cmd
  8670                           
  8671                           ;lcd.c: 170: _delay((unsigned long)((120)*(1000000/4000000.0)));
  8672  0041  3009               	movlw	9
  8673  0042  00F3               	movwf	??_LCD_Init
  8674  0043                     u3057:	
  8675  0043  0BF3               	decfsz	??_LCD_Init,f
  8676  0044  2843               	goto	u3057
  8677  0045  3200               	nop2	;nop
  8678                           
  8679                           ;lcd.c: 172: LCD_Cmd(0x02);
  8680  0046  3002               	movlw	2
  8681  0047  318C  24B3  3180   	fcall	_LCD_Cmd
  8682                           
  8683                           ;lcd.c: 174: _delay((unsigned long)((120)*(1000000/4000000.0)));
  8684  004A  3009               	movlw	9
  8685  004B  00F3               	movwf	??_LCD_Init
  8686  004C                     u3067:	
  8687  004C  0BF3               	decfsz	??_LCD_Init,f
  8688  004D  284C               	goto	u3067
  8689  004E  3200               	nop2	;nop
  8690                           
  8691                           ;lcd.c: 176: LCD_Cmd(0x2);
  8692  004F  3002               	movlw	2
  8693  0050  318C  24B3  3180   	fcall	_LCD_Cmd
  8694                           
  8695                           ;lcd.c: 178: LCD_Cmd(0x8);
  8696  0053  3008               	movlw	8
  8697  0054  318C  24B3  3180   	fcall	_LCD_Cmd
  8698                           
  8699                           ;lcd.c: 180: _delay((unsigned long)((120)*(1000000/4000000.0)));
  8700  0057  3009               	movlw	9
  8701  0058  00F3               	movwf	??_LCD_Init
  8702  0059                     u3077:	
  8703  0059  0BF3               	decfsz	??_LCD_Init,f
  8704  005A  2859               	goto	u3077
  8705  005B  3200               	nop2	;nop
  8706                           
  8707                           ;lcd.c: 182: LCD_Cmd(0x0);
  8708  005C  3000               	movlw	0
  8709  005D  318C  24B3  3180   	fcall	_LCD_Cmd
  8710                           
  8711                           ;lcd.c: 184: LCD_Cmd(0x8);
  8712  0060  3008               	movlw	8
  8713  0061  318C  24B3  3180   	fcall	_LCD_Cmd
  8714                           
  8715                           ;lcd.c: 186: _delay((unsigned long)((120)*(1000000/4000000.0)));
  8716  0064  3009               	movlw	9
  8717  0065  00F3               	movwf	??_LCD_Init
  8718  0066                     u3087:	
  8719  0066  0BF3               	decfsz	??_LCD_Init,f
  8720  0067  2866               	goto	u3087
  8721  0068  3200               	nop2	;nop
  8722                           
  8723                           ;lcd.c: 188: LCD_Cmd(0x0);
  8724  0069  3000               	movlw	0
  8725  006A  318C  24B3  3180   	fcall	_LCD_Cmd
  8726                           
  8727                           ;lcd.c: 190: LCD_Cmd(0x1);
  8728  006D  3001               	movlw	1
  8729  006E  318C  24B3  3180   	fcall	_LCD_Cmd
  8730                           
  8731                           ;lcd.c: 192: _delay((unsigned long)((5)*(1000000/4000.0)));
  8732  0071  30F9               	movlw	249
  8733  0072  00F3               	movwf	??_LCD_Init
  8734  0073                     u3097:	
  8735  0073  3200               	nop2
  8736  0074  0BF3               	decfsz	??_LCD_Init,f
  8737  0075  2873               	goto	u3097
  8738  0076  3200               	nop2	;nop
  8739  0077  3200               	nop2	;nop
  8740                           
  8741                           ;lcd.c: 194: LCD_Cmd(0x0);
  8742  0078  3000               	movlw	0
  8743  0079  318C  24B3  3180   	fcall	_LCD_Cmd
  8744                           
  8745                           ;lcd.c: 196: LCD_Cmd(0x6);
  8746  007C  3006               	movlw	6
  8747  007D  318C  24B3  3180   	fcall	_LCD_Cmd
  8748                           
  8749                           ;lcd.c: 198: _delay((unsigned long)((120)*(1000000/4000000.0)));
  8750  0080  3009               	movlw	9
  8751  0081  00F3               	movwf	??_LCD_Init
  8752  0082                     u3107:	
  8753  0082  0BF3               	decfsz	??_LCD_Init,f
  8754  0083  2882               	goto	u3107
  8755  0084  3200               	nop2	;nop
  8756                           
  8757                           ;lcd.c: 200: LCD_Cmd(0x0);
  8758  0085  3000               	movlw	0
  8759  0086  318C  24B3  3180   	fcall	_LCD_Cmd
  8760                           
  8761                           ;lcd.c: 202: LCD_Cmd(0xc|style);
  8762  0089  0875               	movf	LCD_Init@style,w
  8763  008A  380C               	iorlw	12
  8764  008B  318C  24B3  3180   	fcall	_LCD_Cmd
  8765                           
  8766                           ;lcd.c: 204: _delay((unsigned long)((120)*(1000000/4000000.0)));
  8767  008E  3009               	movlw	9
  8768  008F  00F3               	movwf	??_LCD_Init
  8769  0090                     u3117:	
  8770  0090  0BF3               	decfsz	??_LCD_Init,f
  8771  0091  2890               	goto	u3117
  8772  0092  3200               	nop2	;nop
  8773  0093  0008               	return
  8774  0094                     __end_of_LCD_Init:	
  8775                           
  8776                           	psect	text28
  8777  0C4F                     __ptext28:	
  8778 ;; *************** function _LCD_Clear *****************
  8779 ;; Defined at:
  8780 ;;		line 75 in file "../PWMTest.X/lcd.c"
  8781 ;; Parameters:    Size  Location     Type
  8782 ;;		None
  8783 ;; Auto vars:     Size  Location     Type
  8784 ;;		None
  8785 ;; Return value:  Size  Location     Type
  8786 ;;                  1    wreg      void 
  8787 ;; Registers used:
  8788 ;;		wreg, status,2, status,0, pclath, cstack
  8789 ;; Tracked objects:
  8790 ;;		On entry : 0/0
  8791 ;;		On exit  : 0/0
  8792 ;;		Unchanged: 0/0
  8793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8797 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8798 ;;Total ram usage:        0 bytes
  8799 ;; Hardware stack levels used:    1
  8800 ;; Hardware stack levels required when called:    2
  8801 ;; This function calls:
  8802 ;;		_LCD_Cmd
  8803 ;; This function is called by:
  8804 ;;		_main
  8805 ;; This function uses a non-reentrant model
  8806 ;;
  8807                           
  8808                           
  8809                           ;psect for function _LCD_Clear
  8810  0C4F                     _LCD_Clear:	
  8811                           
  8812                           ;lcd.c: 77: LCD_Cmd(0);
  8813                           
  8814                           ;incstack = 0
  8815                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  8816  0C4F  3000               	movlw	0
  8817  0C50  318C  24B3  318C   	fcall	_LCD_Cmd
  8818                           
  8819                           ;lcd.c: 78: LCD_Cmd(1);
  8820  0C53  3001               	movlw	1
  8821  0C54  318C  24B3         	fcall	_LCD_Cmd
  8822  0C56  0008               	return
  8823  0C57                     __end_of_LCD_Clear:	
  8824                           
  8825                           	psect	text29
  8826  0D7C                     __ptext29:	
  8827 ;; *************** function _InitCustomChars *****************
  8828 ;; Defined at:
  8829 ;;		line 29 in file "../PWMTest.X/lcd.c"
  8830 ;; Parameters:    Size  Location     Type
  8831 ;;		None
  8832 ;; Auto vars:     Size  Location     Type
  8833 ;;  i               1    6[COMMON] unsigned char 
  8834 ;; Return value:  Size  Location     Type
  8835 ;;                  1    wreg      void 
  8836 ;; Registers used:
  8837 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8838 ;; Tracked objects:
  8839 ;;		On entry : 0/0
  8840 ;;		On exit  : 0/0
  8841 ;;		Unchanged: 0/0
  8842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8844 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8845 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8846 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8847 ;;Total ram usage:        2 bytes
  8848 ;; Hardware stack levels used:    1
  8849 ;; Hardware stack levels required when called:    2
  8850 ;; This function calls:
  8851 ;;		_LCD_Cmd
  8852 ;;		_LCD_Write_Char
  8853 ;; This function is called by:
  8854 ;;		_main
  8855 ;; This function uses a non-reentrant model
  8856 ;;
  8857                           
  8858                           
  8859                           ;psect for function _InitCustomChars
  8860  0D7C                     _InitCustomChars:	
  8861                           
  8862                           ;lcd.c: 31: uint8_t i;
  8863                           ;lcd.c: 32: LCD_Cmd(0x04);
  8864                           
  8865                           ;incstack = 0
  8866                           ; Regs used in _InitCustomChars: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8867  0D7C  3004               	movlw	4
  8868  0D7D  318C  24B3  318D   	fcall	_LCD_Cmd
  8869                           
  8870                           ;lcd.c: 33: LCD_Cmd(0x00);
  8871  0D80  3000               	movlw	0
  8872  0D81  318C  24B3  318D   	fcall	_LCD_Cmd
  8873                           
  8874                           ;lcd.c: 34: for (i = 0; i < sizeof(__cgram) ; i++)
  8875  0D84  01F6               	clrf	InitCustomChars@i
  8876  0D85  3018               	movlw	24
  8877  0D86  0276               	subwf	InitCustomChars@i,w
  8878  0D87  1803               	btfsc	3,0
  8879  0D88  2D99               	goto	l2107
  8880  0D89                     l2101:	
  8881                           
  8882                           ;lcd.c: 35: LCD_Write_Char(__cgram[i]);
  8883  0D89  0876               	movf	InitCustomChars@i,w
  8884  0D8A  3EA0               	addlw	(low (___cgram| 0))& (0+255)
  8885  0D8B  0086               	movwf	6
  8886  0D8C  0187               	clrf	7
  8887  0D8D  0801               	movf	1,w
  8888  0D8E  318D  25A1  318D   	fcall	_LCD_Write_Char
  8889  0D91  3001               	movlw	1
  8890  0D92  00F5               	movwf	??_InitCustomChars
  8891  0D93  0875               	movf	??_InitCustomChars,w
  8892  0D94  07F6               	addwf	InitCustomChars@i,f
  8893  0D95  3018               	movlw	24
  8894  0D96  0276               	subwf	InitCustomChars@i,w
  8895  0D97  1C03               	skipc
  8896  0D98  2D89               	goto	l2101
  8897  0D99                     l2107:	
  8898                           
  8899                           ;lcd.c: 36: LCD_Cmd(0);
  8900  0D99  3000               	movlw	0
  8901  0D9A  318C  24B3  318D   	fcall	_LCD_Cmd
  8902                           
  8903                           ;lcd.c: 37: LCD_Cmd(2);
  8904  0D9D  3002               	movlw	2
  8905  0D9E  318C  24B3         	fcall	_LCD_Cmd
  8906  0DA0  0008               	return
  8907  0DA1                     __end_of_InitCustomChars:	
  8908                           
  8909                           	psect	text30
  8910  0DA1                     __ptext30:	
  8911 ;; *************** function _LCD_Write_Char *****************
  8912 ;; Defined at:
  8913 ;;		line 223 in file "../PWMTest.X/lcd.c"
  8914 ;; Parameters:    Size  Location     Type
  8915 ;;  a               1    wreg     unsigned char 
  8916 ;; Auto vars:     Size  Location     Type
  8917 ;;  a               1    4[COMMON] unsigned char 
  8918 ;;  y               1    3[COMMON] unsigned char 
  8919 ;;  temp            1    2[COMMON] unsigned char 
  8920 ;; Return value:  Size  Location     Type
  8921 ;;                  1    wreg      void 
  8922 ;; Registers used:
  8923 ;;		wreg, status,2, status,0, pclath, cstack
  8924 ;; Tracked objects:
  8925 ;;		On entry : 0/0
  8926 ;;		On exit  : 0/0
  8927 ;;		Unchanged: 0/0
  8928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8930 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8931 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8932 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8933 ;;Total ram usage:        4 bytes
  8934 ;; Hardware stack levels used:    1
  8935 ;; Hardware stack levels required when called:    1
  8936 ;; This function calls:
  8937 ;;		_LCD_Port
  8938 ;; This function is called by:
  8939 ;;		_main
  8940 ;;		_InitCustomChars
  8941 ;;		_LCD_Write_Int
  8942 ;;		_LCD_Write_String
  8943 ;; This function uses a non-reentrant model
  8944 ;;
  8945                           
  8946                           
  8947                           ;psect for function _LCD_Write_Char
  8948  0DA1                     _LCD_Write_Char:	
  8949                           
  8950                           ;incstack = 0
  8951                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  8952                           ;LCD_Write_Char@a stored from wreg
  8953  0DA1  00F4               	movwf	LCD_Write_Char@a
  8954                           
  8955                           ;lcd.c: 225: char temp,y;
  8956                           ;lcd.c: 226: temp = a&0x0F;
  8957  0DA2  0874               	movf	LCD_Write_Char@a,w
  8958  0DA3  390F               	andlw	15
  8959  0DA4  00F1               	movwf	??_LCD_Write_Char
  8960  0DA5  0871               	movf	??_LCD_Write_Char,w
  8961  0DA6  00F2               	movwf	LCD_Write_Char@temp
  8962                           
  8963                           ;lcd.c: 227: y = a&0xF0;
  8964  0DA7  0874               	movf	LCD_Write_Char@a,w
  8965  0DA8  39F0               	andlw	240
  8966  0DA9  00F1               	movwf	??_LCD_Write_Char
  8967  0DAA  0871               	movf	??_LCD_Write_Char,w
  8968  0DAB  00F3               	movwf	LCD_Write_Char@y
  8969                           
  8970                           ;lcd.c: 228: RB0 = 1;
  8971  0DAC  0020               	movlb	0	; select bank0
  8972  0DAD  140D               	bsf	13,0	;volatile
  8973                           
  8974                           ;lcd.c: 229: LCD_Port(y>>4);
  8975  0DAE  0873               	movf	LCD_Write_Char@y,w
  8976  0DAF  00F1               	movwf	??_LCD_Write_Char
  8977  0DB0  3004               	movlw	4
  8978  0DB1                     u2065:	
  8979  0DB1  36F1               	lsrf	??_LCD_Write_Char,f
  8980  0DB2  0B89               	decfsz	9,f
  8981  0DB3  2DB1               	goto	u2065
  8982  0DB4  0871               	movf	??_LCD_Write_Char,w
  8983  0DB5  318C  24DB  318D   	fcall	_LCD_Port
  8984                           
  8985                           ;lcd.c: 230: RB1 = 1;
  8986  0DB8  0020               	movlb	0	; select bank0
  8987  0DB9  148D               	bsf	13,1	;volatile
  8988                           
  8989                           ;lcd.c: 231: RB1 = 0;
  8990  0DBA  108D               	bcf	13,1	;volatile
  8991                           
  8992                           ;lcd.c: 232: _delay((unsigned long)((40)*(1000000/4000000.0)));
  8993  0DBB  3003               	movlw	3
  8994  0DBC  00F1               	movwf	??_LCD_Write_Char
  8995  0DBD                     u3127:	
  8996  0DBD  0BF1               	decfsz	??_LCD_Write_Char,f
  8997  0DBE  2DBD               	goto	u3127
  8998                           
  8999                           ;lcd.c: 233: LCD_Port(temp);
  9000  0DBF  0872               	movf	LCD_Write_Char@temp,w
  9001  0DC0  318C  24DB  318D   	fcall	_LCD_Port
  9002                           
  9003                           ;lcd.c: 234: RB1 = 1;
  9004  0DC3  0020               	movlb	0	; select bank0
  9005  0DC4  148D               	bsf	13,1	;volatile
  9006                           
  9007                           ;lcd.c: 235: RB1 = 0;
  9008  0DC5  108D               	bcf	13,1	;volatile
  9009                           
  9010                           ;lcd.c: 236: _delay((unsigned long)((40)*(1000000/4000000.0)));
  9011  0DC6  3003               	movlw	3
  9012  0DC7  00F1               	movwf	??_LCD_Write_Char
  9013  0DC8                     u3137:	
  9014  0DC8  0BF1               	decfsz	??_LCD_Write_Char,f
  9015  0DC9  2DC8               	goto	u3137
  9016  0DCA  0008               	return
  9017  0DCB                     __end_of_LCD_Write_Char:	
  9018                           
  9019                           	psect	text31
  9020  0CB3                     __ptext31:	
  9021 ;; *************** function _LCD_Cmd *****************
  9022 ;; Defined at:
  9023 ;;		line 65 in file "../PWMTest.X/lcd.c"
  9024 ;; Parameters:    Size  Location     Type
  9025 ;;  a               1    wreg     unsigned char 
  9026 ;; Auto vars:     Size  Location     Type
  9027 ;;  a               1    2[COMMON] unsigned char 
  9028 ;; Return value:  Size  Location     Type
  9029 ;;                  1    wreg      void 
  9030 ;; Registers used:
  9031 ;;		wreg, status,2, status,0, pclath, cstack
  9032 ;; Tracked objects:
  9033 ;;		On entry : 0/0
  9034 ;;		On exit  : 0/0
  9035 ;;		Unchanged: 0/0
  9036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9038 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9039 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9040 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9041 ;;Total ram usage:        2 bytes
  9042 ;; Hardware stack levels used:    1
  9043 ;; Hardware stack levels required when called:    1
  9044 ;; This function calls:
  9045 ;;		_LCD_Port
  9046 ;; This function is called by:
  9047 ;;		_InitCustomChars
  9048 ;;		_LCD_Clear
  9049 ;;		_LCD_Set_Cursor
  9050 ;;		_LCD_Init
  9051 ;; This function uses a non-reentrant model
  9052 ;;
  9053                           
  9054                           
  9055                           ;psect for function _LCD_Cmd
  9056  0CB3                     _LCD_Cmd:	
  9057                           
  9058                           ;incstack = 0
  9059                           ; Regs used in _LCD_Cmd: [wreg+status,2+status,0+pclath+cstack]
  9060                           ;LCD_Cmd@a stored from wreg
  9061  0CB3  00F2               	movwf	LCD_Cmd@a
  9062                           
  9063                           ;lcd.c: 67: RB0 = 0;
  9064  0CB4  0020               	movlb	0	; select bank0
  9065  0CB5  100D               	bcf	13,0	;volatile
  9066                           
  9067                           ;lcd.c: 68: LCD_Port(a);
  9068  0CB6  0872               	movf	LCD_Cmd@a,w
  9069  0CB7  318C  24DB  318C   	fcall	_LCD_Port
  9070                           
  9071                           ;lcd.c: 69: RB1 = 1;
  9072  0CBA  0020               	movlb	0	; select bank0
  9073  0CBB  148D               	bsf	13,1	;volatile
  9074                           
  9075                           ;lcd.c: 70: RB1 = 0;
  9076  0CBC  108D               	bcf	13,1	;volatile
  9077                           
  9078                           ;lcd.c: 71: _delay((unsigned long)((4)*(1000000/4000.0)));
  9079  0CBD  30F9               	movlw	249
  9080  0CBE  00F1               	movwf	??_LCD_Cmd
  9081  0CBF                     u3147:	
  9082  0CBF  0000               	nop
  9083  0CC0  0BF1               	decfsz	??_LCD_Cmd,f
  9084  0CC1  2CBF               	goto	u3147
  9085  0CC2  3200               	nop2	;nop
  9086  0CC3  0000               	nop
  9087  0CC4  0008               	return
  9088  0CC5                     __end_of_LCD_Cmd:	
  9089                           
  9090                           	psect	text32
  9091  0CDB                     __ptext32:	
  9092 ;; *************** function _LCD_Port *****************
  9093 ;; Defined at:
  9094 ;;		line 41 in file "../PWMTest.X/lcd.c"
  9095 ;; Parameters:    Size  Location     Type
  9096 ;;  a               1    wreg     unsigned char 
  9097 ;; Auto vars:     Size  Location     Type
  9098 ;;  a               1    0[COMMON] unsigned char 
  9099 ;; Return value:  Size  Location     Type
  9100 ;;                  1    wreg      void 
  9101 ;; Registers used:
  9102 ;;		wreg
  9103 ;; Tracked objects:
  9104 ;;		On entry : 0/0
  9105 ;;		On exit  : 0/0
  9106 ;;		Unchanged: 0/0
  9107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9109 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9111 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9112 ;;Total ram usage:        1 bytes
  9113 ;; Hardware stack levels used:    1
  9114 ;; This function calls:
  9115 ;;		Nothing
  9116 ;; This function is called by:
  9117 ;;		_LCD_Cmd
  9118 ;;		_LCD_Init
  9119 ;;		_LCD_Write_Char
  9120 ;; This function uses a non-reentrant model
  9121 ;;
  9122                           
  9123                           
  9124                           ;psect for function _LCD_Port
  9125  0CDB                     _LCD_Port:	
  9126                           
  9127                           ;incstack = 0
  9128                           ; Regs used in _LCD_Port: [wreg]
  9129                           ;LCD_Port@a stored from wreg
  9130  0CDB  00F0               	movwf	LCD_Port@a
  9131                           
  9132                           ;lcd.c: 43: if(a & 1)
  9133  0CDC  1C70               	btfss	LCD_Port@a,0
  9134  0CDD  2CE1               	goto	l222
  9135                           
  9136                           ;lcd.c: 44: RB2 = 1;
  9137  0CDE  0020               	movlb	0	; select bank0
  9138  0CDF  150D               	bsf	13,2	;volatile
  9139  0CE0  2CE3               	goto	l1677
  9140  0CE1                     l222:	
  9141                           
  9142                           ;lcd.c: 45: else
  9143                           ;lcd.c: 46: RB2 = 0;
  9144  0CE1  0020               	movlb	0	; select bank0
  9145  0CE2  110D               	bcf	13,2	;volatile
  9146  0CE3                     l1677:	
  9147                           
  9148                           ;lcd.c: 48: if(a & 2)
  9149  0CE3  1CF0               	btfss	LCD_Port@a,1
  9150  0CE4  2CE7               	goto	l224
  9151                           
  9152                           ;lcd.c: 49: RB3 = 1;
  9153  0CE5  158D               	bsf	13,3	;volatile
  9154  0CE6  2CE8               	goto	l1681
  9155  0CE7                     l224:	
  9156                           
  9157                           ;lcd.c: 50: else
  9158                           ;lcd.c: 51: RB3 = 0;
  9159  0CE7  118D               	bcf	13,3	;volatile
  9160  0CE8                     l1681:	
  9161                           
  9162                           ;lcd.c: 53: if(a & 4)
  9163  0CE8  1D70               	btfss	LCD_Port@a,2
  9164  0CE9  2CEC               	goto	l226
  9165                           
  9166                           ;lcd.c: 54: RB4 = 1;
  9167  0CEA  160D               	bsf	13,4	;volatile
  9168  0CEB  2CED               	goto	l1685
  9169  0CEC                     l226:	
  9170                           
  9171                           ;lcd.c: 55: else
  9172                           ;lcd.c: 56: RB4 = 0;
  9173  0CEC  120D               	bcf	13,4	;volatile
  9174  0CED                     l1685:	
  9175                           
  9176                           ;lcd.c: 58: if(a & 8)
  9177  0CED  1DF0               	btfss	LCD_Port@a,3
  9178  0CEE  2CF1               	goto	l228
  9179                           
  9180                           ;lcd.c: 59: RB5 = 1;
  9181  0CEF  168D               	bsf	13,5	;volatile
  9182  0CF0  0008               	return
  9183  0CF1                     l228:	
  9184                           
  9185                           ;lcd.c: 60: else
  9186                           ;lcd.c: 61: RB5 = 0;
  9187  0CF1  128D               	bcf	13,5	;volatile
  9188  0CF2  0008               	return
  9189  0CF3                     __end_of_LCD_Port:	
  9190                           
  9191                           	psect	text33
  9192  0C85                     __ptext33:	
  9193 ;; *************** function _ADCC_GetSingleConversion *****************
  9194 ;; Defined at:
  9195 ;;		line 78 in file "../PWMTest.X/adcc.c"
  9196 ;; Parameters:    Size  Location     Type
  9197 ;;  channel         1    wreg     enum E13559
  9198 ;; Auto vars:     Size  Location     Type
  9199 ;;  channel         1    3[COMMON] enum E13559
  9200 ;; Return value:  Size  Location     Type
  9201 ;;                  2    0[COMMON] unsigned int 
  9202 ;; Registers used:
  9203 ;;		wreg
  9204 ;; Tracked objects:
  9205 ;;		On entry : 0/0
  9206 ;;		On exit  : 0/0
  9207 ;;		Unchanged: 0/0
  9208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9209 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9210 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9212 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9213 ;;Total ram usage:        4 bytes
  9214 ;; Hardware stack levels used:    1
  9215 ;; This function calls:
  9216 ;;		Nothing
  9217 ;; This function is called by:
  9218 ;;		_main
  9219 ;; This function uses a non-reentrant model
  9220 ;;
  9221                           
  9222                           
  9223                           ;psect for function _ADCC_GetSingleConversion
  9224  0C85                     _ADCC_GetSingleConversion:	
  9225                           
  9226                           ;incstack = 0
  9227                           ; Regs used in _ADCC_GetSingleConversion: [wreg]
  9228                           ;ADCC_GetSingleConversion@channel stored from wreg
  9229  0C85  00F3               	movwf	ADCC_GetSingleConversion@channel
  9230                           
  9231                           ;adcc.c: 81: ADPCH = channel;
  9232  0C86  0873               	movf	ADCC_GetSingleConversion@channel,w
  9233  0C87  0021               	movlb	1	; select bank1
  9234  0C88  009E               	movwf	30	;volatile
  9235                           
  9236                           ;adcc.c: 84: ADCON0bits.ADON = 1;
  9237  0C89  1793               	bsf	19,7	;volatile
  9238                           
  9239                           ;adcc.c: 87: ADCON0bits.ADCONT = 0;
  9240  0C8A  1313               	bcf	19,6	;volatile
  9241                           
  9242                           ;adcc.c: 90: ADCON0bits.ADGO = 1;
  9243  0C8B  1413               	bsf	19,0	;volatile
  9244  0C8C                     l91:	
  9245                           ;adcc.c: 94: {
  9246                           
  9247                           ;adcc.c: 93: while (ADCON0bits.ADGO)
  9248                           
  9249  0C8C  1813               	btfsc	19,0	;volatile
  9250  0C8D  2C8C               	goto	l91
  9251                           
  9252                           ;adcc.c: 95: }
  9253                           ;adcc.c: 98: return ((ADRESH << 8) + ADRESL);
  9254  0C8E  080D               	movf	13,w	;volatile
  9255  0C8F  00F1               	movwf	?_ADCC_GetSingleConversion+1
  9256  0C90  080C               	movf	12,w	;volatile
  9257  0C91  00F0               	movwf	?_ADCC_GetSingleConversion
  9258  0C92  0008               	return
  9259  0C93                     __end_of_ADCC_GetSingleConversion:	
  9260  007E                     btemp	set	126	;btemp
  9261  007E                     wtemp	set	126
  9262  007E                     wtemp0	set	126
  9263  0080                     wtemp1	set	128
  9264  0082                     wtemp2	set	130
  9265  0084                     wtemp3	set	132
  9266  0086                     wtemp4	set	134
  9267  0088                     wtemp5	set	136
  9268  007F                     wtemp6	set	127
  9269  007E                     ttemp	set	126
  9270  007E                     ttemp0	set	126
  9271  0081                     ttemp1	set	129
  9272  0084                     ttemp2	set	132
  9273  0087                     ttemp3	set	135
  9274  007F                     ttemp4	set	127
  9275  007E                     ltemp	set	126
  9276  007E                     ltemp0	set	126
  9277  0082                     ltemp1	set	130
  9278  0086                     ltemp2	set	134
  9279  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    27
    Data        24
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     70      79
    BANK1            80      0      24
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           28      0       0
    BANK12            0      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 27
		 -> log@coeff(CODE[27]), 


Critical Paths under _main in COMMON

    _main->___ftdiv
    _main->___fttol
    _log->___awtoft
    ___ftmul->___awtoft
    ___awtoft->___ftpack
    ___lwtoft->___ftpack
    ___lwtoft->___lwdiv
    ___ftadd->___awtoft
    ___ftdiv->___ftpack
    _SYSTEM_Initialize->_PIN_MANAGER_Initialize
    _LCD_Write_Int->___fttol
    _LCD_Set_Cursor->_LCD_Cmd
    _LCD_Init->_LCD_Cmd
    _LCD_Clear->_LCD_Cmd
    _InitCustomChars->_LCD_Write_Char
    _LCD_Write_Char->_LCD_Port
    _LCD_Cmd->_LCD_Port

Critical Paths under _main in BANK0

    _main->_log
    _log->_eval_poly
    _eval_poly->___ftadd
    ___ftsub->___ftadd
    ___ftadd->___ftmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                25    25      0   30514
                                             45 BANK0     25    25      0
           _ADCC_GetSingleConversion
                    _InitCustomChars
                          _LCD_Clear
                           _LCD_Init
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                      _LCD_Write_Int
                 _PWM6_LoadDutyValue
                  _SYSTEM_Initialize
                            ___aldiv
                            ___ftadd
                            ___ftdiv
                            ___ftsub
                            ___fttol
                            ___lwdiv
                           ___lwtoft
                                _log
 ---------------------------------------------------------------------------------
 (1) _log                                                  6     3      3   14613
                                             39 BANK0      6     3      3
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (2) _frexp                                                6     2      4     330
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) _eval_poly                                           10     3      7    6227
                                             29 BANK0     10     3      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     304
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    2470
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     322
                                              0 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             6     3      3    1890
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             4     1      3    1821
                                              8 COMMON     4     1      3
                           ___ftpack
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              8     4      4     480
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             14    10      4     305
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (1) ___ftsub                                              6     0      6    3289
                                             29 BANK0      6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    3116
                                             16 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             16    10      6    2238
                                              8 COMMON     6     0      6
                                              0 BANK0     10    10      0
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1746
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) ___aldiv                                             15     7      8     406
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      23
                    _ADCC_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM6_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM6_LoadDutyValue                                   4     2      2      97
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCD_Write_Int                                       19    14      5    1911
                                              0 BANK0     19    14      5
           _ADCC_GetSingleConversion (ARG)
                     _LCD_Write_Char
                            ___awdiv
                            ___awmod
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     402
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     406
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _LCD_Set_Cursor                                       7     6      1     756
                                              3 COMMON     7     6      1
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             3     3      0     220
                                              3 COMMON     3     3      0
                            _LCD_Cmd
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            0     0      0     110
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (1) _InitCustomChars                                      2     2      0     356
                                              5 COMMON     2     2      0
                            _LCD_Cmd
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (2) _LCD_Cmd                                              2     2      0     110
                                              1 COMMON     2     2      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (3) _LCD_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADCC_GetSingleConversion                             4     1      3      22
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_GetSingleConversion
   _InitCustomChars
     _LCD_Cmd
       _LCD_Port
     _LCD_Write_Char
       _LCD_Port
   _LCD_Clear
     _LCD_Cmd
       _LCD_Port
   _LCD_Init
     _LCD_Cmd
       _LCD_Port
     _LCD_Port
   _LCD_Set_Cursor
     _LCD_Cmd
       _LCD_Port
   _LCD_Write_Char
     _LCD_Port
   _LCD_Write_Int
     _ADCC_GetSingleConversion (ARG)
     _LCD_Write_Char (ARG)
       _LCD_Port
     ___awdiv (ARG)
     ___awmod (ARG)
     ___fttol (ARG)
   _PWM6_LoadDutyValue
   _SYSTEM_Initialize
     _ADCC_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM6_Initialize
     _TMR2_Initialize
   ___aldiv
   ___ftadd
     ___awtoft (ARG)
       ___ftpack
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftpack (ARG)
     ___wmul (ARG)
     _frexp (ARG)
   ___ftdiv
     ___ftpack
   ___ftsub
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
       _frexp (ARG)
   ___fttol
   ___lwdiv
   ___lwtoft
     ___ftpack
     ___lwdiv (ARG)
   _log
     ___awtoft
       ___ftpack
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
       _frexp (ARG)
     ___ftge
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
     _eval_poly
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___wmul
     _frexp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     46      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      18       7       30.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      75      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              1C      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      75      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Tue Sep 05 22:04:02 2017

                      __CFG_CP$OFF 0000                                 l31 06BE  
                               l32 06CA                                 l33 06E6  
                               l91 0C8C                       ___awdiv@sign 0076  
              ___wmul@multiplicand 0072        __size_of_PWM6_LoadDutyValue 0016  
                     ___ftadd@exp1 003C                       ___ftadd@exp2 003B  
                      __CFG_LVP$ON 0000                       ___ftadd@sign 003A  
                              l222 0CE1                                l224 0CE7  
                              l226 0CEC                                l228 0CF1  
                              l416 0124                                l361 0D2B  
                              l530 0FE9                                l522 0FCE  
                              l613 0201                                l529 0FE1  
                              l553 058E                                _GIE 005F  
                              _RB0 0068                                _RB1 0069  
                              _RB2 006A                                _RB3 006B  
                              _RB4 006C                                _RB5 006D  
                     __CFG_CPD$OFF 0000                                _log 02C3  
                     ___awmod@sign 0076                    _TMR2_Initialize 0C93  
                     __CFG_BORV$LO 0000                                wreg 0009  
                  __end_of_LCD_Cmd 0CC5                       __CFG_ZCD$OFF 0000  
                     ___ftdiv@cntr 0024                     _LCD_Set_Cursor 0094  
                     ___ftdiv@sign 0029                               l2001 0E46  
                             l2101 0D89                               l2005 0E5C  
                             l2025 0E7D                               l2107 0D99  
                             l2211 0480                               l2043 0F95  
                             l2213 0484                               l2205 044D  
                             l2301 0289                               l2133 02F2  
                             l2223 04A0                               l2215 048C  
                             l2207 047C                               l2127 02E1  
                             l2153 00B4                               l2225 04CC  
                             l2217 049C                               l2321 0D46  
                             l2163 00D3                               l2331 01AD  
                             l2173 00F3                               l2229 04DA  
                             l2253 0145                               l2245 0135  
                             l2309 02A2                               l2413 0611  
                             l2271 018C                               l2263 0173  
                             l2255 0153                               l2351 01EB  
                             l2281 0232                               l1713 051E  
                             l1801 03E0                               l2425 069A  
                             l2195 0446                               l2267 017E  
                             l1651 0FB5                               l1731 0547  
                             l2363 0212                               l2443 06FA  
                             l1661 0FDB                               l1653 0FBA  
                             l1645 0FA4                               l1741 0569  
                             l1709 0517                               l2357 01F8  
                             l2349 01DD                               l1813 03FC  
                             l2445 06FC                               l2437 06E2  
                             l1911 0EF5                               l2287 0248  
                             l1751 058A                               l1743 056D  
                             l1719 052D                               l2359 0204  
                             l1681 0CE8                               l1649 0FAB  
                             l1737 055A                               l2385 0E22  
                             l2377 0E04                               l1809 03F4  
                             l1659 0FD3                               l1755 05A0  
                             l1739 0564                               l2379 0E10  
                             l1691 0D25                               l1685 0CED  
                             l1677 0CE3                               l1917 0F00  
                             l1749 0580                               l2389 0E2B  
                             l1943 0F37                               l1935 0F26  
                             l1927 0F08                               l1759 05B2  
                             l1929 0F14                               l1769 05CD  
                             l1785 039D                               l1939 0F2F  
                             l1955 0EB0                               l1779 0387  
                             l1981 0EE6                               l1973 0ED5  
                             l1797 03D8                               l1967 0EBD  
                             l1959 0EB7                               l1969 0EC9  
                             l1977 0EDE                               l1993 0D66  
                             ?_log 0047                               u2005 03E7  
                             u2035 03FD                               u2125 0F0B  
                             u2045 0403                               _LATA 0016  
                             u2070 0DFA                               _LATB 0017  
                             _LATC 0018                               u2065 0DB1  
                             u2145 0F15                               u2225 0EC0  
                             u3017 05F1                               u3107 0082  
                             u3027 0022                               u2155 0F1F  
                             u3117 0090                               u3037 002F  
                             u2405 00A0                               u2165 0F27  
                             u2245 0ECF                               u3127 0DBD  
                             u3047 003A                               u2255 0ED6  
                             u1615 0FF0                               u1535 0FB0  
                             u3137 0DC8                               u3057 0043  
                             u2425 00BF                               _T2PR 028D  
                             u3147 0CBF                               u3067 004C  
                             u1555 0FC9                               u3077 0059  
                             u2445 00DF                               u2605 0148  
                             u1805 0548                               u2470 042F  
                             u3087 0066                               u2535 04BA  
                             u1575 0FD6                               u3097 0073  
                             u2465 00FF                               u2625 0154  
                             u2705 026A                               u2635 0168  
                             u2715 028A                               u1835 055B  
                             u2565 0CD4                               u2645 0174  
                             u2725 0299                               u2805 01DE  
                             u1685 0D2C                               u2735 02A3  
                             u1695 0D31                               u1865 056E  
                             u2905 0E1B                               u2835 01F9  
                             u2915 0E23                               u1965 03A9  
                             u2695 025A                               u1895 0581  
                             u2775 01B4                               u1975 03B9  
                             u2945 06B8                               u2875 0E07  
                             u1995 03E1                               u2955 06C4  
                             u2965 06D4                               u2895 0E11  
                             u2985 06EC                               _WPUA 0F39  
                             _WPUB 0F44                               _WPUC 0F4F  
                             _WPUE 0F65                       __CFG_WRT$OFF 0000  
                    __CFG_FCMEN$ON 0000                               _main 05E5  
                     ___ftpack@arg 0070                 __size_of_LCD_Clear 0008  
                     ___ftpack@exp 0073                               fsr0h 0005  
                             fsr1h 0007                               fsr0l 0004  
                             indf0 0000                               indf1 0001  
                             fsr1l 0006                               btemp 007E  
                             log@x 0047                               ltemp 007E  
                             start 0002                               ttemp 007E  
                             wtemp 007E                      __CFG_CSWEN$ON 0000  
                    __CFG_MCLRE$ON 0000                       ___ftmul@cntr 002E  
                    _LCD_Write_Int 0424                       ___ftmul@sign 002F  
                     ___fttol@exp1 007D                              ??_log 004A  
                     ___fttol@lval 0079                   __end_of_LCD_Init 0094  
                 __end_of_LCD_Port 0CF3     __size_of_OSCILLATOR_Initialize 0009  
    __end_of_OSCILLATOR_Initialize 0C60                    __end_of___aldiv 0195  
                            _ADACQ 009D                              _ADCAP 009B  
                            _ADACT 0099                              ?_main 0070  
                            _ADCLK 0098                              _ADPCH 009E  
                            _ADREF 009A                    __end_of___awdiv 0F3C  
                            _ADPRE 009C                    __end_of___ftadd 05E5  
                    __CFG_WDTE$OFF 0000                    __end_of___awmod 0EEB  
                            _ADRPT 010D                    __end_of___ftdiv 02C3  
                  __end_of___ftmul 0424                    ___awdiv@divisor 0070  
                  __end_of___ftsub 0D5C                    __end_of___fttol 021B  
                            _T2CON 028E                main@readTemperature 0064  
                            _T2HLT 028F                    __end_of___lwdiv 0E30  
                            _T2TMR 028C                              _T2RST 0291  
                  ___awdiv@counter 0075                              _OSCEN 0891  
                            _TRISA 0011                              _TRISB 0012  
                            _TRISC 0013                    _PWM6_Initialize 0C78  
           __end_of_LCD_Set_Cursor 0113                      ___awtoft@sign 007D  
                            _frexp 0E6B                              _errno 006B  
                    ___ftpack@sign 0074                     __CFG_BOREN$OFF 0000  
                     main@setpoint 0057                              ltemp0 007E  
                            ltemp1 0082                              ltemp2 0086  
                            ltemp3 0080                              ttemp0 007E  
                            ttemp1 0081                              ttemp2 0084  
                            ttemp3 0087                              ttemp4 007F  
                            status 0003                              wtemp0 007E  
                            wtemp1 0080                              wtemp2 0082  
                            wtemp3 0084                              wtemp4 0086  
                            wtemp5 0088                              wtemp6 007F  
                 InitCustomChars@i 0076                     ?_LCD_Write_Int 0020  
                   _LCD_Write_Char 0DA1                    __initialization 07DC  
                      log@exponent 004B                       __end_of_main 07DC  
          __end_of_TMR2_Initialize 0CA2                             ??_main 004D  
                    ___fttol@sign1 0078                  __end_of_LCD_Clear 0C57  
                        ??_LCD_Cmd 0071                    ?_LCD_Set_Cursor 0073  
                           _ADCON0 0093                             _ADCON1 0094  
                           _ADCON2 0095                             _ADCON3 0096  
                           ?_frexp 0070                             _ADLTHH 010F  
                           _ADLTHL 010E                             _ADRESH 008D  
                           _ADRESL 008C                             _ADSTAT 0097  
                           _ADUTHH 0111                   ___awdiv@dividend 0072  
                           _ADUTHL 0110                   __end_of___awtoft 0D7C  
                           _ANSELA 0F38                             _ANSELB 0F43  
                           _ANSELC 0F4E                   __end_of___ftpack 1000  
               __CFG_RSTOSC$HFINT1 0000                             _RA1PPS 0F11  
                   __CFG_WDTCCS$SC 0000                             _FVRCON 090C  
                 __end_of___lwtoft 0019                             _OSCFRQ 0893  
           __end_of_LCD_Write_Char 0DCB                     __CFG_PWRTE$OFF 0000  
                     _CCPTMRS1bits 021F                             ___ftge 0E30  
           LCD_Write_Int@numPlaces 0023                          ??___aldiv 0078  
                           ___wmul 0D23                          ??___awdiv 0074  
                        ??___ftadd 0036                     __CFG_STVREN$ON 0000  
                        ??___awmod 0074                          ??___ftdiv 0020  
                        ??___ftmul 0026                          ??___ftsub 007E  
                        ??___fttol 0074                          ??___lwdiv 0074  
          __end_of_PWM6_Initialize 0C85                   ___awdiv@quotient 0077  
                  ___awmod@divisor 0070                    ___awmod@counter 0075  
            ___ftmul@f3_as_product 002B                    _ADCC_Initialize 0CF3  
__size_of_ADCC_GetSingleConversion 000E          ?_ADCC_GetSingleConversion 0070  
                 LCD_Write_Int@str 002A                      main@steinhart 0061  
                  _InitCustomChars 0D7C                    LCD_Set_Cursor@w 0078  
                  LCD_Set_Cursor@x 0076                    LCD_Set_Cursor@y 0073  
                  LCD_Set_Cursor@z 0077                  _SYSTEM_Initialize 0CA2  
                 __end_oflog@coeff 101B            __end_of__initialization 07FD  
                        ?_LCD_Init 0070                          ?_LCD_Port 0070  
                       ___ftadd@f1 0030                         ___ftadd@f2 0033  
                       ___ftge@ff1 0070                         ___ftge@ff2 0073  
                  ??_LCD_Write_Int 0025                 ?_SYSTEM_Initialize 0070  
                     eval_poly@res 0044                         ___ftdiv@f1 007B  
                       ___ftdiv@f2 0078                         ___ftdiv@f3 0025  
                  ?_LCD_Write_Char 0070                      LCD_Init@style 0075  
                       ___awtoft@c 0078                         ___ftmul@f1 0020  
                       ___ftmul@f2 0023                         ___ftsub@f1 0040  
                       ___ftsub@f2 003D                         ___fttol@f1 0070  
                   __pcstackCOMMON 0070                          LCD_Port@a 0070  
                     __pidataBANK1 0D0B                ??_SYSTEM_Initialize 0071  
                    __end_of_frexp 0EA6                   ?_TMR2_Initialize 0070  
                       ___lwtoft@c 0078                            ??_frexp 0074  
        __end_of_SYSTEM_Initialize 0CB3                         __pbssBANK0 0066  
               __size_of_eval_poly 0060                         ??_LCD_Init 0073  
                       ??_LCD_Port 0070                         __pmaintext 05E5  
                          ?___ftge 0070                            ?___wmul 0070  
                  __CFG_PPS1WAY$ON 0000            __end_of_ADCC_Initialize 0D0B  
       __end_of_PWM6_LoadDutyValue 0CDB                   ?_PWM6_Initialize 0070  
                        ?___awtoft 0078                          ?___ftpack 0070  
                          _ADSTPTH 0113                            _ADSTPTL 0112  
                        ?___lwtoft 0078            __end_of_InitCustomChars 0DA1  
                          _LCD_Cmd 0CB3                            _OSCCON1 088D  
                          _OSCCON3 088F                            _OSCTUNE 0892  
                          _PWM6DCH 038D                            _PWM6DCL 038C  
                          _PWM6CON 038E                            _PPSLOCK 0E8F  
             __CFG_SCANE$available 0000                            ___aldiv 0113  
                          ___cgram 00A0                    __size_of___ftge 003B  
                          ___awdiv 0EEB                            ___ftadd 04EF  
                          ___awmod 0EA6                            ___ftdiv 021B  
                  __size_of___wmul 001B                            ___ftmul 0370  
                          ___ftsub 0D3E                            ___fttol 0195  
                          ___lwdiv 0DFC                         ??___awtoft 007B  
                       ??___ftpack 0075                  __end_of_eval_poly 0F9C  
                 ??_LCD_Set_Cursor 0074                            __ptext1 02C3  
                          __ptext2 0E6B                            __ptext3 0F3C  
                          __ptext4 0D23                            __ptext5 0370  
                          __ptext6 0E30                            __ptext7 0D5C  
                          __ptext8 0006                            __ptext9 0DFC  
                       ??___lwtoft 007B              _OSCILLATOR_Initialize 0C57  
                        _T2CONbits 028E                       __size_of_log 00AD  
                 ___awmod@dividend 0072                   ___aldiv@dividend 0074  
         ??_PIN_MANAGER_Initialize 0070                            _samples 238C  
                        _LCD_Clear 0C4F         __size_of_SYSTEM_Initialize 0011  
                          clrloop0 0C61               end_of_initialization 07FD  
                   main@outCurrent 005F                            init_ram 0C6C  
                          initloop 0C6D                   ___aldiv@quotient 0022  
                LCD_Write_Int@sign 0024                       __pstringtext 1000  
                 ?_ADCC_Initialize 0070   __end_of_ADCC_GetSingleConversion 0C93  
            __CFG_WDTCPS$WDTCPS_31 0000                   ?_InitCustomChars 0070  
                       ?_LCD_Clear 0070                   __CFG_FEXTOSC$OFF 0000  
                 ??_LCD_Write_Char 0071                        ___ftdiv@exp 0028  
                __size_of_LCD_Init 007B                  __size_of_LCD_Port 0018  
                       main@totals 0059                        ___ftmul@exp 002A  
                   __end_of___ftge 0E6B                     __end_of___wmul 0D3E  
           ?_OSCILLATOR_Initialize 0070                start_initialization 07DC  
                       eval_poly@d 0040                         eval_poly@n 0042  
                       eval_poly@x 003D    __size_of_PIN_MANAGER_Initialize 0031  
                      __end_of_log 0370                         frexp@value 0070  
         LCD_Write_Int@fieldLength 0022              __end_of_LCD_Write_Int 04EF  
                 __CFG_LPBOREN$OFF 0000                           ??___ftge 0076  
                         ??___wmul 0074                        __pdataBANK1 00A0  
                  LCD_Write_Char@a 0074                    LCD_Write_Char@y 0073  
                         ?_LCD_Cmd 0070                  __size_of___awtoft 0020  
         _ADCC_GetSingleConversion 0C85                  __size_of___ftpack 0064  
                      __pbssBIGRAM 238C                           LCD_Cmd@a 0072  
                        ___latbits 0002                  __size_of___lwtoft 0013  
                    __pcstackBANK0 0020                 _PWM6_LoadDutyValue 0CC5  
         __size_of_TMR2_Initialize 000F                        ??_LCD_Clear 0073  
              ?_PWM6_LoadDutyValue 0070                   ___lwdiv@dividend 0072  
           _PIN_MANAGER_Initialize 0DCB                           ?___aldiv 0070  
  ADCC_GetSingleConversion@channel 0073                           ?___awdiv 0070  
                         ?___ftadd 0030                           ?___awmod 0070  
                         ?___ftdiv 0078                           ?___ftmul 0020  
                         ?___ftsub 003D                           ?___fttol 0070  
                         ?___lwdiv 0070               ??_PWM6_LoadDutyValue 0072  
                        _eval_poly 0F3C           __size_of_PWM6_Initialize 000D  
                 ___lwdiv@quotient 0075                     __size_of_frexp 003B  
                         _T2CLKCON 0290             main@readTemperatureOld 005D  
                  ___aldiv@divisor 0070                    ___aldiv@counter 0020  
                         _LCD_Init 0019                     ___wmul@product 0074  
                         _LCD_Port 0CDB                          clear_ram0 0C60  
                         _PIE0bits 0716                           _PIR4bits 0710  
                       _ADCON0bits 0093                  ___wmul@multiplier 0070  
                       ?_eval_poly 003D                   __size_of_LCD_Cmd 0012  
                ??_TMR2_Initialize 0070                          frexp@eptr 0073  
          ??_OSCILLATOR_Initialize 0070                     LCD_Write_Int@i 0031  
                   LCD_Write_Int@j 002F                   __size_of___aldiv 0082  
                 __size_of___awdiv 0051                   __size_of___ftadd 00F6  
                 __size_of___awmod 0045                   __size_of___ftdiv 00A8  
                 __size_of___ftmul 00B4                   __size_of___ftsub 001E  
                 __size_of___fttol 0086                   __size_of___lwdiv 0034  
                         ___awtoft 0D5C                           ___ftpack 0F9C  
                         ___lwtoft 0006           __size_of_ADCC_Initialize 0018  
                  main@sampleIndex 006D                    ___lwdiv@divisor 0070  
                  ___lwdiv@counter 0077                           __ptext10 0195  
                         __ptext11 0D3E                           __ptext20 0C57  
                         __ptext12 04EF                           __ptext21 0CF3  
                         __ptext13 021B                           __ptext30 0DA1  
                         __ptext22 0CC5                           __ptext14 0F9C  
                         __ptext31 0CB3                           __ptext23 0424  
                         __ptext15 0113                           __ptext32 0CDB  
                         __ptext24 0EA6                           __ptext16 0CA2  
                         __ptext33 0C85                           __ptext25 0EEB  
                         __ptext17 0C93                           __ptext26 0094  
                         __ptext18 0C78                           __ptext27 0019  
                         __ptext19 0DCB                           __ptext28 0C4F  
                         __ptext29 0D7C            __size_of_LCD_Set_Cursor 007F  
         __size_of_InitCustomChars 0025                LCD_Write_Int@F13684 0066  
                ??_PWM6_Initialize 0070                      __size_of_main 01F7  
             __CFG_WDTCWS$WDTCWS_7 0000         ??_ADCC_GetSingleConversion 0073  
      PIN_MANAGER_Initialize@state 0070                           log@coeff 1000  
                      ??_eval_poly 007E                 LCD_Write_Char@temp 0072  
          ?_PIN_MANAGER_Initialize 0070                  __CFG_CLKOUTEN$OFF 0000  
                      _PPSLOCKbits 0E8F            __size_of_LCD_Write_Char 002A  
               LCD_Set_Cursor@temp 0079                 LCD_Write_Int@value 0020  
                     ___aldiv@sign 0021             __size_of_LCD_Write_Int 00CB  
      PWM6_LoadDutyValue@dutyValue 0070     __end_of_PIN_MANAGER_Initialize 0DFC  
                ??_ADCC_Initialize 0070                  ??_InitCustomChars 0075  
