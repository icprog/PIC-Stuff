

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Tue Feb 20 17:18:56 2018

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	stringtext,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	psect	text32,local,class=CODE,merge=1,delta=2
    51                           	psect	text33,local,class=CODE,merge=1,delta=2
    52                           	psect	text34,local,class=CODE,merge=1,delta=2
    53                           	psect	text35,local,class=CODE,merge=1,delta=2
    54                           	dabs	1,0x620,48
    55                           	dabs	1,0x5A0,80
    56                           	dabs	1,0x520,80
    57                           	dabs	1,0x4D0,32
    58                           	dabs	1,0x2300,0,_samples
    59                           	dabs	1,0x7E,2
    60  0000                     	;# 
    61  0001                     	;# 
    62  0002                     	;# 
    63  0003                     	;# 
    64  0004                     	;# 
    65  0005                     	;# 
    66  0006                     	;# 
    67  0007                     	;# 
    68  0008                     	;# 
    69  0009                     	;# 
    70  000A                     	;# 
    71  000B                     	;# 
    72  000C                     	;# 
    73  000D                     	;# 
    74  000E                     	;# 
    75  0010                     	;# 
    76  0011                     	;# 
    77  0012                     	;# 
    78  0013                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  001C                     	;# 
    83  001C                     	;# 
    84  001D                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  008C                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  008E                     	;# 
    93  008F                     	;# 
    94  0090                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0093                     	;# 
    98  0094                     	;# 
    99  0095                     	;# 
   100  0096                     	;# 
   101  0097                     	;# 
   102  0098                     	;# 
   103  0099                     	;# 
   104  009A                     	;# 
   105  009B                     	;# 
   106  009C                     	;# 
   107  009D                     	;# 
   108  009E                     	;# 
   109  010C                     	;# 
   110  010D                     	;# 
   111  010E                     	;# 
   112  010E                     	;# 
   113  010F                     	;# 
   114  0110                     	;# 
   115  0110                     	;# 
   116  0111                     	;# 
   117  0112                     	;# 
   118  0112                     	;# 
   119  0113                     	;# 
   120  0114                     	;# 
   121  0114                     	;# 
   122  0115                     	;# 
   123  0116                     	;# 
   124  0116                     	;# 
   125  0117                     	;# 
   126  0119                     	;# 
   127  0119                     	;# 
   128  0119                     	;# 
   129  011A                     	;# 
   130  011A                     	;# 
   131  011A                     	;# 
   132  011B                     	;# 
   133  011B                     	;# 
   134  011B                     	;# 
   135  011B                     	;# 
   136  011B                     	;# 
   137  011C                     	;# 
   138  011C                     	;# 
   139  011C                     	;# 
   140  011D                     	;# 
   141  011D                     	;# 
   142  011D                     	;# 
   143  011E                     	;# 
   144  011E                     	;# 
   145  011E                     	;# 
   146  011F                     	;# 
   147  011F                     	;# 
   148  011F                     	;# 
   149  011F                     	;# 
   150  011F                     	;# 
   151  018C                     	;# 
   152  018D                     	;# 
   153  018E                     	;# 
   154  018F                     	;# 
   155  0190                     	;# 
   156  0191                     	;# 
   157  0192                     	;# 
   158  0196                     	;# 
   159  0197                     	;# 
   160  0198                     	;# 
   161  0199                     	;# 
   162  019A                     	;# 
   163  019B                     	;# 
   164  019C                     	;# 
   165  020C                     	;# 
   166  020D                     	;# 
   167  020E                     	;# 
   168  020F                     	;# 
   169  020F                     	;# 
   170  0210                     	;# 
   171  0210                     	;# 
   172  0211                     	;# 
   173  0211                     	;# 
   174  0212                     	;# 
   175  0213                     	;# 
   176  0214                     	;# 
   177  0215                     	;# 
   178  0215                     	;# 
   179  0216                     	;# 
   180  0216                     	;# 
   181  0217                     	;# 
   182  0217                     	;# 
   183  0218                     	;# 
   184  0219                     	;# 
   185  021A                     	;# 
   186  021B                     	;# 
   187  021B                     	;# 
   188  021C                     	;# 
   189  021C                     	;# 
   190  021D                     	;# 
   191  021D                     	;# 
   192  021E                     	;# 
   193  021F                     	;# 
   194  028C                     	;# 
   195  028C                     	;# 
   196  028D                     	;# 
   197  028D                     	;# 
   198  028E                     	;# 
   199  028F                     	;# 
   200  0290                     	;# 
   201  0290                     	;# 
   202  0291                     	;# 
   203  0292                     	;# 
   204  0292                     	;# 
   205  0293                     	;# 
   206  0293                     	;# 
   207  0294                     	;# 
   208  0295                     	;# 
   209  0296                     	;# 
   210  0296                     	;# 
   211  0297                     	;# 
   212  0298                     	;# 
   213  0298                     	;# 
   214  0299                     	;# 
   215  0299                     	;# 
   216  029A                     	;# 
   217  029B                     	;# 
   218  029C                     	;# 
   219  029C                     	;# 
   220  029D                     	;# 
   221  030C                     	;# 
   222  030C                     	;# 
   223  030D                     	;# 
   224  030E                     	;# 
   225  030F                     	;# 
   226  0310                     	;# 
   227  0310                     	;# 
   228  0311                     	;# 
   229  0312                     	;# 
   230  0313                     	;# 
   231  0314                     	;# 
   232  0314                     	;# 
   233  0315                     	;# 
   234  0316                     	;# 
   235  0317                     	;# 
   236  0318                     	;# 
   237  0318                     	;# 
   238  0319                     	;# 
   239  031A                     	;# 
   240  031B                     	;# 
   241  031C                     	;# 
   242  031C                     	;# 
   243  031D                     	;# 
   244  031E                     	;# 
   245  031F                     	;# 
   246  038C                     	;# 
   247  038D                     	;# 
   248  038E                     	;# 
   249  0390                     	;# 
   250  0391                     	;# 
   251  0392                     	;# 
   252  040C                     	;# 
   253  040D                     	;# 
   254  040E                     	;# 
   255  040F                     	;# 
   256  0410                     	;# 
   257  0411                     	;# 
   258  0416                     	;# 
   259  0416                     	;# 
   260  0417                     	;# 
   261  0418                     	;# 
   262  0418                     	;# 
   263  0419                     	;# 
   264  041A                     	;# 
   265  041A                     	;# 
   266  041B                     	;# 
   267  041C                     	;# 
   268  041C                     	;# 
   269  041D                     	;# 
   270  041E                     	;# 
   271  041F                     	;# 
   272  048C                     	;# 
   273  048C                     	;# 
   274  048D                     	;# 
   275  048E                     	;# 
   276  048F                     	;# 
   277  048F                     	;# 
   278  0490                     	;# 
   279  0491                     	;# 
   280  0492                     	;# 
   281  0492                     	;# 
   282  0493                     	;# 
   283  0494                     	;# 
   284  0495                     	;# 
   285  0495                     	;# 
   286  0496                     	;# 
   287  0497                     	;# 
   288  0498                     	;# 
   289  0499                     	;# 
   290  049A                     	;# 
   291  049B                     	;# 
   292  049C                     	;# 
   293  049D                     	;# 
   294  050C                     	;# 
   295  050C                     	;# 
   296  050D                     	;# 
   297  050E                     	;# 
   298  050F                     	;# 
   299  050F                     	;# 
   300  0510                     	;# 
   301  0511                     	;# 
   302  0512                     	;# 
   303  0512                     	;# 
   304  0513                     	;# 
   305  0514                     	;# 
   306  0515                     	;# 
   307  0515                     	;# 
   308  0516                     	;# 
   309  0517                     	;# 
   310  0518                     	;# 
   311  0519                     	;# 
   312  051A                     	;# 
   313  051B                     	;# 
   314  051C                     	;# 
   315  051D                     	;# 
   316  058C                     	;# 
   317  058C                     	;# 
   318  058D                     	;# 
   319  058E                     	;# 
   320  058F                     	;# 
   321  058F                     	;# 
   322  0590                     	;# 
   323  0591                     	;# 
   324  0592                     	;# 
   325  0593                     	;# 
   326  060C                     	;# 
   327  060D                     	;# 
   328  060E                     	;# 
   329  060F                     	;# 
   330  0610                     	;# 
   331  0611                     	;# 
   332  0612                     	;# 
   333  0613                     	;# 
   334  0614                     	;# 
   335  0616                     	;# 
   336  0617                     	;# 
   337  0618                     	;# 
   338  0619                     	;# 
   339  061A                     	;# 
   340  061B                     	;# 
   341  061C                     	;# 
   342  061D                     	;# 
   343  061E                     	;# 
   344  068C                     	;# 
   345  068D                     	;# 
   346  068E                     	;# 
   347  068F                     	;# 
   348  0690                     	;# 
   349  0691                     	;# 
   350  0692                     	;# 
   351  0693                     	;# 
   352  0694                     	;# 
   353  070C                     	;# 
   354  070D                     	;# 
   355  070E                     	;# 
   356  070F                     	;# 
   357  0710                     	;# 
   358  0711                     	;# 
   359  0712                     	;# 
   360  0713                     	;# 
   361  0714                     	;# 
   362  0716                     	;# 
   363  0717                     	;# 
   364  0718                     	;# 
   365  0719                     	;# 
   366  071A                     	;# 
   367  071B                     	;# 
   368  071C                     	;# 
   369  071D                     	;# 
   370  071E                     	;# 
   371  0796                     	;# 
   372  0797                     	;# 
   373  0798                     	;# 
   374  0799                     	;# 
   375  079A                     	;# 
   376  079B                     	;# 
   377  080C                     	;# 
   378  080D                     	;# 
   379  080E                     	;# 
   380  080F                     	;# 
   381  0810                     	;# 
   382  0811                     	;# 
   383  0812                     	;# 
   384  0813                     	;# 
   385  0814                     	;# 
   386  081A                     	;# 
   387  081B                     	;# 
   388  081C                     	;# 
   389  081D                     	;# 
   390  081E                     	;# 
   391  081F                     	;# 
   392  088C                     	;# 
   393  088D                     	;# 
   394  088E                     	;# 
   395  088F                     	;# 
   396  0890                     	;# 
   397  0891                     	;# 
   398  0892                     	;# 
   399  0893                     	;# 
   400  0895                     	;# 
   401  0896                     	;# 
   402  0897                     	;# 
   403  0898                     	;# 
   404  0899                     	;# 
   405  089A                     	;# 
   406  089B                     	;# 
   407  090C                     	;# 
   408  090E                     	;# 
   409  090F                     	;# 
   410  091F                     	;# 
   411  091F                     	;# 
   412  098F                     	;# 
   413  098F                     	;# 
   414  0990                     	;# 
   415  0991                     	;# 
   416  0992                     	;# 
   417  0993                     	;# 
   418  0994                     	;# 
   419  0995                     	;# 
   420  0996                     	;# 
   421  0997                     	;# 
   422  0E0F                     	;# 
   423  0E10                     	;# 
   424  0E11                     	;# 
   425  0E12                     	;# 
   426  0E13                     	;# 
   427  0E14                     	;# 
   428  0E15                     	;# 
   429  0E16                     	;# 
   430  0E17                     	;# 
   431  0E18                     	;# 
   432  0E19                     	;# 
   433  0E1A                     	;# 
   434  0E1B                     	;# 
   435  0E1C                     	;# 
   436  0E1D                     	;# 
   437  0E1E                     	;# 
   438  0E1F                     	;# 
   439  0E20                     	;# 
   440  0E21                     	;# 
   441  0E22                     	;# 
   442  0E23                     	;# 
   443  0E24                     	;# 
   444  0E25                     	;# 
   445  0E26                     	;# 
   446  0E27                     	;# 
   447  0E28                     	;# 
   448  0E29                     	;# 
   449  0E2A                     	;# 
   450  0E2B                     	;# 
   451  0E2C                     	;# 
   452  0E2D                     	;# 
   453  0E2E                     	;# 
   454  0E2F                     	;# 
   455  0E30                     	;# 
   456  0E31                     	;# 
   457  0E32                     	;# 
   458  0E33                     	;# 
   459  0E34                     	;# 
   460  0E35                     	;# 
   461  0E36                     	;# 
   462  0E37                     	;# 
   463  0E8F                     	;# 
   464  0E90                     	;# 
   465  0E91                     	;# 
   466  0E92                     	;# 
   467  0E93                     	;# 
   468  0E94                     	;# 
   469  0E95                     	;# 
   470  0E96                     	;# 
   471  0E97                     	;# 
   472  0E9C                     	;# 
   473  0E9D                     	;# 
   474  0E9E                     	;# 
   475  0EA1                     	;# 
   476  0EA2                     	;# 
   477  0EA3                     	;# 
   478  0EA4                     	;# 
   479  0EA5                     	;# 
   480  0EA9                     	;# 
   481  0EAA                     	;# 
   482  0EAB                     	;# 
   483  0EAC                     	;# 
   484  0EB1                     	;# 
   485  0EB2                     	;# 
   486  0EB3                     	;# 
   487  0EB8                     	;# 
   488  0EB9                     	;# 
   489  0EBA                     	;# 
   490  0EBB                     	;# 
   491  0EBC                     	;# 
   492  0EBD                     	;# 
   493  0EBE                     	;# 
   494  0EC3                     	;# 
   495  0EC5                     	;# 
   496  0EC6                     	;# 
   497  0EC7                     	;# 
   498  0EC8                     	;# 
   499  0EC9                     	;# 
   500  0ECA                     	;# 
   501  0ECB                     	;# 
   502  0ECC                     	;# 
   503  0F10                     	;# 
   504  0F11                     	;# 
   505  0F12                     	;# 
   506  0F13                     	;# 
   507  0F14                     	;# 
   508  0F15                     	;# 
   509  0F16                     	;# 
   510  0F17                     	;# 
   511  0F18                     	;# 
   512  0F19                     	;# 
   513  0F1A                     	;# 
   514  0F1B                     	;# 
   515  0F1C                     	;# 
   516  0F1D                     	;# 
   517  0F1E                     	;# 
   518  0F1F                     	;# 
   519  0F20                     	;# 
   520  0F21                     	;# 
   521  0F22                     	;# 
   522  0F23                     	;# 
   523  0F24                     	;# 
   524  0F25                     	;# 
   525  0F26                     	;# 
   526  0F27                     	;# 
   527  0F38                     	;# 
   528  0F39                     	;# 
   529  0F3A                     	;# 
   530  0F3B                     	;# 
   531  0F3C                     	;# 
   532  0F3D                     	;# 
   533  0F3E                     	;# 
   534  0F3F                     	;# 
   535  0F40                     	;# 
   536  0F41                     	;# 
   537  0F43                     	;# 
   538  0F44                     	;# 
   539  0F45                     	;# 
   540  0F46                     	;# 
   541  0F47                     	;# 
   542  0F48                     	;# 
   543  0F49                     	;# 
   544  0F4A                     	;# 
   545  0F4B                     	;# 
   546  0F4C                     	;# 
   547  0F4E                     	;# 
   548  0F4F                     	;# 
   549  0F50                     	;# 
   550  0F51                     	;# 
   551  0F52                     	;# 
   552  0F53                     	;# 
   553  0F54                     	;# 
   554  0F55                     	;# 
   555  0F56                     	;# 
   556  0F57                     	;# 
   557  0F65                     	;# 
   558  0F68                     	;# 
   559  0F69                     	;# 
   560  0F6A                     	;# 
   561  0F6B                     	;# 
   562  0FE4                     	;# 
   563  0FE5                     	;# 
   564  0FE6                     	;# 
   565  0FE7                     	;# 
   566  0FE8                     	;# 
   567  0FE9                     	;# 
   568  0FEA                     	;# 
   569  0FEB                     	;# 
   570  0FED                     	;# 
   571  0FEE                     	;# 
   572  0FEF                     	;# 
   573  0000                     	;# 
   574  0001                     	;# 
   575  0002                     	;# 
   576  0003                     	;# 
   577  0004                     	;# 
   578  0005                     	;# 
   579  0006                     	;# 
   580  0007                     	;# 
   581  0008                     	;# 
   582  0009                     	;# 
   583  000A                     	;# 
   584  000B                     	;# 
   585  000C                     	;# 
   586  000D                     	;# 
   587  000E                     	;# 
   588  0010                     	;# 
   589  0011                     	;# 
   590  0012                     	;# 
   591  0013                     	;# 
   592  0016                     	;# 
   593  0017                     	;# 
   594  0018                     	;# 
   595  001C                     	;# 
   596  001C                     	;# 
   597  001D                     	;# 
   598  001D                     	;# 
   599  001E                     	;# 
   600  001F                     	;# 
   601  008C                     	;# 
   602  008C                     	;# 
   603  008D                     	;# 
   604  008E                     	;# 
   605  008E                     	;# 
   606  008F                     	;# 
   607  0090                     	;# 
   608  0090                     	;# 
   609  0091                     	;# 
   610  0093                     	;# 
   611  0094                     	;# 
   612  0095                     	;# 
   613  0096                     	;# 
   614  0097                     	;# 
   615  0098                     	;# 
   616  0099                     	;# 
   617  009A                     	;# 
   618  009B                     	;# 
   619  009C                     	;# 
   620  009D                     	;# 
   621  009E                     	;# 
   622  010C                     	;# 
   623  010D                     	;# 
   624  010E                     	;# 
   625  010E                     	;# 
   626  010F                     	;# 
   627  0110                     	;# 
   628  0110                     	;# 
   629  0111                     	;# 
   630  0112                     	;# 
   631  0112                     	;# 
   632  0113                     	;# 
   633  0114                     	;# 
   634  0114                     	;# 
   635  0115                     	;# 
   636  0116                     	;# 
   637  0116                     	;# 
   638  0117                     	;# 
   639  0119                     	;# 
   640  0119                     	;# 
   641  0119                     	;# 
   642  011A                     	;# 
   643  011A                     	;# 
   644  011A                     	;# 
   645  011B                     	;# 
   646  011B                     	;# 
   647  011B                     	;# 
   648  011B                     	;# 
   649  011B                     	;# 
   650  011C                     	;# 
   651  011C                     	;# 
   652  011C                     	;# 
   653  011D                     	;# 
   654  011D                     	;# 
   655  011D                     	;# 
   656  011E                     	;# 
   657  011E                     	;# 
   658  011E                     	;# 
   659  011F                     	;# 
   660  011F                     	;# 
   661  011F                     	;# 
   662  011F                     	;# 
   663  011F                     	;# 
   664  018C                     	;# 
   665  018D                     	;# 
   666  018E                     	;# 
   667  018F                     	;# 
   668  0190                     	;# 
   669  0191                     	;# 
   670  0192                     	;# 
   671  0196                     	;# 
   672  0197                     	;# 
   673  0198                     	;# 
   674  0199                     	;# 
   675  019A                     	;# 
   676  019B                     	;# 
   677  019C                     	;# 
   678  020C                     	;# 
   679  020D                     	;# 
   680  020E                     	;# 
   681  020F                     	;# 
   682  020F                     	;# 
   683  0210                     	;# 
   684  0210                     	;# 
   685  0211                     	;# 
   686  0211                     	;# 
   687  0212                     	;# 
   688  0213                     	;# 
   689  0214                     	;# 
   690  0215                     	;# 
   691  0215                     	;# 
   692  0216                     	;# 
   693  0216                     	;# 
   694  0217                     	;# 
   695  0217                     	;# 
   696  0218                     	;# 
   697  0219                     	;# 
   698  021A                     	;# 
   699  021B                     	;# 
   700  021B                     	;# 
   701  021C                     	;# 
   702  021C                     	;# 
   703  021D                     	;# 
   704  021D                     	;# 
   705  021E                     	;# 
   706  021F                     	;# 
   707  028C                     	;# 
   708  028C                     	;# 
   709  028D                     	;# 
   710  028D                     	;# 
   711  028E                     	;# 
   712  028F                     	;# 
   713  0290                     	;# 
   714  0290                     	;# 
   715  0291                     	;# 
   716  0292                     	;# 
   717  0292                     	;# 
   718  0293                     	;# 
   719  0293                     	;# 
   720  0294                     	;# 
   721  0295                     	;# 
   722  0296                     	;# 
   723  0296                     	;# 
   724  0297                     	;# 
   725  0298                     	;# 
   726  0298                     	;# 
   727  0299                     	;# 
   728  0299                     	;# 
   729  029A                     	;# 
   730  029B                     	;# 
   731  029C                     	;# 
   732  029C                     	;# 
   733  029D                     	;# 
   734  030C                     	;# 
   735  030C                     	;# 
   736  030D                     	;# 
   737  030E                     	;# 
   738  030F                     	;# 
   739  0310                     	;# 
   740  0310                     	;# 
   741  0311                     	;# 
   742  0312                     	;# 
   743  0313                     	;# 
   744  0314                     	;# 
   745  0314                     	;# 
   746  0315                     	;# 
   747  0316                     	;# 
   748  0317                     	;# 
   749  0318                     	;# 
   750  0318                     	;# 
   751  0319                     	;# 
   752  031A                     	;# 
   753  031B                     	;# 
   754  031C                     	;# 
   755  031C                     	;# 
   756  031D                     	;# 
   757  031E                     	;# 
   758  031F                     	;# 
   759  038C                     	;# 
   760  038D                     	;# 
   761  038E                     	;# 
   762  0390                     	;# 
   763  0391                     	;# 
   764  0392                     	;# 
   765  040C                     	;# 
   766  040D                     	;# 
   767  040E                     	;# 
   768  040F                     	;# 
   769  0410                     	;# 
   770  0411                     	;# 
   771  0416                     	;# 
   772  0416                     	;# 
   773  0417                     	;# 
   774  0418                     	;# 
   775  0418                     	;# 
   776  0419                     	;# 
   777  041A                     	;# 
   778  041A                     	;# 
   779  041B                     	;# 
   780  041C                     	;# 
   781  041C                     	;# 
   782  041D                     	;# 
   783  041E                     	;# 
   784  041F                     	;# 
   785  048C                     	;# 
   786  048C                     	;# 
   787  048D                     	;# 
   788  048E                     	;# 
   789  048F                     	;# 
   790  048F                     	;# 
   791  0490                     	;# 
   792  0491                     	;# 
   793  0492                     	;# 
   794  0492                     	;# 
   795  0493                     	;# 
   796  0494                     	;# 
   797  0495                     	;# 
   798  0495                     	;# 
   799  0496                     	;# 
   800  0497                     	;# 
   801  0498                     	;# 
   802  0499                     	;# 
   803  049A                     	;# 
   804  049B                     	;# 
   805  049C                     	;# 
   806  049D                     	;# 
   807  050C                     	;# 
   808  050C                     	;# 
   809  050D                     	;# 
   810  050E                     	;# 
   811  050F                     	;# 
   812  050F                     	;# 
   813  0510                     	;# 
   814  0511                     	;# 
   815  0512                     	;# 
   816  0512                     	;# 
   817  0513                     	;# 
   818  0514                     	;# 
   819  0515                     	;# 
   820  0515                     	;# 
   821  0516                     	;# 
   822  0517                     	;# 
   823  0518                     	;# 
   824  0519                     	;# 
   825  051A                     	;# 
   826  051B                     	;# 
   827  051C                     	;# 
   828  051D                     	;# 
   829  058C                     	;# 
   830  058C                     	;# 
   831  058D                     	;# 
   832  058E                     	;# 
   833  058F                     	;# 
   834  058F                     	;# 
   835  0590                     	;# 
   836  0591                     	;# 
   837  0592                     	;# 
   838  0593                     	;# 
   839  060C                     	;# 
   840  060D                     	;# 
   841  060E                     	;# 
   842  060F                     	;# 
   843  0610                     	;# 
   844  0611                     	;# 
   845  0612                     	;# 
   846  0613                     	;# 
   847  0614                     	;# 
   848  0616                     	;# 
   849  0617                     	;# 
   850  0618                     	;# 
   851  0619                     	;# 
   852  061A                     	;# 
   853  061B                     	;# 
   854  061C                     	;# 
   855  061D                     	;# 
   856  061E                     	;# 
   857  068C                     	;# 
   858  068D                     	;# 
   859  068E                     	;# 
   860  068F                     	;# 
   861  0690                     	;# 
   862  0691                     	;# 
   863  0692                     	;# 
   864  0693                     	;# 
   865  0694                     	;# 
   866  070C                     	;# 
   867  070D                     	;# 
   868  070E                     	;# 
   869  070F                     	;# 
   870  0710                     	;# 
   871  0711                     	;# 
   872  0712                     	;# 
   873  0713                     	;# 
   874  0714                     	;# 
   875  0716                     	;# 
   876  0717                     	;# 
   877  0718                     	;# 
   878  0719                     	;# 
   879  071A                     	;# 
   880  071B                     	;# 
   881  071C                     	;# 
   882  071D                     	;# 
   883  071E                     	;# 
   884  0796                     	;# 
   885  0797                     	;# 
   886  0798                     	;# 
   887  0799                     	;# 
   888  079A                     	;# 
   889  079B                     	;# 
   890  080C                     	;# 
   891  080D                     	;# 
   892  080E                     	;# 
   893  080F                     	;# 
   894  0810                     	;# 
   895  0811                     	;# 
   896  0812                     	;# 
   897  0813                     	;# 
   898  0814                     	;# 
   899  081A                     	;# 
   900  081B                     	;# 
   901  081C                     	;# 
   902  081D                     	;# 
   903  081E                     	;# 
   904  081F                     	;# 
   905  088C                     	;# 
   906  088D                     	;# 
   907  088E                     	;# 
   908  088F                     	;# 
   909  0890                     	;# 
   910  0891                     	;# 
   911  0892                     	;# 
   912  0893                     	;# 
   913  0895                     	;# 
   914  0896                     	;# 
   915  0897                     	;# 
   916  0898                     	;# 
   917  0899                     	;# 
   918  089A                     	;# 
   919  089B                     	;# 
   920  090C                     	;# 
   921  090E                     	;# 
   922  090F                     	;# 
   923  091F                     	;# 
   924  091F                     	;# 
   925  098F                     	;# 
   926  098F                     	;# 
   927  0990                     	;# 
   928  0991                     	;# 
   929  0992                     	;# 
   930  0993                     	;# 
   931  0994                     	;# 
   932  0995                     	;# 
   933  0996                     	;# 
   934  0997                     	;# 
   935  0E0F                     	;# 
   936  0E10                     	;# 
   937  0E11                     	;# 
   938  0E12                     	;# 
   939  0E13                     	;# 
   940  0E14                     	;# 
   941  0E15                     	;# 
   942  0E16                     	;# 
   943  0E17                     	;# 
   944  0E18                     	;# 
   945  0E19                     	;# 
   946  0E1A                     	;# 
   947  0E1B                     	;# 
   948  0E1C                     	;# 
   949  0E1D                     	;# 
   950  0E1E                     	;# 
   951  0E1F                     	;# 
   952  0E20                     	;# 
   953  0E21                     	;# 
   954  0E22                     	;# 
   955  0E23                     	;# 
   956  0E24                     	;# 
   957  0E25                     	;# 
   958  0E26                     	;# 
   959  0E27                     	;# 
   960  0E28                     	;# 
   961  0E29                     	;# 
   962  0E2A                     	;# 
   963  0E2B                     	;# 
   964  0E2C                     	;# 
   965  0E2D                     	;# 
   966  0E2E                     	;# 
   967  0E2F                     	;# 
   968  0E30                     	;# 
   969  0E31                     	;# 
   970  0E32                     	;# 
   971  0E33                     	;# 
   972  0E34                     	;# 
   973  0E35                     	;# 
   974  0E36                     	;# 
   975  0E37                     	;# 
   976  0E8F                     	;# 
   977  0E90                     	;# 
   978  0E91                     	;# 
   979  0E92                     	;# 
   980  0E93                     	;# 
   981  0E94                     	;# 
   982  0E95                     	;# 
   983  0E96                     	;# 
   984  0E97                     	;# 
   985  0E9C                     	;# 
   986  0E9D                     	;# 
   987  0E9E                     	;# 
   988  0EA1                     	;# 
   989  0EA2                     	;# 
   990  0EA3                     	;# 
   991  0EA4                     	;# 
   992  0EA5                     	;# 
   993  0EA9                     	;# 
   994  0EAA                     	;# 
   995  0EAB                     	;# 
   996  0EAC                     	;# 
   997  0EB1                     	;# 
   998  0EB2                     	;# 
   999  0EB3                     	;# 
  1000  0EB8                     	;# 
  1001  0EB9                     	;# 
  1002  0EBA                     	;# 
  1003  0EBB                     	;# 
  1004  0EBC                     	;# 
  1005  0EBD                     	;# 
  1006  0EBE                     	;# 
  1007  0EC3                     	;# 
  1008  0EC5                     	;# 
  1009  0EC6                     	;# 
  1010  0EC7                     	;# 
  1011  0EC8                     	;# 
  1012  0EC9                     	;# 
  1013  0ECA                     	;# 
  1014  0ECB                     	;# 
  1015  0ECC                     	;# 
  1016  0F10                     	;# 
  1017  0F11                     	;# 
  1018  0F12                     	;# 
  1019  0F13                     	;# 
  1020  0F14                     	;# 
  1021  0F15                     	;# 
  1022  0F16                     	;# 
  1023  0F17                     	;# 
  1024  0F18                     	;# 
  1025  0F19                     	;# 
  1026  0F1A                     	;# 
  1027  0F1B                     	;# 
  1028  0F1C                     	;# 
  1029  0F1D                     	;# 
  1030  0F1E                     	;# 
  1031  0F1F                     	;# 
  1032  0F20                     	;# 
  1033  0F21                     	;# 
  1034  0F22                     	;# 
  1035  0F23                     	;# 
  1036  0F24                     	;# 
  1037  0F25                     	;# 
  1038  0F26                     	;# 
  1039  0F27                     	;# 
  1040  0F38                     	;# 
  1041  0F39                     	;# 
  1042  0F3A                     	;# 
  1043  0F3B                     	;# 
  1044  0F3C                     	;# 
  1045  0F3D                     	;# 
  1046  0F3E                     	;# 
  1047  0F3F                     	;# 
  1048  0F40                     	;# 
  1049  0F41                     	;# 
  1050  0F43                     	;# 
  1051  0F44                     	;# 
  1052  0F45                     	;# 
  1053  0F46                     	;# 
  1054  0F47                     	;# 
  1055  0F48                     	;# 
  1056  0F49                     	;# 
  1057  0F4A                     	;# 
  1058  0F4B                     	;# 
  1059  0F4C                     	;# 
  1060  0F4E                     	;# 
  1061  0F4F                     	;# 
  1062  0F50                     	;# 
  1063  0F51                     	;# 
  1064  0F52                     	;# 
  1065  0F53                     	;# 
  1066  0F54                     	;# 
  1067  0F55                     	;# 
  1068  0F56                     	;# 
  1069  0F57                     	;# 
  1070  0F65                     	;# 
  1071  0F68                     	;# 
  1072  0F69                     	;# 
  1073  0F6A                     	;# 
  1074  0F6B                     	;# 
  1075  0FE4                     	;# 
  1076  0FE5                     	;# 
  1077  0FE6                     	;# 
  1078  0FE7                     	;# 
  1079  0FE8                     	;# 
  1080  0FE9                     	;# 
  1081  0FEA                     	;# 
  1082  0FEB                     	;# 
  1083  0FED                     	;# 
  1084  0FEE                     	;# 
  1085  0FEF                     	;# 
  1086  0000                     	;# 
  1087  0001                     	;# 
  1088  0002                     	;# 
  1089  0003                     	;# 
  1090  0004                     	;# 
  1091  0005                     	;# 
  1092  0006                     	;# 
  1093  0007                     	;# 
  1094  0008                     	;# 
  1095  0009                     	;# 
  1096  000A                     	;# 
  1097  000B                     	;# 
  1098  000C                     	;# 
  1099  000D                     	;# 
  1100  000E                     	;# 
  1101  0010                     	;# 
  1102  0011                     	;# 
  1103  0012                     	;# 
  1104  0013                     	;# 
  1105  0016                     	;# 
  1106  0017                     	;# 
  1107  0018                     	;# 
  1108  001C                     	;# 
  1109  001C                     	;# 
  1110  001D                     	;# 
  1111  001D                     	;# 
  1112  001E                     	;# 
  1113  001F                     	;# 
  1114  008C                     	;# 
  1115  008C                     	;# 
  1116  008D                     	;# 
  1117  008E                     	;# 
  1118  008E                     	;# 
  1119  008F                     	;# 
  1120  0090                     	;# 
  1121  0090                     	;# 
  1122  0091                     	;# 
  1123  0093                     	;# 
  1124  0094                     	;# 
  1125  0095                     	;# 
  1126  0096                     	;# 
  1127  0097                     	;# 
  1128  0098                     	;# 
  1129  0099                     	;# 
  1130  009A                     	;# 
  1131  009B                     	;# 
  1132  009C                     	;# 
  1133  009D                     	;# 
  1134  009E                     	;# 
  1135  010C                     	;# 
  1136  010D                     	;# 
  1137  010E                     	;# 
  1138  010E                     	;# 
  1139  010F                     	;# 
  1140  0110                     	;# 
  1141  0110                     	;# 
  1142  0111                     	;# 
  1143  0112                     	;# 
  1144  0112                     	;# 
  1145  0113                     	;# 
  1146  0114                     	;# 
  1147  0114                     	;# 
  1148  0115                     	;# 
  1149  0116                     	;# 
  1150  0116                     	;# 
  1151  0117                     	;# 
  1152  0119                     	;# 
  1153  0119                     	;# 
  1154  0119                     	;# 
  1155  011A                     	;# 
  1156  011A                     	;# 
  1157  011A                     	;# 
  1158  011B                     	;# 
  1159  011B                     	;# 
  1160  011B                     	;# 
  1161  011B                     	;# 
  1162  011B                     	;# 
  1163  011C                     	;# 
  1164  011C                     	;# 
  1165  011C                     	;# 
  1166  011D                     	;# 
  1167  011D                     	;# 
  1168  011D                     	;# 
  1169  011E                     	;# 
  1170  011E                     	;# 
  1171  011E                     	;# 
  1172  011F                     	;# 
  1173  011F                     	;# 
  1174  011F                     	;# 
  1175  011F                     	;# 
  1176  011F                     	;# 
  1177  018C                     	;# 
  1178  018D                     	;# 
  1179  018E                     	;# 
  1180  018F                     	;# 
  1181  0190                     	;# 
  1182  0191                     	;# 
  1183  0192                     	;# 
  1184  0196                     	;# 
  1185  0197                     	;# 
  1186  0198                     	;# 
  1187  0199                     	;# 
  1188  019A                     	;# 
  1189  019B                     	;# 
  1190  019C                     	;# 
  1191  020C                     	;# 
  1192  020D                     	;# 
  1193  020E                     	;# 
  1194  020F                     	;# 
  1195  020F                     	;# 
  1196  0210                     	;# 
  1197  0210                     	;# 
  1198  0211                     	;# 
  1199  0211                     	;# 
  1200  0212                     	;# 
  1201  0213                     	;# 
  1202  0214                     	;# 
  1203  0215                     	;# 
  1204  0215                     	;# 
  1205  0216                     	;# 
  1206  0216                     	;# 
  1207  0217                     	;# 
  1208  0217                     	;# 
  1209  0218                     	;# 
  1210  0219                     	;# 
  1211  021A                     	;# 
  1212  021B                     	;# 
  1213  021B                     	;# 
  1214  021C                     	;# 
  1215  021C                     	;# 
  1216  021D                     	;# 
  1217  021D                     	;# 
  1218  021E                     	;# 
  1219  021F                     	;# 
  1220  028C                     	;# 
  1221  028C                     	;# 
  1222  028D                     	;# 
  1223  028D                     	;# 
  1224  028E                     	;# 
  1225  028F                     	;# 
  1226  0290                     	;# 
  1227  0290                     	;# 
  1228  0291                     	;# 
  1229  0292                     	;# 
  1230  0292                     	;# 
  1231  0293                     	;# 
  1232  0293                     	;# 
  1233  0294                     	;# 
  1234  0295                     	;# 
  1235  0296                     	;# 
  1236  0296                     	;# 
  1237  0297                     	;# 
  1238  0298                     	;# 
  1239  0298                     	;# 
  1240  0299                     	;# 
  1241  0299                     	;# 
  1242  029A                     	;# 
  1243  029B                     	;# 
  1244  029C                     	;# 
  1245  029C                     	;# 
  1246  029D                     	;# 
  1247  030C                     	;# 
  1248  030C                     	;# 
  1249  030D                     	;# 
  1250  030E                     	;# 
  1251  030F                     	;# 
  1252  0310                     	;# 
  1253  0310                     	;# 
  1254  0311                     	;# 
  1255  0312                     	;# 
  1256  0313                     	;# 
  1257  0314                     	;# 
  1258  0314                     	;# 
  1259  0315                     	;# 
  1260  0316                     	;# 
  1261  0317                     	;# 
  1262  0318                     	;# 
  1263  0318                     	;# 
  1264  0319                     	;# 
  1265  031A                     	;# 
  1266  031B                     	;# 
  1267  031C                     	;# 
  1268  031C                     	;# 
  1269  031D                     	;# 
  1270  031E                     	;# 
  1271  031F                     	;# 
  1272  038C                     	;# 
  1273  038D                     	;# 
  1274  038E                     	;# 
  1275  0390                     	;# 
  1276  0391                     	;# 
  1277  0392                     	;# 
  1278  040C                     	;# 
  1279  040D                     	;# 
  1280  040E                     	;# 
  1281  040F                     	;# 
  1282  0410                     	;# 
  1283  0411                     	;# 
  1284  0416                     	;# 
  1285  0416                     	;# 
  1286  0417                     	;# 
  1287  0418                     	;# 
  1288  0418                     	;# 
  1289  0419                     	;# 
  1290  041A                     	;# 
  1291  041A                     	;# 
  1292  041B                     	;# 
  1293  041C                     	;# 
  1294  041C                     	;# 
  1295  041D                     	;# 
  1296  041E                     	;# 
  1297  041F                     	;# 
  1298  048C                     	;# 
  1299  048C                     	;# 
  1300  048D                     	;# 
  1301  048E                     	;# 
  1302  048F                     	;# 
  1303  048F                     	;# 
  1304  0490                     	;# 
  1305  0491                     	;# 
  1306  0492                     	;# 
  1307  0492                     	;# 
  1308  0493                     	;# 
  1309  0494                     	;# 
  1310  0495                     	;# 
  1311  0495                     	;# 
  1312  0496                     	;# 
  1313  0497                     	;# 
  1314  0498                     	;# 
  1315  0499                     	;# 
  1316  049A                     	;# 
  1317  049B                     	;# 
  1318  049C                     	;# 
  1319  049D                     	;# 
  1320  050C                     	;# 
  1321  050C                     	;# 
  1322  050D                     	;# 
  1323  050E                     	;# 
  1324  050F                     	;# 
  1325  050F                     	;# 
  1326  0510                     	;# 
  1327  0511                     	;# 
  1328  0512                     	;# 
  1329  0512                     	;# 
  1330  0513                     	;# 
  1331  0514                     	;# 
  1332  0515                     	;# 
  1333  0515                     	;# 
  1334  0516                     	;# 
  1335  0517                     	;# 
  1336  0518                     	;# 
  1337  0519                     	;# 
  1338  051A                     	;# 
  1339  051B                     	;# 
  1340  051C                     	;# 
  1341  051D                     	;# 
  1342  058C                     	;# 
  1343  058C                     	;# 
  1344  058D                     	;# 
  1345  058E                     	;# 
  1346  058F                     	;# 
  1347  058F                     	;# 
  1348  0590                     	;# 
  1349  0591                     	;# 
  1350  0592                     	;# 
  1351  0593                     	;# 
  1352  060C                     	;# 
  1353  060D                     	;# 
  1354  060E                     	;# 
  1355  060F                     	;# 
  1356  0610                     	;# 
  1357  0611                     	;# 
  1358  0612                     	;# 
  1359  0613                     	;# 
  1360  0614                     	;# 
  1361  0616                     	;# 
  1362  0617                     	;# 
  1363  0618                     	;# 
  1364  0619                     	;# 
  1365  061A                     	;# 
  1366  061B                     	;# 
  1367  061C                     	;# 
  1368  061D                     	;# 
  1369  061E                     	;# 
  1370  068C                     	;# 
  1371  068D                     	;# 
  1372  068E                     	;# 
  1373  068F                     	;# 
  1374  0690                     	;# 
  1375  0691                     	;# 
  1376  0692                     	;# 
  1377  0693                     	;# 
  1378  0694                     	;# 
  1379  070C                     	;# 
  1380  070D                     	;# 
  1381  070E                     	;# 
  1382  070F                     	;# 
  1383  0710                     	;# 
  1384  0711                     	;# 
  1385  0712                     	;# 
  1386  0713                     	;# 
  1387  0714                     	;# 
  1388  0716                     	;# 
  1389  0717                     	;# 
  1390  0718                     	;# 
  1391  0719                     	;# 
  1392  071A                     	;# 
  1393  071B                     	;# 
  1394  071C                     	;# 
  1395  071D                     	;# 
  1396  071E                     	;# 
  1397  0796                     	;# 
  1398  0797                     	;# 
  1399  0798                     	;# 
  1400  0799                     	;# 
  1401  079A                     	;# 
  1402  079B                     	;# 
  1403  080C                     	;# 
  1404  080D                     	;# 
  1405  080E                     	;# 
  1406  080F                     	;# 
  1407  0810                     	;# 
  1408  0811                     	;# 
  1409  0812                     	;# 
  1410  0813                     	;# 
  1411  0814                     	;# 
  1412  081A                     	;# 
  1413  081B                     	;# 
  1414  081C                     	;# 
  1415  081D                     	;# 
  1416  081E                     	;# 
  1417  081F                     	;# 
  1418  088C                     	;# 
  1419  088D                     	;# 
  1420  088E                     	;# 
  1421  088F                     	;# 
  1422  0890                     	;# 
  1423  0891                     	;# 
  1424  0892                     	;# 
  1425  0893                     	;# 
  1426  0895                     	;# 
  1427  0896                     	;# 
  1428  0897                     	;# 
  1429  0898                     	;# 
  1430  0899                     	;# 
  1431  089A                     	;# 
  1432  089B                     	;# 
  1433  090C                     	;# 
  1434  090E                     	;# 
  1435  090F                     	;# 
  1436  091F                     	;# 
  1437  091F                     	;# 
  1438  098F                     	;# 
  1439  098F                     	;# 
  1440  0990                     	;# 
  1441  0991                     	;# 
  1442  0992                     	;# 
  1443  0993                     	;# 
  1444  0994                     	;# 
  1445  0995                     	;# 
  1446  0996                     	;# 
  1447  0997                     	;# 
  1448  0E0F                     	;# 
  1449  0E10                     	;# 
  1450  0E11                     	;# 
  1451  0E12                     	;# 
  1452  0E13                     	;# 
  1453  0E14                     	;# 
  1454  0E15                     	;# 
  1455  0E16                     	;# 
  1456  0E17                     	;# 
  1457  0E18                     	;# 
  1458  0E19                     	;# 
  1459  0E1A                     	;# 
  1460  0E1B                     	;# 
  1461  0E1C                     	;# 
  1462  0E1D                     	;# 
  1463  0E1E                     	;# 
  1464  0E1F                     	;# 
  1465  0E20                     	;# 
  1466  0E21                     	;# 
  1467  0E22                     	;# 
  1468  0E23                     	;# 
  1469  0E24                     	;# 
  1470  0E25                     	;# 
  1471  0E26                     	;# 
  1472  0E27                     	;# 
  1473  0E28                     	;# 
  1474  0E29                     	;# 
  1475  0E2A                     	;# 
  1476  0E2B                     	;# 
  1477  0E2C                     	;# 
  1478  0E2D                     	;# 
  1479  0E2E                     	;# 
  1480  0E2F                     	;# 
  1481  0E30                     	;# 
  1482  0E31                     	;# 
  1483  0E32                     	;# 
  1484  0E33                     	;# 
  1485  0E34                     	;# 
  1486  0E35                     	;# 
  1487  0E36                     	;# 
  1488  0E37                     	;# 
  1489  0E8F                     	;# 
  1490  0E90                     	;# 
  1491  0E91                     	;# 
  1492  0E92                     	;# 
  1493  0E93                     	;# 
  1494  0E94                     	;# 
  1495  0E95                     	;# 
  1496  0E96                     	;# 
  1497  0E97                     	;# 
  1498  0E9C                     	;# 
  1499  0E9D                     	;# 
  1500  0E9E                     	;# 
  1501  0EA1                     	;# 
  1502  0EA2                     	;# 
  1503  0EA3                     	;# 
  1504  0EA4                     	;# 
  1505  0EA5                     	;# 
  1506  0EA9                     	;# 
  1507  0EAA                     	;# 
  1508  0EAB                     	;# 
  1509  0EAC                     	;# 
  1510  0EB1                     	;# 
  1511  0EB2                     	;# 
  1512  0EB3                     	;# 
  1513  0EB8                     	;# 
  1514  0EB9                     	;# 
  1515  0EBA                     	;# 
  1516  0EBB                     	;# 
  1517  0EBC                     	;# 
  1518  0EBD                     	;# 
  1519  0EBE                     	;# 
  1520  0EC3                     	;# 
  1521  0EC5                     	;# 
  1522  0EC6                     	;# 
  1523  0EC7                     	;# 
  1524  0EC8                     	;# 
  1525  0EC9                     	;# 
  1526  0ECA                     	;# 
  1527  0ECB                     	;# 
  1528  0ECC                     	;# 
  1529  0F10                     	;# 
  1530  0F11                     	;# 
  1531  0F12                     	;# 
  1532  0F13                     	;# 
  1533  0F14                     	;# 
  1534  0F15                     	;# 
  1535  0F16                     	;# 
  1536  0F17                     	;# 
  1537  0F18                     	;# 
  1538  0F19                     	;# 
  1539  0F1A                     	;# 
  1540  0F1B                     	;# 
  1541  0F1C                     	;# 
  1542  0F1D                     	;# 
  1543  0F1E                     	;# 
  1544  0F1F                     	;# 
  1545  0F20                     	;# 
  1546  0F21                     	;# 
  1547  0F22                     	;# 
  1548  0F23                     	;# 
  1549  0F24                     	;# 
  1550  0F25                     	;# 
  1551  0F26                     	;# 
  1552  0F27                     	;# 
  1553  0F38                     	;# 
  1554  0F39                     	;# 
  1555  0F3A                     	;# 
  1556  0F3B                     	;# 
  1557  0F3C                     	;# 
  1558  0F3D                     	;# 
  1559  0F3E                     	;# 
  1560  0F3F                     	;# 
  1561  0F40                     	;# 
  1562  0F41                     	;# 
  1563  0F43                     	;# 
  1564  0F44                     	;# 
  1565  0F45                     	;# 
  1566  0F46                     	;# 
  1567  0F47                     	;# 
  1568  0F48                     	;# 
  1569  0F49                     	;# 
  1570  0F4A                     	;# 
  1571  0F4B                     	;# 
  1572  0F4C                     	;# 
  1573  0F4E                     	;# 
  1574  0F4F                     	;# 
  1575  0F50                     	;# 
  1576  0F51                     	;# 
  1577  0F52                     	;# 
  1578  0F53                     	;# 
  1579  0F54                     	;# 
  1580  0F55                     	;# 
  1581  0F56                     	;# 
  1582  0F57                     	;# 
  1583  0F65                     	;# 
  1584  0F68                     	;# 
  1585  0F69                     	;# 
  1586  0F6A                     	;# 
  1587  0F6B                     	;# 
  1588  0FE4                     	;# 
  1589  0FE5                     	;# 
  1590  0FE6                     	;# 
  1591  0FE7                     	;# 
  1592  0FE8                     	;# 
  1593  0FE9                     	;# 
  1594  0FEA                     	;# 
  1595  0FEB                     	;# 
  1596  0FED                     	;# 
  1597  0FEE                     	;# 
  1598  0FEF                     	;# 
  1599  0000                     	;# 
  1600  0001                     	;# 
  1601  0002                     	;# 
  1602  0003                     	;# 
  1603  0004                     	;# 
  1604  0005                     	;# 
  1605  0006                     	;# 
  1606  0007                     	;# 
  1607  0008                     	;# 
  1608  0009                     	;# 
  1609  000A                     	;# 
  1610  000B                     	;# 
  1611  000C                     	;# 
  1612  000D                     	;# 
  1613  000E                     	;# 
  1614  0010                     	;# 
  1615  0011                     	;# 
  1616  0012                     	;# 
  1617  0013                     	;# 
  1618  0016                     	;# 
  1619  0017                     	;# 
  1620  0018                     	;# 
  1621  001C                     	;# 
  1622  001C                     	;# 
  1623  001D                     	;# 
  1624  001D                     	;# 
  1625  001E                     	;# 
  1626  001F                     	;# 
  1627  008C                     	;# 
  1628  008C                     	;# 
  1629  008D                     	;# 
  1630  008E                     	;# 
  1631  008E                     	;# 
  1632  008F                     	;# 
  1633  0090                     	;# 
  1634  0090                     	;# 
  1635  0091                     	;# 
  1636  0093                     	;# 
  1637  0094                     	;# 
  1638  0095                     	;# 
  1639  0096                     	;# 
  1640  0097                     	;# 
  1641  0098                     	;# 
  1642  0099                     	;# 
  1643  009A                     	;# 
  1644  009B                     	;# 
  1645  009C                     	;# 
  1646  009D                     	;# 
  1647  009E                     	;# 
  1648  010C                     	;# 
  1649  010D                     	;# 
  1650  010E                     	;# 
  1651  010E                     	;# 
  1652  010F                     	;# 
  1653  0110                     	;# 
  1654  0110                     	;# 
  1655  0111                     	;# 
  1656  0112                     	;# 
  1657  0112                     	;# 
  1658  0113                     	;# 
  1659  0114                     	;# 
  1660  0114                     	;# 
  1661  0115                     	;# 
  1662  0116                     	;# 
  1663  0116                     	;# 
  1664  0117                     	;# 
  1665  0119                     	;# 
  1666  0119                     	;# 
  1667  0119                     	;# 
  1668  011A                     	;# 
  1669  011A                     	;# 
  1670  011A                     	;# 
  1671  011B                     	;# 
  1672  011B                     	;# 
  1673  011B                     	;# 
  1674  011B                     	;# 
  1675  011B                     	;# 
  1676  011C                     	;# 
  1677  011C                     	;# 
  1678  011C                     	;# 
  1679  011D                     	;# 
  1680  011D                     	;# 
  1681  011D                     	;# 
  1682  011E                     	;# 
  1683  011E                     	;# 
  1684  011E                     	;# 
  1685  011F                     	;# 
  1686  011F                     	;# 
  1687  011F                     	;# 
  1688  011F                     	;# 
  1689  011F                     	;# 
  1690  018C                     	;# 
  1691  018D                     	;# 
  1692  018E                     	;# 
  1693  018F                     	;# 
  1694  0190                     	;# 
  1695  0191                     	;# 
  1696  0192                     	;# 
  1697  0196                     	;# 
  1698  0197                     	;# 
  1699  0198                     	;# 
  1700  0199                     	;# 
  1701  019A                     	;# 
  1702  019B                     	;# 
  1703  019C                     	;# 
  1704  020C                     	;# 
  1705  020D                     	;# 
  1706  020E                     	;# 
  1707  020F                     	;# 
  1708  020F                     	;# 
  1709  0210                     	;# 
  1710  0210                     	;# 
  1711  0211                     	;# 
  1712  0211                     	;# 
  1713  0212                     	;# 
  1714  0213                     	;# 
  1715  0214                     	;# 
  1716  0215                     	;# 
  1717  0215                     	;# 
  1718  0216                     	;# 
  1719  0216                     	;# 
  1720  0217                     	;# 
  1721  0217                     	;# 
  1722  0218                     	;# 
  1723  0219                     	;# 
  1724  021A                     	;# 
  1725  021B                     	;# 
  1726  021B                     	;# 
  1727  021C                     	;# 
  1728  021C                     	;# 
  1729  021D                     	;# 
  1730  021D                     	;# 
  1731  021E                     	;# 
  1732  021F                     	;# 
  1733  028C                     	;# 
  1734  028C                     	;# 
  1735  028D                     	;# 
  1736  028D                     	;# 
  1737  028E                     	;# 
  1738  028F                     	;# 
  1739  0290                     	;# 
  1740  0290                     	;# 
  1741  0291                     	;# 
  1742  0292                     	;# 
  1743  0292                     	;# 
  1744  0293                     	;# 
  1745  0293                     	;# 
  1746  0294                     	;# 
  1747  0295                     	;# 
  1748  0296                     	;# 
  1749  0296                     	;# 
  1750  0297                     	;# 
  1751  0298                     	;# 
  1752  0298                     	;# 
  1753  0299                     	;# 
  1754  0299                     	;# 
  1755  029A                     	;# 
  1756  029B                     	;# 
  1757  029C                     	;# 
  1758  029C                     	;# 
  1759  029D                     	;# 
  1760  030C                     	;# 
  1761  030C                     	;# 
  1762  030D                     	;# 
  1763  030E                     	;# 
  1764  030F                     	;# 
  1765  0310                     	;# 
  1766  0310                     	;# 
  1767  0311                     	;# 
  1768  0312                     	;# 
  1769  0313                     	;# 
  1770  0314                     	;# 
  1771  0314                     	;# 
  1772  0315                     	;# 
  1773  0316                     	;# 
  1774  0317                     	;# 
  1775  0318                     	;# 
  1776  0318                     	;# 
  1777  0319                     	;# 
  1778  031A                     	;# 
  1779  031B                     	;# 
  1780  031C                     	;# 
  1781  031C                     	;# 
  1782  031D                     	;# 
  1783  031E                     	;# 
  1784  031F                     	;# 
  1785  038C                     	;# 
  1786  038D                     	;# 
  1787  038E                     	;# 
  1788  0390                     	;# 
  1789  0391                     	;# 
  1790  0392                     	;# 
  1791  040C                     	;# 
  1792  040D                     	;# 
  1793  040E                     	;# 
  1794  040F                     	;# 
  1795  0410                     	;# 
  1796  0411                     	;# 
  1797  0416                     	;# 
  1798  0416                     	;# 
  1799  0417                     	;# 
  1800  0418                     	;# 
  1801  0418                     	;# 
  1802  0419                     	;# 
  1803  041A                     	;# 
  1804  041A                     	;# 
  1805  041B                     	;# 
  1806  041C                     	;# 
  1807  041C                     	;# 
  1808  041D                     	;# 
  1809  041E                     	;# 
  1810  041F                     	;# 
  1811  048C                     	;# 
  1812  048C                     	;# 
  1813  048D                     	;# 
  1814  048E                     	;# 
  1815  048F                     	;# 
  1816  048F                     	;# 
  1817  0490                     	;# 
  1818  0491                     	;# 
  1819  0492                     	;# 
  1820  0492                     	;# 
  1821  0493                     	;# 
  1822  0494                     	;# 
  1823  0495                     	;# 
  1824  0495                     	;# 
  1825  0496                     	;# 
  1826  0497                     	;# 
  1827  0498                     	;# 
  1828  0499                     	;# 
  1829  049A                     	;# 
  1830  049B                     	;# 
  1831  049C                     	;# 
  1832  049D                     	;# 
  1833  050C                     	;# 
  1834  050C                     	;# 
  1835  050D                     	;# 
  1836  050E                     	;# 
  1837  050F                     	;# 
  1838  050F                     	;# 
  1839  0510                     	;# 
  1840  0511                     	;# 
  1841  0512                     	;# 
  1842  0512                     	;# 
  1843  0513                     	;# 
  1844  0514                     	;# 
  1845  0515                     	;# 
  1846  0515                     	;# 
  1847  0516                     	;# 
  1848  0517                     	;# 
  1849  0518                     	;# 
  1850  0519                     	;# 
  1851  051A                     	;# 
  1852  051B                     	;# 
  1853  051C                     	;# 
  1854  051D                     	;# 
  1855  058C                     	;# 
  1856  058C                     	;# 
  1857  058D                     	;# 
  1858  058E                     	;# 
  1859  058F                     	;# 
  1860  058F                     	;# 
  1861  0590                     	;# 
  1862  0591                     	;# 
  1863  0592                     	;# 
  1864  0593                     	;# 
  1865  060C                     	;# 
  1866  060D                     	;# 
  1867  060E                     	;# 
  1868  060F                     	;# 
  1869  0610                     	;# 
  1870  0611                     	;# 
  1871  0612                     	;# 
  1872  0613                     	;# 
  1873  0614                     	;# 
  1874  0616                     	;# 
  1875  0617                     	;# 
  1876  0618                     	;# 
  1877  0619                     	;# 
  1878  061A                     	;# 
  1879  061B                     	;# 
  1880  061C                     	;# 
  1881  061D                     	;# 
  1882  061E                     	;# 
  1883  068C                     	;# 
  1884  068D                     	;# 
  1885  068E                     	;# 
  1886  068F                     	;# 
  1887  0690                     	;# 
  1888  0691                     	;# 
  1889  0692                     	;# 
  1890  0693                     	;# 
  1891  0694                     	;# 
  1892  070C                     	;# 
  1893  070D                     	;# 
  1894  070E                     	;# 
  1895  070F                     	;# 
  1896  0710                     	;# 
  1897  0711                     	;# 
  1898  0712                     	;# 
  1899  0713                     	;# 
  1900  0714                     	;# 
  1901  0716                     	;# 
  1902  0717                     	;# 
  1903  0718                     	;# 
  1904  0719                     	;# 
  1905  071A                     	;# 
  1906  071B                     	;# 
  1907  071C                     	;# 
  1908  071D                     	;# 
  1909  071E                     	;# 
  1910  0796                     	;# 
  1911  0797                     	;# 
  1912  0798                     	;# 
  1913  0799                     	;# 
  1914  079A                     	;# 
  1915  079B                     	;# 
  1916  080C                     	;# 
  1917  080D                     	;# 
  1918  080E                     	;# 
  1919  080F                     	;# 
  1920  0810                     	;# 
  1921  0811                     	;# 
  1922  0812                     	;# 
  1923  0813                     	;# 
  1924  0814                     	;# 
  1925  081A                     	;# 
  1926  081B                     	;# 
  1927  081C                     	;# 
  1928  081D                     	;# 
  1929  081E                     	;# 
  1930  081F                     	;# 
  1931  088C                     	;# 
  1932  088D                     	;# 
  1933  088E                     	;# 
  1934  088F                     	;# 
  1935  0890                     	;# 
  1936  0891                     	;# 
  1937  0892                     	;# 
  1938  0893                     	;# 
  1939  0895                     	;# 
  1940  0896                     	;# 
  1941  0897                     	;# 
  1942  0898                     	;# 
  1943  0899                     	;# 
  1944  089A                     	;# 
  1945  089B                     	;# 
  1946  090C                     	;# 
  1947  090E                     	;# 
  1948  090F                     	;# 
  1949  091F                     	;# 
  1950  091F                     	;# 
  1951  098F                     	;# 
  1952  098F                     	;# 
  1953  0990                     	;# 
  1954  0991                     	;# 
  1955  0992                     	;# 
  1956  0993                     	;# 
  1957  0994                     	;# 
  1958  0995                     	;# 
  1959  0996                     	;# 
  1960  0997                     	;# 
  1961  0E0F                     	;# 
  1962  0E10                     	;# 
  1963  0E11                     	;# 
  1964  0E12                     	;# 
  1965  0E13                     	;# 
  1966  0E14                     	;# 
  1967  0E15                     	;# 
  1968  0E16                     	;# 
  1969  0E17                     	;# 
  1970  0E18                     	;# 
  1971  0E19                     	;# 
  1972  0E1A                     	;# 
  1973  0E1B                     	;# 
  1974  0E1C                     	;# 
  1975  0E1D                     	;# 
  1976  0E1E                     	;# 
  1977  0E1F                     	;# 
  1978  0E20                     	;# 
  1979  0E21                     	;# 
  1980  0E22                     	;# 
  1981  0E23                     	;# 
  1982  0E24                     	;# 
  1983  0E25                     	;# 
  1984  0E26                     	;# 
  1985  0E27                     	;# 
  1986  0E28                     	;# 
  1987  0E29                     	;# 
  1988  0E2A                     	;# 
  1989  0E2B                     	;# 
  1990  0E2C                     	;# 
  1991  0E2D                     	;# 
  1992  0E2E                     	;# 
  1993  0E2F                     	;# 
  1994  0E30                     	;# 
  1995  0E31                     	;# 
  1996  0E32                     	;# 
  1997  0E33                     	;# 
  1998  0E34                     	;# 
  1999  0E35                     	;# 
  2000  0E36                     	;# 
  2001  0E37                     	;# 
  2002  0E8F                     	;# 
  2003  0E90                     	;# 
  2004  0E91                     	;# 
  2005  0E92                     	;# 
  2006  0E93                     	;# 
  2007  0E94                     	;# 
  2008  0E95                     	;# 
  2009  0E96                     	;# 
  2010  0E97                     	;# 
  2011  0E9C                     	;# 
  2012  0E9D                     	;# 
  2013  0E9E                     	;# 
  2014  0EA1                     	;# 
  2015  0EA2                     	;# 
  2016  0EA3                     	;# 
  2017  0EA4                     	;# 
  2018  0EA5                     	;# 
  2019  0EA9                     	;# 
  2020  0EAA                     	;# 
  2021  0EAB                     	;# 
  2022  0EAC                     	;# 
  2023  0EB1                     	;# 
  2024  0EB2                     	;# 
  2025  0EB3                     	;# 
  2026  0EB8                     	;# 
  2027  0EB9                     	;# 
  2028  0EBA                     	;# 
  2029  0EBB                     	;# 
  2030  0EBC                     	;# 
  2031  0EBD                     	;# 
  2032  0EBE                     	;# 
  2033  0EC3                     	;# 
  2034  0EC5                     	;# 
  2035  0EC6                     	;# 
  2036  0EC7                     	;# 
  2037  0EC8                     	;# 
  2038  0EC9                     	;# 
  2039  0ECA                     	;# 
  2040  0ECB                     	;# 
  2041  0ECC                     	;# 
  2042  0F10                     	;# 
  2043  0F11                     	;# 
  2044  0F12                     	;# 
  2045  0F13                     	;# 
  2046  0F14                     	;# 
  2047  0F15                     	;# 
  2048  0F16                     	;# 
  2049  0F17                     	;# 
  2050  0F18                     	;# 
  2051  0F19                     	;# 
  2052  0F1A                     	;# 
  2053  0F1B                     	;# 
  2054  0F1C                     	;# 
  2055  0F1D                     	;# 
  2056  0F1E                     	;# 
  2057  0F1F                     	;# 
  2058  0F20                     	;# 
  2059  0F21                     	;# 
  2060  0F22                     	;# 
  2061  0F23                     	;# 
  2062  0F24                     	;# 
  2063  0F25                     	;# 
  2064  0F26                     	;# 
  2065  0F27                     	;# 
  2066  0F38                     	;# 
  2067  0F39                     	;# 
  2068  0F3A                     	;# 
  2069  0F3B                     	;# 
  2070  0F3C                     	;# 
  2071  0F3D                     	;# 
  2072  0F3E                     	;# 
  2073  0F3F                     	;# 
  2074  0F40                     	;# 
  2075  0F41                     	;# 
  2076  0F43                     	;# 
  2077  0F44                     	;# 
  2078  0F45                     	;# 
  2079  0F46                     	;# 
  2080  0F47                     	;# 
  2081  0F48                     	;# 
  2082  0F49                     	;# 
  2083  0F4A                     	;# 
  2084  0F4B                     	;# 
  2085  0F4C                     	;# 
  2086  0F4E                     	;# 
  2087  0F4F                     	;# 
  2088  0F50                     	;# 
  2089  0F51                     	;# 
  2090  0F52                     	;# 
  2091  0F53                     	;# 
  2092  0F54                     	;# 
  2093  0F55                     	;# 
  2094  0F56                     	;# 
  2095  0F57                     	;# 
  2096  0F65                     	;# 
  2097  0F68                     	;# 
  2098  0F69                     	;# 
  2099  0F6A                     	;# 
  2100  0F6B                     	;# 
  2101  0FE4                     	;# 
  2102  0FE5                     	;# 
  2103  0FE6                     	;# 
  2104  0FE7                     	;# 
  2105  0FE8                     	;# 
  2106  0FE9                     	;# 
  2107  0FEA                     	;# 
  2108  0FEB                     	;# 
  2109  0FED                     	;# 
  2110  0FEE                     	;# 
  2111  0FEF                     	;# 
  2112  0000                     	;# 
  2113  0001                     	;# 
  2114  0002                     	;# 
  2115  0003                     	;# 
  2116  0004                     	;# 
  2117  0005                     	;# 
  2118  0006                     	;# 
  2119  0007                     	;# 
  2120  0008                     	;# 
  2121  0009                     	;# 
  2122  000A                     	;# 
  2123  000B                     	;# 
  2124  000C                     	;# 
  2125  000D                     	;# 
  2126  000E                     	;# 
  2127  0010                     	;# 
  2128  0011                     	;# 
  2129  0012                     	;# 
  2130  0013                     	;# 
  2131  0016                     	;# 
  2132  0017                     	;# 
  2133  0018                     	;# 
  2134  001C                     	;# 
  2135  001C                     	;# 
  2136  001D                     	;# 
  2137  001D                     	;# 
  2138  001E                     	;# 
  2139  001F                     	;# 
  2140  008C                     	;# 
  2141  008C                     	;# 
  2142  008D                     	;# 
  2143  008E                     	;# 
  2144  008E                     	;# 
  2145  008F                     	;# 
  2146  0090                     	;# 
  2147  0090                     	;# 
  2148  0091                     	;# 
  2149  0093                     	;# 
  2150  0094                     	;# 
  2151  0095                     	;# 
  2152  0096                     	;# 
  2153  0097                     	;# 
  2154  0098                     	;# 
  2155  0099                     	;# 
  2156  009A                     	;# 
  2157  009B                     	;# 
  2158  009C                     	;# 
  2159  009D                     	;# 
  2160  009E                     	;# 
  2161  010C                     	;# 
  2162  010D                     	;# 
  2163  010E                     	;# 
  2164  010E                     	;# 
  2165  010F                     	;# 
  2166  0110                     	;# 
  2167  0110                     	;# 
  2168  0111                     	;# 
  2169  0112                     	;# 
  2170  0112                     	;# 
  2171  0113                     	;# 
  2172  0114                     	;# 
  2173  0114                     	;# 
  2174  0115                     	;# 
  2175  0116                     	;# 
  2176  0116                     	;# 
  2177  0117                     	;# 
  2178  0119                     	;# 
  2179  0119                     	;# 
  2180  0119                     	;# 
  2181  011A                     	;# 
  2182  011A                     	;# 
  2183  011A                     	;# 
  2184  011B                     	;# 
  2185  011B                     	;# 
  2186  011B                     	;# 
  2187  011B                     	;# 
  2188  011B                     	;# 
  2189  011C                     	;# 
  2190  011C                     	;# 
  2191  011C                     	;# 
  2192  011D                     	;# 
  2193  011D                     	;# 
  2194  011D                     	;# 
  2195  011E                     	;# 
  2196  011E                     	;# 
  2197  011E                     	;# 
  2198  011F                     	;# 
  2199  011F                     	;# 
  2200  011F                     	;# 
  2201  011F                     	;# 
  2202  011F                     	;# 
  2203  018C                     	;# 
  2204  018D                     	;# 
  2205  018E                     	;# 
  2206  018F                     	;# 
  2207  0190                     	;# 
  2208  0191                     	;# 
  2209  0192                     	;# 
  2210  0196                     	;# 
  2211  0197                     	;# 
  2212  0198                     	;# 
  2213  0199                     	;# 
  2214  019A                     	;# 
  2215  019B                     	;# 
  2216  019C                     	;# 
  2217  020C                     	;# 
  2218  020D                     	;# 
  2219  020E                     	;# 
  2220  020F                     	;# 
  2221  020F                     	;# 
  2222  0210                     	;# 
  2223  0210                     	;# 
  2224  0211                     	;# 
  2225  0211                     	;# 
  2226  0212                     	;# 
  2227  0213                     	;# 
  2228  0214                     	;# 
  2229  0215                     	;# 
  2230  0215                     	;# 
  2231  0216                     	;# 
  2232  0216                     	;# 
  2233  0217                     	;# 
  2234  0217                     	;# 
  2235  0218                     	;# 
  2236  0219                     	;# 
  2237  021A                     	;# 
  2238  021B                     	;# 
  2239  021B                     	;# 
  2240  021C                     	;# 
  2241  021C                     	;# 
  2242  021D                     	;# 
  2243  021D                     	;# 
  2244  021E                     	;# 
  2245  021F                     	;# 
  2246  028C                     	;# 
  2247  028C                     	;# 
  2248  028D                     	;# 
  2249  028D                     	;# 
  2250  028E                     	;# 
  2251  028F                     	;# 
  2252  0290                     	;# 
  2253  0290                     	;# 
  2254  0291                     	;# 
  2255  0292                     	;# 
  2256  0292                     	;# 
  2257  0293                     	;# 
  2258  0293                     	;# 
  2259  0294                     	;# 
  2260  0295                     	;# 
  2261  0296                     	;# 
  2262  0296                     	;# 
  2263  0297                     	;# 
  2264  0298                     	;# 
  2265  0298                     	;# 
  2266  0299                     	;# 
  2267  0299                     	;# 
  2268  029A                     	;# 
  2269  029B                     	;# 
  2270  029C                     	;# 
  2271  029C                     	;# 
  2272  029D                     	;# 
  2273  030C                     	;# 
  2274  030C                     	;# 
  2275  030D                     	;# 
  2276  030E                     	;# 
  2277  030F                     	;# 
  2278  0310                     	;# 
  2279  0310                     	;# 
  2280  0311                     	;# 
  2281  0312                     	;# 
  2282  0313                     	;# 
  2283  0314                     	;# 
  2284  0314                     	;# 
  2285  0315                     	;# 
  2286  0316                     	;# 
  2287  0317                     	;# 
  2288  0318                     	;# 
  2289  0318                     	;# 
  2290  0319                     	;# 
  2291  031A                     	;# 
  2292  031B                     	;# 
  2293  031C                     	;# 
  2294  031C                     	;# 
  2295  031D                     	;# 
  2296  031E                     	;# 
  2297  031F                     	;# 
  2298  038C                     	;# 
  2299  038D                     	;# 
  2300  038E                     	;# 
  2301  0390                     	;# 
  2302  0391                     	;# 
  2303  0392                     	;# 
  2304  040C                     	;# 
  2305  040D                     	;# 
  2306  040E                     	;# 
  2307  040F                     	;# 
  2308  0410                     	;# 
  2309  0411                     	;# 
  2310  0416                     	;# 
  2311  0416                     	;# 
  2312  0417                     	;# 
  2313  0418                     	;# 
  2314  0418                     	;# 
  2315  0419                     	;# 
  2316  041A                     	;# 
  2317  041A                     	;# 
  2318  041B                     	;# 
  2319  041C                     	;# 
  2320  041C                     	;# 
  2321  041D                     	;# 
  2322  041E                     	;# 
  2323  041F                     	;# 
  2324  048C                     	;# 
  2325  048C                     	;# 
  2326  048D                     	;# 
  2327  048E                     	;# 
  2328  048F                     	;# 
  2329  048F                     	;# 
  2330  0490                     	;# 
  2331  0491                     	;# 
  2332  0492                     	;# 
  2333  0492                     	;# 
  2334  0493                     	;# 
  2335  0494                     	;# 
  2336  0495                     	;# 
  2337  0495                     	;# 
  2338  0496                     	;# 
  2339  0497                     	;# 
  2340  0498                     	;# 
  2341  0499                     	;# 
  2342  049A                     	;# 
  2343  049B                     	;# 
  2344  049C                     	;# 
  2345  049D                     	;# 
  2346  050C                     	;# 
  2347  050C                     	;# 
  2348  050D                     	;# 
  2349  050E                     	;# 
  2350  050F                     	;# 
  2351  050F                     	;# 
  2352  0510                     	;# 
  2353  0511                     	;# 
  2354  0512                     	;# 
  2355  0512                     	;# 
  2356  0513                     	;# 
  2357  0514                     	;# 
  2358  0515                     	;# 
  2359  0515                     	;# 
  2360  0516                     	;# 
  2361  0517                     	;# 
  2362  0518                     	;# 
  2363  0519                     	;# 
  2364  051A                     	;# 
  2365  051B                     	;# 
  2366  051C                     	;# 
  2367  051D                     	;# 
  2368  058C                     	;# 
  2369  058C                     	;# 
  2370  058D                     	;# 
  2371  058E                     	;# 
  2372  058F                     	;# 
  2373  058F                     	;# 
  2374  0590                     	;# 
  2375  0591                     	;# 
  2376  0592                     	;# 
  2377  0593                     	;# 
  2378  060C                     	;# 
  2379  060D                     	;# 
  2380  060E                     	;# 
  2381  060F                     	;# 
  2382  0610                     	;# 
  2383  0611                     	;# 
  2384  0612                     	;# 
  2385  0613                     	;# 
  2386  0614                     	;# 
  2387  0616                     	;# 
  2388  0617                     	;# 
  2389  0618                     	;# 
  2390  0619                     	;# 
  2391  061A                     	;# 
  2392  061B                     	;# 
  2393  061C                     	;# 
  2394  061D                     	;# 
  2395  061E                     	;# 
  2396  068C                     	;# 
  2397  068D                     	;# 
  2398  068E                     	;# 
  2399  068F                     	;# 
  2400  0690                     	;# 
  2401  0691                     	;# 
  2402  0692                     	;# 
  2403  0693                     	;# 
  2404  0694                     	;# 
  2405  070C                     	;# 
  2406  070D                     	;# 
  2407  070E                     	;# 
  2408  070F                     	;# 
  2409  0710                     	;# 
  2410  0711                     	;# 
  2411  0712                     	;# 
  2412  0713                     	;# 
  2413  0714                     	;# 
  2414  0716                     	;# 
  2415  0717                     	;# 
  2416  0718                     	;# 
  2417  0719                     	;# 
  2418  071A                     	;# 
  2419  071B                     	;# 
  2420  071C                     	;# 
  2421  071D                     	;# 
  2422  071E                     	;# 
  2423  0796                     	;# 
  2424  0797                     	;# 
  2425  0798                     	;# 
  2426  0799                     	;# 
  2427  079A                     	;# 
  2428  079B                     	;# 
  2429  080C                     	;# 
  2430  080D                     	;# 
  2431  080E                     	;# 
  2432  080F                     	;# 
  2433  0810                     	;# 
  2434  0811                     	;# 
  2435  0812                     	;# 
  2436  0813                     	;# 
  2437  0814                     	;# 
  2438  081A                     	;# 
  2439  081B                     	;# 
  2440  081C                     	;# 
  2441  081D                     	;# 
  2442  081E                     	;# 
  2443  081F                     	;# 
  2444  088C                     	;# 
  2445  088D                     	;# 
  2446  088E                     	;# 
  2447  088F                     	;# 
  2448  0890                     	;# 
  2449  0891                     	;# 
  2450  0892                     	;# 
  2451  0893                     	;# 
  2452  0895                     	;# 
  2453  0896                     	;# 
  2454  0897                     	;# 
  2455  0898                     	;# 
  2456  0899                     	;# 
  2457  089A                     	;# 
  2458  089B                     	;# 
  2459  090C                     	;# 
  2460  090E                     	;# 
  2461  090F                     	;# 
  2462  091F                     	;# 
  2463  091F                     	;# 
  2464  098F                     	;# 
  2465  098F                     	;# 
  2466  0990                     	;# 
  2467  0991                     	;# 
  2468  0992                     	;# 
  2469  0993                     	;# 
  2470  0994                     	;# 
  2471  0995                     	;# 
  2472  0996                     	;# 
  2473  0997                     	;# 
  2474  0E0F                     	;# 
  2475  0E10                     	;# 
  2476  0E11                     	;# 
  2477  0E12                     	;# 
  2478  0E13                     	;# 
  2479  0E14                     	;# 
  2480  0E15                     	;# 
  2481  0E16                     	;# 
  2482  0E17                     	;# 
  2483  0E18                     	;# 
  2484  0E19                     	;# 
  2485  0E1A                     	;# 
  2486  0E1B                     	;# 
  2487  0E1C                     	;# 
  2488  0E1D                     	;# 
  2489  0E1E                     	;# 
  2490  0E1F                     	;# 
  2491  0E20                     	;# 
  2492  0E21                     	;# 
  2493  0E22                     	;# 
  2494  0E23                     	;# 
  2495  0E24                     	;# 
  2496  0E25                     	;# 
  2497  0E26                     	;# 
  2498  0E27                     	;# 
  2499  0E28                     	;# 
  2500  0E29                     	;# 
  2501  0E2A                     	;# 
  2502  0E2B                     	;# 
  2503  0E2C                     	;# 
  2504  0E2D                     	;# 
  2505  0E2E                     	;# 
  2506  0E2F                     	;# 
  2507  0E30                     	;# 
  2508  0E31                     	;# 
  2509  0E32                     	;# 
  2510  0E33                     	;# 
  2511  0E34                     	;# 
  2512  0E35                     	;# 
  2513  0E36                     	;# 
  2514  0E37                     	;# 
  2515  0E8F                     	;# 
  2516  0E90                     	;# 
  2517  0E91                     	;# 
  2518  0E92                     	;# 
  2519  0E93                     	;# 
  2520  0E94                     	;# 
  2521  0E95                     	;# 
  2522  0E96                     	;# 
  2523  0E97                     	;# 
  2524  0E9C                     	;# 
  2525  0E9D                     	;# 
  2526  0E9E                     	;# 
  2527  0EA1                     	;# 
  2528  0EA2                     	;# 
  2529  0EA3                     	;# 
  2530  0EA4                     	;# 
  2531  0EA5                     	;# 
  2532  0EA9                     	;# 
  2533  0EAA                     	;# 
  2534  0EAB                     	;# 
  2535  0EAC                     	;# 
  2536  0EB1                     	;# 
  2537  0EB2                     	;# 
  2538  0EB3                     	;# 
  2539  0EB8                     	;# 
  2540  0EB9                     	;# 
  2541  0EBA                     	;# 
  2542  0EBB                     	;# 
  2543  0EBC                     	;# 
  2544  0EBD                     	;# 
  2545  0EBE                     	;# 
  2546  0EC3                     	;# 
  2547  0EC5                     	;# 
  2548  0EC6                     	;# 
  2549  0EC7                     	;# 
  2550  0EC8                     	;# 
  2551  0EC9                     	;# 
  2552  0ECA                     	;# 
  2553  0ECB                     	;# 
  2554  0ECC                     	;# 
  2555  0F10                     	;# 
  2556  0F11                     	;# 
  2557  0F12                     	;# 
  2558  0F13                     	;# 
  2559  0F14                     	;# 
  2560  0F15                     	;# 
  2561  0F16                     	;# 
  2562  0F17                     	;# 
  2563  0F18                     	;# 
  2564  0F19                     	;# 
  2565  0F1A                     	;# 
  2566  0F1B                     	;# 
  2567  0F1C                     	;# 
  2568  0F1D                     	;# 
  2569  0F1E                     	;# 
  2570  0F1F                     	;# 
  2571  0F20                     	;# 
  2572  0F21                     	;# 
  2573  0F22                     	;# 
  2574  0F23                     	;# 
  2575  0F24                     	;# 
  2576  0F25                     	;# 
  2577  0F26                     	;# 
  2578  0F27                     	;# 
  2579  0F38                     	;# 
  2580  0F39                     	;# 
  2581  0F3A                     	;# 
  2582  0F3B                     	;# 
  2583  0F3C                     	;# 
  2584  0F3D                     	;# 
  2585  0F3E                     	;# 
  2586  0F3F                     	;# 
  2587  0F40                     	;# 
  2588  0F41                     	;# 
  2589  0F43                     	;# 
  2590  0F44                     	;# 
  2591  0F45                     	;# 
  2592  0F46                     	;# 
  2593  0F47                     	;# 
  2594  0F48                     	;# 
  2595  0F49                     	;# 
  2596  0F4A                     	;# 
  2597  0F4B                     	;# 
  2598  0F4C                     	;# 
  2599  0F4E                     	;# 
  2600  0F4F                     	;# 
  2601  0F50                     	;# 
  2602  0F51                     	;# 
  2603  0F52                     	;# 
  2604  0F53                     	;# 
  2605  0F54                     	;# 
  2606  0F55                     	;# 
  2607  0F56                     	;# 
  2608  0F57                     	;# 
  2609  0F65                     	;# 
  2610  0F68                     	;# 
  2611  0F69                     	;# 
  2612  0F6A                     	;# 
  2613  0F6B                     	;# 
  2614  0FE4                     	;# 
  2615  0FE5                     	;# 
  2616  0FE6                     	;# 
  2617  0FE7                     	;# 
  2618  0FE8                     	;# 
  2619  0FE9                     	;# 
  2620  0FEA                     	;# 
  2621  0FEB                     	;# 
  2622  0FED                     	;# 
  2623  0FEE                     	;# 
  2624  0FEF                     	;# 
  2625  0000                     	;# 
  2626  0001                     	;# 
  2627  0002                     	;# 
  2628  0003                     	;# 
  2629  0004                     	;# 
  2630  0005                     	;# 
  2631  0006                     	;# 
  2632  0007                     	;# 
  2633  0008                     	;# 
  2634  0009                     	;# 
  2635  000A                     	;# 
  2636  000B                     	;# 
  2637  000C                     	;# 
  2638  000D                     	;# 
  2639  000E                     	;# 
  2640  0010                     	;# 
  2641  0011                     	;# 
  2642  0012                     	;# 
  2643  0013                     	;# 
  2644  0016                     	;# 
  2645  0017                     	;# 
  2646  0018                     	;# 
  2647  001C                     	;# 
  2648  001C                     	;# 
  2649  001D                     	;# 
  2650  001D                     	;# 
  2651  001E                     	;# 
  2652  001F                     	;# 
  2653  008C                     	;# 
  2654  008C                     	;# 
  2655  008D                     	;# 
  2656  008E                     	;# 
  2657  008E                     	;# 
  2658  008F                     	;# 
  2659  0090                     	;# 
  2660  0090                     	;# 
  2661  0091                     	;# 
  2662  0093                     	;# 
  2663  0094                     	;# 
  2664  0095                     	;# 
  2665  0096                     	;# 
  2666  0097                     	;# 
  2667  0098                     	;# 
  2668  0099                     	;# 
  2669  009A                     	;# 
  2670  009B                     	;# 
  2671  009C                     	;# 
  2672  009D                     	;# 
  2673  009E                     	;# 
  2674  010C                     	;# 
  2675  010D                     	;# 
  2676  010E                     	;# 
  2677  010E                     	;# 
  2678  010F                     	;# 
  2679  0110                     	;# 
  2680  0110                     	;# 
  2681  0111                     	;# 
  2682  0112                     	;# 
  2683  0112                     	;# 
  2684  0113                     	;# 
  2685  0114                     	;# 
  2686  0114                     	;# 
  2687  0115                     	;# 
  2688  0116                     	;# 
  2689  0116                     	;# 
  2690  0117                     	;# 
  2691  0119                     	;# 
  2692  0119                     	;# 
  2693  0119                     	;# 
  2694  011A                     	;# 
  2695  011A                     	;# 
  2696  011A                     	;# 
  2697  011B                     	;# 
  2698  011B                     	;# 
  2699  011B                     	;# 
  2700  011B                     	;# 
  2701  011B                     	;# 
  2702  011C                     	;# 
  2703  011C                     	;# 
  2704  011C                     	;# 
  2705  011D                     	;# 
  2706  011D                     	;# 
  2707  011D                     	;# 
  2708  011E                     	;# 
  2709  011E                     	;# 
  2710  011E                     	;# 
  2711  011F                     	;# 
  2712  011F                     	;# 
  2713  011F                     	;# 
  2714  011F                     	;# 
  2715  011F                     	;# 
  2716  018C                     	;# 
  2717  018D                     	;# 
  2718  018E                     	;# 
  2719  018F                     	;# 
  2720  0190                     	;# 
  2721  0191                     	;# 
  2722  0192                     	;# 
  2723  0196                     	;# 
  2724  0197                     	;# 
  2725  0198                     	;# 
  2726  0199                     	;# 
  2727  019A                     	;# 
  2728  019B                     	;# 
  2729  019C                     	;# 
  2730  020C                     	;# 
  2731  020D                     	;# 
  2732  020E                     	;# 
  2733  020F                     	;# 
  2734  020F                     	;# 
  2735  0210                     	;# 
  2736  0210                     	;# 
  2737  0211                     	;# 
  2738  0211                     	;# 
  2739  0212                     	;# 
  2740  0213                     	;# 
  2741  0214                     	;# 
  2742  0215                     	;# 
  2743  0215                     	;# 
  2744  0216                     	;# 
  2745  0216                     	;# 
  2746  0217                     	;# 
  2747  0217                     	;# 
  2748  0218                     	;# 
  2749  0219                     	;# 
  2750  021A                     	;# 
  2751  021B                     	;# 
  2752  021B                     	;# 
  2753  021C                     	;# 
  2754  021C                     	;# 
  2755  021D                     	;# 
  2756  021D                     	;# 
  2757  021E                     	;# 
  2758  021F                     	;# 
  2759  028C                     	;# 
  2760  028C                     	;# 
  2761  028D                     	;# 
  2762  028D                     	;# 
  2763  028E                     	;# 
  2764  028F                     	;# 
  2765  0290                     	;# 
  2766  0290                     	;# 
  2767  0291                     	;# 
  2768  0292                     	;# 
  2769  0292                     	;# 
  2770  0293                     	;# 
  2771  0293                     	;# 
  2772  0294                     	;# 
  2773  0295                     	;# 
  2774  0296                     	;# 
  2775  0296                     	;# 
  2776  0297                     	;# 
  2777  0298                     	;# 
  2778  0298                     	;# 
  2779  0299                     	;# 
  2780  0299                     	;# 
  2781  029A                     	;# 
  2782  029B                     	;# 
  2783  029C                     	;# 
  2784  029C                     	;# 
  2785  029D                     	;# 
  2786  030C                     	;# 
  2787  030C                     	;# 
  2788  030D                     	;# 
  2789  030E                     	;# 
  2790  030F                     	;# 
  2791  0310                     	;# 
  2792  0310                     	;# 
  2793  0311                     	;# 
  2794  0312                     	;# 
  2795  0313                     	;# 
  2796  0314                     	;# 
  2797  0314                     	;# 
  2798  0315                     	;# 
  2799  0316                     	;# 
  2800  0317                     	;# 
  2801  0318                     	;# 
  2802  0318                     	;# 
  2803  0319                     	;# 
  2804  031A                     	;# 
  2805  031B                     	;# 
  2806  031C                     	;# 
  2807  031C                     	;# 
  2808  031D                     	;# 
  2809  031E                     	;# 
  2810  031F                     	;# 
  2811  038C                     	;# 
  2812  038D                     	;# 
  2813  038E                     	;# 
  2814  0390                     	;# 
  2815  0391                     	;# 
  2816  0392                     	;# 
  2817  040C                     	;# 
  2818  040D                     	;# 
  2819  040E                     	;# 
  2820  040F                     	;# 
  2821  0410                     	;# 
  2822  0411                     	;# 
  2823  0416                     	;# 
  2824  0416                     	;# 
  2825  0417                     	;# 
  2826  0418                     	;# 
  2827  0418                     	;# 
  2828  0419                     	;# 
  2829  041A                     	;# 
  2830  041A                     	;# 
  2831  041B                     	;# 
  2832  041C                     	;# 
  2833  041C                     	;# 
  2834  041D                     	;# 
  2835  041E                     	;# 
  2836  041F                     	;# 
  2837  048C                     	;# 
  2838  048C                     	;# 
  2839  048D                     	;# 
  2840  048E                     	;# 
  2841  048F                     	;# 
  2842  048F                     	;# 
  2843  0490                     	;# 
  2844  0491                     	;# 
  2845  0492                     	;# 
  2846  0492                     	;# 
  2847  0493                     	;# 
  2848  0494                     	;# 
  2849  0495                     	;# 
  2850  0495                     	;# 
  2851  0496                     	;# 
  2852  0497                     	;# 
  2853  0498                     	;# 
  2854  0499                     	;# 
  2855  049A                     	;# 
  2856  049B                     	;# 
  2857  049C                     	;# 
  2858  049D                     	;# 
  2859  050C                     	;# 
  2860  050C                     	;# 
  2861  050D                     	;# 
  2862  050E                     	;# 
  2863  050F                     	;# 
  2864  050F                     	;# 
  2865  0510                     	;# 
  2866  0511                     	;# 
  2867  0512                     	;# 
  2868  0512                     	;# 
  2869  0513                     	;# 
  2870  0514                     	;# 
  2871  0515                     	;# 
  2872  0515                     	;# 
  2873  0516                     	;# 
  2874  0517                     	;# 
  2875  0518                     	;# 
  2876  0519                     	;# 
  2877  051A                     	;# 
  2878  051B                     	;# 
  2879  051C                     	;# 
  2880  051D                     	;# 
  2881  058C                     	;# 
  2882  058C                     	;# 
  2883  058D                     	;# 
  2884  058E                     	;# 
  2885  058F                     	;# 
  2886  058F                     	;# 
  2887  0590                     	;# 
  2888  0591                     	;# 
  2889  0592                     	;# 
  2890  0593                     	;# 
  2891  060C                     	;# 
  2892  060D                     	;# 
  2893  060E                     	;# 
  2894  060F                     	;# 
  2895  0610                     	;# 
  2896  0611                     	;# 
  2897  0612                     	;# 
  2898  0613                     	;# 
  2899  0614                     	;# 
  2900  0616                     	;# 
  2901  0617                     	;# 
  2902  0618                     	;# 
  2903  0619                     	;# 
  2904  061A                     	;# 
  2905  061B                     	;# 
  2906  061C                     	;# 
  2907  061D                     	;# 
  2908  061E                     	;# 
  2909  068C                     	;# 
  2910  068D                     	;# 
  2911  068E                     	;# 
  2912  068F                     	;# 
  2913  0690                     	;# 
  2914  0691                     	;# 
  2915  0692                     	;# 
  2916  0693                     	;# 
  2917  0694                     	;# 
  2918  070C                     	;# 
  2919  070D                     	;# 
  2920  070E                     	;# 
  2921  070F                     	;# 
  2922  0710                     	;# 
  2923  0711                     	;# 
  2924  0712                     	;# 
  2925  0713                     	;# 
  2926  0714                     	;# 
  2927  0716                     	;# 
  2928  0717                     	;# 
  2929  0718                     	;# 
  2930  0719                     	;# 
  2931  071A                     	;# 
  2932  071B                     	;# 
  2933  071C                     	;# 
  2934  071D                     	;# 
  2935  071E                     	;# 
  2936  0796                     	;# 
  2937  0797                     	;# 
  2938  0798                     	;# 
  2939  0799                     	;# 
  2940  079A                     	;# 
  2941  079B                     	;# 
  2942  080C                     	;# 
  2943  080D                     	;# 
  2944  080E                     	;# 
  2945  080F                     	;# 
  2946  0810                     	;# 
  2947  0811                     	;# 
  2948  0812                     	;# 
  2949  0813                     	;# 
  2950  0814                     	;# 
  2951  081A                     	;# 
  2952  081B                     	;# 
  2953  081C                     	;# 
  2954  081D                     	;# 
  2955  081E                     	;# 
  2956  081F                     	;# 
  2957  088C                     	;# 
  2958  088D                     	;# 
  2959  088E                     	;# 
  2960  088F                     	;# 
  2961  0890                     	;# 
  2962  0891                     	;# 
  2963  0892                     	;# 
  2964  0893                     	;# 
  2965  0895                     	;# 
  2966  0896                     	;# 
  2967  0897                     	;# 
  2968  0898                     	;# 
  2969  0899                     	;# 
  2970  089A                     	;# 
  2971  089B                     	;# 
  2972  090C                     	;# 
  2973  090E                     	;# 
  2974  090F                     	;# 
  2975  091F                     	;# 
  2976  091F                     	;# 
  2977  098F                     	;# 
  2978  098F                     	;# 
  2979  0990                     	;# 
  2980  0991                     	;# 
  2981  0992                     	;# 
  2982  0993                     	;# 
  2983  0994                     	;# 
  2984  0995                     	;# 
  2985  0996                     	;# 
  2986  0997                     	;# 
  2987  0E0F                     	;# 
  2988  0E10                     	;# 
  2989  0E11                     	;# 
  2990  0E12                     	;# 
  2991  0E13                     	;# 
  2992  0E14                     	;# 
  2993  0E15                     	;# 
  2994  0E16                     	;# 
  2995  0E17                     	;# 
  2996  0E18                     	;# 
  2997  0E19                     	;# 
  2998  0E1A                     	;# 
  2999  0E1B                     	;# 
  3000  0E1C                     	;# 
  3001  0E1D                     	;# 
  3002  0E1E                     	;# 
  3003  0E1F                     	;# 
  3004  0E20                     	;# 
  3005  0E21                     	;# 
  3006  0E22                     	;# 
  3007  0E23                     	;# 
  3008  0E24                     	;# 
  3009  0E25                     	;# 
  3010  0E26                     	;# 
  3011  0E27                     	;# 
  3012  0E28                     	;# 
  3013  0E29                     	;# 
  3014  0E2A                     	;# 
  3015  0E2B                     	;# 
  3016  0E2C                     	;# 
  3017  0E2D                     	;# 
  3018  0E2E                     	;# 
  3019  0E2F                     	;# 
  3020  0E30                     	;# 
  3021  0E31                     	;# 
  3022  0E32                     	;# 
  3023  0E33                     	;# 
  3024  0E34                     	;# 
  3025  0E35                     	;# 
  3026  0E36                     	;# 
  3027  0E37                     	;# 
  3028  0E8F                     	;# 
  3029  0E90                     	;# 
  3030  0E91                     	;# 
  3031  0E92                     	;# 
  3032  0E93                     	;# 
  3033  0E94                     	;# 
  3034  0E95                     	;# 
  3035  0E96                     	;# 
  3036  0E97                     	;# 
  3037  0E9C                     	;# 
  3038  0E9D                     	;# 
  3039  0E9E                     	;# 
  3040  0EA1                     	;# 
  3041  0EA2                     	;# 
  3042  0EA3                     	;# 
  3043  0EA4                     	;# 
  3044  0EA5                     	;# 
  3045  0EA9                     	;# 
  3046  0EAA                     	;# 
  3047  0EAB                     	;# 
  3048  0EAC                     	;# 
  3049  0EB1                     	;# 
  3050  0EB2                     	;# 
  3051  0EB3                     	;# 
  3052  0EB8                     	;# 
  3053  0EB9                     	;# 
  3054  0EBA                     	;# 
  3055  0EBB                     	;# 
  3056  0EBC                     	;# 
  3057  0EBD                     	;# 
  3058  0EBE                     	;# 
  3059  0EC3                     	;# 
  3060  0EC5                     	;# 
  3061  0EC6                     	;# 
  3062  0EC7                     	;# 
  3063  0EC8                     	;# 
  3064  0EC9                     	;# 
  3065  0ECA                     	;# 
  3066  0ECB                     	;# 
  3067  0ECC                     	;# 
  3068  0F10                     	;# 
  3069  0F11                     	;# 
  3070  0F12                     	;# 
  3071  0F13                     	;# 
  3072  0F14                     	;# 
  3073  0F15                     	;# 
  3074  0F16                     	;# 
  3075  0F17                     	;# 
  3076  0F18                     	;# 
  3077  0F19                     	;# 
  3078  0F1A                     	;# 
  3079  0F1B                     	;# 
  3080  0F1C                     	;# 
  3081  0F1D                     	;# 
  3082  0F1E                     	;# 
  3083  0F1F                     	;# 
  3084  0F20                     	;# 
  3085  0F21                     	;# 
  3086  0F22                     	;# 
  3087  0F23                     	;# 
  3088  0F24                     	;# 
  3089  0F25                     	;# 
  3090  0F26                     	;# 
  3091  0F27                     	;# 
  3092  0F38                     	;# 
  3093  0F39                     	;# 
  3094  0F3A                     	;# 
  3095  0F3B                     	;# 
  3096  0F3C                     	;# 
  3097  0F3D                     	;# 
  3098  0F3E                     	;# 
  3099  0F3F                     	;# 
  3100  0F40                     	;# 
  3101  0F41                     	;# 
  3102  0F43                     	;# 
  3103  0F44                     	;# 
  3104  0F45                     	;# 
  3105  0F46                     	;# 
  3106  0F47                     	;# 
  3107  0F48                     	;# 
  3108  0F49                     	;# 
  3109  0F4A                     	;# 
  3110  0F4B                     	;# 
  3111  0F4C                     	;# 
  3112  0F4E                     	;# 
  3113  0F4F                     	;# 
  3114  0F50                     	;# 
  3115  0F51                     	;# 
  3116  0F52                     	;# 
  3117  0F53                     	;# 
  3118  0F54                     	;# 
  3119  0F55                     	;# 
  3120  0F56                     	;# 
  3121  0F57                     	;# 
  3122  0F65                     	;# 
  3123  0F68                     	;# 
  3124  0F69                     	;# 
  3125  0F6A                     	;# 
  3126  0F6B                     	;# 
  3127  0FE4                     	;# 
  3128  0FE5                     	;# 
  3129  0FE6                     	;# 
  3130  0FE7                     	;# 
  3131  0FE8                     	;# 
  3132  0FE9                     	;# 
  3133  0FEA                     	;# 
  3134  0FEB                     	;# 
  3135  0FED                     	;# 
  3136  0FEE                     	;# 
  3137  0FEF                     	;# 
  3138  0000                     	;# 
  3139  0001                     	;# 
  3140  0002                     	;# 
  3141  0003                     	;# 
  3142  0004                     	;# 
  3143  0005                     	;# 
  3144  0006                     	;# 
  3145  0007                     	;# 
  3146  0008                     	;# 
  3147  0009                     	;# 
  3148  000A                     	;# 
  3149  000B                     	;# 
  3150  000C                     	;# 
  3151  000D                     	;# 
  3152  000E                     	;# 
  3153  0010                     	;# 
  3154  0011                     	;# 
  3155  0012                     	;# 
  3156  0013                     	;# 
  3157  0016                     	;# 
  3158  0017                     	;# 
  3159  0018                     	;# 
  3160  001C                     	;# 
  3161  001C                     	;# 
  3162  001D                     	;# 
  3163  001D                     	;# 
  3164  001E                     	;# 
  3165  001F                     	;# 
  3166  008C                     	;# 
  3167  008C                     	;# 
  3168  008D                     	;# 
  3169  008E                     	;# 
  3170  008E                     	;# 
  3171  008F                     	;# 
  3172  0090                     	;# 
  3173  0090                     	;# 
  3174  0091                     	;# 
  3175  0093                     	;# 
  3176  0094                     	;# 
  3177  0095                     	;# 
  3178  0096                     	;# 
  3179  0097                     	;# 
  3180  0098                     	;# 
  3181  0099                     	;# 
  3182  009A                     	;# 
  3183  009B                     	;# 
  3184  009C                     	;# 
  3185  009D                     	;# 
  3186  009E                     	;# 
  3187  010C                     	;# 
  3188  010D                     	;# 
  3189  010E                     	;# 
  3190  010E                     	;# 
  3191  010F                     	;# 
  3192  0110                     	;# 
  3193  0110                     	;# 
  3194  0111                     	;# 
  3195  0112                     	;# 
  3196  0112                     	;# 
  3197  0113                     	;# 
  3198  0114                     	;# 
  3199  0114                     	;# 
  3200  0115                     	;# 
  3201  0116                     	;# 
  3202  0116                     	;# 
  3203  0117                     	;# 
  3204  0119                     	;# 
  3205  0119                     	;# 
  3206  0119                     	;# 
  3207  011A                     	;# 
  3208  011A                     	;# 
  3209  011A                     	;# 
  3210  011B                     	;# 
  3211  011B                     	;# 
  3212  011B                     	;# 
  3213  011B                     	;# 
  3214  011B                     	;# 
  3215  011C                     	;# 
  3216  011C                     	;# 
  3217  011C                     	;# 
  3218  011D                     	;# 
  3219  011D                     	;# 
  3220  011D                     	;# 
  3221  011E                     	;# 
  3222  011E                     	;# 
  3223  011E                     	;# 
  3224  011F                     	;# 
  3225  011F                     	;# 
  3226  011F                     	;# 
  3227  011F                     	;# 
  3228  011F                     	;# 
  3229  018C                     	;# 
  3230  018D                     	;# 
  3231  018E                     	;# 
  3232  018F                     	;# 
  3233  0190                     	;# 
  3234  0191                     	;# 
  3235  0192                     	;# 
  3236  0196                     	;# 
  3237  0197                     	;# 
  3238  0198                     	;# 
  3239  0199                     	;# 
  3240  019A                     	;# 
  3241  019B                     	;# 
  3242  019C                     	;# 
  3243  020C                     	;# 
  3244  020D                     	;# 
  3245  020E                     	;# 
  3246  020F                     	;# 
  3247  020F                     	;# 
  3248  0210                     	;# 
  3249  0210                     	;# 
  3250  0211                     	;# 
  3251  0211                     	;# 
  3252  0212                     	;# 
  3253  0213                     	;# 
  3254  0214                     	;# 
  3255  0215                     	;# 
  3256  0215                     	;# 
  3257  0216                     	;# 
  3258  0216                     	;# 
  3259  0217                     	;# 
  3260  0217                     	;# 
  3261  0218                     	;# 
  3262  0219                     	;# 
  3263  021A                     	;# 
  3264  021B                     	;# 
  3265  021B                     	;# 
  3266  021C                     	;# 
  3267  021C                     	;# 
  3268  021D                     	;# 
  3269  021D                     	;# 
  3270  021E                     	;# 
  3271  021F                     	;# 
  3272  028C                     	;# 
  3273  028C                     	;# 
  3274  028D                     	;# 
  3275  028D                     	;# 
  3276  028E                     	;# 
  3277  028F                     	;# 
  3278  0290                     	;# 
  3279  0290                     	;# 
  3280  0291                     	;# 
  3281  0292                     	;# 
  3282  0292                     	;# 
  3283  0293                     	;# 
  3284  0293                     	;# 
  3285  0294                     	;# 
  3286  0295                     	;# 
  3287  0296                     	;# 
  3288  0296                     	;# 
  3289  0297                     	;# 
  3290  0298                     	;# 
  3291  0298                     	;# 
  3292  0299                     	;# 
  3293  0299                     	;# 
  3294  029A                     	;# 
  3295  029B                     	;# 
  3296  029C                     	;# 
  3297  029C                     	;# 
  3298  029D                     	;# 
  3299  030C                     	;# 
  3300  030C                     	;# 
  3301  030D                     	;# 
  3302  030E                     	;# 
  3303  030F                     	;# 
  3304  0310                     	;# 
  3305  0310                     	;# 
  3306  0311                     	;# 
  3307  0312                     	;# 
  3308  0313                     	;# 
  3309  0314                     	;# 
  3310  0314                     	;# 
  3311  0315                     	;# 
  3312  0316                     	;# 
  3313  0317                     	;# 
  3314  0318                     	;# 
  3315  0318                     	;# 
  3316  0319                     	;# 
  3317  031A                     	;# 
  3318  031B                     	;# 
  3319  031C                     	;# 
  3320  031C                     	;# 
  3321  031D                     	;# 
  3322  031E                     	;# 
  3323  031F                     	;# 
  3324  038C                     	;# 
  3325  038D                     	;# 
  3326  038E                     	;# 
  3327  0390                     	;# 
  3328  0391                     	;# 
  3329  0392                     	;# 
  3330  040C                     	;# 
  3331  040D                     	;# 
  3332  040E                     	;# 
  3333  040F                     	;# 
  3334  0410                     	;# 
  3335  0411                     	;# 
  3336  0416                     	;# 
  3337  0416                     	;# 
  3338  0417                     	;# 
  3339  0418                     	;# 
  3340  0418                     	;# 
  3341  0419                     	;# 
  3342  041A                     	;# 
  3343  041A                     	;# 
  3344  041B                     	;# 
  3345  041C                     	;# 
  3346  041C                     	;# 
  3347  041D                     	;# 
  3348  041E                     	;# 
  3349  041F                     	;# 
  3350  048C                     	;# 
  3351  048C                     	;# 
  3352  048D                     	;# 
  3353  048E                     	;# 
  3354  048F                     	;# 
  3355  048F                     	;# 
  3356  0490                     	;# 
  3357  0491                     	;# 
  3358  0492                     	;# 
  3359  0492                     	;# 
  3360  0493                     	;# 
  3361  0494                     	;# 
  3362  0495                     	;# 
  3363  0495                     	;# 
  3364  0496                     	;# 
  3365  0497                     	;# 
  3366  0498                     	;# 
  3367  0499                     	;# 
  3368  049A                     	;# 
  3369  049B                     	;# 
  3370  049C                     	;# 
  3371  049D                     	;# 
  3372  050C                     	;# 
  3373  050C                     	;# 
  3374  050D                     	;# 
  3375  050E                     	;# 
  3376  050F                     	;# 
  3377  050F                     	;# 
  3378  0510                     	;# 
  3379  0511                     	;# 
  3380  0512                     	;# 
  3381  0512                     	;# 
  3382  0513                     	;# 
  3383  0514                     	;# 
  3384  0515                     	;# 
  3385  0515                     	;# 
  3386  0516                     	;# 
  3387  0517                     	;# 
  3388  0518                     	;# 
  3389  0519                     	;# 
  3390  051A                     	;# 
  3391  051B                     	;# 
  3392  051C                     	;# 
  3393  051D                     	;# 
  3394  058C                     	;# 
  3395  058C                     	;# 
  3396  058D                     	;# 
  3397  058E                     	;# 
  3398  058F                     	;# 
  3399  058F                     	;# 
  3400  0590                     	;# 
  3401  0591                     	;# 
  3402  0592                     	;# 
  3403  0593                     	;# 
  3404  060C                     	;# 
  3405  060D                     	;# 
  3406  060E                     	;# 
  3407  060F                     	;# 
  3408  0610                     	;# 
  3409  0611                     	;# 
  3410  0612                     	;# 
  3411  0613                     	;# 
  3412  0614                     	;# 
  3413  0616                     	;# 
  3414  0617                     	;# 
  3415  0618                     	;# 
  3416  0619                     	;# 
  3417  061A                     	;# 
  3418  061B                     	;# 
  3419  061C                     	;# 
  3420  061D                     	;# 
  3421  061E                     	;# 
  3422  068C                     	;# 
  3423  068D                     	;# 
  3424  068E                     	;# 
  3425  068F                     	;# 
  3426  0690                     	;# 
  3427  0691                     	;# 
  3428  0692                     	;# 
  3429  0693                     	;# 
  3430  0694                     	;# 
  3431  070C                     	;# 
  3432  070D                     	;# 
  3433  070E                     	;# 
  3434  070F                     	;# 
  3435  0710                     	;# 
  3436  0711                     	;# 
  3437  0712                     	;# 
  3438  0713                     	;# 
  3439  0714                     	;# 
  3440  0716                     	;# 
  3441  0717                     	;# 
  3442  0718                     	;# 
  3443  0719                     	;# 
  3444  071A                     	;# 
  3445  071B                     	;# 
  3446  071C                     	;# 
  3447  071D                     	;# 
  3448  071E                     	;# 
  3449  0796                     	;# 
  3450  0797                     	;# 
  3451  0798                     	;# 
  3452  0799                     	;# 
  3453  079A                     	;# 
  3454  079B                     	;# 
  3455  080C                     	;# 
  3456  080D                     	;# 
  3457  080E                     	;# 
  3458  080F                     	;# 
  3459  0810                     	;# 
  3460  0811                     	;# 
  3461  0812                     	;# 
  3462  0813                     	;# 
  3463  0814                     	;# 
  3464  081A                     	;# 
  3465  081B                     	;# 
  3466  081C                     	;# 
  3467  081D                     	;# 
  3468  081E                     	;# 
  3469  081F                     	;# 
  3470  088C                     	;# 
  3471  088D                     	;# 
  3472  088E                     	;# 
  3473  088F                     	;# 
  3474  0890                     	;# 
  3475  0891                     	;# 
  3476  0892                     	;# 
  3477  0893                     	;# 
  3478  0895                     	;# 
  3479  0896                     	;# 
  3480  0897                     	;# 
  3481  0898                     	;# 
  3482  0899                     	;# 
  3483  089A                     	;# 
  3484  089B                     	;# 
  3485  090C                     	;# 
  3486  090E                     	;# 
  3487  090F                     	;# 
  3488  091F                     	;# 
  3489  091F                     	;# 
  3490  098F                     	;# 
  3491  098F                     	;# 
  3492  0990                     	;# 
  3493  0991                     	;# 
  3494  0992                     	;# 
  3495  0993                     	;# 
  3496  0994                     	;# 
  3497  0995                     	;# 
  3498  0996                     	;# 
  3499  0997                     	;# 
  3500  0E0F                     	;# 
  3501  0E10                     	;# 
  3502  0E11                     	;# 
  3503  0E12                     	;# 
  3504  0E13                     	;# 
  3505  0E14                     	;# 
  3506  0E15                     	;# 
  3507  0E16                     	;# 
  3508  0E17                     	;# 
  3509  0E18                     	;# 
  3510  0E19                     	;# 
  3511  0E1A                     	;# 
  3512  0E1B                     	;# 
  3513  0E1C                     	;# 
  3514  0E1D                     	;# 
  3515  0E1E                     	;# 
  3516  0E1F                     	;# 
  3517  0E20                     	;# 
  3518  0E21                     	;# 
  3519  0E22                     	;# 
  3520  0E23                     	;# 
  3521  0E24                     	;# 
  3522  0E25                     	;# 
  3523  0E26                     	;# 
  3524  0E27                     	;# 
  3525  0E28                     	;# 
  3526  0E29                     	;# 
  3527  0E2A                     	;# 
  3528  0E2B                     	;# 
  3529  0E2C                     	;# 
  3530  0E2D                     	;# 
  3531  0E2E                     	;# 
  3532  0E2F                     	;# 
  3533  0E30                     	;# 
  3534  0E31                     	;# 
  3535  0E32                     	;# 
  3536  0E33                     	;# 
  3537  0E34                     	;# 
  3538  0E35                     	;# 
  3539  0E36                     	;# 
  3540  0E37                     	;# 
  3541  0E8F                     	;# 
  3542  0E90                     	;# 
  3543  0E91                     	;# 
  3544  0E92                     	;# 
  3545  0E93                     	;# 
  3546  0E94                     	;# 
  3547  0E95                     	;# 
  3548  0E96                     	;# 
  3549  0E97                     	;# 
  3550  0E9C                     	;# 
  3551  0E9D                     	;# 
  3552  0E9E                     	;# 
  3553  0EA1                     	;# 
  3554  0EA2                     	;# 
  3555  0EA3                     	;# 
  3556  0EA4                     	;# 
  3557  0EA5                     	;# 
  3558  0EA9                     	;# 
  3559  0EAA                     	;# 
  3560  0EAB                     	;# 
  3561  0EAC                     	;# 
  3562  0EB1                     	;# 
  3563  0EB2                     	;# 
  3564  0EB3                     	;# 
  3565  0EB8                     	;# 
  3566  0EB9                     	;# 
  3567  0EBA                     	;# 
  3568  0EBB                     	;# 
  3569  0EBC                     	;# 
  3570  0EBD                     	;# 
  3571  0EBE                     	;# 
  3572  0EC3                     	;# 
  3573  0EC5                     	;# 
  3574  0EC6                     	;# 
  3575  0EC7                     	;# 
  3576  0EC8                     	;# 
  3577  0EC9                     	;# 
  3578  0ECA                     	;# 
  3579  0ECB                     	;# 
  3580  0ECC                     	;# 
  3581  0F10                     	;# 
  3582  0F11                     	;# 
  3583  0F12                     	;# 
  3584  0F13                     	;# 
  3585  0F14                     	;# 
  3586  0F15                     	;# 
  3587  0F16                     	;# 
  3588  0F17                     	;# 
  3589  0F18                     	;# 
  3590  0F19                     	;# 
  3591  0F1A                     	;# 
  3592  0F1B                     	;# 
  3593  0F1C                     	;# 
  3594  0F1D                     	;# 
  3595  0F1E                     	;# 
  3596  0F1F                     	;# 
  3597  0F20                     	;# 
  3598  0F21                     	;# 
  3599  0F22                     	;# 
  3600  0F23                     	;# 
  3601  0F24                     	;# 
  3602  0F25                     	;# 
  3603  0F26                     	;# 
  3604  0F27                     	;# 
  3605  0F38                     	;# 
  3606  0F39                     	;# 
  3607  0F3A                     	;# 
  3608  0F3B                     	;# 
  3609  0F3C                     	;# 
  3610  0F3D                     	;# 
  3611  0F3E                     	;# 
  3612  0F3F                     	;# 
  3613  0F40                     	;# 
  3614  0F41                     	;# 
  3615  0F43                     	;# 
  3616  0F44                     	;# 
  3617  0F45                     	;# 
  3618  0F46                     	;# 
  3619  0F47                     	;# 
  3620  0F48                     	;# 
  3621  0F49                     	;# 
  3622  0F4A                     	;# 
  3623  0F4B                     	;# 
  3624  0F4C                     	;# 
  3625  0F4E                     	;# 
  3626  0F4F                     	;# 
  3627  0F50                     	;# 
  3628  0F51                     	;# 
  3629  0F52                     	;# 
  3630  0F53                     	;# 
  3631  0F54                     	;# 
  3632  0F55                     	;# 
  3633  0F56                     	;# 
  3634  0F57                     	;# 
  3635  0F65                     	;# 
  3636  0F68                     	;# 
  3637  0F69                     	;# 
  3638  0F6A                     	;# 
  3639  0F6B                     	;# 
  3640  0FE4                     	;# 
  3641  0FE5                     	;# 
  3642  0FE6                     	;# 
  3643  0FE7                     	;# 
  3644  0FE8                     	;# 
  3645  0FE9                     	;# 
  3646  0FEA                     	;# 
  3647  0FEB                     	;# 
  3648  0FED                     	;# 
  3649  0FEE                     	;# 
  3650  0FEF                     	;# 
  3651  0000                     	;# 
  3652  0001                     	;# 
  3653  0002                     	;# 
  3654  0003                     	;# 
  3655  0004                     	;# 
  3656  0005                     	;# 
  3657  0006                     	;# 
  3658  0007                     	;# 
  3659  0008                     	;# 
  3660  0009                     	;# 
  3661  000A                     	;# 
  3662  000B                     	;# 
  3663  000C                     	;# 
  3664  000D                     	;# 
  3665  000E                     	;# 
  3666  0010                     	;# 
  3667  0011                     	;# 
  3668  0012                     	;# 
  3669  0013                     	;# 
  3670  0016                     	;# 
  3671  0017                     	;# 
  3672  0018                     	;# 
  3673  001C                     	;# 
  3674  001C                     	;# 
  3675  001D                     	;# 
  3676  001D                     	;# 
  3677  001E                     	;# 
  3678  001F                     	;# 
  3679  008C                     	;# 
  3680  008C                     	;# 
  3681  008D                     	;# 
  3682  008E                     	;# 
  3683  008E                     	;# 
  3684  008F                     	;# 
  3685  0090                     	;# 
  3686  0090                     	;# 
  3687  0091                     	;# 
  3688  0093                     	;# 
  3689  0094                     	;# 
  3690  0095                     	;# 
  3691  0096                     	;# 
  3692  0097                     	;# 
  3693  0098                     	;# 
  3694  0099                     	;# 
  3695  009A                     	;# 
  3696  009B                     	;# 
  3697  009C                     	;# 
  3698  009D                     	;# 
  3699  009E                     	;# 
  3700  010C                     	;# 
  3701  010D                     	;# 
  3702  010E                     	;# 
  3703  010E                     	;# 
  3704  010F                     	;# 
  3705  0110                     	;# 
  3706  0110                     	;# 
  3707  0111                     	;# 
  3708  0112                     	;# 
  3709  0112                     	;# 
  3710  0113                     	;# 
  3711  0114                     	;# 
  3712  0114                     	;# 
  3713  0115                     	;# 
  3714  0116                     	;# 
  3715  0116                     	;# 
  3716  0117                     	;# 
  3717  0119                     	;# 
  3718  0119                     	;# 
  3719  0119                     	;# 
  3720  011A                     	;# 
  3721  011A                     	;# 
  3722  011A                     	;# 
  3723  011B                     	;# 
  3724  011B                     	;# 
  3725  011B                     	;# 
  3726  011B                     	;# 
  3727  011B                     	;# 
  3728  011C                     	;# 
  3729  011C                     	;# 
  3730  011C                     	;# 
  3731  011D                     	;# 
  3732  011D                     	;# 
  3733  011D                     	;# 
  3734  011E                     	;# 
  3735  011E                     	;# 
  3736  011E                     	;# 
  3737  011F                     	;# 
  3738  011F                     	;# 
  3739  011F                     	;# 
  3740  011F                     	;# 
  3741  011F                     	;# 
  3742  018C                     	;# 
  3743  018D                     	;# 
  3744  018E                     	;# 
  3745  018F                     	;# 
  3746  0190                     	;# 
  3747  0191                     	;# 
  3748  0192                     	;# 
  3749  0196                     	;# 
  3750  0197                     	;# 
  3751  0198                     	;# 
  3752  0199                     	;# 
  3753  019A                     	;# 
  3754  019B                     	;# 
  3755  019C                     	;# 
  3756  020C                     	;# 
  3757  020D                     	;# 
  3758  020E                     	;# 
  3759  020F                     	;# 
  3760  020F                     	;# 
  3761  0210                     	;# 
  3762  0210                     	;# 
  3763  0211                     	;# 
  3764  0211                     	;# 
  3765  0212                     	;# 
  3766  0213                     	;# 
  3767  0214                     	;# 
  3768  0215                     	;# 
  3769  0215                     	;# 
  3770  0216                     	;# 
  3771  0216                     	;# 
  3772  0217                     	;# 
  3773  0217                     	;# 
  3774  0218                     	;# 
  3775  0219                     	;# 
  3776  021A                     	;# 
  3777  021B                     	;# 
  3778  021B                     	;# 
  3779  021C                     	;# 
  3780  021C                     	;# 
  3781  021D                     	;# 
  3782  021D                     	;# 
  3783  021E                     	;# 
  3784  021F                     	;# 
  3785  028C                     	;# 
  3786  028C                     	;# 
  3787  028D                     	;# 
  3788  028D                     	;# 
  3789  028E                     	;# 
  3790  028F                     	;# 
  3791  0290                     	;# 
  3792  0290                     	;# 
  3793  0291                     	;# 
  3794  0292                     	;# 
  3795  0292                     	;# 
  3796  0293                     	;# 
  3797  0293                     	;# 
  3798  0294                     	;# 
  3799  0295                     	;# 
  3800  0296                     	;# 
  3801  0296                     	;# 
  3802  0297                     	;# 
  3803  0298                     	;# 
  3804  0298                     	;# 
  3805  0299                     	;# 
  3806  0299                     	;# 
  3807  029A                     	;# 
  3808  029B                     	;# 
  3809  029C                     	;# 
  3810  029C                     	;# 
  3811  029D                     	;# 
  3812  030C                     	;# 
  3813  030C                     	;# 
  3814  030D                     	;# 
  3815  030E                     	;# 
  3816  030F                     	;# 
  3817  0310                     	;# 
  3818  0310                     	;# 
  3819  0311                     	;# 
  3820  0312                     	;# 
  3821  0313                     	;# 
  3822  0314                     	;# 
  3823  0314                     	;# 
  3824  0315                     	;# 
  3825  0316                     	;# 
  3826  0317                     	;# 
  3827  0318                     	;# 
  3828  0318                     	;# 
  3829  0319                     	;# 
  3830  031A                     	;# 
  3831  031B                     	;# 
  3832  031C                     	;# 
  3833  031C                     	;# 
  3834  031D                     	;# 
  3835  031E                     	;# 
  3836  031F                     	;# 
  3837  038C                     	;# 
  3838  038D                     	;# 
  3839  038E                     	;# 
  3840  0390                     	;# 
  3841  0391                     	;# 
  3842  0392                     	;# 
  3843  040C                     	;# 
  3844  040D                     	;# 
  3845  040E                     	;# 
  3846  040F                     	;# 
  3847  0410                     	;# 
  3848  0411                     	;# 
  3849  0416                     	;# 
  3850  0416                     	;# 
  3851  0417                     	;# 
  3852  0418                     	;# 
  3853  0418                     	;# 
  3854  0419                     	;# 
  3855  041A                     	;# 
  3856  041A                     	;# 
  3857  041B                     	;# 
  3858  041C                     	;# 
  3859  041C                     	;# 
  3860  041D                     	;# 
  3861  041E                     	;# 
  3862  041F                     	;# 
  3863  048C                     	;# 
  3864  048C                     	;# 
  3865  048D                     	;# 
  3866  048E                     	;# 
  3867  048F                     	;# 
  3868  048F                     	;# 
  3869  0490                     	;# 
  3870  0491                     	;# 
  3871  0492                     	;# 
  3872  0492                     	;# 
  3873  0493                     	;# 
  3874  0494                     	;# 
  3875  0495                     	;# 
  3876  0495                     	;# 
  3877  0496                     	;# 
  3878  0497                     	;# 
  3879  0498                     	;# 
  3880  0499                     	;# 
  3881  049A                     	;# 
  3882  049B                     	;# 
  3883  049C                     	;# 
  3884  049D                     	;# 
  3885  050C                     	;# 
  3886  050C                     	;# 
  3887  050D                     	;# 
  3888  050E                     	;# 
  3889  050F                     	;# 
  3890  050F                     	;# 
  3891  0510                     	;# 
  3892  0511                     	;# 
  3893  0512                     	;# 
  3894  0512                     	;# 
  3895  0513                     	;# 
  3896  0514                     	;# 
  3897  0515                     	;# 
  3898  0515                     	;# 
  3899  0516                     	;# 
  3900  0517                     	;# 
  3901  0518                     	;# 
  3902  0519                     	;# 
  3903  051A                     	;# 
  3904  051B                     	;# 
  3905  051C                     	;# 
  3906  051D                     	;# 
  3907  058C                     	;# 
  3908  058C                     	;# 
  3909  058D                     	;# 
  3910  058E                     	;# 
  3911  058F                     	;# 
  3912  058F                     	;# 
  3913  0590                     	;# 
  3914  0591                     	;# 
  3915  0592                     	;# 
  3916  0593                     	;# 
  3917  060C                     	;# 
  3918  060D                     	;# 
  3919  060E                     	;# 
  3920  060F                     	;# 
  3921  0610                     	;# 
  3922  0611                     	;# 
  3923  0612                     	;# 
  3924  0613                     	;# 
  3925  0614                     	;# 
  3926  0616                     	;# 
  3927  0617                     	;# 
  3928  0618                     	;# 
  3929  0619                     	;# 
  3930  061A                     	;# 
  3931  061B                     	;# 
  3932  061C                     	;# 
  3933  061D                     	;# 
  3934  061E                     	;# 
  3935  068C                     	;# 
  3936  068D                     	;# 
  3937  068E                     	;# 
  3938  068F                     	;# 
  3939  0690                     	;# 
  3940  0691                     	;# 
  3941  0692                     	;# 
  3942  0693                     	;# 
  3943  0694                     	;# 
  3944  070C                     	;# 
  3945  070D                     	;# 
  3946  070E                     	;# 
  3947  070F                     	;# 
  3948  0710                     	;# 
  3949  0711                     	;# 
  3950  0712                     	;# 
  3951  0713                     	;# 
  3952  0714                     	;# 
  3953  0716                     	;# 
  3954  0717                     	;# 
  3955  0718                     	;# 
  3956  0719                     	;# 
  3957  071A                     	;# 
  3958  071B                     	;# 
  3959  071C                     	;# 
  3960  071D                     	;# 
  3961  071E                     	;# 
  3962  0796                     	;# 
  3963  0797                     	;# 
  3964  0798                     	;# 
  3965  0799                     	;# 
  3966  079A                     	;# 
  3967  079B                     	;# 
  3968  080C                     	;# 
  3969  080D                     	;# 
  3970  080E                     	;# 
  3971  080F                     	;# 
  3972  0810                     	;# 
  3973  0811                     	;# 
  3974  0812                     	;# 
  3975  0813                     	;# 
  3976  0814                     	;# 
  3977  081A                     	;# 
  3978  081B                     	;# 
  3979  081C                     	;# 
  3980  081D                     	;# 
  3981  081E                     	;# 
  3982  081F                     	;# 
  3983  088C                     	;# 
  3984  088D                     	;# 
  3985  088E                     	;# 
  3986  088F                     	;# 
  3987  0890                     	;# 
  3988  0891                     	;# 
  3989  0892                     	;# 
  3990  0893                     	;# 
  3991  0895                     	;# 
  3992  0896                     	;# 
  3993  0897                     	;# 
  3994  0898                     	;# 
  3995  0899                     	;# 
  3996  089A                     	;# 
  3997  089B                     	;# 
  3998  090C                     	;# 
  3999  090E                     	;# 
  4000  090F                     	;# 
  4001  091F                     	;# 
  4002  091F                     	;# 
  4003  098F                     	;# 
  4004  098F                     	;# 
  4005  0990                     	;# 
  4006  0991                     	;# 
  4007  0992                     	;# 
  4008  0993                     	;# 
  4009  0994                     	;# 
  4010  0995                     	;# 
  4011  0996                     	;# 
  4012  0997                     	;# 
  4013  0E0F                     	;# 
  4014  0E10                     	;# 
  4015  0E11                     	;# 
  4016  0E12                     	;# 
  4017  0E13                     	;# 
  4018  0E14                     	;# 
  4019  0E15                     	;# 
  4020  0E16                     	;# 
  4021  0E17                     	;# 
  4022  0E18                     	;# 
  4023  0E19                     	;# 
  4024  0E1A                     	;# 
  4025  0E1B                     	;# 
  4026  0E1C                     	;# 
  4027  0E1D                     	;# 
  4028  0E1E                     	;# 
  4029  0E1F                     	;# 
  4030  0E20                     	;# 
  4031  0E21                     	;# 
  4032  0E22                     	;# 
  4033  0E23                     	;# 
  4034  0E24                     	;# 
  4035  0E25                     	;# 
  4036  0E26                     	;# 
  4037  0E27                     	;# 
  4038  0E28                     	;# 
  4039  0E29                     	;# 
  4040  0E2A                     	;# 
  4041  0E2B                     	;# 
  4042  0E2C                     	;# 
  4043  0E2D                     	;# 
  4044  0E2E                     	;# 
  4045  0E2F                     	;# 
  4046  0E30                     	;# 
  4047  0E31                     	;# 
  4048  0E32                     	;# 
  4049  0E33                     	;# 
  4050  0E34                     	;# 
  4051  0E35                     	;# 
  4052  0E36                     	;# 
  4053  0E37                     	;# 
  4054  0E8F                     	;# 
  4055  0E90                     	;# 
  4056  0E91                     	;# 
  4057  0E92                     	;# 
  4058  0E93                     	;# 
  4059  0E94                     	;# 
  4060  0E95                     	;# 
  4061  0E96                     	;# 
  4062  0E97                     	;# 
  4063  0E9C                     	;# 
  4064  0E9D                     	;# 
  4065  0E9E                     	;# 
  4066  0EA1                     	;# 
  4067  0EA2                     	;# 
  4068  0EA3                     	;# 
  4069  0EA4                     	;# 
  4070  0EA5                     	;# 
  4071  0EA9                     	;# 
  4072  0EAA                     	;# 
  4073  0EAB                     	;# 
  4074  0EAC                     	;# 
  4075  0EB1                     	;# 
  4076  0EB2                     	;# 
  4077  0EB3                     	;# 
  4078  0EB8                     	;# 
  4079  0EB9                     	;# 
  4080  0EBA                     	;# 
  4081  0EBB                     	;# 
  4082  0EBC                     	;# 
  4083  0EBD                     	;# 
  4084  0EBE                     	;# 
  4085  0EC3                     	;# 
  4086  0EC5                     	;# 
  4087  0EC6                     	;# 
  4088  0EC7                     	;# 
  4089  0EC8                     	;# 
  4090  0EC9                     	;# 
  4091  0ECA                     	;# 
  4092  0ECB                     	;# 
  4093  0ECC                     	;# 
  4094  0F10                     	;# 
  4095  0F11                     	;# 
  4096  0F12                     	;# 
  4097  0F13                     	;# 
  4098  0F14                     	;# 
  4099  0F15                     	;# 
  4100  0F16                     	;# 
  4101  0F17                     	;# 
  4102  0F18                     	;# 
  4103  0F19                     	;# 
  4104  0F1A                     	;# 
  4105  0F1B                     	;# 
  4106  0F1C                     	;# 
  4107  0F1D                     	;# 
  4108  0F1E                     	;# 
  4109  0F1F                     	;# 
  4110  0F20                     	;# 
  4111  0F21                     	;# 
  4112  0F22                     	;# 
  4113  0F23                     	;# 
  4114  0F24                     	;# 
  4115  0F25                     	;# 
  4116  0F26                     	;# 
  4117  0F27                     	;# 
  4118  0F38                     	;# 
  4119  0F39                     	;# 
  4120  0F3A                     	;# 
  4121  0F3B                     	;# 
  4122  0F3C                     	;# 
  4123  0F3D                     	;# 
  4124  0F3E                     	;# 
  4125  0F3F                     	;# 
  4126  0F40                     	;# 
  4127  0F41                     	;# 
  4128  0F43                     	;# 
  4129  0F44                     	;# 
  4130  0F45                     	;# 
  4131  0F46                     	;# 
  4132  0F47                     	;# 
  4133  0F48                     	;# 
  4134  0F49                     	;# 
  4135  0F4A                     	;# 
  4136  0F4B                     	;# 
  4137  0F4C                     	;# 
  4138  0F4E                     	;# 
  4139  0F4F                     	;# 
  4140  0F50                     	;# 
  4141  0F51                     	;# 
  4142  0F52                     	;# 
  4143  0F53                     	;# 
  4144  0F54                     	;# 
  4145  0F55                     	;# 
  4146  0F56                     	;# 
  4147  0F57                     	;# 
  4148  0F65                     	;# 
  4149  0F68                     	;# 
  4150  0F69                     	;# 
  4151  0F6A                     	;# 
  4152  0F6B                     	;# 
  4153  0FE4                     	;# 
  4154  0FE5                     	;# 
  4155  0FE6                     	;# 
  4156  0FE7                     	;# 
  4157  0FE8                     	;# 
  4158  0FE9                     	;# 
  4159  0FEA                     	;# 
  4160  0FEB                     	;# 
  4161  0FED                     	;# 
  4162  0FEE                     	;# 
  4163  0FEF                     	;_samples
  4164                           
  4165                           	psect	idataBANK1
  4166  1673                     __pidataBANK1:	
  4167                           
  4168                           ;initializer for _channels
  4169  1673  3401               	retlw	1
  4170  1674  3400               	retlw	0
  4171  1675  3403               	retlw	3
  4172  1676  3400               	retlw	0
  4173  1677  3404               	retlw	4
  4174  1678  3400               	retlw	0
  4175  1679  3405               	retlw	5
  4176  167A  3400               	retlw	0
  4177  167B  3409               	retlw	9
  4178  167C  3400               	retlw	0
  4179  167D  340B               	retlw	11
  4180  167E  3400               	retlw	0
  4181                           
  4182                           	psect	idataBANK2
  4183  169B                     __pidataBANK2:	
  4184                           
  4185                           ;initializer for ___cgram
  4186  169B  340C               	retlw	12
  4187  169C  3412               	retlw	18
  4188  169D  3412               	retlw	18
  4189  169E  340C               	retlw	12
  4190  169F  3400               	retlw	0
  4191  16A0  3400               	retlw	0
  4192  16A1  3400               	retlw	0
  4193  16A2  3400               	retlw	0
  4194  16A3  3408               	retlw	8
  4195  16A4  3404               	retlw	4
  4196  16A5  3402               	retlw	2
  4197  16A6  341F               	retlw	31
  4198  16A7  3402               	retlw	2
  4199  16A8  3404               	retlw	4
  4200  16A9  3408               	retlw	8
  4201  16AA  3400               	retlw	0
  4202                           
  4203                           	psect	stringtext
  4204  1000                     __pstringtext:	
  4205  1000                     log@coeff:	
  4206  1000  3400               	retlw	0
  4207  1001  3400               	retlw	0
  4208  1002  3400               	retlw	0
  4209  1003  3400               	retlw	0
  4210  1004  3480               	retlw	128
  4211  1005  343F               	retlw	63
  4212  1006  34F0               	retlw	240
  4213  1007  34FF               	retlw	255
  4214  1008  34BE               	retlw	190
  4215  1009  34E2               	retlw	226
  4216  100A  34A9               	retlw	169
  4217  100B  343E               	retlw	62
  4218  100C  3483               	retlw	131
  4219  100D  3476               	retlw	118
  4220  100E  34BE               	retlw	190
  4221  100F  34AE               	retlw	174
  4222  1010  342B               	retlw	43
  4223  1011  343E               	retlw	62
  4224  1012  343C               	retlw	60
  4225  1013  34C3               	retlw	195
  4226  1014  34BD               	retlw	189
  4227  1015  34D2               	retlw	210
  4228  1016  3413               	retlw	19
  4229  1017  343D               	retlw	61
  4230  1018  3478               	retlw	120
  4231  1019  34D3               	retlw	211
  4232  101A  34BB               	retlw	187
  4233  101B                     __end_oflog@coeff:	
  4234  0016                     _LATA	set	22
  4235  0017                     _LATB	set	23
  4236  0018                     _LATC	set	24
  4237  0011                     _TRISA	set	17
  4238  0012                     _TRISB	set	18
  4239  0013                     _TRISC	set	19
  4240  005F                     _GIE	set	95
  4241  0060                     _RA0	set	96
  4242  0062                     _RA2	set	98
  4243  0066                     _RA6	set	102
  4244  0067                     _RA7	set	103
  4245  0070                     _RC0	set	112
  4246  0071                     _RC1	set	113
  4247  009D                     _ADACQ	set	157
  4248  0099                     _ADACT	set	153
  4249  009B                     _ADCAP	set	155
  4250  0098                     _ADCLK	set	152
  4251  0093                     _ADCON0	set	147
  4252  0093                     _ADCON0bits	set	147
  4253  0094                     _ADCON1	set	148
  4254  0095                     _ADCON2	set	149
  4255  0096                     _ADCON3	set	150
  4256  009E                     _ADPCH	set	158
  4257  009C                     _ADPRE	set	156
  4258  009A                     _ADREF	set	154
  4259  008D                     _ADRESH	set	141
  4260  008C                     _ADRESL	set	140
  4261  0097                     _ADSTAT	set	151
  4262  010F                     _ADLTHH	set	271
  4263  010E                     _ADLTHL	set	270
  4264  010D                     _ADRPT	set	269
  4265  0113                     _ADSTPTH	set	275
  4266  0112                     _ADSTPTL	set	274
  4267  0111                     _ADUTHH	set	273
  4268  0110                     _ADUTHL	set	272
  4269  021F                     _CCPTMRS1bits	set	543
  4270  0290                     _T2CLKCON	set	656
  4271  028E                     _T2CON	set	654
  4272  028E                     _T2CONbits	set	654
  4273  028F                     _T2HLT	set	655
  4274  028D                     _T2PR	set	653
  4275  0291                     _T2RST	set	657
  4276  028C                     _T2TMR	set	652
  4277  038E                     _PWM6CON	set	910
  4278  038D                     _PWM6DCH	set	909
  4279  038C                     _PWM6DCL	set	908
  4280  0716                     _PIE0bits	set	1814
  4281  0710                     _PIR4bits	set	1808
  4282  088D                     _OSCCON1	set	2189
  4283  088F                     _OSCCON3	set	2191
  4284  0891                     _OSCEN	set	2193
  4285  0893                     _OSCFRQ	set	2195
  4286  0892                     _OSCTUNE	set	2194
  4287  090C                     _FVRCON	set	2316
  4288  0E8F                     _PPSLOCK	set	3727
  4289  0E8F                     _PPSLOCKbits	set	3727
  4290  0F38                     _ANSELA	set	3896
  4291  0F43                     _ANSELB	set	3907
  4292  0F4E                     _ANSELC	set	3918
  4293  0F22                     _RC2PPS	set	3874
  4294  0F39                     _WPUA	set	3897
  4295  0F44                     _WPUB	set	3908
  4296  0F4F                     _WPUC	set	3919
  4297  0F65                     _WPUE	set	3941
  4298  101B                     STR_27:	
  4299  101B  3442               	retlw	66	;'B'
  4300  101C  3461               	retlw	97	;'a'
  4301  101D  3463               	retlw	99	;'c'
  4302  101E  346B               	retlw	107	;'k'
  4303  101F  344C               	retlw	76	;'L'
  4304  1020  3469               	retlw	105	;'i'
  4305  1021  3467               	retlw	103	;'g'
  4306  1022  3468               	retlw	104	;'h'
  4307  1023  3474               	retlw	116	;'t'
  4308  1024  343A               	retlw	58	;':'
  4309  1025  3400               	retlw	0
  4310  1026                     STR_30:	
  4311  1026  3453               	retlw	83	;'S'
  4312  1027  346F               	retlw	111	;'o'
  4313  1028  346C               	retlw	108	;'l'
  4314  1029  3461               	retlw	97	;'a'
  4315  102A  3472               	retlw	114	;'r'
  4316  102B  3400               	retlw	0
  4317  102C                     STR_32:	
  4318  102C  3450               	retlw	80	;'P'
  4319  102D  346F               	retlw	111	;'o'
  4320  102E  346F               	retlw	111	;'o'
  4321  102F  346C               	retlw	108	;'l'
  4322  1030  3400               	retlw	0
  4323  1031                     STR_31:	
  4324  1031  344F               	retlw	79	;'O'
  4325  1032  3475               	retlw	117	;'u'
  4326  1033  3474               	retlw	116	;'t'
  4327  1034  3400               	retlw	0
  4328  1035                     STR_29:	
  4329  1035  3449               	retlw	73	;'I'
  4330  1036  346E               	retlw	110	;'n'
  4331  1037  3400               	retlw	0
  4332  1038                     STR_6:	
  4333  1038  3420               	retlw	32	;' '
  4334  1039  3400               	retlw	0
  4335  103A                     STR_26:	
  4336  103A  3421               	retlw	33	;'!'
  4337  103B  3400               	retlw	0
  4338  103C                     STR_20:	
  4339  103C  3426               	retlw	38	;'&'
  4340  103D  3400               	retlw	0
  4341  103E                     STR_12:	
  4342  103E  342C               	retlw	44	;','
  4343  103F  3400               	retlw	0
  4344  1040                     STR_1:	
  4345  1040  3441               	retlw	65	;'A'
  4346  1041  3400               	retlw	0
  4347  1042                     STR_7:	
  4348  1042  3444               	retlw	68	;'D'
  4349  1043  3400               	retlw	0
  4350  1044                     STR_18:	
  4351  1044  3445               	retlw	69	;'E'
  4352  1045  3400               	retlw	0
  4353  1046                     STR_4:	
  4354  1046  3448               	retlw	72	;'H'
  4355  1047  3400               	retlw	0
  4356  1048                     STR_10:	
  4357  1048  3449               	retlw	73	;'I'
  4358  1049  3400               	retlw	0
  4359  104A                     STR_22:	
  4360  104A  344B               	retlw	75	;'K'
  4361  104B  3400               	retlw	0
  4362  104C                     STR_2:	
  4363  104C  344C               	retlw	76	;'L'
  4364  104D  3400               	retlw	0
  4365  104E                     STR_3:	
  4366  104E  344F               	retlw	79	;'O'
  4367  104F  3400               	retlw	0
  4368  1050                     STR_15:	
  4369  1050  3450               	retlw	80	;'P'
  4370  1051  3400               	retlw	0
  4371  1052                     STR_13:	
  4372  1052  3453               	retlw	83	;'S'
  4373  1053  3400               	retlw	0
  4374  1054                     STR_9:	
  4375  1054  3456               	retlw	86	;'V'
  4376  1055  3400               	retlw	0
  4377  1038                     
  4378                           ; #config settings
  4379  0000                     
  4380                           	psect	cinit
  4381  07BD                     start_initialization:	
  4382  07BD                     __initialization:		;BIGRAM
  4383                           
  4384                           ; Initialize objects allocated to BANK1
  4385  07BD  3073               	movlw	low __pidataBANK1
  4386  07BE  0084               	movwf	4
  4387  07BF  3096               	movlw	(high __pidataBANK1)| (0+128)
  4388  07C0  0085               	movwf	5
  4389  07C1  30DA               	movlw	low __pdataBANK1
  4390  07C2  0086               	movwf	6
  4391  07C3  3000               	movlw	high __pdataBANK1
  4392  07C4  0087               	movwf	7
  4393  07C5  3000               	movlw	0
  4394  07C6  00FF               	movwf	btemp+1
  4395  07C7  300C               	movlw	12
  4396  07C8  3196  2667  3187   	fcall	init_ram
  4397                           
  4398                           ; Initialize objects allocated to BANK2
  4399  07CB  309B               	movlw	low __pidataBANK2
  4400  07CC  0084               	movwf	4
  4401  07CD  3096               	movlw	(high __pidataBANK2)| (0+128)
  4402  07CE  0085               	movwf	5
  4403  07CF  3020               	movlw	low __pdataBANK2
  4404  07D0  0086               	movwf	6
  4405  07D1  3001               	movlw	high __pdataBANK2
  4406  07D2  0087               	movwf	7
  4407  07D3  3000               	movlw	0
  4408  07D4  00FF               	movwf	btemp+1
  4409  07D5  3010               	movlw	16
  4410  07D6  3196  2667  3187   	fcall	init_ram
  4411                           
  4412                           ; Clear objects allocated to BIGRAM
  4413  07D9  3000               	movlw	low (0+8960)
  4414  07DA  0084               	movwf	4
  4415  07DB  3023               	movlw	high (0+8960)
  4416  07DC  0085               	movwf	5
  4417  07DD  30F0               	movlw	240
  4418  07DE  00FE               	movwf	btemp
  4419  07DF  3000               	movlw	0
  4420  07E0  00FF               	movwf	btemp+1
  4421  07E1  3196  265B  3187   	fcall	clear_ram0
  4422                           
  4423                           ; Clear objects allocated to BANK0
  4424  07E4  01EC               	clrf	__pbssBANK0& (0+127)
  4425  07E5  01ED               	clrf	(__pbssBANK0+1)& (0+127)
  4426  07E6  01EE               	clrf	(__pbssBANK0+2)& (0+127)
  4427  07E7  01EF               	clrf	(__pbssBANK0+3)& (0+127)
  4428                           
  4429                           ; Clear objects allocated to BANK1
  4430  07E8  30A0               	movlw	low __pbssBANK1
  4431  07E9  0084               	movwf	4
  4432  07EA  3000               	movlw	high __pbssBANK1
  4433  07EB  0085               	movwf	5
  4434  07EC  301D               	movlw	29
  4435  07ED  00FE               	movwf	btemp
  4436  07EE  3000               	movlw	0
  4437  07EF  00FF               	movwf	btemp+1
  4438  07F0  3196  265B  3187   	fcall	clear_ram0
  4439                           
  4440                           ; Clear objects allocated to BANK2
  4441  07F3  3030               	movlw	low __pbssBANK2
  4442  07F4  0084               	movwf	4
  4443  07F5  3001               	movlw	high __pbssBANK2
  4444  07F6  0085               	movwf	5
  4445  07F7  300C               	movlw	12
  4446  07F8  00FE               	movwf	btemp
  4447  07F9  3000               	movlw	0
  4448  07FA  00FF               	movwf	btemp+1
  4449  07FB  3196  265B         	fcall	clear_ram0
  4450  07FD                     end_of_initialization:	
  4451                           ;End of C runtime variable initialization code
  4452                           
  4453  07FD                     __end_of__initialization:	
  4454  07FD  0020               	movlb	0
  4455  07FE  3182  2A02         	ljmp	_main	;jump to C main() function
  4456                           
  4457                           	psect	bssBANK0
  4458  006C                     __pbssBANK0:	
  4459  006C                     _errno:	
  4460  006C                     	ds	2
  4461  006E                     _sampleIndex:	
  4462  006E                     	ds	2
  4463                           
  4464                           	psect	bssBANK1
  4465  00A0                     __pbssBANK1:	
  4466  00A0                     _totals:	
  4467  00A0                     	ds	24
  4468  00B8                     LCD_Write_Int@F13687:	
  4469  00B8                     	ds	5
  4470                           
  4471                           	psect	dataBANK1
  4472  00DA                     __pdataBANK1:	
  4473  00DA                     _channels:	
  4474  00DA                     	ds	12
  4475                           
  4476                           	psect	bssBANK2
  4477  0130                     __pbssBANK2:	
  4478  0130                     main@F13657:	
  4479  0130                     	ds	12
  4480                           
  4481                           	psect	dataBANK2
  4482  0120                     __pdataBANK2:	
  4483  0120                     ___cgram:	
  4484  0120                     	ds	16
  4485                           
  4486                           	psect	inittext
  4487  1667                     init_ram:	
  4488  1667  00FE               	movwf	126
  4489  1668                     initloop:	
  4490  1668  0012               	moviw fsr0++
  4491  1669  001E               	movwi fsr1++
  4492  166A  3001               	movlw	1
  4493  166B  02FE               	subwf	126,f
  4494  166C  3000               	movlw	0
  4495  166D  3BFF               	subwfb	127,f
  4496  166E  087F               	movf	127,w
  4497  166F  047E               	iorwf	126,w
  4498  1670  1903               	btfsc	3,2
  4499  1671  3400               	retlw	0
  4500  1672  2E68               	goto	initloop
  4501                           
  4502                           	psect	clrtext
  4503  165B                     clear_ram0:	
  4504                           ;	Called with FSR0 containing the base address, and
  4505                           ;	btemp/btemp+1 has the size to clear
  4506                           
  4507  165B  0064               	clrwdt	;clear the watchdog before getting into this loop
  4508  165C                     clrloop0:	
  4509  165C  0180               	clrf	0	;clear RAM location pointed to by FSR
  4510  165D  3101               	addfsr 0,1
  4511  165E  3001               	movlw	1
  4512  165F  02FE               	subwf	126,f
  4513  1660  3000               	movlw	0
  4514  1661  3BFF               	subwfb	127,f
  4515  1662  087F               	movf	127,w
  4516  1663  047E               	iorwf	126,w
  4517  1664  1903               	btfsc	3,2
  4518  1665  3400               	retlw	0	;all done for this memory range, return
  4519  1666  2E5C               	goto	clrloop0	;have we reached the end yet?
  4520                           
  4521                           	psect	cstackBANK1
  4522  00BD                     __pcstackBANK1:	
  4523  00BD                     main@loop:	
  4524                           
  4525                           ; 1 bytes @ 0x0
  4526  00BD                     	ds	1
  4527  00BE                     main@startDelay:	
  4528                           
  4529                           ; 1 bytes @ 0x1
  4530  00BE                     	ds	1
  4531  00BF                     main@analogs:	
  4532                           
  4533                           ; 12 bytes @ 0x2
  4534  00BF                     	ds	12
  4535  00CB                     main@bCount:	
  4536                           
  4537                           ; 2 bytes @ 0xE
  4538  00CB                     	ds	2
  4539  00CD                     main@displayTemp:	
  4540                           
  4541                           ; 3 bytes @ 0x10
  4542  00CD                     	ds	3
  4543  00D0                     main@displayTemp2:	
  4544                           
  4545                           ; 3 bytes @ 0x13
  4546  00D0                     	ds	3
  4547  00D3                     main@resetDelay:	
  4548                           
  4549                           ; 1 bytes @ 0x16
  4550  00D3                     	ds	1
  4551  00D4                     main@tPadCount:	
  4552                           
  4553                           ; 1 bytes @ 0x17
  4554  00D4                     	ds	1
  4555  00D5                     main@choice:	
  4556                           
  4557                           ; 1 bytes @ 0x18
  4558  00D5                     	ds	1
  4559  00D6                     main@C_or_F:	
  4560                           
  4561                           ; 1 bytes @ 0x19
  4562  00D6                     	ds	1
  4563  00D7                     main@x:	
  4564                           
  4565                           ; 1 bytes @ 0x1A
  4566  00D7                     	ds	1
  4567  00D8                     main@dutyCycle:	
  4568                           
  4569                           ; 2 bytes @ 0x1B
  4570  00D8                     	ds	2
  4571                           
  4572                           	psect	cstackCOMMON
  4573  0070                     __pcstackCOMMON:	
  4574  0070                     ?___ftge:	
  4575  0070                     ?_LCD_Cmd:	
  4576                           ; 1 bit 
  4577                           
  4578  0070                     ?_LCD_Write_Char:	
  4579                           ; 1 bytes @ 0x0
  4580                           
  4581  0070                     ?_OSCILLATOR_Initialize:	
  4582                           ; 1 bytes @ 0x0
  4583                           
  4584  0070                     ??_OSCILLATOR_Initialize:	
  4585                           ; 1 bytes @ 0x0
  4586                           
  4587  0070                     ?_PWM6_Initialize:	
  4588                           ; 1 bytes @ 0x0
  4589                           
  4590  0070                     ??_PWM6_Initialize:	
  4591                           ; 1 bytes @ 0x0
  4592                           
  4593  0070                     ?_TMR2_Initialize:	
  4594                           ; 1 bytes @ 0x0
  4595                           
  4596  0070                     ??_TMR2_Initialize:	
  4597                           ; 1 bytes @ 0x0
  4598                           
  4599  0070                     ?_ADCC_Initialize:	
  4600                           ; 1 bytes @ 0x0
  4601                           
  4602  0070                     ??_ADCC_Initialize:	
  4603                           ; 1 bytes @ 0x0
  4604                           
  4605  0070                     ?_InitCustomChars:	
  4606                           ; 1 bytes @ 0x0
  4607                           
  4608  0070                     ?_LCD_Port:	
  4609                           ; 1 bytes @ 0x0
  4610                           
  4611  0070                     ??_LCD_Port:	
  4612                           ; 1 bytes @ 0x0
  4613                           
  4614  0070                     ?_LCD_Clear:	
  4615                           ; 1 bytes @ 0x0
  4616                           
  4617  0070                     ?_LCD_Init:	
  4618                           ; 1 bytes @ 0x0
  4619                           
  4620  0070                     ?_PIN_MANAGER_Initialize:	
  4621                           ; 1 bytes @ 0x0
  4622                           
  4623  0070                     ??_PIN_MANAGER_Initialize:	
  4624                           ; 1 bytes @ 0x0
  4625                           
  4626  0070                     ?_SYSTEM_Initialize:	
  4627                           ; 1 bytes @ 0x0
  4628                           
  4629  0070                     ?_PWM6_LoadDutyValue:	
  4630                           ; 1 bytes @ 0x0
  4631                           
  4632  0070                     ?_main:	
  4633                           ; 1 bytes @ 0x0
  4634                           
  4635  0070                     ?_ADCRead:	
  4636                           ; 1 bytes @ 0x0
  4637                           
  4638  0070                     ?___wmul:	
  4639                           ; 2 bytes @ 0x0
  4640                           
  4641  0070                     ?___awdiv:	
  4642                           ; 2 bytes @ 0x0
  4643                           
  4644  0070                     ?___awmod:	
  4645                           ; 2 bytes @ 0x0
  4646                           
  4647  0070                     ?___lwdiv:	
  4648                           ; 2 bytes @ 0x0
  4649                           
  4650  0070                     ?___ftpack:	
  4651                           ; 2 bytes @ 0x0
  4652                           
  4653  0070                     ?_frexp:	
  4654                           ; 3 bytes @ 0x0
  4655                           
  4656  0070                     ?___aldiv:	
  4657                           ; 3 bytes @ 0x0
  4658                           
  4659  0070                     ?___fttol:	
  4660                           ; 4 bytes @ 0x0
  4661                           
  4662  0070                     LCD_Port@a:	
  4663                           ; 4 bytes @ 0x0
  4664                           
  4665  0070                     PIN_MANAGER_Initialize@state:	
  4666                           ; 1 bytes @ 0x0
  4667                           
  4668  0070                     PWM6_LoadDutyValue@dutyCycle:	
  4669                           ; 1 bytes @ 0x0
  4670                           
  4671  0070                     ___wmul@multiplier:	
  4672                           ; 2 bytes @ 0x0
  4673                           
  4674  0070                     ___awdiv@divisor:	
  4675                           ; 2 bytes @ 0x0
  4676                           
  4677  0070                     ___awmod@divisor:	
  4678                           ; 2 bytes @ 0x0
  4679                           
  4680  0070                     ___lwdiv@divisor:	
  4681                           ; 2 bytes @ 0x0
  4682                           
  4683  0070                     ___ftpack@arg:	
  4684                           ; 2 bytes @ 0x0
  4685                           
  4686  0070                     ___ftge@ff1:	
  4687                           ; 3 bytes @ 0x0
  4688                           
  4689  0070                     ___fttol@f1:	
  4690                           ; 3 bytes @ 0x0
  4691                           
  4692  0070                     frexp@value:	
  4693                           ; 3 bytes @ 0x0
  4694                           
  4695  0070                     ___aldiv@divisor:	
  4696                           ; 3 bytes @ 0x0
  4697                           
  4698                           
  4699                           ; 4 bytes @ 0x0
  4700  0070                     	ds	1
  4701  0071                     ??_LCD_Cmd:	
  4702  0071                     ??_LCD_Write_Char:	
  4703                           ; 1 bytes @ 0x1
  4704                           
  4705                           
  4706                           ; 1 bytes @ 0x1
  4707  0071                     	ds	1
  4708  0072                     ??_PWM6_LoadDutyValue:	
  4709  0072                     LCD_Write_Char@temp:	
  4710                           ; 1 bytes @ 0x2
  4711                           
  4712  0072                     ___wmul@multiplicand:	
  4713                           ; 1 bytes @ 0x2
  4714                           
  4715  0072                     ___awdiv@dividend:	
  4716                           ; 2 bytes @ 0x2
  4717                           
  4718  0072                     ___awmod@dividend:	
  4719                           ; 2 bytes @ 0x2
  4720                           
  4721  0072                     ___lwdiv@dividend:	
  4722                           ; 2 bytes @ 0x2
  4723                           
  4724                           
  4725                           ; 2 bytes @ 0x2
  4726  0072                     	ds	1
  4727  0073                     ??_ADCRead:	
  4728  0073                     ADCRead@channel:	
  4729                           ; 1 bytes @ 0x3
  4730                           
  4731  0073                     LCD_Cmd@a:	
  4732                           ; 1 bytes @ 0x3
  4733                           
  4734  0073                     LCD_Write_Char@y:	
  4735                           ; 1 bytes @ 0x3
  4736                           
  4737  0073                     ___ftpack@exp:	
  4738                           ; 1 bytes @ 0x3
  4739                           
  4740  0073                     frexp@eptr:	
  4741                           ; 1 bytes @ 0x3
  4742                           
  4743  0073                     ___ftge@ff2:	
  4744                           ; 1 bytes @ 0x3
  4745                           
  4746                           
  4747                           ; 3 bytes @ 0x3
  4748  0073                     	ds	1
  4749  0074                     ??_frexp:	
  4750  0074                     ??_LCD_Clear:	
  4751                           ; 1 bytes @ 0x4
  4752                           
  4753  0074                     ?_LCD_Set_Cursor:	
  4754                           ; 1 bytes @ 0x4
  4755                           
  4756  0074                     ??_LCD_Init:	
  4757                           ; 1 bytes @ 0x4
  4758                           
  4759  0074                     ??___wmul:	
  4760                           ; 1 bytes @ 0x4
  4761                           
  4762  0074                     ??___awdiv:	
  4763                           ; 1 bytes @ 0x4
  4764                           
  4765  0074                     ??___awmod:	
  4766                           ; 1 bytes @ 0x4
  4767                           
  4768  0074                     ??___fttol:	
  4769                           ; 1 bytes @ 0x4
  4770                           
  4771  0074                     ??___lwdiv:	
  4772                           ; 1 bytes @ 0x4
  4773                           
  4774  0074                     LCD_Set_Cursor@y:	
  4775                           ; 1 bytes @ 0x4
  4776                           
  4777  0074                     LCD_Write_Char@a:	
  4778                           ; 1 bytes @ 0x4
  4779                           
  4780  0074                     ___ftpack@sign:	
  4781                           ; 1 bytes @ 0x4
  4782                           
  4783  0074                     ___wmul@product:	
  4784                           ; 1 bytes @ 0x4
  4785                           
  4786  0074                     ___aldiv@dividend:	
  4787                           ; 2 bytes @ 0x4
  4788                           
  4789                           
  4790                           ; 4 bytes @ 0x4
  4791  0074                     	ds	1
  4792  0075                     ??___ftpack:	
  4793  0075                     ??_InitCustomChars:	
  4794                           ; 1 bytes @ 0x5
  4795                           
  4796  0075                     ??_LCD_Set_Cursor:	
  4797                           ; 1 bytes @ 0x5
  4798                           
  4799  0075                     ?_LCD_Write_String:	
  4800                           ; 1 bytes @ 0x5
  4801                           
  4802  0075                     ___awdiv@counter:	
  4803                           ; 1 bytes @ 0x5
  4804                           
  4805  0075                     ___awmod@counter:	
  4806                           ; 1 bytes @ 0x5
  4807                           
  4808  0075                     LCD_Write_String@a:	
  4809                           ; 1 bytes @ 0x5
  4810                           
  4811  0075                     ___lwdiv@quotient:	
  4812                           ; 2 bytes @ 0x5
  4813                           
  4814                           
  4815                           ; 2 bytes @ 0x5
  4816  0075                     	ds	1
  4817  0076                     ??___ftge:	
  4818  0076                     InitCustomChars@i:	
  4819                           ; 1 bytes @ 0x6
  4820                           
  4821  0076                     ___awdiv@sign:	
  4822                           ; 1 bytes @ 0x6
  4823                           
  4824  0076                     ___awmod@sign:	
  4825                           ; 1 bytes @ 0x6
  4826                           
  4827                           
  4828                           ; 1 bytes @ 0x6
  4829  0076                     	ds	1
  4830  0077                     ??_LCD_Write_String:	
  4831  0077                     LCD_Set_Cursor@x:	
  4832                           ; 1 bytes @ 0x7
  4833                           
  4834  0077                     LCD_Init@style:	
  4835                           ; 1 bytes @ 0x7
  4836                           
  4837  0077                     ___lwdiv@counter:	
  4838                           ; 1 bytes @ 0x7
  4839                           
  4840  0077                     ___awdiv@quotient:	
  4841                           ; 1 bytes @ 0x7
  4842                           
  4843                           
  4844                           ; 2 bytes @ 0x7
  4845  0077                     	ds	1
  4846  0078                     ??_SYSTEM_Initialize:	
  4847  0078                     ??___aldiv:	
  4848                           ; 1 bytes @ 0x8
  4849                           
  4850  0078                     ?___awtoft:	
  4851                           ; 1 bytes @ 0x8
  4852                           
  4853  0078                     LCD_Set_Cursor@z:	
  4854                           ; 3 bytes @ 0x8
  4855                           
  4856  0078                     ___fttol@sign1:	
  4857                           ; 1 bytes @ 0x8
  4858                           
  4859  0078                     LCD_Write_String@i:	
  4860                           ; 1 bytes @ 0x8
  4861                           
  4862  0078                     ___awtoft@c:	
  4863                           ; 2 bytes @ 0x8
  4864                           
  4865                           
  4866                           ; 2 bytes @ 0x8
  4867  0078                     	ds	1
  4868  0079                     LCD_Set_Cursor@w:	
  4869  0079                     readAnalog@analog_channel:	
  4870                           ; 1 bytes @ 0x9
  4871                           
  4872  0079                     ___fttol@lval:	
  4873                           ; 2 bytes @ 0x9
  4874                           
  4875                           
  4876                           ; 4 bytes @ 0x9
  4877  0079                     	ds	1
  4878  007A                     LCD_Set_Cursor@temp:	
  4879                           
  4880                           ; 1 bytes @ 0xA
  4881  007A                     	ds	1
  4882  007B                     ??___awtoft:	
  4883  007B                     readAnalog@value:	
  4884                           ; 1 bytes @ 0xB
  4885                           
  4886                           
  4887                           ; 2 bytes @ 0xB
  4888  007B                     	ds	2
  4889  007D                     ___awtoft@sign:	
  4890  007D                     ___fttol@exp1:	
  4891                           ; 1 bytes @ 0xD
  4892                           
  4893                           
  4894                           ; 1 bytes @ 0xD
  4895  007D                     	ds	1
  4896  007E                     ??_eval_poly:	
  4897  007E                     ??_tempCalc:	
  4898                           ; 1 bytes @ 0xE
  4899                           
  4900  007E                     ??___ftsub:	
  4901                           ; 1 bytes @ 0xE
  4902                           
  4903                           
  4904                           	psect	cstackBANK0
  4905  0020                     __pcstackBANK0:	
  4906                           ; 1 bytes @ 0xE
  4907                           
  4908  0020                     ?_LCD_Write_Int:	
  4909  0020                     ?___ftmul:	
  4910                           ; 1 bytes @ 0x0
  4911                           
  4912  0020                     ___aldiv@counter:	
  4913                           ; 3 bytes @ 0x0
  4914                           
  4915  0020                     LCD_Write_Int@value:	
  4916                           ; 1 bytes @ 0x0
  4917                           
  4918  0020                     ___ftmul@f1:	
  4919                           ; 2 bytes @ 0x0
  4920                           
  4921                           
  4922                           ; 3 bytes @ 0x0
  4923  0020                     	ds	1
  4924  0021                     ___aldiv@sign:	
  4925                           
  4926                           ; 1 bytes @ 0x1
  4927  0021                     	ds	1
  4928  0022                     LCD_Write_Int@fieldLength:	
  4929  0022                     ___aldiv@quotient:	
  4930                           ; 1 bytes @ 0x2
  4931                           
  4932                           
  4933                           ; 4 bytes @ 0x2
  4934  0022                     	ds	1
  4935  0023                     LCD_Write_Int@numPlaces:	
  4936  0023                     ___ftmul@f2:	
  4937                           ; 1 bytes @ 0x3
  4938                           
  4939                           
  4940                           ; 3 bytes @ 0x3
  4941  0023                     	ds	1
  4942  0024                     LCD_Write_Int@sign:	
  4943                           
  4944                           ; 1 bytes @ 0x4
  4945  0024                     	ds	1
  4946  0025                     ??_LCD_Write_Int:	
  4947                           
  4948                           ; 1 bytes @ 0x5
  4949  0025                     	ds	1
  4950  0026                     ??___ftmul:	
  4951  0026                     ?_readAnalog:	
  4952                           ; 1 bytes @ 0x6
  4953                           
  4954  0026                     readAnalog@channel:	
  4955                           ; 2 bytes @ 0x6
  4956                           
  4957                           
  4958                           ; 2 bytes @ 0x6
  4959  0026                     	ds	2
  4960  0028                     ??_readAnalog:	
  4961                           
  4962                           ; 1 bytes @ 0x8
  4963  0028                     	ds	2
  4964  002A                     ___ftmul@exp:	
  4965  002A                     LCD_Write_Int@str:	
  4966                           ; 1 bytes @ 0xA
  4967                           
  4968                           
  4969                           ; 5 bytes @ 0xA
  4970  002A                     	ds	1
  4971  002B                     ___ftmul@f3_as_product:	
  4972                           
  4973                           ; 3 bytes @ 0xB
  4974  002B                     	ds	3
  4975  002E                     ___ftmul@cntr:	
  4976                           
  4977                           ; 1 bytes @ 0xE
  4978  002E                     	ds	1
  4979  002F                     ___ftmul@sign:	
  4980  002F                     LCD_Write_Int@j:	
  4981                           ; 1 bytes @ 0xF
  4982                           
  4983                           
  4984                           ; 2 bytes @ 0xF
  4985  002F                     	ds	1
  4986  0030                     ?___ftdiv:	
  4987  0030                     ___ftdiv@f2:	
  4988                           ; 3 bytes @ 0x10
  4989                           
  4990                           
  4991                           ; 3 bytes @ 0x10
  4992  0030                     	ds	1
  4993  0031                     LCD_Write_Int@i:	
  4994                           
  4995                           ; 2 bytes @ 0x11
  4996  0031                     	ds	2
  4997  0033                     ___ftdiv@f1:	
  4998                           
  4999                           ; 3 bytes @ 0x13
  5000  0033                     	ds	3
  5001  0036                     ??___ftdiv:	
  5002                           
  5003                           ; 1 bytes @ 0x16
  5004  0036                     	ds	4
  5005  003A                     ___ftdiv@cntr:	
  5006                           
  5007                           ; 1 bytes @ 0x1A
  5008  003A                     	ds	1
  5009  003B                     ___ftdiv@f3:	
  5010                           
  5011                           ; 3 bytes @ 0x1B
  5012  003B                     	ds	3
  5013  003E                     ___ftdiv@exp:	
  5014                           
  5015                           ; 1 bytes @ 0x1E
  5016  003E                     	ds	1
  5017  003F                     ___ftdiv@sign:	
  5018                           
  5019                           ; 1 bytes @ 0x1F
  5020  003F                     	ds	1
  5021  0040                     ?___ftadd:	
  5022  0040                     ___ftadd@f1:	
  5023                           ; 3 bytes @ 0x20
  5024                           
  5025                           
  5026                           ; 3 bytes @ 0x20
  5027  0040                     	ds	3
  5028  0043                     ___ftadd@f2:	
  5029                           
  5030                           ; 3 bytes @ 0x23
  5031  0043                     	ds	3
  5032  0046                     ??___ftadd:	
  5033                           
  5034                           ; 1 bytes @ 0x26
  5035  0046                     	ds	4
  5036  004A                     ___ftadd@sign:	
  5037                           
  5038                           ; 1 bytes @ 0x2A
  5039  004A                     	ds	1
  5040  004B                     ___ftadd@exp2:	
  5041                           
  5042                           ; 1 bytes @ 0x2B
  5043  004B                     	ds	1
  5044  004C                     ___ftadd@exp1:	
  5045                           
  5046                           ; 1 bytes @ 0x2C
  5047  004C                     	ds	1
  5048  004D                     ?_eval_poly:	
  5049  004D                     ?___ftsub:	
  5050                           ; 3 bytes @ 0x2D
  5051                           
  5052  004D                     ___ftsub@f2:	
  5053                           ; 3 bytes @ 0x2D
  5054                           
  5055  004D                     eval_poly@x:	
  5056                           ; 3 bytes @ 0x2D
  5057                           
  5058                           
  5059                           ; 3 bytes @ 0x2D
  5060  004D                     	ds	3
  5061  0050                     eval_poly@d:	
  5062  0050                     ___ftsub@f1:	
  5063                           ; 2 bytes @ 0x30
  5064                           
  5065                           
  5066                           ; 3 bytes @ 0x30
  5067  0050                     	ds	2
  5068  0052                     eval_poly@n:	
  5069                           
  5070                           ; 2 bytes @ 0x32
  5071  0052                     	ds	2
  5072  0054                     eval_poly@res:	
  5073                           
  5074                           ; 3 bytes @ 0x34
  5075  0054                     	ds	3
  5076  0057                     ?_log:	
  5077  0057                     log@x:	
  5078                           ; 3 bytes @ 0x37
  5079                           
  5080                           
  5081                           ; 3 bytes @ 0x37
  5082  0057                     	ds	3
  5083  005A                     ??_log:	
  5084                           
  5085                           ; 1 bytes @ 0x3A
  5086  005A                     	ds	1
  5087  005B                     log@exponent:	
  5088                           
  5089                           ; 2 bytes @ 0x3B
  5090  005B                     	ds	2
  5091  005D                     ?_tempCalc:	
  5092  005D                     tempCalc@analogValue:	
  5093                           ; 3 bytes @ 0x3D
  5094                           
  5095                           
  5096                           ; 2 bytes @ 0x3D
  5097  005D                     	ds	3
  5098  0060                     tempCalc@R:	
  5099                           
  5100                           ; 3 bytes @ 0x40
  5101  0060                     	ds	3
  5102  0063                     _tempCalc$982:	
  5103                           
  5104                           ; 3 bytes @ 0x43
  5105  0063                     	ds	3
  5106  0066                     tempCalc@steinhart:	
  5107                           
  5108                           ; 3 bytes @ 0x46
  5109  0066                     	ds	3
  5110  0069                     ??_main:	
  5111                           
  5112                           ; 1 bytes @ 0x49
  5113  0069                     	ds	3
  5114                           
  5115                           	psect	maintext
  5116  0202                     __pmaintext:	
  5117 ;;
  5118 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  5119 ;;
  5120 ;; *************** function _main *****************
  5121 ;; Defined at:
  5122 ;;		line 15 in file "main.c"
  5123 ;; Parameters:    Size  Location     Type
  5124 ;;		None
  5125 ;; Auto vars:     Size  Location     Type
  5126 ;;  analogs        12    2[BANK1 ] unsigned int [6]
  5127 ;;  displayTemp2    3   19[BANK1 ] float 
  5128 ;;  displayTemp     3   16[BANK1 ] float 
  5129 ;;  dutyCycle       2   27[BANK1 ] unsigned int 
  5130 ;;  bCount          2   14[BANK1 ] unsigned int 
  5131 ;;  x               1   26[BANK1 ] unsigned char 
  5132 ;;  C_or_F          1   25[BANK1 ] unsigned char 
  5133 ;;  choice          1   24[BANK1 ] unsigned char 
  5134 ;;  tPadCount       1   23[BANK1 ] unsigned char 
  5135 ;;  resetDelay      1   22[BANK1 ] unsigned char 
  5136 ;;  startDelay      1    1[BANK1 ] unsigned char 
  5137 ;;  loop            1    0[BANK1 ] unsigned char 
  5138 ;; Return value:  Size  Location     Type
  5139 ;;                  1    wreg      void 
  5140 ;; Registers used:
  5141 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5142 ;; Tracked objects:
  5143 ;;		On entry : B1F/0
  5144 ;;		On exit  : 0/0
  5145 ;;		Unchanged: 0/0
  5146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5148 ;;      Locals:         0       0      29       0       0       0       0       0       0       0       0       0       
      +0       0
  5149 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5150 ;;      Totals:         0       3      29       0       0       0       0       0       0       0       0       0       
      +0       0
  5151 ;;Total ram usage:       32 bytes
  5152 ;; Hardware stack levels required when called:    5
  5153 ;; This function calls:
  5154 ;;		_ADCRead
  5155 ;;		_LCD_Clear
  5156 ;;		_LCD_Set_Cursor
  5157 ;;		_LCD_Write_Char
  5158 ;;		_LCD_Write_Int
  5159 ;;		_LCD_Write_String
  5160 ;;		_PWM6_LoadDutyValue
  5161 ;;		_SYSTEM_Initialize
  5162 ;;		___ftadd
  5163 ;;		___ftdiv
  5164 ;;		___ftmul
  5165 ;;		___fttol
  5166 ;;		___lwdiv
  5167 ;;		_readAnalog
  5168 ;;		_tempCalc
  5169 ;; This function is called by:
  5170 ;;		Startup code after reset
  5171 ;; This function uses a non-reentrant model
  5172 ;;
  5173                           
  5174                           
  5175                           ;psect for function _main
  5176  0202                     _main:	
  5177                           
  5178                           ;main.c: 17: SYSTEM_Initialize();
  5179                           
  5180                           ;incstack = 0
  5181                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5182  0202  3188  20F6  3182   	fcall	_SYSTEM_Initialize
  5183                           
  5184                           ;main.c: 19: uint16_t analogs[6] = {0};
  5185  0205  3030               	movlw	low main@F13657
  5186  0206  0086               	movwf	6
  5187  0207  3001               	movlw	high main@F13657
  5188  0208  0087               	movwf	7
  5189  0209  30BF               	movlw	low main@analogs
  5190  020A  0084               	movwf	4
  5191  020B  3000               	movlw	high main@analogs
  5192  020C  0085               	movwf	5
  5193  020D  300C               	movlw	12
  5194  020E  0020               	movlb	0	; select bank0
  5195  020F  00E9               	movwf	??_main
  5196  0210                     u3210:	
  5197  0210  0016               	moviw fsr1++
  5198  0211  001A               	movwi fsr0++
  5199  0212  0BE9               	decfsz	??_main,f
  5200  0213  2A10               	goto	u3210
  5201                           
  5202                           ;main.c: 21: float displayTemp, displayTemp2;
  5203                           ;main.c: 25: char x = 0;
  5204  0214  0021               	movlb	1	; select bank1
  5205  0215  01D7               	clrf	main@x^(0+128)
  5206                           
  5207                           ;main.c: 27: char loop = 64;
  5208  0216  3040               	movlw	64
  5209  0217  0020               	movlb	0	; select bank0
  5210  0218  00E9               	movwf	??_main
  5211  0219  0869               	movf	??_main,w
  5212  021A  0021               	movlb	1	; select bank1
  5213  021B  00BD               	movwf	main@loop^(0+128)
  5214                           
  5215                           ;main.c: 29: char choice = 2;
  5216  021C  3002               	movlw	2
  5217  021D  0020               	movlb	0	; select bank0
  5218  021E  00E9               	movwf	??_main
  5219  021F  0869               	movf	??_main,w
  5220  0220  0021               	movlb	1	; select bank1
  5221  0221  00D5               	movwf	main@choice^(0+128)
  5222                           
  5223                           ;main.c: 31: char C_or_F = 1;
  5224  0222  01D6               	clrf	main@C_or_F^(0+128)
  5225  0223  0AD6               	incf	main@C_or_F^(0+128),f
  5226                           
  5227                           ;main.c: 33: unsigned int bCount = 0;
  5228  0224  01CB               	clrf	main@bCount^(0+128)
  5229  0225  01CC               	clrf	(main@bCount+1)^(0+128)
  5230                           
  5231                           ;main.c: 35: unsigned char startDelay= 0;
  5232  0226  01BE               	clrf	main@startDelay^(0+128)
  5233                           
  5234                           ;main.c: 37: unsigned char resetDelay= 0;
  5235  0227  01D3               	clrf	main@resetDelay^(0+128)
  5236                           
  5237                           ;main.c: 39: unsigned char tPadCount = 10;
  5238  0228  300A               	movlw	10
  5239  0229  0020               	movlb	0	; select bank0
  5240  022A  00E9               	movwf	??_main
  5241  022B  0869               	movf	??_main,w
  5242  022C  0021               	movlb	1	; select bank1
  5243  022D  00D4               	movwf	main@tPadCount^(0+128)
  5244                           
  5245                           ;main.c: 42: uint16_t dutyCycle = 1023;
  5246  022E  30FF               	movlw	255
  5247  022F  00D8               	movwf	main@dutyCycle^(0+128)
  5248  0230  3003               	movlw	3
  5249  0231  00D9               	movwf	(main@dutyCycle^(0+128)+1)
  5250                           
  5251                           ;main.c: 44: PWM6_LoadDutyValue(dutyCycle);
  5252  0232  0859               	movf	(main@dutyCycle+1)^(0+128),w
  5253  0233  00F1               	movwf	PWM6_LoadDutyValue@dutyCycle+1
  5254  0234  0858               	movf	main@dutyCycle^(0+128),w
  5255  0235  00F0               	movwf	PWM6_LoadDutyValue@dutyCycle
  5256  0236  3196  26BF  3182   	fcall	_PWM6_LoadDutyValue
  5257                           
  5258                           ;main.c: 46: _delay((unsigned long)((300)*(32000000/4000.0)));
  5259  0239  300D               	movlw	13
  5260  023A  0020               	movlb	0	; select bank0
  5261  023B  00EB               	movwf	??_main+2
  5262  023C  302D               	movlw	45
  5263  023D  00EA               	movwf	??_main+1
  5264  023E  30E2               	movlw	226
  5265  023F  00E9               	movwf	??_main
  5266  0240                     u3497:	
  5267  0240  0BE9               	decfsz	??_main,f
  5268  0241  2A40               	goto	u3497
  5269  0242  0BEA               	decfsz	??_main+1,f
  5270  0243  2A40               	goto	u3497
  5271  0244  0BEB               	decfsz	??_main+2,f
  5272  0245  2A40               	goto	u3497
  5273  0246  3200               	nop2
  5274                           
  5275                           ;main.c: 48: LCD_Clear();
  5276  0247  3196  264A  3182   	fcall	_LCD_Clear
  5277                           
  5278                           ;main.c: 50: { LCD_Set_Cursor(2,0); LCD_Write_String("A");};
  5279  024A  01F4               	clrf	LCD_Set_Cursor@y
  5280  024B  3002               	movlw	2
  5281  024C  3188  20B7  3182   	fcall	_LCD_Set_Cursor
  5282  024F  3040               	movlw	low (STR_1| (0+32768))
  5283  0250  00F5               	movwf	LCD_Write_String@a
  5284  0251  3090               	movlw	high (STR_1| (0+32768))
  5285  0252  00F6               	movwf	LCD_Write_String@a+1
  5286  0253  3196  26ED  3182   	fcall	_LCD_Write_String
  5287                           
  5288                           ;main.c: 51: _delay((unsigned long)((200)*(32000000/4000.0)));
  5289  0256  3009               	movlw	9
  5290  0257  0020               	movlb	0	; select bank0
  5291  0258  00EB               	movwf	??_main+2
  5292  0259  301E               	movlw	30
  5293  025A  00EA               	movwf	??_main+1
  5294  025B  30EB               	movlw	235
  5295  025C  00E9               	movwf	??_main
  5296  025D                     u3507:	
  5297  025D  0BE9               	decfsz	??_main,f
  5298  025E  2A5D               	goto	u3507
  5299  025F  0BEA               	decfsz	??_main+1,f
  5300  0260  2A5D               	goto	u3507
  5301  0261  0BEB               	decfsz	??_main+2,f
  5302  0262  2A5D               	goto	u3507
  5303  0263  0000               	nop
  5304                           
  5305                           ;main.c: 52: LCD_Write_String("L");
  5306  0264  304C               	movlw	low (STR_2| (0+32768))
  5307  0265  00F5               	movwf	LCD_Write_String@a
  5308  0266  3090               	movlw	high (STR_2| (0+32768))
  5309  0267  00F6               	movwf	LCD_Write_String@a+1
  5310  0268  3196  26ED  3182   	fcall	_LCD_Write_String
  5311                           
  5312                           ;main.c: 53: _delay((unsigned long)((200)*(32000000/4000.0)));
  5313  026B  3009               	movlw	9
  5314  026C  0020               	movlb	0	; select bank0
  5315  026D  00EB               	movwf	??_main+2
  5316  026E  301E               	movlw	30
  5317  026F  00EA               	movwf	??_main+1
  5318  0270  30EB               	movlw	235
  5319  0271  00E9               	movwf	??_main
  5320  0272                     u3517:	
  5321  0272  0BE9               	decfsz	??_main,f
  5322  0273  2A72               	goto	u3517
  5323  0274  0BEA               	decfsz	??_main+1,f
  5324  0275  2A72               	goto	u3517
  5325  0276  0BEB               	decfsz	??_main+2,f
  5326  0277  2A72               	goto	u3517
  5327  0278  0000               	nop
  5328                           
  5329                           ;main.c: 54: LCD_Write_String("O");
  5330  0279  304E               	movlw	low (STR_3| (0+32768))
  5331  027A  00F5               	movwf	LCD_Write_String@a
  5332  027B  3090               	movlw	high (STR_3| (0+32768))
  5333  027C  00F6               	movwf	LCD_Write_String@a+1
  5334  027D  3196  26ED  3182   	fcall	_LCD_Write_String
  5335                           
  5336                           ;main.c: 55: _delay((unsigned long)((200)*(32000000/4000.0)));
  5337  0280  3009               	movlw	9
  5338  0281  0020               	movlb	0	; select bank0
  5339  0282  00EB               	movwf	??_main+2
  5340  0283  301E               	movlw	30
  5341  0284  00EA               	movwf	??_main+1
  5342  0285  30EB               	movlw	235
  5343  0286  00E9               	movwf	??_main
  5344  0287                     u3527:	
  5345  0287  0BE9               	decfsz	??_main,f
  5346  0288  2A87               	goto	u3527
  5347  0289  0BEA               	decfsz	??_main+1,f
  5348  028A  2A87               	goto	u3527
  5349  028B  0BEB               	decfsz	??_main+2,f
  5350  028C  2A87               	goto	u3527
  5351  028D  0000               	nop
  5352                           
  5353                           ;main.c: 56: LCD_Write_String("H");
  5354  028E  3046               	movlw	low (STR_4| (0+32768))
  5355  028F  00F5               	movwf	LCD_Write_String@a
  5356  0290  3090               	movlw	high (STR_4| (0+32768))
  5357  0291  00F6               	movwf	LCD_Write_String@a+1
  5358  0292  3196  26ED  3182   	fcall	_LCD_Write_String
  5359                           
  5360                           ;main.c: 57: _delay((unsigned long)((200)*(32000000/4000.0)));
  5361  0295  3009               	movlw	9
  5362  0296  0020               	movlb	0	; select bank0
  5363  0297  00EB               	movwf	??_main+2
  5364  0298  301E               	movlw	30
  5365  0299  00EA               	movwf	??_main+1
  5366  029A  30EB               	movlw	235
  5367  029B  00E9               	movwf	??_main
  5368  029C                     u3537:	
  5369  029C  0BE9               	decfsz	??_main,f
  5370  029D  2A9C               	goto	u3537
  5371  029E  0BEA               	decfsz	??_main+1,f
  5372  029F  2A9C               	goto	u3537
  5373  02A0  0BEB               	decfsz	??_main+2,f
  5374  02A1  2A9C               	goto	u3537
  5375  02A2  0000               	nop
  5376                           
  5377                           ;main.c: 58: LCD_Write_String("A");
  5378  02A3  3040               	movlw	low (STR_1| (0+32768))
  5379  02A4  00F5               	movwf	LCD_Write_String@a
  5380  02A5  3090               	movlw	high (STR_1| (0+32768))
  5381  02A6  00F6               	movwf	LCD_Write_String@a+1
  5382  02A7  3196  26ED  3182   	fcall	_LCD_Write_String
  5383                           
  5384                           ;main.c: 59: _delay((unsigned long)((200)*(32000000/4000.0)));
  5385  02AA  3009               	movlw	9
  5386  02AB  0020               	movlb	0	; select bank0
  5387  02AC  00EB               	movwf	??_main+2
  5388  02AD  301E               	movlw	30
  5389  02AE  00EA               	movwf	??_main+1
  5390  02AF  30EB               	movlw	235
  5391  02B0  00E9               	movwf	??_main
  5392  02B1                     u3547:	
  5393  02B1  0BE9               	decfsz	??_main,f
  5394  02B2  2AB1               	goto	u3547
  5395  02B3  0BEA               	decfsz	??_main+1,f
  5396  02B4  2AB1               	goto	u3547
  5397  02B5  0BEB               	decfsz	??_main+2,f
  5398  02B6  2AB1               	goto	u3547
  5399  02B7  0000               	nop
  5400                           
  5401                           ;main.c: 60: LCD_Write_String(" ");
  5402  02B8  3038               	movlw	low (STR_6| (0+32768))
  5403  02B9  00F5               	movwf	LCD_Write_String@a
  5404  02BA  3090               	movlw	high (STR_6| (0+32768))
  5405  02BB  00F6               	movwf	LCD_Write_String@a+1
  5406  02BC  3196  26ED  3182   	fcall	_LCD_Write_String
  5407                           
  5408                           ;main.c: 61: _delay((unsigned long)((200)*(32000000/4000.0)));
  5409  02BF  3009               	movlw	9
  5410  02C0  0020               	movlb	0	; select bank0
  5411  02C1  00EB               	movwf	??_main+2
  5412  02C2  301E               	movlw	30
  5413  02C3  00EA               	movwf	??_main+1
  5414  02C4  30EB               	movlw	235
  5415  02C5  00E9               	movwf	??_main
  5416  02C6                     u3557:	
  5417  02C6  0BE9               	decfsz	??_main,f
  5418  02C7  2AC6               	goto	u3557
  5419  02C8  0BEA               	decfsz	??_main+1,f
  5420  02C9  2AC6               	goto	u3557
  5421  02CA  0BEB               	decfsz	??_main+2,f
  5422  02CB  2AC6               	goto	u3557
  5423  02CC  0000               	nop
  5424                           
  5425                           ;main.c: 62: LCD_Write_String("D");
  5426  02CD  3042               	movlw	low (STR_7| (0+32768))
  5427  02CE  00F5               	movwf	LCD_Write_String@a
  5428  02CF  3090               	movlw	high (STR_7| (0+32768))
  5429  02D0  00F6               	movwf	LCD_Write_String@a+1
  5430  02D1  3196  26ED  3182   	fcall	_LCD_Write_String
  5431                           
  5432                           ;main.c: 63: _delay((unsigned long)((200)*(32000000/4000.0)));
  5433  02D4  3009               	movlw	9
  5434  02D5  0020               	movlb	0	; select bank0
  5435  02D6  00EB               	movwf	??_main+2
  5436  02D7  301E               	movlw	30
  5437  02D8  00EA               	movwf	??_main+1
  5438  02D9  30EB               	movlw	235
  5439  02DA  00E9               	movwf	??_main
  5440  02DB                     u3567:	
  5441  02DB  0BE9               	decfsz	??_main,f
  5442  02DC  2ADB               	goto	u3567
  5443  02DD  0BEA               	decfsz	??_main+1,f
  5444  02DE  2ADB               	goto	u3567
  5445  02DF  0BEB               	decfsz	??_main+2,f
  5446  02E0  2ADB               	goto	u3567
  5447  02E1  0000               	nop
  5448                           
  5449                           ;main.c: 64: LCD_Write_String("A");
  5450  02E2  3040               	movlw	low (STR_1| (0+32768))
  5451  02E3  00F5               	movwf	LCD_Write_String@a
  5452  02E4  3090               	movlw	high (STR_1| (0+32768))
  5453  02E5  00F6               	movwf	LCD_Write_String@a+1
  5454  02E6  3196  26ED  3182   	fcall	_LCD_Write_String
  5455                           
  5456                           ;main.c: 65: _delay((unsigned long)((200)*(32000000/4000.0)));
  5457  02E9  3009               	movlw	9
  5458  02EA  0020               	movlb	0	; select bank0
  5459  02EB  00EB               	movwf	??_main+2
  5460  02EC  301E               	movlw	30
  5461  02ED  00EA               	movwf	??_main+1
  5462  02EE  30EB               	movlw	235
  5463  02EF  00E9               	movwf	??_main
  5464  02F0                     u3577:	
  5465  02F0  0BE9               	decfsz	??_main,f
  5466  02F1  2AF0               	goto	u3577
  5467  02F2  0BEA               	decfsz	??_main+1,f
  5468  02F3  2AF0               	goto	u3577
  5469  02F4  0BEB               	decfsz	??_main+2,f
  5470  02F5  2AF0               	goto	u3577
  5471  02F6  0000               	nop
  5472                           
  5473                           ;main.c: 66: LCD_Write_String("V");
  5474  02F7  3054               	movlw	low (STR_9| (0+32768))
  5475  02F8  00F5               	movwf	LCD_Write_String@a
  5476  02F9  3090               	movlw	high (STR_9| (0+32768))
  5477  02FA  00F6               	movwf	LCD_Write_String@a+1
  5478  02FB  3196  26ED  3182   	fcall	_LCD_Write_String
  5479                           
  5480                           ;main.c: 67: _delay((unsigned long)((200)*(32000000/4000.0)));
  5481  02FE  3009               	movlw	9
  5482  02FF  0020               	movlb	0	; select bank0
  5483  0300  00EB               	movwf	??_main+2
  5484  0301  301E               	movlw	30
  5485  0302  00EA               	movwf	??_main+1
  5486  0303  30EB               	movlw	235
  5487  0304  00E9               	movwf	??_main
  5488  0305                     u3587:	
  5489  0305  0BE9               	decfsz	??_main,f
  5490  0306  2B05               	goto	u3587
  5491  0307  0BEA               	decfsz	??_main+1,f
  5492  0308  2B05               	goto	u3587
  5493  0309  0BEB               	decfsz	??_main+2,f
  5494  030A  2B05               	goto	u3587
  5495  030B  0000               	nop
  5496                           
  5497                           ;main.c: 68: LCD_Write_String("I");
  5498  030C  3048               	movlw	low (STR_10| (0+32768))
  5499  030D  00F5               	movwf	LCD_Write_String@a
  5500  030E  3090               	movlw	high (STR_10| (0+32768))
  5501  030F  00F6               	movwf	LCD_Write_String@a+1
  5502  0310  3196  26ED  3182   	fcall	_LCD_Write_String
  5503                           
  5504                           ;main.c: 69: _delay((unsigned long)((200)*(32000000/4000.0)));
  5505  0313  3009               	movlw	9
  5506  0314  0020               	movlb	0	; select bank0
  5507  0315  00EB               	movwf	??_main+2
  5508  0316  301E               	movlw	30
  5509  0317  00EA               	movwf	??_main+1
  5510  0318  30EB               	movlw	235
  5511  0319  00E9               	movwf	??_main
  5512  031A                     u3597:	
  5513  031A  0BE9               	decfsz	??_main,f
  5514  031B  2B1A               	goto	u3597
  5515  031C  0BEA               	decfsz	??_main+1,f
  5516  031D  2B1A               	goto	u3597
  5517  031E  0BEB               	decfsz	??_main+2,f
  5518  031F  2B1A               	goto	u3597
  5519  0320  0000               	nop
  5520                           
  5521                           ;main.c: 70: LCD_Write_String("D");
  5522  0321  3042               	movlw	low (STR_7| (0+32768))
  5523  0322  00F5               	movwf	LCD_Write_String@a
  5524  0323  3090               	movlw	high (STR_7| (0+32768))
  5525  0324  00F6               	movwf	LCD_Write_String@a+1
  5526  0325  3196  26ED  3182   	fcall	_LCD_Write_String
  5527                           
  5528                           ;main.c: 71: _delay((unsigned long)((200)*(32000000/4000.0)));
  5529  0328  3009               	movlw	9
  5530  0329  0020               	movlb	0	; select bank0
  5531  032A  00EB               	movwf	??_main+2
  5532  032B  301E               	movlw	30
  5533  032C  00EA               	movwf	??_main+1
  5534  032D  30EB               	movlw	235
  5535  032E  00E9               	movwf	??_main
  5536  032F                     u3607:	
  5537  032F  0BE9               	decfsz	??_main,f
  5538  0330  2B2F               	goto	u3607
  5539  0331  0BEA               	decfsz	??_main+1,f
  5540  0332  2B2F               	goto	u3607
  5541  0333  0BEB               	decfsz	??_main+2,f
  5542  0334  2B2F               	goto	u3607
  5543  0335  0000               	nop
  5544                           
  5545                           ;main.c: 72: LCD_Write_String(",");
  5546  0336  303E               	movlw	low (STR_12| (0+32768))
  5547  0337  00F5               	movwf	LCD_Write_String@a
  5548  0338  3090               	movlw	high (STR_12| (0+32768))
  5549  0339  00F6               	movwf	LCD_Write_String@a+1
  5550  033A  3196  26ED  3182   	fcall	_LCD_Write_String
  5551                           
  5552                           ;main.c: 73: _delay((unsigned long)((200)*(32000000/4000.0)));
  5553  033D  3009               	movlw	9
  5554  033E  0020               	movlb	0	; select bank0
  5555  033F  00EB               	movwf	??_main+2
  5556  0340  301E               	movlw	30
  5557  0341  00EA               	movwf	??_main+1
  5558  0342  30EB               	movlw	235
  5559  0343  00E9               	movwf	??_main
  5560  0344                     u3617:	
  5561  0344  0BE9               	decfsz	??_main,f
  5562  0345  2B44               	goto	u3617
  5563  0346  0BEA               	decfsz	??_main+1,f
  5564  0347  2B44               	goto	u3617
  5565  0348  0BEB               	decfsz	??_main+2,f
  5566  0349  2B44               	goto	u3617
  5567  034A  0000               	nop
  5568                           
  5569                           ;main.c: 74: { LCD_Set_Cursor(1,1); LCD_Write_String("S");};
  5570  034B  01F4               	clrf	LCD_Set_Cursor@y
  5571  034C  0AF4               	incf	LCD_Set_Cursor@y,f
  5572  034D  3001               	movlw	1
  5573  034E  3188  20B7  3182   	fcall	_LCD_Set_Cursor
  5574  0351  3052               	movlw	low (STR_13| (0+32768))
  5575  0352  00F5               	movwf	LCD_Write_String@a
  5576  0353  3090               	movlw	high (STR_13| (0+32768))
  5577  0354  00F6               	movwf	LCD_Write_String@a+1
  5578  0355  3196  26ED  3182   	fcall	_LCD_Write_String
  5579                           
  5580                           ;main.c: 75: _delay((unsigned long)((200)*(32000000/4000.0)));
  5581  0358  3009               	movlw	9
  5582  0359  0020               	movlb	0	; select bank0
  5583  035A  00EB               	movwf	??_main+2
  5584  035B  301E               	movlw	30
  5585  035C  00EA               	movwf	??_main+1
  5586  035D  30EB               	movlw	235
  5587  035E  00E9               	movwf	??_main
  5588  035F                     u3627:	
  5589  035F  0BE9               	decfsz	??_main,f
  5590  0360  2B5F               	goto	u3627
  5591  0361  0BEA               	decfsz	??_main+1,f
  5592  0362  2B5F               	goto	u3627
  5593  0363  0BEB               	decfsz	??_main+2,f
  5594  0364  2B5F               	goto	u3627
  5595  0365  0000               	nop
  5596                           
  5597                           ;main.c: 76: LCD_Write_String("O");
  5598  0366  304E               	movlw	low (STR_3| (0+32768))
  5599  0367  00F5               	movwf	LCD_Write_String@a
  5600  0368  3090               	movlw	high (STR_3| (0+32768))
  5601  0369  00F6               	movwf	LCD_Write_String@a+1
  5602  036A  3196  26ED  3182   	fcall	_LCD_Write_String
  5603                           
  5604                           ;main.c: 77: _delay((unsigned long)((200)*(32000000/4000.0)));
  5605  036D  3009               	movlw	9
  5606  036E  0020               	movlb	0	; select bank0
  5607  036F  00EB               	movwf	??_main+2
  5608  0370  301E               	movlw	30
  5609  0371  00EA               	movwf	??_main+1
  5610  0372  30EB               	movlw	235
  5611  0373  00E9               	movwf	??_main
  5612  0374                     u3637:	
  5613  0374  0BE9               	decfsz	??_main,f
  5614  0375  2B74               	goto	u3637
  5615  0376  0BEA               	decfsz	??_main+1,f
  5616  0377  2B74               	goto	u3637
  5617  0378  0BEB               	decfsz	??_main+2,f
  5618  0379  2B74               	goto	u3637
  5619  037A  0000               	nop
  5620                           
  5621                           ;main.c: 78: LCD_Write_String("P");
  5622  037B  3050               	movlw	low (STR_15| (0+32768))
  5623  037C  00F5               	movwf	LCD_Write_String@a
  5624  037D  3090               	movlw	high (STR_15| (0+32768))
  5625  037E  00F6               	movwf	LCD_Write_String@a+1
  5626  037F  3196  26ED  3182   	fcall	_LCD_Write_String
  5627                           
  5628                           ;main.c: 79: _delay((unsigned long)((200)*(32000000/4000.0)));
  5629  0382  3009               	movlw	9
  5630  0383  0020               	movlb	0	; select bank0
  5631  0384  00EB               	movwf	??_main+2
  5632  0385  301E               	movlw	30
  5633  0386  00EA               	movwf	??_main+1
  5634  0387  30EB               	movlw	235
  5635  0388  00E9               	movwf	??_main
  5636  0389                     u3647:	
  5637  0389  0BE9               	decfsz	??_main,f
  5638  038A  2B89               	goto	u3647
  5639  038B  0BEA               	decfsz	??_main+1,f
  5640  038C  2B89               	goto	u3647
  5641  038D  0BEB               	decfsz	??_main+2,f
  5642  038E  2B89               	goto	u3647
  5643  038F  0000               	nop
  5644                           
  5645                           ;main.c: 80: LCD_Write_String("H");
  5646  0390  3046               	movlw	low (STR_4| (0+32768))
  5647  0391  00F5               	movwf	LCD_Write_String@a
  5648  0392  3090               	movlw	high (STR_4| (0+32768))
  5649  0393  00F6               	movwf	LCD_Write_String@a+1
  5650  0394  3196  26ED  3182   	fcall	_LCD_Write_String
  5651                           
  5652                           ;main.c: 81: _delay((unsigned long)((200)*(32000000/4000.0)));
  5653  0397  3009               	movlw	9
  5654  0398  0020               	movlb	0	; select bank0
  5655  0399  00EB               	movwf	??_main+2
  5656  039A  301E               	movlw	30
  5657  039B  00EA               	movwf	??_main+1
  5658  039C  30EB               	movlw	235
  5659  039D  00E9               	movwf	??_main
  5660  039E                     u3657:	
  5661  039E  0BE9               	decfsz	??_main,f
  5662  039F  2B9E               	goto	u3657
  5663  03A0  0BEA               	decfsz	??_main+1,f
  5664  03A1  2B9E               	goto	u3657
  5665  03A2  0BEB               	decfsz	??_main+2,f
  5666  03A3  2B9E               	goto	u3657
  5667  03A4  0000               	nop
  5668                           
  5669                           ;main.c: 82: LCD_Write_String("I");
  5670  03A5  3048               	movlw	low (STR_10| (0+32768))
  5671  03A6  00F5               	movwf	LCD_Write_String@a
  5672  03A7  3090               	movlw	high (STR_10| (0+32768))
  5673  03A8  00F6               	movwf	LCD_Write_String@a+1
  5674  03A9  3196  26ED  3182   	fcall	_LCD_Write_String
  5675                           
  5676                           ;main.c: 83: _delay((unsigned long)((200)*(32000000/4000.0)));
  5677  03AC  3009               	movlw	9
  5678  03AD  0020               	movlb	0	; select bank0
  5679  03AE  00EB               	movwf	??_main+2
  5680  03AF  301E               	movlw	30
  5681  03B0  00EA               	movwf	??_main+1
  5682  03B1  30EB               	movlw	235
  5683  03B2  00E9               	movwf	??_main
  5684  03B3                     u3667:	
  5685  03B3  0BE9               	decfsz	??_main,f
  5686  03B4  2BB3               	goto	u3667
  5687  03B5  0BEA               	decfsz	??_main+1,f
  5688  03B6  2BB3               	goto	u3667
  5689  03B7  0BEB               	decfsz	??_main+2,f
  5690  03B8  2BB3               	goto	u3667
  5691  03B9  0000               	nop
  5692                           
  5693                           ;main.c: 84: LCD_Write_String("E");
  5694  03BA  3044               	movlw	low (STR_18| (0+32768))
  5695  03BB  00F5               	movwf	LCD_Write_String@a
  5696  03BC  3090               	movlw	high (STR_18| (0+32768))
  5697  03BD  00F6               	movwf	LCD_Write_String@a+1
  5698  03BE  3196  26ED  3182   	fcall	_LCD_Write_String
  5699                           
  5700                           ;main.c: 85: _delay((unsigned long)((200)*(32000000/4000.0)));
  5701  03C1  3009               	movlw	9
  5702  03C2  0020               	movlb	0	; select bank0
  5703  03C3  00EB               	movwf	??_main+2
  5704  03C4  301E               	movlw	30
  5705  03C5  00EA               	movwf	??_main+1
  5706  03C6  30EB               	movlw	235
  5707  03C7  00E9               	movwf	??_main
  5708  03C8                     u3677:	
  5709  03C8  0BE9               	decfsz	??_main,f
  5710  03C9  2BC8               	goto	u3677
  5711  03CA  0BEA               	decfsz	??_main+1,f
  5712  03CB  2BC8               	goto	u3677
  5713  03CC  0BEB               	decfsz	??_main+2,f
  5714  03CD  2BC8               	goto	u3677
  5715  03CE  0000               	nop
  5716                           
  5717                           ;main.c: 86: LCD_Write_String(" ");
  5718  03CF  3038               	movlw	low (STR_6| (0+32768))
  5719  03D0  00F5               	movwf	LCD_Write_String@a
  5720  03D1  3090               	movlw	high (STR_6| (0+32768))
  5721  03D2  00F6               	movwf	LCD_Write_String@a+1
  5722  03D3  3196  26ED  3182   	fcall	_LCD_Write_String
  5723                           
  5724                           ;main.c: 87: _delay((unsigned long)((200)*(32000000/4000.0)));
  5725  03D6  3009               	movlw	9
  5726  03D7  0020               	movlb	0	; select bank0
  5727  03D8  00EB               	movwf	??_main+2
  5728  03D9  301E               	movlw	30
  5729  03DA  00EA               	movwf	??_main+1
  5730  03DB  30EB               	movlw	235
  5731  03DC  00E9               	movwf	??_main
  5732  03DD                     u3687:	
  5733  03DD  0BE9               	decfsz	??_main,f
  5734  03DE  2BDD               	goto	u3687
  5735  03DF  0BEA               	decfsz	??_main+1,f
  5736  03E0  2BDD               	goto	u3687
  5737  03E1  0BEB               	decfsz	??_main+2,f
  5738  03E2  2BDD               	goto	u3687
  5739  03E3  0000               	nop
  5740                           
  5741                           ;main.c: 88: LCD_Write_String("&");
  5742  03E4  303C               	movlw	low (STR_20| (0+32768))
  5743  03E5  00F5               	movwf	LCD_Write_String@a
  5744  03E6  3090               	movlw	high (STR_20| (0+32768))
  5745  03E7  00F6               	movwf	LCD_Write_String@a+1
  5746  03E8  3196  26ED  3182   	fcall	_LCD_Write_String
  5747                           
  5748                           ;main.c: 89: _delay((unsigned long)((200)*(32000000/4000.0)));
  5749  03EB  3009               	movlw	9
  5750  03EC  0020               	movlb	0	; select bank0
  5751  03ED  00EB               	movwf	??_main+2
  5752  03EE  301E               	movlw	30
  5753  03EF  00EA               	movwf	??_main+1
  5754  03F0  30EB               	movlw	235
  5755  03F1  00E9               	movwf	??_main
  5756  03F2                     u3697:	
  5757  03F2  0BE9               	decfsz	??_main,f
  5758  03F3  2BF2               	goto	u3697
  5759  03F4  0BEA               	decfsz	??_main+1,f
  5760  03F5  2BF2               	goto	u3697
  5761  03F6  0BEB               	decfsz	??_main+2,f
  5762  03F7  2BF2               	goto	u3697
  5763  03F8  0000               	nop
  5764                           
  5765                           ;main.c: 90: LCD_Write_String(" ");
  5766  03F9  3038               	movlw	low (STR_6| (0+32768))
  5767  03FA  00F5               	movwf	LCD_Write_String@a
  5768  03FB  3090               	movlw	high (STR_6| (0+32768))
  5769  03FC  00F6               	movwf	LCD_Write_String@a+1
  5770  03FD  3196  26ED  3182   	fcall	_LCD_Write_String
  5771                           
  5772                           ;main.c: 91: _delay((unsigned long)((200)*(32000000/4000.0)));
  5773  0400  3009               	movlw	9
  5774  0401  0020               	movlb	0	; select bank0
  5775  0402  00EB               	movwf	??_main+2
  5776  0403  301E               	movlw	30
  5777  0404  00EA               	movwf	??_main+1
  5778  0405  30EB               	movlw	235
  5779  0406  00E9               	movwf	??_main
  5780  0407                     u3707:	
  5781  0407  0BE9               	decfsz	??_main,f
  5782  0408  2C07               	goto	u3707
  5783  0409  0BEA               	decfsz	??_main+1,f
  5784  040A  2C07               	goto	u3707
  5785  040B  0BEB               	decfsz	??_main+2,f
  5786  040C  2C07               	goto	u3707
  5787  040D  0000               	nop
  5788                           
  5789                           ;main.c: 92: LCD_Write_String("K");
  5790  040E  304A               	movlw	low (STR_22| (0+32768))
  5791  040F  00F5               	movwf	LCD_Write_String@a
  5792  0410  3090               	movlw	high (STR_22| (0+32768))
  5793  0411  00F6               	movwf	LCD_Write_String@a+1
  5794  0412  3196  26ED  3182   	fcall	_LCD_Write_String
  5795                           
  5796                           ;main.c: 93: _delay((unsigned long)((200)*(32000000/4000.0)));
  5797  0415  3009               	movlw	9
  5798  0416  0020               	movlb	0	; select bank0
  5799  0417  00EB               	movwf	??_main+2
  5800  0418  301E               	movlw	30
  5801  0419  00EA               	movwf	??_main+1
  5802  041A  30EB               	movlw	235
  5803  041B  00E9               	movwf	??_main
  5804  041C                     u3717:	
  5805  041C  0BE9               	decfsz	??_main,f
  5806  041D  2C1C               	goto	u3717
  5807  041E  0BEA               	decfsz	??_main+1,f
  5808  041F  2C1C               	goto	u3717
  5809  0420  0BEB               	decfsz	??_main+2,f
  5810  0421  2C1C               	goto	u3717
  5811  0422  0000               	nop
  5812                           
  5813                           ;main.c: 94: LCD_Write_String("I");
  5814  0423  3048               	movlw	low (STR_10| (0+32768))
  5815  0424  00F5               	movwf	LCD_Write_String@a
  5816  0425  3090               	movlw	high (STR_10| (0+32768))
  5817  0426  00F6               	movwf	LCD_Write_String@a+1
  5818  0427  3196  26ED  3182   	fcall	_LCD_Write_String
  5819                           
  5820                           ;main.c: 95: _delay((unsigned long)((200)*(32000000/4000.0)));
  5821  042A  3009               	movlw	9
  5822  042B  0020               	movlb	0	; select bank0
  5823  042C  00EB               	movwf	??_main+2
  5824  042D  301E               	movlw	30
  5825  042E  00EA               	movwf	??_main+1
  5826  042F  30EB               	movlw	235
  5827  0430  00E9               	movwf	??_main
  5828  0431                     u3727:	
  5829  0431  0BE9               	decfsz	??_main,f
  5830  0432  2C31               	goto	u3727
  5831  0433  0BEA               	decfsz	??_main+1,f
  5832  0434  2C31               	goto	u3727
  5833  0435  0BEB               	decfsz	??_main+2,f
  5834  0436  2C31               	goto	u3727
  5835  0437  0000               	nop
  5836                           
  5837                           ;main.c: 96: LCD_Write_String("D");
  5838  0438  3042               	movlw	low (STR_7| (0+32768))
  5839  0439  00F5               	movwf	LCD_Write_String@a
  5840  043A  3090               	movlw	high (STR_7| (0+32768))
  5841  043B  00F6               	movwf	LCD_Write_String@a+1
  5842  043C  3196  26ED  3182   	fcall	_LCD_Write_String
  5843                           
  5844                           ;main.c: 97: _delay((unsigned long)((200)*(32000000/4000.0)));
  5845  043F  3009               	movlw	9
  5846  0440  0020               	movlb	0	; select bank0
  5847  0441  00EB               	movwf	??_main+2
  5848  0442  301E               	movlw	30
  5849  0443  00EA               	movwf	??_main+1
  5850  0444  30EB               	movlw	235
  5851  0445  00E9               	movwf	??_main
  5852  0446                     u3737:	
  5853  0446  0BE9               	decfsz	??_main,f
  5854  0447  2C46               	goto	u3737
  5855  0448  0BEA               	decfsz	??_main+1,f
  5856  0449  2C46               	goto	u3737
  5857  044A  0BEB               	decfsz	??_main+2,f
  5858  044B  2C46               	goto	u3737
  5859  044C  0000               	nop
  5860                           
  5861                           ;main.c: 98: LCD_Write_String("S");
  5862  044D  3052               	movlw	low (STR_13| (0+32768))
  5863  044E  00F5               	movwf	LCD_Write_String@a
  5864  044F  3090               	movlw	high (STR_13| (0+32768))
  5865  0450  00F6               	movwf	LCD_Write_String@a+1
  5866  0451  3196  26ED  3182   	fcall	_LCD_Write_String
  5867                           
  5868                           ;main.c: 99: _delay((unsigned long)((200)*(32000000/4000.0)));
  5869  0454  3009               	movlw	9
  5870  0455  0020               	movlb	0	; select bank0
  5871  0456  00EB               	movwf	??_main+2
  5872  0457  301E               	movlw	30
  5873  0458  00EA               	movwf	??_main+1
  5874  0459  30EB               	movlw	235
  5875  045A  00E9               	movwf	??_main
  5876  045B                     u3747:	
  5877  045B  0BE9               	decfsz	??_main,f
  5878  045C  2C5B               	goto	u3747
  5879  045D  0BEA               	decfsz	??_main+1,f
  5880  045E  2C5B               	goto	u3747
  5881  045F  0BEB               	decfsz	??_main+2,f
  5882  0460  2C5B               	goto	u3747
  5883  0461  0000               	nop
  5884                           
  5885                           ;main.c: 100: LCD_Write_String("!");
  5886  0462  303A               	movlw	low (STR_26| (0+32768))
  5887  0463  00F5               	movwf	LCD_Write_String@a
  5888  0464  3090               	movlw	high (STR_26| (0+32768))
  5889  0465  00F6               	movwf	LCD_Write_String@a+1
  5890  0466  3196  26ED  3182   	fcall	_LCD_Write_String
  5891                           
  5892                           ;main.c: 101: _delay((unsigned long)((5000)*(32000000/4000.0)));
  5893  0469  30CB               	movlw	203
  5894  046A  0020               	movlb	0	; select bank0
  5895  046B  00EB               	movwf	??_main+2
  5896  046C  30ED               	movlw	237
  5897  046D  00EA               	movwf	??_main+1
  5898  046E  304C               	movlw	76
  5899  046F  00E9               	movwf	??_main
  5900  0470                     u3757:	
  5901  0470  0BE9               	decfsz	??_main,f
  5902  0471  2C70               	goto	u3757
  5903  0472  0BEA               	decfsz	??_main+1,f
  5904  0473  2C70               	goto	u3757
  5905  0474  0BEB               	decfsz	??_main+2,f
  5906  0475  2C70               	goto	u3757
  5907  0476  3200               	nop2
  5908                           
  5909                           ;main.c: 103: LCD_Clear();
  5910  0477  3196  264A  3182   	fcall	_LCD_Clear
  5911                           
  5912                           ;main.c: 105: PWM6_LoadDutyValue(dutyCycle);
  5913  047A  0021               	movlb	1	; select bank1
  5914  047B  0859               	movf	(main@dutyCycle+1)^(0+128),w
  5915  047C  00F1               	movwf	PWM6_LoadDutyValue@dutyCycle+1
  5916  047D  0858               	movf	main@dutyCycle^(0+128),w
  5917  047E  00F0               	movwf	PWM6_LoadDutyValue@dutyCycle
  5918  047F  3196  26BF  3182   	fcall	_PWM6_LoadDutyValue
  5919  0482                     l2947:	
  5920                           ;main.c: 108: while (1)
  5921                           
  5922                           
  5923                           ;main.c: 109: {
  5924                           ;main.c: 111: for(x=0;x<6;x++) analogs[x]=readAnalog(x);
  5925  0482  0021               	movlb	1	; select bank1
  5926  0483  01D7               	clrf	main@x^(0+128)
  5927  0484  3006               	movlw	6
  5928  0485  0257               	subwf	main@x^(0+128),w
  5929  0486  1803               	btfsc	3,0
  5930  0487  2CA6               	goto	l2959
  5931  0488                     l2953:	
  5932  0488  0857               	movf	main@x^(0+128),w
  5933  0489  0020               	movlb	0	; select bank0
  5934  048A  00E9               	movwf	??_main
  5935  048B  01EA               	clrf	??_main+1
  5936  048C  0869               	movf	??_main,w
  5937  048D  00A6               	movwf	readAnalog@channel
  5938  048E  086A               	movf	??_main+1,w
  5939  048F  00A7               	movwf	readAnalog@channel+1
  5940  0490  3180  20D2  3182   	fcall	_readAnalog
  5941  0493  0021               	movlb	1	; select bank1
  5942  0494  3557               	lslf	main@x^(0+128),w
  5943  0495  3EBF               	addlw	(low (main@analogs| 0))& (0+255)
  5944  0496  0086               	movwf	6
  5945  0497  0187               	clrf	7
  5946  0498  0020               	movlb	0	; select bank0
  5947  0499  0826               	movf	?_readAnalog,w
  5948  049A  3FC0               	movwi [0]fsr1
  5949  049B  0827               	movf	?_readAnalog+1,w
  5950  049C  3FC1               	movwi [1]fsr1
  5951  049D  3001               	movlw	1
  5952  049E  00E9               	movwf	??_main
  5953  049F  0869               	movf	??_main,w
  5954  04A0  0021               	movlb	1	; select bank1
  5955  04A1  07D7               	addwf	main@x^(0+128),f
  5956  04A2  3006               	movlw	6
  5957  04A3  0257               	subwf	main@x^(0+128),w
  5958  04A4  1C03               	skipc
  5959  04A5  2C88               	goto	l2953
  5960  04A6                     l2959:	
  5961                           
  5962                           ;main.c: 113: if(analogs[0]<1020)tPadCount+=1;
  5963  04A6  3003               	movlw	3
  5964  04A7  0240               	subwf	(main@analogs+1)^(0+128),w
  5965  04A8  30FC               	movlw	252
  5966  04A9  1903               	skipnz
  5967  04AA  023F               	subwf	main@analogs^(0+128),w
  5968  04AB  1803               	skipnc
  5969  04AC  2CB3               	goto	l2963
  5970  04AD  3001               	movlw	1
  5971  04AE  0020               	movlb	0	; select bank0
  5972  04AF  00E9               	movwf	??_main
  5973  04B0  0869               	movf	??_main,w
  5974  04B1  0021               	movlb	1	; select bank1
  5975  04B2  07D4               	addwf	main@tPadCount^(0+128),f
  5976  04B3                     l2963:	
  5977                           
  5978                           ;main.c: 116: if(analogs[1]<900)tPadCount-=1;
  5979  04B3  3003               	movlw	3
  5980  04B4  0242               	subwf	((main@analogs+1)^(0+128)+2),w
  5981  04B5  3084               	movlw	132
  5982  04B6  1903               	skipnz
  5983  04B7  0241               	subwf	(main@analogs^(0+128)+2),w
  5984  04B8  1803               	skipnc
  5985  04B9  2CBC               	goto	l291
  5986  04BA  3001               	movlw	1
  5987  04BB  02D4               	subwf	main@tPadCount^(0+128),f
  5988  04BC                     l291:	
  5989                           
  5990                           ;main.c: 118: if(tPadCount<1)
  5991  04BC  0854               	movf	main@tPadCount^(0+128),w
  5992  04BD  1D03               	btfss	3,2
  5993  04BE  2CC7               	goto	l292
  5994                           
  5995                           ;main.c: 119: {
  5996                           ;main.c: 120: choice=1;
  5997  04BF  01D5               	clrf	main@choice^(0+128)
  5998  04C0  0AD5               	incf	main@choice^(0+128),f
  5999                           
  6000                           ;main.c: 121: tPadCount=10;
  6001  04C1  300A               	movlw	10
  6002  04C2  0020               	movlb	0	; select bank0
  6003  04C3  00E9               	movwf	??_main
  6004  04C4  0869               	movf	??_main,w
  6005  04C5  0021               	movlb	1	; select bank1
  6006  04C6  00D4               	movwf	main@tPadCount^(0+128)
  6007  04C7                     l292:	
  6008                           
  6009                           ;main.c: 122: }
  6010                           ;main.c: 124: if(tPadCount>19)
  6011  04C7  3014               	movlw	20
  6012  04C8  0254               	subwf	main@tPadCount^(0+128),w
  6013  04C9  1C03               	skipc
  6014  04CA  2CD2               	goto	l2975
  6015                           
  6016                           ;main.c: 125: {
  6017                           ;main.c: 126: choice=0;
  6018  04CB  01D5               	clrf	main@choice^(0+128)
  6019                           
  6020                           ;main.c: 127: tPadCount=10;
  6021  04CC  300A               	movlw	10
  6022  04CD  0020               	movlb	0	; select bank0
  6023  04CE  00E9               	movwf	??_main
  6024  04CF  0869               	movf	??_main,w
  6025  04D0  0021               	movlb	1	; select bank1
  6026  04D1  00D4               	movwf	main@tPadCount^(0+128)
  6027  04D2                     l2975:	
  6028                           
  6029                           ;main.c: 128: }
  6030                           ;main.c: 130: if(analogs[0]<1020&&analogs[1]<970)
  6031  04D2  3003               	movlw	3
  6032  04D3  0240               	subwf	(main@analogs+1)^(0+128),w
  6033  04D4  30FC               	movlw	252
  6034  04D5  1903               	skipnz
  6035  04D6  023F               	subwf	main@analogs^(0+128),w
  6036  04D7  1803               	skipnc
  6037  04D8  2CF4               	goto	l2981
  6038  04D9  3003               	movlw	3
  6039  04DA  0242               	subwf	((main@analogs+1)^(0+128)+2),w
  6040  04DB  30CA               	movlw	202
  6041  04DC  1903               	skipnz
  6042  04DD  0241               	subwf	(main@analogs^(0+128)+2),w
  6043  04DE  1803               	skipnc
  6044  04DF  2CF4               	goto	l2981
  6045                           
  6046                           ;main.c: 131: {
  6047                           ;main.c: 132: choice=2;
  6048  04E0  3002               	movlw	2
  6049  04E1  0020               	movlb	0	; select bank0
  6050  04E2  00E9               	movwf	??_main
  6051  04E3  0869               	movf	??_main,w
  6052  04E4  0021               	movlb	1	; select bank1
  6053  04E5  00D5               	movwf	main@choice^(0+128)
  6054                           
  6055                           ;main.c: 133: _delay((unsigned long)((200)*(32000000/4000.0)));
  6056  04E6  3009               	movlw	9
  6057  04E7  0020               	movlb	0	; select bank0
  6058  04E8  00EB               	movwf	??_main+2
  6059  04E9  301E               	movlw	30
  6060  04EA  00EA               	movwf	??_main+1
  6061  04EB  30EB               	movlw	235
  6062  04EC  00E9               	movwf	??_main
  6063  04ED                     u3767:	
  6064  04ED  0BE9               	decfsz	??_main,f
  6065  04EE  2CED               	goto	u3767
  6066  04EF  0BEA               	decfsz	??_main+1,f
  6067  04F0  2CED               	goto	u3767
  6068  04F1  0BEB               	decfsz	??_main+2,f
  6069  04F2  2CED               	goto	u3767
  6070  04F3  0000               	nop
  6071  04F4                     l2981:	
  6072                           
  6073                           ;main.c: 134: }
  6074                           ;main.c: 138: startDelay+=1;
  6075  04F4  3001               	movlw	1
  6076  04F5  0020               	movlb	0	; select bank0
  6077  04F6  00E9               	movwf	??_main
  6078  04F7  0869               	movf	??_main,w
  6079  04F8  0021               	movlb	1	; select bank1
  6080  04F9  07BE               	addwf	main@startDelay^(0+128),f
  6081                           
  6082                           ;main.c: 140: if(startDelay>254)
  6083  04FA  0A3E               	incf	main@startDelay^(0+128),w
  6084  04FB  1D03               	btfss	3,2
  6085  04FC  2E13               	goto	l3075
  6086                           
  6087                           ;main.c: 141: {
  6088                           ;main.c: 142: startDelay=254;
  6089  04FD  30FE               	movlw	254
  6090  04FE  0020               	movlb	0	; select bank0
  6091  04FF  00E9               	movwf	??_main
  6092  0500  0869               	movf	??_main,w
  6093  0501  0021               	movlb	1	; select bank1
  6094  0502  00BE               	movwf	main@startDelay^(0+128)
  6095                           
  6096                           ;main.c: 144: if(analogs[2]<900&&analogs[3]<900)asm("reset");
  6097  0503  3003               	movlw	3
  6098  0504  0244               	subwf	((main@analogs+1)^(0+128)+4),w
  6099  0505  3084               	movlw	132
  6100  0506  1903               	skipnz
  6101  0507  0243               	subwf	(main@analogs^(0+128)+4),w
  6102  0508  1803               	skipnc
  6103  0509  2D11               	goto	l2991
  6104  050A  3003               	movlw	3
  6105  050B  0246               	subwf	((main@analogs+1)^(0+128)+6),w
  6106  050C  3084               	movlw	132
  6107  050D  1903               	skipnz
  6108  050E  0245               	subwf	(main@analogs^(0+128)+6),w
  6109  050F  1C03               	btfss	3,0
  6110  0510  0001               	reset	;# 
  6111  0511                     l2991:	
  6112                           
  6113                           ;main.c: 146: if(analogs[2]<900)
  6114  0511  3003               	movlw	3
  6115  0512  0021               	movlb	1	; select bank1
  6116  0513  0244               	subwf	((main@analogs+1)^(0+128)+4),w
  6117  0514  3084               	movlw	132
  6118  0515  1903               	skipnz
  6119  0516  0243               	subwf	(main@analogs^(0+128)+4),w
  6120  0517  1803               	skipnc
  6121  0518  2D91               	goto	l3033
  6122                           
  6123                           ;main.c: 147: {
  6124                           ;main.c: 148: resetDelay+=1;
  6125  0519  3001               	movlw	1
  6126  051A  0020               	movlb	0	; select bank0
  6127  051B  00E9               	movwf	??_main
  6128  051C  0869               	movf	??_main,w
  6129  051D  0021               	movlb	1	; select bank1
  6130  051E  07D3               	addwf	main@resetDelay^(0+128),f
  6131                           
  6132                           ;main.c: 150: if(resetDelay>20)
  6133  051F  3015               	movlw	21
  6134  0520  0253               	subwf	main@resetDelay^(0+128),w
  6135  0521  1803               	btfsc	3,0
  6136  0522  2D75               	goto	l3023
  6137  0523  2D91               	goto	l3033
  6138  0524                     l2999:	
  6139                           ;main.c: 151: {
  6140                           ;main.c: 152: while(analogs[2]<975)
  6141                           
  6142                           
  6143                           ;main.c: 153: {
  6144                           ;main.c: 154: analogs[2]=ADCRead(4);
  6145  0524  3004               	movlw	4
  6146  0525  3196  268D  3182   	fcall	_ADCRead
  6147  0528  0871               	movf	?_ADCRead+1,w
  6148  0529  0021               	movlb	1	; select bank1
  6149  052A  00C4               	movwf	((main@analogs+1)^(0+128)+4)
  6150  052B  0870               	movf	?_ADCRead,w
  6151  052C  00C3               	movwf	(main@analogs^(0+128)+4)
  6152                           
  6153                           ;main.c: 156: if(bCount<1)LCD_Clear();
  6154  052D  084B               	movf	main@bCount^(0+128),w
  6155  052E  044C               	iorwf	(main@bCount+1)^(0+128),w
  6156  052F  1D03               	btfss	3,2
  6157  0530  2D34               	goto	l3005
  6158  0531  3196  264A  3182   	fcall	_LCD_Clear
  6159  0534                     l3005:	
  6160                           
  6161                           ;main.c: 157: bCount+=1;
  6162  0534  3001               	movlw	1
  6163  0535  0021               	movlb	1	; select bank1
  6164  0536  07CB               	addwf	main@bCount^(0+128),f
  6165  0537  3000               	movlw	0
  6166  0538  3DCC               	addwfc	(main@bCount+1)^(0+128),f
  6167                           
  6168                           ;main.c: 159: if(dutyCycle>0)dutyCycle-=1;
  6169  0539  0858               	movf	main@dutyCycle^(0+128),w
  6170  053A  0459               	iorwf	(main@dutyCycle+1)^(0+128),w
  6171  053B  1903               	btfsc	3,2
  6172  053C  2D41               	goto	l3011
  6173  053D  3001               	movlw	1
  6174  053E  02D8               	subwf	main@dutyCycle^(0+128),f
  6175  053F  3000               	movlw	0
  6176  0540  3BD9               	subwfb	(main@dutyCycle+1)^(0+128),f
  6177  0541                     l3011:	
  6178                           
  6179                           ;main.c: 161: { LCD_Set_Cursor(0,0); LCD_Write_String("BackLight:");};
  6180  0541  01F4               	clrf	LCD_Set_Cursor@y
  6181  0542  3000               	movlw	0
  6182  0543  3188  20B7  3182   	fcall	_LCD_Set_Cursor
  6183  0546  301B               	movlw	low (STR_27| (0+32768))
  6184  0547  00F5               	movwf	LCD_Write_String@a
  6185  0548  3090               	movlw	high (STR_27| (0+32768))
  6186  0549  00F6               	movwf	LCD_Write_String@a+1
  6187  054A  3196  26ED  3182   	fcall	_LCD_Write_String
  6188                           
  6189                           ;main.c: 162: LCD_Write_Int(dutyCycle/10,-1,0,0);
  6190  054D  300A               	movlw	10
  6191  054E  00F0               	movwf	___lwdiv@divisor
  6192  054F  3000               	movlw	0
  6193  0550  00F1               	movwf	___lwdiv@divisor+1
  6194  0551  0021               	movlb	1	; select bank1
  6195  0552  0859               	movf	(main@dutyCycle+1)^(0+128),w
  6196  0553  00F3               	movwf	___lwdiv@dividend+1
  6197  0554  0858               	movf	main@dutyCycle^(0+128),w
  6198  0555  00F2               	movwf	___lwdiv@dividend
  6199  0556  3197  27CC  3182   	fcall	___lwdiv
  6200  0559  0871               	movf	?___lwdiv+1,w
  6201  055A  0020               	movlb	0	; select bank0
  6202  055B  00A1               	movwf	LCD_Write_Int@value+1
  6203  055C  0870               	movf	?___lwdiv,w
  6204  055D  00A0               	movwf	LCD_Write_Int@value
  6205  055E  01A2               	clrf	LCD_Write_Int@fieldLength
  6206  055F  03A2               	decf	LCD_Write_Int@fieldLength,f
  6207  0560  01A3               	clrf	LCD_Write_Int@numPlaces
  6208  0561  01A4               	clrf	LCD_Write_Int@sign
  6209  0562  3180  2007  3182   	fcall	_LCD_Write_Int
  6210                           
  6211                           ;main.c: 163: LCD_Write_Char('%');
  6212  0565  3025               	movlw	37
  6213  0566  3197  27A0  3182   	fcall	_LCD_Write_Char
  6214                           
  6215                           ;main.c: 164: LCD_Write_Char(' ');
  6216  0569  3020               	movlw	32
  6217  056A  3197  27A0  3182   	fcall	_LCD_Write_Char
  6218                           
  6219                           ;main.c: 165: PWM6_LoadDutyValue(dutyCycle);
  6220  056D  0021               	movlb	1	; select bank1
  6221  056E  0859               	movf	(main@dutyCycle+1)^(0+128),w
  6222  056F  00F1               	movwf	PWM6_LoadDutyValue@dutyCycle+1
  6223  0570  0858               	movf	main@dutyCycle^(0+128),w
  6224  0571  00F0               	movwf	PWM6_LoadDutyValue@dutyCycle
  6225  0572  3196  26BF  3182   	fcall	_PWM6_LoadDutyValue
  6226  0575                     l3023:	
  6227  0575  3003               	movlw	3
  6228  0576  0021               	movlb	1	; select bank1
  6229  0577  0244               	subwf	((main@analogs+1)^(0+128)+4),w
  6230  0578  30CF               	movlw	207
  6231  0579  1903               	skipnz
  6232  057A  0243               	subwf	(main@analogs^(0+128)+4),w
  6233  057B  1C03               	skipc
  6234  057C  2D24               	goto	l2999
  6235                           
  6236                           ;main.c: 166: }
  6237                           ;main.c: 167: bCount=0;
  6238  057D  01CB               	clrf	main@bCount^(0+128)
  6239  057E  01CC               	clrf	(main@bCount+1)^(0+128)
  6240                           
  6241                           ;main.c: 168: _delay((unsigned long)((100)*(32000000/4000.0)));
  6242  057F  3005               	movlw	5
  6243  0580  0020               	movlb	0	; select bank0
  6244  0581  00EB               	movwf	??_main+2
  6245  0582  300F               	movlw	15
  6246  0583  00EA               	movwf	??_main+1
  6247  0584  30F4               	movlw	244
  6248  0585  00E9               	movwf	??_main
  6249  0586                     u3777:	
  6250  0586  0BE9               	decfsz	??_main,f
  6251  0587  2D86               	goto	u3777
  6252  0588  0BEA               	decfsz	??_main+1,f
  6253  0589  2D86               	goto	u3777
  6254  058A  0BEB               	decfsz	??_main+2,f
  6255  058B  2D86               	goto	u3777
  6256                           
  6257                           ;main.c: 169: LCD_Clear();
  6258  058C  3196  264A  3182   	fcall	_LCD_Clear
  6259                           
  6260                           ;main.c: 170: resetDelay=0;
  6261  058F  0021               	movlb	1	; select bank1
  6262  0590  01D3               	clrf	main@resetDelay^(0+128)
  6263  0591                     l3033:	
  6264                           
  6265                           ;main.c: 171: }
  6266                           ;main.c: 172: }
  6267                           ;main.c: 174: if(analogs[3]<900)
  6268  0591  3003               	movlw	3
  6269  0592  0246               	subwf	((main@analogs+1)^(0+128)+6),w
  6270  0593  3084               	movlw	132
  6271  0594  1903               	skipnz
  6272  0595  0245               	subwf	(main@analogs^(0+128)+6),w
  6273  0596  1803               	skipnc
  6274  0597  2E13               	goto	l3075
  6275                           
  6276                           ;main.c: 175: {
  6277                           ;main.c: 176: resetDelay+=1;
  6278  0598  3001               	movlw	1
  6279  0599  0020               	movlb	0	; select bank0
  6280  059A  00E9               	movwf	??_main
  6281  059B  0869               	movf	??_main,w
  6282  059C  0021               	movlb	1	; select bank1
  6283  059D  07D3               	addwf	main@resetDelay^(0+128),f
  6284                           
  6285                           ;main.c: 178: if(resetDelay>20)
  6286  059E  3015               	movlw	21
  6287  059F  0253               	subwf	main@resetDelay^(0+128),w
  6288  05A0  1803               	btfsc	3,0
  6289  05A1  2DF7               	goto	l3065
  6290  05A2  2E13               	goto	l3075
  6291  05A3                     l3041:	
  6292                           ;main.c: 179: {
  6293                           ;main.c: 180: while(analogs[3]<975)
  6294                           
  6295                           
  6296                           ;main.c: 181: {
  6297                           ;main.c: 182: analogs[3]=ADCRead(5);
  6298  05A3  3005               	movlw	5
  6299  05A4  3196  268D  3182   	fcall	_ADCRead
  6300  05A7  0871               	movf	?_ADCRead+1,w
  6301  05A8  0021               	movlb	1	; select bank1
  6302  05A9  00C6               	movwf	((main@analogs+1)^(0+128)+6)
  6303  05AA  0870               	movf	?_ADCRead,w
  6304  05AB  00C5               	movwf	(main@analogs^(0+128)+6)
  6305                           
  6306                           ;main.c: 184: if(bCount<1)LCD_Clear();
  6307  05AC  084B               	movf	main@bCount^(0+128),w
  6308  05AD  044C               	iorwf	(main@bCount+1)^(0+128),w
  6309  05AE  1D03               	btfss	3,2
  6310  05AF  2DB3               	goto	l3047
  6311  05B0  3196  264A  3182   	fcall	_LCD_Clear
  6312  05B3                     l3047:	
  6313                           
  6314                           ;main.c: 185: bCount+=1;
  6315  05B3  3001               	movlw	1
  6316  05B4  0021               	movlb	1	; select bank1
  6317  05B5  07CB               	addwf	main@bCount^(0+128),f
  6318  05B6  3000               	movlw	0
  6319  05B7  3DCC               	addwfc	(main@bCount+1)^(0+128),f
  6320                           
  6321                           ;main.c: 187: if(dutyCycle<1009)dutyCycle+=1;
  6322  05B8  3003               	movlw	3
  6323  05B9  0259               	subwf	(main@dutyCycle+1)^(0+128),w
  6324  05BA  30F1               	movlw	241
  6325  05BB  1903               	skipnz
  6326  05BC  0258               	subwf	main@dutyCycle^(0+128),w
  6327  05BD  1803               	skipnc
  6328  05BE  2DC3               	goto	l3053
  6329  05BF  3001               	movlw	1
  6330  05C0  07D8               	addwf	main@dutyCycle^(0+128),f
  6331  05C1  3000               	movlw	0
  6332  05C2  3DD9               	addwfc	(main@dutyCycle+1)^(0+128),f
  6333  05C3                     l3053:	
  6334                           
  6335                           ;main.c: 189: { LCD_Set_Cursor(0,0); LCD_Write_String("BackLight:");};
  6336  05C3  01F4               	clrf	LCD_Set_Cursor@y
  6337  05C4  3000               	movlw	0
  6338  05C5  3188  20B7  3182   	fcall	_LCD_Set_Cursor
  6339  05C8  301B               	movlw	low (STR_27| (0+32768))
  6340  05C9  00F5               	movwf	LCD_Write_String@a
  6341  05CA  3090               	movlw	high (STR_27| (0+32768))
  6342  05CB  00F6               	movwf	LCD_Write_String@a+1
  6343  05CC  3196  26ED  3182   	fcall	_LCD_Write_String
  6344                           
  6345                           ;main.c: 190: LCD_Write_Int(dutyCycle/10,-1,0,0);
  6346  05CF  300A               	movlw	10
  6347  05D0  00F0               	movwf	___lwdiv@divisor
  6348  05D1  3000               	movlw	0
  6349  05D2  00F1               	movwf	___lwdiv@divisor+1
  6350  05D3  0021               	movlb	1	; select bank1
  6351  05D4  0859               	movf	(main@dutyCycle+1)^(0+128),w
  6352  05D5  00F3               	movwf	___lwdiv@dividend+1
  6353  05D6  0858               	movf	main@dutyCycle^(0+128),w
  6354  05D7  00F2               	movwf	___lwdiv@dividend
  6355  05D8  3197  27CC  3182   	fcall	___lwdiv
  6356  05DB  0871               	movf	?___lwdiv+1,w
  6357  05DC  0020               	movlb	0	; select bank0
  6358  05DD  00A1               	movwf	LCD_Write_Int@value+1
  6359  05DE  0870               	movf	?___lwdiv,w
  6360  05DF  00A0               	movwf	LCD_Write_Int@value
  6361  05E0  01A2               	clrf	LCD_Write_Int@fieldLength
  6362  05E1  03A2               	decf	LCD_Write_Int@fieldLength,f
  6363  05E2  01A3               	clrf	LCD_Write_Int@numPlaces
  6364  05E3  01A4               	clrf	LCD_Write_Int@sign
  6365  05E4  3180  2007  3182   	fcall	_LCD_Write_Int
  6366                           
  6367                           ;main.c: 191: LCD_Write_Char('%');
  6368  05E7  3025               	movlw	37
  6369  05E8  3197  27A0  3182   	fcall	_LCD_Write_Char
  6370                           
  6371                           ;main.c: 192: LCD_Write_Char(' ');
  6372  05EB  3020               	movlw	32
  6373  05EC  3197  27A0  3182   	fcall	_LCD_Write_Char
  6374                           
  6375                           ;main.c: 193: PWM6_LoadDutyValue(dutyCycle);
  6376  05EF  0021               	movlb	1	; select bank1
  6377  05F0  0859               	movf	(main@dutyCycle+1)^(0+128),w
  6378  05F1  00F1               	movwf	PWM6_LoadDutyValue@dutyCycle+1
  6379  05F2  0858               	movf	main@dutyCycle^(0+128),w
  6380  05F3  00F0               	movwf	PWM6_LoadDutyValue@dutyCycle
  6381  05F4  3196  26BF  3182   	fcall	_PWM6_LoadDutyValue
  6382  05F7                     l3065:	
  6383  05F7  3003               	movlw	3
  6384  05F8  0021               	movlb	1	; select bank1
  6385  05F9  0246               	subwf	((main@analogs+1)^(0+128)+6),w
  6386  05FA  30CF               	movlw	207
  6387  05FB  1903               	skipnz
  6388  05FC  0245               	subwf	(main@analogs^(0+128)+6),w
  6389  05FD  1C03               	skipc
  6390  05FE  2DA3               	goto	l3041
  6391                           
  6392                           ;main.c: 194: }
  6393                           ;main.c: 195: bCount=0;
  6394  05FF  01CB               	clrf	main@bCount^(0+128)
  6395  0600  01CC               	clrf	(main@bCount+1)^(0+128)
  6396                           
  6397                           ;main.c: 196: _delay((unsigned long)((100)*(32000000/4000.0)));
  6398  0601  3005               	movlw	5
  6399  0602  0020               	movlb	0	; select bank0
  6400  0603  00EB               	movwf	??_main+2
  6401  0604  300F               	movlw	15
  6402  0605  00EA               	movwf	??_main+1
  6403  0606  30F4               	movlw	244
  6404  0607  00E9               	movwf	??_main
  6405  0608                     u3787:	
  6406  0608  0BE9               	decfsz	??_main,f
  6407  0609  2E08               	goto	u3787
  6408  060A  0BEA               	decfsz	??_main+1,f
  6409  060B  2E08               	goto	u3787
  6410  060C  0BEB               	decfsz	??_main+2,f
  6411  060D  2E08               	goto	u3787
  6412                           
  6413                           ;main.c: 197: LCD_Clear();
  6414  060E  3196  264A  3182   	fcall	_LCD_Clear
  6415                           
  6416                           ;main.c: 198: resetDelay=0;
  6417  0611  0021               	movlb	1	; select bank1
  6418  0612  01D3               	clrf	main@resetDelay^(0+128)
  6419  0613                     l3075:	
  6420                           
  6421                           ;main.c: 199: }
  6422                           ;main.c: 200: }
  6423                           ;main.c: 201: }
  6424                           ;main.c: 205: displayTemp = tempCalc(analogs[4]);
  6425  0613  0848               	movf	((main@analogs+1)^(0+128)+8),w
  6426  0614  0020               	movlb	0	; select bank0
  6427  0615  00DE               	movwf	tempCalc@analogValue+1
  6428  0616  0021               	movlb	1	; select bank1
  6429  0617  0847               	movf	(main@analogs^(0+128)+8),w
  6430  0618  0020               	movlb	0	; select bank0
  6431  0619  00DD               	movwf	tempCalc@analogValue
  6432  061A  318E  262B  3182   	fcall	_tempCalc
  6433  061D  0020               	movlb	0	; select bank0
  6434  061E  085D               	movf	?_tempCalc,w
  6435  061F  0021               	movlb	1	; select bank1
  6436  0620  00CD               	movwf	main@displayTemp^(0+128)
  6437  0621  0020               	movlb	0	; select bank0
  6438  0622  085E               	movf	?_tempCalc+1,w
  6439  0623  0021               	movlb	1	; select bank1
  6440  0624  00CE               	movwf	(main@displayTemp+1)^(0+128)
  6441  0625  0020               	movlb	0	; select bank0
  6442  0626  085F               	movf	?_tempCalc+2,w
  6443  0627  0021               	movlb	1	; select bank1
  6444  0628  00CF               	movwf	(main@displayTemp+2)^(0+128)
  6445                           
  6446                           ;main.c: 207: displayTemp2 = tempCalc(analogs[5]);
  6447  0629  084A               	movf	((main@analogs+1)^(0+128)+10),w
  6448  062A  0020               	movlb	0	; select bank0
  6449  062B  00DE               	movwf	tempCalc@analogValue+1
  6450  062C  0021               	movlb	1	; select bank1
  6451  062D  0849               	movf	(main@analogs^(0+128)+10),w
  6452  062E  0020               	movlb	0	; select bank0
  6453  062F  00DD               	movwf	tempCalc@analogValue
  6454  0630  318E  262B  3182   	fcall	_tempCalc
  6455  0633  0020               	movlb	0	; select bank0
  6456  0634  085D               	movf	?_tempCalc,w
  6457  0635  0021               	movlb	1	; select bank1
  6458  0636  00D0               	movwf	main@displayTemp2^(0+128)
  6459  0637  0020               	movlb	0	; select bank0
  6460  0638  085E               	movf	?_tempCalc+1,w
  6461  0639  0021               	movlb	1	; select bank1
  6462  063A  00D1               	movwf	(main@displayTemp2+1)^(0+128)
  6463  063B  0020               	movlb	0	; select bank0
  6464  063C  085F               	movf	?_tempCalc+2,w
  6465  063D  0021               	movlb	1	; select bank1
  6466  063E  00D2               	movwf	(main@displayTemp2+2)^(0+128)
  6467                           
  6468                           ;main.c: 209: if(loop>127)
  6469  063F  3080               	movlw	128
  6470  0640  023D               	subwf	main@loop^(0+128),w
  6471  0641  1C03               	skipc
  6472  0642  2FB6               	goto	l3139
  6473                           
  6474                           ;main.c: 210: {
  6475                           ;main.c: 211: { LCD_Set_Cursor(0,0); LCD_Write_String("In");};
  6476  0643  01F4               	clrf	LCD_Set_Cursor@y
  6477  0644  3000               	movlw	0
  6478  0645  3188  20B7  3182   	fcall	_LCD_Set_Cursor
  6479  0648  3035               	movlw	low (STR_29| (0+32768))
  6480  0649  00F5               	movwf	LCD_Write_String@a
  6481  064A  3090               	movlw	high (STR_29| (0+32768))
  6482  064B  00F6               	movwf	LCD_Write_String@a+1
  6483  064C  3196  26ED  3182   	fcall	_LCD_Write_String
  6484                           
  6485                           ;main.c: 212: LCD_Write_Char(1);
  6486  064F  3001               	movlw	1
  6487  0650  3197  27A0  3182   	fcall	_LCD_Write_Char
  6488                           
  6489                           ;main.c: 213: LCD_Write_String("Solar");
  6490  0653  3026               	movlw	low (STR_30| (0+32768))
  6491  0654  00F5               	movwf	LCD_Write_String@a
  6492  0655  3090               	movlw	high (STR_30| (0+32768))
  6493  0656  00F6               	movwf	LCD_Write_String@a+1
  6494  0657  3196  26ED  3182   	fcall	_LCD_Write_String
  6495                           
  6496                           ;main.c: 215: { LCD_Set_Cursor(0,1); LCD_Write_String("Out");};
  6497  065A  01F4               	clrf	LCD_Set_Cursor@y
  6498  065B  0AF4               	incf	LCD_Set_Cursor@y,f
  6499  065C  3000               	movlw	0
  6500  065D  3188  20B7  3182   	fcall	_LCD_Set_Cursor
  6501  0660  3031               	movlw	low (STR_31| (0+32768))
  6502  0661  00F5               	movwf	LCD_Write_String@a
  6503  0662  3090               	movlw	high (STR_31| (0+32768))
  6504  0663  00F6               	movwf	LCD_Write_String@a+1
  6505  0664  3196  26ED  3182   	fcall	_LCD_Write_String
  6506                           
  6507                           ;main.c: 216: LCD_Write_Char(1);
  6508  0667  3001               	movlw	1
  6509  0668  3197  27A0  3182   	fcall	_LCD_Write_Char
  6510                           
  6511                           ;main.c: 217: LCD_Write_String("Pool");
  6512  066B  302C               	movlw	low (STR_32| (0+32768))
  6513  066C  00F5               	movwf	LCD_Write_String@a
  6514  066D  3090               	movlw	high (STR_32| (0+32768))
  6515  066E  00F6               	movwf	LCD_Write_String@a+1
  6516  066F  3196  26ED  3182   	fcall	_LCD_Write_String
  6517                           
  6518                           ;main.c: 219: if(C_or_F==0)
  6519  0672  0021               	movlb	1	; select bank1
  6520  0673  0856               	movf	main@C_or_F^(0+128),w
  6521  0674  1D03               	btfss	3,2
  6522  0675  2EC7               	goto	l3109
  6523                           
  6524                           ;main.c: 220: {
  6525                           ;main.c: 221: { LCD_Set_Cursor(9,0); LCD_Write_Int((int)displayTemp,-1, 1, 0);};
  6526  0676  01F4               	clrf	LCD_Set_Cursor@y
  6527  0677  3009               	movlw	9
  6528  0678  3188  20B7  3182   	fcall	_LCD_Set_Cursor
  6529  067B  0021               	movlb	1	; select bank1
  6530  067C  084D               	movf	main@displayTemp^(0+128),w
  6531  067D  00F0               	movwf	___fttol@f1
  6532  067E  084E               	movf	(main@displayTemp+1)^(0+128),w
  6533  067F  00F1               	movwf	___fttol@f1+1
  6534  0680  084F               	movf	(main@displayTemp+2)^(0+128),w
  6535  0681  00F2               	movwf	___fttol@f1+2
  6536  0682  318B  2314  3182   	fcall	___fttol
  6537  0685  0871               	movf	?___fttol+1,w
  6538  0686  0020               	movlb	0	; select bank0
  6539  0687  00A1               	movwf	LCD_Write_Int@value+1
  6540  0688  0870               	movf	?___fttol,w
  6541  0689  00A0               	movwf	LCD_Write_Int@value
  6542  068A  01A2               	clrf	LCD_Write_Int@fieldLength
  6543  068B  03A2               	decf	LCD_Write_Int@fieldLength,f
  6544  068C  01A3               	clrf	LCD_Write_Int@numPlaces
  6545  068D  0AA3               	incf	LCD_Write_Int@numPlaces,f
  6546  068E  01A4               	clrf	LCD_Write_Int@sign
  6547  068F  3180  2007  3182   	fcall	_LCD_Write_Int
  6548                           
  6549                           ;main.c: 222: LCD_Write_Char(0);
  6550  0692  3000               	movlw	0
  6551  0693  3197  27A0  3182   	fcall	_LCD_Write_Char
  6552                           
  6553                           ;main.c: 223: LCD_Write_Char('C');
  6554  0696  3043               	movlw	67
  6555  0697  3197  27A0  3182   	fcall	_LCD_Write_Char
  6556                           
  6557                           ;main.c: 224: LCD_Write_Char(' ');
  6558  069A  3020               	movlw	32
  6559  069B  3197  27A0  3182   	fcall	_LCD_Write_Char
  6560                           
  6561                           ;main.c: 226: { LCD_Set_Cursor(9,1); LCD_Write_Int((int)displayTemp2,-1, 1, 0);};
  6562  069E  01F4               	clrf	LCD_Set_Cursor@y
  6563  069F  0AF4               	incf	LCD_Set_Cursor@y,f
  6564  06A0  3009               	movlw	9
  6565  06A1  3188  20B7  3182   	fcall	_LCD_Set_Cursor
  6566  06A4  0021               	movlb	1	; select bank1
  6567  06A5  0850               	movf	main@displayTemp2^(0+128),w
  6568  06A6  00F0               	movwf	___fttol@f1
  6569  06A7  0851               	movf	(main@displayTemp2+1)^(0+128),w
  6570  06A8  00F1               	movwf	___fttol@f1+1
  6571  06A9  0852               	movf	(main@displayTemp2+2)^(0+128),w
  6572  06AA  00F2               	movwf	___fttol@f1+2
  6573  06AB  318B  2314  3182   	fcall	___fttol
  6574  06AE  0871               	movf	?___fttol+1,w
  6575  06AF  0020               	movlb	0	; select bank0
  6576  06B0  00A1               	movwf	LCD_Write_Int@value+1
  6577  06B1  0870               	movf	?___fttol,w
  6578  06B2  00A0               	movwf	LCD_Write_Int@value
  6579  06B3  01A2               	clrf	LCD_Write_Int@fieldLength
  6580  06B4  03A2               	decf	LCD_Write_Int@fieldLength,f
  6581  06B5  01A3               	clrf	LCD_Write_Int@numPlaces
  6582  06B6  0AA3               	incf	LCD_Write_Int@numPlaces,f
  6583  06B7  01A4               	clrf	LCD_Write_Int@sign
  6584  06B8  3180  2007  3182   	fcall	_LCD_Write_Int
  6585                           
  6586                           ;main.c: 227: LCD_Write_Char(0);
  6587  06BB  3000               	movlw	0
  6588  06BC  3197  27A0  3182   	fcall	_LCD_Write_Char
  6589                           
  6590                           ;main.c: 228: LCD_Write_Char('C');
  6591  06BF  3043               	movlw	67
  6592  06C0  3197  27A0  3182   	fcall	_LCD_Write_Char
  6593                           
  6594                           ;main.c: 229: LCD_Write_Char(' ');
  6595  06C3  3020               	movlw	32
  6596  06C4  3197  27A0  3182   	fcall	_LCD_Write_Char
  6597  06C7                     l3109:	
  6598                           
  6599                           ;main.c: 230: }
  6600                           ;main.c: 232: if(C_or_F==1)
  6601  06C7  0021               	movlb	1	; select bank1
  6602  06C8  0356               	decf	main@C_or_F^(0+128),w
  6603  06C9  1D03               	btfss	3,2
  6604  06CA  2FA0               	goto	l3125
  6605                           
  6606                           ;main.c: 233: {
  6607                           ;main.c: 234: displayTemp = displayTemp*9/5+320;
  6608  06CB  3000               	movlw	0
  6609  06CC  0020               	movlb	0	; select bank0
  6610  06CD  00C0               	movwf	___ftadd@f1
  6611  06CE  30A0               	movlw	160
  6612  06CF  00C1               	movwf	___ftadd@f1+1
  6613  06D0  3043               	movlw	67
  6614  06D1  00C2               	movwf	___ftadd@f1+2
  6615  06D2  3000               	movlw	0
  6616  06D3  00B0               	movwf	___ftdiv@f2
  6617  06D4  30A0               	movlw	160
  6618  06D5  00B1               	movwf	___ftdiv@f2+1
  6619  06D6  3040               	movlw	64
  6620  06D7  00B2               	movwf	___ftdiv@f2+2
  6621  06D8  3000               	movlw	0
  6622  06D9  00A0               	movwf	___ftmul@f1
  6623  06DA  3010               	movlw	16
  6624  06DB  00A1               	movwf	___ftmul@f1+1
  6625  06DC  3041               	movlw	65
  6626  06DD  00A2               	movwf	___ftmul@f1+2
  6627  06DE  0021               	movlb	1	; select bank1
  6628  06DF  084D               	movf	main@displayTemp^(0+128),w
  6629  06E0  0020               	movlb	0	; select bank0
  6630  06E1  00A3               	movwf	___ftmul@f2
  6631  06E2  0021               	movlb	1	; select bank1
  6632  06E3  084E               	movf	(main@displayTemp+1)^(0+128),w
  6633  06E4  0020               	movlb	0	; select bank0
  6634  06E5  00A4               	movwf	___ftmul@f2+1
  6635  06E6  0021               	movlb	1	; select bank1
  6636  06E7  084F               	movf	(main@displayTemp+2)^(0+128),w
  6637  06E8  0020               	movlb	0	; select bank0
  6638  06E9  00A5               	movwf	___ftmul@f2+2
  6639  06EA  318D  2577  3182   	fcall	___ftmul
  6640  06ED  0020               	movlb	0	; select bank0
  6641  06EE  0820               	movf	?___ftmul,w
  6642  06EF  00B3               	movwf	___ftdiv@f1
  6643  06F0  0821               	movf	?___ftmul+1,w
  6644  06F1  00B4               	movwf	___ftdiv@f1+1
  6645  06F2  0822               	movf	?___ftmul+2,w
  6646  06F3  00B5               	movwf	___ftdiv@f1+2
  6647  06F4  318C  2421  3182   	fcall	___ftdiv
  6648  06F7  0020               	movlb	0	; select bank0
  6649  06F8  0830               	movf	?___ftdiv,w
  6650  06F9  00C3               	movwf	___ftadd@f2
  6651  06FA  0831               	movf	?___ftdiv+1,w
  6652  06FB  00C4               	movwf	___ftadd@f2+1
  6653  06FC  0832               	movf	?___ftdiv+2,w
  6654  06FD  00C5               	movwf	___ftadd@f2+2
  6655  06FE  318F  270A  3182   	fcall	___ftadd
  6656  0701  0020               	movlb	0	; select bank0
  6657  0702  0840               	movf	?___ftadd,w
  6658  0703  0021               	movlb	1	; select bank1
  6659  0704  00CD               	movwf	main@displayTemp^(0+128)
  6660  0705  0020               	movlb	0	; select bank0
  6661  0706  0841               	movf	?___ftadd+1,w
  6662  0707  0021               	movlb	1	; select bank1
  6663  0708  00CE               	movwf	(main@displayTemp+1)^(0+128)
  6664  0709  0020               	movlb	0	; select bank0
  6665  070A  0842               	movf	?___ftadd+2,w
  6666  070B  0021               	movlb	1	; select bank1
  6667  070C  00CF               	movwf	(main@displayTemp+2)^(0+128)
  6668                           
  6669                           ;main.c: 235: displayTemp2 = displayTemp2*9/5+320;
  6670  070D  3000               	movlw	0
  6671  070E  0020               	movlb	0	; select bank0
  6672  070F  00C0               	movwf	___ftadd@f1
  6673  0710  30A0               	movlw	160
  6674  0711  00C1               	movwf	___ftadd@f1+1
  6675  0712  3043               	movlw	67
  6676  0713  00C2               	movwf	___ftadd@f1+2
  6677  0714  3000               	movlw	0
  6678  0715  00B0               	movwf	___ftdiv@f2
  6679  0716  30A0               	movlw	160
  6680  0717  00B1               	movwf	___ftdiv@f2+1
  6681  0718  3040               	movlw	64
  6682  0719  00B2               	movwf	___ftdiv@f2+2
  6683  071A  3000               	movlw	0
  6684  071B  00A0               	movwf	___ftmul@f1
  6685  071C  3010               	movlw	16
  6686  071D  00A1               	movwf	___ftmul@f1+1
  6687  071E  3041               	movlw	65
  6688  071F  00A2               	movwf	___ftmul@f1+2
  6689  0720  0021               	movlb	1	; select bank1
  6690  0721  0850               	movf	main@displayTemp2^(0+128),w
  6691  0722  0020               	movlb	0	; select bank0
  6692  0723  00A3               	movwf	___ftmul@f2
  6693  0724  0021               	movlb	1	; select bank1
  6694  0725  0851               	movf	(main@displayTemp2+1)^(0+128),w
  6695  0726  0020               	movlb	0	; select bank0
  6696  0727  00A4               	movwf	___ftmul@f2+1
  6697  0728  0021               	movlb	1	; select bank1
  6698  0729  0852               	movf	(main@displayTemp2+2)^(0+128),w
  6699  072A  0020               	movlb	0	; select bank0
  6700  072B  00A5               	movwf	___ftmul@f2+2
  6701  072C  318D  2577  3182   	fcall	___ftmul
  6702  072F  0020               	movlb	0	; select bank0
  6703  0730  0820               	movf	?___ftmul,w
  6704  0731  00B3               	movwf	___ftdiv@f1
  6705  0732  0821               	movf	?___ftmul+1,w
  6706  0733  00B4               	movwf	___ftdiv@f1+1
  6707  0734  0822               	movf	?___ftmul+2,w
  6708  0735  00B5               	movwf	___ftdiv@f1+2
  6709  0736  318C  2421  3182   	fcall	___ftdiv
  6710  0739  0020               	movlb	0	; select bank0
  6711  073A  0830               	movf	?___ftdiv,w
  6712  073B  00C3               	movwf	___ftadd@f2
  6713  073C  0831               	movf	?___ftdiv+1,w
  6714  073D  00C4               	movwf	___ftadd@f2+1
  6715  073E  0832               	movf	?___ftdiv+2,w
  6716  073F  00C5               	movwf	___ftadd@f2+2
  6717  0740  318F  270A  3182   	fcall	___ftadd
  6718  0743  0020               	movlb	0	; select bank0
  6719  0744  0840               	movf	?___ftadd,w
  6720  0745  0021               	movlb	1	; select bank1
  6721  0746  00D0               	movwf	main@displayTemp2^(0+128)
  6722  0747  0020               	movlb	0	; select bank0
  6723  0748  0841               	movf	?___ftadd+1,w
  6724  0749  0021               	movlb	1	; select bank1
  6725  074A  00D1               	movwf	(main@displayTemp2+1)^(0+128)
  6726  074B  0020               	movlb	0	; select bank0
  6727  074C  0842               	movf	?___ftadd+2,w
  6728  074D  0021               	movlb	1	; select bank1
  6729  074E  00D2               	movwf	(main@displayTemp2+2)^(0+128)
  6730                           
  6731                           ;main.c: 237: { LCD_Set_Cursor(9,0); LCD_Write_Int((int)displayTemp,-1, 1, 0);};
  6732  074F  01F4               	clrf	LCD_Set_Cursor@y
  6733  0750  3009               	movlw	9
  6734  0751  3188  20B7  3182   	fcall	_LCD_Set_Cursor
  6735  0754  0021               	movlb	1	; select bank1
  6736  0755  084D               	movf	main@displayTemp^(0+128),w
  6737  0756  00F0               	movwf	___fttol@f1
  6738  0757  084E               	movf	(main@displayTemp+1)^(0+128),w
  6739  0758  00F1               	movwf	___fttol@f1+1
  6740  0759  084F               	movf	(main@displayTemp+2)^(0+128),w
  6741  075A  00F2               	movwf	___fttol@f1+2
  6742  075B  318B  2314  3182   	fcall	___fttol
  6743  075E  0871               	movf	?___fttol+1,w
  6744  075F  0020               	movlb	0	; select bank0
  6745  0760  00A1               	movwf	LCD_Write_Int@value+1
  6746  0761  0870               	movf	?___fttol,w
  6747  0762  00A0               	movwf	LCD_Write_Int@value
  6748  0763  01A2               	clrf	LCD_Write_Int@fieldLength
  6749  0764  03A2               	decf	LCD_Write_Int@fieldLength,f
  6750  0765  01A3               	clrf	LCD_Write_Int@numPlaces
  6751  0766  0AA3               	incf	LCD_Write_Int@numPlaces,f
  6752  0767  01A4               	clrf	LCD_Write_Int@sign
  6753  0768  3180  2007  3182   	fcall	_LCD_Write_Int
  6754                           
  6755                           ;main.c: 238: LCD_Write_Char(0);
  6756  076B  3000               	movlw	0
  6757  076C  3197  27A0  3182   	fcall	_LCD_Write_Char
  6758                           
  6759                           ;main.c: 239: LCD_Write_Char('F');
  6760  076F  3046               	movlw	70
  6761  0770  3197  27A0  3182   	fcall	_LCD_Write_Char
  6762                           
  6763                           ;main.c: 240: LCD_Write_Char(' ');
  6764  0773  3020               	movlw	32
  6765  0774  3197  27A0  3182   	fcall	_LCD_Write_Char
  6766                           
  6767                           ;main.c: 242: { LCD_Set_Cursor(9,1); LCD_Write_Int((int)displayTemp2,-1, 1, 0);};
  6768  0777  01F4               	clrf	LCD_Set_Cursor@y
  6769  0778  0AF4               	incf	LCD_Set_Cursor@y,f
  6770  0779  3009               	movlw	9
  6771  077A  3188  20B7  3182   	fcall	_LCD_Set_Cursor
  6772  077D  0021               	movlb	1	; select bank1
  6773  077E  0850               	movf	main@displayTemp2^(0+128),w
  6774  077F  00F0               	movwf	___fttol@f1
  6775  0780  0851               	movf	(main@displayTemp2+1)^(0+128),w
  6776  0781  00F1               	movwf	___fttol@f1+1
  6777  0782  0852               	movf	(main@displayTemp2+2)^(0+128),w
  6778  0783  00F2               	movwf	___fttol@f1+2
  6779  0784  318B  2314  3182   	fcall	___fttol
  6780  0787  0871               	movf	?___fttol+1,w
  6781  0788  0020               	movlb	0	; select bank0
  6782  0789  00A1               	movwf	LCD_Write_Int@value+1
  6783  078A  0870               	movf	?___fttol,w
  6784  078B  00A0               	movwf	LCD_Write_Int@value
  6785  078C  01A2               	clrf	LCD_Write_Int@fieldLength
  6786  078D  03A2               	decf	LCD_Write_Int@fieldLength,f
  6787  078E  01A3               	clrf	LCD_Write_Int@numPlaces
  6788  078F  0AA3               	incf	LCD_Write_Int@numPlaces,f
  6789  0790  01A4               	clrf	LCD_Write_Int@sign
  6790  0791  3180  2007  3182   	fcall	_LCD_Write_Int
  6791                           
  6792                           ;main.c: 243: LCD_Write_Char(0);
  6793  0794  3000               	movlw	0
  6794  0795  3197  27A0  3182   	fcall	_LCD_Write_Char
  6795                           
  6796                           ;main.c: 244: LCD_Write_Char('F');
  6797  0798  3046               	movlw	70
  6798  0799  3197  27A0  3182   	fcall	_LCD_Write_Char
  6799                           
  6800                           ;main.c: 245: LCD_Write_Char(' ');
  6801  079C  3020               	movlw	32
  6802  079D  3197  27A0  3182   	fcall	_LCD_Write_Char
  6803  07A0                     l3125:	
  6804                           
  6805                           ;main.c: 246: }
  6806                           ;main.c: 249: if(choice==0)C_or_F=0;
  6807  07A0  0021               	movlb	1	; select bank1
  6808  07A1  0855               	movf	main@choice^(0+128),w
  6809  07A2  1903               	btfsc	3,2
  6810  07A3  01D6               	clrf	main@C_or_F^(0+128)
  6811                           
  6812                           ;main.c: 251: if(choice==1)C_or_F=1;
  6813  07A4  0355               	decf	main@choice^(0+128),w
  6814  07A5  1D03               	btfss	3,2
  6815  07A6  2FA9               	goto	l3133
  6816  07A7  01D6               	clrf	main@C_or_F^(0+128)
  6817  07A8  0AD6               	incf	main@C_or_F^(0+128),f
  6818  07A9                     l3133:	
  6819                           
  6820                           ;main.c: 253: if(choice==2)C_or_F=1-C_or_F;
  6821  07A9  3002               	movlw	2
  6822  07AA  0655               	xorwf	main@choice^(0+128),w
  6823  07AB  1D03               	btfss	3,2
  6824  07AC  2FB5               	goto	l3137
  6825  07AD  0356               	decf	main@C_or_F^(0+128),w
  6826  07AE  3AFF               	xorlw	255
  6827  07AF  3E01               	addlw	1
  6828  07B0  0020               	movlb	0	; select bank0
  6829  07B1  00E9               	movwf	??_main
  6830  07B2  0869               	movf	??_main,w
  6831  07B3  0021               	movlb	1	; select bank1
  6832  07B4  00D6               	movwf	main@C_or_F^(0+128)
  6833  07B5                     l3137:	
  6834                           
  6835                           ;main.c: 269: loop=0;
  6836  07B5  01BD               	clrf	main@loop^(0+128)
  6837  07B6                     l3139:	
  6838                           
  6839                           ;main.c: 270: }
  6840                           ;main.c: 271: loop+=1;
  6841  07B6  3001               	movlw	1
  6842  07B7  0020               	movlb	0	; select bank0
  6843  07B8  00E9               	movwf	??_main
  6844  07B9  0869               	movf	??_main,w
  6845  07BA  0021               	movlb	1	; select bank1
  6846  07BB  07BD               	addwf	main@loop^(0+128),f
  6847  07BC  2C82               	goto	l2947
  6848  07BD                     __end_of_main:	
  6849                           
  6850                           	psect	text1
  6851  0E2B                     __ptext1:	
  6852 ;; *************** function _tempCalc *****************
  6853 ;; Defined at:
  6854 ;;		line 4 in file "tempCalc.c"
  6855 ;; Parameters:    Size  Location     Type
  6856 ;;  analogValue     2   61[BANK0 ] int 
  6857 ;; Auto vars:     Size  Location     Type
  6858 ;;  steinhart       3   70[BANK0 ] float 
  6859 ;;  R               3   64[BANK0 ] float 
  6860 ;; Return value:  Size  Location     Type
  6861 ;;                  3   61[BANK0 ] float 
  6862 ;; Registers used:
  6863 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6864 ;; Tracked objects:
  6865 ;;		On entry : 0/0
  6866 ;;		On exit  : 0/0
  6867 ;;		Unchanged: 0/0
  6868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6869 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6870 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6872 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6873 ;;Total ram usage:       12 bytes
  6874 ;; Hardware stack levels used:    1
  6875 ;; Hardware stack levels required when called:    4
  6876 ;; This function calls:
  6877 ;;		___awtoft
  6878 ;;		___ftadd
  6879 ;;		___ftdiv
  6880 ;;		___ftmul
  6881 ;;		___ftsub
  6882 ;;		_log
  6883 ;; This function is called by:
  6884 ;;		_main
  6885 ;; This function uses a non-reentrant model
  6886 ;;
  6887                           
  6888                           
  6889                           ;psect for function _tempCalc
  6890  0E2B                     _tempCalc:	
  6891                           
  6892                           ;tempCalc.c: 6: float R, steinhart;
  6893                           ;tempCalc.c: 8: R = 10020/(1023/(float)analogValue - 1);
  6894                           
  6895                           ;incstack = 0
  6896                           ; Regs used in _tempCalc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6897  0E2B  3000               	movlw	0
  6898  0E2C  0020               	movlb	0	; select bank0
  6899  0E2D  00C0               	movwf	___ftadd@f1
  6900  0E2E  3080               	movlw	128
  6901  0E2F  00C1               	movwf	___ftadd@f1+1
  6902  0E30  30BF               	movlw	191
  6903  0E31  00C2               	movwf	___ftadd@f1+2
  6904  0E32  085E               	movf	tempCalc@analogValue+1,w
  6905  0E33  00F9               	movwf	___awtoft@c+1
  6906  0E34  085D               	movf	tempCalc@analogValue,w
  6907  0E35  00F8               	movwf	___awtoft@c
  6908  0E36  3197  275A  318E   	fcall	___awtoft
  6909  0E39  0878               	movf	?___awtoft,w
  6910  0E3A  0020               	movlb	0	; select bank0
  6911  0E3B  00B0               	movwf	___ftdiv@f2
  6912  0E3C  0879               	movf	?___awtoft+1,w
  6913  0E3D  00B1               	movwf	___ftdiv@f2+1
  6914  0E3E  087A               	movf	?___awtoft+2,w
  6915  0E3F  00B2               	movwf	___ftdiv@f2+2
  6916  0E40  30C0               	movlw	192
  6917  0E41  00B3               	movwf	___ftdiv@f1
  6918  0E42  307F               	movlw	127
  6919  0E43  00B4               	movwf	___ftdiv@f1+1
  6920  0E44  3044               	movlw	68
  6921  0E45  00B5               	movwf	___ftdiv@f1+2
  6922  0E46  318C  2421  318E   	fcall	___ftdiv
  6923  0E49  0020               	movlb	0	; select bank0
  6924  0E4A  0830               	movf	?___ftdiv,w
  6925  0E4B  00C3               	movwf	___ftadd@f2
  6926  0E4C  0831               	movf	?___ftdiv+1,w
  6927  0E4D  00C4               	movwf	___ftadd@f2+1
  6928  0E4E  0832               	movf	?___ftdiv+2,w
  6929  0E4F  00C5               	movwf	___ftadd@f2+2
  6930  0E50  318F  270A  318E   	fcall	___ftadd
  6931  0E53  0020               	movlb	0	; select bank0
  6932  0E54  0840               	movf	?___ftadd,w
  6933  0E55  00E3               	movwf	_tempCalc$982
  6934  0E56  0841               	movf	?___ftadd+1,w
  6935  0E57  00E4               	movwf	_tempCalc$982+1
  6936  0E58  0842               	movf	?___ftadd+2,w
  6937  0E59  00E5               	movwf	_tempCalc$982+2
  6938                           
  6939                           ;tempCalc.c: 6: float R, steinhart;
  6940                           ;tempCalc.c: 8: R = 10020/(1023/(float)analogValue - 1);
  6941  0E5A  0863               	movf	_tempCalc$982,w
  6942  0E5B  00B0               	movwf	___ftdiv@f2
  6943  0E5C  0864               	movf	_tempCalc$982+1,w
  6944  0E5D  00B1               	movwf	___ftdiv@f2+1
  6945  0E5E  0865               	movf	_tempCalc$982+2,w
  6946  0E5F  00B2               	movwf	___ftdiv@f2+2
  6947  0E60  3090               	movlw	144
  6948  0E61  00B3               	movwf	___ftdiv@f1
  6949  0E62  301C               	movlw	28
  6950  0E63  00B4               	movwf	___ftdiv@f1+1
  6951  0E64  3046               	movlw	70
  6952  0E65  00B5               	movwf	___ftdiv@f1+2
  6953  0E66  318C  2421  318E   	fcall	___ftdiv
  6954  0E69  0020               	movlb	0	; select bank0
  6955  0E6A  0830               	movf	?___ftdiv,w
  6956  0E6B  00E0               	movwf	tempCalc@R
  6957  0E6C  0831               	movf	?___ftdiv+1,w
  6958  0E6D  00E1               	movwf	tempCalc@R+1
  6959  0E6E  0832               	movf	?___ftdiv+2,w
  6960  0E6F  00E2               	movwf	tempCalc@R+2
  6961                           
  6962                           ;tempCalc.c: 10: steinhart = R /10061;
  6963  0E70  3034               	movlw	52
  6964  0E71  00B0               	movwf	___ftdiv@f2
  6965  0E72  301D               	movlw	29
  6966  0E73  00B1               	movwf	___ftdiv@f2+1
  6967  0E74  3046               	movlw	70
  6968  0E75  00B2               	movwf	___ftdiv@f2+2
  6969  0E76  0860               	movf	tempCalc@R,w
  6970  0E77  00B3               	movwf	___ftdiv@f1
  6971  0E78  0861               	movf	tempCalc@R+1,w
  6972  0E79  00B4               	movwf	___ftdiv@f1+1
  6973  0E7A  0862               	movf	tempCalc@R+2,w
  6974  0E7B  00B5               	movwf	___ftdiv@f1+2
  6975  0E7C  318C  2421  318E   	fcall	___ftdiv
  6976  0E7F  0020               	movlb	0	; select bank0
  6977  0E80  0830               	movf	?___ftdiv,w
  6978  0E81  00E6               	movwf	tempCalc@steinhart
  6979  0E82  0831               	movf	?___ftdiv+1,w
  6980  0E83  00E7               	movwf	tempCalc@steinhart+1
  6981  0E84  0832               	movf	?___ftdiv+2,w
  6982  0E85  00E8               	movwf	tempCalc@steinhart+2
  6983                           
  6984                           ;tempCalc.c: 11: steinhart = log(steinhart);
  6985  0E86  0866               	movf	tempCalc@steinhart,w
  6986  0E87  00D7               	movwf	log@x
  6987  0E88  0867               	movf	tempCalc@steinhart+1,w
  6988  0E89  00D8               	movwf	log@x+1
  6989  0E8A  0868               	movf	tempCalc@steinhart+2,w
  6990  0E8B  00D9               	movwf	log@x+2
  6991  0E8C  318C  24CA  318E   	fcall	_log
  6992  0E8F  0020               	movlb	0	; select bank0
  6993  0E90  0857               	movf	?_log,w
  6994  0E91  00E6               	movwf	tempCalc@steinhart
  6995  0E92  0858               	movf	?_log+1,w
  6996  0E93  00E7               	movwf	tempCalc@steinhart+1
  6997  0E94  0859               	movf	?_log+2,w
  6998  0E95  00E8               	movwf	tempCalc@steinhart+2
  6999                           
  7000                           ;tempCalc.c: 12: steinhart /= 3995;
  7001  0E96  30B0               	movlw	176
  7002  0E97  00B0               	movwf	___ftdiv@f2
  7003  0E98  3079               	movlw	121
  7004  0E99  00B1               	movwf	___ftdiv@f2+1
  7005  0E9A  3045               	movlw	69
  7006  0E9B  00B2               	movwf	___ftdiv@f2+2
  7007  0E9C  0866               	movf	tempCalc@steinhart,w
  7008  0E9D  00B3               	movwf	___ftdiv@f1
  7009  0E9E  0867               	movf	tempCalc@steinhart+1,w
  7010  0E9F  00B4               	movwf	___ftdiv@f1+1
  7011  0EA0  0868               	movf	tempCalc@steinhart+2,w
  7012  0EA1  00B5               	movwf	___ftdiv@f1+2
  7013  0EA2  318C  2421  318E   	fcall	___ftdiv
  7014  0EA5  0020               	movlb	0	; select bank0
  7015  0EA6  0830               	movf	?___ftdiv,w
  7016  0EA7  00E6               	movwf	tempCalc@steinhart
  7017  0EA8  0831               	movf	?___ftdiv+1,w
  7018  0EA9  00E7               	movwf	tempCalc@steinhart+1
  7019  0EAA  0832               	movf	?___ftdiv+2,w
  7020  0EAB  00E8               	movwf	tempCalc@steinhart+2
  7021                           
  7022                           ;tempCalc.c: 13: steinhart += 1.0 / (25 + 273.15);
  7023  0EAC  30CF               	movlw	207
  7024  0EAD  00C0               	movwf	___ftadd@f1
  7025  0EAE  305B               	movlw	91
  7026  0EAF  00C1               	movwf	___ftadd@f1+1
  7027  0EB0  303B               	movlw	59
  7028  0EB1  00C2               	movwf	___ftadd@f1+2
  7029  0EB2  0866               	movf	tempCalc@steinhart,w
  7030  0EB3  00C3               	movwf	___ftadd@f2
  7031  0EB4  0867               	movf	tempCalc@steinhart+1,w
  7032  0EB5  00C4               	movwf	___ftadd@f2+1
  7033  0EB6  0868               	movf	tempCalc@steinhart+2,w
  7034  0EB7  00C5               	movwf	___ftadd@f2+2
  7035  0EB8  318F  270A  318E   	fcall	___ftadd
  7036  0EBB  0020               	movlb	0	; select bank0
  7037  0EBC  0840               	movf	?___ftadd,w
  7038  0EBD  00E6               	movwf	tempCalc@steinhart
  7039  0EBE  0841               	movf	?___ftadd+1,w
  7040  0EBF  00E7               	movwf	tempCalc@steinhart+1
  7041  0EC0  0842               	movf	?___ftadd+2,w
  7042  0EC1  00E8               	movwf	tempCalc@steinhart+2
  7043                           
  7044                           ;tempCalc.c: 14: steinhart = 1.0 / steinhart;
  7045  0EC2  0866               	movf	tempCalc@steinhart,w
  7046  0EC3  00B0               	movwf	___ftdiv@f2
  7047  0EC4  0867               	movf	tempCalc@steinhart+1,w
  7048  0EC5  00B1               	movwf	___ftdiv@f2+1
  7049  0EC6  0868               	movf	tempCalc@steinhart+2,w
  7050  0EC7  00B2               	movwf	___ftdiv@f2+2
  7051  0EC8  3000               	movlw	0
  7052  0EC9  00B3               	movwf	___ftdiv@f1
  7053  0ECA  3080               	movlw	128
  7054  0ECB  00B4               	movwf	___ftdiv@f1+1
  7055  0ECC  303F               	movlw	63
  7056  0ECD  00B5               	movwf	___ftdiv@f1+2
  7057  0ECE  318C  2421  318E   	fcall	___ftdiv
  7058  0ED1  0020               	movlb	0	; select bank0
  7059  0ED2  0830               	movf	?___ftdiv,w
  7060  0ED3  00E6               	movwf	tempCalc@steinhart
  7061  0ED4  0831               	movf	?___ftdiv+1,w
  7062  0ED5  00E7               	movwf	tempCalc@steinhart+1
  7063  0ED6  0832               	movf	?___ftdiv+2,w
  7064  0ED7  00E8               	movwf	tempCalc@steinhart+2
  7065                           
  7066                           ;tempCalc.c: 15: steinhart -= 273.15;
  7067  0ED8  3093               	movlw	147
  7068  0ED9  00CD               	movwf	___ftsub@f2
  7069  0EDA  3088               	movlw	136
  7070  0EDB  00CE               	movwf	___ftsub@f2+1
  7071  0EDC  3043               	movlw	67
  7072  0EDD  00CF               	movwf	___ftsub@f2+2
  7073  0EDE  0866               	movf	tempCalc@steinhart,w
  7074  0EDF  00D0               	movwf	___ftsub@f1
  7075  0EE0  0867               	movf	tempCalc@steinhart+1,w
  7076  0EE1  00D1               	movwf	___ftsub@f1+1
  7077  0EE2  0868               	movf	tempCalc@steinhart+2,w
  7078  0EE3  00D2               	movwf	___ftsub@f1+2
  7079  0EE4  3197  273C  318E   	fcall	___ftsub
  7080  0EE7  0020               	movlb	0	; select bank0
  7081  0EE8  084D               	movf	?___ftsub,w
  7082  0EE9  00E6               	movwf	tempCalc@steinhart
  7083  0EEA  084E               	movf	?___ftsub+1,w
  7084  0EEB  00E7               	movwf	tempCalc@steinhart+1
  7085  0EEC  084F               	movf	?___ftsub+2,w
  7086  0EED  00E8               	movwf	tempCalc@steinhart+2
  7087                           
  7088                           ;tempCalc.c: 17: steinhart*=10;
  7089  0EEE  3000               	movlw	0
  7090  0EEF  00A0               	movwf	___ftmul@f1
  7091  0EF0  3020               	movlw	32
  7092  0EF1  00A1               	movwf	___ftmul@f1+1
  7093  0EF2  3041               	movlw	65
  7094  0EF3  00A2               	movwf	___ftmul@f1+2
  7095  0EF4  0866               	movf	tempCalc@steinhart,w
  7096  0EF5  00A3               	movwf	___ftmul@f2
  7097  0EF6  0867               	movf	tempCalc@steinhart+1,w
  7098  0EF7  00A4               	movwf	___ftmul@f2+1
  7099  0EF8  0868               	movf	tempCalc@steinhart+2,w
  7100  0EF9  00A5               	movwf	___ftmul@f2+2
  7101  0EFA  318D  2577         	fcall	___ftmul
  7102  0EFC  0020               	movlb	0	; select bank0
  7103  0EFD  0820               	movf	?___ftmul,w
  7104  0EFE  00E6               	movwf	tempCalc@steinhart
  7105  0EFF  0821               	movf	?___ftmul+1,w
  7106  0F00  00E7               	movwf	tempCalc@steinhart+1
  7107  0F01  0822               	movf	?___ftmul+2,w
  7108  0F02  00E8               	movwf	tempCalc@steinhart+2
  7109                           
  7110                           ;tempCalc.c: 21: return steinhart;
  7111  0F03  0866               	movf	tempCalc@steinhart,w
  7112  0F04  00DD               	movwf	?_tempCalc
  7113  0F05  0867               	movf	tempCalc@steinhart+1,w
  7114  0F06  00DE               	movwf	?_tempCalc+1
  7115  0F07  0868               	movf	tempCalc@steinhart+2,w
  7116  0F08  00DF               	movwf	?_tempCalc+2
  7117  0F09  0008               	return
  7118  0F0A                     __end_of_tempCalc:	
  7119                           
  7120                           	psect	text2
  7121  0CCA                     __ptext2:	
  7122 ;; *************** function _log *****************
  7123 ;; Defined at:
  7124 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\log.c"
  7125 ;; Parameters:    Size  Location     Type
  7126 ;;  x               3   55[BANK0 ] float 
  7127 ;; Auto vars:     Size  Location     Type
  7128 ;;  exponent        2   59[BANK0 ] int 
  7129 ;; Return value:  Size  Location     Type
  7130 ;;                  3   55[BANK0 ] int 
  7131 ;; Registers used:
  7132 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7133 ;; Tracked objects:
  7134 ;;		On entry : 0/0
  7135 ;;		On exit  : 0/0
  7136 ;;		Unchanged: 0/0
  7137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7138 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7139 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7140 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7141 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7142 ;;Total ram usage:        6 bytes
  7143 ;; Hardware stack levels used:    1
  7144 ;; Hardware stack levels required when called:    3
  7145 ;; This function calls:
  7146 ;;		___awtoft
  7147 ;;		___ftadd
  7148 ;;		___ftge
  7149 ;;		___ftmul
  7150 ;;		_eval_poly
  7151 ;;		_frexp
  7152 ;; This function is called by:
  7153 ;;		_tempCalc
  7154 ;; This function uses a non-reentrant model
  7155 ;;
  7156                           
  7157                           
  7158                           ;psect for function _log
  7159  0CCA                     _log:	
  7160                           
  7161                           ;incstack = 0
  7162                           ; Regs used in _log: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7163  0CCA  0020               	movlb	0	; select bank0
  7164  0CCB  0857               	movf	log@x,w
  7165  0CCC  00F0               	movwf	___ftge@ff1
  7166  0CCD  0858               	movf	log@x+1,w
  7167  0CCE  00F1               	movwf	___ftge@ff1+1
  7168  0CCF  0859               	movf	log@x+2,w
  7169  0CD0  00F2               	movwf	___ftge@ff1+2
  7170  0CD1  3000               	movlw	0
  7171  0CD2  00F3               	movwf	___ftge@ff2
  7172  0CD3  3000               	movlw	0
  7173  0CD4  00F4               	movwf	___ftge@ff2+1
  7174  0CD5  3000               	movlw	0
  7175  0CD6  00F5               	movwf	___ftge@ff2+2
  7176  0CD7  3188  2041  318C   	fcall	___ftge
  7177  0CDA  1803               	btfsc	3,0
  7178  0CDB  2CE8               	goto	l2411
  7179  0CDC  3021               	movlw	33
  7180  0CDD  0020               	movlb	0	; select bank0
  7181  0CDE  00EC               	movwf	_errno
  7182  0CDF  3000               	movlw	0
  7183  0CE0  00ED               	movwf	_errno+1
  7184  0CE1  3000               	movlw	0
  7185  0CE2  00D7               	movwf	?_log
  7186  0CE3  3000               	movlw	0
  7187  0CE4  00D8               	movwf	?_log+1
  7188  0CE5  3000               	movlw	0
  7189  0CE6  00D9               	movwf	?_log+2
  7190  0CE7  0008               	return
  7191  0CE8                     l2411:	
  7192  0CE8  0020               	movlb	0	; select bank0
  7193  0CE9  0859               	movf	log@x+2,w
  7194  0CEA  0458               	iorwf	log@x+1,w
  7195  0CEB  0457               	iorwf	log@x,w
  7196  0CEC  1D03               	skipz
  7197  0CED  2CF9               	goto	l2417
  7198  0CEE  3022               	movlw	34
  7199  0CEF  00EC               	movwf	_errno
  7200  0CF0  3000               	movlw	0
  7201  0CF1  00ED               	movwf	_errno+1
  7202  0CF2  3000               	movlw	0
  7203  0CF3  00D7               	movwf	?_log
  7204  0CF4  3000               	movlw	0
  7205  0CF5  00D8               	movwf	?_log+1
  7206  0CF6  3000               	movlw	0
  7207  0CF7  00D9               	movwf	?_log+2
  7208  0CF8  0008               	return
  7209  0CF9                     l2417:	
  7210  0CF9  3000               	movlw	0
  7211  0CFA  00C0               	movwf	___ftadd@f1
  7212  0CFB  3080               	movlw	128
  7213  0CFC  00C1               	movwf	___ftadd@f1+1
  7214  0CFD  30BF               	movlw	191
  7215  0CFE  00C2               	movwf	___ftadd@f1+2
  7216  0CFF  3000               	movlw	0
  7217  0D00  00A0               	movwf	___ftmul@f1
  7218  0D01  3000               	movlw	0
  7219  0D02  00A1               	movwf	___ftmul@f1+1
  7220  0D03  3040               	movlw	64
  7221  0D04  00A2               	movwf	___ftmul@f1+2
  7222  0D05  305B               	movlw	(low (log@exponent| 0))& (0+255)
  7223  0D06  00DA               	movwf	??_log
  7224  0D07  085A               	movf	??_log,w
  7225  0D08  00F3               	movwf	frexp@eptr
  7226  0D09  0857               	movf	log@x,w
  7227  0D0A  00F0               	movwf	frexp@value
  7228  0D0B  0858               	movf	log@x+1,w
  7229  0D0C  00F1               	movwf	frexp@value+1
  7230  0D0D  0859               	movf	log@x+2,w
  7231  0D0E  00F2               	movwf	frexp@value+2
  7232  0D0F  3188  207C  318C   	fcall	_frexp
  7233  0D12  0870               	movf	?_frexp,w
  7234  0D13  0020               	movlb	0	; select bank0
  7235  0D14  00A3               	movwf	___ftmul@f2
  7236  0D15  0871               	movf	?_frexp+1,w
  7237  0D16  00A4               	movwf	___ftmul@f2+1
  7238  0D17  0872               	movf	?_frexp+2,w
  7239  0D18  00A5               	movwf	___ftmul@f2+2
  7240  0D19  318D  2577  318C   	fcall	___ftmul
  7241  0D1C  0020               	movlb	0	; select bank0
  7242  0D1D  0820               	movf	?___ftmul,w
  7243  0D1E  00C3               	movwf	___ftadd@f2
  7244  0D1F  0821               	movf	?___ftmul+1,w
  7245  0D20  00C4               	movwf	___ftadd@f2+1
  7246  0D21  0822               	movf	?___ftmul+2,w
  7247  0D22  00C5               	movwf	___ftadd@f2+2
  7248  0D23  318F  270A  318C   	fcall	___ftadd
  7249  0D26  0020               	movlb	0	; select bank0
  7250  0D27  0840               	movf	?___ftadd,w
  7251  0D28  00D7               	movwf	log@x
  7252  0D29  0841               	movf	?___ftadd+1,w
  7253  0D2A  00D8               	movwf	log@x+1
  7254  0D2B  0842               	movf	?___ftadd+2,w
  7255  0D2C  00D9               	movwf	log@x+2
  7256  0D2D  30FF               	movlw	255
  7257  0D2E  07DB               	addwf	log@exponent,f
  7258  0D2F  30FF               	movlw	255
  7259  0D30  3DDC               	addwfc	log@exponent+1,f
  7260  0D31  0857               	movf	log@x,w
  7261  0D32  00CD               	movwf	eval_poly@x
  7262  0D33  0858               	movf	log@x+1,w
  7263  0D34  00CE               	movwf	eval_poly@x+1
  7264  0D35  0859               	movf	log@x+2,w
  7265  0D36  00CF               	movwf	eval_poly@x+2
  7266  0D37  3000               	movlw	low (log@coeff| (0+32768))
  7267  0D38  00D0               	movwf	eval_poly@d
  7268  0D39  3090               	movlw	high (log@coeff| (0+32768))
  7269  0D3A  00D1               	movwf	eval_poly@d+1
  7270  0D3B  3008               	movlw	8
  7271  0D3C  00D2               	movwf	eval_poly@n
  7272  0D3D  3000               	movlw	0
  7273  0D3E  00D3               	movwf	eval_poly@n+1
  7274  0D3F  3189  21CE  318C   	fcall	_eval_poly
  7275  0D42  0020               	movlb	0	; select bank0
  7276  0D43  084D               	movf	?_eval_poly,w
  7277  0D44  00D7               	movwf	log@x
  7278  0D45  084E               	movf	?_eval_poly+1,w
  7279  0D46  00D8               	movwf	log@x+1
  7280  0D47  084F               	movf	?_eval_poly+2,w
  7281  0D48  00D9               	movwf	log@x+2
  7282  0D49  0857               	movf	log@x,w
  7283  0D4A  00C0               	movwf	___ftadd@f1
  7284  0D4B  0858               	movf	log@x+1,w
  7285  0D4C  00C1               	movwf	___ftadd@f1+1
  7286  0D4D  0859               	movf	log@x+2,w
  7287  0D4E  00C2               	movwf	___ftadd@f1+2
  7288  0D4F  3072               	movlw	114
  7289  0D50  00A0               	movwf	___ftmul@f1
  7290  0D51  3031               	movlw	49
  7291  0D52  00A1               	movwf	___ftmul@f1+1
  7292  0D53  303F               	movlw	63
  7293  0D54  00A2               	movwf	___ftmul@f1+2
  7294  0D55  085C               	movf	log@exponent+1,w
  7295  0D56  00F9               	movwf	___awtoft@c+1
  7296  0D57  085B               	movf	log@exponent,w
  7297  0D58  00F8               	movwf	___awtoft@c
  7298  0D59  3197  275A  318C   	fcall	___awtoft
  7299  0D5C  0878               	movf	?___awtoft,w
  7300  0D5D  0020               	movlb	0	; select bank0
  7301  0D5E  00A3               	movwf	___ftmul@f2
  7302  0D5F  0879               	movf	?___awtoft+1,w
  7303  0D60  00A4               	movwf	___ftmul@f2+1
  7304  0D61  087A               	movf	?___awtoft+2,w
  7305  0D62  00A5               	movwf	___ftmul@f2+2
  7306  0D63  318D  2577  318C   	fcall	___ftmul
  7307  0D66  0020               	movlb	0	; select bank0
  7308  0D67  0820               	movf	?___ftmul,w
  7309  0D68  00C3               	movwf	___ftadd@f2
  7310  0D69  0821               	movf	?___ftmul+1,w
  7311  0D6A  00C4               	movwf	___ftadd@f2+1
  7312  0D6B  0822               	movf	?___ftmul+2,w
  7313  0D6C  00C5               	movwf	___ftadd@f2+2
  7314  0D6D  318F  270A         	fcall	___ftadd
  7315  0D6F  0020               	movlb	0	; select bank0
  7316  0D70  0840               	movf	?___ftadd,w
  7317  0D71  00D7               	movwf	?_log
  7318  0D72  0841               	movf	?___ftadd+1,w
  7319  0D73  00D8               	movwf	?_log+1
  7320  0D74  0842               	movf	?___ftadd+2,w
  7321  0D75  00D9               	movwf	?_log+2
  7322  0D76  0008               	return
  7323  0D77                     __end_of_log:	
  7324                           
  7325                           	psect	text3
  7326  087C                     __ptext3:	
  7327 ;; *************** function _frexp *****************
  7328 ;; Defined at:
  7329 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\frexp.c"
  7330 ;; Parameters:    Size  Location     Type
  7331 ;;  value           3    0[COMMON] int 
  7332 ;;  eptr            1    3[COMMON] PTR int 
  7333 ;;		 -> log@exponent(2), 
  7334 ;; Auto vars:     Size  Location     Type
  7335 ;;		None
  7336 ;; Return value:  Size  Location     Type
  7337 ;;                  3    0[COMMON] PTR int 
  7338 ;; Registers used:
  7339 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7340 ;; Tracked objects:
  7341 ;;		On entry : 0/0
  7342 ;;		On exit  : 0/0
  7343 ;;		Unchanged: 0/0
  7344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7345 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7347 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7348 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7349 ;;Total ram usage:        6 bytes
  7350 ;; Hardware stack levels used:    1
  7351 ;; This function calls:
  7352 ;;		Nothing
  7353 ;; This function is called by:
  7354 ;;		_log
  7355 ;; This function uses a non-reentrant model
  7356 ;;
  7357                           
  7358                           
  7359                           ;psect for function _frexp
  7360  087C                     _frexp:	
  7361                           
  7362                           ;incstack = 0
  7363                           ; Regs used in _frexp: [wreg+fsr1l+fsr1h+status,2+status,0]
  7364  087C  0872               	movf	frexp@value+2,w
  7365  087D  0471               	iorwf	frexp@value+1,w
  7366  087E  0470               	iorwf	frexp@value,w
  7367  087F  1D03               	skipz
  7368  0880  288E               	goto	l2243
  7369  0881  0873               	movf	frexp@eptr,w
  7370  0882  0086               	movwf	6
  7371  0883  0187               	clrf	7
  7372  0884  3000               	movlw	0
  7373  0885  3FC0               	movwi [0]fsr1
  7374  0886  3FC1               	movwi [1]fsr1
  7375  0887  3000               	movlw	0
  7376  0888  00F0               	movwf	?_frexp
  7377  0889  3000               	movlw	0
  7378  088A  00F1               	movwf	?_frexp+1
  7379  088B  3000               	movlw	0
  7380  088C  00F2               	movwf	?_frexp+2
  7381  088D  0008               	return
  7382  088E                     l2243:	
  7383  088E  0872               	movf	frexp@value+2,w
  7384  088F  397F               	andlw	127
  7385  0890  00F4               	movwf	??_frexp
  7386  0891  01F5               	clrf	??_frexp+1
  7387  0892  35F4               	lslf	??_frexp,f
  7388  0893  0DF5               	rlf	??_frexp+1,f
  7389  0894  0873               	movf	frexp@eptr,w
  7390  0895  0086               	movwf	6
  7391  0896  0187               	clrf	7
  7392  0897  0874               	movf	??_frexp,w
  7393  0898  3FC0               	movwi [0]fsr1
  7394  0899  0875               	movf	??_frexp+1,w
  7395  089A  3FC1               	movwi [1]fsr1
  7396  089B  0D71               	rlf	frexp@value+1,w
  7397  089C  0D71               	rlf	frexp@value+1,w
  7398  089D  3901               	andlw	1
  7399  089E  00F4               	movwf	??_frexp
  7400  089F  01F5               	clrf	??_frexp+1
  7401  08A0  0873               	movf	frexp@eptr,w
  7402  08A1  0086               	movwf	6
  7403  08A2  0187               	clrf	7
  7404  08A3  0874               	movf	??_frexp,w
  7405  08A4  0481               	iorwf	1,f
  7406  08A5  3141               	addfsr 1,1
  7407  08A6  0875               	movf	??_frexp+1,w
  7408  08A7  0481               	iorwf	1,f
  7409  08A8  0873               	movf	frexp@eptr,w
  7410  08A9  0086               	movwf	6
  7411  08AA  0187               	clrf	7
  7412  08AB  3082               	movlw	130
  7413  08AC  0781               	addwf	1,f
  7414  08AD  3141               	addfsr 1,1
  7415  08AE  30FF               	movlw	255
  7416  08AF  3D81               	addwfc	1,f
  7417  08B0  317F               	addfsr 1,-1
  7418  08B1  0872               	movf	frexp@value+2,w
  7419  08B2  3980               	andlw	-128
  7420  08B3  383F               	iorlw	63
  7421  08B4  00F2               	movwf	frexp@value+2
  7422  08B5  13F1               	bcf	frexp@value+1,7
  7423  08B6  0008               	return
  7424  08B7                     __end_of_frexp:	
  7425                           
  7426                           	psect	text4
  7427  09CE                     __ptext4:	
  7428 ;; *************** function _eval_poly *****************
  7429 ;; Defined at:
  7430 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\evalpoly.c"
  7431 ;; Parameters:    Size  Location     Type
  7432 ;;  x               3   45[BANK0 ] PTR int 
  7433 ;;  d               2   48[BANK0 ] PTR const 
  7434 ;;		 -> log@coeff(27), 
  7435 ;;  n               2   50[BANK0 ] int 
  7436 ;; Auto vars:     Size  Location     Type
  7437 ;;  res             3   52[BANK0 ] int 
  7438 ;; Return value:  Size  Location     Type
  7439 ;;                  3   45[BANK0 ] int 
  7440 ;; Registers used:
  7441 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7442 ;; Tracked objects:
  7443 ;;		On entry : 0/0
  7444 ;;		On exit  : 0/0
  7445 ;;		Unchanged: 0/0
  7446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7447 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7448 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7450 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7451 ;;Total ram usage:       10 bytes
  7452 ;; Hardware stack levels used:    1
  7453 ;; Hardware stack levels required when called:    2
  7454 ;; This function calls:
  7455 ;;		___ftadd
  7456 ;;		___ftmul
  7457 ;;		___wmul
  7458 ;; This function is called by:
  7459 ;;		_log
  7460 ;; This function uses a non-reentrant model
  7461 ;;
  7462                           
  7463                           
  7464                           ;psect for function _eval_poly
  7465  09CE                     _eval_poly:	
  7466                           
  7467                           ;incstack = 0
  7468                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7469  09CE  0020               	movlb	0	; select bank0
  7470  09CF  0853               	movf	eval_poly@n+1,w
  7471  09D0  00F1               	movwf	___wmul@multiplier+1
  7472  09D1  0852               	movf	eval_poly@n,w
  7473  09D2  00F0               	movwf	___wmul@multiplier
  7474  09D3  3003               	movlw	3
  7475  09D4  00F2               	movwf	___wmul@multiplicand
  7476  09D5  3000               	movlw	0
  7477  09D6  00F3               	movwf	___wmul@multiplicand+1
  7478  09D7  3197  2721  3189   	fcall	___wmul
  7479  09DA  0020               	movlb	0	; select bank0
  7480  09DB  0850               	movf	eval_poly@d,w
  7481  09DC  0770               	addwf	?___wmul,w
  7482  09DD  0084               	movwf	4
  7483  09DE  0851               	movf	eval_poly@d+1,w
  7484  09DF  3D71               	addwfc	?___wmul+1,w
  7485  09E0  0085               	movwf	5
  7486  09E1  3F00               	moviw [0]fsr0
  7487  09E2  00D4               	movwf	eval_poly@res
  7488  09E3  3F01               	moviw [1]fsr0
  7489  09E4  00D5               	movwf	eval_poly@res+1
  7490  09E5  3F02               	moviw [2]fsr0
  7491  09E6                     L1:	
  7492  09E6  00D6               	movwf	eval_poly@res+2
  7493  09E7  0852               	movf	eval_poly@n,w
  7494  09E8  0453               	iorwf	eval_poly@n+1,w
  7495  09E9  1903               	btfsc	3,2
  7496  09EA  2A27               	goto	l2261
  7497  09EB  30FF               	movlw	255
  7498  09EC  07D2               	addwf	eval_poly@n,f
  7499  09ED  30FF               	movlw	255
  7500  09EE  3DD3               	addwfc	eval_poly@n+1,f
  7501  09EF  0853               	movf	eval_poly@n+1,w
  7502  09F0  00F1               	movwf	___wmul@multiplier+1
  7503  09F1  0852               	movf	eval_poly@n,w
  7504  09F2  00F0               	movwf	___wmul@multiplier
  7505  09F3  3003               	movlw	3
  7506  09F4  00F2               	movwf	___wmul@multiplicand
  7507  09F5  3000               	movlw	0
  7508  09F6  00F3               	movwf	___wmul@multiplicand+1
  7509  09F7  3197  2721  3189   	fcall	___wmul
  7510  09FA  0020               	movlb	0	; select bank0
  7511  09FB  0850               	movf	eval_poly@d,w
  7512  09FC  0770               	addwf	?___wmul,w
  7513  09FD  0084               	movwf	4
  7514  09FE  0851               	movf	eval_poly@d+1,w
  7515  09FF  3D71               	addwfc	?___wmul+1,w
  7516  0A00  0085               	movwf	5
  7517  0A01  3F00               	moviw [0]fsr0
  7518  0A02  00C0               	movwf	___ftadd@f1
  7519  0A03  3F01               	moviw [1]fsr0
  7520  0A04  00C1               	movwf	___ftadd@f1+1
  7521  0A05  3F02               	moviw [2]fsr0
  7522  0A06  00C2               	movwf	___ftadd@f1+2
  7523  0A07  0854               	movf	eval_poly@res,w
  7524  0A08  00A0               	movwf	___ftmul@f1
  7525  0A09  0855               	movf	eval_poly@res+1,w
  7526  0A0A  00A1               	movwf	___ftmul@f1+1
  7527  0A0B  0856               	movf	eval_poly@res+2,w
  7528  0A0C  00A2               	movwf	___ftmul@f1+2
  7529  0A0D  084D               	movf	eval_poly@x,w
  7530  0A0E  00A3               	movwf	___ftmul@f2
  7531  0A0F  084E               	movf	eval_poly@x+1,w
  7532  0A10  00A4               	movwf	___ftmul@f2+1
  7533  0A11  084F               	movf	eval_poly@x+2,w
  7534  0A12  00A5               	movwf	___ftmul@f2+2
  7535  0A13  318D  2577  3189   	fcall	___ftmul
  7536  0A16  0020               	movlb	0	; select bank0
  7537  0A17  0820               	movf	?___ftmul,w
  7538  0A18  00C3               	movwf	___ftadd@f2
  7539  0A19  0821               	movf	?___ftmul+1,w
  7540  0A1A  00C4               	movwf	___ftadd@f2+1
  7541  0A1B  0822               	movf	?___ftmul+2,w
  7542  0A1C  00C5               	movwf	___ftadd@f2+2
  7543  0A1D  318F  270A  3189   	fcall	___ftadd
  7544  0A20  0020               	movlb	0	; select bank0
  7545  0A21  0840               	movf	?___ftadd,w
  7546  0A22  00D4               	movwf	eval_poly@res
  7547  0A23  0841               	movf	?___ftadd+1,w
  7548  0A24  00D5               	movwf	eval_poly@res+1
  7549  0A25  0842               	movf	?___ftadd+2,w
  7550  0A26  29E6               	goto	L1
  7551  0A27                     l2261:	
  7552  0A27  0854               	movf	eval_poly@res,w
  7553  0A28  00CD               	movwf	?_eval_poly
  7554  0A29  0855               	movf	eval_poly@res+1,w
  7555  0A2A  00CE               	movwf	?_eval_poly+1
  7556  0A2B  0856               	movf	eval_poly@res+2,w
  7557  0A2C  00CF               	movwf	?_eval_poly+2
  7558  0A2D  0008               	return
  7559  0A2E                     __end_of_eval_poly:	
  7560                           
  7561                           	psect	text5
  7562  0D77                     __ptext5:	
  7563 ;; *************** function ___ftmul *****************
  7564 ;; Defined at:
  7565 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftmul.c"
  7566 ;; Parameters:    Size  Location     Type
  7567 ;;  f1              3    0[BANK0 ] float 
  7568 ;;  f2              3    3[BANK0 ] float 
  7569 ;; Auto vars:     Size  Location     Type
  7570 ;;  f3_as_produc    3   11[BANK0 ] unsigned um
  7571 ;;  sign            1   15[BANK0 ] unsigned char 
  7572 ;;  cntr            1   14[BANK0 ] unsigned char 
  7573 ;;  exp             1   10[BANK0 ] unsigned char 
  7574 ;; Return value:  Size  Location     Type
  7575 ;;                  3    0[BANK0 ] float 
  7576 ;; Registers used:
  7577 ;;		wreg, status,2, status,0, pclath, cstack
  7578 ;; Tracked objects:
  7579 ;;		On entry : 0/0
  7580 ;;		On exit  : 0/0
  7581 ;;		Unchanged: 0/0
  7582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7583 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7584 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7585 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7586 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7587 ;;Total ram usage:       16 bytes
  7588 ;; Hardware stack levels used:    1
  7589 ;; Hardware stack levels required when called:    1
  7590 ;; This function calls:
  7591 ;;		___ftpack
  7592 ;; This function is called by:
  7593 ;;		_tempCalc
  7594 ;;		_main
  7595 ;;		_log
  7596 ;;		_eval_poly
  7597 ;; This function uses a non-reentrant model
  7598 ;;
  7599                           
  7600                           
  7601                           ;psect for function ___ftmul
  7602  0D77                     ___ftmul:	
  7603                           
  7604                           ;incstack = 0
  7605                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  7606  0D77  0020               	movlb	0	; select bank0
  7607  0D78  0820               	movf	___ftmul@f1,w
  7608  0D79  00A6               	movwf	??___ftmul
  7609  0D7A  0821               	movf	___ftmul@f1+1,w
  7610  0D7B  00A7               	movwf	??___ftmul+1
  7611  0D7C  0822               	movf	___ftmul@f1+2,w
  7612  0D7D  00A8               	movwf	??___ftmul+2
  7613  0D7E  1003               	clrc
  7614  0D7F  0D27               	rlf	??___ftmul+1,w
  7615  0D80  0D28               	rlf	??___ftmul+2,w
  7616  0D81  00A9               	movwf	??___ftmul+3
  7617  0D82  0829               	movf	??___ftmul+3,w
  7618  0D83  00AA               	movwf	___ftmul@exp
  7619  0D84  082A               	movf	___ftmul@exp,w
  7620  0D85  1D03               	btfss	3,2
  7621  0D86  2D8E               	goto	l2129
  7622  0D87  3000               	movlw	0
  7623  0D88  00A0               	movwf	?___ftmul
  7624  0D89  3000               	movlw	0
  7625  0D8A  00A1               	movwf	?___ftmul+1
  7626  0D8B  3000               	movlw	0
  7627  0D8C  00A2               	movwf	?___ftmul+2
  7628  0D8D  0008               	return
  7629  0D8E                     l2129:	
  7630  0D8E  0823               	movf	___ftmul@f2,w
  7631  0D8F  00A6               	movwf	??___ftmul
  7632  0D90  0824               	movf	___ftmul@f2+1,w
  7633  0D91  00A7               	movwf	??___ftmul+1
  7634  0D92  0825               	movf	___ftmul@f2+2,w
  7635  0D93  00A8               	movwf	??___ftmul+2
  7636  0D94  1003               	clrc
  7637  0D95  0D27               	rlf	??___ftmul+1,w
  7638  0D96  0D28               	rlf	??___ftmul+2,w
  7639  0D97  00A9               	movwf	??___ftmul+3
  7640  0D98  0829               	movf	??___ftmul+3,w
  7641  0D99  00AF               	movwf	___ftmul@sign
  7642  0D9A  082F               	movf	___ftmul@sign,w
  7643  0D9B  1D03               	btfss	3,2
  7644  0D9C  2DA4               	goto	l2135
  7645  0D9D  3000               	movlw	0
  7646  0D9E  00A0               	movwf	?___ftmul
  7647  0D9F  3000               	movlw	0
  7648  0DA0  00A1               	movwf	?___ftmul+1
  7649  0DA1  3000               	movlw	0
  7650  0DA2  00A2               	movwf	?___ftmul+2
  7651  0DA3  0008               	return
  7652  0DA4                     l2135:	
  7653  0DA4  082F               	movf	___ftmul@sign,w
  7654  0DA5  3E7B               	addlw	123
  7655  0DA6  00A6               	movwf	??___ftmul
  7656  0DA7  0826               	movf	??___ftmul,w
  7657  0DA8  07AA               	addwf	___ftmul@exp,f
  7658  0DA9  0820               	movf	___ftmul@f1,w
  7659  0DAA  00A6               	movwf	??___ftmul
  7660  0DAB  0821               	movf	___ftmul@f1+1,w
  7661  0DAC  00A7               	movwf	??___ftmul+1
  7662  0DAD  0822               	movf	___ftmul@f1+2,w
  7663  0DAE  00A8               	movwf	??___ftmul+2
  7664  0DAF  3010               	movlw	16
  7665  0DB0                     u2205:	
  7666  0DB0  36A8               	lsrf	??___ftmul+2,f
  7667  0DB1  0CA7               	rrf	??___ftmul+1,f
  7668  0DB2  0CA6               	rrf	??___ftmul,f
  7669  0DB3  0B89               	decfsz	9,f
  7670  0DB4  2DB0               	goto	u2205
  7671  0DB5  0826               	movf	??___ftmul,w
  7672  0DB6  00A9               	movwf	??___ftmul+3
  7673  0DB7  0829               	movf	??___ftmul+3,w
  7674  0DB8  00AF               	movwf	___ftmul@sign
  7675  0DB9  0823               	movf	___ftmul@f2,w
  7676  0DBA  00A6               	movwf	??___ftmul
  7677  0DBB  0824               	movf	___ftmul@f2+1,w
  7678  0DBC  00A7               	movwf	??___ftmul+1
  7679  0DBD  0825               	movf	___ftmul@f2+2,w
  7680  0DBE  00A8               	movwf	??___ftmul+2
  7681  0DBF  3010               	movlw	16
  7682  0DC0                     u2215:	
  7683  0DC0  36A8               	lsrf	??___ftmul+2,f
  7684  0DC1  0CA7               	rrf	??___ftmul+1,f
  7685  0DC2  0CA6               	rrf	??___ftmul,f
  7686  0DC3  0B89               	decfsz	9,f
  7687  0DC4  2DC0               	goto	u2215
  7688  0DC5  0826               	movf	??___ftmul,w
  7689  0DC6  00A9               	movwf	??___ftmul+3
  7690  0DC7  0829               	movf	??___ftmul+3,w
  7691  0DC8  06AF               	xorwf	___ftmul@sign,f
  7692  0DC9  3080               	movlw	128
  7693  0DCA  00A6               	movwf	??___ftmul
  7694  0DCB  0826               	movf	??___ftmul,w
  7695  0DCC  05AF               	andwf	___ftmul@sign,f
  7696  0DCD  17A1               	bsf	___ftmul@f1+1,7
  7697  0DCE  17A4               	bsf	___ftmul@f2+1,7
  7698  0DCF  30FF               	movlw	255
  7699  0DD0  05A3               	andwf	___ftmul@f2,f
  7700  0DD1  30FF               	movlw	255
  7701  0DD2  05A4               	andwf	___ftmul@f2+1,f
  7702  0DD3  3000               	movlw	0
  7703  0DD4  05A5               	andwf	___ftmul@f2+2,f
  7704  0DD5  3000               	movlw	0
  7705  0DD6  00AB               	movwf	___ftmul@f3_as_product
  7706  0DD7  3000               	movlw	0
  7707  0DD8  00AC               	movwf	___ftmul@f3_as_product+1
  7708  0DD9  3000               	movlw	0
  7709  0DDA  00AD               	movwf	___ftmul@f3_as_product+2
  7710  0DDB  3007               	movlw	7
  7711  0DDC  00A6               	movwf	??___ftmul
  7712  0DDD  0826               	movf	??___ftmul,w
  7713  0DDE  00AE               	movwf	___ftmul@cntr
  7714  0DDF                     l2147:	
  7715  0DDF  1C20               	btfss	___ftmul@f1,0
  7716  0DE0  2DE7               	goto	l2151
  7717  0DE1  0823               	movf	___ftmul@f2,w
  7718  0DE2  07AB               	addwf	___ftmul@f3_as_product,f
  7719  0DE3  0824               	movf	___ftmul@f2+1,w
  7720  0DE4  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  7721  0DE5  0825               	movf	___ftmul@f2+2,w
  7722  0DE6  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  7723  0DE7                     l2151:	
  7724  0DE7  3001               	movlw	1
  7725  0DE8                     u2235:	
  7726  0DE8  36A2               	lsrf	___ftmul@f1+2,f
  7727  0DE9  0CA1               	rrf	___ftmul@f1+1,f
  7728  0DEA  0CA0               	rrf	___ftmul@f1,f
  7729  0DEB  0B89               	decfsz	9,f
  7730  0DEC  2DE8               	goto	u2235
  7731  0DED  3001               	movlw	1
  7732  0DEE                     u2245:	
  7733  0DEE  35A3               	lslf	___ftmul@f2,f
  7734  0DEF  0DA4               	rlf	___ftmul@f2+1,f
  7735  0DF0  0DA5               	rlf	___ftmul@f2+2,f
  7736  0DF1  0B89               	decfsz	9,f
  7737  0DF2  2DEE               	goto	u2245
  7738  0DF3  3001               	movlw	1
  7739  0DF4  02AE               	subwf	___ftmul@cntr,f
  7740  0DF5  1D03               	btfss	3,2
  7741  0DF6  2DDF               	goto	l2147
  7742  0DF7  3009               	movlw	9
  7743  0DF8  00A6               	movwf	??___ftmul
  7744  0DF9  0826               	movf	??___ftmul,w
  7745  0DFA  00AE               	movwf	___ftmul@cntr
  7746  0DFB                     l2159:	
  7747  0DFB  1C20               	btfss	___ftmul@f1,0
  7748  0DFC  2E03               	goto	l2163
  7749  0DFD  0823               	movf	___ftmul@f2,w
  7750  0DFE  07AB               	addwf	___ftmul@f3_as_product,f
  7751  0DFF  0824               	movf	___ftmul@f2+1,w
  7752  0E00  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  7753  0E01  0825               	movf	___ftmul@f2+2,w
  7754  0E02  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  7755  0E03                     l2163:	
  7756  0E03  3001               	movlw	1
  7757  0E04                     u2275:	
  7758  0E04  36A2               	lsrf	___ftmul@f1+2,f
  7759  0E05  0CA1               	rrf	___ftmul@f1+1,f
  7760  0E06  0CA0               	rrf	___ftmul@f1,f
  7761  0E07  0B89               	decfsz	9,f
  7762  0E08  2E04               	goto	u2275
  7763  0E09  3001               	movlw	1
  7764  0E0A                     u2285:	
  7765  0E0A  36AD               	lsrf	___ftmul@f3_as_product+2,f
  7766  0E0B  0CAC               	rrf	___ftmul@f3_as_product+1,f
  7767  0E0C  0CAB               	rrf	___ftmul@f3_as_product,f
  7768  0E0D  0B89               	decfsz	9,f
  7769  0E0E  2E0A               	goto	u2285
  7770  0E0F  3001               	movlw	1
  7771  0E10  02AE               	subwf	___ftmul@cntr,f
  7772  0E11  1D03               	btfss	3,2
  7773  0E12  2DFB               	goto	l2159
  7774  0E13  082B               	movf	___ftmul@f3_as_product,w
  7775  0E14  00F0               	movwf	___ftpack@arg
  7776  0E15  082C               	movf	___ftmul@f3_as_product+1,w
  7777  0E16  00F1               	movwf	___ftpack@arg+1
  7778  0E17  082D               	movf	___ftmul@f3_as_product+2,w
  7779  0E18  00F2               	movwf	___ftpack@arg+2
  7780  0E19  082A               	movf	___ftmul@exp,w
  7781  0E1A  00A6               	movwf	??___ftmul
  7782  0E1B  0826               	movf	??___ftmul,w
  7783  0E1C  00F3               	movwf	___ftpack@exp
  7784  0E1D  082F               	movf	___ftmul@sign,w
  7785  0E1E  00A7               	movwf	??___ftmul+1
  7786  0E1F  0827               	movf	??___ftmul+1,w
  7787  0E20  00F4               	movwf	___ftpack@sign
  7788  0E21  318A  222E         	fcall	___ftpack
  7789  0E23  0870               	movf	?___ftpack,w
  7790  0E24  0020               	movlb	0	; select bank0
  7791  0E25  00A0               	movwf	?___ftmul
  7792  0E26  0871               	movf	?___ftpack+1,w
  7793  0E27  00A1               	movwf	?___ftmul+1
  7794  0E28  0872               	movf	?___ftpack+2,w
  7795  0E29  00A2               	movwf	?___ftmul+2
  7796  0E2A  0008               	return
  7797  0E2B                     __end_of___ftmul:	
  7798                           
  7799                           	psect	text6
  7800  0841                     __ptext6:	
  7801 ;; *************** function ___ftge *****************
  7802 ;; Defined at:
  7803 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftge.c"
  7804 ;; Parameters:    Size  Location     Type
  7805 ;;  ff1             3    0[COMMON] float 
  7806 ;;  ff2             3    3[COMMON] float 
  7807 ;; Auto vars:     Size  Location     Type
  7808 ;;		None
  7809 ;; Return value:  Size  Location     Type
  7810 ;;		None               void
  7811 ;; Registers used:
  7812 ;;		wreg, status,2, status,0
  7813 ;; Tracked objects:
  7814 ;;		On entry : 0/0
  7815 ;;		On exit  : 0/0
  7816 ;;		Unchanged: 0/0
  7817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7818 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7820 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7821 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7822 ;;Total ram usage:        9 bytes
  7823 ;; Hardware stack levels used:    1
  7824 ;; This function calls:
  7825 ;;		Nothing
  7826 ;; This function is called by:
  7827 ;;		_log
  7828 ;; This function uses a non-reentrant model
  7829 ;;
  7830                           
  7831                           
  7832                           ;psect for function ___ftge
  7833  0841                     ___ftge:	
  7834                           
  7835                           ;incstack = 0
  7836                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  7837  0841  1FF2               	btfss	___ftge@ff1+2,7
  7838  0842  2857               	goto	l2219
  7839  0843  0970               	comf	___ftge@ff1,w
  7840  0844  00F6               	movwf	??___ftge
  7841  0845  0971               	comf	___ftge@ff1+1,w
  7842  0846  00F7               	movwf	??___ftge+1
  7843  0847  0972               	comf	___ftge@ff1+2,w
  7844  0848  00F8               	movwf	??___ftge+2
  7845  0849  0AF6               	incf	??___ftge,f
  7846  084A  1903               	skipnz
  7847  084B  0AF7               	incf	??___ftge+1,f
  7848  084C  1903               	skipnz
  7849  084D  0AF8               	incf	??___ftge+2,f
  7850  084E  3000               	movlw	0
  7851  084F  0776               	addwf	??___ftge,w
  7852  0850  00F0               	movwf	___ftge@ff1
  7853  0851  3000               	movlw	0
  7854  0852  3D77               	addwfc	??___ftge+1,w
  7855  0853  00F1               	movwf	___ftge@ff1+1
  7856  0854  3080               	movlw	128
  7857  0855  3D78               	addwfc	??___ftge+2,w
  7858  0856  00F2               	movwf	___ftge@ff1+2
  7859  0857                     l2219:	
  7860  0857  1FF5               	btfss	___ftge@ff2+2,7
  7861  0858  286D               	goto	l2223
  7862  0859  0973               	comf	___ftge@ff2,w
  7863  085A  00F6               	movwf	??___ftge
  7864  085B  0974               	comf	___ftge@ff2+1,w
  7865  085C  00F7               	movwf	??___ftge+1
  7866  085D  0975               	comf	___ftge@ff2+2,w
  7867  085E  00F8               	movwf	??___ftge+2
  7868  085F  0AF6               	incf	??___ftge,f
  7869  0860  1903               	skipnz
  7870  0861  0AF7               	incf	??___ftge+1,f
  7871  0862  1903               	skipnz
  7872  0863  0AF8               	incf	??___ftge+2,f
  7873  0864  3000               	movlw	0
  7874  0865  0776               	addwf	??___ftge,w
  7875  0866  00F3               	movwf	___ftge@ff2
  7876  0867  3000               	movlw	0
  7877  0868  3D77               	addwfc	??___ftge+1,w
  7878  0869  00F4               	movwf	___ftge@ff2+1
  7879  086A  3080               	movlw	128
  7880  086B  3D78               	addwfc	??___ftge+2,w
  7881  086C  00F5               	movwf	___ftge@ff2+2
  7882  086D                     l2223:	
  7883  086D  3080               	movlw	128
  7884  086E  06F2               	xorwf	___ftge@ff1+2,f
  7885  086F  3080               	movlw	128
  7886  0870  06F5               	xorwf	___ftge@ff2+2,f
  7887  0871  0875               	movf	___ftge@ff2+2,w
  7888  0872  0272               	subwf	___ftge@ff1+2,w
  7889  0873  1D03               	skipz
  7890  0874  0008               	return
  7891  0875  0874               	movf	___ftge@ff2+1,w
  7892  0876  0271               	subwf	___ftge@ff1+1,w
  7893  0877  1D03               	skipz
  7894  0878  0008               	return
  7895  0879  0873               	movf	___ftge@ff2,w
  7896  087A  0270               	subwf	___ftge@ff1,w
  7897  087B  0008               	return
  7898  087C                     __end_of___ftge:	
  7899                           
  7900                           	psect	text7
  7901  175A                     __ptext7:	
  7902 ;; *************** function ___awtoft *****************
  7903 ;; Defined at:
  7904 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awtoft.c"
  7905 ;; Parameters:    Size  Location     Type
  7906 ;;  c               2    8[COMMON] int 
  7907 ;; Auto vars:     Size  Location     Type
  7908 ;;  sign            1   13[COMMON] unsigned char 
  7909 ;; Return value:  Size  Location     Type
  7910 ;;                  3    8[COMMON] float 
  7911 ;; Registers used:
  7912 ;;		wreg, status,2, status,0, pclath, cstack
  7913 ;; Tracked objects:
  7914 ;;		On entry : 0/0
  7915 ;;		On exit  : 0/0
  7916 ;;		Unchanged: 0/0
  7917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7918 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7919 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7920 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7921 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7922 ;;Total ram usage:        6 bytes
  7923 ;; Hardware stack levels used:    1
  7924 ;; Hardware stack levels required when called:    1
  7925 ;; This function calls:
  7926 ;;		___ftpack
  7927 ;; This function is called by:
  7928 ;;		_tempCalc
  7929 ;;		_log
  7930 ;; This function uses a non-reentrant model
  7931 ;;
  7932                           
  7933                           
  7934                           ;psect for function ___awtoft
  7935  175A                     ___awtoft:	
  7936                           
  7937                           ;incstack = 0
  7938                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  7939  175A  01FD               	clrf	___awtoft@sign
  7940  175B  1FF9               	btfss	___awtoft@c+1,7
  7941  175C  2F64               	goto	l2211
  7942  175D  09F8               	comf	___awtoft@c,f
  7943  175E  09F9               	comf	___awtoft@c+1,f
  7944  175F  0AF8               	incf	___awtoft@c,f
  7945  1760  1903               	skipnz
  7946  1761  0AF9               	incf	___awtoft@c+1,f
  7947  1762  01FD               	clrf	___awtoft@sign
  7948  1763  0AFD               	incf	___awtoft@sign,f
  7949  1764                     l2211:	
  7950  1764  0878               	movf	___awtoft@c,w
  7951  1765  00F0               	movwf	___ftpack@arg
  7952  1766  0879               	movf	___awtoft@c+1,w
  7953  1767  00F1               	movwf	___ftpack@arg+1
  7954  1768  01F2               	clrf	___ftpack@arg+2
  7955  1769  308E               	movlw	142
  7956  176A  00FB               	movwf	??___awtoft
  7957  176B  087B               	movf	??___awtoft,w
  7958  176C  00F3               	movwf	___ftpack@exp
  7959  176D  087D               	movf	___awtoft@sign,w
  7960  176E  00FC               	movwf	??___awtoft+1
  7961  176F  087C               	movf	??___awtoft+1,w
  7962  1770  00F4               	movwf	___ftpack@sign
  7963  1771  318A  222E         	fcall	___ftpack
  7964  1773  0870               	movf	?___ftpack,w
  7965  1774  00F8               	movwf	?___awtoft
  7966  1775  0871               	movf	?___ftpack+1,w
  7967  1776  00F9               	movwf	?___awtoft+1
  7968  1777  0872               	movf	?___ftpack+2,w
  7969  1778  00FA               	movwf	?___awtoft+2
  7970  1779  0008               	return
  7971  177A                     __end_of___awtoft:	
  7972                           
  7973                           	psect	text8
  7974  173C                     __ptext8:	
  7975 ;; *************** function ___ftsub *****************
  7976 ;; Defined at:
  7977 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftsub.c"
  7978 ;; Parameters:    Size  Location     Type
  7979 ;;  f2              3   45[BANK0 ] float 
  7980 ;;  f1              3   48[BANK0 ] float 
  7981 ;; Auto vars:     Size  Location     Type
  7982 ;;		None
  7983 ;; Return value:  Size  Location     Type
  7984 ;;                  3   45[BANK0 ] float 
  7985 ;; Registers used:
  7986 ;;		wreg, status,2, status,0, pclath, cstack
  7987 ;; Tracked objects:
  7988 ;;		On entry : 0/0
  7989 ;;		On exit  : 0/0
  7990 ;;		Unchanged: 0/0
  7991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7992 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7995 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7996 ;;Total ram usage:        6 bytes
  7997 ;; Hardware stack levels used:    1
  7998 ;; Hardware stack levels required when called:    2
  7999 ;; This function calls:
  8000 ;;		___ftadd
  8001 ;; This function is called by:
  8002 ;;		_tempCalc
  8003 ;; This function uses a non-reentrant model
  8004 ;;
  8005                           
  8006                           
  8007                           ;psect for function ___ftsub
  8008  173C                     ___ftsub:	
  8009                           
  8010                           ;incstack = 0
  8011                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  8012  173C  0020               	movlb	0	; select bank0
  8013  173D  084F               	movf	___ftsub@f2+2,w
  8014  173E  044E               	iorwf	___ftsub@f2+1,w
  8015  173F  044D               	iorwf	___ftsub@f2,w
  8016  1740  1903               	skipnz
  8017  1741  2F44               	goto	l2595
  8018  1742  3080               	movlw	128
  8019  1743  06CF               	xorwf	___ftsub@f2+2,f
  8020  1744                     l2595:	
  8021  1744  0850               	movf	___ftsub@f1,w
  8022  1745  00C0               	movwf	___ftadd@f1
  8023  1746  0851               	movf	___ftsub@f1+1,w
  8024  1747  00C1               	movwf	___ftadd@f1+1
  8025  1748  0852               	movf	___ftsub@f1+2,w
  8026  1749  00C2               	movwf	___ftadd@f1+2
  8027  174A  084D               	movf	___ftsub@f2,w
  8028  174B  00C3               	movwf	___ftadd@f2
  8029  174C  084E               	movf	___ftsub@f2+1,w
  8030  174D  00C4               	movwf	___ftadd@f2+1
  8031  174E  084F               	movf	___ftsub@f2+2,w
  8032  174F  00C5               	movwf	___ftadd@f2+2
  8033  1750  318F  270A         	fcall	___ftadd
  8034  1752  0020               	movlb	0	; select bank0
  8035  1753  0840               	movf	?___ftadd,w
  8036  1754  00CD               	movwf	?___ftsub
  8037  1755  0841               	movf	?___ftadd+1,w
  8038  1756  00CE               	movwf	?___ftsub+1
  8039  1757  0842               	movf	?___ftadd+2,w
  8040  1758  00CF               	movwf	?___ftsub+2
  8041  1759  0008               	return
  8042  175A                     __end_of___ftsub:	
  8043                           
  8044                           	psect	text9
  8045  0F0A                     __ptext9:	
  8046 ;; *************** function ___ftadd *****************
  8047 ;; Defined at:
  8048 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftadd.c"
  8049 ;; Parameters:    Size  Location     Type
  8050 ;;  f1              3   32[BANK0 ] float 
  8051 ;;  f2              3   35[BANK0 ] float 
  8052 ;; Auto vars:     Size  Location     Type
  8053 ;;  exp1            1   44[BANK0 ] unsigned char 
  8054 ;;  exp2            1   43[BANK0 ] unsigned char 
  8055 ;;  sign            1   42[BANK0 ] unsigned char 
  8056 ;; Return value:  Size  Location     Type
  8057 ;;                  3   32[BANK0 ] float 
  8058 ;; Registers used:
  8059 ;;		wreg, status,2, status,0, pclath, cstack
  8060 ;; Tracked objects:
  8061 ;;		On entry : 0/0
  8062 ;;		On exit  : 0/0
  8063 ;;		Unchanged: 0/0
  8064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8065 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8066 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8067 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8068 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8069 ;;Total ram usage:       13 bytes
  8070 ;; Hardware stack levels used:    1
  8071 ;; Hardware stack levels required when called:    1
  8072 ;; This function calls:
  8073 ;;		___ftpack
  8074 ;; This function is called by:
  8075 ;;		_tempCalc
  8076 ;;		_main
  8077 ;;		___ftsub
  8078 ;;		_log
  8079 ;;		_eval_poly
  8080 ;; This function uses a non-reentrant model
  8081 ;;
  8082                           
  8083                           
  8084                           ;psect for function ___ftadd
  8085  0F0A                     ___ftadd:	
  8086                           
  8087                           ;incstack = 0
  8088                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  8089  0F0A  0020               	movlb	0	; select bank0
  8090  0F0B  0840               	movf	___ftadd@f1,w
  8091  0F0C  00C6               	movwf	??___ftadd
  8092  0F0D  0841               	movf	___ftadd@f1+1,w
  8093  0F0E  00C7               	movwf	??___ftadd+1
  8094  0F0F  0842               	movf	___ftadd@f1+2,w
  8095  0F10  00C8               	movwf	??___ftadd+2
  8096  0F11  1003               	clrc
  8097  0F12  0D47               	rlf	??___ftadd+1,w
  8098  0F13  0D48               	rlf	??___ftadd+2,w
  8099  0F14  00C9               	movwf	??___ftadd+3
  8100  0F15  0849               	movf	??___ftadd+3,w
  8101  0F16  00CC               	movwf	___ftadd@exp1
  8102  0F17  0843               	movf	___ftadd@f2,w
  8103  0F18  00C6               	movwf	??___ftadd
  8104  0F19  0844               	movf	___ftadd@f2+1,w
  8105  0F1A  00C7               	movwf	??___ftadd+1
  8106  0F1B  0845               	movf	___ftadd@f2+2,w
  8107  0F1C  00C8               	movwf	??___ftadd+2
  8108  0F1D  1003               	clrc
  8109  0F1E  0D47               	rlf	??___ftadd+1,w
  8110  0F1F  0D48               	rlf	??___ftadd+2,w
  8111  0F20  00C9               	movwf	??___ftadd+3
  8112  0F21  0849               	movf	??___ftadd+3,w
  8113  0F22  00CB               	movwf	___ftadd@exp2
  8114  0F23  084C               	movf	___ftadd@exp1,w
  8115  0F24  1903               	btfsc	3,2
  8116  0F25  2F32               	goto	l2059
  8117  0F26  084B               	movf	___ftadd@exp2,w
  8118  0F27  024C               	subwf	___ftadd@exp1,w
  8119  0F28  1803               	skipnc
  8120  0F29  2F39               	goto	l2063
  8121  0F2A  034C               	decf	___ftadd@exp1,w
  8122  0F2B  3AFF               	xorlw	255
  8123  0F2C  074B               	addwf	___ftadd@exp2,w
  8124  0F2D  00C6               	movwf	??___ftadd
  8125  0F2E  3019               	movlw	25
  8126  0F2F  0246               	subwf	??___ftadd,w
  8127  0F30  1C03               	skipc
  8128  0F31  2F39               	goto	l2063
  8129  0F32                     l2059:	
  8130  0F32  0843               	movf	___ftadd@f2,w
  8131  0F33  00C0               	movwf	?___ftadd
  8132  0F34  0844               	movf	___ftadd@f2+1,w
  8133  0F35  00C1               	movwf	?___ftadd+1
  8134  0F36  0845               	movf	___ftadd@f2+2,w
  8135  0F37  00C2               	movwf	?___ftadd+2
  8136  0F38  0008               	return
  8137  0F39                     l2063:	
  8138  0F39  084B               	movf	___ftadd@exp2,w
  8139  0F3A  1903               	btfsc	3,2
  8140  0F3B  0008               	return
  8141  0F3C  084C               	movf	___ftadd@exp1,w
  8142  0F3D  024B               	subwf	___ftadd@exp2,w
  8143  0F3E  1803               	skipnc
  8144  0F3F  2F48               	goto	l2069
  8145  0F40  034B               	decf	___ftadd@exp2,w
  8146  0F41  3AFF               	xorlw	255
  8147  0F42  074C               	addwf	___ftadd@exp1,w
  8148  0F43  00C6               	movwf	??___ftadd
  8149  0F44  3019               	movlw	25
  8150  0F45  0246               	subwf	??___ftadd,w
  8151  0F46  1803               	btfsc	3,0
  8152  0F47  0008               	return
  8153  0F48                     l2069:	
  8154  0F48  3006               	movlw	6
  8155  0F49  00C6               	movwf	??___ftadd
  8156  0F4A  0846               	movf	??___ftadd,w
  8157  0F4B  00CA               	movwf	___ftadd@sign
  8158  0F4C  1BC2               	btfsc	___ftadd@f1+2,7
  8159  0F4D  17CA               	bsf	___ftadd@sign,7
  8160  0F4E  1BC5               	btfsc	___ftadd@f2+2,7
  8161  0F4F  174A               	bsf	___ftadd@sign,6
  8162  0F50  17C1               	bsf	___ftadd@f1+1,7
  8163  0F51  30FF               	movlw	255
  8164  0F52  05C0               	andwf	___ftadd@f1,f
  8165  0F53  30FF               	movlw	255
  8166  0F54  05C1               	andwf	___ftadd@f1+1,f
  8167  0F55  3000               	movlw	0
  8168  0F56  05C2               	andwf	___ftadd@f1+2,f
  8169  0F57  17C4               	bsf	___ftadd@f2+1,7
  8170  0F58  30FF               	movlw	255
  8171  0F59  05C3               	andwf	___ftadd@f2,f
  8172  0F5A  30FF               	movlw	255
  8173  0F5B  05C4               	andwf	___ftadd@f2+1,f
  8174  0F5C  3000               	movlw	0
  8175  0F5D  05C5               	andwf	___ftadd@f2+2,f
  8176  0F5E  084B               	movf	___ftadd@exp2,w
  8177  0F5F  024C               	subwf	___ftadd@exp1,w
  8178  0F60  1803               	skipnc
  8179  0F61  2F84               	goto	l2091
  8180  0F62                     l2081:	
  8181  0F62  3001               	movlw	1
  8182  0F63                     u2045:	
  8183  0F63  35C3               	lslf	___ftadd@f2,f
  8184  0F64  0DC4               	rlf	___ftadd@f2+1,f
  8185  0F65  0DC5               	rlf	___ftadd@f2+2,f
  8186  0F66  0B89               	decfsz	9,f
  8187  0F67  2F63               	goto	u2045
  8188  0F68  3001               	movlw	1
  8189  0F69  02CB               	subwf	___ftadd@exp2,f
  8190  0F6A  084B               	movf	___ftadd@exp2,w
  8191  0F6B  064C               	xorwf	___ftadd@exp1,w
  8192  0F6C  1903               	skipnz
  8193  0F6D  2F7F               	goto	l2089
  8194  0F6E  3001               	movlw	1
  8195  0F6F  02CA               	subwf	___ftadd@sign,f
  8196  0F70  084A               	movf	___ftadd@sign,w
  8197  0F71  3907               	andlw	7
  8198  0F72  1903               	btfsc	3,2
  8199  0F73  2F7F               	goto	l2089
  8200  0F74  2F62               	goto	l2081
  8201  0F75                     l2087:	
  8202  0F75  3001               	movlw	1
  8203  0F76                     u2075:	
  8204  0F76  36C2               	lsrf	___ftadd@f1+2,f
  8205  0F77  0CC1               	rrf	___ftadd@f1+1,f
  8206  0F78  0CC0               	rrf	___ftadd@f1,f
  8207  0F79  0B89               	decfsz	9,f
  8208  0F7A  2F76               	goto	u2075
  8209  0F7B  3001               	movlw	1
  8210  0F7C  00C6               	movwf	??___ftadd
  8211  0F7D  0846               	movf	??___ftadd,w
  8212  0F7E  07CC               	addwf	___ftadd@exp1,f
  8213  0F7F                     l2089:	
  8214  0F7F  084C               	movf	___ftadd@exp1,w
  8215  0F80  064B               	xorwf	___ftadd@exp2,w
  8216  0F81  1903               	btfsc	3,2
  8217  0F82  2FA9               	goto	l593
  8218  0F83  2F75               	goto	l2087
  8219  0F84                     l2091:	
  8220  0F84  084C               	movf	___ftadd@exp1,w
  8221  0F85  024B               	subwf	___ftadd@exp2,w
  8222  0F86  1803               	skipnc
  8223  0F87  2FA9               	goto	l593
  8224  0F88                     l2093:	
  8225  0F88  3001               	movlw	1
  8226  0F89                     u2105:	
  8227  0F89  35C0               	lslf	___ftadd@f1,f
  8228  0F8A  0DC1               	rlf	___ftadd@f1+1,f
  8229  0F8B  0DC2               	rlf	___ftadd@f1+2,f
  8230  0F8C  0B89               	decfsz	9,f
  8231  0F8D  2F89               	goto	u2105
  8232  0F8E  3001               	movlw	1
  8233  0F8F  02CC               	subwf	___ftadd@exp1,f
  8234  0F90  084B               	movf	___ftadd@exp2,w
  8235  0F91  064C               	xorwf	___ftadd@exp1,w
  8236  0F92  1903               	skipnz
  8237  0F93  2FA5               	goto	l2101
  8238  0F94  3001               	movlw	1
  8239  0F95  02CA               	subwf	___ftadd@sign,f
  8240  0F96  084A               	movf	___ftadd@sign,w
  8241  0F97  3907               	andlw	7
  8242  0F98  1903               	btfsc	3,2
  8243  0F99  2FA5               	goto	l2101
  8244  0F9A  2F88               	goto	l2093
  8245  0F9B                     l2099:	
  8246  0F9B  3001               	movlw	1
  8247  0F9C                     u2135:	
  8248  0F9C  36C5               	lsrf	___ftadd@f2+2,f
  8249  0F9D  0CC4               	rrf	___ftadd@f2+1,f
  8250  0F9E  0CC3               	rrf	___ftadd@f2,f
  8251  0F9F  0B89               	decfsz	9,f
  8252  0FA0  2F9C               	goto	u2135
  8253  0FA1  3001               	movlw	1
  8254  0FA2  00C6               	movwf	??___ftadd
  8255  0FA3  0846               	movf	??___ftadd,w
  8256  0FA4  07CB               	addwf	___ftadd@exp2,f
  8257  0FA5                     l2101:	
  8258  0FA5  084C               	movf	___ftadd@exp1,w
  8259  0FA6  064B               	xorwf	___ftadd@exp2,w
  8260  0FA7  1D03               	skipz
  8261  0FA8  2F9B               	goto	l2099
  8262  0FA9                     l593:	
  8263  0FA9  1FCA               	btfss	___ftadd@sign,7
  8264  0FAA  2FBB               	goto	l2105
  8265  0FAB  30FF               	movlw	255
  8266  0FAC  06C0               	xorwf	___ftadd@f1,f
  8267  0FAD  30FF               	movlw	255
  8268  0FAE  06C1               	xorwf	___ftadd@f1+1,f
  8269  0FAF  30FF               	movlw	255
  8270  0FB0  06C2               	xorwf	___ftadd@f1+2,f
  8271  0FB1  3001               	movlw	1
  8272  0FB2  07C0               	addwf	___ftadd@f1,f
  8273  0FB3  3000               	movlw	0
  8274  0FB4  1803               	skipnc
  8275  0FB5  3001               	movlw	1
  8276  0FB6  07C1               	addwf	___ftadd@f1+1,f
  8277  0FB7  3000               	movlw	0
  8278  0FB8  1803               	skipnc
  8279  0FB9  3001               	movlw	1
  8280  0FBA  07C2               	addwf	___ftadd@f1+2,f
  8281  0FBB                     l2105:	
  8282  0FBB  1F4A               	btfss	___ftadd@sign,6
  8283  0FBC  2FCD               	goto	l2109
  8284  0FBD  30FF               	movlw	255
  8285  0FBE  06C3               	xorwf	___ftadd@f2,f
  8286  0FBF  30FF               	movlw	255
  8287  0FC0  06C4               	xorwf	___ftadd@f2+1,f
  8288  0FC1  30FF               	movlw	255
  8289  0FC2  06C5               	xorwf	___ftadd@f2+2,f
  8290  0FC3  3001               	movlw	1
  8291  0FC4  07C3               	addwf	___ftadd@f2,f
  8292  0FC5  3000               	movlw	0
  8293  0FC6  1803               	skipnc
  8294  0FC7  3001               	movlw	1
  8295  0FC8  07C4               	addwf	___ftadd@f2+1,f
  8296  0FC9  3000               	movlw	0
  8297  0FCA  1803               	skipnc
  8298  0FCB  3001               	movlw	1
  8299  0FCC  07C5               	addwf	___ftadd@f2+2,f
  8300  0FCD                     l2109:	
  8301  0FCD  01CA               	clrf	___ftadd@sign
  8302  0FCE  0840               	movf	___ftadd@f1,w
  8303  0FCF  07C3               	addwf	___ftadd@f2,f
  8304  0FD0  0841               	movf	___ftadd@f1+1,w
  8305  0FD1  3DC4               	addwfc	___ftadd@f2+1,f
  8306  0FD2  0842               	movf	___ftadd@f1+2,w
  8307  0FD3  3DC5               	addwfc	___ftadd@f2+2,f
  8308  0FD4  1FC5               	btfss	___ftadd@f2+2,7
  8309  0FD5  2FE8               	goto	l2119
  8310  0FD6  30FF               	movlw	255
  8311  0FD7  06C3               	xorwf	___ftadd@f2,f
  8312  0FD8  30FF               	movlw	255
  8313  0FD9  06C4               	xorwf	___ftadd@f2+1,f
  8314  0FDA  30FF               	movlw	255
  8315  0FDB  06C5               	xorwf	___ftadd@f2+2,f
  8316  0FDC  3001               	movlw	1
  8317  0FDD  07C3               	addwf	___ftadd@f2,f
  8318  0FDE  3000               	movlw	0
  8319  0FDF  1803               	skipnc
  8320  0FE0  3001               	movlw	1
  8321  0FE1  07C4               	addwf	___ftadd@f2+1,f
  8322  0FE2  3000               	movlw	0
  8323  0FE3  1803               	skipnc
  8324  0FE4  3001               	movlw	1
  8325  0FE5  07C5               	addwf	___ftadd@f2+2,f
  8326  0FE6  01CA               	clrf	___ftadd@sign
  8327  0FE7  0ACA               	incf	___ftadd@sign,f
  8328  0FE8                     l2119:	
  8329  0FE8  0843               	movf	___ftadd@f2,w
  8330  0FE9  00F0               	movwf	___ftpack@arg
  8331  0FEA  0844               	movf	___ftadd@f2+1,w
  8332  0FEB  00F1               	movwf	___ftpack@arg+1
  8333  0FEC  0845               	movf	___ftadd@f2+2,w
  8334  0FED  00F2               	movwf	___ftpack@arg+2
  8335  0FEE  084C               	movf	___ftadd@exp1,w
  8336  0FEF  00C6               	movwf	??___ftadd
  8337  0FF0  0846               	movf	??___ftadd,w
  8338  0FF1  00F3               	movwf	___ftpack@exp
  8339  0FF2  084A               	movf	___ftadd@sign,w
  8340  0FF3  00C7               	movwf	??___ftadd+1
  8341  0FF4  0847               	movf	??___ftadd+1,w
  8342  0FF5  00F4               	movwf	___ftpack@sign
  8343  0FF6  318A  222E         	fcall	___ftpack
  8344  0FF8  0870               	movf	?___ftpack,w
  8345  0FF9  0020               	movlb	0	; select bank0
  8346  0FFA  00C0               	movwf	?___ftadd
  8347  0FFB  0871               	movf	?___ftpack+1,w
  8348  0FFC  00C1               	movwf	?___ftadd+1
  8349  0FFD  0872               	movf	?___ftpack+2,w
  8350  0FFE  00C2               	movwf	?___ftadd+2
  8351  0FFF  0008               	return
  8352  1000                     __end_of___ftadd:	
  8353                           
  8354                           	psect	text10
  8355  0C21                     __ptext10:	
  8356 ;; *************** function ___ftdiv *****************
  8357 ;; Defined at:
  8358 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftdiv.c"
  8359 ;; Parameters:    Size  Location     Type
  8360 ;;  f2              3   16[BANK0 ] float 
  8361 ;;  f1              3   19[BANK0 ] float 
  8362 ;; Auto vars:     Size  Location     Type
  8363 ;;  f3              3   27[BANK0 ] float 
  8364 ;;  sign            1   31[BANK0 ] unsigned char 
  8365 ;;  exp             1   30[BANK0 ] unsigned char 
  8366 ;;  cntr            1   26[BANK0 ] unsigned char 
  8367 ;; Return value:  Size  Location     Type
  8368 ;;                  3   16[BANK0 ] float 
  8369 ;; Registers used:
  8370 ;;		wreg, status,2, status,0, pclath, cstack
  8371 ;; Tracked objects:
  8372 ;;		On entry : 0/0
  8373 ;;		On exit  : 0/0
  8374 ;;		Unchanged: 0/0
  8375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8376 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8377 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8378 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8379 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8380 ;;Total ram usage:       16 bytes
  8381 ;; Hardware stack levels used:    1
  8382 ;; Hardware stack levels required when called:    1
  8383 ;; This function calls:
  8384 ;;		___ftpack
  8385 ;; This function is called by:
  8386 ;;		_tempCalc
  8387 ;;		_main
  8388 ;; This function uses a non-reentrant model
  8389 ;;
  8390                           
  8391                           
  8392                           ;psect for function ___ftdiv
  8393  0C21                     ___ftdiv:	
  8394                           
  8395                           ;incstack = 0
  8396                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  8397  0C21  0020               	movlb	0	; select bank0
  8398  0C22  0833               	movf	___ftdiv@f1,w
  8399  0C23  00B6               	movwf	??___ftdiv
  8400  0C24  0834               	movf	___ftdiv@f1+1,w
  8401  0C25  00B7               	movwf	??___ftdiv+1
  8402  0C26  0835               	movf	___ftdiv@f1+2,w
  8403  0C27  00B8               	movwf	??___ftdiv+2
  8404  0C28  1003               	clrc
  8405  0C29  0D37               	rlf	??___ftdiv+1,w
  8406  0C2A  0D38               	rlf	??___ftdiv+2,w
  8407  0C2B  00B9               	movwf	??___ftdiv+3
  8408  0C2C  0839               	movf	??___ftdiv+3,w
  8409  0C2D  00BE               	movwf	___ftdiv@exp
  8410  0C2E  083E               	movf	___ftdiv@exp,w
  8411  0C2F  1D03               	btfss	3,2
  8412  0C30  2C38               	goto	l2555
  8413  0C31  3000               	movlw	0
  8414  0C32  00B0               	movwf	?___ftdiv
  8415  0C33  3000               	movlw	0
  8416  0C34  00B1               	movwf	?___ftdiv+1
  8417  0C35  3000               	movlw	0
  8418  0C36  00B2               	movwf	?___ftdiv+2
  8419  0C37  0008               	return
  8420  0C38                     l2555:	
  8421  0C38  0830               	movf	___ftdiv@f2,w
  8422  0C39  00B6               	movwf	??___ftdiv
  8423  0C3A  0831               	movf	___ftdiv@f2+1,w
  8424  0C3B  00B7               	movwf	??___ftdiv+1
  8425  0C3C  0832               	movf	___ftdiv@f2+2,w
  8426  0C3D  00B8               	movwf	??___ftdiv+2
  8427  0C3E  1003               	clrc
  8428  0C3F  0D37               	rlf	??___ftdiv+1,w
  8429  0C40  0D38               	rlf	??___ftdiv+2,w
  8430  0C41  00B9               	movwf	??___ftdiv+3
  8431  0C42  0839               	movf	??___ftdiv+3,w
  8432  0C43  00BF               	movwf	___ftdiv@sign
  8433  0C44  083F               	movf	___ftdiv@sign,w
  8434  0C45  1D03               	btfss	3,2
  8435  0C46  2C4E               	goto	l2561
  8436  0C47  3000               	movlw	0
  8437  0C48  00B0               	movwf	?___ftdiv
  8438  0C49  3000               	movlw	0
  8439  0C4A  00B1               	movwf	?___ftdiv+1
  8440  0C4B  3000               	movlw	0
  8441  0C4C  00B2               	movwf	?___ftdiv+2
  8442  0C4D  0008               	return
  8443  0C4E                     l2561:	
  8444  0C4E  3000               	movlw	0
  8445  0C4F  00BB               	movwf	___ftdiv@f3
  8446  0C50  3000               	movlw	0
  8447  0C51  00BC               	movwf	___ftdiv@f3+1
  8448  0C52  3000               	movlw	0
  8449  0C53  00BD               	movwf	___ftdiv@f3+2
  8450  0C54  3089               	movlw	137
  8451  0C55  073F               	addwf	___ftdiv@sign,w
  8452  0C56  00B6               	movwf	??___ftdiv
  8453  0C57  0836               	movf	??___ftdiv,w
  8454  0C58  02BE               	subwf	___ftdiv@exp,f
  8455  0C59  0833               	movf	___ftdiv@f1,w
  8456  0C5A  00B6               	movwf	??___ftdiv
  8457  0C5B  0834               	movf	___ftdiv@f1+1,w
  8458  0C5C  00B7               	movwf	??___ftdiv+1
  8459  0C5D  0835               	movf	___ftdiv@f1+2,w
  8460  0C5E  00B8               	movwf	??___ftdiv+2
  8461  0C5F  3010               	movlw	16
  8462  0C60                     u2755:	
  8463  0C60  36B8               	lsrf	??___ftdiv+2,f
  8464  0C61  0CB7               	rrf	??___ftdiv+1,f
  8465  0C62  0CB6               	rrf	??___ftdiv,f
  8466  0C63  0B89               	decfsz	9,f
  8467  0C64  2C60               	goto	u2755
  8468  0C65  0836               	movf	??___ftdiv,w
  8469  0C66  00B9               	movwf	??___ftdiv+3
  8470  0C67  0839               	movf	??___ftdiv+3,w
  8471  0C68  00BF               	movwf	___ftdiv@sign
  8472  0C69  0830               	movf	___ftdiv@f2,w
  8473  0C6A  00B6               	movwf	??___ftdiv
  8474  0C6B  0831               	movf	___ftdiv@f2+1,w
  8475  0C6C  00B7               	movwf	??___ftdiv+1
  8476  0C6D  0832               	movf	___ftdiv@f2+2,w
  8477  0C6E  00B8               	movwf	??___ftdiv+2
  8478  0C6F  3010               	movlw	16
  8479  0C70                     u2765:	
  8480  0C70  36B8               	lsrf	??___ftdiv+2,f
  8481  0C71  0CB7               	rrf	??___ftdiv+1,f
  8482  0C72  0CB6               	rrf	??___ftdiv,f
  8483  0C73  0B89               	decfsz	9,f
  8484  0C74  2C70               	goto	u2765
  8485  0C75  0836               	movf	??___ftdiv,w
  8486  0C76  00B9               	movwf	??___ftdiv+3
  8487  0C77  0839               	movf	??___ftdiv+3,w
  8488  0C78  06BF               	xorwf	___ftdiv@sign,f
  8489  0C79  3080               	movlw	128
  8490  0C7A  00B6               	movwf	??___ftdiv
  8491  0C7B  0836               	movf	??___ftdiv,w
  8492  0C7C  05BF               	andwf	___ftdiv@sign,f
  8493  0C7D  17B4               	bsf	___ftdiv@f1+1,7
  8494  0C7E  30FF               	movlw	255
  8495  0C7F  05B3               	andwf	___ftdiv@f1,f
  8496  0C80  30FF               	movlw	255
  8497  0C81  05B4               	andwf	___ftdiv@f1+1,f
  8498  0C82  3000               	movlw	0
  8499  0C83  05B5               	andwf	___ftdiv@f1+2,f
  8500  0C84  17B1               	bsf	___ftdiv@f2+1,7
  8501  0C85  30FF               	movlw	255
  8502  0C86  05B0               	andwf	___ftdiv@f2,f
  8503  0C87  30FF               	movlw	255
  8504  0C88  05B1               	andwf	___ftdiv@f2+1,f
  8505  0C89  3000               	movlw	0
  8506  0C8A  05B2               	andwf	___ftdiv@f2+2,f
  8507  0C8B  3018               	movlw	24
  8508  0C8C  00B6               	movwf	??___ftdiv
  8509  0C8D  0836               	movf	??___ftdiv,w
  8510  0C8E  00BA               	movwf	___ftdiv@cntr
  8511  0C8F                     l2575:	
  8512  0C8F  3001               	movlw	1
  8513  0C90                     u2775:	
  8514  0C90  35BB               	lslf	___ftdiv@f3,f
  8515  0C91  0DBC               	rlf	___ftdiv@f3+1,f
  8516  0C92  0DBD               	rlf	___ftdiv@f3+2,f
  8517  0C93  0B89               	decfsz	9,f
  8518  0C94  2C90               	goto	u2775
  8519  0C95  0832               	movf	___ftdiv@f2+2,w
  8520  0C96  0235               	subwf	___ftdiv@f1+2,w
  8521  0C97  1D03               	skipz
  8522  0C98  2C9F               	goto	u2785
  8523  0C99  0831               	movf	___ftdiv@f2+1,w
  8524  0C9A  0234               	subwf	___ftdiv@f1+1,w
  8525  0C9B  1D03               	skipz
  8526  0C9C  2C9F               	goto	u2785
  8527  0C9D  0830               	movf	___ftdiv@f2,w
  8528  0C9E  0233               	subwf	___ftdiv@f1,w
  8529  0C9F                     u2785:	
  8530  0C9F  1C03               	skipc
  8531  0CA0  2CA8               	goto	l2583
  8532  0CA1  0830               	movf	___ftdiv@f2,w
  8533  0CA2  02B3               	subwf	___ftdiv@f1,f
  8534  0CA3  0831               	movf	___ftdiv@f2+1,w
  8535  0CA4  3BB4               	subwfb	___ftdiv@f1+1,f
  8536  0CA5  0832               	movf	___ftdiv@f2+2,w
  8537  0CA6  3BB5               	subwfb	___ftdiv@f1+2,f
  8538  0CA7  143B               	bsf	___ftdiv@f3,0
  8539  0CA8                     l2583:	
  8540  0CA8  3001               	movlw	1
  8541  0CA9                     u2795:	
  8542  0CA9  35B3               	lslf	___ftdiv@f1,f
  8543  0CAA  0DB4               	rlf	___ftdiv@f1+1,f
  8544  0CAB  0DB5               	rlf	___ftdiv@f1+2,f
  8545  0CAC  0B89               	decfsz	9,f
  8546  0CAD  2CA9               	goto	u2795
  8547  0CAE  3001               	movlw	1
  8548  0CAF  02BA               	subwf	___ftdiv@cntr,f
  8549  0CB0  1D03               	btfss	3,2
  8550  0CB1  2C8F               	goto	l2575
  8551  0CB2  083B               	movf	___ftdiv@f3,w
  8552  0CB3  00F0               	movwf	___ftpack@arg
  8553  0CB4  083C               	movf	___ftdiv@f3+1,w
  8554  0CB5  00F1               	movwf	___ftpack@arg+1
  8555  0CB6  083D               	movf	___ftdiv@f3+2,w
  8556  0CB7  00F2               	movwf	___ftpack@arg+2
  8557  0CB8  083E               	movf	___ftdiv@exp,w
  8558  0CB9  00B6               	movwf	??___ftdiv
  8559  0CBA  0836               	movf	??___ftdiv,w
  8560  0CBB  00F3               	movwf	___ftpack@exp
  8561  0CBC  083F               	movf	___ftdiv@sign,w
  8562  0CBD  00B7               	movwf	??___ftdiv+1
  8563  0CBE  0837               	movf	??___ftdiv+1,w
  8564  0CBF  00F4               	movwf	___ftpack@sign
  8565  0CC0  318A  222E         	fcall	___ftpack
  8566  0CC2  0870               	movf	?___ftpack,w
  8567  0CC3  0020               	movlb	0	; select bank0
  8568  0CC4  00B0               	movwf	?___ftdiv
  8569  0CC5  0871               	movf	?___ftpack+1,w
  8570  0CC6  00B1               	movwf	?___ftdiv+1
  8571  0CC7  0872               	movf	?___ftpack+2,w
  8572  0CC8  00B2               	movwf	?___ftdiv+2
  8573  0CC9  0008               	return
  8574  0CCA                     __end_of___ftdiv:	
  8575                           
  8576                           	psect	text11
  8577  0A2E                     __ptext11:	
  8578 ;; *************** function ___ftpack *****************
  8579 ;; Defined at:
  8580 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\float.c"
  8581 ;; Parameters:    Size  Location     Type
  8582 ;;  arg             3    0[COMMON] unsigned um
  8583 ;;  exp             1    3[COMMON] unsigned char 
  8584 ;;  sign            1    4[COMMON] unsigned char 
  8585 ;; Auto vars:     Size  Location     Type
  8586 ;;		None
  8587 ;; Return value:  Size  Location     Type
  8588 ;;                  3    0[COMMON] float 
  8589 ;; Registers used:
  8590 ;;		wreg, status,2, status,0
  8591 ;; Tracked objects:
  8592 ;;		On entry : 0/0
  8593 ;;		On exit  : 0/0
  8594 ;;		Unchanged: 0/0
  8595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8596 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8598 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8599 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8600 ;;Total ram usage:        8 bytes
  8601 ;; Hardware stack levels used:    1
  8602 ;; This function calls:
  8603 ;;		Nothing
  8604 ;; This function is called by:
  8605 ;;		___awtoft
  8606 ;;		___ftadd
  8607 ;;		___ftdiv
  8608 ;;		___ftmul
  8609 ;; This function uses a non-reentrant model
  8610 ;;
  8611                           
  8612                           
  8613                           ;psect for function ___ftpack
  8614  0A2E                     ___ftpack:	
  8615                           
  8616                           ;incstack = 0
  8617                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  8618  0A2E  0873               	movf	___ftpack@exp,w
  8619  0A2F  1903               	btfsc	3,2
  8620  0A30  2A36               	goto	l1995
  8621  0A31  0872               	movf	___ftpack@arg+2,w
  8622  0A32  0471               	iorwf	___ftpack@arg+1,w
  8623  0A33  0470               	iorwf	___ftpack@arg,w
  8624  0A34  1D03               	skipz
  8625  0A35  2A47               	goto	l2001
  8626  0A36                     l1995:	
  8627  0A36  3000               	movlw	0
  8628  0A37  00F0               	movwf	?___ftpack
  8629  0A38  3000               	movlw	0
  8630  0A39  00F1               	movwf	?___ftpack+1
  8631  0A3A  3000               	movlw	0
  8632  0A3B  00F2               	movwf	?___ftpack+2
  8633  0A3C  0008               	return
  8634  0A3D                     l1999:	
  8635  0A3D  3001               	movlw	1
  8636  0A3E  00F5               	movwf	??___ftpack
  8637  0A3F  0875               	movf	??___ftpack,w
  8638  0A40  07F3               	addwf	___ftpack@exp,f
  8639  0A41  3001               	movlw	1
  8640  0A42                     u1775:	
  8641  0A42  36F2               	lsrf	___ftpack@arg+2,f
  8642  0A43  0CF1               	rrf	___ftpack@arg+1,f
  8643  0A44  0CF0               	rrf	___ftpack@arg,f
  8644  0A45  0B89               	decfsz	9,f
  8645  0A46  2A42               	goto	u1775
  8646  0A47                     l2001:	
  8647  0A47  30FE               	movlw	254
  8648  0A48  0572               	andwf	___ftpack@arg+2,w
  8649  0A49  1903               	btfsc	3,2
  8650  0A4A  2A60               	goto	l562
  8651  0A4B  2A3D               	goto	l1999
  8652  0A4C                     l2003:	
  8653  0A4C  3001               	movlw	1
  8654  0A4D  00F5               	movwf	??___ftpack
  8655  0A4E  0875               	movf	??___ftpack,w
  8656  0A4F  07F3               	addwf	___ftpack@exp,f
  8657  0A50  3001               	movlw	1
  8658  0A51  07F0               	addwf	___ftpack@arg,f
  8659  0A52  3000               	movlw	0
  8660  0A53  1803               	skipnc
  8661  0A54  3001               	movlw	1
  8662  0A55  07F1               	addwf	___ftpack@arg+1,f
  8663  0A56  3000               	movlw	0
  8664  0A57  1803               	skipnc
  8665  0A58  3001               	movlw	1
  8666  0A59  07F2               	addwf	___ftpack@arg+2,f
  8667  0A5A  3001               	movlw	1
  8668  0A5B                     u1795:	
  8669  0A5B  36F2               	lsrf	___ftpack@arg+2,f
  8670  0A5C  0CF1               	rrf	___ftpack@arg+1,f
  8671  0A5D  0CF0               	rrf	___ftpack@arg,f
  8672  0A5E  0B89               	decfsz	9,f
  8673  0A5F  2A5B               	goto	u1795
  8674  0A60                     l562:	
  8675  0A60  30FF               	movlw	255
  8676  0A61  0572               	andwf	___ftpack@arg+2,w
  8677  0A62  1903               	btfsc	3,2
  8678  0A63  2A6D               	goto	l2011
  8679  0A64  2A4C               	goto	l2003
  8680  0A65                     l2009:	
  8681  0A65  3001               	movlw	1
  8682  0A66  02F3               	subwf	___ftpack@exp,f
  8683  0A67  3001               	movlw	1
  8684  0A68                     u1815:	
  8685  0A68  35F0               	lslf	___ftpack@arg,f
  8686  0A69  0DF1               	rlf	___ftpack@arg+1,f
  8687  0A6A  0DF2               	rlf	___ftpack@arg+2,f
  8688  0A6B  0B89               	decfsz	9,f
  8689  0A6C  2A68               	goto	u1815
  8690  0A6D                     l2011:	
  8691  0A6D  1BF1               	btfsc	___ftpack@arg+1,7
  8692  0A6E  2A73               	goto	l569
  8693  0A6F  3002               	movlw	2
  8694  0A70  0273               	subwf	___ftpack@exp,w
  8695  0A71  1803               	skipnc
  8696  0A72  2A65               	goto	l2009
  8697  0A73                     l569:	
  8698  0A73  1873               	btfsc	___ftpack@exp,0
  8699  0A74  2A7B               	goto	l570
  8700  0A75  30FF               	movlw	255
  8701  0A76  05F0               	andwf	___ftpack@arg,f
  8702  0A77  307F               	movlw	127
  8703  0A78  05F1               	andwf	___ftpack@arg+1,f
  8704  0A79  30FF               	movlw	255
  8705  0A7A  05F2               	andwf	___ftpack@arg+2,f
  8706  0A7B                     l570:	
  8707  0A7B  1003               	clrc
  8708  0A7C  0CF3               	rrf	___ftpack@exp,f
  8709  0A7D  0873               	movf	___ftpack@exp,w
  8710  0A7E  00F5               	movwf	??___ftpack
  8711  0A7F  01F6               	clrf	??___ftpack+1
  8712  0A80  01F7               	clrf	??___ftpack+2
  8713  0A81  3010               	movlw	16
  8714  0A82                     u1855:	
  8715  0A82  35F5               	lslf	??___ftpack,f
  8716  0A83  0DF6               	rlf	??___ftpack+1,f
  8717  0A84  0DF7               	rlf	??___ftpack+2,f
  8718  0A85  0B89               	decfsz	9,f
  8719  0A86  2A82               	goto	u1855
  8720  0A87  0875               	movf	??___ftpack,w
  8721  0A88  04F0               	iorwf	___ftpack@arg,f
  8722  0A89  0876               	movf	??___ftpack+1,w
  8723  0A8A  04F1               	iorwf	___ftpack@arg+1,f
  8724  0A8B  0877               	movf	??___ftpack+2,w
  8725  0A8C  04F2               	iorwf	___ftpack@arg+2,f
  8726  0A8D  0874               	movf	___ftpack@sign,w
  8727  0A8E  1903               	btfsc	3,2
  8728  0A8F  0008               	return
  8729  0A90  17F2               	bsf	___ftpack@arg+2,7
  8730  0A91  0008               	return
  8731  0A92                     __end_of___ftpack:	
  8732                           
  8733                           	psect	text12
  8734  00D2                     __ptext12:	
  8735 ;; *************** function _readAnalog *****************
  8736 ;; Defined at:
  8737 ;;		line 88 in file "adcc.c"
  8738 ;; Parameters:    Size  Location     Type
  8739 ;;  channel         2    6[BANK0 ] int 
  8740 ;; Auto vars:     Size  Location     Type
  8741 ;;  value           2   11[COMMON] int 
  8742 ;;  analog_chann    2    9[COMMON] int 
  8743 ;; Return value:  Size  Location     Type
  8744 ;;                  2    6[BANK0 ] int 
  8745 ;; Registers used:
  8746 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8747 ;; Tracked objects:
  8748 ;;		On entry : 0/0
  8749 ;;		On exit  : 0/0
  8750 ;;		Unchanged: 0/0
  8751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8752 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8753 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8754 ;;      Temps:          0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8755 ;;      Totals:         4      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8756 ;;Total ram usage:       22 bytes
  8757 ;; Hardware stack levels used:    1
  8758 ;; Hardware stack levels required when called:    1
  8759 ;; This function calls:
  8760 ;;		_ADCRead
  8761 ;;		___aldiv
  8762 ;;		___wmul
  8763 ;; This function is called by:
  8764 ;;		_main
  8765 ;; This function uses a non-reentrant model
  8766 ;;
  8767                           
  8768                           
  8769                           ;psect for function _readAnalog
  8770  00D2                     _readAnalog:	
  8771                           
  8772                           ;adcc.c: 90: int value;
  8773                           ;adcc.c: 92: int analog_channel = channels[channel];
  8774                           
  8775                           ;incstack = 0
  8776                           ; Regs used in _readAnalog: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8777  00D2  0020               	movlb	0	; select bank0
  8778  00D3  3526               	lslf	readAnalog@channel,w
  8779  00D4  3EDA               	addlw	(low (_channels| 0))& (0+255)
  8780  00D5  0086               	movwf	6
  8781  00D6  0187               	clrf	7
  8782  00D7  3F40               	moviw [0]fsr1
  8783  00D8  00F9               	movwf	readAnalog@analog_channel
  8784  00D9  3F41               	moviw [1]fsr1
  8785  00DA  00FA               	movwf	readAnalog@analog_channel+1
  8786                           
  8787                           ;adcc.c: 94: value = ADCRead(analog_channel);
  8788  00DB  0879               	movf	readAnalog@analog_channel,w
  8789  00DC  3196  268D  3180   	fcall	_ADCRead
  8790  00DF  0871               	movf	?_ADCRead+1,w
  8791  00E0  00FC               	movwf	readAnalog@value+1
  8792  00E1  0870               	movf	?_ADCRead,w
  8793  00E2  00FB               	movwf	readAnalog@value
  8794                           
  8795                           ;adcc.c: 98: totals[channel] = totals[channel] - samples[channel][sampleIndex];
  8796  00E3  0020               	movlb	0	; select bank0
  8797  00E4  0826               	movf	readAnalog@channel,w
  8798  00E5  00A8               	movwf	??_readAnalog
  8799  00E6  3001               	movlw	1
  8800  00E7                     u2825:	
  8801  00E7  35A8               	lslf	??_readAnalog,f
  8802  00E8  3EFF               	addlw	-1
  8803  00E9  1D03               	skipz
  8804  00EA  28E7               	goto	u2825
  8805  00EB  3528               	lslf	??_readAnalog,w
  8806  00EC  3EA0               	addlw	(low (_totals| 0))& (0+255)
  8807  00ED  0086               	movwf	6
  8808  00EE  0187               	clrf	7
  8809  00EF  3F40               	moviw [0]fsr1
  8810  00F0  00A9               	movwf	??_readAnalog+1
  8811  00F1  3F41               	moviw [1]fsr1
  8812  00F2  00AA               	movwf	??_readAnalog+2
  8813  00F3  3F42               	moviw [2]fsr1
  8814  00F4  00AB               	movwf	??_readAnalog+3
  8815  00F5  3F43               	moviw [3]fsr1
  8816  00F6  00AC               	movwf	??_readAnalog+4
  8817  00F7  086F               	movf	_sampleIndex+1,w
  8818  00F8  00AE               	movwf	??_readAnalog+6
  8819  00F9  086E               	movf	_sampleIndex,w
  8820  00FA  00AD               	movwf	??_readAnalog+5
  8821  00FB  35AD               	lslf	??_readAnalog+5,f
  8822  00FC  0DAE               	rlf	??_readAnalog+6,f
  8823  00FD  0827               	movf	readAnalog@channel+1,w
  8824  00FE  00F1               	movwf	___wmul@multiplier+1
  8825  00FF  0826               	movf	readAnalog@channel,w
  8826  0100  00F0               	movwf	___wmul@multiplier
  8827  0101  3028               	movlw	40
  8828  0102  00F2               	movwf	___wmul@multiplicand
  8829  0103  3000               	movlw	0
  8830  0104  00F3               	movwf	___wmul@multiplicand+1
  8831  0105  3197  2721  3180   	fcall	___wmul
  8832  0108  3000               	movlw	0
  8833  0109  0020               	movlb	0	; select bank0
  8834  010A  00AF               	movwf	??_readAnalog+7
  8835  010B  3023               	movlw	35
  8836  010C  00B0               	movwf	??_readAnalog+8
  8837  010D  0870               	movf	?___wmul,w
  8838  010E  072F               	addwf	??_readAnalog+7,w
  8839  010F  00B1               	movwf	??_readAnalog+9
  8840  0110  0871               	movf	?___wmul+1,w
  8841  0111  3D30               	addwfc	??_readAnalog+8,w
  8842  0112  00B2               	movwf	??_readAnalog+10
  8843  0113  0831               	movf	??_readAnalog+9,w
  8844  0114  072D               	addwf	??_readAnalog+5,w
  8845  0115  0084               	movwf	4
  8846  0116  0832               	movf	??_readAnalog+10,w
  8847  0117  3D2E               	addwfc	??_readAnalog+6,w
  8848  0118  0085               	movwf	5
  8849  0119  3F00               	moviw [0]fsr0
  8850  011A  00B3               	movwf	??_readAnalog+11
  8851  011B  3F01               	moviw [1]fsr0
  8852  011C  00B4               	movwf	??_readAnalog+12
  8853  011D  01B5               	clrf	??_readAnalog+13
  8854  011E  01B6               	clrf	??_readAnalog+14
  8855  011F  09B3               	comf	??_readAnalog+11,f
  8856  0120  09B4               	comf	??_readAnalog+12,f
  8857  0121  09B5               	comf	??_readAnalog+13,f
  8858  0122  09B6               	comf	??_readAnalog+14,f
  8859  0123  0AB3               	incf	??_readAnalog+11,f
  8860  0124  1903               	skipnz
  8861  0125  0AB4               	incf	??_readAnalog+12,f
  8862  0126  1903               	skipnz
  8863  0127  0AB5               	incf	??_readAnalog+13,f
  8864  0128  1903               	skipnz
  8865  0129  0AB6               	incf	??_readAnalog+14,f
  8866  012A  0833               	movf	??_readAnalog+11,w
  8867  012B  07A9               	addwf	??_readAnalog+1,f
  8868  012C  0834               	movf	??_readAnalog+12,w
  8869  012D  3DAA               	addwfc	??_readAnalog+2,f
  8870  012E  0835               	movf	??_readAnalog+13,w
  8871  012F  3DAB               	addwfc	??_readAnalog+3,f
  8872  0130  0836               	movf	??_readAnalog+14,w
  8873  0131  3DAC               	addwfc	??_readAnalog+4,f
  8874  0132  0826               	movf	readAnalog@channel,w
  8875  0133  00B7               	movwf	??_readAnalog+15
  8876  0134  3001               	movlw	1
  8877  0135                     u2835:	
  8878  0135  35B7               	lslf	??_readAnalog+15,f
  8879  0136  3EFF               	addlw	-1
  8880  0137  1D03               	skipz
  8881  0138  2935               	goto	u2835
  8882  0139  3537               	lslf	??_readAnalog+15,w
  8883  013A  3EA0               	addlw	(low (_totals| 0))& (0+255)
  8884  013B  0086               	movwf	6
  8885  013C  0187               	clrf	7
  8886  013D  0829               	movf	??_readAnalog+1,w
  8887  013E  3FC0               	movwi [0]fsr1
  8888  013F  082A               	movf	??_readAnalog+2,w
  8889  0140  3FC1               	movwi [1]fsr1
  8890  0141  082B               	movf	??_readAnalog+3,w
  8891  0142  3FC2               	movwi [2]fsr1
  8892  0143  082C               	movf	??_readAnalog+4,w
  8893  0144  3FC3               	movwi [3]fsr1
  8894                           
  8895                           ;adcc.c: 100: samples[channel][sampleIndex] = value;
  8896  0145  086F               	movf	_sampleIndex+1,w
  8897  0146  00A9               	movwf	??_readAnalog+1
  8898  0147  086E               	movf	_sampleIndex,w
  8899  0148  00A8               	movwf	??_readAnalog
  8900  0149  35A8               	lslf	??_readAnalog,f
  8901  014A  0DA9               	rlf	??_readAnalog+1,f
  8902  014B  0827               	movf	readAnalog@channel+1,w
  8903  014C  00F1               	movwf	___wmul@multiplier+1
  8904  014D  0826               	movf	readAnalog@channel,w
  8905  014E  00F0               	movwf	___wmul@multiplier
  8906  014F  3028               	movlw	40
  8907  0150  00F2               	movwf	___wmul@multiplicand
  8908  0151  3000               	movlw	0
  8909  0152  00F3               	movwf	___wmul@multiplicand+1
  8910  0153  3197  2721  3180   	fcall	___wmul
  8911  0156  3000               	movlw	0
  8912  0157  0020               	movlb	0	; select bank0
  8913  0158  00AA               	movwf	??_readAnalog+2
  8914  0159  3023               	movlw	35
  8915  015A  00AB               	movwf	??_readAnalog+3
  8916  015B  0870               	movf	?___wmul,w
  8917  015C  072A               	addwf	??_readAnalog+2,w
  8918  015D  00AC               	movwf	??_readAnalog+4
  8919  015E  0871               	movf	?___wmul+1,w
  8920  015F  3D2B               	addwfc	??_readAnalog+3,w
  8921  0160  00AD               	movwf	??_readAnalog+5
  8922  0161  0828               	movf	??_readAnalog,w
  8923  0162  072C               	addwf	??_readAnalog+4,w
  8924  0163  0086               	movwf	6
  8925  0164  0829               	movf	??_readAnalog+1,w
  8926  0165  3D2D               	addwfc	??_readAnalog+5,w
  8927  0166  0087               	movwf	7
  8928  0167  087B               	movf	readAnalog@value,w
  8929  0168  3FC0               	movwi [0]fsr1
  8930  0169  087C               	movf	readAnalog@value+1,w
  8931  016A  3FC1               	movwi [1]fsr1
  8932                           
  8933                           ;adcc.c: 102: totals[channel] = totals[channel] + samples[channel][sampleIndex];
  8934  016B  0826               	movf	readAnalog@channel,w
  8935  016C  00A8               	movwf	??_readAnalog
  8936  016D  3001               	movlw	1
  8937  016E                     u2845:	
  8938  016E  35A8               	lslf	??_readAnalog,f
  8939  016F  3EFF               	addlw	-1
  8940  0170  1D03               	skipz
  8941  0171  296E               	goto	u2845
  8942  0172  3528               	lslf	??_readAnalog,w
  8943  0173  3EA0               	addlw	(low (_totals| 0))& (0+255)
  8944  0174  0086               	movwf	6
  8945  0175  0187               	clrf	7
  8946  0176  3F40               	moviw [0]fsr1
  8947  0177  00A9               	movwf	??_readAnalog+1
  8948  0178  3F41               	moviw [1]fsr1
  8949  0179  00AA               	movwf	??_readAnalog+2
  8950  017A  3F42               	moviw [2]fsr1
  8951  017B  00AB               	movwf	??_readAnalog+3
  8952  017C  3F43               	moviw [3]fsr1
  8953  017D  00AC               	movwf	??_readAnalog+4
  8954  017E  086F               	movf	_sampleIndex+1,w
  8955  017F  00AE               	movwf	??_readAnalog+6
  8956  0180  086E               	movf	_sampleIndex,w
  8957  0181  00AD               	movwf	??_readAnalog+5
  8958  0182  35AD               	lslf	??_readAnalog+5,f
  8959  0183  0DAE               	rlf	??_readAnalog+6,f
  8960  0184  0827               	movf	readAnalog@channel+1,w
  8961  0185  00F1               	movwf	___wmul@multiplier+1
  8962  0186  0826               	movf	readAnalog@channel,w
  8963  0187  00F0               	movwf	___wmul@multiplier
  8964  0188  3028               	movlw	40
  8965  0189  00F2               	movwf	___wmul@multiplicand
  8966  018A  3000               	movlw	0
  8967  018B  00F3               	movwf	___wmul@multiplicand+1
  8968  018C  3197  2721  3180   	fcall	___wmul
  8969  018F  3000               	movlw	0
  8970  0190  0020               	movlb	0	; select bank0
  8971  0191  00AF               	movwf	??_readAnalog+7
  8972  0192  3023               	movlw	35
  8973  0193  00B0               	movwf	??_readAnalog+8
  8974  0194  0870               	movf	?___wmul,w
  8975  0195  072F               	addwf	??_readAnalog+7,w
  8976  0196  00B1               	movwf	??_readAnalog+9
  8977  0197  0871               	movf	?___wmul+1,w
  8978  0198  3D30               	addwfc	??_readAnalog+8,w
  8979  0199  00B2               	movwf	??_readAnalog+10
  8980  019A  0831               	movf	??_readAnalog+9,w
  8981  019B  072D               	addwf	??_readAnalog+5,w
  8982  019C  0084               	movwf	4
  8983  019D  0832               	movf	??_readAnalog+10,w
  8984  019E  3D2E               	addwfc	??_readAnalog+6,w
  8985  019F  0085               	movwf	5
  8986  01A0  3F00               	moviw [0]fsr0
  8987  01A1  00B3               	movwf	??_readAnalog+11
  8988  01A2  3F01               	moviw [1]fsr0
  8989  01A3  00B4               	movwf	??_readAnalog+12
  8990  01A4  01B5               	clrf	??_readAnalog+13
  8991  01A5  01B6               	clrf	??_readAnalog+14
  8992  01A6  0833               	movf	??_readAnalog+11,w
  8993  01A7  07A9               	addwf	??_readAnalog+1,f
  8994  01A8  0834               	movf	??_readAnalog+12,w
  8995  01A9  3DAA               	addwfc	??_readAnalog+2,f
  8996  01AA  0835               	movf	??_readAnalog+13,w
  8997  01AB  3DAB               	addwfc	??_readAnalog+3,f
  8998  01AC  0836               	movf	??_readAnalog+14,w
  8999  01AD  3DAC               	addwfc	??_readAnalog+4,f
  9000  01AE  0826               	movf	readAnalog@channel,w
  9001  01AF  00B7               	movwf	??_readAnalog+15
  9002  01B0  3001               	movlw	1
  9003  01B1                     u2855:	
  9004  01B1  35B7               	lslf	??_readAnalog+15,f
  9005  01B2  3EFF               	addlw	-1
  9006  01B3  1D03               	skipz
  9007  01B4  29B1               	goto	u2855
  9008  01B5  3537               	lslf	??_readAnalog+15,w
  9009  01B6  3EA0               	addlw	(low (_totals| 0))& (0+255)
  9010  01B7  0086               	movwf	6
  9011  01B8  0187               	clrf	7
  9012  01B9  0829               	movf	??_readAnalog+1,w
  9013  01BA  3FC0               	movwi [0]fsr1
  9014  01BB  082A               	movf	??_readAnalog+2,w
  9015  01BC  3FC1               	movwi [1]fsr1
  9016  01BD  082B               	movf	??_readAnalog+3,w
  9017  01BE  3FC2               	movwi [2]fsr1
  9018  01BF  082C               	movf	??_readAnalog+4,w
  9019  01C0  3FC3               	movwi [3]fsr1
  9020                           
  9021                           ;adcc.c: 104: if(channel>4)
  9022  01C1  0827               	movf	readAnalog@channel+1,w
  9023  01C2  3A80               	xorlw	128
  9024  01C3  00A8               	movwf	??_readAnalog
  9025  01C4  3080               	movlw	128
  9026  01C5  0228               	subwf	??_readAnalog,w
  9027  01C6  1D03               	skipz
  9028  01C7  29CA               	goto	u2865
  9029  01C8  3005               	movlw	5
  9030  01C9  0226               	subwf	readAnalog@channel,w
  9031  01CA                     u2865:	
  9032  01CA  1C03               	skipc
  9033  01CB  29DA               	goto	l2613
  9034                           
  9035                           ;adcc.c: 105: {
  9036                           ;adcc.c: 106: sampleIndex += 1;
  9037  01CC  3001               	movlw	1
  9038  01CD  0020               	movlb	0	; select bank0
  9039  01CE  07EE               	addwf	_sampleIndex,f
  9040  01CF  3000               	movlw	0
  9041  01D0  3DEF               	addwfc	_sampleIndex+1,f
  9042                           
  9043                           ;adcc.c: 108: if(sampleIndex >= 20)
  9044  01D1  3000               	movlw	0
  9045  01D2  026F               	subwf	_sampleIndex+1,w
  9046  01D3  3014               	movlw	20
  9047  01D4  1903               	skipnz
  9048  01D5  026E               	subwf	_sampleIndex,w
  9049  01D6  1C03               	skipc
  9050  01D7  29DA               	goto	l2613
  9051                           
  9052                           ;adcc.c: 109: {
  9053                           ;adcc.c: 110: sampleIndex = 0;
  9054  01D8  01EE               	clrf	_sampleIndex
  9055  01D9  01EF               	clrf	_sampleIndex+1
  9056  01DA                     l2613:	
  9057                           
  9058                           ;adcc.c: 111: }
  9059                           ;adcc.c: 112: }
  9060                           ;adcc.c: 114: value = totals[channel] / 20;
  9061  01DA  3000               	movlw	0
  9062  01DB  00F3               	movwf	___aldiv@divisor+3
  9063  01DC  3000               	movlw	0
  9064  01DD  00F2               	movwf	___aldiv@divisor+2
  9065  01DE  3000               	movlw	0
  9066  01DF  00F1               	movwf	___aldiv@divisor+1
  9067  01E0  3014               	movlw	20
  9068  01E1  00F0               	movwf	___aldiv@divisor
  9069  01E2  0020               	movlb	0	; select bank0
  9070  01E3  0826               	movf	readAnalog@channel,w
  9071  01E4  00A8               	movwf	??_readAnalog
  9072  01E5  3001               	movlw	1
  9073  01E6                     u2885:	
  9074  01E6  35A8               	lslf	??_readAnalog,f
  9075  01E7  3EFF               	addlw	-1
  9076  01E8  1D03               	skipz
  9077  01E9  29E6               	goto	u2885
  9078  01EA  3528               	lslf	??_readAnalog,w
  9079  01EB  3EA0               	addlw	(low (_totals| 0))& (0+255)
  9080  01EC  0086               	movwf	6
  9081  01ED  0187               	clrf	7
  9082  01EE  3F40               	moviw [0]fsr1
  9083  01EF  00F4               	movwf	___aldiv@dividend
  9084  01F0  3F41               	moviw [1]fsr1
  9085  01F1  00F5               	movwf	___aldiv@dividend+1
  9086  01F2  3F42               	moviw [2]fsr1
  9087  01F3  00F6               	movwf	___aldiv@dividend+2
  9088  01F4  3F43               	moviw [3]fsr1
  9089  01F5  00F7               	movwf	___aldiv@dividend+3
  9090  01F6  318A  2292         	fcall	___aldiv
  9091  01F8  0871               	movf	?___aldiv+1,w
  9092  01F9  00FC               	movwf	readAnalog@value+1
  9093  01FA  0870               	movf	?___aldiv,w
  9094  01FB  00FB               	movwf	readAnalog@value
  9095                           
  9096                           ;adcc.c: 116: return value;
  9097  01FC  087C               	movf	readAnalog@value+1,w
  9098  01FD  0020               	movlb	0	; select bank0
  9099  01FE  00A7               	movwf	?_readAnalog+1
  9100  01FF  087B               	movf	readAnalog@value,w
  9101  0200  00A6               	movwf	?_readAnalog
  9102  0201  0008               	return
  9103  0202                     __end_of_readAnalog:	
  9104                           
  9105                           	psect	text13
  9106  1721                     __ptext13:	
  9107 ;; *************** function ___wmul *****************
  9108 ;; Defined at:
  9109 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
  9110 ;; Parameters:    Size  Location     Type
  9111 ;;  multiplier      2    0[COMMON] unsigned int 
  9112 ;;  multiplicand    2    2[COMMON] unsigned int 
  9113 ;; Auto vars:     Size  Location     Type
  9114 ;;  product         2    4[COMMON] unsigned int 
  9115 ;; Return value:  Size  Location     Type
  9116 ;;                  2    0[COMMON] unsigned int 
  9117 ;; Registers used:
  9118 ;;		wreg, status,2, status,0
  9119 ;; Tracked objects:
  9120 ;;		On entry : 0/0
  9121 ;;		On exit  : 0/0
  9122 ;;		Unchanged: 0/0
  9123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9124 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9125 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9127 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9128 ;;Total ram usage:        6 bytes
  9129 ;; Hardware stack levels used:    1
  9130 ;; This function calls:
  9131 ;;		Nothing
  9132 ;; This function is called by:
  9133 ;;		_readAnalog
  9134 ;;		_eval_poly
  9135 ;; This function uses a non-reentrant model
  9136 ;;
  9137                           
  9138                           
  9139                           ;psect for function ___wmul
  9140  1721                     ___wmul:	
  9141                           
  9142                           ;incstack = 0
  9143                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  9144  1721  01F4               	clrf	___wmul@product
  9145  1722  01F5               	clrf	___wmul@product+1
  9146  1723                     l2041:	
  9147  1723  1C70               	btfss	___wmul@multiplier,0
  9148  1724  2F29               	goto	l401
  9149  1725  0872               	movf	___wmul@multiplicand,w
  9150  1726  07F4               	addwf	___wmul@product,f
  9151  1727  0873               	movf	___wmul@multiplicand+1,w
  9152  1728  3DF5               	addwfc	___wmul@product+1,f
  9153  1729                     l401:	
  9154  1729  3001               	movlw	1
  9155  172A                     u1925:	
  9156  172A  35F2               	lslf	___wmul@multiplicand,f
  9157  172B  0DF3               	rlf	___wmul@multiplicand+1,f
  9158  172C  0B89               	decfsz	9,f
  9159  172D  2F2A               	goto	u1925
  9160  172E  3001               	movlw	1
  9161  172F                     u1935:	
  9162  172F  36F1               	lsrf	___wmul@multiplier+1,f
  9163  1730  0CF0               	rrf	___wmul@multiplier,f
  9164  1731  0B89               	decfsz	9,f
  9165  1732  2F2F               	goto	u1935
  9166  1733  0870               	movf	___wmul@multiplier,w
  9167  1734  0471               	iorwf	___wmul@multiplier+1,w
  9168  1735  1D03               	btfss	3,2
  9169  1736  2F23               	goto	l2041
  9170  1737  0875               	movf	___wmul@product+1,w
  9171  1738  00F1               	movwf	?___wmul+1
  9172  1739  0874               	movf	___wmul@product,w
  9173  173A  00F0               	movwf	?___wmul
  9174  173B  0008               	return
  9175  173C                     __end_of___wmul:	
  9176                           
  9177                           	psect	text14
  9178  0A92                     __ptext14:	
  9179 ;; *************** function ___aldiv *****************
  9180 ;; Defined at:
  9181 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\aldiv.c"
  9182 ;; Parameters:    Size  Location     Type
  9183 ;;  divisor         4    0[COMMON] long 
  9184 ;;  dividend        4    4[COMMON] long 
  9185 ;; Auto vars:     Size  Location     Type
  9186 ;;  quotient        4    2[BANK0 ] long 
  9187 ;;  sign            1    1[BANK0 ] unsigned char 
  9188 ;;  counter         1    0[BANK0 ] unsigned char 
  9189 ;; Return value:  Size  Location     Type
  9190 ;;                  4    0[COMMON] long 
  9191 ;; Registers used:
  9192 ;;		wreg, status,2, status,0
  9193 ;; Tracked objects:
  9194 ;;		On entry : 0/0
  9195 ;;		On exit  : 0/0
  9196 ;;		Unchanged: 0/0
  9197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9198 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9199 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9200 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9201 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9202 ;;Total ram usage:       15 bytes
  9203 ;; Hardware stack levels used:    1
  9204 ;; This function calls:
  9205 ;;		Nothing
  9206 ;; This function is called by:
  9207 ;;		_readAnalog
  9208 ;; This function uses a non-reentrant model
  9209 ;;
  9210                           
  9211                           
  9212                           ;psect for function ___aldiv
  9213  0A92                     ___aldiv:	
  9214                           
  9215                           ;incstack = 0
  9216                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  9217  0A92  0020               	movlb	0	; select bank0
  9218  0A93  01A1               	clrf	___aldiv@sign
  9219  0A94  1FF3               	btfss	___aldiv@divisor+3,7
  9220  0A95  2AA3               	goto	l456
  9221  0A96  09F0               	comf	___aldiv@divisor,f
  9222  0A97  09F1               	comf	___aldiv@divisor+1,f
  9223  0A98  09F2               	comf	___aldiv@divisor+2,f
  9224  0A99  09F3               	comf	___aldiv@divisor+3,f
  9225  0A9A  0AF0               	incf	___aldiv@divisor,f
  9226  0A9B  1903               	skipnz
  9227  0A9C  0AF1               	incf	___aldiv@divisor+1,f
  9228  0A9D  1903               	skipnz
  9229  0A9E  0AF2               	incf	___aldiv@divisor+2,f
  9230  0A9F  1903               	skipnz
  9231  0AA0  0AF3               	incf	___aldiv@divisor+3,f
  9232  0AA1  01A1               	clrf	___aldiv@sign
  9233  0AA2  0AA1               	incf	___aldiv@sign,f
  9234  0AA3                     l456:	
  9235  0AA3  1FF7               	btfss	___aldiv@dividend+3,7
  9236  0AA4  2AB4               	goto	l2437
  9237  0AA5  09F4               	comf	___aldiv@dividend,f
  9238  0AA6  09F5               	comf	___aldiv@dividend+1,f
  9239  0AA7  09F6               	comf	___aldiv@dividend+2,f
  9240  0AA8  09F7               	comf	___aldiv@dividend+3,f
  9241  0AA9  0AF4               	incf	___aldiv@dividend,f
  9242  0AAA  1903               	skipnz
  9243  0AAB  0AF5               	incf	___aldiv@dividend+1,f
  9244  0AAC  1903               	skipnz
  9245  0AAD  0AF6               	incf	___aldiv@dividend+2,f
  9246  0AAE  1903               	skipnz
  9247  0AAF  0AF7               	incf	___aldiv@dividend+3,f
  9248  0AB0  3001               	movlw	1
  9249  0AB1  00F8               	movwf	??___aldiv
  9250  0AB2  0878               	movf	??___aldiv,w
  9251  0AB3  06A1               	xorwf	___aldiv@sign,f
  9252  0AB4                     l2437:	
  9253  0AB4  3000               	movlw	0
  9254  0AB5  00A5               	movwf	___aldiv@quotient+3
  9255  0AB6  3000               	movlw	0
  9256  0AB7  00A4               	movwf	___aldiv@quotient+2
  9257  0AB8  3000               	movlw	0
  9258  0AB9  00A3               	movwf	___aldiv@quotient+1
  9259  0ABA  3000               	movlw	0
  9260  0ABB  00A2               	movwf	___aldiv@quotient
  9261  0ABC  0873               	movf	___aldiv@divisor+3,w
  9262  0ABD  0472               	iorwf	___aldiv@divisor+2,w
  9263  0ABE  0471               	iorwf	___aldiv@divisor+1,w
  9264  0ABF  0470               	iorwf	___aldiv@divisor,w
  9265  0AC0  1903               	skipnz
  9266  0AC1  2AFD               	goto	l2459
  9267  0AC2  01A0               	clrf	___aldiv@counter
  9268  0AC3  0AA0               	incf	___aldiv@counter,f
  9269  0AC4                     l2445:	
  9270  0AC4  1BF3               	btfsc	___aldiv@divisor+3,7
  9271  0AC5  2AD2               	goto	l2447
  9272  0AC6  3001               	movlw	1
  9273  0AC7                     u2475:	
  9274  0AC7  35F0               	lslf	___aldiv@divisor,f
  9275  0AC8  0DF1               	rlf	___aldiv@divisor+1,f
  9276  0AC9  0DF2               	rlf	___aldiv@divisor+2,f
  9277  0ACA  0DF3               	rlf	___aldiv@divisor+3,f
  9278  0ACB  0B89               	decfsz	9,f
  9279  0ACC  2AC7               	goto	u2475
  9280  0ACD  3001               	movlw	1
  9281  0ACE  00F8               	movwf	??___aldiv
  9282  0ACF  0878               	movf	??___aldiv,w
  9283  0AD0  07A0               	addwf	___aldiv@counter,f
  9284  0AD1  2AC4               	goto	l2445
  9285  0AD2                     l2447:	
  9286  0AD2  3001               	movlw	1
  9287  0AD3                     u2495:	
  9288  0AD3  35A2               	lslf	___aldiv@quotient,f
  9289  0AD4  0DA3               	rlf	___aldiv@quotient+1,f
  9290  0AD5  0DA4               	rlf	___aldiv@quotient+2,f
  9291  0AD6  0DA5               	rlf	___aldiv@quotient+3,f
  9292  0AD7  0B89               	decfsz	9,f
  9293  0AD8  2AD3               	goto	u2495
  9294  0AD9  0873               	movf	___aldiv@divisor+3,w
  9295  0ADA  0277               	subwf	___aldiv@dividend+3,w
  9296  0ADB  1D03               	skipz
  9297  0ADC  2AE7               	goto	u2505
  9298  0ADD  0872               	movf	___aldiv@divisor+2,w
  9299  0ADE  0276               	subwf	___aldiv@dividend+2,w
  9300  0ADF  1D03               	skipz
  9301  0AE0  2AE7               	goto	u2505
  9302  0AE1  0871               	movf	___aldiv@divisor+1,w
  9303  0AE2  0275               	subwf	___aldiv@dividend+1,w
  9304  0AE3  1D03               	skipz
  9305  0AE4  2AE7               	goto	u2505
  9306  0AE5  0870               	movf	___aldiv@divisor,w
  9307  0AE6  0274               	subwf	___aldiv@dividend,w
  9308  0AE7                     u2505:	
  9309  0AE7  1C03               	skipc
  9310  0AE8  2AF2               	goto	l2455
  9311  0AE9  0870               	movf	___aldiv@divisor,w
  9312  0AEA  02F4               	subwf	___aldiv@dividend,f
  9313  0AEB  0871               	movf	___aldiv@divisor+1,w
  9314  0AEC  3BF5               	subwfb	___aldiv@dividend+1,f
  9315  0AED  0872               	movf	___aldiv@divisor+2,w
  9316  0AEE  3BF6               	subwfb	___aldiv@dividend+2,f
  9317  0AEF  0873               	movf	___aldiv@divisor+3,w
  9318  0AF0  3BF7               	subwfb	___aldiv@dividend+3,f
  9319  0AF1  1422               	bsf	___aldiv@quotient,0
  9320  0AF2                     l2455:	
  9321  0AF2  3001               	movlw	1
  9322  0AF3                     u2515:	
  9323  0AF3  36F3               	lsrf	___aldiv@divisor+3,f
  9324  0AF4  0CF2               	rrf	___aldiv@divisor+2,f
  9325  0AF5  0CF1               	rrf	___aldiv@divisor+1,f
  9326  0AF6  0CF0               	rrf	___aldiv@divisor,f
  9327  0AF7  0B89               	decfsz	9,f
  9328  0AF8  2AF3               	goto	u2515
  9329  0AF9  3001               	movlw	1
  9330  0AFA  02A0               	subwf	___aldiv@counter,f
  9331  0AFB  1D03               	btfss	3,2
  9332  0AFC  2AD2               	goto	l2447
  9333  0AFD                     l2459:	
  9334  0AFD  0821               	movf	___aldiv@sign,w
  9335  0AFE  1903               	btfsc	3,2
  9336  0AFF  2B0B               	goto	l2463
  9337  0B00  09A2               	comf	___aldiv@quotient,f
  9338  0B01  09A3               	comf	___aldiv@quotient+1,f
  9339  0B02  09A4               	comf	___aldiv@quotient+2,f
  9340  0B03  09A5               	comf	___aldiv@quotient+3,f
  9341  0B04  0AA2               	incf	___aldiv@quotient,f
  9342  0B05  1903               	skipnz
  9343  0B06  0AA3               	incf	___aldiv@quotient+1,f
  9344  0B07  1903               	skipnz
  9345  0B08  0AA4               	incf	___aldiv@quotient+2,f
  9346  0B09  1903               	skipnz
  9347  0B0A  0AA5               	incf	___aldiv@quotient+3,f
  9348  0B0B                     l2463:	
  9349  0B0B  0825               	movf	___aldiv@quotient+3,w
  9350  0B0C  00F3               	movwf	?___aldiv+3
  9351  0B0D  0824               	movf	___aldiv@quotient+2,w
  9352  0B0E  00F2               	movwf	?___aldiv+2
  9353  0B0F  0823               	movf	___aldiv@quotient+1,w
  9354  0B10  00F1               	movwf	?___aldiv+1
  9355  0B11  0822               	movf	___aldiv@quotient,w
  9356  0B12  00F0               	movwf	?___aldiv
  9357  0B13  0008               	return
  9358  0B14                     __end_of___aldiv:	
  9359                           
  9360                           	psect	text15
  9361  168D                     __ptext15:	
  9362 ;; *************** function _ADCRead *****************
  9363 ;; Defined at:
  9364 ;;		line 65 in file "adcc.c"
  9365 ;; Parameters:    Size  Location     Type
  9366 ;;  channel         1    wreg     enum E13559
  9367 ;; Auto vars:     Size  Location     Type
  9368 ;;  channel         1    3[COMMON] enum E13559
  9369 ;; Return value:  Size  Location     Type
  9370 ;;                  2    0[COMMON] unsigned int 
  9371 ;; Registers used:
  9372 ;;		wreg
  9373 ;; Tracked objects:
  9374 ;;		On entry : 0/0
  9375 ;;		On exit  : 0/0
  9376 ;;		Unchanged: 0/0
  9377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9378 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9379 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9381 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9382 ;;Total ram usage:        4 bytes
  9383 ;; Hardware stack levels used:    1
  9384 ;; This function calls:
  9385 ;;		Nothing
  9386 ;; This function is called by:
  9387 ;;		_readAnalog
  9388 ;;		_main
  9389 ;; This function uses a non-reentrant model
  9390 ;;
  9391                           
  9392                           
  9393                           ;psect for function _ADCRead
  9394  168D                     _ADCRead:	
  9395                           
  9396                           ;incstack = 0
  9397                           ; Regs used in _ADCRead: [wreg]
  9398                           ;ADCRead@channel stored from wreg
  9399  168D  00F3               	movwf	ADCRead@channel
  9400                           
  9401                           ;adcc.c: 68: ADPCH = channel;
  9402  168E  0873               	movf	ADCRead@channel,w
  9403  168F  0021               	movlb	1	; select bank1
  9404  1690  009E               	movwf	30	;volatile
  9405                           
  9406                           ;adcc.c: 71: ADCON0bits.ADON = 1;
  9407  1691  1793               	bsf	19,7	;volatile
  9408                           
  9409                           ;adcc.c: 74: ADCON0bits.ADCONT = 0;
  9410  1692  1313               	bcf	19,6	;volatile
  9411                           
  9412                           ;adcc.c: 77: ADCON0bits.ADGO = 1;
  9413  1693  1413               	bsf	19,0	;volatile
  9414  1694                     l58:	
  9415                           ;adcc.c: 81: {
  9416                           
  9417                           ;adcc.c: 80: while (ADCON0bits.ADGO)
  9418                           
  9419  1694  1813               	btfsc	19,0	;volatile
  9420  1695  2E94               	goto	l58
  9421                           
  9422                           ;adcc.c: 82: }
  9423                           ;adcc.c: 85: return ((ADRESH << 8) + ADRESL);
  9424  1696  080D               	movf	13,w	;volatile
  9425  1697  00F1               	movwf	?_ADCRead+1
  9426  1698  080C               	movf	12,w	;volatile
  9427  1699  00F0               	movwf	?_ADCRead
  9428  169A  0008               	return
  9429  169B                     __end_of_ADCRead:	
  9430                           
  9431                           	psect	text16
  9432  17CC                     __ptext16:	
  9433 ;; *************** function ___lwdiv *****************
  9434 ;; Defined at:
  9435 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwdiv.c"
  9436 ;; Parameters:    Size  Location     Type
  9437 ;;  divisor         2    0[COMMON] unsigned int 
  9438 ;;  dividend        2    2[COMMON] unsigned int 
  9439 ;; Auto vars:     Size  Location     Type
  9440 ;;  quotient        2    5[COMMON] unsigned int 
  9441 ;;  counter         1    7[COMMON] unsigned char 
  9442 ;; Return value:  Size  Location     Type
  9443 ;;                  2    0[COMMON] unsigned int 
  9444 ;; Registers used:
  9445 ;;		wreg, status,2, status,0
  9446 ;; Tracked objects:
  9447 ;;		On entry : 0/0
  9448 ;;		On exit  : 0/0
  9449 ;;		Unchanged: 0/0
  9450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9451 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9452 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9453 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9454 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9455 ;;Total ram usage:        8 bytes
  9456 ;; Hardware stack levels used:    1
  9457 ;; This function calls:
  9458 ;;		Nothing
  9459 ;; This function is called by:
  9460 ;;		_main
  9461 ;; This function uses a non-reentrant model
  9462 ;;
  9463                           
  9464                           
  9465                           ;psect for function ___lwdiv
  9466  17CC                     ___lwdiv:	
  9467                           
  9468                           ;incstack = 0
  9469                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  9470  17CC  01F5               	clrf	___lwdiv@quotient
  9471  17CD  01F6               	clrf	___lwdiv@quotient+1
  9472  17CE  0870               	movf	___lwdiv@divisor,w
  9473  17CF  0471               	iorwf	___lwdiv@divisor+1,w
  9474  17D0  1903               	btfsc	3,2
  9475  17D1  2FFB               	goto	l2803
  9476  17D2  01F7               	clrf	___lwdiv@counter
  9477  17D3  0AF7               	incf	___lwdiv@counter,f
  9478  17D4                     l2791:	
  9479  17D4  1BF1               	btfsc	___lwdiv@divisor+1,7
  9480  17D5  2FE0               	goto	l2793
  9481  17D6  3001               	movlw	1
  9482  17D7                     u3155:	
  9483  17D7  35F0               	lslf	___lwdiv@divisor,f
  9484  17D8  0DF1               	rlf	___lwdiv@divisor+1,f
  9485  17D9  0B89               	decfsz	9,f
  9486  17DA  2FD7               	goto	u3155
  9487  17DB  3001               	movlw	1
  9488  17DC  00F4               	movwf	??___lwdiv
  9489  17DD  0874               	movf	??___lwdiv,w
  9490  17DE  07F7               	addwf	___lwdiv@counter,f
  9491  17DF  2FD4               	goto	l2791
  9492  17E0                     l2793:	
  9493  17E0  3001               	movlw	1
  9494  17E1                     u3175:	
  9495  17E1  35F5               	lslf	___lwdiv@quotient,f
  9496  17E2  0DF6               	rlf	___lwdiv@quotient+1,f
  9497  17E3  0B89               	decfsz	9,f
  9498  17E4  2FE1               	goto	u3175
  9499  17E5  0871               	movf	___lwdiv@divisor+1,w
  9500  17E6  0273               	subwf	___lwdiv@dividend+1,w
  9501  17E7  1D03               	skipz
  9502  17E8  2FEB               	goto	u3185
  9503  17E9  0870               	movf	___lwdiv@divisor,w
  9504  17EA  0272               	subwf	___lwdiv@dividend,w
  9505  17EB                     u3185:	
  9506  17EB  1C03               	skipc
  9507  17EC  2FF2               	goto	l2799
  9508  17ED  0870               	movf	___lwdiv@divisor,w
  9509  17EE  02F2               	subwf	___lwdiv@dividend,f
  9510  17EF  0871               	movf	___lwdiv@divisor+1,w
  9511  17F0  3BF3               	subwfb	___lwdiv@dividend+1,f
  9512  17F1  1475               	bsf	___lwdiv@quotient,0
  9513  17F2                     l2799:	
  9514  17F2  3001               	movlw	1
  9515  17F3                     u3195:	
  9516  17F3  36F1               	lsrf	___lwdiv@divisor+1,f
  9517  17F4  0CF0               	rrf	___lwdiv@divisor,f
  9518  17F5  0B89               	decfsz	9,f
  9519  17F6  2FF3               	goto	u3195
  9520  17F7  3001               	movlw	1
  9521  17F8  02F7               	subwf	___lwdiv@counter,f
  9522  17F9  1D03               	btfss	3,2
  9523  17FA  2FE0               	goto	l2793
  9524  17FB                     l2803:	
  9525  17FB  0876               	movf	___lwdiv@quotient+1,w
  9526  17FC  00F1               	movwf	?___lwdiv+1
  9527  17FD  0875               	movf	___lwdiv@quotient,w
  9528  17FE  00F0               	movwf	?___lwdiv
  9529  17FF  0008               	return
  9530  1800                     __end_of___lwdiv:	
  9531                           
  9532                           	psect	text17
  9533  0B14                     __ptext17:	
  9534 ;; *************** function ___fttol *****************
  9535 ;; Defined at:
  9536 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fttol.c"
  9537 ;; Parameters:    Size  Location     Type
  9538 ;;  f1              3    0[COMMON] float 
  9539 ;; Auto vars:     Size  Location     Type
  9540 ;;  lval            4    9[COMMON] unsigned long 
  9541 ;;  exp1            1   13[COMMON] unsigned char 
  9542 ;;  sign1           1    8[COMMON] unsigned char 
  9543 ;; Return value:  Size  Location     Type
  9544 ;;                  4    0[COMMON] long 
  9545 ;; Registers used:
  9546 ;;		wreg, status,2, status,0
  9547 ;; Tracked objects:
  9548 ;;		On entry : 0/0
  9549 ;;		On exit  : 0/0
  9550 ;;		Unchanged: 0/0
  9551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9552 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9553 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9554 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9555 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9556 ;;Total ram usage:       14 bytes
  9557 ;; Hardware stack levels used:    1
  9558 ;; This function calls:
  9559 ;;		Nothing
  9560 ;; This function is called by:
  9561 ;;		_main
  9562 ;; This function uses a non-reentrant model
  9563 ;;
  9564                           
  9565                           
  9566                           ;psect for function ___fttol
  9567  0B14                     ___fttol:	
  9568                           
  9569                           ;incstack = 0
  9570                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  9571  0B14  0870               	movf	___fttol@f1,w
  9572  0B15  00F4               	movwf	??___fttol
  9573  0B16  0871               	movf	___fttol@f1+1,w
  9574  0B17  00F5               	movwf	??___fttol+1
  9575  0B18  0872               	movf	___fttol@f1+2,w
  9576  0B19  00F6               	movwf	??___fttol+2
  9577  0B1A  1003               	clrc
  9578  0B1B  0D75               	rlf	??___fttol+1,w
  9579  0B1C  0D76               	rlf	??___fttol+2,w
  9580  0B1D  00F7               	movwf	??___fttol+3
  9581  0B1E  0877               	movf	??___fttol+3,w
  9582  0B1F  00FD               	movwf	___fttol@exp1
  9583  0B20  087D               	movf	___fttol@exp1,w
  9584  0B21  1D03               	btfss	3,2
  9585  0B22  2B2C               	goto	l2745
  9586  0B23  3000               	movlw	0
  9587  0B24  00F3               	movwf	?___fttol+3
  9588  0B25  3000               	movlw	0
  9589  0B26  00F2               	movwf	?___fttol+2
  9590  0B27  3000               	movlw	0
  9591  0B28  00F1               	movwf	?___fttol+1
  9592  0B29  3000               	movlw	0
  9593  0B2A  00F0               	movwf	?___fttol
  9594  0B2B  0008               	return
  9595  0B2C                     l2745:	
  9596  0B2C  0870               	movf	___fttol@f1,w
  9597  0B2D  00F4               	movwf	??___fttol
  9598  0B2E  0871               	movf	___fttol@f1+1,w
  9599  0B2F  00F5               	movwf	??___fttol+1
  9600  0B30  0872               	movf	___fttol@f1+2,w
  9601  0B31  00F6               	movwf	??___fttol+2
  9602  0B32  3017               	movlw	23
  9603  0B33                     u3055:	
  9604  0B33  36F6               	lsrf	??___fttol+2,f
  9605  0B34  0CF5               	rrf	??___fttol+1,f
  9606  0B35  0CF4               	rrf	??___fttol,f
  9607  0B36  0B89               	decfsz	9,f
  9608  0B37  2B33               	goto	u3055
  9609  0B38  0874               	movf	??___fttol,w
  9610  0B39  00F7               	movwf	??___fttol+3
  9611  0B3A  0877               	movf	??___fttol+3,w
  9612  0B3B  00F8               	movwf	___fttol@sign1
  9613  0B3C  17F1               	bsf	___fttol@f1+1,7
  9614  0B3D  30FF               	movlw	255
  9615  0B3E  05F0               	andwf	___fttol@f1,f
  9616  0B3F  30FF               	movlw	255
  9617  0B40  05F1               	andwf	___fttol@f1+1,f
  9618  0B41  3000               	movlw	0
  9619  0B42  05F2               	andwf	___fttol@f1+2,f
  9620  0B43  0870               	movf	___fttol@f1,w
  9621  0B44  00F9               	movwf	___fttol@lval
  9622  0B45  0871               	movf	___fttol@f1+1,w
  9623  0B46  00FA               	movwf	___fttol@lval+1
  9624  0B47  0872               	movf	___fttol@f1+2,w
  9625  0B48  00FB               	movwf	___fttol@lval+2
  9626  0B49  01FC               	clrf	___fttol@lval+3
  9627  0B4A  308E               	movlw	142
  9628  0B4B  02FD               	subwf	___fttol@exp1,f
  9629  0B4C  1FFD               	btfss	___fttol@exp1,7
  9630  0B4D  2B6A               	goto	l2765
  9631  0B4E  087D               	movf	___fttol@exp1,w
  9632  0B4F  3A80               	xorlw	128
  9633  0B50  3E8F               	addlw	143
  9634  0B51  1803               	skipnc
  9635  0B52  2B5C               	goto	l2763
  9636  0B53  3000               	movlw	0
  9637  0B54  00F3               	movwf	?___fttol+3
  9638  0B55  3000               	movlw	0
  9639  0B56  00F2               	movwf	?___fttol+2
  9640  0B57  3000               	movlw	0
  9641  0B58  00F1               	movwf	?___fttol+1
  9642  0B59  3000               	movlw	0
  9643  0B5A  00F0               	movwf	?___fttol
  9644  0B5B  0008               	return
  9645  0B5C                     l2763:	
  9646  0B5C  3001               	movlw	1
  9647  0B5D                     u3085:	
  9648  0B5D  36FC               	lsrf	___fttol@lval+3,f
  9649  0B5E  0CFB               	rrf	___fttol@lval+2,f
  9650  0B5F  0CFA               	rrf	___fttol@lval+1,f
  9651  0B60  0CF9               	rrf	___fttol@lval,f
  9652  0B61  0B89               	decfsz	9,f
  9653  0B62  2B5D               	goto	u3085
  9654  0B63  3001               	movlw	1
  9655  0B64  00F4               	movwf	??___fttol
  9656  0B65  0874               	movf	??___fttol,w
  9657  0B66  07FD               	addwf	___fttol@exp1,f
  9658  0B67  1903               	btfsc	3,2
  9659  0B68  2B83               	goto	l2773
  9660  0B69  2B5C               	goto	l2763
  9661  0B6A                     l2765:	
  9662  0B6A  3018               	movlw	24
  9663  0B6B  027D               	subwf	___fttol@exp1,w
  9664  0B6C  1C03               	skipc
  9665  0B6D  2B80               	goto	l653
  9666  0B6E  3000               	movlw	0
  9667  0B6F  00F3               	movwf	?___fttol+3
  9668  0B70  3000               	movlw	0
  9669  0B71  00F2               	movwf	?___fttol+2
  9670  0B72  3000               	movlw	0
  9671  0B73  00F1               	movwf	?___fttol+1
  9672  0B74  3000               	movlw	0
  9673  0B75  00F0               	movwf	?___fttol
  9674  0B76  0008               	return
  9675  0B77                     l2771:	
  9676  0B77  3001               	movlw	1
  9677  0B78                     u3115:	
  9678  0B78  35F9               	lslf	___fttol@lval,f
  9679  0B79  0DFA               	rlf	___fttol@lval+1,f
  9680  0B7A  0DFB               	rlf	___fttol@lval+2,f
  9681  0B7B  0DFC               	rlf	___fttol@lval+3,f
  9682  0B7C  0B89               	decfsz	9,f
  9683  0B7D  2B78               	goto	u3115
  9684  0B7E  3001               	movlw	1
  9685  0B7F  02FD               	subwf	___fttol@exp1,f
  9686  0B80                     l653:	
  9687  0B80  087D               	movf	___fttol@exp1,w
  9688  0B81  1D03               	btfss	3,2
  9689  0B82  2B77               	goto	l2771
  9690  0B83                     l2773:	
  9691  0B83  0878               	movf	___fttol@sign1,w
  9692  0B84  1903               	btfsc	3,2
  9693  0B85  2B91               	goto	l2777
  9694  0B86  09F9               	comf	___fttol@lval,f
  9695  0B87  09FA               	comf	___fttol@lval+1,f
  9696  0B88  09FB               	comf	___fttol@lval+2,f
  9697  0B89  09FC               	comf	___fttol@lval+3,f
  9698  0B8A  0AF9               	incf	___fttol@lval,f
  9699  0B8B  1903               	skipnz
  9700  0B8C  0AFA               	incf	___fttol@lval+1,f
  9701  0B8D  1903               	skipnz
  9702  0B8E  0AFB               	incf	___fttol@lval+2,f
  9703  0B8F  1903               	skipnz
  9704  0B90  0AFC               	incf	___fttol@lval+3,f
  9705  0B91                     l2777:	
  9706  0B91  087C               	movf	___fttol@lval+3,w
  9707  0B92  00F3               	movwf	?___fttol+3
  9708  0B93  087B               	movf	___fttol@lval+2,w
  9709  0B94  00F2               	movwf	?___fttol+2
  9710  0B95  087A               	movf	___fttol@lval+1,w
  9711  0B96  00F1               	movwf	?___fttol+1
  9712  0B97  0879               	movf	___fttol@lval,w
  9713  0B98  00F0               	movwf	?___fttol
  9714  0B99  0008               	return
  9715  0B9A                     __end_of___fttol:	
  9716                           
  9717                           	psect	text18
  9718  08F6                     __ptext18:	
  9719 ;; *************** function _SYSTEM_Initialize *****************
  9720 ;; Defined at:
  9721 ;;		line 71 in file "system.c"
  9722 ;; Parameters:    Size  Location     Type
  9723 ;;		None
  9724 ;; Auto vars:     Size  Location     Type
  9725 ;;		None
  9726 ;; Return value:  Size  Location     Type
  9727 ;;                  1    wreg      void 
  9728 ;; Registers used:
  9729 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9730 ;; Tracked objects:
  9731 ;;		On entry : 0/0
  9732 ;;		On exit  : 0/0
  9733 ;;		Unchanged: 0/0
  9734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9737 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9738 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9739 ;;Total ram usage:        3 bytes
  9740 ;; Hardware stack levels used:    1
  9741 ;; Hardware stack levels required when called:    3
  9742 ;; This function calls:
  9743 ;;		_ADCC_Initialize
  9744 ;;		_InitCustomChars
  9745 ;;		_LCD_Clear
  9746 ;;		_LCD_Init
  9747 ;;		_OSCILLATOR_Initialize
  9748 ;;		_PIN_MANAGER_Initialize
  9749 ;;		_PWM6_Initialize
  9750 ;;		_TMR2_Initialize
  9751 ;; This function is called by:
  9752 ;;		_main
  9753 ;; This function uses a non-reentrant model
  9754 ;;
  9755                           
  9756                           
  9757                           ;psect for function _SYSTEM_Initialize
  9758  08F6                     _SYSTEM_Initialize:	
  9759                           
  9760                           ;system.c: 73: PIN_MANAGER_Initialize();
  9761                           
  9762                           ;incstack = 0
  9763                           ; Regs used in _SYSTEM_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9764  08F6  3188  200B  3188   	fcall	_PIN_MANAGER_Initialize
  9765                           
  9766                           ;system.c: 74: OSCILLATOR_Initialize();
  9767  08F9  3196  2652  3188   	fcall	_OSCILLATOR_Initialize
  9768                           
  9769                           ;system.c: 75: FVRCON = 0x00;
  9770  08FC  0032               	movlb	18	; select bank18
  9771  08FD  018C               	clrf	12	;volatile
  9772                           
  9773                           ;system.c: 76: ADCC_Initialize();
  9774  08FE  3197  2707  3188   	fcall	_ADCC_Initialize
  9775                           
  9776                           ;system.c: 77: PWM6_Initialize();
  9777  0901  3188  2000  3188   	fcall	_PWM6_Initialize
  9778                           
  9779                           ;system.c: 79: TMR2_Initialize();
  9780  0904  3196  267F  3188   	fcall	_TMR2_Initialize
  9781                           
  9782                           ;system.c: 80: LCD_Init(0X00);
  9783  0907  3000               	movlw	0
  9784  0908  318B  239A  3188   	fcall	_LCD_Init
  9785                           
  9786                           ;system.c: 81: _delay((unsigned long)((200)*(32000000/4000.0)));
  9787  090B  3009               	movlw	9
  9788  090C  00FA               	movwf	??_SYSTEM_Initialize+2
  9789  090D  301E               	movlw	30
  9790  090E  00F9               	movwf	??_SYSTEM_Initialize+1
  9791  090F  30EB               	movlw	235
  9792  0910  00F8               	movwf	??_SYSTEM_Initialize
  9793  0911                     u3797:	
  9794  0911  0BF8               	decfsz	??_SYSTEM_Initialize,f
  9795  0912  2911               	goto	u3797
  9796  0913  0BF9               	decfsz	??_SYSTEM_Initialize+1,f
  9797  0914  2911               	goto	u3797
  9798  0915  0BFA               	decfsz	??_SYSTEM_Initialize+2,f
  9799  0916  2911               	goto	u3797
  9800  0917  0000               	nop
  9801                           
  9802                           ;system.c: 82: LCD_Clear();
  9803  0918  3196  264A  3188   	fcall	_LCD_Clear
  9804                           
  9805                           ;system.c: 83: _delay((unsigned long)((100)*(32000000/4000.0)));
  9806  091B  3005               	movlw	5
  9807  091C  00FA               	movwf	??_SYSTEM_Initialize+2
  9808  091D  300F               	movlw	15
  9809  091E  00F9               	movwf	??_SYSTEM_Initialize+1
  9810  091F  30F4               	movlw	244
  9811  0920  00F8               	movwf	??_SYSTEM_Initialize
  9812  0921                     u3807:	
  9813  0921  0BF8               	decfsz	??_SYSTEM_Initialize,f
  9814  0922  2921               	goto	u3807
  9815  0923  0BF9               	decfsz	??_SYSTEM_Initialize+1,f
  9816  0924  2921               	goto	u3807
  9817  0925  0BFA               	decfsz	??_SYSTEM_Initialize+2,f
  9818  0926  2921               	goto	u3807
  9819                           
  9820                           ;system.c: 84: InitCustomChars();
  9821  0927  3197  277A  3188   	fcall	_InitCustomChars
  9822                           
  9823                           ;system.c: 85: _delay((unsigned long)((200)*(32000000/4000.0)));
  9824  092A  3009               	movlw	9
  9825  092B  00FA               	movwf	??_SYSTEM_Initialize+2
  9826  092C  301E               	movlw	30
  9827  092D  00F9               	movwf	??_SYSTEM_Initialize+1
  9828  092E  30EB               	movlw	235
  9829  092F  00F8               	movwf	??_SYSTEM_Initialize
  9830  0930                     u3817:	
  9831  0930  0BF8               	decfsz	??_SYSTEM_Initialize,f
  9832  0931  2930               	goto	u3817
  9833  0932  0BF9               	decfsz	??_SYSTEM_Initialize+1,f
  9834  0933  2930               	goto	u3817
  9835  0934  0BFA               	decfsz	??_SYSTEM_Initialize+2,f
  9836  0935  2930               	goto	u3817
  9837  0936  0000               	nop
  9838  0937  0008               	return
  9839  0938                     __end_of_SYSTEM_Initialize:	
  9840                           
  9841                           	psect	text19
  9842  167F                     __ptext19:	
  9843 ;; *************** function _TMR2_Initialize *****************
  9844 ;; Defined at:
  9845 ;;		line 3 in file "tmr2.c"
  9846 ;; Parameters:    Size  Location     Type
  9847 ;;		None
  9848 ;; Auto vars:     Size  Location     Type
  9849 ;;		None
  9850 ;; Return value:  Size  Location     Type
  9851 ;;                  1    wreg      void 
  9852 ;; Registers used:
  9853 ;;		wreg, status,2
  9854 ;; Tracked objects:
  9855 ;;		On entry : 0/0
  9856 ;;		On exit  : 0/0
  9857 ;;		Unchanged: 0/0
  9858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9862 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9863 ;;Total ram usage:        0 bytes
  9864 ;; Hardware stack levels used:    1
  9865 ;; This function calls:
  9866 ;;		Nothing
  9867 ;; This function is called by:
  9868 ;;		_SYSTEM_Initialize
  9869 ;; This function uses a non-reentrant model
  9870 ;;
  9871                           
  9872                           
  9873                           ;psect for function _TMR2_Initialize
  9874  167F                     _TMR2_Initialize:	
  9875                           
  9876                           ;tmr2.c: 5: T2CON = 0x00;
  9877                           
  9878                           ;incstack = 0
  9879                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  9880  167F  0025               	movlb	5	; select bank5
  9881  1680  018E               	clrf	14	;volatile
  9882                           
  9883                           ;tmr2.c: 7: T2CLKCON = 0x01;
  9884  1681  3001               	movlw	1
  9885  1682  0090               	movwf	16	;volatile
  9886                           
  9887                           ;tmr2.c: 9: T2HLT = 0x00;
  9888  1683  018F               	clrf	15	;volatile
  9889                           
  9890                           ;tmr2.c: 11: T2RST = 0x00;
  9891  1684  0191               	clrf	17	;volatile
  9892                           
  9893                           ;tmr2.c: 13: T2PR = 0xFF;
  9894  1685  30FF               	movlw	255
  9895  1686  008D               	movwf	13	;volatile
  9896                           
  9897                           ;tmr2.c: 15: T2TMR = 0x00;
  9898  1687  018C               	clrf	12	;volatile
  9899                           
  9900                           ;tmr2.c: 17: PIR4bits.TMR2IF = 0;
  9901  1688  002E               	movlb	14	; select bank14
  9902  1689  1090               	bcf	16,1	;volatile
  9903                           
  9904                           ;tmr2.c: 19: T2CONbits.TMR2ON = 1;
  9905  168A  0025               	movlb	5	; select bank5
  9906  168B  178E               	bsf	14,7	;volatile
  9907  168C  0008               	return
  9908  168D                     __end_of_TMR2_Initialize:	
  9909                           
  9910                           	psect	text20
  9911  0800                     __ptext20:	
  9912 ;; *************** function _PWM6_Initialize *****************
  9913 ;; Defined at:
  9914 ;;		line 3 in file "pwm6.c"
  9915 ;; Parameters:    Size  Location     Type
  9916 ;;		None
  9917 ;; Auto vars:     Size  Location     Type
  9918 ;;		None
  9919 ;; Return value:  Size  Location     Type
  9920 ;;                  1    wreg      void 
  9921 ;; Registers used:
  9922 ;;		wreg, status,2, status,0
  9923 ;; Tracked objects:
  9924 ;;		On entry : 0/0
  9925 ;;		On exit  : 0/0
  9926 ;;		Unchanged: 0/0
  9927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9931 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9932 ;;Total ram usage:        0 bytes
  9933 ;; Hardware stack levels used:    1
  9934 ;; This function calls:
  9935 ;;		Nothing
  9936 ;; This function is called by:
  9937 ;;		_SYSTEM_Initialize
  9938 ;; This function uses a non-reentrant model
  9939 ;;
  9940                           
  9941                           
  9942                           ;psect for function _PWM6_Initialize
  9943  0800                     _PWM6_Initialize:	
  9944                           
  9945                           ;pwm6.c: 5: PWM6CON = 0x80;
  9946                           
  9947                           ;incstack = 0
  9948                           ; Regs used in _PWM6_Initialize: [wreg+status,2+status,0]
  9949  0800  3080               	movlw	128
  9950  0801  0027               	movlb	7	; select bank7
  9951  0802  008E               	movwf	14	;volatile
  9952                           
  9953                           ;pwm6.c: 7: PWM6DCH = 0x00;
  9954  0803  018D               	clrf	13	;volatile
  9955                           
  9956                           ;pwm6.c: 9: PWM6DCL = 0x00;
  9957  0804  018C               	clrf	12	;volatile
  9958                           
  9959                           ;pwm6.c: 11: CCPTMRS1bits.P6TSEL = 0x1;
  9960  0805  0024               	movlb	4	; select bank4
  9961  0806  081F               	movf	31,w	;volatile
  9962  0807  39F3               	andlw	-13
  9963  0808  3804               	iorlw	4
  9964  0809  009F               	movwf	31	;volatile
  9965  080A  0008               	return
  9966  080B                     __end_of_PWM6_Initialize:	
  9967                           
  9968                           	psect	text21
  9969  080B                     __ptext21:	
  9970 ;; *************** function _PIN_MANAGER_Initialize *****************
  9971 ;; Defined at:
  9972 ;;		line 5 in file "pin_manager.c"
  9973 ;; Parameters:    Size  Location     Type
  9974 ;;		None
  9975 ;; Auto vars:     Size  Location     Type
  9976 ;;  state           1    0[COMMON] unsigned char 
  9977 ;; Return value:  Size  Location     Type
  9978 ;;                  1    wreg      void 
  9979 ;; Registers used:
  9980 ;;		wreg, status,2
  9981 ;; Tracked objects:
  9982 ;;		On entry : 0/0
  9983 ;;		On exit  : 0/0
  9984 ;;		Unchanged: 0/0
  9985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9987 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9989 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9990 ;;Total ram usage:        1 bytes
  9991 ;; Hardware stack levels used:    1
  9992 ;; This function calls:
  9993 ;;		Nothing
  9994 ;; This function is called by:
  9995 ;;		_SYSTEM_Initialize
  9996 ;; This function uses a non-reentrant model
  9997 ;;
  9998                           
  9999                           
 10000                           ;psect for function _PIN_MANAGER_Initialize
 10001  080B                     _PIN_MANAGER_Initialize:	
 10002                           
 10003                           ;pin_manager.c: 7: LATA = 0x00;
 10004                           
 10005                           ;incstack = 0
 10006                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 10007  080B  0020               	movlb	0	; select bank0
 10008  080C  0196               	clrf	22	;volatile
 10009                           
 10010                           ;pin_manager.c: 8: LATB = 0x00;
 10011  080D  0197               	clrf	23	;volatile
 10012                           
 10013                           ;pin_manager.c: 9: LATC = 0x00;
 10014  080E  0198               	clrf	24	;volatile
 10015                           
 10016                           ;pin_manager.c: 11: WPUA = 0x02;
 10017  080F  3002               	movlw	2
 10018  0810  003E               	movlb	30	; select bank30
 10019  0811  00B9               	movwf	57	;volatile
 10020                           
 10021                           ;pin_manager.c: 12: WPUB = 0x00;
 10022  0812  01C4               	clrf	68	;volatile
 10023                           
 10024                           ;pin_manager.c: 13: WPUC = 0x00;
 10025  0813  01CF               	clrf	79	;volatile
 10026                           
 10027                           ;pin_manager.c: 14: WPUE = 0x8;
 10028  0814  3008               	movlw	8
 10029  0815  00E5               	movwf	101	;volatile
 10030                           
 10031                           ;pin_manager.c: 16: TRISA = 0x02;
 10032  0816  3002               	movlw	2
 10033  0817  0020               	movlb	0	; select bank0
 10034  0818  0091               	movwf	17	;volatile
 10035                           
 10036                           ;pin_manager.c: 17: TRISA = 0x3A;
 10037  0819  303A               	movlw	58
 10038  081A  0091               	movwf	17	;volatile
 10039                           
 10040                           ;pin_manager.c: 18: TRISB = 0x0A;
 10041  081B  300A               	movlw	10
 10042  081C  0092               	movwf	18	;volatile
 10043                           
 10044                           ;pin_manager.c: 19: TRISC = 0x10;
 10045  081D  3010               	movlw	16
 10046  081E  0093               	movwf	19	;volatile
 10047                           
 10048                           ;pin_manager.c: 21: ANSELA = 0x3A;
 10049  081F  303A               	movlw	58
 10050  0820  003E               	movlb	30	; select bank30
 10051  0821  00B8               	movwf	56	;volatile
 10052                           
 10053                           ;pin_manager.c: 22: ANSELB = 0x0A;
 10054  0822  300A               	movlw	10
 10055  0823  00C3               	movwf	67	;volatile
 10056                           
 10057                           ;pin_manager.c: 23: ANSELC = 0x00;
 10058  0824  01CE               	clrf	78	;volatile
 10059                           
 10060                           ;pin_manager.c: 25: PIE0bits.IOCIE = 0;
 10061  0825  002E               	movlb	14	; select bank14
 10062  0826  1216               	bcf	22,4	;volatile
 10063                           
 10064                           ;pin_manager.c: 26: bool state = GIE;
 10065  0827  3000               	movlw	0
 10066  0828  1B8B               	btfsc	11,7	;volatile
 10067  0829  3001               	movlw	1
 10068  082A  00F0               	movwf	PIN_MANAGER_Initialize@state
 10069                           
 10070                           ;pin_manager.c: 27: GIE = 0;
 10071  082B  138B               	bcf	11,7	;volatile
 10072                           
 10073                           ;pin_manager.c: 28: PPSLOCK = 0x55;
 10074  082C  3055               	movlw	85
 10075  082D  003D               	movlb	29	; select bank29
 10076  082E  008F               	movwf	15	;volatile
 10077                           
 10078                           ;pin_manager.c: 29: PPSLOCK = 0xAA;
 10079  082F  30AA               	movlw	170
 10080  0830  008F               	movwf	15	;volatile
 10081                           
 10082                           ;pin_manager.c: 30: PPSLOCKbits.PPSLOCKED = 0x00;
 10083  0831  100F               	bcf	15,0	;volatile
 10084                           
 10085                           ;pin_manager.c: 33: RC2PPS = 0x000E;
 10086  0832  300E               	movlw	14
 10087  0833  003E               	movlb	30	; select bank30
 10088  0834  00A2               	movwf	34	;volatile
 10089                           
 10090                           ;pin_manager.c: 37: PPSLOCK = 0x55;
 10091  0835  3055               	movlw	85
 10092  0836  003D               	movlb	29	; select bank29
 10093  0837  008F               	movwf	15	;volatile
 10094                           
 10095                           ;pin_manager.c: 38: PPSLOCK = 0xAA;
 10096  0838  30AA               	movlw	170
 10097  0839  008F               	movwf	15	;volatile
 10098                           
 10099                           ;pin_manager.c: 39: PPSLOCKbits.PPSLOCKED = 0x01;
 10100  083A  140F               	bsf	15,0	;volatile
 10101                           
 10102                           ;pin_manager.c: 40: GIE = state;
 10103  083B  1C70               	btfss	PIN_MANAGER_Initialize@state,0
 10104  083C  283F               	goto	u2400
 10105  083D  178B               	bsf	11,7	;volatile
 10106  083E  0008               	return
 10107  083F                     u2400:	
 10108  083F  138B               	bcf	11,7	;volatile
 10109  0840  0008               	return
 10110  0841                     __end_of_PIN_MANAGER_Initialize:	
 10111                           
 10112                           	psect	text22
 10113  1652                     __ptext22:	
 10114 ;; *************** function _OSCILLATOR_Initialize *****************
 10115 ;; Defined at:
 10116 ;;		line 89 in file "system.c"
 10117 ;; Parameters:    Size  Location     Type
 10118 ;;		None
 10119 ;; Auto vars:     Size  Location     Type
 10120 ;;		None
 10121 ;; Return value:  Size  Location     Type
 10122 ;;                  1    wreg      void 
 10123 ;; Registers used:
 10124 ;;		wreg, status,2
 10125 ;; Tracked objects:
 10126 ;;		On entry : 0/0
 10127 ;;		On exit  : 0/0
 10128 ;;		Unchanged: 0/0
 10129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10133 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10134 ;;Total ram usage:        0 bytes
 10135 ;; Hardware stack levels used:    1
 10136 ;; This function calls:
 10137 ;;		Nothing
 10138 ;; This function is called by:
 10139 ;;		_SYSTEM_Initialize
 10140 ;; This function uses a non-reentrant model
 10141 ;;
 10142                           
 10143                           
 10144                           ;psect for function _OSCILLATOR_Initialize
 10145  1652                     _OSCILLATOR_Initialize:	
 10146                           
 10147                           ;system.c: 91: OSCCON1 = 0x60;
 10148                           
 10149                           ;incstack = 0
 10150                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 10151  1652  3060               	movlw	96
 10152  1653  0031               	movlb	17	; select bank17
 10153  1654  008D               	movwf	13	;volatile
 10154                           
 10155                           ;system.c: 92: OSCCON3 = 0x00;
 10156  1655  018F               	clrf	15	;volatile
 10157                           
 10158                           ;system.c: 93: OSCEN = 0x00;
 10159  1656  0191               	clrf	17	;volatile
 10160                           
 10161                           ;system.c: 94: OSCFRQ = 0x06;
 10162  1657  3006               	movlw	6
 10163  1658  0093               	movwf	19	;volatile
 10164                           
 10165                           ;system.c: 95: OSCTUNE = 0x00;
 10166  1659  0192               	clrf	18	;volatile
 10167  165A  0008               	return
 10168  165B                     __end_of_OSCILLATOR_Initialize:	
 10169                           
 10170                           	psect	text23
 10171  0B9A                     __ptext23:	
 10172 ;; *************** function _LCD_Init *****************
 10173 ;; Defined at:
 10174 ;;		line 154 in file "lcd.c"
 10175 ;; Parameters:    Size  Location     Type
 10176 ;;  style           1    wreg     unsigned char 
 10177 ;; Auto vars:     Size  Location     Type
 10178 ;;  style           1    7[COMMON] unsigned char 
 10179 ;; Return value:  Size  Location     Type
 10180 ;;                  1    wreg      void 
 10181 ;; Registers used:
 10182 ;;		wreg, status,2, status,0, pclath, cstack
 10183 ;; Tracked objects:
 10184 ;;		On entry : 0/0
 10185 ;;		On exit  : 0/0
 10186 ;;		Unchanged: 0/0
 10187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10189 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10190 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10191 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10192 ;;Total ram usage:        4 bytes
 10193 ;; Hardware stack levels used:    1
 10194 ;; Hardware stack levels required when called:    2
 10195 ;; This function calls:
 10196 ;;		_LCD_Cmd
 10197 ;;		_LCD_Port
 10198 ;; This function is called by:
 10199 ;;		_SYSTEM_Initialize
 10200 ;; This function uses a non-reentrant model
 10201 ;;
 10202                           
 10203                           
 10204                           ;psect for function _LCD_Init
 10205  0B9A                     _LCD_Init:	
 10206                           
 10207                           ;incstack = 0
 10208                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
 10209                           ;LCD_Init@style stored from wreg
 10210  0B9A  00F7               	movwf	LCD_Init@style
 10211                           
 10212                           ;lcd.c: 156: LCD_Port(0x00);
 10213  0B9B  3000               	movlw	0
 10214  0B9C  3196  26D5  318B   	fcall	_LCD_Port
 10215                           
 10216                           ;lcd.c: 158: _delay((unsigned long)((100)*(32000000/4000.0)));
 10217  0B9F  3005               	movlw	5
 10218  0BA0  00F6               	movwf	??_LCD_Init+2
 10219  0BA1  300F               	movlw	15
 10220  0BA2  00F5               	movwf	??_LCD_Init+1
 10221  0BA3  30F4               	movlw	244
 10222  0BA4  00F4               	movwf	??_LCD_Init
 10223  0BA5                     u3827:	
 10224  0BA5  0BF4               	decfsz	??_LCD_Init,f
 10225  0BA6  2BA5               	goto	u3827
 10226  0BA7  0BF5               	decfsz	??_LCD_Init+1,f
 10227  0BA8  2BA5               	goto	u3827
 10228  0BA9  0BF6               	decfsz	??_LCD_Init+2,f
 10229  0BAA  2BA5               	goto	u3827
 10230                           
 10231                           ;lcd.c: 160: LCD_Cmd(0x03);
 10232  0BAB  3003               	movlw	3
 10233  0BAC  3196  26AB  318B   	fcall	_LCD_Cmd
 10234                           
 10235                           ;lcd.c: 162: _delay((unsigned long)((10)*(32000000/4000.0)));
 10236  0BAF  3068               	movlw	104
 10237  0BB0  00F5               	movwf	??_LCD_Init+1
 10238  0BB1  30E4               	movlw	228
 10239  0BB2  00F4               	movwf	??_LCD_Init
 10240  0BB3                     u3837:	
 10241  0BB3  0BF4               	decfsz	??_LCD_Init,f
 10242  0BB4  2BB3               	goto	u3837
 10243  0BB5  0BF5               	decfsz	??_LCD_Init+1,f
 10244  0BB6  2BB3               	goto	u3837
 10245  0BB7  0000               	nop
 10246                           
 10247                           ;lcd.c: 164: LCD_Cmd(0x03);
 10248  0BB8  3003               	movlw	3
 10249  0BB9  3196  26AB  318B   	fcall	_LCD_Cmd
 10250                           
 10251                           ;lcd.c: 166: _delay((unsigned long)((120)*(32000000/4000000.0)));
 10252  0BBC  3089               	movlw	137
 10253  0BBD  00F4               	movwf	??_LCD_Init
 10254  0BBE                     u3847:	
 10255  0BBE  3200               	nop2
 10256  0BBF  3200               	nop2
 10257  0BC0  0BF4               	decfsz	??_LCD_Init,f
 10258  0BC1  2BBE               	goto	u3847
 10259                           
 10260                           ;lcd.c: 168: LCD_Cmd(0x03);
 10261  0BC2  3003               	movlw	3
 10262  0BC3  3196  26AB  318B   	fcall	_LCD_Cmd
 10263                           
 10264                           ;lcd.c: 170: _delay((unsigned long)((120)*(32000000/4000000.0)));
 10265  0BC6  3089               	movlw	137
 10266  0BC7  00F4               	movwf	??_LCD_Init
 10267  0BC8                     u3857:	
 10268  0BC8  3200               	nop2
 10269  0BC9  3200               	nop2
 10270  0BCA  0BF4               	decfsz	??_LCD_Init,f
 10271  0BCB  2BC8               	goto	u3857
 10272                           
 10273                           ;lcd.c: 172: LCD_Cmd(0x02);
 10274  0BCC  3002               	movlw	2
 10275  0BCD  3196  26AB  318B   	fcall	_LCD_Cmd
 10276                           
 10277                           ;lcd.c: 174: _delay((unsigned long)((120)*(32000000/4000000.0)));
 10278  0BD0  3089               	movlw	137
 10279  0BD1  00F4               	movwf	??_LCD_Init
 10280  0BD2                     u3867:	
 10281  0BD2  3200               	nop2
 10282  0BD3  3200               	nop2
 10283  0BD4  0BF4               	decfsz	??_LCD_Init,f
 10284  0BD5  2BD2               	goto	u3867
 10285                           
 10286                           ;lcd.c: 176: LCD_Cmd(0x2);
 10287  0BD6  3002               	movlw	2
 10288  0BD7  3196  26AB  318B   	fcall	_LCD_Cmd
 10289                           
 10290                           ;lcd.c: 178: LCD_Cmd(0x8);
 10291  0BDA  3008               	movlw	8
 10292  0BDB  3196  26AB  318B   	fcall	_LCD_Cmd
 10293                           
 10294                           ;lcd.c: 180: _delay((unsigned long)((120)*(32000000/4000000.0)));
 10295  0BDE  3089               	movlw	137
 10296  0BDF  00F4               	movwf	??_LCD_Init
 10297  0BE0                     u3877:	
 10298  0BE0  3200               	nop2
 10299  0BE1  3200               	nop2
 10300  0BE2  0BF4               	decfsz	??_LCD_Init,f
 10301  0BE3  2BE0               	goto	u3877
 10302                           
 10303                           ;lcd.c: 182: LCD_Cmd(0x0);
 10304  0BE4  3000               	movlw	0
 10305  0BE5  3196  26AB  318B   	fcall	_LCD_Cmd
 10306                           
 10307                           ;lcd.c: 184: LCD_Cmd(0x8);
 10308  0BE8  3008               	movlw	8
 10309  0BE9  3196  26AB  318B   	fcall	_LCD_Cmd
 10310                           
 10311                           ;lcd.c: 186: _delay((unsigned long)((120)*(32000000/4000000.0)));
 10312  0BEC  3089               	movlw	137
 10313  0BED  00F4               	movwf	??_LCD_Init
 10314  0BEE                     u3887:	
 10315  0BEE  3200               	nop2
 10316  0BEF  3200               	nop2
 10317  0BF0  0BF4               	decfsz	??_LCD_Init,f
 10318  0BF1  2BEE               	goto	u3887
 10319                           
 10320                           ;lcd.c: 188: LCD_Cmd(0x0);
 10321  0BF2  3000               	movlw	0
 10322  0BF3  3196  26AB  318B   	fcall	_LCD_Cmd
 10323                           
 10324                           ;lcd.c: 190: LCD_Cmd(0x1);
 10325  0BF6  3001               	movlw	1
 10326  0BF7  3196  26AB  318B   	fcall	_LCD_Cmd
 10327                           
 10328                           ;lcd.c: 192: _delay((unsigned long)((5)*(32000000/4000.0)));
 10329  0BFA  3034               	movlw	52
 10330  0BFB  00F5               	movwf	??_LCD_Init+1
 10331  0BFC  30F1               	movlw	241
 10332  0BFD  00F4               	movwf	??_LCD_Init
 10333  0BFE                     u3897:	
 10334  0BFE  0BF4               	decfsz	??_LCD_Init,f
 10335  0BFF  2BFE               	goto	u3897
 10336  0C00  0BF5               	decfsz	??_LCD_Init+1,f
 10337  0C01  2BFE               	goto	u3897
 10338  0C02  3200               	nop2
 10339                           
 10340                           ;lcd.c: 194: LCD_Cmd(0x0);
 10341  0C03  3000               	movlw	0
 10342  0C04  3196  26AB  318B   	fcall	_LCD_Cmd
 10343                           
 10344                           ;lcd.c: 196: LCD_Cmd(0x6);
 10345  0C07  3006               	movlw	6
 10346  0C08  3196  26AB  318B   	fcall	_LCD_Cmd
 10347                           
 10348                           ;lcd.c: 198: _delay((unsigned long)((120)*(32000000/4000000.0)));
 10349  0C0B  3089               	movlw	137
 10350  0C0C  00F4               	movwf	??_LCD_Init
 10351  0C0D                     u3907:	
 10352  0C0D  3200               	nop2
 10353  0C0E  3200               	nop2
 10354  0C0F  0BF4               	decfsz	??_LCD_Init,f
 10355  0C10  2C0D               	goto	u3907
 10356                           
 10357                           ;lcd.c: 200: LCD_Cmd(0x0);
 10358  0C11  3000               	movlw	0
 10359  0C12  3196  26AB  318B   	fcall	_LCD_Cmd
 10360                           
 10361                           ;lcd.c: 202: LCD_Cmd(0xc|style);
 10362  0C15  0877               	movf	LCD_Init@style,w
 10363  0C16  380C               	iorlw	12
 10364  0C17  3196  26AB  318B   	fcall	_LCD_Cmd
 10365                           
 10366                           ;lcd.c: 204: _delay((unsigned long)((120)*(32000000/4000000.0)));
 10367  0C1A  3089               	movlw	137
 10368  0C1B  00F4               	movwf	??_LCD_Init
 10369  0C1C                     u3917:	
 10370  0C1C  3200               	nop2
 10371  0C1D  3200               	nop2
 10372  0C1E  0BF4               	decfsz	??_LCD_Init,f
 10373  0C1F  2C1C               	goto	u3917
 10374  0C20  0008               	return
 10375  0C21                     __end_of_LCD_Init:	
 10376                           
 10377                           	psect	text24
 10378  164A                     __ptext24:	
 10379 ;; *************** function _LCD_Clear *****************
 10380 ;; Defined at:
 10381 ;;		line 75 in file "lcd.c"
 10382 ;; Parameters:    Size  Location     Type
 10383 ;;		None
 10384 ;; Auto vars:     Size  Location     Type
 10385 ;;		None
 10386 ;; Return value:  Size  Location     Type
 10387 ;;                  1    wreg      void 
 10388 ;; Registers used:
 10389 ;;		wreg, status,2, status,0, pclath, cstack
 10390 ;; Tracked objects:
 10391 ;;		On entry : 0/0
 10392 ;;		On exit  : 0/0
 10393 ;;		Unchanged: 0/0
 10394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10398 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10399 ;;Total ram usage:        0 bytes
 10400 ;; Hardware stack levels used:    1
 10401 ;; Hardware stack levels required when called:    2
 10402 ;; This function calls:
 10403 ;;		_LCD_Cmd
 10404 ;; This function is called by:
 10405 ;;		_SYSTEM_Initialize
 10406 ;;		_main
 10407 ;; This function uses a non-reentrant model
 10408 ;;
 10409                           
 10410                           
 10411                           ;psect for function _LCD_Clear
 10412  164A                     _LCD_Clear:	
 10413                           
 10414                           ;lcd.c: 77: LCD_Cmd(0);
 10415                           
 10416                           ;incstack = 0
 10417                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
 10418  164A  3000               	movlw	0
 10419  164B  3196  26AB  3196   	fcall	_LCD_Cmd
 10420                           
 10421                           ;lcd.c: 78: LCD_Cmd(1);
 10422  164E  3001               	movlw	1
 10423  164F  3196  26AB         	fcall	_LCD_Cmd
 10424  1651  0008               	return
 10425  1652                     __end_of_LCD_Clear:	
 10426                           
 10427                           	psect	text25
 10428  177A                     __ptext25:	
 10429 ;; *************** function _InitCustomChars *****************
 10430 ;; Defined at:
 10431 ;;		line 29 in file "lcd.c"
 10432 ;; Parameters:    Size  Location     Type
 10433 ;;		None
 10434 ;; Auto vars:     Size  Location     Type
 10435 ;;  i               1    6[COMMON] unsigned char 
 10436 ;; Return value:  Size  Location     Type
 10437 ;;                  1    wreg      void 
 10438 ;; Registers used:
 10439 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10440 ;; Tracked objects:
 10441 ;;		On entry : 0/0
 10442 ;;		On exit  : 0/0
 10443 ;;		Unchanged: 0/0
 10444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10446 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10447 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10448 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10449 ;;Total ram usage:        2 bytes
 10450 ;; Hardware stack levels used:    1
 10451 ;; Hardware stack levels required when called:    2
 10452 ;; This function calls:
 10453 ;;		_LCD_Cmd
 10454 ;;		_LCD_Write_Char
 10455 ;; This function is called by:
 10456 ;;		_SYSTEM_Initialize
 10457 ;; This function uses a non-reentrant model
 10458 ;;
 10459                           
 10460                           
 10461                           ;psect for function _InitCustomChars
 10462  177A                     _InitCustomChars:	
 10463                           
 10464                           ;lcd.c: 31: uint8_t i;
 10465                           ;lcd.c: 32: LCD_Cmd(0x04);
 10466                           
 10467                           ;incstack = 0
 10468                           ; Regs used in _InitCustomChars: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10469  177A  3004               	movlw	4
 10470  177B  3196  26AB  3197   	fcall	_LCD_Cmd
 10471                           
 10472                           ;lcd.c: 33: LCD_Cmd(0x00);
 10473  177E  3000               	movlw	0
 10474  177F  3196  26AB  3197   	fcall	_LCD_Cmd
 10475                           
 10476                           ;lcd.c: 34: for (i = 0; i < sizeof(__cgram) ; i++)
 10477  1782  01F6               	clrf	InitCustomChars@i
 10478  1783  3010               	movlw	16
 10479  1784  0276               	subwf	InitCustomChars@i,w
 10480  1785  1803               	btfsc	3,0
 10481  1786  2F98               	goto	l2303
 10482  1787                     l2297:	
 10483                           
 10484                           ;lcd.c: 35: LCD_Write_Char(__cgram[i]);
 10485  1787  0876               	movf	InitCustomChars@i,w
 10486  1788  3E20               	addlw	(low (___cgram| (0+256)))& (0+255)
 10487  1789  0086               	movwf	6
 10488  178A  3001               	movlw	1	; select bank2/3
 10489  178B  0087               	movwf	7
 10490  178C  0801               	movf	1,w
 10491  178D  3197  27A0  3197   	fcall	_LCD_Write_Char
 10492  1790  3001               	movlw	1
 10493  1791  00F5               	movwf	??_InitCustomChars
 10494  1792  0875               	movf	??_InitCustomChars,w
 10495  1793  07F6               	addwf	InitCustomChars@i,f
 10496  1794  3010               	movlw	16
 10497  1795  0276               	subwf	InitCustomChars@i,w
 10498  1796  1C03               	skipc
 10499  1797  2F87               	goto	l2297
 10500  1798                     l2303:	
 10501                           
 10502                           ;lcd.c: 36: LCD_Cmd(0);
 10503  1798  3000               	movlw	0
 10504  1799  3196  26AB  3197   	fcall	_LCD_Cmd
 10505                           
 10506                           ;lcd.c: 37: LCD_Cmd(2);
 10507  179C  3002               	movlw	2
 10508  179D  3196  26AB         	fcall	_LCD_Cmd
 10509  179F  0008               	return
 10510  17A0                     __end_of_InitCustomChars:	
 10511                           
 10512                           	psect	text26
 10513  1707                     __ptext26:	
 10514 ;; *************** function _ADCC_Initialize *****************
 10515 ;; Defined at:
 10516 ;;		line 16 in file "adcc.c"
 10517 ;; Parameters:    Size  Location     Type
 10518 ;;		None
 10519 ;; Auto vars:     Size  Location     Type
 10520 ;;		None
 10521 ;; Return value:  Size  Location     Type
 10522 ;;                  1    wreg      void 
 10523 ;; Registers used:
 10524 ;;		wreg, status,2
 10525 ;; Tracked objects:
 10526 ;;		On entry : 0/0
 10527 ;;		On exit  : 0/0
 10528 ;;		Unchanged: 0/0
 10529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10533 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10534 ;;Total ram usage:        0 bytes
 10535 ;; Hardware stack levels used:    1
 10536 ;; This function calls:
 10537 ;;		Nothing
 10538 ;; This function is called by:
 10539 ;;		_SYSTEM_Initialize
 10540 ;; This function uses a non-reentrant model
 10541 ;;
 10542                           
 10543                           
 10544                           ;psect for function _ADCC_Initialize
 10545  1707                     _ADCC_Initialize:	
 10546                           
 10547                           ;adcc.c: 19: ADCON1 = 0x00;
 10548                           
 10549                           ;incstack = 0
 10550                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
 10551  1707  0021               	movlb	1	; select bank1
 10552  1708  0194               	clrf	20	;volatile
 10553                           
 10554                           ;adcc.c: 21: ADCON2 = 0x00;
 10555  1709  0195               	clrf	21	;volatile
 10556                           
 10557                           ;adcc.c: 23: ADCON3 = 0x00;
 10558  170A  0196               	clrf	22	;volatile
 10559                           
 10560                           ;adcc.c: 25: ADACT = 0x00;
 10561  170B  0199               	clrf	25	;volatile
 10562                           
 10563                           ;adcc.c: 27: ADSTAT = 0x00;
 10564  170C  0197               	clrf	23	;volatile
 10565                           
 10566                           ;adcc.c: 29: ADCLK = 0x3F;
 10567  170D  303F               	movlw	63
 10568  170E  0098               	movwf	24	;volatile
 10569                           
 10570                           ;adcc.c: 33: ADREF = 0x00;
 10571  170F  019A               	clrf	26	;volatile
 10572                           
 10573                           ;adcc.c: 35: ADCAP = 0x00;
 10574  1710  019B               	clrf	27	;volatile
 10575                           
 10576                           ;adcc.c: 38: ADPRE = 0x07;
 10577  1711  3007               	movlw	7
 10578  1712  009C               	movwf	28	;volatile
 10579                           
 10580                           ;adcc.c: 40: ADACQ = 0x00;
 10581  1713  019D               	clrf	29	;volatile
 10582                           
 10583                           ;adcc.c: 42: ADPCH = 0x00;
 10584  1714  019E               	clrf	30	;volatile
 10585                           
 10586                           ;adcc.c: 44: ADRPT = 0x00;
 10587  1715  0022               	movlb	2	; select bank2
 10588  1716  018D               	clrf	13	;volatile
 10589                           
 10590                           ;adcc.c: 46: ADLTHL = 0x00;
 10591  1717  018E               	clrf	14	;volatile
 10592                           
 10593                           ;adcc.c: 48: ADLTHH = 0x00;
 10594  1718  018F               	clrf	15	;volatile
 10595                           
 10596                           ;adcc.c: 50: ADUTHL = 0x00;
 10597  1719  0190               	clrf	16	;volatile
 10598                           
 10599                           ;adcc.c: 52: ADUTHH = 0x00;
 10600  171A  0191               	clrf	17	;volatile
 10601                           
 10602                           ;adcc.c: 54: ADSTPTL = 0x00;
 10603  171B  0192               	clrf	18	;volatile
 10604                           
 10605                           ;adcc.c: 56: ADSTPTH = 0x00;
 10606  171C  0193               	clrf	19	;volatile
 10607                           
 10608                           ;adcc.c: 59: ADCON0 = 0x84;
 10609  171D  3084               	movlw	132
 10610  171E  0021               	movlb	1	; select bank1
 10611  171F  0093               	movwf	19	;volatile
 10612  1720  0008               	return
 10613  1721                     __end_of_ADCC_Initialize:	
 10614                           
 10615                           	psect	text27
 10616  16BF                     __ptext27:	
 10617 ;; *************** function _PWM6_LoadDutyValue *****************
 10618 ;; Defined at:
 10619 ;;		line 14 in file "pwm6.c"
 10620 ;; Parameters:    Size  Location     Type
 10621 ;;  dutyCycle       2    0[COMMON] unsigned int 
 10622 ;; Auto vars:     Size  Location     Type
 10623 ;;		None
 10624 ;; Return value:  Size  Location     Type
 10625 ;;                  1    wreg      void 
 10626 ;; Registers used:
 10627 ;;		wreg, status,2, status,0
 10628 ;; Tracked objects:
 10629 ;;		On entry : 0/0
 10630 ;;		On exit  : 0/0
 10631 ;;		Unchanged: 0/0
 10632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10633 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10635 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10636 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10637 ;;Total ram usage:        4 bytes
 10638 ;; Hardware stack levels used:    1
 10639 ;; This function calls:
 10640 ;;		Nothing
 10641 ;; This function is called by:
 10642 ;;		_main
 10643 ;; This function uses a non-reentrant model
 10644 ;;
 10645                           
 10646                           
 10647                           ;psect for function _PWM6_LoadDutyValue
 10648  16BF                     _PWM6_LoadDutyValue:	
 10649                           
 10650                           ;pwm6.c: 16: PWM6DCH = (dutyCycle & 0x03FC)>>2;
 10651                           
 10652                           ;incstack = 0
 10653                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
 10654  16BF  0871               	movf	PWM6_LoadDutyValue@dutyCycle+1,w
 10655  16C0  00F3               	movwf	??_PWM6_LoadDutyValue+1
 10656  16C1  0870               	movf	PWM6_LoadDutyValue@dutyCycle,w
 10657  16C2  00F2               	movwf	??_PWM6_LoadDutyValue
 10658  16C3  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
 10659  16C4  0CF2               	rrf	??_PWM6_LoadDutyValue,f
 10660  16C5  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
 10661  16C6  0CF2               	rrf	??_PWM6_LoadDutyValue,f
 10662  16C7  0872               	movf	??_PWM6_LoadDutyValue,w
 10663  16C8  0027               	movlb	7	; select bank7
 10664  16C9  008D               	movwf	13	;volatile
 10665                           
 10666                           ;pwm6.c: 18: PWM6DCL = (dutyCycle & 0x0003)<<6;
 10667  16CA  0870               	movf	PWM6_LoadDutyValue@dutyCycle,w
 10668  16CB  3903               	andlw	3
 10669  16CC  00F2               	movwf	??_PWM6_LoadDutyValue
 10670  16CD  3005               	movlw	5
 10671  16CE                     u3035:	
 10672  16CE  35F2               	lslf	??_PWM6_LoadDutyValue,f
 10673  16CF  3EFF               	addlw	-1
 10674  16D0  1D03               	skipz
 10675  16D1  2ECE               	goto	u3035
 10676  16D2  3572               	lslf	??_PWM6_LoadDutyValue,w
 10677  16D3  008C               	movwf	12	;volatile
 10678  16D4  0008               	return
 10679  16D5                     __end_of_PWM6_LoadDutyValue:	
 10680                           
 10681                           	psect	text28
 10682  16ED                     __ptext28:	
 10683 ;; *************** function _LCD_Write_String *****************
 10684 ;; Defined at:
 10685 ;;		line 239 in file "lcd.c"
 10686 ;; Parameters:    Size  Location     Type
 10687 ;;  a               2    5[COMMON] PTR const unsigned char 
 10688 ;;		 -> STR_32(5), STR_31(4), STR_30(6), STR_29(3), 
 10689 ;;		 -> STR_28(11), STR_27(11), STR_26(2), STR_25(2), 
 10690 ;;		 -> STR_24(2), STR_23(2), STR_22(2), STR_21(2), 
 10691 ;;		 -> STR_20(2), STR_19(2), STR_18(2), STR_17(2), 
 10692 ;;		 -> STR_16(2), STR_15(2), STR_14(2), STR_13(2), 
 10693 ;;		 -> STR_12(2), STR_11(2), STR_10(2), STR_9(2), 
 10694 ;;		 -> STR_8(2), STR_7(2), STR_6(2), STR_5(2), 
 10695 ;;		 -> STR_4(2), STR_3(2), STR_2(2), STR_1(2), 
 10696 ;; Auto vars:     Size  Location     Type
 10697 ;;  i               2    8[COMMON] int 
 10698 ;; Return value:  Size  Location     Type
 10699 ;;                  1    wreg      void 
 10700 ;; Registers used:
 10701 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10702 ;; Tracked objects:
 10703 ;;		On entry : 0/0
 10704 ;;		On exit  : 0/0
 10705 ;;		Unchanged: 0/0
 10706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10707 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10708 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10709 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10710 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10711 ;;Total ram usage:        5 bytes
 10712 ;; Hardware stack levels used:    1
 10713 ;; Hardware stack levels required when called:    2
 10714 ;; This function calls:
 10715 ;;		_LCD_Write_Char
 10716 ;; This function is called by:
 10717 ;;		_main
 10718 ;; This function uses a non-reentrant model
 10719 ;;
 10720                           
 10721                           
 10722                           ;psect for function _LCD_Write_String
 10723  16ED                     _LCD_Write_String:	
 10724                           
 10725                           ;lcd.c: 241: int i;
 10726                           ;lcd.c: 242: for(i=0;a[i]!='\0';i++)
 10727                           
 10728                           ;incstack = 0
 10729                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10730  16ED  01F8               	clrf	LCD_Write_String@i
 10731  16EE  01F9               	clrf	LCD_Write_String@i+1
 10732  16EF                     l2645:	
 10733  16EF  0875               	movf	LCD_Write_String@a,w
 10734  16F0  0778               	addwf	LCD_Write_String@i,w
 10735  16F1  0084               	movwf	4
 10736  16F2  0876               	movf	LCD_Write_String@a+1,w
 10737  16F3  3D79               	addwfc	LCD_Write_String@i+1,w
 10738  16F4  0085               	movwf	5
 10739  16F5  0012               	moviw fsr0++
 10740  16F6  1903               	btfsc	3,2
 10741  16F7  0008               	return
 10742                           
 10743                           ;lcd.c: 243: LCD_Write_Char(a[i]);
 10744  16F8  0875               	movf	LCD_Write_String@a,w
 10745  16F9  0778               	addwf	LCD_Write_String@i,w
 10746  16FA  0084               	movwf	4
 10747  16FB  0876               	movf	LCD_Write_String@a+1,w
 10748  16FC  3D79               	addwfc	LCD_Write_String@i+1,w
 10749  16FD  0085               	movwf	5
 10750  16FE  0800               	movf	0,w	;code access
 10751  16FF  3197  27A0  3196   	fcall	_LCD_Write_Char
 10752  1702  3001               	movlw	1
 10753  1703  07F8               	addwf	LCD_Write_String@i,f
 10754  1704  3000               	movlw	0
 10755  1705  3DF9               	addwfc	LCD_Write_String@i+1,f
 10756  1706  2EEF               	goto	l2645
 10757  1707                     __end_of_LCD_Write_String:	
 10758                           
 10759                           	psect	text29
 10760  0007                     __ptext29:	
 10761 ;; *************** function _LCD_Write_Int *****************
 10762 ;; Defined at:
 10763 ;;		line 246 in file "lcd.c"
 10764 ;; Parameters:    Size  Location     Type
 10765 ;;  value           2    0[BANK0 ] int 
 10766 ;;  fieldLength     1    2[BANK0 ] char 
 10767 ;;  numPlaces       1    3[BANK0 ] char 
 10768 ;;  sign            1    4[BANK0 ] char 
 10769 ;; Auto vars:     Size  Location     Type
 10770 ;;  str             5   10[BANK0 ] unsigned char [5]
 10771 ;;  i               2   17[BANK0 ] int 
 10772 ;;  j               2   15[BANK0 ] int 
 10773 ;; Return value:  Size  Location     Type
 10774 ;;                  1    wreg      void 
 10775 ;; Registers used:
 10776 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10777 ;; Tracked objects:
 10778 ;;		On entry : 0/0
 10779 ;;		On exit  : 0/0
 10780 ;;		Unchanged: 0/0
 10781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10782 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10783 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10784 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10785 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10786 ;;Total ram usage:       19 bytes
 10787 ;; Hardware stack levels used:    1
 10788 ;; Hardware stack levels required when called:    2
 10789 ;; This function calls:
 10790 ;;		_LCD_Write_Char
 10791 ;;		___awdiv
 10792 ;;		___awmod
 10793 ;; This function is called by:
 10794 ;;		_main
 10795 ;; This function uses a non-reentrant model
 10796 ;;
 10797                           
 10798                           
 10799                           ;psect for function _LCD_Write_Int
 10800  0007                     _LCD_Write_Int:	
 10801                           
 10802                           ;lcd.c: 248: char str[5]={0,0,0,0,0};
 10803                           
 10804                           ;incstack = 0
 10805                           ; Regs used in _LCD_Write_Int: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10806  0007  30B8               	movlw	low LCD_Write_Int@F13687
 10807  0008  0086               	movwf	6
 10808  0009  3000               	movlw	high LCD_Write_Int@F13687
 10809  000A  0087               	movwf	7
 10810  000B  302A               	movlw	low LCD_Write_Int@str
 10811  000C  0084               	movwf	4
 10812  000D  3000               	movlw	high LCD_Write_Int@str
 10813  000E  0085               	movwf	5
 10814  000F  3005               	movlw	5
 10815  0010  0020               	movlb	0	; select bank0
 10816  0011  00A5               	movwf	??_LCD_Write_Int
 10817  0012                     u2940:	
 10818  0012  0016               	moviw fsr1++
 10819  0013  001A               	movwi fsr0++
 10820  0014  0BA5               	decfsz	??_LCD_Write_Int,f
 10821  0015  2812               	goto	u2940
 10822                           
 10823                           ;lcd.c: 249: int i=4,j=0;
 10824  0016  3004               	movlw	4
 10825  0017  00B1               	movwf	LCD_Write_Int@i
 10826  0018  3000               	movlw	0
 10827  0019  00B2               	movwf	LCD_Write_Int@i+1
 10828  001A  01AF               	clrf	LCD_Write_Int@j
 10829  001B  01B0               	clrf	LCD_Write_Int@j+1
 10830                           
 10831                           ;lcd.c: 251: if(value<0)
 10832  001C  1FA1               	btfss	LCD_Write_Int@value+1,7
 10833  001D  2829               	goto	l2659
 10834                           
 10835                           ;lcd.c: 252: {
 10836                           ;lcd.c: 253: LCD_Write_Char('-');
 10837  001E  302D               	movlw	45
 10838  001F  3197  27A0  3180   	fcall	_LCD_Write_Char
 10839                           
 10840                           ;lcd.c: 254: value=value*-1;
 10841  0022  0020               	movlb	0	; select bank0
 10842  0023  09A0               	comf	LCD_Write_Int@value,f
 10843  0024  09A1               	comf	LCD_Write_Int@value+1,f
 10844  0025  0AA0               	incf	LCD_Write_Int@value,f
 10845  0026  1903               	skipnz
 10846  0027  0AA1               	incf	LCD_Write_Int@value+1,f
 10847                           
 10848                           ;lcd.c: 255: }
 10849  0028  2830               	goto	l2669
 10850  0029                     l2659:	
 10851                           
 10852                           ;lcd.c: 257: else
 10853                           ;lcd.c: 258: {
 10854                           ;lcd.c: 259: if(sign == 1)
 10855  0029  0324               	decf	LCD_Write_Int@sign,w
 10856  002A  1D03               	btfss	3,2
 10857  002B  2830               	goto	l2669
 10858                           
 10859                           ;lcd.c: 260: {
 10860                           ;lcd.c: 261: LCD_Write_Char('+');
 10861  002C  302B               	movlw	43
 10862  002D  3197  27A0  3180   	fcall	_LCD_Write_Char
 10863  0030                     l2669:	
 10864                           ;lcd.c: 262: }
 10865                           ;lcd.c: 263: }
 10866                           ;lcd.c: 265: while(value)
 10867                           
 10868  0030  0020               	movlb	0	; select bank0
 10869  0031  0820               	movf	LCD_Write_Int@value,w
 10870  0032  0421               	iorwf	LCD_Write_Int@value+1,w
 10871  0033  1903               	btfsc	3,2
 10872  0034  285F               	goto	l2671
 10873                           
 10874                           ;lcd.c: 266: {
 10875                           ;lcd.c: 267: str[i]=value%10;
 10876  0035  300A               	movlw	10
 10877  0036  00F0               	movwf	___awmod@divisor
 10878  0037  3000               	movlw	0
 10879  0038  00F1               	movwf	___awmod@divisor+1
 10880  0039  0020               	movlb	0	; select bank0
 10881  003A  0821               	movf	LCD_Write_Int@value+1,w
 10882  003B  00F3               	movwf	___awmod@dividend+1
 10883  003C  0820               	movf	LCD_Write_Int@value,w
 10884  003D  00F2               	movwf	___awmod@dividend
 10885  003E  3189  2138  3180   	fcall	___awmod
 10886  0041  0870               	movf	?___awmod,w
 10887  0042  0020               	movlb	0	; select bank0
 10888  0043  00A5               	movwf	??_LCD_Write_Int
 10889  0044  0831               	movf	LCD_Write_Int@i,w
 10890  0045  3E2A               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
 10891  0046  0086               	movwf	6
 10892  0047  0187               	clrf	7
 10893  0048  0825               	movf	??_LCD_Write_Int,w
 10894  0049  0081               	movwf	1
 10895                           
 10896                           ;lcd.c: 268: value=value/10;
 10897  004A  300A               	movlw	10
 10898  004B  00F0               	movwf	___awdiv@divisor
 10899  004C  3000               	movlw	0
 10900  004D  00F1               	movwf	___awdiv@divisor+1
 10901  004E  0821               	movf	LCD_Write_Int@value+1,w
 10902  004F  00F3               	movwf	___awdiv@dividend+1
 10903  0050  0820               	movf	LCD_Write_Int@value,w
 10904  0051  00F2               	movwf	___awdiv@dividend
 10905  0052  3189  217D  3180   	fcall	___awdiv
 10906  0055  0871               	movf	?___awdiv+1,w
 10907  0056  0020               	movlb	0	; select bank0
 10908  0057  00A1               	movwf	LCD_Write_Int@value+1
 10909  0058  0870               	movf	?___awdiv,w
 10910  0059  00A0               	movwf	LCD_Write_Int@value
 10911                           
 10912                           ;lcd.c: 269: i--;
 10913  005A  30FF               	movlw	255
 10914  005B  07B1               	addwf	LCD_Write_Int@i,f
 10915  005C  30FF               	movlw	255
 10916  005D  3DB2               	addwfc	LCD_Write_Int@i+1,f
 10917  005E  2830               	goto	l2669
 10918  005F                     l2671:	
 10919                           
 10920                           ;lcd.c: 270: }
 10921                           ;lcd.c: 271: if(fieldLength==-1)
 10922  005F  0A22               	incf	LCD_Write_Int@fieldLength,w
 10923  0060  1903               	btfsc	3,2
 10924  0061  2867               	goto	l2677
 10925  0062  286F               	goto	l2679
 10926  0063                     l2675:	
 10927                           ;lcd.c: 272: {
 10928                           ;lcd.c: 273: while(str[j]==0)
 10929                           
 10930                           
 10931                           ;lcd.c: 274: {
 10932                           ;lcd.c: 275: j++;
 10933  0063  3001               	movlw	1
 10934  0064  07AF               	addwf	LCD_Write_Int@j,f
 10935  0065  3000               	movlw	0
 10936  0066  3DB0               	addwfc	LCD_Write_Int@j+1,f
 10937  0067                     l2677:	
 10938  0067  082F               	movf	LCD_Write_Int@j,w
 10939  0068  3E2A               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
 10940  0069  0086               	movwf	6
 10941  006A  0187               	clrf	7
 10942  006B  0801               	movf	1,w
 10943  006C  1D03               	btfss	3,2
 10944  006D  287F               	goto	l2681
 10945  006E  2863               	goto	l2675
 10946  006F                     l2679:	
 10947                           ;lcd.c: 276: }
 10948                           ;lcd.c: 277: }
 10949                           
 10950                           
 10951                           ;lcd.c: 278: else
 10952                           ;lcd.c: 279: {
 10953                           ;lcd.c: 280: j=5-fieldLength;
 10954  006F  0822               	movf	LCD_Write_Int@fieldLength,w
 10955  0070  00A5               	movwf	??_LCD_Write_Int
 10956  0071  01A6               	clrf	??_LCD_Write_Int+1
 10957  0072  1BA5               	btfsc	??_LCD_Write_Int,7
 10958  0073  03A6               	decf	??_LCD_Write_Int+1,f
 10959  0074  09A5               	comf	??_LCD_Write_Int,f
 10960  0075  09A6               	comf	??_LCD_Write_Int+1,f
 10961  0076  0AA5               	incf	??_LCD_Write_Int,f
 10962  0077  1903               	skipnz
 10963  0078  0AA6               	incf	??_LCD_Write_Int+1,f
 10964  0079  0825               	movf	??_LCD_Write_Int,w
 10965  007A  3E05               	addlw	5
 10966  007B  00AF               	movwf	LCD_Write_Int@j
 10967  007C  3000               	movlw	0
 10968  007D  3D26               	addwfc	??_LCD_Write_Int+1,w
 10969  007E  00B0               	movwf	LCD_Write_Int@j+1
 10970  007F                     l2681:	
 10971                           
 10972                           ;lcd.c: 281: }
 10973                           ;lcd.c: 283: for(i=j;i<(5-numPlaces);i++)
 10974  007F  0830               	movf	LCD_Write_Int@j+1,w
 10975  0080  00B2               	movwf	LCD_Write_Int@i+1
 10976  0081  082F               	movf	LCD_Write_Int@j,w
 10977  0082  00B1               	movwf	LCD_Write_Int@i
 10978  0083                     l2687:	
 10979  0083  0823               	movf	LCD_Write_Int@numPlaces,w
 10980  0084  00A5               	movwf	??_LCD_Write_Int
 10981  0085  01A6               	clrf	??_LCD_Write_Int+1
 10982  0086  1BA5               	btfsc	??_LCD_Write_Int,7
 10983  0087  03A6               	decf	??_LCD_Write_Int+1,f
 10984  0088  09A5               	comf	??_LCD_Write_Int,f
 10985  0089  09A6               	comf	??_LCD_Write_Int+1,f
 10986  008A  0AA5               	incf	??_LCD_Write_Int,f
 10987  008B  1903               	skipnz
 10988  008C  0AA6               	incf	??_LCD_Write_Int+1,f
 10989  008D  0825               	movf	??_LCD_Write_Int,w
 10990  008E  3E05               	addlw	5
 10991  008F  00A7               	movwf	??_LCD_Write_Int+2
 10992  0090  3000               	movlw	0
 10993  0091  3D26               	addwfc	??_LCD_Write_Int+1,w
 10994  0092  00A8               	movwf	??_LCD_Write_Int+3
 10995  0093  0832               	movf	LCD_Write_Int@i+1,w
 10996  0094  3A80               	xorlw	128
 10997  0095  00A9               	movwf	??_LCD_Write_Int+4
 10998  0096  0828               	movf	??_LCD_Write_Int+3,w
 10999  0097  3A80               	xorlw	128
 11000  0098  0229               	subwf	??_LCD_Write_Int+4,w
 11001  0099  1D03               	skipz
 11002  009A  289D               	goto	u3005
 11003  009B  0827               	movf	??_LCD_Write_Int+2,w
 11004  009C  0231               	subwf	LCD_Write_Int@i,w
 11005  009D                     u3005:	
 11006  009D  1803               	btfsc	3,0
 11007  009E  28AF               	goto	l2689
 11008                           
 11009                           ;lcd.c: 284: {
 11010                           ;lcd.c: 285: LCD_Write_Char(48+str[i]);
 11011  009F  0020               	movlb	0	; select bank0
 11012  00A0  0831               	movf	LCD_Write_Int@i,w
 11013  00A1  3E2A               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
 11014  00A2  0086               	movwf	6
 11015  00A3  0187               	clrf	7
 11016  00A4  0801               	movf	1,w
 11017  00A5  3E30               	addlw	48
 11018  00A6  3197  27A0  3180   	fcall	_LCD_Write_Char
 11019  00A9  3001               	movlw	1
 11020  00AA  0020               	movlb	0	; select bank0
 11021  00AB  07B1               	addwf	LCD_Write_Int@i,f
 11022  00AC  3000               	movlw	0
 11023  00AD  3DB2               	addwfc	LCD_Write_Int@i+1,f
 11024  00AE  2883               	goto	l2687
 11025  00AF                     l2689:	
 11026                           
 11027                           ;lcd.c: 286: }
 11028                           ;lcd.c: 288: if(numPlaces == 1)
 11029  00AF  0020               	movlb	0	; select bank0
 11030  00B0  0323               	decf	LCD_Write_Int@numPlaces,w
 11031  00B1  1D03               	btfss	3,2
 11032  00B2  28BD               	goto	l2693
 11033                           
 11034                           ;lcd.c: 289: {
 11035                           ;lcd.c: 290: LCD_Write_Char(46);
 11036  00B3  302E               	movlw	46
 11037  00B4  3197  27A0  3180   	fcall	_LCD_Write_Char
 11038                           
 11039                           ;lcd.c: 291: LCD_Write_Char(48+str[4]);
 11040  00B7  0020               	movlb	0	; select bank0
 11041  00B8  082E               	movf	LCD_Write_Int@str+4,w
 11042  00B9  3E30               	addlw	48
 11043  00BA  3197  27A0  3180   	fcall	_LCD_Write_Char
 11044  00BD                     l2693:	
 11045                           
 11046                           ;lcd.c: 292: }
 11047                           ;lcd.c: 294: if(numPlaces == 2)
 11048  00BD  3002               	movlw	2
 11049  00BE  0020               	movlb	0	; select bank0
 11050  00BF  0623               	xorwf	LCD_Write_Int@numPlaces,w
 11051  00C0  1D03               	btfss	3,2
 11052  00C1  0008               	return
 11053                           
 11054                           ;lcd.c: 295: {
 11055                           ;lcd.c: 296: LCD_Write_Char(46);
 11056  00C2  302E               	movlw	46
 11057  00C3  3197  27A0  3180   	fcall	_LCD_Write_Char
 11058                           
 11059                           ;lcd.c: 297: LCD_Write_Char(48+str[3]);
 11060  00C6  0020               	movlb	0	; select bank0
 11061  00C7  082D               	movf	LCD_Write_Int@str+3,w
 11062  00C8  3E30               	addlw	48
 11063  00C9  3197  27A0  3180   	fcall	_LCD_Write_Char
 11064                           
 11065                           ;lcd.c: 298: LCD_Write_Char(48+str[4]);
 11066  00CC  0020               	movlb	0	; select bank0
 11067  00CD  082E               	movf	LCD_Write_Int@str+4,w
 11068  00CE  3E30               	addlw	48
 11069  00CF  3197  27A0         	fcall	_LCD_Write_Char
 11070  00D1  0008               	return
 11071  00D2                     __end_of_LCD_Write_Int:	
 11072                           
 11073                           	psect	text30
 11074  0938                     __ptext30:	
 11075 ;; *************** function ___awmod *****************
 11076 ;; Defined at:
 11077 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c"
 11078 ;; Parameters:    Size  Location     Type
 11079 ;;  divisor         2    0[COMMON] int 
 11080 ;;  dividend        2    2[COMMON] int 
 11081 ;; Auto vars:     Size  Location     Type
 11082 ;;  sign            1    6[COMMON] unsigned char 
 11083 ;;  counter         1    5[COMMON] unsigned char 
 11084 ;; Return value:  Size  Location     Type
 11085 ;;                  2    0[COMMON] int 
 11086 ;; Registers used:
 11087 ;;		wreg, status,2, status,0
 11088 ;; Tracked objects:
 11089 ;;		On entry : 0/0
 11090 ;;		On exit  : 0/0
 11091 ;;		Unchanged: 0/0
 11092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11093 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11094 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11095 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11096 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11097 ;;Total ram usage:        7 bytes
 11098 ;; Hardware stack levels used:    1
 11099 ;; This function calls:
 11100 ;;		Nothing
 11101 ;; This function is called by:
 11102 ;;		_LCD_Write_Int
 11103 ;; This function uses a non-reentrant model
 11104 ;;
 11105                           
 11106                           
 11107                           ;psect for function ___awmod
 11108  0938                     ___awmod:	
 11109                           
 11110                           ;incstack = 0
 11111                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 11112  0938  01F6               	clrf	___awmod@sign
 11113  0939  1FF3               	btfss	___awmod@dividend+1,7
 11114  093A  2942               	goto	l2519
 11115  093B  09F2               	comf	___awmod@dividend,f
 11116  093C  09F3               	comf	___awmod@dividend+1,f
 11117  093D  0AF2               	incf	___awmod@dividend,f
 11118  093E  1903               	skipnz
 11119  093F  0AF3               	incf	___awmod@dividend+1,f
 11120  0940  01F6               	clrf	___awmod@sign
 11121  0941  0AF6               	incf	___awmod@sign,f
 11122  0942                     l2519:	
 11123  0942  1FF1               	btfss	___awmod@divisor+1,7
 11124  0943  2949               	goto	l2523
 11125  0944  09F0               	comf	___awmod@divisor,f
 11126  0945  09F1               	comf	___awmod@divisor+1,f
 11127  0946  0AF0               	incf	___awmod@divisor,f
 11128  0947  1903               	skipnz
 11129  0948  0AF1               	incf	___awmod@divisor+1,f
 11130  0949                     l2523:	
 11131  0949  0870               	movf	___awmod@divisor,w
 11132  094A  0471               	iorwf	___awmod@divisor+1,w
 11133  094B  1903               	btfsc	3,2
 11134  094C  2970               	goto	l2541
 11135  094D  01F5               	clrf	___awmod@counter
 11136  094E  0AF5               	incf	___awmod@counter,f
 11137  094F                     l2531:	
 11138  094F  1BF1               	btfsc	___awmod@divisor+1,7
 11139  0950  295B               	goto	l2533
 11140  0951  3001               	movlw	1
 11141  0952                     u2675:	
 11142  0952  35F0               	lslf	___awmod@divisor,f
 11143  0953  0DF1               	rlf	___awmod@divisor+1,f
 11144  0954  0B89               	decfsz	9,f
 11145  0955  2952               	goto	u2675
 11146  0956  3001               	movlw	1
 11147  0957  00F4               	movwf	??___awmod
 11148  0958  0874               	movf	??___awmod,w
 11149  0959  07F5               	addwf	___awmod@counter,f
 11150  095A  294F               	goto	l2531
 11151  095B                     l2533:	
 11152  095B  0871               	movf	___awmod@divisor+1,w
 11153  095C  0273               	subwf	___awmod@dividend+1,w
 11154  095D  1D03               	skipz
 11155  095E  2961               	goto	u2695
 11156  095F  0870               	movf	___awmod@divisor,w
 11157  0960  0272               	subwf	___awmod@dividend,w
 11158  0961                     u2695:	
 11159  0961  1C03               	skipc
 11160  0962  2967               	goto	l2537
 11161  0963  0870               	movf	___awmod@divisor,w
 11162  0964  02F2               	subwf	___awmod@dividend,f
 11163  0965  0871               	movf	___awmod@divisor+1,w
 11164  0966  3BF3               	subwfb	___awmod@dividend+1,f
 11165  0967                     l2537:	
 11166  0967  3001               	movlw	1
 11167  0968                     u2705:	
 11168  0968  36F1               	lsrf	___awmod@divisor+1,f
 11169  0969  0CF0               	rrf	___awmod@divisor,f
 11170  096A  0B89               	decfsz	9,f
 11171  096B  2968               	goto	u2705
 11172  096C  3001               	movlw	1
 11173  096D  02F5               	subwf	___awmod@counter,f
 11174  096E  1D03               	btfss	3,2
 11175  096F  295B               	goto	l2533
 11176  0970                     l2541:	
 11177  0970  0876               	movf	___awmod@sign,w
 11178  0971  1903               	btfsc	3,2
 11179  0972  2978               	goto	l2545
 11180  0973  09F2               	comf	___awmod@dividend,f
 11181  0974  09F3               	comf	___awmod@dividend+1,f
 11182  0975  0AF2               	incf	___awmod@dividend,f
 11183  0976  1903               	skipnz
 11184  0977  0AF3               	incf	___awmod@dividend+1,f
 11185  0978                     l2545:	
 11186  0978  0873               	movf	___awmod@dividend+1,w
 11187  0979  00F1               	movwf	?___awmod+1
 11188  097A  0872               	movf	___awmod@dividend,w
 11189  097B  00F0               	movwf	?___awmod
 11190  097C  0008               	return
 11191  097D                     __end_of___awmod:	
 11192                           
 11193                           	psect	text31
 11194  097D                     __ptext31:	
 11195 ;; *************** function ___awdiv *****************
 11196 ;; Defined at:
 11197 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c"
 11198 ;; Parameters:    Size  Location     Type
 11199 ;;  divisor         2    0[COMMON] int 
 11200 ;;  dividend        2    2[COMMON] int 
 11201 ;; Auto vars:     Size  Location     Type
 11202 ;;  quotient        2    7[COMMON] int 
 11203 ;;  sign            1    6[COMMON] unsigned char 
 11204 ;;  counter         1    5[COMMON] unsigned char 
 11205 ;; Return value:  Size  Location     Type
 11206 ;;                  2    0[COMMON] int 
 11207 ;; Registers used:
 11208 ;;		wreg, status,2, status,0
 11209 ;; Tracked objects:
 11210 ;;		On entry : 0/0
 11211 ;;		On exit  : 0/0
 11212 ;;		Unchanged: 0/0
 11213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11214 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11215 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11216 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11217 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11218 ;;Total ram usage:        9 bytes
 11219 ;; Hardware stack levels used:    1
 11220 ;; This function calls:
 11221 ;;		Nothing
 11222 ;; This function is called by:
 11223 ;;		_LCD_Write_Int
 11224 ;; This function uses a non-reentrant model
 11225 ;;
 11226                           
 11227                           
 11228                           ;psect for function ___awdiv
 11229  097D                     ___awdiv:	
 11230                           
 11231                           ;incstack = 0
 11232                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 11233  097D  01F6               	clrf	___awdiv@sign
 11234  097E  1FF1               	btfss	___awdiv@divisor+1,7
 11235  097F  2987               	goto	l2475
 11236  0980  09F0               	comf	___awdiv@divisor,f
 11237  0981  09F1               	comf	___awdiv@divisor+1,f
 11238  0982  0AF0               	incf	___awdiv@divisor,f
 11239  0983  1903               	skipnz
 11240  0984  0AF1               	incf	___awdiv@divisor+1,f
 11241  0985  01F6               	clrf	___awdiv@sign
 11242  0986  0AF6               	incf	___awdiv@sign,f
 11243  0987                     l2475:	
 11244  0987  1FF3               	btfss	___awdiv@dividend+1,7
 11245  0988  2992               	goto	l2481
 11246  0989  09F2               	comf	___awdiv@dividend,f
 11247  098A  09F3               	comf	___awdiv@dividend+1,f
 11248  098B  0AF2               	incf	___awdiv@dividend,f
 11249  098C  1903               	skipnz
 11250  098D  0AF3               	incf	___awdiv@dividend+1,f
 11251  098E  3001               	movlw	1
 11252  098F  00F4               	movwf	??___awdiv
 11253  0990  0874               	movf	??___awdiv,w
 11254  0991  06F6               	xorwf	___awdiv@sign,f
 11255  0992                     l2481:	
 11256  0992  01F7               	clrf	___awdiv@quotient
 11257  0993  01F8               	clrf	___awdiv@quotient+1
 11258  0994  0870               	movf	___awdiv@divisor,w
 11259  0995  0471               	iorwf	___awdiv@divisor+1,w
 11260  0996  1903               	btfsc	3,2
 11261  0997  29C1               	goto	l2503
 11262  0998  01F5               	clrf	___awdiv@counter
 11263  0999  0AF5               	incf	___awdiv@counter,f
 11264  099A                     l2491:	
 11265  099A  1BF1               	btfsc	___awdiv@divisor+1,7
 11266  099B  29A6               	goto	l2493
 11267  099C  3001               	movlw	1
 11268  099D                     u2575:	
 11269  099D  35F0               	lslf	___awdiv@divisor,f
 11270  099E  0DF1               	rlf	___awdiv@divisor+1,f
 11271  099F  0B89               	decfsz	9,f
 11272  09A0  299D               	goto	u2575
 11273  09A1  3001               	movlw	1
 11274  09A2  00F4               	movwf	??___awdiv
 11275  09A3  0874               	movf	??___awdiv,w
 11276  09A4  07F5               	addwf	___awdiv@counter,f
 11277  09A5  299A               	goto	l2491
 11278  09A6                     l2493:	
 11279  09A6  3001               	movlw	1
 11280  09A7                     u2595:	
 11281  09A7  35F7               	lslf	___awdiv@quotient,f
 11282  09A8  0DF8               	rlf	___awdiv@quotient+1,f
 11283  09A9  0B89               	decfsz	9,f
 11284  09AA  29A7               	goto	u2595
 11285  09AB  0871               	movf	___awdiv@divisor+1,w
 11286  09AC  0273               	subwf	___awdiv@dividend+1,w
 11287  09AD  1D03               	skipz
 11288  09AE  29B1               	goto	u2605
 11289  09AF  0870               	movf	___awdiv@divisor,w
 11290  09B0  0272               	subwf	___awdiv@dividend,w
 11291  09B1                     u2605:	
 11292  09B1  1C03               	skipc
 11293  09B2  29B8               	goto	l2499
 11294  09B3  0870               	movf	___awdiv@divisor,w
 11295  09B4  02F2               	subwf	___awdiv@dividend,f
 11296  09B5  0871               	movf	___awdiv@divisor+1,w
 11297  09B6  3BF3               	subwfb	___awdiv@dividend+1,f
 11298  09B7  1477               	bsf	___awdiv@quotient,0
 11299  09B8                     l2499:	
 11300  09B8  3001               	movlw	1
 11301  09B9                     u2615:	
 11302  09B9  36F1               	lsrf	___awdiv@divisor+1,f
 11303  09BA  0CF0               	rrf	___awdiv@divisor,f
 11304  09BB  0B89               	decfsz	9,f
 11305  09BC  29B9               	goto	u2615
 11306  09BD  3001               	movlw	1
 11307  09BE  02F5               	subwf	___awdiv@counter,f
 11308  09BF  1D03               	btfss	3,2
 11309  09C0  29A6               	goto	l2493
 11310  09C1                     l2503:	
 11311  09C1  0876               	movf	___awdiv@sign,w
 11312  09C2  1903               	btfsc	3,2
 11313  09C3  29C9               	goto	l2507
 11314  09C4  09F7               	comf	___awdiv@quotient,f
 11315  09C5  09F8               	comf	___awdiv@quotient+1,f
 11316  09C6  0AF7               	incf	___awdiv@quotient,f
 11317  09C7  1903               	skipnz
 11318  09C8  0AF8               	incf	___awdiv@quotient+1,f
 11319  09C9                     l2507:	
 11320  09C9  0878               	movf	___awdiv@quotient+1,w
 11321  09CA  00F1               	movwf	?___awdiv+1
 11322  09CB  0877               	movf	___awdiv@quotient,w
 11323  09CC  00F0               	movwf	?___awdiv
 11324  09CD  0008               	return
 11325  09CE                     __end_of___awdiv:	
 11326                           
 11327                           	psect	text32
 11328  17A0                     __ptext32:	
 11329 ;; *************** function _LCD_Write_Char *****************
 11330 ;; Defined at:
 11331 ;;		line 223 in file "lcd.c"
 11332 ;; Parameters:    Size  Location     Type
 11333 ;;  a               1    wreg     const unsigned char 
 11334 ;; Auto vars:     Size  Location     Type
 11335 ;;  a               1    4[COMMON] const unsigned char 
 11336 ;;  y               1    3[COMMON] unsigned char 
 11337 ;;  temp            1    2[COMMON] unsigned char 
 11338 ;; Return value:  Size  Location     Type
 11339 ;;                  1    wreg      void 
 11340 ;; Registers used:
 11341 ;;		wreg, status,2, status,0, pclath, cstack
 11342 ;; Tracked objects:
 11343 ;;		On entry : 0/0
 11344 ;;		On exit  : 0/0
 11345 ;;		Unchanged: 0/0
 11346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11348 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11349 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11350 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11351 ;;Total ram usage:        4 bytes
 11352 ;; Hardware stack levels used:    1
 11353 ;; Hardware stack levels required when called:    1
 11354 ;; This function calls:
 11355 ;;		_LCD_Port
 11356 ;; This function is called by:
 11357 ;;		_InitCustomChars
 11358 ;;		_LCD_Write_String
 11359 ;;		_LCD_Write_Int
 11360 ;;		_main
 11361 ;; This function uses a non-reentrant model
 11362 ;;
 11363                           
 11364                           
 11365                           ;psect for function _LCD_Write_Char
 11366  17A0                     _LCD_Write_Char:	
 11367                           
 11368                           ;incstack = 0
 11369                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
 11370                           ;LCD_Write_Char@a stored from wreg
 11371  17A0  00F4               	movwf	LCD_Write_Char@a
 11372                           
 11373                           ;lcd.c: 225: char temp,y;
 11374                           ;lcd.c: 226: temp = a&0x0F;
 11375  17A1  0874               	movf	LCD_Write_Char@a,w
 11376  17A2  390F               	andlw	15
 11377  17A3  00F1               	movwf	??_LCD_Write_Char
 11378  17A4  0871               	movf	??_LCD_Write_Char,w
 11379  17A5  00F2               	movwf	LCD_Write_Char@temp
 11380                           
 11381                           ;lcd.c: 227: y = a&0xF0;
 11382  17A6  0874               	movf	LCD_Write_Char@a,w
 11383  17A7  39F0               	andlw	240
 11384  17A8  00F1               	movwf	??_LCD_Write_Char
 11385  17A9  0871               	movf	??_LCD_Write_Char,w
 11386  17AA  00F3               	movwf	LCD_Write_Char@y
 11387                           
 11388                           ;lcd.c: 228: RA0 = 1;
 11389  17AB  0020               	movlb	0	; select bank0
 11390  17AC  140C               	bsf	12,0	;volatile
 11391                           
 11392                           ;lcd.c: 229: LCD_Port(y>>4);
 11393  17AD  0873               	movf	LCD_Write_Char@y,w
 11394  17AE  00F1               	movwf	??_LCD_Write_Char
 11395  17AF  3004               	movlw	4
 11396  17B0                     u2305:	
 11397  17B0  36F1               	lsrf	??_LCD_Write_Char,f
 11398  17B1  0B89               	decfsz	9,f
 11399  17B2  2FB0               	goto	u2305
 11400  17B3  0871               	movf	??_LCD_Write_Char,w
 11401  17B4  3196  26D5  3197   	fcall	_LCD_Port
 11402                           
 11403                           ;lcd.c: 230: RA2 = 1;
 11404  17B7  0020               	movlb	0	; select bank0
 11405  17B8  150C               	bsf	12,2	;volatile
 11406                           
 11407                           ;lcd.c: 231: RA2 = 0;
 11408  17B9  110C               	bcf	12,2	;volatile
 11409                           
 11410                           ;lcd.c: 232: _delay((unsigned long)((40)*(32000000/4000000.0)));
 11411  17BA  306A               	movlw	106
 11412  17BB  00F1               	movwf	??_LCD_Write_Char
 11413  17BC                     u3927:	
 11414  17BC  0BF1               	decfsz	??_LCD_Write_Char,f
 11415  17BD  2FBC               	goto	u3927
 11416  17BE  0000               	nop
 11417                           
 11418                           ;lcd.c: 233: LCD_Port(temp);
 11419  17BF  0872               	movf	LCD_Write_Char@temp,w
 11420  17C0  3196  26D5  3197   	fcall	_LCD_Port
 11421                           
 11422                           ;lcd.c: 234: RA2 = 1;
 11423  17C3  0020               	movlb	0	; select bank0
 11424  17C4  150C               	bsf	12,2	;volatile
 11425                           
 11426                           ;lcd.c: 235: RA2 = 0;
 11427  17C5  110C               	bcf	12,2	;volatile
 11428                           
 11429                           ;lcd.c: 236: _delay((unsigned long)((40)*(32000000/4000000.0)));
 11430  17C6  306A               	movlw	106
 11431  17C7  00F1               	movwf	??_LCD_Write_Char
 11432  17C8                     u3937:	
 11433  17C8  0BF1               	decfsz	??_LCD_Write_Char,f
 11434  17C9  2FC8               	goto	u3937
 11435  17CA  0000               	nop
 11436  17CB  0008               	return
 11437  17CC                     __end_of_LCD_Write_Char:	
 11438                           
 11439                           	psect	text33
 11440  08B7                     __ptext33:	
 11441 ;; *************** function _LCD_Set_Cursor *****************
 11442 ;; Defined at:
 11443 ;;		line 82 in file "lcd.c"
 11444 ;; Parameters:    Size  Location     Type
 11445 ;;  x               1    wreg     unsigned char 
 11446 ;;  y               1    4[COMMON] unsigned char 
 11447 ;; Auto vars:     Size  Location     Type
 11448 ;;  x               1    7[COMMON] unsigned char 
 11449 ;;  temp            1   10[COMMON] unsigned char 
 11450 ;;  w               1    9[COMMON] unsigned char 
 11451 ;;  z               1    8[COMMON] unsigned char 
 11452 ;; Return value:  Size  Location     Type
 11453 ;;                  1    wreg      void 
 11454 ;; Registers used:
 11455 ;;		wreg, status,2, status,0, pclath, cstack
 11456 ;; Tracked objects:
 11457 ;;		On entry : 0/0
 11458 ;;		On exit  : 0/0
 11459 ;;		Unchanged: 0/0
 11460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11461 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11462 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11463 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11464 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11465 ;;Total ram usage:        7 bytes
 11466 ;; Hardware stack levels used:    1
 11467 ;; Hardware stack levels required when called:    2
 11468 ;; This function calls:
 11469 ;;		_LCD_Cmd
 11470 ;; This function is called by:
 11471 ;;		_main
 11472 ;; This function uses a non-reentrant model
 11473 ;;
 11474                           
 11475                           
 11476                           ;psect for function _LCD_Set_Cursor
 11477  08B7                     _LCD_Set_Cursor:	
 11478                           
 11479                           ;incstack = 0
 11480                           ; Regs used in _LCD_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
 11481                           ;LCD_Set_Cursor@x stored from wreg
 11482  08B7  00F7               	movwf	LCD_Set_Cursor@x
 11483                           
 11484                           ;lcd.c: 86: char temp,z,w;
 11485                           ;lcd.c: 88: if(y == 0)
 11486  08B8  0874               	movf	LCD_Set_Cursor@y,w
 11487  08B9  1D03               	btfss	3,2
 11488  08BA  28D7               	goto	l2629
 11489                           
 11490                           ;lcd.c: 89: {
 11491                           ;lcd.c: 90: temp = 0x80 + x;
 11492  08BB  0877               	movf	LCD_Set_Cursor@x,w
 11493  08BC  3E80               	addlw	128
 11494  08BD  00F5               	movwf	??_LCD_Set_Cursor
 11495  08BE  0875               	movf	??_LCD_Set_Cursor,w
 11496  08BF  00FA               	movwf	LCD_Set_Cursor@temp
 11497                           
 11498                           ;lcd.c: 91: z = temp>>4;
 11499  08C0  087A               	movf	LCD_Set_Cursor@temp,w
 11500  08C1  00F5               	movwf	??_LCD_Set_Cursor
 11501  08C2  3004               	movlw	4
 11502  08C3                     u2905:	
 11503  08C3  36F5               	lsrf	??_LCD_Set_Cursor,f
 11504  08C4  0B89               	decfsz	9,f
 11505  08C5  28C3               	goto	u2905
 11506  08C6  0875               	movf	??_LCD_Set_Cursor,w
 11507  08C7  00F6               	movwf	??_LCD_Set_Cursor+1
 11508  08C8  0876               	movf	??_LCD_Set_Cursor+1,w
 11509  08C9  00F8               	movwf	LCD_Set_Cursor@z
 11510                           
 11511                           ;lcd.c: 92: w = temp & 0x0F;
 11512  08CA  087A               	movf	LCD_Set_Cursor@temp,w
 11513  08CB  390F               	andlw	15
 11514  08CC  00F5               	movwf	??_LCD_Set_Cursor
 11515  08CD  0875               	movf	??_LCD_Set_Cursor,w
 11516  08CE  00F9               	movwf	LCD_Set_Cursor@w
 11517                           
 11518                           ;lcd.c: 93: LCD_Cmd(z);
 11519  08CF  0878               	movf	LCD_Set_Cursor@z,w
 11520  08D0  3196  26AB  3188   	fcall	_LCD_Cmd
 11521                           
 11522                           ;lcd.c: 94: LCD_Cmd(w);
 11523  08D3  0879               	movf	LCD_Set_Cursor@w,w
 11524  08D4  3196  26AB         	fcall	_LCD_Cmd
 11525                           
 11526                           ;lcd.c: 95: }
 11527  08D6  0008               	return
 11528  08D7                     l2629:	
 11529                           
 11530                           ;lcd.c: 97: else if(y == 1)
 11531  08D7  0374               	decf	LCD_Set_Cursor@y,w
 11532  08D8  1D03               	btfss	3,2
 11533  08D9  0008               	return
 11534                           
 11535                           ;lcd.c: 98: {
 11536                           ;lcd.c: 99: temp = 0xC0 + x;
 11537  08DA  0877               	movf	LCD_Set_Cursor@x,w
 11538  08DB  3EC0               	addlw	192
 11539  08DC  00F5               	movwf	??_LCD_Set_Cursor
 11540  08DD  0875               	movf	??_LCD_Set_Cursor,w
 11541  08DE  00FA               	movwf	LCD_Set_Cursor@temp
 11542                           
 11543                           ;lcd.c: 100: z = temp>>4;
 11544  08DF  087A               	movf	LCD_Set_Cursor@temp,w
 11545  08E0  00F5               	movwf	??_LCD_Set_Cursor
 11546  08E1  3004               	movlw	4
 11547  08E2                     u2925:	
 11548  08E2  36F5               	lsrf	??_LCD_Set_Cursor,f
 11549  08E3  0B89               	decfsz	9,f
 11550  08E4  28E2               	goto	u2925
 11551  08E5  0875               	movf	??_LCD_Set_Cursor,w
 11552  08E6  00F6               	movwf	??_LCD_Set_Cursor+1
 11553  08E7  0876               	movf	??_LCD_Set_Cursor+1,w
 11554  08E8  00F8               	movwf	LCD_Set_Cursor@z
 11555                           
 11556                           ;lcd.c: 101: w = temp & 0x0F;
 11557  08E9  087A               	movf	LCD_Set_Cursor@temp,w
 11558  08EA  390F               	andlw	15
 11559  08EB  00F5               	movwf	??_LCD_Set_Cursor
 11560  08EC  0875               	movf	??_LCD_Set_Cursor,w
 11561  08ED  00F9               	movwf	LCD_Set_Cursor@w
 11562                           
 11563                           ;lcd.c: 102: LCD_Cmd(z);
 11564  08EE  0878               	movf	LCD_Set_Cursor@z,w
 11565  08EF  3196  26AB  3188   	fcall	_LCD_Cmd
 11566                           
 11567                           ;lcd.c: 103: LCD_Cmd(w);
 11568  08F2  0879               	movf	LCD_Set_Cursor@w,w
 11569  08F3  3196  26AB         	fcall	_LCD_Cmd
 11570  08F5  0008               	return
 11571  08F6                     __end_of_LCD_Set_Cursor:	
 11572                           
 11573                           	psect	text34
 11574  16AB                     __ptext34:	
 11575 ;; *************** function _LCD_Cmd *****************
 11576 ;; Defined at:
 11577 ;;		line 65 in file "lcd.c"
 11578 ;; Parameters:    Size  Location     Type
 11579 ;;  a               1    wreg     unsigned char 
 11580 ;; Auto vars:     Size  Location     Type
 11581 ;;  a               1    3[COMMON] unsigned char 
 11582 ;; Return value:  Size  Location     Type
 11583 ;;                  1    wreg      void 
 11584 ;; Registers used:
 11585 ;;		wreg, status,2, status,0, pclath, cstack
 11586 ;; Tracked objects:
 11587 ;;		On entry : 0/0
 11588 ;;		On exit  : 0/0
 11589 ;;		Unchanged: 0/0
 11590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11592 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11593 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11594 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11595 ;;Total ram usage:        3 bytes
 11596 ;; Hardware stack levels used:    1
 11597 ;; Hardware stack levels required when called:    1
 11598 ;; This function calls:
 11599 ;;		_LCD_Port
 11600 ;; This function is called by:
 11601 ;;		_InitCustomChars
 11602 ;;		_LCD_Clear
 11603 ;;		_LCD_Set_Cursor
 11604 ;;		_LCD_Init
 11605 ;; This function uses a non-reentrant model
 11606 ;;
 11607                           
 11608                           
 11609                           ;psect for function _LCD_Cmd
 11610  16AB                     _LCD_Cmd:	
 11611                           
 11612                           ;incstack = 0
 11613                           ; Regs used in _LCD_Cmd: [wreg+status,2+status,0+pclath+cstack]
 11614                           ;LCD_Cmd@a stored from wreg
 11615  16AB  00F3               	movwf	LCD_Cmd@a
 11616                           
 11617                           ;lcd.c: 67: RA0 = 0;
 11618  16AC  0020               	movlb	0	; select bank0
 11619  16AD  100C               	bcf	12,0	;volatile
 11620                           
 11621                           ;lcd.c: 68: LCD_Port(a);
 11622  16AE  0873               	movf	LCD_Cmd@a,w
 11623  16AF  3196  26D5  3196   	fcall	_LCD_Port
 11624                           
 11625                           ;lcd.c: 69: RA2 = 1;
 11626  16B2  0020               	movlb	0	; select bank0
 11627  16B3  150C               	bsf	12,2	;volatile
 11628                           
 11629                           ;lcd.c: 70: RA2 = 0;
 11630  16B4  110C               	bcf	12,2	;volatile
 11631                           
 11632                           ;lcd.c: 71: _delay((unsigned long)((4)*(32000000/4000.0)));
 11633  16B5  302A               	movlw	42
 11634  16B6  00F2               	movwf	??_LCD_Cmd+1
 11635  16B7  308D               	movlw	141
 11636  16B8  00F1               	movwf	??_LCD_Cmd
 11637  16B9                     u3947:	
 11638  16B9  0BF1               	decfsz	??_LCD_Cmd,f
 11639  16BA  2EB9               	goto	u3947
 11640  16BB  0BF2               	decfsz	??_LCD_Cmd+1,f
 11641  16BC  2EB9               	goto	u3947
 11642  16BD  3200               	nop2
 11643  16BE  0008               	return
 11644  16BF                     __end_of_LCD_Cmd:	
 11645                           
 11646                           	psect	text35
 11647  16D5                     __ptext35:	
 11648 ;; *************** function _LCD_Port *****************
 11649 ;; Defined at:
 11650 ;;		line 41 in file "lcd.c"
 11651 ;; Parameters:    Size  Location     Type
 11652 ;;  a               1    wreg     unsigned char 
 11653 ;; Auto vars:     Size  Location     Type
 11654 ;;  a               1    0[COMMON] unsigned char 
 11655 ;; Return value:  Size  Location     Type
 11656 ;;                  1    wreg      void 
 11657 ;; Registers used:
 11658 ;;		wreg
 11659 ;; Tracked objects:
 11660 ;;		On entry : 0/0
 11661 ;;		On exit  : 0/0
 11662 ;;		Unchanged: 0/0
 11663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11665 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11667 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11668 ;;Total ram usage:        1 bytes
 11669 ;; Hardware stack levels used:    1
 11670 ;; This function calls:
 11671 ;;		Nothing
 11672 ;; This function is called by:
 11673 ;;		_LCD_Cmd
 11674 ;;		_LCD_Init
 11675 ;;		_LCD_Write_Char
 11676 ;; This function uses a non-reentrant model
 11677 ;;
 11678                           
 11679                           
 11680                           ;psect for function _LCD_Port
 11681  16D5                     _LCD_Port:	
 11682                           
 11683                           ;incstack = 0
 11684                           ; Regs used in _LCD_Port: [wreg]
 11685                           ;LCD_Port@a stored from wreg
 11686  16D5  00F0               	movwf	LCD_Port@a
 11687                           
 11688                           ;lcd.c: 43: if(a & 1)
 11689  16D6  1C70               	btfss	LCD_Port@a,0
 11690  16D7  2EDB               	goto	l94
 11691                           
 11692                           ;lcd.c: 44: RA7 = 1;
 11693  16D8  0020               	movlb	0	; select bank0
 11694  16D9  178C               	bsf	12,7	;volatile
 11695  16DA  2EDD               	goto	l2027
 11696  16DB                     l94:	
 11697                           
 11698                           ;lcd.c: 45: else
 11699                           ;lcd.c: 46: RA7 = 0;
 11700  16DB  0020               	movlb	0	; select bank0
 11701  16DC  138C               	bcf	12,7	;volatile
 11702  16DD                     l2027:	
 11703                           
 11704                           ;lcd.c: 48: if(a & 2)
 11705  16DD  1CF0               	btfss	LCD_Port@a,1
 11706  16DE  2EE1               	goto	l96
 11707                           
 11708                           ;lcd.c: 49: RA6 = 1;
 11709  16DF  170C               	bsf	12,6	;volatile
 11710  16E0  2EE2               	goto	l2031
 11711  16E1                     l96:	
 11712                           
 11713                           ;lcd.c: 50: else
 11714                           ;lcd.c: 51: RA6 = 0;
 11715  16E1  130C               	bcf	12,6	;volatile
 11716  16E2                     l2031:	
 11717                           
 11718                           ;lcd.c: 53: if(a & 4)
 11719  16E2  1D70               	btfss	LCD_Port@a,2
 11720  16E3  2EE6               	goto	l98
 11721                           
 11722                           ;lcd.c: 54: RC0 = 1;
 11723  16E4  140E               	bsf	14,0	;volatile
 11724  16E5  2EE7               	goto	l2035
 11725  16E6                     l98:	
 11726                           
 11727                           ;lcd.c: 55: else
 11728                           ;lcd.c: 56: RC0 = 0;
 11729  16E6  100E               	bcf	14,0	;volatile
 11730  16E7                     l2035:	
 11731                           
 11732                           ;lcd.c: 58: if(a & 8)
 11733  16E7  1DF0               	btfss	LCD_Port@a,3
 11734  16E8  2EEB               	goto	l100
 11735                           
 11736                           ;lcd.c: 59: RC1 = 1;
 11737  16E9  148E               	bsf	14,1	;volatile
 11738  16EA  0008               	return
 11739  16EB                     l100:	
 11740                           
 11741                           ;lcd.c: 60: else
 11742                           ;lcd.c: 61: RC1 = 0;
 11743  16EB  108E               	bcf	14,1	;volatile
 11744  16EC  0008               	return
 11745  16ED                     __end_of_LCD_Port:	
 11746  007E                     btemp	set	126	;btemp
 11747  007E                     wtemp	set	126
 11748  007E                     wtemp0	set	126
 11749  0080                     wtemp1	set	128
 11750  0082                     wtemp2	set	130
 11751  0084                     wtemp3	set	132
 11752  0086                     wtemp4	set	134
 11753  0088                     wtemp5	set	136
 11754  007F                     wtemp6	set	127
 11755  007E                     ttemp	set	126
 11756  007E                     ttemp0	set	126
 11757  0081                     ttemp1	set	129
 11758  0084                     ttemp2	set	132
 11759  0087                     ttemp3	set	135
 11760  007F                     ttemp4	set	127
 11761  007E                     ltemp	set	126
 11762  007E                     ltemp0	set	126
 11763  0082                     ltemp1	set	130
 11764  0086                     ltemp2	set	134
 11765  0080                     ltemp3	set	128


Data Sizes:
    Strings     59
    Constant    27
    Data        28
    BSS         45
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     76      80
    BANK1            80     29      70
    BANK2            80      0      28
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            48      0       0
    BANK10            0      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 27
		 -> log@coeff(CODE[27]), 

    LCD_Write_String@a	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_32(CODE[5]), STR_31(CODE[4]), STR_30(CODE[6]), STR_29(CODE[3]), 
		 -> STR_28(CODE[11]), STR_27(CODE[11]), STR_26(CODE[2]), STR_25(CODE[2]), 
		 -> STR_24(CODE[2]), STR_23(CODE[2]), STR_22(CODE[2]), STR_21(CODE[2]), 
		 -> STR_20(CODE[2]), STR_19(CODE[2]), STR_18(CODE[2]), STR_17(CODE[2]), 
		 -> STR_16(CODE[2]), STR_15(CODE[2]), STR_14(CODE[2]), STR_13(CODE[2]), 
		 -> STR_12(CODE[2]), STR_11(CODE[2]), STR_10(CODE[2]), STR_9(CODE[2]), 
		 -> STR_8(CODE[2]), STR_7(CODE[2]), STR_6(CODE[2]), STR_5(CODE[2]), 
		 -> STR_4(CODE[2]), STR_3(CODE[2]), STR_2(CODE[2]), STR_1(CODE[2]), 


Critical Paths under _main in COMMON

    _main->___fttol
    _tempCalc->___awtoft
    _log->___awtoft
    ___ftmul->___awtoft
    ___awtoft->___ftpack
    ___ftadd->___awtoft
    ___ftdiv->___awtoft
    _readAnalog->___aldiv
    _SYSTEM_Initialize->_LCD_Init
    _LCD_Init->_LCD_Cmd
    _LCD_Clear->_LCD_Cmd
    _InitCustomChars->_LCD_Write_Char
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Int->___fttol
    _LCD_Write_Char->_LCD_Port
    _LCD_Set_Cursor->_LCD_Cmd
    _LCD_Cmd->_LCD_Port

Critical Paths under _main in BANK0

    _main->_tempCalc
    _tempCalc->_log
    _log->_eval_poly
    _eval_poly->___ftadd
    ___ftsub->___ftadd
    ___ftadd->___ftdiv
    ___ftdiv->___ftmul
    _readAnalog->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                32    32      0   49842
                                             73 BANK0      3     3      0
                                              0 BANK1     29    29      0
                            _ADCRead
                          _LCD_Clear
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                      _LCD_Write_Int
                   _LCD_Write_String
                 _PWM6_LoadDutyValue
                  _SYSTEM_Initialize
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___fttol
                            ___lwdiv
                         _readAnalog
                           _tempCalc
 ---------------------------------------------------------------------------------
 (1) _tempCalc                                            12     9      3   30741
                                             61 BANK0     12     9      3
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftsub
                                _log
 ---------------------------------------------------------------------------------
 (2) _log                                                  6     3      3   16061
                                             55 BANK0      6     3      3
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _frexp                                                6     2      4     330
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) _eval_poly                                           10     3      7    7103
                                             45 BANK0     10     3      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             16    10      6    2749
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6     322
                                              0 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             6     3      3    1904
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3568
                                             45 BANK0      6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             13     7      6    3395
                                             32 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    2729
                                             16 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    1707
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _readAnalog                                          22    20      2    1392
                                              9 COMMON     4     4      0
                                              6 BANK0     18    16      2
                            _ADCRead
                            ___aldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     622
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     406
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _ADCRead                                              4     1      3      22
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              8     4      4     374
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             14    10      4     464
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    3     3      0     709
                                              8 COMMON     3     3      0
                    _ADCC_Initialize
                    _InitCustomChars
                          _LCD_Clear
                           _LCD_Init
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM6_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             4     4      0     220
                                              4 COMMON     4     4      0
                            _LCD_Cmd
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            0     0      0     110
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (2) _InitCustomChars                                      2     2      0     356
                                              5 COMMON     2     2      0
                            _LCD_Cmd
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM6_LoadDutyValue                                   4     2      2     256
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCD_Write_String                                     5     3      2    1964
                                              5 COMMON     5     3      2
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (1) _LCD_Write_Int                                       19    14      5    2759
                                              0 BANK0     19    14      5
                     _LCD_Write_Char
                            ___awdiv
                            ___awmod
                            ___fttol (ARG)
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     402
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     406
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (1) _LCD_Set_Cursor                                       7     6      1     910
                                              4 COMMON     7     6      1
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (3) _LCD_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (3) _LCD_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCRead
   _LCD_Clear
     _LCD_Cmd
       _LCD_Port
   _LCD_Set_Cursor
     _LCD_Cmd
       _LCD_Port
   _LCD_Write_Char
     _LCD_Port
   _LCD_Write_Int
     _LCD_Write_Char
       _LCD_Port
     ___awdiv
     ___awmod
     ___fttol (ARG)
     ___lwdiv (ARG)
   _LCD_Write_String
     _LCD_Write_Char
       _LCD_Port
   _PWM6_LoadDutyValue
   _SYSTEM_Initialize
     _ADCC_Initialize
     _InitCustomChars
       _LCD_Cmd
         _LCD_Port
       _LCD_Write_Char
         _LCD_Port
     _LCD_Clear
       _LCD_Cmd
         _LCD_Port
     _LCD_Init
       _LCD_Cmd
         _LCD_Port
       _LCD_Port
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM6_Initialize
     _TMR2_Initialize
   ___ftadd
     ___awtoft (ARG)
       ___ftpack
     ___ftdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftpack (ARG)
     ___wmul (ARG)
     _frexp (ARG)
   ___ftdiv
     ___awtoft (ARG)
       ___ftpack
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftpack (ARG)
     ___ftpack (ARG)
   ___ftmul
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)
     _frexp (ARG)
   ___fttol
   ___lwdiv
   _readAnalog
     _ADCRead
     ___aldiv
     ___wmul
   _tempCalc
     ___awtoft
       ___ftpack
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
       _frexp (ARG)
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftsub
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
     _log
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftge
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       _eval_poly
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___wmul
       _frexp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4C      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     1D      46       7       87.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      1C       9       35.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      C0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               30      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK10               0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      C0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Tue Feb 20 17:18:56 2018

                    __CFG_CP$OFF 0000                               l58 1694                               l94 16DB  
                             l96 16E1                               l98 16E6                     ___awdiv@sign 0076  
            ___wmul@multiplicand 0072      __size_of_PWM6_LoadDutyValue 0016                     ___ftadd@exp1 004C  
                   ___ftadd@exp2 004B                      __CFG_LVP$ON 0000                     ___ftadd@sign 004A  
                            l100 16EB                              l401 1729                              l291 04BC  
                            l292 04C7                              l456 0AA3                              l570 0A7B  
                            l562 0A60                              l653 0B80                              l569 0A73  
                            l593 0FA9                              _GIE 005F                              _RA0 0060  
                            _RA2 0062                              _RC0 0070                              _RC1 0071  
                            _RA6 0066                              _RA7 0067                     __CFG_CPD$OFF 0000  
                            _log 0CCA                  __end_of_ADCRead 169B                     ___awmod@sign 0076  
                _TMR2_Initialize 167F                     __CFG_BORV$LO 0000                              wreg 0009  
                    main@analogs 00BF                  __end_of_LCD_Cmd 16BF                     __CFG_ZCD$OFF 0000  
                   ___ftdiv@cntr 003A                   _LCD_Set_Cursor 08B7                     ___ftdiv@sign 003F  
                           l2001 0A47                             l2011 0A6D                             l2003 0A4C  
                           l2101 0FA5                             l2031 16E2                             l2041 1723  
                           l2009 0A65                             l2105 0FBB                             l2035 16E7  
                           l2027 16DD                             l2211 1764                             l3011 0541  
                           l2109 0FCD                             l3005 0534                             l2303 1798  
                           l2119 0FE8                             l2063 0F39                             l2223 086D  
                           l2151 0DE7                             l2135 0DA4                             l3023 0575  
                           l2081 0F62                             l2129 0D8E                             l3041 05A3  
                           l3033 0591                             l2091 0F84                             l2059 0F32  
                           l2219 0857                             l2163 0E03                             l2147 0DDF  
                           l2243 088E                             l2411 0CE8                             l2093 0F88  
                           l2069 0F48                             l2261 0A27                             l3133 07A9  
                           l3125 07A0                             l3109 06C7                             l3053 05C3  
                           l2503 09C1                             l2087 0F75                             l2159 0DFB  
                           l3047 05B3                             l2089 0F7F                             l2417 0CF9  
                           l3137 07B5                             l3065 05F7                             l2507 09C9  
                           l2531 094F                             l2523 0949                             l2099 0F9B  
                           l3139 07B6                             l3075 0613                             l2533 095B  
                           l2541 0970                             l2445 0AC4                             l2437 0AB4  
                           l2613 01DA                             l2519 0942                             l2463 0B0B  
                           l2455 0AF2                             l2447 0AD2                             l2481 0992  
                           l2545 0978                             l2537 0967                             l2297 1787  
                           l2561 0C4E                             l2491 099A                             l2475 0987  
                           l2803 17FB                             l2459 0AFD                             l2555 0C38  
                           l2629 08D7                             l2493 09A6                             l2645 16EF  
                           l2671 005F                             l2583 0CA8                             l2575 0C8F  
                           l2681 007F                             l2745 0B2C                             l2499 09B8  
                           l2675 0063                             l2659 0029                             l2771 0B77  
                           l2763 0B5C                             l2595 1744                             l2693 00BD  
                           l2677 0067                             l2669 0030                             l2773 0B83  
                           l2765 0B6A                             l2687 0083                             l2679 006F  
                           l2791 17D4                             l2689 00AF                             l2777 0B91  
                           l2793 17E0                             l2953 0488                             l1995 0A36  
                           l2963 04B3                             l2947 0482                             l2981 04F4  
                           l2799 17F2                             l1999 0A3D                             l2991 0511  
                           l2975 04D2                             l2959 04A6                             ?_log 0057  
                           l2999 0524                             STR_1 1040                             STR_2 104C  
                           STR_3 104E                             STR_4 1046                             STR_5 1040  
                           STR_6 1038                             STR_7 1042                             STR_8 1040  
                           STR_9 1054                             u2105 0F89                             u3005 009D  
                           u2045 0F63                             u2205 0DB0                             _LATA 0016  
                           _LATB 0017                             u2135 0F9C                             u2215 0DC0  
                           _LATC 0018                             u2400 083F                             u2305 17B0  
                           u3210 0210                             u3035 16CE                             u3115 0B78  
                           u2075 0F76                             u2235 0DE8                             u2245 0DEE  
                           u3055 0B33                             u2505 0AE7                             _T2PR 028D  
                           u3155 17D7                             u2515 0AF3                             u2275 0E04  
                           u2605 09B1                             u3085 0B5D                             u2285 0E0A  
                           u2615 09B9                             u3175 17E1                             u1815 0A68  
                           u2705 0968                             u3185 17EB                             u3195 17F3  
                           u2475 0AC7                             u3507 025D                             u1925 172A  
                           u3517 0272                             u2575 099D                             u2495 0AD3  
                           u1935 172F                             u1855 0A82                             u1775 0A42  
                           u3607 032F                             u3527 0287                             u2905 08C3  
                           u2825 00E7                             u3617 0344                             u3537 029C  
                           u2595 09A7                             u2675 0952                             u2835 0135  
                           u1795 0A5B                             u2755 0C60                             u3707 0407  
                           u3627 035F                             u3547 02B1                             u2940 0012  
                           u2925 08E2                             u2845 016E                             u2765 0C70  
                           u3717 041C                             u3637 0374                             u3557 02C6  
                           u2695 0961                             u3807 0921                             u2855 01B1  
                           u2775 0C90                             u3727 0431                             u3647 0389  
                           u3567 02DB                             u3817 0930                             u2865 01CA  
                           u2785 0C9F                             u3737 0446                             u3657 039E  
                           u3577 02F0                             u3497 0240                             u3907 0C0D  
                           u3827 0BA5                             u2795 0CA9                             u3747 045B  
                           u3667 03B3                             u3587 0305                             u3917 0C1C  
                           u3837 0BB3                             u2885 01E6                             u3757 0470  
                           u3677 03C8                             u3597 031A                             u3927 17BC  
                           u3847 0BBE                             u3767 04ED                             u3687 03DD  
                           u3937 17C8                             u3857 0BC8                             u3777 0586  
                           u3697 03F2                             u3947 16B9                             u3867 0BD2  
                           u3787 0608                             u3877 0BE0                             u3797 0911  
                           u3887 0BEE                             u3897 0BFE              tempCalc@analogValue 005D  
                           _WPUA 0F39                             _WPUB 0F44                             _WPUC 0F4F  
                           _WPUE 0F65                     __CFG_WRT$OFF 0000                    __CFG_FCMEN$ON 0000  
              ?_LCD_Write_String 0075                             _main 0202                     ___ftpack@arg 0070  
             __size_of_LCD_Clear 0008                     ___ftpack@exp 0073                             fsr0h 0005  
                           fsr1h 0007                             fsr0l 0004                             indf0 0000  
                           indf1 0001                             fsr1l 0006                             btemp 007E  
                           log@x 0057                    __CFG_BOREN$ON 0000                             ltemp 007E  
                           start 0002               ??_LCD_Write_String 0077                             ttemp 007E  
                           wtemp 007E                    __CFG_CSWEN$ON 0000                    __CFG_MCLRE$ON 0000  
                   ___ftmul@cntr 002E                    _LCD_Write_Int 0007                     ___ftmul@sign 002F  
                   ___fttol@exp1 007D                            ??_log 005A                     ___fttol@lval 0079  
               __end_of_LCD_Init 0C21                 __end_of_LCD_Port 16ED   __size_of_OSCILLATOR_Initialize 0009  
  __end_of_OSCILLATOR_Initialize 165B                  __end_of___aldiv 0B14                            _ADACQ 009D  
                          _ADCAP 009B                            _ADACT 0099                            ?_main 0070  
                          _ADCLK 0098                            _ADPCH 009E                            _ADREF 009A  
                __end_of___awdiv 09CE                            _ADPRE 009C                  __end_of___ftadd 1000  
                          STR_10 1048                            STR_11 1042                            STR_12 103E  
                          STR_20 103C                            STR_21 1038                            STR_13 1052  
                          STR_14 104E                            STR_22 104A                            STR_30 1026  
                          STR_23 1048                            STR_15 1050                            STR_31 1031  
                          STR_24 1042                            STR_16 1046                            STR_32 102C  
                          STR_17 1048                            STR_25 1052                    __CFG_WDTE$OFF 0000  
                          STR_18 1044                            STR_26 103A                            STR_19 1038  
                          STR_27 101B                            STR_28 101B                  __end_of___awmod 097D  
                          STR_29 1035                            _ADRPT 010D                  __end_of___ftdiv 0CCA  
                __end_of___ftmul 0E2B                  ___awdiv@divisor 0070                  __end_of___ftsub 175A  
                __end_of___fttol 0B9A                            _T2CON 028E                            _T2HLT 028F  
                __end_of___lwdiv 1800                            _T2TMR 028C                            _T2RST 0291  
                ___awdiv@counter 0075                            _OSCEN 0891                            _TRISA 0011  
                          _TRISB 0012                            _TRISC 0013                  _PWM6_Initialize 0800  
         __end_of_LCD_Set_Cursor 08F6                    ___awtoft@sign 007D                            _frexp 087C  
                          _errno 006C                    ___ftpack@sign 0074                            main@x 00D7  
                          ltemp0 007E                            ltemp1 0082                            ltemp2 0086  
                          ltemp3 0080                            ttemp0 007E                            ttemp1 0081  
                          ttemp2 0084                            ttemp3 0087                            ttemp4 007F  
                          status 0003                            wtemp0 007E                            wtemp1 0080  
                          wtemp2 0082                            wtemp3 0084                            wtemp4 0086  
                          wtemp5 0088                            wtemp6 007F                 InitCustomChars@i 0076  
                 ?_LCD_Write_Int 0020                   _LCD_Write_Char 17A0                  __initialization 07BD  
                    log@exponent 005B                     __end_of_main 07BD                readAnalog@channel 0026  
        __end_of_TMR2_Initialize 168D                        ??_ADCRead 0073                    main@tPadCount 00D4  
                         ??_main 0069                    ___fttol@sign1 0078                __end_of_LCD_Clear 1652  
                      ??_LCD_Cmd 0071                  ?_LCD_Set_Cursor 0074                           _ADCON0 0093  
                         _ADCON1 0094                           _ADCON2 0095                           _ADCON3 0096  
                         ?_frexp 0070                           _ADLTHH 010F                           _ADLTHL 010E  
                         _ADRESH 008D                           _ADRESL 008C                           _ADSTAT 0097  
                         _ADUTHH 0111                 ___awdiv@dividend 0072                           _ADUTHL 0110  
               __end_of___awtoft 177A                           _ANSELA 0F38                           _ANSELB 0F43  
                         _ANSELC 0F4E                 __end_of___ftpack 0A92                           _RC2PPS 0F22  
                 __CFG_WDTCCS$SC 0000                           _FVRCON 090C                           _OSCFRQ 0893  
                  main@dutyCycle 00D8           __end_of_LCD_Write_Char 17CC                   __CFG_PWRTE$OFF 0000  
                   _CCPTMRS1bits 021F                           ___ftge 0841           LCD_Write_Int@numPlaces 0023  
                      ??___aldiv 0078                           ___wmul 1721                        ??___awdiv 0074  
                      ??___ftadd 0046                   __CFG_STVREN$ON 0000                        ??___awmod 0074  
                      ??___ftdiv 0036                        ??___ftmul 0026                        ??___ftsub 007E  
                      ??___fttol 0074                        ??___lwdiv 0074          __end_of_PWM6_Initialize 080B  
               ___awdiv@quotient 0077                  ___awmod@divisor 0070                  ___awmod@counter 0075  
                         _totals 00A0            ___ftmul@f3_as_product 002B                 __end_of_tempCalc 0F0A  
                _ADCC_Initialize 1707                 LCD_Write_Int@str 002A                  _InitCustomChars 177A  
                LCD_Set_Cursor@w 0079                  LCD_Set_Cursor@x 0077                  LCD_Set_Cursor@y 0074  
                LCD_Set_Cursor@z 0078         readAnalog@analog_channel 0079                _SYSTEM_Initialize 08F6  
               __end_oflog@coeff 101B          __end_of__initialization 07FD                        ?_LCD_Init 0070  
                      ?_LCD_Port 0070                       ___ftadd@f1 0040                       ___ftadd@f2 0043  
                     ___ftge@ff1 0070                       ___ftge@ff2 0073                  ??_LCD_Write_Int 0025  
             ?_SYSTEM_Initialize 0070                     eval_poly@res 0054                       ___ftdiv@f1 0033  
                     ___ftdiv@f2 0030                       ___ftdiv@f3 003B                  ?_LCD_Write_Char 0070  
                  LCD_Init@style 0077                       ___awtoft@c 0078                       ___ftmul@f1 0020  
                     ___ftmul@f2 0023                       ___ftsub@f1 0050                       ___ftsub@f2 004D  
                     ___fttol@f1 0070                   __pcstackCOMMON 0070                        LCD_Port@a 0070  
                   __pidataBANK1 1673                     __pidataBANK2 169B              ??_SYSTEM_Initialize 0078  
                  __end_of_frexp 08B7                 ?_TMR2_Initialize 0070                          ??_frexp 0074  
      __end_of_SYSTEM_Initialize 0938                       __pbssBANK0 006C                       __pbssBANK1 00A0  
                     __pbssBANK2 0130               __size_of_eval_poly 0060                       ??_LCD_Init 0074  
                     ??_LCD_Port 0070                       __pmaintext 0202                          ?___ftge 0070  
                        ?___wmul 0070                  __CFG_PPS1WAY$ON 0000          __end_of_ADCC_Initialize 1721  
     __end_of_PWM6_LoadDutyValue 16D5                          _ADCRead 168D        __size_of_LCD_Write_String 001A  
               ?_PWM6_Initialize 0070                        ?___awtoft 0078                        ?___ftpack 0070  
                        _ADSTPTH 0113                          _ADSTPTL 0112         __CFG_SCANE$not_available 0000  
            __CFG_RSTOSC$HFINT32 0000                 main@displayTemp2 00D0          __end_of_InitCustomChars 17A0  
                        _LCD_Cmd 16AB                          _OSCCON1 088D                          _OSCCON3 088F  
                        _OSCTUNE 0892                          _PWM6DCH 038D                          _PWM6DCL 038C  
                        _PWM6CON 038E                          _PPSLOCK 0E8F                        ?_tempCalc 005D  
                     _readAnalog 00D2                          ___aldiv 0A92                          ___cgram 0120  
                __size_of___ftge 003B                          ___awdiv 097D                          ___ftadd 0F0A  
                        ___awmod 0938                          ___ftdiv 0C21                  __size_of___wmul 001B  
                        ___ftmul 0D77                          ___ftsub 173C                          ___fttol 0B14  
                        ___lwdiv 17CC                       ??___awtoft 007B                       ??___ftpack 0075  
              __end_of_eval_poly 0A2E                 ??_LCD_Set_Cursor 0075                          __ptext1 0E2B  
                        __ptext2 0CCA                          __ptext3 087C                          __ptext4 09CE  
                        __ptext5 0D77                          __ptext6 0841                          __ptext7 175A  
                        __ptext8 173C                          __ptext9 0F0A                   main@resetDelay 00D3  
          _OSCILLATOR_Initialize 1652                        _T2CONbits 028E                     __size_of_log 00AD  
               ___awmod@dividend 0072                   ADCRead@channel 0073                 ___aldiv@dividend 0074  
       ??_PIN_MANAGER_Initialize 0070                          _samples 2300                        _LCD_Clear 164A  
     __size_of_SYSTEM_Initialize 0042                          clrloop0 165C             end_of_initialization 07FD  
                        init_ram 1667                          initloop 1668                       ??_tempCalc 007E  
               ___aldiv@quotient 0022                   main@startDelay 00BE                LCD_Write_Int@sign 0024  
                     main@F13657 0130                     __pstringtext 1000                 ?_ADCC_Initialize 0070  
          __CFG_WDTCPS$WDTCPS_31 0000                 ?_InitCustomChars 0070                       main@C_or_F 00D6  
                     ?_LCD_Clear 0070                 __CFG_FEXTOSC$OFF 0000                       main@bCount 00CB  
              LCD_Write_String@a 0075                LCD_Write_String@i 0078                 ??_LCD_Write_Char 0071  
                     main@choice 00D5                      ___ftdiv@exp 003E                __size_of_LCD_Init 0087  
              __size_of_LCD_Port 0018                      ___ftmul@exp 002A                      ?_readAnalog 0026  
                 __end_of___ftge 087C                   __end_of___wmul 173C                 _LCD_Write_String 16ED  
         ?_OSCILLATOR_Initialize 0070              start_initialization 07BD                       eval_poly@d 0050  
                     eval_poly@n 0052                       eval_poly@x 004D  __size_of_PIN_MANAGER_Initialize 0036  
                    __end_of_log 0D77                       frexp@value 0070         LCD_Write_Int@fieldLength 0022  
          __end_of_LCD_Write_Int 00D2                 __CFG_LPBOREN$OFF 0000                         ??___ftge 0076  
              tempCalc@steinhart 0066                         ??___wmul 0074                      __pdataBANK1 00DA  
                    __pdataBANK2 0120                  LCD_Write_Char@a 0074                  LCD_Write_Char@y 0073  
                       ?_ADCRead 0070                         ?_LCD_Cmd 0070                __size_of___awtoft 0020  
              __size_of___ftpack 0064                      __pbssBIGRAM 2300                         LCD_Cmd@a 0073  
                      ___latbits 0002                    __pcstackBANK0 0020                    __pcstackBANK1 00BD  
             _PWM6_LoadDutyValue 16BF         __size_of_TMR2_Initialize 000E                      ??_LCD_Clear 0074  
            __size_of_readAnalog 0130              ?_PWM6_LoadDutyValue 0070                 ___lwdiv@dividend 0072  
         _PIN_MANAGER_Initialize 080B                         ?___aldiv 0070                __size_of_tempCalc 00DF  
                       ?___awdiv 0070                         ?___ftadd 0040                         ?___awmod 0070  
                       ?___ftdiv 0030                         ?___ftmul 0020                         ?___ftsub 004D  
                       ?___fttol 0070                         ?___lwdiv 0070                  main@displayTemp 00CD  
           ??_PWM6_LoadDutyValue 0072                        _eval_poly 09CE         __size_of_PWM6_Initialize 000B  
               ___lwdiv@quotient 0075                   __size_of_frexp 003B                         _T2CLKCON 0290  
                ___aldiv@divisor 0070                  ___aldiv@counter 0020                         _LCD_Init 0B9A  
                 ___wmul@product 0074                         _LCD_Port 16D5                        clear_ram0 165B  
                       _PIE0bits 0716                         _PIR4bits 0710                 __size_of_ADCRead 000E  
                     _ADCON0bits 0093                ___wmul@multiplier 0070                       ?_eval_poly 004D  
               __size_of_LCD_Cmd 0014         __end_of_LCD_Write_String 1707                ??_TMR2_Initialize 0070  
                readAnalog@value 007B                        frexp@eptr 0073                     ??_readAnalog 0028  
                   _tempCalc$982 0063          ??_OSCILLATOR_Initialize 0070                   LCD_Write_Int@i 0031  
                 LCD_Write_Int@j 002F                 __size_of___aldiv 0082                 __size_of___awdiv 0051  
               __size_of___ftadd 00F6                 __size_of___awmod 0045                 __size_of___ftdiv 00A9  
               __size_of___ftmul 00B4                 __size_of___ftsub 001E                 __size_of___fttol 0086  
               __size_of___lwdiv 0034                         ___awtoft 175A                         ___ftpack 0A2E  
       __size_of_ADCC_Initialize 001A                         _channels 00DA                  ___lwdiv@divisor 0070  
                ___lwdiv@counter 0077                         __ptext10 0C21                         __ptext11 0A2E  
                       __ptext20 0800                         __ptext12 00D2                         __ptext21 080B  
                       __ptext13 1721                         __ptext30 0938                         __ptext22 1652  
                       __ptext14 0A92                         __ptext31 097D                         __ptext23 0B9A  
                       __ptext15 168D                         __ptext32 17A0                         __ptext24 164A  
                       __ptext16 17CC                         __ptext33 08B7                         __ptext25 177A  
                       __ptext17 0B14                         __ptext34 16AB                         __ptext26 1707  
                       __ptext18 08F6                         __ptext35 16D5                         __ptext27 16BF  
                       __ptext19 167F                         __ptext28 16ED                         __ptext29 0007  
             __end_of_readAnalog 0202          __size_of_LCD_Set_Cursor 003F                        tempCalc@R 0060  
       __size_of_InitCustomChars 0026              LCD_Write_Int@F13687 00B8                ??_PWM6_Initialize 0070  
                  __size_of_main 05BB             __CFG_WDTCWS$WDTCWS_7 0000                         _tempCalc 0E2B  
                       main@loop 00BD      PIN_MANAGER_Initialize@state 0070                         log@coeff 1000  
                    ??_eval_poly 007E                      _sampleIndex 006E               LCD_Write_Char@temp 0072  
        ?_PIN_MANAGER_Initialize 0070                __CFG_CLKOUTEN$OFF 0000                      _PPSLOCKbits 0E8F  
        __size_of_LCD_Write_Char 002C               LCD_Set_Cursor@temp 007A               LCD_Write_Int@value 0020  
                   ___aldiv@sign 0021      PWM6_LoadDutyValue@dutyCycle 0070           __size_of_LCD_Write_Int 00CB  
 __end_of_PIN_MANAGER_Initialize 0841                ??_ADCC_Initialize 0070                ??_InitCustomChars 0075  
