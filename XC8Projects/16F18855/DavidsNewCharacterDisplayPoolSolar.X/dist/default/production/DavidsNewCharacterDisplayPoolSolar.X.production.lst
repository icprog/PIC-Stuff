

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Tue Feb 20 13:24:40 2018

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	stringtext,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	psect	text32,local,class=CODE,merge=1,delta=2
    51                           	psect	text33,local,class=CODE,merge=1,delta=2
    52                           	psect	text34,local,class=CODE,merge=1,delta=2
    53                           	psect	text35,local,class=CODE,merge=1,delta=2
    54                           	dabs	1,0x620,48
    55                           	dabs	1,0x5A0,80
    56                           	dabs	1,0x520,80
    57                           	dabs	1,0x4D0,32
    58                           	dabs	1,0x2300,0,_samples
    59                           	dabs	1,0x7E,2
    60  0000                     	;# 
    61  0001                     	;# 
    62  0002                     	;# 
    63  0003                     	;# 
    64  0004                     	;# 
    65  0005                     	;# 
    66  0006                     	;# 
    67  0007                     	;# 
    68  0008                     	;# 
    69  0009                     	;# 
    70  000A                     	;# 
    71  000B                     	;# 
    72  000C                     	;# 
    73  000D                     	;# 
    74  000E                     	;# 
    75  0010                     	;# 
    76  0011                     	;# 
    77  0012                     	;# 
    78  0013                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  001C                     	;# 
    83  001C                     	;# 
    84  001D                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  008C                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  008E                     	;# 
    93  008F                     	;# 
    94  0090                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0093                     	;# 
    98  0094                     	;# 
    99  0095                     	;# 
   100  0096                     	;# 
   101  0097                     	;# 
   102  0098                     	;# 
   103  0099                     	;# 
   104  009A                     	;# 
   105  009B                     	;# 
   106  009C                     	;# 
   107  009D                     	;# 
   108  009E                     	;# 
   109  010C                     	;# 
   110  010D                     	;# 
   111  010E                     	;# 
   112  010E                     	;# 
   113  010F                     	;# 
   114  0110                     	;# 
   115  0110                     	;# 
   116  0111                     	;# 
   117  0112                     	;# 
   118  0112                     	;# 
   119  0113                     	;# 
   120  0114                     	;# 
   121  0114                     	;# 
   122  0115                     	;# 
   123  0116                     	;# 
   124  0116                     	;# 
   125  0117                     	;# 
   126  0119                     	;# 
   127  0119                     	;# 
   128  0119                     	;# 
   129  011A                     	;# 
   130  011A                     	;# 
   131  011A                     	;# 
   132  011B                     	;# 
   133  011B                     	;# 
   134  011B                     	;# 
   135  011B                     	;# 
   136  011B                     	;# 
   137  011C                     	;# 
   138  011C                     	;# 
   139  011C                     	;# 
   140  011D                     	;# 
   141  011D                     	;# 
   142  011D                     	;# 
   143  011E                     	;# 
   144  011E                     	;# 
   145  011E                     	;# 
   146  011F                     	;# 
   147  011F                     	;# 
   148  011F                     	;# 
   149  011F                     	;# 
   150  011F                     	;# 
   151  018C                     	;# 
   152  018D                     	;# 
   153  018E                     	;# 
   154  018F                     	;# 
   155  0190                     	;# 
   156  0191                     	;# 
   157  0192                     	;# 
   158  0196                     	;# 
   159  0197                     	;# 
   160  0198                     	;# 
   161  0199                     	;# 
   162  019A                     	;# 
   163  019B                     	;# 
   164  019C                     	;# 
   165  020C                     	;# 
   166  020D                     	;# 
   167  020E                     	;# 
   168  020F                     	;# 
   169  020F                     	;# 
   170  0210                     	;# 
   171  0210                     	;# 
   172  0211                     	;# 
   173  0211                     	;# 
   174  0212                     	;# 
   175  0213                     	;# 
   176  0214                     	;# 
   177  0215                     	;# 
   178  0215                     	;# 
   179  0216                     	;# 
   180  0216                     	;# 
   181  0217                     	;# 
   182  0217                     	;# 
   183  0218                     	;# 
   184  0219                     	;# 
   185  021A                     	;# 
   186  021B                     	;# 
   187  021B                     	;# 
   188  021C                     	;# 
   189  021C                     	;# 
   190  021D                     	;# 
   191  021D                     	;# 
   192  021E                     	;# 
   193  021F                     	;# 
   194  028C                     	;# 
   195  028C                     	;# 
   196  028D                     	;# 
   197  028D                     	;# 
   198  028E                     	;# 
   199  028F                     	;# 
   200  0290                     	;# 
   201  0290                     	;# 
   202  0291                     	;# 
   203  0292                     	;# 
   204  0292                     	;# 
   205  0293                     	;# 
   206  0293                     	;# 
   207  0294                     	;# 
   208  0295                     	;# 
   209  0296                     	;# 
   210  0296                     	;# 
   211  0297                     	;# 
   212  0298                     	;# 
   213  0298                     	;# 
   214  0299                     	;# 
   215  0299                     	;# 
   216  029A                     	;# 
   217  029B                     	;# 
   218  029C                     	;# 
   219  029C                     	;# 
   220  029D                     	;# 
   221  030C                     	;# 
   222  030C                     	;# 
   223  030D                     	;# 
   224  030E                     	;# 
   225  030F                     	;# 
   226  0310                     	;# 
   227  0310                     	;# 
   228  0311                     	;# 
   229  0312                     	;# 
   230  0313                     	;# 
   231  0314                     	;# 
   232  0314                     	;# 
   233  0315                     	;# 
   234  0316                     	;# 
   235  0317                     	;# 
   236  0318                     	;# 
   237  0318                     	;# 
   238  0319                     	;# 
   239  031A                     	;# 
   240  031B                     	;# 
   241  031C                     	;# 
   242  031C                     	;# 
   243  031D                     	;# 
   244  031E                     	;# 
   245  031F                     	;# 
   246  038C                     	;# 
   247  038D                     	;# 
   248  038E                     	;# 
   249  0390                     	;# 
   250  0391                     	;# 
   251  0392                     	;# 
   252  040C                     	;# 
   253  040D                     	;# 
   254  040E                     	;# 
   255  040F                     	;# 
   256  0410                     	;# 
   257  0411                     	;# 
   258  0416                     	;# 
   259  0416                     	;# 
   260  0417                     	;# 
   261  0418                     	;# 
   262  0418                     	;# 
   263  0419                     	;# 
   264  041A                     	;# 
   265  041A                     	;# 
   266  041B                     	;# 
   267  041C                     	;# 
   268  041C                     	;# 
   269  041D                     	;# 
   270  041E                     	;# 
   271  041F                     	;# 
   272  048C                     	;# 
   273  048C                     	;# 
   274  048D                     	;# 
   275  048E                     	;# 
   276  048F                     	;# 
   277  048F                     	;# 
   278  0490                     	;# 
   279  0491                     	;# 
   280  0492                     	;# 
   281  0492                     	;# 
   282  0493                     	;# 
   283  0494                     	;# 
   284  0495                     	;# 
   285  0495                     	;# 
   286  0496                     	;# 
   287  0497                     	;# 
   288  0498                     	;# 
   289  0499                     	;# 
   290  049A                     	;# 
   291  049B                     	;# 
   292  049C                     	;# 
   293  049D                     	;# 
   294  050C                     	;# 
   295  050C                     	;# 
   296  050D                     	;# 
   297  050E                     	;# 
   298  050F                     	;# 
   299  050F                     	;# 
   300  0510                     	;# 
   301  0511                     	;# 
   302  0512                     	;# 
   303  0512                     	;# 
   304  0513                     	;# 
   305  0514                     	;# 
   306  0515                     	;# 
   307  0515                     	;# 
   308  0516                     	;# 
   309  0517                     	;# 
   310  0518                     	;# 
   311  0519                     	;# 
   312  051A                     	;# 
   313  051B                     	;# 
   314  051C                     	;# 
   315  051D                     	;# 
   316  058C                     	;# 
   317  058C                     	;# 
   318  058D                     	;# 
   319  058E                     	;# 
   320  058F                     	;# 
   321  058F                     	;# 
   322  0590                     	;# 
   323  0591                     	;# 
   324  0592                     	;# 
   325  0593                     	;# 
   326  060C                     	;# 
   327  060D                     	;# 
   328  060E                     	;# 
   329  060F                     	;# 
   330  0610                     	;# 
   331  0611                     	;# 
   332  0612                     	;# 
   333  0613                     	;# 
   334  0614                     	;# 
   335  0616                     	;# 
   336  0617                     	;# 
   337  0618                     	;# 
   338  0619                     	;# 
   339  061A                     	;# 
   340  061B                     	;# 
   341  061C                     	;# 
   342  061D                     	;# 
   343  061E                     	;# 
   344  068C                     	;# 
   345  068D                     	;# 
   346  068E                     	;# 
   347  068F                     	;# 
   348  0690                     	;# 
   349  0691                     	;# 
   350  0692                     	;# 
   351  0693                     	;# 
   352  0694                     	;# 
   353  070C                     	;# 
   354  070D                     	;# 
   355  070E                     	;# 
   356  070F                     	;# 
   357  0710                     	;# 
   358  0711                     	;# 
   359  0712                     	;# 
   360  0713                     	;# 
   361  0714                     	;# 
   362  0716                     	;# 
   363  0717                     	;# 
   364  0718                     	;# 
   365  0719                     	;# 
   366  071A                     	;# 
   367  071B                     	;# 
   368  071C                     	;# 
   369  071D                     	;# 
   370  071E                     	;# 
   371  0796                     	;# 
   372  0797                     	;# 
   373  0798                     	;# 
   374  0799                     	;# 
   375  079A                     	;# 
   376  079B                     	;# 
   377  080C                     	;# 
   378  080D                     	;# 
   379  080E                     	;# 
   380  080F                     	;# 
   381  0810                     	;# 
   382  0811                     	;# 
   383  0812                     	;# 
   384  0813                     	;# 
   385  0814                     	;# 
   386  081A                     	;# 
   387  081B                     	;# 
   388  081C                     	;# 
   389  081D                     	;# 
   390  081E                     	;# 
   391  081F                     	;# 
   392  088C                     	;# 
   393  088D                     	;# 
   394  088E                     	;# 
   395  088F                     	;# 
   396  0890                     	;# 
   397  0891                     	;# 
   398  0892                     	;# 
   399  0893                     	;# 
   400  0895                     	;# 
   401  0896                     	;# 
   402  0897                     	;# 
   403  0898                     	;# 
   404  0899                     	;# 
   405  089A                     	;# 
   406  089B                     	;# 
   407  090C                     	;# 
   408  090E                     	;# 
   409  090F                     	;# 
   410  091F                     	;# 
   411  091F                     	;# 
   412  098F                     	;# 
   413  098F                     	;# 
   414  0990                     	;# 
   415  0991                     	;# 
   416  0992                     	;# 
   417  0993                     	;# 
   418  0994                     	;# 
   419  0995                     	;# 
   420  0996                     	;# 
   421  0997                     	;# 
   422  0E0F                     	;# 
   423  0E10                     	;# 
   424  0E11                     	;# 
   425  0E12                     	;# 
   426  0E13                     	;# 
   427  0E14                     	;# 
   428  0E15                     	;# 
   429  0E16                     	;# 
   430  0E17                     	;# 
   431  0E18                     	;# 
   432  0E19                     	;# 
   433  0E1A                     	;# 
   434  0E1B                     	;# 
   435  0E1C                     	;# 
   436  0E1D                     	;# 
   437  0E1E                     	;# 
   438  0E1F                     	;# 
   439  0E20                     	;# 
   440  0E21                     	;# 
   441  0E22                     	;# 
   442  0E23                     	;# 
   443  0E24                     	;# 
   444  0E25                     	;# 
   445  0E26                     	;# 
   446  0E27                     	;# 
   447  0E28                     	;# 
   448  0E29                     	;# 
   449  0E2A                     	;# 
   450  0E2B                     	;# 
   451  0E2C                     	;# 
   452  0E2D                     	;# 
   453  0E2E                     	;# 
   454  0E2F                     	;# 
   455  0E30                     	;# 
   456  0E31                     	;# 
   457  0E32                     	;# 
   458  0E33                     	;# 
   459  0E34                     	;# 
   460  0E35                     	;# 
   461  0E36                     	;# 
   462  0E37                     	;# 
   463  0E8F                     	;# 
   464  0E90                     	;# 
   465  0E91                     	;# 
   466  0E92                     	;# 
   467  0E93                     	;# 
   468  0E94                     	;# 
   469  0E95                     	;# 
   470  0E96                     	;# 
   471  0E97                     	;# 
   472  0E9C                     	;# 
   473  0E9D                     	;# 
   474  0E9E                     	;# 
   475  0EA1                     	;# 
   476  0EA2                     	;# 
   477  0EA3                     	;# 
   478  0EA4                     	;# 
   479  0EA5                     	;# 
   480  0EA9                     	;# 
   481  0EAA                     	;# 
   482  0EAB                     	;# 
   483  0EAC                     	;# 
   484  0EB1                     	;# 
   485  0EB2                     	;# 
   486  0EB3                     	;# 
   487  0EB8                     	;# 
   488  0EB9                     	;# 
   489  0EBA                     	;# 
   490  0EBB                     	;# 
   491  0EBC                     	;# 
   492  0EBD                     	;# 
   493  0EBE                     	;# 
   494  0EC3                     	;# 
   495  0EC5                     	;# 
   496  0EC6                     	;# 
   497  0EC7                     	;# 
   498  0EC8                     	;# 
   499  0EC9                     	;# 
   500  0ECA                     	;# 
   501  0ECB                     	;# 
   502  0ECC                     	;# 
   503  0F10                     	;# 
   504  0F11                     	;# 
   505  0F12                     	;# 
   506  0F13                     	;# 
   507  0F14                     	;# 
   508  0F15                     	;# 
   509  0F16                     	;# 
   510  0F17                     	;# 
   511  0F18                     	;# 
   512  0F19                     	;# 
   513  0F1A                     	;# 
   514  0F1B                     	;# 
   515  0F1C                     	;# 
   516  0F1D                     	;# 
   517  0F1E                     	;# 
   518  0F1F                     	;# 
   519  0F20                     	;# 
   520  0F21                     	;# 
   521  0F22                     	;# 
   522  0F23                     	;# 
   523  0F24                     	;# 
   524  0F25                     	;# 
   525  0F26                     	;# 
   526  0F27                     	;# 
   527  0F38                     	;# 
   528  0F39                     	;# 
   529  0F3A                     	;# 
   530  0F3B                     	;# 
   531  0F3C                     	;# 
   532  0F3D                     	;# 
   533  0F3E                     	;# 
   534  0F3F                     	;# 
   535  0F40                     	;# 
   536  0F41                     	;# 
   537  0F43                     	;# 
   538  0F44                     	;# 
   539  0F45                     	;# 
   540  0F46                     	;# 
   541  0F47                     	;# 
   542  0F48                     	;# 
   543  0F49                     	;# 
   544  0F4A                     	;# 
   545  0F4B                     	;# 
   546  0F4C                     	;# 
   547  0F4E                     	;# 
   548  0F4F                     	;# 
   549  0F50                     	;# 
   550  0F51                     	;# 
   551  0F52                     	;# 
   552  0F53                     	;# 
   553  0F54                     	;# 
   554  0F55                     	;# 
   555  0F56                     	;# 
   556  0F57                     	;# 
   557  0F65                     	;# 
   558  0F68                     	;# 
   559  0F69                     	;# 
   560  0F6A                     	;# 
   561  0F6B                     	;# 
   562  0FE4                     	;# 
   563  0FE5                     	;# 
   564  0FE6                     	;# 
   565  0FE7                     	;# 
   566  0FE8                     	;# 
   567  0FE9                     	;# 
   568  0FEA                     	;# 
   569  0FEB                     	;# 
   570  0FED                     	;# 
   571  0FEE                     	;# 
   572  0FEF                     	;# 
   573  0000                     	;# 
   574  0001                     	;# 
   575  0002                     	;# 
   576  0003                     	;# 
   577  0004                     	;# 
   578  0005                     	;# 
   579  0006                     	;# 
   580  0007                     	;# 
   581  0008                     	;# 
   582  0009                     	;# 
   583  000A                     	;# 
   584  000B                     	;# 
   585  000C                     	;# 
   586  000D                     	;# 
   587  000E                     	;# 
   588  0010                     	;# 
   589  0011                     	;# 
   590  0012                     	;# 
   591  0013                     	;# 
   592  0016                     	;# 
   593  0017                     	;# 
   594  0018                     	;# 
   595  001C                     	;# 
   596  001C                     	;# 
   597  001D                     	;# 
   598  001D                     	;# 
   599  001E                     	;# 
   600  001F                     	;# 
   601  008C                     	;# 
   602  008C                     	;# 
   603  008D                     	;# 
   604  008E                     	;# 
   605  008E                     	;# 
   606  008F                     	;# 
   607  0090                     	;# 
   608  0090                     	;# 
   609  0091                     	;# 
   610  0093                     	;# 
   611  0094                     	;# 
   612  0095                     	;# 
   613  0096                     	;# 
   614  0097                     	;# 
   615  0098                     	;# 
   616  0099                     	;# 
   617  009A                     	;# 
   618  009B                     	;# 
   619  009C                     	;# 
   620  009D                     	;# 
   621  009E                     	;# 
   622  010C                     	;# 
   623  010D                     	;# 
   624  010E                     	;# 
   625  010E                     	;# 
   626  010F                     	;# 
   627  0110                     	;# 
   628  0110                     	;# 
   629  0111                     	;# 
   630  0112                     	;# 
   631  0112                     	;# 
   632  0113                     	;# 
   633  0114                     	;# 
   634  0114                     	;# 
   635  0115                     	;# 
   636  0116                     	;# 
   637  0116                     	;# 
   638  0117                     	;# 
   639  0119                     	;# 
   640  0119                     	;# 
   641  0119                     	;# 
   642  011A                     	;# 
   643  011A                     	;# 
   644  011A                     	;# 
   645  011B                     	;# 
   646  011B                     	;# 
   647  011B                     	;# 
   648  011B                     	;# 
   649  011B                     	;# 
   650  011C                     	;# 
   651  011C                     	;# 
   652  011C                     	;# 
   653  011D                     	;# 
   654  011D                     	;# 
   655  011D                     	;# 
   656  011E                     	;# 
   657  011E                     	;# 
   658  011E                     	;# 
   659  011F                     	;# 
   660  011F                     	;# 
   661  011F                     	;# 
   662  011F                     	;# 
   663  011F                     	;# 
   664  018C                     	;# 
   665  018D                     	;# 
   666  018E                     	;# 
   667  018F                     	;# 
   668  0190                     	;# 
   669  0191                     	;# 
   670  0192                     	;# 
   671  0196                     	;# 
   672  0197                     	;# 
   673  0198                     	;# 
   674  0199                     	;# 
   675  019A                     	;# 
   676  019B                     	;# 
   677  019C                     	;# 
   678  020C                     	;# 
   679  020D                     	;# 
   680  020E                     	;# 
   681  020F                     	;# 
   682  020F                     	;# 
   683  0210                     	;# 
   684  0210                     	;# 
   685  0211                     	;# 
   686  0211                     	;# 
   687  0212                     	;# 
   688  0213                     	;# 
   689  0214                     	;# 
   690  0215                     	;# 
   691  0215                     	;# 
   692  0216                     	;# 
   693  0216                     	;# 
   694  0217                     	;# 
   695  0217                     	;# 
   696  0218                     	;# 
   697  0219                     	;# 
   698  021A                     	;# 
   699  021B                     	;# 
   700  021B                     	;# 
   701  021C                     	;# 
   702  021C                     	;# 
   703  021D                     	;# 
   704  021D                     	;# 
   705  021E                     	;# 
   706  021F                     	;# 
   707  028C                     	;# 
   708  028C                     	;# 
   709  028D                     	;# 
   710  028D                     	;# 
   711  028E                     	;# 
   712  028F                     	;# 
   713  0290                     	;# 
   714  0290                     	;# 
   715  0291                     	;# 
   716  0292                     	;# 
   717  0292                     	;# 
   718  0293                     	;# 
   719  0293                     	;# 
   720  0294                     	;# 
   721  0295                     	;# 
   722  0296                     	;# 
   723  0296                     	;# 
   724  0297                     	;# 
   725  0298                     	;# 
   726  0298                     	;# 
   727  0299                     	;# 
   728  0299                     	;# 
   729  029A                     	;# 
   730  029B                     	;# 
   731  029C                     	;# 
   732  029C                     	;# 
   733  029D                     	;# 
   734  030C                     	;# 
   735  030C                     	;# 
   736  030D                     	;# 
   737  030E                     	;# 
   738  030F                     	;# 
   739  0310                     	;# 
   740  0310                     	;# 
   741  0311                     	;# 
   742  0312                     	;# 
   743  0313                     	;# 
   744  0314                     	;# 
   745  0314                     	;# 
   746  0315                     	;# 
   747  0316                     	;# 
   748  0317                     	;# 
   749  0318                     	;# 
   750  0318                     	;# 
   751  0319                     	;# 
   752  031A                     	;# 
   753  031B                     	;# 
   754  031C                     	;# 
   755  031C                     	;# 
   756  031D                     	;# 
   757  031E                     	;# 
   758  031F                     	;# 
   759  038C                     	;# 
   760  038D                     	;# 
   761  038E                     	;# 
   762  0390                     	;# 
   763  0391                     	;# 
   764  0392                     	;# 
   765  040C                     	;# 
   766  040D                     	;# 
   767  040E                     	;# 
   768  040F                     	;# 
   769  0410                     	;# 
   770  0411                     	;# 
   771  0416                     	;# 
   772  0416                     	;# 
   773  0417                     	;# 
   774  0418                     	;# 
   775  0418                     	;# 
   776  0419                     	;# 
   777  041A                     	;# 
   778  041A                     	;# 
   779  041B                     	;# 
   780  041C                     	;# 
   781  041C                     	;# 
   782  041D                     	;# 
   783  041E                     	;# 
   784  041F                     	;# 
   785  048C                     	;# 
   786  048C                     	;# 
   787  048D                     	;# 
   788  048E                     	;# 
   789  048F                     	;# 
   790  048F                     	;# 
   791  0490                     	;# 
   792  0491                     	;# 
   793  0492                     	;# 
   794  0492                     	;# 
   795  0493                     	;# 
   796  0494                     	;# 
   797  0495                     	;# 
   798  0495                     	;# 
   799  0496                     	;# 
   800  0497                     	;# 
   801  0498                     	;# 
   802  0499                     	;# 
   803  049A                     	;# 
   804  049B                     	;# 
   805  049C                     	;# 
   806  049D                     	;# 
   807  050C                     	;# 
   808  050C                     	;# 
   809  050D                     	;# 
   810  050E                     	;# 
   811  050F                     	;# 
   812  050F                     	;# 
   813  0510                     	;# 
   814  0511                     	;# 
   815  0512                     	;# 
   816  0512                     	;# 
   817  0513                     	;# 
   818  0514                     	;# 
   819  0515                     	;# 
   820  0515                     	;# 
   821  0516                     	;# 
   822  0517                     	;# 
   823  0518                     	;# 
   824  0519                     	;# 
   825  051A                     	;# 
   826  051B                     	;# 
   827  051C                     	;# 
   828  051D                     	;# 
   829  058C                     	;# 
   830  058C                     	;# 
   831  058D                     	;# 
   832  058E                     	;# 
   833  058F                     	;# 
   834  058F                     	;# 
   835  0590                     	;# 
   836  0591                     	;# 
   837  0592                     	;# 
   838  0593                     	;# 
   839  060C                     	;# 
   840  060D                     	;# 
   841  060E                     	;# 
   842  060F                     	;# 
   843  0610                     	;# 
   844  0611                     	;# 
   845  0612                     	;# 
   846  0613                     	;# 
   847  0614                     	;# 
   848  0616                     	;# 
   849  0617                     	;# 
   850  0618                     	;# 
   851  0619                     	;# 
   852  061A                     	;# 
   853  061B                     	;# 
   854  061C                     	;# 
   855  061D                     	;# 
   856  061E                     	;# 
   857  068C                     	;# 
   858  068D                     	;# 
   859  068E                     	;# 
   860  068F                     	;# 
   861  0690                     	;# 
   862  0691                     	;# 
   863  0692                     	;# 
   864  0693                     	;# 
   865  0694                     	;# 
   866  070C                     	;# 
   867  070D                     	;# 
   868  070E                     	;# 
   869  070F                     	;# 
   870  0710                     	;# 
   871  0711                     	;# 
   872  0712                     	;# 
   873  0713                     	;# 
   874  0714                     	;# 
   875  0716                     	;# 
   876  0717                     	;# 
   877  0718                     	;# 
   878  0719                     	;# 
   879  071A                     	;# 
   880  071B                     	;# 
   881  071C                     	;# 
   882  071D                     	;# 
   883  071E                     	;# 
   884  0796                     	;# 
   885  0797                     	;# 
   886  0798                     	;# 
   887  0799                     	;# 
   888  079A                     	;# 
   889  079B                     	;# 
   890  080C                     	;# 
   891  080D                     	;# 
   892  080E                     	;# 
   893  080F                     	;# 
   894  0810                     	;# 
   895  0811                     	;# 
   896  0812                     	;# 
   897  0813                     	;# 
   898  0814                     	;# 
   899  081A                     	;# 
   900  081B                     	;# 
   901  081C                     	;# 
   902  081D                     	;# 
   903  081E                     	;# 
   904  081F                     	;# 
   905  088C                     	;# 
   906  088D                     	;# 
   907  088E                     	;# 
   908  088F                     	;# 
   909  0890                     	;# 
   910  0891                     	;# 
   911  0892                     	;# 
   912  0893                     	;# 
   913  0895                     	;# 
   914  0896                     	;# 
   915  0897                     	;# 
   916  0898                     	;# 
   917  0899                     	;# 
   918  089A                     	;# 
   919  089B                     	;# 
   920  090C                     	;# 
   921  090E                     	;# 
   922  090F                     	;# 
   923  091F                     	;# 
   924  091F                     	;# 
   925  098F                     	;# 
   926  098F                     	;# 
   927  0990                     	;# 
   928  0991                     	;# 
   929  0992                     	;# 
   930  0993                     	;# 
   931  0994                     	;# 
   932  0995                     	;# 
   933  0996                     	;# 
   934  0997                     	;# 
   935  0E0F                     	;# 
   936  0E10                     	;# 
   937  0E11                     	;# 
   938  0E12                     	;# 
   939  0E13                     	;# 
   940  0E14                     	;# 
   941  0E15                     	;# 
   942  0E16                     	;# 
   943  0E17                     	;# 
   944  0E18                     	;# 
   945  0E19                     	;# 
   946  0E1A                     	;# 
   947  0E1B                     	;# 
   948  0E1C                     	;# 
   949  0E1D                     	;# 
   950  0E1E                     	;# 
   951  0E1F                     	;# 
   952  0E20                     	;# 
   953  0E21                     	;# 
   954  0E22                     	;# 
   955  0E23                     	;# 
   956  0E24                     	;# 
   957  0E25                     	;# 
   958  0E26                     	;# 
   959  0E27                     	;# 
   960  0E28                     	;# 
   961  0E29                     	;# 
   962  0E2A                     	;# 
   963  0E2B                     	;# 
   964  0E2C                     	;# 
   965  0E2D                     	;# 
   966  0E2E                     	;# 
   967  0E2F                     	;# 
   968  0E30                     	;# 
   969  0E31                     	;# 
   970  0E32                     	;# 
   971  0E33                     	;# 
   972  0E34                     	;# 
   973  0E35                     	;# 
   974  0E36                     	;# 
   975  0E37                     	;# 
   976  0E8F                     	;# 
   977  0E90                     	;# 
   978  0E91                     	;# 
   979  0E92                     	;# 
   980  0E93                     	;# 
   981  0E94                     	;# 
   982  0E95                     	;# 
   983  0E96                     	;# 
   984  0E97                     	;# 
   985  0E9C                     	;# 
   986  0E9D                     	;# 
   987  0E9E                     	;# 
   988  0EA1                     	;# 
   989  0EA2                     	;# 
   990  0EA3                     	;# 
   991  0EA4                     	;# 
   992  0EA5                     	;# 
   993  0EA9                     	;# 
   994  0EAA                     	;# 
   995  0EAB                     	;# 
   996  0EAC                     	;# 
   997  0EB1                     	;# 
   998  0EB2                     	;# 
   999  0EB3                     	;# 
  1000  0EB8                     	;# 
  1001  0EB9                     	;# 
  1002  0EBA                     	;# 
  1003  0EBB                     	;# 
  1004  0EBC                     	;# 
  1005  0EBD                     	;# 
  1006  0EBE                     	;# 
  1007  0EC3                     	;# 
  1008  0EC5                     	;# 
  1009  0EC6                     	;# 
  1010  0EC7                     	;# 
  1011  0EC8                     	;# 
  1012  0EC9                     	;# 
  1013  0ECA                     	;# 
  1014  0ECB                     	;# 
  1015  0ECC                     	;# 
  1016  0F10                     	;# 
  1017  0F11                     	;# 
  1018  0F12                     	;# 
  1019  0F13                     	;# 
  1020  0F14                     	;# 
  1021  0F15                     	;# 
  1022  0F16                     	;# 
  1023  0F17                     	;# 
  1024  0F18                     	;# 
  1025  0F19                     	;# 
  1026  0F1A                     	;# 
  1027  0F1B                     	;# 
  1028  0F1C                     	;# 
  1029  0F1D                     	;# 
  1030  0F1E                     	;# 
  1031  0F1F                     	;# 
  1032  0F20                     	;# 
  1033  0F21                     	;# 
  1034  0F22                     	;# 
  1035  0F23                     	;# 
  1036  0F24                     	;# 
  1037  0F25                     	;# 
  1038  0F26                     	;# 
  1039  0F27                     	;# 
  1040  0F38                     	;# 
  1041  0F39                     	;# 
  1042  0F3A                     	;# 
  1043  0F3B                     	;# 
  1044  0F3C                     	;# 
  1045  0F3D                     	;# 
  1046  0F3E                     	;# 
  1047  0F3F                     	;# 
  1048  0F40                     	;# 
  1049  0F41                     	;# 
  1050  0F43                     	;# 
  1051  0F44                     	;# 
  1052  0F45                     	;# 
  1053  0F46                     	;# 
  1054  0F47                     	;# 
  1055  0F48                     	;# 
  1056  0F49                     	;# 
  1057  0F4A                     	;# 
  1058  0F4B                     	;# 
  1059  0F4C                     	;# 
  1060  0F4E                     	;# 
  1061  0F4F                     	;# 
  1062  0F50                     	;# 
  1063  0F51                     	;# 
  1064  0F52                     	;# 
  1065  0F53                     	;# 
  1066  0F54                     	;# 
  1067  0F55                     	;# 
  1068  0F56                     	;# 
  1069  0F57                     	;# 
  1070  0F65                     	;# 
  1071  0F68                     	;# 
  1072  0F69                     	;# 
  1073  0F6A                     	;# 
  1074  0F6B                     	;# 
  1075  0FE4                     	;# 
  1076  0FE5                     	;# 
  1077  0FE6                     	;# 
  1078  0FE7                     	;# 
  1079  0FE8                     	;# 
  1080  0FE9                     	;# 
  1081  0FEA                     	;# 
  1082  0FEB                     	;# 
  1083  0FED                     	;# 
  1084  0FEE                     	;# 
  1085  0FEF                     	;# 
  1086  0000                     	;# 
  1087  0001                     	;# 
  1088  0002                     	;# 
  1089  0003                     	;# 
  1090  0004                     	;# 
  1091  0005                     	;# 
  1092  0006                     	;# 
  1093  0007                     	;# 
  1094  0008                     	;# 
  1095  0009                     	;# 
  1096  000A                     	;# 
  1097  000B                     	;# 
  1098  000C                     	;# 
  1099  000D                     	;# 
  1100  000E                     	;# 
  1101  0010                     	;# 
  1102  0011                     	;# 
  1103  0012                     	;# 
  1104  0013                     	;# 
  1105  0016                     	;# 
  1106  0017                     	;# 
  1107  0018                     	;# 
  1108  001C                     	;# 
  1109  001C                     	;# 
  1110  001D                     	;# 
  1111  001D                     	;# 
  1112  001E                     	;# 
  1113  001F                     	;# 
  1114  008C                     	;# 
  1115  008C                     	;# 
  1116  008D                     	;# 
  1117  008E                     	;# 
  1118  008E                     	;# 
  1119  008F                     	;# 
  1120  0090                     	;# 
  1121  0090                     	;# 
  1122  0091                     	;# 
  1123  0093                     	;# 
  1124  0094                     	;# 
  1125  0095                     	;# 
  1126  0096                     	;# 
  1127  0097                     	;# 
  1128  0098                     	;# 
  1129  0099                     	;# 
  1130  009A                     	;# 
  1131  009B                     	;# 
  1132  009C                     	;# 
  1133  009D                     	;# 
  1134  009E                     	;# 
  1135  010C                     	;# 
  1136  010D                     	;# 
  1137  010E                     	;# 
  1138  010E                     	;# 
  1139  010F                     	;# 
  1140  0110                     	;# 
  1141  0110                     	;# 
  1142  0111                     	;# 
  1143  0112                     	;# 
  1144  0112                     	;# 
  1145  0113                     	;# 
  1146  0114                     	;# 
  1147  0114                     	;# 
  1148  0115                     	;# 
  1149  0116                     	;# 
  1150  0116                     	;# 
  1151  0117                     	;# 
  1152  0119                     	;# 
  1153  0119                     	;# 
  1154  0119                     	;# 
  1155  011A                     	;# 
  1156  011A                     	;# 
  1157  011A                     	;# 
  1158  011B                     	;# 
  1159  011B                     	;# 
  1160  011B                     	;# 
  1161  011B                     	;# 
  1162  011B                     	;# 
  1163  011C                     	;# 
  1164  011C                     	;# 
  1165  011C                     	;# 
  1166  011D                     	;# 
  1167  011D                     	;# 
  1168  011D                     	;# 
  1169  011E                     	;# 
  1170  011E                     	;# 
  1171  011E                     	;# 
  1172  011F                     	;# 
  1173  011F                     	;# 
  1174  011F                     	;# 
  1175  011F                     	;# 
  1176  011F                     	;# 
  1177  018C                     	;# 
  1178  018D                     	;# 
  1179  018E                     	;# 
  1180  018F                     	;# 
  1181  0190                     	;# 
  1182  0191                     	;# 
  1183  0192                     	;# 
  1184  0196                     	;# 
  1185  0197                     	;# 
  1186  0198                     	;# 
  1187  0199                     	;# 
  1188  019A                     	;# 
  1189  019B                     	;# 
  1190  019C                     	;# 
  1191  020C                     	;# 
  1192  020D                     	;# 
  1193  020E                     	;# 
  1194  020F                     	;# 
  1195  020F                     	;# 
  1196  0210                     	;# 
  1197  0210                     	;# 
  1198  0211                     	;# 
  1199  0211                     	;# 
  1200  0212                     	;# 
  1201  0213                     	;# 
  1202  0214                     	;# 
  1203  0215                     	;# 
  1204  0215                     	;# 
  1205  0216                     	;# 
  1206  0216                     	;# 
  1207  0217                     	;# 
  1208  0217                     	;# 
  1209  0218                     	;# 
  1210  0219                     	;# 
  1211  021A                     	;# 
  1212  021B                     	;# 
  1213  021B                     	;# 
  1214  021C                     	;# 
  1215  021C                     	;# 
  1216  021D                     	;# 
  1217  021D                     	;# 
  1218  021E                     	;# 
  1219  021F                     	;# 
  1220  028C                     	;# 
  1221  028C                     	;# 
  1222  028D                     	;# 
  1223  028D                     	;# 
  1224  028E                     	;# 
  1225  028F                     	;# 
  1226  0290                     	;# 
  1227  0290                     	;# 
  1228  0291                     	;# 
  1229  0292                     	;# 
  1230  0292                     	;# 
  1231  0293                     	;# 
  1232  0293                     	;# 
  1233  0294                     	;# 
  1234  0295                     	;# 
  1235  0296                     	;# 
  1236  0296                     	;# 
  1237  0297                     	;# 
  1238  0298                     	;# 
  1239  0298                     	;# 
  1240  0299                     	;# 
  1241  0299                     	;# 
  1242  029A                     	;# 
  1243  029B                     	;# 
  1244  029C                     	;# 
  1245  029C                     	;# 
  1246  029D                     	;# 
  1247  030C                     	;# 
  1248  030C                     	;# 
  1249  030D                     	;# 
  1250  030E                     	;# 
  1251  030F                     	;# 
  1252  0310                     	;# 
  1253  0310                     	;# 
  1254  0311                     	;# 
  1255  0312                     	;# 
  1256  0313                     	;# 
  1257  0314                     	;# 
  1258  0314                     	;# 
  1259  0315                     	;# 
  1260  0316                     	;# 
  1261  0317                     	;# 
  1262  0318                     	;# 
  1263  0318                     	;# 
  1264  0319                     	;# 
  1265  031A                     	;# 
  1266  031B                     	;# 
  1267  031C                     	;# 
  1268  031C                     	;# 
  1269  031D                     	;# 
  1270  031E                     	;# 
  1271  031F                     	;# 
  1272  038C                     	;# 
  1273  038D                     	;# 
  1274  038E                     	;# 
  1275  0390                     	;# 
  1276  0391                     	;# 
  1277  0392                     	;# 
  1278  040C                     	;# 
  1279  040D                     	;# 
  1280  040E                     	;# 
  1281  040F                     	;# 
  1282  0410                     	;# 
  1283  0411                     	;# 
  1284  0416                     	;# 
  1285  0416                     	;# 
  1286  0417                     	;# 
  1287  0418                     	;# 
  1288  0418                     	;# 
  1289  0419                     	;# 
  1290  041A                     	;# 
  1291  041A                     	;# 
  1292  041B                     	;# 
  1293  041C                     	;# 
  1294  041C                     	;# 
  1295  041D                     	;# 
  1296  041E                     	;# 
  1297  041F                     	;# 
  1298  048C                     	;# 
  1299  048C                     	;# 
  1300  048D                     	;# 
  1301  048E                     	;# 
  1302  048F                     	;# 
  1303  048F                     	;# 
  1304  0490                     	;# 
  1305  0491                     	;# 
  1306  0492                     	;# 
  1307  0492                     	;# 
  1308  0493                     	;# 
  1309  0494                     	;# 
  1310  0495                     	;# 
  1311  0495                     	;# 
  1312  0496                     	;# 
  1313  0497                     	;# 
  1314  0498                     	;# 
  1315  0499                     	;# 
  1316  049A                     	;# 
  1317  049B                     	;# 
  1318  049C                     	;# 
  1319  049D                     	;# 
  1320  050C                     	;# 
  1321  050C                     	;# 
  1322  050D                     	;# 
  1323  050E                     	;# 
  1324  050F                     	;# 
  1325  050F                     	;# 
  1326  0510                     	;# 
  1327  0511                     	;# 
  1328  0512                     	;# 
  1329  0512                     	;# 
  1330  0513                     	;# 
  1331  0514                     	;# 
  1332  0515                     	;# 
  1333  0515                     	;# 
  1334  0516                     	;# 
  1335  0517                     	;# 
  1336  0518                     	;# 
  1337  0519                     	;# 
  1338  051A                     	;# 
  1339  051B                     	;# 
  1340  051C                     	;# 
  1341  051D                     	;# 
  1342  058C                     	;# 
  1343  058C                     	;# 
  1344  058D                     	;# 
  1345  058E                     	;# 
  1346  058F                     	;# 
  1347  058F                     	;# 
  1348  0590                     	;# 
  1349  0591                     	;# 
  1350  0592                     	;# 
  1351  0593                     	;# 
  1352  060C                     	;# 
  1353  060D                     	;# 
  1354  060E                     	;# 
  1355  060F                     	;# 
  1356  0610                     	;# 
  1357  0611                     	;# 
  1358  0612                     	;# 
  1359  0613                     	;# 
  1360  0614                     	;# 
  1361  0616                     	;# 
  1362  0617                     	;# 
  1363  0618                     	;# 
  1364  0619                     	;# 
  1365  061A                     	;# 
  1366  061B                     	;# 
  1367  061C                     	;# 
  1368  061D                     	;# 
  1369  061E                     	;# 
  1370  068C                     	;# 
  1371  068D                     	;# 
  1372  068E                     	;# 
  1373  068F                     	;# 
  1374  0690                     	;# 
  1375  0691                     	;# 
  1376  0692                     	;# 
  1377  0693                     	;# 
  1378  0694                     	;# 
  1379  070C                     	;# 
  1380  070D                     	;# 
  1381  070E                     	;# 
  1382  070F                     	;# 
  1383  0710                     	;# 
  1384  0711                     	;# 
  1385  0712                     	;# 
  1386  0713                     	;# 
  1387  0714                     	;# 
  1388  0716                     	;# 
  1389  0717                     	;# 
  1390  0718                     	;# 
  1391  0719                     	;# 
  1392  071A                     	;# 
  1393  071B                     	;# 
  1394  071C                     	;# 
  1395  071D                     	;# 
  1396  071E                     	;# 
  1397  0796                     	;# 
  1398  0797                     	;# 
  1399  0798                     	;# 
  1400  0799                     	;# 
  1401  079A                     	;# 
  1402  079B                     	;# 
  1403  080C                     	;# 
  1404  080D                     	;# 
  1405  080E                     	;# 
  1406  080F                     	;# 
  1407  0810                     	;# 
  1408  0811                     	;# 
  1409  0812                     	;# 
  1410  0813                     	;# 
  1411  0814                     	;# 
  1412  081A                     	;# 
  1413  081B                     	;# 
  1414  081C                     	;# 
  1415  081D                     	;# 
  1416  081E                     	;# 
  1417  081F                     	;# 
  1418  088C                     	;# 
  1419  088D                     	;# 
  1420  088E                     	;# 
  1421  088F                     	;# 
  1422  0890                     	;# 
  1423  0891                     	;# 
  1424  0892                     	;# 
  1425  0893                     	;# 
  1426  0895                     	;# 
  1427  0896                     	;# 
  1428  0897                     	;# 
  1429  0898                     	;# 
  1430  0899                     	;# 
  1431  089A                     	;# 
  1432  089B                     	;# 
  1433  090C                     	;# 
  1434  090E                     	;# 
  1435  090F                     	;# 
  1436  091F                     	;# 
  1437  091F                     	;# 
  1438  098F                     	;# 
  1439  098F                     	;# 
  1440  0990                     	;# 
  1441  0991                     	;# 
  1442  0992                     	;# 
  1443  0993                     	;# 
  1444  0994                     	;# 
  1445  0995                     	;# 
  1446  0996                     	;# 
  1447  0997                     	;# 
  1448  0E0F                     	;# 
  1449  0E10                     	;# 
  1450  0E11                     	;# 
  1451  0E12                     	;# 
  1452  0E13                     	;# 
  1453  0E14                     	;# 
  1454  0E15                     	;# 
  1455  0E16                     	;# 
  1456  0E17                     	;# 
  1457  0E18                     	;# 
  1458  0E19                     	;# 
  1459  0E1A                     	;# 
  1460  0E1B                     	;# 
  1461  0E1C                     	;# 
  1462  0E1D                     	;# 
  1463  0E1E                     	;# 
  1464  0E1F                     	;# 
  1465  0E20                     	;# 
  1466  0E21                     	;# 
  1467  0E22                     	;# 
  1468  0E23                     	;# 
  1469  0E24                     	;# 
  1470  0E25                     	;# 
  1471  0E26                     	;# 
  1472  0E27                     	;# 
  1473  0E28                     	;# 
  1474  0E29                     	;# 
  1475  0E2A                     	;# 
  1476  0E2B                     	;# 
  1477  0E2C                     	;# 
  1478  0E2D                     	;# 
  1479  0E2E                     	;# 
  1480  0E2F                     	;# 
  1481  0E30                     	;# 
  1482  0E31                     	;# 
  1483  0E32                     	;# 
  1484  0E33                     	;# 
  1485  0E34                     	;# 
  1486  0E35                     	;# 
  1487  0E36                     	;# 
  1488  0E37                     	;# 
  1489  0E8F                     	;# 
  1490  0E90                     	;# 
  1491  0E91                     	;# 
  1492  0E92                     	;# 
  1493  0E93                     	;# 
  1494  0E94                     	;# 
  1495  0E95                     	;# 
  1496  0E96                     	;# 
  1497  0E97                     	;# 
  1498  0E9C                     	;# 
  1499  0E9D                     	;# 
  1500  0E9E                     	;# 
  1501  0EA1                     	;# 
  1502  0EA2                     	;# 
  1503  0EA3                     	;# 
  1504  0EA4                     	;# 
  1505  0EA5                     	;# 
  1506  0EA9                     	;# 
  1507  0EAA                     	;# 
  1508  0EAB                     	;# 
  1509  0EAC                     	;# 
  1510  0EB1                     	;# 
  1511  0EB2                     	;# 
  1512  0EB3                     	;# 
  1513  0EB8                     	;# 
  1514  0EB9                     	;# 
  1515  0EBA                     	;# 
  1516  0EBB                     	;# 
  1517  0EBC                     	;# 
  1518  0EBD                     	;# 
  1519  0EBE                     	;# 
  1520  0EC3                     	;# 
  1521  0EC5                     	;# 
  1522  0EC6                     	;# 
  1523  0EC7                     	;# 
  1524  0EC8                     	;# 
  1525  0EC9                     	;# 
  1526  0ECA                     	;# 
  1527  0ECB                     	;# 
  1528  0ECC                     	;# 
  1529  0F10                     	;# 
  1530  0F11                     	;# 
  1531  0F12                     	;# 
  1532  0F13                     	;# 
  1533  0F14                     	;# 
  1534  0F15                     	;# 
  1535  0F16                     	;# 
  1536  0F17                     	;# 
  1537  0F18                     	;# 
  1538  0F19                     	;# 
  1539  0F1A                     	;# 
  1540  0F1B                     	;# 
  1541  0F1C                     	;# 
  1542  0F1D                     	;# 
  1543  0F1E                     	;# 
  1544  0F1F                     	;# 
  1545  0F20                     	;# 
  1546  0F21                     	;# 
  1547  0F22                     	;# 
  1548  0F23                     	;# 
  1549  0F24                     	;# 
  1550  0F25                     	;# 
  1551  0F26                     	;# 
  1552  0F27                     	;# 
  1553  0F38                     	;# 
  1554  0F39                     	;# 
  1555  0F3A                     	;# 
  1556  0F3B                     	;# 
  1557  0F3C                     	;# 
  1558  0F3D                     	;# 
  1559  0F3E                     	;# 
  1560  0F3F                     	;# 
  1561  0F40                     	;# 
  1562  0F41                     	;# 
  1563  0F43                     	;# 
  1564  0F44                     	;# 
  1565  0F45                     	;# 
  1566  0F46                     	;# 
  1567  0F47                     	;# 
  1568  0F48                     	;# 
  1569  0F49                     	;# 
  1570  0F4A                     	;# 
  1571  0F4B                     	;# 
  1572  0F4C                     	;# 
  1573  0F4E                     	;# 
  1574  0F4F                     	;# 
  1575  0F50                     	;# 
  1576  0F51                     	;# 
  1577  0F52                     	;# 
  1578  0F53                     	;# 
  1579  0F54                     	;# 
  1580  0F55                     	;# 
  1581  0F56                     	;# 
  1582  0F57                     	;# 
  1583  0F65                     	;# 
  1584  0F68                     	;# 
  1585  0F69                     	;# 
  1586  0F6A                     	;# 
  1587  0F6B                     	;# 
  1588  0FE4                     	;# 
  1589  0FE5                     	;# 
  1590  0FE6                     	;# 
  1591  0FE7                     	;# 
  1592  0FE8                     	;# 
  1593  0FE9                     	;# 
  1594  0FEA                     	;# 
  1595  0FEB                     	;# 
  1596  0FED                     	;# 
  1597  0FEE                     	;# 
  1598  0FEF                     	;# 
  1599  0000                     	;# 
  1600  0001                     	;# 
  1601  0002                     	;# 
  1602  0003                     	;# 
  1603  0004                     	;# 
  1604  0005                     	;# 
  1605  0006                     	;# 
  1606  0007                     	;# 
  1607  0008                     	;# 
  1608  0009                     	;# 
  1609  000A                     	;# 
  1610  000B                     	;# 
  1611  000C                     	;# 
  1612  000D                     	;# 
  1613  000E                     	;# 
  1614  0010                     	;# 
  1615  0011                     	;# 
  1616  0012                     	;# 
  1617  0013                     	;# 
  1618  0016                     	;# 
  1619  0017                     	;# 
  1620  0018                     	;# 
  1621  001C                     	;# 
  1622  001C                     	;# 
  1623  001D                     	;# 
  1624  001D                     	;# 
  1625  001E                     	;# 
  1626  001F                     	;# 
  1627  008C                     	;# 
  1628  008C                     	;# 
  1629  008D                     	;# 
  1630  008E                     	;# 
  1631  008E                     	;# 
  1632  008F                     	;# 
  1633  0090                     	;# 
  1634  0090                     	;# 
  1635  0091                     	;# 
  1636  0093                     	;# 
  1637  0094                     	;# 
  1638  0095                     	;# 
  1639  0096                     	;# 
  1640  0097                     	;# 
  1641  0098                     	;# 
  1642  0099                     	;# 
  1643  009A                     	;# 
  1644  009B                     	;# 
  1645  009C                     	;# 
  1646  009D                     	;# 
  1647  009E                     	;# 
  1648  010C                     	;# 
  1649  010D                     	;# 
  1650  010E                     	;# 
  1651  010E                     	;# 
  1652  010F                     	;# 
  1653  0110                     	;# 
  1654  0110                     	;# 
  1655  0111                     	;# 
  1656  0112                     	;# 
  1657  0112                     	;# 
  1658  0113                     	;# 
  1659  0114                     	;# 
  1660  0114                     	;# 
  1661  0115                     	;# 
  1662  0116                     	;# 
  1663  0116                     	;# 
  1664  0117                     	;# 
  1665  0119                     	;# 
  1666  0119                     	;# 
  1667  0119                     	;# 
  1668  011A                     	;# 
  1669  011A                     	;# 
  1670  011A                     	;# 
  1671  011B                     	;# 
  1672  011B                     	;# 
  1673  011B                     	;# 
  1674  011B                     	;# 
  1675  011B                     	;# 
  1676  011C                     	;# 
  1677  011C                     	;# 
  1678  011C                     	;# 
  1679  011D                     	;# 
  1680  011D                     	;# 
  1681  011D                     	;# 
  1682  011E                     	;# 
  1683  011E                     	;# 
  1684  011E                     	;# 
  1685  011F                     	;# 
  1686  011F                     	;# 
  1687  011F                     	;# 
  1688  011F                     	;# 
  1689  011F                     	;# 
  1690  018C                     	;# 
  1691  018D                     	;# 
  1692  018E                     	;# 
  1693  018F                     	;# 
  1694  0190                     	;# 
  1695  0191                     	;# 
  1696  0192                     	;# 
  1697  0196                     	;# 
  1698  0197                     	;# 
  1699  0198                     	;# 
  1700  0199                     	;# 
  1701  019A                     	;# 
  1702  019B                     	;# 
  1703  019C                     	;# 
  1704  020C                     	;# 
  1705  020D                     	;# 
  1706  020E                     	;# 
  1707  020F                     	;# 
  1708  020F                     	;# 
  1709  0210                     	;# 
  1710  0210                     	;# 
  1711  0211                     	;# 
  1712  0211                     	;# 
  1713  0212                     	;# 
  1714  0213                     	;# 
  1715  0214                     	;# 
  1716  0215                     	;# 
  1717  0215                     	;# 
  1718  0216                     	;# 
  1719  0216                     	;# 
  1720  0217                     	;# 
  1721  0217                     	;# 
  1722  0218                     	;# 
  1723  0219                     	;# 
  1724  021A                     	;# 
  1725  021B                     	;# 
  1726  021B                     	;# 
  1727  021C                     	;# 
  1728  021C                     	;# 
  1729  021D                     	;# 
  1730  021D                     	;# 
  1731  021E                     	;# 
  1732  021F                     	;# 
  1733  028C                     	;# 
  1734  028C                     	;# 
  1735  028D                     	;# 
  1736  028D                     	;# 
  1737  028E                     	;# 
  1738  028F                     	;# 
  1739  0290                     	;# 
  1740  0290                     	;# 
  1741  0291                     	;# 
  1742  0292                     	;# 
  1743  0292                     	;# 
  1744  0293                     	;# 
  1745  0293                     	;# 
  1746  0294                     	;# 
  1747  0295                     	;# 
  1748  0296                     	;# 
  1749  0296                     	;# 
  1750  0297                     	;# 
  1751  0298                     	;# 
  1752  0298                     	;# 
  1753  0299                     	;# 
  1754  0299                     	;# 
  1755  029A                     	;# 
  1756  029B                     	;# 
  1757  029C                     	;# 
  1758  029C                     	;# 
  1759  029D                     	;# 
  1760  030C                     	;# 
  1761  030C                     	;# 
  1762  030D                     	;# 
  1763  030E                     	;# 
  1764  030F                     	;# 
  1765  0310                     	;# 
  1766  0310                     	;# 
  1767  0311                     	;# 
  1768  0312                     	;# 
  1769  0313                     	;# 
  1770  0314                     	;# 
  1771  0314                     	;# 
  1772  0315                     	;# 
  1773  0316                     	;# 
  1774  0317                     	;# 
  1775  0318                     	;# 
  1776  0318                     	;# 
  1777  0319                     	;# 
  1778  031A                     	;# 
  1779  031B                     	;# 
  1780  031C                     	;# 
  1781  031C                     	;# 
  1782  031D                     	;# 
  1783  031E                     	;# 
  1784  031F                     	;# 
  1785  038C                     	;# 
  1786  038D                     	;# 
  1787  038E                     	;# 
  1788  0390                     	;# 
  1789  0391                     	;# 
  1790  0392                     	;# 
  1791  040C                     	;# 
  1792  040D                     	;# 
  1793  040E                     	;# 
  1794  040F                     	;# 
  1795  0410                     	;# 
  1796  0411                     	;# 
  1797  0416                     	;# 
  1798  0416                     	;# 
  1799  0417                     	;# 
  1800  0418                     	;# 
  1801  0418                     	;# 
  1802  0419                     	;# 
  1803  041A                     	;# 
  1804  041A                     	;# 
  1805  041B                     	;# 
  1806  041C                     	;# 
  1807  041C                     	;# 
  1808  041D                     	;# 
  1809  041E                     	;# 
  1810  041F                     	;# 
  1811  048C                     	;# 
  1812  048C                     	;# 
  1813  048D                     	;# 
  1814  048E                     	;# 
  1815  048F                     	;# 
  1816  048F                     	;# 
  1817  0490                     	;# 
  1818  0491                     	;# 
  1819  0492                     	;# 
  1820  0492                     	;# 
  1821  0493                     	;# 
  1822  0494                     	;# 
  1823  0495                     	;# 
  1824  0495                     	;# 
  1825  0496                     	;# 
  1826  0497                     	;# 
  1827  0498                     	;# 
  1828  0499                     	;# 
  1829  049A                     	;# 
  1830  049B                     	;# 
  1831  049C                     	;# 
  1832  049D                     	;# 
  1833  050C                     	;# 
  1834  050C                     	;# 
  1835  050D                     	;# 
  1836  050E                     	;# 
  1837  050F                     	;# 
  1838  050F                     	;# 
  1839  0510                     	;# 
  1840  0511                     	;# 
  1841  0512                     	;# 
  1842  0512                     	;# 
  1843  0513                     	;# 
  1844  0514                     	;# 
  1845  0515                     	;# 
  1846  0515                     	;# 
  1847  0516                     	;# 
  1848  0517                     	;# 
  1849  0518                     	;# 
  1850  0519                     	;# 
  1851  051A                     	;# 
  1852  051B                     	;# 
  1853  051C                     	;# 
  1854  051D                     	;# 
  1855  058C                     	;# 
  1856  058C                     	;# 
  1857  058D                     	;# 
  1858  058E                     	;# 
  1859  058F                     	;# 
  1860  058F                     	;# 
  1861  0590                     	;# 
  1862  0591                     	;# 
  1863  0592                     	;# 
  1864  0593                     	;# 
  1865  060C                     	;# 
  1866  060D                     	;# 
  1867  060E                     	;# 
  1868  060F                     	;# 
  1869  0610                     	;# 
  1870  0611                     	;# 
  1871  0612                     	;# 
  1872  0613                     	;# 
  1873  0614                     	;# 
  1874  0616                     	;# 
  1875  0617                     	;# 
  1876  0618                     	;# 
  1877  0619                     	;# 
  1878  061A                     	;# 
  1879  061B                     	;# 
  1880  061C                     	;# 
  1881  061D                     	;# 
  1882  061E                     	;# 
  1883  068C                     	;# 
  1884  068D                     	;# 
  1885  068E                     	;# 
  1886  068F                     	;# 
  1887  0690                     	;# 
  1888  0691                     	;# 
  1889  0692                     	;# 
  1890  0693                     	;# 
  1891  0694                     	;# 
  1892  070C                     	;# 
  1893  070D                     	;# 
  1894  070E                     	;# 
  1895  070F                     	;# 
  1896  0710                     	;# 
  1897  0711                     	;# 
  1898  0712                     	;# 
  1899  0713                     	;# 
  1900  0714                     	;# 
  1901  0716                     	;# 
  1902  0717                     	;# 
  1903  0718                     	;# 
  1904  0719                     	;# 
  1905  071A                     	;# 
  1906  071B                     	;# 
  1907  071C                     	;# 
  1908  071D                     	;# 
  1909  071E                     	;# 
  1910  0796                     	;# 
  1911  0797                     	;# 
  1912  0798                     	;# 
  1913  0799                     	;# 
  1914  079A                     	;# 
  1915  079B                     	;# 
  1916  080C                     	;# 
  1917  080D                     	;# 
  1918  080E                     	;# 
  1919  080F                     	;# 
  1920  0810                     	;# 
  1921  0811                     	;# 
  1922  0812                     	;# 
  1923  0813                     	;# 
  1924  0814                     	;# 
  1925  081A                     	;# 
  1926  081B                     	;# 
  1927  081C                     	;# 
  1928  081D                     	;# 
  1929  081E                     	;# 
  1930  081F                     	;# 
  1931  088C                     	;# 
  1932  088D                     	;# 
  1933  088E                     	;# 
  1934  088F                     	;# 
  1935  0890                     	;# 
  1936  0891                     	;# 
  1937  0892                     	;# 
  1938  0893                     	;# 
  1939  0895                     	;# 
  1940  0896                     	;# 
  1941  0897                     	;# 
  1942  0898                     	;# 
  1943  0899                     	;# 
  1944  089A                     	;# 
  1945  089B                     	;# 
  1946  090C                     	;# 
  1947  090E                     	;# 
  1948  090F                     	;# 
  1949  091F                     	;# 
  1950  091F                     	;# 
  1951  098F                     	;# 
  1952  098F                     	;# 
  1953  0990                     	;# 
  1954  0991                     	;# 
  1955  0992                     	;# 
  1956  0993                     	;# 
  1957  0994                     	;# 
  1958  0995                     	;# 
  1959  0996                     	;# 
  1960  0997                     	;# 
  1961  0E0F                     	;# 
  1962  0E10                     	;# 
  1963  0E11                     	;# 
  1964  0E12                     	;# 
  1965  0E13                     	;# 
  1966  0E14                     	;# 
  1967  0E15                     	;# 
  1968  0E16                     	;# 
  1969  0E17                     	;# 
  1970  0E18                     	;# 
  1971  0E19                     	;# 
  1972  0E1A                     	;# 
  1973  0E1B                     	;# 
  1974  0E1C                     	;# 
  1975  0E1D                     	;# 
  1976  0E1E                     	;# 
  1977  0E1F                     	;# 
  1978  0E20                     	;# 
  1979  0E21                     	;# 
  1980  0E22                     	;# 
  1981  0E23                     	;# 
  1982  0E24                     	;# 
  1983  0E25                     	;# 
  1984  0E26                     	;# 
  1985  0E27                     	;# 
  1986  0E28                     	;# 
  1987  0E29                     	;# 
  1988  0E2A                     	;# 
  1989  0E2B                     	;# 
  1990  0E2C                     	;# 
  1991  0E2D                     	;# 
  1992  0E2E                     	;# 
  1993  0E2F                     	;# 
  1994  0E30                     	;# 
  1995  0E31                     	;# 
  1996  0E32                     	;# 
  1997  0E33                     	;# 
  1998  0E34                     	;# 
  1999  0E35                     	;# 
  2000  0E36                     	;# 
  2001  0E37                     	;# 
  2002  0E8F                     	;# 
  2003  0E90                     	;# 
  2004  0E91                     	;# 
  2005  0E92                     	;# 
  2006  0E93                     	;# 
  2007  0E94                     	;# 
  2008  0E95                     	;# 
  2009  0E96                     	;# 
  2010  0E97                     	;# 
  2011  0E9C                     	;# 
  2012  0E9D                     	;# 
  2013  0E9E                     	;# 
  2014  0EA1                     	;# 
  2015  0EA2                     	;# 
  2016  0EA3                     	;# 
  2017  0EA4                     	;# 
  2018  0EA5                     	;# 
  2019  0EA9                     	;# 
  2020  0EAA                     	;# 
  2021  0EAB                     	;# 
  2022  0EAC                     	;# 
  2023  0EB1                     	;# 
  2024  0EB2                     	;# 
  2025  0EB3                     	;# 
  2026  0EB8                     	;# 
  2027  0EB9                     	;# 
  2028  0EBA                     	;# 
  2029  0EBB                     	;# 
  2030  0EBC                     	;# 
  2031  0EBD                     	;# 
  2032  0EBE                     	;# 
  2033  0EC3                     	;# 
  2034  0EC5                     	;# 
  2035  0EC6                     	;# 
  2036  0EC7                     	;# 
  2037  0EC8                     	;# 
  2038  0EC9                     	;# 
  2039  0ECA                     	;# 
  2040  0ECB                     	;# 
  2041  0ECC                     	;# 
  2042  0F10                     	;# 
  2043  0F11                     	;# 
  2044  0F12                     	;# 
  2045  0F13                     	;# 
  2046  0F14                     	;# 
  2047  0F15                     	;# 
  2048  0F16                     	;# 
  2049  0F17                     	;# 
  2050  0F18                     	;# 
  2051  0F19                     	;# 
  2052  0F1A                     	;# 
  2053  0F1B                     	;# 
  2054  0F1C                     	;# 
  2055  0F1D                     	;# 
  2056  0F1E                     	;# 
  2057  0F1F                     	;# 
  2058  0F20                     	;# 
  2059  0F21                     	;# 
  2060  0F22                     	;# 
  2061  0F23                     	;# 
  2062  0F24                     	;# 
  2063  0F25                     	;# 
  2064  0F26                     	;# 
  2065  0F27                     	;# 
  2066  0F38                     	;# 
  2067  0F39                     	;# 
  2068  0F3A                     	;# 
  2069  0F3B                     	;# 
  2070  0F3C                     	;# 
  2071  0F3D                     	;# 
  2072  0F3E                     	;# 
  2073  0F3F                     	;# 
  2074  0F40                     	;# 
  2075  0F41                     	;# 
  2076  0F43                     	;# 
  2077  0F44                     	;# 
  2078  0F45                     	;# 
  2079  0F46                     	;# 
  2080  0F47                     	;# 
  2081  0F48                     	;# 
  2082  0F49                     	;# 
  2083  0F4A                     	;# 
  2084  0F4B                     	;# 
  2085  0F4C                     	;# 
  2086  0F4E                     	;# 
  2087  0F4F                     	;# 
  2088  0F50                     	;# 
  2089  0F51                     	;# 
  2090  0F52                     	;# 
  2091  0F53                     	;# 
  2092  0F54                     	;# 
  2093  0F55                     	;# 
  2094  0F56                     	;# 
  2095  0F57                     	;# 
  2096  0F65                     	;# 
  2097  0F68                     	;# 
  2098  0F69                     	;# 
  2099  0F6A                     	;# 
  2100  0F6B                     	;# 
  2101  0FE4                     	;# 
  2102  0FE5                     	;# 
  2103  0FE6                     	;# 
  2104  0FE7                     	;# 
  2105  0FE8                     	;# 
  2106  0FE9                     	;# 
  2107  0FEA                     	;# 
  2108  0FEB                     	;# 
  2109  0FED                     	;# 
  2110  0FEE                     	;# 
  2111  0FEF                     	;# 
  2112  0000                     	;# 
  2113  0001                     	;# 
  2114  0002                     	;# 
  2115  0003                     	;# 
  2116  0004                     	;# 
  2117  0005                     	;# 
  2118  0006                     	;# 
  2119  0007                     	;# 
  2120  0008                     	;# 
  2121  0009                     	;# 
  2122  000A                     	;# 
  2123  000B                     	;# 
  2124  000C                     	;# 
  2125  000D                     	;# 
  2126  000E                     	;# 
  2127  0010                     	;# 
  2128  0011                     	;# 
  2129  0012                     	;# 
  2130  0013                     	;# 
  2131  0016                     	;# 
  2132  0017                     	;# 
  2133  0018                     	;# 
  2134  001C                     	;# 
  2135  001C                     	;# 
  2136  001D                     	;# 
  2137  001D                     	;# 
  2138  001E                     	;# 
  2139  001F                     	;# 
  2140  008C                     	;# 
  2141  008C                     	;# 
  2142  008D                     	;# 
  2143  008E                     	;# 
  2144  008E                     	;# 
  2145  008F                     	;# 
  2146  0090                     	;# 
  2147  0090                     	;# 
  2148  0091                     	;# 
  2149  0093                     	;# 
  2150  0094                     	;# 
  2151  0095                     	;# 
  2152  0096                     	;# 
  2153  0097                     	;# 
  2154  0098                     	;# 
  2155  0099                     	;# 
  2156  009A                     	;# 
  2157  009B                     	;# 
  2158  009C                     	;# 
  2159  009D                     	;# 
  2160  009E                     	;# 
  2161  010C                     	;# 
  2162  010D                     	;# 
  2163  010E                     	;# 
  2164  010E                     	;# 
  2165  010F                     	;# 
  2166  0110                     	;# 
  2167  0110                     	;# 
  2168  0111                     	;# 
  2169  0112                     	;# 
  2170  0112                     	;# 
  2171  0113                     	;# 
  2172  0114                     	;# 
  2173  0114                     	;# 
  2174  0115                     	;# 
  2175  0116                     	;# 
  2176  0116                     	;# 
  2177  0117                     	;# 
  2178  0119                     	;# 
  2179  0119                     	;# 
  2180  0119                     	;# 
  2181  011A                     	;# 
  2182  011A                     	;# 
  2183  011A                     	;# 
  2184  011B                     	;# 
  2185  011B                     	;# 
  2186  011B                     	;# 
  2187  011B                     	;# 
  2188  011B                     	;# 
  2189  011C                     	;# 
  2190  011C                     	;# 
  2191  011C                     	;# 
  2192  011D                     	;# 
  2193  011D                     	;# 
  2194  011D                     	;# 
  2195  011E                     	;# 
  2196  011E                     	;# 
  2197  011E                     	;# 
  2198  011F                     	;# 
  2199  011F                     	;# 
  2200  011F                     	;# 
  2201  011F                     	;# 
  2202  011F                     	;# 
  2203  018C                     	;# 
  2204  018D                     	;# 
  2205  018E                     	;# 
  2206  018F                     	;# 
  2207  0190                     	;# 
  2208  0191                     	;# 
  2209  0192                     	;# 
  2210  0196                     	;# 
  2211  0197                     	;# 
  2212  0198                     	;# 
  2213  0199                     	;# 
  2214  019A                     	;# 
  2215  019B                     	;# 
  2216  019C                     	;# 
  2217  020C                     	;# 
  2218  020D                     	;# 
  2219  020E                     	;# 
  2220  020F                     	;# 
  2221  020F                     	;# 
  2222  0210                     	;# 
  2223  0210                     	;# 
  2224  0211                     	;# 
  2225  0211                     	;# 
  2226  0212                     	;# 
  2227  0213                     	;# 
  2228  0214                     	;# 
  2229  0215                     	;# 
  2230  0215                     	;# 
  2231  0216                     	;# 
  2232  0216                     	;# 
  2233  0217                     	;# 
  2234  0217                     	;# 
  2235  0218                     	;# 
  2236  0219                     	;# 
  2237  021A                     	;# 
  2238  021B                     	;# 
  2239  021B                     	;# 
  2240  021C                     	;# 
  2241  021C                     	;# 
  2242  021D                     	;# 
  2243  021D                     	;# 
  2244  021E                     	;# 
  2245  021F                     	;# 
  2246  028C                     	;# 
  2247  028C                     	;# 
  2248  028D                     	;# 
  2249  028D                     	;# 
  2250  028E                     	;# 
  2251  028F                     	;# 
  2252  0290                     	;# 
  2253  0290                     	;# 
  2254  0291                     	;# 
  2255  0292                     	;# 
  2256  0292                     	;# 
  2257  0293                     	;# 
  2258  0293                     	;# 
  2259  0294                     	;# 
  2260  0295                     	;# 
  2261  0296                     	;# 
  2262  0296                     	;# 
  2263  0297                     	;# 
  2264  0298                     	;# 
  2265  0298                     	;# 
  2266  0299                     	;# 
  2267  0299                     	;# 
  2268  029A                     	;# 
  2269  029B                     	;# 
  2270  029C                     	;# 
  2271  029C                     	;# 
  2272  029D                     	;# 
  2273  030C                     	;# 
  2274  030C                     	;# 
  2275  030D                     	;# 
  2276  030E                     	;# 
  2277  030F                     	;# 
  2278  0310                     	;# 
  2279  0310                     	;# 
  2280  0311                     	;# 
  2281  0312                     	;# 
  2282  0313                     	;# 
  2283  0314                     	;# 
  2284  0314                     	;# 
  2285  0315                     	;# 
  2286  0316                     	;# 
  2287  0317                     	;# 
  2288  0318                     	;# 
  2289  0318                     	;# 
  2290  0319                     	;# 
  2291  031A                     	;# 
  2292  031B                     	;# 
  2293  031C                     	;# 
  2294  031C                     	;# 
  2295  031D                     	;# 
  2296  031E                     	;# 
  2297  031F                     	;# 
  2298  038C                     	;# 
  2299  038D                     	;# 
  2300  038E                     	;# 
  2301  0390                     	;# 
  2302  0391                     	;# 
  2303  0392                     	;# 
  2304  040C                     	;# 
  2305  040D                     	;# 
  2306  040E                     	;# 
  2307  040F                     	;# 
  2308  0410                     	;# 
  2309  0411                     	;# 
  2310  0416                     	;# 
  2311  0416                     	;# 
  2312  0417                     	;# 
  2313  0418                     	;# 
  2314  0418                     	;# 
  2315  0419                     	;# 
  2316  041A                     	;# 
  2317  041A                     	;# 
  2318  041B                     	;# 
  2319  041C                     	;# 
  2320  041C                     	;# 
  2321  041D                     	;# 
  2322  041E                     	;# 
  2323  041F                     	;# 
  2324  048C                     	;# 
  2325  048C                     	;# 
  2326  048D                     	;# 
  2327  048E                     	;# 
  2328  048F                     	;# 
  2329  048F                     	;# 
  2330  0490                     	;# 
  2331  0491                     	;# 
  2332  0492                     	;# 
  2333  0492                     	;# 
  2334  0493                     	;# 
  2335  0494                     	;# 
  2336  0495                     	;# 
  2337  0495                     	;# 
  2338  0496                     	;# 
  2339  0497                     	;# 
  2340  0498                     	;# 
  2341  0499                     	;# 
  2342  049A                     	;# 
  2343  049B                     	;# 
  2344  049C                     	;# 
  2345  049D                     	;# 
  2346  050C                     	;# 
  2347  050C                     	;# 
  2348  050D                     	;# 
  2349  050E                     	;# 
  2350  050F                     	;# 
  2351  050F                     	;# 
  2352  0510                     	;# 
  2353  0511                     	;# 
  2354  0512                     	;# 
  2355  0512                     	;# 
  2356  0513                     	;# 
  2357  0514                     	;# 
  2358  0515                     	;# 
  2359  0515                     	;# 
  2360  0516                     	;# 
  2361  0517                     	;# 
  2362  0518                     	;# 
  2363  0519                     	;# 
  2364  051A                     	;# 
  2365  051B                     	;# 
  2366  051C                     	;# 
  2367  051D                     	;# 
  2368  058C                     	;# 
  2369  058C                     	;# 
  2370  058D                     	;# 
  2371  058E                     	;# 
  2372  058F                     	;# 
  2373  058F                     	;# 
  2374  0590                     	;# 
  2375  0591                     	;# 
  2376  0592                     	;# 
  2377  0593                     	;# 
  2378  060C                     	;# 
  2379  060D                     	;# 
  2380  060E                     	;# 
  2381  060F                     	;# 
  2382  0610                     	;# 
  2383  0611                     	;# 
  2384  0612                     	;# 
  2385  0613                     	;# 
  2386  0614                     	;# 
  2387  0616                     	;# 
  2388  0617                     	;# 
  2389  0618                     	;# 
  2390  0619                     	;# 
  2391  061A                     	;# 
  2392  061B                     	;# 
  2393  061C                     	;# 
  2394  061D                     	;# 
  2395  061E                     	;# 
  2396  068C                     	;# 
  2397  068D                     	;# 
  2398  068E                     	;# 
  2399  068F                     	;# 
  2400  0690                     	;# 
  2401  0691                     	;# 
  2402  0692                     	;# 
  2403  0693                     	;# 
  2404  0694                     	;# 
  2405  070C                     	;# 
  2406  070D                     	;# 
  2407  070E                     	;# 
  2408  070F                     	;# 
  2409  0710                     	;# 
  2410  0711                     	;# 
  2411  0712                     	;# 
  2412  0713                     	;# 
  2413  0714                     	;# 
  2414  0716                     	;# 
  2415  0717                     	;# 
  2416  0718                     	;# 
  2417  0719                     	;# 
  2418  071A                     	;# 
  2419  071B                     	;# 
  2420  071C                     	;# 
  2421  071D                     	;# 
  2422  071E                     	;# 
  2423  0796                     	;# 
  2424  0797                     	;# 
  2425  0798                     	;# 
  2426  0799                     	;# 
  2427  079A                     	;# 
  2428  079B                     	;# 
  2429  080C                     	;# 
  2430  080D                     	;# 
  2431  080E                     	;# 
  2432  080F                     	;# 
  2433  0810                     	;# 
  2434  0811                     	;# 
  2435  0812                     	;# 
  2436  0813                     	;# 
  2437  0814                     	;# 
  2438  081A                     	;# 
  2439  081B                     	;# 
  2440  081C                     	;# 
  2441  081D                     	;# 
  2442  081E                     	;# 
  2443  081F                     	;# 
  2444  088C                     	;# 
  2445  088D                     	;# 
  2446  088E                     	;# 
  2447  088F                     	;# 
  2448  0890                     	;# 
  2449  0891                     	;# 
  2450  0892                     	;# 
  2451  0893                     	;# 
  2452  0895                     	;# 
  2453  0896                     	;# 
  2454  0897                     	;# 
  2455  0898                     	;# 
  2456  0899                     	;# 
  2457  089A                     	;# 
  2458  089B                     	;# 
  2459  090C                     	;# 
  2460  090E                     	;# 
  2461  090F                     	;# 
  2462  091F                     	;# 
  2463  091F                     	;# 
  2464  098F                     	;# 
  2465  098F                     	;# 
  2466  0990                     	;# 
  2467  0991                     	;# 
  2468  0992                     	;# 
  2469  0993                     	;# 
  2470  0994                     	;# 
  2471  0995                     	;# 
  2472  0996                     	;# 
  2473  0997                     	;# 
  2474  0E0F                     	;# 
  2475  0E10                     	;# 
  2476  0E11                     	;# 
  2477  0E12                     	;# 
  2478  0E13                     	;# 
  2479  0E14                     	;# 
  2480  0E15                     	;# 
  2481  0E16                     	;# 
  2482  0E17                     	;# 
  2483  0E18                     	;# 
  2484  0E19                     	;# 
  2485  0E1A                     	;# 
  2486  0E1B                     	;# 
  2487  0E1C                     	;# 
  2488  0E1D                     	;# 
  2489  0E1E                     	;# 
  2490  0E1F                     	;# 
  2491  0E20                     	;# 
  2492  0E21                     	;# 
  2493  0E22                     	;# 
  2494  0E23                     	;# 
  2495  0E24                     	;# 
  2496  0E25                     	;# 
  2497  0E26                     	;# 
  2498  0E27                     	;# 
  2499  0E28                     	;# 
  2500  0E29                     	;# 
  2501  0E2A                     	;# 
  2502  0E2B                     	;# 
  2503  0E2C                     	;# 
  2504  0E2D                     	;# 
  2505  0E2E                     	;# 
  2506  0E2F                     	;# 
  2507  0E30                     	;# 
  2508  0E31                     	;# 
  2509  0E32                     	;# 
  2510  0E33                     	;# 
  2511  0E34                     	;# 
  2512  0E35                     	;# 
  2513  0E36                     	;# 
  2514  0E37                     	;# 
  2515  0E8F                     	;# 
  2516  0E90                     	;# 
  2517  0E91                     	;# 
  2518  0E92                     	;# 
  2519  0E93                     	;# 
  2520  0E94                     	;# 
  2521  0E95                     	;# 
  2522  0E96                     	;# 
  2523  0E97                     	;# 
  2524  0E9C                     	;# 
  2525  0E9D                     	;# 
  2526  0E9E                     	;# 
  2527  0EA1                     	;# 
  2528  0EA2                     	;# 
  2529  0EA3                     	;# 
  2530  0EA4                     	;# 
  2531  0EA5                     	;# 
  2532  0EA9                     	;# 
  2533  0EAA                     	;# 
  2534  0EAB                     	;# 
  2535  0EAC                     	;# 
  2536  0EB1                     	;# 
  2537  0EB2                     	;# 
  2538  0EB3                     	;# 
  2539  0EB8                     	;# 
  2540  0EB9                     	;# 
  2541  0EBA                     	;# 
  2542  0EBB                     	;# 
  2543  0EBC                     	;# 
  2544  0EBD                     	;# 
  2545  0EBE                     	;# 
  2546  0EC3                     	;# 
  2547  0EC5                     	;# 
  2548  0EC6                     	;# 
  2549  0EC7                     	;# 
  2550  0EC8                     	;# 
  2551  0EC9                     	;# 
  2552  0ECA                     	;# 
  2553  0ECB                     	;# 
  2554  0ECC                     	;# 
  2555  0F10                     	;# 
  2556  0F11                     	;# 
  2557  0F12                     	;# 
  2558  0F13                     	;# 
  2559  0F14                     	;# 
  2560  0F15                     	;# 
  2561  0F16                     	;# 
  2562  0F17                     	;# 
  2563  0F18                     	;# 
  2564  0F19                     	;# 
  2565  0F1A                     	;# 
  2566  0F1B                     	;# 
  2567  0F1C                     	;# 
  2568  0F1D                     	;# 
  2569  0F1E                     	;# 
  2570  0F1F                     	;# 
  2571  0F20                     	;# 
  2572  0F21                     	;# 
  2573  0F22                     	;# 
  2574  0F23                     	;# 
  2575  0F24                     	;# 
  2576  0F25                     	;# 
  2577  0F26                     	;# 
  2578  0F27                     	;# 
  2579  0F38                     	;# 
  2580  0F39                     	;# 
  2581  0F3A                     	;# 
  2582  0F3B                     	;# 
  2583  0F3C                     	;# 
  2584  0F3D                     	;# 
  2585  0F3E                     	;# 
  2586  0F3F                     	;# 
  2587  0F40                     	;# 
  2588  0F41                     	;# 
  2589  0F43                     	;# 
  2590  0F44                     	;# 
  2591  0F45                     	;# 
  2592  0F46                     	;# 
  2593  0F47                     	;# 
  2594  0F48                     	;# 
  2595  0F49                     	;# 
  2596  0F4A                     	;# 
  2597  0F4B                     	;# 
  2598  0F4C                     	;# 
  2599  0F4E                     	;# 
  2600  0F4F                     	;# 
  2601  0F50                     	;# 
  2602  0F51                     	;# 
  2603  0F52                     	;# 
  2604  0F53                     	;# 
  2605  0F54                     	;# 
  2606  0F55                     	;# 
  2607  0F56                     	;# 
  2608  0F57                     	;# 
  2609  0F65                     	;# 
  2610  0F68                     	;# 
  2611  0F69                     	;# 
  2612  0F6A                     	;# 
  2613  0F6B                     	;# 
  2614  0FE4                     	;# 
  2615  0FE5                     	;# 
  2616  0FE6                     	;# 
  2617  0FE7                     	;# 
  2618  0FE8                     	;# 
  2619  0FE9                     	;# 
  2620  0FEA                     	;# 
  2621  0FEB                     	;# 
  2622  0FED                     	;# 
  2623  0FEE                     	;# 
  2624  0FEF                     	;# 
  2625  0000                     	;# 
  2626  0001                     	;# 
  2627  0002                     	;# 
  2628  0003                     	;# 
  2629  0004                     	;# 
  2630  0005                     	;# 
  2631  0006                     	;# 
  2632  0007                     	;# 
  2633  0008                     	;# 
  2634  0009                     	;# 
  2635  000A                     	;# 
  2636  000B                     	;# 
  2637  000C                     	;# 
  2638  000D                     	;# 
  2639  000E                     	;# 
  2640  0010                     	;# 
  2641  0011                     	;# 
  2642  0012                     	;# 
  2643  0013                     	;# 
  2644  0016                     	;# 
  2645  0017                     	;# 
  2646  0018                     	;# 
  2647  001C                     	;# 
  2648  001C                     	;# 
  2649  001D                     	;# 
  2650  001D                     	;# 
  2651  001E                     	;# 
  2652  001F                     	;# 
  2653  008C                     	;# 
  2654  008C                     	;# 
  2655  008D                     	;# 
  2656  008E                     	;# 
  2657  008E                     	;# 
  2658  008F                     	;# 
  2659  0090                     	;# 
  2660  0090                     	;# 
  2661  0091                     	;# 
  2662  0093                     	;# 
  2663  0094                     	;# 
  2664  0095                     	;# 
  2665  0096                     	;# 
  2666  0097                     	;# 
  2667  0098                     	;# 
  2668  0099                     	;# 
  2669  009A                     	;# 
  2670  009B                     	;# 
  2671  009C                     	;# 
  2672  009D                     	;# 
  2673  009E                     	;# 
  2674  010C                     	;# 
  2675  010D                     	;# 
  2676  010E                     	;# 
  2677  010E                     	;# 
  2678  010F                     	;# 
  2679  0110                     	;# 
  2680  0110                     	;# 
  2681  0111                     	;# 
  2682  0112                     	;# 
  2683  0112                     	;# 
  2684  0113                     	;# 
  2685  0114                     	;# 
  2686  0114                     	;# 
  2687  0115                     	;# 
  2688  0116                     	;# 
  2689  0116                     	;# 
  2690  0117                     	;# 
  2691  0119                     	;# 
  2692  0119                     	;# 
  2693  0119                     	;# 
  2694  011A                     	;# 
  2695  011A                     	;# 
  2696  011A                     	;# 
  2697  011B                     	;# 
  2698  011B                     	;# 
  2699  011B                     	;# 
  2700  011B                     	;# 
  2701  011B                     	;# 
  2702  011C                     	;# 
  2703  011C                     	;# 
  2704  011C                     	;# 
  2705  011D                     	;# 
  2706  011D                     	;# 
  2707  011D                     	;# 
  2708  011E                     	;# 
  2709  011E                     	;# 
  2710  011E                     	;# 
  2711  011F                     	;# 
  2712  011F                     	;# 
  2713  011F                     	;# 
  2714  011F                     	;# 
  2715  011F                     	;# 
  2716  018C                     	;# 
  2717  018D                     	;# 
  2718  018E                     	;# 
  2719  018F                     	;# 
  2720  0190                     	;# 
  2721  0191                     	;# 
  2722  0192                     	;# 
  2723  0196                     	;# 
  2724  0197                     	;# 
  2725  0198                     	;# 
  2726  0199                     	;# 
  2727  019A                     	;# 
  2728  019B                     	;# 
  2729  019C                     	;# 
  2730  020C                     	;# 
  2731  020D                     	;# 
  2732  020E                     	;# 
  2733  020F                     	;# 
  2734  020F                     	;# 
  2735  0210                     	;# 
  2736  0210                     	;# 
  2737  0211                     	;# 
  2738  0211                     	;# 
  2739  0212                     	;# 
  2740  0213                     	;# 
  2741  0214                     	;# 
  2742  0215                     	;# 
  2743  0215                     	;# 
  2744  0216                     	;# 
  2745  0216                     	;# 
  2746  0217                     	;# 
  2747  0217                     	;# 
  2748  0218                     	;# 
  2749  0219                     	;# 
  2750  021A                     	;# 
  2751  021B                     	;# 
  2752  021B                     	;# 
  2753  021C                     	;# 
  2754  021C                     	;# 
  2755  021D                     	;# 
  2756  021D                     	;# 
  2757  021E                     	;# 
  2758  021F                     	;# 
  2759  028C                     	;# 
  2760  028C                     	;# 
  2761  028D                     	;# 
  2762  028D                     	;# 
  2763  028E                     	;# 
  2764  028F                     	;# 
  2765  0290                     	;# 
  2766  0290                     	;# 
  2767  0291                     	;# 
  2768  0292                     	;# 
  2769  0292                     	;# 
  2770  0293                     	;# 
  2771  0293                     	;# 
  2772  0294                     	;# 
  2773  0295                     	;# 
  2774  0296                     	;# 
  2775  0296                     	;# 
  2776  0297                     	;# 
  2777  0298                     	;# 
  2778  0298                     	;# 
  2779  0299                     	;# 
  2780  0299                     	;# 
  2781  029A                     	;# 
  2782  029B                     	;# 
  2783  029C                     	;# 
  2784  029C                     	;# 
  2785  029D                     	;# 
  2786  030C                     	;# 
  2787  030C                     	;# 
  2788  030D                     	;# 
  2789  030E                     	;# 
  2790  030F                     	;# 
  2791  0310                     	;# 
  2792  0310                     	;# 
  2793  0311                     	;# 
  2794  0312                     	;# 
  2795  0313                     	;# 
  2796  0314                     	;# 
  2797  0314                     	;# 
  2798  0315                     	;# 
  2799  0316                     	;# 
  2800  0317                     	;# 
  2801  0318                     	;# 
  2802  0318                     	;# 
  2803  0319                     	;# 
  2804  031A                     	;# 
  2805  031B                     	;# 
  2806  031C                     	;# 
  2807  031C                     	;# 
  2808  031D                     	;# 
  2809  031E                     	;# 
  2810  031F                     	;# 
  2811  038C                     	;# 
  2812  038D                     	;# 
  2813  038E                     	;# 
  2814  0390                     	;# 
  2815  0391                     	;# 
  2816  0392                     	;# 
  2817  040C                     	;# 
  2818  040D                     	;# 
  2819  040E                     	;# 
  2820  040F                     	;# 
  2821  0410                     	;# 
  2822  0411                     	;# 
  2823  0416                     	;# 
  2824  0416                     	;# 
  2825  0417                     	;# 
  2826  0418                     	;# 
  2827  0418                     	;# 
  2828  0419                     	;# 
  2829  041A                     	;# 
  2830  041A                     	;# 
  2831  041B                     	;# 
  2832  041C                     	;# 
  2833  041C                     	;# 
  2834  041D                     	;# 
  2835  041E                     	;# 
  2836  041F                     	;# 
  2837  048C                     	;# 
  2838  048C                     	;# 
  2839  048D                     	;# 
  2840  048E                     	;# 
  2841  048F                     	;# 
  2842  048F                     	;# 
  2843  0490                     	;# 
  2844  0491                     	;# 
  2845  0492                     	;# 
  2846  0492                     	;# 
  2847  0493                     	;# 
  2848  0494                     	;# 
  2849  0495                     	;# 
  2850  0495                     	;# 
  2851  0496                     	;# 
  2852  0497                     	;# 
  2853  0498                     	;# 
  2854  0499                     	;# 
  2855  049A                     	;# 
  2856  049B                     	;# 
  2857  049C                     	;# 
  2858  049D                     	;# 
  2859  050C                     	;# 
  2860  050C                     	;# 
  2861  050D                     	;# 
  2862  050E                     	;# 
  2863  050F                     	;# 
  2864  050F                     	;# 
  2865  0510                     	;# 
  2866  0511                     	;# 
  2867  0512                     	;# 
  2868  0512                     	;# 
  2869  0513                     	;# 
  2870  0514                     	;# 
  2871  0515                     	;# 
  2872  0515                     	;# 
  2873  0516                     	;# 
  2874  0517                     	;# 
  2875  0518                     	;# 
  2876  0519                     	;# 
  2877  051A                     	;# 
  2878  051B                     	;# 
  2879  051C                     	;# 
  2880  051D                     	;# 
  2881  058C                     	;# 
  2882  058C                     	;# 
  2883  058D                     	;# 
  2884  058E                     	;# 
  2885  058F                     	;# 
  2886  058F                     	;# 
  2887  0590                     	;# 
  2888  0591                     	;# 
  2889  0592                     	;# 
  2890  0593                     	;# 
  2891  060C                     	;# 
  2892  060D                     	;# 
  2893  060E                     	;# 
  2894  060F                     	;# 
  2895  0610                     	;# 
  2896  0611                     	;# 
  2897  0612                     	;# 
  2898  0613                     	;# 
  2899  0614                     	;# 
  2900  0616                     	;# 
  2901  0617                     	;# 
  2902  0618                     	;# 
  2903  0619                     	;# 
  2904  061A                     	;# 
  2905  061B                     	;# 
  2906  061C                     	;# 
  2907  061D                     	;# 
  2908  061E                     	;# 
  2909  068C                     	;# 
  2910  068D                     	;# 
  2911  068E                     	;# 
  2912  068F                     	;# 
  2913  0690                     	;# 
  2914  0691                     	;# 
  2915  0692                     	;# 
  2916  0693                     	;# 
  2917  0694                     	;# 
  2918  070C                     	;# 
  2919  070D                     	;# 
  2920  070E                     	;# 
  2921  070F                     	;# 
  2922  0710                     	;# 
  2923  0711                     	;# 
  2924  0712                     	;# 
  2925  0713                     	;# 
  2926  0714                     	;# 
  2927  0716                     	;# 
  2928  0717                     	;# 
  2929  0718                     	;# 
  2930  0719                     	;# 
  2931  071A                     	;# 
  2932  071B                     	;# 
  2933  071C                     	;# 
  2934  071D                     	;# 
  2935  071E                     	;# 
  2936  0796                     	;# 
  2937  0797                     	;# 
  2938  0798                     	;# 
  2939  0799                     	;# 
  2940  079A                     	;# 
  2941  079B                     	;# 
  2942  080C                     	;# 
  2943  080D                     	;# 
  2944  080E                     	;# 
  2945  080F                     	;# 
  2946  0810                     	;# 
  2947  0811                     	;# 
  2948  0812                     	;# 
  2949  0813                     	;# 
  2950  0814                     	;# 
  2951  081A                     	;# 
  2952  081B                     	;# 
  2953  081C                     	;# 
  2954  081D                     	;# 
  2955  081E                     	;# 
  2956  081F                     	;# 
  2957  088C                     	;# 
  2958  088D                     	;# 
  2959  088E                     	;# 
  2960  088F                     	;# 
  2961  0890                     	;# 
  2962  0891                     	;# 
  2963  0892                     	;# 
  2964  0893                     	;# 
  2965  0895                     	;# 
  2966  0896                     	;# 
  2967  0897                     	;# 
  2968  0898                     	;# 
  2969  0899                     	;# 
  2970  089A                     	;# 
  2971  089B                     	;# 
  2972  090C                     	;# 
  2973  090E                     	;# 
  2974  090F                     	;# 
  2975  091F                     	;# 
  2976  091F                     	;# 
  2977  098F                     	;# 
  2978  098F                     	;# 
  2979  0990                     	;# 
  2980  0991                     	;# 
  2981  0992                     	;# 
  2982  0993                     	;# 
  2983  0994                     	;# 
  2984  0995                     	;# 
  2985  0996                     	;# 
  2986  0997                     	;# 
  2987  0E0F                     	;# 
  2988  0E10                     	;# 
  2989  0E11                     	;# 
  2990  0E12                     	;# 
  2991  0E13                     	;# 
  2992  0E14                     	;# 
  2993  0E15                     	;# 
  2994  0E16                     	;# 
  2995  0E17                     	;# 
  2996  0E18                     	;# 
  2997  0E19                     	;# 
  2998  0E1A                     	;# 
  2999  0E1B                     	;# 
  3000  0E1C                     	;# 
  3001  0E1D                     	;# 
  3002  0E1E                     	;# 
  3003  0E1F                     	;# 
  3004  0E20                     	;# 
  3005  0E21                     	;# 
  3006  0E22                     	;# 
  3007  0E23                     	;# 
  3008  0E24                     	;# 
  3009  0E25                     	;# 
  3010  0E26                     	;# 
  3011  0E27                     	;# 
  3012  0E28                     	;# 
  3013  0E29                     	;# 
  3014  0E2A                     	;# 
  3015  0E2B                     	;# 
  3016  0E2C                     	;# 
  3017  0E2D                     	;# 
  3018  0E2E                     	;# 
  3019  0E2F                     	;# 
  3020  0E30                     	;# 
  3021  0E31                     	;# 
  3022  0E32                     	;# 
  3023  0E33                     	;# 
  3024  0E34                     	;# 
  3025  0E35                     	;# 
  3026  0E36                     	;# 
  3027  0E37                     	;# 
  3028  0E8F                     	;# 
  3029  0E90                     	;# 
  3030  0E91                     	;# 
  3031  0E92                     	;# 
  3032  0E93                     	;# 
  3033  0E94                     	;# 
  3034  0E95                     	;# 
  3035  0E96                     	;# 
  3036  0E97                     	;# 
  3037  0E9C                     	;# 
  3038  0E9D                     	;# 
  3039  0E9E                     	;# 
  3040  0EA1                     	;# 
  3041  0EA2                     	;# 
  3042  0EA3                     	;# 
  3043  0EA4                     	;# 
  3044  0EA5                     	;# 
  3045  0EA9                     	;# 
  3046  0EAA                     	;# 
  3047  0EAB                     	;# 
  3048  0EAC                     	;# 
  3049  0EB1                     	;# 
  3050  0EB2                     	;# 
  3051  0EB3                     	;# 
  3052  0EB8                     	;# 
  3053  0EB9                     	;# 
  3054  0EBA                     	;# 
  3055  0EBB                     	;# 
  3056  0EBC                     	;# 
  3057  0EBD                     	;# 
  3058  0EBE                     	;# 
  3059  0EC3                     	;# 
  3060  0EC5                     	;# 
  3061  0EC6                     	;# 
  3062  0EC7                     	;# 
  3063  0EC8                     	;# 
  3064  0EC9                     	;# 
  3065  0ECA                     	;# 
  3066  0ECB                     	;# 
  3067  0ECC                     	;# 
  3068  0F10                     	;# 
  3069  0F11                     	;# 
  3070  0F12                     	;# 
  3071  0F13                     	;# 
  3072  0F14                     	;# 
  3073  0F15                     	;# 
  3074  0F16                     	;# 
  3075  0F17                     	;# 
  3076  0F18                     	;# 
  3077  0F19                     	;# 
  3078  0F1A                     	;# 
  3079  0F1B                     	;# 
  3080  0F1C                     	;# 
  3081  0F1D                     	;# 
  3082  0F1E                     	;# 
  3083  0F1F                     	;# 
  3084  0F20                     	;# 
  3085  0F21                     	;# 
  3086  0F22                     	;# 
  3087  0F23                     	;# 
  3088  0F24                     	;# 
  3089  0F25                     	;# 
  3090  0F26                     	;# 
  3091  0F27                     	;# 
  3092  0F38                     	;# 
  3093  0F39                     	;# 
  3094  0F3A                     	;# 
  3095  0F3B                     	;# 
  3096  0F3C                     	;# 
  3097  0F3D                     	;# 
  3098  0F3E                     	;# 
  3099  0F3F                     	;# 
  3100  0F40                     	;# 
  3101  0F41                     	;# 
  3102  0F43                     	;# 
  3103  0F44                     	;# 
  3104  0F45                     	;# 
  3105  0F46                     	;# 
  3106  0F47                     	;# 
  3107  0F48                     	;# 
  3108  0F49                     	;# 
  3109  0F4A                     	;# 
  3110  0F4B                     	;# 
  3111  0F4C                     	;# 
  3112  0F4E                     	;# 
  3113  0F4F                     	;# 
  3114  0F50                     	;# 
  3115  0F51                     	;# 
  3116  0F52                     	;# 
  3117  0F53                     	;# 
  3118  0F54                     	;# 
  3119  0F55                     	;# 
  3120  0F56                     	;# 
  3121  0F57                     	;# 
  3122  0F65                     	;# 
  3123  0F68                     	;# 
  3124  0F69                     	;# 
  3125  0F6A                     	;# 
  3126  0F6B                     	;# 
  3127  0FE4                     	;# 
  3128  0FE5                     	;# 
  3129  0FE6                     	;# 
  3130  0FE7                     	;# 
  3131  0FE8                     	;# 
  3132  0FE9                     	;# 
  3133  0FEA                     	;# 
  3134  0FEB                     	;# 
  3135  0FED                     	;# 
  3136  0FEE                     	;# 
  3137  0FEF                     	;# 
  3138  0000                     	;# 
  3139  0001                     	;# 
  3140  0002                     	;# 
  3141  0003                     	;# 
  3142  0004                     	;# 
  3143  0005                     	;# 
  3144  0006                     	;# 
  3145  0007                     	;# 
  3146  0008                     	;# 
  3147  0009                     	;# 
  3148  000A                     	;# 
  3149  000B                     	;# 
  3150  000C                     	;# 
  3151  000D                     	;# 
  3152  000E                     	;# 
  3153  0010                     	;# 
  3154  0011                     	;# 
  3155  0012                     	;# 
  3156  0013                     	;# 
  3157  0016                     	;# 
  3158  0017                     	;# 
  3159  0018                     	;# 
  3160  001C                     	;# 
  3161  001C                     	;# 
  3162  001D                     	;# 
  3163  001D                     	;# 
  3164  001E                     	;# 
  3165  001F                     	;# 
  3166  008C                     	;# 
  3167  008C                     	;# 
  3168  008D                     	;# 
  3169  008E                     	;# 
  3170  008E                     	;# 
  3171  008F                     	;# 
  3172  0090                     	;# 
  3173  0090                     	;# 
  3174  0091                     	;# 
  3175  0093                     	;# 
  3176  0094                     	;# 
  3177  0095                     	;# 
  3178  0096                     	;# 
  3179  0097                     	;# 
  3180  0098                     	;# 
  3181  0099                     	;# 
  3182  009A                     	;# 
  3183  009B                     	;# 
  3184  009C                     	;# 
  3185  009D                     	;# 
  3186  009E                     	;# 
  3187  010C                     	;# 
  3188  010D                     	;# 
  3189  010E                     	;# 
  3190  010E                     	;# 
  3191  010F                     	;# 
  3192  0110                     	;# 
  3193  0110                     	;# 
  3194  0111                     	;# 
  3195  0112                     	;# 
  3196  0112                     	;# 
  3197  0113                     	;# 
  3198  0114                     	;# 
  3199  0114                     	;# 
  3200  0115                     	;# 
  3201  0116                     	;# 
  3202  0116                     	;# 
  3203  0117                     	;# 
  3204  0119                     	;# 
  3205  0119                     	;# 
  3206  0119                     	;# 
  3207  011A                     	;# 
  3208  011A                     	;# 
  3209  011A                     	;# 
  3210  011B                     	;# 
  3211  011B                     	;# 
  3212  011B                     	;# 
  3213  011B                     	;# 
  3214  011B                     	;# 
  3215  011C                     	;# 
  3216  011C                     	;# 
  3217  011C                     	;# 
  3218  011D                     	;# 
  3219  011D                     	;# 
  3220  011D                     	;# 
  3221  011E                     	;# 
  3222  011E                     	;# 
  3223  011E                     	;# 
  3224  011F                     	;# 
  3225  011F                     	;# 
  3226  011F                     	;# 
  3227  011F                     	;# 
  3228  011F                     	;# 
  3229  018C                     	;# 
  3230  018D                     	;# 
  3231  018E                     	;# 
  3232  018F                     	;# 
  3233  0190                     	;# 
  3234  0191                     	;# 
  3235  0192                     	;# 
  3236  0196                     	;# 
  3237  0197                     	;# 
  3238  0198                     	;# 
  3239  0199                     	;# 
  3240  019A                     	;# 
  3241  019B                     	;# 
  3242  019C                     	;# 
  3243  020C                     	;# 
  3244  020D                     	;# 
  3245  020E                     	;# 
  3246  020F                     	;# 
  3247  020F                     	;# 
  3248  0210                     	;# 
  3249  0210                     	;# 
  3250  0211                     	;# 
  3251  0211                     	;# 
  3252  0212                     	;# 
  3253  0213                     	;# 
  3254  0214                     	;# 
  3255  0215                     	;# 
  3256  0215                     	;# 
  3257  0216                     	;# 
  3258  0216                     	;# 
  3259  0217                     	;# 
  3260  0217                     	;# 
  3261  0218                     	;# 
  3262  0219                     	;# 
  3263  021A                     	;# 
  3264  021B                     	;# 
  3265  021B                     	;# 
  3266  021C                     	;# 
  3267  021C                     	;# 
  3268  021D                     	;# 
  3269  021D                     	;# 
  3270  021E                     	;# 
  3271  021F                     	;# 
  3272  028C                     	;# 
  3273  028C                     	;# 
  3274  028D                     	;# 
  3275  028D                     	;# 
  3276  028E                     	;# 
  3277  028F                     	;# 
  3278  0290                     	;# 
  3279  0290                     	;# 
  3280  0291                     	;# 
  3281  0292                     	;# 
  3282  0292                     	;# 
  3283  0293                     	;# 
  3284  0293                     	;# 
  3285  0294                     	;# 
  3286  0295                     	;# 
  3287  0296                     	;# 
  3288  0296                     	;# 
  3289  0297                     	;# 
  3290  0298                     	;# 
  3291  0298                     	;# 
  3292  0299                     	;# 
  3293  0299                     	;# 
  3294  029A                     	;# 
  3295  029B                     	;# 
  3296  029C                     	;# 
  3297  029C                     	;# 
  3298  029D                     	;# 
  3299  030C                     	;# 
  3300  030C                     	;# 
  3301  030D                     	;# 
  3302  030E                     	;# 
  3303  030F                     	;# 
  3304  0310                     	;# 
  3305  0310                     	;# 
  3306  0311                     	;# 
  3307  0312                     	;# 
  3308  0313                     	;# 
  3309  0314                     	;# 
  3310  0314                     	;# 
  3311  0315                     	;# 
  3312  0316                     	;# 
  3313  0317                     	;# 
  3314  0318                     	;# 
  3315  0318                     	;# 
  3316  0319                     	;# 
  3317  031A                     	;# 
  3318  031B                     	;# 
  3319  031C                     	;# 
  3320  031C                     	;# 
  3321  031D                     	;# 
  3322  031E                     	;# 
  3323  031F                     	;# 
  3324  038C                     	;# 
  3325  038D                     	;# 
  3326  038E                     	;# 
  3327  0390                     	;# 
  3328  0391                     	;# 
  3329  0392                     	;# 
  3330  040C                     	;# 
  3331  040D                     	;# 
  3332  040E                     	;# 
  3333  040F                     	;# 
  3334  0410                     	;# 
  3335  0411                     	;# 
  3336  0416                     	;# 
  3337  0416                     	;# 
  3338  0417                     	;# 
  3339  0418                     	;# 
  3340  0418                     	;# 
  3341  0419                     	;# 
  3342  041A                     	;# 
  3343  041A                     	;# 
  3344  041B                     	;# 
  3345  041C                     	;# 
  3346  041C                     	;# 
  3347  041D                     	;# 
  3348  041E                     	;# 
  3349  041F                     	;# 
  3350  048C                     	;# 
  3351  048C                     	;# 
  3352  048D                     	;# 
  3353  048E                     	;# 
  3354  048F                     	;# 
  3355  048F                     	;# 
  3356  0490                     	;# 
  3357  0491                     	;# 
  3358  0492                     	;# 
  3359  0492                     	;# 
  3360  0493                     	;# 
  3361  0494                     	;# 
  3362  0495                     	;# 
  3363  0495                     	;# 
  3364  0496                     	;# 
  3365  0497                     	;# 
  3366  0498                     	;# 
  3367  0499                     	;# 
  3368  049A                     	;# 
  3369  049B                     	;# 
  3370  049C                     	;# 
  3371  049D                     	;# 
  3372  050C                     	;# 
  3373  050C                     	;# 
  3374  050D                     	;# 
  3375  050E                     	;# 
  3376  050F                     	;# 
  3377  050F                     	;# 
  3378  0510                     	;# 
  3379  0511                     	;# 
  3380  0512                     	;# 
  3381  0512                     	;# 
  3382  0513                     	;# 
  3383  0514                     	;# 
  3384  0515                     	;# 
  3385  0515                     	;# 
  3386  0516                     	;# 
  3387  0517                     	;# 
  3388  0518                     	;# 
  3389  0519                     	;# 
  3390  051A                     	;# 
  3391  051B                     	;# 
  3392  051C                     	;# 
  3393  051D                     	;# 
  3394  058C                     	;# 
  3395  058C                     	;# 
  3396  058D                     	;# 
  3397  058E                     	;# 
  3398  058F                     	;# 
  3399  058F                     	;# 
  3400  0590                     	;# 
  3401  0591                     	;# 
  3402  0592                     	;# 
  3403  0593                     	;# 
  3404  060C                     	;# 
  3405  060D                     	;# 
  3406  060E                     	;# 
  3407  060F                     	;# 
  3408  0610                     	;# 
  3409  0611                     	;# 
  3410  0612                     	;# 
  3411  0613                     	;# 
  3412  0614                     	;# 
  3413  0616                     	;# 
  3414  0617                     	;# 
  3415  0618                     	;# 
  3416  0619                     	;# 
  3417  061A                     	;# 
  3418  061B                     	;# 
  3419  061C                     	;# 
  3420  061D                     	;# 
  3421  061E                     	;# 
  3422  068C                     	;# 
  3423  068D                     	;# 
  3424  068E                     	;# 
  3425  068F                     	;# 
  3426  0690                     	;# 
  3427  0691                     	;# 
  3428  0692                     	;# 
  3429  0693                     	;# 
  3430  0694                     	;# 
  3431  070C                     	;# 
  3432  070D                     	;# 
  3433  070E                     	;# 
  3434  070F                     	;# 
  3435  0710                     	;# 
  3436  0711                     	;# 
  3437  0712                     	;# 
  3438  0713                     	;# 
  3439  0714                     	;# 
  3440  0716                     	;# 
  3441  0717                     	;# 
  3442  0718                     	;# 
  3443  0719                     	;# 
  3444  071A                     	;# 
  3445  071B                     	;# 
  3446  071C                     	;# 
  3447  071D                     	;# 
  3448  071E                     	;# 
  3449  0796                     	;# 
  3450  0797                     	;# 
  3451  0798                     	;# 
  3452  0799                     	;# 
  3453  079A                     	;# 
  3454  079B                     	;# 
  3455  080C                     	;# 
  3456  080D                     	;# 
  3457  080E                     	;# 
  3458  080F                     	;# 
  3459  0810                     	;# 
  3460  0811                     	;# 
  3461  0812                     	;# 
  3462  0813                     	;# 
  3463  0814                     	;# 
  3464  081A                     	;# 
  3465  081B                     	;# 
  3466  081C                     	;# 
  3467  081D                     	;# 
  3468  081E                     	;# 
  3469  081F                     	;# 
  3470  088C                     	;# 
  3471  088D                     	;# 
  3472  088E                     	;# 
  3473  088F                     	;# 
  3474  0890                     	;# 
  3475  0891                     	;# 
  3476  0892                     	;# 
  3477  0893                     	;# 
  3478  0895                     	;# 
  3479  0896                     	;# 
  3480  0897                     	;# 
  3481  0898                     	;# 
  3482  0899                     	;# 
  3483  089A                     	;# 
  3484  089B                     	;# 
  3485  090C                     	;# 
  3486  090E                     	;# 
  3487  090F                     	;# 
  3488  091F                     	;# 
  3489  091F                     	;# 
  3490  098F                     	;# 
  3491  098F                     	;# 
  3492  0990                     	;# 
  3493  0991                     	;# 
  3494  0992                     	;# 
  3495  0993                     	;# 
  3496  0994                     	;# 
  3497  0995                     	;# 
  3498  0996                     	;# 
  3499  0997                     	;# 
  3500  0E0F                     	;# 
  3501  0E10                     	;# 
  3502  0E11                     	;# 
  3503  0E12                     	;# 
  3504  0E13                     	;# 
  3505  0E14                     	;# 
  3506  0E15                     	;# 
  3507  0E16                     	;# 
  3508  0E17                     	;# 
  3509  0E18                     	;# 
  3510  0E19                     	;# 
  3511  0E1A                     	;# 
  3512  0E1B                     	;# 
  3513  0E1C                     	;# 
  3514  0E1D                     	;# 
  3515  0E1E                     	;# 
  3516  0E1F                     	;# 
  3517  0E20                     	;# 
  3518  0E21                     	;# 
  3519  0E22                     	;# 
  3520  0E23                     	;# 
  3521  0E24                     	;# 
  3522  0E25                     	;# 
  3523  0E26                     	;# 
  3524  0E27                     	;# 
  3525  0E28                     	;# 
  3526  0E29                     	;# 
  3527  0E2A                     	;# 
  3528  0E2B                     	;# 
  3529  0E2C                     	;# 
  3530  0E2D                     	;# 
  3531  0E2E                     	;# 
  3532  0E2F                     	;# 
  3533  0E30                     	;# 
  3534  0E31                     	;# 
  3535  0E32                     	;# 
  3536  0E33                     	;# 
  3537  0E34                     	;# 
  3538  0E35                     	;# 
  3539  0E36                     	;# 
  3540  0E37                     	;# 
  3541  0E8F                     	;# 
  3542  0E90                     	;# 
  3543  0E91                     	;# 
  3544  0E92                     	;# 
  3545  0E93                     	;# 
  3546  0E94                     	;# 
  3547  0E95                     	;# 
  3548  0E96                     	;# 
  3549  0E97                     	;# 
  3550  0E9C                     	;# 
  3551  0E9D                     	;# 
  3552  0E9E                     	;# 
  3553  0EA1                     	;# 
  3554  0EA2                     	;# 
  3555  0EA3                     	;# 
  3556  0EA4                     	;# 
  3557  0EA5                     	;# 
  3558  0EA9                     	;# 
  3559  0EAA                     	;# 
  3560  0EAB                     	;# 
  3561  0EAC                     	;# 
  3562  0EB1                     	;# 
  3563  0EB2                     	;# 
  3564  0EB3                     	;# 
  3565  0EB8                     	;# 
  3566  0EB9                     	;# 
  3567  0EBA                     	;# 
  3568  0EBB                     	;# 
  3569  0EBC                     	;# 
  3570  0EBD                     	;# 
  3571  0EBE                     	;# 
  3572  0EC3                     	;# 
  3573  0EC5                     	;# 
  3574  0EC6                     	;# 
  3575  0EC7                     	;# 
  3576  0EC8                     	;# 
  3577  0EC9                     	;# 
  3578  0ECA                     	;# 
  3579  0ECB                     	;# 
  3580  0ECC                     	;# 
  3581  0F10                     	;# 
  3582  0F11                     	;# 
  3583  0F12                     	;# 
  3584  0F13                     	;# 
  3585  0F14                     	;# 
  3586  0F15                     	;# 
  3587  0F16                     	;# 
  3588  0F17                     	;# 
  3589  0F18                     	;# 
  3590  0F19                     	;# 
  3591  0F1A                     	;# 
  3592  0F1B                     	;# 
  3593  0F1C                     	;# 
  3594  0F1D                     	;# 
  3595  0F1E                     	;# 
  3596  0F1F                     	;# 
  3597  0F20                     	;# 
  3598  0F21                     	;# 
  3599  0F22                     	;# 
  3600  0F23                     	;# 
  3601  0F24                     	;# 
  3602  0F25                     	;# 
  3603  0F26                     	;# 
  3604  0F27                     	;# 
  3605  0F38                     	;# 
  3606  0F39                     	;# 
  3607  0F3A                     	;# 
  3608  0F3B                     	;# 
  3609  0F3C                     	;# 
  3610  0F3D                     	;# 
  3611  0F3E                     	;# 
  3612  0F3F                     	;# 
  3613  0F40                     	;# 
  3614  0F41                     	;# 
  3615  0F43                     	;# 
  3616  0F44                     	;# 
  3617  0F45                     	;# 
  3618  0F46                     	;# 
  3619  0F47                     	;# 
  3620  0F48                     	;# 
  3621  0F49                     	;# 
  3622  0F4A                     	;# 
  3623  0F4B                     	;# 
  3624  0F4C                     	;# 
  3625  0F4E                     	;# 
  3626  0F4F                     	;# 
  3627  0F50                     	;# 
  3628  0F51                     	;# 
  3629  0F52                     	;# 
  3630  0F53                     	;# 
  3631  0F54                     	;# 
  3632  0F55                     	;# 
  3633  0F56                     	;# 
  3634  0F57                     	;# 
  3635  0F65                     	;# 
  3636  0F68                     	;# 
  3637  0F69                     	;# 
  3638  0F6A                     	;# 
  3639  0F6B                     	;# 
  3640  0FE4                     	;# 
  3641  0FE5                     	;# 
  3642  0FE6                     	;# 
  3643  0FE7                     	;# 
  3644  0FE8                     	;# 
  3645  0FE9                     	;# 
  3646  0FEA                     	;# 
  3647  0FEB                     	;# 
  3648  0FED                     	;# 
  3649  0FEE                     	;# 
  3650  0FEF                     	;# 
  3651  0000                     	;# 
  3652  0001                     	;# 
  3653  0002                     	;# 
  3654  0003                     	;# 
  3655  0004                     	;# 
  3656  0005                     	;# 
  3657  0006                     	;# 
  3658  0007                     	;# 
  3659  0008                     	;# 
  3660  0009                     	;# 
  3661  000A                     	;# 
  3662  000B                     	;# 
  3663  000C                     	;# 
  3664  000D                     	;# 
  3665  000E                     	;# 
  3666  0010                     	;# 
  3667  0011                     	;# 
  3668  0012                     	;# 
  3669  0013                     	;# 
  3670  0016                     	;# 
  3671  0017                     	;# 
  3672  0018                     	;# 
  3673  001C                     	;# 
  3674  001C                     	;# 
  3675  001D                     	;# 
  3676  001D                     	;# 
  3677  001E                     	;# 
  3678  001F                     	;# 
  3679  008C                     	;# 
  3680  008C                     	;# 
  3681  008D                     	;# 
  3682  008E                     	;# 
  3683  008E                     	;# 
  3684  008F                     	;# 
  3685  0090                     	;# 
  3686  0090                     	;# 
  3687  0091                     	;# 
  3688  0093                     	;# 
  3689  0094                     	;# 
  3690  0095                     	;# 
  3691  0096                     	;# 
  3692  0097                     	;# 
  3693  0098                     	;# 
  3694  0099                     	;# 
  3695  009A                     	;# 
  3696  009B                     	;# 
  3697  009C                     	;# 
  3698  009D                     	;# 
  3699  009E                     	;# 
  3700  010C                     	;# 
  3701  010D                     	;# 
  3702  010E                     	;# 
  3703  010E                     	;# 
  3704  010F                     	;# 
  3705  0110                     	;# 
  3706  0110                     	;# 
  3707  0111                     	;# 
  3708  0112                     	;# 
  3709  0112                     	;# 
  3710  0113                     	;# 
  3711  0114                     	;# 
  3712  0114                     	;# 
  3713  0115                     	;# 
  3714  0116                     	;# 
  3715  0116                     	;# 
  3716  0117                     	;# 
  3717  0119                     	;# 
  3718  0119                     	;# 
  3719  0119                     	;# 
  3720  011A                     	;# 
  3721  011A                     	;# 
  3722  011A                     	;# 
  3723  011B                     	;# 
  3724  011B                     	;# 
  3725  011B                     	;# 
  3726  011B                     	;# 
  3727  011B                     	;# 
  3728  011C                     	;# 
  3729  011C                     	;# 
  3730  011C                     	;# 
  3731  011D                     	;# 
  3732  011D                     	;# 
  3733  011D                     	;# 
  3734  011E                     	;# 
  3735  011E                     	;# 
  3736  011E                     	;# 
  3737  011F                     	;# 
  3738  011F                     	;# 
  3739  011F                     	;# 
  3740  011F                     	;# 
  3741  011F                     	;# 
  3742  018C                     	;# 
  3743  018D                     	;# 
  3744  018E                     	;# 
  3745  018F                     	;# 
  3746  0190                     	;# 
  3747  0191                     	;# 
  3748  0192                     	;# 
  3749  0196                     	;# 
  3750  0197                     	;# 
  3751  0198                     	;# 
  3752  0199                     	;# 
  3753  019A                     	;# 
  3754  019B                     	;# 
  3755  019C                     	;# 
  3756  020C                     	;# 
  3757  020D                     	;# 
  3758  020E                     	;# 
  3759  020F                     	;# 
  3760  020F                     	;# 
  3761  0210                     	;# 
  3762  0210                     	;# 
  3763  0211                     	;# 
  3764  0211                     	;# 
  3765  0212                     	;# 
  3766  0213                     	;# 
  3767  0214                     	;# 
  3768  0215                     	;# 
  3769  0215                     	;# 
  3770  0216                     	;# 
  3771  0216                     	;# 
  3772  0217                     	;# 
  3773  0217                     	;# 
  3774  0218                     	;# 
  3775  0219                     	;# 
  3776  021A                     	;# 
  3777  021B                     	;# 
  3778  021B                     	;# 
  3779  021C                     	;# 
  3780  021C                     	;# 
  3781  021D                     	;# 
  3782  021D                     	;# 
  3783  021E                     	;# 
  3784  021F                     	;# 
  3785  028C                     	;# 
  3786  028C                     	;# 
  3787  028D                     	;# 
  3788  028D                     	;# 
  3789  028E                     	;# 
  3790  028F                     	;# 
  3791  0290                     	;# 
  3792  0290                     	;# 
  3793  0291                     	;# 
  3794  0292                     	;# 
  3795  0292                     	;# 
  3796  0293                     	;# 
  3797  0293                     	;# 
  3798  0294                     	;# 
  3799  0295                     	;# 
  3800  0296                     	;# 
  3801  0296                     	;# 
  3802  0297                     	;# 
  3803  0298                     	;# 
  3804  0298                     	;# 
  3805  0299                     	;# 
  3806  0299                     	;# 
  3807  029A                     	;# 
  3808  029B                     	;# 
  3809  029C                     	;# 
  3810  029C                     	;# 
  3811  029D                     	;# 
  3812  030C                     	;# 
  3813  030C                     	;# 
  3814  030D                     	;# 
  3815  030E                     	;# 
  3816  030F                     	;# 
  3817  0310                     	;# 
  3818  0310                     	;# 
  3819  0311                     	;# 
  3820  0312                     	;# 
  3821  0313                     	;# 
  3822  0314                     	;# 
  3823  0314                     	;# 
  3824  0315                     	;# 
  3825  0316                     	;# 
  3826  0317                     	;# 
  3827  0318                     	;# 
  3828  0318                     	;# 
  3829  0319                     	;# 
  3830  031A                     	;# 
  3831  031B                     	;# 
  3832  031C                     	;# 
  3833  031C                     	;# 
  3834  031D                     	;# 
  3835  031E                     	;# 
  3836  031F                     	;# 
  3837  038C                     	;# 
  3838  038D                     	;# 
  3839  038E                     	;# 
  3840  0390                     	;# 
  3841  0391                     	;# 
  3842  0392                     	;# 
  3843  040C                     	;# 
  3844  040D                     	;# 
  3845  040E                     	;# 
  3846  040F                     	;# 
  3847  0410                     	;# 
  3848  0411                     	;# 
  3849  0416                     	;# 
  3850  0416                     	;# 
  3851  0417                     	;# 
  3852  0418                     	;# 
  3853  0418                     	;# 
  3854  0419                     	;# 
  3855  041A                     	;# 
  3856  041A                     	;# 
  3857  041B                     	;# 
  3858  041C                     	;# 
  3859  041C                     	;# 
  3860  041D                     	;# 
  3861  041E                     	;# 
  3862  041F                     	;# 
  3863  048C                     	;# 
  3864  048C                     	;# 
  3865  048D                     	;# 
  3866  048E                     	;# 
  3867  048F                     	;# 
  3868  048F                     	;# 
  3869  0490                     	;# 
  3870  0491                     	;# 
  3871  0492                     	;# 
  3872  0492                     	;# 
  3873  0493                     	;# 
  3874  0494                     	;# 
  3875  0495                     	;# 
  3876  0495                     	;# 
  3877  0496                     	;# 
  3878  0497                     	;# 
  3879  0498                     	;# 
  3880  0499                     	;# 
  3881  049A                     	;# 
  3882  049B                     	;# 
  3883  049C                     	;# 
  3884  049D                     	;# 
  3885  050C                     	;# 
  3886  050C                     	;# 
  3887  050D                     	;# 
  3888  050E                     	;# 
  3889  050F                     	;# 
  3890  050F                     	;# 
  3891  0510                     	;# 
  3892  0511                     	;# 
  3893  0512                     	;# 
  3894  0512                     	;# 
  3895  0513                     	;# 
  3896  0514                     	;# 
  3897  0515                     	;# 
  3898  0515                     	;# 
  3899  0516                     	;# 
  3900  0517                     	;# 
  3901  0518                     	;# 
  3902  0519                     	;# 
  3903  051A                     	;# 
  3904  051B                     	;# 
  3905  051C                     	;# 
  3906  051D                     	;# 
  3907  058C                     	;# 
  3908  058C                     	;# 
  3909  058D                     	;# 
  3910  058E                     	;# 
  3911  058F                     	;# 
  3912  058F                     	;# 
  3913  0590                     	;# 
  3914  0591                     	;# 
  3915  0592                     	;# 
  3916  0593                     	;# 
  3917  060C                     	;# 
  3918  060D                     	;# 
  3919  060E                     	;# 
  3920  060F                     	;# 
  3921  0610                     	;# 
  3922  0611                     	;# 
  3923  0612                     	;# 
  3924  0613                     	;# 
  3925  0614                     	;# 
  3926  0616                     	;# 
  3927  0617                     	;# 
  3928  0618                     	;# 
  3929  0619                     	;# 
  3930  061A                     	;# 
  3931  061B                     	;# 
  3932  061C                     	;# 
  3933  061D                     	;# 
  3934  061E                     	;# 
  3935  068C                     	;# 
  3936  068D                     	;# 
  3937  068E                     	;# 
  3938  068F                     	;# 
  3939  0690                     	;# 
  3940  0691                     	;# 
  3941  0692                     	;# 
  3942  0693                     	;# 
  3943  0694                     	;# 
  3944  070C                     	;# 
  3945  070D                     	;# 
  3946  070E                     	;# 
  3947  070F                     	;# 
  3948  0710                     	;# 
  3949  0711                     	;# 
  3950  0712                     	;# 
  3951  0713                     	;# 
  3952  0714                     	;# 
  3953  0716                     	;# 
  3954  0717                     	;# 
  3955  0718                     	;# 
  3956  0719                     	;# 
  3957  071A                     	;# 
  3958  071B                     	;# 
  3959  071C                     	;# 
  3960  071D                     	;# 
  3961  071E                     	;# 
  3962  0796                     	;# 
  3963  0797                     	;# 
  3964  0798                     	;# 
  3965  0799                     	;# 
  3966  079A                     	;# 
  3967  079B                     	;# 
  3968  080C                     	;# 
  3969  080D                     	;# 
  3970  080E                     	;# 
  3971  080F                     	;# 
  3972  0810                     	;# 
  3973  0811                     	;# 
  3974  0812                     	;# 
  3975  0813                     	;# 
  3976  0814                     	;# 
  3977  081A                     	;# 
  3978  081B                     	;# 
  3979  081C                     	;# 
  3980  081D                     	;# 
  3981  081E                     	;# 
  3982  081F                     	;# 
  3983  088C                     	;# 
  3984  088D                     	;# 
  3985  088E                     	;# 
  3986  088F                     	;# 
  3987  0890                     	;# 
  3988  0891                     	;# 
  3989  0892                     	;# 
  3990  0893                     	;# 
  3991  0895                     	;# 
  3992  0896                     	;# 
  3993  0897                     	;# 
  3994  0898                     	;# 
  3995  0899                     	;# 
  3996  089A                     	;# 
  3997  089B                     	;# 
  3998  090C                     	;# 
  3999  090E                     	;# 
  4000  090F                     	;# 
  4001  091F                     	;# 
  4002  091F                     	;# 
  4003  098F                     	;# 
  4004  098F                     	;# 
  4005  0990                     	;# 
  4006  0991                     	;# 
  4007  0992                     	;# 
  4008  0993                     	;# 
  4009  0994                     	;# 
  4010  0995                     	;# 
  4011  0996                     	;# 
  4012  0997                     	;# 
  4013  0E0F                     	;# 
  4014  0E10                     	;# 
  4015  0E11                     	;# 
  4016  0E12                     	;# 
  4017  0E13                     	;# 
  4018  0E14                     	;# 
  4019  0E15                     	;# 
  4020  0E16                     	;# 
  4021  0E17                     	;# 
  4022  0E18                     	;# 
  4023  0E19                     	;# 
  4024  0E1A                     	;# 
  4025  0E1B                     	;# 
  4026  0E1C                     	;# 
  4027  0E1D                     	;# 
  4028  0E1E                     	;# 
  4029  0E1F                     	;# 
  4030  0E20                     	;# 
  4031  0E21                     	;# 
  4032  0E22                     	;# 
  4033  0E23                     	;# 
  4034  0E24                     	;# 
  4035  0E25                     	;# 
  4036  0E26                     	;# 
  4037  0E27                     	;# 
  4038  0E28                     	;# 
  4039  0E29                     	;# 
  4040  0E2A                     	;# 
  4041  0E2B                     	;# 
  4042  0E2C                     	;# 
  4043  0E2D                     	;# 
  4044  0E2E                     	;# 
  4045  0E2F                     	;# 
  4046  0E30                     	;# 
  4047  0E31                     	;# 
  4048  0E32                     	;# 
  4049  0E33                     	;# 
  4050  0E34                     	;# 
  4051  0E35                     	;# 
  4052  0E36                     	;# 
  4053  0E37                     	;# 
  4054  0E8F                     	;# 
  4055  0E90                     	;# 
  4056  0E91                     	;# 
  4057  0E92                     	;# 
  4058  0E93                     	;# 
  4059  0E94                     	;# 
  4060  0E95                     	;# 
  4061  0E96                     	;# 
  4062  0E97                     	;# 
  4063  0E9C                     	;# 
  4064  0E9D                     	;# 
  4065  0E9E                     	;# 
  4066  0EA1                     	;# 
  4067  0EA2                     	;# 
  4068  0EA3                     	;# 
  4069  0EA4                     	;# 
  4070  0EA5                     	;# 
  4071  0EA9                     	;# 
  4072  0EAA                     	;# 
  4073  0EAB                     	;# 
  4074  0EAC                     	;# 
  4075  0EB1                     	;# 
  4076  0EB2                     	;# 
  4077  0EB3                     	;# 
  4078  0EB8                     	;# 
  4079  0EB9                     	;# 
  4080  0EBA                     	;# 
  4081  0EBB                     	;# 
  4082  0EBC                     	;# 
  4083  0EBD                     	;# 
  4084  0EBE                     	;# 
  4085  0EC3                     	;# 
  4086  0EC5                     	;# 
  4087  0EC6                     	;# 
  4088  0EC7                     	;# 
  4089  0EC8                     	;# 
  4090  0EC9                     	;# 
  4091  0ECA                     	;# 
  4092  0ECB                     	;# 
  4093  0ECC                     	;# 
  4094  0F10                     	;# 
  4095  0F11                     	;# 
  4096  0F12                     	;# 
  4097  0F13                     	;# 
  4098  0F14                     	;# 
  4099  0F15                     	;# 
  4100  0F16                     	;# 
  4101  0F17                     	;# 
  4102  0F18                     	;# 
  4103  0F19                     	;# 
  4104  0F1A                     	;# 
  4105  0F1B                     	;# 
  4106  0F1C                     	;# 
  4107  0F1D                     	;# 
  4108  0F1E                     	;# 
  4109  0F1F                     	;# 
  4110  0F20                     	;# 
  4111  0F21                     	;# 
  4112  0F22                     	;# 
  4113  0F23                     	;# 
  4114  0F24                     	;# 
  4115  0F25                     	;# 
  4116  0F26                     	;# 
  4117  0F27                     	;# 
  4118  0F38                     	;# 
  4119  0F39                     	;# 
  4120  0F3A                     	;# 
  4121  0F3B                     	;# 
  4122  0F3C                     	;# 
  4123  0F3D                     	;# 
  4124  0F3E                     	;# 
  4125  0F3F                     	;# 
  4126  0F40                     	;# 
  4127  0F41                     	;# 
  4128  0F43                     	;# 
  4129  0F44                     	;# 
  4130  0F45                     	;# 
  4131  0F46                     	;# 
  4132  0F47                     	;# 
  4133  0F48                     	;# 
  4134  0F49                     	;# 
  4135  0F4A                     	;# 
  4136  0F4B                     	;# 
  4137  0F4C                     	;# 
  4138  0F4E                     	;# 
  4139  0F4F                     	;# 
  4140  0F50                     	;# 
  4141  0F51                     	;# 
  4142  0F52                     	;# 
  4143  0F53                     	;# 
  4144  0F54                     	;# 
  4145  0F55                     	;# 
  4146  0F56                     	;# 
  4147  0F57                     	;# 
  4148  0F65                     	;# 
  4149  0F68                     	;# 
  4150  0F69                     	;# 
  4151  0F6A                     	;# 
  4152  0F6B                     	;# 
  4153  0FE4                     	;# 
  4154  0FE5                     	;# 
  4155  0FE6                     	;# 
  4156  0FE7                     	;# 
  4157  0FE8                     	;# 
  4158  0FE9                     	;# 
  4159  0FEA                     	;# 
  4160  0FEB                     	;# 
  4161  0FED                     	;# 
  4162  0FEE                     	;# 
  4163  0FEF                     	;_samples
  4164                           
  4165                           	psect	idataBANK1
  4166  1689                     __pidataBANK1:	
  4167                           
  4168                           ;initializer for _channels
  4169  1689  3401               	retlw	1
  4170  168A  3400               	retlw	0
  4171  168B  3403               	retlw	3
  4172  168C  3400               	retlw	0
  4173  168D  3404               	retlw	4
  4174  168E  3400               	retlw	0
  4175  168F  3405               	retlw	5
  4176  1690  3400               	retlw	0
  4177  1691  3409               	retlw	9
  4178  1692  3400               	retlw	0
  4179  1693  340B               	retlw	11
  4180  1694  3400               	retlw	0
  4181                           
  4182                           	psect	idataBANK2
  4183  16F3                     __pidataBANK2:	
  4184                           
  4185                           ;initializer for ___cgram
  4186  16F3  340C               	retlw	12
  4187  16F4  3412               	retlw	18
  4188  16F5  3412               	retlw	18
  4189  16F6  340C               	retlw	12
  4190  16F7  3400               	retlw	0
  4191  16F8  3400               	retlw	0
  4192  16F9  3400               	retlw	0
  4193  16FA  3400               	retlw	0
  4194  16FB  340A               	retlw	10
  4195  16FC  3415               	retlw	21
  4196  16FD  3411               	retlw	17
  4197  16FE  340A               	retlw	10
  4198  16FF  3404               	retlw	4
  4199  1700  3400               	retlw	0
  4200  1701  3400               	retlw	0
  4201  1702  3400               	retlw	0
  4202  1703  340A               	retlw	10
  4203  1704  341F               	retlw	31
  4204  1705  341F               	retlw	31
  4205  1706  340E               	retlw	14
  4206  1707  3404               	retlw	4
  4207  1708  3400               	retlw	0
  4208  1709  3400               	retlw	0
  4209  170A  3400               	retlw	0
  4210                           
  4211                           	psect	stringtext
  4212  1000                     __pstringtext:	
  4213  1000                     log@coeff:	
  4214  1000  3400               	retlw	0
  4215  1001  3400               	retlw	0
  4216  1002  3400               	retlw	0
  4217  1003  3400               	retlw	0
  4218  1004  3480               	retlw	128
  4219  1005  343F               	retlw	63
  4220  1006  34F0               	retlw	240
  4221  1007  34FF               	retlw	255
  4222  1008  34BE               	retlw	190
  4223  1009  34E2               	retlw	226
  4224  100A  34A9               	retlw	169
  4225  100B  343E               	retlw	62
  4226  100C  3483               	retlw	131
  4227  100D  3476               	retlw	118
  4228  100E  34BE               	retlw	190
  4229  100F  34AE               	retlw	174
  4230  1010  342B               	retlw	43
  4231  1011  343E               	retlw	62
  4232  1012  343C               	retlw	60
  4233  1013  34C3               	retlw	195
  4234  1014  34BD               	retlw	189
  4235  1015  34D2               	retlw	210
  4236  1016  3413               	retlw	19
  4237  1017  343D               	retlw	61
  4238  1018  3478               	retlw	120
  4239  1019  34D3               	retlw	211
  4240  101A  34BB               	retlw	187
  4241  101B                     __end_oflog@coeff:	
  4242  0016                     _LATA	set	22
  4243  0017                     _LATB	set	23
  4244  0018                     _LATC	set	24
  4245  0011                     _TRISA	set	17
  4246  0012                     _TRISB	set	18
  4247  0013                     _TRISC	set	19
  4248  005F                     _GIE	set	95
  4249  0060                     _RA0	set	96
  4250  0062                     _RA2	set	98
  4251  0066                     _RA6	set	102
  4252  0067                     _RA7	set	103
  4253  0070                     _RC0	set	112
  4254  0071                     _RC1	set	113
  4255  009D                     _ADACQ	set	157
  4256  0099                     _ADACT	set	153
  4257  009B                     _ADCAP	set	155
  4258  0098                     _ADCLK	set	152
  4259  0093                     _ADCON0	set	147
  4260  0093                     _ADCON0bits	set	147
  4261  0094                     _ADCON1	set	148
  4262  0095                     _ADCON2	set	149
  4263  0096                     _ADCON3	set	150
  4264  009E                     _ADPCH	set	158
  4265  009C                     _ADPRE	set	156
  4266  009A                     _ADREF	set	154
  4267  008D                     _ADRESH	set	141
  4268  008C                     _ADRESL	set	140
  4269  0097                     _ADSTAT	set	151
  4270  010F                     _ADLTHH	set	271
  4271  010E                     _ADLTHL	set	270
  4272  010D                     _ADRPT	set	269
  4273  0113                     _ADSTPTH	set	275
  4274  0112                     _ADSTPTL	set	274
  4275  0111                     _ADUTHH	set	273
  4276  0110                     _ADUTHL	set	272
  4277  021F                     _CCPTMRS1bits	set	543
  4278  0290                     _T2CLKCON	set	656
  4279  028E                     _T2CON	set	654
  4280  028E                     _T2CONbits	set	654
  4281  028F                     _T2HLT	set	655
  4282  028D                     _T2PR	set	653
  4283  0291                     _T2RST	set	657
  4284  028C                     _T2TMR	set	652
  4285  038E                     _PWM6CON	set	910
  4286  038D                     _PWM6DCH	set	909
  4287  038C                     _PWM6DCL	set	908
  4288  0716                     _PIE0bits	set	1814
  4289  0710                     _PIR4bits	set	1808
  4290  088D                     _OSCCON1	set	2189
  4291  088F                     _OSCCON3	set	2191
  4292  0891                     _OSCEN	set	2193
  4293  0893                     _OSCFRQ	set	2195
  4294  0892                     _OSCTUNE	set	2194
  4295  090C                     _FVRCON	set	2316
  4296  0E8F                     _PPSLOCK	set	3727
  4297  0E8F                     _PPSLOCKbits	set	3727
  4298  0F38                     _ANSELA	set	3896
  4299  0F43                     _ANSELB	set	3907
  4300  0F4E                     _ANSELC	set	3918
  4301  0F22                     _RC2PPS	set	3874
  4302  0F39                     _WPUA	set	3897
  4303  0F44                     _WPUB	set	3908
  4304  0F4F                     _WPUC	set	3919
  4305  0F65                     _WPUE	set	3941
  4306  101B                     STR_27:	
  4307  101B  3442               	retlw	66	;'B'
  4308  101C  3461               	retlw	97	;'a'
  4309  101D  3463               	retlw	99	;'c'
  4310  101E  346B               	retlw	107	;'k'
  4311  101F  344C               	retlw	76	;'L'
  4312  1020  3469               	retlw	105	;'i'
  4313  1021  3467               	retlw	103	;'g'
  4314  1022  3468               	retlw	104	;'h'
  4315  1023  3474               	retlw	116	;'t'
  4316  1024  343A               	retlw	58	;':'
  4317  1025  3400               	retlw	0
  4318  1026                     STR_30:	
  4319  1026  344F               	retlw	79	;'O'
  4320  1027  3475               	retlw	117	;'u'
  4321  1028  3474               	retlw	116	;'t'
  4322  1029  342D               	retlw	45	;'-'
  4323  102A  343E               	retlw	62	;'>'
  4324  102B  3450               	retlw	80	;'P'
  4325  102C  346F               	retlw	111	;'o'
  4326  102D  346F               	retlw	111	;'o'
  4327  102E  346C               	retlw	108	;'l'
  4328  102F  3400               	retlw	0
  4329  1030                     STR_29:	
  4330  1030  3449               	retlw	73	;'I'
  4331  1031  346E               	retlw	110	;'n'
  4332  1032  342D               	retlw	45	;'-'
  4333  1033  343E               	retlw	62	;'>'
  4334  1034  3453               	retlw	83	;'S'
  4335  1035  346F               	retlw	111	;'o'
  4336  1036  346C               	retlw	108	;'l'
  4337  1037  3461               	retlw	97	;'a'
  4338  1038  3472               	retlw	114	;'r'
  4339  1039  3400               	retlw	0
  4340  103A                     STR_6:	
  4341  103A  3420               	retlw	32	;' '
  4342  103B  3400               	retlw	0
  4343  103C                     STR_26:	
  4344  103C  3421               	retlw	33	;'!'
  4345  103D  3400               	retlw	0
  4346  103E                     STR_20:	
  4347  103E  3426               	retlw	38	;'&'
  4348  103F  3400               	retlw	0
  4349  1040                     STR_12:	
  4350  1040  342C               	retlw	44	;','
  4351  1041  3400               	retlw	0
  4352  1042                     STR_1:	
  4353  1042  3441               	retlw	65	;'A'
  4354  1043  3400               	retlw	0
  4355  1044                     STR_7:	
  4356  1044  3444               	retlw	68	;'D'
  4357  1045  3400               	retlw	0
  4358  1046                     STR_18:	
  4359  1046  3445               	retlw	69	;'E'
  4360  1047  3400               	retlw	0
  4361  1048                     STR_4:	
  4362  1048  3448               	retlw	72	;'H'
  4363  1049  3400               	retlw	0
  4364  104A                     STR_10:	
  4365  104A  3449               	retlw	73	;'I'
  4366  104B  3400               	retlw	0
  4367  104C                     STR_22:	
  4368  104C  344B               	retlw	75	;'K'
  4369  104D  3400               	retlw	0
  4370  104E                     STR_2:	
  4371  104E  344C               	retlw	76	;'L'
  4372  104F  3400               	retlw	0
  4373  1050                     STR_3:	
  4374  1050  344F               	retlw	79	;'O'
  4375  1051  3400               	retlw	0
  4376  1052                     STR_15:	
  4377  1052  3450               	retlw	80	;'P'
  4378  1053  3400               	retlw	0
  4379  1054                     STR_13:	
  4380  1054  3453               	retlw	83	;'S'
  4381  1055  3400               	retlw	0
  4382  1056                     STR_9:	
  4383  1056  3456               	retlw	86	;'V'
  4384  1057  3400               	retlw	0
  4385  103A                     
  4386                           ; #config settings
  4387  0000                     
  4388                           	psect	cinit
  4389  07BD                     start_initialization:	
  4390  07BD                     __initialization:		;BIGRAM
  4391                           
  4392                           ; Initialize objects allocated to BANK1
  4393  07BD  3089               	movlw	low __pidataBANK1
  4394  07BE  0084               	movwf	4
  4395  07BF  3096               	movlw	(high __pidataBANK1)| (0+128)
  4396  07C0  0085               	movwf	5
  4397  07C1  30DA               	movlw	low __pdataBANK1
  4398  07C2  0086               	movwf	6
  4399  07C3  3000               	movlw	high __pdataBANK1
  4400  07C4  0087               	movwf	7
  4401  07C5  3000               	movlw	0
  4402  07C6  00FF               	movwf	btemp+1
  4403  07C7  300C               	movlw	12
  4404  07C8  3196  267D  3187   	fcall	init_ram
  4405                           
  4406                           ; Initialize objects allocated to BANK2
  4407  07CB  30F3               	movlw	low __pidataBANK2
  4408  07CC  0084               	movwf	4
  4409  07CD  3096               	movlw	(high __pidataBANK2)| (0+128)
  4410  07CE  0085               	movwf	5
  4411  07CF  3020               	movlw	low __pdataBANK2
  4412  07D0  0086               	movwf	6
  4413  07D1  3001               	movlw	high __pdataBANK2
  4414  07D2  0087               	movwf	7
  4415  07D3  3000               	movlw	0
  4416  07D4  00FF               	movwf	btemp+1
  4417  07D5  3018               	movlw	24
  4418  07D6  3196  267D  3187   	fcall	init_ram
  4419                           
  4420                           ; Clear objects allocated to BIGRAM
  4421  07D9  3000               	movlw	low (0+8960)
  4422  07DA  0084               	movwf	4
  4423  07DB  3023               	movlw	high (0+8960)
  4424  07DC  0085               	movwf	5
  4425  07DD  30F0               	movlw	240
  4426  07DE  00FE               	movwf	btemp
  4427  07DF  3000               	movlw	0
  4428  07E0  00FF               	movwf	btemp+1
  4429  07E1  3196  2671  3187   	fcall	clear_ram0
  4430                           
  4431                           ; Clear objects allocated to BANK0
  4432  07E4  01EC               	clrf	__pbssBANK0& (0+127)
  4433  07E5  01ED               	clrf	(__pbssBANK0+1)& (0+127)
  4434  07E6  01EE               	clrf	(__pbssBANK0+2)& (0+127)
  4435  07E7  01EF               	clrf	(__pbssBANK0+3)& (0+127)
  4436                           
  4437                           ; Clear objects allocated to BANK1
  4438  07E8  30A0               	movlw	low __pbssBANK1
  4439  07E9  0084               	movwf	4
  4440  07EA  3000               	movlw	high __pbssBANK1
  4441  07EB  0085               	movwf	5
  4442  07EC  301D               	movlw	29
  4443  07ED  00FE               	movwf	btemp
  4444  07EE  3000               	movlw	0
  4445  07EF  00FF               	movwf	btemp+1
  4446  07F0  3196  2671  3187   	fcall	clear_ram0
  4447                           
  4448                           ; Clear objects allocated to BANK2
  4449  07F3  3038               	movlw	low __pbssBANK2
  4450  07F4  0084               	movwf	4
  4451  07F5  3001               	movlw	high __pbssBANK2
  4452  07F6  0085               	movwf	5
  4453  07F7  300C               	movlw	12
  4454  07F8  00FE               	movwf	btemp
  4455  07F9  3000               	movlw	0
  4456  07FA  00FF               	movwf	btemp+1
  4457  07FB  3196  2671         	fcall	clear_ram0
  4458  07FD                     end_of_initialization:	
  4459                           ;End of C runtime variable initialization code
  4460                           
  4461  07FD                     __end_of__initialization:	
  4462  07FD  0020               	movlb	0
  4463  07FE  3182  2A18         	ljmp	_main	;jump to C main() function
  4464                           
  4465                           	psect	bssBANK0
  4466  006C                     __pbssBANK0:	
  4467  006C                     _errno:	
  4468  006C                     	ds	2
  4469  006E                     _sampleIndex:	
  4470  006E                     	ds	2
  4471                           
  4472                           	psect	bssBANK1
  4473  00A0                     __pbssBANK1:	
  4474  00A0                     _totals:	
  4475  00A0                     	ds	24
  4476  00B8                     LCD_Write_Int@F13687:	
  4477  00B8                     	ds	5
  4478                           
  4479                           	psect	dataBANK1
  4480  00DA                     __pdataBANK1:	
  4481  00DA                     _channels:	
  4482  00DA                     	ds	12
  4483                           
  4484                           	psect	bssBANK2
  4485  0138                     __pbssBANK2:	
  4486  0138                     main@F13657:	
  4487  0138                     	ds	12
  4488                           
  4489                           	psect	dataBANK2
  4490  0120                     __pdataBANK2:	
  4491  0120                     ___cgram:	
  4492  0120                     	ds	24
  4493                           
  4494                           	psect	inittext
  4495  167D                     init_ram:	
  4496  167D  00FE               	movwf	126
  4497  167E                     initloop:	
  4498  167E  0012               	moviw fsr0++
  4499  167F  001E               	movwi fsr1++
  4500  1680  3001               	movlw	1
  4501  1681  02FE               	subwf	126,f
  4502  1682  3000               	movlw	0
  4503  1683  3BFF               	subwfb	127,f
  4504  1684  087F               	movf	127,w
  4505  1685  047E               	iorwf	126,w
  4506  1686  1903               	btfsc	3,2
  4507  1687  3400               	retlw	0
  4508  1688  2E7E               	goto	initloop
  4509                           
  4510                           	psect	clrtext
  4511  1671                     clear_ram0:	
  4512                           ;	Called with FSR0 containing the base address, and
  4513                           ;	btemp/btemp+1 has the size to clear
  4514                           
  4515  1671  0064               	clrwdt	;clear the watchdog before getting into this loop
  4516  1672                     clrloop0:	
  4517  1672  0180               	clrf	0	;clear RAM location pointed to by FSR
  4518  1673  3101               	addfsr 0,1
  4519  1674  3001               	movlw	1
  4520  1675  02FE               	subwf	126,f
  4521  1676  3000               	movlw	0
  4522  1677  3BFF               	subwfb	127,f
  4523  1678  087F               	movf	127,w
  4524  1679  047E               	iorwf	126,w
  4525  167A  1903               	btfsc	3,2
  4526  167B  3400               	retlw	0	;all done for this memory range, return
  4527  167C  2E72               	goto	clrloop0	;have we reached the end yet?
  4528                           
  4529                           	psect	cstackBANK1
  4530  00BD                     __pcstackBANK1:	
  4531  00BD                     main@loop:	
  4532                           
  4533                           ; 1 bytes @ 0x0
  4534  00BD                     	ds	1
  4535  00BE                     main@startDelay:	
  4536                           
  4537                           ; 1 bytes @ 0x1
  4538  00BE                     	ds	1
  4539  00BF                     main@analogs:	
  4540                           
  4541                           ; 12 bytes @ 0x2
  4542  00BF                     	ds	12
  4543  00CB                     main@bCount:	
  4544                           
  4545                           ; 2 bytes @ 0xE
  4546  00CB                     	ds	2
  4547  00CD                     main@displayTemp:	
  4548                           
  4549                           ; 3 bytes @ 0x10
  4550  00CD                     	ds	3
  4551  00D0                     main@displayTemp2:	
  4552                           
  4553                           ; 3 bytes @ 0x13
  4554  00D0                     	ds	3
  4555  00D3                     main@resetDelay:	
  4556                           
  4557                           ; 1 bytes @ 0x16
  4558  00D3                     	ds	1
  4559  00D4                     main@tPadCount:	
  4560                           
  4561                           ; 1 bytes @ 0x17
  4562  00D4                     	ds	1
  4563  00D5                     main@choice:	
  4564                           
  4565                           ; 1 bytes @ 0x18
  4566  00D5                     	ds	1
  4567  00D6                     main@C_or_F:	
  4568                           
  4569                           ; 1 bytes @ 0x19
  4570  00D6                     	ds	1
  4571  00D7                     main@x:	
  4572                           
  4573                           ; 1 bytes @ 0x1A
  4574  00D7                     	ds	1
  4575  00D8                     main@dutyCycle:	
  4576                           
  4577                           ; 2 bytes @ 0x1B
  4578  00D8                     	ds	2
  4579                           
  4580                           	psect	cstackCOMMON
  4581  0070                     __pcstackCOMMON:	
  4582  0070                     ?___ftge:	
  4583  0070                     ?_LCD_Cmd:	
  4584                           ; 1 bit 
  4585                           
  4586  0070                     ?_LCD_Write_Char:	
  4587                           ; 1 bytes @ 0x0
  4588                           
  4589  0070                     ?_OSCILLATOR_Initialize:	
  4590                           ; 1 bytes @ 0x0
  4591                           
  4592  0070                     ??_OSCILLATOR_Initialize:	
  4593                           ; 1 bytes @ 0x0
  4594                           
  4595  0070                     ?_PWM6_Initialize:	
  4596                           ; 1 bytes @ 0x0
  4597                           
  4598  0070                     ??_PWM6_Initialize:	
  4599                           ; 1 bytes @ 0x0
  4600                           
  4601  0070                     ?_TMR2_Initialize:	
  4602                           ; 1 bytes @ 0x0
  4603                           
  4604  0070                     ??_TMR2_Initialize:	
  4605                           ; 1 bytes @ 0x0
  4606                           
  4607  0070                     ?_ADCC_Initialize:	
  4608                           ; 1 bytes @ 0x0
  4609                           
  4610  0070                     ??_ADCC_Initialize:	
  4611                           ; 1 bytes @ 0x0
  4612                           
  4613  0070                     ?_InitCustomChars:	
  4614                           ; 1 bytes @ 0x0
  4615                           
  4616  0070                     ?_LCD_Port:	
  4617                           ; 1 bytes @ 0x0
  4618                           
  4619  0070                     ??_LCD_Port:	
  4620                           ; 1 bytes @ 0x0
  4621                           
  4622  0070                     ?_LCD_Clear:	
  4623                           ; 1 bytes @ 0x0
  4624                           
  4625  0070                     ?_LCD_Init:	
  4626                           ; 1 bytes @ 0x0
  4627                           
  4628  0070                     ?_PIN_MANAGER_Initialize:	
  4629                           ; 1 bytes @ 0x0
  4630                           
  4631  0070                     ??_PIN_MANAGER_Initialize:	
  4632                           ; 1 bytes @ 0x0
  4633                           
  4634  0070                     ?_SYSTEM_Initialize:	
  4635                           ; 1 bytes @ 0x0
  4636                           
  4637  0070                     ?_PWM6_LoadDutyValue:	
  4638                           ; 1 bytes @ 0x0
  4639                           
  4640  0070                     ?_main:	
  4641                           ; 1 bytes @ 0x0
  4642                           
  4643  0070                     ?_ADCRead:	
  4644                           ; 1 bytes @ 0x0
  4645                           
  4646  0070                     ?___wmul:	
  4647                           ; 2 bytes @ 0x0
  4648                           
  4649  0070                     ?___awdiv:	
  4650                           ; 2 bytes @ 0x0
  4651                           
  4652  0070                     ?___awmod:	
  4653                           ; 2 bytes @ 0x0
  4654                           
  4655  0070                     ?___lwdiv:	
  4656                           ; 2 bytes @ 0x0
  4657                           
  4658  0070                     ?___ftpack:	
  4659                           ; 2 bytes @ 0x0
  4660                           
  4661  0070                     ?_frexp:	
  4662                           ; 3 bytes @ 0x0
  4663                           
  4664  0070                     ?___aldiv:	
  4665                           ; 3 bytes @ 0x0
  4666                           
  4667  0070                     ?___fttol:	
  4668                           ; 4 bytes @ 0x0
  4669                           
  4670  0070                     LCD_Port@a:	
  4671                           ; 4 bytes @ 0x0
  4672                           
  4673  0070                     PIN_MANAGER_Initialize@state:	
  4674                           ; 1 bytes @ 0x0
  4675                           
  4676  0070                     PWM6_LoadDutyValue@dutyCycle:	
  4677                           ; 1 bytes @ 0x0
  4678                           
  4679  0070                     ___wmul@multiplier:	
  4680                           ; 2 bytes @ 0x0
  4681                           
  4682  0070                     ___awdiv@divisor:	
  4683                           ; 2 bytes @ 0x0
  4684                           
  4685  0070                     ___awmod@divisor:	
  4686                           ; 2 bytes @ 0x0
  4687                           
  4688  0070                     ___lwdiv@divisor:	
  4689                           ; 2 bytes @ 0x0
  4690                           
  4691  0070                     ___ftpack@arg:	
  4692                           ; 2 bytes @ 0x0
  4693                           
  4694  0070                     ___ftge@ff1:	
  4695                           ; 3 bytes @ 0x0
  4696                           
  4697  0070                     ___fttol@f1:	
  4698                           ; 3 bytes @ 0x0
  4699                           
  4700  0070                     frexp@value:	
  4701                           ; 3 bytes @ 0x0
  4702                           
  4703  0070                     ___aldiv@divisor:	
  4704                           ; 3 bytes @ 0x0
  4705                           
  4706                           
  4707                           ; 4 bytes @ 0x0
  4708  0070                     	ds	1
  4709  0071                     ??_LCD_Cmd:	
  4710  0071                     ??_LCD_Write_Char:	
  4711                           ; 1 bytes @ 0x1
  4712                           
  4713                           
  4714                           ; 1 bytes @ 0x1
  4715  0071                     	ds	1
  4716  0072                     ??_PWM6_LoadDutyValue:	
  4717  0072                     LCD_Write_Char@temp:	
  4718                           ; 1 bytes @ 0x2
  4719                           
  4720  0072                     ___wmul@multiplicand:	
  4721                           ; 1 bytes @ 0x2
  4722                           
  4723  0072                     ___awdiv@dividend:	
  4724                           ; 2 bytes @ 0x2
  4725                           
  4726  0072                     ___awmod@dividend:	
  4727                           ; 2 bytes @ 0x2
  4728                           
  4729  0072                     ___lwdiv@dividend:	
  4730                           ; 2 bytes @ 0x2
  4731                           
  4732                           
  4733                           ; 2 bytes @ 0x2
  4734  0072                     	ds	1
  4735  0073                     ??_ADCRead:	
  4736  0073                     ADCRead@channel:	
  4737                           ; 1 bytes @ 0x3
  4738                           
  4739  0073                     LCD_Cmd@a:	
  4740                           ; 1 bytes @ 0x3
  4741                           
  4742  0073                     LCD_Write_Char@y:	
  4743                           ; 1 bytes @ 0x3
  4744                           
  4745  0073                     ___ftpack@exp:	
  4746                           ; 1 bytes @ 0x3
  4747                           
  4748  0073                     frexp@eptr:	
  4749                           ; 1 bytes @ 0x3
  4750                           
  4751  0073                     ___ftge@ff2:	
  4752                           ; 1 bytes @ 0x3
  4753                           
  4754                           
  4755                           ; 3 bytes @ 0x3
  4756  0073                     	ds	1
  4757  0074                     ??_frexp:	
  4758  0074                     ??_LCD_Clear:	
  4759                           ; 1 bytes @ 0x4
  4760                           
  4761  0074                     ?_LCD_Set_Cursor:	
  4762                           ; 1 bytes @ 0x4
  4763                           
  4764  0074                     ??_LCD_Init:	
  4765                           ; 1 bytes @ 0x4
  4766                           
  4767  0074                     ??___wmul:	
  4768                           ; 1 bytes @ 0x4
  4769                           
  4770  0074                     ??___awdiv:	
  4771                           ; 1 bytes @ 0x4
  4772                           
  4773  0074                     ??___awmod:	
  4774                           ; 1 bytes @ 0x4
  4775                           
  4776  0074                     ??___fttol:	
  4777                           ; 1 bytes @ 0x4
  4778                           
  4779  0074                     ??___lwdiv:	
  4780                           ; 1 bytes @ 0x4
  4781                           
  4782  0074                     LCD_Set_Cursor@y:	
  4783                           ; 1 bytes @ 0x4
  4784                           
  4785  0074                     LCD_Write_Char@a:	
  4786                           ; 1 bytes @ 0x4
  4787                           
  4788  0074                     ___ftpack@sign:	
  4789                           ; 1 bytes @ 0x4
  4790                           
  4791  0074                     ___wmul@product:	
  4792                           ; 1 bytes @ 0x4
  4793                           
  4794  0074                     ___aldiv@dividend:	
  4795                           ; 2 bytes @ 0x4
  4796                           
  4797                           
  4798                           ; 4 bytes @ 0x4
  4799  0074                     	ds	1
  4800  0075                     ??___ftpack:	
  4801  0075                     ??_InitCustomChars:	
  4802                           ; 1 bytes @ 0x5
  4803                           
  4804  0075                     ??_LCD_Set_Cursor:	
  4805                           ; 1 bytes @ 0x5
  4806                           
  4807  0075                     ?_LCD_Write_String:	
  4808                           ; 1 bytes @ 0x5
  4809                           
  4810  0075                     ___awdiv@counter:	
  4811                           ; 1 bytes @ 0x5
  4812                           
  4813  0075                     ___awmod@counter:	
  4814                           ; 1 bytes @ 0x5
  4815                           
  4816  0075                     LCD_Write_String@a:	
  4817                           ; 1 bytes @ 0x5
  4818                           
  4819  0075                     ___lwdiv@quotient:	
  4820                           ; 2 bytes @ 0x5
  4821                           
  4822                           
  4823                           ; 2 bytes @ 0x5
  4824  0075                     	ds	1
  4825  0076                     ??___ftge:	
  4826  0076                     InitCustomChars@i:	
  4827                           ; 1 bytes @ 0x6
  4828                           
  4829  0076                     ___awdiv@sign:	
  4830                           ; 1 bytes @ 0x6
  4831                           
  4832  0076                     ___awmod@sign:	
  4833                           ; 1 bytes @ 0x6
  4834                           
  4835                           
  4836                           ; 1 bytes @ 0x6
  4837  0076                     	ds	1
  4838  0077                     ??_LCD_Write_String:	
  4839  0077                     LCD_Set_Cursor@x:	
  4840                           ; 1 bytes @ 0x7
  4841                           
  4842  0077                     LCD_Init@style:	
  4843                           ; 1 bytes @ 0x7
  4844                           
  4845  0077                     ___lwdiv@counter:	
  4846                           ; 1 bytes @ 0x7
  4847                           
  4848  0077                     ___awdiv@quotient:	
  4849                           ; 1 bytes @ 0x7
  4850                           
  4851                           
  4852                           ; 2 bytes @ 0x7
  4853  0077                     	ds	1
  4854  0078                     ??_SYSTEM_Initialize:	
  4855  0078                     ??___aldiv:	
  4856                           ; 1 bytes @ 0x8
  4857                           
  4858  0078                     ?___awtoft:	
  4859                           ; 1 bytes @ 0x8
  4860                           
  4861  0078                     LCD_Set_Cursor@z:	
  4862                           ; 3 bytes @ 0x8
  4863                           
  4864  0078                     ___fttol@sign1:	
  4865                           ; 1 bytes @ 0x8
  4866                           
  4867  0078                     LCD_Write_String@i:	
  4868                           ; 1 bytes @ 0x8
  4869                           
  4870  0078                     ___awtoft@c:	
  4871                           ; 2 bytes @ 0x8
  4872                           
  4873                           
  4874                           ; 2 bytes @ 0x8
  4875  0078                     	ds	1
  4876  0079                     LCD_Set_Cursor@w:	
  4877  0079                     readAnalog@analog_channel:	
  4878                           ; 1 bytes @ 0x9
  4879                           
  4880  0079                     ___fttol@lval:	
  4881                           ; 2 bytes @ 0x9
  4882                           
  4883                           
  4884                           ; 4 bytes @ 0x9
  4885  0079                     	ds	1
  4886  007A                     LCD_Set_Cursor@temp:	
  4887                           
  4888                           ; 1 bytes @ 0xA
  4889  007A                     	ds	1
  4890  007B                     ??___awtoft:	
  4891  007B                     readAnalog@value:	
  4892                           ; 1 bytes @ 0xB
  4893                           
  4894                           
  4895                           ; 2 bytes @ 0xB
  4896  007B                     	ds	2
  4897  007D                     ___awtoft@sign:	
  4898  007D                     ___fttol@exp1:	
  4899                           ; 1 bytes @ 0xD
  4900                           
  4901                           
  4902                           ; 1 bytes @ 0xD
  4903  007D                     	ds	1
  4904  007E                     ??_eval_poly:	
  4905  007E                     ??_tempCalc:	
  4906                           ; 1 bytes @ 0xE
  4907                           
  4908  007E                     ??___ftsub:	
  4909                           ; 1 bytes @ 0xE
  4910                           
  4911                           
  4912                           	psect	cstackBANK0
  4913  0020                     __pcstackBANK0:	
  4914                           ; 1 bytes @ 0xE
  4915                           
  4916  0020                     ?_LCD_Write_Int:	
  4917  0020                     ?___ftmul:	
  4918                           ; 1 bytes @ 0x0
  4919                           
  4920  0020                     ___aldiv@counter:	
  4921                           ; 3 bytes @ 0x0
  4922                           
  4923  0020                     LCD_Write_Int@value:	
  4924                           ; 1 bytes @ 0x0
  4925                           
  4926  0020                     ___ftmul@f1:	
  4927                           ; 2 bytes @ 0x0
  4928                           
  4929                           
  4930                           ; 3 bytes @ 0x0
  4931  0020                     	ds	1
  4932  0021                     ___aldiv@sign:	
  4933                           
  4934                           ; 1 bytes @ 0x1
  4935  0021                     	ds	1
  4936  0022                     LCD_Write_Int@fieldLength:	
  4937  0022                     ___aldiv@quotient:	
  4938                           ; 1 bytes @ 0x2
  4939                           
  4940                           
  4941                           ; 4 bytes @ 0x2
  4942  0022                     	ds	1
  4943  0023                     LCD_Write_Int@numPlaces:	
  4944  0023                     ___ftmul@f2:	
  4945                           ; 1 bytes @ 0x3
  4946                           
  4947                           
  4948                           ; 3 bytes @ 0x3
  4949  0023                     	ds	1
  4950  0024                     LCD_Write_Int@sign:	
  4951                           
  4952                           ; 1 bytes @ 0x4
  4953  0024                     	ds	1
  4954  0025                     ??_LCD_Write_Int:	
  4955                           
  4956                           ; 1 bytes @ 0x5
  4957  0025                     	ds	1
  4958  0026                     ??___ftmul:	
  4959  0026                     ?_readAnalog:	
  4960                           ; 1 bytes @ 0x6
  4961                           
  4962  0026                     readAnalog@channel:	
  4963                           ; 2 bytes @ 0x6
  4964                           
  4965                           
  4966                           ; 2 bytes @ 0x6
  4967  0026                     	ds	2
  4968  0028                     ??_readAnalog:	
  4969                           
  4970                           ; 1 bytes @ 0x8
  4971  0028                     	ds	2
  4972  002A                     ___ftmul@exp:	
  4973  002A                     LCD_Write_Int@str:	
  4974                           ; 1 bytes @ 0xA
  4975                           
  4976                           
  4977                           ; 5 bytes @ 0xA
  4978  002A                     	ds	1
  4979  002B                     ___ftmul@f3_as_product:	
  4980                           
  4981                           ; 3 bytes @ 0xB
  4982  002B                     	ds	3
  4983  002E                     ___ftmul@cntr:	
  4984                           
  4985                           ; 1 bytes @ 0xE
  4986  002E                     	ds	1
  4987  002F                     ___ftmul@sign:	
  4988  002F                     LCD_Write_Int@j:	
  4989                           ; 1 bytes @ 0xF
  4990                           
  4991                           
  4992                           ; 2 bytes @ 0xF
  4993  002F                     	ds	1
  4994  0030                     ?___ftdiv:	
  4995  0030                     ___ftdiv@f2:	
  4996                           ; 3 bytes @ 0x10
  4997                           
  4998                           
  4999                           ; 3 bytes @ 0x10
  5000  0030                     	ds	1
  5001  0031                     LCD_Write_Int@i:	
  5002                           
  5003                           ; 2 bytes @ 0x11
  5004  0031                     	ds	2
  5005  0033                     ___ftdiv@f1:	
  5006                           
  5007                           ; 3 bytes @ 0x13
  5008  0033                     	ds	3
  5009  0036                     ??___ftdiv:	
  5010                           
  5011                           ; 1 bytes @ 0x16
  5012  0036                     	ds	4
  5013  003A                     ___ftdiv@cntr:	
  5014                           
  5015                           ; 1 bytes @ 0x1A
  5016  003A                     	ds	1
  5017  003B                     ___ftdiv@f3:	
  5018                           
  5019                           ; 3 bytes @ 0x1B
  5020  003B                     	ds	3
  5021  003E                     ___ftdiv@exp:	
  5022                           
  5023                           ; 1 bytes @ 0x1E
  5024  003E                     	ds	1
  5025  003F                     ___ftdiv@sign:	
  5026                           
  5027                           ; 1 bytes @ 0x1F
  5028  003F                     	ds	1
  5029  0040                     ?___ftadd:	
  5030  0040                     ___ftadd@f1:	
  5031                           ; 3 bytes @ 0x20
  5032                           
  5033                           
  5034                           ; 3 bytes @ 0x20
  5035  0040                     	ds	3
  5036  0043                     ___ftadd@f2:	
  5037                           
  5038                           ; 3 bytes @ 0x23
  5039  0043                     	ds	3
  5040  0046                     ??___ftadd:	
  5041                           
  5042                           ; 1 bytes @ 0x26
  5043  0046                     	ds	4
  5044  004A                     ___ftadd@sign:	
  5045                           
  5046                           ; 1 bytes @ 0x2A
  5047  004A                     	ds	1
  5048  004B                     ___ftadd@exp2:	
  5049                           
  5050                           ; 1 bytes @ 0x2B
  5051  004B                     	ds	1
  5052  004C                     ___ftadd@exp1:	
  5053                           
  5054                           ; 1 bytes @ 0x2C
  5055  004C                     	ds	1
  5056  004D                     ?_eval_poly:	
  5057  004D                     ?___ftsub:	
  5058                           ; 3 bytes @ 0x2D
  5059                           
  5060  004D                     ___ftsub@f2:	
  5061                           ; 3 bytes @ 0x2D
  5062                           
  5063  004D                     eval_poly@x:	
  5064                           ; 3 bytes @ 0x2D
  5065                           
  5066                           
  5067                           ; 3 bytes @ 0x2D
  5068  004D                     	ds	3
  5069  0050                     eval_poly@d:	
  5070  0050                     ___ftsub@f1:	
  5071                           ; 2 bytes @ 0x30
  5072                           
  5073                           
  5074                           ; 3 bytes @ 0x30
  5075  0050                     	ds	2
  5076  0052                     eval_poly@n:	
  5077                           
  5078                           ; 2 bytes @ 0x32
  5079  0052                     	ds	2
  5080  0054                     eval_poly@res:	
  5081                           
  5082                           ; 3 bytes @ 0x34
  5083  0054                     	ds	3
  5084  0057                     ?_log:	
  5085  0057                     log@x:	
  5086                           ; 3 bytes @ 0x37
  5087                           
  5088                           
  5089                           ; 3 bytes @ 0x37
  5090  0057                     	ds	3
  5091  005A                     ??_log:	
  5092                           
  5093                           ; 1 bytes @ 0x3A
  5094  005A                     	ds	1
  5095  005B                     log@exponent:	
  5096                           
  5097                           ; 2 bytes @ 0x3B
  5098  005B                     	ds	2
  5099  005D                     ?_tempCalc:	
  5100  005D                     tempCalc@analogValue:	
  5101                           ; 3 bytes @ 0x3D
  5102                           
  5103                           
  5104                           ; 2 bytes @ 0x3D
  5105  005D                     	ds	3
  5106  0060                     tempCalc@R:	
  5107                           
  5108                           ; 3 bytes @ 0x40
  5109  0060                     	ds	3
  5110  0063                     _tempCalc$980:	
  5111                           
  5112                           ; 3 bytes @ 0x43
  5113  0063                     	ds	3
  5114  0066                     tempCalc@steinhart:	
  5115                           
  5116                           ; 3 bytes @ 0x46
  5117  0066                     	ds	3
  5118  0069                     ??_main:	
  5119                           
  5120                           ; 1 bytes @ 0x49
  5121  0069                     	ds	3
  5122                           
  5123                           	psect	maintext
  5124  0218                     __pmaintext:	
  5125 ;;
  5126 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  5127 ;;
  5128 ;; *************** function _main *****************
  5129 ;; Defined at:
  5130 ;;		line 15 in file "main.c"
  5131 ;; Parameters:    Size  Location     Type
  5132 ;;		None
  5133 ;; Auto vars:     Size  Location     Type
  5134 ;;  analogs        12    2[BANK1 ] unsigned int [6]
  5135 ;;  displayTemp2    3   19[BANK1 ] float 
  5136 ;;  displayTemp     3   16[BANK1 ] float 
  5137 ;;  dutyCycle       2   27[BANK1 ] unsigned int 
  5138 ;;  bCount          2   14[BANK1 ] unsigned int 
  5139 ;;  x               1   26[BANK1 ] unsigned char 
  5140 ;;  C_or_F          1   25[BANK1 ] unsigned char 
  5141 ;;  choice          1   24[BANK1 ] unsigned char 
  5142 ;;  tPadCount       1   23[BANK1 ] unsigned char 
  5143 ;;  resetDelay      1   22[BANK1 ] unsigned char 
  5144 ;;  startDelay      1    1[BANK1 ] unsigned char 
  5145 ;;  loop            1    0[BANK1 ] unsigned char 
  5146 ;; Return value:  Size  Location     Type
  5147 ;;                  1    wreg      void 
  5148 ;; Registers used:
  5149 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5150 ;; Tracked objects:
  5151 ;;		On entry : B1F/0
  5152 ;;		On exit  : 0/0
  5153 ;;		Unchanged: 0/0
  5154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5156 ;;      Locals:         0       0      29       0       0       0       0       0       0       0       0       0       
      +0       0
  5157 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5158 ;;      Totals:         0       3      29       0       0       0       0       0       0       0       0       0       
      +0       0
  5159 ;;Total ram usage:       32 bytes
  5160 ;; Hardware stack levels required when called:    5
  5161 ;; This function calls:
  5162 ;;		_ADCRead
  5163 ;;		_LCD_Clear
  5164 ;;		_LCD_Set_Cursor
  5165 ;;		_LCD_Write_Char
  5166 ;;		_LCD_Write_Int
  5167 ;;		_LCD_Write_String
  5168 ;;		_PWM6_LoadDutyValue
  5169 ;;		_SYSTEM_Initialize
  5170 ;;		___ftadd
  5171 ;;		___ftdiv
  5172 ;;		___ftmul
  5173 ;;		___fttol
  5174 ;;		___lwdiv
  5175 ;;		_readAnalog
  5176 ;;		_tempCalc
  5177 ;; This function is called by:
  5178 ;;		Startup code after reset
  5179 ;; This function uses a non-reentrant model
  5180 ;;
  5181                           
  5182                           
  5183                           ;psect for function _main
  5184  0218                     _main:	
  5185                           
  5186                           ;main.c: 17: SYSTEM_Initialize();
  5187                           
  5188                           ;incstack = 0
  5189                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5190  0218  3189  210A  3182   	fcall	_SYSTEM_Initialize
  5191                           
  5192                           ;main.c: 19: uint16_t analogs[6] = {0};
  5193  021B  3038               	movlw	low main@F13657
  5194  021C  0086               	movwf	6
  5195  021D  3001               	movlw	high main@F13657
  5196  021E  0087               	movwf	7
  5197  021F  30BF               	movlw	low main@analogs
  5198  0220  0084               	movwf	4
  5199  0221  3000               	movlw	high main@analogs
  5200  0222  0085               	movwf	5
  5201  0223  300C               	movlw	12
  5202  0224  0020               	movlb	0	; select bank0
  5203  0225  00E9               	movwf	??_main
  5204  0226                     u3210:	
  5205  0226  0016               	moviw fsr1++
  5206  0227  001A               	movwi fsr0++
  5207  0228  0BE9               	decfsz	??_main,f
  5208  0229  2A26               	goto	u3210
  5209                           
  5210                           ;main.c: 21: float displayTemp, displayTemp2;
  5211                           ;main.c: 25: char x = 0;
  5212  022A  0021               	movlb	1	; select bank1
  5213  022B  01D7               	clrf	main@x^(0+128)
  5214                           
  5215                           ;main.c: 27: char loop = 64;
  5216  022C  3040               	movlw	64
  5217  022D  0020               	movlb	0	; select bank0
  5218  022E  00E9               	movwf	??_main
  5219  022F  0869               	movf	??_main,w
  5220  0230  0021               	movlb	1	; select bank1
  5221  0231  00BD               	movwf	main@loop^(0+128)
  5222                           
  5223                           ;main.c: 29: char choice = 2;
  5224  0232  3002               	movlw	2
  5225  0233  0020               	movlb	0	; select bank0
  5226  0234  00E9               	movwf	??_main
  5227  0235  0869               	movf	??_main,w
  5228  0236  0021               	movlb	1	; select bank1
  5229  0237  00D5               	movwf	main@choice^(0+128)
  5230                           
  5231                           ;main.c: 31: char C_or_F = 1;
  5232  0238  01D6               	clrf	main@C_or_F^(0+128)
  5233  0239  0AD6               	incf	main@C_or_F^(0+128),f
  5234                           
  5235                           ;main.c: 33: unsigned int bCount = 0;
  5236  023A  01CB               	clrf	main@bCount^(0+128)
  5237  023B  01CC               	clrf	(main@bCount+1)^(0+128)
  5238                           
  5239                           ;main.c: 35: unsigned char startDelay= 0;
  5240  023C  01BE               	clrf	main@startDelay^(0+128)
  5241                           
  5242                           ;main.c: 37: unsigned char resetDelay= 0;
  5243  023D  01D3               	clrf	main@resetDelay^(0+128)
  5244                           
  5245                           ;main.c: 39: unsigned char tPadCount = 10;
  5246  023E  300A               	movlw	10
  5247  023F  0020               	movlb	0	; select bank0
  5248  0240  00E9               	movwf	??_main
  5249  0241  0869               	movf	??_main,w
  5250  0242  0021               	movlb	1	; select bank1
  5251  0243  00D4               	movwf	main@tPadCount^(0+128)
  5252                           
  5253                           ;main.c: 42: uint16_t dutyCycle = 1023;
  5254  0244  30FF               	movlw	255
  5255  0245  00D8               	movwf	main@dutyCycle^(0+128)
  5256  0246  3003               	movlw	3
  5257  0247  00D9               	movwf	(main@dutyCycle^(0+128)+1)
  5258                           
  5259                           ;main.c: 44: PWM6_LoadDutyValue(dutyCycle);
  5260  0248  0859               	movf	(main@dutyCycle+1)^(0+128),w
  5261  0249  00F1               	movwf	PWM6_LoadDutyValue@dutyCycle+1
  5262  024A  0858               	movf	main@dutyCycle^(0+128),w
  5263  024B  00F0               	movwf	PWM6_LoadDutyValue@dutyCycle
  5264  024C  3196  26C5  3182   	fcall	_PWM6_LoadDutyValue
  5265                           
  5266                           ;main.c: 46: _delay((unsigned long)((300)*(32000000/4000.0)));
  5267  024F  300D               	movlw	13
  5268  0250  0020               	movlb	0	; select bank0
  5269  0251  00EB               	movwf	??_main+2
  5270  0252  302D               	movlw	45
  5271  0253  00EA               	movwf	??_main+1
  5272  0254  30E2               	movlw	226
  5273  0255  00E9               	movwf	??_main
  5274  0256                     u3497:	
  5275  0256  0BE9               	decfsz	??_main,f
  5276  0257  2A56               	goto	u3497
  5277  0258  0BEA               	decfsz	??_main+1,f
  5278  0259  2A56               	goto	u3497
  5279  025A  0BEB               	decfsz	??_main+2,f
  5280  025B  2A56               	goto	u3497
  5281  025C  3200               	nop2
  5282                           
  5283                           ;main.c: 48: LCD_Clear();
  5284  025D  3196  2655  3182   	fcall	_LCD_Clear
  5285                           
  5286                           ;main.c: 50: { LCD_Set_Cursor(2,0); LCD_Write_String("A");};
  5287  0260  01F4               	clrf	LCD_Set_Cursor@y
  5288  0261  3002               	movlw	2
  5289  0262  3188  20CB  3182   	fcall	_LCD_Set_Cursor
  5290  0265  3042               	movlw	low (STR_1| (0+32768))
  5291  0266  00F5               	movwf	LCD_Write_String@a
  5292  0267  3090               	movlw	high (STR_1| (0+32768))
  5293  0268  00F6               	movwf	LCD_Write_String@a+1
  5294  0269  3197  270B  3182   	fcall	_LCD_Write_String
  5295                           
  5296                           ;main.c: 51: _delay((unsigned long)((200)*(32000000/4000.0)));
  5297  026C  3009               	movlw	9
  5298  026D  0020               	movlb	0	; select bank0
  5299  026E  00EB               	movwf	??_main+2
  5300  026F  301E               	movlw	30
  5301  0270  00EA               	movwf	??_main+1
  5302  0271  30EB               	movlw	235
  5303  0272  00E9               	movwf	??_main
  5304  0273                     u3507:	
  5305  0273  0BE9               	decfsz	??_main,f
  5306  0274  2A73               	goto	u3507
  5307  0275  0BEA               	decfsz	??_main+1,f
  5308  0276  2A73               	goto	u3507
  5309  0277  0BEB               	decfsz	??_main+2,f
  5310  0278  2A73               	goto	u3507
  5311  0279  0000               	nop
  5312                           
  5313                           ;main.c: 52: LCD_Write_String("L");
  5314  027A  304E               	movlw	low (STR_2| (0+32768))
  5315  027B  00F5               	movwf	LCD_Write_String@a
  5316  027C  3090               	movlw	high (STR_2| (0+32768))
  5317  027D  00F6               	movwf	LCD_Write_String@a+1
  5318  027E  3197  270B  3182   	fcall	_LCD_Write_String
  5319                           
  5320                           ;main.c: 53: _delay((unsigned long)((200)*(32000000/4000.0)));
  5321  0281  3009               	movlw	9
  5322  0282  0020               	movlb	0	; select bank0
  5323  0283  00EB               	movwf	??_main+2
  5324  0284  301E               	movlw	30
  5325  0285  00EA               	movwf	??_main+1
  5326  0286  30EB               	movlw	235
  5327  0287  00E9               	movwf	??_main
  5328  0288                     u3517:	
  5329  0288  0BE9               	decfsz	??_main,f
  5330  0289  2A88               	goto	u3517
  5331  028A  0BEA               	decfsz	??_main+1,f
  5332  028B  2A88               	goto	u3517
  5333  028C  0BEB               	decfsz	??_main+2,f
  5334  028D  2A88               	goto	u3517
  5335  028E  0000               	nop
  5336                           
  5337                           ;main.c: 54: LCD_Write_String("O");
  5338  028F  3050               	movlw	low (STR_3| (0+32768))
  5339  0290  00F5               	movwf	LCD_Write_String@a
  5340  0291  3090               	movlw	high (STR_3| (0+32768))
  5341  0292  00F6               	movwf	LCD_Write_String@a+1
  5342  0293  3197  270B  3182   	fcall	_LCD_Write_String
  5343                           
  5344                           ;main.c: 55: _delay((unsigned long)((200)*(32000000/4000.0)));
  5345  0296  3009               	movlw	9
  5346  0297  0020               	movlb	0	; select bank0
  5347  0298  00EB               	movwf	??_main+2
  5348  0299  301E               	movlw	30
  5349  029A  00EA               	movwf	??_main+1
  5350  029B  30EB               	movlw	235
  5351  029C  00E9               	movwf	??_main
  5352  029D                     u3527:	
  5353  029D  0BE9               	decfsz	??_main,f
  5354  029E  2A9D               	goto	u3527
  5355  029F  0BEA               	decfsz	??_main+1,f
  5356  02A0  2A9D               	goto	u3527
  5357  02A1  0BEB               	decfsz	??_main+2,f
  5358  02A2  2A9D               	goto	u3527
  5359  02A3  0000               	nop
  5360                           
  5361                           ;main.c: 56: LCD_Write_String("H");
  5362  02A4  3048               	movlw	low (STR_4| (0+32768))
  5363  02A5  00F5               	movwf	LCD_Write_String@a
  5364  02A6  3090               	movlw	high (STR_4| (0+32768))
  5365  02A7  00F6               	movwf	LCD_Write_String@a+1
  5366  02A8  3197  270B  3182   	fcall	_LCD_Write_String
  5367                           
  5368                           ;main.c: 57: _delay((unsigned long)((200)*(32000000/4000.0)));
  5369  02AB  3009               	movlw	9
  5370  02AC  0020               	movlb	0	; select bank0
  5371  02AD  00EB               	movwf	??_main+2
  5372  02AE  301E               	movlw	30
  5373  02AF  00EA               	movwf	??_main+1
  5374  02B0  30EB               	movlw	235
  5375  02B1  00E9               	movwf	??_main
  5376  02B2                     u3537:	
  5377  02B2  0BE9               	decfsz	??_main,f
  5378  02B3  2AB2               	goto	u3537
  5379  02B4  0BEA               	decfsz	??_main+1,f
  5380  02B5  2AB2               	goto	u3537
  5381  02B6  0BEB               	decfsz	??_main+2,f
  5382  02B7  2AB2               	goto	u3537
  5383  02B8  0000               	nop
  5384                           
  5385                           ;main.c: 58: LCD_Write_String("A");
  5386  02B9  3042               	movlw	low (STR_1| (0+32768))
  5387  02BA  00F5               	movwf	LCD_Write_String@a
  5388  02BB  3090               	movlw	high (STR_1| (0+32768))
  5389  02BC  00F6               	movwf	LCD_Write_String@a+1
  5390  02BD  3197  270B  3182   	fcall	_LCD_Write_String
  5391                           
  5392                           ;main.c: 59: _delay((unsigned long)((200)*(32000000/4000.0)));
  5393  02C0  3009               	movlw	9
  5394  02C1  0020               	movlb	0	; select bank0
  5395  02C2  00EB               	movwf	??_main+2
  5396  02C3  301E               	movlw	30
  5397  02C4  00EA               	movwf	??_main+1
  5398  02C5  30EB               	movlw	235
  5399  02C6  00E9               	movwf	??_main
  5400  02C7                     u3547:	
  5401  02C7  0BE9               	decfsz	??_main,f
  5402  02C8  2AC7               	goto	u3547
  5403  02C9  0BEA               	decfsz	??_main+1,f
  5404  02CA  2AC7               	goto	u3547
  5405  02CB  0BEB               	decfsz	??_main+2,f
  5406  02CC  2AC7               	goto	u3547
  5407  02CD  0000               	nop
  5408                           
  5409                           ;main.c: 60: LCD_Write_String(" ");
  5410  02CE  303A               	movlw	low (STR_6| (0+32768))
  5411  02CF  00F5               	movwf	LCD_Write_String@a
  5412  02D0  3090               	movlw	high (STR_6| (0+32768))
  5413  02D1  00F6               	movwf	LCD_Write_String@a+1
  5414  02D2  3197  270B  3182   	fcall	_LCD_Write_String
  5415                           
  5416                           ;main.c: 61: _delay((unsigned long)((200)*(32000000/4000.0)));
  5417  02D5  3009               	movlw	9
  5418  02D6  0020               	movlb	0	; select bank0
  5419  02D7  00EB               	movwf	??_main+2
  5420  02D8  301E               	movlw	30
  5421  02D9  00EA               	movwf	??_main+1
  5422  02DA  30EB               	movlw	235
  5423  02DB  00E9               	movwf	??_main
  5424  02DC                     u3557:	
  5425  02DC  0BE9               	decfsz	??_main,f
  5426  02DD  2ADC               	goto	u3557
  5427  02DE  0BEA               	decfsz	??_main+1,f
  5428  02DF  2ADC               	goto	u3557
  5429  02E0  0BEB               	decfsz	??_main+2,f
  5430  02E1  2ADC               	goto	u3557
  5431  02E2  0000               	nop
  5432                           
  5433                           ;main.c: 62: LCD_Write_String("D");
  5434  02E3  3044               	movlw	low (STR_7| (0+32768))
  5435  02E4  00F5               	movwf	LCD_Write_String@a
  5436  02E5  3090               	movlw	high (STR_7| (0+32768))
  5437  02E6  00F6               	movwf	LCD_Write_String@a+1
  5438  02E7  3197  270B  3182   	fcall	_LCD_Write_String
  5439                           
  5440                           ;main.c: 63: _delay((unsigned long)((200)*(32000000/4000.0)));
  5441  02EA  3009               	movlw	9
  5442  02EB  0020               	movlb	0	; select bank0
  5443  02EC  00EB               	movwf	??_main+2
  5444  02ED  301E               	movlw	30
  5445  02EE  00EA               	movwf	??_main+1
  5446  02EF  30EB               	movlw	235
  5447  02F0  00E9               	movwf	??_main
  5448  02F1                     u3567:	
  5449  02F1  0BE9               	decfsz	??_main,f
  5450  02F2  2AF1               	goto	u3567
  5451  02F3  0BEA               	decfsz	??_main+1,f
  5452  02F4  2AF1               	goto	u3567
  5453  02F5  0BEB               	decfsz	??_main+2,f
  5454  02F6  2AF1               	goto	u3567
  5455  02F7  0000               	nop
  5456                           
  5457                           ;main.c: 64: LCD_Write_String("A");
  5458  02F8  3042               	movlw	low (STR_1| (0+32768))
  5459  02F9  00F5               	movwf	LCD_Write_String@a
  5460  02FA  3090               	movlw	high (STR_1| (0+32768))
  5461  02FB  00F6               	movwf	LCD_Write_String@a+1
  5462  02FC  3197  270B  3182   	fcall	_LCD_Write_String
  5463                           
  5464                           ;main.c: 65: _delay((unsigned long)((200)*(32000000/4000.0)));
  5465  02FF  3009               	movlw	9
  5466  0300  0020               	movlb	0	; select bank0
  5467  0301  00EB               	movwf	??_main+2
  5468  0302  301E               	movlw	30
  5469  0303  00EA               	movwf	??_main+1
  5470  0304  30EB               	movlw	235
  5471  0305  00E9               	movwf	??_main
  5472  0306                     u3577:	
  5473  0306  0BE9               	decfsz	??_main,f
  5474  0307  2B06               	goto	u3577
  5475  0308  0BEA               	decfsz	??_main+1,f
  5476  0309  2B06               	goto	u3577
  5477  030A  0BEB               	decfsz	??_main+2,f
  5478  030B  2B06               	goto	u3577
  5479  030C  0000               	nop
  5480                           
  5481                           ;main.c: 66: LCD_Write_String("V");
  5482  030D  3056               	movlw	low (STR_9| (0+32768))
  5483  030E  00F5               	movwf	LCD_Write_String@a
  5484  030F  3090               	movlw	high (STR_9| (0+32768))
  5485  0310  00F6               	movwf	LCD_Write_String@a+1
  5486  0311  3197  270B  3182   	fcall	_LCD_Write_String
  5487                           
  5488                           ;main.c: 67: _delay((unsigned long)((200)*(32000000/4000.0)));
  5489  0314  3009               	movlw	9
  5490  0315  0020               	movlb	0	; select bank0
  5491  0316  00EB               	movwf	??_main+2
  5492  0317  301E               	movlw	30
  5493  0318  00EA               	movwf	??_main+1
  5494  0319  30EB               	movlw	235
  5495  031A  00E9               	movwf	??_main
  5496  031B                     u3587:	
  5497  031B  0BE9               	decfsz	??_main,f
  5498  031C  2B1B               	goto	u3587
  5499  031D  0BEA               	decfsz	??_main+1,f
  5500  031E  2B1B               	goto	u3587
  5501  031F  0BEB               	decfsz	??_main+2,f
  5502  0320  2B1B               	goto	u3587
  5503  0321  0000               	nop
  5504                           
  5505                           ;main.c: 68: LCD_Write_String("I");
  5506  0322  304A               	movlw	low (STR_10| (0+32768))
  5507  0323  00F5               	movwf	LCD_Write_String@a
  5508  0324  3090               	movlw	high (STR_10| (0+32768))
  5509  0325  00F6               	movwf	LCD_Write_String@a+1
  5510  0326  3197  270B  3182   	fcall	_LCD_Write_String
  5511                           
  5512                           ;main.c: 69: _delay((unsigned long)((200)*(32000000/4000.0)));
  5513  0329  3009               	movlw	9
  5514  032A  0020               	movlb	0	; select bank0
  5515  032B  00EB               	movwf	??_main+2
  5516  032C  301E               	movlw	30
  5517  032D  00EA               	movwf	??_main+1
  5518  032E  30EB               	movlw	235
  5519  032F  00E9               	movwf	??_main
  5520  0330                     u3597:	
  5521  0330  0BE9               	decfsz	??_main,f
  5522  0331  2B30               	goto	u3597
  5523  0332  0BEA               	decfsz	??_main+1,f
  5524  0333  2B30               	goto	u3597
  5525  0334  0BEB               	decfsz	??_main+2,f
  5526  0335  2B30               	goto	u3597
  5527  0336  0000               	nop
  5528                           
  5529                           ;main.c: 70: LCD_Write_String("D");
  5530  0337  3044               	movlw	low (STR_7| (0+32768))
  5531  0338  00F5               	movwf	LCD_Write_String@a
  5532  0339  3090               	movlw	high (STR_7| (0+32768))
  5533  033A  00F6               	movwf	LCD_Write_String@a+1
  5534  033B  3197  270B  3182   	fcall	_LCD_Write_String
  5535                           
  5536                           ;main.c: 71: _delay((unsigned long)((200)*(32000000/4000.0)));
  5537  033E  3009               	movlw	9
  5538  033F  0020               	movlb	0	; select bank0
  5539  0340  00EB               	movwf	??_main+2
  5540  0341  301E               	movlw	30
  5541  0342  00EA               	movwf	??_main+1
  5542  0343  30EB               	movlw	235
  5543  0344  00E9               	movwf	??_main
  5544  0345                     u3607:	
  5545  0345  0BE9               	decfsz	??_main,f
  5546  0346  2B45               	goto	u3607
  5547  0347  0BEA               	decfsz	??_main+1,f
  5548  0348  2B45               	goto	u3607
  5549  0349  0BEB               	decfsz	??_main+2,f
  5550  034A  2B45               	goto	u3607
  5551  034B  0000               	nop
  5552                           
  5553                           ;main.c: 72: LCD_Write_String(",");
  5554  034C  3040               	movlw	low (STR_12| (0+32768))
  5555  034D  00F5               	movwf	LCD_Write_String@a
  5556  034E  3090               	movlw	high (STR_12| (0+32768))
  5557  034F  00F6               	movwf	LCD_Write_String@a+1
  5558  0350  3197  270B  3182   	fcall	_LCD_Write_String
  5559                           
  5560                           ;main.c: 73: _delay((unsigned long)((200)*(32000000/4000.0)));
  5561  0353  3009               	movlw	9
  5562  0354  0020               	movlb	0	; select bank0
  5563  0355  00EB               	movwf	??_main+2
  5564  0356  301E               	movlw	30
  5565  0357  00EA               	movwf	??_main+1
  5566  0358  30EB               	movlw	235
  5567  0359  00E9               	movwf	??_main
  5568  035A                     u3617:	
  5569  035A  0BE9               	decfsz	??_main,f
  5570  035B  2B5A               	goto	u3617
  5571  035C  0BEA               	decfsz	??_main+1,f
  5572  035D  2B5A               	goto	u3617
  5573  035E  0BEB               	decfsz	??_main+2,f
  5574  035F  2B5A               	goto	u3617
  5575  0360  0000               	nop
  5576                           
  5577                           ;main.c: 74: { LCD_Set_Cursor(1,1); LCD_Write_String("S");};
  5578  0361  01F4               	clrf	LCD_Set_Cursor@y
  5579  0362  0AF4               	incf	LCD_Set_Cursor@y,f
  5580  0363  3001               	movlw	1
  5581  0364  3188  20CB  3182   	fcall	_LCD_Set_Cursor
  5582  0367  3054               	movlw	low (STR_13| (0+32768))
  5583  0368  00F5               	movwf	LCD_Write_String@a
  5584  0369  3090               	movlw	high (STR_13| (0+32768))
  5585  036A  00F6               	movwf	LCD_Write_String@a+1
  5586  036B  3197  270B  3182   	fcall	_LCD_Write_String
  5587                           
  5588                           ;main.c: 75: _delay((unsigned long)((200)*(32000000/4000.0)));
  5589  036E  3009               	movlw	9
  5590  036F  0020               	movlb	0	; select bank0
  5591  0370  00EB               	movwf	??_main+2
  5592  0371  301E               	movlw	30
  5593  0372  00EA               	movwf	??_main+1
  5594  0373  30EB               	movlw	235
  5595  0374  00E9               	movwf	??_main
  5596  0375                     u3627:	
  5597  0375  0BE9               	decfsz	??_main,f
  5598  0376  2B75               	goto	u3627
  5599  0377  0BEA               	decfsz	??_main+1,f
  5600  0378  2B75               	goto	u3627
  5601  0379  0BEB               	decfsz	??_main+2,f
  5602  037A  2B75               	goto	u3627
  5603  037B  0000               	nop
  5604                           
  5605                           ;main.c: 76: LCD_Write_String("O");
  5606  037C  3050               	movlw	low (STR_3| (0+32768))
  5607  037D  00F5               	movwf	LCD_Write_String@a
  5608  037E  3090               	movlw	high (STR_3| (0+32768))
  5609  037F  00F6               	movwf	LCD_Write_String@a+1
  5610  0380  3197  270B  3182   	fcall	_LCD_Write_String
  5611                           
  5612                           ;main.c: 77: _delay((unsigned long)((200)*(32000000/4000.0)));
  5613  0383  3009               	movlw	9
  5614  0384  0020               	movlb	0	; select bank0
  5615  0385  00EB               	movwf	??_main+2
  5616  0386  301E               	movlw	30
  5617  0387  00EA               	movwf	??_main+1
  5618  0388  30EB               	movlw	235
  5619  0389  00E9               	movwf	??_main
  5620  038A                     u3637:	
  5621  038A  0BE9               	decfsz	??_main,f
  5622  038B  2B8A               	goto	u3637
  5623  038C  0BEA               	decfsz	??_main+1,f
  5624  038D  2B8A               	goto	u3637
  5625  038E  0BEB               	decfsz	??_main+2,f
  5626  038F  2B8A               	goto	u3637
  5627  0390  0000               	nop
  5628                           
  5629                           ;main.c: 78: LCD_Write_String("P");
  5630  0391  3052               	movlw	low (STR_15| (0+32768))
  5631  0392  00F5               	movwf	LCD_Write_String@a
  5632  0393  3090               	movlw	high (STR_15| (0+32768))
  5633  0394  00F6               	movwf	LCD_Write_String@a+1
  5634  0395  3197  270B  3182   	fcall	_LCD_Write_String
  5635                           
  5636                           ;main.c: 79: _delay((unsigned long)((200)*(32000000/4000.0)));
  5637  0398  3009               	movlw	9
  5638  0399  0020               	movlb	0	; select bank0
  5639  039A  00EB               	movwf	??_main+2
  5640  039B  301E               	movlw	30
  5641  039C  00EA               	movwf	??_main+1
  5642  039D  30EB               	movlw	235
  5643  039E  00E9               	movwf	??_main
  5644  039F                     u3647:	
  5645  039F  0BE9               	decfsz	??_main,f
  5646  03A0  2B9F               	goto	u3647
  5647  03A1  0BEA               	decfsz	??_main+1,f
  5648  03A2  2B9F               	goto	u3647
  5649  03A3  0BEB               	decfsz	??_main+2,f
  5650  03A4  2B9F               	goto	u3647
  5651  03A5  0000               	nop
  5652                           
  5653                           ;main.c: 80: LCD_Write_String("H");
  5654  03A6  3048               	movlw	low (STR_4| (0+32768))
  5655  03A7  00F5               	movwf	LCD_Write_String@a
  5656  03A8  3090               	movlw	high (STR_4| (0+32768))
  5657  03A9  00F6               	movwf	LCD_Write_String@a+1
  5658  03AA  3197  270B  3182   	fcall	_LCD_Write_String
  5659                           
  5660                           ;main.c: 81: _delay((unsigned long)((200)*(32000000/4000.0)));
  5661  03AD  3009               	movlw	9
  5662  03AE  0020               	movlb	0	; select bank0
  5663  03AF  00EB               	movwf	??_main+2
  5664  03B0  301E               	movlw	30
  5665  03B1  00EA               	movwf	??_main+1
  5666  03B2  30EB               	movlw	235
  5667  03B3  00E9               	movwf	??_main
  5668  03B4                     u3657:	
  5669  03B4  0BE9               	decfsz	??_main,f
  5670  03B5  2BB4               	goto	u3657
  5671  03B6  0BEA               	decfsz	??_main+1,f
  5672  03B7  2BB4               	goto	u3657
  5673  03B8  0BEB               	decfsz	??_main+2,f
  5674  03B9  2BB4               	goto	u3657
  5675  03BA  0000               	nop
  5676                           
  5677                           ;main.c: 82: LCD_Write_String("I");
  5678  03BB  304A               	movlw	low (STR_10| (0+32768))
  5679  03BC  00F5               	movwf	LCD_Write_String@a
  5680  03BD  3090               	movlw	high (STR_10| (0+32768))
  5681  03BE  00F6               	movwf	LCD_Write_String@a+1
  5682  03BF  3197  270B  3182   	fcall	_LCD_Write_String
  5683                           
  5684                           ;main.c: 83: _delay((unsigned long)((200)*(32000000/4000.0)));
  5685  03C2  3009               	movlw	9
  5686  03C3  0020               	movlb	0	; select bank0
  5687  03C4  00EB               	movwf	??_main+2
  5688  03C5  301E               	movlw	30
  5689  03C6  00EA               	movwf	??_main+1
  5690  03C7  30EB               	movlw	235
  5691  03C8  00E9               	movwf	??_main
  5692  03C9                     u3667:	
  5693  03C9  0BE9               	decfsz	??_main,f
  5694  03CA  2BC9               	goto	u3667
  5695  03CB  0BEA               	decfsz	??_main+1,f
  5696  03CC  2BC9               	goto	u3667
  5697  03CD  0BEB               	decfsz	??_main+2,f
  5698  03CE  2BC9               	goto	u3667
  5699  03CF  0000               	nop
  5700                           
  5701                           ;main.c: 84: LCD_Write_String("E");
  5702  03D0  3046               	movlw	low (STR_18| (0+32768))
  5703  03D1  00F5               	movwf	LCD_Write_String@a
  5704  03D2  3090               	movlw	high (STR_18| (0+32768))
  5705  03D3  00F6               	movwf	LCD_Write_String@a+1
  5706  03D4  3197  270B  3182   	fcall	_LCD_Write_String
  5707                           
  5708                           ;main.c: 85: _delay((unsigned long)((200)*(32000000/4000.0)));
  5709  03D7  3009               	movlw	9
  5710  03D8  0020               	movlb	0	; select bank0
  5711  03D9  00EB               	movwf	??_main+2
  5712  03DA  301E               	movlw	30
  5713  03DB  00EA               	movwf	??_main+1
  5714  03DC  30EB               	movlw	235
  5715  03DD  00E9               	movwf	??_main
  5716  03DE                     u3677:	
  5717  03DE  0BE9               	decfsz	??_main,f
  5718  03DF  2BDE               	goto	u3677
  5719  03E0  0BEA               	decfsz	??_main+1,f
  5720  03E1  2BDE               	goto	u3677
  5721  03E2  0BEB               	decfsz	??_main+2,f
  5722  03E3  2BDE               	goto	u3677
  5723  03E4  0000               	nop
  5724                           
  5725                           ;main.c: 86: LCD_Write_String(" ");
  5726  03E5  303A               	movlw	low (STR_6| (0+32768))
  5727  03E6  00F5               	movwf	LCD_Write_String@a
  5728  03E7  3090               	movlw	high (STR_6| (0+32768))
  5729  03E8  00F6               	movwf	LCD_Write_String@a+1
  5730  03E9  3197  270B  3182   	fcall	_LCD_Write_String
  5731                           
  5732                           ;main.c: 87: _delay((unsigned long)((200)*(32000000/4000.0)));
  5733  03EC  3009               	movlw	9
  5734  03ED  0020               	movlb	0	; select bank0
  5735  03EE  00EB               	movwf	??_main+2
  5736  03EF  301E               	movlw	30
  5737  03F0  00EA               	movwf	??_main+1
  5738  03F1  30EB               	movlw	235
  5739  03F2  00E9               	movwf	??_main
  5740  03F3                     u3687:	
  5741  03F3  0BE9               	decfsz	??_main,f
  5742  03F4  2BF3               	goto	u3687
  5743  03F5  0BEA               	decfsz	??_main+1,f
  5744  03F6  2BF3               	goto	u3687
  5745  03F7  0BEB               	decfsz	??_main+2,f
  5746  03F8  2BF3               	goto	u3687
  5747  03F9  0000               	nop
  5748                           
  5749                           ;main.c: 88: LCD_Write_String("&");
  5750  03FA  303E               	movlw	low (STR_20| (0+32768))
  5751  03FB  00F5               	movwf	LCD_Write_String@a
  5752  03FC  3090               	movlw	high (STR_20| (0+32768))
  5753  03FD  00F6               	movwf	LCD_Write_String@a+1
  5754  03FE  3197  270B  3182   	fcall	_LCD_Write_String
  5755                           
  5756                           ;main.c: 89: _delay((unsigned long)((200)*(32000000/4000.0)));
  5757  0401  3009               	movlw	9
  5758  0402  0020               	movlb	0	; select bank0
  5759  0403  00EB               	movwf	??_main+2
  5760  0404  301E               	movlw	30
  5761  0405  00EA               	movwf	??_main+1
  5762  0406  30EB               	movlw	235
  5763  0407  00E9               	movwf	??_main
  5764  0408                     u3697:	
  5765  0408  0BE9               	decfsz	??_main,f
  5766  0409  2C08               	goto	u3697
  5767  040A  0BEA               	decfsz	??_main+1,f
  5768  040B  2C08               	goto	u3697
  5769  040C  0BEB               	decfsz	??_main+2,f
  5770  040D  2C08               	goto	u3697
  5771  040E  0000               	nop
  5772                           
  5773                           ;main.c: 90: LCD_Write_String(" ");
  5774  040F  303A               	movlw	low (STR_6| (0+32768))
  5775  0410  00F5               	movwf	LCD_Write_String@a
  5776  0411  3090               	movlw	high (STR_6| (0+32768))
  5777  0412  00F6               	movwf	LCD_Write_String@a+1
  5778  0413  3197  270B  3182   	fcall	_LCD_Write_String
  5779                           
  5780                           ;main.c: 91: _delay((unsigned long)((200)*(32000000/4000.0)));
  5781  0416  3009               	movlw	9
  5782  0417  0020               	movlb	0	; select bank0
  5783  0418  00EB               	movwf	??_main+2
  5784  0419  301E               	movlw	30
  5785  041A  00EA               	movwf	??_main+1
  5786  041B  30EB               	movlw	235
  5787  041C  00E9               	movwf	??_main
  5788  041D                     u3707:	
  5789  041D  0BE9               	decfsz	??_main,f
  5790  041E  2C1D               	goto	u3707
  5791  041F  0BEA               	decfsz	??_main+1,f
  5792  0420  2C1D               	goto	u3707
  5793  0421  0BEB               	decfsz	??_main+2,f
  5794  0422  2C1D               	goto	u3707
  5795  0423  0000               	nop
  5796                           
  5797                           ;main.c: 92: LCD_Write_String("K");
  5798  0424  304C               	movlw	low (STR_22| (0+32768))
  5799  0425  00F5               	movwf	LCD_Write_String@a
  5800  0426  3090               	movlw	high (STR_22| (0+32768))
  5801  0427  00F6               	movwf	LCD_Write_String@a+1
  5802  0428  3197  270B  3182   	fcall	_LCD_Write_String
  5803                           
  5804                           ;main.c: 93: _delay((unsigned long)((200)*(32000000/4000.0)));
  5805  042B  3009               	movlw	9
  5806  042C  0020               	movlb	0	; select bank0
  5807  042D  00EB               	movwf	??_main+2
  5808  042E  301E               	movlw	30
  5809  042F  00EA               	movwf	??_main+1
  5810  0430  30EB               	movlw	235
  5811  0431  00E9               	movwf	??_main
  5812  0432                     u3717:	
  5813  0432  0BE9               	decfsz	??_main,f
  5814  0433  2C32               	goto	u3717
  5815  0434  0BEA               	decfsz	??_main+1,f
  5816  0435  2C32               	goto	u3717
  5817  0436  0BEB               	decfsz	??_main+2,f
  5818  0437  2C32               	goto	u3717
  5819  0438  0000               	nop
  5820                           
  5821                           ;main.c: 94: LCD_Write_String("I");
  5822  0439  304A               	movlw	low (STR_10| (0+32768))
  5823  043A  00F5               	movwf	LCD_Write_String@a
  5824  043B  3090               	movlw	high (STR_10| (0+32768))
  5825  043C  00F6               	movwf	LCD_Write_String@a+1
  5826  043D  3197  270B  3182   	fcall	_LCD_Write_String
  5827                           
  5828                           ;main.c: 95: _delay((unsigned long)((200)*(32000000/4000.0)));
  5829  0440  3009               	movlw	9
  5830  0441  0020               	movlb	0	; select bank0
  5831  0442  00EB               	movwf	??_main+2
  5832  0443  301E               	movlw	30
  5833  0444  00EA               	movwf	??_main+1
  5834  0445  30EB               	movlw	235
  5835  0446  00E9               	movwf	??_main
  5836  0447                     u3727:	
  5837  0447  0BE9               	decfsz	??_main,f
  5838  0448  2C47               	goto	u3727
  5839  0449  0BEA               	decfsz	??_main+1,f
  5840  044A  2C47               	goto	u3727
  5841  044B  0BEB               	decfsz	??_main+2,f
  5842  044C  2C47               	goto	u3727
  5843  044D  0000               	nop
  5844                           
  5845                           ;main.c: 96: LCD_Write_String("D");
  5846  044E  3044               	movlw	low (STR_7| (0+32768))
  5847  044F  00F5               	movwf	LCD_Write_String@a
  5848  0450  3090               	movlw	high (STR_7| (0+32768))
  5849  0451  00F6               	movwf	LCD_Write_String@a+1
  5850  0452  3197  270B  3182   	fcall	_LCD_Write_String
  5851                           
  5852                           ;main.c: 97: _delay((unsigned long)((200)*(32000000/4000.0)));
  5853  0455  3009               	movlw	9
  5854  0456  0020               	movlb	0	; select bank0
  5855  0457  00EB               	movwf	??_main+2
  5856  0458  301E               	movlw	30
  5857  0459  00EA               	movwf	??_main+1
  5858  045A  30EB               	movlw	235
  5859  045B  00E9               	movwf	??_main
  5860  045C                     u3737:	
  5861  045C  0BE9               	decfsz	??_main,f
  5862  045D  2C5C               	goto	u3737
  5863  045E  0BEA               	decfsz	??_main+1,f
  5864  045F  2C5C               	goto	u3737
  5865  0460  0BEB               	decfsz	??_main+2,f
  5866  0461  2C5C               	goto	u3737
  5867  0462  0000               	nop
  5868                           
  5869                           ;main.c: 98: LCD_Write_String("S");
  5870  0463  3054               	movlw	low (STR_13| (0+32768))
  5871  0464  00F5               	movwf	LCD_Write_String@a
  5872  0465  3090               	movlw	high (STR_13| (0+32768))
  5873  0466  00F6               	movwf	LCD_Write_String@a+1
  5874  0467  3197  270B  3182   	fcall	_LCD_Write_String
  5875                           
  5876                           ;main.c: 99: _delay((unsigned long)((200)*(32000000/4000.0)));
  5877  046A  3009               	movlw	9
  5878  046B  0020               	movlb	0	; select bank0
  5879  046C  00EB               	movwf	??_main+2
  5880  046D  301E               	movlw	30
  5881  046E  00EA               	movwf	??_main+1
  5882  046F  30EB               	movlw	235
  5883  0470  00E9               	movwf	??_main
  5884  0471                     u3747:	
  5885  0471  0BE9               	decfsz	??_main,f
  5886  0472  2C71               	goto	u3747
  5887  0473  0BEA               	decfsz	??_main+1,f
  5888  0474  2C71               	goto	u3747
  5889  0475  0BEB               	decfsz	??_main+2,f
  5890  0476  2C71               	goto	u3747
  5891  0477  0000               	nop
  5892                           
  5893                           ;main.c: 100: LCD_Write_String("!");
  5894  0478  303C               	movlw	low (STR_26| (0+32768))
  5895  0479  00F5               	movwf	LCD_Write_String@a
  5896  047A  3090               	movlw	high (STR_26| (0+32768))
  5897  047B  00F6               	movwf	LCD_Write_String@a+1
  5898  047C  3197  270B  3182   	fcall	_LCD_Write_String
  5899                           
  5900                           ;main.c: 101: _delay((unsigned long)((5000)*(32000000/4000.0)));
  5901  047F  30CB               	movlw	203
  5902  0480  0020               	movlb	0	; select bank0
  5903  0481  00EB               	movwf	??_main+2
  5904  0482  30ED               	movlw	237
  5905  0483  00EA               	movwf	??_main+1
  5906  0484  304C               	movlw	76
  5907  0485  00E9               	movwf	??_main
  5908  0486                     u3757:	
  5909  0486  0BE9               	decfsz	??_main,f
  5910  0487  2C86               	goto	u3757
  5911  0488  0BEA               	decfsz	??_main+1,f
  5912  0489  2C86               	goto	u3757
  5913  048A  0BEB               	decfsz	??_main+2,f
  5914  048B  2C86               	goto	u3757
  5915  048C  3200               	nop2
  5916                           
  5917                           ;main.c: 103: LCD_Clear();
  5918  048D  3196  2655  3182   	fcall	_LCD_Clear
  5919                           
  5920                           ;main.c: 105: PWM6_LoadDutyValue(dutyCycle);
  5921  0490  0021               	movlb	1	; select bank1
  5922  0491  0859               	movf	(main@dutyCycle+1)^(0+128),w
  5923  0492  00F1               	movwf	PWM6_LoadDutyValue@dutyCycle+1
  5924  0493  0858               	movf	main@dutyCycle^(0+128),w
  5925  0494  00F0               	movwf	PWM6_LoadDutyValue@dutyCycle
  5926  0495  3196  26C5  3182   	fcall	_PWM6_LoadDutyValue
  5927  0498                     l2941:	
  5928                           ;main.c: 108: while (1)
  5929                           
  5930                           
  5931                           ;main.c: 109: {
  5932                           ;main.c: 111: for(x=0;x<6;x++) analogs[x]=readAnalog(x);
  5933  0498  0021               	movlb	1	; select bank1
  5934  0499  01D7               	clrf	main@x^(0+128)
  5935  049A  3006               	movlw	6
  5936  049B  0257               	subwf	main@x^(0+128),w
  5937  049C  1803               	btfsc	3,0
  5938  049D  2CBC               	goto	l2953
  5939  049E                     l2947:	
  5940  049E  0857               	movf	main@x^(0+128),w
  5941  049F  0020               	movlb	0	; select bank0
  5942  04A0  00E9               	movwf	??_main
  5943  04A1  01EA               	clrf	??_main+1
  5944  04A2  0869               	movf	??_main,w
  5945  04A3  00A6               	movwf	readAnalog@channel
  5946  04A4  086A               	movf	??_main+1,w
  5947  04A5  00A7               	movwf	readAnalog@channel+1
  5948  04A6  3180  20E8  3182   	fcall	_readAnalog
  5949  04A9  0021               	movlb	1	; select bank1
  5950  04AA  3557               	lslf	main@x^(0+128),w
  5951  04AB  3EBF               	addlw	(low (main@analogs| 0))& (0+255)
  5952  04AC  0086               	movwf	6
  5953  04AD  0187               	clrf	7
  5954  04AE  0020               	movlb	0	; select bank0
  5955  04AF  0826               	movf	?_readAnalog,w
  5956  04B0  3FC0               	movwi [0]fsr1
  5957  04B1  0827               	movf	?_readAnalog+1,w
  5958  04B2  3FC1               	movwi [1]fsr1
  5959  04B3  3001               	movlw	1
  5960  04B4  00E9               	movwf	??_main
  5961  04B5  0869               	movf	??_main,w
  5962  04B6  0021               	movlb	1	; select bank1
  5963  04B7  07D7               	addwf	main@x^(0+128),f
  5964  04B8  3006               	movlw	6
  5965  04B9  0257               	subwf	main@x^(0+128),w
  5966  04BA  1C03               	skipc
  5967  04BB  2C9E               	goto	l2947
  5968  04BC                     l2953:	
  5969                           
  5970                           ;main.c: 113: if(analogs[0]<1020)tPadCount+=1;
  5971  04BC  3003               	movlw	3
  5972  04BD  0240               	subwf	(main@analogs+1)^(0+128),w
  5973  04BE  30FC               	movlw	252
  5974  04BF  1903               	skipnz
  5975  04C0  023F               	subwf	main@analogs^(0+128),w
  5976  04C1  1803               	skipnc
  5977  04C2  2CC9               	goto	l2957
  5978  04C3  3001               	movlw	1
  5979  04C4  0020               	movlb	0	; select bank0
  5980  04C5  00E9               	movwf	??_main
  5981  04C6  0869               	movf	??_main,w
  5982  04C7  0021               	movlb	1	; select bank1
  5983  04C8  07D4               	addwf	main@tPadCount^(0+128),f
  5984  04C9                     l2957:	
  5985                           
  5986                           ;main.c: 116: if(analogs[1]<900)tPadCount-=1;
  5987  04C9  3003               	movlw	3
  5988  04CA  0242               	subwf	((main@analogs+1)^(0+128)+2),w
  5989  04CB  3084               	movlw	132
  5990  04CC  1903               	skipnz
  5991  04CD  0241               	subwf	(main@analogs^(0+128)+2),w
  5992  04CE  1803               	skipnc
  5993  04CF  2CD2               	goto	l291
  5994  04D0  3001               	movlw	1
  5995  04D1  02D4               	subwf	main@tPadCount^(0+128),f
  5996  04D2                     l291:	
  5997                           
  5998                           ;main.c: 118: if(tPadCount<1)
  5999  04D2  0854               	movf	main@tPadCount^(0+128),w
  6000  04D3  1D03               	btfss	3,2
  6001  04D4  2CDD               	goto	l292
  6002                           
  6003                           ;main.c: 119: {
  6004                           ;main.c: 120: choice=1;
  6005  04D5  01D5               	clrf	main@choice^(0+128)
  6006  04D6  0AD5               	incf	main@choice^(0+128),f
  6007                           
  6008                           ;main.c: 121: tPadCount=10;
  6009  04D7  300A               	movlw	10
  6010  04D8  0020               	movlb	0	; select bank0
  6011  04D9  00E9               	movwf	??_main
  6012  04DA  0869               	movf	??_main,w
  6013  04DB  0021               	movlb	1	; select bank1
  6014  04DC  00D4               	movwf	main@tPadCount^(0+128)
  6015  04DD                     l292:	
  6016                           
  6017                           ;main.c: 122: }
  6018                           ;main.c: 124: if(tPadCount>19)
  6019  04DD  3014               	movlw	20
  6020  04DE  0254               	subwf	main@tPadCount^(0+128),w
  6021  04DF  1C03               	skipc
  6022  04E0  2CE8               	goto	l2969
  6023                           
  6024                           ;main.c: 125: {
  6025                           ;main.c: 126: choice=0;
  6026  04E1  01D5               	clrf	main@choice^(0+128)
  6027                           
  6028                           ;main.c: 127: tPadCount=10;
  6029  04E2  300A               	movlw	10
  6030  04E3  0020               	movlb	0	; select bank0
  6031  04E4  00E9               	movwf	??_main
  6032  04E5  0869               	movf	??_main,w
  6033  04E6  0021               	movlb	1	; select bank1
  6034  04E7  00D4               	movwf	main@tPadCount^(0+128)
  6035  04E8                     l2969:	
  6036                           
  6037                           ;main.c: 128: }
  6038                           ;main.c: 130: if(analogs[0]<1020&&analogs[1]<970)
  6039  04E8  3003               	movlw	3
  6040  04E9  0240               	subwf	(main@analogs+1)^(0+128),w
  6041  04EA  30FC               	movlw	252
  6042  04EB  1903               	skipnz
  6043  04EC  023F               	subwf	main@analogs^(0+128),w
  6044  04ED  1803               	skipnc
  6045  04EE  2D0A               	goto	l2975
  6046  04EF  3003               	movlw	3
  6047  04F0  0242               	subwf	((main@analogs+1)^(0+128)+2),w
  6048  04F1  30CA               	movlw	202
  6049  04F2  1903               	skipnz
  6050  04F3  0241               	subwf	(main@analogs^(0+128)+2),w
  6051  04F4  1803               	skipnc
  6052  04F5  2D0A               	goto	l2975
  6053                           
  6054                           ;main.c: 131: {
  6055                           ;main.c: 132: choice=2;
  6056  04F6  3002               	movlw	2
  6057  04F7  0020               	movlb	0	; select bank0
  6058  04F8  00E9               	movwf	??_main
  6059  04F9  0869               	movf	??_main,w
  6060  04FA  0021               	movlb	1	; select bank1
  6061  04FB  00D5               	movwf	main@choice^(0+128)
  6062                           
  6063                           ;main.c: 133: _delay((unsigned long)((200)*(32000000/4000.0)));
  6064  04FC  3009               	movlw	9
  6065  04FD  0020               	movlb	0	; select bank0
  6066  04FE  00EB               	movwf	??_main+2
  6067  04FF  301E               	movlw	30
  6068  0500  00EA               	movwf	??_main+1
  6069  0501  30EB               	movlw	235
  6070  0502  00E9               	movwf	??_main
  6071  0503                     u3767:	
  6072  0503  0BE9               	decfsz	??_main,f
  6073  0504  2D03               	goto	u3767
  6074  0505  0BEA               	decfsz	??_main+1,f
  6075  0506  2D03               	goto	u3767
  6076  0507  0BEB               	decfsz	??_main+2,f
  6077  0508  2D03               	goto	u3767
  6078  0509  0000               	nop
  6079  050A                     l2975:	
  6080                           
  6081                           ;main.c: 134: }
  6082                           ;main.c: 138: startDelay+=1;
  6083  050A  3001               	movlw	1
  6084  050B  0020               	movlb	0	; select bank0
  6085  050C  00E9               	movwf	??_main
  6086  050D  0869               	movf	??_main,w
  6087  050E  0021               	movlb	1	; select bank1
  6088  050F  07BE               	addwf	main@startDelay^(0+128),f
  6089                           
  6090                           ;main.c: 140: if(startDelay>254)
  6091  0510  0A3E               	incf	main@startDelay^(0+128),w
  6092  0511  1D03               	btfss	3,2
  6093  0512  2E29               	goto	l3069
  6094                           
  6095                           ;main.c: 141: {
  6096                           ;main.c: 142: startDelay=254;
  6097  0513  30FE               	movlw	254
  6098  0514  0020               	movlb	0	; select bank0
  6099  0515  00E9               	movwf	??_main
  6100  0516  0869               	movf	??_main,w
  6101  0517  0021               	movlb	1	; select bank1
  6102  0518  00BE               	movwf	main@startDelay^(0+128)
  6103                           
  6104                           ;main.c: 144: if(analogs[2]<900&&analogs[3]<900)asm("reset");
  6105  0519  3003               	movlw	3
  6106  051A  0244               	subwf	((main@analogs+1)^(0+128)+4),w
  6107  051B  3084               	movlw	132
  6108  051C  1903               	skipnz
  6109  051D  0243               	subwf	(main@analogs^(0+128)+4),w
  6110  051E  1803               	skipnc
  6111  051F  2D27               	goto	l2985
  6112  0520  3003               	movlw	3
  6113  0521  0246               	subwf	((main@analogs+1)^(0+128)+6),w
  6114  0522  3084               	movlw	132
  6115  0523  1903               	skipnz
  6116  0524  0245               	subwf	(main@analogs^(0+128)+6),w
  6117  0525  1C03               	btfss	3,0
  6118  0526  0001               	reset	;# 
  6119  0527                     l2985:	
  6120                           
  6121                           ;main.c: 146: if(analogs[2]<900)
  6122  0527  3003               	movlw	3
  6123  0528  0021               	movlb	1	; select bank1
  6124  0529  0244               	subwf	((main@analogs+1)^(0+128)+4),w
  6125  052A  3084               	movlw	132
  6126  052B  1903               	skipnz
  6127  052C  0243               	subwf	(main@analogs^(0+128)+4),w
  6128  052D  1803               	skipnc
  6129  052E  2DA7               	goto	l3027
  6130                           
  6131                           ;main.c: 147: {
  6132                           ;main.c: 148: resetDelay+=1;
  6133  052F  3001               	movlw	1
  6134  0530  0020               	movlb	0	; select bank0
  6135  0531  00E9               	movwf	??_main
  6136  0532  0869               	movf	??_main,w
  6137  0533  0021               	movlb	1	; select bank1
  6138  0534  07D3               	addwf	main@resetDelay^(0+128),f
  6139                           
  6140                           ;main.c: 150: if(resetDelay>20)
  6141  0535  3015               	movlw	21
  6142  0536  0253               	subwf	main@resetDelay^(0+128),w
  6143  0537  1803               	btfsc	3,0
  6144  0538  2D8B               	goto	l3017
  6145  0539  2DA7               	goto	l3027
  6146  053A                     l2993:	
  6147                           ;main.c: 151: {
  6148                           ;main.c: 152: while(analogs[2]<975)
  6149                           
  6150                           
  6151                           ;main.c: 153: {
  6152                           ;main.c: 154: analogs[2]=ADCRead(4);
  6153  053A  3004               	movlw	4
  6154  053B  3196  26A3  3182   	fcall	_ADCRead
  6155  053E  0871               	movf	?_ADCRead+1,w
  6156  053F  0021               	movlb	1	; select bank1
  6157  0540  00C4               	movwf	((main@analogs+1)^(0+128)+4)
  6158  0541  0870               	movf	?_ADCRead,w
  6159  0542  00C3               	movwf	(main@analogs^(0+128)+4)
  6160                           
  6161                           ;main.c: 156: if(bCount<1)LCD_Clear();
  6162  0543  084B               	movf	main@bCount^(0+128),w
  6163  0544  044C               	iorwf	(main@bCount+1)^(0+128),w
  6164  0545  1D03               	btfss	3,2
  6165  0546  2D4A               	goto	l2999
  6166  0547  3196  2655  3182   	fcall	_LCD_Clear
  6167  054A                     l2999:	
  6168                           
  6169                           ;main.c: 157: bCount+=1;
  6170  054A  3001               	movlw	1
  6171  054B  0021               	movlb	1	; select bank1
  6172  054C  07CB               	addwf	main@bCount^(0+128),f
  6173  054D  3000               	movlw	0
  6174  054E  3DCC               	addwfc	(main@bCount+1)^(0+128),f
  6175                           
  6176                           ;main.c: 159: if(dutyCycle>0)dutyCycle-=1;
  6177  054F  0858               	movf	main@dutyCycle^(0+128),w
  6178  0550  0459               	iorwf	(main@dutyCycle+1)^(0+128),w
  6179  0551  1903               	btfsc	3,2
  6180  0552  2D57               	goto	l3005
  6181  0553  3001               	movlw	1
  6182  0554  02D8               	subwf	main@dutyCycle^(0+128),f
  6183  0555  3000               	movlw	0
  6184  0556  3BD9               	subwfb	(main@dutyCycle+1)^(0+128),f
  6185  0557                     l3005:	
  6186                           
  6187                           ;main.c: 161: { LCD_Set_Cursor(0,0); LCD_Write_String("BackLight:");};
  6188  0557  01F4               	clrf	LCD_Set_Cursor@y
  6189  0558  3000               	movlw	0
  6190  0559  3188  20CB  3182   	fcall	_LCD_Set_Cursor
  6191  055C  301B               	movlw	low (STR_27| (0+32768))
  6192  055D  00F5               	movwf	LCD_Write_String@a
  6193  055E  3090               	movlw	high (STR_27| (0+32768))
  6194  055F  00F6               	movwf	LCD_Write_String@a+1
  6195  0560  3197  270B  3182   	fcall	_LCD_Write_String
  6196                           
  6197                           ;main.c: 162: LCD_Write_Int(dutyCycle/10,-1,0,0);
  6198  0563  300A               	movlw	10
  6199  0564  00F0               	movwf	___lwdiv@divisor
  6200  0565  3000               	movlw	0
  6201  0566  00F1               	movwf	___lwdiv@divisor+1
  6202  0567  0021               	movlb	1	; select bank1
  6203  0568  0859               	movf	(main@dutyCycle+1)^(0+128),w
  6204  0569  00F3               	movwf	___lwdiv@dividend+1
  6205  056A  0858               	movf	main@dutyCycle^(0+128),w
  6206  056B  00F2               	movwf	___lwdiv@dividend
  6207  056C  3197  27CC  3182   	fcall	___lwdiv
  6208  056F  0871               	movf	?___lwdiv+1,w
  6209  0570  0020               	movlb	0	; select bank0
  6210  0571  00A1               	movwf	LCD_Write_Int@value+1
  6211  0572  0870               	movf	?___lwdiv,w
  6212  0573  00A0               	movwf	LCD_Write_Int@value
  6213  0574  01A2               	clrf	LCD_Write_Int@fieldLength
  6214  0575  03A2               	decf	LCD_Write_Int@fieldLength,f
  6215  0576  01A3               	clrf	LCD_Write_Int@numPlaces
  6216  0577  01A4               	clrf	LCD_Write_Int@sign
  6217  0578  318E  263F  3182   	fcall	_LCD_Write_Int
  6218                           
  6219                           ;main.c: 163: LCD_Write_Char('%');
  6220  057B  3025               	movlw	37
  6221  057C  3197  27A0  3182   	fcall	_LCD_Write_Char
  6222                           
  6223                           ;main.c: 164: LCD_Write_Char(' ');
  6224  057F  3020               	movlw	32
  6225  0580  3197  27A0  3182   	fcall	_LCD_Write_Char
  6226                           
  6227                           ;main.c: 165: PWM6_LoadDutyValue(dutyCycle);
  6228  0583  0021               	movlb	1	; select bank1
  6229  0584  0859               	movf	(main@dutyCycle+1)^(0+128),w
  6230  0585  00F1               	movwf	PWM6_LoadDutyValue@dutyCycle+1
  6231  0586  0858               	movf	main@dutyCycle^(0+128),w
  6232  0587  00F0               	movwf	PWM6_LoadDutyValue@dutyCycle
  6233  0588  3196  26C5  3182   	fcall	_PWM6_LoadDutyValue
  6234  058B                     l3017:	
  6235  058B  3003               	movlw	3
  6236  058C  0021               	movlb	1	; select bank1
  6237  058D  0244               	subwf	((main@analogs+1)^(0+128)+4),w
  6238  058E  30CF               	movlw	207
  6239  058F  1903               	skipnz
  6240  0590  0243               	subwf	(main@analogs^(0+128)+4),w
  6241  0591  1C03               	skipc
  6242  0592  2D3A               	goto	l2993
  6243                           
  6244                           ;main.c: 166: }
  6245                           ;main.c: 167: bCount=0;
  6246  0593  01CB               	clrf	main@bCount^(0+128)
  6247  0594  01CC               	clrf	(main@bCount+1)^(0+128)
  6248                           
  6249                           ;main.c: 168: _delay((unsigned long)((100)*(32000000/4000.0)));
  6250  0595  3005               	movlw	5
  6251  0596  0020               	movlb	0	; select bank0
  6252  0597  00EB               	movwf	??_main+2
  6253  0598  300F               	movlw	15
  6254  0599  00EA               	movwf	??_main+1
  6255  059A  30F4               	movlw	244
  6256  059B  00E9               	movwf	??_main
  6257  059C                     u3777:	
  6258  059C  0BE9               	decfsz	??_main,f
  6259  059D  2D9C               	goto	u3777
  6260  059E  0BEA               	decfsz	??_main+1,f
  6261  059F  2D9C               	goto	u3777
  6262  05A0  0BEB               	decfsz	??_main+2,f
  6263  05A1  2D9C               	goto	u3777
  6264                           
  6265                           ;main.c: 169: LCD_Clear();
  6266  05A2  3196  2655  3182   	fcall	_LCD_Clear
  6267                           
  6268                           ;main.c: 170: resetDelay=0;
  6269  05A5  0021               	movlb	1	; select bank1
  6270  05A6  01D3               	clrf	main@resetDelay^(0+128)
  6271  05A7                     l3027:	
  6272                           
  6273                           ;main.c: 171: }
  6274                           ;main.c: 172: }
  6275                           ;main.c: 174: if(analogs[3]<900)
  6276  05A7  3003               	movlw	3
  6277  05A8  0246               	subwf	((main@analogs+1)^(0+128)+6),w
  6278  05A9  3084               	movlw	132
  6279  05AA  1903               	skipnz
  6280  05AB  0245               	subwf	(main@analogs^(0+128)+6),w
  6281  05AC  1803               	skipnc
  6282  05AD  2E29               	goto	l3069
  6283                           
  6284                           ;main.c: 175: {
  6285                           ;main.c: 176: resetDelay+=1;
  6286  05AE  3001               	movlw	1
  6287  05AF  0020               	movlb	0	; select bank0
  6288  05B0  00E9               	movwf	??_main
  6289  05B1  0869               	movf	??_main,w
  6290  05B2  0021               	movlb	1	; select bank1
  6291  05B3  07D3               	addwf	main@resetDelay^(0+128),f
  6292                           
  6293                           ;main.c: 178: if(resetDelay>20)
  6294  05B4  3015               	movlw	21
  6295  05B5  0253               	subwf	main@resetDelay^(0+128),w
  6296  05B6  1803               	btfsc	3,0
  6297  05B7  2E0D               	goto	l3059
  6298  05B8  2E29               	goto	l3069
  6299  05B9                     l3035:	
  6300                           ;main.c: 179: {
  6301                           ;main.c: 180: while(analogs[3]<975)
  6302                           
  6303                           
  6304                           ;main.c: 181: {
  6305                           ;main.c: 182: analogs[3]=ADCRead(5);
  6306  05B9  3005               	movlw	5
  6307  05BA  3196  26A3  3182   	fcall	_ADCRead
  6308  05BD  0871               	movf	?_ADCRead+1,w
  6309  05BE  0021               	movlb	1	; select bank1
  6310  05BF  00C6               	movwf	((main@analogs+1)^(0+128)+6)
  6311  05C0  0870               	movf	?_ADCRead,w
  6312  05C1  00C5               	movwf	(main@analogs^(0+128)+6)
  6313                           
  6314                           ;main.c: 184: if(bCount<1)LCD_Clear();
  6315  05C2  084B               	movf	main@bCount^(0+128),w
  6316  05C3  044C               	iorwf	(main@bCount+1)^(0+128),w
  6317  05C4  1D03               	btfss	3,2
  6318  05C5  2DC9               	goto	l3041
  6319  05C6  3196  2655  3182   	fcall	_LCD_Clear
  6320  05C9                     l3041:	
  6321                           
  6322                           ;main.c: 185: bCount+=1;
  6323  05C9  3001               	movlw	1
  6324  05CA  0021               	movlb	1	; select bank1
  6325  05CB  07CB               	addwf	main@bCount^(0+128),f
  6326  05CC  3000               	movlw	0
  6327  05CD  3DCC               	addwfc	(main@bCount+1)^(0+128),f
  6328                           
  6329                           ;main.c: 187: if(dutyCycle<1009)dutyCycle+=1;
  6330  05CE  3003               	movlw	3
  6331  05CF  0259               	subwf	(main@dutyCycle+1)^(0+128),w
  6332  05D0  30F1               	movlw	241
  6333  05D1  1903               	skipnz
  6334  05D2  0258               	subwf	main@dutyCycle^(0+128),w
  6335  05D3  1803               	skipnc
  6336  05D4  2DD9               	goto	l3047
  6337  05D5  3001               	movlw	1
  6338  05D6  07D8               	addwf	main@dutyCycle^(0+128),f
  6339  05D7  3000               	movlw	0
  6340  05D8  3DD9               	addwfc	(main@dutyCycle+1)^(0+128),f
  6341  05D9                     l3047:	
  6342                           
  6343                           ;main.c: 189: { LCD_Set_Cursor(0,0); LCD_Write_String("BackLight:");};
  6344  05D9  01F4               	clrf	LCD_Set_Cursor@y
  6345  05DA  3000               	movlw	0
  6346  05DB  3188  20CB  3182   	fcall	_LCD_Set_Cursor
  6347  05DE  301B               	movlw	low (STR_27| (0+32768))
  6348  05DF  00F5               	movwf	LCD_Write_String@a
  6349  05E0  3090               	movlw	high (STR_27| (0+32768))
  6350  05E1  00F6               	movwf	LCD_Write_String@a+1
  6351  05E2  3197  270B  3182   	fcall	_LCD_Write_String
  6352                           
  6353                           ;main.c: 190: LCD_Write_Int(dutyCycle/10,-1,0,0);
  6354  05E5  300A               	movlw	10
  6355  05E6  00F0               	movwf	___lwdiv@divisor
  6356  05E7  3000               	movlw	0
  6357  05E8  00F1               	movwf	___lwdiv@divisor+1
  6358  05E9  0021               	movlb	1	; select bank1
  6359  05EA  0859               	movf	(main@dutyCycle+1)^(0+128),w
  6360  05EB  00F3               	movwf	___lwdiv@dividend+1
  6361  05EC  0858               	movf	main@dutyCycle^(0+128),w
  6362  05ED  00F2               	movwf	___lwdiv@dividend
  6363  05EE  3197  27CC  3182   	fcall	___lwdiv
  6364  05F1  0871               	movf	?___lwdiv+1,w
  6365  05F2  0020               	movlb	0	; select bank0
  6366  05F3  00A1               	movwf	LCD_Write_Int@value+1
  6367  05F4  0870               	movf	?___lwdiv,w
  6368  05F5  00A0               	movwf	LCD_Write_Int@value
  6369  05F6  01A2               	clrf	LCD_Write_Int@fieldLength
  6370  05F7  03A2               	decf	LCD_Write_Int@fieldLength,f
  6371  05F8  01A3               	clrf	LCD_Write_Int@numPlaces
  6372  05F9  01A4               	clrf	LCD_Write_Int@sign
  6373  05FA  318E  263F  3182   	fcall	_LCD_Write_Int
  6374                           
  6375                           ;main.c: 191: LCD_Write_Char('%');
  6376  05FD  3025               	movlw	37
  6377  05FE  3197  27A0  3182   	fcall	_LCD_Write_Char
  6378                           
  6379                           ;main.c: 192: LCD_Write_Char(' ');
  6380  0601  3020               	movlw	32
  6381  0602  3197  27A0  3182   	fcall	_LCD_Write_Char
  6382                           
  6383                           ;main.c: 193: PWM6_LoadDutyValue(dutyCycle);
  6384  0605  0021               	movlb	1	; select bank1
  6385  0606  0859               	movf	(main@dutyCycle+1)^(0+128),w
  6386  0607  00F1               	movwf	PWM6_LoadDutyValue@dutyCycle+1
  6387  0608  0858               	movf	main@dutyCycle^(0+128),w
  6388  0609  00F0               	movwf	PWM6_LoadDutyValue@dutyCycle
  6389  060A  3196  26C5  3182   	fcall	_PWM6_LoadDutyValue
  6390  060D                     l3059:	
  6391  060D  3003               	movlw	3
  6392  060E  0021               	movlb	1	; select bank1
  6393  060F  0246               	subwf	((main@analogs+1)^(0+128)+6),w
  6394  0610  30CF               	movlw	207
  6395  0611  1903               	skipnz
  6396  0612  0245               	subwf	(main@analogs^(0+128)+6),w
  6397  0613  1C03               	skipc
  6398  0614  2DB9               	goto	l3035
  6399                           
  6400                           ;main.c: 194: }
  6401                           ;main.c: 195: bCount=0;
  6402  0615  01CB               	clrf	main@bCount^(0+128)
  6403  0616  01CC               	clrf	(main@bCount+1)^(0+128)
  6404                           
  6405                           ;main.c: 196: _delay((unsigned long)((100)*(32000000/4000.0)));
  6406  0617  3005               	movlw	5
  6407  0618  0020               	movlb	0	; select bank0
  6408  0619  00EB               	movwf	??_main+2
  6409  061A  300F               	movlw	15
  6410  061B  00EA               	movwf	??_main+1
  6411  061C  30F4               	movlw	244
  6412  061D  00E9               	movwf	??_main
  6413  061E                     u3787:	
  6414  061E  0BE9               	decfsz	??_main,f
  6415  061F  2E1E               	goto	u3787
  6416  0620  0BEA               	decfsz	??_main+1,f
  6417  0621  2E1E               	goto	u3787
  6418  0622  0BEB               	decfsz	??_main+2,f
  6419  0623  2E1E               	goto	u3787
  6420                           
  6421                           ;main.c: 197: LCD_Clear();
  6422  0624  3196  2655  3182   	fcall	_LCD_Clear
  6423                           
  6424                           ;main.c: 198: resetDelay=0;
  6425  0627  0021               	movlb	1	; select bank1
  6426  0628  01D3               	clrf	main@resetDelay^(0+128)
  6427  0629                     l3069:	
  6428                           
  6429                           ;main.c: 199: }
  6430                           ;main.c: 200: }
  6431                           ;main.c: 201: }
  6432                           ;main.c: 205: displayTemp = tempCalc(analogs[4]);
  6433  0629  0848               	movf	((main@analogs+1)^(0+128)+8),w
  6434  062A  0020               	movlb	0	; select bank0
  6435  062B  00DE               	movwf	tempCalc@analogValue+1
  6436  062C  0021               	movlb	1	; select bank1
  6437  062D  0847               	movf	(main@analogs^(0+128)+8),w
  6438  062E  0020               	movlb	0	; select bank0
  6439  062F  00DD               	movwf	tempCalc@analogValue
  6440  0630  3180  2009  3182   	fcall	_tempCalc
  6441  0633  0020               	movlb	0	; select bank0
  6442  0634  085D               	movf	?_tempCalc,w
  6443  0635  0021               	movlb	1	; select bank1
  6444  0636  00CD               	movwf	main@displayTemp^(0+128)
  6445  0637  0020               	movlb	0	; select bank0
  6446  0638  085E               	movf	?_tempCalc+1,w
  6447  0639  0021               	movlb	1	; select bank1
  6448  063A  00CE               	movwf	(main@displayTemp+1)^(0+128)
  6449  063B  0020               	movlb	0	; select bank0
  6450  063C  085F               	movf	?_tempCalc+2,w
  6451  063D  0021               	movlb	1	; select bank1
  6452  063E  00CF               	movwf	(main@displayTemp+2)^(0+128)
  6453                           
  6454                           ;main.c: 207: displayTemp2 = tempCalc(analogs[5]);
  6455  063F  084A               	movf	((main@analogs+1)^(0+128)+10),w
  6456  0640  0020               	movlb	0	; select bank0
  6457  0641  00DE               	movwf	tempCalc@analogValue+1
  6458  0642  0021               	movlb	1	; select bank1
  6459  0643  0849               	movf	(main@analogs^(0+128)+10),w
  6460  0644  0020               	movlb	0	; select bank0
  6461  0645  00DD               	movwf	tempCalc@analogValue
  6462  0646  3180  2009  3182   	fcall	_tempCalc
  6463  0649  0020               	movlb	0	; select bank0
  6464  064A  085D               	movf	?_tempCalc,w
  6465  064B  0021               	movlb	1	; select bank1
  6466  064C  00D0               	movwf	main@displayTemp2^(0+128)
  6467  064D  0020               	movlb	0	; select bank0
  6468  064E  085E               	movf	?_tempCalc+1,w
  6469  064F  0021               	movlb	1	; select bank1
  6470  0650  00D1               	movwf	(main@displayTemp2+1)^(0+128)
  6471  0651  0020               	movlb	0	; select bank0
  6472  0652  085F               	movf	?_tempCalc+2,w
  6473  0653  0021               	movlb	1	; select bank1
  6474  0654  00D2               	movwf	(main@displayTemp2+2)^(0+128)
  6475                           
  6476                           ;main.c: 209: if(loop>127)
  6477  0655  3080               	movlw	128
  6478  0656  023D               	subwf	main@loop^(0+128),w
  6479  0657  1C03               	skipc
  6480  0658  2FB6               	goto	l3127
  6481                           
  6482                           ;main.c: 210: {
  6483                           ;main.c: 211: { LCD_Set_Cursor(0,0); LCD_Write_String("In->Solar");};
  6484  0659  01F4               	clrf	LCD_Set_Cursor@y
  6485  065A  3000               	movlw	0
  6486  065B  3188  20CB  3182   	fcall	_LCD_Set_Cursor
  6487  065E  3030               	movlw	low (STR_29| (0+32768))
  6488  065F  00F5               	movwf	LCD_Write_String@a
  6489  0660  3090               	movlw	high (STR_29| (0+32768))
  6490  0661  00F6               	movwf	LCD_Write_String@a+1
  6491  0662  3197  270B  3182   	fcall	_LCD_Write_String
  6492                           
  6493                           ;main.c: 212: { LCD_Set_Cursor(0,1); LCD_Write_String("Out->Pool");};
  6494  0665  01F4               	clrf	LCD_Set_Cursor@y
  6495  0666  0AF4               	incf	LCD_Set_Cursor@y,f
  6496  0667  3000               	movlw	0
  6497  0668  3188  20CB  3182   	fcall	_LCD_Set_Cursor
  6498  066B  3026               	movlw	low (STR_30| (0+32768))
  6499  066C  00F5               	movwf	LCD_Write_String@a
  6500  066D  3090               	movlw	high (STR_30| (0+32768))
  6501  066E  00F6               	movwf	LCD_Write_String@a+1
  6502  066F  3197  270B  3182   	fcall	_LCD_Write_String
  6503                           
  6504                           ;main.c: 214: if(C_or_F==0)
  6505  0672  0021               	movlb	1	; select bank1
  6506  0673  0856               	movf	main@C_or_F^(0+128),w
  6507  0674  1D03               	btfss	3,2
  6508  0675  2EC7               	goto	l3097
  6509                           
  6510                           ;main.c: 215: {
  6511                           ;main.c: 216: { LCD_Set_Cursor(9,0); LCD_Write_Int((int)displayTemp,-1, 1, 0);};
  6512  0676  01F4               	clrf	LCD_Set_Cursor@y
  6513  0677  3009               	movlw	9
  6514  0678  3188  20CB  3182   	fcall	_LCD_Set_Cursor
  6515  067B  0021               	movlb	1	; select bank1
  6516  067C  084D               	movf	main@displayTemp^(0+128),w
  6517  067D  00F0               	movwf	___fttol@f1
  6518  067E  084E               	movf	(main@displayTemp+1)^(0+128),w
  6519  067F  00F1               	movwf	___fttol@f1+1
  6520  0680  084F               	movf	(main@displayTemp+2)^(0+128),w
  6521  0681  00F2               	movwf	___fttol@f1+2
  6522  0682  318B  2328  3182   	fcall	___fttol
  6523  0685  0871               	movf	?___fttol+1,w
  6524  0686  0020               	movlb	0	; select bank0
  6525  0687  00A1               	movwf	LCD_Write_Int@value+1
  6526  0688  0870               	movf	?___fttol,w
  6527  0689  00A0               	movwf	LCD_Write_Int@value
  6528  068A  01A2               	clrf	LCD_Write_Int@fieldLength
  6529  068B  03A2               	decf	LCD_Write_Int@fieldLength,f
  6530  068C  01A3               	clrf	LCD_Write_Int@numPlaces
  6531  068D  0AA3               	incf	LCD_Write_Int@numPlaces,f
  6532  068E  01A4               	clrf	LCD_Write_Int@sign
  6533  068F  318E  263F  3182   	fcall	_LCD_Write_Int
  6534                           
  6535                           ;main.c: 217: LCD_Write_Char(0);
  6536  0692  3000               	movlw	0
  6537  0693  3197  27A0  3182   	fcall	_LCD_Write_Char
  6538                           
  6539                           ;main.c: 218: LCD_Write_Char('C');
  6540  0696  3043               	movlw	67
  6541  0697  3197  27A0  3182   	fcall	_LCD_Write_Char
  6542                           
  6543                           ;main.c: 219: LCD_Write_Char(' ');
  6544  069A  3020               	movlw	32
  6545  069B  3197  27A0  3182   	fcall	_LCD_Write_Char
  6546                           
  6547                           ;main.c: 221: { LCD_Set_Cursor(9,1); LCD_Write_Int((int)displayTemp2,-1, 1, 0);};
  6548  069E  01F4               	clrf	LCD_Set_Cursor@y
  6549  069F  0AF4               	incf	LCD_Set_Cursor@y,f
  6550  06A0  3009               	movlw	9
  6551  06A1  3188  20CB  3182   	fcall	_LCD_Set_Cursor
  6552  06A4  0021               	movlb	1	; select bank1
  6553  06A5  0850               	movf	main@displayTemp2^(0+128),w
  6554  06A6  00F0               	movwf	___fttol@f1
  6555  06A7  0851               	movf	(main@displayTemp2+1)^(0+128),w
  6556  06A8  00F1               	movwf	___fttol@f1+1
  6557  06A9  0852               	movf	(main@displayTemp2+2)^(0+128),w
  6558  06AA  00F2               	movwf	___fttol@f1+2
  6559  06AB  318B  2328  3182   	fcall	___fttol
  6560  06AE  0871               	movf	?___fttol+1,w
  6561  06AF  0020               	movlb	0	; select bank0
  6562  06B0  00A1               	movwf	LCD_Write_Int@value+1
  6563  06B1  0870               	movf	?___fttol,w
  6564  06B2  00A0               	movwf	LCD_Write_Int@value
  6565  06B3  01A2               	clrf	LCD_Write_Int@fieldLength
  6566  06B4  03A2               	decf	LCD_Write_Int@fieldLength,f
  6567  06B5  01A3               	clrf	LCD_Write_Int@numPlaces
  6568  06B6  0AA3               	incf	LCD_Write_Int@numPlaces,f
  6569  06B7  01A4               	clrf	LCD_Write_Int@sign
  6570  06B8  318E  263F  3182   	fcall	_LCD_Write_Int
  6571                           
  6572                           ;main.c: 222: LCD_Write_Char(0);
  6573  06BB  3000               	movlw	0
  6574  06BC  3197  27A0  3182   	fcall	_LCD_Write_Char
  6575                           
  6576                           ;main.c: 223: LCD_Write_Char('C');
  6577  06BF  3043               	movlw	67
  6578  06C0  3197  27A0  3182   	fcall	_LCD_Write_Char
  6579                           
  6580                           ;main.c: 224: LCD_Write_Char(' ');
  6581  06C3  3020               	movlw	32
  6582  06C4  3197  27A0  3182   	fcall	_LCD_Write_Char
  6583  06C7                     l3097:	
  6584                           
  6585                           ;main.c: 225: }
  6586                           ;main.c: 227: if(C_or_F==1)
  6587  06C7  0021               	movlb	1	; select bank1
  6588  06C8  0356               	decf	main@C_or_F^(0+128),w
  6589  06C9  1D03               	btfss	3,2
  6590  06CA  2FA0               	goto	l3113
  6591                           
  6592                           ;main.c: 228: {
  6593                           ;main.c: 229: displayTemp = displayTemp*9/5+320;
  6594  06CB  3000               	movlw	0
  6595  06CC  0020               	movlb	0	; select bank0
  6596  06CD  00C0               	movwf	___ftadd@f1
  6597  06CE  30A0               	movlw	160
  6598  06CF  00C1               	movwf	___ftadd@f1+1
  6599  06D0  3043               	movlw	67
  6600  06D1  00C2               	movwf	___ftadd@f1+2
  6601  06D2  3000               	movlw	0
  6602  06D3  00B0               	movwf	___ftdiv@f2
  6603  06D4  30A0               	movlw	160
  6604  06D5  00B1               	movwf	___ftdiv@f2+1
  6605  06D6  3040               	movlw	64
  6606  06D7  00B2               	movwf	___ftdiv@f2+2
  6607  06D8  3000               	movlw	0
  6608  06D9  00A0               	movwf	___ftmul@f1
  6609  06DA  3010               	movlw	16
  6610  06DB  00A1               	movwf	___ftmul@f1+1
  6611  06DC  3041               	movlw	65
  6612  06DD  00A2               	movwf	___ftmul@f1+2
  6613  06DE  0021               	movlb	1	; select bank1
  6614  06DF  084D               	movf	main@displayTemp^(0+128),w
  6615  06E0  0020               	movlb	0	; select bank0
  6616  06E1  00A3               	movwf	___ftmul@f2
  6617  06E2  0021               	movlb	1	; select bank1
  6618  06E3  084E               	movf	(main@displayTemp+1)^(0+128),w
  6619  06E4  0020               	movlb	0	; select bank0
  6620  06E5  00A4               	movwf	___ftmul@f2+1
  6621  06E6  0021               	movlb	1	; select bank1
  6622  06E7  084F               	movf	(main@displayTemp+2)^(0+128),w
  6623  06E8  0020               	movlb	0	; select bank0
  6624  06E9  00A5               	movwf	___ftmul@f2+2
  6625  06EA  318D  258B  3182   	fcall	___ftmul
  6626  06ED  0020               	movlb	0	; select bank0
  6627  06EE  0820               	movf	?___ftmul,w
  6628  06EF  00B3               	movwf	___ftdiv@f1
  6629  06F0  0821               	movf	?___ftmul+1,w
  6630  06F1  00B4               	movwf	___ftdiv@f1+1
  6631  06F2  0822               	movf	?___ftmul+2,w
  6632  06F3  00B5               	movwf	___ftdiv@f1+2
  6633  06F4  318C  2435  3182   	fcall	___ftdiv
  6634  06F7  0020               	movlb	0	; select bank0
  6635  06F8  0830               	movf	?___ftdiv,w
  6636  06F9  00C3               	movwf	___ftadd@f2
  6637  06FA  0831               	movf	?___ftdiv+1,w
  6638  06FB  00C4               	movwf	___ftadd@f2+1
  6639  06FC  0832               	movf	?___ftdiv+2,w
  6640  06FD  00C5               	movwf	___ftadd@f2+2
  6641  06FE  318F  270A  3182   	fcall	___ftadd
  6642  0701  0020               	movlb	0	; select bank0
  6643  0702  0840               	movf	?___ftadd,w
  6644  0703  0021               	movlb	1	; select bank1
  6645  0704  00CD               	movwf	main@displayTemp^(0+128)
  6646  0705  0020               	movlb	0	; select bank0
  6647  0706  0841               	movf	?___ftadd+1,w
  6648  0707  0021               	movlb	1	; select bank1
  6649  0708  00CE               	movwf	(main@displayTemp+1)^(0+128)
  6650  0709  0020               	movlb	0	; select bank0
  6651  070A  0842               	movf	?___ftadd+2,w
  6652  070B  0021               	movlb	1	; select bank1
  6653  070C  00CF               	movwf	(main@displayTemp+2)^(0+128)
  6654                           
  6655                           ;main.c: 230: displayTemp2 = displayTemp2*9/5+320;
  6656  070D  3000               	movlw	0
  6657  070E  0020               	movlb	0	; select bank0
  6658  070F  00C0               	movwf	___ftadd@f1
  6659  0710  30A0               	movlw	160
  6660  0711  00C1               	movwf	___ftadd@f1+1
  6661  0712  3043               	movlw	67
  6662  0713  00C2               	movwf	___ftadd@f1+2
  6663  0714  3000               	movlw	0
  6664  0715  00B0               	movwf	___ftdiv@f2
  6665  0716  30A0               	movlw	160
  6666  0717  00B1               	movwf	___ftdiv@f2+1
  6667  0718  3040               	movlw	64
  6668  0719  00B2               	movwf	___ftdiv@f2+2
  6669  071A  3000               	movlw	0
  6670  071B  00A0               	movwf	___ftmul@f1
  6671  071C  3010               	movlw	16
  6672  071D  00A1               	movwf	___ftmul@f1+1
  6673  071E  3041               	movlw	65
  6674  071F  00A2               	movwf	___ftmul@f1+2
  6675  0720  0021               	movlb	1	; select bank1
  6676  0721  0850               	movf	main@displayTemp2^(0+128),w
  6677  0722  0020               	movlb	0	; select bank0
  6678  0723  00A3               	movwf	___ftmul@f2
  6679  0724  0021               	movlb	1	; select bank1
  6680  0725  0851               	movf	(main@displayTemp2+1)^(0+128),w
  6681  0726  0020               	movlb	0	; select bank0
  6682  0727  00A4               	movwf	___ftmul@f2+1
  6683  0728  0021               	movlb	1	; select bank1
  6684  0729  0852               	movf	(main@displayTemp2+2)^(0+128),w
  6685  072A  0020               	movlb	0	; select bank0
  6686  072B  00A5               	movwf	___ftmul@f2+2
  6687  072C  318D  258B  3182   	fcall	___ftmul
  6688  072F  0020               	movlb	0	; select bank0
  6689  0730  0820               	movf	?___ftmul,w
  6690  0731  00B3               	movwf	___ftdiv@f1
  6691  0732  0821               	movf	?___ftmul+1,w
  6692  0733  00B4               	movwf	___ftdiv@f1+1
  6693  0734  0822               	movf	?___ftmul+2,w
  6694  0735  00B5               	movwf	___ftdiv@f1+2
  6695  0736  318C  2435  3182   	fcall	___ftdiv
  6696  0739  0020               	movlb	0	; select bank0
  6697  073A  0830               	movf	?___ftdiv,w
  6698  073B  00C3               	movwf	___ftadd@f2
  6699  073C  0831               	movf	?___ftdiv+1,w
  6700  073D  00C4               	movwf	___ftadd@f2+1
  6701  073E  0832               	movf	?___ftdiv+2,w
  6702  073F  00C5               	movwf	___ftadd@f2+2
  6703  0740  318F  270A  3182   	fcall	___ftadd
  6704  0743  0020               	movlb	0	; select bank0
  6705  0744  0840               	movf	?___ftadd,w
  6706  0745  0021               	movlb	1	; select bank1
  6707  0746  00D0               	movwf	main@displayTemp2^(0+128)
  6708  0747  0020               	movlb	0	; select bank0
  6709  0748  0841               	movf	?___ftadd+1,w
  6710  0749  0021               	movlb	1	; select bank1
  6711  074A  00D1               	movwf	(main@displayTemp2+1)^(0+128)
  6712  074B  0020               	movlb	0	; select bank0
  6713  074C  0842               	movf	?___ftadd+2,w
  6714  074D  0021               	movlb	1	; select bank1
  6715  074E  00D2               	movwf	(main@displayTemp2+2)^(0+128)
  6716                           
  6717                           ;main.c: 232: { LCD_Set_Cursor(9,0); LCD_Write_Int((int)displayTemp,-1, 1, 0);};
  6718  074F  01F4               	clrf	LCD_Set_Cursor@y
  6719  0750  3009               	movlw	9
  6720  0751  3188  20CB  3182   	fcall	_LCD_Set_Cursor
  6721  0754  0021               	movlb	1	; select bank1
  6722  0755  084D               	movf	main@displayTemp^(0+128),w
  6723  0756  00F0               	movwf	___fttol@f1
  6724  0757  084E               	movf	(main@displayTemp+1)^(0+128),w
  6725  0758  00F1               	movwf	___fttol@f1+1
  6726  0759  084F               	movf	(main@displayTemp+2)^(0+128),w
  6727  075A  00F2               	movwf	___fttol@f1+2
  6728  075B  318B  2328  3182   	fcall	___fttol
  6729  075E  0871               	movf	?___fttol+1,w
  6730  075F  0020               	movlb	0	; select bank0
  6731  0760  00A1               	movwf	LCD_Write_Int@value+1
  6732  0761  0870               	movf	?___fttol,w
  6733  0762  00A0               	movwf	LCD_Write_Int@value
  6734  0763  01A2               	clrf	LCD_Write_Int@fieldLength
  6735  0764  03A2               	decf	LCD_Write_Int@fieldLength,f
  6736  0765  01A3               	clrf	LCD_Write_Int@numPlaces
  6737  0766  0AA3               	incf	LCD_Write_Int@numPlaces,f
  6738  0767  01A4               	clrf	LCD_Write_Int@sign
  6739  0768  318E  263F  3182   	fcall	_LCD_Write_Int
  6740                           
  6741                           ;main.c: 233: LCD_Write_Char(0);
  6742  076B  3000               	movlw	0
  6743  076C  3197  27A0  3182   	fcall	_LCD_Write_Char
  6744                           
  6745                           ;main.c: 234: LCD_Write_Char('F');
  6746  076F  3046               	movlw	70
  6747  0770  3197  27A0  3182   	fcall	_LCD_Write_Char
  6748                           
  6749                           ;main.c: 235: LCD_Write_Char(' ');
  6750  0773  3020               	movlw	32
  6751  0774  3197  27A0  3182   	fcall	_LCD_Write_Char
  6752                           
  6753                           ;main.c: 237: { LCD_Set_Cursor(9,1); LCD_Write_Int((int)displayTemp2,-1, 1, 0);};
  6754  0777  01F4               	clrf	LCD_Set_Cursor@y
  6755  0778  0AF4               	incf	LCD_Set_Cursor@y,f
  6756  0779  3009               	movlw	9
  6757  077A  3188  20CB  3182   	fcall	_LCD_Set_Cursor
  6758  077D  0021               	movlb	1	; select bank1
  6759  077E  0850               	movf	main@displayTemp2^(0+128),w
  6760  077F  00F0               	movwf	___fttol@f1
  6761  0780  0851               	movf	(main@displayTemp2+1)^(0+128),w
  6762  0781  00F1               	movwf	___fttol@f1+1
  6763  0782  0852               	movf	(main@displayTemp2+2)^(0+128),w
  6764  0783  00F2               	movwf	___fttol@f1+2
  6765  0784  318B  2328  3182   	fcall	___fttol
  6766  0787  0871               	movf	?___fttol+1,w
  6767  0788  0020               	movlb	0	; select bank0
  6768  0789  00A1               	movwf	LCD_Write_Int@value+1
  6769  078A  0870               	movf	?___fttol,w
  6770  078B  00A0               	movwf	LCD_Write_Int@value
  6771  078C  01A2               	clrf	LCD_Write_Int@fieldLength
  6772  078D  03A2               	decf	LCD_Write_Int@fieldLength,f
  6773  078E  01A3               	clrf	LCD_Write_Int@numPlaces
  6774  078F  0AA3               	incf	LCD_Write_Int@numPlaces,f
  6775  0790  01A4               	clrf	LCD_Write_Int@sign
  6776  0791  318E  263F  3182   	fcall	_LCD_Write_Int
  6777                           
  6778                           ;main.c: 238: LCD_Write_Char(0);
  6779  0794  3000               	movlw	0
  6780  0795  3197  27A0  3182   	fcall	_LCD_Write_Char
  6781                           
  6782                           ;main.c: 239: LCD_Write_Char('F');
  6783  0798  3046               	movlw	70
  6784  0799  3197  27A0  3182   	fcall	_LCD_Write_Char
  6785                           
  6786                           ;main.c: 240: LCD_Write_Char(' ');
  6787  079C  3020               	movlw	32
  6788  079D  3197  27A0  3182   	fcall	_LCD_Write_Char
  6789  07A0                     l3113:	
  6790                           
  6791                           ;main.c: 241: }
  6792                           ;main.c: 244: if(choice==0)C_or_F=0;
  6793  07A0  0021               	movlb	1	; select bank1
  6794  07A1  0855               	movf	main@choice^(0+128),w
  6795  07A2  1903               	btfsc	3,2
  6796  07A3  01D6               	clrf	main@C_or_F^(0+128)
  6797                           
  6798                           ;main.c: 246: if(choice==1)C_or_F=1;
  6799  07A4  0355               	decf	main@choice^(0+128),w
  6800  07A5  1D03               	btfss	3,2
  6801  07A6  2FA9               	goto	l3121
  6802  07A7  01D6               	clrf	main@C_or_F^(0+128)
  6803  07A8  0AD6               	incf	main@C_or_F^(0+128),f
  6804  07A9                     l3121:	
  6805                           
  6806                           ;main.c: 248: if(choice==2)C_or_F=1-C_or_F;
  6807  07A9  3002               	movlw	2
  6808  07AA  0655               	xorwf	main@choice^(0+128),w
  6809  07AB  1D03               	btfss	3,2
  6810  07AC  2FB5               	goto	l3125
  6811  07AD  0356               	decf	main@C_or_F^(0+128),w
  6812  07AE  3AFF               	xorlw	255
  6813  07AF  3E01               	addlw	1
  6814  07B0  0020               	movlb	0	; select bank0
  6815  07B1  00E9               	movwf	??_main
  6816  07B2  0869               	movf	??_main,w
  6817  07B3  0021               	movlb	1	; select bank1
  6818  07B4  00D6               	movwf	main@C_or_F^(0+128)
  6819  07B5                     l3125:	
  6820                           
  6821                           ;main.c: 264: loop=0;
  6822  07B5  01BD               	clrf	main@loop^(0+128)
  6823  07B6                     l3127:	
  6824                           
  6825                           ;main.c: 265: }
  6826                           ;main.c: 266: loop+=1;
  6827  07B6  3001               	movlw	1
  6828  07B7  0020               	movlb	0	; select bank0
  6829  07B8  00E9               	movwf	??_main
  6830  07B9  0869               	movf	??_main,w
  6831  07BA  0021               	movlb	1	; select bank1
  6832  07BB  07BD               	addwf	main@loop^(0+128),f
  6833  07BC  2C98               	goto	l2941
  6834  07BD                     __end_of_main:	
  6835                           
  6836                           	psect	text1
  6837  0009                     __ptext1:	
  6838 ;; *************** function _tempCalc *****************
  6839 ;; Defined at:
  6840 ;;		line 4 in file "tempCalc.c"
  6841 ;; Parameters:    Size  Location     Type
  6842 ;;  analogValue     2   61[BANK0 ] int 
  6843 ;; Auto vars:     Size  Location     Type
  6844 ;;  steinhart       3   70[BANK0 ] float 
  6845 ;;  R               3   64[BANK0 ] float 
  6846 ;; Return value:  Size  Location     Type
  6847 ;;                  3   61[BANK0 ] float 
  6848 ;; Registers used:
  6849 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6850 ;; Tracked objects:
  6851 ;;		On entry : 0/0
  6852 ;;		On exit  : 0/0
  6853 ;;		Unchanged: 0/0
  6854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6855 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6856 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6858 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6859 ;;Total ram usage:       12 bytes
  6860 ;; Hardware stack levels used:    1
  6861 ;; Hardware stack levels required when called:    4
  6862 ;; This function calls:
  6863 ;;		___awtoft
  6864 ;;		___ftadd
  6865 ;;		___ftdiv
  6866 ;;		___ftmul
  6867 ;;		___ftsub
  6868 ;;		_log
  6869 ;; This function is called by:
  6870 ;;		_main
  6871 ;; This function uses a non-reentrant model
  6872 ;;
  6873                           
  6874                           
  6875                           ;psect for function _tempCalc
  6876  0009                     _tempCalc:	
  6877                           
  6878                           ;tempCalc.c: 6: float R, steinhart;
  6879                           ;tempCalc.c: 8: R = 10020/(1023/(float)analogValue - 1);
  6880                           
  6881                           ;incstack = 0
  6882                           ; Regs used in _tempCalc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6883  0009  3000               	movlw	0
  6884  000A  0020               	movlb	0	; select bank0
  6885  000B  00C0               	movwf	___ftadd@f1
  6886  000C  3080               	movlw	128
  6887  000D  00C1               	movwf	___ftadd@f1+1
  6888  000E  30BF               	movlw	191
  6889  000F  00C2               	movwf	___ftadd@f1+2
  6890  0010  085E               	movf	tempCalc@analogValue+1,w
  6891  0011  00F9               	movwf	___awtoft@c+1
  6892  0012  085D               	movf	tempCalc@analogValue,w
  6893  0013  00F8               	movwf	___awtoft@c
  6894  0014  3197  275A  3180   	fcall	___awtoft
  6895  0017  0878               	movf	?___awtoft,w
  6896  0018  0020               	movlb	0	; select bank0
  6897  0019  00B0               	movwf	___ftdiv@f2
  6898  001A  0879               	movf	?___awtoft+1,w
  6899  001B  00B1               	movwf	___ftdiv@f2+1
  6900  001C  087A               	movf	?___awtoft+2,w
  6901  001D  00B2               	movwf	___ftdiv@f2+2
  6902  001E  30C0               	movlw	192
  6903  001F  00B3               	movwf	___ftdiv@f1
  6904  0020  307F               	movlw	127
  6905  0021  00B4               	movwf	___ftdiv@f1+1
  6906  0022  3044               	movlw	68
  6907  0023  00B5               	movwf	___ftdiv@f1+2
  6908  0024  318C  2435  3180   	fcall	___ftdiv
  6909  0027  0020               	movlb	0	; select bank0
  6910  0028  0830               	movf	?___ftdiv,w
  6911  0029  00C3               	movwf	___ftadd@f2
  6912  002A  0831               	movf	?___ftdiv+1,w
  6913  002B  00C4               	movwf	___ftadd@f2+1
  6914  002C  0832               	movf	?___ftdiv+2,w
  6915  002D  00C5               	movwf	___ftadd@f2+2
  6916  002E  318F  270A  3180   	fcall	___ftadd
  6917  0031  0020               	movlb	0	; select bank0
  6918  0032  0840               	movf	?___ftadd,w
  6919  0033  00E3               	movwf	_tempCalc$980
  6920  0034  0841               	movf	?___ftadd+1,w
  6921  0035  00E4               	movwf	_tempCalc$980+1
  6922  0036  0842               	movf	?___ftadd+2,w
  6923  0037  00E5               	movwf	_tempCalc$980+2
  6924                           
  6925                           ;tempCalc.c: 6: float R, steinhart;
  6926                           ;tempCalc.c: 8: R = 10020/(1023/(float)analogValue - 1);
  6927  0038  0863               	movf	_tempCalc$980,w
  6928  0039  00B0               	movwf	___ftdiv@f2
  6929  003A  0864               	movf	_tempCalc$980+1,w
  6930  003B  00B1               	movwf	___ftdiv@f2+1
  6931  003C  0865               	movf	_tempCalc$980+2,w
  6932  003D  00B2               	movwf	___ftdiv@f2+2
  6933  003E  3090               	movlw	144
  6934  003F  00B3               	movwf	___ftdiv@f1
  6935  0040  301C               	movlw	28
  6936  0041  00B4               	movwf	___ftdiv@f1+1
  6937  0042  3046               	movlw	70
  6938  0043  00B5               	movwf	___ftdiv@f1+2
  6939  0044  318C  2435  3180   	fcall	___ftdiv
  6940  0047  0020               	movlb	0	; select bank0
  6941  0048  0830               	movf	?___ftdiv,w
  6942  0049  00E0               	movwf	tempCalc@R
  6943  004A  0831               	movf	?___ftdiv+1,w
  6944  004B  00E1               	movwf	tempCalc@R+1
  6945  004C  0832               	movf	?___ftdiv+2,w
  6946  004D  00E2               	movwf	tempCalc@R+2
  6947                           
  6948                           ;tempCalc.c: 10: steinhart = R /10061;
  6949  004E  3034               	movlw	52
  6950  004F  00B0               	movwf	___ftdiv@f2
  6951  0050  301D               	movlw	29
  6952  0051  00B1               	movwf	___ftdiv@f2+1
  6953  0052  3046               	movlw	70
  6954  0053  00B2               	movwf	___ftdiv@f2+2
  6955  0054  0860               	movf	tempCalc@R,w
  6956  0055  00B3               	movwf	___ftdiv@f1
  6957  0056  0861               	movf	tempCalc@R+1,w
  6958  0057  00B4               	movwf	___ftdiv@f1+1
  6959  0058  0862               	movf	tempCalc@R+2,w
  6960  0059  00B5               	movwf	___ftdiv@f1+2
  6961  005A  318C  2435  3180   	fcall	___ftdiv
  6962  005D  0020               	movlb	0	; select bank0
  6963  005E  0830               	movf	?___ftdiv,w
  6964  005F  00E6               	movwf	tempCalc@steinhart
  6965  0060  0831               	movf	?___ftdiv+1,w
  6966  0061  00E7               	movwf	tempCalc@steinhart+1
  6967  0062  0832               	movf	?___ftdiv+2,w
  6968  0063  00E8               	movwf	tempCalc@steinhart+2
  6969                           
  6970                           ;tempCalc.c: 11: steinhart = log(steinhart);
  6971  0064  0866               	movf	tempCalc@steinhart,w
  6972  0065  00D7               	movwf	log@x
  6973  0066  0867               	movf	tempCalc@steinhart+1,w
  6974  0067  00D8               	movwf	log@x+1
  6975  0068  0868               	movf	tempCalc@steinhart+2,w
  6976  0069  00D9               	movwf	log@x+2
  6977  006A  318C  24DE  3180   	fcall	_log
  6978  006D  0020               	movlb	0	; select bank0
  6979  006E  0857               	movf	?_log,w
  6980  006F  00E6               	movwf	tempCalc@steinhart
  6981  0070  0858               	movf	?_log+1,w
  6982  0071  00E7               	movwf	tempCalc@steinhart+1
  6983  0072  0859               	movf	?_log+2,w
  6984  0073  00E8               	movwf	tempCalc@steinhart+2
  6985                           
  6986                           ;tempCalc.c: 12: steinhart /= 3995;
  6987  0074  30B0               	movlw	176
  6988  0075  00B0               	movwf	___ftdiv@f2
  6989  0076  3079               	movlw	121
  6990  0077  00B1               	movwf	___ftdiv@f2+1
  6991  0078  3045               	movlw	69
  6992  0079  00B2               	movwf	___ftdiv@f2+2
  6993  007A  0866               	movf	tempCalc@steinhart,w
  6994  007B  00B3               	movwf	___ftdiv@f1
  6995  007C  0867               	movf	tempCalc@steinhart+1,w
  6996  007D  00B4               	movwf	___ftdiv@f1+1
  6997  007E  0868               	movf	tempCalc@steinhart+2,w
  6998  007F  00B5               	movwf	___ftdiv@f1+2
  6999  0080  318C  2435  3180   	fcall	___ftdiv
  7000  0083  0020               	movlb	0	; select bank0
  7001  0084  0830               	movf	?___ftdiv,w
  7002  0085  00E6               	movwf	tempCalc@steinhart
  7003  0086  0831               	movf	?___ftdiv+1,w
  7004  0087  00E7               	movwf	tempCalc@steinhart+1
  7005  0088  0832               	movf	?___ftdiv+2,w
  7006  0089  00E8               	movwf	tempCalc@steinhart+2
  7007                           
  7008                           ;tempCalc.c: 13: steinhart += 1.0 / (25 + 273.15);
  7009  008A  30CF               	movlw	207
  7010  008B  00C0               	movwf	___ftadd@f1
  7011  008C  305B               	movlw	91
  7012  008D  00C1               	movwf	___ftadd@f1+1
  7013  008E  303B               	movlw	59
  7014  008F  00C2               	movwf	___ftadd@f1+2
  7015  0090  0866               	movf	tempCalc@steinhart,w
  7016  0091  00C3               	movwf	___ftadd@f2
  7017  0092  0867               	movf	tempCalc@steinhart+1,w
  7018  0093  00C4               	movwf	___ftadd@f2+1
  7019  0094  0868               	movf	tempCalc@steinhart+2,w
  7020  0095  00C5               	movwf	___ftadd@f2+2
  7021  0096  318F  270A  3180   	fcall	___ftadd
  7022  0099  0020               	movlb	0	; select bank0
  7023  009A  0840               	movf	?___ftadd,w
  7024  009B  00E6               	movwf	tempCalc@steinhart
  7025  009C  0841               	movf	?___ftadd+1,w
  7026  009D  00E7               	movwf	tempCalc@steinhart+1
  7027  009E  0842               	movf	?___ftadd+2,w
  7028  009F  00E8               	movwf	tempCalc@steinhart+2
  7029                           
  7030                           ;tempCalc.c: 14: steinhart = 1.0 / steinhart;
  7031  00A0  0866               	movf	tempCalc@steinhart,w
  7032  00A1  00B0               	movwf	___ftdiv@f2
  7033  00A2  0867               	movf	tempCalc@steinhart+1,w
  7034  00A3  00B1               	movwf	___ftdiv@f2+1
  7035  00A4  0868               	movf	tempCalc@steinhart+2,w
  7036  00A5  00B2               	movwf	___ftdiv@f2+2
  7037  00A6  3000               	movlw	0
  7038  00A7  00B3               	movwf	___ftdiv@f1
  7039  00A8  3080               	movlw	128
  7040  00A9  00B4               	movwf	___ftdiv@f1+1
  7041  00AA  303F               	movlw	63
  7042  00AB  00B5               	movwf	___ftdiv@f1+2
  7043  00AC  318C  2435  3180   	fcall	___ftdiv
  7044  00AF  0020               	movlb	0	; select bank0
  7045  00B0  0830               	movf	?___ftdiv,w
  7046  00B1  00E6               	movwf	tempCalc@steinhart
  7047  00B2  0831               	movf	?___ftdiv+1,w
  7048  00B3  00E7               	movwf	tempCalc@steinhart+1
  7049  00B4  0832               	movf	?___ftdiv+2,w
  7050  00B5  00E8               	movwf	tempCalc@steinhart+2
  7051                           
  7052                           ;tempCalc.c: 15: steinhart -= 273.15;
  7053  00B6  3093               	movlw	147
  7054  00B7  00CD               	movwf	___ftsub@f2
  7055  00B8  3088               	movlw	136
  7056  00B9  00CE               	movwf	___ftsub@f2+1
  7057  00BA  3043               	movlw	67
  7058  00BB  00CF               	movwf	___ftsub@f2+2
  7059  00BC  0866               	movf	tempCalc@steinhart,w
  7060  00BD  00D0               	movwf	___ftsub@f1
  7061  00BE  0867               	movf	tempCalc@steinhart+1,w
  7062  00BF  00D1               	movwf	___ftsub@f1+1
  7063  00C0  0868               	movf	tempCalc@steinhart+2,w
  7064  00C1  00D2               	movwf	___ftsub@f1+2
  7065  00C2  3188  2001  3180   	fcall	___ftsub
  7066  00C5  0020               	movlb	0	; select bank0
  7067  00C6  084D               	movf	?___ftsub,w
  7068  00C7  00E6               	movwf	tempCalc@steinhart
  7069  00C8  084E               	movf	?___ftsub+1,w
  7070  00C9  00E7               	movwf	tempCalc@steinhart+1
  7071  00CA  084F               	movf	?___ftsub+2,w
  7072  00CB  00E8               	movwf	tempCalc@steinhart+2
  7073                           
  7074                           ;tempCalc.c: 17: steinhart*=10;
  7075  00CC  3000               	movlw	0
  7076  00CD  00A0               	movwf	___ftmul@f1
  7077  00CE  3020               	movlw	32
  7078  00CF  00A1               	movwf	___ftmul@f1+1
  7079  00D0  3041               	movlw	65
  7080  00D1  00A2               	movwf	___ftmul@f1+2
  7081  00D2  0866               	movf	tempCalc@steinhart,w
  7082  00D3  00A3               	movwf	___ftmul@f2
  7083  00D4  0867               	movf	tempCalc@steinhart+1,w
  7084  00D5  00A4               	movwf	___ftmul@f2+1
  7085  00D6  0868               	movf	tempCalc@steinhart+2,w
  7086  00D7  00A5               	movwf	___ftmul@f2+2
  7087  00D8  318D  258B         	fcall	___ftmul
  7088  00DA  0020               	movlb	0	; select bank0
  7089  00DB  0820               	movf	?___ftmul,w
  7090  00DC  00E6               	movwf	tempCalc@steinhart
  7091  00DD  0821               	movf	?___ftmul+1,w
  7092  00DE  00E7               	movwf	tempCalc@steinhart+1
  7093  00DF  0822               	movf	?___ftmul+2,w
  7094  00E0  00E8               	movwf	tempCalc@steinhart+2
  7095                           
  7096                           ;tempCalc.c: 21: return steinhart;
  7097  00E1  0866               	movf	tempCalc@steinhart,w
  7098  00E2  00DD               	movwf	?_tempCalc
  7099  00E3  0867               	movf	tempCalc@steinhart+1,w
  7100  00E4  00DE               	movwf	?_tempCalc+1
  7101  00E5  0868               	movf	tempCalc@steinhart+2,w
  7102  00E6  00DF               	movwf	?_tempCalc+2
  7103  00E7  0008               	return
  7104  00E8                     __end_of_tempCalc:	
  7105                           
  7106                           	psect	text2
  7107  0CDE                     __ptext2:	
  7108 ;; *************** function _log *****************
  7109 ;; Defined at:
  7110 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\log.c"
  7111 ;; Parameters:    Size  Location     Type
  7112 ;;  x               3   55[BANK0 ] float 
  7113 ;; Auto vars:     Size  Location     Type
  7114 ;;  exponent        2   59[BANK0 ] int 
  7115 ;; Return value:  Size  Location     Type
  7116 ;;                  3   55[BANK0 ] int 
  7117 ;; Registers used:
  7118 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7119 ;; Tracked objects:
  7120 ;;		On entry : 0/0
  7121 ;;		On exit  : 0/0
  7122 ;;		Unchanged: 0/0
  7123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7124 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7125 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7126 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7127 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7128 ;;Total ram usage:        6 bytes
  7129 ;; Hardware stack levels used:    1
  7130 ;; Hardware stack levels required when called:    3
  7131 ;; This function calls:
  7132 ;;		___awtoft
  7133 ;;		___ftadd
  7134 ;;		___ftge
  7135 ;;		___ftmul
  7136 ;;		_eval_poly
  7137 ;;		_frexp
  7138 ;; This function is called by:
  7139 ;;		_tempCalc
  7140 ;; This function uses a non-reentrant model
  7141 ;;
  7142                           
  7143                           
  7144                           ;psect for function _log
  7145  0CDE                     _log:	
  7146                           
  7147                           ;incstack = 0
  7148                           ; Regs used in _log: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7149  0CDE  0020               	movlb	0	; select bank0
  7150  0CDF  0857               	movf	log@x,w
  7151  0CE0  00F0               	movwf	___ftge@ff1
  7152  0CE1  0858               	movf	log@x+1,w
  7153  0CE2  00F1               	movwf	___ftge@ff1+1
  7154  0CE3  0859               	movf	log@x+2,w
  7155  0CE4  00F2               	movwf	___ftge@ff1+2
  7156  0CE5  3000               	movlw	0
  7157  0CE6  00F3               	movwf	___ftge@ff2
  7158  0CE7  3000               	movlw	0
  7159  0CE8  00F4               	movwf	___ftge@ff2+1
  7160  0CE9  3000               	movlw	0
  7161  0CEA  00F5               	movwf	___ftge@ff2+2
  7162  0CEB  3188  2055  318C   	fcall	___ftge
  7163  0CEE  1803               	btfsc	3,0
  7164  0CEF  2CFC               	goto	l2405
  7165  0CF0  3021               	movlw	33
  7166  0CF1  0020               	movlb	0	; select bank0
  7167  0CF2  00EC               	movwf	_errno
  7168  0CF3  3000               	movlw	0
  7169  0CF4  00ED               	movwf	_errno+1
  7170  0CF5  3000               	movlw	0
  7171  0CF6  00D7               	movwf	?_log
  7172  0CF7  3000               	movlw	0
  7173  0CF8  00D8               	movwf	?_log+1
  7174  0CF9  3000               	movlw	0
  7175  0CFA  00D9               	movwf	?_log+2
  7176  0CFB  0008               	return
  7177  0CFC                     l2405:	
  7178  0CFC  0020               	movlb	0	; select bank0
  7179  0CFD  0859               	movf	log@x+2,w
  7180  0CFE  0458               	iorwf	log@x+1,w
  7181  0CFF  0457               	iorwf	log@x,w
  7182  0D00  1D03               	skipz
  7183  0D01  2D0D               	goto	l2411
  7184  0D02  3022               	movlw	34
  7185  0D03  00EC               	movwf	_errno
  7186  0D04  3000               	movlw	0
  7187  0D05  00ED               	movwf	_errno+1
  7188  0D06  3000               	movlw	0
  7189  0D07  00D7               	movwf	?_log
  7190  0D08  3000               	movlw	0
  7191  0D09  00D8               	movwf	?_log+1
  7192  0D0A  3000               	movlw	0
  7193  0D0B  00D9               	movwf	?_log+2
  7194  0D0C  0008               	return
  7195  0D0D                     l2411:	
  7196  0D0D  3000               	movlw	0
  7197  0D0E  00C0               	movwf	___ftadd@f1
  7198  0D0F  3080               	movlw	128
  7199  0D10  00C1               	movwf	___ftadd@f1+1
  7200  0D11  30BF               	movlw	191
  7201  0D12  00C2               	movwf	___ftadd@f1+2
  7202  0D13  3000               	movlw	0
  7203  0D14  00A0               	movwf	___ftmul@f1
  7204  0D15  3000               	movlw	0
  7205  0D16  00A1               	movwf	___ftmul@f1+1
  7206  0D17  3040               	movlw	64
  7207  0D18  00A2               	movwf	___ftmul@f1+2
  7208  0D19  305B               	movlw	(low (log@exponent| 0))& (0+255)
  7209  0D1A  00DA               	movwf	??_log
  7210  0D1B  085A               	movf	??_log,w
  7211  0D1C  00F3               	movwf	frexp@eptr
  7212  0D1D  0857               	movf	log@x,w
  7213  0D1E  00F0               	movwf	frexp@value
  7214  0D1F  0858               	movf	log@x+1,w
  7215  0D20  00F1               	movwf	frexp@value+1
  7216  0D21  0859               	movf	log@x+2,w
  7217  0D22  00F2               	movwf	frexp@value+2
  7218  0D23  3188  2090  318C   	fcall	_frexp
  7219  0D26  0870               	movf	?_frexp,w
  7220  0D27  0020               	movlb	0	; select bank0
  7221  0D28  00A3               	movwf	___ftmul@f2
  7222  0D29  0871               	movf	?_frexp+1,w
  7223  0D2A  00A4               	movwf	___ftmul@f2+1
  7224  0D2B  0872               	movf	?_frexp+2,w
  7225  0D2C  00A5               	movwf	___ftmul@f2+2
  7226  0D2D  318D  258B  318C   	fcall	___ftmul
  7227  0D30  0020               	movlb	0	; select bank0
  7228  0D31  0820               	movf	?___ftmul,w
  7229  0D32  00C3               	movwf	___ftadd@f2
  7230  0D33  0821               	movf	?___ftmul+1,w
  7231  0D34  00C4               	movwf	___ftadd@f2+1
  7232  0D35  0822               	movf	?___ftmul+2,w
  7233  0D36  00C5               	movwf	___ftadd@f2+2
  7234  0D37  318F  270A  318C   	fcall	___ftadd
  7235  0D3A  0020               	movlb	0	; select bank0
  7236  0D3B  0840               	movf	?___ftadd,w
  7237  0D3C  00D7               	movwf	log@x
  7238  0D3D  0841               	movf	?___ftadd+1,w
  7239  0D3E  00D8               	movwf	log@x+1
  7240  0D3F  0842               	movf	?___ftadd+2,w
  7241  0D40  00D9               	movwf	log@x+2
  7242  0D41  30FF               	movlw	255
  7243  0D42  07DB               	addwf	log@exponent,f
  7244  0D43  30FF               	movlw	255
  7245  0D44  3DDC               	addwfc	log@exponent+1,f
  7246  0D45  0857               	movf	log@x,w
  7247  0D46  00CD               	movwf	eval_poly@x
  7248  0D47  0858               	movf	log@x+1,w
  7249  0D48  00CE               	movwf	eval_poly@x+1
  7250  0D49  0859               	movf	log@x+2,w
  7251  0D4A  00CF               	movwf	eval_poly@x+2
  7252  0D4B  3000               	movlw	low (log@coeff| (0+32768))
  7253  0D4C  00D0               	movwf	eval_poly@d
  7254  0D4D  3090               	movlw	high (log@coeff| (0+32768))
  7255  0D4E  00D1               	movwf	eval_poly@d+1
  7256  0D4F  3008               	movlw	8
  7257  0D50  00D2               	movwf	eval_poly@n
  7258  0D51  3000               	movlw	0
  7259  0D52  00D3               	movwf	eval_poly@n+1
  7260  0D53  3189  21E2  318C   	fcall	_eval_poly
  7261  0D56  0020               	movlb	0	; select bank0
  7262  0D57  084D               	movf	?_eval_poly,w
  7263  0D58  00D7               	movwf	log@x
  7264  0D59  084E               	movf	?_eval_poly+1,w
  7265  0D5A  00D8               	movwf	log@x+1
  7266  0D5B  084F               	movf	?_eval_poly+2,w
  7267  0D5C  00D9               	movwf	log@x+2
  7268  0D5D  0857               	movf	log@x,w
  7269  0D5E  00C0               	movwf	___ftadd@f1
  7270  0D5F  0858               	movf	log@x+1,w
  7271  0D60  00C1               	movwf	___ftadd@f1+1
  7272  0D61  0859               	movf	log@x+2,w
  7273  0D62  00C2               	movwf	___ftadd@f1+2
  7274  0D63  3072               	movlw	114
  7275  0D64  00A0               	movwf	___ftmul@f1
  7276  0D65  3031               	movlw	49
  7277  0D66  00A1               	movwf	___ftmul@f1+1
  7278  0D67  303F               	movlw	63
  7279  0D68  00A2               	movwf	___ftmul@f1+2
  7280  0D69  085C               	movf	log@exponent+1,w
  7281  0D6A  00F9               	movwf	___awtoft@c+1
  7282  0D6B  085B               	movf	log@exponent,w
  7283  0D6C  00F8               	movwf	___awtoft@c
  7284  0D6D  3197  275A  318C   	fcall	___awtoft
  7285  0D70  0878               	movf	?___awtoft,w
  7286  0D71  0020               	movlb	0	; select bank0
  7287  0D72  00A3               	movwf	___ftmul@f2
  7288  0D73  0879               	movf	?___awtoft+1,w
  7289  0D74  00A4               	movwf	___ftmul@f2+1
  7290  0D75  087A               	movf	?___awtoft+2,w
  7291  0D76  00A5               	movwf	___ftmul@f2+2
  7292  0D77  318D  258B  318C   	fcall	___ftmul
  7293  0D7A  0020               	movlb	0	; select bank0
  7294  0D7B  0820               	movf	?___ftmul,w
  7295  0D7C  00C3               	movwf	___ftadd@f2
  7296  0D7D  0821               	movf	?___ftmul+1,w
  7297  0D7E  00C4               	movwf	___ftadd@f2+1
  7298  0D7F  0822               	movf	?___ftmul+2,w
  7299  0D80  00C5               	movwf	___ftadd@f2+2
  7300  0D81  318F  270A         	fcall	___ftadd
  7301  0D83  0020               	movlb	0	; select bank0
  7302  0D84  0840               	movf	?___ftadd,w
  7303  0D85  00D7               	movwf	?_log
  7304  0D86  0841               	movf	?___ftadd+1,w
  7305  0D87  00D8               	movwf	?_log+1
  7306  0D88  0842               	movf	?___ftadd+2,w
  7307  0D89  00D9               	movwf	?_log+2
  7308  0D8A  0008               	return
  7309  0D8B                     __end_of_log:	
  7310                           
  7311                           	psect	text3
  7312  0890                     __ptext3:	
  7313 ;; *************** function _frexp *****************
  7314 ;; Defined at:
  7315 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\frexp.c"
  7316 ;; Parameters:    Size  Location     Type
  7317 ;;  value           3    0[COMMON] int 
  7318 ;;  eptr            1    3[COMMON] PTR int 
  7319 ;;		 -> log@exponent(2), 
  7320 ;; Auto vars:     Size  Location     Type
  7321 ;;		None
  7322 ;; Return value:  Size  Location     Type
  7323 ;;                  3    0[COMMON] PTR int 
  7324 ;; Registers used:
  7325 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7326 ;; Tracked objects:
  7327 ;;		On entry : 0/0
  7328 ;;		On exit  : 0/0
  7329 ;;		Unchanged: 0/0
  7330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7331 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7333 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7334 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7335 ;;Total ram usage:        6 bytes
  7336 ;; Hardware stack levels used:    1
  7337 ;; This function calls:
  7338 ;;		Nothing
  7339 ;; This function is called by:
  7340 ;;		_log
  7341 ;; This function uses a non-reentrant model
  7342 ;;
  7343                           
  7344                           
  7345                           ;psect for function _frexp
  7346  0890                     _frexp:	
  7347                           
  7348                           ;incstack = 0
  7349                           ; Regs used in _frexp: [wreg+fsr1l+fsr1h+status,2+status,0]
  7350  0890  0872               	movf	frexp@value+2,w
  7351  0891  0471               	iorwf	frexp@value+1,w
  7352  0892  0470               	iorwf	frexp@value,w
  7353  0893  1D03               	skipz
  7354  0894  28A2               	goto	l2237
  7355  0895  0873               	movf	frexp@eptr,w
  7356  0896  0086               	movwf	6
  7357  0897  0187               	clrf	7
  7358  0898  3000               	movlw	0
  7359  0899  3FC0               	movwi [0]fsr1
  7360  089A  3FC1               	movwi [1]fsr1
  7361  089B  3000               	movlw	0
  7362  089C  00F0               	movwf	?_frexp
  7363  089D  3000               	movlw	0
  7364  089E  00F1               	movwf	?_frexp+1
  7365  089F  3000               	movlw	0
  7366  08A0  00F2               	movwf	?_frexp+2
  7367  08A1  0008               	return
  7368  08A2                     l2237:	
  7369  08A2  0872               	movf	frexp@value+2,w
  7370  08A3  397F               	andlw	127
  7371  08A4  00F4               	movwf	??_frexp
  7372  08A5  01F5               	clrf	??_frexp+1
  7373  08A6  35F4               	lslf	??_frexp,f
  7374  08A7  0DF5               	rlf	??_frexp+1,f
  7375  08A8  0873               	movf	frexp@eptr,w
  7376  08A9  0086               	movwf	6
  7377  08AA  0187               	clrf	7
  7378  08AB  0874               	movf	??_frexp,w
  7379  08AC  3FC0               	movwi [0]fsr1
  7380  08AD  0875               	movf	??_frexp+1,w
  7381  08AE  3FC1               	movwi [1]fsr1
  7382  08AF  0D71               	rlf	frexp@value+1,w
  7383  08B0  0D71               	rlf	frexp@value+1,w
  7384  08B1  3901               	andlw	1
  7385  08B2  00F4               	movwf	??_frexp
  7386  08B3  01F5               	clrf	??_frexp+1
  7387  08B4  0873               	movf	frexp@eptr,w
  7388  08B5  0086               	movwf	6
  7389  08B6  0187               	clrf	7
  7390  08B7  0874               	movf	??_frexp,w
  7391  08B8  0481               	iorwf	1,f
  7392  08B9  3141               	addfsr 1,1
  7393  08BA  0875               	movf	??_frexp+1,w
  7394  08BB  0481               	iorwf	1,f
  7395  08BC  0873               	movf	frexp@eptr,w
  7396  08BD  0086               	movwf	6
  7397  08BE  0187               	clrf	7
  7398  08BF  3082               	movlw	130
  7399  08C0  0781               	addwf	1,f
  7400  08C1  3141               	addfsr 1,1
  7401  08C2  30FF               	movlw	255
  7402  08C3  3D81               	addwfc	1,f
  7403  08C4  317F               	addfsr 1,-1
  7404  08C5  0872               	movf	frexp@value+2,w
  7405  08C6  3980               	andlw	-128
  7406  08C7  383F               	iorlw	63
  7407  08C8  00F2               	movwf	frexp@value+2
  7408  08C9  13F1               	bcf	frexp@value+1,7
  7409  08CA  0008               	return
  7410  08CB                     __end_of_frexp:	
  7411                           
  7412                           	psect	text4
  7413  09E2                     __ptext4:	
  7414 ;; *************** function _eval_poly *****************
  7415 ;; Defined at:
  7416 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\evalpoly.c"
  7417 ;; Parameters:    Size  Location     Type
  7418 ;;  x               3   45[BANK0 ] PTR int 
  7419 ;;  d               2   48[BANK0 ] PTR const 
  7420 ;;		 -> log@coeff(27), 
  7421 ;;  n               2   50[BANK0 ] int 
  7422 ;; Auto vars:     Size  Location     Type
  7423 ;;  res             3   52[BANK0 ] int 
  7424 ;; Return value:  Size  Location     Type
  7425 ;;                  3   45[BANK0 ] int 
  7426 ;; Registers used:
  7427 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7428 ;; Tracked objects:
  7429 ;;		On entry : 0/0
  7430 ;;		On exit  : 0/0
  7431 ;;		Unchanged: 0/0
  7432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7433 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7434 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7436 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7437 ;;Total ram usage:       10 bytes
  7438 ;; Hardware stack levels used:    1
  7439 ;; Hardware stack levels required when called:    2
  7440 ;; This function calls:
  7441 ;;		___ftadd
  7442 ;;		___ftmul
  7443 ;;		___wmul
  7444 ;; This function is called by:
  7445 ;;		_log
  7446 ;; This function uses a non-reentrant model
  7447 ;;
  7448                           
  7449                           
  7450                           ;psect for function _eval_poly
  7451  09E2                     _eval_poly:	
  7452                           
  7453                           ;incstack = 0
  7454                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7455  09E2  0020               	movlb	0	; select bank0
  7456  09E3  0853               	movf	eval_poly@n+1,w
  7457  09E4  00F1               	movwf	___wmul@multiplier+1
  7458  09E5  0852               	movf	eval_poly@n,w
  7459  09E6  00F0               	movwf	___wmul@multiplier
  7460  09E7  3003               	movlw	3
  7461  09E8  00F2               	movwf	___wmul@multiplicand
  7462  09E9  3000               	movlw	0
  7463  09EA  00F3               	movwf	___wmul@multiplicand+1
  7464  09EB  3197  273F  3189   	fcall	___wmul
  7465  09EE  0020               	movlb	0	; select bank0
  7466  09EF  0850               	movf	eval_poly@d,w
  7467  09F0  0770               	addwf	?___wmul,w
  7468  09F1  0084               	movwf	4
  7469  09F2  0851               	movf	eval_poly@d+1,w
  7470  09F3  3D71               	addwfc	?___wmul+1,w
  7471  09F4  0085               	movwf	5
  7472  09F5  3F00               	moviw [0]fsr0
  7473  09F6  00D4               	movwf	eval_poly@res
  7474  09F7  3F01               	moviw [1]fsr0
  7475  09F8  00D5               	movwf	eval_poly@res+1
  7476  09F9  3F02               	moviw [2]fsr0
  7477  09FA                     L1:	
  7478  09FA  00D6               	movwf	eval_poly@res+2
  7479  09FB  0852               	movf	eval_poly@n,w
  7480  09FC  0453               	iorwf	eval_poly@n+1,w
  7481  09FD  1903               	btfsc	3,2
  7482  09FE  2A3B               	goto	l2255
  7483  09FF  30FF               	movlw	255
  7484  0A00  07D2               	addwf	eval_poly@n,f
  7485  0A01  30FF               	movlw	255
  7486  0A02  3DD3               	addwfc	eval_poly@n+1,f
  7487  0A03  0853               	movf	eval_poly@n+1,w
  7488  0A04  00F1               	movwf	___wmul@multiplier+1
  7489  0A05  0852               	movf	eval_poly@n,w
  7490  0A06  00F0               	movwf	___wmul@multiplier
  7491  0A07  3003               	movlw	3
  7492  0A08  00F2               	movwf	___wmul@multiplicand
  7493  0A09  3000               	movlw	0
  7494  0A0A  00F3               	movwf	___wmul@multiplicand+1
  7495  0A0B  3197  273F  3189   	fcall	___wmul
  7496  0A0E  0020               	movlb	0	; select bank0
  7497  0A0F  0850               	movf	eval_poly@d,w
  7498  0A10  0770               	addwf	?___wmul,w
  7499  0A11  0084               	movwf	4
  7500  0A12  0851               	movf	eval_poly@d+1,w
  7501  0A13  3D71               	addwfc	?___wmul+1,w
  7502  0A14  0085               	movwf	5
  7503  0A15  3F00               	moviw [0]fsr0
  7504  0A16  00C0               	movwf	___ftadd@f1
  7505  0A17  3F01               	moviw [1]fsr0
  7506  0A18  00C1               	movwf	___ftadd@f1+1
  7507  0A19  3F02               	moviw [2]fsr0
  7508  0A1A  00C2               	movwf	___ftadd@f1+2
  7509  0A1B  0854               	movf	eval_poly@res,w
  7510  0A1C  00A0               	movwf	___ftmul@f1
  7511  0A1D  0855               	movf	eval_poly@res+1,w
  7512  0A1E  00A1               	movwf	___ftmul@f1+1
  7513  0A1F  0856               	movf	eval_poly@res+2,w
  7514  0A20  00A2               	movwf	___ftmul@f1+2
  7515  0A21  084D               	movf	eval_poly@x,w
  7516  0A22  00A3               	movwf	___ftmul@f2
  7517  0A23  084E               	movf	eval_poly@x+1,w
  7518  0A24  00A4               	movwf	___ftmul@f2+1
  7519  0A25  084F               	movf	eval_poly@x+2,w
  7520  0A26  00A5               	movwf	___ftmul@f2+2
  7521  0A27  318D  258B  3189   	fcall	___ftmul
  7522  0A2A  0020               	movlb	0	; select bank0
  7523  0A2B  0820               	movf	?___ftmul,w
  7524  0A2C  00C3               	movwf	___ftadd@f2
  7525  0A2D  0821               	movf	?___ftmul+1,w
  7526  0A2E  00C4               	movwf	___ftadd@f2+1
  7527  0A2F  0822               	movf	?___ftmul+2,w
  7528  0A30  00C5               	movwf	___ftadd@f2+2
  7529  0A31  318F  270A  3189   	fcall	___ftadd
  7530  0A34  0020               	movlb	0	; select bank0
  7531  0A35  0840               	movf	?___ftadd,w
  7532  0A36  00D4               	movwf	eval_poly@res
  7533  0A37  0841               	movf	?___ftadd+1,w
  7534  0A38  00D5               	movwf	eval_poly@res+1
  7535  0A39  0842               	movf	?___ftadd+2,w
  7536  0A3A  29FA               	goto	L1
  7537  0A3B                     l2255:	
  7538  0A3B  0854               	movf	eval_poly@res,w
  7539  0A3C  00CD               	movwf	?_eval_poly
  7540  0A3D  0855               	movf	eval_poly@res+1,w
  7541  0A3E  00CE               	movwf	?_eval_poly+1
  7542  0A3F  0856               	movf	eval_poly@res+2,w
  7543  0A40  00CF               	movwf	?_eval_poly+2
  7544  0A41  0008               	return
  7545  0A42                     __end_of_eval_poly:	
  7546                           
  7547                           	psect	text5
  7548  0D8B                     __ptext5:	
  7549 ;; *************** function ___ftmul *****************
  7550 ;; Defined at:
  7551 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftmul.c"
  7552 ;; Parameters:    Size  Location     Type
  7553 ;;  f1              3    0[BANK0 ] float 
  7554 ;;  f2              3    3[BANK0 ] float 
  7555 ;; Auto vars:     Size  Location     Type
  7556 ;;  f3_as_produc    3   11[BANK0 ] unsigned um
  7557 ;;  sign            1   15[BANK0 ] unsigned char 
  7558 ;;  cntr            1   14[BANK0 ] unsigned char 
  7559 ;;  exp             1   10[BANK0 ] unsigned char 
  7560 ;; Return value:  Size  Location     Type
  7561 ;;                  3    0[BANK0 ] float 
  7562 ;; Registers used:
  7563 ;;		wreg, status,2, status,0, pclath, cstack
  7564 ;; Tracked objects:
  7565 ;;		On entry : 0/0
  7566 ;;		On exit  : 0/0
  7567 ;;		Unchanged: 0/0
  7568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7569 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7570 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7571 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7572 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7573 ;;Total ram usage:       16 bytes
  7574 ;; Hardware stack levels used:    1
  7575 ;; Hardware stack levels required when called:    1
  7576 ;; This function calls:
  7577 ;;		___ftpack
  7578 ;; This function is called by:
  7579 ;;		_tempCalc
  7580 ;;		_main
  7581 ;;		_log
  7582 ;;		_eval_poly
  7583 ;; This function uses a non-reentrant model
  7584 ;;
  7585                           
  7586                           
  7587                           ;psect for function ___ftmul
  7588  0D8B                     ___ftmul:	
  7589                           
  7590                           ;incstack = 0
  7591                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  7592  0D8B  0020               	movlb	0	; select bank0
  7593  0D8C  0820               	movf	___ftmul@f1,w
  7594  0D8D  00A6               	movwf	??___ftmul
  7595  0D8E  0821               	movf	___ftmul@f1+1,w
  7596  0D8F  00A7               	movwf	??___ftmul+1
  7597  0D90  0822               	movf	___ftmul@f1+2,w
  7598  0D91  00A8               	movwf	??___ftmul+2
  7599  0D92  1003               	clrc
  7600  0D93  0D27               	rlf	??___ftmul+1,w
  7601  0D94  0D28               	rlf	??___ftmul+2,w
  7602  0D95  00A9               	movwf	??___ftmul+3
  7603  0D96  0829               	movf	??___ftmul+3,w
  7604  0D97  00AA               	movwf	___ftmul@exp
  7605  0D98  082A               	movf	___ftmul@exp,w
  7606  0D99  1D03               	btfss	3,2
  7607  0D9A  2DA2               	goto	l2123
  7608  0D9B  3000               	movlw	0
  7609  0D9C  00A0               	movwf	?___ftmul
  7610  0D9D  3000               	movlw	0
  7611  0D9E  00A1               	movwf	?___ftmul+1
  7612  0D9F  3000               	movlw	0
  7613  0DA0  00A2               	movwf	?___ftmul+2
  7614  0DA1  0008               	return
  7615  0DA2                     l2123:	
  7616  0DA2  0823               	movf	___ftmul@f2,w
  7617  0DA3  00A6               	movwf	??___ftmul
  7618  0DA4  0824               	movf	___ftmul@f2+1,w
  7619  0DA5  00A7               	movwf	??___ftmul+1
  7620  0DA6  0825               	movf	___ftmul@f2+2,w
  7621  0DA7  00A8               	movwf	??___ftmul+2
  7622  0DA8  1003               	clrc
  7623  0DA9  0D27               	rlf	??___ftmul+1,w
  7624  0DAA  0D28               	rlf	??___ftmul+2,w
  7625  0DAB  00A9               	movwf	??___ftmul+3
  7626  0DAC  0829               	movf	??___ftmul+3,w
  7627  0DAD  00AF               	movwf	___ftmul@sign
  7628  0DAE  082F               	movf	___ftmul@sign,w
  7629  0DAF  1D03               	btfss	3,2
  7630  0DB0  2DB8               	goto	l2129
  7631  0DB1  3000               	movlw	0
  7632  0DB2  00A0               	movwf	?___ftmul
  7633  0DB3  3000               	movlw	0
  7634  0DB4  00A1               	movwf	?___ftmul+1
  7635  0DB5  3000               	movlw	0
  7636  0DB6  00A2               	movwf	?___ftmul+2
  7637  0DB7  0008               	return
  7638  0DB8                     l2129:	
  7639  0DB8  082F               	movf	___ftmul@sign,w
  7640  0DB9  3E7B               	addlw	123
  7641  0DBA  00A6               	movwf	??___ftmul
  7642  0DBB  0826               	movf	??___ftmul,w
  7643  0DBC  07AA               	addwf	___ftmul@exp,f
  7644  0DBD  0820               	movf	___ftmul@f1,w
  7645  0DBE  00A6               	movwf	??___ftmul
  7646  0DBF  0821               	movf	___ftmul@f1+1,w
  7647  0DC0  00A7               	movwf	??___ftmul+1
  7648  0DC1  0822               	movf	___ftmul@f1+2,w
  7649  0DC2  00A8               	movwf	??___ftmul+2
  7650  0DC3  3010               	movlw	16
  7651  0DC4                     u2205:	
  7652  0DC4  36A8               	lsrf	??___ftmul+2,f
  7653  0DC5  0CA7               	rrf	??___ftmul+1,f
  7654  0DC6  0CA6               	rrf	??___ftmul,f
  7655  0DC7  0B89               	decfsz	9,f
  7656  0DC8  2DC4               	goto	u2205
  7657  0DC9  0826               	movf	??___ftmul,w
  7658  0DCA  00A9               	movwf	??___ftmul+3
  7659  0DCB  0829               	movf	??___ftmul+3,w
  7660  0DCC  00AF               	movwf	___ftmul@sign
  7661  0DCD  0823               	movf	___ftmul@f2,w
  7662  0DCE  00A6               	movwf	??___ftmul
  7663  0DCF  0824               	movf	___ftmul@f2+1,w
  7664  0DD0  00A7               	movwf	??___ftmul+1
  7665  0DD1  0825               	movf	___ftmul@f2+2,w
  7666  0DD2  00A8               	movwf	??___ftmul+2
  7667  0DD3  3010               	movlw	16
  7668  0DD4                     u2215:	
  7669  0DD4  36A8               	lsrf	??___ftmul+2,f
  7670  0DD5  0CA7               	rrf	??___ftmul+1,f
  7671  0DD6  0CA6               	rrf	??___ftmul,f
  7672  0DD7  0B89               	decfsz	9,f
  7673  0DD8  2DD4               	goto	u2215
  7674  0DD9  0826               	movf	??___ftmul,w
  7675  0DDA  00A9               	movwf	??___ftmul+3
  7676  0DDB  0829               	movf	??___ftmul+3,w
  7677  0DDC  06AF               	xorwf	___ftmul@sign,f
  7678  0DDD  3080               	movlw	128
  7679  0DDE  00A6               	movwf	??___ftmul
  7680  0DDF  0826               	movf	??___ftmul,w
  7681  0DE0  05AF               	andwf	___ftmul@sign,f
  7682  0DE1  17A1               	bsf	___ftmul@f1+1,7
  7683  0DE2  17A4               	bsf	___ftmul@f2+1,7
  7684  0DE3  30FF               	movlw	255
  7685  0DE4  05A3               	andwf	___ftmul@f2,f
  7686  0DE5  30FF               	movlw	255
  7687  0DE6  05A4               	andwf	___ftmul@f2+1,f
  7688  0DE7  3000               	movlw	0
  7689  0DE8  05A5               	andwf	___ftmul@f2+2,f
  7690  0DE9  3000               	movlw	0
  7691  0DEA  00AB               	movwf	___ftmul@f3_as_product
  7692  0DEB  3000               	movlw	0
  7693  0DEC  00AC               	movwf	___ftmul@f3_as_product+1
  7694  0DED  3000               	movlw	0
  7695  0DEE  00AD               	movwf	___ftmul@f3_as_product+2
  7696  0DEF  3007               	movlw	7
  7697  0DF0  00A6               	movwf	??___ftmul
  7698  0DF1  0826               	movf	??___ftmul,w
  7699  0DF2  00AE               	movwf	___ftmul@cntr
  7700  0DF3                     l2141:	
  7701  0DF3  1C20               	btfss	___ftmul@f1,0
  7702  0DF4  2DFB               	goto	l2145
  7703  0DF5  0823               	movf	___ftmul@f2,w
  7704  0DF6  07AB               	addwf	___ftmul@f3_as_product,f
  7705  0DF7  0824               	movf	___ftmul@f2+1,w
  7706  0DF8  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  7707  0DF9  0825               	movf	___ftmul@f2+2,w
  7708  0DFA  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  7709  0DFB                     l2145:	
  7710  0DFB  3001               	movlw	1
  7711  0DFC                     u2235:	
  7712  0DFC  36A2               	lsrf	___ftmul@f1+2,f
  7713  0DFD  0CA1               	rrf	___ftmul@f1+1,f
  7714  0DFE  0CA0               	rrf	___ftmul@f1,f
  7715  0DFF  0B89               	decfsz	9,f
  7716  0E00  2DFC               	goto	u2235
  7717  0E01  3001               	movlw	1
  7718  0E02                     u2245:	
  7719  0E02  35A3               	lslf	___ftmul@f2,f
  7720  0E03  0DA4               	rlf	___ftmul@f2+1,f
  7721  0E04  0DA5               	rlf	___ftmul@f2+2,f
  7722  0E05  0B89               	decfsz	9,f
  7723  0E06  2E02               	goto	u2245
  7724  0E07  3001               	movlw	1
  7725  0E08  02AE               	subwf	___ftmul@cntr,f
  7726  0E09  1D03               	btfss	3,2
  7727  0E0A  2DF3               	goto	l2141
  7728  0E0B  3009               	movlw	9
  7729  0E0C  00A6               	movwf	??___ftmul
  7730  0E0D  0826               	movf	??___ftmul,w
  7731  0E0E  00AE               	movwf	___ftmul@cntr
  7732  0E0F                     l2153:	
  7733  0E0F  1C20               	btfss	___ftmul@f1,0
  7734  0E10  2E17               	goto	l2157
  7735  0E11  0823               	movf	___ftmul@f2,w
  7736  0E12  07AB               	addwf	___ftmul@f3_as_product,f
  7737  0E13  0824               	movf	___ftmul@f2+1,w
  7738  0E14  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  7739  0E15  0825               	movf	___ftmul@f2+2,w
  7740  0E16  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  7741  0E17                     l2157:	
  7742  0E17  3001               	movlw	1
  7743  0E18                     u2275:	
  7744  0E18  36A2               	lsrf	___ftmul@f1+2,f
  7745  0E19  0CA1               	rrf	___ftmul@f1+1,f
  7746  0E1A  0CA0               	rrf	___ftmul@f1,f
  7747  0E1B  0B89               	decfsz	9,f
  7748  0E1C  2E18               	goto	u2275
  7749  0E1D  3001               	movlw	1
  7750  0E1E                     u2285:	
  7751  0E1E  36AD               	lsrf	___ftmul@f3_as_product+2,f
  7752  0E1F  0CAC               	rrf	___ftmul@f3_as_product+1,f
  7753  0E20  0CAB               	rrf	___ftmul@f3_as_product,f
  7754  0E21  0B89               	decfsz	9,f
  7755  0E22  2E1E               	goto	u2285
  7756  0E23  3001               	movlw	1
  7757  0E24  02AE               	subwf	___ftmul@cntr,f
  7758  0E25  1D03               	btfss	3,2
  7759  0E26  2E0F               	goto	l2153
  7760  0E27  082B               	movf	___ftmul@f3_as_product,w
  7761  0E28  00F0               	movwf	___ftpack@arg
  7762  0E29  082C               	movf	___ftmul@f3_as_product+1,w
  7763  0E2A  00F1               	movwf	___ftpack@arg+1
  7764  0E2B  082D               	movf	___ftmul@f3_as_product+2,w
  7765  0E2C  00F2               	movwf	___ftpack@arg+2
  7766  0E2D  082A               	movf	___ftmul@exp,w
  7767  0E2E  00A6               	movwf	??___ftmul
  7768  0E2F  0826               	movf	??___ftmul,w
  7769  0E30  00F3               	movwf	___ftpack@exp
  7770  0E31  082F               	movf	___ftmul@sign,w
  7771  0E32  00A7               	movwf	??___ftmul+1
  7772  0E33  0827               	movf	??___ftmul+1,w
  7773  0E34  00F4               	movwf	___ftpack@sign
  7774  0E35  318A  2242         	fcall	___ftpack
  7775  0E37  0870               	movf	?___ftpack,w
  7776  0E38  0020               	movlb	0	; select bank0
  7777  0E39  00A0               	movwf	?___ftmul
  7778  0E3A  0871               	movf	?___ftpack+1,w
  7779  0E3B  00A1               	movwf	?___ftmul+1
  7780  0E3C  0872               	movf	?___ftpack+2,w
  7781  0E3D  00A2               	movwf	?___ftmul+2
  7782  0E3E  0008               	return
  7783  0E3F                     __end_of___ftmul:	
  7784                           
  7785                           	psect	text6
  7786  0855                     __ptext6:	
  7787 ;; *************** function ___ftge *****************
  7788 ;; Defined at:
  7789 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftge.c"
  7790 ;; Parameters:    Size  Location     Type
  7791 ;;  ff1             3    0[COMMON] float 
  7792 ;;  ff2             3    3[COMMON] float 
  7793 ;; Auto vars:     Size  Location     Type
  7794 ;;		None
  7795 ;; Return value:  Size  Location     Type
  7796 ;;		None               void
  7797 ;; Registers used:
  7798 ;;		wreg, status,2, status,0
  7799 ;; Tracked objects:
  7800 ;;		On entry : 0/0
  7801 ;;		On exit  : 0/0
  7802 ;;		Unchanged: 0/0
  7803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7804 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7806 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7807 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7808 ;;Total ram usage:        9 bytes
  7809 ;; Hardware stack levels used:    1
  7810 ;; This function calls:
  7811 ;;		Nothing
  7812 ;; This function is called by:
  7813 ;;		_log
  7814 ;; This function uses a non-reentrant model
  7815 ;;
  7816                           
  7817                           
  7818                           ;psect for function ___ftge
  7819  0855                     ___ftge:	
  7820                           
  7821                           ;incstack = 0
  7822                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  7823  0855  1FF2               	btfss	___ftge@ff1+2,7
  7824  0856  286B               	goto	l2213
  7825  0857  0970               	comf	___ftge@ff1,w
  7826  0858  00F6               	movwf	??___ftge
  7827  0859  0971               	comf	___ftge@ff1+1,w
  7828  085A  00F7               	movwf	??___ftge+1
  7829  085B  0972               	comf	___ftge@ff1+2,w
  7830  085C  00F8               	movwf	??___ftge+2
  7831  085D  0AF6               	incf	??___ftge,f
  7832  085E  1903               	skipnz
  7833  085F  0AF7               	incf	??___ftge+1,f
  7834  0860  1903               	skipnz
  7835  0861  0AF8               	incf	??___ftge+2,f
  7836  0862  3000               	movlw	0
  7837  0863  0776               	addwf	??___ftge,w
  7838  0864  00F0               	movwf	___ftge@ff1
  7839  0865  3000               	movlw	0
  7840  0866  3D77               	addwfc	??___ftge+1,w
  7841  0867  00F1               	movwf	___ftge@ff1+1
  7842  0868  3080               	movlw	128
  7843  0869  3D78               	addwfc	??___ftge+2,w
  7844  086A  00F2               	movwf	___ftge@ff1+2
  7845  086B                     l2213:	
  7846  086B  1FF5               	btfss	___ftge@ff2+2,7
  7847  086C  2881               	goto	l2217
  7848  086D  0973               	comf	___ftge@ff2,w
  7849  086E  00F6               	movwf	??___ftge
  7850  086F  0974               	comf	___ftge@ff2+1,w
  7851  0870  00F7               	movwf	??___ftge+1
  7852  0871  0975               	comf	___ftge@ff2+2,w
  7853  0872  00F8               	movwf	??___ftge+2
  7854  0873  0AF6               	incf	??___ftge,f
  7855  0874  1903               	skipnz
  7856  0875  0AF7               	incf	??___ftge+1,f
  7857  0876  1903               	skipnz
  7858  0877  0AF8               	incf	??___ftge+2,f
  7859  0878  3000               	movlw	0
  7860  0879  0776               	addwf	??___ftge,w
  7861  087A  00F3               	movwf	___ftge@ff2
  7862  087B  3000               	movlw	0
  7863  087C  3D77               	addwfc	??___ftge+1,w
  7864  087D  00F4               	movwf	___ftge@ff2+1
  7865  087E  3080               	movlw	128
  7866  087F  3D78               	addwfc	??___ftge+2,w
  7867  0880  00F5               	movwf	___ftge@ff2+2
  7868  0881                     l2217:	
  7869  0881  3080               	movlw	128
  7870  0882  06F2               	xorwf	___ftge@ff1+2,f
  7871  0883  3080               	movlw	128
  7872  0884  06F5               	xorwf	___ftge@ff2+2,f
  7873  0885  0875               	movf	___ftge@ff2+2,w
  7874  0886  0272               	subwf	___ftge@ff1+2,w
  7875  0887  1D03               	skipz
  7876  0888  0008               	return
  7877  0889  0874               	movf	___ftge@ff2+1,w
  7878  088A  0271               	subwf	___ftge@ff1+1,w
  7879  088B  1D03               	skipz
  7880  088C  0008               	return
  7881  088D  0873               	movf	___ftge@ff2,w
  7882  088E  0270               	subwf	___ftge@ff1,w
  7883  088F  0008               	return
  7884  0890                     __end_of___ftge:	
  7885                           
  7886                           	psect	text7
  7887  175A                     __ptext7:	
  7888 ;; *************** function ___awtoft *****************
  7889 ;; Defined at:
  7890 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awtoft.c"
  7891 ;; Parameters:    Size  Location     Type
  7892 ;;  c               2    8[COMMON] int 
  7893 ;; Auto vars:     Size  Location     Type
  7894 ;;  sign            1   13[COMMON] unsigned char 
  7895 ;; Return value:  Size  Location     Type
  7896 ;;                  3    8[COMMON] float 
  7897 ;; Registers used:
  7898 ;;		wreg, status,2, status,0, pclath, cstack
  7899 ;; Tracked objects:
  7900 ;;		On entry : 0/0
  7901 ;;		On exit  : 0/0
  7902 ;;		Unchanged: 0/0
  7903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7904 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7905 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7906 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7907 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7908 ;;Total ram usage:        6 bytes
  7909 ;; Hardware stack levels used:    1
  7910 ;; Hardware stack levels required when called:    1
  7911 ;; This function calls:
  7912 ;;		___ftpack
  7913 ;; This function is called by:
  7914 ;;		_tempCalc
  7915 ;;		_log
  7916 ;; This function uses a non-reentrant model
  7917 ;;
  7918                           
  7919                           
  7920                           ;psect for function ___awtoft
  7921  175A                     ___awtoft:	
  7922                           
  7923                           ;incstack = 0
  7924                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  7925  175A  01FD               	clrf	___awtoft@sign
  7926  175B  1FF9               	btfss	___awtoft@c+1,7
  7927  175C  2F64               	goto	l2205
  7928  175D  09F8               	comf	___awtoft@c,f
  7929  175E  09F9               	comf	___awtoft@c+1,f
  7930  175F  0AF8               	incf	___awtoft@c,f
  7931  1760  1903               	skipnz
  7932  1761  0AF9               	incf	___awtoft@c+1,f
  7933  1762  01FD               	clrf	___awtoft@sign
  7934  1763  0AFD               	incf	___awtoft@sign,f
  7935  1764                     l2205:	
  7936  1764  0878               	movf	___awtoft@c,w
  7937  1765  00F0               	movwf	___ftpack@arg
  7938  1766  0879               	movf	___awtoft@c+1,w
  7939  1767  00F1               	movwf	___ftpack@arg+1
  7940  1768  01F2               	clrf	___ftpack@arg+2
  7941  1769  308E               	movlw	142
  7942  176A  00FB               	movwf	??___awtoft
  7943  176B  087B               	movf	??___awtoft,w
  7944  176C  00F3               	movwf	___ftpack@exp
  7945  176D  087D               	movf	___awtoft@sign,w
  7946  176E  00FC               	movwf	??___awtoft+1
  7947  176F  087C               	movf	??___awtoft+1,w
  7948  1770  00F4               	movwf	___ftpack@sign
  7949  1771  318A  2242         	fcall	___ftpack
  7950  1773  0870               	movf	?___ftpack,w
  7951  1774  00F8               	movwf	?___awtoft
  7952  1775  0871               	movf	?___ftpack+1,w
  7953  1776  00F9               	movwf	?___awtoft+1
  7954  1777  0872               	movf	?___ftpack+2,w
  7955  1778  00FA               	movwf	?___awtoft+2
  7956  1779  0008               	return
  7957  177A                     __end_of___awtoft:	
  7958                           
  7959                           	psect	text8
  7960  0801                     __ptext8:	
  7961 ;; *************** function ___ftsub *****************
  7962 ;; Defined at:
  7963 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftsub.c"
  7964 ;; Parameters:    Size  Location     Type
  7965 ;;  f2              3   45[BANK0 ] float 
  7966 ;;  f1              3   48[BANK0 ] float 
  7967 ;; Auto vars:     Size  Location     Type
  7968 ;;		None
  7969 ;; Return value:  Size  Location     Type
  7970 ;;                  3   45[BANK0 ] float 
  7971 ;; Registers used:
  7972 ;;		wreg, status,2, status,0, pclath, cstack
  7973 ;; Tracked objects:
  7974 ;;		On entry : 0/0
  7975 ;;		On exit  : 0/0
  7976 ;;		Unchanged: 0/0
  7977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7978 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7981 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7982 ;;Total ram usage:        6 bytes
  7983 ;; Hardware stack levels used:    1
  7984 ;; Hardware stack levels required when called:    2
  7985 ;; This function calls:
  7986 ;;		___ftadd
  7987 ;; This function is called by:
  7988 ;;		_tempCalc
  7989 ;; This function uses a non-reentrant model
  7990 ;;
  7991                           
  7992                           
  7993                           ;psect for function ___ftsub
  7994  0801                     ___ftsub:	
  7995                           
  7996                           ;incstack = 0
  7997                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  7998  0801  0020               	movlb	0	; select bank0
  7999  0802  084F               	movf	___ftsub@f2+2,w
  8000  0803  044E               	iorwf	___ftsub@f2+1,w
  8001  0804  044D               	iorwf	___ftsub@f2,w
  8002  0805  1903               	skipnz
  8003  0806  2809               	goto	l2589
  8004  0807  3080               	movlw	128
  8005  0808  06CF               	xorwf	___ftsub@f2+2,f
  8006  0809                     l2589:	
  8007  0809  0850               	movf	___ftsub@f1,w
  8008  080A  00C0               	movwf	___ftadd@f1
  8009  080B  0851               	movf	___ftsub@f1+1,w
  8010  080C  00C1               	movwf	___ftadd@f1+1
  8011  080D  0852               	movf	___ftsub@f1+2,w
  8012  080E  00C2               	movwf	___ftadd@f1+2
  8013  080F  084D               	movf	___ftsub@f2,w
  8014  0810  00C3               	movwf	___ftadd@f2
  8015  0811  084E               	movf	___ftsub@f2+1,w
  8016  0812  00C4               	movwf	___ftadd@f2+1
  8017  0813  084F               	movf	___ftsub@f2+2,w
  8018  0814  00C5               	movwf	___ftadd@f2+2
  8019  0815  318F  270A         	fcall	___ftadd
  8020  0817  0020               	movlb	0	; select bank0
  8021  0818  0840               	movf	?___ftadd,w
  8022  0819  00CD               	movwf	?___ftsub
  8023  081A  0841               	movf	?___ftadd+1,w
  8024  081B  00CE               	movwf	?___ftsub+1
  8025  081C  0842               	movf	?___ftadd+2,w
  8026  081D  00CF               	movwf	?___ftsub+2
  8027  081E  0008               	return
  8028  081F                     __end_of___ftsub:	
  8029                           
  8030                           	psect	text9
  8031  0F0A                     __ptext9:	
  8032 ;; *************** function ___ftadd *****************
  8033 ;; Defined at:
  8034 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftadd.c"
  8035 ;; Parameters:    Size  Location     Type
  8036 ;;  f1              3   32[BANK0 ] float 
  8037 ;;  f2              3   35[BANK0 ] float 
  8038 ;; Auto vars:     Size  Location     Type
  8039 ;;  exp1            1   44[BANK0 ] unsigned char 
  8040 ;;  exp2            1   43[BANK0 ] unsigned char 
  8041 ;;  sign            1   42[BANK0 ] unsigned char 
  8042 ;; Return value:  Size  Location     Type
  8043 ;;                  3   32[BANK0 ] float 
  8044 ;; Registers used:
  8045 ;;		wreg, status,2, status,0, pclath, cstack
  8046 ;; Tracked objects:
  8047 ;;		On entry : 0/0
  8048 ;;		On exit  : 0/0
  8049 ;;		Unchanged: 0/0
  8050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8051 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8052 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8053 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8054 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8055 ;;Total ram usage:       13 bytes
  8056 ;; Hardware stack levels used:    1
  8057 ;; Hardware stack levels required when called:    1
  8058 ;; This function calls:
  8059 ;;		___ftpack
  8060 ;; This function is called by:
  8061 ;;		_tempCalc
  8062 ;;		_main
  8063 ;;		___ftsub
  8064 ;;		_log
  8065 ;;		_eval_poly
  8066 ;; This function uses a non-reentrant model
  8067 ;;
  8068                           
  8069                           
  8070                           ;psect for function ___ftadd
  8071  0F0A                     ___ftadd:	
  8072                           
  8073                           ;incstack = 0
  8074                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  8075  0F0A  0020               	movlb	0	; select bank0
  8076  0F0B  0840               	movf	___ftadd@f1,w
  8077  0F0C  00C6               	movwf	??___ftadd
  8078  0F0D  0841               	movf	___ftadd@f1+1,w
  8079  0F0E  00C7               	movwf	??___ftadd+1
  8080  0F0F  0842               	movf	___ftadd@f1+2,w
  8081  0F10  00C8               	movwf	??___ftadd+2
  8082  0F11  1003               	clrc
  8083  0F12  0D47               	rlf	??___ftadd+1,w
  8084  0F13  0D48               	rlf	??___ftadd+2,w
  8085  0F14  00C9               	movwf	??___ftadd+3
  8086  0F15  0849               	movf	??___ftadd+3,w
  8087  0F16  00CC               	movwf	___ftadd@exp1
  8088  0F17  0843               	movf	___ftadd@f2,w
  8089  0F18  00C6               	movwf	??___ftadd
  8090  0F19  0844               	movf	___ftadd@f2+1,w
  8091  0F1A  00C7               	movwf	??___ftadd+1
  8092  0F1B  0845               	movf	___ftadd@f2+2,w
  8093  0F1C  00C8               	movwf	??___ftadd+2
  8094  0F1D  1003               	clrc
  8095  0F1E  0D47               	rlf	??___ftadd+1,w
  8096  0F1F  0D48               	rlf	??___ftadd+2,w
  8097  0F20  00C9               	movwf	??___ftadd+3
  8098  0F21  0849               	movf	??___ftadd+3,w
  8099  0F22  00CB               	movwf	___ftadd@exp2
  8100  0F23  084C               	movf	___ftadd@exp1,w
  8101  0F24  1903               	btfsc	3,2
  8102  0F25  2F32               	goto	l2053
  8103  0F26  084B               	movf	___ftadd@exp2,w
  8104  0F27  024C               	subwf	___ftadd@exp1,w
  8105  0F28  1803               	skipnc
  8106  0F29  2F39               	goto	l2057
  8107  0F2A  034C               	decf	___ftadd@exp1,w
  8108  0F2B  3AFF               	xorlw	255
  8109  0F2C  074B               	addwf	___ftadd@exp2,w
  8110  0F2D  00C6               	movwf	??___ftadd
  8111  0F2E  3019               	movlw	25
  8112  0F2F  0246               	subwf	??___ftadd,w
  8113  0F30  1C03               	skipc
  8114  0F31  2F39               	goto	l2057
  8115  0F32                     l2053:	
  8116  0F32  0843               	movf	___ftadd@f2,w
  8117  0F33  00C0               	movwf	?___ftadd
  8118  0F34  0844               	movf	___ftadd@f2+1,w
  8119  0F35  00C1               	movwf	?___ftadd+1
  8120  0F36  0845               	movf	___ftadd@f2+2,w
  8121  0F37  00C2               	movwf	?___ftadd+2
  8122  0F38  0008               	return
  8123  0F39                     l2057:	
  8124  0F39  084B               	movf	___ftadd@exp2,w
  8125  0F3A  1903               	btfsc	3,2
  8126  0F3B  0008               	return
  8127  0F3C  084C               	movf	___ftadd@exp1,w
  8128  0F3D  024B               	subwf	___ftadd@exp2,w
  8129  0F3E  1803               	skipnc
  8130  0F3F  2F48               	goto	l2063
  8131  0F40  034B               	decf	___ftadd@exp2,w
  8132  0F41  3AFF               	xorlw	255
  8133  0F42  074C               	addwf	___ftadd@exp1,w
  8134  0F43  00C6               	movwf	??___ftadd
  8135  0F44  3019               	movlw	25
  8136  0F45  0246               	subwf	??___ftadd,w
  8137  0F46  1803               	btfsc	3,0
  8138  0F47  0008               	return
  8139  0F48                     l2063:	
  8140  0F48  3006               	movlw	6
  8141  0F49  00C6               	movwf	??___ftadd
  8142  0F4A  0846               	movf	??___ftadd,w
  8143  0F4B  00CA               	movwf	___ftadd@sign
  8144  0F4C  1BC2               	btfsc	___ftadd@f1+2,7
  8145  0F4D  17CA               	bsf	___ftadd@sign,7
  8146  0F4E  1BC5               	btfsc	___ftadd@f2+2,7
  8147  0F4F  174A               	bsf	___ftadd@sign,6
  8148  0F50  17C1               	bsf	___ftadd@f1+1,7
  8149  0F51  30FF               	movlw	255
  8150  0F52  05C0               	andwf	___ftadd@f1,f
  8151  0F53  30FF               	movlw	255
  8152  0F54  05C1               	andwf	___ftadd@f1+1,f
  8153  0F55  3000               	movlw	0
  8154  0F56  05C2               	andwf	___ftadd@f1+2,f
  8155  0F57  17C4               	bsf	___ftadd@f2+1,7
  8156  0F58  30FF               	movlw	255
  8157  0F59  05C3               	andwf	___ftadd@f2,f
  8158  0F5A  30FF               	movlw	255
  8159  0F5B  05C4               	andwf	___ftadd@f2+1,f
  8160  0F5C  3000               	movlw	0
  8161  0F5D  05C5               	andwf	___ftadd@f2+2,f
  8162  0F5E  084B               	movf	___ftadd@exp2,w
  8163  0F5F  024C               	subwf	___ftadd@exp1,w
  8164  0F60  1803               	skipnc
  8165  0F61  2F84               	goto	l2085
  8166  0F62                     l2075:	
  8167  0F62  3001               	movlw	1
  8168  0F63                     u2045:	
  8169  0F63  35C3               	lslf	___ftadd@f2,f
  8170  0F64  0DC4               	rlf	___ftadd@f2+1,f
  8171  0F65  0DC5               	rlf	___ftadd@f2+2,f
  8172  0F66  0B89               	decfsz	9,f
  8173  0F67  2F63               	goto	u2045
  8174  0F68  3001               	movlw	1
  8175  0F69  02CB               	subwf	___ftadd@exp2,f
  8176  0F6A  084B               	movf	___ftadd@exp2,w
  8177  0F6B  064C               	xorwf	___ftadd@exp1,w
  8178  0F6C  1903               	skipnz
  8179  0F6D  2F7F               	goto	l2083
  8180  0F6E  3001               	movlw	1
  8181  0F6F  02CA               	subwf	___ftadd@sign,f
  8182  0F70  084A               	movf	___ftadd@sign,w
  8183  0F71  3907               	andlw	7
  8184  0F72  1903               	btfsc	3,2
  8185  0F73  2F7F               	goto	l2083
  8186  0F74  2F62               	goto	l2075
  8187  0F75                     l2081:	
  8188  0F75  3001               	movlw	1
  8189  0F76                     u2075:	
  8190  0F76  36C2               	lsrf	___ftadd@f1+2,f
  8191  0F77  0CC1               	rrf	___ftadd@f1+1,f
  8192  0F78  0CC0               	rrf	___ftadd@f1,f
  8193  0F79  0B89               	decfsz	9,f
  8194  0F7A  2F76               	goto	u2075
  8195  0F7B  3001               	movlw	1
  8196  0F7C  00C6               	movwf	??___ftadd
  8197  0F7D  0846               	movf	??___ftadd,w
  8198  0F7E  07CC               	addwf	___ftadd@exp1,f
  8199  0F7F                     l2083:	
  8200  0F7F  084C               	movf	___ftadd@exp1,w
  8201  0F80  064B               	xorwf	___ftadd@exp2,w
  8202  0F81  1903               	btfsc	3,2
  8203  0F82  2FA9               	goto	l593
  8204  0F83  2F75               	goto	l2081
  8205  0F84                     l2085:	
  8206  0F84  084C               	movf	___ftadd@exp1,w
  8207  0F85  024B               	subwf	___ftadd@exp2,w
  8208  0F86  1803               	skipnc
  8209  0F87  2FA9               	goto	l593
  8210  0F88                     l2087:	
  8211  0F88  3001               	movlw	1
  8212  0F89                     u2105:	
  8213  0F89  35C0               	lslf	___ftadd@f1,f
  8214  0F8A  0DC1               	rlf	___ftadd@f1+1,f
  8215  0F8B  0DC2               	rlf	___ftadd@f1+2,f
  8216  0F8C  0B89               	decfsz	9,f
  8217  0F8D  2F89               	goto	u2105
  8218  0F8E  3001               	movlw	1
  8219  0F8F  02CC               	subwf	___ftadd@exp1,f
  8220  0F90  084B               	movf	___ftadd@exp2,w
  8221  0F91  064C               	xorwf	___ftadd@exp1,w
  8222  0F92  1903               	skipnz
  8223  0F93  2FA5               	goto	l2095
  8224  0F94  3001               	movlw	1
  8225  0F95  02CA               	subwf	___ftadd@sign,f
  8226  0F96  084A               	movf	___ftadd@sign,w
  8227  0F97  3907               	andlw	7
  8228  0F98  1903               	btfsc	3,2
  8229  0F99  2FA5               	goto	l2095
  8230  0F9A  2F88               	goto	l2087
  8231  0F9B                     l2093:	
  8232  0F9B  3001               	movlw	1
  8233  0F9C                     u2135:	
  8234  0F9C  36C5               	lsrf	___ftadd@f2+2,f
  8235  0F9D  0CC4               	rrf	___ftadd@f2+1,f
  8236  0F9E  0CC3               	rrf	___ftadd@f2,f
  8237  0F9F  0B89               	decfsz	9,f
  8238  0FA0  2F9C               	goto	u2135
  8239  0FA1  3001               	movlw	1
  8240  0FA2  00C6               	movwf	??___ftadd
  8241  0FA3  0846               	movf	??___ftadd,w
  8242  0FA4  07CB               	addwf	___ftadd@exp2,f
  8243  0FA5                     l2095:	
  8244  0FA5  084C               	movf	___ftadd@exp1,w
  8245  0FA6  064B               	xorwf	___ftadd@exp2,w
  8246  0FA7  1D03               	skipz
  8247  0FA8  2F9B               	goto	l2093
  8248  0FA9                     l593:	
  8249  0FA9  1FCA               	btfss	___ftadd@sign,7
  8250  0FAA  2FBB               	goto	l2099
  8251  0FAB  30FF               	movlw	255
  8252  0FAC  06C0               	xorwf	___ftadd@f1,f
  8253  0FAD  30FF               	movlw	255
  8254  0FAE  06C1               	xorwf	___ftadd@f1+1,f
  8255  0FAF  30FF               	movlw	255
  8256  0FB0  06C2               	xorwf	___ftadd@f1+2,f
  8257  0FB1  3001               	movlw	1
  8258  0FB2  07C0               	addwf	___ftadd@f1,f
  8259  0FB3  3000               	movlw	0
  8260  0FB4  1803               	skipnc
  8261  0FB5  3001               	movlw	1
  8262  0FB6  07C1               	addwf	___ftadd@f1+1,f
  8263  0FB7  3000               	movlw	0
  8264  0FB8  1803               	skipnc
  8265  0FB9  3001               	movlw	1
  8266  0FBA  07C2               	addwf	___ftadd@f1+2,f
  8267  0FBB                     l2099:	
  8268  0FBB  1F4A               	btfss	___ftadd@sign,6
  8269  0FBC  2FCD               	goto	l2103
  8270  0FBD  30FF               	movlw	255
  8271  0FBE  06C3               	xorwf	___ftadd@f2,f
  8272  0FBF  30FF               	movlw	255
  8273  0FC0  06C4               	xorwf	___ftadd@f2+1,f
  8274  0FC1  30FF               	movlw	255
  8275  0FC2  06C5               	xorwf	___ftadd@f2+2,f
  8276  0FC3  3001               	movlw	1
  8277  0FC4  07C3               	addwf	___ftadd@f2,f
  8278  0FC5  3000               	movlw	0
  8279  0FC6  1803               	skipnc
  8280  0FC7  3001               	movlw	1
  8281  0FC8  07C4               	addwf	___ftadd@f2+1,f
  8282  0FC9  3000               	movlw	0
  8283  0FCA  1803               	skipnc
  8284  0FCB  3001               	movlw	1
  8285  0FCC  07C5               	addwf	___ftadd@f2+2,f
  8286  0FCD                     l2103:	
  8287  0FCD  01CA               	clrf	___ftadd@sign
  8288  0FCE  0840               	movf	___ftadd@f1,w
  8289  0FCF  07C3               	addwf	___ftadd@f2,f
  8290  0FD0  0841               	movf	___ftadd@f1+1,w
  8291  0FD1  3DC4               	addwfc	___ftadd@f2+1,f
  8292  0FD2  0842               	movf	___ftadd@f1+2,w
  8293  0FD3  3DC5               	addwfc	___ftadd@f2+2,f
  8294  0FD4  1FC5               	btfss	___ftadd@f2+2,7
  8295  0FD5  2FE8               	goto	l2113
  8296  0FD6  30FF               	movlw	255
  8297  0FD7  06C3               	xorwf	___ftadd@f2,f
  8298  0FD8  30FF               	movlw	255
  8299  0FD9  06C4               	xorwf	___ftadd@f2+1,f
  8300  0FDA  30FF               	movlw	255
  8301  0FDB  06C5               	xorwf	___ftadd@f2+2,f
  8302  0FDC  3001               	movlw	1
  8303  0FDD  07C3               	addwf	___ftadd@f2,f
  8304  0FDE  3000               	movlw	0
  8305  0FDF  1803               	skipnc
  8306  0FE0  3001               	movlw	1
  8307  0FE1  07C4               	addwf	___ftadd@f2+1,f
  8308  0FE2  3000               	movlw	0
  8309  0FE3  1803               	skipnc
  8310  0FE4  3001               	movlw	1
  8311  0FE5  07C5               	addwf	___ftadd@f2+2,f
  8312  0FE6  01CA               	clrf	___ftadd@sign
  8313  0FE7  0ACA               	incf	___ftadd@sign,f
  8314  0FE8                     l2113:	
  8315  0FE8  0843               	movf	___ftadd@f2,w
  8316  0FE9  00F0               	movwf	___ftpack@arg
  8317  0FEA  0844               	movf	___ftadd@f2+1,w
  8318  0FEB  00F1               	movwf	___ftpack@arg+1
  8319  0FEC  0845               	movf	___ftadd@f2+2,w
  8320  0FED  00F2               	movwf	___ftpack@arg+2
  8321  0FEE  084C               	movf	___ftadd@exp1,w
  8322  0FEF  00C6               	movwf	??___ftadd
  8323  0FF0  0846               	movf	??___ftadd,w
  8324  0FF1  00F3               	movwf	___ftpack@exp
  8325  0FF2  084A               	movf	___ftadd@sign,w
  8326  0FF3  00C7               	movwf	??___ftadd+1
  8327  0FF4  0847               	movf	??___ftadd+1,w
  8328  0FF5  00F4               	movwf	___ftpack@sign
  8329  0FF6  318A  2242         	fcall	___ftpack
  8330  0FF8  0870               	movf	?___ftpack,w
  8331  0FF9  0020               	movlb	0	; select bank0
  8332  0FFA  00C0               	movwf	?___ftadd
  8333  0FFB  0871               	movf	?___ftpack+1,w
  8334  0FFC  00C1               	movwf	?___ftadd+1
  8335  0FFD  0872               	movf	?___ftpack+2,w
  8336  0FFE  00C2               	movwf	?___ftadd+2
  8337  0FFF  0008               	return
  8338  1000                     __end_of___ftadd:	
  8339                           
  8340                           	psect	text10
  8341  0C35                     __ptext10:	
  8342 ;; *************** function ___ftdiv *****************
  8343 ;; Defined at:
  8344 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftdiv.c"
  8345 ;; Parameters:    Size  Location     Type
  8346 ;;  f2              3   16[BANK0 ] float 
  8347 ;;  f1              3   19[BANK0 ] float 
  8348 ;; Auto vars:     Size  Location     Type
  8349 ;;  f3              3   27[BANK0 ] float 
  8350 ;;  sign            1   31[BANK0 ] unsigned char 
  8351 ;;  exp             1   30[BANK0 ] unsigned char 
  8352 ;;  cntr            1   26[BANK0 ] unsigned char 
  8353 ;; Return value:  Size  Location     Type
  8354 ;;                  3   16[BANK0 ] float 
  8355 ;; Registers used:
  8356 ;;		wreg, status,2, status,0, pclath, cstack
  8357 ;; Tracked objects:
  8358 ;;		On entry : 0/0
  8359 ;;		On exit  : 0/0
  8360 ;;		Unchanged: 0/0
  8361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8362 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8363 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8364 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8365 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8366 ;;Total ram usage:       16 bytes
  8367 ;; Hardware stack levels used:    1
  8368 ;; Hardware stack levels required when called:    1
  8369 ;; This function calls:
  8370 ;;		___ftpack
  8371 ;; This function is called by:
  8372 ;;		_tempCalc
  8373 ;;		_main
  8374 ;; This function uses a non-reentrant model
  8375 ;;
  8376                           
  8377                           
  8378                           ;psect for function ___ftdiv
  8379  0C35                     ___ftdiv:	
  8380                           
  8381                           ;incstack = 0
  8382                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  8383  0C35  0020               	movlb	0	; select bank0
  8384  0C36  0833               	movf	___ftdiv@f1,w
  8385  0C37  00B6               	movwf	??___ftdiv
  8386  0C38  0834               	movf	___ftdiv@f1+1,w
  8387  0C39  00B7               	movwf	??___ftdiv+1
  8388  0C3A  0835               	movf	___ftdiv@f1+2,w
  8389  0C3B  00B8               	movwf	??___ftdiv+2
  8390  0C3C  1003               	clrc
  8391  0C3D  0D37               	rlf	??___ftdiv+1,w
  8392  0C3E  0D38               	rlf	??___ftdiv+2,w
  8393  0C3F  00B9               	movwf	??___ftdiv+3
  8394  0C40  0839               	movf	??___ftdiv+3,w
  8395  0C41  00BE               	movwf	___ftdiv@exp
  8396  0C42  083E               	movf	___ftdiv@exp,w
  8397  0C43  1D03               	btfss	3,2
  8398  0C44  2C4C               	goto	l2549
  8399  0C45  3000               	movlw	0
  8400  0C46  00B0               	movwf	?___ftdiv
  8401  0C47  3000               	movlw	0
  8402  0C48  00B1               	movwf	?___ftdiv+1
  8403  0C49  3000               	movlw	0
  8404  0C4A  00B2               	movwf	?___ftdiv+2
  8405  0C4B  0008               	return
  8406  0C4C                     l2549:	
  8407  0C4C  0830               	movf	___ftdiv@f2,w
  8408  0C4D  00B6               	movwf	??___ftdiv
  8409  0C4E  0831               	movf	___ftdiv@f2+1,w
  8410  0C4F  00B7               	movwf	??___ftdiv+1
  8411  0C50  0832               	movf	___ftdiv@f2+2,w
  8412  0C51  00B8               	movwf	??___ftdiv+2
  8413  0C52  1003               	clrc
  8414  0C53  0D37               	rlf	??___ftdiv+1,w
  8415  0C54  0D38               	rlf	??___ftdiv+2,w
  8416  0C55  00B9               	movwf	??___ftdiv+3
  8417  0C56  0839               	movf	??___ftdiv+3,w
  8418  0C57  00BF               	movwf	___ftdiv@sign
  8419  0C58  083F               	movf	___ftdiv@sign,w
  8420  0C59  1D03               	btfss	3,2
  8421  0C5A  2C62               	goto	l2555
  8422  0C5B  3000               	movlw	0
  8423  0C5C  00B0               	movwf	?___ftdiv
  8424  0C5D  3000               	movlw	0
  8425  0C5E  00B1               	movwf	?___ftdiv+1
  8426  0C5F  3000               	movlw	0
  8427  0C60  00B2               	movwf	?___ftdiv+2
  8428  0C61  0008               	return
  8429  0C62                     l2555:	
  8430  0C62  3000               	movlw	0
  8431  0C63  00BB               	movwf	___ftdiv@f3
  8432  0C64  3000               	movlw	0
  8433  0C65  00BC               	movwf	___ftdiv@f3+1
  8434  0C66  3000               	movlw	0
  8435  0C67  00BD               	movwf	___ftdiv@f3+2
  8436  0C68  3089               	movlw	137
  8437  0C69  073F               	addwf	___ftdiv@sign,w
  8438  0C6A  00B6               	movwf	??___ftdiv
  8439  0C6B  0836               	movf	??___ftdiv,w
  8440  0C6C  02BE               	subwf	___ftdiv@exp,f
  8441  0C6D  0833               	movf	___ftdiv@f1,w
  8442  0C6E  00B6               	movwf	??___ftdiv
  8443  0C6F  0834               	movf	___ftdiv@f1+1,w
  8444  0C70  00B7               	movwf	??___ftdiv+1
  8445  0C71  0835               	movf	___ftdiv@f1+2,w
  8446  0C72  00B8               	movwf	??___ftdiv+2
  8447  0C73  3010               	movlw	16
  8448  0C74                     u2755:	
  8449  0C74  36B8               	lsrf	??___ftdiv+2,f
  8450  0C75  0CB7               	rrf	??___ftdiv+1,f
  8451  0C76  0CB6               	rrf	??___ftdiv,f
  8452  0C77  0B89               	decfsz	9,f
  8453  0C78  2C74               	goto	u2755
  8454  0C79  0836               	movf	??___ftdiv,w
  8455  0C7A  00B9               	movwf	??___ftdiv+3
  8456  0C7B  0839               	movf	??___ftdiv+3,w
  8457  0C7C  00BF               	movwf	___ftdiv@sign
  8458  0C7D  0830               	movf	___ftdiv@f2,w
  8459  0C7E  00B6               	movwf	??___ftdiv
  8460  0C7F  0831               	movf	___ftdiv@f2+1,w
  8461  0C80  00B7               	movwf	??___ftdiv+1
  8462  0C81  0832               	movf	___ftdiv@f2+2,w
  8463  0C82  00B8               	movwf	??___ftdiv+2
  8464  0C83  3010               	movlw	16
  8465  0C84                     u2765:	
  8466  0C84  36B8               	lsrf	??___ftdiv+2,f
  8467  0C85  0CB7               	rrf	??___ftdiv+1,f
  8468  0C86  0CB6               	rrf	??___ftdiv,f
  8469  0C87  0B89               	decfsz	9,f
  8470  0C88  2C84               	goto	u2765
  8471  0C89  0836               	movf	??___ftdiv,w
  8472  0C8A  00B9               	movwf	??___ftdiv+3
  8473  0C8B  0839               	movf	??___ftdiv+3,w
  8474  0C8C  06BF               	xorwf	___ftdiv@sign,f
  8475  0C8D  3080               	movlw	128
  8476  0C8E  00B6               	movwf	??___ftdiv
  8477  0C8F  0836               	movf	??___ftdiv,w
  8478  0C90  05BF               	andwf	___ftdiv@sign,f
  8479  0C91  17B4               	bsf	___ftdiv@f1+1,7
  8480  0C92  30FF               	movlw	255
  8481  0C93  05B3               	andwf	___ftdiv@f1,f
  8482  0C94  30FF               	movlw	255
  8483  0C95  05B4               	andwf	___ftdiv@f1+1,f
  8484  0C96  3000               	movlw	0
  8485  0C97  05B5               	andwf	___ftdiv@f1+2,f
  8486  0C98  17B1               	bsf	___ftdiv@f2+1,7
  8487  0C99  30FF               	movlw	255
  8488  0C9A  05B0               	andwf	___ftdiv@f2,f
  8489  0C9B  30FF               	movlw	255
  8490  0C9C  05B1               	andwf	___ftdiv@f2+1,f
  8491  0C9D  3000               	movlw	0
  8492  0C9E  05B2               	andwf	___ftdiv@f2+2,f
  8493  0C9F  3018               	movlw	24
  8494  0CA0  00B6               	movwf	??___ftdiv
  8495  0CA1  0836               	movf	??___ftdiv,w
  8496  0CA2  00BA               	movwf	___ftdiv@cntr
  8497  0CA3                     l2569:	
  8498  0CA3  3001               	movlw	1
  8499  0CA4                     u2775:	
  8500  0CA4  35BB               	lslf	___ftdiv@f3,f
  8501  0CA5  0DBC               	rlf	___ftdiv@f3+1,f
  8502  0CA6  0DBD               	rlf	___ftdiv@f3+2,f
  8503  0CA7  0B89               	decfsz	9,f
  8504  0CA8  2CA4               	goto	u2775
  8505  0CA9  0832               	movf	___ftdiv@f2+2,w
  8506  0CAA  0235               	subwf	___ftdiv@f1+2,w
  8507  0CAB  1D03               	skipz
  8508  0CAC  2CB3               	goto	u2785
  8509  0CAD  0831               	movf	___ftdiv@f2+1,w
  8510  0CAE  0234               	subwf	___ftdiv@f1+1,w
  8511  0CAF  1D03               	skipz
  8512  0CB0  2CB3               	goto	u2785
  8513  0CB1  0830               	movf	___ftdiv@f2,w
  8514  0CB2  0233               	subwf	___ftdiv@f1,w
  8515  0CB3                     u2785:	
  8516  0CB3  1C03               	skipc
  8517  0CB4  2CBC               	goto	l2577
  8518  0CB5  0830               	movf	___ftdiv@f2,w
  8519  0CB6  02B3               	subwf	___ftdiv@f1,f
  8520  0CB7  0831               	movf	___ftdiv@f2+1,w
  8521  0CB8  3BB4               	subwfb	___ftdiv@f1+1,f
  8522  0CB9  0832               	movf	___ftdiv@f2+2,w
  8523  0CBA  3BB5               	subwfb	___ftdiv@f1+2,f
  8524  0CBB  143B               	bsf	___ftdiv@f3,0
  8525  0CBC                     l2577:	
  8526  0CBC  3001               	movlw	1
  8527  0CBD                     u2795:	
  8528  0CBD  35B3               	lslf	___ftdiv@f1,f
  8529  0CBE  0DB4               	rlf	___ftdiv@f1+1,f
  8530  0CBF  0DB5               	rlf	___ftdiv@f1+2,f
  8531  0CC0  0B89               	decfsz	9,f
  8532  0CC1  2CBD               	goto	u2795
  8533  0CC2  3001               	movlw	1
  8534  0CC3  02BA               	subwf	___ftdiv@cntr,f
  8535  0CC4  1D03               	btfss	3,2
  8536  0CC5  2CA3               	goto	l2569
  8537  0CC6  083B               	movf	___ftdiv@f3,w
  8538  0CC7  00F0               	movwf	___ftpack@arg
  8539  0CC8  083C               	movf	___ftdiv@f3+1,w
  8540  0CC9  00F1               	movwf	___ftpack@arg+1
  8541  0CCA  083D               	movf	___ftdiv@f3+2,w
  8542  0CCB  00F2               	movwf	___ftpack@arg+2
  8543  0CCC  083E               	movf	___ftdiv@exp,w
  8544  0CCD  00B6               	movwf	??___ftdiv
  8545  0CCE  0836               	movf	??___ftdiv,w
  8546  0CCF  00F3               	movwf	___ftpack@exp
  8547  0CD0  083F               	movf	___ftdiv@sign,w
  8548  0CD1  00B7               	movwf	??___ftdiv+1
  8549  0CD2  0837               	movf	??___ftdiv+1,w
  8550  0CD3  00F4               	movwf	___ftpack@sign
  8551  0CD4  318A  2242         	fcall	___ftpack
  8552  0CD6  0870               	movf	?___ftpack,w
  8553  0CD7  0020               	movlb	0	; select bank0
  8554  0CD8  00B0               	movwf	?___ftdiv
  8555  0CD9  0871               	movf	?___ftpack+1,w
  8556  0CDA  00B1               	movwf	?___ftdiv+1
  8557  0CDB  0872               	movf	?___ftpack+2,w
  8558  0CDC  00B2               	movwf	?___ftdiv+2
  8559  0CDD  0008               	return
  8560  0CDE                     __end_of___ftdiv:	
  8561                           
  8562                           	psect	text11
  8563  0A42                     __ptext11:	
  8564 ;; *************** function ___ftpack *****************
  8565 ;; Defined at:
  8566 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\float.c"
  8567 ;; Parameters:    Size  Location     Type
  8568 ;;  arg             3    0[COMMON] unsigned um
  8569 ;;  exp             1    3[COMMON] unsigned char 
  8570 ;;  sign            1    4[COMMON] unsigned char 
  8571 ;; Auto vars:     Size  Location     Type
  8572 ;;		None
  8573 ;; Return value:  Size  Location     Type
  8574 ;;                  3    0[COMMON] float 
  8575 ;; Registers used:
  8576 ;;		wreg, status,2, status,0
  8577 ;; Tracked objects:
  8578 ;;		On entry : 0/0
  8579 ;;		On exit  : 0/0
  8580 ;;		Unchanged: 0/0
  8581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8582 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8584 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8585 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8586 ;;Total ram usage:        8 bytes
  8587 ;; Hardware stack levels used:    1
  8588 ;; This function calls:
  8589 ;;		Nothing
  8590 ;; This function is called by:
  8591 ;;		___awtoft
  8592 ;;		___ftadd
  8593 ;;		___ftdiv
  8594 ;;		___ftmul
  8595 ;; This function uses a non-reentrant model
  8596 ;;
  8597                           
  8598                           
  8599                           ;psect for function ___ftpack
  8600  0A42                     ___ftpack:	
  8601                           
  8602                           ;incstack = 0
  8603                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  8604  0A42  0873               	movf	___ftpack@exp,w
  8605  0A43  1903               	btfsc	3,2
  8606  0A44  2A4A               	goto	l1989
  8607  0A45  0872               	movf	___ftpack@arg+2,w
  8608  0A46  0471               	iorwf	___ftpack@arg+1,w
  8609  0A47  0470               	iorwf	___ftpack@arg,w
  8610  0A48  1D03               	skipz
  8611  0A49  2A5B               	goto	l1995
  8612  0A4A                     l1989:	
  8613  0A4A  3000               	movlw	0
  8614  0A4B  00F0               	movwf	?___ftpack
  8615  0A4C  3000               	movlw	0
  8616  0A4D  00F1               	movwf	?___ftpack+1
  8617  0A4E  3000               	movlw	0
  8618  0A4F  00F2               	movwf	?___ftpack+2
  8619  0A50  0008               	return
  8620  0A51                     l1993:	
  8621  0A51  3001               	movlw	1
  8622  0A52  00F5               	movwf	??___ftpack
  8623  0A53  0875               	movf	??___ftpack,w
  8624  0A54  07F3               	addwf	___ftpack@exp,f
  8625  0A55  3001               	movlw	1
  8626  0A56                     u1775:	
  8627  0A56  36F2               	lsrf	___ftpack@arg+2,f
  8628  0A57  0CF1               	rrf	___ftpack@arg+1,f
  8629  0A58  0CF0               	rrf	___ftpack@arg,f
  8630  0A59  0B89               	decfsz	9,f
  8631  0A5A  2A56               	goto	u1775
  8632  0A5B                     l1995:	
  8633  0A5B  30FE               	movlw	254
  8634  0A5C  0572               	andwf	___ftpack@arg+2,w
  8635  0A5D  1903               	btfsc	3,2
  8636  0A5E  2A74               	goto	l562
  8637  0A5F  2A51               	goto	l1993
  8638  0A60                     l1997:	
  8639  0A60  3001               	movlw	1
  8640  0A61  00F5               	movwf	??___ftpack
  8641  0A62  0875               	movf	??___ftpack,w
  8642  0A63  07F3               	addwf	___ftpack@exp,f
  8643  0A64  3001               	movlw	1
  8644  0A65  07F0               	addwf	___ftpack@arg,f
  8645  0A66  3000               	movlw	0
  8646  0A67  1803               	skipnc
  8647  0A68  3001               	movlw	1
  8648  0A69  07F1               	addwf	___ftpack@arg+1,f
  8649  0A6A  3000               	movlw	0
  8650  0A6B  1803               	skipnc
  8651  0A6C  3001               	movlw	1
  8652  0A6D  07F2               	addwf	___ftpack@arg+2,f
  8653  0A6E  3001               	movlw	1
  8654  0A6F                     u1795:	
  8655  0A6F  36F2               	lsrf	___ftpack@arg+2,f
  8656  0A70  0CF1               	rrf	___ftpack@arg+1,f
  8657  0A71  0CF0               	rrf	___ftpack@arg,f
  8658  0A72  0B89               	decfsz	9,f
  8659  0A73  2A6F               	goto	u1795
  8660  0A74                     l562:	
  8661  0A74  30FF               	movlw	255
  8662  0A75  0572               	andwf	___ftpack@arg+2,w
  8663  0A76  1903               	btfsc	3,2
  8664  0A77  2A81               	goto	l2005
  8665  0A78  2A60               	goto	l1997
  8666  0A79                     l2003:	
  8667  0A79  3001               	movlw	1
  8668  0A7A  02F3               	subwf	___ftpack@exp,f
  8669  0A7B  3001               	movlw	1
  8670  0A7C                     u1815:	
  8671  0A7C  35F0               	lslf	___ftpack@arg,f
  8672  0A7D  0DF1               	rlf	___ftpack@arg+1,f
  8673  0A7E  0DF2               	rlf	___ftpack@arg+2,f
  8674  0A7F  0B89               	decfsz	9,f
  8675  0A80  2A7C               	goto	u1815
  8676  0A81                     l2005:	
  8677  0A81  1BF1               	btfsc	___ftpack@arg+1,7
  8678  0A82  2A87               	goto	l569
  8679  0A83  3002               	movlw	2
  8680  0A84  0273               	subwf	___ftpack@exp,w
  8681  0A85  1803               	skipnc
  8682  0A86  2A79               	goto	l2003
  8683  0A87                     l569:	
  8684  0A87  1873               	btfsc	___ftpack@exp,0
  8685  0A88  2A8F               	goto	l570
  8686  0A89  30FF               	movlw	255
  8687  0A8A  05F0               	andwf	___ftpack@arg,f
  8688  0A8B  307F               	movlw	127
  8689  0A8C  05F1               	andwf	___ftpack@arg+1,f
  8690  0A8D  30FF               	movlw	255
  8691  0A8E  05F2               	andwf	___ftpack@arg+2,f
  8692  0A8F                     l570:	
  8693  0A8F  1003               	clrc
  8694  0A90  0CF3               	rrf	___ftpack@exp,f
  8695  0A91  0873               	movf	___ftpack@exp,w
  8696  0A92  00F5               	movwf	??___ftpack
  8697  0A93  01F6               	clrf	??___ftpack+1
  8698  0A94  01F7               	clrf	??___ftpack+2
  8699  0A95  3010               	movlw	16
  8700  0A96                     u1855:	
  8701  0A96  35F5               	lslf	??___ftpack,f
  8702  0A97  0DF6               	rlf	??___ftpack+1,f
  8703  0A98  0DF7               	rlf	??___ftpack+2,f
  8704  0A99  0B89               	decfsz	9,f
  8705  0A9A  2A96               	goto	u1855
  8706  0A9B  0875               	movf	??___ftpack,w
  8707  0A9C  04F0               	iorwf	___ftpack@arg,f
  8708  0A9D  0876               	movf	??___ftpack+1,w
  8709  0A9E  04F1               	iorwf	___ftpack@arg+1,f
  8710  0A9F  0877               	movf	??___ftpack+2,w
  8711  0AA0  04F2               	iorwf	___ftpack@arg+2,f
  8712  0AA1  0874               	movf	___ftpack@sign,w
  8713  0AA2  1903               	btfsc	3,2
  8714  0AA3  0008               	return
  8715  0AA4  17F2               	bsf	___ftpack@arg+2,7
  8716  0AA5  0008               	return
  8717  0AA6                     __end_of___ftpack:	
  8718                           
  8719                           	psect	text12
  8720  00E8                     __ptext12:	
  8721 ;; *************** function _readAnalog *****************
  8722 ;; Defined at:
  8723 ;;		line 88 in file "adcc.c"
  8724 ;; Parameters:    Size  Location     Type
  8725 ;;  channel         2    6[BANK0 ] int 
  8726 ;; Auto vars:     Size  Location     Type
  8727 ;;  value           2   11[COMMON] int 
  8728 ;;  analog_chann    2    9[COMMON] int 
  8729 ;; Return value:  Size  Location     Type
  8730 ;;                  2    6[BANK0 ] int 
  8731 ;; Registers used:
  8732 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8733 ;; Tracked objects:
  8734 ;;		On entry : 0/0
  8735 ;;		On exit  : 0/0
  8736 ;;		Unchanged: 0/0
  8737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8738 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8739 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8740 ;;      Temps:          0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8741 ;;      Totals:         4      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8742 ;;Total ram usage:       22 bytes
  8743 ;; Hardware stack levels used:    1
  8744 ;; Hardware stack levels required when called:    1
  8745 ;; This function calls:
  8746 ;;		_ADCRead
  8747 ;;		___aldiv
  8748 ;;		___wmul
  8749 ;; This function is called by:
  8750 ;;		_main
  8751 ;; This function uses a non-reentrant model
  8752 ;;
  8753                           
  8754                           
  8755                           ;psect for function _readAnalog
  8756  00E8                     _readAnalog:	
  8757                           
  8758                           ;adcc.c: 90: int value;
  8759                           ;adcc.c: 92: int analog_channel = channels[channel];
  8760                           
  8761                           ;incstack = 0
  8762                           ; Regs used in _readAnalog: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8763  00E8  0020               	movlb	0	; select bank0
  8764  00E9  3526               	lslf	readAnalog@channel,w
  8765  00EA  3EDA               	addlw	(low (_channels| 0))& (0+255)
  8766  00EB  0086               	movwf	6
  8767  00EC  0187               	clrf	7
  8768  00ED  3F40               	moviw [0]fsr1
  8769  00EE  00F9               	movwf	readAnalog@analog_channel
  8770  00EF  3F41               	moviw [1]fsr1
  8771  00F0  00FA               	movwf	readAnalog@analog_channel+1
  8772                           
  8773                           ;adcc.c: 94: value = ADCRead(analog_channel);
  8774  00F1  0879               	movf	readAnalog@analog_channel,w
  8775  00F2  3196  26A3  3180   	fcall	_ADCRead
  8776  00F5  0871               	movf	?_ADCRead+1,w
  8777  00F6  00FC               	movwf	readAnalog@value+1
  8778  00F7  0870               	movf	?_ADCRead,w
  8779  00F8  00FB               	movwf	readAnalog@value
  8780                           
  8781                           ;adcc.c: 98: totals[channel] = totals[channel] - samples[channel][sampleIndex];
  8782  00F9  0020               	movlb	0	; select bank0
  8783  00FA  0826               	movf	readAnalog@channel,w
  8784  00FB  00A8               	movwf	??_readAnalog
  8785  00FC  3001               	movlw	1
  8786  00FD                     u2825:	
  8787  00FD  35A8               	lslf	??_readAnalog,f
  8788  00FE  3EFF               	addlw	-1
  8789  00FF  1D03               	skipz
  8790  0100  28FD               	goto	u2825
  8791  0101  3528               	lslf	??_readAnalog,w
  8792  0102  3EA0               	addlw	(low (_totals| 0))& (0+255)
  8793  0103  0086               	movwf	6
  8794  0104  0187               	clrf	7
  8795  0105  3F40               	moviw [0]fsr1
  8796  0106  00A9               	movwf	??_readAnalog+1
  8797  0107  3F41               	moviw [1]fsr1
  8798  0108  00AA               	movwf	??_readAnalog+2
  8799  0109  3F42               	moviw [2]fsr1
  8800  010A  00AB               	movwf	??_readAnalog+3
  8801  010B  3F43               	moviw [3]fsr1
  8802  010C  00AC               	movwf	??_readAnalog+4
  8803  010D  086F               	movf	_sampleIndex+1,w
  8804  010E  00AE               	movwf	??_readAnalog+6
  8805  010F  086E               	movf	_sampleIndex,w
  8806  0110  00AD               	movwf	??_readAnalog+5
  8807  0111  35AD               	lslf	??_readAnalog+5,f
  8808  0112  0DAE               	rlf	??_readAnalog+6,f
  8809  0113  0827               	movf	readAnalog@channel+1,w
  8810  0114  00F1               	movwf	___wmul@multiplier+1
  8811  0115  0826               	movf	readAnalog@channel,w
  8812  0116  00F0               	movwf	___wmul@multiplier
  8813  0117  3028               	movlw	40
  8814  0118  00F2               	movwf	___wmul@multiplicand
  8815  0119  3000               	movlw	0
  8816  011A  00F3               	movwf	___wmul@multiplicand+1
  8817  011B  3197  273F  3180   	fcall	___wmul
  8818  011E  3000               	movlw	0
  8819  011F  0020               	movlb	0	; select bank0
  8820  0120  00AF               	movwf	??_readAnalog+7
  8821  0121  3023               	movlw	35
  8822  0122  00B0               	movwf	??_readAnalog+8
  8823  0123  0870               	movf	?___wmul,w
  8824  0124  072F               	addwf	??_readAnalog+7,w
  8825  0125  00B1               	movwf	??_readAnalog+9
  8826  0126  0871               	movf	?___wmul+1,w
  8827  0127  3D30               	addwfc	??_readAnalog+8,w
  8828  0128  00B2               	movwf	??_readAnalog+10
  8829  0129  0831               	movf	??_readAnalog+9,w
  8830  012A  072D               	addwf	??_readAnalog+5,w
  8831  012B  0084               	movwf	4
  8832  012C  0832               	movf	??_readAnalog+10,w
  8833  012D  3D2E               	addwfc	??_readAnalog+6,w
  8834  012E  0085               	movwf	5
  8835  012F  3F00               	moviw [0]fsr0
  8836  0130  00B3               	movwf	??_readAnalog+11
  8837  0131  3F01               	moviw [1]fsr0
  8838  0132  00B4               	movwf	??_readAnalog+12
  8839  0133  01B5               	clrf	??_readAnalog+13
  8840  0134  01B6               	clrf	??_readAnalog+14
  8841  0135  09B3               	comf	??_readAnalog+11,f
  8842  0136  09B4               	comf	??_readAnalog+12,f
  8843  0137  09B5               	comf	??_readAnalog+13,f
  8844  0138  09B6               	comf	??_readAnalog+14,f
  8845  0139  0AB3               	incf	??_readAnalog+11,f
  8846  013A  1903               	skipnz
  8847  013B  0AB4               	incf	??_readAnalog+12,f
  8848  013C  1903               	skipnz
  8849  013D  0AB5               	incf	??_readAnalog+13,f
  8850  013E  1903               	skipnz
  8851  013F  0AB6               	incf	??_readAnalog+14,f
  8852  0140  0833               	movf	??_readAnalog+11,w
  8853  0141  07A9               	addwf	??_readAnalog+1,f
  8854  0142  0834               	movf	??_readAnalog+12,w
  8855  0143  3DAA               	addwfc	??_readAnalog+2,f
  8856  0144  0835               	movf	??_readAnalog+13,w
  8857  0145  3DAB               	addwfc	??_readAnalog+3,f
  8858  0146  0836               	movf	??_readAnalog+14,w
  8859  0147  3DAC               	addwfc	??_readAnalog+4,f
  8860  0148  0826               	movf	readAnalog@channel,w
  8861  0149  00B7               	movwf	??_readAnalog+15
  8862  014A  3001               	movlw	1
  8863  014B                     u2835:	
  8864  014B  35B7               	lslf	??_readAnalog+15,f
  8865  014C  3EFF               	addlw	-1
  8866  014D  1D03               	skipz
  8867  014E  294B               	goto	u2835
  8868  014F  3537               	lslf	??_readAnalog+15,w
  8869  0150  3EA0               	addlw	(low (_totals| 0))& (0+255)
  8870  0151  0086               	movwf	6
  8871  0152  0187               	clrf	7
  8872  0153  0829               	movf	??_readAnalog+1,w
  8873  0154  3FC0               	movwi [0]fsr1
  8874  0155  082A               	movf	??_readAnalog+2,w
  8875  0156  3FC1               	movwi [1]fsr1
  8876  0157  082B               	movf	??_readAnalog+3,w
  8877  0158  3FC2               	movwi [2]fsr1
  8878  0159  082C               	movf	??_readAnalog+4,w
  8879  015A  3FC3               	movwi [3]fsr1
  8880                           
  8881                           ;adcc.c: 100: samples[channel][sampleIndex] = value;
  8882  015B  086F               	movf	_sampleIndex+1,w
  8883  015C  00A9               	movwf	??_readAnalog+1
  8884  015D  086E               	movf	_sampleIndex,w
  8885  015E  00A8               	movwf	??_readAnalog
  8886  015F  35A8               	lslf	??_readAnalog,f
  8887  0160  0DA9               	rlf	??_readAnalog+1,f
  8888  0161  0827               	movf	readAnalog@channel+1,w
  8889  0162  00F1               	movwf	___wmul@multiplier+1
  8890  0163  0826               	movf	readAnalog@channel,w
  8891  0164  00F0               	movwf	___wmul@multiplier
  8892  0165  3028               	movlw	40
  8893  0166  00F2               	movwf	___wmul@multiplicand
  8894  0167  3000               	movlw	0
  8895  0168  00F3               	movwf	___wmul@multiplicand+1
  8896  0169  3197  273F  3180   	fcall	___wmul
  8897  016C  3000               	movlw	0
  8898  016D  0020               	movlb	0	; select bank0
  8899  016E  00AA               	movwf	??_readAnalog+2
  8900  016F  3023               	movlw	35
  8901  0170  00AB               	movwf	??_readAnalog+3
  8902  0171  0870               	movf	?___wmul,w
  8903  0172  072A               	addwf	??_readAnalog+2,w
  8904  0173  00AC               	movwf	??_readAnalog+4
  8905  0174  0871               	movf	?___wmul+1,w
  8906  0175  3D2B               	addwfc	??_readAnalog+3,w
  8907  0176  00AD               	movwf	??_readAnalog+5
  8908  0177  0828               	movf	??_readAnalog,w
  8909  0178  072C               	addwf	??_readAnalog+4,w
  8910  0179  0086               	movwf	6
  8911  017A  0829               	movf	??_readAnalog+1,w
  8912  017B  3D2D               	addwfc	??_readAnalog+5,w
  8913  017C  0087               	movwf	7
  8914  017D  087B               	movf	readAnalog@value,w
  8915  017E  3FC0               	movwi [0]fsr1
  8916  017F  087C               	movf	readAnalog@value+1,w
  8917  0180  3FC1               	movwi [1]fsr1
  8918                           
  8919                           ;adcc.c: 102: totals[channel] = totals[channel] + samples[channel][sampleIndex];
  8920  0181  0826               	movf	readAnalog@channel,w
  8921  0182  00A8               	movwf	??_readAnalog
  8922  0183  3001               	movlw	1
  8923  0184                     u2845:	
  8924  0184  35A8               	lslf	??_readAnalog,f
  8925  0185  3EFF               	addlw	-1
  8926  0186  1D03               	skipz
  8927  0187  2984               	goto	u2845
  8928  0188  3528               	lslf	??_readAnalog,w
  8929  0189  3EA0               	addlw	(low (_totals| 0))& (0+255)
  8930  018A  0086               	movwf	6
  8931  018B  0187               	clrf	7
  8932  018C  3F40               	moviw [0]fsr1
  8933  018D  00A9               	movwf	??_readAnalog+1
  8934  018E  3F41               	moviw [1]fsr1
  8935  018F  00AA               	movwf	??_readAnalog+2
  8936  0190  3F42               	moviw [2]fsr1
  8937  0191  00AB               	movwf	??_readAnalog+3
  8938  0192  3F43               	moviw [3]fsr1
  8939  0193  00AC               	movwf	??_readAnalog+4
  8940  0194  086F               	movf	_sampleIndex+1,w
  8941  0195  00AE               	movwf	??_readAnalog+6
  8942  0196  086E               	movf	_sampleIndex,w
  8943  0197  00AD               	movwf	??_readAnalog+5
  8944  0198  35AD               	lslf	??_readAnalog+5,f
  8945  0199  0DAE               	rlf	??_readAnalog+6,f
  8946  019A  0827               	movf	readAnalog@channel+1,w
  8947  019B  00F1               	movwf	___wmul@multiplier+1
  8948  019C  0826               	movf	readAnalog@channel,w
  8949  019D  00F0               	movwf	___wmul@multiplier
  8950  019E  3028               	movlw	40
  8951  019F  00F2               	movwf	___wmul@multiplicand
  8952  01A0  3000               	movlw	0
  8953  01A1  00F3               	movwf	___wmul@multiplicand+1
  8954  01A2  3197  273F  3180   	fcall	___wmul
  8955  01A5  3000               	movlw	0
  8956  01A6  0020               	movlb	0	; select bank0
  8957  01A7  00AF               	movwf	??_readAnalog+7
  8958  01A8  3023               	movlw	35
  8959  01A9  00B0               	movwf	??_readAnalog+8
  8960  01AA  0870               	movf	?___wmul,w
  8961  01AB  072F               	addwf	??_readAnalog+7,w
  8962  01AC  00B1               	movwf	??_readAnalog+9
  8963  01AD  0871               	movf	?___wmul+1,w
  8964  01AE  3D30               	addwfc	??_readAnalog+8,w
  8965  01AF  00B2               	movwf	??_readAnalog+10
  8966  01B0  0831               	movf	??_readAnalog+9,w
  8967  01B1  072D               	addwf	??_readAnalog+5,w
  8968  01B2  0084               	movwf	4
  8969  01B3  0832               	movf	??_readAnalog+10,w
  8970  01B4  3D2E               	addwfc	??_readAnalog+6,w
  8971  01B5  0085               	movwf	5
  8972  01B6  3F00               	moviw [0]fsr0
  8973  01B7  00B3               	movwf	??_readAnalog+11
  8974  01B8  3F01               	moviw [1]fsr0
  8975  01B9  00B4               	movwf	??_readAnalog+12
  8976  01BA  01B5               	clrf	??_readAnalog+13
  8977  01BB  01B6               	clrf	??_readAnalog+14
  8978  01BC  0833               	movf	??_readAnalog+11,w
  8979  01BD  07A9               	addwf	??_readAnalog+1,f
  8980  01BE  0834               	movf	??_readAnalog+12,w
  8981  01BF  3DAA               	addwfc	??_readAnalog+2,f
  8982  01C0  0835               	movf	??_readAnalog+13,w
  8983  01C1  3DAB               	addwfc	??_readAnalog+3,f
  8984  01C2  0836               	movf	??_readAnalog+14,w
  8985  01C3  3DAC               	addwfc	??_readAnalog+4,f
  8986  01C4  0826               	movf	readAnalog@channel,w
  8987  01C5  00B7               	movwf	??_readAnalog+15
  8988  01C6  3001               	movlw	1
  8989  01C7                     u2855:	
  8990  01C7  35B7               	lslf	??_readAnalog+15,f
  8991  01C8  3EFF               	addlw	-1
  8992  01C9  1D03               	skipz
  8993  01CA  29C7               	goto	u2855
  8994  01CB  3537               	lslf	??_readAnalog+15,w
  8995  01CC  3EA0               	addlw	(low (_totals| 0))& (0+255)
  8996  01CD  0086               	movwf	6
  8997  01CE  0187               	clrf	7
  8998  01CF  0829               	movf	??_readAnalog+1,w
  8999  01D0  3FC0               	movwi [0]fsr1
  9000  01D1  082A               	movf	??_readAnalog+2,w
  9001  01D2  3FC1               	movwi [1]fsr1
  9002  01D3  082B               	movf	??_readAnalog+3,w
  9003  01D4  3FC2               	movwi [2]fsr1
  9004  01D5  082C               	movf	??_readAnalog+4,w
  9005  01D6  3FC3               	movwi [3]fsr1
  9006                           
  9007                           ;adcc.c: 104: if(channel>4)
  9008  01D7  0827               	movf	readAnalog@channel+1,w
  9009  01D8  3A80               	xorlw	128
  9010  01D9  00A8               	movwf	??_readAnalog
  9011  01DA  3080               	movlw	128
  9012  01DB  0228               	subwf	??_readAnalog,w
  9013  01DC  1D03               	skipz
  9014  01DD  29E0               	goto	u2865
  9015  01DE  3005               	movlw	5
  9016  01DF  0226               	subwf	readAnalog@channel,w
  9017  01E0                     u2865:	
  9018  01E0  1C03               	skipc
  9019  01E1  29F0               	goto	l2607
  9020                           
  9021                           ;adcc.c: 105: {
  9022                           ;adcc.c: 106: sampleIndex += 1;
  9023  01E2  3001               	movlw	1
  9024  01E3  0020               	movlb	0	; select bank0
  9025  01E4  07EE               	addwf	_sampleIndex,f
  9026  01E5  3000               	movlw	0
  9027  01E6  3DEF               	addwfc	_sampleIndex+1,f
  9028                           
  9029                           ;adcc.c: 108: if(sampleIndex >= 20)
  9030  01E7  3000               	movlw	0
  9031  01E8  026F               	subwf	_sampleIndex+1,w
  9032  01E9  3014               	movlw	20
  9033  01EA  1903               	skipnz
  9034  01EB  026E               	subwf	_sampleIndex,w
  9035  01EC  1C03               	skipc
  9036  01ED  29F0               	goto	l2607
  9037                           
  9038                           ;adcc.c: 109: {
  9039                           ;adcc.c: 110: sampleIndex = 0;
  9040  01EE  01EE               	clrf	_sampleIndex
  9041  01EF  01EF               	clrf	_sampleIndex+1
  9042  01F0                     l2607:	
  9043                           
  9044                           ;adcc.c: 111: }
  9045                           ;adcc.c: 112: }
  9046                           ;adcc.c: 114: value = totals[channel] / 20;
  9047  01F0  3000               	movlw	0
  9048  01F1  00F3               	movwf	___aldiv@divisor+3
  9049  01F2  3000               	movlw	0
  9050  01F3  00F2               	movwf	___aldiv@divisor+2
  9051  01F4  3000               	movlw	0
  9052  01F5  00F1               	movwf	___aldiv@divisor+1
  9053  01F6  3014               	movlw	20
  9054  01F7  00F0               	movwf	___aldiv@divisor
  9055  01F8  0020               	movlb	0	; select bank0
  9056  01F9  0826               	movf	readAnalog@channel,w
  9057  01FA  00A8               	movwf	??_readAnalog
  9058  01FB  3001               	movlw	1
  9059  01FC                     u2885:	
  9060  01FC  35A8               	lslf	??_readAnalog,f
  9061  01FD  3EFF               	addlw	-1
  9062  01FE  1D03               	skipz
  9063  01FF  29FC               	goto	u2885
  9064  0200  3528               	lslf	??_readAnalog,w
  9065  0201  3EA0               	addlw	(low (_totals| 0))& (0+255)
  9066  0202  0086               	movwf	6
  9067  0203  0187               	clrf	7
  9068  0204  3F40               	moviw [0]fsr1
  9069  0205  00F4               	movwf	___aldiv@dividend
  9070  0206  3F41               	moviw [1]fsr1
  9071  0207  00F5               	movwf	___aldiv@dividend+1
  9072  0208  3F42               	moviw [2]fsr1
  9073  0209  00F6               	movwf	___aldiv@dividend+2
  9074  020A  3F43               	moviw [3]fsr1
  9075  020B  00F7               	movwf	___aldiv@dividend+3
  9076  020C  318A  22A6         	fcall	___aldiv
  9077  020E  0871               	movf	?___aldiv+1,w
  9078  020F  00FC               	movwf	readAnalog@value+1
  9079  0210  0870               	movf	?___aldiv,w
  9080  0211  00FB               	movwf	readAnalog@value
  9081                           
  9082                           ;adcc.c: 116: return value;
  9083  0212  087C               	movf	readAnalog@value+1,w
  9084  0213  0020               	movlb	0	; select bank0
  9085  0214  00A7               	movwf	?_readAnalog+1
  9086  0215  087B               	movf	readAnalog@value,w
  9087  0216  00A6               	movwf	?_readAnalog
  9088  0217  0008               	return
  9089  0218                     __end_of_readAnalog:	
  9090                           
  9091                           	psect	text13
  9092  173F                     __ptext13:	
  9093 ;; *************** function ___wmul *****************
  9094 ;; Defined at:
  9095 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
  9096 ;; Parameters:    Size  Location     Type
  9097 ;;  multiplier      2    0[COMMON] unsigned int 
  9098 ;;  multiplicand    2    2[COMMON] unsigned int 
  9099 ;; Auto vars:     Size  Location     Type
  9100 ;;  product         2    4[COMMON] unsigned int 
  9101 ;; Return value:  Size  Location     Type
  9102 ;;                  2    0[COMMON] unsigned int 
  9103 ;; Registers used:
  9104 ;;		wreg, status,2, status,0
  9105 ;; Tracked objects:
  9106 ;;		On entry : 0/0
  9107 ;;		On exit  : 0/0
  9108 ;;		Unchanged: 0/0
  9109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9110 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9111 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9113 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9114 ;;Total ram usage:        6 bytes
  9115 ;; Hardware stack levels used:    1
  9116 ;; This function calls:
  9117 ;;		Nothing
  9118 ;; This function is called by:
  9119 ;;		_readAnalog
  9120 ;;		_eval_poly
  9121 ;; This function uses a non-reentrant model
  9122 ;;
  9123                           
  9124                           
  9125                           ;psect for function ___wmul
  9126  173F                     ___wmul:	
  9127                           
  9128                           ;incstack = 0
  9129                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  9130  173F  01F4               	clrf	___wmul@product
  9131  1740  01F5               	clrf	___wmul@product+1
  9132  1741                     l2035:	
  9133  1741  1C70               	btfss	___wmul@multiplier,0
  9134  1742  2F47               	goto	l401
  9135  1743  0872               	movf	___wmul@multiplicand,w
  9136  1744  07F4               	addwf	___wmul@product,f
  9137  1745  0873               	movf	___wmul@multiplicand+1,w
  9138  1746  3DF5               	addwfc	___wmul@product+1,f
  9139  1747                     l401:	
  9140  1747  3001               	movlw	1
  9141  1748                     u1925:	
  9142  1748  35F2               	lslf	___wmul@multiplicand,f
  9143  1749  0DF3               	rlf	___wmul@multiplicand+1,f
  9144  174A  0B89               	decfsz	9,f
  9145  174B  2F48               	goto	u1925
  9146  174C  3001               	movlw	1
  9147  174D                     u1935:	
  9148  174D  36F1               	lsrf	___wmul@multiplier+1,f
  9149  174E  0CF0               	rrf	___wmul@multiplier,f
  9150  174F  0B89               	decfsz	9,f
  9151  1750  2F4D               	goto	u1935
  9152  1751  0870               	movf	___wmul@multiplier,w
  9153  1752  0471               	iorwf	___wmul@multiplier+1,w
  9154  1753  1D03               	btfss	3,2
  9155  1754  2F41               	goto	l2035
  9156  1755  0875               	movf	___wmul@product+1,w
  9157  1756  00F1               	movwf	?___wmul+1
  9158  1757  0874               	movf	___wmul@product,w
  9159  1758  00F0               	movwf	?___wmul
  9160  1759  0008               	return
  9161  175A                     __end_of___wmul:	
  9162                           
  9163                           	psect	text14
  9164  0AA6                     __ptext14:	
  9165 ;; *************** function ___aldiv *****************
  9166 ;; Defined at:
  9167 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\aldiv.c"
  9168 ;; Parameters:    Size  Location     Type
  9169 ;;  divisor         4    0[COMMON] long 
  9170 ;;  dividend        4    4[COMMON] long 
  9171 ;; Auto vars:     Size  Location     Type
  9172 ;;  quotient        4    2[BANK0 ] long 
  9173 ;;  sign            1    1[BANK0 ] unsigned char 
  9174 ;;  counter         1    0[BANK0 ] unsigned char 
  9175 ;; Return value:  Size  Location     Type
  9176 ;;                  4    0[COMMON] long 
  9177 ;; Registers used:
  9178 ;;		wreg, status,2, status,0
  9179 ;; Tracked objects:
  9180 ;;		On entry : 0/0
  9181 ;;		On exit  : 0/0
  9182 ;;		Unchanged: 0/0
  9183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9184 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9185 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9186 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9187 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9188 ;;Total ram usage:       15 bytes
  9189 ;; Hardware stack levels used:    1
  9190 ;; This function calls:
  9191 ;;		Nothing
  9192 ;; This function is called by:
  9193 ;;		_readAnalog
  9194 ;; This function uses a non-reentrant model
  9195 ;;
  9196                           
  9197                           
  9198                           ;psect for function ___aldiv
  9199  0AA6                     ___aldiv:	
  9200                           
  9201                           ;incstack = 0
  9202                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  9203  0AA6  0020               	movlb	0	; select bank0
  9204  0AA7  01A1               	clrf	___aldiv@sign
  9205  0AA8  1FF3               	btfss	___aldiv@divisor+3,7
  9206  0AA9  2AB7               	goto	l456
  9207  0AAA  09F0               	comf	___aldiv@divisor,f
  9208  0AAB  09F1               	comf	___aldiv@divisor+1,f
  9209  0AAC  09F2               	comf	___aldiv@divisor+2,f
  9210  0AAD  09F3               	comf	___aldiv@divisor+3,f
  9211  0AAE  0AF0               	incf	___aldiv@divisor,f
  9212  0AAF  1903               	skipnz
  9213  0AB0  0AF1               	incf	___aldiv@divisor+1,f
  9214  0AB1  1903               	skipnz
  9215  0AB2  0AF2               	incf	___aldiv@divisor+2,f
  9216  0AB3  1903               	skipnz
  9217  0AB4  0AF3               	incf	___aldiv@divisor+3,f
  9218  0AB5  01A1               	clrf	___aldiv@sign
  9219  0AB6  0AA1               	incf	___aldiv@sign,f
  9220  0AB7                     l456:	
  9221  0AB7  1FF7               	btfss	___aldiv@dividend+3,7
  9222  0AB8  2AC8               	goto	l2431
  9223  0AB9  09F4               	comf	___aldiv@dividend,f
  9224  0ABA  09F5               	comf	___aldiv@dividend+1,f
  9225  0ABB  09F6               	comf	___aldiv@dividend+2,f
  9226  0ABC  09F7               	comf	___aldiv@dividend+3,f
  9227  0ABD  0AF4               	incf	___aldiv@dividend,f
  9228  0ABE  1903               	skipnz
  9229  0ABF  0AF5               	incf	___aldiv@dividend+1,f
  9230  0AC0  1903               	skipnz
  9231  0AC1  0AF6               	incf	___aldiv@dividend+2,f
  9232  0AC2  1903               	skipnz
  9233  0AC3  0AF7               	incf	___aldiv@dividend+3,f
  9234  0AC4  3001               	movlw	1
  9235  0AC5  00F8               	movwf	??___aldiv
  9236  0AC6  0878               	movf	??___aldiv,w
  9237  0AC7  06A1               	xorwf	___aldiv@sign,f
  9238  0AC8                     l2431:	
  9239  0AC8  3000               	movlw	0
  9240  0AC9  00A5               	movwf	___aldiv@quotient+3
  9241  0ACA  3000               	movlw	0
  9242  0ACB  00A4               	movwf	___aldiv@quotient+2
  9243  0ACC  3000               	movlw	0
  9244  0ACD  00A3               	movwf	___aldiv@quotient+1
  9245  0ACE  3000               	movlw	0
  9246  0ACF  00A2               	movwf	___aldiv@quotient
  9247  0AD0  0873               	movf	___aldiv@divisor+3,w
  9248  0AD1  0472               	iorwf	___aldiv@divisor+2,w
  9249  0AD2  0471               	iorwf	___aldiv@divisor+1,w
  9250  0AD3  0470               	iorwf	___aldiv@divisor,w
  9251  0AD4  1903               	skipnz
  9252  0AD5  2B11               	goto	l2453
  9253  0AD6  01A0               	clrf	___aldiv@counter
  9254  0AD7  0AA0               	incf	___aldiv@counter,f
  9255  0AD8                     l2439:	
  9256  0AD8  1BF3               	btfsc	___aldiv@divisor+3,7
  9257  0AD9  2AE6               	goto	l2441
  9258  0ADA  3001               	movlw	1
  9259  0ADB                     u2475:	
  9260  0ADB  35F0               	lslf	___aldiv@divisor,f
  9261  0ADC  0DF1               	rlf	___aldiv@divisor+1,f
  9262  0ADD  0DF2               	rlf	___aldiv@divisor+2,f
  9263  0ADE  0DF3               	rlf	___aldiv@divisor+3,f
  9264  0ADF  0B89               	decfsz	9,f
  9265  0AE0  2ADB               	goto	u2475
  9266  0AE1  3001               	movlw	1
  9267  0AE2  00F8               	movwf	??___aldiv
  9268  0AE3  0878               	movf	??___aldiv,w
  9269  0AE4  07A0               	addwf	___aldiv@counter,f
  9270  0AE5  2AD8               	goto	l2439
  9271  0AE6                     l2441:	
  9272  0AE6  3001               	movlw	1
  9273  0AE7                     u2495:	
  9274  0AE7  35A2               	lslf	___aldiv@quotient,f
  9275  0AE8  0DA3               	rlf	___aldiv@quotient+1,f
  9276  0AE9  0DA4               	rlf	___aldiv@quotient+2,f
  9277  0AEA  0DA5               	rlf	___aldiv@quotient+3,f
  9278  0AEB  0B89               	decfsz	9,f
  9279  0AEC  2AE7               	goto	u2495
  9280  0AED  0873               	movf	___aldiv@divisor+3,w
  9281  0AEE  0277               	subwf	___aldiv@dividend+3,w
  9282  0AEF  1D03               	skipz
  9283  0AF0  2AFB               	goto	u2505
  9284  0AF1  0872               	movf	___aldiv@divisor+2,w
  9285  0AF2  0276               	subwf	___aldiv@dividend+2,w
  9286  0AF3  1D03               	skipz
  9287  0AF4  2AFB               	goto	u2505
  9288  0AF5  0871               	movf	___aldiv@divisor+1,w
  9289  0AF6  0275               	subwf	___aldiv@dividend+1,w
  9290  0AF7  1D03               	skipz
  9291  0AF8  2AFB               	goto	u2505
  9292  0AF9  0870               	movf	___aldiv@divisor,w
  9293  0AFA  0274               	subwf	___aldiv@dividend,w
  9294  0AFB                     u2505:	
  9295  0AFB  1C03               	skipc
  9296  0AFC  2B06               	goto	l2449
  9297  0AFD  0870               	movf	___aldiv@divisor,w
  9298  0AFE  02F4               	subwf	___aldiv@dividend,f
  9299  0AFF  0871               	movf	___aldiv@divisor+1,w
  9300  0B00  3BF5               	subwfb	___aldiv@dividend+1,f
  9301  0B01  0872               	movf	___aldiv@divisor+2,w
  9302  0B02  3BF6               	subwfb	___aldiv@dividend+2,f
  9303  0B03  0873               	movf	___aldiv@divisor+3,w
  9304  0B04  3BF7               	subwfb	___aldiv@dividend+3,f
  9305  0B05  1422               	bsf	___aldiv@quotient,0
  9306  0B06                     l2449:	
  9307  0B06  3001               	movlw	1
  9308  0B07                     u2515:	
  9309  0B07  36F3               	lsrf	___aldiv@divisor+3,f
  9310  0B08  0CF2               	rrf	___aldiv@divisor+2,f
  9311  0B09  0CF1               	rrf	___aldiv@divisor+1,f
  9312  0B0A  0CF0               	rrf	___aldiv@divisor,f
  9313  0B0B  0B89               	decfsz	9,f
  9314  0B0C  2B07               	goto	u2515
  9315  0B0D  3001               	movlw	1
  9316  0B0E  02A0               	subwf	___aldiv@counter,f
  9317  0B0F  1D03               	btfss	3,2
  9318  0B10  2AE6               	goto	l2441
  9319  0B11                     l2453:	
  9320  0B11  0821               	movf	___aldiv@sign,w
  9321  0B12  1903               	btfsc	3,2
  9322  0B13  2B1F               	goto	l2457
  9323  0B14  09A2               	comf	___aldiv@quotient,f
  9324  0B15  09A3               	comf	___aldiv@quotient+1,f
  9325  0B16  09A4               	comf	___aldiv@quotient+2,f
  9326  0B17  09A5               	comf	___aldiv@quotient+3,f
  9327  0B18  0AA2               	incf	___aldiv@quotient,f
  9328  0B19  1903               	skipnz
  9329  0B1A  0AA3               	incf	___aldiv@quotient+1,f
  9330  0B1B  1903               	skipnz
  9331  0B1C  0AA4               	incf	___aldiv@quotient+2,f
  9332  0B1D  1903               	skipnz
  9333  0B1E  0AA5               	incf	___aldiv@quotient+3,f
  9334  0B1F                     l2457:	
  9335  0B1F  0825               	movf	___aldiv@quotient+3,w
  9336  0B20  00F3               	movwf	?___aldiv+3
  9337  0B21  0824               	movf	___aldiv@quotient+2,w
  9338  0B22  00F2               	movwf	?___aldiv+2
  9339  0B23  0823               	movf	___aldiv@quotient+1,w
  9340  0B24  00F1               	movwf	?___aldiv+1
  9341  0B25  0822               	movf	___aldiv@quotient,w
  9342  0B26  00F0               	movwf	?___aldiv
  9343  0B27  0008               	return
  9344  0B28                     __end_of___aldiv:	
  9345                           
  9346                           	psect	text15
  9347  16A3                     __ptext15:	
  9348 ;; *************** function _ADCRead *****************
  9349 ;; Defined at:
  9350 ;;		line 65 in file "adcc.c"
  9351 ;; Parameters:    Size  Location     Type
  9352 ;;  channel         1    wreg     enum E13559
  9353 ;; Auto vars:     Size  Location     Type
  9354 ;;  channel         1    3[COMMON] enum E13559
  9355 ;; Return value:  Size  Location     Type
  9356 ;;                  2    0[COMMON] unsigned int 
  9357 ;; Registers used:
  9358 ;;		wreg
  9359 ;; Tracked objects:
  9360 ;;		On entry : 0/0
  9361 ;;		On exit  : 0/0
  9362 ;;		Unchanged: 0/0
  9363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9364 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9365 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9367 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9368 ;;Total ram usage:        4 bytes
  9369 ;; Hardware stack levels used:    1
  9370 ;; This function calls:
  9371 ;;		Nothing
  9372 ;; This function is called by:
  9373 ;;		_readAnalog
  9374 ;;		_main
  9375 ;; This function uses a non-reentrant model
  9376 ;;
  9377                           
  9378                           
  9379                           ;psect for function _ADCRead
  9380  16A3                     _ADCRead:	
  9381                           
  9382                           ;incstack = 0
  9383                           ; Regs used in _ADCRead: [wreg]
  9384                           ;ADCRead@channel stored from wreg
  9385  16A3  00F3               	movwf	ADCRead@channel
  9386                           
  9387                           ;adcc.c: 68: ADPCH = channel;
  9388  16A4  0873               	movf	ADCRead@channel,w
  9389  16A5  0021               	movlb	1	; select bank1
  9390  16A6  009E               	movwf	30	;volatile
  9391                           
  9392                           ;adcc.c: 71: ADCON0bits.ADON = 1;
  9393  16A7  1793               	bsf	19,7	;volatile
  9394                           
  9395                           ;adcc.c: 74: ADCON0bits.ADCONT = 0;
  9396  16A8  1313               	bcf	19,6	;volatile
  9397                           
  9398                           ;adcc.c: 77: ADCON0bits.ADGO = 1;
  9399  16A9  1413               	bsf	19,0	;volatile
  9400  16AA                     l58:	
  9401                           ;adcc.c: 81: {
  9402                           
  9403                           ;adcc.c: 80: while (ADCON0bits.ADGO)
  9404                           
  9405  16AA  1813               	btfsc	19,0	;volatile
  9406  16AB  2EAA               	goto	l58
  9407                           
  9408                           ;adcc.c: 82: }
  9409                           ;adcc.c: 85: return ((ADRESH << 8) + ADRESL);
  9410  16AC  080D               	movf	13,w	;volatile
  9411  16AD  00F1               	movwf	?_ADCRead+1
  9412  16AE  080C               	movf	12,w	;volatile
  9413  16AF  00F0               	movwf	?_ADCRead
  9414  16B0  0008               	return
  9415  16B1                     __end_of_ADCRead:	
  9416                           
  9417                           	psect	text16
  9418  17CC                     __ptext16:	
  9419 ;; *************** function ___lwdiv *****************
  9420 ;; Defined at:
  9421 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwdiv.c"
  9422 ;; Parameters:    Size  Location     Type
  9423 ;;  divisor         2    0[COMMON] unsigned int 
  9424 ;;  dividend        2    2[COMMON] unsigned int 
  9425 ;; Auto vars:     Size  Location     Type
  9426 ;;  quotient        2    5[COMMON] unsigned int 
  9427 ;;  counter         1    7[COMMON] unsigned char 
  9428 ;; Return value:  Size  Location     Type
  9429 ;;                  2    0[COMMON] unsigned int 
  9430 ;; Registers used:
  9431 ;;		wreg, status,2, status,0
  9432 ;; Tracked objects:
  9433 ;;		On entry : 0/0
  9434 ;;		On exit  : 0/0
  9435 ;;		Unchanged: 0/0
  9436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9437 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9438 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9439 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9440 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9441 ;;Total ram usage:        8 bytes
  9442 ;; Hardware stack levels used:    1
  9443 ;; This function calls:
  9444 ;;		Nothing
  9445 ;; This function is called by:
  9446 ;;		_main
  9447 ;; This function uses a non-reentrant model
  9448 ;;
  9449                           
  9450                           
  9451                           ;psect for function ___lwdiv
  9452  17CC                     ___lwdiv:	
  9453                           
  9454                           ;incstack = 0
  9455                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  9456  17CC  01F5               	clrf	___lwdiv@quotient
  9457  17CD  01F6               	clrf	___lwdiv@quotient+1
  9458  17CE  0870               	movf	___lwdiv@divisor,w
  9459  17CF  0471               	iorwf	___lwdiv@divisor+1,w
  9460  17D0  1903               	btfsc	3,2
  9461  17D1  2FFB               	goto	l2797
  9462  17D2  01F7               	clrf	___lwdiv@counter
  9463  17D3  0AF7               	incf	___lwdiv@counter,f
  9464  17D4                     l2785:	
  9465  17D4  1BF1               	btfsc	___lwdiv@divisor+1,7
  9466  17D5  2FE0               	goto	l2787
  9467  17D6  3001               	movlw	1
  9468  17D7                     u3155:	
  9469  17D7  35F0               	lslf	___lwdiv@divisor,f
  9470  17D8  0DF1               	rlf	___lwdiv@divisor+1,f
  9471  17D9  0B89               	decfsz	9,f
  9472  17DA  2FD7               	goto	u3155
  9473  17DB  3001               	movlw	1
  9474  17DC  00F4               	movwf	??___lwdiv
  9475  17DD  0874               	movf	??___lwdiv,w
  9476  17DE  07F7               	addwf	___lwdiv@counter,f
  9477  17DF  2FD4               	goto	l2785
  9478  17E0                     l2787:	
  9479  17E0  3001               	movlw	1
  9480  17E1                     u3175:	
  9481  17E1  35F5               	lslf	___lwdiv@quotient,f
  9482  17E2  0DF6               	rlf	___lwdiv@quotient+1,f
  9483  17E3  0B89               	decfsz	9,f
  9484  17E4  2FE1               	goto	u3175
  9485  17E5  0871               	movf	___lwdiv@divisor+1,w
  9486  17E6  0273               	subwf	___lwdiv@dividend+1,w
  9487  17E7  1D03               	skipz
  9488  17E8  2FEB               	goto	u3185
  9489  17E9  0870               	movf	___lwdiv@divisor,w
  9490  17EA  0272               	subwf	___lwdiv@dividend,w
  9491  17EB                     u3185:	
  9492  17EB  1C03               	skipc
  9493  17EC  2FF2               	goto	l2793
  9494  17ED  0870               	movf	___lwdiv@divisor,w
  9495  17EE  02F2               	subwf	___lwdiv@dividend,f
  9496  17EF  0871               	movf	___lwdiv@divisor+1,w
  9497  17F0  3BF3               	subwfb	___lwdiv@dividend+1,f
  9498  17F1  1475               	bsf	___lwdiv@quotient,0
  9499  17F2                     l2793:	
  9500  17F2  3001               	movlw	1
  9501  17F3                     u3195:	
  9502  17F3  36F1               	lsrf	___lwdiv@divisor+1,f
  9503  17F4  0CF0               	rrf	___lwdiv@divisor,f
  9504  17F5  0B89               	decfsz	9,f
  9505  17F6  2FF3               	goto	u3195
  9506  17F7  3001               	movlw	1
  9507  17F8  02F7               	subwf	___lwdiv@counter,f
  9508  17F9  1D03               	btfss	3,2
  9509  17FA  2FE0               	goto	l2787
  9510  17FB                     l2797:	
  9511  17FB  0876               	movf	___lwdiv@quotient+1,w
  9512  17FC  00F1               	movwf	?___lwdiv+1
  9513  17FD  0875               	movf	___lwdiv@quotient,w
  9514  17FE  00F0               	movwf	?___lwdiv
  9515  17FF  0008               	return
  9516  1800                     __end_of___lwdiv:	
  9517                           
  9518                           	psect	text17
  9519  0B28                     __ptext17:	
  9520 ;; *************** function ___fttol *****************
  9521 ;; Defined at:
  9522 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fttol.c"
  9523 ;; Parameters:    Size  Location     Type
  9524 ;;  f1              3    0[COMMON] float 
  9525 ;; Auto vars:     Size  Location     Type
  9526 ;;  lval            4    9[COMMON] unsigned long 
  9527 ;;  exp1            1   13[COMMON] unsigned char 
  9528 ;;  sign1           1    8[COMMON] unsigned char 
  9529 ;; Return value:  Size  Location     Type
  9530 ;;                  4    0[COMMON] long 
  9531 ;; Registers used:
  9532 ;;		wreg, status,2, status,0
  9533 ;; Tracked objects:
  9534 ;;		On entry : 0/0
  9535 ;;		On exit  : 0/0
  9536 ;;		Unchanged: 0/0
  9537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9538 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9539 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9540 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9541 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9542 ;;Total ram usage:       14 bytes
  9543 ;; Hardware stack levels used:    1
  9544 ;; This function calls:
  9545 ;;		Nothing
  9546 ;; This function is called by:
  9547 ;;		_main
  9548 ;; This function uses a non-reentrant model
  9549 ;;
  9550                           
  9551                           
  9552                           ;psect for function ___fttol
  9553  0B28                     ___fttol:	
  9554                           
  9555                           ;incstack = 0
  9556                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  9557  0B28  0870               	movf	___fttol@f1,w
  9558  0B29  00F4               	movwf	??___fttol
  9559  0B2A  0871               	movf	___fttol@f1+1,w
  9560  0B2B  00F5               	movwf	??___fttol+1
  9561  0B2C  0872               	movf	___fttol@f1+2,w
  9562  0B2D  00F6               	movwf	??___fttol+2
  9563  0B2E  1003               	clrc
  9564  0B2F  0D75               	rlf	??___fttol+1,w
  9565  0B30  0D76               	rlf	??___fttol+2,w
  9566  0B31  00F7               	movwf	??___fttol+3
  9567  0B32  0877               	movf	??___fttol+3,w
  9568  0B33  00FD               	movwf	___fttol@exp1
  9569  0B34  087D               	movf	___fttol@exp1,w
  9570  0B35  1D03               	btfss	3,2
  9571  0B36  2B40               	goto	l2739
  9572  0B37  3000               	movlw	0
  9573  0B38  00F3               	movwf	?___fttol+3
  9574  0B39  3000               	movlw	0
  9575  0B3A  00F2               	movwf	?___fttol+2
  9576  0B3B  3000               	movlw	0
  9577  0B3C  00F1               	movwf	?___fttol+1
  9578  0B3D  3000               	movlw	0
  9579  0B3E  00F0               	movwf	?___fttol
  9580  0B3F  0008               	return
  9581  0B40                     l2739:	
  9582  0B40  0870               	movf	___fttol@f1,w
  9583  0B41  00F4               	movwf	??___fttol
  9584  0B42  0871               	movf	___fttol@f1+1,w
  9585  0B43  00F5               	movwf	??___fttol+1
  9586  0B44  0872               	movf	___fttol@f1+2,w
  9587  0B45  00F6               	movwf	??___fttol+2
  9588  0B46  3017               	movlw	23
  9589  0B47                     u3055:	
  9590  0B47  36F6               	lsrf	??___fttol+2,f
  9591  0B48  0CF5               	rrf	??___fttol+1,f
  9592  0B49  0CF4               	rrf	??___fttol,f
  9593  0B4A  0B89               	decfsz	9,f
  9594  0B4B  2B47               	goto	u3055
  9595  0B4C  0874               	movf	??___fttol,w
  9596  0B4D  00F7               	movwf	??___fttol+3
  9597  0B4E  0877               	movf	??___fttol+3,w
  9598  0B4F  00F8               	movwf	___fttol@sign1
  9599  0B50  17F1               	bsf	___fttol@f1+1,7
  9600  0B51  30FF               	movlw	255
  9601  0B52  05F0               	andwf	___fttol@f1,f
  9602  0B53  30FF               	movlw	255
  9603  0B54  05F1               	andwf	___fttol@f1+1,f
  9604  0B55  3000               	movlw	0
  9605  0B56  05F2               	andwf	___fttol@f1+2,f
  9606  0B57  0870               	movf	___fttol@f1,w
  9607  0B58  00F9               	movwf	___fttol@lval
  9608  0B59  0871               	movf	___fttol@f1+1,w
  9609  0B5A  00FA               	movwf	___fttol@lval+1
  9610  0B5B  0872               	movf	___fttol@f1+2,w
  9611  0B5C  00FB               	movwf	___fttol@lval+2
  9612  0B5D  01FC               	clrf	___fttol@lval+3
  9613  0B5E  308E               	movlw	142
  9614  0B5F  02FD               	subwf	___fttol@exp1,f
  9615  0B60  1FFD               	btfss	___fttol@exp1,7
  9616  0B61  2B7E               	goto	l2759
  9617  0B62  087D               	movf	___fttol@exp1,w
  9618  0B63  3A80               	xorlw	128
  9619  0B64  3E8F               	addlw	143
  9620  0B65  1803               	skipnc
  9621  0B66  2B70               	goto	l2757
  9622  0B67  3000               	movlw	0
  9623  0B68  00F3               	movwf	?___fttol+3
  9624  0B69  3000               	movlw	0
  9625  0B6A  00F2               	movwf	?___fttol+2
  9626  0B6B  3000               	movlw	0
  9627  0B6C  00F1               	movwf	?___fttol+1
  9628  0B6D  3000               	movlw	0
  9629  0B6E  00F0               	movwf	?___fttol
  9630  0B6F  0008               	return
  9631  0B70                     l2757:	
  9632  0B70  3001               	movlw	1
  9633  0B71                     u3085:	
  9634  0B71  36FC               	lsrf	___fttol@lval+3,f
  9635  0B72  0CFB               	rrf	___fttol@lval+2,f
  9636  0B73  0CFA               	rrf	___fttol@lval+1,f
  9637  0B74  0CF9               	rrf	___fttol@lval,f
  9638  0B75  0B89               	decfsz	9,f
  9639  0B76  2B71               	goto	u3085
  9640  0B77  3001               	movlw	1
  9641  0B78  00F4               	movwf	??___fttol
  9642  0B79  0874               	movf	??___fttol,w
  9643  0B7A  07FD               	addwf	___fttol@exp1,f
  9644  0B7B  1903               	btfsc	3,2
  9645  0B7C  2B97               	goto	l2767
  9646  0B7D  2B70               	goto	l2757
  9647  0B7E                     l2759:	
  9648  0B7E  3018               	movlw	24
  9649  0B7F  027D               	subwf	___fttol@exp1,w
  9650  0B80  1C03               	skipc
  9651  0B81  2B94               	goto	l653
  9652  0B82  3000               	movlw	0
  9653  0B83  00F3               	movwf	?___fttol+3
  9654  0B84  3000               	movlw	0
  9655  0B85  00F2               	movwf	?___fttol+2
  9656  0B86  3000               	movlw	0
  9657  0B87  00F1               	movwf	?___fttol+1
  9658  0B88  3000               	movlw	0
  9659  0B89  00F0               	movwf	?___fttol
  9660  0B8A  0008               	return
  9661  0B8B                     l2765:	
  9662  0B8B  3001               	movlw	1
  9663  0B8C                     u3115:	
  9664  0B8C  35F9               	lslf	___fttol@lval,f
  9665  0B8D  0DFA               	rlf	___fttol@lval+1,f
  9666  0B8E  0DFB               	rlf	___fttol@lval+2,f
  9667  0B8F  0DFC               	rlf	___fttol@lval+3,f
  9668  0B90  0B89               	decfsz	9,f
  9669  0B91  2B8C               	goto	u3115
  9670  0B92  3001               	movlw	1
  9671  0B93  02FD               	subwf	___fttol@exp1,f
  9672  0B94                     l653:	
  9673  0B94  087D               	movf	___fttol@exp1,w
  9674  0B95  1D03               	btfss	3,2
  9675  0B96  2B8B               	goto	l2765
  9676  0B97                     l2767:	
  9677  0B97  0878               	movf	___fttol@sign1,w
  9678  0B98  1903               	btfsc	3,2
  9679  0B99  2BA5               	goto	l2771
  9680  0B9A  09F9               	comf	___fttol@lval,f
  9681  0B9B  09FA               	comf	___fttol@lval+1,f
  9682  0B9C  09FB               	comf	___fttol@lval+2,f
  9683  0B9D  09FC               	comf	___fttol@lval+3,f
  9684  0B9E  0AF9               	incf	___fttol@lval,f
  9685  0B9F  1903               	skipnz
  9686  0BA0  0AFA               	incf	___fttol@lval+1,f
  9687  0BA1  1903               	skipnz
  9688  0BA2  0AFB               	incf	___fttol@lval+2,f
  9689  0BA3  1903               	skipnz
  9690  0BA4  0AFC               	incf	___fttol@lval+3,f
  9691  0BA5                     l2771:	
  9692  0BA5  087C               	movf	___fttol@lval+3,w
  9693  0BA6  00F3               	movwf	?___fttol+3
  9694  0BA7  087B               	movf	___fttol@lval+2,w
  9695  0BA8  00F2               	movwf	?___fttol+2
  9696  0BA9  087A               	movf	___fttol@lval+1,w
  9697  0BAA  00F1               	movwf	?___fttol+1
  9698  0BAB  0879               	movf	___fttol@lval,w
  9699  0BAC  00F0               	movwf	?___fttol
  9700  0BAD  0008               	return
  9701  0BAE                     __end_of___fttol:	
  9702                           
  9703                           	psect	text18
  9704  090A                     __ptext18:	
  9705 ;; *************** function _SYSTEM_Initialize *****************
  9706 ;; Defined at:
  9707 ;;		line 71 in file "system.c"
  9708 ;; Parameters:    Size  Location     Type
  9709 ;;		None
  9710 ;; Auto vars:     Size  Location     Type
  9711 ;;		None
  9712 ;; Return value:  Size  Location     Type
  9713 ;;                  1    wreg      void 
  9714 ;; Registers used:
  9715 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9716 ;; Tracked objects:
  9717 ;;		On entry : 0/0
  9718 ;;		On exit  : 0/0
  9719 ;;		Unchanged: 0/0
  9720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9723 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9724 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9725 ;;Total ram usage:        3 bytes
  9726 ;; Hardware stack levels used:    1
  9727 ;; Hardware stack levels required when called:    3
  9728 ;; This function calls:
  9729 ;;		_ADCC_Initialize
  9730 ;;		_InitCustomChars
  9731 ;;		_LCD_Clear
  9732 ;;		_LCD_Init
  9733 ;;		_OSCILLATOR_Initialize
  9734 ;;		_PIN_MANAGER_Initialize
  9735 ;;		_PWM6_Initialize
  9736 ;;		_TMR2_Initialize
  9737 ;; This function is called by:
  9738 ;;		_main
  9739 ;; This function uses a non-reentrant model
  9740 ;;
  9741                           
  9742                           
  9743                           ;psect for function _SYSTEM_Initialize
  9744  090A                     _SYSTEM_Initialize:	
  9745                           
  9746                           ;system.c: 73: PIN_MANAGER_Initialize();
  9747                           
  9748                           ;incstack = 0
  9749                           ; Regs used in _SYSTEM_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9750  090A  3188  201F  3189   	fcall	_PIN_MANAGER_Initialize
  9751                           
  9752                           ;system.c: 74: OSCILLATOR_Initialize();
  9753  090D  3196  265D  3189   	fcall	_OSCILLATOR_Initialize
  9754                           
  9755                           ;system.c: 75: FVRCON = 0x00;
  9756  0910  0032               	movlb	18	; select bank18
  9757  0911  018C               	clrf	12	;volatile
  9758                           
  9759                           ;system.c: 76: ADCC_Initialize();
  9760  0912  3197  2725  3189   	fcall	_ADCC_Initialize
  9761                           
  9762                           ;system.c: 77: PWM6_Initialize();
  9763  0915  3196  2666  3189   	fcall	_PWM6_Initialize
  9764                           
  9765                           ;system.c: 79: TMR2_Initialize();
  9766  0918  3196  2695  3189   	fcall	_TMR2_Initialize
  9767                           
  9768                           ;system.c: 80: LCD_Init(0X00);
  9769  091B  3000               	movlw	0
  9770  091C  318B  23AE  3189   	fcall	_LCD_Init
  9771                           
  9772                           ;system.c: 81: _delay((unsigned long)((200)*(32000000/4000.0)));
  9773  091F  3009               	movlw	9
  9774  0920  00FA               	movwf	??_SYSTEM_Initialize+2
  9775  0921  301E               	movlw	30
  9776  0922  00F9               	movwf	??_SYSTEM_Initialize+1
  9777  0923  30EB               	movlw	235
  9778  0924  00F8               	movwf	??_SYSTEM_Initialize
  9779  0925                     u3797:	
  9780  0925  0BF8               	decfsz	??_SYSTEM_Initialize,f
  9781  0926  2925               	goto	u3797
  9782  0927  0BF9               	decfsz	??_SYSTEM_Initialize+1,f
  9783  0928  2925               	goto	u3797
  9784  0929  0BFA               	decfsz	??_SYSTEM_Initialize+2,f
  9785  092A  2925               	goto	u3797
  9786  092B  0000               	nop
  9787                           
  9788                           ;system.c: 82: LCD_Clear();
  9789  092C  3196  2655  3189   	fcall	_LCD_Clear
  9790                           
  9791                           ;system.c: 83: _delay((unsigned long)((100)*(32000000/4000.0)));
  9792  092F  3005               	movlw	5
  9793  0930  00FA               	movwf	??_SYSTEM_Initialize+2
  9794  0931  300F               	movlw	15
  9795  0932  00F9               	movwf	??_SYSTEM_Initialize+1
  9796  0933  30F4               	movlw	244
  9797  0934  00F8               	movwf	??_SYSTEM_Initialize
  9798  0935                     u3807:	
  9799  0935  0BF8               	decfsz	??_SYSTEM_Initialize,f
  9800  0936  2935               	goto	u3807
  9801  0937  0BF9               	decfsz	??_SYSTEM_Initialize+1,f
  9802  0938  2935               	goto	u3807
  9803  0939  0BFA               	decfsz	??_SYSTEM_Initialize+2,f
  9804  093A  2935               	goto	u3807
  9805                           
  9806                           ;system.c: 84: InitCustomChars();
  9807  093B  3197  277A  3189   	fcall	_InitCustomChars
  9808                           
  9809                           ;system.c: 85: _delay((unsigned long)((200)*(32000000/4000.0)));
  9810  093E  3009               	movlw	9
  9811  093F  00FA               	movwf	??_SYSTEM_Initialize+2
  9812  0940  301E               	movlw	30
  9813  0941  00F9               	movwf	??_SYSTEM_Initialize+1
  9814  0942  30EB               	movlw	235
  9815  0943  00F8               	movwf	??_SYSTEM_Initialize
  9816  0944                     u3817:	
  9817  0944  0BF8               	decfsz	??_SYSTEM_Initialize,f
  9818  0945  2944               	goto	u3817
  9819  0946  0BF9               	decfsz	??_SYSTEM_Initialize+1,f
  9820  0947  2944               	goto	u3817
  9821  0948  0BFA               	decfsz	??_SYSTEM_Initialize+2,f
  9822  0949  2944               	goto	u3817
  9823  094A  0000               	nop
  9824  094B  0008               	return
  9825  094C                     __end_of_SYSTEM_Initialize:	
  9826                           
  9827                           	psect	text19
  9828  1695                     __ptext19:	
  9829 ;; *************** function _TMR2_Initialize *****************
  9830 ;; Defined at:
  9831 ;;		line 3 in file "tmr2.c"
  9832 ;; Parameters:    Size  Location     Type
  9833 ;;		None
  9834 ;; Auto vars:     Size  Location     Type
  9835 ;;		None
  9836 ;; Return value:  Size  Location     Type
  9837 ;;                  1    wreg      void 
  9838 ;; Registers used:
  9839 ;;		wreg, status,2
  9840 ;; Tracked objects:
  9841 ;;		On entry : 0/0
  9842 ;;		On exit  : 0/0
  9843 ;;		Unchanged: 0/0
  9844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9848 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9849 ;;Total ram usage:        0 bytes
  9850 ;; Hardware stack levels used:    1
  9851 ;; This function calls:
  9852 ;;		Nothing
  9853 ;; This function is called by:
  9854 ;;		_SYSTEM_Initialize
  9855 ;; This function uses a non-reentrant model
  9856 ;;
  9857                           
  9858                           
  9859                           ;psect for function _TMR2_Initialize
  9860  1695                     _TMR2_Initialize:	
  9861                           
  9862                           ;tmr2.c: 5: T2CON = 0x00;
  9863                           
  9864                           ;incstack = 0
  9865                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  9866  1695  0025               	movlb	5	; select bank5
  9867  1696  018E               	clrf	14	;volatile
  9868                           
  9869                           ;tmr2.c: 7: T2CLKCON = 0x01;
  9870  1697  3001               	movlw	1
  9871  1698  0090               	movwf	16	;volatile
  9872                           
  9873                           ;tmr2.c: 9: T2HLT = 0x00;
  9874  1699  018F               	clrf	15	;volatile
  9875                           
  9876                           ;tmr2.c: 11: T2RST = 0x00;
  9877  169A  0191               	clrf	17	;volatile
  9878                           
  9879                           ;tmr2.c: 13: T2PR = 0xFF;
  9880  169B  30FF               	movlw	255
  9881  169C  008D               	movwf	13	;volatile
  9882                           
  9883                           ;tmr2.c: 15: T2TMR = 0x00;
  9884  169D  018C               	clrf	12	;volatile
  9885                           
  9886                           ;tmr2.c: 17: PIR4bits.TMR2IF = 0;
  9887  169E  002E               	movlb	14	; select bank14
  9888  169F  1090               	bcf	16,1	;volatile
  9889                           
  9890                           ;tmr2.c: 19: T2CONbits.TMR2ON = 1;
  9891  16A0  0025               	movlb	5	; select bank5
  9892  16A1  178E               	bsf	14,7	;volatile
  9893  16A2  0008               	return
  9894  16A3                     __end_of_TMR2_Initialize:	
  9895                           
  9896                           	psect	text20
  9897  1666                     __ptext20:	
  9898 ;; *************** function _PWM6_Initialize *****************
  9899 ;; Defined at:
  9900 ;;		line 3 in file "pwm6.c"
  9901 ;; Parameters:    Size  Location     Type
  9902 ;;		None
  9903 ;; Auto vars:     Size  Location     Type
  9904 ;;		None
  9905 ;; Return value:  Size  Location     Type
  9906 ;;                  1    wreg      void 
  9907 ;; Registers used:
  9908 ;;		wreg, status,2, status,0
  9909 ;; Tracked objects:
  9910 ;;		On entry : 0/0
  9911 ;;		On exit  : 0/0
  9912 ;;		Unchanged: 0/0
  9913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9917 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9918 ;;Total ram usage:        0 bytes
  9919 ;; Hardware stack levels used:    1
  9920 ;; This function calls:
  9921 ;;		Nothing
  9922 ;; This function is called by:
  9923 ;;		_SYSTEM_Initialize
  9924 ;; This function uses a non-reentrant model
  9925 ;;
  9926                           
  9927                           
  9928                           ;psect for function _PWM6_Initialize
  9929  1666                     _PWM6_Initialize:	
  9930                           
  9931                           ;pwm6.c: 5: PWM6CON = 0x80;
  9932                           
  9933                           ;incstack = 0
  9934                           ; Regs used in _PWM6_Initialize: [wreg+status,2+status,0]
  9935  1666  3080               	movlw	128
  9936  1667  0027               	movlb	7	; select bank7
  9937  1668  008E               	movwf	14	;volatile
  9938                           
  9939                           ;pwm6.c: 7: PWM6DCH = 0x00;
  9940  1669  018D               	clrf	13	;volatile
  9941                           
  9942                           ;pwm6.c: 9: PWM6DCL = 0x00;
  9943  166A  018C               	clrf	12	;volatile
  9944                           
  9945                           ;pwm6.c: 11: CCPTMRS1bits.P6TSEL = 0x1;
  9946  166B  0024               	movlb	4	; select bank4
  9947  166C  081F               	movf	31,w	;volatile
  9948  166D  39F3               	andlw	-13
  9949  166E  3804               	iorlw	4
  9950  166F  009F               	movwf	31	;volatile
  9951  1670  0008               	return
  9952  1671                     __end_of_PWM6_Initialize:	
  9953                           
  9954                           	psect	text21
  9955  081F                     __ptext21:	
  9956 ;; *************** function _PIN_MANAGER_Initialize *****************
  9957 ;; Defined at:
  9958 ;;		line 5 in file "pin_manager.c"
  9959 ;; Parameters:    Size  Location     Type
  9960 ;;		None
  9961 ;; Auto vars:     Size  Location     Type
  9962 ;;  state           1    0[COMMON] unsigned char 
  9963 ;; Return value:  Size  Location     Type
  9964 ;;                  1    wreg      void 
  9965 ;; Registers used:
  9966 ;;		wreg, status,2
  9967 ;; Tracked objects:
  9968 ;;		On entry : 0/0
  9969 ;;		On exit  : 0/0
  9970 ;;		Unchanged: 0/0
  9971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9973 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9975 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9976 ;;Total ram usage:        1 bytes
  9977 ;; Hardware stack levels used:    1
  9978 ;; This function calls:
  9979 ;;		Nothing
  9980 ;; This function is called by:
  9981 ;;		_SYSTEM_Initialize
  9982 ;; This function uses a non-reentrant model
  9983 ;;
  9984                           
  9985                           
  9986                           ;psect for function _PIN_MANAGER_Initialize
  9987  081F                     _PIN_MANAGER_Initialize:	
  9988                           
  9989                           ;pin_manager.c: 7: LATA = 0x00;
  9990                           
  9991                           ;incstack = 0
  9992                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  9993  081F  0020               	movlb	0	; select bank0
  9994  0820  0196               	clrf	22	;volatile
  9995                           
  9996                           ;pin_manager.c: 8: LATB = 0x00;
  9997  0821  0197               	clrf	23	;volatile
  9998                           
  9999                           ;pin_manager.c: 9: LATC = 0x00;
 10000  0822  0198               	clrf	24	;volatile
 10001                           
 10002                           ;pin_manager.c: 11: WPUA = 0x02;
 10003  0823  3002               	movlw	2
 10004  0824  003E               	movlb	30	; select bank30
 10005  0825  00B9               	movwf	57	;volatile
 10006                           
 10007                           ;pin_manager.c: 12: WPUB = 0x00;
 10008  0826  01C4               	clrf	68	;volatile
 10009                           
 10010                           ;pin_manager.c: 13: WPUC = 0x00;
 10011  0827  01CF               	clrf	79	;volatile
 10012                           
 10013                           ;pin_manager.c: 14: WPUE = 0x8;
 10014  0828  3008               	movlw	8
 10015  0829  00E5               	movwf	101	;volatile
 10016                           
 10017                           ;pin_manager.c: 16: TRISA = 0x02;
 10018  082A  3002               	movlw	2
 10019  082B  0020               	movlb	0	; select bank0
 10020  082C  0091               	movwf	17	;volatile
 10021                           
 10022                           ;pin_manager.c: 17: TRISA = 0x3A;
 10023  082D  303A               	movlw	58
 10024  082E  0091               	movwf	17	;volatile
 10025                           
 10026                           ;pin_manager.c: 18: TRISB = 0x0A;
 10027  082F  300A               	movlw	10
 10028  0830  0092               	movwf	18	;volatile
 10029                           
 10030                           ;pin_manager.c: 19: TRISC = 0x10;
 10031  0831  3010               	movlw	16
 10032  0832  0093               	movwf	19	;volatile
 10033                           
 10034                           ;pin_manager.c: 21: ANSELA = 0x3A;
 10035  0833  303A               	movlw	58
 10036  0834  003E               	movlb	30	; select bank30
 10037  0835  00B8               	movwf	56	;volatile
 10038                           
 10039                           ;pin_manager.c: 22: ANSELB = 0x0A;
 10040  0836  300A               	movlw	10
 10041  0837  00C3               	movwf	67	;volatile
 10042                           
 10043                           ;pin_manager.c: 23: ANSELC = 0x00;
 10044  0838  01CE               	clrf	78	;volatile
 10045                           
 10046                           ;pin_manager.c: 25: PIE0bits.IOCIE = 0;
 10047  0839  002E               	movlb	14	; select bank14
 10048  083A  1216               	bcf	22,4	;volatile
 10049                           
 10050                           ;pin_manager.c: 26: bool state = GIE;
 10051  083B  3000               	movlw	0
 10052  083C  1B8B               	btfsc	11,7	;volatile
 10053  083D  3001               	movlw	1
 10054  083E  00F0               	movwf	PIN_MANAGER_Initialize@state
 10055                           
 10056                           ;pin_manager.c: 27: GIE = 0;
 10057  083F  138B               	bcf	11,7	;volatile
 10058                           
 10059                           ;pin_manager.c: 28: PPSLOCK = 0x55;
 10060  0840  3055               	movlw	85
 10061  0841  003D               	movlb	29	; select bank29
 10062  0842  008F               	movwf	15	;volatile
 10063                           
 10064                           ;pin_manager.c: 29: PPSLOCK = 0xAA;
 10065  0843  30AA               	movlw	170
 10066  0844  008F               	movwf	15	;volatile
 10067                           
 10068                           ;pin_manager.c: 30: PPSLOCKbits.PPSLOCKED = 0x00;
 10069  0845  100F               	bcf	15,0	;volatile
 10070                           
 10071                           ;pin_manager.c: 33: RC2PPS = 0x000E;
 10072  0846  300E               	movlw	14
 10073  0847  003E               	movlb	30	; select bank30
 10074  0848  00A2               	movwf	34	;volatile
 10075                           
 10076                           ;pin_manager.c: 37: PPSLOCK = 0x55;
 10077  0849  3055               	movlw	85
 10078  084A  003D               	movlb	29	; select bank29
 10079  084B  008F               	movwf	15	;volatile
 10080                           
 10081                           ;pin_manager.c: 38: PPSLOCK = 0xAA;
 10082  084C  30AA               	movlw	170
 10083  084D  008F               	movwf	15	;volatile
 10084                           
 10085                           ;pin_manager.c: 39: PPSLOCKbits.PPSLOCKED = 0x01;
 10086  084E  140F               	bsf	15,0	;volatile
 10087                           
 10088                           ;pin_manager.c: 40: GIE = state;
 10089  084F  1C70               	btfss	PIN_MANAGER_Initialize@state,0
 10090  0850  2853               	goto	u2400
 10091  0851  178B               	bsf	11,7	;volatile
 10092  0852  0008               	return
 10093  0853                     u2400:	
 10094  0853  138B               	bcf	11,7	;volatile
 10095  0854  0008               	return
 10096  0855                     __end_of_PIN_MANAGER_Initialize:	
 10097                           
 10098                           	psect	text22
 10099  165D                     __ptext22:	
 10100 ;; *************** function _OSCILLATOR_Initialize *****************
 10101 ;; Defined at:
 10102 ;;		line 89 in file "system.c"
 10103 ;; Parameters:    Size  Location     Type
 10104 ;;		None
 10105 ;; Auto vars:     Size  Location     Type
 10106 ;;		None
 10107 ;; Return value:  Size  Location     Type
 10108 ;;                  1    wreg      void 
 10109 ;; Registers used:
 10110 ;;		wreg, status,2
 10111 ;; Tracked objects:
 10112 ;;		On entry : 0/0
 10113 ;;		On exit  : 0/0
 10114 ;;		Unchanged: 0/0
 10115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10119 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10120 ;;Total ram usage:        0 bytes
 10121 ;; Hardware stack levels used:    1
 10122 ;; This function calls:
 10123 ;;		Nothing
 10124 ;; This function is called by:
 10125 ;;		_SYSTEM_Initialize
 10126 ;; This function uses a non-reentrant model
 10127 ;;
 10128                           
 10129                           
 10130                           ;psect for function _OSCILLATOR_Initialize
 10131  165D                     _OSCILLATOR_Initialize:	
 10132                           
 10133                           ;system.c: 91: OSCCON1 = 0x60;
 10134                           
 10135                           ;incstack = 0
 10136                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 10137  165D  3060               	movlw	96
 10138  165E  0031               	movlb	17	; select bank17
 10139  165F  008D               	movwf	13	;volatile
 10140                           
 10141                           ;system.c: 92: OSCCON3 = 0x00;
 10142  1660  018F               	clrf	15	;volatile
 10143                           
 10144                           ;system.c: 93: OSCEN = 0x00;
 10145  1661  0191               	clrf	17	;volatile
 10146                           
 10147                           ;system.c: 94: OSCFRQ = 0x06;
 10148  1662  3006               	movlw	6
 10149  1663  0093               	movwf	19	;volatile
 10150                           
 10151                           ;system.c: 95: OSCTUNE = 0x00;
 10152  1664  0192               	clrf	18	;volatile
 10153  1665  0008               	return
 10154  1666                     __end_of_OSCILLATOR_Initialize:	
 10155                           
 10156                           	psect	text23
 10157  0BAE                     __ptext23:	
 10158 ;; *************** function _LCD_Init *****************
 10159 ;; Defined at:
 10160 ;;		line 154 in file "lcd.c"
 10161 ;; Parameters:    Size  Location     Type
 10162 ;;  style           1    wreg     unsigned char 
 10163 ;; Auto vars:     Size  Location     Type
 10164 ;;  style           1    7[COMMON] unsigned char 
 10165 ;; Return value:  Size  Location     Type
 10166 ;;                  1    wreg      void 
 10167 ;; Registers used:
 10168 ;;		wreg, status,2, status,0, pclath, cstack
 10169 ;; Tracked objects:
 10170 ;;		On entry : 0/0
 10171 ;;		On exit  : 0/0
 10172 ;;		Unchanged: 0/0
 10173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10175 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10176 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10177 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10178 ;;Total ram usage:        4 bytes
 10179 ;; Hardware stack levels used:    1
 10180 ;; Hardware stack levels required when called:    2
 10181 ;; This function calls:
 10182 ;;		_LCD_Cmd
 10183 ;;		_LCD_Port
 10184 ;; This function is called by:
 10185 ;;		_SYSTEM_Initialize
 10186 ;; This function uses a non-reentrant model
 10187 ;;
 10188                           
 10189                           
 10190                           ;psect for function _LCD_Init
 10191  0BAE                     _LCD_Init:	
 10192                           
 10193                           ;incstack = 0
 10194                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
 10195                           ;LCD_Init@style stored from wreg
 10196  0BAE  00F7               	movwf	LCD_Init@style
 10197                           
 10198                           ;lcd.c: 156: LCD_Port(0x00);
 10199  0BAF  3000               	movlw	0
 10200  0BB0  3196  26DB  318B   	fcall	_LCD_Port
 10201                           
 10202                           ;lcd.c: 158: _delay((unsigned long)((100)*(32000000/4000.0)));
 10203  0BB3  3005               	movlw	5
 10204  0BB4  00F6               	movwf	??_LCD_Init+2
 10205  0BB5  300F               	movlw	15
 10206  0BB6  00F5               	movwf	??_LCD_Init+1
 10207  0BB7  30F4               	movlw	244
 10208  0BB8  00F4               	movwf	??_LCD_Init
 10209  0BB9                     u3827:	
 10210  0BB9  0BF4               	decfsz	??_LCD_Init,f
 10211  0BBA  2BB9               	goto	u3827
 10212  0BBB  0BF5               	decfsz	??_LCD_Init+1,f
 10213  0BBC  2BB9               	goto	u3827
 10214  0BBD  0BF6               	decfsz	??_LCD_Init+2,f
 10215  0BBE  2BB9               	goto	u3827
 10216                           
 10217                           ;lcd.c: 160: LCD_Cmd(0x03);
 10218  0BBF  3003               	movlw	3
 10219  0BC0  3196  26B1  318B   	fcall	_LCD_Cmd
 10220                           
 10221                           ;lcd.c: 162: _delay((unsigned long)((10)*(32000000/4000.0)));
 10222  0BC3  3068               	movlw	104
 10223  0BC4  00F5               	movwf	??_LCD_Init+1
 10224  0BC5  30E4               	movlw	228
 10225  0BC6  00F4               	movwf	??_LCD_Init
 10226  0BC7                     u3837:	
 10227  0BC7  0BF4               	decfsz	??_LCD_Init,f
 10228  0BC8  2BC7               	goto	u3837
 10229  0BC9  0BF5               	decfsz	??_LCD_Init+1,f
 10230  0BCA  2BC7               	goto	u3837
 10231  0BCB  0000               	nop
 10232                           
 10233                           ;lcd.c: 164: LCD_Cmd(0x03);
 10234  0BCC  3003               	movlw	3
 10235  0BCD  3196  26B1  318B   	fcall	_LCD_Cmd
 10236                           
 10237                           ;lcd.c: 166: _delay((unsigned long)((120)*(32000000/4000000.0)));
 10238  0BD0  3089               	movlw	137
 10239  0BD1  00F4               	movwf	??_LCD_Init
 10240  0BD2                     u3847:	
 10241  0BD2  3200               	nop2
 10242  0BD3  3200               	nop2
 10243  0BD4  0BF4               	decfsz	??_LCD_Init,f
 10244  0BD5  2BD2               	goto	u3847
 10245                           
 10246                           ;lcd.c: 168: LCD_Cmd(0x03);
 10247  0BD6  3003               	movlw	3
 10248  0BD7  3196  26B1  318B   	fcall	_LCD_Cmd
 10249                           
 10250                           ;lcd.c: 170: _delay((unsigned long)((120)*(32000000/4000000.0)));
 10251  0BDA  3089               	movlw	137
 10252  0BDB  00F4               	movwf	??_LCD_Init
 10253  0BDC                     u3857:	
 10254  0BDC  3200               	nop2
 10255  0BDD  3200               	nop2
 10256  0BDE  0BF4               	decfsz	??_LCD_Init,f
 10257  0BDF  2BDC               	goto	u3857
 10258                           
 10259                           ;lcd.c: 172: LCD_Cmd(0x02);
 10260  0BE0  3002               	movlw	2
 10261  0BE1  3196  26B1  318B   	fcall	_LCD_Cmd
 10262                           
 10263                           ;lcd.c: 174: _delay((unsigned long)((120)*(32000000/4000000.0)));
 10264  0BE4  3089               	movlw	137
 10265  0BE5  00F4               	movwf	??_LCD_Init
 10266  0BE6                     u3867:	
 10267  0BE6  3200               	nop2
 10268  0BE7  3200               	nop2
 10269  0BE8  0BF4               	decfsz	??_LCD_Init,f
 10270  0BE9  2BE6               	goto	u3867
 10271                           
 10272                           ;lcd.c: 176: LCD_Cmd(0x2);
 10273  0BEA  3002               	movlw	2
 10274  0BEB  3196  26B1  318B   	fcall	_LCD_Cmd
 10275                           
 10276                           ;lcd.c: 178: LCD_Cmd(0x8);
 10277  0BEE  3008               	movlw	8
 10278  0BEF  3196  26B1  318B   	fcall	_LCD_Cmd
 10279                           
 10280                           ;lcd.c: 180: _delay((unsigned long)((120)*(32000000/4000000.0)));
 10281  0BF2  3089               	movlw	137
 10282  0BF3  00F4               	movwf	??_LCD_Init
 10283  0BF4                     u3877:	
 10284  0BF4  3200               	nop2
 10285  0BF5  3200               	nop2
 10286  0BF6  0BF4               	decfsz	??_LCD_Init,f
 10287  0BF7  2BF4               	goto	u3877
 10288                           
 10289                           ;lcd.c: 182: LCD_Cmd(0x0);
 10290  0BF8  3000               	movlw	0
 10291  0BF9  3196  26B1  318B   	fcall	_LCD_Cmd
 10292                           
 10293                           ;lcd.c: 184: LCD_Cmd(0x8);
 10294  0BFC  3008               	movlw	8
 10295  0BFD  3196  26B1  318B   	fcall	_LCD_Cmd
 10296                           
 10297                           ;lcd.c: 186: _delay((unsigned long)((120)*(32000000/4000000.0)));
 10298  0C00  3089               	movlw	137
 10299  0C01  00F4               	movwf	??_LCD_Init
 10300  0C02                     u3887:	
 10301  0C02  3200               	nop2
 10302  0C03  3200               	nop2
 10303  0C04  0BF4               	decfsz	??_LCD_Init,f
 10304  0C05  2C02               	goto	u3887
 10305                           
 10306                           ;lcd.c: 188: LCD_Cmd(0x0);
 10307  0C06  3000               	movlw	0
 10308  0C07  3196  26B1  318B   	fcall	_LCD_Cmd
 10309                           
 10310                           ;lcd.c: 190: LCD_Cmd(0x1);
 10311  0C0A  3001               	movlw	1
 10312  0C0B  3196  26B1  318B   	fcall	_LCD_Cmd
 10313                           
 10314                           ;lcd.c: 192: _delay((unsigned long)((5)*(32000000/4000.0)));
 10315  0C0E  3034               	movlw	52
 10316  0C0F  00F5               	movwf	??_LCD_Init+1
 10317  0C10  30F1               	movlw	241
 10318  0C11  00F4               	movwf	??_LCD_Init
 10319  0C12                     u3897:	
 10320  0C12  0BF4               	decfsz	??_LCD_Init,f
 10321  0C13  2C12               	goto	u3897
 10322  0C14  0BF5               	decfsz	??_LCD_Init+1,f
 10323  0C15  2C12               	goto	u3897
 10324  0C16  3200               	nop2
 10325                           
 10326                           ;lcd.c: 194: LCD_Cmd(0x0);
 10327  0C17  3000               	movlw	0
 10328  0C18  3196  26B1  318B   	fcall	_LCD_Cmd
 10329                           
 10330                           ;lcd.c: 196: LCD_Cmd(0x6);
 10331  0C1B  3006               	movlw	6
 10332  0C1C  3196  26B1  318B   	fcall	_LCD_Cmd
 10333                           
 10334                           ;lcd.c: 198: _delay((unsigned long)((120)*(32000000/4000000.0)));
 10335  0C1F  3089               	movlw	137
 10336  0C20  00F4               	movwf	??_LCD_Init
 10337  0C21                     u3907:	
 10338  0C21  3200               	nop2
 10339  0C22  3200               	nop2
 10340  0C23  0BF4               	decfsz	??_LCD_Init,f
 10341  0C24  2C21               	goto	u3907
 10342                           
 10343                           ;lcd.c: 200: LCD_Cmd(0x0);
 10344  0C25  3000               	movlw	0
 10345  0C26  3196  26B1  318B   	fcall	_LCD_Cmd
 10346                           
 10347                           ;lcd.c: 202: LCD_Cmd(0xc|style);
 10348  0C29  0877               	movf	LCD_Init@style,w
 10349  0C2A  380C               	iorlw	12
 10350  0C2B  3196  26B1  318B   	fcall	_LCD_Cmd
 10351                           
 10352                           ;lcd.c: 204: _delay((unsigned long)((120)*(32000000/4000000.0)));
 10353  0C2E  3089               	movlw	137
 10354  0C2F  00F4               	movwf	??_LCD_Init
 10355  0C30                     u3917:	
 10356  0C30  3200               	nop2
 10357  0C31  3200               	nop2
 10358  0C32  0BF4               	decfsz	??_LCD_Init,f
 10359  0C33  2C30               	goto	u3917
 10360  0C34  0008               	return
 10361  0C35                     __end_of_LCD_Init:	
 10362                           
 10363                           	psect	text24
 10364  1655                     __ptext24:	
 10365 ;; *************** function _LCD_Clear *****************
 10366 ;; Defined at:
 10367 ;;		line 75 in file "lcd.c"
 10368 ;; Parameters:    Size  Location     Type
 10369 ;;		None
 10370 ;; Auto vars:     Size  Location     Type
 10371 ;;		None
 10372 ;; Return value:  Size  Location     Type
 10373 ;;                  1    wreg      void 
 10374 ;; Registers used:
 10375 ;;		wreg, status,2, status,0, pclath, cstack
 10376 ;; Tracked objects:
 10377 ;;		On entry : 0/0
 10378 ;;		On exit  : 0/0
 10379 ;;		Unchanged: 0/0
 10380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10384 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10385 ;;Total ram usage:        0 bytes
 10386 ;; Hardware stack levels used:    1
 10387 ;; Hardware stack levels required when called:    2
 10388 ;; This function calls:
 10389 ;;		_LCD_Cmd
 10390 ;; This function is called by:
 10391 ;;		_SYSTEM_Initialize
 10392 ;;		_main
 10393 ;; This function uses a non-reentrant model
 10394 ;;
 10395                           
 10396                           
 10397                           ;psect for function _LCD_Clear
 10398  1655                     _LCD_Clear:	
 10399                           
 10400                           ;lcd.c: 77: LCD_Cmd(0);
 10401                           
 10402                           ;incstack = 0
 10403                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
 10404  1655  3000               	movlw	0
 10405  1656  3196  26B1  3196   	fcall	_LCD_Cmd
 10406                           
 10407                           ;lcd.c: 78: LCD_Cmd(1);
 10408  1659  3001               	movlw	1
 10409  165A  3196  26B1         	fcall	_LCD_Cmd
 10410  165C  0008               	return
 10411  165D                     __end_of_LCD_Clear:	
 10412                           
 10413                           	psect	text25
 10414  177A                     __ptext25:	
 10415 ;; *************** function _InitCustomChars *****************
 10416 ;; Defined at:
 10417 ;;		line 29 in file "lcd.c"
 10418 ;; Parameters:    Size  Location     Type
 10419 ;;		None
 10420 ;; Auto vars:     Size  Location     Type
 10421 ;;  i               1    6[COMMON] unsigned char 
 10422 ;; Return value:  Size  Location     Type
 10423 ;;                  1    wreg      void 
 10424 ;; Registers used:
 10425 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10426 ;; Tracked objects:
 10427 ;;		On entry : 0/0
 10428 ;;		On exit  : 0/0
 10429 ;;		Unchanged: 0/0
 10430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10432 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10433 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10434 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10435 ;;Total ram usage:        2 bytes
 10436 ;; Hardware stack levels used:    1
 10437 ;; Hardware stack levels required when called:    2
 10438 ;; This function calls:
 10439 ;;		_LCD_Cmd
 10440 ;;		_LCD_Write_Char
 10441 ;; This function is called by:
 10442 ;;		_SYSTEM_Initialize
 10443 ;; This function uses a non-reentrant model
 10444 ;;
 10445                           
 10446                           
 10447                           ;psect for function _InitCustomChars
 10448  177A                     _InitCustomChars:	
 10449                           
 10450                           ;lcd.c: 31: uint8_t i;
 10451                           ;lcd.c: 32: LCD_Cmd(0x04);
 10452                           
 10453                           ;incstack = 0
 10454                           ; Regs used in _InitCustomChars: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10455  177A  3004               	movlw	4
 10456  177B  3196  26B1  3197   	fcall	_LCD_Cmd
 10457                           
 10458                           ;lcd.c: 33: LCD_Cmd(0x00);
 10459  177E  3000               	movlw	0
 10460  177F  3196  26B1  3197   	fcall	_LCD_Cmd
 10461                           
 10462                           ;lcd.c: 34: for (i = 0; i < sizeof(__cgram) ; i++)
 10463  1782  01F6               	clrf	InitCustomChars@i
 10464  1783  3018               	movlw	24
 10465  1784  0276               	subwf	InitCustomChars@i,w
 10466  1785  1803               	btfsc	3,0
 10467  1786  2F98               	goto	l2297
 10468  1787                     l2291:	
 10469                           
 10470                           ;lcd.c: 35: LCD_Write_Char(__cgram[i]);
 10471  1787  0876               	movf	InitCustomChars@i,w
 10472  1788  3E20               	addlw	(low (___cgram| (0+256)))& (0+255)
 10473  1789  0086               	movwf	6
 10474  178A  3001               	movlw	1	; select bank2/3
 10475  178B  0087               	movwf	7
 10476  178C  0801               	movf	1,w
 10477  178D  3197  27A0  3197   	fcall	_LCD_Write_Char
 10478  1790  3001               	movlw	1
 10479  1791  00F5               	movwf	??_InitCustomChars
 10480  1792  0875               	movf	??_InitCustomChars,w
 10481  1793  07F6               	addwf	InitCustomChars@i,f
 10482  1794  3018               	movlw	24
 10483  1795  0276               	subwf	InitCustomChars@i,w
 10484  1796  1C03               	skipc
 10485  1797  2F87               	goto	l2291
 10486  1798                     l2297:	
 10487                           
 10488                           ;lcd.c: 36: LCD_Cmd(0);
 10489  1798  3000               	movlw	0
 10490  1799  3196  26B1  3197   	fcall	_LCD_Cmd
 10491                           
 10492                           ;lcd.c: 37: LCD_Cmd(2);
 10493  179C  3002               	movlw	2
 10494  179D  3196  26B1         	fcall	_LCD_Cmd
 10495  179F  0008               	return
 10496  17A0                     __end_of_InitCustomChars:	
 10497                           
 10498                           	psect	text26
 10499  1725                     __ptext26:	
 10500 ;; *************** function _ADCC_Initialize *****************
 10501 ;; Defined at:
 10502 ;;		line 16 in file "adcc.c"
 10503 ;; Parameters:    Size  Location     Type
 10504 ;;		None
 10505 ;; Auto vars:     Size  Location     Type
 10506 ;;		None
 10507 ;; Return value:  Size  Location     Type
 10508 ;;                  1    wreg      void 
 10509 ;; Registers used:
 10510 ;;		wreg, status,2
 10511 ;; Tracked objects:
 10512 ;;		On entry : 0/0
 10513 ;;		On exit  : 0/0
 10514 ;;		Unchanged: 0/0
 10515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10519 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10520 ;;Total ram usage:        0 bytes
 10521 ;; Hardware stack levels used:    1
 10522 ;; This function calls:
 10523 ;;		Nothing
 10524 ;; This function is called by:
 10525 ;;		_SYSTEM_Initialize
 10526 ;; This function uses a non-reentrant model
 10527 ;;
 10528                           
 10529                           
 10530                           ;psect for function _ADCC_Initialize
 10531  1725                     _ADCC_Initialize:	
 10532                           
 10533                           ;adcc.c: 19: ADCON1 = 0x00;
 10534                           
 10535                           ;incstack = 0
 10536                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
 10537  1725  0021               	movlb	1	; select bank1
 10538  1726  0194               	clrf	20	;volatile
 10539                           
 10540                           ;adcc.c: 21: ADCON2 = 0x00;
 10541  1727  0195               	clrf	21	;volatile
 10542                           
 10543                           ;adcc.c: 23: ADCON3 = 0x00;
 10544  1728  0196               	clrf	22	;volatile
 10545                           
 10546                           ;adcc.c: 25: ADACT = 0x00;
 10547  1729  0199               	clrf	25	;volatile
 10548                           
 10549                           ;adcc.c: 27: ADSTAT = 0x00;
 10550  172A  0197               	clrf	23	;volatile
 10551                           
 10552                           ;adcc.c: 29: ADCLK = 0x3F;
 10553  172B  303F               	movlw	63
 10554  172C  0098               	movwf	24	;volatile
 10555                           
 10556                           ;adcc.c: 33: ADREF = 0x00;
 10557  172D  019A               	clrf	26	;volatile
 10558                           
 10559                           ;adcc.c: 35: ADCAP = 0x00;
 10560  172E  019B               	clrf	27	;volatile
 10561                           
 10562                           ;adcc.c: 38: ADPRE = 0x07;
 10563  172F  3007               	movlw	7
 10564  1730  009C               	movwf	28	;volatile
 10565                           
 10566                           ;adcc.c: 40: ADACQ = 0x00;
 10567  1731  019D               	clrf	29	;volatile
 10568                           
 10569                           ;adcc.c: 42: ADPCH = 0x00;
 10570  1732  019E               	clrf	30	;volatile
 10571                           
 10572                           ;adcc.c: 44: ADRPT = 0x00;
 10573  1733  0022               	movlb	2	; select bank2
 10574  1734  018D               	clrf	13	;volatile
 10575                           
 10576                           ;adcc.c: 46: ADLTHL = 0x00;
 10577  1735  018E               	clrf	14	;volatile
 10578                           
 10579                           ;adcc.c: 48: ADLTHH = 0x00;
 10580  1736  018F               	clrf	15	;volatile
 10581                           
 10582                           ;adcc.c: 50: ADUTHL = 0x00;
 10583  1737  0190               	clrf	16	;volatile
 10584                           
 10585                           ;adcc.c: 52: ADUTHH = 0x00;
 10586  1738  0191               	clrf	17	;volatile
 10587                           
 10588                           ;adcc.c: 54: ADSTPTL = 0x00;
 10589  1739  0192               	clrf	18	;volatile
 10590                           
 10591                           ;adcc.c: 56: ADSTPTH = 0x00;
 10592  173A  0193               	clrf	19	;volatile
 10593                           
 10594                           ;adcc.c: 59: ADCON0 = 0x84;
 10595  173B  3084               	movlw	132
 10596  173C  0021               	movlb	1	; select bank1
 10597  173D  0093               	movwf	19	;volatile
 10598  173E  0008               	return
 10599  173F                     __end_of_ADCC_Initialize:	
 10600                           
 10601                           	psect	text27
 10602  16C5                     __ptext27:	
 10603 ;; *************** function _PWM6_LoadDutyValue *****************
 10604 ;; Defined at:
 10605 ;;		line 14 in file "pwm6.c"
 10606 ;; Parameters:    Size  Location     Type
 10607 ;;  dutyCycle       2    0[COMMON] unsigned int 
 10608 ;; Auto vars:     Size  Location     Type
 10609 ;;		None
 10610 ;; Return value:  Size  Location     Type
 10611 ;;                  1    wreg      void 
 10612 ;; Registers used:
 10613 ;;		wreg, status,2, status,0
 10614 ;; Tracked objects:
 10615 ;;		On entry : 0/0
 10616 ;;		On exit  : 0/0
 10617 ;;		Unchanged: 0/0
 10618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10619 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10621 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10622 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10623 ;;Total ram usage:        4 bytes
 10624 ;; Hardware stack levels used:    1
 10625 ;; This function calls:
 10626 ;;		Nothing
 10627 ;; This function is called by:
 10628 ;;		_main
 10629 ;; This function uses a non-reentrant model
 10630 ;;
 10631                           
 10632                           
 10633                           ;psect for function _PWM6_LoadDutyValue
 10634  16C5                     _PWM6_LoadDutyValue:	
 10635                           
 10636                           ;pwm6.c: 16: PWM6DCH = (dutyCycle & 0x03FC)>>2;
 10637                           
 10638                           ;incstack = 0
 10639                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
 10640  16C5  0871               	movf	PWM6_LoadDutyValue@dutyCycle+1,w
 10641  16C6  00F3               	movwf	??_PWM6_LoadDutyValue+1
 10642  16C7  0870               	movf	PWM6_LoadDutyValue@dutyCycle,w
 10643  16C8  00F2               	movwf	??_PWM6_LoadDutyValue
 10644  16C9  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
 10645  16CA  0CF2               	rrf	??_PWM6_LoadDutyValue,f
 10646  16CB  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
 10647  16CC  0CF2               	rrf	??_PWM6_LoadDutyValue,f
 10648  16CD  0872               	movf	??_PWM6_LoadDutyValue,w
 10649  16CE  0027               	movlb	7	; select bank7
 10650  16CF  008D               	movwf	13	;volatile
 10651                           
 10652                           ;pwm6.c: 18: PWM6DCL = (dutyCycle & 0x0003)<<6;
 10653  16D0  0870               	movf	PWM6_LoadDutyValue@dutyCycle,w
 10654  16D1  3903               	andlw	3
 10655  16D2  00F2               	movwf	??_PWM6_LoadDutyValue
 10656  16D3  3005               	movlw	5
 10657  16D4                     u3035:	
 10658  16D4  35F2               	lslf	??_PWM6_LoadDutyValue,f
 10659  16D5  3EFF               	addlw	-1
 10660  16D6  1D03               	skipz
 10661  16D7  2ED4               	goto	u3035
 10662  16D8  3572               	lslf	??_PWM6_LoadDutyValue,w
 10663  16D9  008C               	movwf	12	;volatile
 10664  16DA  0008               	return
 10665  16DB                     __end_of_PWM6_LoadDutyValue:	
 10666                           
 10667                           	psect	text28
 10668  170B                     __ptext28:	
 10669 ;; *************** function _LCD_Write_String *****************
 10670 ;; Defined at:
 10671 ;;		line 239 in file "lcd.c"
 10672 ;; Parameters:    Size  Location     Type
 10673 ;;  a               2    5[COMMON] PTR const unsigned char 
 10674 ;;		 -> STR_30(10), STR_29(10), STR_28(11), STR_27(11), 
 10675 ;;		 -> STR_26(2), STR_25(2), STR_24(2), STR_23(2), 
 10676 ;;		 -> STR_22(2), STR_21(2), STR_20(2), STR_19(2), 
 10677 ;;		 -> STR_18(2), STR_17(2), STR_16(2), STR_15(2), 
 10678 ;;		 -> STR_14(2), STR_13(2), STR_12(2), STR_11(2), 
 10679 ;;		 -> STR_10(2), STR_9(2), STR_8(2), STR_7(2), 
 10680 ;;		 -> STR_6(2), STR_5(2), STR_4(2), STR_3(2), 
 10681 ;;		 -> STR_2(2), STR_1(2), 
 10682 ;; Auto vars:     Size  Location     Type
 10683 ;;  i               2    8[COMMON] int 
 10684 ;; Return value:  Size  Location     Type
 10685 ;;                  1    wreg      void 
 10686 ;; Registers used:
 10687 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10688 ;; Tracked objects:
 10689 ;;		On entry : 0/0
 10690 ;;		On exit  : 0/0
 10691 ;;		Unchanged: 0/0
 10692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10693 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10694 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10695 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10696 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10697 ;;Total ram usage:        5 bytes
 10698 ;; Hardware stack levels used:    1
 10699 ;; Hardware stack levels required when called:    2
 10700 ;; This function calls:
 10701 ;;		_LCD_Write_Char
 10702 ;; This function is called by:
 10703 ;;		_main
 10704 ;; This function uses a non-reentrant model
 10705 ;;
 10706                           
 10707                           
 10708                           ;psect for function _LCD_Write_String
 10709  170B                     _LCD_Write_String:	
 10710                           
 10711                           ;lcd.c: 241: int i;
 10712                           ;lcd.c: 242: for(i=0;a[i]!='\0';i++)
 10713                           
 10714                           ;incstack = 0
 10715                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10716  170B  01F8               	clrf	LCD_Write_String@i
 10717  170C  01F9               	clrf	LCD_Write_String@i+1
 10718  170D                     l2639:	
 10719  170D  0875               	movf	LCD_Write_String@a,w
 10720  170E  0778               	addwf	LCD_Write_String@i,w
 10721  170F  0084               	movwf	4
 10722  1710  0876               	movf	LCD_Write_String@a+1,w
 10723  1711  3D79               	addwfc	LCD_Write_String@i+1,w
 10724  1712  0085               	movwf	5
 10725  1713  0012               	moviw fsr0++
 10726  1714  1903               	btfsc	3,2
 10727  1715  0008               	return
 10728                           
 10729                           ;lcd.c: 243: LCD_Write_Char(a[i]);
 10730  1716  0875               	movf	LCD_Write_String@a,w
 10731  1717  0778               	addwf	LCD_Write_String@i,w
 10732  1718  0084               	movwf	4
 10733  1719  0876               	movf	LCD_Write_String@a+1,w
 10734  171A  3D79               	addwfc	LCD_Write_String@i+1,w
 10735  171B  0085               	movwf	5
 10736  171C  0800               	movf	0,w	;code access
 10737  171D  3197  27A0  3197   	fcall	_LCD_Write_Char
 10738  1720  3001               	movlw	1
 10739  1721  07F8               	addwf	LCD_Write_String@i,f
 10740  1722  3000               	movlw	0
 10741  1723  3DF9               	addwfc	LCD_Write_String@i+1,f
 10742  1724  2F0D               	goto	l2639
 10743  1725                     __end_of_LCD_Write_String:	
 10744                           
 10745                           	psect	text29
 10746  0E3F                     __ptext29:	
 10747 ;; *************** function _LCD_Write_Int *****************
 10748 ;; Defined at:
 10749 ;;		line 246 in file "lcd.c"
 10750 ;; Parameters:    Size  Location     Type
 10751 ;;  value           2    0[BANK0 ] int 
 10752 ;;  fieldLength     1    2[BANK0 ] char 
 10753 ;;  numPlaces       1    3[BANK0 ] char 
 10754 ;;  sign            1    4[BANK0 ] char 
 10755 ;; Auto vars:     Size  Location     Type
 10756 ;;  str             5   10[BANK0 ] unsigned char [5]
 10757 ;;  i               2   17[BANK0 ] int 
 10758 ;;  j               2   15[BANK0 ] int 
 10759 ;; Return value:  Size  Location     Type
 10760 ;;                  1    wreg      void 
 10761 ;; Registers used:
 10762 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10763 ;; Tracked objects:
 10764 ;;		On entry : 0/0
 10765 ;;		On exit  : 0/0
 10766 ;;		Unchanged: 0/0
 10767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10768 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10769 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10770 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10771 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10772 ;;Total ram usage:       19 bytes
 10773 ;; Hardware stack levels used:    1
 10774 ;; Hardware stack levels required when called:    2
 10775 ;; This function calls:
 10776 ;;		_LCD_Write_Char
 10777 ;;		___awdiv
 10778 ;;		___awmod
 10779 ;; This function is called by:
 10780 ;;		_main
 10781 ;; This function uses a non-reentrant model
 10782 ;;
 10783                           
 10784                           
 10785                           ;psect for function _LCD_Write_Int
 10786  0E3F                     _LCD_Write_Int:	
 10787                           
 10788                           ;lcd.c: 248: char str[5]={0,0,0,0,0};
 10789                           
 10790                           ;incstack = 0
 10791                           ; Regs used in _LCD_Write_Int: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10792  0E3F  30B8               	movlw	low LCD_Write_Int@F13687
 10793  0E40  0086               	movwf	6
 10794  0E41  3000               	movlw	high LCD_Write_Int@F13687
 10795  0E42  0087               	movwf	7
 10796  0E43  302A               	movlw	low LCD_Write_Int@str
 10797  0E44  0084               	movwf	4
 10798  0E45  3000               	movlw	high LCD_Write_Int@str
 10799  0E46  0085               	movwf	5
 10800  0E47  3005               	movlw	5
 10801  0E48  0020               	movlb	0	; select bank0
 10802  0E49  00A5               	movwf	??_LCD_Write_Int
 10803  0E4A                     u2940:	
 10804  0E4A  0016               	moviw fsr1++
 10805  0E4B  001A               	movwi fsr0++
 10806  0E4C  0BA5               	decfsz	??_LCD_Write_Int,f
 10807  0E4D  2E4A               	goto	u2940
 10808                           
 10809                           ;lcd.c: 249: int i=4,j=0;
 10810  0E4E  3004               	movlw	4
 10811  0E4F  00B1               	movwf	LCD_Write_Int@i
 10812  0E50  3000               	movlw	0
 10813  0E51  00B2               	movwf	LCD_Write_Int@i+1
 10814  0E52  01AF               	clrf	LCD_Write_Int@j
 10815  0E53  01B0               	clrf	LCD_Write_Int@j+1
 10816                           
 10817                           ;lcd.c: 251: if(value<0)
 10818  0E54  1FA1               	btfss	LCD_Write_Int@value+1,7
 10819  0E55  2E61               	goto	l2653
 10820                           
 10821                           ;lcd.c: 252: {
 10822                           ;lcd.c: 253: LCD_Write_Char('-');
 10823  0E56  302D               	movlw	45
 10824  0E57  3197  27A0  318E   	fcall	_LCD_Write_Char
 10825                           
 10826                           ;lcd.c: 254: value=value*-1;
 10827  0E5A  0020               	movlb	0	; select bank0
 10828  0E5B  09A0               	comf	LCD_Write_Int@value,f
 10829  0E5C  09A1               	comf	LCD_Write_Int@value+1,f
 10830  0E5D  0AA0               	incf	LCD_Write_Int@value,f
 10831  0E5E  1903               	skipnz
 10832  0E5F  0AA1               	incf	LCD_Write_Int@value+1,f
 10833                           
 10834                           ;lcd.c: 255: }
 10835  0E60  2E68               	goto	l2663
 10836  0E61                     l2653:	
 10837                           
 10838                           ;lcd.c: 257: else
 10839                           ;lcd.c: 258: {
 10840                           ;lcd.c: 259: if(sign == 1)
 10841  0E61  0324               	decf	LCD_Write_Int@sign,w
 10842  0E62  1D03               	btfss	3,2
 10843  0E63  2E68               	goto	l2663
 10844                           
 10845                           ;lcd.c: 260: {
 10846                           ;lcd.c: 261: LCD_Write_Char('+');
 10847  0E64  302B               	movlw	43
 10848  0E65  3197  27A0  318E   	fcall	_LCD_Write_Char
 10849  0E68                     l2663:	
 10850                           ;lcd.c: 262: }
 10851                           ;lcd.c: 263: }
 10852                           ;lcd.c: 265: while(value)
 10853                           
 10854  0E68  0020               	movlb	0	; select bank0
 10855  0E69  0820               	movf	LCD_Write_Int@value,w
 10856  0E6A  0421               	iorwf	LCD_Write_Int@value+1,w
 10857  0E6B  1903               	btfsc	3,2
 10858  0E6C  2E97               	goto	l2665
 10859                           
 10860                           ;lcd.c: 266: {
 10861                           ;lcd.c: 267: str[i]=value%10;
 10862  0E6D  300A               	movlw	10
 10863  0E6E  00F0               	movwf	___awmod@divisor
 10864  0E6F  3000               	movlw	0
 10865  0E70  00F1               	movwf	___awmod@divisor+1
 10866  0E71  0020               	movlb	0	; select bank0
 10867  0E72  0821               	movf	LCD_Write_Int@value+1,w
 10868  0E73  00F3               	movwf	___awmod@dividend+1
 10869  0E74  0820               	movf	LCD_Write_Int@value,w
 10870  0E75  00F2               	movwf	___awmod@dividend
 10871  0E76  3189  214C  318E   	fcall	___awmod
 10872  0E79  0870               	movf	?___awmod,w
 10873  0E7A  0020               	movlb	0	; select bank0
 10874  0E7B  00A5               	movwf	??_LCD_Write_Int
 10875  0E7C  0831               	movf	LCD_Write_Int@i,w
 10876  0E7D  3E2A               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
 10877  0E7E  0086               	movwf	6
 10878  0E7F  0187               	clrf	7
 10879  0E80  0825               	movf	??_LCD_Write_Int,w
 10880  0E81  0081               	movwf	1
 10881                           
 10882                           ;lcd.c: 268: value=value/10;
 10883  0E82  300A               	movlw	10
 10884  0E83  00F0               	movwf	___awdiv@divisor
 10885  0E84  3000               	movlw	0
 10886  0E85  00F1               	movwf	___awdiv@divisor+1
 10887  0E86  0821               	movf	LCD_Write_Int@value+1,w
 10888  0E87  00F3               	movwf	___awdiv@dividend+1
 10889  0E88  0820               	movf	LCD_Write_Int@value,w
 10890  0E89  00F2               	movwf	___awdiv@dividend
 10891  0E8A  3189  2191  318E   	fcall	___awdiv
 10892  0E8D  0871               	movf	?___awdiv+1,w
 10893  0E8E  0020               	movlb	0	; select bank0
 10894  0E8F  00A1               	movwf	LCD_Write_Int@value+1
 10895  0E90  0870               	movf	?___awdiv,w
 10896  0E91  00A0               	movwf	LCD_Write_Int@value
 10897                           
 10898                           ;lcd.c: 269: i--;
 10899  0E92  30FF               	movlw	255
 10900  0E93  07B1               	addwf	LCD_Write_Int@i,f
 10901  0E94  30FF               	movlw	255
 10902  0E95  3DB2               	addwfc	LCD_Write_Int@i+1,f
 10903  0E96  2E68               	goto	l2663
 10904  0E97                     l2665:	
 10905                           
 10906                           ;lcd.c: 270: }
 10907                           ;lcd.c: 271: if(fieldLength==-1)
 10908  0E97  0A22               	incf	LCD_Write_Int@fieldLength,w
 10909  0E98  1903               	btfsc	3,2
 10910  0E99  2E9F               	goto	l2671
 10911  0E9A  2EA7               	goto	l2673
 10912  0E9B                     l2669:	
 10913                           ;lcd.c: 272: {
 10914                           ;lcd.c: 273: while(str[j]==0)
 10915                           
 10916                           
 10917                           ;lcd.c: 274: {
 10918                           ;lcd.c: 275: j++;
 10919  0E9B  3001               	movlw	1
 10920  0E9C  07AF               	addwf	LCD_Write_Int@j,f
 10921  0E9D  3000               	movlw	0
 10922  0E9E  3DB0               	addwfc	LCD_Write_Int@j+1,f
 10923  0E9F                     l2671:	
 10924  0E9F  082F               	movf	LCD_Write_Int@j,w
 10925  0EA0  3E2A               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
 10926  0EA1  0086               	movwf	6
 10927  0EA2  0187               	clrf	7
 10928  0EA3  0801               	movf	1,w
 10929  0EA4  1D03               	btfss	3,2
 10930  0EA5  2EB7               	goto	l2675
 10931  0EA6  2E9B               	goto	l2669
 10932  0EA7                     l2673:	
 10933                           ;lcd.c: 276: }
 10934                           ;lcd.c: 277: }
 10935                           
 10936                           
 10937                           ;lcd.c: 278: else
 10938                           ;lcd.c: 279: {
 10939                           ;lcd.c: 280: j=5-fieldLength;
 10940  0EA7  0822               	movf	LCD_Write_Int@fieldLength,w
 10941  0EA8  00A5               	movwf	??_LCD_Write_Int
 10942  0EA9  01A6               	clrf	??_LCD_Write_Int+1
 10943  0EAA  1BA5               	btfsc	??_LCD_Write_Int,7
 10944  0EAB  03A6               	decf	??_LCD_Write_Int+1,f
 10945  0EAC  09A5               	comf	??_LCD_Write_Int,f
 10946  0EAD  09A6               	comf	??_LCD_Write_Int+1,f
 10947  0EAE  0AA5               	incf	??_LCD_Write_Int,f
 10948  0EAF  1903               	skipnz
 10949  0EB0  0AA6               	incf	??_LCD_Write_Int+1,f
 10950  0EB1  0825               	movf	??_LCD_Write_Int,w
 10951  0EB2  3E05               	addlw	5
 10952  0EB3  00AF               	movwf	LCD_Write_Int@j
 10953  0EB4  3000               	movlw	0
 10954  0EB5  3D26               	addwfc	??_LCD_Write_Int+1,w
 10955  0EB6  00B0               	movwf	LCD_Write_Int@j+1
 10956  0EB7                     l2675:	
 10957                           
 10958                           ;lcd.c: 281: }
 10959                           ;lcd.c: 283: for(i=j;i<(5-numPlaces);i++)
 10960  0EB7  0830               	movf	LCD_Write_Int@j+1,w
 10961  0EB8  00B2               	movwf	LCD_Write_Int@i+1
 10962  0EB9  082F               	movf	LCD_Write_Int@j,w
 10963  0EBA  00B1               	movwf	LCD_Write_Int@i
 10964  0EBB                     l2681:	
 10965  0EBB  0823               	movf	LCD_Write_Int@numPlaces,w
 10966  0EBC  00A5               	movwf	??_LCD_Write_Int
 10967  0EBD  01A6               	clrf	??_LCD_Write_Int+1
 10968  0EBE  1BA5               	btfsc	??_LCD_Write_Int,7
 10969  0EBF  03A6               	decf	??_LCD_Write_Int+1,f
 10970  0EC0  09A5               	comf	??_LCD_Write_Int,f
 10971  0EC1  09A6               	comf	??_LCD_Write_Int+1,f
 10972  0EC2  0AA5               	incf	??_LCD_Write_Int,f
 10973  0EC3  1903               	skipnz
 10974  0EC4  0AA6               	incf	??_LCD_Write_Int+1,f
 10975  0EC5  0825               	movf	??_LCD_Write_Int,w
 10976  0EC6  3E05               	addlw	5
 10977  0EC7  00A7               	movwf	??_LCD_Write_Int+2
 10978  0EC8  3000               	movlw	0
 10979  0EC9  3D26               	addwfc	??_LCD_Write_Int+1,w
 10980  0ECA  00A8               	movwf	??_LCD_Write_Int+3
 10981  0ECB  0832               	movf	LCD_Write_Int@i+1,w
 10982  0ECC  3A80               	xorlw	128
 10983  0ECD  00A9               	movwf	??_LCD_Write_Int+4
 10984  0ECE  0828               	movf	??_LCD_Write_Int+3,w
 10985  0ECF  3A80               	xorlw	128
 10986  0ED0  0229               	subwf	??_LCD_Write_Int+4,w
 10987  0ED1  1D03               	skipz
 10988  0ED2  2ED5               	goto	u3005
 10989  0ED3  0827               	movf	??_LCD_Write_Int+2,w
 10990  0ED4  0231               	subwf	LCD_Write_Int@i,w
 10991  0ED5                     u3005:	
 10992  0ED5  1803               	btfsc	3,0
 10993  0ED6  2EE7               	goto	l2683
 10994                           
 10995                           ;lcd.c: 284: {
 10996                           ;lcd.c: 285: LCD_Write_Char(48+str[i]);
 10997  0ED7  0020               	movlb	0	; select bank0
 10998  0ED8  0831               	movf	LCD_Write_Int@i,w
 10999  0ED9  3E2A               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
 11000  0EDA  0086               	movwf	6
 11001  0EDB  0187               	clrf	7
 11002  0EDC  0801               	movf	1,w
 11003  0EDD  3E30               	addlw	48
 11004  0EDE  3197  27A0  318E   	fcall	_LCD_Write_Char
 11005  0EE1  3001               	movlw	1
 11006  0EE2  0020               	movlb	0	; select bank0
 11007  0EE3  07B1               	addwf	LCD_Write_Int@i,f
 11008  0EE4  3000               	movlw	0
 11009  0EE5  3DB2               	addwfc	LCD_Write_Int@i+1,f
 11010  0EE6  2EBB               	goto	l2681
 11011  0EE7                     l2683:	
 11012                           
 11013                           ;lcd.c: 286: }
 11014                           ;lcd.c: 288: if(numPlaces == 1)
 11015  0EE7  0020               	movlb	0	; select bank0
 11016  0EE8  0323               	decf	LCD_Write_Int@numPlaces,w
 11017  0EE9  1D03               	btfss	3,2
 11018  0EEA  2EF5               	goto	l2687
 11019                           
 11020                           ;lcd.c: 289: {
 11021                           ;lcd.c: 290: LCD_Write_Char(46);
 11022  0EEB  302E               	movlw	46
 11023  0EEC  3197  27A0  318E   	fcall	_LCD_Write_Char
 11024                           
 11025                           ;lcd.c: 291: LCD_Write_Char(48+str[4]);
 11026  0EEF  0020               	movlb	0	; select bank0
 11027  0EF0  082E               	movf	LCD_Write_Int@str+4,w
 11028  0EF1  3E30               	addlw	48
 11029  0EF2  3197  27A0  318E   	fcall	_LCD_Write_Char
 11030  0EF5                     l2687:	
 11031                           
 11032                           ;lcd.c: 292: }
 11033                           ;lcd.c: 294: if(numPlaces == 2)
 11034  0EF5  3002               	movlw	2
 11035  0EF6  0020               	movlb	0	; select bank0
 11036  0EF7  0623               	xorwf	LCD_Write_Int@numPlaces,w
 11037  0EF8  1D03               	btfss	3,2
 11038  0EF9  0008               	return
 11039                           
 11040                           ;lcd.c: 295: {
 11041                           ;lcd.c: 296: LCD_Write_Char(46);
 11042  0EFA  302E               	movlw	46
 11043  0EFB  3197  27A0  318E   	fcall	_LCD_Write_Char
 11044                           
 11045                           ;lcd.c: 297: LCD_Write_Char(48+str[3]);
 11046  0EFE  0020               	movlb	0	; select bank0
 11047  0EFF  082D               	movf	LCD_Write_Int@str+3,w
 11048  0F00  3E30               	addlw	48
 11049  0F01  3197  27A0  318E   	fcall	_LCD_Write_Char
 11050                           
 11051                           ;lcd.c: 298: LCD_Write_Char(48+str[4]);
 11052  0F04  0020               	movlb	0	; select bank0
 11053  0F05  082E               	movf	LCD_Write_Int@str+4,w
 11054  0F06  3E30               	addlw	48
 11055  0F07  3197  27A0         	fcall	_LCD_Write_Char
 11056  0F09  0008               	return
 11057  0F0A                     __end_of_LCD_Write_Int:	
 11058                           
 11059                           	psect	text30
 11060  094C                     __ptext30:	
 11061 ;; *************** function ___awmod *****************
 11062 ;; Defined at:
 11063 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c"
 11064 ;; Parameters:    Size  Location     Type
 11065 ;;  divisor         2    0[COMMON] int 
 11066 ;;  dividend        2    2[COMMON] int 
 11067 ;; Auto vars:     Size  Location     Type
 11068 ;;  sign            1    6[COMMON] unsigned char 
 11069 ;;  counter         1    5[COMMON] unsigned char 
 11070 ;; Return value:  Size  Location     Type
 11071 ;;                  2    0[COMMON] int 
 11072 ;; Registers used:
 11073 ;;		wreg, status,2, status,0
 11074 ;; Tracked objects:
 11075 ;;		On entry : 0/0
 11076 ;;		On exit  : 0/0
 11077 ;;		Unchanged: 0/0
 11078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11079 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11080 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11081 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11082 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11083 ;;Total ram usage:        7 bytes
 11084 ;; Hardware stack levels used:    1
 11085 ;; This function calls:
 11086 ;;		Nothing
 11087 ;; This function is called by:
 11088 ;;		_LCD_Write_Int
 11089 ;; This function uses a non-reentrant model
 11090 ;;
 11091                           
 11092                           
 11093                           ;psect for function ___awmod
 11094  094C                     ___awmod:	
 11095                           
 11096                           ;incstack = 0
 11097                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 11098  094C  01F6               	clrf	___awmod@sign
 11099  094D  1FF3               	btfss	___awmod@dividend+1,7
 11100  094E  2956               	goto	l2513
 11101  094F  09F2               	comf	___awmod@dividend,f
 11102  0950  09F3               	comf	___awmod@dividend+1,f
 11103  0951  0AF2               	incf	___awmod@dividend,f
 11104  0952  1903               	skipnz
 11105  0953  0AF3               	incf	___awmod@dividend+1,f
 11106  0954  01F6               	clrf	___awmod@sign
 11107  0955  0AF6               	incf	___awmod@sign,f
 11108  0956                     l2513:	
 11109  0956  1FF1               	btfss	___awmod@divisor+1,7
 11110  0957  295D               	goto	l2517
 11111  0958  09F0               	comf	___awmod@divisor,f
 11112  0959  09F1               	comf	___awmod@divisor+1,f
 11113  095A  0AF0               	incf	___awmod@divisor,f
 11114  095B  1903               	skipnz
 11115  095C  0AF1               	incf	___awmod@divisor+1,f
 11116  095D                     l2517:	
 11117  095D  0870               	movf	___awmod@divisor,w
 11118  095E  0471               	iorwf	___awmod@divisor+1,w
 11119  095F  1903               	btfsc	3,2
 11120  0960  2984               	goto	l2535
 11121  0961  01F5               	clrf	___awmod@counter
 11122  0962  0AF5               	incf	___awmod@counter,f
 11123  0963                     l2525:	
 11124  0963  1BF1               	btfsc	___awmod@divisor+1,7
 11125  0964  296F               	goto	l2527
 11126  0965  3001               	movlw	1
 11127  0966                     u2675:	
 11128  0966  35F0               	lslf	___awmod@divisor,f
 11129  0967  0DF1               	rlf	___awmod@divisor+1,f
 11130  0968  0B89               	decfsz	9,f
 11131  0969  2966               	goto	u2675
 11132  096A  3001               	movlw	1
 11133  096B  00F4               	movwf	??___awmod
 11134  096C  0874               	movf	??___awmod,w
 11135  096D  07F5               	addwf	___awmod@counter,f
 11136  096E  2963               	goto	l2525
 11137  096F                     l2527:	
 11138  096F  0871               	movf	___awmod@divisor+1,w
 11139  0970  0273               	subwf	___awmod@dividend+1,w
 11140  0971  1D03               	skipz
 11141  0972  2975               	goto	u2695
 11142  0973  0870               	movf	___awmod@divisor,w
 11143  0974  0272               	subwf	___awmod@dividend,w
 11144  0975                     u2695:	
 11145  0975  1C03               	skipc
 11146  0976  297B               	goto	l2531
 11147  0977  0870               	movf	___awmod@divisor,w
 11148  0978  02F2               	subwf	___awmod@dividend,f
 11149  0979  0871               	movf	___awmod@divisor+1,w
 11150  097A  3BF3               	subwfb	___awmod@dividend+1,f
 11151  097B                     l2531:	
 11152  097B  3001               	movlw	1
 11153  097C                     u2705:	
 11154  097C  36F1               	lsrf	___awmod@divisor+1,f
 11155  097D  0CF0               	rrf	___awmod@divisor,f
 11156  097E  0B89               	decfsz	9,f
 11157  097F  297C               	goto	u2705
 11158  0980  3001               	movlw	1
 11159  0981  02F5               	subwf	___awmod@counter,f
 11160  0982  1D03               	btfss	3,2
 11161  0983  296F               	goto	l2527
 11162  0984                     l2535:	
 11163  0984  0876               	movf	___awmod@sign,w
 11164  0985  1903               	btfsc	3,2
 11165  0986  298C               	goto	l2539
 11166  0987  09F2               	comf	___awmod@dividend,f
 11167  0988  09F3               	comf	___awmod@dividend+1,f
 11168  0989  0AF2               	incf	___awmod@dividend,f
 11169  098A  1903               	skipnz
 11170  098B  0AF3               	incf	___awmod@dividend+1,f
 11171  098C                     l2539:	
 11172  098C  0873               	movf	___awmod@dividend+1,w
 11173  098D  00F1               	movwf	?___awmod+1
 11174  098E  0872               	movf	___awmod@dividend,w
 11175  098F  00F0               	movwf	?___awmod
 11176  0990  0008               	return
 11177  0991                     __end_of___awmod:	
 11178                           
 11179                           	psect	text31
 11180  0991                     __ptext31:	
 11181 ;; *************** function ___awdiv *****************
 11182 ;; Defined at:
 11183 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c"
 11184 ;; Parameters:    Size  Location     Type
 11185 ;;  divisor         2    0[COMMON] int 
 11186 ;;  dividend        2    2[COMMON] int 
 11187 ;; Auto vars:     Size  Location     Type
 11188 ;;  quotient        2    7[COMMON] int 
 11189 ;;  sign            1    6[COMMON] unsigned char 
 11190 ;;  counter         1    5[COMMON] unsigned char 
 11191 ;; Return value:  Size  Location     Type
 11192 ;;                  2    0[COMMON] int 
 11193 ;; Registers used:
 11194 ;;		wreg, status,2, status,0
 11195 ;; Tracked objects:
 11196 ;;		On entry : 0/0
 11197 ;;		On exit  : 0/0
 11198 ;;		Unchanged: 0/0
 11199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11200 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11201 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11202 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11203 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11204 ;;Total ram usage:        9 bytes
 11205 ;; Hardware stack levels used:    1
 11206 ;; This function calls:
 11207 ;;		Nothing
 11208 ;; This function is called by:
 11209 ;;		_LCD_Write_Int
 11210 ;; This function uses a non-reentrant model
 11211 ;;
 11212                           
 11213                           
 11214                           ;psect for function ___awdiv
 11215  0991                     ___awdiv:	
 11216                           
 11217                           ;incstack = 0
 11218                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 11219  0991  01F6               	clrf	___awdiv@sign
 11220  0992  1FF1               	btfss	___awdiv@divisor+1,7
 11221  0993  299B               	goto	l2469
 11222  0994  09F0               	comf	___awdiv@divisor,f
 11223  0995  09F1               	comf	___awdiv@divisor+1,f
 11224  0996  0AF0               	incf	___awdiv@divisor,f
 11225  0997  1903               	skipnz
 11226  0998  0AF1               	incf	___awdiv@divisor+1,f
 11227  0999  01F6               	clrf	___awdiv@sign
 11228  099A  0AF6               	incf	___awdiv@sign,f
 11229  099B                     l2469:	
 11230  099B  1FF3               	btfss	___awdiv@dividend+1,7
 11231  099C  29A6               	goto	l2475
 11232  099D  09F2               	comf	___awdiv@dividend,f
 11233  099E  09F3               	comf	___awdiv@dividend+1,f
 11234  099F  0AF2               	incf	___awdiv@dividend,f
 11235  09A0  1903               	skipnz
 11236  09A1  0AF3               	incf	___awdiv@dividend+1,f
 11237  09A2  3001               	movlw	1
 11238  09A3  00F4               	movwf	??___awdiv
 11239  09A4  0874               	movf	??___awdiv,w
 11240  09A5  06F6               	xorwf	___awdiv@sign,f
 11241  09A6                     l2475:	
 11242  09A6  01F7               	clrf	___awdiv@quotient
 11243  09A7  01F8               	clrf	___awdiv@quotient+1
 11244  09A8  0870               	movf	___awdiv@divisor,w
 11245  09A9  0471               	iorwf	___awdiv@divisor+1,w
 11246  09AA  1903               	btfsc	3,2
 11247  09AB  29D5               	goto	l2497
 11248  09AC  01F5               	clrf	___awdiv@counter
 11249  09AD  0AF5               	incf	___awdiv@counter,f
 11250  09AE                     l2485:	
 11251  09AE  1BF1               	btfsc	___awdiv@divisor+1,7
 11252  09AF  29BA               	goto	l2487
 11253  09B0  3001               	movlw	1
 11254  09B1                     u2575:	
 11255  09B1  35F0               	lslf	___awdiv@divisor,f
 11256  09B2  0DF1               	rlf	___awdiv@divisor+1,f
 11257  09B3  0B89               	decfsz	9,f
 11258  09B4  29B1               	goto	u2575
 11259  09B5  3001               	movlw	1
 11260  09B6  00F4               	movwf	??___awdiv
 11261  09B7  0874               	movf	??___awdiv,w
 11262  09B8  07F5               	addwf	___awdiv@counter,f
 11263  09B9  29AE               	goto	l2485
 11264  09BA                     l2487:	
 11265  09BA  3001               	movlw	1
 11266  09BB                     u2595:	
 11267  09BB  35F7               	lslf	___awdiv@quotient,f
 11268  09BC  0DF8               	rlf	___awdiv@quotient+1,f
 11269  09BD  0B89               	decfsz	9,f
 11270  09BE  29BB               	goto	u2595
 11271  09BF  0871               	movf	___awdiv@divisor+1,w
 11272  09C0  0273               	subwf	___awdiv@dividend+1,w
 11273  09C1  1D03               	skipz
 11274  09C2  29C5               	goto	u2605
 11275  09C3  0870               	movf	___awdiv@divisor,w
 11276  09C4  0272               	subwf	___awdiv@dividend,w
 11277  09C5                     u2605:	
 11278  09C5  1C03               	skipc
 11279  09C6  29CC               	goto	l2493
 11280  09C7  0870               	movf	___awdiv@divisor,w
 11281  09C8  02F2               	subwf	___awdiv@dividend,f
 11282  09C9  0871               	movf	___awdiv@divisor+1,w
 11283  09CA  3BF3               	subwfb	___awdiv@dividend+1,f
 11284  09CB  1477               	bsf	___awdiv@quotient,0
 11285  09CC                     l2493:	
 11286  09CC  3001               	movlw	1
 11287  09CD                     u2615:	
 11288  09CD  36F1               	lsrf	___awdiv@divisor+1,f
 11289  09CE  0CF0               	rrf	___awdiv@divisor,f
 11290  09CF  0B89               	decfsz	9,f
 11291  09D0  29CD               	goto	u2615
 11292  09D1  3001               	movlw	1
 11293  09D2  02F5               	subwf	___awdiv@counter,f
 11294  09D3  1D03               	btfss	3,2
 11295  09D4  29BA               	goto	l2487
 11296  09D5                     l2497:	
 11297  09D5  0876               	movf	___awdiv@sign,w
 11298  09D6  1903               	btfsc	3,2
 11299  09D7  29DD               	goto	l2501
 11300  09D8  09F7               	comf	___awdiv@quotient,f
 11301  09D9  09F8               	comf	___awdiv@quotient+1,f
 11302  09DA  0AF7               	incf	___awdiv@quotient,f
 11303  09DB  1903               	skipnz
 11304  09DC  0AF8               	incf	___awdiv@quotient+1,f
 11305  09DD                     l2501:	
 11306  09DD  0878               	movf	___awdiv@quotient+1,w
 11307  09DE  00F1               	movwf	?___awdiv+1
 11308  09DF  0877               	movf	___awdiv@quotient,w
 11309  09E0  00F0               	movwf	?___awdiv
 11310  09E1  0008               	return
 11311  09E2                     __end_of___awdiv:	
 11312                           
 11313                           	psect	text32
 11314  17A0                     __ptext32:	
 11315 ;; *************** function _LCD_Write_Char *****************
 11316 ;; Defined at:
 11317 ;;		line 223 in file "lcd.c"
 11318 ;; Parameters:    Size  Location     Type
 11319 ;;  a               1    wreg     const unsigned char 
 11320 ;; Auto vars:     Size  Location     Type
 11321 ;;  a               1    4[COMMON] const unsigned char 
 11322 ;;  y               1    3[COMMON] unsigned char 
 11323 ;;  temp            1    2[COMMON] unsigned char 
 11324 ;; Return value:  Size  Location     Type
 11325 ;;                  1    wreg      void 
 11326 ;; Registers used:
 11327 ;;		wreg, status,2, status,0, pclath, cstack
 11328 ;; Tracked objects:
 11329 ;;		On entry : 0/0
 11330 ;;		On exit  : 0/0
 11331 ;;		Unchanged: 0/0
 11332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11334 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11335 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11336 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11337 ;;Total ram usage:        4 bytes
 11338 ;; Hardware stack levels used:    1
 11339 ;; Hardware stack levels required when called:    1
 11340 ;; This function calls:
 11341 ;;		_LCD_Port
 11342 ;; This function is called by:
 11343 ;;		_InitCustomChars
 11344 ;;		_LCD_Write_String
 11345 ;;		_LCD_Write_Int
 11346 ;;		_main
 11347 ;; This function uses a non-reentrant model
 11348 ;;
 11349                           
 11350                           
 11351                           ;psect for function _LCD_Write_Char
 11352  17A0                     _LCD_Write_Char:	
 11353                           
 11354                           ;incstack = 0
 11355                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
 11356                           ;LCD_Write_Char@a stored from wreg
 11357  17A0  00F4               	movwf	LCD_Write_Char@a
 11358                           
 11359                           ;lcd.c: 225: char temp,y;
 11360                           ;lcd.c: 226: temp = a&0x0F;
 11361  17A1  0874               	movf	LCD_Write_Char@a,w
 11362  17A2  390F               	andlw	15
 11363  17A3  00F1               	movwf	??_LCD_Write_Char
 11364  17A4  0871               	movf	??_LCD_Write_Char,w
 11365  17A5  00F2               	movwf	LCD_Write_Char@temp
 11366                           
 11367                           ;lcd.c: 227: y = a&0xF0;
 11368  17A6  0874               	movf	LCD_Write_Char@a,w
 11369  17A7  39F0               	andlw	240
 11370  17A8  00F1               	movwf	??_LCD_Write_Char
 11371  17A9  0871               	movf	??_LCD_Write_Char,w
 11372  17AA  00F3               	movwf	LCD_Write_Char@y
 11373                           
 11374                           ;lcd.c: 228: RA0 = 1;
 11375  17AB  0020               	movlb	0	; select bank0
 11376  17AC  140C               	bsf	12,0	;volatile
 11377                           
 11378                           ;lcd.c: 229: LCD_Port(y>>4);
 11379  17AD  0873               	movf	LCD_Write_Char@y,w
 11380  17AE  00F1               	movwf	??_LCD_Write_Char
 11381  17AF  3004               	movlw	4
 11382  17B0                     u2305:	
 11383  17B0  36F1               	lsrf	??_LCD_Write_Char,f
 11384  17B1  0B89               	decfsz	9,f
 11385  17B2  2FB0               	goto	u2305
 11386  17B3  0871               	movf	??_LCD_Write_Char,w
 11387  17B4  3196  26DB  3197   	fcall	_LCD_Port
 11388                           
 11389                           ;lcd.c: 230: RA2 = 1;
 11390  17B7  0020               	movlb	0	; select bank0
 11391  17B8  150C               	bsf	12,2	;volatile
 11392                           
 11393                           ;lcd.c: 231: RA2 = 0;
 11394  17B9  110C               	bcf	12,2	;volatile
 11395                           
 11396                           ;lcd.c: 232: _delay((unsigned long)((40)*(32000000/4000000.0)));
 11397  17BA  306A               	movlw	106
 11398  17BB  00F1               	movwf	??_LCD_Write_Char
 11399  17BC                     u3927:	
 11400  17BC  0BF1               	decfsz	??_LCD_Write_Char,f
 11401  17BD  2FBC               	goto	u3927
 11402  17BE  0000               	nop
 11403                           
 11404                           ;lcd.c: 233: LCD_Port(temp);
 11405  17BF  0872               	movf	LCD_Write_Char@temp,w
 11406  17C0  3196  26DB  3197   	fcall	_LCD_Port
 11407                           
 11408                           ;lcd.c: 234: RA2 = 1;
 11409  17C3  0020               	movlb	0	; select bank0
 11410  17C4  150C               	bsf	12,2	;volatile
 11411                           
 11412                           ;lcd.c: 235: RA2 = 0;
 11413  17C5  110C               	bcf	12,2	;volatile
 11414                           
 11415                           ;lcd.c: 236: _delay((unsigned long)((40)*(32000000/4000000.0)));
 11416  17C6  306A               	movlw	106
 11417  17C7  00F1               	movwf	??_LCD_Write_Char
 11418  17C8                     u3937:	
 11419  17C8  0BF1               	decfsz	??_LCD_Write_Char,f
 11420  17C9  2FC8               	goto	u3937
 11421  17CA  0000               	nop
 11422  17CB  0008               	return
 11423  17CC                     __end_of_LCD_Write_Char:	
 11424                           
 11425                           	psect	text33
 11426  08CB                     __ptext33:	
 11427 ;; *************** function _LCD_Set_Cursor *****************
 11428 ;; Defined at:
 11429 ;;		line 82 in file "lcd.c"
 11430 ;; Parameters:    Size  Location     Type
 11431 ;;  x               1    wreg     unsigned char 
 11432 ;;  y               1    4[COMMON] unsigned char 
 11433 ;; Auto vars:     Size  Location     Type
 11434 ;;  x               1    7[COMMON] unsigned char 
 11435 ;;  temp            1   10[COMMON] unsigned char 
 11436 ;;  w               1    9[COMMON] unsigned char 
 11437 ;;  z               1    8[COMMON] unsigned char 
 11438 ;; Return value:  Size  Location     Type
 11439 ;;                  1    wreg      void 
 11440 ;; Registers used:
 11441 ;;		wreg, status,2, status,0, pclath, cstack
 11442 ;; Tracked objects:
 11443 ;;		On entry : 0/0
 11444 ;;		On exit  : 0/0
 11445 ;;		Unchanged: 0/0
 11446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11447 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11448 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11449 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11450 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11451 ;;Total ram usage:        7 bytes
 11452 ;; Hardware stack levels used:    1
 11453 ;; Hardware stack levels required when called:    2
 11454 ;; This function calls:
 11455 ;;		_LCD_Cmd
 11456 ;; This function is called by:
 11457 ;;		_main
 11458 ;; This function uses a non-reentrant model
 11459 ;;
 11460                           
 11461                           
 11462                           ;psect for function _LCD_Set_Cursor
 11463  08CB                     _LCD_Set_Cursor:	
 11464                           
 11465                           ;incstack = 0
 11466                           ; Regs used in _LCD_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
 11467                           ;LCD_Set_Cursor@x stored from wreg
 11468  08CB  00F7               	movwf	LCD_Set_Cursor@x
 11469                           
 11470                           ;lcd.c: 86: char temp,z,w;
 11471                           ;lcd.c: 88: if(y == 0)
 11472  08CC  0874               	movf	LCD_Set_Cursor@y,w
 11473  08CD  1D03               	btfss	3,2
 11474  08CE  28EB               	goto	l2623
 11475                           
 11476                           ;lcd.c: 89: {
 11477                           ;lcd.c: 90: temp = 0x80 + x;
 11478  08CF  0877               	movf	LCD_Set_Cursor@x,w
 11479  08D0  3E80               	addlw	128
 11480  08D1  00F5               	movwf	??_LCD_Set_Cursor
 11481  08D2  0875               	movf	??_LCD_Set_Cursor,w
 11482  08D3  00FA               	movwf	LCD_Set_Cursor@temp
 11483                           
 11484                           ;lcd.c: 91: z = temp>>4;
 11485  08D4  087A               	movf	LCD_Set_Cursor@temp,w
 11486  08D5  00F5               	movwf	??_LCD_Set_Cursor
 11487  08D6  3004               	movlw	4
 11488  08D7                     u2905:	
 11489  08D7  36F5               	lsrf	??_LCD_Set_Cursor,f
 11490  08D8  0B89               	decfsz	9,f
 11491  08D9  28D7               	goto	u2905
 11492  08DA  0875               	movf	??_LCD_Set_Cursor,w
 11493  08DB  00F6               	movwf	??_LCD_Set_Cursor+1
 11494  08DC  0876               	movf	??_LCD_Set_Cursor+1,w
 11495  08DD  00F8               	movwf	LCD_Set_Cursor@z
 11496                           
 11497                           ;lcd.c: 92: w = temp & 0x0F;
 11498  08DE  087A               	movf	LCD_Set_Cursor@temp,w
 11499  08DF  390F               	andlw	15
 11500  08E0  00F5               	movwf	??_LCD_Set_Cursor
 11501  08E1  0875               	movf	??_LCD_Set_Cursor,w
 11502  08E2  00F9               	movwf	LCD_Set_Cursor@w
 11503                           
 11504                           ;lcd.c: 93: LCD_Cmd(z);
 11505  08E3  0878               	movf	LCD_Set_Cursor@z,w
 11506  08E4  3196  26B1  3188   	fcall	_LCD_Cmd
 11507                           
 11508                           ;lcd.c: 94: LCD_Cmd(w);
 11509  08E7  0879               	movf	LCD_Set_Cursor@w,w
 11510  08E8  3196  26B1         	fcall	_LCD_Cmd
 11511                           
 11512                           ;lcd.c: 95: }
 11513  08EA  0008               	return
 11514  08EB                     l2623:	
 11515                           
 11516                           ;lcd.c: 97: else if(y == 1)
 11517  08EB  0374               	decf	LCD_Set_Cursor@y,w
 11518  08EC  1D03               	btfss	3,2
 11519  08ED  0008               	return
 11520                           
 11521                           ;lcd.c: 98: {
 11522                           ;lcd.c: 99: temp = 0xC0 + x;
 11523  08EE  0877               	movf	LCD_Set_Cursor@x,w
 11524  08EF  3EC0               	addlw	192
 11525  08F0  00F5               	movwf	??_LCD_Set_Cursor
 11526  08F1  0875               	movf	??_LCD_Set_Cursor,w
 11527  08F2  00FA               	movwf	LCD_Set_Cursor@temp
 11528                           
 11529                           ;lcd.c: 100: z = temp>>4;
 11530  08F3  087A               	movf	LCD_Set_Cursor@temp,w
 11531  08F4  00F5               	movwf	??_LCD_Set_Cursor
 11532  08F5  3004               	movlw	4
 11533  08F6                     u2925:	
 11534  08F6  36F5               	lsrf	??_LCD_Set_Cursor,f
 11535  08F7  0B89               	decfsz	9,f
 11536  08F8  28F6               	goto	u2925
 11537  08F9  0875               	movf	??_LCD_Set_Cursor,w
 11538  08FA  00F6               	movwf	??_LCD_Set_Cursor+1
 11539  08FB  0876               	movf	??_LCD_Set_Cursor+1,w
 11540  08FC  00F8               	movwf	LCD_Set_Cursor@z
 11541                           
 11542                           ;lcd.c: 101: w = temp & 0x0F;
 11543  08FD  087A               	movf	LCD_Set_Cursor@temp,w
 11544  08FE  390F               	andlw	15
 11545  08FF  00F5               	movwf	??_LCD_Set_Cursor
 11546  0900  0875               	movf	??_LCD_Set_Cursor,w
 11547  0901  00F9               	movwf	LCD_Set_Cursor@w
 11548                           
 11549                           ;lcd.c: 102: LCD_Cmd(z);
 11550  0902  0878               	movf	LCD_Set_Cursor@z,w
 11551  0903  3196  26B1  3188   	fcall	_LCD_Cmd
 11552                           
 11553                           ;lcd.c: 103: LCD_Cmd(w);
 11554  0906  0879               	movf	LCD_Set_Cursor@w,w
 11555  0907  3196  26B1         	fcall	_LCD_Cmd
 11556  0909  0008               	return
 11557  090A                     __end_of_LCD_Set_Cursor:	
 11558                           
 11559                           	psect	text34
 11560  16B1                     __ptext34:	
 11561 ;; *************** function _LCD_Cmd *****************
 11562 ;; Defined at:
 11563 ;;		line 65 in file "lcd.c"
 11564 ;; Parameters:    Size  Location     Type
 11565 ;;  a               1    wreg     unsigned char 
 11566 ;; Auto vars:     Size  Location     Type
 11567 ;;  a               1    3[COMMON] unsigned char 
 11568 ;; Return value:  Size  Location     Type
 11569 ;;                  1    wreg      void 
 11570 ;; Registers used:
 11571 ;;		wreg, status,2, status,0, pclath, cstack
 11572 ;; Tracked objects:
 11573 ;;		On entry : 0/0
 11574 ;;		On exit  : 0/0
 11575 ;;		Unchanged: 0/0
 11576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11578 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11579 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11580 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11581 ;;Total ram usage:        3 bytes
 11582 ;; Hardware stack levels used:    1
 11583 ;; Hardware stack levels required when called:    1
 11584 ;; This function calls:
 11585 ;;		_LCD_Port
 11586 ;; This function is called by:
 11587 ;;		_InitCustomChars
 11588 ;;		_LCD_Clear
 11589 ;;		_LCD_Set_Cursor
 11590 ;;		_LCD_Init
 11591 ;; This function uses a non-reentrant model
 11592 ;;
 11593                           
 11594                           
 11595                           ;psect for function _LCD_Cmd
 11596  16B1                     _LCD_Cmd:	
 11597                           
 11598                           ;incstack = 0
 11599                           ; Regs used in _LCD_Cmd: [wreg+status,2+status,0+pclath+cstack]
 11600                           ;LCD_Cmd@a stored from wreg
 11601  16B1  00F3               	movwf	LCD_Cmd@a
 11602                           
 11603                           ;lcd.c: 67: RA0 = 0;
 11604  16B2  0020               	movlb	0	; select bank0
 11605  16B3  100C               	bcf	12,0	;volatile
 11606                           
 11607                           ;lcd.c: 68: LCD_Port(a);
 11608  16B4  0873               	movf	LCD_Cmd@a,w
 11609  16B5  3196  26DB  3196   	fcall	_LCD_Port
 11610                           
 11611                           ;lcd.c: 69: RA2 = 1;
 11612  16B8  0020               	movlb	0	; select bank0
 11613  16B9  150C               	bsf	12,2	;volatile
 11614                           
 11615                           ;lcd.c: 70: RA2 = 0;
 11616  16BA  110C               	bcf	12,2	;volatile
 11617                           
 11618                           ;lcd.c: 71: _delay((unsigned long)((4)*(32000000/4000.0)));
 11619  16BB  302A               	movlw	42
 11620  16BC  00F2               	movwf	??_LCD_Cmd+1
 11621  16BD  308D               	movlw	141
 11622  16BE  00F1               	movwf	??_LCD_Cmd
 11623  16BF                     u3947:	
 11624  16BF  0BF1               	decfsz	??_LCD_Cmd,f
 11625  16C0  2EBF               	goto	u3947
 11626  16C1  0BF2               	decfsz	??_LCD_Cmd+1,f
 11627  16C2  2EBF               	goto	u3947
 11628  16C3  3200               	nop2
 11629  16C4  0008               	return
 11630  16C5                     __end_of_LCD_Cmd:	
 11631                           
 11632                           	psect	text35
 11633  16DB                     __ptext35:	
 11634 ;; *************** function _LCD_Port *****************
 11635 ;; Defined at:
 11636 ;;		line 41 in file "lcd.c"
 11637 ;; Parameters:    Size  Location     Type
 11638 ;;  a               1    wreg     unsigned char 
 11639 ;; Auto vars:     Size  Location     Type
 11640 ;;  a               1    0[COMMON] unsigned char 
 11641 ;; Return value:  Size  Location     Type
 11642 ;;                  1    wreg      void 
 11643 ;; Registers used:
 11644 ;;		wreg
 11645 ;; Tracked objects:
 11646 ;;		On entry : 0/0
 11647 ;;		On exit  : 0/0
 11648 ;;		Unchanged: 0/0
 11649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11651 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11653 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11654 ;;Total ram usage:        1 bytes
 11655 ;; Hardware stack levels used:    1
 11656 ;; This function calls:
 11657 ;;		Nothing
 11658 ;; This function is called by:
 11659 ;;		_LCD_Cmd
 11660 ;;		_LCD_Init
 11661 ;;		_LCD_Write_Char
 11662 ;; This function uses a non-reentrant model
 11663 ;;
 11664                           
 11665                           
 11666                           ;psect for function _LCD_Port
 11667  16DB                     _LCD_Port:	
 11668                           
 11669                           ;incstack = 0
 11670                           ; Regs used in _LCD_Port: [wreg]
 11671                           ;LCD_Port@a stored from wreg
 11672  16DB  00F0               	movwf	LCD_Port@a
 11673                           
 11674                           ;lcd.c: 43: if(a & 1)
 11675  16DC  1C70               	btfss	LCD_Port@a,0
 11676  16DD  2EE1               	goto	l94
 11677                           
 11678                           ;lcd.c: 44: RA7 = 1;
 11679  16DE  0020               	movlb	0	; select bank0
 11680  16DF  178C               	bsf	12,7	;volatile
 11681  16E0  2EE3               	goto	l2021
 11682  16E1                     l94:	
 11683                           
 11684                           ;lcd.c: 45: else
 11685                           ;lcd.c: 46: RA7 = 0;
 11686  16E1  0020               	movlb	0	; select bank0
 11687  16E2  138C               	bcf	12,7	;volatile
 11688  16E3                     l2021:	
 11689                           
 11690                           ;lcd.c: 48: if(a & 2)
 11691  16E3  1CF0               	btfss	LCD_Port@a,1
 11692  16E4  2EE7               	goto	l96
 11693                           
 11694                           ;lcd.c: 49: RA6 = 1;
 11695  16E5  170C               	bsf	12,6	;volatile
 11696  16E6  2EE8               	goto	l2025
 11697  16E7                     l96:	
 11698                           
 11699                           ;lcd.c: 50: else
 11700                           ;lcd.c: 51: RA6 = 0;
 11701  16E7  130C               	bcf	12,6	;volatile
 11702  16E8                     l2025:	
 11703                           
 11704                           ;lcd.c: 53: if(a & 4)
 11705  16E8  1D70               	btfss	LCD_Port@a,2
 11706  16E9  2EEC               	goto	l98
 11707                           
 11708                           ;lcd.c: 54: RC0 = 1;
 11709  16EA  140E               	bsf	14,0	;volatile
 11710  16EB  2EED               	goto	l2029
 11711  16EC                     l98:	
 11712                           
 11713                           ;lcd.c: 55: else
 11714                           ;lcd.c: 56: RC0 = 0;
 11715  16EC  100E               	bcf	14,0	;volatile
 11716  16ED                     l2029:	
 11717                           
 11718                           ;lcd.c: 58: if(a & 8)
 11719  16ED  1DF0               	btfss	LCD_Port@a,3
 11720  16EE  2EF1               	goto	l100
 11721                           
 11722                           ;lcd.c: 59: RC1 = 1;
 11723  16EF  148E               	bsf	14,1	;volatile
 11724  16F0  0008               	return
 11725  16F1                     l100:	
 11726                           
 11727                           ;lcd.c: 60: else
 11728                           ;lcd.c: 61: RC1 = 0;
 11729  16F1  108E               	bcf	14,1	;volatile
 11730  16F2  0008               	return
 11731  16F3                     __end_of_LCD_Port:	
 11732  007E                     btemp	set	126	;btemp
 11733  007E                     wtemp	set	126
 11734  007E                     wtemp0	set	126
 11735  0080                     wtemp1	set	128
 11736  0082                     wtemp2	set	130
 11737  0084                     wtemp3	set	132
 11738  0086                     wtemp4	set	134
 11739  0088                     wtemp5	set	136
 11740  007F                     wtemp6	set	127
 11741  007E                     ttemp	set	126
 11742  007E                     ttemp0	set	126
 11743  0081                     ttemp1	set	129
 11744  0084                     ttemp2	set	132
 11745  0087                     ttemp3	set	135
 11746  007F                     ttemp4	set	127
 11747  007E                     ltemp	set	126
 11748  007E                     ltemp0	set	126
 11749  0082                     ltemp1	set	130
 11750  0086                     ltemp2	set	134
 11751  0080                     ltemp3	set	128


Data Sizes:
    Strings     61
    Constant    27
    Data        36
    BSS         45
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     76      80
    BANK1            80     29      70
    BANK2            80      0      36
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            48      0       0
    BANK10            0      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 27
		 -> log@coeff(CODE[27]), 

    LCD_Write_String@a	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_30(CODE[10]), STR_29(CODE[10]), STR_28(CODE[11]), STR_27(CODE[11]), 
		 -> STR_26(CODE[2]), STR_25(CODE[2]), STR_24(CODE[2]), STR_23(CODE[2]), 
		 -> STR_22(CODE[2]), STR_21(CODE[2]), STR_20(CODE[2]), STR_19(CODE[2]), 
		 -> STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[2]), STR_15(CODE[2]), 
		 -> STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[2]), STR_11(CODE[2]), 
		 -> STR_10(CODE[2]), STR_9(CODE[2]), STR_8(CODE[2]), STR_7(CODE[2]), 
		 -> STR_6(CODE[2]), STR_5(CODE[2]), STR_4(CODE[2]), STR_3(CODE[2]), 
		 -> STR_2(CODE[2]), STR_1(CODE[2]), 


Critical Paths under _main in COMMON

    _main->___fttol
    _tempCalc->___awtoft
    _log->___awtoft
    ___ftmul->___awtoft
    ___awtoft->___ftpack
    ___ftadd->___awtoft
    ___ftdiv->___awtoft
    _readAnalog->___aldiv
    _SYSTEM_Initialize->_LCD_Init
    _LCD_Init->_LCD_Cmd
    _LCD_Clear->_LCD_Cmd
    _InitCustomChars->_LCD_Write_Char
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Int->___fttol
    _LCD_Write_Char->_LCD_Port
    _LCD_Set_Cursor->_LCD_Cmd
    _LCD_Cmd->_LCD_Port

Critical Paths under _main in BANK0

    _main->_tempCalc
    _tempCalc->_log
    _log->_eval_poly
    _eval_poly->___ftadd
    ___ftsub->___ftadd
    ___ftadd->___ftdiv
    ___ftdiv->___ftmul
    _readAnalog->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                32    32      0   49736
                                             73 BANK0      3     3      0
                                              0 BANK1     29    29      0
                            _ADCRead
                          _LCD_Clear
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                      _LCD_Write_Int
                   _LCD_Write_String
                 _PWM6_LoadDutyValue
                  _SYSTEM_Initialize
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___fttol
                            ___lwdiv
                         _readAnalog
                           _tempCalc
 ---------------------------------------------------------------------------------
 (1) _tempCalc                                            12     9      3   30741
                                             61 BANK0     12     9      3
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftsub
                                _log
 ---------------------------------------------------------------------------------
 (2) _log                                                  6     3      3   16061
                                             55 BANK0      6     3      3
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _frexp                                                6     2      4     330
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) _eval_poly                                           10     3      7    7103
                                             45 BANK0     10     3      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             16    10      6    2749
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6     322
                                              0 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             6     3      3    1904
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3568
                                             45 BANK0      6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             13     7      6    3395
                                             32 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    2729
                                             16 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    1707
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _readAnalog                                          22    20      2    1392
                                              9 COMMON     4     4      0
                                              6 BANK0     18    16      2
                            _ADCRead
                            ___aldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     622
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     406
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _ADCRead                                              4     1      3      22
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              8     4      4     374
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             14    10      4     464
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    3     3      0     709
                                              8 COMMON     3     3      0
                    _ADCC_Initialize
                    _InitCustomChars
                          _LCD_Clear
                           _LCD_Init
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM6_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             4     4      0     220
                                              4 COMMON     4     4      0
                            _LCD_Cmd
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            0     0      0     110
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (2) _InitCustomChars                                      2     2      0     356
                                              5 COMMON     2     2      0
                            _LCD_Cmd
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM6_LoadDutyValue                                   4     2      2     256
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCD_Write_String                                     5     3      2    1858
                                              5 COMMON     5     3      2
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (1) _LCD_Write_Int                                       19    14      5    2759
                                              0 BANK0     19    14      5
                     _LCD_Write_Char
                            ___awdiv
                            ___awmod
                            ___fttol (ARG)
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     402
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     406
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (1) _LCD_Set_Cursor                                       7     6      1     910
                                              4 COMMON     7     6      1
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (3) _LCD_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (3) _LCD_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCRead
   _LCD_Clear
     _LCD_Cmd
       _LCD_Port
   _LCD_Set_Cursor
     _LCD_Cmd
       _LCD_Port
   _LCD_Write_Char
     _LCD_Port
   _LCD_Write_Int
     _LCD_Write_Char
       _LCD_Port
     ___awdiv
     ___awmod
     ___fttol (ARG)
     ___lwdiv (ARG)
   _LCD_Write_String
     _LCD_Write_Char
       _LCD_Port
   _PWM6_LoadDutyValue
   _SYSTEM_Initialize
     _ADCC_Initialize
     _InitCustomChars
       _LCD_Cmd
         _LCD_Port
       _LCD_Write_Char
         _LCD_Port
     _LCD_Clear
       _LCD_Cmd
         _LCD_Port
     _LCD_Init
       _LCD_Cmd
         _LCD_Port
       _LCD_Port
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM6_Initialize
     _TMR2_Initialize
   ___ftadd
     ___awtoft (ARG)
       ___ftpack
     ___ftdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftpack (ARG)
     ___wmul (ARG)
     _frexp (ARG)
   ___ftdiv
     ___awtoft (ARG)
       ___ftpack
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftpack (ARG)
     ___ftpack (ARG)
   ___ftmul
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)
     _frexp (ARG)
   ___fttol
   ___lwdiv
   _readAnalog
     _ADCRead
     ___aldiv
     ___wmul
   _tempCalc
     ___awtoft
       ___ftpack
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
       _frexp (ARG)
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftsub
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
     _log
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftge
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       _eval_poly
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___wmul
       _frexp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4C      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     1D      46       7       87.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      24       9       45.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      C8      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               30      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK10               0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      C8      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Tue Feb 20 13:24:40 2018

                    __CFG_CP$OFF 0000                               l58 16AA                               l94 16E1  
                             l96 16E7                               l98 16EC                     ___awdiv@sign 0076  
            ___wmul@multiplicand 0072      __size_of_PWM6_LoadDutyValue 0016                     ___ftadd@exp1 004C  
                   ___ftadd@exp2 004B                      __CFG_LVP$ON 0000                     ___ftadd@sign 004A  
                            l100 16F1                              l401 1747                              l291 04D2  
                            l292 04DD                              l456 0AB7                              l570 0A8F  
                            l562 0A74                              l653 0B94                              l569 0A87  
                            l593 0FA9                              _GIE 005F                              _RA0 0060  
                            _RA2 0062                              _RC0 0070                              _RC1 0071  
                            _RA6 0066                              _RA7 0067                     __CFG_CPD$OFF 0000  
                            _log 0CDE                  __end_of_ADCRead 16B1                     ___awmod@sign 0076  
                _TMR2_Initialize 1695                     __CFG_BORV$LO 0000                              wreg 0009  
                    main@analogs 00BF                  __end_of_LCD_Cmd 16C5                     __CFG_ZCD$OFF 0000  
                   ___ftdiv@cntr 003A                   _LCD_Set_Cursor 08CB                     ___ftdiv@sign 003F  
                           l2003 0A79                             l2021 16E3                             l2005 0A81  
                           l2103 0FCD                             l2025 16E8                             l2113 0FE8  
                           l2035 1741                             l2123 0DA2                             l2029 16ED  
                           l2053 0F32                             l2205 1764                             l2213 086B  
                           l2141 0DF3                             l3005 0557                             l2063 0F48  
                           l2081 0F75                             l2057 0F39                             l2217 0881  
                           l2153 0E0F                             l2145 0DFB                             l2129 0DB8  
                           l3121 07A9                             l3113 07A0                             l3041 05C9  
                           l3017 058B                             l2083 0F7F                             l2075 0F62  
                           l2411 0D0D                             l3035 05B9                             l3027 05A7  
                           l2501 09DD                             l2093 0F9B                             l2085 0F84  
                           l2157 0E17                             l2237 08A2                             l2405 0CFC  
                           l3125 07B5                             l2431 0AC8                             l2095 0FA5  
                           l2087 0F88                             l2255 0A3B                             l3127 07B6  
                           l3047 05D9                             l2513 0956                             l2441 0AE6  
                           l2531 097B                             l2291 1787                             l2099 0FBB  
                           l3059 060D                             l2525 0963                             l2517 095D  
                           l2453 0B11                             l3069 0629                             l2623 08EB  
                           l2527 096F                             l2535 0984                             l2439 0AD8  
                           l2607 01F0                             l2297 1798                             l2457 0B1F  
                           l2449 0B06                             l3097 06C7                             l2475 09A6  
                           l2539 098C                             l2555 0C62                             l2493 09CC  
                           l2485 09AE                             l2469 099B                             l2653 0E61  
                           l2549 0C4C                             l2487 09BA                             l2671 0E9F  
                           l2663 0E68                             l2639 170D                             l2497 09D5  
                           l2681 0EBB                             l2673 0EA7                             l2665 0E97  
                           l2577 0CBC                             l2569 0CA3                             l2683 0EE7  
                           l2675 0EB7                             l2771 0BA5                             l2739 0B40  
                           l2669 0E9B                             l2765 0B8B                             l2757 0B70  
                           l2589 0809                             l2941 0498                             l2687 0EF5  
                           l2767 0B97                             l2759 0B7E                             l2793 17F2  
                           l2785 17D4                             l1993 0A51                             l2953 04BC  
                           l2787 17E0                             l1995 0A5B                             l2947 049E  
                           l2797 17FB                             l1997 0A60                             l1989 0A4A  
                           l2957 04C9                             l2975 050A                             l2993 053A  
                           l2985 0527                             l2969 04E8                             ?_log 0057  
                           l2999 054A                             STR_1 1042                             STR_2 104E  
                           STR_3 1050                             STR_4 1048                             STR_5 1042  
                           STR_6 103A                             STR_7 1044                             STR_8 1042  
                           STR_9 1056                             u2105 0F89                             u3005 0ED5  
                           u2045 0F63                             u2205 0DC4                             _LATA 0016  
                           _LATB 0017                             u2135 0F9C                             u2215 0DD4  
                           _LATC 0018                             u2400 0853                             u2305 17B0  
                           u3210 0226                             u3035 16D4                             u3115 0B8C  
                           u2075 0F76                             u2235 0DFC                             u2245 0E02  
                           u3055 0B47                             u2505 0AFB                             _T2PR 028D  
                           u3155 17D7                             u2515 0B07                             u2275 0E18  
                           u2605 09C5                             u3085 0B71                             u2285 0E1E  
                           u2615 09CD                             u3175 17E1                             u1815 0A7C  
                           u2705 097C                             u3185 17EB                             u3195 17F3  
                           u2475 0ADB                             u3507 0273                             u1925 1748  
                           u3517 0288                             u2575 09B1                             u2495 0AE7  
                           u1935 174D                             u1855 0A96                             u1775 0A56  
                           u3607 0345                             u3527 029D                             u2905 08D7  
                           u2825 00FD                             u3617 035A                             u3537 02B2  
                           u2595 09BB                             u2675 0966                             u2835 014B  
                           u1795 0A6F                             u2755 0C74                             u3707 041D  
                           u3627 0375                             u3547 02C7                             u2940 0E4A  
                           u2925 08F6                             u2845 0184                             u2765 0C84  
                           u3717 0432                             u3637 038A                             u3557 02DC  
                           u2695 0975                             u3807 0935                             u2855 01C7  
                           u2775 0CA4                             u3727 0447                             u3647 039F  
                           u3567 02F1                             u3817 0944                             u2865 01E0  
                           u2785 0CB3                             u3737 045C                             u3657 03B4  
                           u3577 0306                             u3497 0256                             u3907 0C21  
                           u3827 0BB9                             u2795 0CBD                             u3747 0471  
                           u3667 03C9                             u3587 031B                             u3917 0C30  
                           u3837 0BC7                             u2885 01FC                             u3757 0486  
                           u3677 03DE                             u3597 0330                             u3927 17BC  
                           u3847 0BD2                             u3767 0503                             u3687 03F3  
                           u3937 17C8                             u3857 0BDC                             u3777 059C  
                           u3697 0408                             u3947 16BF                             u3867 0BE6  
                           u3787 061E                             u3877 0BF4                             u3797 0925  
                           u3887 0C02                             u3897 0C12              tempCalc@analogValue 005D  
                           _WPUA 0F39                             _WPUB 0F44                             _WPUC 0F4F  
                           _WPUE 0F65                     __CFG_WRT$OFF 0000                    __CFG_FCMEN$ON 0000  
              ?_LCD_Write_String 0075                             _main 0218                     ___ftpack@arg 0070  
             __size_of_LCD_Clear 0008                     ___ftpack@exp 0073                             fsr0h 0005  
                           fsr1h 0007                             fsr0l 0004                             indf0 0000  
                           indf1 0001                             fsr1l 0006                             btemp 007E  
                           log@x 0057                    __CFG_BOREN$ON 0000                             ltemp 007E  
                           start 0002               ??_LCD_Write_String 0077                             ttemp 007E  
                           wtemp 007E                    __CFG_CSWEN$ON 0000                    __CFG_MCLRE$ON 0000  
                   ___ftmul@cntr 002E                    _LCD_Write_Int 0E3F                     ___ftmul@sign 002F  
                   ___fttol@exp1 007D                            ??_log 005A                     ___fttol@lval 0079  
               __end_of_LCD_Init 0C35                 __end_of_LCD_Port 16F3   __size_of_OSCILLATOR_Initialize 0009  
  __end_of_OSCILLATOR_Initialize 1666                  __end_of___aldiv 0B28                            _ADACQ 009D  
                          _ADCAP 009B                            _ADACT 0099                            ?_main 0070  
                          _ADCLK 0098                            _ADPCH 009E                            _ADREF 009A  
                __end_of___awdiv 09E2                            _ADPRE 009C                  __end_of___ftadd 1000  
                          STR_10 104A                            STR_11 1044                            STR_12 1040  
                          STR_20 103E                            STR_21 103A                            STR_13 1054  
                          STR_14 1050                            STR_22 104C                            STR_30 1026  
                          STR_23 104A                            STR_15 1052                            STR_24 1044  
                          STR_16 1048                            STR_17 104A                            STR_25 1054  
                  __CFG_WDTE$OFF 0000                            STR_18 1046                            STR_26 103C  
                          STR_19 103A                            STR_27 101B                            STR_28 101B  
                __end_of___awmod 0991                            STR_29 1030                            _ADRPT 010D  
                __end_of___ftdiv 0CDE                  __end_of___ftmul 0E3F                  ___awdiv@divisor 0070  
                __end_of___ftsub 081F                  __end_of___fttol 0BAE                            _T2CON 028E  
                          _T2HLT 028F                  __end_of___lwdiv 1800                            _T2TMR 028C  
                          _T2RST 0291                  ___awdiv@counter 0075                            _OSCEN 0891  
                          _TRISA 0011                            _TRISB 0012                            _TRISC 0013  
                _PWM6_Initialize 1666           __end_of_LCD_Set_Cursor 090A                    ___awtoft@sign 007D  
                          _frexp 0890                            _errno 006C                    ___ftpack@sign 0074  
                          main@x 00D7                            ltemp0 007E                            ltemp1 0082  
                          ltemp2 0086                            ltemp3 0080                            ttemp0 007E  
                          ttemp1 0081                            ttemp2 0084                            ttemp3 0087  
                          ttemp4 007F                            status 0003                            wtemp0 007E  
                          wtemp1 0080                            wtemp2 0082                            wtemp3 0084  
                          wtemp4 0086                            wtemp5 0088                            wtemp6 007F  
               InitCustomChars@i 0076                   ?_LCD_Write_Int 0020                   _LCD_Write_Char 17A0  
                __initialization 07BD                      log@exponent 005B                     __end_of_main 07BD  
              readAnalog@channel 0026          __end_of_TMR2_Initialize 16A3                        ??_ADCRead 0073  
                  main@tPadCount 00D4                           ??_main 0069                    ___fttol@sign1 0078  
              __end_of_LCD_Clear 165D                        ??_LCD_Cmd 0071                  ?_LCD_Set_Cursor 0074  
                         _ADCON0 0093                           _ADCON1 0094                           _ADCON2 0095  
                         _ADCON3 0096                           ?_frexp 0070                           _ADLTHH 010F  
                         _ADLTHL 010E                           _ADRESH 008D                           _ADRESL 008C  
                         _ADSTAT 0097                           _ADUTHH 0111                 ___awdiv@dividend 0072  
                         _ADUTHL 0110                 __end_of___awtoft 177A                           _ANSELA 0F38  
                         _ANSELB 0F43                           _ANSELC 0F4E                 __end_of___ftpack 0AA6  
                         _RC2PPS 0F22                   __CFG_WDTCCS$SC 0000                           _FVRCON 090C  
                         _OSCFRQ 0893                    main@dutyCycle 00D8           __end_of_LCD_Write_Char 17CC  
                 __CFG_PWRTE$OFF 0000                     _CCPTMRS1bits 021F                           ___ftge 0855  
         LCD_Write_Int@numPlaces 0023                        ??___aldiv 0078                           ___wmul 173F  
                      ??___awdiv 0074                        ??___ftadd 0046                   __CFG_STVREN$ON 0000  
                      ??___awmod 0074                        ??___ftdiv 0036                        ??___ftmul 0026  
                      ??___ftsub 007E                        ??___fttol 0074                        ??___lwdiv 0074  
        __end_of_PWM6_Initialize 1671                 ___awdiv@quotient 0077                  ___awmod@divisor 0070  
                ___awmod@counter 0075                           _totals 00A0            ___ftmul@f3_as_product 002B  
               __end_of_tempCalc 00E8                  _ADCC_Initialize 1725                 LCD_Write_Int@str 002A  
                _InitCustomChars 177A                  LCD_Set_Cursor@w 0079                  LCD_Set_Cursor@x 0077  
                LCD_Set_Cursor@y 0074                  LCD_Set_Cursor@z 0078         readAnalog@analog_channel 0079  
              _SYSTEM_Initialize 090A                 __end_oflog@coeff 101B          __end_of__initialization 07FD  
                      ?_LCD_Init 0070                        ?_LCD_Port 0070                       ___ftadd@f1 0040  
                     ___ftadd@f2 0043                       ___ftge@ff1 0070                       ___ftge@ff2 0073  
                ??_LCD_Write_Int 0025               ?_SYSTEM_Initialize 0070                     eval_poly@res 0054  
                     ___ftdiv@f1 0033                       ___ftdiv@f2 0030                       ___ftdiv@f3 003B  
                ?_LCD_Write_Char 0070                    LCD_Init@style 0077                       ___awtoft@c 0078  
                     ___ftmul@f1 0020                       ___ftmul@f2 0023                       ___ftsub@f1 0050  
                     ___ftsub@f2 004D                       ___fttol@f1 0070                   __pcstackCOMMON 0070  
                      LCD_Port@a 0070                     __pidataBANK1 1689                     __pidataBANK2 16F3  
            ??_SYSTEM_Initialize 0078                    __end_of_frexp 08CB                 ?_TMR2_Initialize 0070  
                        ??_frexp 0074        __end_of_SYSTEM_Initialize 094C                       __pbssBANK0 006C  
                     __pbssBANK1 00A0                       __pbssBANK2 0138               __size_of_eval_poly 0060  
                     ??_LCD_Init 0074                       ??_LCD_Port 0070                       __pmaintext 0218  
                        ?___ftge 0070                          ?___wmul 0070                  __CFG_PPS1WAY$ON 0000  
        __end_of_ADCC_Initialize 173F       __end_of_PWM6_LoadDutyValue 16DB                          _ADCRead 16A3  
      __size_of_LCD_Write_String 001A                 ?_PWM6_Initialize 0070                        ?___awtoft 0078  
                      ?___ftpack 0070                          _ADSTPTH 0113                          _ADSTPTL 0112  
       __CFG_SCANE$not_available 0000              __CFG_RSTOSC$HFINT32 0000                 main@displayTemp2 00D0  
        __end_of_InitCustomChars 17A0                          _LCD_Cmd 16B1                          _OSCCON1 088D  
                        _OSCCON3 088F                          _OSCTUNE 0892                          _PWM6DCH 038D  
                        _PWM6DCL 038C                          _PWM6CON 038E                          _PPSLOCK 0E8F  
                      ?_tempCalc 005D                       _readAnalog 00E8                          ___aldiv 0AA6  
                        ___cgram 0120                  __size_of___ftge 003B                          ___awdiv 0991  
                        ___ftadd 0F0A                          ___awmod 094C                          ___ftdiv 0C35  
                __size_of___wmul 001B                          ___ftmul 0D8B                          ___ftsub 0801  
                        ___fttol 0B28                          ___lwdiv 17CC                       ??___awtoft 007B  
                     ??___ftpack 0075                __end_of_eval_poly 0A42                 ??_LCD_Set_Cursor 0075  
                        __ptext1 0009                          __ptext2 0CDE                          __ptext3 0890  
                        __ptext4 09E2                          __ptext5 0D8B                          __ptext6 0855  
                        __ptext7 175A                          __ptext8 0801                          __ptext9 0F0A  
                 main@resetDelay 00D3            _OSCILLATOR_Initialize 165D                        _T2CONbits 028E  
                   __size_of_log 00AD                 ___awmod@dividend 0072                   ADCRead@channel 0073  
               ___aldiv@dividend 0074         ??_PIN_MANAGER_Initialize 0070                          _samples 2300  
                      _LCD_Clear 1655       __size_of_SYSTEM_Initialize 0042                          clrloop0 1672  
           end_of_initialization 07FD                          init_ram 167D                          initloop 167E  
                     ??_tempCalc 007E                 ___aldiv@quotient 0022                   main@startDelay 00BE  
              LCD_Write_Int@sign 0024                       main@F13657 0138                     __pstringtext 1000  
               ?_ADCC_Initialize 0070            __CFG_WDTCPS$WDTCPS_31 0000                 ?_InitCustomChars 0070  
                     main@C_or_F 00D6                       ?_LCD_Clear 0070                 __CFG_FEXTOSC$OFF 0000  
                     main@bCount 00CB                LCD_Write_String@a 0075                LCD_Write_String@i 0078  
               ??_LCD_Write_Char 0071                       main@choice 00D5                      ___ftdiv@exp 003E  
              __size_of_LCD_Init 0087                __size_of_LCD_Port 0018                      ___ftmul@exp 002A  
                    ?_readAnalog 0026                   __end_of___ftge 0890                   __end_of___wmul 175A  
               _LCD_Write_String 170B           ?_OSCILLATOR_Initialize 0070              start_initialization 07BD  
                     eval_poly@d 0050                       eval_poly@n 0052                       eval_poly@x 004D  
__size_of_PIN_MANAGER_Initialize 0036                      __end_of_log 0D8B                       frexp@value 0070  
       LCD_Write_Int@fieldLength 0022            __end_of_LCD_Write_Int 0F0A                 __CFG_LPBOREN$OFF 0000  
                       ??___ftge 0076                tempCalc@steinhart 0066                         ??___wmul 0074  
                    __pdataBANK1 00DA                      __pdataBANK2 0120                  LCD_Write_Char@a 0074  
                LCD_Write_Char@y 0073                         ?_ADCRead 0070                         ?_LCD_Cmd 0070  
              __size_of___awtoft 0020                __size_of___ftpack 0064                      __pbssBIGRAM 2300  
                       LCD_Cmd@a 0073                        ___latbits 0002                    __pcstackBANK0 0020  
                  __pcstackBANK1 00BD               _PWM6_LoadDutyValue 16C5         __size_of_TMR2_Initialize 000E  
                    ??_LCD_Clear 0074              __size_of_readAnalog 0130              ?_PWM6_LoadDutyValue 0070  
               ___lwdiv@dividend 0072           _PIN_MANAGER_Initialize 081F                         ?___aldiv 0070  
              __size_of_tempCalc 00DF                         ?___awdiv 0070                         ?___ftadd 0040  
                       ?___awmod 0070                         ?___ftdiv 0030                         ?___ftmul 0020  
                       ?___ftsub 004D                         ?___fttol 0070                         ?___lwdiv 0070  
                main@displayTemp 00CD             ??_PWM6_LoadDutyValue 0072                        _eval_poly 09E2  
       __size_of_PWM6_Initialize 000B                 ___lwdiv@quotient 0075                   __size_of_frexp 003B  
                       _T2CLKCON 0290                  ___aldiv@divisor 0070                  ___aldiv@counter 0020  
                       _LCD_Init 0BAE                   ___wmul@product 0074                         _LCD_Port 16DB  
                      clear_ram0 1671                         _PIE0bits 0716                         _PIR4bits 0710  
               __size_of_ADCRead 000E                       _ADCON0bits 0093                ___wmul@multiplier 0070  
                     ?_eval_poly 004D                 __size_of_LCD_Cmd 0014         __end_of_LCD_Write_String 1725  
              ??_TMR2_Initialize 0070                  readAnalog@value 007B                        frexp@eptr 0073  
                   ??_readAnalog 0028                     _tempCalc$980 0063          ??_OSCILLATOR_Initialize 0070  
                 LCD_Write_Int@i 0031                   LCD_Write_Int@j 002F                 __size_of___aldiv 0082  
               __size_of___awdiv 0051                 __size_of___ftadd 00F6                 __size_of___awmod 0045  
               __size_of___ftdiv 00A9                 __size_of___ftmul 00B4                 __size_of___ftsub 001E  
               __size_of___fttol 0086                 __size_of___lwdiv 0034                         ___awtoft 175A  
                       ___ftpack 0A42         __size_of_ADCC_Initialize 001A                         _channels 00DA  
                ___lwdiv@divisor 0070                  ___lwdiv@counter 0077                         __ptext10 0C35  
                       __ptext11 0A42                         __ptext20 1666                         __ptext12 00E8  
                       __ptext21 081F                         __ptext13 173F                         __ptext30 094C  
                       __ptext22 165D                         __ptext14 0AA6                         __ptext31 0991  
                       __ptext23 0BAE                         __ptext15 16A3                         __ptext32 17A0  
                       __ptext24 1655                         __ptext16 17CC                         __ptext33 08CB  
                       __ptext25 177A                         __ptext17 0B28                         __ptext34 16B1  
                       __ptext26 1725                         __ptext18 090A                         __ptext35 16DB  
                       __ptext27 16C5                         __ptext19 1695                         __ptext28 170B  
                       __ptext29 0E3F               __end_of_readAnalog 0218          __size_of_LCD_Set_Cursor 003F  
                      tempCalc@R 0060         __size_of_InitCustomChars 0026              LCD_Write_Int@F13687 00B8  
              ??_PWM6_Initialize 0070                    __size_of_main 05A5             __CFG_WDTCWS$WDTCWS_7 0000  
                       _tempCalc 0009                         main@loop 00BD      PIN_MANAGER_Initialize@state 0070  
                       log@coeff 1000                      ??_eval_poly 007E                      _sampleIndex 006E  
             LCD_Write_Char@temp 0072          ?_PIN_MANAGER_Initialize 0070                __CFG_CLKOUTEN$OFF 0000  
                    _PPSLOCKbits 0E8F          __size_of_LCD_Write_Char 002C               LCD_Set_Cursor@temp 007A  
             LCD_Write_Int@value 0020                     ___aldiv@sign 0021      PWM6_LoadDutyValue@dutyCycle 0070  
         __size_of_LCD_Write_Int 00CB   __end_of_PIN_MANAGER_Initialize 0855                ??_ADCC_Initialize 0070  
              ??_InitCustomChars 0075  
