

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Sun Feb 18 19:10:20 2018

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	stringtext,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	psect	text32,local,class=CODE,merge=1,delta=2
    51                           	psect	text33,local,class=CODE,merge=1,delta=2
    52                           	psect	text34,local,class=CODE,merge=1,delta=2
    53                           	psect	text35,local,class=CODE,merge=1,delta=2
    54                           	dabs	1,0x620,48
    55                           	dabs	1,0x5A0,80
    56                           	dabs	1,0x520,80
    57                           	dabs	1,0x4D0,32
    58                           	dabs	1,0x2300,0,_samples
    59                           	dabs	1,0x7E,2
    60  0000                     	;# 
    61  0001                     	;# 
    62  0002                     	;# 
    63  0003                     	;# 
    64  0004                     	;# 
    65  0005                     	;# 
    66  0006                     	;# 
    67  0007                     	;# 
    68  0008                     	;# 
    69  0009                     	;# 
    70  000A                     	;# 
    71  000B                     	;# 
    72  000C                     	;# 
    73  000D                     	;# 
    74  000E                     	;# 
    75  0010                     	;# 
    76  0011                     	;# 
    77  0012                     	;# 
    78  0013                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  001C                     	;# 
    83  001C                     	;# 
    84  001D                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  008C                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  008E                     	;# 
    93  008F                     	;# 
    94  0090                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0093                     	;# 
    98  0094                     	;# 
    99  0095                     	;# 
   100  0096                     	;# 
   101  0097                     	;# 
   102  0098                     	;# 
   103  0099                     	;# 
   104  009A                     	;# 
   105  009B                     	;# 
   106  009C                     	;# 
   107  009D                     	;# 
   108  009E                     	;# 
   109  010C                     	;# 
   110  010D                     	;# 
   111  010E                     	;# 
   112  010E                     	;# 
   113  010F                     	;# 
   114  0110                     	;# 
   115  0110                     	;# 
   116  0111                     	;# 
   117  0112                     	;# 
   118  0112                     	;# 
   119  0113                     	;# 
   120  0114                     	;# 
   121  0114                     	;# 
   122  0115                     	;# 
   123  0116                     	;# 
   124  0116                     	;# 
   125  0117                     	;# 
   126  0119                     	;# 
   127  0119                     	;# 
   128  0119                     	;# 
   129  011A                     	;# 
   130  011A                     	;# 
   131  011A                     	;# 
   132  011B                     	;# 
   133  011B                     	;# 
   134  011B                     	;# 
   135  011B                     	;# 
   136  011B                     	;# 
   137  011C                     	;# 
   138  011C                     	;# 
   139  011C                     	;# 
   140  011D                     	;# 
   141  011D                     	;# 
   142  011D                     	;# 
   143  011E                     	;# 
   144  011E                     	;# 
   145  011E                     	;# 
   146  011F                     	;# 
   147  011F                     	;# 
   148  011F                     	;# 
   149  011F                     	;# 
   150  011F                     	;# 
   151  018C                     	;# 
   152  018D                     	;# 
   153  018E                     	;# 
   154  018F                     	;# 
   155  0190                     	;# 
   156  0191                     	;# 
   157  0192                     	;# 
   158  0196                     	;# 
   159  0197                     	;# 
   160  0198                     	;# 
   161  0199                     	;# 
   162  019A                     	;# 
   163  019B                     	;# 
   164  019C                     	;# 
   165  020C                     	;# 
   166  020D                     	;# 
   167  020E                     	;# 
   168  020F                     	;# 
   169  020F                     	;# 
   170  0210                     	;# 
   171  0210                     	;# 
   172  0211                     	;# 
   173  0211                     	;# 
   174  0212                     	;# 
   175  0213                     	;# 
   176  0214                     	;# 
   177  0215                     	;# 
   178  0215                     	;# 
   179  0216                     	;# 
   180  0216                     	;# 
   181  0217                     	;# 
   182  0217                     	;# 
   183  0218                     	;# 
   184  0219                     	;# 
   185  021A                     	;# 
   186  021B                     	;# 
   187  021B                     	;# 
   188  021C                     	;# 
   189  021C                     	;# 
   190  021D                     	;# 
   191  021D                     	;# 
   192  021E                     	;# 
   193  021F                     	;# 
   194  028C                     	;# 
   195  028C                     	;# 
   196  028D                     	;# 
   197  028D                     	;# 
   198  028E                     	;# 
   199  028F                     	;# 
   200  0290                     	;# 
   201  0290                     	;# 
   202  0291                     	;# 
   203  0292                     	;# 
   204  0292                     	;# 
   205  0293                     	;# 
   206  0293                     	;# 
   207  0294                     	;# 
   208  0295                     	;# 
   209  0296                     	;# 
   210  0296                     	;# 
   211  0297                     	;# 
   212  0298                     	;# 
   213  0298                     	;# 
   214  0299                     	;# 
   215  0299                     	;# 
   216  029A                     	;# 
   217  029B                     	;# 
   218  029C                     	;# 
   219  029C                     	;# 
   220  029D                     	;# 
   221  030C                     	;# 
   222  030C                     	;# 
   223  030D                     	;# 
   224  030E                     	;# 
   225  030F                     	;# 
   226  0310                     	;# 
   227  0310                     	;# 
   228  0311                     	;# 
   229  0312                     	;# 
   230  0313                     	;# 
   231  0314                     	;# 
   232  0314                     	;# 
   233  0315                     	;# 
   234  0316                     	;# 
   235  0317                     	;# 
   236  0318                     	;# 
   237  0318                     	;# 
   238  0319                     	;# 
   239  031A                     	;# 
   240  031B                     	;# 
   241  031C                     	;# 
   242  031C                     	;# 
   243  031D                     	;# 
   244  031E                     	;# 
   245  031F                     	;# 
   246  038C                     	;# 
   247  038D                     	;# 
   248  038E                     	;# 
   249  0390                     	;# 
   250  0391                     	;# 
   251  0392                     	;# 
   252  040C                     	;# 
   253  040D                     	;# 
   254  040E                     	;# 
   255  040F                     	;# 
   256  0410                     	;# 
   257  0411                     	;# 
   258  0416                     	;# 
   259  0416                     	;# 
   260  0417                     	;# 
   261  0418                     	;# 
   262  0418                     	;# 
   263  0419                     	;# 
   264  041A                     	;# 
   265  041A                     	;# 
   266  041B                     	;# 
   267  041C                     	;# 
   268  041C                     	;# 
   269  041D                     	;# 
   270  041E                     	;# 
   271  041F                     	;# 
   272  048C                     	;# 
   273  048C                     	;# 
   274  048D                     	;# 
   275  048E                     	;# 
   276  048F                     	;# 
   277  048F                     	;# 
   278  0490                     	;# 
   279  0491                     	;# 
   280  0492                     	;# 
   281  0492                     	;# 
   282  0493                     	;# 
   283  0494                     	;# 
   284  0495                     	;# 
   285  0495                     	;# 
   286  0496                     	;# 
   287  0497                     	;# 
   288  0498                     	;# 
   289  0499                     	;# 
   290  049A                     	;# 
   291  049B                     	;# 
   292  049C                     	;# 
   293  049D                     	;# 
   294  050C                     	;# 
   295  050C                     	;# 
   296  050D                     	;# 
   297  050E                     	;# 
   298  050F                     	;# 
   299  050F                     	;# 
   300  0510                     	;# 
   301  0511                     	;# 
   302  0512                     	;# 
   303  0512                     	;# 
   304  0513                     	;# 
   305  0514                     	;# 
   306  0515                     	;# 
   307  0515                     	;# 
   308  0516                     	;# 
   309  0517                     	;# 
   310  0518                     	;# 
   311  0519                     	;# 
   312  051A                     	;# 
   313  051B                     	;# 
   314  051C                     	;# 
   315  051D                     	;# 
   316  058C                     	;# 
   317  058C                     	;# 
   318  058D                     	;# 
   319  058E                     	;# 
   320  058F                     	;# 
   321  058F                     	;# 
   322  0590                     	;# 
   323  0591                     	;# 
   324  0592                     	;# 
   325  0593                     	;# 
   326  060C                     	;# 
   327  060D                     	;# 
   328  060E                     	;# 
   329  060F                     	;# 
   330  0610                     	;# 
   331  0611                     	;# 
   332  0612                     	;# 
   333  0613                     	;# 
   334  0614                     	;# 
   335  0616                     	;# 
   336  0617                     	;# 
   337  0618                     	;# 
   338  0619                     	;# 
   339  061A                     	;# 
   340  061B                     	;# 
   341  061C                     	;# 
   342  061D                     	;# 
   343  061E                     	;# 
   344  068C                     	;# 
   345  068D                     	;# 
   346  068E                     	;# 
   347  068F                     	;# 
   348  0690                     	;# 
   349  0691                     	;# 
   350  0692                     	;# 
   351  0693                     	;# 
   352  0694                     	;# 
   353  070C                     	;# 
   354  070D                     	;# 
   355  070E                     	;# 
   356  070F                     	;# 
   357  0710                     	;# 
   358  0711                     	;# 
   359  0712                     	;# 
   360  0713                     	;# 
   361  0714                     	;# 
   362  0716                     	;# 
   363  0717                     	;# 
   364  0718                     	;# 
   365  0719                     	;# 
   366  071A                     	;# 
   367  071B                     	;# 
   368  071C                     	;# 
   369  071D                     	;# 
   370  071E                     	;# 
   371  0796                     	;# 
   372  0797                     	;# 
   373  0798                     	;# 
   374  0799                     	;# 
   375  079A                     	;# 
   376  079B                     	;# 
   377  080C                     	;# 
   378  080D                     	;# 
   379  080E                     	;# 
   380  080F                     	;# 
   381  0810                     	;# 
   382  0811                     	;# 
   383  0812                     	;# 
   384  0813                     	;# 
   385  0814                     	;# 
   386  081A                     	;# 
   387  081B                     	;# 
   388  081C                     	;# 
   389  081D                     	;# 
   390  081E                     	;# 
   391  081F                     	;# 
   392  088C                     	;# 
   393  088D                     	;# 
   394  088E                     	;# 
   395  088F                     	;# 
   396  0890                     	;# 
   397  0891                     	;# 
   398  0892                     	;# 
   399  0893                     	;# 
   400  0895                     	;# 
   401  0896                     	;# 
   402  0897                     	;# 
   403  0898                     	;# 
   404  0899                     	;# 
   405  089A                     	;# 
   406  089B                     	;# 
   407  090C                     	;# 
   408  090E                     	;# 
   409  090F                     	;# 
   410  091F                     	;# 
   411  091F                     	;# 
   412  098F                     	;# 
   413  098F                     	;# 
   414  0990                     	;# 
   415  0991                     	;# 
   416  0992                     	;# 
   417  0993                     	;# 
   418  0994                     	;# 
   419  0995                     	;# 
   420  0996                     	;# 
   421  0997                     	;# 
   422  0E0F                     	;# 
   423  0E10                     	;# 
   424  0E11                     	;# 
   425  0E12                     	;# 
   426  0E13                     	;# 
   427  0E14                     	;# 
   428  0E15                     	;# 
   429  0E16                     	;# 
   430  0E17                     	;# 
   431  0E18                     	;# 
   432  0E19                     	;# 
   433  0E1A                     	;# 
   434  0E1B                     	;# 
   435  0E1C                     	;# 
   436  0E1D                     	;# 
   437  0E1E                     	;# 
   438  0E1F                     	;# 
   439  0E20                     	;# 
   440  0E21                     	;# 
   441  0E22                     	;# 
   442  0E23                     	;# 
   443  0E24                     	;# 
   444  0E25                     	;# 
   445  0E26                     	;# 
   446  0E27                     	;# 
   447  0E28                     	;# 
   448  0E29                     	;# 
   449  0E2A                     	;# 
   450  0E2B                     	;# 
   451  0E2C                     	;# 
   452  0E2D                     	;# 
   453  0E2E                     	;# 
   454  0E2F                     	;# 
   455  0E30                     	;# 
   456  0E31                     	;# 
   457  0E32                     	;# 
   458  0E33                     	;# 
   459  0E34                     	;# 
   460  0E35                     	;# 
   461  0E36                     	;# 
   462  0E37                     	;# 
   463  0E8F                     	;# 
   464  0E90                     	;# 
   465  0E91                     	;# 
   466  0E92                     	;# 
   467  0E93                     	;# 
   468  0E94                     	;# 
   469  0E95                     	;# 
   470  0E96                     	;# 
   471  0E97                     	;# 
   472  0E9C                     	;# 
   473  0E9D                     	;# 
   474  0E9E                     	;# 
   475  0EA1                     	;# 
   476  0EA2                     	;# 
   477  0EA3                     	;# 
   478  0EA4                     	;# 
   479  0EA5                     	;# 
   480  0EA9                     	;# 
   481  0EAA                     	;# 
   482  0EAB                     	;# 
   483  0EAC                     	;# 
   484  0EB1                     	;# 
   485  0EB2                     	;# 
   486  0EB3                     	;# 
   487  0EB8                     	;# 
   488  0EB9                     	;# 
   489  0EBA                     	;# 
   490  0EBB                     	;# 
   491  0EBC                     	;# 
   492  0EBD                     	;# 
   493  0EBE                     	;# 
   494  0EC3                     	;# 
   495  0EC5                     	;# 
   496  0EC6                     	;# 
   497  0EC7                     	;# 
   498  0EC8                     	;# 
   499  0EC9                     	;# 
   500  0ECA                     	;# 
   501  0ECB                     	;# 
   502  0ECC                     	;# 
   503  0F10                     	;# 
   504  0F11                     	;# 
   505  0F12                     	;# 
   506  0F13                     	;# 
   507  0F14                     	;# 
   508  0F15                     	;# 
   509  0F16                     	;# 
   510  0F17                     	;# 
   511  0F18                     	;# 
   512  0F19                     	;# 
   513  0F1A                     	;# 
   514  0F1B                     	;# 
   515  0F1C                     	;# 
   516  0F1D                     	;# 
   517  0F1E                     	;# 
   518  0F1F                     	;# 
   519  0F20                     	;# 
   520  0F21                     	;# 
   521  0F22                     	;# 
   522  0F23                     	;# 
   523  0F24                     	;# 
   524  0F25                     	;# 
   525  0F26                     	;# 
   526  0F27                     	;# 
   527  0F38                     	;# 
   528  0F39                     	;# 
   529  0F3A                     	;# 
   530  0F3B                     	;# 
   531  0F3C                     	;# 
   532  0F3D                     	;# 
   533  0F3E                     	;# 
   534  0F3F                     	;# 
   535  0F40                     	;# 
   536  0F41                     	;# 
   537  0F43                     	;# 
   538  0F44                     	;# 
   539  0F45                     	;# 
   540  0F46                     	;# 
   541  0F47                     	;# 
   542  0F48                     	;# 
   543  0F49                     	;# 
   544  0F4A                     	;# 
   545  0F4B                     	;# 
   546  0F4C                     	;# 
   547  0F4E                     	;# 
   548  0F4F                     	;# 
   549  0F50                     	;# 
   550  0F51                     	;# 
   551  0F52                     	;# 
   552  0F53                     	;# 
   553  0F54                     	;# 
   554  0F55                     	;# 
   555  0F56                     	;# 
   556  0F57                     	;# 
   557  0F65                     	;# 
   558  0F68                     	;# 
   559  0F69                     	;# 
   560  0F6A                     	;# 
   561  0F6B                     	;# 
   562  0FE4                     	;# 
   563  0FE5                     	;# 
   564  0FE6                     	;# 
   565  0FE7                     	;# 
   566  0FE8                     	;# 
   567  0FE9                     	;# 
   568  0FEA                     	;# 
   569  0FEB                     	;# 
   570  0FED                     	;# 
   571  0FEE                     	;# 
   572  0FEF                     	;# 
   573  0000                     	;# 
   574  0001                     	;# 
   575  0002                     	;# 
   576  0003                     	;# 
   577  0004                     	;# 
   578  0005                     	;# 
   579  0006                     	;# 
   580  0007                     	;# 
   581  0008                     	;# 
   582  0009                     	;# 
   583  000A                     	;# 
   584  000B                     	;# 
   585  000C                     	;# 
   586  000D                     	;# 
   587  000E                     	;# 
   588  0010                     	;# 
   589  0011                     	;# 
   590  0012                     	;# 
   591  0013                     	;# 
   592  0016                     	;# 
   593  0017                     	;# 
   594  0018                     	;# 
   595  001C                     	;# 
   596  001C                     	;# 
   597  001D                     	;# 
   598  001D                     	;# 
   599  001E                     	;# 
   600  001F                     	;# 
   601  008C                     	;# 
   602  008C                     	;# 
   603  008D                     	;# 
   604  008E                     	;# 
   605  008E                     	;# 
   606  008F                     	;# 
   607  0090                     	;# 
   608  0090                     	;# 
   609  0091                     	;# 
   610  0093                     	;# 
   611  0094                     	;# 
   612  0095                     	;# 
   613  0096                     	;# 
   614  0097                     	;# 
   615  0098                     	;# 
   616  0099                     	;# 
   617  009A                     	;# 
   618  009B                     	;# 
   619  009C                     	;# 
   620  009D                     	;# 
   621  009E                     	;# 
   622  010C                     	;# 
   623  010D                     	;# 
   624  010E                     	;# 
   625  010E                     	;# 
   626  010F                     	;# 
   627  0110                     	;# 
   628  0110                     	;# 
   629  0111                     	;# 
   630  0112                     	;# 
   631  0112                     	;# 
   632  0113                     	;# 
   633  0114                     	;# 
   634  0114                     	;# 
   635  0115                     	;# 
   636  0116                     	;# 
   637  0116                     	;# 
   638  0117                     	;# 
   639  0119                     	;# 
   640  0119                     	;# 
   641  0119                     	;# 
   642  011A                     	;# 
   643  011A                     	;# 
   644  011A                     	;# 
   645  011B                     	;# 
   646  011B                     	;# 
   647  011B                     	;# 
   648  011B                     	;# 
   649  011B                     	;# 
   650  011C                     	;# 
   651  011C                     	;# 
   652  011C                     	;# 
   653  011D                     	;# 
   654  011D                     	;# 
   655  011D                     	;# 
   656  011E                     	;# 
   657  011E                     	;# 
   658  011E                     	;# 
   659  011F                     	;# 
   660  011F                     	;# 
   661  011F                     	;# 
   662  011F                     	;# 
   663  011F                     	;# 
   664  018C                     	;# 
   665  018D                     	;# 
   666  018E                     	;# 
   667  018F                     	;# 
   668  0190                     	;# 
   669  0191                     	;# 
   670  0192                     	;# 
   671  0196                     	;# 
   672  0197                     	;# 
   673  0198                     	;# 
   674  0199                     	;# 
   675  019A                     	;# 
   676  019B                     	;# 
   677  019C                     	;# 
   678  020C                     	;# 
   679  020D                     	;# 
   680  020E                     	;# 
   681  020F                     	;# 
   682  020F                     	;# 
   683  0210                     	;# 
   684  0210                     	;# 
   685  0211                     	;# 
   686  0211                     	;# 
   687  0212                     	;# 
   688  0213                     	;# 
   689  0214                     	;# 
   690  0215                     	;# 
   691  0215                     	;# 
   692  0216                     	;# 
   693  0216                     	;# 
   694  0217                     	;# 
   695  0217                     	;# 
   696  0218                     	;# 
   697  0219                     	;# 
   698  021A                     	;# 
   699  021B                     	;# 
   700  021B                     	;# 
   701  021C                     	;# 
   702  021C                     	;# 
   703  021D                     	;# 
   704  021D                     	;# 
   705  021E                     	;# 
   706  021F                     	;# 
   707  028C                     	;# 
   708  028C                     	;# 
   709  028D                     	;# 
   710  028D                     	;# 
   711  028E                     	;# 
   712  028F                     	;# 
   713  0290                     	;# 
   714  0290                     	;# 
   715  0291                     	;# 
   716  0292                     	;# 
   717  0292                     	;# 
   718  0293                     	;# 
   719  0293                     	;# 
   720  0294                     	;# 
   721  0295                     	;# 
   722  0296                     	;# 
   723  0296                     	;# 
   724  0297                     	;# 
   725  0298                     	;# 
   726  0298                     	;# 
   727  0299                     	;# 
   728  0299                     	;# 
   729  029A                     	;# 
   730  029B                     	;# 
   731  029C                     	;# 
   732  029C                     	;# 
   733  029D                     	;# 
   734  030C                     	;# 
   735  030C                     	;# 
   736  030D                     	;# 
   737  030E                     	;# 
   738  030F                     	;# 
   739  0310                     	;# 
   740  0310                     	;# 
   741  0311                     	;# 
   742  0312                     	;# 
   743  0313                     	;# 
   744  0314                     	;# 
   745  0314                     	;# 
   746  0315                     	;# 
   747  0316                     	;# 
   748  0317                     	;# 
   749  0318                     	;# 
   750  0318                     	;# 
   751  0319                     	;# 
   752  031A                     	;# 
   753  031B                     	;# 
   754  031C                     	;# 
   755  031C                     	;# 
   756  031D                     	;# 
   757  031E                     	;# 
   758  031F                     	;# 
   759  038C                     	;# 
   760  038D                     	;# 
   761  038E                     	;# 
   762  0390                     	;# 
   763  0391                     	;# 
   764  0392                     	;# 
   765  040C                     	;# 
   766  040D                     	;# 
   767  040E                     	;# 
   768  040F                     	;# 
   769  0410                     	;# 
   770  0411                     	;# 
   771  0416                     	;# 
   772  0416                     	;# 
   773  0417                     	;# 
   774  0418                     	;# 
   775  0418                     	;# 
   776  0419                     	;# 
   777  041A                     	;# 
   778  041A                     	;# 
   779  041B                     	;# 
   780  041C                     	;# 
   781  041C                     	;# 
   782  041D                     	;# 
   783  041E                     	;# 
   784  041F                     	;# 
   785  048C                     	;# 
   786  048C                     	;# 
   787  048D                     	;# 
   788  048E                     	;# 
   789  048F                     	;# 
   790  048F                     	;# 
   791  0490                     	;# 
   792  0491                     	;# 
   793  0492                     	;# 
   794  0492                     	;# 
   795  0493                     	;# 
   796  0494                     	;# 
   797  0495                     	;# 
   798  0495                     	;# 
   799  0496                     	;# 
   800  0497                     	;# 
   801  0498                     	;# 
   802  0499                     	;# 
   803  049A                     	;# 
   804  049B                     	;# 
   805  049C                     	;# 
   806  049D                     	;# 
   807  050C                     	;# 
   808  050C                     	;# 
   809  050D                     	;# 
   810  050E                     	;# 
   811  050F                     	;# 
   812  050F                     	;# 
   813  0510                     	;# 
   814  0511                     	;# 
   815  0512                     	;# 
   816  0512                     	;# 
   817  0513                     	;# 
   818  0514                     	;# 
   819  0515                     	;# 
   820  0515                     	;# 
   821  0516                     	;# 
   822  0517                     	;# 
   823  0518                     	;# 
   824  0519                     	;# 
   825  051A                     	;# 
   826  051B                     	;# 
   827  051C                     	;# 
   828  051D                     	;# 
   829  058C                     	;# 
   830  058C                     	;# 
   831  058D                     	;# 
   832  058E                     	;# 
   833  058F                     	;# 
   834  058F                     	;# 
   835  0590                     	;# 
   836  0591                     	;# 
   837  0592                     	;# 
   838  0593                     	;# 
   839  060C                     	;# 
   840  060D                     	;# 
   841  060E                     	;# 
   842  060F                     	;# 
   843  0610                     	;# 
   844  0611                     	;# 
   845  0612                     	;# 
   846  0613                     	;# 
   847  0614                     	;# 
   848  0616                     	;# 
   849  0617                     	;# 
   850  0618                     	;# 
   851  0619                     	;# 
   852  061A                     	;# 
   853  061B                     	;# 
   854  061C                     	;# 
   855  061D                     	;# 
   856  061E                     	;# 
   857  068C                     	;# 
   858  068D                     	;# 
   859  068E                     	;# 
   860  068F                     	;# 
   861  0690                     	;# 
   862  0691                     	;# 
   863  0692                     	;# 
   864  0693                     	;# 
   865  0694                     	;# 
   866  070C                     	;# 
   867  070D                     	;# 
   868  070E                     	;# 
   869  070F                     	;# 
   870  0710                     	;# 
   871  0711                     	;# 
   872  0712                     	;# 
   873  0713                     	;# 
   874  0714                     	;# 
   875  0716                     	;# 
   876  0717                     	;# 
   877  0718                     	;# 
   878  0719                     	;# 
   879  071A                     	;# 
   880  071B                     	;# 
   881  071C                     	;# 
   882  071D                     	;# 
   883  071E                     	;# 
   884  0796                     	;# 
   885  0797                     	;# 
   886  0798                     	;# 
   887  0799                     	;# 
   888  079A                     	;# 
   889  079B                     	;# 
   890  080C                     	;# 
   891  080D                     	;# 
   892  080E                     	;# 
   893  080F                     	;# 
   894  0810                     	;# 
   895  0811                     	;# 
   896  0812                     	;# 
   897  0813                     	;# 
   898  0814                     	;# 
   899  081A                     	;# 
   900  081B                     	;# 
   901  081C                     	;# 
   902  081D                     	;# 
   903  081E                     	;# 
   904  081F                     	;# 
   905  088C                     	;# 
   906  088D                     	;# 
   907  088E                     	;# 
   908  088F                     	;# 
   909  0890                     	;# 
   910  0891                     	;# 
   911  0892                     	;# 
   912  0893                     	;# 
   913  0895                     	;# 
   914  0896                     	;# 
   915  0897                     	;# 
   916  0898                     	;# 
   917  0899                     	;# 
   918  089A                     	;# 
   919  089B                     	;# 
   920  090C                     	;# 
   921  090E                     	;# 
   922  090F                     	;# 
   923  091F                     	;# 
   924  091F                     	;# 
   925  098F                     	;# 
   926  098F                     	;# 
   927  0990                     	;# 
   928  0991                     	;# 
   929  0992                     	;# 
   930  0993                     	;# 
   931  0994                     	;# 
   932  0995                     	;# 
   933  0996                     	;# 
   934  0997                     	;# 
   935  0E0F                     	;# 
   936  0E10                     	;# 
   937  0E11                     	;# 
   938  0E12                     	;# 
   939  0E13                     	;# 
   940  0E14                     	;# 
   941  0E15                     	;# 
   942  0E16                     	;# 
   943  0E17                     	;# 
   944  0E18                     	;# 
   945  0E19                     	;# 
   946  0E1A                     	;# 
   947  0E1B                     	;# 
   948  0E1C                     	;# 
   949  0E1D                     	;# 
   950  0E1E                     	;# 
   951  0E1F                     	;# 
   952  0E20                     	;# 
   953  0E21                     	;# 
   954  0E22                     	;# 
   955  0E23                     	;# 
   956  0E24                     	;# 
   957  0E25                     	;# 
   958  0E26                     	;# 
   959  0E27                     	;# 
   960  0E28                     	;# 
   961  0E29                     	;# 
   962  0E2A                     	;# 
   963  0E2B                     	;# 
   964  0E2C                     	;# 
   965  0E2D                     	;# 
   966  0E2E                     	;# 
   967  0E2F                     	;# 
   968  0E30                     	;# 
   969  0E31                     	;# 
   970  0E32                     	;# 
   971  0E33                     	;# 
   972  0E34                     	;# 
   973  0E35                     	;# 
   974  0E36                     	;# 
   975  0E37                     	;# 
   976  0E8F                     	;# 
   977  0E90                     	;# 
   978  0E91                     	;# 
   979  0E92                     	;# 
   980  0E93                     	;# 
   981  0E94                     	;# 
   982  0E95                     	;# 
   983  0E96                     	;# 
   984  0E97                     	;# 
   985  0E9C                     	;# 
   986  0E9D                     	;# 
   987  0E9E                     	;# 
   988  0EA1                     	;# 
   989  0EA2                     	;# 
   990  0EA3                     	;# 
   991  0EA4                     	;# 
   992  0EA5                     	;# 
   993  0EA9                     	;# 
   994  0EAA                     	;# 
   995  0EAB                     	;# 
   996  0EAC                     	;# 
   997  0EB1                     	;# 
   998  0EB2                     	;# 
   999  0EB3                     	;# 
  1000  0EB8                     	;# 
  1001  0EB9                     	;# 
  1002  0EBA                     	;# 
  1003  0EBB                     	;# 
  1004  0EBC                     	;# 
  1005  0EBD                     	;# 
  1006  0EBE                     	;# 
  1007  0EC3                     	;# 
  1008  0EC5                     	;# 
  1009  0EC6                     	;# 
  1010  0EC7                     	;# 
  1011  0EC8                     	;# 
  1012  0EC9                     	;# 
  1013  0ECA                     	;# 
  1014  0ECB                     	;# 
  1015  0ECC                     	;# 
  1016  0F10                     	;# 
  1017  0F11                     	;# 
  1018  0F12                     	;# 
  1019  0F13                     	;# 
  1020  0F14                     	;# 
  1021  0F15                     	;# 
  1022  0F16                     	;# 
  1023  0F17                     	;# 
  1024  0F18                     	;# 
  1025  0F19                     	;# 
  1026  0F1A                     	;# 
  1027  0F1B                     	;# 
  1028  0F1C                     	;# 
  1029  0F1D                     	;# 
  1030  0F1E                     	;# 
  1031  0F1F                     	;# 
  1032  0F20                     	;# 
  1033  0F21                     	;# 
  1034  0F22                     	;# 
  1035  0F23                     	;# 
  1036  0F24                     	;# 
  1037  0F25                     	;# 
  1038  0F26                     	;# 
  1039  0F27                     	;# 
  1040  0F38                     	;# 
  1041  0F39                     	;# 
  1042  0F3A                     	;# 
  1043  0F3B                     	;# 
  1044  0F3C                     	;# 
  1045  0F3D                     	;# 
  1046  0F3E                     	;# 
  1047  0F3F                     	;# 
  1048  0F40                     	;# 
  1049  0F41                     	;# 
  1050  0F43                     	;# 
  1051  0F44                     	;# 
  1052  0F45                     	;# 
  1053  0F46                     	;# 
  1054  0F47                     	;# 
  1055  0F48                     	;# 
  1056  0F49                     	;# 
  1057  0F4A                     	;# 
  1058  0F4B                     	;# 
  1059  0F4C                     	;# 
  1060  0F4E                     	;# 
  1061  0F4F                     	;# 
  1062  0F50                     	;# 
  1063  0F51                     	;# 
  1064  0F52                     	;# 
  1065  0F53                     	;# 
  1066  0F54                     	;# 
  1067  0F55                     	;# 
  1068  0F56                     	;# 
  1069  0F57                     	;# 
  1070  0F65                     	;# 
  1071  0F68                     	;# 
  1072  0F69                     	;# 
  1073  0F6A                     	;# 
  1074  0F6B                     	;# 
  1075  0FE4                     	;# 
  1076  0FE5                     	;# 
  1077  0FE6                     	;# 
  1078  0FE7                     	;# 
  1079  0FE8                     	;# 
  1080  0FE9                     	;# 
  1081  0FEA                     	;# 
  1082  0FEB                     	;# 
  1083  0FED                     	;# 
  1084  0FEE                     	;# 
  1085  0FEF                     	;# 
  1086  0000                     	;# 
  1087  0001                     	;# 
  1088  0002                     	;# 
  1089  0003                     	;# 
  1090  0004                     	;# 
  1091  0005                     	;# 
  1092  0006                     	;# 
  1093  0007                     	;# 
  1094  0008                     	;# 
  1095  0009                     	;# 
  1096  000A                     	;# 
  1097  000B                     	;# 
  1098  000C                     	;# 
  1099  000D                     	;# 
  1100  000E                     	;# 
  1101  0010                     	;# 
  1102  0011                     	;# 
  1103  0012                     	;# 
  1104  0013                     	;# 
  1105  0016                     	;# 
  1106  0017                     	;# 
  1107  0018                     	;# 
  1108  001C                     	;# 
  1109  001C                     	;# 
  1110  001D                     	;# 
  1111  001D                     	;# 
  1112  001E                     	;# 
  1113  001F                     	;# 
  1114  008C                     	;# 
  1115  008C                     	;# 
  1116  008D                     	;# 
  1117  008E                     	;# 
  1118  008E                     	;# 
  1119  008F                     	;# 
  1120  0090                     	;# 
  1121  0090                     	;# 
  1122  0091                     	;# 
  1123  0093                     	;# 
  1124  0094                     	;# 
  1125  0095                     	;# 
  1126  0096                     	;# 
  1127  0097                     	;# 
  1128  0098                     	;# 
  1129  0099                     	;# 
  1130  009A                     	;# 
  1131  009B                     	;# 
  1132  009C                     	;# 
  1133  009D                     	;# 
  1134  009E                     	;# 
  1135  010C                     	;# 
  1136  010D                     	;# 
  1137  010E                     	;# 
  1138  010E                     	;# 
  1139  010F                     	;# 
  1140  0110                     	;# 
  1141  0110                     	;# 
  1142  0111                     	;# 
  1143  0112                     	;# 
  1144  0112                     	;# 
  1145  0113                     	;# 
  1146  0114                     	;# 
  1147  0114                     	;# 
  1148  0115                     	;# 
  1149  0116                     	;# 
  1150  0116                     	;# 
  1151  0117                     	;# 
  1152  0119                     	;# 
  1153  0119                     	;# 
  1154  0119                     	;# 
  1155  011A                     	;# 
  1156  011A                     	;# 
  1157  011A                     	;# 
  1158  011B                     	;# 
  1159  011B                     	;# 
  1160  011B                     	;# 
  1161  011B                     	;# 
  1162  011B                     	;# 
  1163  011C                     	;# 
  1164  011C                     	;# 
  1165  011C                     	;# 
  1166  011D                     	;# 
  1167  011D                     	;# 
  1168  011D                     	;# 
  1169  011E                     	;# 
  1170  011E                     	;# 
  1171  011E                     	;# 
  1172  011F                     	;# 
  1173  011F                     	;# 
  1174  011F                     	;# 
  1175  011F                     	;# 
  1176  011F                     	;# 
  1177  018C                     	;# 
  1178  018D                     	;# 
  1179  018E                     	;# 
  1180  018F                     	;# 
  1181  0190                     	;# 
  1182  0191                     	;# 
  1183  0192                     	;# 
  1184  0196                     	;# 
  1185  0197                     	;# 
  1186  0198                     	;# 
  1187  0199                     	;# 
  1188  019A                     	;# 
  1189  019B                     	;# 
  1190  019C                     	;# 
  1191  020C                     	;# 
  1192  020D                     	;# 
  1193  020E                     	;# 
  1194  020F                     	;# 
  1195  020F                     	;# 
  1196  0210                     	;# 
  1197  0210                     	;# 
  1198  0211                     	;# 
  1199  0211                     	;# 
  1200  0212                     	;# 
  1201  0213                     	;# 
  1202  0214                     	;# 
  1203  0215                     	;# 
  1204  0215                     	;# 
  1205  0216                     	;# 
  1206  0216                     	;# 
  1207  0217                     	;# 
  1208  0217                     	;# 
  1209  0218                     	;# 
  1210  0219                     	;# 
  1211  021A                     	;# 
  1212  021B                     	;# 
  1213  021B                     	;# 
  1214  021C                     	;# 
  1215  021C                     	;# 
  1216  021D                     	;# 
  1217  021D                     	;# 
  1218  021E                     	;# 
  1219  021F                     	;# 
  1220  028C                     	;# 
  1221  028C                     	;# 
  1222  028D                     	;# 
  1223  028D                     	;# 
  1224  028E                     	;# 
  1225  028F                     	;# 
  1226  0290                     	;# 
  1227  0290                     	;# 
  1228  0291                     	;# 
  1229  0292                     	;# 
  1230  0292                     	;# 
  1231  0293                     	;# 
  1232  0293                     	;# 
  1233  0294                     	;# 
  1234  0295                     	;# 
  1235  0296                     	;# 
  1236  0296                     	;# 
  1237  0297                     	;# 
  1238  0298                     	;# 
  1239  0298                     	;# 
  1240  0299                     	;# 
  1241  0299                     	;# 
  1242  029A                     	;# 
  1243  029B                     	;# 
  1244  029C                     	;# 
  1245  029C                     	;# 
  1246  029D                     	;# 
  1247  030C                     	;# 
  1248  030C                     	;# 
  1249  030D                     	;# 
  1250  030E                     	;# 
  1251  030F                     	;# 
  1252  0310                     	;# 
  1253  0310                     	;# 
  1254  0311                     	;# 
  1255  0312                     	;# 
  1256  0313                     	;# 
  1257  0314                     	;# 
  1258  0314                     	;# 
  1259  0315                     	;# 
  1260  0316                     	;# 
  1261  0317                     	;# 
  1262  0318                     	;# 
  1263  0318                     	;# 
  1264  0319                     	;# 
  1265  031A                     	;# 
  1266  031B                     	;# 
  1267  031C                     	;# 
  1268  031C                     	;# 
  1269  031D                     	;# 
  1270  031E                     	;# 
  1271  031F                     	;# 
  1272  038C                     	;# 
  1273  038D                     	;# 
  1274  038E                     	;# 
  1275  0390                     	;# 
  1276  0391                     	;# 
  1277  0392                     	;# 
  1278  040C                     	;# 
  1279  040D                     	;# 
  1280  040E                     	;# 
  1281  040F                     	;# 
  1282  0410                     	;# 
  1283  0411                     	;# 
  1284  0416                     	;# 
  1285  0416                     	;# 
  1286  0417                     	;# 
  1287  0418                     	;# 
  1288  0418                     	;# 
  1289  0419                     	;# 
  1290  041A                     	;# 
  1291  041A                     	;# 
  1292  041B                     	;# 
  1293  041C                     	;# 
  1294  041C                     	;# 
  1295  041D                     	;# 
  1296  041E                     	;# 
  1297  041F                     	;# 
  1298  048C                     	;# 
  1299  048C                     	;# 
  1300  048D                     	;# 
  1301  048E                     	;# 
  1302  048F                     	;# 
  1303  048F                     	;# 
  1304  0490                     	;# 
  1305  0491                     	;# 
  1306  0492                     	;# 
  1307  0492                     	;# 
  1308  0493                     	;# 
  1309  0494                     	;# 
  1310  0495                     	;# 
  1311  0495                     	;# 
  1312  0496                     	;# 
  1313  0497                     	;# 
  1314  0498                     	;# 
  1315  0499                     	;# 
  1316  049A                     	;# 
  1317  049B                     	;# 
  1318  049C                     	;# 
  1319  049D                     	;# 
  1320  050C                     	;# 
  1321  050C                     	;# 
  1322  050D                     	;# 
  1323  050E                     	;# 
  1324  050F                     	;# 
  1325  050F                     	;# 
  1326  0510                     	;# 
  1327  0511                     	;# 
  1328  0512                     	;# 
  1329  0512                     	;# 
  1330  0513                     	;# 
  1331  0514                     	;# 
  1332  0515                     	;# 
  1333  0515                     	;# 
  1334  0516                     	;# 
  1335  0517                     	;# 
  1336  0518                     	;# 
  1337  0519                     	;# 
  1338  051A                     	;# 
  1339  051B                     	;# 
  1340  051C                     	;# 
  1341  051D                     	;# 
  1342  058C                     	;# 
  1343  058C                     	;# 
  1344  058D                     	;# 
  1345  058E                     	;# 
  1346  058F                     	;# 
  1347  058F                     	;# 
  1348  0590                     	;# 
  1349  0591                     	;# 
  1350  0592                     	;# 
  1351  0593                     	;# 
  1352  060C                     	;# 
  1353  060D                     	;# 
  1354  060E                     	;# 
  1355  060F                     	;# 
  1356  0610                     	;# 
  1357  0611                     	;# 
  1358  0612                     	;# 
  1359  0613                     	;# 
  1360  0614                     	;# 
  1361  0616                     	;# 
  1362  0617                     	;# 
  1363  0618                     	;# 
  1364  0619                     	;# 
  1365  061A                     	;# 
  1366  061B                     	;# 
  1367  061C                     	;# 
  1368  061D                     	;# 
  1369  061E                     	;# 
  1370  068C                     	;# 
  1371  068D                     	;# 
  1372  068E                     	;# 
  1373  068F                     	;# 
  1374  0690                     	;# 
  1375  0691                     	;# 
  1376  0692                     	;# 
  1377  0693                     	;# 
  1378  0694                     	;# 
  1379  070C                     	;# 
  1380  070D                     	;# 
  1381  070E                     	;# 
  1382  070F                     	;# 
  1383  0710                     	;# 
  1384  0711                     	;# 
  1385  0712                     	;# 
  1386  0713                     	;# 
  1387  0714                     	;# 
  1388  0716                     	;# 
  1389  0717                     	;# 
  1390  0718                     	;# 
  1391  0719                     	;# 
  1392  071A                     	;# 
  1393  071B                     	;# 
  1394  071C                     	;# 
  1395  071D                     	;# 
  1396  071E                     	;# 
  1397  0796                     	;# 
  1398  0797                     	;# 
  1399  0798                     	;# 
  1400  0799                     	;# 
  1401  079A                     	;# 
  1402  079B                     	;# 
  1403  080C                     	;# 
  1404  080D                     	;# 
  1405  080E                     	;# 
  1406  080F                     	;# 
  1407  0810                     	;# 
  1408  0811                     	;# 
  1409  0812                     	;# 
  1410  0813                     	;# 
  1411  0814                     	;# 
  1412  081A                     	;# 
  1413  081B                     	;# 
  1414  081C                     	;# 
  1415  081D                     	;# 
  1416  081E                     	;# 
  1417  081F                     	;# 
  1418  088C                     	;# 
  1419  088D                     	;# 
  1420  088E                     	;# 
  1421  088F                     	;# 
  1422  0890                     	;# 
  1423  0891                     	;# 
  1424  0892                     	;# 
  1425  0893                     	;# 
  1426  0895                     	;# 
  1427  0896                     	;# 
  1428  0897                     	;# 
  1429  0898                     	;# 
  1430  0899                     	;# 
  1431  089A                     	;# 
  1432  089B                     	;# 
  1433  090C                     	;# 
  1434  090E                     	;# 
  1435  090F                     	;# 
  1436  091F                     	;# 
  1437  091F                     	;# 
  1438  098F                     	;# 
  1439  098F                     	;# 
  1440  0990                     	;# 
  1441  0991                     	;# 
  1442  0992                     	;# 
  1443  0993                     	;# 
  1444  0994                     	;# 
  1445  0995                     	;# 
  1446  0996                     	;# 
  1447  0997                     	;# 
  1448  0E0F                     	;# 
  1449  0E10                     	;# 
  1450  0E11                     	;# 
  1451  0E12                     	;# 
  1452  0E13                     	;# 
  1453  0E14                     	;# 
  1454  0E15                     	;# 
  1455  0E16                     	;# 
  1456  0E17                     	;# 
  1457  0E18                     	;# 
  1458  0E19                     	;# 
  1459  0E1A                     	;# 
  1460  0E1B                     	;# 
  1461  0E1C                     	;# 
  1462  0E1D                     	;# 
  1463  0E1E                     	;# 
  1464  0E1F                     	;# 
  1465  0E20                     	;# 
  1466  0E21                     	;# 
  1467  0E22                     	;# 
  1468  0E23                     	;# 
  1469  0E24                     	;# 
  1470  0E25                     	;# 
  1471  0E26                     	;# 
  1472  0E27                     	;# 
  1473  0E28                     	;# 
  1474  0E29                     	;# 
  1475  0E2A                     	;# 
  1476  0E2B                     	;# 
  1477  0E2C                     	;# 
  1478  0E2D                     	;# 
  1479  0E2E                     	;# 
  1480  0E2F                     	;# 
  1481  0E30                     	;# 
  1482  0E31                     	;# 
  1483  0E32                     	;# 
  1484  0E33                     	;# 
  1485  0E34                     	;# 
  1486  0E35                     	;# 
  1487  0E36                     	;# 
  1488  0E37                     	;# 
  1489  0E8F                     	;# 
  1490  0E90                     	;# 
  1491  0E91                     	;# 
  1492  0E92                     	;# 
  1493  0E93                     	;# 
  1494  0E94                     	;# 
  1495  0E95                     	;# 
  1496  0E96                     	;# 
  1497  0E97                     	;# 
  1498  0E9C                     	;# 
  1499  0E9D                     	;# 
  1500  0E9E                     	;# 
  1501  0EA1                     	;# 
  1502  0EA2                     	;# 
  1503  0EA3                     	;# 
  1504  0EA4                     	;# 
  1505  0EA5                     	;# 
  1506  0EA9                     	;# 
  1507  0EAA                     	;# 
  1508  0EAB                     	;# 
  1509  0EAC                     	;# 
  1510  0EB1                     	;# 
  1511  0EB2                     	;# 
  1512  0EB3                     	;# 
  1513  0EB8                     	;# 
  1514  0EB9                     	;# 
  1515  0EBA                     	;# 
  1516  0EBB                     	;# 
  1517  0EBC                     	;# 
  1518  0EBD                     	;# 
  1519  0EBE                     	;# 
  1520  0EC3                     	;# 
  1521  0EC5                     	;# 
  1522  0EC6                     	;# 
  1523  0EC7                     	;# 
  1524  0EC8                     	;# 
  1525  0EC9                     	;# 
  1526  0ECA                     	;# 
  1527  0ECB                     	;# 
  1528  0ECC                     	;# 
  1529  0F10                     	;# 
  1530  0F11                     	;# 
  1531  0F12                     	;# 
  1532  0F13                     	;# 
  1533  0F14                     	;# 
  1534  0F15                     	;# 
  1535  0F16                     	;# 
  1536  0F17                     	;# 
  1537  0F18                     	;# 
  1538  0F19                     	;# 
  1539  0F1A                     	;# 
  1540  0F1B                     	;# 
  1541  0F1C                     	;# 
  1542  0F1D                     	;# 
  1543  0F1E                     	;# 
  1544  0F1F                     	;# 
  1545  0F20                     	;# 
  1546  0F21                     	;# 
  1547  0F22                     	;# 
  1548  0F23                     	;# 
  1549  0F24                     	;# 
  1550  0F25                     	;# 
  1551  0F26                     	;# 
  1552  0F27                     	;# 
  1553  0F38                     	;# 
  1554  0F39                     	;# 
  1555  0F3A                     	;# 
  1556  0F3B                     	;# 
  1557  0F3C                     	;# 
  1558  0F3D                     	;# 
  1559  0F3E                     	;# 
  1560  0F3F                     	;# 
  1561  0F40                     	;# 
  1562  0F41                     	;# 
  1563  0F43                     	;# 
  1564  0F44                     	;# 
  1565  0F45                     	;# 
  1566  0F46                     	;# 
  1567  0F47                     	;# 
  1568  0F48                     	;# 
  1569  0F49                     	;# 
  1570  0F4A                     	;# 
  1571  0F4B                     	;# 
  1572  0F4C                     	;# 
  1573  0F4E                     	;# 
  1574  0F4F                     	;# 
  1575  0F50                     	;# 
  1576  0F51                     	;# 
  1577  0F52                     	;# 
  1578  0F53                     	;# 
  1579  0F54                     	;# 
  1580  0F55                     	;# 
  1581  0F56                     	;# 
  1582  0F57                     	;# 
  1583  0F65                     	;# 
  1584  0F68                     	;# 
  1585  0F69                     	;# 
  1586  0F6A                     	;# 
  1587  0F6B                     	;# 
  1588  0FE4                     	;# 
  1589  0FE5                     	;# 
  1590  0FE6                     	;# 
  1591  0FE7                     	;# 
  1592  0FE8                     	;# 
  1593  0FE9                     	;# 
  1594  0FEA                     	;# 
  1595  0FEB                     	;# 
  1596  0FED                     	;# 
  1597  0FEE                     	;# 
  1598  0FEF                     	;# 
  1599  0000                     	;# 
  1600  0001                     	;# 
  1601  0002                     	;# 
  1602  0003                     	;# 
  1603  0004                     	;# 
  1604  0005                     	;# 
  1605  0006                     	;# 
  1606  0007                     	;# 
  1607  0008                     	;# 
  1608  0009                     	;# 
  1609  000A                     	;# 
  1610  000B                     	;# 
  1611  000C                     	;# 
  1612  000D                     	;# 
  1613  000E                     	;# 
  1614  0010                     	;# 
  1615  0011                     	;# 
  1616  0012                     	;# 
  1617  0013                     	;# 
  1618  0016                     	;# 
  1619  0017                     	;# 
  1620  0018                     	;# 
  1621  001C                     	;# 
  1622  001C                     	;# 
  1623  001D                     	;# 
  1624  001D                     	;# 
  1625  001E                     	;# 
  1626  001F                     	;# 
  1627  008C                     	;# 
  1628  008C                     	;# 
  1629  008D                     	;# 
  1630  008E                     	;# 
  1631  008E                     	;# 
  1632  008F                     	;# 
  1633  0090                     	;# 
  1634  0090                     	;# 
  1635  0091                     	;# 
  1636  0093                     	;# 
  1637  0094                     	;# 
  1638  0095                     	;# 
  1639  0096                     	;# 
  1640  0097                     	;# 
  1641  0098                     	;# 
  1642  0099                     	;# 
  1643  009A                     	;# 
  1644  009B                     	;# 
  1645  009C                     	;# 
  1646  009D                     	;# 
  1647  009E                     	;# 
  1648  010C                     	;# 
  1649  010D                     	;# 
  1650  010E                     	;# 
  1651  010E                     	;# 
  1652  010F                     	;# 
  1653  0110                     	;# 
  1654  0110                     	;# 
  1655  0111                     	;# 
  1656  0112                     	;# 
  1657  0112                     	;# 
  1658  0113                     	;# 
  1659  0114                     	;# 
  1660  0114                     	;# 
  1661  0115                     	;# 
  1662  0116                     	;# 
  1663  0116                     	;# 
  1664  0117                     	;# 
  1665  0119                     	;# 
  1666  0119                     	;# 
  1667  0119                     	;# 
  1668  011A                     	;# 
  1669  011A                     	;# 
  1670  011A                     	;# 
  1671  011B                     	;# 
  1672  011B                     	;# 
  1673  011B                     	;# 
  1674  011B                     	;# 
  1675  011B                     	;# 
  1676  011C                     	;# 
  1677  011C                     	;# 
  1678  011C                     	;# 
  1679  011D                     	;# 
  1680  011D                     	;# 
  1681  011D                     	;# 
  1682  011E                     	;# 
  1683  011E                     	;# 
  1684  011E                     	;# 
  1685  011F                     	;# 
  1686  011F                     	;# 
  1687  011F                     	;# 
  1688  011F                     	;# 
  1689  011F                     	;# 
  1690  018C                     	;# 
  1691  018D                     	;# 
  1692  018E                     	;# 
  1693  018F                     	;# 
  1694  0190                     	;# 
  1695  0191                     	;# 
  1696  0192                     	;# 
  1697  0196                     	;# 
  1698  0197                     	;# 
  1699  0198                     	;# 
  1700  0199                     	;# 
  1701  019A                     	;# 
  1702  019B                     	;# 
  1703  019C                     	;# 
  1704  020C                     	;# 
  1705  020D                     	;# 
  1706  020E                     	;# 
  1707  020F                     	;# 
  1708  020F                     	;# 
  1709  0210                     	;# 
  1710  0210                     	;# 
  1711  0211                     	;# 
  1712  0211                     	;# 
  1713  0212                     	;# 
  1714  0213                     	;# 
  1715  0214                     	;# 
  1716  0215                     	;# 
  1717  0215                     	;# 
  1718  0216                     	;# 
  1719  0216                     	;# 
  1720  0217                     	;# 
  1721  0217                     	;# 
  1722  0218                     	;# 
  1723  0219                     	;# 
  1724  021A                     	;# 
  1725  021B                     	;# 
  1726  021B                     	;# 
  1727  021C                     	;# 
  1728  021C                     	;# 
  1729  021D                     	;# 
  1730  021D                     	;# 
  1731  021E                     	;# 
  1732  021F                     	;# 
  1733  028C                     	;# 
  1734  028C                     	;# 
  1735  028D                     	;# 
  1736  028D                     	;# 
  1737  028E                     	;# 
  1738  028F                     	;# 
  1739  0290                     	;# 
  1740  0290                     	;# 
  1741  0291                     	;# 
  1742  0292                     	;# 
  1743  0292                     	;# 
  1744  0293                     	;# 
  1745  0293                     	;# 
  1746  0294                     	;# 
  1747  0295                     	;# 
  1748  0296                     	;# 
  1749  0296                     	;# 
  1750  0297                     	;# 
  1751  0298                     	;# 
  1752  0298                     	;# 
  1753  0299                     	;# 
  1754  0299                     	;# 
  1755  029A                     	;# 
  1756  029B                     	;# 
  1757  029C                     	;# 
  1758  029C                     	;# 
  1759  029D                     	;# 
  1760  030C                     	;# 
  1761  030C                     	;# 
  1762  030D                     	;# 
  1763  030E                     	;# 
  1764  030F                     	;# 
  1765  0310                     	;# 
  1766  0310                     	;# 
  1767  0311                     	;# 
  1768  0312                     	;# 
  1769  0313                     	;# 
  1770  0314                     	;# 
  1771  0314                     	;# 
  1772  0315                     	;# 
  1773  0316                     	;# 
  1774  0317                     	;# 
  1775  0318                     	;# 
  1776  0318                     	;# 
  1777  0319                     	;# 
  1778  031A                     	;# 
  1779  031B                     	;# 
  1780  031C                     	;# 
  1781  031C                     	;# 
  1782  031D                     	;# 
  1783  031E                     	;# 
  1784  031F                     	;# 
  1785  038C                     	;# 
  1786  038D                     	;# 
  1787  038E                     	;# 
  1788  0390                     	;# 
  1789  0391                     	;# 
  1790  0392                     	;# 
  1791  040C                     	;# 
  1792  040D                     	;# 
  1793  040E                     	;# 
  1794  040F                     	;# 
  1795  0410                     	;# 
  1796  0411                     	;# 
  1797  0416                     	;# 
  1798  0416                     	;# 
  1799  0417                     	;# 
  1800  0418                     	;# 
  1801  0418                     	;# 
  1802  0419                     	;# 
  1803  041A                     	;# 
  1804  041A                     	;# 
  1805  041B                     	;# 
  1806  041C                     	;# 
  1807  041C                     	;# 
  1808  041D                     	;# 
  1809  041E                     	;# 
  1810  041F                     	;# 
  1811  048C                     	;# 
  1812  048C                     	;# 
  1813  048D                     	;# 
  1814  048E                     	;# 
  1815  048F                     	;# 
  1816  048F                     	;# 
  1817  0490                     	;# 
  1818  0491                     	;# 
  1819  0492                     	;# 
  1820  0492                     	;# 
  1821  0493                     	;# 
  1822  0494                     	;# 
  1823  0495                     	;# 
  1824  0495                     	;# 
  1825  0496                     	;# 
  1826  0497                     	;# 
  1827  0498                     	;# 
  1828  0499                     	;# 
  1829  049A                     	;# 
  1830  049B                     	;# 
  1831  049C                     	;# 
  1832  049D                     	;# 
  1833  050C                     	;# 
  1834  050C                     	;# 
  1835  050D                     	;# 
  1836  050E                     	;# 
  1837  050F                     	;# 
  1838  050F                     	;# 
  1839  0510                     	;# 
  1840  0511                     	;# 
  1841  0512                     	;# 
  1842  0512                     	;# 
  1843  0513                     	;# 
  1844  0514                     	;# 
  1845  0515                     	;# 
  1846  0515                     	;# 
  1847  0516                     	;# 
  1848  0517                     	;# 
  1849  0518                     	;# 
  1850  0519                     	;# 
  1851  051A                     	;# 
  1852  051B                     	;# 
  1853  051C                     	;# 
  1854  051D                     	;# 
  1855  058C                     	;# 
  1856  058C                     	;# 
  1857  058D                     	;# 
  1858  058E                     	;# 
  1859  058F                     	;# 
  1860  058F                     	;# 
  1861  0590                     	;# 
  1862  0591                     	;# 
  1863  0592                     	;# 
  1864  0593                     	;# 
  1865  060C                     	;# 
  1866  060D                     	;# 
  1867  060E                     	;# 
  1868  060F                     	;# 
  1869  0610                     	;# 
  1870  0611                     	;# 
  1871  0612                     	;# 
  1872  0613                     	;# 
  1873  0614                     	;# 
  1874  0616                     	;# 
  1875  0617                     	;# 
  1876  0618                     	;# 
  1877  0619                     	;# 
  1878  061A                     	;# 
  1879  061B                     	;# 
  1880  061C                     	;# 
  1881  061D                     	;# 
  1882  061E                     	;# 
  1883  068C                     	;# 
  1884  068D                     	;# 
  1885  068E                     	;# 
  1886  068F                     	;# 
  1887  0690                     	;# 
  1888  0691                     	;# 
  1889  0692                     	;# 
  1890  0693                     	;# 
  1891  0694                     	;# 
  1892  070C                     	;# 
  1893  070D                     	;# 
  1894  070E                     	;# 
  1895  070F                     	;# 
  1896  0710                     	;# 
  1897  0711                     	;# 
  1898  0712                     	;# 
  1899  0713                     	;# 
  1900  0714                     	;# 
  1901  0716                     	;# 
  1902  0717                     	;# 
  1903  0718                     	;# 
  1904  0719                     	;# 
  1905  071A                     	;# 
  1906  071B                     	;# 
  1907  071C                     	;# 
  1908  071D                     	;# 
  1909  071E                     	;# 
  1910  0796                     	;# 
  1911  0797                     	;# 
  1912  0798                     	;# 
  1913  0799                     	;# 
  1914  079A                     	;# 
  1915  079B                     	;# 
  1916  080C                     	;# 
  1917  080D                     	;# 
  1918  080E                     	;# 
  1919  080F                     	;# 
  1920  0810                     	;# 
  1921  0811                     	;# 
  1922  0812                     	;# 
  1923  0813                     	;# 
  1924  0814                     	;# 
  1925  081A                     	;# 
  1926  081B                     	;# 
  1927  081C                     	;# 
  1928  081D                     	;# 
  1929  081E                     	;# 
  1930  081F                     	;# 
  1931  088C                     	;# 
  1932  088D                     	;# 
  1933  088E                     	;# 
  1934  088F                     	;# 
  1935  0890                     	;# 
  1936  0891                     	;# 
  1937  0892                     	;# 
  1938  0893                     	;# 
  1939  0895                     	;# 
  1940  0896                     	;# 
  1941  0897                     	;# 
  1942  0898                     	;# 
  1943  0899                     	;# 
  1944  089A                     	;# 
  1945  089B                     	;# 
  1946  090C                     	;# 
  1947  090E                     	;# 
  1948  090F                     	;# 
  1949  091F                     	;# 
  1950  091F                     	;# 
  1951  098F                     	;# 
  1952  098F                     	;# 
  1953  0990                     	;# 
  1954  0991                     	;# 
  1955  0992                     	;# 
  1956  0993                     	;# 
  1957  0994                     	;# 
  1958  0995                     	;# 
  1959  0996                     	;# 
  1960  0997                     	;# 
  1961  0E0F                     	;# 
  1962  0E10                     	;# 
  1963  0E11                     	;# 
  1964  0E12                     	;# 
  1965  0E13                     	;# 
  1966  0E14                     	;# 
  1967  0E15                     	;# 
  1968  0E16                     	;# 
  1969  0E17                     	;# 
  1970  0E18                     	;# 
  1971  0E19                     	;# 
  1972  0E1A                     	;# 
  1973  0E1B                     	;# 
  1974  0E1C                     	;# 
  1975  0E1D                     	;# 
  1976  0E1E                     	;# 
  1977  0E1F                     	;# 
  1978  0E20                     	;# 
  1979  0E21                     	;# 
  1980  0E22                     	;# 
  1981  0E23                     	;# 
  1982  0E24                     	;# 
  1983  0E25                     	;# 
  1984  0E26                     	;# 
  1985  0E27                     	;# 
  1986  0E28                     	;# 
  1987  0E29                     	;# 
  1988  0E2A                     	;# 
  1989  0E2B                     	;# 
  1990  0E2C                     	;# 
  1991  0E2D                     	;# 
  1992  0E2E                     	;# 
  1993  0E2F                     	;# 
  1994  0E30                     	;# 
  1995  0E31                     	;# 
  1996  0E32                     	;# 
  1997  0E33                     	;# 
  1998  0E34                     	;# 
  1999  0E35                     	;# 
  2000  0E36                     	;# 
  2001  0E37                     	;# 
  2002  0E8F                     	;# 
  2003  0E90                     	;# 
  2004  0E91                     	;# 
  2005  0E92                     	;# 
  2006  0E93                     	;# 
  2007  0E94                     	;# 
  2008  0E95                     	;# 
  2009  0E96                     	;# 
  2010  0E97                     	;# 
  2011  0E9C                     	;# 
  2012  0E9D                     	;# 
  2013  0E9E                     	;# 
  2014  0EA1                     	;# 
  2015  0EA2                     	;# 
  2016  0EA3                     	;# 
  2017  0EA4                     	;# 
  2018  0EA5                     	;# 
  2019  0EA9                     	;# 
  2020  0EAA                     	;# 
  2021  0EAB                     	;# 
  2022  0EAC                     	;# 
  2023  0EB1                     	;# 
  2024  0EB2                     	;# 
  2025  0EB3                     	;# 
  2026  0EB8                     	;# 
  2027  0EB9                     	;# 
  2028  0EBA                     	;# 
  2029  0EBB                     	;# 
  2030  0EBC                     	;# 
  2031  0EBD                     	;# 
  2032  0EBE                     	;# 
  2033  0EC3                     	;# 
  2034  0EC5                     	;# 
  2035  0EC6                     	;# 
  2036  0EC7                     	;# 
  2037  0EC8                     	;# 
  2038  0EC9                     	;# 
  2039  0ECA                     	;# 
  2040  0ECB                     	;# 
  2041  0ECC                     	;# 
  2042  0F10                     	;# 
  2043  0F11                     	;# 
  2044  0F12                     	;# 
  2045  0F13                     	;# 
  2046  0F14                     	;# 
  2047  0F15                     	;# 
  2048  0F16                     	;# 
  2049  0F17                     	;# 
  2050  0F18                     	;# 
  2051  0F19                     	;# 
  2052  0F1A                     	;# 
  2053  0F1B                     	;# 
  2054  0F1C                     	;# 
  2055  0F1D                     	;# 
  2056  0F1E                     	;# 
  2057  0F1F                     	;# 
  2058  0F20                     	;# 
  2059  0F21                     	;# 
  2060  0F22                     	;# 
  2061  0F23                     	;# 
  2062  0F24                     	;# 
  2063  0F25                     	;# 
  2064  0F26                     	;# 
  2065  0F27                     	;# 
  2066  0F38                     	;# 
  2067  0F39                     	;# 
  2068  0F3A                     	;# 
  2069  0F3B                     	;# 
  2070  0F3C                     	;# 
  2071  0F3D                     	;# 
  2072  0F3E                     	;# 
  2073  0F3F                     	;# 
  2074  0F40                     	;# 
  2075  0F41                     	;# 
  2076  0F43                     	;# 
  2077  0F44                     	;# 
  2078  0F45                     	;# 
  2079  0F46                     	;# 
  2080  0F47                     	;# 
  2081  0F48                     	;# 
  2082  0F49                     	;# 
  2083  0F4A                     	;# 
  2084  0F4B                     	;# 
  2085  0F4C                     	;# 
  2086  0F4E                     	;# 
  2087  0F4F                     	;# 
  2088  0F50                     	;# 
  2089  0F51                     	;# 
  2090  0F52                     	;# 
  2091  0F53                     	;# 
  2092  0F54                     	;# 
  2093  0F55                     	;# 
  2094  0F56                     	;# 
  2095  0F57                     	;# 
  2096  0F65                     	;# 
  2097  0F68                     	;# 
  2098  0F69                     	;# 
  2099  0F6A                     	;# 
  2100  0F6B                     	;# 
  2101  0FE4                     	;# 
  2102  0FE5                     	;# 
  2103  0FE6                     	;# 
  2104  0FE7                     	;# 
  2105  0FE8                     	;# 
  2106  0FE9                     	;# 
  2107  0FEA                     	;# 
  2108  0FEB                     	;# 
  2109  0FED                     	;# 
  2110  0FEE                     	;# 
  2111  0FEF                     	;# 
  2112  0000                     	;# 
  2113  0001                     	;# 
  2114  0002                     	;# 
  2115  0003                     	;# 
  2116  0004                     	;# 
  2117  0005                     	;# 
  2118  0006                     	;# 
  2119  0007                     	;# 
  2120  0008                     	;# 
  2121  0009                     	;# 
  2122  000A                     	;# 
  2123  000B                     	;# 
  2124  000C                     	;# 
  2125  000D                     	;# 
  2126  000E                     	;# 
  2127  0010                     	;# 
  2128  0011                     	;# 
  2129  0012                     	;# 
  2130  0013                     	;# 
  2131  0016                     	;# 
  2132  0017                     	;# 
  2133  0018                     	;# 
  2134  001C                     	;# 
  2135  001C                     	;# 
  2136  001D                     	;# 
  2137  001D                     	;# 
  2138  001E                     	;# 
  2139  001F                     	;# 
  2140  008C                     	;# 
  2141  008C                     	;# 
  2142  008D                     	;# 
  2143  008E                     	;# 
  2144  008E                     	;# 
  2145  008F                     	;# 
  2146  0090                     	;# 
  2147  0090                     	;# 
  2148  0091                     	;# 
  2149  0093                     	;# 
  2150  0094                     	;# 
  2151  0095                     	;# 
  2152  0096                     	;# 
  2153  0097                     	;# 
  2154  0098                     	;# 
  2155  0099                     	;# 
  2156  009A                     	;# 
  2157  009B                     	;# 
  2158  009C                     	;# 
  2159  009D                     	;# 
  2160  009E                     	;# 
  2161  010C                     	;# 
  2162  010D                     	;# 
  2163  010E                     	;# 
  2164  010E                     	;# 
  2165  010F                     	;# 
  2166  0110                     	;# 
  2167  0110                     	;# 
  2168  0111                     	;# 
  2169  0112                     	;# 
  2170  0112                     	;# 
  2171  0113                     	;# 
  2172  0114                     	;# 
  2173  0114                     	;# 
  2174  0115                     	;# 
  2175  0116                     	;# 
  2176  0116                     	;# 
  2177  0117                     	;# 
  2178  0119                     	;# 
  2179  0119                     	;# 
  2180  0119                     	;# 
  2181  011A                     	;# 
  2182  011A                     	;# 
  2183  011A                     	;# 
  2184  011B                     	;# 
  2185  011B                     	;# 
  2186  011B                     	;# 
  2187  011B                     	;# 
  2188  011B                     	;# 
  2189  011C                     	;# 
  2190  011C                     	;# 
  2191  011C                     	;# 
  2192  011D                     	;# 
  2193  011D                     	;# 
  2194  011D                     	;# 
  2195  011E                     	;# 
  2196  011E                     	;# 
  2197  011E                     	;# 
  2198  011F                     	;# 
  2199  011F                     	;# 
  2200  011F                     	;# 
  2201  011F                     	;# 
  2202  011F                     	;# 
  2203  018C                     	;# 
  2204  018D                     	;# 
  2205  018E                     	;# 
  2206  018F                     	;# 
  2207  0190                     	;# 
  2208  0191                     	;# 
  2209  0192                     	;# 
  2210  0196                     	;# 
  2211  0197                     	;# 
  2212  0198                     	;# 
  2213  0199                     	;# 
  2214  019A                     	;# 
  2215  019B                     	;# 
  2216  019C                     	;# 
  2217  020C                     	;# 
  2218  020D                     	;# 
  2219  020E                     	;# 
  2220  020F                     	;# 
  2221  020F                     	;# 
  2222  0210                     	;# 
  2223  0210                     	;# 
  2224  0211                     	;# 
  2225  0211                     	;# 
  2226  0212                     	;# 
  2227  0213                     	;# 
  2228  0214                     	;# 
  2229  0215                     	;# 
  2230  0215                     	;# 
  2231  0216                     	;# 
  2232  0216                     	;# 
  2233  0217                     	;# 
  2234  0217                     	;# 
  2235  0218                     	;# 
  2236  0219                     	;# 
  2237  021A                     	;# 
  2238  021B                     	;# 
  2239  021B                     	;# 
  2240  021C                     	;# 
  2241  021C                     	;# 
  2242  021D                     	;# 
  2243  021D                     	;# 
  2244  021E                     	;# 
  2245  021F                     	;# 
  2246  028C                     	;# 
  2247  028C                     	;# 
  2248  028D                     	;# 
  2249  028D                     	;# 
  2250  028E                     	;# 
  2251  028F                     	;# 
  2252  0290                     	;# 
  2253  0290                     	;# 
  2254  0291                     	;# 
  2255  0292                     	;# 
  2256  0292                     	;# 
  2257  0293                     	;# 
  2258  0293                     	;# 
  2259  0294                     	;# 
  2260  0295                     	;# 
  2261  0296                     	;# 
  2262  0296                     	;# 
  2263  0297                     	;# 
  2264  0298                     	;# 
  2265  0298                     	;# 
  2266  0299                     	;# 
  2267  0299                     	;# 
  2268  029A                     	;# 
  2269  029B                     	;# 
  2270  029C                     	;# 
  2271  029C                     	;# 
  2272  029D                     	;# 
  2273  030C                     	;# 
  2274  030C                     	;# 
  2275  030D                     	;# 
  2276  030E                     	;# 
  2277  030F                     	;# 
  2278  0310                     	;# 
  2279  0310                     	;# 
  2280  0311                     	;# 
  2281  0312                     	;# 
  2282  0313                     	;# 
  2283  0314                     	;# 
  2284  0314                     	;# 
  2285  0315                     	;# 
  2286  0316                     	;# 
  2287  0317                     	;# 
  2288  0318                     	;# 
  2289  0318                     	;# 
  2290  0319                     	;# 
  2291  031A                     	;# 
  2292  031B                     	;# 
  2293  031C                     	;# 
  2294  031C                     	;# 
  2295  031D                     	;# 
  2296  031E                     	;# 
  2297  031F                     	;# 
  2298  038C                     	;# 
  2299  038D                     	;# 
  2300  038E                     	;# 
  2301  0390                     	;# 
  2302  0391                     	;# 
  2303  0392                     	;# 
  2304  040C                     	;# 
  2305  040D                     	;# 
  2306  040E                     	;# 
  2307  040F                     	;# 
  2308  0410                     	;# 
  2309  0411                     	;# 
  2310  0416                     	;# 
  2311  0416                     	;# 
  2312  0417                     	;# 
  2313  0418                     	;# 
  2314  0418                     	;# 
  2315  0419                     	;# 
  2316  041A                     	;# 
  2317  041A                     	;# 
  2318  041B                     	;# 
  2319  041C                     	;# 
  2320  041C                     	;# 
  2321  041D                     	;# 
  2322  041E                     	;# 
  2323  041F                     	;# 
  2324  048C                     	;# 
  2325  048C                     	;# 
  2326  048D                     	;# 
  2327  048E                     	;# 
  2328  048F                     	;# 
  2329  048F                     	;# 
  2330  0490                     	;# 
  2331  0491                     	;# 
  2332  0492                     	;# 
  2333  0492                     	;# 
  2334  0493                     	;# 
  2335  0494                     	;# 
  2336  0495                     	;# 
  2337  0495                     	;# 
  2338  0496                     	;# 
  2339  0497                     	;# 
  2340  0498                     	;# 
  2341  0499                     	;# 
  2342  049A                     	;# 
  2343  049B                     	;# 
  2344  049C                     	;# 
  2345  049D                     	;# 
  2346  050C                     	;# 
  2347  050C                     	;# 
  2348  050D                     	;# 
  2349  050E                     	;# 
  2350  050F                     	;# 
  2351  050F                     	;# 
  2352  0510                     	;# 
  2353  0511                     	;# 
  2354  0512                     	;# 
  2355  0512                     	;# 
  2356  0513                     	;# 
  2357  0514                     	;# 
  2358  0515                     	;# 
  2359  0515                     	;# 
  2360  0516                     	;# 
  2361  0517                     	;# 
  2362  0518                     	;# 
  2363  0519                     	;# 
  2364  051A                     	;# 
  2365  051B                     	;# 
  2366  051C                     	;# 
  2367  051D                     	;# 
  2368  058C                     	;# 
  2369  058C                     	;# 
  2370  058D                     	;# 
  2371  058E                     	;# 
  2372  058F                     	;# 
  2373  058F                     	;# 
  2374  0590                     	;# 
  2375  0591                     	;# 
  2376  0592                     	;# 
  2377  0593                     	;# 
  2378  060C                     	;# 
  2379  060D                     	;# 
  2380  060E                     	;# 
  2381  060F                     	;# 
  2382  0610                     	;# 
  2383  0611                     	;# 
  2384  0612                     	;# 
  2385  0613                     	;# 
  2386  0614                     	;# 
  2387  0616                     	;# 
  2388  0617                     	;# 
  2389  0618                     	;# 
  2390  0619                     	;# 
  2391  061A                     	;# 
  2392  061B                     	;# 
  2393  061C                     	;# 
  2394  061D                     	;# 
  2395  061E                     	;# 
  2396  068C                     	;# 
  2397  068D                     	;# 
  2398  068E                     	;# 
  2399  068F                     	;# 
  2400  0690                     	;# 
  2401  0691                     	;# 
  2402  0692                     	;# 
  2403  0693                     	;# 
  2404  0694                     	;# 
  2405  070C                     	;# 
  2406  070D                     	;# 
  2407  070E                     	;# 
  2408  070F                     	;# 
  2409  0710                     	;# 
  2410  0711                     	;# 
  2411  0712                     	;# 
  2412  0713                     	;# 
  2413  0714                     	;# 
  2414  0716                     	;# 
  2415  0717                     	;# 
  2416  0718                     	;# 
  2417  0719                     	;# 
  2418  071A                     	;# 
  2419  071B                     	;# 
  2420  071C                     	;# 
  2421  071D                     	;# 
  2422  071E                     	;# 
  2423  0796                     	;# 
  2424  0797                     	;# 
  2425  0798                     	;# 
  2426  0799                     	;# 
  2427  079A                     	;# 
  2428  079B                     	;# 
  2429  080C                     	;# 
  2430  080D                     	;# 
  2431  080E                     	;# 
  2432  080F                     	;# 
  2433  0810                     	;# 
  2434  0811                     	;# 
  2435  0812                     	;# 
  2436  0813                     	;# 
  2437  0814                     	;# 
  2438  081A                     	;# 
  2439  081B                     	;# 
  2440  081C                     	;# 
  2441  081D                     	;# 
  2442  081E                     	;# 
  2443  081F                     	;# 
  2444  088C                     	;# 
  2445  088D                     	;# 
  2446  088E                     	;# 
  2447  088F                     	;# 
  2448  0890                     	;# 
  2449  0891                     	;# 
  2450  0892                     	;# 
  2451  0893                     	;# 
  2452  0895                     	;# 
  2453  0896                     	;# 
  2454  0897                     	;# 
  2455  0898                     	;# 
  2456  0899                     	;# 
  2457  089A                     	;# 
  2458  089B                     	;# 
  2459  090C                     	;# 
  2460  090E                     	;# 
  2461  090F                     	;# 
  2462  091F                     	;# 
  2463  091F                     	;# 
  2464  098F                     	;# 
  2465  098F                     	;# 
  2466  0990                     	;# 
  2467  0991                     	;# 
  2468  0992                     	;# 
  2469  0993                     	;# 
  2470  0994                     	;# 
  2471  0995                     	;# 
  2472  0996                     	;# 
  2473  0997                     	;# 
  2474  0E0F                     	;# 
  2475  0E10                     	;# 
  2476  0E11                     	;# 
  2477  0E12                     	;# 
  2478  0E13                     	;# 
  2479  0E14                     	;# 
  2480  0E15                     	;# 
  2481  0E16                     	;# 
  2482  0E17                     	;# 
  2483  0E18                     	;# 
  2484  0E19                     	;# 
  2485  0E1A                     	;# 
  2486  0E1B                     	;# 
  2487  0E1C                     	;# 
  2488  0E1D                     	;# 
  2489  0E1E                     	;# 
  2490  0E1F                     	;# 
  2491  0E20                     	;# 
  2492  0E21                     	;# 
  2493  0E22                     	;# 
  2494  0E23                     	;# 
  2495  0E24                     	;# 
  2496  0E25                     	;# 
  2497  0E26                     	;# 
  2498  0E27                     	;# 
  2499  0E28                     	;# 
  2500  0E29                     	;# 
  2501  0E2A                     	;# 
  2502  0E2B                     	;# 
  2503  0E2C                     	;# 
  2504  0E2D                     	;# 
  2505  0E2E                     	;# 
  2506  0E2F                     	;# 
  2507  0E30                     	;# 
  2508  0E31                     	;# 
  2509  0E32                     	;# 
  2510  0E33                     	;# 
  2511  0E34                     	;# 
  2512  0E35                     	;# 
  2513  0E36                     	;# 
  2514  0E37                     	;# 
  2515  0E8F                     	;# 
  2516  0E90                     	;# 
  2517  0E91                     	;# 
  2518  0E92                     	;# 
  2519  0E93                     	;# 
  2520  0E94                     	;# 
  2521  0E95                     	;# 
  2522  0E96                     	;# 
  2523  0E97                     	;# 
  2524  0E9C                     	;# 
  2525  0E9D                     	;# 
  2526  0E9E                     	;# 
  2527  0EA1                     	;# 
  2528  0EA2                     	;# 
  2529  0EA3                     	;# 
  2530  0EA4                     	;# 
  2531  0EA5                     	;# 
  2532  0EA9                     	;# 
  2533  0EAA                     	;# 
  2534  0EAB                     	;# 
  2535  0EAC                     	;# 
  2536  0EB1                     	;# 
  2537  0EB2                     	;# 
  2538  0EB3                     	;# 
  2539  0EB8                     	;# 
  2540  0EB9                     	;# 
  2541  0EBA                     	;# 
  2542  0EBB                     	;# 
  2543  0EBC                     	;# 
  2544  0EBD                     	;# 
  2545  0EBE                     	;# 
  2546  0EC3                     	;# 
  2547  0EC5                     	;# 
  2548  0EC6                     	;# 
  2549  0EC7                     	;# 
  2550  0EC8                     	;# 
  2551  0EC9                     	;# 
  2552  0ECA                     	;# 
  2553  0ECB                     	;# 
  2554  0ECC                     	;# 
  2555  0F10                     	;# 
  2556  0F11                     	;# 
  2557  0F12                     	;# 
  2558  0F13                     	;# 
  2559  0F14                     	;# 
  2560  0F15                     	;# 
  2561  0F16                     	;# 
  2562  0F17                     	;# 
  2563  0F18                     	;# 
  2564  0F19                     	;# 
  2565  0F1A                     	;# 
  2566  0F1B                     	;# 
  2567  0F1C                     	;# 
  2568  0F1D                     	;# 
  2569  0F1E                     	;# 
  2570  0F1F                     	;# 
  2571  0F20                     	;# 
  2572  0F21                     	;# 
  2573  0F22                     	;# 
  2574  0F23                     	;# 
  2575  0F24                     	;# 
  2576  0F25                     	;# 
  2577  0F26                     	;# 
  2578  0F27                     	;# 
  2579  0F38                     	;# 
  2580  0F39                     	;# 
  2581  0F3A                     	;# 
  2582  0F3B                     	;# 
  2583  0F3C                     	;# 
  2584  0F3D                     	;# 
  2585  0F3E                     	;# 
  2586  0F3F                     	;# 
  2587  0F40                     	;# 
  2588  0F41                     	;# 
  2589  0F43                     	;# 
  2590  0F44                     	;# 
  2591  0F45                     	;# 
  2592  0F46                     	;# 
  2593  0F47                     	;# 
  2594  0F48                     	;# 
  2595  0F49                     	;# 
  2596  0F4A                     	;# 
  2597  0F4B                     	;# 
  2598  0F4C                     	;# 
  2599  0F4E                     	;# 
  2600  0F4F                     	;# 
  2601  0F50                     	;# 
  2602  0F51                     	;# 
  2603  0F52                     	;# 
  2604  0F53                     	;# 
  2605  0F54                     	;# 
  2606  0F55                     	;# 
  2607  0F56                     	;# 
  2608  0F57                     	;# 
  2609  0F65                     	;# 
  2610  0F68                     	;# 
  2611  0F69                     	;# 
  2612  0F6A                     	;# 
  2613  0F6B                     	;# 
  2614  0FE4                     	;# 
  2615  0FE5                     	;# 
  2616  0FE6                     	;# 
  2617  0FE7                     	;# 
  2618  0FE8                     	;# 
  2619  0FE9                     	;# 
  2620  0FEA                     	;# 
  2621  0FEB                     	;# 
  2622  0FED                     	;# 
  2623  0FEE                     	;# 
  2624  0FEF                     	;# 
  2625  0000                     	;# 
  2626  0001                     	;# 
  2627  0002                     	;# 
  2628  0003                     	;# 
  2629  0004                     	;# 
  2630  0005                     	;# 
  2631  0006                     	;# 
  2632  0007                     	;# 
  2633  0008                     	;# 
  2634  0009                     	;# 
  2635  000A                     	;# 
  2636  000B                     	;# 
  2637  000C                     	;# 
  2638  000D                     	;# 
  2639  000E                     	;# 
  2640  0010                     	;# 
  2641  0011                     	;# 
  2642  0012                     	;# 
  2643  0013                     	;# 
  2644  0016                     	;# 
  2645  0017                     	;# 
  2646  0018                     	;# 
  2647  001C                     	;# 
  2648  001C                     	;# 
  2649  001D                     	;# 
  2650  001D                     	;# 
  2651  001E                     	;# 
  2652  001F                     	;# 
  2653  008C                     	;# 
  2654  008C                     	;# 
  2655  008D                     	;# 
  2656  008E                     	;# 
  2657  008E                     	;# 
  2658  008F                     	;# 
  2659  0090                     	;# 
  2660  0090                     	;# 
  2661  0091                     	;# 
  2662  0093                     	;# 
  2663  0094                     	;# 
  2664  0095                     	;# 
  2665  0096                     	;# 
  2666  0097                     	;# 
  2667  0098                     	;# 
  2668  0099                     	;# 
  2669  009A                     	;# 
  2670  009B                     	;# 
  2671  009C                     	;# 
  2672  009D                     	;# 
  2673  009E                     	;# 
  2674  010C                     	;# 
  2675  010D                     	;# 
  2676  010E                     	;# 
  2677  010E                     	;# 
  2678  010F                     	;# 
  2679  0110                     	;# 
  2680  0110                     	;# 
  2681  0111                     	;# 
  2682  0112                     	;# 
  2683  0112                     	;# 
  2684  0113                     	;# 
  2685  0114                     	;# 
  2686  0114                     	;# 
  2687  0115                     	;# 
  2688  0116                     	;# 
  2689  0116                     	;# 
  2690  0117                     	;# 
  2691  0119                     	;# 
  2692  0119                     	;# 
  2693  0119                     	;# 
  2694  011A                     	;# 
  2695  011A                     	;# 
  2696  011A                     	;# 
  2697  011B                     	;# 
  2698  011B                     	;# 
  2699  011B                     	;# 
  2700  011B                     	;# 
  2701  011B                     	;# 
  2702  011C                     	;# 
  2703  011C                     	;# 
  2704  011C                     	;# 
  2705  011D                     	;# 
  2706  011D                     	;# 
  2707  011D                     	;# 
  2708  011E                     	;# 
  2709  011E                     	;# 
  2710  011E                     	;# 
  2711  011F                     	;# 
  2712  011F                     	;# 
  2713  011F                     	;# 
  2714  011F                     	;# 
  2715  011F                     	;# 
  2716  018C                     	;# 
  2717  018D                     	;# 
  2718  018E                     	;# 
  2719  018F                     	;# 
  2720  0190                     	;# 
  2721  0191                     	;# 
  2722  0192                     	;# 
  2723  0196                     	;# 
  2724  0197                     	;# 
  2725  0198                     	;# 
  2726  0199                     	;# 
  2727  019A                     	;# 
  2728  019B                     	;# 
  2729  019C                     	;# 
  2730  020C                     	;# 
  2731  020D                     	;# 
  2732  020E                     	;# 
  2733  020F                     	;# 
  2734  020F                     	;# 
  2735  0210                     	;# 
  2736  0210                     	;# 
  2737  0211                     	;# 
  2738  0211                     	;# 
  2739  0212                     	;# 
  2740  0213                     	;# 
  2741  0214                     	;# 
  2742  0215                     	;# 
  2743  0215                     	;# 
  2744  0216                     	;# 
  2745  0216                     	;# 
  2746  0217                     	;# 
  2747  0217                     	;# 
  2748  0218                     	;# 
  2749  0219                     	;# 
  2750  021A                     	;# 
  2751  021B                     	;# 
  2752  021B                     	;# 
  2753  021C                     	;# 
  2754  021C                     	;# 
  2755  021D                     	;# 
  2756  021D                     	;# 
  2757  021E                     	;# 
  2758  021F                     	;# 
  2759  028C                     	;# 
  2760  028C                     	;# 
  2761  028D                     	;# 
  2762  028D                     	;# 
  2763  028E                     	;# 
  2764  028F                     	;# 
  2765  0290                     	;# 
  2766  0290                     	;# 
  2767  0291                     	;# 
  2768  0292                     	;# 
  2769  0292                     	;# 
  2770  0293                     	;# 
  2771  0293                     	;# 
  2772  0294                     	;# 
  2773  0295                     	;# 
  2774  0296                     	;# 
  2775  0296                     	;# 
  2776  0297                     	;# 
  2777  0298                     	;# 
  2778  0298                     	;# 
  2779  0299                     	;# 
  2780  0299                     	;# 
  2781  029A                     	;# 
  2782  029B                     	;# 
  2783  029C                     	;# 
  2784  029C                     	;# 
  2785  029D                     	;# 
  2786  030C                     	;# 
  2787  030C                     	;# 
  2788  030D                     	;# 
  2789  030E                     	;# 
  2790  030F                     	;# 
  2791  0310                     	;# 
  2792  0310                     	;# 
  2793  0311                     	;# 
  2794  0312                     	;# 
  2795  0313                     	;# 
  2796  0314                     	;# 
  2797  0314                     	;# 
  2798  0315                     	;# 
  2799  0316                     	;# 
  2800  0317                     	;# 
  2801  0318                     	;# 
  2802  0318                     	;# 
  2803  0319                     	;# 
  2804  031A                     	;# 
  2805  031B                     	;# 
  2806  031C                     	;# 
  2807  031C                     	;# 
  2808  031D                     	;# 
  2809  031E                     	;# 
  2810  031F                     	;# 
  2811  038C                     	;# 
  2812  038D                     	;# 
  2813  038E                     	;# 
  2814  0390                     	;# 
  2815  0391                     	;# 
  2816  0392                     	;# 
  2817  040C                     	;# 
  2818  040D                     	;# 
  2819  040E                     	;# 
  2820  040F                     	;# 
  2821  0410                     	;# 
  2822  0411                     	;# 
  2823  0416                     	;# 
  2824  0416                     	;# 
  2825  0417                     	;# 
  2826  0418                     	;# 
  2827  0418                     	;# 
  2828  0419                     	;# 
  2829  041A                     	;# 
  2830  041A                     	;# 
  2831  041B                     	;# 
  2832  041C                     	;# 
  2833  041C                     	;# 
  2834  041D                     	;# 
  2835  041E                     	;# 
  2836  041F                     	;# 
  2837  048C                     	;# 
  2838  048C                     	;# 
  2839  048D                     	;# 
  2840  048E                     	;# 
  2841  048F                     	;# 
  2842  048F                     	;# 
  2843  0490                     	;# 
  2844  0491                     	;# 
  2845  0492                     	;# 
  2846  0492                     	;# 
  2847  0493                     	;# 
  2848  0494                     	;# 
  2849  0495                     	;# 
  2850  0495                     	;# 
  2851  0496                     	;# 
  2852  0497                     	;# 
  2853  0498                     	;# 
  2854  0499                     	;# 
  2855  049A                     	;# 
  2856  049B                     	;# 
  2857  049C                     	;# 
  2858  049D                     	;# 
  2859  050C                     	;# 
  2860  050C                     	;# 
  2861  050D                     	;# 
  2862  050E                     	;# 
  2863  050F                     	;# 
  2864  050F                     	;# 
  2865  0510                     	;# 
  2866  0511                     	;# 
  2867  0512                     	;# 
  2868  0512                     	;# 
  2869  0513                     	;# 
  2870  0514                     	;# 
  2871  0515                     	;# 
  2872  0515                     	;# 
  2873  0516                     	;# 
  2874  0517                     	;# 
  2875  0518                     	;# 
  2876  0519                     	;# 
  2877  051A                     	;# 
  2878  051B                     	;# 
  2879  051C                     	;# 
  2880  051D                     	;# 
  2881  058C                     	;# 
  2882  058C                     	;# 
  2883  058D                     	;# 
  2884  058E                     	;# 
  2885  058F                     	;# 
  2886  058F                     	;# 
  2887  0590                     	;# 
  2888  0591                     	;# 
  2889  0592                     	;# 
  2890  0593                     	;# 
  2891  060C                     	;# 
  2892  060D                     	;# 
  2893  060E                     	;# 
  2894  060F                     	;# 
  2895  0610                     	;# 
  2896  0611                     	;# 
  2897  0612                     	;# 
  2898  0613                     	;# 
  2899  0614                     	;# 
  2900  0616                     	;# 
  2901  0617                     	;# 
  2902  0618                     	;# 
  2903  0619                     	;# 
  2904  061A                     	;# 
  2905  061B                     	;# 
  2906  061C                     	;# 
  2907  061D                     	;# 
  2908  061E                     	;# 
  2909  068C                     	;# 
  2910  068D                     	;# 
  2911  068E                     	;# 
  2912  068F                     	;# 
  2913  0690                     	;# 
  2914  0691                     	;# 
  2915  0692                     	;# 
  2916  0693                     	;# 
  2917  0694                     	;# 
  2918  070C                     	;# 
  2919  070D                     	;# 
  2920  070E                     	;# 
  2921  070F                     	;# 
  2922  0710                     	;# 
  2923  0711                     	;# 
  2924  0712                     	;# 
  2925  0713                     	;# 
  2926  0714                     	;# 
  2927  0716                     	;# 
  2928  0717                     	;# 
  2929  0718                     	;# 
  2930  0719                     	;# 
  2931  071A                     	;# 
  2932  071B                     	;# 
  2933  071C                     	;# 
  2934  071D                     	;# 
  2935  071E                     	;# 
  2936  0796                     	;# 
  2937  0797                     	;# 
  2938  0798                     	;# 
  2939  0799                     	;# 
  2940  079A                     	;# 
  2941  079B                     	;# 
  2942  080C                     	;# 
  2943  080D                     	;# 
  2944  080E                     	;# 
  2945  080F                     	;# 
  2946  0810                     	;# 
  2947  0811                     	;# 
  2948  0812                     	;# 
  2949  0813                     	;# 
  2950  0814                     	;# 
  2951  081A                     	;# 
  2952  081B                     	;# 
  2953  081C                     	;# 
  2954  081D                     	;# 
  2955  081E                     	;# 
  2956  081F                     	;# 
  2957  088C                     	;# 
  2958  088D                     	;# 
  2959  088E                     	;# 
  2960  088F                     	;# 
  2961  0890                     	;# 
  2962  0891                     	;# 
  2963  0892                     	;# 
  2964  0893                     	;# 
  2965  0895                     	;# 
  2966  0896                     	;# 
  2967  0897                     	;# 
  2968  0898                     	;# 
  2969  0899                     	;# 
  2970  089A                     	;# 
  2971  089B                     	;# 
  2972  090C                     	;# 
  2973  090E                     	;# 
  2974  090F                     	;# 
  2975  091F                     	;# 
  2976  091F                     	;# 
  2977  098F                     	;# 
  2978  098F                     	;# 
  2979  0990                     	;# 
  2980  0991                     	;# 
  2981  0992                     	;# 
  2982  0993                     	;# 
  2983  0994                     	;# 
  2984  0995                     	;# 
  2985  0996                     	;# 
  2986  0997                     	;# 
  2987  0E0F                     	;# 
  2988  0E10                     	;# 
  2989  0E11                     	;# 
  2990  0E12                     	;# 
  2991  0E13                     	;# 
  2992  0E14                     	;# 
  2993  0E15                     	;# 
  2994  0E16                     	;# 
  2995  0E17                     	;# 
  2996  0E18                     	;# 
  2997  0E19                     	;# 
  2998  0E1A                     	;# 
  2999  0E1B                     	;# 
  3000  0E1C                     	;# 
  3001  0E1D                     	;# 
  3002  0E1E                     	;# 
  3003  0E1F                     	;# 
  3004  0E20                     	;# 
  3005  0E21                     	;# 
  3006  0E22                     	;# 
  3007  0E23                     	;# 
  3008  0E24                     	;# 
  3009  0E25                     	;# 
  3010  0E26                     	;# 
  3011  0E27                     	;# 
  3012  0E28                     	;# 
  3013  0E29                     	;# 
  3014  0E2A                     	;# 
  3015  0E2B                     	;# 
  3016  0E2C                     	;# 
  3017  0E2D                     	;# 
  3018  0E2E                     	;# 
  3019  0E2F                     	;# 
  3020  0E30                     	;# 
  3021  0E31                     	;# 
  3022  0E32                     	;# 
  3023  0E33                     	;# 
  3024  0E34                     	;# 
  3025  0E35                     	;# 
  3026  0E36                     	;# 
  3027  0E37                     	;# 
  3028  0E8F                     	;# 
  3029  0E90                     	;# 
  3030  0E91                     	;# 
  3031  0E92                     	;# 
  3032  0E93                     	;# 
  3033  0E94                     	;# 
  3034  0E95                     	;# 
  3035  0E96                     	;# 
  3036  0E97                     	;# 
  3037  0E9C                     	;# 
  3038  0E9D                     	;# 
  3039  0E9E                     	;# 
  3040  0EA1                     	;# 
  3041  0EA2                     	;# 
  3042  0EA3                     	;# 
  3043  0EA4                     	;# 
  3044  0EA5                     	;# 
  3045  0EA9                     	;# 
  3046  0EAA                     	;# 
  3047  0EAB                     	;# 
  3048  0EAC                     	;# 
  3049  0EB1                     	;# 
  3050  0EB2                     	;# 
  3051  0EB3                     	;# 
  3052  0EB8                     	;# 
  3053  0EB9                     	;# 
  3054  0EBA                     	;# 
  3055  0EBB                     	;# 
  3056  0EBC                     	;# 
  3057  0EBD                     	;# 
  3058  0EBE                     	;# 
  3059  0EC3                     	;# 
  3060  0EC5                     	;# 
  3061  0EC6                     	;# 
  3062  0EC7                     	;# 
  3063  0EC8                     	;# 
  3064  0EC9                     	;# 
  3065  0ECA                     	;# 
  3066  0ECB                     	;# 
  3067  0ECC                     	;# 
  3068  0F10                     	;# 
  3069  0F11                     	;# 
  3070  0F12                     	;# 
  3071  0F13                     	;# 
  3072  0F14                     	;# 
  3073  0F15                     	;# 
  3074  0F16                     	;# 
  3075  0F17                     	;# 
  3076  0F18                     	;# 
  3077  0F19                     	;# 
  3078  0F1A                     	;# 
  3079  0F1B                     	;# 
  3080  0F1C                     	;# 
  3081  0F1D                     	;# 
  3082  0F1E                     	;# 
  3083  0F1F                     	;# 
  3084  0F20                     	;# 
  3085  0F21                     	;# 
  3086  0F22                     	;# 
  3087  0F23                     	;# 
  3088  0F24                     	;# 
  3089  0F25                     	;# 
  3090  0F26                     	;# 
  3091  0F27                     	;# 
  3092  0F38                     	;# 
  3093  0F39                     	;# 
  3094  0F3A                     	;# 
  3095  0F3B                     	;# 
  3096  0F3C                     	;# 
  3097  0F3D                     	;# 
  3098  0F3E                     	;# 
  3099  0F3F                     	;# 
  3100  0F40                     	;# 
  3101  0F41                     	;# 
  3102  0F43                     	;# 
  3103  0F44                     	;# 
  3104  0F45                     	;# 
  3105  0F46                     	;# 
  3106  0F47                     	;# 
  3107  0F48                     	;# 
  3108  0F49                     	;# 
  3109  0F4A                     	;# 
  3110  0F4B                     	;# 
  3111  0F4C                     	;# 
  3112  0F4E                     	;# 
  3113  0F4F                     	;# 
  3114  0F50                     	;# 
  3115  0F51                     	;# 
  3116  0F52                     	;# 
  3117  0F53                     	;# 
  3118  0F54                     	;# 
  3119  0F55                     	;# 
  3120  0F56                     	;# 
  3121  0F57                     	;# 
  3122  0F65                     	;# 
  3123  0F68                     	;# 
  3124  0F69                     	;# 
  3125  0F6A                     	;# 
  3126  0F6B                     	;# 
  3127  0FE4                     	;# 
  3128  0FE5                     	;# 
  3129  0FE6                     	;# 
  3130  0FE7                     	;# 
  3131  0FE8                     	;# 
  3132  0FE9                     	;# 
  3133  0FEA                     	;# 
  3134  0FEB                     	;# 
  3135  0FED                     	;# 
  3136  0FEE                     	;# 
  3137  0FEF                     	;# 
  3138  0000                     	;# 
  3139  0001                     	;# 
  3140  0002                     	;# 
  3141  0003                     	;# 
  3142  0004                     	;# 
  3143  0005                     	;# 
  3144  0006                     	;# 
  3145  0007                     	;# 
  3146  0008                     	;# 
  3147  0009                     	;# 
  3148  000A                     	;# 
  3149  000B                     	;# 
  3150  000C                     	;# 
  3151  000D                     	;# 
  3152  000E                     	;# 
  3153  0010                     	;# 
  3154  0011                     	;# 
  3155  0012                     	;# 
  3156  0013                     	;# 
  3157  0016                     	;# 
  3158  0017                     	;# 
  3159  0018                     	;# 
  3160  001C                     	;# 
  3161  001C                     	;# 
  3162  001D                     	;# 
  3163  001D                     	;# 
  3164  001E                     	;# 
  3165  001F                     	;# 
  3166  008C                     	;# 
  3167  008C                     	;# 
  3168  008D                     	;# 
  3169  008E                     	;# 
  3170  008E                     	;# 
  3171  008F                     	;# 
  3172  0090                     	;# 
  3173  0090                     	;# 
  3174  0091                     	;# 
  3175  0093                     	;# 
  3176  0094                     	;# 
  3177  0095                     	;# 
  3178  0096                     	;# 
  3179  0097                     	;# 
  3180  0098                     	;# 
  3181  0099                     	;# 
  3182  009A                     	;# 
  3183  009B                     	;# 
  3184  009C                     	;# 
  3185  009D                     	;# 
  3186  009E                     	;# 
  3187  010C                     	;# 
  3188  010D                     	;# 
  3189  010E                     	;# 
  3190  010E                     	;# 
  3191  010F                     	;# 
  3192  0110                     	;# 
  3193  0110                     	;# 
  3194  0111                     	;# 
  3195  0112                     	;# 
  3196  0112                     	;# 
  3197  0113                     	;# 
  3198  0114                     	;# 
  3199  0114                     	;# 
  3200  0115                     	;# 
  3201  0116                     	;# 
  3202  0116                     	;# 
  3203  0117                     	;# 
  3204  0119                     	;# 
  3205  0119                     	;# 
  3206  0119                     	;# 
  3207  011A                     	;# 
  3208  011A                     	;# 
  3209  011A                     	;# 
  3210  011B                     	;# 
  3211  011B                     	;# 
  3212  011B                     	;# 
  3213  011B                     	;# 
  3214  011B                     	;# 
  3215  011C                     	;# 
  3216  011C                     	;# 
  3217  011C                     	;# 
  3218  011D                     	;# 
  3219  011D                     	;# 
  3220  011D                     	;# 
  3221  011E                     	;# 
  3222  011E                     	;# 
  3223  011E                     	;# 
  3224  011F                     	;# 
  3225  011F                     	;# 
  3226  011F                     	;# 
  3227  011F                     	;# 
  3228  011F                     	;# 
  3229  018C                     	;# 
  3230  018D                     	;# 
  3231  018E                     	;# 
  3232  018F                     	;# 
  3233  0190                     	;# 
  3234  0191                     	;# 
  3235  0192                     	;# 
  3236  0196                     	;# 
  3237  0197                     	;# 
  3238  0198                     	;# 
  3239  0199                     	;# 
  3240  019A                     	;# 
  3241  019B                     	;# 
  3242  019C                     	;# 
  3243  020C                     	;# 
  3244  020D                     	;# 
  3245  020E                     	;# 
  3246  020F                     	;# 
  3247  020F                     	;# 
  3248  0210                     	;# 
  3249  0210                     	;# 
  3250  0211                     	;# 
  3251  0211                     	;# 
  3252  0212                     	;# 
  3253  0213                     	;# 
  3254  0214                     	;# 
  3255  0215                     	;# 
  3256  0215                     	;# 
  3257  0216                     	;# 
  3258  0216                     	;# 
  3259  0217                     	;# 
  3260  0217                     	;# 
  3261  0218                     	;# 
  3262  0219                     	;# 
  3263  021A                     	;# 
  3264  021B                     	;# 
  3265  021B                     	;# 
  3266  021C                     	;# 
  3267  021C                     	;# 
  3268  021D                     	;# 
  3269  021D                     	;# 
  3270  021E                     	;# 
  3271  021F                     	;# 
  3272  028C                     	;# 
  3273  028C                     	;# 
  3274  028D                     	;# 
  3275  028D                     	;# 
  3276  028E                     	;# 
  3277  028F                     	;# 
  3278  0290                     	;# 
  3279  0290                     	;# 
  3280  0291                     	;# 
  3281  0292                     	;# 
  3282  0292                     	;# 
  3283  0293                     	;# 
  3284  0293                     	;# 
  3285  0294                     	;# 
  3286  0295                     	;# 
  3287  0296                     	;# 
  3288  0296                     	;# 
  3289  0297                     	;# 
  3290  0298                     	;# 
  3291  0298                     	;# 
  3292  0299                     	;# 
  3293  0299                     	;# 
  3294  029A                     	;# 
  3295  029B                     	;# 
  3296  029C                     	;# 
  3297  029C                     	;# 
  3298  029D                     	;# 
  3299  030C                     	;# 
  3300  030C                     	;# 
  3301  030D                     	;# 
  3302  030E                     	;# 
  3303  030F                     	;# 
  3304  0310                     	;# 
  3305  0310                     	;# 
  3306  0311                     	;# 
  3307  0312                     	;# 
  3308  0313                     	;# 
  3309  0314                     	;# 
  3310  0314                     	;# 
  3311  0315                     	;# 
  3312  0316                     	;# 
  3313  0317                     	;# 
  3314  0318                     	;# 
  3315  0318                     	;# 
  3316  0319                     	;# 
  3317  031A                     	;# 
  3318  031B                     	;# 
  3319  031C                     	;# 
  3320  031C                     	;# 
  3321  031D                     	;# 
  3322  031E                     	;# 
  3323  031F                     	;# 
  3324  038C                     	;# 
  3325  038D                     	;# 
  3326  038E                     	;# 
  3327  0390                     	;# 
  3328  0391                     	;# 
  3329  0392                     	;# 
  3330  040C                     	;# 
  3331  040D                     	;# 
  3332  040E                     	;# 
  3333  040F                     	;# 
  3334  0410                     	;# 
  3335  0411                     	;# 
  3336  0416                     	;# 
  3337  0416                     	;# 
  3338  0417                     	;# 
  3339  0418                     	;# 
  3340  0418                     	;# 
  3341  0419                     	;# 
  3342  041A                     	;# 
  3343  041A                     	;# 
  3344  041B                     	;# 
  3345  041C                     	;# 
  3346  041C                     	;# 
  3347  041D                     	;# 
  3348  041E                     	;# 
  3349  041F                     	;# 
  3350  048C                     	;# 
  3351  048C                     	;# 
  3352  048D                     	;# 
  3353  048E                     	;# 
  3354  048F                     	;# 
  3355  048F                     	;# 
  3356  0490                     	;# 
  3357  0491                     	;# 
  3358  0492                     	;# 
  3359  0492                     	;# 
  3360  0493                     	;# 
  3361  0494                     	;# 
  3362  0495                     	;# 
  3363  0495                     	;# 
  3364  0496                     	;# 
  3365  0497                     	;# 
  3366  0498                     	;# 
  3367  0499                     	;# 
  3368  049A                     	;# 
  3369  049B                     	;# 
  3370  049C                     	;# 
  3371  049D                     	;# 
  3372  050C                     	;# 
  3373  050C                     	;# 
  3374  050D                     	;# 
  3375  050E                     	;# 
  3376  050F                     	;# 
  3377  050F                     	;# 
  3378  0510                     	;# 
  3379  0511                     	;# 
  3380  0512                     	;# 
  3381  0512                     	;# 
  3382  0513                     	;# 
  3383  0514                     	;# 
  3384  0515                     	;# 
  3385  0515                     	;# 
  3386  0516                     	;# 
  3387  0517                     	;# 
  3388  0518                     	;# 
  3389  0519                     	;# 
  3390  051A                     	;# 
  3391  051B                     	;# 
  3392  051C                     	;# 
  3393  051D                     	;# 
  3394  058C                     	;# 
  3395  058C                     	;# 
  3396  058D                     	;# 
  3397  058E                     	;# 
  3398  058F                     	;# 
  3399  058F                     	;# 
  3400  0590                     	;# 
  3401  0591                     	;# 
  3402  0592                     	;# 
  3403  0593                     	;# 
  3404  060C                     	;# 
  3405  060D                     	;# 
  3406  060E                     	;# 
  3407  060F                     	;# 
  3408  0610                     	;# 
  3409  0611                     	;# 
  3410  0612                     	;# 
  3411  0613                     	;# 
  3412  0614                     	;# 
  3413  0616                     	;# 
  3414  0617                     	;# 
  3415  0618                     	;# 
  3416  0619                     	;# 
  3417  061A                     	;# 
  3418  061B                     	;# 
  3419  061C                     	;# 
  3420  061D                     	;# 
  3421  061E                     	;# 
  3422  068C                     	;# 
  3423  068D                     	;# 
  3424  068E                     	;# 
  3425  068F                     	;# 
  3426  0690                     	;# 
  3427  0691                     	;# 
  3428  0692                     	;# 
  3429  0693                     	;# 
  3430  0694                     	;# 
  3431  070C                     	;# 
  3432  070D                     	;# 
  3433  070E                     	;# 
  3434  070F                     	;# 
  3435  0710                     	;# 
  3436  0711                     	;# 
  3437  0712                     	;# 
  3438  0713                     	;# 
  3439  0714                     	;# 
  3440  0716                     	;# 
  3441  0717                     	;# 
  3442  0718                     	;# 
  3443  0719                     	;# 
  3444  071A                     	;# 
  3445  071B                     	;# 
  3446  071C                     	;# 
  3447  071D                     	;# 
  3448  071E                     	;# 
  3449  0796                     	;# 
  3450  0797                     	;# 
  3451  0798                     	;# 
  3452  0799                     	;# 
  3453  079A                     	;# 
  3454  079B                     	;# 
  3455  080C                     	;# 
  3456  080D                     	;# 
  3457  080E                     	;# 
  3458  080F                     	;# 
  3459  0810                     	;# 
  3460  0811                     	;# 
  3461  0812                     	;# 
  3462  0813                     	;# 
  3463  0814                     	;# 
  3464  081A                     	;# 
  3465  081B                     	;# 
  3466  081C                     	;# 
  3467  081D                     	;# 
  3468  081E                     	;# 
  3469  081F                     	;# 
  3470  088C                     	;# 
  3471  088D                     	;# 
  3472  088E                     	;# 
  3473  088F                     	;# 
  3474  0890                     	;# 
  3475  0891                     	;# 
  3476  0892                     	;# 
  3477  0893                     	;# 
  3478  0895                     	;# 
  3479  0896                     	;# 
  3480  0897                     	;# 
  3481  0898                     	;# 
  3482  0899                     	;# 
  3483  089A                     	;# 
  3484  089B                     	;# 
  3485  090C                     	;# 
  3486  090E                     	;# 
  3487  090F                     	;# 
  3488  091F                     	;# 
  3489  091F                     	;# 
  3490  098F                     	;# 
  3491  098F                     	;# 
  3492  0990                     	;# 
  3493  0991                     	;# 
  3494  0992                     	;# 
  3495  0993                     	;# 
  3496  0994                     	;# 
  3497  0995                     	;# 
  3498  0996                     	;# 
  3499  0997                     	;# 
  3500  0E0F                     	;# 
  3501  0E10                     	;# 
  3502  0E11                     	;# 
  3503  0E12                     	;# 
  3504  0E13                     	;# 
  3505  0E14                     	;# 
  3506  0E15                     	;# 
  3507  0E16                     	;# 
  3508  0E17                     	;# 
  3509  0E18                     	;# 
  3510  0E19                     	;# 
  3511  0E1A                     	;# 
  3512  0E1B                     	;# 
  3513  0E1C                     	;# 
  3514  0E1D                     	;# 
  3515  0E1E                     	;# 
  3516  0E1F                     	;# 
  3517  0E20                     	;# 
  3518  0E21                     	;# 
  3519  0E22                     	;# 
  3520  0E23                     	;# 
  3521  0E24                     	;# 
  3522  0E25                     	;# 
  3523  0E26                     	;# 
  3524  0E27                     	;# 
  3525  0E28                     	;# 
  3526  0E29                     	;# 
  3527  0E2A                     	;# 
  3528  0E2B                     	;# 
  3529  0E2C                     	;# 
  3530  0E2D                     	;# 
  3531  0E2E                     	;# 
  3532  0E2F                     	;# 
  3533  0E30                     	;# 
  3534  0E31                     	;# 
  3535  0E32                     	;# 
  3536  0E33                     	;# 
  3537  0E34                     	;# 
  3538  0E35                     	;# 
  3539  0E36                     	;# 
  3540  0E37                     	;# 
  3541  0E8F                     	;# 
  3542  0E90                     	;# 
  3543  0E91                     	;# 
  3544  0E92                     	;# 
  3545  0E93                     	;# 
  3546  0E94                     	;# 
  3547  0E95                     	;# 
  3548  0E96                     	;# 
  3549  0E97                     	;# 
  3550  0E9C                     	;# 
  3551  0E9D                     	;# 
  3552  0E9E                     	;# 
  3553  0EA1                     	;# 
  3554  0EA2                     	;# 
  3555  0EA3                     	;# 
  3556  0EA4                     	;# 
  3557  0EA5                     	;# 
  3558  0EA9                     	;# 
  3559  0EAA                     	;# 
  3560  0EAB                     	;# 
  3561  0EAC                     	;# 
  3562  0EB1                     	;# 
  3563  0EB2                     	;# 
  3564  0EB3                     	;# 
  3565  0EB8                     	;# 
  3566  0EB9                     	;# 
  3567  0EBA                     	;# 
  3568  0EBB                     	;# 
  3569  0EBC                     	;# 
  3570  0EBD                     	;# 
  3571  0EBE                     	;# 
  3572  0EC3                     	;# 
  3573  0EC5                     	;# 
  3574  0EC6                     	;# 
  3575  0EC7                     	;# 
  3576  0EC8                     	;# 
  3577  0EC9                     	;# 
  3578  0ECA                     	;# 
  3579  0ECB                     	;# 
  3580  0ECC                     	;# 
  3581  0F10                     	;# 
  3582  0F11                     	;# 
  3583  0F12                     	;# 
  3584  0F13                     	;# 
  3585  0F14                     	;# 
  3586  0F15                     	;# 
  3587  0F16                     	;# 
  3588  0F17                     	;# 
  3589  0F18                     	;# 
  3590  0F19                     	;# 
  3591  0F1A                     	;# 
  3592  0F1B                     	;# 
  3593  0F1C                     	;# 
  3594  0F1D                     	;# 
  3595  0F1E                     	;# 
  3596  0F1F                     	;# 
  3597  0F20                     	;# 
  3598  0F21                     	;# 
  3599  0F22                     	;# 
  3600  0F23                     	;# 
  3601  0F24                     	;# 
  3602  0F25                     	;# 
  3603  0F26                     	;# 
  3604  0F27                     	;# 
  3605  0F38                     	;# 
  3606  0F39                     	;# 
  3607  0F3A                     	;# 
  3608  0F3B                     	;# 
  3609  0F3C                     	;# 
  3610  0F3D                     	;# 
  3611  0F3E                     	;# 
  3612  0F3F                     	;# 
  3613  0F40                     	;# 
  3614  0F41                     	;# 
  3615  0F43                     	;# 
  3616  0F44                     	;# 
  3617  0F45                     	;# 
  3618  0F46                     	;# 
  3619  0F47                     	;# 
  3620  0F48                     	;# 
  3621  0F49                     	;# 
  3622  0F4A                     	;# 
  3623  0F4B                     	;# 
  3624  0F4C                     	;# 
  3625  0F4E                     	;# 
  3626  0F4F                     	;# 
  3627  0F50                     	;# 
  3628  0F51                     	;# 
  3629  0F52                     	;# 
  3630  0F53                     	;# 
  3631  0F54                     	;# 
  3632  0F55                     	;# 
  3633  0F56                     	;# 
  3634  0F57                     	;# 
  3635  0F65                     	;# 
  3636  0F68                     	;# 
  3637  0F69                     	;# 
  3638  0F6A                     	;# 
  3639  0F6B                     	;# 
  3640  0FE4                     	;# 
  3641  0FE5                     	;# 
  3642  0FE6                     	;# 
  3643  0FE7                     	;# 
  3644  0FE8                     	;# 
  3645  0FE9                     	;# 
  3646  0FEA                     	;# 
  3647  0FEB                     	;# 
  3648  0FED                     	;# 
  3649  0FEE                     	;# 
  3650  0FEF                     	;# 
  3651  0000                     	;# 
  3652  0001                     	;# 
  3653  0002                     	;# 
  3654  0003                     	;# 
  3655  0004                     	;# 
  3656  0005                     	;# 
  3657  0006                     	;# 
  3658  0007                     	;# 
  3659  0008                     	;# 
  3660  0009                     	;# 
  3661  000A                     	;# 
  3662  000B                     	;# 
  3663  000C                     	;# 
  3664  000D                     	;# 
  3665  000E                     	;# 
  3666  0010                     	;# 
  3667  0011                     	;# 
  3668  0012                     	;# 
  3669  0013                     	;# 
  3670  0016                     	;# 
  3671  0017                     	;# 
  3672  0018                     	;# 
  3673  001C                     	;# 
  3674  001C                     	;# 
  3675  001D                     	;# 
  3676  001D                     	;# 
  3677  001E                     	;# 
  3678  001F                     	;# 
  3679  008C                     	;# 
  3680  008C                     	;# 
  3681  008D                     	;# 
  3682  008E                     	;# 
  3683  008E                     	;# 
  3684  008F                     	;# 
  3685  0090                     	;# 
  3686  0090                     	;# 
  3687  0091                     	;# 
  3688  0093                     	;# 
  3689  0094                     	;# 
  3690  0095                     	;# 
  3691  0096                     	;# 
  3692  0097                     	;# 
  3693  0098                     	;# 
  3694  0099                     	;# 
  3695  009A                     	;# 
  3696  009B                     	;# 
  3697  009C                     	;# 
  3698  009D                     	;# 
  3699  009E                     	;# 
  3700  010C                     	;# 
  3701  010D                     	;# 
  3702  010E                     	;# 
  3703  010E                     	;# 
  3704  010F                     	;# 
  3705  0110                     	;# 
  3706  0110                     	;# 
  3707  0111                     	;# 
  3708  0112                     	;# 
  3709  0112                     	;# 
  3710  0113                     	;# 
  3711  0114                     	;# 
  3712  0114                     	;# 
  3713  0115                     	;# 
  3714  0116                     	;# 
  3715  0116                     	;# 
  3716  0117                     	;# 
  3717  0119                     	;# 
  3718  0119                     	;# 
  3719  0119                     	;# 
  3720  011A                     	;# 
  3721  011A                     	;# 
  3722  011A                     	;# 
  3723  011B                     	;# 
  3724  011B                     	;# 
  3725  011B                     	;# 
  3726  011B                     	;# 
  3727  011B                     	;# 
  3728  011C                     	;# 
  3729  011C                     	;# 
  3730  011C                     	;# 
  3731  011D                     	;# 
  3732  011D                     	;# 
  3733  011D                     	;# 
  3734  011E                     	;# 
  3735  011E                     	;# 
  3736  011E                     	;# 
  3737  011F                     	;# 
  3738  011F                     	;# 
  3739  011F                     	;# 
  3740  011F                     	;# 
  3741  011F                     	;# 
  3742  018C                     	;# 
  3743  018D                     	;# 
  3744  018E                     	;# 
  3745  018F                     	;# 
  3746  0190                     	;# 
  3747  0191                     	;# 
  3748  0192                     	;# 
  3749  0196                     	;# 
  3750  0197                     	;# 
  3751  0198                     	;# 
  3752  0199                     	;# 
  3753  019A                     	;# 
  3754  019B                     	;# 
  3755  019C                     	;# 
  3756  020C                     	;# 
  3757  020D                     	;# 
  3758  020E                     	;# 
  3759  020F                     	;# 
  3760  020F                     	;# 
  3761  0210                     	;# 
  3762  0210                     	;# 
  3763  0211                     	;# 
  3764  0211                     	;# 
  3765  0212                     	;# 
  3766  0213                     	;# 
  3767  0214                     	;# 
  3768  0215                     	;# 
  3769  0215                     	;# 
  3770  0216                     	;# 
  3771  0216                     	;# 
  3772  0217                     	;# 
  3773  0217                     	;# 
  3774  0218                     	;# 
  3775  0219                     	;# 
  3776  021A                     	;# 
  3777  021B                     	;# 
  3778  021B                     	;# 
  3779  021C                     	;# 
  3780  021C                     	;# 
  3781  021D                     	;# 
  3782  021D                     	;# 
  3783  021E                     	;# 
  3784  021F                     	;# 
  3785  028C                     	;# 
  3786  028C                     	;# 
  3787  028D                     	;# 
  3788  028D                     	;# 
  3789  028E                     	;# 
  3790  028F                     	;# 
  3791  0290                     	;# 
  3792  0290                     	;# 
  3793  0291                     	;# 
  3794  0292                     	;# 
  3795  0292                     	;# 
  3796  0293                     	;# 
  3797  0293                     	;# 
  3798  0294                     	;# 
  3799  0295                     	;# 
  3800  0296                     	;# 
  3801  0296                     	;# 
  3802  0297                     	;# 
  3803  0298                     	;# 
  3804  0298                     	;# 
  3805  0299                     	;# 
  3806  0299                     	;# 
  3807  029A                     	;# 
  3808  029B                     	;# 
  3809  029C                     	;# 
  3810  029C                     	;# 
  3811  029D                     	;# 
  3812  030C                     	;# 
  3813  030C                     	;# 
  3814  030D                     	;# 
  3815  030E                     	;# 
  3816  030F                     	;# 
  3817  0310                     	;# 
  3818  0310                     	;# 
  3819  0311                     	;# 
  3820  0312                     	;# 
  3821  0313                     	;# 
  3822  0314                     	;# 
  3823  0314                     	;# 
  3824  0315                     	;# 
  3825  0316                     	;# 
  3826  0317                     	;# 
  3827  0318                     	;# 
  3828  0318                     	;# 
  3829  0319                     	;# 
  3830  031A                     	;# 
  3831  031B                     	;# 
  3832  031C                     	;# 
  3833  031C                     	;# 
  3834  031D                     	;# 
  3835  031E                     	;# 
  3836  031F                     	;# 
  3837  038C                     	;# 
  3838  038D                     	;# 
  3839  038E                     	;# 
  3840  0390                     	;# 
  3841  0391                     	;# 
  3842  0392                     	;# 
  3843  040C                     	;# 
  3844  040D                     	;# 
  3845  040E                     	;# 
  3846  040F                     	;# 
  3847  0410                     	;# 
  3848  0411                     	;# 
  3849  0416                     	;# 
  3850  0416                     	;# 
  3851  0417                     	;# 
  3852  0418                     	;# 
  3853  0418                     	;# 
  3854  0419                     	;# 
  3855  041A                     	;# 
  3856  041A                     	;# 
  3857  041B                     	;# 
  3858  041C                     	;# 
  3859  041C                     	;# 
  3860  041D                     	;# 
  3861  041E                     	;# 
  3862  041F                     	;# 
  3863  048C                     	;# 
  3864  048C                     	;# 
  3865  048D                     	;# 
  3866  048E                     	;# 
  3867  048F                     	;# 
  3868  048F                     	;# 
  3869  0490                     	;# 
  3870  0491                     	;# 
  3871  0492                     	;# 
  3872  0492                     	;# 
  3873  0493                     	;# 
  3874  0494                     	;# 
  3875  0495                     	;# 
  3876  0495                     	;# 
  3877  0496                     	;# 
  3878  0497                     	;# 
  3879  0498                     	;# 
  3880  0499                     	;# 
  3881  049A                     	;# 
  3882  049B                     	;# 
  3883  049C                     	;# 
  3884  049D                     	;# 
  3885  050C                     	;# 
  3886  050C                     	;# 
  3887  050D                     	;# 
  3888  050E                     	;# 
  3889  050F                     	;# 
  3890  050F                     	;# 
  3891  0510                     	;# 
  3892  0511                     	;# 
  3893  0512                     	;# 
  3894  0512                     	;# 
  3895  0513                     	;# 
  3896  0514                     	;# 
  3897  0515                     	;# 
  3898  0515                     	;# 
  3899  0516                     	;# 
  3900  0517                     	;# 
  3901  0518                     	;# 
  3902  0519                     	;# 
  3903  051A                     	;# 
  3904  051B                     	;# 
  3905  051C                     	;# 
  3906  051D                     	;# 
  3907  058C                     	;# 
  3908  058C                     	;# 
  3909  058D                     	;# 
  3910  058E                     	;# 
  3911  058F                     	;# 
  3912  058F                     	;# 
  3913  0590                     	;# 
  3914  0591                     	;# 
  3915  0592                     	;# 
  3916  0593                     	;# 
  3917  060C                     	;# 
  3918  060D                     	;# 
  3919  060E                     	;# 
  3920  060F                     	;# 
  3921  0610                     	;# 
  3922  0611                     	;# 
  3923  0612                     	;# 
  3924  0613                     	;# 
  3925  0614                     	;# 
  3926  0616                     	;# 
  3927  0617                     	;# 
  3928  0618                     	;# 
  3929  0619                     	;# 
  3930  061A                     	;# 
  3931  061B                     	;# 
  3932  061C                     	;# 
  3933  061D                     	;# 
  3934  061E                     	;# 
  3935  068C                     	;# 
  3936  068D                     	;# 
  3937  068E                     	;# 
  3938  068F                     	;# 
  3939  0690                     	;# 
  3940  0691                     	;# 
  3941  0692                     	;# 
  3942  0693                     	;# 
  3943  0694                     	;# 
  3944  070C                     	;# 
  3945  070D                     	;# 
  3946  070E                     	;# 
  3947  070F                     	;# 
  3948  0710                     	;# 
  3949  0711                     	;# 
  3950  0712                     	;# 
  3951  0713                     	;# 
  3952  0714                     	;# 
  3953  0716                     	;# 
  3954  0717                     	;# 
  3955  0718                     	;# 
  3956  0719                     	;# 
  3957  071A                     	;# 
  3958  071B                     	;# 
  3959  071C                     	;# 
  3960  071D                     	;# 
  3961  071E                     	;# 
  3962  0796                     	;# 
  3963  0797                     	;# 
  3964  0798                     	;# 
  3965  0799                     	;# 
  3966  079A                     	;# 
  3967  079B                     	;# 
  3968  080C                     	;# 
  3969  080D                     	;# 
  3970  080E                     	;# 
  3971  080F                     	;# 
  3972  0810                     	;# 
  3973  0811                     	;# 
  3974  0812                     	;# 
  3975  0813                     	;# 
  3976  0814                     	;# 
  3977  081A                     	;# 
  3978  081B                     	;# 
  3979  081C                     	;# 
  3980  081D                     	;# 
  3981  081E                     	;# 
  3982  081F                     	;# 
  3983  088C                     	;# 
  3984  088D                     	;# 
  3985  088E                     	;# 
  3986  088F                     	;# 
  3987  0890                     	;# 
  3988  0891                     	;# 
  3989  0892                     	;# 
  3990  0893                     	;# 
  3991  0895                     	;# 
  3992  0896                     	;# 
  3993  0897                     	;# 
  3994  0898                     	;# 
  3995  0899                     	;# 
  3996  089A                     	;# 
  3997  089B                     	;# 
  3998  090C                     	;# 
  3999  090E                     	;# 
  4000  090F                     	;# 
  4001  091F                     	;# 
  4002  091F                     	;# 
  4003  098F                     	;# 
  4004  098F                     	;# 
  4005  0990                     	;# 
  4006  0991                     	;# 
  4007  0992                     	;# 
  4008  0993                     	;# 
  4009  0994                     	;# 
  4010  0995                     	;# 
  4011  0996                     	;# 
  4012  0997                     	;# 
  4013  0E0F                     	;# 
  4014  0E10                     	;# 
  4015  0E11                     	;# 
  4016  0E12                     	;# 
  4017  0E13                     	;# 
  4018  0E14                     	;# 
  4019  0E15                     	;# 
  4020  0E16                     	;# 
  4021  0E17                     	;# 
  4022  0E18                     	;# 
  4023  0E19                     	;# 
  4024  0E1A                     	;# 
  4025  0E1B                     	;# 
  4026  0E1C                     	;# 
  4027  0E1D                     	;# 
  4028  0E1E                     	;# 
  4029  0E1F                     	;# 
  4030  0E20                     	;# 
  4031  0E21                     	;# 
  4032  0E22                     	;# 
  4033  0E23                     	;# 
  4034  0E24                     	;# 
  4035  0E25                     	;# 
  4036  0E26                     	;# 
  4037  0E27                     	;# 
  4038  0E28                     	;# 
  4039  0E29                     	;# 
  4040  0E2A                     	;# 
  4041  0E2B                     	;# 
  4042  0E2C                     	;# 
  4043  0E2D                     	;# 
  4044  0E2E                     	;# 
  4045  0E2F                     	;# 
  4046  0E30                     	;# 
  4047  0E31                     	;# 
  4048  0E32                     	;# 
  4049  0E33                     	;# 
  4050  0E34                     	;# 
  4051  0E35                     	;# 
  4052  0E36                     	;# 
  4053  0E37                     	;# 
  4054  0E8F                     	;# 
  4055  0E90                     	;# 
  4056  0E91                     	;# 
  4057  0E92                     	;# 
  4058  0E93                     	;# 
  4059  0E94                     	;# 
  4060  0E95                     	;# 
  4061  0E96                     	;# 
  4062  0E97                     	;# 
  4063  0E9C                     	;# 
  4064  0E9D                     	;# 
  4065  0E9E                     	;# 
  4066  0EA1                     	;# 
  4067  0EA2                     	;# 
  4068  0EA3                     	;# 
  4069  0EA4                     	;# 
  4070  0EA5                     	;# 
  4071  0EA9                     	;# 
  4072  0EAA                     	;# 
  4073  0EAB                     	;# 
  4074  0EAC                     	;# 
  4075  0EB1                     	;# 
  4076  0EB2                     	;# 
  4077  0EB3                     	;# 
  4078  0EB8                     	;# 
  4079  0EB9                     	;# 
  4080  0EBA                     	;# 
  4081  0EBB                     	;# 
  4082  0EBC                     	;# 
  4083  0EBD                     	;# 
  4084  0EBE                     	;# 
  4085  0EC3                     	;# 
  4086  0EC5                     	;# 
  4087  0EC6                     	;# 
  4088  0EC7                     	;# 
  4089  0EC8                     	;# 
  4090  0EC9                     	;# 
  4091  0ECA                     	;# 
  4092  0ECB                     	;# 
  4093  0ECC                     	;# 
  4094  0F10                     	;# 
  4095  0F11                     	;# 
  4096  0F12                     	;# 
  4097  0F13                     	;# 
  4098  0F14                     	;# 
  4099  0F15                     	;# 
  4100  0F16                     	;# 
  4101  0F17                     	;# 
  4102  0F18                     	;# 
  4103  0F19                     	;# 
  4104  0F1A                     	;# 
  4105  0F1B                     	;# 
  4106  0F1C                     	;# 
  4107  0F1D                     	;# 
  4108  0F1E                     	;# 
  4109  0F1F                     	;# 
  4110  0F20                     	;# 
  4111  0F21                     	;# 
  4112  0F22                     	;# 
  4113  0F23                     	;# 
  4114  0F24                     	;# 
  4115  0F25                     	;# 
  4116  0F26                     	;# 
  4117  0F27                     	;# 
  4118  0F38                     	;# 
  4119  0F39                     	;# 
  4120  0F3A                     	;# 
  4121  0F3B                     	;# 
  4122  0F3C                     	;# 
  4123  0F3D                     	;# 
  4124  0F3E                     	;# 
  4125  0F3F                     	;# 
  4126  0F40                     	;# 
  4127  0F41                     	;# 
  4128  0F43                     	;# 
  4129  0F44                     	;# 
  4130  0F45                     	;# 
  4131  0F46                     	;# 
  4132  0F47                     	;# 
  4133  0F48                     	;# 
  4134  0F49                     	;# 
  4135  0F4A                     	;# 
  4136  0F4B                     	;# 
  4137  0F4C                     	;# 
  4138  0F4E                     	;# 
  4139  0F4F                     	;# 
  4140  0F50                     	;# 
  4141  0F51                     	;# 
  4142  0F52                     	;# 
  4143  0F53                     	;# 
  4144  0F54                     	;# 
  4145  0F55                     	;# 
  4146  0F56                     	;# 
  4147  0F57                     	;# 
  4148  0F65                     	;# 
  4149  0F68                     	;# 
  4150  0F69                     	;# 
  4151  0F6A                     	;# 
  4152  0F6B                     	;# 
  4153  0FE4                     	;# 
  4154  0FE5                     	;# 
  4155  0FE6                     	;# 
  4156  0FE7                     	;# 
  4157  0FE8                     	;# 
  4158  0FE9                     	;# 
  4159  0FEA                     	;# 
  4160  0FEB                     	;# 
  4161  0FED                     	;# 
  4162  0FEE                     	;# 
  4163  0FEF                     	;_samples
  4164                           
  4165                           	psect	idataBANK1
  4166  17C4                     __pidataBANK1:	
  4167                           
  4168                           ;initializer for _channels
  4169  17C4  3401               	retlw	1
  4170  17C5  3400               	retlw	0
  4171  17C6  3403               	retlw	3
  4172  17C7  3400               	retlw	0
  4173  17C8  3404               	retlw	4
  4174  17C9  3400               	retlw	0
  4175  17CA  3405               	retlw	5
  4176  17CB  3400               	retlw	0
  4177  17CC  3409               	retlw	9
  4178  17CD  3400               	retlw	0
  4179  17CE  340B               	retlw	11
  4180  17CF  3400               	retlw	0
  4181                           
  4182                           ;initializer for main@F13661
  4183  17D0  3400               	retlw	0
  4184  17D1  3440               	retlw	64
  4185  17D2  3402               	retlw	2
  4186  17D3  3400               	retlw	0
  4187  17D4  3400               	retlw	0
  4188  17D5  3400               	retlw	0
  4189                           
  4190                           	psect	idataBANK2
  4191  0820                     __pidataBANK2:	
  4192                           
  4193                           ;initializer for ___cgram
  4194  0820  340C               	retlw	12
  4195  0821  3412               	retlw	18
  4196  0822  3412               	retlw	18
  4197  0823  340C               	retlw	12
  4198  0824  3400               	retlw	0
  4199  0825  3400               	retlw	0
  4200  0826  3400               	retlw	0
  4201  0827  3400               	retlw	0
  4202  0828  340A               	retlw	10
  4203  0829  3415               	retlw	21
  4204  082A  3411               	retlw	17
  4205  082B  340A               	retlw	10
  4206  082C  3404               	retlw	4
  4207  082D  3400               	retlw	0
  4208  082E  3400               	retlw	0
  4209  082F  3400               	retlw	0
  4210  0830  340A               	retlw	10
  4211  0831  341F               	retlw	31
  4212  0832  341F               	retlw	31
  4213  0833  340E               	retlw	14
  4214  0834  3404               	retlw	4
  4215  0835  3400               	retlw	0
  4216  0836  3400               	retlw	0
  4217  0837  3400               	retlw	0
  4218                           
  4219                           	psect	stringtext
  4220  1000                     __pstringtext:	
  4221  1000                     log@coeff:	
  4222  1000  3400               	retlw	0
  4223  1001  3400               	retlw	0
  4224  1002  3400               	retlw	0
  4225  1003  3400               	retlw	0
  4226  1004  3480               	retlw	128
  4227  1005  343F               	retlw	63
  4228  1006  34F0               	retlw	240
  4229  1007  34FF               	retlw	255
  4230  1008  34BE               	retlw	190
  4231  1009  34E2               	retlw	226
  4232  100A  34A9               	retlw	169
  4233  100B  343E               	retlw	62
  4234  100C  3483               	retlw	131
  4235  100D  3476               	retlw	118
  4236  100E  34BE               	retlw	190
  4237  100F  34AE               	retlw	174
  4238  1010  342B               	retlw	43
  4239  1011  343E               	retlw	62
  4240  1012  343C               	retlw	60
  4241  1013  34C3               	retlw	195
  4242  1014  34BD               	retlw	189
  4243  1015  34D2               	retlw	210
  4244  1016  3413               	retlw	19
  4245  1017  343D               	retlw	61
  4246  1018  3478               	retlw	120
  4247  1019  34D3               	retlw	211
  4248  101A  34BB               	retlw	187
  4249  101B                     __end_oflog@coeff:	
  4250  0016                     _LATA	set	22
  4251  0017                     _LATB	set	23
  4252  0018                     _LATC	set	24
  4253  0011                     _TRISA	set	17
  4254  0012                     _TRISB	set	18
  4255  0013                     _TRISC	set	19
  4256  005F                     _GIE	set	95
  4257  0060                     _RA0	set	96
  4258  0062                     _RA2	set	98
  4259  0066                     _RA6	set	102
  4260  0067                     _RA7	set	103
  4261  0070                     _RC0	set	112
  4262  0071                     _RC1	set	113
  4263  009D                     _ADACQ	set	157
  4264  0099                     _ADACT	set	153
  4265  009B                     _ADCAP	set	155
  4266  0098                     _ADCLK	set	152
  4267  0093                     _ADCON0	set	147
  4268  0093                     _ADCON0bits	set	147
  4269  0094                     _ADCON1	set	148
  4270  0095                     _ADCON2	set	149
  4271  0096                     _ADCON3	set	150
  4272  009E                     _ADPCH	set	158
  4273  009C                     _ADPRE	set	156
  4274  009A                     _ADREF	set	154
  4275  008D                     _ADRESH	set	141
  4276  008C                     _ADRESL	set	140
  4277  0097                     _ADSTAT	set	151
  4278  010F                     _ADLTHH	set	271
  4279  010E                     _ADLTHL	set	270
  4280  010D                     _ADRPT	set	269
  4281  0113                     _ADSTPTH	set	275
  4282  0112                     _ADSTPTL	set	274
  4283  0111                     _ADUTHH	set	273
  4284  0110                     _ADUTHL	set	272
  4285  021F                     _CCPTMRS1bits	set	543
  4286  0290                     _T2CLKCON	set	656
  4287  028E                     _T2CON	set	654
  4288  028E                     _T2CONbits	set	654
  4289  028F                     _T2HLT	set	655
  4290  028D                     _T2PR	set	653
  4291  0291                     _T2RST	set	657
  4292  028C                     _T2TMR	set	652
  4293  038E                     _PWM6CON	set	910
  4294  038D                     _PWM6DCH	set	909
  4295  038C                     _PWM6DCL	set	908
  4296  0716                     _PIE0bits	set	1814
  4297  0710                     _PIR4bits	set	1808
  4298  088D                     _OSCCON1	set	2189
  4299  088F                     _OSCCON3	set	2191
  4300  0891                     _OSCEN	set	2193
  4301  0893                     _OSCFRQ	set	2195
  4302  0892                     _OSCTUNE	set	2194
  4303  090C                     _FVRCON	set	2316
  4304  0E8F                     _PPSLOCK	set	3727
  4305  0E8F                     _PPSLOCKbits	set	3727
  4306  0F38                     _ANSELA	set	3896
  4307  0F43                     _ANSELB	set	3907
  4308  0F4E                     _ANSELC	set	3918
  4309  0F22                     _RC2PPS	set	3874
  4310  0F39                     _WPUA	set	3897
  4311  0F44                     _WPUB	set	3908
  4312  0F4F                     _WPUC	set	3919
  4313  0F65                     _WPUE	set	3941
  4314  101B                     STR_13:	
  4315  101B  3442               	retlw	66	;'B'
  4316  101C  3461               	retlw	97	;'a'
  4317  101D  3463               	retlw	99	;'c'
  4318  101E  346B               	retlw	107	;'k'
  4319  101F  344C               	retlw	76	;'L'
  4320  1020  3469               	retlw	105	;'i'
  4321  1021  3467               	retlw	103	;'g'
  4322  1022  3468               	retlw	104	;'h'
  4323  1023  3474               	retlw	116	;'t'
  4324  1024  343A               	retlw	58	;':'
  4325  1025  3400               	retlw	0
  4326  1026                     STR_15:	
  4327  1026  3453               	retlw	83	;'S'
  4328  1027  346F               	retlw	111	;'o'
  4329  1028  346C               	retlw	108	;'l'
  4330  1029  3461               	retlw	97	;'a'
  4331  102A  3472               	retlw	114	;'r'
  4332  102B  3420               	retlw	32	;' '
  4333  102C  3449               	retlw	73	;'I'
  4334  102D  346E               	retlw	110	;'n'
  4335  102E  3400               	retlw	0
  4336  102F                     STR_16:	
  4337  102F  3452               	retlw	82	;'R'
  4338  1030  3465               	retlw	101	;'e'
  4339  1031  3474               	retlw	116	;'t'
  4340  1032  3475               	retlw	117	;'u'
  4341  1033  3472               	retlw	114	;'r'
  4342  1034  346E               	retlw	110	;'n'
  4343  1035  3400               	retlw	0
  4344  1036                     STR_6:	
  4345  1036  3420               	retlw	32	;' '
  4346  1037  3400               	retlw	0
  4347  1038                     STR_12:	
  4348  1038  3421               	retlw	33	;'!'
  4349  1039  3400               	retlw	0
  4350  103A                     STR_1:	
  4351  103A  3441               	retlw	65	;'A'
  4352  103B  3400               	retlw	0
  4353  103C                     STR_7:	
  4354  103C  3444               	retlw	68	;'D'
  4355  103D  3400               	retlw	0
  4356  103E                     STR_4:	
  4357  103E  3448               	retlw	72	;'H'
  4358  103F  3400               	retlw	0
  4359  1040                     STR_10:	
  4360  1040  3449               	retlw	73	;'I'
  4361  1041  3400               	retlw	0
  4362  1042                     STR_2:	
  4363  1042  344C               	retlw	76	;'L'
  4364  1043  3400               	retlw	0
  4365  1044                     STR_3:	
  4366  1044  344F               	retlw	79	;'O'
  4367  1045  3400               	retlw	0
  4368  1046                     STR_9:	
  4369  1046  3456               	retlw	86	;'V'
  4370  1047  3400               	retlw	0
  4371  101B                     
  4372                           ; #config settings
  4373  0000                     
  4374                           	psect	cinit
  4375  07BD                     start_initialization:	
  4376  07BD                     __initialization:		;BIGRAM
  4377                           
  4378                           ; Initialize objects allocated to BANK1
  4379  07BD  30C4               	movlw	low __pidataBANK1
  4380  07BE  0084               	movwf	4
  4381  07BF  3097               	movlw	(high __pidataBANK1)| (0+128)
  4382  07C0  0085               	movwf	5
  4383  07C1  30D7               	movlw	low __pdataBANK1
  4384  07C2  0086               	movwf	6
  4385  07C3  3000               	movlw	high __pdataBANK1
  4386  07C4  0087               	movwf	7
  4387  07C5  3000               	movlw	0
  4388  07C6  00FF               	movwf	btemp+1
  4389  07C7  3012               	movlw	18
  4390  07C8  3197  279C  3187   	fcall	init_ram
  4391                           
  4392                           ; Initialize objects allocated to BANK2
  4393  07CB  3020               	movlw	low __pidataBANK2
  4394  07CC  0084               	movwf	4
  4395  07CD  3088               	movlw	(high __pidataBANK2)| (0+128)
  4396  07CE  0085               	movwf	5
  4397  07CF  3020               	movlw	low __pdataBANK2
  4398  07D0  0086               	movwf	6
  4399  07D1  3001               	movlw	high __pdataBANK2
  4400  07D2  0087               	movwf	7
  4401  07D3  3000               	movlw	0
  4402  07D4  00FF               	movwf	btemp+1
  4403  07D5  3018               	movlw	24
  4404  07D6  3197  279C  3187   	fcall	init_ram
  4405                           
  4406                           ; Clear objects allocated to BIGRAM
  4407  07D9  3000               	movlw	low (0+8960)
  4408  07DA  0084               	movwf	4
  4409  07DB  3023               	movlw	high (0+8960)
  4410  07DC  0085               	movwf	5
  4411  07DD  30F0               	movlw	240
  4412  07DE  00FE               	movwf	btemp
  4413  07DF  3000               	movlw	0
  4414  07E0  00FF               	movwf	btemp+1
  4415  07E1  3197  2790  3187   	fcall	clear_ram0
  4416                           
  4417                           ; Clear objects allocated to BANK0
  4418  07E4  01EC               	clrf	__pbssBANK0& (0+127)
  4419  07E5  01ED               	clrf	(__pbssBANK0+1)& (0+127)
  4420  07E6  01EE               	clrf	(__pbssBANK0+2)& (0+127)
  4421  07E7  01EF               	clrf	(__pbssBANK0+3)& (0+127)
  4422                           
  4423                           ; Clear objects allocated to BANK1
  4424  07E8  30A0               	movlw	low __pbssBANK1
  4425  07E9  0084               	movwf	4
  4426  07EA  3000               	movlw	high __pbssBANK1
  4427  07EB  0085               	movwf	5
  4428  07EC  301D               	movlw	29
  4429  07ED  00FE               	movwf	btemp
  4430  07EE  3000               	movlw	0
  4431  07EF  00FF               	movwf	btemp+1
  4432  07F0  3197  2790  3187   	fcall	clear_ram0
  4433                           
  4434                           ; Clear objects allocated to BANK2
  4435  07F3  3038               	movlw	low __pbssBANK2
  4436  07F4  0084               	movwf	4
  4437  07F5  3001               	movlw	high __pbssBANK2
  4438  07F6  0085               	movwf	5
  4439  07F7  300C               	movlw	12
  4440  07F8  00FE               	movwf	btemp
  4441  07F9  3000               	movlw	0
  4442  07FA  00FF               	movwf	btemp+1
  4443  07FB  3197  2790         	fcall	clear_ram0
  4444  07FD                     end_of_initialization:	
  4445                           ;End of C runtime variable initialization code
  4446                           
  4447  07FD                     __end_of__initialization:	
  4448  07FD  0020               	movlb	0
  4449  07FE  3183  2B41         	ljmp	_main	;jump to C main() function
  4450                           
  4451                           	psect	bssBANK0
  4452  006C                     __pbssBANK0:	
  4453  006C                     _errno:	
  4454  006C                     	ds	2
  4455  006E                     _sampleIndex:	
  4456  006E                     	ds	2
  4457                           
  4458                           	psect	bssBANK1
  4459  00A0                     __pbssBANK1:	
  4460  00A0                     _totals:	
  4461  00A0                     	ds	24
  4462  00B8                     LCD_Write_Int@F13687:	
  4463  00B8                     	ds	5
  4464                           
  4465                           	psect	dataBANK1
  4466  00D7                     __pdataBANK1:	
  4467  00D7                     _channels:	
  4468  00D7                     	ds	12
  4469  00E3                     main@F13661:	
  4470  00E3                     	ds	6
  4471                           
  4472                           	psect	bssBANK2
  4473  0138                     __pbssBANK2:	
  4474  0138                     main@F13657:	
  4475  0138                     	ds	12
  4476                           
  4477                           	psect	dataBANK2
  4478  0120                     __pdataBANK2:	
  4479  0120                     ___cgram:	
  4480  0120                     	ds	24
  4481                           
  4482                           	psect	inittext
  4483  179C                     init_ram:	
  4484  179C  00FE               	movwf	126
  4485  179D                     initloop:	
  4486  179D  0012               	moviw fsr0++
  4487  179E  001E               	movwi fsr1++
  4488  179F  3001               	movlw	1
  4489  17A0  02FE               	subwf	126,f
  4490  17A1  3000               	movlw	0
  4491  17A2  3BFF               	subwfb	127,f
  4492  17A3  087F               	movf	127,w
  4493  17A4  047E               	iorwf	126,w
  4494  17A5  1903               	btfsc	3,2
  4495  17A6  3400               	retlw	0
  4496  17A7  2F9D               	goto	initloop
  4497                           
  4498                           	psect	clrtext
  4499  1790                     clear_ram0:	
  4500                           ;	Called with FSR0 containing the base address, and
  4501                           ;	btemp/btemp+1 has the size to clear
  4502                           
  4503  1790  0064               	clrwdt	;clear the watchdog before getting into this loop
  4504  1791                     clrloop0:	
  4505  1791  0180               	clrf	0	;clear RAM location pointed to by FSR
  4506  1792  3101               	addfsr 0,1
  4507  1793  3001               	movlw	1
  4508  1794  02FE               	subwf	126,f
  4509  1795  3000               	movlw	0
  4510  1796  3BFF               	subwfb	127,f
  4511  1797  087F               	movf	127,w
  4512  1798  047E               	iorwf	126,w
  4513  1799  1903               	btfsc	3,2
  4514  179A  3400               	retlw	0	;all done for this memory range, return
  4515  179B  2F91               	goto	clrloop0	;have we reached the end yet?
  4516                           
  4517                           	psect	cstackBANK1
  4518  00BD                     __pcstackBANK1:	
  4519  00BD                     main@displayTemp:	
  4520                           
  4521                           ; 3 bytes @ 0x0
  4522  00BD                     	ds	3
  4523  00C0                     main@analogs:	
  4524                           
  4525                           ; 12 bytes @ 0x3
  4526  00C0                     	ds	12
  4527  00CC                     main@displayTemp2:	
  4528                           
  4529                           ; 3 bytes @ 0xF
  4530  00CC                     	ds	3
  4531  00CF                     main@x:	
  4532                           
  4533                           ; 6 bytes @ 0x12
  4534  00CF                     	ds	6
  4535  00D5                     main@dutyCycle:	
  4536                           
  4537                           ; 2 bytes @ 0x18
  4538  00D5                     	ds	2
  4539                           
  4540                           	psect	cstackCOMMON
  4541  0070                     __pcstackCOMMON:	
  4542  0070                     ?___ftge:	
  4543  0070                     ?_LCD_Cmd:	
  4544                           ; 1 bit 
  4545                           
  4546  0070                     ?_LCD_Write_Char:	
  4547                           ; 1 bytes @ 0x0
  4548                           
  4549  0070                     ?_OSCILLATOR_Initialize:	
  4550                           ; 1 bytes @ 0x0
  4551                           
  4552  0070                     ??_OSCILLATOR_Initialize:	
  4553                           ; 1 bytes @ 0x0
  4554                           
  4555  0070                     ?_PWM6_Initialize:	
  4556                           ; 1 bytes @ 0x0
  4557                           
  4558  0070                     ??_PWM6_Initialize:	
  4559                           ; 1 bytes @ 0x0
  4560                           
  4561  0070                     ?_TMR2_Initialize:	
  4562                           ; 1 bytes @ 0x0
  4563                           
  4564  0070                     ??_TMR2_Initialize:	
  4565                           ; 1 bytes @ 0x0
  4566                           
  4567  0070                     ?_ADCC_Initialize:	
  4568                           ; 1 bytes @ 0x0
  4569                           
  4570  0070                     ??_ADCC_Initialize:	
  4571                           ; 1 bytes @ 0x0
  4572                           
  4573  0070                     ?_InitCustomChars:	
  4574                           ; 1 bytes @ 0x0
  4575                           
  4576  0070                     ?_LCD_Port:	
  4577                           ; 1 bytes @ 0x0
  4578                           
  4579  0070                     ??_LCD_Port:	
  4580                           ; 1 bytes @ 0x0
  4581                           
  4582  0070                     ?_LCD_Clear:	
  4583                           ; 1 bytes @ 0x0
  4584                           
  4585  0070                     ?_LCD_Init:	
  4586                           ; 1 bytes @ 0x0
  4587                           
  4588  0070                     ?_PIN_MANAGER_Initialize:	
  4589                           ; 1 bytes @ 0x0
  4590                           
  4591  0070                     ??_PIN_MANAGER_Initialize:	
  4592                           ; 1 bytes @ 0x0
  4593                           
  4594  0070                     ?_SYSTEM_Initialize:	
  4595                           ; 1 bytes @ 0x0
  4596                           
  4597  0070                     ?_PWM6_LoadDutyValue:	
  4598                           ; 1 bytes @ 0x0
  4599                           
  4600  0070                     ?_main:	
  4601                           ; 1 bytes @ 0x0
  4602                           
  4603  0070                     ?_ADCRead:	
  4604                           ; 1 bytes @ 0x0
  4605                           
  4606  0070                     ?___wmul:	
  4607                           ; 2 bytes @ 0x0
  4608                           
  4609  0070                     ?___awdiv:	
  4610                           ; 2 bytes @ 0x0
  4611                           
  4612  0070                     ?___awmod:	
  4613                           ; 2 bytes @ 0x0
  4614                           
  4615  0070                     ?___lwdiv:	
  4616                           ; 2 bytes @ 0x0
  4617                           
  4618  0070                     ?___ftpack:	
  4619                           ; 2 bytes @ 0x0
  4620                           
  4621  0070                     ?_frexp:	
  4622                           ; 3 bytes @ 0x0
  4623                           
  4624  0070                     ?___aldiv:	
  4625                           ; 3 bytes @ 0x0
  4626                           
  4627  0070                     ?___fttol:	
  4628                           ; 4 bytes @ 0x0
  4629                           
  4630  0070                     LCD_Port@a:	
  4631                           ; 4 bytes @ 0x0
  4632                           
  4633  0070                     PIN_MANAGER_Initialize@state:	
  4634                           ; 1 bytes @ 0x0
  4635                           
  4636  0070                     PWM6_LoadDutyValue@dutyCycle:	
  4637                           ; 1 bytes @ 0x0
  4638                           
  4639  0070                     ___wmul@multiplier:	
  4640                           ; 2 bytes @ 0x0
  4641                           
  4642  0070                     ___awdiv@divisor:	
  4643                           ; 2 bytes @ 0x0
  4644                           
  4645  0070                     ___awmod@divisor:	
  4646                           ; 2 bytes @ 0x0
  4647                           
  4648  0070                     ___lwdiv@divisor:	
  4649                           ; 2 bytes @ 0x0
  4650                           
  4651  0070                     ___ftpack@arg:	
  4652                           ; 2 bytes @ 0x0
  4653                           
  4654  0070                     ___ftge@ff1:	
  4655                           ; 3 bytes @ 0x0
  4656                           
  4657  0070                     ___fttol@f1:	
  4658                           ; 3 bytes @ 0x0
  4659                           
  4660  0070                     frexp@value:	
  4661                           ; 3 bytes @ 0x0
  4662                           
  4663  0070                     ___aldiv@divisor:	
  4664                           ; 3 bytes @ 0x0
  4665                           
  4666                           
  4667                           ; 4 bytes @ 0x0
  4668  0070                     	ds	1
  4669  0071                     ??_LCD_Cmd:	
  4670  0071                     ??_LCD_Write_Char:	
  4671                           ; 1 bytes @ 0x1
  4672                           
  4673                           
  4674                           ; 1 bytes @ 0x1
  4675  0071                     	ds	1
  4676  0072                     ??_PWM6_LoadDutyValue:	
  4677  0072                     LCD_Write_Char@temp:	
  4678                           ; 1 bytes @ 0x2
  4679                           
  4680  0072                     ___wmul@multiplicand:	
  4681                           ; 1 bytes @ 0x2
  4682                           
  4683  0072                     ___awdiv@dividend:	
  4684                           ; 2 bytes @ 0x2
  4685                           
  4686  0072                     ___awmod@dividend:	
  4687                           ; 2 bytes @ 0x2
  4688                           
  4689  0072                     ___lwdiv@dividend:	
  4690                           ; 2 bytes @ 0x2
  4691                           
  4692                           
  4693                           ; 2 bytes @ 0x2
  4694  0072                     	ds	1
  4695  0073                     ??_ADCRead:	
  4696  0073                     ADCRead@channel:	
  4697                           ; 1 bytes @ 0x3
  4698                           
  4699  0073                     LCD_Cmd@a:	
  4700                           ; 1 bytes @ 0x3
  4701                           
  4702  0073                     LCD_Write_Char@y:	
  4703                           ; 1 bytes @ 0x3
  4704                           
  4705  0073                     ___ftpack@exp:	
  4706                           ; 1 bytes @ 0x3
  4707                           
  4708  0073                     frexp@eptr:	
  4709                           ; 1 bytes @ 0x3
  4710                           
  4711  0073                     ___ftge@ff2:	
  4712                           ; 1 bytes @ 0x3
  4713                           
  4714                           
  4715                           ; 3 bytes @ 0x3
  4716  0073                     	ds	1
  4717  0074                     ??_frexp:	
  4718  0074                     ??_LCD_Clear:	
  4719                           ; 1 bytes @ 0x4
  4720                           
  4721  0074                     ?_LCD_Set_Cursor:	
  4722                           ; 1 bytes @ 0x4
  4723                           
  4724  0074                     ??_LCD_Init:	
  4725                           ; 1 bytes @ 0x4
  4726                           
  4727  0074                     ??___wmul:	
  4728                           ; 1 bytes @ 0x4
  4729                           
  4730  0074                     ??___awdiv:	
  4731                           ; 1 bytes @ 0x4
  4732                           
  4733  0074                     ??___awmod:	
  4734                           ; 1 bytes @ 0x4
  4735                           
  4736  0074                     ??___fttol:	
  4737                           ; 1 bytes @ 0x4
  4738                           
  4739  0074                     ??___lwdiv:	
  4740                           ; 1 bytes @ 0x4
  4741                           
  4742  0074                     LCD_Set_Cursor@y:	
  4743                           ; 1 bytes @ 0x4
  4744                           
  4745  0074                     LCD_Write_Char@a:	
  4746                           ; 1 bytes @ 0x4
  4747                           
  4748  0074                     ___ftpack@sign:	
  4749                           ; 1 bytes @ 0x4
  4750                           
  4751  0074                     ___wmul@product:	
  4752                           ; 1 bytes @ 0x4
  4753                           
  4754  0074                     ___aldiv@dividend:	
  4755                           ; 2 bytes @ 0x4
  4756                           
  4757                           
  4758                           ; 4 bytes @ 0x4
  4759  0074                     	ds	1
  4760  0075                     ??___ftpack:	
  4761  0075                     ??_InitCustomChars:	
  4762                           ; 1 bytes @ 0x5
  4763                           
  4764  0075                     ??_LCD_Set_Cursor:	
  4765                           ; 1 bytes @ 0x5
  4766                           
  4767  0075                     ?_LCD_Write_String:	
  4768                           ; 1 bytes @ 0x5
  4769                           
  4770  0075                     ___awdiv@counter:	
  4771                           ; 1 bytes @ 0x5
  4772                           
  4773  0075                     ___awmod@counter:	
  4774                           ; 1 bytes @ 0x5
  4775                           
  4776  0075                     LCD_Write_String@a:	
  4777                           ; 1 bytes @ 0x5
  4778                           
  4779  0075                     ___lwdiv@quotient:	
  4780                           ; 2 bytes @ 0x5
  4781                           
  4782                           
  4783                           ; 2 bytes @ 0x5
  4784  0075                     	ds	1
  4785  0076                     ??___ftge:	
  4786  0076                     InitCustomChars@i:	
  4787                           ; 1 bytes @ 0x6
  4788                           
  4789  0076                     ___awdiv@sign:	
  4790                           ; 1 bytes @ 0x6
  4791                           
  4792  0076                     ___awmod@sign:	
  4793                           ; 1 bytes @ 0x6
  4794                           
  4795                           
  4796                           ; 1 bytes @ 0x6
  4797  0076                     	ds	1
  4798  0077                     ??_LCD_Write_String:	
  4799  0077                     LCD_Set_Cursor@x:	
  4800                           ; 1 bytes @ 0x7
  4801                           
  4802  0077                     LCD_Init@style:	
  4803                           ; 1 bytes @ 0x7
  4804                           
  4805  0077                     ___lwdiv@counter:	
  4806                           ; 1 bytes @ 0x7
  4807                           
  4808  0077                     ___awdiv@quotient:	
  4809                           ; 1 bytes @ 0x7
  4810                           
  4811                           
  4812                           ; 2 bytes @ 0x7
  4813  0077                     	ds	1
  4814  0078                     ??_SYSTEM_Initialize:	
  4815  0078                     ??___aldiv:	
  4816                           ; 1 bytes @ 0x8
  4817                           
  4818  0078                     ?___awtoft:	
  4819                           ; 1 bytes @ 0x8
  4820                           
  4821  0078                     LCD_Set_Cursor@z:	
  4822                           ; 3 bytes @ 0x8
  4823                           
  4824  0078                     ___fttol@sign1:	
  4825                           ; 1 bytes @ 0x8
  4826                           
  4827  0078                     LCD_Write_String@i:	
  4828                           ; 1 bytes @ 0x8
  4829                           
  4830  0078                     ___awtoft@c:	
  4831                           ; 2 bytes @ 0x8
  4832                           
  4833                           
  4834                           ; 2 bytes @ 0x8
  4835  0078                     	ds	1
  4836  0079                     LCD_Set_Cursor@w:	
  4837  0079                     readAnalog@analog_channel:	
  4838                           ; 1 bytes @ 0x9
  4839                           
  4840  0079                     ___fttol@lval:	
  4841                           ; 2 bytes @ 0x9
  4842                           
  4843                           
  4844                           ; 4 bytes @ 0x9
  4845  0079                     	ds	1
  4846  007A                     LCD_Set_Cursor@temp:	
  4847                           
  4848                           ; 1 bytes @ 0xA
  4849  007A                     	ds	1
  4850  007B                     ??___awtoft:	
  4851  007B                     readAnalog@value:	
  4852                           ; 1 bytes @ 0xB
  4853                           
  4854                           
  4855                           ; 2 bytes @ 0xB
  4856  007B                     	ds	2
  4857  007D                     ___awtoft@sign:	
  4858  007D                     ___fttol@exp1:	
  4859                           ; 1 bytes @ 0xD
  4860                           
  4861                           
  4862                           ; 1 bytes @ 0xD
  4863  007D                     	ds	1
  4864  007E                     ??_eval_poly:	
  4865  007E                     ??_tempCalc:	
  4866                           ; 1 bytes @ 0xE
  4867                           
  4868  007E                     ??___ftsub:	
  4869                           ; 1 bytes @ 0xE
  4870                           
  4871                           
  4872                           	psect	cstackBANK0
  4873  0020                     __pcstackBANK0:	
  4874                           ; 1 bytes @ 0xE
  4875                           
  4876  0020                     ?_LCD_Write_Int:	
  4877  0020                     ?___ftmul:	
  4878                           ; 1 bytes @ 0x0
  4879                           
  4880  0020                     ___aldiv@counter:	
  4881                           ; 3 bytes @ 0x0
  4882                           
  4883  0020                     LCD_Write_Int@value:	
  4884                           ; 1 bytes @ 0x0
  4885                           
  4886  0020                     ___ftmul@f1:	
  4887                           ; 2 bytes @ 0x0
  4888                           
  4889                           
  4890                           ; 3 bytes @ 0x0
  4891  0020                     	ds	1
  4892  0021                     ___aldiv@sign:	
  4893                           
  4894                           ; 1 bytes @ 0x1
  4895  0021                     	ds	1
  4896  0022                     LCD_Write_Int@fieldLength:	
  4897  0022                     ___aldiv@quotient:	
  4898                           ; 1 bytes @ 0x2
  4899                           
  4900                           
  4901                           ; 4 bytes @ 0x2
  4902  0022                     	ds	1
  4903  0023                     LCD_Write_Int@numPlaces:	
  4904  0023                     ___ftmul@f2:	
  4905                           ; 1 bytes @ 0x3
  4906                           
  4907                           
  4908                           ; 3 bytes @ 0x3
  4909  0023                     	ds	1
  4910  0024                     LCD_Write_Int@sign:	
  4911                           
  4912                           ; 1 bytes @ 0x4
  4913  0024                     	ds	1
  4914  0025                     ??_LCD_Write_Int:	
  4915                           
  4916                           ; 1 bytes @ 0x5
  4917  0025                     	ds	1
  4918  0026                     ??___ftmul:	
  4919  0026                     ?_readAnalog:	
  4920                           ; 1 bytes @ 0x6
  4921                           
  4922  0026                     readAnalog@channel:	
  4923                           ; 2 bytes @ 0x6
  4924                           
  4925                           
  4926                           ; 2 bytes @ 0x6
  4927  0026                     	ds	2
  4928  0028                     ??_readAnalog:	
  4929                           
  4930                           ; 1 bytes @ 0x8
  4931  0028                     	ds	2
  4932  002A                     ___ftmul@exp:	
  4933  002A                     LCD_Write_Int@str:	
  4934                           ; 1 bytes @ 0xA
  4935                           
  4936                           
  4937                           ; 5 bytes @ 0xA
  4938  002A                     	ds	1
  4939  002B                     ___ftmul@f3_as_product:	
  4940                           
  4941                           ; 3 bytes @ 0xB
  4942  002B                     	ds	3
  4943  002E                     ___ftmul@cntr:	
  4944                           
  4945                           ; 1 bytes @ 0xE
  4946  002E                     	ds	1
  4947  002F                     ___ftmul@sign:	
  4948  002F                     LCD_Write_Int@j:	
  4949                           ; 1 bytes @ 0xF
  4950                           
  4951                           
  4952                           ; 2 bytes @ 0xF
  4953  002F                     	ds	1
  4954  0030                     ?___ftdiv:	
  4955  0030                     ___ftdiv@f2:	
  4956                           ; 3 bytes @ 0x10
  4957                           
  4958                           
  4959                           ; 3 bytes @ 0x10
  4960  0030                     	ds	1
  4961  0031                     LCD_Write_Int@i:	
  4962                           
  4963                           ; 2 bytes @ 0x11
  4964  0031                     	ds	2
  4965  0033                     ___ftdiv@f1:	
  4966                           
  4967                           ; 3 bytes @ 0x13
  4968  0033                     	ds	3
  4969  0036                     ??___ftdiv:	
  4970                           
  4971                           ; 1 bytes @ 0x16
  4972  0036                     	ds	4
  4973  003A                     ___ftdiv@cntr:	
  4974                           
  4975                           ; 1 bytes @ 0x1A
  4976  003A                     	ds	1
  4977  003B                     ___ftdiv@f3:	
  4978                           
  4979                           ; 3 bytes @ 0x1B
  4980  003B                     	ds	3
  4981  003E                     ___ftdiv@exp:	
  4982                           
  4983                           ; 1 bytes @ 0x1E
  4984  003E                     	ds	1
  4985  003F                     ___ftdiv@sign:	
  4986                           
  4987                           ; 1 bytes @ 0x1F
  4988  003F                     	ds	1
  4989  0040                     ?___ftadd:	
  4990  0040                     ___ftadd@f1:	
  4991                           ; 3 bytes @ 0x20
  4992                           
  4993                           
  4994                           ; 3 bytes @ 0x20
  4995  0040                     	ds	3
  4996  0043                     ___ftadd@f2:	
  4997                           
  4998                           ; 3 bytes @ 0x23
  4999  0043                     	ds	3
  5000  0046                     ??___ftadd:	
  5001                           
  5002                           ; 1 bytes @ 0x26
  5003  0046                     	ds	4
  5004  004A                     ___ftadd@sign:	
  5005                           
  5006                           ; 1 bytes @ 0x2A
  5007  004A                     	ds	1
  5008  004B                     ___ftadd@exp2:	
  5009                           
  5010                           ; 1 bytes @ 0x2B
  5011  004B                     	ds	1
  5012  004C                     ___ftadd@exp1:	
  5013                           
  5014                           ; 1 bytes @ 0x2C
  5015  004C                     	ds	1
  5016  004D                     ?_eval_poly:	
  5017  004D                     ?___ftsub:	
  5018                           ; 3 bytes @ 0x2D
  5019                           
  5020  004D                     ___ftsub@f2:	
  5021                           ; 3 bytes @ 0x2D
  5022                           
  5023  004D                     eval_poly@x:	
  5024                           ; 3 bytes @ 0x2D
  5025                           
  5026                           
  5027                           ; 3 bytes @ 0x2D
  5028  004D                     	ds	3
  5029  0050                     eval_poly@d:	
  5030  0050                     ___ftsub@f1:	
  5031                           ; 2 bytes @ 0x30
  5032                           
  5033                           
  5034                           ; 3 bytes @ 0x30
  5035  0050                     	ds	2
  5036  0052                     eval_poly@n:	
  5037                           
  5038                           ; 2 bytes @ 0x32
  5039  0052                     	ds	2
  5040  0054                     eval_poly@res:	
  5041                           
  5042                           ; 3 bytes @ 0x34
  5043  0054                     	ds	3
  5044  0057                     ?_log:	
  5045  0057                     log@x:	
  5046                           ; 3 bytes @ 0x37
  5047                           
  5048                           
  5049                           ; 3 bytes @ 0x37
  5050  0057                     	ds	3
  5051  005A                     ??_log:	
  5052                           
  5053                           ; 1 bytes @ 0x3A
  5054  005A                     	ds	1
  5055  005B                     log@exponent:	
  5056                           
  5057                           ; 2 bytes @ 0x3B
  5058  005B                     	ds	2
  5059  005D                     ?_tempCalc:	
  5060  005D                     tempCalc@analogValue:	
  5061                           ; 3 bytes @ 0x3D
  5062                           
  5063                           
  5064                           ; 2 bytes @ 0x3D
  5065  005D                     	ds	3
  5066  0060                     tempCalc@R:	
  5067                           
  5068                           ; 3 bytes @ 0x40
  5069  0060                     	ds	3
  5070  0063                     _tempCalc$960:	
  5071                           
  5072                           ; 3 bytes @ 0x43
  5073  0063                     	ds	3
  5074  0066                     tempCalc@steinhart:	
  5075                           
  5076                           ; 3 bytes @ 0x46
  5077  0066                     	ds	3
  5078  0069                     ??_main:	
  5079                           
  5080                           ; 1 bytes @ 0x49
  5081  0069                     	ds	3
  5082                           
  5083                           	psect	maintext
  5084  0341                     __pmaintext:	
  5085 ;;
  5086 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  5087 ;;
  5088 ;; *************** function _main *****************
  5089 ;; Defined at:
  5090 ;;		line 13 in file "main.c"
  5091 ;; Parameters:    Size  Location     Type
  5092 ;;		None
  5093 ;; Auto vars:     Size  Location     Type
  5094 ;;  analogs        12    3[BANK1 ] unsigned int [6]
  5095 ;;  x               6   18[BANK1 ] unsigned char [6]
  5096 ;;  displayTemp2    3   15[BANK1 ] float 
  5097 ;;  displayTemp     3    0[BANK1 ] float 
  5098 ;;  dutyCycle       2   24[BANK1 ] unsigned int 
  5099 ;; Return value:  Size  Location     Type
  5100 ;;                  1    wreg      void 
  5101 ;; Registers used:
  5102 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5103 ;; Tracked objects:
  5104 ;;		On entry : B1F/0
  5105 ;;		On exit  : 0/0
  5106 ;;		Unchanged: 0/0
  5107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5109 ;;      Locals:         0       0      26       0       0       0       0       0       0       0       0       0       
      +0       0
  5110 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5111 ;;      Totals:         0       3      26       0       0       0       0       0       0       0       0       0       
      +0       0
  5112 ;;Total ram usage:       29 bytes
  5113 ;; Hardware stack levels required when called:    5
  5114 ;; This function calls:
  5115 ;;		_ADCRead
  5116 ;;		_LCD_Clear
  5117 ;;		_LCD_Set_Cursor
  5118 ;;		_LCD_Write_Char
  5119 ;;		_LCD_Write_Int
  5120 ;;		_LCD_Write_String
  5121 ;;		_PWM6_LoadDutyValue
  5122 ;;		_SYSTEM_Initialize
  5123 ;;		___ftadd
  5124 ;;		___ftdiv
  5125 ;;		___ftmul
  5126 ;;		___fttol
  5127 ;;		___lwdiv
  5128 ;;		_readAnalog
  5129 ;;		_tempCalc
  5130 ;; This function is called by:
  5131 ;;		Startup code after reset
  5132 ;; This function uses a non-reentrant model
  5133 ;;
  5134                           
  5135                           
  5136                           ;psect for function _main
  5137  0341                     _main:	
  5138                           
  5139                           ;main.c: 15: SYSTEM_Initialize();
  5140                           
  5141                           ;incstack = 0
  5142                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5143  0341  318A  2200  3183   	fcall	_SYSTEM_Initialize
  5144                           
  5145                           ;main.c: 17: uint16_t analogs[6] = {0};
  5146  0344  3038               	movlw	low main@F13657
  5147  0345  0086               	movwf	6
  5148  0346  3001               	movlw	high main@F13657
  5149  0347  0087               	movwf	7
  5150  0348  30C0               	movlw	low main@analogs
  5151  0349  0084               	movwf	4
  5152  034A  3000               	movlw	high main@analogs
  5153  034B  0085               	movwf	5
  5154  034C  300C               	movlw	12
  5155  034D  0020               	movlb	0	; select bank0
  5156  034E  00E9               	movwf	??_main
  5157  034F                     u3170:	
  5158  034F  0016               	moviw fsr1++
  5159  0350  001A               	movwi fsr0++
  5160  0351  0BE9               	decfsz	??_main,f
  5161  0352  2B4F               	goto	u3170
  5162                           
  5163                           ;main.c: 19: float displayTemp, displayTemp2;
  5164                           ;main.c: 21: unsigned char x[6] = {0,64,2,0,0,0};
  5165  0353  30E3               	movlw	low main@F13661
  5166  0354  0086               	movwf	6
  5167  0355  3000               	movlw	high main@F13661
  5168  0356  0087               	movwf	7
  5169  0357  30CF               	movlw	low main@x
  5170  0358  0084               	movwf	4
  5171  0359  3000               	movlw	high main@x
  5172  035A  0085               	movwf	5
  5173  035B  3006               	movlw	6
  5174  035C  00E9               	movwf	??_main
  5175  035D                     u3180:	
  5176  035D  0016               	moviw fsr1++
  5177  035E  001A               	movwi fsr0++
  5178  035F  0BE9               	decfsz	??_main,f
  5179  0360  2B5D               	goto	u3180
  5180                           
  5181                           ;main.c: 23: uint16_t dutyCycle = 1023;
  5182  0361  30FF               	movlw	255
  5183  0362  0021               	movlb	1	; select bank1
  5184  0363  00D5               	movwf	main@dutyCycle^(0+128)
  5185  0364  3003               	movlw	3
  5186  0365  00D6               	movwf	(main@dutyCycle^(0+128)+1)
  5187                           
  5188                           ;main.c: 25: PWM6_LoadDutyValue(dutyCycle);
  5189  0366  0856               	movf	(main@dutyCycle+1)^(0+128),w
  5190  0367  00F1               	movwf	PWM6_LoadDutyValue@dutyCycle+1
  5191  0368  0855               	movf	main@dutyCycle^(0+128),w
  5192  0369  00F0               	movwf	PWM6_LoadDutyValue@dutyCycle
  5193  036A  3197  27EA  3183   	fcall	_PWM6_LoadDutyValue
  5194                           
  5195                           ;main.c: 27: _delay((unsigned long)((300)*(32000000/4000.0)));
  5196  036D  300D               	movlw	13
  5197  036E  0020               	movlb	0	; select bank0
  5198  036F  00EB               	movwf	??_main+2
  5199  0370  302D               	movlw	45
  5200  0371  00EA               	movwf	??_main+1
  5201  0372  30E2               	movlw	226
  5202  0373  00E9               	movwf	??_main
  5203  0374                     u3417:	
  5204  0374  0BE9               	decfsz	??_main,f
  5205  0375  2B74               	goto	u3417
  5206  0376  0BEA               	decfsz	??_main+1,f
  5207  0377  2B74               	goto	u3417
  5208  0378  0BEB               	decfsz	??_main+2,f
  5209  0379  2B74               	goto	u3417
  5210  037A  3200               	nop2
  5211                           
  5212                           ;main.c: 29: LCD_Clear();
  5213  037B  3188  2000  3183   	fcall	_LCD_Clear
  5214                           
  5215                           ;main.c: 31: { LCD_Set_Cursor(2,1); LCD_Write_String("A");};
  5216  037E  01F4               	clrf	LCD_Set_Cursor@y
  5217  037F  0AF4               	incf	LCD_Set_Cursor@y,f
  5218  0380  3002               	movlw	2
  5219  0381  3189  21C1  3183   	fcall	_LCD_Set_Cursor
  5220  0384  303A               	movlw	low (STR_1| (0+32768))
  5221  0385  00F5               	movwf	LCD_Write_String@a
  5222  0386  3090               	movlw	high (STR_1| (0+32768))
  5223  0387  00F6               	movwf	LCD_Write_String@a+1
  5224  0388  3188  2038  3183   	fcall	_LCD_Write_String
  5225                           
  5226                           ;main.c: 32: _delay((unsigned long)((200)*(32000000/4000.0)));
  5227  038B  3009               	movlw	9
  5228  038C  0020               	movlb	0	; select bank0
  5229  038D  00EB               	movwf	??_main+2
  5230  038E  301E               	movlw	30
  5231  038F  00EA               	movwf	??_main+1
  5232  0390  30EB               	movlw	235
  5233  0391  00E9               	movwf	??_main
  5234  0392                     u3427:	
  5235  0392  0BE9               	decfsz	??_main,f
  5236  0393  2B92               	goto	u3427
  5237  0394  0BEA               	decfsz	??_main+1,f
  5238  0395  2B92               	goto	u3427
  5239  0396  0BEB               	decfsz	??_main+2,f
  5240  0397  2B92               	goto	u3427
  5241  0398  0000               	nop
  5242                           
  5243                           ;main.c: 33: { LCD_Set_Cursor(3,1); LCD_Write_String("L");};
  5244  0399  01F4               	clrf	LCD_Set_Cursor@y
  5245  039A  0AF4               	incf	LCD_Set_Cursor@y,f
  5246  039B  3003               	movlw	3
  5247  039C  3189  21C1  3183   	fcall	_LCD_Set_Cursor
  5248  039F  3042               	movlw	low (STR_2| (0+32768))
  5249  03A0  00F5               	movwf	LCD_Write_String@a
  5250  03A1  3090               	movlw	high (STR_2| (0+32768))
  5251  03A2  00F6               	movwf	LCD_Write_String@a+1
  5252  03A3  3188  2038  3183   	fcall	_LCD_Write_String
  5253                           
  5254                           ;main.c: 34: _delay((unsigned long)((200)*(32000000/4000.0)));
  5255  03A6  3009               	movlw	9
  5256  03A7  0020               	movlb	0	; select bank0
  5257  03A8  00EB               	movwf	??_main+2
  5258  03A9  301E               	movlw	30
  5259  03AA  00EA               	movwf	??_main+1
  5260  03AB  30EB               	movlw	235
  5261  03AC  00E9               	movwf	??_main
  5262  03AD                     u3437:	
  5263  03AD  0BE9               	decfsz	??_main,f
  5264  03AE  2BAD               	goto	u3437
  5265  03AF  0BEA               	decfsz	??_main+1,f
  5266  03B0  2BAD               	goto	u3437
  5267  03B1  0BEB               	decfsz	??_main+2,f
  5268  03B2  2BAD               	goto	u3437
  5269  03B3  0000               	nop
  5270                           
  5271                           ;main.c: 35: { LCD_Set_Cursor(4,1); LCD_Write_String("O");};
  5272  03B4  01F4               	clrf	LCD_Set_Cursor@y
  5273  03B5  0AF4               	incf	LCD_Set_Cursor@y,f
  5274  03B6  3004               	movlw	4
  5275  03B7  3189  21C1  3183   	fcall	_LCD_Set_Cursor
  5276  03BA  3044               	movlw	low (STR_3| (0+32768))
  5277  03BB  00F5               	movwf	LCD_Write_String@a
  5278  03BC  3090               	movlw	high (STR_3| (0+32768))
  5279  03BD  00F6               	movwf	LCD_Write_String@a+1
  5280  03BE  3188  2038  3183   	fcall	_LCD_Write_String
  5281                           
  5282                           ;main.c: 36: _delay((unsigned long)((200)*(32000000/4000.0)));
  5283  03C1  3009               	movlw	9
  5284  03C2  0020               	movlb	0	; select bank0
  5285  03C3  00EB               	movwf	??_main+2
  5286  03C4  301E               	movlw	30
  5287  03C5  00EA               	movwf	??_main+1
  5288  03C6  30EB               	movlw	235
  5289  03C7  00E9               	movwf	??_main
  5290  03C8                     u3447:	
  5291  03C8  0BE9               	decfsz	??_main,f
  5292  03C9  2BC8               	goto	u3447
  5293  03CA  0BEA               	decfsz	??_main+1,f
  5294  03CB  2BC8               	goto	u3447
  5295  03CC  0BEB               	decfsz	??_main+2,f
  5296  03CD  2BC8               	goto	u3447
  5297  03CE  0000               	nop
  5298                           
  5299                           ;main.c: 37: { LCD_Set_Cursor(5,1); LCD_Write_String("H");};
  5300  03CF  01F4               	clrf	LCD_Set_Cursor@y
  5301  03D0  0AF4               	incf	LCD_Set_Cursor@y,f
  5302  03D1  3005               	movlw	5
  5303  03D2  3189  21C1  3183   	fcall	_LCD_Set_Cursor
  5304  03D5  303E               	movlw	low (STR_4| (0+32768))
  5305  03D6  00F5               	movwf	LCD_Write_String@a
  5306  03D7  3090               	movlw	high (STR_4| (0+32768))
  5307  03D8  00F6               	movwf	LCD_Write_String@a+1
  5308  03D9  3188  2038  3183   	fcall	_LCD_Write_String
  5309                           
  5310                           ;main.c: 38: _delay((unsigned long)((200)*(32000000/4000.0)));
  5311  03DC  3009               	movlw	9
  5312  03DD  0020               	movlb	0	; select bank0
  5313  03DE  00EB               	movwf	??_main+2
  5314  03DF  301E               	movlw	30
  5315  03E0  00EA               	movwf	??_main+1
  5316  03E1  30EB               	movlw	235
  5317  03E2  00E9               	movwf	??_main
  5318  03E3                     u3457:	
  5319  03E3  0BE9               	decfsz	??_main,f
  5320  03E4  2BE3               	goto	u3457
  5321  03E5  0BEA               	decfsz	??_main+1,f
  5322  03E6  2BE3               	goto	u3457
  5323  03E7  0BEB               	decfsz	??_main+2,f
  5324  03E8  2BE3               	goto	u3457
  5325  03E9  0000               	nop
  5326                           
  5327                           ;main.c: 39: { LCD_Set_Cursor(6,1); LCD_Write_String("A");};
  5328  03EA  01F4               	clrf	LCD_Set_Cursor@y
  5329  03EB  0AF4               	incf	LCD_Set_Cursor@y,f
  5330  03EC  3006               	movlw	6
  5331  03ED  3189  21C1  3183   	fcall	_LCD_Set_Cursor
  5332  03F0  303A               	movlw	low (STR_1| (0+32768))
  5333  03F1  00F5               	movwf	LCD_Write_String@a
  5334  03F2  3090               	movlw	high (STR_1| (0+32768))
  5335  03F3  00F6               	movwf	LCD_Write_String@a+1
  5336  03F4  3188  2038  3183   	fcall	_LCD_Write_String
  5337                           
  5338                           ;main.c: 40: _delay((unsigned long)((200)*(32000000/4000.0)));
  5339  03F7  3009               	movlw	9
  5340  03F8  0020               	movlb	0	; select bank0
  5341  03F9  00EB               	movwf	??_main+2
  5342  03FA  301E               	movlw	30
  5343  03FB  00EA               	movwf	??_main+1
  5344  03FC  30EB               	movlw	235
  5345  03FD  00E9               	movwf	??_main
  5346  03FE                     u3467:	
  5347  03FE  0BE9               	decfsz	??_main,f
  5348  03FF  2BFE               	goto	u3467
  5349  0400  0BEA               	decfsz	??_main+1,f
  5350  0401  2BFE               	goto	u3467
  5351  0402  0BEB               	decfsz	??_main+2,f
  5352  0403  2BFE               	goto	u3467
  5353  0404  0000               	nop
  5354                           
  5355                           ;main.c: 41: { LCD_Set_Cursor(7,1); LCD_Write_String(" ");};
  5356  0405  01F4               	clrf	LCD_Set_Cursor@y
  5357  0406  0AF4               	incf	LCD_Set_Cursor@y,f
  5358  0407  3007               	movlw	7
  5359  0408  3189  21C1  3183   	fcall	_LCD_Set_Cursor
  5360  040B  3036               	movlw	low (STR_6| (0+32768))
  5361  040C  00F5               	movwf	LCD_Write_String@a
  5362  040D  3090               	movlw	high (STR_6| (0+32768))
  5363  040E  00F6               	movwf	LCD_Write_String@a+1
  5364  040F  3188  2038  3183   	fcall	_LCD_Write_String
  5365                           
  5366                           ;main.c: 42: _delay((unsigned long)((200)*(32000000/4000.0)));
  5367  0412  3009               	movlw	9
  5368  0413  0020               	movlb	0	; select bank0
  5369  0414  00EB               	movwf	??_main+2
  5370  0415  301E               	movlw	30
  5371  0416  00EA               	movwf	??_main+1
  5372  0417  30EB               	movlw	235
  5373  0418  00E9               	movwf	??_main
  5374  0419                     u3477:	
  5375  0419  0BE9               	decfsz	??_main,f
  5376  041A  2C19               	goto	u3477
  5377  041B  0BEA               	decfsz	??_main+1,f
  5378  041C  2C19               	goto	u3477
  5379  041D  0BEB               	decfsz	??_main+2,f
  5380  041E  2C19               	goto	u3477
  5381  041F  0000               	nop
  5382                           
  5383                           ;main.c: 43: { LCD_Set_Cursor(8,1); LCD_Write_String("D");};
  5384  0420  01F4               	clrf	LCD_Set_Cursor@y
  5385  0421  0AF4               	incf	LCD_Set_Cursor@y,f
  5386  0422  3008               	movlw	8
  5387  0423  3189  21C1  3183   	fcall	_LCD_Set_Cursor
  5388  0426  303C               	movlw	low (STR_7| (0+32768))
  5389  0427  00F5               	movwf	LCD_Write_String@a
  5390  0428  3090               	movlw	high (STR_7| (0+32768))
  5391  0429  00F6               	movwf	LCD_Write_String@a+1
  5392  042A  3188  2038  3183   	fcall	_LCD_Write_String
  5393                           
  5394                           ;main.c: 44: _delay((unsigned long)((200)*(32000000/4000.0)));
  5395  042D  3009               	movlw	9
  5396  042E  0020               	movlb	0	; select bank0
  5397  042F  00EB               	movwf	??_main+2
  5398  0430  301E               	movlw	30
  5399  0431  00EA               	movwf	??_main+1
  5400  0432  30EB               	movlw	235
  5401  0433  00E9               	movwf	??_main
  5402  0434                     u3487:	
  5403  0434  0BE9               	decfsz	??_main,f
  5404  0435  2C34               	goto	u3487
  5405  0436  0BEA               	decfsz	??_main+1,f
  5406  0437  2C34               	goto	u3487
  5407  0438  0BEB               	decfsz	??_main+2,f
  5408  0439  2C34               	goto	u3487
  5409  043A  0000               	nop
  5410                           
  5411                           ;main.c: 45: { LCD_Set_Cursor(9,1); LCD_Write_String("A");};
  5412  043B  01F4               	clrf	LCD_Set_Cursor@y
  5413  043C  0AF4               	incf	LCD_Set_Cursor@y,f
  5414  043D  3009               	movlw	9
  5415  043E  3189  21C1  3183   	fcall	_LCD_Set_Cursor
  5416  0441  303A               	movlw	low (STR_1| (0+32768))
  5417  0442  00F5               	movwf	LCD_Write_String@a
  5418  0443  3090               	movlw	high (STR_1| (0+32768))
  5419  0444  00F6               	movwf	LCD_Write_String@a+1
  5420  0445  3188  2038  3183   	fcall	_LCD_Write_String
  5421                           
  5422                           ;main.c: 46: _delay((unsigned long)((200)*(32000000/4000.0)));
  5423  0448  3009               	movlw	9
  5424  0449  0020               	movlb	0	; select bank0
  5425  044A  00EB               	movwf	??_main+2
  5426  044B  301E               	movlw	30
  5427  044C  00EA               	movwf	??_main+1
  5428  044D  30EB               	movlw	235
  5429  044E  00E9               	movwf	??_main
  5430  044F                     u3497:	
  5431  044F  0BE9               	decfsz	??_main,f
  5432  0450  2C4F               	goto	u3497
  5433  0451  0BEA               	decfsz	??_main+1,f
  5434  0452  2C4F               	goto	u3497
  5435  0453  0BEB               	decfsz	??_main+2,f
  5436  0454  2C4F               	goto	u3497
  5437  0455  0000               	nop
  5438                           
  5439                           ;main.c: 47: { LCD_Set_Cursor(10,1); LCD_Write_String("V");};
  5440  0456  01F4               	clrf	LCD_Set_Cursor@y
  5441  0457  0AF4               	incf	LCD_Set_Cursor@y,f
  5442  0458  300A               	movlw	10
  5443  0459  3189  21C1  3183   	fcall	_LCD_Set_Cursor
  5444  045C  3046               	movlw	low (STR_9| (0+32768))
  5445  045D  00F5               	movwf	LCD_Write_String@a
  5446  045E  3090               	movlw	high (STR_9| (0+32768))
  5447  045F  00F6               	movwf	LCD_Write_String@a+1
  5448  0460  3188  2038  3183   	fcall	_LCD_Write_String
  5449                           
  5450                           ;main.c: 48: _delay((unsigned long)((200)*(32000000/4000.0)));
  5451  0463  3009               	movlw	9
  5452  0464  0020               	movlb	0	; select bank0
  5453  0465  00EB               	movwf	??_main+2
  5454  0466  301E               	movlw	30
  5455  0467  00EA               	movwf	??_main+1
  5456  0468  30EB               	movlw	235
  5457  0469  00E9               	movwf	??_main
  5458  046A                     u3507:	
  5459  046A  0BE9               	decfsz	??_main,f
  5460  046B  2C6A               	goto	u3507
  5461  046C  0BEA               	decfsz	??_main+1,f
  5462  046D  2C6A               	goto	u3507
  5463  046E  0BEB               	decfsz	??_main+2,f
  5464  046F  2C6A               	goto	u3507
  5465  0470  0000               	nop
  5466                           
  5467                           ;main.c: 49: { LCD_Set_Cursor(11,1); LCD_Write_String("I");};
  5468  0471  01F4               	clrf	LCD_Set_Cursor@y
  5469  0472  0AF4               	incf	LCD_Set_Cursor@y,f
  5470  0473  300B               	movlw	11
  5471  0474  3189  21C1  3183   	fcall	_LCD_Set_Cursor
  5472  0477  3040               	movlw	low (STR_10| (0+32768))
  5473  0478  00F5               	movwf	LCD_Write_String@a
  5474  0479  3090               	movlw	high (STR_10| (0+32768))
  5475  047A  00F6               	movwf	LCD_Write_String@a+1
  5476  047B  3188  2038  3183   	fcall	_LCD_Write_String
  5477                           
  5478                           ;main.c: 50: _delay((unsigned long)((200)*(32000000/4000.0)));
  5479  047E  3009               	movlw	9
  5480  047F  0020               	movlb	0	; select bank0
  5481  0480  00EB               	movwf	??_main+2
  5482  0481  301E               	movlw	30
  5483  0482  00EA               	movwf	??_main+1
  5484  0483  30EB               	movlw	235
  5485  0484  00E9               	movwf	??_main
  5486  0485                     u3517:	
  5487  0485  0BE9               	decfsz	??_main,f
  5488  0486  2C85               	goto	u3517
  5489  0487  0BEA               	decfsz	??_main+1,f
  5490  0488  2C85               	goto	u3517
  5491  0489  0BEB               	decfsz	??_main+2,f
  5492  048A  2C85               	goto	u3517
  5493  048B  0000               	nop
  5494                           
  5495                           ;main.c: 51: { LCD_Set_Cursor(12,1); LCD_Write_String("D");};
  5496  048C  01F4               	clrf	LCD_Set_Cursor@y
  5497  048D  0AF4               	incf	LCD_Set_Cursor@y,f
  5498  048E  300C               	movlw	12
  5499  048F  3189  21C1  3183   	fcall	_LCD_Set_Cursor
  5500  0492  303C               	movlw	low (STR_7| (0+32768))
  5501  0493  00F5               	movwf	LCD_Write_String@a
  5502  0494  3090               	movlw	high (STR_7| (0+32768))
  5503  0495  00F6               	movwf	LCD_Write_String@a+1
  5504  0496  3188  2038  3183   	fcall	_LCD_Write_String
  5505                           
  5506                           ;main.c: 52: _delay((unsigned long)((200)*(32000000/4000.0)));
  5507  0499  3009               	movlw	9
  5508  049A  0020               	movlb	0	; select bank0
  5509  049B  00EB               	movwf	??_main+2
  5510  049C  301E               	movlw	30
  5511  049D  00EA               	movwf	??_main+1
  5512  049E  30EB               	movlw	235
  5513  049F  00E9               	movwf	??_main
  5514  04A0                     u3527:	
  5515  04A0  0BE9               	decfsz	??_main,f
  5516  04A1  2CA0               	goto	u3527
  5517  04A2  0BEA               	decfsz	??_main+1,f
  5518  04A3  2CA0               	goto	u3527
  5519  04A4  0BEB               	decfsz	??_main+2,f
  5520  04A5  2CA0               	goto	u3527
  5521  04A6  0000               	nop
  5522                           
  5523                           ;main.c: 53: { LCD_Set_Cursor(13,1); LCD_Write_String("!");};
  5524  04A7  01F4               	clrf	LCD_Set_Cursor@y
  5525  04A8  0AF4               	incf	LCD_Set_Cursor@y,f
  5526  04A9  300D               	movlw	13
  5527  04AA  3189  21C1  3183   	fcall	_LCD_Set_Cursor
  5528  04AD  3038               	movlw	low (STR_12| (0+32768))
  5529  04AE  00F5               	movwf	LCD_Write_String@a
  5530  04AF  3090               	movlw	high (STR_12| (0+32768))
  5531  04B0  00F6               	movwf	LCD_Write_String@a+1
  5532  04B1  3188  2038  3183   	fcall	_LCD_Write_String
  5533                           
  5534                           ;main.c: 54: _delay((unsigned long)((5000)*(32000000/4000.0)));
  5535  04B4  30CB               	movlw	203
  5536  04B5  0020               	movlb	0	; select bank0
  5537  04B6  00EB               	movwf	??_main+2
  5538  04B7  30ED               	movlw	237
  5539  04B8  00EA               	movwf	??_main+1
  5540  04B9  304C               	movlw	76
  5541  04BA  00E9               	movwf	??_main
  5542  04BB                     u3537:	
  5543  04BB  0BE9               	decfsz	??_main,f
  5544  04BC  2CBB               	goto	u3537
  5545  04BD  0BEA               	decfsz	??_main+1,f
  5546  04BE  2CBB               	goto	u3537
  5547  04BF  0BEB               	decfsz	??_main+2,f
  5548  04C0  2CBB               	goto	u3537
  5549  04C1  3200               	nop2
  5550                           
  5551                           ;main.c: 56: LCD_Clear();
  5552  04C2  3188  2000  3183   	fcall	_LCD_Clear
  5553                           
  5554                           ;main.c: 58: PWM6_LoadDutyValue(dutyCycle);
  5555  04C5  0021               	movlb	1	; select bank1
  5556  04C6  0856               	movf	(main@dutyCycle+1)^(0+128),w
  5557  04C7  00F1               	movwf	PWM6_LoadDutyValue@dutyCycle+1
  5558  04C8  0855               	movf	main@dutyCycle^(0+128),w
  5559  04C9  00F0               	movwf	PWM6_LoadDutyValue@dutyCycle
  5560  04CA  3197  27EA  3183   	fcall	_PWM6_LoadDutyValue
  5561  04CD                     l2816:	
  5562                           ;main.c: 61: while (1)
  5563                           
  5564                           
  5565                           ;main.c: 62: {
  5566                           ;main.c: 63: for(x[0]=0;x[0]<6;x[0]++) analogs[x[0]]=readAnalog(x[0]);
  5567  04CD  0021               	movlb	1	; select bank1
  5568  04CE  01CF               	clrf	main@x^(0+128)
  5569  04CF                     l2822:	
  5570  04CF  3006               	movlw	6
  5571  04D0  024F               	subwf	main@x^(0+128),w
  5572  04D1  1803               	btfsc	3,0
  5573  04D2  2CEE               	goto	l2824
  5574  04D3  084F               	movf	main@x^(0+128),w
  5575  04D4  0020               	movlb	0	; select bank0
  5576  04D5  00E9               	movwf	??_main
  5577  04D6  01EA               	clrf	??_main+1
  5578  04D7  0869               	movf	??_main,w
  5579  04D8  00A6               	movwf	readAnalog@channel
  5580  04D9  086A               	movf	??_main+1,w
  5581  04DA  00A7               	movwf	readAnalog@channel+1
  5582  04DB  3182  2211  3183   	fcall	_readAnalog
  5583  04DE  0021               	movlb	1	; select bank1
  5584  04DF  354F               	lslf	main@x^(0+128),w
  5585  04E0  3EC0               	addlw	(low (main@analogs| 0))& (0+255)
  5586  04E1  0086               	movwf	6
  5587  04E2  0187               	clrf	7
  5588  04E3  0020               	movlb	0	; select bank0
  5589  04E4  0826               	movf	?_readAnalog,w
  5590  04E5  3FC0               	movwi [0]fsr1
  5591  04E6  0827               	movf	?_readAnalog+1,w
  5592  04E7  3FC1               	movwi [1]fsr1
  5593  04E8  3001               	movlw	1
  5594  04E9  00E9               	movwf	??_main
  5595  04EA  0869               	movf	??_main,w
  5596  04EB  0021               	movlb	1	; select bank1
  5597  04EC  07CF               	addwf	main@x^(0+128),f
  5598  04ED  2CCF               	goto	l2822
  5599  04EE                     l2824:	
  5600                           
  5601                           ;main.c: 65: if(analogs[0]<1020)x[2]=1;
  5602  04EE  3003               	movlw	3
  5603  04EF  0241               	subwf	(main@analogs+1)^(0+128),w
  5604  04F0  30FC               	movlw	252
  5605  04F1  1903               	skipnz
  5606  04F2  0240               	subwf	main@analogs^(0+128),w
  5607  04F3  1803               	skipnc
  5608  04F4  2CF7               	goto	l2828
  5609  04F5  01D1               	clrf	(main@x^(0+128)+2)
  5610  04F6  0AD1               	incf	(main@x^(0+128)+2),f
  5611  04F7                     l2828:	
  5612                           
  5613                           ;main.c: 67: if(analogs[1]<900)x[2]=0;
  5614  04F7  3003               	movlw	3
  5615  04F8  0243               	subwf	((main@analogs+1)^(0+128)+2),w
  5616  04F9  3084               	movlw	132
  5617  04FA  1903               	skipnz
  5618  04FB  0242               	subwf	(main@analogs^(0+128)+2),w
  5619  04FC  1C03               	btfss	3,0
  5620  04FD  01D1               	clrf	(main@x^(0+128)+2)
  5621                           
  5622                           ;main.c: 69: if(analogs[0]<1020&&analogs[1]<970)
  5623  04FE  3003               	movlw	3
  5624  04FF  0241               	subwf	(main@analogs+1)^(0+128),w
  5625  0500  30FC               	movlw	252
  5626  0501  1903               	skipnz
  5627  0502  0240               	subwf	main@analogs^(0+128),w
  5628  0503  1803               	skipnc
  5629  0504  2D20               	goto	l2838
  5630  0505  3003               	movlw	3
  5631  0506  0243               	subwf	((main@analogs+1)^(0+128)+2),w
  5632  0507  30CA               	movlw	202
  5633  0508  1903               	skipnz
  5634  0509  0242               	subwf	(main@analogs^(0+128)+2),w
  5635  050A  1803               	skipnc
  5636  050B  2D20               	goto	l2838
  5637                           
  5638                           ;main.c: 70: {
  5639                           ;main.c: 71: x[2]=2;
  5640  050C  3002               	movlw	2
  5641  050D  0020               	movlb	0	; select bank0
  5642  050E  00E9               	movwf	??_main
  5643  050F  0869               	movf	??_main,w
  5644  0510  0021               	movlb	1	; select bank1
  5645  0511  00D1               	movwf	(main@x^(0+128)+2)
  5646                           
  5647                           ;main.c: 72: _delay((unsigned long)((200)*(32000000/4000.0)));
  5648  0512  3009               	movlw	9
  5649  0513  0020               	movlb	0	; select bank0
  5650  0514  00EB               	movwf	??_main+2
  5651  0515  301E               	movlw	30
  5652  0516  00EA               	movwf	??_main+1
  5653  0517  30EB               	movlw	235
  5654  0518  00E9               	movwf	??_main
  5655  0519                     u3547:	
  5656  0519  0BE9               	decfsz	??_main,f
  5657  051A  2D19               	goto	u3547
  5658  051B  0BEA               	decfsz	??_main+1,f
  5659  051C  2D19               	goto	u3547
  5660  051D  0BEB               	decfsz	??_main+2,f
  5661  051E  2D19               	goto	u3547
  5662  051F  0000               	nop
  5663  0520                     l2838:	
  5664                           
  5665                           ;main.c: 73: }
  5666                           ;main.c: 77: x[5]+=1;
  5667  0520  3001               	movlw	1
  5668  0521  0020               	movlb	0	; select bank0
  5669  0522  00E9               	movwf	??_main
  5670  0523  0869               	movf	??_main,w
  5671  0524  0021               	movlb	1	; select bank1
  5672  0525  07D4               	addwf	(main@x^(0+128)+5),f
  5673                           
  5674                           ;main.c: 79: if(x[5]>254)
  5675  0526  0A54               	incf	(main@x^(0+128)+5),w
  5676  0527  1D03               	btfss	3,2
  5677  0528  2E28               	goto	l2920
  5678                           
  5679                           ;main.c: 80: {
  5680                           ;main.c: 81: x[5]=254;
  5681  0529  30FE               	movlw	254
  5682  052A  0020               	movlb	0	; select bank0
  5683  052B  00E9               	movwf	??_main
  5684  052C  0869               	movf	??_main,w
  5685  052D  0021               	movlb	1	; select bank1
  5686  052E  00D4               	movwf	(main@x^(0+128)+5)
  5687                           
  5688                           ;main.c: 83: if(analogs[2]<900&&analogs[3]<900)asm("reset");
  5689  052F  3003               	movlw	3
  5690  0530  0245               	subwf	((main@analogs+1)^(0+128)+4),w
  5691  0531  3084               	movlw	132
  5692  0532  1903               	skipnz
  5693  0533  0244               	subwf	(main@analogs^(0+128)+4),w
  5694  0534  1803               	skipnc
  5695  0535  2D3D               	goto	l2848
  5696  0536  3003               	movlw	3
  5697  0537  0247               	subwf	((main@analogs+1)^(0+128)+6),w
  5698  0538  3084               	movlw	132
  5699  0539  1903               	skipnz
  5700  053A  0246               	subwf	(main@analogs^(0+128)+6),w
  5701  053B  1C03               	btfss	3,0
  5702  053C  0001               	reset	;# 
  5703  053D                     l2848:	
  5704                           
  5705                           ;main.c: 85: if(analogs[2]<950)
  5706  053D  3003               	movlw	3
  5707  053E  0021               	movlb	1	; select bank1
  5708  053F  0245               	subwf	((main@analogs+1)^(0+128)+4),w
  5709  0540  30B6               	movlw	182
  5710  0541  1903               	skipnz
  5711  0542  0244               	subwf	(main@analogs^(0+128)+4),w
  5712  0543  1C03               	btfss	3,0
  5713  0544  2D98               	goto	l2876
  5714  0545  2DB1               	goto	l2884
  5715  0546                     l2852:	
  5716                           ;main.c: 86: {
  5717                           ;main.c: 87: while(analogs[2]<950)
  5718                           
  5719                           
  5720                           ;main.c: 88: {
  5721                           ;main.c: 89: analogs[2]=ADCRead(4);
  5722  0546  3004               	movlw	4
  5723  0547  3197  27B6  3183   	fcall	_ADCRead
  5724  054A  0871               	movf	?_ADCRead+1,w
  5725  054B  0021               	movlb	1	; select bank1
  5726  054C  00C5               	movwf	((main@analogs+1)^(0+128)+4)
  5727  054D  0870               	movf	?_ADCRead,w
  5728  054E  00C4               	movwf	(main@analogs^(0+128)+4)
  5729                           
  5730                           ;main.c: 90: x[4]+=1;
  5731  054F  3001               	movlw	1
  5732  0550  0020               	movlb	0	; select bank0
  5733  0551  00E9               	movwf	??_main
  5734  0552  0869               	movf	??_main,w
  5735  0553  0021               	movlb	1	; select bank1
  5736  0554  07D3               	addwf	(main@x^(0+128)+4),f
  5737                           
  5738                           ;main.c: 91: if(x[4]<1)LCD_Clear();
  5739  0555  0853               	movf	(main@x^(0+128)+4),w
  5740  0556  1D03               	btfss	3,2
  5741  0557  2D5B               	goto	l2860
  5742  0558  3188  2000  3183   	fcall	_LCD_Clear
  5743  055B                     l2860:	
  5744                           
  5745                           ;main.c: 93: if(dutyCycle>0)dutyCycle-=1;
  5746  055B  0021               	movlb	1	; select bank1
  5747  055C  0855               	movf	main@dutyCycle^(0+128),w
  5748  055D  0456               	iorwf	(main@dutyCycle+1)^(0+128),w
  5749  055E  1903               	btfsc	3,2
  5750  055F  2D64               	goto	l2864
  5751  0560  3001               	movlw	1
  5752  0561  02D5               	subwf	main@dutyCycle^(0+128),f
  5753  0562  3000               	movlw	0
  5754  0563  3BD6               	subwfb	(main@dutyCycle+1)^(0+128),f
  5755  0564                     l2864:	
  5756                           
  5757                           ;main.c: 95: { LCD_Set_Cursor(0,0); LCD_Write_String("BackLight:");};
  5758  0564  01F4               	clrf	LCD_Set_Cursor@y
  5759  0565  3000               	movlw	0
  5760  0566  3189  21C1  3183   	fcall	_LCD_Set_Cursor
  5761  0569  301B               	movlw	low (STR_13| (0+32768))
  5762  056A  00F5               	movwf	LCD_Write_String@a
  5763  056B  3090               	movlw	high (STR_13| (0+32768))
  5764  056C  00F6               	movwf	LCD_Write_String@a+1
  5765  056D  3188  2038  3183   	fcall	_LCD_Write_String
  5766                           
  5767                           ;main.c: 96: LCD_Write_Int(dutyCycle/10,-1,0,0);
  5768  0570  300A               	movlw	10
  5769  0571  00F0               	movwf	___lwdiv@divisor
  5770  0572  3000               	movlw	0
  5771  0573  00F1               	movwf	___lwdiv@divisor+1
  5772  0574  0021               	movlb	1	; select bank1
  5773  0575  0856               	movf	(main@dutyCycle+1)^(0+128),w
  5774  0576  00F3               	movwf	___lwdiv@dividend+1
  5775  0577  0855               	movf	main@dutyCycle^(0+128),w
  5776  0578  00F2               	movwf	___lwdiv@dividend
  5777  0579  3189  2117  3183   	fcall	___lwdiv
  5778  057C  0871               	movf	?___lwdiv+1,w
  5779  057D  0020               	movlb	0	; select bank0
  5780  057E  00A1               	movwf	LCD_Write_Int@value+1
  5781  057F  0870               	movf	?___lwdiv,w
  5782  0580  00A0               	movwf	LCD_Write_Int@value
  5783  0581  01A2               	clrf	LCD_Write_Int@fieldLength
  5784  0582  03A2               	decf	LCD_Write_Int@fieldLength,f
  5785  0583  01A3               	clrf	LCD_Write_Int@numPlaces
  5786  0584  01A4               	clrf	LCD_Write_Int@sign
  5787  0585  318F  2735  3183   	fcall	_LCD_Write_Int
  5788                           
  5789                           ;main.c: 97: LCD_Write_Char('%');
  5790  0588  3025               	movlw	37
  5791  0589  3188  20EB  3183   	fcall	_LCD_Write_Char
  5792                           
  5793                           ;main.c: 98: LCD_Write_Char(' ');
  5794  058C  3020               	movlw	32
  5795  058D  3188  20EB  3183   	fcall	_LCD_Write_Char
  5796                           
  5797                           ;main.c: 99: PWM6_LoadDutyValue(dutyCycle);
  5798  0590  0021               	movlb	1	; select bank1
  5799  0591  0856               	movf	(main@dutyCycle+1)^(0+128),w
  5800  0592  00F1               	movwf	PWM6_LoadDutyValue@dutyCycle+1
  5801  0593  0855               	movf	main@dutyCycle^(0+128),w
  5802  0594  00F0               	movwf	PWM6_LoadDutyValue@dutyCycle
  5803  0595  3197  27EA  3183   	fcall	_PWM6_LoadDutyValue
  5804  0598                     l2876:	
  5805  0598  3003               	movlw	3
  5806  0599  0021               	movlb	1	; select bank1
  5807  059A  0245               	subwf	((main@analogs+1)^(0+128)+4),w
  5808  059B  30B6               	movlw	182
  5809  059C  1903               	skipnz
  5810  059D  0244               	subwf	(main@analogs^(0+128)+4),w
  5811  059E  1C03               	skipc
  5812  059F  2D46               	goto	l2852
  5813                           
  5814                           ;main.c: 100: }
  5815                           ;main.c: 101: x[4]=0;
  5816  05A0  01D3               	clrf	(main@x^(0+128)+4)
  5817                           
  5818                           ;main.c: 102: _delay((unsigned long)((100)*(32000000/4000.0)));
  5819  05A1  3005               	movlw	5
  5820  05A2  0020               	movlb	0	; select bank0
  5821  05A3  00EB               	movwf	??_main+2
  5822  05A4  300F               	movlw	15
  5823  05A5  00EA               	movwf	??_main+1
  5824  05A6  30F4               	movlw	244
  5825  05A7  00E9               	movwf	??_main
  5826  05A8                     u3557:	
  5827  05A8  0BE9               	decfsz	??_main,f
  5828  05A9  2DA8               	goto	u3557
  5829  05AA  0BEA               	decfsz	??_main+1,f
  5830  05AB  2DA8               	goto	u3557
  5831  05AC  0BEB               	decfsz	??_main+2,f
  5832  05AD  2DA8               	goto	u3557
  5833                           
  5834                           ;main.c: 103: LCD_Clear();
  5835  05AE  3188  2000  3183   	fcall	_LCD_Clear
  5836  05B1                     l2884:	
  5837                           
  5838                           ;main.c: 104: }
  5839                           ;main.c: 106: if(analogs[3]<950)
  5840  05B1  3003               	movlw	3
  5841  05B2  0021               	movlb	1	; select bank1
  5842  05B3  0247               	subwf	((main@analogs+1)^(0+128)+6),w
  5843  05B4  30B6               	movlw	182
  5844  05B5  1903               	skipnz
  5845  05B6  0246               	subwf	(main@analogs^(0+128)+6),w
  5846  05B7  1C03               	btfss	3,0
  5847  05B8  2E0F               	goto	l2912
  5848  05B9  2E28               	goto	l2920
  5849  05BA                     l2888:	
  5850                           ;main.c: 107: {
  5851                           ;main.c: 108: while(analogs[3]<950)
  5852                           
  5853                           
  5854                           ;main.c: 109: {
  5855                           ;main.c: 110: analogs[3]=ADCRead(5);
  5856  05BA  3005               	movlw	5
  5857  05BB  3197  27B6  3183   	fcall	_ADCRead
  5858  05BE  0871               	movf	?_ADCRead+1,w
  5859  05BF  0021               	movlb	1	; select bank1
  5860  05C0  00C7               	movwf	((main@analogs+1)^(0+128)+6)
  5861  05C1  0870               	movf	?_ADCRead,w
  5862  05C2  00C6               	movwf	(main@analogs^(0+128)+6)
  5863                           
  5864                           ;main.c: 111: x[4]+=1;
  5865  05C3  3001               	movlw	1
  5866  05C4  0020               	movlb	0	; select bank0
  5867  05C5  00E9               	movwf	??_main
  5868  05C6  0869               	movf	??_main,w
  5869  05C7  0021               	movlb	1	; select bank1
  5870  05C8  07D3               	addwf	(main@x^(0+128)+4),f
  5871                           
  5872                           ;main.c: 112: if(x[4]<1)LCD_Clear();
  5873  05C9  0853               	movf	(main@x^(0+128)+4),w
  5874  05CA  1D03               	btfss	3,2
  5875  05CB  2DCF               	goto	l2896
  5876  05CC  3188  2000  3183   	fcall	_LCD_Clear
  5877  05CF                     l2896:	
  5878                           
  5879                           ;main.c: 114: if(dutyCycle<1009)dutyCycle+=1;
  5880  05CF  3003               	movlw	3
  5881  05D0  0021               	movlb	1	; select bank1
  5882  05D1  0256               	subwf	(main@dutyCycle+1)^(0+128),w
  5883  05D2  30F1               	movlw	241
  5884  05D3  1903               	skipnz
  5885  05D4  0255               	subwf	main@dutyCycle^(0+128),w
  5886  05D5  1803               	skipnc
  5887  05D6  2DDB               	goto	l2900
  5888  05D7  3001               	movlw	1
  5889  05D8  07D5               	addwf	main@dutyCycle^(0+128),f
  5890  05D9  3000               	movlw	0
  5891  05DA  3DD6               	addwfc	(main@dutyCycle+1)^(0+128),f
  5892  05DB                     l2900:	
  5893                           
  5894                           ;main.c: 116: { LCD_Set_Cursor(0,0); LCD_Write_String("BackLight:");};
  5895  05DB  01F4               	clrf	LCD_Set_Cursor@y
  5896  05DC  3000               	movlw	0
  5897  05DD  3189  21C1  3183   	fcall	_LCD_Set_Cursor
  5898  05E0  301B               	movlw	low (STR_13| (0+32768))
  5899  05E1  00F5               	movwf	LCD_Write_String@a
  5900  05E2  3090               	movlw	high (STR_13| (0+32768))
  5901  05E3  00F6               	movwf	LCD_Write_String@a+1
  5902  05E4  3188  2038  3183   	fcall	_LCD_Write_String
  5903                           
  5904                           ;main.c: 117: LCD_Write_Int(dutyCycle/10,-1,0,0);
  5905  05E7  300A               	movlw	10
  5906  05E8  00F0               	movwf	___lwdiv@divisor
  5907  05E9  3000               	movlw	0
  5908  05EA  00F1               	movwf	___lwdiv@divisor+1
  5909  05EB  0021               	movlb	1	; select bank1
  5910  05EC  0856               	movf	(main@dutyCycle+1)^(0+128),w
  5911  05ED  00F3               	movwf	___lwdiv@dividend+1
  5912  05EE  0855               	movf	main@dutyCycle^(0+128),w
  5913  05EF  00F2               	movwf	___lwdiv@dividend
  5914  05F0  3189  2117  3183   	fcall	___lwdiv
  5915  05F3  0871               	movf	?___lwdiv+1,w
  5916  05F4  0020               	movlb	0	; select bank0
  5917  05F5  00A1               	movwf	LCD_Write_Int@value+1
  5918  05F6  0870               	movf	?___lwdiv,w
  5919  05F7  00A0               	movwf	LCD_Write_Int@value
  5920  05F8  01A2               	clrf	LCD_Write_Int@fieldLength
  5921  05F9  03A2               	decf	LCD_Write_Int@fieldLength,f
  5922  05FA  01A3               	clrf	LCD_Write_Int@numPlaces
  5923  05FB  01A4               	clrf	LCD_Write_Int@sign
  5924  05FC  318F  2735  3183   	fcall	_LCD_Write_Int
  5925                           
  5926                           ;main.c: 118: LCD_Write_Char('%');
  5927  05FF  3025               	movlw	37
  5928  0600  3188  20EB  3183   	fcall	_LCD_Write_Char
  5929                           
  5930                           ;main.c: 119: LCD_Write_Char(' ');
  5931  0603  3020               	movlw	32
  5932  0604  3188  20EB  3183   	fcall	_LCD_Write_Char
  5933                           
  5934                           ;main.c: 120: PWM6_LoadDutyValue(dutyCycle);
  5935  0607  0021               	movlb	1	; select bank1
  5936  0608  0856               	movf	(main@dutyCycle+1)^(0+128),w
  5937  0609  00F1               	movwf	PWM6_LoadDutyValue@dutyCycle+1
  5938  060A  0855               	movf	main@dutyCycle^(0+128),w
  5939  060B  00F0               	movwf	PWM6_LoadDutyValue@dutyCycle
  5940  060C  3197  27EA  3183   	fcall	_PWM6_LoadDutyValue
  5941  060F                     l2912:	
  5942  060F  3003               	movlw	3
  5943  0610  0021               	movlb	1	; select bank1
  5944  0611  0247               	subwf	((main@analogs+1)^(0+128)+6),w
  5945  0612  30B6               	movlw	182
  5946  0613  1903               	skipnz
  5947  0614  0246               	subwf	(main@analogs^(0+128)+6),w
  5948  0615  1C03               	skipc
  5949  0616  2DBA               	goto	l2888
  5950                           
  5951                           ;main.c: 121: }
  5952                           ;main.c: 122: x[4]=0;
  5953  0617  01D3               	clrf	(main@x^(0+128)+4)
  5954                           
  5955                           ;main.c: 123: _delay((unsigned long)((100)*(32000000/4000.0)));
  5956  0618  3005               	movlw	5
  5957  0619  0020               	movlb	0	; select bank0
  5958  061A  00EB               	movwf	??_main+2
  5959  061B  300F               	movlw	15
  5960  061C  00EA               	movwf	??_main+1
  5961  061D  30F4               	movlw	244
  5962  061E  00E9               	movwf	??_main
  5963  061F                     u3567:	
  5964  061F  0BE9               	decfsz	??_main,f
  5965  0620  2E1F               	goto	u3567
  5966  0621  0BEA               	decfsz	??_main+1,f
  5967  0622  2E1F               	goto	u3567
  5968  0623  0BEB               	decfsz	??_main+2,f
  5969  0624  2E1F               	goto	u3567
  5970                           
  5971                           ;main.c: 124: LCD_Clear();
  5972  0625  3188  2000  3183   	fcall	_LCD_Clear
  5973  0628                     l2920:	
  5974                           
  5975                           ;main.c: 125: }
  5976                           ;main.c: 126: }
  5977                           ;main.c: 130: displayTemp = tempCalc(analogs[4]);
  5978  0628  0021               	movlb	1	; select bank1
  5979  0629  0849               	movf	((main@analogs+1)^(0+128)+8),w
  5980  062A  0020               	movlb	0	; select bank0
  5981  062B  00DE               	movwf	tempCalc@analogValue+1
  5982  062C  0021               	movlb	1	; select bank1
  5983  062D  0848               	movf	(main@analogs^(0+128)+8),w
  5984  062E  0020               	movlb	0	; select bank0
  5985  062F  00DD               	movwf	tempCalc@analogValue
  5986  0630  3180  203C  3183   	fcall	_tempCalc
  5987  0633  0020               	movlb	0	; select bank0
  5988  0634  085D               	movf	?_tempCalc,w
  5989  0635  0021               	movlb	1	; select bank1
  5990  0636  00BD               	movwf	main@displayTemp^(0+128)
  5991  0637  0020               	movlb	0	; select bank0
  5992  0638  085E               	movf	?_tempCalc+1,w
  5993  0639  0021               	movlb	1	; select bank1
  5994  063A  00BE               	movwf	(main@displayTemp+1)^(0+128)
  5995  063B  0020               	movlb	0	; select bank0
  5996  063C  085F               	movf	?_tempCalc+2,w
  5997  063D  0021               	movlb	1	; select bank1
  5998  063E  00BF               	movwf	(main@displayTemp+2)^(0+128)
  5999                           
  6000                           ;main.c: 132: displayTemp2 = tempCalc(analogs[5]);
  6001  063F  084B               	movf	((main@analogs+1)^(0+128)+10),w
  6002  0640  0020               	movlb	0	; select bank0
  6003  0641  00DE               	movwf	tempCalc@analogValue+1
  6004  0642  0021               	movlb	1	; select bank1
  6005  0643  084A               	movf	(main@analogs^(0+128)+10),w
  6006  0644  0020               	movlb	0	; select bank0
  6007  0645  00DD               	movwf	tempCalc@analogValue
  6008  0646  3180  203C  3183   	fcall	_tempCalc
  6009  0649  0020               	movlb	0	; select bank0
  6010  064A  085D               	movf	?_tempCalc,w
  6011  064B  0021               	movlb	1	; select bank1
  6012  064C  00CC               	movwf	main@displayTemp2^(0+128)
  6013  064D  0020               	movlb	0	; select bank0
  6014  064E  085E               	movf	?_tempCalc+1,w
  6015  064F  0021               	movlb	1	; select bank1
  6016  0650  00CD               	movwf	(main@displayTemp2+1)^(0+128)
  6017  0651  0020               	movlb	0	; select bank0
  6018  0652  085F               	movf	?_tempCalc+2,w
  6019  0653  0021               	movlb	1	; select bank1
  6020  0654  00CE               	movwf	(main@displayTemp2+2)^(0+128)
  6021                           
  6022                           ;main.c: 134: if(x[1]>127)
  6023  0655  3080               	movlw	128
  6024  0656  0250               	subwf	(main@x^(0+128)+1),w
  6025  0657  1C03               	skipc
  6026  0658  2FB6               	goto	l2978
  6027                           
  6028                           ;main.c: 135: {
  6029                           ;main.c: 136: { LCD_Set_Cursor(0,0); LCD_Write_String("Solar In");};
  6030  0659  01F4               	clrf	LCD_Set_Cursor@y
  6031  065A  3000               	movlw	0
  6032  065B  3189  21C1  3183   	fcall	_LCD_Set_Cursor
  6033  065E  3026               	movlw	low (STR_15| (0+32768))
  6034  065F  00F5               	movwf	LCD_Write_String@a
  6035  0660  3090               	movlw	high (STR_15| (0+32768))
  6036  0661  00F6               	movwf	LCD_Write_String@a+1
  6037  0662  3188  2038  3183   	fcall	_LCD_Write_String
  6038                           
  6039                           ;main.c: 137: { LCD_Set_Cursor(0,1); LCD_Write_String("Return");};
  6040  0665  01F4               	clrf	LCD_Set_Cursor@y
  6041  0666  0AF4               	incf	LCD_Set_Cursor@y,f
  6042  0667  3000               	movlw	0
  6043  0668  3189  21C1  3183   	fcall	_LCD_Set_Cursor
  6044  066B  302F               	movlw	low (STR_16| (0+32768))
  6045  066C  00F5               	movwf	LCD_Write_String@a
  6046  066D  3090               	movlw	high (STR_16| (0+32768))
  6047  066E  00F6               	movwf	LCD_Write_String@a+1
  6048  066F  3188  2038  3183   	fcall	_LCD_Write_String
  6049                           
  6050                           ;main.c: 139: if(x[3]==0)
  6051  0672  0021               	movlb	1	; select bank1
  6052  0673  0852               	movf	(main@x^(0+128)+3),w
  6053  0674  1D03               	btfss	3,2
  6054  0675  2EC7               	goto	l2948
  6055                           
  6056                           ;main.c: 140: {
  6057                           ;main.c: 141: { LCD_Set_Cursor(9,0); LCD_Write_Int((int)displayTemp2,-1, 1, 0);};
  6058  0676  01F4               	clrf	LCD_Set_Cursor@y
  6059  0677  3009               	movlw	9
  6060  0678  3189  21C1  3183   	fcall	_LCD_Set_Cursor
  6061  067B  0021               	movlb	1	; select bank1
  6062  067C  084C               	movf	main@displayTemp2^(0+128),w
  6063  067D  00F0               	movwf	___fttol@f1
  6064  067E  084D               	movf	(main@displayTemp2+1)^(0+128),w
  6065  067F  00F1               	movwf	___fttol@f1+1
  6066  0680  084E               	movf	(main@displayTemp2+2)^(0+128),w
  6067  0681  00F2               	movwf	___fttol@f1+2
  6068  0682  318C  241E  3183   	fcall	___fttol
  6069  0685  0871               	movf	?___fttol+1,w
  6070  0686  0020               	movlb	0	; select bank0
  6071  0687  00A1               	movwf	LCD_Write_Int@value+1
  6072  0688  0870               	movf	?___fttol,w
  6073  0689  00A0               	movwf	LCD_Write_Int@value
  6074  068A  01A2               	clrf	LCD_Write_Int@fieldLength
  6075  068B  03A2               	decf	LCD_Write_Int@fieldLength,f
  6076  068C  01A3               	clrf	LCD_Write_Int@numPlaces
  6077  068D  0AA3               	incf	LCD_Write_Int@numPlaces,f
  6078  068E  01A4               	clrf	LCD_Write_Int@sign
  6079  068F  318F  2735  3183   	fcall	_LCD_Write_Int
  6080                           
  6081                           ;main.c: 142: LCD_Write_Char(0);
  6082  0692  3000               	movlw	0
  6083  0693  3188  20EB  3183   	fcall	_LCD_Write_Char
  6084                           
  6085                           ;main.c: 143: LCD_Write_Char('C');
  6086  0696  3043               	movlw	67
  6087  0697  3188  20EB  3183   	fcall	_LCD_Write_Char
  6088                           
  6089                           ;main.c: 144: LCD_Write_Char(' ');
  6090  069A  3020               	movlw	32
  6091  069B  3188  20EB  3183   	fcall	_LCD_Write_Char
  6092                           
  6093                           ;main.c: 146: { LCD_Set_Cursor(9,1); LCD_Write_Int((int)displayTemp2,-1, 1, 0);};
  6094  069E  01F4               	clrf	LCD_Set_Cursor@y
  6095  069F  0AF4               	incf	LCD_Set_Cursor@y,f
  6096  06A0  3009               	movlw	9
  6097  06A1  3189  21C1  3183   	fcall	_LCD_Set_Cursor
  6098  06A4  0021               	movlb	1	; select bank1
  6099  06A5  084C               	movf	main@displayTemp2^(0+128),w
  6100  06A6  00F0               	movwf	___fttol@f1
  6101  06A7  084D               	movf	(main@displayTemp2+1)^(0+128),w
  6102  06A8  00F1               	movwf	___fttol@f1+1
  6103  06A9  084E               	movf	(main@displayTemp2+2)^(0+128),w
  6104  06AA  00F2               	movwf	___fttol@f1+2
  6105  06AB  318C  241E  3183   	fcall	___fttol
  6106  06AE  0871               	movf	?___fttol+1,w
  6107  06AF  0020               	movlb	0	; select bank0
  6108  06B0  00A1               	movwf	LCD_Write_Int@value+1
  6109  06B1  0870               	movf	?___fttol,w
  6110  06B2  00A0               	movwf	LCD_Write_Int@value
  6111  06B3  01A2               	clrf	LCD_Write_Int@fieldLength
  6112  06B4  03A2               	decf	LCD_Write_Int@fieldLength,f
  6113  06B5  01A3               	clrf	LCD_Write_Int@numPlaces
  6114  06B6  0AA3               	incf	LCD_Write_Int@numPlaces,f
  6115  06B7  01A4               	clrf	LCD_Write_Int@sign
  6116  06B8  318F  2735  3183   	fcall	_LCD_Write_Int
  6117                           
  6118                           ;main.c: 147: LCD_Write_Char(0);
  6119  06BB  3000               	movlw	0
  6120  06BC  3188  20EB  3183   	fcall	_LCD_Write_Char
  6121                           
  6122                           ;main.c: 148: LCD_Write_Char('C');
  6123  06BF  3043               	movlw	67
  6124  06C0  3188  20EB  3183   	fcall	_LCD_Write_Char
  6125                           
  6126                           ;main.c: 149: LCD_Write_Char(' ');
  6127  06C3  3020               	movlw	32
  6128  06C4  3188  20EB  3183   	fcall	_LCD_Write_Char
  6129  06C7                     l2948:	
  6130                           
  6131                           ;main.c: 150: }
  6132                           ;main.c: 152: if(x[3]==1)
  6133  06C7  0021               	movlb	1	; select bank1
  6134  06C8  0352               	decf	(main@x^(0+128)+3),w
  6135  06C9  1D03               	btfss	3,2
  6136  06CA  2FA0               	goto	l2964
  6137                           
  6138                           ;main.c: 153: {
  6139                           ;main.c: 154: displayTemp = displayTemp*9/5+320;
  6140  06CB  3000               	movlw	0
  6141  06CC  0020               	movlb	0	; select bank0
  6142  06CD  00C0               	movwf	___ftadd@f1
  6143  06CE  30A0               	movlw	160
  6144  06CF  00C1               	movwf	___ftadd@f1+1
  6145  06D0  3043               	movlw	67
  6146  06D1  00C2               	movwf	___ftadd@f1+2
  6147  06D2  3000               	movlw	0
  6148  06D3  00B0               	movwf	___ftdiv@f2
  6149  06D4  30A0               	movlw	160
  6150  06D5  00B1               	movwf	___ftdiv@f2+1
  6151  06D6  3040               	movlw	64
  6152  06D7  00B2               	movwf	___ftdiv@f2+2
  6153  06D8  3000               	movlw	0
  6154  06D9  00A0               	movwf	___ftmul@f1
  6155  06DA  3010               	movlw	16
  6156  06DB  00A1               	movwf	___ftmul@f1+1
  6157  06DC  3041               	movlw	65
  6158  06DD  00A2               	movwf	___ftmul@f1+2
  6159  06DE  0021               	movlb	1	; select bank1
  6160  06DF  083D               	movf	main@displayTemp^(0+128),w
  6161  06E0  0020               	movlb	0	; select bank0
  6162  06E1  00A3               	movwf	___ftmul@f2
  6163  06E2  0021               	movlb	1	; select bank1
  6164  06E3  083E               	movf	(main@displayTemp+1)^(0+128),w
  6165  06E4  0020               	movlb	0	; select bank0
  6166  06E5  00A4               	movwf	___ftmul@f2+1
  6167  06E6  0021               	movlb	1	; select bank1
  6168  06E7  083F               	movf	(main@displayTemp+2)^(0+128),w
  6169  06E8  0020               	movlb	0	; select bank0
  6170  06E9  00A5               	movwf	___ftmul@f2+2
  6171  06EA  318E  2681  3183   	fcall	___ftmul
  6172  06ED  0020               	movlb	0	; select bank0
  6173  06EE  0820               	movf	?___ftmul,w
  6174  06EF  00B3               	movwf	___ftdiv@f1
  6175  06F0  0821               	movf	?___ftmul+1,w
  6176  06F1  00B4               	movwf	___ftdiv@f1+1
  6177  06F2  0822               	movf	?___ftmul+2,w
  6178  06F3  00B5               	movwf	___ftdiv@f1+2
  6179  06F4  318D  252B  3183   	fcall	___ftdiv
  6180  06F7  0020               	movlb	0	; select bank0
  6181  06F8  0830               	movf	?___ftdiv,w
  6182  06F9  00C3               	movwf	___ftadd@f2
  6183  06FA  0831               	movf	?___ftdiv+1,w
  6184  06FB  00C4               	movwf	___ftadd@f2+1
  6185  06FC  0832               	movf	?___ftdiv+2,w
  6186  06FD  00C5               	movwf	___ftadd@f2+2
  6187  06FE  3181  211B  3183   	fcall	___ftadd
  6188  0701  0020               	movlb	0	; select bank0
  6189  0702  0840               	movf	?___ftadd,w
  6190  0703  0021               	movlb	1	; select bank1
  6191  0704  00BD               	movwf	main@displayTemp^(0+128)
  6192  0705  0020               	movlb	0	; select bank0
  6193  0706  0841               	movf	?___ftadd+1,w
  6194  0707  0021               	movlb	1	; select bank1
  6195  0708  00BE               	movwf	(main@displayTemp+1)^(0+128)
  6196  0709  0020               	movlb	0	; select bank0
  6197  070A  0842               	movf	?___ftadd+2,w
  6198  070B  0021               	movlb	1	; select bank1
  6199  070C  00BF               	movwf	(main@displayTemp+2)^(0+128)
  6200                           
  6201                           ;main.c: 155: displayTemp2 = displayTemp2*9/5+320;
  6202  070D  3000               	movlw	0
  6203  070E  0020               	movlb	0	; select bank0
  6204  070F  00C0               	movwf	___ftadd@f1
  6205  0710  30A0               	movlw	160
  6206  0711  00C1               	movwf	___ftadd@f1+1
  6207  0712  3043               	movlw	67
  6208  0713  00C2               	movwf	___ftadd@f1+2
  6209  0714  3000               	movlw	0
  6210  0715  00B0               	movwf	___ftdiv@f2
  6211  0716  30A0               	movlw	160
  6212  0717  00B1               	movwf	___ftdiv@f2+1
  6213  0718  3040               	movlw	64
  6214  0719  00B2               	movwf	___ftdiv@f2+2
  6215  071A  3000               	movlw	0
  6216  071B  00A0               	movwf	___ftmul@f1
  6217  071C  3010               	movlw	16
  6218  071D  00A1               	movwf	___ftmul@f1+1
  6219  071E  3041               	movlw	65
  6220  071F  00A2               	movwf	___ftmul@f1+2
  6221  0720  0021               	movlb	1	; select bank1
  6222  0721  084C               	movf	main@displayTemp2^(0+128),w
  6223  0722  0020               	movlb	0	; select bank0
  6224  0723  00A3               	movwf	___ftmul@f2
  6225  0724  0021               	movlb	1	; select bank1
  6226  0725  084D               	movf	(main@displayTemp2+1)^(0+128),w
  6227  0726  0020               	movlb	0	; select bank0
  6228  0727  00A4               	movwf	___ftmul@f2+1
  6229  0728  0021               	movlb	1	; select bank1
  6230  0729  084E               	movf	(main@displayTemp2+2)^(0+128),w
  6231  072A  0020               	movlb	0	; select bank0
  6232  072B  00A5               	movwf	___ftmul@f2+2
  6233  072C  318E  2681  3183   	fcall	___ftmul
  6234  072F  0020               	movlb	0	; select bank0
  6235  0730  0820               	movf	?___ftmul,w
  6236  0731  00B3               	movwf	___ftdiv@f1
  6237  0732  0821               	movf	?___ftmul+1,w
  6238  0733  00B4               	movwf	___ftdiv@f1+1
  6239  0734  0822               	movf	?___ftmul+2,w
  6240  0735  00B5               	movwf	___ftdiv@f1+2
  6241  0736  318D  252B  3183   	fcall	___ftdiv
  6242  0739  0020               	movlb	0	; select bank0
  6243  073A  0830               	movf	?___ftdiv,w
  6244  073B  00C3               	movwf	___ftadd@f2
  6245  073C  0831               	movf	?___ftdiv+1,w
  6246  073D  00C4               	movwf	___ftadd@f2+1
  6247  073E  0832               	movf	?___ftdiv+2,w
  6248  073F  00C5               	movwf	___ftadd@f2+2
  6249  0740  3181  211B  3183   	fcall	___ftadd
  6250  0743  0020               	movlb	0	; select bank0
  6251  0744  0840               	movf	?___ftadd,w
  6252  0745  0021               	movlb	1	; select bank1
  6253  0746  00CC               	movwf	main@displayTemp2^(0+128)
  6254  0747  0020               	movlb	0	; select bank0
  6255  0748  0841               	movf	?___ftadd+1,w
  6256  0749  0021               	movlb	1	; select bank1
  6257  074A  00CD               	movwf	(main@displayTemp2+1)^(0+128)
  6258  074B  0020               	movlb	0	; select bank0
  6259  074C  0842               	movf	?___ftadd+2,w
  6260  074D  0021               	movlb	1	; select bank1
  6261  074E  00CE               	movwf	(main@displayTemp2+2)^(0+128)
  6262                           
  6263                           ;main.c: 157: { LCD_Set_Cursor(9,0); LCD_Write_Int((int)displayTemp2,-1, 1, 0);};
  6264  074F  01F4               	clrf	LCD_Set_Cursor@y
  6265  0750  3009               	movlw	9
  6266  0751  3189  21C1  3183   	fcall	_LCD_Set_Cursor
  6267  0754  0021               	movlb	1	; select bank1
  6268  0755  084C               	movf	main@displayTemp2^(0+128),w
  6269  0756  00F0               	movwf	___fttol@f1
  6270  0757  084D               	movf	(main@displayTemp2+1)^(0+128),w
  6271  0758  00F1               	movwf	___fttol@f1+1
  6272  0759  084E               	movf	(main@displayTemp2+2)^(0+128),w
  6273  075A  00F2               	movwf	___fttol@f1+2
  6274  075B  318C  241E  3183   	fcall	___fttol
  6275  075E  0871               	movf	?___fttol+1,w
  6276  075F  0020               	movlb	0	; select bank0
  6277  0760  00A1               	movwf	LCD_Write_Int@value+1
  6278  0761  0870               	movf	?___fttol,w
  6279  0762  00A0               	movwf	LCD_Write_Int@value
  6280  0763  01A2               	clrf	LCD_Write_Int@fieldLength
  6281  0764  03A2               	decf	LCD_Write_Int@fieldLength,f
  6282  0765  01A3               	clrf	LCD_Write_Int@numPlaces
  6283  0766  0AA3               	incf	LCD_Write_Int@numPlaces,f
  6284  0767  01A4               	clrf	LCD_Write_Int@sign
  6285  0768  318F  2735  3183   	fcall	_LCD_Write_Int
  6286                           
  6287                           ;main.c: 158: LCD_Write_Char(0);
  6288  076B  3000               	movlw	0
  6289  076C  3188  20EB  3183   	fcall	_LCD_Write_Char
  6290                           
  6291                           ;main.c: 159: LCD_Write_Char('F');
  6292  076F  3046               	movlw	70
  6293  0770  3188  20EB  3183   	fcall	_LCD_Write_Char
  6294                           
  6295                           ;main.c: 160: LCD_Write_Char(' ');
  6296  0773  3020               	movlw	32
  6297  0774  3188  20EB  3183   	fcall	_LCD_Write_Char
  6298                           
  6299                           ;main.c: 162: { LCD_Set_Cursor(9,1); LCD_Write_Int((int)displayTemp2,-1, 1, 0);};
  6300  0777  01F4               	clrf	LCD_Set_Cursor@y
  6301  0778  0AF4               	incf	LCD_Set_Cursor@y,f
  6302  0779  3009               	movlw	9
  6303  077A  3189  21C1  3183   	fcall	_LCD_Set_Cursor
  6304  077D  0021               	movlb	1	; select bank1
  6305  077E  084C               	movf	main@displayTemp2^(0+128),w
  6306  077F  00F0               	movwf	___fttol@f1
  6307  0780  084D               	movf	(main@displayTemp2+1)^(0+128),w
  6308  0781  00F1               	movwf	___fttol@f1+1
  6309  0782  084E               	movf	(main@displayTemp2+2)^(0+128),w
  6310  0783  00F2               	movwf	___fttol@f1+2
  6311  0784  318C  241E  3183   	fcall	___fttol
  6312  0787  0871               	movf	?___fttol+1,w
  6313  0788  0020               	movlb	0	; select bank0
  6314  0789  00A1               	movwf	LCD_Write_Int@value+1
  6315  078A  0870               	movf	?___fttol,w
  6316  078B  00A0               	movwf	LCD_Write_Int@value
  6317  078C  01A2               	clrf	LCD_Write_Int@fieldLength
  6318  078D  03A2               	decf	LCD_Write_Int@fieldLength,f
  6319  078E  01A3               	clrf	LCD_Write_Int@numPlaces
  6320  078F  0AA3               	incf	LCD_Write_Int@numPlaces,f
  6321  0790  01A4               	clrf	LCD_Write_Int@sign
  6322  0791  318F  2735  3183   	fcall	_LCD_Write_Int
  6323                           
  6324                           ;main.c: 163: LCD_Write_Char(0);
  6325  0794  3000               	movlw	0
  6326  0795  3188  20EB  3183   	fcall	_LCD_Write_Char
  6327                           
  6328                           ;main.c: 164: LCD_Write_Char('F');
  6329  0798  3046               	movlw	70
  6330  0799  3188  20EB  3183   	fcall	_LCD_Write_Char
  6331                           
  6332                           ;main.c: 165: LCD_Write_Char(' ');
  6333  079C  3020               	movlw	32
  6334  079D  3188  20EB  3183   	fcall	_LCD_Write_Char
  6335  07A0                     l2964:	
  6336                           
  6337                           ;main.c: 166: }
  6338                           ;main.c: 169: if(x[2]==0)x[3]=0;
  6339  07A0  0021               	movlb	1	; select bank1
  6340  07A1  0851               	movf	(main@x^(0+128)+2),w
  6341  07A2  1903               	btfsc	3,2
  6342  07A3  01D2               	clrf	(main@x^(0+128)+3)
  6343                           
  6344                           ;main.c: 171: if(x[2]==1)x[3]=1;
  6345  07A4  0351               	decf	(main@x^(0+128)+2),w
  6346  07A5  1D03               	btfss	3,2
  6347  07A6  2FA9               	goto	l2972
  6348  07A7  01D2               	clrf	(main@x^(0+128)+3)
  6349  07A8  0AD2               	incf	(main@x^(0+128)+3),f
  6350  07A9                     l2972:	
  6351                           
  6352                           ;main.c: 173: if(x[2]==2)x[3]=1-x[3];
  6353  07A9  3002               	movlw	2
  6354  07AA  0651               	xorwf	(main@x^(0+128)+2),w
  6355  07AB  1D03               	btfss	3,2
  6356  07AC  2FB5               	goto	l2976
  6357  07AD  0352               	decf	(main@x^(0+128)+3),w
  6358  07AE  3AFF               	xorlw	255
  6359  07AF  3E01               	addlw	1
  6360  07B0  0020               	movlb	0	; select bank0
  6361  07B1  00E9               	movwf	??_main
  6362  07B2  0869               	movf	??_main,w
  6363  07B3  0021               	movlb	1	; select bank1
  6364  07B4  00D2               	movwf	(main@x^(0+128)+3)
  6365  07B5                     l2976:	
  6366                           
  6367                           ;main.c: 189: x[1]=0;
  6368  07B5  01D0               	clrf	(main@x^(0+128)+1)
  6369  07B6                     l2978:	
  6370                           
  6371                           ;main.c: 190: }
  6372                           ;main.c: 191: x[1]+=1;
  6373  07B6  3001               	movlw	1
  6374  07B7  0020               	movlb	0	; select bank0
  6375  07B8  00E9               	movwf	??_main
  6376  07B9  0869               	movf	??_main,w
  6377  07BA  0021               	movlb	1	; select bank1
  6378  07BB  07D0               	addwf	(main@x^(0+128)+1),f
  6379  07BC  2CCD               	goto	l2816
  6380  07BD                     __end_of_main:	
  6381                           
  6382                           	psect	text1
  6383  003C                     __ptext1:	
  6384 ;; *************** function _tempCalc *****************
  6385 ;; Defined at:
  6386 ;;		line 4 in file "tempCalc.c"
  6387 ;; Parameters:    Size  Location     Type
  6388 ;;  analogValue     2   61[BANK0 ] int 
  6389 ;; Auto vars:     Size  Location     Type
  6390 ;;  steinhart       3   70[BANK0 ] float 
  6391 ;;  R               3   64[BANK0 ] float 
  6392 ;; Return value:  Size  Location     Type
  6393 ;;                  3   61[BANK0 ] float 
  6394 ;; Registers used:
  6395 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6396 ;; Tracked objects:
  6397 ;;		On entry : 0/0
  6398 ;;		On exit  : 0/0
  6399 ;;		Unchanged: 0/0
  6400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6401 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6402 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6404 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6405 ;;Total ram usage:       12 bytes
  6406 ;; Hardware stack levels used:    1
  6407 ;; Hardware stack levels required when called:    4
  6408 ;; This function calls:
  6409 ;;		___awtoft
  6410 ;;		___ftadd
  6411 ;;		___ftdiv
  6412 ;;		___ftmul
  6413 ;;		___ftsub
  6414 ;;		_log
  6415 ;; This function is called by:
  6416 ;;		_main
  6417 ;; This function uses a non-reentrant model
  6418 ;;
  6419                           
  6420                           
  6421                           ;psect for function _tempCalc
  6422  003C                     _tempCalc:	
  6423                           
  6424                           ;tempCalc.c: 6: float R, steinhart;
  6425                           ;tempCalc.c: 8: R = 10020/(1023/(float)analogValue - 1);
  6426                           
  6427                           ;incstack = 0
  6428                           ; Regs used in _tempCalc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6429  003C  3000               	movlw	0
  6430  003D  0020               	movlb	0	; select bank0
  6431  003E  00C0               	movwf	___ftadd@f1
  6432  003F  3080               	movlw	128
  6433  0040  00C1               	movwf	___ftadd@f1+1
  6434  0041  30BF               	movlw	191
  6435  0042  00C2               	movwf	___ftadd@f1+2
  6436  0043  085E               	movf	tempCalc@analogValue+1,w
  6437  0044  00F9               	movwf	___awtoft@c+1
  6438  0045  085D               	movf	tempCalc@analogValue,w
  6439  0046  00F8               	movwf	___awtoft@c
  6440  0047  3188  20A5  3180   	fcall	___awtoft
  6441  004A  0878               	movf	?___awtoft,w
  6442  004B  0020               	movlb	0	; select bank0
  6443  004C  00B0               	movwf	___ftdiv@f2
  6444  004D  0879               	movf	?___awtoft+1,w
  6445  004E  00B1               	movwf	___ftdiv@f2+1
  6446  004F  087A               	movf	?___awtoft+2,w
  6447  0050  00B2               	movwf	___ftdiv@f2+2
  6448  0051  30C0               	movlw	192
  6449  0052  00B3               	movwf	___ftdiv@f1
  6450  0053  307F               	movlw	127
  6451  0054  00B4               	movwf	___ftdiv@f1+1
  6452  0055  3044               	movlw	68
  6453  0056  00B5               	movwf	___ftdiv@f1+2
  6454  0057  318D  252B  3180   	fcall	___ftdiv
  6455  005A  0020               	movlb	0	; select bank0
  6456  005B  0830               	movf	?___ftdiv,w
  6457  005C  00C3               	movwf	___ftadd@f2
  6458  005D  0831               	movf	?___ftdiv+1,w
  6459  005E  00C4               	movwf	___ftadd@f2+1
  6460  005F  0832               	movf	?___ftdiv+2,w
  6461  0060  00C5               	movwf	___ftadd@f2+2
  6462  0061  3181  211B  3180   	fcall	___ftadd
  6463  0064  0020               	movlb	0	; select bank0
  6464  0065  0840               	movf	?___ftadd,w
  6465  0066  00E3               	movwf	_tempCalc$960
  6466  0067  0841               	movf	?___ftadd+1,w
  6467  0068  00E4               	movwf	_tempCalc$960+1
  6468  0069  0842               	movf	?___ftadd+2,w
  6469  006A  00E5               	movwf	_tempCalc$960+2
  6470                           
  6471                           ;tempCalc.c: 6: float R, steinhart;
  6472                           ;tempCalc.c: 8: R = 10020/(1023/(float)analogValue - 1);
  6473  006B  0863               	movf	_tempCalc$960,w
  6474  006C  00B0               	movwf	___ftdiv@f2
  6475  006D  0864               	movf	_tempCalc$960+1,w
  6476  006E  00B1               	movwf	___ftdiv@f2+1
  6477  006F  0865               	movf	_tempCalc$960+2,w
  6478  0070  00B2               	movwf	___ftdiv@f2+2
  6479  0071  3090               	movlw	144
  6480  0072  00B3               	movwf	___ftdiv@f1
  6481  0073  301C               	movlw	28
  6482  0074  00B4               	movwf	___ftdiv@f1+1
  6483  0075  3046               	movlw	70
  6484  0076  00B5               	movwf	___ftdiv@f1+2
  6485  0077  318D  252B  3180   	fcall	___ftdiv
  6486  007A  0020               	movlb	0	; select bank0
  6487  007B  0830               	movf	?___ftdiv,w
  6488  007C  00E0               	movwf	tempCalc@R
  6489  007D  0831               	movf	?___ftdiv+1,w
  6490  007E  00E1               	movwf	tempCalc@R+1
  6491  007F  0832               	movf	?___ftdiv+2,w
  6492  0080  00E2               	movwf	tempCalc@R+2
  6493                           
  6494                           ;tempCalc.c: 10: steinhart = R /10061;
  6495  0081  3034               	movlw	52
  6496  0082  00B0               	movwf	___ftdiv@f2
  6497  0083  301D               	movlw	29
  6498  0084  00B1               	movwf	___ftdiv@f2+1
  6499  0085  3046               	movlw	70
  6500  0086  00B2               	movwf	___ftdiv@f2+2
  6501  0087  0860               	movf	tempCalc@R,w
  6502  0088  00B3               	movwf	___ftdiv@f1
  6503  0089  0861               	movf	tempCalc@R+1,w
  6504  008A  00B4               	movwf	___ftdiv@f1+1
  6505  008B  0862               	movf	tempCalc@R+2,w
  6506  008C  00B5               	movwf	___ftdiv@f1+2
  6507  008D  318D  252B  3180   	fcall	___ftdiv
  6508  0090  0020               	movlb	0	; select bank0
  6509  0091  0830               	movf	?___ftdiv,w
  6510  0092  00E6               	movwf	tempCalc@steinhart
  6511  0093  0831               	movf	?___ftdiv+1,w
  6512  0094  00E7               	movwf	tempCalc@steinhart+1
  6513  0095  0832               	movf	?___ftdiv+2,w
  6514  0096  00E8               	movwf	tempCalc@steinhart+2
  6515                           
  6516                           ;tempCalc.c: 11: steinhart = log(steinhart);
  6517  0097  0866               	movf	tempCalc@steinhart,w
  6518  0098  00D7               	movwf	log@x
  6519  0099  0867               	movf	tempCalc@steinhart+1,w
  6520  009A  00D8               	movwf	log@x+1
  6521  009B  0868               	movf	tempCalc@steinhart+2,w
  6522  009C  00D9               	movwf	log@x+2
  6523  009D  318D  25D4  3180   	fcall	_log
  6524  00A0  0020               	movlb	0	; select bank0
  6525  00A1  0857               	movf	?_log,w
  6526  00A2  00E6               	movwf	tempCalc@steinhart
  6527  00A3  0858               	movf	?_log+1,w
  6528  00A4  00E7               	movwf	tempCalc@steinhart+1
  6529  00A5  0859               	movf	?_log+2,w
  6530  00A6  00E8               	movwf	tempCalc@steinhart+2
  6531                           
  6532                           ;tempCalc.c: 12: steinhart /= 3995;
  6533  00A7  30B0               	movlw	176
  6534  00A8  00B0               	movwf	___ftdiv@f2
  6535  00A9  3079               	movlw	121
  6536  00AA  00B1               	movwf	___ftdiv@f2+1
  6537  00AB  3045               	movlw	69
  6538  00AC  00B2               	movwf	___ftdiv@f2+2
  6539  00AD  0866               	movf	tempCalc@steinhart,w
  6540  00AE  00B3               	movwf	___ftdiv@f1
  6541  00AF  0867               	movf	tempCalc@steinhart+1,w
  6542  00B0  00B4               	movwf	___ftdiv@f1+1
  6543  00B1  0868               	movf	tempCalc@steinhart+2,w
  6544  00B2  00B5               	movwf	___ftdiv@f1+2
  6545  00B3  318D  252B  3180   	fcall	___ftdiv
  6546  00B6  0020               	movlb	0	; select bank0
  6547  00B7  0830               	movf	?___ftdiv,w
  6548  00B8  00E6               	movwf	tempCalc@steinhart
  6549  00B9  0831               	movf	?___ftdiv+1,w
  6550  00BA  00E7               	movwf	tempCalc@steinhart+1
  6551  00BB  0832               	movf	?___ftdiv+2,w
  6552  00BC  00E8               	movwf	tempCalc@steinhart+2
  6553                           
  6554                           ;tempCalc.c: 13: steinhart += 1.0 / (25 + 273.15);
  6555  00BD  30CF               	movlw	207
  6556  00BE  00C0               	movwf	___ftadd@f1
  6557  00BF  305B               	movlw	91
  6558  00C0  00C1               	movwf	___ftadd@f1+1
  6559  00C1  303B               	movlw	59
  6560  00C2  00C2               	movwf	___ftadd@f1+2
  6561  00C3  0866               	movf	tempCalc@steinhart,w
  6562  00C4  00C3               	movwf	___ftadd@f2
  6563  00C5  0867               	movf	tempCalc@steinhart+1,w
  6564  00C6  00C4               	movwf	___ftadd@f2+1
  6565  00C7  0868               	movf	tempCalc@steinhart+2,w
  6566  00C8  00C5               	movwf	___ftadd@f2+2
  6567  00C9  3181  211B  3180   	fcall	___ftadd
  6568  00CC  0020               	movlb	0	; select bank0
  6569  00CD  0840               	movf	?___ftadd,w
  6570  00CE  00E6               	movwf	tempCalc@steinhart
  6571  00CF  0841               	movf	?___ftadd+1,w
  6572  00D0  00E7               	movwf	tempCalc@steinhart+1
  6573  00D1  0842               	movf	?___ftadd+2,w
  6574  00D2  00E8               	movwf	tempCalc@steinhart+2
  6575                           
  6576                           ;tempCalc.c: 14: steinhart = 1.0 / steinhart;
  6577  00D3  0866               	movf	tempCalc@steinhart,w
  6578  00D4  00B0               	movwf	___ftdiv@f2
  6579  00D5  0867               	movf	tempCalc@steinhart+1,w
  6580  00D6  00B1               	movwf	___ftdiv@f2+1
  6581  00D7  0868               	movf	tempCalc@steinhart+2,w
  6582  00D8  00B2               	movwf	___ftdiv@f2+2
  6583  00D9  3000               	movlw	0
  6584  00DA  00B3               	movwf	___ftdiv@f1
  6585  00DB  3080               	movlw	128
  6586  00DC  00B4               	movwf	___ftdiv@f1+1
  6587  00DD  303F               	movlw	63
  6588  00DE  00B5               	movwf	___ftdiv@f1+2
  6589  00DF  318D  252B  3180   	fcall	___ftdiv
  6590  00E2  0020               	movlb	0	; select bank0
  6591  00E3  0830               	movf	?___ftdiv,w
  6592  00E4  00E6               	movwf	tempCalc@steinhart
  6593  00E5  0831               	movf	?___ftdiv+1,w
  6594  00E6  00E7               	movwf	tempCalc@steinhart+1
  6595  00E7  0832               	movf	?___ftdiv+2,w
  6596  00E8  00E8               	movwf	tempCalc@steinhart+2
  6597                           
  6598                           ;tempCalc.c: 15: steinhart -= 273.15;
  6599  00E9  3093               	movlw	147
  6600  00EA  00CD               	movwf	___ftsub@f2
  6601  00EB  3088               	movlw	136
  6602  00EC  00CE               	movwf	___ftsub@f2+1
  6603  00ED  3043               	movlw	67
  6604  00EE  00CF               	movwf	___ftsub@f2+2
  6605  00EF  0866               	movf	tempCalc@steinhart,w
  6606  00F0  00D0               	movwf	___ftsub@f1
  6607  00F1  0867               	movf	tempCalc@steinhart+1,w
  6608  00F2  00D1               	movwf	___ftsub@f1+1
  6609  00F3  0868               	movf	tempCalc@steinhart+2,w
  6610  00F4  00D2               	movwf	___ftsub@f1+2
  6611  00F5  3188  2087  3180   	fcall	___ftsub
  6612  00F8  0020               	movlb	0	; select bank0
  6613  00F9  084D               	movf	?___ftsub,w
  6614  00FA  00E6               	movwf	tempCalc@steinhart
  6615  00FB  084E               	movf	?___ftsub+1,w
  6616  00FC  00E7               	movwf	tempCalc@steinhart+1
  6617  00FD  084F               	movf	?___ftsub+2,w
  6618  00FE  00E8               	movwf	tempCalc@steinhart+2
  6619                           
  6620                           ;tempCalc.c: 17: steinhart*=10;
  6621  00FF  3000               	movlw	0
  6622  0100  00A0               	movwf	___ftmul@f1
  6623  0101  3020               	movlw	32
  6624  0102  00A1               	movwf	___ftmul@f1+1
  6625  0103  3041               	movlw	65
  6626  0104  00A2               	movwf	___ftmul@f1+2
  6627  0105  0866               	movf	tempCalc@steinhart,w
  6628  0106  00A3               	movwf	___ftmul@f2
  6629  0107  0867               	movf	tempCalc@steinhart+1,w
  6630  0108  00A4               	movwf	___ftmul@f2+1
  6631  0109  0868               	movf	tempCalc@steinhart+2,w
  6632  010A  00A5               	movwf	___ftmul@f2+2
  6633  010B  318E  2681         	fcall	___ftmul
  6634  010D  0020               	movlb	0	; select bank0
  6635  010E  0820               	movf	?___ftmul,w
  6636  010F  00E6               	movwf	tempCalc@steinhart
  6637  0110  0821               	movf	?___ftmul+1,w
  6638  0111  00E7               	movwf	tempCalc@steinhart+1
  6639  0112  0822               	movf	?___ftmul+2,w
  6640  0113  00E8               	movwf	tempCalc@steinhart+2
  6641                           
  6642                           ;tempCalc.c: 21: return steinhart;
  6643  0114  0866               	movf	tempCalc@steinhart,w
  6644  0115  00DD               	movwf	?_tempCalc
  6645  0116  0867               	movf	tempCalc@steinhart+1,w
  6646  0117  00DE               	movwf	?_tempCalc+1
  6647  0118  0868               	movf	tempCalc@steinhart+2,w
  6648  0119  00DF               	movwf	?_tempCalc+2
  6649  011A  0008               	return
  6650  011B                     __end_of_tempCalc:	
  6651                           
  6652                           	psect	text2
  6653  0DD4                     __ptext2:	
  6654 ;; *************** function _log *****************
  6655 ;; Defined at:
  6656 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\log.c"
  6657 ;; Parameters:    Size  Location     Type
  6658 ;;  x               3   55[BANK0 ] float 
  6659 ;; Auto vars:     Size  Location     Type
  6660 ;;  exponent        2   59[BANK0 ] int 
  6661 ;; Return value:  Size  Location     Type
  6662 ;;                  3   55[BANK0 ] int 
  6663 ;; Registers used:
  6664 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6665 ;; Tracked objects:
  6666 ;;		On entry : 0/0
  6667 ;;		On exit  : 0/0
  6668 ;;		Unchanged: 0/0
  6669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6670 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6671 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6672 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6673 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6674 ;;Total ram usage:        6 bytes
  6675 ;; Hardware stack levels used:    1
  6676 ;; Hardware stack levels required when called:    3
  6677 ;; This function calls:
  6678 ;;		___awtoft
  6679 ;;		___ftadd
  6680 ;;		___ftge
  6681 ;;		___ftmul
  6682 ;;		_eval_poly
  6683 ;;		_frexp
  6684 ;; This function is called by:
  6685 ;;		_tempCalc
  6686 ;; This function uses a non-reentrant model
  6687 ;;
  6688                           
  6689                           
  6690                           ;psect for function _log
  6691  0DD4                     _log:	
  6692                           
  6693                           ;incstack = 0
  6694                           ; Regs used in _log: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6695  0DD4  0020               	movlb	0	; select bank0
  6696  0DD5  0857               	movf	log@x,w
  6697  0DD6  00F0               	movwf	___ftge@ff1
  6698  0DD7  0858               	movf	log@x+1,w
  6699  0DD8  00F1               	movwf	___ftge@ff1+1
  6700  0DD9  0859               	movf	log@x+2,w
  6701  0DDA  00F2               	movwf	___ftge@ff1+2
  6702  0DDB  3000               	movlw	0
  6703  0DDC  00F3               	movwf	___ftge@ff2
  6704  0DDD  3000               	movlw	0
  6705  0DDE  00F4               	movwf	___ftge@ff2+1
  6706  0DDF  3000               	movlw	0
  6707  0DE0  00F5               	movwf	___ftge@ff2+2
  6708  0DE1  3189  214B  318D   	fcall	___ftge
  6709  0DE4  1803               	btfsc	3,0
  6710  0DE5  2DF2               	goto	l2330
  6711  0DE6  3021               	movlw	33
  6712  0DE7  0020               	movlb	0	; select bank0
  6713  0DE8  00EC               	movwf	_errno
  6714  0DE9  3000               	movlw	0
  6715  0DEA  00ED               	movwf	_errno+1
  6716  0DEB  3000               	movlw	0
  6717  0DEC  00D7               	movwf	?_log
  6718  0DED  3000               	movlw	0
  6719  0DEE  00D8               	movwf	?_log+1
  6720  0DEF  3000               	movlw	0
  6721  0DF0  00D9               	movwf	?_log+2
  6722  0DF1  0008               	return
  6723  0DF2                     l2330:	
  6724  0DF2  0020               	movlb	0	; select bank0
  6725  0DF3  0859               	movf	log@x+2,w
  6726  0DF4  0458               	iorwf	log@x+1,w
  6727  0DF5  0457               	iorwf	log@x,w
  6728  0DF6  1D03               	skipz
  6729  0DF7  2E03               	goto	l2336
  6730  0DF8  3022               	movlw	34
  6731  0DF9  00EC               	movwf	_errno
  6732  0DFA  3000               	movlw	0
  6733  0DFB  00ED               	movwf	_errno+1
  6734  0DFC  3000               	movlw	0
  6735  0DFD  00D7               	movwf	?_log
  6736  0DFE  3000               	movlw	0
  6737  0DFF  00D8               	movwf	?_log+1
  6738  0E00  3000               	movlw	0
  6739  0E01  00D9               	movwf	?_log+2
  6740  0E02  0008               	return
  6741  0E03                     l2336:	
  6742  0E03  3000               	movlw	0
  6743  0E04  00C0               	movwf	___ftadd@f1
  6744  0E05  3080               	movlw	128
  6745  0E06  00C1               	movwf	___ftadd@f1+1
  6746  0E07  30BF               	movlw	191
  6747  0E08  00C2               	movwf	___ftadd@f1+2
  6748  0E09  3000               	movlw	0
  6749  0E0A  00A0               	movwf	___ftmul@f1
  6750  0E0B  3000               	movlw	0
  6751  0E0C  00A1               	movwf	___ftmul@f1+1
  6752  0E0D  3040               	movlw	64
  6753  0E0E  00A2               	movwf	___ftmul@f1+2
  6754  0E0F  305B               	movlw	(low (log@exponent| 0))& (0+255)
  6755  0E10  00DA               	movwf	??_log
  6756  0E11  085A               	movf	??_log,w
  6757  0E12  00F3               	movwf	frexp@eptr
  6758  0E13  0857               	movf	log@x,w
  6759  0E14  00F0               	movwf	frexp@value
  6760  0E15  0858               	movf	log@x+1,w
  6761  0E16  00F1               	movwf	frexp@value+1
  6762  0E17  0859               	movf	log@x+2,w
  6763  0E18  00F2               	movwf	frexp@value+2
  6764  0E19  3189  2186  318D   	fcall	_frexp
  6765  0E1C  0870               	movf	?_frexp,w
  6766  0E1D  0020               	movlb	0	; select bank0
  6767  0E1E  00A3               	movwf	___ftmul@f2
  6768  0E1F  0871               	movf	?_frexp+1,w
  6769  0E20  00A4               	movwf	___ftmul@f2+1
  6770  0E21  0872               	movf	?_frexp+2,w
  6771  0E22  00A5               	movwf	___ftmul@f2+2
  6772  0E23  318E  2681  318D   	fcall	___ftmul
  6773  0E26  0020               	movlb	0	; select bank0
  6774  0E27  0820               	movf	?___ftmul,w
  6775  0E28  00C3               	movwf	___ftadd@f2
  6776  0E29  0821               	movf	?___ftmul+1,w
  6777  0E2A  00C4               	movwf	___ftadd@f2+1
  6778  0E2B  0822               	movf	?___ftmul+2,w
  6779  0E2C  00C5               	movwf	___ftadd@f2+2
  6780  0E2D  3181  211B  318D   	fcall	___ftadd
  6781  0E30  0020               	movlb	0	; select bank0
  6782  0E31  0840               	movf	?___ftadd,w
  6783  0E32  00D7               	movwf	log@x
  6784  0E33  0841               	movf	?___ftadd+1,w
  6785  0E34  00D8               	movwf	log@x+1
  6786  0E35  0842               	movf	?___ftadd+2,w
  6787  0E36  00D9               	movwf	log@x+2
  6788  0E37  30FF               	movlw	255
  6789  0E38  07DB               	addwf	log@exponent,f
  6790  0E39  30FF               	movlw	255
  6791  0E3A  3DDC               	addwfc	log@exponent+1,f
  6792  0E3B  0857               	movf	log@x,w
  6793  0E3C  00CD               	movwf	eval_poly@x
  6794  0E3D  0858               	movf	log@x+1,w
  6795  0E3E  00CE               	movwf	eval_poly@x+1
  6796  0E3F  0859               	movf	log@x+2,w
  6797  0E40  00CF               	movwf	eval_poly@x+2
  6798  0E41  3000               	movlw	low (log@coeff| (0+32768))
  6799  0E42  00D0               	movwf	eval_poly@d
  6800  0E43  3090               	movlw	high (log@coeff| (0+32768))
  6801  0E44  00D1               	movwf	eval_poly@d+1
  6802  0E45  3008               	movlw	8
  6803  0E46  00D2               	movwf	eval_poly@n
  6804  0E47  3000               	movlw	0
  6805  0E48  00D3               	movwf	eval_poly@n+1
  6806  0E49  318A  22D8  318D   	fcall	_eval_poly
  6807  0E4C  0020               	movlb	0	; select bank0
  6808  0E4D  084D               	movf	?_eval_poly,w
  6809  0E4E  00D7               	movwf	log@x
  6810  0E4F  084E               	movf	?_eval_poly+1,w
  6811  0E50  00D8               	movwf	log@x+1
  6812  0E51  084F               	movf	?_eval_poly+2,w
  6813  0E52  00D9               	movwf	log@x+2
  6814  0E53  0857               	movf	log@x,w
  6815  0E54  00C0               	movwf	___ftadd@f1
  6816  0E55  0858               	movf	log@x+1,w
  6817  0E56  00C1               	movwf	___ftadd@f1+1
  6818  0E57  0859               	movf	log@x+2,w
  6819  0E58  00C2               	movwf	___ftadd@f1+2
  6820  0E59  3072               	movlw	114
  6821  0E5A  00A0               	movwf	___ftmul@f1
  6822  0E5B  3031               	movlw	49
  6823  0E5C  00A1               	movwf	___ftmul@f1+1
  6824  0E5D  303F               	movlw	63
  6825  0E5E  00A2               	movwf	___ftmul@f1+2
  6826  0E5F  085C               	movf	log@exponent+1,w
  6827  0E60  00F9               	movwf	___awtoft@c+1
  6828  0E61  085B               	movf	log@exponent,w
  6829  0E62  00F8               	movwf	___awtoft@c
  6830  0E63  3188  20A5  318D   	fcall	___awtoft
  6831  0E66  0878               	movf	?___awtoft,w
  6832  0E67  0020               	movlb	0	; select bank0
  6833  0E68  00A3               	movwf	___ftmul@f2
  6834  0E69  0879               	movf	?___awtoft+1,w
  6835  0E6A  00A4               	movwf	___ftmul@f2+1
  6836  0E6B  087A               	movf	?___awtoft+2,w
  6837  0E6C  00A5               	movwf	___ftmul@f2+2
  6838  0E6D  318E  2681  318D   	fcall	___ftmul
  6839  0E70  0020               	movlb	0	; select bank0
  6840  0E71  0820               	movf	?___ftmul,w
  6841  0E72  00C3               	movwf	___ftadd@f2
  6842  0E73  0821               	movf	?___ftmul+1,w
  6843  0E74  00C4               	movwf	___ftadd@f2+1
  6844  0E75  0822               	movf	?___ftmul+2,w
  6845  0E76  00C5               	movwf	___ftadd@f2+2
  6846  0E77  3181  211B         	fcall	___ftadd
  6847  0E79  0020               	movlb	0	; select bank0
  6848  0E7A  0840               	movf	?___ftadd,w
  6849  0E7B  00D7               	movwf	?_log
  6850  0E7C  0841               	movf	?___ftadd+1,w
  6851  0E7D  00D8               	movwf	?_log+1
  6852  0E7E  0842               	movf	?___ftadd+2,w
  6853  0E7F  00D9               	movwf	?_log+2
  6854  0E80  0008               	return
  6855  0E81                     __end_of_log:	
  6856                           
  6857                           	psect	text3
  6858  0986                     __ptext3:	
  6859 ;; *************** function _frexp *****************
  6860 ;; Defined at:
  6861 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\frexp.c"
  6862 ;; Parameters:    Size  Location     Type
  6863 ;;  value           3    0[COMMON] int 
  6864 ;;  eptr            1    3[COMMON] PTR int 
  6865 ;;		 -> log@exponent(2), 
  6866 ;; Auto vars:     Size  Location     Type
  6867 ;;		None
  6868 ;; Return value:  Size  Location     Type
  6869 ;;                  3    0[COMMON] PTR int 
  6870 ;; Registers used:
  6871 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6872 ;; Tracked objects:
  6873 ;;		On entry : 0/0
  6874 ;;		On exit  : 0/0
  6875 ;;		Unchanged: 0/0
  6876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6877 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6879 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6880 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6881 ;;Total ram usage:        6 bytes
  6882 ;; Hardware stack levels used:    1
  6883 ;; This function calls:
  6884 ;;		Nothing
  6885 ;; This function is called by:
  6886 ;;		_log
  6887 ;; This function uses a non-reentrant model
  6888 ;;
  6889                           
  6890                           
  6891                           ;psect for function _frexp
  6892  0986                     _frexp:	
  6893                           
  6894                           ;incstack = 0
  6895                           ; Regs used in _frexp: [wreg+fsr1l+fsr1h+status,2+status,0]
  6896  0986  0872               	movf	frexp@value+2,w
  6897  0987  0471               	iorwf	frexp@value+1,w
  6898  0988  0470               	iorwf	frexp@value,w
  6899  0989  1D03               	skipz
  6900  098A  2998               	goto	l2162
  6901  098B  0873               	movf	frexp@eptr,w
  6902  098C  0086               	movwf	6
  6903  098D  0187               	clrf	7
  6904  098E  3000               	movlw	0
  6905  098F  3FC0               	movwi [0]fsr1
  6906  0990  3FC1               	movwi [1]fsr1
  6907  0991  3000               	movlw	0
  6908  0992  00F0               	movwf	?_frexp
  6909  0993  3000               	movlw	0
  6910  0994  00F1               	movwf	?_frexp+1
  6911  0995  3000               	movlw	0
  6912  0996  00F2               	movwf	?_frexp+2
  6913  0997  0008               	return
  6914  0998                     l2162:	
  6915  0998  0872               	movf	frexp@value+2,w
  6916  0999  397F               	andlw	127
  6917  099A  00F4               	movwf	??_frexp
  6918  099B  01F5               	clrf	??_frexp+1
  6919  099C  35F4               	lslf	??_frexp,f
  6920  099D  0DF5               	rlf	??_frexp+1,f
  6921  099E  0873               	movf	frexp@eptr,w
  6922  099F  0086               	movwf	6
  6923  09A0  0187               	clrf	7
  6924  09A1  0874               	movf	??_frexp,w
  6925  09A2  3FC0               	movwi [0]fsr1
  6926  09A3  0875               	movf	??_frexp+1,w
  6927  09A4  3FC1               	movwi [1]fsr1
  6928  09A5  0D71               	rlf	frexp@value+1,w
  6929  09A6  0D71               	rlf	frexp@value+1,w
  6930  09A7  3901               	andlw	1
  6931  09A8  00F4               	movwf	??_frexp
  6932  09A9  01F5               	clrf	??_frexp+1
  6933  09AA  0873               	movf	frexp@eptr,w
  6934  09AB  0086               	movwf	6
  6935  09AC  0187               	clrf	7
  6936  09AD  0874               	movf	??_frexp,w
  6937  09AE  0481               	iorwf	1,f
  6938  09AF  3141               	addfsr 1,1
  6939  09B0  0875               	movf	??_frexp+1,w
  6940  09B1  0481               	iorwf	1,f
  6941  09B2  0873               	movf	frexp@eptr,w
  6942  09B3  0086               	movwf	6
  6943  09B4  0187               	clrf	7
  6944  09B5  3082               	movlw	130
  6945  09B6  0781               	addwf	1,f
  6946  09B7  3141               	addfsr 1,1
  6947  09B8  30FF               	movlw	255
  6948  09B9  3D81               	addwfc	1,f
  6949  09BA  317F               	addfsr 1,-1
  6950  09BB  0872               	movf	frexp@value+2,w
  6951  09BC  3980               	andlw	-128
  6952  09BD  383F               	iorlw	63
  6953  09BE  00F2               	movwf	frexp@value+2
  6954  09BF  13F1               	bcf	frexp@value+1,7
  6955  09C0  0008               	return
  6956  09C1                     __end_of_frexp:	
  6957                           
  6958                           	psect	text4
  6959  0AD8                     __ptext4:	
  6960 ;; *************** function _eval_poly *****************
  6961 ;; Defined at:
  6962 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\evalpoly.c"
  6963 ;; Parameters:    Size  Location     Type
  6964 ;;  x               3   45[BANK0 ] PTR int 
  6965 ;;  d               2   48[BANK0 ] PTR const 
  6966 ;;		 -> log@coeff(27), 
  6967 ;;  n               2   50[BANK0 ] int 
  6968 ;; Auto vars:     Size  Location     Type
  6969 ;;  res             3   52[BANK0 ] int 
  6970 ;; Return value:  Size  Location     Type
  6971 ;;                  3   45[BANK0 ] int 
  6972 ;; Registers used:
  6973 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6974 ;; Tracked objects:
  6975 ;;		On entry : 0/0
  6976 ;;		On exit  : 0/0
  6977 ;;		Unchanged: 0/0
  6978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6979 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6980 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6982 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6983 ;;Total ram usage:       10 bytes
  6984 ;; Hardware stack levels used:    1
  6985 ;; Hardware stack levels required when called:    2
  6986 ;; This function calls:
  6987 ;;		___ftadd
  6988 ;;		___ftmul
  6989 ;;		___wmul
  6990 ;; This function is called by:
  6991 ;;		_log
  6992 ;; This function uses a non-reentrant model
  6993 ;;
  6994                           
  6995                           
  6996                           ;psect for function _eval_poly
  6997  0AD8                     _eval_poly:	
  6998                           
  6999                           ;incstack = 0
  7000                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7001  0AD8  0020               	movlb	0	; select bank0
  7002  0AD9  0853               	movf	eval_poly@n+1,w
  7003  0ADA  00F1               	movwf	___wmul@multiplier+1
  7004  0ADB  0852               	movf	eval_poly@n,w
  7005  0ADC  00F0               	movwf	___wmul@multiplier
  7006  0ADD  3003               	movlw	3
  7007  0ADE  00F2               	movwf	___wmul@multiplicand
  7008  0ADF  3000               	movlw	0
  7009  0AE0  00F3               	movwf	___wmul@multiplicand+1
  7010  0AE1  3188  206C  318A   	fcall	___wmul
  7011  0AE4  0020               	movlb	0	; select bank0
  7012  0AE5  0850               	movf	eval_poly@d,w
  7013  0AE6  0770               	addwf	?___wmul,w
  7014  0AE7  0084               	movwf	4
  7015  0AE8  0851               	movf	eval_poly@d+1,w
  7016  0AE9  3D71               	addwfc	?___wmul+1,w
  7017  0AEA  0085               	movwf	5
  7018  0AEB  3F00               	moviw [0]fsr0
  7019  0AEC  00D4               	movwf	eval_poly@res
  7020  0AED  3F01               	moviw [1]fsr0
  7021  0AEE  00D5               	movwf	eval_poly@res+1
  7022  0AEF  3F02               	moviw [2]fsr0
  7023  0AF0                     L1:	
  7024  0AF0  00D6               	movwf	eval_poly@res+2
  7025  0AF1  0852               	movf	eval_poly@n,w
  7026  0AF2  0453               	iorwf	eval_poly@n+1,w
  7027  0AF3  1903               	btfsc	3,2
  7028  0AF4  2B31               	goto	l2180
  7029  0AF5  30FF               	movlw	255
  7030  0AF6  07D2               	addwf	eval_poly@n,f
  7031  0AF7  30FF               	movlw	255
  7032  0AF8  3DD3               	addwfc	eval_poly@n+1,f
  7033  0AF9  0853               	movf	eval_poly@n+1,w
  7034  0AFA  00F1               	movwf	___wmul@multiplier+1
  7035  0AFB  0852               	movf	eval_poly@n,w
  7036  0AFC  00F0               	movwf	___wmul@multiplier
  7037  0AFD  3003               	movlw	3
  7038  0AFE  00F2               	movwf	___wmul@multiplicand
  7039  0AFF  3000               	movlw	0
  7040  0B00  00F3               	movwf	___wmul@multiplicand+1
  7041  0B01  3188  206C  318A   	fcall	___wmul
  7042  0B04  0020               	movlb	0	; select bank0
  7043  0B05  0850               	movf	eval_poly@d,w
  7044  0B06  0770               	addwf	?___wmul,w
  7045  0B07  0084               	movwf	4
  7046  0B08  0851               	movf	eval_poly@d+1,w
  7047  0B09  3D71               	addwfc	?___wmul+1,w
  7048  0B0A  0085               	movwf	5
  7049  0B0B  3F00               	moviw [0]fsr0
  7050  0B0C  00C0               	movwf	___ftadd@f1
  7051  0B0D  3F01               	moviw [1]fsr0
  7052  0B0E  00C1               	movwf	___ftadd@f1+1
  7053  0B0F  3F02               	moviw [2]fsr0
  7054  0B10  00C2               	movwf	___ftadd@f1+2
  7055  0B11  0854               	movf	eval_poly@res,w
  7056  0B12  00A0               	movwf	___ftmul@f1
  7057  0B13  0855               	movf	eval_poly@res+1,w
  7058  0B14  00A1               	movwf	___ftmul@f1+1
  7059  0B15  0856               	movf	eval_poly@res+2,w
  7060  0B16  00A2               	movwf	___ftmul@f1+2
  7061  0B17  084D               	movf	eval_poly@x,w
  7062  0B18  00A3               	movwf	___ftmul@f2
  7063  0B19  084E               	movf	eval_poly@x+1,w
  7064  0B1A  00A4               	movwf	___ftmul@f2+1
  7065  0B1B  084F               	movf	eval_poly@x+2,w
  7066  0B1C  00A5               	movwf	___ftmul@f2+2
  7067  0B1D  318E  2681  318A   	fcall	___ftmul
  7068  0B20  0020               	movlb	0	; select bank0
  7069  0B21  0820               	movf	?___ftmul,w
  7070  0B22  00C3               	movwf	___ftadd@f2
  7071  0B23  0821               	movf	?___ftmul+1,w
  7072  0B24  00C4               	movwf	___ftadd@f2+1
  7073  0B25  0822               	movf	?___ftmul+2,w
  7074  0B26  00C5               	movwf	___ftadd@f2+2
  7075  0B27  3181  211B  318A   	fcall	___ftadd
  7076  0B2A  0020               	movlb	0	; select bank0
  7077  0B2B  0840               	movf	?___ftadd,w
  7078  0B2C  00D4               	movwf	eval_poly@res
  7079  0B2D  0841               	movf	?___ftadd+1,w
  7080  0B2E  00D5               	movwf	eval_poly@res+1
  7081  0B2F  0842               	movf	?___ftadd+2,w
  7082  0B30  2AF0               	goto	L1
  7083  0B31                     l2180:	
  7084  0B31  0854               	movf	eval_poly@res,w
  7085  0B32  00CD               	movwf	?_eval_poly
  7086  0B33  0855               	movf	eval_poly@res+1,w
  7087  0B34  00CE               	movwf	?_eval_poly+1
  7088  0B35  0856               	movf	eval_poly@res+2,w
  7089  0B36  00CF               	movwf	?_eval_poly+2
  7090  0B37  0008               	return
  7091  0B38                     __end_of_eval_poly:	
  7092                           
  7093                           	psect	text5
  7094  0E81                     __ptext5:	
  7095 ;; *************** function ___ftmul *****************
  7096 ;; Defined at:
  7097 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftmul.c"
  7098 ;; Parameters:    Size  Location     Type
  7099 ;;  f1              3    0[BANK0 ] float 
  7100 ;;  f2              3    3[BANK0 ] float 
  7101 ;; Auto vars:     Size  Location     Type
  7102 ;;  f3_as_produc    3   11[BANK0 ] unsigned um
  7103 ;;  sign            1   15[BANK0 ] unsigned char 
  7104 ;;  cntr            1   14[BANK0 ] unsigned char 
  7105 ;;  exp             1   10[BANK0 ] unsigned char 
  7106 ;; Return value:  Size  Location     Type
  7107 ;;                  3    0[BANK0 ] float 
  7108 ;; Registers used:
  7109 ;;		wreg, status,2, status,0, pclath, cstack
  7110 ;; Tracked objects:
  7111 ;;		On entry : 0/0
  7112 ;;		On exit  : 0/0
  7113 ;;		Unchanged: 0/0
  7114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7115 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7116 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7117 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7118 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7119 ;;Total ram usage:       16 bytes
  7120 ;; Hardware stack levels used:    1
  7121 ;; Hardware stack levels required when called:    1
  7122 ;; This function calls:
  7123 ;;		___ftpack
  7124 ;; This function is called by:
  7125 ;;		_tempCalc
  7126 ;;		_main
  7127 ;;		_log
  7128 ;;		_eval_poly
  7129 ;; This function uses a non-reentrant model
  7130 ;;
  7131                           
  7132                           
  7133                           ;psect for function ___ftmul
  7134  0E81                     ___ftmul:	
  7135                           
  7136                           ;incstack = 0
  7137                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  7138  0E81  0020               	movlb	0	; select bank0
  7139  0E82  0820               	movf	___ftmul@f1,w
  7140  0E83  00A6               	movwf	??___ftmul
  7141  0E84  0821               	movf	___ftmul@f1+1,w
  7142  0E85  00A7               	movwf	??___ftmul+1
  7143  0E86  0822               	movf	___ftmul@f1+2,w
  7144  0E87  00A8               	movwf	??___ftmul+2
  7145  0E88  1003               	clrc
  7146  0E89  0D27               	rlf	??___ftmul+1,w
  7147  0E8A  0D28               	rlf	??___ftmul+2,w
  7148  0E8B  00A9               	movwf	??___ftmul+3
  7149  0E8C  0829               	movf	??___ftmul+3,w
  7150  0E8D  00AA               	movwf	___ftmul@exp
  7151  0E8E  082A               	movf	___ftmul@exp,w
  7152  0E8F  1D03               	btfss	3,2
  7153  0E90  2E98               	goto	l2048
  7154  0E91  3000               	movlw	0
  7155  0E92  00A0               	movwf	?___ftmul
  7156  0E93  3000               	movlw	0
  7157  0E94  00A1               	movwf	?___ftmul+1
  7158  0E95  3000               	movlw	0
  7159  0E96  00A2               	movwf	?___ftmul+2
  7160  0E97  0008               	return
  7161  0E98                     l2048:	
  7162  0E98  0823               	movf	___ftmul@f2,w
  7163  0E99  00A6               	movwf	??___ftmul
  7164  0E9A  0824               	movf	___ftmul@f2+1,w
  7165  0E9B  00A7               	movwf	??___ftmul+1
  7166  0E9C  0825               	movf	___ftmul@f2+2,w
  7167  0E9D  00A8               	movwf	??___ftmul+2
  7168  0E9E  1003               	clrc
  7169  0E9F  0D27               	rlf	??___ftmul+1,w
  7170  0EA0  0D28               	rlf	??___ftmul+2,w
  7171  0EA1  00A9               	movwf	??___ftmul+3
  7172  0EA2  0829               	movf	??___ftmul+3,w
  7173  0EA3  00AF               	movwf	___ftmul@sign
  7174  0EA4  082F               	movf	___ftmul@sign,w
  7175  0EA5  1D03               	btfss	3,2
  7176  0EA6  2EAE               	goto	l2054
  7177  0EA7  3000               	movlw	0
  7178  0EA8  00A0               	movwf	?___ftmul
  7179  0EA9  3000               	movlw	0
  7180  0EAA  00A1               	movwf	?___ftmul+1
  7181  0EAB  3000               	movlw	0
  7182  0EAC  00A2               	movwf	?___ftmul+2
  7183  0EAD  0008               	return
  7184  0EAE                     l2054:	
  7185  0EAE  082F               	movf	___ftmul@sign,w
  7186  0EAF  3E7B               	addlw	123
  7187  0EB0  00A6               	movwf	??___ftmul
  7188  0EB1  0826               	movf	??___ftmul,w
  7189  0EB2  07AA               	addwf	___ftmul@exp,f
  7190  0EB3  0820               	movf	___ftmul@f1,w
  7191  0EB4  00A6               	movwf	??___ftmul
  7192  0EB5  0821               	movf	___ftmul@f1+1,w
  7193  0EB6  00A7               	movwf	??___ftmul+1
  7194  0EB7  0822               	movf	___ftmul@f1+2,w
  7195  0EB8  00A8               	movwf	??___ftmul+2
  7196  0EB9  3010               	movlw	16
  7197  0EBA                     u2165:	
  7198  0EBA  36A8               	lsrf	??___ftmul+2,f
  7199  0EBB  0CA7               	rrf	??___ftmul+1,f
  7200  0EBC  0CA6               	rrf	??___ftmul,f
  7201  0EBD  0B89               	decfsz	9,f
  7202  0EBE  2EBA               	goto	u2165
  7203  0EBF  0826               	movf	??___ftmul,w
  7204  0EC0  00A9               	movwf	??___ftmul+3
  7205  0EC1  0829               	movf	??___ftmul+3,w
  7206  0EC2  00AF               	movwf	___ftmul@sign
  7207  0EC3  0823               	movf	___ftmul@f2,w
  7208  0EC4  00A6               	movwf	??___ftmul
  7209  0EC5  0824               	movf	___ftmul@f2+1,w
  7210  0EC6  00A7               	movwf	??___ftmul+1
  7211  0EC7  0825               	movf	___ftmul@f2+2,w
  7212  0EC8  00A8               	movwf	??___ftmul+2
  7213  0EC9  3010               	movlw	16
  7214  0ECA                     u2175:	
  7215  0ECA  36A8               	lsrf	??___ftmul+2,f
  7216  0ECB  0CA7               	rrf	??___ftmul+1,f
  7217  0ECC  0CA6               	rrf	??___ftmul,f
  7218  0ECD  0B89               	decfsz	9,f
  7219  0ECE  2ECA               	goto	u2175
  7220  0ECF  0826               	movf	??___ftmul,w
  7221  0ED0  00A9               	movwf	??___ftmul+3
  7222  0ED1  0829               	movf	??___ftmul+3,w
  7223  0ED2  06AF               	xorwf	___ftmul@sign,f
  7224  0ED3  3080               	movlw	128
  7225  0ED4  00A6               	movwf	??___ftmul
  7226  0ED5  0826               	movf	??___ftmul,w
  7227  0ED6  05AF               	andwf	___ftmul@sign,f
  7228  0ED7  17A1               	bsf	___ftmul@f1+1,7
  7229  0ED8  17A4               	bsf	___ftmul@f2+1,7
  7230  0ED9  30FF               	movlw	255
  7231  0EDA  05A3               	andwf	___ftmul@f2,f
  7232  0EDB  30FF               	movlw	255
  7233  0EDC  05A4               	andwf	___ftmul@f2+1,f
  7234  0EDD  3000               	movlw	0
  7235  0EDE  05A5               	andwf	___ftmul@f2+2,f
  7236  0EDF  3000               	movlw	0
  7237  0EE0  00AB               	movwf	___ftmul@f3_as_product
  7238  0EE1  3000               	movlw	0
  7239  0EE2  00AC               	movwf	___ftmul@f3_as_product+1
  7240  0EE3  3000               	movlw	0
  7241  0EE4  00AD               	movwf	___ftmul@f3_as_product+2
  7242  0EE5  3007               	movlw	7
  7243  0EE6  00A6               	movwf	??___ftmul
  7244  0EE7  0826               	movf	??___ftmul,w
  7245  0EE8  00AE               	movwf	___ftmul@cntr
  7246  0EE9                     l2066:	
  7247  0EE9  1C20               	btfss	___ftmul@f1,0
  7248  0EEA  2EF1               	goto	l2070
  7249  0EEB  0823               	movf	___ftmul@f2,w
  7250  0EEC  07AB               	addwf	___ftmul@f3_as_product,f
  7251  0EED  0824               	movf	___ftmul@f2+1,w
  7252  0EEE  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  7253  0EEF  0825               	movf	___ftmul@f2+2,w
  7254  0EF0  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  7255  0EF1                     l2070:	
  7256  0EF1  3001               	movlw	1
  7257  0EF2                     u2195:	
  7258  0EF2  36A2               	lsrf	___ftmul@f1+2,f
  7259  0EF3  0CA1               	rrf	___ftmul@f1+1,f
  7260  0EF4  0CA0               	rrf	___ftmul@f1,f
  7261  0EF5  0B89               	decfsz	9,f
  7262  0EF6  2EF2               	goto	u2195
  7263  0EF7  3001               	movlw	1
  7264  0EF8                     u2205:	
  7265  0EF8  35A3               	lslf	___ftmul@f2,f
  7266  0EF9  0DA4               	rlf	___ftmul@f2+1,f
  7267  0EFA  0DA5               	rlf	___ftmul@f2+2,f
  7268  0EFB  0B89               	decfsz	9,f
  7269  0EFC  2EF8               	goto	u2205
  7270  0EFD  3001               	movlw	1
  7271  0EFE  02AE               	subwf	___ftmul@cntr,f
  7272  0EFF  1D03               	btfss	3,2
  7273  0F00  2EE9               	goto	l2066
  7274  0F01  3009               	movlw	9
  7275  0F02  00A6               	movwf	??___ftmul
  7276  0F03  0826               	movf	??___ftmul,w
  7277  0F04  00AE               	movwf	___ftmul@cntr
  7278  0F05                     l2078:	
  7279  0F05  1C20               	btfss	___ftmul@f1,0
  7280  0F06  2F0D               	goto	l2082
  7281  0F07  0823               	movf	___ftmul@f2,w
  7282  0F08  07AB               	addwf	___ftmul@f3_as_product,f
  7283  0F09  0824               	movf	___ftmul@f2+1,w
  7284  0F0A  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  7285  0F0B  0825               	movf	___ftmul@f2+2,w
  7286  0F0C  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  7287  0F0D                     l2082:	
  7288  0F0D  3001               	movlw	1
  7289  0F0E                     u2235:	
  7290  0F0E  36A2               	lsrf	___ftmul@f1+2,f
  7291  0F0F  0CA1               	rrf	___ftmul@f1+1,f
  7292  0F10  0CA0               	rrf	___ftmul@f1,f
  7293  0F11  0B89               	decfsz	9,f
  7294  0F12  2F0E               	goto	u2235
  7295  0F13  3001               	movlw	1
  7296  0F14                     u2245:	
  7297  0F14  36AD               	lsrf	___ftmul@f3_as_product+2,f
  7298  0F15  0CAC               	rrf	___ftmul@f3_as_product+1,f
  7299  0F16  0CAB               	rrf	___ftmul@f3_as_product,f
  7300  0F17  0B89               	decfsz	9,f
  7301  0F18  2F14               	goto	u2245
  7302  0F19  3001               	movlw	1
  7303  0F1A  02AE               	subwf	___ftmul@cntr,f
  7304  0F1B  1D03               	btfss	3,2
  7305  0F1C  2F05               	goto	l2078
  7306  0F1D  082B               	movf	___ftmul@f3_as_product,w
  7307  0F1E  00F0               	movwf	___ftpack@arg
  7308  0F1F  082C               	movf	___ftmul@f3_as_product+1,w
  7309  0F20  00F1               	movwf	___ftpack@arg+1
  7310  0F21  082D               	movf	___ftmul@f3_as_product+2,w
  7311  0F22  00F2               	movwf	___ftpack@arg+2
  7312  0F23  082A               	movf	___ftmul@exp,w
  7313  0F24  00A6               	movwf	??___ftmul
  7314  0F25  0826               	movf	??___ftmul,w
  7315  0F26  00F3               	movwf	___ftpack@exp
  7316  0F27  082F               	movf	___ftmul@sign,w
  7317  0F28  00A7               	movwf	??___ftmul+1
  7318  0F29  0827               	movf	??___ftmul+1,w
  7319  0F2A  00F4               	movwf	___ftpack@sign
  7320  0F2B  318B  2338         	fcall	___ftpack
  7321  0F2D  0870               	movf	?___ftpack,w
  7322  0F2E  0020               	movlb	0	; select bank0
  7323  0F2F  00A0               	movwf	?___ftmul
  7324  0F30  0871               	movf	?___ftpack+1,w
  7325  0F31  00A1               	movwf	?___ftmul+1
  7326  0F32  0872               	movf	?___ftpack+2,w
  7327  0F33  00A2               	movwf	?___ftmul+2
  7328  0F34  0008               	return
  7329  0F35                     __end_of___ftmul:	
  7330                           
  7331                           	psect	text6
  7332  094B                     __ptext6:	
  7333 ;; *************** function ___ftge *****************
  7334 ;; Defined at:
  7335 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftge.c"
  7336 ;; Parameters:    Size  Location     Type
  7337 ;;  ff1             3    0[COMMON] float 
  7338 ;;  ff2             3    3[COMMON] float 
  7339 ;; Auto vars:     Size  Location     Type
  7340 ;;		None
  7341 ;; Return value:  Size  Location     Type
  7342 ;;		None               void
  7343 ;; Registers used:
  7344 ;;		wreg, status,2, status,0
  7345 ;; Tracked objects:
  7346 ;;		On entry : 0/0
  7347 ;;		On exit  : 0/0
  7348 ;;		Unchanged: 0/0
  7349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7350 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7352 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7353 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7354 ;;Total ram usage:        9 bytes
  7355 ;; Hardware stack levels used:    1
  7356 ;; This function calls:
  7357 ;;		Nothing
  7358 ;; This function is called by:
  7359 ;;		_log
  7360 ;; This function uses a non-reentrant model
  7361 ;;
  7362                           
  7363                           
  7364                           ;psect for function ___ftge
  7365  094B                     ___ftge:	
  7366                           
  7367                           ;incstack = 0
  7368                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  7369  094B  1FF2               	btfss	___ftge@ff1+2,7
  7370  094C  2961               	goto	l2138
  7371  094D  0970               	comf	___ftge@ff1,w
  7372  094E  00F6               	movwf	??___ftge
  7373  094F  0971               	comf	___ftge@ff1+1,w
  7374  0950  00F7               	movwf	??___ftge+1
  7375  0951  0972               	comf	___ftge@ff1+2,w
  7376  0952  00F8               	movwf	??___ftge+2
  7377  0953  0AF6               	incf	??___ftge,f
  7378  0954  1903               	skipnz
  7379  0955  0AF7               	incf	??___ftge+1,f
  7380  0956  1903               	skipnz
  7381  0957  0AF8               	incf	??___ftge+2,f
  7382  0958  3000               	movlw	0
  7383  0959  0776               	addwf	??___ftge,w
  7384  095A  00F0               	movwf	___ftge@ff1
  7385  095B  3000               	movlw	0
  7386  095C  3D77               	addwfc	??___ftge+1,w
  7387  095D  00F1               	movwf	___ftge@ff1+1
  7388  095E  3080               	movlw	128
  7389  095F  3D78               	addwfc	??___ftge+2,w
  7390  0960  00F2               	movwf	___ftge@ff1+2
  7391  0961                     l2138:	
  7392  0961  1FF5               	btfss	___ftge@ff2+2,7
  7393  0962  2977               	goto	l2142
  7394  0963  0973               	comf	___ftge@ff2,w
  7395  0964  00F6               	movwf	??___ftge
  7396  0965  0974               	comf	___ftge@ff2+1,w
  7397  0966  00F7               	movwf	??___ftge+1
  7398  0967  0975               	comf	___ftge@ff2+2,w
  7399  0968  00F8               	movwf	??___ftge+2
  7400  0969  0AF6               	incf	??___ftge,f
  7401  096A  1903               	skipnz
  7402  096B  0AF7               	incf	??___ftge+1,f
  7403  096C  1903               	skipnz
  7404  096D  0AF8               	incf	??___ftge+2,f
  7405  096E  3000               	movlw	0
  7406  096F  0776               	addwf	??___ftge,w
  7407  0970  00F3               	movwf	___ftge@ff2
  7408  0971  3000               	movlw	0
  7409  0972  3D77               	addwfc	??___ftge+1,w
  7410  0973  00F4               	movwf	___ftge@ff2+1
  7411  0974  3080               	movlw	128
  7412  0975  3D78               	addwfc	??___ftge+2,w
  7413  0976  00F5               	movwf	___ftge@ff2+2
  7414  0977                     l2142:	
  7415  0977  3080               	movlw	128
  7416  0978  06F2               	xorwf	___ftge@ff1+2,f
  7417  0979  3080               	movlw	128
  7418  097A  06F5               	xorwf	___ftge@ff2+2,f
  7419  097B  0875               	movf	___ftge@ff2+2,w
  7420  097C  0272               	subwf	___ftge@ff1+2,w
  7421  097D  1D03               	skipz
  7422  097E  0008               	return
  7423  097F  0874               	movf	___ftge@ff2+1,w
  7424  0980  0271               	subwf	___ftge@ff1+1,w
  7425  0981  1D03               	skipz
  7426  0982  0008               	return
  7427  0983  0873               	movf	___ftge@ff2,w
  7428  0984  0270               	subwf	___ftge@ff1,w
  7429  0985  0008               	return
  7430  0986                     __end_of___ftge:	
  7431                           
  7432                           	psect	text7
  7433  08A5                     __ptext7:	
  7434 ;; *************** function ___awtoft *****************
  7435 ;; Defined at:
  7436 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awtoft.c"
  7437 ;; Parameters:    Size  Location     Type
  7438 ;;  c               2    8[COMMON] int 
  7439 ;; Auto vars:     Size  Location     Type
  7440 ;;  sign            1   13[COMMON] unsigned char 
  7441 ;; Return value:  Size  Location     Type
  7442 ;;                  3    8[COMMON] float 
  7443 ;; Registers used:
  7444 ;;		wreg, status,2, status,0, pclath, cstack
  7445 ;; Tracked objects:
  7446 ;;		On entry : 0/0
  7447 ;;		On exit  : 0/0
  7448 ;;		Unchanged: 0/0
  7449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7450 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7451 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7452 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7453 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7454 ;;Total ram usage:        6 bytes
  7455 ;; Hardware stack levels used:    1
  7456 ;; Hardware stack levels required when called:    1
  7457 ;; This function calls:
  7458 ;;		___ftpack
  7459 ;; This function is called by:
  7460 ;;		_tempCalc
  7461 ;;		_log
  7462 ;; This function uses a non-reentrant model
  7463 ;;
  7464                           
  7465                           
  7466                           ;psect for function ___awtoft
  7467  08A5                     ___awtoft:	
  7468                           
  7469                           ;incstack = 0
  7470                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  7471  08A5  01FD               	clrf	___awtoft@sign
  7472  08A6  1FF9               	btfss	___awtoft@c+1,7
  7473  08A7  28AF               	goto	l2130
  7474  08A8  09F8               	comf	___awtoft@c,f
  7475  08A9  09F9               	comf	___awtoft@c+1,f
  7476  08AA  0AF8               	incf	___awtoft@c,f
  7477  08AB  1903               	skipnz
  7478  08AC  0AF9               	incf	___awtoft@c+1,f
  7479  08AD  01FD               	clrf	___awtoft@sign
  7480  08AE  0AFD               	incf	___awtoft@sign,f
  7481  08AF                     l2130:	
  7482  08AF  0878               	movf	___awtoft@c,w
  7483  08B0  00F0               	movwf	___ftpack@arg
  7484  08B1  0879               	movf	___awtoft@c+1,w
  7485  08B2  00F1               	movwf	___ftpack@arg+1
  7486  08B3  01F2               	clrf	___ftpack@arg+2
  7487  08B4  308E               	movlw	142
  7488  08B5  00FB               	movwf	??___awtoft
  7489  08B6  087B               	movf	??___awtoft,w
  7490  08B7  00F3               	movwf	___ftpack@exp
  7491  08B8  087D               	movf	___awtoft@sign,w
  7492  08B9  00FC               	movwf	??___awtoft+1
  7493  08BA  087C               	movf	??___awtoft+1,w
  7494  08BB  00F4               	movwf	___ftpack@sign
  7495  08BC  318B  2338         	fcall	___ftpack
  7496  08BE  0870               	movf	?___ftpack,w
  7497  08BF  00F8               	movwf	?___awtoft
  7498  08C0  0871               	movf	?___ftpack+1,w
  7499  08C1  00F9               	movwf	?___awtoft+1
  7500  08C2  0872               	movf	?___ftpack+2,w
  7501  08C3  00FA               	movwf	?___awtoft+2
  7502  08C4  0008               	return
  7503  08C5                     __end_of___awtoft:	
  7504                           
  7505                           	psect	text8
  7506  0887                     __ptext8:	
  7507 ;; *************** function ___ftsub *****************
  7508 ;; Defined at:
  7509 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftsub.c"
  7510 ;; Parameters:    Size  Location     Type
  7511 ;;  f2              3   45[BANK0 ] float 
  7512 ;;  f1              3   48[BANK0 ] float 
  7513 ;; Auto vars:     Size  Location     Type
  7514 ;;		None
  7515 ;; Return value:  Size  Location     Type
  7516 ;;                  3   45[BANK0 ] float 
  7517 ;; Registers used:
  7518 ;;		wreg, status,2, status,0, pclath, cstack
  7519 ;; Tracked objects:
  7520 ;;		On entry : 0/0
  7521 ;;		On exit  : 0/0
  7522 ;;		Unchanged: 0/0
  7523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7524 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7527 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7528 ;;Total ram usage:        6 bytes
  7529 ;; Hardware stack levels used:    1
  7530 ;; Hardware stack levels required when called:    2
  7531 ;; This function calls:
  7532 ;;		___ftadd
  7533 ;; This function is called by:
  7534 ;;		_tempCalc
  7535 ;; This function uses a non-reentrant model
  7536 ;;
  7537                           
  7538                           
  7539                           ;psect for function ___ftsub
  7540  0887                     ___ftsub:	
  7541                           
  7542                           ;incstack = 0
  7543                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  7544  0887  0020               	movlb	0	; select bank0
  7545  0888  084F               	movf	___ftsub@f2+2,w
  7546  0889  044E               	iorwf	___ftsub@f2+1,w
  7547  088A  044D               	iorwf	___ftsub@f2,w
  7548  088B  1903               	skipnz
  7549  088C  288F               	goto	l2514
  7550  088D  3080               	movlw	128
  7551  088E  06CF               	xorwf	___ftsub@f2+2,f
  7552  088F                     l2514:	
  7553  088F  0850               	movf	___ftsub@f1,w
  7554  0890  00C0               	movwf	___ftadd@f1
  7555  0891  0851               	movf	___ftsub@f1+1,w
  7556  0892  00C1               	movwf	___ftadd@f1+1
  7557  0893  0852               	movf	___ftsub@f1+2,w
  7558  0894  00C2               	movwf	___ftadd@f1+2
  7559  0895  084D               	movf	___ftsub@f2,w
  7560  0896  00C3               	movwf	___ftadd@f2
  7561  0897  084E               	movf	___ftsub@f2+1,w
  7562  0898  00C4               	movwf	___ftadd@f2+1
  7563  0899  084F               	movf	___ftsub@f2+2,w
  7564  089A  00C5               	movwf	___ftadd@f2+2
  7565  089B  3181  211B         	fcall	___ftadd
  7566  089D  0020               	movlb	0	; select bank0
  7567  089E  0840               	movf	?___ftadd,w
  7568  089F  00CD               	movwf	?___ftsub
  7569  08A0  0841               	movf	?___ftadd+1,w
  7570  08A1  00CE               	movwf	?___ftsub+1
  7571  08A2  0842               	movf	?___ftadd+2,w
  7572  08A3  00CF               	movwf	?___ftsub+2
  7573  08A4  0008               	return
  7574  08A5                     __end_of___ftsub:	
  7575                           
  7576                           	psect	text9
  7577  011B                     __ptext9:	
  7578 ;; *************** function ___ftadd *****************
  7579 ;; Defined at:
  7580 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftadd.c"
  7581 ;; Parameters:    Size  Location     Type
  7582 ;;  f1              3   32[BANK0 ] float 
  7583 ;;  f2              3   35[BANK0 ] float 
  7584 ;; Auto vars:     Size  Location     Type
  7585 ;;  exp1            1   44[BANK0 ] unsigned char 
  7586 ;;  exp2            1   43[BANK0 ] unsigned char 
  7587 ;;  sign            1   42[BANK0 ] unsigned char 
  7588 ;; Return value:  Size  Location     Type
  7589 ;;                  3   32[BANK0 ] float 
  7590 ;; Registers used:
  7591 ;;		wreg, status,2, status,0, pclath, cstack
  7592 ;; Tracked objects:
  7593 ;;		On entry : 0/0
  7594 ;;		On exit  : 0/0
  7595 ;;		Unchanged: 0/0
  7596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7597 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7598 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7599 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7600 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7601 ;;Total ram usage:       13 bytes
  7602 ;; Hardware stack levels used:    1
  7603 ;; Hardware stack levels required when called:    1
  7604 ;; This function calls:
  7605 ;;		___ftpack
  7606 ;; This function is called by:
  7607 ;;		_tempCalc
  7608 ;;		_main
  7609 ;;		___ftsub
  7610 ;;		_log
  7611 ;;		_eval_poly
  7612 ;; This function uses a non-reentrant model
  7613 ;;
  7614                           
  7615                           
  7616                           ;psect for function ___ftadd
  7617  011B                     ___ftadd:	
  7618                           
  7619                           ;incstack = 0
  7620                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  7621  011B  0020               	movlb	0	; select bank0
  7622  011C  0840               	movf	___ftadd@f1,w
  7623  011D  00C6               	movwf	??___ftadd
  7624  011E  0841               	movf	___ftadd@f1+1,w
  7625  011F  00C7               	movwf	??___ftadd+1
  7626  0120  0842               	movf	___ftadd@f1+2,w
  7627  0121  00C8               	movwf	??___ftadd+2
  7628  0122  1003               	clrc
  7629  0123  0D47               	rlf	??___ftadd+1,w
  7630  0124  0D48               	rlf	??___ftadd+2,w
  7631  0125  00C9               	movwf	??___ftadd+3
  7632  0126  0849               	movf	??___ftadd+3,w
  7633  0127  00CC               	movwf	___ftadd@exp1
  7634  0128  0843               	movf	___ftadd@f2,w
  7635  0129  00C6               	movwf	??___ftadd
  7636  012A  0844               	movf	___ftadd@f2+1,w
  7637  012B  00C7               	movwf	??___ftadd+1
  7638  012C  0845               	movf	___ftadd@f2+2,w
  7639  012D  00C8               	movwf	??___ftadd+2
  7640  012E  1003               	clrc
  7641  012F  0D47               	rlf	??___ftadd+1,w
  7642  0130  0D48               	rlf	??___ftadd+2,w
  7643  0131  00C9               	movwf	??___ftadd+3
  7644  0132  0849               	movf	??___ftadd+3,w
  7645  0133  00CB               	movwf	___ftadd@exp2
  7646  0134  084C               	movf	___ftadd@exp1,w
  7647  0135  1903               	btfsc	3,2
  7648  0136  2943               	goto	l1978
  7649  0137  084B               	movf	___ftadd@exp2,w
  7650  0138  024C               	subwf	___ftadd@exp1,w
  7651  0139  1803               	skipnc
  7652  013A  294A               	goto	l1982
  7653  013B  034C               	decf	___ftadd@exp1,w
  7654  013C  3AFF               	xorlw	255
  7655  013D  074B               	addwf	___ftadd@exp2,w
  7656  013E  00C6               	movwf	??___ftadd
  7657  013F  3019               	movlw	25
  7658  0140  0246               	subwf	??___ftadd,w
  7659  0141  1C03               	skipc
  7660  0142  294A               	goto	l1982
  7661  0143                     l1978:	
  7662  0143  0843               	movf	___ftadd@f2,w
  7663  0144  00C0               	movwf	?___ftadd
  7664  0145  0844               	movf	___ftadd@f2+1,w
  7665  0146  00C1               	movwf	?___ftadd+1
  7666  0147  0845               	movf	___ftadd@f2+2,w
  7667  0148  00C2               	movwf	?___ftadd+2
  7668  0149  0008               	return
  7669  014A                     l1982:	
  7670  014A  084B               	movf	___ftadd@exp2,w
  7671  014B  1903               	btfsc	3,2
  7672  014C  0008               	return
  7673  014D  084C               	movf	___ftadd@exp1,w
  7674  014E  024B               	subwf	___ftadd@exp2,w
  7675  014F  1803               	skipnc
  7676  0150  2959               	goto	l1988
  7677  0151  034B               	decf	___ftadd@exp2,w
  7678  0152  3AFF               	xorlw	255
  7679  0153  074C               	addwf	___ftadd@exp1,w
  7680  0154  00C6               	movwf	??___ftadd
  7681  0155  3019               	movlw	25
  7682  0156  0246               	subwf	??___ftadd,w
  7683  0157  1803               	btfsc	3,0
  7684  0158  0008               	return
  7685  0159                     l1988:	
  7686  0159  3006               	movlw	6
  7687  015A  00C6               	movwf	??___ftadd
  7688  015B  0846               	movf	??___ftadd,w
  7689  015C  00CA               	movwf	___ftadd@sign
  7690  015D  1BC2               	btfsc	___ftadd@f1+2,7
  7691  015E  17CA               	bsf	___ftadd@sign,7
  7692  015F  1BC5               	btfsc	___ftadd@f2+2,7
  7693  0160  174A               	bsf	___ftadd@sign,6
  7694  0161  17C1               	bsf	___ftadd@f1+1,7
  7695  0162  30FF               	movlw	255
  7696  0163  05C0               	andwf	___ftadd@f1,f
  7697  0164  30FF               	movlw	255
  7698  0165  05C1               	andwf	___ftadd@f1+1,f
  7699  0166  3000               	movlw	0
  7700  0167  05C2               	andwf	___ftadd@f1+2,f
  7701  0168  17C4               	bsf	___ftadd@f2+1,7
  7702  0169  30FF               	movlw	255
  7703  016A  05C3               	andwf	___ftadd@f2,f
  7704  016B  30FF               	movlw	255
  7705  016C  05C4               	andwf	___ftadd@f2+1,f
  7706  016D  3000               	movlw	0
  7707  016E  05C5               	andwf	___ftadd@f2+2,f
  7708  016F  084B               	movf	___ftadd@exp2,w
  7709  0170  024C               	subwf	___ftadd@exp1,w
  7710  0171  1803               	skipnc
  7711  0172  2995               	goto	l2010
  7712  0173                     l2000:	
  7713  0173  3001               	movlw	1
  7714  0174                     u2005:	
  7715  0174  35C3               	lslf	___ftadd@f2,f
  7716  0175  0DC4               	rlf	___ftadd@f2+1,f
  7717  0176  0DC5               	rlf	___ftadd@f2+2,f
  7718  0177  0B89               	decfsz	9,f
  7719  0178  2974               	goto	u2005
  7720  0179  3001               	movlw	1
  7721  017A  02CB               	subwf	___ftadd@exp2,f
  7722  017B  084B               	movf	___ftadd@exp2,w
  7723  017C  064C               	xorwf	___ftadd@exp1,w
  7724  017D  1903               	skipnz
  7725  017E  2990               	goto	l2008
  7726  017F  3001               	movlw	1
  7727  0180  02CA               	subwf	___ftadd@sign,f
  7728  0181  084A               	movf	___ftadd@sign,w
  7729  0182  3907               	andlw	7
  7730  0183  1903               	btfsc	3,2
  7731  0184  2990               	goto	l2008
  7732  0185  2973               	goto	l2000
  7733  0186                     l2006:	
  7734  0186  3001               	movlw	1
  7735  0187                     u2035:	
  7736  0187  36C2               	lsrf	___ftadd@f1+2,f
  7737  0188  0CC1               	rrf	___ftadd@f1+1,f
  7738  0189  0CC0               	rrf	___ftadd@f1,f
  7739  018A  0B89               	decfsz	9,f
  7740  018B  2987               	goto	u2035
  7741  018C  3001               	movlw	1
  7742  018D  00C6               	movwf	??___ftadd
  7743  018E  0846               	movf	??___ftadd,w
  7744  018F  07CC               	addwf	___ftadd@exp1,f
  7745  0190                     l2008:	
  7746  0190  084C               	movf	___ftadd@exp1,w
  7747  0191  064B               	xorwf	___ftadd@exp2,w
  7748  0192  1903               	btfsc	3,2
  7749  0193  29BA               	goto	l592
  7750  0194  2986               	goto	l2006
  7751  0195                     l2010:	
  7752  0195  084C               	movf	___ftadd@exp1,w
  7753  0196  024B               	subwf	___ftadd@exp2,w
  7754  0197  1803               	skipnc
  7755  0198  29BA               	goto	l592
  7756  0199                     l2012:	
  7757  0199  3001               	movlw	1
  7758  019A                     u2065:	
  7759  019A  35C0               	lslf	___ftadd@f1,f
  7760  019B  0DC1               	rlf	___ftadd@f1+1,f
  7761  019C  0DC2               	rlf	___ftadd@f1+2,f
  7762  019D  0B89               	decfsz	9,f
  7763  019E  299A               	goto	u2065
  7764  019F  3001               	movlw	1
  7765  01A0  02CC               	subwf	___ftadd@exp1,f
  7766  01A1  084B               	movf	___ftadd@exp2,w
  7767  01A2  064C               	xorwf	___ftadd@exp1,w
  7768  01A3  1903               	skipnz
  7769  01A4  29B6               	goto	l2020
  7770  01A5  3001               	movlw	1
  7771  01A6  02CA               	subwf	___ftadd@sign,f
  7772  01A7  084A               	movf	___ftadd@sign,w
  7773  01A8  3907               	andlw	7
  7774  01A9  1903               	btfsc	3,2
  7775  01AA  29B6               	goto	l2020
  7776  01AB  2999               	goto	l2012
  7777  01AC                     l2018:	
  7778  01AC  3001               	movlw	1
  7779  01AD                     u2095:	
  7780  01AD  36C5               	lsrf	___ftadd@f2+2,f
  7781  01AE  0CC4               	rrf	___ftadd@f2+1,f
  7782  01AF  0CC3               	rrf	___ftadd@f2,f
  7783  01B0  0B89               	decfsz	9,f
  7784  01B1  29AD               	goto	u2095
  7785  01B2  3001               	movlw	1
  7786  01B3  00C6               	movwf	??___ftadd
  7787  01B4  0846               	movf	??___ftadd,w
  7788  01B5  07CB               	addwf	___ftadd@exp2,f
  7789  01B6                     l2020:	
  7790  01B6  084C               	movf	___ftadd@exp1,w
  7791  01B7  064B               	xorwf	___ftadd@exp2,w
  7792  01B8  1D03               	skipz
  7793  01B9  29AC               	goto	l2018
  7794  01BA                     l592:	
  7795  01BA  1FCA               	btfss	___ftadd@sign,7
  7796  01BB  29CC               	goto	l2024
  7797  01BC  30FF               	movlw	255
  7798  01BD  06C0               	xorwf	___ftadd@f1,f
  7799  01BE  30FF               	movlw	255
  7800  01BF  06C1               	xorwf	___ftadd@f1+1,f
  7801  01C0  30FF               	movlw	255
  7802  01C1  06C2               	xorwf	___ftadd@f1+2,f
  7803  01C2  3001               	movlw	1
  7804  01C3  07C0               	addwf	___ftadd@f1,f
  7805  01C4  3000               	movlw	0
  7806  01C5  1803               	skipnc
  7807  01C6  3001               	movlw	1
  7808  01C7  07C1               	addwf	___ftadd@f1+1,f
  7809  01C8  3000               	movlw	0
  7810  01C9  1803               	skipnc
  7811  01CA  3001               	movlw	1
  7812  01CB  07C2               	addwf	___ftadd@f1+2,f
  7813  01CC                     l2024:	
  7814  01CC  1F4A               	btfss	___ftadd@sign,6
  7815  01CD  29DE               	goto	l2028
  7816  01CE  30FF               	movlw	255
  7817  01CF  06C3               	xorwf	___ftadd@f2,f
  7818  01D0  30FF               	movlw	255
  7819  01D1  06C4               	xorwf	___ftadd@f2+1,f
  7820  01D2  30FF               	movlw	255
  7821  01D3  06C5               	xorwf	___ftadd@f2+2,f
  7822  01D4  3001               	movlw	1
  7823  01D5  07C3               	addwf	___ftadd@f2,f
  7824  01D6  3000               	movlw	0
  7825  01D7  1803               	skipnc
  7826  01D8  3001               	movlw	1
  7827  01D9  07C4               	addwf	___ftadd@f2+1,f
  7828  01DA  3000               	movlw	0
  7829  01DB  1803               	skipnc
  7830  01DC  3001               	movlw	1
  7831  01DD  07C5               	addwf	___ftadd@f2+2,f
  7832  01DE                     l2028:	
  7833  01DE  01CA               	clrf	___ftadd@sign
  7834  01DF  0840               	movf	___ftadd@f1,w
  7835  01E0  07C3               	addwf	___ftadd@f2,f
  7836  01E1  0841               	movf	___ftadd@f1+1,w
  7837  01E2  3DC4               	addwfc	___ftadd@f2+1,f
  7838  01E3  0842               	movf	___ftadd@f1+2,w
  7839  01E4  3DC5               	addwfc	___ftadd@f2+2,f
  7840  01E5  1FC5               	btfss	___ftadd@f2+2,7
  7841  01E6  29F9               	goto	l2038
  7842  01E7  30FF               	movlw	255
  7843  01E8  06C3               	xorwf	___ftadd@f2,f
  7844  01E9  30FF               	movlw	255
  7845  01EA  06C4               	xorwf	___ftadd@f2+1,f
  7846  01EB  30FF               	movlw	255
  7847  01EC  06C5               	xorwf	___ftadd@f2+2,f
  7848  01ED  3001               	movlw	1
  7849  01EE  07C3               	addwf	___ftadd@f2,f
  7850  01EF  3000               	movlw	0
  7851  01F0  1803               	skipnc
  7852  01F1  3001               	movlw	1
  7853  01F2  07C4               	addwf	___ftadd@f2+1,f
  7854  01F3  3000               	movlw	0
  7855  01F4  1803               	skipnc
  7856  01F5  3001               	movlw	1
  7857  01F6  07C5               	addwf	___ftadd@f2+2,f
  7858  01F7  01CA               	clrf	___ftadd@sign
  7859  01F8  0ACA               	incf	___ftadd@sign,f
  7860  01F9                     l2038:	
  7861  01F9  0843               	movf	___ftadd@f2,w
  7862  01FA  00F0               	movwf	___ftpack@arg
  7863  01FB  0844               	movf	___ftadd@f2+1,w
  7864  01FC  00F1               	movwf	___ftpack@arg+1
  7865  01FD  0845               	movf	___ftadd@f2+2,w
  7866  01FE  00F2               	movwf	___ftpack@arg+2
  7867  01FF  084C               	movf	___ftadd@exp1,w
  7868  0200  00C6               	movwf	??___ftadd
  7869  0201  0846               	movf	??___ftadd,w
  7870  0202  00F3               	movwf	___ftpack@exp
  7871  0203  084A               	movf	___ftadd@sign,w
  7872  0204  00C7               	movwf	??___ftadd+1
  7873  0205  0847               	movf	??___ftadd+1,w
  7874  0206  00F4               	movwf	___ftpack@sign
  7875  0207  318B  2338         	fcall	___ftpack
  7876  0209  0870               	movf	?___ftpack,w
  7877  020A  0020               	movlb	0	; select bank0
  7878  020B  00C0               	movwf	?___ftadd
  7879  020C  0871               	movf	?___ftpack+1,w
  7880  020D  00C1               	movwf	?___ftadd+1
  7881  020E  0872               	movf	?___ftpack+2,w
  7882  020F  00C2               	movwf	?___ftadd+2
  7883  0210  0008               	return
  7884  0211                     __end_of___ftadd:	
  7885                           
  7886                           	psect	text10
  7887  0D2B                     __ptext10:	
  7888 ;; *************** function ___ftdiv *****************
  7889 ;; Defined at:
  7890 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftdiv.c"
  7891 ;; Parameters:    Size  Location     Type
  7892 ;;  f2              3   16[BANK0 ] float 
  7893 ;;  f1              3   19[BANK0 ] float 
  7894 ;; Auto vars:     Size  Location     Type
  7895 ;;  f3              3   27[BANK0 ] float 
  7896 ;;  sign            1   31[BANK0 ] unsigned char 
  7897 ;;  exp             1   30[BANK0 ] unsigned char 
  7898 ;;  cntr            1   26[BANK0 ] unsigned char 
  7899 ;; Return value:  Size  Location     Type
  7900 ;;                  3   16[BANK0 ] float 
  7901 ;; Registers used:
  7902 ;;		wreg, status,2, status,0, pclath, cstack
  7903 ;; Tracked objects:
  7904 ;;		On entry : 0/0
  7905 ;;		On exit  : 0/0
  7906 ;;		Unchanged: 0/0
  7907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7908 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7909 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7910 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7911 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7912 ;;Total ram usage:       16 bytes
  7913 ;; Hardware stack levels used:    1
  7914 ;; Hardware stack levels required when called:    1
  7915 ;; This function calls:
  7916 ;;		___ftpack
  7917 ;; This function is called by:
  7918 ;;		_tempCalc
  7919 ;;		_main
  7920 ;; This function uses a non-reentrant model
  7921 ;;
  7922                           
  7923                           
  7924                           ;psect for function ___ftdiv
  7925  0D2B                     ___ftdiv:	
  7926                           
  7927                           ;incstack = 0
  7928                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  7929  0D2B  0020               	movlb	0	; select bank0
  7930  0D2C  0833               	movf	___ftdiv@f1,w
  7931  0D2D  00B6               	movwf	??___ftdiv
  7932  0D2E  0834               	movf	___ftdiv@f1+1,w
  7933  0D2F  00B7               	movwf	??___ftdiv+1
  7934  0D30  0835               	movf	___ftdiv@f1+2,w
  7935  0D31  00B8               	movwf	??___ftdiv+2
  7936  0D32  1003               	clrc
  7937  0D33  0D37               	rlf	??___ftdiv+1,w
  7938  0D34  0D38               	rlf	??___ftdiv+2,w
  7939  0D35  00B9               	movwf	??___ftdiv+3
  7940  0D36  0839               	movf	??___ftdiv+3,w
  7941  0D37  00BE               	movwf	___ftdiv@exp
  7942  0D38  083E               	movf	___ftdiv@exp,w
  7943  0D39  1D03               	btfss	3,2
  7944  0D3A  2D42               	goto	l2474
  7945  0D3B  3000               	movlw	0
  7946  0D3C  00B0               	movwf	?___ftdiv
  7947  0D3D  3000               	movlw	0
  7948  0D3E  00B1               	movwf	?___ftdiv+1
  7949  0D3F  3000               	movlw	0
  7950  0D40  00B2               	movwf	?___ftdiv+2
  7951  0D41  0008               	return
  7952  0D42                     l2474:	
  7953  0D42  0830               	movf	___ftdiv@f2,w
  7954  0D43  00B6               	movwf	??___ftdiv
  7955  0D44  0831               	movf	___ftdiv@f2+1,w
  7956  0D45  00B7               	movwf	??___ftdiv+1
  7957  0D46  0832               	movf	___ftdiv@f2+2,w
  7958  0D47  00B8               	movwf	??___ftdiv+2
  7959  0D48  1003               	clrc
  7960  0D49  0D37               	rlf	??___ftdiv+1,w
  7961  0D4A  0D38               	rlf	??___ftdiv+2,w
  7962  0D4B  00B9               	movwf	??___ftdiv+3
  7963  0D4C  0839               	movf	??___ftdiv+3,w
  7964  0D4D  00BF               	movwf	___ftdiv@sign
  7965  0D4E  083F               	movf	___ftdiv@sign,w
  7966  0D4F  1D03               	btfss	3,2
  7967  0D50  2D58               	goto	l2480
  7968  0D51  3000               	movlw	0
  7969  0D52  00B0               	movwf	?___ftdiv
  7970  0D53  3000               	movlw	0
  7971  0D54  00B1               	movwf	?___ftdiv+1
  7972  0D55  3000               	movlw	0
  7973  0D56  00B2               	movwf	?___ftdiv+2
  7974  0D57  0008               	return
  7975  0D58                     l2480:	
  7976  0D58  3000               	movlw	0
  7977  0D59  00BB               	movwf	___ftdiv@f3
  7978  0D5A  3000               	movlw	0
  7979  0D5B  00BC               	movwf	___ftdiv@f3+1
  7980  0D5C  3000               	movlw	0
  7981  0D5D  00BD               	movwf	___ftdiv@f3+2
  7982  0D5E  3089               	movlw	137
  7983  0D5F  073F               	addwf	___ftdiv@sign,w
  7984  0D60  00B6               	movwf	??___ftdiv
  7985  0D61  0836               	movf	??___ftdiv,w
  7986  0D62  02BE               	subwf	___ftdiv@exp,f
  7987  0D63  0833               	movf	___ftdiv@f1,w
  7988  0D64  00B6               	movwf	??___ftdiv
  7989  0D65  0834               	movf	___ftdiv@f1+1,w
  7990  0D66  00B7               	movwf	??___ftdiv+1
  7991  0D67  0835               	movf	___ftdiv@f1+2,w
  7992  0D68  00B8               	movwf	??___ftdiv+2
  7993  0D69  3010               	movlw	16
  7994  0D6A                     u2715:	
  7995  0D6A  36B8               	lsrf	??___ftdiv+2,f
  7996  0D6B  0CB7               	rrf	??___ftdiv+1,f
  7997  0D6C  0CB6               	rrf	??___ftdiv,f
  7998  0D6D  0B89               	decfsz	9,f
  7999  0D6E  2D6A               	goto	u2715
  8000  0D6F  0836               	movf	??___ftdiv,w
  8001  0D70  00B9               	movwf	??___ftdiv+3
  8002  0D71  0839               	movf	??___ftdiv+3,w
  8003  0D72  00BF               	movwf	___ftdiv@sign
  8004  0D73  0830               	movf	___ftdiv@f2,w
  8005  0D74  00B6               	movwf	??___ftdiv
  8006  0D75  0831               	movf	___ftdiv@f2+1,w
  8007  0D76  00B7               	movwf	??___ftdiv+1
  8008  0D77  0832               	movf	___ftdiv@f2+2,w
  8009  0D78  00B8               	movwf	??___ftdiv+2
  8010  0D79  3010               	movlw	16
  8011  0D7A                     u2725:	
  8012  0D7A  36B8               	lsrf	??___ftdiv+2,f
  8013  0D7B  0CB7               	rrf	??___ftdiv+1,f
  8014  0D7C  0CB6               	rrf	??___ftdiv,f
  8015  0D7D  0B89               	decfsz	9,f
  8016  0D7E  2D7A               	goto	u2725
  8017  0D7F  0836               	movf	??___ftdiv,w
  8018  0D80  00B9               	movwf	??___ftdiv+3
  8019  0D81  0839               	movf	??___ftdiv+3,w
  8020  0D82  06BF               	xorwf	___ftdiv@sign,f
  8021  0D83  3080               	movlw	128
  8022  0D84  00B6               	movwf	??___ftdiv
  8023  0D85  0836               	movf	??___ftdiv,w
  8024  0D86  05BF               	andwf	___ftdiv@sign,f
  8025  0D87  17B4               	bsf	___ftdiv@f1+1,7
  8026  0D88  30FF               	movlw	255
  8027  0D89  05B3               	andwf	___ftdiv@f1,f
  8028  0D8A  30FF               	movlw	255
  8029  0D8B  05B4               	andwf	___ftdiv@f1+1,f
  8030  0D8C  3000               	movlw	0
  8031  0D8D  05B5               	andwf	___ftdiv@f1+2,f
  8032  0D8E  17B1               	bsf	___ftdiv@f2+1,7
  8033  0D8F  30FF               	movlw	255
  8034  0D90  05B0               	andwf	___ftdiv@f2,f
  8035  0D91  30FF               	movlw	255
  8036  0D92  05B1               	andwf	___ftdiv@f2+1,f
  8037  0D93  3000               	movlw	0
  8038  0D94  05B2               	andwf	___ftdiv@f2+2,f
  8039  0D95  3018               	movlw	24
  8040  0D96  00B6               	movwf	??___ftdiv
  8041  0D97  0836               	movf	??___ftdiv,w
  8042  0D98  00BA               	movwf	___ftdiv@cntr
  8043  0D99                     l2494:	
  8044  0D99  3001               	movlw	1
  8045  0D9A                     u2735:	
  8046  0D9A  35BB               	lslf	___ftdiv@f3,f
  8047  0D9B  0DBC               	rlf	___ftdiv@f3+1,f
  8048  0D9C  0DBD               	rlf	___ftdiv@f3+2,f
  8049  0D9D  0B89               	decfsz	9,f
  8050  0D9E  2D9A               	goto	u2735
  8051  0D9F  0832               	movf	___ftdiv@f2+2,w
  8052  0DA0  0235               	subwf	___ftdiv@f1+2,w
  8053  0DA1  1D03               	skipz
  8054  0DA2  2DA9               	goto	u2745
  8055  0DA3  0831               	movf	___ftdiv@f2+1,w
  8056  0DA4  0234               	subwf	___ftdiv@f1+1,w
  8057  0DA5  1D03               	skipz
  8058  0DA6  2DA9               	goto	u2745
  8059  0DA7  0830               	movf	___ftdiv@f2,w
  8060  0DA8  0233               	subwf	___ftdiv@f1,w
  8061  0DA9                     u2745:	
  8062  0DA9  1C03               	skipc
  8063  0DAA  2DB2               	goto	l2502
  8064  0DAB  0830               	movf	___ftdiv@f2,w
  8065  0DAC  02B3               	subwf	___ftdiv@f1,f
  8066  0DAD  0831               	movf	___ftdiv@f2+1,w
  8067  0DAE  3BB4               	subwfb	___ftdiv@f1+1,f
  8068  0DAF  0832               	movf	___ftdiv@f2+2,w
  8069  0DB0  3BB5               	subwfb	___ftdiv@f1+2,f
  8070  0DB1  143B               	bsf	___ftdiv@f3,0
  8071  0DB2                     l2502:	
  8072  0DB2  3001               	movlw	1
  8073  0DB3                     u2755:	
  8074  0DB3  35B3               	lslf	___ftdiv@f1,f
  8075  0DB4  0DB4               	rlf	___ftdiv@f1+1,f
  8076  0DB5  0DB5               	rlf	___ftdiv@f1+2,f
  8077  0DB6  0B89               	decfsz	9,f
  8078  0DB7  2DB3               	goto	u2755
  8079  0DB8  3001               	movlw	1
  8080  0DB9  02BA               	subwf	___ftdiv@cntr,f
  8081  0DBA  1D03               	btfss	3,2
  8082  0DBB  2D99               	goto	l2494
  8083  0DBC  083B               	movf	___ftdiv@f3,w
  8084  0DBD  00F0               	movwf	___ftpack@arg
  8085  0DBE  083C               	movf	___ftdiv@f3+1,w
  8086  0DBF  00F1               	movwf	___ftpack@arg+1
  8087  0DC0  083D               	movf	___ftdiv@f3+2,w
  8088  0DC1  00F2               	movwf	___ftpack@arg+2
  8089  0DC2  083E               	movf	___ftdiv@exp,w
  8090  0DC3  00B6               	movwf	??___ftdiv
  8091  0DC4  0836               	movf	??___ftdiv,w
  8092  0DC5  00F3               	movwf	___ftpack@exp
  8093  0DC6  083F               	movf	___ftdiv@sign,w
  8094  0DC7  00B7               	movwf	??___ftdiv+1
  8095  0DC8  0837               	movf	??___ftdiv+1,w
  8096  0DC9  00F4               	movwf	___ftpack@sign
  8097  0DCA  318B  2338         	fcall	___ftpack
  8098  0DCC  0870               	movf	?___ftpack,w
  8099  0DCD  0020               	movlb	0	; select bank0
  8100  0DCE  00B0               	movwf	?___ftdiv
  8101  0DCF  0871               	movf	?___ftpack+1,w
  8102  0DD0  00B1               	movwf	?___ftdiv+1
  8103  0DD1  0872               	movf	?___ftpack+2,w
  8104  0DD2  00B2               	movwf	?___ftdiv+2
  8105  0DD3  0008               	return
  8106  0DD4                     __end_of___ftdiv:	
  8107                           
  8108                           	psect	text11
  8109  0B38                     __ptext11:	
  8110 ;; *************** function ___ftpack *****************
  8111 ;; Defined at:
  8112 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\float.c"
  8113 ;; Parameters:    Size  Location     Type
  8114 ;;  arg             3    0[COMMON] unsigned um
  8115 ;;  exp             1    3[COMMON] unsigned char 
  8116 ;;  sign            1    4[COMMON] unsigned char 
  8117 ;; Auto vars:     Size  Location     Type
  8118 ;;		None
  8119 ;; Return value:  Size  Location     Type
  8120 ;;                  3    0[COMMON] float 
  8121 ;; Registers used:
  8122 ;;		wreg, status,2, status,0
  8123 ;; Tracked objects:
  8124 ;;		On entry : 0/0
  8125 ;;		On exit  : 0/0
  8126 ;;		Unchanged: 0/0
  8127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8128 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8130 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8131 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8132 ;;Total ram usage:        8 bytes
  8133 ;; Hardware stack levels used:    1
  8134 ;; This function calls:
  8135 ;;		Nothing
  8136 ;; This function is called by:
  8137 ;;		___awtoft
  8138 ;;		___ftadd
  8139 ;;		___ftdiv
  8140 ;;		___ftmul
  8141 ;; This function uses a non-reentrant model
  8142 ;;
  8143                           
  8144                           
  8145                           ;psect for function ___ftpack
  8146  0B38                     ___ftpack:	
  8147                           
  8148                           ;incstack = 0
  8149                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  8150  0B38  0873               	movf	___ftpack@exp,w
  8151  0B39  1903               	btfsc	3,2
  8152  0B3A  2B40               	goto	l1914
  8153  0B3B  0872               	movf	___ftpack@arg+2,w
  8154  0B3C  0471               	iorwf	___ftpack@arg+1,w
  8155  0B3D  0470               	iorwf	___ftpack@arg,w
  8156  0B3E  1D03               	skipz
  8157  0B3F  2B51               	goto	l1920
  8158  0B40                     l1914:	
  8159  0B40  3000               	movlw	0
  8160  0B41  00F0               	movwf	?___ftpack
  8161  0B42  3000               	movlw	0
  8162  0B43  00F1               	movwf	?___ftpack+1
  8163  0B44  3000               	movlw	0
  8164  0B45  00F2               	movwf	?___ftpack+2
  8165  0B46  0008               	return
  8166  0B47                     l1918:	
  8167  0B47  3001               	movlw	1
  8168  0B48  00F5               	movwf	??___ftpack
  8169  0B49  0875               	movf	??___ftpack,w
  8170  0B4A  07F3               	addwf	___ftpack@exp,f
  8171  0B4B  3001               	movlw	1
  8172  0B4C                     u1735:	
  8173  0B4C  36F2               	lsrf	___ftpack@arg+2,f
  8174  0B4D  0CF1               	rrf	___ftpack@arg+1,f
  8175  0B4E  0CF0               	rrf	___ftpack@arg,f
  8176  0B4F  0B89               	decfsz	9,f
  8177  0B50  2B4C               	goto	u1735
  8178  0B51                     l1920:	
  8179  0B51  30FE               	movlw	254
  8180  0B52  0572               	andwf	___ftpack@arg+2,w
  8181  0B53  1903               	btfsc	3,2
  8182  0B54  2B6A               	goto	l561
  8183  0B55  2B47               	goto	l1918
  8184  0B56                     l1922:	
  8185  0B56  3001               	movlw	1
  8186  0B57  00F5               	movwf	??___ftpack
  8187  0B58  0875               	movf	??___ftpack,w
  8188  0B59  07F3               	addwf	___ftpack@exp,f
  8189  0B5A  3001               	movlw	1
  8190  0B5B  07F0               	addwf	___ftpack@arg,f
  8191  0B5C  3000               	movlw	0
  8192  0B5D  1803               	skipnc
  8193  0B5E  3001               	movlw	1
  8194  0B5F  07F1               	addwf	___ftpack@arg+1,f
  8195  0B60  3000               	movlw	0
  8196  0B61  1803               	skipnc
  8197  0B62  3001               	movlw	1
  8198  0B63  07F2               	addwf	___ftpack@arg+2,f
  8199  0B64  3001               	movlw	1
  8200  0B65                     u1755:	
  8201  0B65  36F2               	lsrf	___ftpack@arg+2,f
  8202  0B66  0CF1               	rrf	___ftpack@arg+1,f
  8203  0B67  0CF0               	rrf	___ftpack@arg,f
  8204  0B68  0B89               	decfsz	9,f
  8205  0B69  2B65               	goto	u1755
  8206  0B6A                     l561:	
  8207  0B6A  30FF               	movlw	255
  8208  0B6B  0572               	andwf	___ftpack@arg+2,w
  8209  0B6C  1903               	btfsc	3,2
  8210  0B6D  2B77               	goto	l1930
  8211  0B6E  2B56               	goto	l1922
  8212  0B6F                     l1928:	
  8213  0B6F  3001               	movlw	1
  8214  0B70  02F3               	subwf	___ftpack@exp,f
  8215  0B71  3001               	movlw	1
  8216  0B72                     u1775:	
  8217  0B72  35F0               	lslf	___ftpack@arg,f
  8218  0B73  0DF1               	rlf	___ftpack@arg+1,f
  8219  0B74  0DF2               	rlf	___ftpack@arg+2,f
  8220  0B75  0B89               	decfsz	9,f
  8221  0B76  2B72               	goto	u1775
  8222  0B77                     l1930:	
  8223  0B77  1BF1               	btfsc	___ftpack@arg+1,7
  8224  0B78  2B7D               	goto	l568
  8225  0B79  3002               	movlw	2
  8226  0B7A  0273               	subwf	___ftpack@exp,w
  8227  0B7B  1803               	skipnc
  8228  0B7C  2B6F               	goto	l1928
  8229  0B7D                     l568:	
  8230  0B7D  1873               	btfsc	___ftpack@exp,0
  8231  0B7E  2B85               	goto	l569
  8232  0B7F  30FF               	movlw	255
  8233  0B80  05F0               	andwf	___ftpack@arg,f
  8234  0B81  307F               	movlw	127
  8235  0B82  05F1               	andwf	___ftpack@arg+1,f
  8236  0B83  30FF               	movlw	255
  8237  0B84  05F2               	andwf	___ftpack@arg+2,f
  8238  0B85                     l569:	
  8239  0B85  1003               	clrc
  8240  0B86  0CF3               	rrf	___ftpack@exp,f
  8241  0B87  0873               	movf	___ftpack@exp,w
  8242  0B88  00F5               	movwf	??___ftpack
  8243  0B89  01F6               	clrf	??___ftpack+1
  8244  0B8A  01F7               	clrf	??___ftpack+2
  8245  0B8B  3010               	movlw	16
  8246  0B8C                     u1815:	
  8247  0B8C  35F5               	lslf	??___ftpack,f
  8248  0B8D  0DF6               	rlf	??___ftpack+1,f
  8249  0B8E  0DF7               	rlf	??___ftpack+2,f
  8250  0B8F  0B89               	decfsz	9,f
  8251  0B90  2B8C               	goto	u1815
  8252  0B91  0875               	movf	??___ftpack,w
  8253  0B92  04F0               	iorwf	___ftpack@arg,f
  8254  0B93  0876               	movf	??___ftpack+1,w
  8255  0B94  04F1               	iorwf	___ftpack@arg+1,f
  8256  0B95  0877               	movf	??___ftpack+2,w
  8257  0B96  04F2               	iorwf	___ftpack@arg+2,f
  8258  0B97  0874               	movf	___ftpack@sign,w
  8259  0B98  1903               	btfsc	3,2
  8260  0B99  0008               	return
  8261  0B9A  17F2               	bsf	___ftpack@arg+2,7
  8262  0B9B  0008               	return
  8263  0B9C                     __end_of___ftpack:	
  8264                           
  8265                           	psect	text12
  8266  0211                     __ptext12:	
  8267 ;; *************** function _readAnalog *****************
  8268 ;; Defined at:
  8269 ;;		line 88 in file "adcc.c"
  8270 ;; Parameters:    Size  Location     Type
  8271 ;;  channel         2    6[BANK0 ] int 
  8272 ;; Auto vars:     Size  Location     Type
  8273 ;;  value           2   11[COMMON] int 
  8274 ;;  analog_chann    2    9[COMMON] int 
  8275 ;; Return value:  Size  Location     Type
  8276 ;;                  2    6[BANK0 ] int 
  8277 ;; Registers used:
  8278 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8279 ;; Tracked objects:
  8280 ;;		On entry : 0/0
  8281 ;;		On exit  : 0/0
  8282 ;;		Unchanged: 0/0
  8283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8284 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8285 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8286 ;;      Temps:          0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8287 ;;      Totals:         4      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8288 ;;Total ram usage:       22 bytes
  8289 ;; Hardware stack levels used:    1
  8290 ;; Hardware stack levels required when called:    1
  8291 ;; This function calls:
  8292 ;;		_ADCRead
  8293 ;;		___aldiv
  8294 ;;		___wmul
  8295 ;; This function is called by:
  8296 ;;		_main
  8297 ;; This function uses a non-reentrant model
  8298 ;;
  8299                           
  8300                           
  8301                           ;psect for function _readAnalog
  8302  0211                     _readAnalog:	
  8303                           
  8304                           ;adcc.c: 90: int value;
  8305                           ;adcc.c: 92: int analog_channel = channels[channel];
  8306                           
  8307                           ;incstack = 0
  8308                           ; Regs used in _readAnalog: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8309  0211  0020               	movlb	0	; select bank0
  8310  0212  3526               	lslf	readAnalog@channel,w
  8311  0213  3ED7               	addlw	(low (_channels| 0))& (0+255)
  8312  0214  0086               	movwf	6
  8313  0215  0187               	clrf	7
  8314  0216  3F40               	moviw [0]fsr1
  8315  0217  00F9               	movwf	readAnalog@analog_channel
  8316  0218  3F41               	moviw [1]fsr1
  8317  0219  00FA               	movwf	readAnalog@analog_channel+1
  8318                           
  8319                           ;adcc.c: 94: value = ADCRead(analog_channel);
  8320  021A  0879               	movf	readAnalog@analog_channel,w
  8321  021B  3197  27B6  3182   	fcall	_ADCRead
  8322  021E  0871               	movf	?_ADCRead+1,w
  8323  021F  00FC               	movwf	readAnalog@value+1
  8324  0220  0870               	movf	?_ADCRead,w
  8325  0221  00FB               	movwf	readAnalog@value
  8326                           
  8327                           ;adcc.c: 98: totals[channel] = totals[channel] - samples[channel][sampleIndex];
  8328  0222  0020               	movlb	0	; select bank0
  8329  0223  0826               	movf	readAnalog@channel,w
  8330  0224  00A8               	movwf	??_readAnalog
  8331  0225  3001               	movlw	1
  8332  0226                     u2785:	
  8333  0226  35A8               	lslf	??_readAnalog,f
  8334  0227  3EFF               	addlw	-1
  8335  0228  1D03               	skipz
  8336  0229  2A26               	goto	u2785
  8337  022A  3528               	lslf	??_readAnalog,w
  8338  022B  3EA0               	addlw	(low (_totals| 0))& (0+255)
  8339  022C  0086               	movwf	6
  8340  022D  0187               	clrf	7
  8341  022E  3F40               	moviw [0]fsr1
  8342  022F  00A9               	movwf	??_readAnalog+1
  8343  0230  3F41               	moviw [1]fsr1
  8344  0231  00AA               	movwf	??_readAnalog+2
  8345  0232  3F42               	moviw [2]fsr1
  8346  0233  00AB               	movwf	??_readAnalog+3
  8347  0234  3F43               	moviw [3]fsr1
  8348  0235  00AC               	movwf	??_readAnalog+4
  8349  0236  086F               	movf	_sampleIndex+1,w
  8350  0237  00AE               	movwf	??_readAnalog+6
  8351  0238  086E               	movf	_sampleIndex,w
  8352  0239  00AD               	movwf	??_readAnalog+5
  8353  023A  35AD               	lslf	??_readAnalog+5,f
  8354  023B  0DAE               	rlf	??_readAnalog+6,f
  8355  023C  0827               	movf	readAnalog@channel+1,w
  8356  023D  00F1               	movwf	___wmul@multiplier+1
  8357  023E  0826               	movf	readAnalog@channel,w
  8358  023F  00F0               	movwf	___wmul@multiplier
  8359  0240  3028               	movlw	40
  8360  0241  00F2               	movwf	___wmul@multiplicand
  8361  0242  3000               	movlw	0
  8362  0243  00F3               	movwf	___wmul@multiplicand+1
  8363  0244  3188  206C  3182   	fcall	___wmul
  8364  0247  3000               	movlw	0
  8365  0248  0020               	movlb	0	; select bank0
  8366  0249  00AF               	movwf	??_readAnalog+7
  8367  024A  3023               	movlw	35
  8368  024B  00B0               	movwf	??_readAnalog+8
  8369  024C  0870               	movf	?___wmul,w
  8370  024D  072F               	addwf	??_readAnalog+7,w
  8371  024E  00B1               	movwf	??_readAnalog+9
  8372  024F  0871               	movf	?___wmul+1,w
  8373  0250  3D30               	addwfc	??_readAnalog+8,w
  8374  0251  00B2               	movwf	??_readAnalog+10
  8375  0252  0831               	movf	??_readAnalog+9,w
  8376  0253  072D               	addwf	??_readAnalog+5,w
  8377  0254  0084               	movwf	4
  8378  0255  0832               	movf	??_readAnalog+10,w
  8379  0256  3D2E               	addwfc	??_readAnalog+6,w
  8380  0257  0085               	movwf	5
  8381  0258  3F00               	moviw [0]fsr0
  8382  0259  00B3               	movwf	??_readAnalog+11
  8383  025A  3F01               	moviw [1]fsr0
  8384  025B  00B4               	movwf	??_readAnalog+12
  8385  025C  01B5               	clrf	??_readAnalog+13
  8386  025D  01B6               	clrf	??_readAnalog+14
  8387  025E  09B3               	comf	??_readAnalog+11,f
  8388  025F  09B4               	comf	??_readAnalog+12,f
  8389  0260  09B5               	comf	??_readAnalog+13,f
  8390  0261  09B6               	comf	??_readAnalog+14,f
  8391  0262  0AB3               	incf	??_readAnalog+11,f
  8392  0263  1903               	skipnz
  8393  0264  0AB4               	incf	??_readAnalog+12,f
  8394  0265  1903               	skipnz
  8395  0266  0AB5               	incf	??_readAnalog+13,f
  8396  0267  1903               	skipnz
  8397  0268  0AB6               	incf	??_readAnalog+14,f
  8398  0269  0833               	movf	??_readAnalog+11,w
  8399  026A  07A9               	addwf	??_readAnalog+1,f
  8400  026B  0834               	movf	??_readAnalog+12,w
  8401  026C  3DAA               	addwfc	??_readAnalog+2,f
  8402  026D  0835               	movf	??_readAnalog+13,w
  8403  026E  3DAB               	addwfc	??_readAnalog+3,f
  8404  026F  0836               	movf	??_readAnalog+14,w
  8405  0270  3DAC               	addwfc	??_readAnalog+4,f
  8406  0271  0826               	movf	readAnalog@channel,w
  8407  0272  00B7               	movwf	??_readAnalog+15
  8408  0273  3001               	movlw	1
  8409  0274                     u2795:	
  8410  0274  35B7               	lslf	??_readAnalog+15,f
  8411  0275  3EFF               	addlw	-1
  8412  0276  1D03               	skipz
  8413  0277  2A74               	goto	u2795
  8414  0278  3537               	lslf	??_readAnalog+15,w
  8415  0279  3EA0               	addlw	(low (_totals| 0))& (0+255)
  8416  027A  0086               	movwf	6
  8417  027B  0187               	clrf	7
  8418  027C  0829               	movf	??_readAnalog+1,w
  8419  027D  3FC0               	movwi [0]fsr1
  8420  027E  082A               	movf	??_readAnalog+2,w
  8421  027F  3FC1               	movwi [1]fsr1
  8422  0280  082B               	movf	??_readAnalog+3,w
  8423  0281  3FC2               	movwi [2]fsr1
  8424  0282  082C               	movf	??_readAnalog+4,w
  8425  0283  3FC3               	movwi [3]fsr1
  8426                           
  8427                           ;adcc.c: 100: samples[channel][sampleIndex] = value;
  8428  0284  086F               	movf	_sampleIndex+1,w
  8429  0285  00A9               	movwf	??_readAnalog+1
  8430  0286  086E               	movf	_sampleIndex,w
  8431  0287  00A8               	movwf	??_readAnalog
  8432  0288  35A8               	lslf	??_readAnalog,f
  8433  0289  0DA9               	rlf	??_readAnalog+1,f
  8434  028A  0827               	movf	readAnalog@channel+1,w
  8435  028B  00F1               	movwf	___wmul@multiplier+1
  8436  028C  0826               	movf	readAnalog@channel,w
  8437  028D  00F0               	movwf	___wmul@multiplier
  8438  028E  3028               	movlw	40
  8439  028F  00F2               	movwf	___wmul@multiplicand
  8440  0290  3000               	movlw	0
  8441  0291  00F3               	movwf	___wmul@multiplicand+1
  8442  0292  3188  206C  3182   	fcall	___wmul
  8443  0295  3000               	movlw	0
  8444  0296  0020               	movlb	0	; select bank0
  8445  0297  00AA               	movwf	??_readAnalog+2
  8446  0298  3023               	movlw	35
  8447  0299  00AB               	movwf	??_readAnalog+3
  8448  029A  0870               	movf	?___wmul,w
  8449  029B  072A               	addwf	??_readAnalog+2,w
  8450  029C  00AC               	movwf	??_readAnalog+4
  8451  029D  0871               	movf	?___wmul+1,w
  8452  029E  3D2B               	addwfc	??_readAnalog+3,w
  8453  029F  00AD               	movwf	??_readAnalog+5
  8454  02A0  0828               	movf	??_readAnalog,w
  8455  02A1  072C               	addwf	??_readAnalog+4,w
  8456  02A2  0086               	movwf	6
  8457  02A3  0829               	movf	??_readAnalog+1,w
  8458  02A4  3D2D               	addwfc	??_readAnalog+5,w
  8459  02A5  0087               	movwf	7
  8460  02A6  087B               	movf	readAnalog@value,w
  8461  02A7  3FC0               	movwi [0]fsr1
  8462  02A8  087C               	movf	readAnalog@value+1,w
  8463  02A9  3FC1               	movwi [1]fsr1
  8464                           
  8465                           ;adcc.c: 102: totals[channel] = totals[channel] + samples[channel][sampleIndex];
  8466  02AA  0826               	movf	readAnalog@channel,w
  8467  02AB  00A8               	movwf	??_readAnalog
  8468  02AC  3001               	movlw	1
  8469  02AD                     u2805:	
  8470  02AD  35A8               	lslf	??_readAnalog,f
  8471  02AE  3EFF               	addlw	-1
  8472  02AF  1D03               	skipz
  8473  02B0  2AAD               	goto	u2805
  8474  02B1  3528               	lslf	??_readAnalog,w
  8475  02B2  3EA0               	addlw	(low (_totals| 0))& (0+255)
  8476  02B3  0086               	movwf	6
  8477  02B4  0187               	clrf	7
  8478  02B5  3F40               	moviw [0]fsr1
  8479  02B6  00A9               	movwf	??_readAnalog+1
  8480  02B7  3F41               	moviw [1]fsr1
  8481  02B8  00AA               	movwf	??_readAnalog+2
  8482  02B9  3F42               	moviw [2]fsr1
  8483  02BA  00AB               	movwf	??_readAnalog+3
  8484  02BB  3F43               	moviw [3]fsr1
  8485  02BC  00AC               	movwf	??_readAnalog+4
  8486  02BD  086F               	movf	_sampleIndex+1,w
  8487  02BE  00AE               	movwf	??_readAnalog+6
  8488  02BF  086E               	movf	_sampleIndex,w
  8489  02C0  00AD               	movwf	??_readAnalog+5
  8490  02C1  35AD               	lslf	??_readAnalog+5,f
  8491  02C2  0DAE               	rlf	??_readAnalog+6,f
  8492  02C3  0827               	movf	readAnalog@channel+1,w
  8493  02C4  00F1               	movwf	___wmul@multiplier+1
  8494  02C5  0826               	movf	readAnalog@channel,w
  8495  02C6  00F0               	movwf	___wmul@multiplier
  8496  02C7  3028               	movlw	40
  8497  02C8  00F2               	movwf	___wmul@multiplicand
  8498  02C9  3000               	movlw	0
  8499  02CA  00F3               	movwf	___wmul@multiplicand+1
  8500  02CB  3188  206C  3182   	fcall	___wmul
  8501  02CE  3000               	movlw	0
  8502  02CF  0020               	movlb	0	; select bank0
  8503  02D0  00AF               	movwf	??_readAnalog+7
  8504  02D1  3023               	movlw	35
  8505  02D2  00B0               	movwf	??_readAnalog+8
  8506  02D3  0870               	movf	?___wmul,w
  8507  02D4  072F               	addwf	??_readAnalog+7,w
  8508  02D5  00B1               	movwf	??_readAnalog+9
  8509  02D6  0871               	movf	?___wmul+1,w
  8510  02D7  3D30               	addwfc	??_readAnalog+8,w
  8511  02D8  00B2               	movwf	??_readAnalog+10
  8512  02D9  0831               	movf	??_readAnalog+9,w
  8513  02DA  072D               	addwf	??_readAnalog+5,w
  8514  02DB  0084               	movwf	4
  8515  02DC  0832               	movf	??_readAnalog+10,w
  8516  02DD  3D2E               	addwfc	??_readAnalog+6,w
  8517  02DE  0085               	movwf	5
  8518  02DF  3F00               	moviw [0]fsr0
  8519  02E0  00B3               	movwf	??_readAnalog+11
  8520  02E1  3F01               	moviw [1]fsr0
  8521  02E2  00B4               	movwf	??_readAnalog+12
  8522  02E3  01B5               	clrf	??_readAnalog+13
  8523  02E4  01B6               	clrf	??_readAnalog+14
  8524  02E5  0833               	movf	??_readAnalog+11,w
  8525  02E6  07A9               	addwf	??_readAnalog+1,f
  8526  02E7  0834               	movf	??_readAnalog+12,w
  8527  02E8  3DAA               	addwfc	??_readAnalog+2,f
  8528  02E9  0835               	movf	??_readAnalog+13,w
  8529  02EA  3DAB               	addwfc	??_readAnalog+3,f
  8530  02EB  0836               	movf	??_readAnalog+14,w
  8531  02EC  3DAC               	addwfc	??_readAnalog+4,f
  8532  02ED  0826               	movf	readAnalog@channel,w
  8533  02EE  00B7               	movwf	??_readAnalog+15
  8534  02EF  3001               	movlw	1
  8535  02F0                     u2815:	
  8536  02F0  35B7               	lslf	??_readAnalog+15,f
  8537  02F1  3EFF               	addlw	-1
  8538  02F2  1D03               	skipz
  8539  02F3  2AF0               	goto	u2815
  8540  02F4  3537               	lslf	??_readAnalog+15,w
  8541  02F5  3EA0               	addlw	(low (_totals| 0))& (0+255)
  8542  02F6  0086               	movwf	6
  8543  02F7  0187               	clrf	7
  8544  02F8  0829               	movf	??_readAnalog+1,w
  8545  02F9  3FC0               	movwi [0]fsr1
  8546  02FA  082A               	movf	??_readAnalog+2,w
  8547  02FB  3FC1               	movwi [1]fsr1
  8548  02FC  082B               	movf	??_readAnalog+3,w
  8549  02FD  3FC2               	movwi [2]fsr1
  8550  02FE  082C               	movf	??_readAnalog+4,w
  8551  02FF  3FC3               	movwi [3]fsr1
  8552                           
  8553                           ;adcc.c: 104: if(channel>4)
  8554  0300  0827               	movf	readAnalog@channel+1,w
  8555  0301  3A80               	xorlw	128
  8556  0302  00A8               	movwf	??_readAnalog
  8557  0303  3080               	movlw	128
  8558  0304  0228               	subwf	??_readAnalog,w
  8559  0305  1D03               	skipz
  8560  0306  2B09               	goto	u2825
  8561  0307  3005               	movlw	5
  8562  0308  0226               	subwf	readAnalog@channel,w
  8563  0309                     u2825:	
  8564  0309  1C03               	skipc
  8565  030A  2B19               	goto	l2532
  8566                           
  8567                           ;adcc.c: 105: {
  8568                           ;adcc.c: 106: sampleIndex += 1;
  8569  030B  3001               	movlw	1
  8570  030C  0020               	movlb	0	; select bank0
  8571  030D  07EE               	addwf	_sampleIndex,f
  8572  030E  3000               	movlw	0
  8573  030F  3DEF               	addwfc	_sampleIndex+1,f
  8574                           
  8575                           ;adcc.c: 108: if(sampleIndex >= 20)
  8576  0310  3000               	movlw	0
  8577  0311  026F               	subwf	_sampleIndex+1,w
  8578  0312  3014               	movlw	20
  8579  0313  1903               	skipnz
  8580  0314  026E               	subwf	_sampleIndex,w
  8581  0315  1C03               	skipc
  8582  0316  2B19               	goto	l2532
  8583                           
  8584                           ;adcc.c: 109: {
  8585                           ;adcc.c: 110: sampleIndex = 0;
  8586  0317  01EE               	clrf	_sampleIndex
  8587  0318  01EF               	clrf	_sampleIndex+1
  8588  0319                     l2532:	
  8589                           
  8590                           ;adcc.c: 111: }
  8591                           ;adcc.c: 112: }
  8592                           ;adcc.c: 114: value = totals[channel] / 20;
  8593  0319  3000               	movlw	0
  8594  031A  00F3               	movwf	___aldiv@divisor+3
  8595  031B  3000               	movlw	0
  8596  031C  00F2               	movwf	___aldiv@divisor+2
  8597  031D  3000               	movlw	0
  8598  031E  00F1               	movwf	___aldiv@divisor+1
  8599  031F  3014               	movlw	20
  8600  0320  00F0               	movwf	___aldiv@divisor
  8601  0321  0020               	movlb	0	; select bank0
  8602  0322  0826               	movf	readAnalog@channel,w
  8603  0323  00A8               	movwf	??_readAnalog
  8604  0324  3001               	movlw	1
  8605  0325                     u2845:	
  8606  0325  35A8               	lslf	??_readAnalog,f
  8607  0326  3EFF               	addlw	-1
  8608  0327  1D03               	skipz
  8609  0328  2B25               	goto	u2845
  8610  0329  3528               	lslf	??_readAnalog,w
  8611  032A  3EA0               	addlw	(low (_totals| 0))& (0+255)
  8612  032B  0086               	movwf	6
  8613  032C  0187               	clrf	7
  8614  032D  3F40               	moviw [0]fsr1
  8615  032E  00F4               	movwf	___aldiv@dividend
  8616  032F  3F41               	moviw [1]fsr1
  8617  0330  00F5               	movwf	___aldiv@dividend+1
  8618  0331  3F42               	moviw [2]fsr1
  8619  0332  00F6               	movwf	___aldiv@dividend+2
  8620  0333  3F43               	moviw [3]fsr1
  8621  0334  00F7               	movwf	___aldiv@dividend+3
  8622  0335  318B  239C         	fcall	___aldiv
  8623  0337  0871               	movf	?___aldiv+1,w
  8624  0338  00FC               	movwf	readAnalog@value+1
  8625  0339  0870               	movf	?___aldiv,w
  8626  033A  00FB               	movwf	readAnalog@value
  8627                           
  8628                           ;adcc.c: 116: return value;
  8629  033B  087C               	movf	readAnalog@value+1,w
  8630  033C  0020               	movlb	0	; select bank0
  8631  033D  00A7               	movwf	?_readAnalog+1
  8632  033E  087B               	movf	readAnalog@value,w
  8633  033F  00A6               	movwf	?_readAnalog
  8634  0340  0008               	return
  8635  0341                     __end_of_readAnalog:	
  8636                           
  8637                           	psect	text13
  8638  086C                     __ptext13:	
  8639 ;; *************** function ___wmul *****************
  8640 ;; Defined at:
  8641 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
  8642 ;; Parameters:    Size  Location     Type
  8643 ;;  multiplier      2    0[COMMON] unsigned int 
  8644 ;;  multiplicand    2    2[COMMON] unsigned int 
  8645 ;; Auto vars:     Size  Location     Type
  8646 ;;  product         2    4[COMMON] unsigned int 
  8647 ;; Return value:  Size  Location     Type
  8648 ;;                  2    0[COMMON] unsigned int 
  8649 ;; Registers used:
  8650 ;;		wreg, status,2, status,0
  8651 ;; Tracked objects:
  8652 ;;		On entry : 0/0
  8653 ;;		On exit  : 0/0
  8654 ;;		Unchanged: 0/0
  8655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8656 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8657 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8659 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8660 ;;Total ram usage:        6 bytes
  8661 ;; Hardware stack levels used:    1
  8662 ;; This function calls:
  8663 ;;		Nothing
  8664 ;; This function is called by:
  8665 ;;		_readAnalog
  8666 ;;		_eval_poly
  8667 ;; This function uses a non-reentrant model
  8668 ;;
  8669                           
  8670                           
  8671                           ;psect for function ___wmul
  8672  086C                     ___wmul:	
  8673                           
  8674                           ;incstack = 0
  8675                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  8676  086C  01F4               	clrf	___wmul@product
  8677  086D  01F5               	clrf	___wmul@product+1
  8678  086E                     l1960:	
  8679  086E  1C70               	btfss	___wmul@multiplier,0
  8680  086F  2874               	goto	l400
  8681  0870  0872               	movf	___wmul@multiplicand,w
  8682  0871  07F4               	addwf	___wmul@product,f
  8683  0872  0873               	movf	___wmul@multiplicand+1,w
  8684  0873  3DF5               	addwfc	___wmul@product+1,f
  8685  0874                     l400:	
  8686  0874  3001               	movlw	1
  8687  0875                     u1885:	
  8688  0875  35F2               	lslf	___wmul@multiplicand,f
  8689  0876  0DF3               	rlf	___wmul@multiplicand+1,f
  8690  0877  0B89               	decfsz	9,f
  8691  0878  2875               	goto	u1885
  8692  0879  3001               	movlw	1
  8693  087A                     u1895:	
  8694  087A  36F1               	lsrf	___wmul@multiplier+1,f
  8695  087B  0CF0               	rrf	___wmul@multiplier,f
  8696  087C  0B89               	decfsz	9,f
  8697  087D  287A               	goto	u1895
  8698  087E  0870               	movf	___wmul@multiplier,w
  8699  087F  0471               	iorwf	___wmul@multiplier+1,w
  8700  0880  1D03               	btfss	3,2
  8701  0881  286E               	goto	l1960
  8702  0882  0875               	movf	___wmul@product+1,w
  8703  0883  00F1               	movwf	?___wmul+1
  8704  0884  0874               	movf	___wmul@product,w
  8705  0885  00F0               	movwf	?___wmul
  8706  0886  0008               	return
  8707  0887                     __end_of___wmul:	
  8708                           
  8709                           	psect	text14
  8710  0B9C                     __ptext14:	
  8711 ;; *************** function ___aldiv *****************
  8712 ;; Defined at:
  8713 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\aldiv.c"
  8714 ;; Parameters:    Size  Location     Type
  8715 ;;  divisor         4    0[COMMON] long 
  8716 ;;  dividend        4    4[COMMON] long 
  8717 ;; Auto vars:     Size  Location     Type
  8718 ;;  quotient        4    2[BANK0 ] long 
  8719 ;;  sign            1    1[BANK0 ] unsigned char 
  8720 ;;  counter         1    0[BANK0 ] unsigned char 
  8721 ;; Return value:  Size  Location     Type
  8722 ;;                  4    0[COMMON] long 
  8723 ;; Registers used:
  8724 ;;		wreg, status,2, status,0
  8725 ;; Tracked objects:
  8726 ;;		On entry : 0/0
  8727 ;;		On exit  : 0/0
  8728 ;;		Unchanged: 0/0
  8729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8730 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8731 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8732 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8733 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8734 ;;Total ram usage:       15 bytes
  8735 ;; Hardware stack levels used:    1
  8736 ;; This function calls:
  8737 ;;		Nothing
  8738 ;; This function is called by:
  8739 ;;		_readAnalog
  8740 ;; This function uses a non-reentrant model
  8741 ;;
  8742                           
  8743                           
  8744                           ;psect for function ___aldiv
  8745  0B9C                     ___aldiv:	
  8746                           
  8747                           ;incstack = 0
  8748                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  8749  0B9C  0020               	movlb	0	; select bank0
  8750  0B9D  01A1               	clrf	___aldiv@sign
  8751  0B9E  1FF3               	btfss	___aldiv@divisor+3,7
  8752  0B9F  2BAD               	goto	l455
  8753  0BA0  09F0               	comf	___aldiv@divisor,f
  8754  0BA1  09F1               	comf	___aldiv@divisor+1,f
  8755  0BA2  09F2               	comf	___aldiv@divisor+2,f
  8756  0BA3  09F3               	comf	___aldiv@divisor+3,f
  8757  0BA4  0AF0               	incf	___aldiv@divisor,f
  8758  0BA5  1903               	skipnz
  8759  0BA6  0AF1               	incf	___aldiv@divisor+1,f
  8760  0BA7  1903               	skipnz
  8761  0BA8  0AF2               	incf	___aldiv@divisor+2,f
  8762  0BA9  1903               	skipnz
  8763  0BAA  0AF3               	incf	___aldiv@divisor+3,f
  8764  0BAB  01A1               	clrf	___aldiv@sign
  8765  0BAC  0AA1               	incf	___aldiv@sign,f
  8766  0BAD                     l455:	
  8767  0BAD  1FF7               	btfss	___aldiv@dividend+3,7
  8768  0BAE  2BBE               	goto	l2356
  8769  0BAF  09F4               	comf	___aldiv@dividend,f
  8770  0BB0  09F5               	comf	___aldiv@dividend+1,f
  8771  0BB1  09F6               	comf	___aldiv@dividend+2,f
  8772  0BB2  09F7               	comf	___aldiv@dividend+3,f
  8773  0BB3  0AF4               	incf	___aldiv@dividend,f
  8774  0BB4  1903               	skipnz
  8775  0BB5  0AF5               	incf	___aldiv@dividend+1,f
  8776  0BB6  1903               	skipnz
  8777  0BB7  0AF6               	incf	___aldiv@dividend+2,f
  8778  0BB8  1903               	skipnz
  8779  0BB9  0AF7               	incf	___aldiv@dividend+3,f
  8780  0BBA  3001               	movlw	1
  8781  0BBB  00F8               	movwf	??___aldiv
  8782  0BBC  0878               	movf	??___aldiv,w
  8783  0BBD  06A1               	xorwf	___aldiv@sign,f
  8784  0BBE                     l2356:	
  8785  0BBE  3000               	movlw	0
  8786  0BBF  00A5               	movwf	___aldiv@quotient+3
  8787  0BC0  3000               	movlw	0
  8788  0BC1  00A4               	movwf	___aldiv@quotient+2
  8789  0BC2  3000               	movlw	0
  8790  0BC3  00A3               	movwf	___aldiv@quotient+1
  8791  0BC4  3000               	movlw	0
  8792  0BC5  00A2               	movwf	___aldiv@quotient
  8793  0BC6  0873               	movf	___aldiv@divisor+3,w
  8794  0BC7  0472               	iorwf	___aldiv@divisor+2,w
  8795  0BC8  0471               	iorwf	___aldiv@divisor+1,w
  8796  0BC9  0470               	iorwf	___aldiv@divisor,w
  8797  0BCA  1903               	skipnz
  8798  0BCB  2C07               	goto	l2378
  8799  0BCC  01A0               	clrf	___aldiv@counter
  8800  0BCD  0AA0               	incf	___aldiv@counter,f
  8801  0BCE                     l2364:	
  8802  0BCE  1BF3               	btfsc	___aldiv@divisor+3,7
  8803  0BCF  2BDC               	goto	l2366
  8804  0BD0  3001               	movlw	1
  8805  0BD1                     u2435:	
  8806  0BD1  35F0               	lslf	___aldiv@divisor,f
  8807  0BD2  0DF1               	rlf	___aldiv@divisor+1,f
  8808  0BD3  0DF2               	rlf	___aldiv@divisor+2,f
  8809  0BD4  0DF3               	rlf	___aldiv@divisor+3,f
  8810  0BD5  0B89               	decfsz	9,f
  8811  0BD6  2BD1               	goto	u2435
  8812  0BD7  3001               	movlw	1
  8813  0BD8  00F8               	movwf	??___aldiv
  8814  0BD9  0878               	movf	??___aldiv,w
  8815  0BDA  07A0               	addwf	___aldiv@counter,f
  8816  0BDB  2BCE               	goto	l2364
  8817  0BDC                     l2366:	
  8818  0BDC  3001               	movlw	1
  8819  0BDD                     u2455:	
  8820  0BDD  35A2               	lslf	___aldiv@quotient,f
  8821  0BDE  0DA3               	rlf	___aldiv@quotient+1,f
  8822  0BDF  0DA4               	rlf	___aldiv@quotient+2,f
  8823  0BE0  0DA5               	rlf	___aldiv@quotient+3,f
  8824  0BE1  0B89               	decfsz	9,f
  8825  0BE2  2BDD               	goto	u2455
  8826  0BE3  0873               	movf	___aldiv@divisor+3,w
  8827  0BE4  0277               	subwf	___aldiv@dividend+3,w
  8828  0BE5  1D03               	skipz
  8829  0BE6  2BF1               	goto	u2465
  8830  0BE7  0872               	movf	___aldiv@divisor+2,w
  8831  0BE8  0276               	subwf	___aldiv@dividend+2,w
  8832  0BE9  1D03               	skipz
  8833  0BEA  2BF1               	goto	u2465
  8834  0BEB  0871               	movf	___aldiv@divisor+1,w
  8835  0BEC  0275               	subwf	___aldiv@dividend+1,w
  8836  0BED  1D03               	skipz
  8837  0BEE  2BF1               	goto	u2465
  8838  0BEF  0870               	movf	___aldiv@divisor,w
  8839  0BF0  0274               	subwf	___aldiv@dividend,w
  8840  0BF1                     u2465:	
  8841  0BF1  1C03               	skipc
  8842  0BF2  2BFC               	goto	l2374
  8843  0BF3  0870               	movf	___aldiv@divisor,w
  8844  0BF4  02F4               	subwf	___aldiv@dividend,f
  8845  0BF5  0871               	movf	___aldiv@divisor+1,w
  8846  0BF6  3BF5               	subwfb	___aldiv@dividend+1,f
  8847  0BF7  0872               	movf	___aldiv@divisor+2,w
  8848  0BF8  3BF6               	subwfb	___aldiv@dividend+2,f
  8849  0BF9  0873               	movf	___aldiv@divisor+3,w
  8850  0BFA  3BF7               	subwfb	___aldiv@dividend+3,f
  8851  0BFB  1422               	bsf	___aldiv@quotient,0
  8852  0BFC                     l2374:	
  8853  0BFC  3001               	movlw	1
  8854  0BFD                     u2475:	
  8855  0BFD  36F3               	lsrf	___aldiv@divisor+3,f
  8856  0BFE  0CF2               	rrf	___aldiv@divisor+2,f
  8857  0BFF  0CF1               	rrf	___aldiv@divisor+1,f
  8858  0C00  0CF0               	rrf	___aldiv@divisor,f
  8859  0C01  0B89               	decfsz	9,f
  8860  0C02  2BFD               	goto	u2475
  8861  0C03  3001               	movlw	1
  8862  0C04  02A0               	subwf	___aldiv@counter,f
  8863  0C05  1D03               	btfss	3,2
  8864  0C06  2BDC               	goto	l2366
  8865  0C07                     l2378:	
  8866  0C07  0821               	movf	___aldiv@sign,w
  8867  0C08  1903               	btfsc	3,2
  8868  0C09  2C15               	goto	l2382
  8869  0C0A  09A2               	comf	___aldiv@quotient,f
  8870  0C0B  09A3               	comf	___aldiv@quotient+1,f
  8871  0C0C  09A4               	comf	___aldiv@quotient+2,f
  8872  0C0D  09A5               	comf	___aldiv@quotient+3,f
  8873  0C0E  0AA2               	incf	___aldiv@quotient,f
  8874  0C0F  1903               	skipnz
  8875  0C10  0AA3               	incf	___aldiv@quotient+1,f
  8876  0C11  1903               	skipnz
  8877  0C12  0AA4               	incf	___aldiv@quotient+2,f
  8878  0C13  1903               	skipnz
  8879  0C14  0AA5               	incf	___aldiv@quotient+3,f
  8880  0C15                     l2382:	
  8881  0C15  0825               	movf	___aldiv@quotient+3,w
  8882  0C16  00F3               	movwf	?___aldiv+3
  8883  0C17  0824               	movf	___aldiv@quotient+2,w
  8884  0C18  00F2               	movwf	?___aldiv+2
  8885  0C19  0823               	movf	___aldiv@quotient+1,w
  8886  0C1A  00F1               	movwf	?___aldiv+1
  8887  0C1B  0822               	movf	___aldiv@quotient,w
  8888  0C1C  00F0               	movwf	?___aldiv
  8889  0C1D  0008               	return
  8890  0C1E                     __end_of___aldiv:	
  8891                           
  8892                           	psect	text15
  8893  17B6                     __ptext15:	
  8894 ;; *************** function _ADCRead *****************
  8895 ;; Defined at:
  8896 ;;		line 65 in file "adcc.c"
  8897 ;; Parameters:    Size  Location     Type
  8898 ;;  channel         1    wreg     enum E13559
  8899 ;; Auto vars:     Size  Location     Type
  8900 ;;  channel         1    3[COMMON] enum E13559
  8901 ;; Return value:  Size  Location     Type
  8902 ;;                  2    0[COMMON] unsigned int 
  8903 ;; Registers used:
  8904 ;;		wreg
  8905 ;; Tracked objects:
  8906 ;;		On entry : 0/0
  8907 ;;		On exit  : 0/0
  8908 ;;		Unchanged: 0/0
  8909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8910 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8911 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8913 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8914 ;;Total ram usage:        4 bytes
  8915 ;; Hardware stack levels used:    1
  8916 ;; This function calls:
  8917 ;;		Nothing
  8918 ;; This function is called by:
  8919 ;;		_readAnalog
  8920 ;;		_main
  8921 ;; This function uses a non-reentrant model
  8922 ;;
  8923                           
  8924                           
  8925                           ;psect for function _ADCRead
  8926  17B6                     _ADCRead:	
  8927                           
  8928                           ;incstack = 0
  8929                           ; Regs used in _ADCRead: [wreg]
  8930                           ;ADCRead@channel stored from wreg
  8931  17B6  00F3               	movwf	ADCRead@channel
  8932                           
  8933                           ;adcc.c: 68: ADPCH = channel;
  8934  17B7  0873               	movf	ADCRead@channel,w
  8935  17B8  0021               	movlb	1	; select bank1
  8936  17B9  009E               	movwf	30	;volatile
  8937                           
  8938                           ;adcc.c: 71: ADCON0bits.ADON = 1;
  8939  17BA  1793               	bsf	19,7	;volatile
  8940                           
  8941                           ;adcc.c: 74: ADCON0bits.ADCONT = 0;
  8942  17BB  1313               	bcf	19,6	;volatile
  8943                           
  8944                           ;adcc.c: 77: ADCON0bits.ADGO = 1;
  8945  17BC  1413               	bsf	19,0	;volatile
  8946  17BD                     l58:	
  8947                           ;adcc.c: 81: {
  8948                           
  8949                           ;adcc.c: 80: while (ADCON0bits.ADGO)
  8950                           
  8951  17BD  1813               	btfsc	19,0	;volatile
  8952  17BE  2FBD               	goto	l58
  8953                           
  8954                           ;adcc.c: 82: }
  8955                           ;adcc.c: 85: return ((ADRESH << 8) + ADRESL);
  8956  17BF  080D               	movf	13,w	;volatile
  8957  17C0  00F1               	movwf	?_ADCRead+1
  8958  17C1  080C               	movf	12,w	;volatile
  8959  17C2  00F0               	movwf	?_ADCRead
  8960  17C3  0008               	return
  8961  17C4                     __end_of_ADCRead:	
  8962                           
  8963                           	psect	text16
  8964  0917                     __ptext16:	
  8965 ;; *************** function ___lwdiv *****************
  8966 ;; Defined at:
  8967 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwdiv.c"
  8968 ;; Parameters:    Size  Location     Type
  8969 ;;  divisor         2    0[COMMON] unsigned int 
  8970 ;;  dividend        2    2[COMMON] unsigned int 
  8971 ;; Auto vars:     Size  Location     Type
  8972 ;;  quotient        2    5[COMMON] unsigned int 
  8973 ;;  counter         1    7[COMMON] unsigned char 
  8974 ;; Return value:  Size  Location     Type
  8975 ;;                  2    0[COMMON] unsigned int 
  8976 ;; Registers used:
  8977 ;;		wreg, status,2, status,0
  8978 ;; Tracked objects:
  8979 ;;		On entry : 0/0
  8980 ;;		On exit  : 0/0
  8981 ;;		Unchanged: 0/0
  8982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8983 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8984 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8985 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8986 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8987 ;;Total ram usage:        8 bytes
  8988 ;; Hardware stack levels used:    1
  8989 ;; This function calls:
  8990 ;;		Nothing
  8991 ;; This function is called by:
  8992 ;;		_main
  8993 ;; This function uses a non-reentrant model
  8994 ;;
  8995                           
  8996                           
  8997                           ;psect for function ___lwdiv
  8998  0917                     ___lwdiv:	
  8999                           
  9000                           ;incstack = 0
  9001                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  9002  0917  01F5               	clrf	___lwdiv@quotient
  9003  0918  01F6               	clrf	___lwdiv@quotient+1
  9004  0919  0870               	movf	___lwdiv@divisor,w
  9005  091A  0471               	iorwf	___lwdiv@divisor+1,w
  9006  091B  1903               	btfsc	3,2
  9007  091C  2946               	goto	l2722
  9008  091D  01F7               	clrf	___lwdiv@counter
  9009  091E  0AF7               	incf	___lwdiv@counter,f
  9010  091F                     l2710:	
  9011  091F  1BF1               	btfsc	___lwdiv@divisor+1,7
  9012  0920  292B               	goto	l2712
  9013  0921  3001               	movlw	1
  9014  0922                     u3115:	
  9015  0922  35F0               	lslf	___lwdiv@divisor,f
  9016  0923  0DF1               	rlf	___lwdiv@divisor+1,f
  9017  0924  0B89               	decfsz	9,f
  9018  0925  2922               	goto	u3115
  9019  0926  3001               	movlw	1
  9020  0927  00F4               	movwf	??___lwdiv
  9021  0928  0874               	movf	??___lwdiv,w
  9022  0929  07F7               	addwf	___lwdiv@counter,f
  9023  092A  291F               	goto	l2710
  9024  092B                     l2712:	
  9025  092B  3001               	movlw	1
  9026  092C                     u3135:	
  9027  092C  35F5               	lslf	___lwdiv@quotient,f
  9028  092D  0DF6               	rlf	___lwdiv@quotient+1,f
  9029  092E  0B89               	decfsz	9,f
  9030  092F  292C               	goto	u3135
  9031  0930  0871               	movf	___lwdiv@divisor+1,w
  9032  0931  0273               	subwf	___lwdiv@dividend+1,w
  9033  0932  1D03               	skipz
  9034  0933  2936               	goto	u3145
  9035  0934  0870               	movf	___lwdiv@divisor,w
  9036  0935  0272               	subwf	___lwdiv@dividend,w
  9037  0936                     u3145:	
  9038  0936  1C03               	skipc
  9039  0937  293D               	goto	l2718
  9040  0938  0870               	movf	___lwdiv@divisor,w
  9041  0939  02F2               	subwf	___lwdiv@dividend,f
  9042  093A  0871               	movf	___lwdiv@divisor+1,w
  9043  093B  3BF3               	subwfb	___lwdiv@dividend+1,f
  9044  093C  1475               	bsf	___lwdiv@quotient,0
  9045  093D                     l2718:	
  9046  093D  3001               	movlw	1
  9047  093E                     u3155:	
  9048  093E  36F1               	lsrf	___lwdiv@divisor+1,f
  9049  093F  0CF0               	rrf	___lwdiv@divisor,f
  9050  0940  0B89               	decfsz	9,f
  9051  0941  293E               	goto	u3155
  9052  0942  3001               	movlw	1
  9053  0943  02F7               	subwf	___lwdiv@counter,f
  9054  0944  1D03               	btfss	3,2
  9055  0945  292B               	goto	l2712
  9056  0946                     l2722:	
  9057  0946  0876               	movf	___lwdiv@quotient+1,w
  9058  0947  00F1               	movwf	?___lwdiv+1
  9059  0948  0875               	movf	___lwdiv@quotient,w
  9060  0949  00F0               	movwf	?___lwdiv
  9061  094A  0008               	return
  9062  094B                     __end_of___lwdiv:	
  9063                           
  9064                           	psect	text17
  9065  0C1E                     __ptext17:	
  9066 ;; *************** function ___fttol *****************
  9067 ;; Defined at:
  9068 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fttol.c"
  9069 ;; Parameters:    Size  Location     Type
  9070 ;;  f1              3    0[COMMON] float 
  9071 ;; Auto vars:     Size  Location     Type
  9072 ;;  lval            4    9[COMMON] unsigned long 
  9073 ;;  exp1            1   13[COMMON] unsigned char 
  9074 ;;  sign1           1    8[COMMON] unsigned char 
  9075 ;; Return value:  Size  Location     Type
  9076 ;;                  4    0[COMMON] long 
  9077 ;; Registers used:
  9078 ;;		wreg, status,2, status,0
  9079 ;; Tracked objects:
  9080 ;;		On entry : 0/0
  9081 ;;		On exit  : 0/0
  9082 ;;		Unchanged: 0/0
  9083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9084 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9085 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9086 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9087 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9088 ;;Total ram usage:       14 bytes
  9089 ;; Hardware stack levels used:    1
  9090 ;; This function calls:
  9091 ;;		Nothing
  9092 ;; This function is called by:
  9093 ;;		_main
  9094 ;; This function uses a non-reentrant model
  9095 ;;
  9096                           
  9097                           
  9098                           ;psect for function ___fttol
  9099  0C1E                     ___fttol:	
  9100                           
  9101                           ;incstack = 0
  9102                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  9103  0C1E  0870               	movf	___fttol@f1,w
  9104  0C1F  00F4               	movwf	??___fttol
  9105  0C20  0871               	movf	___fttol@f1+1,w
  9106  0C21  00F5               	movwf	??___fttol+1
  9107  0C22  0872               	movf	___fttol@f1+2,w
  9108  0C23  00F6               	movwf	??___fttol+2
  9109  0C24  1003               	clrc
  9110  0C25  0D75               	rlf	??___fttol+1,w
  9111  0C26  0D76               	rlf	??___fttol+2,w
  9112  0C27  00F7               	movwf	??___fttol+3
  9113  0C28  0877               	movf	??___fttol+3,w
  9114  0C29  00FD               	movwf	___fttol@exp1
  9115  0C2A  087D               	movf	___fttol@exp1,w
  9116  0C2B  1D03               	btfss	3,2
  9117  0C2C  2C36               	goto	l2664
  9118  0C2D  3000               	movlw	0
  9119  0C2E  00F3               	movwf	?___fttol+3
  9120  0C2F  3000               	movlw	0
  9121  0C30  00F2               	movwf	?___fttol+2
  9122  0C31  3000               	movlw	0
  9123  0C32  00F1               	movwf	?___fttol+1
  9124  0C33  3000               	movlw	0
  9125  0C34  00F0               	movwf	?___fttol
  9126  0C35  0008               	return
  9127  0C36                     l2664:	
  9128  0C36  0870               	movf	___fttol@f1,w
  9129  0C37  00F4               	movwf	??___fttol
  9130  0C38  0871               	movf	___fttol@f1+1,w
  9131  0C39  00F5               	movwf	??___fttol+1
  9132  0C3A  0872               	movf	___fttol@f1+2,w
  9133  0C3B  00F6               	movwf	??___fttol+2
  9134  0C3C  3017               	movlw	23
  9135  0C3D                     u3015:	
  9136  0C3D  36F6               	lsrf	??___fttol+2,f
  9137  0C3E  0CF5               	rrf	??___fttol+1,f
  9138  0C3F  0CF4               	rrf	??___fttol,f
  9139  0C40  0B89               	decfsz	9,f
  9140  0C41  2C3D               	goto	u3015
  9141  0C42  0874               	movf	??___fttol,w
  9142  0C43  00F7               	movwf	??___fttol+3
  9143  0C44  0877               	movf	??___fttol+3,w
  9144  0C45  00F8               	movwf	___fttol@sign1
  9145  0C46  17F1               	bsf	___fttol@f1+1,7
  9146  0C47  30FF               	movlw	255
  9147  0C48  05F0               	andwf	___fttol@f1,f
  9148  0C49  30FF               	movlw	255
  9149  0C4A  05F1               	andwf	___fttol@f1+1,f
  9150  0C4B  3000               	movlw	0
  9151  0C4C  05F2               	andwf	___fttol@f1+2,f
  9152  0C4D  0870               	movf	___fttol@f1,w
  9153  0C4E  00F9               	movwf	___fttol@lval
  9154  0C4F  0871               	movf	___fttol@f1+1,w
  9155  0C50  00FA               	movwf	___fttol@lval+1
  9156  0C51  0872               	movf	___fttol@f1+2,w
  9157  0C52  00FB               	movwf	___fttol@lval+2
  9158  0C53  01FC               	clrf	___fttol@lval+3
  9159  0C54  308E               	movlw	142
  9160  0C55  02FD               	subwf	___fttol@exp1,f
  9161  0C56  1FFD               	btfss	___fttol@exp1,7
  9162  0C57  2C74               	goto	l2684
  9163  0C58  087D               	movf	___fttol@exp1,w
  9164  0C59  3A80               	xorlw	128
  9165  0C5A  3E8F               	addlw	143
  9166  0C5B  1803               	skipnc
  9167  0C5C  2C66               	goto	l2682
  9168  0C5D  3000               	movlw	0
  9169  0C5E  00F3               	movwf	?___fttol+3
  9170  0C5F  3000               	movlw	0
  9171  0C60  00F2               	movwf	?___fttol+2
  9172  0C61  3000               	movlw	0
  9173  0C62  00F1               	movwf	?___fttol+1
  9174  0C63  3000               	movlw	0
  9175  0C64  00F0               	movwf	?___fttol
  9176  0C65  0008               	return
  9177  0C66                     l2682:	
  9178  0C66  3001               	movlw	1
  9179  0C67                     u3045:	
  9180  0C67  36FC               	lsrf	___fttol@lval+3,f
  9181  0C68  0CFB               	rrf	___fttol@lval+2,f
  9182  0C69  0CFA               	rrf	___fttol@lval+1,f
  9183  0C6A  0CF9               	rrf	___fttol@lval,f
  9184  0C6B  0B89               	decfsz	9,f
  9185  0C6C  2C67               	goto	u3045
  9186  0C6D  3001               	movlw	1
  9187  0C6E  00F4               	movwf	??___fttol
  9188  0C6F  0874               	movf	??___fttol,w
  9189  0C70  07FD               	addwf	___fttol@exp1,f
  9190  0C71  1903               	btfsc	3,2
  9191  0C72  2C8D               	goto	l2692
  9192  0C73  2C66               	goto	l2682
  9193  0C74                     l2684:	
  9194  0C74  3018               	movlw	24
  9195  0C75  027D               	subwf	___fttol@exp1,w
  9196  0C76  1C03               	skipc
  9197  0C77  2C8A               	goto	l652
  9198  0C78  3000               	movlw	0
  9199  0C79  00F3               	movwf	?___fttol+3
  9200  0C7A  3000               	movlw	0
  9201  0C7B  00F2               	movwf	?___fttol+2
  9202  0C7C  3000               	movlw	0
  9203  0C7D  00F1               	movwf	?___fttol+1
  9204  0C7E  3000               	movlw	0
  9205  0C7F  00F0               	movwf	?___fttol
  9206  0C80  0008               	return
  9207  0C81                     l2690:	
  9208  0C81  3001               	movlw	1
  9209  0C82                     u3075:	
  9210  0C82  35F9               	lslf	___fttol@lval,f
  9211  0C83  0DFA               	rlf	___fttol@lval+1,f
  9212  0C84  0DFB               	rlf	___fttol@lval+2,f
  9213  0C85  0DFC               	rlf	___fttol@lval+3,f
  9214  0C86  0B89               	decfsz	9,f
  9215  0C87  2C82               	goto	u3075
  9216  0C88  3001               	movlw	1
  9217  0C89  02FD               	subwf	___fttol@exp1,f
  9218  0C8A                     l652:	
  9219  0C8A  087D               	movf	___fttol@exp1,w
  9220  0C8B  1D03               	btfss	3,2
  9221  0C8C  2C81               	goto	l2690
  9222  0C8D                     l2692:	
  9223  0C8D  0878               	movf	___fttol@sign1,w
  9224  0C8E  1903               	btfsc	3,2
  9225  0C8F  2C9B               	goto	l2696
  9226  0C90  09F9               	comf	___fttol@lval,f
  9227  0C91  09FA               	comf	___fttol@lval+1,f
  9228  0C92  09FB               	comf	___fttol@lval+2,f
  9229  0C93  09FC               	comf	___fttol@lval+3,f
  9230  0C94  0AF9               	incf	___fttol@lval,f
  9231  0C95  1903               	skipnz
  9232  0C96  0AFA               	incf	___fttol@lval+1,f
  9233  0C97  1903               	skipnz
  9234  0C98  0AFB               	incf	___fttol@lval+2,f
  9235  0C99  1903               	skipnz
  9236  0C9A  0AFC               	incf	___fttol@lval+3,f
  9237  0C9B                     l2696:	
  9238  0C9B  087C               	movf	___fttol@lval+3,w
  9239  0C9C  00F3               	movwf	?___fttol+3
  9240  0C9D  087B               	movf	___fttol@lval+2,w
  9241  0C9E  00F2               	movwf	?___fttol+2
  9242  0C9F  087A               	movf	___fttol@lval+1,w
  9243  0CA0  00F1               	movwf	?___fttol+1
  9244  0CA1  0879               	movf	___fttol@lval,w
  9245  0CA2  00F0               	movwf	?___fttol
  9246  0CA3  0008               	return
  9247  0CA4                     __end_of___fttol:	
  9248                           
  9249                           	psect	text18
  9250  0A00                     __ptext18:	
  9251 ;; *************** function _SYSTEM_Initialize *****************
  9252 ;; Defined at:
  9253 ;;		line 71 in file "system.c"
  9254 ;; Parameters:    Size  Location     Type
  9255 ;;		None
  9256 ;; Auto vars:     Size  Location     Type
  9257 ;;		None
  9258 ;; Return value:  Size  Location     Type
  9259 ;;                  1    wreg      void 
  9260 ;; Registers used:
  9261 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9262 ;; Tracked objects:
  9263 ;;		On entry : 0/0
  9264 ;;		On exit  : 0/0
  9265 ;;		Unchanged: 0/0
  9266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9269 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9270 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9271 ;;Total ram usage:        3 bytes
  9272 ;; Hardware stack levels used:    1
  9273 ;; Hardware stack levels required when called:    3
  9274 ;; This function calls:
  9275 ;;		_ADCC_Initialize
  9276 ;;		_InitCustomChars
  9277 ;;		_LCD_Clear
  9278 ;;		_LCD_Init
  9279 ;;		_OSCILLATOR_Initialize
  9280 ;;		_PIN_MANAGER_Initialize
  9281 ;;		_PWM6_Initialize
  9282 ;;		_TMR2_Initialize
  9283 ;; This function is called by:
  9284 ;;		_main
  9285 ;; This function uses a non-reentrant model
  9286 ;;
  9287                           
  9288                           
  9289                           ;psect for function _SYSTEM_Initialize
  9290  0A00                     _SYSTEM_Initialize:	
  9291                           
  9292                           ;system.c: 73: PIN_MANAGER_Initialize();
  9293                           
  9294                           ;incstack = 0
  9295                           ; Regs used in _SYSTEM_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9296  0A00  3180  2006  318A   	fcall	_PIN_MANAGER_Initialize
  9297                           
  9298                           ;system.c: 74: OSCILLATOR_Initialize();
  9299  0A03  3197  277C  318A   	fcall	_OSCILLATOR_Initialize
  9300                           
  9301                           ;system.c: 75: FVRCON = 0x00;
  9302  0A06  0032               	movlb	18	; select bank18
  9303  0A07  018C               	clrf	12	;volatile
  9304                           
  9305                           ;system.c: 76: ADCC_Initialize();
  9306  0A08  3188  2052  318A   	fcall	_ADCC_Initialize
  9307                           
  9308                           ;system.c: 77: PWM6_Initialize();
  9309  0A0B  3197  2785  318A   	fcall	_PWM6_Initialize
  9310                           
  9311                           ;system.c: 79: TMR2_Initialize();
  9312  0A0E  3197  27A8  318A   	fcall	_TMR2_Initialize
  9313                           
  9314                           ;system.c: 80: LCD_Init(0X00);
  9315  0A11  3000               	movlw	0
  9316  0A12  318C  24A4  318A   	fcall	_LCD_Init
  9317                           
  9318                           ;system.c: 81: _delay((unsigned long)((200)*(32000000/4000.0)));
  9319  0A15  3009               	movlw	9
  9320  0A16  00FA               	movwf	??_SYSTEM_Initialize+2
  9321  0A17  301E               	movlw	30
  9322  0A18  00F9               	movwf	??_SYSTEM_Initialize+1
  9323  0A19  30EB               	movlw	235
  9324  0A1A  00F8               	movwf	??_SYSTEM_Initialize
  9325  0A1B                     u3577:	
  9326  0A1B  0BF8               	decfsz	??_SYSTEM_Initialize,f
  9327  0A1C  2A1B               	goto	u3577
  9328  0A1D  0BF9               	decfsz	??_SYSTEM_Initialize+1,f
  9329  0A1E  2A1B               	goto	u3577
  9330  0A1F  0BFA               	decfsz	??_SYSTEM_Initialize+2,f
  9331  0A20  2A1B               	goto	u3577
  9332  0A21  0000               	nop
  9333                           
  9334                           ;system.c: 82: LCD_Clear();
  9335  0A22  3188  2000  318A   	fcall	_LCD_Clear
  9336                           
  9337                           ;system.c: 83: _delay((unsigned long)((100)*(32000000/4000.0)));
  9338  0A25  3005               	movlw	5
  9339  0A26  00FA               	movwf	??_SYSTEM_Initialize+2
  9340  0A27  300F               	movlw	15
  9341  0A28  00F9               	movwf	??_SYSTEM_Initialize+1
  9342  0A29  30F4               	movlw	244
  9343  0A2A  00F8               	movwf	??_SYSTEM_Initialize
  9344  0A2B                     u3587:	
  9345  0A2B  0BF8               	decfsz	??_SYSTEM_Initialize,f
  9346  0A2C  2A2B               	goto	u3587
  9347  0A2D  0BF9               	decfsz	??_SYSTEM_Initialize+1,f
  9348  0A2E  2A2B               	goto	u3587
  9349  0A2F  0BFA               	decfsz	??_SYSTEM_Initialize+2,f
  9350  0A30  2A2B               	goto	u3587
  9351                           
  9352                           ;system.c: 84: InitCustomChars();
  9353  0A31  3188  20C5  318A   	fcall	_InitCustomChars
  9354                           
  9355                           ;system.c: 85: _delay((unsigned long)((200)*(32000000/4000.0)));
  9356  0A34  3009               	movlw	9
  9357  0A35  00FA               	movwf	??_SYSTEM_Initialize+2
  9358  0A36  301E               	movlw	30
  9359  0A37  00F9               	movwf	??_SYSTEM_Initialize+1
  9360  0A38  30EB               	movlw	235
  9361  0A39  00F8               	movwf	??_SYSTEM_Initialize
  9362  0A3A                     u3597:	
  9363  0A3A  0BF8               	decfsz	??_SYSTEM_Initialize,f
  9364  0A3B  2A3A               	goto	u3597
  9365  0A3C  0BF9               	decfsz	??_SYSTEM_Initialize+1,f
  9366  0A3D  2A3A               	goto	u3597
  9367  0A3E  0BFA               	decfsz	??_SYSTEM_Initialize+2,f
  9368  0A3F  2A3A               	goto	u3597
  9369  0A40  0000               	nop
  9370  0A41  0008               	return
  9371  0A42                     __end_of_SYSTEM_Initialize:	
  9372                           
  9373                           	psect	text19
  9374  17A8                     __ptext19:	
  9375 ;; *************** function _TMR2_Initialize *****************
  9376 ;; Defined at:
  9377 ;;		line 3 in file "tmr2.c"
  9378 ;; Parameters:    Size  Location     Type
  9379 ;;		None
  9380 ;; Auto vars:     Size  Location     Type
  9381 ;;		None
  9382 ;; Return value:  Size  Location     Type
  9383 ;;                  1    wreg      void 
  9384 ;; Registers used:
  9385 ;;		wreg, status,2
  9386 ;; Tracked objects:
  9387 ;;		On entry : 0/0
  9388 ;;		On exit  : 0/0
  9389 ;;		Unchanged: 0/0
  9390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9394 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9395 ;;Total ram usage:        0 bytes
  9396 ;; Hardware stack levels used:    1
  9397 ;; This function calls:
  9398 ;;		Nothing
  9399 ;; This function is called by:
  9400 ;;		_SYSTEM_Initialize
  9401 ;; This function uses a non-reentrant model
  9402 ;;
  9403                           
  9404                           
  9405                           ;psect for function _TMR2_Initialize
  9406  17A8                     _TMR2_Initialize:	
  9407                           
  9408                           ;tmr2.c: 5: T2CON = 0x00;
  9409                           
  9410                           ;incstack = 0
  9411                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  9412  17A8  0025               	movlb	5	; select bank5
  9413  17A9  018E               	clrf	14	;volatile
  9414                           
  9415                           ;tmr2.c: 7: T2CLKCON = 0x01;
  9416  17AA  3001               	movlw	1
  9417  17AB  0090               	movwf	16	;volatile
  9418                           
  9419                           ;tmr2.c: 9: T2HLT = 0x00;
  9420  17AC  018F               	clrf	15	;volatile
  9421                           
  9422                           ;tmr2.c: 11: T2RST = 0x00;
  9423  17AD  0191               	clrf	17	;volatile
  9424                           
  9425                           ;tmr2.c: 13: T2PR = 0xFF;
  9426  17AE  30FF               	movlw	255
  9427  17AF  008D               	movwf	13	;volatile
  9428                           
  9429                           ;tmr2.c: 15: T2TMR = 0x00;
  9430  17B0  018C               	clrf	12	;volatile
  9431                           
  9432                           ;tmr2.c: 17: PIR4bits.TMR2IF = 0;
  9433  17B1  002E               	movlb	14	; select bank14
  9434  17B2  1090               	bcf	16,1	;volatile
  9435                           
  9436                           ;tmr2.c: 19: T2CONbits.TMR2ON = 1;
  9437  17B3  0025               	movlb	5	; select bank5
  9438  17B4  178E               	bsf	14,7	;volatile
  9439  17B5  0008               	return
  9440  17B6                     __end_of_TMR2_Initialize:	
  9441                           
  9442                           	psect	text20
  9443  1785                     __ptext20:	
  9444 ;; *************** function _PWM6_Initialize *****************
  9445 ;; Defined at:
  9446 ;;		line 3 in file "pwm6.c"
  9447 ;; Parameters:    Size  Location     Type
  9448 ;;		None
  9449 ;; Auto vars:     Size  Location     Type
  9450 ;;		None
  9451 ;; Return value:  Size  Location     Type
  9452 ;;                  1    wreg      void 
  9453 ;; Registers used:
  9454 ;;		wreg, status,2, status,0
  9455 ;; Tracked objects:
  9456 ;;		On entry : 0/0
  9457 ;;		On exit  : 0/0
  9458 ;;		Unchanged: 0/0
  9459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9463 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9464 ;;Total ram usage:        0 bytes
  9465 ;; Hardware stack levels used:    1
  9466 ;; This function calls:
  9467 ;;		Nothing
  9468 ;; This function is called by:
  9469 ;;		_SYSTEM_Initialize
  9470 ;; This function uses a non-reentrant model
  9471 ;;
  9472                           
  9473                           
  9474                           ;psect for function _PWM6_Initialize
  9475  1785                     _PWM6_Initialize:	
  9476                           
  9477                           ;pwm6.c: 5: PWM6CON = 0x80;
  9478                           
  9479                           ;incstack = 0
  9480                           ; Regs used in _PWM6_Initialize: [wreg+status,2+status,0]
  9481  1785  3080               	movlw	128
  9482  1786  0027               	movlb	7	; select bank7
  9483  1787  008E               	movwf	14	;volatile
  9484                           
  9485                           ;pwm6.c: 7: PWM6DCH = 0x00;
  9486  1788  018D               	clrf	13	;volatile
  9487                           
  9488                           ;pwm6.c: 9: PWM6DCL = 0x00;
  9489  1789  018C               	clrf	12	;volatile
  9490                           
  9491                           ;pwm6.c: 11: CCPTMRS1bits.P6TSEL = 0x1;
  9492  178A  0024               	movlb	4	; select bank4
  9493  178B  081F               	movf	31,w	;volatile
  9494  178C  39F3               	andlw	-13
  9495  178D  3804               	iorlw	4
  9496  178E  009F               	movwf	31	;volatile
  9497  178F  0008               	return
  9498  1790                     __end_of_PWM6_Initialize:	
  9499                           
  9500                           	psect	text21
  9501  0006                     __ptext21:	
  9502 ;; *************** function _PIN_MANAGER_Initialize *****************
  9503 ;; Defined at:
  9504 ;;		line 5 in file "pin_manager.c"
  9505 ;; Parameters:    Size  Location     Type
  9506 ;;		None
  9507 ;; Auto vars:     Size  Location     Type
  9508 ;;  state           1    0[COMMON] unsigned char 
  9509 ;; Return value:  Size  Location     Type
  9510 ;;                  1    wreg      void 
  9511 ;; Registers used:
  9512 ;;		wreg, status,2
  9513 ;; Tracked objects:
  9514 ;;		On entry : 0/0
  9515 ;;		On exit  : 0/0
  9516 ;;		Unchanged: 0/0
  9517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9519 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9521 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9522 ;;Total ram usage:        1 bytes
  9523 ;; Hardware stack levels used:    1
  9524 ;; This function calls:
  9525 ;;		Nothing
  9526 ;; This function is called by:
  9527 ;;		_SYSTEM_Initialize
  9528 ;; This function uses a non-reentrant model
  9529 ;;
  9530                           
  9531                           
  9532                           ;psect for function _PIN_MANAGER_Initialize
  9533  0006                     _PIN_MANAGER_Initialize:	
  9534                           
  9535                           ;pin_manager.c: 7: LATA = 0x00;
  9536                           
  9537                           ;incstack = 0
  9538                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  9539  0006  0020               	movlb	0	; select bank0
  9540  0007  0196               	clrf	22	;volatile
  9541                           
  9542                           ;pin_manager.c: 8: LATB = 0x00;
  9543  0008  0197               	clrf	23	;volatile
  9544                           
  9545                           ;pin_manager.c: 9: LATC = 0x00;
  9546  0009  0198               	clrf	24	;volatile
  9547                           
  9548                           ;pin_manager.c: 11: WPUA = 0x02;
  9549  000A  3002               	movlw	2
  9550  000B  003E               	movlb	30	; select bank30
  9551  000C  00B9               	movwf	57	;volatile
  9552                           
  9553                           ;pin_manager.c: 12: WPUB = 0x00;
  9554  000D  01C4               	clrf	68	;volatile
  9555                           
  9556                           ;pin_manager.c: 13: WPUC = 0x00;
  9557  000E  01CF               	clrf	79	;volatile
  9558                           
  9559                           ;pin_manager.c: 14: WPUE = 0x8;
  9560  000F  3008               	movlw	8
  9561  0010  00E5               	movwf	101	;volatile
  9562                           
  9563                           ;pin_manager.c: 16: TRISA = 0x02;
  9564  0011  3002               	movlw	2
  9565  0012  0020               	movlb	0	; select bank0
  9566  0013  0091               	movwf	17	;volatile
  9567                           
  9568                           ;pin_manager.c: 17: TRISA = 0x3A;
  9569  0014  303A               	movlw	58
  9570  0015  0091               	movwf	17	;volatile
  9571                           
  9572                           ;pin_manager.c: 18: TRISB = 0x0A;
  9573  0016  300A               	movlw	10
  9574  0017  0092               	movwf	18	;volatile
  9575                           
  9576                           ;pin_manager.c: 19: TRISC = 0x10;
  9577  0018  3010               	movlw	16
  9578  0019  0093               	movwf	19	;volatile
  9579                           
  9580                           ;pin_manager.c: 21: ANSELA = 0x3A;
  9581  001A  303A               	movlw	58
  9582  001B  003E               	movlb	30	; select bank30
  9583  001C  00B8               	movwf	56	;volatile
  9584                           
  9585                           ;pin_manager.c: 22: ANSELB = 0x0A;
  9586  001D  300A               	movlw	10
  9587  001E  00C3               	movwf	67	;volatile
  9588                           
  9589                           ;pin_manager.c: 23: ANSELC = 0x00;
  9590  001F  01CE               	clrf	78	;volatile
  9591                           
  9592                           ;pin_manager.c: 25: PIE0bits.IOCIE = 0;
  9593  0020  002E               	movlb	14	; select bank14
  9594  0021  1216               	bcf	22,4	;volatile
  9595                           
  9596                           ;pin_manager.c: 26: bool state = GIE;
  9597  0022  3000               	movlw	0
  9598  0023  1B8B               	btfsc	11,7	;volatile
  9599  0024  3001               	movlw	1
  9600  0025  00F0               	movwf	PIN_MANAGER_Initialize@state
  9601                           
  9602                           ;pin_manager.c: 27: GIE = 0;
  9603  0026  138B               	bcf	11,7	;volatile
  9604                           
  9605                           ;pin_manager.c: 28: PPSLOCK = 0x55;
  9606  0027  3055               	movlw	85
  9607  0028  003D               	movlb	29	; select bank29
  9608  0029  008F               	movwf	15	;volatile
  9609                           
  9610                           ;pin_manager.c: 29: PPSLOCK = 0xAA;
  9611  002A  30AA               	movlw	170
  9612  002B  008F               	movwf	15	;volatile
  9613                           
  9614                           ;pin_manager.c: 30: PPSLOCKbits.PPSLOCKED = 0x00;
  9615  002C  100F               	bcf	15,0	;volatile
  9616                           
  9617                           ;pin_manager.c: 33: RC2PPS = 0x000E;
  9618  002D  300E               	movlw	14
  9619  002E  003E               	movlb	30	; select bank30
  9620  002F  00A2               	movwf	34	;volatile
  9621                           
  9622                           ;pin_manager.c: 37: PPSLOCK = 0x55;
  9623  0030  3055               	movlw	85
  9624  0031  003D               	movlb	29	; select bank29
  9625  0032  008F               	movwf	15	;volatile
  9626                           
  9627                           ;pin_manager.c: 38: PPSLOCK = 0xAA;
  9628  0033  30AA               	movlw	170
  9629  0034  008F               	movwf	15	;volatile
  9630                           
  9631                           ;pin_manager.c: 39: PPSLOCKbits.PPSLOCKED = 0x01;
  9632  0035  140F               	bsf	15,0	;volatile
  9633                           
  9634                           ;pin_manager.c: 40: GIE = state;
  9635  0036  1C70               	btfss	PIN_MANAGER_Initialize@state,0
  9636  0037  283A               	goto	u2360
  9637  0038  178B               	bsf	11,7	;volatile
  9638  0039  0008               	return
  9639  003A                     u2360:	
  9640  003A  138B               	bcf	11,7	;volatile
  9641  003B  0008               	return
  9642  003C                     __end_of_PIN_MANAGER_Initialize:	
  9643                           
  9644                           	psect	text22
  9645  177C                     __ptext22:	
  9646 ;; *************** function _OSCILLATOR_Initialize *****************
  9647 ;; Defined at:
  9648 ;;		line 89 in file "system.c"
  9649 ;; Parameters:    Size  Location     Type
  9650 ;;		None
  9651 ;; Auto vars:     Size  Location     Type
  9652 ;;		None
  9653 ;; Return value:  Size  Location     Type
  9654 ;;                  1    wreg      void 
  9655 ;; Registers used:
  9656 ;;		wreg, status,2
  9657 ;; Tracked objects:
  9658 ;;		On entry : 0/0
  9659 ;;		On exit  : 0/0
  9660 ;;		Unchanged: 0/0
  9661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9665 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9666 ;;Total ram usage:        0 bytes
  9667 ;; Hardware stack levels used:    1
  9668 ;; This function calls:
  9669 ;;		Nothing
  9670 ;; This function is called by:
  9671 ;;		_SYSTEM_Initialize
  9672 ;; This function uses a non-reentrant model
  9673 ;;
  9674                           
  9675                           
  9676                           ;psect for function _OSCILLATOR_Initialize
  9677  177C                     _OSCILLATOR_Initialize:	
  9678                           
  9679                           ;system.c: 91: OSCCON1 = 0x60;
  9680                           
  9681                           ;incstack = 0
  9682                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  9683  177C  3060               	movlw	96
  9684  177D  0031               	movlb	17	; select bank17
  9685  177E  008D               	movwf	13	;volatile
  9686                           
  9687                           ;system.c: 92: OSCCON3 = 0x00;
  9688  177F  018F               	clrf	15	;volatile
  9689                           
  9690                           ;system.c: 93: OSCEN = 0x00;
  9691  1780  0191               	clrf	17	;volatile
  9692                           
  9693                           ;system.c: 94: OSCFRQ = 0x06;
  9694  1781  3006               	movlw	6
  9695  1782  0093               	movwf	19	;volatile
  9696                           
  9697                           ;system.c: 95: OSCTUNE = 0x00;
  9698  1783  0192               	clrf	18	;volatile
  9699  1784  0008               	return
  9700  1785                     __end_of_OSCILLATOR_Initialize:	
  9701                           
  9702                           	psect	text23
  9703  0CA4                     __ptext23:	
  9704 ;; *************** function _LCD_Init *****************
  9705 ;; Defined at:
  9706 ;;		line 154 in file "lcd.c"
  9707 ;; Parameters:    Size  Location     Type
  9708 ;;  style           1    wreg     unsigned char 
  9709 ;; Auto vars:     Size  Location     Type
  9710 ;;  style           1    7[COMMON] unsigned char 
  9711 ;; Return value:  Size  Location     Type
  9712 ;;                  1    wreg      void 
  9713 ;; Registers used:
  9714 ;;		wreg, status,2, status,0, pclath, cstack
  9715 ;; Tracked objects:
  9716 ;;		On entry : 0/0
  9717 ;;		On exit  : 0/0
  9718 ;;		Unchanged: 0/0
  9719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9721 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9722 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9723 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9724 ;;Total ram usage:        4 bytes
  9725 ;; Hardware stack levels used:    1
  9726 ;; Hardware stack levels required when called:    2
  9727 ;; This function calls:
  9728 ;;		_LCD_Cmd
  9729 ;;		_LCD_Port
  9730 ;; This function is called by:
  9731 ;;		_SYSTEM_Initialize
  9732 ;; This function uses a non-reentrant model
  9733 ;;
  9734                           
  9735                           
  9736                           ;psect for function _LCD_Init
  9737  0CA4                     _LCD_Init:	
  9738                           
  9739                           ;incstack = 0
  9740                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  9741                           ;LCD_Init@style stored from wreg
  9742  0CA4  00F7               	movwf	LCD_Init@style
  9743                           
  9744                           ;lcd.c: 156: LCD_Port(0x00);
  9745  0CA5  3000               	movlw	0
  9746  0CA6  3188  2008  318C   	fcall	_LCD_Port
  9747                           
  9748                           ;lcd.c: 158: _delay((unsigned long)((100)*(32000000/4000.0)));
  9749  0CA9  3005               	movlw	5
  9750  0CAA  00F6               	movwf	??_LCD_Init+2
  9751  0CAB  300F               	movlw	15
  9752  0CAC  00F5               	movwf	??_LCD_Init+1
  9753  0CAD  30F4               	movlw	244
  9754  0CAE  00F4               	movwf	??_LCD_Init
  9755  0CAF                     u3607:	
  9756  0CAF  0BF4               	decfsz	??_LCD_Init,f
  9757  0CB0  2CAF               	goto	u3607
  9758  0CB1  0BF5               	decfsz	??_LCD_Init+1,f
  9759  0CB2  2CAF               	goto	u3607
  9760  0CB3  0BF6               	decfsz	??_LCD_Init+2,f
  9761  0CB4  2CAF               	goto	u3607
  9762                           
  9763                           ;lcd.c: 160: LCD_Cmd(0x03);
  9764  0CB5  3003               	movlw	3
  9765  0CB6  3197  27D6  318C   	fcall	_LCD_Cmd
  9766                           
  9767                           ;lcd.c: 162: _delay((unsigned long)((10)*(32000000/4000.0)));
  9768  0CB9  3068               	movlw	104
  9769  0CBA  00F5               	movwf	??_LCD_Init+1
  9770  0CBB  30E4               	movlw	228
  9771  0CBC  00F4               	movwf	??_LCD_Init
  9772  0CBD                     u3617:	
  9773  0CBD  0BF4               	decfsz	??_LCD_Init,f
  9774  0CBE  2CBD               	goto	u3617
  9775  0CBF  0BF5               	decfsz	??_LCD_Init+1,f
  9776  0CC0  2CBD               	goto	u3617
  9777  0CC1  0000               	nop
  9778                           
  9779                           ;lcd.c: 164: LCD_Cmd(0x03);
  9780  0CC2  3003               	movlw	3
  9781  0CC3  3197  27D6  318C   	fcall	_LCD_Cmd
  9782                           
  9783                           ;lcd.c: 166: _delay((unsigned long)((120)*(32000000/4000000.0)));
  9784  0CC6  3089               	movlw	137
  9785  0CC7  00F4               	movwf	??_LCD_Init
  9786  0CC8                     u3627:	
  9787  0CC8  3200               	nop2
  9788  0CC9  3200               	nop2
  9789  0CCA  0BF4               	decfsz	??_LCD_Init,f
  9790  0CCB  2CC8               	goto	u3627
  9791                           
  9792                           ;lcd.c: 168: LCD_Cmd(0x03);
  9793  0CCC  3003               	movlw	3
  9794  0CCD  3197  27D6  318C   	fcall	_LCD_Cmd
  9795                           
  9796                           ;lcd.c: 170: _delay((unsigned long)((120)*(32000000/4000000.0)));
  9797  0CD0  3089               	movlw	137
  9798  0CD1  00F4               	movwf	??_LCD_Init
  9799  0CD2                     u3637:	
  9800  0CD2  3200               	nop2
  9801  0CD3  3200               	nop2
  9802  0CD4  0BF4               	decfsz	??_LCD_Init,f
  9803  0CD5  2CD2               	goto	u3637
  9804                           
  9805                           ;lcd.c: 172: LCD_Cmd(0x02);
  9806  0CD6  3002               	movlw	2
  9807  0CD7  3197  27D6  318C   	fcall	_LCD_Cmd
  9808                           
  9809                           ;lcd.c: 174: _delay((unsigned long)((120)*(32000000/4000000.0)));
  9810  0CDA  3089               	movlw	137
  9811  0CDB  00F4               	movwf	??_LCD_Init
  9812  0CDC                     u3647:	
  9813  0CDC  3200               	nop2
  9814  0CDD  3200               	nop2
  9815  0CDE  0BF4               	decfsz	??_LCD_Init,f
  9816  0CDF  2CDC               	goto	u3647
  9817                           
  9818                           ;lcd.c: 176: LCD_Cmd(0x2);
  9819  0CE0  3002               	movlw	2
  9820  0CE1  3197  27D6  318C   	fcall	_LCD_Cmd
  9821                           
  9822                           ;lcd.c: 178: LCD_Cmd(0x8);
  9823  0CE4  3008               	movlw	8
  9824  0CE5  3197  27D6  318C   	fcall	_LCD_Cmd
  9825                           
  9826                           ;lcd.c: 180: _delay((unsigned long)((120)*(32000000/4000000.0)));
  9827  0CE8  3089               	movlw	137
  9828  0CE9  00F4               	movwf	??_LCD_Init
  9829  0CEA                     u3657:	
  9830  0CEA  3200               	nop2
  9831  0CEB  3200               	nop2
  9832  0CEC  0BF4               	decfsz	??_LCD_Init,f
  9833  0CED  2CEA               	goto	u3657
  9834                           
  9835                           ;lcd.c: 182: LCD_Cmd(0x0);
  9836  0CEE  3000               	movlw	0
  9837  0CEF  3197  27D6  318C   	fcall	_LCD_Cmd
  9838                           
  9839                           ;lcd.c: 184: LCD_Cmd(0x8);
  9840  0CF2  3008               	movlw	8
  9841  0CF3  3197  27D6  318C   	fcall	_LCD_Cmd
  9842                           
  9843                           ;lcd.c: 186: _delay((unsigned long)((120)*(32000000/4000000.0)));
  9844  0CF6  3089               	movlw	137
  9845  0CF7  00F4               	movwf	??_LCD_Init
  9846  0CF8                     u3667:	
  9847  0CF8  3200               	nop2
  9848  0CF9  3200               	nop2
  9849  0CFA  0BF4               	decfsz	??_LCD_Init,f
  9850  0CFB  2CF8               	goto	u3667
  9851                           
  9852                           ;lcd.c: 188: LCD_Cmd(0x0);
  9853  0CFC  3000               	movlw	0
  9854  0CFD  3197  27D6  318C   	fcall	_LCD_Cmd
  9855                           
  9856                           ;lcd.c: 190: LCD_Cmd(0x1);
  9857  0D00  3001               	movlw	1
  9858  0D01  3197  27D6  318C   	fcall	_LCD_Cmd
  9859                           
  9860                           ;lcd.c: 192: _delay((unsigned long)((5)*(32000000/4000.0)));
  9861  0D04  3034               	movlw	52
  9862  0D05  00F5               	movwf	??_LCD_Init+1
  9863  0D06  30F1               	movlw	241
  9864  0D07  00F4               	movwf	??_LCD_Init
  9865  0D08                     u3677:	
  9866  0D08  0BF4               	decfsz	??_LCD_Init,f
  9867  0D09  2D08               	goto	u3677
  9868  0D0A  0BF5               	decfsz	??_LCD_Init+1,f
  9869  0D0B  2D08               	goto	u3677
  9870  0D0C  3200               	nop2
  9871                           
  9872                           ;lcd.c: 194: LCD_Cmd(0x0);
  9873  0D0D  3000               	movlw	0
  9874  0D0E  3197  27D6  318C   	fcall	_LCD_Cmd
  9875                           
  9876                           ;lcd.c: 196: LCD_Cmd(0x6);
  9877  0D11  3006               	movlw	6
  9878  0D12  3197  27D6  318C   	fcall	_LCD_Cmd
  9879                           
  9880                           ;lcd.c: 198: _delay((unsigned long)((120)*(32000000/4000000.0)));
  9881  0D15  3089               	movlw	137
  9882  0D16  00F4               	movwf	??_LCD_Init
  9883  0D17                     u3687:	
  9884  0D17  3200               	nop2
  9885  0D18  3200               	nop2
  9886  0D19  0BF4               	decfsz	??_LCD_Init,f
  9887  0D1A  2D17               	goto	u3687
  9888                           
  9889                           ;lcd.c: 200: LCD_Cmd(0x0);
  9890  0D1B  3000               	movlw	0
  9891  0D1C  3197  27D6  318C   	fcall	_LCD_Cmd
  9892                           
  9893                           ;lcd.c: 202: LCD_Cmd(0xc|style);
  9894  0D1F  0877               	movf	LCD_Init@style,w
  9895  0D20  380C               	iorlw	12
  9896  0D21  3197  27D6  318C   	fcall	_LCD_Cmd
  9897                           
  9898                           ;lcd.c: 204: _delay((unsigned long)((120)*(32000000/4000000.0)));
  9899  0D24  3089               	movlw	137
  9900  0D25  00F4               	movwf	??_LCD_Init
  9901  0D26                     u3697:	
  9902  0D26  3200               	nop2
  9903  0D27  3200               	nop2
  9904  0D28  0BF4               	decfsz	??_LCD_Init,f
  9905  0D29  2D26               	goto	u3697
  9906  0D2A  0008               	return
  9907  0D2B                     __end_of_LCD_Init:	
  9908                           
  9909                           	psect	text24
  9910  0800                     __ptext24:	
  9911 ;; *************** function _LCD_Clear *****************
  9912 ;; Defined at:
  9913 ;;		line 75 in file "lcd.c"
  9914 ;; Parameters:    Size  Location     Type
  9915 ;;		None
  9916 ;; Auto vars:     Size  Location     Type
  9917 ;;		None
  9918 ;; Return value:  Size  Location     Type
  9919 ;;                  1    wreg      void 
  9920 ;; Registers used:
  9921 ;;		wreg, status,2, status,0, pclath, cstack
  9922 ;; Tracked objects:
  9923 ;;		On entry : 0/0
  9924 ;;		On exit  : 0/0
  9925 ;;		Unchanged: 0/0
  9926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9930 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9931 ;;Total ram usage:        0 bytes
  9932 ;; Hardware stack levels used:    1
  9933 ;; Hardware stack levels required when called:    2
  9934 ;; This function calls:
  9935 ;;		_LCD_Cmd
  9936 ;; This function is called by:
  9937 ;;		_SYSTEM_Initialize
  9938 ;;		_main
  9939 ;; This function uses a non-reentrant model
  9940 ;;
  9941                           
  9942                           
  9943                           ;psect for function _LCD_Clear
  9944  0800                     _LCD_Clear:	
  9945                           
  9946                           ;lcd.c: 77: LCD_Cmd(0);
  9947                           
  9948                           ;incstack = 0
  9949                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  9950  0800  3000               	movlw	0
  9951  0801  3197  27D6  3188   	fcall	_LCD_Cmd
  9952                           
  9953                           ;lcd.c: 78: LCD_Cmd(1);
  9954  0804  3001               	movlw	1
  9955  0805  3197  27D6         	fcall	_LCD_Cmd
  9956  0807  0008               	return
  9957  0808                     __end_of_LCD_Clear:	
  9958                           
  9959                           	psect	text25
  9960  08C5                     __ptext25:	
  9961 ;; *************** function _InitCustomChars *****************
  9962 ;; Defined at:
  9963 ;;		line 29 in file "lcd.c"
  9964 ;; Parameters:    Size  Location     Type
  9965 ;;		None
  9966 ;; Auto vars:     Size  Location     Type
  9967 ;;  i               1    6[COMMON] unsigned char 
  9968 ;; Return value:  Size  Location     Type
  9969 ;;                  1    wreg      void 
  9970 ;; Registers used:
  9971 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9972 ;; Tracked objects:
  9973 ;;		On entry : 0/0
  9974 ;;		On exit  : 0/0
  9975 ;;		Unchanged: 0/0
  9976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9978 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9979 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9980 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9981 ;;Total ram usage:        2 bytes
  9982 ;; Hardware stack levels used:    1
  9983 ;; Hardware stack levels required when called:    2
  9984 ;; This function calls:
  9985 ;;		_LCD_Cmd
  9986 ;;		_LCD_Write_Char
  9987 ;; This function is called by:
  9988 ;;		_SYSTEM_Initialize
  9989 ;; This function uses a non-reentrant model
  9990 ;;
  9991                           
  9992                           
  9993                           ;psect for function _InitCustomChars
  9994  08C5                     _InitCustomChars:	
  9995                           
  9996                           ;lcd.c: 31: uint8_t i;
  9997                           ;lcd.c: 32: LCD_Cmd(0x04);
  9998                           
  9999                           ;incstack = 0
 10000                           ; Regs used in _InitCustomChars: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10001  08C5  3004               	movlw	4
 10002  08C6  3197  27D6  3188   	fcall	_LCD_Cmd
 10003                           
 10004                           ;lcd.c: 33: LCD_Cmd(0x00);
 10005  08C9  3000               	movlw	0
 10006  08CA  3197  27D6  3188   	fcall	_LCD_Cmd
 10007                           
 10008                           ;lcd.c: 34: for (i = 0; i < sizeof(__cgram) ; i++)
 10009  08CD  01F6               	clrf	InitCustomChars@i
 10010  08CE  3018               	movlw	24
 10011  08CF  0276               	subwf	InitCustomChars@i,w
 10012  08D0  1803               	btfsc	3,0
 10013  08D1  28E3               	goto	l2222
 10014  08D2                     l2216:	
 10015                           
 10016                           ;lcd.c: 35: LCD_Write_Char(__cgram[i]);
 10017  08D2  0876               	movf	InitCustomChars@i,w
 10018  08D3  3E20               	addlw	(low (___cgram| (0+256)))& (0+255)
 10019  08D4  0086               	movwf	6
 10020  08D5  3001               	movlw	1	; select bank2/3
 10021  08D6  0087               	movwf	7
 10022  08D7  0801               	movf	1,w
 10023  08D8  3188  20EB  3188   	fcall	_LCD_Write_Char
 10024  08DB  3001               	movlw	1
 10025  08DC  00F5               	movwf	??_InitCustomChars
 10026  08DD  0875               	movf	??_InitCustomChars,w
 10027  08DE  07F6               	addwf	InitCustomChars@i,f
 10028  08DF  3018               	movlw	24
 10029  08E0  0276               	subwf	InitCustomChars@i,w
 10030  08E1  1C03               	skipc
 10031  08E2  28D2               	goto	l2216
 10032  08E3                     l2222:	
 10033                           
 10034                           ;lcd.c: 36: LCD_Cmd(0);
 10035  08E3  3000               	movlw	0
 10036  08E4  3197  27D6  3188   	fcall	_LCD_Cmd
 10037                           
 10038                           ;lcd.c: 37: LCD_Cmd(2);
 10039  08E7  3002               	movlw	2
 10040  08E8  3197  27D6         	fcall	_LCD_Cmd
 10041  08EA  0008               	return
 10042  08EB                     __end_of_InitCustomChars:	
 10043                           
 10044                           	psect	text26
 10045  0852                     __ptext26:	
 10046 ;; *************** function _ADCC_Initialize *****************
 10047 ;; Defined at:
 10048 ;;		line 16 in file "adcc.c"
 10049 ;; Parameters:    Size  Location     Type
 10050 ;;		None
 10051 ;; Auto vars:     Size  Location     Type
 10052 ;;		None
 10053 ;; Return value:  Size  Location     Type
 10054 ;;                  1    wreg      void 
 10055 ;; Registers used:
 10056 ;;		wreg, status,2
 10057 ;; Tracked objects:
 10058 ;;		On entry : 0/0
 10059 ;;		On exit  : 0/0
 10060 ;;		Unchanged: 0/0
 10061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10065 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10066 ;;Total ram usage:        0 bytes
 10067 ;; Hardware stack levels used:    1
 10068 ;; This function calls:
 10069 ;;		Nothing
 10070 ;; This function is called by:
 10071 ;;		_SYSTEM_Initialize
 10072 ;; This function uses a non-reentrant model
 10073 ;;
 10074                           
 10075                           
 10076                           ;psect for function _ADCC_Initialize
 10077  0852                     _ADCC_Initialize:	
 10078                           
 10079                           ;adcc.c: 19: ADCON1 = 0x00;
 10080                           
 10081                           ;incstack = 0
 10082                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
 10083  0852  0021               	movlb	1	; select bank1
 10084  0853  0194               	clrf	20	;volatile
 10085                           
 10086                           ;adcc.c: 21: ADCON2 = 0x00;
 10087  0854  0195               	clrf	21	;volatile
 10088                           
 10089                           ;adcc.c: 23: ADCON3 = 0x00;
 10090  0855  0196               	clrf	22	;volatile
 10091                           
 10092                           ;adcc.c: 25: ADACT = 0x00;
 10093  0856  0199               	clrf	25	;volatile
 10094                           
 10095                           ;adcc.c: 27: ADSTAT = 0x00;
 10096  0857  0197               	clrf	23	;volatile
 10097                           
 10098                           ;adcc.c: 29: ADCLK = 0x3F;
 10099  0858  303F               	movlw	63
 10100  0859  0098               	movwf	24	;volatile
 10101                           
 10102                           ;adcc.c: 33: ADREF = 0x00;
 10103  085A  019A               	clrf	26	;volatile
 10104                           
 10105                           ;adcc.c: 35: ADCAP = 0x00;
 10106  085B  019B               	clrf	27	;volatile
 10107                           
 10108                           ;adcc.c: 38: ADPRE = 0x07;
 10109  085C  3007               	movlw	7
 10110  085D  009C               	movwf	28	;volatile
 10111                           
 10112                           ;adcc.c: 40: ADACQ = 0x00;
 10113  085E  019D               	clrf	29	;volatile
 10114                           
 10115                           ;adcc.c: 42: ADPCH = 0x00;
 10116  085F  019E               	clrf	30	;volatile
 10117                           
 10118                           ;adcc.c: 44: ADRPT = 0x00;
 10119  0860  0022               	movlb	2	; select bank2
 10120  0861  018D               	clrf	13	;volatile
 10121                           
 10122                           ;adcc.c: 46: ADLTHL = 0x00;
 10123  0862  018E               	clrf	14	;volatile
 10124                           
 10125                           ;adcc.c: 48: ADLTHH = 0x00;
 10126  0863  018F               	clrf	15	;volatile
 10127                           
 10128                           ;adcc.c: 50: ADUTHL = 0x00;
 10129  0864  0190               	clrf	16	;volatile
 10130                           
 10131                           ;adcc.c: 52: ADUTHH = 0x00;
 10132  0865  0191               	clrf	17	;volatile
 10133                           
 10134                           ;adcc.c: 54: ADSTPTL = 0x00;
 10135  0866  0192               	clrf	18	;volatile
 10136                           
 10137                           ;adcc.c: 56: ADSTPTH = 0x00;
 10138  0867  0193               	clrf	19	;volatile
 10139                           
 10140                           ;adcc.c: 59: ADCON0 = 0x84;
 10141  0868  3084               	movlw	132
 10142  0869  0021               	movlb	1	; select bank1
 10143  086A  0093               	movwf	19	;volatile
 10144  086B  0008               	return
 10145  086C                     __end_of_ADCC_Initialize:	
 10146                           
 10147                           	psect	text27
 10148  17EA                     __ptext27:	
 10149 ;; *************** function _PWM6_LoadDutyValue *****************
 10150 ;; Defined at:
 10151 ;;		line 14 in file "pwm6.c"
 10152 ;; Parameters:    Size  Location     Type
 10153 ;;  dutyCycle       2    0[COMMON] unsigned int 
 10154 ;; Auto vars:     Size  Location     Type
 10155 ;;		None
 10156 ;; Return value:  Size  Location     Type
 10157 ;;                  1    wreg      void 
 10158 ;; Registers used:
 10159 ;;		wreg, status,2, status,0
 10160 ;; Tracked objects:
 10161 ;;		On entry : 0/0
 10162 ;;		On exit  : 0/0
 10163 ;;		Unchanged: 0/0
 10164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10165 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10167 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10168 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10169 ;;Total ram usage:        4 bytes
 10170 ;; Hardware stack levels used:    1
 10171 ;; This function calls:
 10172 ;;		Nothing
 10173 ;; This function is called by:
 10174 ;;		_main
 10175 ;; This function uses a non-reentrant model
 10176 ;;
 10177                           
 10178                           
 10179                           ;psect for function _PWM6_LoadDutyValue
 10180  17EA                     _PWM6_LoadDutyValue:	
 10181                           
 10182                           ;pwm6.c: 16: PWM6DCH = (dutyCycle & 0x03FC)>>2;
 10183                           
 10184                           ;incstack = 0
 10185                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
 10186  17EA  0871               	movf	PWM6_LoadDutyValue@dutyCycle+1,w
 10187  17EB  00F3               	movwf	??_PWM6_LoadDutyValue+1
 10188  17EC  0870               	movf	PWM6_LoadDutyValue@dutyCycle,w
 10189  17ED  00F2               	movwf	??_PWM6_LoadDutyValue
 10190  17EE  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
 10191  17EF  0CF2               	rrf	??_PWM6_LoadDutyValue,f
 10192  17F0  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
 10193  17F1  0CF2               	rrf	??_PWM6_LoadDutyValue,f
 10194  17F2  0872               	movf	??_PWM6_LoadDutyValue,w
 10195  17F3  0027               	movlb	7	; select bank7
 10196  17F4  008D               	movwf	13	;volatile
 10197                           
 10198                           ;pwm6.c: 18: PWM6DCL = (dutyCycle & 0x0003)<<6;
 10199  17F5  0870               	movf	PWM6_LoadDutyValue@dutyCycle,w
 10200  17F6  3903               	andlw	3
 10201  17F7  00F2               	movwf	??_PWM6_LoadDutyValue
 10202  17F8  3005               	movlw	5
 10203  17F9                     u2995:	
 10204  17F9  35F2               	lslf	??_PWM6_LoadDutyValue,f
 10205  17FA  3EFF               	addlw	-1
 10206  17FB  1D03               	skipz
 10207  17FC  2FF9               	goto	u2995
 10208  17FD  3572               	lslf	??_PWM6_LoadDutyValue,w
 10209  17FE  008C               	movwf	12	;volatile
 10210  17FF  0008               	return
 10211  1800                     __end_of_PWM6_LoadDutyValue:	
 10212                           
 10213                           	psect	text28
 10214  0838                     __ptext28:	
 10215 ;; *************** function _LCD_Write_String *****************
 10216 ;; Defined at:
 10217 ;;		line 239 in file "lcd.c"
 10218 ;; Parameters:    Size  Location     Type
 10219 ;;  a               2    5[COMMON] PTR const unsigned char 
 10220 ;;		 -> STR_16(7), STR_15(9), STR_14(11), STR_13(11), 
 10221 ;;		 -> STR_12(2), STR_11(2), STR_10(2), STR_9(2), 
 10222 ;;		 -> STR_8(2), STR_7(2), STR_6(2), STR_5(2), 
 10223 ;;		 -> STR_4(2), STR_3(2), STR_2(2), STR_1(2), 
 10224 ;; Auto vars:     Size  Location     Type
 10225 ;;  i               2    8[COMMON] int 
 10226 ;; Return value:  Size  Location     Type
 10227 ;;                  1    wreg      void 
 10228 ;; Registers used:
 10229 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10230 ;; Tracked objects:
 10231 ;;		On entry : 0/0
 10232 ;;		On exit  : 0/0
 10233 ;;		Unchanged: 0/0
 10234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10235 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10236 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10237 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10238 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10239 ;;Total ram usage:        5 bytes
 10240 ;; Hardware stack levels used:    1
 10241 ;; Hardware stack levels required when called:    2
 10242 ;; This function calls:
 10243 ;;		_LCD_Write_Char
 10244 ;; This function is called by:
 10245 ;;		_main
 10246 ;; This function uses a non-reentrant model
 10247 ;;
 10248                           
 10249                           
 10250                           ;psect for function _LCD_Write_String
 10251  0838                     _LCD_Write_String:	
 10252                           
 10253                           ;lcd.c: 241: int i;
 10254                           ;lcd.c: 242: for(i=0;a[i]!='\0';i++)
 10255                           
 10256                           ;incstack = 0
 10257                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10258  0838  01F8               	clrf	LCD_Write_String@i
 10259  0839  01F9               	clrf	LCD_Write_String@i+1
 10260  083A                     l2564:	
 10261  083A  0875               	movf	LCD_Write_String@a,w
 10262  083B  0778               	addwf	LCD_Write_String@i,w
 10263  083C  0084               	movwf	4
 10264  083D  0876               	movf	LCD_Write_String@a+1,w
 10265  083E  3D79               	addwfc	LCD_Write_String@i+1,w
 10266  083F  0085               	movwf	5
 10267  0840  0012               	moviw fsr0++
 10268  0841  1903               	btfsc	3,2
 10269  0842  0008               	return
 10270                           
 10271                           ;lcd.c: 243: LCD_Write_Char(a[i]);
 10272  0843  0875               	movf	LCD_Write_String@a,w
 10273  0844  0778               	addwf	LCD_Write_String@i,w
 10274  0845  0084               	movwf	4
 10275  0846  0876               	movf	LCD_Write_String@a+1,w
 10276  0847  3D79               	addwfc	LCD_Write_String@i+1,w
 10277  0848  0085               	movwf	5
 10278  0849  0800               	movf	0,w	;code access
 10279  084A  3188  20EB  3188   	fcall	_LCD_Write_Char
 10280  084D  3001               	movlw	1
 10281  084E  07F8               	addwf	LCD_Write_String@i,f
 10282  084F  3000               	movlw	0
 10283  0850  3DF9               	addwfc	LCD_Write_String@i+1,f
 10284  0851  283A               	goto	l2564
 10285  0852                     __end_of_LCD_Write_String:	
 10286                           
 10287                           	psect	text29
 10288  0F35                     __ptext29:	
 10289 ;; *************** function _LCD_Write_Int *****************
 10290 ;; Defined at:
 10291 ;;		line 246 in file "lcd.c"
 10292 ;; Parameters:    Size  Location     Type
 10293 ;;  value           2    0[BANK0 ] int 
 10294 ;;  fieldLength     1    2[BANK0 ] char 
 10295 ;;  numPlaces       1    3[BANK0 ] char 
 10296 ;;  sign            1    4[BANK0 ] char 
 10297 ;; Auto vars:     Size  Location     Type
 10298 ;;  str             5   10[BANK0 ] unsigned char [5]
 10299 ;;  i               2   17[BANK0 ] int 
 10300 ;;  j               2   15[BANK0 ] int 
 10301 ;; Return value:  Size  Location     Type
 10302 ;;                  1    wreg      void 
 10303 ;; Registers used:
 10304 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10305 ;; Tracked objects:
 10306 ;;		On entry : 0/0
 10307 ;;		On exit  : 0/0
 10308 ;;		Unchanged: 0/0
 10309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10310 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10311 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10312 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10313 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10314 ;;Total ram usage:       19 bytes
 10315 ;; Hardware stack levels used:    1
 10316 ;; Hardware stack levels required when called:    2
 10317 ;; This function calls:
 10318 ;;		_LCD_Write_Char
 10319 ;;		___awdiv
 10320 ;;		___awmod
 10321 ;; This function is called by:
 10322 ;;		_main
 10323 ;; This function uses a non-reentrant model
 10324 ;;
 10325                           
 10326                           
 10327                           ;psect for function _LCD_Write_Int
 10328  0F35                     _LCD_Write_Int:	
 10329                           
 10330                           ;lcd.c: 248: char str[5]={0,0,0,0,0};
 10331                           
 10332                           ;incstack = 0
 10333                           ; Regs used in _LCD_Write_Int: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10334  0F35  30B8               	movlw	low LCD_Write_Int@F13687
 10335  0F36  0086               	movwf	6
 10336  0F37  3000               	movlw	high LCD_Write_Int@F13687
 10337  0F38  0087               	movwf	7
 10338  0F39  302A               	movlw	low LCD_Write_Int@str
 10339  0F3A  0084               	movwf	4
 10340  0F3B  3000               	movlw	high LCD_Write_Int@str
 10341  0F3C  0085               	movwf	5
 10342  0F3D  3005               	movlw	5
 10343  0F3E  0020               	movlb	0	; select bank0
 10344  0F3F  00A5               	movwf	??_LCD_Write_Int
 10345  0F40                     u2900:	
 10346  0F40  0016               	moviw fsr1++
 10347  0F41  001A               	movwi fsr0++
 10348  0F42  0BA5               	decfsz	??_LCD_Write_Int,f
 10349  0F43  2F40               	goto	u2900
 10350                           
 10351                           ;lcd.c: 249: int i=4,j=0;
 10352  0F44  3004               	movlw	4
 10353  0F45  00B1               	movwf	LCD_Write_Int@i
 10354  0F46  3000               	movlw	0
 10355  0F47  00B2               	movwf	LCD_Write_Int@i+1
 10356  0F48  01AF               	clrf	LCD_Write_Int@j
 10357  0F49  01B0               	clrf	LCD_Write_Int@j+1
 10358                           
 10359                           ;lcd.c: 251: if(value<0)
 10360  0F4A  1FA1               	btfss	LCD_Write_Int@value+1,7
 10361  0F4B  2F57               	goto	l2578
 10362                           
 10363                           ;lcd.c: 252: {
 10364                           ;lcd.c: 253: LCD_Write_Char('-');
 10365  0F4C  302D               	movlw	45
 10366  0F4D  3188  20EB  318F   	fcall	_LCD_Write_Char
 10367                           
 10368                           ;lcd.c: 254: value=value*-1;
 10369  0F50  0020               	movlb	0	; select bank0
 10370  0F51  09A0               	comf	LCD_Write_Int@value,f
 10371  0F52  09A1               	comf	LCD_Write_Int@value+1,f
 10372  0F53  0AA0               	incf	LCD_Write_Int@value,f
 10373  0F54  1903               	skipnz
 10374  0F55  0AA1               	incf	LCD_Write_Int@value+1,f
 10375                           
 10376                           ;lcd.c: 255: }
 10377  0F56  2F5E               	goto	l2588
 10378  0F57                     l2578:	
 10379                           
 10380                           ;lcd.c: 257: else
 10381                           ;lcd.c: 258: {
 10382                           ;lcd.c: 259: if(sign == 1)
 10383  0F57  0324               	decf	LCD_Write_Int@sign,w
 10384  0F58  1D03               	btfss	3,2
 10385  0F59  2F5E               	goto	l2588
 10386                           
 10387                           ;lcd.c: 260: {
 10388                           ;lcd.c: 261: LCD_Write_Char('+');
 10389  0F5A  302B               	movlw	43
 10390  0F5B  3188  20EB  318F   	fcall	_LCD_Write_Char
 10391  0F5E                     l2588:	
 10392                           ;lcd.c: 262: }
 10393                           ;lcd.c: 263: }
 10394                           ;lcd.c: 265: while(value)
 10395                           
 10396  0F5E  0020               	movlb	0	; select bank0
 10397  0F5F  0820               	movf	LCD_Write_Int@value,w
 10398  0F60  0421               	iorwf	LCD_Write_Int@value+1,w
 10399  0F61  1903               	btfsc	3,2
 10400  0F62  2F8D               	goto	l2590
 10401                           
 10402                           ;lcd.c: 266: {
 10403                           ;lcd.c: 267: str[i]=value%10;
 10404  0F63  300A               	movlw	10
 10405  0F64  00F0               	movwf	___awmod@divisor
 10406  0F65  3000               	movlw	0
 10407  0F66  00F1               	movwf	___awmod@divisor+1
 10408  0F67  0020               	movlb	0	; select bank0
 10409  0F68  0821               	movf	LCD_Write_Int@value+1,w
 10410  0F69  00F3               	movwf	___awmod@dividend+1
 10411  0F6A  0820               	movf	LCD_Write_Int@value,w
 10412  0F6B  00F2               	movwf	___awmod@dividend
 10413  0F6C  318A  2242  318F   	fcall	___awmod
 10414  0F6F  0870               	movf	?___awmod,w
 10415  0F70  0020               	movlb	0	; select bank0
 10416  0F71  00A5               	movwf	??_LCD_Write_Int
 10417  0F72  0831               	movf	LCD_Write_Int@i,w
 10418  0F73  3E2A               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
 10419  0F74  0086               	movwf	6
 10420  0F75  0187               	clrf	7
 10421  0F76  0825               	movf	??_LCD_Write_Int,w
 10422  0F77  0081               	movwf	1
 10423                           
 10424                           ;lcd.c: 268: value=value/10;
 10425  0F78  300A               	movlw	10
 10426  0F79  00F0               	movwf	___awdiv@divisor
 10427  0F7A  3000               	movlw	0
 10428  0F7B  00F1               	movwf	___awdiv@divisor+1
 10429  0F7C  0821               	movf	LCD_Write_Int@value+1,w
 10430  0F7D  00F3               	movwf	___awdiv@dividend+1
 10431  0F7E  0820               	movf	LCD_Write_Int@value,w
 10432  0F7F  00F2               	movwf	___awdiv@dividend
 10433  0F80  318A  2287  318F   	fcall	___awdiv
 10434  0F83  0871               	movf	?___awdiv+1,w
 10435  0F84  0020               	movlb	0	; select bank0
 10436  0F85  00A1               	movwf	LCD_Write_Int@value+1
 10437  0F86  0870               	movf	?___awdiv,w
 10438  0F87  00A0               	movwf	LCD_Write_Int@value
 10439                           
 10440                           ;lcd.c: 269: i--;
 10441  0F88  30FF               	movlw	255
 10442  0F89  07B1               	addwf	LCD_Write_Int@i,f
 10443  0F8A  30FF               	movlw	255
 10444  0F8B  3DB2               	addwfc	LCD_Write_Int@i+1,f
 10445  0F8C  2F5E               	goto	l2588
 10446  0F8D                     l2590:	
 10447                           
 10448                           ;lcd.c: 270: }
 10449                           ;lcd.c: 271: if(fieldLength==-1)
 10450  0F8D  0A22               	incf	LCD_Write_Int@fieldLength,w
 10451  0F8E  1903               	btfsc	3,2
 10452  0F8F  2F95               	goto	l2596
 10453  0F90  2F9D               	goto	l2598
 10454  0F91                     l2594:	
 10455                           ;lcd.c: 272: {
 10456                           ;lcd.c: 273: while(str[j]==0)
 10457                           
 10458                           
 10459                           ;lcd.c: 274: {
 10460                           ;lcd.c: 275: j++;
 10461  0F91  3001               	movlw	1
 10462  0F92  07AF               	addwf	LCD_Write_Int@j,f
 10463  0F93  3000               	movlw	0
 10464  0F94  3DB0               	addwfc	LCD_Write_Int@j+1,f
 10465  0F95                     l2596:	
 10466  0F95  082F               	movf	LCD_Write_Int@j,w
 10467  0F96  3E2A               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
 10468  0F97  0086               	movwf	6
 10469  0F98  0187               	clrf	7
 10470  0F99  0801               	movf	1,w
 10471  0F9A  1D03               	btfss	3,2
 10472  0F9B  2FAD               	goto	l2600
 10473  0F9C  2F91               	goto	l2594
 10474  0F9D                     l2598:	
 10475                           ;lcd.c: 276: }
 10476                           ;lcd.c: 277: }
 10477                           
 10478                           
 10479                           ;lcd.c: 278: else
 10480                           ;lcd.c: 279: {
 10481                           ;lcd.c: 280: j=5-fieldLength;
 10482  0F9D  0822               	movf	LCD_Write_Int@fieldLength,w
 10483  0F9E  00A5               	movwf	??_LCD_Write_Int
 10484  0F9F  01A6               	clrf	??_LCD_Write_Int+1
 10485  0FA0  1BA5               	btfsc	??_LCD_Write_Int,7
 10486  0FA1  03A6               	decf	??_LCD_Write_Int+1,f
 10487  0FA2  09A5               	comf	??_LCD_Write_Int,f
 10488  0FA3  09A6               	comf	??_LCD_Write_Int+1,f
 10489  0FA4  0AA5               	incf	??_LCD_Write_Int,f
 10490  0FA5  1903               	skipnz
 10491  0FA6  0AA6               	incf	??_LCD_Write_Int+1,f
 10492  0FA7  0825               	movf	??_LCD_Write_Int,w
 10493  0FA8  3E05               	addlw	5
 10494  0FA9  00AF               	movwf	LCD_Write_Int@j
 10495  0FAA  3000               	movlw	0
 10496  0FAB  3D26               	addwfc	??_LCD_Write_Int+1,w
 10497  0FAC  00B0               	movwf	LCD_Write_Int@j+1
 10498  0FAD                     l2600:	
 10499                           
 10500                           ;lcd.c: 281: }
 10501                           ;lcd.c: 283: for(i=j;i<(5-numPlaces);i++)
 10502  0FAD  0830               	movf	LCD_Write_Int@j+1,w
 10503  0FAE  00B2               	movwf	LCD_Write_Int@i+1
 10504  0FAF  082F               	movf	LCD_Write_Int@j,w
 10505  0FB0  00B1               	movwf	LCD_Write_Int@i
 10506  0FB1                     l2606:	
 10507  0FB1  0823               	movf	LCD_Write_Int@numPlaces,w
 10508  0FB2  00A5               	movwf	??_LCD_Write_Int
 10509  0FB3  01A6               	clrf	??_LCD_Write_Int+1
 10510  0FB4  1BA5               	btfsc	??_LCD_Write_Int,7
 10511  0FB5  03A6               	decf	??_LCD_Write_Int+1,f
 10512  0FB6  09A5               	comf	??_LCD_Write_Int,f
 10513  0FB7  09A6               	comf	??_LCD_Write_Int+1,f
 10514  0FB8  0AA5               	incf	??_LCD_Write_Int,f
 10515  0FB9  1903               	skipnz
 10516  0FBA  0AA6               	incf	??_LCD_Write_Int+1,f
 10517  0FBB  0825               	movf	??_LCD_Write_Int,w
 10518  0FBC  3E05               	addlw	5
 10519  0FBD  00A7               	movwf	??_LCD_Write_Int+2
 10520  0FBE  3000               	movlw	0
 10521  0FBF  3D26               	addwfc	??_LCD_Write_Int+1,w
 10522  0FC0  00A8               	movwf	??_LCD_Write_Int+3
 10523  0FC1  0832               	movf	LCD_Write_Int@i+1,w
 10524  0FC2  3A80               	xorlw	128
 10525  0FC3  00A9               	movwf	??_LCD_Write_Int+4
 10526  0FC4  0828               	movf	??_LCD_Write_Int+3,w
 10527  0FC5  3A80               	xorlw	128
 10528  0FC6  0229               	subwf	??_LCD_Write_Int+4,w
 10529  0FC7  1D03               	skipz
 10530  0FC8  2FCB               	goto	u2965
 10531  0FC9  0827               	movf	??_LCD_Write_Int+2,w
 10532  0FCA  0231               	subwf	LCD_Write_Int@i,w
 10533  0FCB                     u2965:	
 10534  0FCB  1803               	btfsc	3,0
 10535  0FCC  2FDD               	goto	l2608
 10536                           
 10537                           ;lcd.c: 284: {
 10538                           ;lcd.c: 285: LCD_Write_Char(48+str[i]);
 10539  0FCD  0020               	movlb	0	; select bank0
 10540  0FCE  0831               	movf	LCD_Write_Int@i,w
 10541  0FCF  3E2A               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
 10542  0FD0  0086               	movwf	6
 10543  0FD1  0187               	clrf	7
 10544  0FD2  0801               	movf	1,w
 10545  0FD3  3E30               	addlw	48
 10546  0FD4  3188  20EB  318F   	fcall	_LCD_Write_Char
 10547  0FD7  3001               	movlw	1
 10548  0FD8  0020               	movlb	0	; select bank0
 10549  0FD9  07B1               	addwf	LCD_Write_Int@i,f
 10550  0FDA  3000               	movlw	0
 10551  0FDB  3DB2               	addwfc	LCD_Write_Int@i+1,f
 10552  0FDC  2FB1               	goto	l2606
 10553  0FDD                     l2608:	
 10554                           
 10555                           ;lcd.c: 286: }
 10556                           ;lcd.c: 288: if(numPlaces == 1)
 10557  0FDD  0020               	movlb	0	; select bank0
 10558  0FDE  0323               	decf	LCD_Write_Int@numPlaces,w
 10559  0FDF  1D03               	btfss	3,2
 10560  0FE0  2FEB               	goto	l2612
 10561                           
 10562                           ;lcd.c: 289: {
 10563                           ;lcd.c: 290: LCD_Write_Char(46);
 10564  0FE1  302E               	movlw	46
 10565  0FE2  3188  20EB  318F   	fcall	_LCD_Write_Char
 10566                           
 10567                           ;lcd.c: 291: LCD_Write_Char(48+str[4]);
 10568  0FE5  0020               	movlb	0	; select bank0
 10569  0FE6  082E               	movf	LCD_Write_Int@str+4,w
 10570  0FE7  3E30               	addlw	48
 10571  0FE8  3188  20EB  318F   	fcall	_LCD_Write_Char
 10572  0FEB                     l2612:	
 10573                           
 10574                           ;lcd.c: 292: }
 10575                           ;lcd.c: 294: if(numPlaces == 2)
 10576  0FEB  3002               	movlw	2
 10577  0FEC  0020               	movlb	0	; select bank0
 10578  0FED  0623               	xorwf	LCD_Write_Int@numPlaces,w
 10579  0FEE  1D03               	btfss	3,2
 10580  0FEF  0008               	return
 10581                           
 10582                           ;lcd.c: 295: {
 10583                           ;lcd.c: 296: LCD_Write_Char(46);
 10584  0FF0  302E               	movlw	46
 10585  0FF1  3188  20EB  318F   	fcall	_LCD_Write_Char
 10586                           
 10587                           ;lcd.c: 297: LCD_Write_Char(48+str[3]);
 10588  0FF4  0020               	movlb	0	; select bank0
 10589  0FF5  082D               	movf	LCD_Write_Int@str+3,w
 10590  0FF6  3E30               	addlw	48
 10591  0FF7  3188  20EB  318F   	fcall	_LCD_Write_Char
 10592                           
 10593                           ;lcd.c: 298: LCD_Write_Char(48+str[4]);
 10594  0FFA  0020               	movlb	0	; select bank0
 10595  0FFB  082E               	movf	LCD_Write_Int@str+4,w
 10596  0FFC  3E30               	addlw	48
 10597  0FFD  3188  20EB         	fcall	_LCD_Write_Char
 10598  0FFF  0008               	return
 10599  1000                     __end_of_LCD_Write_Int:	
 10600                           
 10601                           	psect	text30
 10602  0A42                     __ptext30:	
 10603 ;; *************** function ___awmod *****************
 10604 ;; Defined at:
 10605 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c"
 10606 ;; Parameters:    Size  Location     Type
 10607 ;;  divisor         2    0[COMMON] int 
 10608 ;;  dividend        2    2[COMMON] int 
 10609 ;; Auto vars:     Size  Location     Type
 10610 ;;  sign            1    6[COMMON] unsigned char 
 10611 ;;  counter         1    5[COMMON] unsigned char 
 10612 ;; Return value:  Size  Location     Type
 10613 ;;                  2    0[COMMON] int 
 10614 ;; Registers used:
 10615 ;;		wreg, status,2, status,0
 10616 ;; Tracked objects:
 10617 ;;		On entry : 0/0
 10618 ;;		On exit  : 0/0
 10619 ;;		Unchanged: 0/0
 10620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10621 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10622 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10623 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10624 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10625 ;;Total ram usage:        7 bytes
 10626 ;; Hardware stack levels used:    1
 10627 ;; This function calls:
 10628 ;;		Nothing
 10629 ;; This function is called by:
 10630 ;;		_LCD_Write_Int
 10631 ;; This function uses a non-reentrant model
 10632 ;;
 10633                           
 10634                           
 10635                           ;psect for function ___awmod
 10636  0A42                     ___awmod:	
 10637                           
 10638                           ;incstack = 0
 10639                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 10640  0A42  01F6               	clrf	___awmod@sign
 10641  0A43  1FF3               	btfss	___awmod@dividend+1,7
 10642  0A44  2A4C               	goto	l2438
 10643  0A45  09F2               	comf	___awmod@dividend,f
 10644  0A46  09F3               	comf	___awmod@dividend+1,f
 10645  0A47  0AF2               	incf	___awmod@dividend,f
 10646  0A48  1903               	skipnz
 10647  0A49  0AF3               	incf	___awmod@dividend+1,f
 10648  0A4A  01F6               	clrf	___awmod@sign
 10649  0A4B  0AF6               	incf	___awmod@sign,f
 10650  0A4C                     l2438:	
 10651  0A4C  1FF1               	btfss	___awmod@divisor+1,7
 10652  0A4D  2A53               	goto	l2442
 10653  0A4E  09F0               	comf	___awmod@divisor,f
 10654  0A4F  09F1               	comf	___awmod@divisor+1,f
 10655  0A50  0AF0               	incf	___awmod@divisor,f
 10656  0A51  1903               	skipnz
 10657  0A52  0AF1               	incf	___awmod@divisor+1,f
 10658  0A53                     l2442:	
 10659  0A53  0870               	movf	___awmod@divisor,w
 10660  0A54  0471               	iorwf	___awmod@divisor+1,w
 10661  0A55  1903               	btfsc	3,2
 10662  0A56  2A7A               	goto	l2460
 10663  0A57  01F5               	clrf	___awmod@counter
 10664  0A58  0AF5               	incf	___awmod@counter,f
 10665  0A59                     l2450:	
 10666  0A59  1BF1               	btfsc	___awmod@divisor+1,7
 10667  0A5A  2A65               	goto	l2452
 10668  0A5B  3001               	movlw	1
 10669  0A5C                     u2635:	
 10670  0A5C  35F0               	lslf	___awmod@divisor,f
 10671  0A5D  0DF1               	rlf	___awmod@divisor+1,f
 10672  0A5E  0B89               	decfsz	9,f
 10673  0A5F  2A5C               	goto	u2635
 10674  0A60  3001               	movlw	1
 10675  0A61  00F4               	movwf	??___awmod
 10676  0A62  0874               	movf	??___awmod,w
 10677  0A63  07F5               	addwf	___awmod@counter,f
 10678  0A64  2A59               	goto	l2450
 10679  0A65                     l2452:	
 10680  0A65  0871               	movf	___awmod@divisor+1,w
 10681  0A66  0273               	subwf	___awmod@dividend+1,w
 10682  0A67  1D03               	skipz
 10683  0A68  2A6B               	goto	u2655
 10684  0A69  0870               	movf	___awmod@divisor,w
 10685  0A6A  0272               	subwf	___awmod@dividend,w
 10686  0A6B                     u2655:	
 10687  0A6B  1C03               	skipc
 10688  0A6C  2A71               	goto	l2456
 10689  0A6D  0870               	movf	___awmod@divisor,w
 10690  0A6E  02F2               	subwf	___awmod@dividend,f
 10691  0A6F  0871               	movf	___awmod@divisor+1,w
 10692  0A70  3BF3               	subwfb	___awmod@dividend+1,f
 10693  0A71                     l2456:	
 10694  0A71  3001               	movlw	1
 10695  0A72                     u2665:	
 10696  0A72  36F1               	lsrf	___awmod@divisor+1,f
 10697  0A73  0CF0               	rrf	___awmod@divisor,f
 10698  0A74  0B89               	decfsz	9,f
 10699  0A75  2A72               	goto	u2665
 10700  0A76  3001               	movlw	1
 10701  0A77  02F5               	subwf	___awmod@counter,f
 10702  0A78  1D03               	btfss	3,2
 10703  0A79  2A65               	goto	l2452
 10704  0A7A                     l2460:	
 10705  0A7A  0876               	movf	___awmod@sign,w
 10706  0A7B  1903               	btfsc	3,2
 10707  0A7C  2A82               	goto	l2464
 10708  0A7D  09F2               	comf	___awmod@dividend,f
 10709  0A7E  09F3               	comf	___awmod@dividend+1,f
 10710  0A7F  0AF2               	incf	___awmod@dividend,f
 10711  0A80  1903               	skipnz
 10712  0A81  0AF3               	incf	___awmod@dividend+1,f
 10713  0A82                     l2464:	
 10714  0A82  0873               	movf	___awmod@dividend+1,w
 10715  0A83  00F1               	movwf	?___awmod+1
 10716  0A84  0872               	movf	___awmod@dividend,w
 10717  0A85  00F0               	movwf	?___awmod
 10718  0A86  0008               	return
 10719  0A87                     __end_of___awmod:	
 10720                           
 10721                           	psect	text31
 10722  0A87                     __ptext31:	
 10723 ;; *************** function ___awdiv *****************
 10724 ;; Defined at:
 10725 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c"
 10726 ;; Parameters:    Size  Location     Type
 10727 ;;  divisor         2    0[COMMON] int 
 10728 ;;  dividend        2    2[COMMON] int 
 10729 ;; Auto vars:     Size  Location     Type
 10730 ;;  quotient        2    7[COMMON] int 
 10731 ;;  sign            1    6[COMMON] unsigned char 
 10732 ;;  counter         1    5[COMMON] unsigned char 
 10733 ;; Return value:  Size  Location     Type
 10734 ;;                  2    0[COMMON] int 
 10735 ;; Registers used:
 10736 ;;		wreg, status,2, status,0
 10737 ;; Tracked objects:
 10738 ;;		On entry : 0/0
 10739 ;;		On exit  : 0/0
 10740 ;;		Unchanged: 0/0
 10741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10742 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10743 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10744 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10745 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10746 ;;Total ram usage:        9 bytes
 10747 ;; Hardware stack levels used:    1
 10748 ;; This function calls:
 10749 ;;		Nothing
 10750 ;; This function is called by:
 10751 ;;		_LCD_Write_Int
 10752 ;; This function uses a non-reentrant model
 10753 ;;
 10754                           
 10755                           
 10756                           ;psect for function ___awdiv
 10757  0A87                     ___awdiv:	
 10758                           
 10759                           ;incstack = 0
 10760                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 10761  0A87  01F6               	clrf	___awdiv@sign
 10762  0A88  1FF1               	btfss	___awdiv@divisor+1,7
 10763  0A89  2A91               	goto	l2394
 10764  0A8A  09F0               	comf	___awdiv@divisor,f
 10765  0A8B  09F1               	comf	___awdiv@divisor+1,f
 10766  0A8C  0AF0               	incf	___awdiv@divisor,f
 10767  0A8D  1903               	skipnz
 10768  0A8E  0AF1               	incf	___awdiv@divisor+1,f
 10769  0A8F  01F6               	clrf	___awdiv@sign
 10770  0A90  0AF6               	incf	___awdiv@sign,f
 10771  0A91                     l2394:	
 10772  0A91  1FF3               	btfss	___awdiv@dividend+1,7
 10773  0A92  2A9C               	goto	l2400
 10774  0A93  09F2               	comf	___awdiv@dividend,f
 10775  0A94  09F3               	comf	___awdiv@dividend+1,f
 10776  0A95  0AF2               	incf	___awdiv@dividend,f
 10777  0A96  1903               	skipnz
 10778  0A97  0AF3               	incf	___awdiv@dividend+1,f
 10779  0A98  3001               	movlw	1
 10780  0A99  00F4               	movwf	??___awdiv
 10781  0A9A  0874               	movf	??___awdiv,w
 10782  0A9B  06F6               	xorwf	___awdiv@sign,f
 10783  0A9C                     l2400:	
 10784  0A9C  01F7               	clrf	___awdiv@quotient
 10785  0A9D  01F8               	clrf	___awdiv@quotient+1
 10786  0A9E  0870               	movf	___awdiv@divisor,w
 10787  0A9F  0471               	iorwf	___awdiv@divisor+1,w
 10788  0AA0  1903               	btfsc	3,2
 10789  0AA1  2ACB               	goto	l2422
 10790  0AA2  01F5               	clrf	___awdiv@counter
 10791  0AA3  0AF5               	incf	___awdiv@counter,f
 10792  0AA4                     l2410:	
 10793  0AA4  1BF1               	btfsc	___awdiv@divisor+1,7
 10794  0AA5  2AB0               	goto	l2412
 10795  0AA6  3001               	movlw	1
 10796  0AA7                     u2535:	
 10797  0AA7  35F0               	lslf	___awdiv@divisor,f
 10798  0AA8  0DF1               	rlf	___awdiv@divisor+1,f
 10799  0AA9  0B89               	decfsz	9,f
 10800  0AAA  2AA7               	goto	u2535
 10801  0AAB  3001               	movlw	1
 10802  0AAC  00F4               	movwf	??___awdiv
 10803  0AAD  0874               	movf	??___awdiv,w
 10804  0AAE  07F5               	addwf	___awdiv@counter,f
 10805  0AAF  2AA4               	goto	l2410
 10806  0AB0                     l2412:	
 10807  0AB0  3001               	movlw	1
 10808  0AB1                     u2555:	
 10809  0AB1  35F7               	lslf	___awdiv@quotient,f
 10810  0AB2  0DF8               	rlf	___awdiv@quotient+1,f
 10811  0AB3  0B89               	decfsz	9,f
 10812  0AB4  2AB1               	goto	u2555
 10813  0AB5  0871               	movf	___awdiv@divisor+1,w
 10814  0AB6  0273               	subwf	___awdiv@dividend+1,w
 10815  0AB7  1D03               	skipz
 10816  0AB8  2ABB               	goto	u2565
 10817  0AB9  0870               	movf	___awdiv@divisor,w
 10818  0ABA  0272               	subwf	___awdiv@dividend,w
 10819  0ABB                     u2565:	
 10820  0ABB  1C03               	skipc
 10821  0ABC  2AC2               	goto	l2418
 10822  0ABD  0870               	movf	___awdiv@divisor,w
 10823  0ABE  02F2               	subwf	___awdiv@dividend,f
 10824  0ABF  0871               	movf	___awdiv@divisor+1,w
 10825  0AC0  3BF3               	subwfb	___awdiv@dividend+1,f
 10826  0AC1  1477               	bsf	___awdiv@quotient,0
 10827  0AC2                     l2418:	
 10828  0AC2  3001               	movlw	1
 10829  0AC3                     u2575:	
 10830  0AC3  36F1               	lsrf	___awdiv@divisor+1,f
 10831  0AC4  0CF0               	rrf	___awdiv@divisor,f
 10832  0AC5  0B89               	decfsz	9,f
 10833  0AC6  2AC3               	goto	u2575
 10834  0AC7  3001               	movlw	1
 10835  0AC8  02F5               	subwf	___awdiv@counter,f
 10836  0AC9  1D03               	btfss	3,2
 10837  0ACA  2AB0               	goto	l2412
 10838  0ACB                     l2422:	
 10839  0ACB  0876               	movf	___awdiv@sign,w
 10840  0ACC  1903               	btfsc	3,2
 10841  0ACD  2AD3               	goto	l2426
 10842  0ACE  09F7               	comf	___awdiv@quotient,f
 10843  0ACF  09F8               	comf	___awdiv@quotient+1,f
 10844  0AD0  0AF7               	incf	___awdiv@quotient,f
 10845  0AD1  1903               	skipnz
 10846  0AD2  0AF8               	incf	___awdiv@quotient+1,f
 10847  0AD3                     l2426:	
 10848  0AD3  0878               	movf	___awdiv@quotient+1,w
 10849  0AD4  00F1               	movwf	?___awdiv+1
 10850  0AD5  0877               	movf	___awdiv@quotient,w
 10851  0AD6  00F0               	movwf	?___awdiv
 10852  0AD7  0008               	return
 10853  0AD8                     __end_of___awdiv:	
 10854                           
 10855                           	psect	text32
 10856  08EB                     __ptext32:	
 10857 ;; *************** function _LCD_Write_Char *****************
 10858 ;; Defined at:
 10859 ;;		line 223 in file "lcd.c"
 10860 ;; Parameters:    Size  Location     Type
 10861 ;;  a               1    wreg     const unsigned char 
 10862 ;; Auto vars:     Size  Location     Type
 10863 ;;  a               1    4[COMMON] const unsigned char 
 10864 ;;  y               1    3[COMMON] unsigned char 
 10865 ;;  temp            1    2[COMMON] unsigned char 
 10866 ;; Return value:  Size  Location     Type
 10867 ;;                  1    wreg      void 
 10868 ;; Registers used:
 10869 ;;		wreg, status,2, status,0, pclath, cstack
 10870 ;; Tracked objects:
 10871 ;;		On entry : 0/0
 10872 ;;		On exit  : 0/0
 10873 ;;		Unchanged: 0/0
 10874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10876 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10877 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10878 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10879 ;;Total ram usage:        4 bytes
 10880 ;; Hardware stack levels used:    1
 10881 ;; Hardware stack levels required when called:    1
 10882 ;; This function calls:
 10883 ;;		_LCD_Port
 10884 ;; This function is called by:
 10885 ;;		_InitCustomChars
 10886 ;;		_LCD_Write_String
 10887 ;;		_LCD_Write_Int
 10888 ;;		_main
 10889 ;; This function uses a non-reentrant model
 10890 ;;
 10891                           
 10892                           
 10893                           ;psect for function _LCD_Write_Char
 10894  08EB                     _LCD_Write_Char:	
 10895                           
 10896                           ;incstack = 0
 10897                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
 10898                           ;LCD_Write_Char@a stored from wreg
 10899  08EB  00F4               	movwf	LCD_Write_Char@a
 10900                           
 10901                           ;lcd.c: 225: char temp,y;
 10902                           ;lcd.c: 226: temp = a&0x0F;
 10903  08EC  0874               	movf	LCD_Write_Char@a,w
 10904  08ED  390F               	andlw	15
 10905  08EE  00F1               	movwf	??_LCD_Write_Char
 10906  08EF  0871               	movf	??_LCD_Write_Char,w
 10907  08F0  00F2               	movwf	LCD_Write_Char@temp
 10908                           
 10909                           ;lcd.c: 227: y = a&0xF0;
 10910  08F1  0874               	movf	LCD_Write_Char@a,w
 10911  08F2  39F0               	andlw	240
 10912  08F3  00F1               	movwf	??_LCD_Write_Char
 10913  08F4  0871               	movf	??_LCD_Write_Char,w
 10914  08F5  00F3               	movwf	LCD_Write_Char@y
 10915                           
 10916                           ;lcd.c: 228: RA0 = 1;
 10917  08F6  0020               	movlb	0	; select bank0
 10918  08F7  140C               	bsf	12,0	;volatile
 10919                           
 10920                           ;lcd.c: 229: LCD_Port(y>>4);
 10921  08F8  0873               	movf	LCD_Write_Char@y,w
 10922  08F9  00F1               	movwf	??_LCD_Write_Char
 10923  08FA  3004               	movlw	4
 10924  08FB                     u2265:	
 10925  08FB  36F1               	lsrf	??_LCD_Write_Char,f
 10926  08FC  0B89               	decfsz	9,f
 10927  08FD  28FB               	goto	u2265
 10928  08FE  0871               	movf	??_LCD_Write_Char,w
 10929  08FF  3188  2008  3188   	fcall	_LCD_Port
 10930                           
 10931                           ;lcd.c: 230: RA2 = 1;
 10932  0902  0020               	movlb	0	; select bank0
 10933  0903  150C               	bsf	12,2	;volatile
 10934                           
 10935                           ;lcd.c: 231: RA2 = 0;
 10936  0904  110C               	bcf	12,2	;volatile
 10937                           
 10938                           ;lcd.c: 232: _delay((unsigned long)((40)*(32000000/4000000.0)));
 10939  0905  306A               	movlw	106
 10940  0906  00F1               	movwf	??_LCD_Write_Char
 10941  0907                     u3707:	
 10942  0907  0BF1               	decfsz	??_LCD_Write_Char,f
 10943  0908  2907               	goto	u3707
 10944  0909  0000               	nop
 10945                           
 10946                           ;lcd.c: 233: LCD_Port(temp);
 10947  090A  0872               	movf	LCD_Write_Char@temp,w
 10948  090B  3188  2008  3188   	fcall	_LCD_Port
 10949                           
 10950                           ;lcd.c: 234: RA2 = 1;
 10951  090E  0020               	movlb	0	; select bank0
 10952  090F  150C               	bsf	12,2	;volatile
 10953                           
 10954                           ;lcd.c: 235: RA2 = 0;
 10955  0910  110C               	bcf	12,2	;volatile
 10956                           
 10957                           ;lcd.c: 236: _delay((unsigned long)((40)*(32000000/4000000.0)));
 10958  0911  306A               	movlw	106
 10959  0912  00F1               	movwf	??_LCD_Write_Char
 10960  0913                     u3717:	
 10961  0913  0BF1               	decfsz	??_LCD_Write_Char,f
 10962  0914  2913               	goto	u3717
 10963  0915  0000               	nop
 10964  0916  0008               	return
 10965  0917                     __end_of_LCD_Write_Char:	
 10966                           
 10967                           	psect	text33
 10968  09C1                     __ptext33:	
 10969 ;; *************** function _LCD_Set_Cursor *****************
 10970 ;; Defined at:
 10971 ;;		line 82 in file "lcd.c"
 10972 ;; Parameters:    Size  Location     Type
 10973 ;;  x               1    wreg     unsigned char 
 10974 ;;  y               1    4[COMMON] unsigned char 
 10975 ;; Auto vars:     Size  Location     Type
 10976 ;;  x               1    7[COMMON] unsigned char 
 10977 ;;  temp            1   10[COMMON] unsigned char 
 10978 ;;  w               1    9[COMMON] unsigned char 
 10979 ;;  z               1    8[COMMON] unsigned char 
 10980 ;; Return value:  Size  Location     Type
 10981 ;;                  1    wreg      void 
 10982 ;; Registers used:
 10983 ;;		wreg, status,2, status,0, pclath, cstack
 10984 ;; Tracked objects:
 10985 ;;		On entry : 0/0
 10986 ;;		On exit  : 0/0
 10987 ;;		Unchanged: 0/0
 10988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10989 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10990 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10991 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10992 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10993 ;;Total ram usage:        7 bytes
 10994 ;; Hardware stack levels used:    1
 10995 ;; Hardware stack levels required when called:    2
 10996 ;; This function calls:
 10997 ;;		_LCD_Cmd
 10998 ;; This function is called by:
 10999 ;;		_main
 11000 ;; This function uses a non-reentrant model
 11001 ;;
 11002                           
 11003                           
 11004                           ;psect for function _LCD_Set_Cursor
 11005  09C1                     _LCD_Set_Cursor:	
 11006                           
 11007                           ;incstack = 0
 11008                           ; Regs used in _LCD_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
 11009                           ;LCD_Set_Cursor@x stored from wreg
 11010  09C1  00F7               	movwf	LCD_Set_Cursor@x
 11011                           
 11012                           ;lcd.c: 86: char temp,z,w;
 11013                           ;lcd.c: 88: if(y == 0)
 11014  09C2  0874               	movf	LCD_Set_Cursor@y,w
 11015  09C3  1D03               	btfss	3,2
 11016  09C4  29E1               	goto	l2548
 11017                           
 11018                           ;lcd.c: 89: {
 11019                           ;lcd.c: 90: temp = 0x80 + x;
 11020  09C5  0877               	movf	LCD_Set_Cursor@x,w
 11021  09C6  3E80               	addlw	128
 11022  09C7  00F5               	movwf	??_LCD_Set_Cursor
 11023  09C8  0875               	movf	??_LCD_Set_Cursor,w
 11024  09C9  00FA               	movwf	LCD_Set_Cursor@temp
 11025                           
 11026                           ;lcd.c: 91: z = temp>>4;
 11027  09CA  087A               	movf	LCD_Set_Cursor@temp,w
 11028  09CB  00F5               	movwf	??_LCD_Set_Cursor
 11029  09CC  3004               	movlw	4
 11030  09CD                     u2865:	
 11031  09CD  36F5               	lsrf	??_LCD_Set_Cursor,f
 11032  09CE  0B89               	decfsz	9,f
 11033  09CF  29CD               	goto	u2865
 11034  09D0  0875               	movf	??_LCD_Set_Cursor,w
 11035  09D1  00F6               	movwf	??_LCD_Set_Cursor+1
 11036  09D2  0876               	movf	??_LCD_Set_Cursor+1,w
 11037  09D3  00F8               	movwf	LCD_Set_Cursor@z
 11038                           
 11039                           ;lcd.c: 92: w = temp & 0x0F;
 11040  09D4  087A               	movf	LCD_Set_Cursor@temp,w
 11041  09D5  390F               	andlw	15
 11042  09D6  00F5               	movwf	??_LCD_Set_Cursor
 11043  09D7  0875               	movf	??_LCD_Set_Cursor,w
 11044  09D8  00F9               	movwf	LCD_Set_Cursor@w
 11045                           
 11046                           ;lcd.c: 93: LCD_Cmd(z);
 11047  09D9  0878               	movf	LCD_Set_Cursor@z,w
 11048  09DA  3197  27D6  3189   	fcall	_LCD_Cmd
 11049                           
 11050                           ;lcd.c: 94: LCD_Cmd(w);
 11051  09DD  0879               	movf	LCD_Set_Cursor@w,w
 11052  09DE  3197  27D6         	fcall	_LCD_Cmd
 11053                           
 11054                           ;lcd.c: 95: }
 11055  09E0  0008               	return
 11056  09E1                     l2548:	
 11057                           
 11058                           ;lcd.c: 97: else if(y == 1)
 11059  09E1  0374               	decf	LCD_Set_Cursor@y,w
 11060  09E2  1D03               	btfss	3,2
 11061  09E3  0008               	return
 11062                           
 11063                           ;lcd.c: 98: {
 11064                           ;lcd.c: 99: temp = 0xC0 + x;
 11065  09E4  0877               	movf	LCD_Set_Cursor@x,w
 11066  09E5  3EC0               	addlw	192
 11067  09E6  00F5               	movwf	??_LCD_Set_Cursor
 11068  09E7  0875               	movf	??_LCD_Set_Cursor,w
 11069  09E8  00FA               	movwf	LCD_Set_Cursor@temp
 11070                           
 11071                           ;lcd.c: 100: z = temp>>4;
 11072  09E9  087A               	movf	LCD_Set_Cursor@temp,w
 11073  09EA  00F5               	movwf	??_LCD_Set_Cursor
 11074  09EB  3004               	movlw	4
 11075  09EC                     u2885:	
 11076  09EC  36F5               	lsrf	??_LCD_Set_Cursor,f
 11077  09ED  0B89               	decfsz	9,f
 11078  09EE  29EC               	goto	u2885
 11079  09EF  0875               	movf	??_LCD_Set_Cursor,w
 11080  09F0  00F6               	movwf	??_LCD_Set_Cursor+1
 11081  09F1  0876               	movf	??_LCD_Set_Cursor+1,w
 11082  09F2  00F8               	movwf	LCD_Set_Cursor@z
 11083                           
 11084                           ;lcd.c: 101: w = temp & 0x0F;
 11085  09F3  087A               	movf	LCD_Set_Cursor@temp,w
 11086  09F4  390F               	andlw	15
 11087  09F5  00F5               	movwf	??_LCD_Set_Cursor
 11088  09F6  0875               	movf	??_LCD_Set_Cursor,w
 11089  09F7  00F9               	movwf	LCD_Set_Cursor@w
 11090                           
 11091                           ;lcd.c: 102: LCD_Cmd(z);
 11092  09F8  0878               	movf	LCD_Set_Cursor@z,w
 11093  09F9  3197  27D6  3189   	fcall	_LCD_Cmd
 11094                           
 11095                           ;lcd.c: 103: LCD_Cmd(w);
 11096  09FC  0879               	movf	LCD_Set_Cursor@w,w
 11097  09FD  3197  27D6         	fcall	_LCD_Cmd
 11098  09FF  0008               	return
 11099  0A00                     __end_of_LCD_Set_Cursor:	
 11100                           
 11101                           	psect	text34
 11102  17D6                     __ptext34:	
 11103 ;; *************** function _LCD_Cmd *****************
 11104 ;; Defined at:
 11105 ;;		line 65 in file "lcd.c"
 11106 ;; Parameters:    Size  Location     Type
 11107 ;;  a               1    wreg     unsigned char 
 11108 ;; Auto vars:     Size  Location     Type
 11109 ;;  a               1    3[COMMON] unsigned char 
 11110 ;; Return value:  Size  Location     Type
 11111 ;;                  1    wreg      void 
 11112 ;; Registers used:
 11113 ;;		wreg, status,2, status,0, pclath, cstack
 11114 ;; Tracked objects:
 11115 ;;		On entry : 0/0
 11116 ;;		On exit  : 0/0
 11117 ;;		Unchanged: 0/0
 11118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11120 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11121 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11122 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11123 ;;Total ram usage:        3 bytes
 11124 ;; Hardware stack levels used:    1
 11125 ;; Hardware stack levels required when called:    1
 11126 ;; This function calls:
 11127 ;;		_LCD_Port
 11128 ;; This function is called by:
 11129 ;;		_InitCustomChars
 11130 ;;		_LCD_Clear
 11131 ;;		_LCD_Set_Cursor
 11132 ;;		_LCD_Init
 11133 ;; This function uses a non-reentrant model
 11134 ;;
 11135                           
 11136                           
 11137                           ;psect for function _LCD_Cmd
 11138  17D6                     _LCD_Cmd:	
 11139                           
 11140                           ;incstack = 0
 11141                           ; Regs used in _LCD_Cmd: [wreg+status,2+status,0+pclath+cstack]
 11142                           ;LCD_Cmd@a stored from wreg
 11143  17D6  00F3               	movwf	LCD_Cmd@a
 11144                           
 11145                           ;lcd.c: 67: RA0 = 0;
 11146  17D7  0020               	movlb	0	; select bank0
 11147  17D8  100C               	bcf	12,0	;volatile
 11148                           
 11149                           ;lcd.c: 68: LCD_Port(a);
 11150  17D9  0873               	movf	LCD_Cmd@a,w
 11151  17DA  3188  2008  3197   	fcall	_LCD_Port
 11152                           
 11153                           ;lcd.c: 69: RA2 = 1;
 11154  17DD  0020               	movlb	0	; select bank0
 11155  17DE  150C               	bsf	12,2	;volatile
 11156                           
 11157                           ;lcd.c: 70: RA2 = 0;
 11158  17DF  110C               	bcf	12,2	;volatile
 11159                           
 11160                           ;lcd.c: 71: _delay((unsigned long)((4)*(32000000/4000.0)));
 11161  17E0  302A               	movlw	42
 11162  17E1  00F2               	movwf	??_LCD_Cmd+1
 11163  17E2  308D               	movlw	141
 11164  17E3  00F1               	movwf	??_LCD_Cmd
 11165  17E4                     u3727:	
 11166  17E4  0BF1               	decfsz	??_LCD_Cmd,f
 11167  17E5  2FE4               	goto	u3727
 11168  17E6  0BF2               	decfsz	??_LCD_Cmd+1,f
 11169  17E7  2FE4               	goto	u3727
 11170  17E8  3200               	nop2
 11171  17E9  0008               	return
 11172  17EA                     __end_of_LCD_Cmd:	
 11173                           
 11174                           	psect	text35
 11175  0808                     __ptext35:	
 11176 ;; *************** function _LCD_Port *****************
 11177 ;; Defined at:
 11178 ;;		line 41 in file "lcd.c"
 11179 ;; Parameters:    Size  Location     Type
 11180 ;;  a               1    wreg     unsigned char 
 11181 ;; Auto vars:     Size  Location     Type
 11182 ;;  a               1    0[COMMON] unsigned char 
 11183 ;; Return value:  Size  Location     Type
 11184 ;;                  1    wreg      void 
 11185 ;; Registers used:
 11186 ;;		wreg
 11187 ;; Tracked objects:
 11188 ;;		On entry : 0/0
 11189 ;;		On exit  : 0/0
 11190 ;;		Unchanged: 0/0
 11191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11193 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11195 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11196 ;;Total ram usage:        1 bytes
 11197 ;; Hardware stack levels used:    1
 11198 ;; This function calls:
 11199 ;;		Nothing
 11200 ;; This function is called by:
 11201 ;;		_LCD_Cmd
 11202 ;;		_LCD_Init
 11203 ;;		_LCD_Write_Char
 11204 ;; This function uses a non-reentrant model
 11205 ;;
 11206                           
 11207                           
 11208                           ;psect for function _LCD_Port
 11209  0808                     _LCD_Port:	
 11210                           
 11211                           ;incstack = 0
 11212                           ; Regs used in _LCD_Port: [wreg]
 11213                           ;LCD_Port@a stored from wreg
 11214  0808  00F0               	movwf	LCD_Port@a
 11215                           
 11216                           ;lcd.c: 43: if(a & 1)
 11217  0809  1C70               	btfss	LCD_Port@a,0
 11218  080A  280E               	goto	l94
 11219                           
 11220                           ;lcd.c: 44: RA7 = 1;
 11221  080B  0020               	movlb	0	; select bank0
 11222  080C  178C               	bsf	12,7	;volatile
 11223  080D  2810               	goto	l1946
 11224  080E                     l94:	
 11225                           
 11226                           ;lcd.c: 45: else
 11227                           ;lcd.c: 46: RA7 = 0;
 11228  080E  0020               	movlb	0	; select bank0
 11229  080F  138C               	bcf	12,7	;volatile
 11230  0810                     l1946:	
 11231                           
 11232                           ;lcd.c: 48: if(a & 2)
 11233  0810  1CF0               	btfss	LCD_Port@a,1
 11234  0811  2814               	goto	l96
 11235                           
 11236                           ;lcd.c: 49: RA6 = 1;
 11237  0812  170C               	bsf	12,6	;volatile
 11238  0813  2815               	goto	l1950
 11239  0814                     l96:	
 11240                           
 11241                           ;lcd.c: 50: else
 11242                           ;lcd.c: 51: RA6 = 0;
 11243  0814  130C               	bcf	12,6	;volatile
 11244  0815                     l1950:	
 11245                           
 11246                           ;lcd.c: 53: if(a & 4)
 11247  0815  1D70               	btfss	LCD_Port@a,2
 11248  0816  2819               	goto	l98
 11249                           
 11250                           ;lcd.c: 54: RC0 = 1;
 11251  0817  140E               	bsf	14,0	;volatile
 11252  0818  281A               	goto	l1954
 11253  0819                     l98:	
 11254                           
 11255                           ;lcd.c: 55: else
 11256                           ;lcd.c: 56: RC0 = 0;
 11257  0819  100E               	bcf	14,0	;volatile
 11258  081A                     l1954:	
 11259                           
 11260                           ;lcd.c: 58: if(a & 8)
 11261  081A  1DF0               	btfss	LCD_Port@a,3
 11262  081B  281E               	goto	l100
 11263                           
 11264                           ;lcd.c: 59: RC1 = 1;
 11265  081C  148E               	bsf	14,1	;volatile
 11266  081D  0008               	return
 11267  081E                     l100:	
 11268                           
 11269                           ;lcd.c: 60: else
 11270                           ;lcd.c: 61: RC1 = 0;
 11271  081E  108E               	bcf	14,1	;volatile
 11272  081F  0008               	return
 11273  0820                     __end_of_LCD_Port:	
 11274  007E                     btemp	set	126	;btemp
 11275  007E                     wtemp	set	126
 11276  007E                     wtemp0	set	126
 11277  0080                     wtemp1	set	128
 11278  0082                     wtemp2	set	130
 11279  0084                     wtemp3	set	132
 11280  0086                     wtemp4	set	134
 11281  0088                     wtemp5	set	136
 11282  007F                     wtemp6	set	127
 11283  007E                     ttemp	set	126
 11284  007E                     ttemp0	set	126
 11285  0081                     ttemp1	set	129
 11286  0084                     ttemp2	set	132
 11287  0087                     ttemp3	set	135
 11288  007F                     ttemp4	set	127
 11289  007E                     ltemp	set	126
 11290  007E                     ltemp0	set	126
 11291  0082                     ltemp1	set	130
 11292  0086                     ltemp2	set	134
 11293  0080                     ltemp3	set	128


Data Sizes:
    Strings     45
    Constant    27
    Data        42
    BSS         45
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     76      80
    BANK1            80     26      73
    BANK2            80      0      36
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            48      0       0
    BANK10            0      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 27
		 -> log@coeff(CODE[27]), 

    LCD_Write_String@a	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_16(CODE[7]), STR_15(CODE[9]), STR_14(CODE[11]), STR_13(CODE[11]), 
		 -> STR_12(CODE[2]), STR_11(CODE[2]), STR_10(CODE[2]), STR_9(CODE[2]), 
		 -> STR_8(CODE[2]), STR_7(CODE[2]), STR_6(CODE[2]), STR_5(CODE[2]), 
		 -> STR_4(CODE[2]), STR_3(CODE[2]), STR_2(CODE[2]), STR_1(CODE[2]), 


Critical Paths under _main in COMMON

    _main->___fttol
    _tempCalc->___awtoft
    _log->___awtoft
    ___ftmul->___awtoft
    ___awtoft->___ftpack
    ___ftadd->___awtoft
    ___ftdiv->___awtoft
    _readAnalog->___aldiv
    _SYSTEM_Initialize->_LCD_Init
    _LCD_Init->_LCD_Cmd
    _LCD_Clear->_LCD_Cmd
    _InitCustomChars->_LCD_Write_Char
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Int->___fttol
    _LCD_Write_Char->_LCD_Port
    _LCD_Set_Cursor->_LCD_Cmd
    _LCD_Cmd->_LCD_Port

Critical Paths under _main in BANK0

    _main->_tempCalc
    _tempCalc->_log
    _log->_eval_poly
    _eval_poly->___ftadd
    ___ftsub->___ftadd
    ___ftadd->___ftdiv
    ___ftdiv->___ftmul
    _readAnalog->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                29    29      0   49731
                                             73 BANK0      3     3      0
                                              0 BANK1     26    26      0
                            _ADCRead
                          _LCD_Clear
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                      _LCD_Write_Int
                   _LCD_Write_String
                 _PWM6_LoadDutyValue
                  _SYSTEM_Initialize
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___fttol
                            ___lwdiv
                         _readAnalog
                           _tempCalc
 ---------------------------------------------------------------------------------
 (1) _tempCalc                                            12     9      3   30741
                                             61 BANK0     12     9      3
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftsub
                                _log
 ---------------------------------------------------------------------------------
 (2) _log                                                  6     3      3   16061
                                             55 BANK0      6     3      3
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _frexp                                                6     2      4     330
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) _eval_poly                                           10     3      7    7103
                                             45 BANK0     10     3      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             16    10      6    2749
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6     322
                                              0 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             6     3      3    1904
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3568
                                             45 BANK0      6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             13     7      6    3395
                                             32 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    2729
                                             16 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    1707
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _readAnalog                                          22    20      2    1392
                                              9 COMMON     4     4      0
                                              6 BANK0     18    16      2
                            _ADCRead
                            ___aldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     622
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     406
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _ADCRead                                              4     1      3      22
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              8     4      4     374
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             14    10      4     464
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    3     3      0     709
                                              8 COMMON     3     3      0
                    _ADCC_Initialize
                    _InitCustomChars
                          _LCD_Clear
                           _LCD_Init
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM6_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             4     4      0     220
                                              4 COMMON     4     4      0
                            _LCD_Cmd
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            0     0      0     110
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (2) _InitCustomChars                                      2     2      0     356
                                              5 COMMON     2     2      0
                            _LCD_Cmd
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM6_LoadDutyValue                                   4     2      2     256
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCD_Write_String                                     5     3      2    1116
                                              5 COMMON     5     3      2
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (1) _LCD_Write_Int                                       19    14      5    2759
                                              0 BANK0     19    14      5
                     _LCD_Write_Char
                            ___awdiv
                            ___awmod
                            ___fttol (ARG)
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     402
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     406
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (1) _LCD_Set_Cursor                                       7     6      1    1440
                                              4 COMMON     7     6      1
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (3) _LCD_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (3) _LCD_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCRead
   _LCD_Clear
     _LCD_Cmd
       _LCD_Port
   _LCD_Set_Cursor
     _LCD_Cmd
       _LCD_Port
   _LCD_Write_Char
     _LCD_Port
   _LCD_Write_Int
     _LCD_Write_Char
       _LCD_Port
     ___awdiv
     ___awmod
     ___fttol (ARG)
     ___lwdiv (ARG)
   _LCD_Write_String
     _LCD_Write_Char
       _LCD_Port
   _PWM6_LoadDutyValue
   _SYSTEM_Initialize
     _ADCC_Initialize
     _InitCustomChars
       _LCD_Cmd
         _LCD_Port
       _LCD_Write_Char
         _LCD_Port
     _LCD_Clear
       _LCD_Cmd
         _LCD_Port
     _LCD_Init
       _LCD_Cmd
         _LCD_Port
       _LCD_Port
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM6_Initialize
     _TMR2_Initialize
   ___ftadd
     ___awtoft (ARG)
       ___ftpack
     ___ftdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftpack (ARG)
     ___wmul (ARG)
     _frexp (ARG)
   ___ftdiv
     ___awtoft (ARG)
       ___ftpack
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftpack (ARG)
     ___ftpack (ARG)
   ___ftmul
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)
     _frexp (ARG)
   ___fttol
   ___lwdiv
   _readAnalog
     _ADCRead
     ___aldiv
     ___wmul
   _tempCalc
     ___awtoft
       ___ftpack
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
       _frexp (ARG)
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftsub
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
     _log
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftge
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       _eval_poly
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___wmul
       _frexp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4C      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     1A      49       7       91.3%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      24       9       45.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      CB      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               30      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK10               0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      CB      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Sun Feb 18 19:10:20 2018

                    __CFG_CP$OFF 0000                               l58 17BD                               l94 080E  
                             l96 0814                               l98 0819                     ___awdiv@sign 0076  
            ___wmul@multiplicand 0072      __size_of_PWM6_LoadDutyValue 0016                     ___ftadd@exp1 004C  
                   ___ftadd@exp2 004B                      __CFG_LVP$ON 0000                     ___ftadd@sign 004A  
                            l100 081E                              l400 0874                              l455 0BAD  
                            l561 0B6A                              l652 0C8A                              l568 0B7D  
                            l592 01BA                              l569 0B85                              _GIE 005F  
                            _RA0 0060                              _RA2 0062                              _RC0 0070  
                            _RC1 0071                              _RA6 0066                              _RA7 0067  
                   __CFG_CPD$OFF 0000                              _log 0DD4                  __end_of_ADCRead 17C4  
                   ___awmod@sign 0076                  _TMR2_Initialize 17A8                     __CFG_BORV$LO 0000  
                            wreg 0009                      main@analogs 00C0                  __end_of_LCD_Cmd 17EA  
                   __CFG_ZCD$OFF 0000                     ___ftdiv@cntr 003A                   _LCD_Set_Cursor 09C1  
                   ___ftdiv@sign 003F                             l2000 0173                             l2010 0195  
                           l2020 01B6                             l2012 0199                             l2006 0186  
                           l2024 01CC                             l2008 0190                             l2018 01AC  
                           l2130 08AF                             l2028 01DE                             l2222 08E3  
                           l2038 01F9                             l2142 0977                             l2070 0EF1  
                           l2054 0EAE                             l2400 0A9C                             l2216 08D2  
                           l2048 0E98                             l2410 0AA4                             l2138 0961  
                           l2082 0F0D                             l2066 0EE9                             l2162 0998  
                           l2330 0DF2                             l2412 0AB0                             l2180 0B31  
                           l2422 0ACB                             l2502 0DB2                             l2078 0F05  
                           l2600 0FAD                             l2336 0E03                             l2426 0AD3  
                           l2418 0AC2                             l2450 0A59                             l2442 0A53  
                           l2514 088F                             l2452 0A65                             l2460 0A7A  
                           l2612 0FEB                             l2364 0BCE                             l2356 0BBE  
                           l2532 0319                             l2438 0A4C                             l2606 0FB1  
                           l2710 091F                             l2382 0C15                             l2374 0BFC  
                           l2366 0BDC                             l2464 0A82                             l2456 0A71  
                           l2608 0FDD                             l2712 092B                             l1920 0B51  
                           l2480 0D58                             l2394 0A91                             l2722 0946  
                           l2378 0C07                             l1930 0B77                             l1922 0B56  
                           l1914 0B40                             l2474 0D42                             l2548 09E1  
                           l2564 083A                             l2900 05DB                             l1950 0815  
                           l2590 0F8D                             l2718 093D                             l1918 0B47  
                           l2494 0D99                             l2822 04CF                             l2664 0C36  
                           l1960 086E                             l1928 0B6F                             l2912 060F  
                           l2920 0628                             l2824 04EE                             l2816 04CD  
                           l1954 081A                             l1946 0810                             l2594 0F91  
                           l2578 0F57                             l2690 0C81                             l2682 0C66  
                           l2596 0F95                             l2588 0F5E                             l2692 0C8D  
                           l2684 0C74                             l2860 055B                             l2852 0546  
                           l2828 04F7                             l2598 0F9D                             l1982 014A  
                           l2838 0520                             l2696 0C9B                             l2864 0564  
                           l2848 053D                             l1978 0143                             l1988 0159  
                           l2972 07A9                             l2964 07A0                             l2948 06C7  
                           l2876 0598                             l2884 05B1                             l2976 07B5  
                           l2896 05CF                             l2888 05BA                             l2978 07B6  
                           ?_log 0057                             STR_1 103A                             STR_2 1042  
                           STR_3 1044                             STR_4 103E                             STR_5 103A  
                           STR_6 1036                             STR_7 103C                             STR_8 103A  
                           STR_9 1046                             u2005 0174                             u2035 0187  
                           u2205 0EF8                             _LATA 0016                             _LATB 0017  
                           u3015 0C3D                             _LATC 0018                             u2065 019A  
                           u3115 0922                             u2235 0F0E                             u3045 0C67  
                           u2245 0F14                             u2165 0EBA                             u3135 092C  
                           u2095 01AD                             u2175 0ECA                             u2360 003A  
                           u2265 08FB                             u3145 0936                             u3170 034F  
                           _T2PR 028D                             u3075 0C82                             u3155 093E  
                           u2435 0BD1                             u2195 0EF2                             u3180 035D  
                           u2535 0AA7                             u2455 0BDD                             u1815 0B8C  
                           u1735 0B4C                             u2465 0BF1                             u3417 0374  
                           u2555 0AB1                             u2635 0A5C                             u2475 0BFD  
                           u1755 0B65                             u2715 0D6A                             u3507 046A  
                           u3427 0392                             u2900 0F40                             u2565 0ABB  
                           u2805 02AD                             u2725 0D7A                             u3517 0485  
                           u3437 03AD                             u2575 0AC3                             u2655 0A6B  
                           u3607 0CAF                             u2815 02F0                             u1775 0B72  
                           u2735 0D9A                             u3527 04A0                             u3447 03C8  
                           u2665 0A72                             u3617 0CBD                             u2825 0309  
                           u2745 0DA9                             u3537 04BB                             u3457 03E3  
                           u3707 0907                             u3627 0CC8                             u2755 0DB3  
                           u3547 0519                             u3467 03FE                             u3717 0913  
                           u3637 0CD2                             u1885 0875                             u2845 0325  
                           u3557 05A8                             u3477 0419                             u3727 17E4  
                           u3647 0CDC                             u1895 087A                             u3567 061F  
                           u3487 0434                             u2865 09CD                             u3657 0CEA  
                           u3577 0A1B                             u2785 0226                             u3497 044F  
                           u3667 0CF8                             u3587 0A2B                             u2795 0274  
                           u2885 09EC                             u2965 0FCB                             u3677 0D08  
                           u3597 0A3A                             u3687 0D17                             u3697 0D26  
                           u2995 17F9              tempCalc@analogValue 005D                             _WPUA 0F39  
                           _WPUB 0F44                             _WPUC 0F4F                             _WPUE 0F65  
                   __CFG_WRT$OFF 0000                    __CFG_FCMEN$ON 0000                ?_LCD_Write_String 0075  
                           _main 0341                     ___ftpack@arg 0070               __size_of_LCD_Clear 0008  
                   ___ftpack@exp 0073                             fsr0h 0005                             fsr1h 0007  
                           fsr0l 0004                             indf0 0000                             indf1 0001  
                           fsr1l 0006                             btemp 007E                             log@x 0057  
                  __CFG_BOREN$ON 0000                             ltemp 007E                             start 0002  
             ??_LCD_Write_String 0077                             ttemp 007E                             wtemp 007E  
                  __CFG_CSWEN$ON 0000                    __CFG_MCLRE$ON 0000                     ___ftmul@cntr 002E  
                  _LCD_Write_Int 0F35                     ___ftmul@sign 002F                     ___fttol@exp1 007D  
                          ??_log 005A                     ___fttol@lval 0079                 __end_of_LCD_Init 0D2B  
               __end_of_LCD_Port 0820   __size_of_OSCILLATOR_Initialize 0009    __end_of_OSCILLATOR_Initialize 1785  
                __end_of___aldiv 0C1E                            _ADACQ 009D                            _ADCAP 009B  
                          _ADACT 0099                            ?_main 0070                            _ADCLK 0098  
                          _ADPCH 009E                            _ADREF 009A                  __end_of___awdiv 0AD8  
                          _ADPRE 009C                  __end_of___ftadd 0211                            STR_10 1040  
                          STR_11 103C                            STR_12 1038                            STR_13 101B  
                          STR_14 101B                            STR_15 1026                            STR_16 102F  
                  __CFG_WDTE$OFF 0000                  __end_of___awmod 0A87                            _ADRPT 010D  
                __end_of___ftdiv 0DD4                  __end_of___ftmul 0F35                  ___awdiv@divisor 0070  
                __end_of___ftsub 08A5                  __end_of___fttol 0CA4                            _T2CON 028E  
                          _T2HLT 028F                  __end_of___lwdiv 094B                            _T2TMR 028C  
                          _T2RST 0291                  ___awdiv@counter 0075                            _OSCEN 0891  
                          _TRISA 0011                            _TRISB 0012                            _TRISC 0013  
                _PWM6_Initialize 1785           __end_of_LCD_Set_Cursor 0A00                    ___awtoft@sign 007D  
                          _frexp 0986                            _errno 006C                    ___ftpack@sign 0074  
                          main@x 00CF                            ltemp0 007E                            ltemp1 0082  
                          ltemp2 0086                            ltemp3 0080                            ttemp0 007E  
                          ttemp1 0081                            ttemp2 0084                            ttemp3 0087  
                          ttemp4 007F                            status 0003                            wtemp0 007E  
                          wtemp1 0080                            wtemp2 0082                            wtemp3 0084  
                          wtemp4 0086                            wtemp5 0088                            wtemp6 007F  
               InitCustomChars@i 0076                   ?_LCD_Write_Int 0020                   _LCD_Write_Char 08EB  
                __initialization 07BD                      log@exponent 005B                     __end_of_main 07BD  
              readAnalog@channel 0026          __end_of_TMR2_Initialize 17B6                        ??_ADCRead 0073  
                         ??_main 0069                    ___fttol@sign1 0078                __end_of_LCD_Clear 0808  
                      ??_LCD_Cmd 0071                  ?_LCD_Set_Cursor 0074                           _ADCON0 0093  
                         _ADCON1 0094                           _ADCON2 0095                           _ADCON3 0096  
                         ?_frexp 0070                           _ADLTHH 010F                           _ADLTHL 010E  
                         _ADRESH 008D                           _ADRESL 008C                           _ADSTAT 0097  
                         _ADUTHH 0111                 ___awdiv@dividend 0072                           _ADUTHL 0110  
               __end_of___awtoft 08C5                           _ANSELA 0F38                           _ANSELB 0F43  
                         _ANSELC 0F4E                 __end_of___ftpack 0B9C                           _RC2PPS 0F22  
                 __CFG_WDTCCS$SC 0000                           _FVRCON 090C                           _OSCFRQ 0893  
                  main@dutyCycle 00D5           __end_of_LCD_Write_Char 0917                   __CFG_PWRTE$OFF 0000  
                   _CCPTMRS1bits 021F                           ___ftge 094B           LCD_Write_Int@numPlaces 0023  
                      ??___aldiv 0078                           ___wmul 086C                        ??___awdiv 0074  
                      ??___ftadd 0046                   __CFG_STVREN$ON 0000                        ??___awmod 0074  
                      ??___ftdiv 0036                        ??___ftmul 0026                        ??___ftsub 007E  
                      ??___fttol 0074                        ??___lwdiv 0074          __end_of_PWM6_Initialize 1790  
               ___awdiv@quotient 0077                  ___awmod@divisor 0070                  ___awmod@counter 0075  
                         _totals 00A0            ___ftmul@f3_as_product 002B                 __end_of_tempCalc 011B  
                _ADCC_Initialize 0852                 LCD_Write_Int@str 002A                  _InitCustomChars 08C5  
                LCD_Set_Cursor@w 0079                  LCD_Set_Cursor@x 0077                  LCD_Set_Cursor@y 0074  
                LCD_Set_Cursor@z 0078         readAnalog@analog_channel 0079                _SYSTEM_Initialize 0A00  
               __end_oflog@coeff 101B          __end_of__initialization 07FD                        ?_LCD_Init 0070  
                      ?_LCD_Port 0070                       ___ftadd@f1 0040                       ___ftadd@f2 0043  
                     ___ftge@ff1 0070                       ___ftge@ff2 0073                  ??_LCD_Write_Int 0025  
             ?_SYSTEM_Initialize 0070                     eval_poly@res 0054                       ___ftdiv@f1 0033  
                     ___ftdiv@f2 0030                       ___ftdiv@f3 003B                  ?_LCD_Write_Char 0070  
                  LCD_Init@style 0077                       ___awtoft@c 0078                       ___ftmul@f1 0020  
                     ___ftmul@f2 0023                       ___ftsub@f1 0050                       ___ftsub@f2 004D  
                     ___fttol@f1 0070                   __pcstackCOMMON 0070                        LCD_Port@a 0070  
                   __pidataBANK1 17C4                     __pidataBANK2 0820              ??_SYSTEM_Initialize 0078  
                  __end_of_frexp 09C1                 ?_TMR2_Initialize 0070                          ??_frexp 0074  
      __end_of_SYSTEM_Initialize 0A42                       __pbssBANK0 006C                       __pbssBANK1 00A0  
                     __pbssBANK2 0138               __size_of_eval_poly 0060                       ??_LCD_Init 0074  
                     ??_LCD_Port 0070                       __pmaintext 0341                          ?___ftge 0070  
                        ?___wmul 0070                  __CFG_PPS1WAY$ON 0000          __end_of_ADCC_Initialize 086C  
     __end_of_PWM6_LoadDutyValue 1800                          _ADCRead 17B6        __size_of_LCD_Write_String 001A  
               ?_PWM6_Initialize 0070                        ?___awtoft 0078                        ?___ftpack 0070  
                        _ADSTPTH 0113                          _ADSTPTL 0112         __CFG_SCANE$not_available 0000  
            __CFG_RSTOSC$HFINT32 0000                 main@displayTemp2 00CC          __end_of_InitCustomChars 08EB  
                        _LCD_Cmd 17D6                          _OSCCON1 088D                          _OSCCON3 088F  
                        _OSCTUNE 0892                          _PWM6DCH 038D                          _PWM6DCL 038C  
                        _PWM6CON 038E                          _PPSLOCK 0E8F                        ?_tempCalc 005D  
                     _readAnalog 0211                          ___aldiv 0B9C                          ___cgram 0120  
                __size_of___ftge 003B                          ___awdiv 0A87                          ___ftadd 011B  
                        ___awmod 0A42                          ___ftdiv 0D2B                  __size_of___wmul 001B  
                        ___ftmul 0E81                          ___ftsub 0887                          ___fttol 0C1E  
                        ___lwdiv 0917                       ??___awtoft 007B                       ??___ftpack 0075  
              __end_of_eval_poly 0B38                 ??_LCD_Set_Cursor 0075                          __ptext1 003C  
                        __ptext2 0DD4                          __ptext3 0986                          __ptext4 0AD8  
                        __ptext5 0E81                          __ptext6 094B                          __ptext7 08A5  
                        __ptext8 0887                          __ptext9 011B            _OSCILLATOR_Initialize 177C  
                      _T2CONbits 028E                     __size_of_log 00AD                 ___awmod@dividend 0072  
                 ADCRead@channel 0073                 ___aldiv@dividend 0074         ??_PIN_MANAGER_Initialize 0070  
                        _samples 2300                        _LCD_Clear 0800       __size_of_SYSTEM_Initialize 0042  
                        clrloop0 1791             end_of_initialization 07FD                          init_ram 179C  
                        initloop 179D                       ??_tempCalc 007E                 ___aldiv@quotient 0022  
              LCD_Write_Int@sign 0024                       main@F13661 00E3                       main@F13657 0138  
                   __pstringtext 1000                 ?_ADCC_Initialize 0070            __CFG_WDTCPS$WDTCPS_31 0000  
               ?_InitCustomChars 0070                       ?_LCD_Clear 0070                 __CFG_FEXTOSC$OFF 0000  
              LCD_Write_String@a 0075                LCD_Write_String@i 0078                 ??_LCD_Write_Char 0071  
                    ___ftdiv@exp 003E                __size_of_LCD_Init 0087                __size_of_LCD_Port 0018  
                    ___ftmul@exp 002A                      ?_readAnalog 0026                   __end_of___ftge 0986  
                 __end_of___wmul 0887                 _LCD_Write_String 0838           ?_OSCILLATOR_Initialize 0070  
            start_initialization 07BD                       eval_poly@d 0050                       eval_poly@n 0052  
                     eval_poly@x 004D  __size_of_PIN_MANAGER_Initialize 0036                      __end_of_log 0E81  
                     frexp@value 0070         LCD_Write_Int@fieldLength 0022            __end_of_LCD_Write_Int 1000  
               __CFG_LPBOREN$OFF 0000                         ??___ftge 0076                tempCalc@steinhart 0066  
                       ??___wmul 0074                      __pdataBANK1 00D7                      __pdataBANK2 0120  
                LCD_Write_Char@a 0074                  LCD_Write_Char@y 0073                         ?_ADCRead 0070  
                       ?_LCD_Cmd 0070                __size_of___awtoft 0020                __size_of___ftpack 0064  
                    __pbssBIGRAM 2300                         LCD_Cmd@a 0073                        ___latbits 0002  
                  __pcstackBANK0 0020                    __pcstackBANK1 00BD               _PWM6_LoadDutyValue 17EA  
       __size_of_TMR2_Initialize 000E                      ??_LCD_Clear 0074              __size_of_readAnalog 0130  
            ?_PWM6_LoadDutyValue 0070                 ___lwdiv@dividend 0072           _PIN_MANAGER_Initialize 0006  
                       ?___aldiv 0070                __size_of_tempCalc 00DF                         ?___awdiv 0070  
                       ?___ftadd 0040                         ?___awmod 0070                         ?___ftdiv 0030  
                       ?___ftmul 0020                         ?___ftsub 004D                         ?___fttol 0070  
                       ?___lwdiv 0070                  main@displayTemp 00BD             ??_PWM6_LoadDutyValue 0072  
                      _eval_poly 0AD8         __size_of_PWM6_Initialize 000B                 ___lwdiv@quotient 0075  
                 __size_of_frexp 003B                         _T2CLKCON 0290                  ___aldiv@divisor 0070  
                ___aldiv@counter 0020                         _LCD_Init 0CA4                   ___wmul@product 0074  
                       _LCD_Port 0808                        clear_ram0 1790                         _PIE0bits 0716  
                       _PIR4bits 0710                 __size_of_ADCRead 000E                       _ADCON0bits 0093  
              ___wmul@multiplier 0070                       ?_eval_poly 004D                 __size_of_LCD_Cmd 0014  
       __end_of_LCD_Write_String 0852                ??_TMR2_Initialize 0070                  readAnalog@value 007B  
                      frexp@eptr 0073                     ??_readAnalog 0028                     _tempCalc$960 0063  
        ??_OSCILLATOR_Initialize 0070                   LCD_Write_Int@i 0031                   LCD_Write_Int@j 002F  
               __size_of___aldiv 0082                 __size_of___awdiv 0051                 __size_of___ftadd 00F6  
               __size_of___awmod 0045                 __size_of___ftdiv 00A9                 __size_of___ftmul 00B4  
               __size_of___ftsub 001E                 __size_of___fttol 0086                 __size_of___lwdiv 0034  
                       ___awtoft 08A5                         ___ftpack 0B38         __size_of_ADCC_Initialize 001A  
                       _channels 00D7                  ___lwdiv@divisor 0070                  ___lwdiv@counter 0077  
                       __ptext10 0D2B                         __ptext11 0B38                         __ptext20 1785  
                       __ptext12 0211                         __ptext21 0006                         __ptext13 086C  
                       __ptext30 0A42                         __ptext22 177C                         __ptext14 0B9C  
                       __ptext31 0A87                         __ptext23 0CA4                         __ptext15 17B6  
                       __ptext32 08EB                         __ptext24 0800                         __ptext16 0917  
                       __ptext33 09C1                         __ptext25 08C5                         __ptext17 0C1E  
                       __ptext34 17D6                         __ptext26 0852                         __ptext18 0A00  
                       __ptext35 0808                         __ptext27 17EA                         __ptext19 17A8  
                       __ptext28 0838                         __ptext29 0F35               __end_of_readAnalog 0341  
        __size_of_LCD_Set_Cursor 003F                        tempCalc@R 0060         __size_of_InitCustomChars 0026  
            LCD_Write_Int@F13687 00B8                ??_PWM6_Initialize 0070                    __size_of_main 047C  
           __CFG_WDTCWS$WDTCWS_7 0000                         _tempCalc 003C      PIN_MANAGER_Initialize@state 0070  
                       log@coeff 1000                      ??_eval_poly 007E                      _sampleIndex 006E  
             LCD_Write_Char@temp 0072          ?_PIN_MANAGER_Initialize 0070                __CFG_CLKOUTEN$OFF 0000  
                    _PPSLOCKbits 0E8F          __size_of_LCD_Write_Char 002C               LCD_Set_Cursor@temp 007A  
             LCD_Write_Int@value 0020                     ___aldiv@sign 0021      PWM6_LoadDutyValue@dutyCycle 0070  
         __size_of_LCD_Write_Int 00CB   __end_of_PIN_MANAGER_Initialize 003C                ??_ADCC_Initialize 0070  
              ??_InitCustomChars 0075  
