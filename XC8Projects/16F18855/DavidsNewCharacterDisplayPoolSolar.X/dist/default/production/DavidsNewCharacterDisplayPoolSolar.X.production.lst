

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Mon Feb 26 14:40:19 2018

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	stringtext,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	psect	text32,local,class=CODE,merge=1,delta=2
    51                           	psect	text33,local,class=CODE,merge=1,delta=2
    52                           	psect	text34,local,class=CODE,merge=1,delta=2
    53                           	psect	text35,local,class=CODE,merge=1,delta=2
    54                           	dabs	1,0x620,48
    55                           	dabs	1,0x5A0,80
    56                           	dabs	1,0x520,80
    57                           	dabs	1,0x4D0,32
    58                           	dabs	1,0x2300,0,_samples
    59                           	dabs	1,0x7E,2
    60  0000                     	;# 
    61  0001                     	;# 
    62  0002                     	;# 
    63  0003                     	;# 
    64  0004                     	;# 
    65  0005                     	;# 
    66  0006                     	;# 
    67  0007                     	;# 
    68  0008                     	;# 
    69  0009                     	;# 
    70  000A                     	;# 
    71  000B                     	;# 
    72  000C                     	;# 
    73  000D                     	;# 
    74  000E                     	;# 
    75  0010                     	;# 
    76  0011                     	;# 
    77  0012                     	;# 
    78  0013                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  001C                     	;# 
    83  001C                     	;# 
    84  001D                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  008C                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  008E                     	;# 
    93  008F                     	;# 
    94  0090                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0093                     	;# 
    98  0094                     	;# 
    99  0095                     	;# 
   100  0096                     	;# 
   101  0097                     	;# 
   102  0098                     	;# 
   103  0099                     	;# 
   104  009A                     	;# 
   105  009B                     	;# 
   106  009C                     	;# 
   107  009D                     	;# 
   108  009E                     	;# 
   109  010C                     	;# 
   110  010D                     	;# 
   111  010E                     	;# 
   112  010E                     	;# 
   113  010F                     	;# 
   114  0110                     	;# 
   115  0110                     	;# 
   116  0111                     	;# 
   117  0112                     	;# 
   118  0112                     	;# 
   119  0113                     	;# 
   120  0114                     	;# 
   121  0114                     	;# 
   122  0115                     	;# 
   123  0116                     	;# 
   124  0116                     	;# 
   125  0117                     	;# 
   126  0119                     	;# 
   127  0119                     	;# 
   128  0119                     	;# 
   129  011A                     	;# 
   130  011A                     	;# 
   131  011A                     	;# 
   132  011B                     	;# 
   133  011B                     	;# 
   134  011B                     	;# 
   135  011B                     	;# 
   136  011B                     	;# 
   137  011C                     	;# 
   138  011C                     	;# 
   139  011C                     	;# 
   140  011D                     	;# 
   141  011D                     	;# 
   142  011D                     	;# 
   143  011E                     	;# 
   144  011E                     	;# 
   145  011E                     	;# 
   146  011F                     	;# 
   147  011F                     	;# 
   148  011F                     	;# 
   149  011F                     	;# 
   150  011F                     	;# 
   151  018C                     	;# 
   152  018D                     	;# 
   153  018E                     	;# 
   154  018F                     	;# 
   155  0190                     	;# 
   156  0191                     	;# 
   157  0192                     	;# 
   158  0196                     	;# 
   159  0197                     	;# 
   160  0198                     	;# 
   161  0199                     	;# 
   162  019A                     	;# 
   163  019B                     	;# 
   164  019C                     	;# 
   165  020C                     	;# 
   166  020D                     	;# 
   167  020E                     	;# 
   168  020F                     	;# 
   169  020F                     	;# 
   170  0210                     	;# 
   171  0210                     	;# 
   172  0211                     	;# 
   173  0211                     	;# 
   174  0212                     	;# 
   175  0213                     	;# 
   176  0214                     	;# 
   177  0215                     	;# 
   178  0215                     	;# 
   179  0216                     	;# 
   180  0216                     	;# 
   181  0217                     	;# 
   182  0217                     	;# 
   183  0218                     	;# 
   184  0219                     	;# 
   185  021A                     	;# 
   186  021B                     	;# 
   187  021B                     	;# 
   188  021C                     	;# 
   189  021C                     	;# 
   190  021D                     	;# 
   191  021D                     	;# 
   192  021E                     	;# 
   193  021F                     	;# 
   194  028C                     	;# 
   195  028C                     	;# 
   196  028D                     	;# 
   197  028D                     	;# 
   198  028E                     	;# 
   199  028F                     	;# 
   200  0290                     	;# 
   201  0290                     	;# 
   202  0291                     	;# 
   203  0292                     	;# 
   204  0292                     	;# 
   205  0293                     	;# 
   206  0293                     	;# 
   207  0294                     	;# 
   208  0295                     	;# 
   209  0296                     	;# 
   210  0296                     	;# 
   211  0297                     	;# 
   212  0298                     	;# 
   213  0298                     	;# 
   214  0299                     	;# 
   215  0299                     	;# 
   216  029A                     	;# 
   217  029B                     	;# 
   218  029C                     	;# 
   219  029C                     	;# 
   220  029D                     	;# 
   221  030C                     	;# 
   222  030C                     	;# 
   223  030D                     	;# 
   224  030E                     	;# 
   225  030F                     	;# 
   226  0310                     	;# 
   227  0310                     	;# 
   228  0311                     	;# 
   229  0312                     	;# 
   230  0313                     	;# 
   231  0314                     	;# 
   232  0314                     	;# 
   233  0315                     	;# 
   234  0316                     	;# 
   235  0317                     	;# 
   236  0318                     	;# 
   237  0318                     	;# 
   238  0319                     	;# 
   239  031A                     	;# 
   240  031B                     	;# 
   241  031C                     	;# 
   242  031C                     	;# 
   243  031D                     	;# 
   244  031E                     	;# 
   245  031F                     	;# 
   246  038C                     	;# 
   247  038D                     	;# 
   248  038E                     	;# 
   249  0390                     	;# 
   250  0391                     	;# 
   251  0392                     	;# 
   252  040C                     	;# 
   253  040D                     	;# 
   254  040E                     	;# 
   255  040F                     	;# 
   256  0410                     	;# 
   257  0411                     	;# 
   258  0416                     	;# 
   259  0416                     	;# 
   260  0417                     	;# 
   261  0418                     	;# 
   262  0418                     	;# 
   263  0419                     	;# 
   264  041A                     	;# 
   265  041A                     	;# 
   266  041B                     	;# 
   267  041C                     	;# 
   268  041C                     	;# 
   269  041D                     	;# 
   270  041E                     	;# 
   271  041F                     	;# 
   272  048C                     	;# 
   273  048C                     	;# 
   274  048D                     	;# 
   275  048E                     	;# 
   276  048F                     	;# 
   277  048F                     	;# 
   278  0490                     	;# 
   279  0491                     	;# 
   280  0492                     	;# 
   281  0492                     	;# 
   282  0493                     	;# 
   283  0494                     	;# 
   284  0495                     	;# 
   285  0495                     	;# 
   286  0496                     	;# 
   287  0497                     	;# 
   288  0498                     	;# 
   289  0499                     	;# 
   290  049A                     	;# 
   291  049B                     	;# 
   292  049C                     	;# 
   293  049D                     	;# 
   294  050C                     	;# 
   295  050C                     	;# 
   296  050D                     	;# 
   297  050E                     	;# 
   298  050F                     	;# 
   299  050F                     	;# 
   300  0510                     	;# 
   301  0511                     	;# 
   302  0512                     	;# 
   303  0512                     	;# 
   304  0513                     	;# 
   305  0514                     	;# 
   306  0515                     	;# 
   307  0515                     	;# 
   308  0516                     	;# 
   309  0517                     	;# 
   310  0518                     	;# 
   311  0519                     	;# 
   312  051A                     	;# 
   313  051B                     	;# 
   314  051C                     	;# 
   315  051D                     	;# 
   316  058C                     	;# 
   317  058C                     	;# 
   318  058D                     	;# 
   319  058E                     	;# 
   320  058F                     	;# 
   321  058F                     	;# 
   322  0590                     	;# 
   323  0591                     	;# 
   324  0592                     	;# 
   325  0593                     	;# 
   326  060C                     	;# 
   327  060D                     	;# 
   328  060E                     	;# 
   329  060F                     	;# 
   330  0610                     	;# 
   331  0611                     	;# 
   332  0612                     	;# 
   333  0613                     	;# 
   334  0614                     	;# 
   335  0616                     	;# 
   336  0617                     	;# 
   337  0618                     	;# 
   338  0619                     	;# 
   339  061A                     	;# 
   340  061B                     	;# 
   341  061C                     	;# 
   342  061D                     	;# 
   343  061E                     	;# 
   344  068C                     	;# 
   345  068D                     	;# 
   346  068E                     	;# 
   347  068F                     	;# 
   348  0690                     	;# 
   349  0691                     	;# 
   350  0692                     	;# 
   351  0693                     	;# 
   352  0694                     	;# 
   353  070C                     	;# 
   354  070D                     	;# 
   355  070E                     	;# 
   356  070F                     	;# 
   357  0710                     	;# 
   358  0711                     	;# 
   359  0712                     	;# 
   360  0713                     	;# 
   361  0714                     	;# 
   362  0716                     	;# 
   363  0717                     	;# 
   364  0718                     	;# 
   365  0719                     	;# 
   366  071A                     	;# 
   367  071B                     	;# 
   368  071C                     	;# 
   369  071D                     	;# 
   370  071E                     	;# 
   371  0796                     	;# 
   372  0797                     	;# 
   373  0798                     	;# 
   374  0799                     	;# 
   375  079A                     	;# 
   376  079B                     	;# 
   377  080C                     	;# 
   378  080D                     	;# 
   379  080E                     	;# 
   380  080F                     	;# 
   381  0810                     	;# 
   382  0811                     	;# 
   383  0812                     	;# 
   384  0813                     	;# 
   385  0814                     	;# 
   386  081A                     	;# 
   387  081B                     	;# 
   388  081C                     	;# 
   389  081D                     	;# 
   390  081E                     	;# 
   391  081F                     	;# 
   392  088C                     	;# 
   393  088D                     	;# 
   394  088E                     	;# 
   395  088F                     	;# 
   396  0890                     	;# 
   397  0891                     	;# 
   398  0892                     	;# 
   399  0893                     	;# 
   400  0895                     	;# 
   401  0896                     	;# 
   402  0897                     	;# 
   403  0898                     	;# 
   404  0899                     	;# 
   405  089A                     	;# 
   406  089B                     	;# 
   407  090C                     	;# 
   408  090E                     	;# 
   409  090F                     	;# 
   410  091F                     	;# 
   411  091F                     	;# 
   412  098F                     	;# 
   413  098F                     	;# 
   414  0990                     	;# 
   415  0991                     	;# 
   416  0992                     	;# 
   417  0993                     	;# 
   418  0994                     	;# 
   419  0995                     	;# 
   420  0996                     	;# 
   421  0997                     	;# 
   422  0E0F                     	;# 
   423  0E10                     	;# 
   424  0E11                     	;# 
   425  0E12                     	;# 
   426  0E13                     	;# 
   427  0E14                     	;# 
   428  0E15                     	;# 
   429  0E16                     	;# 
   430  0E17                     	;# 
   431  0E18                     	;# 
   432  0E19                     	;# 
   433  0E1A                     	;# 
   434  0E1B                     	;# 
   435  0E1C                     	;# 
   436  0E1D                     	;# 
   437  0E1E                     	;# 
   438  0E1F                     	;# 
   439  0E20                     	;# 
   440  0E21                     	;# 
   441  0E22                     	;# 
   442  0E23                     	;# 
   443  0E24                     	;# 
   444  0E25                     	;# 
   445  0E26                     	;# 
   446  0E27                     	;# 
   447  0E28                     	;# 
   448  0E29                     	;# 
   449  0E2A                     	;# 
   450  0E2B                     	;# 
   451  0E2C                     	;# 
   452  0E2D                     	;# 
   453  0E2E                     	;# 
   454  0E2F                     	;# 
   455  0E30                     	;# 
   456  0E31                     	;# 
   457  0E32                     	;# 
   458  0E33                     	;# 
   459  0E34                     	;# 
   460  0E35                     	;# 
   461  0E36                     	;# 
   462  0E37                     	;# 
   463  0E8F                     	;# 
   464  0E90                     	;# 
   465  0E91                     	;# 
   466  0E92                     	;# 
   467  0E93                     	;# 
   468  0E94                     	;# 
   469  0E95                     	;# 
   470  0E96                     	;# 
   471  0E97                     	;# 
   472  0E9C                     	;# 
   473  0E9D                     	;# 
   474  0E9E                     	;# 
   475  0EA1                     	;# 
   476  0EA2                     	;# 
   477  0EA3                     	;# 
   478  0EA4                     	;# 
   479  0EA5                     	;# 
   480  0EA9                     	;# 
   481  0EAA                     	;# 
   482  0EAB                     	;# 
   483  0EAC                     	;# 
   484  0EB1                     	;# 
   485  0EB2                     	;# 
   486  0EB3                     	;# 
   487  0EB8                     	;# 
   488  0EB9                     	;# 
   489  0EBA                     	;# 
   490  0EBB                     	;# 
   491  0EBC                     	;# 
   492  0EBD                     	;# 
   493  0EBE                     	;# 
   494  0EC3                     	;# 
   495  0EC5                     	;# 
   496  0EC6                     	;# 
   497  0EC7                     	;# 
   498  0EC8                     	;# 
   499  0EC9                     	;# 
   500  0ECA                     	;# 
   501  0ECB                     	;# 
   502  0ECC                     	;# 
   503  0F10                     	;# 
   504  0F11                     	;# 
   505  0F12                     	;# 
   506  0F13                     	;# 
   507  0F14                     	;# 
   508  0F15                     	;# 
   509  0F16                     	;# 
   510  0F17                     	;# 
   511  0F18                     	;# 
   512  0F19                     	;# 
   513  0F1A                     	;# 
   514  0F1B                     	;# 
   515  0F1C                     	;# 
   516  0F1D                     	;# 
   517  0F1E                     	;# 
   518  0F1F                     	;# 
   519  0F20                     	;# 
   520  0F21                     	;# 
   521  0F22                     	;# 
   522  0F23                     	;# 
   523  0F24                     	;# 
   524  0F25                     	;# 
   525  0F26                     	;# 
   526  0F27                     	;# 
   527  0F38                     	;# 
   528  0F39                     	;# 
   529  0F3A                     	;# 
   530  0F3B                     	;# 
   531  0F3C                     	;# 
   532  0F3D                     	;# 
   533  0F3E                     	;# 
   534  0F3F                     	;# 
   535  0F40                     	;# 
   536  0F41                     	;# 
   537  0F43                     	;# 
   538  0F44                     	;# 
   539  0F45                     	;# 
   540  0F46                     	;# 
   541  0F47                     	;# 
   542  0F48                     	;# 
   543  0F49                     	;# 
   544  0F4A                     	;# 
   545  0F4B                     	;# 
   546  0F4C                     	;# 
   547  0F4E                     	;# 
   548  0F4F                     	;# 
   549  0F50                     	;# 
   550  0F51                     	;# 
   551  0F52                     	;# 
   552  0F53                     	;# 
   553  0F54                     	;# 
   554  0F55                     	;# 
   555  0F56                     	;# 
   556  0F57                     	;# 
   557  0F65                     	;# 
   558  0F68                     	;# 
   559  0F69                     	;# 
   560  0F6A                     	;# 
   561  0F6B                     	;# 
   562  0FE4                     	;# 
   563  0FE5                     	;# 
   564  0FE6                     	;# 
   565  0FE7                     	;# 
   566  0FE8                     	;# 
   567  0FE9                     	;# 
   568  0FEA                     	;# 
   569  0FEB                     	;# 
   570  0FED                     	;# 
   571  0FEE                     	;# 
   572  0FEF                     	;# 
   573  0000                     	;# 
   574  0001                     	;# 
   575  0002                     	;# 
   576  0003                     	;# 
   577  0004                     	;# 
   578  0005                     	;# 
   579  0006                     	;# 
   580  0007                     	;# 
   581  0008                     	;# 
   582  0009                     	;# 
   583  000A                     	;# 
   584  000B                     	;# 
   585  000C                     	;# 
   586  000D                     	;# 
   587  000E                     	;# 
   588  0010                     	;# 
   589  0011                     	;# 
   590  0012                     	;# 
   591  0013                     	;# 
   592  0016                     	;# 
   593  0017                     	;# 
   594  0018                     	;# 
   595  001C                     	;# 
   596  001C                     	;# 
   597  001D                     	;# 
   598  001D                     	;# 
   599  001E                     	;# 
   600  001F                     	;# 
   601  008C                     	;# 
   602  008C                     	;# 
   603  008D                     	;# 
   604  008E                     	;# 
   605  008E                     	;# 
   606  008F                     	;# 
   607  0090                     	;# 
   608  0090                     	;# 
   609  0091                     	;# 
   610  0093                     	;# 
   611  0094                     	;# 
   612  0095                     	;# 
   613  0096                     	;# 
   614  0097                     	;# 
   615  0098                     	;# 
   616  0099                     	;# 
   617  009A                     	;# 
   618  009B                     	;# 
   619  009C                     	;# 
   620  009D                     	;# 
   621  009E                     	;# 
   622  010C                     	;# 
   623  010D                     	;# 
   624  010E                     	;# 
   625  010E                     	;# 
   626  010F                     	;# 
   627  0110                     	;# 
   628  0110                     	;# 
   629  0111                     	;# 
   630  0112                     	;# 
   631  0112                     	;# 
   632  0113                     	;# 
   633  0114                     	;# 
   634  0114                     	;# 
   635  0115                     	;# 
   636  0116                     	;# 
   637  0116                     	;# 
   638  0117                     	;# 
   639  0119                     	;# 
   640  0119                     	;# 
   641  0119                     	;# 
   642  011A                     	;# 
   643  011A                     	;# 
   644  011A                     	;# 
   645  011B                     	;# 
   646  011B                     	;# 
   647  011B                     	;# 
   648  011B                     	;# 
   649  011B                     	;# 
   650  011C                     	;# 
   651  011C                     	;# 
   652  011C                     	;# 
   653  011D                     	;# 
   654  011D                     	;# 
   655  011D                     	;# 
   656  011E                     	;# 
   657  011E                     	;# 
   658  011E                     	;# 
   659  011F                     	;# 
   660  011F                     	;# 
   661  011F                     	;# 
   662  011F                     	;# 
   663  011F                     	;# 
   664  018C                     	;# 
   665  018D                     	;# 
   666  018E                     	;# 
   667  018F                     	;# 
   668  0190                     	;# 
   669  0191                     	;# 
   670  0192                     	;# 
   671  0196                     	;# 
   672  0197                     	;# 
   673  0198                     	;# 
   674  0199                     	;# 
   675  019A                     	;# 
   676  019B                     	;# 
   677  019C                     	;# 
   678  020C                     	;# 
   679  020D                     	;# 
   680  020E                     	;# 
   681  020F                     	;# 
   682  020F                     	;# 
   683  0210                     	;# 
   684  0210                     	;# 
   685  0211                     	;# 
   686  0211                     	;# 
   687  0212                     	;# 
   688  0213                     	;# 
   689  0214                     	;# 
   690  0215                     	;# 
   691  0215                     	;# 
   692  0216                     	;# 
   693  0216                     	;# 
   694  0217                     	;# 
   695  0217                     	;# 
   696  0218                     	;# 
   697  0219                     	;# 
   698  021A                     	;# 
   699  021B                     	;# 
   700  021B                     	;# 
   701  021C                     	;# 
   702  021C                     	;# 
   703  021D                     	;# 
   704  021D                     	;# 
   705  021E                     	;# 
   706  021F                     	;# 
   707  028C                     	;# 
   708  028C                     	;# 
   709  028D                     	;# 
   710  028D                     	;# 
   711  028E                     	;# 
   712  028F                     	;# 
   713  0290                     	;# 
   714  0290                     	;# 
   715  0291                     	;# 
   716  0292                     	;# 
   717  0292                     	;# 
   718  0293                     	;# 
   719  0293                     	;# 
   720  0294                     	;# 
   721  0295                     	;# 
   722  0296                     	;# 
   723  0296                     	;# 
   724  0297                     	;# 
   725  0298                     	;# 
   726  0298                     	;# 
   727  0299                     	;# 
   728  0299                     	;# 
   729  029A                     	;# 
   730  029B                     	;# 
   731  029C                     	;# 
   732  029C                     	;# 
   733  029D                     	;# 
   734  030C                     	;# 
   735  030C                     	;# 
   736  030D                     	;# 
   737  030E                     	;# 
   738  030F                     	;# 
   739  0310                     	;# 
   740  0310                     	;# 
   741  0311                     	;# 
   742  0312                     	;# 
   743  0313                     	;# 
   744  0314                     	;# 
   745  0314                     	;# 
   746  0315                     	;# 
   747  0316                     	;# 
   748  0317                     	;# 
   749  0318                     	;# 
   750  0318                     	;# 
   751  0319                     	;# 
   752  031A                     	;# 
   753  031B                     	;# 
   754  031C                     	;# 
   755  031C                     	;# 
   756  031D                     	;# 
   757  031E                     	;# 
   758  031F                     	;# 
   759  038C                     	;# 
   760  038D                     	;# 
   761  038E                     	;# 
   762  0390                     	;# 
   763  0391                     	;# 
   764  0392                     	;# 
   765  040C                     	;# 
   766  040D                     	;# 
   767  040E                     	;# 
   768  040F                     	;# 
   769  0410                     	;# 
   770  0411                     	;# 
   771  0416                     	;# 
   772  0416                     	;# 
   773  0417                     	;# 
   774  0418                     	;# 
   775  0418                     	;# 
   776  0419                     	;# 
   777  041A                     	;# 
   778  041A                     	;# 
   779  041B                     	;# 
   780  041C                     	;# 
   781  041C                     	;# 
   782  041D                     	;# 
   783  041E                     	;# 
   784  041F                     	;# 
   785  048C                     	;# 
   786  048C                     	;# 
   787  048D                     	;# 
   788  048E                     	;# 
   789  048F                     	;# 
   790  048F                     	;# 
   791  0490                     	;# 
   792  0491                     	;# 
   793  0492                     	;# 
   794  0492                     	;# 
   795  0493                     	;# 
   796  0494                     	;# 
   797  0495                     	;# 
   798  0495                     	;# 
   799  0496                     	;# 
   800  0497                     	;# 
   801  0498                     	;# 
   802  0499                     	;# 
   803  049A                     	;# 
   804  049B                     	;# 
   805  049C                     	;# 
   806  049D                     	;# 
   807  050C                     	;# 
   808  050C                     	;# 
   809  050D                     	;# 
   810  050E                     	;# 
   811  050F                     	;# 
   812  050F                     	;# 
   813  0510                     	;# 
   814  0511                     	;# 
   815  0512                     	;# 
   816  0512                     	;# 
   817  0513                     	;# 
   818  0514                     	;# 
   819  0515                     	;# 
   820  0515                     	;# 
   821  0516                     	;# 
   822  0517                     	;# 
   823  0518                     	;# 
   824  0519                     	;# 
   825  051A                     	;# 
   826  051B                     	;# 
   827  051C                     	;# 
   828  051D                     	;# 
   829  058C                     	;# 
   830  058C                     	;# 
   831  058D                     	;# 
   832  058E                     	;# 
   833  058F                     	;# 
   834  058F                     	;# 
   835  0590                     	;# 
   836  0591                     	;# 
   837  0592                     	;# 
   838  0593                     	;# 
   839  060C                     	;# 
   840  060D                     	;# 
   841  060E                     	;# 
   842  060F                     	;# 
   843  0610                     	;# 
   844  0611                     	;# 
   845  0612                     	;# 
   846  0613                     	;# 
   847  0614                     	;# 
   848  0616                     	;# 
   849  0617                     	;# 
   850  0618                     	;# 
   851  0619                     	;# 
   852  061A                     	;# 
   853  061B                     	;# 
   854  061C                     	;# 
   855  061D                     	;# 
   856  061E                     	;# 
   857  068C                     	;# 
   858  068D                     	;# 
   859  068E                     	;# 
   860  068F                     	;# 
   861  0690                     	;# 
   862  0691                     	;# 
   863  0692                     	;# 
   864  0693                     	;# 
   865  0694                     	;# 
   866  070C                     	;# 
   867  070D                     	;# 
   868  070E                     	;# 
   869  070F                     	;# 
   870  0710                     	;# 
   871  0711                     	;# 
   872  0712                     	;# 
   873  0713                     	;# 
   874  0714                     	;# 
   875  0716                     	;# 
   876  0717                     	;# 
   877  0718                     	;# 
   878  0719                     	;# 
   879  071A                     	;# 
   880  071B                     	;# 
   881  071C                     	;# 
   882  071D                     	;# 
   883  071E                     	;# 
   884  0796                     	;# 
   885  0797                     	;# 
   886  0798                     	;# 
   887  0799                     	;# 
   888  079A                     	;# 
   889  079B                     	;# 
   890  080C                     	;# 
   891  080D                     	;# 
   892  080E                     	;# 
   893  080F                     	;# 
   894  0810                     	;# 
   895  0811                     	;# 
   896  0812                     	;# 
   897  0813                     	;# 
   898  0814                     	;# 
   899  081A                     	;# 
   900  081B                     	;# 
   901  081C                     	;# 
   902  081D                     	;# 
   903  081E                     	;# 
   904  081F                     	;# 
   905  088C                     	;# 
   906  088D                     	;# 
   907  088E                     	;# 
   908  088F                     	;# 
   909  0890                     	;# 
   910  0891                     	;# 
   911  0892                     	;# 
   912  0893                     	;# 
   913  0895                     	;# 
   914  0896                     	;# 
   915  0897                     	;# 
   916  0898                     	;# 
   917  0899                     	;# 
   918  089A                     	;# 
   919  089B                     	;# 
   920  090C                     	;# 
   921  090E                     	;# 
   922  090F                     	;# 
   923  091F                     	;# 
   924  091F                     	;# 
   925  098F                     	;# 
   926  098F                     	;# 
   927  0990                     	;# 
   928  0991                     	;# 
   929  0992                     	;# 
   930  0993                     	;# 
   931  0994                     	;# 
   932  0995                     	;# 
   933  0996                     	;# 
   934  0997                     	;# 
   935  0E0F                     	;# 
   936  0E10                     	;# 
   937  0E11                     	;# 
   938  0E12                     	;# 
   939  0E13                     	;# 
   940  0E14                     	;# 
   941  0E15                     	;# 
   942  0E16                     	;# 
   943  0E17                     	;# 
   944  0E18                     	;# 
   945  0E19                     	;# 
   946  0E1A                     	;# 
   947  0E1B                     	;# 
   948  0E1C                     	;# 
   949  0E1D                     	;# 
   950  0E1E                     	;# 
   951  0E1F                     	;# 
   952  0E20                     	;# 
   953  0E21                     	;# 
   954  0E22                     	;# 
   955  0E23                     	;# 
   956  0E24                     	;# 
   957  0E25                     	;# 
   958  0E26                     	;# 
   959  0E27                     	;# 
   960  0E28                     	;# 
   961  0E29                     	;# 
   962  0E2A                     	;# 
   963  0E2B                     	;# 
   964  0E2C                     	;# 
   965  0E2D                     	;# 
   966  0E2E                     	;# 
   967  0E2F                     	;# 
   968  0E30                     	;# 
   969  0E31                     	;# 
   970  0E32                     	;# 
   971  0E33                     	;# 
   972  0E34                     	;# 
   973  0E35                     	;# 
   974  0E36                     	;# 
   975  0E37                     	;# 
   976  0E8F                     	;# 
   977  0E90                     	;# 
   978  0E91                     	;# 
   979  0E92                     	;# 
   980  0E93                     	;# 
   981  0E94                     	;# 
   982  0E95                     	;# 
   983  0E96                     	;# 
   984  0E97                     	;# 
   985  0E9C                     	;# 
   986  0E9D                     	;# 
   987  0E9E                     	;# 
   988  0EA1                     	;# 
   989  0EA2                     	;# 
   990  0EA3                     	;# 
   991  0EA4                     	;# 
   992  0EA5                     	;# 
   993  0EA9                     	;# 
   994  0EAA                     	;# 
   995  0EAB                     	;# 
   996  0EAC                     	;# 
   997  0EB1                     	;# 
   998  0EB2                     	;# 
   999  0EB3                     	;# 
  1000  0EB8                     	;# 
  1001  0EB9                     	;# 
  1002  0EBA                     	;# 
  1003  0EBB                     	;# 
  1004  0EBC                     	;# 
  1005  0EBD                     	;# 
  1006  0EBE                     	;# 
  1007  0EC3                     	;# 
  1008  0EC5                     	;# 
  1009  0EC6                     	;# 
  1010  0EC7                     	;# 
  1011  0EC8                     	;# 
  1012  0EC9                     	;# 
  1013  0ECA                     	;# 
  1014  0ECB                     	;# 
  1015  0ECC                     	;# 
  1016  0F10                     	;# 
  1017  0F11                     	;# 
  1018  0F12                     	;# 
  1019  0F13                     	;# 
  1020  0F14                     	;# 
  1021  0F15                     	;# 
  1022  0F16                     	;# 
  1023  0F17                     	;# 
  1024  0F18                     	;# 
  1025  0F19                     	;# 
  1026  0F1A                     	;# 
  1027  0F1B                     	;# 
  1028  0F1C                     	;# 
  1029  0F1D                     	;# 
  1030  0F1E                     	;# 
  1031  0F1F                     	;# 
  1032  0F20                     	;# 
  1033  0F21                     	;# 
  1034  0F22                     	;# 
  1035  0F23                     	;# 
  1036  0F24                     	;# 
  1037  0F25                     	;# 
  1038  0F26                     	;# 
  1039  0F27                     	;# 
  1040  0F38                     	;# 
  1041  0F39                     	;# 
  1042  0F3A                     	;# 
  1043  0F3B                     	;# 
  1044  0F3C                     	;# 
  1045  0F3D                     	;# 
  1046  0F3E                     	;# 
  1047  0F3F                     	;# 
  1048  0F40                     	;# 
  1049  0F41                     	;# 
  1050  0F43                     	;# 
  1051  0F44                     	;# 
  1052  0F45                     	;# 
  1053  0F46                     	;# 
  1054  0F47                     	;# 
  1055  0F48                     	;# 
  1056  0F49                     	;# 
  1057  0F4A                     	;# 
  1058  0F4B                     	;# 
  1059  0F4C                     	;# 
  1060  0F4E                     	;# 
  1061  0F4F                     	;# 
  1062  0F50                     	;# 
  1063  0F51                     	;# 
  1064  0F52                     	;# 
  1065  0F53                     	;# 
  1066  0F54                     	;# 
  1067  0F55                     	;# 
  1068  0F56                     	;# 
  1069  0F57                     	;# 
  1070  0F65                     	;# 
  1071  0F68                     	;# 
  1072  0F69                     	;# 
  1073  0F6A                     	;# 
  1074  0F6B                     	;# 
  1075  0FE4                     	;# 
  1076  0FE5                     	;# 
  1077  0FE6                     	;# 
  1078  0FE7                     	;# 
  1079  0FE8                     	;# 
  1080  0FE9                     	;# 
  1081  0FEA                     	;# 
  1082  0FEB                     	;# 
  1083  0FED                     	;# 
  1084  0FEE                     	;# 
  1085  0FEF                     	;# 
  1086  0000                     	;# 
  1087  0001                     	;# 
  1088  0002                     	;# 
  1089  0003                     	;# 
  1090  0004                     	;# 
  1091  0005                     	;# 
  1092  0006                     	;# 
  1093  0007                     	;# 
  1094  0008                     	;# 
  1095  0009                     	;# 
  1096  000A                     	;# 
  1097  000B                     	;# 
  1098  000C                     	;# 
  1099  000D                     	;# 
  1100  000E                     	;# 
  1101  0010                     	;# 
  1102  0011                     	;# 
  1103  0012                     	;# 
  1104  0013                     	;# 
  1105  0016                     	;# 
  1106  0017                     	;# 
  1107  0018                     	;# 
  1108  001C                     	;# 
  1109  001C                     	;# 
  1110  001D                     	;# 
  1111  001D                     	;# 
  1112  001E                     	;# 
  1113  001F                     	;# 
  1114  008C                     	;# 
  1115  008C                     	;# 
  1116  008D                     	;# 
  1117  008E                     	;# 
  1118  008E                     	;# 
  1119  008F                     	;# 
  1120  0090                     	;# 
  1121  0090                     	;# 
  1122  0091                     	;# 
  1123  0093                     	;# 
  1124  0094                     	;# 
  1125  0095                     	;# 
  1126  0096                     	;# 
  1127  0097                     	;# 
  1128  0098                     	;# 
  1129  0099                     	;# 
  1130  009A                     	;# 
  1131  009B                     	;# 
  1132  009C                     	;# 
  1133  009D                     	;# 
  1134  009E                     	;# 
  1135  010C                     	;# 
  1136  010D                     	;# 
  1137  010E                     	;# 
  1138  010E                     	;# 
  1139  010F                     	;# 
  1140  0110                     	;# 
  1141  0110                     	;# 
  1142  0111                     	;# 
  1143  0112                     	;# 
  1144  0112                     	;# 
  1145  0113                     	;# 
  1146  0114                     	;# 
  1147  0114                     	;# 
  1148  0115                     	;# 
  1149  0116                     	;# 
  1150  0116                     	;# 
  1151  0117                     	;# 
  1152  0119                     	;# 
  1153  0119                     	;# 
  1154  0119                     	;# 
  1155  011A                     	;# 
  1156  011A                     	;# 
  1157  011A                     	;# 
  1158  011B                     	;# 
  1159  011B                     	;# 
  1160  011B                     	;# 
  1161  011B                     	;# 
  1162  011B                     	;# 
  1163  011C                     	;# 
  1164  011C                     	;# 
  1165  011C                     	;# 
  1166  011D                     	;# 
  1167  011D                     	;# 
  1168  011D                     	;# 
  1169  011E                     	;# 
  1170  011E                     	;# 
  1171  011E                     	;# 
  1172  011F                     	;# 
  1173  011F                     	;# 
  1174  011F                     	;# 
  1175  011F                     	;# 
  1176  011F                     	;# 
  1177  018C                     	;# 
  1178  018D                     	;# 
  1179  018E                     	;# 
  1180  018F                     	;# 
  1181  0190                     	;# 
  1182  0191                     	;# 
  1183  0192                     	;# 
  1184  0196                     	;# 
  1185  0197                     	;# 
  1186  0198                     	;# 
  1187  0199                     	;# 
  1188  019A                     	;# 
  1189  019B                     	;# 
  1190  019C                     	;# 
  1191  020C                     	;# 
  1192  020D                     	;# 
  1193  020E                     	;# 
  1194  020F                     	;# 
  1195  020F                     	;# 
  1196  0210                     	;# 
  1197  0210                     	;# 
  1198  0211                     	;# 
  1199  0211                     	;# 
  1200  0212                     	;# 
  1201  0213                     	;# 
  1202  0214                     	;# 
  1203  0215                     	;# 
  1204  0215                     	;# 
  1205  0216                     	;# 
  1206  0216                     	;# 
  1207  0217                     	;# 
  1208  0217                     	;# 
  1209  0218                     	;# 
  1210  0219                     	;# 
  1211  021A                     	;# 
  1212  021B                     	;# 
  1213  021B                     	;# 
  1214  021C                     	;# 
  1215  021C                     	;# 
  1216  021D                     	;# 
  1217  021D                     	;# 
  1218  021E                     	;# 
  1219  021F                     	;# 
  1220  028C                     	;# 
  1221  028C                     	;# 
  1222  028D                     	;# 
  1223  028D                     	;# 
  1224  028E                     	;# 
  1225  028F                     	;# 
  1226  0290                     	;# 
  1227  0290                     	;# 
  1228  0291                     	;# 
  1229  0292                     	;# 
  1230  0292                     	;# 
  1231  0293                     	;# 
  1232  0293                     	;# 
  1233  0294                     	;# 
  1234  0295                     	;# 
  1235  0296                     	;# 
  1236  0296                     	;# 
  1237  0297                     	;# 
  1238  0298                     	;# 
  1239  0298                     	;# 
  1240  0299                     	;# 
  1241  0299                     	;# 
  1242  029A                     	;# 
  1243  029B                     	;# 
  1244  029C                     	;# 
  1245  029C                     	;# 
  1246  029D                     	;# 
  1247  030C                     	;# 
  1248  030C                     	;# 
  1249  030D                     	;# 
  1250  030E                     	;# 
  1251  030F                     	;# 
  1252  0310                     	;# 
  1253  0310                     	;# 
  1254  0311                     	;# 
  1255  0312                     	;# 
  1256  0313                     	;# 
  1257  0314                     	;# 
  1258  0314                     	;# 
  1259  0315                     	;# 
  1260  0316                     	;# 
  1261  0317                     	;# 
  1262  0318                     	;# 
  1263  0318                     	;# 
  1264  0319                     	;# 
  1265  031A                     	;# 
  1266  031B                     	;# 
  1267  031C                     	;# 
  1268  031C                     	;# 
  1269  031D                     	;# 
  1270  031E                     	;# 
  1271  031F                     	;# 
  1272  038C                     	;# 
  1273  038D                     	;# 
  1274  038E                     	;# 
  1275  0390                     	;# 
  1276  0391                     	;# 
  1277  0392                     	;# 
  1278  040C                     	;# 
  1279  040D                     	;# 
  1280  040E                     	;# 
  1281  040F                     	;# 
  1282  0410                     	;# 
  1283  0411                     	;# 
  1284  0416                     	;# 
  1285  0416                     	;# 
  1286  0417                     	;# 
  1287  0418                     	;# 
  1288  0418                     	;# 
  1289  0419                     	;# 
  1290  041A                     	;# 
  1291  041A                     	;# 
  1292  041B                     	;# 
  1293  041C                     	;# 
  1294  041C                     	;# 
  1295  041D                     	;# 
  1296  041E                     	;# 
  1297  041F                     	;# 
  1298  048C                     	;# 
  1299  048C                     	;# 
  1300  048D                     	;# 
  1301  048E                     	;# 
  1302  048F                     	;# 
  1303  048F                     	;# 
  1304  0490                     	;# 
  1305  0491                     	;# 
  1306  0492                     	;# 
  1307  0492                     	;# 
  1308  0493                     	;# 
  1309  0494                     	;# 
  1310  0495                     	;# 
  1311  0495                     	;# 
  1312  0496                     	;# 
  1313  0497                     	;# 
  1314  0498                     	;# 
  1315  0499                     	;# 
  1316  049A                     	;# 
  1317  049B                     	;# 
  1318  049C                     	;# 
  1319  049D                     	;# 
  1320  050C                     	;# 
  1321  050C                     	;# 
  1322  050D                     	;# 
  1323  050E                     	;# 
  1324  050F                     	;# 
  1325  050F                     	;# 
  1326  0510                     	;# 
  1327  0511                     	;# 
  1328  0512                     	;# 
  1329  0512                     	;# 
  1330  0513                     	;# 
  1331  0514                     	;# 
  1332  0515                     	;# 
  1333  0515                     	;# 
  1334  0516                     	;# 
  1335  0517                     	;# 
  1336  0518                     	;# 
  1337  0519                     	;# 
  1338  051A                     	;# 
  1339  051B                     	;# 
  1340  051C                     	;# 
  1341  051D                     	;# 
  1342  058C                     	;# 
  1343  058C                     	;# 
  1344  058D                     	;# 
  1345  058E                     	;# 
  1346  058F                     	;# 
  1347  058F                     	;# 
  1348  0590                     	;# 
  1349  0591                     	;# 
  1350  0592                     	;# 
  1351  0593                     	;# 
  1352  060C                     	;# 
  1353  060D                     	;# 
  1354  060E                     	;# 
  1355  060F                     	;# 
  1356  0610                     	;# 
  1357  0611                     	;# 
  1358  0612                     	;# 
  1359  0613                     	;# 
  1360  0614                     	;# 
  1361  0616                     	;# 
  1362  0617                     	;# 
  1363  0618                     	;# 
  1364  0619                     	;# 
  1365  061A                     	;# 
  1366  061B                     	;# 
  1367  061C                     	;# 
  1368  061D                     	;# 
  1369  061E                     	;# 
  1370  068C                     	;# 
  1371  068D                     	;# 
  1372  068E                     	;# 
  1373  068F                     	;# 
  1374  0690                     	;# 
  1375  0691                     	;# 
  1376  0692                     	;# 
  1377  0693                     	;# 
  1378  0694                     	;# 
  1379  070C                     	;# 
  1380  070D                     	;# 
  1381  070E                     	;# 
  1382  070F                     	;# 
  1383  0710                     	;# 
  1384  0711                     	;# 
  1385  0712                     	;# 
  1386  0713                     	;# 
  1387  0714                     	;# 
  1388  0716                     	;# 
  1389  0717                     	;# 
  1390  0718                     	;# 
  1391  0719                     	;# 
  1392  071A                     	;# 
  1393  071B                     	;# 
  1394  071C                     	;# 
  1395  071D                     	;# 
  1396  071E                     	;# 
  1397  0796                     	;# 
  1398  0797                     	;# 
  1399  0798                     	;# 
  1400  0799                     	;# 
  1401  079A                     	;# 
  1402  079B                     	;# 
  1403  080C                     	;# 
  1404  080D                     	;# 
  1405  080E                     	;# 
  1406  080F                     	;# 
  1407  0810                     	;# 
  1408  0811                     	;# 
  1409  0812                     	;# 
  1410  0813                     	;# 
  1411  0814                     	;# 
  1412  081A                     	;# 
  1413  081B                     	;# 
  1414  081C                     	;# 
  1415  081D                     	;# 
  1416  081E                     	;# 
  1417  081F                     	;# 
  1418  088C                     	;# 
  1419  088D                     	;# 
  1420  088E                     	;# 
  1421  088F                     	;# 
  1422  0890                     	;# 
  1423  0891                     	;# 
  1424  0892                     	;# 
  1425  0893                     	;# 
  1426  0895                     	;# 
  1427  0896                     	;# 
  1428  0897                     	;# 
  1429  0898                     	;# 
  1430  0899                     	;# 
  1431  089A                     	;# 
  1432  089B                     	;# 
  1433  090C                     	;# 
  1434  090E                     	;# 
  1435  090F                     	;# 
  1436  091F                     	;# 
  1437  091F                     	;# 
  1438  098F                     	;# 
  1439  098F                     	;# 
  1440  0990                     	;# 
  1441  0991                     	;# 
  1442  0992                     	;# 
  1443  0993                     	;# 
  1444  0994                     	;# 
  1445  0995                     	;# 
  1446  0996                     	;# 
  1447  0997                     	;# 
  1448  0E0F                     	;# 
  1449  0E10                     	;# 
  1450  0E11                     	;# 
  1451  0E12                     	;# 
  1452  0E13                     	;# 
  1453  0E14                     	;# 
  1454  0E15                     	;# 
  1455  0E16                     	;# 
  1456  0E17                     	;# 
  1457  0E18                     	;# 
  1458  0E19                     	;# 
  1459  0E1A                     	;# 
  1460  0E1B                     	;# 
  1461  0E1C                     	;# 
  1462  0E1D                     	;# 
  1463  0E1E                     	;# 
  1464  0E1F                     	;# 
  1465  0E20                     	;# 
  1466  0E21                     	;# 
  1467  0E22                     	;# 
  1468  0E23                     	;# 
  1469  0E24                     	;# 
  1470  0E25                     	;# 
  1471  0E26                     	;# 
  1472  0E27                     	;# 
  1473  0E28                     	;# 
  1474  0E29                     	;# 
  1475  0E2A                     	;# 
  1476  0E2B                     	;# 
  1477  0E2C                     	;# 
  1478  0E2D                     	;# 
  1479  0E2E                     	;# 
  1480  0E2F                     	;# 
  1481  0E30                     	;# 
  1482  0E31                     	;# 
  1483  0E32                     	;# 
  1484  0E33                     	;# 
  1485  0E34                     	;# 
  1486  0E35                     	;# 
  1487  0E36                     	;# 
  1488  0E37                     	;# 
  1489  0E8F                     	;# 
  1490  0E90                     	;# 
  1491  0E91                     	;# 
  1492  0E92                     	;# 
  1493  0E93                     	;# 
  1494  0E94                     	;# 
  1495  0E95                     	;# 
  1496  0E96                     	;# 
  1497  0E97                     	;# 
  1498  0E9C                     	;# 
  1499  0E9D                     	;# 
  1500  0E9E                     	;# 
  1501  0EA1                     	;# 
  1502  0EA2                     	;# 
  1503  0EA3                     	;# 
  1504  0EA4                     	;# 
  1505  0EA5                     	;# 
  1506  0EA9                     	;# 
  1507  0EAA                     	;# 
  1508  0EAB                     	;# 
  1509  0EAC                     	;# 
  1510  0EB1                     	;# 
  1511  0EB2                     	;# 
  1512  0EB3                     	;# 
  1513  0EB8                     	;# 
  1514  0EB9                     	;# 
  1515  0EBA                     	;# 
  1516  0EBB                     	;# 
  1517  0EBC                     	;# 
  1518  0EBD                     	;# 
  1519  0EBE                     	;# 
  1520  0EC3                     	;# 
  1521  0EC5                     	;# 
  1522  0EC6                     	;# 
  1523  0EC7                     	;# 
  1524  0EC8                     	;# 
  1525  0EC9                     	;# 
  1526  0ECA                     	;# 
  1527  0ECB                     	;# 
  1528  0ECC                     	;# 
  1529  0F10                     	;# 
  1530  0F11                     	;# 
  1531  0F12                     	;# 
  1532  0F13                     	;# 
  1533  0F14                     	;# 
  1534  0F15                     	;# 
  1535  0F16                     	;# 
  1536  0F17                     	;# 
  1537  0F18                     	;# 
  1538  0F19                     	;# 
  1539  0F1A                     	;# 
  1540  0F1B                     	;# 
  1541  0F1C                     	;# 
  1542  0F1D                     	;# 
  1543  0F1E                     	;# 
  1544  0F1F                     	;# 
  1545  0F20                     	;# 
  1546  0F21                     	;# 
  1547  0F22                     	;# 
  1548  0F23                     	;# 
  1549  0F24                     	;# 
  1550  0F25                     	;# 
  1551  0F26                     	;# 
  1552  0F27                     	;# 
  1553  0F38                     	;# 
  1554  0F39                     	;# 
  1555  0F3A                     	;# 
  1556  0F3B                     	;# 
  1557  0F3C                     	;# 
  1558  0F3D                     	;# 
  1559  0F3E                     	;# 
  1560  0F3F                     	;# 
  1561  0F40                     	;# 
  1562  0F41                     	;# 
  1563  0F43                     	;# 
  1564  0F44                     	;# 
  1565  0F45                     	;# 
  1566  0F46                     	;# 
  1567  0F47                     	;# 
  1568  0F48                     	;# 
  1569  0F49                     	;# 
  1570  0F4A                     	;# 
  1571  0F4B                     	;# 
  1572  0F4C                     	;# 
  1573  0F4E                     	;# 
  1574  0F4F                     	;# 
  1575  0F50                     	;# 
  1576  0F51                     	;# 
  1577  0F52                     	;# 
  1578  0F53                     	;# 
  1579  0F54                     	;# 
  1580  0F55                     	;# 
  1581  0F56                     	;# 
  1582  0F57                     	;# 
  1583  0F65                     	;# 
  1584  0F68                     	;# 
  1585  0F69                     	;# 
  1586  0F6A                     	;# 
  1587  0F6B                     	;# 
  1588  0FE4                     	;# 
  1589  0FE5                     	;# 
  1590  0FE6                     	;# 
  1591  0FE7                     	;# 
  1592  0FE8                     	;# 
  1593  0FE9                     	;# 
  1594  0FEA                     	;# 
  1595  0FEB                     	;# 
  1596  0FED                     	;# 
  1597  0FEE                     	;# 
  1598  0FEF                     	;# 
  1599  0000                     	;# 
  1600  0001                     	;# 
  1601  0002                     	;# 
  1602  0003                     	;# 
  1603  0004                     	;# 
  1604  0005                     	;# 
  1605  0006                     	;# 
  1606  0007                     	;# 
  1607  0008                     	;# 
  1608  0009                     	;# 
  1609  000A                     	;# 
  1610  000B                     	;# 
  1611  000C                     	;# 
  1612  000D                     	;# 
  1613  000E                     	;# 
  1614  0010                     	;# 
  1615  0011                     	;# 
  1616  0012                     	;# 
  1617  0013                     	;# 
  1618  0016                     	;# 
  1619  0017                     	;# 
  1620  0018                     	;# 
  1621  001C                     	;# 
  1622  001C                     	;# 
  1623  001D                     	;# 
  1624  001D                     	;# 
  1625  001E                     	;# 
  1626  001F                     	;# 
  1627  008C                     	;# 
  1628  008C                     	;# 
  1629  008D                     	;# 
  1630  008E                     	;# 
  1631  008E                     	;# 
  1632  008F                     	;# 
  1633  0090                     	;# 
  1634  0090                     	;# 
  1635  0091                     	;# 
  1636  0093                     	;# 
  1637  0094                     	;# 
  1638  0095                     	;# 
  1639  0096                     	;# 
  1640  0097                     	;# 
  1641  0098                     	;# 
  1642  0099                     	;# 
  1643  009A                     	;# 
  1644  009B                     	;# 
  1645  009C                     	;# 
  1646  009D                     	;# 
  1647  009E                     	;# 
  1648  010C                     	;# 
  1649  010D                     	;# 
  1650  010E                     	;# 
  1651  010E                     	;# 
  1652  010F                     	;# 
  1653  0110                     	;# 
  1654  0110                     	;# 
  1655  0111                     	;# 
  1656  0112                     	;# 
  1657  0112                     	;# 
  1658  0113                     	;# 
  1659  0114                     	;# 
  1660  0114                     	;# 
  1661  0115                     	;# 
  1662  0116                     	;# 
  1663  0116                     	;# 
  1664  0117                     	;# 
  1665  0119                     	;# 
  1666  0119                     	;# 
  1667  0119                     	;# 
  1668  011A                     	;# 
  1669  011A                     	;# 
  1670  011A                     	;# 
  1671  011B                     	;# 
  1672  011B                     	;# 
  1673  011B                     	;# 
  1674  011B                     	;# 
  1675  011B                     	;# 
  1676  011C                     	;# 
  1677  011C                     	;# 
  1678  011C                     	;# 
  1679  011D                     	;# 
  1680  011D                     	;# 
  1681  011D                     	;# 
  1682  011E                     	;# 
  1683  011E                     	;# 
  1684  011E                     	;# 
  1685  011F                     	;# 
  1686  011F                     	;# 
  1687  011F                     	;# 
  1688  011F                     	;# 
  1689  011F                     	;# 
  1690  018C                     	;# 
  1691  018D                     	;# 
  1692  018E                     	;# 
  1693  018F                     	;# 
  1694  0190                     	;# 
  1695  0191                     	;# 
  1696  0192                     	;# 
  1697  0196                     	;# 
  1698  0197                     	;# 
  1699  0198                     	;# 
  1700  0199                     	;# 
  1701  019A                     	;# 
  1702  019B                     	;# 
  1703  019C                     	;# 
  1704  020C                     	;# 
  1705  020D                     	;# 
  1706  020E                     	;# 
  1707  020F                     	;# 
  1708  020F                     	;# 
  1709  0210                     	;# 
  1710  0210                     	;# 
  1711  0211                     	;# 
  1712  0211                     	;# 
  1713  0212                     	;# 
  1714  0213                     	;# 
  1715  0214                     	;# 
  1716  0215                     	;# 
  1717  0215                     	;# 
  1718  0216                     	;# 
  1719  0216                     	;# 
  1720  0217                     	;# 
  1721  0217                     	;# 
  1722  0218                     	;# 
  1723  0219                     	;# 
  1724  021A                     	;# 
  1725  021B                     	;# 
  1726  021B                     	;# 
  1727  021C                     	;# 
  1728  021C                     	;# 
  1729  021D                     	;# 
  1730  021D                     	;# 
  1731  021E                     	;# 
  1732  021F                     	;# 
  1733  028C                     	;# 
  1734  028C                     	;# 
  1735  028D                     	;# 
  1736  028D                     	;# 
  1737  028E                     	;# 
  1738  028F                     	;# 
  1739  0290                     	;# 
  1740  0290                     	;# 
  1741  0291                     	;# 
  1742  0292                     	;# 
  1743  0292                     	;# 
  1744  0293                     	;# 
  1745  0293                     	;# 
  1746  0294                     	;# 
  1747  0295                     	;# 
  1748  0296                     	;# 
  1749  0296                     	;# 
  1750  0297                     	;# 
  1751  0298                     	;# 
  1752  0298                     	;# 
  1753  0299                     	;# 
  1754  0299                     	;# 
  1755  029A                     	;# 
  1756  029B                     	;# 
  1757  029C                     	;# 
  1758  029C                     	;# 
  1759  029D                     	;# 
  1760  030C                     	;# 
  1761  030C                     	;# 
  1762  030D                     	;# 
  1763  030E                     	;# 
  1764  030F                     	;# 
  1765  0310                     	;# 
  1766  0310                     	;# 
  1767  0311                     	;# 
  1768  0312                     	;# 
  1769  0313                     	;# 
  1770  0314                     	;# 
  1771  0314                     	;# 
  1772  0315                     	;# 
  1773  0316                     	;# 
  1774  0317                     	;# 
  1775  0318                     	;# 
  1776  0318                     	;# 
  1777  0319                     	;# 
  1778  031A                     	;# 
  1779  031B                     	;# 
  1780  031C                     	;# 
  1781  031C                     	;# 
  1782  031D                     	;# 
  1783  031E                     	;# 
  1784  031F                     	;# 
  1785  038C                     	;# 
  1786  038D                     	;# 
  1787  038E                     	;# 
  1788  0390                     	;# 
  1789  0391                     	;# 
  1790  0392                     	;# 
  1791  040C                     	;# 
  1792  040D                     	;# 
  1793  040E                     	;# 
  1794  040F                     	;# 
  1795  0410                     	;# 
  1796  0411                     	;# 
  1797  0416                     	;# 
  1798  0416                     	;# 
  1799  0417                     	;# 
  1800  0418                     	;# 
  1801  0418                     	;# 
  1802  0419                     	;# 
  1803  041A                     	;# 
  1804  041A                     	;# 
  1805  041B                     	;# 
  1806  041C                     	;# 
  1807  041C                     	;# 
  1808  041D                     	;# 
  1809  041E                     	;# 
  1810  041F                     	;# 
  1811  048C                     	;# 
  1812  048C                     	;# 
  1813  048D                     	;# 
  1814  048E                     	;# 
  1815  048F                     	;# 
  1816  048F                     	;# 
  1817  0490                     	;# 
  1818  0491                     	;# 
  1819  0492                     	;# 
  1820  0492                     	;# 
  1821  0493                     	;# 
  1822  0494                     	;# 
  1823  0495                     	;# 
  1824  0495                     	;# 
  1825  0496                     	;# 
  1826  0497                     	;# 
  1827  0498                     	;# 
  1828  0499                     	;# 
  1829  049A                     	;# 
  1830  049B                     	;# 
  1831  049C                     	;# 
  1832  049D                     	;# 
  1833  050C                     	;# 
  1834  050C                     	;# 
  1835  050D                     	;# 
  1836  050E                     	;# 
  1837  050F                     	;# 
  1838  050F                     	;# 
  1839  0510                     	;# 
  1840  0511                     	;# 
  1841  0512                     	;# 
  1842  0512                     	;# 
  1843  0513                     	;# 
  1844  0514                     	;# 
  1845  0515                     	;# 
  1846  0515                     	;# 
  1847  0516                     	;# 
  1848  0517                     	;# 
  1849  0518                     	;# 
  1850  0519                     	;# 
  1851  051A                     	;# 
  1852  051B                     	;# 
  1853  051C                     	;# 
  1854  051D                     	;# 
  1855  058C                     	;# 
  1856  058C                     	;# 
  1857  058D                     	;# 
  1858  058E                     	;# 
  1859  058F                     	;# 
  1860  058F                     	;# 
  1861  0590                     	;# 
  1862  0591                     	;# 
  1863  0592                     	;# 
  1864  0593                     	;# 
  1865  060C                     	;# 
  1866  060D                     	;# 
  1867  060E                     	;# 
  1868  060F                     	;# 
  1869  0610                     	;# 
  1870  0611                     	;# 
  1871  0612                     	;# 
  1872  0613                     	;# 
  1873  0614                     	;# 
  1874  0616                     	;# 
  1875  0617                     	;# 
  1876  0618                     	;# 
  1877  0619                     	;# 
  1878  061A                     	;# 
  1879  061B                     	;# 
  1880  061C                     	;# 
  1881  061D                     	;# 
  1882  061E                     	;# 
  1883  068C                     	;# 
  1884  068D                     	;# 
  1885  068E                     	;# 
  1886  068F                     	;# 
  1887  0690                     	;# 
  1888  0691                     	;# 
  1889  0692                     	;# 
  1890  0693                     	;# 
  1891  0694                     	;# 
  1892  070C                     	;# 
  1893  070D                     	;# 
  1894  070E                     	;# 
  1895  070F                     	;# 
  1896  0710                     	;# 
  1897  0711                     	;# 
  1898  0712                     	;# 
  1899  0713                     	;# 
  1900  0714                     	;# 
  1901  0716                     	;# 
  1902  0717                     	;# 
  1903  0718                     	;# 
  1904  0719                     	;# 
  1905  071A                     	;# 
  1906  071B                     	;# 
  1907  071C                     	;# 
  1908  071D                     	;# 
  1909  071E                     	;# 
  1910  0796                     	;# 
  1911  0797                     	;# 
  1912  0798                     	;# 
  1913  0799                     	;# 
  1914  079A                     	;# 
  1915  079B                     	;# 
  1916  080C                     	;# 
  1917  080D                     	;# 
  1918  080E                     	;# 
  1919  080F                     	;# 
  1920  0810                     	;# 
  1921  0811                     	;# 
  1922  0812                     	;# 
  1923  0813                     	;# 
  1924  0814                     	;# 
  1925  081A                     	;# 
  1926  081B                     	;# 
  1927  081C                     	;# 
  1928  081D                     	;# 
  1929  081E                     	;# 
  1930  081F                     	;# 
  1931  088C                     	;# 
  1932  088D                     	;# 
  1933  088E                     	;# 
  1934  088F                     	;# 
  1935  0890                     	;# 
  1936  0891                     	;# 
  1937  0892                     	;# 
  1938  0893                     	;# 
  1939  0895                     	;# 
  1940  0896                     	;# 
  1941  0897                     	;# 
  1942  0898                     	;# 
  1943  0899                     	;# 
  1944  089A                     	;# 
  1945  089B                     	;# 
  1946  090C                     	;# 
  1947  090E                     	;# 
  1948  090F                     	;# 
  1949  091F                     	;# 
  1950  091F                     	;# 
  1951  098F                     	;# 
  1952  098F                     	;# 
  1953  0990                     	;# 
  1954  0991                     	;# 
  1955  0992                     	;# 
  1956  0993                     	;# 
  1957  0994                     	;# 
  1958  0995                     	;# 
  1959  0996                     	;# 
  1960  0997                     	;# 
  1961  0E0F                     	;# 
  1962  0E10                     	;# 
  1963  0E11                     	;# 
  1964  0E12                     	;# 
  1965  0E13                     	;# 
  1966  0E14                     	;# 
  1967  0E15                     	;# 
  1968  0E16                     	;# 
  1969  0E17                     	;# 
  1970  0E18                     	;# 
  1971  0E19                     	;# 
  1972  0E1A                     	;# 
  1973  0E1B                     	;# 
  1974  0E1C                     	;# 
  1975  0E1D                     	;# 
  1976  0E1E                     	;# 
  1977  0E1F                     	;# 
  1978  0E20                     	;# 
  1979  0E21                     	;# 
  1980  0E22                     	;# 
  1981  0E23                     	;# 
  1982  0E24                     	;# 
  1983  0E25                     	;# 
  1984  0E26                     	;# 
  1985  0E27                     	;# 
  1986  0E28                     	;# 
  1987  0E29                     	;# 
  1988  0E2A                     	;# 
  1989  0E2B                     	;# 
  1990  0E2C                     	;# 
  1991  0E2D                     	;# 
  1992  0E2E                     	;# 
  1993  0E2F                     	;# 
  1994  0E30                     	;# 
  1995  0E31                     	;# 
  1996  0E32                     	;# 
  1997  0E33                     	;# 
  1998  0E34                     	;# 
  1999  0E35                     	;# 
  2000  0E36                     	;# 
  2001  0E37                     	;# 
  2002  0E8F                     	;# 
  2003  0E90                     	;# 
  2004  0E91                     	;# 
  2005  0E92                     	;# 
  2006  0E93                     	;# 
  2007  0E94                     	;# 
  2008  0E95                     	;# 
  2009  0E96                     	;# 
  2010  0E97                     	;# 
  2011  0E9C                     	;# 
  2012  0E9D                     	;# 
  2013  0E9E                     	;# 
  2014  0EA1                     	;# 
  2015  0EA2                     	;# 
  2016  0EA3                     	;# 
  2017  0EA4                     	;# 
  2018  0EA5                     	;# 
  2019  0EA9                     	;# 
  2020  0EAA                     	;# 
  2021  0EAB                     	;# 
  2022  0EAC                     	;# 
  2023  0EB1                     	;# 
  2024  0EB2                     	;# 
  2025  0EB3                     	;# 
  2026  0EB8                     	;# 
  2027  0EB9                     	;# 
  2028  0EBA                     	;# 
  2029  0EBB                     	;# 
  2030  0EBC                     	;# 
  2031  0EBD                     	;# 
  2032  0EBE                     	;# 
  2033  0EC3                     	;# 
  2034  0EC5                     	;# 
  2035  0EC6                     	;# 
  2036  0EC7                     	;# 
  2037  0EC8                     	;# 
  2038  0EC9                     	;# 
  2039  0ECA                     	;# 
  2040  0ECB                     	;# 
  2041  0ECC                     	;# 
  2042  0F10                     	;# 
  2043  0F11                     	;# 
  2044  0F12                     	;# 
  2045  0F13                     	;# 
  2046  0F14                     	;# 
  2047  0F15                     	;# 
  2048  0F16                     	;# 
  2049  0F17                     	;# 
  2050  0F18                     	;# 
  2051  0F19                     	;# 
  2052  0F1A                     	;# 
  2053  0F1B                     	;# 
  2054  0F1C                     	;# 
  2055  0F1D                     	;# 
  2056  0F1E                     	;# 
  2057  0F1F                     	;# 
  2058  0F20                     	;# 
  2059  0F21                     	;# 
  2060  0F22                     	;# 
  2061  0F23                     	;# 
  2062  0F24                     	;# 
  2063  0F25                     	;# 
  2064  0F26                     	;# 
  2065  0F27                     	;# 
  2066  0F38                     	;# 
  2067  0F39                     	;# 
  2068  0F3A                     	;# 
  2069  0F3B                     	;# 
  2070  0F3C                     	;# 
  2071  0F3D                     	;# 
  2072  0F3E                     	;# 
  2073  0F3F                     	;# 
  2074  0F40                     	;# 
  2075  0F41                     	;# 
  2076  0F43                     	;# 
  2077  0F44                     	;# 
  2078  0F45                     	;# 
  2079  0F46                     	;# 
  2080  0F47                     	;# 
  2081  0F48                     	;# 
  2082  0F49                     	;# 
  2083  0F4A                     	;# 
  2084  0F4B                     	;# 
  2085  0F4C                     	;# 
  2086  0F4E                     	;# 
  2087  0F4F                     	;# 
  2088  0F50                     	;# 
  2089  0F51                     	;# 
  2090  0F52                     	;# 
  2091  0F53                     	;# 
  2092  0F54                     	;# 
  2093  0F55                     	;# 
  2094  0F56                     	;# 
  2095  0F57                     	;# 
  2096  0F65                     	;# 
  2097  0F68                     	;# 
  2098  0F69                     	;# 
  2099  0F6A                     	;# 
  2100  0F6B                     	;# 
  2101  0FE4                     	;# 
  2102  0FE5                     	;# 
  2103  0FE6                     	;# 
  2104  0FE7                     	;# 
  2105  0FE8                     	;# 
  2106  0FE9                     	;# 
  2107  0FEA                     	;# 
  2108  0FEB                     	;# 
  2109  0FED                     	;# 
  2110  0FEE                     	;# 
  2111  0FEF                     	;# 
  2112  0000                     	;# 
  2113  0001                     	;# 
  2114  0002                     	;# 
  2115  0003                     	;# 
  2116  0004                     	;# 
  2117  0005                     	;# 
  2118  0006                     	;# 
  2119  0007                     	;# 
  2120  0008                     	;# 
  2121  0009                     	;# 
  2122  000A                     	;# 
  2123  000B                     	;# 
  2124  000C                     	;# 
  2125  000D                     	;# 
  2126  000E                     	;# 
  2127  0010                     	;# 
  2128  0011                     	;# 
  2129  0012                     	;# 
  2130  0013                     	;# 
  2131  0016                     	;# 
  2132  0017                     	;# 
  2133  0018                     	;# 
  2134  001C                     	;# 
  2135  001C                     	;# 
  2136  001D                     	;# 
  2137  001D                     	;# 
  2138  001E                     	;# 
  2139  001F                     	;# 
  2140  008C                     	;# 
  2141  008C                     	;# 
  2142  008D                     	;# 
  2143  008E                     	;# 
  2144  008E                     	;# 
  2145  008F                     	;# 
  2146  0090                     	;# 
  2147  0090                     	;# 
  2148  0091                     	;# 
  2149  0093                     	;# 
  2150  0094                     	;# 
  2151  0095                     	;# 
  2152  0096                     	;# 
  2153  0097                     	;# 
  2154  0098                     	;# 
  2155  0099                     	;# 
  2156  009A                     	;# 
  2157  009B                     	;# 
  2158  009C                     	;# 
  2159  009D                     	;# 
  2160  009E                     	;# 
  2161  010C                     	;# 
  2162  010D                     	;# 
  2163  010E                     	;# 
  2164  010E                     	;# 
  2165  010F                     	;# 
  2166  0110                     	;# 
  2167  0110                     	;# 
  2168  0111                     	;# 
  2169  0112                     	;# 
  2170  0112                     	;# 
  2171  0113                     	;# 
  2172  0114                     	;# 
  2173  0114                     	;# 
  2174  0115                     	;# 
  2175  0116                     	;# 
  2176  0116                     	;# 
  2177  0117                     	;# 
  2178  0119                     	;# 
  2179  0119                     	;# 
  2180  0119                     	;# 
  2181  011A                     	;# 
  2182  011A                     	;# 
  2183  011A                     	;# 
  2184  011B                     	;# 
  2185  011B                     	;# 
  2186  011B                     	;# 
  2187  011B                     	;# 
  2188  011B                     	;# 
  2189  011C                     	;# 
  2190  011C                     	;# 
  2191  011C                     	;# 
  2192  011D                     	;# 
  2193  011D                     	;# 
  2194  011D                     	;# 
  2195  011E                     	;# 
  2196  011E                     	;# 
  2197  011E                     	;# 
  2198  011F                     	;# 
  2199  011F                     	;# 
  2200  011F                     	;# 
  2201  011F                     	;# 
  2202  011F                     	;# 
  2203  018C                     	;# 
  2204  018D                     	;# 
  2205  018E                     	;# 
  2206  018F                     	;# 
  2207  0190                     	;# 
  2208  0191                     	;# 
  2209  0192                     	;# 
  2210  0196                     	;# 
  2211  0197                     	;# 
  2212  0198                     	;# 
  2213  0199                     	;# 
  2214  019A                     	;# 
  2215  019B                     	;# 
  2216  019C                     	;# 
  2217  020C                     	;# 
  2218  020D                     	;# 
  2219  020E                     	;# 
  2220  020F                     	;# 
  2221  020F                     	;# 
  2222  0210                     	;# 
  2223  0210                     	;# 
  2224  0211                     	;# 
  2225  0211                     	;# 
  2226  0212                     	;# 
  2227  0213                     	;# 
  2228  0214                     	;# 
  2229  0215                     	;# 
  2230  0215                     	;# 
  2231  0216                     	;# 
  2232  0216                     	;# 
  2233  0217                     	;# 
  2234  0217                     	;# 
  2235  0218                     	;# 
  2236  0219                     	;# 
  2237  021A                     	;# 
  2238  021B                     	;# 
  2239  021B                     	;# 
  2240  021C                     	;# 
  2241  021C                     	;# 
  2242  021D                     	;# 
  2243  021D                     	;# 
  2244  021E                     	;# 
  2245  021F                     	;# 
  2246  028C                     	;# 
  2247  028C                     	;# 
  2248  028D                     	;# 
  2249  028D                     	;# 
  2250  028E                     	;# 
  2251  028F                     	;# 
  2252  0290                     	;# 
  2253  0290                     	;# 
  2254  0291                     	;# 
  2255  0292                     	;# 
  2256  0292                     	;# 
  2257  0293                     	;# 
  2258  0293                     	;# 
  2259  0294                     	;# 
  2260  0295                     	;# 
  2261  0296                     	;# 
  2262  0296                     	;# 
  2263  0297                     	;# 
  2264  0298                     	;# 
  2265  0298                     	;# 
  2266  0299                     	;# 
  2267  0299                     	;# 
  2268  029A                     	;# 
  2269  029B                     	;# 
  2270  029C                     	;# 
  2271  029C                     	;# 
  2272  029D                     	;# 
  2273  030C                     	;# 
  2274  030C                     	;# 
  2275  030D                     	;# 
  2276  030E                     	;# 
  2277  030F                     	;# 
  2278  0310                     	;# 
  2279  0310                     	;# 
  2280  0311                     	;# 
  2281  0312                     	;# 
  2282  0313                     	;# 
  2283  0314                     	;# 
  2284  0314                     	;# 
  2285  0315                     	;# 
  2286  0316                     	;# 
  2287  0317                     	;# 
  2288  0318                     	;# 
  2289  0318                     	;# 
  2290  0319                     	;# 
  2291  031A                     	;# 
  2292  031B                     	;# 
  2293  031C                     	;# 
  2294  031C                     	;# 
  2295  031D                     	;# 
  2296  031E                     	;# 
  2297  031F                     	;# 
  2298  038C                     	;# 
  2299  038D                     	;# 
  2300  038E                     	;# 
  2301  0390                     	;# 
  2302  0391                     	;# 
  2303  0392                     	;# 
  2304  040C                     	;# 
  2305  040D                     	;# 
  2306  040E                     	;# 
  2307  040F                     	;# 
  2308  0410                     	;# 
  2309  0411                     	;# 
  2310  0416                     	;# 
  2311  0416                     	;# 
  2312  0417                     	;# 
  2313  0418                     	;# 
  2314  0418                     	;# 
  2315  0419                     	;# 
  2316  041A                     	;# 
  2317  041A                     	;# 
  2318  041B                     	;# 
  2319  041C                     	;# 
  2320  041C                     	;# 
  2321  041D                     	;# 
  2322  041E                     	;# 
  2323  041F                     	;# 
  2324  048C                     	;# 
  2325  048C                     	;# 
  2326  048D                     	;# 
  2327  048E                     	;# 
  2328  048F                     	;# 
  2329  048F                     	;# 
  2330  0490                     	;# 
  2331  0491                     	;# 
  2332  0492                     	;# 
  2333  0492                     	;# 
  2334  0493                     	;# 
  2335  0494                     	;# 
  2336  0495                     	;# 
  2337  0495                     	;# 
  2338  0496                     	;# 
  2339  0497                     	;# 
  2340  0498                     	;# 
  2341  0499                     	;# 
  2342  049A                     	;# 
  2343  049B                     	;# 
  2344  049C                     	;# 
  2345  049D                     	;# 
  2346  050C                     	;# 
  2347  050C                     	;# 
  2348  050D                     	;# 
  2349  050E                     	;# 
  2350  050F                     	;# 
  2351  050F                     	;# 
  2352  0510                     	;# 
  2353  0511                     	;# 
  2354  0512                     	;# 
  2355  0512                     	;# 
  2356  0513                     	;# 
  2357  0514                     	;# 
  2358  0515                     	;# 
  2359  0515                     	;# 
  2360  0516                     	;# 
  2361  0517                     	;# 
  2362  0518                     	;# 
  2363  0519                     	;# 
  2364  051A                     	;# 
  2365  051B                     	;# 
  2366  051C                     	;# 
  2367  051D                     	;# 
  2368  058C                     	;# 
  2369  058C                     	;# 
  2370  058D                     	;# 
  2371  058E                     	;# 
  2372  058F                     	;# 
  2373  058F                     	;# 
  2374  0590                     	;# 
  2375  0591                     	;# 
  2376  0592                     	;# 
  2377  0593                     	;# 
  2378  060C                     	;# 
  2379  060D                     	;# 
  2380  060E                     	;# 
  2381  060F                     	;# 
  2382  0610                     	;# 
  2383  0611                     	;# 
  2384  0612                     	;# 
  2385  0613                     	;# 
  2386  0614                     	;# 
  2387  0616                     	;# 
  2388  0617                     	;# 
  2389  0618                     	;# 
  2390  0619                     	;# 
  2391  061A                     	;# 
  2392  061B                     	;# 
  2393  061C                     	;# 
  2394  061D                     	;# 
  2395  061E                     	;# 
  2396  068C                     	;# 
  2397  068D                     	;# 
  2398  068E                     	;# 
  2399  068F                     	;# 
  2400  0690                     	;# 
  2401  0691                     	;# 
  2402  0692                     	;# 
  2403  0693                     	;# 
  2404  0694                     	;# 
  2405  070C                     	;# 
  2406  070D                     	;# 
  2407  070E                     	;# 
  2408  070F                     	;# 
  2409  0710                     	;# 
  2410  0711                     	;# 
  2411  0712                     	;# 
  2412  0713                     	;# 
  2413  0714                     	;# 
  2414  0716                     	;# 
  2415  0717                     	;# 
  2416  0718                     	;# 
  2417  0719                     	;# 
  2418  071A                     	;# 
  2419  071B                     	;# 
  2420  071C                     	;# 
  2421  071D                     	;# 
  2422  071E                     	;# 
  2423  0796                     	;# 
  2424  0797                     	;# 
  2425  0798                     	;# 
  2426  0799                     	;# 
  2427  079A                     	;# 
  2428  079B                     	;# 
  2429  080C                     	;# 
  2430  080D                     	;# 
  2431  080E                     	;# 
  2432  080F                     	;# 
  2433  0810                     	;# 
  2434  0811                     	;# 
  2435  0812                     	;# 
  2436  0813                     	;# 
  2437  0814                     	;# 
  2438  081A                     	;# 
  2439  081B                     	;# 
  2440  081C                     	;# 
  2441  081D                     	;# 
  2442  081E                     	;# 
  2443  081F                     	;# 
  2444  088C                     	;# 
  2445  088D                     	;# 
  2446  088E                     	;# 
  2447  088F                     	;# 
  2448  0890                     	;# 
  2449  0891                     	;# 
  2450  0892                     	;# 
  2451  0893                     	;# 
  2452  0895                     	;# 
  2453  0896                     	;# 
  2454  0897                     	;# 
  2455  0898                     	;# 
  2456  0899                     	;# 
  2457  089A                     	;# 
  2458  089B                     	;# 
  2459  090C                     	;# 
  2460  090E                     	;# 
  2461  090F                     	;# 
  2462  091F                     	;# 
  2463  091F                     	;# 
  2464  098F                     	;# 
  2465  098F                     	;# 
  2466  0990                     	;# 
  2467  0991                     	;# 
  2468  0992                     	;# 
  2469  0993                     	;# 
  2470  0994                     	;# 
  2471  0995                     	;# 
  2472  0996                     	;# 
  2473  0997                     	;# 
  2474  0E0F                     	;# 
  2475  0E10                     	;# 
  2476  0E11                     	;# 
  2477  0E12                     	;# 
  2478  0E13                     	;# 
  2479  0E14                     	;# 
  2480  0E15                     	;# 
  2481  0E16                     	;# 
  2482  0E17                     	;# 
  2483  0E18                     	;# 
  2484  0E19                     	;# 
  2485  0E1A                     	;# 
  2486  0E1B                     	;# 
  2487  0E1C                     	;# 
  2488  0E1D                     	;# 
  2489  0E1E                     	;# 
  2490  0E1F                     	;# 
  2491  0E20                     	;# 
  2492  0E21                     	;# 
  2493  0E22                     	;# 
  2494  0E23                     	;# 
  2495  0E24                     	;# 
  2496  0E25                     	;# 
  2497  0E26                     	;# 
  2498  0E27                     	;# 
  2499  0E28                     	;# 
  2500  0E29                     	;# 
  2501  0E2A                     	;# 
  2502  0E2B                     	;# 
  2503  0E2C                     	;# 
  2504  0E2D                     	;# 
  2505  0E2E                     	;# 
  2506  0E2F                     	;# 
  2507  0E30                     	;# 
  2508  0E31                     	;# 
  2509  0E32                     	;# 
  2510  0E33                     	;# 
  2511  0E34                     	;# 
  2512  0E35                     	;# 
  2513  0E36                     	;# 
  2514  0E37                     	;# 
  2515  0E8F                     	;# 
  2516  0E90                     	;# 
  2517  0E91                     	;# 
  2518  0E92                     	;# 
  2519  0E93                     	;# 
  2520  0E94                     	;# 
  2521  0E95                     	;# 
  2522  0E96                     	;# 
  2523  0E97                     	;# 
  2524  0E9C                     	;# 
  2525  0E9D                     	;# 
  2526  0E9E                     	;# 
  2527  0EA1                     	;# 
  2528  0EA2                     	;# 
  2529  0EA3                     	;# 
  2530  0EA4                     	;# 
  2531  0EA5                     	;# 
  2532  0EA9                     	;# 
  2533  0EAA                     	;# 
  2534  0EAB                     	;# 
  2535  0EAC                     	;# 
  2536  0EB1                     	;# 
  2537  0EB2                     	;# 
  2538  0EB3                     	;# 
  2539  0EB8                     	;# 
  2540  0EB9                     	;# 
  2541  0EBA                     	;# 
  2542  0EBB                     	;# 
  2543  0EBC                     	;# 
  2544  0EBD                     	;# 
  2545  0EBE                     	;# 
  2546  0EC3                     	;# 
  2547  0EC5                     	;# 
  2548  0EC6                     	;# 
  2549  0EC7                     	;# 
  2550  0EC8                     	;# 
  2551  0EC9                     	;# 
  2552  0ECA                     	;# 
  2553  0ECB                     	;# 
  2554  0ECC                     	;# 
  2555  0F10                     	;# 
  2556  0F11                     	;# 
  2557  0F12                     	;# 
  2558  0F13                     	;# 
  2559  0F14                     	;# 
  2560  0F15                     	;# 
  2561  0F16                     	;# 
  2562  0F17                     	;# 
  2563  0F18                     	;# 
  2564  0F19                     	;# 
  2565  0F1A                     	;# 
  2566  0F1B                     	;# 
  2567  0F1C                     	;# 
  2568  0F1D                     	;# 
  2569  0F1E                     	;# 
  2570  0F1F                     	;# 
  2571  0F20                     	;# 
  2572  0F21                     	;# 
  2573  0F22                     	;# 
  2574  0F23                     	;# 
  2575  0F24                     	;# 
  2576  0F25                     	;# 
  2577  0F26                     	;# 
  2578  0F27                     	;# 
  2579  0F38                     	;# 
  2580  0F39                     	;# 
  2581  0F3A                     	;# 
  2582  0F3B                     	;# 
  2583  0F3C                     	;# 
  2584  0F3D                     	;# 
  2585  0F3E                     	;# 
  2586  0F3F                     	;# 
  2587  0F40                     	;# 
  2588  0F41                     	;# 
  2589  0F43                     	;# 
  2590  0F44                     	;# 
  2591  0F45                     	;# 
  2592  0F46                     	;# 
  2593  0F47                     	;# 
  2594  0F48                     	;# 
  2595  0F49                     	;# 
  2596  0F4A                     	;# 
  2597  0F4B                     	;# 
  2598  0F4C                     	;# 
  2599  0F4E                     	;# 
  2600  0F4F                     	;# 
  2601  0F50                     	;# 
  2602  0F51                     	;# 
  2603  0F52                     	;# 
  2604  0F53                     	;# 
  2605  0F54                     	;# 
  2606  0F55                     	;# 
  2607  0F56                     	;# 
  2608  0F57                     	;# 
  2609  0F65                     	;# 
  2610  0F68                     	;# 
  2611  0F69                     	;# 
  2612  0F6A                     	;# 
  2613  0F6B                     	;# 
  2614  0FE4                     	;# 
  2615  0FE5                     	;# 
  2616  0FE6                     	;# 
  2617  0FE7                     	;# 
  2618  0FE8                     	;# 
  2619  0FE9                     	;# 
  2620  0FEA                     	;# 
  2621  0FEB                     	;# 
  2622  0FED                     	;# 
  2623  0FEE                     	;# 
  2624  0FEF                     	;# 
  2625  0000                     	;# 
  2626  0001                     	;# 
  2627  0002                     	;# 
  2628  0003                     	;# 
  2629  0004                     	;# 
  2630  0005                     	;# 
  2631  0006                     	;# 
  2632  0007                     	;# 
  2633  0008                     	;# 
  2634  0009                     	;# 
  2635  000A                     	;# 
  2636  000B                     	;# 
  2637  000C                     	;# 
  2638  000D                     	;# 
  2639  000E                     	;# 
  2640  0010                     	;# 
  2641  0011                     	;# 
  2642  0012                     	;# 
  2643  0013                     	;# 
  2644  0016                     	;# 
  2645  0017                     	;# 
  2646  0018                     	;# 
  2647  001C                     	;# 
  2648  001C                     	;# 
  2649  001D                     	;# 
  2650  001D                     	;# 
  2651  001E                     	;# 
  2652  001F                     	;# 
  2653  008C                     	;# 
  2654  008C                     	;# 
  2655  008D                     	;# 
  2656  008E                     	;# 
  2657  008E                     	;# 
  2658  008F                     	;# 
  2659  0090                     	;# 
  2660  0090                     	;# 
  2661  0091                     	;# 
  2662  0093                     	;# 
  2663  0094                     	;# 
  2664  0095                     	;# 
  2665  0096                     	;# 
  2666  0097                     	;# 
  2667  0098                     	;# 
  2668  0099                     	;# 
  2669  009A                     	;# 
  2670  009B                     	;# 
  2671  009C                     	;# 
  2672  009D                     	;# 
  2673  009E                     	;# 
  2674  010C                     	;# 
  2675  010D                     	;# 
  2676  010E                     	;# 
  2677  010E                     	;# 
  2678  010F                     	;# 
  2679  0110                     	;# 
  2680  0110                     	;# 
  2681  0111                     	;# 
  2682  0112                     	;# 
  2683  0112                     	;# 
  2684  0113                     	;# 
  2685  0114                     	;# 
  2686  0114                     	;# 
  2687  0115                     	;# 
  2688  0116                     	;# 
  2689  0116                     	;# 
  2690  0117                     	;# 
  2691  0119                     	;# 
  2692  0119                     	;# 
  2693  0119                     	;# 
  2694  011A                     	;# 
  2695  011A                     	;# 
  2696  011A                     	;# 
  2697  011B                     	;# 
  2698  011B                     	;# 
  2699  011B                     	;# 
  2700  011B                     	;# 
  2701  011B                     	;# 
  2702  011C                     	;# 
  2703  011C                     	;# 
  2704  011C                     	;# 
  2705  011D                     	;# 
  2706  011D                     	;# 
  2707  011D                     	;# 
  2708  011E                     	;# 
  2709  011E                     	;# 
  2710  011E                     	;# 
  2711  011F                     	;# 
  2712  011F                     	;# 
  2713  011F                     	;# 
  2714  011F                     	;# 
  2715  011F                     	;# 
  2716  018C                     	;# 
  2717  018D                     	;# 
  2718  018E                     	;# 
  2719  018F                     	;# 
  2720  0190                     	;# 
  2721  0191                     	;# 
  2722  0192                     	;# 
  2723  0196                     	;# 
  2724  0197                     	;# 
  2725  0198                     	;# 
  2726  0199                     	;# 
  2727  019A                     	;# 
  2728  019B                     	;# 
  2729  019C                     	;# 
  2730  020C                     	;# 
  2731  020D                     	;# 
  2732  020E                     	;# 
  2733  020F                     	;# 
  2734  020F                     	;# 
  2735  0210                     	;# 
  2736  0210                     	;# 
  2737  0211                     	;# 
  2738  0211                     	;# 
  2739  0212                     	;# 
  2740  0213                     	;# 
  2741  0214                     	;# 
  2742  0215                     	;# 
  2743  0215                     	;# 
  2744  0216                     	;# 
  2745  0216                     	;# 
  2746  0217                     	;# 
  2747  0217                     	;# 
  2748  0218                     	;# 
  2749  0219                     	;# 
  2750  021A                     	;# 
  2751  021B                     	;# 
  2752  021B                     	;# 
  2753  021C                     	;# 
  2754  021C                     	;# 
  2755  021D                     	;# 
  2756  021D                     	;# 
  2757  021E                     	;# 
  2758  021F                     	;# 
  2759  028C                     	;# 
  2760  028C                     	;# 
  2761  028D                     	;# 
  2762  028D                     	;# 
  2763  028E                     	;# 
  2764  028F                     	;# 
  2765  0290                     	;# 
  2766  0290                     	;# 
  2767  0291                     	;# 
  2768  0292                     	;# 
  2769  0292                     	;# 
  2770  0293                     	;# 
  2771  0293                     	;# 
  2772  0294                     	;# 
  2773  0295                     	;# 
  2774  0296                     	;# 
  2775  0296                     	;# 
  2776  0297                     	;# 
  2777  0298                     	;# 
  2778  0298                     	;# 
  2779  0299                     	;# 
  2780  0299                     	;# 
  2781  029A                     	;# 
  2782  029B                     	;# 
  2783  029C                     	;# 
  2784  029C                     	;# 
  2785  029D                     	;# 
  2786  030C                     	;# 
  2787  030C                     	;# 
  2788  030D                     	;# 
  2789  030E                     	;# 
  2790  030F                     	;# 
  2791  0310                     	;# 
  2792  0310                     	;# 
  2793  0311                     	;# 
  2794  0312                     	;# 
  2795  0313                     	;# 
  2796  0314                     	;# 
  2797  0314                     	;# 
  2798  0315                     	;# 
  2799  0316                     	;# 
  2800  0317                     	;# 
  2801  0318                     	;# 
  2802  0318                     	;# 
  2803  0319                     	;# 
  2804  031A                     	;# 
  2805  031B                     	;# 
  2806  031C                     	;# 
  2807  031C                     	;# 
  2808  031D                     	;# 
  2809  031E                     	;# 
  2810  031F                     	;# 
  2811  038C                     	;# 
  2812  038D                     	;# 
  2813  038E                     	;# 
  2814  0390                     	;# 
  2815  0391                     	;# 
  2816  0392                     	;# 
  2817  040C                     	;# 
  2818  040D                     	;# 
  2819  040E                     	;# 
  2820  040F                     	;# 
  2821  0410                     	;# 
  2822  0411                     	;# 
  2823  0416                     	;# 
  2824  0416                     	;# 
  2825  0417                     	;# 
  2826  0418                     	;# 
  2827  0418                     	;# 
  2828  0419                     	;# 
  2829  041A                     	;# 
  2830  041A                     	;# 
  2831  041B                     	;# 
  2832  041C                     	;# 
  2833  041C                     	;# 
  2834  041D                     	;# 
  2835  041E                     	;# 
  2836  041F                     	;# 
  2837  048C                     	;# 
  2838  048C                     	;# 
  2839  048D                     	;# 
  2840  048E                     	;# 
  2841  048F                     	;# 
  2842  048F                     	;# 
  2843  0490                     	;# 
  2844  0491                     	;# 
  2845  0492                     	;# 
  2846  0492                     	;# 
  2847  0493                     	;# 
  2848  0494                     	;# 
  2849  0495                     	;# 
  2850  0495                     	;# 
  2851  0496                     	;# 
  2852  0497                     	;# 
  2853  0498                     	;# 
  2854  0499                     	;# 
  2855  049A                     	;# 
  2856  049B                     	;# 
  2857  049C                     	;# 
  2858  049D                     	;# 
  2859  050C                     	;# 
  2860  050C                     	;# 
  2861  050D                     	;# 
  2862  050E                     	;# 
  2863  050F                     	;# 
  2864  050F                     	;# 
  2865  0510                     	;# 
  2866  0511                     	;# 
  2867  0512                     	;# 
  2868  0512                     	;# 
  2869  0513                     	;# 
  2870  0514                     	;# 
  2871  0515                     	;# 
  2872  0515                     	;# 
  2873  0516                     	;# 
  2874  0517                     	;# 
  2875  0518                     	;# 
  2876  0519                     	;# 
  2877  051A                     	;# 
  2878  051B                     	;# 
  2879  051C                     	;# 
  2880  051D                     	;# 
  2881  058C                     	;# 
  2882  058C                     	;# 
  2883  058D                     	;# 
  2884  058E                     	;# 
  2885  058F                     	;# 
  2886  058F                     	;# 
  2887  0590                     	;# 
  2888  0591                     	;# 
  2889  0592                     	;# 
  2890  0593                     	;# 
  2891  060C                     	;# 
  2892  060D                     	;# 
  2893  060E                     	;# 
  2894  060F                     	;# 
  2895  0610                     	;# 
  2896  0611                     	;# 
  2897  0612                     	;# 
  2898  0613                     	;# 
  2899  0614                     	;# 
  2900  0616                     	;# 
  2901  0617                     	;# 
  2902  0618                     	;# 
  2903  0619                     	;# 
  2904  061A                     	;# 
  2905  061B                     	;# 
  2906  061C                     	;# 
  2907  061D                     	;# 
  2908  061E                     	;# 
  2909  068C                     	;# 
  2910  068D                     	;# 
  2911  068E                     	;# 
  2912  068F                     	;# 
  2913  0690                     	;# 
  2914  0691                     	;# 
  2915  0692                     	;# 
  2916  0693                     	;# 
  2917  0694                     	;# 
  2918  070C                     	;# 
  2919  070D                     	;# 
  2920  070E                     	;# 
  2921  070F                     	;# 
  2922  0710                     	;# 
  2923  0711                     	;# 
  2924  0712                     	;# 
  2925  0713                     	;# 
  2926  0714                     	;# 
  2927  0716                     	;# 
  2928  0717                     	;# 
  2929  0718                     	;# 
  2930  0719                     	;# 
  2931  071A                     	;# 
  2932  071B                     	;# 
  2933  071C                     	;# 
  2934  071D                     	;# 
  2935  071E                     	;# 
  2936  0796                     	;# 
  2937  0797                     	;# 
  2938  0798                     	;# 
  2939  0799                     	;# 
  2940  079A                     	;# 
  2941  079B                     	;# 
  2942  080C                     	;# 
  2943  080D                     	;# 
  2944  080E                     	;# 
  2945  080F                     	;# 
  2946  0810                     	;# 
  2947  0811                     	;# 
  2948  0812                     	;# 
  2949  0813                     	;# 
  2950  0814                     	;# 
  2951  081A                     	;# 
  2952  081B                     	;# 
  2953  081C                     	;# 
  2954  081D                     	;# 
  2955  081E                     	;# 
  2956  081F                     	;# 
  2957  088C                     	;# 
  2958  088D                     	;# 
  2959  088E                     	;# 
  2960  088F                     	;# 
  2961  0890                     	;# 
  2962  0891                     	;# 
  2963  0892                     	;# 
  2964  0893                     	;# 
  2965  0895                     	;# 
  2966  0896                     	;# 
  2967  0897                     	;# 
  2968  0898                     	;# 
  2969  0899                     	;# 
  2970  089A                     	;# 
  2971  089B                     	;# 
  2972  090C                     	;# 
  2973  090E                     	;# 
  2974  090F                     	;# 
  2975  091F                     	;# 
  2976  091F                     	;# 
  2977  098F                     	;# 
  2978  098F                     	;# 
  2979  0990                     	;# 
  2980  0991                     	;# 
  2981  0992                     	;# 
  2982  0993                     	;# 
  2983  0994                     	;# 
  2984  0995                     	;# 
  2985  0996                     	;# 
  2986  0997                     	;# 
  2987  0E0F                     	;# 
  2988  0E10                     	;# 
  2989  0E11                     	;# 
  2990  0E12                     	;# 
  2991  0E13                     	;# 
  2992  0E14                     	;# 
  2993  0E15                     	;# 
  2994  0E16                     	;# 
  2995  0E17                     	;# 
  2996  0E18                     	;# 
  2997  0E19                     	;# 
  2998  0E1A                     	;# 
  2999  0E1B                     	;# 
  3000  0E1C                     	;# 
  3001  0E1D                     	;# 
  3002  0E1E                     	;# 
  3003  0E1F                     	;# 
  3004  0E20                     	;# 
  3005  0E21                     	;# 
  3006  0E22                     	;# 
  3007  0E23                     	;# 
  3008  0E24                     	;# 
  3009  0E25                     	;# 
  3010  0E26                     	;# 
  3011  0E27                     	;# 
  3012  0E28                     	;# 
  3013  0E29                     	;# 
  3014  0E2A                     	;# 
  3015  0E2B                     	;# 
  3016  0E2C                     	;# 
  3017  0E2D                     	;# 
  3018  0E2E                     	;# 
  3019  0E2F                     	;# 
  3020  0E30                     	;# 
  3021  0E31                     	;# 
  3022  0E32                     	;# 
  3023  0E33                     	;# 
  3024  0E34                     	;# 
  3025  0E35                     	;# 
  3026  0E36                     	;# 
  3027  0E37                     	;# 
  3028  0E8F                     	;# 
  3029  0E90                     	;# 
  3030  0E91                     	;# 
  3031  0E92                     	;# 
  3032  0E93                     	;# 
  3033  0E94                     	;# 
  3034  0E95                     	;# 
  3035  0E96                     	;# 
  3036  0E97                     	;# 
  3037  0E9C                     	;# 
  3038  0E9D                     	;# 
  3039  0E9E                     	;# 
  3040  0EA1                     	;# 
  3041  0EA2                     	;# 
  3042  0EA3                     	;# 
  3043  0EA4                     	;# 
  3044  0EA5                     	;# 
  3045  0EA9                     	;# 
  3046  0EAA                     	;# 
  3047  0EAB                     	;# 
  3048  0EAC                     	;# 
  3049  0EB1                     	;# 
  3050  0EB2                     	;# 
  3051  0EB3                     	;# 
  3052  0EB8                     	;# 
  3053  0EB9                     	;# 
  3054  0EBA                     	;# 
  3055  0EBB                     	;# 
  3056  0EBC                     	;# 
  3057  0EBD                     	;# 
  3058  0EBE                     	;# 
  3059  0EC3                     	;# 
  3060  0EC5                     	;# 
  3061  0EC6                     	;# 
  3062  0EC7                     	;# 
  3063  0EC8                     	;# 
  3064  0EC9                     	;# 
  3065  0ECA                     	;# 
  3066  0ECB                     	;# 
  3067  0ECC                     	;# 
  3068  0F10                     	;# 
  3069  0F11                     	;# 
  3070  0F12                     	;# 
  3071  0F13                     	;# 
  3072  0F14                     	;# 
  3073  0F15                     	;# 
  3074  0F16                     	;# 
  3075  0F17                     	;# 
  3076  0F18                     	;# 
  3077  0F19                     	;# 
  3078  0F1A                     	;# 
  3079  0F1B                     	;# 
  3080  0F1C                     	;# 
  3081  0F1D                     	;# 
  3082  0F1E                     	;# 
  3083  0F1F                     	;# 
  3084  0F20                     	;# 
  3085  0F21                     	;# 
  3086  0F22                     	;# 
  3087  0F23                     	;# 
  3088  0F24                     	;# 
  3089  0F25                     	;# 
  3090  0F26                     	;# 
  3091  0F27                     	;# 
  3092  0F38                     	;# 
  3093  0F39                     	;# 
  3094  0F3A                     	;# 
  3095  0F3B                     	;# 
  3096  0F3C                     	;# 
  3097  0F3D                     	;# 
  3098  0F3E                     	;# 
  3099  0F3F                     	;# 
  3100  0F40                     	;# 
  3101  0F41                     	;# 
  3102  0F43                     	;# 
  3103  0F44                     	;# 
  3104  0F45                     	;# 
  3105  0F46                     	;# 
  3106  0F47                     	;# 
  3107  0F48                     	;# 
  3108  0F49                     	;# 
  3109  0F4A                     	;# 
  3110  0F4B                     	;# 
  3111  0F4C                     	;# 
  3112  0F4E                     	;# 
  3113  0F4F                     	;# 
  3114  0F50                     	;# 
  3115  0F51                     	;# 
  3116  0F52                     	;# 
  3117  0F53                     	;# 
  3118  0F54                     	;# 
  3119  0F55                     	;# 
  3120  0F56                     	;# 
  3121  0F57                     	;# 
  3122  0F65                     	;# 
  3123  0F68                     	;# 
  3124  0F69                     	;# 
  3125  0F6A                     	;# 
  3126  0F6B                     	;# 
  3127  0FE4                     	;# 
  3128  0FE5                     	;# 
  3129  0FE6                     	;# 
  3130  0FE7                     	;# 
  3131  0FE8                     	;# 
  3132  0FE9                     	;# 
  3133  0FEA                     	;# 
  3134  0FEB                     	;# 
  3135  0FED                     	;# 
  3136  0FEE                     	;# 
  3137  0FEF                     	;# 
  3138  0000                     	;# 
  3139  0001                     	;# 
  3140  0002                     	;# 
  3141  0003                     	;# 
  3142  0004                     	;# 
  3143  0005                     	;# 
  3144  0006                     	;# 
  3145  0007                     	;# 
  3146  0008                     	;# 
  3147  0009                     	;# 
  3148  000A                     	;# 
  3149  000B                     	;# 
  3150  000C                     	;# 
  3151  000D                     	;# 
  3152  000E                     	;# 
  3153  0010                     	;# 
  3154  0011                     	;# 
  3155  0012                     	;# 
  3156  0013                     	;# 
  3157  0016                     	;# 
  3158  0017                     	;# 
  3159  0018                     	;# 
  3160  001C                     	;# 
  3161  001C                     	;# 
  3162  001D                     	;# 
  3163  001D                     	;# 
  3164  001E                     	;# 
  3165  001F                     	;# 
  3166  008C                     	;# 
  3167  008C                     	;# 
  3168  008D                     	;# 
  3169  008E                     	;# 
  3170  008E                     	;# 
  3171  008F                     	;# 
  3172  0090                     	;# 
  3173  0090                     	;# 
  3174  0091                     	;# 
  3175  0093                     	;# 
  3176  0094                     	;# 
  3177  0095                     	;# 
  3178  0096                     	;# 
  3179  0097                     	;# 
  3180  0098                     	;# 
  3181  0099                     	;# 
  3182  009A                     	;# 
  3183  009B                     	;# 
  3184  009C                     	;# 
  3185  009D                     	;# 
  3186  009E                     	;# 
  3187  010C                     	;# 
  3188  010D                     	;# 
  3189  010E                     	;# 
  3190  010E                     	;# 
  3191  010F                     	;# 
  3192  0110                     	;# 
  3193  0110                     	;# 
  3194  0111                     	;# 
  3195  0112                     	;# 
  3196  0112                     	;# 
  3197  0113                     	;# 
  3198  0114                     	;# 
  3199  0114                     	;# 
  3200  0115                     	;# 
  3201  0116                     	;# 
  3202  0116                     	;# 
  3203  0117                     	;# 
  3204  0119                     	;# 
  3205  0119                     	;# 
  3206  0119                     	;# 
  3207  011A                     	;# 
  3208  011A                     	;# 
  3209  011A                     	;# 
  3210  011B                     	;# 
  3211  011B                     	;# 
  3212  011B                     	;# 
  3213  011B                     	;# 
  3214  011B                     	;# 
  3215  011C                     	;# 
  3216  011C                     	;# 
  3217  011C                     	;# 
  3218  011D                     	;# 
  3219  011D                     	;# 
  3220  011D                     	;# 
  3221  011E                     	;# 
  3222  011E                     	;# 
  3223  011E                     	;# 
  3224  011F                     	;# 
  3225  011F                     	;# 
  3226  011F                     	;# 
  3227  011F                     	;# 
  3228  011F                     	;# 
  3229  018C                     	;# 
  3230  018D                     	;# 
  3231  018E                     	;# 
  3232  018F                     	;# 
  3233  0190                     	;# 
  3234  0191                     	;# 
  3235  0192                     	;# 
  3236  0196                     	;# 
  3237  0197                     	;# 
  3238  0198                     	;# 
  3239  0199                     	;# 
  3240  019A                     	;# 
  3241  019B                     	;# 
  3242  019C                     	;# 
  3243  020C                     	;# 
  3244  020D                     	;# 
  3245  020E                     	;# 
  3246  020F                     	;# 
  3247  020F                     	;# 
  3248  0210                     	;# 
  3249  0210                     	;# 
  3250  0211                     	;# 
  3251  0211                     	;# 
  3252  0212                     	;# 
  3253  0213                     	;# 
  3254  0214                     	;# 
  3255  0215                     	;# 
  3256  0215                     	;# 
  3257  0216                     	;# 
  3258  0216                     	;# 
  3259  0217                     	;# 
  3260  0217                     	;# 
  3261  0218                     	;# 
  3262  0219                     	;# 
  3263  021A                     	;# 
  3264  021B                     	;# 
  3265  021B                     	;# 
  3266  021C                     	;# 
  3267  021C                     	;# 
  3268  021D                     	;# 
  3269  021D                     	;# 
  3270  021E                     	;# 
  3271  021F                     	;# 
  3272  028C                     	;# 
  3273  028C                     	;# 
  3274  028D                     	;# 
  3275  028D                     	;# 
  3276  028E                     	;# 
  3277  028F                     	;# 
  3278  0290                     	;# 
  3279  0290                     	;# 
  3280  0291                     	;# 
  3281  0292                     	;# 
  3282  0292                     	;# 
  3283  0293                     	;# 
  3284  0293                     	;# 
  3285  0294                     	;# 
  3286  0295                     	;# 
  3287  0296                     	;# 
  3288  0296                     	;# 
  3289  0297                     	;# 
  3290  0298                     	;# 
  3291  0298                     	;# 
  3292  0299                     	;# 
  3293  0299                     	;# 
  3294  029A                     	;# 
  3295  029B                     	;# 
  3296  029C                     	;# 
  3297  029C                     	;# 
  3298  029D                     	;# 
  3299  030C                     	;# 
  3300  030C                     	;# 
  3301  030D                     	;# 
  3302  030E                     	;# 
  3303  030F                     	;# 
  3304  0310                     	;# 
  3305  0310                     	;# 
  3306  0311                     	;# 
  3307  0312                     	;# 
  3308  0313                     	;# 
  3309  0314                     	;# 
  3310  0314                     	;# 
  3311  0315                     	;# 
  3312  0316                     	;# 
  3313  0317                     	;# 
  3314  0318                     	;# 
  3315  0318                     	;# 
  3316  0319                     	;# 
  3317  031A                     	;# 
  3318  031B                     	;# 
  3319  031C                     	;# 
  3320  031C                     	;# 
  3321  031D                     	;# 
  3322  031E                     	;# 
  3323  031F                     	;# 
  3324  038C                     	;# 
  3325  038D                     	;# 
  3326  038E                     	;# 
  3327  0390                     	;# 
  3328  0391                     	;# 
  3329  0392                     	;# 
  3330  040C                     	;# 
  3331  040D                     	;# 
  3332  040E                     	;# 
  3333  040F                     	;# 
  3334  0410                     	;# 
  3335  0411                     	;# 
  3336  0416                     	;# 
  3337  0416                     	;# 
  3338  0417                     	;# 
  3339  0418                     	;# 
  3340  0418                     	;# 
  3341  0419                     	;# 
  3342  041A                     	;# 
  3343  041A                     	;# 
  3344  041B                     	;# 
  3345  041C                     	;# 
  3346  041C                     	;# 
  3347  041D                     	;# 
  3348  041E                     	;# 
  3349  041F                     	;# 
  3350  048C                     	;# 
  3351  048C                     	;# 
  3352  048D                     	;# 
  3353  048E                     	;# 
  3354  048F                     	;# 
  3355  048F                     	;# 
  3356  0490                     	;# 
  3357  0491                     	;# 
  3358  0492                     	;# 
  3359  0492                     	;# 
  3360  0493                     	;# 
  3361  0494                     	;# 
  3362  0495                     	;# 
  3363  0495                     	;# 
  3364  0496                     	;# 
  3365  0497                     	;# 
  3366  0498                     	;# 
  3367  0499                     	;# 
  3368  049A                     	;# 
  3369  049B                     	;# 
  3370  049C                     	;# 
  3371  049D                     	;# 
  3372  050C                     	;# 
  3373  050C                     	;# 
  3374  050D                     	;# 
  3375  050E                     	;# 
  3376  050F                     	;# 
  3377  050F                     	;# 
  3378  0510                     	;# 
  3379  0511                     	;# 
  3380  0512                     	;# 
  3381  0512                     	;# 
  3382  0513                     	;# 
  3383  0514                     	;# 
  3384  0515                     	;# 
  3385  0515                     	;# 
  3386  0516                     	;# 
  3387  0517                     	;# 
  3388  0518                     	;# 
  3389  0519                     	;# 
  3390  051A                     	;# 
  3391  051B                     	;# 
  3392  051C                     	;# 
  3393  051D                     	;# 
  3394  058C                     	;# 
  3395  058C                     	;# 
  3396  058D                     	;# 
  3397  058E                     	;# 
  3398  058F                     	;# 
  3399  058F                     	;# 
  3400  0590                     	;# 
  3401  0591                     	;# 
  3402  0592                     	;# 
  3403  0593                     	;# 
  3404  060C                     	;# 
  3405  060D                     	;# 
  3406  060E                     	;# 
  3407  060F                     	;# 
  3408  0610                     	;# 
  3409  0611                     	;# 
  3410  0612                     	;# 
  3411  0613                     	;# 
  3412  0614                     	;# 
  3413  0616                     	;# 
  3414  0617                     	;# 
  3415  0618                     	;# 
  3416  0619                     	;# 
  3417  061A                     	;# 
  3418  061B                     	;# 
  3419  061C                     	;# 
  3420  061D                     	;# 
  3421  061E                     	;# 
  3422  068C                     	;# 
  3423  068D                     	;# 
  3424  068E                     	;# 
  3425  068F                     	;# 
  3426  0690                     	;# 
  3427  0691                     	;# 
  3428  0692                     	;# 
  3429  0693                     	;# 
  3430  0694                     	;# 
  3431  070C                     	;# 
  3432  070D                     	;# 
  3433  070E                     	;# 
  3434  070F                     	;# 
  3435  0710                     	;# 
  3436  0711                     	;# 
  3437  0712                     	;# 
  3438  0713                     	;# 
  3439  0714                     	;# 
  3440  0716                     	;# 
  3441  0717                     	;# 
  3442  0718                     	;# 
  3443  0719                     	;# 
  3444  071A                     	;# 
  3445  071B                     	;# 
  3446  071C                     	;# 
  3447  071D                     	;# 
  3448  071E                     	;# 
  3449  0796                     	;# 
  3450  0797                     	;# 
  3451  0798                     	;# 
  3452  0799                     	;# 
  3453  079A                     	;# 
  3454  079B                     	;# 
  3455  080C                     	;# 
  3456  080D                     	;# 
  3457  080E                     	;# 
  3458  080F                     	;# 
  3459  0810                     	;# 
  3460  0811                     	;# 
  3461  0812                     	;# 
  3462  0813                     	;# 
  3463  0814                     	;# 
  3464  081A                     	;# 
  3465  081B                     	;# 
  3466  081C                     	;# 
  3467  081D                     	;# 
  3468  081E                     	;# 
  3469  081F                     	;# 
  3470  088C                     	;# 
  3471  088D                     	;# 
  3472  088E                     	;# 
  3473  088F                     	;# 
  3474  0890                     	;# 
  3475  0891                     	;# 
  3476  0892                     	;# 
  3477  0893                     	;# 
  3478  0895                     	;# 
  3479  0896                     	;# 
  3480  0897                     	;# 
  3481  0898                     	;# 
  3482  0899                     	;# 
  3483  089A                     	;# 
  3484  089B                     	;# 
  3485  090C                     	;# 
  3486  090E                     	;# 
  3487  090F                     	;# 
  3488  091F                     	;# 
  3489  091F                     	;# 
  3490  098F                     	;# 
  3491  098F                     	;# 
  3492  0990                     	;# 
  3493  0991                     	;# 
  3494  0992                     	;# 
  3495  0993                     	;# 
  3496  0994                     	;# 
  3497  0995                     	;# 
  3498  0996                     	;# 
  3499  0997                     	;# 
  3500  0E0F                     	;# 
  3501  0E10                     	;# 
  3502  0E11                     	;# 
  3503  0E12                     	;# 
  3504  0E13                     	;# 
  3505  0E14                     	;# 
  3506  0E15                     	;# 
  3507  0E16                     	;# 
  3508  0E17                     	;# 
  3509  0E18                     	;# 
  3510  0E19                     	;# 
  3511  0E1A                     	;# 
  3512  0E1B                     	;# 
  3513  0E1C                     	;# 
  3514  0E1D                     	;# 
  3515  0E1E                     	;# 
  3516  0E1F                     	;# 
  3517  0E20                     	;# 
  3518  0E21                     	;# 
  3519  0E22                     	;# 
  3520  0E23                     	;# 
  3521  0E24                     	;# 
  3522  0E25                     	;# 
  3523  0E26                     	;# 
  3524  0E27                     	;# 
  3525  0E28                     	;# 
  3526  0E29                     	;# 
  3527  0E2A                     	;# 
  3528  0E2B                     	;# 
  3529  0E2C                     	;# 
  3530  0E2D                     	;# 
  3531  0E2E                     	;# 
  3532  0E2F                     	;# 
  3533  0E30                     	;# 
  3534  0E31                     	;# 
  3535  0E32                     	;# 
  3536  0E33                     	;# 
  3537  0E34                     	;# 
  3538  0E35                     	;# 
  3539  0E36                     	;# 
  3540  0E37                     	;# 
  3541  0E8F                     	;# 
  3542  0E90                     	;# 
  3543  0E91                     	;# 
  3544  0E92                     	;# 
  3545  0E93                     	;# 
  3546  0E94                     	;# 
  3547  0E95                     	;# 
  3548  0E96                     	;# 
  3549  0E97                     	;# 
  3550  0E9C                     	;# 
  3551  0E9D                     	;# 
  3552  0E9E                     	;# 
  3553  0EA1                     	;# 
  3554  0EA2                     	;# 
  3555  0EA3                     	;# 
  3556  0EA4                     	;# 
  3557  0EA5                     	;# 
  3558  0EA9                     	;# 
  3559  0EAA                     	;# 
  3560  0EAB                     	;# 
  3561  0EAC                     	;# 
  3562  0EB1                     	;# 
  3563  0EB2                     	;# 
  3564  0EB3                     	;# 
  3565  0EB8                     	;# 
  3566  0EB9                     	;# 
  3567  0EBA                     	;# 
  3568  0EBB                     	;# 
  3569  0EBC                     	;# 
  3570  0EBD                     	;# 
  3571  0EBE                     	;# 
  3572  0EC3                     	;# 
  3573  0EC5                     	;# 
  3574  0EC6                     	;# 
  3575  0EC7                     	;# 
  3576  0EC8                     	;# 
  3577  0EC9                     	;# 
  3578  0ECA                     	;# 
  3579  0ECB                     	;# 
  3580  0ECC                     	;# 
  3581  0F10                     	;# 
  3582  0F11                     	;# 
  3583  0F12                     	;# 
  3584  0F13                     	;# 
  3585  0F14                     	;# 
  3586  0F15                     	;# 
  3587  0F16                     	;# 
  3588  0F17                     	;# 
  3589  0F18                     	;# 
  3590  0F19                     	;# 
  3591  0F1A                     	;# 
  3592  0F1B                     	;# 
  3593  0F1C                     	;# 
  3594  0F1D                     	;# 
  3595  0F1E                     	;# 
  3596  0F1F                     	;# 
  3597  0F20                     	;# 
  3598  0F21                     	;# 
  3599  0F22                     	;# 
  3600  0F23                     	;# 
  3601  0F24                     	;# 
  3602  0F25                     	;# 
  3603  0F26                     	;# 
  3604  0F27                     	;# 
  3605  0F38                     	;# 
  3606  0F39                     	;# 
  3607  0F3A                     	;# 
  3608  0F3B                     	;# 
  3609  0F3C                     	;# 
  3610  0F3D                     	;# 
  3611  0F3E                     	;# 
  3612  0F3F                     	;# 
  3613  0F40                     	;# 
  3614  0F41                     	;# 
  3615  0F43                     	;# 
  3616  0F44                     	;# 
  3617  0F45                     	;# 
  3618  0F46                     	;# 
  3619  0F47                     	;# 
  3620  0F48                     	;# 
  3621  0F49                     	;# 
  3622  0F4A                     	;# 
  3623  0F4B                     	;# 
  3624  0F4C                     	;# 
  3625  0F4E                     	;# 
  3626  0F4F                     	;# 
  3627  0F50                     	;# 
  3628  0F51                     	;# 
  3629  0F52                     	;# 
  3630  0F53                     	;# 
  3631  0F54                     	;# 
  3632  0F55                     	;# 
  3633  0F56                     	;# 
  3634  0F57                     	;# 
  3635  0F65                     	;# 
  3636  0F68                     	;# 
  3637  0F69                     	;# 
  3638  0F6A                     	;# 
  3639  0F6B                     	;# 
  3640  0FE4                     	;# 
  3641  0FE5                     	;# 
  3642  0FE6                     	;# 
  3643  0FE7                     	;# 
  3644  0FE8                     	;# 
  3645  0FE9                     	;# 
  3646  0FEA                     	;# 
  3647  0FEB                     	;# 
  3648  0FED                     	;# 
  3649  0FEE                     	;# 
  3650  0FEF                     	;# 
  3651  0000                     	;# 
  3652  0001                     	;# 
  3653  0002                     	;# 
  3654  0003                     	;# 
  3655  0004                     	;# 
  3656  0005                     	;# 
  3657  0006                     	;# 
  3658  0007                     	;# 
  3659  0008                     	;# 
  3660  0009                     	;# 
  3661  000A                     	;# 
  3662  000B                     	;# 
  3663  000C                     	;# 
  3664  000D                     	;# 
  3665  000E                     	;# 
  3666  0010                     	;# 
  3667  0011                     	;# 
  3668  0012                     	;# 
  3669  0013                     	;# 
  3670  0016                     	;# 
  3671  0017                     	;# 
  3672  0018                     	;# 
  3673  001C                     	;# 
  3674  001C                     	;# 
  3675  001D                     	;# 
  3676  001D                     	;# 
  3677  001E                     	;# 
  3678  001F                     	;# 
  3679  008C                     	;# 
  3680  008C                     	;# 
  3681  008D                     	;# 
  3682  008E                     	;# 
  3683  008E                     	;# 
  3684  008F                     	;# 
  3685  0090                     	;# 
  3686  0090                     	;# 
  3687  0091                     	;# 
  3688  0093                     	;# 
  3689  0094                     	;# 
  3690  0095                     	;# 
  3691  0096                     	;# 
  3692  0097                     	;# 
  3693  0098                     	;# 
  3694  0099                     	;# 
  3695  009A                     	;# 
  3696  009B                     	;# 
  3697  009C                     	;# 
  3698  009D                     	;# 
  3699  009E                     	;# 
  3700  010C                     	;# 
  3701  010D                     	;# 
  3702  010E                     	;# 
  3703  010E                     	;# 
  3704  010F                     	;# 
  3705  0110                     	;# 
  3706  0110                     	;# 
  3707  0111                     	;# 
  3708  0112                     	;# 
  3709  0112                     	;# 
  3710  0113                     	;# 
  3711  0114                     	;# 
  3712  0114                     	;# 
  3713  0115                     	;# 
  3714  0116                     	;# 
  3715  0116                     	;# 
  3716  0117                     	;# 
  3717  0119                     	;# 
  3718  0119                     	;# 
  3719  0119                     	;# 
  3720  011A                     	;# 
  3721  011A                     	;# 
  3722  011A                     	;# 
  3723  011B                     	;# 
  3724  011B                     	;# 
  3725  011B                     	;# 
  3726  011B                     	;# 
  3727  011B                     	;# 
  3728  011C                     	;# 
  3729  011C                     	;# 
  3730  011C                     	;# 
  3731  011D                     	;# 
  3732  011D                     	;# 
  3733  011D                     	;# 
  3734  011E                     	;# 
  3735  011E                     	;# 
  3736  011E                     	;# 
  3737  011F                     	;# 
  3738  011F                     	;# 
  3739  011F                     	;# 
  3740  011F                     	;# 
  3741  011F                     	;# 
  3742  018C                     	;# 
  3743  018D                     	;# 
  3744  018E                     	;# 
  3745  018F                     	;# 
  3746  0190                     	;# 
  3747  0191                     	;# 
  3748  0192                     	;# 
  3749  0196                     	;# 
  3750  0197                     	;# 
  3751  0198                     	;# 
  3752  0199                     	;# 
  3753  019A                     	;# 
  3754  019B                     	;# 
  3755  019C                     	;# 
  3756  020C                     	;# 
  3757  020D                     	;# 
  3758  020E                     	;# 
  3759  020F                     	;# 
  3760  020F                     	;# 
  3761  0210                     	;# 
  3762  0210                     	;# 
  3763  0211                     	;# 
  3764  0211                     	;# 
  3765  0212                     	;# 
  3766  0213                     	;# 
  3767  0214                     	;# 
  3768  0215                     	;# 
  3769  0215                     	;# 
  3770  0216                     	;# 
  3771  0216                     	;# 
  3772  0217                     	;# 
  3773  0217                     	;# 
  3774  0218                     	;# 
  3775  0219                     	;# 
  3776  021A                     	;# 
  3777  021B                     	;# 
  3778  021B                     	;# 
  3779  021C                     	;# 
  3780  021C                     	;# 
  3781  021D                     	;# 
  3782  021D                     	;# 
  3783  021E                     	;# 
  3784  021F                     	;# 
  3785  028C                     	;# 
  3786  028C                     	;# 
  3787  028D                     	;# 
  3788  028D                     	;# 
  3789  028E                     	;# 
  3790  028F                     	;# 
  3791  0290                     	;# 
  3792  0290                     	;# 
  3793  0291                     	;# 
  3794  0292                     	;# 
  3795  0292                     	;# 
  3796  0293                     	;# 
  3797  0293                     	;# 
  3798  0294                     	;# 
  3799  0295                     	;# 
  3800  0296                     	;# 
  3801  0296                     	;# 
  3802  0297                     	;# 
  3803  0298                     	;# 
  3804  0298                     	;# 
  3805  0299                     	;# 
  3806  0299                     	;# 
  3807  029A                     	;# 
  3808  029B                     	;# 
  3809  029C                     	;# 
  3810  029C                     	;# 
  3811  029D                     	;# 
  3812  030C                     	;# 
  3813  030C                     	;# 
  3814  030D                     	;# 
  3815  030E                     	;# 
  3816  030F                     	;# 
  3817  0310                     	;# 
  3818  0310                     	;# 
  3819  0311                     	;# 
  3820  0312                     	;# 
  3821  0313                     	;# 
  3822  0314                     	;# 
  3823  0314                     	;# 
  3824  0315                     	;# 
  3825  0316                     	;# 
  3826  0317                     	;# 
  3827  0318                     	;# 
  3828  0318                     	;# 
  3829  0319                     	;# 
  3830  031A                     	;# 
  3831  031B                     	;# 
  3832  031C                     	;# 
  3833  031C                     	;# 
  3834  031D                     	;# 
  3835  031E                     	;# 
  3836  031F                     	;# 
  3837  038C                     	;# 
  3838  038D                     	;# 
  3839  038E                     	;# 
  3840  0390                     	;# 
  3841  0391                     	;# 
  3842  0392                     	;# 
  3843  040C                     	;# 
  3844  040D                     	;# 
  3845  040E                     	;# 
  3846  040F                     	;# 
  3847  0410                     	;# 
  3848  0411                     	;# 
  3849  0416                     	;# 
  3850  0416                     	;# 
  3851  0417                     	;# 
  3852  0418                     	;# 
  3853  0418                     	;# 
  3854  0419                     	;# 
  3855  041A                     	;# 
  3856  041A                     	;# 
  3857  041B                     	;# 
  3858  041C                     	;# 
  3859  041C                     	;# 
  3860  041D                     	;# 
  3861  041E                     	;# 
  3862  041F                     	;# 
  3863  048C                     	;# 
  3864  048C                     	;# 
  3865  048D                     	;# 
  3866  048E                     	;# 
  3867  048F                     	;# 
  3868  048F                     	;# 
  3869  0490                     	;# 
  3870  0491                     	;# 
  3871  0492                     	;# 
  3872  0492                     	;# 
  3873  0493                     	;# 
  3874  0494                     	;# 
  3875  0495                     	;# 
  3876  0495                     	;# 
  3877  0496                     	;# 
  3878  0497                     	;# 
  3879  0498                     	;# 
  3880  0499                     	;# 
  3881  049A                     	;# 
  3882  049B                     	;# 
  3883  049C                     	;# 
  3884  049D                     	;# 
  3885  050C                     	;# 
  3886  050C                     	;# 
  3887  050D                     	;# 
  3888  050E                     	;# 
  3889  050F                     	;# 
  3890  050F                     	;# 
  3891  0510                     	;# 
  3892  0511                     	;# 
  3893  0512                     	;# 
  3894  0512                     	;# 
  3895  0513                     	;# 
  3896  0514                     	;# 
  3897  0515                     	;# 
  3898  0515                     	;# 
  3899  0516                     	;# 
  3900  0517                     	;# 
  3901  0518                     	;# 
  3902  0519                     	;# 
  3903  051A                     	;# 
  3904  051B                     	;# 
  3905  051C                     	;# 
  3906  051D                     	;# 
  3907  058C                     	;# 
  3908  058C                     	;# 
  3909  058D                     	;# 
  3910  058E                     	;# 
  3911  058F                     	;# 
  3912  058F                     	;# 
  3913  0590                     	;# 
  3914  0591                     	;# 
  3915  0592                     	;# 
  3916  0593                     	;# 
  3917  060C                     	;# 
  3918  060D                     	;# 
  3919  060E                     	;# 
  3920  060F                     	;# 
  3921  0610                     	;# 
  3922  0611                     	;# 
  3923  0612                     	;# 
  3924  0613                     	;# 
  3925  0614                     	;# 
  3926  0616                     	;# 
  3927  0617                     	;# 
  3928  0618                     	;# 
  3929  0619                     	;# 
  3930  061A                     	;# 
  3931  061B                     	;# 
  3932  061C                     	;# 
  3933  061D                     	;# 
  3934  061E                     	;# 
  3935  068C                     	;# 
  3936  068D                     	;# 
  3937  068E                     	;# 
  3938  068F                     	;# 
  3939  0690                     	;# 
  3940  0691                     	;# 
  3941  0692                     	;# 
  3942  0693                     	;# 
  3943  0694                     	;# 
  3944  070C                     	;# 
  3945  070D                     	;# 
  3946  070E                     	;# 
  3947  070F                     	;# 
  3948  0710                     	;# 
  3949  0711                     	;# 
  3950  0712                     	;# 
  3951  0713                     	;# 
  3952  0714                     	;# 
  3953  0716                     	;# 
  3954  0717                     	;# 
  3955  0718                     	;# 
  3956  0719                     	;# 
  3957  071A                     	;# 
  3958  071B                     	;# 
  3959  071C                     	;# 
  3960  071D                     	;# 
  3961  071E                     	;# 
  3962  0796                     	;# 
  3963  0797                     	;# 
  3964  0798                     	;# 
  3965  0799                     	;# 
  3966  079A                     	;# 
  3967  079B                     	;# 
  3968  080C                     	;# 
  3969  080D                     	;# 
  3970  080E                     	;# 
  3971  080F                     	;# 
  3972  0810                     	;# 
  3973  0811                     	;# 
  3974  0812                     	;# 
  3975  0813                     	;# 
  3976  0814                     	;# 
  3977  081A                     	;# 
  3978  081B                     	;# 
  3979  081C                     	;# 
  3980  081D                     	;# 
  3981  081E                     	;# 
  3982  081F                     	;# 
  3983  088C                     	;# 
  3984  088D                     	;# 
  3985  088E                     	;# 
  3986  088F                     	;# 
  3987  0890                     	;# 
  3988  0891                     	;# 
  3989  0892                     	;# 
  3990  0893                     	;# 
  3991  0895                     	;# 
  3992  0896                     	;# 
  3993  0897                     	;# 
  3994  0898                     	;# 
  3995  0899                     	;# 
  3996  089A                     	;# 
  3997  089B                     	;# 
  3998  090C                     	;# 
  3999  090E                     	;# 
  4000  090F                     	;# 
  4001  091F                     	;# 
  4002  091F                     	;# 
  4003  098F                     	;# 
  4004  098F                     	;# 
  4005  0990                     	;# 
  4006  0991                     	;# 
  4007  0992                     	;# 
  4008  0993                     	;# 
  4009  0994                     	;# 
  4010  0995                     	;# 
  4011  0996                     	;# 
  4012  0997                     	;# 
  4013  0E0F                     	;# 
  4014  0E10                     	;# 
  4015  0E11                     	;# 
  4016  0E12                     	;# 
  4017  0E13                     	;# 
  4018  0E14                     	;# 
  4019  0E15                     	;# 
  4020  0E16                     	;# 
  4021  0E17                     	;# 
  4022  0E18                     	;# 
  4023  0E19                     	;# 
  4024  0E1A                     	;# 
  4025  0E1B                     	;# 
  4026  0E1C                     	;# 
  4027  0E1D                     	;# 
  4028  0E1E                     	;# 
  4029  0E1F                     	;# 
  4030  0E20                     	;# 
  4031  0E21                     	;# 
  4032  0E22                     	;# 
  4033  0E23                     	;# 
  4034  0E24                     	;# 
  4035  0E25                     	;# 
  4036  0E26                     	;# 
  4037  0E27                     	;# 
  4038  0E28                     	;# 
  4039  0E29                     	;# 
  4040  0E2A                     	;# 
  4041  0E2B                     	;# 
  4042  0E2C                     	;# 
  4043  0E2D                     	;# 
  4044  0E2E                     	;# 
  4045  0E2F                     	;# 
  4046  0E30                     	;# 
  4047  0E31                     	;# 
  4048  0E32                     	;# 
  4049  0E33                     	;# 
  4050  0E34                     	;# 
  4051  0E35                     	;# 
  4052  0E36                     	;# 
  4053  0E37                     	;# 
  4054  0E8F                     	;# 
  4055  0E90                     	;# 
  4056  0E91                     	;# 
  4057  0E92                     	;# 
  4058  0E93                     	;# 
  4059  0E94                     	;# 
  4060  0E95                     	;# 
  4061  0E96                     	;# 
  4062  0E97                     	;# 
  4063  0E9C                     	;# 
  4064  0E9D                     	;# 
  4065  0E9E                     	;# 
  4066  0EA1                     	;# 
  4067  0EA2                     	;# 
  4068  0EA3                     	;# 
  4069  0EA4                     	;# 
  4070  0EA5                     	;# 
  4071  0EA9                     	;# 
  4072  0EAA                     	;# 
  4073  0EAB                     	;# 
  4074  0EAC                     	;# 
  4075  0EB1                     	;# 
  4076  0EB2                     	;# 
  4077  0EB3                     	;# 
  4078  0EB8                     	;# 
  4079  0EB9                     	;# 
  4080  0EBA                     	;# 
  4081  0EBB                     	;# 
  4082  0EBC                     	;# 
  4083  0EBD                     	;# 
  4084  0EBE                     	;# 
  4085  0EC3                     	;# 
  4086  0EC5                     	;# 
  4087  0EC6                     	;# 
  4088  0EC7                     	;# 
  4089  0EC8                     	;# 
  4090  0EC9                     	;# 
  4091  0ECA                     	;# 
  4092  0ECB                     	;# 
  4093  0ECC                     	;# 
  4094  0F10                     	;# 
  4095  0F11                     	;# 
  4096  0F12                     	;# 
  4097  0F13                     	;# 
  4098  0F14                     	;# 
  4099  0F15                     	;# 
  4100  0F16                     	;# 
  4101  0F17                     	;# 
  4102  0F18                     	;# 
  4103  0F19                     	;# 
  4104  0F1A                     	;# 
  4105  0F1B                     	;# 
  4106  0F1C                     	;# 
  4107  0F1D                     	;# 
  4108  0F1E                     	;# 
  4109  0F1F                     	;# 
  4110  0F20                     	;# 
  4111  0F21                     	;# 
  4112  0F22                     	;# 
  4113  0F23                     	;# 
  4114  0F24                     	;# 
  4115  0F25                     	;# 
  4116  0F26                     	;# 
  4117  0F27                     	;# 
  4118  0F38                     	;# 
  4119  0F39                     	;# 
  4120  0F3A                     	;# 
  4121  0F3B                     	;# 
  4122  0F3C                     	;# 
  4123  0F3D                     	;# 
  4124  0F3E                     	;# 
  4125  0F3F                     	;# 
  4126  0F40                     	;# 
  4127  0F41                     	;# 
  4128  0F43                     	;# 
  4129  0F44                     	;# 
  4130  0F45                     	;# 
  4131  0F46                     	;# 
  4132  0F47                     	;# 
  4133  0F48                     	;# 
  4134  0F49                     	;# 
  4135  0F4A                     	;# 
  4136  0F4B                     	;# 
  4137  0F4C                     	;# 
  4138  0F4E                     	;# 
  4139  0F4F                     	;# 
  4140  0F50                     	;# 
  4141  0F51                     	;# 
  4142  0F52                     	;# 
  4143  0F53                     	;# 
  4144  0F54                     	;# 
  4145  0F55                     	;# 
  4146  0F56                     	;# 
  4147  0F57                     	;# 
  4148  0F65                     	;# 
  4149  0F68                     	;# 
  4150  0F69                     	;# 
  4151  0F6A                     	;# 
  4152  0F6B                     	;# 
  4153  0FE4                     	;# 
  4154  0FE5                     	;# 
  4155  0FE6                     	;# 
  4156  0FE7                     	;# 
  4157  0FE8                     	;# 
  4158  0FE9                     	;# 
  4159  0FEA                     	;# 
  4160  0FEB                     	;# 
  4161  0FED                     	;# 
  4162  0FEE                     	;# 
  4163  0FEF                     	;_samples
  4164                           
  4165                           	psect	idataBANK1
  4166  15C4                     __pidataBANK1:	
  4167                           
  4168                           ;initializer for _channels
  4169  15C4  3401               	retlw	1
  4170  15C5  3400               	retlw	0
  4171  15C6  3403               	retlw	3
  4172  15C7  3400               	retlw	0
  4173  15C8  3404               	retlw	4
  4174  15C9  3400               	retlw	0
  4175  15CA  3405               	retlw	5
  4176  15CB  3400               	retlw	0
  4177  15CC  3409               	retlw	9
  4178  15CD  3400               	retlw	0
  4179  15CE  340B               	retlw	11
  4180  15CF  3400               	retlw	0
  4181                           
  4182                           	psect	idataBANK2
  4183  15EC                     __pidataBANK2:	
  4184                           
  4185                           ;initializer for ___cgram
  4186  15EC  340C               	retlw	12
  4187  15ED  3412               	retlw	18
  4188  15EE  3412               	retlw	18
  4189  15EF  340C               	retlw	12
  4190  15F0  3400               	retlw	0
  4191  15F1  3400               	retlw	0
  4192  15F2  3400               	retlw	0
  4193  15F3  3400               	retlw	0
  4194  15F4  3408               	retlw	8
  4195  15F5  3404               	retlw	4
  4196  15F6  3402               	retlw	2
  4197  15F7  341F               	retlw	31
  4198  15F8  3402               	retlw	2
  4199  15F9  3404               	retlw	4
  4200  15FA  3408               	retlw	8
  4201  15FB  3400               	retlw	0
  4202                           
  4203                           	psect	stringtext
  4204  1000                     __pstringtext:	
  4205  1000                     log@coeff:	
  4206  1000  3400               	retlw	0
  4207  1001  3400               	retlw	0
  4208  1002  3400               	retlw	0
  4209  1003  3400               	retlw	0
  4210  1004  3480               	retlw	128
  4211  1005  343F               	retlw	63
  4212  1006  34F0               	retlw	240
  4213  1007  34FF               	retlw	255
  4214  1008  34BE               	retlw	190
  4215  1009  34E2               	retlw	226
  4216  100A  34A9               	retlw	169
  4217  100B  343E               	retlw	62
  4218  100C  3483               	retlw	131
  4219  100D  3476               	retlw	118
  4220  100E  34BE               	retlw	190
  4221  100F  34AE               	retlw	174
  4222  1010  342B               	retlw	43
  4223  1011  343E               	retlw	62
  4224  1012  343C               	retlw	60
  4225  1013  34C3               	retlw	195
  4226  1014  34BD               	retlw	189
  4227  1015  34D2               	retlw	210
  4228  1016  3413               	retlw	19
  4229  1017  343D               	retlw	61
  4230  1018  3478               	retlw	120
  4231  1019  34D3               	retlw	211
  4232  101A  34BB               	retlw	187
  4233  101B                     __end_oflog@coeff:	
  4234  0016                     _LATA	set	22
  4235  0017                     _LATB	set	23
  4236  0018                     _LATC	set	24
  4237  0011                     _TRISA	set	17
  4238  0012                     _TRISB	set	18
  4239  0013                     _TRISC	set	19
  4240  005F                     _GIE	set	95
  4241  0060                     _RA0	set	96
  4242  0062                     _RA2	set	98
  4243  0066                     _RA6	set	102
  4244  0067                     _RA7	set	103
  4245  0070                     _RC0	set	112
  4246  0071                     _RC1	set	113
  4247  009D                     _ADACQ	set	157
  4248  0099                     _ADACT	set	153
  4249  009B                     _ADCAP	set	155
  4250  0098                     _ADCLK	set	152
  4251  0093                     _ADCON0	set	147
  4252  0093                     _ADCON0bits	set	147
  4253  0094                     _ADCON1	set	148
  4254  0095                     _ADCON2	set	149
  4255  0096                     _ADCON3	set	150
  4256  009E                     _ADPCH	set	158
  4257  009C                     _ADPRE	set	156
  4258  009A                     _ADREF	set	154
  4259  008D                     _ADRESH	set	141
  4260  008C                     _ADRESL	set	140
  4261  0097                     _ADSTAT	set	151
  4262  010F                     _ADLTHH	set	271
  4263  010E                     _ADLTHL	set	270
  4264  010D                     _ADRPT	set	269
  4265  0113                     _ADSTPTH	set	275
  4266  0112                     _ADSTPTL	set	274
  4267  0111                     _ADUTHH	set	273
  4268  0110                     _ADUTHL	set	272
  4269  021F                     _CCPTMRS1bits	set	543
  4270  0290                     _T2CLKCON	set	656
  4271  028E                     _T2CON	set	654
  4272  028E                     _T2CONbits	set	654
  4273  028F                     _T2HLT	set	655
  4274  028D                     _T2PR	set	653
  4275  0291                     _T2RST	set	657
  4276  028C                     _T2TMR	set	652
  4277  038E                     _PWM6CON	set	910
  4278  038D                     _PWM6DCH	set	909
  4279  038C                     _PWM6DCL	set	908
  4280  0716                     _PIE0bits	set	1814
  4281  0710                     _PIR4bits	set	1808
  4282  088D                     _OSCCON1	set	2189
  4283  088F                     _OSCCON3	set	2191
  4284  0891                     _OSCEN	set	2193
  4285  0893                     _OSCFRQ	set	2195
  4286  0892                     _OSCTUNE	set	2194
  4287  090C                     _FVRCON	set	2316
  4288  0E8F                     _PPSLOCK	set	3727
  4289  0E8F                     _PPSLOCKbits	set	3727
  4290  0F38                     _ANSELA	set	3896
  4291  0F43                     _ANSELB	set	3907
  4292  0F4E                     _ANSELC	set	3918
  4293  0F22                     _RC2PPS	set	3874
  4294  0F39                     _WPUA	set	3897
  4295  0F44                     _WPUB	set	3908
  4296  0F4F                     _WPUC	set	3919
  4297  0F65                     _WPUE	set	3941
  4298  101B                     STR_28:	
  4299  101B  3466               	retlw	102	;'f'
  4300  101C  346F               	retlw	111	;'o'
  4301  101D  3472               	retlw	114	;'r'
  4302  101E  3420               	retlw	32	;' '
  4303  101F  3455               	retlw	85	;'U'
  4304  1020  3473               	retlw	115	;'s'
  4305  1021  3465               	retlw	101	;'e'
  4306  1022  3472               	retlw	114	;'r'
  4307  1023  3420               	retlw	32	;' '
  4308  1024  3444               	retlw	68	;'D'
  4309  1025  3469               	retlw	105	;'i'
  4310  1026  3473               	retlw	115	;'s'
  4311  1027  3470               	retlw	112	;'p'
  4312  1028  346C               	retlw	108	;'l'
  4313  1029  3461               	retlw	97	;'a'
  4314  102A  3479               	retlw	121	;'y'
  4315  102B  3400               	retlw	0
  4316  102C                     STR_27:	
  4317  102C  3459               	retlw	89	;'Y'
  4318  102D  346F               	retlw	111	;'o'
  4319  102E  3475               	retlw	117	;'u'
  4320  102F  3420               	retlw	32	;' '
  4321  1030  3443               	retlw	67	;'C'
  4322  1031  3468               	retlw	104	;'h'
  4323  1032  346F               	retlw	111	;'o'
  4324  1033  3473               	retlw	115	;'s'
  4325  1034  3465               	retlw	101	;'e'
  4326  1035  3420               	retlw	32	;' '
  4327  1036  3400               	retlw	0
  4328  1037                     STR_33:	
  4329  1037  3442               	retlw	66	;'B'
  4330  1038  3461               	retlw	97	;'a'
  4331  1039  3463               	retlw	99	;'c'
  4332  103A  346B               	retlw	107	;'k'
  4333  103B  344C               	retlw	76	;'L'
  4334  103C  3469               	retlw	105	;'i'
  4335  103D  3467               	retlw	103	;'g'
  4336  103E  3468               	retlw	104	;'h'
  4337  103F  3474               	retlw	116	;'t'
  4338  1040  343A               	retlw	58	;':'
  4339  1041  3400               	retlw	0
  4340  1042                     STR_31:	
  4341  1042  3420               	retlw	32	;' '
  4342  1043  3443               	retlw	67	;'C'
  4343  1044  3468               	retlw	104	;'h'
  4344  1045  346F               	retlw	111	;'o'
  4345  1046  3473               	retlw	115	;'s'
  4346  1047  3465               	retlw	101	;'e'
  4347  1048  346E               	retlw	110	;'n'
  4348  1049  3400               	retlw	0
  4349  104A                     STR_36:	
  4350  104A  3453               	retlw	83	;'S'
  4351  104B  346F               	retlw	111	;'o'
  4352  104C  346C               	retlw	108	;'l'
  4353  104D  3461               	retlw	97	;'a'
  4354  104E  3472               	retlw	114	;'r'
  4355  104F  3400               	retlw	0
  4356  1050                     STR_38:	
  4357  1050  3450               	retlw	80	;'P'
  4358  1051  346F               	retlw	111	;'o'
  4359  1052  346F               	retlw	111	;'o'
  4360  1053  346C               	retlw	108	;'l'
  4361  1054  3400               	retlw	0
  4362  1055                     STR_37:	
  4363  1055  344F               	retlw	79	;'O'
  4364  1056  3475               	retlw	117	;'u'
  4365  1057  3474               	retlw	116	;'t'
  4366  1058  3400               	retlw	0
  4367  1059                     STR_35:	
  4368  1059  3449               	retlw	73	;'I'
  4369  105A  346E               	retlw	110	;'n'
  4370  105B  3400               	retlw	0
  4371  105C                     STR_26:	
  4372  105C  3421               	retlw	33	;'!'
  4373  105D  3400               	retlw	0
  4374  105E                     STR_20:	
  4375  105E  3426               	retlw	38	;'&'
  4376  105F  3400               	retlw	0
  4377  1060                     STR_12:	
  4378  1060  342C               	retlw	44	;','
  4379  1061  3400               	retlw	0
  4380  1062                     STR_1:	
  4381  1062  3441               	retlw	65	;'A'
  4382  1063  3400               	retlw	0
  4383  1064                     STR_7:	
  4384  1064  3444               	retlw	68	;'D'
  4385  1065  3400               	retlw	0
  4386  1066                     STR_18:	
  4387  1066  3445               	retlw	69	;'E'
  4388  1067  3400               	retlw	0
  4389  1068                     STR_4:	
  4390  1068  3448               	retlw	72	;'H'
  4391  1069  3400               	retlw	0
  4392  106A                     STR_10:	
  4393  106A  3449               	retlw	73	;'I'
  4394  106B  3400               	retlw	0
  4395  106C                     STR_22:	
  4396  106C  344B               	retlw	75	;'K'
  4397  106D  3400               	retlw	0
  4398  106E                     STR_2:	
  4399  106E  344C               	retlw	76	;'L'
  4400  106F  3400               	retlw	0
  4401  1070                     STR_3:	
  4402  1070  344F               	retlw	79	;'O'
  4403  1071  3400               	retlw	0
  4404  1072                     STR_15:	
  4405  1072  3450               	retlw	80	;'P'
  4406  1073  3400               	retlw	0
  4407  1074                     STR_13:	
  4408  1074  3453               	retlw	83	;'S'
  4409  1075  3400               	retlw	0
  4410  1076                     STR_9:	
  4411  1076  3456               	retlw	86	;'V'
  4412  1077  3400               	retlw	0
  4413  1035                     
  4414                           ; #config settings
  4415  0000                     
  4416                           	psect	cinit
  4417  07BD                     start_initialization:	
  4418  07BD                     __initialization:		;BIGRAM
  4419                           
  4420                           ; Initialize objects allocated to BANK1
  4421  07BD  30C4               	movlw	low __pidataBANK1
  4422  07BE  0084               	movwf	4
  4423  07BF  3095               	movlw	(high __pidataBANK1)| (0+128)
  4424  07C0  0085               	movwf	5
  4425  07C1  30DD               	movlw	low __pdataBANK1
  4426  07C2  0086               	movwf	6
  4427  07C3  3000               	movlw	high __pdataBANK1
  4428  07C4  0087               	movwf	7
  4429  07C5  3000               	movlw	0
  4430  07C6  00FF               	movwf	btemp+1
  4431  07C7  300C               	movlw	12
  4432  07C8  3195  25B8  3187   	fcall	init_ram
  4433                           
  4434                           ; Initialize objects allocated to BANK2
  4435  07CB  30EC               	movlw	low __pidataBANK2
  4436  07CC  0084               	movwf	4
  4437  07CD  3095               	movlw	(high __pidataBANK2)| (0+128)
  4438  07CE  0085               	movwf	5
  4439  07CF  3020               	movlw	low __pdataBANK2
  4440  07D0  0086               	movwf	6
  4441  07D1  3001               	movlw	high __pdataBANK2
  4442  07D2  0087               	movwf	7
  4443  07D3  3000               	movlw	0
  4444  07D4  00FF               	movwf	btemp+1
  4445  07D5  3010               	movlw	16
  4446  07D6  3195  25B8  3187   	fcall	init_ram
  4447                           
  4448                           ; Clear objects allocated to BIGRAM
  4449  07D9  3000               	movlw	low (0+8960)
  4450  07DA  0084               	movwf	4
  4451  07DB  3023               	movlw	high (0+8960)
  4452  07DC  0085               	movwf	5
  4453  07DD  30F0               	movlw	240
  4454  07DE  00FE               	movwf	btemp
  4455  07DF  3000               	movlw	0
  4456  07E0  00FF               	movwf	btemp+1
  4457  07E1  3195  25AC  3187   	fcall	clear_ram0
  4458                           
  4459                           ; Clear objects allocated to BANK0
  4460  07E4  01EC               	clrf	__pbssBANK0& (0+127)
  4461  07E5  01ED               	clrf	(__pbssBANK0+1)& (0+127)
  4462  07E6  01EE               	clrf	(__pbssBANK0+2)& (0+127)
  4463  07E7  01EF               	clrf	(__pbssBANK0+3)& (0+127)
  4464                           
  4465                           ; Clear objects allocated to BANK1
  4466  07E8  30C0               	movlw	low __pbssBANK1
  4467  07E9  0084               	movwf	4
  4468  07EA  3000               	movlw	high __pbssBANK1
  4469  07EB  0085               	movwf	5
  4470  07EC  301D               	movlw	29
  4471  07ED  00FE               	movwf	btemp
  4472  07EE  3000               	movlw	0
  4473  07EF  00FF               	movwf	btemp+1
  4474  07F0  3195  25AC  3187   	fcall	clear_ram0
  4475                           
  4476                           ; Clear objects allocated to BANK2
  4477  07F3  3030               	movlw	low __pbssBANK2
  4478  07F4  0084               	movwf	4
  4479  07F5  3001               	movlw	high __pbssBANK2
  4480  07F6  0085               	movwf	5
  4481  07F7  300C               	movlw	12
  4482  07F8  00FE               	movwf	btemp
  4483  07F9  3000               	movlw	0
  4484  07FA  00FF               	movwf	btemp+1
  4485  07FB  3195  25AC         	fcall	clear_ram0
  4486  07FD                     end_of_initialization:	
  4487                           ;End of C runtime variable initialization code
  4488                           
  4489  07FD                     __end_of__initialization:	
  4490  07FD  0020               	movlb	0
  4491  07FE  3181  294B         	ljmp	_main	;jump to C main() function
  4492                           
  4493                           	psect	bssBANK0
  4494  006C                     __pbssBANK0:	
  4495  006C                     _errno:	
  4496  006C                     	ds	2
  4497  006E                     _sampleIndex:	
  4498  006E                     	ds	2
  4499                           
  4500                           	psect	bssBANK1
  4501  00C0                     __pbssBANK1:	
  4502  00C0                     _totals:	
  4503  00C0                     	ds	24
  4504  00D8                     LCD_Write_Int@F13687:	
  4505  00D8                     	ds	5
  4506                           
  4507                           	psect	dataBANK1
  4508  00DD                     __pdataBANK1:	
  4509  00DD                     _channels:	
  4510  00DD                     	ds	12
  4511                           
  4512                           	psect	bssBANK2
  4513  0130                     __pbssBANK2:	
  4514  0130                     main@F13657:	
  4515  0130                     	ds	12
  4516                           
  4517                           	psect	dataBANK2
  4518  0120                     __pdataBANK2:	
  4519  0120                     ___cgram:	
  4520  0120                     	ds	16
  4521                           
  4522                           	psect	inittext
  4523  15B8                     init_ram:	
  4524  15B8  00FE               	movwf	126
  4525  15B9                     initloop:	
  4526  15B9  0012               	moviw fsr0++
  4527  15BA  001E               	movwi fsr1++
  4528  15BB  3001               	movlw	1
  4529  15BC  02FE               	subwf	126,f
  4530  15BD  3000               	movlw	0
  4531  15BE  3BFF               	subwfb	127,f
  4532  15BF  087F               	movf	127,w
  4533  15C0  047E               	iorwf	126,w
  4534  15C1  1903               	btfsc	3,2
  4535  15C2  3400               	retlw	0
  4536  15C3  2DB9               	goto	initloop
  4537                           
  4538                           	psect	clrtext
  4539  15AC                     clear_ram0:	
  4540                           ;	Called with FSR0 containing the base address, and
  4541                           ;	btemp/btemp+1 has the size to clear
  4542                           
  4543  15AC  0064               	clrwdt	;clear the watchdog before getting into this loop
  4544  15AD                     clrloop0:	
  4545  15AD  0180               	clrf	0	;clear RAM location pointed to by FSR
  4546  15AE  3101               	addfsr 0,1
  4547  15AF  3001               	movlw	1
  4548  15B0  02FE               	subwf	126,f
  4549  15B1  3000               	movlw	0
  4550  15B2  3BFF               	subwfb	127,f
  4551  15B3  087F               	movf	127,w
  4552  15B4  047E               	iorwf	126,w
  4553  15B5  1903               	btfsc	3,2
  4554  15B6  3400               	retlw	0	;all done for this memory range, return
  4555  15B7  2DAD               	goto	clrloop0	;have we reached the end yet?
  4556                           
  4557                           	psect	cstackBANK1
  4558  00A0                     __pcstackBANK1:	
  4559  00A0                     _main$989:	
  4560                           
  4561                           ; 3 bytes @ 0x0
  4562  00A0                     	ds	3
  4563  00A3                     main@loop:	
  4564                           
  4565                           ; 1 bytes @ 0x3
  4566  00A3                     	ds	1
  4567  00A4                     main@startDelay:	
  4568                           
  4569                           ; 1 bytes @ 0x4
  4570  00A4                     	ds	1
  4571  00A5                     main@analogs:	
  4572                           
  4573                           ; 12 bytes @ 0x5
  4574  00A5                     	ds	12
  4575  00B1                     main@bCount:	
  4576                           
  4577                           ; 2 bytes @ 0x11
  4578  00B1                     	ds	2
  4579  00B3                     main@displayTemp:	
  4580                           
  4581                           ; 3 bytes @ 0x13
  4582  00B3                     	ds	3
  4583  00B6                     main@displayTemp2:	
  4584                           
  4585                           ; 3 bytes @ 0x16
  4586  00B6                     	ds	3
  4587  00B9                     main@resetDelay:	
  4588                           
  4589                           ; 1 bytes @ 0x19
  4590  00B9                     	ds	1
  4591  00BA                     main@tPadCount:	
  4592                           
  4593                           ; 1 bytes @ 0x1A
  4594  00BA                     	ds	1
  4595  00BB                     main@choice:	
  4596                           
  4597                           ; 1 bytes @ 0x1B
  4598  00BB                     	ds	1
  4599  00BC                     main@C_or_F:	
  4600                           
  4601                           ; 1 bytes @ 0x1C
  4602  00BC                     	ds	1
  4603  00BD                     main@x:	
  4604                           
  4605                           ; 1 bytes @ 0x1D
  4606  00BD                     	ds	1
  4607  00BE                     main@dutyCycle:	
  4608                           
  4609                           ; 2 bytes @ 0x1E
  4610  00BE                     	ds	2
  4611                           
  4612                           	psect	cstackCOMMON
  4613  0070                     __pcstackCOMMON:	
  4614  0070                     ?___ftge:	
  4615  0070                     ?_LCD_Cmd:	
  4616                           ; 1 bit 
  4617                           
  4618  0070                     ?_LCD_Write_Char:	
  4619                           ; 1 bytes @ 0x0
  4620                           
  4621  0070                     ?_OSCILLATOR_Initialize:	
  4622                           ; 1 bytes @ 0x0
  4623                           
  4624  0070                     ??_OSCILLATOR_Initialize:	
  4625                           ; 1 bytes @ 0x0
  4626                           
  4627  0070                     ?_PWM6_Initialize:	
  4628                           ; 1 bytes @ 0x0
  4629                           
  4630  0070                     ??_PWM6_Initialize:	
  4631                           ; 1 bytes @ 0x0
  4632                           
  4633  0070                     ?_TMR2_Initialize:	
  4634                           ; 1 bytes @ 0x0
  4635                           
  4636  0070                     ??_TMR2_Initialize:	
  4637                           ; 1 bytes @ 0x0
  4638                           
  4639  0070                     ?_ADCC_Initialize:	
  4640                           ; 1 bytes @ 0x0
  4641                           
  4642  0070                     ??_ADCC_Initialize:	
  4643                           ; 1 bytes @ 0x0
  4644                           
  4645  0070                     ?_InitCustomChars:	
  4646                           ; 1 bytes @ 0x0
  4647                           
  4648  0070                     ?_LCD_Port:	
  4649                           ; 1 bytes @ 0x0
  4650                           
  4651  0070                     ??_LCD_Port:	
  4652                           ; 1 bytes @ 0x0
  4653                           
  4654  0070                     ?_LCD_Clear:	
  4655                           ; 1 bytes @ 0x0
  4656                           
  4657  0070                     ?_LCD_Init:	
  4658                           ; 1 bytes @ 0x0
  4659                           
  4660  0070                     ?_PIN_MANAGER_Initialize:	
  4661                           ; 1 bytes @ 0x0
  4662                           
  4663  0070                     ??_PIN_MANAGER_Initialize:	
  4664                           ; 1 bytes @ 0x0
  4665                           
  4666  0070                     ?_SYSTEM_Initialize:	
  4667                           ; 1 bytes @ 0x0
  4668                           
  4669  0070                     ?_PWM6_LoadDutyValue:	
  4670                           ; 1 bytes @ 0x0
  4671                           
  4672  0070                     ?_main:	
  4673                           ; 1 bytes @ 0x0
  4674                           
  4675  0070                     ?_ADCRead:	
  4676                           ; 1 bytes @ 0x0
  4677                           
  4678  0070                     ?___wmul:	
  4679                           ; 2 bytes @ 0x0
  4680                           
  4681  0070                     ?___awdiv:	
  4682                           ; 2 bytes @ 0x0
  4683                           
  4684  0070                     ?___awmod:	
  4685                           ; 2 bytes @ 0x0
  4686                           
  4687  0070                     ?___lwdiv:	
  4688                           ; 2 bytes @ 0x0
  4689                           
  4690  0070                     ?___ftpack:	
  4691                           ; 2 bytes @ 0x0
  4692                           
  4693  0070                     ?_frexp:	
  4694                           ; 3 bytes @ 0x0
  4695                           
  4696  0070                     ?___aldiv:	
  4697                           ; 3 bytes @ 0x0
  4698                           
  4699  0070                     ?___fttol:	
  4700                           ; 4 bytes @ 0x0
  4701                           
  4702  0070                     LCD_Port@a:	
  4703                           ; 4 bytes @ 0x0
  4704                           
  4705  0070                     PIN_MANAGER_Initialize@state:	
  4706                           ; 1 bytes @ 0x0
  4707                           
  4708  0070                     PWM6_LoadDutyValue@dutyCycle:	
  4709                           ; 1 bytes @ 0x0
  4710                           
  4711  0070                     ___wmul@multiplier:	
  4712                           ; 2 bytes @ 0x0
  4713                           
  4714  0070                     ___awdiv@divisor:	
  4715                           ; 2 bytes @ 0x0
  4716                           
  4717  0070                     ___awmod@divisor:	
  4718                           ; 2 bytes @ 0x0
  4719                           
  4720  0070                     ___lwdiv@divisor:	
  4721                           ; 2 bytes @ 0x0
  4722                           
  4723  0070                     ___ftpack@arg:	
  4724                           ; 2 bytes @ 0x0
  4725                           
  4726  0070                     ___ftge@ff1:	
  4727                           ; 3 bytes @ 0x0
  4728                           
  4729  0070                     ___fttol@f1:	
  4730                           ; 3 bytes @ 0x0
  4731                           
  4732  0070                     frexp@value:	
  4733                           ; 3 bytes @ 0x0
  4734                           
  4735  0070                     ___aldiv@divisor:	
  4736                           ; 3 bytes @ 0x0
  4737                           
  4738                           
  4739                           ; 4 bytes @ 0x0
  4740  0070                     	ds	1
  4741  0071                     ??_LCD_Cmd:	
  4742  0071                     ??_LCD_Write_Char:	
  4743                           ; 1 bytes @ 0x1
  4744                           
  4745                           
  4746                           ; 1 bytes @ 0x1
  4747  0071                     	ds	1
  4748  0072                     ??_PWM6_LoadDutyValue:	
  4749  0072                     LCD_Write_Char@temp:	
  4750                           ; 1 bytes @ 0x2
  4751                           
  4752  0072                     ___wmul@multiplicand:	
  4753                           ; 1 bytes @ 0x2
  4754                           
  4755  0072                     ___awdiv@dividend:	
  4756                           ; 2 bytes @ 0x2
  4757                           
  4758  0072                     ___awmod@dividend:	
  4759                           ; 2 bytes @ 0x2
  4760                           
  4761  0072                     ___lwdiv@dividend:	
  4762                           ; 2 bytes @ 0x2
  4763                           
  4764                           
  4765                           ; 2 bytes @ 0x2
  4766  0072                     	ds	1
  4767  0073                     ??_ADCRead:	
  4768  0073                     ADCRead@channel:	
  4769                           ; 1 bytes @ 0x3
  4770                           
  4771  0073                     LCD_Cmd@a:	
  4772                           ; 1 bytes @ 0x3
  4773                           
  4774  0073                     LCD_Write_Char@y:	
  4775                           ; 1 bytes @ 0x3
  4776                           
  4777  0073                     ___ftpack@exp:	
  4778                           ; 1 bytes @ 0x3
  4779                           
  4780  0073                     frexp@eptr:	
  4781                           ; 1 bytes @ 0x3
  4782                           
  4783  0073                     ___ftge@ff2:	
  4784                           ; 1 bytes @ 0x3
  4785                           
  4786                           
  4787                           ; 3 bytes @ 0x3
  4788  0073                     	ds	1
  4789  0074                     ??_frexp:	
  4790  0074                     ??_LCD_Clear:	
  4791                           ; 1 bytes @ 0x4
  4792                           
  4793  0074                     ?_LCD_Set_Cursor:	
  4794                           ; 1 bytes @ 0x4
  4795                           
  4796  0074                     ??_LCD_Init:	
  4797                           ; 1 bytes @ 0x4
  4798                           
  4799  0074                     ??___wmul:	
  4800                           ; 1 bytes @ 0x4
  4801                           
  4802  0074                     ??___awdiv:	
  4803                           ; 1 bytes @ 0x4
  4804                           
  4805  0074                     ??___awmod:	
  4806                           ; 1 bytes @ 0x4
  4807                           
  4808  0074                     ??___fttol:	
  4809                           ; 1 bytes @ 0x4
  4810                           
  4811  0074                     ??___lwdiv:	
  4812                           ; 1 bytes @ 0x4
  4813                           
  4814  0074                     LCD_Set_Cursor@y:	
  4815                           ; 1 bytes @ 0x4
  4816                           
  4817  0074                     LCD_Write_Char@a:	
  4818                           ; 1 bytes @ 0x4
  4819                           
  4820  0074                     ___ftpack@sign:	
  4821                           ; 1 bytes @ 0x4
  4822                           
  4823  0074                     ___wmul@product:	
  4824                           ; 1 bytes @ 0x4
  4825                           
  4826  0074                     ___aldiv@dividend:	
  4827                           ; 2 bytes @ 0x4
  4828                           
  4829                           
  4830                           ; 4 bytes @ 0x4
  4831  0074                     	ds	1
  4832  0075                     ??___ftpack:	
  4833  0075                     ??_InitCustomChars:	
  4834                           ; 1 bytes @ 0x5
  4835                           
  4836  0075                     ??_LCD_Set_Cursor:	
  4837                           ; 1 bytes @ 0x5
  4838                           
  4839  0075                     ?_LCD_Write_String:	
  4840                           ; 1 bytes @ 0x5
  4841                           
  4842  0075                     ___awdiv@counter:	
  4843                           ; 1 bytes @ 0x5
  4844                           
  4845  0075                     ___awmod@counter:	
  4846                           ; 1 bytes @ 0x5
  4847                           
  4848  0075                     LCD_Write_String@a:	
  4849                           ; 1 bytes @ 0x5
  4850                           
  4851  0075                     ___lwdiv@quotient:	
  4852                           ; 2 bytes @ 0x5
  4853                           
  4854                           
  4855                           ; 2 bytes @ 0x5
  4856  0075                     	ds	1
  4857  0076                     ??___ftge:	
  4858  0076                     InitCustomChars@i:	
  4859                           ; 1 bytes @ 0x6
  4860                           
  4861  0076                     ___awdiv@sign:	
  4862                           ; 1 bytes @ 0x6
  4863                           
  4864  0076                     ___awmod@sign:	
  4865                           ; 1 bytes @ 0x6
  4866                           
  4867                           
  4868                           ; 1 bytes @ 0x6
  4869  0076                     	ds	1
  4870  0077                     ??_LCD_Write_String:	
  4871  0077                     LCD_Set_Cursor@x:	
  4872                           ; 1 bytes @ 0x7
  4873                           
  4874  0077                     LCD_Init@style:	
  4875                           ; 1 bytes @ 0x7
  4876                           
  4877  0077                     ___lwdiv@counter:	
  4878                           ; 1 bytes @ 0x7
  4879                           
  4880  0077                     ___awdiv@quotient:	
  4881                           ; 1 bytes @ 0x7
  4882                           
  4883                           
  4884                           ; 2 bytes @ 0x7
  4885  0077                     	ds	1
  4886  0078                     ??_SYSTEM_Initialize:	
  4887  0078                     ??___aldiv:	
  4888                           ; 1 bytes @ 0x8
  4889                           
  4890  0078                     ?___awtoft:	
  4891                           ; 1 bytes @ 0x8
  4892                           
  4893  0078                     LCD_Set_Cursor@z:	
  4894                           ; 3 bytes @ 0x8
  4895                           
  4896  0078                     ___fttol@sign1:	
  4897                           ; 1 bytes @ 0x8
  4898                           
  4899  0078                     LCD_Write_String@i:	
  4900                           ; 1 bytes @ 0x8
  4901                           
  4902  0078                     ___awtoft@c:	
  4903                           ; 2 bytes @ 0x8
  4904                           
  4905                           
  4906                           ; 2 bytes @ 0x8
  4907  0078                     	ds	1
  4908  0079                     LCD_Set_Cursor@w:	
  4909  0079                     readAnalog@analog_channel:	
  4910                           ; 1 bytes @ 0x9
  4911                           
  4912  0079                     ___fttol@lval:	
  4913                           ; 2 bytes @ 0x9
  4914                           
  4915                           
  4916                           ; 4 bytes @ 0x9
  4917  0079                     	ds	1
  4918  007A                     LCD_Set_Cursor@temp:	
  4919                           
  4920                           ; 1 bytes @ 0xA
  4921  007A                     	ds	1
  4922  007B                     ??___awtoft:	
  4923  007B                     readAnalog@value:	
  4924                           ; 1 bytes @ 0xB
  4925                           
  4926                           
  4927                           ; 2 bytes @ 0xB
  4928  007B                     	ds	2
  4929  007D                     ___awtoft@sign:	
  4930  007D                     ___fttol@exp1:	
  4931                           ; 1 bytes @ 0xD
  4932                           
  4933                           
  4934                           ; 1 bytes @ 0xD
  4935  007D                     	ds	1
  4936  007E                     ??_eval_poly:	
  4937  007E                     ??_tempCalc:	
  4938                           ; 1 bytes @ 0xE
  4939                           
  4940  007E                     ??___ftsub:	
  4941                           ; 1 bytes @ 0xE
  4942                           
  4943                           
  4944                           	psect	cstackBANK0
  4945  0020                     __pcstackBANK0:	
  4946                           ; 1 bytes @ 0xE
  4947                           
  4948  0020                     ?_LCD_Write_Int:	
  4949  0020                     ?___ftmul:	
  4950                           ; 1 bytes @ 0x0
  4951                           
  4952  0020                     ___aldiv@counter:	
  4953                           ; 3 bytes @ 0x0
  4954                           
  4955  0020                     LCD_Write_Int@value:	
  4956                           ; 1 bytes @ 0x0
  4957                           
  4958  0020                     ___ftmul@f1:	
  4959                           ; 2 bytes @ 0x0
  4960                           
  4961                           
  4962                           ; 3 bytes @ 0x0
  4963  0020                     	ds	1
  4964  0021                     ___aldiv@sign:	
  4965                           
  4966                           ; 1 bytes @ 0x1
  4967  0021                     	ds	1
  4968  0022                     LCD_Write_Int@fieldLength:	
  4969  0022                     ___aldiv@quotient:	
  4970                           ; 1 bytes @ 0x2
  4971                           
  4972                           
  4973                           ; 4 bytes @ 0x2
  4974  0022                     	ds	1
  4975  0023                     LCD_Write_Int@numPlaces:	
  4976  0023                     ___ftmul@f2:	
  4977                           ; 1 bytes @ 0x3
  4978                           
  4979                           
  4980                           ; 3 bytes @ 0x3
  4981  0023                     	ds	1
  4982  0024                     LCD_Write_Int@sign:	
  4983                           
  4984                           ; 1 bytes @ 0x4
  4985  0024                     	ds	1
  4986  0025                     ??_LCD_Write_Int:	
  4987                           
  4988                           ; 1 bytes @ 0x5
  4989  0025                     	ds	1
  4990  0026                     ??___ftmul:	
  4991  0026                     ?_readAnalog:	
  4992                           ; 1 bytes @ 0x6
  4993                           
  4994  0026                     readAnalog@channel:	
  4995                           ; 2 bytes @ 0x6
  4996                           
  4997                           
  4998                           ; 2 bytes @ 0x6
  4999  0026                     	ds	2
  5000  0028                     ??_readAnalog:	
  5001                           
  5002                           ; 1 bytes @ 0x8
  5003  0028                     	ds	2
  5004  002A                     ___ftmul@exp:	
  5005  002A                     LCD_Write_Int@str:	
  5006                           ; 1 bytes @ 0xA
  5007                           
  5008                           
  5009                           ; 5 bytes @ 0xA
  5010  002A                     	ds	1
  5011  002B                     ___ftmul@f3_as_product:	
  5012                           
  5013                           ; 3 bytes @ 0xB
  5014  002B                     	ds	3
  5015  002E                     ___ftmul@cntr:	
  5016                           
  5017                           ; 1 bytes @ 0xE
  5018  002E                     	ds	1
  5019  002F                     ___ftmul@sign:	
  5020  002F                     LCD_Write_Int@j:	
  5021                           ; 1 bytes @ 0xF
  5022                           
  5023                           
  5024                           ; 2 bytes @ 0xF
  5025  002F                     	ds	1
  5026  0030                     ?___ftdiv:	
  5027  0030                     ___ftdiv@f2:	
  5028                           ; 3 bytes @ 0x10
  5029                           
  5030                           
  5031                           ; 3 bytes @ 0x10
  5032  0030                     	ds	1
  5033  0031                     LCD_Write_Int@i:	
  5034                           
  5035                           ; 2 bytes @ 0x11
  5036  0031                     	ds	2
  5037  0033                     ___ftdiv@f1:	
  5038                           
  5039                           ; 3 bytes @ 0x13
  5040  0033                     	ds	3
  5041  0036                     ??___ftdiv:	
  5042                           
  5043                           ; 1 bytes @ 0x16
  5044  0036                     	ds	4
  5045  003A                     ___ftdiv@cntr:	
  5046                           
  5047                           ; 1 bytes @ 0x1A
  5048  003A                     	ds	1
  5049  003B                     ___ftdiv@f3:	
  5050                           
  5051                           ; 3 bytes @ 0x1B
  5052  003B                     	ds	3
  5053  003E                     ___ftdiv@exp:	
  5054                           
  5055                           ; 1 bytes @ 0x1E
  5056  003E                     	ds	1
  5057  003F                     ___ftdiv@sign:	
  5058                           
  5059                           ; 1 bytes @ 0x1F
  5060  003F                     	ds	1
  5061  0040                     ?___ftadd:	
  5062  0040                     ___ftadd@f1:	
  5063                           ; 3 bytes @ 0x20
  5064                           
  5065                           
  5066                           ; 3 bytes @ 0x20
  5067  0040                     	ds	3
  5068  0043                     ___ftadd@f2:	
  5069                           
  5070                           ; 3 bytes @ 0x23
  5071  0043                     	ds	3
  5072  0046                     ??___ftadd:	
  5073                           
  5074                           ; 1 bytes @ 0x26
  5075  0046                     	ds	4
  5076  004A                     ___ftadd@sign:	
  5077                           
  5078                           ; 1 bytes @ 0x2A
  5079  004A                     	ds	1
  5080  004B                     ___ftadd@exp2:	
  5081                           
  5082                           ; 1 bytes @ 0x2B
  5083  004B                     	ds	1
  5084  004C                     ___ftadd@exp1:	
  5085                           
  5086                           ; 1 bytes @ 0x2C
  5087  004C                     	ds	1
  5088  004D                     ?_eval_poly:	
  5089  004D                     ?___ftsub:	
  5090                           ; 3 bytes @ 0x2D
  5091                           
  5092  004D                     ___ftsub@f2:	
  5093                           ; 3 bytes @ 0x2D
  5094                           
  5095  004D                     eval_poly@x:	
  5096                           ; 3 bytes @ 0x2D
  5097                           
  5098                           
  5099                           ; 3 bytes @ 0x2D
  5100  004D                     	ds	3
  5101  0050                     eval_poly@d:	
  5102  0050                     ___ftsub@f1:	
  5103                           ; 2 bytes @ 0x30
  5104                           
  5105                           
  5106                           ; 3 bytes @ 0x30
  5107  0050                     	ds	2
  5108  0052                     eval_poly@n:	
  5109                           
  5110                           ; 2 bytes @ 0x32
  5111  0052                     	ds	2
  5112  0054                     eval_poly@res:	
  5113                           
  5114                           ; 3 bytes @ 0x34
  5115  0054                     	ds	3
  5116  0057                     ?_log:	
  5117  0057                     log@x:	
  5118                           ; 3 bytes @ 0x37
  5119                           
  5120                           
  5121                           ; 3 bytes @ 0x37
  5122  0057                     	ds	3
  5123  005A                     ??_log:	
  5124                           
  5125                           ; 1 bytes @ 0x3A
  5126  005A                     	ds	1
  5127  005B                     log@exponent:	
  5128                           
  5129                           ; 2 bytes @ 0x3B
  5130  005B                     	ds	2
  5131  005D                     ?_tempCalc:	
  5132  005D                     tempCalc@analogValue:	
  5133                           ; 3 bytes @ 0x3D
  5134                           
  5135                           
  5136                           ; 2 bytes @ 0x3D
  5137  005D                     	ds	3
  5138  0060                     tempCalc@R:	
  5139                           
  5140                           ; 3 bytes @ 0x40
  5141  0060                     	ds	3
  5142  0063                     _tempCalc$988:	
  5143                           
  5144                           ; 3 bytes @ 0x43
  5145  0063                     	ds	3
  5146  0066                     tempCalc@steinhart:	
  5147                           
  5148                           ; 3 bytes @ 0x46
  5149  0066                     	ds	3
  5150  0069                     ??_main:	
  5151                           
  5152                           ; 1 bytes @ 0x49
  5153  0069                     	ds	3
  5154                           
  5155                           	psect	maintext
  5156  014B                     __pmaintext:	
  5157 ;;
  5158 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  5159 ;;
  5160 ;; *************** function _main *****************
  5161 ;; Defined at:
  5162 ;;		line 15 in file "main.c"
  5163 ;; Parameters:    Size  Location     Type
  5164 ;;		None
  5165 ;; Auto vars:     Size  Location     Type
  5166 ;;  analogs        12    5[BANK1 ] unsigned int [6]
  5167 ;;  displayTemp2    3   22[BANK1 ] float 
  5168 ;;  displayTemp     3   19[BANK1 ] float 
  5169 ;;  dutyCycle       2   30[BANK1 ] unsigned int 
  5170 ;;  bCount          2   17[BANK1 ] unsigned int 
  5171 ;;  x               1   29[BANK1 ] unsigned char 
  5172 ;;  C_or_F          1   28[BANK1 ] unsigned char 
  5173 ;;  choice          1   27[BANK1 ] unsigned char 
  5174 ;;  tPadCount       1   26[BANK1 ] unsigned char 
  5175 ;;  resetDelay      1   25[BANK1 ] unsigned char 
  5176 ;;  startDelay      1    4[BANK1 ] unsigned char 
  5177 ;;  loop            1    3[BANK1 ] unsigned char 
  5178 ;; Return value:  Size  Location     Type
  5179 ;;                  1    wreg      void 
  5180 ;; Registers used:
  5181 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5182 ;; Tracked objects:
  5183 ;;		On entry : B1F/0
  5184 ;;		On exit  : 0/0
  5185 ;;		Unchanged: 0/0
  5186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5188 ;;      Locals:         0       0      32       0       0       0       0       0       0       0       0       0       
      +0       0
  5189 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5190 ;;      Totals:         0       3      32       0       0       0       0       0       0       0       0       0       
      +0       0
  5191 ;;Total ram usage:       35 bytes
  5192 ;; Hardware stack levels required when called:    5
  5193 ;; This function calls:
  5194 ;;		_ADCRead
  5195 ;;		_LCD_Clear
  5196 ;;		_LCD_Set_Cursor
  5197 ;;		_LCD_Write_Char
  5198 ;;		_LCD_Write_Int
  5199 ;;		_LCD_Write_String
  5200 ;;		_PWM6_LoadDutyValue
  5201 ;;		_SYSTEM_Initialize
  5202 ;;		___ftadd
  5203 ;;		___ftdiv
  5204 ;;		___ftmul
  5205 ;;		___fttol
  5206 ;;		___lwdiv
  5207 ;;		_readAnalog
  5208 ;;		_tempCalc
  5209 ;; This function is called by:
  5210 ;;		Startup code after reset
  5211 ;; This function uses a non-reentrant model
  5212 ;;
  5213                           
  5214                           
  5215                           ;psect for function _main
  5216  014B                     _main:	
  5217                           
  5218                           ;main.c: 17: SYSTEM_Initialize();
  5219                           
  5220                           ;incstack = 0
  5221                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5222  014B  3188  202B  3181   	fcall	_SYSTEM_Initialize
  5223                           
  5224                           ;main.c: 19: uint16_t analogs[6] = {0};
  5225  014E  3030               	movlw	low main@F13657
  5226  014F  0086               	movwf	6
  5227  0150  3001               	movlw	high main@F13657
  5228  0151  0087               	movwf	7
  5229  0152  30A5               	movlw	low main@analogs
  5230  0153  0084               	movwf	4
  5231  0154  3000               	movlw	high main@analogs
  5232  0155  0085               	movwf	5
  5233  0156  300C               	movlw	12
  5234  0157  0020               	movlb	0	; select bank0
  5235  0158  00E9               	movwf	??_main
  5236  0159                     u3210:	
  5237  0159  0016               	moviw fsr1++
  5238  015A  001A               	movwi fsr0++
  5239  015B  0BE9               	decfsz	??_main,f
  5240  015C  2959               	goto	u3210
  5241                           
  5242                           ;main.c: 21: float displayTemp, displayTemp2;
  5243                           ;main.c: 25: char x = 0;
  5244  015D  0021               	movlb	1	; select bank1
  5245  015E  01BD               	clrf	main@x^(0+128)
  5246                           
  5247                           ;main.c: 27: char loop = 64;
  5248  015F  3040               	movlw	64
  5249  0160  0020               	movlb	0	; select bank0
  5250  0161  00E9               	movwf	??_main
  5251  0162  0869               	movf	??_main,w
  5252  0163  0021               	movlb	1	; select bank1
  5253  0164  00A3               	movwf	main@loop^(0+128)
  5254                           
  5255                           ;main.c: 29: char choice = 2;
  5256  0165  3002               	movlw	2
  5257  0166  0020               	movlb	0	; select bank0
  5258  0167  00E9               	movwf	??_main
  5259  0168  0869               	movf	??_main,w
  5260  0169  0021               	movlb	1	; select bank1
  5261  016A  00BB               	movwf	main@choice^(0+128)
  5262                           
  5263                           ;main.c: 31: char C_or_F = 1;
  5264  016B  01BC               	clrf	main@C_or_F^(0+128)
  5265  016C  0ABC               	incf	main@C_or_F^(0+128),f
  5266                           
  5267                           ;main.c: 33: unsigned int bCount = 0;
  5268  016D  01B1               	clrf	main@bCount^(0+128)
  5269  016E  01B2               	clrf	(main@bCount+1)^(0+128)
  5270                           
  5271                           ;main.c: 35: unsigned char startDelay= 0;
  5272  016F  01A4               	clrf	main@startDelay^(0+128)
  5273                           
  5274                           ;main.c: 37: unsigned char resetDelay= 0;
  5275  0170  01B9               	clrf	main@resetDelay^(0+128)
  5276                           
  5277                           ;main.c: 39: unsigned char tPadCount = 10;
  5278  0171  300A               	movlw	10
  5279  0172  0020               	movlb	0	; select bank0
  5280  0173  00E9               	movwf	??_main
  5281  0174  0869               	movf	??_main,w
  5282  0175  0021               	movlb	1	; select bank1
  5283  0176  00BA               	movwf	main@tPadCount^(0+128)
  5284                           
  5285                           ;main.c: 42: uint16_t dutyCycle = 1023;
  5286  0177  30FF               	movlw	255
  5287  0178  00BE               	movwf	main@dutyCycle^(0+128)
  5288  0179  3003               	movlw	3
  5289  017A  00BF               	movwf	(main@dutyCycle^(0+128)+1)
  5290                           
  5291                           ;main.c: 44: PWM6_LoadDutyValue(dutyCycle);
  5292  017B  083F               	movf	(main@dutyCycle+1)^(0+128),w
  5293  017C  00F1               	movwf	PWM6_LoadDutyValue@dutyCycle+1
  5294  017D  083E               	movf	main@dutyCycle^(0+128),w
  5295  017E  00F0               	movwf	PWM6_LoadDutyValue@dutyCycle
  5296  017F  3180  2005  3181   	fcall	_PWM6_LoadDutyValue
  5297                           
  5298                           ;main.c: 46: _delay((unsigned long)((300)*(32000000/4000.0)));
  5299  0182  300D               	movlw	13
  5300  0183  0020               	movlb	0	; select bank0
  5301  0184  00EB               	movwf	??_main+2
  5302  0185  302D               	movlw	45
  5303  0186  00EA               	movwf	??_main+1
  5304  0187  30E2               	movlw	226
  5305  0188  00E9               	movwf	??_main
  5306  0189                     u3497:	
  5307  0189  0BE9               	decfsz	??_main,f
  5308  018A  2989               	goto	u3497
  5309  018B  0BEA               	decfsz	??_main+1,f
  5310  018C  2989               	goto	u3497
  5311  018D  0BEB               	decfsz	??_main+2,f
  5312  018E  2989               	goto	u3497
  5313  018F  3200               	nop2
  5314                           
  5315                           ;main.c: 48: LCD_Clear();
  5316  0190  3195  2590  3181   	fcall	_LCD_Clear
  5317                           
  5318                           ;main.c: 50: { LCD_Set_Cursor(2,0); LCD_Write_String("A");};
  5319  0193  01F4               	clrf	LCD_Set_Cursor@y
  5320  0194  3002               	movlw	2
  5321  0195  3197  27C1  3181   	fcall	_LCD_Set_Cursor
  5322  0198  3062               	movlw	low (STR_1| (0+32768))
  5323  0199  00F5               	movwf	LCD_Write_String@a
  5324  019A  3090               	movlw	high (STR_1| (0+32768))
  5325  019B  00F6               	movwf	LCD_Write_String@a+1
  5326  019C  3196  2628  3181   	fcall	_LCD_Write_String
  5327                           
  5328                           ;main.c: 51: _delay((unsigned long)((200)*(32000000/4000.0)));
  5329  019F  3009               	movlw	9
  5330  01A0  0020               	movlb	0	; select bank0
  5331  01A1  00EB               	movwf	??_main+2
  5332  01A2  301E               	movlw	30
  5333  01A3  00EA               	movwf	??_main+1
  5334  01A4  30EB               	movlw	235
  5335  01A5  00E9               	movwf	??_main
  5336  01A6                     u3507:	
  5337  01A6  0BE9               	decfsz	??_main,f
  5338  01A7  29A6               	goto	u3507
  5339  01A8  0BEA               	decfsz	??_main+1,f
  5340  01A9  29A6               	goto	u3507
  5341  01AA  0BEB               	decfsz	??_main+2,f
  5342  01AB  29A6               	goto	u3507
  5343  01AC  0000               	nop
  5344                           
  5345                           ;main.c: 52: LCD_Write_String("L");
  5346  01AD  306E               	movlw	low (STR_2| (0+32768))
  5347  01AE  00F5               	movwf	LCD_Write_String@a
  5348  01AF  3090               	movlw	high (STR_2| (0+32768))
  5349  01B0  00F6               	movwf	LCD_Write_String@a+1
  5350  01B1  3196  2628  3181   	fcall	_LCD_Write_String
  5351                           
  5352                           ;main.c: 53: _delay((unsigned long)((200)*(32000000/4000.0)));
  5353  01B4  3009               	movlw	9
  5354  01B5  0020               	movlb	0	; select bank0
  5355  01B6  00EB               	movwf	??_main+2
  5356  01B7  301E               	movlw	30
  5357  01B8  00EA               	movwf	??_main+1
  5358  01B9  30EB               	movlw	235
  5359  01BA  00E9               	movwf	??_main
  5360  01BB                     u3517:	
  5361  01BB  0BE9               	decfsz	??_main,f
  5362  01BC  29BB               	goto	u3517
  5363  01BD  0BEA               	decfsz	??_main+1,f
  5364  01BE  29BB               	goto	u3517
  5365  01BF  0BEB               	decfsz	??_main+2,f
  5366  01C0  29BB               	goto	u3517
  5367  01C1  0000               	nop
  5368                           
  5369                           ;main.c: 54: LCD_Write_String("O");
  5370  01C2  3070               	movlw	low (STR_3| (0+32768))
  5371  01C3  00F5               	movwf	LCD_Write_String@a
  5372  01C4  3090               	movlw	high (STR_3| (0+32768))
  5373  01C5  00F6               	movwf	LCD_Write_String@a+1
  5374  01C6  3196  2628  3181   	fcall	_LCD_Write_String
  5375                           
  5376                           ;main.c: 55: _delay((unsigned long)((200)*(32000000/4000.0)));
  5377  01C9  3009               	movlw	9
  5378  01CA  0020               	movlb	0	; select bank0
  5379  01CB  00EB               	movwf	??_main+2
  5380  01CC  301E               	movlw	30
  5381  01CD  00EA               	movwf	??_main+1
  5382  01CE  30EB               	movlw	235
  5383  01CF  00E9               	movwf	??_main
  5384  01D0                     u3527:	
  5385  01D0  0BE9               	decfsz	??_main,f
  5386  01D1  29D0               	goto	u3527
  5387  01D2  0BEA               	decfsz	??_main+1,f
  5388  01D3  29D0               	goto	u3527
  5389  01D4  0BEB               	decfsz	??_main+2,f
  5390  01D5  29D0               	goto	u3527
  5391  01D6  0000               	nop
  5392                           
  5393                           ;main.c: 56: LCD_Write_String("H");
  5394  01D7  3068               	movlw	low (STR_4| (0+32768))
  5395  01D8  00F5               	movwf	LCD_Write_String@a
  5396  01D9  3090               	movlw	high (STR_4| (0+32768))
  5397  01DA  00F6               	movwf	LCD_Write_String@a+1
  5398  01DB  3196  2628  3181   	fcall	_LCD_Write_String
  5399                           
  5400                           ;main.c: 57: _delay((unsigned long)((200)*(32000000/4000.0)));
  5401  01DE  3009               	movlw	9
  5402  01DF  0020               	movlb	0	; select bank0
  5403  01E0  00EB               	movwf	??_main+2
  5404  01E1  301E               	movlw	30
  5405  01E2  00EA               	movwf	??_main+1
  5406  01E3  30EB               	movlw	235
  5407  01E4  00E9               	movwf	??_main
  5408  01E5                     u3537:	
  5409  01E5  0BE9               	decfsz	??_main,f
  5410  01E6  29E5               	goto	u3537
  5411  01E7  0BEA               	decfsz	??_main+1,f
  5412  01E8  29E5               	goto	u3537
  5413  01E9  0BEB               	decfsz	??_main+2,f
  5414  01EA  29E5               	goto	u3537
  5415  01EB  0000               	nop
  5416                           
  5417                           ;main.c: 58: LCD_Write_String("A");
  5418  01EC  3062               	movlw	low (STR_1| (0+32768))
  5419  01ED  00F5               	movwf	LCD_Write_String@a
  5420  01EE  3090               	movlw	high (STR_1| (0+32768))
  5421  01EF  00F6               	movwf	LCD_Write_String@a+1
  5422  01F0  3196  2628  3181   	fcall	_LCD_Write_String
  5423                           
  5424                           ;main.c: 59: _delay((unsigned long)((200)*(32000000/4000.0)));
  5425  01F3  3009               	movlw	9
  5426  01F4  0020               	movlb	0	; select bank0
  5427  01F5  00EB               	movwf	??_main+2
  5428  01F6  301E               	movlw	30
  5429  01F7  00EA               	movwf	??_main+1
  5430  01F8  30EB               	movlw	235
  5431  01F9  00E9               	movwf	??_main
  5432  01FA                     u3547:	
  5433  01FA  0BE9               	decfsz	??_main,f
  5434  01FB  29FA               	goto	u3547
  5435  01FC  0BEA               	decfsz	??_main+1,f
  5436  01FD  29FA               	goto	u3547
  5437  01FE  0BEB               	decfsz	??_main+2,f
  5438  01FF  29FA               	goto	u3547
  5439  0200  0000               	nop
  5440                           
  5441                           ;main.c: 60: LCD_Write_String(" ");
  5442  0201  3035               	movlw	low ((STR_27+9)| (0+32768))
  5443  0202  00F5               	movwf	LCD_Write_String@a
  5444  0203  3090               	movlw	high ((STR_27+9)| (0+32768))
  5445  0204  00F6               	movwf	LCD_Write_String@a+1
  5446  0205  3196  2628  3181   	fcall	_LCD_Write_String
  5447                           
  5448                           ;main.c: 61: _delay((unsigned long)((200)*(32000000/4000.0)));
  5449  0208  3009               	movlw	9
  5450  0209  0020               	movlb	0	; select bank0
  5451  020A  00EB               	movwf	??_main+2
  5452  020B  301E               	movlw	30
  5453  020C  00EA               	movwf	??_main+1
  5454  020D  30EB               	movlw	235
  5455  020E  00E9               	movwf	??_main
  5456  020F                     u3557:	
  5457  020F  0BE9               	decfsz	??_main,f
  5458  0210  2A0F               	goto	u3557
  5459  0211  0BEA               	decfsz	??_main+1,f
  5460  0212  2A0F               	goto	u3557
  5461  0213  0BEB               	decfsz	??_main+2,f
  5462  0214  2A0F               	goto	u3557
  5463  0215  0000               	nop
  5464                           
  5465                           ;main.c: 62: LCD_Write_String("D");
  5466  0216  3064               	movlw	low (STR_7| (0+32768))
  5467  0217  00F5               	movwf	LCD_Write_String@a
  5468  0218  3090               	movlw	high (STR_7| (0+32768))
  5469  0219  00F6               	movwf	LCD_Write_String@a+1
  5470  021A  3196  2628  3181   	fcall	_LCD_Write_String
  5471                           
  5472                           ;main.c: 63: _delay((unsigned long)((200)*(32000000/4000.0)));
  5473  021D  3009               	movlw	9
  5474  021E  0020               	movlb	0	; select bank0
  5475  021F  00EB               	movwf	??_main+2
  5476  0220  301E               	movlw	30
  5477  0221  00EA               	movwf	??_main+1
  5478  0222  30EB               	movlw	235
  5479  0223  00E9               	movwf	??_main
  5480  0224                     u3567:	
  5481  0224  0BE9               	decfsz	??_main,f
  5482  0225  2A24               	goto	u3567
  5483  0226  0BEA               	decfsz	??_main+1,f
  5484  0227  2A24               	goto	u3567
  5485  0228  0BEB               	decfsz	??_main+2,f
  5486  0229  2A24               	goto	u3567
  5487  022A  0000               	nop
  5488                           
  5489                           ;main.c: 64: LCD_Write_String("A");
  5490  022B  3062               	movlw	low (STR_1| (0+32768))
  5491  022C  00F5               	movwf	LCD_Write_String@a
  5492  022D  3090               	movlw	high (STR_1| (0+32768))
  5493  022E  00F6               	movwf	LCD_Write_String@a+1
  5494  022F  3196  2628  3181   	fcall	_LCD_Write_String
  5495                           
  5496                           ;main.c: 65: _delay((unsigned long)((200)*(32000000/4000.0)));
  5497  0232  3009               	movlw	9
  5498  0233  0020               	movlb	0	; select bank0
  5499  0234  00EB               	movwf	??_main+2
  5500  0235  301E               	movlw	30
  5501  0236  00EA               	movwf	??_main+1
  5502  0237  30EB               	movlw	235
  5503  0238  00E9               	movwf	??_main
  5504  0239                     u3577:	
  5505  0239  0BE9               	decfsz	??_main,f
  5506  023A  2A39               	goto	u3577
  5507  023B  0BEA               	decfsz	??_main+1,f
  5508  023C  2A39               	goto	u3577
  5509  023D  0BEB               	decfsz	??_main+2,f
  5510  023E  2A39               	goto	u3577
  5511  023F  0000               	nop
  5512                           
  5513                           ;main.c: 66: LCD_Write_String("V");
  5514  0240  3076               	movlw	low (STR_9| (0+32768))
  5515  0241  00F5               	movwf	LCD_Write_String@a
  5516  0242  3090               	movlw	high (STR_9| (0+32768))
  5517  0243  00F6               	movwf	LCD_Write_String@a+1
  5518  0244  3196  2628  3181   	fcall	_LCD_Write_String
  5519                           
  5520                           ;main.c: 67: _delay((unsigned long)((200)*(32000000/4000.0)));
  5521  0247  3009               	movlw	9
  5522  0248  0020               	movlb	0	; select bank0
  5523  0249  00EB               	movwf	??_main+2
  5524  024A  301E               	movlw	30
  5525  024B  00EA               	movwf	??_main+1
  5526  024C  30EB               	movlw	235
  5527  024D  00E9               	movwf	??_main
  5528  024E                     u3587:	
  5529  024E  0BE9               	decfsz	??_main,f
  5530  024F  2A4E               	goto	u3587
  5531  0250  0BEA               	decfsz	??_main+1,f
  5532  0251  2A4E               	goto	u3587
  5533  0252  0BEB               	decfsz	??_main+2,f
  5534  0253  2A4E               	goto	u3587
  5535  0254  0000               	nop
  5536                           
  5537                           ;main.c: 68: LCD_Write_String("I");
  5538  0255  306A               	movlw	low (STR_10| (0+32768))
  5539  0256  00F5               	movwf	LCD_Write_String@a
  5540  0257  3090               	movlw	high (STR_10| (0+32768))
  5541  0258  00F6               	movwf	LCD_Write_String@a+1
  5542  0259  3196  2628  3181   	fcall	_LCD_Write_String
  5543                           
  5544                           ;main.c: 69: _delay((unsigned long)((200)*(32000000/4000.0)));
  5545  025C  3009               	movlw	9
  5546  025D  0020               	movlb	0	; select bank0
  5547  025E  00EB               	movwf	??_main+2
  5548  025F  301E               	movlw	30
  5549  0260  00EA               	movwf	??_main+1
  5550  0261  30EB               	movlw	235
  5551  0262  00E9               	movwf	??_main
  5552  0263                     u3597:	
  5553  0263  0BE9               	decfsz	??_main,f
  5554  0264  2A63               	goto	u3597
  5555  0265  0BEA               	decfsz	??_main+1,f
  5556  0266  2A63               	goto	u3597
  5557  0267  0BEB               	decfsz	??_main+2,f
  5558  0268  2A63               	goto	u3597
  5559  0269  0000               	nop
  5560                           
  5561                           ;main.c: 70: LCD_Write_String("D");
  5562  026A  3064               	movlw	low (STR_7| (0+32768))
  5563  026B  00F5               	movwf	LCD_Write_String@a
  5564  026C  3090               	movlw	high (STR_7| (0+32768))
  5565  026D  00F6               	movwf	LCD_Write_String@a+1
  5566  026E  3196  2628  3181   	fcall	_LCD_Write_String
  5567                           
  5568                           ;main.c: 71: _delay((unsigned long)((200)*(32000000/4000.0)));
  5569  0271  3009               	movlw	9
  5570  0272  0020               	movlb	0	; select bank0
  5571  0273  00EB               	movwf	??_main+2
  5572  0274  301E               	movlw	30
  5573  0275  00EA               	movwf	??_main+1
  5574  0276  30EB               	movlw	235
  5575  0277  00E9               	movwf	??_main
  5576  0278                     u3607:	
  5577  0278  0BE9               	decfsz	??_main,f
  5578  0279  2A78               	goto	u3607
  5579  027A  0BEA               	decfsz	??_main+1,f
  5580  027B  2A78               	goto	u3607
  5581  027C  0BEB               	decfsz	??_main+2,f
  5582  027D  2A78               	goto	u3607
  5583  027E  0000               	nop
  5584                           
  5585                           ;main.c: 72: LCD_Write_String(",");
  5586  027F  3060               	movlw	low (STR_12| (0+32768))
  5587  0280  00F5               	movwf	LCD_Write_String@a
  5588  0281  3090               	movlw	high (STR_12| (0+32768))
  5589  0282  00F6               	movwf	LCD_Write_String@a+1
  5590  0283  3196  2628  3181   	fcall	_LCD_Write_String
  5591                           
  5592                           ;main.c: 73: _delay((unsigned long)((200)*(32000000/4000.0)));
  5593  0286  3009               	movlw	9
  5594  0287  0020               	movlb	0	; select bank0
  5595  0288  00EB               	movwf	??_main+2
  5596  0289  301E               	movlw	30
  5597  028A  00EA               	movwf	??_main+1
  5598  028B  30EB               	movlw	235
  5599  028C  00E9               	movwf	??_main
  5600  028D                     u3617:	
  5601  028D  0BE9               	decfsz	??_main,f
  5602  028E  2A8D               	goto	u3617
  5603  028F  0BEA               	decfsz	??_main+1,f
  5604  0290  2A8D               	goto	u3617
  5605  0291  0BEB               	decfsz	??_main+2,f
  5606  0292  2A8D               	goto	u3617
  5607  0293  0000               	nop
  5608                           
  5609                           ;main.c: 74: { LCD_Set_Cursor(1,1); LCD_Write_String("S");};
  5610  0294  01F4               	clrf	LCD_Set_Cursor@y
  5611  0295  0AF4               	incf	LCD_Set_Cursor@y,f
  5612  0296  3001               	movlw	1
  5613  0297  3197  27C1  3181   	fcall	_LCD_Set_Cursor
  5614  029A  3074               	movlw	low (STR_13| (0+32768))
  5615  029B  00F5               	movwf	LCD_Write_String@a
  5616  029C  3090               	movlw	high (STR_13| (0+32768))
  5617  029D  00F6               	movwf	LCD_Write_String@a+1
  5618  029E  3196  2628  3181   	fcall	_LCD_Write_String
  5619                           
  5620                           ;main.c: 75: _delay((unsigned long)((200)*(32000000/4000.0)));
  5621  02A1  3009               	movlw	9
  5622  02A2  0020               	movlb	0	; select bank0
  5623  02A3  00EB               	movwf	??_main+2
  5624  02A4  301E               	movlw	30
  5625  02A5  00EA               	movwf	??_main+1
  5626  02A6  30EB               	movlw	235
  5627  02A7  00E9               	movwf	??_main
  5628  02A8                     u3627:	
  5629  02A8  0BE9               	decfsz	??_main,f
  5630  02A9  2AA8               	goto	u3627
  5631  02AA  0BEA               	decfsz	??_main+1,f
  5632  02AB  2AA8               	goto	u3627
  5633  02AC  0BEB               	decfsz	??_main+2,f
  5634  02AD  2AA8               	goto	u3627
  5635  02AE  0000               	nop
  5636                           
  5637                           ;main.c: 76: LCD_Write_String("O");
  5638  02AF  3070               	movlw	low (STR_3| (0+32768))
  5639  02B0  00F5               	movwf	LCD_Write_String@a
  5640  02B1  3090               	movlw	high (STR_3| (0+32768))
  5641  02B2  00F6               	movwf	LCD_Write_String@a+1
  5642  02B3  3196  2628  3181   	fcall	_LCD_Write_String
  5643                           
  5644                           ;main.c: 77: _delay((unsigned long)((200)*(32000000/4000.0)));
  5645  02B6  3009               	movlw	9
  5646  02B7  0020               	movlb	0	; select bank0
  5647  02B8  00EB               	movwf	??_main+2
  5648  02B9  301E               	movlw	30
  5649  02BA  00EA               	movwf	??_main+1
  5650  02BB  30EB               	movlw	235
  5651  02BC  00E9               	movwf	??_main
  5652  02BD                     u3637:	
  5653  02BD  0BE9               	decfsz	??_main,f
  5654  02BE  2ABD               	goto	u3637
  5655  02BF  0BEA               	decfsz	??_main+1,f
  5656  02C0  2ABD               	goto	u3637
  5657  02C1  0BEB               	decfsz	??_main+2,f
  5658  02C2  2ABD               	goto	u3637
  5659  02C3  0000               	nop
  5660                           
  5661                           ;main.c: 78: LCD_Write_String("P");
  5662  02C4  3072               	movlw	low (STR_15| (0+32768))
  5663  02C5  00F5               	movwf	LCD_Write_String@a
  5664  02C6  3090               	movlw	high (STR_15| (0+32768))
  5665  02C7  00F6               	movwf	LCD_Write_String@a+1
  5666  02C8  3196  2628  3181   	fcall	_LCD_Write_String
  5667                           
  5668                           ;main.c: 79: _delay((unsigned long)((200)*(32000000/4000.0)));
  5669  02CB  3009               	movlw	9
  5670  02CC  0020               	movlb	0	; select bank0
  5671  02CD  00EB               	movwf	??_main+2
  5672  02CE  301E               	movlw	30
  5673  02CF  00EA               	movwf	??_main+1
  5674  02D0  30EB               	movlw	235
  5675  02D1  00E9               	movwf	??_main
  5676  02D2                     u3647:	
  5677  02D2  0BE9               	decfsz	??_main,f
  5678  02D3  2AD2               	goto	u3647
  5679  02D4  0BEA               	decfsz	??_main+1,f
  5680  02D5  2AD2               	goto	u3647
  5681  02D6  0BEB               	decfsz	??_main+2,f
  5682  02D7  2AD2               	goto	u3647
  5683  02D8  0000               	nop
  5684                           
  5685                           ;main.c: 80: LCD_Write_String("H");
  5686  02D9  3068               	movlw	low (STR_4| (0+32768))
  5687  02DA  00F5               	movwf	LCD_Write_String@a
  5688  02DB  3090               	movlw	high (STR_4| (0+32768))
  5689  02DC  00F6               	movwf	LCD_Write_String@a+1
  5690  02DD  3196  2628  3181   	fcall	_LCD_Write_String
  5691                           
  5692                           ;main.c: 81: _delay((unsigned long)((200)*(32000000/4000.0)));
  5693  02E0  3009               	movlw	9
  5694  02E1  0020               	movlb	0	; select bank0
  5695  02E2  00EB               	movwf	??_main+2
  5696  02E3  301E               	movlw	30
  5697  02E4  00EA               	movwf	??_main+1
  5698  02E5  30EB               	movlw	235
  5699  02E6  00E9               	movwf	??_main
  5700  02E7                     u3657:	
  5701  02E7  0BE9               	decfsz	??_main,f
  5702  02E8  2AE7               	goto	u3657
  5703  02E9  0BEA               	decfsz	??_main+1,f
  5704  02EA  2AE7               	goto	u3657
  5705  02EB  0BEB               	decfsz	??_main+2,f
  5706  02EC  2AE7               	goto	u3657
  5707  02ED  0000               	nop
  5708                           
  5709                           ;main.c: 82: LCD_Write_String("I");
  5710  02EE  306A               	movlw	low (STR_10| (0+32768))
  5711  02EF  00F5               	movwf	LCD_Write_String@a
  5712  02F0  3090               	movlw	high (STR_10| (0+32768))
  5713  02F1  00F6               	movwf	LCD_Write_String@a+1
  5714  02F2  3196  2628  3181   	fcall	_LCD_Write_String
  5715                           
  5716                           ;main.c: 83: _delay((unsigned long)((200)*(32000000/4000.0)));
  5717  02F5  3009               	movlw	9
  5718  02F6  0020               	movlb	0	; select bank0
  5719  02F7  00EB               	movwf	??_main+2
  5720  02F8  301E               	movlw	30
  5721  02F9  00EA               	movwf	??_main+1
  5722  02FA  30EB               	movlw	235
  5723  02FB  00E9               	movwf	??_main
  5724  02FC                     u3667:	
  5725  02FC  0BE9               	decfsz	??_main,f
  5726  02FD  2AFC               	goto	u3667
  5727  02FE  0BEA               	decfsz	??_main+1,f
  5728  02FF  2AFC               	goto	u3667
  5729  0300  0BEB               	decfsz	??_main+2,f
  5730  0301  2AFC               	goto	u3667
  5731  0302  0000               	nop
  5732                           
  5733                           ;main.c: 84: LCD_Write_String("E");
  5734  0303  3066               	movlw	low (STR_18| (0+32768))
  5735  0304  00F5               	movwf	LCD_Write_String@a
  5736  0305  3090               	movlw	high (STR_18| (0+32768))
  5737  0306  00F6               	movwf	LCD_Write_String@a+1
  5738  0307  3196  2628  3181   	fcall	_LCD_Write_String
  5739                           
  5740                           ;main.c: 85: _delay((unsigned long)((200)*(32000000/4000.0)));
  5741  030A  3009               	movlw	9
  5742  030B  0020               	movlb	0	; select bank0
  5743  030C  00EB               	movwf	??_main+2
  5744  030D  301E               	movlw	30
  5745  030E  00EA               	movwf	??_main+1
  5746  030F  30EB               	movlw	235
  5747  0310  00E9               	movwf	??_main
  5748  0311                     u3677:	
  5749  0311  0BE9               	decfsz	??_main,f
  5750  0312  2B11               	goto	u3677
  5751  0313  0BEA               	decfsz	??_main+1,f
  5752  0314  2B11               	goto	u3677
  5753  0315  0BEB               	decfsz	??_main+2,f
  5754  0316  2B11               	goto	u3677
  5755  0317  0000               	nop
  5756                           
  5757                           ;main.c: 86: LCD_Write_String(" ");
  5758  0318  3035               	movlw	low ((STR_27+9)| (0+32768))
  5759  0319  00F5               	movwf	LCD_Write_String@a
  5760  031A  3090               	movlw	high ((STR_27+9)| (0+32768))
  5761  031B  00F6               	movwf	LCD_Write_String@a+1
  5762  031C  3196  2628  3181   	fcall	_LCD_Write_String
  5763                           
  5764                           ;main.c: 87: _delay((unsigned long)((200)*(32000000/4000.0)));
  5765  031F  3009               	movlw	9
  5766  0320  0020               	movlb	0	; select bank0
  5767  0321  00EB               	movwf	??_main+2
  5768  0322  301E               	movlw	30
  5769  0323  00EA               	movwf	??_main+1
  5770  0324  30EB               	movlw	235
  5771  0325  00E9               	movwf	??_main
  5772  0326                     u3687:	
  5773  0326  0BE9               	decfsz	??_main,f
  5774  0327  2B26               	goto	u3687
  5775  0328  0BEA               	decfsz	??_main+1,f
  5776  0329  2B26               	goto	u3687
  5777  032A  0BEB               	decfsz	??_main+2,f
  5778  032B  2B26               	goto	u3687
  5779  032C  0000               	nop
  5780                           
  5781                           ;main.c: 88: LCD_Write_String("&");
  5782  032D  305E               	movlw	low (STR_20| (0+32768))
  5783  032E  00F5               	movwf	LCD_Write_String@a
  5784  032F  3090               	movlw	high (STR_20| (0+32768))
  5785  0330  00F6               	movwf	LCD_Write_String@a+1
  5786  0331  3196  2628  3181   	fcall	_LCD_Write_String
  5787                           
  5788                           ;main.c: 89: _delay((unsigned long)((200)*(32000000/4000.0)));
  5789  0334  3009               	movlw	9
  5790  0335  0020               	movlb	0	; select bank0
  5791  0336  00EB               	movwf	??_main+2
  5792  0337  301E               	movlw	30
  5793  0338  00EA               	movwf	??_main+1
  5794  0339  30EB               	movlw	235
  5795  033A  00E9               	movwf	??_main
  5796  033B                     u3697:	
  5797  033B  0BE9               	decfsz	??_main,f
  5798  033C  2B3B               	goto	u3697
  5799  033D  0BEA               	decfsz	??_main+1,f
  5800  033E  2B3B               	goto	u3697
  5801  033F  0BEB               	decfsz	??_main+2,f
  5802  0340  2B3B               	goto	u3697
  5803  0341  0000               	nop
  5804                           
  5805                           ;main.c: 90: LCD_Write_String(" ");
  5806  0342  3035               	movlw	low ((STR_27+9)| (0+32768))
  5807  0343  00F5               	movwf	LCD_Write_String@a
  5808  0344  3090               	movlw	high ((STR_27+9)| (0+32768))
  5809  0345  00F6               	movwf	LCD_Write_String@a+1
  5810  0346  3196  2628  3181   	fcall	_LCD_Write_String
  5811                           
  5812                           ;main.c: 91: _delay((unsigned long)((200)*(32000000/4000.0)));
  5813  0349  3009               	movlw	9
  5814  034A  0020               	movlb	0	; select bank0
  5815  034B  00EB               	movwf	??_main+2
  5816  034C  301E               	movlw	30
  5817  034D  00EA               	movwf	??_main+1
  5818  034E  30EB               	movlw	235
  5819  034F  00E9               	movwf	??_main
  5820  0350                     u3707:	
  5821  0350  0BE9               	decfsz	??_main,f
  5822  0351  2B50               	goto	u3707
  5823  0352  0BEA               	decfsz	??_main+1,f
  5824  0353  2B50               	goto	u3707
  5825  0354  0BEB               	decfsz	??_main+2,f
  5826  0355  2B50               	goto	u3707
  5827  0356  0000               	nop
  5828                           
  5829                           ;main.c: 92: LCD_Write_String("K");
  5830  0357  306C               	movlw	low (STR_22| (0+32768))
  5831  0358  00F5               	movwf	LCD_Write_String@a
  5832  0359  3090               	movlw	high (STR_22| (0+32768))
  5833  035A  00F6               	movwf	LCD_Write_String@a+1
  5834  035B  3196  2628  3181   	fcall	_LCD_Write_String
  5835                           
  5836                           ;main.c: 93: _delay((unsigned long)((200)*(32000000/4000.0)));
  5837  035E  3009               	movlw	9
  5838  035F  0020               	movlb	0	; select bank0
  5839  0360  00EB               	movwf	??_main+2
  5840  0361  301E               	movlw	30
  5841  0362  00EA               	movwf	??_main+1
  5842  0363  30EB               	movlw	235
  5843  0364  00E9               	movwf	??_main
  5844  0365                     u3717:	
  5845  0365  0BE9               	decfsz	??_main,f
  5846  0366  2B65               	goto	u3717
  5847  0367  0BEA               	decfsz	??_main+1,f
  5848  0368  2B65               	goto	u3717
  5849  0369  0BEB               	decfsz	??_main+2,f
  5850  036A  2B65               	goto	u3717
  5851  036B  0000               	nop
  5852                           
  5853                           ;main.c: 94: LCD_Write_String("I");
  5854  036C  306A               	movlw	low (STR_10| (0+32768))
  5855  036D  00F5               	movwf	LCD_Write_String@a
  5856  036E  3090               	movlw	high (STR_10| (0+32768))
  5857  036F  00F6               	movwf	LCD_Write_String@a+1
  5858  0370  3196  2628  3181   	fcall	_LCD_Write_String
  5859                           
  5860                           ;main.c: 95: _delay((unsigned long)((200)*(32000000/4000.0)));
  5861  0373  3009               	movlw	9
  5862  0374  0020               	movlb	0	; select bank0
  5863  0375  00EB               	movwf	??_main+2
  5864  0376  301E               	movlw	30
  5865  0377  00EA               	movwf	??_main+1
  5866  0378  30EB               	movlw	235
  5867  0379  00E9               	movwf	??_main
  5868  037A                     u3727:	
  5869  037A  0BE9               	decfsz	??_main,f
  5870  037B  2B7A               	goto	u3727
  5871  037C  0BEA               	decfsz	??_main+1,f
  5872  037D  2B7A               	goto	u3727
  5873  037E  0BEB               	decfsz	??_main+2,f
  5874  037F  2B7A               	goto	u3727
  5875  0380  0000               	nop
  5876                           
  5877                           ;main.c: 96: LCD_Write_String("D");
  5878  0381  3064               	movlw	low (STR_7| (0+32768))
  5879  0382  00F5               	movwf	LCD_Write_String@a
  5880  0383  3090               	movlw	high (STR_7| (0+32768))
  5881  0384  00F6               	movwf	LCD_Write_String@a+1
  5882  0385  3196  2628  3181   	fcall	_LCD_Write_String
  5883                           
  5884                           ;main.c: 97: _delay((unsigned long)((200)*(32000000/4000.0)));
  5885  0388  3009               	movlw	9
  5886  0389  0020               	movlb	0	; select bank0
  5887  038A  00EB               	movwf	??_main+2
  5888  038B  301E               	movlw	30
  5889  038C  00EA               	movwf	??_main+1
  5890  038D  30EB               	movlw	235
  5891  038E  00E9               	movwf	??_main
  5892  038F                     u3737:	
  5893  038F  0BE9               	decfsz	??_main,f
  5894  0390  2B8F               	goto	u3737
  5895  0391  0BEA               	decfsz	??_main+1,f
  5896  0392  2B8F               	goto	u3737
  5897  0393  0BEB               	decfsz	??_main+2,f
  5898  0394  2B8F               	goto	u3737
  5899  0395  0000               	nop
  5900                           
  5901                           ;main.c: 98: LCD_Write_String("S");
  5902  0396  3074               	movlw	low (STR_13| (0+32768))
  5903  0397  00F5               	movwf	LCD_Write_String@a
  5904  0398  3090               	movlw	high (STR_13| (0+32768))
  5905  0399  00F6               	movwf	LCD_Write_String@a+1
  5906  039A  3196  2628  3181   	fcall	_LCD_Write_String
  5907                           
  5908                           ;main.c: 99: _delay((unsigned long)((200)*(32000000/4000.0)));
  5909  039D  3009               	movlw	9
  5910  039E  0020               	movlb	0	; select bank0
  5911  039F  00EB               	movwf	??_main+2
  5912  03A0  301E               	movlw	30
  5913  03A1  00EA               	movwf	??_main+1
  5914  03A2  30EB               	movlw	235
  5915  03A3  00E9               	movwf	??_main
  5916  03A4                     u3747:	
  5917  03A4  0BE9               	decfsz	??_main,f
  5918  03A5  2BA4               	goto	u3747
  5919  03A6  0BEA               	decfsz	??_main+1,f
  5920  03A7  2BA4               	goto	u3747
  5921  03A8  0BEB               	decfsz	??_main+2,f
  5922  03A9  2BA4               	goto	u3747
  5923  03AA  0000               	nop
  5924                           
  5925                           ;main.c: 100: LCD_Write_String("!");
  5926  03AB  305C               	movlw	low (STR_26| (0+32768))
  5927  03AC  00F5               	movwf	LCD_Write_String@a
  5928  03AD  3090               	movlw	high (STR_26| (0+32768))
  5929  03AE  00F6               	movwf	LCD_Write_String@a+1
  5930  03AF  3196  2628  3181   	fcall	_LCD_Write_String
  5931                           
  5932                           ;main.c: 101: _delay((unsigned long)((5000)*(32000000/4000.0)));
  5933  03B2  30CB               	movlw	203
  5934  03B3  0020               	movlb	0	; select bank0
  5935  03B4  00EB               	movwf	??_main+2
  5936  03B5  30ED               	movlw	237
  5937  03B6  00EA               	movwf	??_main+1
  5938  03B7  304C               	movlw	76
  5939  03B8  00E9               	movwf	??_main
  5940  03B9                     u3757:	
  5941  03B9  0BE9               	decfsz	??_main,f
  5942  03BA  2BB9               	goto	u3757
  5943  03BB  0BEA               	decfsz	??_main+1,f
  5944  03BC  2BB9               	goto	u3757
  5945  03BD  0BEB               	decfsz	??_main+2,f
  5946  03BE  2BB9               	goto	u3757
  5947  03BF  3200               	nop2
  5948                           
  5949                           ;main.c: 103: LCD_Clear();
  5950  03C0  3195  2590  3181   	fcall	_LCD_Clear
  5951                           
  5952                           ;main.c: 105: PWM6_LoadDutyValue(dutyCycle);
  5953  03C3  0021               	movlb	1	; select bank1
  5954  03C4  083F               	movf	(main@dutyCycle+1)^(0+128),w
  5955  03C5  00F1               	movwf	PWM6_LoadDutyValue@dutyCycle+1
  5956  03C6  083E               	movf	main@dutyCycle^(0+128),w
  5957  03C7  00F0               	movwf	PWM6_LoadDutyValue@dutyCycle
  5958  03C8  3180  2005  3181   	fcall	_PWM6_LoadDutyValue
  5959  03CB                     l2999:	
  5960                           ;main.c: 108: while (1)
  5961                           
  5962                           
  5963                           ;main.c: 109: {
  5964                           ;main.c: 111: for(x=0;x<6;x++) analogs[x]=readAnalog(x);
  5965  03CB  0021               	movlb	1	; select bank1
  5966  03CC  01BD               	clrf	main@x^(0+128)
  5967  03CD  3006               	movlw	6
  5968  03CE  023D               	subwf	main@x^(0+128),w
  5969  03CF  1803               	btfsc	3,0
  5970  03D0  2BEF               	goto	l3011
  5971  03D1                     l3005:	
  5972  03D1  083D               	movf	main@x^(0+128),w
  5973  03D2  0020               	movlb	0	; select bank0
  5974  03D3  00E9               	movwf	??_main
  5975  03D4  01EA               	clrf	??_main+1
  5976  03D5  0869               	movf	??_main,w
  5977  03D6  00A6               	movwf	readAnalog@channel
  5978  03D7  086A               	movf	??_main+1,w
  5979  03D8  00A7               	movwf	readAnalog@channel+1
  5980  03D9  3180  201B  3181   	fcall	_readAnalog
  5981  03DC  0021               	movlb	1	; select bank1
  5982  03DD  353D               	lslf	main@x^(0+128),w
  5983  03DE  3EA5               	addlw	(low (main@analogs| 0))& (0+255)
  5984  03DF  0086               	movwf	6
  5985  03E0  0187               	clrf	7
  5986  03E1  0020               	movlb	0	; select bank0
  5987  03E2  0826               	movf	?_readAnalog,w
  5988  03E3  3FC0               	movwi [0]fsr1
  5989  03E4  0827               	movf	?_readAnalog+1,w
  5990  03E5  3FC1               	movwi [1]fsr1
  5991  03E6  3001               	movlw	1
  5992  03E7  00E9               	movwf	??_main
  5993  03E8  0869               	movf	??_main,w
  5994  03E9  0021               	movlb	1	; select bank1
  5995  03EA  07BD               	addwf	main@x^(0+128),f
  5996  03EB  3006               	movlw	6
  5997  03EC  023D               	subwf	main@x^(0+128),w
  5998  03ED  1C03               	skipc
  5999  03EE  2BD1               	goto	l3005
  6000  03EF                     l3011:	
  6001                           
  6002                           ;main.c: 113: if(analogs[0]<1020)tPadCount+=1;
  6003  03EF  3003               	movlw	3
  6004  03F0  0226               	subwf	(main@analogs+1)^(0+128),w
  6005  03F1  30FC               	movlw	252
  6006  03F2  1903               	skipnz
  6007  03F3  0225               	subwf	main@analogs^(0+128),w
  6008  03F4  1803               	skipnc
  6009  03F5  2BFC               	goto	l3015
  6010  03F6  3001               	movlw	1
  6011  03F7  0020               	movlb	0	; select bank0
  6012  03F8  00E9               	movwf	??_main
  6013  03F9  0869               	movf	??_main,w
  6014  03FA  0021               	movlb	1	; select bank1
  6015  03FB  07BA               	addwf	main@tPadCount^(0+128),f
  6016  03FC                     l3015:	
  6017                           
  6018                           ;main.c: 116: if(analogs[1]<900)tPadCount-=1;
  6019  03FC  3003               	movlw	3
  6020  03FD  0228               	subwf	((main@analogs+1)^(0+128)+2),w
  6021  03FE  3084               	movlw	132
  6022  03FF  1903               	skipnz
  6023  0400  0227               	subwf	(main@analogs^(0+128)+2),w
  6024  0401  1803               	skipnc
  6025  0402  2C05               	goto	l291
  6026  0403  3001               	movlw	1
  6027  0404  02BA               	subwf	main@tPadCount^(0+128),f
  6028  0405                     l291:	
  6029                           
  6030                           ;main.c: 118: if(tPadCount<1)
  6031  0405  083A               	movf	main@tPadCount^(0+128),w
  6032  0406  1D03               	btfss	3,2
  6033  0407  2C41               	goto	l3035
  6034                           
  6035                           ;main.c: 119: {
  6036                           ;main.c: 120: choice=1;
  6037  0408  01BB               	clrf	main@choice^(0+128)
  6038  0409  0ABB               	incf	main@choice^(0+128),f
  6039                           
  6040                           ;main.c: 121: LCD_Clear();
  6041  040A  3195  2590  3181   	fcall	_LCD_Clear
  6042                           
  6043                           ;main.c: 122: { LCD_Set_Cursor(0,0); LCD_Write_String("You Chose ");};
  6044  040D  01F4               	clrf	LCD_Set_Cursor@y
  6045  040E  3000               	movlw	0
  6046  040F  3197  27C1  3181   	fcall	_LCD_Set_Cursor
  6047  0412  302C               	movlw	low (STR_27| (0+32768))
  6048  0413  00F5               	movwf	LCD_Write_String@a
  6049  0414  3090               	movlw	high (STR_27| (0+32768))
  6050  0415  00F6               	movwf	LCD_Write_String@a+1
  6051  0416  3196  2628  3181   	fcall	_LCD_Write_String
  6052                           
  6053                           ;main.c: 123: LCD_Write_Char(0);
  6054  0419  3000               	movlw	0
  6055  041A  3196  26B5  3181   	fcall	_LCD_Write_Char
  6056                           
  6057                           ;main.c: 124: LCD_Write_Char('F');
  6058  041D  3046               	movlw	70
  6059  041E  3196  26B5  3181   	fcall	_LCD_Write_Char
  6060                           
  6061                           ;main.c: 125: { LCD_Set_Cursor(0,1); LCD_Write_String("for User Display");};
  6062  0421  01F4               	clrf	LCD_Set_Cursor@y
  6063  0422  0AF4               	incf	LCD_Set_Cursor@y,f
  6064  0423  3000               	movlw	0
  6065  0424  3197  27C1  3181   	fcall	_LCD_Set_Cursor
  6066  0427  301B               	movlw	low (STR_28| (0+32768))
  6067  0428  00F5               	movwf	LCD_Write_String@a
  6068  0429  3090               	movlw	high (STR_28| (0+32768))
  6069  042A  00F6               	movwf	LCD_Write_String@a+1
  6070  042B  3196  2628  3181   	fcall	_LCD_Write_String
  6071                           
  6072                           ;main.c: 126: tPadCount=10;
  6073  042E  300A               	movlw	10
  6074  042F  0020               	movlb	0	; select bank0
  6075  0430  00E9               	movwf	??_main
  6076  0431  0869               	movf	??_main,w
  6077  0432  0021               	movlb	1	; select bank1
  6078  0433  00BA               	movwf	main@tPadCount^(0+128)
  6079                           
  6080                           ;main.c: 127: _delay((unsigned long)((1000)*(32000000/4000.0)));
  6081  0434  3029               	movlw	41
  6082  0435  0020               	movlb	0	; select bank0
  6083  0436  00EB               	movwf	??_main+2
  6084  0437  3096               	movlw	150
  6085  0438  00EA               	movwf	??_main+1
  6086  0439  30A6               	movlw	166
  6087  043A  00E9               	movwf	??_main
  6088  043B                     u3767:	
  6089  043B  0BE9               	decfsz	??_main,f
  6090  043C  2C3B               	goto	u3767
  6091  043D  0BEA               	decfsz	??_main+1,f
  6092  043E  2C3B               	goto	u3767
  6093  043F  0BEB               	decfsz	??_main+2,f
  6094  0440  2C3B               	goto	u3767
  6095  0441                     l3035:	
  6096                           
  6097                           ;main.c: 128: }
  6098                           ;main.c: 130: if(tPadCount>19)
  6099  0441  3014               	movlw	20
  6100  0442  0021               	movlb	1	; select bank1
  6101  0443  023A               	subwf	main@tPadCount^(0+128),w
  6102  0444  1C03               	skipc
  6103  0445  2C7B               	goto	l3055
  6104                           
  6105                           ;main.c: 131: {
  6106                           ;main.c: 132: choice=0;
  6107  0446  01BB               	clrf	main@choice^(0+128)
  6108                           
  6109                           ;main.c: 133: { LCD_Set_Cursor(0,0); LCD_Write_String("You Chose ");};
  6110  0447  01F4               	clrf	LCD_Set_Cursor@y
  6111  0448  3000               	movlw	0
  6112  0449  3197  27C1  3181   	fcall	_LCD_Set_Cursor
  6113  044C  302C               	movlw	low (STR_27| (0+32768))
  6114  044D  00F5               	movwf	LCD_Write_String@a
  6115  044E  3090               	movlw	high (STR_27| (0+32768))
  6116  044F  00F6               	movwf	LCD_Write_String@a+1
  6117  0450  3196  2628  3181   	fcall	_LCD_Write_String
  6118                           
  6119                           ;main.c: 134: LCD_Write_Char(0);
  6120  0453  3000               	movlw	0
  6121  0454  3196  26B5  3181   	fcall	_LCD_Write_Char
  6122                           
  6123                           ;main.c: 135: LCD_Write_Char('C');
  6124  0457  3043               	movlw	67
  6125  0458  3196  26B5  3181   	fcall	_LCD_Write_Char
  6126                           
  6127                           ;main.c: 136: { LCD_Set_Cursor(0,1); LCD_Write_String("for User Display");};
  6128  045B  01F4               	clrf	LCD_Set_Cursor@y
  6129  045C  0AF4               	incf	LCD_Set_Cursor@y,f
  6130  045D  3000               	movlw	0
  6131  045E  3197  27C1  3181   	fcall	_LCD_Set_Cursor
  6132  0461  301B               	movlw	low (STR_28| (0+32768))
  6133  0462  00F5               	movwf	LCD_Write_String@a
  6134  0463  3090               	movlw	high (STR_28| (0+32768))
  6135  0464  00F6               	movwf	LCD_Write_String@a+1
  6136  0465  3196  2628  3181   	fcall	_LCD_Write_String
  6137                           
  6138                           ;main.c: 137: tPadCount=10;
  6139  0468  300A               	movlw	10
  6140  0469  0020               	movlb	0	; select bank0
  6141  046A  00E9               	movwf	??_main
  6142  046B  0869               	movf	??_main,w
  6143  046C  0021               	movlb	1	; select bank1
  6144  046D  00BA               	movwf	main@tPadCount^(0+128)
  6145                           
  6146                           ;main.c: 138: _delay((unsigned long)((1000)*(32000000/4000.0)));
  6147  046E  3029               	movlw	41
  6148  046F  0020               	movlb	0	; select bank0
  6149  0470  00EB               	movwf	??_main+2
  6150  0471  3096               	movlw	150
  6151  0472  00EA               	movwf	??_main+1
  6152  0473  30A6               	movlw	166
  6153  0474  00E9               	movwf	??_main
  6154  0475                     u3777:	
  6155  0475  0BE9               	decfsz	??_main,f
  6156  0476  2C75               	goto	u3777
  6157  0477  0BEA               	decfsz	??_main+1,f
  6158  0478  2C75               	goto	u3777
  6159  0479  0BEB               	decfsz	??_main+2,f
  6160  047A  2C75               	goto	u3777
  6161  047B                     l3055:	
  6162                           
  6163                           ;main.c: 139: }
  6164                           ;main.c: 141: if(analogs[0]<1020&&analogs[1]<970)
  6165  047B  3003               	movlw	3
  6166  047C  0021               	movlb	1	; select bank1
  6167  047D  0226               	subwf	(main@analogs+1)^(0+128),w
  6168  047E  30FC               	movlw	252
  6169  047F  1903               	skipnz
  6170  0480  0225               	subwf	main@analogs^(0+128),w
  6171  0481  1803               	skipnc
  6172  0482  2CD2               	goto	l3085
  6173  0483  3003               	movlw	3
  6174  0484  0228               	subwf	((main@analogs+1)^(0+128)+2),w
  6175  0485  30CA               	movlw	202
  6176  0486  1903               	skipnz
  6177  0487  0227               	subwf	(main@analogs^(0+128)+2),w
  6178  0488  1803               	skipnc
  6179  0489  2CD2               	goto	l3085
  6180                           
  6181                           ;main.c: 142: {
  6182                           ;main.c: 143: choice=2;
  6183  048A  3002               	movlw	2
  6184  048B  0020               	movlb	0	; select bank0
  6185  048C  00E9               	movwf	??_main
  6186  048D  0869               	movf	??_main,w
  6187  048E  0021               	movlb	1	; select bank1
  6188  048F  00BB               	movwf	main@choice^(0+128)
  6189                           
  6190                           ;main.c: 144: LCD_Set_Cursor(0,0);
  6191  0490  01F4               	clrf	LCD_Set_Cursor@y
  6192  0491  3000               	movlw	0
  6193  0492  3197  27C1  3181   	fcall	_LCD_Set_Cursor
  6194                           
  6195                           ;main.c: 145: LCD_Write_Char(0);
  6196  0495  3000               	movlw	0
  6197  0496  3196  26B5  3181   	fcall	_LCD_Write_Char
  6198                           
  6199                           ;main.c: 146: LCD_Write_Char('F');
  6200  0499  3046               	movlw	70
  6201  049A  3196  26B5  3181   	fcall	_LCD_Write_Char
  6202                           
  6203                           ;main.c: 147: LCD_Write_Char(' ');
  6204  049D  3020               	movlw	32
  6205  049E  3196  26B5  3181   	fcall	_LCD_Write_Char
  6206                           
  6207                           ;main.c: 148: LCD_Write_Char('&');
  6208  04A1  3026               	movlw	38
  6209  04A2  3196  26B5  3181   	fcall	_LCD_Write_Char
  6210                           
  6211                           ;main.c: 149: LCD_Write_Char(' ');
  6212  04A5  3020               	movlw	32
  6213  04A6  3196  26B5  3181   	fcall	_LCD_Write_Char
  6214                           
  6215                           ;main.c: 150: LCD_Write_Char(0);
  6216  04A9  3000               	movlw	0
  6217  04AA  3196  26B5  3181   	fcall	_LCD_Write_Char
  6218                           
  6219                           ;main.c: 151: LCD_Write_Char('C');
  6220  04AD  3043               	movlw	67
  6221  04AE  3196  26B5  3181   	fcall	_LCD_Write_Char
  6222                           
  6223                           ;main.c: 152: LCD_Write_String(" Chosen");
  6224  04B1  3042               	movlw	low (STR_31| (0+32768))
  6225  04B2  00F5               	movwf	LCD_Write_String@a
  6226  04B3  3090               	movlw	high (STR_31| (0+32768))
  6227  04B4  00F6               	movwf	LCD_Write_String@a+1
  6228  04B5  3196  2628  3181   	fcall	_LCD_Write_String
  6229                           
  6230                           ;main.c: 154: { LCD_Set_Cursor(0,1); LCD_Write_String("for User Display");};
  6231  04B8  01F4               	clrf	LCD_Set_Cursor@y
  6232  04B9  0AF4               	incf	LCD_Set_Cursor@y,f
  6233  04BA  3000               	movlw	0
  6234  04BB  3197  27C1  3181   	fcall	_LCD_Set_Cursor
  6235  04BE  301B               	movlw	low (STR_28| (0+32768))
  6236  04BF  00F5               	movwf	LCD_Write_String@a
  6237  04C0  3090               	movlw	high (STR_28| (0+32768))
  6238  04C1  00F6               	movwf	LCD_Write_String@a+1
  6239  04C2  3196  2628  3181   	fcall	_LCD_Write_String
  6240                           
  6241                           ;main.c: 155: _delay((unsigned long)((1000)*(32000000/4000.0)));
  6242  04C5  3029               	movlw	41
  6243  04C6  0020               	movlb	0	; select bank0
  6244  04C7  00EB               	movwf	??_main+2
  6245  04C8  3096               	movlw	150
  6246  04C9  00EA               	movwf	??_main+1
  6247  04CA  30A6               	movlw	166
  6248  04CB  00E9               	movwf	??_main
  6249  04CC                     u3787:	
  6250  04CC  0BE9               	decfsz	??_main,f
  6251  04CD  2CCC               	goto	u3787
  6252  04CE  0BEA               	decfsz	??_main+1,f
  6253  04CF  2CCC               	goto	u3787
  6254  04D0  0BEB               	decfsz	??_main+2,f
  6255  04D1  2CCC               	goto	u3787
  6256  04D2                     l3085:	
  6257                           
  6258                           ;main.c: 156: }
  6259                           ;main.c: 160: startDelay+=1;
  6260  04D2  3001               	movlw	1
  6261  04D3  0020               	movlb	0	; select bank0
  6262  04D4  00E9               	movwf	??_main
  6263  04D5  0869               	movf	??_main,w
  6264  04D6  0021               	movlb	1	; select bank1
  6265  04D7  07A4               	addwf	main@startDelay^(0+128),f
  6266                           
  6267                           ;main.c: 162: if(startDelay>254)
  6268  04D8  0A24               	incf	main@startDelay^(0+128),w
  6269  04D9  1D03               	btfss	3,2
  6270  04DA  2DF1               	goto	l3179
  6271                           
  6272                           ;main.c: 163: {
  6273                           ;main.c: 164: startDelay=254;
  6274  04DB  30FE               	movlw	254
  6275  04DC  0020               	movlb	0	; select bank0
  6276  04DD  00E9               	movwf	??_main
  6277  04DE  0869               	movf	??_main,w
  6278  04DF  0021               	movlb	1	; select bank1
  6279  04E0  00A4               	movwf	main@startDelay^(0+128)
  6280                           
  6281                           ;main.c: 166: if(analogs[2]<900&&analogs[3]<900)asm("reset");
  6282  04E1  3003               	movlw	3
  6283  04E2  022A               	subwf	((main@analogs+1)^(0+128)+4),w
  6284  04E3  3084               	movlw	132
  6285  04E4  1903               	skipnz
  6286  04E5  0229               	subwf	(main@analogs^(0+128)+4),w
  6287  04E6  1803               	skipnc
  6288  04E7  2CEF               	goto	l3095
  6289  04E8  3003               	movlw	3
  6290  04E9  022C               	subwf	((main@analogs+1)^(0+128)+6),w
  6291  04EA  3084               	movlw	132
  6292  04EB  1903               	skipnz
  6293  04EC  022B               	subwf	(main@analogs^(0+128)+6),w
  6294  04ED  1C03               	btfss	3,0
  6295  04EE  0001               	reset	;# 
  6296  04EF                     l3095:	
  6297                           
  6298                           ;main.c: 168: if(analogs[2]<900)
  6299  04EF  3003               	movlw	3
  6300  04F0  0021               	movlb	1	; select bank1
  6301  04F1  022A               	subwf	((main@analogs+1)^(0+128)+4),w
  6302  04F2  3084               	movlw	132
  6303  04F3  1903               	skipnz
  6304  04F4  0229               	subwf	(main@analogs^(0+128)+4),w
  6305  04F5  1803               	skipnc
  6306  04F6  2D6F               	goto	l3137
  6307                           
  6308                           ;main.c: 169: {
  6309                           ;main.c: 170: resetDelay+=1;
  6310  04F7  3001               	movlw	1
  6311  04F8  0020               	movlb	0	; select bank0
  6312  04F9  00E9               	movwf	??_main
  6313  04FA  0869               	movf	??_main,w
  6314  04FB  0021               	movlb	1	; select bank1
  6315  04FC  07B9               	addwf	main@resetDelay^(0+128),f
  6316                           
  6317                           ;main.c: 172: if(resetDelay>20)
  6318  04FD  3015               	movlw	21
  6319  04FE  0239               	subwf	main@resetDelay^(0+128),w
  6320  04FF  1803               	btfsc	3,0
  6321  0500  2D53               	goto	l3127
  6322  0501  2D6F               	goto	l3137
  6323  0502                     l3103:	
  6324                           ;main.c: 173: {
  6325                           ;main.c: 174: while(analogs[2]<975)
  6326                           
  6327                           
  6328                           ;main.c: 175: {
  6329                           ;main.c: 176: analogs[2]=ADCRead(4);
  6330  0502  3004               	movlw	4
  6331  0503  3195  25DE  3181   	fcall	_ADCRead
  6332  0506  0871               	movf	?_ADCRead+1,w
  6333  0507  0021               	movlb	1	; select bank1
  6334  0508  00AA               	movwf	((main@analogs+1)^(0+128)+4)
  6335  0509  0870               	movf	?_ADCRead,w
  6336  050A  00A9               	movwf	(main@analogs^(0+128)+4)
  6337                           
  6338                           ;main.c: 178: if(bCount<1)LCD_Clear();
  6339  050B  0831               	movf	main@bCount^(0+128),w
  6340  050C  0432               	iorwf	(main@bCount+1)^(0+128),w
  6341  050D  1D03               	btfss	3,2
  6342  050E  2D12               	goto	l3109
  6343  050F  3195  2590  3181   	fcall	_LCD_Clear
  6344  0512                     l3109:	
  6345                           
  6346                           ;main.c: 179: bCount+=1;
  6347  0512  3001               	movlw	1
  6348  0513  0021               	movlb	1	; select bank1
  6349  0514  07B1               	addwf	main@bCount^(0+128),f
  6350  0515  3000               	movlw	0
  6351  0516  3DB2               	addwfc	(main@bCount+1)^(0+128),f
  6352                           
  6353                           ;main.c: 181: if(dutyCycle>0)dutyCycle-=1;
  6354  0517  083E               	movf	main@dutyCycle^(0+128),w
  6355  0518  043F               	iorwf	(main@dutyCycle+1)^(0+128),w
  6356  0519  1903               	btfsc	3,2
  6357  051A  2D1F               	goto	l3115
  6358  051B  3001               	movlw	1
  6359  051C  02BE               	subwf	main@dutyCycle^(0+128),f
  6360  051D  3000               	movlw	0
  6361  051E  3BBF               	subwfb	(main@dutyCycle+1)^(0+128),f
  6362  051F                     l3115:	
  6363                           
  6364                           ;main.c: 183: { LCD_Set_Cursor(0,0); LCD_Write_String("BackLight:");};
  6365  051F  01F4               	clrf	LCD_Set_Cursor@y
  6366  0520  3000               	movlw	0
  6367  0521  3197  27C1  3181   	fcall	_LCD_Set_Cursor
  6368  0524  3037               	movlw	low (STR_33| (0+32768))
  6369  0525  00F5               	movwf	LCD_Write_String@a
  6370  0526  3090               	movlw	high (STR_33| (0+32768))
  6371  0527  00F6               	movwf	LCD_Write_String@a+1
  6372  0528  3196  2628  3181   	fcall	_LCD_Write_String
  6373                           
  6374                           ;main.c: 184: LCD_Write_Int(dutyCycle/10,-1,0,0);
  6375  052B  300A               	movlw	10
  6376  052C  00F0               	movwf	___lwdiv@divisor
  6377  052D  3000               	movlw	0
  6378  052E  00F1               	movwf	___lwdiv@divisor+1
  6379  052F  0021               	movlb	1	; select bank1
  6380  0530  083F               	movf	(main@dutyCycle+1)^(0+128),w
  6381  0531  00F3               	movwf	___lwdiv@dividend+1
  6382  0532  083E               	movf	main@dutyCycle^(0+128),w
  6383  0533  00F2               	movwf	___lwdiv@dividend
  6384  0534  3196  26E1  3181   	fcall	___lwdiv
  6385  0537  0871               	movf	?___lwdiv+1,w
  6386  0538  0020               	movlb	0	; select bank0
  6387  0539  00A1               	movwf	LCD_Write_Int@value+1
  6388  053A  0870               	movf	?___lwdiv,w
  6389  053B  00A0               	movwf	LCD_Write_Int@value
  6390  053C  01A2               	clrf	LCD_Write_Int@fieldLength
  6391  053D  03A2               	decf	LCD_Write_Int@fieldLength,f
  6392  053E  01A3               	clrf	LCD_Write_Int@numPlaces
  6393  053F  01A4               	clrf	LCD_Write_Int@sign
  6394  0540  318D  2560  3181   	fcall	_LCD_Write_Int
  6395                           
  6396                           ;main.c: 185: LCD_Write_Char('%');
  6397  0543  3025               	movlw	37
  6398  0544  3196  26B5  3181   	fcall	_LCD_Write_Char
  6399                           
  6400                           ;main.c: 186: LCD_Write_Char(' ');
  6401  0547  3020               	movlw	32
  6402  0548  3196  26B5  3181   	fcall	_LCD_Write_Char
  6403                           
  6404                           ;main.c: 187: PWM6_LoadDutyValue(dutyCycle);
  6405  054B  0021               	movlb	1	; select bank1
  6406  054C  083F               	movf	(main@dutyCycle+1)^(0+128),w
  6407  054D  00F1               	movwf	PWM6_LoadDutyValue@dutyCycle+1
  6408  054E  083E               	movf	main@dutyCycle^(0+128),w
  6409  054F  00F0               	movwf	PWM6_LoadDutyValue@dutyCycle
  6410  0550  3180  2005  3181   	fcall	_PWM6_LoadDutyValue
  6411  0553                     l3127:	
  6412  0553  3003               	movlw	3
  6413  0554  0021               	movlb	1	; select bank1
  6414  0555  022A               	subwf	((main@analogs+1)^(0+128)+4),w
  6415  0556  30CF               	movlw	207
  6416  0557  1903               	skipnz
  6417  0558  0229               	subwf	(main@analogs^(0+128)+4),w
  6418  0559  1C03               	skipc
  6419  055A  2D02               	goto	l3103
  6420                           
  6421                           ;main.c: 188: }
  6422                           ;main.c: 189: bCount=0;
  6423  055B  01B1               	clrf	main@bCount^(0+128)
  6424  055C  01B2               	clrf	(main@bCount+1)^(0+128)
  6425                           
  6426                           ;main.c: 190: _delay((unsigned long)((100)*(32000000/4000.0)));
  6427  055D  3005               	movlw	5
  6428  055E  0020               	movlb	0	; select bank0
  6429  055F  00EB               	movwf	??_main+2
  6430  0560  300F               	movlw	15
  6431  0561  00EA               	movwf	??_main+1
  6432  0562  30F4               	movlw	244
  6433  0563  00E9               	movwf	??_main
  6434  0564                     u3797:	
  6435  0564  0BE9               	decfsz	??_main,f
  6436  0565  2D64               	goto	u3797
  6437  0566  0BEA               	decfsz	??_main+1,f
  6438  0567  2D64               	goto	u3797
  6439  0568  0BEB               	decfsz	??_main+2,f
  6440  0569  2D64               	goto	u3797
  6441                           
  6442                           ;main.c: 191: LCD_Clear();
  6443  056A  3195  2590  3181   	fcall	_LCD_Clear
  6444                           
  6445                           ;main.c: 192: resetDelay=0;
  6446  056D  0021               	movlb	1	; select bank1
  6447  056E  01B9               	clrf	main@resetDelay^(0+128)
  6448  056F                     l3137:	
  6449                           
  6450                           ;main.c: 193: }
  6451                           ;main.c: 194: }
  6452                           ;main.c: 196: if(analogs[3]<900)
  6453  056F  3003               	movlw	3
  6454  0570  022C               	subwf	((main@analogs+1)^(0+128)+6),w
  6455  0571  3084               	movlw	132
  6456  0572  1903               	skipnz
  6457  0573  022B               	subwf	(main@analogs^(0+128)+6),w
  6458  0574  1803               	skipnc
  6459  0575  2DF1               	goto	l3179
  6460                           
  6461                           ;main.c: 197: {
  6462                           ;main.c: 198: resetDelay+=1;
  6463  0576  3001               	movlw	1
  6464  0577  0020               	movlb	0	; select bank0
  6465  0578  00E9               	movwf	??_main
  6466  0579  0869               	movf	??_main,w
  6467  057A  0021               	movlb	1	; select bank1
  6468  057B  07B9               	addwf	main@resetDelay^(0+128),f
  6469                           
  6470                           ;main.c: 200: if(resetDelay>20)
  6471  057C  3015               	movlw	21
  6472  057D  0239               	subwf	main@resetDelay^(0+128),w
  6473  057E  1803               	btfsc	3,0
  6474  057F  2DD5               	goto	l3169
  6475  0580  2DF1               	goto	l3179
  6476  0581                     l3145:	
  6477                           ;main.c: 201: {
  6478                           ;main.c: 202: while(analogs[3]<975)
  6479                           
  6480                           
  6481                           ;main.c: 203: {
  6482                           ;main.c: 204: analogs[3]=ADCRead(5);
  6483  0581  3005               	movlw	5
  6484  0582  3195  25DE  3181   	fcall	_ADCRead
  6485  0585  0871               	movf	?_ADCRead+1,w
  6486  0586  0021               	movlb	1	; select bank1
  6487  0587  00AC               	movwf	((main@analogs+1)^(0+128)+6)
  6488  0588  0870               	movf	?_ADCRead,w
  6489  0589  00AB               	movwf	(main@analogs^(0+128)+6)
  6490                           
  6491                           ;main.c: 206: if(bCount<1)LCD_Clear();
  6492  058A  0831               	movf	main@bCount^(0+128),w
  6493  058B  0432               	iorwf	(main@bCount+1)^(0+128),w
  6494  058C  1D03               	btfss	3,2
  6495  058D  2D91               	goto	l3151
  6496  058E  3195  2590  3181   	fcall	_LCD_Clear
  6497  0591                     l3151:	
  6498                           
  6499                           ;main.c: 207: bCount+=1;
  6500  0591  3001               	movlw	1
  6501  0592  0021               	movlb	1	; select bank1
  6502  0593  07B1               	addwf	main@bCount^(0+128),f
  6503  0594  3000               	movlw	0
  6504  0595  3DB2               	addwfc	(main@bCount+1)^(0+128),f
  6505                           
  6506                           ;main.c: 209: if(dutyCycle<1009)dutyCycle+=1;
  6507  0596  3003               	movlw	3
  6508  0597  023F               	subwf	(main@dutyCycle+1)^(0+128),w
  6509  0598  30F1               	movlw	241
  6510  0599  1903               	skipnz
  6511  059A  023E               	subwf	main@dutyCycle^(0+128),w
  6512  059B  1803               	skipnc
  6513  059C  2DA1               	goto	l3157
  6514  059D  3001               	movlw	1
  6515  059E  07BE               	addwf	main@dutyCycle^(0+128),f
  6516  059F  3000               	movlw	0
  6517  05A0  3DBF               	addwfc	(main@dutyCycle+1)^(0+128),f
  6518  05A1                     l3157:	
  6519                           
  6520                           ;main.c: 211: { LCD_Set_Cursor(0,0); LCD_Write_String("BackLight:");};
  6521  05A1  01F4               	clrf	LCD_Set_Cursor@y
  6522  05A2  3000               	movlw	0
  6523  05A3  3197  27C1  3181   	fcall	_LCD_Set_Cursor
  6524  05A6  3037               	movlw	low (STR_33| (0+32768))
  6525  05A7  00F5               	movwf	LCD_Write_String@a
  6526  05A8  3090               	movlw	high (STR_33| (0+32768))
  6527  05A9  00F6               	movwf	LCD_Write_String@a+1
  6528  05AA  3196  2628  3181   	fcall	_LCD_Write_String
  6529                           
  6530                           ;main.c: 212: LCD_Write_Int(dutyCycle/10,-1,0,0);
  6531  05AD  300A               	movlw	10
  6532  05AE  00F0               	movwf	___lwdiv@divisor
  6533  05AF  3000               	movlw	0
  6534  05B0  00F1               	movwf	___lwdiv@divisor+1
  6535  05B1  0021               	movlb	1	; select bank1
  6536  05B2  083F               	movf	(main@dutyCycle+1)^(0+128),w
  6537  05B3  00F3               	movwf	___lwdiv@dividend+1
  6538  05B4  083E               	movf	main@dutyCycle^(0+128),w
  6539  05B5  00F2               	movwf	___lwdiv@dividend
  6540  05B6  3196  26E1  3181   	fcall	___lwdiv
  6541  05B9  0871               	movf	?___lwdiv+1,w
  6542  05BA  0020               	movlb	0	; select bank0
  6543  05BB  00A1               	movwf	LCD_Write_Int@value+1
  6544  05BC  0870               	movf	?___lwdiv,w
  6545  05BD  00A0               	movwf	LCD_Write_Int@value
  6546  05BE  01A2               	clrf	LCD_Write_Int@fieldLength
  6547  05BF  03A2               	decf	LCD_Write_Int@fieldLength,f
  6548  05C0  01A3               	clrf	LCD_Write_Int@numPlaces
  6549  05C1  01A4               	clrf	LCD_Write_Int@sign
  6550  05C2  318D  2560  3181   	fcall	_LCD_Write_Int
  6551                           
  6552                           ;main.c: 213: LCD_Write_Char('%');
  6553  05C5  3025               	movlw	37
  6554  05C6  3196  26B5  3181   	fcall	_LCD_Write_Char
  6555                           
  6556                           ;main.c: 214: LCD_Write_Char(' ');
  6557  05C9  3020               	movlw	32
  6558  05CA  3196  26B5  3181   	fcall	_LCD_Write_Char
  6559                           
  6560                           ;main.c: 215: PWM6_LoadDutyValue(dutyCycle);
  6561  05CD  0021               	movlb	1	; select bank1
  6562  05CE  083F               	movf	(main@dutyCycle+1)^(0+128),w
  6563  05CF  00F1               	movwf	PWM6_LoadDutyValue@dutyCycle+1
  6564  05D0  083E               	movf	main@dutyCycle^(0+128),w
  6565  05D1  00F0               	movwf	PWM6_LoadDutyValue@dutyCycle
  6566  05D2  3180  2005  3181   	fcall	_PWM6_LoadDutyValue
  6567  05D5                     l3169:	
  6568  05D5  3003               	movlw	3
  6569  05D6  0021               	movlb	1	; select bank1
  6570  05D7  022C               	subwf	((main@analogs+1)^(0+128)+6),w
  6571  05D8  30CF               	movlw	207
  6572  05D9  1903               	skipnz
  6573  05DA  022B               	subwf	(main@analogs^(0+128)+6),w
  6574  05DB  1C03               	skipc
  6575  05DC  2D81               	goto	l3145
  6576                           
  6577                           ;main.c: 216: }
  6578                           ;main.c: 217: bCount=0;
  6579  05DD  01B1               	clrf	main@bCount^(0+128)
  6580  05DE  01B2               	clrf	(main@bCount+1)^(0+128)
  6581                           
  6582                           ;main.c: 218: _delay((unsigned long)((100)*(32000000/4000.0)));
  6583  05DF  3005               	movlw	5
  6584  05E0  0020               	movlb	0	; select bank0
  6585  05E1  00EB               	movwf	??_main+2
  6586  05E2  300F               	movlw	15
  6587  05E3  00EA               	movwf	??_main+1
  6588  05E4  30F4               	movlw	244
  6589  05E5  00E9               	movwf	??_main
  6590  05E6                     u3807:	
  6591  05E6  0BE9               	decfsz	??_main,f
  6592  05E7  2DE6               	goto	u3807
  6593  05E8  0BEA               	decfsz	??_main+1,f
  6594  05E9  2DE6               	goto	u3807
  6595  05EA  0BEB               	decfsz	??_main+2,f
  6596  05EB  2DE6               	goto	u3807
  6597                           
  6598                           ;main.c: 219: LCD_Clear();
  6599  05EC  3195  2590  3181   	fcall	_LCD_Clear
  6600                           
  6601                           ;main.c: 220: resetDelay=0;
  6602  05EF  0021               	movlb	1	; select bank1
  6603  05F0  01B9               	clrf	main@resetDelay^(0+128)
  6604  05F1                     l3179:	
  6605                           
  6606                           ;main.c: 221: }
  6607                           ;main.c: 222: }
  6608                           ;main.c: 223: }
  6609                           ;main.c: 227: displayTemp = (tempCalc(analogs[4]))-3;
  6610  05F1  082E               	movf	((main@analogs+1)^(0+128)+8),w
  6611  05F2  0020               	movlb	0	; select bank0
  6612  05F3  00DE               	movwf	tempCalc@analogValue+1
  6613  05F4  0021               	movlb	1	; select bank1
  6614  05F5  082D               	movf	(main@analogs^(0+128)+8),w
  6615  05F6  0020               	movlb	0	; select bank0
  6616  05F7  00DD               	movwf	tempCalc@analogValue
  6617  05F8  318E  262B  3181   	fcall	_tempCalc
  6618  05FB  0020               	movlb	0	; select bank0
  6619  05FC  085D               	movf	?_tempCalc,w
  6620  05FD  0021               	movlb	1	; select bank1
  6621  05FE  00A0               	movwf	_main$989^(0+128)
  6622  05FF  0020               	movlb	0	; select bank0
  6623  0600  085E               	movf	?_tempCalc+1,w
  6624  0601  0021               	movlb	1	; select bank1
  6625  0602  00A1               	movwf	(_main$989+1)^(0+128)
  6626  0603  0020               	movlb	0	; select bank0
  6627  0604  085F               	movf	?_tempCalc+2,w
  6628  0605  0021               	movlb	1	; select bank1
  6629  0606  00A2               	movwf	(_main$989+2)^(0+128)
  6630                           
  6631                           ;main.c: 221: }
  6632                           ;main.c: 222: }
  6633                           ;main.c: 223: }
  6634                           ;main.c: 227: displayTemp = (tempCalc(analogs[4]))-3;
  6635  0607  3000               	movlw	0
  6636  0608  0020               	movlb	0	; select bank0
  6637  0609  00C0               	movwf	___ftadd@f1
  6638  060A  3040               	movlw	64
  6639  060B  00C1               	movwf	___ftadd@f1+1
  6640  060C  30C0               	movlw	192
  6641  060D  00C2               	movwf	___ftadd@f1+2
  6642  060E  0021               	movlb	1	; select bank1
  6643  060F  0820               	movf	_main$989^(0+128),w
  6644  0610  0020               	movlb	0	; select bank0
  6645  0611  00C3               	movwf	___ftadd@f2
  6646  0612  0021               	movlb	1	; select bank1
  6647  0613  0821               	movf	(_main$989+1)^(0+128),w
  6648  0614  0020               	movlb	0	; select bank0
  6649  0615  00C4               	movwf	___ftadd@f2+1
  6650  0616  0021               	movlb	1	; select bank1
  6651  0617  0822               	movf	(_main$989+2)^(0+128),w
  6652  0618  0020               	movlb	0	; select bank0
  6653  0619  00C5               	movwf	___ftadd@f2+2
  6654  061A  318F  270A  3181   	fcall	___ftadd
  6655  061D  0020               	movlb	0	; select bank0
  6656  061E  0840               	movf	?___ftadd,w
  6657  061F  0021               	movlb	1	; select bank1
  6658  0620  00B3               	movwf	main@displayTemp^(0+128)
  6659  0621  0020               	movlb	0	; select bank0
  6660  0622  0841               	movf	?___ftadd+1,w
  6661  0623  0021               	movlb	1	; select bank1
  6662  0624  00B4               	movwf	(main@displayTemp+1)^(0+128)
  6663  0625  0020               	movlb	0	; select bank0
  6664  0626  0842               	movf	?___ftadd+2,w
  6665  0627  0021               	movlb	1	; select bank1
  6666  0628  00B5               	movwf	(main@displayTemp+2)^(0+128)
  6667                           
  6668                           ;main.c: 229: displayTemp2 = tempCalc(analogs[5]);
  6669  0629  0830               	movf	((main@analogs+1)^(0+128)+10),w
  6670  062A  0020               	movlb	0	; select bank0
  6671  062B  00DE               	movwf	tempCalc@analogValue+1
  6672  062C  0021               	movlb	1	; select bank1
  6673  062D  082F               	movf	(main@analogs^(0+128)+10),w
  6674  062E  0020               	movlb	0	; select bank0
  6675  062F  00DD               	movwf	tempCalc@analogValue
  6676  0630  318E  262B  3181   	fcall	_tempCalc
  6677  0633  0020               	movlb	0	; select bank0
  6678  0634  085D               	movf	?_tempCalc,w
  6679  0635  0021               	movlb	1	; select bank1
  6680  0636  00B6               	movwf	main@displayTemp2^(0+128)
  6681  0637  0020               	movlb	0	; select bank0
  6682  0638  085E               	movf	?_tempCalc+1,w
  6683  0639  0021               	movlb	1	; select bank1
  6684  063A  00B7               	movwf	(main@displayTemp2+1)^(0+128)
  6685  063B  0020               	movlb	0	; select bank0
  6686  063C  085F               	movf	?_tempCalc+2,w
  6687  063D  0021               	movlb	1	; select bank1
  6688  063E  00B8               	movwf	(main@displayTemp2+2)^(0+128)
  6689                           
  6690                           ;main.c: 231: if(loop>127)
  6691  063F  3080               	movlw	128
  6692  0640  0223               	subwf	main@loop^(0+128),w
  6693  0641  1C03               	skipc
  6694  0642  2FB6               	goto	l3243
  6695                           
  6696                           ;main.c: 232: {
  6697                           ;main.c: 233: { LCD_Set_Cursor(0,0); LCD_Write_String("In");};
  6698  0643  01F4               	clrf	LCD_Set_Cursor@y
  6699  0644  3000               	movlw	0
  6700  0645  3197  27C1  3181   	fcall	_LCD_Set_Cursor
  6701  0648  3059               	movlw	low (STR_35| (0+32768))
  6702  0649  00F5               	movwf	LCD_Write_String@a
  6703  064A  3090               	movlw	high (STR_35| (0+32768))
  6704  064B  00F6               	movwf	LCD_Write_String@a+1
  6705  064C  3196  2628  3181   	fcall	_LCD_Write_String
  6706                           
  6707                           ;main.c: 234: LCD_Write_Char(1);
  6708  064F  3001               	movlw	1
  6709  0650  3196  26B5  3181   	fcall	_LCD_Write_Char
  6710                           
  6711                           ;main.c: 235: LCD_Write_String("Solar");
  6712  0653  304A               	movlw	low (STR_36| (0+32768))
  6713  0654  00F5               	movwf	LCD_Write_String@a
  6714  0655  3090               	movlw	high (STR_36| (0+32768))
  6715  0656  00F6               	movwf	LCD_Write_String@a+1
  6716  0657  3196  2628  3181   	fcall	_LCD_Write_String
  6717                           
  6718                           ;main.c: 237: { LCD_Set_Cursor(0,1); LCD_Write_String("Out");};
  6719  065A  01F4               	clrf	LCD_Set_Cursor@y
  6720  065B  0AF4               	incf	LCD_Set_Cursor@y,f
  6721  065C  3000               	movlw	0
  6722  065D  3197  27C1  3181   	fcall	_LCD_Set_Cursor
  6723  0660  3055               	movlw	low (STR_37| (0+32768))
  6724  0661  00F5               	movwf	LCD_Write_String@a
  6725  0662  3090               	movlw	high (STR_37| (0+32768))
  6726  0663  00F6               	movwf	LCD_Write_String@a+1
  6727  0664  3196  2628  3181   	fcall	_LCD_Write_String
  6728                           
  6729                           ;main.c: 238: LCD_Write_Char(1);
  6730  0667  3001               	movlw	1
  6731  0668  3196  26B5  3181   	fcall	_LCD_Write_Char
  6732                           
  6733                           ;main.c: 239: LCD_Write_String("Pool");
  6734  066B  3050               	movlw	low (STR_38| (0+32768))
  6735  066C  00F5               	movwf	LCD_Write_String@a
  6736  066D  3090               	movlw	high (STR_38| (0+32768))
  6737  066E  00F6               	movwf	LCD_Write_String@a+1
  6738  066F  3196  2628  3181   	fcall	_LCD_Write_String
  6739                           
  6740                           ;main.c: 241: if(C_or_F==0)
  6741  0672  0021               	movlb	1	; select bank1
  6742  0673  083C               	movf	main@C_or_F^(0+128),w
  6743  0674  1D03               	btfss	3,2
  6744  0675  2EC7               	goto	l3213
  6745                           
  6746                           ;main.c: 242: {
  6747                           ;main.c: 243: { LCD_Set_Cursor(9,0); LCD_Write_Int((int)displayTemp,-1, 1, 0);};
  6748  0676  01F4               	clrf	LCD_Set_Cursor@y
  6749  0677  3009               	movlw	9
  6750  0678  3197  27C1  3181   	fcall	_LCD_Set_Cursor
  6751  067B  0021               	movlb	1	; select bank1
  6752  067C  0833               	movf	main@displayTemp^(0+128),w
  6753  067D  00F0               	movwf	___fttol@f1
  6754  067E  0834               	movf	(main@displayTemp+1)^(0+128),w
  6755  067F  00F1               	movwf	___fttol@f1+1
  6756  0680  0835               	movf	(main@displayTemp+2)^(0+128),w
  6757  0681  00F2               	movwf	___fttol@f1+2
  6758  0682  318A  2249  3181   	fcall	___fttol
  6759  0685  0871               	movf	?___fttol+1,w
  6760  0686  0020               	movlb	0	; select bank0
  6761  0687  00A1               	movwf	LCD_Write_Int@value+1
  6762  0688  0870               	movf	?___fttol,w
  6763  0689  00A0               	movwf	LCD_Write_Int@value
  6764  068A  01A2               	clrf	LCD_Write_Int@fieldLength
  6765  068B  03A2               	decf	LCD_Write_Int@fieldLength,f
  6766  068C  01A3               	clrf	LCD_Write_Int@numPlaces
  6767  068D  0AA3               	incf	LCD_Write_Int@numPlaces,f
  6768  068E  01A4               	clrf	LCD_Write_Int@sign
  6769  068F  318D  2560  3181   	fcall	_LCD_Write_Int
  6770                           
  6771                           ;main.c: 244: LCD_Write_Char(0);
  6772  0692  3000               	movlw	0
  6773  0693  3196  26B5  3181   	fcall	_LCD_Write_Char
  6774                           
  6775                           ;main.c: 245: LCD_Write_Char('C');
  6776  0696  3043               	movlw	67
  6777  0697  3196  26B5  3181   	fcall	_LCD_Write_Char
  6778                           
  6779                           ;main.c: 246: LCD_Write_Char(' ');
  6780  069A  3020               	movlw	32
  6781  069B  3196  26B5  3181   	fcall	_LCD_Write_Char
  6782                           
  6783                           ;main.c: 248: { LCD_Set_Cursor(9,1); LCD_Write_Int((int)displayTemp2,-1, 1, 0);};
  6784  069E  01F4               	clrf	LCD_Set_Cursor@y
  6785  069F  0AF4               	incf	LCD_Set_Cursor@y,f
  6786  06A0  3009               	movlw	9
  6787  06A1  3197  27C1  3181   	fcall	_LCD_Set_Cursor
  6788  06A4  0021               	movlb	1	; select bank1
  6789  06A5  0836               	movf	main@displayTemp2^(0+128),w
  6790  06A6  00F0               	movwf	___fttol@f1
  6791  06A7  0837               	movf	(main@displayTemp2+1)^(0+128),w
  6792  06A8  00F1               	movwf	___fttol@f1+1
  6793  06A9  0838               	movf	(main@displayTemp2+2)^(0+128),w
  6794  06AA  00F2               	movwf	___fttol@f1+2
  6795  06AB  318A  2249  3181   	fcall	___fttol
  6796  06AE  0871               	movf	?___fttol+1,w
  6797  06AF  0020               	movlb	0	; select bank0
  6798  06B0  00A1               	movwf	LCD_Write_Int@value+1
  6799  06B1  0870               	movf	?___fttol,w
  6800  06B2  00A0               	movwf	LCD_Write_Int@value
  6801  06B3  01A2               	clrf	LCD_Write_Int@fieldLength
  6802  06B4  03A2               	decf	LCD_Write_Int@fieldLength,f
  6803  06B5  01A3               	clrf	LCD_Write_Int@numPlaces
  6804  06B6  0AA3               	incf	LCD_Write_Int@numPlaces,f
  6805  06B7  01A4               	clrf	LCD_Write_Int@sign
  6806  06B8  318D  2560  3181   	fcall	_LCD_Write_Int
  6807                           
  6808                           ;main.c: 249: LCD_Write_Char(0);
  6809  06BB  3000               	movlw	0
  6810  06BC  3196  26B5  3181   	fcall	_LCD_Write_Char
  6811                           
  6812                           ;main.c: 250: LCD_Write_Char('C');
  6813  06BF  3043               	movlw	67
  6814  06C0  3196  26B5  3181   	fcall	_LCD_Write_Char
  6815                           
  6816                           ;main.c: 251: LCD_Write_Char(' ');
  6817  06C3  3020               	movlw	32
  6818  06C4  3196  26B5  3181   	fcall	_LCD_Write_Char
  6819  06C7                     l3213:	
  6820                           
  6821                           ;main.c: 252: }
  6822                           ;main.c: 254: if(C_or_F==1)
  6823  06C7  0021               	movlb	1	; select bank1
  6824  06C8  033C               	decf	main@C_or_F^(0+128),w
  6825  06C9  1D03               	btfss	3,2
  6826  06CA  2FA0               	goto	l3229
  6827                           
  6828                           ;main.c: 255: {
  6829                           ;main.c: 256: displayTemp = displayTemp*9/5+320;
  6830  06CB  3000               	movlw	0
  6831  06CC  0020               	movlb	0	; select bank0
  6832  06CD  00C0               	movwf	___ftadd@f1
  6833  06CE  30A0               	movlw	160
  6834  06CF  00C1               	movwf	___ftadd@f1+1
  6835  06D0  3043               	movlw	67
  6836  06D1  00C2               	movwf	___ftadd@f1+2
  6837  06D2  3000               	movlw	0
  6838  06D3  00B0               	movwf	___ftdiv@f2
  6839  06D4  30A0               	movlw	160
  6840  06D5  00B1               	movwf	___ftdiv@f2+1
  6841  06D6  3040               	movlw	64
  6842  06D7  00B2               	movwf	___ftdiv@f2+2
  6843  06D8  3000               	movlw	0
  6844  06D9  00A0               	movwf	___ftmul@f1
  6845  06DA  3010               	movlw	16
  6846  06DB  00A1               	movwf	___ftmul@f1+1
  6847  06DC  3041               	movlw	65
  6848  06DD  00A2               	movwf	___ftmul@f1+2
  6849  06DE  0021               	movlb	1	; select bank1
  6850  06DF  0833               	movf	main@displayTemp^(0+128),w
  6851  06E0  0020               	movlb	0	; select bank0
  6852  06E1  00A3               	movwf	___ftmul@f2
  6853  06E2  0021               	movlb	1	; select bank1
  6854  06E3  0834               	movf	(main@displayTemp+1)^(0+128),w
  6855  06E4  0020               	movlb	0	; select bank0
  6856  06E5  00A4               	movwf	___ftmul@f2+1
  6857  06E6  0021               	movlb	1	; select bank1
  6858  06E7  0835               	movf	(main@displayTemp+2)^(0+128),w
  6859  06E8  0020               	movlb	0	; select bank0
  6860  06E9  00A5               	movwf	___ftmul@f2+2
  6861  06EA  318C  24AC  3181   	fcall	___ftmul
  6862  06ED  0020               	movlb	0	; select bank0
  6863  06EE  0820               	movf	?___ftmul,w
  6864  06EF  00B3               	movwf	___ftdiv@f1
  6865  06F0  0821               	movf	?___ftmul+1,w
  6866  06F1  00B4               	movwf	___ftdiv@f1+1
  6867  06F2  0822               	movf	?___ftmul+2,w
  6868  06F3  00B5               	movwf	___ftdiv@f1+2
  6869  06F4  318B  2356  3181   	fcall	___ftdiv
  6870  06F7  0020               	movlb	0	; select bank0
  6871  06F8  0830               	movf	?___ftdiv,w
  6872  06F9  00C3               	movwf	___ftadd@f2
  6873  06FA  0831               	movf	?___ftdiv+1,w
  6874  06FB  00C4               	movwf	___ftadd@f2+1
  6875  06FC  0832               	movf	?___ftdiv+2,w
  6876  06FD  00C5               	movwf	___ftadd@f2+2
  6877  06FE  318F  270A  3181   	fcall	___ftadd
  6878  0701  0020               	movlb	0	; select bank0
  6879  0702  0840               	movf	?___ftadd,w
  6880  0703  0021               	movlb	1	; select bank1
  6881  0704  00B3               	movwf	main@displayTemp^(0+128)
  6882  0705  0020               	movlb	0	; select bank0
  6883  0706  0841               	movf	?___ftadd+1,w
  6884  0707  0021               	movlb	1	; select bank1
  6885  0708  00B4               	movwf	(main@displayTemp+1)^(0+128)
  6886  0709  0020               	movlb	0	; select bank0
  6887  070A  0842               	movf	?___ftadd+2,w
  6888  070B  0021               	movlb	1	; select bank1
  6889  070C  00B5               	movwf	(main@displayTemp+2)^(0+128)
  6890                           
  6891                           ;main.c: 257: displayTemp2 = displayTemp2*9/5+320;
  6892  070D  3000               	movlw	0
  6893  070E  0020               	movlb	0	; select bank0
  6894  070F  00C0               	movwf	___ftadd@f1
  6895  0710  30A0               	movlw	160
  6896  0711  00C1               	movwf	___ftadd@f1+1
  6897  0712  3043               	movlw	67
  6898  0713  00C2               	movwf	___ftadd@f1+2
  6899  0714  3000               	movlw	0
  6900  0715  00B0               	movwf	___ftdiv@f2
  6901  0716  30A0               	movlw	160
  6902  0717  00B1               	movwf	___ftdiv@f2+1
  6903  0718  3040               	movlw	64
  6904  0719  00B2               	movwf	___ftdiv@f2+2
  6905  071A  3000               	movlw	0
  6906  071B  00A0               	movwf	___ftmul@f1
  6907  071C  3010               	movlw	16
  6908  071D  00A1               	movwf	___ftmul@f1+1
  6909  071E  3041               	movlw	65
  6910  071F  00A2               	movwf	___ftmul@f1+2
  6911  0720  0021               	movlb	1	; select bank1
  6912  0721  0836               	movf	main@displayTemp2^(0+128),w
  6913  0722  0020               	movlb	0	; select bank0
  6914  0723  00A3               	movwf	___ftmul@f2
  6915  0724  0021               	movlb	1	; select bank1
  6916  0725  0837               	movf	(main@displayTemp2+1)^(0+128),w
  6917  0726  0020               	movlb	0	; select bank0
  6918  0727  00A4               	movwf	___ftmul@f2+1
  6919  0728  0021               	movlb	1	; select bank1
  6920  0729  0838               	movf	(main@displayTemp2+2)^(0+128),w
  6921  072A  0020               	movlb	0	; select bank0
  6922  072B  00A5               	movwf	___ftmul@f2+2
  6923  072C  318C  24AC  3181   	fcall	___ftmul
  6924  072F  0020               	movlb	0	; select bank0
  6925  0730  0820               	movf	?___ftmul,w
  6926  0731  00B3               	movwf	___ftdiv@f1
  6927  0732  0821               	movf	?___ftmul+1,w
  6928  0733  00B4               	movwf	___ftdiv@f1+1
  6929  0734  0822               	movf	?___ftmul+2,w
  6930  0735  00B5               	movwf	___ftdiv@f1+2
  6931  0736  318B  2356  3181   	fcall	___ftdiv
  6932  0739  0020               	movlb	0	; select bank0
  6933  073A  0830               	movf	?___ftdiv,w
  6934  073B  00C3               	movwf	___ftadd@f2
  6935  073C  0831               	movf	?___ftdiv+1,w
  6936  073D  00C4               	movwf	___ftadd@f2+1
  6937  073E  0832               	movf	?___ftdiv+2,w
  6938  073F  00C5               	movwf	___ftadd@f2+2
  6939  0740  318F  270A  3181   	fcall	___ftadd
  6940  0743  0020               	movlb	0	; select bank0
  6941  0744  0840               	movf	?___ftadd,w
  6942  0745  0021               	movlb	1	; select bank1
  6943  0746  00B6               	movwf	main@displayTemp2^(0+128)
  6944  0747  0020               	movlb	0	; select bank0
  6945  0748  0841               	movf	?___ftadd+1,w
  6946  0749  0021               	movlb	1	; select bank1
  6947  074A  00B7               	movwf	(main@displayTemp2+1)^(0+128)
  6948  074B  0020               	movlb	0	; select bank0
  6949  074C  0842               	movf	?___ftadd+2,w
  6950  074D  0021               	movlb	1	; select bank1
  6951  074E  00B8               	movwf	(main@displayTemp2+2)^(0+128)
  6952                           
  6953                           ;main.c: 259: { LCD_Set_Cursor(9,0); LCD_Write_Int((int)displayTemp,-1, 1, 0);};
  6954  074F  01F4               	clrf	LCD_Set_Cursor@y
  6955  0750  3009               	movlw	9
  6956  0751  3197  27C1  3181   	fcall	_LCD_Set_Cursor
  6957  0754  0021               	movlb	1	; select bank1
  6958  0755  0833               	movf	main@displayTemp^(0+128),w
  6959  0756  00F0               	movwf	___fttol@f1
  6960  0757  0834               	movf	(main@displayTemp+1)^(0+128),w
  6961  0758  00F1               	movwf	___fttol@f1+1
  6962  0759  0835               	movf	(main@displayTemp+2)^(0+128),w
  6963  075A  00F2               	movwf	___fttol@f1+2
  6964  075B  318A  2249  3181   	fcall	___fttol
  6965  075E  0871               	movf	?___fttol+1,w
  6966  075F  0020               	movlb	0	; select bank0
  6967  0760  00A1               	movwf	LCD_Write_Int@value+1
  6968  0761  0870               	movf	?___fttol,w
  6969  0762  00A0               	movwf	LCD_Write_Int@value
  6970  0763  01A2               	clrf	LCD_Write_Int@fieldLength
  6971  0764  03A2               	decf	LCD_Write_Int@fieldLength,f
  6972  0765  01A3               	clrf	LCD_Write_Int@numPlaces
  6973  0766  0AA3               	incf	LCD_Write_Int@numPlaces,f
  6974  0767  01A4               	clrf	LCD_Write_Int@sign
  6975  0768  318D  2560  3181   	fcall	_LCD_Write_Int
  6976                           
  6977                           ;main.c: 260: LCD_Write_Char(0);
  6978  076B  3000               	movlw	0
  6979  076C  3196  26B5  3181   	fcall	_LCD_Write_Char
  6980                           
  6981                           ;main.c: 261: LCD_Write_Char('F');
  6982  076F  3046               	movlw	70
  6983  0770  3196  26B5  3181   	fcall	_LCD_Write_Char
  6984                           
  6985                           ;main.c: 262: LCD_Write_Char(' ');
  6986  0773  3020               	movlw	32
  6987  0774  3196  26B5  3181   	fcall	_LCD_Write_Char
  6988                           
  6989                           ;main.c: 264: { LCD_Set_Cursor(9,1); LCD_Write_Int((int)displayTemp2,-1, 1, 0);};
  6990  0777  01F4               	clrf	LCD_Set_Cursor@y
  6991  0778  0AF4               	incf	LCD_Set_Cursor@y,f
  6992  0779  3009               	movlw	9
  6993  077A  3197  27C1  3181   	fcall	_LCD_Set_Cursor
  6994  077D  0021               	movlb	1	; select bank1
  6995  077E  0836               	movf	main@displayTemp2^(0+128),w
  6996  077F  00F0               	movwf	___fttol@f1
  6997  0780  0837               	movf	(main@displayTemp2+1)^(0+128),w
  6998  0781  00F1               	movwf	___fttol@f1+1
  6999  0782  0838               	movf	(main@displayTemp2+2)^(0+128),w
  7000  0783  00F2               	movwf	___fttol@f1+2
  7001  0784  318A  2249  3181   	fcall	___fttol
  7002  0787  0871               	movf	?___fttol+1,w
  7003  0788  0020               	movlb	0	; select bank0
  7004  0789  00A1               	movwf	LCD_Write_Int@value+1
  7005  078A  0870               	movf	?___fttol,w
  7006  078B  00A0               	movwf	LCD_Write_Int@value
  7007  078C  01A2               	clrf	LCD_Write_Int@fieldLength
  7008  078D  03A2               	decf	LCD_Write_Int@fieldLength,f
  7009  078E  01A3               	clrf	LCD_Write_Int@numPlaces
  7010  078F  0AA3               	incf	LCD_Write_Int@numPlaces,f
  7011  0790  01A4               	clrf	LCD_Write_Int@sign
  7012  0791  318D  2560  3181   	fcall	_LCD_Write_Int
  7013                           
  7014                           ;main.c: 265: LCD_Write_Char(0);
  7015  0794  3000               	movlw	0
  7016  0795  3196  26B5  3181   	fcall	_LCD_Write_Char
  7017                           
  7018                           ;main.c: 266: LCD_Write_Char('F');
  7019  0798  3046               	movlw	70
  7020  0799  3196  26B5  3181   	fcall	_LCD_Write_Char
  7021                           
  7022                           ;main.c: 267: LCD_Write_Char(' ');
  7023  079C  3020               	movlw	32
  7024  079D  3196  26B5  3181   	fcall	_LCD_Write_Char
  7025  07A0                     l3229:	
  7026                           
  7027                           ;main.c: 268: }
  7028                           ;main.c: 271: if(choice==0)C_or_F=0;
  7029  07A0  0021               	movlb	1	; select bank1
  7030  07A1  083B               	movf	main@choice^(0+128),w
  7031  07A2  1903               	btfsc	3,2
  7032  07A3  01BC               	clrf	main@C_or_F^(0+128)
  7033                           
  7034                           ;main.c: 273: if(choice==1)C_or_F=1;
  7035  07A4  033B               	decf	main@choice^(0+128),w
  7036  07A5  1D03               	btfss	3,2
  7037  07A6  2FA9               	goto	l3237
  7038  07A7  01BC               	clrf	main@C_or_F^(0+128)
  7039  07A8  0ABC               	incf	main@C_or_F^(0+128),f
  7040  07A9                     l3237:	
  7041                           
  7042                           ;main.c: 275: if(choice==2)C_or_F=1-C_or_F;
  7043  07A9  3002               	movlw	2
  7044  07AA  063B               	xorwf	main@choice^(0+128),w
  7045  07AB  1D03               	btfss	3,2
  7046  07AC  2FB5               	goto	l3241
  7047  07AD  033C               	decf	main@C_or_F^(0+128),w
  7048  07AE  3AFF               	xorlw	255
  7049  07AF  3E01               	addlw	1
  7050  07B0  0020               	movlb	0	; select bank0
  7051  07B1  00E9               	movwf	??_main
  7052  07B2  0869               	movf	??_main,w
  7053  07B3  0021               	movlb	1	; select bank1
  7054  07B4  00BC               	movwf	main@C_or_F^(0+128)
  7055  07B5                     l3241:	
  7056                           
  7057                           ;main.c: 291: loop=0;
  7058  07B5  01A3               	clrf	main@loop^(0+128)
  7059  07B6                     l3243:	
  7060                           
  7061                           ;main.c: 292: }
  7062                           ;main.c: 293: loop+=1;
  7063  07B6  3001               	movlw	1
  7064  07B7  0020               	movlb	0	; select bank0
  7065  07B8  00E9               	movwf	??_main
  7066  07B9  0869               	movf	??_main,w
  7067  07BA  0021               	movlb	1	; select bank1
  7068  07BB  07A3               	addwf	main@loop^(0+128),f
  7069  07BC  2BCB               	goto	l2999
  7070  07BD                     __end_of_main:	
  7071                           
  7072                           	psect	text1
  7073  0E2B                     __ptext1:	
  7074 ;; *************** function _tempCalc *****************
  7075 ;; Defined at:
  7076 ;;		line 4 in file "tempCalc.c"
  7077 ;; Parameters:    Size  Location     Type
  7078 ;;  analogValue     2   61[BANK0 ] int 
  7079 ;; Auto vars:     Size  Location     Type
  7080 ;;  steinhart       3   70[BANK0 ] float 
  7081 ;;  R               3   64[BANK0 ] float 
  7082 ;; Return value:  Size  Location     Type
  7083 ;;                  3   61[BANK0 ] float 
  7084 ;; Registers used:
  7085 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7086 ;; Tracked objects:
  7087 ;;		On entry : 0/0
  7088 ;;		On exit  : 0/0
  7089 ;;		Unchanged: 0/0
  7090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7091 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7092 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7094 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7095 ;;Total ram usage:       12 bytes
  7096 ;; Hardware stack levels used:    1
  7097 ;; Hardware stack levels required when called:    4
  7098 ;; This function calls:
  7099 ;;		___awtoft
  7100 ;;		___ftadd
  7101 ;;		___ftdiv
  7102 ;;		___ftmul
  7103 ;;		___ftsub
  7104 ;;		_log
  7105 ;; This function is called by:
  7106 ;;		_main
  7107 ;; This function uses a non-reentrant model
  7108 ;;
  7109                           
  7110                           
  7111                           ;psect for function _tempCalc
  7112  0E2B                     _tempCalc:	
  7113                           
  7114                           ;tempCalc.c: 6: float R, steinhart;
  7115                           ;tempCalc.c: 8: R = 10020/(1023/(float)analogValue - 1);
  7116                           
  7117                           ;incstack = 0
  7118                           ; Regs used in _tempCalc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7119  0E2B  3000               	movlw	0
  7120  0E2C  0020               	movlb	0	; select bank0
  7121  0E2D  00C0               	movwf	___ftadd@f1
  7122  0E2E  3080               	movlw	128
  7123  0E2F  00C1               	movwf	___ftadd@f1+1
  7124  0E30  30BF               	movlw	191
  7125  0E31  00C2               	movwf	___ftadd@f1+2
  7126  0E32  085E               	movf	tempCalc@analogValue+1,w
  7127  0E33  00F9               	movwf	___awtoft@c+1
  7128  0E34  085D               	movf	tempCalc@analogValue,w
  7129  0E35  00F8               	movwf	___awtoft@c
  7130  0E36  3196  2695  318E   	fcall	___awtoft
  7131  0E39  0878               	movf	?___awtoft,w
  7132  0E3A  0020               	movlb	0	; select bank0
  7133  0E3B  00B0               	movwf	___ftdiv@f2
  7134  0E3C  0879               	movf	?___awtoft+1,w
  7135  0E3D  00B1               	movwf	___ftdiv@f2+1
  7136  0E3E  087A               	movf	?___awtoft+2,w
  7137  0E3F  00B2               	movwf	___ftdiv@f2+2
  7138  0E40  30C0               	movlw	192
  7139  0E41  00B3               	movwf	___ftdiv@f1
  7140  0E42  307F               	movlw	127
  7141  0E43  00B4               	movwf	___ftdiv@f1+1
  7142  0E44  3044               	movlw	68
  7143  0E45  00B5               	movwf	___ftdiv@f1+2
  7144  0E46  318B  2356  318E   	fcall	___ftdiv
  7145  0E49  0020               	movlb	0	; select bank0
  7146  0E4A  0830               	movf	?___ftdiv,w
  7147  0E4B  00C3               	movwf	___ftadd@f2
  7148  0E4C  0831               	movf	?___ftdiv+1,w
  7149  0E4D  00C4               	movwf	___ftadd@f2+1
  7150  0E4E  0832               	movf	?___ftdiv+2,w
  7151  0E4F  00C5               	movwf	___ftadd@f2+2
  7152  0E50  318F  270A  318E   	fcall	___ftadd
  7153  0E53  0020               	movlb	0	; select bank0
  7154  0E54  0840               	movf	?___ftadd,w
  7155  0E55  00E3               	movwf	_tempCalc$988
  7156  0E56  0841               	movf	?___ftadd+1,w
  7157  0E57  00E4               	movwf	_tempCalc$988+1
  7158  0E58  0842               	movf	?___ftadd+2,w
  7159  0E59  00E5               	movwf	_tempCalc$988+2
  7160                           
  7161                           ;tempCalc.c: 6: float R, steinhart;
  7162                           ;tempCalc.c: 8: R = 10020/(1023/(float)analogValue - 1);
  7163  0E5A  0863               	movf	_tempCalc$988,w
  7164  0E5B  00B0               	movwf	___ftdiv@f2
  7165  0E5C  0864               	movf	_tempCalc$988+1,w
  7166  0E5D  00B1               	movwf	___ftdiv@f2+1
  7167  0E5E  0865               	movf	_tempCalc$988+2,w
  7168  0E5F  00B2               	movwf	___ftdiv@f2+2
  7169  0E60  3090               	movlw	144
  7170  0E61  00B3               	movwf	___ftdiv@f1
  7171  0E62  301C               	movlw	28
  7172  0E63  00B4               	movwf	___ftdiv@f1+1
  7173  0E64  3046               	movlw	70
  7174  0E65  00B5               	movwf	___ftdiv@f1+2
  7175  0E66  318B  2356  318E   	fcall	___ftdiv
  7176  0E69  0020               	movlb	0	; select bank0
  7177  0E6A  0830               	movf	?___ftdiv,w
  7178  0E6B  00E0               	movwf	tempCalc@R
  7179  0E6C  0831               	movf	?___ftdiv+1,w
  7180  0E6D  00E1               	movwf	tempCalc@R+1
  7181  0E6E  0832               	movf	?___ftdiv+2,w
  7182  0E6F  00E2               	movwf	tempCalc@R+2
  7183                           
  7184                           ;tempCalc.c: 10: steinhart = R /10061;
  7185  0E70  3034               	movlw	52
  7186  0E71  00B0               	movwf	___ftdiv@f2
  7187  0E72  301D               	movlw	29
  7188  0E73  00B1               	movwf	___ftdiv@f2+1
  7189  0E74  3046               	movlw	70
  7190  0E75  00B2               	movwf	___ftdiv@f2+2
  7191  0E76  0860               	movf	tempCalc@R,w
  7192  0E77  00B3               	movwf	___ftdiv@f1
  7193  0E78  0861               	movf	tempCalc@R+1,w
  7194  0E79  00B4               	movwf	___ftdiv@f1+1
  7195  0E7A  0862               	movf	tempCalc@R+2,w
  7196  0E7B  00B5               	movwf	___ftdiv@f1+2
  7197  0E7C  318B  2356  318E   	fcall	___ftdiv
  7198  0E7F  0020               	movlb	0	; select bank0
  7199  0E80  0830               	movf	?___ftdiv,w
  7200  0E81  00E6               	movwf	tempCalc@steinhart
  7201  0E82  0831               	movf	?___ftdiv+1,w
  7202  0E83  00E7               	movwf	tempCalc@steinhart+1
  7203  0E84  0832               	movf	?___ftdiv+2,w
  7204  0E85  00E8               	movwf	tempCalc@steinhart+2
  7205                           
  7206                           ;tempCalc.c: 11: steinhart = log(steinhart);
  7207  0E86  0866               	movf	tempCalc@steinhart,w
  7208  0E87  00D7               	movwf	log@x
  7209  0E88  0867               	movf	tempCalc@steinhart+1,w
  7210  0E89  00D8               	movwf	log@x+1
  7211  0E8A  0868               	movf	tempCalc@steinhart+2,w
  7212  0E8B  00D9               	movwf	log@x+2
  7213  0E8C  318B  23FF  318E   	fcall	_log
  7214  0E8F  0020               	movlb	0	; select bank0
  7215  0E90  0857               	movf	?_log,w
  7216  0E91  00E6               	movwf	tempCalc@steinhart
  7217  0E92  0858               	movf	?_log+1,w
  7218  0E93  00E7               	movwf	tempCalc@steinhart+1
  7219  0E94  0859               	movf	?_log+2,w
  7220  0E95  00E8               	movwf	tempCalc@steinhart+2
  7221                           
  7222                           ;tempCalc.c: 12: steinhart /= 3995;
  7223  0E96  30B0               	movlw	176
  7224  0E97  00B0               	movwf	___ftdiv@f2
  7225  0E98  3079               	movlw	121
  7226  0E99  00B1               	movwf	___ftdiv@f2+1
  7227  0E9A  3045               	movlw	69
  7228  0E9B  00B2               	movwf	___ftdiv@f2+2
  7229  0E9C  0866               	movf	tempCalc@steinhart,w
  7230  0E9D  00B3               	movwf	___ftdiv@f1
  7231  0E9E  0867               	movf	tempCalc@steinhart+1,w
  7232  0E9F  00B4               	movwf	___ftdiv@f1+1
  7233  0EA0  0868               	movf	tempCalc@steinhart+2,w
  7234  0EA1  00B5               	movwf	___ftdiv@f1+2
  7235  0EA2  318B  2356  318E   	fcall	___ftdiv
  7236  0EA5  0020               	movlb	0	; select bank0
  7237  0EA6  0830               	movf	?___ftdiv,w
  7238  0EA7  00E6               	movwf	tempCalc@steinhart
  7239  0EA8  0831               	movf	?___ftdiv+1,w
  7240  0EA9  00E7               	movwf	tempCalc@steinhart+1
  7241  0EAA  0832               	movf	?___ftdiv+2,w
  7242  0EAB  00E8               	movwf	tempCalc@steinhart+2
  7243                           
  7244                           ;tempCalc.c: 13: steinhart += 1.0 / (25 + 273.15);
  7245  0EAC  30CF               	movlw	207
  7246  0EAD  00C0               	movwf	___ftadd@f1
  7247  0EAE  305B               	movlw	91
  7248  0EAF  00C1               	movwf	___ftadd@f1+1
  7249  0EB0  303B               	movlw	59
  7250  0EB1  00C2               	movwf	___ftadd@f1+2
  7251  0EB2  0866               	movf	tempCalc@steinhart,w
  7252  0EB3  00C3               	movwf	___ftadd@f2
  7253  0EB4  0867               	movf	tempCalc@steinhart+1,w
  7254  0EB5  00C4               	movwf	___ftadd@f2+1
  7255  0EB6  0868               	movf	tempCalc@steinhart+2,w
  7256  0EB7  00C5               	movwf	___ftadd@f2+2
  7257  0EB8  318F  270A  318E   	fcall	___ftadd
  7258  0EBB  0020               	movlb	0	; select bank0
  7259  0EBC  0840               	movf	?___ftadd,w
  7260  0EBD  00E6               	movwf	tempCalc@steinhart
  7261  0EBE  0841               	movf	?___ftadd+1,w
  7262  0EBF  00E7               	movwf	tempCalc@steinhart+1
  7263  0EC0  0842               	movf	?___ftadd+2,w
  7264  0EC1  00E8               	movwf	tempCalc@steinhart+2
  7265                           
  7266                           ;tempCalc.c: 14: steinhart = 1.0 / steinhart;
  7267  0EC2  0866               	movf	tempCalc@steinhart,w
  7268  0EC3  00B0               	movwf	___ftdiv@f2
  7269  0EC4  0867               	movf	tempCalc@steinhart+1,w
  7270  0EC5  00B1               	movwf	___ftdiv@f2+1
  7271  0EC6  0868               	movf	tempCalc@steinhart+2,w
  7272  0EC7  00B2               	movwf	___ftdiv@f2+2
  7273  0EC8  3000               	movlw	0
  7274  0EC9  00B3               	movwf	___ftdiv@f1
  7275  0ECA  3080               	movlw	128
  7276  0ECB  00B4               	movwf	___ftdiv@f1+1
  7277  0ECC  303F               	movlw	63
  7278  0ECD  00B5               	movwf	___ftdiv@f1+2
  7279  0ECE  318B  2356  318E   	fcall	___ftdiv
  7280  0ED1  0020               	movlb	0	; select bank0
  7281  0ED2  0830               	movf	?___ftdiv,w
  7282  0ED3  00E6               	movwf	tempCalc@steinhart
  7283  0ED4  0831               	movf	?___ftdiv+1,w
  7284  0ED5  00E7               	movwf	tempCalc@steinhart+1
  7285  0ED6  0832               	movf	?___ftdiv+2,w
  7286  0ED7  00E8               	movwf	tempCalc@steinhart+2
  7287                           
  7288                           ;tempCalc.c: 15: steinhart -= 273.15;
  7289  0ED8  3093               	movlw	147
  7290  0ED9  00CD               	movwf	___ftsub@f2
  7291  0EDA  3088               	movlw	136
  7292  0EDB  00CE               	movwf	___ftsub@f2+1
  7293  0EDC  3043               	movlw	67
  7294  0EDD  00CF               	movwf	___ftsub@f2+2
  7295  0EDE  0866               	movf	tempCalc@steinhart,w
  7296  0EDF  00D0               	movwf	___ftsub@f1
  7297  0EE0  0867               	movf	tempCalc@steinhart+1,w
  7298  0EE1  00D1               	movwf	___ftsub@f1+1
  7299  0EE2  0868               	movf	tempCalc@steinhart+2,w
  7300  0EE3  00D2               	movwf	___ftsub@f1+2
  7301  0EE4  3196  2677  318E   	fcall	___ftsub
  7302  0EE7  0020               	movlb	0	; select bank0
  7303  0EE8  084D               	movf	?___ftsub,w
  7304  0EE9  00E6               	movwf	tempCalc@steinhart
  7305  0EEA  084E               	movf	?___ftsub+1,w
  7306  0EEB  00E7               	movwf	tempCalc@steinhart+1
  7307  0EEC  084F               	movf	?___ftsub+2,w
  7308  0EED  00E8               	movwf	tempCalc@steinhart+2
  7309                           
  7310                           ;tempCalc.c: 17: steinhart*=10;
  7311  0EEE  3000               	movlw	0
  7312  0EEF  00A0               	movwf	___ftmul@f1
  7313  0EF0  3020               	movlw	32
  7314  0EF1  00A1               	movwf	___ftmul@f1+1
  7315  0EF2  3041               	movlw	65
  7316  0EF3  00A2               	movwf	___ftmul@f1+2
  7317  0EF4  0866               	movf	tempCalc@steinhart,w
  7318  0EF5  00A3               	movwf	___ftmul@f2
  7319  0EF6  0867               	movf	tempCalc@steinhart+1,w
  7320  0EF7  00A4               	movwf	___ftmul@f2+1
  7321  0EF8  0868               	movf	tempCalc@steinhart+2,w
  7322  0EF9  00A5               	movwf	___ftmul@f2+2
  7323  0EFA  318C  24AC         	fcall	___ftmul
  7324  0EFC  0020               	movlb	0	; select bank0
  7325  0EFD  0820               	movf	?___ftmul,w
  7326  0EFE  00E6               	movwf	tempCalc@steinhart
  7327  0EFF  0821               	movf	?___ftmul+1,w
  7328  0F00  00E7               	movwf	tempCalc@steinhart+1
  7329  0F01  0822               	movf	?___ftmul+2,w
  7330  0F02  00E8               	movwf	tempCalc@steinhart+2
  7331                           
  7332                           ;tempCalc.c: 21: return steinhart;
  7333  0F03  0866               	movf	tempCalc@steinhart,w
  7334  0F04  00DD               	movwf	?_tempCalc
  7335  0F05  0867               	movf	tempCalc@steinhart+1,w
  7336  0F06  00DE               	movwf	?_tempCalc+1
  7337  0F07  0868               	movf	tempCalc@steinhart+2,w
  7338  0F08  00DF               	movwf	?_tempCalc+2
  7339  0F09  0008               	return
  7340  0F0A                     __end_of_tempCalc:	
  7341                           
  7342                           	psect	text2
  7343  0BFF                     __ptext2:	
  7344 ;; *************** function _log *****************
  7345 ;; Defined at:
  7346 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\log.c"
  7347 ;; Parameters:    Size  Location     Type
  7348 ;;  x               3   55[BANK0 ] float 
  7349 ;; Auto vars:     Size  Location     Type
  7350 ;;  exponent        2   59[BANK0 ] int 
  7351 ;; Return value:  Size  Location     Type
  7352 ;;                  3   55[BANK0 ] int 
  7353 ;; Registers used:
  7354 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7355 ;; Tracked objects:
  7356 ;;		On entry : 0/0
  7357 ;;		On exit  : 0/0
  7358 ;;		Unchanged: 0/0
  7359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7360 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7361 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7362 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7363 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7364 ;;Total ram usage:        6 bytes
  7365 ;; Hardware stack levels used:    1
  7366 ;; Hardware stack levels required when called:    3
  7367 ;; This function calls:
  7368 ;;		___awtoft
  7369 ;;		___ftadd
  7370 ;;		___ftge
  7371 ;;		___ftmul
  7372 ;;		_eval_poly
  7373 ;;		_frexp
  7374 ;; This function is called by:
  7375 ;;		_tempCalc
  7376 ;; This function uses a non-reentrant model
  7377 ;;
  7378                           
  7379                           
  7380                           ;psect for function _log
  7381  0BFF                     _log:	
  7382                           
  7383                           ;incstack = 0
  7384                           ; Regs used in _log: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7385  0BFF  0020               	movlb	0	; select bank0
  7386  0C00  0857               	movf	log@x,w
  7387  0C01  00F0               	movwf	___ftge@ff1
  7388  0C02  0858               	movf	log@x+1,w
  7389  0C03  00F1               	movwf	___ftge@ff1+1
  7390  0C04  0859               	movf	log@x+2,w
  7391  0C05  00F2               	movwf	___ftge@ff1+2
  7392  0C06  3000               	movlw	0
  7393  0C07  00F3               	movwf	___ftge@ff2
  7394  0C08  3000               	movlw	0
  7395  0C09  00F4               	movwf	___ftge@ff2+1
  7396  0C0A  3000               	movlw	0
  7397  0C0B  00F5               	movwf	___ftge@ff2+2
  7398  0C0C  3197  274B  318B   	fcall	___ftge
  7399  0C0F  1803               	btfsc	3,0
  7400  0C10  2C1D               	goto	l2463
  7401  0C11  3021               	movlw	33
  7402  0C12  0020               	movlb	0	; select bank0
  7403  0C13  00EC               	movwf	_errno
  7404  0C14  3000               	movlw	0
  7405  0C15  00ED               	movwf	_errno+1
  7406  0C16  3000               	movlw	0
  7407  0C17  00D7               	movwf	?_log
  7408  0C18  3000               	movlw	0
  7409  0C19  00D8               	movwf	?_log+1
  7410  0C1A  3000               	movlw	0
  7411  0C1B  00D9               	movwf	?_log+2
  7412  0C1C  0008               	return
  7413  0C1D                     l2463:	
  7414  0C1D  0020               	movlb	0	; select bank0
  7415  0C1E  0859               	movf	log@x+2,w
  7416  0C1F  0458               	iorwf	log@x+1,w
  7417  0C20  0457               	iorwf	log@x,w
  7418  0C21  1D03               	skipz
  7419  0C22  2C2E               	goto	l2469
  7420  0C23  3022               	movlw	34
  7421  0C24  00EC               	movwf	_errno
  7422  0C25  3000               	movlw	0
  7423  0C26  00ED               	movwf	_errno+1
  7424  0C27  3000               	movlw	0
  7425  0C28  00D7               	movwf	?_log
  7426  0C29  3000               	movlw	0
  7427  0C2A  00D8               	movwf	?_log+1
  7428  0C2B  3000               	movlw	0
  7429  0C2C  00D9               	movwf	?_log+2
  7430  0C2D  0008               	return
  7431  0C2E                     l2469:	
  7432  0C2E  3000               	movlw	0
  7433  0C2F  00C0               	movwf	___ftadd@f1
  7434  0C30  3080               	movlw	128
  7435  0C31  00C1               	movwf	___ftadd@f1+1
  7436  0C32  30BF               	movlw	191
  7437  0C33  00C2               	movwf	___ftadd@f1+2
  7438  0C34  3000               	movlw	0
  7439  0C35  00A0               	movwf	___ftmul@f1
  7440  0C36  3000               	movlw	0
  7441  0C37  00A1               	movwf	___ftmul@f1+1
  7442  0C38  3040               	movlw	64
  7443  0C39  00A2               	movwf	___ftmul@f1+2
  7444  0C3A  305B               	movlw	(low (log@exponent| 0))& (0+255)
  7445  0C3B  00DA               	movwf	??_log
  7446  0C3C  085A               	movf	??_log,w
  7447  0C3D  00F3               	movwf	frexp@eptr
  7448  0C3E  0857               	movf	log@x,w
  7449  0C3F  00F0               	movwf	frexp@value
  7450  0C40  0858               	movf	log@x+1,w
  7451  0C41  00F1               	movwf	frexp@value+1
  7452  0C42  0859               	movf	log@x+2,w
  7453  0C43  00F2               	movwf	frexp@value+2
  7454  0C44  3197  2786  318B   	fcall	_frexp
  7455  0C47  0870               	movf	?_frexp,w
  7456  0C48  0020               	movlb	0	; select bank0
  7457  0C49  00A3               	movwf	___ftmul@f2
  7458  0C4A  0871               	movf	?_frexp+1,w
  7459  0C4B  00A4               	movwf	___ftmul@f2+1
  7460  0C4C  0872               	movf	?_frexp+2,w
  7461  0C4D  00A5               	movwf	___ftmul@f2+2
  7462  0C4E  318C  24AC  318B   	fcall	___ftmul
  7463  0C51  0020               	movlb	0	; select bank0
  7464  0C52  0820               	movf	?___ftmul,w
  7465  0C53  00C3               	movwf	___ftadd@f2
  7466  0C54  0821               	movf	?___ftmul+1,w
  7467  0C55  00C4               	movwf	___ftadd@f2+1
  7468  0C56  0822               	movf	?___ftmul+2,w
  7469  0C57  00C5               	movwf	___ftadd@f2+2
  7470  0C58  318F  270A  318B   	fcall	___ftadd
  7471  0C5B  0020               	movlb	0	; select bank0
  7472  0C5C  0840               	movf	?___ftadd,w
  7473  0C5D  00D7               	movwf	log@x
  7474  0C5E  0841               	movf	?___ftadd+1,w
  7475  0C5F  00D8               	movwf	log@x+1
  7476  0C60  0842               	movf	?___ftadd+2,w
  7477  0C61  00D9               	movwf	log@x+2
  7478  0C62  30FF               	movlw	255
  7479  0C63  07DB               	addwf	log@exponent,f
  7480  0C64  30FF               	movlw	255
  7481  0C65  3DDC               	addwfc	log@exponent+1,f
  7482  0C66  0857               	movf	log@x,w
  7483  0C67  00CD               	movwf	eval_poly@x
  7484  0C68  0858               	movf	log@x+1,w
  7485  0C69  00CE               	movwf	eval_poly@x+1
  7486  0C6A  0859               	movf	log@x+2,w
  7487  0C6B  00CF               	movwf	eval_poly@x+2
  7488  0C6C  3000               	movlw	low (log@coeff| (0+32768))
  7489  0C6D  00D0               	movwf	eval_poly@d
  7490  0C6E  3090               	movlw	high (log@coeff| (0+32768))
  7491  0C6F  00D1               	movwf	eval_poly@d+1
  7492  0C70  3008               	movlw	8
  7493  0C71  00D2               	movwf	eval_poly@n
  7494  0C72  3000               	movlw	0
  7495  0C73  00D3               	movwf	eval_poly@n+1
  7496  0C74  3189  2103  318B   	fcall	_eval_poly
  7497  0C77  0020               	movlb	0	; select bank0
  7498  0C78  084D               	movf	?_eval_poly,w
  7499  0C79  00D7               	movwf	log@x
  7500  0C7A  084E               	movf	?_eval_poly+1,w
  7501  0C7B  00D8               	movwf	log@x+1
  7502  0C7C  084F               	movf	?_eval_poly+2,w
  7503  0C7D  00D9               	movwf	log@x+2
  7504  0C7E  0857               	movf	log@x,w
  7505  0C7F  00C0               	movwf	___ftadd@f1
  7506  0C80  0858               	movf	log@x+1,w
  7507  0C81  00C1               	movwf	___ftadd@f1+1
  7508  0C82  0859               	movf	log@x+2,w
  7509  0C83  00C2               	movwf	___ftadd@f1+2
  7510  0C84  3072               	movlw	114
  7511  0C85  00A0               	movwf	___ftmul@f1
  7512  0C86  3031               	movlw	49
  7513  0C87  00A1               	movwf	___ftmul@f1+1
  7514  0C88  303F               	movlw	63
  7515  0C89  00A2               	movwf	___ftmul@f1+2
  7516  0C8A  085C               	movf	log@exponent+1,w
  7517  0C8B  00F9               	movwf	___awtoft@c+1
  7518  0C8C  085B               	movf	log@exponent,w
  7519  0C8D  00F8               	movwf	___awtoft@c
  7520  0C8E  3196  2695  318B   	fcall	___awtoft
  7521  0C91  0878               	movf	?___awtoft,w
  7522  0C92  0020               	movlb	0	; select bank0
  7523  0C93  00A3               	movwf	___ftmul@f2
  7524  0C94  0879               	movf	?___awtoft+1,w
  7525  0C95  00A4               	movwf	___ftmul@f2+1
  7526  0C96  087A               	movf	?___awtoft+2,w
  7527  0C97  00A5               	movwf	___ftmul@f2+2
  7528  0C98  318C  24AC  318B   	fcall	___ftmul
  7529  0C9B  0020               	movlb	0	; select bank0
  7530  0C9C  0820               	movf	?___ftmul,w
  7531  0C9D  00C3               	movwf	___ftadd@f2
  7532  0C9E  0821               	movf	?___ftmul+1,w
  7533  0C9F  00C4               	movwf	___ftadd@f2+1
  7534  0CA0  0822               	movf	?___ftmul+2,w
  7535  0CA1  00C5               	movwf	___ftadd@f2+2
  7536  0CA2  318F  270A         	fcall	___ftadd
  7537  0CA4  0020               	movlb	0	; select bank0
  7538  0CA5  0840               	movf	?___ftadd,w
  7539  0CA6  00D7               	movwf	?_log
  7540  0CA7  0841               	movf	?___ftadd+1,w
  7541  0CA8  00D8               	movwf	?_log+1
  7542  0CA9  0842               	movf	?___ftadd+2,w
  7543  0CAA  00D9               	movwf	?_log+2
  7544  0CAB  0008               	return
  7545  0CAC                     __end_of_log:	
  7546                           
  7547                           	psect	text3
  7548  1786                     __ptext3:	
  7549 ;; *************** function _frexp *****************
  7550 ;; Defined at:
  7551 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\frexp.c"
  7552 ;; Parameters:    Size  Location     Type
  7553 ;;  value           3    0[COMMON] int 
  7554 ;;  eptr            1    3[COMMON] PTR int 
  7555 ;;		 -> log@exponent(2), 
  7556 ;; Auto vars:     Size  Location     Type
  7557 ;;		None
  7558 ;; Return value:  Size  Location     Type
  7559 ;;                  3    0[COMMON] PTR int 
  7560 ;; Registers used:
  7561 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7562 ;; Tracked objects:
  7563 ;;		On entry : 0/0
  7564 ;;		On exit  : 0/0
  7565 ;;		Unchanged: 0/0
  7566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7567 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7569 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7570 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7571 ;;Total ram usage:        6 bytes
  7572 ;; Hardware stack levels used:    1
  7573 ;; This function calls:
  7574 ;;		Nothing
  7575 ;; This function is called by:
  7576 ;;		_log
  7577 ;; This function uses a non-reentrant model
  7578 ;;
  7579                           
  7580                           
  7581                           ;psect for function _frexp
  7582  1786                     _frexp:	
  7583                           
  7584                           ;incstack = 0
  7585                           ; Regs used in _frexp: [wreg+fsr1l+fsr1h+status,2+status,0]
  7586  1786  0872               	movf	frexp@value+2,w
  7587  1787  0471               	iorwf	frexp@value+1,w
  7588  1788  0470               	iorwf	frexp@value,w
  7589  1789  1D03               	skipz
  7590  178A  2F98               	goto	l2295
  7591  178B  0873               	movf	frexp@eptr,w
  7592  178C  0086               	movwf	6
  7593  178D  0187               	clrf	7
  7594  178E  3000               	movlw	0
  7595  178F  3FC0               	movwi [0]fsr1
  7596  1790  3FC1               	movwi [1]fsr1
  7597  1791  3000               	movlw	0
  7598  1792  00F0               	movwf	?_frexp
  7599  1793  3000               	movlw	0
  7600  1794  00F1               	movwf	?_frexp+1
  7601  1795  3000               	movlw	0
  7602  1796  00F2               	movwf	?_frexp+2
  7603  1797  0008               	return
  7604  1798                     l2295:	
  7605  1798  0872               	movf	frexp@value+2,w
  7606  1799  397F               	andlw	127
  7607  179A  00F4               	movwf	??_frexp
  7608  179B  01F5               	clrf	??_frexp+1
  7609  179C  35F4               	lslf	??_frexp,f
  7610  179D  0DF5               	rlf	??_frexp+1,f
  7611  179E  0873               	movf	frexp@eptr,w
  7612  179F  0086               	movwf	6
  7613  17A0  0187               	clrf	7
  7614  17A1  0874               	movf	??_frexp,w
  7615  17A2  3FC0               	movwi [0]fsr1
  7616  17A3  0875               	movf	??_frexp+1,w
  7617  17A4  3FC1               	movwi [1]fsr1
  7618  17A5  0D71               	rlf	frexp@value+1,w
  7619  17A6  0D71               	rlf	frexp@value+1,w
  7620  17A7  3901               	andlw	1
  7621  17A8  00F4               	movwf	??_frexp
  7622  17A9  01F5               	clrf	??_frexp+1
  7623  17AA  0873               	movf	frexp@eptr,w
  7624  17AB  0086               	movwf	6
  7625  17AC  0187               	clrf	7
  7626  17AD  0874               	movf	??_frexp,w
  7627  17AE  0481               	iorwf	1,f
  7628  17AF  3141               	addfsr 1,1
  7629  17B0  0875               	movf	??_frexp+1,w
  7630  17B1  0481               	iorwf	1,f
  7631  17B2  0873               	movf	frexp@eptr,w
  7632  17B3  0086               	movwf	6
  7633  17B4  0187               	clrf	7
  7634  17B5  3082               	movlw	130
  7635  17B6  0781               	addwf	1,f
  7636  17B7  3141               	addfsr 1,1
  7637  17B8  30FF               	movlw	255
  7638  17B9  3D81               	addwfc	1,f
  7639  17BA  317F               	addfsr 1,-1
  7640  17BB  0872               	movf	frexp@value+2,w
  7641  17BC  3980               	andlw	-128
  7642  17BD  383F               	iorlw	63
  7643  17BE  00F2               	movwf	frexp@value+2
  7644  17BF  13F1               	bcf	frexp@value+1,7
  7645  17C0  0008               	return
  7646  17C1                     __end_of_frexp:	
  7647                           
  7648                           	psect	text4
  7649  0903                     __ptext4:	
  7650 ;; *************** function _eval_poly *****************
  7651 ;; Defined at:
  7652 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\evalpoly.c"
  7653 ;; Parameters:    Size  Location     Type
  7654 ;;  x               3   45[BANK0 ] PTR int 
  7655 ;;  d               2   48[BANK0 ] PTR const 
  7656 ;;		 -> log@coeff(27), 
  7657 ;;  n               2   50[BANK0 ] int 
  7658 ;; Auto vars:     Size  Location     Type
  7659 ;;  res             3   52[BANK0 ] int 
  7660 ;; Return value:  Size  Location     Type
  7661 ;;                  3   45[BANK0 ] int 
  7662 ;; Registers used:
  7663 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7664 ;; Tracked objects:
  7665 ;;		On entry : 0/0
  7666 ;;		On exit  : 0/0
  7667 ;;		Unchanged: 0/0
  7668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7669 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7670 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7672 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7673 ;;Total ram usage:       10 bytes
  7674 ;; Hardware stack levels used:    1
  7675 ;; Hardware stack levels required when called:    2
  7676 ;; This function calls:
  7677 ;;		___ftadd
  7678 ;;		___ftmul
  7679 ;;		___wmul
  7680 ;; This function is called by:
  7681 ;;		_log
  7682 ;; This function uses a non-reentrant model
  7683 ;;
  7684                           
  7685                           
  7686                           ;psect for function _eval_poly
  7687  0903                     _eval_poly:	
  7688                           
  7689                           ;incstack = 0
  7690                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7691  0903  0020               	movlb	0	; select bank0
  7692  0904  0853               	movf	eval_poly@n+1,w
  7693  0905  00F1               	movwf	___wmul@multiplier+1
  7694  0906  0852               	movf	eval_poly@n,w
  7695  0907  00F0               	movwf	___wmul@multiplier
  7696  0908  3003               	movlw	3
  7697  0909  00F2               	movwf	___wmul@multiplicand
  7698  090A  3000               	movlw	0
  7699  090B  00F3               	movwf	___wmul@multiplicand+1
  7700  090C  3196  265C  3189   	fcall	___wmul
  7701  090F  0020               	movlb	0	; select bank0
  7702  0910  0850               	movf	eval_poly@d,w
  7703  0911  0770               	addwf	?___wmul,w
  7704  0912  0084               	movwf	4
  7705  0913  0851               	movf	eval_poly@d+1,w
  7706  0914  3D71               	addwfc	?___wmul+1,w
  7707  0915  0085               	movwf	5
  7708  0916  3F00               	moviw [0]fsr0
  7709  0917  00D4               	movwf	eval_poly@res
  7710  0918  3F01               	moviw [1]fsr0
  7711  0919  00D5               	movwf	eval_poly@res+1
  7712  091A  3F02               	moviw [2]fsr0
  7713  091B                     L1:	
  7714  091B  00D6               	movwf	eval_poly@res+2
  7715  091C  0852               	movf	eval_poly@n,w
  7716  091D  0453               	iorwf	eval_poly@n+1,w
  7717  091E  1903               	btfsc	3,2
  7718  091F  295C               	goto	l2313
  7719  0920  30FF               	movlw	255
  7720  0921  07D2               	addwf	eval_poly@n,f
  7721  0922  30FF               	movlw	255
  7722  0923  3DD3               	addwfc	eval_poly@n+1,f
  7723  0924  0853               	movf	eval_poly@n+1,w
  7724  0925  00F1               	movwf	___wmul@multiplier+1
  7725  0926  0852               	movf	eval_poly@n,w
  7726  0927  00F0               	movwf	___wmul@multiplier
  7727  0928  3003               	movlw	3
  7728  0929  00F2               	movwf	___wmul@multiplicand
  7729  092A  3000               	movlw	0
  7730  092B  00F3               	movwf	___wmul@multiplicand+1
  7731  092C  3196  265C  3189   	fcall	___wmul
  7732  092F  0020               	movlb	0	; select bank0
  7733  0930  0850               	movf	eval_poly@d,w
  7734  0931  0770               	addwf	?___wmul,w
  7735  0932  0084               	movwf	4
  7736  0933  0851               	movf	eval_poly@d+1,w
  7737  0934  3D71               	addwfc	?___wmul+1,w
  7738  0935  0085               	movwf	5
  7739  0936  3F00               	moviw [0]fsr0
  7740  0937  00C0               	movwf	___ftadd@f1
  7741  0938  3F01               	moviw [1]fsr0
  7742  0939  00C1               	movwf	___ftadd@f1+1
  7743  093A  3F02               	moviw [2]fsr0
  7744  093B  00C2               	movwf	___ftadd@f1+2
  7745  093C  0854               	movf	eval_poly@res,w
  7746  093D  00A0               	movwf	___ftmul@f1
  7747  093E  0855               	movf	eval_poly@res+1,w
  7748  093F  00A1               	movwf	___ftmul@f1+1
  7749  0940  0856               	movf	eval_poly@res+2,w
  7750  0941  00A2               	movwf	___ftmul@f1+2
  7751  0942  084D               	movf	eval_poly@x,w
  7752  0943  00A3               	movwf	___ftmul@f2
  7753  0944  084E               	movf	eval_poly@x+1,w
  7754  0945  00A4               	movwf	___ftmul@f2+1
  7755  0946  084F               	movf	eval_poly@x+2,w
  7756  0947  00A5               	movwf	___ftmul@f2+2
  7757  0948  318C  24AC  3189   	fcall	___ftmul
  7758  094B  0020               	movlb	0	; select bank0
  7759  094C  0820               	movf	?___ftmul,w
  7760  094D  00C3               	movwf	___ftadd@f2
  7761  094E  0821               	movf	?___ftmul+1,w
  7762  094F  00C4               	movwf	___ftadd@f2+1
  7763  0950  0822               	movf	?___ftmul+2,w
  7764  0951  00C5               	movwf	___ftadd@f2+2
  7765  0952  318F  270A  3189   	fcall	___ftadd
  7766  0955  0020               	movlb	0	; select bank0
  7767  0956  0840               	movf	?___ftadd,w
  7768  0957  00D4               	movwf	eval_poly@res
  7769  0958  0841               	movf	?___ftadd+1,w
  7770  0959  00D5               	movwf	eval_poly@res+1
  7771  095A  0842               	movf	?___ftadd+2,w
  7772  095B  291B               	goto	L1
  7773  095C                     l2313:	
  7774  095C  0854               	movf	eval_poly@res,w
  7775  095D  00CD               	movwf	?_eval_poly
  7776  095E  0855               	movf	eval_poly@res+1,w
  7777  095F  00CE               	movwf	?_eval_poly+1
  7778  0960  0856               	movf	eval_poly@res+2,w
  7779  0961  00CF               	movwf	?_eval_poly+2
  7780  0962  0008               	return
  7781  0963                     __end_of_eval_poly:	
  7782                           
  7783                           	psect	text5
  7784  0CAC                     __ptext5:	
  7785 ;; *************** function ___ftmul *****************
  7786 ;; Defined at:
  7787 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftmul.c"
  7788 ;; Parameters:    Size  Location     Type
  7789 ;;  f1              3    0[BANK0 ] float 
  7790 ;;  f2              3    3[BANK0 ] float 
  7791 ;; Auto vars:     Size  Location     Type
  7792 ;;  f3_as_produc    3   11[BANK0 ] unsigned um
  7793 ;;  sign            1   15[BANK0 ] unsigned char 
  7794 ;;  cntr            1   14[BANK0 ] unsigned char 
  7795 ;;  exp             1   10[BANK0 ] unsigned char 
  7796 ;; Return value:  Size  Location     Type
  7797 ;;                  3    0[BANK0 ] float 
  7798 ;; Registers used:
  7799 ;;		wreg, status,2, status,0, pclath, cstack
  7800 ;; Tracked objects:
  7801 ;;		On entry : 0/0
  7802 ;;		On exit  : 0/0
  7803 ;;		Unchanged: 0/0
  7804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7805 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7806 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7807 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7808 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7809 ;;Total ram usage:       16 bytes
  7810 ;; Hardware stack levels used:    1
  7811 ;; Hardware stack levels required when called:    1
  7812 ;; This function calls:
  7813 ;;		___ftpack
  7814 ;; This function is called by:
  7815 ;;		_tempCalc
  7816 ;;		_main
  7817 ;;		_log
  7818 ;;		_eval_poly
  7819 ;; This function uses a non-reentrant model
  7820 ;;
  7821                           
  7822                           
  7823                           ;psect for function ___ftmul
  7824  0CAC                     ___ftmul:	
  7825                           
  7826                           ;incstack = 0
  7827                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  7828  0CAC  0020               	movlb	0	; select bank0
  7829  0CAD  0820               	movf	___ftmul@f1,w
  7830  0CAE  00A6               	movwf	??___ftmul
  7831  0CAF  0821               	movf	___ftmul@f1+1,w
  7832  0CB0  00A7               	movwf	??___ftmul+1
  7833  0CB1  0822               	movf	___ftmul@f1+2,w
  7834  0CB2  00A8               	movwf	??___ftmul+2
  7835  0CB3  1003               	clrc
  7836  0CB4  0D27               	rlf	??___ftmul+1,w
  7837  0CB5  0D28               	rlf	??___ftmul+2,w
  7838  0CB6  00A9               	movwf	??___ftmul+3
  7839  0CB7  0829               	movf	??___ftmul+3,w
  7840  0CB8  00AA               	movwf	___ftmul@exp
  7841  0CB9  082A               	movf	___ftmul@exp,w
  7842  0CBA  1D03               	btfss	3,2
  7843  0CBB  2CC3               	goto	l2181
  7844  0CBC  3000               	movlw	0
  7845  0CBD  00A0               	movwf	?___ftmul
  7846  0CBE  3000               	movlw	0
  7847  0CBF  00A1               	movwf	?___ftmul+1
  7848  0CC0  3000               	movlw	0
  7849  0CC1  00A2               	movwf	?___ftmul+2
  7850  0CC2  0008               	return
  7851  0CC3                     l2181:	
  7852  0CC3  0823               	movf	___ftmul@f2,w
  7853  0CC4  00A6               	movwf	??___ftmul
  7854  0CC5  0824               	movf	___ftmul@f2+1,w
  7855  0CC6  00A7               	movwf	??___ftmul+1
  7856  0CC7  0825               	movf	___ftmul@f2+2,w
  7857  0CC8  00A8               	movwf	??___ftmul+2
  7858  0CC9  1003               	clrc
  7859  0CCA  0D27               	rlf	??___ftmul+1,w
  7860  0CCB  0D28               	rlf	??___ftmul+2,w
  7861  0CCC  00A9               	movwf	??___ftmul+3
  7862  0CCD  0829               	movf	??___ftmul+3,w
  7863  0CCE  00AF               	movwf	___ftmul@sign
  7864  0CCF  082F               	movf	___ftmul@sign,w
  7865  0CD0  1D03               	btfss	3,2
  7866  0CD1  2CD9               	goto	l2187
  7867  0CD2  3000               	movlw	0
  7868  0CD3  00A0               	movwf	?___ftmul
  7869  0CD4  3000               	movlw	0
  7870  0CD5  00A1               	movwf	?___ftmul+1
  7871  0CD6  3000               	movlw	0
  7872  0CD7  00A2               	movwf	?___ftmul+2
  7873  0CD8  0008               	return
  7874  0CD9                     l2187:	
  7875  0CD9  082F               	movf	___ftmul@sign,w
  7876  0CDA  3E7B               	addlw	123
  7877  0CDB  00A6               	movwf	??___ftmul
  7878  0CDC  0826               	movf	??___ftmul,w
  7879  0CDD  07AA               	addwf	___ftmul@exp,f
  7880  0CDE  0820               	movf	___ftmul@f1,w
  7881  0CDF  00A6               	movwf	??___ftmul
  7882  0CE0  0821               	movf	___ftmul@f1+1,w
  7883  0CE1  00A7               	movwf	??___ftmul+1
  7884  0CE2  0822               	movf	___ftmul@f1+2,w
  7885  0CE3  00A8               	movwf	??___ftmul+2
  7886  0CE4  3010               	movlw	16
  7887  0CE5                     u2205:	
  7888  0CE5  36A8               	lsrf	??___ftmul+2,f
  7889  0CE6  0CA7               	rrf	??___ftmul+1,f
  7890  0CE7  0CA6               	rrf	??___ftmul,f
  7891  0CE8  0B89               	decfsz	9,f
  7892  0CE9  2CE5               	goto	u2205
  7893  0CEA  0826               	movf	??___ftmul,w
  7894  0CEB  00A9               	movwf	??___ftmul+3
  7895  0CEC  0829               	movf	??___ftmul+3,w
  7896  0CED  00AF               	movwf	___ftmul@sign
  7897  0CEE  0823               	movf	___ftmul@f2,w
  7898  0CEF  00A6               	movwf	??___ftmul
  7899  0CF0  0824               	movf	___ftmul@f2+1,w
  7900  0CF1  00A7               	movwf	??___ftmul+1
  7901  0CF2  0825               	movf	___ftmul@f2+2,w
  7902  0CF3  00A8               	movwf	??___ftmul+2
  7903  0CF4  3010               	movlw	16
  7904  0CF5                     u2215:	
  7905  0CF5  36A8               	lsrf	??___ftmul+2,f
  7906  0CF6  0CA7               	rrf	??___ftmul+1,f
  7907  0CF7  0CA6               	rrf	??___ftmul,f
  7908  0CF8  0B89               	decfsz	9,f
  7909  0CF9  2CF5               	goto	u2215
  7910  0CFA  0826               	movf	??___ftmul,w
  7911  0CFB  00A9               	movwf	??___ftmul+3
  7912  0CFC  0829               	movf	??___ftmul+3,w
  7913  0CFD  06AF               	xorwf	___ftmul@sign,f
  7914  0CFE  3080               	movlw	128
  7915  0CFF  00A6               	movwf	??___ftmul
  7916  0D00  0826               	movf	??___ftmul,w
  7917  0D01  05AF               	andwf	___ftmul@sign,f
  7918  0D02  17A1               	bsf	___ftmul@f1+1,7
  7919  0D03  17A4               	bsf	___ftmul@f2+1,7
  7920  0D04  30FF               	movlw	255
  7921  0D05  05A3               	andwf	___ftmul@f2,f
  7922  0D06  30FF               	movlw	255
  7923  0D07  05A4               	andwf	___ftmul@f2+1,f
  7924  0D08  3000               	movlw	0
  7925  0D09  05A5               	andwf	___ftmul@f2+2,f
  7926  0D0A  3000               	movlw	0
  7927  0D0B  00AB               	movwf	___ftmul@f3_as_product
  7928  0D0C  3000               	movlw	0
  7929  0D0D  00AC               	movwf	___ftmul@f3_as_product+1
  7930  0D0E  3000               	movlw	0
  7931  0D0F  00AD               	movwf	___ftmul@f3_as_product+2
  7932  0D10  3007               	movlw	7
  7933  0D11  00A6               	movwf	??___ftmul
  7934  0D12  0826               	movf	??___ftmul,w
  7935  0D13  00AE               	movwf	___ftmul@cntr
  7936  0D14                     l2199:	
  7937  0D14  1C20               	btfss	___ftmul@f1,0
  7938  0D15  2D1C               	goto	l2203
  7939  0D16  0823               	movf	___ftmul@f2,w
  7940  0D17  07AB               	addwf	___ftmul@f3_as_product,f
  7941  0D18  0824               	movf	___ftmul@f2+1,w
  7942  0D19  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  7943  0D1A  0825               	movf	___ftmul@f2+2,w
  7944  0D1B  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  7945  0D1C                     l2203:	
  7946  0D1C  3001               	movlw	1
  7947  0D1D                     u2235:	
  7948  0D1D  36A2               	lsrf	___ftmul@f1+2,f
  7949  0D1E  0CA1               	rrf	___ftmul@f1+1,f
  7950  0D1F  0CA0               	rrf	___ftmul@f1,f
  7951  0D20  0B89               	decfsz	9,f
  7952  0D21  2D1D               	goto	u2235
  7953  0D22  3001               	movlw	1
  7954  0D23                     u2245:	
  7955  0D23  35A3               	lslf	___ftmul@f2,f
  7956  0D24  0DA4               	rlf	___ftmul@f2+1,f
  7957  0D25  0DA5               	rlf	___ftmul@f2+2,f
  7958  0D26  0B89               	decfsz	9,f
  7959  0D27  2D23               	goto	u2245
  7960  0D28  3001               	movlw	1
  7961  0D29  02AE               	subwf	___ftmul@cntr,f
  7962  0D2A  1D03               	btfss	3,2
  7963  0D2B  2D14               	goto	l2199
  7964  0D2C  3009               	movlw	9
  7965  0D2D  00A6               	movwf	??___ftmul
  7966  0D2E  0826               	movf	??___ftmul,w
  7967  0D2F  00AE               	movwf	___ftmul@cntr
  7968  0D30                     l2211:	
  7969  0D30  1C20               	btfss	___ftmul@f1,0
  7970  0D31  2D38               	goto	l2215
  7971  0D32  0823               	movf	___ftmul@f2,w
  7972  0D33  07AB               	addwf	___ftmul@f3_as_product,f
  7973  0D34  0824               	movf	___ftmul@f2+1,w
  7974  0D35  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  7975  0D36  0825               	movf	___ftmul@f2+2,w
  7976  0D37  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  7977  0D38                     l2215:	
  7978  0D38  3001               	movlw	1
  7979  0D39                     u2275:	
  7980  0D39  36A2               	lsrf	___ftmul@f1+2,f
  7981  0D3A  0CA1               	rrf	___ftmul@f1+1,f
  7982  0D3B  0CA0               	rrf	___ftmul@f1,f
  7983  0D3C  0B89               	decfsz	9,f
  7984  0D3D  2D39               	goto	u2275
  7985  0D3E  3001               	movlw	1
  7986  0D3F                     u2285:	
  7987  0D3F  36AD               	lsrf	___ftmul@f3_as_product+2,f
  7988  0D40  0CAC               	rrf	___ftmul@f3_as_product+1,f
  7989  0D41  0CAB               	rrf	___ftmul@f3_as_product,f
  7990  0D42  0B89               	decfsz	9,f
  7991  0D43  2D3F               	goto	u2285
  7992  0D44  3001               	movlw	1
  7993  0D45  02AE               	subwf	___ftmul@cntr,f
  7994  0D46  1D03               	btfss	3,2
  7995  0D47  2D30               	goto	l2211
  7996  0D48  082B               	movf	___ftmul@f3_as_product,w
  7997  0D49  00F0               	movwf	___ftpack@arg
  7998  0D4A  082C               	movf	___ftmul@f3_as_product+1,w
  7999  0D4B  00F1               	movwf	___ftpack@arg+1
  8000  0D4C  082D               	movf	___ftmul@f3_as_product+2,w
  8001  0D4D  00F2               	movwf	___ftpack@arg+2
  8002  0D4E  082A               	movf	___ftmul@exp,w
  8003  0D4F  00A6               	movwf	??___ftmul
  8004  0D50  0826               	movf	??___ftmul,w
  8005  0D51  00F3               	movwf	___ftpack@exp
  8006  0D52  082F               	movf	___ftmul@sign,w
  8007  0D53  00A7               	movwf	??___ftmul+1
  8008  0D54  0827               	movf	??___ftmul+1,w
  8009  0D55  00F4               	movwf	___ftpack@sign
  8010  0D56  3189  2163         	fcall	___ftpack
  8011  0D58  0870               	movf	?___ftpack,w
  8012  0D59  0020               	movlb	0	; select bank0
  8013  0D5A  00A0               	movwf	?___ftmul
  8014  0D5B  0871               	movf	?___ftpack+1,w
  8015  0D5C  00A1               	movwf	?___ftmul+1
  8016  0D5D  0872               	movf	?___ftpack+2,w
  8017  0D5E  00A2               	movwf	?___ftmul+2
  8018  0D5F  0008               	return
  8019  0D60                     __end_of___ftmul:	
  8020                           
  8021                           	psect	text6
  8022  174B                     __ptext6:	
  8023 ;; *************** function ___ftge *****************
  8024 ;; Defined at:
  8025 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftge.c"
  8026 ;; Parameters:    Size  Location     Type
  8027 ;;  ff1             3    0[COMMON] float 
  8028 ;;  ff2             3    3[COMMON] float 
  8029 ;; Auto vars:     Size  Location     Type
  8030 ;;		None
  8031 ;; Return value:  Size  Location     Type
  8032 ;;		None               void
  8033 ;; Registers used:
  8034 ;;		wreg, status,2, status,0
  8035 ;; Tracked objects:
  8036 ;;		On entry : 0/0
  8037 ;;		On exit  : 0/0
  8038 ;;		Unchanged: 0/0
  8039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8040 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8042 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8043 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8044 ;;Total ram usage:        9 bytes
  8045 ;; Hardware stack levels used:    1
  8046 ;; This function calls:
  8047 ;;		Nothing
  8048 ;; This function is called by:
  8049 ;;		_log
  8050 ;; This function uses a non-reentrant model
  8051 ;;
  8052                           
  8053                           
  8054                           ;psect for function ___ftge
  8055  174B                     ___ftge:	
  8056                           
  8057                           ;incstack = 0
  8058                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  8059  174B  1FF2               	btfss	___ftge@ff1+2,7
  8060  174C  2F61               	goto	l2271
  8061  174D  0970               	comf	___ftge@ff1,w
  8062  174E  00F6               	movwf	??___ftge
  8063  174F  0971               	comf	___ftge@ff1+1,w
  8064  1750  00F7               	movwf	??___ftge+1
  8065  1751  0972               	comf	___ftge@ff1+2,w
  8066  1752  00F8               	movwf	??___ftge+2
  8067  1753  0AF6               	incf	??___ftge,f
  8068  1754  1903               	skipnz
  8069  1755  0AF7               	incf	??___ftge+1,f
  8070  1756  1903               	skipnz
  8071  1757  0AF8               	incf	??___ftge+2,f
  8072  1758  3000               	movlw	0
  8073  1759  0776               	addwf	??___ftge,w
  8074  175A  00F0               	movwf	___ftge@ff1
  8075  175B  3000               	movlw	0
  8076  175C  3D77               	addwfc	??___ftge+1,w
  8077  175D  00F1               	movwf	___ftge@ff1+1
  8078  175E  3080               	movlw	128
  8079  175F  3D78               	addwfc	??___ftge+2,w
  8080  1760  00F2               	movwf	___ftge@ff1+2
  8081  1761                     l2271:	
  8082  1761  1FF5               	btfss	___ftge@ff2+2,7
  8083  1762  2F77               	goto	l2275
  8084  1763  0973               	comf	___ftge@ff2,w
  8085  1764  00F6               	movwf	??___ftge
  8086  1765  0974               	comf	___ftge@ff2+1,w
  8087  1766  00F7               	movwf	??___ftge+1
  8088  1767  0975               	comf	___ftge@ff2+2,w
  8089  1768  00F8               	movwf	??___ftge+2
  8090  1769  0AF6               	incf	??___ftge,f
  8091  176A  1903               	skipnz
  8092  176B  0AF7               	incf	??___ftge+1,f
  8093  176C  1903               	skipnz
  8094  176D  0AF8               	incf	??___ftge+2,f
  8095  176E  3000               	movlw	0
  8096  176F  0776               	addwf	??___ftge,w
  8097  1770  00F3               	movwf	___ftge@ff2
  8098  1771  3000               	movlw	0
  8099  1772  3D77               	addwfc	??___ftge+1,w
  8100  1773  00F4               	movwf	___ftge@ff2+1
  8101  1774  3080               	movlw	128
  8102  1775  3D78               	addwfc	??___ftge+2,w
  8103  1776  00F5               	movwf	___ftge@ff2+2
  8104  1777                     l2275:	
  8105  1777  3080               	movlw	128
  8106  1778  06F2               	xorwf	___ftge@ff1+2,f
  8107  1779  3080               	movlw	128
  8108  177A  06F5               	xorwf	___ftge@ff2+2,f
  8109  177B  0875               	movf	___ftge@ff2+2,w
  8110  177C  0272               	subwf	___ftge@ff1+2,w
  8111  177D  1D03               	skipz
  8112  177E  0008               	return
  8113  177F  0874               	movf	___ftge@ff2+1,w
  8114  1780  0271               	subwf	___ftge@ff1+1,w
  8115  1781  1D03               	skipz
  8116  1782  0008               	return
  8117  1783  0873               	movf	___ftge@ff2,w
  8118  1784  0270               	subwf	___ftge@ff1,w
  8119  1785  0008               	return
  8120  1786                     __end_of___ftge:	
  8121                           
  8122                           	psect	text7
  8123  1695                     __ptext7:	
  8124 ;; *************** function ___awtoft *****************
  8125 ;; Defined at:
  8126 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awtoft.c"
  8127 ;; Parameters:    Size  Location     Type
  8128 ;;  c               2    8[COMMON] int 
  8129 ;; Auto vars:     Size  Location     Type
  8130 ;;  sign            1   13[COMMON] unsigned char 
  8131 ;; Return value:  Size  Location     Type
  8132 ;;                  3    8[COMMON] float 
  8133 ;; Registers used:
  8134 ;;		wreg, status,2, status,0, pclath, cstack
  8135 ;; Tracked objects:
  8136 ;;		On entry : 0/0
  8137 ;;		On exit  : 0/0
  8138 ;;		Unchanged: 0/0
  8139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8140 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8141 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8142 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8143 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8144 ;;Total ram usage:        6 bytes
  8145 ;; Hardware stack levels used:    1
  8146 ;; Hardware stack levels required when called:    1
  8147 ;; This function calls:
  8148 ;;		___ftpack
  8149 ;; This function is called by:
  8150 ;;		_tempCalc
  8151 ;;		_log
  8152 ;; This function uses a non-reentrant model
  8153 ;;
  8154                           
  8155                           
  8156                           ;psect for function ___awtoft
  8157  1695                     ___awtoft:	
  8158                           
  8159                           ;incstack = 0
  8160                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  8161  1695  01FD               	clrf	___awtoft@sign
  8162  1696  1FF9               	btfss	___awtoft@c+1,7
  8163  1697  2E9F               	goto	l2263
  8164  1698  09F8               	comf	___awtoft@c,f
  8165  1699  09F9               	comf	___awtoft@c+1,f
  8166  169A  0AF8               	incf	___awtoft@c,f
  8167  169B  1903               	skipnz
  8168  169C  0AF9               	incf	___awtoft@c+1,f
  8169  169D  01FD               	clrf	___awtoft@sign
  8170  169E  0AFD               	incf	___awtoft@sign,f
  8171  169F                     l2263:	
  8172  169F  0878               	movf	___awtoft@c,w
  8173  16A0  00F0               	movwf	___ftpack@arg
  8174  16A1  0879               	movf	___awtoft@c+1,w
  8175  16A2  00F1               	movwf	___ftpack@arg+1
  8176  16A3  01F2               	clrf	___ftpack@arg+2
  8177  16A4  308E               	movlw	142
  8178  16A5  00FB               	movwf	??___awtoft
  8179  16A6  087B               	movf	??___awtoft,w
  8180  16A7  00F3               	movwf	___ftpack@exp
  8181  16A8  087D               	movf	___awtoft@sign,w
  8182  16A9  00FC               	movwf	??___awtoft+1
  8183  16AA  087C               	movf	??___awtoft+1,w
  8184  16AB  00F4               	movwf	___ftpack@sign
  8185  16AC  3189  2163         	fcall	___ftpack
  8186  16AE  0870               	movf	?___ftpack,w
  8187  16AF  00F8               	movwf	?___awtoft
  8188  16B0  0871               	movf	?___ftpack+1,w
  8189  16B1  00F9               	movwf	?___awtoft+1
  8190  16B2  0872               	movf	?___ftpack+2,w
  8191  16B3  00FA               	movwf	?___awtoft+2
  8192  16B4  0008               	return
  8193  16B5                     __end_of___awtoft:	
  8194                           
  8195                           	psect	text8
  8196  1677                     __ptext8:	
  8197 ;; *************** function ___ftsub *****************
  8198 ;; Defined at:
  8199 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftsub.c"
  8200 ;; Parameters:    Size  Location     Type
  8201 ;;  f2              3   45[BANK0 ] float 
  8202 ;;  f1              3   48[BANK0 ] float 
  8203 ;; Auto vars:     Size  Location     Type
  8204 ;;		None
  8205 ;; Return value:  Size  Location     Type
  8206 ;;                  3   45[BANK0 ] float 
  8207 ;; Registers used:
  8208 ;;		wreg, status,2, status,0, pclath, cstack
  8209 ;; Tracked objects:
  8210 ;;		On entry : 0/0
  8211 ;;		On exit  : 0/0
  8212 ;;		Unchanged: 0/0
  8213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8214 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8217 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8218 ;;Total ram usage:        6 bytes
  8219 ;; Hardware stack levels used:    1
  8220 ;; Hardware stack levels required when called:    2
  8221 ;; This function calls:
  8222 ;;		___ftadd
  8223 ;; This function is called by:
  8224 ;;		_tempCalc
  8225 ;; This function uses a non-reentrant model
  8226 ;;
  8227                           
  8228                           
  8229                           ;psect for function ___ftsub
  8230  1677                     ___ftsub:	
  8231                           
  8232                           ;incstack = 0
  8233                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  8234  1677  0020               	movlb	0	; select bank0
  8235  1678  084F               	movf	___ftsub@f2+2,w
  8236  1679  044E               	iorwf	___ftsub@f2+1,w
  8237  167A  044D               	iorwf	___ftsub@f2,w
  8238  167B  1903               	skipnz
  8239  167C  2E7F               	goto	l2647
  8240  167D  3080               	movlw	128
  8241  167E  06CF               	xorwf	___ftsub@f2+2,f
  8242  167F                     l2647:	
  8243  167F  0850               	movf	___ftsub@f1,w
  8244  1680  00C0               	movwf	___ftadd@f1
  8245  1681  0851               	movf	___ftsub@f1+1,w
  8246  1682  00C1               	movwf	___ftadd@f1+1
  8247  1683  0852               	movf	___ftsub@f1+2,w
  8248  1684  00C2               	movwf	___ftadd@f1+2
  8249  1685  084D               	movf	___ftsub@f2,w
  8250  1686  00C3               	movwf	___ftadd@f2
  8251  1687  084E               	movf	___ftsub@f2+1,w
  8252  1688  00C4               	movwf	___ftadd@f2+1
  8253  1689  084F               	movf	___ftsub@f2+2,w
  8254  168A  00C5               	movwf	___ftadd@f2+2
  8255  168B  318F  270A         	fcall	___ftadd
  8256  168D  0020               	movlb	0	; select bank0
  8257  168E  0840               	movf	?___ftadd,w
  8258  168F  00CD               	movwf	?___ftsub
  8259  1690  0841               	movf	?___ftadd+1,w
  8260  1691  00CE               	movwf	?___ftsub+1
  8261  1692  0842               	movf	?___ftadd+2,w
  8262  1693  00CF               	movwf	?___ftsub+2
  8263  1694  0008               	return
  8264  1695                     __end_of___ftsub:	
  8265                           
  8266                           	psect	text9
  8267  0F0A                     __ptext9:	
  8268 ;; *************** function ___ftadd *****************
  8269 ;; Defined at:
  8270 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftadd.c"
  8271 ;; Parameters:    Size  Location     Type
  8272 ;;  f1              3   32[BANK0 ] float 
  8273 ;;  f2              3   35[BANK0 ] float 
  8274 ;; Auto vars:     Size  Location     Type
  8275 ;;  exp1            1   44[BANK0 ] unsigned char 
  8276 ;;  exp2            1   43[BANK0 ] unsigned char 
  8277 ;;  sign            1   42[BANK0 ] unsigned char 
  8278 ;; Return value:  Size  Location     Type
  8279 ;;                  3   32[BANK0 ] float 
  8280 ;; Registers used:
  8281 ;;		wreg, status,2, status,0, pclath, cstack
  8282 ;; Tracked objects:
  8283 ;;		On entry : 0/0
  8284 ;;		On exit  : 0/0
  8285 ;;		Unchanged: 0/0
  8286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8287 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8288 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8289 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8290 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8291 ;;Total ram usage:       13 bytes
  8292 ;; Hardware stack levels used:    1
  8293 ;; Hardware stack levels required when called:    1
  8294 ;; This function calls:
  8295 ;;		___ftpack
  8296 ;; This function is called by:
  8297 ;;		_tempCalc
  8298 ;;		_main
  8299 ;;		___ftsub
  8300 ;;		_log
  8301 ;;		_eval_poly
  8302 ;; This function uses a non-reentrant model
  8303 ;;
  8304                           
  8305                           
  8306                           ;psect for function ___ftadd
  8307  0F0A                     ___ftadd:	
  8308                           
  8309                           ;incstack = 0
  8310                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  8311  0F0A  0020               	movlb	0	; select bank0
  8312  0F0B  0840               	movf	___ftadd@f1,w
  8313  0F0C  00C6               	movwf	??___ftadd
  8314  0F0D  0841               	movf	___ftadd@f1+1,w
  8315  0F0E  00C7               	movwf	??___ftadd+1
  8316  0F0F  0842               	movf	___ftadd@f1+2,w
  8317  0F10  00C8               	movwf	??___ftadd+2
  8318  0F11  1003               	clrc
  8319  0F12  0D47               	rlf	??___ftadd+1,w
  8320  0F13  0D48               	rlf	??___ftadd+2,w
  8321  0F14  00C9               	movwf	??___ftadd+3
  8322  0F15  0849               	movf	??___ftadd+3,w
  8323  0F16  00CC               	movwf	___ftadd@exp1
  8324  0F17  0843               	movf	___ftadd@f2,w
  8325  0F18  00C6               	movwf	??___ftadd
  8326  0F19  0844               	movf	___ftadd@f2+1,w
  8327  0F1A  00C7               	movwf	??___ftadd+1
  8328  0F1B  0845               	movf	___ftadd@f2+2,w
  8329  0F1C  00C8               	movwf	??___ftadd+2
  8330  0F1D  1003               	clrc
  8331  0F1E  0D47               	rlf	??___ftadd+1,w
  8332  0F1F  0D48               	rlf	??___ftadd+2,w
  8333  0F20  00C9               	movwf	??___ftadd+3
  8334  0F21  0849               	movf	??___ftadd+3,w
  8335  0F22  00CB               	movwf	___ftadd@exp2
  8336  0F23  084C               	movf	___ftadd@exp1,w
  8337  0F24  1903               	btfsc	3,2
  8338  0F25  2F32               	goto	l2111
  8339  0F26  084B               	movf	___ftadd@exp2,w
  8340  0F27  024C               	subwf	___ftadd@exp1,w
  8341  0F28  1803               	skipnc
  8342  0F29  2F39               	goto	l2115
  8343  0F2A  034C               	decf	___ftadd@exp1,w
  8344  0F2B  3AFF               	xorlw	255
  8345  0F2C  074B               	addwf	___ftadd@exp2,w
  8346  0F2D  00C6               	movwf	??___ftadd
  8347  0F2E  3019               	movlw	25
  8348  0F2F  0246               	subwf	??___ftadd,w
  8349  0F30  1C03               	skipc
  8350  0F31  2F39               	goto	l2115
  8351  0F32                     l2111:	
  8352  0F32  0843               	movf	___ftadd@f2,w
  8353  0F33  00C0               	movwf	?___ftadd
  8354  0F34  0844               	movf	___ftadd@f2+1,w
  8355  0F35  00C1               	movwf	?___ftadd+1
  8356  0F36  0845               	movf	___ftadd@f2+2,w
  8357  0F37  00C2               	movwf	?___ftadd+2
  8358  0F38  0008               	return
  8359  0F39                     l2115:	
  8360  0F39  084B               	movf	___ftadd@exp2,w
  8361  0F3A  1903               	btfsc	3,2
  8362  0F3B  0008               	return
  8363  0F3C  084C               	movf	___ftadd@exp1,w
  8364  0F3D  024B               	subwf	___ftadd@exp2,w
  8365  0F3E  1803               	skipnc
  8366  0F3F  2F48               	goto	l2121
  8367  0F40  034B               	decf	___ftadd@exp2,w
  8368  0F41  3AFF               	xorlw	255
  8369  0F42  074C               	addwf	___ftadd@exp1,w
  8370  0F43  00C6               	movwf	??___ftadd
  8371  0F44  3019               	movlw	25
  8372  0F45  0246               	subwf	??___ftadd,w
  8373  0F46  1803               	btfsc	3,0
  8374  0F47  0008               	return
  8375  0F48                     l2121:	
  8376  0F48  3006               	movlw	6
  8377  0F49  00C6               	movwf	??___ftadd
  8378  0F4A  0846               	movf	??___ftadd,w
  8379  0F4B  00CA               	movwf	___ftadd@sign
  8380  0F4C  1BC2               	btfsc	___ftadd@f1+2,7
  8381  0F4D  17CA               	bsf	___ftadd@sign,7
  8382  0F4E  1BC5               	btfsc	___ftadd@f2+2,7
  8383  0F4F  174A               	bsf	___ftadd@sign,6
  8384  0F50  17C1               	bsf	___ftadd@f1+1,7
  8385  0F51  30FF               	movlw	255
  8386  0F52  05C0               	andwf	___ftadd@f1,f
  8387  0F53  30FF               	movlw	255
  8388  0F54  05C1               	andwf	___ftadd@f1+1,f
  8389  0F55  3000               	movlw	0
  8390  0F56  05C2               	andwf	___ftadd@f1+2,f
  8391  0F57  17C4               	bsf	___ftadd@f2+1,7
  8392  0F58  30FF               	movlw	255
  8393  0F59  05C3               	andwf	___ftadd@f2,f
  8394  0F5A  30FF               	movlw	255
  8395  0F5B  05C4               	andwf	___ftadd@f2+1,f
  8396  0F5C  3000               	movlw	0
  8397  0F5D  05C5               	andwf	___ftadd@f2+2,f
  8398  0F5E  084B               	movf	___ftadd@exp2,w
  8399  0F5F  024C               	subwf	___ftadd@exp1,w
  8400  0F60  1803               	skipnc
  8401  0F61  2F84               	goto	l2143
  8402  0F62                     l2133:	
  8403  0F62  3001               	movlw	1
  8404  0F63                     u2045:	
  8405  0F63  35C3               	lslf	___ftadd@f2,f
  8406  0F64  0DC4               	rlf	___ftadd@f2+1,f
  8407  0F65  0DC5               	rlf	___ftadd@f2+2,f
  8408  0F66  0B89               	decfsz	9,f
  8409  0F67  2F63               	goto	u2045
  8410  0F68  3001               	movlw	1
  8411  0F69  02CB               	subwf	___ftadd@exp2,f
  8412  0F6A  084B               	movf	___ftadd@exp2,w
  8413  0F6B  064C               	xorwf	___ftadd@exp1,w
  8414  0F6C  1903               	skipnz
  8415  0F6D  2F7F               	goto	l2141
  8416  0F6E  3001               	movlw	1
  8417  0F6F  02CA               	subwf	___ftadd@sign,f
  8418  0F70  084A               	movf	___ftadd@sign,w
  8419  0F71  3907               	andlw	7
  8420  0F72  1903               	btfsc	3,2
  8421  0F73  2F7F               	goto	l2141
  8422  0F74  2F62               	goto	l2133
  8423  0F75                     l2139:	
  8424  0F75  3001               	movlw	1
  8425  0F76                     u2075:	
  8426  0F76  36C2               	lsrf	___ftadd@f1+2,f
  8427  0F77  0CC1               	rrf	___ftadd@f1+1,f
  8428  0F78  0CC0               	rrf	___ftadd@f1,f
  8429  0F79  0B89               	decfsz	9,f
  8430  0F7A  2F76               	goto	u2075
  8431  0F7B  3001               	movlw	1
  8432  0F7C  00C6               	movwf	??___ftadd
  8433  0F7D  0846               	movf	??___ftadd,w
  8434  0F7E  07CC               	addwf	___ftadd@exp1,f
  8435  0F7F                     l2141:	
  8436  0F7F  084C               	movf	___ftadd@exp1,w
  8437  0F80  064B               	xorwf	___ftadd@exp2,w
  8438  0F81  1903               	btfsc	3,2
  8439  0F82  2FA9               	goto	l593
  8440  0F83  2F75               	goto	l2139
  8441  0F84                     l2143:	
  8442  0F84  084C               	movf	___ftadd@exp1,w
  8443  0F85  024B               	subwf	___ftadd@exp2,w
  8444  0F86  1803               	skipnc
  8445  0F87  2FA9               	goto	l593
  8446  0F88                     l2145:	
  8447  0F88  3001               	movlw	1
  8448  0F89                     u2105:	
  8449  0F89  35C0               	lslf	___ftadd@f1,f
  8450  0F8A  0DC1               	rlf	___ftadd@f1+1,f
  8451  0F8B  0DC2               	rlf	___ftadd@f1+2,f
  8452  0F8C  0B89               	decfsz	9,f
  8453  0F8D  2F89               	goto	u2105
  8454  0F8E  3001               	movlw	1
  8455  0F8F  02CC               	subwf	___ftadd@exp1,f
  8456  0F90  084B               	movf	___ftadd@exp2,w
  8457  0F91  064C               	xorwf	___ftadd@exp1,w
  8458  0F92  1903               	skipnz
  8459  0F93  2FA5               	goto	l2153
  8460  0F94  3001               	movlw	1
  8461  0F95  02CA               	subwf	___ftadd@sign,f
  8462  0F96  084A               	movf	___ftadd@sign,w
  8463  0F97  3907               	andlw	7
  8464  0F98  1903               	btfsc	3,2
  8465  0F99  2FA5               	goto	l2153
  8466  0F9A  2F88               	goto	l2145
  8467  0F9B                     l2151:	
  8468  0F9B  3001               	movlw	1
  8469  0F9C                     u2135:	
  8470  0F9C  36C5               	lsrf	___ftadd@f2+2,f
  8471  0F9D  0CC4               	rrf	___ftadd@f2+1,f
  8472  0F9E  0CC3               	rrf	___ftadd@f2,f
  8473  0F9F  0B89               	decfsz	9,f
  8474  0FA0  2F9C               	goto	u2135
  8475  0FA1  3001               	movlw	1
  8476  0FA2  00C6               	movwf	??___ftadd
  8477  0FA3  0846               	movf	??___ftadd,w
  8478  0FA4  07CB               	addwf	___ftadd@exp2,f
  8479  0FA5                     l2153:	
  8480  0FA5  084C               	movf	___ftadd@exp1,w
  8481  0FA6  064B               	xorwf	___ftadd@exp2,w
  8482  0FA7  1D03               	skipz
  8483  0FA8  2F9B               	goto	l2151
  8484  0FA9                     l593:	
  8485  0FA9  1FCA               	btfss	___ftadd@sign,7
  8486  0FAA  2FBB               	goto	l2157
  8487  0FAB  30FF               	movlw	255
  8488  0FAC  06C0               	xorwf	___ftadd@f1,f
  8489  0FAD  30FF               	movlw	255
  8490  0FAE  06C1               	xorwf	___ftadd@f1+1,f
  8491  0FAF  30FF               	movlw	255
  8492  0FB0  06C2               	xorwf	___ftadd@f1+2,f
  8493  0FB1  3001               	movlw	1
  8494  0FB2  07C0               	addwf	___ftadd@f1,f
  8495  0FB3  3000               	movlw	0
  8496  0FB4  1803               	skipnc
  8497  0FB5  3001               	movlw	1
  8498  0FB6  07C1               	addwf	___ftadd@f1+1,f
  8499  0FB7  3000               	movlw	0
  8500  0FB8  1803               	skipnc
  8501  0FB9  3001               	movlw	1
  8502  0FBA  07C2               	addwf	___ftadd@f1+2,f
  8503  0FBB                     l2157:	
  8504  0FBB  1F4A               	btfss	___ftadd@sign,6
  8505  0FBC  2FCD               	goto	l2161
  8506  0FBD  30FF               	movlw	255
  8507  0FBE  06C3               	xorwf	___ftadd@f2,f
  8508  0FBF  30FF               	movlw	255
  8509  0FC0  06C4               	xorwf	___ftadd@f2+1,f
  8510  0FC1  30FF               	movlw	255
  8511  0FC2  06C5               	xorwf	___ftadd@f2+2,f
  8512  0FC3  3001               	movlw	1
  8513  0FC4  07C3               	addwf	___ftadd@f2,f
  8514  0FC5  3000               	movlw	0
  8515  0FC6  1803               	skipnc
  8516  0FC7  3001               	movlw	1
  8517  0FC8  07C4               	addwf	___ftadd@f2+1,f
  8518  0FC9  3000               	movlw	0
  8519  0FCA  1803               	skipnc
  8520  0FCB  3001               	movlw	1
  8521  0FCC  07C5               	addwf	___ftadd@f2+2,f
  8522  0FCD                     l2161:	
  8523  0FCD  01CA               	clrf	___ftadd@sign
  8524  0FCE  0840               	movf	___ftadd@f1,w
  8525  0FCF  07C3               	addwf	___ftadd@f2,f
  8526  0FD0  0841               	movf	___ftadd@f1+1,w
  8527  0FD1  3DC4               	addwfc	___ftadd@f2+1,f
  8528  0FD2  0842               	movf	___ftadd@f1+2,w
  8529  0FD3  3DC5               	addwfc	___ftadd@f2+2,f
  8530  0FD4  1FC5               	btfss	___ftadd@f2+2,7
  8531  0FD5  2FE8               	goto	l2171
  8532  0FD6  30FF               	movlw	255
  8533  0FD7  06C3               	xorwf	___ftadd@f2,f
  8534  0FD8  30FF               	movlw	255
  8535  0FD9  06C4               	xorwf	___ftadd@f2+1,f
  8536  0FDA  30FF               	movlw	255
  8537  0FDB  06C5               	xorwf	___ftadd@f2+2,f
  8538  0FDC  3001               	movlw	1
  8539  0FDD  07C3               	addwf	___ftadd@f2,f
  8540  0FDE  3000               	movlw	0
  8541  0FDF  1803               	skipnc
  8542  0FE0  3001               	movlw	1
  8543  0FE1  07C4               	addwf	___ftadd@f2+1,f
  8544  0FE2  3000               	movlw	0
  8545  0FE3  1803               	skipnc
  8546  0FE4  3001               	movlw	1
  8547  0FE5  07C5               	addwf	___ftadd@f2+2,f
  8548  0FE6  01CA               	clrf	___ftadd@sign
  8549  0FE7  0ACA               	incf	___ftadd@sign,f
  8550  0FE8                     l2171:	
  8551  0FE8  0843               	movf	___ftadd@f2,w
  8552  0FE9  00F0               	movwf	___ftpack@arg
  8553  0FEA  0844               	movf	___ftadd@f2+1,w
  8554  0FEB  00F1               	movwf	___ftpack@arg+1
  8555  0FEC  0845               	movf	___ftadd@f2+2,w
  8556  0FED  00F2               	movwf	___ftpack@arg+2
  8557  0FEE  084C               	movf	___ftadd@exp1,w
  8558  0FEF  00C6               	movwf	??___ftadd
  8559  0FF0  0846               	movf	??___ftadd,w
  8560  0FF1  00F3               	movwf	___ftpack@exp
  8561  0FF2  084A               	movf	___ftadd@sign,w
  8562  0FF3  00C7               	movwf	??___ftadd+1
  8563  0FF4  0847               	movf	??___ftadd+1,w
  8564  0FF5  00F4               	movwf	___ftpack@sign
  8565  0FF6  3189  2163         	fcall	___ftpack
  8566  0FF8  0870               	movf	?___ftpack,w
  8567  0FF9  0020               	movlb	0	; select bank0
  8568  0FFA  00C0               	movwf	?___ftadd
  8569  0FFB  0871               	movf	?___ftpack+1,w
  8570  0FFC  00C1               	movwf	?___ftadd+1
  8571  0FFD  0872               	movf	?___ftpack+2,w
  8572  0FFE  00C2               	movwf	?___ftadd+2
  8573  0FFF  0008               	return
  8574  1000                     __end_of___ftadd:	
  8575                           
  8576                           	psect	text10
  8577  0B56                     __ptext10:	
  8578 ;; *************** function ___ftdiv *****************
  8579 ;; Defined at:
  8580 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftdiv.c"
  8581 ;; Parameters:    Size  Location     Type
  8582 ;;  f2              3   16[BANK0 ] float 
  8583 ;;  f1              3   19[BANK0 ] float 
  8584 ;; Auto vars:     Size  Location     Type
  8585 ;;  f3              3   27[BANK0 ] float 
  8586 ;;  sign            1   31[BANK0 ] unsigned char 
  8587 ;;  exp             1   30[BANK0 ] unsigned char 
  8588 ;;  cntr            1   26[BANK0 ] unsigned char 
  8589 ;; Return value:  Size  Location     Type
  8590 ;;                  3   16[BANK0 ] float 
  8591 ;; Registers used:
  8592 ;;		wreg, status,2, status,0, pclath, cstack
  8593 ;; Tracked objects:
  8594 ;;		On entry : 0/0
  8595 ;;		On exit  : 0/0
  8596 ;;		Unchanged: 0/0
  8597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8598 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8599 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8600 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8601 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8602 ;;Total ram usage:       16 bytes
  8603 ;; Hardware stack levels used:    1
  8604 ;; Hardware stack levels required when called:    1
  8605 ;; This function calls:
  8606 ;;		___ftpack
  8607 ;; This function is called by:
  8608 ;;		_tempCalc
  8609 ;;		_main
  8610 ;; This function uses a non-reentrant model
  8611 ;;
  8612                           
  8613                           
  8614                           ;psect for function ___ftdiv
  8615  0B56                     ___ftdiv:	
  8616                           
  8617                           ;incstack = 0
  8618                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  8619  0B56  0020               	movlb	0	; select bank0
  8620  0B57  0833               	movf	___ftdiv@f1,w
  8621  0B58  00B6               	movwf	??___ftdiv
  8622  0B59  0834               	movf	___ftdiv@f1+1,w
  8623  0B5A  00B7               	movwf	??___ftdiv+1
  8624  0B5B  0835               	movf	___ftdiv@f1+2,w
  8625  0B5C  00B8               	movwf	??___ftdiv+2
  8626  0B5D  1003               	clrc
  8627  0B5E  0D37               	rlf	??___ftdiv+1,w
  8628  0B5F  0D38               	rlf	??___ftdiv+2,w
  8629  0B60  00B9               	movwf	??___ftdiv+3
  8630  0B61  0839               	movf	??___ftdiv+3,w
  8631  0B62  00BE               	movwf	___ftdiv@exp
  8632  0B63  083E               	movf	___ftdiv@exp,w
  8633  0B64  1D03               	btfss	3,2
  8634  0B65  2B6D               	goto	l2607
  8635  0B66  3000               	movlw	0
  8636  0B67  00B0               	movwf	?___ftdiv
  8637  0B68  3000               	movlw	0
  8638  0B69  00B1               	movwf	?___ftdiv+1
  8639  0B6A  3000               	movlw	0
  8640  0B6B  00B2               	movwf	?___ftdiv+2
  8641  0B6C  0008               	return
  8642  0B6D                     l2607:	
  8643  0B6D  0830               	movf	___ftdiv@f2,w
  8644  0B6E  00B6               	movwf	??___ftdiv
  8645  0B6F  0831               	movf	___ftdiv@f2+1,w
  8646  0B70  00B7               	movwf	??___ftdiv+1
  8647  0B71  0832               	movf	___ftdiv@f2+2,w
  8648  0B72  00B8               	movwf	??___ftdiv+2
  8649  0B73  1003               	clrc
  8650  0B74  0D37               	rlf	??___ftdiv+1,w
  8651  0B75  0D38               	rlf	??___ftdiv+2,w
  8652  0B76  00B9               	movwf	??___ftdiv+3
  8653  0B77  0839               	movf	??___ftdiv+3,w
  8654  0B78  00BF               	movwf	___ftdiv@sign
  8655  0B79  083F               	movf	___ftdiv@sign,w
  8656  0B7A  1D03               	btfss	3,2
  8657  0B7B  2B83               	goto	l2613
  8658  0B7C  3000               	movlw	0
  8659  0B7D  00B0               	movwf	?___ftdiv
  8660  0B7E  3000               	movlw	0
  8661  0B7F  00B1               	movwf	?___ftdiv+1
  8662  0B80  3000               	movlw	0
  8663  0B81  00B2               	movwf	?___ftdiv+2
  8664  0B82  0008               	return
  8665  0B83                     l2613:	
  8666  0B83  3000               	movlw	0
  8667  0B84  00BB               	movwf	___ftdiv@f3
  8668  0B85  3000               	movlw	0
  8669  0B86  00BC               	movwf	___ftdiv@f3+1
  8670  0B87  3000               	movlw	0
  8671  0B88  00BD               	movwf	___ftdiv@f3+2
  8672  0B89  3089               	movlw	137
  8673  0B8A  073F               	addwf	___ftdiv@sign,w
  8674  0B8B  00B6               	movwf	??___ftdiv
  8675  0B8C  0836               	movf	??___ftdiv,w
  8676  0B8D  02BE               	subwf	___ftdiv@exp,f
  8677  0B8E  0833               	movf	___ftdiv@f1,w
  8678  0B8F  00B6               	movwf	??___ftdiv
  8679  0B90  0834               	movf	___ftdiv@f1+1,w
  8680  0B91  00B7               	movwf	??___ftdiv+1
  8681  0B92  0835               	movf	___ftdiv@f1+2,w
  8682  0B93  00B8               	movwf	??___ftdiv+2
  8683  0B94  3010               	movlw	16
  8684  0B95                     u2755:	
  8685  0B95  36B8               	lsrf	??___ftdiv+2,f
  8686  0B96  0CB7               	rrf	??___ftdiv+1,f
  8687  0B97  0CB6               	rrf	??___ftdiv,f
  8688  0B98  0B89               	decfsz	9,f
  8689  0B99  2B95               	goto	u2755
  8690  0B9A  0836               	movf	??___ftdiv,w
  8691  0B9B  00B9               	movwf	??___ftdiv+3
  8692  0B9C  0839               	movf	??___ftdiv+3,w
  8693  0B9D  00BF               	movwf	___ftdiv@sign
  8694  0B9E  0830               	movf	___ftdiv@f2,w
  8695  0B9F  00B6               	movwf	??___ftdiv
  8696  0BA0  0831               	movf	___ftdiv@f2+1,w
  8697  0BA1  00B7               	movwf	??___ftdiv+1
  8698  0BA2  0832               	movf	___ftdiv@f2+2,w
  8699  0BA3  00B8               	movwf	??___ftdiv+2
  8700  0BA4  3010               	movlw	16
  8701  0BA5                     u2765:	
  8702  0BA5  36B8               	lsrf	??___ftdiv+2,f
  8703  0BA6  0CB7               	rrf	??___ftdiv+1,f
  8704  0BA7  0CB6               	rrf	??___ftdiv,f
  8705  0BA8  0B89               	decfsz	9,f
  8706  0BA9  2BA5               	goto	u2765
  8707  0BAA  0836               	movf	??___ftdiv,w
  8708  0BAB  00B9               	movwf	??___ftdiv+3
  8709  0BAC  0839               	movf	??___ftdiv+3,w
  8710  0BAD  06BF               	xorwf	___ftdiv@sign,f
  8711  0BAE  3080               	movlw	128
  8712  0BAF  00B6               	movwf	??___ftdiv
  8713  0BB0  0836               	movf	??___ftdiv,w
  8714  0BB1  05BF               	andwf	___ftdiv@sign,f
  8715  0BB2  17B4               	bsf	___ftdiv@f1+1,7
  8716  0BB3  30FF               	movlw	255
  8717  0BB4  05B3               	andwf	___ftdiv@f1,f
  8718  0BB5  30FF               	movlw	255
  8719  0BB6  05B4               	andwf	___ftdiv@f1+1,f
  8720  0BB7  3000               	movlw	0
  8721  0BB8  05B5               	andwf	___ftdiv@f1+2,f
  8722  0BB9  17B1               	bsf	___ftdiv@f2+1,7
  8723  0BBA  30FF               	movlw	255
  8724  0BBB  05B0               	andwf	___ftdiv@f2,f
  8725  0BBC  30FF               	movlw	255
  8726  0BBD  05B1               	andwf	___ftdiv@f2+1,f
  8727  0BBE  3000               	movlw	0
  8728  0BBF  05B2               	andwf	___ftdiv@f2+2,f
  8729  0BC0  3018               	movlw	24
  8730  0BC1  00B6               	movwf	??___ftdiv
  8731  0BC2  0836               	movf	??___ftdiv,w
  8732  0BC3  00BA               	movwf	___ftdiv@cntr
  8733  0BC4                     l2627:	
  8734  0BC4  3001               	movlw	1
  8735  0BC5                     u2775:	
  8736  0BC5  35BB               	lslf	___ftdiv@f3,f
  8737  0BC6  0DBC               	rlf	___ftdiv@f3+1,f
  8738  0BC7  0DBD               	rlf	___ftdiv@f3+2,f
  8739  0BC8  0B89               	decfsz	9,f
  8740  0BC9  2BC5               	goto	u2775
  8741  0BCA  0832               	movf	___ftdiv@f2+2,w
  8742  0BCB  0235               	subwf	___ftdiv@f1+2,w
  8743  0BCC  1D03               	skipz
  8744  0BCD  2BD4               	goto	u2785
  8745  0BCE  0831               	movf	___ftdiv@f2+1,w
  8746  0BCF  0234               	subwf	___ftdiv@f1+1,w
  8747  0BD0  1D03               	skipz
  8748  0BD1  2BD4               	goto	u2785
  8749  0BD2  0830               	movf	___ftdiv@f2,w
  8750  0BD3  0233               	subwf	___ftdiv@f1,w
  8751  0BD4                     u2785:	
  8752  0BD4  1C03               	skipc
  8753  0BD5  2BDD               	goto	l2635
  8754  0BD6  0830               	movf	___ftdiv@f2,w
  8755  0BD7  02B3               	subwf	___ftdiv@f1,f
  8756  0BD8  0831               	movf	___ftdiv@f2+1,w
  8757  0BD9  3BB4               	subwfb	___ftdiv@f1+1,f
  8758  0BDA  0832               	movf	___ftdiv@f2+2,w
  8759  0BDB  3BB5               	subwfb	___ftdiv@f1+2,f
  8760  0BDC  143B               	bsf	___ftdiv@f3,0
  8761  0BDD                     l2635:	
  8762  0BDD  3001               	movlw	1
  8763  0BDE                     u2795:	
  8764  0BDE  35B3               	lslf	___ftdiv@f1,f
  8765  0BDF  0DB4               	rlf	___ftdiv@f1+1,f
  8766  0BE0  0DB5               	rlf	___ftdiv@f1+2,f
  8767  0BE1  0B89               	decfsz	9,f
  8768  0BE2  2BDE               	goto	u2795
  8769  0BE3  3001               	movlw	1
  8770  0BE4  02BA               	subwf	___ftdiv@cntr,f
  8771  0BE5  1D03               	btfss	3,2
  8772  0BE6  2BC4               	goto	l2627
  8773  0BE7  083B               	movf	___ftdiv@f3,w
  8774  0BE8  00F0               	movwf	___ftpack@arg
  8775  0BE9  083C               	movf	___ftdiv@f3+1,w
  8776  0BEA  00F1               	movwf	___ftpack@arg+1
  8777  0BEB  083D               	movf	___ftdiv@f3+2,w
  8778  0BEC  00F2               	movwf	___ftpack@arg+2
  8779  0BED  083E               	movf	___ftdiv@exp,w
  8780  0BEE  00B6               	movwf	??___ftdiv
  8781  0BEF  0836               	movf	??___ftdiv,w
  8782  0BF0  00F3               	movwf	___ftpack@exp
  8783  0BF1  083F               	movf	___ftdiv@sign,w
  8784  0BF2  00B7               	movwf	??___ftdiv+1
  8785  0BF3  0837               	movf	??___ftdiv+1,w
  8786  0BF4  00F4               	movwf	___ftpack@sign
  8787  0BF5  3189  2163         	fcall	___ftpack
  8788  0BF7  0870               	movf	?___ftpack,w
  8789  0BF8  0020               	movlb	0	; select bank0
  8790  0BF9  00B0               	movwf	?___ftdiv
  8791  0BFA  0871               	movf	?___ftpack+1,w
  8792  0BFB  00B1               	movwf	?___ftdiv+1
  8793  0BFC  0872               	movf	?___ftpack+2,w
  8794  0BFD  00B2               	movwf	?___ftdiv+2
  8795  0BFE  0008               	return
  8796  0BFF                     __end_of___ftdiv:	
  8797                           
  8798                           	psect	text11
  8799  0963                     __ptext11:	
  8800 ;; *************** function ___ftpack *****************
  8801 ;; Defined at:
  8802 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\float.c"
  8803 ;; Parameters:    Size  Location     Type
  8804 ;;  arg             3    0[COMMON] unsigned um
  8805 ;;  exp             1    3[COMMON] unsigned char 
  8806 ;;  sign            1    4[COMMON] unsigned char 
  8807 ;; Auto vars:     Size  Location     Type
  8808 ;;		None
  8809 ;; Return value:  Size  Location     Type
  8810 ;;                  3    0[COMMON] float 
  8811 ;; Registers used:
  8812 ;;		wreg, status,2, status,0
  8813 ;; Tracked objects:
  8814 ;;		On entry : 0/0
  8815 ;;		On exit  : 0/0
  8816 ;;		Unchanged: 0/0
  8817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8818 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8820 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8821 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8822 ;;Total ram usage:        8 bytes
  8823 ;; Hardware stack levels used:    1
  8824 ;; This function calls:
  8825 ;;		Nothing
  8826 ;; This function is called by:
  8827 ;;		___awtoft
  8828 ;;		___ftadd
  8829 ;;		___ftdiv
  8830 ;;		___ftmul
  8831 ;; This function uses a non-reentrant model
  8832 ;;
  8833                           
  8834                           
  8835                           ;psect for function ___ftpack
  8836  0963                     ___ftpack:	
  8837                           
  8838                           ;incstack = 0
  8839                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  8840  0963  0873               	movf	___ftpack@exp,w
  8841  0964  1903               	btfsc	3,2
  8842  0965  296B               	goto	l2047
  8843  0966  0872               	movf	___ftpack@arg+2,w
  8844  0967  0471               	iorwf	___ftpack@arg+1,w
  8845  0968  0470               	iorwf	___ftpack@arg,w
  8846  0969  1D03               	skipz
  8847  096A  297C               	goto	l2053
  8848  096B                     l2047:	
  8849  096B  3000               	movlw	0
  8850  096C  00F0               	movwf	?___ftpack
  8851  096D  3000               	movlw	0
  8852  096E  00F1               	movwf	?___ftpack+1
  8853  096F  3000               	movlw	0
  8854  0970  00F2               	movwf	?___ftpack+2
  8855  0971  0008               	return
  8856  0972                     l2051:	
  8857  0972  3001               	movlw	1
  8858  0973  00F5               	movwf	??___ftpack
  8859  0974  0875               	movf	??___ftpack,w
  8860  0975  07F3               	addwf	___ftpack@exp,f
  8861  0976  3001               	movlw	1
  8862  0977                     u1775:	
  8863  0977  36F2               	lsrf	___ftpack@arg+2,f
  8864  0978  0CF1               	rrf	___ftpack@arg+1,f
  8865  0979  0CF0               	rrf	___ftpack@arg,f
  8866  097A  0B89               	decfsz	9,f
  8867  097B  2977               	goto	u1775
  8868  097C                     l2053:	
  8869  097C  30FE               	movlw	254
  8870  097D  0572               	andwf	___ftpack@arg+2,w
  8871  097E  1903               	btfsc	3,2
  8872  097F  2995               	goto	l562
  8873  0980  2972               	goto	l2051
  8874  0981                     l2055:	
  8875  0981  3001               	movlw	1
  8876  0982  00F5               	movwf	??___ftpack
  8877  0983  0875               	movf	??___ftpack,w
  8878  0984  07F3               	addwf	___ftpack@exp,f
  8879  0985  3001               	movlw	1
  8880  0986  07F0               	addwf	___ftpack@arg,f
  8881  0987  3000               	movlw	0
  8882  0988  1803               	skipnc
  8883  0989  3001               	movlw	1
  8884  098A  07F1               	addwf	___ftpack@arg+1,f
  8885  098B  3000               	movlw	0
  8886  098C  1803               	skipnc
  8887  098D  3001               	movlw	1
  8888  098E  07F2               	addwf	___ftpack@arg+2,f
  8889  098F  3001               	movlw	1
  8890  0990                     u1795:	
  8891  0990  36F2               	lsrf	___ftpack@arg+2,f
  8892  0991  0CF1               	rrf	___ftpack@arg+1,f
  8893  0992  0CF0               	rrf	___ftpack@arg,f
  8894  0993  0B89               	decfsz	9,f
  8895  0994  2990               	goto	u1795
  8896  0995                     l562:	
  8897  0995  30FF               	movlw	255
  8898  0996  0572               	andwf	___ftpack@arg+2,w
  8899  0997  1903               	btfsc	3,2
  8900  0998  29A2               	goto	l2063
  8901  0999  2981               	goto	l2055
  8902  099A                     l2061:	
  8903  099A  3001               	movlw	1
  8904  099B  02F3               	subwf	___ftpack@exp,f
  8905  099C  3001               	movlw	1
  8906  099D                     u1815:	
  8907  099D  35F0               	lslf	___ftpack@arg,f
  8908  099E  0DF1               	rlf	___ftpack@arg+1,f
  8909  099F  0DF2               	rlf	___ftpack@arg+2,f
  8910  09A0  0B89               	decfsz	9,f
  8911  09A1  299D               	goto	u1815
  8912  09A2                     l2063:	
  8913  09A2  1BF1               	btfsc	___ftpack@arg+1,7
  8914  09A3  29A8               	goto	l569
  8915  09A4  3002               	movlw	2
  8916  09A5  0273               	subwf	___ftpack@exp,w
  8917  09A6  1803               	skipnc
  8918  09A7  299A               	goto	l2061
  8919  09A8                     l569:	
  8920  09A8  1873               	btfsc	___ftpack@exp,0
  8921  09A9  29B0               	goto	l570
  8922  09AA  30FF               	movlw	255
  8923  09AB  05F0               	andwf	___ftpack@arg,f
  8924  09AC  307F               	movlw	127
  8925  09AD  05F1               	andwf	___ftpack@arg+1,f
  8926  09AE  30FF               	movlw	255
  8927  09AF  05F2               	andwf	___ftpack@arg+2,f
  8928  09B0                     l570:	
  8929  09B0  1003               	clrc
  8930  09B1  0CF3               	rrf	___ftpack@exp,f
  8931  09B2  0873               	movf	___ftpack@exp,w
  8932  09B3  00F5               	movwf	??___ftpack
  8933  09B4  01F6               	clrf	??___ftpack+1
  8934  09B5  01F7               	clrf	??___ftpack+2
  8935  09B6  3010               	movlw	16
  8936  09B7                     u1855:	
  8937  09B7  35F5               	lslf	??___ftpack,f
  8938  09B8  0DF6               	rlf	??___ftpack+1,f
  8939  09B9  0DF7               	rlf	??___ftpack+2,f
  8940  09BA  0B89               	decfsz	9,f
  8941  09BB  29B7               	goto	u1855
  8942  09BC  0875               	movf	??___ftpack,w
  8943  09BD  04F0               	iorwf	___ftpack@arg,f
  8944  09BE  0876               	movf	??___ftpack+1,w
  8945  09BF  04F1               	iorwf	___ftpack@arg+1,f
  8946  09C0  0877               	movf	??___ftpack+2,w
  8947  09C1  04F2               	iorwf	___ftpack@arg+2,f
  8948  09C2  0874               	movf	___ftpack@sign,w
  8949  09C3  1903               	btfsc	3,2
  8950  09C4  0008               	return
  8951  09C5  17F2               	bsf	___ftpack@arg+2,7
  8952  09C6  0008               	return
  8953  09C7                     __end_of___ftpack:	
  8954                           
  8955                           	psect	text12
  8956  001B                     __ptext12:	
  8957 ;; *************** function _readAnalog *****************
  8958 ;; Defined at:
  8959 ;;		line 88 in file "adcc.c"
  8960 ;; Parameters:    Size  Location     Type
  8961 ;;  channel         2    6[BANK0 ] int 
  8962 ;; Auto vars:     Size  Location     Type
  8963 ;;  value           2   11[COMMON] int 
  8964 ;;  analog_chann    2    9[COMMON] int 
  8965 ;; Return value:  Size  Location     Type
  8966 ;;                  2    6[BANK0 ] int 
  8967 ;; Registers used:
  8968 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8969 ;; Tracked objects:
  8970 ;;		On entry : 0/0
  8971 ;;		On exit  : 0/0
  8972 ;;		Unchanged: 0/0
  8973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8974 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8975 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8976 ;;      Temps:          0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8977 ;;      Totals:         4      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8978 ;;Total ram usage:       22 bytes
  8979 ;; Hardware stack levels used:    1
  8980 ;; Hardware stack levels required when called:    1
  8981 ;; This function calls:
  8982 ;;		_ADCRead
  8983 ;;		___aldiv
  8984 ;;		___wmul
  8985 ;; This function is called by:
  8986 ;;		_main
  8987 ;; This function uses a non-reentrant model
  8988 ;;
  8989                           
  8990                           
  8991                           ;psect for function _readAnalog
  8992  001B                     _readAnalog:	
  8993                           
  8994                           ;adcc.c: 90: int value;
  8995                           ;adcc.c: 92: int analog_channel = channels[channel];
  8996                           
  8997                           ;incstack = 0
  8998                           ; Regs used in _readAnalog: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8999  001B  0020               	movlb	0	; select bank0
  9000  001C  3526               	lslf	readAnalog@channel,w
  9001  001D  3EDD               	addlw	(low (_channels| 0))& (0+255)
  9002  001E  0086               	movwf	6
  9003  001F  0187               	clrf	7
  9004  0020  3F40               	moviw [0]fsr1
  9005  0021  00F9               	movwf	readAnalog@analog_channel
  9006  0022  3F41               	moviw [1]fsr1
  9007  0023  00FA               	movwf	readAnalog@analog_channel+1
  9008                           
  9009                           ;adcc.c: 94: value = ADCRead(analog_channel);
  9010  0024  0879               	movf	readAnalog@analog_channel,w
  9011  0025  3195  25DE  3180   	fcall	_ADCRead
  9012  0028  0871               	movf	?_ADCRead+1,w
  9013  0029  00FC               	movwf	readAnalog@value+1
  9014  002A  0870               	movf	?_ADCRead,w
  9015  002B  00FB               	movwf	readAnalog@value
  9016                           
  9017                           ;adcc.c: 98: totals[channel] = totals[channel] - samples[channel][sampleIndex];
  9018  002C  0020               	movlb	0	; select bank0
  9019  002D  0826               	movf	readAnalog@channel,w
  9020  002E  00A8               	movwf	??_readAnalog
  9021  002F  3001               	movlw	1
  9022  0030                     u2825:	
  9023  0030  35A8               	lslf	??_readAnalog,f
  9024  0031  3EFF               	addlw	-1
  9025  0032  1D03               	skipz
  9026  0033  2830               	goto	u2825
  9027  0034  3528               	lslf	??_readAnalog,w
  9028  0035  3EC0               	addlw	(low (_totals| 0))& (0+255)
  9029  0036  0086               	movwf	6
  9030  0037  0187               	clrf	7
  9031  0038  3F40               	moviw [0]fsr1
  9032  0039  00A9               	movwf	??_readAnalog+1
  9033  003A  3F41               	moviw [1]fsr1
  9034  003B  00AA               	movwf	??_readAnalog+2
  9035  003C  3F42               	moviw [2]fsr1
  9036  003D  00AB               	movwf	??_readAnalog+3
  9037  003E  3F43               	moviw [3]fsr1
  9038  003F  00AC               	movwf	??_readAnalog+4
  9039  0040  086F               	movf	_sampleIndex+1,w
  9040  0041  00AE               	movwf	??_readAnalog+6
  9041  0042  086E               	movf	_sampleIndex,w
  9042  0043  00AD               	movwf	??_readAnalog+5
  9043  0044  35AD               	lslf	??_readAnalog+5,f
  9044  0045  0DAE               	rlf	??_readAnalog+6,f
  9045  0046  0827               	movf	readAnalog@channel+1,w
  9046  0047  00F1               	movwf	___wmul@multiplier+1
  9047  0048  0826               	movf	readAnalog@channel,w
  9048  0049  00F0               	movwf	___wmul@multiplier
  9049  004A  3028               	movlw	40
  9050  004B  00F2               	movwf	___wmul@multiplicand
  9051  004C  3000               	movlw	0
  9052  004D  00F3               	movwf	___wmul@multiplicand+1
  9053  004E  3196  265C  3180   	fcall	___wmul
  9054  0051  3000               	movlw	0
  9055  0052  0020               	movlb	0	; select bank0
  9056  0053  00AF               	movwf	??_readAnalog+7
  9057  0054  3023               	movlw	35
  9058  0055  00B0               	movwf	??_readAnalog+8
  9059  0056  0870               	movf	?___wmul,w
  9060  0057  072F               	addwf	??_readAnalog+7,w
  9061  0058  00B1               	movwf	??_readAnalog+9
  9062  0059  0871               	movf	?___wmul+1,w
  9063  005A  3D30               	addwfc	??_readAnalog+8,w
  9064  005B  00B2               	movwf	??_readAnalog+10
  9065  005C  0831               	movf	??_readAnalog+9,w
  9066  005D  072D               	addwf	??_readAnalog+5,w
  9067  005E  0084               	movwf	4
  9068  005F  0832               	movf	??_readAnalog+10,w
  9069  0060  3D2E               	addwfc	??_readAnalog+6,w
  9070  0061  0085               	movwf	5
  9071  0062  3F00               	moviw [0]fsr0
  9072  0063  00B3               	movwf	??_readAnalog+11
  9073  0064  3F01               	moviw [1]fsr0
  9074  0065  00B4               	movwf	??_readAnalog+12
  9075  0066  01B5               	clrf	??_readAnalog+13
  9076  0067  01B6               	clrf	??_readAnalog+14
  9077  0068  09B3               	comf	??_readAnalog+11,f
  9078  0069  09B4               	comf	??_readAnalog+12,f
  9079  006A  09B5               	comf	??_readAnalog+13,f
  9080  006B  09B6               	comf	??_readAnalog+14,f
  9081  006C  0AB3               	incf	??_readAnalog+11,f
  9082  006D  1903               	skipnz
  9083  006E  0AB4               	incf	??_readAnalog+12,f
  9084  006F  1903               	skipnz
  9085  0070  0AB5               	incf	??_readAnalog+13,f
  9086  0071  1903               	skipnz
  9087  0072  0AB6               	incf	??_readAnalog+14,f
  9088  0073  0833               	movf	??_readAnalog+11,w
  9089  0074  07A9               	addwf	??_readAnalog+1,f
  9090  0075  0834               	movf	??_readAnalog+12,w
  9091  0076  3DAA               	addwfc	??_readAnalog+2,f
  9092  0077  0835               	movf	??_readAnalog+13,w
  9093  0078  3DAB               	addwfc	??_readAnalog+3,f
  9094  0079  0836               	movf	??_readAnalog+14,w
  9095  007A  3DAC               	addwfc	??_readAnalog+4,f
  9096  007B  0826               	movf	readAnalog@channel,w
  9097  007C  00B7               	movwf	??_readAnalog+15
  9098  007D  3001               	movlw	1
  9099  007E                     u2835:	
  9100  007E  35B7               	lslf	??_readAnalog+15,f
  9101  007F  3EFF               	addlw	-1
  9102  0080  1D03               	skipz
  9103  0081  287E               	goto	u2835
  9104  0082  3537               	lslf	??_readAnalog+15,w
  9105  0083  3EC0               	addlw	(low (_totals| 0))& (0+255)
  9106  0084  0086               	movwf	6
  9107  0085  0187               	clrf	7
  9108  0086  0829               	movf	??_readAnalog+1,w
  9109  0087  3FC0               	movwi [0]fsr1
  9110  0088  082A               	movf	??_readAnalog+2,w
  9111  0089  3FC1               	movwi [1]fsr1
  9112  008A  082B               	movf	??_readAnalog+3,w
  9113  008B  3FC2               	movwi [2]fsr1
  9114  008C  082C               	movf	??_readAnalog+4,w
  9115  008D  3FC3               	movwi [3]fsr1
  9116                           
  9117                           ;adcc.c: 100: samples[channel][sampleIndex] = value;
  9118  008E  086F               	movf	_sampleIndex+1,w
  9119  008F  00A9               	movwf	??_readAnalog+1
  9120  0090  086E               	movf	_sampleIndex,w
  9121  0091  00A8               	movwf	??_readAnalog
  9122  0092  35A8               	lslf	??_readAnalog,f
  9123  0093  0DA9               	rlf	??_readAnalog+1,f
  9124  0094  0827               	movf	readAnalog@channel+1,w
  9125  0095  00F1               	movwf	___wmul@multiplier+1
  9126  0096  0826               	movf	readAnalog@channel,w
  9127  0097  00F0               	movwf	___wmul@multiplier
  9128  0098  3028               	movlw	40
  9129  0099  00F2               	movwf	___wmul@multiplicand
  9130  009A  3000               	movlw	0
  9131  009B  00F3               	movwf	___wmul@multiplicand+1
  9132  009C  3196  265C  3180   	fcall	___wmul
  9133  009F  3000               	movlw	0
  9134  00A0  0020               	movlb	0	; select bank0
  9135  00A1  00AA               	movwf	??_readAnalog+2
  9136  00A2  3023               	movlw	35
  9137  00A3  00AB               	movwf	??_readAnalog+3
  9138  00A4  0870               	movf	?___wmul,w
  9139  00A5  072A               	addwf	??_readAnalog+2,w
  9140  00A6  00AC               	movwf	??_readAnalog+4
  9141  00A7  0871               	movf	?___wmul+1,w
  9142  00A8  3D2B               	addwfc	??_readAnalog+3,w
  9143  00A9  00AD               	movwf	??_readAnalog+5
  9144  00AA  0828               	movf	??_readAnalog,w
  9145  00AB  072C               	addwf	??_readAnalog+4,w
  9146  00AC  0086               	movwf	6
  9147  00AD  0829               	movf	??_readAnalog+1,w
  9148  00AE  3D2D               	addwfc	??_readAnalog+5,w
  9149  00AF  0087               	movwf	7
  9150  00B0  087B               	movf	readAnalog@value,w
  9151  00B1  3FC0               	movwi [0]fsr1
  9152  00B2  087C               	movf	readAnalog@value+1,w
  9153  00B3  3FC1               	movwi [1]fsr1
  9154                           
  9155                           ;adcc.c: 102: totals[channel] = totals[channel] + samples[channel][sampleIndex];
  9156  00B4  0826               	movf	readAnalog@channel,w
  9157  00B5  00A8               	movwf	??_readAnalog
  9158  00B6  3001               	movlw	1
  9159  00B7                     u2845:	
  9160  00B7  35A8               	lslf	??_readAnalog,f
  9161  00B8  3EFF               	addlw	-1
  9162  00B9  1D03               	skipz
  9163  00BA  28B7               	goto	u2845
  9164  00BB  3528               	lslf	??_readAnalog,w
  9165  00BC  3EC0               	addlw	(low (_totals| 0))& (0+255)
  9166  00BD  0086               	movwf	6
  9167  00BE  0187               	clrf	7
  9168  00BF  3F40               	moviw [0]fsr1
  9169  00C0  00A9               	movwf	??_readAnalog+1
  9170  00C1  3F41               	moviw [1]fsr1
  9171  00C2  00AA               	movwf	??_readAnalog+2
  9172  00C3  3F42               	moviw [2]fsr1
  9173  00C4  00AB               	movwf	??_readAnalog+3
  9174  00C5  3F43               	moviw [3]fsr1
  9175  00C6  00AC               	movwf	??_readAnalog+4
  9176  00C7  086F               	movf	_sampleIndex+1,w
  9177  00C8  00AE               	movwf	??_readAnalog+6
  9178  00C9  086E               	movf	_sampleIndex,w
  9179  00CA  00AD               	movwf	??_readAnalog+5
  9180  00CB  35AD               	lslf	??_readAnalog+5,f
  9181  00CC  0DAE               	rlf	??_readAnalog+6,f
  9182  00CD  0827               	movf	readAnalog@channel+1,w
  9183  00CE  00F1               	movwf	___wmul@multiplier+1
  9184  00CF  0826               	movf	readAnalog@channel,w
  9185  00D0  00F0               	movwf	___wmul@multiplier
  9186  00D1  3028               	movlw	40
  9187  00D2  00F2               	movwf	___wmul@multiplicand
  9188  00D3  3000               	movlw	0
  9189  00D4  00F3               	movwf	___wmul@multiplicand+1
  9190  00D5  3196  265C  3180   	fcall	___wmul
  9191  00D8  3000               	movlw	0
  9192  00D9  0020               	movlb	0	; select bank0
  9193  00DA  00AF               	movwf	??_readAnalog+7
  9194  00DB  3023               	movlw	35
  9195  00DC  00B0               	movwf	??_readAnalog+8
  9196  00DD  0870               	movf	?___wmul,w
  9197  00DE  072F               	addwf	??_readAnalog+7,w
  9198  00DF  00B1               	movwf	??_readAnalog+9
  9199  00E0  0871               	movf	?___wmul+1,w
  9200  00E1  3D30               	addwfc	??_readAnalog+8,w
  9201  00E2  00B2               	movwf	??_readAnalog+10
  9202  00E3  0831               	movf	??_readAnalog+9,w
  9203  00E4  072D               	addwf	??_readAnalog+5,w
  9204  00E5  0084               	movwf	4
  9205  00E6  0832               	movf	??_readAnalog+10,w
  9206  00E7  3D2E               	addwfc	??_readAnalog+6,w
  9207  00E8  0085               	movwf	5
  9208  00E9  3F00               	moviw [0]fsr0
  9209  00EA  00B3               	movwf	??_readAnalog+11
  9210  00EB  3F01               	moviw [1]fsr0
  9211  00EC  00B4               	movwf	??_readAnalog+12
  9212  00ED  01B5               	clrf	??_readAnalog+13
  9213  00EE  01B6               	clrf	??_readAnalog+14
  9214  00EF  0833               	movf	??_readAnalog+11,w
  9215  00F0  07A9               	addwf	??_readAnalog+1,f
  9216  00F1  0834               	movf	??_readAnalog+12,w
  9217  00F2  3DAA               	addwfc	??_readAnalog+2,f
  9218  00F3  0835               	movf	??_readAnalog+13,w
  9219  00F4  3DAB               	addwfc	??_readAnalog+3,f
  9220  00F5  0836               	movf	??_readAnalog+14,w
  9221  00F6  3DAC               	addwfc	??_readAnalog+4,f
  9222  00F7  0826               	movf	readAnalog@channel,w
  9223  00F8  00B7               	movwf	??_readAnalog+15
  9224  00F9  3001               	movlw	1
  9225  00FA                     u2855:	
  9226  00FA  35B7               	lslf	??_readAnalog+15,f
  9227  00FB  3EFF               	addlw	-1
  9228  00FC  1D03               	skipz
  9229  00FD  28FA               	goto	u2855
  9230  00FE  3537               	lslf	??_readAnalog+15,w
  9231  00FF  3EC0               	addlw	(low (_totals| 0))& (0+255)
  9232  0100  0086               	movwf	6
  9233  0101  0187               	clrf	7
  9234  0102  0829               	movf	??_readAnalog+1,w
  9235  0103  3FC0               	movwi [0]fsr1
  9236  0104  082A               	movf	??_readAnalog+2,w
  9237  0105  3FC1               	movwi [1]fsr1
  9238  0106  082B               	movf	??_readAnalog+3,w
  9239  0107  3FC2               	movwi [2]fsr1
  9240  0108  082C               	movf	??_readAnalog+4,w
  9241  0109  3FC3               	movwi [3]fsr1
  9242                           
  9243                           ;adcc.c: 104: if(channel>4)
  9244  010A  0827               	movf	readAnalog@channel+1,w
  9245  010B  3A80               	xorlw	128
  9246  010C  00A8               	movwf	??_readAnalog
  9247  010D  3080               	movlw	128
  9248  010E  0228               	subwf	??_readAnalog,w
  9249  010F  1D03               	skipz
  9250  0110  2913               	goto	u2865
  9251  0111  3005               	movlw	5
  9252  0112  0226               	subwf	readAnalog@channel,w
  9253  0113                     u2865:	
  9254  0113  1C03               	skipc
  9255  0114  2923               	goto	l2665
  9256                           
  9257                           ;adcc.c: 105: {
  9258                           ;adcc.c: 106: sampleIndex += 1;
  9259  0115  3001               	movlw	1
  9260  0116  0020               	movlb	0	; select bank0
  9261  0117  07EE               	addwf	_sampleIndex,f
  9262  0118  3000               	movlw	0
  9263  0119  3DEF               	addwfc	_sampleIndex+1,f
  9264                           
  9265                           ;adcc.c: 108: if(sampleIndex >= 20)
  9266  011A  3000               	movlw	0
  9267  011B  026F               	subwf	_sampleIndex+1,w
  9268  011C  3014               	movlw	20
  9269  011D  1903               	skipnz
  9270  011E  026E               	subwf	_sampleIndex,w
  9271  011F  1C03               	skipc
  9272  0120  2923               	goto	l2665
  9273                           
  9274                           ;adcc.c: 109: {
  9275                           ;adcc.c: 110: sampleIndex = 0;
  9276  0121  01EE               	clrf	_sampleIndex
  9277  0122  01EF               	clrf	_sampleIndex+1
  9278  0123                     l2665:	
  9279                           
  9280                           ;adcc.c: 111: }
  9281                           ;adcc.c: 112: }
  9282                           ;adcc.c: 114: value = totals[channel] / 20;
  9283  0123  3000               	movlw	0
  9284  0124  00F3               	movwf	___aldiv@divisor+3
  9285  0125  3000               	movlw	0
  9286  0126  00F2               	movwf	___aldiv@divisor+2
  9287  0127  3000               	movlw	0
  9288  0128  00F1               	movwf	___aldiv@divisor+1
  9289  0129  3014               	movlw	20
  9290  012A  00F0               	movwf	___aldiv@divisor
  9291  012B  0020               	movlb	0	; select bank0
  9292  012C  0826               	movf	readAnalog@channel,w
  9293  012D  00A8               	movwf	??_readAnalog
  9294  012E  3001               	movlw	1
  9295  012F                     u2885:	
  9296  012F  35A8               	lslf	??_readAnalog,f
  9297  0130  3EFF               	addlw	-1
  9298  0131  1D03               	skipz
  9299  0132  292F               	goto	u2885
  9300  0133  3528               	lslf	??_readAnalog,w
  9301  0134  3EC0               	addlw	(low (_totals| 0))& (0+255)
  9302  0135  0086               	movwf	6
  9303  0136  0187               	clrf	7
  9304  0137  3F40               	moviw [0]fsr1
  9305  0138  00F4               	movwf	___aldiv@dividend
  9306  0139  3F41               	moviw [1]fsr1
  9307  013A  00F5               	movwf	___aldiv@dividend+1
  9308  013B  3F42               	moviw [2]fsr1
  9309  013C  00F6               	movwf	___aldiv@dividend+2
  9310  013D  3F43               	moviw [3]fsr1
  9311  013E  00F7               	movwf	___aldiv@dividend+3
  9312  013F  3189  21C7         	fcall	___aldiv
  9313  0141  0871               	movf	?___aldiv+1,w
  9314  0142  00FC               	movwf	readAnalog@value+1
  9315  0143  0870               	movf	?___aldiv,w
  9316  0144  00FB               	movwf	readAnalog@value
  9317                           
  9318                           ;adcc.c: 116: return value;
  9319  0145  087C               	movf	readAnalog@value+1,w
  9320  0146  0020               	movlb	0	; select bank0
  9321  0147  00A7               	movwf	?_readAnalog+1
  9322  0148  087B               	movf	readAnalog@value,w
  9323  0149  00A6               	movwf	?_readAnalog
  9324  014A  0008               	return
  9325  014B                     __end_of_readAnalog:	
  9326                           
  9327                           	psect	text13
  9328  165C                     __ptext13:	
  9329 ;; *************** function ___wmul *****************
  9330 ;; Defined at:
  9331 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
  9332 ;; Parameters:    Size  Location     Type
  9333 ;;  multiplier      2    0[COMMON] unsigned int 
  9334 ;;  multiplicand    2    2[COMMON] unsigned int 
  9335 ;; Auto vars:     Size  Location     Type
  9336 ;;  product         2    4[COMMON] unsigned int 
  9337 ;; Return value:  Size  Location     Type
  9338 ;;                  2    0[COMMON] unsigned int 
  9339 ;; Registers used:
  9340 ;;		wreg, status,2, status,0
  9341 ;; Tracked objects:
  9342 ;;		On entry : 0/0
  9343 ;;		On exit  : 0/0
  9344 ;;		Unchanged: 0/0
  9345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9346 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9347 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9349 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9350 ;;Total ram usage:        6 bytes
  9351 ;; Hardware stack levels used:    1
  9352 ;; This function calls:
  9353 ;;		Nothing
  9354 ;; This function is called by:
  9355 ;;		_readAnalog
  9356 ;;		_eval_poly
  9357 ;; This function uses a non-reentrant model
  9358 ;;
  9359                           
  9360                           
  9361                           ;psect for function ___wmul
  9362  165C                     ___wmul:	
  9363                           
  9364                           ;incstack = 0
  9365                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  9366  165C  01F4               	clrf	___wmul@product
  9367  165D  01F5               	clrf	___wmul@product+1
  9368  165E                     l2093:	
  9369  165E  1C70               	btfss	___wmul@multiplier,0
  9370  165F  2E64               	goto	l401
  9371  1660  0872               	movf	___wmul@multiplicand,w
  9372  1661  07F4               	addwf	___wmul@product,f
  9373  1662  0873               	movf	___wmul@multiplicand+1,w
  9374  1663  3DF5               	addwfc	___wmul@product+1,f
  9375  1664                     l401:	
  9376  1664  3001               	movlw	1
  9377  1665                     u1925:	
  9378  1665  35F2               	lslf	___wmul@multiplicand,f
  9379  1666  0DF3               	rlf	___wmul@multiplicand+1,f
  9380  1667  0B89               	decfsz	9,f
  9381  1668  2E65               	goto	u1925
  9382  1669  3001               	movlw	1
  9383  166A                     u1935:	
  9384  166A  36F1               	lsrf	___wmul@multiplier+1,f
  9385  166B  0CF0               	rrf	___wmul@multiplier,f
  9386  166C  0B89               	decfsz	9,f
  9387  166D  2E6A               	goto	u1935
  9388  166E  0870               	movf	___wmul@multiplier,w
  9389  166F  0471               	iorwf	___wmul@multiplier+1,w
  9390  1670  1D03               	btfss	3,2
  9391  1671  2E5E               	goto	l2093
  9392  1672  0875               	movf	___wmul@product+1,w
  9393  1673  00F1               	movwf	?___wmul+1
  9394  1674  0874               	movf	___wmul@product,w
  9395  1675  00F0               	movwf	?___wmul
  9396  1676  0008               	return
  9397  1677                     __end_of___wmul:	
  9398                           
  9399                           	psect	text14
  9400  09C7                     __ptext14:	
  9401 ;; *************** function ___aldiv *****************
  9402 ;; Defined at:
  9403 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\aldiv.c"
  9404 ;; Parameters:    Size  Location     Type
  9405 ;;  divisor         4    0[COMMON] long 
  9406 ;;  dividend        4    4[COMMON] long 
  9407 ;; Auto vars:     Size  Location     Type
  9408 ;;  quotient        4    2[BANK0 ] long 
  9409 ;;  sign            1    1[BANK0 ] unsigned char 
  9410 ;;  counter         1    0[BANK0 ] unsigned char 
  9411 ;; Return value:  Size  Location     Type
  9412 ;;                  4    0[COMMON] long 
  9413 ;; Registers used:
  9414 ;;		wreg, status,2, status,0
  9415 ;; Tracked objects:
  9416 ;;		On entry : 0/0
  9417 ;;		On exit  : 0/0
  9418 ;;		Unchanged: 0/0
  9419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9420 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9421 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9422 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9423 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9424 ;;Total ram usage:       15 bytes
  9425 ;; Hardware stack levels used:    1
  9426 ;; This function calls:
  9427 ;;		Nothing
  9428 ;; This function is called by:
  9429 ;;		_readAnalog
  9430 ;; This function uses a non-reentrant model
  9431 ;;
  9432                           
  9433                           
  9434                           ;psect for function ___aldiv
  9435  09C7                     ___aldiv:	
  9436                           
  9437                           ;incstack = 0
  9438                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  9439  09C7  0020               	movlb	0	; select bank0
  9440  09C8  01A1               	clrf	___aldiv@sign
  9441  09C9  1FF3               	btfss	___aldiv@divisor+3,7
  9442  09CA  29D8               	goto	l456
  9443  09CB  09F0               	comf	___aldiv@divisor,f
  9444  09CC  09F1               	comf	___aldiv@divisor+1,f
  9445  09CD  09F2               	comf	___aldiv@divisor+2,f
  9446  09CE  09F3               	comf	___aldiv@divisor+3,f
  9447  09CF  0AF0               	incf	___aldiv@divisor,f
  9448  09D0  1903               	skipnz
  9449  09D1  0AF1               	incf	___aldiv@divisor+1,f
  9450  09D2  1903               	skipnz
  9451  09D3  0AF2               	incf	___aldiv@divisor+2,f
  9452  09D4  1903               	skipnz
  9453  09D5  0AF3               	incf	___aldiv@divisor+3,f
  9454  09D6  01A1               	clrf	___aldiv@sign
  9455  09D7  0AA1               	incf	___aldiv@sign,f
  9456  09D8                     l456:	
  9457  09D8  1FF7               	btfss	___aldiv@dividend+3,7
  9458  09D9  29E9               	goto	l2489
  9459  09DA  09F4               	comf	___aldiv@dividend,f
  9460  09DB  09F5               	comf	___aldiv@dividend+1,f
  9461  09DC  09F6               	comf	___aldiv@dividend+2,f
  9462  09DD  09F7               	comf	___aldiv@dividend+3,f
  9463  09DE  0AF4               	incf	___aldiv@dividend,f
  9464  09DF  1903               	skipnz
  9465  09E0  0AF5               	incf	___aldiv@dividend+1,f
  9466  09E1  1903               	skipnz
  9467  09E2  0AF6               	incf	___aldiv@dividend+2,f
  9468  09E3  1903               	skipnz
  9469  09E4  0AF7               	incf	___aldiv@dividend+3,f
  9470  09E5  3001               	movlw	1
  9471  09E6  00F8               	movwf	??___aldiv
  9472  09E7  0878               	movf	??___aldiv,w
  9473  09E8  06A1               	xorwf	___aldiv@sign,f
  9474  09E9                     l2489:	
  9475  09E9  3000               	movlw	0
  9476  09EA  00A5               	movwf	___aldiv@quotient+3
  9477  09EB  3000               	movlw	0
  9478  09EC  00A4               	movwf	___aldiv@quotient+2
  9479  09ED  3000               	movlw	0
  9480  09EE  00A3               	movwf	___aldiv@quotient+1
  9481  09EF  3000               	movlw	0
  9482  09F0  00A2               	movwf	___aldiv@quotient
  9483  09F1  0873               	movf	___aldiv@divisor+3,w
  9484  09F2  0472               	iorwf	___aldiv@divisor+2,w
  9485  09F3  0471               	iorwf	___aldiv@divisor+1,w
  9486  09F4  0470               	iorwf	___aldiv@divisor,w
  9487  09F5  1903               	skipnz
  9488  09F6  2A32               	goto	l2511
  9489  09F7  01A0               	clrf	___aldiv@counter
  9490  09F8  0AA0               	incf	___aldiv@counter,f
  9491  09F9                     l2497:	
  9492  09F9  1BF3               	btfsc	___aldiv@divisor+3,7
  9493  09FA  2A07               	goto	l2499
  9494  09FB  3001               	movlw	1
  9495  09FC                     u2475:	
  9496  09FC  35F0               	lslf	___aldiv@divisor,f
  9497  09FD  0DF1               	rlf	___aldiv@divisor+1,f
  9498  09FE  0DF2               	rlf	___aldiv@divisor+2,f
  9499  09FF  0DF3               	rlf	___aldiv@divisor+3,f
  9500  0A00  0B89               	decfsz	9,f
  9501  0A01  29FC               	goto	u2475
  9502  0A02  3001               	movlw	1
  9503  0A03  00F8               	movwf	??___aldiv
  9504  0A04  0878               	movf	??___aldiv,w
  9505  0A05  07A0               	addwf	___aldiv@counter,f
  9506  0A06  29F9               	goto	l2497
  9507  0A07                     l2499:	
  9508  0A07  3001               	movlw	1
  9509  0A08                     u2495:	
  9510  0A08  35A2               	lslf	___aldiv@quotient,f
  9511  0A09  0DA3               	rlf	___aldiv@quotient+1,f
  9512  0A0A  0DA4               	rlf	___aldiv@quotient+2,f
  9513  0A0B  0DA5               	rlf	___aldiv@quotient+3,f
  9514  0A0C  0B89               	decfsz	9,f
  9515  0A0D  2A08               	goto	u2495
  9516  0A0E  0873               	movf	___aldiv@divisor+3,w
  9517  0A0F  0277               	subwf	___aldiv@dividend+3,w
  9518  0A10  1D03               	skipz
  9519  0A11  2A1C               	goto	u2505
  9520  0A12  0872               	movf	___aldiv@divisor+2,w
  9521  0A13  0276               	subwf	___aldiv@dividend+2,w
  9522  0A14  1D03               	skipz
  9523  0A15  2A1C               	goto	u2505
  9524  0A16  0871               	movf	___aldiv@divisor+1,w
  9525  0A17  0275               	subwf	___aldiv@dividend+1,w
  9526  0A18  1D03               	skipz
  9527  0A19  2A1C               	goto	u2505
  9528  0A1A  0870               	movf	___aldiv@divisor,w
  9529  0A1B  0274               	subwf	___aldiv@dividend,w
  9530  0A1C                     u2505:	
  9531  0A1C  1C03               	skipc
  9532  0A1D  2A27               	goto	l2507
  9533  0A1E  0870               	movf	___aldiv@divisor,w
  9534  0A1F  02F4               	subwf	___aldiv@dividend,f
  9535  0A20  0871               	movf	___aldiv@divisor+1,w
  9536  0A21  3BF5               	subwfb	___aldiv@dividend+1,f
  9537  0A22  0872               	movf	___aldiv@divisor+2,w
  9538  0A23  3BF6               	subwfb	___aldiv@dividend+2,f
  9539  0A24  0873               	movf	___aldiv@divisor+3,w
  9540  0A25  3BF7               	subwfb	___aldiv@dividend+3,f
  9541  0A26  1422               	bsf	___aldiv@quotient,0
  9542  0A27                     l2507:	
  9543  0A27  3001               	movlw	1
  9544  0A28                     u2515:	
  9545  0A28  36F3               	lsrf	___aldiv@divisor+3,f
  9546  0A29  0CF2               	rrf	___aldiv@divisor+2,f
  9547  0A2A  0CF1               	rrf	___aldiv@divisor+1,f
  9548  0A2B  0CF0               	rrf	___aldiv@divisor,f
  9549  0A2C  0B89               	decfsz	9,f
  9550  0A2D  2A28               	goto	u2515
  9551  0A2E  3001               	movlw	1
  9552  0A2F  02A0               	subwf	___aldiv@counter,f
  9553  0A30  1D03               	btfss	3,2
  9554  0A31  2A07               	goto	l2499
  9555  0A32                     l2511:	
  9556  0A32  0821               	movf	___aldiv@sign,w
  9557  0A33  1903               	btfsc	3,2
  9558  0A34  2A40               	goto	l2515
  9559  0A35  09A2               	comf	___aldiv@quotient,f
  9560  0A36  09A3               	comf	___aldiv@quotient+1,f
  9561  0A37  09A4               	comf	___aldiv@quotient+2,f
  9562  0A38  09A5               	comf	___aldiv@quotient+3,f
  9563  0A39  0AA2               	incf	___aldiv@quotient,f
  9564  0A3A  1903               	skipnz
  9565  0A3B  0AA3               	incf	___aldiv@quotient+1,f
  9566  0A3C  1903               	skipnz
  9567  0A3D  0AA4               	incf	___aldiv@quotient+2,f
  9568  0A3E  1903               	skipnz
  9569  0A3F  0AA5               	incf	___aldiv@quotient+3,f
  9570  0A40                     l2515:	
  9571  0A40  0825               	movf	___aldiv@quotient+3,w
  9572  0A41  00F3               	movwf	?___aldiv+3
  9573  0A42  0824               	movf	___aldiv@quotient+2,w
  9574  0A43  00F2               	movwf	?___aldiv+2
  9575  0A44  0823               	movf	___aldiv@quotient+1,w
  9576  0A45  00F1               	movwf	?___aldiv+1
  9577  0A46  0822               	movf	___aldiv@quotient,w
  9578  0A47  00F0               	movwf	?___aldiv
  9579  0A48  0008               	return
  9580  0A49                     __end_of___aldiv:	
  9581                           
  9582                           	psect	text15
  9583  15DE                     __ptext15:	
  9584 ;; *************** function _ADCRead *****************
  9585 ;; Defined at:
  9586 ;;		line 65 in file "adcc.c"
  9587 ;; Parameters:    Size  Location     Type
  9588 ;;  channel         1    wreg     enum E13559
  9589 ;; Auto vars:     Size  Location     Type
  9590 ;;  channel         1    3[COMMON] enum E13559
  9591 ;; Return value:  Size  Location     Type
  9592 ;;                  2    0[COMMON] unsigned int 
  9593 ;; Registers used:
  9594 ;;		wreg
  9595 ;; Tracked objects:
  9596 ;;		On entry : 0/0
  9597 ;;		On exit  : 0/0
  9598 ;;		Unchanged: 0/0
  9599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9600 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9601 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9603 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9604 ;;Total ram usage:        4 bytes
  9605 ;; Hardware stack levels used:    1
  9606 ;; This function calls:
  9607 ;;		Nothing
  9608 ;; This function is called by:
  9609 ;;		_readAnalog
  9610 ;;		_main
  9611 ;; This function uses a non-reentrant model
  9612 ;;
  9613                           
  9614                           
  9615                           ;psect for function _ADCRead
  9616  15DE                     _ADCRead:	
  9617                           
  9618                           ;incstack = 0
  9619                           ; Regs used in _ADCRead: [wreg]
  9620                           ;ADCRead@channel stored from wreg
  9621  15DE  00F3               	movwf	ADCRead@channel
  9622                           
  9623                           ;adcc.c: 68: ADPCH = channel;
  9624  15DF  0873               	movf	ADCRead@channel,w
  9625  15E0  0021               	movlb	1	; select bank1
  9626  15E1  009E               	movwf	30	;volatile
  9627                           
  9628                           ;adcc.c: 71: ADCON0bits.ADON = 1;
  9629  15E2  1793               	bsf	19,7	;volatile
  9630                           
  9631                           ;adcc.c: 74: ADCON0bits.ADCONT = 0;
  9632  15E3  1313               	bcf	19,6	;volatile
  9633                           
  9634                           ;adcc.c: 77: ADCON0bits.ADGO = 1;
  9635  15E4  1413               	bsf	19,0	;volatile
  9636  15E5                     l58:	
  9637                           ;adcc.c: 81: {
  9638                           
  9639                           ;adcc.c: 80: while (ADCON0bits.ADGO)
  9640                           
  9641  15E5  1813               	btfsc	19,0	;volatile
  9642  15E6  2DE5               	goto	l58
  9643                           
  9644                           ;adcc.c: 82: }
  9645                           ;adcc.c: 85: return ((ADRESH << 8) + ADRESL);
  9646  15E7  080D               	movf	13,w	;volatile
  9647  15E8  00F1               	movwf	?_ADCRead+1
  9648  15E9  080C               	movf	12,w	;volatile
  9649  15EA  00F0               	movwf	?_ADCRead
  9650  15EB  0008               	return
  9651  15EC                     __end_of_ADCRead:	
  9652                           
  9653                           	psect	text16
  9654  16E1                     __ptext16:	
  9655 ;; *************** function ___lwdiv *****************
  9656 ;; Defined at:
  9657 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwdiv.c"
  9658 ;; Parameters:    Size  Location     Type
  9659 ;;  divisor         2    0[COMMON] unsigned int 
  9660 ;;  dividend        2    2[COMMON] unsigned int 
  9661 ;; Auto vars:     Size  Location     Type
  9662 ;;  quotient        2    5[COMMON] unsigned int 
  9663 ;;  counter         1    7[COMMON] unsigned char 
  9664 ;; Return value:  Size  Location     Type
  9665 ;;                  2    0[COMMON] unsigned int 
  9666 ;; Registers used:
  9667 ;;		wreg, status,2, status,0
  9668 ;; Tracked objects:
  9669 ;;		On entry : 0/0
  9670 ;;		On exit  : 0/0
  9671 ;;		Unchanged: 0/0
  9672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9673 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9674 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9675 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9676 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9677 ;;Total ram usage:        8 bytes
  9678 ;; Hardware stack levels used:    1
  9679 ;; This function calls:
  9680 ;;		Nothing
  9681 ;; This function is called by:
  9682 ;;		_main
  9683 ;; This function uses a non-reentrant model
  9684 ;;
  9685                           
  9686                           
  9687                           ;psect for function ___lwdiv
  9688  16E1                     ___lwdiv:	
  9689                           
  9690                           ;incstack = 0
  9691                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  9692  16E1  01F5               	clrf	___lwdiv@quotient
  9693  16E2  01F6               	clrf	___lwdiv@quotient+1
  9694  16E3  0870               	movf	___lwdiv@divisor,w
  9695  16E4  0471               	iorwf	___lwdiv@divisor+1,w
  9696  16E5  1903               	btfsc	3,2
  9697  16E6  2F10               	goto	l2855
  9698  16E7  01F7               	clrf	___lwdiv@counter
  9699  16E8  0AF7               	incf	___lwdiv@counter,f
  9700  16E9                     l2843:	
  9701  16E9  1BF1               	btfsc	___lwdiv@divisor+1,7
  9702  16EA  2EF5               	goto	l2845
  9703  16EB  3001               	movlw	1
  9704  16EC                     u3155:	
  9705  16EC  35F0               	lslf	___lwdiv@divisor,f
  9706  16ED  0DF1               	rlf	___lwdiv@divisor+1,f
  9707  16EE  0B89               	decfsz	9,f
  9708  16EF  2EEC               	goto	u3155
  9709  16F0  3001               	movlw	1
  9710  16F1  00F4               	movwf	??___lwdiv
  9711  16F2  0874               	movf	??___lwdiv,w
  9712  16F3  07F7               	addwf	___lwdiv@counter,f
  9713  16F4  2EE9               	goto	l2843
  9714  16F5                     l2845:	
  9715  16F5  3001               	movlw	1
  9716  16F6                     u3175:	
  9717  16F6  35F5               	lslf	___lwdiv@quotient,f
  9718  16F7  0DF6               	rlf	___lwdiv@quotient+1,f
  9719  16F8  0B89               	decfsz	9,f
  9720  16F9  2EF6               	goto	u3175
  9721  16FA  0871               	movf	___lwdiv@divisor+1,w
  9722  16FB  0273               	subwf	___lwdiv@dividend+1,w
  9723  16FC  1D03               	skipz
  9724  16FD  2F00               	goto	u3185
  9725  16FE  0870               	movf	___lwdiv@divisor,w
  9726  16FF  0272               	subwf	___lwdiv@dividend,w
  9727  1700                     u3185:	
  9728  1700  1C03               	skipc
  9729  1701  2F07               	goto	l2851
  9730  1702  0870               	movf	___lwdiv@divisor,w
  9731  1703  02F2               	subwf	___lwdiv@dividend,f
  9732  1704  0871               	movf	___lwdiv@divisor+1,w
  9733  1705  3BF3               	subwfb	___lwdiv@dividend+1,f
  9734  1706  1475               	bsf	___lwdiv@quotient,0
  9735  1707                     l2851:	
  9736  1707  3001               	movlw	1
  9737  1708                     u3195:	
  9738  1708  36F1               	lsrf	___lwdiv@divisor+1,f
  9739  1709  0CF0               	rrf	___lwdiv@divisor,f
  9740  170A  0B89               	decfsz	9,f
  9741  170B  2F08               	goto	u3195
  9742  170C  3001               	movlw	1
  9743  170D  02F7               	subwf	___lwdiv@counter,f
  9744  170E  1D03               	btfss	3,2
  9745  170F  2EF5               	goto	l2845
  9746  1710                     l2855:	
  9747  1710  0876               	movf	___lwdiv@quotient+1,w
  9748  1711  00F1               	movwf	?___lwdiv+1
  9749  1712  0875               	movf	___lwdiv@quotient,w
  9750  1713  00F0               	movwf	?___lwdiv
  9751  1714  0008               	return
  9752  1715                     __end_of___lwdiv:	
  9753                           
  9754                           	psect	text17
  9755  0A49                     __ptext17:	
  9756 ;; *************** function ___fttol *****************
  9757 ;; Defined at:
  9758 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fttol.c"
  9759 ;; Parameters:    Size  Location     Type
  9760 ;;  f1              3    0[COMMON] float 
  9761 ;; Auto vars:     Size  Location     Type
  9762 ;;  lval            4    9[COMMON] unsigned long 
  9763 ;;  exp1            1   13[COMMON] unsigned char 
  9764 ;;  sign1           1    8[COMMON] unsigned char 
  9765 ;; Return value:  Size  Location     Type
  9766 ;;                  4    0[COMMON] long 
  9767 ;; Registers used:
  9768 ;;		wreg, status,2, status,0
  9769 ;; Tracked objects:
  9770 ;;		On entry : 0/0
  9771 ;;		On exit  : 0/0
  9772 ;;		Unchanged: 0/0
  9773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9774 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9775 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9776 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9777 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9778 ;;Total ram usage:       14 bytes
  9779 ;; Hardware stack levels used:    1
  9780 ;; This function calls:
  9781 ;;		Nothing
  9782 ;; This function is called by:
  9783 ;;		_main
  9784 ;; This function uses a non-reentrant model
  9785 ;;
  9786                           
  9787                           
  9788                           ;psect for function ___fttol
  9789  0A49                     ___fttol:	
  9790                           
  9791                           ;incstack = 0
  9792                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  9793  0A49  0870               	movf	___fttol@f1,w
  9794  0A4A  00F4               	movwf	??___fttol
  9795  0A4B  0871               	movf	___fttol@f1+1,w
  9796  0A4C  00F5               	movwf	??___fttol+1
  9797  0A4D  0872               	movf	___fttol@f1+2,w
  9798  0A4E  00F6               	movwf	??___fttol+2
  9799  0A4F  1003               	clrc
  9800  0A50  0D75               	rlf	??___fttol+1,w
  9801  0A51  0D76               	rlf	??___fttol+2,w
  9802  0A52  00F7               	movwf	??___fttol+3
  9803  0A53  0877               	movf	??___fttol+3,w
  9804  0A54  00FD               	movwf	___fttol@exp1
  9805  0A55  087D               	movf	___fttol@exp1,w
  9806  0A56  1D03               	btfss	3,2
  9807  0A57  2A61               	goto	l2797
  9808  0A58  3000               	movlw	0
  9809  0A59  00F3               	movwf	?___fttol+3
  9810  0A5A  3000               	movlw	0
  9811  0A5B  00F2               	movwf	?___fttol+2
  9812  0A5C  3000               	movlw	0
  9813  0A5D  00F1               	movwf	?___fttol+1
  9814  0A5E  3000               	movlw	0
  9815  0A5F  00F0               	movwf	?___fttol
  9816  0A60  0008               	return
  9817  0A61                     l2797:	
  9818  0A61  0870               	movf	___fttol@f1,w
  9819  0A62  00F4               	movwf	??___fttol
  9820  0A63  0871               	movf	___fttol@f1+1,w
  9821  0A64  00F5               	movwf	??___fttol+1
  9822  0A65  0872               	movf	___fttol@f1+2,w
  9823  0A66  00F6               	movwf	??___fttol+2
  9824  0A67  3017               	movlw	23
  9825  0A68                     u3055:	
  9826  0A68  36F6               	lsrf	??___fttol+2,f
  9827  0A69  0CF5               	rrf	??___fttol+1,f
  9828  0A6A  0CF4               	rrf	??___fttol,f
  9829  0A6B  0B89               	decfsz	9,f
  9830  0A6C  2A68               	goto	u3055
  9831  0A6D  0874               	movf	??___fttol,w
  9832  0A6E  00F7               	movwf	??___fttol+3
  9833  0A6F  0877               	movf	??___fttol+3,w
  9834  0A70  00F8               	movwf	___fttol@sign1
  9835  0A71  17F1               	bsf	___fttol@f1+1,7
  9836  0A72  30FF               	movlw	255
  9837  0A73  05F0               	andwf	___fttol@f1,f
  9838  0A74  30FF               	movlw	255
  9839  0A75  05F1               	andwf	___fttol@f1+1,f
  9840  0A76  3000               	movlw	0
  9841  0A77  05F2               	andwf	___fttol@f1+2,f
  9842  0A78  0870               	movf	___fttol@f1,w
  9843  0A79  00F9               	movwf	___fttol@lval
  9844  0A7A  0871               	movf	___fttol@f1+1,w
  9845  0A7B  00FA               	movwf	___fttol@lval+1
  9846  0A7C  0872               	movf	___fttol@f1+2,w
  9847  0A7D  00FB               	movwf	___fttol@lval+2
  9848  0A7E  01FC               	clrf	___fttol@lval+3
  9849  0A7F  308E               	movlw	142
  9850  0A80  02FD               	subwf	___fttol@exp1,f
  9851  0A81  1FFD               	btfss	___fttol@exp1,7
  9852  0A82  2A9F               	goto	l2817
  9853  0A83  087D               	movf	___fttol@exp1,w
  9854  0A84  3A80               	xorlw	128
  9855  0A85  3E8F               	addlw	143
  9856  0A86  1803               	skipnc
  9857  0A87  2A91               	goto	l2815
  9858  0A88  3000               	movlw	0
  9859  0A89  00F3               	movwf	?___fttol+3
  9860  0A8A  3000               	movlw	0
  9861  0A8B  00F2               	movwf	?___fttol+2
  9862  0A8C  3000               	movlw	0
  9863  0A8D  00F1               	movwf	?___fttol+1
  9864  0A8E  3000               	movlw	0
  9865  0A8F  00F0               	movwf	?___fttol
  9866  0A90  0008               	return
  9867  0A91                     l2815:	
  9868  0A91  3001               	movlw	1
  9869  0A92                     u3085:	
  9870  0A92  36FC               	lsrf	___fttol@lval+3,f
  9871  0A93  0CFB               	rrf	___fttol@lval+2,f
  9872  0A94  0CFA               	rrf	___fttol@lval+1,f
  9873  0A95  0CF9               	rrf	___fttol@lval,f
  9874  0A96  0B89               	decfsz	9,f
  9875  0A97  2A92               	goto	u3085
  9876  0A98  3001               	movlw	1
  9877  0A99  00F4               	movwf	??___fttol
  9878  0A9A  0874               	movf	??___fttol,w
  9879  0A9B  07FD               	addwf	___fttol@exp1,f
  9880  0A9C  1903               	btfsc	3,2
  9881  0A9D  2AB8               	goto	l2825
  9882  0A9E  2A91               	goto	l2815
  9883  0A9F                     l2817:	
  9884  0A9F  3018               	movlw	24
  9885  0AA0  027D               	subwf	___fttol@exp1,w
  9886  0AA1  1C03               	skipc
  9887  0AA2  2AB5               	goto	l653
  9888  0AA3  3000               	movlw	0
  9889  0AA4  00F3               	movwf	?___fttol+3
  9890  0AA5  3000               	movlw	0
  9891  0AA6  00F2               	movwf	?___fttol+2
  9892  0AA7  3000               	movlw	0
  9893  0AA8  00F1               	movwf	?___fttol+1
  9894  0AA9  3000               	movlw	0
  9895  0AAA  00F0               	movwf	?___fttol
  9896  0AAB  0008               	return
  9897  0AAC                     l2823:	
  9898  0AAC  3001               	movlw	1
  9899  0AAD                     u3115:	
  9900  0AAD  35F9               	lslf	___fttol@lval,f
  9901  0AAE  0DFA               	rlf	___fttol@lval+1,f
  9902  0AAF  0DFB               	rlf	___fttol@lval+2,f
  9903  0AB0  0DFC               	rlf	___fttol@lval+3,f
  9904  0AB1  0B89               	decfsz	9,f
  9905  0AB2  2AAD               	goto	u3115
  9906  0AB3  3001               	movlw	1
  9907  0AB4  02FD               	subwf	___fttol@exp1,f
  9908  0AB5                     l653:	
  9909  0AB5  087D               	movf	___fttol@exp1,w
  9910  0AB6  1D03               	btfss	3,2
  9911  0AB7  2AAC               	goto	l2823
  9912  0AB8                     l2825:	
  9913  0AB8  0878               	movf	___fttol@sign1,w
  9914  0AB9  1903               	btfsc	3,2
  9915  0ABA  2AC6               	goto	l2829
  9916  0ABB  09F9               	comf	___fttol@lval,f
  9917  0ABC  09FA               	comf	___fttol@lval+1,f
  9918  0ABD  09FB               	comf	___fttol@lval+2,f
  9919  0ABE  09FC               	comf	___fttol@lval+3,f
  9920  0ABF  0AF9               	incf	___fttol@lval,f
  9921  0AC0  1903               	skipnz
  9922  0AC1  0AFA               	incf	___fttol@lval+1,f
  9923  0AC2  1903               	skipnz
  9924  0AC3  0AFB               	incf	___fttol@lval+2,f
  9925  0AC4  1903               	skipnz
  9926  0AC5  0AFC               	incf	___fttol@lval+3,f
  9927  0AC6                     l2829:	
  9928  0AC6  087C               	movf	___fttol@lval+3,w
  9929  0AC7  00F3               	movwf	?___fttol+3
  9930  0AC8  087B               	movf	___fttol@lval+2,w
  9931  0AC9  00F2               	movwf	?___fttol+2
  9932  0ACA  087A               	movf	___fttol@lval+1,w
  9933  0ACB  00F1               	movwf	?___fttol+1
  9934  0ACC  0879               	movf	___fttol@lval,w
  9935  0ACD  00F0               	movwf	?___fttol
  9936  0ACE  0008               	return
  9937  0ACF                     __end_of___fttol:	
  9938                           
  9939                           	psect	text18
  9940  082B                     __ptext18:	
  9941 ;; *************** function _SYSTEM_Initialize *****************
  9942 ;; Defined at:
  9943 ;;		line 71 in file "system.c"
  9944 ;; Parameters:    Size  Location     Type
  9945 ;;		None
  9946 ;; Auto vars:     Size  Location     Type
  9947 ;;		None
  9948 ;; Return value:  Size  Location     Type
  9949 ;;                  1    wreg      void 
  9950 ;; Registers used:
  9951 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9952 ;; Tracked objects:
  9953 ;;		On entry : 0/0
  9954 ;;		On exit  : 0/0
  9955 ;;		Unchanged: 0/0
  9956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9959 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9960 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9961 ;;Total ram usage:        3 bytes
  9962 ;; Hardware stack levels used:    1
  9963 ;; Hardware stack levels required when called:    3
  9964 ;; This function calls:
  9965 ;;		_ADCC_Initialize
  9966 ;;		_InitCustomChars
  9967 ;;		_LCD_Clear
  9968 ;;		_LCD_Init
  9969 ;;		_OSCILLATOR_Initialize
  9970 ;;		_PIN_MANAGER_Initialize
  9971 ;;		_PWM6_Initialize
  9972 ;;		_TMR2_Initialize
  9973 ;; This function is called by:
  9974 ;;		_main
  9975 ;; This function uses a non-reentrant model
  9976 ;;
  9977                           
  9978                           
  9979                           ;psect for function _SYSTEM_Initialize
  9980  082B                     _SYSTEM_Initialize:	
  9981                           
  9982                           ;system.c: 73: PIN_MANAGER_Initialize();
  9983                           
  9984                           ;incstack = 0
  9985                           ; Regs used in _SYSTEM_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9986  082B  3197  2715  3188   	fcall	_PIN_MANAGER_Initialize
  9987                           
  9988                           ;system.c: 74: OSCILLATOR_Initialize();
  9989  082E  3195  2598  3188   	fcall	_OSCILLATOR_Initialize
  9990                           
  9991                           ;system.c: 75: FVRCON = 0x00;
  9992  0831  0032               	movlb	18	; select bank18
  9993  0832  018C               	clrf	12	;volatile
  9994                           
  9995                           ;system.c: 76: ADCC_Initialize();
  9996  0833  3196  2642  3188   	fcall	_ADCC_Initialize
  9997                           
  9998                           ;system.c: 77: PWM6_Initialize();
  9999  0836  3195  25A1  3188   	fcall	_PWM6_Initialize
 10000                           
 10001                           ;system.c: 79: TMR2_Initialize();
 10002  0839  3195  25D0  3188   	fcall	_TMR2_Initialize
 10003                           
 10004                           ;system.c: 80: LCD_Init(0X00);
 10005  083C  3000               	movlw	0
 10006  083D  318A  22CF  3188   	fcall	_LCD_Init
 10007                           
 10008                           ;system.c: 81: _delay((unsigned long)((200)*(32000000/4000.0)));
 10009  0840  3009               	movlw	9
 10010  0841  00FA               	movwf	??_SYSTEM_Initialize+2
 10011  0842  301E               	movlw	30
 10012  0843  00F9               	movwf	??_SYSTEM_Initialize+1
 10013  0844  30EB               	movlw	235
 10014  0845  00F8               	movwf	??_SYSTEM_Initialize
 10015  0846                     u3817:	
 10016  0846  0BF8               	decfsz	??_SYSTEM_Initialize,f
 10017  0847  2846               	goto	u3817
 10018  0848  0BF9               	decfsz	??_SYSTEM_Initialize+1,f
 10019  0849  2846               	goto	u3817
 10020  084A  0BFA               	decfsz	??_SYSTEM_Initialize+2,f
 10021  084B  2846               	goto	u3817
 10022  084C  0000               	nop
 10023                           
 10024                           ;system.c: 82: LCD_Clear();
 10025  084D  3195  2590  3188   	fcall	_LCD_Clear
 10026                           
 10027                           ;system.c: 83: _delay((unsigned long)((100)*(32000000/4000.0)));
 10028  0850  3005               	movlw	5
 10029  0851  00FA               	movwf	??_SYSTEM_Initialize+2
 10030  0852  300F               	movlw	15
 10031  0853  00F9               	movwf	??_SYSTEM_Initialize+1
 10032  0854  30F4               	movlw	244
 10033  0855  00F8               	movwf	??_SYSTEM_Initialize
 10034  0856                     u3827:	
 10035  0856  0BF8               	decfsz	??_SYSTEM_Initialize,f
 10036  0857  2856               	goto	u3827
 10037  0858  0BF9               	decfsz	??_SYSTEM_Initialize+1,f
 10038  0859  2856               	goto	u3827
 10039  085A  0BFA               	decfsz	??_SYSTEM_Initialize+2,f
 10040  085B  2856               	goto	u3827
 10041                           
 10042                           ;system.c: 84: InitCustomChars();
 10043  085C  3188  2005  3188   	fcall	_InitCustomChars
 10044                           
 10045                           ;system.c: 85: _delay((unsigned long)((200)*(32000000/4000.0)));
 10046  085F  3009               	movlw	9
 10047  0860  00FA               	movwf	??_SYSTEM_Initialize+2
 10048  0861  301E               	movlw	30
 10049  0862  00F9               	movwf	??_SYSTEM_Initialize+1
 10050  0863  30EB               	movlw	235
 10051  0864  00F8               	movwf	??_SYSTEM_Initialize
 10052  0865                     u3837:	
 10053  0865  0BF8               	decfsz	??_SYSTEM_Initialize,f
 10054  0866  2865               	goto	u3837
 10055  0867  0BF9               	decfsz	??_SYSTEM_Initialize+1,f
 10056  0868  2865               	goto	u3837
 10057  0869  0BFA               	decfsz	??_SYSTEM_Initialize+2,f
 10058  086A  2865               	goto	u3837
 10059  086B  0000               	nop
 10060  086C  0008               	return
 10061  086D                     __end_of_SYSTEM_Initialize:	
 10062                           
 10063                           	psect	text19
 10064  15D0                     __ptext19:	
 10065 ;; *************** function _TMR2_Initialize *****************
 10066 ;; Defined at:
 10067 ;;		line 3 in file "tmr2.c"
 10068 ;; Parameters:    Size  Location     Type
 10069 ;;		None
 10070 ;; Auto vars:     Size  Location     Type
 10071 ;;		None
 10072 ;; Return value:  Size  Location     Type
 10073 ;;                  1    wreg      void 
 10074 ;; Registers used:
 10075 ;;		wreg, status,2
 10076 ;; Tracked objects:
 10077 ;;		On entry : 0/0
 10078 ;;		On exit  : 0/0
 10079 ;;		Unchanged: 0/0
 10080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10084 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10085 ;;Total ram usage:        0 bytes
 10086 ;; Hardware stack levels used:    1
 10087 ;; This function calls:
 10088 ;;		Nothing
 10089 ;; This function is called by:
 10090 ;;		_SYSTEM_Initialize
 10091 ;; This function uses a non-reentrant model
 10092 ;;
 10093                           
 10094                           
 10095                           ;psect for function _TMR2_Initialize
 10096  15D0                     _TMR2_Initialize:	
 10097                           
 10098                           ;tmr2.c: 5: T2CON = 0x00;
 10099                           
 10100                           ;incstack = 0
 10101                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 10102  15D0  0025               	movlb	5	; select bank5
 10103  15D1  018E               	clrf	14	;volatile
 10104                           
 10105                           ;tmr2.c: 7: T2CLKCON = 0x01;
 10106  15D2  3001               	movlw	1
 10107  15D3  0090               	movwf	16	;volatile
 10108                           
 10109                           ;tmr2.c: 9: T2HLT = 0x00;
 10110  15D4  018F               	clrf	15	;volatile
 10111                           
 10112                           ;tmr2.c: 11: T2RST = 0x00;
 10113  15D5  0191               	clrf	17	;volatile
 10114                           
 10115                           ;tmr2.c: 13: T2PR = 0xFF;
 10116  15D6  30FF               	movlw	255
 10117  15D7  008D               	movwf	13	;volatile
 10118                           
 10119                           ;tmr2.c: 15: T2TMR = 0x00;
 10120  15D8  018C               	clrf	12	;volatile
 10121                           
 10122                           ;tmr2.c: 17: PIR4bits.TMR2IF = 0;
 10123  15D9  002E               	movlb	14	; select bank14
 10124  15DA  1090               	bcf	16,1	;volatile
 10125                           
 10126                           ;tmr2.c: 19: T2CONbits.TMR2ON = 1;
 10127  15DB  0025               	movlb	5	; select bank5
 10128  15DC  178E               	bsf	14,7	;volatile
 10129  15DD  0008               	return
 10130  15DE                     __end_of_TMR2_Initialize:	
 10131                           
 10132                           	psect	text20
 10133  15A1                     __ptext20:	
 10134 ;; *************** function _PWM6_Initialize *****************
 10135 ;; Defined at:
 10136 ;;		line 3 in file "pwm6.c"
 10137 ;; Parameters:    Size  Location     Type
 10138 ;;		None
 10139 ;; Auto vars:     Size  Location     Type
 10140 ;;		None
 10141 ;; Return value:  Size  Location     Type
 10142 ;;                  1    wreg      void 
 10143 ;; Registers used:
 10144 ;;		wreg, status,2, status,0
 10145 ;; Tracked objects:
 10146 ;;		On entry : 0/0
 10147 ;;		On exit  : 0/0
 10148 ;;		Unchanged: 0/0
 10149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10153 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10154 ;;Total ram usage:        0 bytes
 10155 ;; Hardware stack levels used:    1
 10156 ;; This function calls:
 10157 ;;		Nothing
 10158 ;; This function is called by:
 10159 ;;		_SYSTEM_Initialize
 10160 ;; This function uses a non-reentrant model
 10161 ;;
 10162                           
 10163                           
 10164                           ;psect for function _PWM6_Initialize
 10165  15A1                     _PWM6_Initialize:	
 10166                           
 10167                           ;pwm6.c: 5: PWM6CON = 0x80;
 10168                           
 10169                           ;incstack = 0
 10170                           ; Regs used in _PWM6_Initialize: [wreg+status,2+status,0]
 10171  15A1  3080               	movlw	128
 10172  15A2  0027               	movlb	7	; select bank7
 10173  15A3  008E               	movwf	14	;volatile
 10174                           
 10175                           ;pwm6.c: 7: PWM6DCH = 0x00;
 10176  15A4  018D               	clrf	13	;volatile
 10177                           
 10178                           ;pwm6.c: 9: PWM6DCL = 0x00;
 10179  15A5  018C               	clrf	12	;volatile
 10180                           
 10181                           ;pwm6.c: 11: CCPTMRS1bits.P6TSEL = 0x1;
 10182  15A6  0024               	movlb	4	; select bank4
 10183  15A7  081F               	movf	31,w	;volatile
 10184  15A8  39F3               	andlw	-13
 10185  15A9  3804               	iorlw	4
 10186  15AA  009F               	movwf	31	;volatile
 10187  15AB  0008               	return
 10188  15AC                     __end_of_PWM6_Initialize:	
 10189                           
 10190                           	psect	text21
 10191  1715                     __ptext21:	
 10192 ;; *************** function _PIN_MANAGER_Initialize *****************
 10193 ;; Defined at:
 10194 ;;		line 5 in file "pin_manager.c"
 10195 ;; Parameters:    Size  Location     Type
 10196 ;;		None
 10197 ;; Auto vars:     Size  Location     Type
 10198 ;;  state           1    0[COMMON] unsigned char 
 10199 ;; Return value:  Size  Location     Type
 10200 ;;                  1    wreg      void 
 10201 ;; Registers used:
 10202 ;;		wreg, status,2
 10203 ;; Tracked objects:
 10204 ;;		On entry : 0/0
 10205 ;;		On exit  : 0/0
 10206 ;;		Unchanged: 0/0
 10207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10209 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10211 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10212 ;;Total ram usage:        1 bytes
 10213 ;; Hardware stack levels used:    1
 10214 ;; This function calls:
 10215 ;;		Nothing
 10216 ;; This function is called by:
 10217 ;;		_SYSTEM_Initialize
 10218 ;; This function uses a non-reentrant model
 10219 ;;
 10220                           
 10221                           
 10222                           ;psect for function _PIN_MANAGER_Initialize
 10223  1715                     _PIN_MANAGER_Initialize:	
 10224                           
 10225                           ;pin_manager.c: 7: LATA = 0x00;
 10226                           
 10227                           ;incstack = 0
 10228                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 10229  1715  0020               	movlb	0	; select bank0
 10230  1716  0196               	clrf	22	;volatile
 10231                           
 10232                           ;pin_manager.c: 8: LATB = 0x00;
 10233  1717  0197               	clrf	23	;volatile
 10234                           
 10235                           ;pin_manager.c: 9: LATC = 0x00;
 10236  1718  0198               	clrf	24	;volatile
 10237                           
 10238                           ;pin_manager.c: 11: WPUA = 0x02;
 10239  1719  3002               	movlw	2
 10240  171A  003E               	movlb	30	; select bank30
 10241  171B  00B9               	movwf	57	;volatile
 10242                           
 10243                           ;pin_manager.c: 12: WPUB = 0x00;
 10244  171C  01C4               	clrf	68	;volatile
 10245                           
 10246                           ;pin_manager.c: 13: WPUC = 0x00;
 10247  171D  01CF               	clrf	79	;volatile
 10248                           
 10249                           ;pin_manager.c: 14: WPUE = 0x8;
 10250  171E  3008               	movlw	8
 10251  171F  00E5               	movwf	101	;volatile
 10252                           
 10253                           ;pin_manager.c: 16: TRISA = 0x02;
 10254  1720  3002               	movlw	2
 10255  1721  0020               	movlb	0	; select bank0
 10256  1722  0091               	movwf	17	;volatile
 10257                           
 10258                           ;pin_manager.c: 17: TRISA = 0x3A;
 10259  1723  303A               	movlw	58
 10260  1724  0091               	movwf	17	;volatile
 10261                           
 10262                           ;pin_manager.c: 18: TRISB = 0x0A;
 10263  1725  300A               	movlw	10
 10264  1726  0092               	movwf	18	;volatile
 10265                           
 10266                           ;pin_manager.c: 19: TRISC = 0x10;
 10267  1727  3010               	movlw	16
 10268  1728  0093               	movwf	19	;volatile
 10269                           
 10270                           ;pin_manager.c: 21: ANSELA = 0x3A;
 10271  1729  303A               	movlw	58
 10272  172A  003E               	movlb	30	; select bank30
 10273  172B  00B8               	movwf	56	;volatile
 10274                           
 10275                           ;pin_manager.c: 22: ANSELB = 0x0A;
 10276  172C  300A               	movlw	10
 10277  172D  00C3               	movwf	67	;volatile
 10278                           
 10279                           ;pin_manager.c: 23: ANSELC = 0x00;
 10280  172E  01CE               	clrf	78	;volatile
 10281                           
 10282                           ;pin_manager.c: 25: PIE0bits.IOCIE = 0;
 10283  172F  002E               	movlb	14	; select bank14
 10284  1730  1216               	bcf	22,4	;volatile
 10285                           
 10286                           ;pin_manager.c: 26: bool state = GIE;
 10287  1731  3000               	movlw	0
 10288  1732  1B8B               	btfsc	11,7	;volatile
 10289  1733  3001               	movlw	1
 10290  1734  00F0               	movwf	PIN_MANAGER_Initialize@state
 10291                           
 10292                           ;pin_manager.c: 27: GIE = 0;
 10293  1735  138B               	bcf	11,7	;volatile
 10294                           
 10295                           ;pin_manager.c: 28: PPSLOCK = 0x55;
 10296  1736  3055               	movlw	85
 10297  1737  003D               	movlb	29	; select bank29
 10298  1738  008F               	movwf	15	;volatile
 10299                           
 10300                           ;pin_manager.c: 29: PPSLOCK = 0xAA;
 10301  1739  30AA               	movlw	170
 10302  173A  008F               	movwf	15	;volatile
 10303                           
 10304                           ;pin_manager.c: 30: PPSLOCKbits.PPSLOCKED = 0x00;
 10305  173B  100F               	bcf	15,0	;volatile
 10306                           
 10307                           ;pin_manager.c: 33: RC2PPS = 0x000E;
 10308  173C  300E               	movlw	14
 10309  173D  003E               	movlb	30	; select bank30
 10310  173E  00A2               	movwf	34	;volatile
 10311                           
 10312                           ;pin_manager.c: 37: PPSLOCK = 0x55;
 10313  173F  3055               	movlw	85
 10314  1740  003D               	movlb	29	; select bank29
 10315  1741  008F               	movwf	15	;volatile
 10316                           
 10317                           ;pin_manager.c: 38: PPSLOCK = 0xAA;
 10318  1742  30AA               	movlw	170
 10319  1743  008F               	movwf	15	;volatile
 10320                           
 10321                           ;pin_manager.c: 39: PPSLOCKbits.PPSLOCKED = 0x01;
 10322  1744  140F               	bsf	15,0	;volatile
 10323                           
 10324                           ;pin_manager.c: 40: GIE = state;
 10325  1745  1C70               	btfss	PIN_MANAGER_Initialize@state,0
 10326  1746  2F49               	goto	u2400
 10327  1747  178B               	bsf	11,7	;volatile
 10328  1748  0008               	return
 10329  1749                     u2400:	
 10330  1749  138B               	bcf	11,7	;volatile
 10331  174A  0008               	return
 10332  174B                     __end_of_PIN_MANAGER_Initialize:	
 10333                           
 10334                           	psect	text22
 10335  1598                     __ptext22:	
 10336 ;; *************** function _OSCILLATOR_Initialize *****************
 10337 ;; Defined at:
 10338 ;;		line 89 in file "system.c"
 10339 ;; Parameters:    Size  Location     Type
 10340 ;;		None
 10341 ;; Auto vars:     Size  Location     Type
 10342 ;;		None
 10343 ;; Return value:  Size  Location     Type
 10344 ;;                  1    wreg      void 
 10345 ;; Registers used:
 10346 ;;		wreg, status,2
 10347 ;; Tracked objects:
 10348 ;;		On entry : 0/0
 10349 ;;		On exit  : 0/0
 10350 ;;		Unchanged: 0/0
 10351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10355 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10356 ;;Total ram usage:        0 bytes
 10357 ;; Hardware stack levels used:    1
 10358 ;; This function calls:
 10359 ;;		Nothing
 10360 ;; This function is called by:
 10361 ;;		_SYSTEM_Initialize
 10362 ;; This function uses a non-reentrant model
 10363 ;;
 10364                           
 10365                           
 10366                           ;psect for function _OSCILLATOR_Initialize
 10367  1598                     _OSCILLATOR_Initialize:	
 10368                           
 10369                           ;system.c: 91: OSCCON1 = 0x60;
 10370                           
 10371                           ;incstack = 0
 10372                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 10373  1598  3060               	movlw	96
 10374  1599  0031               	movlb	17	; select bank17
 10375  159A  008D               	movwf	13	;volatile
 10376                           
 10377                           ;system.c: 92: OSCCON3 = 0x00;
 10378  159B  018F               	clrf	15	;volatile
 10379                           
 10380                           ;system.c: 93: OSCEN = 0x00;
 10381  159C  0191               	clrf	17	;volatile
 10382                           
 10383                           ;system.c: 94: OSCFRQ = 0x06;
 10384  159D  3006               	movlw	6
 10385  159E  0093               	movwf	19	;volatile
 10386                           
 10387                           ;system.c: 95: OSCTUNE = 0x00;
 10388  159F  0192               	clrf	18	;volatile
 10389  15A0  0008               	return
 10390  15A1                     __end_of_OSCILLATOR_Initialize:	
 10391                           
 10392                           	psect	text23
 10393  0ACF                     __ptext23:	
 10394 ;; *************** function _LCD_Init *****************
 10395 ;; Defined at:
 10396 ;;		line 154 in file "lcd.c"
 10397 ;; Parameters:    Size  Location     Type
 10398 ;;  style           1    wreg     unsigned char 
 10399 ;; Auto vars:     Size  Location     Type
 10400 ;;  style           1    7[COMMON] unsigned char 
 10401 ;; Return value:  Size  Location     Type
 10402 ;;                  1    wreg      void 
 10403 ;; Registers used:
 10404 ;;		wreg, status,2, status,0, pclath, cstack
 10405 ;; Tracked objects:
 10406 ;;		On entry : 0/0
 10407 ;;		On exit  : 0/0
 10408 ;;		Unchanged: 0/0
 10409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10411 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10412 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10413 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10414 ;;Total ram usage:        4 bytes
 10415 ;; Hardware stack levels used:    1
 10416 ;; Hardware stack levels required when called:    2
 10417 ;; This function calls:
 10418 ;;		_LCD_Cmd
 10419 ;;		_LCD_Port
 10420 ;; This function is called by:
 10421 ;;		_SYSTEM_Initialize
 10422 ;; This function uses a non-reentrant model
 10423 ;;
 10424                           
 10425                           
 10426                           ;psect for function _LCD_Init
 10427  0ACF                     _LCD_Init:	
 10428                           
 10429                           ;incstack = 0
 10430                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
 10431                           ;LCD_Init@style stored from wreg
 10432  0ACF  00F7               	movwf	LCD_Init@style
 10433                           
 10434                           ;lcd.c: 156: LCD_Port(0x00);
 10435  0AD0  3000               	movlw	0
 10436  0AD1  3196  2610  318A   	fcall	_LCD_Port
 10437                           
 10438                           ;lcd.c: 158: _delay((unsigned long)((100)*(32000000/4000.0)));
 10439  0AD4  3005               	movlw	5
 10440  0AD5  00F6               	movwf	??_LCD_Init+2
 10441  0AD6  300F               	movlw	15
 10442  0AD7  00F5               	movwf	??_LCD_Init+1
 10443  0AD8  30F4               	movlw	244
 10444  0AD9  00F4               	movwf	??_LCD_Init
 10445  0ADA                     u3847:	
 10446  0ADA  0BF4               	decfsz	??_LCD_Init,f
 10447  0ADB  2ADA               	goto	u3847
 10448  0ADC  0BF5               	decfsz	??_LCD_Init+1,f
 10449  0ADD  2ADA               	goto	u3847
 10450  0ADE  0BF6               	decfsz	??_LCD_Init+2,f
 10451  0ADF  2ADA               	goto	u3847
 10452                           
 10453                           ;lcd.c: 160: LCD_Cmd(0x03);
 10454  0AE0  3003               	movlw	3
 10455  0AE1  3195  25FC  318A   	fcall	_LCD_Cmd
 10456                           
 10457                           ;lcd.c: 162: _delay((unsigned long)((10)*(32000000/4000.0)));
 10458  0AE4  3068               	movlw	104
 10459  0AE5  00F5               	movwf	??_LCD_Init+1
 10460  0AE6  30E4               	movlw	228
 10461  0AE7  00F4               	movwf	??_LCD_Init
 10462  0AE8                     u3857:	
 10463  0AE8  0BF4               	decfsz	??_LCD_Init,f
 10464  0AE9  2AE8               	goto	u3857
 10465  0AEA  0BF5               	decfsz	??_LCD_Init+1,f
 10466  0AEB  2AE8               	goto	u3857
 10467  0AEC  0000               	nop
 10468                           
 10469                           ;lcd.c: 164: LCD_Cmd(0x03);
 10470  0AED  3003               	movlw	3
 10471  0AEE  3195  25FC  318A   	fcall	_LCD_Cmd
 10472                           
 10473                           ;lcd.c: 166: _delay((unsigned long)((120)*(32000000/4000000.0)));
 10474  0AF1  3089               	movlw	137
 10475  0AF2  00F4               	movwf	??_LCD_Init
 10476  0AF3                     u3867:	
 10477  0AF3  3200               	nop2
 10478  0AF4  3200               	nop2
 10479  0AF5  0BF4               	decfsz	??_LCD_Init,f
 10480  0AF6  2AF3               	goto	u3867
 10481                           
 10482                           ;lcd.c: 168: LCD_Cmd(0x03);
 10483  0AF7  3003               	movlw	3
 10484  0AF8  3195  25FC  318A   	fcall	_LCD_Cmd
 10485                           
 10486                           ;lcd.c: 170: _delay((unsigned long)((120)*(32000000/4000000.0)));
 10487  0AFB  3089               	movlw	137
 10488  0AFC  00F4               	movwf	??_LCD_Init
 10489  0AFD                     u3877:	
 10490  0AFD  3200               	nop2
 10491  0AFE  3200               	nop2
 10492  0AFF  0BF4               	decfsz	??_LCD_Init,f
 10493  0B00  2AFD               	goto	u3877
 10494                           
 10495                           ;lcd.c: 172: LCD_Cmd(0x02);
 10496  0B01  3002               	movlw	2
 10497  0B02  3195  25FC  318A   	fcall	_LCD_Cmd
 10498                           
 10499                           ;lcd.c: 174: _delay((unsigned long)((120)*(32000000/4000000.0)));
 10500  0B05  3089               	movlw	137
 10501  0B06  00F4               	movwf	??_LCD_Init
 10502  0B07                     u3887:	
 10503  0B07  3200               	nop2
 10504  0B08  3200               	nop2
 10505  0B09  0BF4               	decfsz	??_LCD_Init,f
 10506  0B0A  2B07               	goto	u3887
 10507                           
 10508                           ;lcd.c: 176: LCD_Cmd(0x2);
 10509  0B0B  3002               	movlw	2
 10510  0B0C  3195  25FC  318A   	fcall	_LCD_Cmd
 10511                           
 10512                           ;lcd.c: 178: LCD_Cmd(0x8);
 10513  0B0F  3008               	movlw	8
 10514  0B10  3195  25FC  318A   	fcall	_LCD_Cmd
 10515                           
 10516                           ;lcd.c: 180: _delay((unsigned long)((120)*(32000000/4000000.0)));
 10517  0B13  3089               	movlw	137
 10518  0B14  00F4               	movwf	??_LCD_Init
 10519  0B15                     u3897:	
 10520  0B15  3200               	nop2
 10521  0B16  3200               	nop2
 10522  0B17  0BF4               	decfsz	??_LCD_Init,f
 10523  0B18  2B15               	goto	u3897
 10524                           
 10525                           ;lcd.c: 182: LCD_Cmd(0x0);
 10526  0B19  3000               	movlw	0
 10527  0B1A  3195  25FC  318A   	fcall	_LCD_Cmd
 10528                           
 10529                           ;lcd.c: 184: LCD_Cmd(0x8);
 10530  0B1D  3008               	movlw	8
 10531  0B1E  3195  25FC  318A   	fcall	_LCD_Cmd
 10532                           
 10533                           ;lcd.c: 186: _delay((unsigned long)((120)*(32000000/4000000.0)));
 10534  0B21  3089               	movlw	137
 10535  0B22  00F4               	movwf	??_LCD_Init
 10536  0B23                     u3907:	
 10537  0B23  3200               	nop2
 10538  0B24  3200               	nop2
 10539  0B25  0BF4               	decfsz	??_LCD_Init,f
 10540  0B26  2B23               	goto	u3907
 10541                           
 10542                           ;lcd.c: 188: LCD_Cmd(0x0);
 10543  0B27  3000               	movlw	0
 10544  0B28  3195  25FC  318A   	fcall	_LCD_Cmd
 10545                           
 10546                           ;lcd.c: 190: LCD_Cmd(0x1);
 10547  0B2B  3001               	movlw	1
 10548  0B2C  3195  25FC  318A   	fcall	_LCD_Cmd
 10549                           
 10550                           ;lcd.c: 192: _delay((unsigned long)((5)*(32000000/4000.0)));
 10551  0B2F  3034               	movlw	52
 10552  0B30  00F5               	movwf	??_LCD_Init+1
 10553  0B31  30F1               	movlw	241
 10554  0B32  00F4               	movwf	??_LCD_Init
 10555  0B33                     u3917:	
 10556  0B33  0BF4               	decfsz	??_LCD_Init,f
 10557  0B34  2B33               	goto	u3917
 10558  0B35  0BF5               	decfsz	??_LCD_Init+1,f
 10559  0B36  2B33               	goto	u3917
 10560  0B37  3200               	nop2
 10561                           
 10562                           ;lcd.c: 194: LCD_Cmd(0x0);
 10563  0B38  3000               	movlw	0
 10564  0B39  3195  25FC  318A   	fcall	_LCD_Cmd
 10565                           
 10566                           ;lcd.c: 196: LCD_Cmd(0x6);
 10567  0B3C  3006               	movlw	6
 10568  0B3D  3195  25FC  318A   	fcall	_LCD_Cmd
 10569                           
 10570                           ;lcd.c: 198: _delay((unsigned long)((120)*(32000000/4000000.0)));
 10571  0B40  3089               	movlw	137
 10572  0B41  00F4               	movwf	??_LCD_Init
 10573  0B42                     u3927:	
 10574  0B42  3200               	nop2
 10575  0B43  3200               	nop2
 10576  0B44  0BF4               	decfsz	??_LCD_Init,f
 10577  0B45  2B42               	goto	u3927
 10578                           
 10579                           ;lcd.c: 200: LCD_Cmd(0x0);
 10580  0B46  3000               	movlw	0
 10581  0B47  3195  25FC  318A   	fcall	_LCD_Cmd
 10582                           
 10583                           ;lcd.c: 202: LCD_Cmd(0xc|style);
 10584  0B4A  0877               	movf	LCD_Init@style,w
 10585  0B4B  380C               	iorlw	12
 10586  0B4C  3195  25FC  318A   	fcall	_LCD_Cmd
 10587                           
 10588                           ;lcd.c: 204: _delay((unsigned long)((120)*(32000000/4000000.0)));
 10589  0B4F  3089               	movlw	137
 10590  0B50  00F4               	movwf	??_LCD_Init
 10591  0B51                     u3937:	
 10592  0B51  3200               	nop2
 10593  0B52  3200               	nop2
 10594  0B53  0BF4               	decfsz	??_LCD_Init,f
 10595  0B54  2B51               	goto	u3937
 10596  0B55  0008               	return
 10597  0B56                     __end_of_LCD_Init:	
 10598                           
 10599                           	psect	text24
 10600  1590                     __ptext24:	
 10601 ;; *************** function _LCD_Clear *****************
 10602 ;; Defined at:
 10603 ;;		line 75 in file "lcd.c"
 10604 ;; Parameters:    Size  Location     Type
 10605 ;;		None
 10606 ;; Auto vars:     Size  Location     Type
 10607 ;;		None
 10608 ;; Return value:  Size  Location     Type
 10609 ;;                  1    wreg      void 
 10610 ;; Registers used:
 10611 ;;		wreg, status,2, status,0, pclath, cstack
 10612 ;; Tracked objects:
 10613 ;;		On entry : 0/0
 10614 ;;		On exit  : 0/0
 10615 ;;		Unchanged: 0/0
 10616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10620 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10621 ;;Total ram usage:        0 bytes
 10622 ;; Hardware stack levels used:    1
 10623 ;; Hardware stack levels required when called:    2
 10624 ;; This function calls:
 10625 ;;		_LCD_Cmd
 10626 ;; This function is called by:
 10627 ;;		_SYSTEM_Initialize
 10628 ;;		_main
 10629 ;; This function uses a non-reentrant model
 10630 ;;
 10631                           
 10632                           
 10633                           ;psect for function _LCD_Clear
 10634  1590                     _LCD_Clear:	
 10635                           
 10636                           ;lcd.c: 77: LCD_Cmd(0);
 10637                           
 10638                           ;incstack = 0
 10639                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
 10640  1590  3000               	movlw	0
 10641  1591  3195  25FC  3195   	fcall	_LCD_Cmd
 10642                           
 10643                           ;lcd.c: 78: LCD_Cmd(1);
 10644  1594  3001               	movlw	1
 10645  1595  3195  25FC         	fcall	_LCD_Cmd
 10646  1597  0008               	return
 10647  1598                     __end_of_LCD_Clear:	
 10648                           
 10649                           	psect	text25
 10650  0805                     __ptext25:	
 10651 ;; *************** function _InitCustomChars *****************
 10652 ;; Defined at:
 10653 ;;		line 29 in file "lcd.c"
 10654 ;; Parameters:    Size  Location     Type
 10655 ;;		None
 10656 ;; Auto vars:     Size  Location     Type
 10657 ;;  i               1    6[COMMON] unsigned char 
 10658 ;; Return value:  Size  Location     Type
 10659 ;;                  1    wreg      void 
 10660 ;; Registers used:
 10661 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10662 ;; Tracked objects:
 10663 ;;		On entry : 0/0
 10664 ;;		On exit  : 0/0
 10665 ;;		Unchanged: 0/0
 10666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10668 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10669 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10670 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10671 ;;Total ram usage:        2 bytes
 10672 ;; Hardware stack levels used:    1
 10673 ;; Hardware stack levels required when called:    2
 10674 ;; This function calls:
 10675 ;;		_LCD_Cmd
 10676 ;;		_LCD_Write_Char
 10677 ;; This function is called by:
 10678 ;;		_SYSTEM_Initialize
 10679 ;; This function uses a non-reentrant model
 10680 ;;
 10681                           
 10682                           
 10683                           ;psect for function _InitCustomChars
 10684  0805                     _InitCustomChars:	
 10685                           
 10686                           ;lcd.c: 31: uint8_t i;
 10687                           ;lcd.c: 32: LCD_Cmd(0x04);
 10688                           
 10689                           ;incstack = 0
 10690                           ; Regs used in _InitCustomChars: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10691  0805  3004               	movlw	4
 10692  0806  3195  25FC  3188   	fcall	_LCD_Cmd
 10693                           
 10694                           ;lcd.c: 33: LCD_Cmd(0x00);
 10695  0809  3000               	movlw	0
 10696  080A  3195  25FC  3188   	fcall	_LCD_Cmd
 10697                           
 10698                           ;lcd.c: 34: for (i = 0; i < sizeof(__cgram) ; i++)
 10699  080D  01F6               	clrf	InitCustomChars@i
 10700  080E  3010               	movlw	16
 10701  080F  0276               	subwf	InitCustomChars@i,w
 10702  0810  1803               	btfsc	3,0
 10703  0811  2823               	goto	l2355
 10704  0812                     l2349:	
 10705                           
 10706                           ;lcd.c: 35: LCD_Write_Char(__cgram[i]);
 10707  0812  0876               	movf	InitCustomChars@i,w
 10708  0813  3E20               	addlw	(low (___cgram| (0+256)))& (0+255)
 10709  0814  0086               	movwf	6
 10710  0815  3001               	movlw	1	; select bank2/3
 10711  0816  0087               	movwf	7
 10712  0817  0801               	movf	1,w
 10713  0818  3196  26B5  3188   	fcall	_LCD_Write_Char
 10714  081B  3001               	movlw	1
 10715  081C  00F5               	movwf	??_InitCustomChars
 10716  081D  0875               	movf	??_InitCustomChars,w
 10717  081E  07F6               	addwf	InitCustomChars@i,f
 10718  081F  3010               	movlw	16
 10719  0820  0276               	subwf	InitCustomChars@i,w
 10720  0821  1C03               	skipc
 10721  0822  2812               	goto	l2349
 10722  0823                     l2355:	
 10723                           
 10724                           ;lcd.c: 36: LCD_Cmd(0);
 10725  0823  3000               	movlw	0
 10726  0824  3195  25FC  3188   	fcall	_LCD_Cmd
 10727                           
 10728                           ;lcd.c: 37: LCD_Cmd(2);
 10729  0827  3002               	movlw	2
 10730  0828  3195  25FC         	fcall	_LCD_Cmd
 10731  082A  0008               	return
 10732  082B                     __end_of_InitCustomChars:	
 10733                           
 10734                           	psect	text26
 10735  1642                     __ptext26:	
 10736 ;; *************** function _ADCC_Initialize *****************
 10737 ;; Defined at:
 10738 ;;		line 16 in file "adcc.c"
 10739 ;; Parameters:    Size  Location     Type
 10740 ;;		None
 10741 ;; Auto vars:     Size  Location     Type
 10742 ;;		None
 10743 ;; Return value:  Size  Location     Type
 10744 ;;                  1    wreg      void 
 10745 ;; Registers used:
 10746 ;;		wreg, status,2
 10747 ;; Tracked objects:
 10748 ;;		On entry : 0/0
 10749 ;;		On exit  : 0/0
 10750 ;;		Unchanged: 0/0
 10751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10755 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10756 ;;Total ram usage:        0 bytes
 10757 ;; Hardware stack levels used:    1
 10758 ;; This function calls:
 10759 ;;		Nothing
 10760 ;; This function is called by:
 10761 ;;		_SYSTEM_Initialize
 10762 ;; This function uses a non-reentrant model
 10763 ;;
 10764                           
 10765                           
 10766                           ;psect for function _ADCC_Initialize
 10767  1642                     _ADCC_Initialize:	
 10768                           
 10769                           ;adcc.c: 19: ADCON1 = 0x00;
 10770                           
 10771                           ;incstack = 0
 10772                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
 10773  1642  0021               	movlb	1	; select bank1
 10774  1643  0194               	clrf	20	;volatile
 10775                           
 10776                           ;adcc.c: 21: ADCON2 = 0x00;
 10777  1644  0195               	clrf	21	;volatile
 10778                           
 10779                           ;adcc.c: 23: ADCON3 = 0x00;
 10780  1645  0196               	clrf	22	;volatile
 10781                           
 10782                           ;adcc.c: 25: ADACT = 0x00;
 10783  1646  0199               	clrf	25	;volatile
 10784                           
 10785                           ;adcc.c: 27: ADSTAT = 0x00;
 10786  1647  0197               	clrf	23	;volatile
 10787                           
 10788                           ;adcc.c: 29: ADCLK = 0x3F;
 10789  1648  303F               	movlw	63
 10790  1649  0098               	movwf	24	;volatile
 10791                           
 10792                           ;adcc.c: 33: ADREF = 0x00;
 10793  164A  019A               	clrf	26	;volatile
 10794                           
 10795                           ;adcc.c: 35: ADCAP = 0x00;
 10796  164B  019B               	clrf	27	;volatile
 10797                           
 10798                           ;adcc.c: 38: ADPRE = 0x07;
 10799  164C  3007               	movlw	7
 10800  164D  009C               	movwf	28	;volatile
 10801                           
 10802                           ;adcc.c: 40: ADACQ = 0x00;
 10803  164E  019D               	clrf	29	;volatile
 10804                           
 10805                           ;adcc.c: 42: ADPCH = 0x00;
 10806  164F  019E               	clrf	30	;volatile
 10807                           
 10808                           ;adcc.c: 44: ADRPT = 0x00;
 10809  1650  0022               	movlb	2	; select bank2
 10810  1651  018D               	clrf	13	;volatile
 10811                           
 10812                           ;adcc.c: 46: ADLTHL = 0x00;
 10813  1652  018E               	clrf	14	;volatile
 10814                           
 10815                           ;adcc.c: 48: ADLTHH = 0x00;
 10816  1653  018F               	clrf	15	;volatile
 10817                           
 10818                           ;adcc.c: 50: ADUTHL = 0x00;
 10819  1654  0190               	clrf	16	;volatile
 10820                           
 10821                           ;adcc.c: 52: ADUTHH = 0x00;
 10822  1655  0191               	clrf	17	;volatile
 10823                           
 10824                           ;adcc.c: 54: ADSTPTL = 0x00;
 10825  1656  0192               	clrf	18	;volatile
 10826                           
 10827                           ;adcc.c: 56: ADSTPTH = 0x00;
 10828  1657  0193               	clrf	19	;volatile
 10829                           
 10830                           ;adcc.c: 59: ADCON0 = 0x84;
 10831  1658  3084               	movlw	132
 10832  1659  0021               	movlb	1	; select bank1
 10833  165A  0093               	movwf	19	;volatile
 10834  165B  0008               	return
 10835  165C                     __end_of_ADCC_Initialize:	
 10836                           
 10837                           	psect	text27
 10838  0005                     __ptext27:	
 10839 ;; *************** function _PWM6_LoadDutyValue *****************
 10840 ;; Defined at:
 10841 ;;		line 14 in file "pwm6.c"
 10842 ;; Parameters:    Size  Location     Type
 10843 ;;  dutyCycle       2    0[COMMON] unsigned int 
 10844 ;; Auto vars:     Size  Location     Type
 10845 ;;		None
 10846 ;; Return value:  Size  Location     Type
 10847 ;;                  1    wreg      void 
 10848 ;; Registers used:
 10849 ;;		wreg, status,2, status,0
 10850 ;; Tracked objects:
 10851 ;;		On entry : 0/0
 10852 ;;		On exit  : 0/0
 10853 ;;		Unchanged: 0/0
 10854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10855 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10857 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10858 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10859 ;;Total ram usage:        4 bytes
 10860 ;; Hardware stack levels used:    1
 10861 ;; This function calls:
 10862 ;;		Nothing
 10863 ;; This function is called by:
 10864 ;;		_main
 10865 ;; This function uses a non-reentrant model
 10866 ;;
 10867                           
 10868                           
 10869                           ;psect for function _PWM6_LoadDutyValue
 10870  0005                     _PWM6_LoadDutyValue:	
 10871                           
 10872                           ;pwm6.c: 16: PWM6DCH = (dutyCycle & 0x03FC)>>2;
 10873                           
 10874                           ;incstack = 0
 10875                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
 10876  0005  0871               	movf	PWM6_LoadDutyValue@dutyCycle+1,w
 10877  0006  00F3               	movwf	??_PWM6_LoadDutyValue+1
 10878  0007  0870               	movf	PWM6_LoadDutyValue@dutyCycle,w
 10879  0008  00F2               	movwf	??_PWM6_LoadDutyValue
 10880  0009  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
 10881  000A  0CF2               	rrf	??_PWM6_LoadDutyValue,f
 10882  000B  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
 10883  000C  0CF2               	rrf	??_PWM6_LoadDutyValue,f
 10884  000D  0872               	movf	??_PWM6_LoadDutyValue,w
 10885  000E  0027               	movlb	7	; select bank7
 10886  000F  008D               	movwf	13	;volatile
 10887                           
 10888                           ;pwm6.c: 18: PWM6DCL = (dutyCycle & 0x0003)<<6;
 10889  0010  0870               	movf	PWM6_LoadDutyValue@dutyCycle,w
 10890  0011  3903               	andlw	3
 10891  0012  00F2               	movwf	??_PWM6_LoadDutyValue
 10892  0013  3005               	movlw	5
 10893  0014                     u3035:	
 10894  0014  35F2               	lslf	??_PWM6_LoadDutyValue,f
 10895  0015  3EFF               	addlw	-1
 10896  0016  1D03               	skipz
 10897  0017  2814               	goto	u3035
 10898  0018  3572               	lslf	??_PWM6_LoadDutyValue,w
 10899  0019  008C               	movwf	12	;volatile
 10900  001A  0008               	return
 10901  001B                     __end_of_PWM6_LoadDutyValue:	
 10902                           
 10903                           	psect	text28
 10904  1628                     __ptext28:	
 10905 ;; *************** function _LCD_Write_String *****************
 10906 ;; Defined at:
 10907 ;;		line 239 in file "lcd.c"
 10908 ;; Parameters:    Size  Location     Type
 10909 ;;  a               2    5[COMMON] PTR const unsigned char 
 10910 ;;		 -> STR_38(5), STR_37(4), STR_36(6), STR_35(3), 
 10911 ;;		 -> STR_34(11), STR_33(11), STR_32(17), STR_31(8), 
 10912 ;;		 -> STR_30(17), STR_29(11), STR_28(17), STR_27(11), 
 10913 ;;		 -> STR_26(2), STR_25(2), STR_24(2), STR_23(2), 
 10914 ;;		 -> STR_22(2), STR_21(2), STR_20(2), STR_19(2), 
 10915 ;;		 -> STR_18(2), STR_17(2), STR_16(2), STR_15(2), 
 10916 ;;		 -> STR_14(2), STR_13(2), STR_12(2), STR_11(2), 
 10917 ;;		 -> STR_10(2), STR_9(2), STR_8(2), STR_7(2), 
 10918 ;;		 -> STR_6(2), STR_5(2), STR_4(2), STR_3(2), 
 10919 ;;		 -> STR_2(2), STR_1(2), 
 10920 ;; Auto vars:     Size  Location     Type
 10921 ;;  i               2    8[COMMON] int 
 10922 ;; Return value:  Size  Location     Type
 10923 ;;                  1    wreg      void 
 10924 ;; Registers used:
 10925 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10926 ;; Tracked objects:
 10927 ;;		On entry : 0/0
 10928 ;;		On exit  : 0/0
 10929 ;;		Unchanged: 0/0
 10930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10931 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10932 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10933 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10934 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10935 ;;Total ram usage:        5 bytes
 10936 ;; Hardware stack levels used:    1
 10937 ;; Hardware stack levels required when called:    2
 10938 ;; This function calls:
 10939 ;;		_LCD_Write_Char
 10940 ;; This function is called by:
 10941 ;;		_main
 10942 ;; This function uses a non-reentrant model
 10943 ;;
 10944                           
 10945                           
 10946                           ;psect for function _LCD_Write_String
 10947  1628                     _LCD_Write_String:	
 10948                           
 10949                           ;lcd.c: 241: int i;
 10950                           ;lcd.c: 242: for(i=0;a[i]!='\0';i++)
 10951                           
 10952                           ;incstack = 0
 10953                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10954  1628  01F8               	clrf	LCD_Write_String@i
 10955  1629  01F9               	clrf	LCD_Write_String@i+1
 10956  162A                     l2697:	
 10957  162A  0875               	movf	LCD_Write_String@a,w
 10958  162B  0778               	addwf	LCD_Write_String@i,w
 10959  162C  0084               	movwf	4
 10960  162D  0876               	movf	LCD_Write_String@a+1,w
 10961  162E  3D79               	addwfc	LCD_Write_String@i+1,w
 10962  162F  0085               	movwf	5
 10963  1630  0012               	moviw fsr0++
 10964  1631  1903               	btfsc	3,2
 10965  1632  0008               	return
 10966                           
 10967                           ;lcd.c: 243: LCD_Write_Char(a[i]);
 10968  1633  0875               	movf	LCD_Write_String@a,w
 10969  1634  0778               	addwf	LCD_Write_String@i,w
 10970  1635  0084               	movwf	4
 10971  1636  0876               	movf	LCD_Write_String@a+1,w
 10972  1637  3D79               	addwfc	LCD_Write_String@i+1,w
 10973  1638  0085               	movwf	5
 10974  1639  0800               	movf	0,w	;code access
 10975  163A  3196  26B5  3196   	fcall	_LCD_Write_Char
 10976  163D  3001               	movlw	1
 10977  163E  07F8               	addwf	LCD_Write_String@i,f
 10978  163F  3000               	movlw	0
 10979  1640  3DF9               	addwfc	LCD_Write_String@i+1,f
 10980  1641  2E2A               	goto	l2697
 10981  1642                     __end_of_LCD_Write_String:	
 10982                           
 10983                           	psect	text29
 10984  0D60                     __ptext29:	
 10985 ;; *************** function _LCD_Write_Int *****************
 10986 ;; Defined at:
 10987 ;;		line 246 in file "lcd.c"
 10988 ;; Parameters:    Size  Location     Type
 10989 ;;  value           2    0[BANK0 ] int 
 10990 ;;  fieldLength     1    2[BANK0 ] char 
 10991 ;;  numPlaces       1    3[BANK0 ] char 
 10992 ;;  sign            1    4[BANK0 ] char 
 10993 ;; Auto vars:     Size  Location     Type
 10994 ;;  str             5   10[BANK0 ] unsigned char [5]
 10995 ;;  i               2   17[BANK0 ] int 
 10996 ;;  j               2   15[BANK0 ] int 
 10997 ;; Return value:  Size  Location     Type
 10998 ;;                  1    wreg      void 
 10999 ;; Registers used:
 11000 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11001 ;; Tracked objects:
 11002 ;;		On entry : 0/0
 11003 ;;		On exit  : 0/0
 11004 ;;		Unchanged: 0/0
 11005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11006 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11007 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11008 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11009 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11010 ;;Total ram usage:       19 bytes
 11011 ;; Hardware stack levels used:    1
 11012 ;; Hardware stack levels required when called:    2
 11013 ;; This function calls:
 11014 ;;		_LCD_Write_Char
 11015 ;;		___awdiv
 11016 ;;		___awmod
 11017 ;; This function is called by:
 11018 ;;		_main
 11019 ;; This function uses a non-reentrant model
 11020 ;;
 11021                           
 11022                           
 11023                           ;psect for function _LCD_Write_Int
 11024  0D60                     _LCD_Write_Int:	
 11025                           
 11026                           ;lcd.c: 248: char str[5]={0,0,0,0,0};
 11027                           
 11028                           ;incstack = 0
 11029                           ; Regs used in _LCD_Write_Int: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11030  0D60  30D8               	movlw	low LCD_Write_Int@F13687
 11031  0D61  0086               	movwf	6
 11032  0D62  3000               	movlw	high LCD_Write_Int@F13687
 11033  0D63  0087               	movwf	7
 11034  0D64  302A               	movlw	low LCD_Write_Int@str
 11035  0D65  0084               	movwf	4
 11036  0D66  3000               	movlw	high LCD_Write_Int@str
 11037  0D67  0085               	movwf	5
 11038  0D68  3005               	movlw	5
 11039  0D69  0020               	movlb	0	; select bank0
 11040  0D6A  00A5               	movwf	??_LCD_Write_Int
 11041  0D6B                     u2940:	
 11042  0D6B  0016               	moviw fsr1++
 11043  0D6C  001A               	movwi fsr0++
 11044  0D6D  0BA5               	decfsz	??_LCD_Write_Int,f
 11045  0D6E  2D6B               	goto	u2940
 11046                           
 11047                           ;lcd.c: 249: int i=4,j=0;
 11048  0D6F  3004               	movlw	4
 11049  0D70  00B1               	movwf	LCD_Write_Int@i
 11050  0D71  3000               	movlw	0
 11051  0D72  00B2               	movwf	LCD_Write_Int@i+1
 11052  0D73  01AF               	clrf	LCD_Write_Int@j
 11053  0D74  01B0               	clrf	LCD_Write_Int@j+1
 11054                           
 11055                           ;lcd.c: 251: if(value<0)
 11056  0D75  1FA1               	btfss	LCD_Write_Int@value+1,7
 11057  0D76  2D82               	goto	l2711
 11058                           
 11059                           ;lcd.c: 252: {
 11060                           ;lcd.c: 253: LCD_Write_Char('-');
 11061  0D77  302D               	movlw	45
 11062  0D78  3196  26B5  318D   	fcall	_LCD_Write_Char
 11063                           
 11064                           ;lcd.c: 254: value=value*-1;
 11065  0D7B  0020               	movlb	0	; select bank0
 11066  0D7C  09A0               	comf	LCD_Write_Int@value,f
 11067  0D7D  09A1               	comf	LCD_Write_Int@value+1,f
 11068  0D7E  0AA0               	incf	LCD_Write_Int@value,f
 11069  0D7F  1903               	skipnz
 11070  0D80  0AA1               	incf	LCD_Write_Int@value+1,f
 11071                           
 11072                           ;lcd.c: 255: }
 11073  0D81  2D89               	goto	l2721
 11074  0D82                     l2711:	
 11075                           
 11076                           ;lcd.c: 257: else
 11077                           ;lcd.c: 258: {
 11078                           ;lcd.c: 259: if(sign == 1)
 11079  0D82  0324               	decf	LCD_Write_Int@sign,w
 11080  0D83  1D03               	btfss	3,2
 11081  0D84  2D89               	goto	l2721
 11082                           
 11083                           ;lcd.c: 260: {
 11084                           ;lcd.c: 261: LCD_Write_Char('+');
 11085  0D85  302B               	movlw	43
 11086  0D86  3196  26B5  318D   	fcall	_LCD_Write_Char
 11087  0D89                     l2721:	
 11088                           ;lcd.c: 262: }
 11089                           ;lcd.c: 263: }
 11090                           ;lcd.c: 265: while(value)
 11091                           
 11092  0D89  0020               	movlb	0	; select bank0
 11093  0D8A  0820               	movf	LCD_Write_Int@value,w
 11094  0D8B  0421               	iorwf	LCD_Write_Int@value+1,w
 11095  0D8C  1903               	btfsc	3,2
 11096  0D8D  2DB8               	goto	l2723
 11097                           
 11098                           ;lcd.c: 266: {
 11099                           ;lcd.c: 267: str[i]=value%10;
 11100  0D8E  300A               	movlw	10
 11101  0D8F  00F0               	movwf	___awmod@divisor
 11102  0D90  3000               	movlw	0
 11103  0D91  00F1               	movwf	___awmod@divisor+1
 11104  0D92  0020               	movlb	0	; select bank0
 11105  0D93  0821               	movf	LCD_Write_Int@value+1,w
 11106  0D94  00F3               	movwf	___awmod@dividend+1
 11107  0D95  0820               	movf	LCD_Write_Int@value,w
 11108  0D96  00F2               	movwf	___awmod@dividend
 11109  0D97  3188  206D  318D   	fcall	___awmod
 11110  0D9A  0870               	movf	?___awmod,w
 11111  0D9B  0020               	movlb	0	; select bank0
 11112  0D9C  00A5               	movwf	??_LCD_Write_Int
 11113  0D9D  0831               	movf	LCD_Write_Int@i,w
 11114  0D9E  3E2A               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
 11115  0D9F  0086               	movwf	6
 11116  0DA0  0187               	clrf	7
 11117  0DA1  0825               	movf	??_LCD_Write_Int,w
 11118  0DA2  0081               	movwf	1
 11119                           
 11120                           ;lcd.c: 268: value=value/10;
 11121  0DA3  300A               	movlw	10
 11122  0DA4  00F0               	movwf	___awdiv@divisor
 11123  0DA5  3000               	movlw	0
 11124  0DA6  00F1               	movwf	___awdiv@divisor+1
 11125  0DA7  0821               	movf	LCD_Write_Int@value+1,w
 11126  0DA8  00F3               	movwf	___awdiv@dividend+1
 11127  0DA9  0820               	movf	LCD_Write_Int@value,w
 11128  0DAA  00F2               	movwf	___awdiv@dividend
 11129  0DAB  3188  20B2  318D   	fcall	___awdiv
 11130  0DAE  0871               	movf	?___awdiv+1,w
 11131  0DAF  0020               	movlb	0	; select bank0
 11132  0DB0  00A1               	movwf	LCD_Write_Int@value+1
 11133  0DB1  0870               	movf	?___awdiv,w
 11134  0DB2  00A0               	movwf	LCD_Write_Int@value
 11135                           
 11136                           ;lcd.c: 269: i--;
 11137  0DB3  30FF               	movlw	255
 11138  0DB4  07B1               	addwf	LCD_Write_Int@i,f
 11139  0DB5  30FF               	movlw	255
 11140  0DB6  3DB2               	addwfc	LCD_Write_Int@i+1,f
 11141  0DB7  2D89               	goto	l2721
 11142  0DB8                     l2723:	
 11143                           
 11144                           ;lcd.c: 270: }
 11145                           ;lcd.c: 271: if(fieldLength==-1)
 11146  0DB8  0A22               	incf	LCD_Write_Int@fieldLength,w
 11147  0DB9  1903               	btfsc	3,2
 11148  0DBA  2DC0               	goto	l2729
 11149  0DBB  2DC8               	goto	l2731
 11150  0DBC                     l2727:	
 11151                           ;lcd.c: 272: {
 11152                           ;lcd.c: 273: while(str[j]==0)
 11153                           
 11154                           
 11155                           ;lcd.c: 274: {
 11156                           ;lcd.c: 275: j++;
 11157  0DBC  3001               	movlw	1
 11158  0DBD  07AF               	addwf	LCD_Write_Int@j,f
 11159  0DBE  3000               	movlw	0
 11160  0DBF  3DB0               	addwfc	LCD_Write_Int@j+1,f
 11161  0DC0                     l2729:	
 11162  0DC0  082F               	movf	LCD_Write_Int@j,w
 11163  0DC1  3E2A               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
 11164  0DC2  0086               	movwf	6
 11165  0DC3  0187               	clrf	7
 11166  0DC4  0801               	movf	1,w
 11167  0DC5  1D03               	btfss	3,2
 11168  0DC6  2DD8               	goto	l2733
 11169  0DC7  2DBC               	goto	l2727
 11170  0DC8                     l2731:	
 11171                           ;lcd.c: 276: }
 11172                           ;lcd.c: 277: }
 11173                           
 11174                           
 11175                           ;lcd.c: 278: else
 11176                           ;lcd.c: 279: {
 11177                           ;lcd.c: 280: j=5-fieldLength;
 11178  0DC8  0822               	movf	LCD_Write_Int@fieldLength,w
 11179  0DC9  00A5               	movwf	??_LCD_Write_Int
 11180  0DCA  01A6               	clrf	??_LCD_Write_Int+1
 11181  0DCB  1BA5               	btfsc	??_LCD_Write_Int,7
 11182  0DCC  03A6               	decf	??_LCD_Write_Int+1,f
 11183  0DCD  09A5               	comf	??_LCD_Write_Int,f
 11184  0DCE  09A6               	comf	??_LCD_Write_Int+1,f
 11185  0DCF  0AA5               	incf	??_LCD_Write_Int,f
 11186  0DD0  1903               	skipnz
 11187  0DD1  0AA6               	incf	??_LCD_Write_Int+1,f
 11188  0DD2  0825               	movf	??_LCD_Write_Int,w
 11189  0DD3  3E05               	addlw	5
 11190  0DD4  00AF               	movwf	LCD_Write_Int@j
 11191  0DD5  3000               	movlw	0
 11192  0DD6  3D26               	addwfc	??_LCD_Write_Int+1,w
 11193  0DD7  00B0               	movwf	LCD_Write_Int@j+1
 11194  0DD8                     l2733:	
 11195                           
 11196                           ;lcd.c: 281: }
 11197                           ;lcd.c: 283: for(i=j;i<(5-numPlaces);i++)
 11198  0DD8  0830               	movf	LCD_Write_Int@j+1,w
 11199  0DD9  00B2               	movwf	LCD_Write_Int@i+1
 11200  0DDA  082F               	movf	LCD_Write_Int@j,w
 11201  0DDB  00B1               	movwf	LCD_Write_Int@i
 11202  0DDC                     l2739:	
 11203  0DDC  0823               	movf	LCD_Write_Int@numPlaces,w
 11204  0DDD  00A5               	movwf	??_LCD_Write_Int
 11205  0DDE  01A6               	clrf	??_LCD_Write_Int+1
 11206  0DDF  1BA5               	btfsc	??_LCD_Write_Int,7
 11207  0DE0  03A6               	decf	??_LCD_Write_Int+1,f
 11208  0DE1  09A5               	comf	??_LCD_Write_Int,f
 11209  0DE2  09A6               	comf	??_LCD_Write_Int+1,f
 11210  0DE3  0AA5               	incf	??_LCD_Write_Int,f
 11211  0DE4  1903               	skipnz
 11212  0DE5  0AA6               	incf	??_LCD_Write_Int+1,f
 11213  0DE6  0825               	movf	??_LCD_Write_Int,w
 11214  0DE7  3E05               	addlw	5
 11215  0DE8  00A7               	movwf	??_LCD_Write_Int+2
 11216  0DE9  3000               	movlw	0
 11217  0DEA  3D26               	addwfc	??_LCD_Write_Int+1,w
 11218  0DEB  00A8               	movwf	??_LCD_Write_Int+3
 11219  0DEC  0832               	movf	LCD_Write_Int@i+1,w
 11220  0DED  3A80               	xorlw	128
 11221  0DEE  00A9               	movwf	??_LCD_Write_Int+4
 11222  0DEF  0828               	movf	??_LCD_Write_Int+3,w
 11223  0DF0  3A80               	xorlw	128
 11224  0DF1  0229               	subwf	??_LCD_Write_Int+4,w
 11225  0DF2  1D03               	skipz
 11226  0DF3  2DF6               	goto	u3005
 11227  0DF4  0827               	movf	??_LCD_Write_Int+2,w
 11228  0DF5  0231               	subwf	LCD_Write_Int@i,w
 11229  0DF6                     u3005:	
 11230  0DF6  1803               	btfsc	3,0
 11231  0DF7  2E08               	goto	l2741
 11232                           
 11233                           ;lcd.c: 284: {
 11234                           ;lcd.c: 285: LCD_Write_Char(48+str[i]);
 11235  0DF8  0020               	movlb	0	; select bank0
 11236  0DF9  0831               	movf	LCD_Write_Int@i,w
 11237  0DFA  3E2A               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
 11238  0DFB  0086               	movwf	6
 11239  0DFC  0187               	clrf	7
 11240  0DFD  0801               	movf	1,w
 11241  0DFE  3E30               	addlw	48
 11242  0DFF  3196  26B5  318D   	fcall	_LCD_Write_Char
 11243  0E02  3001               	movlw	1
 11244  0E03  0020               	movlb	0	; select bank0
 11245  0E04  07B1               	addwf	LCD_Write_Int@i,f
 11246  0E05  3000               	movlw	0
 11247  0E06  3DB2               	addwfc	LCD_Write_Int@i+1,f
 11248  0E07  2DDC               	goto	l2739
 11249  0E08                     l2741:	
 11250                           
 11251                           ;lcd.c: 286: }
 11252                           ;lcd.c: 288: if(numPlaces == 1)
 11253  0E08  0020               	movlb	0	; select bank0
 11254  0E09  0323               	decf	LCD_Write_Int@numPlaces,w
 11255  0E0A  1D03               	btfss	3,2
 11256  0E0B  2E16               	goto	l2745
 11257                           
 11258                           ;lcd.c: 289: {
 11259                           ;lcd.c: 290: LCD_Write_Char(46);
 11260  0E0C  302E               	movlw	46
 11261  0E0D  3196  26B5  318D   	fcall	_LCD_Write_Char
 11262                           
 11263                           ;lcd.c: 291: LCD_Write_Char(48+str[4]);
 11264  0E10  0020               	movlb	0	; select bank0
 11265  0E11  082E               	movf	LCD_Write_Int@str+4,w
 11266  0E12  3E30               	addlw	48
 11267  0E13  3196  26B5  318D   	fcall	_LCD_Write_Char
 11268  0E16                     l2745:	
 11269                           
 11270                           ;lcd.c: 292: }
 11271                           ;lcd.c: 294: if(numPlaces == 2)
 11272  0E16  3002               	movlw	2
 11273  0E17  0020               	movlb	0	; select bank0
 11274  0E18  0623               	xorwf	LCD_Write_Int@numPlaces,w
 11275  0E19  1D03               	btfss	3,2
 11276  0E1A  0008               	return
 11277                           
 11278                           ;lcd.c: 295: {
 11279                           ;lcd.c: 296: LCD_Write_Char(46);
 11280  0E1B  302E               	movlw	46
 11281  0E1C  3196  26B5  318D   	fcall	_LCD_Write_Char
 11282                           
 11283                           ;lcd.c: 297: LCD_Write_Char(48+str[3]);
 11284  0E1F  0020               	movlb	0	; select bank0
 11285  0E20  082D               	movf	LCD_Write_Int@str+3,w
 11286  0E21  3E30               	addlw	48
 11287  0E22  3196  26B5  318D   	fcall	_LCD_Write_Char
 11288                           
 11289                           ;lcd.c: 298: LCD_Write_Char(48+str[4]);
 11290  0E25  0020               	movlb	0	; select bank0
 11291  0E26  082E               	movf	LCD_Write_Int@str+4,w
 11292  0E27  3E30               	addlw	48
 11293  0E28  3196  26B5         	fcall	_LCD_Write_Char
 11294  0E2A  0008               	return
 11295  0E2B                     __end_of_LCD_Write_Int:	
 11296                           
 11297                           	psect	text30
 11298  086D                     __ptext30:	
 11299 ;; *************** function ___awmod *****************
 11300 ;; Defined at:
 11301 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c"
 11302 ;; Parameters:    Size  Location     Type
 11303 ;;  divisor         2    0[COMMON] int 
 11304 ;;  dividend        2    2[COMMON] int 
 11305 ;; Auto vars:     Size  Location     Type
 11306 ;;  sign            1    6[COMMON] unsigned char 
 11307 ;;  counter         1    5[COMMON] unsigned char 
 11308 ;; Return value:  Size  Location     Type
 11309 ;;                  2    0[COMMON] int 
 11310 ;; Registers used:
 11311 ;;		wreg, status,2, status,0
 11312 ;; Tracked objects:
 11313 ;;		On entry : 0/0
 11314 ;;		On exit  : 0/0
 11315 ;;		Unchanged: 0/0
 11316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11317 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11318 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11319 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11320 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11321 ;;Total ram usage:        7 bytes
 11322 ;; Hardware stack levels used:    1
 11323 ;; This function calls:
 11324 ;;		Nothing
 11325 ;; This function is called by:
 11326 ;;		_LCD_Write_Int
 11327 ;; This function uses a non-reentrant model
 11328 ;;
 11329                           
 11330                           
 11331                           ;psect for function ___awmod
 11332  086D                     ___awmod:	
 11333                           
 11334                           ;incstack = 0
 11335                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 11336  086D  01F6               	clrf	___awmod@sign
 11337  086E  1FF3               	btfss	___awmod@dividend+1,7
 11338  086F  2877               	goto	l2571
 11339  0870  09F2               	comf	___awmod@dividend,f
 11340  0871  09F3               	comf	___awmod@dividend+1,f
 11341  0872  0AF2               	incf	___awmod@dividend,f
 11342  0873  1903               	skipnz
 11343  0874  0AF3               	incf	___awmod@dividend+1,f
 11344  0875  01F6               	clrf	___awmod@sign
 11345  0876  0AF6               	incf	___awmod@sign,f
 11346  0877                     l2571:	
 11347  0877  1FF1               	btfss	___awmod@divisor+1,7
 11348  0878  287E               	goto	l2575
 11349  0879  09F0               	comf	___awmod@divisor,f
 11350  087A  09F1               	comf	___awmod@divisor+1,f
 11351  087B  0AF0               	incf	___awmod@divisor,f
 11352  087C  1903               	skipnz
 11353  087D  0AF1               	incf	___awmod@divisor+1,f
 11354  087E                     l2575:	
 11355  087E  0870               	movf	___awmod@divisor,w
 11356  087F  0471               	iorwf	___awmod@divisor+1,w
 11357  0880  1903               	btfsc	3,2
 11358  0881  28A5               	goto	l2593
 11359  0882  01F5               	clrf	___awmod@counter
 11360  0883  0AF5               	incf	___awmod@counter,f
 11361  0884                     l2583:	
 11362  0884  1BF1               	btfsc	___awmod@divisor+1,7
 11363  0885  2890               	goto	l2585
 11364  0886  3001               	movlw	1
 11365  0887                     u2675:	
 11366  0887  35F0               	lslf	___awmod@divisor,f
 11367  0888  0DF1               	rlf	___awmod@divisor+1,f
 11368  0889  0B89               	decfsz	9,f
 11369  088A  2887               	goto	u2675
 11370  088B  3001               	movlw	1
 11371  088C  00F4               	movwf	??___awmod
 11372  088D  0874               	movf	??___awmod,w
 11373  088E  07F5               	addwf	___awmod@counter,f
 11374  088F  2884               	goto	l2583
 11375  0890                     l2585:	
 11376  0890  0871               	movf	___awmod@divisor+1,w
 11377  0891  0273               	subwf	___awmod@dividend+1,w
 11378  0892  1D03               	skipz
 11379  0893  2896               	goto	u2695
 11380  0894  0870               	movf	___awmod@divisor,w
 11381  0895  0272               	subwf	___awmod@dividend,w
 11382  0896                     u2695:	
 11383  0896  1C03               	skipc
 11384  0897  289C               	goto	l2589
 11385  0898  0870               	movf	___awmod@divisor,w
 11386  0899  02F2               	subwf	___awmod@dividend,f
 11387  089A  0871               	movf	___awmod@divisor+1,w
 11388  089B  3BF3               	subwfb	___awmod@dividend+1,f
 11389  089C                     l2589:	
 11390  089C  3001               	movlw	1
 11391  089D                     u2705:	
 11392  089D  36F1               	lsrf	___awmod@divisor+1,f
 11393  089E  0CF0               	rrf	___awmod@divisor,f
 11394  089F  0B89               	decfsz	9,f
 11395  08A0  289D               	goto	u2705
 11396  08A1  3001               	movlw	1
 11397  08A2  02F5               	subwf	___awmod@counter,f
 11398  08A3  1D03               	btfss	3,2
 11399  08A4  2890               	goto	l2585
 11400  08A5                     l2593:	
 11401  08A5  0876               	movf	___awmod@sign,w
 11402  08A6  1903               	btfsc	3,2
 11403  08A7  28AD               	goto	l2597
 11404  08A8  09F2               	comf	___awmod@dividend,f
 11405  08A9  09F3               	comf	___awmod@dividend+1,f
 11406  08AA  0AF2               	incf	___awmod@dividend,f
 11407  08AB  1903               	skipnz
 11408  08AC  0AF3               	incf	___awmod@dividend+1,f
 11409  08AD                     l2597:	
 11410  08AD  0873               	movf	___awmod@dividend+1,w
 11411  08AE  00F1               	movwf	?___awmod+1
 11412  08AF  0872               	movf	___awmod@dividend,w
 11413  08B0  00F0               	movwf	?___awmod
 11414  08B1  0008               	return
 11415  08B2                     __end_of___awmod:	
 11416                           
 11417                           	psect	text31
 11418  08B2                     __ptext31:	
 11419 ;; *************** function ___awdiv *****************
 11420 ;; Defined at:
 11421 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c"
 11422 ;; Parameters:    Size  Location     Type
 11423 ;;  divisor         2    0[COMMON] int 
 11424 ;;  dividend        2    2[COMMON] int 
 11425 ;; Auto vars:     Size  Location     Type
 11426 ;;  quotient        2    7[COMMON] int 
 11427 ;;  sign            1    6[COMMON] unsigned char 
 11428 ;;  counter         1    5[COMMON] unsigned char 
 11429 ;; Return value:  Size  Location     Type
 11430 ;;                  2    0[COMMON] int 
 11431 ;; Registers used:
 11432 ;;		wreg, status,2, status,0
 11433 ;; Tracked objects:
 11434 ;;		On entry : 0/0
 11435 ;;		On exit  : 0/0
 11436 ;;		Unchanged: 0/0
 11437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11438 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11439 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11440 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11441 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11442 ;;Total ram usage:        9 bytes
 11443 ;; Hardware stack levels used:    1
 11444 ;; This function calls:
 11445 ;;		Nothing
 11446 ;; This function is called by:
 11447 ;;		_LCD_Write_Int
 11448 ;; This function uses a non-reentrant model
 11449 ;;
 11450                           
 11451                           
 11452                           ;psect for function ___awdiv
 11453  08B2                     ___awdiv:	
 11454                           
 11455                           ;incstack = 0
 11456                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 11457  08B2  01F6               	clrf	___awdiv@sign
 11458  08B3  1FF1               	btfss	___awdiv@divisor+1,7
 11459  08B4  28BC               	goto	l2527
 11460  08B5  09F0               	comf	___awdiv@divisor,f
 11461  08B6  09F1               	comf	___awdiv@divisor+1,f
 11462  08B7  0AF0               	incf	___awdiv@divisor,f
 11463  08B8  1903               	skipnz
 11464  08B9  0AF1               	incf	___awdiv@divisor+1,f
 11465  08BA  01F6               	clrf	___awdiv@sign
 11466  08BB  0AF6               	incf	___awdiv@sign,f
 11467  08BC                     l2527:	
 11468  08BC  1FF3               	btfss	___awdiv@dividend+1,7
 11469  08BD  28C7               	goto	l2533
 11470  08BE  09F2               	comf	___awdiv@dividend,f
 11471  08BF  09F3               	comf	___awdiv@dividend+1,f
 11472  08C0  0AF2               	incf	___awdiv@dividend,f
 11473  08C1  1903               	skipnz
 11474  08C2  0AF3               	incf	___awdiv@dividend+1,f
 11475  08C3  3001               	movlw	1
 11476  08C4  00F4               	movwf	??___awdiv
 11477  08C5  0874               	movf	??___awdiv,w
 11478  08C6  06F6               	xorwf	___awdiv@sign,f
 11479  08C7                     l2533:	
 11480  08C7  01F7               	clrf	___awdiv@quotient
 11481  08C8  01F8               	clrf	___awdiv@quotient+1
 11482  08C9  0870               	movf	___awdiv@divisor,w
 11483  08CA  0471               	iorwf	___awdiv@divisor+1,w
 11484  08CB  1903               	btfsc	3,2
 11485  08CC  28F6               	goto	l2555
 11486  08CD  01F5               	clrf	___awdiv@counter
 11487  08CE  0AF5               	incf	___awdiv@counter,f
 11488  08CF                     l2543:	
 11489  08CF  1BF1               	btfsc	___awdiv@divisor+1,7
 11490  08D0  28DB               	goto	l2545
 11491  08D1  3001               	movlw	1
 11492  08D2                     u2575:	
 11493  08D2  35F0               	lslf	___awdiv@divisor,f
 11494  08D3  0DF1               	rlf	___awdiv@divisor+1,f
 11495  08D4  0B89               	decfsz	9,f
 11496  08D5  28D2               	goto	u2575
 11497  08D6  3001               	movlw	1
 11498  08D7  00F4               	movwf	??___awdiv
 11499  08D8  0874               	movf	??___awdiv,w
 11500  08D9  07F5               	addwf	___awdiv@counter,f
 11501  08DA  28CF               	goto	l2543
 11502  08DB                     l2545:	
 11503  08DB  3001               	movlw	1
 11504  08DC                     u2595:	
 11505  08DC  35F7               	lslf	___awdiv@quotient,f
 11506  08DD  0DF8               	rlf	___awdiv@quotient+1,f
 11507  08DE  0B89               	decfsz	9,f
 11508  08DF  28DC               	goto	u2595
 11509  08E0  0871               	movf	___awdiv@divisor+1,w
 11510  08E1  0273               	subwf	___awdiv@dividend+1,w
 11511  08E2  1D03               	skipz
 11512  08E3  28E6               	goto	u2605
 11513  08E4  0870               	movf	___awdiv@divisor,w
 11514  08E5  0272               	subwf	___awdiv@dividend,w
 11515  08E6                     u2605:	
 11516  08E6  1C03               	skipc
 11517  08E7  28ED               	goto	l2551
 11518  08E8  0870               	movf	___awdiv@divisor,w
 11519  08E9  02F2               	subwf	___awdiv@dividend,f
 11520  08EA  0871               	movf	___awdiv@divisor+1,w
 11521  08EB  3BF3               	subwfb	___awdiv@dividend+1,f
 11522  08EC  1477               	bsf	___awdiv@quotient,0
 11523  08ED                     l2551:	
 11524  08ED  3001               	movlw	1
 11525  08EE                     u2615:	
 11526  08EE  36F1               	lsrf	___awdiv@divisor+1,f
 11527  08EF  0CF0               	rrf	___awdiv@divisor,f
 11528  08F0  0B89               	decfsz	9,f
 11529  08F1  28EE               	goto	u2615
 11530  08F2  3001               	movlw	1
 11531  08F3  02F5               	subwf	___awdiv@counter,f
 11532  08F4  1D03               	btfss	3,2
 11533  08F5  28DB               	goto	l2545
 11534  08F6                     l2555:	
 11535  08F6  0876               	movf	___awdiv@sign,w
 11536  08F7  1903               	btfsc	3,2
 11537  08F8  28FE               	goto	l2559
 11538  08F9  09F7               	comf	___awdiv@quotient,f
 11539  08FA  09F8               	comf	___awdiv@quotient+1,f
 11540  08FB  0AF7               	incf	___awdiv@quotient,f
 11541  08FC  1903               	skipnz
 11542  08FD  0AF8               	incf	___awdiv@quotient+1,f
 11543  08FE                     l2559:	
 11544  08FE  0878               	movf	___awdiv@quotient+1,w
 11545  08FF  00F1               	movwf	?___awdiv+1
 11546  0900  0877               	movf	___awdiv@quotient,w
 11547  0901  00F0               	movwf	?___awdiv
 11548  0902  0008               	return
 11549  0903                     __end_of___awdiv:	
 11550                           
 11551                           	psect	text32
 11552  16B5                     __ptext32:	
 11553 ;; *************** function _LCD_Write_Char *****************
 11554 ;; Defined at:
 11555 ;;		line 223 in file "lcd.c"
 11556 ;; Parameters:    Size  Location     Type
 11557 ;;  a               1    wreg     const unsigned char 
 11558 ;; Auto vars:     Size  Location     Type
 11559 ;;  a               1    4[COMMON] const unsigned char 
 11560 ;;  y               1    3[COMMON] unsigned char 
 11561 ;;  temp            1    2[COMMON] unsigned char 
 11562 ;; Return value:  Size  Location     Type
 11563 ;;                  1    wreg      void 
 11564 ;; Registers used:
 11565 ;;		wreg, status,2, status,0, pclath, cstack
 11566 ;; Tracked objects:
 11567 ;;		On entry : 0/0
 11568 ;;		On exit  : 0/0
 11569 ;;		Unchanged: 0/0
 11570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11572 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11573 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11574 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11575 ;;Total ram usage:        4 bytes
 11576 ;; Hardware stack levels used:    1
 11577 ;; Hardware stack levels required when called:    1
 11578 ;; This function calls:
 11579 ;;		_LCD_Port
 11580 ;; This function is called by:
 11581 ;;		_InitCustomChars
 11582 ;;		_LCD_Write_String
 11583 ;;		_LCD_Write_Int
 11584 ;;		_main
 11585 ;; This function uses a non-reentrant model
 11586 ;;
 11587                           
 11588                           
 11589                           ;psect for function _LCD_Write_Char
 11590  16B5                     _LCD_Write_Char:	
 11591                           
 11592                           ;incstack = 0
 11593                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
 11594                           ;LCD_Write_Char@a stored from wreg
 11595  16B5  00F4               	movwf	LCD_Write_Char@a
 11596                           
 11597                           ;lcd.c: 225: char temp,y;
 11598                           ;lcd.c: 226: temp = a&0x0F;
 11599  16B6  0874               	movf	LCD_Write_Char@a,w
 11600  16B7  390F               	andlw	15
 11601  16B8  00F1               	movwf	??_LCD_Write_Char
 11602  16B9  0871               	movf	??_LCD_Write_Char,w
 11603  16BA  00F2               	movwf	LCD_Write_Char@temp
 11604                           
 11605                           ;lcd.c: 227: y = a&0xF0;
 11606  16BB  0874               	movf	LCD_Write_Char@a,w
 11607  16BC  39F0               	andlw	240
 11608  16BD  00F1               	movwf	??_LCD_Write_Char
 11609  16BE  0871               	movf	??_LCD_Write_Char,w
 11610  16BF  00F3               	movwf	LCD_Write_Char@y
 11611                           
 11612                           ;lcd.c: 228: RA0 = 1;
 11613  16C0  0020               	movlb	0	; select bank0
 11614  16C1  140C               	bsf	12,0	;volatile
 11615                           
 11616                           ;lcd.c: 229: LCD_Port(y>>4);
 11617  16C2  0873               	movf	LCD_Write_Char@y,w
 11618  16C3  00F1               	movwf	??_LCD_Write_Char
 11619  16C4  3004               	movlw	4
 11620  16C5                     u2305:	
 11621  16C5  36F1               	lsrf	??_LCD_Write_Char,f
 11622  16C6  0B89               	decfsz	9,f
 11623  16C7  2EC5               	goto	u2305
 11624  16C8  0871               	movf	??_LCD_Write_Char,w
 11625  16C9  3196  2610  3196   	fcall	_LCD_Port
 11626                           
 11627                           ;lcd.c: 230: RA2 = 1;
 11628  16CC  0020               	movlb	0	; select bank0
 11629  16CD  150C               	bsf	12,2	;volatile
 11630                           
 11631                           ;lcd.c: 231: RA2 = 0;
 11632  16CE  110C               	bcf	12,2	;volatile
 11633                           
 11634                           ;lcd.c: 232: _delay((unsigned long)((40)*(32000000/4000000.0)));
 11635  16CF  306A               	movlw	106
 11636  16D0  00F1               	movwf	??_LCD_Write_Char
 11637  16D1                     u3947:	
 11638  16D1  0BF1               	decfsz	??_LCD_Write_Char,f
 11639  16D2  2ED1               	goto	u3947
 11640  16D3  0000               	nop
 11641                           
 11642                           ;lcd.c: 233: LCD_Port(temp);
 11643  16D4  0872               	movf	LCD_Write_Char@temp,w
 11644  16D5  3196  2610  3196   	fcall	_LCD_Port
 11645                           
 11646                           ;lcd.c: 234: RA2 = 1;
 11647  16D8  0020               	movlb	0	; select bank0
 11648  16D9  150C               	bsf	12,2	;volatile
 11649                           
 11650                           ;lcd.c: 235: RA2 = 0;
 11651  16DA  110C               	bcf	12,2	;volatile
 11652                           
 11653                           ;lcd.c: 236: _delay((unsigned long)((40)*(32000000/4000000.0)));
 11654  16DB  306A               	movlw	106
 11655  16DC  00F1               	movwf	??_LCD_Write_Char
 11656  16DD                     u3957:	
 11657  16DD  0BF1               	decfsz	??_LCD_Write_Char,f
 11658  16DE  2EDD               	goto	u3957
 11659  16DF  0000               	nop
 11660  16E0  0008               	return
 11661  16E1                     __end_of_LCD_Write_Char:	
 11662                           
 11663                           	psect	text33
 11664  17C1                     __ptext33:	
 11665 ;; *************** function _LCD_Set_Cursor *****************
 11666 ;; Defined at:
 11667 ;;		line 82 in file "lcd.c"
 11668 ;; Parameters:    Size  Location     Type
 11669 ;;  x               1    wreg     unsigned char 
 11670 ;;  y               1    4[COMMON] unsigned char 
 11671 ;; Auto vars:     Size  Location     Type
 11672 ;;  x               1    7[COMMON] unsigned char 
 11673 ;;  temp            1   10[COMMON] unsigned char 
 11674 ;;  w               1    9[COMMON] unsigned char 
 11675 ;;  z               1    8[COMMON] unsigned char 
 11676 ;; Return value:  Size  Location     Type
 11677 ;;                  1    wreg      void 
 11678 ;; Registers used:
 11679 ;;		wreg, status,2, status,0, pclath, cstack
 11680 ;; Tracked objects:
 11681 ;;		On entry : 0/0
 11682 ;;		On exit  : 0/0
 11683 ;;		Unchanged: 0/0
 11684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11685 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11686 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11687 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11688 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11689 ;;Total ram usage:        7 bytes
 11690 ;; Hardware stack levels used:    1
 11691 ;; Hardware stack levels required when called:    2
 11692 ;; This function calls:
 11693 ;;		_LCD_Cmd
 11694 ;; This function is called by:
 11695 ;;		_main
 11696 ;; This function uses a non-reentrant model
 11697 ;;
 11698                           
 11699                           
 11700                           ;psect for function _LCD_Set_Cursor
 11701  17C1                     _LCD_Set_Cursor:	
 11702                           
 11703                           ;incstack = 0
 11704                           ; Regs used in _LCD_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
 11705                           ;LCD_Set_Cursor@x stored from wreg
 11706  17C1  00F7               	movwf	LCD_Set_Cursor@x
 11707                           
 11708                           ;lcd.c: 86: char temp,z,w;
 11709                           ;lcd.c: 88: if(y == 0)
 11710  17C2  0874               	movf	LCD_Set_Cursor@y,w
 11711  17C3  1D03               	btfss	3,2
 11712  17C4  2FE1               	goto	l2681
 11713                           
 11714                           ;lcd.c: 89: {
 11715                           ;lcd.c: 90: temp = 0x80 + x;
 11716  17C5  0877               	movf	LCD_Set_Cursor@x,w
 11717  17C6  3E80               	addlw	128
 11718  17C7  00F5               	movwf	??_LCD_Set_Cursor
 11719  17C8  0875               	movf	??_LCD_Set_Cursor,w
 11720  17C9  00FA               	movwf	LCD_Set_Cursor@temp
 11721                           
 11722                           ;lcd.c: 91: z = temp>>4;
 11723  17CA  087A               	movf	LCD_Set_Cursor@temp,w
 11724  17CB  00F5               	movwf	??_LCD_Set_Cursor
 11725  17CC  3004               	movlw	4
 11726  17CD                     u2905:	
 11727  17CD  36F5               	lsrf	??_LCD_Set_Cursor,f
 11728  17CE  0B89               	decfsz	9,f
 11729  17CF  2FCD               	goto	u2905
 11730  17D0  0875               	movf	??_LCD_Set_Cursor,w
 11731  17D1  00F6               	movwf	??_LCD_Set_Cursor+1
 11732  17D2  0876               	movf	??_LCD_Set_Cursor+1,w
 11733  17D3  00F8               	movwf	LCD_Set_Cursor@z
 11734                           
 11735                           ;lcd.c: 92: w = temp & 0x0F;
 11736  17D4  087A               	movf	LCD_Set_Cursor@temp,w
 11737  17D5  390F               	andlw	15
 11738  17D6  00F5               	movwf	??_LCD_Set_Cursor
 11739  17D7  0875               	movf	??_LCD_Set_Cursor,w
 11740  17D8  00F9               	movwf	LCD_Set_Cursor@w
 11741                           
 11742                           ;lcd.c: 93: LCD_Cmd(z);
 11743  17D9  0878               	movf	LCD_Set_Cursor@z,w
 11744  17DA  3195  25FC  3197   	fcall	_LCD_Cmd
 11745                           
 11746                           ;lcd.c: 94: LCD_Cmd(w);
 11747  17DD  0879               	movf	LCD_Set_Cursor@w,w
 11748  17DE  3195  25FC         	fcall	_LCD_Cmd
 11749                           
 11750                           ;lcd.c: 95: }
 11751  17E0  0008               	return
 11752  17E1                     l2681:	
 11753                           
 11754                           ;lcd.c: 97: else if(y == 1)
 11755  17E1  0374               	decf	LCD_Set_Cursor@y,w
 11756  17E2  1D03               	btfss	3,2
 11757  17E3  0008               	return
 11758                           
 11759                           ;lcd.c: 98: {
 11760                           ;lcd.c: 99: temp = 0xC0 + x;
 11761  17E4  0877               	movf	LCD_Set_Cursor@x,w
 11762  17E5  3EC0               	addlw	192
 11763  17E6  00F5               	movwf	??_LCD_Set_Cursor
 11764  17E7  0875               	movf	??_LCD_Set_Cursor,w
 11765  17E8  00FA               	movwf	LCD_Set_Cursor@temp
 11766                           
 11767                           ;lcd.c: 100: z = temp>>4;
 11768  17E9  087A               	movf	LCD_Set_Cursor@temp,w
 11769  17EA  00F5               	movwf	??_LCD_Set_Cursor
 11770  17EB  3004               	movlw	4
 11771  17EC                     u2925:	
 11772  17EC  36F5               	lsrf	??_LCD_Set_Cursor,f
 11773  17ED  0B89               	decfsz	9,f
 11774  17EE  2FEC               	goto	u2925
 11775  17EF  0875               	movf	??_LCD_Set_Cursor,w
 11776  17F0  00F6               	movwf	??_LCD_Set_Cursor+1
 11777  17F1  0876               	movf	??_LCD_Set_Cursor+1,w
 11778  17F2  00F8               	movwf	LCD_Set_Cursor@z
 11779                           
 11780                           ;lcd.c: 101: w = temp & 0x0F;
 11781  17F3  087A               	movf	LCD_Set_Cursor@temp,w
 11782  17F4  390F               	andlw	15
 11783  17F5  00F5               	movwf	??_LCD_Set_Cursor
 11784  17F6  0875               	movf	??_LCD_Set_Cursor,w
 11785  17F7  00F9               	movwf	LCD_Set_Cursor@w
 11786                           
 11787                           ;lcd.c: 102: LCD_Cmd(z);
 11788  17F8  0878               	movf	LCD_Set_Cursor@z,w
 11789  17F9  3195  25FC  3197   	fcall	_LCD_Cmd
 11790                           
 11791                           ;lcd.c: 103: LCD_Cmd(w);
 11792  17FC  0879               	movf	LCD_Set_Cursor@w,w
 11793  17FD  3195  25FC         	fcall	_LCD_Cmd
 11794  17FF  0008               	return
 11795  1800                     __end_of_LCD_Set_Cursor:	
 11796                           
 11797                           	psect	text34
 11798  15FC                     __ptext34:	
 11799 ;; *************** function _LCD_Cmd *****************
 11800 ;; Defined at:
 11801 ;;		line 65 in file "lcd.c"
 11802 ;; Parameters:    Size  Location     Type
 11803 ;;  a               1    wreg     unsigned char 
 11804 ;; Auto vars:     Size  Location     Type
 11805 ;;  a               1    3[COMMON] unsigned char 
 11806 ;; Return value:  Size  Location     Type
 11807 ;;                  1    wreg      void 
 11808 ;; Registers used:
 11809 ;;		wreg, status,2, status,0, pclath, cstack
 11810 ;; Tracked objects:
 11811 ;;		On entry : 0/0
 11812 ;;		On exit  : 0/0
 11813 ;;		Unchanged: 0/0
 11814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11816 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11817 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11818 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11819 ;;Total ram usage:        3 bytes
 11820 ;; Hardware stack levels used:    1
 11821 ;; Hardware stack levels required when called:    1
 11822 ;; This function calls:
 11823 ;;		_LCD_Port
 11824 ;; This function is called by:
 11825 ;;		_InitCustomChars
 11826 ;;		_LCD_Clear
 11827 ;;		_LCD_Set_Cursor
 11828 ;;		_LCD_Init
 11829 ;; This function uses a non-reentrant model
 11830 ;;
 11831                           
 11832                           
 11833                           ;psect for function _LCD_Cmd
 11834  15FC                     _LCD_Cmd:	
 11835                           
 11836                           ;incstack = 0
 11837                           ; Regs used in _LCD_Cmd: [wreg+status,2+status,0+pclath+cstack]
 11838                           ;LCD_Cmd@a stored from wreg
 11839  15FC  00F3               	movwf	LCD_Cmd@a
 11840                           
 11841                           ;lcd.c: 67: RA0 = 0;
 11842  15FD  0020               	movlb	0	; select bank0
 11843  15FE  100C               	bcf	12,0	;volatile
 11844                           
 11845                           ;lcd.c: 68: LCD_Port(a);
 11846  15FF  0873               	movf	LCD_Cmd@a,w
 11847  1600  3196  2610  3195   	fcall	_LCD_Port
 11848                           
 11849                           ;lcd.c: 69: RA2 = 1;
 11850  1603  0020               	movlb	0	; select bank0
 11851  1604  150C               	bsf	12,2	;volatile
 11852                           
 11853                           ;lcd.c: 70: RA2 = 0;
 11854  1605  110C               	bcf	12,2	;volatile
 11855                           
 11856                           ;lcd.c: 71: _delay((unsigned long)((4)*(32000000/4000.0)));
 11857  1606  302A               	movlw	42
 11858  1607  00F2               	movwf	??_LCD_Cmd+1
 11859  1608  308D               	movlw	141
 11860  1609  00F1               	movwf	??_LCD_Cmd
 11861  160A                     u3967:	
 11862  160A  0BF1               	decfsz	??_LCD_Cmd,f
 11863  160B  2E0A               	goto	u3967
 11864  160C  0BF2               	decfsz	??_LCD_Cmd+1,f
 11865  160D  2E0A               	goto	u3967
 11866  160E  3200               	nop2
 11867  160F  0008               	return
 11868  1610                     __end_of_LCD_Cmd:	
 11869                           
 11870                           	psect	text35
 11871  1610                     __ptext35:	
 11872 ;; *************** function _LCD_Port *****************
 11873 ;; Defined at:
 11874 ;;		line 41 in file "lcd.c"
 11875 ;; Parameters:    Size  Location     Type
 11876 ;;  a               1    wreg     unsigned char 
 11877 ;; Auto vars:     Size  Location     Type
 11878 ;;  a               1    0[COMMON] unsigned char 
 11879 ;; Return value:  Size  Location     Type
 11880 ;;                  1    wreg      void 
 11881 ;; Registers used:
 11882 ;;		wreg
 11883 ;; Tracked objects:
 11884 ;;		On entry : 0/0
 11885 ;;		On exit  : 0/0
 11886 ;;		Unchanged: 0/0
 11887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11889 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11891 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11892 ;;Total ram usage:        1 bytes
 11893 ;; Hardware stack levels used:    1
 11894 ;; This function calls:
 11895 ;;		Nothing
 11896 ;; This function is called by:
 11897 ;;		_LCD_Cmd
 11898 ;;		_LCD_Init
 11899 ;;		_LCD_Write_Char
 11900 ;; This function uses a non-reentrant model
 11901 ;;
 11902                           
 11903                           
 11904                           ;psect for function _LCD_Port
 11905  1610                     _LCD_Port:	
 11906                           
 11907                           ;incstack = 0
 11908                           ; Regs used in _LCD_Port: [wreg]
 11909                           ;LCD_Port@a stored from wreg
 11910  1610  00F0               	movwf	LCD_Port@a
 11911                           
 11912                           ;lcd.c: 43: if(a & 1)
 11913  1611  1C70               	btfss	LCD_Port@a,0
 11914  1612  2E16               	goto	l94
 11915                           
 11916                           ;lcd.c: 44: RA7 = 1;
 11917  1613  0020               	movlb	0	; select bank0
 11918  1614  178C               	bsf	12,7	;volatile
 11919  1615  2E18               	goto	l2079
 11920  1616                     l94:	
 11921                           
 11922                           ;lcd.c: 45: else
 11923                           ;lcd.c: 46: RA7 = 0;
 11924  1616  0020               	movlb	0	; select bank0
 11925  1617  138C               	bcf	12,7	;volatile
 11926  1618                     l2079:	
 11927                           
 11928                           ;lcd.c: 48: if(a & 2)
 11929  1618  1CF0               	btfss	LCD_Port@a,1
 11930  1619  2E1C               	goto	l96
 11931                           
 11932                           ;lcd.c: 49: RA6 = 1;
 11933  161A  170C               	bsf	12,6	;volatile
 11934  161B  2E1D               	goto	l2083
 11935  161C                     l96:	
 11936                           
 11937                           ;lcd.c: 50: else
 11938                           ;lcd.c: 51: RA6 = 0;
 11939  161C  130C               	bcf	12,6	;volatile
 11940  161D                     l2083:	
 11941                           
 11942                           ;lcd.c: 53: if(a & 4)
 11943  161D  1D70               	btfss	LCD_Port@a,2
 11944  161E  2E21               	goto	l98
 11945                           
 11946                           ;lcd.c: 54: RC0 = 1;
 11947  161F  140E               	bsf	14,0	;volatile
 11948  1620  2E22               	goto	l2087
 11949  1621                     l98:	
 11950                           
 11951                           ;lcd.c: 55: else
 11952                           ;lcd.c: 56: RC0 = 0;
 11953  1621  100E               	bcf	14,0	;volatile
 11954  1622                     l2087:	
 11955                           
 11956                           ;lcd.c: 58: if(a & 8)
 11957  1622  1DF0               	btfss	LCD_Port@a,3
 11958  1623  2E26               	goto	l100
 11959                           
 11960                           ;lcd.c: 59: RC1 = 1;
 11961  1624  148E               	bsf	14,1	;volatile
 11962  1625  0008               	return
 11963  1626                     l100:	
 11964                           
 11965                           ;lcd.c: 60: else
 11966                           ;lcd.c: 61: RC1 = 0;
 11967  1626  108E               	bcf	14,1	;volatile
 11968  1627  0008               	return
 11969  1628                     __end_of_LCD_Port:	
 11970  007E                     btemp	set	126	;btemp
 11971  007E                     wtemp	set	126
 11972  007E                     wtemp0	set	126
 11973  0080                     wtemp1	set	128
 11974  0082                     wtemp2	set	130
 11975  0084                     wtemp3	set	132
 11976  0086                     wtemp4	set	134
 11977  0088                     wtemp5	set	136
 11978  007F                     wtemp6	set	127
 11979  007E                     ttemp	set	126
 11980  007E                     ttemp0	set	126
 11981  0081                     ttemp1	set	129
 11982  0084                     ttemp2	set	132
 11983  0087                     ttemp3	set	135
 11984  007F                     ttemp4	set	127
 11985  007E                     ltemp	set	126
 11986  007E                     ltemp0	set	126
 11987  0082                     ltemp1	set	130
 11988  0086                     ltemp2	set	134
 11989  0080                     ltemp3	set	128


Data Sizes:
    Strings     93
    Constant    27
    Data        28
    BSS         45
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     76      80
    BANK1            80     32      73
    BANK2            80      0      28
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            48      0       0
    BANK10            0      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 27
		 -> log@coeff(CODE[27]), 

    LCD_Write_String@a	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_38(CODE[5]), STR_37(CODE[4]), STR_36(CODE[6]), STR_35(CODE[3]), 
		 -> STR_34(CODE[11]), STR_33(CODE[11]), STR_32(CODE[17]), STR_31(CODE[8]), 
		 -> STR_30(CODE[17]), STR_29(CODE[11]), STR_28(CODE[17]), STR_27(CODE[11]), 
		 -> STR_26(CODE[2]), STR_25(CODE[2]), STR_24(CODE[2]), STR_23(CODE[2]), 
		 -> STR_22(CODE[2]), STR_21(CODE[2]), STR_20(CODE[2]), STR_19(CODE[2]), 
		 -> STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[2]), STR_15(CODE[2]), 
		 -> STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[2]), STR_11(CODE[2]), 
		 -> STR_10(CODE[2]), STR_9(CODE[2]), STR_8(CODE[2]), STR_7(CODE[2]), 
		 -> STR_6(CODE[2]), STR_5(CODE[2]), STR_4(CODE[2]), STR_3(CODE[2]), 
		 -> STR_2(CODE[2]), STR_1(CODE[2]), 


Critical Paths under _main in COMMON

    _main->___fttol
    _tempCalc->___awtoft
    _log->___awtoft
    ___ftmul->___awtoft
    ___awtoft->___ftpack
    ___ftadd->___awtoft
    ___ftdiv->___awtoft
    _readAnalog->___aldiv
    _SYSTEM_Initialize->_LCD_Init
    _LCD_Init->_LCD_Cmd
    _LCD_Clear->_LCD_Cmd
    _InitCustomChars->_LCD_Write_Char
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Int->___fttol
    _LCD_Write_Char->_LCD_Port
    _LCD_Set_Cursor->_LCD_Cmd
    _LCD_Cmd->_LCD_Port

Critical Paths under _main in BANK0

    _main->_tempCalc
    _tempCalc->_log
    _log->_eval_poly
    _eval_poly->___ftadd
    ___ftsub->___ftadd
    ___ftadd->___ftdiv
    ___ftdiv->___ftmul
    _readAnalog->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                35    35      0   51031
                                             73 BANK0      3     3      0
                                              0 BANK1     32    32      0
                            _ADCRead
                          _LCD_Clear
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                      _LCD_Write_Int
                   _LCD_Write_String
                 _PWM6_LoadDutyValue
                  _SYSTEM_Initialize
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___fttol
                            ___lwdiv
                         _readAnalog
                           _tempCalc
 ---------------------------------------------------------------------------------
 (1) _tempCalc                                            12     9      3   31165
                                             61 BANK0     12     9      3
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftsub
                                _log
 ---------------------------------------------------------------------------------
 (2) _log                                                  6     3      3   16273
                                             55 BANK0      6     3      3
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _frexp                                                6     2      4     330
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) _eval_poly                                           10     3      7    7209
                                             45 BANK0     10     3      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             16    10      6    2749
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6     322
                                              0 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             6     3      3    1904
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3674
                                             45 BANK0      6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             13     7      6    3501
                                             32 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    2729
                                             16 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    1707
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _readAnalog                                          22    20      2    1392
                                              9 COMMON     4     4      0
                                              6 BANK0     18    16      2
                            _ADCRead
                            ___aldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     622
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     406
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _ADCRead                                              4     1      3      22
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              8     4      4     374
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             14    10      4     464
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    3     3      0     709
                                              8 COMMON     3     3      0
                    _ADCC_Initialize
                    _InitCustomChars
                          _LCD_Clear
                           _LCD_Init
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM6_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             4     4      0     220
                                              4 COMMON     4     4      0
                            _LCD_Cmd
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            0     0      0     110
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (2) _InitCustomChars                                      2     2      0     356
                                              5 COMMON     2     2      0
                            _LCD_Cmd
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM6_LoadDutyValue                                   4     2      2     256
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCD_Write_String                                     5     3      2    2282
                                              5 COMMON     5     3      2
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (1) _LCD_Write_Int                                       19    14      5    2759
                                              0 BANK0     19    14      5
                     _LCD_Write_Char
                            ___awdiv
                            ___awmod
                            ___fttol (ARG)
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     402
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     406
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (1) _LCD_Set_Cursor                                       7     6      1    1228
                                              4 COMMON     7     6      1
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (3) _LCD_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (3) _LCD_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCRead
   _LCD_Clear
     _LCD_Cmd
       _LCD_Port
   _LCD_Set_Cursor
     _LCD_Cmd
       _LCD_Port
   _LCD_Write_Char
     _LCD_Port
   _LCD_Write_Int
     _LCD_Write_Char
       _LCD_Port
     ___awdiv
     ___awmod
     ___fttol (ARG)
     ___lwdiv (ARG)
   _LCD_Write_String
     _LCD_Write_Char
       _LCD_Port
   _PWM6_LoadDutyValue
   _SYSTEM_Initialize
     _ADCC_Initialize
     _InitCustomChars
       _LCD_Cmd
         _LCD_Port
       _LCD_Write_Char
         _LCD_Port
     _LCD_Clear
       _LCD_Cmd
         _LCD_Port
     _LCD_Init
       _LCD_Cmd
         _LCD_Port
       _LCD_Port
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM6_Initialize
     _TMR2_Initialize
   ___ftadd
     ___awtoft (ARG)
       ___ftpack
     ___ftdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftpack (ARG)
     ___wmul (ARG)
     _frexp (ARG)
   ___ftdiv
     ___awtoft (ARG)
       ___ftpack
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftpack (ARG)
     ___ftpack (ARG)
   ___ftmul
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)
     _frexp (ARG)
   ___fttol
   ___lwdiv
   _readAnalog
     _ADCRead
     ___aldiv
     ___wmul
   _tempCalc
     ___awtoft
       ___ftpack
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
       _frexp (ARG)
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftsub
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
     _log
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftge
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       _eval_poly
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___wmul
       _frexp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4C      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     20      49       7       91.3%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      1C       9       35.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      C3      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               30      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK10               0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      C3      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Mon Feb 26 14:40:19 2018

                    __CFG_CP$OFF 0000                               l58 15E5                               l94 1616  
                             l96 161C                               l98 1621                     ___awdiv@sign 0076  
            ___wmul@multiplicand 0072      __size_of_PWM6_LoadDutyValue 0016                     ___ftadd@exp1 004C  
                   ___ftadd@exp2 004B                      __CFG_LVP$ON 0000                     ___ftadd@sign 004A  
                            l100 1626                              l401 1664                              l291 0405  
                            l456 09D8                              l570 09B0                              l562 0995  
                            l653 0AB5                              l569 09A8                              l593 0FA9  
                            _GIE 005F                              _RA0 0060                              _RA2 0062  
                            _RC0 0070                              _RC1 0071                              _RA6 0066  
                            _RA7 0067                     __CFG_CPD$OFF 0000                              _log 0BFF  
                __end_of_ADCRead 15EC                     ___awmod@sign 0076                  _TMR2_Initialize 15D0  
                   __CFG_BORV$LO 0000                              wreg 0009                      main@analogs 00A5  
                __end_of_LCD_Cmd 1610                     __CFG_ZCD$OFF 0000                     ___ftdiv@cntr 003A  
                 _LCD_Set_Cursor 17C1                     ___ftdiv@sign 003F                             l2111 0F32  
                           l2121 0F48                             l2051 0972                             l2115 0F39  
                           l2211 0D30                             l2203 0D1C                             l3011 03EF  
                           l2061 099A                             l2053 097C                             l2141 0F7F  
                           l2133 0F62                             l3005 03D1                             l2063 09A2  
                           l2055 0981                             l2047 096B                             l2151 0F9B  
                           l2143 0F84                             l2215 0D38                             l3103 0502  
                           l3015 03FC                             l2161 0FCD                             l2153 0FA5  
                           l2145 0F88                             l2313 095C                             l2083 161D  
                           l2171 0FE8                             l2139 0F75                             l3115 051F  
                           l3035 0441                             l2093 165E                             l2157 0FBB  
                           l2181 0CC3                             l3213 06C7                             l3109 0512  
                           l2087 1622                             l2079 1618                             l2511 0A32  
                           l2263 169F                             l2271 1761                             l3151 0591  
                           l3127 0553                             l3055 047B                             l3241 07B5  
                           l3145 0581                             l3137 056F                             l2355 0823  
                           l2515 0A40                             l2507 0A27                             l2275 1777  
                           l2187 0CD9                             l3243 07B6                             l2533 08C7  
                           l2349 0812                             l2613 0B83                             l3237 07A9  
                           l3229 07A0                             l3157 05A1                             l3085 04D2  
                           l2551 08ED                             l2543 08CF                             l2527 08BC  
                           l2711 0D82                             l2607 0B6D                             l2199 0D14  
                           l2295 1798                             l2463 0C1D                             l3095 04EF  
                           l2545 08DB                             l2721 0D89                             l3169 05D5  
                           l2555 08F6                             l2571 0877                             l2731 0DC8  
                           l2723 0DB8                             l2635 0BDD                             l2627 0BC4  
                           l3179 05F1                             l2741 0E08                             l2733 0DD8  
                           l2469 0C2E                             l2559 08FE                             l2583 0884  
                           l2575 087E                             l2727 0DBC                             l2823 0AAC  
                           l2815 0A91                             l2647 167F                             l2681 17E1  
                           l2585 0890                             l2593 08A5                             l2745 0E16  
                           l2729 0DC0                             l2825 0AB8                             l2817 0A9F  
                           l2497 09F9                             l2489 09E9                             l2665 0123  
                           l2739 0DDC                             l2851 1707                             l2843 16E9  
                           l2499 0A07                             l2597 08AD                             l2589 089C  
                           l2829 0AC6                             l2845 16F5                             l2855 1710  
                           l2697 162A                             l2797 0A61                             ?_log 0057  
                           l2999 03CB                             STR_1 1062                             STR_2 106E  
                           STR_3 1070                             STR_4 1068                             STR_5 1062  
                           STR_6 1035                             STR_7 1064                             STR_8 1062  
                           STR_9 1076                             u2105 0F89                             u3005 0DF6  
                           u2045 0F63                             u2205 0CE5                             _LATA 0016  
                           _LATB 0017                             u2135 0F9C                             u2215 0CF5  
                           _LATC 0018                             u2400 1749                             u2305 16C5  
                           u3210 0159                             u3035 0014                             u3115 0AAD  
                           u2075 0F76                             u2235 0D1D                             u2245 0D23  
                           u3055 0A68                             u2505 0A1C                             _T2PR 028D  
                           u3155 16EC                             u2515 0A28                             u2275 0D39  
                           u2605 08E6                             u3085 0A92                             u2285 0D3F  
                           u2615 08EE                             u3175 16F6                             u1815 099D  
                           u2705 089D                             u3185 1700                             u3195 1708  
                           u2475 09FC                             u3507 01A6                             u1925 1665  
                           u3517 01BB                             u2575 08D2                             u2495 0A08  
                           u1935 166A                             u1855 09B7                             u1775 0977  
                           u3607 0278                             u3527 01D0                             u2905 17CD  
                           u2825 0030                             u3617 028D                             u3537 01E5  
                           u2595 08DC                             u2675 0887                             u2835 007E  
                           u1795 0990                             u2755 0B95                             u3707 0350  
                           u3627 02A8                             u3547 01FA                             u2940 0D6B  
                           u2925 17EC                             u2845 00B7                             u2765 0BA5  
                           u3717 0365                             u3637 02BD                             u3557 020F  
                           u2695 0896                             u2855 00FA                             u2775 0BC5  
                           u3807 05E6                             u3727 037A                             u3647 02D2  
                           u3567 0224                             u3817 0846                             u2865 0113  
                           u2785 0BD4                             u3737 038F                             u3657 02E7  
                           u3577 0239                             u3497 0189                             u3907 0B23  
                           u3827 0856                             u2795 0BDE                             u3747 03A4  
                           u3667 02FC                             u3587 024E                             u3917 0B33  
                           u3837 0865                             u2885 012F                             u3757 03B9  
                           u3677 0311                             u3597 0263                             u3927 0B42  
                           u3847 0ADA                             u3767 043B                             u3687 0326  
                           u3937 0B51                             u3857 0AE8                             u3777 0475  
                           u3697 033B                             u3947 16D1                             u3867 0AF3  
                           u3787 04CC                             u3957 16DD                             u3877 0AFD  
                           u3797 0564                             u3967 160A                             u3887 0B07  
                           u3897 0B15              tempCalc@analogValue 005D                             _WPUA 0F39  
                           _WPUB 0F44                             _WPUC 0F4F                             _WPUE 0F65  
                   __CFG_WRT$OFF 0000                    __CFG_FCMEN$ON 0000                ?_LCD_Write_String 0075  
                           _main 014B                     ___ftpack@arg 0070               __size_of_LCD_Clear 0008  
                   ___ftpack@exp 0073                             fsr0h 0005                             fsr1h 0007  
                           fsr0l 0004                             indf0 0000                             indf1 0001  
                           fsr1l 0006                             btemp 007E                             log@x 0057  
                  __CFG_BOREN$ON 0000                             ltemp 007E                             start 0002  
             ??_LCD_Write_String 0077                             ttemp 007E                             wtemp 007E  
                  __CFG_CSWEN$ON 0000                    __CFG_MCLRE$ON 0000                     ___ftmul@cntr 002E  
                  _LCD_Write_Int 0D60                     ___ftmul@sign 002F                     ___fttol@exp1 007D  
                          ??_log 005A                     ___fttol@lval 0079                 __end_of_LCD_Init 0B56  
               __end_of_LCD_Port 1628   __size_of_OSCILLATOR_Initialize 0009    __end_of_OSCILLATOR_Initialize 15A1  
                __end_of___aldiv 0A49                            _ADACQ 009D                            _ADCAP 009B  
                          _ADACT 0099                            ?_main 0070                            _ADCLK 0098  
                          _ADPCH 009E                            _ADREF 009A                  __end_of___awdiv 0903  
                          _ADPRE 009C                  __end_of___ftadd 1000                            STR_10 106A  
                          STR_11 1064                            STR_12 1060                            STR_20 105E  
                          STR_21 1035                            STR_13 1074                            STR_14 1070  
                          STR_30 101B                            STR_22 106C                            STR_23 106A  
                          STR_15 1072                            STR_31 1042                            STR_24 1064  
                          STR_16 1068                            STR_32 101B                            STR_17 106A  
                          STR_25 1074                            STR_33 1037                    __CFG_WDTE$OFF 0000  
                          STR_34 1037                            STR_18 1066                            STR_26 105C  
                          STR_19 1035                            STR_35 1059                            STR_27 102C  
                          STR_36 104A                            STR_28 101B                  __end_of___awmod 08B2  
                          STR_29 102C                            STR_37 1055                            STR_38 1050  
                          _ADRPT 010D                  __end_of___ftdiv 0BFF                  __end_of___ftmul 0D60  
                ___awdiv@divisor 0070                  __end_of___ftsub 1695                  __end_of___fttol 0ACF  
                          _T2CON 028E                            _T2HLT 028F                  __end_of___lwdiv 1715  
                          _T2TMR 028C                            _T2RST 0291                  ___awdiv@counter 0075  
                          _OSCEN 0891                            _TRISA 0011                            _TRISB 0012  
                          _TRISC 0013                  _PWM6_Initialize 15A1           __end_of_LCD_Set_Cursor 1800  
                  ___awtoft@sign 007D                            _frexp 1786                            _errno 006C  
                  ___ftpack@sign 0074                            main@x 00BD                            ltemp0 007E  
                          ltemp1 0082                            ltemp2 0086                            ltemp3 0080  
                          ttemp0 007E                            ttemp1 0081                            ttemp2 0084  
                          ttemp3 0087                            ttemp4 007F                            status 0003  
                          wtemp0 007E                            wtemp1 0080                            wtemp2 0082  
                          wtemp3 0084                            wtemp4 0086                            wtemp5 0088  
                          wtemp6 007F                 InitCustomChars@i 0076                   ?_LCD_Write_Int 0020  
                 _LCD_Write_Char 16B5                  __initialization 07BD                      log@exponent 005B  
                   __end_of_main 07BD                readAnalog@channel 0026          __end_of_TMR2_Initialize 15DE  
                      ??_ADCRead 0073                    main@tPadCount 00BA                           ??_main 0069  
                  ___fttol@sign1 0078                __end_of_LCD_Clear 1598                        ??_LCD_Cmd 0071  
                ?_LCD_Set_Cursor 0074                           _ADCON0 0093                           _ADCON1 0094  
                         _ADCON2 0095                           _ADCON3 0096                           ?_frexp 0070  
                         _ADLTHH 010F                           _ADLTHL 010E                           _ADRESH 008D  
                         _ADRESL 008C                           _ADSTAT 0097                           _ADUTHH 0111  
               ___awdiv@dividend 0072                           _ADUTHL 0110                 __end_of___awtoft 16B5  
                         _ANSELA 0F38                           _ANSELB 0F43                           _ANSELC 0F4E  
               __end_of___ftpack 09C7                           _RC2PPS 0F22                   __CFG_WDTCCS$SC 0000  
                         _FVRCON 090C                           _OSCFRQ 0893                    main@dutyCycle 00BE  
         __end_of_LCD_Write_Char 16E1                   __CFG_PWRTE$OFF 0000                     _CCPTMRS1bits 021F  
                         ___ftge 174B           LCD_Write_Int@numPlaces 0023                        ??___aldiv 0078  
                         ___wmul 165C                        ??___awdiv 0074                        ??___ftadd 0046  
                 __CFG_STVREN$ON 0000                        ??___awmod 0074                        ??___ftdiv 0036  
                      ??___ftmul 0026                        ??___ftsub 007E                        ??___fttol 0074  
                      ??___lwdiv 0074          __end_of_PWM6_Initialize 15AC                 ___awdiv@quotient 0077  
                ___awmod@divisor 0070                  ___awmod@counter 0075                           _totals 00C0  
          ___ftmul@f3_as_product 002B                 __end_of_tempCalc 0F0A                  _ADCC_Initialize 1642  
               LCD_Write_Int@str 002A                  _InitCustomChars 0805                  LCD_Set_Cursor@w 0079  
                LCD_Set_Cursor@x 0077                  LCD_Set_Cursor@y 0074                  LCD_Set_Cursor@z 0078  
       readAnalog@analog_channel 0079                _SYSTEM_Initialize 082B                 __end_oflog@coeff 101B  
        __end_of__initialization 07FD                        ?_LCD_Init 0070                        ?_LCD_Port 0070  
                     ___ftadd@f1 0040                       ___ftadd@f2 0043                       ___ftge@ff1 0070  
                     ___ftge@ff2 0073                  ??_LCD_Write_Int 0025               ?_SYSTEM_Initialize 0070  
                   eval_poly@res 0054                       ___ftdiv@f1 0033                       ___ftdiv@f2 0030  
                     ___ftdiv@f3 003B                  ?_LCD_Write_Char 0070                    LCD_Init@style 0077  
                     ___awtoft@c 0078                       ___ftmul@f1 0020                       ___ftmul@f2 0023  
                     ___ftsub@f1 0050                       ___ftsub@f2 004D                       ___fttol@f1 0070  
                 __pcstackCOMMON 0070                        LCD_Port@a 0070                     __pidataBANK1 15C4  
                   __pidataBANK2 15EC              ??_SYSTEM_Initialize 0078                    __end_of_frexp 17C1  
               ?_TMR2_Initialize 0070                          ??_frexp 0074        __end_of_SYSTEM_Initialize 086D  
                     __pbssBANK0 006C                       __pbssBANK1 00C0                       __pbssBANK2 0130  
             __size_of_eval_poly 0060                       ??_LCD_Init 0074                       ??_LCD_Port 0070  
                     __pmaintext 014B                          ?___ftge 0070                          ?___wmul 0070  
                __CFG_PPS1WAY$ON 0000          __end_of_ADCC_Initialize 165C       __end_of_PWM6_LoadDutyValue 001B  
                        _ADCRead 15DE        __size_of_LCD_Write_String 001A                 ?_PWM6_Initialize 0070  
                      ?___awtoft 0078                        ?___ftpack 0070                          _ADSTPTH 0113  
                        _ADSTPTL 0112         __CFG_SCANE$not_available 0000              __CFG_RSTOSC$HFINT32 0000  
               main@displayTemp2 00B6          __end_of_InitCustomChars 082B                          _LCD_Cmd 15FC  
                        _OSCCON1 088D                          _OSCCON3 088F                          _OSCTUNE 0892  
                        _PWM6DCH 038D                          _PWM6DCL 038C                          _PWM6CON 038E  
                        _PPSLOCK 0E8F                        ?_tempCalc 005D                       _readAnalog 001B  
                        ___aldiv 09C7                          ___cgram 0120                  __size_of___ftge 003B  
                        ___awdiv 08B2                          ___ftadd 0F0A                          ___awmod 086D  
                        ___ftdiv 0B56                  __size_of___wmul 001B                          ___ftmul 0CAC  
                        ___ftsub 1677                          ___fttol 0A49                          ___lwdiv 16E1  
                     ??___awtoft 007B                       ??___ftpack 0075                __end_of_eval_poly 0963  
               ??_LCD_Set_Cursor 0075                          __ptext1 0E2B                          __ptext2 0BFF  
                        __ptext3 1786                          __ptext4 0903                          __ptext5 0CAC  
                        __ptext6 174B                          __ptext7 1695                          __ptext8 1677  
                        __ptext9 0F0A                   main@resetDelay 00B9            _OSCILLATOR_Initialize 1598  
                      _T2CONbits 028E                     __size_of_log 00AD                 ___awmod@dividend 0072  
                 ADCRead@channel 0073                 ___aldiv@dividend 0074         ??_PIN_MANAGER_Initialize 0070  
                        _samples 2300                        _LCD_Clear 1590       __size_of_SYSTEM_Initialize 0042  
                        clrloop0 15AD             end_of_initialization 07FD                          init_ram 15B8  
                        initloop 15B9                       ??_tempCalc 007E                 ___aldiv@quotient 0022  
                 main@startDelay 00A4                LCD_Write_Int@sign 0024                       main@F13657 0130  
                   __pstringtext 1000                 ?_ADCC_Initialize 0070            __CFG_WDTCPS$WDTCPS_31 0000  
               ?_InitCustomChars 0070                       main@C_or_F 00BC                       ?_LCD_Clear 0070  
               __CFG_FEXTOSC$OFF 0000                       main@bCount 00B1                LCD_Write_String@a 0075  
              LCD_Write_String@i 0078                 ??_LCD_Write_Char 0071                       main@choice 00BB  
                    ___ftdiv@exp 003E                __size_of_LCD_Init 0087                __size_of_LCD_Port 0018  
                    ___ftmul@exp 002A                      ?_readAnalog 0026                   __end_of___ftge 1786  
                 __end_of___wmul 1677                 _LCD_Write_String 1628           ?_OSCILLATOR_Initialize 0070  
            start_initialization 07BD                       eval_poly@d 0050                       eval_poly@n 0052  
                     eval_poly@x 004D  __size_of_PIN_MANAGER_Initialize 0036                      __end_of_log 0CAC  
                     frexp@value 0070         LCD_Write_Int@fieldLength 0022            __end_of_LCD_Write_Int 0E2B  
               __CFG_LPBOREN$OFF 0000                         ??___ftge 0076                tempCalc@steinhart 0066  
                       ??___wmul 0074                      __pdataBANK1 00DD                      __pdataBANK2 0120  
                LCD_Write_Char@a 0074                  LCD_Write_Char@y 0073                         ?_ADCRead 0070  
                       ?_LCD_Cmd 0070                __size_of___awtoft 0020                __size_of___ftpack 0064  
                    __pbssBIGRAM 2300                         LCD_Cmd@a 0073                        ___latbits 0002  
                  __pcstackBANK0 0020                    __pcstackBANK1 00A0               _PWM6_LoadDutyValue 0005  
       __size_of_TMR2_Initialize 000E                      ??_LCD_Clear 0074              __size_of_readAnalog 0130  
            ?_PWM6_LoadDutyValue 0070                 ___lwdiv@dividend 0072           _PIN_MANAGER_Initialize 1715  
                       ?___aldiv 0070                __size_of_tempCalc 00DF                         ?___awdiv 0070  
                       ?___ftadd 0040                         ?___awmod 0070                         ?___ftdiv 0030  
                       ?___ftmul 0020                         ?___ftsub 004D                         ?___fttol 0070  
                       ?___lwdiv 0070                  main@displayTemp 00B3             ??_PWM6_LoadDutyValue 0072  
                      _eval_poly 0903         __size_of_PWM6_Initialize 000B                 ___lwdiv@quotient 0075  
                 __size_of_frexp 003B                         _T2CLKCON 0290                  ___aldiv@divisor 0070  
                ___aldiv@counter 0020                         _LCD_Init 0ACF                   ___wmul@product 0074  
                       _LCD_Port 1610                        clear_ram0 15AC                         _PIE0bits 0716  
                       _PIR4bits 0710                 __size_of_ADCRead 000E                       _ADCON0bits 0093  
              ___wmul@multiplier 0070                       ?_eval_poly 004D                 __size_of_LCD_Cmd 0014  
       __end_of_LCD_Write_String 1642                ??_TMR2_Initialize 0070                  readAnalog@value 007B  
                      frexp@eptr 0073                     ??_readAnalog 0028                     _tempCalc$988 0063  
        ??_OSCILLATOR_Initialize 0070                   LCD_Write_Int@i 0031                   LCD_Write_Int@j 002F  
               __size_of___aldiv 0082                 __size_of___awdiv 0051                 __size_of___ftadd 00F6  
               __size_of___awmod 0045                 __size_of___ftdiv 00A9                 __size_of___ftmul 00B4  
               __size_of___ftsub 001E                 __size_of___fttol 0086                 __size_of___lwdiv 0034  
                       ___awtoft 1695                         ___ftpack 0963         __size_of_ADCC_Initialize 001A  
                       _channels 00DD                         _main$989 00A0                  ___lwdiv@divisor 0070  
                ___lwdiv@counter 0077                         __ptext10 0B56                         __ptext11 0963  
                       __ptext20 15A1                         __ptext12 001B                         __ptext21 1715  
                       __ptext13 165C                         __ptext30 086D                         __ptext22 1598  
                       __ptext14 09C7                         __ptext31 08B2                         __ptext23 0ACF  
                       __ptext15 15DE                         __ptext32 16B5                         __ptext24 1590  
                       __ptext16 16E1                         __ptext33 17C1                         __ptext25 0805  
                       __ptext17 0A49                         __ptext34 15FC                         __ptext26 1642  
                       __ptext18 082B                         __ptext35 1610                         __ptext27 0005  
                       __ptext19 15D0                         __ptext28 1628                         __ptext29 0D60  
             __end_of_readAnalog 014B          __size_of_LCD_Set_Cursor 003F                        tempCalc@R 0060  
       __size_of_InitCustomChars 0026              LCD_Write_Int@F13687 00D8                ??_PWM6_Initialize 0070  
                  __size_of_main 0672             __CFG_WDTCWS$WDTCWS_7 0000                         _tempCalc 0E2B  
                       main@loop 00A3      PIN_MANAGER_Initialize@state 0070                         log@coeff 1000  
                    ??_eval_poly 007E                      _sampleIndex 006E               LCD_Write_Char@temp 0072  
        ?_PIN_MANAGER_Initialize 0070                __CFG_CLKOUTEN$OFF 0000                      _PPSLOCKbits 0E8F  
        __size_of_LCD_Write_Char 002C               LCD_Set_Cursor@temp 007A               LCD_Write_Int@value 0020  
                   ___aldiv@sign 0021      PWM6_LoadDutyValue@dutyCycle 0070           __size_of_LCD_Write_Int 00CB  
 __end_of_PIN_MANAGER_Initialize 174B                ??_ADCC_Initialize 0070                ??_InitCustomChars 0075  
