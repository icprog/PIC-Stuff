

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Mon Feb 26 16:52:23 2018

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	stringtext,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	psect	text32,local,class=CODE,merge=1,delta=2
    51                           	psect	text33,local,class=CODE,merge=1,delta=2
    52                           	psect	text34,local,class=CODE,merge=1,delta=2
    53                           	psect	text35,local,class=CODE,merge=1,delta=2
    54                           	dabs	1,0x620,48
    55                           	dabs	1,0x5A0,80
    56                           	dabs	1,0x520,80
    57                           	dabs	1,0x4D0,32
    58                           	dabs	1,0x2300,0,_samples
    59                           	dabs	1,0x7E,2
    60  0000                     	;# 
    61  0001                     	;# 
    62  0002                     	;# 
    63  0003                     	;# 
    64  0004                     	;# 
    65  0005                     	;# 
    66  0006                     	;# 
    67  0007                     	;# 
    68  0008                     	;# 
    69  0009                     	;# 
    70  000A                     	;# 
    71  000B                     	;# 
    72  000C                     	;# 
    73  000D                     	;# 
    74  000E                     	;# 
    75  0010                     	;# 
    76  0011                     	;# 
    77  0012                     	;# 
    78  0013                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  001C                     	;# 
    83  001C                     	;# 
    84  001D                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  008C                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  008E                     	;# 
    93  008F                     	;# 
    94  0090                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0093                     	;# 
    98  0094                     	;# 
    99  0095                     	;# 
   100  0096                     	;# 
   101  0097                     	;# 
   102  0098                     	;# 
   103  0099                     	;# 
   104  009A                     	;# 
   105  009B                     	;# 
   106  009C                     	;# 
   107  009D                     	;# 
   108  009E                     	;# 
   109  010C                     	;# 
   110  010D                     	;# 
   111  010E                     	;# 
   112  010E                     	;# 
   113  010F                     	;# 
   114  0110                     	;# 
   115  0110                     	;# 
   116  0111                     	;# 
   117  0112                     	;# 
   118  0112                     	;# 
   119  0113                     	;# 
   120  0114                     	;# 
   121  0114                     	;# 
   122  0115                     	;# 
   123  0116                     	;# 
   124  0116                     	;# 
   125  0117                     	;# 
   126  0119                     	;# 
   127  0119                     	;# 
   128  0119                     	;# 
   129  011A                     	;# 
   130  011A                     	;# 
   131  011A                     	;# 
   132  011B                     	;# 
   133  011B                     	;# 
   134  011B                     	;# 
   135  011B                     	;# 
   136  011B                     	;# 
   137  011C                     	;# 
   138  011C                     	;# 
   139  011C                     	;# 
   140  011D                     	;# 
   141  011D                     	;# 
   142  011D                     	;# 
   143  011E                     	;# 
   144  011E                     	;# 
   145  011E                     	;# 
   146  011F                     	;# 
   147  011F                     	;# 
   148  011F                     	;# 
   149  011F                     	;# 
   150  011F                     	;# 
   151  018C                     	;# 
   152  018D                     	;# 
   153  018E                     	;# 
   154  018F                     	;# 
   155  0190                     	;# 
   156  0191                     	;# 
   157  0192                     	;# 
   158  0196                     	;# 
   159  0197                     	;# 
   160  0198                     	;# 
   161  0199                     	;# 
   162  019A                     	;# 
   163  019B                     	;# 
   164  019C                     	;# 
   165  020C                     	;# 
   166  020D                     	;# 
   167  020E                     	;# 
   168  020F                     	;# 
   169  020F                     	;# 
   170  0210                     	;# 
   171  0210                     	;# 
   172  0211                     	;# 
   173  0211                     	;# 
   174  0212                     	;# 
   175  0213                     	;# 
   176  0214                     	;# 
   177  0215                     	;# 
   178  0215                     	;# 
   179  0216                     	;# 
   180  0216                     	;# 
   181  0217                     	;# 
   182  0217                     	;# 
   183  0218                     	;# 
   184  0219                     	;# 
   185  021A                     	;# 
   186  021B                     	;# 
   187  021B                     	;# 
   188  021C                     	;# 
   189  021C                     	;# 
   190  021D                     	;# 
   191  021D                     	;# 
   192  021E                     	;# 
   193  021F                     	;# 
   194  028C                     	;# 
   195  028C                     	;# 
   196  028D                     	;# 
   197  028D                     	;# 
   198  028E                     	;# 
   199  028F                     	;# 
   200  0290                     	;# 
   201  0290                     	;# 
   202  0291                     	;# 
   203  0292                     	;# 
   204  0292                     	;# 
   205  0293                     	;# 
   206  0293                     	;# 
   207  0294                     	;# 
   208  0295                     	;# 
   209  0296                     	;# 
   210  0296                     	;# 
   211  0297                     	;# 
   212  0298                     	;# 
   213  0298                     	;# 
   214  0299                     	;# 
   215  0299                     	;# 
   216  029A                     	;# 
   217  029B                     	;# 
   218  029C                     	;# 
   219  029C                     	;# 
   220  029D                     	;# 
   221  030C                     	;# 
   222  030C                     	;# 
   223  030D                     	;# 
   224  030E                     	;# 
   225  030F                     	;# 
   226  0310                     	;# 
   227  0310                     	;# 
   228  0311                     	;# 
   229  0312                     	;# 
   230  0313                     	;# 
   231  0314                     	;# 
   232  0314                     	;# 
   233  0315                     	;# 
   234  0316                     	;# 
   235  0317                     	;# 
   236  0318                     	;# 
   237  0318                     	;# 
   238  0319                     	;# 
   239  031A                     	;# 
   240  031B                     	;# 
   241  031C                     	;# 
   242  031C                     	;# 
   243  031D                     	;# 
   244  031E                     	;# 
   245  031F                     	;# 
   246  038C                     	;# 
   247  038D                     	;# 
   248  038E                     	;# 
   249  0390                     	;# 
   250  0391                     	;# 
   251  0392                     	;# 
   252  040C                     	;# 
   253  040D                     	;# 
   254  040E                     	;# 
   255  040F                     	;# 
   256  0410                     	;# 
   257  0411                     	;# 
   258  0416                     	;# 
   259  0416                     	;# 
   260  0417                     	;# 
   261  0418                     	;# 
   262  0418                     	;# 
   263  0419                     	;# 
   264  041A                     	;# 
   265  041A                     	;# 
   266  041B                     	;# 
   267  041C                     	;# 
   268  041C                     	;# 
   269  041D                     	;# 
   270  041E                     	;# 
   271  041F                     	;# 
   272  048C                     	;# 
   273  048C                     	;# 
   274  048D                     	;# 
   275  048E                     	;# 
   276  048F                     	;# 
   277  048F                     	;# 
   278  0490                     	;# 
   279  0491                     	;# 
   280  0492                     	;# 
   281  0492                     	;# 
   282  0493                     	;# 
   283  0494                     	;# 
   284  0495                     	;# 
   285  0495                     	;# 
   286  0496                     	;# 
   287  0497                     	;# 
   288  0498                     	;# 
   289  0499                     	;# 
   290  049A                     	;# 
   291  049B                     	;# 
   292  049C                     	;# 
   293  049D                     	;# 
   294  050C                     	;# 
   295  050C                     	;# 
   296  050D                     	;# 
   297  050E                     	;# 
   298  050F                     	;# 
   299  050F                     	;# 
   300  0510                     	;# 
   301  0511                     	;# 
   302  0512                     	;# 
   303  0512                     	;# 
   304  0513                     	;# 
   305  0514                     	;# 
   306  0515                     	;# 
   307  0515                     	;# 
   308  0516                     	;# 
   309  0517                     	;# 
   310  0518                     	;# 
   311  0519                     	;# 
   312  051A                     	;# 
   313  051B                     	;# 
   314  051C                     	;# 
   315  051D                     	;# 
   316  058C                     	;# 
   317  058C                     	;# 
   318  058D                     	;# 
   319  058E                     	;# 
   320  058F                     	;# 
   321  058F                     	;# 
   322  0590                     	;# 
   323  0591                     	;# 
   324  0592                     	;# 
   325  0593                     	;# 
   326  060C                     	;# 
   327  060D                     	;# 
   328  060E                     	;# 
   329  060F                     	;# 
   330  0610                     	;# 
   331  0611                     	;# 
   332  0612                     	;# 
   333  0613                     	;# 
   334  0614                     	;# 
   335  0616                     	;# 
   336  0617                     	;# 
   337  0618                     	;# 
   338  0619                     	;# 
   339  061A                     	;# 
   340  061B                     	;# 
   341  061C                     	;# 
   342  061D                     	;# 
   343  061E                     	;# 
   344  068C                     	;# 
   345  068D                     	;# 
   346  068E                     	;# 
   347  068F                     	;# 
   348  0690                     	;# 
   349  0691                     	;# 
   350  0692                     	;# 
   351  0693                     	;# 
   352  0694                     	;# 
   353  070C                     	;# 
   354  070D                     	;# 
   355  070E                     	;# 
   356  070F                     	;# 
   357  0710                     	;# 
   358  0711                     	;# 
   359  0712                     	;# 
   360  0713                     	;# 
   361  0714                     	;# 
   362  0716                     	;# 
   363  0717                     	;# 
   364  0718                     	;# 
   365  0719                     	;# 
   366  071A                     	;# 
   367  071B                     	;# 
   368  071C                     	;# 
   369  071D                     	;# 
   370  071E                     	;# 
   371  0796                     	;# 
   372  0797                     	;# 
   373  0798                     	;# 
   374  0799                     	;# 
   375  079A                     	;# 
   376  079B                     	;# 
   377  080C                     	;# 
   378  080D                     	;# 
   379  080E                     	;# 
   380  080F                     	;# 
   381  0810                     	;# 
   382  0811                     	;# 
   383  0812                     	;# 
   384  0813                     	;# 
   385  0814                     	;# 
   386  081A                     	;# 
   387  081B                     	;# 
   388  081C                     	;# 
   389  081D                     	;# 
   390  081E                     	;# 
   391  081F                     	;# 
   392  088C                     	;# 
   393  088D                     	;# 
   394  088E                     	;# 
   395  088F                     	;# 
   396  0890                     	;# 
   397  0891                     	;# 
   398  0892                     	;# 
   399  0893                     	;# 
   400  0895                     	;# 
   401  0896                     	;# 
   402  0897                     	;# 
   403  0898                     	;# 
   404  0899                     	;# 
   405  089A                     	;# 
   406  089B                     	;# 
   407  090C                     	;# 
   408  090E                     	;# 
   409  090F                     	;# 
   410  091F                     	;# 
   411  091F                     	;# 
   412  098F                     	;# 
   413  098F                     	;# 
   414  0990                     	;# 
   415  0991                     	;# 
   416  0992                     	;# 
   417  0993                     	;# 
   418  0994                     	;# 
   419  0995                     	;# 
   420  0996                     	;# 
   421  0997                     	;# 
   422  0E0F                     	;# 
   423  0E10                     	;# 
   424  0E11                     	;# 
   425  0E12                     	;# 
   426  0E13                     	;# 
   427  0E14                     	;# 
   428  0E15                     	;# 
   429  0E16                     	;# 
   430  0E17                     	;# 
   431  0E18                     	;# 
   432  0E19                     	;# 
   433  0E1A                     	;# 
   434  0E1B                     	;# 
   435  0E1C                     	;# 
   436  0E1D                     	;# 
   437  0E1E                     	;# 
   438  0E1F                     	;# 
   439  0E20                     	;# 
   440  0E21                     	;# 
   441  0E22                     	;# 
   442  0E23                     	;# 
   443  0E24                     	;# 
   444  0E25                     	;# 
   445  0E26                     	;# 
   446  0E27                     	;# 
   447  0E28                     	;# 
   448  0E29                     	;# 
   449  0E2A                     	;# 
   450  0E2B                     	;# 
   451  0E2C                     	;# 
   452  0E2D                     	;# 
   453  0E2E                     	;# 
   454  0E2F                     	;# 
   455  0E30                     	;# 
   456  0E31                     	;# 
   457  0E32                     	;# 
   458  0E33                     	;# 
   459  0E34                     	;# 
   460  0E35                     	;# 
   461  0E36                     	;# 
   462  0E37                     	;# 
   463  0E8F                     	;# 
   464  0E90                     	;# 
   465  0E91                     	;# 
   466  0E92                     	;# 
   467  0E93                     	;# 
   468  0E94                     	;# 
   469  0E95                     	;# 
   470  0E96                     	;# 
   471  0E97                     	;# 
   472  0E9C                     	;# 
   473  0E9D                     	;# 
   474  0E9E                     	;# 
   475  0EA1                     	;# 
   476  0EA2                     	;# 
   477  0EA3                     	;# 
   478  0EA4                     	;# 
   479  0EA5                     	;# 
   480  0EA9                     	;# 
   481  0EAA                     	;# 
   482  0EAB                     	;# 
   483  0EAC                     	;# 
   484  0EB1                     	;# 
   485  0EB2                     	;# 
   486  0EB3                     	;# 
   487  0EB8                     	;# 
   488  0EB9                     	;# 
   489  0EBA                     	;# 
   490  0EBB                     	;# 
   491  0EBC                     	;# 
   492  0EBD                     	;# 
   493  0EBE                     	;# 
   494  0EC3                     	;# 
   495  0EC5                     	;# 
   496  0EC6                     	;# 
   497  0EC7                     	;# 
   498  0EC8                     	;# 
   499  0EC9                     	;# 
   500  0ECA                     	;# 
   501  0ECB                     	;# 
   502  0ECC                     	;# 
   503  0F10                     	;# 
   504  0F11                     	;# 
   505  0F12                     	;# 
   506  0F13                     	;# 
   507  0F14                     	;# 
   508  0F15                     	;# 
   509  0F16                     	;# 
   510  0F17                     	;# 
   511  0F18                     	;# 
   512  0F19                     	;# 
   513  0F1A                     	;# 
   514  0F1B                     	;# 
   515  0F1C                     	;# 
   516  0F1D                     	;# 
   517  0F1E                     	;# 
   518  0F1F                     	;# 
   519  0F20                     	;# 
   520  0F21                     	;# 
   521  0F22                     	;# 
   522  0F23                     	;# 
   523  0F24                     	;# 
   524  0F25                     	;# 
   525  0F26                     	;# 
   526  0F27                     	;# 
   527  0F38                     	;# 
   528  0F39                     	;# 
   529  0F3A                     	;# 
   530  0F3B                     	;# 
   531  0F3C                     	;# 
   532  0F3D                     	;# 
   533  0F3E                     	;# 
   534  0F3F                     	;# 
   535  0F40                     	;# 
   536  0F41                     	;# 
   537  0F43                     	;# 
   538  0F44                     	;# 
   539  0F45                     	;# 
   540  0F46                     	;# 
   541  0F47                     	;# 
   542  0F48                     	;# 
   543  0F49                     	;# 
   544  0F4A                     	;# 
   545  0F4B                     	;# 
   546  0F4C                     	;# 
   547  0F4E                     	;# 
   548  0F4F                     	;# 
   549  0F50                     	;# 
   550  0F51                     	;# 
   551  0F52                     	;# 
   552  0F53                     	;# 
   553  0F54                     	;# 
   554  0F55                     	;# 
   555  0F56                     	;# 
   556  0F57                     	;# 
   557  0F65                     	;# 
   558  0F68                     	;# 
   559  0F69                     	;# 
   560  0F6A                     	;# 
   561  0F6B                     	;# 
   562  0FE4                     	;# 
   563  0FE5                     	;# 
   564  0FE6                     	;# 
   565  0FE7                     	;# 
   566  0FE8                     	;# 
   567  0FE9                     	;# 
   568  0FEA                     	;# 
   569  0FEB                     	;# 
   570  0FED                     	;# 
   571  0FEE                     	;# 
   572  0FEF                     	;# 
   573  0000                     	;# 
   574  0001                     	;# 
   575  0002                     	;# 
   576  0003                     	;# 
   577  0004                     	;# 
   578  0005                     	;# 
   579  0006                     	;# 
   580  0007                     	;# 
   581  0008                     	;# 
   582  0009                     	;# 
   583  000A                     	;# 
   584  000B                     	;# 
   585  000C                     	;# 
   586  000D                     	;# 
   587  000E                     	;# 
   588  0010                     	;# 
   589  0011                     	;# 
   590  0012                     	;# 
   591  0013                     	;# 
   592  0016                     	;# 
   593  0017                     	;# 
   594  0018                     	;# 
   595  001C                     	;# 
   596  001C                     	;# 
   597  001D                     	;# 
   598  001D                     	;# 
   599  001E                     	;# 
   600  001F                     	;# 
   601  008C                     	;# 
   602  008C                     	;# 
   603  008D                     	;# 
   604  008E                     	;# 
   605  008E                     	;# 
   606  008F                     	;# 
   607  0090                     	;# 
   608  0090                     	;# 
   609  0091                     	;# 
   610  0093                     	;# 
   611  0094                     	;# 
   612  0095                     	;# 
   613  0096                     	;# 
   614  0097                     	;# 
   615  0098                     	;# 
   616  0099                     	;# 
   617  009A                     	;# 
   618  009B                     	;# 
   619  009C                     	;# 
   620  009D                     	;# 
   621  009E                     	;# 
   622  010C                     	;# 
   623  010D                     	;# 
   624  010E                     	;# 
   625  010E                     	;# 
   626  010F                     	;# 
   627  0110                     	;# 
   628  0110                     	;# 
   629  0111                     	;# 
   630  0112                     	;# 
   631  0112                     	;# 
   632  0113                     	;# 
   633  0114                     	;# 
   634  0114                     	;# 
   635  0115                     	;# 
   636  0116                     	;# 
   637  0116                     	;# 
   638  0117                     	;# 
   639  0119                     	;# 
   640  0119                     	;# 
   641  0119                     	;# 
   642  011A                     	;# 
   643  011A                     	;# 
   644  011A                     	;# 
   645  011B                     	;# 
   646  011B                     	;# 
   647  011B                     	;# 
   648  011B                     	;# 
   649  011B                     	;# 
   650  011C                     	;# 
   651  011C                     	;# 
   652  011C                     	;# 
   653  011D                     	;# 
   654  011D                     	;# 
   655  011D                     	;# 
   656  011E                     	;# 
   657  011E                     	;# 
   658  011E                     	;# 
   659  011F                     	;# 
   660  011F                     	;# 
   661  011F                     	;# 
   662  011F                     	;# 
   663  011F                     	;# 
   664  018C                     	;# 
   665  018D                     	;# 
   666  018E                     	;# 
   667  018F                     	;# 
   668  0190                     	;# 
   669  0191                     	;# 
   670  0192                     	;# 
   671  0196                     	;# 
   672  0197                     	;# 
   673  0198                     	;# 
   674  0199                     	;# 
   675  019A                     	;# 
   676  019B                     	;# 
   677  019C                     	;# 
   678  020C                     	;# 
   679  020D                     	;# 
   680  020E                     	;# 
   681  020F                     	;# 
   682  020F                     	;# 
   683  0210                     	;# 
   684  0210                     	;# 
   685  0211                     	;# 
   686  0211                     	;# 
   687  0212                     	;# 
   688  0213                     	;# 
   689  0214                     	;# 
   690  0215                     	;# 
   691  0215                     	;# 
   692  0216                     	;# 
   693  0216                     	;# 
   694  0217                     	;# 
   695  0217                     	;# 
   696  0218                     	;# 
   697  0219                     	;# 
   698  021A                     	;# 
   699  021B                     	;# 
   700  021B                     	;# 
   701  021C                     	;# 
   702  021C                     	;# 
   703  021D                     	;# 
   704  021D                     	;# 
   705  021E                     	;# 
   706  021F                     	;# 
   707  028C                     	;# 
   708  028C                     	;# 
   709  028D                     	;# 
   710  028D                     	;# 
   711  028E                     	;# 
   712  028F                     	;# 
   713  0290                     	;# 
   714  0290                     	;# 
   715  0291                     	;# 
   716  0292                     	;# 
   717  0292                     	;# 
   718  0293                     	;# 
   719  0293                     	;# 
   720  0294                     	;# 
   721  0295                     	;# 
   722  0296                     	;# 
   723  0296                     	;# 
   724  0297                     	;# 
   725  0298                     	;# 
   726  0298                     	;# 
   727  0299                     	;# 
   728  0299                     	;# 
   729  029A                     	;# 
   730  029B                     	;# 
   731  029C                     	;# 
   732  029C                     	;# 
   733  029D                     	;# 
   734  030C                     	;# 
   735  030C                     	;# 
   736  030D                     	;# 
   737  030E                     	;# 
   738  030F                     	;# 
   739  0310                     	;# 
   740  0310                     	;# 
   741  0311                     	;# 
   742  0312                     	;# 
   743  0313                     	;# 
   744  0314                     	;# 
   745  0314                     	;# 
   746  0315                     	;# 
   747  0316                     	;# 
   748  0317                     	;# 
   749  0318                     	;# 
   750  0318                     	;# 
   751  0319                     	;# 
   752  031A                     	;# 
   753  031B                     	;# 
   754  031C                     	;# 
   755  031C                     	;# 
   756  031D                     	;# 
   757  031E                     	;# 
   758  031F                     	;# 
   759  038C                     	;# 
   760  038D                     	;# 
   761  038E                     	;# 
   762  0390                     	;# 
   763  0391                     	;# 
   764  0392                     	;# 
   765  040C                     	;# 
   766  040D                     	;# 
   767  040E                     	;# 
   768  040F                     	;# 
   769  0410                     	;# 
   770  0411                     	;# 
   771  0416                     	;# 
   772  0416                     	;# 
   773  0417                     	;# 
   774  0418                     	;# 
   775  0418                     	;# 
   776  0419                     	;# 
   777  041A                     	;# 
   778  041A                     	;# 
   779  041B                     	;# 
   780  041C                     	;# 
   781  041C                     	;# 
   782  041D                     	;# 
   783  041E                     	;# 
   784  041F                     	;# 
   785  048C                     	;# 
   786  048C                     	;# 
   787  048D                     	;# 
   788  048E                     	;# 
   789  048F                     	;# 
   790  048F                     	;# 
   791  0490                     	;# 
   792  0491                     	;# 
   793  0492                     	;# 
   794  0492                     	;# 
   795  0493                     	;# 
   796  0494                     	;# 
   797  0495                     	;# 
   798  0495                     	;# 
   799  0496                     	;# 
   800  0497                     	;# 
   801  0498                     	;# 
   802  0499                     	;# 
   803  049A                     	;# 
   804  049B                     	;# 
   805  049C                     	;# 
   806  049D                     	;# 
   807  050C                     	;# 
   808  050C                     	;# 
   809  050D                     	;# 
   810  050E                     	;# 
   811  050F                     	;# 
   812  050F                     	;# 
   813  0510                     	;# 
   814  0511                     	;# 
   815  0512                     	;# 
   816  0512                     	;# 
   817  0513                     	;# 
   818  0514                     	;# 
   819  0515                     	;# 
   820  0515                     	;# 
   821  0516                     	;# 
   822  0517                     	;# 
   823  0518                     	;# 
   824  0519                     	;# 
   825  051A                     	;# 
   826  051B                     	;# 
   827  051C                     	;# 
   828  051D                     	;# 
   829  058C                     	;# 
   830  058C                     	;# 
   831  058D                     	;# 
   832  058E                     	;# 
   833  058F                     	;# 
   834  058F                     	;# 
   835  0590                     	;# 
   836  0591                     	;# 
   837  0592                     	;# 
   838  0593                     	;# 
   839  060C                     	;# 
   840  060D                     	;# 
   841  060E                     	;# 
   842  060F                     	;# 
   843  0610                     	;# 
   844  0611                     	;# 
   845  0612                     	;# 
   846  0613                     	;# 
   847  0614                     	;# 
   848  0616                     	;# 
   849  0617                     	;# 
   850  0618                     	;# 
   851  0619                     	;# 
   852  061A                     	;# 
   853  061B                     	;# 
   854  061C                     	;# 
   855  061D                     	;# 
   856  061E                     	;# 
   857  068C                     	;# 
   858  068D                     	;# 
   859  068E                     	;# 
   860  068F                     	;# 
   861  0690                     	;# 
   862  0691                     	;# 
   863  0692                     	;# 
   864  0693                     	;# 
   865  0694                     	;# 
   866  070C                     	;# 
   867  070D                     	;# 
   868  070E                     	;# 
   869  070F                     	;# 
   870  0710                     	;# 
   871  0711                     	;# 
   872  0712                     	;# 
   873  0713                     	;# 
   874  0714                     	;# 
   875  0716                     	;# 
   876  0717                     	;# 
   877  0718                     	;# 
   878  0719                     	;# 
   879  071A                     	;# 
   880  071B                     	;# 
   881  071C                     	;# 
   882  071D                     	;# 
   883  071E                     	;# 
   884  0796                     	;# 
   885  0797                     	;# 
   886  0798                     	;# 
   887  0799                     	;# 
   888  079A                     	;# 
   889  079B                     	;# 
   890  080C                     	;# 
   891  080D                     	;# 
   892  080E                     	;# 
   893  080F                     	;# 
   894  0810                     	;# 
   895  0811                     	;# 
   896  0812                     	;# 
   897  0813                     	;# 
   898  0814                     	;# 
   899  081A                     	;# 
   900  081B                     	;# 
   901  081C                     	;# 
   902  081D                     	;# 
   903  081E                     	;# 
   904  081F                     	;# 
   905  088C                     	;# 
   906  088D                     	;# 
   907  088E                     	;# 
   908  088F                     	;# 
   909  0890                     	;# 
   910  0891                     	;# 
   911  0892                     	;# 
   912  0893                     	;# 
   913  0895                     	;# 
   914  0896                     	;# 
   915  0897                     	;# 
   916  0898                     	;# 
   917  0899                     	;# 
   918  089A                     	;# 
   919  089B                     	;# 
   920  090C                     	;# 
   921  090E                     	;# 
   922  090F                     	;# 
   923  091F                     	;# 
   924  091F                     	;# 
   925  098F                     	;# 
   926  098F                     	;# 
   927  0990                     	;# 
   928  0991                     	;# 
   929  0992                     	;# 
   930  0993                     	;# 
   931  0994                     	;# 
   932  0995                     	;# 
   933  0996                     	;# 
   934  0997                     	;# 
   935  0E0F                     	;# 
   936  0E10                     	;# 
   937  0E11                     	;# 
   938  0E12                     	;# 
   939  0E13                     	;# 
   940  0E14                     	;# 
   941  0E15                     	;# 
   942  0E16                     	;# 
   943  0E17                     	;# 
   944  0E18                     	;# 
   945  0E19                     	;# 
   946  0E1A                     	;# 
   947  0E1B                     	;# 
   948  0E1C                     	;# 
   949  0E1D                     	;# 
   950  0E1E                     	;# 
   951  0E1F                     	;# 
   952  0E20                     	;# 
   953  0E21                     	;# 
   954  0E22                     	;# 
   955  0E23                     	;# 
   956  0E24                     	;# 
   957  0E25                     	;# 
   958  0E26                     	;# 
   959  0E27                     	;# 
   960  0E28                     	;# 
   961  0E29                     	;# 
   962  0E2A                     	;# 
   963  0E2B                     	;# 
   964  0E2C                     	;# 
   965  0E2D                     	;# 
   966  0E2E                     	;# 
   967  0E2F                     	;# 
   968  0E30                     	;# 
   969  0E31                     	;# 
   970  0E32                     	;# 
   971  0E33                     	;# 
   972  0E34                     	;# 
   973  0E35                     	;# 
   974  0E36                     	;# 
   975  0E37                     	;# 
   976  0E8F                     	;# 
   977  0E90                     	;# 
   978  0E91                     	;# 
   979  0E92                     	;# 
   980  0E93                     	;# 
   981  0E94                     	;# 
   982  0E95                     	;# 
   983  0E96                     	;# 
   984  0E97                     	;# 
   985  0E9C                     	;# 
   986  0E9D                     	;# 
   987  0E9E                     	;# 
   988  0EA1                     	;# 
   989  0EA2                     	;# 
   990  0EA3                     	;# 
   991  0EA4                     	;# 
   992  0EA5                     	;# 
   993  0EA9                     	;# 
   994  0EAA                     	;# 
   995  0EAB                     	;# 
   996  0EAC                     	;# 
   997  0EB1                     	;# 
   998  0EB2                     	;# 
   999  0EB3                     	;# 
  1000  0EB8                     	;# 
  1001  0EB9                     	;# 
  1002  0EBA                     	;# 
  1003  0EBB                     	;# 
  1004  0EBC                     	;# 
  1005  0EBD                     	;# 
  1006  0EBE                     	;# 
  1007  0EC3                     	;# 
  1008  0EC5                     	;# 
  1009  0EC6                     	;# 
  1010  0EC7                     	;# 
  1011  0EC8                     	;# 
  1012  0EC9                     	;# 
  1013  0ECA                     	;# 
  1014  0ECB                     	;# 
  1015  0ECC                     	;# 
  1016  0F10                     	;# 
  1017  0F11                     	;# 
  1018  0F12                     	;# 
  1019  0F13                     	;# 
  1020  0F14                     	;# 
  1021  0F15                     	;# 
  1022  0F16                     	;# 
  1023  0F17                     	;# 
  1024  0F18                     	;# 
  1025  0F19                     	;# 
  1026  0F1A                     	;# 
  1027  0F1B                     	;# 
  1028  0F1C                     	;# 
  1029  0F1D                     	;# 
  1030  0F1E                     	;# 
  1031  0F1F                     	;# 
  1032  0F20                     	;# 
  1033  0F21                     	;# 
  1034  0F22                     	;# 
  1035  0F23                     	;# 
  1036  0F24                     	;# 
  1037  0F25                     	;# 
  1038  0F26                     	;# 
  1039  0F27                     	;# 
  1040  0F38                     	;# 
  1041  0F39                     	;# 
  1042  0F3A                     	;# 
  1043  0F3B                     	;# 
  1044  0F3C                     	;# 
  1045  0F3D                     	;# 
  1046  0F3E                     	;# 
  1047  0F3F                     	;# 
  1048  0F40                     	;# 
  1049  0F41                     	;# 
  1050  0F43                     	;# 
  1051  0F44                     	;# 
  1052  0F45                     	;# 
  1053  0F46                     	;# 
  1054  0F47                     	;# 
  1055  0F48                     	;# 
  1056  0F49                     	;# 
  1057  0F4A                     	;# 
  1058  0F4B                     	;# 
  1059  0F4C                     	;# 
  1060  0F4E                     	;# 
  1061  0F4F                     	;# 
  1062  0F50                     	;# 
  1063  0F51                     	;# 
  1064  0F52                     	;# 
  1065  0F53                     	;# 
  1066  0F54                     	;# 
  1067  0F55                     	;# 
  1068  0F56                     	;# 
  1069  0F57                     	;# 
  1070  0F65                     	;# 
  1071  0F68                     	;# 
  1072  0F69                     	;# 
  1073  0F6A                     	;# 
  1074  0F6B                     	;# 
  1075  0FE4                     	;# 
  1076  0FE5                     	;# 
  1077  0FE6                     	;# 
  1078  0FE7                     	;# 
  1079  0FE8                     	;# 
  1080  0FE9                     	;# 
  1081  0FEA                     	;# 
  1082  0FEB                     	;# 
  1083  0FED                     	;# 
  1084  0FEE                     	;# 
  1085  0FEF                     	;# 
  1086  0000                     	;# 
  1087  0001                     	;# 
  1088  0002                     	;# 
  1089  0003                     	;# 
  1090  0004                     	;# 
  1091  0005                     	;# 
  1092  0006                     	;# 
  1093  0007                     	;# 
  1094  0008                     	;# 
  1095  0009                     	;# 
  1096  000A                     	;# 
  1097  000B                     	;# 
  1098  000C                     	;# 
  1099  000D                     	;# 
  1100  000E                     	;# 
  1101  0010                     	;# 
  1102  0011                     	;# 
  1103  0012                     	;# 
  1104  0013                     	;# 
  1105  0016                     	;# 
  1106  0017                     	;# 
  1107  0018                     	;# 
  1108  001C                     	;# 
  1109  001C                     	;# 
  1110  001D                     	;# 
  1111  001D                     	;# 
  1112  001E                     	;# 
  1113  001F                     	;# 
  1114  008C                     	;# 
  1115  008C                     	;# 
  1116  008D                     	;# 
  1117  008E                     	;# 
  1118  008E                     	;# 
  1119  008F                     	;# 
  1120  0090                     	;# 
  1121  0090                     	;# 
  1122  0091                     	;# 
  1123  0093                     	;# 
  1124  0094                     	;# 
  1125  0095                     	;# 
  1126  0096                     	;# 
  1127  0097                     	;# 
  1128  0098                     	;# 
  1129  0099                     	;# 
  1130  009A                     	;# 
  1131  009B                     	;# 
  1132  009C                     	;# 
  1133  009D                     	;# 
  1134  009E                     	;# 
  1135  010C                     	;# 
  1136  010D                     	;# 
  1137  010E                     	;# 
  1138  010E                     	;# 
  1139  010F                     	;# 
  1140  0110                     	;# 
  1141  0110                     	;# 
  1142  0111                     	;# 
  1143  0112                     	;# 
  1144  0112                     	;# 
  1145  0113                     	;# 
  1146  0114                     	;# 
  1147  0114                     	;# 
  1148  0115                     	;# 
  1149  0116                     	;# 
  1150  0116                     	;# 
  1151  0117                     	;# 
  1152  0119                     	;# 
  1153  0119                     	;# 
  1154  0119                     	;# 
  1155  011A                     	;# 
  1156  011A                     	;# 
  1157  011A                     	;# 
  1158  011B                     	;# 
  1159  011B                     	;# 
  1160  011B                     	;# 
  1161  011B                     	;# 
  1162  011B                     	;# 
  1163  011C                     	;# 
  1164  011C                     	;# 
  1165  011C                     	;# 
  1166  011D                     	;# 
  1167  011D                     	;# 
  1168  011D                     	;# 
  1169  011E                     	;# 
  1170  011E                     	;# 
  1171  011E                     	;# 
  1172  011F                     	;# 
  1173  011F                     	;# 
  1174  011F                     	;# 
  1175  011F                     	;# 
  1176  011F                     	;# 
  1177  018C                     	;# 
  1178  018D                     	;# 
  1179  018E                     	;# 
  1180  018F                     	;# 
  1181  0190                     	;# 
  1182  0191                     	;# 
  1183  0192                     	;# 
  1184  0196                     	;# 
  1185  0197                     	;# 
  1186  0198                     	;# 
  1187  0199                     	;# 
  1188  019A                     	;# 
  1189  019B                     	;# 
  1190  019C                     	;# 
  1191  020C                     	;# 
  1192  020D                     	;# 
  1193  020E                     	;# 
  1194  020F                     	;# 
  1195  020F                     	;# 
  1196  0210                     	;# 
  1197  0210                     	;# 
  1198  0211                     	;# 
  1199  0211                     	;# 
  1200  0212                     	;# 
  1201  0213                     	;# 
  1202  0214                     	;# 
  1203  0215                     	;# 
  1204  0215                     	;# 
  1205  0216                     	;# 
  1206  0216                     	;# 
  1207  0217                     	;# 
  1208  0217                     	;# 
  1209  0218                     	;# 
  1210  0219                     	;# 
  1211  021A                     	;# 
  1212  021B                     	;# 
  1213  021B                     	;# 
  1214  021C                     	;# 
  1215  021C                     	;# 
  1216  021D                     	;# 
  1217  021D                     	;# 
  1218  021E                     	;# 
  1219  021F                     	;# 
  1220  028C                     	;# 
  1221  028C                     	;# 
  1222  028D                     	;# 
  1223  028D                     	;# 
  1224  028E                     	;# 
  1225  028F                     	;# 
  1226  0290                     	;# 
  1227  0290                     	;# 
  1228  0291                     	;# 
  1229  0292                     	;# 
  1230  0292                     	;# 
  1231  0293                     	;# 
  1232  0293                     	;# 
  1233  0294                     	;# 
  1234  0295                     	;# 
  1235  0296                     	;# 
  1236  0296                     	;# 
  1237  0297                     	;# 
  1238  0298                     	;# 
  1239  0298                     	;# 
  1240  0299                     	;# 
  1241  0299                     	;# 
  1242  029A                     	;# 
  1243  029B                     	;# 
  1244  029C                     	;# 
  1245  029C                     	;# 
  1246  029D                     	;# 
  1247  030C                     	;# 
  1248  030C                     	;# 
  1249  030D                     	;# 
  1250  030E                     	;# 
  1251  030F                     	;# 
  1252  0310                     	;# 
  1253  0310                     	;# 
  1254  0311                     	;# 
  1255  0312                     	;# 
  1256  0313                     	;# 
  1257  0314                     	;# 
  1258  0314                     	;# 
  1259  0315                     	;# 
  1260  0316                     	;# 
  1261  0317                     	;# 
  1262  0318                     	;# 
  1263  0318                     	;# 
  1264  0319                     	;# 
  1265  031A                     	;# 
  1266  031B                     	;# 
  1267  031C                     	;# 
  1268  031C                     	;# 
  1269  031D                     	;# 
  1270  031E                     	;# 
  1271  031F                     	;# 
  1272  038C                     	;# 
  1273  038D                     	;# 
  1274  038E                     	;# 
  1275  0390                     	;# 
  1276  0391                     	;# 
  1277  0392                     	;# 
  1278  040C                     	;# 
  1279  040D                     	;# 
  1280  040E                     	;# 
  1281  040F                     	;# 
  1282  0410                     	;# 
  1283  0411                     	;# 
  1284  0416                     	;# 
  1285  0416                     	;# 
  1286  0417                     	;# 
  1287  0418                     	;# 
  1288  0418                     	;# 
  1289  0419                     	;# 
  1290  041A                     	;# 
  1291  041A                     	;# 
  1292  041B                     	;# 
  1293  041C                     	;# 
  1294  041C                     	;# 
  1295  041D                     	;# 
  1296  041E                     	;# 
  1297  041F                     	;# 
  1298  048C                     	;# 
  1299  048C                     	;# 
  1300  048D                     	;# 
  1301  048E                     	;# 
  1302  048F                     	;# 
  1303  048F                     	;# 
  1304  0490                     	;# 
  1305  0491                     	;# 
  1306  0492                     	;# 
  1307  0492                     	;# 
  1308  0493                     	;# 
  1309  0494                     	;# 
  1310  0495                     	;# 
  1311  0495                     	;# 
  1312  0496                     	;# 
  1313  0497                     	;# 
  1314  0498                     	;# 
  1315  0499                     	;# 
  1316  049A                     	;# 
  1317  049B                     	;# 
  1318  049C                     	;# 
  1319  049D                     	;# 
  1320  050C                     	;# 
  1321  050C                     	;# 
  1322  050D                     	;# 
  1323  050E                     	;# 
  1324  050F                     	;# 
  1325  050F                     	;# 
  1326  0510                     	;# 
  1327  0511                     	;# 
  1328  0512                     	;# 
  1329  0512                     	;# 
  1330  0513                     	;# 
  1331  0514                     	;# 
  1332  0515                     	;# 
  1333  0515                     	;# 
  1334  0516                     	;# 
  1335  0517                     	;# 
  1336  0518                     	;# 
  1337  0519                     	;# 
  1338  051A                     	;# 
  1339  051B                     	;# 
  1340  051C                     	;# 
  1341  051D                     	;# 
  1342  058C                     	;# 
  1343  058C                     	;# 
  1344  058D                     	;# 
  1345  058E                     	;# 
  1346  058F                     	;# 
  1347  058F                     	;# 
  1348  0590                     	;# 
  1349  0591                     	;# 
  1350  0592                     	;# 
  1351  0593                     	;# 
  1352  060C                     	;# 
  1353  060D                     	;# 
  1354  060E                     	;# 
  1355  060F                     	;# 
  1356  0610                     	;# 
  1357  0611                     	;# 
  1358  0612                     	;# 
  1359  0613                     	;# 
  1360  0614                     	;# 
  1361  0616                     	;# 
  1362  0617                     	;# 
  1363  0618                     	;# 
  1364  0619                     	;# 
  1365  061A                     	;# 
  1366  061B                     	;# 
  1367  061C                     	;# 
  1368  061D                     	;# 
  1369  061E                     	;# 
  1370  068C                     	;# 
  1371  068D                     	;# 
  1372  068E                     	;# 
  1373  068F                     	;# 
  1374  0690                     	;# 
  1375  0691                     	;# 
  1376  0692                     	;# 
  1377  0693                     	;# 
  1378  0694                     	;# 
  1379  070C                     	;# 
  1380  070D                     	;# 
  1381  070E                     	;# 
  1382  070F                     	;# 
  1383  0710                     	;# 
  1384  0711                     	;# 
  1385  0712                     	;# 
  1386  0713                     	;# 
  1387  0714                     	;# 
  1388  0716                     	;# 
  1389  0717                     	;# 
  1390  0718                     	;# 
  1391  0719                     	;# 
  1392  071A                     	;# 
  1393  071B                     	;# 
  1394  071C                     	;# 
  1395  071D                     	;# 
  1396  071E                     	;# 
  1397  0796                     	;# 
  1398  0797                     	;# 
  1399  0798                     	;# 
  1400  0799                     	;# 
  1401  079A                     	;# 
  1402  079B                     	;# 
  1403  080C                     	;# 
  1404  080D                     	;# 
  1405  080E                     	;# 
  1406  080F                     	;# 
  1407  0810                     	;# 
  1408  0811                     	;# 
  1409  0812                     	;# 
  1410  0813                     	;# 
  1411  0814                     	;# 
  1412  081A                     	;# 
  1413  081B                     	;# 
  1414  081C                     	;# 
  1415  081D                     	;# 
  1416  081E                     	;# 
  1417  081F                     	;# 
  1418  088C                     	;# 
  1419  088D                     	;# 
  1420  088E                     	;# 
  1421  088F                     	;# 
  1422  0890                     	;# 
  1423  0891                     	;# 
  1424  0892                     	;# 
  1425  0893                     	;# 
  1426  0895                     	;# 
  1427  0896                     	;# 
  1428  0897                     	;# 
  1429  0898                     	;# 
  1430  0899                     	;# 
  1431  089A                     	;# 
  1432  089B                     	;# 
  1433  090C                     	;# 
  1434  090E                     	;# 
  1435  090F                     	;# 
  1436  091F                     	;# 
  1437  091F                     	;# 
  1438  098F                     	;# 
  1439  098F                     	;# 
  1440  0990                     	;# 
  1441  0991                     	;# 
  1442  0992                     	;# 
  1443  0993                     	;# 
  1444  0994                     	;# 
  1445  0995                     	;# 
  1446  0996                     	;# 
  1447  0997                     	;# 
  1448  0E0F                     	;# 
  1449  0E10                     	;# 
  1450  0E11                     	;# 
  1451  0E12                     	;# 
  1452  0E13                     	;# 
  1453  0E14                     	;# 
  1454  0E15                     	;# 
  1455  0E16                     	;# 
  1456  0E17                     	;# 
  1457  0E18                     	;# 
  1458  0E19                     	;# 
  1459  0E1A                     	;# 
  1460  0E1B                     	;# 
  1461  0E1C                     	;# 
  1462  0E1D                     	;# 
  1463  0E1E                     	;# 
  1464  0E1F                     	;# 
  1465  0E20                     	;# 
  1466  0E21                     	;# 
  1467  0E22                     	;# 
  1468  0E23                     	;# 
  1469  0E24                     	;# 
  1470  0E25                     	;# 
  1471  0E26                     	;# 
  1472  0E27                     	;# 
  1473  0E28                     	;# 
  1474  0E29                     	;# 
  1475  0E2A                     	;# 
  1476  0E2B                     	;# 
  1477  0E2C                     	;# 
  1478  0E2D                     	;# 
  1479  0E2E                     	;# 
  1480  0E2F                     	;# 
  1481  0E30                     	;# 
  1482  0E31                     	;# 
  1483  0E32                     	;# 
  1484  0E33                     	;# 
  1485  0E34                     	;# 
  1486  0E35                     	;# 
  1487  0E36                     	;# 
  1488  0E37                     	;# 
  1489  0E8F                     	;# 
  1490  0E90                     	;# 
  1491  0E91                     	;# 
  1492  0E92                     	;# 
  1493  0E93                     	;# 
  1494  0E94                     	;# 
  1495  0E95                     	;# 
  1496  0E96                     	;# 
  1497  0E97                     	;# 
  1498  0E9C                     	;# 
  1499  0E9D                     	;# 
  1500  0E9E                     	;# 
  1501  0EA1                     	;# 
  1502  0EA2                     	;# 
  1503  0EA3                     	;# 
  1504  0EA4                     	;# 
  1505  0EA5                     	;# 
  1506  0EA9                     	;# 
  1507  0EAA                     	;# 
  1508  0EAB                     	;# 
  1509  0EAC                     	;# 
  1510  0EB1                     	;# 
  1511  0EB2                     	;# 
  1512  0EB3                     	;# 
  1513  0EB8                     	;# 
  1514  0EB9                     	;# 
  1515  0EBA                     	;# 
  1516  0EBB                     	;# 
  1517  0EBC                     	;# 
  1518  0EBD                     	;# 
  1519  0EBE                     	;# 
  1520  0EC3                     	;# 
  1521  0EC5                     	;# 
  1522  0EC6                     	;# 
  1523  0EC7                     	;# 
  1524  0EC8                     	;# 
  1525  0EC9                     	;# 
  1526  0ECA                     	;# 
  1527  0ECB                     	;# 
  1528  0ECC                     	;# 
  1529  0F10                     	;# 
  1530  0F11                     	;# 
  1531  0F12                     	;# 
  1532  0F13                     	;# 
  1533  0F14                     	;# 
  1534  0F15                     	;# 
  1535  0F16                     	;# 
  1536  0F17                     	;# 
  1537  0F18                     	;# 
  1538  0F19                     	;# 
  1539  0F1A                     	;# 
  1540  0F1B                     	;# 
  1541  0F1C                     	;# 
  1542  0F1D                     	;# 
  1543  0F1E                     	;# 
  1544  0F1F                     	;# 
  1545  0F20                     	;# 
  1546  0F21                     	;# 
  1547  0F22                     	;# 
  1548  0F23                     	;# 
  1549  0F24                     	;# 
  1550  0F25                     	;# 
  1551  0F26                     	;# 
  1552  0F27                     	;# 
  1553  0F38                     	;# 
  1554  0F39                     	;# 
  1555  0F3A                     	;# 
  1556  0F3B                     	;# 
  1557  0F3C                     	;# 
  1558  0F3D                     	;# 
  1559  0F3E                     	;# 
  1560  0F3F                     	;# 
  1561  0F40                     	;# 
  1562  0F41                     	;# 
  1563  0F43                     	;# 
  1564  0F44                     	;# 
  1565  0F45                     	;# 
  1566  0F46                     	;# 
  1567  0F47                     	;# 
  1568  0F48                     	;# 
  1569  0F49                     	;# 
  1570  0F4A                     	;# 
  1571  0F4B                     	;# 
  1572  0F4C                     	;# 
  1573  0F4E                     	;# 
  1574  0F4F                     	;# 
  1575  0F50                     	;# 
  1576  0F51                     	;# 
  1577  0F52                     	;# 
  1578  0F53                     	;# 
  1579  0F54                     	;# 
  1580  0F55                     	;# 
  1581  0F56                     	;# 
  1582  0F57                     	;# 
  1583  0F65                     	;# 
  1584  0F68                     	;# 
  1585  0F69                     	;# 
  1586  0F6A                     	;# 
  1587  0F6B                     	;# 
  1588  0FE4                     	;# 
  1589  0FE5                     	;# 
  1590  0FE6                     	;# 
  1591  0FE7                     	;# 
  1592  0FE8                     	;# 
  1593  0FE9                     	;# 
  1594  0FEA                     	;# 
  1595  0FEB                     	;# 
  1596  0FED                     	;# 
  1597  0FEE                     	;# 
  1598  0FEF                     	;# 
  1599  0000                     	;# 
  1600  0001                     	;# 
  1601  0002                     	;# 
  1602  0003                     	;# 
  1603  0004                     	;# 
  1604  0005                     	;# 
  1605  0006                     	;# 
  1606  0007                     	;# 
  1607  0008                     	;# 
  1608  0009                     	;# 
  1609  000A                     	;# 
  1610  000B                     	;# 
  1611  000C                     	;# 
  1612  000D                     	;# 
  1613  000E                     	;# 
  1614  0010                     	;# 
  1615  0011                     	;# 
  1616  0012                     	;# 
  1617  0013                     	;# 
  1618  0016                     	;# 
  1619  0017                     	;# 
  1620  0018                     	;# 
  1621  001C                     	;# 
  1622  001C                     	;# 
  1623  001D                     	;# 
  1624  001D                     	;# 
  1625  001E                     	;# 
  1626  001F                     	;# 
  1627  008C                     	;# 
  1628  008C                     	;# 
  1629  008D                     	;# 
  1630  008E                     	;# 
  1631  008E                     	;# 
  1632  008F                     	;# 
  1633  0090                     	;# 
  1634  0090                     	;# 
  1635  0091                     	;# 
  1636  0093                     	;# 
  1637  0094                     	;# 
  1638  0095                     	;# 
  1639  0096                     	;# 
  1640  0097                     	;# 
  1641  0098                     	;# 
  1642  0099                     	;# 
  1643  009A                     	;# 
  1644  009B                     	;# 
  1645  009C                     	;# 
  1646  009D                     	;# 
  1647  009E                     	;# 
  1648  010C                     	;# 
  1649  010D                     	;# 
  1650  010E                     	;# 
  1651  010E                     	;# 
  1652  010F                     	;# 
  1653  0110                     	;# 
  1654  0110                     	;# 
  1655  0111                     	;# 
  1656  0112                     	;# 
  1657  0112                     	;# 
  1658  0113                     	;# 
  1659  0114                     	;# 
  1660  0114                     	;# 
  1661  0115                     	;# 
  1662  0116                     	;# 
  1663  0116                     	;# 
  1664  0117                     	;# 
  1665  0119                     	;# 
  1666  0119                     	;# 
  1667  0119                     	;# 
  1668  011A                     	;# 
  1669  011A                     	;# 
  1670  011A                     	;# 
  1671  011B                     	;# 
  1672  011B                     	;# 
  1673  011B                     	;# 
  1674  011B                     	;# 
  1675  011B                     	;# 
  1676  011C                     	;# 
  1677  011C                     	;# 
  1678  011C                     	;# 
  1679  011D                     	;# 
  1680  011D                     	;# 
  1681  011D                     	;# 
  1682  011E                     	;# 
  1683  011E                     	;# 
  1684  011E                     	;# 
  1685  011F                     	;# 
  1686  011F                     	;# 
  1687  011F                     	;# 
  1688  011F                     	;# 
  1689  011F                     	;# 
  1690  018C                     	;# 
  1691  018D                     	;# 
  1692  018E                     	;# 
  1693  018F                     	;# 
  1694  0190                     	;# 
  1695  0191                     	;# 
  1696  0192                     	;# 
  1697  0196                     	;# 
  1698  0197                     	;# 
  1699  0198                     	;# 
  1700  0199                     	;# 
  1701  019A                     	;# 
  1702  019B                     	;# 
  1703  019C                     	;# 
  1704  020C                     	;# 
  1705  020D                     	;# 
  1706  020E                     	;# 
  1707  020F                     	;# 
  1708  020F                     	;# 
  1709  0210                     	;# 
  1710  0210                     	;# 
  1711  0211                     	;# 
  1712  0211                     	;# 
  1713  0212                     	;# 
  1714  0213                     	;# 
  1715  0214                     	;# 
  1716  0215                     	;# 
  1717  0215                     	;# 
  1718  0216                     	;# 
  1719  0216                     	;# 
  1720  0217                     	;# 
  1721  0217                     	;# 
  1722  0218                     	;# 
  1723  0219                     	;# 
  1724  021A                     	;# 
  1725  021B                     	;# 
  1726  021B                     	;# 
  1727  021C                     	;# 
  1728  021C                     	;# 
  1729  021D                     	;# 
  1730  021D                     	;# 
  1731  021E                     	;# 
  1732  021F                     	;# 
  1733  028C                     	;# 
  1734  028C                     	;# 
  1735  028D                     	;# 
  1736  028D                     	;# 
  1737  028E                     	;# 
  1738  028F                     	;# 
  1739  0290                     	;# 
  1740  0290                     	;# 
  1741  0291                     	;# 
  1742  0292                     	;# 
  1743  0292                     	;# 
  1744  0293                     	;# 
  1745  0293                     	;# 
  1746  0294                     	;# 
  1747  0295                     	;# 
  1748  0296                     	;# 
  1749  0296                     	;# 
  1750  0297                     	;# 
  1751  0298                     	;# 
  1752  0298                     	;# 
  1753  0299                     	;# 
  1754  0299                     	;# 
  1755  029A                     	;# 
  1756  029B                     	;# 
  1757  029C                     	;# 
  1758  029C                     	;# 
  1759  029D                     	;# 
  1760  030C                     	;# 
  1761  030C                     	;# 
  1762  030D                     	;# 
  1763  030E                     	;# 
  1764  030F                     	;# 
  1765  0310                     	;# 
  1766  0310                     	;# 
  1767  0311                     	;# 
  1768  0312                     	;# 
  1769  0313                     	;# 
  1770  0314                     	;# 
  1771  0314                     	;# 
  1772  0315                     	;# 
  1773  0316                     	;# 
  1774  0317                     	;# 
  1775  0318                     	;# 
  1776  0318                     	;# 
  1777  0319                     	;# 
  1778  031A                     	;# 
  1779  031B                     	;# 
  1780  031C                     	;# 
  1781  031C                     	;# 
  1782  031D                     	;# 
  1783  031E                     	;# 
  1784  031F                     	;# 
  1785  038C                     	;# 
  1786  038D                     	;# 
  1787  038E                     	;# 
  1788  0390                     	;# 
  1789  0391                     	;# 
  1790  0392                     	;# 
  1791  040C                     	;# 
  1792  040D                     	;# 
  1793  040E                     	;# 
  1794  040F                     	;# 
  1795  0410                     	;# 
  1796  0411                     	;# 
  1797  0416                     	;# 
  1798  0416                     	;# 
  1799  0417                     	;# 
  1800  0418                     	;# 
  1801  0418                     	;# 
  1802  0419                     	;# 
  1803  041A                     	;# 
  1804  041A                     	;# 
  1805  041B                     	;# 
  1806  041C                     	;# 
  1807  041C                     	;# 
  1808  041D                     	;# 
  1809  041E                     	;# 
  1810  041F                     	;# 
  1811  048C                     	;# 
  1812  048C                     	;# 
  1813  048D                     	;# 
  1814  048E                     	;# 
  1815  048F                     	;# 
  1816  048F                     	;# 
  1817  0490                     	;# 
  1818  0491                     	;# 
  1819  0492                     	;# 
  1820  0492                     	;# 
  1821  0493                     	;# 
  1822  0494                     	;# 
  1823  0495                     	;# 
  1824  0495                     	;# 
  1825  0496                     	;# 
  1826  0497                     	;# 
  1827  0498                     	;# 
  1828  0499                     	;# 
  1829  049A                     	;# 
  1830  049B                     	;# 
  1831  049C                     	;# 
  1832  049D                     	;# 
  1833  050C                     	;# 
  1834  050C                     	;# 
  1835  050D                     	;# 
  1836  050E                     	;# 
  1837  050F                     	;# 
  1838  050F                     	;# 
  1839  0510                     	;# 
  1840  0511                     	;# 
  1841  0512                     	;# 
  1842  0512                     	;# 
  1843  0513                     	;# 
  1844  0514                     	;# 
  1845  0515                     	;# 
  1846  0515                     	;# 
  1847  0516                     	;# 
  1848  0517                     	;# 
  1849  0518                     	;# 
  1850  0519                     	;# 
  1851  051A                     	;# 
  1852  051B                     	;# 
  1853  051C                     	;# 
  1854  051D                     	;# 
  1855  058C                     	;# 
  1856  058C                     	;# 
  1857  058D                     	;# 
  1858  058E                     	;# 
  1859  058F                     	;# 
  1860  058F                     	;# 
  1861  0590                     	;# 
  1862  0591                     	;# 
  1863  0592                     	;# 
  1864  0593                     	;# 
  1865  060C                     	;# 
  1866  060D                     	;# 
  1867  060E                     	;# 
  1868  060F                     	;# 
  1869  0610                     	;# 
  1870  0611                     	;# 
  1871  0612                     	;# 
  1872  0613                     	;# 
  1873  0614                     	;# 
  1874  0616                     	;# 
  1875  0617                     	;# 
  1876  0618                     	;# 
  1877  0619                     	;# 
  1878  061A                     	;# 
  1879  061B                     	;# 
  1880  061C                     	;# 
  1881  061D                     	;# 
  1882  061E                     	;# 
  1883  068C                     	;# 
  1884  068D                     	;# 
  1885  068E                     	;# 
  1886  068F                     	;# 
  1887  0690                     	;# 
  1888  0691                     	;# 
  1889  0692                     	;# 
  1890  0693                     	;# 
  1891  0694                     	;# 
  1892  070C                     	;# 
  1893  070D                     	;# 
  1894  070E                     	;# 
  1895  070F                     	;# 
  1896  0710                     	;# 
  1897  0711                     	;# 
  1898  0712                     	;# 
  1899  0713                     	;# 
  1900  0714                     	;# 
  1901  0716                     	;# 
  1902  0717                     	;# 
  1903  0718                     	;# 
  1904  0719                     	;# 
  1905  071A                     	;# 
  1906  071B                     	;# 
  1907  071C                     	;# 
  1908  071D                     	;# 
  1909  071E                     	;# 
  1910  0796                     	;# 
  1911  0797                     	;# 
  1912  0798                     	;# 
  1913  0799                     	;# 
  1914  079A                     	;# 
  1915  079B                     	;# 
  1916  080C                     	;# 
  1917  080D                     	;# 
  1918  080E                     	;# 
  1919  080F                     	;# 
  1920  0810                     	;# 
  1921  0811                     	;# 
  1922  0812                     	;# 
  1923  0813                     	;# 
  1924  0814                     	;# 
  1925  081A                     	;# 
  1926  081B                     	;# 
  1927  081C                     	;# 
  1928  081D                     	;# 
  1929  081E                     	;# 
  1930  081F                     	;# 
  1931  088C                     	;# 
  1932  088D                     	;# 
  1933  088E                     	;# 
  1934  088F                     	;# 
  1935  0890                     	;# 
  1936  0891                     	;# 
  1937  0892                     	;# 
  1938  0893                     	;# 
  1939  0895                     	;# 
  1940  0896                     	;# 
  1941  0897                     	;# 
  1942  0898                     	;# 
  1943  0899                     	;# 
  1944  089A                     	;# 
  1945  089B                     	;# 
  1946  090C                     	;# 
  1947  090E                     	;# 
  1948  090F                     	;# 
  1949  091F                     	;# 
  1950  091F                     	;# 
  1951  098F                     	;# 
  1952  098F                     	;# 
  1953  0990                     	;# 
  1954  0991                     	;# 
  1955  0992                     	;# 
  1956  0993                     	;# 
  1957  0994                     	;# 
  1958  0995                     	;# 
  1959  0996                     	;# 
  1960  0997                     	;# 
  1961  0E0F                     	;# 
  1962  0E10                     	;# 
  1963  0E11                     	;# 
  1964  0E12                     	;# 
  1965  0E13                     	;# 
  1966  0E14                     	;# 
  1967  0E15                     	;# 
  1968  0E16                     	;# 
  1969  0E17                     	;# 
  1970  0E18                     	;# 
  1971  0E19                     	;# 
  1972  0E1A                     	;# 
  1973  0E1B                     	;# 
  1974  0E1C                     	;# 
  1975  0E1D                     	;# 
  1976  0E1E                     	;# 
  1977  0E1F                     	;# 
  1978  0E20                     	;# 
  1979  0E21                     	;# 
  1980  0E22                     	;# 
  1981  0E23                     	;# 
  1982  0E24                     	;# 
  1983  0E25                     	;# 
  1984  0E26                     	;# 
  1985  0E27                     	;# 
  1986  0E28                     	;# 
  1987  0E29                     	;# 
  1988  0E2A                     	;# 
  1989  0E2B                     	;# 
  1990  0E2C                     	;# 
  1991  0E2D                     	;# 
  1992  0E2E                     	;# 
  1993  0E2F                     	;# 
  1994  0E30                     	;# 
  1995  0E31                     	;# 
  1996  0E32                     	;# 
  1997  0E33                     	;# 
  1998  0E34                     	;# 
  1999  0E35                     	;# 
  2000  0E36                     	;# 
  2001  0E37                     	;# 
  2002  0E8F                     	;# 
  2003  0E90                     	;# 
  2004  0E91                     	;# 
  2005  0E92                     	;# 
  2006  0E93                     	;# 
  2007  0E94                     	;# 
  2008  0E95                     	;# 
  2009  0E96                     	;# 
  2010  0E97                     	;# 
  2011  0E9C                     	;# 
  2012  0E9D                     	;# 
  2013  0E9E                     	;# 
  2014  0EA1                     	;# 
  2015  0EA2                     	;# 
  2016  0EA3                     	;# 
  2017  0EA4                     	;# 
  2018  0EA5                     	;# 
  2019  0EA9                     	;# 
  2020  0EAA                     	;# 
  2021  0EAB                     	;# 
  2022  0EAC                     	;# 
  2023  0EB1                     	;# 
  2024  0EB2                     	;# 
  2025  0EB3                     	;# 
  2026  0EB8                     	;# 
  2027  0EB9                     	;# 
  2028  0EBA                     	;# 
  2029  0EBB                     	;# 
  2030  0EBC                     	;# 
  2031  0EBD                     	;# 
  2032  0EBE                     	;# 
  2033  0EC3                     	;# 
  2034  0EC5                     	;# 
  2035  0EC6                     	;# 
  2036  0EC7                     	;# 
  2037  0EC8                     	;# 
  2038  0EC9                     	;# 
  2039  0ECA                     	;# 
  2040  0ECB                     	;# 
  2041  0ECC                     	;# 
  2042  0F10                     	;# 
  2043  0F11                     	;# 
  2044  0F12                     	;# 
  2045  0F13                     	;# 
  2046  0F14                     	;# 
  2047  0F15                     	;# 
  2048  0F16                     	;# 
  2049  0F17                     	;# 
  2050  0F18                     	;# 
  2051  0F19                     	;# 
  2052  0F1A                     	;# 
  2053  0F1B                     	;# 
  2054  0F1C                     	;# 
  2055  0F1D                     	;# 
  2056  0F1E                     	;# 
  2057  0F1F                     	;# 
  2058  0F20                     	;# 
  2059  0F21                     	;# 
  2060  0F22                     	;# 
  2061  0F23                     	;# 
  2062  0F24                     	;# 
  2063  0F25                     	;# 
  2064  0F26                     	;# 
  2065  0F27                     	;# 
  2066  0F38                     	;# 
  2067  0F39                     	;# 
  2068  0F3A                     	;# 
  2069  0F3B                     	;# 
  2070  0F3C                     	;# 
  2071  0F3D                     	;# 
  2072  0F3E                     	;# 
  2073  0F3F                     	;# 
  2074  0F40                     	;# 
  2075  0F41                     	;# 
  2076  0F43                     	;# 
  2077  0F44                     	;# 
  2078  0F45                     	;# 
  2079  0F46                     	;# 
  2080  0F47                     	;# 
  2081  0F48                     	;# 
  2082  0F49                     	;# 
  2083  0F4A                     	;# 
  2084  0F4B                     	;# 
  2085  0F4C                     	;# 
  2086  0F4E                     	;# 
  2087  0F4F                     	;# 
  2088  0F50                     	;# 
  2089  0F51                     	;# 
  2090  0F52                     	;# 
  2091  0F53                     	;# 
  2092  0F54                     	;# 
  2093  0F55                     	;# 
  2094  0F56                     	;# 
  2095  0F57                     	;# 
  2096  0F65                     	;# 
  2097  0F68                     	;# 
  2098  0F69                     	;# 
  2099  0F6A                     	;# 
  2100  0F6B                     	;# 
  2101  0FE4                     	;# 
  2102  0FE5                     	;# 
  2103  0FE6                     	;# 
  2104  0FE7                     	;# 
  2105  0FE8                     	;# 
  2106  0FE9                     	;# 
  2107  0FEA                     	;# 
  2108  0FEB                     	;# 
  2109  0FED                     	;# 
  2110  0FEE                     	;# 
  2111  0FEF                     	;# 
  2112  0000                     	;# 
  2113  0001                     	;# 
  2114  0002                     	;# 
  2115  0003                     	;# 
  2116  0004                     	;# 
  2117  0005                     	;# 
  2118  0006                     	;# 
  2119  0007                     	;# 
  2120  0008                     	;# 
  2121  0009                     	;# 
  2122  000A                     	;# 
  2123  000B                     	;# 
  2124  000C                     	;# 
  2125  000D                     	;# 
  2126  000E                     	;# 
  2127  0010                     	;# 
  2128  0011                     	;# 
  2129  0012                     	;# 
  2130  0013                     	;# 
  2131  0016                     	;# 
  2132  0017                     	;# 
  2133  0018                     	;# 
  2134  001C                     	;# 
  2135  001C                     	;# 
  2136  001D                     	;# 
  2137  001D                     	;# 
  2138  001E                     	;# 
  2139  001F                     	;# 
  2140  008C                     	;# 
  2141  008C                     	;# 
  2142  008D                     	;# 
  2143  008E                     	;# 
  2144  008E                     	;# 
  2145  008F                     	;# 
  2146  0090                     	;# 
  2147  0090                     	;# 
  2148  0091                     	;# 
  2149  0093                     	;# 
  2150  0094                     	;# 
  2151  0095                     	;# 
  2152  0096                     	;# 
  2153  0097                     	;# 
  2154  0098                     	;# 
  2155  0099                     	;# 
  2156  009A                     	;# 
  2157  009B                     	;# 
  2158  009C                     	;# 
  2159  009D                     	;# 
  2160  009E                     	;# 
  2161  010C                     	;# 
  2162  010D                     	;# 
  2163  010E                     	;# 
  2164  010E                     	;# 
  2165  010F                     	;# 
  2166  0110                     	;# 
  2167  0110                     	;# 
  2168  0111                     	;# 
  2169  0112                     	;# 
  2170  0112                     	;# 
  2171  0113                     	;# 
  2172  0114                     	;# 
  2173  0114                     	;# 
  2174  0115                     	;# 
  2175  0116                     	;# 
  2176  0116                     	;# 
  2177  0117                     	;# 
  2178  0119                     	;# 
  2179  0119                     	;# 
  2180  0119                     	;# 
  2181  011A                     	;# 
  2182  011A                     	;# 
  2183  011A                     	;# 
  2184  011B                     	;# 
  2185  011B                     	;# 
  2186  011B                     	;# 
  2187  011B                     	;# 
  2188  011B                     	;# 
  2189  011C                     	;# 
  2190  011C                     	;# 
  2191  011C                     	;# 
  2192  011D                     	;# 
  2193  011D                     	;# 
  2194  011D                     	;# 
  2195  011E                     	;# 
  2196  011E                     	;# 
  2197  011E                     	;# 
  2198  011F                     	;# 
  2199  011F                     	;# 
  2200  011F                     	;# 
  2201  011F                     	;# 
  2202  011F                     	;# 
  2203  018C                     	;# 
  2204  018D                     	;# 
  2205  018E                     	;# 
  2206  018F                     	;# 
  2207  0190                     	;# 
  2208  0191                     	;# 
  2209  0192                     	;# 
  2210  0196                     	;# 
  2211  0197                     	;# 
  2212  0198                     	;# 
  2213  0199                     	;# 
  2214  019A                     	;# 
  2215  019B                     	;# 
  2216  019C                     	;# 
  2217  020C                     	;# 
  2218  020D                     	;# 
  2219  020E                     	;# 
  2220  020F                     	;# 
  2221  020F                     	;# 
  2222  0210                     	;# 
  2223  0210                     	;# 
  2224  0211                     	;# 
  2225  0211                     	;# 
  2226  0212                     	;# 
  2227  0213                     	;# 
  2228  0214                     	;# 
  2229  0215                     	;# 
  2230  0215                     	;# 
  2231  0216                     	;# 
  2232  0216                     	;# 
  2233  0217                     	;# 
  2234  0217                     	;# 
  2235  0218                     	;# 
  2236  0219                     	;# 
  2237  021A                     	;# 
  2238  021B                     	;# 
  2239  021B                     	;# 
  2240  021C                     	;# 
  2241  021C                     	;# 
  2242  021D                     	;# 
  2243  021D                     	;# 
  2244  021E                     	;# 
  2245  021F                     	;# 
  2246  028C                     	;# 
  2247  028C                     	;# 
  2248  028D                     	;# 
  2249  028D                     	;# 
  2250  028E                     	;# 
  2251  028F                     	;# 
  2252  0290                     	;# 
  2253  0290                     	;# 
  2254  0291                     	;# 
  2255  0292                     	;# 
  2256  0292                     	;# 
  2257  0293                     	;# 
  2258  0293                     	;# 
  2259  0294                     	;# 
  2260  0295                     	;# 
  2261  0296                     	;# 
  2262  0296                     	;# 
  2263  0297                     	;# 
  2264  0298                     	;# 
  2265  0298                     	;# 
  2266  0299                     	;# 
  2267  0299                     	;# 
  2268  029A                     	;# 
  2269  029B                     	;# 
  2270  029C                     	;# 
  2271  029C                     	;# 
  2272  029D                     	;# 
  2273  030C                     	;# 
  2274  030C                     	;# 
  2275  030D                     	;# 
  2276  030E                     	;# 
  2277  030F                     	;# 
  2278  0310                     	;# 
  2279  0310                     	;# 
  2280  0311                     	;# 
  2281  0312                     	;# 
  2282  0313                     	;# 
  2283  0314                     	;# 
  2284  0314                     	;# 
  2285  0315                     	;# 
  2286  0316                     	;# 
  2287  0317                     	;# 
  2288  0318                     	;# 
  2289  0318                     	;# 
  2290  0319                     	;# 
  2291  031A                     	;# 
  2292  031B                     	;# 
  2293  031C                     	;# 
  2294  031C                     	;# 
  2295  031D                     	;# 
  2296  031E                     	;# 
  2297  031F                     	;# 
  2298  038C                     	;# 
  2299  038D                     	;# 
  2300  038E                     	;# 
  2301  0390                     	;# 
  2302  0391                     	;# 
  2303  0392                     	;# 
  2304  040C                     	;# 
  2305  040D                     	;# 
  2306  040E                     	;# 
  2307  040F                     	;# 
  2308  0410                     	;# 
  2309  0411                     	;# 
  2310  0416                     	;# 
  2311  0416                     	;# 
  2312  0417                     	;# 
  2313  0418                     	;# 
  2314  0418                     	;# 
  2315  0419                     	;# 
  2316  041A                     	;# 
  2317  041A                     	;# 
  2318  041B                     	;# 
  2319  041C                     	;# 
  2320  041C                     	;# 
  2321  041D                     	;# 
  2322  041E                     	;# 
  2323  041F                     	;# 
  2324  048C                     	;# 
  2325  048C                     	;# 
  2326  048D                     	;# 
  2327  048E                     	;# 
  2328  048F                     	;# 
  2329  048F                     	;# 
  2330  0490                     	;# 
  2331  0491                     	;# 
  2332  0492                     	;# 
  2333  0492                     	;# 
  2334  0493                     	;# 
  2335  0494                     	;# 
  2336  0495                     	;# 
  2337  0495                     	;# 
  2338  0496                     	;# 
  2339  0497                     	;# 
  2340  0498                     	;# 
  2341  0499                     	;# 
  2342  049A                     	;# 
  2343  049B                     	;# 
  2344  049C                     	;# 
  2345  049D                     	;# 
  2346  050C                     	;# 
  2347  050C                     	;# 
  2348  050D                     	;# 
  2349  050E                     	;# 
  2350  050F                     	;# 
  2351  050F                     	;# 
  2352  0510                     	;# 
  2353  0511                     	;# 
  2354  0512                     	;# 
  2355  0512                     	;# 
  2356  0513                     	;# 
  2357  0514                     	;# 
  2358  0515                     	;# 
  2359  0515                     	;# 
  2360  0516                     	;# 
  2361  0517                     	;# 
  2362  0518                     	;# 
  2363  0519                     	;# 
  2364  051A                     	;# 
  2365  051B                     	;# 
  2366  051C                     	;# 
  2367  051D                     	;# 
  2368  058C                     	;# 
  2369  058C                     	;# 
  2370  058D                     	;# 
  2371  058E                     	;# 
  2372  058F                     	;# 
  2373  058F                     	;# 
  2374  0590                     	;# 
  2375  0591                     	;# 
  2376  0592                     	;# 
  2377  0593                     	;# 
  2378  060C                     	;# 
  2379  060D                     	;# 
  2380  060E                     	;# 
  2381  060F                     	;# 
  2382  0610                     	;# 
  2383  0611                     	;# 
  2384  0612                     	;# 
  2385  0613                     	;# 
  2386  0614                     	;# 
  2387  0616                     	;# 
  2388  0617                     	;# 
  2389  0618                     	;# 
  2390  0619                     	;# 
  2391  061A                     	;# 
  2392  061B                     	;# 
  2393  061C                     	;# 
  2394  061D                     	;# 
  2395  061E                     	;# 
  2396  068C                     	;# 
  2397  068D                     	;# 
  2398  068E                     	;# 
  2399  068F                     	;# 
  2400  0690                     	;# 
  2401  0691                     	;# 
  2402  0692                     	;# 
  2403  0693                     	;# 
  2404  0694                     	;# 
  2405  070C                     	;# 
  2406  070D                     	;# 
  2407  070E                     	;# 
  2408  070F                     	;# 
  2409  0710                     	;# 
  2410  0711                     	;# 
  2411  0712                     	;# 
  2412  0713                     	;# 
  2413  0714                     	;# 
  2414  0716                     	;# 
  2415  0717                     	;# 
  2416  0718                     	;# 
  2417  0719                     	;# 
  2418  071A                     	;# 
  2419  071B                     	;# 
  2420  071C                     	;# 
  2421  071D                     	;# 
  2422  071E                     	;# 
  2423  0796                     	;# 
  2424  0797                     	;# 
  2425  0798                     	;# 
  2426  0799                     	;# 
  2427  079A                     	;# 
  2428  079B                     	;# 
  2429  080C                     	;# 
  2430  080D                     	;# 
  2431  080E                     	;# 
  2432  080F                     	;# 
  2433  0810                     	;# 
  2434  0811                     	;# 
  2435  0812                     	;# 
  2436  0813                     	;# 
  2437  0814                     	;# 
  2438  081A                     	;# 
  2439  081B                     	;# 
  2440  081C                     	;# 
  2441  081D                     	;# 
  2442  081E                     	;# 
  2443  081F                     	;# 
  2444  088C                     	;# 
  2445  088D                     	;# 
  2446  088E                     	;# 
  2447  088F                     	;# 
  2448  0890                     	;# 
  2449  0891                     	;# 
  2450  0892                     	;# 
  2451  0893                     	;# 
  2452  0895                     	;# 
  2453  0896                     	;# 
  2454  0897                     	;# 
  2455  0898                     	;# 
  2456  0899                     	;# 
  2457  089A                     	;# 
  2458  089B                     	;# 
  2459  090C                     	;# 
  2460  090E                     	;# 
  2461  090F                     	;# 
  2462  091F                     	;# 
  2463  091F                     	;# 
  2464  098F                     	;# 
  2465  098F                     	;# 
  2466  0990                     	;# 
  2467  0991                     	;# 
  2468  0992                     	;# 
  2469  0993                     	;# 
  2470  0994                     	;# 
  2471  0995                     	;# 
  2472  0996                     	;# 
  2473  0997                     	;# 
  2474  0E0F                     	;# 
  2475  0E10                     	;# 
  2476  0E11                     	;# 
  2477  0E12                     	;# 
  2478  0E13                     	;# 
  2479  0E14                     	;# 
  2480  0E15                     	;# 
  2481  0E16                     	;# 
  2482  0E17                     	;# 
  2483  0E18                     	;# 
  2484  0E19                     	;# 
  2485  0E1A                     	;# 
  2486  0E1B                     	;# 
  2487  0E1C                     	;# 
  2488  0E1D                     	;# 
  2489  0E1E                     	;# 
  2490  0E1F                     	;# 
  2491  0E20                     	;# 
  2492  0E21                     	;# 
  2493  0E22                     	;# 
  2494  0E23                     	;# 
  2495  0E24                     	;# 
  2496  0E25                     	;# 
  2497  0E26                     	;# 
  2498  0E27                     	;# 
  2499  0E28                     	;# 
  2500  0E29                     	;# 
  2501  0E2A                     	;# 
  2502  0E2B                     	;# 
  2503  0E2C                     	;# 
  2504  0E2D                     	;# 
  2505  0E2E                     	;# 
  2506  0E2F                     	;# 
  2507  0E30                     	;# 
  2508  0E31                     	;# 
  2509  0E32                     	;# 
  2510  0E33                     	;# 
  2511  0E34                     	;# 
  2512  0E35                     	;# 
  2513  0E36                     	;# 
  2514  0E37                     	;# 
  2515  0E8F                     	;# 
  2516  0E90                     	;# 
  2517  0E91                     	;# 
  2518  0E92                     	;# 
  2519  0E93                     	;# 
  2520  0E94                     	;# 
  2521  0E95                     	;# 
  2522  0E96                     	;# 
  2523  0E97                     	;# 
  2524  0E9C                     	;# 
  2525  0E9D                     	;# 
  2526  0E9E                     	;# 
  2527  0EA1                     	;# 
  2528  0EA2                     	;# 
  2529  0EA3                     	;# 
  2530  0EA4                     	;# 
  2531  0EA5                     	;# 
  2532  0EA9                     	;# 
  2533  0EAA                     	;# 
  2534  0EAB                     	;# 
  2535  0EAC                     	;# 
  2536  0EB1                     	;# 
  2537  0EB2                     	;# 
  2538  0EB3                     	;# 
  2539  0EB8                     	;# 
  2540  0EB9                     	;# 
  2541  0EBA                     	;# 
  2542  0EBB                     	;# 
  2543  0EBC                     	;# 
  2544  0EBD                     	;# 
  2545  0EBE                     	;# 
  2546  0EC3                     	;# 
  2547  0EC5                     	;# 
  2548  0EC6                     	;# 
  2549  0EC7                     	;# 
  2550  0EC8                     	;# 
  2551  0EC9                     	;# 
  2552  0ECA                     	;# 
  2553  0ECB                     	;# 
  2554  0ECC                     	;# 
  2555  0F10                     	;# 
  2556  0F11                     	;# 
  2557  0F12                     	;# 
  2558  0F13                     	;# 
  2559  0F14                     	;# 
  2560  0F15                     	;# 
  2561  0F16                     	;# 
  2562  0F17                     	;# 
  2563  0F18                     	;# 
  2564  0F19                     	;# 
  2565  0F1A                     	;# 
  2566  0F1B                     	;# 
  2567  0F1C                     	;# 
  2568  0F1D                     	;# 
  2569  0F1E                     	;# 
  2570  0F1F                     	;# 
  2571  0F20                     	;# 
  2572  0F21                     	;# 
  2573  0F22                     	;# 
  2574  0F23                     	;# 
  2575  0F24                     	;# 
  2576  0F25                     	;# 
  2577  0F26                     	;# 
  2578  0F27                     	;# 
  2579  0F38                     	;# 
  2580  0F39                     	;# 
  2581  0F3A                     	;# 
  2582  0F3B                     	;# 
  2583  0F3C                     	;# 
  2584  0F3D                     	;# 
  2585  0F3E                     	;# 
  2586  0F3F                     	;# 
  2587  0F40                     	;# 
  2588  0F41                     	;# 
  2589  0F43                     	;# 
  2590  0F44                     	;# 
  2591  0F45                     	;# 
  2592  0F46                     	;# 
  2593  0F47                     	;# 
  2594  0F48                     	;# 
  2595  0F49                     	;# 
  2596  0F4A                     	;# 
  2597  0F4B                     	;# 
  2598  0F4C                     	;# 
  2599  0F4E                     	;# 
  2600  0F4F                     	;# 
  2601  0F50                     	;# 
  2602  0F51                     	;# 
  2603  0F52                     	;# 
  2604  0F53                     	;# 
  2605  0F54                     	;# 
  2606  0F55                     	;# 
  2607  0F56                     	;# 
  2608  0F57                     	;# 
  2609  0F65                     	;# 
  2610  0F68                     	;# 
  2611  0F69                     	;# 
  2612  0F6A                     	;# 
  2613  0F6B                     	;# 
  2614  0FE4                     	;# 
  2615  0FE5                     	;# 
  2616  0FE6                     	;# 
  2617  0FE7                     	;# 
  2618  0FE8                     	;# 
  2619  0FE9                     	;# 
  2620  0FEA                     	;# 
  2621  0FEB                     	;# 
  2622  0FED                     	;# 
  2623  0FEE                     	;# 
  2624  0FEF                     	;# 
  2625  0000                     	;# 
  2626  0001                     	;# 
  2627  0002                     	;# 
  2628  0003                     	;# 
  2629  0004                     	;# 
  2630  0005                     	;# 
  2631  0006                     	;# 
  2632  0007                     	;# 
  2633  0008                     	;# 
  2634  0009                     	;# 
  2635  000A                     	;# 
  2636  000B                     	;# 
  2637  000C                     	;# 
  2638  000D                     	;# 
  2639  000E                     	;# 
  2640  0010                     	;# 
  2641  0011                     	;# 
  2642  0012                     	;# 
  2643  0013                     	;# 
  2644  0016                     	;# 
  2645  0017                     	;# 
  2646  0018                     	;# 
  2647  001C                     	;# 
  2648  001C                     	;# 
  2649  001D                     	;# 
  2650  001D                     	;# 
  2651  001E                     	;# 
  2652  001F                     	;# 
  2653  008C                     	;# 
  2654  008C                     	;# 
  2655  008D                     	;# 
  2656  008E                     	;# 
  2657  008E                     	;# 
  2658  008F                     	;# 
  2659  0090                     	;# 
  2660  0090                     	;# 
  2661  0091                     	;# 
  2662  0093                     	;# 
  2663  0094                     	;# 
  2664  0095                     	;# 
  2665  0096                     	;# 
  2666  0097                     	;# 
  2667  0098                     	;# 
  2668  0099                     	;# 
  2669  009A                     	;# 
  2670  009B                     	;# 
  2671  009C                     	;# 
  2672  009D                     	;# 
  2673  009E                     	;# 
  2674  010C                     	;# 
  2675  010D                     	;# 
  2676  010E                     	;# 
  2677  010E                     	;# 
  2678  010F                     	;# 
  2679  0110                     	;# 
  2680  0110                     	;# 
  2681  0111                     	;# 
  2682  0112                     	;# 
  2683  0112                     	;# 
  2684  0113                     	;# 
  2685  0114                     	;# 
  2686  0114                     	;# 
  2687  0115                     	;# 
  2688  0116                     	;# 
  2689  0116                     	;# 
  2690  0117                     	;# 
  2691  0119                     	;# 
  2692  0119                     	;# 
  2693  0119                     	;# 
  2694  011A                     	;# 
  2695  011A                     	;# 
  2696  011A                     	;# 
  2697  011B                     	;# 
  2698  011B                     	;# 
  2699  011B                     	;# 
  2700  011B                     	;# 
  2701  011B                     	;# 
  2702  011C                     	;# 
  2703  011C                     	;# 
  2704  011C                     	;# 
  2705  011D                     	;# 
  2706  011D                     	;# 
  2707  011D                     	;# 
  2708  011E                     	;# 
  2709  011E                     	;# 
  2710  011E                     	;# 
  2711  011F                     	;# 
  2712  011F                     	;# 
  2713  011F                     	;# 
  2714  011F                     	;# 
  2715  011F                     	;# 
  2716  018C                     	;# 
  2717  018D                     	;# 
  2718  018E                     	;# 
  2719  018F                     	;# 
  2720  0190                     	;# 
  2721  0191                     	;# 
  2722  0192                     	;# 
  2723  0196                     	;# 
  2724  0197                     	;# 
  2725  0198                     	;# 
  2726  0199                     	;# 
  2727  019A                     	;# 
  2728  019B                     	;# 
  2729  019C                     	;# 
  2730  020C                     	;# 
  2731  020D                     	;# 
  2732  020E                     	;# 
  2733  020F                     	;# 
  2734  020F                     	;# 
  2735  0210                     	;# 
  2736  0210                     	;# 
  2737  0211                     	;# 
  2738  0211                     	;# 
  2739  0212                     	;# 
  2740  0213                     	;# 
  2741  0214                     	;# 
  2742  0215                     	;# 
  2743  0215                     	;# 
  2744  0216                     	;# 
  2745  0216                     	;# 
  2746  0217                     	;# 
  2747  0217                     	;# 
  2748  0218                     	;# 
  2749  0219                     	;# 
  2750  021A                     	;# 
  2751  021B                     	;# 
  2752  021B                     	;# 
  2753  021C                     	;# 
  2754  021C                     	;# 
  2755  021D                     	;# 
  2756  021D                     	;# 
  2757  021E                     	;# 
  2758  021F                     	;# 
  2759  028C                     	;# 
  2760  028C                     	;# 
  2761  028D                     	;# 
  2762  028D                     	;# 
  2763  028E                     	;# 
  2764  028F                     	;# 
  2765  0290                     	;# 
  2766  0290                     	;# 
  2767  0291                     	;# 
  2768  0292                     	;# 
  2769  0292                     	;# 
  2770  0293                     	;# 
  2771  0293                     	;# 
  2772  0294                     	;# 
  2773  0295                     	;# 
  2774  0296                     	;# 
  2775  0296                     	;# 
  2776  0297                     	;# 
  2777  0298                     	;# 
  2778  0298                     	;# 
  2779  0299                     	;# 
  2780  0299                     	;# 
  2781  029A                     	;# 
  2782  029B                     	;# 
  2783  029C                     	;# 
  2784  029C                     	;# 
  2785  029D                     	;# 
  2786  030C                     	;# 
  2787  030C                     	;# 
  2788  030D                     	;# 
  2789  030E                     	;# 
  2790  030F                     	;# 
  2791  0310                     	;# 
  2792  0310                     	;# 
  2793  0311                     	;# 
  2794  0312                     	;# 
  2795  0313                     	;# 
  2796  0314                     	;# 
  2797  0314                     	;# 
  2798  0315                     	;# 
  2799  0316                     	;# 
  2800  0317                     	;# 
  2801  0318                     	;# 
  2802  0318                     	;# 
  2803  0319                     	;# 
  2804  031A                     	;# 
  2805  031B                     	;# 
  2806  031C                     	;# 
  2807  031C                     	;# 
  2808  031D                     	;# 
  2809  031E                     	;# 
  2810  031F                     	;# 
  2811  038C                     	;# 
  2812  038D                     	;# 
  2813  038E                     	;# 
  2814  0390                     	;# 
  2815  0391                     	;# 
  2816  0392                     	;# 
  2817  040C                     	;# 
  2818  040D                     	;# 
  2819  040E                     	;# 
  2820  040F                     	;# 
  2821  0410                     	;# 
  2822  0411                     	;# 
  2823  0416                     	;# 
  2824  0416                     	;# 
  2825  0417                     	;# 
  2826  0418                     	;# 
  2827  0418                     	;# 
  2828  0419                     	;# 
  2829  041A                     	;# 
  2830  041A                     	;# 
  2831  041B                     	;# 
  2832  041C                     	;# 
  2833  041C                     	;# 
  2834  041D                     	;# 
  2835  041E                     	;# 
  2836  041F                     	;# 
  2837  048C                     	;# 
  2838  048C                     	;# 
  2839  048D                     	;# 
  2840  048E                     	;# 
  2841  048F                     	;# 
  2842  048F                     	;# 
  2843  0490                     	;# 
  2844  0491                     	;# 
  2845  0492                     	;# 
  2846  0492                     	;# 
  2847  0493                     	;# 
  2848  0494                     	;# 
  2849  0495                     	;# 
  2850  0495                     	;# 
  2851  0496                     	;# 
  2852  0497                     	;# 
  2853  0498                     	;# 
  2854  0499                     	;# 
  2855  049A                     	;# 
  2856  049B                     	;# 
  2857  049C                     	;# 
  2858  049D                     	;# 
  2859  050C                     	;# 
  2860  050C                     	;# 
  2861  050D                     	;# 
  2862  050E                     	;# 
  2863  050F                     	;# 
  2864  050F                     	;# 
  2865  0510                     	;# 
  2866  0511                     	;# 
  2867  0512                     	;# 
  2868  0512                     	;# 
  2869  0513                     	;# 
  2870  0514                     	;# 
  2871  0515                     	;# 
  2872  0515                     	;# 
  2873  0516                     	;# 
  2874  0517                     	;# 
  2875  0518                     	;# 
  2876  0519                     	;# 
  2877  051A                     	;# 
  2878  051B                     	;# 
  2879  051C                     	;# 
  2880  051D                     	;# 
  2881  058C                     	;# 
  2882  058C                     	;# 
  2883  058D                     	;# 
  2884  058E                     	;# 
  2885  058F                     	;# 
  2886  058F                     	;# 
  2887  0590                     	;# 
  2888  0591                     	;# 
  2889  0592                     	;# 
  2890  0593                     	;# 
  2891  060C                     	;# 
  2892  060D                     	;# 
  2893  060E                     	;# 
  2894  060F                     	;# 
  2895  0610                     	;# 
  2896  0611                     	;# 
  2897  0612                     	;# 
  2898  0613                     	;# 
  2899  0614                     	;# 
  2900  0616                     	;# 
  2901  0617                     	;# 
  2902  0618                     	;# 
  2903  0619                     	;# 
  2904  061A                     	;# 
  2905  061B                     	;# 
  2906  061C                     	;# 
  2907  061D                     	;# 
  2908  061E                     	;# 
  2909  068C                     	;# 
  2910  068D                     	;# 
  2911  068E                     	;# 
  2912  068F                     	;# 
  2913  0690                     	;# 
  2914  0691                     	;# 
  2915  0692                     	;# 
  2916  0693                     	;# 
  2917  0694                     	;# 
  2918  070C                     	;# 
  2919  070D                     	;# 
  2920  070E                     	;# 
  2921  070F                     	;# 
  2922  0710                     	;# 
  2923  0711                     	;# 
  2924  0712                     	;# 
  2925  0713                     	;# 
  2926  0714                     	;# 
  2927  0716                     	;# 
  2928  0717                     	;# 
  2929  0718                     	;# 
  2930  0719                     	;# 
  2931  071A                     	;# 
  2932  071B                     	;# 
  2933  071C                     	;# 
  2934  071D                     	;# 
  2935  071E                     	;# 
  2936  0796                     	;# 
  2937  0797                     	;# 
  2938  0798                     	;# 
  2939  0799                     	;# 
  2940  079A                     	;# 
  2941  079B                     	;# 
  2942  080C                     	;# 
  2943  080D                     	;# 
  2944  080E                     	;# 
  2945  080F                     	;# 
  2946  0810                     	;# 
  2947  0811                     	;# 
  2948  0812                     	;# 
  2949  0813                     	;# 
  2950  0814                     	;# 
  2951  081A                     	;# 
  2952  081B                     	;# 
  2953  081C                     	;# 
  2954  081D                     	;# 
  2955  081E                     	;# 
  2956  081F                     	;# 
  2957  088C                     	;# 
  2958  088D                     	;# 
  2959  088E                     	;# 
  2960  088F                     	;# 
  2961  0890                     	;# 
  2962  0891                     	;# 
  2963  0892                     	;# 
  2964  0893                     	;# 
  2965  0895                     	;# 
  2966  0896                     	;# 
  2967  0897                     	;# 
  2968  0898                     	;# 
  2969  0899                     	;# 
  2970  089A                     	;# 
  2971  089B                     	;# 
  2972  090C                     	;# 
  2973  090E                     	;# 
  2974  090F                     	;# 
  2975  091F                     	;# 
  2976  091F                     	;# 
  2977  098F                     	;# 
  2978  098F                     	;# 
  2979  0990                     	;# 
  2980  0991                     	;# 
  2981  0992                     	;# 
  2982  0993                     	;# 
  2983  0994                     	;# 
  2984  0995                     	;# 
  2985  0996                     	;# 
  2986  0997                     	;# 
  2987  0E0F                     	;# 
  2988  0E10                     	;# 
  2989  0E11                     	;# 
  2990  0E12                     	;# 
  2991  0E13                     	;# 
  2992  0E14                     	;# 
  2993  0E15                     	;# 
  2994  0E16                     	;# 
  2995  0E17                     	;# 
  2996  0E18                     	;# 
  2997  0E19                     	;# 
  2998  0E1A                     	;# 
  2999  0E1B                     	;# 
  3000  0E1C                     	;# 
  3001  0E1D                     	;# 
  3002  0E1E                     	;# 
  3003  0E1F                     	;# 
  3004  0E20                     	;# 
  3005  0E21                     	;# 
  3006  0E22                     	;# 
  3007  0E23                     	;# 
  3008  0E24                     	;# 
  3009  0E25                     	;# 
  3010  0E26                     	;# 
  3011  0E27                     	;# 
  3012  0E28                     	;# 
  3013  0E29                     	;# 
  3014  0E2A                     	;# 
  3015  0E2B                     	;# 
  3016  0E2C                     	;# 
  3017  0E2D                     	;# 
  3018  0E2E                     	;# 
  3019  0E2F                     	;# 
  3020  0E30                     	;# 
  3021  0E31                     	;# 
  3022  0E32                     	;# 
  3023  0E33                     	;# 
  3024  0E34                     	;# 
  3025  0E35                     	;# 
  3026  0E36                     	;# 
  3027  0E37                     	;# 
  3028  0E8F                     	;# 
  3029  0E90                     	;# 
  3030  0E91                     	;# 
  3031  0E92                     	;# 
  3032  0E93                     	;# 
  3033  0E94                     	;# 
  3034  0E95                     	;# 
  3035  0E96                     	;# 
  3036  0E97                     	;# 
  3037  0E9C                     	;# 
  3038  0E9D                     	;# 
  3039  0E9E                     	;# 
  3040  0EA1                     	;# 
  3041  0EA2                     	;# 
  3042  0EA3                     	;# 
  3043  0EA4                     	;# 
  3044  0EA5                     	;# 
  3045  0EA9                     	;# 
  3046  0EAA                     	;# 
  3047  0EAB                     	;# 
  3048  0EAC                     	;# 
  3049  0EB1                     	;# 
  3050  0EB2                     	;# 
  3051  0EB3                     	;# 
  3052  0EB8                     	;# 
  3053  0EB9                     	;# 
  3054  0EBA                     	;# 
  3055  0EBB                     	;# 
  3056  0EBC                     	;# 
  3057  0EBD                     	;# 
  3058  0EBE                     	;# 
  3059  0EC3                     	;# 
  3060  0EC5                     	;# 
  3061  0EC6                     	;# 
  3062  0EC7                     	;# 
  3063  0EC8                     	;# 
  3064  0EC9                     	;# 
  3065  0ECA                     	;# 
  3066  0ECB                     	;# 
  3067  0ECC                     	;# 
  3068  0F10                     	;# 
  3069  0F11                     	;# 
  3070  0F12                     	;# 
  3071  0F13                     	;# 
  3072  0F14                     	;# 
  3073  0F15                     	;# 
  3074  0F16                     	;# 
  3075  0F17                     	;# 
  3076  0F18                     	;# 
  3077  0F19                     	;# 
  3078  0F1A                     	;# 
  3079  0F1B                     	;# 
  3080  0F1C                     	;# 
  3081  0F1D                     	;# 
  3082  0F1E                     	;# 
  3083  0F1F                     	;# 
  3084  0F20                     	;# 
  3085  0F21                     	;# 
  3086  0F22                     	;# 
  3087  0F23                     	;# 
  3088  0F24                     	;# 
  3089  0F25                     	;# 
  3090  0F26                     	;# 
  3091  0F27                     	;# 
  3092  0F38                     	;# 
  3093  0F39                     	;# 
  3094  0F3A                     	;# 
  3095  0F3B                     	;# 
  3096  0F3C                     	;# 
  3097  0F3D                     	;# 
  3098  0F3E                     	;# 
  3099  0F3F                     	;# 
  3100  0F40                     	;# 
  3101  0F41                     	;# 
  3102  0F43                     	;# 
  3103  0F44                     	;# 
  3104  0F45                     	;# 
  3105  0F46                     	;# 
  3106  0F47                     	;# 
  3107  0F48                     	;# 
  3108  0F49                     	;# 
  3109  0F4A                     	;# 
  3110  0F4B                     	;# 
  3111  0F4C                     	;# 
  3112  0F4E                     	;# 
  3113  0F4F                     	;# 
  3114  0F50                     	;# 
  3115  0F51                     	;# 
  3116  0F52                     	;# 
  3117  0F53                     	;# 
  3118  0F54                     	;# 
  3119  0F55                     	;# 
  3120  0F56                     	;# 
  3121  0F57                     	;# 
  3122  0F65                     	;# 
  3123  0F68                     	;# 
  3124  0F69                     	;# 
  3125  0F6A                     	;# 
  3126  0F6B                     	;# 
  3127  0FE4                     	;# 
  3128  0FE5                     	;# 
  3129  0FE6                     	;# 
  3130  0FE7                     	;# 
  3131  0FE8                     	;# 
  3132  0FE9                     	;# 
  3133  0FEA                     	;# 
  3134  0FEB                     	;# 
  3135  0FED                     	;# 
  3136  0FEE                     	;# 
  3137  0FEF                     	;# 
  3138  0000                     	;# 
  3139  0001                     	;# 
  3140  0002                     	;# 
  3141  0003                     	;# 
  3142  0004                     	;# 
  3143  0005                     	;# 
  3144  0006                     	;# 
  3145  0007                     	;# 
  3146  0008                     	;# 
  3147  0009                     	;# 
  3148  000A                     	;# 
  3149  000B                     	;# 
  3150  000C                     	;# 
  3151  000D                     	;# 
  3152  000E                     	;# 
  3153  0010                     	;# 
  3154  0011                     	;# 
  3155  0012                     	;# 
  3156  0013                     	;# 
  3157  0016                     	;# 
  3158  0017                     	;# 
  3159  0018                     	;# 
  3160  001C                     	;# 
  3161  001C                     	;# 
  3162  001D                     	;# 
  3163  001D                     	;# 
  3164  001E                     	;# 
  3165  001F                     	;# 
  3166  008C                     	;# 
  3167  008C                     	;# 
  3168  008D                     	;# 
  3169  008E                     	;# 
  3170  008E                     	;# 
  3171  008F                     	;# 
  3172  0090                     	;# 
  3173  0090                     	;# 
  3174  0091                     	;# 
  3175  0093                     	;# 
  3176  0094                     	;# 
  3177  0095                     	;# 
  3178  0096                     	;# 
  3179  0097                     	;# 
  3180  0098                     	;# 
  3181  0099                     	;# 
  3182  009A                     	;# 
  3183  009B                     	;# 
  3184  009C                     	;# 
  3185  009D                     	;# 
  3186  009E                     	;# 
  3187  010C                     	;# 
  3188  010D                     	;# 
  3189  010E                     	;# 
  3190  010E                     	;# 
  3191  010F                     	;# 
  3192  0110                     	;# 
  3193  0110                     	;# 
  3194  0111                     	;# 
  3195  0112                     	;# 
  3196  0112                     	;# 
  3197  0113                     	;# 
  3198  0114                     	;# 
  3199  0114                     	;# 
  3200  0115                     	;# 
  3201  0116                     	;# 
  3202  0116                     	;# 
  3203  0117                     	;# 
  3204  0119                     	;# 
  3205  0119                     	;# 
  3206  0119                     	;# 
  3207  011A                     	;# 
  3208  011A                     	;# 
  3209  011A                     	;# 
  3210  011B                     	;# 
  3211  011B                     	;# 
  3212  011B                     	;# 
  3213  011B                     	;# 
  3214  011B                     	;# 
  3215  011C                     	;# 
  3216  011C                     	;# 
  3217  011C                     	;# 
  3218  011D                     	;# 
  3219  011D                     	;# 
  3220  011D                     	;# 
  3221  011E                     	;# 
  3222  011E                     	;# 
  3223  011E                     	;# 
  3224  011F                     	;# 
  3225  011F                     	;# 
  3226  011F                     	;# 
  3227  011F                     	;# 
  3228  011F                     	;# 
  3229  018C                     	;# 
  3230  018D                     	;# 
  3231  018E                     	;# 
  3232  018F                     	;# 
  3233  0190                     	;# 
  3234  0191                     	;# 
  3235  0192                     	;# 
  3236  0196                     	;# 
  3237  0197                     	;# 
  3238  0198                     	;# 
  3239  0199                     	;# 
  3240  019A                     	;# 
  3241  019B                     	;# 
  3242  019C                     	;# 
  3243  020C                     	;# 
  3244  020D                     	;# 
  3245  020E                     	;# 
  3246  020F                     	;# 
  3247  020F                     	;# 
  3248  0210                     	;# 
  3249  0210                     	;# 
  3250  0211                     	;# 
  3251  0211                     	;# 
  3252  0212                     	;# 
  3253  0213                     	;# 
  3254  0214                     	;# 
  3255  0215                     	;# 
  3256  0215                     	;# 
  3257  0216                     	;# 
  3258  0216                     	;# 
  3259  0217                     	;# 
  3260  0217                     	;# 
  3261  0218                     	;# 
  3262  0219                     	;# 
  3263  021A                     	;# 
  3264  021B                     	;# 
  3265  021B                     	;# 
  3266  021C                     	;# 
  3267  021C                     	;# 
  3268  021D                     	;# 
  3269  021D                     	;# 
  3270  021E                     	;# 
  3271  021F                     	;# 
  3272  028C                     	;# 
  3273  028C                     	;# 
  3274  028D                     	;# 
  3275  028D                     	;# 
  3276  028E                     	;# 
  3277  028F                     	;# 
  3278  0290                     	;# 
  3279  0290                     	;# 
  3280  0291                     	;# 
  3281  0292                     	;# 
  3282  0292                     	;# 
  3283  0293                     	;# 
  3284  0293                     	;# 
  3285  0294                     	;# 
  3286  0295                     	;# 
  3287  0296                     	;# 
  3288  0296                     	;# 
  3289  0297                     	;# 
  3290  0298                     	;# 
  3291  0298                     	;# 
  3292  0299                     	;# 
  3293  0299                     	;# 
  3294  029A                     	;# 
  3295  029B                     	;# 
  3296  029C                     	;# 
  3297  029C                     	;# 
  3298  029D                     	;# 
  3299  030C                     	;# 
  3300  030C                     	;# 
  3301  030D                     	;# 
  3302  030E                     	;# 
  3303  030F                     	;# 
  3304  0310                     	;# 
  3305  0310                     	;# 
  3306  0311                     	;# 
  3307  0312                     	;# 
  3308  0313                     	;# 
  3309  0314                     	;# 
  3310  0314                     	;# 
  3311  0315                     	;# 
  3312  0316                     	;# 
  3313  0317                     	;# 
  3314  0318                     	;# 
  3315  0318                     	;# 
  3316  0319                     	;# 
  3317  031A                     	;# 
  3318  031B                     	;# 
  3319  031C                     	;# 
  3320  031C                     	;# 
  3321  031D                     	;# 
  3322  031E                     	;# 
  3323  031F                     	;# 
  3324  038C                     	;# 
  3325  038D                     	;# 
  3326  038E                     	;# 
  3327  0390                     	;# 
  3328  0391                     	;# 
  3329  0392                     	;# 
  3330  040C                     	;# 
  3331  040D                     	;# 
  3332  040E                     	;# 
  3333  040F                     	;# 
  3334  0410                     	;# 
  3335  0411                     	;# 
  3336  0416                     	;# 
  3337  0416                     	;# 
  3338  0417                     	;# 
  3339  0418                     	;# 
  3340  0418                     	;# 
  3341  0419                     	;# 
  3342  041A                     	;# 
  3343  041A                     	;# 
  3344  041B                     	;# 
  3345  041C                     	;# 
  3346  041C                     	;# 
  3347  041D                     	;# 
  3348  041E                     	;# 
  3349  041F                     	;# 
  3350  048C                     	;# 
  3351  048C                     	;# 
  3352  048D                     	;# 
  3353  048E                     	;# 
  3354  048F                     	;# 
  3355  048F                     	;# 
  3356  0490                     	;# 
  3357  0491                     	;# 
  3358  0492                     	;# 
  3359  0492                     	;# 
  3360  0493                     	;# 
  3361  0494                     	;# 
  3362  0495                     	;# 
  3363  0495                     	;# 
  3364  0496                     	;# 
  3365  0497                     	;# 
  3366  0498                     	;# 
  3367  0499                     	;# 
  3368  049A                     	;# 
  3369  049B                     	;# 
  3370  049C                     	;# 
  3371  049D                     	;# 
  3372  050C                     	;# 
  3373  050C                     	;# 
  3374  050D                     	;# 
  3375  050E                     	;# 
  3376  050F                     	;# 
  3377  050F                     	;# 
  3378  0510                     	;# 
  3379  0511                     	;# 
  3380  0512                     	;# 
  3381  0512                     	;# 
  3382  0513                     	;# 
  3383  0514                     	;# 
  3384  0515                     	;# 
  3385  0515                     	;# 
  3386  0516                     	;# 
  3387  0517                     	;# 
  3388  0518                     	;# 
  3389  0519                     	;# 
  3390  051A                     	;# 
  3391  051B                     	;# 
  3392  051C                     	;# 
  3393  051D                     	;# 
  3394  058C                     	;# 
  3395  058C                     	;# 
  3396  058D                     	;# 
  3397  058E                     	;# 
  3398  058F                     	;# 
  3399  058F                     	;# 
  3400  0590                     	;# 
  3401  0591                     	;# 
  3402  0592                     	;# 
  3403  0593                     	;# 
  3404  060C                     	;# 
  3405  060D                     	;# 
  3406  060E                     	;# 
  3407  060F                     	;# 
  3408  0610                     	;# 
  3409  0611                     	;# 
  3410  0612                     	;# 
  3411  0613                     	;# 
  3412  0614                     	;# 
  3413  0616                     	;# 
  3414  0617                     	;# 
  3415  0618                     	;# 
  3416  0619                     	;# 
  3417  061A                     	;# 
  3418  061B                     	;# 
  3419  061C                     	;# 
  3420  061D                     	;# 
  3421  061E                     	;# 
  3422  068C                     	;# 
  3423  068D                     	;# 
  3424  068E                     	;# 
  3425  068F                     	;# 
  3426  0690                     	;# 
  3427  0691                     	;# 
  3428  0692                     	;# 
  3429  0693                     	;# 
  3430  0694                     	;# 
  3431  070C                     	;# 
  3432  070D                     	;# 
  3433  070E                     	;# 
  3434  070F                     	;# 
  3435  0710                     	;# 
  3436  0711                     	;# 
  3437  0712                     	;# 
  3438  0713                     	;# 
  3439  0714                     	;# 
  3440  0716                     	;# 
  3441  0717                     	;# 
  3442  0718                     	;# 
  3443  0719                     	;# 
  3444  071A                     	;# 
  3445  071B                     	;# 
  3446  071C                     	;# 
  3447  071D                     	;# 
  3448  071E                     	;# 
  3449  0796                     	;# 
  3450  0797                     	;# 
  3451  0798                     	;# 
  3452  0799                     	;# 
  3453  079A                     	;# 
  3454  079B                     	;# 
  3455  080C                     	;# 
  3456  080D                     	;# 
  3457  080E                     	;# 
  3458  080F                     	;# 
  3459  0810                     	;# 
  3460  0811                     	;# 
  3461  0812                     	;# 
  3462  0813                     	;# 
  3463  0814                     	;# 
  3464  081A                     	;# 
  3465  081B                     	;# 
  3466  081C                     	;# 
  3467  081D                     	;# 
  3468  081E                     	;# 
  3469  081F                     	;# 
  3470  088C                     	;# 
  3471  088D                     	;# 
  3472  088E                     	;# 
  3473  088F                     	;# 
  3474  0890                     	;# 
  3475  0891                     	;# 
  3476  0892                     	;# 
  3477  0893                     	;# 
  3478  0895                     	;# 
  3479  0896                     	;# 
  3480  0897                     	;# 
  3481  0898                     	;# 
  3482  0899                     	;# 
  3483  089A                     	;# 
  3484  089B                     	;# 
  3485  090C                     	;# 
  3486  090E                     	;# 
  3487  090F                     	;# 
  3488  091F                     	;# 
  3489  091F                     	;# 
  3490  098F                     	;# 
  3491  098F                     	;# 
  3492  0990                     	;# 
  3493  0991                     	;# 
  3494  0992                     	;# 
  3495  0993                     	;# 
  3496  0994                     	;# 
  3497  0995                     	;# 
  3498  0996                     	;# 
  3499  0997                     	;# 
  3500  0E0F                     	;# 
  3501  0E10                     	;# 
  3502  0E11                     	;# 
  3503  0E12                     	;# 
  3504  0E13                     	;# 
  3505  0E14                     	;# 
  3506  0E15                     	;# 
  3507  0E16                     	;# 
  3508  0E17                     	;# 
  3509  0E18                     	;# 
  3510  0E19                     	;# 
  3511  0E1A                     	;# 
  3512  0E1B                     	;# 
  3513  0E1C                     	;# 
  3514  0E1D                     	;# 
  3515  0E1E                     	;# 
  3516  0E1F                     	;# 
  3517  0E20                     	;# 
  3518  0E21                     	;# 
  3519  0E22                     	;# 
  3520  0E23                     	;# 
  3521  0E24                     	;# 
  3522  0E25                     	;# 
  3523  0E26                     	;# 
  3524  0E27                     	;# 
  3525  0E28                     	;# 
  3526  0E29                     	;# 
  3527  0E2A                     	;# 
  3528  0E2B                     	;# 
  3529  0E2C                     	;# 
  3530  0E2D                     	;# 
  3531  0E2E                     	;# 
  3532  0E2F                     	;# 
  3533  0E30                     	;# 
  3534  0E31                     	;# 
  3535  0E32                     	;# 
  3536  0E33                     	;# 
  3537  0E34                     	;# 
  3538  0E35                     	;# 
  3539  0E36                     	;# 
  3540  0E37                     	;# 
  3541  0E8F                     	;# 
  3542  0E90                     	;# 
  3543  0E91                     	;# 
  3544  0E92                     	;# 
  3545  0E93                     	;# 
  3546  0E94                     	;# 
  3547  0E95                     	;# 
  3548  0E96                     	;# 
  3549  0E97                     	;# 
  3550  0E9C                     	;# 
  3551  0E9D                     	;# 
  3552  0E9E                     	;# 
  3553  0EA1                     	;# 
  3554  0EA2                     	;# 
  3555  0EA3                     	;# 
  3556  0EA4                     	;# 
  3557  0EA5                     	;# 
  3558  0EA9                     	;# 
  3559  0EAA                     	;# 
  3560  0EAB                     	;# 
  3561  0EAC                     	;# 
  3562  0EB1                     	;# 
  3563  0EB2                     	;# 
  3564  0EB3                     	;# 
  3565  0EB8                     	;# 
  3566  0EB9                     	;# 
  3567  0EBA                     	;# 
  3568  0EBB                     	;# 
  3569  0EBC                     	;# 
  3570  0EBD                     	;# 
  3571  0EBE                     	;# 
  3572  0EC3                     	;# 
  3573  0EC5                     	;# 
  3574  0EC6                     	;# 
  3575  0EC7                     	;# 
  3576  0EC8                     	;# 
  3577  0EC9                     	;# 
  3578  0ECA                     	;# 
  3579  0ECB                     	;# 
  3580  0ECC                     	;# 
  3581  0F10                     	;# 
  3582  0F11                     	;# 
  3583  0F12                     	;# 
  3584  0F13                     	;# 
  3585  0F14                     	;# 
  3586  0F15                     	;# 
  3587  0F16                     	;# 
  3588  0F17                     	;# 
  3589  0F18                     	;# 
  3590  0F19                     	;# 
  3591  0F1A                     	;# 
  3592  0F1B                     	;# 
  3593  0F1C                     	;# 
  3594  0F1D                     	;# 
  3595  0F1E                     	;# 
  3596  0F1F                     	;# 
  3597  0F20                     	;# 
  3598  0F21                     	;# 
  3599  0F22                     	;# 
  3600  0F23                     	;# 
  3601  0F24                     	;# 
  3602  0F25                     	;# 
  3603  0F26                     	;# 
  3604  0F27                     	;# 
  3605  0F38                     	;# 
  3606  0F39                     	;# 
  3607  0F3A                     	;# 
  3608  0F3B                     	;# 
  3609  0F3C                     	;# 
  3610  0F3D                     	;# 
  3611  0F3E                     	;# 
  3612  0F3F                     	;# 
  3613  0F40                     	;# 
  3614  0F41                     	;# 
  3615  0F43                     	;# 
  3616  0F44                     	;# 
  3617  0F45                     	;# 
  3618  0F46                     	;# 
  3619  0F47                     	;# 
  3620  0F48                     	;# 
  3621  0F49                     	;# 
  3622  0F4A                     	;# 
  3623  0F4B                     	;# 
  3624  0F4C                     	;# 
  3625  0F4E                     	;# 
  3626  0F4F                     	;# 
  3627  0F50                     	;# 
  3628  0F51                     	;# 
  3629  0F52                     	;# 
  3630  0F53                     	;# 
  3631  0F54                     	;# 
  3632  0F55                     	;# 
  3633  0F56                     	;# 
  3634  0F57                     	;# 
  3635  0F65                     	;# 
  3636  0F68                     	;# 
  3637  0F69                     	;# 
  3638  0F6A                     	;# 
  3639  0F6B                     	;# 
  3640  0FE4                     	;# 
  3641  0FE5                     	;# 
  3642  0FE6                     	;# 
  3643  0FE7                     	;# 
  3644  0FE8                     	;# 
  3645  0FE9                     	;# 
  3646  0FEA                     	;# 
  3647  0FEB                     	;# 
  3648  0FED                     	;# 
  3649  0FEE                     	;# 
  3650  0FEF                     	;# 
  3651  0000                     	;# 
  3652  0001                     	;# 
  3653  0002                     	;# 
  3654  0003                     	;# 
  3655  0004                     	;# 
  3656  0005                     	;# 
  3657  0006                     	;# 
  3658  0007                     	;# 
  3659  0008                     	;# 
  3660  0009                     	;# 
  3661  000A                     	;# 
  3662  000B                     	;# 
  3663  000C                     	;# 
  3664  000D                     	;# 
  3665  000E                     	;# 
  3666  0010                     	;# 
  3667  0011                     	;# 
  3668  0012                     	;# 
  3669  0013                     	;# 
  3670  0016                     	;# 
  3671  0017                     	;# 
  3672  0018                     	;# 
  3673  001C                     	;# 
  3674  001C                     	;# 
  3675  001D                     	;# 
  3676  001D                     	;# 
  3677  001E                     	;# 
  3678  001F                     	;# 
  3679  008C                     	;# 
  3680  008C                     	;# 
  3681  008D                     	;# 
  3682  008E                     	;# 
  3683  008E                     	;# 
  3684  008F                     	;# 
  3685  0090                     	;# 
  3686  0090                     	;# 
  3687  0091                     	;# 
  3688  0093                     	;# 
  3689  0094                     	;# 
  3690  0095                     	;# 
  3691  0096                     	;# 
  3692  0097                     	;# 
  3693  0098                     	;# 
  3694  0099                     	;# 
  3695  009A                     	;# 
  3696  009B                     	;# 
  3697  009C                     	;# 
  3698  009D                     	;# 
  3699  009E                     	;# 
  3700  010C                     	;# 
  3701  010D                     	;# 
  3702  010E                     	;# 
  3703  010E                     	;# 
  3704  010F                     	;# 
  3705  0110                     	;# 
  3706  0110                     	;# 
  3707  0111                     	;# 
  3708  0112                     	;# 
  3709  0112                     	;# 
  3710  0113                     	;# 
  3711  0114                     	;# 
  3712  0114                     	;# 
  3713  0115                     	;# 
  3714  0116                     	;# 
  3715  0116                     	;# 
  3716  0117                     	;# 
  3717  0119                     	;# 
  3718  0119                     	;# 
  3719  0119                     	;# 
  3720  011A                     	;# 
  3721  011A                     	;# 
  3722  011A                     	;# 
  3723  011B                     	;# 
  3724  011B                     	;# 
  3725  011B                     	;# 
  3726  011B                     	;# 
  3727  011B                     	;# 
  3728  011C                     	;# 
  3729  011C                     	;# 
  3730  011C                     	;# 
  3731  011D                     	;# 
  3732  011D                     	;# 
  3733  011D                     	;# 
  3734  011E                     	;# 
  3735  011E                     	;# 
  3736  011E                     	;# 
  3737  011F                     	;# 
  3738  011F                     	;# 
  3739  011F                     	;# 
  3740  011F                     	;# 
  3741  011F                     	;# 
  3742  018C                     	;# 
  3743  018D                     	;# 
  3744  018E                     	;# 
  3745  018F                     	;# 
  3746  0190                     	;# 
  3747  0191                     	;# 
  3748  0192                     	;# 
  3749  0196                     	;# 
  3750  0197                     	;# 
  3751  0198                     	;# 
  3752  0199                     	;# 
  3753  019A                     	;# 
  3754  019B                     	;# 
  3755  019C                     	;# 
  3756  020C                     	;# 
  3757  020D                     	;# 
  3758  020E                     	;# 
  3759  020F                     	;# 
  3760  020F                     	;# 
  3761  0210                     	;# 
  3762  0210                     	;# 
  3763  0211                     	;# 
  3764  0211                     	;# 
  3765  0212                     	;# 
  3766  0213                     	;# 
  3767  0214                     	;# 
  3768  0215                     	;# 
  3769  0215                     	;# 
  3770  0216                     	;# 
  3771  0216                     	;# 
  3772  0217                     	;# 
  3773  0217                     	;# 
  3774  0218                     	;# 
  3775  0219                     	;# 
  3776  021A                     	;# 
  3777  021B                     	;# 
  3778  021B                     	;# 
  3779  021C                     	;# 
  3780  021C                     	;# 
  3781  021D                     	;# 
  3782  021D                     	;# 
  3783  021E                     	;# 
  3784  021F                     	;# 
  3785  028C                     	;# 
  3786  028C                     	;# 
  3787  028D                     	;# 
  3788  028D                     	;# 
  3789  028E                     	;# 
  3790  028F                     	;# 
  3791  0290                     	;# 
  3792  0290                     	;# 
  3793  0291                     	;# 
  3794  0292                     	;# 
  3795  0292                     	;# 
  3796  0293                     	;# 
  3797  0293                     	;# 
  3798  0294                     	;# 
  3799  0295                     	;# 
  3800  0296                     	;# 
  3801  0296                     	;# 
  3802  0297                     	;# 
  3803  0298                     	;# 
  3804  0298                     	;# 
  3805  0299                     	;# 
  3806  0299                     	;# 
  3807  029A                     	;# 
  3808  029B                     	;# 
  3809  029C                     	;# 
  3810  029C                     	;# 
  3811  029D                     	;# 
  3812  030C                     	;# 
  3813  030C                     	;# 
  3814  030D                     	;# 
  3815  030E                     	;# 
  3816  030F                     	;# 
  3817  0310                     	;# 
  3818  0310                     	;# 
  3819  0311                     	;# 
  3820  0312                     	;# 
  3821  0313                     	;# 
  3822  0314                     	;# 
  3823  0314                     	;# 
  3824  0315                     	;# 
  3825  0316                     	;# 
  3826  0317                     	;# 
  3827  0318                     	;# 
  3828  0318                     	;# 
  3829  0319                     	;# 
  3830  031A                     	;# 
  3831  031B                     	;# 
  3832  031C                     	;# 
  3833  031C                     	;# 
  3834  031D                     	;# 
  3835  031E                     	;# 
  3836  031F                     	;# 
  3837  038C                     	;# 
  3838  038D                     	;# 
  3839  038E                     	;# 
  3840  0390                     	;# 
  3841  0391                     	;# 
  3842  0392                     	;# 
  3843  040C                     	;# 
  3844  040D                     	;# 
  3845  040E                     	;# 
  3846  040F                     	;# 
  3847  0410                     	;# 
  3848  0411                     	;# 
  3849  0416                     	;# 
  3850  0416                     	;# 
  3851  0417                     	;# 
  3852  0418                     	;# 
  3853  0418                     	;# 
  3854  0419                     	;# 
  3855  041A                     	;# 
  3856  041A                     	;# 
  3857  041B                     	;# 
  3858  041C                     	;# 
  3859  041C                     	;# 
  3860  041D                     	;# 
  3861  041E                     	;# 
  3862  041F                     	;# 
  3863  048C                     	;# 
  3864  048C                     	;# 
  3865  048D                     	;# 
  3866  048E                     	;# 
  3867  048F                     	;# 
  3868  048F                     	;# 
  3869  0490                     	;# 
  3870  0491                     	;# 
  3871  0492                     	;# 
  3872  0492                     	;# 
  3873  0493                     	;# 
  3874  0494                     	;# 
  3875  0495                     	;# 
  3876  0495                     	;# 
  3877  0496                     	;# 
  3878  0497                     	;# 
  3879  0498                     	;# 
  3880  0499                     	;# 
  3881  049A                     	;# 
  3882  049B                     	;# 
  3883  049C                     	;# 
  3884  049D                     	;# 
  3885  050C                     	;# 
  3886  050C                     	;# 
  3887  050D                     	;# 
  3888  050E                     	;# 
  3889  050F                     	;# 
  3890  050F                     	;# 
  3891  0510                     	;# 
  3892  0511                     	;# 
  3893  0512                     	;# 
  3894  0512                     	;# 
  3895  0513                     	;# 
  3896  0514                     	;# 
  3897  0515                     	;# 
  3898  0515                     	;# 
  3899  0516                     	;# 
  3900  0517                     	;# 
  3901  0518                     	;# 
  3902  0519                     	;# 
  3903  051A                     	;# 
  3904  051B                     	;# 
  3905  051C                     	;# 
  3906  051D                     	;# 
  3907  058C                     	;# 
  3908  058C                     	;# 
  3909  058D                     	;# 
  3910  058E                     	;# 
  3911  058F                     	;# 
  3912  058F                     	;# 
  3913  0590                     	;# 
  3914  0591                     	;# 
  3915  0592                     	;# 
  3916  0593                     	;# 
  3917  060C                     	;# 
  3918  060D                     	;# 
  3919  060E                     	;# 
  3920  060F                     	;# 
  3921  0610                     	;# 
  3922  0611                     	;# 
  3923  0612                     	;# 
  3924  0613                     	;# 
  3925  0614                     	;# 
  3926  0616                     	;# 
  3927  0617                     	;# 
  3928  0618                     	;# 
  3929  0619                     	;# 
  3930  061A                     	;# 
  3931  061B                     	;# 
  3932  061C                     	;# 
  3933  061D                     	;# 
  3934  061E                     	;# 
  3935  068C                     	;# 
  3936  068D                     	;# 
  3937  068E                     	;# 
  3938  068F                     	;# 
  3939  0690                     	;# 
  3940  0691                     	;# 
  3941  0692                     	;# 
  3942  0693                     	;# 
  3943  0694                     	;# 
  3944  070C                     	;# 
  3945  070D                     	;# 
  3946  070E                     	;# 
  3947  070F                     	;# 
  3948  0710                     	;# 
  3949  0711                     	;# 
  3950  0712                     	;# 
  3951  0713                     	;# 
  3952  0714                     	;# 
  3953  0716                     	;# 
  3954  0717                     	;# 
  3955  0718                     	;# 
  3956  0719                     	;# 
  3957  071A                     	;# 
  3958  071B                     	;# 
  3959  071C                     	;# 
  3960  071D                     	;# 
  3961  071E                     	;# 
  3962  0796                     	;# 
  3963  0797                     	;# 
  3964  0798                     	;# 
  3965  0799                     	;# 
  3966  079A                     	;# 
  3967  079B                     	;# 
  3968  080C                     	;# 
  3969  080D                     	;# 
  3970  080E                     	;# 
  3971  080F                     	;# 
  3972  0810                     	;# 
  3973  0811                     	;# 
  3974  0812                     	;# 
  3975  0813                     	;# 
  3976  0814                     	;# 
  3977  081A                     	;# 
  3978  081B                     	;# 
  3979  081C                     	;# 
  3980  081D                     	;# 
  3981  081E                     	;# 
  3982  081F                     	;# 
  3983  088C                     	;# 
  3984  088D                     	;# 
  3985  088E                     	;# 
  3986  088F                     	;# 
  3987  0890                     	;# 
  3988  0891                     	;# 
  3989  0892                     	;# 
  3990  0893                     	;# 
  3991  0895                     	;# 
  3992  0896                     	;# 
  3993  0897                     	;# 
  3994  0898                     	;# 
  3995  0899                     	;# 
  3996  089A                     	;# 
  3997  089B                     	;# 
  3998  090C                     	;# 
  3999  090E                     	;# 
  4000  090F                     	;# 
  4001  091F                     	;# 
  4002  091F                     	;# 
  4003  098F                     	;# 
  4004  098F                     	;# 
  4005  0990                     	;# 
  4006  0991                     	;# 
  4007  0992                     	;# 
  4008  0993                     	;# 
  4009  0994                     	;# 
  4010  0995                     	;# 
  4011  0996                     	;# 
  4012  0997                     	;# 
  4013  0E0F                     	;# 
  4014  0E10                     	;# 
  4015  0E11                     	;# 
  4016  0E12                     	;# 
  4017  0E13                     	;# 
  4018  0E14                     	;# 
  4019  0E15                     	;# 
  4020  0E16                     	;# 
  4021  0E17                     	;# 
  4022  0E18                     	;# 
  4023  0E19                     	;# 
  4024  0E1A                     	;# 
  4025  0E1B                     	;# 
  4026  0E1C                     	;# 
  4027  0E1D                     	;# 
  4028  0E1E                     	;# 
  4029  0E1F                     	;# 
  4030  0E20                     	;# 
  4031  0E21                     	;# 
  4032  0E22                     	;# 
  4033  0E23                     	;# 
  4034  0E24                     	;# 
  4035  0E25                     	;# 
  4036  0E26                     	;# 
  4037  0E27                     	;# 
  4038  0E28                     	;# 
  4039  0E29                     	;# 
  4040  0E2A                     	;# 
  4041  0E2B                     	;# 
  4042  0E2C                     	;# 
  4043  0E2D                     	;# 
  4044  0E2E                     	;# 
  4045  0E2F                     	;# 
  4046  0E30                     	;# 
  4047  0E31                     	;# 
  4048  0E32                     	;# 
  4049  0E33                     	;# 
  4050  0E34                     	;# 
  4051  0E35                     	;# 
  4052  0E36                     	;# 
  4053  0E37                     	;# 
  4054  0E8F                     	;# 
  4055  0E90                     	;# 
  4056  0E91                     	;# 
  4057  0E92                     	;# 
  4058  0E93                     	;# 
  4059  0E94                     	;# 
  4060  0E95                     	;# 
  4061  0E96                     	;# 
  4062  0E97                     	;# 
  4063  0E9C                     	;# 
  4064  0E9D                     	;# 
  4065  0E9E                     	;# 
  4066  0EA1                     	;# 
  4067  0EA2                     	;# 
  4068  0EA3                     	;# 
  4069  0EA4                     	;# 
  4070  0EA5                     	;# 
  4071  0EA9                     	;# 
  4072  0EAA                     	;# 
  4073  0EAB                     	;# 
  4074  0EAC                     	;# 
  4075  0EB1                     	;# 
  4076  0EB2                     	;# 
  4077  0EB3                     	;# 
  4078  0EB8                     	;# 
  4079  0EB9                     	;# 
  4080  0EBA                     	;# 
  4081  0EBB                     	;# 
  4082  0EBC                     	;# 
  4083  0EBD                     	;# 
  4084  0EBE                     	;# 
  4085  0EC3                     	;# 
  4086  0EC5                     	;# 
  4087  0EC6                     	;# 
  4088  0EC7                     	;# 
  4089  0EC8                     	;# 
  4090  0EC9                     	;# 
  4091  0ECA                     	;# 
  4092  0ECB                     	;# 
  4093  0ECC                     	;# 
  4094  0F10                     	;# 
  4095  0F11                     	;# 
  4096  0F12                     	;# 
  4097  0F13                     	;# 
  4098  0F14                     	;# 
  4099  0F15                     	;# 
  4100  0F16                     	;# 
  4101  0F17                     	;# 
  4102  0F18                     	;# 
  4103  0F19                     	;# 
  4104  0F1A                     	;# 
  4105  0F1B                     	;# 
  4106  0F1C                     	;# 
  4107  0F1D                     	;# 
  4108  0F1E                     	;# 
  4109  0F1F                     	;# 
  4110  0F20                     	;# 
  4111  0F21                     	;# 
  4112  0F22                     	;# 
  4113  0F23                     	;# 
  4114  0F24                     	;# 
  4115  0F25                     	;# 
  4116  0F26                     	;# 
  4117  0F27                     	;# 
  4118  0F38                     	;# 
  4119  0F39                     	;# 
  4120  0F3A                     	;# 
  4121  0F3B                     	;# 
  4122  0F3C                     	;# 
  4123  0F3D                     	;# 
  4124  0F3E                     	;# 
  4125  0F3F                     	;# 
  4126  0F40                     	;# 
  4127  0F41                     	;# 
  4128  0F43                     	;# 
  4129  0F44                     	;# 
  4130  0F45                     	;# 
  4131  0F46                     	;# 
  4132  0F47                     	;# 
  4133  0F48                     	;# 
  4134  0F49                     	;# 
  4135  0F4A                     	;# 
  4136  0F4B                     	;# 
  4137  0F4C                     	;# 
  4138  0F4E                     	;# 
  4139  0F4F                     	;# 
  4140  0F50                     	;# 
  4141  0F51                     	;# 
  4142  0F52                     	;# 
  4143  0F53                     	;# 
  4144  0F54                     	;# 
  4145  0F55                     	;# 
  4146  0F56                     	;# 
  4147  0F57                     	;# 
  4148  0F65                     	;# 
  4149  0F68                     	;# 
  4150  0F69                     	;# 
  4151  0F6A                     	;# 
  4152  0F6B                     	;# 
  4153  0FE4                     	;# 
  4154  0FE5                     	;# 
  4155  0FE6                     	;# 
  4156  0FE7                     	;# 
  4157  0FE8                     	;# 
  4158  0FE9                     	;# 
  4159  0FEA                     	;# 
  4160  0FEB                     	;# 
  4161  0FED                     	;# 
  4162  0FEE                     	;# 
  4163  0FEF                     	;_samples
  4164                           
  4165                           	psect	idataBANK1
  4166  15BC                     __pidataBANK1:	
  4167                           
  4168                           ;initializer for _channels
  4169  15BC  3401               	retlw	1
  4170  15BD  3400               	retlw	0
  4171  15BE  3403               	retlw	3
  4172  15BF  3400               	retlw	0
  4173  15C0  3404               	retlw	4
  4174  15C1  3400               	retlw	0
  4175  15C2  3405               	retlw	5
  4176  15C3  3400               	retlw	0
  4177  15C4  3409               	retlw	9
  4178  15C5  3400               	retlw	0
  4179  15C6  340B               	retlw	11
  4180  15C7  3400               	retlw	0
  4181                           
  4182                           	psect	idataBANK2
  4183  15D6                     __pidataBANK2:	
  4184                           
  4185                           ;initializer for ___cgram
  4186  15D6  340C               	retlw	12
  4187  15D7  3412               	retlw	18
  4188  15D8  3412               	retlw	18
  4189  15D9  340C               	retlw	12
  4190  15DA  3400               	retlw	0
  4191  15DB  3400               	retlw	0
  4192  15DC  3400               	retlw	0
  4193  15DD  3400               	retlw	0
  4194  15DE  3408               	retlw	8
  4195  15DF  3404               	retlw	4
  4196  15E0  3402               	retlw	2
  4197  15E1  341F               	retlw	31
  4198  15E2  3402               	retlw	2
  4199  15E3  3404               	retlw	4
  4200  15E4  3408               	retlw	8
  4201  15E5  3400               	retlw	0
  4202                           
  4203                           	psect	stringtext
  4204  1000                     __pstringtext:	
  4205  1000                     log@coeff:	
  4206  1000  3400               	retlw	0
  4207  1001  3400               	retlw	0
  4208  1002  3400               	retlw	0
  4209  1003  3400               	retlw	0
  4210  1004  3480               	retlw	128
  4211  1005  343F               	retlw	63
  4212  1006  34F0               	retlw	240
  4213  1007  34FF               	retlw	255
  4214  1008  34BE               	retlw	190
  4215  1009  34E2               	retlw	226
  4216  100A  34A9               	retlw	169
  4217  100B  343E               	retlw	62
  4218  100C  3483               	retlw	131
  4219  100D  3476               	retlw	118
  4220  100E  34BE               	retlw	190
  4221  100F  34AE               	retlw	174
  4222  1010  342B               	retlw	43
  4223  1011  343E               	retlw	62
  4224  1012  343C               	retlw	60
  4225  1013  34C3               	retlw	195
  4226  1014  34BD               	retlw	189
  4227  1015  34D2               	retlw	210
  4228  1016  3413               	retlw	19
  4229  1017  343D               	retlw	61
  4230  1018  3478               	retlw	120
  4231  1019  34D3               	retlw	211
  4232  101A  34BB               	retlw	187
  4233  101B                     __end_oflog@coeff:	
  4234  0016                     _LATA	set	22
  4235  0017                     _LATB	set	23
  4236  0018                     _LATC	set	24
  4237  0011                     _TRISA	set	17
  4238  0012                     _TRISB	set	18
  4239  0013                     _TRISC	set	19
  4240  005F                     _GIE	set	95
  4241  0060                     _RA0	set	96
  4242  0062                     _RA2	set	98
  4243  0066                     _RA6	set	102
  4244  0067                     _RA7	set	103
  4245  0070                     _RC0	set	112
  4246  0071                     _RC1	set	113
  4247  009D                     _ADACQ	set	157
  4248  0099                     _ADACT	set	153
  4249  009B                     _ADCAP	set	155
  4250  0098                     _ADCLK	set	152
  4251  0093                     _ADCON0	set	147
  4252  0093                     _ADCON0bits	set	147
  4253  0094                     _ADCON1	set	148
  4254  0095                     _ADCON2	set	149
  4255  0096                     _ADCON3	set	150
  4256  009E                     _ADPCH	set	158
  4257  009C                     _ADPRE	set	156
  4258  009A                     _ADREF	set	154
  4259  008D                     _ADRESH	set	141
  4260  008C                     _ADRESL	set	140
  4261  0097                     _ADSTAT	set	151
  4262  010F                     _ADLTHH	set	271
  4263  010E                     _ADLTHL	set	270
  4264  010D                     _ADRPT	set	269
  4265  0113                     _ADSTPTH	set	275
  4266  0112                     _ADSTPTL	set	274
  4267  0111                     _ADUTHH	set	273
  4268  0110                     _ADUTHL	set	272
  4269  021F                     _CCPTMRS1bits	set	543
  4270  0290                     _T2CLKCON	set	656
  4271  028E                     _T2CON	set	654
  4272  028E                     _T2CONbits	set	654
  4273  028F                     _T2HLT	set	655
  4274  028D                     _T2PR	set	653
  4275  0291                     _T2RST	set	657
  4276  028C                     _T2TMR	set	652
  4277  038E                     _PWM6CON	set	910
  4278  038D                     _PWM6DCH	set	909
  4279  038C                     _PWM6DCL	set	908
  4280  0716                     _PIE0bits	set	1814
  4281  0710                     _PIR4bits	set	1808
  4282  088D                     _OSCCON1	set	2189
  4283  088F                     _OSCCON3	set	2191
  4284  0891                     _OSCEN	set	2193
  4285  0893                     _OSCFRQ	set	2195
  4286  0892                     _OSCTUNE	set	2194
  4287  090C                     _FVRCON	set	2316
  4288  0E8F                     _PPSLOCK	set	3727
  4289  0E8F                     _PPSLOCKbits	set	3727
  4290  0F38                     _ANSELA	set	3896
  4291  0F43                     _ANSELB	set	3907
  4292  0F4E                     _ANSELC	set	3918
  4293  0F22                     _RC2PPS	set	3874
  4294  0F39                     _WPUA	set	3897
  4295  0F44                     _WPUB	set	3908
  4296  0F4F                     _WPUC	set	3919
  4297  0F65                     _WPUE	set	3941
  4298  101B                     STR_28:	
  4299  101B  3466               	retlw	102	;'f'
  4300  101C  346F               	retlw	111	;'o'
  4301  101D  3472               	retlw	114	;'r'
  4302  101E  3420               	retlw	32	;' '
  4303  101F  3455               	retlw	85	;'U'
  4304  1020  3473               	retlw	115	;'s'
  4305  1021  3465               	retlw	101	;'e'
  4306  1022  3472               	retlw	114	;'r'
  4307  1023  3420               	retlw	32	;' '
  4308  1024  3444               	retlw	68	;'D'
  4309  1025  3469               	retlw	105	;'i'
  4310  1026  3473               	retlw	115	;'s'
  4311  1027  3470               	retlw	112	;'p'
  4312  1028  346C               	retlw	108	;'l'
  4313  1029  3461               	retlw	97	;'a'
  4314  102A  3479               	retlw	121	;'y'
  4315  102B  3400               	retlw	0
  4316  102C                     STR_27:	
  4317  102C  3459               	retlw	89	;'Y'
  4318  102D  346F               	retlw	111	;'o'
  4319  102E  3475               	retlw	117	;'u'
  4320  102F  3420               	retlw	32	;' '
  4321  1030  3443               	retlw	67	;'C'
  4322  1031  3468               	retlw	104	;'h'
  4323  1032  346F               	retlw	111	;'o'
  4324  1033  3473               	retlw	115	;'s'
  4325  1034  3465               	retlw	101	;'e'
  4326  1035  3420               	retlw	32	;' '
  4327  1036  3400               	retlw	0
  4328  1037                     STR_33:	
  4329  1037  3442               	retlw	66	;'B'
  4330  1038  3461               	retlw	97	;'a'
  4331  1039  3463               	retlw	99	;'c'
  4332  103A  346B               	retlw	107	;'k'
  4333  103B  344C               	retlw	76	;'L'
  4334  103C  3469               	retlw	105	;'i'
  4335  103D  3467               	retlw	103	;'g'
  4336  103E  3468               	retlw	104	;'h'
  4337  103F  3474               	retlw	116	;'t'
  4338  1040  343A               	retlw	58	;':'
  4339  1041  3400               	retlw	0
  4340  1042                     STR_31:	
  4341  1042  3420               	retlw	32	;' '
  4342  1043  3443               	retlw	67	;'C'
  4343  1044  3468               	retlw	104	;'h'
  4344  1045  346F               	retlw	111	;'o'
  4345  1046  3473               	retlw	115	;'s'
  4346  1047  3465               	retlw	101	;'e'
  4347  1048  346E               	retlw	110	;'n'
  4348  1049  3420               	retlw	32	;' '
  4349  104A  3400               	retlw	0
  4350  104B                     STR_36:	
  4351  104B  3453               	retlw	83	;'S'
  4352  104C  346F               	retlw	111	;'o'
  4353  104D  346C               	retlw	108	;'l'
  4354  104E  3461               	retlw	97	;'a'
  4355  104F  3472               	retlw	114	;'r'
  4356  1050  3400               	retlw	0
  4357  1051                     STR_38:	
  4358  1051  3450               	retlw	80	;'P'
  4359  1052  346F               	retlw	111	;'o'
  4360  1053  346F               	retlw	111	;'o'
  4361  1054  346C               	retlw	108	;'l'
  4362  1055  3400               	retlw	0
  4363  1056                     STR_37:	
  4364  1056  344F               	retlw	79	;'O'
  4365  1057  3475               	retlw	117	;'u'
  4366  1058  3474               	retlw	116	;'t'
  4367  1059  3400               	retlw	0
  4368  105A                     STR_35:	
  4369  105A  3449               	retlw	73	;'I'
  4370  105B  346E               	retlw	110	;'n'
  4371  105C  3400               	retlw	0
  4372  105D                     STR_26:	
  4373  105D  3421               	retlw	33	;'!'
  4374  105E  3400               	retlw	0
  4375  105F                     STR_20:	
  4376  105F  3426               	retlw	38	;'&'
  4377  1060  3400               	retlw	0
  4378  1061                     STR_12:	
  4379  1061  342C               	retlw	44	;','
  4380  1062  3400               	retlw	0
  4381  1063                     STR_1:	
  4382  1063  3441               	retlw	65	;'A'
  4383  1064  3400               	retlw	0
  4384  1065                     STR_7:	
  4385  1065  3444               	retlw	68	;'D'
  4386  1066  3400               	retlw	0
  4387  1067                     STR_18:	
  4388  1067  3445               	retlw	69	;'E'
  4389  1068  3400               	retlw	0
  4390  1069                     STR_4:	
  4391  1069  3448               	retlw	72	;'H'
  4392  106A  3400               	retlw	0
  4393  106B                     STR_10:	
  4394  106B  3449               	retlw	73	;'I'
  4395  106C  3400               	retlw	0
  4396  106D                     STR_22:	
  4397  106D  344B               	retlw	75	;'K'
  4398  106E  3400               	retlw	0
  4399  106F                     STR_2:	
  4400  106F  344C               	retlw	76	;'L'
  4401  1070  3400               	retlw	0
  4402  1071                     STR_3:	
  4403  1071  344F               	retlw	79	;'O'
  4404  1072  3400               	retlw	0
  4405  1073                     STR_15:	
  4406  1073  3450               	retlw	80	;'P'
  4407  1074  3400               	retlw	0
  4408  1075                     STR_13:	
  4409  1075  3453               	retlw	83	;'S'
  4410  1076  3400               	retlw	0
  4411  1077                     STR_9:	
  4412  1077  3456               	retlw	86	;'V'
  4413  1078  3400               	retlw	0
  4414  1035                     
  4415                           ; #config settings
  4416  0000                     
  4417                           	psect	cinit
  4418  07BD                     start_initialization:	
  4419  07BD                     __initialization:		;BIGRAM
  4420                           
  4421                           ; Initialize objects allocated to BANK1
  4422  07BD  30BC               	movlw	low __pidataBANK1
  4423  07BE  0084               	movwf	4
  4424  07BF  3095               	movlw	(high __pidataBANK1)| (0+128)
  4425  07C0  0085               	movwf	5
  4426  07C1  30DD               	movlw	low __pdataBANK1
  4427  07C2  0086               	movwf	6
  4428  07C3  3000               	movlw	high __pdataBANK1
  4429  07C4  0087               	movwf	7
  4430  07C5  3000               	movlw	0
  4431  07C6  00FF               	movwf	btemp+1
  4432  07C7  300C               	movlw	12
  4433  07C8  3195  25B0  3187   	fcall	init_ram
  4434                           
  4435                           ; Initialize objects allocated to BANK2
  4436  07CB  30D6               	movlw	low __pidataBANK2
  4437  07CC  0084               	movwf	4
  4438  07CD  3095               	movlw	(high __pidataBANK2)| (0+128)
  4439  07CE  0085               	movwf	5
  4440  07CF  3020               	movlw	low __pdataBANK2
  4441  07D0  0086               	movwf	6
  4442  07D1  3001               	movlw	high __pdataBANK2
  4443  07D2  0087               	movwf	7
  4444  07D3  3000               	movlw	0
  4445  07D4  00FF               	movwf	btemp+1
  4446  07D5  3010               	movlw	16
  4447  07D6  3195  25B0  3187   	fcall	init_ram
  4448                           
  4449                           ; Clear objects allocated to BIGRAM
  4450  07D9  3000               	movlw	low (0+8960)
  4451  07DA  0084               	movwf	4
  4452  07DB  3023               	movlw	high (0+8960)
  4453  07DC  0085               	movwf	5
  4454  07DD  30F0               	movlw	240
  4455  07DE  00FE               	movwf	btemp
  4456  07DF  3000               	movlw	0
  4457  07E0  00FF               	movwf	btemp+1
  4458  07E1  3195  25A4  3187   	fcall	clear_ram0
  4459                           
  4460                           ; Clear objects allocated to BANK0
  4461  07E4  01EC               	clrf	__pbssBANK0& (0+127)
  4462  07E5  01ED               	clrf	(__pbssBANK0+1)& (0+127)
  4463  07E6  01EE               	clrf	(__pbssBANK0+2)& (0+127)
  4464  07E7  01EF               	clrf	(__pbssBANK0+3)& (0+127)
  4465                           
  4466                           ; Clear objects allocated to BANK1
  4467  07E8  30C0               	movlw	low __pbssBANK1
  4468  07E9  0084               	movwf	4
  4469  07EA  3000               	movlw	high __pbssBANK1
  4470  07EB  0085               	movwf	5
  4471  07EC  301D               	movlw	29
  4472  07ED  00FE               	movwf	btemp
  4473  07EE  3000               	movlw	0
  4474  07EF  00FF               	movwf	btemp+1
  4475  07F0  3195  25A4  3187   	fcall	clear_ram0
  4476                           
  4477                           ; Clear objects allocated to BANK2
  4478  07F3  3030               	movlw	low __pbssBANK2
  4479  07F4  0084               	movwf	4
  4480  07F5  3001               	movlw	high __pbssBANK2
  4481  07F6  0085               	movwf	5
  4482  07F7  300C               	movlw	12
  4483  07F8  00FE               	movwf	btemp
  4484  07F9  3000               	movlw	0
  4485  07FA  00FF               	movwf	btemp+1
  4486  07FB  3195  25A4         	fcall	clear_ram0
  4487  07FD                     end_of_initialization:	
  4488                           ;End of C runtime variable initialization code
  4489                           
  4490  07FD                     __end_of__initialization:	
  4491  07FD  0020               	movlb	0
  4492  07FE  3181  2942         	ljmp	_main	;jump to C main() function
  4493                           
  4494                           	psect	bssBANK0
  4495  006C                     __pbssBANK0:	
  4496  006C                     _errno:	
  4497  006C                     	ds	2
  4498  006E                     _sampleIndex:	
  4499  006E                     	ds	2
  4500                           
  4501                           	psect	bssBANK1
  4502  00C0                     __pbssBANK1:	
  4503  00C0                     _totals:	
  4504  00C0                     	ds	24
  4505  00D8                     LCD_Write_Int@F13687:	
  4506  00D8                     	ds	5
  4507                           
  4508                           	psect	dataBANK1
  4509  00DD                     __pdataBANK1:	
  4510  00DD                     _channels:	
  4511  00DD                     	ds	12
  4512                           
  4513                           	psect	bssBANK2
  4514  0130                     __pbssBANK2:	
  4515  0130                     main@F13657:	
  4516  0130                     	ds	12
  4517                           
  4518                           	psect	dataBANK2
  4519  0120                     __pdataBANK2:	
  4520  0120                     ___cgram:	
  4521  0120                     	ds	16
  4522                           
  4523                           	psect	inittext
  4524  15B0                     init_ram:	
  4525  15B0  00FE               	movwf	126
  4526  15B1                     initloop:	
  4527  15B1  0012               	moviw fsr0++
  4528  15B2  001E               	movwi fsr1++
  4529  15B3  3001               	movlw	1
  4530  15B4  02FE               	subwf	126,f
  4531  15B5  3000               	movlw	0
  4532  15B6  3BFF               	subwfb	127,f
  4533  15B7  087F               	movf	127,w
  4534  15B8  047E               	iorwf	126,w
  4535  15B9  1903               	btfsc	3,2
  4536  15BA  3400               	retlw	0
  4537  15BB  2DB1               	goto	initloop
  4538                           
  4539                           	psect	clrtext
  4540  15A4                     clear_ram0:	
  4541                           ;	Called with FSR0 containing the base address, and
  4542                           ;	btemp/btemp+1 has the size to clear
  4543                           
  4544  15A4  0064               	clrwdt	;clear the watchdog before getting into this loop
  4545  15A5                     clrloop0:	
  4546  15A5  0180               	clrf	0	;clear RAM location pointed to by FSR
  4547  15A6  3101               	addfsr 0,1
  4548  15A7  3001               	movlw	1
  4549  15A8  02FE               	subwf	126,f
  4550  15A9  3000               	movlw	0
  4551  15AA  3BFF               	subwfb	127,f
  4552  15AB  087F               	movf	127,w
  4553  15AC  047E               	iorwf	126,w
  4554  15AD  1903               	btfsc	3,2
  4555  15AE  3400               	retlw	0	;all done for this memory range, return
  4556  15AF  2DA5               	goto	clrloop0	;have we reached the end yet?
  4557                           
  4558                           	psect	cstackBANK1
  4559  00A0                     __pcstackBANK1:	
  4560  00A0                     _main$989:	
  4561                           
  4562                           ; 3 bytes @ 0x0
  4563  00A0                     	ds	3
  4564  00A3                     main@loop:	
  4565                           
  4566                           ; 1 bytes @ 0x3
  4567  00A3                     	ds	1
  4568  00A4                     main@startDelay:	
  4569                           
  4570                           ; 1 bytes @ 0x4
  4571  00A4                     	ds	1
  4572  00A5                     main@analogs:	
  4573                           
  4574                           ; 12 bytes @ 0x5
  4575  00A5                     	ds	12
  4576  00B1                     main@bCount:	
  4577                           
  4578                           ; 2 bytes @ 0x11
  4579  00B1                     	ds	2
  4580  00B3                     main@displayTemp:	
  4581                           
  4582                           ; 3 bytes @ 0x13
  4583  00B3                     	ds	3
  4584  00B6                     main@displayTemp2:	
  4585                           
  4586                           ; 3 bytes @ 0x16
  4587  00B6                     	ds	3
  4588  00B9                     main@resetDelay:	
  4589                           
  4590                           ; 1 bytes @ 0x19
  4591  00B9                     	ds	1
  4592  00BA                     main@tPadCount:	
  4593                           
  4594                           ; 1 bytes @ 0x1A
  4595  00BA                     	ds	1
  4596  00BB                     main@choice:	
  4597                           
  4598                           ; 1 bytes @ 0x1B
  4599  00BB                     	ds	1
  4600  00BC                     main@C_or_F:	
  4601                           
  4602                           ; 1 bytes @ 0x1C
  4603  00BC                     	ds	1
  4604  00BD                     main@x:	
  4605                           
  4606                           ; 1 bytes @ 0x1D
  4607  00BD                     	ds	1
  4608  00BE                     main@dutyCycle:	
  4609                           
  4610                           ; 2 bytes @ 0x1E
  4611  00BE                     	ds	2
  4612                           
  4613                           	psect	cstackCOMMON
  4614  0070                     __pcstackCOMMON:	
  4615  0070                     ?___ftge:	
  4616  0070                     ?_LCD_Cmd:	
  4617                           ; 1 bit 
  4618                           
  4619  0070                     ?_LCD_Write_Char:	
  4620                           ; 1 bytes @ 0x0
  4621                           
  4622  0070                     ?_OSCILLATOR_Initialize:	
  4623                           ; 1 bytes @ 0x0
  4624                           
  4625  0070                     ??_OSCILLATOR_Initialize:	
  4626                           ; 1 bytes @ 0x0
  4627                           
  4628  0070                     ?_TMR2_Initialize:	
  4629                           ; 1 bytes @ 0x0
  4630                           
  4631  0070                     ??_TMR2_Initialize:	
  4632                           ; 1 bytes @ 0x0
  4633                           
  4634  0070                     ?_ADCC_Initialize:	
  4635                           ; 1 bytes @ 0x0
  4636                           
  4637  0070                     ??_ADCC_Initialize:	
  4638                           ; 1 bytes @ 0x0
  4639                           
  4640  0070                     ?_InitCustomChars:	
  4641                           ; 1 bytes @ 0x0
  4642                           
  4643  0070                     ?_LCD_Port:	
  4644                           ; 1 bytes @ 0x0
  4645                           
  4646  0070                     ??_LCD_Port:	
  4647                           ; 1 bytes @ 0x0
  4648                           
  4649  0070                     ?_LCD_Clear:	
  4650                           ; 1 bytes @ 0x0
  4651                           
  4652  0070                     ?_LCD_Init:	
  4653                           ; 1 bytes @ 0x0
  4654                           
  4655  0070                     ?_PIN_MANAGER_Initialize:	
  4656                           ; 1 bytes @ 0x0
  4657                           
  4658  0070                     ??_PIN_MANAGER_Initialize:	
  4659                           ; 1 bytes @ 0x0
  4660                           
  4661  0070                     ?_PWM6_Initialize:	
  4662                           ; 1 bytes @ 0x0
  4663                           
  4664  0070                     ??_PWM6_Initialize:	
  4665                           ; 1 bytes @ 0x0
  4666                           
  4667  0070                     ?_PWM6_LoadDutyValue:	
  4668                           ; 1 bytes @ 0x0
  4669                           
  4670  0070                     ?_SYSTEM_Initialize:	
  4671                           ; 1 bytes @ 0x0
  4672                           
  4673  0070                     ?_main:	
  4674                           ; 1 bytes @ 0x0
  4675                           
  4676  0070                     ?_ADCRead:	
  4677                           ; 1 bytes @ 0x0
  4678                           
  4679  0070                     ?___wmul:	
  4680                           ; 2 bytes @ 0x0
  4681                           
  4682  0070                     ?___awdiv:	
  4683                           ; 2 bytes @ 0x0
  4684                           
  4685  0070                     ?___awmod:	
  4686                           ; 2 bytes @ 0x0
  4687                           
  4688  0070                     ?___lwdiv:	
  4689                           ; 2 bytes @ 0x0
  4690                           
  4691  0070                     ?___ftpack:	
  4692                           ; 2 bytes @ 0x0
  4693                           
  4694  0070                     ?_frexp:	
  4695                           ; 3 bytes @ 0x0
  4696                           
  4697  0070                     ?___aldiv:	
  4698                           ; 3 bytes @ 0x0
  4699                           
  4700  0070                     ?___fttol:	
  4701                           ; 4 bytes @ 0x0
  4702                           
  4703  0070                     LCD_Port@a:	
  4704                           ; 4 bytes @ 0x0
  4705                           
  4706  0070                     PIN_MANAGER_Initialize@state:	
  4707                           ; 1 bytes @ 0x0
  4708                           
  4709  0070                     PWM6_LoadDutyValue@dutyCycle:	
  4710                           ; 1 bytes @ 0x0
  4711                           
  4712  0070                     ___wmul@multiplier:	
  4713                           ; 2 bytes @ 0x0
  4714                           
  4715  0070                     ___awdiv@divisor:	
  4716                           ; 2 bytes @ 0x0
  4717                           
  4718  0070                     ___awmod@divisor:	
  4719                           ; 2 bytes @ 0x0
  4720                           
  4721  0070                     ___lwdiv@divisor:	
  4722                           ; 2 bytes @ 0x0
  4723                           
  4724  0070                     ___ftpack@arg:	
  4725                           ; 2 bytes @ 0x0
  4726                           
  4727  0070                     ___ftge@ff1:	
  4728                           ; 3 bytes @ 0x0
  4729                           
  4730  0070                     ___fttol@f1:	
  4731                           ; 3 bytes @ 0x0
  4732                           
  4733  0070                     frexp@value:	
  4734                           ; 3 bytes @ 0x0
  4735                           
  4736  0070                     ___aldiv@divisor:	
  4737                           ; 3 bytes @ 0x0
  4738                           
  4739                           
  4740                           ; 4 bytes @ 0x0
  4741  0070                     	ds	1
  4742  0071                     ??_LCD_Cmd:	
  4743  0071                     ??_LCD_Write_Char:	
  4744                           ; 1 bytes @ 0x1
  4745                           
  4746                           
  4747                           ; 1 bytes @ 0x1
  4748  0071                     	ds	1
  4749  0072                     ??_PWM6_LoadDutyValue:	
  4750  0072                     LCD_Write_Char@temp:	
  4751                           ; 1 bytes @ 0x2
  4752                           
  4753  0072                     ___wmul@multiplicand:	
  4754                           ; 1 bytes @ 0x2
  4755                           
  4756  0072                     ___awdiv@dividend:	
  4757                           ; 2 bytes @ 0x2
  4758                           
  4759  0072                     ___awmod@dividend:	
  4760                           ; 2 bytes @ 0x2
  4761                           
  4762  0072                     ___lwdiv@dividend:	
  4763                           ; 2 bytes @ 0x2
  4764                           
  4765                           
  4766                           ; 2 bytes @ 0x2
  4767  0072                     	ds	1
  4768  0073                     ??_ADCRead:	
  4769  0073                     ADCRead@channel:	
  4770                           ; 1 bytes @ 0x3
  4771                           
  4772  0073                     LCD_Cmd@a:	
  4773                           ; 1 bytes @ 0x3
  4774                           
  4775  0073                     LCD_Write_Char@y:	
  4776                           ; 1 bytes @ 0x3
  4777                           
  4778  0073                     ___ftpack@exp:	
  4779                           ; 1 bytes @ 0x3
  4780                           
  4781  0073                     frexp@eptr:	
  4782                           ; 1 bytes @ 0x3
  4783                           
  4784  0073                     ___ftge@ff2:	
  4785                           ; 1 bytes @ 0x3
  4786                           
  4787                           
  4788                           ; 3 bytes @ 0x3
  4789  0073                     	ds	1
  4790  0074                     ??_frexp:	
  4791  0074                     ??_LCD_Clear:	
  4792                           ; 1 bytes @ 0x4
  4793                           
  4794  0074                     ?_LCD_Set_Cursor:	
  4795                           ; 1 bytes @ 0x4
  4796                           
  4797  0074                     ??_LCD_Init:	
  4798                           ; 1 bytes @ 0x4
  4799                           
  4800  0074                     ??___wmul:	
  4801                           ; 1 bytes @ 0x4
  4802                           
  4803  0074                     ??___awdiv:	
  4804                           ; 1 bytes @ 0x4
  4805                           
  4806  0074                     ??___awmod:	
  4807                           ; 1 bytes @ 0x4
  4808                           
  4809  0074                     ??___fttol:	
  4810                           ; 1 bytes @ 0x4
  4811                           
  4812  0074                     ??___lwdiv:	
  4813                           ; 1 bytes @ 0x4
  4814                           
  4815  0074                     LCD_Set_Cursor@y:	
  4816                           ; 1 bytes @ 0x4
  4817                           
  4818  0074                     LCD_Write_Char@a:	
  4819                           ; 1 bytes @ 0x4
  4820                           
  4821  0074                     ___ftpack@sign:	
  4822                           ; 1 bytes @ 0x4
  4823                           
  4824  0074                     ___wmul@product:	
  4825                           ; 1 bytes @ 0x4
  4826                           
  4827  0074                     ___aldiv@dividend:	
  4828                           ; 2 bytes @ 0x4
  4829                           
  4830                           
  4831                           ; 4 bytes @ 0x4
  4832  0074                     	ds	1
  4833  0075                     ??___ftpack:	
  4834  0075                     ??_InitCustomChars:	
  4835                           ; 1 bytes @ 0x5
  4836                           
  4837  0075                     ??_LCD_Set_Cursor:	
  4838                           ; 1 bytes @ 0x5
  4839                           
  4840  0075                     ?_LCD_Write_String:	
  4841                           ; 1 bytes @ 0x5
  4842                           
  4843  0075                     ___awdiv@counter:	
  4844                           ; 1 bytes @ 0x5
  4845                           
  4846  0075                     ___awmod@counter:	
  4847                           ; 1 bytes @ 0x5
  4848                           
  4849  0075                     LCD_Write_String@a:	
  4850                           ; 1 bytes @ 0x5
  4851                           
  4852  0075                     ___lwdiv@quotient:	
  4853                           ; 2 bytes @ 0x5
  4854                           
  4855                           
  4856                           ; 2 bytes @ 0x5
  4857  0075                     	ds	1
  4858  0076                     ??___ftge:	
  4859  0076                     InitCustomChars@i:	
  4860                           ; 1 bytes @ 0x6
  4861                           
  4862  0076                     ___awdiv@sign:	
  4863                           ; 1 bytes @ 0x6
  4864                           
  4865  0076                     ___awmod@sign:	
  4866                           ; 1 bytes @ 0x6
  4867                           
  4868                           
  4869                           ; 1 bytes @ 0x6
  4870  0076                     	ds	1
  4871  0077                     ??_LCD_Write_String:	
  4872  0077                     LCD_Set_Cursor@x:	
  4873                           ; 1 bytes @ 0x7
  4874                           
  4875  0077                     LCD_Init@style:	
  4876                           ; 1 bytes @ 0x7
  4877                           
  4878  0077                     ___lwdiv@counter:	
  4879                           ; 1 bytes @ 0x7
  4880                           
  4881  0077                     ___awdiv@quotient:	
  4882                           ; 1 bytes @ 0x7
  4883                           
  4884                           
  4885                           ; 2 bytes @ 0x7
  4886  0077                     	ds	1
  4887  0078                     ??_SYSTEM_Initialize:	
  4888  0078                     ??___aldiv:	
  4889                           ; 1 bytes @ 0x8
  4890                           
  4891  0078                     ?___awtoft:	
  4892                           ; 1 bytes @ 0x8
  4893                           
  4894  0078                     LCD_Set_Cursor@z:	
  4895                           ; 3 bytes @ 0x8
  4896                           
  4897  0078                     ___fttol@sign1:	
  4898                           ; 1 bytes @ 0x8
  4899                           
  4900  0078                     LCD_Write_String@i:	
  4901                           ; 1 bytes @ 0x8
  4902                           
  4903  0078                     ___awtoft@c:	
  4904                           ; 2 bytes @ 0x8
  4905                           
  4906                           
  4907                           ; 2 bytes @ 0x8
  4908  0078                     	ds	1
  4909  0079                     LCD_Set_Cursor@w:	
  4910  0079                     readAnalog@analog_channel:	
  4911                           ; 1 bytes @ 0x9
  4912                           
  4913  0079                     ___fttol@lval:	
  4914                           ; 2 bytes @ 0x9
  4915                           
  4916                           
  4917                           ; 4 bytes @ 0x9
  4918  0079                     	ds	1
  4919  007A                     LCD_Set_Cursor@temp:	
  4920                           
  4921                           ; 1 bytes @ 0xA
  4922  007A                     	ds	1
  4923  007B                     ??___awtoft:	
  4924  007B                     readAnalog@value:	
  4925                           ; 1 bytes @ 0xB
  4926                           
  4927                           
  4928                           ; 2 bytes @ 0xB
  4929  007B                     	ds	2
  4930  007D                     ___awtoft@sign:	
  4931  007D                     ___fttol@exp1:	
  4932                           ; 1 bytes @ 0xD
  4933                           
  4934                           
  4935                           ; 1 bytes @ 0xD
  4936  007D                     	ds	1
  4937  007E                     ??_eval_poly:	
  4938  007E                     ??_tempCalc:	
  4939                           ; 1 bytes @ 0xE
  4940                           
  4941  007E                     ??___ftsub:	
  4942                           ; 1 bytes @ 0xE
  4943                           
  4944                           
  4945                           	psect	cstackBANK0
  4946  0020                     __pcstackBANK0:	
  4947                           ; 1 bytes @ 0xE
  4948                           
  4949  0020                     ?_LCD_Write_Int:	
  4950  0020                     ?___ftmul:	
  4951                           ; 1 bytes @ 0x0
  4952                           
  4953  0020                     ___aldiv@counter:	
  4954                           ; 3 bytes @ 0x0
  4955                           
  4956  0020                     LCD_Write_Int@value:	
  4957                           ; 1 bytes @ 0x0
  4958                           
  4959  0020                     ___ftmul@f1:	
  4960                           ; 2 bytes @ 0x0
  4961                           
  4962                           
  4963                           ; 3 bytes @ 0x0
  4964  0020                     	ds	1
  4965  0021                     ___aldiv@sign:	
  4966                           
  4967                           ; 1 bytes @ 0x1
  4968  0021                     	ds	1
  4969  0022                     LCD_Write_Int@fieldLength:	
  4970  0022                     ___aldiv@quotient:	
  4971                           ; 1 bytes @ 0x2
  4972                           
  4973                           
  4974                           ; 4 bytes @ 0x2
  4975  0022                     	ds	1
  4976  0023                     LCD_Write_Int@numPlaces:	
  4977  0023                     ___ftmul@f2:	
  4978                           ; 1 bytes @ 0x3
  4979                           
  4980                           
  4981                           ; 3 bytes @ 0x3
  4982  0023                     	ds	1
  4983  0024                     LCD_Write_Int@sign:	
  4984                           
  4985                           ; 1 bytes @ 0x4
  4986  0024                     	ds	1
  4987  0025                     ??_LCD_Write_Int:	
  4988                           
  4989                           ; 1 bytes @ 0x5
  4990  0025                     	ds	1
  4991  0026                     ??___ftmul:	
  4992  0026                     ?_readAnalog:	
  4993                           ; 1 bytes @ 0x6
  4994                           
  4995  0026                     readAnalog@channel:	
  4996                           ; 2 bytes @ 0x6
  4997                           
  4998                           
  4999                           ; 2 bytes @ 0x6
  5000  0026                     	ds	2
  5001  0028                     ??_readAnalog:	
  5002                           
  5003                           ; 1 bytes @ 0x8
  5004  0028                     	ds	2
  5005  002A                     ___ftmul@exp:	
  5006  002A                     LCD_Write_Int@str:	
  5007                           ; 1 bytes @ 0xA
  5008                           
  5009                           
  5010                           ; 5 bytes @ 0xA
  5011  002A                     	ds	1
  5012  002B                     ___ftmul@f3_as_product:	
  5013                           
  5014                           ; 3 bytes @ 0xB
  5015  002B                     	ds	3
  5016  002E                     ___ftmul@cntr:	
  5017                           
  5018                           ; 1 bytes @ 0xE
  5019  002E                     	ds	1
  5020  002F                     ___ftmul@sign:	
  5021  002F                     LCD_Write_Int@j:	
  5022                           ; 1 bytes @ 0xF
  5023                           
  5024                           
  5025                           ; 2 bytes @ 0xF
  5026  002F                     	ds	1
  5027  0030                     ?___ftdiv:	
  5028  0030                     ___ftdiv@f2:	
  5029                           ; 3 bytes @ 0x10
  5030                           
  5031                           
  5032                           ; 3 bytes @ 0x10
  5033  0030                     	ds	1
  5034  0031                     LCD_Write_Int@i:	
  5035                           
  5036                           ; 2 bytes @ 0x11
  5037  0031                     	ds	2
  5038  0033                     ___ftdiv@f1:	
  5039                           
  5040                           ; 3 bytes @ 0x13
  5041  0033                     	ds	3
  5042  0036                     ??___ftdiv:	
  5043                           
  5044                           ; 1 bytes @ 0x16
  5045  0036                     	ds	4
  5046  003A                     ___ftdiv@cntr:	
  5047                           
  5048                           ; 1 bytes @ 0x1A
  5049  003A                     	ds	1
  5050  003B                     ___ftdiv@f3:	
  5051                           
  5052                           ; 3 bytes @ 0x1B
  5053  003B                     	ds	3
  5054  003E                     ___ftdiv@exp:	
  5055                           
  5056                           ; 1 bytes @ 0x1E
  5057  003E                     	ds	1
  5058  003F                     ___ftdiv@sign:	
  5059                           
  5060                           ; 1 bytes @ 0x1F
  5061  003F                     	ds	1
  5062  0040                     ?___ftadd:	
  5063  0040                     ___ftadd@f1:	
  5064                           ; 3 bytes @ 0x20
  5065                           
  5066                           
  5067                           ; 3 bytes @ 0x20
  5068  0040                     	ds	3
  5069  0043                     ___ftadd@f2:	
  5070                           
  5071                           ; 3 bytes @ 0x23
  5072  0043                     	ds	3
  5073  0046                     ??___ftadd:	
  5074                           
  5075                           ; 1 bytes @ 0x26
  5076  0046                     	ds	4
  5077  004A                     ___ftadd@sign:	
  5078                           
  5079                           ; 1 bytes @ 0x2A
  5080  004A                     	ds	1
  5081  004B                     ___ftadd@exp2:	
  5082                           
  5083                           ; 1 bytes @ 0x2B
  5084  004B                     	ds	1
  5085  004C                     ___ftadd@exp1:	
  5086                           
  5087                           ; 1 bytes @ 0x2C
  5088  004C                     	ds	1
  5089  004D                     ?_eval_poly:	
  5090  004D                     ?___ftsub:	
  5091                           ; 3 bytes @ 0x2D
  5092                           
  5093  004D                     ___ftsub@f2:	
  5094                           ; 3 bytes @ 0x2D
  5095                           
  5096  004D                     eval_poly@x:	
  5097                           ; 3 bytes @ 0x2D
  5098                           
  5099                           
  5100                           ; 3 bytes @ 0x2D
  5101  004D                     	ds	3
  5102  0050                     eval_poly@d:	
  5103  0050                     ___ftsub@f1:	
  5104                           ; 2 bytes @ 0x30
  5105                           
  5106                           
  5107                           ; 3 bytes @ 0x30
  5108  0050                     	ds	2
  5109  0052                     eval_poly@n:	
  5110                           
  5111                           ; 2 bytes @ 0x32
  5112  0052                     	ds	2
  5113  0054                     eval_poly@res:	
  5114                           
  5115                           ; 3 bytes @ 0x34
  5116  0054                     	ds	3
  5117  0057                     ?_log:	
  5118  0057                     log@x:	
  5119                           ; 3 bytes @ 0x37
  5120                           
  5121                           
  5122                           ; 3 bytes @ 0x37
  5123  0057                     	ds	3
  5124  005A                     ??_log:	
  5125                           
  5126                           ; 1 bytes @ 0x3A
  5127  005A                     	ds	1
  5128  005B                     log@exponent:	
  5129                           
  5130                           ; 2 bytes @ 0x3B
  5131  005B                     	ds	2
  5132  005D                     ?_tempCalc:	
  5133  005D                     tempCalc@analogValue:	
  5134                           ; 3 bytes @ 0x3D
  5135                           
  5136                           
  5137                           ; 2 bytes @ 0x3D
  5138  005D                     	ds	3
  5139  0060                     tempCalc@R:	
  5140                           
  5141                           ; 3 bytes @ 0x40
  5142  0060                     	ds	3
  5143  0063                     _tempCalc$988:	
  5144                           
  5145                           ; 3 bytes @ 0x43
  5146  0063                     	ds	3
  5147  0066                     tempCalc@steinhart:	
  5148                           
  5149                           ; 3 bytes @ 0x46
  5150  0066                     	ds	3
  5151  0069                     ??_main:	
  5152                           
  5153                           ; 1 bytes @ 0x49
  5154  0069                     	ds	3
  5155                           
  5156                           	psect	maintext
  5157  0142                     __pmaintext:	
  5158 ;;
  5159 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  5160 ;;
  5161 ;; *************** function _main *****************
  5162 ;; Defined at:
  5163 ;;		line 15 in file "main.c"
  5164 ;; Parameters:    Size  Location     Type
  5165 ;;		None
  5166 ;; Auto vars:     Size  Location     Type
  5167 ;;  analogs        12    5[BANK1 ] unsigned int [6]
  5168 ;;  displayTemp2    3   22[BANK1 ] float 
  5169 ;;  displayTemp     3   19[BANK1 ] float 
  5170 ;;  dutyCycle       2   30[BANK1 ] unsigned int 
  5171 ;;  bCount          2   17[BANK1 ] unsigned int 
  5172 ;;  x               1   29[BANK1 ] unsigned char 
  5173 ;;  C_or_F          1   28[BANK1 ] unsigned char 
  5174 ;;  choice          1   27[BANK1 ] unsigned char 
  5175 ;;  tPadCount       1   26[BANK1 ] unsigned char 
  5176 ;;  resetDelay      1   25[BANK1 ] unsigned char 
  5177 ;;  startDelay      1    4[BANK1 ] unsigned char 
  5178 ;;  loop            1    3[BANK1 ] unsigned char 
  5179 ;; Return value:  Size  Location     Type
  5180 ;;                  1    wreg      void 
  5181 ;; Registers used:
  5182 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5183 ;; Tracked objects:
  5184 ;;		On entry : B1F/0
  5185 ;;		On exit  : 0/0
  5186 ;;		Unchanged: 0/0
  5187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5189 ;;      Locals:         0       0      32       0       0       0       0       0       0       0       0       0       
      +0       0
  5190 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5191 ;;      Totals:         0       3      32       0       0       0       0       0       0       0       0       0       
      +0       0
  5192 ;;Total ram usage:       35 bytes
  5193 ;; Hardware stack levels required when called:    5
  5194 ;; This function calls:
  5195 ;;		_ADCRead
  5196 ;;		_LCD_Clear
  5197 ;;		_LCD_Set_Cursor
  5198 ;;		_LCD_Write_Char
  5199 ;;		_LCD_Write_Int
  5200 ;;		_LCD_Write_String
  5201 ;;		_PWM6_LoadDutyValue
  5202 ;;		_SYSTEM_Initialize
  5203 ;;		___ftadd
  5204 ;;		___ftdiv
  5205 ;;		___ftmul
  5206 ;;		___fttol
  5207 ;;		___lwdiv
  5208 ;;		_readAnalog
  5209 ;;		_tempCalc
  5210 ;; This function is called by:
  5211 ;;		Startup code after reset
  5212 ;; This function uses a non-reentrant model
  5213 ;;
  5214                           
  5215                           
  5216                           ;psect for function _main
  5217  0142                     _main:	
  5218                           
  5219                           ;main.c: 17: SYSTEM_Initialize();
  5220                           
  5221                           ;incstack = 0
  5222                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5223  0142  3188  202B  3181   	fcall	_SYSTEM_Initialize
  5224                           
  5225                           ;main.c: 19: uint16_t analogs[6] = {0};
  5226  0145  3030               	movlw	low main@F13657
  5227  0146  0086               	movwf	6
  5228  0147  3001               	movlw	high main@F13657
  5229  0148  0087               	movwf	7
  5230  0149  30A5               	movlw	low main@analogs
  5231  014A  0084               	movwf	4
  5232  014B  3000               	movlw	high main@analogs
  5233  014C  0085               	movwf	5
  5234  014D  300C               	movlw	12
  5235  014E  0020               	movlb	0	; select bank0
  5236  014F  00E9               	movwf	??_main
  5237  0150                     u3210:	
  5238  0150  0016               	moviw fsr1++
  5239  0151  001A               	movwi fsr0++
  5240  0152  0BE9               	decfsz	??_main,f
  5241  0153  2950               	goto	u3210
  5242                           
  5243                           ;main.c: 21: float displayTemp, displayTemp2;
  5244                           ;main.c: 25: char x = 0;
  5245  0154  0021               	movlb	1	; select bank1
  5246  0155  01BD               	clrf	main@x^(0+128)
  5247                           
  5248                           ;main.c: 27: char loop = 64;
  5249  0156  3040               	movlw	64
  5250  0157  0020               	movlb	0	; select bank0
  5251  0158  00E9               	movwf	??_main
  5252  0159  0869               	movf	??_main,w
  5253  015A  0021               	movlb	1	; select bank1
  5254  015B  00A3               	movwf	main@loop^(0+128)
  5255                           
  5256                           ;main.c: 29: char choice = 2;
  5257  015C  3002               	movlw	2
  5258  015D  0020               	movlb	0	; select bank0
  5259  015E  00E9               	movwf	??_main
  5260  015F  0869               	movf	??_main,w
  5261  0160  0021               	movlb	1	; select bank1
  5262  0161  00BB               	movwf	main@choice^(0+128)
  5263                           
  5264                           ;main.c: 31: char C_or_F = 1;
  5265  0162  01BC               	clrf	main@C_or_F^(0+128)
  5266  0163  0ABC               	incf	main@C_or_F^(0+128),f
  5267                           
  5268                           ;main.c: 33: unsigned int bCount = 0;
  5269  0164  01B1               	clrf	main@bCount^(0+128)
  5270  0165  01B2               	clrf	(main@bCount+1)^(0+128)
  5271                           
  5272                           ;main.c: 35: unsigned char startDelay= 0;
  5273  0166  01A4               	clrf	main@startDelay^(0+128)
  5274                           
  5275                           ;main.c: 37: unsigned char resetDelay= 0;
  5276  0167  01B9               	clrf	main@resetDelay^(0+128)
  5277                           
  5278                           ;main.c: 39: unsigned char tPadCount = 10;
  5279  0168  300A               	movlw	10
  5280  0169  0020               	movlb	0	; select bank0
  5281  016A  00E9               	movwf	??_main
  5282  016B  0869               	movf	??_main,w
  5283  016C  0021               	movlb	1	; select bank1
  5284  016D  00BA               	movwf	main@tPadCount^(0+128)
  5285                           
  5286                           ;main.c: 42: uint16_t dutyCycle = 1023;
  5287  016E  30FF               	movlw	255
  5288  016F  00BE               	movwf	main@dutyCycle^(0+128)
  5289  0170  3003               	movlw	3
  5290  0171  00BF               	movwf	(main@dutyCycle^(0+128)+1)
  5291                           
  5292                           ;main.c: 44: PWM6_LoadDutyValue(dutyCycle);
  5293  0172  083F               	movf	(main@dutyCycle+1)^(0+128),w
  5294  0173  00F1               	movwf	PWM6_LoadDutyValue@dutyCycle+1
  5295  0174  083E               	movf	main@dutyCycle^(0+128),w
  5296  0175  00F0               	movwf	PWM6_LoadDutyValue@dutyCycle
  5297  0176  3195  25FA  3181   	fcall	_PWM6_LoadDutyValue
  5298                           
  5299                           ;main.c: 46: _delay((unsigned long)((300)*(32000000/4000.0)));
  5300  0179  300D               	movlw	13
  5301  017A  0020               	movlb	0	; select bank0
  5302  017B  00EB               	movwf	??_main+2
  5303  017C  302D               	movlw	45
  5304  017D  00EA               	movwf	??_main+1
  5305  017E  30E2               	movlw	226
  5306  017F  00E9               	movwf	??_main
  5307  0180                     u3497:	
  5308  0180  0BE9               	decfsz	??_main,f
  5309  0181  2980               	goto	u3497
  5310  0182  0BEA               	decfsz	??_main+1,f
  5311  0183  2980               	goto	u3497
  5312  0184  0BEB               	decfsz	??_main+2,f
  5313  0185  2980               	goto	u3497
  5314  0186  3200               	nop2
  5315                           
  5316                           ;main.c: 48: LCD_Clear();
  5317  0187  3195  2588  3181   	fcall	_LCD_Clear
  5318                           
  5319                           ;main.c: 50: { LCD_Set_Cursor(2,0); LCD_Write_String("A");};
  5320  018A  01F4               	clrf	LCD_Set_Cursor@y
  5321  018B  3002               	movlw	2
  5322  018C  3197  27C1  3181   	fcall	_LCD_Set_Cursor
  5323  018F  3063               	movlw	low (STR_1| (0+32768))
  5324  0190  00F5               	movwf	LCD_Write_String@a
  5325  0191  3090               	movlw	high (STR_1| (0+32768))
  5326  0192  00F6               	movwf	LCD_Write_String@a+1
  5327  0193  3196  2628  3181   	fcall	_LCD_Write_String
  5328                           
  5329                           ;main.c: 51: _delay((unsigned long)((200)*(32000000/4000.0)));
  5330  0196  3009               	movlw	9
  5331  0197  0020               	movlb	0	; select bank0
  5332  0198  00EB               	movwf	??_main+2
  5333  0199  301E               	movlw	30
  5334  019A  00EA               	movwf	??_main+1
  5335  019B  30EB               	movlw	235
  5336  019C  00E9               	movwf	??_main
  5337  019D                     u3507:	
  5338  019D  0BE9               	decfsz	??_main,f
  5339  019E  299D               	goto	u3507
  5340  019F  0BEA               	decfsz	??_main+1,f
  5341  01A0  299D               	goto	u3507
  5342  01A1  0BEB               	decfsz	??_main+2,f
  5343  01A2  299D               	goto	u3507
  5344  01A3  0000               	nop
  5345                           
  5346                           ;main.c: 52: LCD_Write_String("L");
  5347  01A4  306F               	movlw	low (STR_2| (0+32768))
  5348  01A5  00F5               	movwf	LCD_Write_String@a
  5349  01A6  3090               	movlw	high (STR_2| (0+32768))
  5350  01A7  00F6               	movwf	LCD_Write_String@a+1
  5351  01A8  3196  2628  3181   	fcall	_LCD_Write_String
  5352                           
  5353                           ;main.c: 53: _delay((unsigned long)((200)*(32000000/4000.0)));
  5354  01AB  3009               	movlw	9
  5355  01AC  0020               	movlb	0	; select bank0
  5356  01AD  00EB               	movwf	??_main+2
  5357  01AE  301E               	movlw	30
  5358  01AF  00EA               	movwf	??_main+1
  5359  01B0  30EB               	movlw	235
  5360  01B1  00E9               	movwf	??_main
  5361  01B2                     u3517:	
  5362  01B2  0BE9               	decfsz	??_main,f
  5363  01B3  29B2               	goto	u3517
  5364  01B4  0BEA               	decfsz	??_main+1,f
  5365  01B5  29B2               	goto	u3517
  5366  01B6  0BEB               	decfsz	??_main+2,f
  5367  01B7  29B2               	goto	u3517
  5368  01B8  0000               	nop
  5369                           
  5370                           ;main.c: 54: LCD_Write_String("O");
  5371  01B9  3071               	movlw	low (STR_3| (0+32768))
  5372  01BA  00F5               	movwf	LCD_Write_String@a
  5373  01BB  3090               	movlw	high (STR_3| (0+32768))
  5374  01BC  00F6               	movwf	LCD_Write_String@a+1
  5375  01BD  3196  2628  3181   	fcall	_LCD_Write_String
  5376                           
  5377                           ;main.c: 55: _delay((unsigned long)((200)*(32000000/4000.0)));
  5378  01C0  3009               	movlw	9
  5379  01C1  0020               	movlb	0	; select bank0
  5380  01C2  00EB               	movwf	??_main+2
  5381  01C3  301E               	movlw	30
  5382  01C4  00EA               	movwf	??_main+1
  5383  01C5  30EB               	movlw	235
  5384  01C6  00E9               	movwf	??_main
  5385  01C7                     u3527:	
  5386  01C7  0BE9               	decfsz	??_main,f
  5387  01C8  29C7               	goto	u3527
  5388  01C9  0BEA               	decfsz	??_main+1,f
  5389  01CA  29C7               	goto	u3527
  5390  01CB  0BEB               	decfsz	??_main+2,f
  5391  01CC  29C7               	goto	u3527
  5392  01CD  0000               	nop
  5393                           
  5394                           ;main.c: 56: LCD_Write_String("H");
  5395  01CE  3069               	movlw	low (STR_4| (0+32768))
  5396  01CF  00F5               	movwf	LCD_Write_String@a
  5397  01D0  3090               	movlw	high (STR_4| (0+32768))
  5398  01D1  00F6               	movwf	LCD_Write_String@a+1
  5399  01D2  3196  2628  3181   	fcall	_LCD_Write_String
  5400                           
  5401                           ;main.c: 57: _delay((unsigned long)((200)*(32000000/4000.0)));
  5402  01D5  3009               	movlw	9
  5403  01D6  0020               	movlb	0	; select bank0
  5404  01D7  00EB               	movwf	??_main+2
  5405  01D8  301E               	movlw	30
  5406  01D9  00EA               	movwf	??_main+1
  5407  01DA  30EB               	movlw	235
  5408  01DB  00E9               	movwf	??_main
  5409  01DC                     u3537:	
  5410  01DC  0BE9               	decfsz	??_main,f
  5411  01DD  29DC               	goto	u3537
  5412  01DE  0BEA               	decfsz	??_main+1,f
  5413  01DF  29DC               	goto	u3537
  5414  01E0  0BEB               	decfsz	??_main+2,f
  5415  01E1  29DC               	goto	u3537
  5416  01E2  0000               	nop
  5417                           
  5418                           ;main.c: 58: LCD_Write_String("A");
  5419  01E3  3063               	movlw	low (STR_1| (0+32768))
  5420  01E4  00F5               	movwf	LCD_Write_String@a
  5421  01E5  3090               	movlw	high (STR_1| (0+32768))
  5422  01E6  00F6               	movwf	LCD_Write_String@a+1
  5423  01E7  3196  2628  3181   	fcall	_LCD_Write_String
  5424                           
  5425                           ;main.c: 59: _delay((unsigned long)((200)*(32000000/4000.0)));
  5426  01EA  3009               	movlw	9
  5427  01EB  0020               	movlb	0	; select bank0
  5428  01EC  00EB               	movwf	??_main+2
  5429  01ED  301E               	movlw	30
  5430  01EE  00EA               	movwf	??_main+1
  5431  01EF  30EB               	movlw	235
  5432  01F0  00E9               	movwf	??_main
  5433  01F1                     u3547:	
  5434  01F1  0BE9               	decfsz	??_main,f
  5435  01F2  29F1               	goto	u3547
  5436  01F3  0BEA               	decfsz	??_main+1,f
  5437  01F4  29F1               	goto	u3547
  5438  01F5  0BEB               	decfsz	??_main+2,f
  5439  01F6  29F1               	goto	u3547
  5440  01F7  0000               	nop
  5441                           
  5442                           ;main.c: 60: LCD_Write_String(" ");
  5443  01F8  3035               	movlw	low ((STR_27+9)| (0+32768))
  5444  01F9  00F5               	movwf	LCD_Write_String@a
  5445  01FA  3090               	movlw	high ((STR_27+9)| (0+32768))
  5446  01FB  00F6               	movwf	LCD_Write_String@a+1
  5447  01FC  3196  2628  3181   	fcall	_LCD_Write_String
  5448                           
  5449                           ;main.c: 61: _delay((unsigned long)((200)*(32000000/4000.0)));
  5450  01FF  3009               	movlw	9
  5451  0200  0020               	movlb	0	; select bank0
  5452  0201  00EB               	movwf	??_main+2
  5453  0202  301E               	movlw	30
  5454  0203  00EA               	movwf	??_main+1
  5455  0204  30EB               	movlw	235
  5456  0205  00E9               	movwf	??_main
  5457  0206                     u3557:	
  5458  0206  0BE9               	decfsz	??_main,f
  5459  0207  2A06               	goto	u3557
  5460  0208  0BEA               	decfsz	??_main+1,f
  5461  0209  2A06               	goto	u3557
  5462  020A  0BEB               	decfsz	??_main+2,f
  5463  020B  2A06               	goto	u3557
  5464  020C  0000               	nop
  5465                           
  5466                           ;main.c: 62: LCD_Write_String("D");
  5467  020D  3065               	movlw	low (STR_7| (0+32768))
  5468  020E  00F5               	movwf	LCD_Write_String@a
  5469  020F  3090               	movlw	high (STR_7| (0+32768))
  5470  0210  00F6               	movwf	LCD_Write_String@a+1
  5471  0211  3196  2628  3181   	fcall	_LCD_Write_String
  5472                           
  5473                           ;main.c: 63: _delay((unsigned long)((200)*(32000000/4000.0)));
  5474  0214  3009               	movlw	9
  5475  0215  0020               	movlb	0	; select bank0
  5476  0216  00EB               	movwf	??_main+2
  5477  0217  301E               	movlw	30
  5478  0218  00EA               	movwf	??_main+1
  5479  0219  30EB               	movlw	235
  5480  021A  00E9               	movwf	??_main
  5481  021B                     u3567:	
  5482  021B  0BE9               	decfsz	??_main,f
  5483  021C  2A1B               	goto	u3567
  5484  021D  0BEA               	decfsz	??_main+1,f
  5485  021E  2A1B               	goto	u3567
  5486  021F  0BEB               	decfsz	??_main+2,f
  5487  0220  2A1B               	goto	u3567
  5488  0221  0000               	nop
  5489                           
  5490                           ;main.c: 64: LCD_Write_String("A");
  5491  0222  3063               	movlw	low (STR_1| (0+32768))
  5492  0223  00F5               	movwf	LCD_Write_String@a
  5493  0224  3090               	movlw	high (STR_1| (0+32768))
  5494  0225  00F6               	movwf	LCD_Write_String@a+1
  5495  0226  3196  2628  3181   	fcall	_LCD_Write_String
  5496                           
  5497                           ;main.c: 65: _delay((unsigned long)((200)*(32000000/4000.0)));
  5498  0229  3009               	movlw	9
  5499  022A  0020               	movlb	0	; select bank0
  5500  022B  00EB               	movwf	??_main+2
  5501  022C  301E               	movlw	30
  5502  022D  00EA               	movwf	??_main+1
  5503  022E  30EB               	movlw	235
  5504  022F  00E9               	movwf	??_main
  5505  0230                     u3577:	
  5506  0230  0BE9               	decfsz	??_main,f
  5507  0231  2A30               	goto	u3577
  5508  0232  0BEA               	decfsz	??_main+1,f
  5509  0233  2A30               	goto	u3577
  5510  0234  0BEB               	decfsz	??_main+2,f
  5511  0235  2A30               	goto	u3577
  5512  0236  0000               	nop
  5513                           
  5514                           ;main.c: 66: LCD_Write_String("V");
  5515  0237  3077               	movlw	low (STR_9| (0+32768))
  5516  0238  00F5               	movwf	LCD_Write_String@a
  5517  0239  3090               	movlw	high (STR_9| (0+32768))
  5518  023A  00F6               	movwf	LCD_Write_String@a+1
  5519  023B  3196  2628  3181   	fcall	_LCD_Write_String
  5520                           
  5521                           ;main.c: 67: _delay((unsigned long)((200)*(32000000/4000.0)));
  5522  023E  3009               	movlw	9
  5523  023F  0020               	movlb	0	; select bank0
  5524  0240  00EB               	movwf	??_main+2
  5525  0241  301E               	movlw	30
  5526  0242  00EA               	movwf	??_main+1
  5527  0243  30EB               	movlw	235
  5528  0244  00E9               	movwf	??_main
  5529  0245                     u3587:	
  5530  0245  0BE9               	decfsz	??_main,f
  5531  0246  2A45               	goto	u3587
  5532  0247  0BEA               	decfsz	??_main+1,f
  5533  0248  2A45               	goto	u3587
  5534  0249  0BEB               	decfsz	??_main+2,f
  5535  024A  2A45               	goto	u3587
  5536  024B  0000               	nop
  5537                           
  5538                           ;main.c: 68: LCD_Write_String("I");
  5539  024C  306B               	movlw	low (STR_10| (0+32768))
  5540  024D  00F5               	movwf	LCD_Write_String@a
  5541  024E  3090               	movlw	high (STR_10| (0+32768))
  5542  024F  00F6               	movwf	LCD_Write_String@a+1
  5543  0250  3196  2628  3181   	fcall	_LCD_Write_String
  5544                           
  5545                           ;main.c: 69: _delay((unsigned long)((200)*(32000000/4000.0)));
  5546  0253  3009               	movlw	9
  5547  0254  0020               	movlb	0	; select bank0
  5548  0255  00EB               	movwf	??_main+2
  5549  0256  301E               	movlw	30
  5550  0257  00EA               	movwf	??_main+1
  5551  0258  30EB               	movlw	235
  5552  0259  00E9               	movwf	??_main
  5553  025A                     u3597:	
  5554  025A  0BE9               	decfsz	??_main,f
  5555  025B  2A5A               	goto	u3597
  5556  025C  0BEA               	decfsz	??_main+1,f
  5557  025D  2A5A               	goto	u3597
  5558  025E  0BEB               	decfsz	??_main+2,f
  5559  025F  2A5A               	goto	u3597
  5560  0260  0000               	nop
  5561                           
  5562                           ;main.c: 70: LCD_Write_String("D");
  5563  0261  3065               	movlw	low (STR_7| (0+32768))
  5564  0262  00F5               	movwf	LCD_Write_String@a
  5565  0263  3090               	movlw	high (STR_7| (0+32768))
  5566  0264  00F6               	movwf	LCD_Write_String@a+1
  5567  0265  3196  2628  3181   	fcall	_LCD_Write_String
  5568                           
  5569                           ;main.c: 71: _delay((unsigned long)((200)*(32000000/4000.0)));
  5570  0268  3009               	movlw	9
  5571  0269  0020               	movlb	0	; select bank0
  5572  026A  00EB               	movwf	??_main+2
  5573  026B  301E               	movlw	30
  5574  026C  00EA               	movwf	??_main+1
  5575  026D  30EB               	movlw	235
  5576  026E  00E9               	movwf	??_main
  5577  026F                     u3607:	
  5578  026F  0BE9               	decfsz	??_main,f
  5579  0270  2A6F               	goto	u3607
  5580  0271  0BEA               	decfsz	??_main+1,f
  5581  0272  2A6F               	goto	u3607
  5582  0273  0BEB               	decfsz	??_main+2,f
  5583  0274  2A6F               	goto	u3607
  5584  0275  0000               	nop
  5585                           
  5586                           ;main.c: 72: LCD_Write_String(",");
  5587  0276  3061               	movlw	low (STR_12| (0+32768))
  5588  0277  00F5               	movwf	LCD_Write_String@a
  5589  0278  3090               	movlw	high (STR_12| (0+32768))
  5590  0279  00F6               	movwf	LCD_Write_String@a+1
  5591  027A  3196  2628  3181   	fcall	_LCD_Write_String
  5592                           
  5593                           ;main.c: 73: _delay((unsigned long)((200)*(32000000/4000.0)));
  5594  027D  3009               	movlw	9
  5595  027E  0020               	movlb	0	; select bank0
  5596  027F  00EB               	movwf	??_main+2
  5597  0280  301E               	movlw	30
  5598  0281  00EA               	movwf	??_main+1
  5599  0282  30EB               	movlw	235
  5600  0283  00E9               	movwf	??_main
  5601  0284                     u3617:	
  5602  0284  0BE9               	decfsz	??_main,f
  5603  0285  2A84               	goto	u3617
  5604  0286  0BEA               	decfsz	??_main+1,f
  5605  0287  2A84               	goto	u3617
  5606  0288  0BEB               	decfsz	??_main+2,f
  5607  0289  2A84               	goto	u3617
  5608  028A  0000               	nop
  5609                           
  5610                           ;main.c: 74: { LCD_Set_Cursor(1,1); LCD_Write_String("S");};
  5611  028B  01F4               	clrf	LCD_Set_Cursor@y
  5612  028C  0AF4               	incf	LCD_Set_Cursor@y,f
  5613  028D  3001               	movlw	1
  5614  028E  3197  27C1  3181   	fcall	_LCD_Set_Cursor
  5615  0291  3075               	movlw	low (STR_13| (0+32768))
  5616  0292  00F5               	movwf	LCD_Write_String@a
  5617  0293  3090               	movlw	high (STR_13| (0+32768))
  5618  0294  00F6               	movwf	LCD_Write_String@a+1
  5619  0295  3196  2628  3181   	fcall	_LCD_Write_String
  5620                           
  5621                           ;main.c: 75: _delay((unsigned long)((200)*(32000000/4000.0)));
  5622  0298  3009               	movlw	9
  5623  0299  0020               	movlb	0	; select bank0
  5624  029A  00EB               	movwf	??_main+2
  5625  029B  301E               	movlw	30
  5626  029C  00EA               	movwf	??_main+1
  5627  029D  30EB               	movlw	235
  5628  029E  00E9               	movwf	??_main
  5629  029F                     u3627:	
  5630  029F  0BE9               	decfsz	??_main,f
  5631  02A0  2A9F               	goto	u3627
  5632  02A1  0BEA               	decfsz	??_main+1,f
  5633  02A2  2A9F               	goto	u3627
  5634  02A3  0BEB               	decfsz	??_main+2,f
  5635  02A4  2A9F               	goto	u3627
  5636  02A5  0000               	nop
  5637                           
  5638                           ;main.c: 76: LCD_Write_String("O");
  5639  02A6  3071               	movlw	low (STR_3| (0+32768))
  5640  02A7  00F5               	movwf	LCD_Write_String@a
  5641  02A8  3090               	movlw	high (STR_3| (0+32768))
  5642  02A9  00F6               	movwf	LCD_Write_String@a+1
  5643  02AA  3196  2628  3181   	fcall	_LCD_Write_String
  5644                           
  5645                           ;main.c: 77: _delay((unsigned long)((200)*(32000000/4000.0)));
  5646  02AD  3009               	movlw	9
  5647  02AE  0020               	movlb	0	; select bank0
  5648  02AF  00EB               	movwf	??_main+2
  5649  02B0  301E               	movlw	30
  5650  02B1  00EA               	movwf	??_main+1
  5651  02B2  30EB               	movlw	235
  5652  02B3  00E9               	movwf	??_main
  5653  02B4                     u3637:	
  5654  02B4  0BE9               	decfsz	??_main,f
  5655  02B5  2AB4               	goto	u3637
  5656  02B6  0BEA               	decfsz	??_main+1,f
  5657  02B7  2AB4               	goto	u3637
  5658  02B8  0BEB               	decfsz	??_main+2,f
  5659  02B9  2AB4               	goto	u3637
  5660  02BA  0000               	nop
  5661                           
  5662                           ;main.c: 78: LCD_Write_String("P");
  5663  02BB  3073               	movlw	low (STR_15| (0+32768))
  5664  02BC  00F5               	movwf	LCD_Write_String@a
  5665  02BD  3090               	movlw	high (STR_15| (0+32768))
  5666  02BE  00F6               	movwf	LCD_Write_String@a+1
  5667  02BF  3196  2628  3181   	fcall	_LCD_Write_String
  5668                           
  5669                           ;main.c: 79: _delay((unsigned long)((200)*(32000000/4000.0)));
  5670  02C2  3009               	movlw	9
  5671  02C3  0020               	movlb	0	; select bank0
  5672  02C4  00EB               	movwf	??_main+2
  5673  02C5  301E               	movlw	30
  5674  02C6  00EA               	movwf	??_main+1
  5675  02C7  30EB               	movlw	235
  5676  02C8  00E9               	movwf	??_main
  5677  02C9                     u3647:	
  5678  02C9  0BE9               	decfsz	??_main,f
  5679  02CA  2AC9               	goto	u3647
  5680  02CB  0BEA               	decfsz	??_main+1,f
  5681  02CC  2AC9               	goto	u3647
  5682  02CD  0BEB               	decfsz	??_main+2,f
  5683  02CE  2AC9               	goto	u3647
  5684  02CF  0000               	nop
  5685                           
  5686                           ;main.c: 80: LCD_Write_String("H");
  5687  02D0  3069               	movlw	low (STR_4| (0+32768))
  5688  02D1  00F5               	movwf	LCD_Write_String@a
  5689  02D2  3090               	movlw	high (STR_4| (0+32768))
  5690  02D3  00F6               	movwf	LCD_Write_String@a+1
  5691  02D4  3196  2628  3181   	fcall	_LCD_Write_String
  5692                           
  5693                           ;main.c: 81: _delay((unsigned long)((200)*(32000000/4000.0)));
  5694  02D7  3009               	movlw	9
  5695  02D8  0020               	movlb	0	; select bank0
  5696  02D9  00EB               	movwf	??_main+2
  5697  02DA  301E               	movlw	30
  5698  02DB  00EA               	movwf	??_main+1
  5699  02DC  30EB               	movlw	235
  5700  02DD  00E9               	movwf	??_main
  5701  02DE                     u3657:	
  5702  02DE  0BE9               	decfsz	??_main,f
  5703  02DF  2ADE               	goto	u3657
  5704  02E0  0BEA               	decfsz	??_main+1,f
  5705  02E1  2ADE               	goto	u3657
  5706  02E2  0BEB               	decfsz	??_main+2,f
  5707  02E3  2ADE               	goto	u3657
  5708  02E4  0000               	nop
  5709                           
  5710                           ;main.c: 82: LCD_Write_String("I");
  5711  02E5  306B               	movlw	low (STR_10| (0+32768))
  5712  02E6  00F5               	movwf	LCD_Write_String@a
  5713  02E7  3090               	movlw	high (STR_10| (0+32768))
  5714  02E8  00F6               	movwf	LCD_Write_String@a+1
  5715  02E9  3196  2628  3181   	fcall	_LCD_Write_String
  5716                           
  5717                           ;main.c: 83: _delay((unsigned long)((200)*(32000000/4000.0)));
  5718  02EC  3009               	movlw	9
  5719  02ED  0020               	movlb	0	; select bank0
  5720  02EE  00EB               	movwf	??_main+2
  5721  02EF  301E               	movlw	30
  5722  02F0  00EA               	movwf	??_main+1
  5723  02F1  30EB               	movlw	235
  5724  02F2  00E9               	movwf	??_main
  5725  02F3                     u3667:	
  5726  02F3  0BE9               	decfsz	??_main,f
  5727  02F4  2AF3               	goto	u3667
  5728  02F5  0BEA               	decfsz	??_main+1,f
  5729  02F6  2AF3               	goto	u3667
  5730  02F7  0BEB               	decfsz	??_main+2,f
  5731  02F8  2AF3               	goto	u3667
  5732  02F9  0000               	nop
  5733                           
  5734                           ;main.c: 84: LCD_Write_String("E");
  5735  02FA  3067               	movlw	low (STR_18| (0+32768))
  5736  02FB  00F5               	movwf	LCD_Write_String@a
  5737  02FC  3090               	movlw	high (STR_18| (0+32768))
  5738  02FD  00F6               	movwf	LCD_Write_String@a+1
  5739  02FE  3196  2628  3181   	fcall	_LCD_Write_String
  5740                           
  5741                           ;main.c: 85: _delay((unsigned long)((200)*(32000000/4000.0)));
  5742  0301  3009               	movlw	9
  5743  0302  0020               	movlb	0	; select bank0
  5744  0303  00EB               	movwf	??_main+2
  5745  0304  301E               	movlw	30
  5746  0305  00EA               	movwf	??_main+1
  5747  0306  30EB               	movlw	235
  5748  0307  00E9               	movwf	??_main
  5749  0308                     u3677:	
  5750  0308  0BE9               	decfsz	??_main,f
  5751  0309  2B08               	goto	u3677
  5752  030A  0BEA               	decfsz	??_main+1,f
  5753  030B  2B08               	goto	u3677
  5754  030C  0BEB               	decfsz	??_main+2,f
  5755  030D  2B08               	goto	u3677
  5756  030E  0000               	nop
  5757                           
  5758                           ;main.c: 86: LCD_Write_String(" ");
  5759  030F  3035               	movlw	low ((STR_27+9)| (0+32768))
  5760  0310  00F5               	movwf	LCD_Write_String@a
  5761  0311  3090               	movlw	high ((STR_27+9)| (0+32768))
  5762  0312  00F6               	movwf	LCD_Write_String@a+1
  5763  0313  3196  2628  3181   	fcall	_LCD_Write_String
  5764                           
  5765                           ;main.c: 87: _delay((unsigned long)((200)*(32000000/4000.0)));
  5766  0316  3009               	movlw	9
  5767  0317  0020               	movlb	0	; select bank0
  5768  0318  00EB               	movwf	??_main+2
  5769  0319  301E               	movlw	30
  5770  031A  00EA               	movwf	??_main+1
  5771  031B  30EB               	movlw	235
  5772  031C  00E9               	movwf	??_main
  5773  031D                     u3687:	
  5774  031D  0BE9               	decfsz	??_main,f
  5775  031E  2B1D               	goto	u3687
  5776  031F  0BEA               	decfsz	??_main+1,f
  5777  0320  2B1D               	goto	u3687
  5778  0321  0BEB               	decfsz	??_main+2,f
  5779  0322  2B1D               	goto	u3687
  5780  0323  0000               	nop
  5781                           
  5782                           ;main.c: 88: LCD_Write_String("&");
  5783  0324  305F               	movlw	low (STR_20| (0+32768))
  5784  0325  00F5               	movwf	LCD_Write_String@a
  5785  0326  3090               	movlw	high (STR_20| (0+32768))
  5786  0327  00F6               	movwf	LCD_Write_String@a+1
  5787  0328  3196  2628  3181   	fcall	_LCD_Write_String
  5788                           
  5789                           ;main.c: 89: _delay((unsigned long)((200)*(32000000/4000.0)));
  5790  032B  3009               	movlw	9
  5791  032C  0020               	movlb	0	; select bank0
  5792  032D  00EB               	movwf	??_main+2
  5793  032E  301E               	movlw	30
  5794  032F  00EA               	movwf	??_main+1
  5795  0330  30EB               	movlw	235
  5796  0331  00E9               	movwf	??_main
  5797  0332                     u3697:	
  5798  0332  0BE9               	decfsz	??_main,f
  5799  0333  2B32               	goto	u3697
  5800  0334  0BEA               	decfsz	??_main+1,f
  5801  0335  2B32               	goto	u3697
  5802  0336  0BEB               	decfsz	??_main+2,f
  5803  0337  2B32               	goto	u3697
  5804  0338  0000               	nop
  5805                           
  5806                           ;main.c: 90: LCD_Write_String(" ");
  5807  0339  3035               	movlw	low ((STR_27+9)| (0+32768))
  5808  033A  00F5               	movwf	LCD_Write_String@a
  5809  033B  3090               	movlw	high ((STR_27+9)| (0+32768))
  5810  033C  00F6               	movwf	LCD_Write_String@a+1
  5811  033D  3196  2628  3181   	fcall	_LCD_Write_String
  5812                           
  5813                           ;main.c: 91: _delay((unsigned long)((200)*(32000000/4000.0)));
  5814  0340  3009               	movlw	9
  5815  0341  0020               	movlb	0	; select bank0
  5816  0342  00EB               	movwf	??_main+2
  5817  0343  301E               	movlw	30
  5818  0344  00EA               	movwf	??_main+1
  5819  0345  30EB               	movlw	235
  5820  0346  00E9               	movwf	??_main
  5821  0347                     u3707:	
  5822  0347  0BE9               	decfsz	??_main,f
  5823  0348  2B47               	goto	u3707
  5824  0349  0BEA               	decfsz	??_main+1,f
  5825  034A  2B47               	goto	u3707
  5826  034B  0BEB               	decfsz	??_main+2,f
  5827  034C  2B47               	goto	u3707
  5828  034D  0000               	nop
  5829                           
  5830                           ;main.c: 92: LCD_Write_String("K");
  5831  034E  306D               	movlw	low (STR_22| (0+32768))
  5832  034F  00F5               	movwf	LCD_Write_String@a
  5833  0350  3090               	movlw	high (STR_22| (0+32768))
  5834  0351  00F6               	movwf	LCD_Write_String@a+1
  5835  0352  3196  2628  3181   	fcall	_LCD_Write_String
  5836                           
  5837                           ;main.c: 93: _delay((unsigned long)((200)*(32000000/4000.0)));
  5838  0355  3009               	movlw	9
  5839  0356  0020               	movlb	0	; select bank0
  5840  0357  00EB               	movwf	??_main+2
  5841  0358  301E               	movlw	30
  5842  0359  00EA               	movwf	??_main+1
  5843  035A  30EB               	movlw	235
  5844  035B  00E9               	movwf	??_main
  5845  035C                     u3717:	
  5846  035C  0BE9               	decfsz	??_main,f
  5847  035D  2B5C               	goto	u3717
  5848  035E  0BEA               	decfsz	??_main+1,f
  5849  035F  2B5C               	goto	u3717
  5850  0360  0BEB               	decfsz	??_main+2,f
  5851  0361  2B5C               	goto	u3717
  5852  0362  0000               	nop
  5853                           
  5854                           ;main.c: 94: LCD_Write_String("I");
  5855  0363  306B               	movlw	low (STR_10| (0+32768))
  5856  0364  00F5               	movwf	LCD_Write_String@a
  5857  0365  3090               	movlw	high (STR_10| (0+32768))
  5858  0366  00F6               	movwf	LCD_Write_String@a+1
  5859  0367  3196  2628  3181   	fcall	_LCD_Write_String
  5860                           
  5861                           ;main.c: 95: _delay((unsigned long)((200)*(32000000/4000.0)));
  5862  036A  3009               	movlw	9
  5863  036B  0020               	movlb	0	; select bank0
  5864  036C  00EB               	movwf	??_main+2
  5865  036D  301E               	movlw	30
  5866  036E  00EA               	movwf	??_main+1
  5867  036F  30EB               	movlw	235
  5868  0370  00E9               	movwf	??_main
  5869  0371                     u3727:	
  5870  0371  0BE9               	decfsz	??_main,f
  5871  0372  2B71               	goto	u3727
  5872  0373  0BEA               	decfsz	??_main+1,f
  5873  0374  2B71               	goto	u3727
  5874  0375  0BEB               	decfsz	??_main+2,f
  5875  0376  2B71               	goto	u3727
  5876  0377  0000               	nop
  5877                           
  5878                           ;main.c: 96: LCD_Write_String("D");
  5879  0378  3065               	movlw	low (STR_7| (0+32768))
  5880  0379  00F5               	movwf	LCD_Write_String@a
  5881  037A  3090               	movlw	high (STR_7| (0+32768))
  5882  037B  00F6               	movwf	LCD_Write_String@a+1
  5883  037C  3196  2628  3181   	fcall	_LCD_Write_String
  5884                           
  5885                           ;main.c: 97: _delay((unsigned long)((200)*(32000000/4000.0)));
  5886  037F  3009               	movlw	9
  5887  0380  0020               	movlb	0	; select bank0
  5888  0381  00EB               	movwf	??_main+2
  5889  0382  301E               	movlw	30
  5890  0383  00EA               	movwf	??_main+1
  5891  0384  30EB               	movlw	235
  5892  0385  00E9               	movwf	??_main
  5893  0386                     u3737:	
  5894  0386  0BE9               	decfsz	??_main,f
  5895  0387  2B86               	goto	u3737
  5896  0388  0BEA               	decfsz	??_main+1,f
  5897  0389  2B86               	goto	u3737
  5898  038A  0BEB               	decfsz	??_main+2,f
  5899  038B  2B86               	goto	u3737
  5900  038C  0000               	nop
  5901                           
  5902                           ;main.c: 98: LCD_Write_String("S");
  5903  038D  3075               	movlw	low (STR_13| (0+32768))
  5904  038E  00F5               	movwf	LCD_Write_String@a
  5905  038F  3090               	movlw	high (STR_13| (0+32768))
  5906  0390  00F6               	movwf	LCD_Write_String@a+1
  5907  0391  3196  2628  3181   	fcall	_LCD_Write_String
  5908                           
  5909                           ;main.c: 99: _delay((unsigned long)((200)*(32000000/4000.0)));
  5910  0394  3009               	movlw	9
  5911  0395  0020               	movlb	0	; select bank0
  5912  0396  00EB               	movwf	??_main+2
  5913  0397  301E               	movlw	30
  5914  0398  00EA               	movwf	??_main+1
  5915  0399  30EB               	movlw	235
  5916  039A  00E9               	movwf	??_main
  5917  039B                     u3747:	
  5918  039B  0BE9               	decfsz	??_main,f
  5919  039C  2B9B               	goto	u3747
  5920  039D  0BEA               	decfsz	??_main+1,f
  5921  039E  2B9B               	goto	u3747
  5922  039F  0BEB               	decfsz	??_main+2,f
  5923  03A0  2B9B               	goto	u3747
  5924  03A1  0000               	nop
  5925                           
  5926                           ;main.c: 100: LCD_Write_String("!");
  5927  03A2  305D               	movlw	low (STR_26| (0+32768))
  5928  03A3  00F5               	movwf	LCD_Write_String@a
  5929  03A4  3090               	movlw	high (STR_26| (0+32768))
  5930  03A5  00F6               	movwf	LCD_Write_String@a+1
  5931  03A6  3196  2628  3181   	fcall	_LCD_Write_String
  5932                           
  5933                           ;main.c: 101: _delay((unsigned long)((5000)*(32000000/4000.0)));
  5934  03A9  30CB               	movlw	203
  5935  03AA  0020               	movlb	0	; select bank0
  5936  03AB  00EB               	movwf	??_main+2
  5937  03AC  30ED               	movlw	237
  5938  03AD  00EA               	movwf	??_main+1
  5939  03AE  304C               	movlw	76
  5940  03AF  00E9               	movwf	??_main
  5941  03B0                     u3757:	
  5942  03B0  0BE9               	decfsz	??_main,f
  5943  03B1  2BB0               	goto	u3757
  5944  03B2  0BEA               	decfsz	??_main+1,f
  5945  03B3  2BB0               	goto	u3757
  5946  03B4  0BEB               	decfsz	??_main+2,f
  5947  03B5  2BB0               	goto	u3757
  5948  03B6  3200               	nop2
  5949                           
  5950                           ;main.c: 103: LCD_Clear();
  5951  03B7  3195  2588  3181   	fcall	_LCD_Clear
  5952                           
  5953                           ;main.c: 105: PWM6_LoadDutyValue(dutyCycle);
  5954  03BA  0021               	movlb	1	; select bank1
  5955  03BB  083F               	movf	(main@dutyCycle+1)^(0+128),w
  5956  03BC  00F1               	movwf	PWM6_LoadDutyValue@dutyCycle+1
  5957  03BD  083E               	movf	main@dutyCycle^(0+128),w
  5958  03BE  00F0               	movwf	PWM6_LoadDutyValue@dutyCycle
  5959  03BF  3195  25FA  3181   	fcall	_PWM6_LoadDutyValue
  5960  03C2                     l3005:	
  5961                           ;main.c: 108: while (1)
  5962                           
  5963                           
  5964                           ;main.c: 109: {
  5965                           ;main.c: 111: for(x=0;x<6;x++) analogs[x]=readAnalog(x);
  5966  03C2  0021               	movlb	1	; select bank1
  5967  03C3  01BD               	clrf	main@x^(0+128)
  5968  03C4  3006               	movlw	6
  5969  03C5  023D               	subwf	main@x^(0+128),w
  5970  03C6  1803               	btfsc	3,0
  5971  03C7  2BE6               	goto	l3017
  5972  03C8                     l3011:	
  5973  03C8  083D               	movf	main@x^(0+128),w
  5974  03C9  0020               	movlb	0	; select bank0
  5975  03CA  00E9               	movwf	??_main
  5976  03CB  01EA               	clrf	??_main+1
  5977  03CC  0869               	movf	??_main,w
  5978  03CD  00A6               	movwf	readAnalog@channel
  5979  03CE  086A               	movf	??_main+1,w
  5980  03CF  00A7               	movwf	readAnalog@channel+1
  5981  03D0  3180  2012  3181   	fcall	_readAnalog
  5982  03D3  0021               	movlb	1	; select bank1
  5983  03D4  353D               	lslf	main@x^(0+128),w
  5984  03D5  3EA5               	addlw	(low (main@analogs| 0))& (0+255)
  5985  03D6  0086               	movwf	6
  5986  03D7  0187               	clrf	7
  5987  03D8  0020               	movlb	0	; select bank0
  5988  03D9  0826               	movf	?_readAnalog,w
  5989  03DA  3FC0               	movwi [0]fsr1
  5990  03DB  0827               	movf	?_readAnalog+1,w
  5991  03DC  3FC1               	movwi [1]fsr1
  5992  03DD  3001               	movlw	1
  5993  03DE  00E9               	movwf	??_main
  5994  03DF  0869               	movf	??_main,w
  5995  03E0  0021               	movlb	1	; select bank1
  5996  03E1  07BD               	addwf	main@x^(0+128),f
  5997  03E2  3006               	movlw	6
  5998  03E3  023D               	subwf	main@x^(0+128),w
  5999  03E4  1C03               	skipc
  6000  03E5  2BC8               	goto	l3011
  6001  03E6                     l3017:	
  6002                           
  6003                           ;main.c: 113: if(analogs[0]<1020)tPadCount+=1;
  6004  03E6  3003               	movlw	3
  6005  03E7  0226               	subwf	(main@analogs+1)^(0+128),w
  6006  03E8  30FC               	movlw	252
  6007  03E9  1903               	skipnz
  6008  03EA  0225               	subwf	main@analogs^(0+128),w
  6009  03EB  1803               	skipnc
  6010  03EC  2BF3               	goto	l3021
  6011  03ED  3001               	movlw	1
  6012  03EE  0020               	movlb	0	; select bank0
  6013  03EF  00E9               	movwf	??_main
  6014  03F0  0869               	movf	??_main,w
  6015  03F1  0021               	movlb	1	; select bank1
  6016  03F2  07BA               	addwf	main@tPadCount^(0+128),f
  6017  03F3                     l3021:	
  6018                           
  6019                           ;main.c: 116: if(analogs[1]<900)tPadCount-=1;
  6020  03F3  3003               	movlw	3
  6021  03F4  0228               	subwf	((main@analogs+1)^(0+128)+2),w
  6022  03F5  3084               	movlw	132
  6023  03F6  1903               	skipnz
  6024  03F7  0227               	subwf	(main@analogs^(0+128)+2),w
  6025  03F8  1803               	skipnc
  6026  03F9  2BFC               	goto	l291
  6027  03FA  3001               	movlw	1
  6028  03FB  02BA               	subwf	main@tPadCount^(0+128),f
  6029  03FC                     l291:	
  6030                           
  6031                           ;main.c: 118: if(tPadCount<1)
  6032  03FC  083A               	movf	main@tPadCount^(0+128),w
  6033  03FD  1D03               	btfss	3,2
  6034  03FE  2C3B               	goto	l3043
  6035                           
  6036                           ;main.c: 119: {
  6037                           ;main.c: 120: choice=1;
  6038  03FF  01BB               	clrf	main@choice^(0+128)
  6039  0400  0ABB               	incf	main@choice^(0+128),f
  6040                           
  6041                           ;main.c: 121: LCD_Clear();
  6042  0401  3195  2588  3181   	fcall	_LCD_Clear
  6043                           
  6044                           ;main.c: 122: { LCD_Set_Cursor(0,0); LCD_Write_String("You Chose ");};
  6045  0404  01F4               	clrf	LCD_Set_Cursor@y
  6046  0405  3000               	movlw	0
  6047  0406  3197  27C1  3181   	fcall	_LCD_Set_Cursor
  6048  0409  302C               	movlw	low (STR_27| (0+32768))
  6049  040A  00F5               	movwf	LCD_Write_String@a
  6050  040B  3090               	movlw	high (STR_27| (0+32768))
  6051  040C  00F6               	movwf	LCD_Write_String@a+1
  6052  040D  3196  2628  3181   	fcall	_LCD_Write_String
  6053                           
  6054                           ;main.c: 123: LCD_Write_Char(0);
  6055  0410  3000               	movlw	0
  6056  0411  3196  26B5  3181   	fcall	_LCD_Write_Char
  6057                           
  6058                           ;main.c: 124: LCD_Write_Char('F');
  6059  0414  3046               	movlw	70
  6060  0415  3196  26B5  3181   	fcall	_LCD_Write_Char
  6061                           
  6062                           ;main.c: 125: { LCD_Set_Cursor(0,1); LCD_Write_String("for User Display");};
  6063  0418  01F4               	clrf	LCD_Set_Cursor@y
  6064  0419  0AF4               	incf	LCD_Set_Cursor@y,f
  6065  041A  3000               	movlw	0
  6066  041B  3197  27C1  3181   	fcall	_LCD_Set_Cursor
  6067  041E  301B               	movlw	low (STR_28| (0+32768))
  6068  041F  00F5               	movwf	LCD_Write_String@a
  6069  0420  3090               	movlw	high (STR_28| (0+32768))
  6070  0421  00F6               	movwf	LCD_Write_String@a+1
  6071  0422  3196  2628  3181   	fcall	_LCD_Write_String
  6072                           
  6073                           ;main.c: 126: tPadCount=10;
  6074  0425  300A               	movlw	10
  6075  0426  0020               	movlb	0	; select bank0
  6076  0427  00E9               	movwf	??_main
  6077  0428  0869               	movf	??_main,w
  6078  0429  0021               	movlb	1	; select bank1
  6079  042A  00BA               	movwf	main@tPadCount^(0+128)
  6080                           
  6081                           ;main.c: 127: _delay((unsigned long)((1000)*(32000000/4000.0)));
  6082  042B  3029               	movlw	41
  6083  042C  0020               	movlb	0	; select bank0
  6084  042D  00EB               	movwf	??_main+2
  6085  042E  3096               	movlw	150
  6086  042F  00EA               	movwf	??_main+1
  6087  0430  30A6               	movlw	166
  6088  0431  00E9               	movwf	??_main
  6089  0432                     u3767:	
  6090  0432  0BE9               	decfsz	??_main,f
  6091  0433  2C32               	goto	u3767
  6092  0434  0BEA               	decfsz	??_main+1,f
  6093  0435  2C32               	goto	u3767
  6094  0436  0BEB               	decfsz	??_main+2,f
  6095  0437  2C32               	goto	u3767
  6096                           
  6097                           ;main.c: 128: LCD_Clear();
  6098  0438  3195  2588  3181   	fcall	_LCD_Clear
  6099  043B                     l3043:	
  6100                           
  6101                           ;main.c: 129: }
  6102                           ;main.c: 131: if(tPadCount>19)
  6103  043B  3014               	movlw	20
  6104  043C  0021               	movlb	1	; select bank1
  6105  043D  023A               	subwf	main@tPadCount^(0+128),w
  6106  043E  1C03               	skipc
  6107  043F  2C7B               	goto	l3067
  6108                           
  6109                           ;main.c: 132: {
  6110                           ;main.c: 133: choice=0;
  6111  0440  01BB               	clrf	main@choice^(0+128)
  6112                           
  6113                           ;main.c: 134: LCD_Clear();
  6114  0441  3195  2588  3181   	fcall	_LCD_Clear
  6115                           
  6116                           ;main.c: 135: { LCD_Set_Cursor(0,0); LCD_Write_String("You Chose ");};
  6117  0444  01F4               	clrf	LCD_Set_Cursor@y
  6118  0445  3000               	movlw	0
  6119  0446  3197  27C1  3181   	fcall	_LCD_Set_Cursor
  6120  0449  302C               	movlw	low (STR_27| (0+32768))
  6121  044A  00F5               	movwf	LCD_Write_String@a
  6122  044B  3090               	movlw	high (STR_27| (0+32768))
  6123  044C  00F6               	movwf	LCD_Write_String@a+1
  6124  044D  3196  2628  3181   	fcall	_LCD_Write_String
  6125                           
  6126                           ;main.c: 136: LCD_Write_Char(0);
  6127  0450  3000               	movlw	0
  6128  0451  3196  26B5  3181   	fcall	_LCD_Write_Char
  6129                           
  6130                           ;main.c: 137: LCD_Write_Char('C');
  6131  0454  3043               	movlw	67
  6132  0455  3196  26B5  3181   	fcall	_LCD_Write_Char
  6133                           
  6134                           ;main.c: 138: { LCD_Set_Cursor(0,1); LCD_Write_String("for User Display");};
  6135  0458  01F4               	clrf	LCD_Set_Cursor@y
  6136  0459  0AF4               	incf	LCD_Set_Cursor@y,f
  6137  045A  3000               	movlw	0
  6138  045B  3197  27C1  3181   	fcall	_LCD_Set_Cursor
  6139  045E  301B               	movlw	low (STR_28| (0+32768))
  6140  045F  00F5               	movwf	LCD_Write_String@a
  6141  0460  3090               	movlw	high (STR_28| (0+32768))
  6142  0461  00F6               	movwf	LCD_Write_String@a+1
  6143  0462  3196  2628  3181   	fcall	_LCD_Write_String
  6144                           
  6145                           ;main.c: 139: tPadCount=10;
  6146  0465  300A               	movlw	10
  6147  0466  0020               	movlb	0	; select bank0
  6148  0467  00E9               	movwf	??_main
  6149  0468  0869               	movf	??_main,w
  6150  0469  0021               	movlb	1	; select bank1
  6151  046A  00BA               	movwf	main@tPadCount^(0+128)
  6152                           
  6153                           ;main.c: 140: _delay((unsigned long)((1000)*(32000000/4000.0)));
  6154  046B  3029               	movlw	41
  6155  046C  0020               	movlb	0	; select bank0
  6156  046D  00EB               	movwf	??_main+2
  6157  046E  3096               	movlw	150
  6158  046F  00EA               	movwf	??_main+1
  6159  0470  30A6               	movlw	166
  6160  0471  00E9               	movwf	??_main
  6161  0472                     u3777:	
  6162  0472  0BE9               	decfsz	??_main,f
  6163  0473  2C72               	goto	u3777
  6164  0474  0BEA               	decfsz	??_main+1,f
  6165  0475  2C72               	goto	u3777
  6166  0476  0BEB               	decfsz	??_main+2,f
  6167  0477  2C72               	goto	u3777
  6168                           
  6169                           ;main.c: 141: LCD_Clear();
  6170  0478  3195  2588  3181   	fcall	_LCD_Clear
  6171  047B                     l3067:	
  6172                           
  6173                           ;main.c: 142: }
  6174                           ;main.c: 144: if(analogs[0]<1020&&analogs[1]<970)
  6175  047B  3003               	movlw	3
  6176  047C  0021               	movlb	1	; select bank1
  6177  047D  0226               	subwf	(main@analogs+1)^(0+128),w
  6178  047E  30FC               	movlw	252
  6179  047F  1903               	skipnz
  6180  0480  0225               	subwf	main@analogs^(0+128),w
  6181  0481  1803               	skipnc
  6182  0482  2CD2               	goto	l3097
  6183  0483  3003               	movlw	3
  6184  0484  0228               	subwf	((main@analogs+1)^(0+128)+2),w
  6185  0485  30CA               	movlw	202
  6186  0486  1903               	skipnz
  6187  0487  0227               	subwf	(main@analogs^(0+128)+2),w
  6188  0488  1803               	skipnc
  6189  0489  2CD2               	goto	l3097
  6190                           
  6191                           ;main.c: 145: {
  6192                           ;main.c: 146: choice=2;
  6193  048A  3002               	movlw	2
  6194  048B  0020               	movlb	0	; select bank0
  6195  048C  00E9               	movwf	??_main
  6196  048D  0869               	movf	??_main,w
  6197  048E  0021               	movlb	1	; select bank1
  6198  048F  00BB               	movwf	main@choice^(0+128)
  6199                           
  6200                           ;main.c: 147: LCD_Set_Cursor(0,0);
  6201  0490  01F4               	clrf	LCD_Set_Cursor@y
  6202  0491  3000               	movlw	0
  6203  0492  3197  27C1  3181   	fcall	_LCD_Set_Cursor
  6204                           
  6205                           ;main.c: 148: LCD_Write_Char(0);
  6206  0495  3000               	movlw	0
  6207  0496  3196  26B5  3181   	fcall	_LCD_Write_Char
  6208                           
  6209                           ;main.c: 149: LCD_Write_Char('F');
  6210  0499  3046               	movlw	70
  6211  049A  3196  26B5  3181   	fcall	_LCD_Write_Char
  6212                           
  6213                           ;main.c: 150: LCD_Write_Char(' ');
  6214  049D  3020               	movlw	32
  6215  049E  3196  26B5  3181   	fcall	_LCD_Write_Char
  6216                           
  6217                           ;main.c: 151: LCD_Write_Char('&');
  6218  04A1  3026               	movlw	38
  6219  04A2  3196  26B5  3181   	fcall	_LCD_Write_Char
  6220                           
  6221                           ;main.c: 152: LCD_Write_Char(' ');
  6222  04A5  3020               	movlw	32
  6223  04A6  3196  26B5  3181   	fcall	_LCD_Write_Char
  6224                           
  6225                           ;main.c: 153: LCD_Write_Char(0);
  6226  04A9  3000               	movlw	0
  6227  04AA  3196  26B5  3181   	fcall	_LCD_Write_Char
  6228                           
  6229                           ;main.c: 154: LCD_Write_Char('C');
  6230  04AD  3043               	movlw	67
  6231  04AE  3196  26B5  3181   	fcall	_LCD_Write_Char
  6232                           
  6233                           ;main.c: 155: LCD_Write_String(" Chosen ");
  6234  04B1  3042               	movlw	low (STR_31| (0+32768))
  6235  04B2  00F5               	movwf	LCD_Write_String@a
  6236  04B3  3090               	movlw	high (STR_31| (0+32768))
  6237  04B4  00F6               	movwf	LCD_Write_String@a+1
  6238  04B5  3196  2628  3181   	fcall	_LCD_Write_String
  6239                           
  6240                           ;main.c: 157: { LCD_Set_Cursor(0,1); LCD_Write_String("for User Display");};
  6241  04B8  01F4               	clrf	LCD_Set_Cursor@y
  6242  04B9  0AF4               	incf	LCD_Set_Cursor@y,f
  6243  04BA  3000               	movlw	0
  6244  04BB  3197  27C1  3181   	fcall	_LCD_Set_Cursor
  6245  04BE  301B               	movlw	low (STR_28| (0+32768))
  6246  04BF  00F5               	movwf	LCD_Write_String@a
  6247  04C0  3090               	movlw	high (STR_28| (0+32768))
  6248  04C1  00F6               	movwf	LCD_Write_String@a+1
  6249  04C2  3196  2628  3181   	fcall	_LCD_Write_String
  6250                           
  6251                           ;main.c: 158: _delay((unsigned long)((10)*(32000000/4000.0)));
  6252  04C5  3068               	movlw	104
  6253  04C6  0020               	movlb	0	; select bank0
  6254  04C7  00EA               	movwf	??_main+1
  6255  04C8  30E4               	movlw	228
  6256  04C9  00E9               	movwf	??_main
  6257  04CA                     u3787:	
  6258  04CA  0BE9               	decfsz	??_main,f
  6259  04CB  2CCA               	goto	u3787
  6260  04CC  0BEA               	decfsz	??_main+1,f
  6261  04CD  2CCA               	goto	u3787
  6262  04CE  0000               	nop
  6263                           
  6264                           ;main.c: 159: LCD_Clear();
  6265  04CF  3195  2588  3181   	fcall	_LCD_Clear
  6266  04D2                     l3097:	
  6267                           
  6268                           ;main.c: 160: }
  6269                           ;main.c: 164: startDelay+=1;
  6270  04D2  3001               	movlw	1
  6271  04D3  0020               	movlb	0	; select bank0
  6272  04D4  00E9               	movwf	??_main
  6273  04D5  0869               	movf	??_main,w
  6274  04D6  0021               	movlb	1	; select bank1
  6275  04D7  07A4               	addwf	main@startDelay^(0+128),f
  6276                           
  6277                           ;main.c: 166: if(startDelay>254)
  6278  04D8  0A24               	incf	main@startDelay^(0+128),w
  6279  04D9  1D03               	btfss	3,2
  6280  04DA  2DF1               	goto	l3191
  6281                           
  6282                           ;main.c: 167: {
  6283                           ;main.c: 168: startDelay=254;
  6284  04DB  30FE               	movlw	254
  6285  04DC  0020               	movlb	0	; select bank0
  6286  04DD  00E9               	movwf	??_main
  6287  04DE  0869               	movf	??_main,w
  6288  04DF  0021               	movlb	1	; select bank1
  6289  04E0  00A4               	movwf	main@startDelay^(0+128)
  6290                           
  6291                           ;main.c: 170: if(analogs[2]<900&&analogs[3]<900)asm("reset");
  6292  04E1  3003               	movlw	3
  6293  04E2  022A               	subwf	((main@analogs+1)^(0+128)+4),w
  6294  04E3  3084               	movlw	132
  6295  04E4  1903               	skipnz
  6296  04E5  0229               	subwf	(main@analogs^(0+128)+4),w
  6297  04E6  1803               	skipnc
  6298  04E7  2CEF               	goto	l3107
  6299  04E8  3003               	movlw	3
  6300  04E9  022C               	subwf	((main@analogs+1)^(0+128)+6),w
  6301  04EA  3084               	movlw	132
  6302  04EB  1903               	skipnz
  6303  04EC  022B               	subwf	(main@analogs^(0+128)+6),w
  6304  04ED  1C03               	btfss	3,0
  6305  04EE  0001               	reset	;# 
  6306  04EF                     l3107:	
  6307                           
  6308                           ;main.c: 172: if(analogs[2]<900)
  6309  04EF  3003               	movlw	3
  6310  04F0  0021               	movlb	1	; select bank1
  6311  04F1  022A               	subwf	((main@analogs+1)^(0+128)+4),w
  6312  04F2  3084               	movlw	132
  6313  04F3  1903               	skipnz
  6314  04F4  0229               	subwf	(main@analogs^(0+128)+4),w
  6315  04F5  1803               	skipnc
  6316  04F6  2D6F               	goto	l3149
  6317                           
  6318                           ;main.c: 173: {
  6319                           ;main.c: 174: resetDelay+=1;
  6320  04F7  3001               	movlw	1
  6321  04F8  0020               	movlb	0	; select bank0
  6322  04F9  00E9               	movwf	??_main
  6323  04FA  0869               	movf	??_main,w
  6324  04FB  0021               	movlb	1	; select bank1
  6325  04FC  07B9               	addwf	main@resetDelay^(0+128),f
  6326                           
  6327                           ;main.c: 176: if(resetDelay>20)
  6328  04FD  3015               	movlw	21
  6329  04FE  0239               	subwf	main@resetDelay^(0+128),w
  6330  04FF  1803               	btfsc	3,0
  6331  0500  2D53               	goto	l3139
  6332  0501  2D6F               	goto	l3149
  6333  0502                     l3115:	
  6334                           ;main.c: 177: {
  6335                           ;main.c: 178: while(analogs[2]<975)
  6336                           
  6337                           
  6338                           ;main.c: 179: {
  6339                           ;main.c: 180: analogs[2]=ADCRead(4);
  6340  0502  3004               	movlw	4
  6341  0503  3180  2004  3181   	fcall	_ADCRead
  6342  0506  0871               	movf	?_ADCRead+1,w
  6343  0507  0021               	movlb	1	; select bank1
  6344  0508  00AA               	movwf	((main@analogs+1)^(0+128)+4)
  6345  0509  0870               	movf	?_ADCRead,w
  6346  050A  00A9               	movwf	(main@analogs^(0+128)+4)
  6347                           
  6348                           ;main.c: 182: if(bCount<1)LCD_Clear();
  6349  050B  0831               	movf	main@bCount^(0+128),w
  6350  050C  0432               	iorwf	(main@bCount+1)^(0+128),w
  6351  050D  1D03               	btfss	3,2
  6352  050E  2D12               	goto	l3121
  6353  050F  3195  2588  3181   	fcall	_LCD_Clear
  6354  0512                     l3121:	
  6355                           
  6356                           ;main.c: 183: bCount+=1;
  6357  0512  3001               	movlw	1
  6358  0513  0021               	movlb	1	; select bank1
  6359  0514  07B1               	addwf	main@bCount^(0+128),f
  6360  0515  3000               	movlw	0
  6361  0516  3DB2               	addwfc	(main@bCount+1)^(0+128),f
  6362                           
  6363                           ;main.c: 185: if(dutyCycle>0)dutyCycle-=1;
  6364  0517  083E               	movf	main@dutyCycle^(0+128),w
  6365  0518  043F               	iorwf	(main@dutyCycle+1)^(0+128),w
  6366  0519  1903               	btfsc	3,2
  6367  051A  2D1F               	goto	l3127
  6368  051B  3001               	movlw	1
  6369  051C  02BE               	subwf	main@dutyCycle^(0+128),f
  6370  051D  3000               	movlw	0
  6371  051E  3BBF               	subwfb	(main@dutyCycle+1)^(0+128),f
  6372  051F                     l3127:	
  6373                           
  6374                           ;main.c: 187: { LCD_Set_Cursor(0,0); LCD_Write_String("BackLight:");};
  6375  051F  01F4               	clrf	LCD_Set_Cursor@y
  6376  0520  3000               	movlw	0
  6377  0521  3197  27C1  3181   	fcall	_LCD_Set_Cursor
  6378  0524  3037               	movlw	low (STR_33| (0+32768))
  6379  0525  00F5               	movwf	LCD_Write_String@a
  6380  0526  3090               	movlw	high (STR_33| (0+32768))
  6381  0527  00F6               	movwf	LCD_Write_String@a+1
  6382  0528  3196  2628  3181   	fcall	_LCD_Write_String
  6383                           
  6384                           ;main.c: 188: LCD_Write_Int(dutyCycle/10,-1,0,0);
  6385  052B  300A               	movlw	10
  6386  052C  00F0               	movwf	___lwdiv@divisor
  6387  052D  3000               	movlw	0
  6388  052E  00F1               	movwf	___lwdiv@divisor+1
  6389  052F  0021               	movlb	1	; select bank1
  6390  0530  083F               	movf	(main@dutyCycle+1)^(0+128),w
  6391  0531  00F3               	movwf	___lwdiv@dividend+1
  6392  0532  083E               	movf	main@dutyCycle^(0+128),w
  6393  0533  00F2               	movwf	___lwdiv@dividend
  6394  0534  3196  26E1  3181   	fcall	___lwdiv
  6395  0537  0871               	movf	?___lwdiv+1,w
  6396  0538  0020               	movlb	0	; select bank0
  6397  0539  00A1               	movwf	LCD_Write_Int@value+1
  6398  053A  0870               	movf	?___lwdiv,w
  6399  053B  00A0               	movwf	LCD_Write_Int@value
  6400  053C  01A2               	clrf	LCD_Write_Int@fieldLength
  6401  053D  03A2               	decf	LCD_Write_Int@fieldLength,f
  6402  053E  01A3               	clrf	LCD_Write_Int@numPlaces
  6403  053F  01A4               	clrf	LCD_Write_Int@sign
  6404  0540  318D  2560  3181   	fcall	_LCD_Write_Int
  6405                           
  6406                           ;main.c: 189: LCD_Write_Char('%');
  6407  0543  3025               	movlw	37
  6408  0544  3196  26B5  3181   	fcall	_LCD_Write_Char
  6409                           
  6410                           ;main.c: 190: LCD_Write_Char(' ');
  6411  0547  3020               	movlw	32
  6412  0548  3196  26B5  3181   	fcall	_LCD_Write_Char
  6413                           
  6414                           ;main.c: 191: PWM6_LoadDutyValue(dutyCycle);
  6415  054B  0021               	movlb	1	; select bank1
  6416  054C  083F               	movf	(main@dutyCycle+1)^(0+128),w
  6417  054D  00F1               	movwf	PWM6_LoadDutyValue@dutyCycle+1
  6418  054E  083E               	movf	main@dutyCycle^(0+128),w
  6419  054F  00F0               	movwf	PWM6_LoadDutyValue@dutyCycle
  6420  0550  3195  25FA  3181   	fcall	_PWM6_LoadDutyValue
  6421  0553                     l3139:	
  6422  0553  3003               	movlw	3
  6423  0554  0021               	movlb	1	; select bank1
  6424  0555  022A               	subwf	((main@analogs+1)^(0+128)+4),w
  6425  0556  30CF               	movlw	207
  6426  0557  1903               	skipnz
  6427  0558  0229               	subwf	(main@analogs^(0+128)+4),w
  6428  0559  1C03               	skipc
  6429  055A  2D02               	goto	l3115
  6430                           
  6431                           ;main.c: 192: }
  6432                           ;main.c: 193: bCount=0;
  6433  055B  01B1               	clrf	main@bCount^(0+128)
  6434  055C  01B2               	clrf	(main@bCount+1)^(0+128)
  6435                           
  6436                           ;main.c: 194: _delay((unsigned long)((100)*(32000000/4000.0)));
  6437  055D  3005               	movlw	5
  6438  055E  0020               	movlb	0	; select bank0
  6439  055F  00EB               	movwf	??_main+2
  6440  0560  300F               	movlw	15
  6441  0561  00EA               	movwf	??_main+1
  6442  0562  30F4               	movlw	244
  6443  0563  00E9               	movwf	??_main
  6444  0564                     u3797:	
  6445  0564  0BE9               	decfsz	??_main,f
  6446  0565  2D64               	goto	u3797
  6447  0566  0BEA               	decfsz	??_main+1,f
  6448  0567  2D64               	goto	u3797
  6449  0568  0BEB               	decfsz	??_main+2,f
  6450  0569  2D64               	goto	u3797
  6451                           
  6452                           ;main.c: 195: LCD_Clear();
  6453  056A  3195  2588  3181   	fcall	_LCD_Clear
  6454                           
  6455                           ;main.c: 196: resetDelay=0;
  6456  056D  0021               	movlb	1	; select bank1
  6457  056E  01B9               	clrf	main@resetDelay^(0+128)
  6458  056F                     l3149:	
  6459                           
  6460                           ;main.c: 197: }
  6461                           ;main.c: 198: }
  6462                           ;main.c: 200: if(analogs[3]<900)
  6463  056F  3003               	movlw	3
  6464  0570  022C               	subwf	((main@analogs+1)^(0+128)+6),w
  6465  0571  3084               	movlw	132
  6466  0572  1903               	skipnz
  6467  0573  022B               	subwf	(main@analogs^(0+128)+6),w
  6468  0574  1803               	skipnc
  6469  0575  2DF1               	goto	l3191
  6470                           
  6471                           ;main.c: 201: {
  6472                           ;main.c: 202: resetDelay+=1;
  6473  0576  3001               	movlw	1
  6474  0577  0020               	movlb	0	; select bank0
  6475  0578  00E9               	movwf	??_main
  6476  0579  0869               	movf	??_main,w
  6477  057A  0021               	movlb	1	; select bank1
  6478  057B  07B9               	addwf	main@resetDelay^(0+128),f
  6479                           
  6480                           ;main.c: 204: if(resetDelay>20)
  6481  057C  3015               	movlw	21
  6482  057D  0239               	subwf	main@resetDelay^(0+128),w
  6483  057E  1803               	btfsc	3,0
  6484  057F  2DD5               	goto	l3181
  6485  0580  2DF1               	goto	l3191
  6486  0581                     l3157:	
  6487                           ;main.c: 205: {
  6488                           ;main.c: 206: while(analogs[3]<975)
  6489                           
  6490                           
  6491                           ;main.c: 207: {
  6492                           ;main.c: 208: analogs[3]=ADCRead(5);
  6493  0581  3005               	movlw	5
  6494  0582  3180  2004  3181   	fcall	_ADCRead
  6495  0585  0871               	movf	?_ADCRead+1,w
  6496  0586  0021               	movlb	1	; select bank1
  6497  0587  00AC               	movwf	((main@analogs+1)^(0+128)+6)
  6498  0588  0870               	movf	?_ADCRead,w
  6499  0589  00AB               	movwf	(main@analogs^(0+128)+6)
  6500                           
  6501                           ;main.c: 210: if(bCount<1)LCD_Clear();
  6502  058A  0831               	movf	main@bCount^(0+128),w
  6503  058B  0432               	iorwf	(main@bCount+1)^(0+128),w
  6504  058C  1D03               	btfss	3,2
  6505  058D  2D91               	goto	l3163
  6506  058E  3195  2588  3181   	fcall	_LCD_Clear
  6507  0591                     l3163:	
  6508                           
  6509                           ;main.c: 211: bCount+=1;
  6510  0591  3001               	movlw	1
  6511  0592  0021               	movlb	1	; select bank1
  6512  0593  07B1               	addwf	main@bCount^(0+128),f
  6513  0594  3000               	movlw	0
  6514  0595  3DB2               	addwfc	(main@bCount+1)^(0+128),f
  6515                           
  6516                           ;main.c: 213: if(dutyCycle<1009)dutyCycle+=1;
  6517  0596  3003               	movlw	3
  6518  0597  023F               	subwf	(main@dutyCycle+1)^(0+128),w
  6519  0598  30F1               	movlw	241
  6520  0599  1903               	skipnz
  6521  059A  023E               	subwf	main@dutyCycle^(0+128),w
  6522  059B  1803               	skipnc
  6523  059C  2DA1               	goto	l3169
  6524  059D  3001               	movlw	1
  6525  059E  07BE               	addwf	main@dutyCycle^(0+128),f
  6526  059F  3000               	movlw	0
  6527  05A0  3DBF               	addwfc	(main@dutyCycle+1)^(0+128),f
  6528  05A1                     l3169:	
  6529                           
  6530                           ;main.c: 215: { LCD_Set_Cursor(0,0); LCD_Write_String("BackLight:");};
  6531  05A1  01F4               	clrf	LCD_Set_Cursor@y
  6532  05A2  3000               	movlw	0
  6533  05A3  3197  27C1  3181   	fcall	_LCD_Set_Cursor
  6534  05A6  3037               	movlw	low (STR_33| (0+32768))
  6535  05A7  00F5               	movwf	LCD_Write_String@a
  6536  05A8  3090               	movlw	high (STR_33| (0+32768))
  6537  05A9  00F6               	movwf	LCD_Write_String@a+1
  6538  05AA  3196  2628  3181   	fcall	_LCD_Write_String
  6539                           
  6540                           ;main.c: 216: LCD_Write_Int(dutyCycle/10,-1,0,0);
  6541  05AD  300A               	movlw	10
  6542  05AE  00F0               	movwf	___lwdiv@divisor
  6543  05AF  3000               	movlw	0
  6544  05B0  00F1               	movwf	___lwdiv@divisor+1
  6545  05B1  0021               	movlb	1	; select bank1
  6546  05B2  083F               	movf	(main@dutyCycle+1)^(0+128),w
  6547  05B3  00F3               	movwf	___lwdiv@dividend+1
  6548  05B4  083E               	movf	main@dutyCycle^(0+128),w
  6549  05B5  00F2               	movwf	___lwdiv@dividend
  6550  05B6  3196  26E1  3181   	fcall	___lwdiv
  6551  05B9  0871               	movf	?___lwdiv+1,w
  6552  05BA  0020               	movlb	0	; select bank0
  6553  05BB  00A1               	movwf	LCD_Write_Int@value+1
  6554  05BC  0870               	movf	?___lwdiv,w
  6555  05BD  00A0               	movwf	LCD_Write_Int@value
  6556  05BE  01A2               	clrf	LCD_Write_Int@fieldLength
  6557  05BF  03A2               	decf	LCD_Write_Int@fieldLength,f
  6558  05C0  01A3               	clrf	LCD_Write_Int@numPlaces
  6559  05C1  01A4               	clrf	LCD_Write_Int@sign
  6560  05C2  318D  2560  3181   	fcall	_LCD_Write_Int
  6561                           
  6562                           ;main.c: 217: LCD_Write_Char('%');
  6563  05C5  3025               	movlw	37
  6564  05C6  3196  26B5  3181   	fcall	_LCD_Write_Char
  6565                           
  6566                           ;main.c: 218: LCD_Write_Char(' ');
  6567  05C9  3020               	movlw	32
  6568  05CA  3196  26B5  3181   	fcall	_LCD_Write_Char
  6569                           
  6570                           ;main.c: 219: PWM6_LoadDutyValue(dutyCycle);
  6571  05CD  0021               	movlb	1	; select bank1
  6572  05CE  083F               	movf	(main@dutyCycle+1)^(0+128),w
  6573  05CF  00F1               	movwf	PWM6_LoadDutyValue@dutyCycle+1
  6574  05D0  083E               	movf	main@dutyCycle^(0+128),w
  6575  05D1  00F0               	movwf	PWM6_LoadDutyValue@dutyCycle
  6576  05D2  3195  25FA  3181   	fcall	_PWM6_LoadDutyValue
  6577  05D5                     l3181:	
  6578  05D5  3003               	movlw	3
  6579  05D6  0021               	movlb	1	; select bank1
  6580  05D7  022C               	subwf	((main@analogs+1)^(0+128)+6),w
  6581  05D8  30CF               	movlw	207
  6582  05D9  1903               	skipnz
  6583  05DA  022B               	subwf	(main@analogs^(0+128)+6),w
  6584  05DB  1C03               	skipc
  6585  05DC  2D81               	goto	l3157
  6586                           
  6587                           ;main.c: 220: }
  6588                           ;main.c: 221: bCount=0;
  6589  05DD  01B1               	clrf	main@bCount^(0+128)
  6590  05DE  01B2               	clrf	(main@bCount+1)^(0+128)
  6591                           
  6592                           ;main.c: 222: _delay((unsigned long)((100)*(32000000/4000.0)));
  6593  05DF  3005               	movlw	5
  6594  05E0  0020               	movlb	0	; select bank0
  6595  05E1  00EB               	movwf	??_main+2
  6596  05E2  300F               	movlw	15
  6597  05E3  00EA               	movwf	??_main+1
  6598  05E4  30F4               	movlw	244
  6599  05E5  00E9               	movwf	??_main
  6600  05E6                     u3807:	
  6601  05E6  0BE9               	decfsz	??_main,f
  6602  05E7  2DE6               	goto	u3807
  6603  05E8  0BEA               	decfsz	??_main+1,f
  6604  05E9  2DE6               	goto	u3807
  6605  05EA  0BEB               	decfsz	??_main+2,f
  6606  05EB  2DE6               	goto	u3807
  6607                           
  6608                           ;main.c: 223: LCD_Clear();
  6609  05EC  3195  2588  3181   	fcall	_LCD_Clear
  6610                           
  6611                           ;main.c: 224: resetDelay=0;
  6612  05EF  0021               	movlb	1	; select bank1
  6613  05F0  01B9               	clrf	main@resetDelay^(0+128)
  6614  05F1                     l3191:	
  6615                           
  6616                           ;main.c: 225: }
  6617                           ;main.c: 226: }
  6618                           ;main.c: 227: }
  6619                           ;main.c: 231: displayTemp = (tempCalc(analogs[4]))-3;
  6620  05F1  082E               	movf	((main@analogs+1)^(0+128)+8),w
  6621  05F2  0020               	movlb	0	; select bank0
  6622  05F3  00DE               	movwf	tempCalc@analogValue+1
  6623  05F4  0021               	movlb	1	; select bank1
  6624  05F5  082D               	movf	(main@analogs^(0+128)+8),w
  6625  05F6  0020               	movlb	0	; select bank0
  6626  05F7  00DD               	movwf	tempCalc@analogValue
  6627  05F8  318E  262B  3181   	fcall	_tempCalc
  6628  05FB  0020               	movlb	0	; select bank0
  6629  05FC  085D               	movf	?_tempCalc,w
  6630  05FD  0021               	movlb	1	; select bank1
  6631  05FE  00A0               	movwf	_main$989^(0+128)
  6632  05FF  0020               	movlb	0	; select bank0
  6633  0600  085E               	movf	?_tempCalc+1,w
  6634  0601  0021               	movlb	1	; select bank1
  6635  0602  00A1               	movwf	(_main$989+1)^(0+128)
  6636  0603  0020               	movlb	0	; select bank0
  6637  0604  085F               	movf	?_tempCalc+2,w
  6638  0605  0021               	movlb	1	; select bank1
  6639  0606  00A2               	movwf	(_main$989+2)^(0+128)
  6640                           
  6641                           ;main.c: 225: }
  6642                           ;main.c: 226: }
  6643                           ;main.c: 227: }
  6644                           ;main.c: 231: displayTemp = (tempCalc(analogs[4]))-3;
  6645  0607  3000               	movlw	0
  6646  0608  0020               	movlb	0	; select bank0
  6647  0609  00C0               	movwf	___ftadd@f1
  6648  060A  3040               	movlw	64
  6649  060B  00C1               	movwf	___ftadd@f1+1
  6650  060C  30C0               	movlw	192
  6651  060D  00C2               	movwf	___ftadd@f1+2
  6652  060E  0021               	movlb	1	; select bank1
  6653  060F  0820               	movf	_main$989^(0+128),w
  6654  0610  0020               	movlb	0	; select bank0
  6655  0611  00C3               	movwf	___ftadd@f2
  6656  0612  0021               	movlb	1	; select bank1
  6657  0613  0821               	movf	(_main$989+1)^(0+128),w
  6658  0614  0020               	movlb	0	; select bank0
  6659  0615  00C4               	movwf	___ftadd@f2+1
  6660  0616  0021               	movlb	1	; select bank1
  6661  0617  0822               	movf	(_main$989+2)^(0+128),w
  6662  0618  0020               	movlb	0	; select bank0
  6663  0619  00C5               	movwf	___ftadd@f2+2
  6664  061A  318F  270A  3181   	fcall	___ftadd
  6665  061D  0020               	movlb	0	; select bank0
  6666  061E  0840               	movf	?___ftadd,w
  6667  061F  0021               	movlb	1	; select bank1
  6668  0620  00B3               	movwf	main@displayTemp^(0+128)
  6669  0621  0020               	movlb	0	; select bank0
  6670  0622  0841               	movf	?___ftadd+1,w
  6671  0623  0021               	movlb	1	; select bank1
  6672  0624  00B4               	movwf	(main@displayTemp+1)^(0+128)
  6673  0625  0020               	movlb	0	; select bank0
  6674  0626  0842               	movf	?___ftadd+2,w
  6675  0627  0021               	movlb	1	; select bank1
  6676  0628  00B5               	movwf	(main@displayTemp+2)^(0+128)
  6677                           
  6678                           ;main.c: 233: displayTemp2 = tempCalc(analogs[5]);
  6679  0629  0830               	movf	((main@analogs+1)^(0+128)+10),w
  6680  062A  0020               	movlb	0	; select bank0
  6681  062B  00DE               	movwf	tempCalc@analogValue+1
  6682  062C  0021               	movlb	1	; select bank1
  6683  062D  082F               	movf	(main@analogs^(0+128)+10),w
  6684  062E  0020               	movlb	0	; select bank0
  6685  062F  00DD               	movwf	tempCalc@analogValue
  6686  0630  318E  262B  3181   	fcall	_tempCalc
  6687  0633  0020               	movlb	0	; select bank0
  6688  0634  085D               	movf	?_tempCalc,w
  6689  0635  0021               	movlb	1	; select bank1
  6690  0636  00B6               	movwf	main@displayTemp2^(0+128)
  6691  0637  0020               	movlb	0	; select bank0
  6692  0638  085E               	movf	?_tempCalc+1,w
  6693  0639  0021               	movlb	1	; select bank1
  6694  063A  00B7               	movwf	(main@displayTemp2+1)^(0+128)
  6695  063B  0020               	movlb	0	; select bank0
  6696  063C  085F               	movf	?_tempCalc+2,w
  6697  063D  0021               	movlb	1	; select bank1
  6698  063E  00B8               	movwf	(main@displayTemp2+2)^(0+128)
  6699                           
  6700                           ;main.c: 235: if(loop>127)
  6701  063F  3080               	movlw	128
  6702  0640  0223               	subwf	main@loop^(0+128),w
  6703  0641  1C03               	skipc
  6704  0642  2FB6               	goto	l3255
  6705                           
  6706                           ;main.c: 236: {
  6707                           ;main.c: 237: { LCD_Set_Cursor(0,0); LCD_Write_String("In");};
  6708  0643  01F4               	clrf	LCD_Set_Cursor@y
  6709  0644  3000               	movlw	0
  6710  0645  3197  27C1  3181   	fcall	_LCD_Set_Cursor
  6711  0648  305A               	movlw	low (STR_35| (0+32768))
  6712  0649  00F5               	movwf	LCD_Write_String@a
  6713  064A  3090               	movlw	high (STR_35| (0+32768))
  6714  064B  00F6               	movwf	LCD_Write_String@a+1
  6715  064C  3196  2628  3181   	fcall	_LCD_Write_String
  6716                           
  6717                           ;main.c: 238: LCD_Write_Char(1);
  6718  064F  3001               	movlw	1
  6719  0650  3196  26B5  3181   	fcall	_LCD_Write_Char
  6720                           
  6721                           ;main.c: 239: LCD_Write_String("Solar");
  6722  0653  304B               	movlw	low (STR_36| (0+32768))
  6723  0654  00F5               	movwf	LCD_Write_String@a
  6724  0655  3090               	movlw	high (STR_36| (0+32768))
  6725  0656  00F6               	movwf	LCD_Write_String@a+1
  6726  0657  3196  2628  3181   	fcall	_LCD_Write_String
  6727                           
  6728                           ;main.c: 241: { LCD_Set_Cursor(0,1); LCD_Write_String("Out");};
  6729  065A  01F4               	clrf	LCD_Set_Cursor@y
  6730  065B  0AF4               	incf	LCD_Set_Cursor@y,f
  6731  065C  3000               	movlw	0
  6732  065D  3197  27C1  3181   	fcall	_LCD_Set_Cursor
  6733  0660  3056               	movlw	low (STR_37| (0+32768))
  6734  0661  00F5               	movwf	LCD_Write_String@a
  6735  0662  3090               	movlw	high (STR_37| (0+32768))
  6736  0663  00F6               	movwf	LCD_Write_String@a+1
  6737  0664  3196  2628  3181   	fcall	_LCD_Write_String
  6738                           
  6739                           ;main.c: 242: LCD_Write_Char(1);
  6740  0667  3001               	movlw	1
  6741  0668  3196  26B5  3181   	fcall	_LCD_Write_Char
  6742                           
  6743                           ;main.c: 243: LCD_Write_String("Pool");
  6744  066B  3051               	movlw	low (STR_38| (0+32768))
  6745  066C  00F5               	movwf	LCD_Write_String@a
  6746  066D  3090               	movlw	high (STR_38| (0+32768))
  6747  066E  00F6               	movwf	LCD_Write_String@a+1
  6748  066F  3196  2628  3181   	fcall	_LCD_Write_String
  6749                           
  6750                           ;main.c: 245: if(C_or_F==0)
  6751  0672  0021               	movlb	1	; select bank1
  6752  0673  083C               	movf	main@C_or_F^(0+128),w
  6753  0674  1D03               	btfss	3,2
  6754  0675  2EC7               	goto	l3225
  6755                           
  6756                           ;main.c: 246: {
  6757                           ;main.c: 247: { LCD_Set_Cursor(9,0); LCD_Write_Int((int)displayTemp,-1, 1, 0);};
  6758  0676  01F4               	clrf	LCD_Set_Cursor@y
  6759  0677  3009               	movlw	9
  6760  0678  3197  27C1  3181   	fcall	_LCD_Set_Cursor
  6761  067B  0021               	movlb	1	; select bank1
  6762  067C  0833               	movf	main@displayTemp^(0+128),w
  6763  067D  00F0               	movwf	___fttol@f1
  6764  067E  0834               	movf	(main@displayTemp+1)^(0+128),w
  6765  067F  00F1               	movwf	___fttol@f1+1
  6766  0680  0835               	movf	(main@displayTemp+2)^(0+128),w
  6767  0681  00F2               	movwf	___fttol@f1+2
  6768  0682  318A  2249  3181   	fcall	___fttol
  6769  0685  0871               	movf	?___fttol+1,w
  6770  0686  0020               	movlb	0	; select bank0
  6771  0687  00A1               	movwf	LCD_Write_Int@value+1
  6772  0688  0870               	movf	?___fttol,w
  6773  0689  00A0               	movwf	LCD_Write_Int@value
  6774  068A  01A2               	clrf	LCD_Write_Int@fieldLength
  6775  068B  03A2               	decf	LCD_Write_Int@fieldLength,f
  6776  068C  01A3               	clrf	LCD_Write_Int@numPlaces
  6777  068D  0AA3               	incf	LCD_Write_Int@numPlaces,f
  6778  068E  01A4               	clrf	LCD_Write_Int@sign
  6779  068F  318D  2560  3181   	fcall	_LCD_Write_Int
  6780                           
  6781                           ;main.c: 248: LCD_Write_Char(0);
  6782  0692  3000               	movlw	0
  6783  0693  3196  26B5  3181   	fcall	_LCD_Write_Char
  6784                           
  6785                           ;main.c: 249: LCD_Write_Char('C');
  6786  0696  3043               	movlw	67
  6787  0697  3196  26B5  3181   	fcall	_LCD_Write_Char
  6788                           
  6789                           ;main.c: 250: LCD_Write_Char(' ');
  6790  069A  3020               	movlw	32
  6791  069B  3196  26B5  3181   	fcall	_LCD_Write_Char
  6792                           
  6793                           ;main.c: 252: { LCD_Set_Cursor(9,1); LCD_Write_Int((int)displayTemp2,-1, 1, 0);};
  6794  069E  01F4               	clrf	LCD_Set_Cursor@y
  6795  069F  0AF4               	incf	LCD_Set_Cursor@y,f
  6796  06A0  3009               	movlw	9
  6797  06A1  3197  27C1  3181   	fcall	_LCD_Set_Cursor
  6798  06A4  0021               	movlb	1	; select bank1
  6799  06A5  0836               	movf	main@displayTemp2^(0+128),w
  6800  06A6  00F0               	movwf	___fttol@f1
  6801  06A7  0837               	movf	(main@displayTemp2+1)^(0+128),w
  6802  06A8  00F1               	movwf	___fttol@f1+1
  6803  06A9  0838               	movf	(main@displayTemp2+2)^(0+128),w
  6804  06AA  00F2               	movwf	___fttol@f1+2
  6805  06AB  318A  2249  3181   	fcall	___fttol
  6806  06AE  0871               	movf	?___fttol+1,w
  6807  06AF  0020               	movlb	0	; select bank0
  6808  06B0  00A1               	movwf	LCD_Write_Int@value+1
  6809  06B1  0870               	movf	?___fttol,w
  6810  06B2  00A0               	movwf	LCD_Write_Int@value
  6811  06B3  01A2               	clrf	LCD_Write_Int@fieldLength
  6812  06B4  03A2               	decf	LCD_Write_Int@fieldLength,f
  6813  06B5  01A3               	clrf	LCD_Write_Int@numPlaces
  6814  06B6  0AA3               	incf	LCD_Write_Int@numPlaces,f
  6815  06B7  01A4               	clrf	LCD_Write_Int@sign
  6816  06B8  318D  2560  3181   	fcall	_LCD_Write_Int
  6817                           
  6818                           ;main.c: 253: LCD_Write_Char(0);
  6819  06BB  3000               	movlw	0
  6820  06BC  3196  26B5  3181   	fcall	_LCD_Write_Char
  6821                           
  6822                           ;main.c: 254: LCD_Write_Char('C');
  6823  06BF  3043               	movlw	67
  6824  06C0  3196  26B5  3181   	fcall	_LCD_Write_Char
  6825                           
  6826                           ;main.c: 255: LCD_Write_Char(' ');
  6827  06C3  3020               	movlw	32
  6828  06C4  3196  26B5  3181   	fcall	_LCD_Write_Char
  6829  06C7                     l3225:	
  6830                           
  6831                           ;main.c: 256: }
  6832                           ;main.c: 258: if(C_or_F==1)
  6833  06C7  0021               	movlb	1	; select bank1
  6834  06C8  033C               	decf	main@C_or_F^(0+128),w
  6835  06C9  1D03               	btfss	3,2
  6836  06CA  2FA0               	goto	l3241
  6837                           
  6838                           ;main.c: 259: {
  6839                           ;main.c: 260: displayTemp = displayTemp*9/5+320;
  6840  06CB  3000               	movlw	0
  6841  06CC  0020               	movlb	0	; select bank0
  6842  06CD  00C0               	movwf	___ftadd@f1
  6843  06CE  30A0               	movlw	160
  6844  06CF  00C1               	movwf	___ftadd@f1+1
  6845  06D0  3043               	movlw	67
  6846  06D1  00C2               	movwf	___ftadd@f1+2
  6847  06D2  3000               	movlw	0
  6848  06D3  00B0               	movwf	___ftdiv@f2
  6849  06D4  30A0               	movlw	160
  6850  06D5  00B1               	movwf	___ftdiv@f2+1
  6851  06D6  3040               	movlw	64
  6852  06D7  00B2               	movwf	___ftdiv@f2+2
  6853  06D8  3000               	movlw	0
  6854  06D9  00A0               	movwf	___ftmul@f1
  6855  06DA  3010               	movlw	16
  6856  06DB  00A1               	movwf	___ftmul@f1+1
  6857  06DC  3041               	movlw	65
  6858  06DD  00A2               	movwf	___ftmul@f1+2
  6859  06DE  0021               	movlb	1	; select bank1
  6860  06DF  0833               	movf	main@displayTemp^(0+128),w
  6861  06E0  0020               	movlb	0	; select bank0
  6862  06E1  00A3               	movwf	___ftmul@f2
  6863  06E2  0021               	movlb	1	; select bank1
  6864  06E3  0834               	movf	(main@displayTemp+1)^(0+128),w
  6865  06E4  0020               	movlb	0	; select bank0
  6866  06E5  00A4               	movwf	___ftmul@f2+1
  6867  06E6  0021               	movlb	1	; select bank1
  6868  06E7  0835               	movf	(main@displayTemp+2)^(0+128),w
  6869  06E8  0020               	movlb	0	; select bank0
  6870  06E9  00A5               	movwf	___ftmul@f2+2
  6871  06EA  318C  24AC  3181   	fcall	___ftmul
  6872  06ED  0020               	movlb	0	; select bank0
  6873  06EE  0820               	movf	?___ftmul,w
  6874  06EF  00B3               	movwf	___ftdiv@f1
  6875  06F0  0821               	movf	?___ftmul+1,w
  6876  06F1  00B4               	movwf	___ftdiv@f1+1
  6877  06F2  0822               	movf	?___ftmul+2,w
  6878  06F3  00B5               	movwf	___ftdiv@f1+2
  6879  06F4  318B  2356  3181   	fcall	___ftdiv
  6880  06F7  0020               	movlb	0	; select bank0
  6881  06F8  0830               	movf	?___ftdiv,w
  6882  06F9  00C3               	movwf	___ftadd@f2
  6883  06FA  0831               	movf	?___ftdiv+1,w
  6884  06FB  00C4               	movwf	___ftadd@f2+1
  6885  06FC  0832               	movf	?___ftdiv+2,w
  6886  06FD  00C5               	movwf	___ftadd@f2+2
  6887  06FE  318F  270A  3181   	fcall	___ftadd
  6888  0701  0020               	movlb	0	; select bank0
  6889  0702  0840               	movf	?___ftadd,w
  6890  0703  0021               	movlb	1	; select bank1
  6891  0704  00B3               	movwf	main@displayTemp^(0+128)
  6892  0705  0020               	movlb	0	; select bank0
  6893  0706  0841               	movf	?___ftadd+1,w
  6894  0707  0021               	movlb	1	; select bank1
  6895  0708  00B4               	movwf	(main@displayTemp+1)^(0+128)
  6896  0709  0020               	movlb	0	; select bank0
  6897  070A  0842               	movf	?___ftadd+2,w
  6898  070B  0021               	movlb	1	; select bank1
  6899  070C  00B5               	movwf	(main@displayTemp+2)^(0+128)
  6900                           
  6901                           ;main.c: 261: displayTemp2 = displayTemp2*9/5+320;
  6902  070D  3000               	movlw	0
  6903  070E  0020               	movlb	0	; select bank0
  6904  070F  00C0               	movwf	___ftadd@f1
  6905  0710  30A0               	movlw	160
  6906  0711  00C1               	movwf	___ftadd@f1+1
  6907  0712  3043               	movlw	67
  6908  0713  00C2               	movwf	___ftadd@f1+2
  6909  0714  3000               	movlw	0
  6910  0715  00B0               	movwf	___ftdiv@f2
  6911  0716  30A0               	movlw	160
  6912  0717  00B1               	movwf	___ftdiv@f2+1
  6913  0718  3040               	movlw	64
  6914  0719  00B2               	movwf	___ftdiv@f2+2
  6915  071A  3000               	movlw	0
  6916  071B  00A0               	movwf	___ftmul@f1
  6917  071C  3010               	movlw	16
  6918  071D  00A1               	movwf	___ftmul@f1+1
  6919  071E  3041               	movlw	65
  6920  071F  00A2               	movwf	___ftmul@f1+2
  6921  0720  0021               	movlb	1	; select bank1
  6922  0721  0836               	movf	main@displayTemp2^(0+128),w
  6923  0722  0020               	movlb	0	; select bank0
  6924  0723  00A3               	movwf	___ftmul@f2
  6925  0724  0021               	movlb	1	; select bank1
  6926  0725  0837               	movf	(main@displayTemp2+1)^(0+128),w
  6927  0726  0020               	movlb	0	; select bank0
  6928  0727  00A4               	movwf	___ftmul@f2+1
  6929  0728  0021               	movlb	1	; select bank1
  6930  0729  0838               	movf	(main@displayTemp2+2)^(0+128),w
  6931  072A  0020               	movlb	0	; select bank0
  6932  072B  00A5               	movwf	___ftmul@f2+2
  6933  072C  318C  24AC  3181   	fcall	___ftmul
  6934  072F  0020               	movlb	0	; select bank0
  6935  0730  0820               	movf	?___ftmul,w
  6936  0731  00B3               	movwf	___ftdiv@f1
  6937  0732  0821               	movf	?___ftmul+1,w
  6938  0733  00B4               	movwf	___ftdiv@f1+1
  6939  0734  0822               	movf	?___ftmul+2,w
  6940  0735  00B5               	movwf	___ftdiv@f1+2
  6941  0736  318B  2356  3181   	fcall	___ftdiv
  6942  0739  0020               	movlb	0	; select bank0
  6943  073A  0830               	movf	?___ftdiv,w
  6944  073B  00C3               	movwf	___ftadd@f2
  6945  073C  0831               	movf	?___ftdiv+1,w
  6946  073D  00C4               	movwf	___ftadd@f2+1
  6947  073E  0832               	movf	?___ftdiv+2,w
  6948  073F  00C5               	movwf	___ftadd@f2+2
  6949  0740  318F  270A  3181   	fcall	___ftadd
  6950  0743  0020               	movlb	0	; select bank0
  6951  0744  0840               	movf	?___ftadd,w
  6952  0745  0021               	movlb	1	; select bank1
  6953  0746  00B6               	movwf	main@displayTemp2^(0+128)
  6954  0747  0020               	movlb	0	; select bank0
  6955  0748  0841               	movf	?___ftadd+1,w
  6956  0749  0021               	movlb	1	; select bank1
  6957  074A  00B7               	movwf	(main@displayTemp2+1)^(0+128)
  6958  074B  0020               	movlb	0	; select bank0
  6959  074C  0842               	movf	?___ftadd+2,w
  6960  074D  0021               	movlb	1	; select bank1
  6961  074E  00B8               	movwf	(main@displayTemp2+2)^(0+128)
  6962                           
  6963                           ;main.c: 263: { LCD_Set_Cursor(9,0); LCD_Write_Int((int)displayTemp,-1, 1, 0);};
  6964  074F  01F4               	clrf	LCD_Set_Cursor@y
  6965  0750  3009               	movlw	9
  6966  0751  3197  27C1  3181   	fcall	_LCD_Set_Cursor
  6967  0754  0021               	movlb	1	; select bank1
  6968  0755  0833               	movf	main@displayTemp^(0+128),w
  6969  0756  00F0               	movwf	___fttol@f1
  6970  0757  0834               	movf	(main@displayTemp+1)^(0+128),w
  6971  0758  00F1               	movwf	___fttol@f1+1
  6972  0759  0835               	movf	(main@displayTemp+2)^(0+128),w
  6973  075A  00F2               	movwf	___fttol@f1+2
  6974  075B  318A  2249  3181   	fcall	___fttol
  6975  075E  0871               	movf	?___fttol+1,w
  6976  075F  0020               	movlb	0	; select bank0
  6977  0760  00A1               	movwf	LCD_Write_Int@value+1
  6978  0761  0870               	movf	?___fttol,w
  6979  0762  00A0               	movwf	LCD_Write_Int@value
  6980  0763  01A2               	clrf	LCD_Write_Int@fieldLength
  6981  0764  03A2               	decf	LCD_Write_Int@fieldLength,f
  6982  0765  01A3               	clrf	LCD_Write_Int@numPlaces
  6983  0766  0AA3               	incf	LCD_Write_Int@numPlaces,f
  6984  0767  01A4               	clrf	LCD_Write_Int@sign
  6985  0768  318D  2560  3181   	fcall	_LCD_Write_Int
  6986                           
  6987                           ;main.c: 264: LCD_Write_Char(0);
  6988  076B  3000               	movlw	0
  6989  076C  3196  26B5  3181   	fcall	_LCD_Write_Char
  6990                           
  6991                           ;main.c: 265: LCD_Write_Char('F');
  6992  076F  3046               	movlw	70
  6993  0770  3196  26B5  3181   	fcall	_LCD_Write_Char
  6994                           
  6995                           ;main.c: 266: LCD_Write_Char(' ');
  6996  0773  3020               	movlw	32
  6997  0774  3196  26B5  3181   	fcall	_LCD_Write_Char
  6998                           
  6999                           ;main.c: 268: { LCD_Set_Cursor(9,1); LCD_Write_Int((int)displayTemp2,-1, 1, 0);};
  7000  0777  01F4               	clrf	LCD_Set_Cursor@y
  7001  0778  0AF4               	incf	LCD_Set_Cursor@y,f
  7002  0779  3009               	movlw	9
  7003  077A  3197  27C1  3181   	fcall	_LCD_Set_Cursor
  7004  077D  0021               	movlb	1	; select bank1
  7005  077E  0836               	movf	main@displayTemp2^(0+128),w
  7006  077F  00F0               	movwf	___fttol@f1
  7007  0780  0837               	movf	(main@displayTemp2+1)^(0+128),w
  7008  0781  00F1               	movwf	___fttol@f1+1
  7009  0782  0838               	movf	(main@displayTemp2+2)^(0+128),w
  7010  0783  00F2               	movwf	___fttol@f1+2
  7011  0784  318A  2249  3181   	fcall	___fttol
  7012  0787  0871               	movf	?___fttol+1,w
  7013  0788  0020               	movlb	0	; select bank0
  7014  0789  00A1               	movwf	LCD_Write_Int@value+1
  7015  078A  0870               	movf	?___fttol,w
  7016  078B  00A0               	movwf	LCD_Write_Int@value
  7017  078C  01A2               	clrf	LCD_Write_Int@fieldLength
  7018  078D  03A2               	decf	LCD_Write_Int@fieldLength,f
  7019  078E  01A3               	clrf	LCD_Write_Int@numPlaces
  7020  078F  0AA3               	incf	LCD_Write_Int@numPlaces,f
  7021  0790  01A4               	clrf	LCD_Write_Int@sign
  7022  0791  318D  2560  3181   	fcall	_LCD_Write_Int
  7023                           
  7024                           ;main.c: 269: LCD_Write_Char(0);
  7025  0794  3000               	movlw	0
  7026  0795  3196  26B5  3181   	fcall	_LCD_Write_Char
  7027                           
  7028                           ;main.c: 270: LCD_Write_Char('F');
  7029  0798  3046               	movlw	70
  7030  0799  3196  26B5  3181   	fcall	_LCD_Write_Char
  7031                           
  7032                           ;main.c: 271: LCD_Write_Char(' ');
  7033  079C  3020               	movlw	32
  7034  079D  3196  26B5  3181   	fcall	_LCD_Write_Char
  7035  07A0                     l3241:	
  7036                           
  7037                           ;main.c: 272: }
  7038                           ;main.c: 275: if(choice==0)C_or_F=0;
  7039  07A0  0021               	movlb	1	; select bank1
  7040  07A1  083B               	movf	main@choice^(0+128),w
  7041  07A2  1903               	btfsc	3,2
  7042  07A3  01BC               	clrf	main@C_or_F^(0+128)
  7043                           
  7044                           ;main.c: 277: if(choice==1)C_or_F=1;
  7045  07A4  033B               	decf	main@choice^(0+128),w
  7046  07A5  1D03               	btfss	3,2
  7047  07A6  2FA9               	goto	l3249
  7048  07A7  01BC               	clrf	main@C_or_F^(0+128)
  7049  07A8  0ABC               	incf	main@C_or_F^(0+128),f
  7050  07A9                     l3249:	
  7051                           
  7052                           ;main.c: 279: if(choice==2)C_or_F=1-C_or_F;
  7053  07A9  3002               	movlw	2
  7054  07AA  063B               	xorwf	main@choice^(0+128),w
  7055  07AB  1D03               	btfss	3,2
  7056  07AC  2FB5               	goto	l3253
  7057  07AD  033C               	decf	main@C_or_F^(0+128),w
  7058  07AE  3AFF               	xorlw	255
  7059  07AF  3E01               	addlw	1
  7060  07B0  0020               	movlb	0	; select bank0
  7061  07B1  00E9               	movwf	??_main
  7062  07B2  0869               	movf	??_main,w
  7063  07B3  0021               	movlb	1	; select bank1
  7064  07B4  00BC               	movwf	main@C_or_F^(0+128)
  7065  07B5                     l3253:	
  7066                           
  7067                           ;main.c: 295: loop=0;
  7068  07B5  01A3               	clrf	main@loop^(0+128)
  7069  07B6                     l3255:	
  7070                           
  7071                           ;main.c: 296: }
  7072                           ;main.c: 297: loop+=1;
  7073  07B6  3001               	movlw	1
  7074  07B7  0020               	movlb	0	; select bank0
  7075  07B8  00E9               	movwf	??_main
  7076  07B9  0869               	movf	??_main,w
  7077  07BA  0021               	movlb	1	; select bank1
  7078  07BB  07A3               	addwf	main@loop^(0+128),f
  7079  07BC  2BC2               	goto	l3005
  7080  07BD                     __end_of_main:	
  7081                           
  7082                           	psect	text1
  7083  0E2B                     __ptext1:	
  7084 ;; *************** function _tempCalc *****************
  7085 ;; Defined at:
  7086 ;;		line 4 in file "tempCalc.c"
  7087 ;; Parameters:    Size  Location     Type
  7088 ;;  analogValue     2   61[BANK0 ] int 
  7089 ;; Auto vars:     Size  Location     Type
  7090 ;;  steinhart       3   70[BANK0 ] float 
  7091 ;;  R               3   64[BANK0 ] float 
  7092 ;; Return value:  Size  Location     Type
  7093 ;;                  3   61[BANK0 ] float 
  7094 ;; Registers used:
  7095 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7096 ;; Tracked objects:
  7097 ;;		On entry : 0/0
  7098 ;;		On exit  : 0/0
  7099 ;;		Unchanged: 0/0
  7100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7101 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7102 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7104 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7105 ;;Total ram usage:       12 bytes
  7106 ;; Hardware stack levels used:    1
  7107 ;; Hardware stack levels required when called:    4
  7108 ;; This function calls:
  7109 ;;		___awtoft
  7110 ;;		___ftadd
  7111 ;;		___ftdiv
  7112 ;;		___ftmul
  7113 ;;		___ftsub
  7114 ;;		_log
  7115 ;; This function is called by:
  7116 ;;		_main
  7117 ;; This function uses a non-reentrant model
  7118 ;;
  7119                           
  7120                           
  7121                           ;psect for function _tempCalc
  7122  0E2B                     _tempCalc:	
  7123                           
  7124                           ;tempCalc.c: 6: float R, steinhart;
  7125                           ;tempCalc.c: 8: R = 10020/(1023/(float)analogValue - 1);
  7126                           
  7127                           ;incstack = 0
  7128                           ; Regs used in _tempCalc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7129  0E2B  3000               	movlw	0
  7130  0E2C  0020               	movlb	0	; select bank0
  7131  0E2D  00C0               	movwf	___ftadd@f1
  7132  0E2E  3080               	movlw	128
  7133  0E2F  00C1               	movwf	___ftadd@f1+1
  7134  0E30  30BF               	movlw	191
  7135  0E31  00C2               	movwf	___ftadd@f1+2
  7136  0E32  085E               	movf	tempCalc@analogValue+1,w
  7137  0E33  00F9               	movwf	___awtoft@c+1
  7138  0E34  085D               	movf	tempCalc@analogValue,w
  7139  0E35  00F8               	movwf	___awtoft@c
  7140  0E36  3196  2695  318E   	fcall	___awtoft
  7141  0E39  0878               	movf	?___awtoft,w
  7142  0E3A  0020               	movlb	0	; select bank0
  7143  0E3B  00B0               	movwf	___ftdiv@f2
  7144  0E3C  0879               	movf	?___awtoft+1,w
  7145  0E3D  00B1               	movwf	___ftdiv@f2+1
  7146  0E3E  087A               	movf	?___awtoft+2,w
  7147  0E3F  00B2               	movwf	___ftdiv@f2+2
  7148  0E40  30C0               	movlw	192
  7149  0E41  00B3               	movwf	___ftdiv@f1
  7150  0E42  307F               	movlw	127
  7151  0E43  00B4               	movwf	___ftdiv@f1+1
  7152  0E44  3044               	movlw	68
  7153  0E45  00B5               	movwf	___ftdiv@f1+2
  7154  0E46  318B  2356  318E   	fcall	___ftdiv
  7155  0E49  0020               	movlb	0	; select bank0
  7156  0E4A  0830               	movf	?___ftdiv,w
  7157  0E4B  00C3               	movwf	___ftadd@f2
  7158  0E4C  0831               	movf	?___ftdiv+1,w
  7159  0E4D  00C4               	movwf	___ftadd@f2+1
  7160  0E4E  0832               	movf	?___ftdiv+2,w
  7161  0E4F  00C5               	movwf	___ftadd@f2+2
  7162  0E50  318F  270A  318E   	fcall	___ftadd
  7163  0E53  0020               	movlb	0	; select bank0
  7164  0E54  0840               	movf	?___ftadd,w
  7165  0E55  00E3               	movwf	_tempCalc$988
  7166  0E56  0841               	movf	?___ftadd+1,w
  7167  0E57  00E4               	movwf	_tempCalc$988+1
  7168  0E58  0842               	movf	?___ftadd+2,w
  7169  0E59  00E5               	movwf	_tempCalc$988+2
  7170                           
  7171                           ;tempCalc.c: 6: float R, steinhart;
  7172                           ;tempCalc.c: 8: R = 10020/(1023/(float)analogValue - 1);
  7173  0E5A  0863               	movf	_tempCalc$988,w
  7174  0E5B  00B0               	movwf	___ftdiv@f2
  7175  0E5C  0864               	movf	_tempCalc$988+1,w
  7176  0E5D  00B1               	movwf	___ftdiv@f2+1
  7177  0E5E  0865               	movf	_tempCalc$988+2,w
  7178  0E5F  00B2               	movwf	___ftdiv@f2+2
  7179  0E60  3090               	movlw	144
  7180  0E61  00B3               	movwf	___ftdiv@f1
  7181  0E62  301C               	movlw	28
  7182  0E63  00B4               	movwf	___ftdiv@f1+1
  7183  0E64  3046               	movlw	70
  7184  0E65  00B5               	movwf	___ftdiv@f1+2
  7185  0E66  318B  2356  318E   	fcall	___ftdiv
  7186  0E69  0020               	movlb	0	; select bank0
  7187  0E6A  0830               	movf	?___ftdiv,w
  7188  0E6B  00E0               	movwf	tempCalc@R
  7189  0E6C  0831               	movf	?___ftdiv+1,w
  7190  0E6D  00E1               	movwf	tempCalc@R+1
  7191  0E6E  0832               	movf	?___ftdiv+2,w
  7192  0E6F  00E2               	movwf	tempCalc@R+2
  7193                           
  7194                           ;tempCalc.c: 10: steinhart = R /10061;
  7195  0E70  3034               	movlw	52
  7196  0E71  00B0               	movwf	___ftdiv@f2
  7197  0E72  301D               	movlw	29
  7198  0E73  00B1               	movwf	___ftdiv@f2+1
  7199  0E74  3046               	movlw	70
  7200  0E75  00B2               	movwf	___ftdiv@f2+2
  7201  0E76  0860               	movf	tempCalc@R,w
  7202  0E77  00B3               	movwf	___ftdiv@f1
  7203  0E78  0861               	movf	tempCalc@R+1,w
  7204  0E79  00B4               	movwf	___ftdiv@f1+1
  7205  0E7A  0862               	movf	tempCalc@R+2,w
  7206  0E7B  00B5               	movwf	___ftdiv@f1+2
  7207  0E7C  318B  2356  318E   	fcall	___ftdiv
  7208  0E7F  0020               	movlb	0	; select bank0
  7209  0E80  0830               	movf	?___ftdiv,w
  7210  0E81  00E6               	movwf	tempCalc@steinhart
  7211  0E82  0831               	movf	?___ftdiv+1,w
  7212  0E83  00E7               	movwf	tempCalc@steinhart+1
  7213  0E84  0832               	movf	?___ftdiv+2,w
  7214  0E85  00E8               	movwf	tempCalc@steinhart+2
  7215                           
  7216                           ;tempCalc.c: 11: steinhart = log(steinhart);
  7217  0E86  0866               	movf	tempCalc@steinhart,w
  7218  0E87  00D7               	movwf	log@x
  7219  0E88  0867               	movf	tempCalc@steinhart+1,w
  7220  0E89  00D8               	movwf	log@x+1
  7221  0E8A  0868               	movf	tempCalc@steinhart+2,w
  7222  0E8B  00D9               	movwf	log@x+2
  7223  0E8C  318B  23FF  318E   	fcall	_log
  7224  0E8F  0020               	movlb	0	; select bank0
  7225  0E90  0857               	movf	?_log,w
  7226  0E91  00E6               	movwf	tempCalc@steinhart
  7227  0E92  0858               	movf	?_log+1,w
  7228  0E93  00E7               	movwf	tempCalc@steinhart+1
  7229  0E94  0859               	movf	?_log+2,w
  7230  0E95  00E8               	movwf	tempCalc@steinhart+2
  7231                           
  7232                           ;tempCalc.c: 12: steinhart /= 3995;
  7233  0E96  30B0               	movlw	176
  7234  0E97  00B0               	movwf	___ftdiv@f2
  7235  0E98  3079               	movlw	121
  7236  0E99  00B1               	movwf	___ftdiv@f2+1
  7237  0E9A  3045               	movlw	69
  7238  0E9B  00B2               	movwf	___ftdiv@f2+2
  7239  0E9C  0866               	movf	tempCalc@steinhart,w
  7240  0E9D  00B3               	movwf	___ftdiv@f1
  7241  0E9E  0867               	movf	tempCalc@steinhart+1,w
  7242  0E9F  00B4               	movwf	___ftdiv@f1+1
  7243  0EA0  0868               	movf	tempCalc@steinhart+2,w
  7244  0EA1  00B5               	movwf	___ftdiv@f1+2
  7245  0EA2  318B  2356  318E   	fcall	___ftdiv
  7246  0EA5  0020               	movlb	0	; select bank0
  7247  0EA6  0830               	movf	?___ftdiv,w
  7248  0EA7  00E6               	movwf	tempCalc@steinhart
  7249  0EA8  0831               	movf	?___ftdiv+1,w
  7250  0EA9  00E7               	movwf	tempCalc@steinhart+1
  7251  0EAA  0832               	movf	?___ftdiv+2,w
  7252  0EAB  00E8               	movwf	tempCalc@steinhart+2
  7253                           
  7254                           ;tempCalc.c: 13: steinhart += 1.0 / (25 + 273.15);
  7255  0EAC  30CF               	movlw	207
  7256  0EAD  00C0               	movwf	___ftadd@f1
  7257  0EAE  305B               	movlw	91
  7258  0EAF  00C1               	movwf	___ftadd@f1+1
  7259  0EB0  303B               	movlw	59
  7260  0EB1  00C2               	movwf	___ftadd@f1+2
  7261  0EB2  0866               	movf	tempCalc@steinhart,w
  7262  0EB3  00C3               	movwf	___ftadd@f2
  7263  0EB4  0867               	movf	tempCalc@steinhart+1,w
  7264  0EB5  00C4               	movwf	___ftadd@f2+1
  7265  0EB6  0868               	movf	tempCalc@steinhart+2,w
  7266  0EB7  00C5               	movwf	___ftadd@f2+2
  7267  0EB8  318F  270A  318E   	fcall	___ftadd
  7268  0EBB  0020               	movlb	0	; select bank0
  7269  0EBC  0840               	movf	?___ftadd,w
  7270  0EBD  00E6               	movwf	tempCalc@steinhart
  7271  0EBE  0841               	movf	?___ftadd+1,w
  7272  0EBF  00E7               	movwf	tempCalc@steinhart+1
  7273  0EC0  0842               	movf	?___ftadd+2,w
  7274  0EC1  00E8               	movwf	tempCalc@steinhart+2
  7275                           
  7276                           ;tempCalc.c: 14: steinhart = 1.0 / steinhart;
  7277  0EC2  0866               	movf	tempCalc@steinhart,w
  7278  0EC3  00B0               	movwf	___ftdiv@f2
  7279  0EC4  0867               	movf	tempCalc@steinhart+1,w
  7280  0EC5  00B1               	movwf	___ftdiv@f2+1
  7281  0EC6  0868               	movf	tempCalc@steinhart+2,w
  7282  0EC7  00B2               	movwf	___ftdiv@f2+2
  7283  0EC8  3000               	movlw	0
  7284  0EC9  00B3               	movwf	___ftdiv@f1
  7285  0ECA  3080               	movlw	128
  7286  0ECB  00B4               	movwf	___ftdiv@f1+1
  7287  0ECC  303F               	movlw	63
  7288  0ECD  00B5               	movwf	___ftdiv@f1+2
  7289  0ECE  318B  2356  318E   	fcall	___ftdiv
  7290  0ED1  0020               	movlb	0	; select bank0
  7291  0ED2  0830               	movf	?___ftdiv,w
  7292  0ED3  00E6               	movwf	tempCalc@steinhart
  7293  0ED4  0831               	movf	?___ftdiv+1,w
  7294  0ED5  00E7               	movwf	tempCalc@steinhart+1
  7295  0ED6  0832               	movf	?___ftdiv+2,w
  7296  0ED7  00E8               	movwf	tempCalc@steinhart+2
  7297                           
  7298                           ;tempCalc.c: 15: steinhart -= 273.15;
  7299  0ED8  3093               	movlw	147
  7300  0ED9  00CD               	movwf	___ftsub@f2
  7301  0EDA  3088               	movlw	136
  7302  0EDB  00CE               	movwf	___ftsub@f2+1
  7303  0EDC  3043               	movlw	67
  7304  0EDD  00CF               	movwf	___ftsub@f2+2
  7305  0EDE  0866               	movf	tempCalc@steinhart,w
  7306  0EDF  00D0               	movwf	___ftsub@f1
  7307  0EE0  0867               	movf	tempCalc@steinhart+1,w
  7308  0EE1  00D1               	movwf	___ftsub@f1+1
  7309  0EE2  0868               	movf	tempCalc@steinhart+2,w
  7310  0EE3  00D2               	movwf	___ftsub@f1+2
  7311  0EE4  3196  2677  318E   	fcall	___ftsub
  7312  0EE7  0020               	movlb	0	; select bank0
  7313  0EE8  084D               	movf	?___ftsub,w
  7314  0EE9  00E6               	movwf	tempCalc@steinhart
  7315  0EEA  084E               	movf	?___ftsub+1,w
  7316  0EEB  00E7               	movwf	tempCalc@steinhart+1
  7317  0EEC  084F               	movf	?___ftsub+2,w
  7318  0EED  00E8               	movwf	tempCalc@steinhart+2
  7319                           
  7320                           ;tempCalc.c: 17: steinhart*=10;
  7321  0EEE  3000               	movlw	0
  7322  0EEF  00A0               	movwf	___ftmul@f1
  7323  0EF0  3020               	movlw	32
  7324  0EF1  00A1               	movwf	___ftmul@f1+1
  7325  0EF2  3041               	movlw	65
  7326  0EF3  00A2               	movwf	___ftmul@f1+2
  7327  0EF4  0866               	movf	tempCalc@steinhart,w
  7328  0EF5  00A3               	movwf	___ftmul@f2
  7329  0EF6  0867               	movf	tempCalc@steinhart+1,w
  7330  0EF7  00A4               	movwf	___ftmul@f2+1
  7331  0EF8  0868               	movf	tempCalc@steinhart+2,w
  7332  0EF9  00A5               	movwf	___ftmul@f2+2
  7333  0EFA  318C  24AC         	fcall	___ftmul
  7334  0EFC  0020               	movlb	0	; select bank0
  7335  0EFD  0820               	movf	?___ftmul,w
  7336  0EFE  00E6               	movwf	tempCalc@steinhart
  7337  0EFF  0821               	movf	?___ftmul+1,w
  7338  0F00  00E7               	movwf	tempCalc@steinhart+1
  7339  0F01  0822               	movf	?___ftmul+2,w
  7340  0F02  00E8               	movwf	tempCalc@steinhart+2
  7341                           
  7342                           ;tempCalc.c: 21: return steinhart;
  7343  0F03  0866               	movf	tempCalc@steinhart,w
  7344  0F04  00DD               	movwf	?_tempCalc
  7345  0F05  0867               	movf	tempCalc@steinhart+1,w
  7346  0F06  00DE               	movwf	?_tempCalc+1
  7347  0F07  0868               	movf	tempCalc@steinhart+2,w
  7348  0F08  00DF               	movwf	?_tempCalc+2
  7349  0F09  0008               	return
  7350  0F0A                     __end_of_tempCalc:	
  7351                           
  7352                           	psect	text2
  7353  0BFF                     __ptext2:	
  7354 ;; *************** function _log *****************
  7355 ;; Defined at:
  7356 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\log.c"
  7357 ;; Parameters:    Size  Location     Type
  7358 ;;  x               3   55[BANK0 ] float 
  7359 ;; Auto vars:     Size  Location     Type
  7360 ;;  exponent        2   59[BANK0 ] int 
  7361 ;; Return value:  Size  Location     Type
  7362 ;;                  3   55[BANK0 ] int 
  7363 ;; Registers used:
  7364 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7365 ;; Tracked objects:
  7366 ;;		On entry : 0/0
  7367 ;;		On exit  : 0/0
  7368 ;;		Unchanged: 0/0
  7369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7370 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7371 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7372 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7373 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7374 ;;Total ram usage:        6 bytes
  7375 ;; Hardware stack levels used:    1
  7376 ;; Hardware stack levels required when called:    3
  7377 ;; This function calls:
  7378 ;;		___awtoft
  7379 ;;		___ftadd
  7380 ;;		___ftge
  7381 ;;		___ftmul
  7382 ;;		_eval_poly
  7383 ;;		_frexp
  7384 ;; This function is called by:
  7385 ;;		_tempCalc
  7386 ;; This function uses a non-reentrant model
  7387 ;;
  7388                           
  7389                           
  7390                           ;psect for function _log
  7391  0BFF                     _log:	
  7392                           
  7393                           ;incstack = 0
  7394                           ; Regs used in _log: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7395  0BFF  0020               	movlb	0	; select bank0
  7396  0C00  0857               	movf	log@x,w
  7397  0C01  00F0               	movwf	___ftge@ff1
  7398  0C02  0858               	movf	log@x+1,w
  7399  0C03  00F1               	movwf	___ftge@ff1+1
  7400  0C04  0859               	movf	log@x+2,w
  7401  0C05  00F2               	movwf	___ftge@ff1+2
  7402  0C06  3000               	movlw	0
  7403  0C07  00F3               	movwf	___ftge@ff2
  7404  0C08  3000               	movlw	0
  7405  0C09  00F4               	movwf	___ftge@ff2+1
  7406  0C0A  3000               	movlw	0
  7407  0C0B  00F5               	movwf	___ftge@ff2+2
  7408  0C0C  3197  274B  318B   	fcall	___ftge
  7409  0C0F  1803               	btfsc	3,0
  7410  0C10  2C1D               	goto	l2469
  7411  0C11  3021               	movlw	33
  7412  0C12  0020               	movlb	0	; select bank0
  7413  0C13  00EC               	movwf	_errno
  7414  0C14  3000               	movlw	0
  7415  0C15  00ED               	movwf	_errno+1
  7416  0C16  3000               	movlw	0
  7417  0C17  00D7               	movwf	?_log
  7418  0C18  3000               	movlw	0
  7419  0C19  00D8               	movwf	?_log+1
  7420  0C1A  3000               	movlw	0
  7421  0C1B  00D9               	movwf	?_log+2
  7422  0C1C  0008               	return
  7423  0C1D                     l2469:	
  7424  0C1D  0020               	movlb	0	; select bank0
  7425  0C1E  0859               	movf	log@x+2,w
  7426  0C1F  0458               	iorwf	log@x+1,w
  7427  0C20  0457               	iorwf	log@x,w
  7428  0C21  1D03               	skipz
  7429  0C22  2C2E               	goto	l2475
  7430  0C23  3022               	movlw	34
  7431  0C24  00EC               	movwf	_errno
  7432  0C25  3000               	movlw	0
  7433  0C26  00ED               	movwf	_errno+1
  7434  0C27  3000               	movlw	0
  7435  0C28  00D7               	movwf	?_log
  7436  0C29  3000               	movlw	0
  7437  0C2A  00D8               	movwf	?_log+1
  7438  0C2B  3000               	movlw	0
  7439  0C2C  00D9               	movwf	?_log+2
  7440  0C2D  0008               	return
  7441  0C2E                     l2475:	
  7442  0C2E  3000               	movlw	0
  7443  0C2F  00C0               	movwf	___ftadd@f1
  7444  0C30  3080               	movlw	128
  7445  0C31  00C1               	movwf	___ftadd@f1+1
  7446  0C32  30BF               	movlw	191
  7447  0C33  00C2               	movwf	___ftadd@f1+2
  7448  0C34  3000               	movlw	0
  7449  0C35  00A0               	movwf	___ftmul@f1
  7450  0C36  3000               	movlw	0
  7451  0C37  00A1               	movwf	___ftmul@f1+1
  7452  0C38  3040               	movlw	64
  7453  0C39  00A2               	movwf	___ftmul@f1+2
  7454  0C3A  305B               	movlw	(low (log@exponent| 0))& (0+255)
  7455  0C3B  00DA               	movwf	??_log
  7456  0C3C  085A               	movf	??_log,w
  7457  0C3D  00F3               	movwf	frexp@eptr
  7458  0C3E  0857               	movf	log@x,w
  7459  0C3F  00F0               	movwf	frexp@value
  7460  0C40  0858               	movf	log@x+1,w
  7461  0C41  00F1               	movwf	frexp@value+1
  7462  0C42  0859               	movf	log@x+2,w
  7463  0C43  00F2               	movwf	frexp@value+2
  7464  0C44  3197  2786  318B   	fcall	_frexp
  7465  0C47  0870               	movf	?_frexp,w
  7466  0C48  0020               	movlb	0	; select bank0
  7467  0C49  00A3               	movwf	___ftmul@f2
  7468  0C4A  0871               	movf	?_frexp+1,w
  7469  0C4B  00A4               	movwf	___ftmul@f2+1
  7470  0C4C  0872               	movf	?_frexp+2,w
  7471  0C4D  00A5               	movwf	___ftmul@f2+2
  7472  0C4E  318C  24AC  318B   	fcall	___ftmul
  7473  0C51  0020               	movlb	0	; select bank0
  7474  0C52  0820               	movf	?___ftmul,w
  7475  0C53  00C3               	movwf	___ftadd@f2
  7476  0C54  0821               	movf	?___ftmul+1,w
  7477  0C55  00C4               	movwf	___ftadd@f2+1
  7478  0C56  0822               	movf	?___ftmul+2,w
  7479  0C57  00C5               	movwf	___ftadd@f2+2
  7480  0C58  318F  270A  318B   	fcall	___ftadd
  7481  0C5B  0020               	movlb	0	; select bank0
  7482  0C5C  0840               	movf	?___ftadd,w
  7483  0C5D  00D7               	movwf	log@x
  7484  0C5E  0841               	movf	?___ftadd+1,w
  7485  0C5F  00D8               	movwf	log@x+1
  7486  0C60  0842               	movf	?___ftadd+2,w
  7487  0C61  00D9               	movwf	log@x+2
  7488  0C62  30FF               	movlw	255
  7489  0C63  07DB               	addwf	log@exponent,f
  7490  0C64  30FF               	movlw	255
  7491  0C65  3DDC               	addwfc	log@exponent+1,f
  7492  0C66  0857               	movf	log@x,w
  7493  0C67  00CD               	movwf	eval_poly@x
  7494  0C68  0858               	movf	log@x+1,w
  7495  0C69  00CE               	movwf	eval_poly@x+1
  7496  0C6A  0859               	movf	log@x+2,w
  7497  0C6B  00CF               	movwf	eval_poly@x+2
  7498  0C6C  3000               	movlw	low (log@coeff| (0+32768))
  7499  0C6D  00D0               	movwf	eval_poly@d
  7500  0C6E  3090               	movlw	high (log@coeff| (0+32768))
  7501  0C6F  00D1               	movwf	eval_poly@d+1
  7502  0C70  3008               	movlw	8
  7503  0C71  00D2               	movwf	eval_poly@n
  7504  0C72  3000               	movlw	0
  7505  0C73  00D3               	movwf	eval_poly@n+1
  7506  0C74  3189  2103  318B   	fcall	_eval_poly
  7507  0C77  0020               	movlb	0	; select bank0
  7508  0C78  084D               	movf	?_eval_poly,w
  7509  0C79  00D7               	movwf	log@x
  7510  0C7A  084E               	movf	?_eval_poly+1,w
  7511  0C7B  00D8               	movwf	log@x+1
  7512  0C7C  084F               	movf	?_eval_poly+2,w
  7513  0C7D  00D9               	movwf	log@x+2
  7514  0C7E  0857               	movf	log@x,w
  7515  0C7F  00C0               	movwf	___ftadd@f1
  7516  0C80  0858               	movf	log@x+1,w
  7517  0C81  00C1               	movwf	___ftadd@f1+1
  7518  0C82  0859               	movf	log@x+2,w
  7519  0C83  00C2               	movwf	___ftadd@f1+2
  7520  0C84  3072               	movlw	114
  7521  0C85  00A0               	movwf	___ftmul@f1
  7522  0C86  3031               	movlw	49
  7523  0C87  00A1               	movwf	___ftmul@f1+1
  7524  0C88  303F               	movlw	63
  7525  0C89  00A2               	movwf	___ftmul@f1+2
  7526  0C8A  085C               	movf	log@exponent+1,w
  7527  0C8B  00F9               	movwf	___awtoft@c+1
  7528  0C8C  085B               	movf	log@exponent,w
  7529  0C8D  00F8               	movwf	___awtoft@c
  7530  0C8E  3196  2695  318B   	fcall	___awtoft
  7531  0C91  0878               	movf	?___awtoft,w
  7532  0C92  0020               	movlb	0	; select bank0
  7533  0C93  00A3               	movwf	___ftmul@f2
  7534  0C94  0879               	movf	?___awtoft+1,w
  7535  0C95  00A4               	movwf	___ftmul@f2+1
  7536  0C96  087A               	movf	?___awtoft+2,w
  7537  0C97  00A5               	movwf	___ftmul@f2+2
  7538  0C98  318C  24AC  318B   	fcall	___ftmul
  7539  0C9B  0020               	movlb	0	; select bank0
  7540  0C9C  0820               	movf	?___ftmul,w
  7541  0C9D  00C3               	movwf	___ftadd@f2
  7542  0C9E  0821               	movf	?___ftmul+1,w
  7543  0C9F  00C4               	movwf	___ftadd@f2+1
  7544  0CA0  0822               	movf	?___ftmul+2,w
  7545  0CA1  00C5               	movwf	___ftadd@f2+2
  7546  0CA2  318F  270A         	fcall	___ftadd
  7547  0CA4  0020               	movlb	0	; select bank0
  7548  0CA5  0840               	movf	?___ftadd,w
  7549  0CA6  00D7               	movwf	?_log
  7550  0CA7  0841               	movf	?___ftadd+1,w
  7551  0CA8  00D8               	movwf	?_log+1
  7552  0CA9  0842               	movf	?___ftadd+2,w
  7553  0CAA  00D9               	movwf	?_log+2
  7554  0CAB  0008               	return
  7555  0CAC                     __end_of_log:	
  7556                           
  7557                           	psect	text3
  7558  1786                     __ptext3:	
  7559 ;; *************** function _frexp *****************
  7560 ;; Defined at:
  7561 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\frexp.c"
  7562 ;; Parameters:    Size  Location     Type
  7563 ;;  value           3    0[COMMON] int 
  7564 ;;  eptr            1    3[COMMON] PTR int 
  7565 ;;		 -> log@exponent(2), 
  7566 ;; Auto vars:     Size  Location     Type
  7567 ;;		None
  7568 ;; Return value:  Size  Location     Type
  7569 ;;                  3    0[COMMON] PTR int 
  7570 ;; Registers used:
  7571 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7572 ;; Tracked objects:
  7573 ;;		On entry : 0/0
  7574 ;;		On exit  : 0/0
  7575 ;;		Unchanged: 0/0
  7576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7577 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7579 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7580 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7581 ;;Total ram usage:        6 bytes
  7582 ;; Hardware stack levels used:    1
  7583 ;; This function calls:
  7584 ;;		Nothing
  7585 ;; This function is called by:
  7586 ;;		_log
  7587 ;; This function uses a non-reentrant model
  7588 ;;
  7589                           
  7590                           
  7591                           ;psect for function _frexp
  7592  1786                     _frexp:	
  7593                           
  7594                           ;incstack = 0
  7595                           ; Regs used in _frexp: [wreg+fsr1l+fsr1h+status,2+status,0]
  7596  1786  0872               	movf	frexp@value+2,w
  7597  1787  0471               	iorwf	frexp@value+1,w
  7598  1788  0470               	iorwf	frexp@value,w
  7599  1789  1D03               	skipz
  7600  178A  2F98               	goto	l2301
  7601  178B  0873               	movf	frexp@eptr,w
  7602  178C  0086               	movwf	6
  7603  178D  0187               	clrf	7
  7604  178E  3000               	movlw	0
  7605  178F  3FC0               	movwi [0]fsr1
  7606  1790  3FC1               	movwi [1]fsr1
  7607  1791  3000               	movlw	0
  7608  1792  00F0               	movwf	?_frexp
  7609  1793  3000               	movlw	0
  7610  1794  00F1               	movwf	?_frexp+1
  7611  1795  3000               	movlw	0
  7612  1796  00F2               	movwf	?_frexp+2
  7613  1797  0008               	return
  7614  1798                     l2301:	
  7615  1798  0872               	movf	frexp@value+2,w
  7616  1799  397F               	andlw	127
  7617  179A  00F4               	movwf	??_frexp
  7618  179B  01F5               	clrf	??_frexp+1
  7619  179C  35F4               	lslf	??_frexp,f
  7620  179D  0DF5               	rlf	??_frexp+1,f
  7621  179E  0873               	movf	frexp@eptr,w
  7622  179F  0086               	movwf	6
  7623  17A0  0187               	clrf	7
  7624  17A1  0874               	movf	??_frexp,w
  7625  17A2  3FC0               	movwi [0]fsr1
  7626  17A3  0875               	movf	??_frexp+1,w
  7627  17A4  3FC1               	movwi [1]fsr1
  7628  17A5  0D71               	rlf	frexp@value+1,w
  7629  17A6  0D71               	rlf	frexp@value+1,w
  7630  17A7  3901               	andlw	1
  7631  17A8  00F4               	movwf	??_frexp
  7632  17A9  01F5               	clrf	??_frexp+1
  7633  17AA  0873               	movf	frexp@eptr,w
  7634  17AB  0086               	movwf	6
  7635  17AC  0187               	clrf	7
  7636  17AD  0874               	movf	??_frexp,w
  7637  17AE  0481               	iorwf	1,f
  7638  17AF  3141               	addfsr 1,1
  7639  17B0  0875               	movf	??_frexp+1,w
  7640  17B1  0481               	iorwf	1,f
  7641  17B2  0873               	movf	frexp@eptr,w
  7642  17B3  0086               	movwf	6
  7643  17B4  0187               	clrf	7
  7644  17B5  3082               	movlw	130
  7645  17B6  0781               	addwf	1,f
  7646  17B7  3141               	addfsr 1,1
  7647  17B8  30FF               	movlw	255
  7648  17B9  3D81               	addwfc	1,f
  7649  17BA  317F               	addfsr 1,-1
  7650  17BB  0872               	movf	frexp@value+2,w
  7651  17BC  3980               	andlw	-128
  7652  17BD  383F               	iorlw	63
  7653  17BE  00F2               	movwf	frexp@value+2
  7654  17BF  13F1               	bcf	frexp@value+1,7
  7655  17C0  0008               	return
  7656  17C1                     __end_of_frexp:	
  7657                           
  7658                           	psect	text4
  7659  0903                     __ptext4:	
  7660 ;; *************** function _eval_poly *****************
  7661 ;; Defined at:
  7662 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\evalpoly.c"
  7663 ;; Parameters:    Size  Location     Type
  7664 ;;  x               3   45[BANK0 ] PTR int 
  7665 ;;  d               2   48[BANK0 ] PTR const 
  7666 ;;		 -> log@coeff(27), 
  7667 ;;  n               2   50[BANK0 ] int 
  7668 ;; Auto vars:     Size  Location     Type
  7669 ;;  res             3   52[BANK0 ] int 
  7670 ;; Return value:  Size  Location     Type
  7671 ;;                  3   45[BANK0 ] int 
  7672 ;; Registers used:
  7673 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7674 ;; Tracked objects:
  7675 ;;		On entry : 0/0
  7676 ;;		On exit  : 0/0
  7677 ;;		Unchanged: 0/0
  7678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7679 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7680 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7682 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7683 ;;Total ram usage:       10 bytes
  7684 ;; Hardware stack levels used:    1
  7685 ;; Hardware stack levels required when called:    2
  7686 ;; This function calls:
  7687 ;;		___ftadd
  7688 ;;		___ftmul
  7689 ;;		___wmul
  7690 ;; This function is called by:
  7691 ;;		_log
  7692 ;; This function uses a non-reentrant model
  7693 ;;
  7694                           
  7695                           
  7696                           ;psect for function _eval_poly
  7697  0903                     _eval_poly:	
  7698                           
  7699                           ;incstack = 0
  7700                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7701  0903  0020               	movlb	0	; select bank0
  7702  0904  0853               	movf	eval_poly@n+1,w
  7703  0905  00F1               	movwf	___wmul@multiplier+1
  7704  0906  0852               	movf	eval_poly@n,w
  7705  0907  00F0               	movwf	___wmul@multiplier
  7706  0908  3003               	movlw	3
  7707  0909  00F2               	movwf	___wmul@multiplicand
  7708  090A  3000               	movlw	0
  7709  090B  00F3               	movwf	___wmul@multiplicand+1
  7710  090C  3196  265C  3189   	fcall	___wmul
  7711  090F  0020               	movlb	0	; select bank0
  7712  0910  0850               	movf	eval_poly@d,w
  7713  0911  0770               	addwf	?___wmul,w
  7714  0912  0084               	movwf	4
  7715  0913  0851               	movf	eval_poly@d+1,w
  7716  0914  3D71               	addwfc	?___wmul+1,w
  7717  0915  0085               	movwf	5
  7718  0916  3F00               	moviw [0]fsr0
  7719  0917  00D4               	movwf	eval_poly@res
  7720  0918  3F01               	moviw [1]fsr0
  7721  0919  00D5               	movwf	eval_poly@res+1
  7722  091A  3F02               	moviw [2]fsr0
  7723  091B                     L1:	
  7724  091B  00D6               	movwf	eval_poly@res+2
  7725  091C  0852               	movf	eval_poly@n,w
  7726  091D  0453               	iorwf	eval_poly@n+1,w
  7727  091E  1903               	btfsc	3,2
  7728  091F  295C               	goto	l2319
  7729  0920  30FF               	movlw	255
  7730  0921  07D2               	addwf	eval_poly@n,f
  7731  0922  30FF               	movlw	255
  7732  0923  3DD3               	addwfc	eval_poly@n+1,f
  7733  0924  0853               	movf	eval_poly@n+1,w
  7734  0925  00F1               	movwf	___wmul@multiplier+1
  7735  0926  0852               	movf	eval_poly@n,w
  7736  0927  00F0               	movwf	___wmul@multiplier
  7737  0928  3003               	movlw	3
  7738  0929  00F2               	movwf	___wmul@multiplicand
  7739  092A  3000               	movlw	0
  7740  092B  00F3               	movwf	___wmul@multiplicand+1
  7741  092C  3196  265C  3189   	fcall	___wmul
  7742  092F  0020               	movlb	0	; select bank0
  7743  0930  0850               	movf	eval_poly@d,w
  7744  0931  0770               	addwf	?___wmul,w
  7745  0932  0084               	movwf	4
  7746  0933  0851               	movf	eval_poly@d+1,w
  7747  0934  3D71               	addwfc	?___wmul+1,w
  7748  0935  0085               	movwf	5
  7749  0936  3F00               	moviw [0]fsr0
  7750  0937  00C0               	movwf	___ftadd@f1
  7751  0938  3F01               	moviw [1]fsr0
  7752  0939  00C1               	movwf	___ftadd@f1+1
  7753  093A  3F02               	moviw [2]fsr0
  7754  093B  00C2               	movwf	___ftadd@f1+2
  7755  093C  0854               	movf	eval_poly@res,w
  7756  093D  00A0               	movwf	___ftmul@f1
  7757  093E  0855               	movf	eval_poly@res+1,w
  7758  093F  00A1               	movwf	___ftmul@f1+1
  7759  0940  0856               	movf	eval_poly@res+2,w
  7760  0941  00A2               	movwf	___ftmul@f1+2
  7761  0942  084D               	movf	eval_poly@x,w
  7762  0943  00A3               	movwf	___ftmul@f2
  7763  0944  084E               	movf	eval_poly@x+1,w
  7764  0945  00A4               	movwf	___ftmul@f2+1
  7765  0946  084F               	movf	eval_poly@x+2,w
  7766  0947  00A5               	movwf	___ftmul@f2+2
  7767  0948  318C  24AC  3189   	fcall	___ftmul
  7768  094B  0020               	movlb	0	; select bank0
  7769  094C  0820               	movf	?___ftmul,w
  7770  094D  00C3               	movwf	___ftadd@f2
  7771  094E  0821               	movf	?___ftmul+1,w
  7772  094F  00C4               	movwf	___ftadd@f2+1
  7773  0950  0822               	movf	?___ftmul+2,w
  7774  0951  00C5               	movwf	___ftadd@f2+2
  7775  0952  318F  270A  3189   	fcall	___ftadd
  7776  0955  0020               	movlb	0	; select bank0
  7777  0956  0840               	movf	?___ftadd,w
  7778  0957  00D4               	movwf	eval_poly@res
  7779  0958  0841               	movf	?___ftadd+1,w
  7780  0959  00D5               	movwf	eval_poly@res+1
  7781  095A  0842               	movf	?___ftadd+2,w
  7782  095B  291B               	goto	L1
  7783  095C                     l2319:	
  7784  095C  0854               	movf	eval_poly@res,w
  7785  095D  00CD               	movwf	?_eval_poly
  7786  095E  0855               	movf	eval_poly@res+1,w
  7787  095F  00CE               	movwf	?_eval_poly+1
  7788  0960  0856               	movf	eval_poly@res+2,w
  7789  0961  00CF               	movwf	?_eval_poly+2
  7790  0962  0008               	return
  7791  0963                     __end_of_eval_poly:	
  7792                           
  7793                           	psect	text5
  7794  0CAC                     __ptext5:	
  7795 ;; *************** function ___ftmul *****************
  7796 ;; Defined at:
  7797 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftmul.c"
  7798 ;; Parameters:    Size  Location     Type
  7799 ;;  f1              3    0[BANK0 ] float 
  7800 ;;  f2              3    3[BANK0 ] float 
  7801 ;; Auto vars:     Size  Location     Type
  7802 ;;  f3_as_produc    3   11[BANK0 ] unsigned um
  7803 ;;  sign            1   15[BANK0 ] unsigned char 
  7804 ;;  cntr            1   14[BANK0 ] unsigned char 
  7805 ;;  exp             1   10[BANK0 ] unsigned char 
  7806 ;; Return value:  Size  Location     Type
  7807 ;;                  3    0[BANK0 ] float 
  7808 ;; Registers used:
  7809 ;;		wreg, status,2, status,0, pclath, cstack
  7810 ;; Tracked objects:
  7811 ;;		On entry : 0/0
  7812 ;;		On exit  : 0/0
  7813 ;;		Unchanged: 0/0
  7814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7815 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7816 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7817 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7818 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7819 ;;Total ram usage:       16 bytes
  7820 ;; Hardware stack levels used:    1
  7821 ;; Hardware stack levels required when called:    1
  7822 ;; This function calls:
  7823 ;;		___ftpack
  7824 ;; This function is called by:
  7825 ;;		_tempCalc
  7826 ;;		_main
  7827 ;;		_log
  7828 ;;		_eval_poly
  7829 ;; This function uses a non-reentrant model
  7830 ;;
  7831                           
  7832                           
  7833                           ;psect for function ___ftmul
  7834  0CAC                     ___ftmul:	
  7835                           
  7836                           ;incstack = 0
  7837                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  7838  0CAC  0020               	movlb	0	; select bank0
  7839  0CAD  0820               	movf	___ftmul@f1,w
  7840  0CAE  00A6               	movwf	??___ftmul
  7841  0CAF  0821               	movf	___ftmul@f1+1,w
  7842  0CB0  00A7               	movwf	??___ftmul+1
  7843  0CB1  0822               	movf	___ftmul@f1+2,w
  7844  0CB2  00A8               	movwf	??___ftmul+2
  7845  0CB3  1003               	clrc
  7846  0CB4  0D27               	rlf	??___ftmul+1,w
  7847  0CB5  0D28               	rlf	??___ftmul+2,w
  7848  0CB6  00A9               	movwf	??___ftmul+3
  7849  0CB7  0829               	movf	??___ftmul+3,w
  7850  0CB8  00AA               	movwf	___ftmul@exp
  7851  0CB9  082A               	movf	___ftmul@exp,w
  7852  0CBA  1D03               	btfss	3,2
  7853  0CBB  2CC3               	goto	l2187
  7854  0CBC  3000               	movlw	0
  7855  0CBD  00A0               	movwf	?___ftmul
  7856  0CBE  3000               	movlw	0
  7857  0CBF  00A1               	movwf	?___ftmul+1
  7858  0CC0  3000               	movlw	0
  7859  0CC1  00A2               	movwf	?___ftmul+2
  7860  0CC2  0008               	return
  7861  0CC3                     l2187:	
  7862  0CC3  0823               	movf	___ftmul@f2,w
  7863  0CC4  00A6               	movwf	??___ftmul
  7864  0CC5  0824               	movf	___ftmul@f2+1,w
  7865  0CC6  00A7               	movwf	??___ftmul+1
  7866  0CC7  0825               	movf	___ftmul@f2+2,w
  7867  0CC8  00A8               	movwf	??___ftmul+2
  7868  0CC9  1003               	clrc
  7869  0CCA  0D27               	rlf	??___ftmul+1,w
  7870  0CCB  0D28               	rlf	??___ftmul+2,w
  7871  0CCC  00A9               	movwf	??___ftmul+3
  7872  0CCD  0829               	movf	??___ftmul+3,w
  7873  0CCE  00AF               	movwf	___ftmul@sign
  7874  0CCF  082F               	movf	___ftmul@sign,w
  7875  0CD0  1D03               	btfss	3,2
  7876  0CD1  2CD9               	goto	l2193
  7877  0CD2  3000               	movlw	0
  7878  0CD3  00A0               	movwf	?___ftmul
  7879  0CD4  3000               	movlw	0
  7880  0CD5  00A1               	movwf	?___ftmul+1
  7881  0CD6  3000               	movlw	0
  7882  0CD7  00A2               	movwf	?___ftmul+2
  7883  0CD8  0008               	return
  7884  0CD9                     l2193:	
  7885  0CD9  082F               	movf	___ftmul@sign,w
  7886  0CDA  3E7B               	addlw	123
  7887  0CDB  00A6               	movwf	??___ftmul
  7888  0CDC  0826               	movf	??___ftmul,w
  7889  0CDD  07AA               	addwf	___ftmul@exp,f
  7890  0CDE  0820               	movf	___ftmul@f1,w
  7891  0CDF  00A6               	movwf	??___ftmul
  7892  0CE0  0821               	movf	___ftmul@f1+1,w
  7893  0CE1  00A7               	movwf	??___ftmul+1
  7894  0CE2  0822               	movf	___ftmul@f1+2,w
  7895  0CE3  00A8               	movwf	??___ftmul+2
  7896  0CE4  3010               	movlw	16
  7897  0CE5                     u2205:	
  7898  0CE5  36A8               	lsrf	??___ftmul+2,f
  7899  0CE6  0CA7               	rrf	??___ftmul+1,f
  7900  0CE7  0CA6               	rrf	??___ftmul,f
  7901  0CE8  0B89               	decfsz	9,f
  7902  0CE9  2CE5               	goto	u2205
  7903  0CEA  0826               	movf	??___ftmul,w
  7904  0CEB  00A9               	movwf	??___ftmul+3
  7905  0CEC  0829               	movf	??___ftmul+3,w
  7906  0CED  00AF               	movwf	___ftmul@sign
  7907  0CEE  0823               	movf	___ftmul@f2,w
  7908  0CEF  00A6               	movwf	??___ftmul
  7909  0CF0  0824               	movf	___ftmul@f2+1,w
  7910  0CF1  00A7               	movwf	??___ftmul+1
  7911  0CF2  0825               	movf	___ftmul@f2+2,w
  7912  0CF3  00A8               	movwf	??___ftmul+2
  7913  0CF4  3010               	movlw	16
  7914  0CF5                     u2215:	
  7915  0CF5  36A8               	lsrf	??___ftmul+2,f
  7916  0CF6  0CA7               	rrf	??___ftmul+1,f
  7917  0CF7  0CA6               	rrf	??___ftmul,f
  7918  0CF8  0B89               	decfsz	9,f
  7919  0CF9  2CF5               	goto	u2215
  7920  0CFA  0826               	movf	??___ftmul,w
  7921  0CFB  00A9               	movwf	??___ftmul+3
  7922  0CFC  0829               	movf	??___ftmul+3,w
  7923  0CFD  06AF               	xorwf	___ftmul@sign,f
  7924  0CFE  3080               	movlw	128
  7925  0CFF  00A6               	movwf	??___ftmul
  7926  0D00  0826               	movf	??___ftmul,w
  7927  0D01  05AF               	andwf	___ftmul@sign,f
  7928  0D02  17A1               	bsf	___ftmul@f1+1,7
  7929  0D03  17A4               	bsf	___ftmul@f2+1,7
  7930  0D04  30FF               	movlw	255
  7931  0D05  05A3               	andwf	___ftmul@f2,f
  7932  0D06  30FF               	movlw	255
  7933  0D07  05A4               	andwf	___ftmul@f2+1,f
  7934  0D08  3000               	movlw	0
  7935  0D09  05A5               	andwf	___ftmul@f2+2,f
  7936  0D0A  3000               	movlw	0
  7937  0D0B  00AB               	movwf	___ftmul@f3_as_product
  7938  0D0C  3000               	movlw	0
  7939  0D0D  00AC               	movwf	___ftmul@f3_as_product+1
  7940  0D0E  3000               	movlw	0
  7941  0D0F  00AD               	movwf	___ftmul@f3_as_product+2
  7942  0D10  3007               	movlw	7
  7943  0D11  00A6               	movwf	??___ftmul
  7944  0D12  0826               	movf	??___ftmul,w
  7945  0D13  00AE               	movwf	___ftmul@cntr
  7946  0D14                     l2205:	
  7947  0D14  1C20               	btfss	___ftmul@f1,0
  7948  0D15  2D1C               	goto	l2209
  7949  0D16  0823               	movf	___ftmul@f2,w
  7950  0D17  07AB               	addwf	___ftmul@f3_as_product,f
  7951  0D18  0824               	movf	___ftmul@f2+1,w
  7952  0D19  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  7953  0D1A  0825               	movf	___ftmul@f2+2,w
  7954  0D1B  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  7955  0D1C                     l2209:	
  7956  0D1C  3001               	movlw	1
  7957  0D1D                     u2235:	
  7958  0D1D  36A2               	lsrf	___ftmul@f1+2,f
  7959  0D1E  0CA1               	rrf	___ftmul@f1+1,f
  7960  0D1F  0CA0               	rrf	___ftmul@f1,f
  7961  0D20  0B89               	decfsz	9,f
  7962  0D21  2D1D               	goto	u2235
  7963  0D22  3001               	movlw	1
  7964  0D23                     u2245:	
  7965  0D23  35A3               	lslf	___ftmul@f2,f
  7966  0D24  0DA4               	rlf	___ftmul@f2+1,f
  7967  0D25  0DA5               	rlf	___ftmul@f2+2,f
  7968  0D26  0B89               	decfsz	9,f
  7969  0D27  2D23               	goto	u2245
  7970  0D28  3001               	movlw	1
  7971  0D29  02AE               	subwf	___ftmul@cntr,f
  7972  0D2A  1D03               	btfss	3,2
  7973  0D2B  2D14               	goto	l2205
  7974  0D2C  3009               	movlw	9
  7975  0D2D  00A6               	movwf	??___ftmul
  7976  0D2E  0826               	movf	??___ftmul,w
  7977  0D2F  00AE               	movwf	___ftmul@cntr
  7978  0D30                     l2217:	
  7979  0D30  1C20               	btfss	___ftmul@f1,0
  7980  0D31  2D38               	goto	l2221
  7981  0D32  0823               	movf	___ftmul@f2,w
  7982  0D33  07AB               	addwf	___ftmul@f3_as_product,f
  7983  0D34  0824               	movf	___ftmul@f2+1,w
  7984  0D35  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  7985  0D36  0825               	movf	___ftmul@f2+2,w
  7986  0D37  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  7987  0D38                     l2221:	
  7988  0D38  3001               	movlw	1
  7989  0D39                     u2275:	
  7990  0D39  36A2               	lsrf	___ftmul@f1+2,f
  7991  0D3A  0CA1               	rrf	___ftmul@f1+1,f
  7992  0D3B  0CA0               	rrf	___ftmul@f1,f
  7993  0D3C  0B89               	decfsz	9,f
  7994  0D3D  2D39               	goto	u2275
  7995  0D3E  3001               	movlw	1
  7996  0D3F                     u2285:	
  7997  0D3F  36AD               	lsrf	___ftmul@f3_as_product+2,f
  7998  0D40  0CAC               	rrf	___ftmul@f3_as_product+1,f
  7999  0D41  0CAB               	rrf	___ftmul@f3_as_product,f
  8000  0D42  0B89               	decfsz	9,f
  8001  0D43  2D3F               	goto	u2285
  8002  0D44  3001               	movlw	1
  8003  0D45  02AE               	subwf	___ftmul@cntr,f
  8004  0D46  1D03               	btfss	3,2
  8005  0D47  2D30               	goto	l2217
  8006  0D48  082B               	movf	___ftmul@f3_as_product,w
  8007  0D49  00F0               	movwf	___ftpack@arg
  8008  0D4A  082C               	movf	___ftmul@f3_as_product+1,w
  8009  0D4B  00F1               	movwf	___ftpack@arg+1
  8010  0D4C  082D               	movf	___ftmul@f3_as_product+2,w
  8011  0D4D  00F2               	movwf	___ftpack@arg+2
  8012  0D4E  082A               	movf	___ftmul@exp,w
  8013  0D4F  00A6               	movwf	??___ftmul
  8014  0D50  0826               	movf	??___ftmul,w
  8015  0D51  00F3               	movwf	___ftpack@exp
  8016  0D52  082F               	movf	___ftmul@sign,w
  8017  0D53  00A7               	movwf	??___ftmul+1
  8018  0D54  0827               	movf	??___ftmul+1,w
  8019  0D55  00F4               	movwf	___ftpack@sign
  8020  0D56  3189  2163         	fcall	___ftpack
  8021  0D58  0870               	movf	?___ftpack,w
  8022  0D59  0020               	movlb	0	; select bank0
  8023  0D5A  00A0               	movwf	?___ftmul
  8024  0D5B  0871               	movf	?___ftpack+1,w
  8025  0D5C  00A1               	movwf	?___ftmul+1
  8026  0D5D  0872               	movf	?___ftpack+2,w
  8027  0D5E  00A2               	movwf	?___ftmul+2
  8028  0D5F  0008               	return
  8029  0D60                     __end_of___ftmul:	
  8030                           
  8031                           	psect	text6
  8032  174B                     __ptext6:	
  8033 ;; *************** function ___ftge *****************
  8034 ;; Defined at:
  8035 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftge.c"
  8036 ;; Parameters:    Size  Location     Type
  8037 ;;  ff1             3    0[COMMON] float 
  8038 ;;  ff2             3    3[COMMON] float 
  8039 ;; Auto vars:     Size  Location     Type
  8040 ;;		None
  8041 ;; Return value:  Size  Location     Type
  8042 ;;		None               void
  8043 ;; Registers used:
  8044 ;;		wreg, status,2, status,0
  8045 ;; Tracked objects:
  8046 ;;		On entry : 0/0
  8047 ;;		On exit  : 0/0
  8048 ;;		Unchanged: 0/0
  8049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8050 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8052 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8053 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8054 ;;Total ram usage:        9 bytes
  8055 ;; Hardware stack levels used:    1
  8056 ;; This function calls:
  8057 ;;		Nothing
  8058 ;; This function is called by:
  8059 ;;		_log
  8060 ;; This function uses a non-reentrant model
  8061 ;;
  8062                           
  8063                           
  8064                           ;psect for function ___ftge
  8065  174B                     ___ftge:	
  8066                           
  8067                           ;incstack = 0
  8068                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  8069  174B  1FF2               	btfss	___ftge@ff1+2,7
  8070  174C  2F61               	goto	l2277
  8071  174D  0970               	comf	___ftge@ff1,w
  8072  174E  00F6               	movwf	??___ftge
  8073  174F  0971               	comf	___ftge@ff1+1,w
  8074  1750  00F7               	movwf	??___ftge+1
  8075  1751  0972               	comf	___ftge@ff1+2,w
  8076  1752  00F8               	movwf	??___ftge+2
  8077  1753  0AF6               	incf	??___ftge,f
  8078  1754  1903               	skipnz
  8079  1755  0AF7               	incf	??___ftge+1,f
  8080  1756  1903               	skipnz
  8081  1757  0AF8               	incf	??___ftge+2,f
  8082  1758  3000               	movlw	0
  8083  1759  0776               	addwf	??___ftge,w
  8084  175A  00F0               	movwf	___ftge@ff1
  8085  175B  3000               	movlw	0
  8086  175C  3D77               	addwfc	??___ftge+1,w
  8087  175D  00F1               	movwf	___ftge@ff1+1
  8088  175E  3080               	movlw	128
  8089  175F  3D78               	addwfc	??___ftge+2,w
  8090  1760  00F2               	movwf	___ftge@ff1+2
  8091  1761                     l2277:	
  8092  1761  1FF5               	btfss	___ftge@ff2+2,7
  8093  1762  2F77               	goto	l2281
  8094  1763  0973               	comf	___ftge@ff2,w
  8095  1764  00F6               	movwf	??___ftge
  8096  1765  0974               	comf	___ftge@ff2+1,w
  8097  1766  00F7               	movwf	??___ftge+1
  8098  1767  0975               	comf	___ftge@ff2+2,w
  8099  1768  00F8               	movwf	??___ftge+2
  8100  1769  0AF6               	incf	??___ftge,f
  8101  176A  1903               	skipnz
  8102  176B  0AF7               	incf	??___ftge+1,f
  8103  176C  1903               	skipnz
  8104  176D  0AF8               	incf	??___ftge+2,f
  8105  176E  3000               	movlw	0
  8106  176F  0776               	addwf	??___ftge,w
  8107  1770  00F3               	movwf	___ftge@ff2
  8108  1771  3000               	movlw	0
  8109  1772  3D77               	addwfc	??___ftge+1,w
  8110  1773  00F4               	movwf	___ftge@ff2+1
  8111  1774  3080               	movlw	128
  8112  1775  3D78               	addwfc	??___ftge+2,w
  8113  1776  00F5               	movwf	___ftge@ff2+2
  8114  1777                     l2281:	
  8115  1777  3080               	movlw	128
  8116  1778  06F2               	xorwf	___ftge@ff1+2,f
  8117  1779  3080               	movlw	128
  8118  177A  06F5               	xorwf	___ftge@ff2+2,f
  8119  177B  0875               	movf	___ftge@ff2+2,w
  8120  177C  0272               	subwf	___ftge@ff1+2,w
  8121  177D  1D03               	skipz
  8122  177E  0008               	return
  8123  177F  0874               	movf	___ftge@ff2+1,w
  8124  1780  0271               	subwf	___ftge@ff1+1,w
  8125  1781  1D03               	skipz
  8126  1782  0008               	return
  8127  1783  0873               	movf	___ftge@ff2,w
  8128  1784  0270               	subwf	___ftge@ff1,w
  8129  1785  0008               	return
  8130  1786                     __end_of___ftge:	
  8131                           
  8132                           	psect	text7
  8133  1695                     __ptext7:	
  8134 ;; *************** function ___awtoft *****************
  8135 ;; Defined at:
  8136 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awtoft.c"
  8137 ;; Parameters:    Size  Location     Type
  8138 ;;  c               2    8[COMMON] int 
  8139 ;; Auto vars:     Size  Location     Type
  8140 ;;  sign            1   13[COMMON] unsigned char 
  8141 ;; Return value:  Size  Location     Type
  8142 ;;                  3    8[COMMON] float 
  8143 ;; Registers used:
  8144 ;;		wreg, status,2, status,0, pclath, cstack
  8145 ;; Tracked objects:
  8146 ;;		On entry : 0/0
  8147 ;;		On exit  : 0/0
  8148 ;;		Unchanged: 0/0
  8149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8150 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8151 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8152 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8153 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8154 ;;Total ram usage:        6 bytes
  8155 ;; Hardware stack levels used:    1
  8156 ;; Hardware stack levels required when called:    1
  8157 ;; This function calls:
  8158 ;;		___ftpack
  8159 ;; This function is called by:
  8160 ;;		_tempCalc
  8161 ;;		_log
  8162 ;; This function uses a non-reentrant model
  8163 ;;
  8164                           
  8165                           
  8166                           ;psect for function ___awtoft
  8167  1695                     ___awtoft:	
  8168                           
  8169                           ;incstack = 0
  8170                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  8171  1695  01FD               	clrf	___awtoft@sign
  8172  1696  1FF9               	btfss	___awtoft@c+1,7
  8173  1697  2E9F               	goto	l2269
  8174  1698  09F8               	comf	___awtoft@c,f
  8175  1699  09F9               	comf	___awtoft@c+1,f
  8176  169A  0AF8               	incf	___awtoft@c,f
  8177  169B  1903               	skipnz
  8178  169C  0AF9               	incf	___awtoft@c+1,f
  8179  169D  01FD               	clrf	___awtoft@sign
  8180  169E  0AFD               	incf	___awtoft@sign,f
  8181  169F                     l2269:	
  8182  169F  0878               	movf	___awtoft@c,w
  8183  16A0  00F0               	movwf	___ftpack@arg
  8184  16A1  0879               	movf	___awtoft@c+1,w
  8185  16A2  00F1               	movwf	___ftpack@arg+1
  8186  16A3  01F2               	clrf	___ftpack@arg+2
  8187  16A4  308E               	movlw	142
  8188  16A5  00FB               	movwf	??___awtoft
  8189  16A6  087B               	movf	??___awtoft,w
  8190  16A7  00F3               	movwf	___ftpack@exp
  8191  16A8  087D               	movf	___awtoft@sign,w
  8192  16A9  00FC               	movwf	??___awtoft+1
  8193  16AA  087C               	movf	??___awtoft+1,w
  8194  16AB  00F4               	movwf	___ftpack@sign
  8195  16AC  3189  2163         	fcall	___ftpack
  8196  16AE  0870               	movf	?___ftpack,w
  8197  16AF  00F8               	movwf	?___awtoft
  8198  16B0  0871               	movf	?___ftpack+1,w
  8199  16B1  00F9               	movwf	?___awtoft+1
  8200  16B2  0872               	movf	?___ftpack+2,w
  8201  16B3  00FA               	movwf	?___awtoft+2
  8202  16B4  0008               	return
  8203  16B5                     __end_of___awtoft:	
  8204                           
  8205                           	psect	text8
  8206  1677                     __ptext8:	
  8207 ;; *************** function ___ftsub *****************
  8208 ;; Defined at:
  8209 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftsub.c"
  8210 ;; Parameters:    Size  Location     Type
  8211 ;;  f2              3   45[BANK0 ] float 
  8212 ;;  f1              3   48[BANK0 ] float 
  8213 ;; Auto vars:     Size  Location     Type
  8214 ;;		None
  8215 ;; Return value:  Size  Location     Type
  8216 ;;                  3   45[BANK0 ] float 
  8217 ;; Registers used:
  8218 ;;		wreg, status,2, status,0, pclath, cstack
  8219 ;; Tracked objects:
  8220 ;;		On entry : 0/0
  8221 ;;		On exit  : 0/0
  8222 ;;		Unchanged: 0/0
  8223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8224 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8227 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8228 ;;Total ram usage:        6 bytes
  8229 ;; Hardware stack levels used:    1
  8230 ;; Hardware stack levels required when called:    2
  8231 ;; This function calls:
  8232 ;;		___ftadd
  8233 ;; This function is called by:
  8234 ;;		_tempCalc
  8235 ;; This function uses a non-reentrant model
  8236 ;;
  8237                           
  8238                           
  8239                           ;psect for function ___ftsub
  8240  1677                     ___ftsub:	
  8241                           
  8242                           ;incstack = 0
  8243                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  8244  1677  0020               	movlb	0	; select bank0
  8245  1678  084F               	movf	___ftsub@f2+2,w
  8246  1679  044E               	iorwf	___ftsub@f2+1,w
  8247  167A  044D               	iorwf	___ftsub@f2,w
  8248  167B  1903               	skipnz
  8249  167C  2E7F               	goto	l2653
  8250  167D  3080               	movlw	128
  8251  167E  06CF               	xorwf	___ftsub@f2+2,f
  8252  167F                     l2653:	
  8253  167F  0850               	movf	___ftsub@f1,w
  8254  1680  00C0               	movwf	___ftadd@f1
  8255  1681  0851               	movf	___ftsub@f1+1,w
  8256  1682  00C1               	movwf	___ftadd@f1+1
  8257  1683  0852               	movf	___ftsub@f1+2,w
  8258  1684  00C2               	movwf	___ftadd@f1+2
  8259  1685  084D               	movf	___ftsub@f2,w
  8260  1686  00C3               	movwf	___ftadd@f2
  8261  1687  084E               	movf	___ftsub@f2+1,w
  8262  1688  00C4               	movwf	___ftadd@f2+1
  8263  1689  084F               	movf	___ftsub@f2+2,w
  8264  168A  00C5               	movwf	___ftadd@f2+2
  8265  168B  318F  270A         	fcall	___ftadd
  8266  168D  0020               	movlb	0	; select bank0
  8267  168E  0840               	movf	?___ftadd,w
  8268  168F  00CD               	movwf	?___ftsub
  8269  1690  0841               	movf	?___ftadd+1,w
  8270  1691  00CE               	movwf	?___ftsub+1
  8271  1692  0842               	movf	?___ftadd+2,w
  8272  1693  00CF               	movwf	?___ftsub+2
  8273  1694  0008               	return
  8274  1695                     __end_of___ftsub:	
  8275                           
  8276                           	psect	text9
  8277  0F0A                     __ptext9:	
  8278 ;; *************** function ___ftadd *****************
  8279 ;; Defined at:
  8280 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftadd.c"
  8281 ;; Parameters:    Size  Location     Type
  8282 ;;  f1              3   32[BANK0 ] float 
  8283 ;;  f2              3   35[BANK0 ] float 
  8284 ;; Auto vars:     Size  Location     Type
  8285 ;;  exp1            1   44[BANK0 ] unsigned char 
  8286 ;;  exp2            1   43[BANK0 ] unsigned char 
  8287 ;;  sign            1   42[BANK0 ] unsigned char 
  8288 ;; Return value:  Size  Location     Type
  8289 ;;                  3   32[BANK0 ] float 
  8290 ;; Registers used:
  8291 ;;		wreg, status,2, status,0, pclath, cstack
  8292 ;; Tracked objects:
  8293 ;;		On entry : 0/0
  8294 ;;		On exit  : 0/0
  8295 ;;		Unchanged: 0/0
  8296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8297 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8298 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8299 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8300 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8301 ;;Total ram usage:       13 bytes
  8302 ;; Hardware stack levels used:    1
  8303 ;; Hardware stack levels required when called:    1
  8304 ;; This function calls:
  8305 ;;		___ftpack
  8306 ;; This function is called by:
  8307 ;;		_tempCalc
  8308 ;;		_main
  8309 ;;		___ftsub
  8310 ;;		_log
  8311 ;;		_eval_poly
  8312 ;; This function uses a non-reentrant model
  8313 ;;
  8314                           
  8315                           
  8316                           ;psect for function ___ftadd
  8317  0F0A                     ___ftadd:	
  8318                           
  8319                           ;incstack = 0
  8320                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  8321  0F0A  0020               	movlb	0	; select bank0
  8322  0F0B  0840               	movf	___ftadd@f1,w
  8323  0F0C  00C6               	movwf	??___ftadd
  8324  0F0D  0841               	movf	___ftadd@f1+1,w
  8325  0F0E  00C7               	movwf	??___ftadd+1
  8326  0F0F  0842               	movf	___ftadd@f1+2,w
  8327  0F10  00C8               	movwf	??___ftadd+2
  8328  0F11  1003               	clrc
  8329  0F12  0D47               	rlf	??___ftadd+1,w
  8330  0F13  0D48               	rlf	??___ftadd+2,w
  8331  0F14  00C9               	movwf	??___ftadd+3
  8332  0F15  0849               	movf	??___ftadd+3,w
  8333  0F16  00CC               	movwf	___ftadd@exp1
  8334  0F17  0843               	movf	___ftadd@f2,w
  8335  0F18  00C6               	movwf	??___ftadd
  8336  0F19  0844               	movf	___ftadd@f2+1,w
  8337  0F1A  00C7               	movwf	??___ftadd+1
  8338  0F1B  0845               	movf	___ftadd@f2+2,w
  8339  0F1C  00C8               	movwf	??___ftadd+2
  8340  0F1D  1003               	clrc
  8341  0F1E  0D47               	rlf	??___ftadd+1,w
  8342  0F1F  0D48               	rlf	??___ftadd+2,w
  8343  0F20  00C9               	movwf	??___ftadd+3
  8344  0F21  0849               	movf	??___ftadd+3,w
  8345  0F22  00CB               	movwf	___ftadd@exp2
  8346  0F23  084C               	movf	___ftadd@exp1,w
  8347  0F24  1903               	btfsc	3,2
  8348  0F25  2F32               	goto	l2117
  8349  0F26  084B               	movf	___ftadd@exp2,w
  8350  0F27  024C               	subwf	___ftadd@exp1,w
  8351  0F28  1803               	skipnc
  8352  0F29  2F39               	goto	l2121
  8353  0F2A  034C               	decf	___ftadd@exp1,w
  8354  0F2B  3AFF               	xorlw	255
  8355  0F2C  074B               	addwf	___ftadd@exp2,w
  8356  0F2D  00C6               	movwf	??___ftadd
  8357  0F2E  3019               	movlw	25
  8358  0F2F  0246               	subwf	??___ftadd,w
  8359  0F30  1C03               	skipc
  8360  0F31  2F39               	goto	l2121
  8361  0F32                     l2117:	
  8362  0F32  0843               	movf	___ftadd@f2,w
  8363  0F33  00C0               	movwf	?___ftadd
  8364  0F34  0844               	movf	___ftadd@f2+1,w
  8365  0F35  00C1               	movwf	?___ftadd+1
  8366  0F36  0845               	movf	___ftadd@f2+2,w
  8367  0F37  00C2               	movwf	?___ftadd+2
  8368  0F38  0008               	return
  8369  0F39                     l2121:	
  8370  0F39  084B               	movf	___ftadd@exp2,w
  8371  0F3A  1903               	btfsc	3,2
  8372  0F3B  0008               	return
  8373  0F3C  084C               	movf	___ftadd@exp1,w
  8374  0F3D  024B               	subwf	___ftadd@exp2,w
  8375  0F3E  1803               	skipnc
  8376  0F3F  2F48               	goto	l2127
  8377  0F40  034B               	decf	___ftadd@exp2,w
  8378  0F41  3AFF               	xorlw	255
  8379  0F42  074C               	addwf	___ftadd@exp1,w
  8380  0F43  00C6               	movwf	??___ftadd
  8381  0F44  3019               	movlw	25
  8382  0F45  0246               	subwf	??___ftadd,w
  8383  0F46  1803               	btfsc	3,0
  8384  0F47  0008               	return
  8385  0F48                     l2127:	
  8386  0F48  3006               	movlw	6
  8387  0F49  00C6               	movwf	??___ftadd
  8388  0F4A  0846               	movf	??___ftadd,w
  8389  0F4B  00CA               	movwf	___ftadd@sign
  8390  0F4C  1BC2               	btfsc	___ftadd@f1+2,7
  8391  0F4D  17CA               	bsf	___ftadd@sign,7
  8392  0F4E  1BC5               	btfsc	___ftadd@f2+2,7
  8393  0F4F  174A               	bsf	___ftadd@sign,6
  8394  0F50  17C1               	bsf	___ftadd@f1+1,7
  8395  0F51  30FF               	movlw	255
  8396  0F52  05C0               	andwf	___ftadd@f1,f
  8397  0F53  30FF               	movlw	255
  8398  0F54  05C1               	andwf	___ftadd@f1+1,f
  8399  0F55  3000               	movlw	0
  8400  0F56  05C2               	andwf	___ftadd@f1+2,f
  8401  0F57  17C4               	bsf	___ftadd@f2+1,7
  8402  0F58  30FF               	movlw	255
  8403  0F59  05C3               	andwf	___ftadd@f2,f
  8404  0F5A  30FF               	movlw	255
  8405  0F5B  05C4               	andwf	___ftadd@f2+1,f
  8406  0F5C  3000               	movlw	0
  8407  0F5D  05C5               	andwf	___ftadd@f2+2,f
  8408  0F5E  084B               	movf	___ftadd@exp2,w
  8409  0F5F  024C               	subwf	___ftadd@exp1,w
  8410  0F60  1803               	skipnc
  8411  0F61  2F84               	goto	l2149
  8412  0F62                     l2139:	
  8413  0F62  3001               	movlw	1
  8414  0F63                     u2045:	
  8415  0F63  35C3               	lslf	___ftadd@f2,f
  8416  0F64  0DC4               	rlf	___ftadd@f2+1,f
  8417  0F65  0DC5               	rlf	___ftadd@f2+2,f
  8418  0F66  0B89               	decfsz	9,f
  8419  0F67  2F63               	goto	u2045
  8420  0F68  3001               	movlw	1
  8421  0F69  02CB               	subwf	___ftadd@exp2,f
  8422  0F6A  084B               	movf	___ftadd@exp2,w
  8423  0F6B  064C               	xorwf	___ftadd@exp1,w
  8424  0F6C  1903               	skipnz
  8425  0F6D  2F7F               	goto	l2147
  8426  0F6E  3001               	movlw	1
  8427  0F6F  02CA               	subwf	___ftadd@sign,f
  8428  0F70  084A               	movf	___ftadd@sign,w
  8429  0F71  3907               	andlw	7
  8430  0F72  1903               	btfsc	3,2
  8431  0F73  2F7F               	goto	l2147
  8432  0F74  2F62               	goto	l2139
  8433  0F75                     l2145:	
  8434  0F75  3001               	movlw	1
  8435  0F76                     u2075:	
  8436  0F76  36C2               	lsrf	___ftadd@f1+2,f
  8437  0F77  0CC1               	rrf	___ftadd@f1+1,f
  8438  0F78  0CC0               	rrf	___ftadd@f1,f
  8439  0F79  0B89               	decfsz	9,f
  8440  0F7A  2F76               	goto	u2075
  8441  0F7B  3001               	movlw	1
  8442  0F7C  00C6               	movwf	??___ftadd
  8443  0F7D  0846               	movf	??___ftadd,w
  8444  0F7E  07CC               	addwf	___ftadd@exp1,f
  8445  0F7F                     l2147:	
  8446  0F7F  084C               	movf	___ftadd@exp1,w
  8447  0F80  064B               	xorwf	___ftadd@exp2,w
  8448  0F81  1903               	btfsc	3,2
  8449  0F82  2FA9               	goto	l593
  8450  0F83  2F75               	goto	l2145
  8451  0F84                     l2149:	
  8452  0F84  084C               	movf	___ftadd@exp1,w
  8453  0F85  024B               	subwf	___ftadd@exp2,w
  8454  0F86  1803               	skipnc
  8455  0F87  2FA9               	goto	l593
  8456  0F88                     l2151:	
  8457  0F88  3001               	movlw	1
  8458  0F89                     u2105:	
  8459  0F89  35C0               	lslf	___ftadd@f1,f
  8460  0F8A  0DC1               	rlf	___ftadd@f1+1,f
  8461  0F8B  0DC2               	rlf	___ftadd@f1+2,f
  8462  0F8C  0B89               	decfsz	9,f
  8463  0F8D  2F89               	goto	u2105
  8464  0F8E  3001               	movlw	1
  8465  0F8F  02CC               	subwf	___ftadd@exp1,f
  8466  0F90  084B               	movf	___ftadd@exp2,w
  8467  0F91  064C               	xorwf	___ftadd@exp1,w
  8468  0F92  1903               	skipnz
  8469  0F93  2FA5               	goto	l2159
  8470  0F94  3001               	movlw	1
  8471  0F95  02CA               	subwf	___ftadd@sign,f
  8472  0F96  084A               	movf	___ftadd@sign,w
  8473  0F97  3907               	andlw	7
  8474  0F98  1903               	btfsc	3,2
  8475  0F99  2FA5               	goto	l2159
  8476  0F9A  2F88               	goto	l2151
  8477  0F9B                     l2157:	
  8478  0F9B  3001               	movlw	1
  8479  0F9C                     u2135:	
  8480  0F9C  36C5               	lsrf	___ftadd@f2+2,f
  8481  0F9D  0CC4               	rrf	___ftadd@f2+1,f
  8482  0F9E  0CC3               	rrf	___ftadd@f2,f
  8483  0F9F  0B89               	decfsz	9,f
  8484  0FA0  2F9C               	goto	u2135
  8485  0FA1  3001               	movlw	1
  8486  0FA2  00C6               	movwf	??___ftadd
  8487  0FA3  0846               	movf	??___ftadd,w
  8488  0FA4  07CB               	addwf	___ftadd@exp2,f
  8489  0FA5                     l2159:	
  8490  0FA5  084C               	movf	___ftadd@exp1,w
  8491  0FA6  064B               	xorwf	___ftadd@exp2,w
  8492  0FA7  1D03               	skipz
  8493  0FA8  2F9B               	goto	l2157
  8494  0FA9                     l593:	
  8495  0FA9  1FCA               	btfss	___ftadd@sign,7
  8496  0FAA  2FBB               	goto	l2163
  8497  0FAB  30FF               	movlw	255
  8498  0FAC  06C0               	xorwf	___ftadd@f1,f
  8499  0FAD  30FF               	movlw	255
  8500  0FAE  06C1               	xorwf	___ftadd@f1+1,f
  8501  0FAF  30FF               	movlw	255
  8502  0FB0  06C2               	xorwf	___ftadd@f1+2,f
  8503  0FB1  3001               	movlw	1
  8504  0FB2  07C0               	addwf	___ftadd@f1,f
  8505  0FB3  3000               	movlw	0
  8506  0FB4  1803               	skipnc
  8507  0FB5  3001               	movlw	1
  8508  0FB6  07C1               	addwf	___ftadd@f1+1,f
  8509  0FB7  3000               	movlw	0
  8510  0FB8  1803               	skipnc
  8511  0FB9  3001               	movlw	1
  8512  0FBA  07C2               	addwf	___ftadd@f1+2,f
  8513  0FBB                     l2163:	
  8514  0FBB  1F4A               	btfss	___ftadd@sign,6
  8515  0FBC  2FCD               	goto	l2167
  8516  0FBD  30FF               	movlw	255
  8517  0FBE  06C3               	xorwf	___ftadd@f2,f
  8518  0FBF  30FF               	movlw	255
  8519  0FC0  06C4               	xorwf	___ftadd@f2+1,f
  8520  0FC1  30FF               	movlw	255
  8521  0FC2  06C5               	xorwf	___ftadd@f2+2,f
  8522  0FC3  3001               	movlw	1
  8523  0FC4  07C3               	addwf	___ftadd@f2,f
  8524  0FC5  3000               	movlw	0
  8525  0FC6  1803               	skipnc
  8526  0FC7  3001               	movlw	1
  8527  0FC8  07C4               	addwf	___ftadd@f2+1,f
  8528  0FC9  3000               	movlw	0
  8529  0FCA  1803               	skipnc
  8530  0FCB  3001               	movlw	1
  8531  0FCC  07C5               	addwf	___ftadd@f2+2,f
  8532  0FCD                     l2167:	
  8533  0FCD  01CA               	clrf	___ftadd@sign
  8534  0FCE  0840               	movf	___ftadd@f1,w
  8535  0FCF  07C3               	addwf	___ftadd@f2,f
  8536  0FD0  0841               	movf	___ftadd@f1+1,w
  8537  0FD1  3DC4               	addwfc	___ftadd@f2+1,f
  8538  0FD2  0842               	movf	___ftadd@f1+2,w
  8539  0FD3  3DC5               	addwfc	___ftadd@f2+2,f
  8540  0FD4  1FC5               	btfss	___ftadd@f2+2,7
  8541  0FD5  2FE8               	goto	l2177
  8542  0FD6  30FF               	movlw	255
  8543  0FD7  06C3               	xorwf	___ftadd@f2,f
  8544  0FD8  30FF               	movlw	255
  8545  0FD9  06C4               	xorwf	___ftadd@f2+1,f
  8546  0FDA  30FF               	movlw	255
  8547  0FDB  06C5               	xorwf	___ftadd@f2+2,f
  8548  0FDC  3001               	movlw	1
  8549  0FDD  07C3               	addwf	___ftadd@f2,f
  8550  0FDE  3000               	movlw	0
  8551  0FDF  1803               	skipnc
  8552  0FE0  3001               	movlw	1
  8553  0FE1  07C4               	addwf	___ftadd@f2+1,f
  8554  0FE2  3000               	movlw	0
  8555  0FE3  1803               	skipnc
  8556  0FE4  3001               	movlw	1
  8557  0FE5  07C5               	addwf	___ftadd@f2+2,f
  8558  0FE6  01CA               	clrf	___ftadd@sign
  8559  0FE7  0ACA               	incf	___ftadd@sign,f
  8560  0FE8                     l2177:	
  8561  0FE8  0843               	movf	___ftadd@f2,w
  8562  0FE9  00F0               	movwf	___ftpack@arg
  8563  0FEA  0844               	movf	___ftadd@f2+1,w
  8564  0FEB  00F1               	movwf	___ftpack@arg+1
  8565  0FEC  0845               	movf	___ftadd@f2+2,w
  8566  0FED  00F2               	movwf	___ftpack@arg+2
  8567  0FEE  084C               	movf	___ftadd@exp1,w
  8568  0FEF  00C6               	movwf	??___ftadd
  8569  0FF0  0846               	movf	??___ftadd,w
  8570  0FF1  00F3               	movwf	___ftpack@exp
  8571  0FF2  084A               	movf	___ftadd@sign,w
  8572  0FF3  00C7               	movwf	??___ftadd+1
  8573  0FF4  0847               	movf	??___ftadd+1,w
  8574  0FF5  00F4               	movwf	___ftpack@sign
  8575  0FF6  3189  2163         	fcall	___ftpack
  8576  0FF8  0870               	movf	?___ftpack,w
  8577  0FF9  0020               	movlb	0	; select bank0
  8578  0FFA  00C0               	movwf	?___ftadd
  8579  0FFB  0871               	movf	?___ftpack+1,w
  8580  0FFC  00C1               	movwf	?___ftadd+1
  8581  0FFD  0872               	movf	?___ftpack+2,w
  8582  0FFE  00C2               	movwf	?___ftadd+2
  8583  0FFF  0008               	return
  8584  1000                     __end_of___ftadd:	
  8585                           
  8586                           	psect	text10
  8587  0B56                     __ptext10:	
  8588 ;; *************** function ___ftdiv *****************
  8589 ;; Defined at:
  8590 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftdiv.c"
  8591 ;; Parameters:    Size  Location     Type
  8592 ;;  f2              3   16[BANK0 ] float 
  8593 ;;  f1              3   19[BANK0 ] float 
  8594 ;; Auto vars:     Size  Location     Type
  8595 ;;  f3              3   27[BANK0 ] float 
  8596 ;;  sign            1   31[BANK0 ] unsigned char 
  8597 ;;  exp             1   30[BANK0 ] unsigned char 
  8598 ;;  cntr            1   26[BANK0 ] unsigned char 
  8599 ;; Return value:  Size  Location     Type
  8600 ;;                  3   16[BANK0 ] float 
  8601 ;; Registers used:
  8602 ;;		wreg, status,2, status,0, pclath, cstack
  8603 ;; Tracked objects:
  8604 ;;		On entry : 0/0
  8605 ;;		On exit  : 0/0
  8606 ;;		Unchanged: 0/0
  8607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8608 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8609 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8610 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8611 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8612 ;;Total ram usage:       16 bytes
  8613 ;; Hardware stack levels used:    1
  8614 ;; Hardware stack levels required when called:    1
  8615 ;; This function calls:
  8616 ;;		___ftpack
  8617 ;; This function is called by:
  8618 ;;		_tempCalc
  8619 ;;		_main
  8620 ;; This function uses a non-reentrant model
  8621 ;;
  8622                           
  8623                           
  8624                           ;psect for function ___ftdiv
  8625  0B56                     ___ftdiv:	
  8626                           
  8627                           ;incstack = 0
  8628                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  8629  0B56  0020               	movlb	0	; select bank0
  8630  0B57  0833               	movf	___ftdiv@f1,w
  8631  0B58  00B6               	movwf	??___ftdiv
  8632  0B59  0834               	movf	___ftdiv@f1+1,w
  8633  0B5A  00B7               	movwf	??___ftdiv+1
  8634  0B5B  0835               	movf	___ftdiv@f1+2,w
  8635  0B5C  00B8               	movwf	??___ftdiv+2
  8636  0B5D  1003               	clrc
  8637  0B5E  0D37               	rlf	??___ftdiv+1,w
  8638  0B5F  0D38               	rlf	??___ftdiv+2,w
  8639  0B60  00B9               	movwf	??___ftdiv+3
  8640  0B61  0839               	movf	??___ftdiv+3,w
  8641  0B62  00BE               	movwf	___ftdiv@exp
  8642  0B63  083E               	movf	___ftdiv@exp,w
  8643  0B64  1D03               	btfss	3,2
  8644  0B65  2B6D               	goto	l2613
  8645  0B66  3000               	movlw	0
  8646  0B67  00B0               	movwf	?___ftdiv
  8647  0B68  3000               	movlw	0
  8648  0B69  00B1               	movwf	?___ftdiv+1
  8649  0B6A  3000               	movlw	0
  8650  0B6B  00B2               	movwf	?___ftdiv+2
  8651  0B6C  0008               	return
  8652  0B6D                     l2613:	
  8653  0B6D  0830               	movf	___ftdiv@f2,w
  8654  0B6E  00B6               	movwf	??___ftdiv
  8655  0B6F  0831               	movf	___ftdiv@f2+1,w
  8656  0B70  00B7               	movwf	??___ftdiv+1
  8657  0B71  0832               	movf	___ftdiv@f2+2,w
  8658  0B72  00B8               	movwf	??___ftdiv+2
  8659  0B73  1003               	clrc
  8660  0B74  0D37               	rlf	??___ftdiv+1,w
  8661  0B75  0D38               	rlf	??___ftdiv+2,w
  8662  0B76  00B9               	movwf	??___ftdiv+3
  8663  0B77  0839               	movf	??___ftdiv+3,w
  8664  0B78  00BF               	movwf	___ftdiv@sign
  8665  0B79  083F               	movf	___ftdiv@sign,w
  8666  0B7A  1D03               	btfss	3,2
  8667  0B7B  2B83               	goto	l2619
  8668  0B7C  3000               	movlw	0
  8669  0B7D  00B0               	movwf	?___ftdiv
  8670  0B7E  3000               	movlw	0
  8671  0B7F  00B1               	movwf	?___ftdiv+1
  8672  0B80  3000               	movlw	0
  8673  0B81  00B2               	movwf	?___ftdiv+2
  8674  0B82  0008               	return
  8675  0B83                     l2619:	
  8676  0B83  3000               	movlw	0
  8677  0B84  00BB               	movwf	___ftdiv@f3
  8678  0B85  3000               	movlw	0
  8679  0B86  00BC               	movwf	___ftdiv@f3+1
  8680  0B87  3000               	movlw	0
  8681  0B88  00BD               	movwf	___ftdiv@f3+2
  8682  0B89  3089               	movlw	137
  8683  0B8A  073F               	addwf	___ftdiv@sign,w
  8684  0B8B  00B6               	movwf	??___ftdiv
  8685  0B8C  0836               	movf	??___ftdiv,w
  8686  0B8D  02BE               	subwf	___ftdiv@exp,f
  8687  0B8E  0833               	movf	___ftdiv@f1,w
  8688  0B8F  00B6               	movwf	??___ftdiv
  8689  0B90  0834               	movf	___ftdiv@f1+1,w
  8690  0B91  00B7               	movwf	??___ftdiv+1
  8691  0B92  0835               	movf	___ftdiv@f1+2,w
  8692  0B93  00B8               	movwf	??___ftdiv+2
  8693  0B94  3010               	movlw	16
  8694  0B95                     u2755:	
  8695  0B95  36B8               	lsrf	??___ftdiv+2,f
  8696  0B96  0CB7               	rrf	??___ftdiv+1,f
  8697  0B97  0CB6               	rrf	??___ftdiv,f
  8698  0B98  0B89               	decfsz	9,f
  8699  0B99  2B95               	goto	u2755
  8700  0B9A  0836               	movf	??___ftdiv,w
  8701  0B9B  00B9               	movwf	??___ftdiv+3
  8702  0B9C  0839               	movf	??___ftdiv+3,w
  8703  0B9D  00BF               	movwf	___ftdiv@sign
  8704  0B9E  0830               	movf	___ftdiv@f2,w
  8705  0B9F  00B6               	movwf	??___ftdiv
  8706  0BA0  0831               	movf	___ftdiv@f2+1,w
  8707  0BA1  00B7               	movwf	??___ftdiv+1
  8708  0BA2  0832               	movf	___ftdiv@f2+2,w
  8709  0BA3  00B8               	movwf	??___ftdiv+2
  8710  0BA4  3010               	movlw	16
  8711  0BA5                     u2765:	
  8712  0BA5  36B8               	lsrf	??___ftdiv+2,f
  8713  0BA6  0CB7               	rrf	??___ftdiv+1,f
  8714  0BA7  0CB6               	rrf	??___ftdiv,f
  8715  0BA8  0B89               	decfsz	9,f
  8716  0BA9  2BA5               	goto	u2765
  8717  0BAA  0836               	movf	??___ftdiv,w
  8718  0BAB  00B9               	movwf	??___ftdiv+3
  8719  0BAC  0839               	movf	??___ftdiv+3,w
  8720  0BAD  06BF               	xorwf	___ftdiv@sign,f
  8721  0BAE  3080               	movlw	128
  8722  0BAF  00B6               	movwf	??___ftdiv
  8723  0BB0  0836               	movf	??___ftdiv,w
  8724  0BB1  05BF               	andwf	___ftdiv@sign,f
  8725  0BB2  17B4               	bsf	___ftdiv@f1+1,7
  8726  0BB3  30FF               	movlw	255
  8727  0BB4  05B3               	andwf	___ftdiv@f1,f
  8728  0BB5  30FF               	movlw	255
  8729  0BB6  05B4               	andwf	___ftdiv@f1+1,f
  8730  0BB7  3000               	movlw	0
  8731  0BB8  05B5               	andwf	___ftdiv@f1+2,f
  8732  0BB9  17B1               	bsf	___ftdiv@f2+1,7
  8733  0BBA  30FF               	movlw	255
  8734  0BBB  05B0               	andwf	___ftdiv@f2,f
  8735  0BBC  30FF               	movlw	255
  8736  0BBD  05B1               	andwf	___ftdiv@f2+1,f
  8737  0BBE  3000               	movlw	0
  8738  0BBF  05B2               	andwf	___ftdiv@f2+2,f
  8739  0BC0  3018               	movlw	24
  8740  0BC1  00B6               	movwf	??___ftdiv
  8741  0BC2  0836               	movf	??___ftdiv,w
  8742  0BC3  00BA               	movwf	___ftdiv@cntr
  8743  0BC4                     l2633:	
  8744  0BC4  3001               	movlw	1
  8745  0BC5                     u2775:	
  8746  0BC5  35BB               	lslf	___ftdiv@f3,f
  8747  0BC6  0DBC               	rlf	___ftdiv@f3+1,f
  8748  0BC7  0DBD               	rlf	___ftdiv@f3+2,f
  8749  0BC8  0B89               	decfsz	9,f
  8750  0BC9  2BC5               	goto	u2775
  8751  0BCA  0832               	movf	___ftdiv@f2+2,w
  8752  0BCB  0235               	subwf	___ftdiv@f1+2,w
  8753  0BCC  1D03               	skipz
  8754  0BCD  2BD4               	goto	u2785
  8755  0BCE  0831               	movf	___ftdiv@f2+1,w
  8756  0BCF  0234               	subwf	___ftdiv@f1+1,w
  8757  0BD0  1D03               	skipz
  8758  0BD1  2BD4               	goto	u2785
  8759  0BD2  0830               	movf	___ftdiv@f2,w
  8760  0BD3  0233               	subwf	___ftdiv@f1,w
  8761  0BD4                     u2785:	
  8762  0BD4  1C03               	skipc
  8763  0BD5  2BDD               	goto	l2641
  8764  0BD6  0830               	movf	___ftdiv@f2,w
  8765  0BD7  02B3               	subwf	___ftdiv@f1,f
  8766  0BD8  0831               	movf	___ftdiv@f2+1,w
  8767  0BD9  3BB4               	subwfb	___ftdiv@f1+1,f
  8768  0BDA  0832               	movf	___ftdiv@f2+2,w
  8769  0BDB  3BB5               	subwfb	___ftdiv@f1+2,f
  8770  0BDC  143B               	bsf	___ftdiv@f3,0
  8771  0BDD                     l2641:	
  8772  0BDD  3001               	movlw	1
  8773  0BDE                     u2795:	
  8774  0BDE  35B3               	lslf	___ftdiv@f1,f
  8775  0BDF  0DB4               	rlf	___ftdiv@f1+1,f
  8776  0BE0  0DB5               	rlf	___ftdiv@f1+2,f
  8777  0BE1  0B89               	decfsz	9,f
  8778  0BE2  2BDE               	goto	u2795
  8779  0BE3  3001               	movlw	1
  8780  0BE4  02BA               	subwf	___ftdiv@cntr,f
  8781  0BE5  1D03               	btfss	3,2
  8782  0BE6  2BC4               	goto	l2633
  8783  0BE7  083B               	movf	___ftdiv@f3,w
  8784  0BE8  00F0               	movwf	___ftpack@arg
  8785  0BE9  083C               	movf	___ftdiv@f3+1,w
  8786  0BEA  00F1               	movwf	___ftpack@arg+1
  8787  0BEB  083D               	movf	___ftdiv@f3+2,w
  8788  0BEC  00F2               	movwf	___ftpack@arg+2
  8789  0BED  083E               	movf	___ftdiv@exp,w
  8790  0BEE  00B6               	movwf	??___ftdiv
  8791  0BEF  0836               	movf	??___ftdiv,w
  8792  0BF0  00F3               	movwf	___ftpack@exp
  8793  0BF1  083F               	movf	___ftdiv@sign,w
  8794  0BF2  00B7               	movwf	??___ftdiv+1
  8795  0BF3  0837               	movf	??___ftdiv+1,w
  8796  0BF4  00F4               	movwf	___ftpack@sign
  8797  0BF5  3189  2163         	fcall	___ftpack
  8798  0BF7  0870               	movf	?___ftpack,w
  8799  0BF8  0020               	movlb	0	; select bank0
  8800  0BF9  00B0               	movwf	?___ftdiv
  8801  0BFA  0871               	movf	?___ftpack+1,w
  8802  0BFB  00B1               	movwf	?___ftdiv+1
  8803  0BFC  0872               	movf	?___ftpack+2,w
  8804  0BFD  00B2               	movwf	?___ftdiv+2
  8805  0BFE  0008               	return
  8806  0BFF                     __end_of___ftdiv:	
  8807                           
  8808                           	psect	text11
  8809  0963                     __ptext11:	
  8810 ;; *************** function ___ftpack *****************
  8811 ;; Defined at:
  8812 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\float.c"
  8813 ;; Parameters:    Size  Location     Type
  8814 ;;  arg             3    0[COMMON] unsigned um
  8815 ;;  exp             1    3[COMMON] unsigned char 
  8816 ;;  sign            1    4[COMMON] unsigned char 
  8817 ;; Auto vars:     Size  Location     Type
  8818 ;;		None
  8819 ;; Return value:  Size  Location     Type
  8820 ;;                  3    0[COMMON] float 
  8821 ;; Registers used:
  8822 ;;		wreg, status,2, status,0
  8823 ;; Tracked objects:
  8824 ;;		On entry : 0/0
  8825 ;;		On exit  : 0/0
  8826 ;;		Unchanged: 0/0
  8827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8828 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8830 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8831 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8832 ;;Total ram usage:        8 bytes
  8833 ;; Hardware stack levels used:    1
  8834 ;; This function calls:
  8835 ;;		Nothing
  8836 ;; This function is called by:
  8837 ;;		___awtoft
  8838 ;;		___ftadd
  8839 ;;		___ftdiv
  8840 ;;		___ftmul
  8841 ;; This function uses a non-reentrant model
  8842 ;;
  8843                           
  8844                           
  8845                           ;psect for function ___ftpack
  8846  0963                     ___ftpack:	
  8847                           
  8848                           ;incstack = 0
  8849                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  8850  0963  0873               	movf	___ftpack@exp,w
  8851  0964  1903               	btfsc	3,2
  8852  0965  296B               	goto	l2053
  8853  0966  0872               	movf	___ftpack@arg+2,w
  8854  0967  0471               	iorwf	___ftpack@arg+1,w
  8855  0968  0470               	iorwf	___ftpack@arg,w
  8856  0969  1D03               	skipz
  8857  096A  297C               	goto	l2059
  8858  096B                     l2053:	
  8859  096B  3000               	movlw	0
  8860  096C  00F0               	movwf	?___ftpack
  8861  096D  3000               	movlw	0
  8862  096E  00F1               	movwf	?___ftpack+1
  8863  096F  3000               	movlw	0
  8864  0970  00F2               	movwf	?___ftpack+2
  8865  0971  0008               	return
  8866  0972                     l2057:	
  8867  0972  3001               	movlw	1
  8868  0973  00F5               	movwf	??___ftpack
  8869  0974  0875               	movf	??___ftpack,w
  8870  0975  07F3               	addwf	___ftpack@exp,f
  8871  0976  3001               	movlw	1
  8872  0977                     u1775:	
  8873  0977  36F2               	lsrf	___ftpack@arg+2,f
  8874  0978  0CF1               	rrf	___ftpack@arg+1,f
  8875  0979  0CF0               	rrf	___ftpack@arg,f
  8876  097A  0B89               	decfsz	9,f
  8877  097B  2977               	goto	u1775
  8878  097C                     l2059:	
  8879  097C  30FE               	movlw	254
  8880  097D  0572               	andwf	___ftpack@arg+2,w
  8881  097E  1903               	btfsc	3,2
  8882  097F  2995               	goto	l562
  8883  0980  2972               	goto	l2057
  8884  0981                     l2061:	
  8885  0981  3001               	movlw	1
  8886  0982  00F5               	movwf	??___ftpack
  8887  0983  0875               	movf	??___ftpack,w
  8888  0984  07F3               	addwf	___ftpack@exp,f
  8889  0985  3001               	movlw	1
  8890  0986  07F0               	addwf	___ftpack@arg,f
  8891  0987  3000               	movlw	0
  8892  0988  1803               	skipnc
  8893  0989  3001               	movlw	1
  8894  098A  07F1               	addwf	___ftpack@arg+1,f
  8895  098B  3000               	movlw	0
  8896  098C  1803               	skipnc
  8897  098D  3001               	movlw	1
  8898  098E  07F2               	addwf	___ftpack@arg+2,f
  8899  098F  3001               	movlw	1
  8900  0990                     u1795:	
  8901  0990  36F2               	lsrf	___ftpack@arg+2,f
  8902  0991  0CF1               	rrf	___ftpack@arg+1,f
  8903  0992  0CF0               	rrf	___ftpack@arg,f
  8904  0993  0B89               	decfsz	9,f
  8905  0994  2990               	goto	u1795
  8906  0995                     l562:	
  8907  0995  30FF               	movlw	255
  8908  0996  0572               	andwf	___ftpack@arg+2,w
  8909  0997  1903               	btfsc	3,2
  8910  0998  29A2               	goto	l2069
  8911  0999  2981               	goto	l2061
  8912  099A                     l2067:	
  8913  099A  3001               	movlw	1
  8914  099B  02F3               	subwf	___ftpack@exp,f
  8915  099C  3001               	movlw	1
  8916  099D                     u1815:	
  8917  099D  35F0               	lslf	___ftpack@arg,f
  8918  099E  0DF1               	rlf	___ftpack@arg+1,f
  8919  099F  0DF2               	rlf	___ftpack@arg+2,f
  8920  09A0  0B89               	decfsz	9,f
  8921  09A1  299D               	goto	u1815
  8922  09A2                     l2069:	
  8923  09A2  1BF1               	btfsc	___ftpack@arg+1,7
  8924  09A3  29A8               	goto	l569
  8925  09A4  3002               	movlw	2
  8926  09A5  0273               	subwf	___ftpack@exp,w
  8927  09A6  1803               	skipnc
  8928  09A7  299A               	goto	l2067
  8929  09A8                     l569:	
  8930  09A8  1873               	btfsc	___ftpack@exp,0
  8931  09A9  29B0               	goto	l570
  8932  09AA  30FF               	movlw	255
  8933  09AB  05F0               	andwf	___ftpack@arg,f
  8934  09AC  307F               	movlw	127
  8935  09AD  05F1               	andwf	___ftpack@arg+1,f
  8936  09AE  30FF               	movlw	255
  8937  09AF  05F2               	andwf	___ftpack@arg+2,f
  8938  09B0                     l570:	
  8939  09B0  1003               	clrc
  8940  09B1  0CF3               	rrf	___ftpack@exp,f
  8941  09B2  0873               	movf	___ftpack@exp,w
  8942  09B3  00F5               	movwf	??___ftpack
  8943  09B4  01F6               	clrf	??___ftpack+1
  8944  09B5  01F7               	clrf	??___ftpack+2
  8945  09B6  3010               	movlw	16
  8946  09B7                     u1855:	
  8947  09B7  35F5               	lslf	??___ftpack,f
  8948  09B8  0DF6               	rlf	??___ftpack+1,f
  8949  09B9  0DF7               	rlf	??___ftpack+2,f
  8950  09BA  0B89               	decfsz	9,f
  8951  09BB  29B7               	goto	u1855
  8952  09BC  0875               	movf	??___ftpack,w
  8953  09BD  04F0               	iorwf	___ftpack@arg,f
  8954  09BE  0876               	movf	??___ftpack+1,w
  8955  09BF  04F1               	iorwf	___ftpack@arg+1,f
  8956  09C0  0877               	movf	??___ftpack+2,w
  8957  09C1  04F2               	iorwf	___ftpack@arg+2,f
  8958  09C2  0874               	movf	___ftpack@sign,w
  8959  09C3  1903               	btfsc	3,2
  8960  09C4  0008               	return
  8961  09C5  17F2               	bsf	___ftpack@arg+2,7
  8962  09C6  0008               	return
  8963  09C7                     __end_of___ftpack:	
  8964                           
  8965                           	psect	text12
  8966  0012                     __ptext12:	
  8967 ;; *************** function _readAnalog *****************
  8968 ;; Defined at:
  8969 ;;		line 88 in file "adcc.c"
  8970 ;; Parameters:    Size  Location     Type
  8971 ;;  channel         2    6[BANK0 ] int 
  8972 ;; Auto vars:     Size  Location     Type
  8973 ;;  value           2   11[COMMON] int 
  8974 ;;  analog_chann    2    9[COMMON] int 
  8975 ;; Return value:  Size  Location     Type
  8976 ;;                  2    6[BANK0 ] int 
  8977 ;; Registers used:
  8978 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8979 ;; Tracked objects:
  8980 ;;		On entry : 0/0
  8981 ;;		On exit  : 0/0
  8982 ;;		Unchanged: 0/0
  8983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8984 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8985 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8986 ;;      Temps:          0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8987 ;;      Totals:         4      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8988 ;;Total ram usage:       22 bytes
  8989 ;; Hardware stack levels used:    1
  8990 ;; Hardware stack levels required when called:    1
  8991 ;; This function calls:
  8992 ;;		_ADCRead
  8993 ;;		___aldiv
  8994 ;;		___wmul
  8995 ;; This function is called by:
  8996 ;;		_main
  8997 ;; This function uses a non-reentrant model
  8998 ;;
  8999                           
  9000                           
  9001                           ;psect for function _readAnalog
  9002  0012                     _readAnalog:	
  9003                           
  9004                           ;adcc.c: 90: int value;
  9005                           ;adcc.c: 92: int analog_channel = channels[channel];
  9006                           
  9007                           ;incstack = 0
  9008                           ; Regs used in _readAnalog: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9009  0012  0020               	movlb	0	; select bank0
  9010  0013  3526               	lslf	readAnalog@channel,w
  9011  0014  3EDD               	addlw	(low (_channels| 0))& (0+255)
  9012  0015  0086               	movwf	6
  9013  0016  0187               	clrf	7
  9014  0017  3F40               	moviw [0]fsr1
  9015  0018  00F9               	movwf	readAnalog@analog_channel
  9016  0019  3F41               	moviw [1]fsr1
  9017  001A  00FA               	movwf	readAnalog@analog_channel+1
  9018                           
  9019                           ;adcc.c: 94: value = ADCRead(analog_channel);
  9020  001B  0879               	movf	readAnalog@analog_channel,w
  9021  001C  3180  2004  3180   	fcall	_ADCRead
  9022  001F  0871               	movf	?_ADCRead+1,w
  9023  0020  00FC               	movwf	readAnalog@value+1
  9024  0021  0870               	movf	?_ADCRead,w
  9025  0022  00FB               	movwf	readAnalog@value
  9026                           
  9027                           ;adcc.c: 98: totals[channel] = totals[channel] - samples[channel][sampleIndex];
  9028  0023  0020               	movlb	0	; select bank0
  9029  0024  0826               	movf	readAnalog@channel,w
  9030  0025  00A8               	movwf	??_readAnalog
  9031  0026  3001               	movlw	1
  9032  0027                     u2825:	
  9033  0027  35A8               	lslf	??_readAnalog,f
  9034  0028  3EFF               	addlw	-1
  9035  0029  1D03               	skipz
  9036  002A  2827               	goto	u2825
  9037  002B  3528               	lslf	??_readAnalog,w
  9038  002C  3EC0               	addlw	(low (_totals| 0))& (0+255)
  9039  002D  0086               	movwf	6
  9040  002E  0187               	clrf	7
  9041  002F  3F40               	moviw [0]fsr1
  9042  0030  00A9               	movwf	??_readAnalog+1
  9043  0031  3F41               	moviw [1]fsr1
  9044  0032  00AA               	movwf	??_readAnalog+2
  9045  0033  3F42               	moviw [2]fsr1
  9046  0034  00AB               	movwf	??_readAnalog+3
  9047  0035  3F43               	moviw [3]fsr1
  9048  0036  00AC               	movwf	??_readAnalog+4
  9049  0037  086F               	movf	_sampleIndex+1,w
  9050  0038  00AE               	movwf	??_readAnalog+6
  9051  0039  086E               	movf	_sampleIndex,w
  9052  003A  00AD               	movwf	??_readAnalog+5
  9053  003B  35AD               	lslf	??_readAnalog+5,f
  9054  003C  0DAE               	rlf	??_readAnalog+6,f
  9055  003D  0827               	movf	readAnalog@channel+1,w
  9056  003E  00F1               	movwf	___wmul@multiplier+1
  9057  003F  0826               	movf	readAnalog@channel,w
  9058  0040  00F0               	movwf	___wmul@multiplier
  9059  0041  3028               	movlw	40
  9060  0042  00F2               	movwf	___wmul@multiplicand
  9061  0043  3000               	movlw	0
  9062  0044  00F3               	movwf	___wmul@multiplicand+1
  9063  0045  3196  265C  3180   	fcall	___wmul
  9064  0048  3000               	movlw	0
  9065  0049  0020               	movlb	0	; select bank0
  9066  004A  00AF               	movwf	??_readAnalog+7
  9067  004B  3023               	movlw	35
  9068  004C  00B0               	movwf	??_readAnalog+8
  9069  004D  0870               	movf	?___wmul,w
  9070  004E  072F               	addwf	??_readAnalog+7,w
  9071  004F  00B1               	movwf	??_readAnalog+9
  9072  0050  0871               	movf	?___wmul+1,w
  9073  0051  3D30               	addwfc	??_readAnalog+8,w
  9074  0052  00B2               	movwf	??_readAnalog+10
  9075  0053  0831               	movf	??_readAnalog+9,w
  9076  0054  072D               	addwf	??_readAnalog+5,w
  9077  0055  0084               	movwf	4
  9078  0056  0832               	movf	??_readAnalog+10,w
  9079  0057  3D2E               	addwfc	??_readAnalog+6,w
  9080  0058  0085               	movwf	5
  9081  0059  3F00               	moviw [0]fsr0
  9082  005A  00B3               	movwf	??_readAnalog+11
  9083  005B  3F01               	moviw [1]fsr0
  9084  005C  00B4               	movwf	??_readAnalog+12
  9085  005D  01B5               	clrf	??_readAnalog+13
  9086  005E  01B6               	clrf	??_readAnalog+14
  9087  005F  09B3               	comf	??_readAnalog+11,f
  9088  0060  09B4               	comf	??_readAnalog+12,f
  9089  0061  09B5               	comf	??_readAnalog+13,f
  9090  0062  09B6               	comf	??_readAnalog+14,f
  9091  0063  0AB3               	incf	??_readAnalog+11,f
  9092  0064  1903               	skipnz
  9093  0065  0AB4               	incf	??_readAnalog+12,f
  9094  0066  1903               	skipnz
  9095  0067  0AB5               	incf	??_readAnalog+13,f
  9096  0068  1903               	skipnz
  9097  0069  0AB6               	incf	??_readAnalog+14,f
  9098  006A  0833               	movf	??_readAnalog+11,w
  9099  006B  07A9               	addwf	??_readAnalog+1,f
  9100  006C  0834               	movf	??_readAnalog+12,w
  9101  006D  3DAA               	addwfc	??_readAnalog+2,f
  9102  006E  0835               	movf	??_readAnalog+13,w
  9103  006F  3DAB               	addwfc	??_readAnalog+3,f
  9104  0070  0836               	movf	??_readAnalog+14,w
  9105  0071  3DAC               	addwfc	??_readAnalog+4,f
  9106  0072  0826               	movf	readAnalog@channel,w
  9107  0073  00B7               	movwf	??_readAnalog+15
  9108  0074  3001               	movlw	1
  9109  0075                     u2835:	
  9110  0075  35B7               	lslf	??_readAnalog+15,f
  9111  0076  3EFF               	addlw	-1
  9112  0077  1D03               	skipz
  9113  0078  2875               	goto	u2835
  9114  0079  3537               	lslf	??_readAnalog+15,w
  9115  007A  3EC0               	addlw	(low (_totals| 0))& (0+255)
  9116  007B  0086               	movwf	6
  9117  007C  0187               	clrf	7
  9118  007D  0829               	movf	??_readAnalog+1,w
  9119  007E  3FC0               	movwi [0]fsr1
  9120  007F  082A               	movf	??_readAnalog+2,w
  9121  0080  3FC1               	movwi [1]fsr1
  9122  0081  082B               	movf	??_readAnalog+3,w
  9123  0082  3FC2               	movwi [2]fsr1
  9124  0083  082C               	movf	??_readAnalog+4,w
  9125  0084  3FC3               	movwi [3]fsr1
  9126                           
  9127                           ;adcc.c: 100: samples[channel][sampleIndex] = value;
  9128  0085  086F               	movf	_sampleIndex+1,w
  9129  0086  00A9               	movwf	??_readAnalog+1
  9130  0087  086E               	movf	_sampleIndex,w
  9131  0088  00A8               	movwf	??_readAnalog
  9132  0089  35A8               	lslf	??_readAnalog,f
  9133  008A  0DA9               	rlf	??_readAnalog+1,f
  9134  008B  0827               	movf	readAnalog@channel+1,w
  9135  008C  00F1               	movwf	___wmul@multiplier+1
  9136  008D  0826               	movf	readAnalog@channel,w
  9137  008E  00F0               	movwf	___wmul@multiplier
  9138  008F  3028               	movlw	40
  9139  0090  00F2               	movwf	___wmul@multiplicand
  9140  0091  3000               	movlw	0
  9141  0092  00F3               	movwf	___wmul@multiplicand+1
  9142  0093  3196  265C  3180   	fcall	___wmul
  9143  0096  3000               	movlw	0
  9144  0097  0020               	movlb	0	; select bank0
  9145  0098  00AA               	movwf	??_readAnalog+2
  9146  0099  3023               	movlw	35
  9147  009A  00AB               	movwf	??_readAnalog+3
  9148  009B  0870               	movf	?___wmul,w
  9149  009C  072A               	addwf	??_readAnalog+2,w
  9150  009D  00AC               	movwf	??_readAnalog+4
  9151  009E  0871               	movf	?___wmul+1,w
  9152  009F  3D2B               	addwfc	??_readAnalog+3,w
  9153  00A0  00AD               	movwf	??_readAnalog+5
  9154  00A1  0828               	movf	??_readAnalog,w
  9155  00A2  072C               	addwf	??_readAnalog+4,w
  9156  00A3  0086               	movwf	6
  9157  00A4  0829               	movf	??_readAnalog+1,w
  9158  00A5  3D2D               	addwfc	??_readAnalog+5,w
  9159  00A6  0087               	movwf	7
  9160  00A7  087B               	movf	readAnalog@value,w
  9161  00A8  3FC0               	movwi [0]fsr1
  9162  00A9  087C               	movf	readAnalog@value+1,w
  9163  00AA  3FC1               	movwi [1]fsr1
  9164                           
  9165                           ;adcc.c: 102: totals[channel] = totals[channel] + samples[channel][sampleIndex];
  9166  00AB  0826               	movf	readAnalog@channel,w
  9167  00AC  00A8               	movwf	??_readAnalog
  9168  00AD  3001               	movlw	1
  9169  00AE                     u2845:	
  9170  00AE  35A8               	lslf	??_readAnalog,f
  9171  00AF  3EFF               	addlw	-1
  9172  00B0  1D03               	skipz
  9173  00B1  28AE               	goto	u2845
  9174  00B2  3528               	lslf	??_readAnalog,w
  9175  00B3  3EC0               	addlw	(low (_totals| 0))& (0+255)
  9176  00B4  0086               	movwf	6
  9177  00B5  0187               	clrf	7
  9178  00B6  3F40               	moviw [0]fsr1
  9179  00B7  00A9               	movwf	??_readAnalog+1
  9180  00B8  3F41               	moviw [1]fsr1
  9181  00B9  00AA               	movwf	??_readAnalog+2
  9182  00BA  3F42               	moviw [2]fsr1
  9183  00BB  00AB               	movwf	??_readAnalog+3
  9184  00BC  3F43               	moviw [3]fsr1
  9185  00BD  00AC               	movwf	??_readAnalog+4
  9186  00BE  086F               	movf	_sampleIndex+1,w
  9187  00BF  00AE               	movwf	??_readAnalog+6
  9188  00C0  086E               	movf	_sampleIndex,w
  9189  00C1  00AD               	movwf	??_readAnalog+5
  9190  00C2  35AD               	lslf	??_readAnalog+5,f
  9191  00C3  0DAE               	rlf	??_readAnalog+6,f
  9192  00C4  0827               	movf	readAnalog@channel+1,w
  9193  00C5  00F1               	movwf	___wmul@multiplier+1
  9194  00C6  0826               	movf	readAnalog@channel,w
  9195  00C7  00F0               	movwf	___wmul@multiplier
  9196  00C8  3028               	movlw	40
  9197  00C9  00F2               	movwf	___wmul@multiplicand
  9198  00CA  3000               	movlw	0
  9199  00CB  00F3               	movwf	___wmul@multiplicand+1
  9200  00CC  3196  265C  3180   	fcall	___wmul
  9201  00CF  3000               	movlw	0
  9202  00D0  0020               	movlb	0	; select bank0
  9203  00D1  00AF               	movwf	??_readAnalog+7
  9204  00D2  3023               	movlw	35
  9205  00D3  00B0               	movwf	??_readAnalog+8
  9206  00D4  0870               	movf	?___wmul,w
  9207  00D5  072F               	addwf	??_readAnalog+7,w
  9208  00D6  00B1               	movwf	??_readAnalog+9
  9209  00D7  0871               	movf	?___wmul+1,w
  9210  00D8  3D30               	addwfc	??_readAnalog+8,w
  9211  00D9  00B2               	movwf	??_readAnalog+10
  9212  00DA  0831               	movf	??_readAnalog+9,w
  9213  00DB  072D               	addwf	??_readAnalog+5,w
  9214  00DC  0084               	movwf	4
  9215  00DD  0832               	movf	??_readAnalog+10,w
  9216  00DE  3D2E               	addwfc	??_readAnalog+6,w
  9217  00DF  0085               	movwf	5
  9218  00E0  3F00               	moviw [0]fsr0
  9219  00E1  00B3               	movwf	??_readAnalog+11
  9220  00E2  3F01               	moviw [1]fsr0
  9221  00E3  00B4               	movwf	??_readAnalog+12
  9222  00E4  01B5               	clrf	??_readAnalog+13
  9223  00E5  01B6               	clrf	??_readAnalog+14
  9224  00E6  0833               	movf	??_readAnalog+11,w
  9225  00E7  07A9               	addwf	??_readAnalog+1,f
  9226  00E8  0834               	movf	??_readAnalog+12,w
  9227  00E9  3DAA               	addwfc	??_readAnalog+2,f
  9228  00EA  0835               	movf	??_readAnalog+13,w
  9229  00EB  3DAB               	addwfc	??_readAnalog+3,f
  9230  00EC  0836               	movf	??_readAnalog+14,w
  9231  00ED  3DAC               	addwfc	??_readAnalog+4,f
  9232  00EE  0826               	movf	readAnalog@channel,w
  9233  00EF  00B7               	movwf	??_readAnalog+15
  9234  00F0  3001               	movlw	1
  9235  00F1                     u2855:	
  9236  00F1  35B7               	lslf	??_readAnalog+15,f
  9237  00F2  3EFF               	addlw	-1
  9238  00F3  1D03               	skipz
  9239  00F4  28F1               	goto	u2855
  9240  00F5  3537               	lslf	??_readAnalog+15,w
  9241  00F6  3EC0               	addlw	(low (_totals| 0))& (0+255)
  9242  00F7  0086               	movwf	6
  9243  00F8  0187               	clrf	7
  9244  00F9  0829               	movf	??_readAnalog+1,w
  9245  00FA  3FC0               	movwi [0]fsr1
  9246  00FB  082A               	movf	??_readAnalog+2,w
  9247  00FC  3FC1               	movwi [1]fsr1
  9248  00FD  082B               	movf	??_readAnalog+3,w
  9249  00FE  3FC2               	movwi [2]fsr1
  9250  00FF  082C               	movf	??_readAnalog+4,w
  9251  0100  3FC3               	movwi [3]fsr1
  9252                           
  9253                           ;adcc.c: 104: if(channel>4)
  9254  0101  0827               	movf	readAnalog@channel+1,w
  9255  0102  3A80               	xorlw	128
  9256  0103  00A8               	movwf	??_readAnalog
  9257  0104  3080               	movlw	128
  9258  0105  0228               	subwf	??_readAnalog,w
  9259  0106  1D03               	skipz
  9260  0107  290A               	goto	u2865
  9261  0108  3005               	movlw	5
  9262  0109  0226               	subwf	readAnalog@channel,w
  9263  010A                     u2865:	
  9264  010A  1C03               	skipc
  9265  010B  291A               	goto	l2671
  9266                           
  9267                           ;adcc.c: 105: {
  9268                           ;adcc.c: 106: sampleIndex += 1;
  9269  010C  3001               	movlw	1
  9270  010D  0020               	movlb	0	; select bank0
  9271  010E  07EE               	addwf	_sampleIndex,f
  9272  010F  3000               	movlw	0
  9273  0110  3DEF               	addwfc	_sampleIndex+1,f
  9274                           
  9275                           ;adcc.c: 108: if(sampleIndex >= 20)
  9276  0111  3000               	movlw	0
  9277  0112  026F               	subwf	_sampleIndex+1,w
  9278  0113  3014               	movlw	20
  9279  0114  1903               	skipnz
  9280  0115  026E               	subwf	_sampleIndex,w
  9281  0116  1C03               	skipc
  9282  0117  291A               	goto	l2671
  9283                           
  9284                           ;adcc.c: 109: {
  9285                           ;adcc.c: 110: sampleIndex = 0;
  9286  0118  01EE               	clrf	_sampleIndex
  9287  0119  01EF               	clrf	_sampleIndex+1
  9288  011A                     l2671:	
  9289                           
  9290                           ;adcc.c: 111: }
  9291                           ;adcc.c: 112: }
  9292                           ;adcc.c: 114: value = totals[channel] / 20;
  9293  011A  3000               	movlw	0
  9294  011B  00F3               	movwf	___aldiv@divisor+3
  9295  011C  3000               	movlw	0
  9296  011D  00F2               	movwf	___aldiv@divisor+2
  9297  011E  3000               	movlw	0
  9298  011F  00F1               	movwf	___aldiv@divisor+1
  9299  0120  3014               	movlw	20
  9300  0121  00F0               	movwf	___aldiv@divisor
  9301  0122  0020               	movlb	0	; select bank0
  9302  0123  0826               	movf	readAnalog@channel,w
  9303  0124  00A8               	movwf	??_readAnalog
  9304  0125  3001               	movlw	1
  9305  0126                     u2885:	
  9306  0126  35A8               	lslf	??_readAnalog,f
  9307  0127  3EFF               	addlw	-1
  9308  0128  1D03               	skipz
  9309  0129  2926               	goto	u2885
  9310  012A  3528               	lslf	??_readAnalog,w
  9311  012B  3EC0               	addlw	(low (_totals| 0))& (0+255)
  9312  012C  0086               	movwf	6
  9313  012D  0187               	clrf	7
  9314  012E  3F40               	moviw [0]fsr1
  9315  012F  00F4               	movwf	___aldiv@dividend
  9316  0130  3F41               	moviw [1]fsr1
  9317  0131  00F5               	movwf	___aldiv@dividend+1
  9318  0132  3F42               	moviw [2]fsr1
  9319  0133  00F6               	movwf	___aldiv@dividend+2
  9320  0134  3F43               	moviw [3]fsr1
  9321  0135  00F7               	movwf	___aldiv@dividend+3
  9322  0136  3189  21C7         	fcall	___aldiv
  9323  0138  0871               	movf	?___aldiv+1,w
  9324  0139  00FC               	movwf	readAnalog@value+1
  9325  013A  0870               	movf	?___aldiv,w
  9326  013B  00FB               	movwf	readAnalog@value
  9327                           
  9328                           ;adcc.c: 116: return value;
  9329  013C  087C               	movf	readAnalog@value+1,w
  9330  013D  0020               	movlb	0	; select bank0
  9331  013E  00A7               	movwf	?_readAnalog+1
  9332  013F  087B               	movf	readAnalog@value,w
  9333  0140  00A6               	movwf	?_readAnalog
  9334  0141  0008               	return
  9335  0142                     __end_of_readAnalog:	
  9336                           
  9337                           	psect	text13
  9338  165C                     __ptext13:	
  9339 ;; *************** function ___wmul *****************
  9340 ;; Defined at:
  9341 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
  9342 ;; Parameters:    Size  Location     Type
  9343 ;;  multiplier      2    0[COMMON] unsigned int 
  9344 ;;  multiplicand    2    2[COMMON] unsigned int 
  9345 ;; Auto vars:     Size  Location     Type
  9346 ;;  product         2    4[COMMON] unsigned int 
  9347 ;; Return value:  Size  Location     Type
  9348 ;;                  2    0[COMMON] unsigned int 
  9349 ;; Registers used:
  9350 ;;		wreg, status,2, status,0
  9351 ;; Tracked objects:
  9352 ;;		On entry : 0/0
  9353 ;;		On exit  : 0/0
  9354 ;;		Unchanged: 0/0
  9355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9356 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9357 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9359 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9360 ;;Total ram usage:        6 bytes
  9361 ;; Hardware stack levels used:    1
  9362 ;; This function calls:
  9363 ;;		Nothing
  9364 ;; This function is called by:
  9365 ;;		_readAnalog
  9366 ;;		_eval_poly
  9367 ;; This function uses a non-reentrant model
  9368 ;;
  9369                           
  9370                           
  9371                           ;psect for function ___wmul
  9372  165C                     ___wmul:	
  9373                           
  9374                           ;incstack = 0
  9375                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  9376  165C  01F4               	clrf	___wmul@product
  9377  165D  01F5               	clrf	___wmul@product+1
  9378  165E                     l2099:	
  9379  165E  1C70               	btfss	___wmul@multiplier,0
  9380  165F  2E64               	goto	l401
  9381  1660  0872               	movf	___wmul@multiplicand,w
  9382  1661  07F4               	addwf	___wmul@product,f
  9383  1662  0873               	movf	___wmul@multiplicand+1,w
  9384  1663  3DF5               	addwfc	___wmul@product+1,f
  9385  1664                     l401:	
  9386  1664  3001               	movlw	1
  9387  1665                     u1925:	
  9388  1665  35F2               	lslf	___wmul@multiplicand,f
  9389  1666  0DF3               	rlf	___wmul@multiplicand+1,f
  9390  1667  0B89               	decfsz	9,f
  9391  1668  2E65               	goto	u1925
  9392  1669  3001               	movlw	1
  9393  166A                     u1935:	
  9394  166A  36F1               	lsrf	___wmul@multiplier+1,f
  9395  166B  0CF0               	rrf	___wmul@multiplier,f
  9396  166C  0B89               	decfsz	9,f
  9397  166D  2E6A               	goto	u1935
  9398  166E  0870               	movf	___wmul@multiplier,w
  9399  166F  0471               	iorwf	___wmul@multiplier+1,w
  9400  1670  1D03               	btfss	3,2
  9401  1671  2E5E               	goto	l2099
  9402  1672  0875               	movf	___wmul@product+1,w
  9403  1673  00F1               	movwf	?___wmul+1
  9404  1674  0874               	movf	___wmul@product,w
  9405  1675  00F0               	movwf	?___wmul
  9406  1676  0008               	return
  9407  1677                     __end_of___wmul:	
  9408                           
  9409                           	psect	text14
  9410  09C7                     __ptext14:	
  9411 ;; *************** function ___aldiv *****************
  9412 ;; Defined at:
  9413 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\aldiv.c"
  9414 ;; Parameters:    Size  Location     Type
  9415 ;;  divisor         4    0[COMMON] long 
  9416 ;;  dividend        4    4[COMMON] long 
  9417 ;; Auto vars:     Size  Location     Type
  9418 ;;  quotient        4    2[BANK0 ] long 
  9419 ;;  sign            1    1[BANK0 ] unsigned char 
  9420 ;;  counter         1    0[BANK0 ] unsigned char 
  9421 ;; Return value:  Size  Location     Type
  9422 ;;                  4    0[COMMON] long 
  9423 ;; Registers used:
  9424 ;;		wreg, status,2, status,0
  9425 ;; Tracked objects:
  9426 ;;		On entry : 0/0
  9427 ;;		On exit  : 0/0
  9428 ;;		Unchanged: 0/0
  9429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9430 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9431 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9432 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9433 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9434 ;;Total ram usage:       15 bytes
  9435 ;; Hardware stack levels used:    1
  9436 ;; This function calls:
  9437 ;;		Nothing
  9438 ;; This function is called by:
  9439 ;;		_readAnalog
  9440 ;; This function uses a non-reentrant model
  9441 ;;
  9442                           
  9443                           
  9444                           ;psect for function ___aldiv
  9445  09C7                     ___aldiv:	
  9446                           
  9447                           ;incstack = 0
  9448                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  9449  09C7  0020               	movlb	0	; select bank0
  9450  09C8  01A1               	clrf	___aldiv@sign
  9451  09C9  1FF3               	btfss	___aldiv@divisor+3,7
  9452  09CA  29D8               	goto	l456
  9453  09CB  09F0               	comf	___aldiv@divisor,f
  9454  09CC  09F1               	comf	___aldiv@divisor+1,f
  9455  09CD  09F2               	comf	___aldiv@divisor+2,f
  9456  09CE  09F3               	comf	___aldiv@divisor+3,f
  9457  09CF  0AF0               	incf	___aldiv@divisor,f
  9458  09D0  1903               	skipnz
  9459  09D1  0AF1               	incf	___aldiv@divisor+1,f
  9460  09D2  1903               	skipnz
  9461  09D3  0AF2               	incf	___aldiv@divisor+2,f
  9462  09D4  1903               	skipnz
  9463  09D5  0AF3               	incf	___aldiv@divisor+3,f
  9464  09D6  01A1               	clrf	___aldiv@sign
  9465  09D7  0AA1               	incf	___aldiv@sign,f
  9466  09D8                     l456:	
  9467  09D8  1FF7               	btfss	___aldiv@dividend+3,7
  9468  09D9  29E9               	goto	l2495
  9469  09DA  09F4               	comf	___aldiv@dividend,f
  9470  09DB  09F5               	comf	___aldiv@dividend+1,f
  9471  09DC  09F6               	comf	___aldiv@dividend+2,f
  9472  09DD  09F7               	comf	___aldiv@dividend+3,f
  9473  09DE  0AF4               	incf	___aldiv@dividend,f
  9474  09DF  1903               	skipnz
  9475  09E0  0AF5               	incf	___aldiv@dividend+1,f
  9476  09E1  1903               	skipnz
  9477  09E2  0AF6               	incf	___aldiv@dividend+2,f
  9478  09E3  1903               	skipnz
  9479  09E4  0AF7               	incf	___aldiv@dividend+3,f
  9480  09E5  3001               	movlw	1
  9481  09E6  00F8               	movwf	??___aldiv
  9482  09E7  0878               	movf	??___aldiv,w
  9483  09E8  06A1               	xorwf	___aldiv@sign,f
  9484  09E9                     l2495:	
  9485  09E9  3000               	movlw	0
  9486  09EA  00A5               	movwf	___aldiv@quotient+3
  9487  09EB  3000               	movlw	0
  9488  09EC  00A4               	movwf	___aldiv@quotient+2
  9489  09ED  3000               	movlw	0
  9490  09EE  00A3               	movwf	___aldiv@quotient+1
  9491  09EF  3000               	movlw	0
  9492  09F0  00A2               	movwf	___aldiv@quotient
  9493  09F1  0873               	movf	___aldiv@divisor+3,w
  9494  09F2  0472               	iorwf	___aldiv@divisor+2,w
  9495  09F3  0471               	iorwf	___aldiv@divisor+1,w
  9496  09F4  0470               	iorwf	___aldiv@divisor,w
  9497  09F5  1903               	skipnz
  9498  09F6  2A32               	goto	l2517
  9499  09F7  01A0               	clrf	___aldiv@counter
  9500  09F8  0AA0               	incf	___aldiv@counter,f
  9501  09F9                     l2503:	
  9502  09F9  1BF3               	btfsc	___aldiv@divisor+3,7
  9503  09FA  2A07               	goto	l2505
  9504  09FB  3001               	movlw	1
  9505  09FC                     u2475:	
  9506  09FC  35F0               	lslf	___aldiv@divisor,f
  9507  09FD  0DF1               	rlf	___aldiv@divisor+1,f
  9508  09FE  0DF2               	rlf	___aldiv@divisor+2,f
  9509  09FF  0DF3               	rlf	___aldiv@divisor+3,f
  9510  0A00  0B89               	decfsz	9,f
  9511  0A01  29FC               	goto	u2475
  9512  0A02  3001               	movlw	1
  9513  0A03  00F8               	movwf	??___aldiv
  9514  0A04  0878               	movf	??___aldiv,w
  9515  0A05  07A0               	addwf	___aldiv@counter,f
  9516  0A06  29F9               	goto	l2503
  9517  0A07                     l2505:	
  9518  0A07  3001               	movlw	1
  9519  0A08                     u2495:	
  9520  0A08  35A2               	lslf	___aldiv@quotient,f
  9521  0A09  0DA3               	rlf	___aldiv@quotient+1,f
  9522  0A0A  0DA4               	rlf	___aldiv@quotient+2,f
  9523  0A0B  0DA5               	rlf	___aldiv@quotient+3,f
  9524  0A0C  0B89               	decfsz	9,f
  9525  0A0D  2A08               	goto	u2495
  9526  0A0E  0873               	movf	___aldiv@divisor+3,w
  9527  0A0F  0277               	subwf	___aldiv@dividend+3,w
  9528  0A10  1D03               	skipz
  9529  0A11  2A1C               	goto	u2505
  9530  0A12  0872               	movf	___aldiv@divisor+2,w
  9531  0A13  0276               	subwf	___aldiv@dividend+2,w
  9532  0A14  1D03               	skipz
  9533  0A15  2A1C               	goto	u2505
  9534  0A16  0871               	movf	___aldiv@divisor+1,w
  9535  0A17  0275               	subwf	___aldiv@dividend+1,w
  9536  0A18  1D03               	skipz
  9537  0A19  2A1C               	goto	u2505
  9538  0A1A  0870               	movf	___aldiv@divisor,w
  9539  0A1B  0274               	subwf	___aldiv@dividend,w
  9540  0A1C                     u2505:	
  9541  0A1C  1C03               	skipc
  9542  0A1D  2A27               	goto	l2513
  9543  0A1E  0870               	movf	___aldiv@divisor,w
  9544  0A1F  02F4               	subwf	___aldiv@dividend,f
  9545  0A20  0871               	movf	___aldiv@divisor+1,w
  9546  0A21  3BF5               	subwfb	___aldiv@dividend+1,f
  9547  0A22  0872               	movf	___aldiv@divisor+2,w
  9548  0A23  3BF6               	subwfb	___aldiv@dividend+2,f
  9549  0A24  0873               	movf	___aldiv@divisor+3,w
  9550  0A25  3BF7               	subwfb	___aldiv@dividend+3,f
  9551  0A26  1422               	bsf	___aldiv@quotient,0
  9552  0A27                     l2513:	
  9553  0A27  3001               	movlw	1
  9554  0A28                     u2515:	
  9555  0A28  36F3               	lsrf	___aldiv@divisor+3,f
  9556  0A29  0CF2               	rrf	___aldiv@divisor+2,f
  9557  0A2A  0CF1               	rrf	___aldiv@divisor+1,f
  9558  0A2B  0CF0               	rrf	___aldiv@divisor,f
  9559  0A2C  0B89               	decfsz	9,f
  9560  0A2D  2A28               	goto	u2515
  9561  0A2E  3001               	movlw	1
  9562  0A2F  02A0               	subwf	___aldiv@counter,f
  9563  0A30  1D03               	btfss	3,2
  9564  0A31  2A07               	goto	l2505
  9565  0A32                     l2517:	
  9566  0A32  0821               	movf	___aldiv@sign,w
  9567  0A33  1903               	btfsc	3,2
  9568  0A34  2A40               	goto	l2521
  9569  0A35  09A2               	comf	___aldiv@quotient,f
  9570  0A36  09A3               	comf	___aldiv@quotient+1,f
  9571  0A37  09A4               	comf	___aldiv@quotient+2,f
  9572  0A38  09A5               	comf	___aldiv@quotient+3,f
  9573  0A39  0AA2               	incf	___aldiv@quotient,f
  9574  0A3A  1903               	skipnz
  9575  0A3B  0AA3               	incf	___aldiv@quotient+1,f
  9576  0A3C  1903               	skipnz
  9577  0A3D  0AA4               	incf	___aldiv@quotient+2,f
  9578  0A3E  1903               	skipnz
  9579  0A3F  0AA5               	incf	___aldiv@quotient+3,f
  9580  0A40                     l2521:	
  9581  0A40  0825               	movf	___aldiv@quotient+3,w
  9582  0A41  00F3               	movwf	?___aldiv+3
  9583  0A42  0824               	movf	___aldiv@quotient+2,w
  9584  0A43  00F2               	movwf	?___aldiv+2
  9585  0A44  0823               	movf	___aldiv@quotient+1,w
  9586  0A45  00F1               	movwf	?___aldiv+1
  9587  0A46  0822               	movf	___aldiv@quotient,w
  9588  0A47  00F0               	movwf	?___aldiv
  9589  0A48  0008               	return
  9590  0A49                     __end_of___aldiv:	
  9591                           
  9592                           	psect	text15
  9593  0004                     __ptext15:	
  9594 ;; *************** function _ADCRead *****************
  9595 ;; Defined at:
  9596 ;;		line 65 in file "adcc.c"
  9597 ;; Parameters:    Size  Location     Type
  9598 ;;  channel         1    wreg     enum E13559
  9599 ;; Auto vars:     Size  Location     Type
  9600 ;;  channel         1    3[COMMON] enum E13559
  9601 ;; Return value:  Size  Location     Type
  9602 ;;                  2    0[COMMON] unsigned int 
  9603 ;; Registers used:
  9604 ;;		wreg
  9605 ;; Tracked objects:
  9606 ;;		On entry : 0/0
  9607 ;;		On exit  : 0/0
  9608 ;;		Unchanged: 0/0
  9609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9610 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9611 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9613 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9614 ;;Total ram usage:        4 bytes
  9615 ;; Hardware stack levels used:    1
  9616 ;; This function calls:
  9617 ;;		Nothing
  9618 ;; This function is called by:
  9619 ;;		_readAnalog
  9620 ;;		_main
  9621 ;; This function uses a non-reentrant model
  9622 ;;
  9623                           
  9624                           
  9625                           ;psect for function _ADCRead
  9626  0004                     _ADCRead:	
  9627                           
  9628                           ;incstack = 0
  9629                           ; Regs used in _ADCRead: [wreg]
  9630                           ;ADCRead@channel stored from wreg
  9631  0004  00F3               	movwf	ADCRead@channel
  9632                           
  9633                           ;adcc.c: 68: ADPCH = channel;
  9634  0005  0873               	movf	ADCRead@channel,w
  9635  0006  0021               	movlb	1	; select bank1
  9636  0007  009E               	movwf	30	;volatile
  9637                           
  9638                           ;adcc.c: 71: ADCON0bits.ADON = 1;
  9639  0008  1793               	bsf	19,7	;volatile
  9640                           
  9641                           ;adcc.c: 74: ADCON0bits.ADCONT = 0;
  9642  0009  1313               	bcf	19,6	;volatile
  9643                           
  9644                           ;adcc.c: 77: ADCON0bits.ADGO = 1;
  9645  000A  1413               	bsf	19,0	;volatile
  9646  000B                     l58:	
  9647                           ;adcc.c: 81: {
  9648                           
  9649                           ;adcc.c: 80: while (ADCON0bits.ADGO)
  9650                           
  9651  000B  1813               	btfsc	19,0	;volatile
  9652  000C  280B               	goto	l58
  9653                           
  9654                           ;adcc.c: 82: }
  9655                           ;adcc.c: 85: return ((ADRESH << 8) + ADRESL);
  9656  000D  080D               	movf	13,w	;volatile
  9657  000E  00F1               	movwf	?_ADCRead+1
  9658  000F  080C               	movf	12,w	;volatile
  9659  0010  00F0               	movwf	?_ADCRead
  9660  0011  0008               	return
  9661  0012                     __end_of_ADCRead:	
  9662                           
  9663                           	psect	text16
  9664  16E1                     __ptext16:	
  9665 ;; *************** function ___lwdiv *****************
  9666 ;; Defined at:
  9667 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwdiv.c"
  9668 ;; Parameters:    Size  Location     Type
  9669 ;;  divisor         2    0[COMMON] unsigned int 
  9670 ;;  dividend        2    2[COMMON] unsigned int 
  9671 ;; Auto vars:     Size  Location     Type
  9672 ;;  quotient        2    5[COMMON] unsigned int 
  9673 ;;  counter         1    7[COMMON] unsigned char 
  9674 ;; Return value:  Size  Location     Type
  9675 ;;                  2    0[COMMON] unsigned int 
  9676 ;; Registers used:
  9677 ;;		wreg, status,2, status,0
  9678 ;; Tracked objects:
  9679 ;;		On entry : 0/0
  9680 ;;		On exit  : 0/0
  9681 ;;		Unchanged: 0/0
  9682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9683 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9684 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9685 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9686 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9687 ;;Total ram usage:        8 bytes
  9688 ;; Hardware stack levels used:    1
  9689 ;; This function calls:
  9690 ;;		Nothing
  9691 ;; This function is called by:
  9692 ;;		_main
  9693 ;; This function uses a non-reentrant model
  9694 ;;
  9695                           
  9696                           
  9697                           ;psect for function ___lwdiv
  9698  16E1                     ___lwdiv:	
  9699                           
  9700                           ;incstack = 0
  9701                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  9702  16E1  01F5               	clrf	___lwdiv@quotient
  9703  16E2  01F6               	clrf	___lwdiv@quotient+1
  9704  16E3  0870               	movf	___lwdiv@divisor,w
  9705  16E4  0471               	iorwf	___lwdiv@divisor+1,w
  9706  16E5  1903               	btfsc	3,2
  9707  16E6  2F10               	goto	l2861
  9708  16E7  01F7               	clrf	___lwdiv@counter
  9709  16E8  0AF7               	incf	___lwdiv@counter,f
  9710  16E9                     l2849:	
  9711  16E9  1BF1               	btfsc	___lwdiv@divisor+1,7
  9712  16EA  2EF5               	goto	l2851
  9713  16EB  3001               	movlw	1
  9714  16EC                     u3155:	
  9715  16EC  35F0               	lslf	___lwdiv@divisor,f
  9716  16ED  0DF1               	rlf	___lwdiv@divisor+1,f
  9717  16EE  0B89               	decfsz	9,f
  9718  16EF  2EEC               	goto	u3155
  9719  16F0  3001               	movlw	1
  9720  16F1  00F4               	movwf	??___lwdiv
  9721  16F2  0874               	movf	??___lwdiv,w
  9722  16F3  07F7               	addwf	___lwdiv@counter,f
  9723  16F4  2EE9               	goto	l2849
  9724  16F5                     l2851:	
  9725  16F5  3001               	movlw	1
  9726  16F6                     u3175:	
  9727  16F6  35F5               	lslf	___lwdiv@quotient,f
  9728  16F7  0DF6               	rlf	___lwdiv@quotient+1,f
  9729  16F8  0B89               	decfsz	9,f
  9730  16F9  2EF6               	goto	u3175
  9731  16FA  0871               	movf	___lwdiv@divisor+1,w
  9732  16FB  0273               	subwf	___lwdiv@dividend+1,w
  9733  16FC  1D03               	skipz
  9734  16FD  2F00               	goto	u3185
  9735  16FE  0870               	movf	___lwdiv@divisor,w
  9736  16FF  0272               	subwf	___lwdiv@dividend,w
  9737  1700                     u3185:	
  9738  1700  1C03               	skipc
  9739  1701  2F07               	goto	l2857
  9740  1702  0870               	movf	___lwdiv@divisor,w
  9741  1703  02F2               	subwf	___lwdiv@dividend,f
  9742  1704  0871               	movf	___lwdiv@divisor+1,w
  9743  1705  3BF3               	subwfb	___lwdiv@dividend+1,f
  9744  1706  1475               	bsf	___lwdiv@quotient,0
  9745  1707                     l2857:	
  9746  1707  3001               	movlw	1
  9747  1708                     u3195:	
  9748  1708  36F1               	lsrf	___lwdiv@divisor+1,f
  9749  1709  0CF0               	rrf	___lwdiv@divisor,f
  9750  170A  0B89               	decfsz	9,f
  9751  170B  2F08               	goto	u3195
  9752  170C  3001               	movlw	1
  9753  170D  02F7               	subwf	___lwdiv@counter,f
  9754  170E  1D03               	btfss	3,2
  9755  170F  2EF5               	goto	l2851
  9756  1710                     l2861:	
  9757  1710  0876               	movf	___lwdiv@quotient+1,w
  9758  1711  00F1               	movwf	?___lwdiv+1
  9759  1712  0875               	movf	___lwdiv@quotient,w
  9760  1713  00F0               	movwf	?___lwdiv
  9761  1714  0008               	return
  9762  1715                     __end_of___lwdiv:	
  9763                           
  9764                           	psect	text17
  9765  0A49                     __ptext17:	
  9766 ;; *************** function ___fttol *****************
  9767 ;; Defined at:
  9768 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fttol.c"
  9769 ;; Parameters:    Size  Location     Type
  9770 ;;  f1              3    0[COMMON] float 
  9771 ;; Auto vars:     Size  Location     Type
  9772 ;;  lval            4    9[COMMON] unsigned long 
  9773 ;;  exp1            1   13[COMMON] unsigned char 
  9774 ;;  sign1           1    8[COMMON] unsigned char 
  9775 ;; Return value:  Size  Location     Type
  9776 ;;                  4    0[COMMON] long 
  9777 ;; Registers used:
  9778 ;;		wreg, status,2, status,0
  9779 ;; Tracked objects:
  9780 ;;		On entry : 0/0
  9781 ;;		On exit  : 0/0
  9782 ;;		Unchanged: 0/0
  9783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9784 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9785 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9786 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9787 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9788 ;;Total ram usage:       14 bytes
  9789 ;; Hardware stack levels used:    1
  9790 ;; This function calls:
  9791 ;;		Nothing
  9792 ;; This function is called by:
  9793 ;;		_main
  9794 ;; This function uses a non-reentrant model
  9795 ;;
  9796                           
  9797                           
  9798                           ;psect for function ___fttol
  9799  0A49                     ___fttol:	
  9800                           
  9801                           ;incstack = 0
  9802                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  9803  0A49  0870               	movf	___fttol@f1,w
  9804  0A4A  00F4               	movwf	??___fttol
  9805  0A4B  0871               	movf	___fttol@f1+1,w
  9806  0A4C  00F5               	movwf	??___fttol+1
  9807  0A4D  0872               	movf	___fttol@f1+2,w
  9808  0A4E  00F6               	movwf	??___fttol+2
  9809  0A4F  1003               	clrc
  9810  0A50  0D75               	rlf	??___fttol+1,w
  9811  0A51  0D76               	rlf	??___fttol+2,w
  9812  0A52  00F7               	movwf	??___fttol+3
  9813  0A53  0877               	movf	??___fttol+3,w
  9814  0A54  00FD               	movwf	___fttol@exp1
  9815  0A55  087D               	movf	___fttol@exp1,w
  9816  0A56  1D03               	btfss	3,2
  9817  0A57  2A61               	goto	l2803
  9818  0A58  3000               	movlw	0
  9819  0A59  00F3               	movwf	?___fttol+3
  9820  0A5A  3000               	movlw	0
  9821  0A5B  00F2               	movwf	?___fttol+2
  9822  0A5C  3000               	movlw	0
  9823  0A5D  00F1               	movwf	?___fttol+1
  9824  0A5E  3000               	movlw	0
  9825  0A5F  00F0               	movwf	?___fttol
  9826  0A60  0008               	return
  9827  0A61                     l2803:	
  9828  0A61  0870               	movf	___fttol@f1,w
  9829  0A62  00F4               	movwf	??___fttol
  9830  0A63  0871               	movf	___fttol@f1+1,w
  9831  0A64  00F5               	movwf	??___fttol+1
  9832  0A65  0872               	movf	___fttol@f1+2,w
  9833  0A66  00F6               	movwf	??___fttol+2
  9834  0A67  3017               	movlw	23
  9835  0A68                     u3055:	
  9836  0A68  36F6               	lsrf	??___fttol+2,f
  9837  0A69  0CF5               	rrf	??___fttol+1,f
  9838  0A6A  0CF4               	rrf	??___fttol,f
  9839  0A6B  0B89               	decfsz	9,f
  9840  0A6C  2A68               	goto	u3055
  9841  0A6D  0874               	movf	??___fttol,w
  9842  0A6E  00F7               	movwf	??___fttol+3
  9843  0A6F  0877               	movf	??___fttol+3,w
  9844  0A70  00F8               	movwf	___fttol@sign1
  9845  0A71  17F1               	bsf	___fttol@f1+1,7
  9846  0A72  30FF               	movlw	255
  9847  0A73  05F0               	andwf	___fttol@f1,f
  9848  0A74  30FF               	movlw	255
  9849  0A75  05F1               	andwf	___fttol@f1+1,f
  9850  0A76  3000               	movlw	0
  9851  0A77  05F2               	andwf	___fttol@f1+2,f
  9852  0A78  0870               	movf	___fttol@f1,w
  9853  0A79  00F9               	movwf	___fttol@lval
  9854  0A7A  0871               	movf	___fttol@f1+1,w
  9855  0A7B  00FA               	movwf	___fttol@lval+1
  9856  0A7C  0872               	movf	___fttol@f1+2,w
  9857  0A7D  00FB               	movwf	___fttol@lval+2
  9858  0A7E  01FC               	clrf	___fttol@lval+3
  9859  0A7F  308E               	movlw	142
  9860  0A80  02FD               	subwf	___fttol@exp1,f
  9861  0A81  1FFD               	btfss	___fttol@exp1,7
  9862  0A82  2A9F               	goto	l2823
  9863  0A83  087D               	movf	___fttol@exp1,w
  9864  0A84  3A80               	xorlw	128
  9865  0A85  3E8F               	addlw	143
  9866  0A86  1803               	skipnc
  9867  0A87  2A91               	goto	l2821
  9868  0A88  3000               	movlw	0
  9869  0A89  00F3               	movwf	?___fttol+3
  9870  0A8A  3000               	movlw	0
  9871  0A8B  00F2               	movwf	?___fttol+2
  9872  0A8C  3000               	movlw	0
  9873  0A8D  00F1               	movwf	?___fttol+1
  9874  0A8E  3000               	movlw	0
  9875  0A8F  00F0               	movwf	?___fttol
  9876  0A90  0008               	return
  9877  0A91                     l2821:	
  9878  0A91  3001               	movlw	1
  9879  0A92                     u3085:	
  9880  0A92  36FC               	lsrf	___fttol@lval+3,f
  9881  0A93  0CFB               	rrf	___fttol@lval+2,f
  9882  0A94  0CFA               	rrf	___fttol@lval+1,f
  9883  0A95  0CF9               	rrf	___fttol@lval,f
  9884  0A96  0B89               	decfsz	9,f
  9885  0A97  2A92               	goto	u3085
  9886  0A98  3001               	movlw	1
  9887  0A99  00F4               	movwf	??___fttol
  9888  0A9A  0874               	movf	??___fttol,w
  9889  0A9B  07FD               	addwf	___fttol@exp1,f
  9890  0A9C  1903               	btfsc	3,2
  9891  0A9D  2AB8               	goto	l2831
  9892  0A9E  2A91               	goto	l2821
  9893  0A9F                     l2823:	
  9894  0A9F  3018               	movlw	24
  9895  0AA0  027D               	subwf	___fttol@exp1,w
  9896  0AA1  1C03               	skipc
  9897  0AA2  2AB5               	goto	l653
  9898  0AA3  3000               	movlw	0
  9899  0AA4  00F3               	movwf	?___fttol+3
  9900  0AA5  3000               	movlw	0
  9901  0AA6  00F2               	movwf	?___fttol+2
  9902  0AA7  3000               	movlw	0
  9903  0AA8  00F1               	movwf	?___fttol+1
  9904  0AA9  3000               	movlw	0
  9905  0AAA  00F0               	movwf	?___fttol
  9906  0AAB  0008               	return
  9907  0AAC                     l2829:	
  9908  0AAC  3001               	movlw	1
  9909  0AAD                     u3115:	
  9910  0AAD  35F9               	lslf	___fttol@lval,f
  9911  0AAE  0DFA               	rlf	___fttol@lval+1,f
  9912  0AAF  0DFB               	rlf	___fttol@lval+2,f
  9913  0AB0  0DFC               	rlf	___fttol@lval+3,f
  9914  0AB1  0B89               	decfsz	9,f
  9915  0AB2  2AAD               	goto	u3115
  9916  0AB3  3001               	movlw	1
  9917  0AB4  02FD               	subwf	___fttol@exp1,f
  9918  0AB5                     l653:	
  9919  0AB5  087D               	movf	___fttol@exp1,w
  9920  0AB6  1D03               	btfss	3,2
  9921  0AB7  2AAC               	goto	l2829
  9922  0AB8                     l2831:	
  9923  0AB8  0878               	movf	___fttol@sign1,w
  9924  0AB9  1903               	btfsc	3,2
  9925  0ABA  2AC6               	goto	l2835
  9926  0ABB  09F9               	comf	___fttol@lval,f
  9927  0ABC  09FA               	comf	___fttol@lval+1,f
  9928  0ABD  09FB               	comf	___fttol@lval+2,f
  9929  0ABE  09FC               	comf	___fttol@lval+3,f
  9930  0ABF  0AF9               	incf	___fttol@lval,f
  9931  0AC0  1903               	skipnz
  9932  0AC1  0AFA               	incf	___fttol@lval+1,f
  9933  0AC2  1903               	skipnz
  9934  0AC3  0AFB               	incf	___fttol@lval+2,f
  9935  0AC4  1903               	skipnz
  9936  0AC5  0AFC               	incf	___fttol@lval+3,f
  9937  0AC6                     l2835:	
  9938  0AC6  087C               	movf	___fttol@lval+3,w
  9939  0AC7  00F3               	movwf	?___fttol+3
  9940  0AC8  087B               	movf	___fttol@lval+2,w
  9941  0AC9  00F2               	movwf	?___fttol+2
  9942  0ACA  087A               	movf	___fttol@lval+1,w
  9943  0ACB  00F1               	movwf	?___fttol+1
  9944  0ACC  0879               	movf	___fttol@lval,w
  9945  0ACD  00F0               	movwf	?___fttol
  9946  0ACE  0008               	return
  9947  0ACF                     __end_of___fttol:	
  9948                           
  9949                           	psect	text18
  9950  082B                     __ptext18:	
  9951 ;; *************** function _SYSTEM_Initialize *****************
  9952 ;; Defined at:
  9953 ;;		line 71 in file "system.c"
  9954 ;; Parameters:    Size  Location     Type
  9955 ;;		None
  9956 ;; Auto vars:     Size  Location     Type
  9957 ;;		None
  9958 ;; Return value:  Size  Location     Type
  9959 ;;                  1    wreg      void 
  9960 ;; Registers used:
  9961 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9962 ;; Tracked objects:
  9963 ;;		On entry : 0/0
  9964 ;;		On exit  : 0/0
  9965 ;;		Unchanged: 0/0
  9966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9969 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9970 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9971 ;;Total ram usage:        3 bytes
  9972 ;; Hardware stack levels used:    1
  9973 ;; Hardware stack levels required when called:    3
  9974 ;; This function calls:
  9975 ;;		_ADCC_Initialize
  9976 ;;		_InitCustomChars
  9977 ;;		_LCD_Clear
  9978 ;;		_LCD_Init
  9979 ;;		_OSCILLATOR_Initialize
  9980 ;;		_PIN_MANAGER_Initialize
  9981 ;;		_PWM6_Initialize
  9982 ;;		_TMR2_Initialize
  9983 ;; This function is called by:
  9984 ;;		_main
  9985 ;; This function uses a non-reentrant model
  9986 ;;
  9987                           
  9988                           
  9989                           ;psect for function _SYSTEM_Initialize
  9990  082B                     _SYSTEM_Initialize:	
  9991                           
  9992                           ;system.c: 73: PIN_MANAGER_Initialize();
  9993                           
  9994                           ;incstack = 0
  9995                           ; Regs used in _SYSTEM_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9996  082B  3197  2715  3188   	fcall	_PIN_MANAGER_Initialize
  9997                           
  9998                           ;system.c: 74: OSCILLATOR_Initialize();
  9999  082E  3195  2590  3188   	fcall	_OSCILLATOR_Initialize
 10000                           
 10001                           ;system.c: 75: FVRCON = 0x00;
 10002  0831  0032               	movlb	18	; select bank18
 10003  0832  018C               	clrf	12	;volatile
 10004                           
 10005                           ;system.c: 76: ADCC_Initialize();
 10006  0833  3196  2642  3188   	fcall	_ADCC_Initialize
 10007                           
 10008                           ;system.c: 77: PWM6_Initialize();
 10009  0836  3195  2599  3188   	fcall	_PWM6_Initialize
 10010                           
 10011                           ;system.c: 79: TMR2_Initialize();
 10012  0839  3195  25C8  3188   	fcall	_TMR2_Initialize
 10013                           
 10014                           ;system.c: 80: LCD_Init(0X00);
 10015  083C  3000               	movlw	0
 10016  083D  318A  22CF  3188   	fcall	_LCD_Init
 10017                           
 10018                           ;system.c: 81: _delay((unsigned long)((200)*(32000000/4000.0)));
 10019  0840  3009               	movlw	9
 10020  0841  00FA               	movwf	??_SYSTEM_Initialize+2
 10021  0842  301E               	movlw	30
 10022  0843  00F9               	movwf	??_SYSTEM_Initialize+1
 10023  0844  30EB               	movlw	235
 10024  0845  00F8               	movwf	??_SYSTEM_Initialize
 10025  0846                     u3817:	
 10026  0846  0BF8               	decfsz	??_SYSTEM_Initialize,f
 10027  0847  2846               	goto	u3817
 10028  0848  0BF9               	decfsz	??_SYSTEM_Initialize+1,f
 10029  0849  2846               	goto	u3817
 10030  084A  0BFA               	decfsz	??_SYSTEM_Initialize+2,f
 10031  084B  2846               	goto	u3817
 10032  084C  0000               	nop
 10033                           
 10034                           ;system.c: 82: LCD_Clear();
 10035  084D  3195  2588  3188   	fcall	_LCD_Clear
 10036                           
 10037                           ;system.c: 83: _delay((unsigned long)((100)*(32000000/4000.0)));
 10038  0850  3005               	movlw	5
 10039  0851  00FA               	movwf	??_SYSTEM_Initialize+2
 10040  0852  300F               	movlw	15
 10041  0853  00F9               	movwf	??_SYSTEM_Initialize+1
 10042  0854  30F4               	movlw	244
 10043  0855  00F8               	movwf	??_SYSTEM_Initialize
 10044  0856                     u3827:	
 10045  0856  0BF8               	decfsz	??_SYSTEM_Initialize,f
 10046  0857  2856               	goto	u3827
 10047  0858  0BF9               	decfsz	??_SYSTEM_Initialize+1,f
 10048  0859  2856               	goto	u3827
 10049  085A  0BFA               	decfsz	??_SYSTEM_Initialize+2,f
 10050  085B  2856               	goto	u3827
 10051                           
 10052                           ;system.c: 84: InitCustomChars();
 10053  085C  3188  2005  3188   	fcall	_InitCustomChars
 10054                           
 10055                           ;system.c: 85: _delay((unsigned long)((200)*(32000000/4000.0)));
 10056  085F  3009               	movlw	9
 10057  0860  00FA               	movwf	??_SYSTEM_Initialize+2
 10058  0861  301E               	movlw	30
 10059  0862  00F9               	movwf	??_SYSTEM_Initialize+1
 10060  0863  30EB               	movlw	235
 10061  0864  00F8               	movwf	??_SYSTEM_Initialize
 10062  0865                     u3837:	
 10063  0865  0BF8               	decfsz	??_SYSTEM_Initialize,f
 10064  0866  2865               	goto	u3837
 10065  0867  0BF9               	decfsz	??_SYSTEM_Initialize+1,f
 10066  0868  2865               	goto	u3837
 10067  0869  0BFA               	decfsz	??_SYSTEM_Initialize+2,f
 10068  086A  2865               	goto	u3837
 10069  086B  0000               	nop
 10070  086C  0008               	return
 10071  086D                     __end_of_SYSTEM_Initialize:	
 10072                           
 10073                           	psect	text19
 10074  15C8                     __ptext19:	
 10075 ;; *************** function _TMR2_Initialize *****************
 10076 ;; Defined at:
 10077 ;;		line 3 in file "tmr2.c"
 10078 ;; Parameters:    Size  Location     Type
 10079 ;;		None
 10080 ;; Auto vars:     Size  Location     Type
 10081 ;;		None
 10082 ;; Return value:  Size  Location     Type
 10083 ;;                  1    wreg      void 
 10084 ;; Registers used:
 10085 ;;		wreg, status,2
 10086 ;; Tracked objects:
 10087 ;;		On entry : 0/0
 10088 ;;		On exit  : 0/0
 10089 ;;		Unchanged: 0/0
 10090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10094 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10095 ;;Total ram usage:        0 bytes
 10096 ;; Hardware stack levels used:    1
 10097 ;; This function calls:
 10098 ;;		Nothing
 10099 ;; This function is called by:
 10100 ;;		_SYSTEM_Initialize
 10101 ;; This function uses a non-reentrant model
 10102 ;;
 10103                           
 10104                           
 10105                           ;psect for function _TMR2_Initialize
 10106  15C8                     _TMR2_Initialize:	
 10107                           
 10108                           ;tmr2.c: 5: T2CON = 0x00;
 10109                           
 10110                           ;incstack = 0
 10111                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 10112  15C8  0025               	movlb	5	; select bank5
 10113  15C9  018E               	clrf	14	;volatile
 10114                           
 10115                           ;tmr2.c: 7: T2CLKCON = 0x01;
 10116  15CA  3001               	movlw	1
 10117  15CB  0090               	movwf	16	;volatile
 10118                           
 10119                           ;tmr2.c: 9: T2HLT = 0x00;
 10120  15CC  018F               	clrf	15	;volatile
 10121                           
 10122                           ;tmr2.c: 11: T2RST = 0x00;
 10123  15CD  0191               	clrf	17	;volatile
 10124                           
 10125                           ;tmr2.c: 13: T2PR = 0xFF;
 10126  15CE  30FF               	movlw	255
 10127  15CF  008D               	movwf	13	;volatile
 10128                           
 10129                           ;tmr2.c: 15: T2TMR = 0x00;
 10130  15D0  018C               	clrf	12	;volatile
 10131                           
 10132                           ;tmr2.c: 17: PIR4bits.TMR2IF = 0;
 10133  15D1  002E               	movlb	14	; select bank14
 10134  15D2  1090               	bcf	16,1	;volatile
 10135                           
 10136                           ;tmr2.c: 19: T2CONbits.TMR2ON = 1;
 10137  15D3  0025               	movlb	5	; select bank5
 10138  15D4  178E               	bsf	14,7	;volatile
 10139  15D5  0008               	return
 10140  15D6                     __end_of_TMR2_Initialize:	
 10141                           
 10142                           	psect	text20
 10143  1599                     __ptext20:	
 10144 ;; *************** function _PWM6_Initialize *****************
 10145 ;; Defined at:
 10146 ;;		line 3 in file "pwm6.c"
 10147 ;; Parameters:    Size  Location     Type
 10148 ;;		None
 10149 ;; Auto vars:     Size  Location     Type
 10150 ;;		None
 10151 ;; Return value:  Size  Location     Type
 10152 ;;                  1    wreg      void 
 10153 ;; Registers used:
 10154 ;;		wreg, status,2, status,0
 10155 ;; Tracked objects:
 10156 ;;		On entry : 0/0
 10157 ;;		On exit  : 0/0
 10158 ;;		Unchanged: 0/0
 10159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10163 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10164 ;;Total ram usage:        0 bytes
 10165 ;; Hardware stack levels used:    1
 10166 ;; This function calls:
 10167 ;;		Nothing
 10168 ;; This function is called by:
 10169 ;;		_SYSTEM_Initialize
 10170 ;; This function uses a non-reentrant model
 10171 ;;
 10172                           
 10173                           
 10174                           ;psect for function _PWM6_Initialize
 10175  1599                     _PWM6_Initialize:	
 10176                           
 10177                           ;pwm6.c: 5: PWM6CON = 0x80;
 10178                           
 10179                           ;incstack = 0
 10180                           ; Regs used in _PWM6_Initialize: [wreg+status,2+status,0]
 10181  1599  3080               	movlw	128
 10182  159A  0027               	movlb	7	; select bank7
 10183  159B  008E               	movwf	14	;volatile
 10184                           
 10185                           ;pwm6.c: 7: PWM6DCH = 0x00;
 10186  159C  018D               	clrf	13	;volatile
 10187                           
 10188                           ;pwm6.c: 9: PWM6DCL = 0x00;
 10189  159D  018C               	clrf	12	;volatile
 10190                           
 10191                           ;pwm6.c: 11: CCPTMRS1bits.P6TSEL = 0x1;
 10192  159E  0024               	movlb	4	; select bank4
 10193  159F  081F               	movf	31,w	;volatile
 10194  15A0  39F3               	andlw	-13
 10195  15A1  3804               	iorlw	4
 10196  15A2  009F               	movwf	31	;volatile
 10197  15A3  0008               	return
 10198  15A4                     __end_of_PWM6_Initialize:	
 10199                           
 10200                           	psect	text21
 10201  1715                     __ptext21:	
 10202 ;; *************** function _PIN_MANAGER_Initialize *****************
 10203 ;; Defined at:
 10204 ;;		line 5 in file "pin_manager.c"
 10205 ;; Parameters:    Size  Location     Type
 10206 ;;		None
 10207 ;; Auto vars:     Size  Location     Type
 10208 ;;  state           1    0[COMMON] unsigned char 
 10209 ;; Return value:  Size  Location     Type
 10210 ;;                  1    wreg      void 
 10211 ;; Registers used:
 10212 ;;		wreg, status,2
 10213 ;; Tracked objects:
 10214 ;;		On entry : 0/0
 10215 ;;		On exit  : 0/0
 10216 ;;		Unchanged: 0/0
 10217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10219 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10221 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10222 ;;Total ram usage:        1 bytes
 10223 ;; Hardware stack levels used:    1
 10224 ;; This function calls:
 10225 ;;		Nothing
 10226 ;; This function is called by:
 10227 ;;		_SYSTEM_Initialize
 10228 ;; This function uses a non-reentrant model
 10229 ;;
 10230                           
 10231                           
 10232                           ;psect for function _PIN_MANAGER_Initialize
 10233  1715                     _PIN_MANAGER_Initialize:	
 10234                           
 10235                           ;pin_manager.c: 7: LATA = 0x00;
 10236                           
 10237                           ;incstack = 0
 10238                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 10239  1715  0020               	movlb	0	; select bank0
 10240  1716  0196               	clrf	22	;volatile
 10241                           
 10242                           ;pin_manager.c: 8: LATB = 0x00;
 10243  1717  0197               	clrf	23	;volatile
 10244                           
 10245                           ;pin_manager.c: 9: LATC = 0x00;
 10246  1718  0198               	clrf	24	;volatile
 10247                           
 10248                           ;pin_manager.c: 11: WPUA = 0x02;
 10249  1719  3002               	movlw	2
 10250  171A  003E               	movlb	30	; select bank30
 10251  171B  00B9               	movwf	57	;volatile
 10252                           
 10253                           ;pin_manager.c: 12: WPUB = 0x00;
 10254  171C  01C4               	clrf	68	;volatile
 10255                           
 10256                           ;pin_manager.c: 13: WPUC = 0x00;
 10257  171D  01CF               	clrf	79	;volatile
 10258                           
 10259                           ;pin_manager.c: 14: WPUE = 0x8;
 10260  171E  3008               	movlw	8
 10261  171F  00E5               	movwf	101	;volatile
 10262                           
 10263                           ;pin_manager.c: 16: TRISA = 0x02;
 10264  1720  3002               	movlw	2
 10265  1721  0020               	movlb	0	; select bank0
 10266  1722  0091               	movwf	17	;volatile
 10267                           
 10268                           ;pin_manager.c: 17: TRISA = 0x3A;
 10269  1723  303A               	movlw	58
 10270  1724  0091               	movwf	17	;volatile
 10271                           
 10272                           ;pin_manager.c: 18: TRISB = 0x0A;
 10273  1725  300A               	movlw	10
 10274  1726  0092               	movwf	18	;volatile
 10275                           
 10276                           ;pin_manager.c: 19: TRISC = 0x10;
 10277  1727  3010               	movlw	16
 10278  1728  0093               	movwf	19	;volatile
 10279                           
 10280                           ;pin_manager.c: 21: ANSELA = 0x3A;
 10281  1729  303A               	movlw	58
 10282  172A  003E               	movlb	30	; select bank30
 10283  172B  00B8               	movwf	56	;volatile
 10284                           
 10285                           ;pin_manager.c: 22: ANSELB = 0x0A;
 10286  172C  300A               	movlw	10
 10287  172D  00C3               	movwf	67	;volatile
 10288                           
 10289                           ;pin_manager.c: 23: ANSELC = 0x00;
 10290  172E  01CE               	clrf	78	;volatile
 10291                           
 10292                           ;pin_manager.c: 25: PIE0bits.IOCIE = 0;
 10293  172F  002E               	movlb	14	; select bank14
 10294  1730  1216               	bcf	22,4	;volatile
 10295                           
 10296                           ;pin_manager.c: 26: bool state = GIE;
 10297  1731  3000               	movlw	0
 10298  1732  1B8B               	btfsc	11,7	;volatile
 10299  1733  3001               	movlw	1
 10300  1734  00F0               	movwf	PIN_MANAGER_Initialize@state
 10301                           
 10302                           ;pin_manager.c: 27: GIE = 0;
 10303  1735  138B               	bcf	11,7	;volatile
 10304                           
 10305                           ;pin_manager.c: 28: PPSLOCK = 0x55;
 10306  1736  3055               	movlw	85
 10307  1737  003D               	movlb	29	; select bank29
 10308  1738  008F               	movwf	15	;volatile
 10309                           
 10310                           ;pin_manager.c: 29: PPSLOCK = 0xAA;
 10311  1739  30AA               	movlw	170
 10312  173A  008F               	movwf	15	;volatile
 10313                           
 10314                           ;pin_manager.c: 30: PPSLOCKbits.PPSLOCKED = 0x00;
 10315  173B  100F               	bcf	15,0	;volatile
 10316                           
 10317                           ;pin_manager.c: 33: RC2PPS = 0x000E;
 10318  173C  300E               	movlw	14
 10319  173D  003E               	movlb	30	; select bank30
 10320  173E  00A2               	movwf	34	;volatile
 10321                           
 10322                           ;pin_manager.c: 37: PPSLOCK = 0x55;
 10323  173F  3055               	movlw	85
 10324  1740  003D               	movlb	29	; select bank29
 10325  1741  008F               	movwf	15	;volatile
 10326                           
 10327                           ;pin_manager.c: 38: PPSLOCK = 0xAA;
 10328  1742  30AA               	movlw	170
 10329  1743  008F               	movwf	15	;volatile
 10330                           
 10331                           ;pin_manager.c: 39: PPSLOCKbits.PPSLOCKED = 0x01;
 10332  1744  140F               	bsf	15,0	;volatile
 10333                           
 10334                           ;pin_manager.c: 40: GIE = state;
 10335  1745  1C70               	btfss	PIN_MANAGER_Initialize@state,0
 10336  1746  2F49               	goto	u2400
 10337  1747  178B               	bsf	11,7	;volatile
 10338  1748  0008               	return
 10339  1749                     u2400:	
 10340  1749  138B               	bcf	11,7	;volatile
 10341  174A  0008               	return
 10342  174B                     __end_of_PIN_MANAGER_Initialize:	
 10343                           
 10344                           	psect	text22
 10345  1590                     __ptext22:	
 10346 ;; *************** function _OSCILLATOR_Initialize *****************
 10347 ;; Defined at:
 10348 ;;		line 89 in file "system.c"
 10349 ;; Parameters:    Size  Location     Type
 10350 ;;		None
 10351 ;; Auto vars:     Size  Location     Type
 10352 ;;		None
 10353 ;; Return value:  Size  Location     Type
 10354 ;;                  1    wreg      void 
 10355 ;; Registers used:
 10356 ;;		wreg, status,2
 10357 ;; Tracked objects:
 10358 ;;		On entry : 0/0
 10359 ;;		On exit  : 0/0
 10360 ;;		Unchanged: 0/0
 10361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10365 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10366 ;;Total ram usage:        0 bytes
 10367 ;; Hardware stack levels used:    1
 10368 ;; This function calls:
 10369 ;;		Nothing
 10370 ;; This function is called by:
 10371 ;;		_SYSTEM_Initialize
 10372 ;; This function uses a non-reentrant model
 10373 ;;
 10374                           
 10375                           
 10376                           ;psect for function _OSCILLATOR_Initialize
 10377  1590                     _OSCILLATOR_Initialize:	
 10378                           
 10379                           ;system.c: 91: OSCCON1 = 0x60;
 10380                           
 10381                           ;incstack = 0
 10382                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 10383  1590  3060               	movlw	96
 10384  1591  0031               	movlb	17	; select bank17
 10385  1592  008D               	movwf	13	;volatile
 10386                           
 10387                           ;system.c: 92: OSCCON3 = 0x00;
 10388  1593  018F               	clrf	15	;volatile
 10389                           
 10390                           ;system.c: 93: OSCEN = 0x00;
 10391  1594  0191               	clrf	17	;volatile
 10392                           
 10393                           ;system.c: 94: OSCFRQ = 0x06;
 10394  1595  3006               	movlw	6
 10395  1596  0093               	movwf	19	;volatile
 10396                           
 10397                           ;system.c: 95: OSCTUNE = 0x00;
 10398  1597  0192               	clrf	18	;volatile
 10399  1598  0008               	return
 10400  1599                     __end_of_OSCILLATOR_Initialize:	
 10401                           
 10402                           	psect	text23
 10403  0ACF                     __ptext23:	
 10404 ;; *************** function _LCD_Init *****************
 10405 ;; Defined at:
 10406 ;;		line 154 in file "lcd.c"
 10407 ;; Parameters:    Size  Location     Type
 10408 ;;  style           1    wreg     unsigned char 
 10409 ;; Auto vars:     Size  Location     Type
 10410 ;;  style           1    7[COMMON] unsigned char 
 10411 ;; Return value:  Size  Location     Type
 10412 ;;                  1    wreg      void 
 10413 ;; Registers used:
 10414 ;;		wreg, status,2, status,0, pclath, cstack
 10415 ;; Tracked objects:
 10416 ;;		On entry : 0/0
 10417 ;;		On exit  : 0/0
 10418 ;;		Unchanged: 0/0
 10419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10421 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10422 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10423 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10424 ;;Total ram usage:        4 bytes
 10425 ;; Hardware stack levels used:    1
 10426 ;; Hardware stack levels required when called:    2
 10427 ;; This function calls:
 10428 ;;		_LCD_Cmd
 10429 ;;		_LCD_Port
 10430 ;; This function is called by:
 10431 ;;		_SYSTEM_Initialize
 10432 ;; This function uses a non-reentrant model
 10433 ;;
 10434                           
 10435                           
 10436                           ;psect for function _LCD_Init
 10437  0ACF                     _LCD_Init:	
 10438                           
 10439                           ;incstack = 0
 10440                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
 10441                           ;LCD_Init@style stored from wreg
 10442  0ACF  00F7               	movwf	LCD_Init@style
 10443                           
 10444                           ;lcd.c: 156: LCD_Port(0x00);
 10445  0AD0  3000               	movlw	0
 10446  0AD1  3196  2610  318A   	fcall	_LCD_Port
 10447                           
 10448                           ;lcd.c: 158: _delay((unsigned long)((100)*(32000000/4000.0)));
 10449  0AD4  3005               	movlw	5
 10450  0AD5  00F6               	movwf	??_LCD_Init+2
 10451  0AD6  300F               	movlw	15
 10452  0AD7  00F5               	movwf	??_LCD_Init+1
 10453  0AD8  30F4               	movlw	244
 10454  0AD9  00F4               	movwf	??_LCD_Init
 10455  0ADA                     u3847:	
 10456  0ADA  0BF4               	decfsz	??_LCD_Init,f
 10457  0ADB  2ADA               	goto	u3847
 10458  0ADC  0BF5               	decfsz	??_LCD_Init+1,f
 10459  0ADD  2ADA               	goto	u3847
 10460  0ADE  0BF6               	decfsz	??_LCD_Init+2,f
 10461  0ADF  2ADA               	goto	u3847
 10462                           
 10463                           ;lcd.c: 160: LCD_Cmd(0x03);
 10464  0AE0  3003               	movlw	3
 10465  0AE1  3195  25E6  318A   	fcall	_LCD_Cmd
 10466                           
 10467                           ;lcd.c: 162: _delay((unsigned long)((10)*(32000000/4000.0)));
 10468  0AE4  3068               	movlw	104
 10469  0AE5  00F5               	movwf	??_LCD_Init+1
 10470  0AE6  30E4               	movlw	228
 10471  0AE7  00F4               	movwf	??_LCD_Init
 10472  0AE8                     u3857:	
 10473  0AE8  0BF4               	decfsz	??_LCD_Init,f
 10474  0AE9  2AE8               	goto	u3857
 10475  0AEA  0BF5               	decfsz	??_LCD_Init+1,f
 10476  0AEB  2AE8               	goto	u3857
 10477  0AEC  0000               	nop
 10478                           
 10479                           ;lcd.c: 164: LCD_Cmd(0x03);
 10480  0AED  3003               	movlw	3
 10481  0AEE  3195  25E6  318A   	fcall	_LCD_Cmd
 10482                           
 10483                           ;lcd.c: 166: _delay((unsigned long)((120)*(32000000/4000000.0)));
 10484  0AF1  3089               	movlw	137
 10485  0AF2  00F4               	movwf	??_LCD_Init
 10486  0AF3                     u3867:	
 10487  0AF3  3200               	nop2
 10488  0AF4  3200               	nop2
 10489  0AF5  0BF4               	decfsz	??_LCD_Init,f
 10490  0AF6  2AF3               	goto	u3867
 10491                           
 10492                           ;lcd.c: 168: LCD_Cmd(0x03);
 10493  0AF7  3003               	movlw	3
 10494  0AF8  3195  25E6  318A   	fcall	_LCD_Cmd
 10495                           
 10496                           ;lcd.c: 170: _delay((unsigned long)((120)*(32000000/4000000.0)));
 10497  0AFB  3089               	movlw	137
 10498  0AFC  00F4               	movwf	??_LCD_Init
 10499  0AFD                     u3877:	
 10500  0AFD  3200               	nop2
 10501  0AFE  3200               	nop2
 10502  0AFF  0BF4               	decfsz	??_LCD_Init,f
 10503  0B00  2AFD               	goto	u3877
 10504                           
 10505                           ;lcd.c: 172: LCD_Cmd(0x02);
 10506  0B01  3002               	movlw	2
 10507  0B02  3195  25E6  318A   	fcall	_LCD_Cmd
 10508                           
 10509                           ;lcd.c: 174: _delay((unsigned long)((120)*(32000000/4000000.0)));
 10510  0B05  3089               	movlw	137
 10511  0B06  00F4               	movwf	??_LCD_Init
 10512  0B07                     u3887:	
 10513  0B07  3200               	nop2
 10514  0B08  3200               	nop2
 10515  0B09  0BF4               	decfsz	??_LCD_Init,f
 10516  0B0A  2B07               	goto	u3887
 10517                           
 10518                           ;lcd.c: 176: LCD_Cmd(0x2);
 10519  0B0B  3002               	movlw	2
 10520  0B0C  3195  25E6  318A   	fcall	_LCD_Cmd
 10521                           
 10522                           ;lcd.c: 178: LCD_Cmd(0x8);
 10523  0B0F  3008               	movlw	8
 10524  0B10  3195  25E6  318A   	fcall	_LCD_Cmd
 10525                           
 10526                           ;lcd.c: 180: _delay((unsigned long)((120)*(32000000/4000000.0)));
 10527  0B13  3089               	movlw	137
 10528  0B14  00F4               	movwf	??_LCD_Init
 10529  0B15                     u3897:	
 10530  0B15  3200               	nop2
 10531  0B16  3200               	nop2
 10532  0B17  0BF4               	decfsz	??_LCD_Init,f
 10533  0B18  2B15               	goto	u3897
 10534                           
 10535                           ;lcd.c: 182: LCD_Cmd(0x0);
 10536  0B19  3000               	movlw	0
 10537  0B1A  3195  25E6  318A   	fcall	_LCD_Cmd
 10538                           
 10539                           ;lcd.c: 184: LCD_Cmd(0x8);
 10540  0B1D  3008               	movlw	8
 10541  0B1E  3195  25E6  318A   	fcall	_LCD_Cmd
 10542                           
 10543                           ;lcd.c: 186: _delay((unsigned long)((120)*(32000000/4000000.0)));
 10544  0B21  3089               	movlw	137
 10545  0B22  00F4               	movwf	??_LCD_Init
 10546  0B23                     u3907:	
 10547  0B23  3200               	nop2
 10548  0B24  3200               	nop2
 10549  0B25  0BF4               	decfsz	??_LCD_Init,f
 10550  0B26  2B23               	goto	u3907
 10551                           
 10552                           ;lcd.c: 188: LCD_Cmd(0x0);
 10553  0B27  3000               	movlw	0
 10554  0B28  3195  25E6  318A   	fcall	_LCD_Cmd
 10555                           
 10556                           ;lcd.c: 190: LCD_Cmd(0x1);
 10557  0B2B  3001               	movlw	1
 10558  0B2C  3195  25E6  318A   	fcall	_LCD_Cmd
 10559                           
 10560                           ;lcd.c: 192: _delay((unsigned long)((5)*(32000000/4000.0)));
 10561  0B2F  3034               	movlw	52
 10562  0B30  00F5               	movwf	??_LCD_Init+1
 10563  0B31  30F1               	movlw	241
 10564  0B32  00F4               	movwf	??_LCD_Init
 10565  0B33                     u3917:	
 10566  0B33  0BF4               	decfsz	??_LCD_Init,f
 10567  0B34  2B33               	goto	u3917
 10568  0B35  0BF5               	decfsz	??_LCD_Init+1,f
 10569  0B36  2B33               	goto	u3917
 10570  0B37  3200               	nop2
 10571                           
 10572                           ;lcd.c: 194: LCD_Cmd(0x0);
 10573  0B38  3000               	movlw	0
 10574  0B39  3195  25E6  318A   	fcall	_LCD_Cmd
 10575                           
 10576                           ;lcd.c: 196: LCD_Cmd(0x6);
 10577  0B3C  3006               	movlw	6
 10578  0B3D  3195  25E6  318A   	fcall	_LCD_Cmd
 10579                           
 10580                           ;lcd.c: 198: _delay((unsigned long)((120)*(32000000/4000000.0)));
 10581  0B40  3089               	movlw	137
 10582  0B41  00F4               	movwf	??_LCD_Init
 10583  0B42                     u3927:	
 10584  0B42  3200               	nop2
 10585  0B43  3200               	nop2
 10586  0B44  0BF4               	decfsz	??_LCD_Init,f
 10587  0B45  2B42               	goto	u3927
 10588                           
 10589                           ;lcd.c: 200: LCD_Cmd(0x0);
 10590  0B46  3000               	movlw	0
 10591  0B47  3195  25E6  318A   	fcall	_LCD_Cmd
 10592                           
 10593                           ;lcd.c: 202: LCD_Cmd(0xc|style);
 10594  0B4A  0877               	movf	LCD_Init@style,w
 10595  0B4B  380C               	iorlw	12
 10596  0B4C  3195  25E6  318A   	fcall	_LCD_Cmd
 10597                           
 10598                           ;lcd.c: 204: _delay((unsigned long)((120)*(32000000/4000000.0)));
 10599  0B4F  3089               	movlw	137
 10600  0B50  00F4               	movwf	??_LCD_Init
 10601  0B51                     u3937:	
 10602  0B51  3200               	nop2
 10603  0B52  3200               	nop2
 10604  0B53  0BF4               	decfsz	??_LCD_Init,f
 10605  0B54  2B51               	goto	u3937
 10606  0B55  0008               	return
 10607  0B56                     __end_of_LCD_Init:	
 10608                           
 10609                           	psect	text24
 10610  1588                     __ptext24:	
 10611 ;; *************** function _LCD_Clear *****************
 10612 ;; Defined at:
 10613 ;;		line 75 in file "lcd.c"
 10614 ;; Parameters:    Size  Location     Type
 10615 ;;		None
 10616 ;; Auto vars:     Size  Location     Type
 10617 ;;		None
 10618 ;; Return value:  Size  Location     Type
 10619 ;;                  1    wreg      void 
 10620 ;; Registers used:
 10621 ;;		wreg, status,2, status,0, pclath, cstack
 10622 ;; Tracked objects:
 10623 ;;		On entry : 0/0
 10624 ;;		On exit  : 0/0
 10625 ;;		Unchanged: 0/0
 10626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10630 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10631 ;;Total ram usage:        0 bytes
 10632 ;; Hardware stack levels used:    1
 10633 ;; Hardware stack levels required when called:    2
 10634 ;; This function calls:
 10635 ;;		_LCD_Cmd
 10636 ;; This function is called by:
 10637 ;;		_SYSTEM_Initialize
 10638 ;;		_main
 10639 ;; This function uses a non-reentrant model
 10640 ;;
 10641                           
 10642                           
 10643                           ;psect for function _LCD_Clear
 10644  1588                     _LCD_Clear:	
 10645                           
 10646                           ;lcd.c: 77: LCD_Cmd(0);
 10647                           
 10648                           ;incstack = 0
 10649                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
 10650  1588  3000               	movlw	0
 10651  1589  3195  25E6  3195   	fcall	_LCD_Cmd
 10652                           
 10653                           ;lcd.c: 78: LCD_Cmd(1);
 10654  158C  3001               	movlw	1
 10655  158D  3195  25E6         	fcall	_LCD_Cmd
 10656  158F  0008               	return
 10657  1590                     __end_of_LCD_Clear:	
 10658                           
 10659                           	psect	text25
 10660  0805                     __ptext25:	
 10661 ;; *************** function _InitCustomChars *****************
 10662 ;; Defined at:
 10663 ;;		line 29 in file "lcd.c"
 10664 ;; Parameters:    Size  Location     Type
 10665 ;;		None
 10666 ;; Auto vars:     Size  Location     Type
 10667 ;;  i               1    6[COMMON] unsigned char 
 10668 ;; Return value:  Size  Location     Type
 10669 ;;                  1    wreg      void 
 10670 ;; Registers used:
 10671 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10672 ;; Tracked objects:
 10673 ;;		On entry : 0/0
 10674 ;;		On exit  : 0/0
 10675 ;;		Unchanged: 0/0
 10676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10678 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10679 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10680 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10681 ;;Total ram usage:        2 bytes
 10682 ;; Hardware stack levels used:    1
 10683 ;; Hardware stack levels required when called:    2
 10684 ;; This function calls:
 10685 ;;		_LCD_Cmd
 10686 ;;		_LCD_Write_Char
 10687 ;; This function is called by:
 10688 ;;		_SYSTEM_Initialize
 10689 ;; This function uses a non-reentrant model
 10690 ;;
 10691                           
 10692                           
 10693                           ;psect for function _InitCustomChars
 10694  0805                     _InitCustomChars:	
 10695                           
 10696                           ;lcd.c: 31: uint8_t i;
 10697                           ;lcd.c: 32: LCD_Cmd(0x04);
 10698                           
 10699                           ;incstack = 0
 10700                           ; Regs used in _InitCustomChars: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10701  0805  3004               	movlw	4
 10702  0806  3195  25E6  3188   	fcall	_LCD_Cmd
 10703                           
 10704                           ;lcd.c: 33: LCD_Cmd(0x00);
 10705  0809  3000               	movlw	0
 10706  080A  3195  25E6  3188   	fcall	_LCD_Cmd
 10707                           
 10708                           ;lcd.c: 34: for (i = 0; i < sizeof(__cgram) ; i++)
 10709  080D  01F6               	clrf	InitCustomChars@i
 10710  080E  3010               	movlw	16
 10711  080F  0276               	subwf	InitCustomChars@i,w
 10712  0810  1803               	btfsc	3,0
 10713  0811  2823               	goto	l2361
 10714  0812                     l2355:	
 10715                           
 10716                           ;lcd.c: 35: LCD_Write_Char(__cgram[i]);
 10717  0812  0876               	movf	InitCustomChars@i,w
 10718  0813  3E20               	addlw	(low (___cgram| (0+256)))& (0+255)
 10719  0814  0086               	movwf	6
 10720  0815  3001               	movlw	1	; select bank2/3
 10721  0816  0087               	movwf	7
 10722  0817  0801               	movf	1,w
 10723  0818  3196  26B5  3188   	fcall	_LCD_Write_Char
 10724  081B  3001               	movlw	1
 10725  081C  00F5               	movwf	??_InitCustomChars
 10726  081D  0875               	movf	??_InitCustomChars,w
 10727  081E  07F6               	addwf	InitCustomChars@i,f
 10728  081F  3010               	movlw	16
 10729  0820  0276               	subwf	InitCustomChars@i,w
 10730  0821  1C03               	skipc
 10731  0822  2812               	goto	l2355
 10732  0823                     l2361:	
 10733                           
 10734                           ;lcd.c: 36: LCD_Cmd(0);
 10735  0823  3000               	movlw	0
 10736  0824  3195  25E6  3188   	fcall	_LCD_Cmd
 10737                           
 10738                           ;lcd.c: 37: LCD_Cmd(2);
 10739  0827  3002               	movlw	2
 10740  0828  3195  25E6         	fcall	_LCD_Cmd
 10741  082A  0008               	return
 10742  082B                     __end_of_InitCustomChars:	
 10743                           
 10744                           	psect	text26
 10745  1642                     __ptext26:	
 10746 ;; *************** function _ADCC_Initialize *****************
 10747 ;; Defined at:
 10748 ;;		line 16 in file "adcc.c"
 10749 ;; Parameters:    Size  Location     Type
 10750 ;;		None
 10751 ;; Auto vars:     Size  Location     Type
 10752 ;;		None
 10753 ;; Return value:  Size  Location     Type
 10754 ;;                  1    wreg      void 
 10755 ;; Registers used:
 10756 ;;		wreg, status,2
 10757 ;; Tracked objects:
 10758 ;;		On entry : 0/0
 10759 ;;		On exit  : 0/0
 10760 ;;		Unchanged: 0/0
 10761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10765 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10766 ;;Total ram usage:        0 bytes
 10767 ;; Hardware stack levels used:    1
 10768 ;; This function calls:
 10769 ;;		Nothing
 10770 ;; This function is called by:
 10771 ;;		_SYSTEM_Initialize
 10772 ;; This function uses a non-reentrant model
 10773 ;;
 10774                           
 10775                           
 10776                           ;psect for function _ADCC_Initialize
 10777  1642                     _ADCC_Initialize:	
 10778                           
 10779                           ;adcc.c: 19: ADCON1 = 0x00;
 10780                           
 10781                           ;incstack = 0
 10782                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
 10783  1642  0021               	movlb	1	; select bank1
 10784  1643  0194               	clrf	20	;volatile
 10785                           
 10786                           ;adcc.c: 21: ADCON2 = 0x00;
 10787  1644  0195               	clrf	21	;volatile
 10788                           
 10789                           ;adcc.c: 23: ADCON3 = 0x00;
 10790  1645  0196               	clrf	22	;volatile
 10791                           
 10792                           ;adcc.c: 25: ADACT = 0x00;
 10793  1646  0199               	clrf	25	;volatile
 10794                           
 10795                           ;adcc.c: 27: ADSTAT = 0x00;
 10796  1647  0197               	clrf	23	;volatile
 10797                           
 10798                           ;adcc.c: 29: ADCLK = 0x3F;
 10799  1648  303F               	movlw	63
 10800  1649  0098               	movwf	24	;volatile
 10801                           
 10802                           ;adcc.c: 33: ADREF = 0x00;
 10803  164A  019A               	clrf	26	;volatile
 10804                           
 10805                           ;adcc.c: 35: ADCAP = 0x00;
 10806  164B  019B               	clrf	27	;volatile
 10807                           
 10808                           ;adcc.c: 38: ADPRE = 0x07;
 10809  164C  3007               	movlw	7
 10810  164D  009C               	movwf	28	;volatile
 10811                           
 10812                           ;adcc.c: 40: ADACQ = 0x00;
 10813  164E  019D               	clrf	29	;volatile
 10814                           
 10815                           ;adcc.c: 42: ADPCH = 0x00;
 10816  164F  019E               	clrf	30	;volatile
 10817                           
 10818                           ;adcc.c: 44: ADRPT = 0x00;
 10819  1650  0022               	movlb	2	; select bank2
 10820  1651  018D               	clrf	13	;volatile
 10821                           
 10822                           ;adcc.c: 46: ADLTHL = 0x00;
 10823  1652  018E               	clrf	14	;volatile
 10824                           
 10825                           ;adcc.c: 48: ADLTHH = 0x00;
 10826  1653  018F               	clrf	15	;volatile
 10827                           
 10828                           ;adcc.c: 50: ADUTHL = 0x00;
 10829  1654  0190               	clrf	16	;volatile
 10830                           
 10831                           ;adcc.c: 52: ADUTHH = 0x00;
 10832  1655  0191               	clrf	17	;volatile
 10833                           
 10834                           ;adcc.c: 54: ADSTPTL = 0x00;
 10835  1656  0192               	clrf	18	;volatile
 10836                           
 10837                           ;adcc.c: 56: ADSTPTH = 0x00;
 10838  1657  0193               	clrf	19	;volatile
 10839                           
 10840                           ;adcc.c: 59: ADCON0 = 0x84;
 10841  1658  3084               	movlw	132
 10842  1659  0021               	movlb	1	; select bank1
 10843  165A  0093               	movwf	19	;volatile
 10844  165B  0008               	return
 10845  165C                     __end_of_ADCC_Initialize:	
 10846                           
 10847                           	psect	text27
 10848  15FA                     __ptext27:	
 10849 ;; *************** function _PWM6_LoadDutyValue *****************
 10850 ;; Defined at:
 10851 ;;		line 14 in file "pwm6.c"
 10852 ;; Parameters:    Size  Location     Type
 10853 ;;  dutyCycle       2    0[COMMON] unsigned int 
 10854 ;; Auto vars:     Size  Location     Type
 10855 ;;		None
 10856 ;; Return value:  Size  Location     Type
 10857 ;;                  1    wreg      void 
 10858 ;; Registers used:
 10859 ;;		wreg, status,2, status,0
 10860 ;; Tracked objects:
 10861 ;;		On entry : 0/0
 10862 ;;		On exit  : 0/0
 10863 ;;		Unchanged: 0/0
 10864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10865 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10867 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10868 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10869 ;;Total ram usage:        4 bytes
 10870 ;; Hardware stack levels used:    1
 10871 ;; This function calls:
 10872 ;;		Nothing
 10873 ;; This function is called by:
 10874 ;;		_main
 10875 ;; This function uses a non-reentrant model
 10876 ;;
 10877                           
 10878                           
 10879                           ;psect for function _PWM6_LoadDutyValue
 10880  15FA                     _PWM6_LoadDutyValue:	
 10881                           
 10882                           ;pwm6.c: 16: PWM6DCH = (dutyCycle & 0x03FC)>>2;
 10883                           
 10884                           ;incstack = 0
 10885                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
 10886  15FA  0871               	movf	PWM6_LoadDutyValue@dutyCycle+1,w
 10887  15FB  00F3               	movwf	??_PWM6_LoadDutyValue+1
 10888  15FC  0870               	movf	PWM6_LoadDutyValue@dutyCycle,w
 10889  15FD  00F2               	movwf	??_PWM6_LoadDutyValue
 10890  15FE  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
 10891  15FF  0CF2               	rrf	??_PWM6_LoadDutyValue,f
 10892  1600  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
 10893  1601  0CF2               	rrf	??_PWM6_LoadDutyValue,f
 10894  1602  0872               	movf	??_PWM6_LoadDutyValue,w
 10895  1603  0027               	movlb	7	; select bank7
 10896  1604  008D               	movwf	13	;volatile
 10897                           
 10898                           ;pwm6.c: 18: PWM6DCL = (dutyCycle & 0x0003)<<6;
 10899  1605  0870               	movf	PWM6_LoadDutyValue@dutyCycle,w
 10900  1606  3903               	andlw	3
 10901  1607  00F2               	movwf	??_PWM6_LoadDutyValue
 10902  1608  3005               	movlw	5
 10903  1609                     u3035:	
 10904  1609  35F2               	lslf	??_PWM6_LoadDutyValue,f
 10905  160A  3EFF               	addlw	-1
 10906  160B  1D03               	skipz
 10907  160C  2E09               	goto	u3035
 10908  160D  3572               	lslf	??_PWM6_LoadDutyValue,w
 10909  160E  008C               	movwf	12	;volatile
 10910  160F  0008               	return
 10911  1610                     __end_of_PWM6_LoadDutyValue:	
 10912                           
 10913                           	psect	text28
 10914  1628                     __ptext28:	
 10915 ;; *************** function _LCD_Write_String *****************
 10916 ;; Defined at:
 10917 ;;		line 239 in file "lcd.c"
 10918 ;; Parameters:    Size  Location     Type
 10919 ;;  a               2    5[COMMON] PTR const unsigned char 
 10920 ;;		 -> STR_38(5), STR_37(4), STR_36(6), STR_35(3), 
 10921 ;;		 -> STR_34(11), STR_33(11), STR_32(17), STR_31(9), 
 10922 ;;		 -> STR_30(17), STR_29(11), STR_28(17), STR_27(11), 
 10923 ;;		 -> STR_26(2), STR_25(2), STR_24(2), STR_23(2), 
 10924 ;;		 -> STR_22(2), STR_21(2), STR_20(2), STR_19(2), 
 10925 ;;		 -> STR_18(2), STR_17(2), STR_16(2), STR_15(2), 
 10926 ;;		 -> STR_14(2), STR_13(2), STR_12(2), STR_11(2), 
 10927 ;;		 -> STR_10(2), STR_9(2), STR_8(2), STR_7(2), 
 10928 ;;		 -> STR_6(2), STR_5(2), STR_4(2), STR_3(2), 
 10929 ;;		 -> STR_2(2), STR_1(2), 
 10930 ;; Auto vars:     Size  Location     Type
 10931 ;;  i               2    8[COMMON] int 
 10932 ;; Return value:  Size  Location     Type
 10933 ;;                  1    wreg      void 
 10934 ;; Registers used:
 10935 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10936 ;; Tracked objects:
 10937 ;;		On entry : 0/0
 10938 ;;		On exit  : 0/0
 10939 ;;		Unchanged: 0/0
 10940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10941 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10942 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10943 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10944 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10945 ;;Total ram usage:        5 bytes
 10946 ;; Hardware stack levels used:    1
 10947 ;; Hardware stack levels required when called:    2
 10948 ;; This function calls:
 10949 ;;		_LCD_Write_Char
 10950 ;; This function is called by:
 10951 ;;		_main
 10952 ;; This function uses a non-reentrant model
 10953 ;;
 10954                           
 10955                           
 10956                           ;psect for function _LCD_Write_String
 10957  1628                     _LCD_Write_String:	
 10958                           
 10959                           ;lcd.c: 241: int i;
 10960                           ;lcd.c: 242: for(i=0;a[i]!='\0';i++)
 10961                           
 10962                           ;incstack = 0
 10963                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10964  1628  01F8               	clrf	LCD_Write_String@i
 10965  1629  01F9               	clrf	LCD_Write_String@i+1
 10966  162A                     l2703:	
 10967  162A  0875               	movf	LCD_Write_String@a,w
 10968  162B  0778               	addwf	LCD_Write_String@i,w
 10969  162C  0084               	movwf	4
 10970  162D  0876               	movf	LCD_Write_String@a+1,w
 10971  162E  3D79               	addwfc	LCD_Write_String@i+1,w
 10972  162F  0085               	movwf	5
 10973  1630  0012               	moviw fsr0++
 10974  1631  1903               	btfsc	3,2
 10975  1632  0008               	return
 10976                           
 10977                           ;lcd.c: 243: LCD_Write_Char(a[i]);
 10978  1633  0875               	movf	LCD_Write_String@a,w
 10979  1634  0778               	addwf	LCD_Write_String@i,w
 10980  1635  0084               	movwf	4
 10981  1636  0876               	movf	LCD_Write_String@a+1,w
 10982  1637  3D79               	addwfc	LCD_Write_String@i+1,w
 10983  1638  0085               	movwf	5
 10984  1639  0800               	movf	0,w	;code access
 10985  163A  3196  26B5  3196   	fcall	_LCD_Write_Char
 10986  163D  3001               	movlw	1
 10987  163E  07F8               	addwf	LCD_Write_String@i,f
 10988  163F  3000               	movlw	0
 10989  1640  3DF9               	addwfc	LCD_Write_String@i+1,f
 10990  1641  2E2A               	goto	l2703
 10991  1642                     __end_of_LCD_Write_String:	
 10992                           
 10993                           	psect	text29
 10994  0D60                     __ptext29:	
 10995 ;; *************** function _LCD_Write_Int *****************
 10996 ;; Defined at:
 10997 ;;		line 246 in file "lcd.c"
 10998 ;; Parameters:    Size  Location     Type
 10999 ;;  value           2    0[BANK0 ] int 
 11000 ;;  fieldLength     1    2[BANK0 ] char 
 11001 ;;  numPlaces       1    3[BANK0 ] char 
 11002 ;;  sign            1    4[BANK0 ] char 
 11003 ;; Auto vars:     Size  Location     Type
 11004 ;;  str             5   10[BANK0 ] unsigned char [5]
 11005 ;;  i               2   17[BANK0 ] int 
 11006 ;;  j               2   15[BANK0 ] int 
 11007 ;; Return value:  Size  Location     Type
 11008 ;;                  1    wreg      void 
 11009 ;; Registers used:
 11010 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11011 ;; Tracked objects:
 11012 ;;		On entry : 0/0
 11013 ;;		On exit  : 0/0
 11014 ;;		Unchanged: 0/0
 11015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11016 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11017 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11018 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11019 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11020 ;;Total ram usage:       19 bytes
 11021 ;; Hardware stack levels used:    1
 11022 ;; Hardware stack levels required when called:    2
 11023 ;; This function calls:
 11024 ;;		_LCD_Write_Char
 11025 ;;		___awdiv
 11026 ;;		___awmod
 11027 ;; This function is called by:
 11028 ;;		_main
 11029 ;; This function uses a non-reentrant model
 11030 ;;
 11031                           
 11032                           
 11033                           ;psect for function _LCD_Write_Int
 11034  0D60                     _LCD_Write_Int:	
 11035                           
 11036                           ;lcd.c: 248: char str[5]={0,0,0,0,0};
 11037                           
 11038                           ;incstack = 0
 11039                           ; Regs used in _LCD_Write_Int: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11040  0D60  30D8               	movlw	low LCD_Write_Int@F13687
 11041  0D61  0086               	movwf	6
 11042  0D62  3000               	movlw	high LCD_Write_Int@F13687
 11043  0D63  0087               	movwf	7
 11044  0D64  302A               	movlw	low LCD_Write_Int@str
 11045  0D65  0084               	movwf	4
 11046  0D66  3000               	movlw	high LCD_Write_Int@str
 11047  0D67  0085               	movwf	5
 11048  0D68  3005               	movlw	5
 11049  0D69  0020               	movlb	0	; select bank0
 11050  0D6A  00A5               	movwf	??_LCD_Write_Int
 11051  0D6B                     u2940:	
 11052  0D6B  0016               	moviw fsr1++
 11053  0D6C  001A               	movwi fsr0++
 11054  0D6D  0BA5               	decfsz	??_LCD_Write_Int,f
 11055  0D6E  2D6B               	goto	u2940
 11056                           
 11057                           ;lcd.c: 249: int i=4,j=0;
 11058  0D6F  3004               	movlw	4
 11059  0D70  00B1               	movwf	LCD_Write_Int@i
 11060  0D71  3000               	movlw	0
 11061  0D72  00B2               	movwf	LCD_Write_Int@i+1
 11062  0D73  01AF               	clrf	LCD_Write_Int@j
 11063  0D74  01B0               	clrf	LCD_Write_Int@j+1
 11064                           
 11065                           ;lcd.c: 251: if(value<0)
 11066  0D75  1FA1               	btfss	LCD_Write_Int@value+1,7
 11067  0D76  2D82               	goto	l2717
 11068                           
 11069                           ;lcd.c: 252: {
 11070                           ;lcd.c: 253: LCD_Write_Char('-');
 11071  0D77  302D               	movlw	45
 11072  0D78  3196  26B5  318D   	fcall	_LCD_Write_Char
 11073                           
 11074                           ;lcd.c: 254: value=value*-1;
 11075  0D7B  0020               	movlb	0	; select bank0
 11076  0D7C  09A0               	comf	LCD_Write_Int@value,f
 11077  0D7D  09A1               	comf	LCD_Write_Int@value+1,f
 11078  0D7E  0AA0               	incf	LCD_Write_Int@value,f
 11079  0D7F  1903               	skipnz
 11080  0D80  0AA1               	incf	LCD_Write_Int@value+1,f
 11081                           
 11082                           ;lcd.c: 255: }
 11083  0D81  2D89               	goto	l2727
 11084  0D82                     l2717:	
 11085                           
 11086                           ;lcd.c: 257: else
 11087                           ;lcd.c: 258: {
 11088                           ;lcd.c: 259: if(sign == 1)
 11089  0D82  0324               	decf	LCD_Write_Int@sign,w
 11090  0D83  1D03               	btfss	3,2
 11091  0D84  2D89               	goto	l2727
 11092                           
 11093                           ;lcd.c: 260: {
 11094                           ;lcd.c: 261: LCD_Write_Char('+');
 11095  0D85  302B               	movlw	43
 11096  0D86  3196  26B5  318D   	fcall	_LCD_Write_Char
 11097  0D89                     l2727:	
 11098                           ;lcd.c: 262: }
 11099                           ;lcd.c: 263: }
 11100                           ;lcd.c: 265: while(value)
 11101                           
 11102  0D89  0020               	movlb	0	; select bank0
 11103  0D8A  0820               	movf	LCD_Write_Int@value,w
 11104  0D8B  0421               	iorwf	LCD_Write_Int@value+1,w
 11105  0D8C  1903               	btfsc	3,2
 11106  0D8D  2DB8               	goto	l2729
 11107                           
 11108                           ;lcd.c: 266: {
 11109                           ;lcd.c: 267: str[i]=value%10;
 11110  0D8E  300A               	movlw	10
 11111  0D8F  00F0               	movwf	___awmod@divisor
 11112  0D90  3000               	movlw	0
 11113  0D91  00F1               	movwf	___awmod@divisor+1
 11114  0D92  0020               	movlb	0	; select bank0
 11115  0D93  0821               	movf	LCD_Write_Int@value+1,w
 11116  0D94  00F3               	movwf	___awmod@dividend+1
 11117  0D95  0820               	movf	LCD_Write_Int@value,w
 11118  0D96  00F2               	movwf	___awmod@dividend
 11119  0D97  3188  206D  318D   	fcall	___awmod
 11120  0D9A  0870               	movf	?___awmod,w
 11121  0D9B  0020               	movlb	0	; select bank0
 11122  0D9C  00A5               	movwf	??_LCD_Write_Int
 11123  0D9D  0831               	movf	LCD_Write_Int@i,w
 11124  0D9E  3E2A               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
 11125  0D9F  0086               	movwf	6
 11126  0DA0  0187               	clrf	7
 11127  0DA1  0825               	movf	??_LCD_Write_Int,w
 11128  0DA2  0081               	movwf	1
 11129                           
 11130                           ;lcd.c: 268: value=value/10;
 11131  0DA3  300A               	movlw	10
 11132  0DA4  00F0               	movwf	___awdiv@divisor
 11133  0DA5  3000               	movlw	0
 11134  0DA6  00F1               	movwf	___awdiv@divisor+1
 11135  0DA7  0821               	movf	LCD_Write_Int@value+1,w
 11136  0DA8  00F3               	movwf	___awdiv@dividend+1
 11137  0DA9  0820               	movf	LCD_Write_Int@value,w
 11138  0DAA  00F2               	movwf	___awdiv@dividend
 11139  0DAB  3188  20B2  318D   	fcall	___awdiv
 11140  0DAE  0871               	movf	?___awdiv+1,w
 11141  0DAF  0020               	movlb	0	; select bank0
 11142  0DB0  00A1               	movwf	LCD_Write_Int@value+1
 11143  0DB1  0870               	movf	?___awdiv,w
 11144  0DB2  00A0               	movwf	LCD_Write_Int@value
 11145                           
 11146                           ;lcd.c: 269: i--;
 11147  0DB3  30FF               	movlw	255
 11148  0DB4  07B1               	addwf	LCD_Write_Int@i,f
 11149  0DB5  30FF               	movlw	255
 11150  0DB6  3DB2               	addwfc	LCD_Write_Int@i+1,f
 11151  0DB7  2D89               	goto	l2727
 11152  0DB8                     l2729:	
 11153                           
 11154                           ;lcd.c: 270: }
 11155                           ;lcd.c: 271: if(fieldLength==-1)
 11156  0DB8  0A22               	incf	LCD_Write_Int@fieldLength,w
 11157  0DB9  1903               	btfsc	3,2
 11158  0DBA  2DC0               	goto	l2735
 11159  0DBB  2DC8               	goto	l2737
 11160  0DBC                     l2733:	
 11161                           ;lcd.c: 272: {
 11162                           ;lcd.c: 273: while(str[j]==0)
 11163                           
 11164                           
 11165                           ;lcd.c: 274: {
 11166                           ;lcd.c: 275: j++;
 11167  0DBC  3001               	movlw	1
 11168  0DBD  07AF               	addwf	LCD_Write_Int@j,f
 11169  0DBE  3000               	movlw	0
 11170  0DBF  3DB0               	addwfc	LCD_Write_Int@j+1,f
 11171  0DC0                     l2735:	
 11172  0DC0  082F               	movf	LCD_Write_Int@j,w
 11173  0DC1  3E2A               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
 11174  0DC2  0086               	movwf	6
 11175  0DC3  0187               	clrf	7
 11176  0DC4  0801               	movf	1,w
 11177  0DC5  1D03               	btfss	3,2
 11178  0DC6  2DD8               	goto	l2739
 11179  0DC7  2DBC               	goto	l2733
 11180  0DC8                     l2737:	
 11181                           ;lcd.c: 276: }
 11182                           ;lcd.c: 277: }
 11183                           
 11184                           
 11185                           ;lcd.c: 278: else
 11186                           ;lcd.c: 279: {
 11187                           ;lcd.c: 280: j=5-fieldLength;
 11188  0DC8  0822               	movf	LCD_Write_Int@fieldLength,w
 11189  0DC9  00A5               	movwf	??_LCD_Write_Int
 11190  0DCA  01A6               	clrf	??_LCD_Write_Int+1
 11191  0DCB  1BA5               	btfsc	??_LCD_Write_Int,7
 11192  0DCC  03A6               	decf	??_LCD_Write_Int+1,f
 11193  0DCD  09A5               	comf	??_LCD_Write_Int,f
 11194  0DCE  09A6               	comf	??_LCD_Write_Int+1,f
 11195  0DCF  0AA5               	incf	??_LCD_Write_Int,f
 11196  0DD0  1903               	skipnz
 11197  0DD1  0AA6               	incf	??_LCD_Write_Int+1,f
 11198  0DD2  0825               	movf	??_LCD_Write_Int,w
 11199  0DD3  3E05               	addlw	5
 11200  0DD4  00AF               	movwf	LCD_Write_Int@j
 11201  0DD5  3000               	movlw	0
 11202  0DD6  3D26               	addwfc	??_LCD_Write_Int+1,w
 11203  0DD7  00B0               	movwf	LCD_Write_Int@j+1
 11204  0DD8                     l2739:	
 11205                           
 11206                           ;lcd.c: 281: }
 11207                           ;lcd.c: 283: for(i=j;i<(5-numPlaces);i++)
 11208  0DD8  0830               	movf	LCD_Write_Int@j+1,w
 11209  0DD9  00B2               	movwf	LCD_Write_Int@i+1
 11210  0DDA  082F               	movf	LCD_Write_Int@j,w
 11211  0DDB  00B1               	movwf	LCD_Write_Int@i
 11212  0DDC                     l2745:	
 11213  0DDC  0823               	movf	LCD_Write_Int@numPlaces,w
 11214  0DDD  00A5               	movwf	??_LCD_Write_Int
 11215  0DDE  01A6               	clrf	??_LCD_Write_Int+1
 11216  0DDF  1BA5               	btfsc	??_LCD_Write_Int,7
 11217  0DE0  03A6               	decf	??_LCD_Write_Int+1,f
 11218  0DE1  09A5               	comf	??_LCD_Write_Int,f
 11219  0DE2  09A6               	comf	??_LCD_Write_Int+1,f
 11220  0DE3  0AA5               	incf	??_LCD_Write_Int,f
 11221  0DE4  1903               	skipnz
 11222  0DE5  0AA6               	incf	??_LCD_Write_Int+1,f
 11223  0DE6  0825               	movf	??_LCD_Write_Int,w
 11224  0DE7  3E05               	addlw	5
 11225  0DE8  00A7               	movwf	??_LCD_Write_Int+2
 11226  0DE9  3000               	movlw	0
 11227  0DEA  3D26               	addwfc	??_LCD_Write_Int+1,w
 11228  0DEB  00A8               	movwf	??_LCD_Write_Int+3
 11229  0DEC  0832               	movf	LCD_Write_Int@i+1,w
 11230  0DED  3A80               	xorlw	128
 11231  0DEE  00A9               	movwf	??_LCD_Write_Int+4
 11232  0DEF  0828               	movf	??_LCD_Write_Int+3,w
 11233  0DF0  3A80               	xorlw	128
 11234  0DF1  0229               	subwf	??_LCD_Write_Int+4,w
 11235  0DF2  1D03               	skipz
 11236  0DF3  2DF6               	goto	u3005
 11237  0DF4  0827               	movf	??_LCD_Write_Int+2,w
 11238  0DF5  0231               	subwf	LCD_Write_Int@i,w
 11239  0DF6                     u3005:	
 11240  0DF6  1803               	btfsc	3,0
 11241  0DF7  2E08               	goto	l2747
 11242                           
 11243                           ;lcd.c: 284: {
 11244                           ;lcd.c: 285: LCD_Write_Char(48+str[i]);
 11245  0DF8  0020               	movlb	0	; select bank0
 11246  0DF9  0831               	movf	LCD_Write_Int@i,w
 11247  0DFA  3E2A               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
 11248  0DFB  0086               	movwf	6
 11249  0DFC  0187               	clrf	7
 11250  0DFD  0801               	movf	1,w
 11251  0DFE  3E30               	addlw	48
 11252  0DFF  3196  26B5  318D   	fcall	_LCD_Write_Char
 11253  0E02  3001               	movlw	1
 11254  0E03  0020               	movlb	0	; select bank0
 11255  0E04  07B1               	addwf	LCD_Write_Int@i,f
 11256  0E05  3000               	movlw	0
 11257  0E06  3DB2               	addwfc	LCD_Write_Int@i+1,f
 11258  0E07  2DDC               	goto	l2745
 11259  0E08                     l2747:	
 11260                           
 11261                           ;lcd.c: 286: }
 11262                           ;lcd.c: 288: if(numPlaces == 1)
 11263  0E08  0020               	movlb	0	; select bank0
 11264  0E09  0323               	decf	LCD_Write_Int@numPlaces,w
 11265  0E0A  1D03               	btfss	3,2
 11266  0E0B  2E16               	goto	l2751
 11267                           
 11268                           ;lcd.c: 289: {
 11269                           ;lcd.c: 290: LCD_Write_Char(46);
 11270  0E0C  302E               	movlw	46
 11271  0E0D  3196  26B5  318D   	fcall	_LCD_Write_Char
 11272                           
 11273                           ;lcd.c: 291: LCD_Write_Char(48+str[4]);
 11274  0E10  0020               	movlb	0	; select bank0
 11275  0E11  082E               	movf	LCD_Write_Int@str+4,w
 11276  0E12  3E30               	addlw	48
 11277  0E13  3196  26B5  318D   	fcall	_LCD_Write_Char
 11278  0E16                     l2751:	
 11279                           
 11280                           ;lcd.c: 292: }
 11281                           ;lcd.c: 294: if(numPlaces == 2)
 11282  0E16  3002               	movlw	2
 11283  0E17  0020               	movlb	0	; select bank0
 11284  0E18  0623               	xorwf	LCD_Write_Int@numPlaces,w
 11285  0E19  1D03               	btfss	3,2
 11286  0E1A  0008               	return
 11287                           
 11288                           ;lcd.c: 295: {
 11289                           ;lcd.c: 296: LCD_Write_Char(46);
 11290  0E1B  302E               	movlw	46
 11291  0E1C  3196  26B5  318D   	fcall	_LCD_Write_Char
 11292                           
 11293                           ;lcd.c: 297: LCD_Write_Char(48+str[3]);
 11294  0E1F  0020               	movlb	0	; select bank0
 11295  0E20  082D               	movf	LCD_Write_Int@str+3,w
 11296  0E21  3E30               	addlw	48
 11297  0E22  3196  26B5  318D   	fcall	_LCD_Write_Char
 11298                           
 11299                           ;lcd.c: 298: LCD_Write_Char(48+str[4]);
 11300  0E25  0020               	movlb	0	; select bank0
 11301  0E26  082E               	movf	LCD_Write_Int@str+4,w
 11302  0E27  3E30               	addlw	48
 11303  0E28  3196  26B5         	fcall	_LCD_Write_Char
 11304  0E2A  0008               	return
 11305  0E2B                     __end_of_LCD_Write_Int:	
 11306                           
 11307                           	psect	text30
 11308  086D                     __ptext30:	
 11309 ;; *************** function ___awmod *****************
 11310 ;; Defined at:
 11311 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c"
 11312 ;; Parameters:    Size  Location     Type
 11313 ;;  divisor         2    0[COMMON] int 
 11314 ;;  dividend        2    2[COMMON] int 
 11315 ;; Auto vars:     Size  Location     Type
 11316 ;;  sign            1    6[COMMON] unsigned char 
 11317 ;;  counter         1    5[COMMON] unsigned char 
 11318 ;; Return value:  Size  Location     Type
 11319 ;;                  2    0[COMMON] int 
 11320 ;; Registers used:
 11321 ;;		wreg, status,2, status,0
 11322 ;; Tracked objects:
 11323 ;;		On entry : 0/0
 11324 ;;		On exit  : 0/0
 11325 ;;		Unchanged: 0/0
 11326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11327 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11328 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11329 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11330 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11331 ;;Total ram usage:        7 bytes
 11332 ;; Hardware stack levels used:    1
 11333 ;; This function calls:
 11334 ;;		Nothing
 11335 ;; This function is called by:
 11336 ;;		_LCD_Write_Int
 11337 ;; This function uses a non-reentrant model
 11338 ;;
 11339                           
 11340                           
 11341                           ;psect for function ___awmod
 11342  086D                     ___awmod:	
 11343                           
 11344                           ;incstack = 0
 11345                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 11346  086D  01F6               	clrf	___awmod@sign
 11347  086E  1FF3               	btfss	___awmod@dividend+1,7
 11348  086F  2877               	goto	l2577
 11349  0870  09F2               	comf	___awmod@dividend,f
 11350  0871  09F3               	comf	___awmod@dividend+1,f
 11351  0872  0AF2               	incf	___awmod@dividend,f
 11352  0873  1903               	skipnz
 11353  0874  0AF3               	incf	___awmod@dividend+1,f
 11354  0875  01F6               	clrf	___awmod@sign
 11355  0876  0AF6               	incf	___awmod@sign,f
 11356  0877                     l2577:	
 11357  0877  1FF1               	btfss	___awmod@divisor+1,7
 11358  0878  287E               	goto	l2581
 11359  0879  09F0               	comf	___awmod@divisor,f
 11360  087A  09F1               	comf	___awmod@divisor+1,f
 11361  087B  0AF0               	incf	___awmod@divisor,f
 11362  087C  1903               	skipnz
 11363  087D  0AF1               	incf	___awmod@divisor+1,f
 11364  087E                     l2581:	
 11365  087E  0870               	movf	___awmod@divisor,w
 11366  087F  0471               	iorwf	___awmod@divisor+1,w
 11367  0880  1903               	btfsc	3,2
 11368  0881  28A5               	goto	l2599
 11369  0882  01F5               	clrf	___awmod@counter
 11370  0883  0AF5               	incf	___awmod@counter,f
 11371  0884                     l2589:	
 11372  0884  1BF1               	btfsc	___awmod@divisor+1,7
 11373  0885  2890               	goto	l2591
 11374  0886  3001               	movlw	1
 11375  0887                     u2675:	
 11376  0887  35F0               	lslf	___awmod@divisor,f
 11377  0888  0DF1               	rlf	___awmod@divisor+1,f
 11378  0889  0B89               	decfsz	9,f
 11379  088A  2887               	goto	u2675
 11380  088B  3001               	movlw	1
 11381  088C  00F4               	movwf	??___awmod
 11382  088D  0874               	movf	??___awmod,w
 11383  088E  07F5               	addwf	___awmod@counter,f
 11384  088F  2884               	goto	l2589
 11385  0890                     l2591:	
 11386  0890  0871               	movf	___awmod@divisor+1,w
 11387  0891  0273               	subwf	___awmod@dividend+1,w
 11388  0892  1D03               	skipz
 11389  0893  2896               	goto	u2695
 11390  0894  0870               	movf	___awmod@divisor,w
 11391  0895  0272               	subwf	___awmod@dividend,w
 11392  0896                     u2695:	
 11393  0896  1C03               	skipc
 11394  0897  289C               	goto	l2595
 11395  0898  0870               	movf	___awmod@divisor,w
 11396  0899  02F2               	subwf	___awmod@dividend,f
 11397  089A  0871               	movf	___awmod@divisor+1,w
 11398  089B  3BF3               	subwfb	___awmod@dividend+1,f
 11399  089C                     l2595:	
 11400  089C  3001               	movlw	1
 11401  089D                     u2705:	
 11402  089D  36F1               	lsrf	___awmod@divisor+1,f
 11403  089E  0CF0               	rrf	___awmod@divisor,f
 11404  089F  0B89               	decfsz	9,f
 11405  08A0  289D               	goto	u2705
 11406  08A1  3001               	movlw	1
 11407  08A2  02F5               	subwf	___awmod@counter,f
 11408  08A3  1D03               	btfss	3,2
 11409  08A4  2890               	goto	l2591
 11410  08A5                     l2599:	
 11411  08A5  0876               	movf	___awmod@sign,w
 11412  08A6  1903               	btfsc	3,2
 11413  08A7  28AD               	goto	l2603
 11414  08A8  09F2               	comf	___awmod@dividend,f
 11415  08A9  09F3               	comf	___awmod@dividend+1,f
 11416  08AA  0AF2               	incf	___awmod@dividend,f
 11417  08AB  1903               	skipnz
 11418  08AC  0AF3               	incf	___awmod@dividend+1,f
 11419  08AD                     l2603:	
 11420  08AD  0873               	movf	___awmod@dividend+1,w
 11421  08AE  00F1               	movwf	?___awmod+1
 11422  08AF  0872               	movf	___awmod@dividend,w
 11423  08B0  00F0               	movwf	?___awmod
 11424  08B1  0008               	return
 11425  08B2                     __end_of___awmod:	
 11426                           
 11427                           	psect	text31
 11428  08B2                     __ptext31:	
 11429 ;; *************** function ___awdiv *****************
 11430 ;; Defined at:
 11431 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c"
 11432 ;; Parameters:    Size  Location     Type
 11433 ;;  divisor         2    0[COMMON] int 
 11434 ;;  dividend        2    2[COMMON] int 
 11435 ;; Auto vars:     Size  Location     Type
 11436 ;;  quotient        2    7[COMMON] int 
 11437 ;;  sign            1    6[COMMON] unsigned char 
 11438 ;;  counter         1    5[COMMON] unsigned char 
 11439 ;; Return value:  Size  Location     Type
 11440 ;;                  2    0[COMMON] int 
 11441 ;; Registers used:
 11442 ;;		wreg, status,2, status,0
 11443 ;; Tracked objects:
 11444 ;;		On entry : 0/0
 11445 ;;		On exit  : 0/0
 11446 ;;		Unchanged: 0/0
 11447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11448 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11449 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11450 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11451 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11452 ;;Total ram usage:        9 bytes
 11453 ;; Hardware stack levels used:    1
 11454 ;; This function calls:
 11455 ;;		Nothing
 11456 ;; This function is called by:
 11457 ;;		_LCD_Write_Int
 11458 ;; This function uses a non-reentrant model
 11459 ;;
 11460                           
 11461                           
 11462                           ;psect for function ___awdiv
 11463  08B2                     ___awdiv:	
 11464                           
 11465                           ;incstack = 0
 11466                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 11467  08B2  01F6               	clrf	___awdiv@sign
 11468  08B3  1FF1               	btfss	___awdiv@divisor+1,7
 11469  08B4  28BC               	goto	l2533
 11470  08B5  09F0               	comf	___awdiv@divisor,f
 11471  08B6  09F1               	comf	___awdiv@divisor+1,f
 11472  08B7  0AF0               	incf	___awdiv@divisor,f
 11473  08B8  1903               	skipnz
 11474  08B9  0AF1               	incf	___awdiv@divisor+1,f
 11475  08BA  01F6               	clrf	___awdiv@sign
 11476  08BB  0AF6               	incf	___awdiv@sign,f
 11477  08BC                     l2533:	
 11478  08BC  1FF3               	btfss	___awdiv@dividend+1,7
 11479  08BD  28C7               	goto	l2539
 11480  08BE  09F2               	comf	___awdiv@dividend,f
 11481  08BF  09F3               	comf	___awdiv@dividend+1,f
 11482  08C0  0AF2               	incf	___awdiv@dividend,f
 11483  08C1  1903               	skipnz
 11484  08C2  0AF3               	incf	___awdiv@dividend+1,f
 11485  08C3  3001               	movlw	1
 11486  08C4  00F4               	movwf	??___awdiv
 11487  08C5  0874               	movf	??___awdiv,w
 11488  08C6  06F6               	xorwf	___awdiv@sign,f
 11489  08C7                     l2539:	
 11490  08C7  01F7               	clrf	___awdiv@quotient
 11491  08C8  01F8               	clrf	___awdiv@quotient+1
 11492  08C9  0870               	movf	___awdiv@divisor,w
 11493  08CA  0471               	iorwf	___awdiv@divisor+1,w
 11494  08CB  1903               	btfsc	3,2
 11495  08CC  28F6               	goto	l2561
 11496  08CD  01F5               	clrf	___awdiv@counter
 11497  08CE  0AF5               	incf	___awdiv@counter,f
 11498  08CF                     l2549:	
 11499  08CF  1BF1               	btfsc	___awdiv@divisor+1,7
 11500  08D0  28DB               	goto	l2551
 11501  08D1  3001               	movlw	1
 11502  08D2                     u2575:	
 11503  08D2  35F0               	lslf	___awdiv@divisor,f
 11504  08D3  0DF1               	rlf	___awdiv@divisor+1,f
 11505  08D4  0B89               	decfsz	9,f
 11506  08D5  28D2               	goto	u2575
 11507  08D6  3001               	movlw	1
 11508  08D7  00F4               	movwf	??___awdiv
 11509  08D8  0874               	movf	??___awdiv,w
 11510  08D9  07F5               	addwf	___awdiv@counter,f
 11511  08DA  28CF               	goto	l2549
 11512  08DB                     l2551:	
 11513  08DB  3001               	movlw	1
 11514  08DC                     u2595:	
 11515  08DC  35F7               	lslf	___awdiv@quotient,f
 11516  08DD  0DF8               	rlf	___awdiv@quotient+1,f
 11517  08DE  0B89               	decfsz	9,f
 11518  08DF  28DC               	goto	u2595
 11519  08E0  0871               	movf	___awdiv@divisor+1,w
 11520  08E1  0273               	subwf	___awdiv@dividend+1,w
 11521  08E2  1D03               	skipz
 11522  08E3  28E6               	goto	u2605
 11523  08E4  0870               	movf	___awdiv@divisor,w
 11524  08E5  0272               	subwf	___awdiv@dividend,w
 11525  08E6                     u2605:	
 11526  08E6  1C03               	skipc
 11527  08E7  28ED               	goto	l2557
 11528  08E8  0870               	movf	___awdiv@divisor,w
 11529  08E9  02F2               	subwf	___awdiv@dividend,f
 11530  08EA  0871               	movf	___awdiv@divisor+1,w
 11531  08EB  3BF3               	subwfb	___awdiv@dividend+1,f
 11532  08EC  1477               	bsf	___awdiv@quotient,0
 11533  08ED                     l2557:	
 11534  08ED  3001               	movlw	1
 11535  08EE                     u2615:	
 11536  08EE  36F1               	lsrf	___awdiv@divisor+1,f
 11537  08EF  0CF0               	rrf	___awdiv@divisor,f
 11538  08F0  0B89               	decfsz	9,f
 11539  08F1  28EE               	goto	u2615
 11540  08F2  3001               	movlw	1
 11541  08F3  02F5               	subwf	___awdiv@counter,f
 11542  08F4  1D03               	btfss	3,2
 11543  08F5  28DB               	goto	l2551
 11544  08F6                     l2561:	
 11545  08F6  0876               	movf	___awdiv@sign,w
 11546  08F7  1903               	btfsc	3,2
 11547  08F8  28FE               	goto	l2565
 11548  08F9  09F7               	comf	___awdiv@quotient,f
 11549  08FA  09F8               	comf	___awdiv@quotient+1,f
 11550  08FB  0AF7               	incf	___awdiv@quotient,f
 11551  08FC  1903               	skipnz
 11552  08FD  0AF8               	incf	___awdiv@quotient+1,f
 11553  08FE                     l2565:	
 11554  08FE  0878               	movf	___awdiv@quotient+1,w
 11555  08FF  00F1               	movwf	?___awdiv+1
 11556  0900  0877               	movf	___awdiv@quotient,w
 11557  0901  00F0               	movwf	?___awdiv
 11558  0902  0008               	return
 11559  0903                     __end_of___awdiv:	
 11560                           
 11561                           	psect	text32
 11562  16B5                     __ptext32:	
 11563 ;; *************** function _LCD_Write_Char *****************
 11564 ;; Defined at:
 11565 ;;		line 223 in file "lcd.c"
 11566 ;; Parameters:    Size  Location     Type
 11567 ;;  a               1    wreg     const unsigned char 
 11568 ;; Auto vars:     Size  Location     Type
 11569 ;;  a               1    4[COMMON] const unsigned char 
 11570 ;;  y               1    3[COMMON] unsigned char 
 11571 ;;  temp            1    2[COMMON] unsigned char 
 11572 ;; Return value:  Size  Location     Type
 11573 ;;                  1    wreg      void 
 11574 ;; Registers used:
 11575 ;;		wreg, status,2, status,0, pclath, cstack
 11576 ;; Tracked objects:
 11577 ;;		On entry : 0/0
 11578 ;;		On exit  : 0/0
 11579 ;;		Unchanged: 0/0
 11580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11582 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11583 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11584 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11585 ;;Total ram usage:        4 bytes
 11586 ;; Hardware stack levels used:    1
 11587 ;; Hardware stack levels required when called:    1
 11588 ;; This function calls:
 11589 ;;		_LCD_Port
 11590 ;; This function is called by:
 11591 ;;		_InitCustomChars
 11592 ;;		_LCD_Write_String
 11593 ;;		_LCD_Write_Int
 11594 ;;		_main
 11595 ;; This function uses a non-reentrant model
 11596 ;;
 11597                           
 11598                           
 11599                           ;psect for function _LCD_Write_Char
 11600  16B5                     _LCD_Write_Char:	
 11601                           
 11602                           ;incstack = 0
 11603                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
 11604                           ;LCD_Write_Char@a stored from wreg
 11605  16B5  00F4               	movwf	LCD_Write_Char@a
 11606                           
 11607                           ;lcd.c: 225: char temp,y;
 11608                           ;lcd.c: 226: temp = a&0x0F;
 11609  16B6  0874               	movf	LCD_Write_Char@a,w
 11610  16B7  390F               	andlw	15
 11611  16B8  00F1               	movwf	??_LCD_Write_Char
 11612  16B9  0871               	movf	??_LCD_Write_Char,w
 11613  16BA  00F2               	movwf	LCD_Write_Char@temp
 11614                           
 11615                           ;lcd.c: 227: y = a&0xF0;
 11616  16BB  0874               	movf	LCD_Write_Char@a,w
 11617  16BC  39F0               	andlw	240
 11618  16BD  00F1               	movwf	??_LCD_Write_Char
 11619  16BE  0871               	movf	??_LCD_Write_Char,w
 11620  16BF  00F3               	movwf	LCD_Write_Char@y
 11621                           
 11622                           ;lcd.c: 228: RA0 = 1;
 11623  16C0  0020               	movlb	0	; select bank0
 11624  16C1  140C               	bsf	12,0	;volatile
 11625                           
 11626                           ;lcd.c: 229: LCD_Port(y>>4);
 11627  16C2  0873               	movf	LCD_Write_Char@y,w
 11628  16C3  00F1               	movwf	??_LCD_Write_Char
 11629  16C4  3004               	movlw	4
 11630  16C5                     u2305:	
 11631  16C5  36F1               	lsrf	??_LCD_Write_Char,f
 11632  16C6  0B89               	decfsz	9,f
 11633  16C7  2EC5               	goto	u2305
 11634  16C8  0871               	movf	??_LCD_Write_Char,w
 11635  16C9  3196  2610  3196   	fcall	_LCD_Port
 11636                           
 11637                           ;lcd.c: 230: RA2 = 1;
 11638  16CC  0020               	movlb	0	; select bank0
 11639  16CD  150C               	bsf	12,2	;volatile
 11640                           
 11641                           ;lcd.c: 231: RA2 = 0;
 11642  16CE  110C               	bcf	12,2	;volatile
 11643                           
 11644                           ;lcd.c: 232: _delay((unsigned long)((40)*(32000000/4000000.0)));
 11645  16CF  306A               	movlw	106
 11646  16D0  00F1               	movwf	??_LCD_Write_Char
 11647  16D1                     u3947:	
 11648  16D1  0BF1               	decfsz	??_LCD_Write_Char,f
 11649  16D2  2ED1               	goto	u3947
 11650  16D3  0000               	nop
 11651                           
 11652                           ;lcd.c: 233: LCD_Port(temp);
 11653  16D4  0872               	movf	LCD_Write_Char@temp,w
 11654  16D5  3196  2610  3196   	fcall	_LCD_Port
 11655                           
 11656                           ;lcd.c: 234: RA2 = 1;
 11657  16D8  0020               	movlb	0	; select bank0
 11658  16D9  150C               	bsf	12,2	;volatile
 11659                           
 11660                           ;lcd.c: 235: RA2 = 0;
 11661  16DA  110C               	bcf	12,2	;volatile
 11662                           
 11663                           ;lcd.c: 236: _delay((unsigned long)((40)*(32000000/4000000.0)));
 11664  16DB  306A               	movlw	106
 11665  16DC  00F1               	movwf	??_LCD_Write_Char
 11666  16DD                     u3957:	
 11667  16DD  0BF1               	decfsz	??_LCD_Write_Char,f
 11668  16DE  2EDD               	goto	u3957
 11669  16DF  0000               	nop
 11670  16E0  0008               	return
 11671  16E1                     __end_of_LCD_Write_Char:	
 11672                           
 11673                           	psect	text33
 11674  17C1                     __ptext33:	
 11675 ;; *************** function _LCD_Set_Cursor *****************
 11676 ;; Defined at:
 11677 ;;		line 82 in file "lcd.c"
 11678 ;; Parameters:    Size  Location     Type
 11679 ;;  x               1    wreg     unsigned char 
 11680 ;;  y               1    4[COMMON] unsigned char 
 11681 ;; Auto vars:     Size  Location     Type
 11682 ;;  x               1    7[COMMON] unsigned char 
 11683 ;;  temp            1   10[COMMON] unsigned char 
 11684 ;;  w               1    9[COMMON] unsigned char 
 11685 ;;  z               1    8[COMMON] unsigned char 
 11686 ;; Return value:  Size  Location     Type
 11687 ;;                  1    wreg      void 
 11688 ;; Registers used:
 11689 ;;		wreg, status,2, status,0, pclath, cstack
 11690 ;; Tracked objects:
 11691 ;;		On entry : 0/0
 11692 ;;		On exit  : 0/0
 11693 ;;		Unchanged: 0/0
 11694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11695 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11696 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11697 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11698 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11699 ;;Total ram usage:        7 bytes
 11700 ;; Hardware stack levels used:    1
 11701 ;; Hardware stack levels required when called:    2
 11702 ;; This function calls:
 11703 ;;		_LCD_Cmd
 11704 ;; This function is called by:
 11705 ;;		_main
 11706 ;; This function uses a non-reentrant model
 11707 ;;
 11708                           
 11709                           
 11710                           ;psect for function _LCD_Set_Cursor
 11711  17C1                     _LCD_Set_Cursor:	
 11712                           
 11713                           ;incstack = 0
 11714                           ; Regs used in _LCD_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
 11715                           ;LCD_Set_Cursor@x stored from wreg
 11716  17C1  00F7               	movwf	LCD_Set_Cursor@x
 11717                           
 11718                           ;lcd.c: 86: char temp,z,w;
 11719                           ;lcd.c: 88: if(y == 0)
 11720  17C2  0874               	movf	LCD_Set_Cursor@y,w
 11721  17C3  1D03               	btfss	3,2
 11722  17C4  2FE1               	goto	l2687
 11723                           
 11724                           ;lcd.c: 89: {
 11725                           ;lcd.c: 90: temp = 0x80 + x;
 11726  17C5  0877               	movf	LCD_Set_Cursor@x,w
 11727  17C6  3E80               	addlw	128
 11728  17C7  00F5               	movwf	??_LCD_Set_Cursor
 11729  17C8  0875               	movf	??_LCD_Set_Cursor,w
 11730  17C9  00FA               	movwf	LCD_Set_Cursor@temp
 11731                           
 11732                           ;lcd.c: 91: z = temp>>4;
 11733  17CA  087A               	movf	LCD_Set_Cursor@temp,w
 11734  17CB  00F5               	movwf	??_LCD_Set_Cursor
 11735  17CC  3004               	movlw	4
 11736  17CD                     u2905:	
 11737  17CD  36F5               	lsrf	??_LCD_Set_Cursor,f
 11738  17CE  0B89               	decfsz	9,f
 11739  17CF  2FCD               	goto	u2905
 11740  17D0  0875               	movf	??_LCD_Set_Cursor,w
 11741  17D1  00F6               	movwf	??_LCD_Set_Cursor+1
 11742  17D2  0876               	movf	??_LCD_Set_Cursor+1,w
 11743  17D3  00F8               	movwf	LCD_Set_Cursor@z
 11744                           
 11745                           ;lcd.c: 92: w = temp & 0x0F;
 11746  17D4  087A               	movf	LCD_Set_Cursor@temp,w
 11747  17D5  390F               	andlw	15
 11748  17D6  00F5               	movwf	??_LCD_Set_Cursor
 11749  17D7  0875               	movf	??_LCD_Set_Cursor,w
 11750  17D8  00F9               	movwf	LCD_Set_Cursor@w
 11751                           
 11752                           ;lcd.c: 93: LCD_Cmd(z);
 11753  17D9  0878               	movf	LCD_Set_Cursor@z,w
 11754  17DA  3195  25E6  3197   	fcall	_LCD_Cmd
 11755                           
 11756                           ;lcd.c: 94: LCD_Cmd(w);
 11757  17DD  0879               	movf	LCD_Set_Cursor@w,w
 11758  17DE  3195  25E6         	fcall	_LCD_Cmd
 11759                           
 11760                           ;lcd.c: 95: }
 11761  17E0  0008               	return
 11762  17E1                     l2687:	
 11763                           
 11764                           ;lcd.c: 97: else if(y == 1)
 11765  17E1  0374               	decf	LCD_Set_Cursor@y,w
 11766  17E2  1D03               	btfss	3,2
 11767  17E3  0008               	return
 11768                           
 11769                           ;lcd.c: 98: {
 11770                           ;lcd.c: 99: temp = 0xC0 + x;
 11771  17E4  0877               	movf	LCD_Set_Cursor@x,w
 11772  17E5  3EC0               	addlw	192
 11773  17E6  00F5               	movwf	??_LCD_Set_Cursor
 11774  17E7  0875               	movf	??_LCD_Set_Cursor,w
 11775  17E8  00FA               	movwf	LCD_Set_Cursor@temp
 11776                           
 11777                           ;lcd.c: 100: z = temp>>4;
 11778  17E9  087A               	movf	LCD_Set_Cursor@temp,w
 11779  17EA  00F5               	movwf	??_LCD_Set_Cursor
 11780  17EB  3004               	movlw	4
 11781  17EC                     u2925:	
 11782  17EC  36F5               	lsrf	??_LCD_Set_Cursor,f
 11783  17ED  0B89               	decfsz	9,f
 11784  17EE  2FEC               	goto	u2925
 11785  17EF  0875               	movf	??_LCD_Set_Cursor,w
 11786  17F0  00F6               	movwf	??_LCD_Set_Cursor+1
 11787  17F1  0876               	movf	??_LCD_Set_Cursor+1,w
 11788  17F2  00F8               	movwf	LCD_Set_Cursor@z
 11789                           
 11790                           ;lcd.c: 101: w = temp & 0x0F;
 11791  17F3  087A               	movf	LCD_Set_Cursor@temp,w
 11792  17F4  390F               	andlw	15
 11793  17F5  00F5               	movwf	??_LCD_Set_Cursor
 11794  17F6  0875               	movf	??_LCD_Set_Cursor,w
 11795  17F7  00F9               	movwf	LCD_Set_Cursor@w
 11796                           
 11797                           ;lcd.c: 102: LCD_Cmd(z);
 11798  17F8  0878               	movf	LCD_Set_Cursor@z,w
 11799  17F9  3195  25E6  3197   	fcall	_LCD_Cmd
 11800                           
 11801                           ;lcd.c: 103: LCD_Cmd(w);
 11802  17FC  0879               	movf	LCD_Set_Cursor@w,w
 11803  17FD  3195  25E6         	fcall	_LCD_Cmd
 11804  17FF  0008               	return
 11805  1800                     __end_of_LCD_Set_Cursor:	
 11806                           
 11807                           	psect	text34
 11808  15E6                     __ptext34:	
 11809 ;; *************** function _LCD_Cmd *****************
 11810 ;; Defined at:
 11811 ;;		line 65 in file "lcd.c"
 11812 ;; Parameters:    Size  Location     Type
 11813 ;;  a               1    wreg     unsigned char 
 11814 ;; Auto vars:     Size  Location     Type
 11815 ;;  a               1    3[COMMON] unsigned char 
 11816 ;; Return value:  Size  Location     Type
 11817 ;;                  1    wreg      void 
 11818 ;; Registers used:
 11819 ;;		wreg, status,2, status,0, pclath, cstack
 11820 ;; Tracked objects:
 11821 ;;		On entry : 0/0
 11822 ;;		On exit  : 0/0
 11823 ;;		Unchanged: 0/0
 11824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11826 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11827 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11828 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11829 ;;Total ram usage:        3 bytes
 11830 ;; Hardware stack levels used:    1
 11831 ;; Hardware stack levels required when called:    1
 11832 ;; This function calls:
 11833 ;;		_LCD_Port
 11834 ;; This function is called by:
 11835 ;;		_InitCustomChars
 11836 ;;		_LCD_Clear
 11837 ;;		_LCD_Set_Cursor
 11838 ;;		_LCD_Init
 11839 ;; This function uses a non-reentrant model
 11840 ;;
 11841                           
 11842                           
 11843                           ;psect for function _LCD_Cmd
 11844  15E6                     _LCD_Cmd:	
 11845                           
 11846                           ;incstack = 0
 11847                           ; Regs used in _LCD_Cmd: [wreg+status,2+status,0+pclath+cstack]
 11848                           ;LCD_Cmd@a stored from wreg
 11849  15E6  00F3               	movwf	LCD_Cmd@a
 11850                           
 11851                           ;lcd.c: 67: RA0 = 0;
 11852  15E7  0020               	movlb	0	; select bank0
 11853  15E8  100C               	bcf	12,0	;volatile
 11854                           
 11855                           ;lcd.c: 68: LCD_Port(a);
 11856  15E9  0873               	movf	LCD_Cmd@a,w
 11857  15EA  3196  2610  3195   	fcall	_LCD_Port
 11858                           
 11859                           ;lcd.c: 69: RA2 = 1;
 11860  15ED  0020               	movlb	0	; select bank0
 11861  15EE  150C               	bsf	12,2	;volatile
 11862                           
 11863                           ;lcd.c: 70: RA2 = 0;
 11864  15EF  110C               	bcf	12,2	;volatile
 11865                           
 11866                           ;lcd.c: 71: _delay((unsigned long)((4)*(32000000/4000.0)));
 11867  15F0  302A               	movlw	42
 11868  15F1  00F2               	movwf	??_LCD_Cmd+1
 11869  15F2  308D               	movlw	141
 11870  15F3  00F1               	movwf	??_LCD_Cmd
 11871  15F4                     u3967:	
 11872  15F4  0BF1               	decfsz	??_LCD_Cmd,f
 11873  15F5  2DF4               	goto	u3967
 11874  15F6  0BF2               	decfsz	??_LCD_Cmd+1,f
 11875  15F7  2DF4               	goto	u3967
 11876  15F8  3200               	nop2
 11877  15F9  0008               	return
 11878  15FA                     __end_of_LCD_Cmd:	
 11879                           
 11880                           	psect	text35
 11881  1610                     __ptext35:	
 11882 ;; *************** function _LCD_Port *****************
 11883 ;; Defined at:
 11884 ;;		line 41 in file "lcd.c"
 11885 ;; Parameters:    Size  Location     Type
 11886 ;;  a               1    wreg     unsigned char 
 11887 ;; Auto vars:     Size  Location     Type
 11888 ;;  a               1    0[COMMON] unsigned char 
 11889 ;; Return value:  Size  Location     Type
 11890 ;;                  1    wreg      void 
 11891 ;; Registers used:
 11892 ;;		wreg
 11893 ;; Tracked objects:
 11894 ;;		On entry : 0/0
 11895 ;;		On exit  : 0/0
 11896 ;;		Unchanged: 0/0
 11897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11899 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11901 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11902 ;;Total ram usage:        1 bytes
 11903 ;; Hardware stack levels used:    1
 11904 ;; This function calls:
 11905 ;;		Nothing
 11906 ;; This function is called by:
 11907 ;;		_LCD_Cmd
 11908 ;;		_LCD_Init
 11909 ;;		_LCD_Write_Char
 11910 ;; This function uses a non-reentrant model
 11911 ;;
 11912                           
 11913                           
 11914                           ;psect for function _LCD_Port
 11915  1610                     _LCD_Port:	
 11916                           
 11917                           ;incstack = 0
 11918                           ; Regs used in _LCD_Port: [wreg]
 11919                           ;LCD_Port@a stored from wreg
 11920  1610  00F0               	movwf	LCD_Port@a
 11921                           
 11922                           ;lcd.c: 43: if(a & 1)
 11923  1611  1C70               	btfss	LCD_Port@a,0
 11924  1612  2E16               	goto	l94
 11925                           
 11926                           ;lcd.c: 44: RA7 = 1;
 11927  1613  0020               	movlb	0	; select bank0
 11928  1614  178C               	bsf	12,7	;volatile
 11929  1615  2E18               	goto	l2085
 11930  1616                     l94:	
 11931                           
 11932                           ;lcd.c: 45: else
 11933                           ;lcd.c: 46: RA7 = 0;
 11934  1616  0020               	movlb	0	; select bank0
 11935  1617  138C               	bcf	12,7	;volatile
 11936  1618                     l2085:	
 11937                           
 11938                           ;lcd.c: 48: if(a & 2)
 11939  1618  1CF0               	btfss	LCD_Port@a,1
 11940  1619  2E1C               	goto	l96
 11941                           
 11942                           ;lcd.c: 49: RA6 = 1;
 11943  161A  170C               	bsf	12,6	;volatile
 11944  161B  2E1D               	goto	l2089
 11945  161C                     l96:	
 11946                           
 11947                           ;lcd.c: 50: else
 11948                           ;lcd.c: 51: RA6 = 0;
 11949  161C  130C               	bcf	12,6	;volatile
 11950  161D                     l2089:	
 11951                           
 11952                           ;lcd.c: 53: if(a & 4)
 11953  161D  1D70               	btfss	LCD_Port@a,2
 11954  161E  2E21               	goto	l98
 11955                           
 11956                           ;lcd.c: 54: RC0 = 1;
 11957  161F  140E               	bsf	14,0	;volatile
 11958  1620  2E22               	goto	l2093
 11959  1621                     l98:	
 11960                           
 11961                           ;lcd.c: 55: else
 11962                           ;lcd.c: 56: RC0 = 0;
 11963  1621  100E               	bcf	14,0	;volatile
 11964  1622                     l2093:	
 11965                           
 11966                           ;lcd.c: 58: if(a & 8)
 11967  1622  1DF0               	btfss	LCD_Port@a,3
 11968  1623  2E26               	goto	l100
 11969                           
 11970                           ;lcd.c: 59: RC1 = 1;
 11971  1624  148E               	bsf	14,1	;volatile
 11972  1625  0008               	return
 11973  1626                     l100:	
 11974                           
 11975                           ;lcd.c: 60: else
 11976                           ;lcd.c: 61: RC1 = 0;
 11977  1626  108E               	bcf	14,1	;volatile
 11978  1627  0008               	return
 11979  1628                     __end_of_LCD_Port:	
 11980  007E                     btemp	set	126	;btemp
 11981  007E                     wtemp	set	126
 11982  007E                     wtemp0	set	126
 11983  0080                     wtemp1	set	128
 11984  0082                     wtemp2	set	130
 11985  0084                     wtemp3	set	132
 11986  0086                     wtemp4	set	134
 11987  0088                     wtemp5	set	136
 11988  007F                     wtemp6	set	127
 11989  007E                     ttemp	set	126
 11990  007E                     ttemp0	set	126
 11991  0081                     ttemp1	set	129
 11992  0084                     ttemp2	set	132
 11993  0087                     ttemp3	set	135
 11994  007F                     ttemp4	set	127
 11995  007E                     ltemp	set	126
 11996  007E                     ltemp0	set	126
 11997  0082                     ltemp1	set	130
 11998  0086                     ltemp2	set	134
 11999  0080                     ltemp3	set	128


Data Sizes:
    Strings     94
    Constant    27
    Data        28
    BSS         45
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     76      80
    BANK1            80     32      73
    BANK2            80      0      28
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            48      0       0
    BANK10            0      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 27
		 -> log@coeff(CODE[27]), 

    LCD_Write_String@a	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_38(CODE[5]), STR_37(CODE[4]), STR_36(CODE[6]), STR_35(CODE[3]), 
		 -> STR_34(CODE[11]), STR_33(CODE[11]), STR_32(CODE[17]), STR_31(CODE[9]), 
		 -> STR_30(CODE[17]), STR_29(CODE[11]), STR_28(CODE[17]), STR_27(CODE[11]), 
		 -> STR_26(CODE[2]), STR_25(CODE[2]), STR_24(CODE[2]), STR_23(CODE[2]), 
		 -> STR_22(CODE[2]), STR_21(CODE[2]), STR_20(CODE[2]), STR_19(CODE[2]), 
		 -> STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[2]), STR_15(CODE[2]), 
		 -> STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[2]), STR_11(CODE[2]), 
		 -> STR_10(CODE[2]), STR_9(CODE[2]), STR_8(CODE[2]), STR_7(CODE[2]), 
		 -> STR_6(CODE[2]), STR_5(CODE[2]), STR_4(CODE[2]), STR_3(CODE[2]), 
		 -> STR_2(CODE[2]), STR_1(CODE[2]), 


Critical Paths under _main in COMMON

    _main->___fttol
    _tempCalc->___awtoft
    _log->___awtoft
    ___ftmul->___awtoft
    ___awtoft->___ftpack
    ___ftadd->___awtoft
    ___ftdiv->___awtoft
    _readAnalog->___aldiv
    _SYSTEM_Initialize->_LCD_Init
    _LCD_Init->_LCD_Cmd
    _LCD_Clear->_LCD_Cmd
    _InitCustomChars->_LCD_Write_Char
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Int->___fttol
    _LCD_Write_Char->_LCD_Port
    _LCD_Set_Cursor->_LCD_Cmd
    _LCD_Cmd->_LCD_Port

Critical Paths under _main in BANK0

    _main->_tempCalc
    _tempCalc->_log
    _log->_eval_poly
    _eval_poly->___ftadd
    ___ftsub->___ftadd
    ___ftadd->___ftdiv
    ___ftdiv->___ftmul
    _readAnalog->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                35    35      0   51031
                                             73 BANK0      3     3      0
                                              0 BANK1     32    32      0
                            _ADCRead
                          _LCD_Clear
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                      _LCD_Write_Int
                   _LCD_Write_String
                 _PWM6_LoadDutyValue
                  _SYSTEM_Initialize
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___fttol
                            ___lwdiv
                         _readAnalog
                           _tempCalc
 ---------------------------------------------------------------------------------
 (1) _tempCalc                                            12     9      3   31165
                                             61 BANK0     12     9      3
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftsub
                                _log
 ---------------------------------------------------------------------------------
 (2) _log                                                  6     3      3   16273
                                             55 BANK0      6     3      3
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _frexp                                                6     2      4     330
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) _eval_poly                                           10     3      7    7209
                                             45 BANK0     10     3      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             16    10      6    2749
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6     322
                                              0 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             6     3      3    1904
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3674
                                             45 BANK0      6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             13     7      6    3501
                                             32 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    2729
                                             16 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    1707
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _readAnalog                                          22    20      2    1392
                                              9 COMMON     4     4      0
                                              6 BANK0     18    16      2
                            _ADCRead
                            ___aldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     622
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     406
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _ADCRead                                              4     1      3      22
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              8     4      4     374
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             14    10      4     464
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    3     3      0     709
                                              8 COMMON     3     3      0
                    _ADCC_Initialize
                    _InitCustomChars
                          _LCD_Clear
                           _LCD_Init
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM6_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             4     4      0     220
                                              4 COMMON     4     4      0
                            _LCD_Cmd
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            0     0      0     110
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (2) _InitCustomChars                                      2     2      0     356
                                              5 COMMON     2     2      0
                            _LCD_Cmd
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM6_LoadDutyValue                                   4     2      2     256
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCD_Write_String                                     5     3      2    2282
                                              5 COMMON     5     3      2
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (1) _LCD_Write_Int                                       19    14      5    2759
                                              0 BANK0     19    14      5
                     _LCD_Write_Char
                            ___awdiv
                            ___awmod
                            ___fttol (ARG)
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     402
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     406
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (1) _LCD_Set_Cursor                                       7     6      1    1228
                                              4 COMMON     7     6      1
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (3) _LCD_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (3) _LCD_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCRead
   _LCD_Clear
     _LCD_Cmd
       _LCD_Port
   _LCD_Set_Cursor
     _LCD_Cmd
       _LCD_Port
   _LCD_Write_Char
     _LCD_Port
   _LCD_Write_Int
     _LCD_Write_Char
       _LCD_Port
     ___awdiv
     ___awmod
     ___fttol (ARG)
     ___lwdiv (ARG)
   _LCD_Write_String
     _LCD_Write_Char
       _LCD_Port
   _PWM6_LoadDutyValue
   _SYSTEM_Initialize
     _ADCC_Initialize
     _InitCustomChars
       _LCD_Cmd
         _LCD_Port
       _LCD_Write_Char
         _LCD_Port
     _LCD_Clear
       _LCD_Cmd
         _LCD_Port
     _LCD_Init
       _LCD_Cmd
         _LCD_Port
       _LCD_Port
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM6_Initialize
     _TMR2_Initialize
   ___ftadd
     ___awtoft (ARG)
       ___ftpack
     ___ftdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftpack (ARG)
     ___wmul (ARG)
     _frexp (ARG)
   ___ftdiv
     ___awtoft (ARG)
       ___ftpack
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftpack (ARG)
     ___ftpack (ARG)
   ___ftmul
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)
     _frexp (ARG)
   ___fttol
   ___lwdiv
   _readAnalog
     _ADCRead
     ___aldiv
     ___wmul
   _tempCalc
     ___awtoft
       ___ftpack
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
       _frexp (ARG)
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftsub
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
     _log
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftge
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       _eval_poly
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___wmul
       _frexp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4C      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     20      49       7       91.3%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      1C       9       35.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      C3      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               30      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK10               0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      C3      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Mon Feb 26 16:52:23 2018

                    __CFG_CP$OFF 0000                               l58 000B                               l94 1616  
                             l96 161C                               l98 1621                     ___awdiv@sign 0076  
            ___wmul@multiplicand 0072      __size_of_PWM6_LoadDutyValue 0016                     ___ftadd@exp1 004C  
                   ___ftadd@exp2 004B                      __CFG_LVP$ON 0000                     ___ftadd@sign 004A  
                            l100 1626                              l401 1664                              l291 03FC  
                            l456 09D8                              l570 09B0                              l562 0995  
                            l653 0AB5                              l569 09A8                              l593 0FA9  
                            _GIE 005F                              _RA0 0060                              _RA2 0062  
                            _RC0 0070                              _RC1 0071                              _RA6 0066  
                            _RA7 0067                     __CFG_CPD$OFF 0000                              _log 0BFF  
                __end_of_ADCRead 0012                     ___awmod@sign 0076                  _TMR2_Initialize 15C8  
                   __CFG_BORV$LO 0000                              wreg 0009                      main@analogs 00A5  
                __end_of_LCD_Cmd 15FA                     __CFG_ZCD$OFF 0000                     ___ftdiv@cntr 003A  
                 _LCD_Set_Cursor 17C1                     ___ftdiv@sign 003F                             l2121 0F39  
                           l3011 03C8                             l2061 0981                             l2053 096B  
                           l2117 0F32                             l2221 0D38                             l2205 0D14  
                           l2301 1798                             l3021 03F3                             l3005 03C2  
                           l2151 0F88                             l2127 0F48                             l2057 0972  
                           l2145 0F75                             l2217 0D30                             l2209 0D1C  
                           l3121 0512                             l3017 03E6                             l2067 099A  
                           l2059 097C                             l2163 0FBB                             l2147 0F7F  
                           l2139 0F62                             l3115 0502                             l3107 04EF  
                           l3043 043B                             l2093 1622                             l2085 1618  
                           l2069 09A2                             l2157 0F9B                             l2149 0F84  
                           l2503 09F9                             l2167 0FCD                             l2159 0FA5  
                           l2319 095C                             l3127 051F                             l2089 161D  
                           l2361 0823                             l2521 0A40                             l2513 0A27  
                           l2505 0A07                             l2177 0FE8                             l2281 1777  
                           l2193 0CD9                             l3241 07A0                             l3225 06C7  
                           l2603 08AD                             l2355 0812                             l2099 165E  
                           l2187 0CC3                             l3163 0591                             l3139 0553  
                           l3067 047B                             l2533 08BC                             l2517 0A32  
                           l2613 0B6D                             l2269 169F                             l2277 1761  
                           l3253 07B5                             l3157 0581                             l3181 05D5  
                           l3149 056F                             l2551 08DB                             l2703 162A  
                           l3255 07B6                             l3191 05F1                             l2561 08F6  
                           l2641 0BDD                             l2633 0BC4                             l3249 07A9  
                           l3169 05A1                             l3097 04D2                             l2539 08C7  
                           l2803 0A61                             l2619 0B83                             l2475 0C2E  
                           l2565 08FE                             l2557 08ED                             l2549 08CF  
                           l2581 087E                             l2733 0DBC                             l2717 0D82  
                           l2821 0A91                             l2653 167F                             l2469 0C1D  
                           l2591 0890                             l2751 0E16                             l2735 0DC0  
                           l2727 0D89                             l2831 0AB8                             l2823 0A9F  
                           l2495 09E9                             l2671 011A                             l2577 0877  
                           l2745 0DDC                             l2737 0DC8                             l2729 0DB8  
                           l2595 089C                             l2747 0E08                             l2739 0DD8  
                           l2835 0AC6                             l2851 16F5                             l2589 0884  
                           l2829 0AAC                             l2861 1710                             l2687 17E1  
                           l2599 08A5                             l2857 1707                             l2849 16E9  
                           ?_log 0057                             STR_1 1063                             STR_2 106F  
                           STR_3 1071                             STR_4 1069                             STR_5 1063  
                           STR_6 1035                             STR_7 1065                             STR_8 1063  
                           STR_9 1077                             u2105 0F89                             u3005 0DF6  
                           u2045 0F63                             u2205 0CE5                             _LATA 0016  
                           _LATB 0017                             u2135 0F9C                             u2215 0CF5  
                           _LATC 0018                             u2400 1749                             u2305 16C5  
                           u3210 0150                             u3035 1609                             u3115 0AAD  
                           u2075 0F76                             u2235 0D1D                             u2245 0D23  
                           u3055 0A68                             u2505 0A1C                             _T2PR 028D  
                           u3155 16EC                             u2515 0A28                             u2275 0D39  
                           u2605 08E6                             u3085 0A92                             u2285 0D3F  
                           u2615 08EE                             u3175 16F6                             u1815 099D  
                           u2705 089D                             u3185 1700                             u3195 1708  
                           u2475 09FC                             u3507 019D                             u1925 1665  
                           u3517 01B2                             u2575 08D2                             u2495 0A08  
                           u1935 166A                             u1855 09B7                             u1775 0977  
                           u3607 026F                             u3527 01C7                             u2905 17CD  
                           u2825 0027                             u3617 0284                             u3537 01DC  
                           u2595 08DC                             u2675 0887                             u2835 0075  
                           u1795 0990                             u2755 0B95                             u3707 0347  
                           u3627 029F                             u3547 01F1                             u2940 0D6B  
                           u2925 17EC                             u2845 00AE                             u2765 0BA5  
                           u3717 035C                             u3637 02B4                             u3557 0206  
                           u2695 0896                             u2855 00F1                             u2775 0BC5  
                           u3807 05E6                             u3727 0371                             u3647 02C9  
                           u3567 021B                             u3817 0846                             u2865 010A  
                           u2785 0BD4                             u3737 0386                             u3657 02DE  
                           u3577 0230                             u3497 0180                             u3907 0B23  
                           u3827 0856                             u2795 0BDE                             u3747 039B  
                           u3667 02F3                             u3587 0245                             u3917 0B33  
                           u3837 0865                             u2885 0126                             u3757 03B0  
                           u3677 0308                             u3597 025A                             u3927 0B42  
                           u3847 0ADA                             u3767 0432                             u3687 031D  
                           u3937 0B51                             u3857 0AE8                             u3777 0472  
                           u3697 0332                             u3947 16D1                             u3867 0AF3  
                           u3787 04CA                             u3957 16DD                             u3877 0AFD  
                           u3797 0564                             u3967 15F4                             u3887 0B07  
                           u3897 0B15              tempCalc@analogValue 005D                             _WPUA 0F39  
                           _WPUB 0F44                             _WPUC 0F4F                             _WPUE 0F65  
                   __CFG_WRT$OFF 0000                    __CFG_FCMEN$ON 0000                ?_LCD_Write_String 0075  
                           _main 0142                     ___ftpack@arg 0070               __size_of_LCD_Clear 0008  
                   ___ftpack@exp 0073                             fsr0h 0005                             fsr1h 0007  
                           fsr0l 0004                             indf0 0000                             indf1 0001  
                           fsr1l 0006                             btemp 007E                             log@x 0057  
                  __CFG_BOREN$ON 0000                             ltemp 007E                             start 0002  
             ??_LCD_Write_String 0077                             ttemp 007E                             wtemp 007E  
                  __CFG_CSWEN$ON 0000                    __CFG_MCLRE$ON 0000                     ___ftmul@cntr 002E  
                  _LCD_Write_Int 0D60                     ___ftmul@sign 002F                     ___fttol@exp1 007D  
                          ??_log 005A                     ___fttol@lval 0079                 __end_of_LCD_Init 0B56  
               __end_of_LCD_Port 1628   __size_of_OSCILLATOR_Initialize 0009    __end_of_OSCILLATOR_Initialize 1599  
                __end_of___aldiv 0A49                            _ADACQ 009D                            _ADCAP 009B  
                          _ADACT 0099                            ?_main 0070                            _ADCLK 0098  
                          _ADPCH 009E                            _ADREF 009A                  __end_of___awdiv 0903  
                          _ADPRE 009C                  __end_of___ftadd 1000                            STR_10 106B  
                          STR_11 1065                            STR_12 1061                            STR_20 105F  
                          STR_21 1035                            STR_13 1075                            STR_14 1071  
                          STR_30 101B                            STR_22 106D                            STR_23 106B  
                          STR_15 1073                            STR_31 1042                            STR_24 1065  
                          STR_16 1069                            STR_32 101B                            STR_17 106B  
                          STR_25 1075                            STR_33 1037                    __CFG_WDTE$OFF 0000  
                          STR_34 1037                            STR_18 1067                            STR_26 105D  
                          STR_19 1035                            STR_35 105A                            STR_27 102C  
                          STR_36 104B                            STR_28 101B                  __end_of___awmod 08B2  
                          STR_29 102C                            STR_37 1056                            STR_38 1051  
                          _ADRPT 010D                  __end_of___ftdiv 0BFF                  __end_of___ftmul 0D60  
                ___awdiv@divisor 0070                  __end_of___ftsub 1695                  __end_of___fttol 0ACF  
                          _T2CON 028E                            _T2HLT 028F                  __end_of___lwdiv 1715  
                          _T2TMR 028C                            _T2RST 0291                  ___awdiv@counter 0075  
                          _OSCEN 0891                            _TRISA 0011                            _TRISB 0012  
                          _TRISC 0013                  _PWM6_Initialize 1599           __end_of_LCD_Set_Cursor 1800  
                  ___awtoft@sign 007D                            _frexp 1786                            _errno 006C  
                  ___ftpack@sign 0074                            main@x 00BD                            ltemp0 007E  
                          ltemp1 0082                            ltemp2 0086                            ltemp3 0080  
                          ttemp0 007E                            ttemp1 0081                            ttemp2 0084  
                          ttemp3 0087                            ttemp4 007F                            status 0003  
                          wtemp0 007E                            wtemp1 0080                            wtemp2 0082  
                          wtemp3 0084                            wtemp4 0086                            wtemp5 0088  
                          wtemp6 007F                 InitCustomChars@i 0076                   ?_LCD_Write_Int 0020  
                 _LCD_Write_Char 16B5                  __initialization 07BD                      log@exponent 005B  
                   __end_of_main 07BD                readAnalog@channel 0026          __end_of_TMR2_Initialize 15D6  
                      ??_ADCRead 0073                    main@tPadCount 00BA                           ??_main 0069  
                  ___fttol@sign1 0078                __end_of_LCD_Clear 1590                        ??_LCD_Cmd 0071  
                ?_LCD_Set_Cursor 0074                           _ADCON0 0093                           _ADCON1 0094  
                         _ADCON2 0095                           _ADCON3 0096                           ?_frexp 0070  
                         _ADLTHH 010F                           _ADLTHL 010E                           _ADRESH 008D  
                         _ADRESL 008C                           _ADSTAT 0097                           _ADUTHH 0111  
               ___awdiv@dividend 0072                           _ADUTHL 0110                 __end_of___awtoft 16B5  
                         _ANSELA 0F38                           _ANSELB 0F43                           _ANSELC 0F4E  
               __end_of___ftpack 09C7                           _RC2PPS 0F22                   __CFG_WDTCCS$SC 0000  
                         _FVRCON 090C                           _OSCFRQ 0893                    main@dutyCycle 00BE  
         __end_of_LCD_Write_Char 16E1                   __CFG_PWRTE$OFF 0000                     _CCPTMRS1bits 021F  
                         ___ftge 174B           LCD_Write_Int@numPlaces 0023                        ??___aldiv 0078  
                         ___wmul 165C                        ??___awdiv 0074                        ??___ftadd 0046  
                 __CFG_STVREN$ON 0000                        ??___awmod 0074                        ??___ftdiv 0036  
                      ??___ftmul 0026                        ??___ftsub 007E                        ??___fttol 0074  
                      ??___lwdiv 0074          __end_of_PWM6_Initialize 15A4                 ___awdiv@quotient 0077  
                ___awmod@divisor 0070                  ___awmod@counter 0075                           _totals 00C0  
          ___ftmul@f3_as_product 002B                 __end_of_tempCalc 0F0A                  _ADCC_Initialize 1642  
               LCD_Write_Int@str 002A                  _InitCustomChars 0805                  LCD_Set_Cursor@w 0079  
                LCD_Set_Cursor@x 0077                  LCD_Set_Cursor@y 0074                  LCD_Set_Cursor@z 0078  
       readAnalog@analog_channel 0079                _SYSTEM_Initialize 082B                 __end_oflog@coeff 101B  
        __end_of__initialization 07FD                        ?_LCD_Init 0070                        ?_LCD_Port 0070  
                     ___ftadd@f1 0040                       ___ftadd@f2 0043                       ___ftge@ff1 0070  
                     ___ftge@ff2 0073                  ??_LCD_Write_Int 0025               ?_SYSTEM_Initialize 0070  
                   eval_poly@res 0054                       ___ftdiv@f1 0033                       ___ftdiv@f2 0030  
                     ___ftdiv@f3 003B                  ?_LCD_Write_Char 0070                    LCD_Init@style 0077  
                     ___awtoft@c 0078                       ___ftmul@f1 0020                       ___ftmul@f2 0023  
                     ___ftsub@f1 0050                       ___ftsub@f2 004D                       ___fttol@f1 0070  
                 __pcstackCOMMON 0070                        LCD_Port@a 0070                     __pidataBANK1 15BC  
                   __pidataBANK2 15D6              ??_SYSTEM_Initialize 0078                    __end_of_frexp 17C1  
               ?_TMR2_Initialize 0070                          ??_frexp 0074        __end_of_SYSTEM_Initialize 086D  
                     __pbssBANK0 006C                       __pbssBANK1 00C0                       __pbssBANK2 0130  
             __size_of_eval_poly 0060                       ??_LCD_Init 0074                       ??_LCD_Port 0070  
                     __pmaintext 0142                          ?___ftge 0070                          ?___wmul 0070  
                __CFG_PPS1WAY$ON 0000          __end_of_ADCC_Initialize 165C       __end_of_PWM6_LoadDutyValue 1610  
                        _ADCRead 0004        __size_of_LCD_Write_String 001A                 ?_PWM6_Initialize 0070  
                      ?___awtoft 0078                        ?___ftpack 0070                          _ADSTPTH 0113  
                        _ADSTPTL 0112         __CFG_SCANE$not_available 0000              __CFG_RSTOSC$HFINT32 0000  
               main@displayTemp2 00B6          __end_of_InitCustomChars 082B                          _LCD_Cmd 15E6  
                        _OSCCON1 088D                          _OSCCON3 088F                          _OSCTUNE 0892  
                        _PWM6DCH 038D                          _PWM6DCL 038C                          _PWM6CON 038E  
                        _PPSLOCK 0E8F                        ?_tempCalc 005D                       _readAnalog 0012  
                        ___aldiv 09C7                          ___cgram 0120                  __size_of___ftge 003B  
                        ___awdiv 08B2                          ___ftadd 0F0A                          ___awmod 086D  
                        ___ftdiv 0B56                  __size_of___wmul 001B                          ___ftmul 0CAC  
                        ___ftsub 1677                          ___fttol 0A49                          ___lwdiv 16E1  
                     ??___awtoft 007B                       ??___ftpack 0075                __end_of_eval_poly 0963  
               ??_LCD_Set_Cursor 0075                          __ptext1 0E2B                          __ptext2 0BFF  
                        __ptext3 1786                          __ptext4 0903                          __ptext5 0CAC  
                        __ptext6 174B                          __ptext7 1695                          __ptext8 1677  
                        __ptext9 0F0A                   main@resetDelay 00B9            _OSCILLATOR_Initialize 1590  
                      _T2CONbits 028E                     __size_of_log 00AD                 ___awmod@dividend 0072  
                 ADCRead@channel 0073                 ___aldiv@dividend 0074         ??_PIN_MANAGER_Initialize 0070  
                        _samples 2300                        _LCD_Clear 1588       __size_of_SYSTEM_Initialize 0042  
                        clrloop0 15A5             end_of_initialization 07FD                          init_ram 15B0  
                        initloop 15B1                       ??_tempCalc 007E                 ___aldiv@quotient 0022  
                 main@startDelay 00A4                LCD_Write_Int@sign 0024                       main@F13657 0130  
                   __pstringtext 1000                 ?_ADCC_Initialize 0070            __CFG_WDTCPS$WDTCPS_31 0000  
               ?_InitCustomChars 0070                       main@C_or_F 00BC                       ?_LCD_Clear 0070  
               __CFG_FEXTOSC$OFF 0000                       main@bCount 00B1                LCD_Write_String@a 0075  
              LCD_Write_String@i 0078                 ??_LCD_Write_Char 0071                       main@choice 00BB  
                    ___ftdiv@exp 003E                __size_of_LCD_Init 0087                __size_of_LCD_Port 0018  
                    ___ftmul@exp 002A                      ?_readAnalog 0026                   __end_of___ftge 1786  
                 __end_of___wmul 1677                 _LCD_Write_String 1628           ?_OSCILLATOR_Initialize 0070  
            start_initialization 07BD                       eval_poly@d 0050                       eval_poly@n 0052  
                     eval_poly@x 004D  __size_of_PIN_MANAGER_Initialize 0036                      __end_of_log 0CAC  
                     frexp@value 0070         LCD_Write_Int@fieldLength 0022            __end_of_LCD_Write_Int 0E2B  
               __CFG_LPBOREN$OFF 0000                         ??___ftge 0076                tempCalc@steinhart 0066  
                       ??___wmul 0074                      __pdataBANK1 00DD                      __pdataBANK2 0120  
                LCD_Write_Char@a 0074                  LCD_Write_Char@y 0073                         ?_ADCRead 0070  
                       ?_LCD_Cmd 0070                __size_of___awtoft 0020                __size_of___ftpack 0064  
                    __pbssBIGRAM 2300                         LCD_Cmd@a 0073                        ___latbits 0002  
                  __pcstackBANK0 0020                    __pcstackBANK1 00A0               _PWM6_LoadDutyValue 15FA  
       __size_of_TMR2_Initialize 000E                      ??_LCD_Clear 0074              __size_of_readAnalog 0130  
            ?_PWM6_LoadDutyValue 0070                 ___lwdiv@dividend 0072           _PIN_MANAGER_Initialize 1715  
                       ?___aldiv 0070                __size_of_tempCalc 00DF                         ?___awdiv 0070  
                       ?___ftadd 0040                         ?___awmod 0070                         ?___ftdiv 0030  
                       ?___ftmul 0020                         ?___ftsub 004D                         ?___fttol 0070  
                       ?___lwdiv 0070                  main@displayTemp 00B3             ??_PWM6_LoadDutyValue 0072  
                      _eval_poly 0903         __size_of_PWM6_Initialize 000B                 ___lwdiv@quotient 0075  
                 __size_of_frexp 003B                         _T2CLKCON 0290                  ___aldiv@divisor 0070  
                ___aldiv@counter 0020                         _LCD_Init 0ACF                   ___wmul@product 0074  
                       _LCD_Port 1610                        clear_ram0 15A4                         _PIE0bits 0716  
                       _PIR4bits 0710                 __size_of_ADCRead 000E                       _ADCON0bits 0093  
              ___wmul@multiplier 0070                       ?_eval_poly 004D                 __size_of_LCD_Cmd 0014  
       __end_of_LCD_Write_String 1642                ??_TMR2_Initialize 0070                  readAnalog@value 007B  
                      frexp@eptr 0073                     ??_readAnalog 0028                     _tempCalc$988 0063  
        ??_OSCILLATOR_Initialize 0070                   LCD_Write_Int@i 0031                   LCD_Write_Int@j 002F  
               __size_of___aldiv 0082                 __size_of___awdiv 0051                 __size_of___ftadd 00F6  
               __size_of___awmod 0045                 __size_of___ftdiv 00A9                 __size_of___ftmul 00B4  
               __size_of___ftsub 001E                 __size_of___fttol 0086                 __size_of___lwdiv 0034  
                       ___awtoft 1695                         ___ftpack 0963         __size_of_ADCC_Initialize 001A  
                       _channels 00DD                         _main$989 00A0                  ___lwdiv@divisor 0070  
                ___lwdiv@counter 0077                         __ptext10 0B56                         __ptext11 0963  
                       __ptext20 1599                         __ptext12 0012                         __ptext21 1715  
                       __ptext13 165C                         __ptext30 086D                         __ptext22 1590  
                       __ptext14 09C7                         __ptext31 08B2                         __ptext23 0ACF  
                       __ptext15 0004                         __ptext32 16B5                         __ptext24 1588  
                       __ptext16 16E1                         __ptext33 17C1                         __ptext25 0805  
                       __ptext17 0A49                         __ptext34 15E6                         __ptext26 1642  
                       __ptext18 082B                         __ptext35 1610                         __ptext27 15FA  
                       __ptext19 15C8                         __ptext28 1628                         __ptext29 0D60  
             __end_of_readAnalog 0142          __size_of_LCD_Set_Cursor 003F                        tempCalc@R 0060  
       __size_of_InitCustomChars 0026              LCD_Write_Int@F13687 00D8                ??_PWM6_Initialize 0070  
                  __size_of_main 067B             __CFG_WDTCWS$WDTCWS_7 0000                         _tempCalc 0E2B  
                       main@loop 00A3      PIN_MANAGER_Initialize@state 0070                         log@coeff 1000  
                    ??_eval_poly 007E                      _sampleIndex 006E               LCD_Write_Char@temp 0072  
        ?_PIN_MANAGER_Initialize 0070                __CFG_CLKOUTEN$OFF 0000                      _PPSLOCKbits 0E8F  
        __size_of_LCD_Write_Char 002C               LCD_Set_Cursor@temp 007A               LCD_Write_Int@value 0020  
                   ___aldiv@sign 0021      PWM6_LoadDutyValue@dutyCycle 0070           __size_of_LCD_Write_Int 00CB  
 __end_of_PIN_MANAGER_Initialize 174B                ??_ADCC_Initialize 0070                ??_InitCustomChars 0075  
