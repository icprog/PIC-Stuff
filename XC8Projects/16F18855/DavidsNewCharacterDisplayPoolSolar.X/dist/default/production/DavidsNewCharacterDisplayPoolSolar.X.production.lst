

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Tue Feb 20 02:55:22 2018

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	stringtext,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	psect	text32,local,class=CODE,merge=1,delta=2
    51                           	psect	text33,local,class=CODE,merge=1,delta=2
    52                           	psect	text34,local,class=CODE,merge=1,delta=2
    53                           	psect	text35,local,class=CODE,merge=1,delta=2
    54                           	dabs	1,0x620,48
    55                           	dabs	1,0x5A0,80
    56                           	dabs	1,0x520,80
    57                           	dabs	1,0x4D0,32
    58                           	dabs	1,0x2300,0,_samples
    59                           	dabs	1,0x7E,2
    60  0000                     	;# 
    61  0001                     	;# 
    62  0002                     	;# 
    63  0003                     	;# 
    64  0004                     	;# 
    65  0005                     	;# 
    66  0006                     	;# 
    67  0007                     	;# 
    68  0008                     	;# 
    69  0009                     	;# 
    70  000A                     	;# 
    71  000B                     	;# 
    72  000C                     	;# 
    73  000D                     	;# 
    74  000E                     	;# 
    75  0010                     	;# 
    76  0011                     	;# 
    77  0012                     	;# 
    78  0013                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  001C                     	;# 
    83  001C                     	;# 
    84  001D                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  008C                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  008E                     	;# 
    93  008F                     	;# 
    94  0090                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0093                     	;# 
    98  0094                     	;# 
    99  0095                     	;# 
   100  0096                     	;# 
   101  0097                     	;# 
   102  0098                     	;# 
   103  0099                     	;# 
   104  009A                     	;# 
   105  009B                     	;# 
   106  009C                     	;# 
   107  009D                     	;# 
   108  009E                     	;# 
   109  010C                     	;# 
   110  010D                     	;# 
   111  010E                     	;# 
   112  010E                     	;# 
   113  010F                     	;# 
   114  0110                     	;# 
   115  0110                     	;# 
   116  0111                     	;# 
   117  0112                     	;# 
   118  0112                     	;# 
   119  0113                     	;# 
   120  0114                     	;# 
   121  0114                     	;# 
   122  0115                     	;# 
   123  0116                     	;# 
   124  0116                     	;# 
   125  0117                     	;# 
   126  0119                     	;# 
   127  0119                     	;# 
   128  0119                     	;# 
   129  011A                     	;# 
   130  011A                     	;# 
   131  011A                     	;# 
   132  011B                     	;# 
   133  011B                     	;# 
   134  011B                     	;# 
   135  011B                     	;# 
   136  011B                     	;# 
   137  011C                     	;# 
   138  011C                     	;# 
   139  011C                     	;# 
   140  011D                     	;# 
   141  011D                     	;# 
   142  011D                     	;# 
   143  011E                     	;# 
   144  011E                     	;# 
   145  011E                     	;# 
   146  011F                     	;# 
   147  011F                     	;# 
   148  011F                     	;# 
   149  011F                     	;# 
   150  011F                     	;# 
   151  018C                     	;# 
   152  018D                     	;# 
   153  018E                     	;# 
   154  018F                     	;# 
   155  0190                     	;# 
   156  0191                     	;# 
   157  0192                     	;# 
   158  0196                     	;# 
   159  0197                     	;# 
   160  0198                     	;# 
   161  0199                     	;# 
   162  019A                     	;# 
   163  019B                     	;# 
   164  019C                     	;# 
   165  020C                     	;# 
   166  020D                     	;# 
   167  020E                     	;# 
   168  020F                     	;# 
   169  020F                     	;# 
   170  0210                     	;# 
   171  0210                     	;# 
   172  0211                     	;# 
   173  0211                     	;# 
   174  0212                     	;# 
   175  0213                     	;# 
   176  0214                     	;# 
   177  0215                     	;# 
   178  0215                     	;# 
   179  0216                     	;# 
   180  0216                     	;# 
   181  0217                     	;# 
   182  0217                     	;# 
   183  0218                     	;# 
   184  0219                     	;# 
   185  021A                     	;# 
   186  021B                     	;# 
   187  021B                     	;# 
   188  021C                     	;# 
   189  021C                     	;# 
   190  021D                     	;# 
   191  021D                     	;# 
   192  021E                     	;# 
   193  021F                     	;# 
   194  028C                     	;# 
   195  028C                     	;# 
   196  028D                     	;# 
   197  028D                     	;# 
   198  028E                     	;# 
   199  028F                     	;# 
   200  0290                     	;# 
   201  0290                     	;# 
   202  0291                     	;# 
   203  0292                     	;# 
   204  0292                     	;# 
   205  0293                     	;# 
   206  0293                     	;# 
   207  0294                     	;# 
   208  0295                     	;# 
   209  0296                     	;# 
   210  0296                     	;# 
   211  0297                     	;# 
   212  0298                     	;# 
   213  0298                     	;# 
   214  0299                     	;# 
   215  0299                     	;# 
   216  029A                     	;# 
   217  029B                     	;# 
   218  029C                     	;# 
   219  029C                     	;# 
   220  029D                     	;# 
   221  030C                     	;# 
   222  030C                     	;# 
   223  030D                     	;# 
   224  030E                     	;# 
   225  030F                     	;# 
   226  0310                     	;# 
   227  0310                     	;# 
   228  0311                     	;# 
   229  0312                     	;# 
   230  0313                     	;# 
   231  0314                     	;# 
   232  0314                     	;# 
   233  0315                     	;# 
   234  0316                     	;# 
   235  0317                     	;# 
   236  0318                     	;# 
   237  0318                     	;# 
   238  0319                     	;# 
   239  031A                     	;# 
   240  031B                     	;# 
   241  031C                     	;# 
   242  031C                     	;# 
   243  031D                     	;# 
   244  031E                     	;# 
   245  031F                     	;# 
   246  038C                     	;# 
   247  038D                     	;# 
   248  038E                     	;# 
   249  0390                     	;# 
   250  0391                     	;# 
   251  0392                     	;# 
   252  040C                     	;# 
   253  040D                     	;# 
   254  040E                     	;# 
   255  040F                     	;# 
   256  0410                     	;# 
   257  0411                     	;# 
   258  0416                     	;# 
   259  0416                     	;# 
   260  0417                     	;# 
   261  0418                     	;# 
   262  0418                     	;# 
   263  0419                     	;# 
   264  041A                     	;# 
   265  041A                     	;# 
   266  041B                     	;# 
   267  041C                     	;# 
   268  041C                     	;# 
   269  041D                     	;# 
   270  041E                     	;# 
   271  041F                     	;# 
   272  048C                     	;# 
   273  048C                     	;# 
   274  048D                     	;# 
   275  048E                     	;# 
   276  048F                     	;# 
   277  048F                     	;# 
   278  0490                     	;# 
   279  0491                     	;# 
   280  0492                     	;# 
   281  0492                     	;# 
   282  0493                     	;# 
   283  0494                     	;# 
   284  0495                     	;# 
   285  0495                     	;# 
   286  0496                     	;# 
   287  0497                     	;# 
   288  0498                     	;# 
   289  0499                     	;# 
   290  049A                     	;# 
   291  049B                     	;# 
   292  049C                     	;# 
   293  049D                     	;# 
   294  050C                     	;# 
   295  050C                     	;# 
   296  050D                     	;# 
   297  050E                     	;# 
   298  050F                     	;# 
   299  050F                     	;# 
   300  0510                     	;# 
   301  0511                     	;# 
   302  0512                     	;# 
   303  0512                     	;# 
   304  0513                     	;# 
   305  0514                     	;# 
   306  0515                     	;# 
   307  0515                     	;# 
   308  0516                     	;# 
   309  0517                     	;# 
   310  0518                     	;# 
   311  0519                     	;# 
   312  051A                     	;# 
   313  051B                     	;# 
   314  051C                     	;# 
   315  051D                     	;# 
   316  058C                     	;# 
   317  058C                     	;# 
   318  058D                     	;# 
   319  058E                     	;# 
   320  058F                     	;# 
   321  058F                     	;# 
   322  0590                     	;# 
   323  0591                     	;# 
   324  0592                     	;# 
   325  0593                     	;# 
   326  060C                     	;# 
   327  060D                     	;# 
   328  060E                     	;# 
   329  060F                     	;# 
   330  0610                     	;# 
   331  0611                     	;# 
   332  0612                     	;# 
   333  0613                     	;# 
   334  0614                     	;# 
   335  0616                     	;# 
   336  0617                     	;# 
   337  0618                     	;# 
   338  0619                     	;# 
   339  061A                     	;# 
   340  061B                     	;# 
   341  061C                     	;# 
   342  061D                     	;# 
   343  061E                     	;# 
   344  068C                     	;# 
   345  068D                     	;# 
   346  068E                     	;# 
   347  068F                     	;# 
   348  0690                     	;# 
   349  0691                     	;# 
   350  0692                     	;# 
   351  0693                     	;# 
   352  0694                     	;# 
   353  070C                     	;# 
   354  070D                     	;# 
   355  070E                     	;# 
   356  070F                     	;# 
   357  0710                     	;# 
   358  0711                     	;# 
   359  0712                     	;# 
   360  0713                     	;# 
   361  0714                     	;# 
   362  0716                     	;# 
   363  0717                     	;# 
   364  0718                     	;# 
   365  0719                     	;# 
   366  071A                     	;# 
   367  071B                     	;# 
   368  071C                     	;# 
   369  071D                     	;# 
   370  071E                     	;# 
   371  0796                     	;# 
   372  0797                     	;# 
   373  0798                     	;# 
   374  0799                     	;# 
   375  079A                     	;# 
   376  079B                     	;# 
   377  080C                     	;# 
   378  080D                     	;# 
   379  080E                     	;# 
   380  080F                     	;# 
   381  0810                     	;# 
   382  0811                     	;# 
   383  0812                     	;# 
   384  0813                     	;# 
   385  0814                     	;# 
   386  081A                     	;# 
   387  081B                     	;# 
   388  081C                     	;# 
   389  081D                     	;# 
   390  081E                     	;# 
   391  081F                     	;# 
   392  088C                     	;# 
   393  088D                     	;# 
   394  088E                     	;# 
   395  088F                     	;# 
   396  0890                     	;# 
   397  0891                     	;# 
   398  0892                     	;# 
   399  0893                     	;# 
   400  0895                     	;# 
   401  0896                     	;# 
   402  0897                     	;# 
   403  0898                     	;# 
   404  0899                     	;# 
   405  089A                     	;# 
   406  089B                     	;# 
   407  090C                     	;# 
   408  090E                     	;# 
   409  090F                     	;# 
   410  091F                     	;# 
   411  091F                     	;# 
   412  098F                     	;# 
   413  098F                     	;# 
   414  0990                     	;# 
   415  0991                     	;# 
   416  0992                     	;# 
   417  0993                     	;# 
   418  0994                     	;# 
   419  0995                     	;# 
   420  0996                     	;# 
   421  0997                     	;# 
   422  0E0F                     	;# 
   423  0E10                     	;# 
   424  0E11                     	;# 
   425  0E12                     	;# 
   426  0E13                     	;# 
   427  0E14                     	;# 
   428  0E15                     	;# 
   429  0E16                     	;# 
   430  0E17                     	;# 
   431  0E18                     	;# 
   432  0E19                     	;# 
   433  0E1A                     	;# 
   434  0E1B                     	;# 
   435  0E1C                     	;# 
   436  0E1D                     	;# 
   437  0E1E                     	;# 
   438  0E1F                     	;# 
   439  0E20                     	;# 
   440  0E21                     	;# 
   441  0E22                     	;# 
   442  0E23                     	;# 
   443  0E24                     	;# 
   444  0E25                     	;# 
   445  0E26                     	;# 
   446  0E27                     	;# 
   447  0E28                     	;# 
   448  0E29                     	;# 
   449  0E2A                     	;# 
   450  0E2B                     	;# 
   451  0E2C                     	;# 
   452  0E2D                     	;# 
   453  0E2E                     	;# 
   454  0E2F                     	;# 
   455  0E30                     	;# 
   456  0E31                     	;# 
   457  0E32                     	;# 
   458  0E33                     	;# 
   459  0E34                     	;# 
   460  0E35                     	;# 
   461  0E36                     	;# 
   462  0E37                     	;# 
   463  0E8F                     	;# 
   464  0E90                     	;# 
   465  0E91                     	;# 
   466  0E92                     	;# 
   467  0E93                     	;# 
   468  0E94                     	;# 
   469  0E95                     	;# 
   470  0E96                     	;# 
   471  0E97                     	;# 
   472  0E9C                     	;# 
   473  0E9D                     	;# 
   474  0E9E                     	;# 
   475  0EA1                     	;# 
   476  0EA2                     	;# 
   477  0EA3                     	;# 
   478  0EA4                     	;# 
   479  0EA5                     	;# 
   480  0EA9                     	;# 
   481  0EAA                     	;# 
   482  0EAB                     	;# 
   483  0EAC                     	;# 
   484  0EB1                     	;# 
   485  0EB2                     	;# 
   486  0EB3                     	;# 
   487  0EB8                     	;# 
   488  0EB9                     	;# 
   489  0EBA                     	;# 
   490  0EBB                     	;# 
   491  0EBC                     	;# 
   492  0EBD                     	;# 
   493  0EBE                     	;# 
   494  0EC3                     	;# 
   495  0EC5                     	;# 
   496  0EC6                     	;# 
   497  0EC7                     	;# 
   498  0EC8                     	;# 
   499  0EC9                     	;# 
   500  0ECA                     	;# 
   501  0ECB                     	;# 
   502  0ECC                     	;# 
   503  0F10                     	;# 
   504  0F11                     	;# 
   505  0F12                     	;# 
   506  0F13                     	;# 
   507  0F14                     	;# 
   508  0F15                     	;# 
   509  0F16                     	;# 
   510  0F17                     	;# 
   511  0F18                     	;# 
   512  0F19                     	;# 
   513  0F1A                     	;# 
   514  0F1B                     	;# 
   515  0F1C                     	;# 
   516  0F1D                     	;# 
   517  0F1E                     	;# 
   518  0F1F                     	;# 
   519  0F20                     	;# 
   520  0F21                     	;# 
   521  0F22                     	;# 
   522  0F23                     	;# 
   523  0F24                     	;# 
   524  0F25                     	;# 
   525  0F26                     	;# 
   526  0F27                     	;# 
   527  0F38                     	;# 
   528  0F39                     	;# 
   529  0F3A                     	;# 
   530  0F3B                     	;# 
   531  0F3C                     	;# 
   532  0F3D                     	;# 
   533  0F3E                     	;# 
   534  0F3F                     	;# 
   535  0F40                     	;# 
   536  0F41                     	;# 
   537  0F43                     	;# 
   538  0F44                     	;# 
   539  0F45                     	;# 
   540  0F46                     	;# 
   541  0F47                     	;# 
   542  0F48                     	;# 
   543  0F49                     	;# 
   544  0F4A                     	;# 
   545  0F4B                     	;# 
   546  0F4C                     	;# 
   547  0F4E                     	;# 
   548  0F4F                     	;# 
   549  0F50                     	;# 
   550  0F51                     	;# 
   551  0F52                     	;# 
   552  0F53                     	;# 
   553  0F54                     	;# 
   554  0F55                     	;# 
   555  0F56                     	;# 
   556  0F57                     	;# 
   557  0F65                     	;# 
   558  0F68                     	;# 
   559  0F69                     	;# 
   560  0F6A                     	;# 
   561  0F6B                     	;# 
   562  0FE4                     	;# 
   563  0FE5                     	;# 
   564  0FE6                     	;# 
   565  0FE7                     	;# 
   566  0FE8                     	;# 
   567  0FE9                     	;# 
   568  0FEA                     	;# 
   569  0FEB                     	;# 
   570  0FED                     	;# 
   571  0FEE                     	;# 
   572  0FEF                     	;# 
   573  0000                     	;# 
   574  0001                     	;# 
   575  0002                     	;# 
   576  0003                     	;# 
   577  0004                     	;# 
   578  0005                     	;# 
   579  0006                     	;# 
   580  0007                     	;# 
   581  0008                     	;# 
   582  0009                     	;# 
   583  000A                     	;# 
   584  000B                     	;# 
   585  000C                     	;# 
   586  000D                     	;# 
   587  000E                     	;# 
   588  0010                     	;# 
   589  0011                     	;# 
   590  0012                     	;# 
   591  0013                     	;# 
   592  0016                     	;# 
   593  0017                     	;# 
   594  0018                     	;# 
   595  001C                     	;# 
   596  001C                     	;# 
   597  001D                     	;# 
   598  001D                     	;# 
   599  001E                     	;# 
   600  001F                     	;# 
   601  008C                     	;# 
   602  008C                     	;# 
   603  008D                     	;# 
   604  008E                     	;# 
   605  008E                     	;# 
   606  008F                     	;# 
   607  0090                     	;# 
   608  0090                     	;# 
   609  0091                     	;# 
   610  0093                     	;# 
   611  0094                     	;# 
   612  0095                     	;# 
   613  0096                     	;# 
   614  0097                     	;# 
   615  0098                     	;# 
   616  0099                     	;# 
   617  009A                     	;# 
   618  009B                     	;# 
   619  009C                     	;# 
   620  009D                     	;# 
   621  009E                     	;# 
   622  010C                     	;# 
   623  010D                     	;# 
   624  010E                     	;# 
   625  010E                     	;# 
   626  010F                     	;# 
   627  0110                     	;# 
   628  0110                     	;# 
   629  0111                     	;# 
   630  0112                     	;# 
   631  0112                     	;# 
   632  0113                     	;# 
   633  0114                     	;# 
   634  0114                     	;# 
   635  0115                     	;# 
   636  0116                     	;# 
   637  0116                     	;# 
   638  0117                     	;# 
   639  0119                     	;# 
   640  0119                     	;# 
   641  0119                     	;# 
   642  011A                     	;# 
   643  011A                     	;# 
   644  011A                     	;# 
   645  011B                     	;# 
   646  011B                     	;# 
   647  011B                     	;# 
   648  011B                     	;# 
   649  011B                     	;# 
   650  011C                     	;# 
   651  011C                     	;# 
   652  011C                     	;# 
   653  011D                     	;# 
   654  011D                     	;# 
   655  011D                     	;# 
   656  011E                     	;# 
   657  011E                     	;# 
   658  011E                     	;# 
   659  011F                     	;# 
   660  011F                     	;# 
   661  011F                     	;# 
   662  011F                     	;# 
   663  011F                     	;# 
   664  018C                     	;# 
   665  018D                     	;# 
   666  018E                     	;# 
   667  018F                     	;# 
   668  0190                     	;# 
   669  0191                     	;# 
   670  0192                     	;# 
   671  0196                     	;# 
   672  0197                     	;# 
   673  0198                     	;# 
   674  0199                     	;# 
   675  019A                     	;# 
   676  019B                     	;# 
   677  019C                     	;# 
   678  020C                     	;# 
   679  020D                     	;# 
   680  020E                     	;# 
   681  020F                     	;# 
   682  020F                     	;# 
   683  0210                     	;# 
   684  0210                     	;# 
   685  0211                     	;# 
   686  0211                     	;# 
   687  0212                     	;# 
   688  0213                     	;# 
   689  0214                     	;# 
   690  0215                     	;# 
   691  0215                     	;# 
   692  0216                     	;# 
   693  0216                     	;# 
   694  0217                     	;# 
   695  0217                     	;# 
   696  0218                     	;# 
   697  0219                     	;# 
   698  021A                     	;# 
   699  021B                     	;# 
   700  021B                     	;# 
   701  021C                     	;# 
   702  021C                     	;# 
   703  021D                     	;# 
   704  021D                     	;# 
   705  021E                     	;# 
   706  021F                     	;# 
   707  028C                     	;# 
   708  028C                     	;# 
   709  028D                     	;# 
   710  028D                     	;# 
   711  028E                     	;# 
   712  028F                     	;# 
   713  0290                     	;# 
   714  0290                     	;# 
   715  0291                     	;# 
   716  0292                     	;# 
   717  0292                     	;# 
   718  0293                     	;# 
   719  0293                     	;# 
   720  0294                     	;# 
   721  0295                     	;# 
   722  0296                     	;# 
   723  0296                     	;# 
   724  0297                     	;# 
   725  0298                     	;# 
   726  0298                     	;# 
   727  0299                     	;# 
   728  0299                     	;# 
   729  029A                     	;# 
   730  029B                     	;# 
   731  029C                     	;# 
   732  029C                     	;# 
   733  029D                     	;# 
   734  030C                     	;# 
   735  030C                     	;# 
   736  030D                     	;# 
   737  030E                     	;# 
   738  030F                     	;# 
   739  0310                     	;# 
   740  0310                     	;# 
   741  0311                     	;# 
   742  0312                     	;# 
   743  0313                     	;# 
   744  0314                     	;# 
   745  0314                     	;# 
   746  0315                     	;# 
   747  0316                     	;# 
   748  0317                     	;# 
   749  0318                     	;# 
   750  0318                     	;# 
   751  0319                     	;# 
   752  031A                     	;# 
   753  031B                     	;# 
   754  031C                     	;# 
   755  031C                     	;# 
   756  031D                     	;# 
   757  031E                     	;# 
   758  031F                     	;# 
   759  038C                     	;# 
   760  038D                     	;# 
   761  038E                     	;# 
   762  0390                     	;# 
   763  0391                     	;# 
   764  0392                     	;# 
   765  040C                     	;# 
   766  040D                     	;# 
   767  040E                     	;# 
   768  040F                     	;# 
   769  0410                     	;# 
   770  0411                     	;# 
   771  0416                     	;# 
   772  0416                     	;# 
   773  0417                     	;# 
   774  0418                     	;# 
   775  0418                     	;# 
   776  0419                     	;# 
   777  041A                     	;# 
   778  041A                     	;# 
   779  041B                     	;# 
   780  041C                     	;# 
   781  041C                     	;# 
   782  041D                     	;# 
   783  041E                     	;# 
   784  041F                     	;# 
   785  048C                     	;# 
   786  048C                     	;# 
   787  048D                     	;# 
   788  048E                     	;# 
   789  048F                     	;# 
   790  048F                     	;# 
   791  0490                     	;# 
   792  0491                     	;# 
   793  0492                     	;# 
   794  0492                     	;# 
   795  0493                     	;# 
   796  0494                     	;# 
   797  0495                     	;# 
   798  0495                     	;# 
   799  0496                     	;# 
   800  0497                     	;# 
   801  0498                     	;# 
   802  0499                     	;# 
   803  049A                     	;# 
   804  049B                     	;# 
   805  049C                     	;# 
   806  049D                     	;# 
   807  050C                     	;# 
   808  050C                     	;# 
   809  050D                     	;# 
   810  050E                     	;# 
   811  050F                     	;# 
   812  050F                     	;# 
   813  0510                     	;# 
   814  0511                     	;# 
   815  0512                     	;# 
   816  0512                     	;# 
   817  0513                     	;# 
   818  0514                     	;# 
   819  0515                     	;# 
   820  0515                     	;# 
   821  0516                     	;# 
   822  0517                     	;# 
   823  0518                     	;# 
   824  0519                     	;# 
   825  051A                     	;# 
   826  051B                     	;# 
   827  051C                     	;# 
   828  051D                     	;# 
   829  058C                     	;# 
   830  058C                     	;# 
   831  058D                     	;# 
   832  058E                     	;# 
   833  058F                     	;# 
   834  058F                     	;# 
   835  0590                     	;# 
   836  0591                     	;# 
   837  0592                     	;# 
   838  0593                     	;# 
   839  060C                     	;# 
   840  060D                     	;# 
   841  060E                     	;# 
   842  060F                     	;# 
   843  0610                     	;# 
   844  0611                     	;# 
   845  0612                     	;# 
   846  0613                     	;# 
   847  0614                     	;# 
   848  0616                     	;# 
   849  0617                     	;# 
   850  0618                     	;# 
   851  0619                     	;# 
   852  061A                     	;# 
   853  061B                     	;# 
   854  061C                     	;# 
   855  061D                     	;# 
   856  061E                     	;# 
   857  068C                     	;# 
   858  068D                     	;# 
   859  068E                     	;# 
   860  068F                     	;# 
   861  0690                     	;# 
   862  0691                     	;# 
   863  0692                     	;# 
   864  0693                     	;# 
   865  0694                     	;# 
   866  070C                     	;# 
   867  070D                     	;# 
   868  070E                     	;# 
   869  070F                     	;# 
   870  0710                     	;# 
   871  0711                     	;# 
   872  0712                     	;# 
   873  0713                     	;# 
   874  0714                     	;# 
   875  0716                     	;# 
   876  0717                     	;# 
   877  0718                     	;# 
   878  0719                     	;# 
   879  071A                     	;# 
   880  071B                     	;# 
   881  071C                     	;# 
   882  071D                     	;# 
   883  071E                     	;# 
   884  0796                     	;# 
   885  0797                     	;# 
   886  0798                     	;# 
   887  0799                     	;# 
   888  079A                     	;# 
   889  079B                     	;# 
   890  080C                     	;# 
   891  080D                     	;# 
   892  080E                     	;# 
   893  080F                     	;# 
   894  0810                     	;# 
   895  0811                     	;# 
   896  0812                     	;# 
   897  0813                     	;# 
   898  0814                     	;# 
   899  081A                     	;# 
   900  081B                     	;# 
   901  081C                     	;# 
   902  081D                     	;# 
   903  081E                     	;# 
   904  081F                     	;# 
   905  088C                     	;# 
   906  088D                     	;# 
   907  088E                     	;# 
   908  088F                     	;# 
   909  0890                     	;# 
   910  0891                     	;# 
   911  0892                     	;# 
   912  0893                     	;# 
   913  0895                     	;# 
   914  0896                     	;# 
   915  0897                     	;# 
   916  0898                     	;# 
   917  0899                     	;# 
   918  089A                     	;# 
   919  089B                     	;# 
   920  090C                     	;# 
   921  090E                     	;# 
   922  090F                     	;# 
   923  091F                     	;# 
   924  091F                     	;# 
   925  098F                     	;# 
   926  098F                     	;# 
   927  0990                     	;# 
   928  0991                     	;# 
   929  0992                     	;# 
   930  0993                     	;# 
   931  0994                     	;# 
   932  0995                     	;# 
   933  0996                     	;# 
   934  0997                     	;# 
   935  0E0F                     	;# 
   936  0E10                     	;# 
   937  0E11                     	;# 
   938  0E12                     	;# 
   939  0E13                     	;# 
   940  0E14                     	;# 
   941  0E15                     	;# 
   942  0E16                     	;# 
   943  0E17                     	;# 
   944  0E18                     	;# 
   945  0E19                     	;# 
   946  0E1A                     	;# 
   947  0E1B                     	;# 
   948  0E1C                     	;# 
   949  0E1D                     	;# 
   950  0E1E                     	;# 
   951  0E1F                     	;# 
   952  0E20                     	;# 
   953  0E21                     	;# 
   954  0E22                     	;# 
   955  0E23                     	;# 
   956  0E24                     	;# 
   957  0E25                     	;# 
   958  0E26                     	;# 
   959  0E27                     	;# 
   960  0E28                     	;# 
   961  0E29                     	;# 
   962  0E2A                     	;# 
   963  0E2B                     	;# 
   964  0E2C                     	;# 
   965  0E2D                     	;# 
   966  0E2E                     	;# 
   967  0E2F                     	;# 
   968  0E30                     	;# 
   969  0E31                     	;# 
   970  0E32                     	;# 
   971  0E33                     	;# 
   972  0E34                     	;# 
   973  0E35                     	;# 
   974  0E36                     	;# 
   975  0E37                     	;# 
   976  0E8F                     	;# 
   977  0E90                     	;# 
   978  0E91                     	;# 
   979  0E92                     	;# 
   980  0E93                     	;# 
   981  0E94                     	;# 
   982  0E95                     	;# 
   983  0E96                     	;# 
   984  0E97                     	;# 
   985  0E9C                     	;# 
   986  0E9D                     	;# 
   987  0E9E                     	;# 
   988  0EA1                     	;# 
   989  0EA2                     	;# 
   990  0EA3                     	;# 
   991  0EA4                     	;# 
   992  0EA5                     	;# 
   993  0EA9                     	;# 
   994  0EAA                     	;# 
   995  0EAB                     	;# 
   996  0EAC                     	;# 
   997  0EB1                     	;# 
   998  0EB2                     	;# 
   999  0EB3                     	;# 
  1000  0EB8                     	;# 
  1001  0EB9                     	;# 
  1002  0EBA                     	;# 
  1003  0EBB                     	;# 
  1004  0EBC                     	;# 
  1005  0EBD                     	;# 
  1006  0EBE                     	;# 
  1007  0EC3                     	;# 
  1008  0EC5                     	;# 
  1009  0EC6                     	;# 
  1010  0EC7                     	;# 
  1011  0EC8                     	;# 
  1012  0EC9                     	;# 
  1013  0ECA                     	;# 
  1014  0ECB                     	;# 
  1015  0ECC                     	;# 
  1016  0F10                     	;# 
  1017  0F11                     	;# 
  1018  0F12                     	;# 
  1019  0F13                     	;# 
  1020  0F14                     	;# 
  1021  0F15                     	;# 
  1022  0F16                     	;# 
  1023  0F17                     	;# 
  1024  0F18                     	;# 
  1025  0F19                     	;# 
  1026  0F1A                     	;# 
  1027  0F1B                     	;# 
  1028  0F1C                     	;# 
  1029  0F1D                     	;# 
  1030  0F1E                     	;# 
  1031  0F1F                     	;# 
  1032  0F20                     	;# 
  1033  0F21                     	;# 
  1034  0F22                     	;# 
  1035  0F23                     	;# 
  1036  0F24                     	;# 
  1037  0F25                     	;# 
  1038  0F26                     	;# 
  1039  0F27                     	;# 
  1040  0F38                     	;# 
  1041  0F39                     	;# 
  1042  0F3A                     	;# 
  1043  0F3B                     	;# 
  1044  0F3C                     	;# 
  1045  0F3D                     	;# 
  1046  0F3E                     	;# 
  1047  0F3F                     	;# 
  1048  0F40                     	;# 
  1049  0F41                     	;# 
  1050  0F43                     	;# 
  1051  0F44                     	;# 
  1052  0F45                     	;# 
  1053  0F46                     	;# 
  1054  0F47                     	;# 
  1055  0F48                     	;# 
  1056  0F49                     	;# 
  1057  0F4A                     	;# 
  1058  0F4B                     	;# 
  1059  0F4C                     	;# 
  1060  0F4E                     	;# 
  1061  0F4F                     	;# 
  1062  0F50                     	;# 
  1063  0F51                     	;# 
  1064  0F52                     	;# 
  1065  0F53                     	;# 
  1066  0F54                     	;# 
  1067  0F55                     	;# 
  1068  0F56                     	;# 
  1069  0F57                     	;# 
  1070  0F65                     	;# 
  1071  0F68                     	;# 
  1072  0F69                     	;# 
  1073  0F6A                     	;# 
  1074  0F6B                     	;# 
  1075  0FE4                     	;# 
  1076  0FE5                     	;# 
  1077  0FE6                     	;# 
  1078  0FE7                     	;# 
  1079  0FE8                     	;# 
  1080  0FE9                     	;# 
  1081  0FEA                     	;# 
  1082  0FEB                     	;# 
  1083  0FED                     	;# 
  1084  0FEE                     	;# 
  1085  0FEF                     	;# 
  1086  0000                     	;# 
  1087  0001                     	;# 
  1088  0002                     	;# 
  1089  0003                     	;# 
  1090  0004                     	;# 
  1091  0005                     	;# 
  1092  0006                     	;# 
  1093  0007                     	;# 
  1094  0008                     	;# 
  1095  0009                     	;# 
  1096  000A                     	;# 
  1097  000B                     	;# 
  1098  000C                     	;# 
  1099  000D                     	;# 
  1100  000E                     	;# 
  1101  0010                     	;# 
  1102  0011                     	;# 
  1103  0012                     	;# 
  1104  0013                     	;# 
  1105  0016                     	;# 
  1106  0017                     	;# 
  1107  0018                     	;# 
  1108  001C                     	;# 
  1109  001C                     	;# 
  1110  001D                     	;# 
  1111  001D                     	;# 
  1112  001E                     	;# 
  1113  001F                     	;# 
  1114  008C                     	;# 
  1115  008C                     	;# 
  1116  008D                     	;# 
  1117  008E                     	;# 
  1118  008E                     	;# 
  1119  008F                     	;# 
  1120  0090                     	;# 
  1121  0090                     	;# 
  1122  0091                     	;# 
  1123  0093                     	;# 
  1124  0094                     	;# 
  1125  0095                     	;# 
  1126  0096                     	;# 
  1127  0097                     	;# 
  1128  0098                     	;# 
  1129  0099                     	;# 
  1130  009A                     	;# 
  1131  009B                     	;# 
  1132  009C                     	;# 
  1133  009D                     	;# 
  1134  009E                     	;# 
  1135  010C                     	;# 
  1136  010D                     	;# 
  1137  010E                     	;# 
  1138  010E                     	;# 
  1139  010F                     	;# 
  1140  0110                     	;# 
  1141  0110                     	;# 
  1142  0111                     	;# 
  1143  0112                     	;# 
  1144  0112                     	;# 
  1145  0113                     	;# 
  1146  0114                     	;# 
  1147  0114                     	;# 
  1148  0115                     	;# 
  1149  0116                     	;# 
  1150  0116                     	;# 
  1151  0117                     	;# 
  1152  0119                     	;# 
  1153  0119                     	;# 
  1154  0119                     	;# 
  1155  011A                     	;# 
  1156  011A                     	;# 
  1157  011A                     	;# 
  1158  011B                     	;# 
  1159  011B                     	;# 
  1160  011B                     	;# 
  1161  011B                     	;# 
  1162  011B                     	;# 
  1163  011C                     	;# 
  1164  011C                     	;# 
  1165  011C                     	;# 
  1166  011D                     	;# 
  1167  011D                     	;# 
  1168  011D                     	;# 
  1169  011E                     	;# 
  1170  011E                     	;# 
  1171  011E                     	;# 
  1172  011F                     	;# 
  1173  011F                     	;# 
  1174  011F                     	;# 
  1175  011F                     	;# 
  1176  011F                     	;# 
  1177  018C                     	;# 
  1178  018D                     	;# 
  1179  018E                     	;# 
  1180  018F                     	;# 
  1181  0190                     	;# 
  1182  0191                     	;# 
  1183  0192                     	;# 
  1184  0196                     	;# 
  1185  0197                     	;# 
  1186  0198                     	;# 
  1187  0199                     	;# 
  1188  019A                     	;# 
  1189  019B                     	;# 
  1190  019C                     	;# 
  1191  020C                     	;# 
  1192  020D                     	;# 
  1193  020E                     	;# 
  1194  020F                     	;# 
  1195  020F                     	;# 
  1196  0210                     	;# 
  1197  0210                     	;# 
  1198  0211                     	;# 
  1199  0211                     	;# 
  1200  0212                     	;# 
  1201  0213                     	;# 
  1202  0214                     	;# 
  1203  0215                     	;# 
  1204  0215                     	;# 
  1205  0216                     	;# 
  1206  0216                     	;# 
  1207  0217                     	;# 
  1208  0217                     	;# 
  1209  0218                     	;# 
  1210  0219                     	;# 
  1211  021A                     	;# 
  1212  021B                     	;# 
  1213  021B                     	;# 
  1214  021C                     	;# 
  1215  021C                     	;# 
  1216  021D                     	;# 
  1217  021D                     	;# 
  1218  021E                     	;# 
  1219  021F                     	;# 
  1220  028C                     	;# 
  1221  028C                     	;# 
  1222  028D                     	;# 
  1223  028D                     	;# 
  1224  028E                     	;# 
  1225  028F                     	;# 
  1226  0290                     	;# 
  1227  0290                     	;# 
  1228  0291                     	;# 
  1229  0292                     	;# 
  1230  0292                     	;# 
  1231  0293                     	;# 
  1232  0293                     	;# 
  1233  0294                     	;# 
  1234  0295                     	;# 
  1235  0296                     	;# 
  1236  0296                     	;# 
  1237  0297                     	;# 
  1238  0298                     	;# 
  1239  0298                     	;# 
  1240  0299                     	;# 
  1241  0299                     	;# 
  1242  029A                     	;# 
  1243  029B                     	;# 
  1244  029C                     	;# 
  1245  029C                     	;# 
  1246  029D                     	;# 
  1247  030C                     	;# 
  1248  030C                     	;# 
  1249  030D                     	;# 
  1250  030E                     	;# 
  1251  030F                     	;# 
  1252  0310                     	;# 
  1253  0310                     	;# 
  1254  0311                     	;# 
  1255  0312                     	;# 
  1256  0313                     	;# 
  1257  0314                     	;# 
  1258  0314                     	;# 
  1259  0315                     	;# 
  1260  0316                     	;# 
  1261  0317                     	;# 
  1262  0318                     	;# 
  1263  0318                     	;# 
  1264  0319                     	;# 
  1265  031A                     	;# 
  1266  031B                     	;# 
  1267  031C                     	;# 
  1268  031C                     	;# 
  1269  031D                     	;# 
  1270  031E                     	;# 
  1271  031F                     	;# 
  1272  038C                     	;# 
  1273  038D                     	;# 
  1274  038E                     	;# 
  1275  0390                     	;# 
  1276  0391                     	;# 
  1277  0392                     	;# 
  1278  040C                     	;# 
  1279  040D                     	;# 
  1280  040E                     	;# 
  1281  040F                     	;# 
  1282  0410                     	;# 
  1283  0411                     	;# 
  1284  0416                     	;# 
  1285  0416                     	;# 
  1286  0417                     	;# 
  1287  0418                     	;# 
  1288  0418                     	;# 
  1289  0419                     	;# 
  1290  041A                     	;# 
  1291  041A                     	;# 
  1292  041B                     	;# 
  1293  041C                     	;# 
  1294  041C                     	;# 
  1295  041D                     	;# 
  1296  041E                     	;# 
  1297  041F                     	;# 
  1298  048C                     	;# 
  1299  048C                     	;# 
  1300  048D                     	;# 
  1301  048E                     	;# 
  1302  048F                     	;# 
  1303  048F                     	;# 
  1304  0490                     	;# 
  1305  0491                     	;# 
  1306  0492                     	;# 
  1307  0492                     	;# 
  1308  0493                     	;# 
  1309  0494                     	;# 
  1310  0495                     	;# 
  1311  0495                     	;# 
  1312  0496                     	;# 
  1313  0497                     	;# 
  1314  0498                     	;# 
  1315  0499                     	;# 
  1316  049A                     	;# 
  1317  049B                     	;# 
  1318  049C                     	;# 
  1319  049D                     	;# 
  1320  050C                     	;# 
  1321  050C                     	;# 
  1322  050D                     	;# 
  1323  050E                     	;# 
  1324  050F                     	;# 
  1325  050F                     	;# 
  1326  0510                     	;# 
  1327  0511                     	;# 
  1328  0512                     	;# 
  1329  0512                     	;# 
  1330  0513                     	;# 
  1331  0514                     	;# 
  1332  0515                     	;# 
  1333  0515                     	;# 
  1334  0516                     	;# 
  1335  0517                     	;# 
  1336  0518                     	;# 
  1337  0519                     	;# 
  1338  051A                     	;# 
  1339  051B                     	;# 
  1340  051C                     	;# 
  1341  051D                     	;# 
  1342  058C                     	;# 
  1343  058C                     	;# 
  1344  058D                     	;# 
  1345  058E                     	;# 
  1346  058F                     	;# 
  1347  058F                     	;# 
  1348  0590                     	;# 
  1349  0591                     	;# 
  1350  0592                     	;# 
  1351  0593                     	;# 
  1352  060C                     	;# 
  1353  060D                     	;# 
  1354  060E                     	;# 
  1355  060F                     	;# 
  1356  0610                     	;# 
  1357  0611                     	;# 
  1358  0612                     	;# 
  1359  0613                     	;# 
  1360  0614                     	;# 
  1361  0616                     	;# 
  1362  0617                     	;# 
  1363  0618                     	;# 
  1364  0619                     	;# 
  1365  061A                     	;# 
  1366  061B                     	;# 
  1367  061C                     	;# 
  1368  061D                     	;# 
  1369  061E                     	;# 
  1370  068C                     	;# 
  1371  068D                     	;# 
  1372  068E                     	;# 
  1373  068F                     	;# 
  1374  0690                     	;# 
  1375  0691                     	;# 
  1376  0692                     	;# 
  1377  0693                     	;# 
  1378  0694                     	;# 
  1379  070C                     	;# 
  1380  070D                     	;# 
  1381  070E                     	;# 
  1382  070F                     	;# 
  1383  0710                     	;# 
  1384  0711                     	;# 
  1385  0712                     	;# 
  1386  0713                     	;# 
  1387  0714                     	;# 
  1388  0716                     	;# 
  1389  0717                     	;# 
  1390  0718                     	;# 
  1391  0719                     	;# 
  1392  071A                     	;# 
  1393  071B                     	;# 
  1394  071C                     	;# 
  1395  071D                     	;# 
  1396  071E                     	;# 
  1397  0796                     	;# 
  1398  0797                     	;# 
  1399  0798                     	;# 
  1400  0799                     	;# 
  1401  079A                     	;# 
  1402  079B                     	;# 
  1403  080C                     	;# 
  1404  080D                     	;# 
  1405  080E                     	;# 
  1406  080F                     	;# 
  1407  0810                     	;# 
  1408  0811                     	;# 
  1409  0812                     	;# 
  1410  0813                     	;# 
  1411  0814                     	;# 
  1412  081A                     	;# 
  1413  081B                     	;# 
  1414  081C                     	;# 
  1415  081D                     	;# 
  1416  081E                     	;# 
  1417  081F                     	;# 
  1418  088C                     	;# 
  1419  088D                     	;# 
  1420  088E                     	;# 
  1421  088F                     	;# 
  1422  0890                     	;# 
  1423  0891                     	;# 
  1424  0892                     	;# 
  1425  0893                     	;# 
  1426  0895                     	;# 
  1427  0896                     	;# 
  1428  0897                     	;# 
  1429  0898                     	;# 
  1430  0899                     	;# 
  1431  089A                     	;# 
  1432  089B                     	;# 
  1433  090C                     	;# 
  1434  090E                     	;# 
  1435  090F                     	;# 
  1436  091F                     	;# 
  1437  091F                     	;# 
  1438  098F                     	;# 
  1439  098F                     	;# 
  1440  0990                     	;# 
  1441  0991                     	;# 
  1442  0992                     	;# 
  1443  0993                     	;# 
  1444  0994                     	;# 
  1445  0995                     	;# 
  1446  0996                     	;# 
  1447  0997                     	;# 
  1448  0E0F                     	;# 
  1449  0E10                     	;# 
  1450  0E11                     	;# 
  1451  0E12                     	;# 
  1452  0E13                     	;# 
  1453  0E14                     	;# 
  1454  0E15                     	;# 
  1455  0E16                     	;# 
  1456  0E17                     	;# 
  1457  0E18                     	;# 
  1458  0E19                     	;# 
  1459  0E1A                     	;# 
  1460  0E1B                     	;# 
  1461  0E1C                     	;# 
  1462  0E1D                     	;# 
  1463  0E1E                     	;# 
  1464  0E1F                     	;# 
  1465  0E20                     	;# 
  1466  0E21                     	;# 
  1467  0E22                     	;# 
  1468  0E23                     	;# 
  1469  0E24                     	;# 
  1470  0E25                     	;# 
  1471  0E26                     	;# 
  1472  0E27                     	;# 
  1473  0E28                     	;# 
  1474  0E29                     	;# 
  1475  0E2A                     	;# 
  1476  0E2B                     	;# 
  1477  0E2C                     	;# 
  1478  0E2D                     	;# 
  1479  0E2E                     	;# 
  1480  0E2F                     	;# 
  1481  0E30                     	;# 
  1482  0E31                     	;# 
  1483  0E32                     	;# 
  1484  0E33                     	;# 
  1485  0E34                     	;# 
  1486  0E35                     	;# 
  1487  0E36                     	;# 
  1488  0E37                     	;# 
  1489  0E8F                     	;# 
  1490  0E90                     	;# 
  1491  0E91                     	;# 
  1492  0E92                     	;# 
  1493  0E93                     	;# 
  1494  0E94                     	;# 
  1495  0E95                     	;# 
  1496  0E96                     	;# 
  1497  0E97                     	;# 
  1498  0E9C                     	;# 
  1499  0E9D                     	;# 
  1500  0E9E                     	;# 
  1501  0EA1                     	;# 
  1502  0EA2                     	;# 
  1503  0EA3                     	;# 
  1504  0EA4                     	;# 
  1505  0EA5                     	;# 
  1506  0EA9                     	;# 
  1507  0EAA                     	;# 
  1508  0EAB                     	;# 
  1509  0EAC                     	;# 
  1510  0EB1                     	;# 
  1511  0EB2                     	;# 
  1512  0EB3                     	;# 
  1513  0EB8                     	;# 
  1514  0EB9                     	;# 
  1515  0EBA                     	;# 
  1516  0EBB                     	;# 
  1517  0EBC                     	;# 
  1518  0EBD                     	;# 
  1519  0EBE                     	;# 
  1520  0EC3                     	;# 
  1521  0EC5                     	;# 
  1522  0EC6                     	;# 
  1523  0EC7                     	;# 
  1524  0EC8                     	;# 
  1525  0EC9                     	;# 
  1526  0ECA                     	;# 
  1527  0ECB                     	;# 
  1528  0ECC                     	;# 
  1529  0F10                     	;# 
  1530  0F11                     	;# 
  1531  0F12                     	;# 
  1532  0F13                     	;# 
  1533  0F14                     	;# 
  1534  0F15                     	;# 
  1535  0F16                     	;# 
  1536  0F17                     	;# 
  1537  0F18                     	;# 
  1538  0F19                     	;# 
  1539  0F1A                     	;# 
  1540  0F1B                     	;# 
  1541  0F1C                     	;# 
  1542  0F1D                     	;# 
  1543  0F1E                     	;# 
  1544  0F1F                     	;# 
  1545  0F20                     	;# 
  1546  0F21                     	;# 
  1547  0F22                     	;# 
  1548  0F23                     	;# 
  1549  0F24                     	;# 
  1550  0F25                     	;# 
  1551  0F26                     	;# 
  1552  0F27                     	;# 
  1553  0F38                     	;# 
  1554  0F39                     	;# 
  1555  0F3A                     	;# 
  1556  0F3B                     	;# 
  1557  0F3C                     	;# 
  1558  0F3D                     	;# 
  1559  0F3E                     	;# 
  1560  0F3F                     	;# 
  1561  0F40                     	;# 
  1562  0F41                     	;# 
  1563  0F43                     	;# 
  1564  0F44                     	;# 
  1565  0F45                     	;# 
  1566  0F46                     	;# 
  1567  0F47                     	;# 
  1568  0F48                     	;# 
  1569  0F49                     	;# 
  1570  0F4A                     	;# 
  1571  0F4B                     	;# 
  1572  0F4C                     	;# 
  1573  0F4E                     	;# 
  1574  0F4F                     	;# 
  1575  0F50                     	;# 
  1576  0F51                     	;# 
  1577  0F52                     	;# 
  1578  0F53                     	;# 
  1579  0F54                     	;# 
  1580  0F55                     	;# 
  1581  0F56                     	;# 
  1582  0F57                     	;# 
  1583  0F65                     	;# 
  1584  0F68                     	;# 
  1585  0F69                     	;# 
  1586  0F6A                     	;# 
  1587  0F6B                     	;# 
  1588  0FE4                     	;# 
  1589  0FE5                     	;# 
  1590  0FE6                     	;# 
  1591  0FE7                     	;# 
  1592  0FE8                     	;# 
  1593  0FE9                     	;# 
  1594  0FEA                     	;# 
  1595  0FEB                     	;# 
  1596  0FED                     	;# 
  1597  0FEE                     	;# 
  1598  0FEF                     	;# 
  1599  0000                     	;# 
  1600  0001                     	;# 
  1601  0002                     	;# 
  1602  0003                     	;# 
  1603  0004                     	;# 
  1604  0005                     	;# 
  1605  0006                     	;# 
  1606  0007                     	;# 
  1607  0008                     	;# 
  1608  0009                     	;# 
  1609  000A                     	;# 
  1610  000B                     	;# 
  1611  000C                     	;# 
  1612  000D                     	;# 
  1613  000E                     	;# 
  1614  0010                     	;# 
  1615  0011                     	;# 
  1616  0012                     	;# 
  1617  0013                     	;# 
  1618  0016                     	;# 
  1619  0017                     	;# 
  1620  0018                     	;# 
  1621  001C                     	;# 
  1622  001C                     	;# 
  1623  001D                     	;# 
  1624  001D                     	;# 
  1625  001E                     	;# 
  1626  001F                     	;# 
  1627  008C                     	;# 
  1628  008C                     	;# 
  1629  008D                     	;# 
  1630  008E                     	;# 
  1631  008E                     	;# 
  1632  008F                     	;# 
  1633  0090                     	;# 
  1634  0090                     	;# 
  1635  0091                     	;# 
  1636  0093                     	;# 
  1637  0094                     	;# 
  1638  0095                     	;# 
  1639  0096                     	;# 
  1640  0097                     	;# 
  1641  0098                     	;# 
  1642  0099                     	;# 
  1643  009A                     	;# 
  1644  009B                     	;# 
  1645  009C                     	;# 
  1646  009D                     	;# 
  1647  009E                     	;# 
  1648  010C                     	;# 
  1649  010D                     	;# 
  1650  010E                     	;# 
  1651  010E                     	;# 
  1652  010F                     	;# 
  1653  0110                     	;# 
  1654  0110                     	;# 
  1655  0111                     	;# 
  1656  0112                     	;# 
  1657  0112                     	;# 
  1658  0113                     	;# 
  1659  0114                     	;# 
  1660  0114                     	;# 
  1661  0115                     	;# 
  1662  0116                     	;# 
  1663  0116                     	;# 
  1664  0117                     	;# 
  1665  0119                     	;# 
  1666  0119                     	;# 
  1667  0119                     	;# 
  1668  011A                     	;# 
  1669  011A                     	;# 
  1670  011A                     	;# 
  1671  011B                     	;# 
  1672  011B                     	;# 
  1673  011B                     	;# 
  1674  011B                     	;# 
  1675  011B                     	;# 
  1676  011C                     	;# 
  1677  011C                     	;# 
  1678  011C                     	;# 
  1679  011D                     	;# 
  1680  011D                     	;# 
  1681  011D                     	;# 
  1682  011E                     	;# 
  1683  011E                     	;# 
  1684  011E                     	;# 
  1685  011F                     	;# 
  1686  011F                     	;# 
  1687  011F                     	;# 
  1688  011F                     	;# 
  1689  011F                     	;# 
  1690  018C                     	;# 
  1691  018D                     	;# 
  1692  018E                     	;# 
  1693  018F                     	;# 
  1694  0190                     	;# 
  1695  0191                     	;# 
  1696  0192                     	;# 
  1697  0196                     	;# 
  1698  0197                     	;# 
  1699  0198                     	;# 
  1700  0199                     	;# 
  1701  019A                     	;# 
  1702  019B                     	;# 
  1703  019C                     	;# 
  1704  020C                     	;# 
  1705  020D                     	;# 
  1706  020E                     	;# 
  1707  020F                     	;# 
  1708  020F                     	;# 
  1709  0210                     	;# 
  1710  0210                     	;# 
  1711  0211                     	;# 
  1712  0211                     	;# 
  1713  0212                     	;# 
  1714  0213                     	;# 
  1715  0214                     	;# 
  1716  0215                     	;# 
  1717  0215                     	;# 
  1718  0216                     	;# 
  1719  0216                     	;# 
  1720  0217                     	;# 
  1721  0217                     	;# 
  1722  0218                     	;# 
  1723  0219                     	;# 
  1724  021A                     	;# 
  1725  021B                     	;# 
  1726  021B                     	;# 
  1727  021C                     	;# 
  1728  021C                     	;# 
  1729  021D                     	;# 
  1730  021D                     	;# 
  1731  021E                     	;# 
  1732  021F                     	;# 
  1733  028C                     	;# 
  1734  028C                     	;# 
  1735  028D                     	;# 
  1736  028D                     	;# 
  1737  028E                     	;# 
  1738  028F                     	;# 
  1739  0290                     	;# 
  1740  0290                     	;# 
  1741  0291                     	;# 
  1742  0292                     	;# 
  1743  0292                     	;# 
  1744  0293                     	;# 
  1745  0293                     	;# 
  1746  0294                     	;# 
  1747  0295                     	;# 
  1748  0296                     	;# 
  1749  0296                     	;# 
  1750  0297                     	;# 
  1751  0298                     	;# 
  1752  0298                     	;# 
  1753  0299                     	;# 
  1754  0299                     	;# 
  1755  029A                     	;# 
  1756  029B                     	;# 
  1757  029C                     	;# 
  1758  029C                     	;# 
  1759  029D                     	;# 
  1760  030C                     	;# 
  1761  030C                     	;# 
  1762  030D                     	;# 
  1763  030E                     	;# 
  1764  030F                     	;# 
  1765  0310                     	;# 
  1766  0310                     	;# 
  1767  0311                     	;# 
  1768  0312                     	;# 
  1769  0313                     	;# 
  1770  0314                     	;# 
  1771  0314                     	;# 
  1772  0315                     	;# 
  1773  0316                     	;# 
  1774  0317                     	;# 
  1775  0318                     	;# 
  1776  0318                     	;# 
  1777  0319                     	;# 
  1778  031A                     	;# 
  1779  031B                     	;# 
  1780  031C                     	;# 
  1781  031C                     	;# 
  1782  031D                     	;# 
  1783  031E                     	;# 
  1784  031F                     	;# 
  1785  038C                     	;# 
  1786  038D                     	;# 
  1787  038E                     	;# 
  1788  0390                     	;# 
  1789  0391                     	;# 
  1790  0392                     	;# 
  1791  040C                     	;# 
  1792  040D                     	;# 
  1793  040E                     	;# 
  1794  040F                     	;# 
  1795  0410                     	;# 
  1796  0411                     	;# 
  1797  0416                     	;# 
  1798  0416                     	;# 
  1799  0417                     	;# 
  1800  0418                     	;# 
  1801  0418                     	;# 
  1802  0419                     	;# 
  1803  041A                     	;# 
  1804  041A                     	;# 
  1805  041B                     	;# 
  1806  041C                     	;# 
  1807  041C                     	;# 
  1808  041D                     	;# 
  1809  041E                     	;# 
  1810  041F                     	;# 
  1811  048C                     	;# 
  1812  048C                     	;# 
  1813  048D                     	;# 
  1814  048E                     	;# 
  1815  048F                     	;# 
  1816  048F                     	;# 
  1817  0490                     	;# 
  1818  0491                     	;# 
  1819  0492                     	;# 
  1820  0492                     	;# 
  1821  0493                     	;# 
  1822  0494                     	;# 
  1823  0495                     	;# 
  1824  0495                     	;# 
  1825  0496                     	;# 
  1826  0497                     	;# 
  1827  0498                     	;# 
  1828  0499                     	;# 
  1829  049A                     	;# 
  1830  049B                     	;# 
  1831  049C                     	;# 
  1832  049D                     	;# 
  1833  050C                     	;# 
  1834  050C                     	;# 
  1835  050D                     	;# 
  1836  050E                     	;# 
  1837  050F                     	;# 
  1838  050F                     	;# 
  1839  0510                     	;# 
  1840  0511                     	;# 
  1841  0512                     	;# 
  1842  0512                     	;# 
  1843  0513                     	;# 
  1844  0514                     	;# 
  1845  0515                     	;# 
  1846  0515                     	;# 
  1847  0516                     	;# 
  1848  0517                     	;# 
  1849  0518                     	;# 
  1850  0519                     	;# 
  1851  051A                     	;# 
  1852  051B                     	;# 
  1853  051C                     	;# 
  1854  051D                     	;# 
  1855  058C                     	;# 
  1856  058C                     	;# 
  1857  058D                     	;# 
  1858  058E                     	;# 
  1859  058F                     	;# 
  1860  058F                     	;# 
  1861  0590                     	;# 
  1862  0591                     	;# 
  1863  0592                     	;# 
  1864  0593                     	;# 
  1865  060C                     	;# 
  1866  060D                     	;# 
  1867  060E                     	;# 
  1868  060F                     	;# 
  1869  0610                     	;# 
  1870  0611                     	;# 
  1871  0612                     	;# 
  1872  0613                     	;# 
  1873  0614                     	;# 
  1874  0616                     	;# 
  1875  0617                     	;# 
  1876  0618                     	;# 
  1877  0619                     	;# 
  1878  061A                     	;# 
  1879  061B                     	;# 
  1880  061C                     	;# 
  1881  061D                     	;# 
  1882  061E                     	;# 
  1883  068C                     	;# 
  1884  068D                     	;# 
  1885  068E                     	;# 
  1886  068F                     	;# 
  1887  0690                     	;# 
  1888  0691                     	;# 
  1889  0692                     	;# 
  1890  0693                     	;# 
  1891  0694                     	;# 
  1892  070C                     	;# 
  1893  070D                     	;# 
  1894  070E                     	;# 
  1895  070F                     	;# 
  1896  0710                     	;# 
  1897  0711                     	;# 
  1898  0712                     	;# 
  1899  0713                     	;# 
  1900  0714                     	;# 
  1901  0716                     	;# 
  1902  0717                     	;# 
  1903  0718                     	;# 
  1904  0719                     	;# 
  1905  071A                     	;# 
  1906  071B                     	;# 
  1907  071C                     	;# 
  1908  071D                     	;# 
  1909  071E                     	;# 
  1910  0796                     	;# 
  1911  0797                     	;# 
  1912  0798                     	;# 
  1913  0799                     	;# 
  1914  079A                     	;# 
  1915  079B                     	;# 
  1916  080C                     	;# 
  1917  080D                     	;# 
  1918  080E                     	;# 
  1919  080F                     	;# 
  1920  0810                     	;# 
  1921  0811                     	;# 
  1922  0812                     	;# 
  1923  0813                     	;# 
  1924  0814                     	;# 
  1925  081A                     	;# 
  1926  081B                     	;# 
  1927  081C                     	;# 
  1928  081D                     	;# 
  1929  081E                     	;# 
  1930  081F                     	;# 
  1931  088C                     	;# 
  1932  088D                     	;# 
  1933  088E                     	;# 
  1934  088F                     	;# 
  1935  0890                     	;# 
  1936  0891                     	;# 
  1937  0892                     	;# 
  1938  0893                     	;# 
  1939  0895                     	;# 
  1940  0896                     	;# 
  1941  0897                     	;# 
  1942  0898                     	;# 
  1943  0899                     	;# 
  1944  089A                     	;# 
  1945  089B                     	;# 
  1946  090C                     	;# 
  1947  090E                     	;# 
  1948  090F                     	;# 
  1949  091F                     	;# 
  1950  091F                     	;# 
  1951  098F                     	;# 
  1952  098F                     	;# 
  1953  0990                     	;# 
  1954  0991                     	;# 
  1955  0992                     	;# 
  1956  0993                     	;# 
  1957  0994                     	;# 
  1958  0995                     	;# 
  1959  0996                     	;# 
  1960  0997                     	;# 
  1961  0E0F                     	;# 
  1962  0E10                     	;# 
  1963  0E11                     	;# 
  1964  0E12                     	;# 
  1965  0E13                     	;# 
  1966  0E14                     	;# 
  1967  0E15                     	;# 
  1968  0E16                     	;# 
  1969  0E17                     	;# 
  1970  0E18                     	;# 
  1971  0E19                     	;# 
  1972  0E1A                     	;# 
  1973  0E1B                     	;# 
  1974  0E1C                     	;# 
  1975  0E1D                     	;# 
  1976  0E1E                     	;# 
  1977  0E1F                     	;# 
  1978  0E20                     	;# 
  1979  0E21                     	;# 
  1980  0E22                     	;# 
  1981  0E23                     	;# 
  1982  0E24                     	;# 
  1983  0E25                     	;# 
  1984  0E26                     	;# 
  1985  0E27                     	;# 
  1986  0E28                     	;# 
  1987  0E29                     	;# 
  1988  0E2A                     	;# 
  1989  0E2B                     	;# 
  1990  0E2C                     	;# 
  1991  0E2D                     	;# 
  1992  0E2E                     	;# 
  1993  0E2F                     	;# 
  1994  0E30                     	;# 
  1995  0E31                     	;# 
  1996  0E32                     	;# 
  1997  0E33                     	;# 
  1998  0E34                     	;# 
  1999  0E35                     	;# 
  2000  0E36                     	;# 
  2001  0E37                     	;# 
  2002  0E8F                     	;# 
  2003  0E90                     	;# 
  2004  0E91                     	;# 
  2005  0E92                     	;# 
  2006  0E93                     	;# 
  2007  0E94                     	;# 
  2008  0E95                     	;# 
  2009  0E96                     	;# 
  2010  0E97                     	;# 
  2011  0E9C                     	;# 
  2012  0E9D                     	;# 
  2013  0E9E                     	;# 
  2014  0EA1                     	;# 
  2015  0EA2                     	;# 
  2016  0EA3                     	;# 
  2017  0EA4                     	;# 
  2018  0EA5                     	;# 
  2019  0EA9                     	;# 
  2020  0EAA                     	;# 
  2021  0EAB                     	;# 
  2022  0EAC                     	;# 
  2023  0EB1                     	;# 
  2024  0EB2                     	;# 
  2025  0EB3                     	;# 
  2026  0EB8                     	;# 
  2027  0EB9                     	;# 
  2028  0EBA                     	;# 
  2029  0EBB                     	;# 
  2030  0EBC                     	;# 
  2031  0EBD                     	;# 
  2032  0EBE                     	;# 
  2033  0EC3                     	;# 
  2034  0EC5                     	;# 
  2035  0EC6                     	;# 
  2036  0EC7                     	;# 
  2037  0EC8                     	;# 
  2038  0EC9                     	;# 
  2039  0ECA                     	;# 
  2040  0ECB                     	;# 
  2041  0ECC                     	;# 
  2042  0F10                     	;# 
  2043  0F11                     	;# 
  2044  0F12                     	;# 
  2045  0F13                     	;# 
  2046  0F14                     	;# 
  2047  0F15                     	;# 
  2048  0F16                     	;# 
  2049  0F17                     	;# 
  2050  0F18                     	;# 
  2051  0F19                     	;# 
  2052  0F1A                     	;# 
  2053  0F1B                     	;# 
  2054  0F1C                     	;# 
  2055  0F1D                     	;# 
  2056  0F1E                     	;# 
  2057  0F1F                     	;# 
  2058  0F20                     	;# 
  2059  0F21                     	;# 
  2060  0F22                     	;# 
  2061  0F23                     	;# 
  2062  0F24                     	;# 
  2063  0F25                     	;# 
  2064  0F26                     	;# 
  2065  0F27                     	;# 
  2066  0F38                     	;# 
  2067  0F39                     	;# 
  2068  0F3A                     	;# 
  2069  0F3B                     	;# 
  2070  0F3C                     	;# 
  2071  0F3D                     	;# 
  2072  0F3E                     	;# 
  2073  0F3F                     	;# 
  2074  0F40                     	;# 
  2075  0F41                     	;# 
  2076  0F43                     	;# 
  2077  0F44                     	;# 
  2078  0F45                     	;# 
  2079  0F46                     	;# 
  2080  0F47                     	;# 
  2081  0F48                     	;# 
  2082  0F49                     	;# 
  2083  0F4A                     	;# 
  2084  0F4B                     	;# 
  2085  0F4C                     	;# 
  2086  0F4E                     	;# 
  2087  0F4F                     	;# 
  2088  0F50                     	;# 
  2089  0F51                     	;# 
  2090  0F52                     	;# 
  2091  0F53                     	;# 
  2092  0F54                     	;# 
  2093  0F55                     	;# 
  2094  0F56                     	;# 
  2095  0F57                     	;# 
  2096  0F65                     	;# 
  2097  0F68                     	;# 
  2098  0F69                     	;# 
  2099  0F6A                     	;# 
  2100  0F6B                     	;# 
  2101  0FE4                     	;# 
  2102  0FE5                     	;# 
  2103  0FE6                     	;# 
  2104  0FE7                     	;# 
  2105  0FE8                     	;# 
  2106  0FE9                     	;# 
  2107  0FEA                     	;# 
  2108  0FEB                     	;# 
  2109  0FED                     	;# 
  2110  0FEE                     	;# 
  2111  0FEF                     	;# 
  2112  0000                     	;# 
  2113  0001                     	;# 
  2114  0002                     	;# 
  2115  0003                     	;# 
  2116  0004                     	;# 
  2117  0005                     	;# 
  2118  0006                     	;# 
  2119  0007                     	;# 
  2120  0008                     	;# 
  2121  0009                     	;# 
  2122  000A                     	;# 
  2123  000B                     	;# 
  2124  000C                     	;# 
  2125  000D                     	;# 
  2126  000E                     	;# 
  2127  0010                     	;# 
  2128  0011                     	;# 
  2129  0012                     	;# 
  2130  0013                     	;# 
  2131  0016                     	;# 
  2132  0017                     	;# 
  2133  0018                     	;# 
  2134  001C                     	;# 
  2135  001C                     	;# 
  2136  001D                     	;# 
  2137  001D                     	;# 
  2138  001E                     	;# 
  2139  001F                     	;# 
  2140  008C                     	;# 
  2141  008C                     	;# 
  2142  008D                     	;# 
  2143  008E                     	;# 
  2144  008E                     	;# 
  2145  008F                     	;# 
  2146  0090                     	;# 
  2147  0090                     	;# 
  2148  0091                     	;# 
  2149  0093                     	;# 
  2150  0094                     	;# 
  2151  0095                     	;# 
  2152  0096                     	;# 
  2153  0097                     	;# 
  2154  0098                     	;# 
  2155  0099                     	;# 
  2156  009A                     	;# 
  2157  009B                     	;# 
  2158  009C                     	;# 
  2159  009D                     	;# 
  2160  009E                     	;# 
  2161  010C                     	;# 
  2162  010D                     	;# 
  2163  010E                     	;# 
  2164  010E                     	;# 
  2165  010F                     	;# 
  2166  0110                     	;# 
  2167  0110                     	;# 
  2168  0111                     	;# 
  2169  0112                     	;# 
  2170  0112                     	;# 
  2171  0113                     	;# 
  2172  0114                     	;# 
  2173  0114                     	;# 
  2174  0115                     	;# 
  2175  0116                     	;# 
  2176  0116                     	;# 
  2177  0117                     	;# 
  2178  0119                     	;# 
  2179  0119                     	;# 
  2180  0119                     	;# 
  2181  011A                     	;# 
  2182  011A                     	;# 
  2183  011A                     	;# 
  2184  011B                     	;# 
  2185  011B                     	;# 
  2186  011B                     	;# 
  2187  011B                     	;# 
  2188  011B                     	;# 
  2189  011C                     	;# 
  2190  011C                     	;# 
  2191  011C                     	;# 
  2192  011D                     	;# 
  2193  011D                     	;# 
  2194  011D                     	;# 
  2195  011E                     	;# 
  2196  011E                     	;# 
  2197  011E                     	;# 
  2198  011F                     	;# 
  2199  011F                     	;# 
  2200  011F                     	;# 
  2201  011F                     	;# 
  2202  011F                     	;# 
  2203  018C                     	;# 
  2204  018D                     	;# 
  2205  018E                     	;# 
  2206  018F                     	;# 
  2207  0190                     	;# 
  2208  0191                     	;# 
  2209  0192                     	;# 
  2210  0196                     	;# 
  2211  0197                     	;# 
  2212  0198                     	;# 
  2213  0199                     	;# 
  2214  019A                     	;# 
  2215  019B                     	;# 
  2216  019C                     	;# 
  2217  020C                     	;# 
  2218  020D                     	;# 
  2219  020E                     	;# 
  2220  020F                     	;# 
  2221  020F                     	;# 
  2222  0210                     	;# 
  2223  0210                     	;# 
  2224  0211                     	;# 
  2225  0211                     	;# 
  2226  0212                     	;# 
  2227  0213                     	;# 
  2228  0214                     	;# 
  2229  0215                     	;# 
  2230  0215                     	;# 
  2231  0216                     	;# 
  2232  0216                     	;# 
  2233  0217                     	;# 
  2234  0217                     	;# 
  2235  0218                     	;# 
  2236  0219                     	;# 
  2237  021A                     	;# 
  2238  021B                     	;# 
  2239  021B                     	;# 
  2240  021C                     	;# 
  2241  021C                     	;# 
  2242  021D                     	;# 
  2243  021D                     	;# 
  2244  021E                     	;# 
  2245  021F                     	;# 
  2246  028C                     	;# 
  2247  028C                     	;# 
  2248  028D                     	;# 
  2249  028D                     	;# 
  2250  028E                     	;# 
  2251  028F                     	;# 
  2252  0290                     	;# 
  2253  0290                     	;# 
  2254  0291                     	;# 
  2255  0292                     	;# 
  2256  0292                     	;# 
  2257  0293                     	;# 
  2258  0293                     	;# 
  2259  0294                     	;# 
  2260  0295                     	;# 
  2261  0296                     	;# 
  2262  0296                     	;# 
  2263  0297                     	;# 
  2264  0298                     	;# 
  2265  0298                     	;# 
  2266  0299                     	;# 
  2267  0299                     	;# 
  2268  029A                     	;# 
  2269  029B                     	;# 
  2270  029C                     	;# 
  2271  029C                     	;# 
  2272  029D                     	;# 
  2273  030C                     	;# 
  2274  030C                     	;# 
  2275  030D                     	;# 
  2276  030E                     	;# 
  2277  030F                     	;# 
  2278  0310                     	;# 
  2279  0310                     	;# 
  2280  0311                     	;# 
  2281  0312                     	;# 
  2282  0313                     	;# 
  2283  0314                     	;# 
  2284  0314                     	;# 
  2285  0315                     	;# 
  2286  0316                     	;# 
  2287  0317                     	;# 
  2288  0318                     	;# 
  2289  0318                     	;# 
  2290  0319                     	;# 
  2291  031A                     	;# 
  2292  031B                     	;# 
  2293  031C                     	;# 
  2294  031C                     	;# 
  2295  031D                     	;# 
  2296  031E                     	;# 
  2297  031F                     	;# 
  2298  038C                     	;# 
  2299  038D                     	;# 
  2300  038E                     	;# 
  2301  0390                     	;# 
  2302  0391                     	;# 
  2303  0392                     	;# 
  2304  040C                     	;# 
  2305  040D                     	;# 
  2306  040E                     	;# 
  2307  040F                     	;# 
  2308  0410                     	;# 
  2309  0411                     	;# 
  2310  0416                     	;# 
  2311  0416                     	;# 
  2312  0417                     	;# 
  2313  0418                     	;# 
  2314  0418                     	;# 
  2315  0419                     	;# 
  2316  041A                     	;# 
  2317  041A                     	;# 
  2318  041B                     	;# 
  2319  041C                     	;# 
  2320  041C                     	;# 
  2321  041D                     	;# 
  2322  041E                     	;# 
  2323  041F                     	;# 
  2324  048C                     	;# 
  2325  048C                     	;# 
  2326  048D                     	;# 
  2327  048E                     	;# 
  2328  048F                     	;# 
  2329  048F                     	;# 
  2330  0490                     	;# 
  2331  0491                     	;# 
  2332  0492                     	;# 
  2333  0492                     	;# 
  2334  0493                     	;# 
  2335  0494                     	;# 
  2336  0495                     	;# 
  2337  0495                     	;# 
  2338  0496                     	;# 
  2339  0497                     	;# 
  2340  0498                     	;# 
  2341  0499                     	;# 
  2342  049A                     	;# 
  2343  049B                     	;# 
  2344  049C                     	;# 
  2345  049D                     	;# 
  2346  050C                     	;# 
  2347  050C                     	;# 
  2348  050D                     	;# 
  2349  050E                     	;# 
  2350  050F                     	;# 
  2351  050F                     	;# 
  2352  0510                     	;# 
  2353  0511                     	;# 
  2354  0512                     	;# 
  2355  0512                     	;# 
  2356  0513                     	;# 
  2357  0514                     	;# 
  2358  0515                     	;# 
  2359  0515                     	;# 
  2360  0516                     	;# 
  2361  0517                     	;# 
  2362  0518                     	;# 
  2363  0519                     	;# 
  2364  051A                     	;# 
  2365  051B                     	;# 
  2366  051C                     	;# 
  2367  051D                     	;# 
  2368  058C                     	;# 
  2369  058C                     	;# 
  2370  058D                     	;# 
  2371  058E                     	;# 
  2372  058F                     	;# 
  2373  058F                     	;# 
  2374  0590                     	;# 
  2375  0591                     	;# 
  2376  0592                     	;# 
  2377  0593                     	;# 
  2378  060C                     	;# 
  2379  060D                     	;# 
  2380  060E                     	;# 
  2381  060F                     	;# 
  2382  0610                     	;# 
  2383  0611                     	;# 
  2384  0612                     	;# 
  2385  0613                     	;# 
  2386  0614                     	;# 
  2387  0616                     	;# 
  2388  0617                     	;# 
  2389  0618                     	;# 
  2390  0619                     	;# 
  2391  061A                     	;# 
  2392  061B                     	;# 
  2393  061C                     	;# 
  2394  061D                     	;# 
  2395  061E                     	;# 
  2396  068C                     	;# 
  2397  068D                     	;# 
  2398  068E                     	;# 
  2399  068F                     	;# 
  2400  0690                     	;# 
  2401  0691                     	;# 
  2402  0692                     	;# 
  2403  0693                     	;# 
  2404  0694                     	;# 
  2405  070C                     	;# 
  2406  070D                     	;# 
  2407  070E                     	;# 
  2408  070F                     	;# 
  2409  0710                     	;# 
  2410  0711                     	;# 
  2411  0712                     	;# 
  2412  0713                     	;# 
  2413  0714                     	;# 
  2414  0716                     	;# 
  2415  0717                     	;# 
  2416  0718                     	;# 
  2417  0719                     	;# 
  2418  071A                     	;# 
  2419  071B                     	;# 
  2420  071C                     	;# 
  2421  071D                     	;# 
  2422  071E                     	;# 
  2423  0796                     	;# 
  2424  0797                     	;# 
  2425  0798                     	;# 
  2426  0799                     	;# 
  2427  079A                     	;# 
  2428  079B                     	;# 
  2429  080C                     	;# 
  2430  080D                     	;# 
  2431  080E                     	;# 
  2432  080F                     	;# 
  2433  0810                     	;# 
  2434  0811                     	;# 
  2435  0812                     	;# 
  2436  0813                     	;# 
  2437  0814                     	;# 
  2438  081A                     	;# 
  2439  081B                     	;# 
  2440  081C                     	;# 
  2441  081D                     	;# 
  2442  081E                     	;# 
  2443  081F                     	;# 
  2444  088C                     	;# 
  2445  088D                     	;# 
  2446  088E                     	;# 
  2447  088F                     	;# 
  2448  0890                     	;# 
  2449  0891                     	;# 
  2450  0892                     	;# 
  2451  0893                     	;# 
  2452  0895                     	;# 
  2453  0896                     	;# 
  2454  0897                     	;# 
  2455  0898                     	;# 
  2456  0899                     	;# 
  2457  089A                     	;# 
  2458  089B                     	;# 
  2459  090C                     	;# 
  2460  090E                     	;# 
  2461  090F                     	;# 
  2462  091F                     	;# 
  2463  091F                     	;# 
  2464  098F                     	;# 
  2465  098F                     	;# 
  2466  0990                     	;# 
  2467  0991                     	;# 
  2468  0992                     	;# 
  2469  0993                     	;# 
  2470  0994                     	;# 
  2471  0995                     	;# 
  2472  0996                     	;# 
  2473  0997                     	;# 
  2474  0E0F                     	;# 
  2475  0E10                     	;# 
  2476  0E11                     	;# 
  2477  0E12                     	;# 
  2478  0E13                     	;# 
  2479  0E14                     	;# 
  2480  0E15                     	;# 
  2481  0E16                     	;# 
  2482  0E17                     	;# 
  2483  0E18                     	;# 
  2484  0E19                     	;# 
  2485  0E1A                     	;# 
  2486  0E1B                     	;# 
  2487  0E1C                     	;# 
  2488  0E1D                     	;# 
  2489  0E1E                     	;# 
  2490  0E1F                     	;# 
  2491  0E20                     	;# 
  2492  0E21                     	;# 
  2493  0E22                     	;# 
  2494  0E23                     	;# 
  2495  0E24                     	;# 
  2496  0E25                     	;# 
  2497  0E26                     	;# 
  2498  0E27                     	;# 
  2499  0E28                     	;# 
  2500  0E29                     	;# 
  2501  0E2A                     	;# 
  2502  0E2B                     	;# 
  2503  0E2C                     	;# 
  2504  0E2D                     	;# 
  2505  0E2E                     	;# 
  2506  0E2F                     	;# 
  2507  0E30                     	;# 
  2508  0E31                     	;# 
  2509  0E32                     	;# 
  2510  0E33                     	;# 
  2511  0E34                     	;# 
  2512  0E35                     	;# 
  2513  0E36                     	;# 
  2514  0E37                     	;# 
  2515  0E8F                     	;# 
  2516  0E90                     	;# 
  2517  0E91                     	;# 
  2518  0E92                     	;# 
  2519  0E93                     	;# 
  2520  0E94                     	;# 
  2521  0E95                     	;# 
  2522  0E96                     	;# 
  2523  0E97                     	;# 
  2524  0E9C                     	;# 
  2525  0E9D                     	;# 
  2526  0E9E                     	;# 
  2527  0EA1                     	;# 
  2528  0EA2                     	;# 
  2529  0EA3                     	;# 
  2530  0EA4                     	;# 
  2531  0EA5                     	;# 
  2532  0EA9                     	;# 
  2533  0EAA                     	;# 
  2534  0EAB                     	;# 
  2535  0EAC                     	;# 
  2536  0EB1                     	;# 
  2537  0EB2                     	;# 
  2538  0EB3                     	;# 
  2539  0EB8                     	;# 
  2540  0EB9                     	;# 
  2541  0EBA                     	;# 
  2542  0EBB                     	;# 
  2543  0EBC                     	;# 
  2544  0EBD                     	;# 
  2545  0EBE                     	;# 
  2546  0EC3                     	;# 
  2547  0EC5                     	;# 
  2548  0EC6                     	;# 
  2549  0EC7                     	;# 
  2550  0EC8                     	;# 
  2551  0EC9                     	;# 
  2552  0ECA                     	;# 
  2553  0ECB                     	;# 
  2554  0ECC                     	;# 
  2555  0F10                     	;# 
  2556  0F11                     	;# 
  2557  0F12                     	;# 
  2558  0F13                     	;# 
  2559  0F14                     	;# 
  2560  0F15                     	;# 
  2561  0F16                     	;# 
  2562  0F17                     	;# 
  2563  0F18                     	;# 
  2564  0F19                     	;# 
  2565  0F1A                     	;# 
  2566  0F1B                     	;# 
  2567  0F1C                     	;# 
  2568  0F1D                     	;# 
  2569  0F1E                     	;# 
  2570  0F1F                     	;# 
  2571  0F20                     	;# 
  2572  0F21                     	;# 
  2573  0F22                     	;# 
  2574  0F23                     	;# 
  2575  0F24                     	;# 
  2576  0F25                     	;# 
  2577  0F26                     	;# 
  2578  0F27                     	;# 
  2579  0F38                     	;# 
  2580  0F39                     	;# 
  2581  0F3A                     	;# 
  2582  0F3B                     	;# 
  2583  0F3C                     	;# 
  2584  0F3D                     	;# 
  2585  0F3E                     	;# 
  2586  0F3F                     	;# 
  2587  0F40                     	;# 
  2588  0F41                     	;# 
  2589  0F43                     	;# 
  2590  0F44                     	;# 
  2591  0F45                     	;# 
  2592  0F46                     	;# 
  2593  0F47                     	;# 
  2594  0F48                     	;# 
  2595  0F49                     	;# 
  2596  0F4A                     	;# 
  2597  0F4B                     	;# 
  2598  0F4C                     	;# 
  2599  0F4E                     	;# 
  2600  0F4F                     	;# 
  2601  0F50                     	;# 
  2602  0F51                     	;# 
  2603  0F52                     	;# 
  2604  0F53                     	;# 
  2605  0F54                     	;# 
  2606  0F55                     	;# 
  2607  0F56                     	;# 
  2608  0F57                     	;# 
  2609  0F65                     	;# 
  2610  0F68                     	;# 
  2611  0F69                     	;# 
  2612  0F6A                     	;# 
  2613  0F6B                     	;# 
  2614  0FE4                     	;# 
  2615  0FE5                     	;# 
  2616  0FE6                     	;# 
  2617  0FE7                     	;# 
  2618  0FE8                     	;# 
  2619  0FE9                     	;# 
  2620  0FEA                     	;# 
  2621  0FEB                     	;# 
  2622  0FED                     	;# 
  2623  0FEE                     	;# 
  2624  0FEF                     	;# 
  2625  0000                     	;# 
  2626  0001                     	;# 
  2627  0002                     	;# 
  2628  0003                     	;# 
  2629  0004                     	;# 
  2630  0005                     	;# 
  2631  0006                     	;# 
  2632  0007                     	;# 
  2633  0008                     	;# 
  2634  0009                     	;# 
  2635  000A                     	;# 
  2636  000B                     	;# 
  2637  000C                     	;# 
  2638  000D                     	;# 
  2639  000E                     	;# 
  2640  0010                     	;# 
  2641  0011                     	;# 
  2642  0012                     	;# 
  2643  0013                     	;# 
  2644  0016                     	;# 
  2645  0017                     	;# 
  2646  0018                     	;# 
  2647  001C                     	;# 
  2648  001C                     	;# 
  2649  001D                     	;# 
  2650  001D                     	;# 
  2651  001E                     	;# 
  2652  001F                     	;# 
  2653  008C                     	;# 
  2654  008C                     	;# 
  2655  008D                     	;# 
  2656  008E                     	;# 
  2657  008E                     	;# 
  2658  008F                     	;# 
  2659  0090                     	;# 
  2660  0090                     	;# 
  2661  0091                     	;# 
  2662  0093                     	;# 
  2663  0094                     	;# 
  2664  0095                     	;# 
  2665  0096                     	;# 
  2666  0097                     	;# 
  2667  0098                     	;# 
  2668  0099                     	;# 
  2669  009A                     	;# 
  2670  009B                     	;# 
  2671  009C                     	;# 
  2672  009D                     	;# 
  2673  009E                     	;# 
  2674  010C                     	;# 
  2675  010D                     	;# 
  2676  010E                     	;# 
  2677  010E                     	;# 
  2678  010F                     	;# 
  2679  0110                     	;# 
  2680  0110                     	;# 
  2681  0111                     	;# 
  2682  0112                     	;# 
  2683  0112                     	;# 
  2684  0113                     	;# 
  2685  0114                     	;# 
  2686  0114                     	;# 
  2687  0115                     	;# 
  2688  0116                     	;# 
  2689  0116                     	;# 
  2690  0117                     	;# 
  2691  0119                     	;# 
  2692  0119                     	;# 
  2693  0119                     	;# 
  2694  011A                     	;# 
  2695  011A                     	;# 
  2696  011A                     	;# 
  2697  011B                     	;# 
  2698  011B                     	;# 
  2699  011B                     	;# 
  2700  011B                     	;# 
  2701  011B                     	;# 
  2702  011C                     	;# 
  2703  011C                     	;# 
  2704  011C                     	;# 
  2705  011D                     	;# 
  2706  011D                     	;# 
  2707  011D                     	;# 
  2708  011E                     	;# 
  2709  011E                     	;# 
  2710  011E                     	;# 
  2711  011F                     	;# 
  2712  011F                     	;# 
  2713  011F                     	;# 
  2714  011F                     	;# 
  2715  011F                     	;# 
  2716  018C                     	;# 
  2717  018D                     	;# 
  2718  018E                     	;# 
  2719  018F                     	;# 
  2720  0190                     	;# 
  2721  0191                     	;# 
  2722  0192                     	;# 
  2723  0196                     	;# 
  2724  0197                     	;# 
  2725  0198                     	;# 
  2726  0199                     	;# 
  2727  019A                     	;# 
  2728  019B                     	;# 
  2729  019C                     	;# 
  2730  020C                     	;# 
  2731  020D                     	;# 
  2732  020E                     	;# 
  2733  020F                     	;# 
  2734  020F                     	;# 
  2735  0210                     	;# 
  2736  0210                     	;# 
  2737  0211                     	;# 
  2738  0211                     	;# 
  2739  0212                     	;# 
  2740  0213                     	;# 
  2741  0214                     	;# 
  2742  0215                     	;# 
  2743  0215                     	;# 
  2744  0216                     	;# 
  2745  0216                     	;# 
  2746  0217                     	;# 
  2747  0217                     	;# 
  2748  0218                     	;# 
  2749  0219                     	;# 
  2750  021A                     	;# 
  2751  021B                     	;# 
  2752  021B                     	;# 
  2753  021C                     	;# 
  2754  021C                     	;# 
  2755  021D                     	;# 
  2756  021D                     	;# 
  2757  021E                     	;# 
  2758  021F                     	;# 
  2759  028C                     	;# 
  2760  028C                     	;# 
  2761  028D                     	;# 
  2762  028D                     	;# 
  2763  028E                     	;# 
  2764  028F                     	;# 
  2765  0290                     	;# 
  2766  0290                     	;# 
  2767  0291                     	;# 
  2768  0292                     	;# 
  2769  0292                     	;# 
  2770  0293                     	;# 
  2771  0293                     	;# 
  2772  0294                     	;# 
  2773  0295                     	;# 
  2774  0296                     	;# 
  2775  0296                     	;# 
  2776  0297                     	;# 
  2777  0298                     	;# 
  2778  0298                     	;# 
  2779  0299                     	;# 
  2780  0299                     	;# 
  2781  029A                     	;# 
  2782  029B                     	;# 
  2783  029C                     	;# 
  2784  029C                     	;# 
  2785  029D                     	;# 
  2786  030C                     	;# 
  2787  030C                     	;# 
  2788  030D                     	;# 
  2789  030E                     	;# 
  2790  030F                     	;# 
  2791  0310                     	;# 
  2792  0310                     	;# 
  2793  0311                     	;# 
  2794  0312                     	;# 
  2795  0313                     	;# 
  2796  0314                     	;# 
  2797  0314                     	;# 
  2798  0315                     	;# 
  2799  0316                     	;# 
  2800  0317                     	;# 
  2801  0318                     	;# 
  2802  0318                     	;# 
  2803  0319                     	;# 
  2804  031A                     	;# 
  2805  031B                     	;# 
  2806  031C                     	;# 
  2807  031C                     	;# 
  2808  031D                     	;# 
  2809  031E                     	;# 
  2810  031F                     	;# 
  2811  038C                     	;# 
  2812  038D                     	;# 
  2813  038E                     	;# 
  2814  0390                     	;# 
  2815  0391                     	;# 
  2816  0392                     	;# 
  2817  040C                     	;# 
  2818  040D                     	;# 
  2819  040E                     	;# 
  2820  040F                     	;# 
  2821  0410                     	;# 
  2822  0411                     	;# 
  2823  0416                     	;# 
  2824  0416                     	;# 
  2825  0417                     	;# 
  2826  0418                     	;# 
  2827  0418                     	;# 
  2828  0419                     	;# 
  2829  041A                     	;# 
  2830  041A                     	;# 
  2831  041B                     	;# 
  2832  041C                     	;# 
  2833  041C                     	;# 
  2834  041D                     	;# 
  2835  041E                     	;# 
  2836  041F                     	;# 
  2837  048C                     	;# 
  2838  048C                     	;# 
  2839  048D                     	;# 
  2840  048E                     	;# 
  2841  048F                     	;# 
  2842  048F                     	;# 
  2843  0490                     	;# 
  2844  0491                     	;# 
  2845  0492                     	;# 
  2846  0492                     	;# 
  2847  0493                     	;# 
  2848  0494                     	;# 
  2849  0495                     	;# 
  2850  0495                     	;# 
  2851  0496                     	;# 
  2852  0497                     	;# 
  2853  0498                     	;# 
  2854  0499                     	;# 
  2855  049A                     	;# 
  2856  049B                     	;# 
  2857  049C                     	;# 
  2858  049D                     	;# 
  2859  050C                     	;# 
  2860  050C                     	;# 
  2861  050D                     	;# 
  2862  050E                     	;# 
  2863  050F                     	;# 
  2864  050F                     	;# 
  2865  0510                     	;# 
  2866  0511                     	;# 
  2867  0512                     	;# 
  2868  0512                     	;# 
  2869  0513                     	;# 
  2870  0514                     	;# 
  2871  0515                     	;# 
  2872  0515                     	;# 
  2873  0516                     	;# 
  2874  0517                     	;# 
  2875  0518                     	;# 
  2876  0519                     	;# 
  2877  051A                     	;# 
  2878  051B                     	;# 
  2879  051C                     	;# 
  2880  051D                     	;# 
  2881  058C                     	;# 
  2882  058C                     	;# 
  2883  058D                     	;# 
  2884  058E                     	;# 
  2885  058F                     	;# 
  2886  058F                     	;# 
  2887  0590                     	;# 
  2888  0591                     	;# 
  2889  0592                     	;# 
  2890  0593                     	;# 
  2891  060C                     	;# 
  2892  060D                     	;# 
  2893  060E                     	;# 
  2894  060F                     	;# 
  2895  0610                     	;# 
  2896  0611                     	;# 
  2897  0612                     	;# 
  2898  0613                     	;# 
  2899  0614                     	;# 
  2900  0616                     	;# 
  2901  0617                     	;# 
  2902  0618                     	;# 
  2903  0619                     	;# 
  2904  061A                     	;# 
  2905  061B                     	;# 
  2906  061C                     	;# 
  2907  061D                     	;# 
  2908  061E                     	;# 
  2909  068C                     	;# 
  2910  068D                     	;# 
  2911  068E                     	;# 
  2912  068F                     	;# 
  2913  0690                     	;# 
  2914  0691                     	;# 
  2915  0692                     	;# 
  2916  0693                     	;# 
  2917  0694                     	;# 
  2918  070C                     	;# 
  2919  070D                     	;# 
  2920  070E                     	;# 
  2921  070F                     	;# 
  2922  0710                     	;# 
  2923  0711                     	;# 
  2924  0712                     	;# 
  2925  0713                     	;# 
  2926  0714                     	;# 
  2927  0716                     	;# 
  2928  0717                     	;# 
  2929  0718                     	;# 
  2930  0719                     	;# 
  2931  071A                     	;# 
  2932  071B                     	;# 
  2933  071C                     	;# 
  2934  071D                     	;# 
  2935  071E                     	;# 
  2936  0796                     	;# 
  2937  0797                     	;# 
  2938  0798                     	;# 
  2939  0799                     	;# 
  2940  079A                     	;# 
  2941  079B                     	;# 
  2942  080C                     	;# 
  2943  080D                     	;# 
  2944  080E                     	;# 
  2945  080F                     	;# 
  2946  0810                     	;# 
  2947  0811                     	;# 
  2948  0812                     	;# 
  2949  0813                     	;# 
  2950  0814                     	;# 
  2951  081A                     	;# 
  2952  081B                     	;# 
  2953  081C                     	;# 
  2954  081D                     	;# 
  2955  081E                     	;# 
  2956  081F                     	;# 
  2957  088C                     	;# 
  2958  088D                     	;# 
  2959  088E                     	;# 
  2960  088F                     	;# 
  2961  0890                     	;# 
  2962  0891                     	;# 
  2963  0892                     	;# 
  2964  0893                     	;# 
  2965  0895                     	;# 
  2966  0896                     	;# 
  2967  0897                     	;# 
  2968  0898                     	;# 
  2969  0899                     	;# 
  2970  089A                     	;# 
  2971  089B                     	;# 
  2972  090C                     	;# 
  2973  090E                     	;# 
  2974  090F                     	;# 
  2975  091F                     	;# 
  2976  091F                     	;# 
  2977  098F                     	;# 
  2978  098F                     	;# 
  2979  0990                     	;# 
  2980  0991                     	;# 
  2981  0992                     	;# 
  2982  0993                     	;# 
  2983  0994                     	;# 
  2984  0995                     	;# 
  2985  0996                     	;# 
  2986  0997                     	;# 
  2987  0E0F                     	;# 
  2988  0E10                     	;# 
  2989  0E11                     	;# 
  2990  0E12                     	;# 
  2991  0E13                     	;# 
  2992  0E14                     	;# 
  2993  0E15                     	;# 
  2994  0E16                     	;# 
  2995  0E17                     	;# 
  2996  0E18                     	;# 
  2997  0E19                     	;# 
  2998  0E1A                     	;# 
  2999  0E1B                     	;# 
  3000  0E1C                     	;# 
  3001  0E1D                     	;# 
  3002  0E1E                     	;# 
  3003  0E1F                     	;# 
  3004  0E20                     	;# 
  3005  0E21                     	;# 
  3006  0E22                     	;# 
  3007  0E23                     	;# 
  3008  0E24                     	;# 
  3009  0E25                     	;# 
  3010  0E26                     	;# 
  3011  0E27                     	;# 
  3012  0E28                     	;# 
  3013  0E29                     	;# 
  3014  0E2A                     	;# 
  3015  0E2B                     	;# 
  3016  0E2C                     	;# 
  3017  0E2D                     	;# 
  3018  0E2E                     	;# 
  3019  0E2F                     	;# 
  3020  0E30                     	;# 
  3021  0E31                     	;# 
  3022  0E32                     	;# 
  3023  0E33                     	;# 
  3024  0E34                     	;# 
  3025  0E35                     	;# 
  3026  0E36                     	;# 
  3027  0E37                     	;# 
  3028  0E8F                     	;# 
  3029  0E90                     	;# 
  3030  0E91                     	;# 
  3031  0E92                     	;# 
  3032  0E93                     	;# 
  3033  0E94                     	;# 
  3034  0E95                     	;# 
  3035  0E96                     	;# 
  3036  0E97                     	;# 
  3037  0E9C                     	;# 
  3038  0E9D                     	;# 
  3039  0E9E                     	;# 
  3040  0EA1                     	;# 
  3041  0EA2                     	;# 
  3042  0EA3                     	;# 
  3043  0EA4                     	;# 
  3044  0EA5                     	;# 
  3045  0EA9                     	;# 
  3046  0EAA                     	;# 
  3047  0EAB                     	;# 
  3048  0EAC                     	;# 
  3049  0EB1                     	;# 
  3050  0EB2                     	;# 
  3051  0EB3                     	;# 
  3052  0EB8                     	;# 
  3053  0EB9                     	;# 
  3054  0EBA                     	;# 
  3055  0EBB                     	;# 
  3056  0EBC                     	;# 
  3057  0EBD                     	;# 
  3058  0EBE                     	;# 
  3059  0EC3                     	;# 
  3060  0EC5                     	;# 
  3061  0EC6                     	;# 
  3062  0EC7                     	;# 
  3063  0EC8                     	;# 
  3064  0EC9                     	;# 
  3065  0ECA                     	;# 
  3066  0ECB                     	;# 
  3067  0ECC                     	;# 
  3068  0F10                     	;# 
  3069  0F11                     	;# 
  3070  0F12                     	;# 
  3071  0F13                     	;# 
  3072  0F14                     	;# 
  3073  0F15                     	;# 
  3074  0F16                     	;# 
  3075  0F17                     	;# 
  3076  0F18                     	;# 
  3077  0F19                     	;# 
  3078  0F1A                     	;# 
  3079  0F1B                     	;# 
  3080  0F1C                     	;# 
  3081  0F1D                     	;# 
  3082  0F1E                     	;# 
  3083  0F1F                     	;# 
  3084  0F20                     	;# 
  3085  0F21                     	;# 
  3086  0F22                     	;# 
  3087  0F23                     	;# 
  3088  0F24                     	;# 
  3089  0F25                     	;# 
  3090  0F26                     	;# 
  3091  0F27                     	;# 
  3092  0F38                     	;# 
  3093  0F39                     	;# 
  3094  0F3A                     	;# 
  3095  0F3B                     	;# 
  3096  0F3C                     	;# 
  3097  0F3D                     	;# 
  3098  0F3E                     	;# 
  3099  0F3F                     	;# 
  3100  0F40                     	;# 
  3101  0F41                     	;# 
  3102  0F43                     	;# 
  3103  0F44                     	;# 
  3104  0F45                     	;# 
  3105  0F46                     	;# 
  3106  0F47                     	;# 
  3107  0F48                     	;# 
  3108  0F49                     	;# 
  3109  0F4A                     	;# 
  3110  0F4B                     	;# 
  3111  0F4C                     	;# 
  3112  0F4E                     	;# 
  3113  0F4F                     	;# 
  3114  0F50                     	;# 
  3115  0F51                     	;# 
  3116  0F52                     	;# 
  3117  0F53                     	;# 
  3118  0F54                     	;# 
  3119  0F55                     	;# 
  3120  0F56                     	;# 
  3121  0F57                     	;# 
  3122  0F65                     	;# 
  3123  0F68                     	;# 
  3124  0F69                     	;# 
  3125  0F6A                     	;# 
  3126  0F6B                     	;# 
  3127  0FE4                     	;# 
  3128  0FE5                     	;# 
  3129  0FE6                     	;# 
  3130  0FE7                     	;# 
  3131  0FE8                     	;# 
  3132  0FE9                     	;# 
  3133  0FEA                     	;# 
  3134  0FEB                     	;# 
  3135  0FED                     	;# 
  3136  0FEE                     	;# 
  3137  0FEF                     	;# 
  3138  0000                     	;# 
  3139  0001                     	;# 
  3140  0002                     	;# 
  3141  0003                     	;# 
  3142  0004                     	;# 
  3143  0005                     	;# 
  3144  0006                     	;# 
  3145  0007                     	;# 
  3146  0008                     	;# 
  3147  0009                     	;# 
  3148  000A                     	;# 
  3149  000B                     	;# 
  3150  000C                     	;# 
  3151  000D                     	;# 
  3152  000E                     	;# 
  3153  0010                     	;# 
  3154  0011                     	;# 
  3155  0012                     	;# 
  3156  0013                     	;# 
  3157  0016                     	;# 
  3158  0017                     	;# 
  3159  0018                     	;# 
  3160  001C                     	;# 
  3161  001C                     	;# 
  3162  001D                     	;# 
  3163  001D                     	;# 
  3164  001E                     	;# 
  3165  001F                     	;# 
  3166  008C                     	;# 
  3167  008C                     	;# 
  3168  008D                     	;# 
  3169  008E                     	;# 
  3170  008E                     	;# 
  3171  008F                     	;# 
  3172  0090                     	;# 
  3173  0090                     	;# 
  3174  0091                     	;# 
  3175  0093                     	;# 
  3176  0094                     	;# 
  3177  0095                     	;# 
  3178  0096                     	;# 
  3179  0097                     	;# 
  3180  0098                     	;# 
  3181  0099                     	;# 
  3182  009A                     	;# 
  3183  009B                     	;# 
  3184  009C                     	;# 
  3185  009D                     	;# 
  3186  009E                     	;# 
  3187  010C                     	;# 
  3188  010D                     	;# 
  3189  010E                     	;# 
  3190  010E                     	;# 
  3191  010F                     	;# 
  3192  0110                     	;# 
  3193  0110                     	;# 
  3194  0111                     	;# 
  3195  0112                     	;# 
  3196  0112                     	;# 
  3197  0113                     	;# 
  3198  0114                     	;# 
  3199  0114                     	;# 
  3200  0115                     	;# 
  3201  0116                     	;# 
  3202  0116                     	;# 
  3203  0117                     	;# 
  3204  0119                     	;# 
  3205  0119                     	;# 
  3206  0119                     	;# 
  3207  011A                     	;# 
  3208  011A                     	;# 
  3209  011A                     	;# 
  3210  011B                     	;# 
  3211  011B                     	;# 
  3212  011B                     	;# 
  3213  011B                     	;# 
  3214  011B                     	;# 
  3215  011C                     	;# 
  3216  011C                     	;# 
  3217  011C                     	;# 
  3218  011D                     	;# 
  3219  011D                     	;# 
  3220  011D                     	;# 
  3221  011E                     	;# 
  3222  011E                     	;# 
  3223  011E                     	;# 
  3224  011F                     	;# 
  3225  011F                     	;# 
  3226  011F                     	;# 
  3227  011F                     	;# 
  3228  011F                     	;# 
  3229  018C                     	;# 
  3230  018D                     	;# 
  3231  018E                     	;# 
  3232  018F                     	;# 
  3233  0190                     	;# 
  3234  0191                     	;# 
  3235  0192                     	;# 
  3236  0196                     	;# 
  3237  0197                     	;# 
  3238  0198                     	;# 
  3239  0199                     	;# 
  3240  019A                     	;# 
  3241  019B                     	;# 
  3242  019C                     	;# 
  3243  020C                     	;# 
  3244  020D                     	;# 
  3245  020E                     	;# 
  3246  020F                     	;# 
  3247  020F                     	;# 
  3248  0210                     	;# 
  3249  0210                     	;# 
  3250  0211                     	;# 
  3251  0211                     	;# 
  3252  0212                     	;# 
  3253  0213                     	;# 
  3254  0214                     	;# 
  3255  0215                     	;# 
  3256  0215                     	;# 
  3257  0216                     	;# 
  3258  0216                     	;# 
  3259  0217                     	;# 
  3260  0217                     	;# 
  3261  0218                     	;# 
  3262  0219                     	;# 
  3263  021A                     	;# 
  3264  021B                     	;# 
  3265  021B                     	;# 
  3266  021C                     	;# 
  3267  021C                     	;# 
  3268  021D                     	;# 
  3269  021D                     	;# 
  3270  021E                     	;# 
  3271  021F                     	;# 
  3272  028C                     	;# 
  3273  028C                     	;# 
  3274  028D                     	;# 
  3275  028D                     	;# 
  3276  028E                     	;# 
  3277  028F                     	;# 
  3278  0290                     	;# 
  3279  0290                     	;# 
  3280  0291                     	;# 
  3281  0292                     	;# 
  3282  0292                     	;# 
  3283  0293                     	;# 
  3284  0293                     	;# 
  3285  0294                     	;# 
  3286  0295                     	;# 
  3287  0296                     	;# 
  3288  0296                     	;# 
  3289  0297                     	;# 
  3290  0298                     	;# 
  3291  0298                     	;# 
  3292  0299                     	;# 
  3293  0299                     	;# 
  3294  029A                     	;# 
  3295  029B                     	;# 
  3296  029C                     	;# 
  3297  029C                     	;# 
  3298  029D                     	;# 
  3299  030C                     	;# 
  3300  030C                     	;# 
  3301  030D                     	;# 
  3302  030E                     	;# 
  3303  030F                     	;# 
  3304  0310                     	;# 
  3305  0310                     	;# 
  3306  0311                     	;# 
  3307  0312                     	;# 
  3308  0313                     	;# 
  3309  0314                     	;# 
  3310  0314                     	;# 
  3311  0315                     	;# 
  3312  0316                     	;# 
  3313  0317                     	;# 
  3314  0318                     	;# 
  3315  0318                     	;# 
  3316  0319                     	;# 
  3317  031A                     	;# 
  3318  031B                     	;# 
  3319  031C                     	;# 
  3320  031C                     	;# 
  3321  031D                     	;# 
  3322  031E                     	;# 
  3323  031F                     	;# 
  3324  038C                     	;# 
  3325  038D                     	;# 
  3326  038E                     	;# 
  3327  0390                     	;# 
  3328  0391                     	;# 
  3329  0392                     	;# 
  3330  040C                     	;# 
  3331  040D                     	;# 
  3332  040E                     	;# 
  3333  040F                     	;# 
  3334  0410                     	;# 
  3335  0411                     	;# 
  3336  0416                     	;# 
  3337  0416                     	;# 
  3338  0417                     	;# 
  3339  0418                     	;# 
  3340  0418                     	;# 
  3341  0419                     	;# 
  3342  041A                     	;# 
  3343  041A                     	;# 
  3344  041B                     	;# 
  3345  041C                     	;# 
  3346  041C                     	;# 
  3347  041D                     	;# 
  3348  041E                     	;# 
  3349  041F                     	;# 
  3350  048C                     	;# 
  3351  048C                     	;# 
  3352  048D                     	;# 
  3353  048E                     	;# 
  3354  048F                     	;# 
  3355  048F                     	;# 
  3356  0490                     	;# 
  3357  0491                     	;# 
  3358  0492                     	;# 
  3359  0492                     	;# 
  3360  0493                     	;# 
  3361  0494                     	;# 
  3362  0495                     	;# 
  3363  0495                     	;# 
  3364  0496                     	;# 
  3365  0497                     	;# 
  3366  0498                     	;# 
  3367  0499                     	;# 
  3368  049A                     	;# 
  3369  049B                     	;# 
  3370  049C                     	;# 
  3371  049D                     	;# 
  3372  050C                     	;# 
  3373  050C                     	;# 
  3374  050D                     	;# 
  3375  050E                     	;# 
  3376  050F                     	;# 
  3377  050F                     	;# 
  3378  0510                     	;# 
  3379  0511                     	;# 
  3380  0512                     	;# 
  3381  0512                     	;# 
  3382  0513                     	;# 
  3383  0514                     	;# 
  3384  0515                     	;# 
  3385  0515                     	;# 
  3386  0516                     	;# 
  3387  0517                     	;# 
  3388  0518                     	;# 
  3389  0519                     	;# 
  3390  051A                     	;# 
  3391  051B                     	;# 
  3392  051C                     	;# 
  3393  051D                     	;# 
  3394  058C                     	;# 
  3395  058C                     	;# 
  3396  058D                     	;# 
  3397  058E                     	;# 
  3398  058F                     	;# 
  3399  058F                     	;# 
  3400  0590                     	;# 
  3401  0591                     	;# 
  3402  0592                     	;# 
  3403  0593                     	;# 
  3404  060C                     	;# 
  3405  060D                     	;# 
  3406  060E                     	;# 
  3407  060F                     	;# 
  3408  0610                     	;# 
  3409  0611                     	;# 
  3410  0612                     	;# 
  3411  0613                     	;# 
  3412  0614                     	;# 
  3413  0616                     	;# 
  3414  0617                     	;# 
  3415  0618                     	;# 
  3416  0619                     	;# 
  3417  061A                     	;# 
  3418  061B                     	;# 
  3419  061C                     	;# 
  3420  061D                     	;# 
  3421  061E                     	;# 
  3422  068C                     	;# 
  3423  068D                     	;# 
  3424  068E                     	;# 
  3425  068F                     	;# 
  3426  0690                     	;# 
  3427  0691                     	;# 
  3428  0692                     	;# 
  3429  0693                     	;# 
  3430  0694                     	;# 
  3431  070C                     	;# 
  3432  070D                     	;# 
  3433  070E                     	;# 
  3434  070F                     	;# 
  3435  0710                     	;# 
  3436  0711                     	;# 
  3437  0712                     	;# 
  3438  0713                     	;# 
  3439  0714                     	;# 
  3440  0716                     	;# 
  3441  0717                     	;# 
  3442  0718                     	;# 
  3443  0719                     	;# 
  3444  071A                     	;# 
  3445  071B                     	;# 
  3446  071C                     	;# 
  3447  071D                     	;# 
  3448  071E                     	;# 
  3449  0796                     	;# 
  3450  0797                     	;# 
  3451  0798                     	;# 
  3452  0799                     	;# 
  3453  079A                     	;# 
  3454  079B                     	;# 
  3455  080C                     	;# 
  3456  080D                     	;# 
  3457  080E                     	;# 
  3458  080F                     	;# 
  3459  0810                     	;# 
  3460  0811                     	;# 
  3461  0812                     	;# 
  3462  0813                     	;# 
  3463  0814                     	;# 
  3464  081A                     	;# 
  3465  081B                     	;# 
  3466  081C                     	;# 
  3467  081D                     	;# 
  3468  081E                     	;# 
  3469  081F                     	;# 
  3470  088C                     	;# 
  3471  088D                     	;# 
  3472  088E                     	;# 
  3473  088F                     	;# 
  3474  0890                     	;# 
  3475  0891                     	;# 
  3476  0892                     	;# 
  3477  0893                     	;# 
  3478  0895                     	;# 
  3479  0896                     	;# 
  3480  0897                     	;# 
  3481  0898                     	;# 
  3482  0899                     	;# 
  3483  089A                     	;# 
  3484  089B                     	;# 
  3485  090C                     	;# 
  3486  090E                     	;# 
  3487  090F                     	;# 
  3488  091F                     	;# 
  3489  091F                     	;# 
  3490  098F                     	;# 
  3491  098F                     	;# 
  3492  0990                     	;# 
  3493  0991                     	;# 
  3494  0992                     	;# 
  3495  0993                     	;# 
  3496  0994                     	;# 
  3497  0995                     	;# 
  3498  0996                     	;# 
  3499  0997                     	;# 
  3500  0E0F                     	;# 
  3501  0E10                     	;# 
  3502  0E11                     	;# 
  3503  0E12                     	;# 
  3504  0E13                     	;# 
  3505  0E14                     	;# 
  3506  0E15                     	;# 
  3507  0E16                     	;# 
  3508  0E17                     	;# 
  3509  0E18                     	;# 
  3510  0E19                     	;# 
  3511  0E1A                     	;# 
  3512  0E1B                     	;# 
  3513  0E1C                     	;# 
  3514  0E1D                     	;# 
  3515  0E1E                     	;# 
  3516  0E1F                     	;# 
  3517  0E20                     	;# 
  3518  0E21                     	;# 
  3519  0E22                     	;# 
  3520  0E23                     	;# 
  3521  0E24                     	;# 
  3522  0E25                     	;# 
  3523  0E26                     	;# 
  3524  0E27                     	;# 
  3525  0E28                     	;# 
  3526  0E29                     	;# 
  3527  0E2A                     	;# 
  3528  0E2B                     	;# 
  3529  0E2C                     	;# 
  3530  0E2D                     	;# 
  3531  0E2E                     	;# 
  3532  0E2F                     	;# 
  3533  0E30                     	;# 
  3534  0E31                     	;# 
  3535  0E32                     	;# 
  3536  0E33                     	;# 
  3537  0E34                     	;# 
  3538  0E35                     	;# 
  3539  0E36                     	;# 
  3540  0E37                     	;# 
  3541  0E8F                     	;# 
  3542  0E90                     	;# 
  3543  0E91                     	;# 
  3544  0E92                     	;# 
  3545  0E93                     	;# 
  3546  0E94                     	;# 
  3547  0E95                     	;# 
  3548  0E96                     	;# 
  3549  0E97                     	;# 
  3550  0E9C                     	;# 
  3551  0E9D                     	;# 
  3552  0E9E                     	;# 
  3553  0EA1                     	;# 
  3554  0EA2                     	;# 
  3555  0EA3                     	;# 
  3556  0EA4                     	;# 
  3557  0EA5                     	;# 
  3558  0EA9                     	;# 
  3559  0EAA                     	;# 
  3560  0EAB                     	;# 
  3561  0EAC                     	;# 
  3562  0EB1                     	;# 
  3563  0EB2                     	;# 
  3564  0EB3                     	;# 
  3565  0EB8                     	;# 
  3566  0EB9                     	;# 
  3567  0EBA                     	;# 
  3568  0EBB                     	;# 
  3569  0EBC                     	;# 
  3570  0EBD                     	;# 
  3571  0EBE                     	;# 
  3572  0EC3                     	;# 
  3573  0EC5                     	;# 
  3574  0EC6                     	;# 
  3575  0EC7                     	;# 
  3576  0EC8                     	;# 
  3577  0EC9                     	;# 
  3578  0ECA                     	;# 
  3579  0ECB                     	;# 
  3580  0ECC                     	;# 
  3581  0F10                     	;# 
  3582  0F11                     	;# 
  3583  0F12                     	;# 
  3584  0F13                     	;# 
  3585  0F14                     	;# 
  3586  0F15                     	;# 
  3587  0F16                     	;# 
  3588  0F17                     	;# 
  3589  0F18                     	;# 
  3590  0F19                     	;# 
  3591  0F1A                     	;# 
  3592  0F1B                     	;# 
  3593  0F1C                     	;# 
  3594  0F1D                     	;# 
  3595  0F1E                     	;# 
  3596  0F1F                     	;# 
  3597  0F20                     	;# 
  3598  0F21                     	;# 
  3599  0F22                     	;# 
  3600  0F23                     	;# 
  3601  0F24                     	;# 
  3602  0F25                     	;# 
  3603  0F26                     	;# 
  3604  0F27                     	;# 
  3605  0F38                     	;# 
  3606  0F39                     	;# 
  3607  0F3A                     	;# 
  3608  0F3B                     	;# 
  3609  0F3C                     	;# 
  3610  0F3D                     	;# 
  3611  0F3E                     	;# 
  3612  0F3F                     	;# 
  3613  0F40                     	;# 
  3614  0F41                     	;# 
  3615  0F43                     	;# 
  3616  0F44                     	;# 
  3617  0F45                     	;# 
  3618  0F46                     	;# 
  3619  0F47                     	;# 
  3620  0F48                     	;# 
  3621  0F49                     	;# 
  3622  0F4A                     	;# 
  3623  0F4B                     	;# 
  3624  0F4C                     	;# 
  3625  0F4E                     	;# 
  3626  0F4F                     	;# 
  3627  0F50                     	;# 
  3628  0F51                     	;# 
  3629  0F52                     	;# 
  3630  0F53                     	;# 
  3631  0F54                     	;# 
  3632  0F55                     	;# 
  3633  0F56                     	;# 
  3634  0F57                     	;# 
  3635  0F65                     	;# 
  3636  0F68                     	;# 
  3637  0F69                     	;# 
  3638  0F6A                     	;# 
  3639  0F6B                     	;# 
  3640  0FE4                     	;# 
  3641  0FE5                     	;# 
  3642  0FE6                     	;# 
  3643  0FE7                     	;# 
  3644  0FE8                     	;# 
  3645  0FE9                     	;# 
  3646  0FEA                     	;# 
  3647  0FEB                     	;# 
  3648  0FED                     	;# 
  3649  0FEE                     	;# 
  3650  0FEF                     	;# 
  3651  0000                     	;# 
  3652  0001                     	;# 
  3653  0002                     	;# 
  3654  0003                     	;# 
  3655  0004                     	;# 
  3656  0005                     	;# 
  3657  0006                     	;# 
  3658  0007                     	;# 
  3659  0008                     	;# 
  3660  0009                     	;# 
  3661  000A                     	;# 
  3662  000B                     	;# 
  3663  000C                     	;# 
  3664  000D                     	;# 
  3665  000E                     	;# 
  3666  0010                     	;# 
  3667  0011                     	;# 
  3668  0012                     	;# 
  3669  0013                     	;# 
  3670  0016                     	;# 
  3671  0017                     	;# 
  3672  0018                     	;# 
  3673  001C                     	;# 
  3674  001C                     	;# 
  3675  001D                     	;# 
  3676  001D                     	;# 
  3677  001E                     	;# 
  3678  001F                     	;# 
  3679  008C                     	;# 
  3680  008C                     	;# 
  3681  008D                     	;# 
  3682  008E                     	;# 
  3683  008E                     	;# 
  3684  008F                     	;# 
  3685  0090                     	;# 
  3686  0090                     	;# 
  3687  0091                     	;# 
  3688  0093                     	;# 
  3689  0094                     	;# 
  3690  0095                     	;# 
  3691  0096                     	;# 
  3692  0097                     	;# 
  3693  0098                     	;# 
  3694  0099                     	;# 
  3695  009A                     	;# 
  3696  009B                     	;# 
  3697  009C                     	;# 
  3698  009D                     	;# 
  3699  009E                     	;# 
  3700  010C                     	;# 
  3701  010D                     	;# 
  3702  010E                     	;# 
  3703  010E                     	;# 
  3704  010F                     	;# 
  3705  0110                     	;# 
  3706  0110                     	;# 
  3707  0111                     	;# 
  3708  0112                     	;# 
  3709  0112                     	;# 
  3710  0113                     	;# 
  3711  0114                     	;# 
  3712  0114                     	;# 
  3713  0115                     	;# 
  3714  0116                     	;# 
  3715  0116                     	;# 
  3716  0117                     	;# 
  3717  0119                     	;# 
  3718  0119                     	;# 
  3719  0119                     	;# 
  3720  011A                     	;# 
  3721  011A                     	;# 
  3722  011A                     	;# 
  3723  011B                     	;# 
  3724  011B                     	;# 
  3725  011B                     	;# 
  3726  011B                     	;# 
  3727  011B                     	;# 
  3728  011C                     	;# 
  3729  011C                     	;# 
  3730  011C                     	;# 
  3731  011D                     	;# 
  3732  011D                     	;# 
  3733  011D                     	;# 
  3734  011E                     	;# 
  3735  011E                     	;# 
  3736  011E                     	;# 
  3737  011F                     	;# 
  3738  011F                     	;# 
  3739  011F                     	;# 
  3740  011F                     	;# 
  3741  011F                     	;# 
  3742  018C                     	;# 
  3743  018D                     	;# 
  3744  018E                     	;# 
  3745  018F                     	;# 
  3746  0190                     	;# 
  3747  0191                     	;# 
  3748  0192                     	;# 
  3749  0196                     	;# 
  3750  0197                     	;# 
  3751  0198                     	;# 
  3752  0199                     	;# 
  3753  019A                     	;# 
  3754  019B                     	;# 
  3755  019C                     	;# 
  3756  020C                     	;# 
  3757  020D                     	;# 
  3758  020E                     	;# 
  3759  020F                     	;# 
  3760  020F                     	;# 
  3761  0210                     	;# 
  3762  0210                     	;# 
  3763  0211                     	;# 
  3764  0211                     	;# 
  3765  0212                     	;# 
  3766  0213                     	;# 
  3767  0214                     	;# 
  3768  0215                     	;# 
  3769  0215                     	;# 
  3770  0216                     	;# 
  3771  0216                     	;# 
  3772  0217                     	;# 
  3773  0217                     	;# 
  3774  0218                     	;# 
  3775  0219                     	;# 
  3776  021A                     	;# 
  3777  021B                     	;# 
  3778  021B                     	;# 
  3779  021C                     	;# 
  3780  021C                     	;# 
  3781  021D                     	;# 
  3782  021D                     	;# 
  3783  021E                     	;# 
  3784  021F                     	;# 
  3785  028C                     	;# 
  3786  028C                     	;# 
  3787  028D                     	;# 
  3788  028D                     	;# 
  3789  028E                     	;# 
  3790  028F                     	;# 
  3791  0290                     	;# 
  3792  0290                     	;# 
  3793  0291                     	;# 
  3794  0292                     	;# 
  3795  0292                     	;# 
  3796  0293                     	;# 
  3797  0293                     	;# 
  3798  0294                     	;# 
  3799  0295                     	;# 
  3800  0296                     	;# 
  3801  0296                     	;# 
  3802  0297                     	;# 
  3803  0298                     	;# 
  3804  0298                     	;# 
  3805  0299                     	;# 
  3806  0299                     	;# 
  3807  029A                     	;# 
  3808  029B                     	;# 
  3809  029C                     	;# 
  3810  029C                     	;# 
  3811  029D                     	;# 
  3812  030C                     	;# 
  3813  030C                     	;# 
  3814  030D                     	;# 
  3815  030E                     	;# 
  3816  030F                     	;# 
  3817  0310                     	;# 
  3818  0310                     	;# 
  3819  0311                     	;# 
  3820  0312                     	;# 
  3821  0313                     	;# 
  3822  0314                     	;# 
  3823  0314                     	;# 
  3824  0315                     	;# 
  3825  0316                     	;# 
  3826  0317                     	;# 
  3827  0318                     	;# 
  3828  0318                     	;# 
  3829  0319                     	;# 
  3830  031A                     	;# 
  3831  031B                     	;# 
  3832  031C                     	;# 
  3833  031C                     	;# 
  3834  031D                     	;# 
  3835  031E                     	;# 
  3836  031F                     	;# 
  3837  038C                     	;# 
  3838  038D                     	;# 
  3839  038E                     	;# 
  3840  0390                     	;# 
  3841  0391                     	;# 
  3842  0392                     	;# 
  3843  040C                     	;# 
  3844  040D                     	;# 
  3845  040E                     	;# 
  3846  040F                     	;# 
  3847  0410                     	;# 
  3848  0411                     	;# 
  3849  0416                     	;# 
  3850  0416                     	;# 
  3851  0417                     	;# 
  3852  0418                     	;# 
  3853  0418                     	;# 
  3854  0419                     	;# 
  3855  041A                     	;# 
  3856  041A                     	;# 
  3857  041B                     	;# 
  3858  041C                     	;# 
  3859  041C                     	;# 
  3860  041D                     	;# 
  3861  041E                     	;# 
  3862  041F                     	;# 
  3863  048C                     	;# 
  3864  048C                     	;# 
  3865  048D                     	;# 
  3866  048E                     	;# 
  3867  048F                     	;# 
  3868  048F                     	;# 
  3869  0490                     	;# 
  3870  0491                     	;# 
  3871  0492                     	;# 
  3872  0492                     	;# 
  3873  0493                     	;# 
  3874  0494                     	;# 
  3875  0495                     	;# 
  3876  0495                     	;# 
  3877  0496                     	;# 
  3878  0497                     	;# 
  3879  0498                     	;# 
  3880  0499                     	;# 
  3881  049A                     	;# 
  3882  049B                     	;# 
  3883  049C                     	;# 
  3884  049D                     	;# 
  3885  050C                     	;# 
  3886  050C                     	;# 
  3887  050D                     	;# 
  3888  050E                     	;# 
  3889  050F                     	;# 
  3890  050F                     	;# 
  3891  0510                     	;# 
  3892  0511                     	;# 
  3893  0512                     	;# 
  3894  0512                     	;# 
  3895  0513                     	;# 
  3896  0514                     	;# 
  3897  0515                     	;# 
  3898  0515                     	;# 
  3899  0516                     	;# 
  3900  0517                     	;# 
  3901  0518                     	;# 
  3902  0519                     	;# 
  3903  051A                     	;# 
  3904  051B                     	;# 
  3905  051C                     	;# 
  3906  051D                     	;# 
  3907  058C                     	;# 
  3908  058C                     	;# 
  3909  058D                     	;# 
  3910  058E                     	;# 
  3911  058F                     	;# 
  3912  058F                     	;# 
  3913  0590                     	;# 
  3914  0591                     	;# 
  3915  0592                     	;# 
  3916  0593                     	;# 
  3917  060C                     	;# 
  3918  060D                     	;# 
  3919  060E                     	;# 
  3920  060F                     	;# 
  3921  0610                     	;# 
  3922  0611                     	;# 
  3923  0612                     	;# 
  3924  0613                     	;# 
  3925  0614                     	;# 
  3926  0616                     	;# 
  3927  0617                     	;# 
  3928  0618                     	;# 
  3929  0619                     	;# 
  3930  061A                     	;# 
  3931  061B                     	;# 
  3932  061C                     	;# 
  3933  061D                     	;# 
  3934  061E                     	;# 
  3935  068C                     	;# 
  3936  068D                     	;# 
  3937  068E                     	;# 
  3938  068F                     	;# 
  3939  0690                     	;# 
  3940  0691                     	;# 
  3941  0692                     	;# 
  3942  0693                     	;# 
  3943  0694                     	;# 
  3944  070C                     	;# 
  3945  070D                     	;# 
  3946  070E                     	;# 
  3947  070F                     	;# 
  3948  0710                     	;# 
  3949  0711                     	;# 
  3950  0712                     	;# 
  3951  0713                     	;# 
  3952  0714                     	;# 
  3953  0716                     	;# 
  3954  0717                     	;# 
  3955  0718                     	;# 
  3956  0719                     	;# 
  3957  071A                     	;# 
  3958  071B                     	;# 
  3959  071C                     	;# 
  3960  071D                     	;# 
  3961  071E                     	;# 
  3962  0796                     	;# 
  3963  0797                     	;# 
  3964  0798                     	;# 
  3965  0799                     	;# 
  3966  079A                     	;# 
  3967  079B                     	;# 
  3968  080C                     	;# 
  3969  080D                     	;# 
  3970  080E                     	;# 
  3971  080F                     	;# 
  3972  0810                     	;# 
  3973  0811                     	;# 
  3974  0812                     	;# 
  3975  0813                     	;# 
  3976  0814                     	;# 
  3977  081A                     	;# 
  3978  081B                     	;# 
  3979  081C                     	;# 
  3980  081D                     	;# 
  3981  081E                     	;# 
  3982  081F                     	;# 
  3983  088C                     	;# 
  3984  088D                     	;# 
  3985  088E                     	;# 
  3986  088F                     	;# 
  3987  0890                     	;# 
  3988  0891                     	;# 
  3989  0892                     	;# 
  3990  0893                     	;# 
  3991  0895                     	;# 
  3992  0896                     	;# 
  3993  0897                     	;# 
  3994  0898                     	;# 
  3995  0899                     	;# 
  3996  089A                     	;# 
  3997  089B                     	;# 
  3998  090C                     	;# 
  3999  090E                     	;# 
  4000  090F                     	;# 
  4001  091F                     	;# 
  4002  091F                     	;# 
  4003  098F                     	;# 
  4004  098F                     	;# 
  4005  0990                     	;# 
  4006  0991                     	;# 
  4007  0992                     	;# 
  4008  0993                     	;# 
  4009  0994                     	;# 
  4010  0995                     	;# 
  4011  0996                     	;# 
  4012  0997                     	;# 
  4013  0E0F                     	;# 
  4014  0E10                     	;# 
  4015  0E11                     	;# 
  4016  0E12                     	;# 
  4017  0E13                     	;# 
  4018  0E14                     	;# 
  4019  0E15                     	;# 
  4020  0E16                     	;# 
  4021  0E17                     	;# 
  4022  0E18                     	;# 
  4023  0E19                     	;# 
  4024  0E1A                     	;# 
  4025  0E1B                     	;# 
  4026  0E1C                     	;# 
  4027  0E1D                     	;# 
  4028  0E1E                     	;# 
  4029  0E1F                     	;# 
  4030  0E20                     	;# 
  4031  0E21                     	;# 
  4032  0E22                     	;# 
  4033  0E23                     	;# 
  4034  0E24                     	;# 
  4035  0E25                     	;# 
  4036  0E26                     	;# 
  4037  0E27                     	;# 
  4038  0E28                     	;# 
  4039  0E29                     	;# 
  4040  0E2A                     	;# 
  4041  0E2B                     	;# 
  4042  0E2C                     	;# 
  4043  0E2D                     	;# 
  4044  0E2E                     	;# 
  4045  0E2F                     	;# 
  4046  0E30                     	;# 
  4047  0E31                     	;# 
  4048  0E32                     	;# 
  4049  0E33                     	;# 
  4050  0E34                     	;# 
  4051  0E35                     	;# 
  4052  0E36                     	;# 
  4053  0E37                     	;# 
  4054  0E8F                     	;# 
  4055  0E90                     	;# 
  4056  0E91                     	;# 
  4057  0E92                     	;# 
  4058  0E93                     	;# 
  4059  0E94                     	;# 
  4060  0E95                     	;# 
  4061  0E96                     	;# 
  4062  0E97                     	;# 
  4063  0E9C                     	;# 
  4064  0E9D                     	;# 
  4065  0E9E                     	;# 
  4066  0EA1                     	;# 
  4067  0EA2                     	;# 
  4068  0EA3                     	;# 
  4069  0EA4                     	;# 
  4070  0EA5                     	;# 
  4071  0EA9                     	;# 
  4072  0EAA                     	;# 
  4073  0EAB                     	;# 
  4074  0EAC                     	;# 
  4075  0EB1                     	;# 
  4076  0EB2                     	;# 
  4077  0EB3                     	;# 
  4078  0EB8                     	;# 
  4079  0EB9                     	;# 
  4080  0EBA                     	;# 
  4081  0EBB                     	;# 
  4082  0EBC                     	;# 
  4083  0EBD                     	;# 
  4084  0EBE                     	;# 
  4085  0EC3                     	;# 
  4086  0EC5                     	;# 
  4087  0EC6                     	;# 
  4088  0EC7                     	;# 
  4089  0EC8                     	;# 
  4090  0EC9                     	;# 
  4091  0ECA                     	;# 
  4092  0ECB                     	;# 
  4093  0ECC                     	;# 
  4094  0F10                     	;# 
  4095  0F11                     	;# 
  4096  0F12                     	;# 
  4097  0F13                     	;# 
  4098  0F14                     	;# 
  4099  0F15                     	;# 
  4100  0F16                     	;# 
  4101  0F17                     	;# 
  4102  0F18                     	;# 
  4103  0F19                     	;# 
  4104  0F1A                     	;# 
  4105  0F1B                     	;# 
  4106  0F1C                     	;# 
  4107  0F1D                     	;# 
  4108  0F1E                     	;# 
  4109  0F1F                     	;# 
  4110  0F20                     	;# 
  4111  0F21                     	;# 
  4112  0F22                     	;# 
  4113  0F23                     	;# 
  4114  0F24                     	;# 
  4115  0F25                     	;# 
  4116  0F26                     	;# 
  4117  0F27                     	;# 
  4118  0F38                     	;# 
  4119  0F39                     	;# 
  4120  0F3A                     	;# 
  4121  0F3B                     	;# 
  4122  0F3C                     	;# 
  4123  0F3D                     	;# 
  4124  0F3E                     	;# 
  4125  0F3F                     	;# 
  4126  0F40                     	;# 
  4127  0F41                     	;# 
  4128  0F43                     	;# 
  4129  0F44                     	;# 
  4130  0F45                     	;# 
  4131  0F46                     	;# 
  4132  0F47                     	;# 
  4133  0F48                     	;# 
  4134  0F49                     	;# 
  4135  0F4A                     	;# 
  4136  0F4B                     	;# 
  4137  0F4C                     	;# 
  4138  0F4E                     	;# 
  4139  0F4F                     	;# 
  4140  0F50                     	;# 
  4141  0F51                     	;# 
  4142  0F52                     	;# 
  4143  0F53                     	;# 
  4144  0F54                     	;# 
  4145  0F55                     	;# 
  4146  0F56                     	;# 
  4147  0F57                     	;# 
  4148  0F65                     	;# 
  4149  0F68                     	;# 
  4150  0F69                     	;# 
  4151  0F6A                     	;# 
  4152  0F6B                     	;# 
  4153  0FE4                     	;# 
  4154  0FE5                     	;# 
  4155  0FE6                     	;# 
  4156  0FE7                     	;# 
  4157  0FE8                     	;# 
  4158  0FE9                     	;# 
  4159  0FEA                     	;# 
  4160  0FEB                     	;# 
  4161  0FED                     	;# 
  4162  0FEE                     	;# 
  4163  0FEF                     	;_samples
  4164                           
  4165                           	psect	idataBANK1
  4166  17A6                     __pidataBANK1:	
  4167                           
  4168                           ;initializer for _channels
  4169  17A6  3401               	retlw	1
  4170  17A7  3400               	retlw	0
  4171  17A8  3403               	retlw	3
  4172  17A9  3400               	retlw	0
  4173  17AA  3404               	retlw	4
  4174  17AB  3400               	retlw	0
  4175  17AC  3405               	retlw	5
  4176  17AD  3400               	retlw	0
  4177  17AE  3409               	retlw	9
  4178  17AF  3400               	retlw	0
  4179  17B0  340B               	retlw	11
  4180  17B1  3400               	retlw	0
  4181                           
  4182                           ;initializer for main@F13661
  4183  17B2  3400               	retlw	0
  4184  17B3  3440               	retlw	64
  4185  17B4  3402               	retlw	2
  4186  17B5  3400               	retlw	0
  4187  17B6  3400               	retlw	0
  4188  17B7  3400               	retlw	0
  4189  17B8  3400               	retlw	0
  4190  17B9  340A               	retlw	10
  4191                           
  4192                           	psect	idataBANK2
  4193  17E8                     __pidataBANK2:	
  4194                           
  4195                           ;initializer for ___cgram
  4196  17E8  340C               	retlw	12
  4197  17E9  3412               	retlw	18
  4198  17EA  3412               	retlw	18
  4199  17EB  340C               	retlw	12
  4200  17EC  3400               	retlw	0
  4201  17ED  3400               	retlw	0
  4202  17EE  3400               	retlw	0
  4203  17EF  3400               	retlw	0
  4204  17F0  340A               	retlw	10
  4205  17F1  3415               	retlw	21
  4206  17F2  3411               	retlw	17
  4207  17F3  340A               	retlw	10
  4208  17F4  3404               	retlw	4
  4209  17F5  3400               	retlw	0
  4210  17F6  3400               	retlw	0
  4211  17F7  3400               	retlw	0
  4212  17F8  340A               	retlw	10
  4213  17F9  341F               	retlw	31
  4214  17FA  341F               	retlw	31
  4215  17FB  340E               	retlw	14
  4216  17FC  3404               	retlw	4
  4217  17FD  3400               	retlw	0
  4218  17FE  3400               	retlw	0
  4219  17FF  3400               	retlw	0
  4220                           
  4221                           	psect	stringtext
  4222  1000                     __pstringtext:	
  4223  1000                     log@coeff:	
  4224  1000  3400               	retlw	0
  4225  1001  3400               	retlw	0
  4226  1002  3400               	retlw	0
  4227  1003  3400               	retlw	0
  4228  1004  3480               	retlw	128
  4229  1005  343F               	retlw	63
  4230  1006  34F0               	retlw	240
  4231  1007  34FF               	retlw	255
  4232  1008  34BE               	retlw	190
  4233  1009  34E2               	retlw	226
  4234  100A  34A9               	retlw	169
  4235  100B  343E               	retlw	62
  4236  100C  3483               	retlw	131
  4237  100D  3476               	retlw	118
  4238  100E  34BE               	retlw	190
  4239  100F  34AE               	retlw	174
  4240  1010  342B               	retlw	43
  4241  1011  343E               	retlw	62
  4242  1012  343C               	retlw	60
  4243  1013  34C3               	retlw	195
  4244  1014  34BD               	retlw	189
  4245  1015  34D2               	retlw	210
  4246  1016  3413               	retlw	19
  4247  1017  343D               	retlw	61
  4248  1018  3478               	retlw	120
  4249  1019  34D3               	retlw	211
  4250  101A  34BB               	retlw	187
  4251  101B                     __end_oflog@coeff:	
  4252  0016                     _LATA	set	22
  4253  0017                     _LATB	set	23
  4254  0018                     _LATC	set	24
  4255  0011                     _TRISA	set	17
  4256  0012                     _TRISB	set	18
  4257  0013                     _TRISC	set	19
  4258  005F                     _GIE	set	95
  4259  0060                     _RA0	set	96
  4260  0062                     _RA2	set	98
  4261  0066                     _RA6	set	102
  4262  0067                     _RA7	set	103
  4263  0070                     _RC0	set	112
  4264  0071                     _RC1	set	113
  4265  009D                     _ADACQ	set	157
  4266  0099                     _ADACT	set	153
  4267  009B                     _ADCAP	set	155
  4268  0098                     _ADCLK	set	152
  4269  0093                     _ADCON0	set	147
  4270  0093                     _ADCON0bits	set	147
  4271  0094                     _ADCON1	set	148
  4272  0095                     _ADCON2	set	149
  4273  0096                     _ADCON3	set	150
  4274  009E                     _ADPCH	set	158
  4275  009C                     _ADPRE	set	156
  4276  009A                     _ADREF	set	154
  4277  008D                     _ADRESH	set	141
  4278  008C                     _ADRESL	set	140
  4279  0097                     _ADSTAT	set	151
  4280  010F                     _ADLTHH	set	271
  4281  010E                     _ADLTHL	set	270
  4282  010D                     _ADRPT	set	269
  4283  0113                     _ADSTPTH	set	275
  4284  0112                     _ADSTPTL	set	274
  4285  0111                     _ADUTHH	set	273
  4286  0110                     _ADUTHL	set	272
  4287  021F                     _CCPTMRS1bits	set	543
  4288  0290                     _T2CLKCON	set	656
  4289  028E                     _T2CON	set	654
  4290  028E                     _T2CONbits	set	654
  4291  028F                     _T2HLT	set	655
  4292  028D                     _T2PR	set	653
  4293  0291                     _T2RST	set	657
  4294  028C                     _T2TMR	set	652
  4295  038E                     _PWM6CON	set	910
  4296  038D                     _PWM6DCH	set	909
  4297  038C                     _PWM6DCL	set	908
  4298  0716                     _PIE0bits	set	1814
  4299  0710                     _PIR4bits	set	1808
  4300  088D                     _OSCCON1	set	2189
  4301  088F                     _OSCCON3	set	2191
  4302  0891                     _OSCEN	set	2193
  4303  0893                     _OSCFRQ	set	2195
  4304  0892                     _OSCTUNE	set	2194
  4305  090C                     _FVRCON	set	2316
  4306  0E8F                     _PPSLOCK	set	3727
  4307  0E8F                     _PPSLOCKbits	set	3727
  4308  0F38                     _ANSELA	set	3896
  4309  0F43                     _ANSELB	set	3907
  4310  0F4E                     _ANSELC	set	3918
  4311  0F22                     _RC2PPS	set	3874
  4312  0F39                     _WPUA	set	3897
  4313  0F44                     _WPUB	set	3908
  4314  0F4F                     _WPUC	set	3919
  4315  0F65                     _WPUE	set	3941
  4316  101B                     STR_13:	
  4317  101B  3442               	retlw	66	;'B'
  4318  101C  3461               	retlw	97	;'a'
  4319  101D  3463               	retlw	99	;'c'
  4320  101E  346B               	retlw	107	;'k'
  4321  101F  344C               	retlw	76	;'L'
  4322  1020  3469               	retlw	105	;'i'
  4323  1021  3467               	retlw	103	;'g'
  4324  1022  3468               	retlw	104	;'h'
  4325  1023  3474               	retlw	116	;'t'
  4326  1024  343A               	retlw	58	;':'
  4327  1025  3400               	retlw	0
  4328  1026                     STR_15:	
  4329  1026  3453               	retlw	83	;'S'
  4330  1027  346F               	retlw	111	;'o'
  4331  1028  346C               	retlw	108	;'l'
  4332  1029  3461               	retlw	97	;'a'
  4333  102A  3472               	retlw	114	;'r'
  4334  102B  3420               	retlw	32	;' '
  4335  102C  3449               	retlw	73	;'I'
  4336  102D  346E               	retlw	110	;'n'
  4337  102E  3400               	retlw	0
  4338  102F                     STR_16:	
  4339  102F  3452               	retlw	82	;'R'
  4340  1030  3465               	retlw	101	;'e'
  4341  1031  3474               	retlw	116	;'t'
  4342  1032  3475               	retlw	117	;'u'
  4343  1033  3472               	retlw	114	;'r'
  4344  1034  346E               	retlw	110	;'n'
  4345  1035  3400               	retlw	0
  4346  1036                     STR_6:	
  4347  1036  3420               	retlw	32	;' '
  4348  1037  3400               	retlw	0
  4349  1038                     STR_12:	
  4350  1038  3421               	retlw	33	;'!'
  4351  1039  3400               	retlw	0
  4352  103A                     STR_1:	
  4353  103A  3441               	retlw	65	;'A'
  4354  103B  3400               	retlw	0
  4355  103C                     STR_7:	
  4356  103C  3444               	retlw	68	;'D'
  4357  103D  3400               	retlw	0
  4358  103E                     STR_4:	
  4359  103E  3448               	retlw	72	;'H'
  4360  103F  3400               	retlw	0
  4361  1040                     STR_10:	
  4362  1040  3449               	retlw	73	;'I'
  4363  1041  3400               	retlw	0
  4364  1042                     STR_2:	
  4365  1042  344C               	retlw	76	;'L'
  4366  1043  3400               	retlw	0
  4367  1044                     STR_3:	
  4368  1044  344F               	retlw	79	;'O'
  4369  1045  3400               	retlw	0
  4370  1046                     STR_9:	
  4371  1046  3456               	retlw	86	;'V'
  4372  1047  3400               	retlw	0
  4373  101B                     
  4374                           ; #config settings
  4375  0000                     
  4376                           	psect	cinit
  4377  07BD                     start_initialization:	
  4378  07BD                     __initialization:		;BIGRAM
  4379                           
  4380                           ; Initialize objects allocated to BANK1
  4381  07BD  30A6               	movlw	low __pidataBANK1
  4382  07BE  0084               	movwf	4
  4383  07BF  3097               	movlw	(high __pidataBANK1)| (0+128)
  4384  07C0  0085               	movwf	5
  4385  07C1  30D9               	movlw	low __pdataBANK1
  4386  07C2  0086               	movwf	6
  4387  07C3  3000               	movlw	high __pdataBANK1
  4388  07C4  0087               	movwf	7
  4389  07C5  3000               	movlw	0
  4390  07C6  00FF               	movwf	btemp+1
  4391  07C7  3014               	movlw	20
  4392  07C8  3197  276A  3187   	fcall	init_ram
  4393                           
  4394                           ; Initialize objects allocated to BANK2
  4395  07CB  30E8               	movlw	low __pidataBANK2
  4396  07CC  0084               	movwf	4
  4397  07CD  3097               	movlw	(high __pidataBANK2)| (0+128)
  4398  07CE  0085               	movwf	5
  4399  07CF  3020               	movlw	low __pdataBANK2
  4400  07D0  0086               	movwf	6
  4401  07D1  3001               	movlw	high __pdataBANK2
  4402  07D2  0087               	movwf	7
  4403  07D3  3000               	movlw	0
  4404  07D4  00FF               	movwf	btemp+1
  4405  07D5  3018               	movlw	24
  4406  07D6  3197  276A  3187   	fcall	init_ram
  4407                           
  4408                           ; Clear objects allocated to BIGRAM
  4409  07D9  3000               	movlw	low (0+8960)
  4410  07DA  0084               	movwf	4
  4411  07DB  3023               	movlw	high (0+8960)
  4412  07DC  0085               	movwf	5
  4413  07DD  30F0               	movlw	240
  4414  07DE  00FE               	movwf	btemp
  4415  07DF  3000               	movlw	0
  4416  07E0  00FF               	movwf	btemp+1
  4417  07E1  3197  275E  3187   	fcall	clear_ram0
  4418                           
  4419                           ; Clear objects allocated to BANK0
  4420  07E4  01EC               	clrf	__pbssBANK0& (0+127)
  4421  07E5  01ED               	clrf	(__pbssBANK0+1)& (0+127)
  4422  07E6  01EE               	clrf	(__pbssBANK0+2)& (0+127)
  4423  07E7  01EF               	clrf	(__pbssBANK0+3)& (0+127)
  4424                           
  4425                           ; Clear objects allocated to BANK1
  4426  07E8  30A0               	movlw	low __pbssBANK1
  4427  07E9  0084               	movwf	4
  4428  07EA  3000               	movlw	high __pbssBANK1
  4429  07EB  0085               	movwf	5
  4430  07EC  301D               	movlw	29
  4431  07ED  00FE               	movwf	btemp
  4432  07EE  3000               	movlw	0
  4433  07EF  00FF               	movwf	btemp+1
  4434  07F0  3197  275E  3187   	fcall	clear_ram0
  4435                           
  4436                           ; Clear objects allocated to BANK2
  4437  07F3  3038               	movlw	low __pbssBANK2
  4438  07F4  0084               	movwf	4
  4439  07F5  3001               	movlw	high __pbssBANK2
  4440  07F6  0085               	movwf	5
  4441  07F7  300C               	movlw	12
  4442  07F8  00FE               	movwf	btemp
  4443  07F9  3000               	movlw	0
  4444  07FA  00FF               	movwf	btemp+1
  4445  07FB  3197  275E         	fcall	clear_ram0
  4446  07FD                     end_of_initialization:	
  4447                           ;End of C runtime variable initialization code
  4448                           
  4449  07FD                     __end_of__initialization:	
  4450  07FD  0020               	movlb	0
  4451  07FE  3183  2B11         	ljmp	_main	;jump to C main() function
  4452                           
  4453                           	psect	bssBANK0
  4454  006C                     __pbssBANK0:	
  4455  006C                     _errno:	
  4456  006C                     	ds	2
  4457  006E                     _sampleIndex:	
  4458  006E                     	ds	2
  4459                           
  4460                           	psect	bssBANK1
  4461  00A0                     __pbssBANK1:	
  4462  00A0                     _totals:	
  4463  00A0                     	ds	24
  4464  00B8                     LCD_Write_Int@F13687:	
  4465  00B8                     	ds	5
  4466                           
  4467                           	psect	dataBANK1
  4468  00D9                     __pdataBANK1:	
  4469  00D9                     _channels:	
  4470  00D9                     	ds	12
  4471  00E5                     main@F13661:	
  4472  00E5                     	ds	8
  4473                           
  4474                           	psect	bssBANK2
  4475  0138                     __pbssBANK2:	
  4476  0138                     main@F13657:	
  4477  0138                     	ds	12
  4478                           
  4479                           	psect	dataBANK2
  4480  0120                     __pdataBANK2:	
  4481  0120                     ___cgram:	
  4482  0120                     	ds	24
  4483                           
  4484                           	psect	inittext
  4485  176A                     init_ram:	
  4486  176A  00FE               	movwf	126
  4487  176B                     initloop:	
  4488  176B  0012               	moviw fsr0++
  4489  176C  001E               	movwi fsr1++
  4490  176D  3001               	movlw	1
  4491  176E  02FE               	subwf	126,f
  4492  176F  3000               	movlw	0
  4493  1770  3BFF               	subwfb	127,f
  4494  1771  087F               	movf	127,w
  4495  1772  047E               	iorwf	126,w
  4496  1773  1903               	btfsc	3,2
  4497  1774  3400               	retlw	0
  4498  1775  2F6B               	goto	initloop
  4499                           
  4500                           	psect	clrtext
  4501  175E                     clear_ram0:	
  4502                           ;	Called with FSR0 containing the base address, and
  4503                           ;	btemp/btemp+1 has the size to clear
  4504                           
  4505  175E  0064               	clrwdt	;clear the watchdog before getting into this loop
  4506  175F                     clrloop0:	
  4507  175F  0180               	clrf	0	;clear RAM location pointed to by FSR
  4508  1760  3101               	addfsr 0,1
  4509  1761  3001               	movlw	1
  4510  1762  02FE               	subwf	126,f
  4511  1763  3000               	movlw	0
  4512  1764  3BFF               	subwfb	127,f
  4513  1765  087F               	movf	127,w
  4514  1766  047E               	iorwf	126,w
  4515  1767  1903               	btfsc	3,2
  4516  1768  3400               	retlw	0	;all done for this memory range, return
  4517  1769  2F5F               	goto	clrloop0	;have we reached the end yet?
  4518                           
  4519                           	psect	cstackBANK1
  4520  00BD                     __pcstackBANK1:	
  4521  00BD                     main@analogs:	
  4522                           
  4523                           ; 12 bytes @ 0x0
  4524  00BD                     	ds	12
  4525  00C9                     main@displayTemp:	
  4526                           
  4527                           ; 3 bytes @ 0xC
  4528  00C9                     	ds	3
  4529  00CC                     main@displayTemp2:	
  4530                           
  4531                           ; 3 bytes @ 0xF
  4532  00CC                     	ds	3
  4533  00CF                     main@x:	
  4534                           
  4535                           ; 8 bytes @ 0x12
  4536  00CF                     	ds	8
  4537  00D7                     main@dutyCycle:	
  4538                           
  4539                           ; 2 bytes @ 0x1A
  4540  00D7                     	ds	2
  4541                           
  4542                           	psect	cstackCOMMON
  4543  0070                     __pcstackCOMMON:	
  4544  0070                     ?___ftge:	
  4545  0070                     ?_LCD_Cmd:	
  4546                           ; 1 bit 
  4547                           
  4548  0070                     ?_LCD_Write_Char:	
  4549                           ; 1 bytes @ 0x0
  4550                           
  4551  0070                     ?_OSCILLATOR_Initialize:	
  4552                           ; 1 bytes @ 0x0
  4553                           
  4554  0070                     ??_OSCILLATOR_Initialize:	
  4555                           ; 1 bytes @ 0x0
  4556                           
  4557  0070                     ?_PWM6_Initialize:	
  4558                           ; 1 bytes @ 0x0
  4559                           
  4560  0070                     ??_PWM6_Initialize:	
  4561                           ; 1 bytes @ 0x0
  4562                           
  4563  0070                     ?_TMR2_Initialize:	
  4564                           ; 1 bytes @ 0x0
  4565                           
  4566  0070                     ??_TMR2_Initialize:	
  4567                           ; 1 bytes @ 0x0
  4568                           
  4569  0070                     ?_ADCC_Initialize:	
  4570                           ; 1 bytes @ 0x0
  4571                           
  4572  0070                     ??_ADCC_Initialize:	
  4573                           ; 1 bytes @ 0x0
  4574                           
  4575  0070                     ?_InitCustomChars:	
  4576                           ; 1 bytes @ 0x0
  4577                           
  4578  0070                     ?_LCD_Port:	
  4579                           ; 1 bytes @ 0x0
  4580                           
  4581  0070                     ??_LCD_Port:	
  4582                           ; 1 bytes @ 0x0
  4583                           
  4584  0070                     ?_LCD_Clear:	
  4585                           ; 1 bytes @ 0x0
  4586                           
  4587  0070                     ?_LCD_Init:	
  4588                           ; 1 bytes @ 0x0
  4589                           
  4590  0070                     ?_PIN_MANAGER_Initialize:	
  4591                           ; 1 bytes @ 0x0
  4592                           
  4593  0070                     ??_PIN_MANAGER_Initialize:	
  4594                           ; 1 bytes @ 0x0
  4595                           
  4596  0070                     ?_SYSTEM_Initialize:	
  4597                           ; 1 bytes @ 0x0
  4598                           
  4599  0070                     ?_PWM6_LoadDutyValue:	
  4600                           ; 1 bytes @ 0x0
  4601                           
  4602  0070                     ?_main:	
  4603                           ; 1 bytes @ 0x0
  4604                           
  4605  0070                     ?_ADCRead:	
  4606                           ; 1 bytes @ 0x0
  4607                           
  4608  0070                     ?___wmul:	
  4609                           ; 2 bytes @ 0x0
  4610                           
  4611  0070                     ?___awdiv:	
  4612                           ; 2 bytes @ 0x0
  4613                           
  4614  0070                     ?___awmod:	
  4615                           ; 2 bytes @ 0x0
  4616                           
  4617  0070                     ?___lwdiv:	
  4618                           ; 2 bytes @ 0x0
  4619                           
  4620  0070                     ?___ftpack:	
  4621                           ; 2 bytes @ 0x0
  4622                           
  4623  0070                     ?_frexp:	
  4624                           ; 3 bytes @ 0x0
  4625                           
  4626  0070                     ?___aldiv:	
  4627                           ; 3 bytes @ 0x0
  4628                           
  4629  0070                     ?___fttol:	
  4630                           ; 4 bytes @ 0x0
  4631                           
  4632  0070                     LCD_Port@a:	
  4633                           ; 4 bytes @ 0x0
  4634                           
  4635  0070                     PIN_MANAGER_Initialize@state:	
  4636                           ; 1 bytes @ 0x0
  4637                           
  4638  0070                     PWM6_LoadDutyValue@dutyCycle:	
  4639                           ; 1 bytes @ 0x0
  4640                           
  4641  0070                     ___wmul@multiplier:	
  4642                           ; 2 bytes @ 0x0
  4643                           
  4644  0070                     ___awdiv@divisor:	
  4645                           ; 2 bytes @ 0x0
  4646                           
  4647  0070                     ___awmod@divisor:	
  4648                           ; 2 bytes @ 0x0
  4649                           
  4650  0070                     ___lwdiv@divisor:	
  4651                           ; 2 bytes @ 0x0
  4652                           
  4653  0070                     ___ftpack@arg:	
  4654                           ; 2 bytes @ 0x0
  4655                           
  4656  0070                     ___ftge@ff1:	
  4657                           ; 3 bytes @ 0x0
  4658                           
  4659  0070                     ___fttol@f1:	
  4660                           ; 3 bytes @ 0x0
  4661                           
  4662  0070                     frexp@value:	
  4663                           ; 3 bytes @ 0x0
  4664                           
  4665  0070                     ___aldiv@divisor:	
  4666                           ; 3 bytes @ 0x0
  4667                           
  4668                           
  4669                           ; 4 bytes @ 0x0
  4670  0070                     	ds	1
  4671  0071                     ??_LCD_Cmd:	
  4672  0071                     ??_LCD_Write_Char:	
  4673                           ; 1 bytes @ 0x1
  4674                           
  4675                           
  4676                           ; 1 bytes @ 0x1
  4677  0071                     	ds	1
  4678  0072                     ??_PWM6_LoadDutyValue:	
  4679  0072                     LCD_Write_Char@temp:	
  4680                           ; 1 bytes @ 0x2
  4681                           
  4682  0072                     ___wmul@multiplicand:	
  4683                           ; 1 bytes @ 0x2
  4684                           
  4685  0072                     ___awdiv@dividend:	
  4686                           ; 2 bytes @ 0x2
  4687                           
  4688  0072                     ___awmod@dividend:	
  4689                           ; 2 bytes @ 0x2
  4690                           
  4691  0072                     ___lwdiv@dividend:	
  4692                           ; 2 bytes @ 0x2
  4693                           
  4694                           
  4695                           ; 2 bytes @ 0x2
  4696  0072                     	ds	1
  4697  0073                     ??_ADCRead:	
  4698  0073                     ADCRead@channel:	
  4699                           ; 1 bytes @ 0x3
  4700                           
  4701  0073                     LCD_Cmd@a:	
  4702                           ; 1 bytes @ 0x3
  4703                           
  4704  0073                     LCD_Write_Char@y:	
  4705                           ; 1 bytes @ 0x3
  4706                           
  4707  0073                     ___ftpack@exp:	
  4708                           ; 1 bytes @ 0x3
  4709                           
  4710  0073                     frexp@eptr:	
  4711                           ; 1 bytes @ 0x3
  4712                           
  4713  0073                     ___ftge@ff2:	
  4714                           ; 1 bytes @ 0x3
  4715                           
  4716                           
  4717                           ; 3 bytes @ 0x3
  4718  0073                     	ds	1
  4719  0074                     ??_frexp:	
  4720  0074                     ??_LCD_Clear:	
  4721                           ; 1 bytes @ 0x4
  4722                           
  4723  0074                     ?_LCD_Set_Cursor:	
  4724                           ; 1 bytes @ 0x4
  4725                           
  4726  0074                     ??_LCD_Init:	
  4727                           ; 1 bytes @ 0x4
  4728                           
  4729  0074                     ??___wmul:	
  4730                           ; 1 bytes @ 0x4
  4731                           
  4732  0074                     ??___awdiv:	
  4733                           ; 1 bytes @ 0x4
  4734                           
  4735  0074                     ??___awmod:	
  4736                           ; 1 bytes @ 0x4
  4737                           
  4738  0074                     ??___fttol:	
  4739                           ; 1 bytes @ 0x4
  4740                           
  4741  0074                     ??___lwdiv:	
  4742                           ; 1 bytes @ 0x4
  4743                           
  4744  0074                     LCD_Set_Cursor@y:	
  4745                           ; 1 bytes @ 0x4
  4746                           
  4747  0074                     LCD_Write_Char@a:	
  4748                           ; 1 bytes @ 0x4
  4749                           
  4750  0074                     ___ftpack@sign:	
  4751                           ; 1 bytes @ 0x4
  4752                           
  4753  0074                     ___wmul@product:	
  4754                           ; 1 bytes @ 0x4
  4755                           
  4756  0074                     ___aldiv@dividend:	
  4757                           ; 2 bytes @ 0x4
  4758                           
  4759                           
  4760                           ; 4 bytes @ 0x4
  4761  0074                     	ds	1
  4762  0075                     ??___ftpack:	
  4763  0075                     ??_InitCustomChars:	
  4764                           ; 1 bytes @ 0x5
  4765                           
  4766  0075                     ??_LCD_Set_Cursor:	
  4767                           ; 1 bytes @ 0x5
  4768                           
  4769  0075                     ?_LCD_Write_String:	
  4770                           ; 1 bytes @ 0x5
  4771                           
  4772  0075                     ___awdiv@counter:	
  4773                           ; 1 bytes @ 0x5
  4774                           
  4775  0075                     ___awmod@counter:	
  4776                           ; 1 bytes @ 0x5
  4777                           
  4778  0075                     LCD_Write_String@a:	
  4779                           ; 1 bytes @ 0x5
  4780                           
  4781  0075                     ___lwdiv@quotient:	
  4782                           ; 2 bytes @ 0x5
  4783                           
  4784                           
  4785                           ; 2 bytes @ 0x5
  4786  0075                     	ds	1
  4787  0076                     ??___ftge:	
  4788  0076                     InitCustomChars@i:	
  4789                           ; 1 bytes @ 0x6
  4790                           
  4791  0076                     ___awdiv@sign:	
  4792                           ; 1 bytes @ 0x6
  4793                           
  4794  0076                     ___awmod@sign:	
  4795                           ; 1 bytes @ 0x6
  4796                           
  4797                           
  4798                           ; 1 bytes @ 0x6
  4799  0076                     	ds	1
  4800  0077                     ??_LCD_Write_String:	
  4801  0077                     LCD_Set_Cursor@x:	
  4802                           ; 1 bytes @ 0x7
  4803                           
  4804  0077                     LCD_Init@style:	
  4805                           ; 1 bytes @ 0x7
  4806                           
  4807  0077                     ___lwdiv@counter:	
  4808                           ; 1 bytes @ 0x7
  4809                           
  4810  0077                     ___awdiv@quotient:	
  4811                           ; 1 bytes @ 0x7
  4812                           
  4813                           
  4814                           ; 2 bytes @ 0x7
  4815  0077                     	ds	1
  4816  0078                     ??_SYSTEM_Initialize:	
  4817  0078                     ??___aldiv:	
  4818                           ; 1 bytes @ 0x8
  4819                           
  4820  0078                     ?___awtoft:	
  4821                           ; 1 bytes @ 0x8
  4822                           
  4823  0078                     LCD_Set_Cursor@z:	
  4824                           ; 3 bytes @ 0x8
  4825                           
  4826  0078                     ___fttol@sign1:	
  4827                           ; 1 bytes @ 0x8
  4828                           
  4829  0078                     LCD_Write_String@i:	
  4830                           ; 1 bytes @ 0x8
  4831                           
  4832  0078                     ___awtoft@c:	
  4833                           ; 2 bytes @ 0x8
  4834                           
  4835                           
  4836                           ; 2 bytes @ 0x8
  4837  0078                     	ds	1
  4838  0079                     LCD_Set_Cursor@w:	
  4839  0079                     readAnalog@analog_channel:	
  4840                           ; 1 bytes @ 0x9
  4841                           
  4842  0079                     ___fttol@lval:	
  4843                           ; 2 bytes @ 0x9
  4844                           
  4845                           
  4846                           ; 4 bytes @ 0x9
  4847  0079                     	ds	1
  4848  007A                     LCD_Set_Cursor@temp:	
  4849                           
  4850                           ; 1 bytes @ 0xA
  4851  007A                     	ds	1
  4852  007B                     ??___awtoft:	
  4853  007B                     readAnalog@value:	
  4854                           ; 1 bytes @ 0xB
  4855                           
  4856                           
  4857                           ; 2 bytes @ 0xB
  4858  007B                     	ds	2
  4859  007D                     ___awtoft@sign:	
  4860  007D                     ___fttol@exp1:	
  4861                           ; 1 bytes @ 0xD
  4862                           
  4863                           
  4864                           ; 1 bytes @ 0xD
  4865  007D                     	ds	1
  4866  007E                     ??_eval_poly:	
  4867  007E                     ??_tempCalc:	
  4868                           ; 1 bytes @ 0xE
  4869                           
  4870  007E                     ??___ftsub:	
  4871                           ; 1 bytes @ 0xE
  4872                           
  4873                           
  4874                           	psect	cstackBANK0
  4875  0020                     __pcstackBANK0:	
  4876                           ; 1 bytes @ 0xE
  4877                           
  4878  0020                     ?_LCD_Write_Int:	
  4879  0020                     ?___ftmul:	
  4880                           ; 1 bytes @ 0x0
  4881                           
  4882  0020                     ___aldiv@counter:	
  4883                           ; 3 bytes @ 0x0
  4884                           
  4885  0020                     LCD_Write_Int@value:	
  4886                           ; 1 bytes @ 0x0
  4887                           
  4888  0020                     ___ftmul@f1:	
  4889                           ; 2 bytes @ 0x0
  4890                           
  4891                           
  4892                           ; 3 bytes @ 0x0
  4893  0020                     	ds	1
  4894  0021                     ___aldiv@sign:	
  4895                           
  4896                           ; 1 bytes @ 0x1
  4897  0021                     	ds	1
  4898  0022                     LCD_Write_Int@fieldLength:	
  4899  0022                     ___aldiv@quotient:	
  4900                           ; 1 bytes @ 0x2
  4901                           
  4902                           
  4903                           ; 4 bytes @ 0x2
  4904  0022                     	ds	1
  4905  0023                     LCD_Write_Int@numPlaces:	
  4906  0023                     ___ftmul@f2:	
  4907                           ; 1 bytes @ 0x3
  4908                           
  4909                           
  4910                           ; 3 bytes @ 0x3
  4911  0023                     	ds	1
  4912  0024                     LCD_Write_Int@sign:	
  4913                           
  4914                           ; 1 bytes @ 0x4
  4915  0024                     	ds	1
  4916  0025                     ??_LCD_Write_Int:	
  4917                           
  4918                           ; 1 bytes @ 0x5
  4919  0025                     	ds	1
  4920  0026                     ??___ftmul:	
  4921  0026                     ?_readAnalog:	
  4922                           ; 1 bytes @ 0x6
  4923                           
  4924  0026                     readAnalog@channel:	
  4925                           ; 2 bytes @ 0x6
  4926                           
  4927                           
  4928                           ; 2 bytes @ 0x6
  4929  0026                     	ds	2
  4930  0028                     ??_readAnalog:	
  4931                           
  4932                           ; 1 bytes @ 0x8
  4933  0028                     	ds	2
  4934  002A                     ___ftmul@exp:	
  4935  002A                     LCD_Write_Int@str:	
  4936                           ; 1 bytes @ 0xA
  4937                           
  4938                           
  4939                           ; 5 bytes @ 0xA
  4940  002A                     	ds	1
  4941  002B                     ___ftmul@f3_as_product:	
  4942                           
  4943                           ; 3 bytes @ 0xB
  4944  002B                     	ds	3
  4945  002E                     ___ftmul@cntr:	
  4946                           
  4947                           ; 1 bytes @ 0xE
  4948  002E                     	ds	1
  4949  002F                     ___ftmul@sign:	
  4950  002F                     LCD_Write_Int@j:	
  4951                           ; 1 bytes @ 0xF
  4952                           
  4953                           
  4954                           ; 2 bytes @ 0xF
  4955  002F                     	ds	1
  4956  0030                     ?___ftdiv:	
  4957  0030                     ___ftdiv@f2:	
  4958                           ; 3 bytes @ 0x10
  4959                           
  4960                           
  4961                           ; 3 bytes @ 0x10
  4962  0030                     	ds	1
  4963  0031                     LCD_Write_Int@i:	
  4964                           
  4965                           ; 2 bytes @ 0x11
  4966  0031                     	ds	2
  4967  0033                     ___ftdiv@f1:	
  4968                           
  4969                           ; 3 bytes @ 0x13
  4970  0033                     	ds	3
  4971  0036                     ??___ftdiv:	
  4972                           
  4973                           ; 1 bytes @ 0x16
  4974  0036                     	ds	4
  4975  003A                     ___ftdiv@cntr:	
  4976                           
  4977                           ; 1 bytes @ 0x1A
  4978  003A                     	ds	1
  4979  003B                     ___ftdiv@f3:	
  4980                           
  4981                           ; 3 bytes @ 0x1B
  4982  003B                     	ds	3
  4983  003E                     ___ftdiv@exp:	
  4984                           
  4985                           ; 1 bytes @ 0x1E
  4986  003E                     	ds	1
  4987  003F                     ___ftdiv@sign:	
  4988                           
  4989                           ; 1 bytes @ 0x1F
  4990  003F                     	ds	1
  4991  0040                     ?___ftadd:	
  4992  0040                     ___ftadd@f1:	
  4993                           ; 3 bytes @ 0x20
  4994                           
  4995                           
  4996                           ; 3 bytes @ 0x20
  4997  0040                     	ds	3
  4998  0043                     ___ftadd@f2:	
  4999                           
  5000                           ; 3 bytes @ 0x23
  5001  0043                     	ds	3
  5002  0046                     ??___ftadd:	
  5003                           
  5004                           ; 1 bytes @ 0x26
  5005  0046                     	ds	4
  5006  004A                     ___ftadd@sign:	
  5007                           
  5008                           ; 1 bytes @ 0x2A
  5009  004A                     	ds	1
  5010  004B                     ___ftadd@exp2:	
  5011                           
  5012                           ; 1 bytes @ 0x2B
  5013  004B                     	ds	1
  5014  004C                     ___ftadd@exp1:	
  5015                           
  5016                           ; 1 bytes @ 0x2C
  5017  004C                     	ds	1
  5018  004D                     ?_eval_poly:	
  5019  004D                     ?___ftsub:	
  5020                           ; 3 bytes @ 0x2D
  5021                           
  5022  004D                     ___ftsub@f2:	
  5023                           ; 3 bytes @ 0x2D
  5024                           
  5025  004D                     eval_poly@x:	
  5026                           ; 3 bytes @ 0x2D
  5027                           
  5028                           
  5029                           ; 3 bytes @ 0x2D
  5030  004D                     	ds	3
  5031  0050                     eval_poly@d:	
  5032  0050                     ___ftsub@f1:	
  5033                           ; 2 bytes @ 0x30
  5034                           
  5035                           
  5036                           ; 3 bytes @ 0x30
  5037  0050                     	ds	2
  5038  0052                     eval_poly@n:	
  5039                           
  5040                           ; 2 bytes @ 0x32
  5041  0052                     	ds	2
  5042  0054                     eval_poly@res:	
  5043                           
  5044                           ; 3 bytes @ 0x34
  5045  0054                     	ds	3
  5046  0057                     ?_log:	
  5047  0057                     log@x:	
  5048                           ; 3 bytes @ 0x37
  5049                           
  5050                           
  5051                           ; 3 bytes @ 0x37
  5052  0057                     	ds	3
  5053  005A                     ??_log:	
  5054                           
  5055                           ; 1 bytes @ 0x3A
  5056  005A                     	ds	1
  5057  005B                     log@exponent:	
  5058                           
  5059                           ; 2 bytes @ 0x3B
  5060  005B                     	ds	2
  5061  005D                     ?_tempCalc:	
  5062  005D                     tempCalc@analogValue:	
  5063                           ; 3 bytes @ 0x3D
  5064                           
  5065                           
  5066                           ; 2 bytes @ 0x3D
  5067  005D                     	ds	3
  5068  0060                     tempCalc@R:	
  5069                           
  5070                           ; 3 bytes @ 0x40
  5071  0060                     	ds	3
  5072  0063                     _tempCalc$960:	
  5073                           
  5074                           ; 3 bytes @ 0x43
  5075  0063                     	ds	3
  5076  0066                     tempCalc@steinhart:	
  5077                           
  5078                           ; 3 bytes @ 0x46
  5079  0066                     	ds	3
  5080  0069                     ??_main:	
  5081                           
  5082                           ; 1 bytes @ 0x49
  5083  0069                     	ds	3
  5084                           
  5085                           	psect	maintext
  5086  0311                     __pmaintext:	
  5087 ;;
  5088 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  5089 ;;
  5090 ;; *************** function _main *****************
  5091 ;; Defined at:
  5092 ;;		line 13 in file "main.c"
  5093 ;; Parameters:    Size  Location     Type
  5094 ;;		None
  5095 ;; Auto vars:     Size  Location     Type
  5096 ;;  analogs        12    0[BANK1 ] unsigned int [6]
  5097 ;;  x               8   18[BANK1 ] unsigned char [8]
  5098 ;;  displayTemp2    3   15[BANK1 ] float 
  5099 ;;  displayTemp     3   12[BANK1 ] float 
  5100 ;;  dutyCycle       2   26[BANK1 ] unsigned int 
  5101 ;; Return value:  Size  Location     Type
  5102 ;;                  1    wreg      void 
  5103 ;; Registers used:
  5104 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5105 ;; Tracked objects:
  5106 ;;		On entry : B1F/0
  5107 ;;		On exit  : 0/0
  5108 ;;		Unchanged: 0/0
  5109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5111 ;;      Locals:         0       0      28       0       0       0       0       0       0       0       0       0       
      +0       0
  5112 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5113 ;;      Totals:         0       3      28       0       0       0       0       0       0       0       0       0       
      +0       0
  5114 ;;Total ram usage:       31 bytes
  5115 ;; Hardware stack levels required when called:    5
  5116 ;; This function calls:
  5117 ;;		_ADCRead
  5118 ;;		_LCD_Clear
  5119 ;;		_LCD_Set_Cursor
  5120 ;;		_LCD_Write_Char
  5121 ;;		_LCD_Write_Int
  5122 ;;		_LCD_Write_String
  5123 ;;		_PWM6_LoadDutyValue
  5124 ;;		_SYSTEM_Initialize
  5125 ;;		___ftadd
  5126 ;;		___ftdiv
  5127 ;;		___ftmul
  5128 ;;		___fttol
  5129 ;;		___lwdiv
  5130 ;;		_readAnalog
  5131 ;;		_tempCalc
  5132 ;; This function is called by:
  5133 ;;		Startup code after reset
  5134 ;; This function uses a non-reentrant model
  5135 ;;
  5136                           
  5137                           
  5138                           ;psect for function _main
  5139  0311                     _main:	
  5140                           
  5141                           ;main.c: 15: SYSTEM_Initialize();
  5142                           
  5143                           ;incstack = 0
  5144                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5145  0311  318A  2200  3183   	fcall	_SYSTEM_Initialize
  5146                           
  5147                           ;main.c: 17: uint16_t analogs[6] = {0};
  5148  0314  3038               	movlw	low main@F13657
  5149  0315  0086               	movwf	6
  5150  0316  3001               	movlw	high main@F13657
  5151  0317  0087               	movwf	7
  5152  0318  30BD               	movlw	low main@analogs
  5153  0319  0084               	movwf	4
  5154  031A  3000               	movlw	high main@analogs
  5155  031B  0085               	movwf	5
  5156  031C  300C               	movlw	12
  5157  031D  0020               	movlb	0	; select bank0
  5158  031E  00E9               	movwf	??_main
  5159  031F                     u3210:	
  5160  031F  0016               	moviw fsr1++
  5161  0320  001A               	movwi fsr0++
  5162  0321  0BE9               	decfsz	??_main,f
  5163  0322  2B1F               	goto	u3210
  5164                           
  5165                           ;main.c: 19: float displayTemp, displayTemp2;
  5166                           ;main.c: 21: unsigned char x[8] = {0,64,2,0,0,0,0,10};
  5167  0323  30E5               	movlw	low main@F13661
  5168  0324  0086               	movwf	6
  5169  0325  3000               	movlw	high main@F13661
  5170  0326  0087               	movwf	7
  5171  0327  30CF               	movlw	low main@x
  5172  0328  0084               	movwf	4
  5173  0329  3000               	movlw	high main@x
  5174  032A  0085               	movwf	5
  5175  032B  3008               	movlw	8
  5176  032C  00E9               	movwf	??_main
  5177  032D                     u3220:	
  5178  032D  0016               	moviw fsr1++
  5179  032E  001A               	movwi fsr0++
  5180  032F  0BE9               	decfsz	??_main,f
  5181  0330  2B2D               	goto	u3220
  5182                           
  5183                           ;main.c: 23: uint16_t dutyCycle = 1023;
  5184  0331  30FF               	movlw	255
  5185  0332  0021               	movlb	1	; select bank1
  5186  0333  00D7               	movwf	main@dutyCycle^(0+128)
  5187  0334  3003               	movlw	3
  5188  0335  00D8               	movwf	(main@dutyCycle^(0+128)+1)
  5189                           
  5190                           ;main.c: 25: PWM6_LoadDutyValue(dutyCycle);
  5191  0336  0858               	movf	(main@dutyCycle+1)^(0+128),w
  5192  0337  00F1               	movwf	PWM6_LoadDutyValue@dutyCycle+1
  5193  0338  0857               	movf	main@dutyCycle^(0+128),w
  5194  0339  00F0               	movwf	PWM6_LoadDutyValue@dutyCycle
  5195  033A  3197  27BA  3183   	fcall	_PWM6_LoadDutyValue
  5196                           
  5197                           ;main.c: 27: _delay((unsigned long)((300)*(32000000/4000.0)));
  5198  033D  300D               	movlw	13
  5199  033E  0020               	movlb	0	; select bank0
  5200  033F  00EB               	movwf	??_main+2
  5201  0340  302D               	movlw	45
  5202  0341  00EA               	movwf	??_main+1
  5203  0342  30E2               	movlw	226
  5204  0343  00E9               	movwf	??_main
  5205  0344                     u3497:	
  5206  0344  0BE9               	decfsz	??_main,f
  5207  0345  2B44               	goto	u3497
  5208  0346  0BEA               	decfsz	??_main+1,f
  5209  0347  2B44               	goto	u3497
  5210  0348  0BEB               	decfsz	??_main+2,f
  5211  0349  2B44               	goto	u3497
  5212  034A  3200               	nop2
  5213                           
  5214                           ;main.c: 29: LCD_Clear();
  5215  034B  3180  2004  3183   	fcall	_LCD_Clear
  5216                           
  5217                           ;main.c: 31: { LCD_Set_Cursor(2,1); LCD_Write_String("A");};
  5218  034E  01F4               	clrf	LCD_Set_Cursor@y
  5219  034F  0AF4               	incf	LCD_Set_Cursor@y,f
  5220  0350  3002               	movlw	2
  5221  0351  3189  21C1  3183   	fcall	_LCD_Set_Cursor
  5222  0354  303A               	movlw	low (STR_1| (0+32768))
  5223  0355  00F5               	movwf	LCD_Write_String@a
  5224  0356  3090               	movlw	high (STR_1| (0+32768))
  5225  0357  00F6               	movwf	LCD_Write_String@a+1
  5226  0358  3188  2002  3183   	fcall	_LCD_Write_String
  5227                           
  5228                           ;main.c: 32: _delay((unsigned long)((200)*(32000000/4000.0)));
  5229  035B  3009               	movlw	9
  5230  035C  0020               	movlb	0	; select bank0
  5231  035D  00EB               	movwf	??_main+2
  5232  035E  301E               	movlw	30
  5233  035F  00EA               	movwf	??_main+1
  5234  0360  30EB               	movlw	235
  5235  0361  00E9               	movwf	??_main
  5236  0362                     u3507:	
  5237  0362  0BE9               	decfsz	??_main,f
  5238  0363  2B62               	goto	u3507
  5239  0364  0BEA               	decfsz	??_main+1,f
  5240  0365  2B62               	goto	u3507
  5241  0366  0BEB               	decfsz	??_main+2,f
  5242  0367  2B62               	goto	u3507
  5243  0368  0000               	nop
  5244                           
  5245                           ;main.c: 33: { LCD_Set_Cursor(3,1); LCD_Write_String("L");};
  5246  0369  01F4               	clrf	LCD_Set_Cursor@y
  5247  036A  0AF4               	incf	LCD_Set_Cursor@y,f
  5248  036B  3003               	movlw	3
  5249  036C  3189  21C1  3183   	fcall	_LCD_Set_Cursor
  5250  036F  3042               	movlw	low (STR_2| (0+32768))
  5251  0370  00F5               	movwf	LCD_Write_String@a
  5252  0371  3090               	movlw	high (STR_2| (0+32768))
  5253  0372  00F6               	movwf	LCD_Write_String@a+1
  5254  0373  3188  2002  3183   	fcall	_LCD_Write_String
  5255                           
  5256                           ;main.c: 34: _delay((unsigned long)((200)*(32000000/4000.0)));
  5257  0376  3009               	movlw	9
  5258  0377  0020               	movlb	0	; select bank0
  5259  0378  00EB               	movwf	??_main+2
  5260  0379  301E               	movlw	30
  5261  037A  00EA               	movwf	??_main+1
  5262  037B  30EB               	movlw	235
  5263  037C  00E9               	movwf	??_main
  5264  037D                     u3517:	
  5265  037D  0BE9               	decfsz	??_main,f
  5266  037E  2B7D               	goto	u3517
  5267  037F  0BEA               	decfsz	??_main+1,f
  5268  0380  2B7D               	goto	u3517
  5269  0381  0BEB               	decfsz	??_main+2,f
  5270  0382  2B7D               	goto	u3517
  5271  0383  0000               	nop
  5272                           
  5273                           ;main.c: 35: { LCD_Set_Cursor(4,1); LCD_Write_String("O");};
  5274  0384  01F4               	clrf	LCD_Set_Cursor@y
  5275  0385  0AF4               	incf	LCD_Set_Cursor@y,f
  5276  0386  3004               	movlw	4
  5277  0387  3189  21C1  3183   	fcall	_LCD_Set_Cursor
  5278  038A  3044               	movlw	low (STR_3| (0+32768))
  5279  038B  00F5               	movwf	LCD_Write_String@a
  5280  038C  3090               	movlw	high (STR_3| (0+32768))
  5281  038D  00F6               	movwf	LCD_Write_String@a+1
  5282  038E  3188  2002  3183   	fcall	_LCD_Write_String
  5283                           
  5284                           ;main.c: 36: _delay((unsigned long)((200)*(32000000/4000.0)));
  5285  0391  3009               	movlw	9
  5286  0392  0020               	movlb	0	; select bank0
  5287  0393  00EB               	movwf	??_main+2
  5288  0394  301E               	movlw	30
  5289  0395  00EA               	movwf	??_main+1
  5290  0396  30EB               	movlw	235
  5291  0397  00E9               	movwf	??_main
  5292  0398                     u3527:	
  5293  0398  0BE9               	decfsz	??_main,f
  5294  0399  2B98               	goto	u3527
  5295  039A  0BEA               	decfsz	??_main+1,f
  5296  039B  2B98               	goto	u3527
  5297  039C  0BEB               	decfsz	??_main+2,f
  5298  039D  2B98               	goto	u3527
  5299  039E  0000               	nop
  5300                           
  5301                           ;main.c: 37: { LCD_Set_Cursor(5,1); LCD_Write_String("H");};
  5302  039F  01F4               	clrf	LCD_Set_Cursor@y
  5303  03A0  0AF4               	incf	LCD_Set_Cursor@y,f
  5304  03A1  3005               	movlw	5
  5305  03A2  3189  21C1  3183   	fcall	_LCD_Set_Cursor
  5306  03A5  303E               	movlw	low (STR_4| (0+32768))
  5307  03A6  00F5               	movwf	LCD_Write_String@a
  5308  03A7  3090               	movlw	high (STR_4| (0+32768))
  5309  03A8  00F6               	movwf	LCD_Write_String@a+1
  5310  03A9  3188  2002  3183   	fcall	_LCD_Write_String
  5311                           
  5312                           ;main.c: 38: _delay((unsigned long)((200)*(32000000/4000.0)));
  5313  03AC  3009               	movlw	9
  5314  03AD  0020               	movlb	0	; select bank0
  5315  03AE  00EB               	movwf	??_main+2
  5316  03AF  301E               	movlw	30
  5317  03B0  00EA               	movwf	??_main+1
  5318  03B1  30EB               	movlw	235
  5319  03B2  00E9               	movwf	??_main
  5320  03B3                     u3537:	
  5321  03B3  0BE9               	decfsz	??_main,f
  5322  03B4  2BB3               	goto	u3537
  5323  03B5  0BEA               	decfsz	??_main+1,f
  5324  03B6  2BB3               	goto	u3537
  5325  03B7  0BEB               	decfsz	??_main+2,f
  5326  03B8  2BB3               	goto	u3537
  5327  03B9  0000               	nop
  5328                           
  5329                           ;main.c: 39: { LCD_Set_Cursor(6,1); LCD_Write_String("A");};
  5330  03BA  01F4               	clrf	LCD_Set_Cursor@y
  5331  03BB  0AF4               	incf	LCD_Set_Cursor@y,f
  5332  03BC  3006               	movlw	6
  5333  03BD  3189  21C1  3183   	fcall	_LCD_Set_Cursor
  5334  03C0  303A               	movlw	low (STR_1| (0+32768))
  5335  03C1  00F5               	movwf	LCD_Write_String@a
  5336  03C2  3090               	movlw	high (STR_1| (0+32768))
  5337  03C3  00F6               	movwf	LCD_Write_String@a+1
  5338  03C4  3188  2002  3183   	fcall	_LCD_Write_String
  5339                           
  5340                           ;main.c: 40: _delay((unsigned long)((200)*(32000000/4000.0)));
  5341  03C7  3009               	movlw	9
  5342  03C8  0020               	movlb	0	; select bank0
  5343  03C9  00EB               	movwf	??_main+2
  5344  03CA  301E               	movlw	30
  5345  03CB  00EA               	movwf	??_main+1
  5346  03CC  30EB               	movlw	235
  5347  03CD  00E9               	movwf	??_main
  5348  03CE                     u3547:	
  5349  03CE  0BE9               	decfsz	??_main,f
  5350  03CF  2BCE               	goto	u3547
  5351  03D0  0BEA               	decfsz	??_main+1,f
  5352  03D1  2BCE               	goto	u3547
  5353  03D2  0BEB               	decfsz	??_main+2,f
  5354  03D3  2BCE               	goto	u3547
  5355  03D4  0000               	nop
  5356                           
  5357                           ;main.c: 41: { LCD_Set_Cursor(7,1); LCD_Write_String(" ");};
  5358  03D5  01F4               	clrf	LCD_Set_Cursor@y
  5359  03D6  0AF4               	incf	LCD_Set_Cursor@y,f
  5360  03D7  3007               	movlw	7
  5361  03D8  3189  21C1  3183   	fcall	_LCD_Set_Cursor
  5362  03DB  3036               	movlw	low (STR_6| (0+32768))
  5363  03DC  00F5               	movwf	LCD_Write_String@a
  5364  03DD  3090               	movlw	high (STR_6| (0+32768))
  5365  03DE  00F6               	movwf	LCD_Write_String@a+1
  5366  03DF  3188  2002  3183   	fcall	_LCD_Write_String
  5367                           
  5368                           ;main.c: 42: _delay((unsigned long)((200)*(32000000/4000.0)));
  5369  03E2  3009               	movlw	9
  5370  03E3  0020               	movlb	0	; select bank0
  5371  03E4  00EB               	movwf	??_main+2
  5372  03E5  301E               	movlw	30
  5373  03E6  00EA               	movwf	??_main+1
  5374  03E7  30EB               	movlw	235
  5375  03E8  00E9               	movwf	??_main
  5376  03E9                     u3557:	
  5377  03E9  0BE9               	decfsz	??_main,f
  5378  03EA  2BE9               	goto	u3557
  5379  03EB  0BEA               	decfsz	??_main+1,f
  5380  03EC  2BE9               	goto	u3557
  5381  03ED  0BEB               	decfsz	??_main+2,f
  5382  03EE  2BE9               	goto	u3557
  5383  03EF  0000               	nop
  5384                           
  5385                           ;main.c: 43: { LCD_Set_Cursor(8,1); LCD_Write_String("D");};
  5386  03F0  01F4               	clrf	LCD_Set_Cursor@y
  5387  03F1  0AF4               	incf	LCD_Set_Cursor@y,f
  5388  03F2  3008               	movlw	8
  5389  03F3  3189  21C1  3183   	fcall	_LCD_Set_Cursor
  5390  03F6  303C               	movlw	low (STR_7| (0+32768))
  5391  03F7  00F5               	movwf	LCD_Write_String@a
  5392  03F8  3090               	movlw	high (STR_7| (0+32768))
  5393  03F9  00F6               	movwf	LCD_Write_String@a+1
  5394  03FA  3188  2002  3183   	fcall	_LCD_Write_String
  5395                           
  5396                           ;main.c: 44: _delay((unsigned long)((200)*(32000000/4000.0)));
  5397  03FD  3009               	movlw	9
  5398  03FE  0020               	movlb	0	; select bank0
  5399  03FF  00EB               	movwf	??_main+2
  5400  0400  301E               	movlw	30
  5401  0401  00EA               	movwf	??_main+1
  5402  0402  30EB               	movlw	235
  5403  0403  00E9               	movwf	??_main
  5404  0404                     u3567:	
  5405  0404  0BE9               	decfsz	??_main,f
  5406  0405  2C04               	goto	u3567
  5407  0406  0BEA               	decfsz	??_main+1,f
  5408  0407  2C04               	goto	u3567
  5409  0408  0BEB               	decfsz	??_main+2,f
  5410  0409  2C04               	goto	u3567
  5411  040A  0000               	nop
  5412                           
  5413                           ;main.c: 45: { LCD_Set_Cursor(9,1); LCD_Write_String("A");};
  5414  040B  01F4               	clrf	LCD_Set_Cursor@y
  5415  040C  0AF4               	incf	LCD_Set_Cursor@y,f
  5416  040D  3009               	movlw	9
  5417  040E  3189  21C1  3183   	fcall	_LCD_Set_Cursor
  5418  0411  303A               	movlw	low (STR_1| (0+32768))
  5419  0412  00F5               	movwf	LCD_Write_String@a
  5420  0413  3090               	movlw	high (STR_1| (0+32768))
  5421  0414  00F6               	movwf	LCD_Write_String@a+1
  5422  0415  3188  2002  3183   	fcall	_LCD_Write_String
  5423                           
  5424                           ;main.c: 46: _delay((unsigned long)((200)*(32000000/4000.0)));
  5425  0418  3009               	movlw	9
  5426  0419  0020               	movlb	0	; select bank0
  5427  041A  00EB               	movwf	??_main+2
  5428  041B  301E               	movlw	30
  5429  041C  00EA               	movwf	??_main+1
  5430  041D  30EB               	movlw	235
  5431  041E  00E9               	movwf	??_main
  5432  041F                     u3577:	
  5433  041F  0BE9               	decfsz	??_main,f
  5434  0420  2C1F               	goto	u3577
  5435  0421  0BEA               	decfsz	??_main+1,f
  5436  0422  2C1F               	goto	u3577
  5437  0423  0BEB               	decfsz	??_main+2,f
  5438  0424  2C1F               	goto	u3577
  5439  0425  0000               	nop
  5440                           
  5441                           ;main.c: 47: { LCD_Set_Cursor(10,1); LCD_Write_String("V");};
  5442  0426  01F4               	clrf	LCD_Set_Cursor@y
  5443  0427  0AF4               	incf	LCD_Set_Cursor@y,f
  5444  0428  300A               	movlw	10
  5445  0429  3189  21C1  3183   	fcall	_LCD_Set_Cursor
  5446  042C  3046               	movlw	low (STR_9| (0+32768))
  5447  042D  00F5               	movwf	LCD_Write_String@a
  5448  042E  3090               	movlw	high (STR_9| (0+32768))
  5449  042F  00F6               	movwf	LCD_Write_String@a+1
  5450  0430  3188  2002  3183   	fcall	_LCD_Write_String
  5451                           
  5452                           ;main.c: 48: _delay((unsigned long)((200)*(32000000/4000.0)));
  5453  0433  3009               	movlw	9
  5454  0434  0020               	movlb	0	; select bank0
  5455  0435  00EB               	movwf	??_main+2
  5456  0436  301E               	movlw	30
  5457  0437  00EA               	movwf	??_main+1
  5458  0438  30EB               	movlw	235
  5459  0439  00E9               	movwf	??_main
  5460  043A                     u3587:	
  5461  043A  0BE9               	decfsz	??_main,f
  5462  043B  2C3A               	goto	u3587
  5463  043C  0BEA               	decfsz	??_main+1,f
  5464  043D  2C3A               	goto	u3587
  5465  043E  0BEB               	decfsz	??_main+2,f
  5466  043F  2C3A               	goto	u3587
  5467  0440  0000               	nop
  5468                           
  5469                           ;main.c: 49: { LCD_Set_Cursor(11,1); LCD_Write_String("I");};
  5470  0441  01F4               	clrf	LCD_Set_Cursor@y
  5471  0442  0AF4               	incf	LCD_Set_Cursor@y,f
  5472  0443  300B               	movlw	11
  5473  0444  3189  21C1  3183   	fcall	_LCD_Set_Cursor
  5474  0447  3040               	movlw	low (STR_10| (0+32768))
  5475  0448  00F5               	movwf	LCD_Write_String@a
  5476  0449  3090               	movlw	high (STR_10| (0+32768))
  5477  044A  00F6               	movwf	LCD_Write_String@a+1
  5478  044B  3188  2002  3183   	fcall	_LCD_Write_String
  5479                           
  5480                           ;main.c: 50: _delay((unsigned long)((200)*(32000000/4000.0)));
  5481  044E  3009               	movlw	9
  5482  044F  0020               	movlb	0	; select bank0
  5483  0450  00EB               	movwf	??_main+2
  5484  0451  301E               	movlw	30
  5485  0452  00EA               	movwf	??_main+1
  5486  0453  30EB               	movlw	235
  5487  0454  00E9               	movwf	??_main
  5488  0455                     u3597:	
  5489  0455  0BE9               	decfsz	??_main,f
  5490  0456  2C55               	goto	u3597
  5491  0457  0BEA               	decfsz	??_main+1,f
  5492  0458  2C55               	goto	u3597
  5493  0459  0BEB               	decfsz	??_main+2,f
  5494  045A  2C55               	goto	u3597
  5495  045B  0000               	nop
  5496                           
  5497                           ;main.c: 51: { LCD_Set_Cursor(12,1); LCD_Write_String("D");};
  5498  045C  01F4               	clrf	LCD_Set_Cursor@y
  5499  045D  0AF4               	incf	LCD_Set_Cursor@y,f
  5500  045E  300C               	movlw	12
  5501  045F  3189  21C1  3183   	fcall	_LCD_Set_Cursor
  5502  0462  303C               	movlw	low (STR_7| (0+32768))
  5503  0463  00F5               	movwf	LCD_Write_String@a
  5504  0464  3090               	movlw	high (STR_7| (0+32768))
  5505  0465  00F6               	movwf	LCD_Write_String@a+1
  5506  0466  3188  2002  3183   	fcall	_LCD_Write_String
  5507                           
  5508                           ;main.c: 52: _delay((unsigned long)((200)*(32000000/4000.0)));
  5509  0469  3009               	movlw	9
  5510  046A  0020               	movlb	0	; select bank0
  5511  046B  00EB               	movwf	??_main+2
  5512  046C  301E               	movlw	30
  5513  046D  00EA               	movwf	??_main+1
  5514  046E  30EB               	movlw	235
  5515  046F  00E9               	movwf	??_main
  5516  0470                     u3607:	
  5517  0470  0BE9               	decfsz	??_main,f
  5518  0471  2C70               	goto	u3607
  5519  0472  0BEA               	decfsz	??_main+1,f
  5520  0473  2C70               	goto	u3607
  5521  0474  0BEB               	decfsz	??_main+2,f
  5522  0475  2C70               	goto	u3607
  5523  0476  0000               	nop
  5524                           
  5525                           ;main.c: 53: { LCD_Set_Cursor(13,1); LCD_Write_String("!");};
  5526  0477  01F4               	clrf	LCD_Set_Cursor@y
  5527  0478  0AF4               	incf	LCD_Set_Cursor@y,f
  5528  0479  300D               	movlw	13
  5529  047A  3189  21C1  3183   	fcall	_LCD_Set_Cursor
  5530  047D  3038               	movlw	low (STR_12| (0+32768))
  5531  047E  00F5               	movwf	LCD_Write_String@a
  5532  047F  3090               	movlw	high (STR_12| (0+32768))
  5533  0480  00F6               	movwf	LCD_Write_String@a+1
  5534  0481  3188  2002  3183   	fcall	_LCD_Write_String
  5535                           
  5536                           ;main.c: 54: _delay((unsigned long)((5000)*(32000000/4000.0)));
  5537  0484  30CB               	movlw	203
  5538  0485  0020               	movlb	0	; select bank0
  5539  0486  00EB               	movwf	??_main+2
  5540  0487  30ED               	movlw	237
  5541  0488  00EA               	movwf	??_main+1
  5542  0489  304C               	movlw	76
  5543  048A  00E9               	movwf	??_main
  5544  048B                     u3617:	
  5545  048B  0BE9               	decfsz	??_main,f
  5546  048C  2C8B               	goto	u3617
  5547  048D  0BEA               	decfsz	??_main+1,f
  5548  048E  2C8B               	goto	u3617
  5549  048F  0BEB               	decfsz	??_main+2,f
  5550  0490  2C8B               	goto	u3617
  5551  0491  3200               	nop2
  5552                           
  5553                           ;main.c: 56: LCD_Clear();
  5554  0492  3180  2004  3183   	fcall	_LCD_Clear
  5555                           
  5556                           ;main.c: 58: PWM6_LoadDutyValue(dutyCycle);
  5557  0495  0021               	movlb	1	; select bank1
  5558  0496  0858               	movf	(main@dutyCycle+1)^(0+128),w
  5559  0497  00F1               	movwf	PWM6_LoadDutyValue@dutyCycle+1
  5560  0498  0857               	movf	main@dutyCycle^(0+128),w
  5561  0499  00F0               	movwf	PWM6_LoadDutyValue@dutyCycle
  5562  049A  3197  27BA  3183   	fcall	_PWM6_LoadDutyValue
  5563  049D                     l2840:	
  5564                           ;main.c: 61: while (1)
  5565                           
  5566                           
  5567                           ;main.c: 62: {
  5568                           ;main.c: 64: for(x[0]=0;x[0]<6;x[0]++) analogs[x[0]]=readAnalog(x[0]);
  5569  049D  0021               	movlb	1	; select bank1
  5570  049E  01CF               	clrf	main@x^(0+128)
  5571  049F                     l2846:	
  5572  049F  3006               	movlw	6
  5573  04A0  024F               	subwf	main@x^(0+128),w
  5574  04A1  1803               	btfsc	3,0
  5575  04A2  2CBE               	goto	l2848
  5576  04A3  084F               	movf	main@x^(0+128),w
  5577  04A4  0020               	movlb	0	; select bank0
  5578  04A5  00E9               	movwf	??_main
  5579  04A6  01EA               	clrf	??_main+1
  5580  04A7  0869               	movf	??_main,w
  5581  04A8  00A6               	movwf	readAnalog@channel
  5582  04A9  086A               	movf	??_main+1,w
  5583  04AA  00A7               	movwf	readAnalog@channel+1
  5584  04AB  3181  21E1  3183   	fcall	_readAnalog
  5585  04AE  0021               	movlb	1	; select bank1
  5586  04AF  354F               	lslf	main@x^(0+128),w
  5587  04B0  3EBD               	addlw	(low (main@analogs| 0))& (0+255)
  5588  04B1  0086               	movwf	6
  5589  04B2  0187               	clrf	7
  5590  04B3  0020               	movlb	0	; select bank0
  5591  04B4  0826               	movf	?_readAnalog,w
  5592  04B5  3FC0               	movwi [0]fsr1
  5593  04B6  0827               	movf	?_readAnalog+1,w
  5594  04B7  3FC1               	movwi [1]fsr1
  5595  04B8  3001               	movlw	1
  5596  04B9  00E9               	movwf	??_main
  5597  04BA  0869               	movf	??_main,w
  5598  04BB  0021               	movlb	1	; select bank1
  5599  04BC  07CF               	addwf	main@x^(0+128),f
  5600  04BD  2C9F               	goto	l2846
  5601  04BE                     l2848:	
  5602                           
  5603                           ;main.c: 66: if(analogs[0]<1020)x[7]+=1;
  5604  04BE  3003               	movlw	3
  5605  04BF  023E               	subwf	(main@analogs+1)^(0+128),w
  5606  04C0  30FC               	movlw	252
  5607  04C1  1903               	skipnz
  5608  04C2  023D               	subwf	main@analogs^(0+128),w
  5609  04C3  1803               	skipnc
  5610  04C4  2CCB               	goto	l2852
  5611  04C5  3001               	movlw	1
  5612  04C6  0020               	movlb	0	; select bank0
  5613  04C7  00E9               	movwf	??_main
  5614  04C8  0869               	movf	??_main,w
  5615  04C9  0021               	movlb	1	; select bank1
  5616  04CA  07D6               	addwf	(main@x^(0+128)+7),f
  5617  04CB                     l2852:	
  5618                           
  5619                           ;main.c: 69: if(analogs[1]<900)x[7]-=1;
  5620  04CB  3003               	movlw	3
  5621  04CC  0240               	subwf	((main@analogs+1)^(0+128)+2),w
  5622  04CD  3084               	movlw	132
  5623  04CE  1903               	skipnz
  5624  04CF  023F               	subwf	(main@analogs^(0+128)+2),w
  5625  04D0  1803               	skipnc
  5626  04D1  2CD4               	goto	l294
  5627  04D2  3001               	movlw	1
  5628  04D3  02D6               	subwf	(main@x^(0+128)+7),f
  5629  04D4                     l294:	
  5630                           
  5631                           ;main.c: 71: if(x[7]<1)
  5632  04D4  0856               	movf	(main@x^(0+128)+7),w
  5633  04D5  1D03               	btfss	3,2
  5634  04D6  2CDF               	goto	l295
  5635                           
  5636                           ;main.c: 72: {
  5637                           ;main.c: 73: x[2]=1;
  5638  04D7  01D1               	clrf	(main@x^(0+128)+2)
  5639  04D8  0AD1               	incf	(main@x^(0+128)+2),f
  5640                           
  5641                           ;main.c: 74: x[7]=10;
  5642  04D9  300A               	movlw	10
  5643  04DA  0020               	movlb	0	; select bank0
  5644  04DB  00E9               	movwf	??_main
  5645  04DC  0869               	movf	??_main,w
  5646  04DD  0021               	movlb	1	; select bank1
  5647  04DE  00D6               	movwf	(main@x^(0+128)+7)
  5648  04DF                     l295:	
  5649                           
  5650                           ;main.c: 75: }
  5651                           ;main.c: 77: if(x[7]>19)
  5652  04DF  3014               	movlw	20
  5653  04E0  0256               	subwf	(main@x^(0+128)+7),w
  5654  04E1  1C03               	skipc
  5655  04E2  2CEA               	goto	l2864
  5656                           
  5657                           ;main.c: 78: {
  5658                           ;main.c: 79: x[2]=0;
  5659  04E3  01D1               	clrf	(main@x^(0+128)+2)
  5660                           
  5661                           ;main.c: 80: x[7]=10;
  5662  04E4  300A               	movlw	10
  5663  04E5  0020               	movlb	0	; select bank0
  5664  04E6  00E9               	movwf	??_main
  5665  04E7  0869               	movf	??_main,w
  5666  04E8  0021               	movlb	1	; select bank1
  5667  04E9  00D6               	movwf	(main@x^(0+128)+7)
  5668  04EA                     l2864:	
  5669                           
  5670                           ;main.c: 81: }
  5671                           ;main.c: 83: if(analogs[0]<1020&&analogs[1]<970)
  5672  04EA  3003               	movlw	3
  5673  04EB  023E               	subwf	(main@analogs+1)^(0+128),w
  5674  04EC  30FC               	movlw	252
  5675  04ED  1903               	skipnz
  5676  04EE  023D               	subwf	main@analogs^(0+128),w
  5677  04EF  1803               	skipnc
  5678  04F0  2D0C               	goto	l2870
  5679  04F1  3003               	movlw	3
  5680  04F2  0240               	subwf	((main@analogs+1)^(0+128)+2),w
  5681  04F3  30CA               	movlw	202
  5682  04F4  1903               	skipnz
  5683  04F5  023F               	subwf	(main@analogs^(0+128)+2),w
  5684  04F6  1803               	skipnc
  5685  04F7  2D0C               	goto	l2870
  5686                           
  5687                           ;main.c: 84: {
  5688                           ;main.c: 85: x[2]=2;
  5689  04F8  3002               	movlw	2
  5690  04F9  0020               	movlb	0	; select bank0
  5691  04FA  00E9               	movwf	??_main
  5692  04FB  0869               	movf	??_main,w
  5693  04FC  0021               	movlb	1	; select bank1
  5694  04FD  00D1               	movwf	(main@x^(0+128)+2)
  5695                           
  5696                           ;main.c: 86: _delay((unsigned long)((200)*(32000000/4000.0)));
  5697  04FE  3009               	movlw	9
  5698  04FF  0020               	movlb	0	; select bank0
  5699  0500  00EB               	movwf	??_main+2
  5700  0501  301E               	movlw	30
  5701  0502  00EA               	movwf	??_main+1
  5702  0503  30EB               	movlw	235
  5703  0504  00E9               	movwf	??_main
  5704  0505                     u3627:	
  5705  0505  0BE9               	decfsz	??_main,f
  5706  0506  2D05               	goto	u3627
  5707  0507  0BEA               	decfsz	??_main+1,f
  5708  0508  2D05               	goto	u3627
  5709  0509  0BEB               	decfsz	??_main+2,f
  5710  050A  2D05               	goto	u3627
  5711  050B  0000               	nop
  5712  050C                     l2870:	
  5713                           
  5714                           ;main.c: 87: }
  5715                           ;main.c: 91: x[5]+=1;
  5716  050C  3001               	movlw	1
  5717  050D  0020               	movlb	0	; select bank0
  5718  050E  00E9               	movwf	??_main
  5719  050F  0869               	movf	??_main,w
  5720  0510  0021               	movlb	1	; select bank1
  5721  0511  07D4               	addwf	(main@x^(0+128)+5),f
  5722                           
  5723                           ;main.c: 93: if(x[5]>254)
  5724  0512  0A54               	incf	(main@x^(0+128)+5),w
  5725  0513  1D03               	btfss	3,2
  5726  0514  2E29               	goto	l2964
  5727                           
  5728                           ;main.c: 94: {
  5729                           ;main.c: 95: x[5]=254;
  5730  0515  30FE               	movlw	254
  5731  0516  0020               	movlb	0	; select bank0
  5732  0517  00E9               	movwf	??_main
  5733  0518  0869               	movf	??_main,w
  5734  0519  0021               	movlb	1	; select bank1
  5735  051A  00D4               	movwf	(main@x^(0+128)+5)
  5736                           
  5737                           ;main.c: 97: if(analogs[2]<900&&analogs[3]<900)asm("reset");
  5738  051B  3003               	movlw	3
  5739  051C  0242               	subwf	((main@analogs+1)^(0+128)+4),w
  5740  051D  3084               	movlw	132
  5741  051E  1903               	skipnz
  5742  051F  0241               	subwf	(main@analogs^(0+128)+4),w
  5743  0520  1803               	skipnc
  5744  0521  2D29               	goto	l2880
  5745  0522  3003               	movlw	3
  5746  0523  0244               	subwf	((main@analogs+1)^(0+128)+6),w
  5747  0524  3084               	movlw	132
  5748  0525  1903               	skipnz
  5749  0526  0243               	subwf	(main@analogs^(0+128)+6),w
  5750  0527  1C03               	btfss	3,0
  5751  0528  0001               	reset	;# 
  5752  0529                     l2880:	
  5753                           
  5754                           ;main.c: 99: if(analogs[2]<900)
  5755  0529  3003               	movlw	3
  5756  052A  0021               	movlb	1	; select bank1
  5757  052B  0242               	subwf	((main@analogs+1)^(0+128)+4),w
  5758  052C  3084               	movlw	132
  5759  052D  1903               	skipnz
  5760  052E  0241               	subwf	(main@analogs^(0+128)+4),w
  5761  052F  1803               	skipnc
  5762  0530  2DA8               	goto	l2922
  5763                           
  5764                           ;main.c: 100: {
  5765                           ;main.c: 101: x[6]+=1;
  5766  0531  3001               	movlw	1
  5767  0532  0020               	movlb	0	; select bank0
  5768  0533  00E9               	movwf	??_main
  5769  0534  0869               	movf	??_main,w
  5770  0535  0021               	movlb	1	; select bank1
  5771  0536  07D5               	addwf	(main@x^(0+128)+6),f
  5772                           
  5773                           ;main.c: 103: if(x[6]>20)
  5774  0537  3015               	movlw	21
  5775  0538  0255               	subwf	(main@x^(0+128)+6),w
  5776  0539  1803               	btfsc	3,0
  5777  053A  2D8D               	goto	l2912
  5778  053B  2DA8               	goto	l2922
  5779  053C                     l2888:	
  5780                           ;main.c: 104: {
  5781                           ;main.c: 105: while(analogs[2]<975)
  5782                           
  5783                           
  5784                           ;main.c: 106: {
  5785                           ;main.c: 107: analogs[2]=ADCRead(4);
  5786  053C  3004               	movlw	4
  5787  053D  3197  2784  3183   	fcall	_ADCRead
  5788  0540  0871               	movf	?_ADCRead+1,w
  5789  0541  0021               	movlb	1	; select bank1
  5790  0542  00C2               	movwf	((main@analogs+1)^(0+128)+4)
  5791  0543  0870               	movf	?_ADCRead,w
  5792  0544  00C1               	movwf	(main@analogs^(0+128)+4)
  5793                           
  5794                           ;main.c: 109: if(x[4]<1)LCD_Clear();
  5795  0545  0853               	movf	(main@x^(0+128)+4),w
  5796  0546  1D03               	btfss	3,2
  5797  0547  2D4B               	goto	l2894
  5798  0548  3180  2004  3183   	fcall	_LCD_Clear
  5799  054B                     l2894:	
  5800                           
  5801                           ;main.c: 110: x[4]+=1;
  5802  054B  3001               	movlw	1
  5803  054C  0020               	movlb	0	; select bank0
  5804  054D  00E9               	movwf	??_main
  5805  054E  0869               	movf	??_main,w
  5806  054F  0021               	movlb	1	; select bank1
  5807  0550  07D3               	addwf	(main@x^(0+128)+4),f
  5808                           
  5809                           ;main.c: 112: if(dutyCycle>0)dutyCycle-=1;
  5810  0551  0857               	movf	main@dutyCycle^(0+128),w
  5811  0552  0458               	iorwf	(main@dutyCycle+1)^(0+128),w
  5812  0553  1903               	btfsc	3,2
  5813  0554  2D59               	goto	l2900
  5814  0555  3001               	movlw	1
  5815  0556  02D7               	subwf	main@dutyCycle^(0+128),f
  5816  0557  3000               	movlw	0
  5817  0558  3BD8               	subwfb	(main@dutyCycle+1)^(0+128),f
  5818  0559                     l2900:	
  5819                           
  5820                           ;main.c: 114: { LCD_Set_Cursor(0,0); LCD_Write_String("BackLight:");};
  5821  0559  01F4               	clrf	LCD_Set_Cursor@y
  5822  055A  3000               	movlw	0
  5823  055B  3189  21C1  3183   	fcall	_LCD_Set_Cursor
  5824  055E  301B               	movlw	low (STR_13| (0+32768))
  5825  055F  00F5               	movwf	LCD_Write_String@a
  5826  0560  3090               	movlw	high (STR_13| (0+32768))
  5827  0561  00F6               	movwf	LCD_Write_String@a+1
  5828  0562  3188  2002  3183   	fcall	_LCD_Write_String
  5829                           
  5830                           ;main.c: 115: LCD_Write_Int(dutyCycle/10,-1,0,0);
  5831  0565  300A               	movlw	10
  5832  0566  00F0               	movwf	___lwdiv@divisor
  5833  0567  3000               	movlw	0
  5834  0568  00F1               	movwf	___lwdiv@divisor+1
  5835  0569  0021               	movlb	1	; select bank1
  5836  056A  0858               	movf	(main@dutyCycle+1)^(0+128),w
  5837  056B  00F3               	movwf	___lwdiv@dividend+1
  5838  056C  0857               	movf	main@dutyCycle^(0+128),w
  5839  056D  00F2               	movwf	___lwdiv@dividend
  5840  056E  3188  20E1  3183   	fcall	___lwdiv
  5841  0571  0871               	movf	?___lwdiv+1,w
  5842  0572  0020               	movlb	0	; select bank0
  5843  0573  00A1               	movwf	LCD_Write_Int@value+1
  5844  0574  0870               	movf	?___lwdiv,w
  5845  0575  00A0               	movwf	LCD_Write_Int@value
  5846  0576  01A2               	clrf	LCD_Write_Int@fieldLength
  5847  0577  03A2               	decf	LCD_Write_Int@fieldLength,f
  5848  0578  01A3               	clrf	LCD_Write_Int@numPlaces
  5849  0579  01A4               	clrf	LCD_Write_Int@sign
  5850  057A  318F  2735  3183   	fcall	_LCD_Write_Int
  5851                           
  5852                           ;main.c: 116: LCD_Write_Char('%');
  5853  057D  3025               	movlw	37
  5854  057E  3188  20B5  3183   	fcall	_LCD_Write_Char
  5855                           
  5856                           ;main.c: 117: LCD_Write_Char(' ');
  5857  0581  3020               	movlw	32
  5858  0582  3188  20B5  3183   	fcall	_LCD_Write_Char
  5859                           
  5860                           ;main.c: 118: PWM6_LoadDutyValue(dutyCycle);
  5861  0585  0021               	movlb	1	; select bank1
  5862  0586  0858               	movf	(main@dutyCycle+1)^(0+128),w
  5863  0587  00F1               	movwf	PWM6_LoadDutyValue@dutyCycle+1
  5864  0588  0857               	movf	main@dutyCycle^(0+128),w
  5865  0589  00F0               	movwf	PWM6_LoadDutyValue@dutyCycle
  5866  058A  3197  27BA  3183   	fcall	_PWM6_LoadDutyValue
  5867  058D                     l2912:	
  5868  058D  3003               	movlw	3
  5869  058E  0021               	movlb	1	; select bank1
  5870  058F  0242               	subwf	((main@analogs+1)^(0+128)+4),w
  5871  0590  30CF               	movlw	207
  5872  0591  1903               	skipnz
  5873  0592  0241               	subwf	(main@analogs^(0+128)+4),w
  5874  0593  1C03               	skipc
  5875  0594  2D3C               	goto	l2888
  5876                           
  5877                           ;main.c: 119: }
  5878                           ;main.c: 120: x[4]=0;
  5879  0595  01D3               	clrf	(main@x^(0+128)+4)
  5880                           
  5881                           ;main.c: 121: _delay((unsigned long)((100)*(32000000/4000.0)));
  5882  0596  3005               	movlw	5
  5883  0597  0020               	movlb	0	; select bank0
  5884  0598  00EB               	movwf	??_main+2
  5885  0599  300F               	movlw	15
  5886  059A  00EA               	movwf	??_main+1
  5887  059B  30F4               	movlw	244
  5888  059C  00E9               	movwf	??_main
  5889  059D                     u3637:	
  5890  059D  0BE9               	decfsz	??_main,f
  5891  059E  2D9D               	goto	u3637
  5892  059F  0BEA               	decfsz	??_main+1,f
  5893  05A0  2D9D               	goto	u3637
  5894  05A1  0BEB               	decfsz	??_main+2,f
  5895  05A2  2D9D               	goto	u3637
  5896                           
  5897                           ;main.c: 122: LCD_Clear();
  5898  05A3  3180  2004  3183   	fcall	_LCD_Clear
  5899                           
  5900                           ;main.c: 123: x[6]=0;
  5901  05A6  0021               	movlb	1	; select bank1
  5902  05A7  01D5               	clrf	(main@x^(0+128)+6)
  5903  05A8                     l2922:	
  5904                           
  5905                           ;main.c: 124: }
  5906                           ;main.c: 125: }
  5907                           ;main.c: 127: if(analogs[3]<900)
  5908  05A8  3003               	movlw	3
  5909  05A9  0244               	subwf	((main@analogs+1)^(0+128)+6),w
  5910  05AA  3084               	movlw	132
  5911  05AB  1903               	skipnz
  5912  05AC  0243               	subwf	(main@analogs^(0+128)+6),w
  5913  05AD  1803               	skipnc
  5914  05AE  2E29               	goto	l2964
  5915                           
  5916                           ;main.c: 128: {
  5917                           ;main.c: 129: x[6]+=1;
  5918  05AF  3001               	movlw	1
  5919  05B0  0020               	movlb	0	; select bank0
  5920  05B1  00E9               	movwf	??_main
  5921  05B2  0869               	movf	??_main,w
  5922  05B3  0021               	movlb	1	; select bank1
  5923  05B4  07D5               	addwf	(main@x^(0+128)+6),f
  5924                           
  5925                           ;main.c: 131: if(x[6]>20)
  5926  05B5  3015               	movlw	21
  5927  05B6  0255               	subwf	(main@x^(0+128)+6),w
  5928  05B7  1803               	btfsc	3,0
  5929  05B8  2E0E               	goto	l2954
  5930  05B9  2E29               	goto	l2964
  5931  05BA                     l2930:	
  5932                           ;main.c: 132: {
  5933                           ;main.c: 133: while(analogs[3]<975)
  5934                           
  5935                           
  5936                           ;main.c: 134: {
  5937                           ;main.c: 135: analogs[3]=ADCRead(5);
  5938  05BA  3005               	movlw	5
  5939  05BB  3197  2784  3183   	fcall	_ADCRead
  5940  05BE  0871               	movf	?_ADCRead+1,w
  5941  05BF  0021               	movlb	1	; select bank1
  5942  05C0  00C4               	movwf	((main@analogs+1)^(0+128)+6)
  5943  05C1  0870               	movf	?_ADCRead,w
  5944  05C2  00C3               	movwf	(main@analogs^(0+128)+6)
  5945                           
  5946                           ;main.c: 137: if(x[4]<1)LCD_Clear();
  5947  05C3  0853               	movf	(main@x^(0+128)+4),w
  5948  05C4  1D03               	btfss	3,2
  5949  05C5  2DC9               	goto	l2936
  5950  05C6  3180  2004  3183   	fcall	_LCD_Clear
  5951  05C9                     l2936:	
  5952                           
  5953                           ;main.c: 138: x[4]+=1;
  5954  05C9  3001               	movlw	1
  5955  05CA  0020               	movlb	0	; select bank0
  5956  05CB  00E9               	movwf	??_main
  5957  05CC  0869               	movf	??_main,w
  5958  05CD  0021               	movlb	1	; select bank1
  5959  05CE  07D3               	addwf	(main@x^(0+128)+4),f
  5960                           
  5961                           ;main.c: 140: if(dutyCycle<1009)dutyCycle+=1;
  5962  05CF  3003               	movlw	3
  5963  05D0  0258               	subwf	(main@dutyCycle+1)^(0+128),w
  5964  05D1  30F1               	movlw	241
  5965  05D2  1903               	skipnz
  5966  05D3  0257               	subwf	main@dutyCycle^(0+128),w
  5967  05D4  1803               	skipnc
  5968  05D5  2DDA               	goto	l2942
  5969  05D6  3001               	movlw	1
  5970  05D7  07D7               	addwf	main@dutyCycle^(0+128),f
  5971  05D8  3000               	movlw	0
  5972  05D9  3DD8               	addwfc	(main@dutyCycle+1)^(0+128),f
  5973  05DA                     l2942:	
  5974                           
  5975                           ;main.c: 142: { LCD_Set_Cursor(0,0); LCD_Write_String("BackLight:");};
  5976  05DA  01F4               	clrf	LCD_Set_Cursor@y
  5977  05DB  3000               	movlw	0
  5978  05DC  3189  21C1  3183   	fcall	_LCD_Set_Cursor
  5979  05DF  301B               	movlw	low (STR_13| (0+32768))
  5980  05E0  00F5               	movwf	LCD_Write_String@a
  5981  05E1  3090               	movlw	high (STR_13| (0+32768))
  5982  05E2  00F6               	movwf	LCD_Write_String@a+1
  5983  05E3  3188  2002  3183   	fcall	_LCD_Write_String
  5984                           
  5985                           ;main.c: 143: LCD_Write_Int(dutyCycle/10,-1,0,0);
  5986  05E6  300A               	movlw	10
  5987  05E7  00F0               	movwf	___lwdiv@divisor
  5988  05E8  3000               	movlw	0
  5989  05E9  00F1               	movwf	___lwdiv@divisor+1
  5990  05EA  0021               	movlb	1	; select bank1
  5991  05EB  0858               	movf	(main@dutyCycle+1)^(0+128),w
  5992  05EC  00F3               	movwf	___lwdiv@dividend+1
  5993  05ED  0857               	movf	main@dutyCycle^(0+128),w
  5994  05EE  00F2               	movwf	___lwdiv@dividend
  5995  05EF  3188  20E1  3183   	fcall	___lwdiv
  5996  05F2  0871               	movf	?___lwdiv+1,w
  5997  05F3  0020               	movlb	0	; select bank0
  5998  05F4  00A1               	movwf	LCD_Write_Int@value+1
  5999  05F5  0870               	movf	?___lwdiv,w
  6000  05F6  00A0               	movwf	LCD_Write_Int@value
  6001  05F7  01A2               	clrf	LCD_Write_Int@fieldLength
  6002  05F8  03A2               	decf	LCD_Write_Int@fieldLength,f
  6003  05F9  01A3               	clrf	LCD_Write_Int@numPlaces
  6004  05FA  01A4               	clrf	LCD_Write_Int@sign
  6005  05FB  318F  2735  3183   	fcall	_LCD_Write_Int
  6006                           
  6007                           ;main.c: 144: LCD_Write_Char('%');
  6008  05FE  3025               	movlw	37
  6009  05FF  3188  20B5  3183   	fcall	_LCD_Write_Char
  6010                           
  6011                           ;main.c: 145: LCD_Write_Char(' ');
  6012  0602  3020               	movlw	32
  6013  0603  3188  20B5  3183   	fcall	_LCD_Write_Char
  6014                           
  6015                           ;main.c: 146: PWM6_LoadDutyValue(dutyCycle);
  6016  0606  0021               	movlb	1	; select bank1
  6017  0607  0858               	movf	(main@dutyCycle+1)^(0+128),w
  6018  0608  00F1               	movwf	PWM6_LoadDutyValue@dutyCycle+1
  6019  0609  0857               	movf	main@dutyCycle^(0+128),w
  6020  060A  00F0               	movwf	PWM6_LoadDutyValue@dutyCycle
  6021  060B  3197  27BA  3183   	fcall	_PWM6_LoadDutyValue
  6022  060E                     l2954:	
  6023  060E  3003               	movlw	3
  6024  060F  0021               	movlb	1	; select bank1
  6025  0610  0244               	subwf	((main@analogs+1)^(0+128)+6),w
  6026  0611  30CF               	movlw	207
  6027  0612  1903               	skipnz
  6028  0613  0243               	subwf	(main@analogs^(0+128)+6),w
  6029  0614  1C03               	skipc
  6030  0615  2DBA               	goto	l2930
  6031                           
  6032                           ;main.c: 147: }
  6033                           ;main.c: 148: x[4]=0;
  6034  0616  01D3               	clrf	(main@x^(0+128)+4)
  6035                           
  6036                           ;main.c: 149: _delay((unsigned long)((100)*(32000000/4000.0)));
  6037  0617  3005               	movlw	5
  6038  0618  0020               	movlb	0	; select bank0
  6039  0619  00EB               	movwf	??_main+2
  6040  061A  300F               	movlw	15
  6041  061B  00EA               	movwf	??_main+1
  6042  061C  30F4               	movlw	244
  6043  061D  00E9               	movwf	??_main
  6044  061E                     u3647:	
  6045  061E  0BE9               	decfsz	??_main,f
  6046  061F  2E1E               	goto	u3647
  6047  0620  0BEA               	decfsz	??_main+1,f
  6048  0621  2E1E               	goto	u3647
  6049  0622  0BEB               	decfsz	??_main+2,f
  6050  0623  2E1E               	goto	u3647
  6051                           
  6052                           ;main.c: 150: LCD_Clear();
  6053  0624  3180  2004  3183   	fcall	_LCD_Clear
  6054                           
  6055                           ;main.c: 151: x[6]=0;
  6056  0627  0021               	movlb	1	; select bank1
  6057  0628  01D5               	clrf	(main@x^(0+128)+6)
  6058  0629                     l2964:	
  6059                           
  6060                           ;main.c: 152: }
  6061                           ;main.c: 153: }
  6062                           ;main.c: 154: }
  6063                           ;main.c: 158: displayTemp = tempCalc(analogs[4]);
  6064  0629  0846               	movf	((main@analogs+1)^(0+128)+8),w
  6065  062A  0020               	movlb	0	; select bank0
  6066  062B  00DE               	movwf	tempCalc@analogValue+1
  6067  062C  0021               	movlb	1	; select bank1
  6068  062D  0845               	movf	(main@analogs^(0+128)+8),w
  6069  062E  0020               	movlb	0	; select bank0
  6070  062F  00DD               	movwf	tempCalc@analogValue
  6071  0630  3180  200C  3183   	fcall	_tempCalc
  6072  0633  0020               	movlb	0	; select bank0
  6073  0634  085D               	movf	?_tempCalc,w
  6074  0635  0021               	movlb	1	; select bank1
  6075  0636  00C9               	movwf	main@displayTemp^(0+128)
  6076  0637  0020               	movlb	0	; select bank0
  6077  0638  085E               	movf	?_tempCalc+1,w
  6078  0639  0021               	movlb	1	; select bank1
  6079  063A  00CA               	movwf	(main@displayTemp+1)^(0+128)
  6080  063B  0020               	movlb	0	; select bank0
  6081  063C  085F               	movf	?_tempCalc+2,w
  6082  063D  0021               	movlb	1	; select bank1
  6083  063E  00CB               	movwf	(main@displayTemp+2)^(0+128)
  6084                           
  6085                           ;main.c: 160: displayTemp2 = tempCalc(analogs[5]);
  6086  063F  0848               	movf	((main@analogs+1)^(0+128)+10),w
  6087  0640  0020               	movlb	0	; select bank0
  6088  0641  00DE               	movwf	tempCalc@analogValue+1
  6089  0642  0021               	movlb	1	; select bank1
  6090  0643  0847               	movf	(main@analogs^(0+128)+10),w
  6091  0644  0020               	movlb	0	; select bank0
  6092  0645  00DD               	movwf	tempCalc@analogValue
  6093  0646  3180  200C  3183   	fcall	_tempCalc
  6094  0649  0020               	movlb	0	; select bank0
  6095  064A  085D               	movf	?_tempCalc,w
  6096  064B  0021               	movlb	1	; select bank1
  6097  064C  00CC               	movwf	main@displayTemp2^(0+128)
  6098  064D  0020               	movlb	0	; select bank0
  6099  064E  085E               	movf	?_tempCalc+1,w
  6100  064F  0021               	movlb	1	; select bank1
  6101  0650  00CD               	movwf	(main@displayTemp2+1)^(0+128)
  6102  0651  0020               	movlb	0	; select bank0
  6103  0652  085F               	movf	?_tempCalc+2,w
  6104  0653  0021               	movlb	1	; select bank1
  6105  0654  00CE               	movwf	(main@displayTemp2+2)^(0+128)
  6106                           
  6107                           ;main.c: 162: if(x[1]>127)
  6108  0655  3080               	movlw	128
  6109  0656  0250               	subwf	(main@x^(0+128)+1),w
  6110  0657  1C03               	skipc
  6111  0658  2FB6               	goto	l3022
  6112                           
  6113                           ;main.c: 163: {
  6114                           ;main.c: 164: { LCD_Set_Cursor(0,0); LCD_Write_String("Solar In");};
  6115  0659  01F4               	clrf	LCD_Set_Cursor@y
  6116  065A  3000               	movlw	0
  6117  065B  3189  21C1  3183   	fcall	_LCD_Set_Cursor
  6118  065E  3026               	movlw	low (STR_15| (0+32768))
  6119  065F  00F5               	movwf	LCD_Write_String@a
  6120  0660  3090               	movlw	high (STR_15| (0+32768))
  6121  0661  00F6               	movwf	LCD_Write_String@a+1
  6122  0662  3188  2002  3183   	fcall	_LCD_Write_String
  6123                           
  6124                           ;main.c: 165: { LCD_Set_Cursor(0,1); LCD_Write_String("Return");};
  6125  0665  01F4               	clrf	LCD_Set_Cursor@y
  6126  0666  0AF4               	incf	LCD_Set_Cursor@y,f
  6127  0667  3000               	movlw	0
  6128  0668  3189  21C1  3183   	fcall	_LCD_Set_Cursor
  6129  066B  302F               	movlw	low (STR_16| (0+32768))
  6130  066C  00F5               	movwf	LCD_Write_String@a
  6131  066D  3090               	movlw	high (STR_16| (0+32768))
  6132  066E  00F6               	movwf	LCD_Write_String@a+1
  6133  066F  3188  2002  3183   	fcall	_LCD_Write_String
  6134                           
  6135                           ;main.c: 167: if(x[3]==0)
  6136  0672  0021               	movlb	1	; select bank1
  6137  0673  0852               	movf	(main@x^(0+128)+3),w
  6138  0674  1D03               	btfss	3,2
  6139  0675  2EC7               	goto	l2992
  6140                           
  6141                           ;main.c: 168: {
  6142                           ;main.c: 169: { LCD_Set_Cursor(9,0); LCD_Write_Int((int)displayTemp,-1, 1, 0);};
  6143  0676  01F4               	clrf	LCD_Set_Cursor@y
  6144  0677  3009               	movlw	9
  6145  0678  3189  21C1  3183   	fcall	_LCD_Set_Cursor
  6146  067B  0021               	movlb	1	; select bank1
  6147  067C  0849               	movf	main@displayTemp^(0+128),w
  6148  067D  00F0               	movwf	___fttol@f1
  6149  067E  084A               	movf	(main@displayTemp+1)^(0+128),w
  6150  067F  00F1               	movwf	___fttol@f1+1
  6151  0680  084B               	movf	(main@displayTemp+2)^(0+128),w
  6152  0681  00F2               	movwf	___fttol@f1+2
  6153  0682  318C  241E  3183   	fcall	___fttol
  6154  0685  0871               	movf	?___fttol+1,w
  6155  0686  0020               	movlb	0	; select bank0
  6156  0687  00A1               	movwf	LCD_Write_Int@value+1
  6157  0688  0870               	movf	?___fttol,w
  6158  0689  00A0               	movwf	LCD_Write_Int@value
  6159  068A  01A2               	clrf	LCD_Write_Int@fieldLength
  6160  068B  03A2               	decf	LCD_Write_Int@fieldLength,f
  6161  068C  01A3               	clrf	LCD_Write_Int@numPlaces
  6162  068D  0AA3               	incf	LCD_Write_Int@numPlaces,f
  6163  068E  01A4               	clrf	LCD_Write_Int@sign
  6164  068F  318F  2735  3183   	fcall	_LCD_Write_Int
  6165                           
  6166                           ;main.c: 170: LCD_Write_Char(0);
  6167  0692  3000               	movlw	0
  6168  0693  3188  20B5  3183   	fcall	_LCD_Write_Char
  6169                           
  6170                           ;main.c: 171: LCD_Write_Char('C');
  6171  0696  3043               	movlw	67
  6172  0697  3188  20B5  3183   	fcall	_LCD_Write_Char
  6173                           
  6174                           ;main.c: 172: LCD_Write_Char(' ');
  6175  069A  3020               	movlw	32
  6176  069B  3188  20B5  3183   	fcall	_LCD_Write_Char
  6177                           
  6178                           ;main.c: 174: { LCD_Set_Cursor(9,1); LCD_Write_Int((int)displayTemp2,-1, 1, 0);};
  6179  069E  01F4               	clrf	LCD_Set_Cursor@y
  6180  069F  0AF4               	incf	LCD_Set_Cursor@y,f
  6181  06A0  3009               	movlw	9
  6182  06A1  3189  21C1  3183   	fcall	_LCD_Set_Cursor
  6183  06A4  0021               	movlb	1	; select bank1
  6184  06A5  084C               	movf	main@displayTemp2^(0+128),w
  6185  06A6  00F0               	movwf	___fttol@f1
  6186  06A7  084D               	movf	(main@displayTemp2+1)^(0+128),w
  6187  06A8  00F1               	movwf	___fttol@f1+1
  6188  06A9  084E               	movf	(main@displayTemp2+2)^(0+128),w
  6189  06AA  00F2               	movwf	___fttol@f1+2
  6190  06AB  318C  241E  3183   	fcall	___fttol
  6191  06AE  0871               	movf	?___fttol+1,w
  6192  06AF  0020               	movlb	0	; select bank0
  6193  06B0  00A1               	movwf	LCD_Write_Int@value+1
  6194  06B1  0870               	movf	?___fttol,w
  6195  06B2  00A0               	movwf	LCD_Write_Int@value
  6196  06B3  01A2               	clrf	LCD_Write_Int@fieldLength
  6197  06B4  03A2               	decf	LCD_Write_Int@fieldLength,f
  6198  06B5  01A3               	clrf	LCD_Write_Int@numPlaces
  6199  06B6  0AA3               	incf	LCD_Write_Int@numPlaces,f
  6200  06B7  01A4               	clrf	LCD_Write_Int@sign
  6201  06B8  318F  2735  3183   	fcall	_LCD_Write_Int
  6202                           
  6203                           ;main.c: 175: LCD_Write_Char(0);
  6204  06BB  3000               	movlw	0
  6205  06BC  3188  20B5  3183   	fcall	_LCD_Write_Char
  6206                           
  6207                           ;main.c: 176: LCD_Write_Char('C');
  6208  06BF  3043               	movlw	67
  6209  06C0  3188  20B5  3183   	fcall	_LCD_Write_Char
  6210                           
  6211                           ;main.c: 177: LCD_Write_Char(' ');
  6212  06C3  3020               	movlw	32
  6213  06C4  3188  20B5  3183   	fcall	_LCD_Write_Char
  6214  06C7                     l2992:	
  6215                           
  6216                           ;main.c: 178: }
  6217                           ;main.c: 180: if(x[3]==1)
  6218  06C7  0021               	movlb	1	; select bank1
  6219  06C8  0352               	decf	(main@x^(0+128)+3),w
  6220  06C9  1D03               	btfss	3,2
  6221  06CA  2FA0               	goto	l3008
  6222                           
  6223                           ;main.c: 181: {
  6224                           ;main.c: 182: displayTemp = displayTemp*9/5+320;
  6225  06CB  3000               	movlw	0
  6226  06CC  0020               	movlb	0	; select bank0
  6227  06CD  00C0               	movwf	___ftadd@f1
  6228  06CE  30A0               	movlw	160
  6229  06CF  00C1               	movwf	___ftadd@f1+1
  6230  06D0  3043               	movlw	67
  6231  06D1  00C2               	movwf	___ftadd@f1+2
  6232  06D2  3000               	movlw	0
  6233  06D3  00B0               	movwf	___ftdiv@f2
  6234  06D4  30A0               	movlw	160
  6235  06D5  00B1               	movwf	___ftdiv@f2+1
  6236  06D6  3040               	movlw	64
  6237  06D7  00B2               	movwf	___ftdiv@f2+2
  6238  06D8  3000               	movlw	0
  6239  06D9  00A0               	movwf	___ftmul@f1
  6240  06DA  3010               	movlw	16
  6241  06DB  00A1               	movwf	___ftmul@f1+1
  6242  06DC  3041               	movlw	65
  6243  06DD  00A2               	movwf	___ftmul@f1+2
  6244  06DE  0021               	movlb	1	; select bank1
  6245  06DF  0849               	movf	main@displayTemp^(0+128),w
  6246  06E0  0020               	movlb	0	; select bank0
  6247  06E1  00A3               	movwf	___ftmul@f2
  6248  06E2  0021               	movlb	1	; select bank1
  6249  06E3  084A               	movf	(main@displayTemp+1)^(0+128),w
  6250  06E4  0020               	movlb	0	; select bank0
  6251  06E5  00A4               	movwf	___ftmul@f2+1
  6252  06E6  0021               	movlb	1	; select bank1
  6253  06E7  084B               	movf	(main@displayTemp+2)^(0+128),w
  6254  06E8  0020               	movlb	0	; select bank0
  6255  06E9  00A5               	movwf	___ftmul@f2+2
  6256  06EA  318E  2681  3183   	fcall	___ftmul
  6257  06ED  0020               	movlb	0	; select bank0
  6258  06EE  0820               	movf	?___ftmul,w
  6259  06EF  00B3               	movwf	___ftdiv@f1
  6260  06F0  0821               	movf	?___ftmul+1,w
  6261  06F1  00B4               	movwf	___ftdiv@f1+1
  6262  06F2  0822               	movf	?___ftmul+2,w
  6263  06F3  00B5               	movwf	___ftdiv@f1+2
  6264  06F4  318D  252B  3183   	fcall	___ftdiv
  6265  06F7  0020               	movlb	0	; select bank0
  6266  06F8  0830               	movf	?___ftdiv,w
  6267  06F9  00C3               	movwf	___ftadd@f2
  6268  06FA  0831               	movf	?___ftdiv+1,w
  6269  06FB  00C4               	movwf	___ftadd@f2+1
  6270  06FC  0832               	movf	?___ftdiv+2,w
  6271  06FD  00C5               	movwf	___ftadd@f2+2
  6272  06FE  3180  20EB  3183   	fcall	___ftadd
  6273  0701  0020               	movlb	0	; select bank0
  6274  0702  0840               	movf	?___ftadd,w
  6275  0703  0021               	movlb	1	; select bank1
  6276  0704  00C9               	movwf	main@displayTemp^(0+128)
  6277  0705  0020               	movlb	0	; select bank0
  6278  0706  0841               	movf	?___ftadd+1,w
  6279  0707  0021               	movlb	1	; select bank1
  6280  0708  00CA               	movwf	(main@displayTemp+1)^(0+128)
  6281  0709  0020               	movlb	0	; select bank0
  6282  070A  0842               	movf	?___ftadd+2,w
  6283  070B  0021               	movlb	1	; select bank1
  6284  070C  00CB               	movwf	(main@displayTemp+2)^(0+128)
  6285                           
  6286                           ;main.c: 183: displayTemp2 = displayTemp2*9/5+320;
  6287  070D  3000               	movlw	0
  6288  070E  0020               	movlb	0	; select bank0
  6289  070F  00C0               	movwf	___ftadd@f1
  6290  0710  30A0               	movlw	160
  6291  0711  00C1               	movwf	___ftadd@f1+1
  6292  0712  3043               	movlw	67
  6293  0713  00C2               	movwf	___ftadd@f1+2
  6294  0714  3000               	movlw	0
  6295  0715  00B0               	movwf	___ftdiv@f2
  6296  0716  30A0               	movlw	160
  6297  0717  00B1               	movwf	___ftdiv@f2+1
  6298  0718  3040               	movlw	64
  6299  0719  00B2               	movwf	___ftdiv@f2+2
  6300  071A  3000               	movlw	0
  6301  071B  00A0               	movwf	___ftmul@f1
  6302  071C  3010               	movlw	16
  6303  071D  00A1               	movwf	___ftmul@f1+1
  6304  071E  3041               	movlw	65
  6305  071F  00A2               	movwf	___ftmul@f1+2
  6306  0720  0021               	movlb	1	; select bank1
  6307  0721  084C               	movf	main@displayTemp2^(0+128),w
  6308  0722  0020               	movlb	0	; select bank0
  6309  0723  00A3               	movwf	___ftmul@f2
  6310  0724  0021               	movlb	1	; select bank1
  6311  0725  084D               	movf	(main@displayTemp2+1)^(0+128),w
  6312  0726  0020               	movlb	0	; select bank0
  6313  0727  00A4               	movwf	___ftmul@f2+1
  6314  0728  0021               	movlb	1	; select bank1
  6315  0729  084E               	movf	(main@displayTemp2+2)^(0+128),w
  6316  072A  0020               	movlb	0	; select bank0
  6317  072B  00A5               	movwf	___ftmul@f2+2
  6318  072C  318E  2681  3183   	fcall	___ftmul
  6319  072F  0020               	movlb	0	; select bank0
  6320  0730  0820               	movf	?___ftmul,w
  6321  0731  00B3               	movwf	___ftdiv@f1
  6322  0732  0821               	movf	?___ftmul+1,w
  6323  0733  00B4               	movwf	___ftdiv@f1+1
  6324  0734  0822               	movf	?___ftmul+2,w
  6325  0735  00B5               	movwf	___ftdiv@f1+2
  6326  0736  318D  252B  3183   	fcall	___ftdiv
  6327  0739  0020               	movlb	0	; select bank0
  6328  073A  0830               	movf	?___ftdiv,w
  6329  073B  00C3               	movwf	___ftadd@f2
  6330  073C  0831               	movf	?___ftdiv+1,w
  6331  073D  00C4               	movwf	___ftadd@f2+1
  6332  073E  0832               	movf	?___ftdiv+2,w
  6333  073F  00C5               	movwf	___ftadd@f2+2
  6334  0740  3180  20EB  3183   	fcall	___ftadd
  6335  0743  0020               	movlb	0	; select bank0
  6336  0744  0840               	movf	?___ftadd,w
  6337  0745  0021               	movlb	1	; select bank1
  6338  0746  00CC               	movwf	main@displayTemp2^(0+128)
  6339  0747  0020               	movlb	0	; select bank0
  6340  0748  0841               	movf	?___ftadd+1,w
  6341  0749  0021               	movlb	1	; select bank1
  6342  074A  00CD               	movwf	(main@displayTemp2+1)^(0+128)
  6343  074B  0020               	movlb	0	; select bank0
  6344  074C  0842               	movf	?___ftadd+2,w
  6345  074D  0021               	movlb	1	; select bank1
  6346  074E  00CE               	movwf	(main@displayTemp2+2)^(0+128)
  6347                           
  6348                           ;main.c: 185: { LCD_Set_Cursor(9,0); LCD_Write_Int((int)displayTemp,-1, 1, 0);};
  6349  074F  01F4               	clrf	LCD_Set_Cursor@y
  6350  0750  3009               	movlw	9
  6351  0751  3189  21C1  3183   	fcall	_LCD_Set_Cursor
  6352  0754  0021               	movlb	1	; select bank1
  6353  0755  0849               	movf	main@displayTemp^(0+128),w
  6354  0756  00F0               	movwf	___fttol@f1
  6355  0757  084A               	movf	(main@displayTemp+1)^(0+128),w
  6356  0758  00F1               	movwf	___fttol@f1+1
  6357  0759  084B               	movf	(main@displayTemp+2)^(0+128),w
  6358  075A  00F2               	movwf	___fttol@f1+2
  6359  075B  318C  241E  3183   	fcall	___fttol
  6360  075E  0871               	movf	?___fttol+1,w
  6361  075F  0020               	movlb	0	; select bank0
  6362  0760  00A1               	movwf	LCD_Write_Int@value+1
  6363  0761  0870               	movf	?___fttol,w
  6364  0762  00A0               	movwf	LCD_Write_Int@value
  6365  0763  01A2               	clrf	LCD_Write_Int@fieldLength
  6366  0764  03A2               	decf	LCD_Write_Int@fieldLength,f
  6367  0765  01A3               	clrf	LCD_Write_Int@numPlaces
  6368  0766  0AA3               	incf	LCD_Write_Int@numPlaces,f
  6369  0767  01A4               	clrf	LCD_Write_Int@sign
  6370  0768  318F  2735  3183   	fcall	_LCD_Write_Int
  6371                           
  6372                           ;main.c: 186: LCD_Write_Char(0);
  6373  076B  3000               	movlw	0
  6374  076C  3188  20B5  3183   	fcall	_LCD_Write_Char
  6375                           
  6376                           ;main.c: 187: LCD_Write_Char('F');
  6377  076F  3046               	movlw	70
  6378  0770  3188  20B5  3183   	fcall	_LCD_Write_Char
  6379                           
  6380                           ;main.c: 188: LCD_Write_Char(' ');
  6381  0773  3020               	movlw	32
  6382  0774  3188  20B5  3183   	fcall	_LCD_Write_Char
  6383                           
  6384                           ;main.c: 190: { LCD_Set_Cursor(9,1); LCD_Write_Int((int)displayTemp2,-1, 1, 0);};
  6385  0777  01F4               	clrf	LCD_Set_Cursor@y
  6386  0778  0AF4               	incf	LCD_Set_Cursor@y,f
  6387  0779  3009               	movlw	9
  6388  077A  3189  21C1  3183   	fcall	_LCD_Set_Cursor
  6389  077D  0021               	movlb	1	; select bank1
  6390  077E  084C               	movf	main@displayTemp2^(0+128),w
  6391  077F  00F0               	movwf	___fttol@f1
  6392  0780  084D               	movf	(main@displayTemp2+1)^(0+128),w
  6393  0781  00F1               	movwf	___fttol@f1+1
  6394  0782  084E               	movf	(main@displayTemp2+2)^(0+128),w
  6395  0783  00F2               	movwf	___fttol@f1+2
  6396  0784  318C  241E  3183   	fcall	___fttol
  6397  0787  0871               	movf	?___fttol+1,w
  6398  0788  0020               	movlb	0	; select bank0
  6399  0789  00A1               	movwf	LCD_Write_Int@value+1
  6400  078A  0870               	movf	?___fttol,w
  6401  078B  00A0               	movwf	LCD_Write_Int@value
  6402  078C  01A2               	clrf	LCD_Write_Int@fieldLength
  6403  078D  03A2               	decf	LCD_Write_Int@fieldLength,f
  6404  078E  01A3               	clrf	LCD_Write_Int@numPlaces
  6405  078F  0AA3               	incf	LCD_Write_Int@numPlaces,f
  6406  0790  01A4               	clrf	LCD_Write_Int@sign
  6407  0791  318F  2735  3183   	fcall	_LCD_Write_Int
  6408                           
  6409                           ;main.c: 191: LCD_Write_Char(0);
  6410  0794  3000               	movlw	0
  6411  0795  3188  20B5  3183   	fcall	_LCD_Write_Char
  6412                           
  6413                           ;main.c: 192: LCD_Write_Char('F');
  6414  0798  3046               	movlw	70
  6415  0799  3188  20B5  3183   	fcall	_LCD_Write_Char
  6416                           
  6417                           ;main.c: 193: LCD_Write_Char(' ');
  6418  079C  3020               	movlw	32
  6419  079D  3188  20B5  3183   	fcall	_LCD_Write_Char
  6420  07A0                     l3008:	
  6421                           
  6422                           ;main.c: 194: }
  6423                           ;main.c: 197: if(x[2]==0)x[3]=0;
  6424  07A0  0021               	movlb	1	; select bank1
  6425  07A1  0851               	movf	(main@x^(0+128)+2),w
  6426  07A2  1903               	btfsc	3,2
  6427  07A3  01D2               	clrf	(main@x^(0+128)+3)
  6428                           
  6429                           ;main.c: 199: if(x[2]==1)x[3]=1;
  6430  07A4  0351               	decf	(main@x^(0+128)+2),w
  6431  07A5  1D03               	btfss	3,2
  6432  07A6  2FA9               	goto	l3016
  6433  07A7  01D2               	clrf	(main@x^(0+128)+3)
  6434  07A8  0AD2               	incf	(main@x^(0+128)+3),f
  6435  07A9                     l3016:	
  6436                           
  6437                           ;main.c: 201: if(x[2]==2)x[3]=1-x[3];
  6438  07A9  3002               	movlw	2
  6439  07AA  0651               	xorwf	(main@x^(0+128)+2),w
  6440  07AB  1D03               	btfss	3,2
  6441  07AC  2FB5               	goto	l3020
  6442  07AD  0352               	decf	(main@x^(0+128)+3),w
  6443  07AE  3AFF               	xorlw	255
  6444  07AF  3E01               	addlw	1
  6445  07B0  0020               	movlb	0	; select bank0
  6446  07B1  00E9               	movwf	??_main
  6447  07B2  0869               	movf	??_main,w
  6448  07B3  0021               	movlb	1	; select bank1
  6449  07B4  00D2               	movwf	(main@x^(0+128)+3)
  6450  07B5                     l3020:	
  6451                           
  6452                           ;main.c: 217: x[1]=0;
  6453  07B5  01D0               	clrf	(main@x^(0+128)+1)
  6454  07B6                     l3022:	
  6455                           
  6456                           ;main.c: 218: }
  6457                           ;main.c: 219: x[1]+=1;
  6458  07B6  3001               	movlw	1
  6459  07B7  0020               	movlb	0	; select bank0
  6460  07B8  00E9               	movwf	??_main
  6461  07B9  0869               	movf	??_main,w
  6462  07BA  0021               	movlb	1	; select bank1
  6463  07BB  07D0               	addwf	(main@x^(0+128)+1),f
  6464  07BC  2C9D               	goto	l2840
  6465  07BD                     __end_of_main:	
  6466                           
  6467                           	psect	text1
  6468  000C                     __ptext1:	
  6469 ;; *************** function _tempCalc *****************
  6470 ;; Defined at:
  6471 ;;		line 4 in file "tempCalc.c"
  6472 ;; Parameters:    Size  Location     Type
  6473 ;;  analogValue     2   61[BANK0 ] int 
  6474 ;; Auto vars:     Size  Location     Type
  6475 ;;  steinhart       3   70[BANK0 ] float 
  6476 ;;  R               3   64[BANK0 ] float 
  6477 ;; Return value:  Size  Location     Type
  6478 ;;                  3   61[BANK0 ] float 
  6479 ;; Registers used:
  6480 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6481 ;; Tracked objects:
  6482 ;;		On entry : 0/0
  6483 ;;		On exit  : 0/0
  6484 ;;		Unchanged: 0/0
  6485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6486 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6487 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6489 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6490 ;;Total ram usage:       12 bytes
  6491 ;; Hardware stack levels used:    1
  6492 ;; Hardware stack levels required when called:    4
  6493 ;; This function calls:
  6494 ;;		___awtoft
  6495 ;;		___ftadd
  6496 ;;		___ftdiv
  6497 ;;		___ftmul
  6498 ;;		___ftsub
  6499 ;;		_log
  6500 ;; This function is called by:
  6501 ;;		_main
  6502 ;; This function uses a non-reentrant model
  6503 ;;
  6504                           
  6505                           
  6506                           ;psect for function _tempCalc
  6507  000C                     _tempCalc:	
  6508                           
  6509                           ;tempCalc.c: 6: float R, steinhart;
  6510                           ;tempCalc.c: 8: R = 10020/(1023/(float)analogValue - 1);
  6511                           
  6512                           ;incstack = 0
  6513                           ; Regs used in _tempCalc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6514  000C  3000               	movlw	0
  6515  000D  0020               	movlb	0	; select bank0
  6516  000E  00C0               	movwf	___ftadd@f1
  6517  000F  3080               	movlw	128
  6518  0010  00C1               	movwf	___ftadd@f1+1
  6519  0011  30BF               	movlw	191
  6520  0012  00C2               	movwf	___ftadd@f1+2
  6521  0013  085E               	movf	tempCalc@analogValue+1,w
  6522  0014  00F9               	movwf	___awtoft@c+1
  6523  0015  085D               	movf	tempCalc@analogValue,w
  6524  0016  00F8               	movwf	___awtoft@c
  6525  0017  3188  206F  3180   	fcall	___awtoft
  6526  001A  0878               	movf	?___awtoft,w
  6527  001B  0020               	movlb	0	; select bank0
  6528  001C  00B0               	movwf	___ftdiv@f2
  6529  001D  0879               	movf	?___awtoft+1,w
  6530  001E  00B1               	movwf	___ftdiv@f2+1
  6531  001F  087A               	movf	?___awtoft+2,w
  6532  0020  00B2               	movwf	___ftdiv@f2+2
  6533  0021  30C0               	movlw	192
  6534  0022  00B3               	movwf	___ftdiv@f1
  6535  0023  307F               	movlw	127
  6536  0024  00B4               	movwf	___ftdiv@f1+1
  6537  0025  3044               	movlw	68
  6538  0026  00B5               	movwf	___ftdiv@f1+2
  6539  0027  318D  252B  3180   	fcall	___ftdiv
  6540  002A  0020               	movlb	0	; select bank0
  6541  002B  0830               	movf	?___ftdiv,w
  6542  002C  00C3               	movwf	___ftadd@f2
  6543  002D  0831               	movf	?___ftdiv+1,w
  6544  002E  00C4               	movwf	___ftadd@f2+1
  6545  002F  0832               	movf	?___ftdiv+2,w
  6546  0030  00C5               	movwf	___ftadd@f2+2
  6547  0031  3180  20EB  3180   	fcall	___ftadd
  6548  0034  0020               	movlb	0	; select bank0
  6549  0035  0840               	movf	?___ftadd,w
  6550  0036  00E3               	movwf	_tempCalc$960
  6551  0037  0841               	movf	?___ftadd+1,w
  6552  0038  00E4               	movwf	_tempCalc$960+1
  6553  0039  0842               	movf	?___ftadd+2,w
  6554  003A  00E5               	movwf	_tempCalc$960+2
  6555                           
  6556                           ;tempCalc.c: 6: float R, steinhart;
  6557                           ;tempCalc.c: 8: R = 10020/(1023/(float)analogValue - 1);
  6558  003B  0863               	movf	_tempCalc$960,w
  6559  003C  00B0               	movwf	___ftdiv@f2
  6560  003D  0864               	movf	_tempCalc$960+1,w
  6561  003E  00B1               	movwf	___ftdiv@f2+1
  6562  003F  0865               	movf	_tempCalc$960+2,w
  6563  0040  00B2               	movwf	___ftdiv@f2+2
  6564  0041  3090               	movlw	144
  6565  0042  00B3               	movwf	___ftdiv@f1
  6566  0043  301C               	movlw	28
  6567  0044  00B4               	movwf	___ftdiv@f1+1
  6568  0045  3046               	movlw	70
  6569  0046  00B5               	movwf	___ftdiv@f1+2
  6570  0047  318D  252B  3180   	fcall	___ftdiv
  6571  004A  0020               	movlb	0	; select bank0
  6572  004B  0830               	movf	?___ftdiv,w
  6573  004C  00E0               	movwf	tempCalc@R
  6574  004D  0831               	movf	?___ftdiv+1,w
  6575  004E  00E1               	movwf	tempCalc@R+1
  6576  004F  0832               	movf	?___ftdiv+2,w
  6577  0050  00E2               	movwf	tempCalc@R+2
  6578                           
  6579                           ;tempCalc.c: 10: steinhart = R /10061;
  6580  0051  3034               	movlw	52
  6581  0052  00B0               	movwf	___ftdiv@f2
  6582  0053  301D               	movlw	29
  6583  0054  00B1               	movwf	___ftdiv@f2+1
  6584  0055  3046               	movlw	70
  6585  0056  00B2               	movwf	___ftdiv@f2+2
  6586  0057  0860               	movf	tempCalc@R,w
  6587  0058  00B3               	movwf	___ftdiv@f1
  6588  0059  0861               	movf	tempCalc@R+1,w
  6589  005A  00B4               	movwf	___ftdiv@f1+1
  6590  005B  0862               	movf	tempCalc@R+2,w
  6591  005C  00B5               	movwf	___ftdiv@f1+2
  6592  005D  318D  252B  3180   	fcall	___ftdiv
  6593  0060  0020               	movlb	0	; select bank0
  6594  0061  0830               	movf	?___ftdiv,w
  6595  0062  00E6               	movwf	tempCalc@steinhart
  6596  0063  0831               	movf	?___ftdiv+1,w
  6597  0064  00E7               	movwf	tempCalc@steinhart+1
  6598  0065  0832               	movf	?___ftdiv+2,w
  6599  0066  00E8               	movwf	tempCalc@steinhart+2
  6600                           
  6601                           ;tempCalc.c: 11: steinhart = log(steinhart);
  6602  0067  0866               	movf	tempCalc@steinhart,w
  6603  0068  00D7               	movwf	log@x
  6604  0069  0867               	movf	tempCalc@steinhart+1,w
  6605  006A  00D8               	movwf	log@x+1
  6606  006B  0868               	movf	tempCalc@steinhart+2,w
  6607  006C  00D9               	movwf	log@x+2
  6608  006D  318D  25D4  3180   	fcall	_log
  6609  0070  0020               	movlb	0	; select bank0
  6610  0071  0857               	movf	?_log,w
  6611  0072  00E6               	movwf	tempCalc@steinhart
  6612  0073  0858               	movf	?_log+1,w
  6613  0074  00E7               	movwf	tempCalc@steinhart+1
  6614  0075  0859               	movf	?_log+2,w
  6615  0076  00E8               	movwf	tempCalc@steinhart+2
  6616                           
  6617                           ;tempCalc.c: 12: steinhart /= 3995;
  6618  0077  30B0               	movlw	176
  6619  0078  00B0               	movwf	___ftdiv@f2
  6620  0079  3079               	movlw	121
  6621  007A  00B1               	movwf	___ftdiv@f2+1
  6622  007B  3045               	movlw	69
  6623  007C  00B2               	movwf	___ftdiv@f2+2
  6624  007D  0866               	movf	tempCalc@steinhart,w
  6625  007E  00B3               	movwf	___ftdiv@f1
  6626  007F  0867               	movf	tempCalc@steinhart+1,w
  6627  0080  00B4               	movwf	___ftdiv@f1+1
  6628  0081  0868               	movf	tempCalc@steinhart+2,w
  6629  0082  00B5               	movwf	___ftdiv@f1+2
  6630  0083  318D  252B  3180   	fcall	___ftdiv
  6631  0086  0020               	movlb	0	; select bank0
  6632  0087  0830               	movf	?___ftdiv,w
  6633  0088  00E6               	movwf	tempCalc@steinhart
  6634  0089  0831               	movf	?___ftdiv+1,w
  6635  008A  00E7               	movwf	tempCalc@steinhart+1
  6636  008B  0832               	movf	?___ftdiv+2,w
  6637  008C  00E8               	movwf	tempCalc@steinhart+2
  6638                           
  6639                           ;tempCalc.c: 13: steinhart += 1.0 / (25 + 273.15);
  6640  008D  30CF               	movlw	207
  6641  008E  00C0               	movwf	___ftadd@f1
  6642  008F  305B               	movlw	91
  6643  0090  00C1               	movwf	___ftadd@f1+1
  6644  0091  303B               	movlw	59
  6645  0092  00C2               	movwf	___ftadd@f1+2
  6646  0093  0866               	movf	tempCalc@steinhart,w
  6647  0094  00C3               	movwf	___ftadd@f2
  6648  0095  0867               	movf	tempCalc@steinhart+1,w
  6649  0096  00C4               	movwf	___ftadd@f2+1
  6650  0097  0868               	movf	tempCalc@steinhart+2,w
  6651  0098  00C5               	movwf	___ftadd@f2+2
  6652  0099  3180  20EB  3180   	fcall	___ftadd
  6653  009C  0020               	movlb	0	; select bank0
  6654  009D  0840               	movf	?___ftadd,w
  6655  009E  00E6               	movwf	tempCalc@steinhart
  6656  009F  0841               	movf	?___ftadd+1,w
  6657  00A0  00E7               	movwf	tempCalc@steinhart+1
  6658  00A1  0842               	movf	?___ftadd+2,w
  6659  00A2  00E8               	movwf	tempCalc@steinhart+2
  6660                           
  6661                           ;tempCalc.c: 14: steinhart = 1.0 / steinhart;
  6662  00A3  0866               	movf	tempCalc@steinhart,w
  6663  00A4  00B0               	movwf	___ftdiv@f2
  6664  00A5  0867               	movf	tempCalc@steinhart+1,w
  6665  00A6  00B1               	movwf	___ftdiv@f2+1
  6666  00A7  0868               	movf	tempCalc@steinhart+2,w
  6667  00A8  00B2               	movwf	___ftdiv@f2+2
  6668  00A9  3000               	movlw	0
  6669  00AA  00B3               	movwf	___ftdiv@f1
  6670  00AB  3080               	movlw	128
  6671  00AC  00B4               	movwf	___ftdiv@f1+1
  6672  00AD  303F               	movlw	63
  6673  00AE  00B5               	movwf	___ftdiv@f1+2
  6674  00AF  318D  252B  3180   	fcall	___ftdiv
  6675  00B2  0020               	movlb	0	; select bank0
  6676  00B3  0830               	movf	?___ftdiv,w
  6677  00B4  00E6               	movwf	tempCalc@steinhart
  6678  00B5  0831               	movf	?___ftdiv+1,w
  6679  00B6  00E7               	movwf	tempCalc@steinhart+1
  6680  00B7  0832               	movf	?___ftdiv+2,w
  6681  00B8  00E8               	movwf	tempCalc@steinhart+2
  6682                           
  6683                           ;tempCalc.c: 15: steinhart -= 273.15;
  6684  00B9  3093               	movlw	147
  6685  00BA  00CD               	movwf	___ftsub@f2
  6686  00BB  3088               	movlw	136
  6687  00BC  00CE               	movwf	___ftsub@f2+1
  6688  00BD  3043               	movlw	67
  6689  00BE  00CF               	movwf	___ftsub@f2+2
  6690  00BF  0866               	movf	tempCalc@steinhart,w
  6691  00C0  00D0               	movwf	___ftsub@f1
  6692  00C1  0867               	movf	tempCalc@steinhart+1,w
  6693  00C2  00D1               	movwf	___ftsub@f1+1
  6694  00C3  0868               	movf	tempCalc@steinhart+2,w
  6695  00C4  00D2               	movwf	___ftsub@f1+2
  6696  00C5  3188  2051  3180   	fcall	___ftsub
  6697  00C8  0020               	movlb	0	; select bank0
  6698  00C9  084D               	movf	?___ftsub,w
  6699  00CA  00E6               	movwf	tempCalc@steinhart
  6700  00CB  084E               	movf	?___ftsub+1,w
  6701  00CC  00E7               	movwf	tempCalc@steinhart+1
  6702  00CD  084F               	movf	?___ftsub+2,w
  6703  00CE  00E8               	movwf	tempCalc@steinhart+2
  6704                           
  6705                           ;tempCalc.c: 17: steinhart*=10;
  6706  00CF  3000               	movlw	0
  6707  00D0  00A0               	movwf	___ftmul@f1
  6708  00D1  3020               	movlw	32
  6709  00D2  00A1               	movwf	___ftmul@f1+1
  6710  00D3  3041               	movlw	65
  6711  00D4  00A2               	movwf	___ftmul@f1+2
  6712  00D5  0866               	movf	tempCalc@steinhart,w
  6713  00D6  00A3               	movwf	___ftmul@f2
  6714  00D7  0867               	movf	tempCalc@steinhart+1,w
  6715  00D8  00A4               	movwf	___ftmul@f2+1
  6716  00D9  0868               	movf	tempCalc@steinhart+2,w
  6717  00DA  00A5               	movwf	___ftmul@f2+2
  6718  00DB  318E  2681         	fcall	___ftmul
  6719  00DD  0020               	movlb	0	; select bank0
  6720  00DE  0820               	movf	?___ftmul,w
  6721  00DF  00E6               	movwf	tempCalc@steinhart
  6722  00E0  0821               	movf	?___ftmul+1,w
  6723  00E1  00E7               	movwf	tempCalc@steinhart+1
  6724  00E2  0822               	movf	?___ftmul+2,w
  6725  00E3  00E8               	movwf	tempCalc@steinhart+2
  6726                           
  6727                           ;tempCalc.c: 21: return steinhart;
  6728  00E4  0866               	movf	tempCalc@steinhart,w
  6729  00E5  00DD               	movwf	?_tempCalc
  6730  00E6  0867               	movf	tempCalc@steinhart+1,w
  6731  00E7  00DE               	movwf	?_tempCalc+1
  6732  00E8  0868               	movf	tempCalc@steinhart+2,w
  6733  00E9  00DF               	movwf	?_tempCalc+2
  6734  00EA  0008               	return
  6735  00EB                     __end_of_tempCalc:	
  6736                           
  6737                           	psect	text2
  6738  0DD4                     __ptext2:	
  6739 ;; *************** function _log *****************
  6740 ;; Defined at:
  6741 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\log.c"
  6742 ;; Parameters:    Size  Location     Type
  6743 ;;  x               3   55[BANK0 ] float 
  6744 ;; Auto vars:     Size  Location     Type
  6745 ;;  exponent        2   59[BANK0 ] int 
  6746 ;; Return value:  Size  Location     Type
  6747 ;;                  3   55[BANK0 ] int 
  6748 ;; Registers used:
  6749 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6750 ;; Tracked objects:
  6751 ;;		On entry : 0/0
  6752 ;;		On exit  : 0/0
  6753 ;;		Unchanged: 0/0
  6754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6755 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6756 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6757 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6758 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6759 ;;Total ram usage:        6 bytes
  6760 ;; Hardware stack levels used:    1
  6761 ;; Hardware stack levels required when called:    3
  6762 ;; This function calls:
  6763 ;;		___awtoft
  6764 ;;		___ftadd
  6765 ;;		___ftge
  6766 ;;		___ftmul
  6767 ;;		_eval_poly
  6768 ;;		_frexp
  6769 ;; This function is called by:
  6770 ;;		_tempCalc
  6771 ;; This function uses a non-reentrant model
  6772 ;;
  6773                           
  6774                           
  6775                           ;psect for function _log
  6776  0DD4                     _log:	
  6777                           
  6778                           ;incstack = 0
  6779                           ; Regs used in _log: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6780  0DD4  0020               	movlb	0	; select bank0
  6781  0DD5  0857               	movf	log@x,w
  6782  0DD6  00F0               	movwf	___ftge@ff1
  6783  0DD7  0858               	movf	log@x+1,w
  6784  0DD8  00F1               	movwf	___ftge@ff1+1
  6785  0DD9  0859               	movf	log@x+2,w
  6786  0DDA  00F2               	movwf	___ftge@ff1+2
  6787  0DDB  3000               	movlw	0
  6788  0DDC  00F3               	movwf	___ftge@ff2
  6789  0DDD  3000               	movlw	0
  6790  0DDE  00F4               	movwf	___ftge@ff2+1
  6791  0DDF  3000               	movlw	0
  6792  0DE0  00F5               	movwf	___ftge@ff2+2
  6793  0DE1  3189  214B  318D   	fcall	___ftge
  6794  0DE4  1803               	btfsc	3,0
  6795  0DE5  2DF2               	goto	l2354
  6796  0DE6  3021               	movlw	33
  6797  0DE7  0020               	movlb	0	; select bank0
  6798  0DE8  00EC               	movwf	_errno
  6799  0DE9  3000               	movlw	0
  6800  0DEA  00ED               	movwf	_errno+1
  6801  0DEB  3000               	movlw	0
  6802  0DEC  00D7               	movwf	?_log
  6803  0DED  3000               	movlw	0
  6804  0DEE  00D8               	movwf	?_log+1
  6805  0DEF  3000               	movlw	0
  6806  0DF0  00D9               	movwf	?_log+2
  6807  0DF1  0008               	return
  6808  0DF2                     l2354:	
  6809  0DF2  0020               	movlb	0	; select bank0
  6810  0DF3  0859               	movf	log@x+2,w
  6811  0DF4  0458               	iorwf	log@x+1,w
  6812  0DF5  0457               	iorwf	log@x,w
  6813  0DF6  1D03               	skipz
  6814  0DF7  2E03               	goto	l2360
  6815  0DF8  3022               	movlw	34
  6816  0DF9  00EC               	movwf	_errno
  6817  0DFA  3000               	movlw	0
  6818  0DFB  00ED               	movwf	_errno+1
  6819  0DFC  3000               	movlw	0
  6820  0DFD  00D7               	movwf	?_log
  6821  0DFE  3000               	movlw	0
  6822  0DFF  00D8               	movwf	?_log+1
  6823  0E00  3000               	movlw	0
  6824  0E01  00D9               	movwf	?_log+2
  6825  0E02  0008               	return
  6826  0E03                     l2360:	
  6827  0E03  3000               	movlw	0
  6828  0E04  00C0               	movwf	___ftadd@f1
  6829  0E05  3080               	movlw	128
  6830  0E06  00C1               	movwf	___ftadd@f1+1
  6831  0E07  30BF               	movlw	191
  6832  0E08  00C2               	movwf	___ftadd@f1+2
  6833  0E09  3000               	movlw	0
  6834  0E0A  00A0               	movwf	___ftmul@f1
  6835  0E0B  3000               	movlw	0
  6836  0E0C  00A1               	movwf	___ftmul@f1+1
  6837  0E0D  3040               	movlw	64
  6838  0E0E  00A2               	movwf	___ftmul@f1+2
  6839  0E0F  305B               	movlw	(low (log@exponent| 0))& (0+255)
  6840  0E10  00DA               	movwf	??_log
  6841  0E11  085A               	movf	??_log,w
  6842  0E12  00F3               	movwf	frexp@eptr
  6843  0E13  0857               	movf	log@x,w
  6844  0E14  00F0               	movwf	frexp@value
  6845  0E15  0858               	movf	log@x+1,w
  6846  0E16  00F1               	movwf	frexp@value+1
  6847  0E17  0859               	movf	log@x+2,w
  6848  0E18  00F2               	movwf	frexp@value+2
  6849  0E19  3189  2186  318D   	fcall	_frexp
  6850  0E1C  0870               	movf	?_frexp,w
  6851  0E1D  0020               	movlb	0	; select bank0
  6852  0E1E  00A3               	movwf	___ftmul@f2
  6853  0E1F  0871               	movf	?_frexp+1,w
  6854  0E20  00A4               	movwf	___ftmul@f2+1
  6855  0E21  0872               	movf	?_frexp+2,w
  6856  0E22  00A5               	movwf	___ftmul@f2+2
  6857  0E23  318E  2681  318D   	fcall	___ftmul
  6858  0E26  0020               	movlb	0	; select bank0
  6859  0E27  0820               	movf	?___ftmul,w
  6860  0E28  00C3               	movwf	___ftadd@f2
  6861  0E29  0821               	movf	?___ftmul+1,w
  6862  0E2A  00C4               	movwf	___ftadd@f2+1
  6863  0E2B  0822               	movf	?___ftmul+2,w
  6864  0E2C  00C5               	movwf	___ftadd@f2+2
  6865  0E2D  3180  20EB  318D   	fcall	___ftadd
  6866  0E30  0020               	movlb	0	; select bank0
  6867  0E31  0840               	movf	?___ftadd,w
  6868  0E32  00D7               	movwf	log@x
  6869  0E33  0841               	movf	?___ftadd+1,w
  6870  0E34  00D8               	movwf	log@x+1
  6871  0E35  0842               	movf	?___ftadd+2,w
  6872  0E36  00D9               	movwf	log@x+2
  6873  0E37  30FF               	movlw	255
  6874  0E38  07DB               	addwf	log@exponent,f
  6875  0E39  30FF               	movlw	255
  6876  0E3A  3DDC               	addwfc	log@exponent+1,f
  6877  0E3B  0857               	movf	log@x,w
  6878  0E3C  00CD               	movwf	eval_poly@x
  6879  0E3D  0858               	movf	log@x+1,w
  6880  0E3E  00CE               	movwf	eval_poly@x+1
  6881  0E3F  0859               	movf	log@x+2,w
  6882  0E40  00CF               	movwf	eval_poly@x+2
  6883  0E41  3000               	movlw	low (log@coeff| (0+32768))
  6884  0E42  00D0               	movwf	eval_poly@d
  6885  0E43  3090               	movlw	high (log@coeff| (0+32768))
  6886  0E44  00D1               	movwf	eval_poly@d+1
  6887  0E45  3008               	movlw	8
  6888  0E46  00D2               	movwf	eval_poly@n
  6889  0E47  3000               	movlw	0
  6890  0E48  00D3               	movwf	eval_poly@n+1
  6891  0E49  318A  22D8  318D   	fcall	_eval_poly
  6892  0E4C  0020               	movlb	0	; select bank0
  6893  0E4D  084D               	movf	?_eval_poly,w
  6894  0E4E  00D7               	movwf	log@x
  6895  0E4F  084E               	movf	?_eval_poly+1,w
  6896  0E50  00D8               	movwf	log@x+1
  6897  0E51  084F               	movf	?_eval_poly+2,w
  6898  0E52  00D9               	movwf	log@x+2
  6899  0E53  0857               	movf	log@x,w
  6900  0E54  00C0               	movwf	___ftadd@f1
  6901  0E55  0858               	movf	log@x+1,w
  6902  0E56  00C1               	movwf	___ftadd@f1+1
  6903  0E57  0859               	movf	log@x+2,w
  6904  0E58  00C2               	movwf	___ftadd@f1+2
  6905  0E59  3072               	movlw	114
  6906  0E5A  00A0               	movwf	___ftmul@f1
  6907  0E5B  3031               	movlw	49
  6908  0E5C  00A1               	movwf	___ftmul@f1+1
  6909  0E5D  303F               	movlw	63
  6910  0E5E  00A2               	movwf	___ftmul@f1+2
  6911  0E5F  085C               	movf	log@exponent+1,w
  6912  0E60  00F9               	movwf	___awtoft@c+1
  6913  0E61  085B               	movf	log@exponent,w
  6914  0E62  00F8               	movwf	___awtoft@c
  6915  0E63  3188  206F  318D   	fcall	___awtoft
  6916  0E66  0878               	movf	?___awtoft,w
  6917  0E67  0020               	movlb	0	; select bank0
  6918  0E68  00A3               	movwf	___ftmul@f2
  6919  0E69  0879               	movf	?___awtoft+1,w
  6920  0E6A  00A4               	movwf	___ftmul@f2+1
  6921  0E6B  087A               	movf	?___awtoft+2,w
  6922  0E6C  00A5               	movwf	___ftmul@f2+2
  6923  0E6D  318E  2681  318D   	fcall	___ftmul
  6924  0E70  0020               	movlb	0	; select bank0
  6925  0E71  0820               	movf	?___ftmul,w
  6926  0E72  00C3               	movwf	___ftadd@f2
  6927  0E73  0821               	movf	?___ftmul+1,w
  6928  0E74  00C4               	movwf	___ftadd@f2+1
  6929  0E75  0822               	movf	?___ftmul+2,w
  6930  0E76  00C5               	movwf	___ftadd@f2+2
  6931  0E77  3180  20EB         	fcall	___ftadd
  6932  0E79  0020               	movlb	0	; select bank0
  6933  0E7A  0840               	movf	?___ftadd,w
  6934  0E7B  00D7               	movwf	?_log
  6935  0E7C  0841               	movf	?___ftadd+1,w
  6936  0E7D  00D8               	movwf	?_log+1
  6937  0E7E  0842               	movf	?___ftadd+2,w
  6938  0E7F  00D9               	movwf	?_log+2
  6939  0E80  0008               	return
  6940  0E81                     __end_of_log:	
  6941                           
  6942                           	psect	text3
  6943  0986                     __ptext3:	
  6944 ;; *************** function _frexp *****************
  6945 ;; Defined at:
  6946 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\frexp.c"
  6947 ;; Parameters:    Size  Location     Type
  6948 ;;  value           3    0[COMMON] int 
  6949 ;;  eptr            1    3[COMMON] PTR int 
  6950 ;;		 -> log@exponent(2), 
  6951 ;; Auto vars:     Size  Location     Type
  6952 ;;		None
  6953 ;; Return value:  Size  Location     Type
  6954 ;;                  3    0[COMMON] PTR int 
  6955 ;; Registers used:
  6956 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6957 ;; Tracked objects:
  6958 ;;		On entry : 0/0
  6959 ;;		On exit  : 0/0
  6960 ;;		Unchanged: 0/0
  6961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6962 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6964 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6965 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6966 ;;Total ram usage:        6 bytes
  6967 ;; Hardware stack levels used:    1
  6968 ;; This function calls:
  6969 ;;		Nothing
  6970 ;; This function is called by:
  6971 ;;		_log
  6972 ;; This function uses a non-reentrant model
  6973 ;;
  6974                           
  6975                           
  6976                           ;psect for function _frexp
  6977  0986                     _frexp:	
  6978                           
  6979                           ;incstack = 0
  6980                           ; Regs used in _frexp: [wreg+fsr1l+fsr1h+status,2+status,0]
  6981  0986  0872               	movf	frexp@value+2,w
  6982  0987  0471               	iorwf	frexp@value+1,w
  6983  0988  0470               	iorwf	frexp@value,w
  6984  0989  1D03               	skipz
  6985  098A  2998               	goto	l2186
  6986  098B  0873               	movf	frexp@eptr,w
  6987  098C  0086               	movwf	6
  6988  098D  0187               	clrf	7
  6989  098E  3000               	movlw	0
  6990  098F  3FC0               	movwi [0]fsr1
  6991  0990  3FC1               	movwi [1]fsr1
  6992  0991  3000               	movlw	0
  6993  0992  00F0               	movwf	?_frexp
  6994  0993  3000               	movlw	0
  6995  0994  00F1               	movwf	?_frexp+1
  6996  0995  3000               	movlw	0
  6997  0996  00F2               	movwf	?_frexp+2
  6998  0997  0008               	return
  6999  0998                     l2186:	
  7000  0998  0872               	movf	frexp@value+2,w
  7001  0999  397F               	andlw	127
  7002  099A  00F4               	movwf	??_frexp
  7003  099B  01F5               	clrf	??_frexp+1
  7004  099C  35F4               	lslf	??_frexp,f
  7005  099D  0DF5               	rlf	??_frexp+1,f
  7006  099E  0873               	movf	frexp@eptr,w
  7007  099F  0086               	movwf	6
  7008  09A0  0187               	clrf	7
  7009  09A1  0874               	movf	??_frexp,w
  7010  09A2  3FC0               	movwi [0]fsr1
  7011  09A3  0875               	movf	??_frexp+1,w
  7012  09A4  3FC1               	movwi [1]fsr1
  7013  09A5  0D71               	rlf	frexp@value+1,w
  7014  09A6  0D71               	rlf	frexp@value+1,w
  7015  09A7  3901               	andlw	1
  7016  09A8  00F4               	movwf	??_frexp
  7017  09A9  01F5               	clrf	??_frexp+1
  7018  09AA  0873               	movf	frexp@eptr,w
  7019  09AB  0086               	movwf	6
  7020  09AC  0187               	clrf	7
  7021  09AD  0874               	movf	??_frexp,w
  7022  09AE  0481               	iorwf	1,f
  7023  09AF  3141               	addfsr 1,1
  7024  09B0  0875               	movf	??_frexp+1,w
  7025  09B1  0481               	iorwf	1,f
  7026  09B2  0873               	movf	frexp@eptr,w
  7027  09B3  0086               	movwf	6
  7028  09B4  0187               	clrf	7
  7029  09B5  3082               	movlw	130
  7030  09B6  0781               	addwf	1,f
  7031  09B7  3141               	addfsr 1,1
  7032  09B8  30FF               	movlw	255
  7033  09B9  3D81               	addwfc	1,f
  7034  09BA  317F               	addfsr 1,-1
  7035  09BB  0872               	movf	frexp@value+2,w
  7036  09BC  3980               	andlw	-128
  7037  09BD  383F               	iorlw	63
  7038  09BE  00F2               	movwf	frexp@value+2
  7039  09BF  13F1               	bcf	frexp@value+1,7
  7040  09C0  0008               	return
  7041  09C1                     __end_of_frexp:	
  7042                           
  7043                           	psect	text4
  7044  0AD8                     __ptext4:	
  7045 ;; *************** function _eval_poly *****************
  7046 ;; Defined at:
  7047 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\evalpoly.c"
  7048 ;; Parameters:    Size  Location     Type
  7049 ;;  x               3   45[BANK0 ] PTR int 
  7050 ;;  d               2   48[BANK0 ] PTR const 
  7051 ;;		 -> log@coeff(27), 
  7052 ;;  n               2   50[BANK0 ] int 
  7053 ;; Auto vars:     Size  Location     Type
  7054 ;;  res             3   52[BANK0 ] int 
  7055 ;; Return value:  Size  Location     Type
  7056 ;;                  3   45[BANK0 ] int 
  7057 ;; Registers used:
  7058 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7059 ;; Tracked objects:
  7060 ;;		On entry : 0/0
  7061 ;;		On exit  : 0/0
  7062 ;;		Unchanged: 0/0
  7063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7064 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7065 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7067 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7068 ;;Total ram usage:       10 bytes
  7069 ;; Hardware stack levels used:    1
  7070 ;; Hardware stack levels required when called:    2
  7071 ;; This function calls:
  7072 ;;		___ftadd
  7073 ;;		___ftmul
  7074 ;;		___wmul
  7075 ;; This function is called by:
  7076 ;;		_log
  7077 ;; This function uses a non-reentrant model
  7078 ;;
  7079                           
  7080                           
  7081                           ;psect for function _eval_poly
  7082  0AD8                     _eval_poly:	
  7083                           
  7084                           ;incstack = 0
  7085                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7086  0AD8  0020               	movlb	0	; select bank0
  7087  0AD9  0853               	movf	eval_poly@n+1,w
  7088  0ADA  00F1               	movwf	___wmul@multiplier+1
  7089  0ADB  0852               	movf	eval_poly@n,w
  7090  0ADC  00F0               	movwf	___wmul@multiplier
  7091  0ADD  3003               	movlw	3
  7092  0ADE  00F2               	movwf	___wmul@multiplicand
  7093  0ADF  3000               	movlw	0
  7094  0AE0  00F3               	movwf	___wmul@multiplicand+1
  7095  0AE1  3188  2036  318A   	fcall	___wmul
  7096  0AE4  0020               	movlb	0	; select bank0
  7097  0AE5  0850               	movf	eval_poly@d,w
  7098  0AE6  0770               	addwf	?___wmul,w
  7099  0AE7  0084               	movwf	4
  7100  0AE8  0851               	movf	eval_poly@d+1,w
  7101  0AE9  3D71               	addwfc	?___wmul+1,w
  7102  0AEA  0085               	movwf	5
  7103  0AEB  3F00               	moviw [0]fsr0
  7104  0AEC  00D4               	movwf	eval_poly@res
  7105  0AED  3F01               	moviw [1]fsr0
  7106  0AEE  00D5               	movwf	eval_poly@res+1
  7107  0AEF  3F02               	moviw [2]fsr0
  7108  0AF0                     L1:	
  7109  0AF0  00D6               	movwf	eval_poly@res+2
  7110  0AF1  0852               	movf	eval_poly@n,w
  7111  0AF2  0453               	iorwf	eval_poly@n+1,w
  7112  0AF3  1903               	btfsc	3,2
  7113  0AF4  2B31               	goto	l2204
  7114  0AF5  30FF               	movlw	255
  7115  0AF6  07D2               	addwf	eval_poly@n,f
  7116  0AF7  30FF               	movlw	255
  7117  0AF8  3DD3               	addwfc	eval_poly@n+1,f
  7118  0AF9  0853               	movf	eval_poly@n+1,w
  7119  0AFA  00F1               	movwf	___wmul@multiplier+1
  7120  0AFB  0852               	movf	eval_poly@n,w
  7121  0AFC  00F0               	movwf	___wmul@multiplier
  7122  0AFD  3003               	movlw	3
  7123  0AFE  00F2               	movwf	___wmul@multiplicand
  7124  0AFF  3000               	movlw	0
  7125  0B00  00F3               	movwf	___wmul@multiplicand+1
  7126  0B01  3188  2036  318A   	fcall	___wmul
  7127  0B04  0020               	movlb	0	; select bank0
  7128  0B05  0850               	movf	eval_poly@d,w
  7129  0B06  0770               	addwf	?___wmul,w
  7130  0B07  0084               	movwf	4
  7131  0B08  0851               	movf	eval_poly@d+1,w
  7132  0B09  3D71               	addwfc	?___wmul+1,w
  7133  0B0A  0085               	movwf	5
  7134  0B0B  3F00               	moviw [0]fsr0
  7135  0B0C  00C0               	movwf	___ftadd@f1
  7136  0B0D  3F01               	moviw [1]fsr0
  7137  0B0E  00C1               	movwf	___ftadd@f1+1
  7138  0B0F  3F02               	moviw [2]fsr0
  7139  0B10  00C2               	movwf	___ftadd@f1+2
  7140  0B11  0854               	movf	eval_poly@res,w
  7141  0B12  00A0               	movwf	___ftmul@f1
  7142  0B13  0855               	movf	eval_poly@res+1,w
  7143  0B14  00A1               	movwf	___ftmul@f1+1
  7144  0B15  0856               	movf	eval_poly@res+2,w
  7145  0B16  00A2               	movwf	___ftmul@f1+2
  7146  0B17  084D               	movf	eval_poly@x,w
  7147  0B18  00A3               	movwf	___ftmul@f2
  7148  0B19  084E               	movf	eval_poly@x+1,w
  7149  0B1A  00A4               	movwf	___ftmul@f2+1
  7150  0B1B  084F               	movf	eval_poly@x+2,w
  7151  0B1C  00A5               	movwf	___ftmul@f2+2
  7152  0B1D  318E  2681  318A   	fcall	___ftmul
  7153  0B20  0020               	movlb	0	; select bank0
  7154  0B21  0820               	movf	?___ftmul,w
  7155  0B22  00C3               	movwf	___ftadd@f2
  7156  0B23  0821               	movf	?___ftmul+1,w
  7157  0B24  00C4               	movwf	___ftadd@f2+1
  7158  0B25  0822               	movf	?___ftmul+2,w
  7159  0B26  00C5               	movwf	___ftadd@f2+2
  7160  0B27  3180  20EB  318A   	fcall	___ftadd
  7161  0B2A  0020               	movlb	0	; select bank0
  7162  0B2B  0840               	movf	?___ftadd,w
  7163  0B2C  00D4               	movwf	eval_poly@res
  7164  0B2D  0841               	movf	?___ftadd+1,w
  7165  0B2E  00D5               	movwf	eval_poly@res+1
  7166  0B2F  0842               	movf	?___ftadd+2,w
  7167  0B30  2AF0               	goto	L1
  7168  0B31                     l2204:	
  7169  0B31  0854               	movf	eval_poly@res,w
  7170  0B32  00CD               	movwf	?_eval_poly
  7171  0B33  0855               	movf	eval_poly@res+1,w
  7172  0B34  00CE               	movwf	?_eval_poly+1
  7173  0B35  0856               	movf	eval_poly@res+2,w
  7174  0B36  00CF               	movwf	?_eval_poly+2
  7175  0B37  0008               	return
  7176  0B38                     __end_of_eval_poly:	
  7177                           
  7178                           	psect	text5
  7179  0E81                     __ptext5:	
  7180 ;; *************** function ___ftmul *****************
  7181 ;; Defined at:
  7182 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftmul.c"
  7183 ;; Parameters:    Size  Location     Type
  7184 ;;  f1              3    0[BANK0 ] float 
  7185 ;;  f2              3    3[BANK0 ] float 
  7186 ;; Auto vars:     Size  Location     Type
  7187 ;;  f3_as_produc    3   11[BANK0 ] unsigned um
  7188 ;;  sign            1   15[BANK0 ] unsigned char 
  7189 ;;  cntr            1   14[BANK0 ] unsigned char 
  7190 ;;  exp             1   10[BANK0 ] unsigned char 
  7191 ;; Return value:  Size  Location     Type
  7192 ;;                  3    0[BANK0 ] float 
  7193 ;; Registers used:
  7194 ;;		wreg, status,2, status,0, pclath, cstack
  7195 ;; Tracked objects:
  7196 ;;		On entry : 0/0
  7197 ;;		On exit  : 0/0
  7198 ;;		Unchanged: 0/0
  7199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7200 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7201 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7202 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7203 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7204 ;;Total ram usage:       16 bytes
  7205 ;; Hardware stack levels used:    1
  7206 ;; Hardware stack levels required when called:    1
  7207 ;; This function calls:
  7208 ;;		___ftpack
  7209 ;; This function is called by:
  7210 ;;		_tempCalc
  7211 ;;		_main
  7212 ;;		_log
  7213 ;;		_eval_poly
  7214 ;; This function uses a non-reentrant model
  7215 ;;
  7216                           
  7217                           
  7218                           ;psect for function ___ftmul
  7219  0E81                     ___ftmul:	
  7220                           
  7221                           ;incstack = 0
  7222                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  7223  0E81  0020               	movlb	0	; select bank0
  7224  0E82  0820               	movf	___ftmul@f1,w
  7225  0E83  00A6               	movwf	??___ftmul
  7226  0E84  0821               	movf	___ftmul@f1+1,w
  7227  0E85  00A7               	movwf	??___ftmul+1
  7228  0E86  0822               	movf	___ftmul@f1+2,w
  7229  0E87  00A8               	movwf	??___ftmul+2
  7230  0E88  1003               	clrc
  7231  0E89  0D27               	rlf	??___ftmul+1,w
  7232  0E8A  0D28               	rlf	??___ftmul+2,w
  7233  0E8B  00A9               	movwf	??___ftmul+3
  7234  0E8C  0829               	movf	??___ftmul+3,w
  7235  0E8D  00AA               	movwf	___ftmul@exp
  7236  0E8E  082A               	movf	___ftmul@exp,w
  7237  0E8F  1D03               	btfss	3,2
  7238  0E90  2E98               	goto	l2072
  7239  0E91  3000               	movlw	0
  7240  0E92  00A0               	movwf	?___ftmul
  7241  0E93  3000               	movlw	0
  7242  0E94  00A1               	movwf	?___ftmul+1
  7243  0E95  3000               	movlw	0
  7244  0E96  00A2               	movwf	?___ftmul+2
  7245  0E97  0008               	return
  7246  0E98                     l2072:	
  7247  0E98  0823               	movf	___ftmul@f2,w
  7248  0E99  00A6               	movwf	??___ftmul
  7249  0E9A  0824               	movf	___ftmul@f2+1,w
  7250  0E9B  00A7               	movwf	??___ftmul+1
  7251  0E9C  0825               	movf	___ftmul@f2+2,w
  7252  0E9D  00A8               	movwf	??___ftmul+2
  7253  0E9E  1003               	clrc
  7254  0E9F  0D27               	rlf	??___ftmul+1,w
  7255  0EA0  0D28               	rlf	??___ftmul+2,w
  7256  0EA1  00A9               	movwf	??___ftmul+3
  7257  0EA2  0829               	movf	??___ftmul+3,w
  7258  0EA3  00AF               	movwf	___ftmul@sign
  7259  0EA4  082F               	movf	___ftmul@sign,w
  7260  0EA5  1D03               	btfss	3,2
  7261  0EA6  2EAE               	goto	l2078
  7262  0EA7  3000               	movlw	0
  7263  0EA8  00A0               	movwf	?___ftmul
  7264  0EA9  3000               	movlw	0
  7265  0EAA  00A1               	movwf	?___ftmul+1
  7266  0EAB  3000               	movlw	0
  7267  0EAC  00A2               	movwf	?___ftmul+2
  7268  0EAD  0008               	return
  7269  0EAE                     l2078:	
  7270  0EAE  082F               	movf	___ftmul@sign,w
  7271  0EAF  3E7B               	addlw	123
  7272  0EB0  00A6               	movwf	??___ftmul
  7273  0EB1  0826               	movf	??___ftmul,w
  7274  0EB2  07AA               	addwf	___ftmul@exp,f
  7275  0EB3  0820               	movf	___ftmul@f1,w
  7276  0EB4  00A6               	movwf	??___ftmul
  7277  0EB5  0821               	movf	___ftmul@f1+1,w
  7278  0EB6  00A7               	movwf	??___ftmul+1
  7279  0EB7  0822               	movf	___ftmul@f1+2,w
  7280  0EB8  00A8               	movwf	??___ftmul+2
  7281  0EB9  3010               	movlw	16
  7282  0EBA                     u2205:	
  7283  0EBA  36A8               	lsrf	??___ftmul+2,f
  7284  0EBB  0CA7               	rrf	??___ftmul+1,f
  7285  0EBC  0CA6               	rrf	??___ftmul,f
  7286  0EBD  0B89               	decfsz	9,f
  7287  0EBE  2EBA               	goto	u2205
  7288  0EBF  0826               	movf	??___ftmul,w
  7289  0EC0  00A9               	movwf	??___ftmul+3
  7290  0EC1  0829               	movf	??___ftmul+3,w
  7291  0EC2  00AF               	movwf	___ftmul@sign
  7292  0EC3  0823               	movf	___ftmul@f2,w
  7293  0EC4  00A6               	movwf	??___ftmul
  7294  0EC5  0824               	movf	___ftmul@f2+1,w
  7295  0EC6  00A7               	movwf	??___ftmul+1
  7296  0EC7  0825               	movf	___ftmul@f2+2,w
  7297  0EC8  00A8               	movwf	??___ftmul+2
  7298  0EC9  3010               	movlw	16
  7299  0ECA                     u2215:	
  7300  0ECA  36A8               	lsrf	??___ftmul+2,f
  7301  0ECB  0CA7               	rrf	??___ftmul+1,f
  7302  0ECC  0CA6               	rrf	??___ftmul,f
  7303  0ECD  0B89               	decfsz	9,f
  7304  0ECE  2ECA               	goto	u2215
  7305  0ECF  0826               	movf	??___ftmul,w
  7306  0ED0  00A9               	movwf	??___ftmul+3
  7307  0ED1  0829               	movf	??___ftmul+3,w
  7308  0ED2  06AF               	xorwf	___ftmul@sign,f
  7309  0ED3  3080               	movlw	128
  7310  0ED4  00A6               	movwf	??___ftmul
  7311  0ED5  0826               	movf	??___ftmul,w
  7312  0ED6  05AF               	andwf	___ftmul@sign,f
  7313  0ED7  17A1               	bsf	___ftmul@f1+1,7
  7314  0ED8  17A4               	bsf	___ftmul@f2+1,7
  7315  0ED9  30FF               	movlw	255
  7316  0EDA  05A3               	andwf	___ftmul@f2,f
  7317  0EDB  30FF               	movlw	255
  7318  0EDC  05A4               	andwf	___ftmul@f2+1,f
  7319  0EDD  3000               	movlw	0
  7320  0EDE  05A5               	andwf	___ftmul@f2+2,f
  7321  0EDF  3000               	movlw	0
  7322  0EE0  00AB               	movwf	___ftmul@f3_as_product
  7323  0EE1  3000               	movlw	0
  7324  0EE2  00AC               	movwf	___ftmul@f3_as_product+1
  7325  0EE3  3000               	movlw	0
  7326  0EE4  00AD               	movwf	___ftmul@f3_as_product+2
  7327  0EE5  3007               	movlw	7
  7328  0EE6  00A6               	movwf	??___ftmul
  7329  0EE7  0826               	movf	??___ftmul,w
  7330  0EE8  00AE               	movwf	___ftmul@cntr
  7331  0EE9                     l2090:	
  7332  0EE9  1C20               	btfss	___ftmul@f1,0
  7333  0EEA  2EF1               	goto	l2094
  7334  0EEB  0823               	movf	___ftmul@f2,w
  7335  0EEC  07AB               	addwf	___ftmul@f3_as_product,f
  7336  0EED  0824               	movf	___ftmul@f2+1,w
  7337  0EEE  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  7338  0EEF  0825               	movf	___ftmul@f2+2,w
  7339  0EF0  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  7340  0EF1                     l2094:	
  7341  0EF1  3001               	movlw	1
  7342  0EF2                     u2235:	
  7343  0EF2  36A2               	lsrf	___ftmul@f1+2,f
  7344  0EF3  0CA1               	rrf	___ftmul@f1+1,f
  7345  0EF4  0CA0               	rrf	___ftmul@f1,f
  7346  0EF5  0B89               	decfsz	9,f
  7347  0EF6  2EF2               	goto	u2235
  7348  0EF7  3001               	movlw	1
  7349  0EF8                     u2245:	
  7350  0EF8  35A3               	lslf	___ftmul@f2,f
  7351  0EF9  0DA4               	rlf	___ftmul@f2+1,f
  7352  0EFA  0DA5               	rlf	___ftmul@f2+2,f
  7353  0EFB  0B89               	decfsz	9,f
  7354  0EFC  2EF8               	goto	u2245
  7355  0EFD  3001               	movlw	1
  7356  0EFE  02AE               	subwf	___ftmul@cntr,f
  7357  0EFF  1D03               	btfss	3,2
  7358  0F00  2EE9               	goto	l2090
  7359  0F01  3009               	movlw	9
  7360  0F02  00A6               	movwf	??___ftmul
  7361  0F03  0826               	movf	??___ftmul,w
  7362  0F04  00AE               	movwf	___ftmul@cntr
  7363  0F05                     l2102:	
  7364  0F05  1C20               	btfss	___ftmul@f1,0
  7365  0F06  2F0D               	goto	l2106
  7366  0F07  0823               	movf	___ftmul@f2,w
  7367  0F08  07AB               	addwf	___ftmul@f3_as_product,f
  7368  0F09  0824               	movf	___ftmul@f2+1,w
  7369  0F0A  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  7370  0F0B  0825               	movf	___ftmul@f2+2,w
  7371  0F0C  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  7372  0F0D                     l2106:	
  7373  0F0D  3001               	movlw	1
  7374  0F0E                     u2275:	
  7375  0F0E  36A2               	lsrf	___ftmul@f1+2,f
  7376  0F0F  0CA1               	rrf	___ftmul@f1+1,f
  7377  0F10  0CA0               	rrf	___ftmul@f1,f
  7378  0F11  0B89               	decfsz	9,f
  7379  0F12  2F0E               	goto	u2275
  7380  0F13  3001               	movlw	1
  7381  0F14                     u2285:	
  7382  0F14  36AD               	lsrf	___ftmul@f3_as_product+2,f
  7383  0F15  0CAC               	rrf	___ftmul@f3_as_product+1,f
  7384  0F16  0CAB               	rrf	___ftmul@f3_as_product,f
  7385  0F17  0B89               	decfsz	9,f
  7386  0F18  2F14               	goto	u2285
  7387  0F19  3001               	movlw	1
  7388  0F1A  02AE               	subwf	___ftmul@cntr,f
  7389  0F1B  1D03               	btfss	3,2
  7390  0F1C  2F05               	goto	l2102
  7391  0F1D  082B               	movf	___ftmul@f3_as_product,w
  7392  0F1E  00F0               	movwf	___ftpack@arg
  7393  0F1F  082C               	movf	___ftmul@f3_as_product+1,w
  7394  0F20  00F1               	movwf	___ftpack@arg+1
  7395  0F21  082D               	movf	___ftmul@f3_as_product+2,w
  7396  0F22  00F2               	movwf	___ftpack@arg+2
  7397  0F23  082A               	movf	___ftmul@exp,w
  7398  0F24  00A6               	movwf	??___ftmul
  7399  0F25  0826               	movf	??___ftmul,w
  7400  0F26  00F3               	movwf	___ftpack@exp
  7401  0F27  082F               	movf	___ftmul@sign,w
  7402  0F28  00A7               	movwf	??___ftmul+1
  7403  0F29  0827               	movf	??___ftmul+1,w
  7404  0F2A  00F4               	movwf	___ftpack@sign
  7405  0F2B  318B  2338         	fcall	___ftpack
  7406  0F2D  0870               	movf	?___ftpack,w
  7407  0F2E  0020               	movlb	0	; select bank0
  7408  0F2F  00A0               	movwf	?___ftmul
  7409  0F30  0871               	movf	?___ftpack+1,w
  7410  0F31  00A1               	movwf	?___ftmul+1
  7411  0F32  0872               	movf	?___ftpack+2,w
  7412  0F33  00A2               	movwf	?___ftmul+2
  7413  0F34  0008               	return
  7414  0F35                     __end_of___ftmul:	
  7415                           
  7416                           	psect	text6
  7417  094B                     __ptext6:	
  7418 ;; *************** function ___ftge *****************
  7419 ;; Defined at:
  7420 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftge.c"
  7421 ;; Parameters:    Size  Location     Type
  7422 ;;  ff1             3    0[COMMON] float 
  7423 ;;  ff2             3    3[COMMON] float 
  7424 ;; Auto vars:     Size  Location     Type
  7425 ;;		None
  7426 ;; Return value:  Size  Location     Type
  7427 ;;		None               void
  7428 ;; Registers used:
  7429 ;;		wreg, status,2, status,0
  7430 ;; Tracked objects:
  7431 ;;		On entry : 0/0
  7432 ;;		On exit  : 0/0
  7433 ;;		Unchanged: 0/0
  7434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7435 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7437 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7438 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7439 ;;Total ram usage:        9 bytes
  7440 ;; Hardware stack levels used:    1
  7441 ;; This function calls:
  7442 ;;		Nothing
  7443 ;; This function is called by:
  7444 ;;		_log
  7445 ;; This function uses a non-reentrant model
  7446 ;;
  7447                           
  7448                           
  7449                           ;psect for function ___ftge
  7450  094B                     ___ftge:	
  7451                           
  7452                           ;incstack = 0
  7453                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  7454  094B  1FF2               	btfss	___ftge@ff1+2,7
  7455  094C  2961               	goto	l2162
  7456  094D  0970               	comf	___ftge@ff1,w
  7457  094E  00F6               	movwf	??___ftge
  7458  094F  0971               	comf	___ftge@ff1+1,w
  7459  0950  00F7               	movwf	??___ftge+1
  7460  0951  0972               	comf	___ftge@ff1+2,w
  7461  0952  00F8               	movwf	??___ftge+2
  7462  0953  0AF6               	incf	??___ftge,f
  7463  0954  1903               	skipnz
  7464  0955  0AF7               	incf	??___ftge+1,f
  7465  0956  1903               	skipnz
  7466  0957  0AF8               	incf	??___ftge+2,f
  7467  0958  3000               	movlw	0
  7468  0959  0776               	addwf	??___ftge,w
  7469  095A  00F0               	movwf	___ftge@ff1
  7470  095B  3000               	movlw	0
  7471  095C  3D77               	addwfc	??___ftge+1,w
  7472  095D  00F1               	movwf	___ftge@ff1+1
  7473  095E  3080               	movlw	128
  7474  095F  3D78               	addwfc	??___ftge+2,w
  7475  0960  00F2               	movwf	___ftge@ff1+2
  7476  0961                     l2162:	
  7477  0961  1FF5               	btfss	___ftge@ff2+2,7
  7478  0962  2977               	goto	l2166
  7479  0963  0973               	comf	___ftge@ff2,w
  7480  0964  00F6               	movwf	??___ftge
  7481  0965  0974               	comf	___ftge@ff2+1,w
  7482  0966  00F7               	movwf	??___ftge+1
  7483  0967  0975               	comf	___ftge@ff2+2,w
  7484  0968  00F8               	movwf	??___ftge+2
  7485  0969  0AF6               	incf	??___ftge,f
  7486  096A  1903               	skipnz
  7487  096B  0AF7               	incf	??___ftge+1,f
  7488  096C  1903               	skipnz
  7489  096D  0AF8               	incf	??___ftge+2,f
  7490  096E  3000               	movlw	0
  7491  096F  0776               	addwf	??___ftge,w
  7492  0970  00F3               	movwf	___ftge@ff2
  7493  0971  3000               	movlw	0
  7494  0972  3D77               	addwfc	??___ftge+1,w
  7495  0973  00F4               	movwf	___ftge@ff2+1
  7496  0974  3080               	movlw	128
  7497  0975  3D78               	addwfc	??___ftge+2,w
  7498  0976  00F5               	movwf	___ftge@ff2+2
  7499  0977                     l2166:	
  7500  0977  3080               	movlw	128
  7501  0978  06F2               	xorwf	___ftge@ff1+2,f
  7502  0979  3080               	movlw	128
  7503  097A  06F5               	xorwf	___ftge@ff2+2,f
  7504  097B  0875               	movf	___ftge@ff2+2,w
  7505  097C  0272               	subwf	___ftge@ff1+2,w
  7506  097D  1D03               	skipz
  7507  097E  0008               	return
  7508  097F  0874               	movf	___ftge@ff2+1,w
  7509  0980  0271               	subwf	___ftge@ff1+1,w
  7510  0981  1D03               	skipz
  7511  0982  0008               	return
  7512  0983  0873               	movf	___ftge@ff2,w
  7513  0984  0270               	subwf	___ftge@ff1,w
  7514  0985  0008               	return
  7515  0986                     __end_of___ftge:	
  7516                           
  7517                           	psect	text7
  7518  086F                     __ptext7:	
  7519 ;; *************** function ___awtoft *****************
  7520 ;; Defined at:
  7521 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awtoft.c"
  7522 ;; Parameters:    Size  Location     Type
  7523 ;;  c               2    8[COMMON] int 
  7524 ;; Auto vars:     Size  Location     Type
  7525 ;;  sign            1   13[COMMON] unsigned char 
  7526 ;; Return value:  Size  Location     Type
  7527 ;;                  3    8[COMMON] float 
  7528 ;; Registers used:
  7529 ;;		wreg, status,2, status,0, pclath, cstack
  7530 ;; Tracked objects:
  7531 ;;		On entry : 0/0
  7532 ;;		On exit  : 0/0
  7533 ;;		Unchanged: 0/0
  7534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7535 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7536 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7537 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7538 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7539 ;;Total ram usage:        6 bytes
  7540 ;; Hardware stack levels used:    1
  7541 ;; Hardware stack levels required when called:    1
  7542 ;; This function calls:
  7543 ;;		___ftpack
  7544 ;; This function is called by:
  7545 ;;		_tempCalc
  7546 ;;		_log
  7547 ;; This function uses a non-reentrant model
  7548 ;;
  7549                           
  7550                           
  7551                           ;psect for function ___awtoft
  7552  086F                     ___awtoft:	
  7553                           
  7554                           ;incstack = 0
  7555                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  7556  086F  01FD               	clrf	___awtoft@sign
  7557  0870  1FF9               	btfss	___awtoft@c+1,7
  7558  0871  2879               	goto	l2154
  7559  0872  09F8               	comf	___awtoft@c,f
  7560  0873  09F9               	comf	___awtoft@c+1,f
  7561  0874  0AF8               	incf	___awtoft@c,f
  7562  0875  1903               	skipnz
  7563  0876  0AF9               	incf	___awtoft@c+1,f
  7564  0877  01FD               	clrf	___awtoft@sign
  7565  0878  0AFD               	incf	___awtoft@sign,f
  7566  0879                     l2154:	
  7567  0879  0878               	movf	___awtoft@c,w
  7568  087A  00F0               	movwf	___ftpack@arg
  7569  087B  0879               	movf	___awtoft@c+1,w
  7570  087C  00F1               	movwf	___ftpack@arg+1
  7571  087D  01F2               	clrf	___ftpack@arg+2
  7572  087E  308E               	movlw	142
  7573  087F  00FB               	movwf	??___awtoft
  7574  0880  087B               	movf	??___awtoft,w
  7575  0881  00F3               	movwf	___ftpack@exp
  7576  0882  087D               	movf	___awtoft@sign,w
  7577  0883  00FC               	movwf	??___awtoft+1
  7578  0884  087C               	movf	??___awtoft+1,w
  7579  0885  00F4               	movwf	___ftpack@sign
  7580  0886  318B  2338         	fcall	___ftpack
  7581  0888  0870               	movf	?___ftpack,w
  7582  0889  00F8               	movwf	?___awtoft
  7583  088A  0871               	movf	?___ftpack+1,w
  7584  088B  00F9               	movwf	?___awtoft+1
  7585  088C  0872               	movf	?___ftpack+2,w
  7586  088D  00FA               	movwf	?___awtoft+2
  7587  088E  0008               	return
  7588  088F                     __end_of___awtoft:	
  7589                           
  7590                           	psect	text8
  7591  0851                     __ptext8:	
  7592 ;; *************** function ___ftsub *****************
  7593 ;; Defined at:
  7594 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftsub.c"
  7595 ;; Parameters:    Size  Location     Type
  7596 ;;  f2              3   45[BANK0 ] float 
  7597 ;;  f1              3   48[BANK0 ] float 
  7598 ;; Auto vars:     Size  Location     Type
  7599 ;;		None
  7600 ;; Return value:  Size  Location     Type
  7601 ;;                  3   45[BANK0 ] float 
  7602 ;; Registers used:
  7603 ;;		wreg, status,2, status,0, pclath, cstack
  7604 ;; Tracked objects:
  7605 ;;		On entry : 0/0
  7606 ;;		On exit  : 0/0
  7607 ;;		Unchanged: 0/0
  7608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7609 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7612 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7613 ;;Total ram usage:        6 bytes
  7614 ;; Hardware stack levels used:    1
  7615 ;; Hardware stack levels required when called:    2
  7616 ;; This function calls:
  7617 ;;		___ftadd
  7618 ;; This function is called by:
  7619 ;;		_tempCalc
  7620 ;; This function uses a non-reentrant model
  7621 ;;
  7622                           
  7623                           
  7624                           ;psect for function ___ftsub
  7625  0851                     ___ftsub:	
  7626                           
  7627                           ;incstack = 0
  7628                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  7629  0851  0020               	movlb	0	; select bank0
  7630  0852  084F               	movf	___ftsub@f2+2,w
  7631  0853  044E               	iorwf	___ftsub@f2+1,w
  7632  0854  044D               	iorwf	___ftsub@f2,w
  7633  0855  1903               	skipnz
  7634  0856  2859               	goto	l2538
  7635  0857  3080               	movlw	128
  7636  0858  06CF               	xorwf	___ftsub@f2+2,f
  7637  0859                     l2538:	
  7638  0859  0850               	movf	___ftsub@f1,w
  7639  085A  00C0               	movwf	___ftadd@f1
  7640  085B  0851               	movf	___ftsub@f1+1,w
  7641  085C  00C1               	movwf	___ftadd@f1+1
  7642  085D  0852               	movf	___ftsub@f1+2,w
  7643  085E  00C2               	movwf	___ftadd@f1+2
  7644  085F  084D               	movf	___ftsub@f2,w
  7645  0860  00C3               	movwf	___ftadd@f2
  7646  0861  084E               	movf	___ftsub@f2+1,w
  7647  0862  00C4               	movwf	___ftadd@f2+1
  7648  0863  084F               	movf	___ftsub@f2+2,w
  7649  0864  00C5               	movwf	___ftadd@f2+2
  7650  0865  3180  20EB         	fcall	___ftadd
  7651  0867  0020               	movlb	0	; select bank0
  7652  0868  0840               	movf	?___ftadd,w
  7653  0869  00CD               	movwf	?___ftsub
  7654  086A  0841               	movf	?___ftadd+1,w
  7655  086B  00CE               	movwf	?___ftsub+1
  7656  086C  0842               	movf	?___ftadd+2,w
  7657  086D  00CF               	movwf	?___ftsub+2
  7658  086E  0008               	return
  7659  086F                     __end_of___ftsub:	
  7660                           
  7661                           	psect	text9
  7662  00EB                     __ptext9:	
  7663 ;; *************** function ___ftadd *****************
  7664 ;; Defined at:
  7665 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftadd.c"
  7666 ;; Parameters:    Size  Location     Type
  7667 ;;  f1              3   32[BANK0 ] float 
  7668 ;;  f2              3   35[BANK0 ] float 
  7669 ;; Auto vars:     Size  Location     Type
  7670 ;;  exp1            1   44[BANK0 ] unsigned char 
  7671 ;;  exp2            1   43[BANK0 ] unsigned char 
  7672 ;;  sign            1   42[BANK0 ] unsigned char 
  7673 ;; Return value:  Size  Location     Type
  7674 ;;                  3   32[BANK0 ] float 
  7675 ;; Registers used:
  7676 ;;		wreg, status,2, status,0, pclath, cstack
  7677 ;; Tracked objects:
  7678 ;;		On entry : 0/0
  7679 ;;		On exit  : 0/0
  7680 ;;		Unchanged: 0/0
  7681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7682 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7683 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7684 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7685 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7686 ;;Total ram usage:       13 bytes
  7687 ;; Hardware stack levels used:    1
  7688 ;; Hardware stack levels required when called:    1
  7689 ;; This function calls:
  7690 ;;		___ftpack
  7691 ;; This function is called by:
  7692 ;;		_tempCalc
  7693 ;;		_main
  7694 ;;		___ftsub
  7695 ;;		_log
  7696 ;;		_eval_poly
  7697 ;; This function uses a non-reentrant model
  7698 ;;
  7699                           
  7700                           
  7701                           ;psect for function ___ftadd
  7702  00EB                     ___ftadd:	
  7703                           
  7704                           ;incstack = 0
  7705                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  7706  00EB  0020               	movlb	0	; select bank0
  7707  00EC  0840               	movf	___ftadd@f1,w
  7708  00ED  00C6               	movwf	??___ftadd
  7709  00EE  0841               	movf	___ftadd@f1+1,w
  7710  00EF  00C7               	movwf	??___ftadd+1
  7711  00F0  0842               	movf	___ftadd@f1+2,w
  7712  00F1  00C8               	movwf	??___ftadd+2
  7713  00F2  1003               	clrc
  7714  00F3  0D47               	rlf	??___ftadd+1,w
  7715  00F4  0D48               	rlf	??___ftadd+2,w
  7716  00F5  00C9               	movwf	??___ftadd+3
  7717  00F6  0849               	movf	??___ftadd+3,w
  7718  00F7  00CC               	movwf	___ftadd@exp1
  7719  00F8  0843               	movf	___ftadd@f2,w
  7720  00F9  00C6               	movwf	??___ftadd
  7721  00FA  0844               	movf	___ftadd@f2+1,w
  7722  00FB  00C7               	movwf	??___ftadd+1
  7723  00FC  0845               	movf	___ftadd@f2+2,w
  7724  00FD  00C8               	movwf	??___ftadd+2
  7725  00FE  1003               	clrc
  7726  00FF  0D47               	rlf	??___ftadd+1,w
  7727  0100  0D48               	rlf	??___ftadd+2,w
  7728  0101  00C9               	movwf	??___ftadd+3
  7729  0102  0849               	movf	??___ftadd+3,w
  7730  0103  00CB               	movwf	___ftadd@exp2
  7731  0104  084C               	movf	___ftadd@exp1,w
  7732  0105  1903               	btfsc	3,2
  7733  0106  2913               	goto	l2002
  7734  0107  084B               	movf	___ftadd@exp2,w
  7735  0108  024C               	subwf	___ftadd@exp1,w
  7736  0109  1803               	skipnc
  7737  010A  291A               	goto	l2006
  7738  010B  034C               	decf	___ftadd@exp1,w
  7739  010C  3AFF               	xorlw	255
  7740  010D  074B               	addwf	___ftadd@exp2,w
  7741  010E  00C6               	movwf	??___ftadd
  7742  010F  3019               	movlw	25
  7743  0110  0246               	subwf	??___ftadd,w
  7744  0111  1C03               	skipc
  7745  0112  291A               	goto	l2006
  7746  0113                     l2002:	
  7747  0113  0843               	movf	___ftadd@f2,w
  7748  0114  00C0               	movwf	?___ftadd
  7749  0115  0844               	movf	___ftadd@f2+1,w
  7750  0116  00C1               	movwf	?___ftadd+1
  7751  0117  0845               	movf	___ftadd@f2+2,w
  7752  0118  00C2               	movwf	?___ftadd+2
  7753  0119  0008               	return
  7754  011A                     l2006:	
  7755  011A  084B               	movf	___ftadd@exp2,w
  7756  011B  1903               	btfsc	3,2
  7757  011C  0008               	return
  7758  011D  084C               	movf	___ftadd@exp1,w
  7759  011E  024B               	subwf	___ftadd@exp2,w
  7760  011F  1803               	skipnc
  7761  0120  2929               	goto	l2012
  7762  0121  034B               	decf	___ftadd@exp2,w
  7763  0122  3AFF               	xorlw	255
  7764  0123  074C               	addwf	___ftadd@exp1,w
  7765  0124  00C6               	movwf	??___ftadd
  7766  0125  3019               	movlw	25
  7767  0126  0246               	subwf	??___ftadd,w
  7768  0127  1803               	btfsc	3,0
  7769  0128  0008               	return
  7770  0129                     l2012:	
  7771  0129  3006               	movlw	6
  7772  012A  00C6               	movwf	??___ftadd
  7773  012B  0846               	movf	??___ftadd,w
  7774  012C  00CA               	movwf	___ftadd@sign
  7775  012D  1BC2               	btfsc	___ftadd@f1+2,7
  7776  012E  17CA               	bsf	___ftadd@sign,7
  7777  012F  1BC5               	btfsc	___ftadd@f2+2,7
  7778  0130  174A               	bsf	___ftadd@sign,6
  7779  0131  17C1               	bsf	___ftadd@f1+1,7
  7780  0132  30FF               	movlw	255
  7781  0133  05C0               	andwf	___ftadd@f1,f
  7782  0134  30FF               	movlw	255
  7783  0135  05C1               	andwf	___ftadd@f1+1,f
  7784  0136  3000               	movlw	0
  7785  0137  05C2               	andwf	___ftadd@f1+2,f
  7786  0138  17C4               	bsf	___ftadd@f2+1,7
  7787  0139  30FF               	movlw	255
  7788  013A  05C3               	andwf	___ftadd@f2,f
  7789  013B  30FF               	movlw	255
  7790  013C  05C4               	andwf	___ftadd@f2+1,f
  7791  013D  3000               	movlw	0
  7792  013E  05C5               	andwf	___ftadd@f2+2,f
  7793  013F  084B               	movf	___ftadd@exp2,w
  7794  0140  024C               	subwf	___ftadd@exp1,w
  7795  0141  1803               	skipnc
  7796  0142  2965               	goto	l2034
  7797  0143                     l2024:	
  7798  0143  3001               	movlw	1
  7799  0144                     u2045:	
  7800  0144  35C3               	lslf	___ftadd@f2,f
  7801  0145  0DC4               	rlf	___ftadd@f2+1,f
  7802  0146  0DC5               	rlf	___ftadd@f2+2,f
  7803  0147  0B89               	decfsz	9,f
  7804  0148  2944               	goto	u2045
  7805  0149  3001               	movlw	1
  7806  014A  02CB               	subwf	___ftadd@exp2,f
  7807  014B  084B               	movf	___ftadd@exp2,w
  7808  014C  064C               	xorwf	___ftadd@exp1,w
  7809  014D  1903               	skipnz
  7810  014E  2960               	goto	l2032
  7811  014F  3001               	movlw	1
  7812  0150  02CA               	subwf	___ftadd@sign,f
  7813  0151  084A               	movf	___ftadd@sign,w
  7814  0152  3907               	andlw	7
  7815  0153  1903               	btfsc	3,2
  7816  0154  2960               	goto	l2032
  7817  0155  2943               	goto	l2024
  7818  0156                     l2030:	
  7819  0156  3001               	movlw	1
  7820  0157                     u2075:	
  7821  0157  36C2               	lsrf	___ftadd@f1+2,f
  7822  0158  0CC1               	rrf	___ftadd@f1+1,f
  7823  0159  0CC0               	rrf	___ftadd@f1,f
  7824  015A  0B89               	decfsz	9,f
  7825  015B  2957               	goto	u2075
  7826  015C  3001               	movlw	1
  7827  015D  00C6               	movwf	??___ftadd
  7828  015E  0846               	movf	??___ftadd,w
  7829  015F  07CC               	addwf	___ftadd@exp1,f
  7830  0160                     l2032:	
  7831  0160  084C               	movf	___ftadd@exp1,w
  7832  0161  064B               	xorwf	___ftadd@exp2,w
  7833  0162  1903               	btfsc	3,2
  7834  0163  298A               	goto	l596
  7835  0164  2956               	goto	l2030
  7836  0165                     l2034:	
  7837  0165  084C               	movf	___ftadd@exp1,w
  7838  0166  024B               	subwf	___ftadd@exp2,w
  7839  0167  1803               	skipnc
  7840  0168  298A               	goto	l596
  7841  0169                     l2036:	
  7842  0169  3001               	movlw	1
  7843  016A                     u2105:	
  7844  016A  35C0               	lslf	___ftadd@f1,f
  7845  016B  0DC1               	rlf	___ftadd@f1+1,f
  7846  016C  0DC2               	rlf	___ftadd@f1+2,f
  7847  016D  0B89               	decfsz	9,f
  7848  016E  296A               	goto	u2105
  7849  016F  3001               	movlw	1
  7850  0170  02CC               	subwf	___ftadd@exp1,f
  7851  0171  084B               	movf	___ftadd@exp2,w
  7852  0172  064C               	xorwf	___ftadd@exp1,w
  7853  0173  1903               	skipnz
  7854  0174  2986               	goto	l2044
  7855  0175  3001               	movlw	1
  7856  0176  02CA               	subwf	___ftadd@sign,f
  7857  0177  084A               	movf	___ftadd@sign,w
  7858  0178  3907               	andlw	7
  7859  0179  1903               	btfsc	3,2
  7860  017A  2986               	goto	l2044
  7861  017B  2969               	goto	l2036
  7862  017C                     l2042:	
  7863  017C  3001               	movlw	1
  7864  017D                     u2135:	
  7865  017D  36C5               	lsrf	___ftadd@f2+2,f
  7866  017E  0CC4               	rrf	___ftadd@f2+1,f
  7867  017F  0CC3               	rrf	___ftadd@f2,f
  7868  0180  0B89               	decfsz	9,f
  7869  0181  297D               	goto	u2135
  7870  0182  3001               	movlw	1
  7871  0183  00C6               	movwf	??___ftadd
  7872  0184  0846               	movf	??___ftadd,w
  7873  0185  07CB               	addwf	___ftadd@exp2,f
  7874  0186                     l2044:	
  7875  0186  084C               	movf	___ftadd@exp1,w
  7876  0187  064B               	xorwf	___ftadd@exp2,w
  7877  0188  1D03               	skipz
  7878  0189  297C               	goto	l2042
  7879  018A                     l596:	
  7880  018A  1FCA               	btfss	___ftadd@sign,7
  7881  018B  299C               	goto	l2048
  7882  018C  30FF               	movlw	255
  7883  018D  06C0               	xorwf	___ftadd@f1,f
  7884  018E  30FF               	movlw	255
  7885  018F  06C1               	xorwf	___ftadd@f1+1,f
  7886  0190  30FF               	movlw	255
  7887  0191  06C2               	xorwf	___ftadd@f1+2,f
  7888  0192  3001               	movlw	1
  7889  0193  07C0               	addwf	___ftadd@f1,f
  7890  0194  3000               	movlw	0
  7891  0195  1803               	skipnc
  7892  0196  3001               	movlw	1
  7893  0197  07C1               	addwf	___ftadd@f1+1,f
  7894  0198  3000               	movlw	0
  7895  0199  1803               	skipnc
  7896  019A  3001               	movlw	1
  7897  019B  07C2               	addwf	___ftadd@f1+2,f
  7898  019C                     l2048:	
  7899  019C  1F4A               	btfss	___ftadd@sign,6
  7900  019D  29AE               	goto	l2052
  7901  019E  30FF               	movlw	255
  7902  019F  06C3               	xorwf	___ftadd@f2,f
  7903  01A0  30FF               	movlw	255
  7904  01A1  06C4               	xorwf	___ftadd@f2+1,f
  7905  01A2  30FF               	movlw	255
  7906  01A3  06C5               	xorwf	___ftadd@f2+2,f
  7907  01A4  3001               	movlw	1
  7908  01A5  07C3               	addwf	___ftadd@f2,f
  7909  01A6  3000               	movlw	0
  7910  01A7  1803               	skipnc
  7911  01A8  3001               	movlw	1
  7912  01A9  07C4               	addwf	___ftadd@f2+1,f
  7913  01AA  3000               	movlw	0
  7914  01AB  1803               	skipnc
  7915  01AC  3001               	movlw	1
  7916  01AD  07C5               	addwf	___ftadd@f2+2,f
  7917  01AE                     l2052:	
  7918  01AE  01CA               	clrf	___ftadd@sign
  7919  01AF  0840               	movf	___ftadd@f1,w
  7920  01B0  07C3               	addwf	___ftadd@f2,f
  7921  01B1  0841               	movf	___ftadd@f1+1,w
  7922  01B2  3DC4               	addwfc	___ftadd@f2+1,f
  7923  01B3  0842               	movf	___ftadd@f1+2,w
  7924  01B4  3DC5               	addwfc	___ftadd@f2+2,f
  7925  01B5  1FC5               	btfss	___ftadd@f2+2,7
  7926  01B6  29C9               	goto	l2062
  7927  01B7  30FF               	movlw	255
  7928  01B8  06C3               	xorwf	___ftadd@f2,f
  7929  01B9  30FF               	movlw	255
  7930  01BA  06C4               	xorwf	___ftadd@f2+1,f
  7931  01BB  30FF               	movlw	255
  7932  01BC  06C5               	xorwf	___ftadd@f2+2,f
  7933  01BD  3001               	movlw	1
  7934  01BE  07C3               	addwf	___ftadd@f2,f
  7935  01BF  3000               	movlw	0
  7936  01C0  1803               	skipnc
  7937  01C1  3001               	movlw	1
  7938  01C2  07C4               	addwf	___ftadd@f2+1,f
  7939  01C3  3000               	movlw	0
  7940  01C4  1803               	skipnc
  7941  01C5  3001               	movlw	1
  7942  01C6  07C5               	addwf	___ftadd@f2+2,f
  7943  01C7  01CA               	clrf	___ftadd@sign
  7944  01C8  0ACA               	incf	___ftadd@sign,f
  7945  01C9                     l2062:	
  7946  01C9  0843               	movf	___ftadd@f2,w
  7947  01CA  00F0               	movwf	___ftpack@arg
  7948  01CB  0844               	movf	___ftadd@f2+1,w
  7949  01CC  00F1               	movwf	___ftpack@arg+1
  7950  01CD  0845               	movf	___ftadd@f2+2,w
  7951  01CE  00F2               	movwf	___ftpack@arg+2
  7952  01CF  084C               	movf	___ftadd@exp1,w
  7953  01D0  00C6               	movwf	??___ftadd
  7954  01D1  0846               	movf	??___ftadd,w
  7955  01D2  00F3               	movwf	___ftpack@exp
  7956  01D3  084A               	movf	___ftadd@sign,w
  7957  01D4  00C7               	movwf	??___ftadd+1
  7958  01D5  0847               	movf	??___ftadd+1,w
  7959  01D6  00F4               	movwf	___ftpack@sign
  7960  01D7  318B  2338         	fcall	___ftpack
  7961  01D9  0870               	movf	?___ftpack,w
  7962  01DA  0020               	movlb	0	; select bank0
  7963  01DB  00C0               	movwf	?___ftadd
  7964  01DC  0871               	movf	?___ftpack+1,w
  7965  01DD  00C1               	movwf	?___ftadd+1
  7966  01DE  0872               	movf	?___ftpack+2,w
  7967  01DF  00C2               	movwf	?___ftadd+2
  7968  01E0  0008               	return
  7969  01E1                     __end_of___ftadd:	
  7970                           
  7971                           	psect	text10
  7972  0D2B                     __ptext10:	
  7973 ;; *************** function ___ftdiv *****************
  7974 ;; Defined at:
  7975 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftdiv.c"
  7976 ;; Parameters:    Size  Location     Type
  7977 ;;  f2              3   16[BANK0 ] float 
  7978 ;;  f1              3   19[BANK0 ] float 
  7979 ;; Auto vars:     Size  Location     Type
  7980 ;;  f3              3   27[BANK0 ] float 
  7981 ;;  sign            1   31[BANK0 ] unsigned char 
  7982 ;;  exp             1   30[BANK0 ] unsigned char 
  7983 ;;  cntr            1   26[BANK0 ] unsigned char 
  7984 ;; Return value:  Size  Location     Type
  7985 ;;                  3   16[BANK0 ] float 
  7986 ;; Registers used:
  7987 ;;		wreg, status,2, status,0, pclath, cstack
  7988 ;; Tracked objects:
  7989 ;;		On entry : 0/0
  7990 ;;		On exit  : 0/0
  7991 ;;		Unchanged: 0/0
  7992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7993 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7994 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7995 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7996 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7997 ;;Total ram usage:       16 bytes
  7998 ;; Hardware stack levels used:    1
  7999 ;; Hardware stack levels required when called:    1
  8000 ;; This function calls:
  8001 ;;		___ftpack
  8002 ;; This function is called by:
  8003 ;;		_tempCalc
  8004 ;;		_main
  8005 ;; This function uses a non-reentrant model
  8006 ;;
  8007                           
  8008                           
  8009                           ;psect for function ___ftdiv
  8010  0D2B                     ___ftdiv:	
  8011                           
  8012                           ;incstack = 0
  8013                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  8014  0D2B  0020               	movlb	0	; select bank0
  8015  0D2C  0833               	movf	___ftdiv@f1,w
  8016  0D2D  00B6               	movwf	??___ftdiv
  8017  0D2E  0834               	movf	___ftdiv@f1+1,w
  8018  0D2F  00B7               	movwf	??___ftdiv+1
  8019  0D30  0835               	movf	___ftdiv@f1+2,w
  8020  0D31  00B8               	movwf	??___ftdiv+2
  8021  0D32  1003               	clrc
  8022  0D33  0D37               	rlf	??___ftdiv+1,w
  8023  0D34  0D38               	rlf	??___ftdiv+2,w
  8024  0D35  00B9               	movwf	??___ftdiv+3
  8025  0D36  0839               	movf	??___ftdiv+3,w
  8026  0D37  00BE               	movwf	___ftdiv@exp
  8027  0D38  083E               	movf	___ftdiv@exp,w
  8028  0D39  1D03               	btfss	3,2
  8029  0D3A  2D42               	goto	l2498
  8030  0D3B  3000               	movlw	0
  8031  0D3C  00B0               	movwf	?___ftdiv
  8032  0D3D  3000               	movlw	0
  8033  0D3E  00B1               	movwf	?___ftdiv+1
  8034  0D3F  3000               	movlw	0
  8035  0D40  00B2               	movwf	?___ftdiv+2
  8036  0D41  0008               	return
  8037  0D42                     l2498:	
  8038  0D42  0830               	movf	___ftdiv@f2,w
  8039  0D43  00B6               	movwf	??___ftdiv
  8040  0D44  0831               	movf	___ftdiv@f2+1,w
  8041  0D45  00B7               	movwf	??___ftdiv+1
  8042  0D46  0832               	movf	___ftdiv@f2+2,w
  8043  0D47  00B8               	movwf	??___ftdiv+2
  8044  0D48  1003               	clrc
  8045  0D49  0D37               	rlf	??___ftdiv+1,w
  8046  0D4A  0D38               	rlf	??___ftdiv+2,w
  8047  0D4B  00B9               	movwf	??___ftdiv+3
  8048  0D4C  0839               	movf	??___ftdiv+3,w
  8049  0D4D  00BF               	movwf	___ftdiv@sign
  8050  0D4E  083F               	movf	___ftdiv@sign,w
  8051  0D4F  1D03               	btfss	3,2
  8052  0D50  2D58               	goto	l2504
  8053  0D51  3000               	movlw	0
  8054  0D52  00B0               	movwf	?___ftdiv
  8055  0D53  3000               	movlw	0
  8056  0D54  00B1               	movwf	?___ftdiv+1
  8057  0D55  3000               	movlw	0
  8058  0D56  00B2               	movwf	?___ftdiv+2
  8059  0D57  0008               	return
  8060  0D58                     l2504:	
  8061  0D58  3000               	movlw	0
  8062  0D59  00BB               	movwf	___ftdiv@f3
  8063  0D5A  3000               	movlw	0
  8064  0D5B  00BC               	movwf	___ftdiv@f3+1
  8065  0D5C  3000               	movlw	0
  8066  0D5D  00BD               	movwf	___ftdiv@f3+2
  8067  0D5E  3089               	movlw	137
  8068  0D5F  073F               	addwf	___ftdiv@sign,w
  8069  0D60  00B6               	movwf	??___ftdiv
  8070  0D61  0836               	movf	??___ftdiv,w
  8071  0D62  02BE               	subwf	___ftdiv@exp,f
  8072  0D63  0833               	movf	___ftdiv@f1,w
  8073  0D64  00B6               	movwf	??___ftdiv
  8074  0D65  0834               	movf	___ftdiv@f1+1,w
  8075  0D66  00B7               	movwf	??___ftdiv+1
  8076  0D67  0835               	movf	___ftdiv@f1+2,w
  8077  0D68  00B8               	movwf	??___ftdiv+2
  8078  0D69  3010               	movlw	16
  8079  0D6A                     u2755:	
  8080  0D6A  36B8               	lsrf	??___ftdiv+2,f
  8081  0D6B  0CB7               	rrf	??___ftdiv+1,f
  8082  0D6C  0CB6               	rrf	??___ftdiv,f
  8083  0D6D  0B89               	decfsz	9,f
  8084  0D6E  2D6A               	goto	u2755
  8085  0D6F  0836               	movf	??___ftdiv,w
  8086  0D70  00B9               	movwf	??___ftdiv+3
  8087  0D71  0839               	movf	??___ftdiv+3,w
  8088  0D72  00BF               	movwf	___ftdiv@sign
  8089  0D73  0830               	movf	___ftdiv@f2,w
  8090  0D74  00B6               	movwf	??___ftdiv
  8091  0D75  0831               	movf	___ftdiv@f2+1,w
  8092  0D76  00B7               	movwf	??___ftdiv+1
  8093  0D77  0832               	movf	___ftdiv@f2+2,w
  8094  0D78  00B8               	movwf	??___ftdiv+2
  8095  0D79  3010               	movlw	16
  8096  0D7A                     u2765:	
  8097  0D7A  36B8               	lsrf	??___ftdiv+2,f
  8098  0D7B  0CB7               	rrf	??___ftdiv+1,f
  8099  0D7C  0CB6               	rrf	??___ftdiv,f
  8100  0D7D  0B89               	decfsz	9,f
  8101  0D7E  2D7A               	goto	u2765
  8102  0D7F  0836               	movf	??___ftdiv,w
  8103  0D80  00B9               	movwf	??___ftdiv+3
  8104  0D81  0839               	movf	??___ftdiv+3,w
  8105  0D82  06BF               	xorwf	___ftdiv@sign,f
  8106  0D83  3080               	movlw	128
  8107  0D84  00B6               	movwf	??___ftdiv
  8108  0D85  0836               	movf	??___ftdiv,w
  8109  0D86  05BF               	andwf	___ftdiv@sign,f
  8110  0D87  17B4               	bsf	___ftdiv@f1+1,7
  8111  0D88  30FF               	movlw	255
  8112  0D89  05B3               	andwf	___ftdiv@f1,f
  8113  0D8A  30FF               	movlw	255
  8114  0D8B  05B4               	andwf	___ftdiv@f1+1,f
  8115  0D8C  3000               	movlw	0
  8116  0D8D  05B5               	andwf	___ftdiv@f1+2,f
  8117  0D8E  17B1               	bsf	___ftdiv@f2+1,7
  8118  0D8F  30FF               	movlw	255
  8119  0D90  05B0               	andwf	___ftdiv@f2,f
  8120  0D91  30FF               	movlw	255
  8121  0D92  05B1               	andwf	___ftdiv@f2+1,f
  8122  0D93  3000               	movlw	0
  8123  0D94  05B2               	andwf	___ftdiv@f2+2,f
  8124  0D95  3018               	movlw	24
  8125  0D96  00B6               	movwf	??___ftdiv
  8126  0D97  0836               	movf	??___ftdiv,w
  8127  0D98  00BA               	movwf	___ftdiv@cntr
  8128  0D99                     l2518:	
  8129  0D99  3001               	movlw	1
  8130  0D9A                     u2775:	
  8131  0D9A  35BB               	lslf	___ftdiv@f3,f
  8132  0D9B  0DBC               	rlf	___ftdiv@f3+1,f
  8133  0D9C  0DBD               	rlf	___ftdiv@f3+2,f
  8134  0D9D  0B89               	decfsz	9,f
  8135  0D9E  2D9A               	goto	u2775
  8136  0D9F  0832               	movf	___ftdiv@f2+2,w
  8137  0DA0  0235               	subwf	___ftdiv@f1+2,w
  8138  0DA1  1D03               	skipz
  8139  0DA2  2DA9               	goto	u2785
  8140  0DA3  0831               	movf	___ftdiv@f2+1,w
  8141  0DA4  0234               	subwf	___ftdiv@f1+1,w
  8142  0DA5  1D03               	skipz
  8143  0DA6  2DA9               	goto	u2785
  8144  0DA7  0830               	movf	___ftdiv@f2,w
  8145  0DA8  0233               	subwf	___ftdiv@f1,w
  8146  0DA9                     u2785:	
  8147  0DA9  1C03               	skipc
  8148  0DAA  2DB2               	goto	l2526
  8149  0DAB  0830               	movf	___ftdiv@f2,w
  8150  0DAC  02B3               	subwf	___ftdiv@f1,f
  8151  0DAD  0831               	movf	___ftdiv@f2+1,w
  8152  0DAE  3BB4               	subwfb	___ftdiv@f1+1,f
  8153  0DAF  0832               	movf	___ftdiv@f2+2,w
  8154  0DB0  3BB5               	subwfb	___ftdiv@f1+2,f
  8155  0DB1  143B               	bsf	___ftdiv@f3,0
  8156  0DB2                     l2526:	
  8157  0DB2  3001               	movlw	1
  8158  0DB3                     u2795:	
  8159  0DB3  35B3               	lslf	___ftdiv@f1,f
  8160  0DB4  0DB4               	rlf	___ftdiv@f1+1,f
  8161  0DB5  0DB5               	rlf	___ftdiv@f1+2,f
  8162  0DB6  0B89               	decfsz	9,f
  8163  0DB7  2DB3               	goto	u2795
  8164  0DB8  3001               	movlw	1
  8165  0DB9  02BA               	subwf	___ftdiv@cntr,f
  8166  0DBA  1D03               	btfss	3,2
  8167  0DBB  2D99               	goto	l2518
  8168  0DBC  083B               	movf	___ftdiv@f3,w
  8169  0DBD  00F0               	movwf	___ftpack@arg
  8170  0DBE  083C               	movf	___ftdiv@f3+1,w
  8171  0DBF  00F1               	movwf	___ftpack@arg+1
  8172  0DC0  083D               	movf	___ftdiv@f3+2,w
  8173  0DC1  00F2               	movwf	___ftpack@arg+2
  8174  0DC2  083E               	movf	___ftdiv@exp,w
  8175  0DC3  00B6               	movwf	??___ftdiv
  8176  0DC4  0836               	movf	??___ftdiv,w
  8177  0DC5  00F3               	movwf	___ftpack@exp
  8178  0DC6  083F               	movf	___ftdiv@sign,w
  8179  0DC7  00B7               	movwf	??___ftdiv+1
  8180  0DC8  0837               	movf	??___ftdiv+1,w
  8181  0DC9  00F4               	movwf	___ftpack@sign
  8182  0DCA  318B  2338         	fcall	___ftpack
  8183  0DCC  0870               	movf	?___ftpack,w
  8184  0DCD  0020               	movlb	0	; select bank0
  8185  0DCE  00B0               	movwf	?___ftdiv
  8186  0DCF  0871               	movf	?___ftpack+1,w
  8187  0DD0  00B1               	movwf	?___ftdiv+1
  8188  0DD1  0872               	movf	?___ftpack+2,w
  8189  0DD2  00B2               	movwf	?___ftdiv+2
  8190  0DD3  0008               	return
  8191  0DD4                     __end_of___ftdiv:	
  8192                           
  8193                           	psect	text11
  8194  0B38                     __ptext11:	
  8195 ;; *************** function ___ftpack *****************
  8196 ;; Defined at:
  8197 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\float.c"
  8198 ;; Parameters:    Size  Location     Type
  8199 ;;  arg             3    0[COMMON] unsigned um
  8200 ;;  exp             1    3[COMMON] unsigned char 
  8201 ;;  sign            1    4[COMMON] unsigned char 
  8202 ;; Auto vars:     Size  Location     Type
  8203 ;;		None
  8204 ;; Return value:  Size  Location     Type
  8205 ;;                  3    0[COMMON] float 
  8206 ;; Registers used:
  8207 ;;		wreg, status,2, status,0
  8208 ;; Tracked objects:
  8209 ;;		On entry : 0/0
  8210 ;;		On exit  : 0/0
  8211 ;;		Unchanged: 0/0
  8212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8213 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8215 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8216 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8217 ;;Total ram usage:        8 bytes
  8218 ;; Hardware stack levels used:    1
  8219 ;; This function calls:
  8220 ;;		Nothing
  8221 ;; This function is called by:
  8222 ;;		___awtoft
  8223 ;;		___ftadd
  8224 ;;		___ftdiv
  8225 ;;		___ftmul
  8226 ;; This function uses a non-reentrant model
  8227 ;;
  8228                           
  8229                           
  8230                           ;psect for function ___ftpack
  8231  0B38                     ___ftpack:	
  8232                           
  8233                           ;incstack = 0
  8234                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  8235  0B38  0873               	movf	___ftpack@exp,w
  8236  0B39  1903               	btfsc	3,2
  8237  0B3A  2B40               	goto	l1938
  8238  0B3B  0872               	movf	___ftpack@arg+2,w
  8239  0B3C  0471               	iorwf	___ftpack@arg+1,w
  8240  0B3D  0470               	iorwf	___ftpack@arg,w
  8241  0B3E  1D03               	skipz
  8242  0B3F  2B51               	goto	l1944
  8243  0B40                     l1938:	
  8244  0B40  3000               	movlw	0
  8245  0B41  00F0               	movwf	?___ftpack
  8246  0B42  3000               	movlw	0
  8247  0B43  00F1               	movwf	?___ftpack+1
  8248  0B44  3000               	movlw	0
  8249  0B45  00F2               	movwf	?___ftpack+2
  8250  0B46  0008               	return
  8251  0B47                     l1942:	
  8252  0B47  3001               	movlw	1
  8253  0B48  00F5               	movwf	??___ftpack
  8254  0B49  0875               	movf	??___ftpack,w
  8255  0B4A  07F3               	addwf	___ftpack@exp,f
  8256  0B4B  3001               	movlw	1
  8257  0B4C                     u1775:	
  8258  0B4C  36F2               	lsrf	___ftpack@arg+2,f
  8259  0B4D  0CF1               	rrf	___ftpack@arg+1,f
  8260  0B4E  0CF0               	rrf	___ftpack@arg,f
  8261  0B4F  0B89               	decfsz	9,f
  8262  0B50  2B4C               	goto	u1775
  8263  0B51                     l1944:	
  8264  0B51  30FE               	movlw	254
  8265  0B52  0572               	andwf	___ftpack@arg+2,w
  8266  0B53  1903               	btfsc	3,2
  8267  0B54  2B6A               	goto	l565
  8268  0B55  2B47               	goto	l1942
  8269  0B56                     l1946:	
  8270  0B56  3001               	movlw	1
  8271  0B57  00F5               	movwf	??___ftpack
  8272  0B58  0875               	movf	??___ftpack,w
  8273  0B59  07F3               	addwf	___ftpack@exp,f
  8274  0B5A  3001               	movlw	1
  8275  0B5B  07F0               	addwf	___ftpack@arg,f
  8276  0B5C  3000               	movlw	0
  8277  0B5D  1803               	skipnc
  8278  0B5E  3001               	movlw	1
  8279  0B5F  07F1               	addwf	___ftpack@arg+1,f
  8280  0B60  3000               	movlw	0
  8281  0B61  1803               	skipnc
  8282  0B62  3001               	movlw	1
  8283  0B63  07F2               	addwf	___ftpack@arg+2,f
  8284  0B64  3001               	movlw	1
  8285  0B65                     u1795:	
  8286  0B65  36F2               	lsrf	___ftpack@arg+2,f
  8287  0B66  0CF1               	rrf	___ftpack@arg+1,f
  8288  0B67  0CF0               	rrf	___ftpack@arg,f
  8289  0B68  0B89               	decfsz	9,f
  8290  0B69  2B65               	goto	u1795
  8291  0B6A                     l565:	
  8292  0B6A  30FF               	movlw	255
  8293  0B6B  0572               	andwf	___ftpack@arg+2,w
  8294  0B6C  1903               	btfsc	3,2
  8295  0B6D  2B77               	goto	l1954
  8296  0B6E  2B56               	goto	l1946
  8297  0B6F                     l1952:	
  8298  0B6F  3001               	movlw	1
  8299  0B70  02F3               	subwf	___ftpack@exp,f
  8300  0B71  3001               	movlw	1
  8301  0B72                     u1815:	
  8302  0B72  35F0               	lslf	___ftpack@arg,f
  8303  0B73  0DF1               	rlf	___ftpack@arg+1,f
  8304  0B74  0DF2               	rlf	___ftpack@arg+2,f
  8305  0B75  0B89               	decfsz	9,f
  8306  0B76  2B72               	goto	u1815
  8307  0B77                     l1954:	
  8308  0B77  1BF1               	btfsc	___ftpack@arg+1,7
  8309  0B78  2B7D               	goto	l572
  8310  0B79  3002               	movlw	2
  8311  0B7A  0273               	subwf	___ftpack@exp,w
  8312  0B7B  1803               	skipnc
  8313  0B7C  2B6F               	goto	l1952
  8314  0B7D                     l572:	
  8315  0B7D  1873               	btfsc	___ftpack@exp,0
  8316  0B7E  2B85               	goto	l573
  8317  0B7F  30FF               	movlw	255
  8318  0B80  05F0               	andwf	___ftpack@arg,f
  8319  0B81  307F               	movlw	127
  8320  0B82  05F1               	andwf	___ftpack@arg+1,f
  8321  0B83  30FF               	movlw	255
  8322  0B84  05F2               	andwf	___ftpack@arg+2,f
  8323  0B85                     l573:	
  8324  0B85  1003               	clrc
  8325  0B86  0CF3               	rrf	___ftpack@exp,f
  8326  0B87  0873               	movf	___ftpack@exp,w
  8327  0B88  00F5               	movwf	??___ftpack
  8328  0B89  01F6               	clrf	??___ftpack+1
  8329  0B8A  01F7               	clrf	??___ftpack+2
  8330  0B8B  3010               	movlw	16
  8331  0B8C                     u1855:	
  8332  0B8C  35F5               	lslf	??___ftpack,f
  8333  0B8D  0DF6               	rlf	??___ftpack+1,f
  8334  0B8E  0DF7               	rlf	??___ftpack+2,f
  8335  0B8F  0B89               	decfsz	9,f
  8336  0B90  2B8C               	goto	u1855
  8337  0B91  0875               	movf	??___ftpack,w
  8338  0B92  04F0               	iorwf	___ftpack@arg,f
  8339  0B93  0876               	movf	??___ftpack+1,w
  8340  0B94  04F1               	iorwf	___ftpack@arg+1,f
  8341  0B95  0877               	movf	??___ftpack+2,w
  8342  0B96  04F2               	iorwf	___ftpack@arg+2,f
  8343  0B97  0874               	movf	___ftpack@sign,w
  8344  0B98  1903               	btfsc	3,2
  8345  0B99  0008               	return
  8346  0B9A  17F2               	bsf	___ftpack@arg+2,7
  8347  0B9B  0008               	return
  8348  0B9C                     __end_of___ftpack:	
  8349                           
  8350                           	psect	text12
  8351  01E1                     __ptext12:	
  8352 ;; *************** function _readAnalog *****************
  8353 ;; Defined at:
  8354 ;;		line 88 in file "adcc.c"
  8355 ;; Parameters:    Size  Location     Type
  8356 ;;  channel         2    6[BANK0 ] int 
  8357 ;; Auto vars:     Size  Location     Type
  8358 ;;  value           2   11[COMMON] int 
  8359 ;;  analog_chann    2    9[COMMON] int 
  8360 ;; Return value:  Size  Location     Type
  8361 ;;                  2    6[BANK0 ] int 
  8362 ;; Registers used:
  8363 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8364 ;; Tracked objects:
  8365 ;;		On entry : 0/0
  8366 ;;		On exit  : 0/0
  8367 ;;		Unchanged: 0/0
  8368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8369 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8370 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8371 ;;      Temps:          0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8372 ;;      Totals:         4      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8373 ;;Total ram usage:       22 bytes
  8374 ;; Hardware stack levels used:    1
  8375 ;; Hardware stack levels required when called:    1
  8376 ;; This function calls:
  8377 ;;		_ADCRead
  8378 ;;		___aldiv
  8379 ;;		___wmul
  8380 ;; This function is called by:
  8381 ;;		_main
  8382 ;; This function uses a non-reentrant model
  8383 ;;
  8384                           
  8385                           
  8386                           ;psect for function _readAnalog
  8387  01E1                     _readAnalog:	
  8388                           
  8389                           ;adcc.c: 90: int value;
  8390                           ;adcc.c: 92: int analog_channel = channels[channel];
  8391                           
  8392                           ;incstack = 0
  8393                           ; Regs used in _readAnalog: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8394  01E1  0020               	movlb	0	; select bank0
  8395  01E2  3526               	lslf	readAnalog@channel,w
  8396  01E3  3ED9               	addlw	(low (_channels| 0))& (0+255)
  8397  01E4  0086               	movwf	6
  8398  01E5  0187               	clrf	7
  8399  01E6  3F40               	moviw [0]fsr1
  8400  01E7  00F9               	movwf	readAnalog@analog_channel
  8401  01E8  3F41               	moviw [1]fsr1
  8402  01E9  00FA               	movwf	readAnalog@analog_channel+1
  8403                           
  8404                           ;adcc.c: 94: value = ADCRead(analog_channel);
  8405  01EA  0879               	movf	readAnalog@analog_channel,w
  8406  01EB  3197  2784  3181   	fcall	_ADCRead
  8407  01EE  0871               	movf	?_ADCRead+1,w
  8408  01EF  00FC               	movwf	readAnalog@value+1
  8409  01F0  0870               	movf	?_ADCRead,w
  8410  01F1  00FB               	movwf	readAnalog@value
  8411                           
  8412                           ;adcc.c: 98: totals[channel] = totals[channel] - samples[channel][sampleIndex];
  8413  01F2  0020               	movlb	0	; select bank0
  8414  01F3  0826               	movf	readAnalog@channel,w
  8415  01F4  00A8               	movwf	??_readAnalog
  8416  01F5  3001               	movlw	1
  8417  01F6                     u2825:	
  8418  01F6  35A8               	lslf	??_readAnalog,f
  8419  01F7  3EFF               	addlw	-1
  8420  01F8  1D03               	skipz
  8421  01F9  29F6               	goto	u2825
  8422  01FA  3528               	lslf	??_readAnalog,w
  8423  01FB  3EA0               	addlw	(low (_totals| 0))& (0+255)
  8424  01FC  0086               	movwf	6
  8425  01FD  0187               	clrf	7
  8426  01FE  3F40               	moviw [0]fsr1
  8427  01FF  00A9               	movwf	??_readAnalog+1
  8428  0200  3F41               	moviw [1]fsr1
  8429  0201  00AA               	movwf	??_readAnalog+2
  8430  0202  3F42               	moviw [2]fsr1
  8431  0203  00AB               	movwf	??_readAnalog+3
  8432  0204  3F43               	moviw [3]fsr1
  8433  0205  00AC               	movwf	??_readAnalog+4
  8434  0206  086F               	movf	_sampleIndex+1,w
  8435  0207  00AE               	movwf	??_readAnalog+6
  8436  0208  086E               	movf	_sampleIndex,w
  8437  0209  00AD               	movwf	??_readAnalog+5
  8438  020A  35AD               	lslf	??_readAnalog+5,f
  8439  020B  0DAE               	rlf	??_readAnalog+6,f
  8440  020C  0827               	movf	readAnalog@channel+1,w
  8441  020D  00F1               	movwf	___wmul@multiplier+1
  8442  020E  0826               	movf	readAnalog@channel,w
  8443  020F  00F0               	movwf	___wmul@multiplier
  8444  0210  3028               	movlw	40
  8445  0211  00F2               	movwf	___wmul@multiplicand
  8446  0212  3000               	movlw	0
  8447  0213  00F3               	movwf	___wmul@multiplicand+1
  8448  0214  3188  2036  3181   	fcall	___wmul
  8449  0217  3000               	movlw	0
  8450  0218  0020               	movlb	0	; select bank0
  8451  0219  00AF               	movwf	??_readAnalog+7
  8452  021A  3023               	movlw	35
  8453  021B  00B0               	movwf	??_readAnalog+8
  8454  021C  0870               	movf	?___wmul,w
  8455  021D  072F               	addwf	??_readAnalog+7,w
  8456  021E  00B1               	movwf	??_readAnalog+9
  8457  021F  0871               	movf	?___wmul+1,w
  8458  0220  3D30               	addwfc	??_readAnalog+8,w
  8459  0221  00B2               	movwf	??_readAnalog+10
  8460  0222  0831               	movf	??_readAnalog+9,w
  8461  0223  072D               	addwf	??_readAnalog+5,w
  8462  0224  0084               	movwf	4
  8463  0225  0832               	movf	??_readAnalog+10,w
  8464  0226  3D2E               	addwfc	??_readAnalog+6,w
  8465  0227  0085               	movwf	5
  8466  0228  3F00               	moviw [0]fsr0
  8467  0229  00B3               	movwf	??_readAnalog+11
  8468  022A  3F01               	moviw [1]fsr0
  8469  022B  00B4               	movwf	??_readAnalog+12
  8470  022C  01B5               	clrf	??_readAnalog+13
  8471  022D  01B6               	clrf	??_readAnalog+14
  8472  022E  09B3               	comf	??_readAnalog+11,f
  8473  022F  09B4               	comf	??_readAnalog+12,f
  8474  0230  09B5               	comf	??_readAnalog+13,f
  8475  0231  09B6               	comf	??_readAnalog+14,f
  8476  0232  0AB3               	incf	??_readAnalog+11,f
  8477  0233  1903               	skipnz
  8478  0234  0AB4               	incf	??_readAnalog+12,f
  8479  0235  1903               	skipnz
  8480  0236  0AB5               	incf	??_readAnalog+13,f
  8481  0237  1903               	skipnz
  8482  0238  0AB6               	incf	??_readAnalog+14,f
  8483  0239  0833               	movf	??_readAnalog+11,w
  8484  023A  07A9               	addwf	??_readAnalog+1,f
  8485  023B  0834               	movf	??_readAnalog+12,w
  8486  023C  3DAA               	addwfc	??_readAnalog+2,f
  8487  023D  0835               	movf	??_readAnalog+13,w
  8488  023E  3DAB               	addwfc	??_readAnalog+3,f
  8489  023F  0836               	movf	??_readAnalog+14,w
  8490  0240  3DAC               	addwfc	??_readAnalog+4,f
  8491  0241  0826               	movf	readAnalog@channel,w
  8492  0242  00B7               	movwf	??_readAnalog+15
  8493  0243  3001               	movlw	1
  8494  0244                     u2835:	
  8495  0244  35B7               	lslf	??_readAnalog+15,f
  8496  0245  3EFF               	addlw	-1
  8497  0246  1D03               	skipz
  8498  0247  2A44               	goto	u2835
  8499  0248  3537               	lslf	??_readAnalog+15,w
  8500  0249  3EA0               	addlw	(low (_totals| 0))& (0+255)
  8501  024A  0086               	movwf	6
  8502  024B  0187               	clrf	7
  8503  024C  0829               	movf	??_readAnalog+1,w
  8504  024D  3FC0               	movwi [0]fsr1
  8505  024E  082A               	movf	??_readAnalog+2,w
  8506  024F  3FC1               	movwi [1]fsr1
  8507  0250  082B               	movf	??_readAnalog+3,w
  8508  0251  3FC2               	movwi [2]fsr1
  8509  0252  082C               	movf	??_readAnalog+4,w
  8510  0253  3FC3               	movwi [3]fsr1
  8511                           
  8512                           ;adcc.c: 100: samples[channel][sampleIndex] = value;
  8513  0254  086F               	movf	_sampleIndex+1,w
  8514  0255  00A9               	movwf	??_readAnalog+1
  8515  0256  086E               	movf	_sampleIndex,w
  8516  0257  00A8               	movwf	??_readAnalog
  8517  0258  35A8               	lslf	??_readAnalog,f
  8518  0259  0DA9               	rlf	??_readAnalog+1,f
  8519  025A  0827               	movf	readAnalog@channel+1,w
  8520  025B  00F1               	movwf	___wmul@multiplier+1
  8521  025C  0826               	movf	readAnalog@channel,w
  8522  025D  00F0               	movwf	___wmul@multiplier
  8523  025E  3028               	movlw	40
  8524  025F  00F2               	movwf	___wmul@multiplicand
  8525  0260  3000               	movlw	0
  8526  0261  00F3               	movwf	___wmul@multiplicand+1
  8527  0262  3188  2036  3181   	fcall	___wmul
  8528  0265  3000               	movlw	0
  8529  0266  0020               	movlb	0	; select bank0
  8530  0267  00AA               	movwf	??_readAnalog+2
  8531  0268  3023               	movlw	35
  8532  0269  00AB               	movwf	??_readAnalog+3
  8533  026A  0870               	movf	?___wmul,w
  8534  026B  072A               	addwf	??_readAnalog+2,w
  8535  026C  00AC               	movwf	??_readAnalog+4
  8536  026D  0871               	movf	?___wmul+1,w
  8537  026E  3D2B               	addwfc	??_readAnalog+3,w
  8538  026F  00AD               	movwf	??_readAnalog+5
  8539  0270  0828               	movf	??_readAnalog,w
  8540  0271  072C               	addwf	??_readAnalog+4,w
  8541  0272  0086               	movwf	6
  8542  0273  0829               	movf	??_readAnalog+1,w
  8543  0274  3D2D               	addwfc	??_readAnalog+5,w
  8544  0275  0087               	movwf	7
  8545  0276  087B               	movf	readAnalog@value,w
  8546  0277  3FC0               	movwi [0]fsr1
  8547  0278  087C               	movf	readAnalog@value+1,w
  8548  0279  3FC1               	movwi [1]fsr1
  8549                           
  8550                           ;adcc.c: 102: totals[channel] = totals[channel] + samples[channel][sampleIndex];
  8551  027A  0826               	movf	readAnalog@channel,w
  8552  027B  00A8               	movwf	??_readAnalog
  8553  027C  3001               	movlw	1
  8554  027D                     u2845:	
  8555  027D  35A8               	lslf	??_readAnalog,f
  8556  027E  3EFF               	addlw	-1
  8557  027F  1D03               	skipz
  8558  0280  2A7D               	goto	u2845
  8559  0281  3528               	lslf	??_readAnalog,w
  8560  0282  3EA0               	addlw	(low (_totals| 0))& (0+255)
  8561  0283  0086               	movwf	6
  8562  0284  0187               	clrf	7
  8563  0285  3F40               	moviw [0]fsr1
  8564  0286  00A9               	movwf	??_readAnalog+1
  8565  0287  3F41               	moviw [1]fsr1
  8566  0288  00AA               	movwf	??_readAnalog+2
  8567  0289  3F42               	moviw [2]fsr1
  8568  028A  00AB               	movwf	??_readAnalog+3
  8569  028B  3F43               	moviw [3]fsr1
  8570  028C  00AC               	movwf	??_readAnalog+4
  8571  028D  086F               	movf	_sampleIndex+1,w
  8572  028E  00AE               	movwf	??_readAnalog+6
  8573  028F  086E               	movf	_sampleIndex,w
  8574  0290  00AD               	movwf	??_readAnalog+5
  8575  0291  35AD               	lslf	??_readAnalog+5,f
  8576  0292  0DAE               	rlf	??_readAnalog+6,f
  8577  0293  0827               	movf	readAnalog@channel+1,w
  8578  0294  00F1               	movwf	___wmul@multiplier+1
  8579  0295  0826               	movf	readAnalog@channel,w
  8580  0296  00F0               	movwf	___wmul@multiplier
  8581  0297  3028               	movlw	40
  8582  0298  00F2               	movwf	___wmul@multiplicand
  8583  0299  3000               	movlw	0
  8584  029A  00F3               	movwf	___wmul@multiplicand+1
  8585  029B  3188  2036  3181   	fcall	___wmul
  8586  029E  3000               	movlw	0
  8587  029F  0020               	movlb	0	; select bank0
  8588  02A0  00AF               	movwf	??_readAnalog+7
  8589  02A1  3023               	movlw	35
  8590  02A2  00B0               	movwf	??_readAnalog+8
  8591  02A3  0870               	movf	?___wmul,w
  8592  02A4  072F               	addwf	??_readAnalog+7,w
  8593  02A5  00B1               	movwf	??_readAnalog+9
  8594  02A6  0871               	movf	?___wmul+1,w
  8595  02A7  3D30               	addwfc	??_readAnalog+8,w
  8596  02A8  00B2               	movwf	??_readAnalog+10
  8597  02A9  0831               	movf	??_readAnalog+9,w
  8598  02AA  072D               	addwf	??_readAnalog+5,w
  8599  02AB  0084               	movwf	4
  8600  02AC  0832               	movf	??_readAnalog+10,w
  8601  02AD  3D2E               	addwfc	??_readAnalog+6,w
  8602  02AE  0085               	movwf	5
  8603  02AF  3F00               	moviw [0]fsr0
  8604  02B0  00B3               	movwf	??_readAnalog+11
  8605  02B1  3F01               	moviw [1]fsr0
  8606  02B2  00B4               	movwf	??_readAnalog+12
  8607  02B3  01B5               	clrf	??_readAnalog+13
  8608  02B4  01B6               	clrf	??_readAnalog+14
  8609  02B5  0833               	movf	??_readAnalog+11,w
  8610  02B6  07A9               	addwf	??_readAnalog+1,f
  8611  02B7  0834               	movf	??_readAnalog+12,w
  8612  02B8  3DAA               	addwfc	??_readAnalog+2,f
  8613  02B9  0835               	movf	??_readAnalog+13,w
  8614  02BA  3DAB               	addwfc	??_readAnalog+3,f
  8615  02BB  0836               	movf	??_readAnalog+14,w
  8616  02BC  3DAC               	addwfc	??_readAnalog+4,f
  8617  02BD  0826               	movf	readAnalog@channel,w
  8618  02BE  00B7               	movwf	??_readAnalog+15
  8619  02BF  3001               	movlw	1
  8620  02C0                     u2855:	
  8621  02C0  35B7               	lslf	??_readAnalog+15,f
  8622  02C1  3EFF               	addlw	-1
  8623  02C2  1D03               	skipz
  8624  02C3  2AC0               	goto	u2855
  8625  02C4  3537               	lslf	??_readAnalog+15,w
  8626  02C5  3EA0               	addlw	(low (_totals| 0))& (0+255)
  8627  02C6  0086               	movwf	6
  8628  02C7  0187               	clrf	7
  8629  02C8  0829               	movf	??_readAnalog+1,w
  8630  02C9  3FC0               	movwi [0]fsr1
  8631  02CA  082A               	movf	??_readAnalog+2,w
  8632  02CB  3FC1               	movwi [1]fsr1
  8633  02CC  082B               	movf	??_readAnalog+3,w
  8634  02CD  3FC2               	movwi [2]fsr1
  8635  02CE  082C               	movf	??_readAnalog+4,w
  8636  02CF  3FC3               	movwi [3]fsr1
  8637                           
  8638                           ;adcc.c: 104: if(channel>4)
  8639  02D0  0827               	movf	readAnalog@channel+1,w
  8640  02D1  3A80               	xorlw	128
  8641  02D2  00A8               	movwf	??_readAnalog
  8642  02D3  3080               	movlw	128
  8643  02D4  0228               	subwf	??_readAnalog,w
  8644  02D5  1D03               	skipz
  8645  02D6  2AD9               	goto	u2865
  8646  02D7  3005               	movlw	5
  8647  02D8  0226               	subwf	readAnalog@channel,w
  8648  02D9                     u2865:	
  8649  02D9  1C03               	skipc
  8650  02DA  2AE9               	goto	l2556
  8651                           
  8652                           ;adcc.c: 105: {
  8653                           ;adcc.c: 106: sampleIndex += 1;
  8654  02DB  3001               	movlw	1
  8655  02DC  0020               	movlb	0	; select bank0
  8656  02DD  07EE               	addwf	_sampleIndex,f
  8657  02DE  3000               	movlw	0
  8658  02DF  3DEF               	addwfc	_sampleIndex+1,f
  8659                           
  8660                           ;adcc.c: 108: if(sampleIndex >= 20)
  8661  02E0  3000               	movlw	0
  8662  02E1  026F               	subwf	_sampleIndex+1,w
  8663  02E2  3014               	movlw	20
  8664  02E3  1903               	skipnz
  8665  02E4  026E               	subwf	_sampleIndex,w
  8666  02E5  1C03               	skipc
  8667  02E6  2AE9               	goto	l2556
  8668                           
  8669                           ;adcc.c: 109: {
  8670                           ;adcc.c: 110: sampleIndex = 0;
  8671  02E7  01EE               	clrf	_sampleIndex
  8672  02E8  01EF               	clrf	_sampleIndex+1
  8673  02E9                     l2556:	
  8674                           
  8675                           ;adcc.c: 111: }
  8676                           ;adcc.c: 112: }
  8677                           ;adcc.c: 114: value = totals[channel] / 20;
  8678  02E9  3000               	movlw	0
  8679  02EA  00F3               	movwf	___aldiv@divisor+3
  8680  02EB  3000               	movlw	0
  8681  02EC  00F2               	movwf	___aldiv@divisor+2
  8682  02ED  3000               	movlw	0
  8683  02EE  00F1               	movwf	___aldiv@divisor+1
  8684  02EF  3014               	movlw	20
  8685  02F0  00F0               	movwf	___aldiv@divisor
  8686  02F1  0020               	movlb	0	; select bank0
  8687  02F2  0826               	movf	readAnalog@channel,w
  8688  02F3  00A8               	movwf	??_readAnalog
  8689  02F4  3001               	movlw	1
  8690  02F5                     u2885:	
  8691  02F5  35A8               	lslf	??_readAnalog,f
  8692  02F6  3EFF               	addlw	-1
  8693  02F7  1D03               	skipz
  8694  02F8  2AF5               	goto	u2885
  8695  02F9  3528               	lslf	??_readAnalog,w
  8696  02FA  3EA0               	addlw	(low (_totals| 0))& (0+255)
  8697  02FB  0086               	movwf	6
  8698  02FC  0187               	clrf	7
  8699  02FD  3F40               	moviw [0]fsr1
  8700  02FE  00F4               	movwf	___aldiv@dividend
  8701  02FF  3F41               	moviw [1]fsr1
  8702  0300  00F5               	movwf	___aldiv@dividend+1
  8703  0301  3F42               	moviw [2]fsr1
  8704  0302  00F6               	movwf	___aldiv@dividend+2
  8705  0303  3F43               	moviw [3]fsr1
  8706  0304  00F7               	movwf	___aldiv@dividend+3
  8707  0305  318B  239C         	fcall	___aldiv
  8708  0307  0871               	movf	?___aldiv+1,w
  8709  0308  00FC               	movwf	readAnalog@value+1
  8710  0309  0870               	movf	?___aldiv,w
  8711  030A  00FB               	movwf	readAnalog@value
  8712                           
  8713                           ;adcc.c: 116: return value;
  8714  030B  087C               	movf	readAnalog@value+1,w
  8715  030C  0020               	movlb	0	; select bank0
  8716  030D  00A7               	movwf	?_readAnalog+1
  8717  030E  087B               	movf	readAnalog@value,w
  8718  030F  00A6               	movwf	?_readAnalog
  8719  0310  0008               	return
  8720  0311                     __end_of_readAnalog:	
  8721                           
  8722                           	psect	text13
  8723  0836                     __ptext13:	
  8724 ;; *************** function ___wmul *****************
  8725 ;; Defined at:
  8726 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
  8727 ;; Parameters:    Size  Location     Type
  8728 ;;  multiplier      2    0[COMMON] unsigned int 
  8729 ;;  multiplicand    2    2[COMMON] unsigned int 
  8730 ;; Auto vars:     Size  Location     Type
  8731 ;;  product         2    4[COMMON] unsigned int 
  8732 ;; Return value:  Size  Location     Type
  8733 ;;                  2    0[COMMON] unsigned int 
  8734 ;; Registers used:
  8735 ;;		wreg, status,2, status,0
  8736 ;; Tracked objects:
  8737 ;;		On entry : 0/0
  8738 ;;		On exit  : 0/0
  8739 ;;		Unchanged: 0/0
  8740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8741 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8742 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8744 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8745 ;;Total ram usage:        6 bytes
  8746 ;; Hardware stack levels used:    1
  8747 ;; This function calls:
  8748 ;;		Nothing
  8749 ;; This function is called by:
  8750 ;;		_readAnalog
  8751 ;;		_eval_poly
  8752 ;; This function uses a non-reentrant model
  8753 ;;
  8754                           
  8755                           
  8756                           ;psect for function ___wmul
  8757  0836                     ___wmul:	
  8758                           
  8759                           ;incstack = 0
  8760                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  8761  0836  01F4               	clrf	___wmul@product
  8762  0837  01F5               	clrf	___wmul@product+1
  8763  0838                     l1984:	
  8764  0838  1C70               	btfss	___wmul@multiplier,0
  8765  0839  283E               	goto	l404
  8766  083A  0872               	movf	___wmul@multiplicand,w
  8767  083B  07F4               	addwf	___wmul@product,f
  8768  083C  0873               	movf	___wmul@multiplicand+1,w
  8769  083D  3DF5               	addwfc	___wmul@product+1,f
  8770  083E                     l404:	
  8771  083E  3001               	movlw	1
  8772  083F                     u1925:	
  8773  083F  35F2               	lslf	___wmul@multiplicand,f
  8774  0840  0DF3               	rlf	___wmul@multiplicand+1,f
  8775  0841  0B89               	decfsz	9,f
  8776  0842  283F               	goto	u1925
  8777  0843  3001               	movlw	1
  8778  0844                     u1935:	
  8779  0844  36F1               	lsrf	___wmul@multiplier+1,f
  8780  0845  0CF0               	rrf	___wmul@multiplier,f
  8781  0846  0B89               	decfsz	9,f
  8782  0847  2844               	goto	u1935
  8783  0848  0870               	movf	___wmul@multiplier,w
  8784  0849  0471               	iorwf	___wmul@multiplier+1,w
  8785  084A  1D03               	btfss	3,2
  8786  084B  2838               	goto	l1984
  8787  084C  0875               	movf	___wmul@product+1,w
  8788  084D  00F1               	movwf	?___wmul+1
  8789  084E  0874               	movf	___wmul@product,w
  8790  084F  00F0               	movwf	?___wmul
  8791  0850  0008               	return
  8792  0851                     __end_of___wmul:	
  8793                           
  8794                           	psect	text14
  8795  0B9C                     __ptext14:	
  8796 ;; *************** function ___aldiv *****************
  8797 ;; Defined at:
  8798 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\aldiv.c"
  8799 ;; Parameters:    Size  Location     Type
  8800 ;;  divisor         4    0[COMMON] long 
  8801 ;;  dividend        4    4[COMMON] long 
  8802 ;; Auto vars:     Size  Location     Type
  8803 ;;  quotient        4    2[BANK0 ] long 
  8804 ;;  sign            1    1[BANK0 ] unsigned char 
  8805 ;;  counter         1    0[BANK0 ] unsigned char 
  8806 ;; Return value:  Size  Location     Type
  8807 ;;                  4    0[COMMON] long 
  8808 ;; Registers used:
  8809 ;;		wreg, status,2, status,0
  8810 ;; Tracked objects:
  8811 ;;		On entry : 0/0
  8812 ;;		On exit  : 0/0
  8813 ;;		Unchanged: 0/0
  8814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8815 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8816 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8817 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8818 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8819 ;;Total ram usage:       15 bytes
  8820 ;; Hardware stack levels used:    1
  8821 ;; This function calls:
  8822 ;;		Nothing
  8823 ;; This function is called by:
  8824 ;;		_readAnalog
  8825 ;; This function uses a non-reentrant model
  8826 ;;
  8827                           
  8828                           
  8829                           ;psect for function ___aldiv
  8830  0B9C                     ___aldiv:	
  8831                           
  8832                           ;incstack = 0
  8833                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  8834  0B9C  0020               	movlb	0	; select bank0
  8835  0B9D  01A1               	clrf	___aldiv@sign
  8836  0B9E  1FF3               	btfss	___aldiv@divisor+3,7
  8837  0B9F  2BAD               	goto	l459
  8838  0BA0  09F0               	comf	___aldiv@divisor,f
  8839  0BA1  09F1               	comf	___aldiv@divisor+1,f
  8840  0BA2  09F2               	comf	___aldiv@divisor+2,f
  8841  0BA3  09F3               	comf	___aldiv@divisor+3,f
  8842  0BA4  0AF0               	incf	___aldiv@divisor,f
  8843  0BA5  1903               	skipnz
  8844  0BA6  0AF1               	incf	___aldiv@divisor+1,f
  8845  0BA7  1903               	skipnz
  8846  0BA8  0AF2               	incf	___aldiv@divisor+2,f
  8847  0BA9  1903               	skipnz
  8848  0BAA  0AF3               	incf	___aldiv@divisor+3,f
  8849  0BAB  01A1               	clrf	___aldiv@sign
  8850  0BAC  0AA1               	incf	___aldiv@sign,f
  8851  0BAD                     l459:	
  8852  0BAD  1FF7               	btfss	___aldiv@dividend+3,7
  8853  0BAE  2BBE               	goto	l2380
  8854  0BAF  09F4               	comf	___aldiv@dividend,f
  8855  0BB0  09F5               	comf	___aldiv@dividend+1,f
  8856  0BB1  09F6               	comf	___aldiv@dividend+2,f
  8857  0BB2  09F7               	comf	___aldiv@dividend+3,f
  8858  0BB3  0AF4               	incf	___aldiv@dividend,f
  8859  0BB4  1903               	skipnz
  8860  0BB5  0AF5               	incf	___aldiv@dividend+1,f
  8861  0BB6  1903               	skipnz
  8862  0BB7  0AF6               	incf	___aldiv@dividend+2,f
  8863  0BB8  1903               	skipnz
  8864  0BB9  0AF7               	incf	___aldiv@dividend+3,f
  8865  0BBA  3001               	movlw	1
  8866  0BBB  00F8               	movwf	??___aldiv
  8867  0BBC  0878               	movf	??___aldiv,w
  8868  0BBD  06A1               	xorwf	___aldiv@sign,f
  8869  0BBE                     l2380:	
  8870  0BBE  3000               	movlw	0
  8871  0BBF  00A5               	movwf	___aldiv@quotient+3
  8872  0BC0  3000               	movlw	0
  8873  0BC1  00A4               	movwf	___aldiv@quotient+2
  8874  0BC2  3000               	movlw	0
  8875  0BC3  00A3               	movwf	___aldiv@quotient+1
  8876  0BC4  3000               	movlw	0
  8877  0BC5  00A2               	movwf	___aldiv@quotient
  8878  0BC6  0873               	movf	___aldiv@divisor+3,w
  8879  0BC7  0472               	iorwf	___aldiv@divisor+2,w
  8880  0BC8  0471               	iorwf	___aldiv@divisor+1,w
  8881  0BC9  0470               	iorwf	___aldiv@divisor,w
  8882  0BCA  1903               	skipnz
  8883  0BCB  2C07               	goto	l2402
  8884  0BCC  01A0               	clrf	___aldiv@counter
  8885  0BCD  0AA0               	incf	___aldiv@counter,f
  8886  0BCE                     l2388:	
  8887  0BCE  1BF3               	btfsc	___aldiv@divisor+3,7
  8888  0BCF  2BDC               	goto	l2390
  8889  0BD0  3001               	movlw	1
  8890  0BD1                     u2475:	
  8891  0BD1  35F0               	lslf	___aldiv@divisor,f
  8892  0BD2  0DF1               	rlf	___aldiv@divisor+1,f
  8893  0BD3  0DF2               	rlf	___aldiv@divisor+2,f
  8894  0BD4  0DF3               	rlf	___aldiv@divisor+3,f
  8895  0BD5  0B89               	decfsz	9,f
  8896  0BD6  2BD1               	goto	u2475
  8897  0BD7  3001               	movlw	1
  8898  0BD8  00F8               	movwf	??___aldiv
  8899  0BD9  0878               	movf	??___aldiv,w
  8900  0BDA  07A0               	addwf	___aldiv@counter,f
  8901  0BDB  2BCE               	goto	l2388
  8902  0BDC                     l2390:	
  8903  0BDC  3001               	movlw	1
  8904  0BDD                     u2495:	
  8905  0BDD  35A2               	lslf	___aldiv@quotient,f
  8906  0BDE  0DA3               	rlf	___aldiv@quotient+1,f
  8907  0BDF  0DA4               	rlf	___aldiv@quotient+2,f
  8908  0BE0  0DA5               	rlf	___aldiv@quotient+3,f
  8909  0BE1  0B89               	decfsz	9,f
  8910  0BE2  2BDD               	goto	u2495
  8911  0BE3  0873               	movf	___aldiv@divisor+3,w
  8912  0BE4  0277               	subwf	___aldiv@dividend+3,w
  8913  0BE5  1D03               	skipz
  8914  0BE6  2BF1               	goto	u2505
  8915  0BE7  0872               	movf	___aldiv@divisor+2,w
  8916  0BE8  0276               	subwf	___aldiv@dividend+2,w
  8917  0BE9  1D03               	skipz
  8918  0BEA  2BF1               	goto	u2505
  8919  0BEB  0871               	movf	___aldiv@divisor+1,w
  8920  0BEC  0275               	subwf	___aldiv@dividend+1,w
  8921  0BED  1D03               	skipz
  8922  0BEE  2BF1               	goto	u2505
  8923  0BEF  0870               	movf	___aldiv@divisor,w
  8924  0BF0  0274               	subwf	___aldiv@dividend,w
  8925  0BF1                     u2505:	
  8926  0BF1  1C03               	skipc
  8927  0BF2  2BFC               	goto	l2398
  8928  0BF3  0870               	movf	___aldiv@divisor,w
  8929  0BF4  02F4               	subwf	___aldiv@dividend,f
  8930  0BF5  0871               	movf	___aldiv@divisor+1,w
  8931  0BF6  3BF5               	subwfb	___aldiv@dividend+1,f
  8932  0BF7  0872               	movf	___aldiv@divisor+2,w
  8933  0BF8  3BF6               	subwfb	___aldiv@dividend+2,f
  8934  0BF9  0873               	movf	___aldiv@divisor+3,w
  8935  0BFA  3BF7               	subwfb	___aldiv@dividend+3,f
  8936  0BFB  1422               	bsf	___aldiv@quotient,0
  8937  0BFC                     l2398:	
  8938  0BFC  3001               	movlw	1
  8939  0BFD                     u2515:	
  8940  0BFD  36F3               	lsrf	___aldiv@divisor+3,f
  8941  0BFE  0CF2               	rrf	___aldiv@divisor+2,f
  8942  0BFF  0CF1               	rrf	___aldiv@divisor+1,f
  8943  0C00  0CF0               	rrf	___aldiv@divisor,f
  8944  0C01  0B89               	decfsz	9,f
  8945  0C02  2BFD               	goto	u2515
  8946  0C03  3001               	movlw	1
  8947  0C04  02A0               	subwf	___aldiv@counter,f
  8948  0C05  1D03               	btfss	3,2
  8949  0C06  2BDC               	goto	l2390
  8950  0C07                     l2402:	
  8951  0C07  0821               	movf	___aldiv@sign,w
  8952  0C08  1903               	btfsc	3,2
  8953  0C09  2C15               	goto	l2406
  8954  0C0A  09A2               	comf	___aldiv@quotient,f
  8955  0C0B  09A3               	comf	___aldiv@quotient+1,f
  8956  0C0C  09A4               	comf	___aldiv@quotient+2,f
  8957  0C0D  09A5               	comf	___aldiv@quotient+3,f
  8958  0C0E  0AA2               	incf	___aldiv@quotient,f
  8959  0C0F  1903               	skipnz
  8960  0C10  0AA3               	incf	___aldiv@quotient+1,f
  8961  0C11  1903               	skipnz
  8962  0C12  0AA4               	incf	___aldiv@quotient+2,f
  8963  0C13  1903               	skipnz
  8964  0C14  0AA5               	incf	___aldiv@quotient+3,f
  8965  0C15                     l2406:	
  8966  0C15  0825               	movf	___aldiv@quotient+3,w
  8967  0C16  00F3               	movwf	?___aldiv+3
  8968  0C17  0824               	movf	___aldiv@quotient+2,w
  8969  0C18  00F2               	movwf	?___aldiv+2
  8970  0C19  0823               	movf	___aldiv@quotient+1,w
  8971  0C1A  00F1               	movwf	?___aldiv+1
  8972  0C1B  0822               	movf	___aldiv@quotient,w
  8973  0C1C  00F0               	movwf	?___aldiv
  8974  0C1D  0008               	return
  8975  0C1E                     __end_of___aldiv:	
  8976                           
  8977                           	psect	text15
  8978  1784                     __ptext15:	
  8979 ;; *************** function _ADCRead *****************
  8980 ;; Defined at:
  8981 ;;		line 65 in file "adcc.c"
  8982 ;; Parameters:    Size  Location     Type
  8983 ;;  channel         1    wreg     enum E13559
  8984 ;; Auto vars:     Size  Location     Type
  8985 ;;  channel         1    3[COMMON] enum E13559
  8986 ;; Return value:  Size  Location     Type
  8987 ;;                  2    0[COMMON] unsigned int 
  8988 ;; Registers used:
  8989 ;;		wreg
  8990 ;; Tracked objects:
  8991 ;;		On entry : 0/0
  8992 ;;		On exit  : 0/0
  8993 ;;		Unchanged: 0/0
  8994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8995 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8996 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8998 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8999 ;;Total ram usage:        4 bytes
  9000 ;; Hardware stack levels used:    1
  9001 ;; This function calls:
  9002 ;;		Nothing
  9003 ;; This function is called by:
  9004 ;;		_readAnalog
  9005 ;;		_main
  9006 ;; This function uses a non-reentrant model
  9007 ;;
  9008                           
  9009                           
  9010                           ;psect for function _ADCRead
  9011  1784                     _ADCRead:	
  9012                           
  9013                           ;incstack = 0
  9014                           ; Regs used in _ADCRead: [wreg]
  9015                           ;ADCRead@channel stored from wreg
  9016  1784  00F3               	movwf	ADCRead@channel
  9017                           
  9018                           ;adcc.c: 68: ADPCH = channel;
  9019  1785  0873               	movf	ADCRead@channel,w
  9020  1786  0021               	movlb	1	; select bank1
  9021  1787  009E               	movwf	30	;volatile
  9022                           
  9023                           ;adcc.c: 71: ADCON0bits.ADON = 1;
  9024  1788  1793               	bsf	19,7	;volatile
  9025                           
  9026                           ;adcc.c: 74: ADCON0bits.ADCONT = 0;
  9027  1789  1313               	bcf	19,6	;volatile
  9028                           
  9029                           ;adcc.c: 77: ADCON0bits.ADGO = 1;
  9030  178A  1413               	bsf	19,0	;volatile
  9031  178B                     l58:	
  9032                           ;adcc.c: 81: {
  9033                           
  9034                           ;adcc.c: 80: while (ADCON0bits.ADGO)
  9035                           
  9036  178B  1813               	btfsc	19,0	;volatile
  9037  178C  2F8B               	goto	l58
  9038                           
  9039                           ;adcc.c: 82: }
  9040                           ;adcc.c: 85: return ((ADRESH << 8) + ADRESL);
  9041  178D  080D               	movf	13,w	;volatile
  9042  178E  00F1               	movwf	?_ADCRead+1
  9043  178F  080C               	movf	12,w	;volatile
  9044  1790  00F0               	movwf	?_ADCRead
  9045  1791  0008               	return
  9046  1792                     __end_of_ADCRead:	
  9047                           
  9048                           	psect	text16
  9049  08E1                     __ptext16:	
  9050 ;; *************** function ___lwdiv *****************
  9051 ;; Defined at:
  9052 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwdiv.c"
  9053 ;; Parameters:    Size  Location     Type
  9054 ;;  divisor         2    0[COMMON] unsigned int 
  9055 ;;  dividend        2    2[COMMON] unsigned int 
  9056 ;; Auto vars:     Size  Location     Type
  9057 ;;  quotient        2    5[COMMON] unsigned int 
  9058 ;;  counter         1    7[COMMON] unsigned char 
  9059 ;; Return value:  Size  Location     Type
  9060 ;;                  2    0[COMMON] unsigned int 
  9061 ;; Registers used:
  9062 ;;		wreg, status,2, status,0
  9063 ;; Tracked objects:
  9064 ;;		On entry : 0/0
  9065 ;;		On exit  : 0/0
  9066 ;;		Unchanged: 0/0
  9067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9068 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9069 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9070 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9071 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9072 ;;Total ram usage:        8 bytes
  9073 ;; Hardware stack levels used:    1
  9074 ;; This function calls:
  9075 ;;		Nothing
  9076 ;; This function is called by:
  9077 ;;		_main
  9078 ;; This function uses a non-reentrant model
  9079 ;;
  9080                           
  9081                           
  9082                           ;psect for function ___lwdiv
  9083  08E1                     ___lwdiv:	
  9084                           
  9085                           ;incstack = 0
  9086                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  9087  08E1  01F5               	clrf	___lwdiv@quotient
  9088  08E2  01F6               	clrf	___lwdiv@quotient+1
  9089  08E3  0870               	movf	___lwdiv@divisor,w
  9090  08E4  0471               	iorwf	___lwdiv@divisor+1,w
  9091  08E5  1903               	btfsc	3,2
  9092  08E6  2910               	goto	l2746
  9093  08E7  01F7               	clrf	___lwdiv@counter
  9094  08E8  0AF7               	incf	___lwdiv@counter,f
  9095  08E9                     l2734:	
  9096  08E9  1BF1               	btfsc	___lwdiv@divisor+1,7
  9097  08EA  28F5               	goto	l2736
  9098  08EB  3001               	movlw	1
  9099  08EC                     u3155:	
  9100  08EC  35F0               	lslf	___lwdiv@divisor,f
  9101  08ED  0DF1               	rlf	___lwdiv@divisor+1,f
  9102  08EE  0B89               	decfsz	9,f
  9103  08EF  28EC               	goto	u3155
  9104  08F0  3001               	movlw	1
  9105  08F1  00F4               	movwf	??___lwdiv
  9106  08F2  0874               	movf	??___lwdiv,w
  9107  08F3  07F7               	addwf	___lwdiv@counter,f
  9108  08F4  28E9               	goto	l2734
  9109  08F5                     l2736:	
  9110  08F5  3001               	movlw	1
  9111  08F6                     u3175:	
  9112  08F6  35F5               	lslf	___lwdiv@quotient,f
  9113  08F7  0DF6               	rlf	___lwdiv@quotient+1,f
  9114  08F8  0B89               	decfsz	9,f
  9115  08F9  28F6               	goto	u3175
  9116  08FA  0871               	movf	___lwdiv@divisor+1,w
  9117  08FB  0273               	subwf	___lwdiv@dividend+1,w
  9118  08FC  1D03               	skipz
  9119  08FD  2900               	goto	u3185
  9120  08FE  0870               	movf	___lwdiv@divisor,w
  9121  08FF  0272               	subwf	___lwdiv@dividend,w
  9122  0900                     u3185:	
  9123  0900  1C03               	skipc
  9124  0901  2907               	goto	l2742
  9125  0902  0870               	movf	___lwdiv@divisor,w
  9126  0903  02F2               	subwf	___lwdiv@dividend,f
  9127  0904  0871               	movf	___lwdiv@divisor+1,w
  9128  0905  3BF3               	subwfb	___lwdiv@dividend+1,f
  9129  0906  1475               	bsf	___lwdiv@quotient,0
  9130  0907                     l2742:	
  9131  0907  3001               	movlw	1
  9132  0908                     u3195:	
  9133  0908  36F1               	lsrf	___lwdiv@divisor+1,f
  9134  0909  0CF0               	rrf	___lwdiv@divisor,f
  9135  090A  0B89               	decfsz	9,f
  9136  090B  2908               	goto	u3195
  9137  090C  3001               	movlw	1
  9138  090D  02F7               	subwf	___lwdiv@counter,f
  9139  090E  1D03               	btfss	3,2
  9140  090F  28F5               	goto	l2736
  9141  0910                     l2746:	
  9142  0910  0876               	movf	___lwdiv@quotient+1,w
  9143  0911  00F1               	movwf	?___lwdiv+1
  9144  0912  0875               	movf	___lwdiv@quotient,w
  9145  0913  00F0               	movwf	?___lwdiv
  9146  0914  0008               	return
  9147  0915                     __end_of___lwdiv:	
  9148                           
  9149                           	psect	text17
  9150  0C1E                     __ptext17:	
  9151 ;; *************** function ___fttol *****************
  9152 ;; Defined at:
  9153 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fttol.c"
  9154 ;; Parameters:    Size  Location     Type
  9155 ;;  f1              3    0[COMMON] float 
  9156 ;; Auto vars:     Size  Location     Type
  9157 ;;  lval            4    9[COMMON] unsigned long 
  9158 ;;  exp1            1   13[COMMON] unsigned char 
  9159 ;;  sign1           1    8[COMMON] unsigned char 
  9160 ;; Return value:  Size  Location     Type
  9161 ;;                  4    0[COMMON] long 
  9162 ;; Registers used:
  9163 ;;		wreg, status,2, status,0
  9164 ;; Tracked objects:
  9165 ;;		On entry : 0/0
  9166 ;;		On exit  : 0/0
  9167 ;;		Unchanged: 0/0
  9168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9169 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9170 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9171 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9172 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9173 ;;Total ram usage:       14 bytes
  9174 ;; Hardware stack levels used:    1
  9175 ;; This function calls:
  9176 ;;		Nothing
  9177 ;; This function is called by:
  9178 ;;		_main
  9179 ;; This function uses a non-reentrant model
  9180 ;;
  9181                           
  9182                           
  9183                           ;psect for function ___fttol
  9184  0C1E                     ___fttol:	
  9185                           
  9186                           ;incstack = 0
  9187                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  9188  0C1E  0870               	movf	___fttol@f1,w
  9189  0C1F  00F4               	movwf	??___fttol
  9190  0C20  0871               	movf	___fttol@f1+1,w
  9191  0C21  00F5               	movwf	??___fttol+1
  9192  0C22  0872               	movf	___fttol@f1+2,w
  9193  0C23  00F6               	movwf	??___fttol+2
  9194  0C24  1003               	clrc
  9195  0C25  0D75               	rlf	??___fttol+1,w
  9196  0C26  0D76               	rlf	??___fttol+2,w
  9197  0C27  00F7               	movwf	??___fttol+3
  9198  0C28  0877               	movf	??___fttol+3,w
  9199  0C29  00FD               	movwf	___fttol@exp1
  9200  0C2A  087D               	movf	___fttol@exp1,w
  9201  0C2B  1D03               	btfss	3,2
  9202  0C2C  2C36               	goto	l2688
  9203  0C2D  3000               	movlw	0
  9204  0C2E  00F3               	movwf	?___fttol+3
  9205  0C2F  3000               	movlw	0
  9206  0C30  00F2               	movwf	?___fttol+2
  9207  0C31  3000               	movlw	0
  9208  0C32  00F1               	movwf	?___fttol+1
  9209  0C33  3000               	movlw	0
  9210  0C34  00F0               	movwf	?___fttol
  9211  0C35  0008               	return
  9212  0C36                     l2688:	
  9213  0C36  0870               	movf	___fttol@f1,w
  9214  0C37  00F4               	movwf	??___fttol
  9215  0C38  0871               	movf	___fttol@f1+1,w
  9216  0C39  00F5               	movwf	??___fttol+1
  9217  0C3A  0872               	movf	___fttol@f1+2,w
  9218  0C3B  00F6               	movwf	??___fttol+2
  9219  0C3C  3017               	movlw	23
  9220  0C3D                     u3055:	
  9221  0C3D  36F6               	lsrf	??___fttol+2,f
  9222  0C3E  0CF5               	rrf	??___fttol+1,f
  9223  0C3F  0CF4               	rrf	??___fttol,f
  9224  0C40  0B89               	decfsz	9,f
  9225  0C41  2C3D               	goto	u3055
  9226  0C42  0874               	movf	??___fttol,w
  9227  0C43  00F7               	movwf	??___fttol+3
  9228  0C44  0877               	movf	??___fttol+3,w
  9229  0C45  00F8               	movwf	___fttol@sign1
  9230  0C46  17F1               	bsf	___fttol@f1+1,7
  9231  0C47  30FF               	movlw	255
  9232  0C48  05F0               	andwf	___fttol@f1,f
  9233  0C49  30FF               	movlw	255
  9234  0C4A  05F1               	andwf	___fttol@f1+1,f
  9235  0C4B  3000               	movlw	0
  9236  0C4C  05F2               	andwf	___fttol@f1+2,f
  9237  0C4D  0870               	movf	___fttol@f1,w
  9238  0C4E  00F9               	movwf	___fttol@lval
  9239  0C4F  0871               	movf	___fttol@f1+1,w
  9240  0C50  00FA               	movwf	___fttol@lval+1
  9241  0C51  0872               	movf	___fttol@f1+2,w
  9242  0C52  00FB               	movwf	___fttol@lval+2
  9243  0C53  01FC               	clrf	___fttol@lval+3
  9244  0C54  308E               	movlw	142
  9245  0C55  02FD               	subwf	___fttol@exp1,f
  9246  0C56  1FFD               	btfss	___fttol@exp1,7
  9247  0C57  2C74               	goto	l2708
  9248  0C58  087D               	movf	___fttol@exp1,w
  9249  0C59  3A80               	xorlw	128
  9250  0C5A  3E8F               	addlw	143
  9251  0C5B  1803               	skipnc
  9252  0C5C  2C66               	goto	l2706
  9253  0C5D  3000               	movlw	0
  9254  0C5E  00F3               	movwf	?___fttol+3
  9255  0C5F  3000               	movlw	0
  9256  0C60  00F2               	movwf	?___fttol+2
  9257  0C61  3000               	movlw	0
  9258  0C62  00F1               	movwf	?___fttol+1
  9259  0C63  3000               	movlw	0
  9260  0C64  00F0               	movwf	?___fttol
  9261  0C65  0008               	return
  9262  0C66                     l2706:	
  9263  0C66  3001               	movlw	1
  9264  0C67                     u3085:	
  9265  0C67  36FC               	lsrf	___fttol@lval+3,f
  9266  0C68  0CFB               	rrf	___fttol@lval+2,f
  9267  0C69  0CFA               	rrf	___fttol@lval+1,f
  9268  0C6A  0CF9               	rrf	___fttol@lval,f
  9269  0C6B  0B89               	decfsz	9,f
  9270  0C6C  2C67               	goto	u3085
  9271  0C6D  3001               	movlw	1
  9272  0C6E  00F4               	movwf	??___fttol
  9273  0C6F  0874               	movf	??___fttol,w
  9274  0C70  07FD               	addwf	___fttol@exp1,f
  9275  0C71  1903               	btfsc	3,2
  9276  0C72  2C8D               	goto	l2716
  9277  0C73  2C66               	goto	l2706
  9278  0C74                     l2708:	
  9279  0C74  3018               	movlw	24
  9280  0C75  027D               	subwf	___fttol@exp1,w
  9281  0C76  1C03               	skipc
  9282  0C77  2C8A               	goto	l656
  9283  0C78  3000               	movlw	0
  9284  0C79  00F3               	movwf	?___fttol+3
  9285  0C7A  3000               	movlw	0
  9286  0C7B  00F2               	movwf	?___fttol+2
  9287  0C7C  3000               	movlw	0
  9288  0C7D  00F1               	movwf	?___fttol+1
  9289  0C7E  3000               	movlw	0
  9290  0C7F  00F0               	movwf	?___fttol
  9291  0C80  0008               	return
  9292  0C81                     l2714:	
  9293  0C81  3001               	movlw	1
  9294  0C82                     u3115:	
  9295  0C82  35F9               	lslf	___fttol@lval,f
  9296  0C83  0DFA               	rlf	___fttol@lval+1,f
  9297  0C84  0DFB               	rlf	___fttol@lval+2,f
  9298  0C85  0DFC               	rlf	___fttol@lval+3,f
  9299  0C86  0B89               	decfsz	9,f
  9300  0C87  2C82               	goto	u3115
  9301  0C88  3001               	movlw	1
  9302  0C89  02FD               	subwf	___fttol@exp1,f
  9303  0C8A                     l656:	
  9304  0C8A  087D               	movf	___fttol@exp1,w
  9305  0C8B  1D03               	btfss	3,2
  9306  0C8C  2C81               	goto	l2714
  9307  0C8D                     l2716:	
  9308  0C8D  0878               	movf	___fttol@sign1,w
  9309  0C8E  1903               	btfsc	3,2
  9310  0C8F  2C9B               	goto	l2720
  9311  0C90  09F9               	comf	___fttol@lval,f
  9312  0C91  09FA               	comf	___fttol@lval+1,f
  9313  0C92  09FB               	comf	___fttol@lval+2,f
  9314  0C93  09FC               	comf	___fttol@lval+3,f
  9315  0C94  0AF9               	incf	___fttol@lval,f
  9316  0C95  1903               	skipnz
  9317  0C96  0AFA               	incf	___fttol@lval+1,f
  9318  0C97  1903               	skipnz
  9319  0C98  0AFB               	incf	___fttol@lval+2,f
  9320  0C99  1903               	skipnz
  9321  0C9A  0AFC               	incf	___fttol@lval+3,f
  9322  0C9B                     l2720:	
  9323  0C9B  087C               	movf	___fttol@lval+3,w
  9324  0C9C  00F3               	movwf	?___fttol+3
  9325  0C9D  087B               	movf	___fttol@lval+2,w
  9326  0C9E  00F2               	movwf	?___fttol+2
  9327  0C9F  087A               	movf	___fttol@lval+1,w
  9328  0CA0  00F1               	movwf	?___fttol+1
  9329  0CA1  0879               	movf	___fttol@lval,w
  9330  0CA2  00F0               	movwf	?___fttol
  9331  0CA3  0008               	return
  9332  0CA4                     __end_of___fttol:	
  9333                           
  9334                           	psect	text18
  9335  0A00                     __ptext18:	
  9336 ;; *************** function _SYSTEM_Initialize *****************
  9337 ;; Defined at:
  9338 ;;		line 71 in file "system.c"
  9339 ;; Parameters:    Size  Location     Type
  9340 ;;		None
  9341 ;; Auto vars:     Size  Location     Type
  9342 ;;		None
  9343 ;; Return value:  Size  Location     Type
  9344 ;;                  1    wreg      void 
  9345 ;; Registers used:
  9346 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9347 ;; Tracked objects:
  9348 ;;		On entry : 0/0
  9349 ;;		On exit  : 0/0
  9350 ;;		Unchanged: 0/0
  9351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9354 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9355 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9356 ;;Total ram usage:        3 bytes
  9357 ;; Hardware stack levels used:    1
  9358 ;; Hardware stack levels required when called:    3
  9359 ;; This function calls:
  9360 ;;		_ADCC_Initialize
  9361 ;;		_InitCustomChars
  9362 ;;		_LCD_Clear
  9363 ;;		_LCD_Init
  9364 ;;		_OSCILLATOR_Initialize
  9365 ;;		_PIN_MANAGER_Initialize
  9366 ;;		_PWM6_Initialize
  9367 ;;		_TMR2_Initialize
  9368 ;; This function is called by:
  9369 ;;		_main
  9370 ;; This function uses a non-reentrant model
  9371 ;;
  9372                           
  9373                           
  9374                           ;psect for function _SYSTEM_Initialize
  9375  0A00                     _SYSTEM_Initialize:	
  9376                           
  9377                           ;system.c: 73: PIN_MANAGER_Initialize();
  9378                           
  9379                           ;incstack = 0
  9380                           ; Regs used in _SYSTEM_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9381  0A00  3189  2115  318A   	fcall	_PIN_MANAGER_Initialize
  9382                           
  9383                           ;system.c: 74: OSCILLATOR_Initialize();
  9384  0A03  3197  274A  318A   	fcall	_OSCILLATOR_Initialize
  9385                           
  9386                           ;system.c: 75: FVRCON = 0x00;
  9387  0A06  0032               	movlb	18	; select bank18
  9388  0A07  018C               	clrf	12	;volatile
  9389                           
  9390                           ;system.c: 76: ADCC_Initialize();
  9391  0A08  3188  201C  318A   	fcall	_ADCC_Initialize
  9392                           
  9393                           ;system.c: 77: PWM6_Initialize();
  9394  0A0B  3197  2753  318A   	fcall	_PWM6_Initialize
  9395                           
  9396                           ;system.c: 79: TMR2_Initialize();
  9397  0A0E  3197  2776  318A   	fcall	_TMR2_Initialize
  9398                           
  9399                           ;system.c: 80: LCD_Init(0X00);
  9400  0A11  3000               	movlw	0
  9401  0A12  318C  24A4  318A   	fcall	_LCD_Init
  9402                           
  9403                           ;system.c: 81: _delay((unsigned long)((200)*(32000000/4000.0)));
  9404  0A15  3009               	movlw	9
  9405  0A16  00FA               	movwf	??_SYSTEM_Initialize+2
  9406  0A17  301E               	movlw	30
  9407  0A18  00F9               	movwf	??_SYSTEM_Initialize+1
  9408  0A19  30EB               	movlw	235
  9409  0A1A  00F8               	movwf	??_SYSTEM_Initialize
  9410  0A1B                     u3657:	
  9411  0A1B  0BF8               	decfsz	??_SYSTEM_Initialize,f
  9412  0A1C  2A1B               	goto	u3657
  9413  0A1D  0BF9               	decfsz	??_SYSTEM_Initialize+1,f
  9414  0A1E  2A1B               	goto	u3657
  9415  0A1F  0BFA               	decfsz	??_SYSTEM_Initialize+2,f
  9416  0A20  2A1B               	goto	u3657
  9417  0A21  0000               	nop
  9418                           
  9419                           ;system.c: 82: LCD_Clear();
  9420  0A22  3180  2004  318A   	fcall	_LCD_Clear
  9421                           
  9422                           ;system.c: 83: _delay((unsigned long)((100)*(32000000/4000.0)));
  9423  0A25  3005               	movlw	5
  9424  0A26  00FA               	movwf	??_SYSTEM_Initialize+2
  9425  0A27  300F               	movlw	15
  9426  0A28  00F9               	movwf	??_SYSTEM_Initialize+1
  9427  0A29  30F4               	movlw	244
  9428  0A2A  00F8               	movwf	??_SYSTEM_Initialize
  9429  0A2B                     u3667:	
  9430  0A2B  0BF8               	decfsz	??_SYSTEM_Initialize,f
  9431  0A2C  2A2B               	goto	u3667
  9432  0A2D  0BF9               	decfsz	??_SYSTEM_Initialize+1,f
  9433  0A2E  2A2B               	goto	u3667
  9434  0A2F  0BFA               	decfsz	??_SYSTEM_Initialize+2,f
  9435  0A30  2A2B               	goto	u3667
  9436                           
  9437                           ;system.c: 84: InitCustomChars();
  9438  0A31  3188  208F  318A   	fcall	_InitCustomChars
  9439                           
  9440                           ;system.c: 85: _delay((unsigned long)((200)*(32000000/4000.0)));
  9441  0A34  3009               	movlw	9
  9442  0A35  00FA               	movwf	??_SYSTEM_Initialize+2
  9443  0A36  301E               	movlw	30
  9444  0A37  00F9               	movwf	??_SYSTEM_Initialize+1
  9445  0A38  30EB               	movlw	235
  9446  0A39  00F8               	movwf	??_SYSTEM_Initialize
  9447  0A3A                     u3677:	
  9448  0A3A  0BF8               	decfsz	??_SYSTEM_Initialize,f
  9449  0A3B  2A3A               	goto	u3677
  9450  0A3C  0BF9               	decfsz	??_SYSTEM_Initialize+1,f
  9451  0A3D  2A3A               	goto	u3677
  9452  0A3E  0BFA               	decfsz	??_SYSTEM_Initialize+2,f
  9453  0A3F  2A3A               	goto	u3677
  9454  0A40  0000               	nop
  9455  0A41  0008               	return
  9456  0A42                     __end_of_SYSTEM_Initialize:	
  9457                           
  9458                           	psect	text19
  9459  1776                     __ptext19:	
  9460 ;; *************** function _TMR2_Initialize *****************
  9461 ;; Defined at:
  9462 ;;		line 3 in file "tmr2.c"
  9463 ;; Parameters:    Size  Location     Type
  9464 ;;		None
  9465 ;; Auto vars:     Size  Location     Type
  9466 ;;		None
  9467 ;; Return value:  Size  Location     Type
  9468 ;;                  1    wreg      void 
  9469 ;; Registers used:
  9470 ;;		wreg, status,2
  9471 ;; Tracked objects:
  9472 ;;		On entry : 0/0
  9473 ;;		On exit  : 0/0
  9474 ;;		Unchanged: 0/0
  9475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9479 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9480 ;;Total ram usage:        0 bytes
  9481 ;; Hardware stack levels used:    1
  9482 ;; This function calls:
  9483 ;;		Nothing
  9484 ;; This function is called by:
  9485 ;;		_SYSTEM_Initialize
  9486 ;; This function uses a non-reentrant model
  9487 ;;
  9488                           
  9489                           
  9490                           ;psect for function _TMR2_Initialize
  9491  1776                     _TMR2_Initialize:	
  9492                           
  9493                           ;tmr2.c: 5: T2CON = 0x00;
  9494                           
  9495                           ;incstack = 0
  9496                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  9497  1776  0025               	movlb	5	; select bank5
  9498  1777  018E               	clrf	14	;volatile
  9499                           
  9500                           ;tmr2.c: 7: T2CLKCON = 0x01;
  9501  1778  3001               	movlw	1
  9502  1779  0090               	movwf	16	;volatile
  9503                           
  9504                           ;tmr2.c: 9: T2HLT = 0x00;
  9505  177A  018F               	clrf	15	;volatile
  9506                           
  9507                           ;tmr2.c: 11: T2RST = 0x00;
  9508  177B  0191               	clrf	17	;volatile
  9509                           
  9510                           ;tmr2.c: 13: T2PR = 0xFF;
  9511  177C  30FF               	movlw	255
  9512  177D  008D               	movwf	13	;volatile
  9513                           
  9514                           ;tmr2.c: 15: T2TMR = 0x00;
  9515  177E  018C               	clrf	12	;volatile
  9516                           
  9517                           ;tmr2.c: 17: PIR4bits.TMR2IF = 0;
  9518  177F  002E               	movlb	14	; select bank14
  9519  1780  1090               	bcf	16,1	;volatile
  9520                           
  9521                           ;tmr2.c: 19: T2CONbits.TMR2ON = 1;
  9522  1781  0025               	movlb	5	; select bank5
  9523  1782  178E               	bsf	14,7	;volatile
  9524  1783  0008               	return
  9525  1784                     __end_of_TMR2_Initialize:	
  9526                           
  9527                           	psect	text20
  9528  1753                     __ptext20:	
  9529 ;; *************** function _PWM6_Initialize *****************
  9530 ;; Defined at:
  9531 ;;		line 3 in file "pwm6.c"
  9532 ;; Parameters:    Size  Location     Type
  9533 ;;		None
  9534 ;; Auto vars:     Size  Location     Type
  9535 ;;		None
  9536 ;; Return value:  Size  Location     Type
  9537 ;;                  1    wreg      void 
  9538 ;; Registers used:
  9539 ;;		wreg, status,2, status,0
  9540 ;; Tracked objects:
  9541 ;;		On entry : 0/0
  9542 ;;		On exit  : 0/0
  9543 ;;		Unchanged: 0/0
  9544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9548 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9549 ;;Total ram usage:        0 bytes
  9550 ;; Hardware stack levels used:    1
  9551 ;; This function calls:
  9552 ;;		Nothing
  9553 ;; This function is called by:
  9554 ;;		_SYSTEM_Initialize
  9555 ;; This function uses a non-reentrant model
  9556 ;;
  9557                           
  9558                           
  9559                           ;psect for function _PWM6_Initialize
  9560  1753                     _PWM6_Initialize:	
  9561                           
  9562                           ;pwm6.c: 5: PWM6CON = 0x80;
  9563                           
  9564                           ;incstack = 0
  9565                           ; Regs used in _PWM6_Initialize: [wreg+status,2+status,0]
  9566  1753  3080               	movlw	128
  9567  1754  0027               	movlb	7	; select bank7
  9568  1755  008E               	movwf	14	;volatile
  9569                           
  9570                           ;pwm6.c: 7: PWM6DCH = 0x00;
  9571  1756  018D               	clrf	13	;volatile
  9572                           
  9573                           ;pwm6.c: 9: PWM6DCL = 0x00;
  9574  1757  018C               	clrf	12	;volatile
  9575                           
  9576                           ;pwm6.c: 11: CCPTMRS1bits.P6TSEL = 0x1;
  9577  1758  0024               	movlb	4	; select bank4
  9578  1759  081F               	movf	31,w	;volatile
  9579  175A  39F3               	andlw	-13
  9580  175B  3804               	iorlw	4
  9581  175C  009F               	movwf	31	;volatile
  9582  175D  0008               	return
  9583  175E                     __end_of_PWM6_Initialize:	
  9584                           
  9585                           	psect	text21
  9586  0915                     __ptext21:	
  9587 ;; *************** function _PIN_MANAGER_Initialize *****************
  9588 ;; Defined at:
  9589 ;;		line 5 in file "pin_manager.c"
  9590 ;; Parameters:    Size  Location     Type
  9591 ;;		None
  9592 ;; Auto vars:     Size  Location     Type
  9593 ;;  state           1    0[COMMON] unsigned char 
  9594 ;; Return value:  Size  Location     Type
  9595 ;;                  1    wreg      void 
  9596 ;; Registers used:
  9597 ;;		wreg, status,2
  9598 ;; Tracked objects:
  9599 ;;		On entry : 0/0
  9600 ;;		On exit  : 0/0
  9601 ;;		Unchanged: 0/0
  9602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9604 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9606 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9607 ;;Total ram usage:        1 bytes
  9608 ;; Hardware stack levels used:    1
  9609 ;; This function calls:
  9610 ;;		Nothing
  9611 ;; This function is called by:
  9612 ;;		_SYSTEM_Initialize
  9613 ;; This function uses a non-reentrant model
  9614 ;;
  9615                           
  9616                           
  9617                           ;psect for function _PIN_MANAGER_Initialize
  9618  0915                     _PIN_MANAGER_Initialize:	
  9619                           
  9620                           ;pin_manager.c: 7: LATA = 0x00;
  9621                           
  9622                           ;incstack = 0
  9623                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  9624  0915  0020               	movlb	0	; select bank0
  9625  0916  0196               	clrf	22	;volatile
  9626                           
  9627                           ;pin_manager.c: 8: LATB = 0x00;
  9628  0917  0197               	clrf	23	;volatile
  9629                           
  9630                           ;pin_manager.c: 9: LATC = 0x00;
  9631  0918  0198               	clrf	24	;volatile
  9632                           
  9633                           ;pin_manager.c: 11: WPUA = 0x02;
  9634  0919  3002               	movlw	2
  9635  091A  003E               	movlb	30	; select bank30
  9636  091B  00B9               	movwf	57	;volatile
  9637                           
  9638                           ;pin_manager.c: 12: WPUB = 0x00;
  9639  091C  01C4               	clrf	68	;volatile
  9640                           
  9641                           ;pin_manager.c: 13: WPUC = 0x00;
  9642  091D  01CF               	clrf	79	;volatile
  9643                           
  9644                           ;pin_manager.c: 14: WPUE = 0x8;
  9645  091E  3008               	movlw	8
  9646  091F  00E5               	movwf	101	;volatile
  9647                           
  9648                           ;pin_manager.c: 16: TRISA = 0x02;
  9649  0920  3002               	movlw	2
  9650  0921  0020               	movlb	0	; select bank0
  9651  0922  0091               	movwf	17	;volatile
  9652                           
  9653                           ;pin_manager.c: 17: TRISA = 0x3A;
  9654  0923  303A               	movlw	58
  9655  0924  0091               	movwf	17	;volatile
  9656                           
  9657                           ;pin_manager.c: 18: TRISB = 0x0A;
  9658  0925  300A               	movlw	10
  9659  0926  0092               	movwf	18	;volatile
  9660                           
  9661                           ;pin_manager.c: 19: TRISC = 0x10;
  9662  0927  3010               	movlw	16
  9663  0928  0093               	movwf	19	;volatile
  9664                           
  9665                           ;pin_manager.c: 21: ANSELA = 0x3A;
  9666  0929  303A               	movlw	58
  9667  092A  003E               	movlb	30	; select bank30
  9668  092B  00B8               	movwf	56	;volatile
  9669                           
  9670                           ;pin_manager.c: 22: ANSELB = 0x0A;
  9671  092C  300A               	movlw	10
  9672  092D  00C3               	movwf	67	;volatile
  9673                           
  9674                           ;pin_manager.c: 23: ANSELC = 0x00;
  9675  092E  01CE               	clrf	78	;volatile
  9676                           
  9677                           ;pin_manager.c: 25: PIE0bits.IOCIE = 0;
  9678  092F  002E               	movlb	14	; select bank14
  9679  0930  1216               	bcf	22,4	;volatile
  9680                           
  9681                           ;pin_manager.c: 26: bool state = GIE;
  9682  0931  3000               	movlw	0
  9683  0932  1B8B               	btfsc	11,7	;volatile
  9684  0933  3001               	movlw	1
  9685  0934  00F0               	movwf	PIN_MANAGER_Initialize@state
  9686                           
  9687                           ;pin_manager.c: 27: GIE = 0;
  9688  0935  138B               	bcf	11,7	;volatile
  9689                           
  9690                           ;pin_manager.c: 28: PPSLOCK = 0x55;
  9691  0936  3055               	movlw	85
  9692  0937  003D               	movlb	29	; select bank29
  9693  0938  008F               	movwf	15	;volatile
  9694                           
  9695                           ;pin_manager.c: 29: PPSLOCK = 0xAA;
  9696  0939  30AA               	movlw	170
  9697  093A  008F               	movwf	15	;volatile
  9698                           
  9699                           ;pin_manager.c: 30: PPSLOCKbits.PPSLOCKED = 0x00;
  9700  093B  100F               	bcf	15,0	;volatile
  9701                           
  9702                           ;pin_manager.c: 33: RC2PPS = 0x000E;
  9703  093C  300E               	movlw	14
  9704  093D  003E               	movlb	30	; select bank30
  9705  093E  00A2               	movwf	34	;volatile
  9706                           
  9707                           ;pin_manager.c: 37: PPSLOCK = 0x55;
  9708  093F  3055               	movlw	85
  9709  0940  003D               	movlb	29	; select bank29
  9710  0941  008F               	movwf	15	;volatile
  9711                           
  9712                           ;pin_manager.c: 38: PPSLOCK = 0xAA;
  9713  0942  30AA               	movlw	170
  9714  0943  008F               	movwf	15	;volatile
  9715                           
  9716                           ;pin_manager.c: 39: PPSLOCKbits.PPSLOCKED = 0x01;
  9717  0944  140F               	bsf	15,0	;volatile
  9718                           
  9719                           ;pin_manager.c: 40: GIE = state;
  9720  0945  1C70               	btfss	PIN_MANAGER_Initialize@state,0
  9721  0946  2949               	goto	u2400
  9722  0947  178B               	bsf	11,7	;volatile
  9723  0948  0008               	return
  9724  0949                     u2400:	
  9725  0949  138B               	bcf	11,7	;volatile
  9726  094A  0008               	return
  9727  094B                     __end_of_PIN_MANAGER_Initialize:	
  9728                           
  9729                           	psect	text22
  9730  174A                     __ptext22:	
  9731 ;; *************** function _OSCILLATOR_Initialize *****************
  9732 ;; Defined at:
  9733 ;;		line 89 in file "system.c"
  9734 ;; Parameters:    Size  Location     Type
  9735 ;;		None
  9736 ;; Auto vars:     Size  Location     Type
  9737 ;;		None
  9738 ;; Return value:  Size  Location     Type
  9739 ;;                  1    wreg      void 
  9740 ;; Registers used:
  9741 ;;		wreg, status,2
  9742 ;; Tracked objects:
  9743 ;;		On entry : 0/0
  9744 ;;		On exit  : 0/0
  9745 ;;		Unchanged: 0/0
  9746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9750 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9751 ;;Total ram usage:        0 bytes
  9752 ;; Hardware stack levels used:    1
  9753 ;; This function calls:
  9754 ;;		Nothing
  9755 ;; This function is called by:
  9756 ;;		_SYSTEM_Initialize
  9757 ;; This function uses a non-reentrant model
  9758 ;;
  9759                           
  9760                           
  9761                           ;psect for function _OSCILLATOR_Initialize
  9762  174A                     _OSCILLATOR_Initialize:	
  9763                           
  9764                           ;system.c: 91: OSCCON1 = 0x60;
  9765                           
  9766                           ;incstack = 0
  9767                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  9768  174A  3060               	movlw	96
  9769  174B  0031               	movlb	17	; select bank17
  9770  174C  008D               	movwf	13	;volatile
  9771                           
  9772                           ;system.c: 92: OSCCON3 = 0x00;
  9773  174D  018F               	clrf	15	;volatile
  9774                           
  9775                           ;system.c: 93: OSCEN = 0x00;
  9776  174E  0191               	clrf	17	;volatile
  9777                           
  9778                           ;system.c: 94: OSCFRQ = 0x06;
  9779  174F  3006               	movlw	6
  9780  1750  0093               	movwf	19	;volatile
  9781                           
  9782                           ;system.c: 95: OSCTUNE = 0x00;
  9783  1751  0192               	clrf	18	;volatile
  9784  1752  0008               	return
  9785  1753                     __end_of_OSCILLATOR_Initialize:	
  9786                           
  9787                           	psect	text23
  9788  0CA4                     __ptext23:	
  9789 ;; *************** function _LCD_Init *****************
  9790 ;; Defined at:
  9791 ;;		line 154 in file "lcd.c"
  9792 ;; Parameters:    Size  Location     Type
  9793 ;;  style           1    wreg     unsigned char 
  9794 ;; Auto vars:     Size  Location     Type
  9795 ;;  style           1    7[COMMON] unsigned char 
  9796 ;; Return value:  Size  Location     Type
  9797 ;;                  1    wreg      void 
  9798 ;; Registers used:
  9799 ;;		wreg, status,2, status,0, pclath, cstack
  9800 ;; Tracked objects:
  9801 ;;		On entry : 0/0
  9802 ;;		On exit  : 0/0
  9803 ;;		Unchanged: 0/0
  9804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9806 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9807 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9808 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9809 ;;Total ram usage:        4 bytes
  9810 ;; Hardware stack levels used:    1
  9811 ;; Hardware stack levels required when called:    2
  9812 ;; This function calls:
  9813 ;;		_LCD_Cmd
  9814 ;;		_LCD_Port
  9815 ;; This function is called by:
  9816 ;;		_SYSTEM_Initialize
  9817 ;; This function uses a non-reentrant model
  9818 ;;
  9819                           
  9820                           
  9821                           ;psect for function _LCD_Init
  9822  0CA4                     _LCD_Init:	
  9823                           
  9824                           ;incstack = 0
  9825                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  9826                           ;LCD_Init@style stored from wreg
  9827  0CA4  00F7               	movwf	LCD_Init@style
  9828                           
  9829                           ;lcd.c: 156: LCD_Port(0x00);
  9830  0CA5  3000               	movlw	0
  9831  0CA6  3197  27D0  318C   	fcall	_LCD_Port
  9832                           
  9833                           ;lcd.c: 158: _delay((unsigned long)((100)*(32000000/4000.0)));
  9834  0CA9  3005               	movlw	5
  9835  0CAA  00F6               	movwf	??_LCD_Init+2
  9836  0CAB  300F               	movlw	15
  9837  0CAC  00F5               	movwf	??_LCD_Init+1
  9838  0CAD  30F4               	movlw	244
  9839  0CAE  00F4               	movwf	??_LCD_Init
  9840  0CAF                     u3687:	
  9841  0CAF  0BF4               	decfsz	??_LCD_Init,f
  9842  0CB0  2CAF               	goto	u3687
  9843  0CB1  0BF5               	decfsz	??_LCD_Init+1,f
  9844  0CB2  2CAF               	goto	u3687
  9845  0CB3  0BF6               	decfsz	??_LCD_Init+2,f
  9846  0CB4  2CAF               	goto	u3687
  9847                           
  9848                           ;lcd.c: 160: LCD_Cmd(0x03);
  9849  0CB5  3003               	movlw	3
  9850  0CB6  3197  2792  318C   	fcall	_LCD_Cmd
  9851                           
  9852                           ;lcd.c: 162: _delay((unsigned long)((10)*(32000000/4000.0)));
  9853  0CB9  3068               	movlw	104
  9854  0CBA  00F5               	movwf	??_LCD_Init+1
  9855  0CBB  30E4               	movlw	228
  9856  0CBC  00F4               	movwf	??_LCD_Init
  9857  0CBD                     u3697:	
  9858  0CBD  0BF4               	decfsz	??_LCD_Init,f
  9859  0CBE  2CBD               	goto	u3697
  9860  0CBF  0BF5               	decfsz	??_LCD_Init+1,f
  9861  0CC0  2CBD               	goto	u3697
  9862  0CC1  0000               	nop
  9863                           
  9864                           ;lcd.c: 164: LCD_Cmd(0x03);
  9865  0CC2  3003               	movlw	3
  9866  0CC3  3197  2792  318C   	fcall	_LCD_Cmd
  9867                           
  9868                           ;lcd.c: 166: _delay((unsigned long)((120)*(32000000/4000000.0)));
  9869  0CC6  3089               	movlw	137
  9870  0CC7  00F4               	movwf	??_LCD_Init
  9871  0CC8                     u3707:	
  9872  0CC8  3200               	nop2
  9873  0CC9  3200               	nop2
  9874  0CCA  0BF4               	decfsz	??_LCD_Init,f
  9875  0CCB  2CC8               	goto	u3707
  9876                           
  9877                           ;lcd.c: 168: LCD_Cmd(0x03);
  9878  0CCC  3003               	movlw	3
  9879  0CCD  3197  2792  318C   	fcall	_LCD_Cmd
  9880                           
  9881                           ;lcd.c: 170: _delay((unsigned long)((120)*(32000000/4000000.0)));
  9882  0CD0  3089               	movlw	137
  9883  0CD1  00F4               	movwf	??_LCD_Init
  9884  0CD2                     u3717:	
  9885  0CD2  3200               	nop2
  9886  0CD3  3200               	nop2
  9887  0CD4  0BF4               	decfsz	??_LCD_Init,f
  9888  0CD5  2CD2               	goto	u3717
  9889                           
  9890                           ;lcd.c: 172: LCD_Cmd(0x02);
  9891  0CD6  3002               	movlw	2
  9892  0CD7  3197  2792  318C   	fcall	_LCD_Cmd
  9893                           
  9894                           ;lcd.c: 174: _delay((unsigned long)((120)*(32000000/4000000.0)));
  9895  0CDA  3089               	movlw	137
  9896  0CDB  00F4               	movwf	??_LCD_Init
  9897  0CDC                     u3727:	
  9898  0CDC  3200               	nop2
  9899  0CDD  3200               	nop2
  9900  0CDE  0BF4               	decfsz	??_LCD_Init,f
  9901  0CDF  2CDC               	goto	u3727
  9902                           
  9903                           ;lcd.c: 176: LCD_Cmd(0x2);
  9904  0CE0  3002               	movlw	2
  9905  0CE1  3197  2792  318C   	fcall	_LCD_Cmd
  9906                           
  9907                           ;lcd.c: 178: LCD_Cmd(0x8);
  9908  0CE4  3008               	movlw	8
  9909  0CE5  3197  2792  318C   	fcall	_LCD_Cmd
  9910                           
  9911                           ;lcd.c: 180: _delay((unsigned long)((120)*(32000000/4000000.0)));
  9912  0CE8  3089               	movlw	137
  9913  0CE9  00F4               	movwf	??_LCD_Init
  9914  0CEA                     u3737:	
  9915  0CEA  3200               	nop2
  9916  0CEB  3200               	nop2
  9917  0CEC  0BF4               	decfsz	??_LCD_Init,f
  9918  0CED  2CEA               	goto	u3737
  9919                           
  9920                           ;lcd.c: 182: LCD_Cmd(0x0);
  9921  0CEE  3000               	movlw	0
  9922  0CEF  3197  2792  318C   	fcall	_LCD_Cmd
  9923                           
  9924                           ;lcd.c: 184: LCD_Cmd(0x8);
  9925  0CF2  3008               	movlw	8
  9926  0CF3  3197  2792  318C   	fcall	_LCD_Cmd
  9927                           
  9928                           ;lcd.c: 186: _delay((unsigned long)((120)*(32000000/4000000.0)));
  9929  0CF6  3089               	movlw	137
  9930  0CF7  00F4               	movwf	??_LCD_Init
  9931  0CF8                     u3747:	
  9932  0CF8  3200               	nop2
  9933  0CF9  3200               	nop2
  9934  0CFA  0BF4               	decfsz	??_LCD_Init,f
  9935  0CFB  2CF8               	goto	u3747
  9936                           
  9937                           ;lcd.c: 188: LCD_Cmd(0x0);
  9938  0CFC  3000               	movlw	0
  9939  0CFD  3197  2792  318C   	fcall	_LCD_Cmd
  9940                           
  9941                           ;lcd.c: 190: LCD_Cmd(0x1);
  9942  0D00  3001               	movlw	1
  9943  0D01  3197  2792  318C   	fcall	_LCD_Cmd
  9944                           
  9945                           ;lcd.c: 192: _delay((unsigned long)((5)*(32000000/4000.0)));
  9946  0D04  3034               	movlw	52
  9947  0D05  00F5               	movwf	??_LCD_Init+1
  9948  0D06  30F1               	movlw	241
  9949  0D07  00F4               	movwf	??_LCD_Init
  9950  0D08                     u3757:	
  9951  0D08  0BF4               	decfsz	??_LCD_Init,f
  9952  0D09  2D08               	goto	u3757
  9953  0D0A  0BF5               	decfsz	??_LCD_Init+1,f
  9954  0D0B  2D08               	goto	u3757
  9955  0D0C  3200               	nop2
  9956                           
  9957                           ;lcd.c: 194: LCD_Cmd(0x0);
  9958  0D0D  3000               	movlw	0
  9959  0D0E  3197  2792  318C   	fcall	_LCD_Cmd
  9960                           
  9961                           ;lcd.c: 196: LCD_Cmd(0x6);
  9962  0D11  3006               	movlw	6
  9963  0D12  3197  2792  318C   	fcall	_LCD_Cmd
  9964                           
  9965                           ;lcd.c: 198: _delay((unsigned long)((120)*(32000000/4000000.0)));
  9966  0D15  3089               	movlw	137
  9967  0D16  00F4               	movwf	??_LCD_Init
  9968  0D17                     u3767:	
  9969  0D17  3200               	nop2
  9970  0D18  3200               	nop2
  9971  0D19  0BF4               	decfsz	??_LCD_Init,f
  9972  0D1A  2D17               	goto	u3767
  9973                           
  9974                           ;lcd.c: 200: LCD_Cmd(0x0);
  9975  0D1B  3000               	movlw	0
  9976  0D1C  3197  2792  318C   	fcall	_LCD_Cmd
  9977                           
  9978                           ;lcd.c: 202: LCD_Cmd(0xc|style);
  9979  0D1F  0877               	movf	LCD_Init@style,w
  9980  0D20  380C               	iorlw	12
  9981  0D21  3197  2792  318C   	fcall	_LCD_Cmd
  9982                           
  9983                           ;lcd.c: 204: _delay((unsigned long)((120)*(32000000/4000000.0)));
  9984  0D24  3089               	movlw	137
  9985  0D25  00F4               	movwf	??_LCD_Init
  9986  0D26                     u3777:	
  9987  0D26  3200               	nop2
  9988  0D27  3200               	nop2
  9989  0D28  0BF4               	decfsz	??_LCD_Init,f
  9990  0D29  2D26               	goto	u3777
  9991  0D2A  0008               	return
  9992  0D2B                     __end_of_LCD_Init:	
  9993                           
  9994                           	psect	text24
  9995  0004                     __ptext24:	
  9996 ;; *************** function _LCD_Clear *****************
  9997 ;; Defined at:
  9998 ;;		line 75 in file "lcd.c"
  9999 ;; Parameters:    Size  Location     Type
 10000 ;;		None
 10001 ;; Auto vars:     Size  Location     Type
 10002 ;;		None
 10003 ;; Return value:  Size  Location     Type
 10004 ;;                  1    wreg      void 
 10005 ;; Registers used:
 10006 ;;		wreg, status,2, status,0, pclath, cstack
 10007 ;; Tracked objects:
 10008 ;;		On entry : 0/0
 10009 ;;		On exit  : 0/0
 10010 ;;		Unchanged: 0/0
 10011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10015 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10016 ;;Total ram usage:        0 bytes
 10017 ;; Hardware stack levels used:    1
 10018 ;; Hardware stack levels required when called:    2
 10019 ;; This function calls:
 10020 ;;		_LCD_Cmd
 10021 ;; This function is called by:
 10022 ;;		_SYSTEM_Initialize
 10023 ;;		_main
 10024 ;; This function uses a non-reentrant model
 10025 ;;
 10026                           
 10027                           
 10028                           ;psect for function _LCD_Clear
 10029  0004                     _LCD_Clear:	
 10030                           
 10031                           ;lcd.c: 77: LCD_Cmd(0);
 10032                           
 10033                           ;incstack = 0
 10034                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
 10035  0004  3000               	movlw	0
 10036  0005  3197  2792  3180   	fcall	_LCD_Cmd
 10037                           
 10038                           ;lcd.c: 78: LCD_Cmd(1);
 10039  0008  3001               	movlw	1
 10040  0009  3197  2792         	fcall	_LCD_Cmd
 10041  000B  0008               	return
 10042  000C                     __end_of_LCD_Clear:	
 10043                           
 10044                           	psect	text25
 10045  088F                     __ptext25:	
 10046 ;; *************** function _InitCustomChars *****************
 10047 ;; Defined at:
 10048 ;;		line 29 in file "lcd.c"
 10049 ;; Parameters:    Size  Location     Type
 10050 ;;		None
 10051 ;; Auto vars:     Size  Location     Type
 10052 ;;  i               1    6[COMMON] unsigned char 
 10053 ;; Return value:  Size  Location     Type
 10054 ;;                  1    wreg      void 
 10055 ;; Registers used:
 10056 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10057 ;; Tracked objects:
 10058 ;;		On entry : 0/0
 10059 ;;		On exit  : 0/0
 10060 ;;		Unchanged: 0/0
 10061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10063 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10064 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10065 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10066 ;;Total ram usage:        2 bytes
 10067 ;; Hardware stack levels used:    1
 10068 ;; Hardware stack levels required when called:    2
 10069 ;; This function calls:
 10070 ;;		_LCD_Cmd
 10071 ;;		_LCD_Write_Char
 10072 ;; This function is called by:
 10073 ;;		_SYSTEM_Initialize
 10074 ;; This function uses a non-reentrant model
 10075 ;;
 10076                           
 10077                           
 10078                           ;psect for function _InitCustomChars
 10079  088F                     _InitCustomChars:	
 10080                           
 10081                           ;lcd.c: 31: uint8_t i;
 10082                           ;lcd.c: 32: LCD_Cmd(0x04);
 10083                           
 10084                           ;incstack = 0
 10085                           ; Regs used in _InitCustomChars: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10086  088F  3004               	movlw	4
 10087  0890  3197  2792  3188   	fcall	_LCD_Cmd
 10088                           
 10089                           ;lcd.c: 33: LCD_Cmd(0x00);
 10090  0893  3000               	movlw	0
 10091  0894  3197  2792  3188   	fcall	_LCD_Cmd
 10092                           
 10093                           ;lcd.c: 34: for (i = 0; i < sizeof(__cgram) ; i++)
 10094  0897  01F6               	clrf	InitCustomChars@i
 10095  0898  3018               	movlw	24
 10096  0899  0276               	subwf	InitCustomChars@i,w
 10097  089A  1803               	btfsc	3,0
 10098  089B  28AD               	goto	l2246
 10099  089C                     l2240:	
 10100                           
 10101                           ;lcd.c: 35: LCD_Write_Char(__cgram[i]);
 10102  089C  0876               	movf	InitCustomChars@i,w
 10103  089D  3E20               	addlw	(low (___cgram| (0+256)))& (0+255)
 10104  089E  0086               	movwf	6
 10105  089F  3001               	movlw	1	; select bank2/3
 10106  08A0  0087               	movwf	7
 10107  08A1  0801               	movf	1,w
 10108  08A2  3188  20B5  3188   	fcall	_LCD_Write_Char
 10109  08A5  3001               	movlw	1
 10110  08A6  00F5               	movwf	??_InitCustomChars
 10111  08A7  0875               	movf	??_InitCustomChars,w
 10112  08A8  07F6               	addwf	InitCustomChars@i,f
 10113  08A9  3018               	movlw	24
 10114  08AA  0276               	subwf	InitCustomChars@i,w
 10115  08AB  1C03               	skipc
 10116  08AC  289C               	goto	l2240
 10117  08AD                     l2246:	
 10118                           
 10119                           ;lcd.c: 36: LCD_Cmd(0);
 10120  08AD  3000               	movlw	0
 10121  08AE  3197  2792  3188   	fcall	_LCD_Cmd
 10122                           
 10123                           ;lcd.c: 37: LCD_Cmd(2);
 10124  08B1  3002               	movlw	2
 10125  08B2  3197  2792         	fcall	_LCD_Cmd
 10126  08B4  0008               	return
 10127  08B5                     __end_of_InitCustomChars:	
 10128                           
 10129                           	psect	text26
 10130  081C                     __ptext26:	
 10131 ;; *************** function _ADCC_Initialize *****************
 10132 ;; Defined at:
 10133 ;;		line 16 in file "adcc.c"
 10134 ;; Parameters:    Size  Location     Type
 10135 ;;		None
 10136 ;; Auto vars:     Size  Location     Type
 10137 ;;		None
 10138 ;; Return value:  Size  Location     Type
 10139 ;;                  1    wreg      void 
 10140 ;; Registers used:
 10141 ;;		wreg, status,2
 10142 ;; Tracked objects:
 10143 ;;		On entry : 0/0
 10144 ;;		On exit  : 0/0
 10145 ;;		Unchanged: 0/0
 10146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10150 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10151 ;;Total ram usage:        0 bytes
 10152 ;; Hardware stack levels used:    1
 10153 ;; This function calls:
 10154 ;;		Nothing
 10155 ;; This function is called by:
 10156 ;;		_SYSTEM_Initialize
 10157 ;; This function uses a non-reentrant model
 10158 ;;
 10159                           
 10160                           
 10161                           ;psect for function _ADCC_Initialize
 10162  081C                     _ADCC_Initialize:	
 10163                           
 10164                           ;adcc.c: 19: ADCON1 = 0x00;
 10165                           
 10166                           ;incstack = 0
 10167                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
 10168  081C  0021               	movlb	1	; select bank1
 10169  081D  0194               	clrf	20	;volatile
 10170                           
 10171                           ;adcc.c: 21: ADCON2 = 0x00;
 10172  081E  0195               	clrf	21	;volatile
 10173                           
 10174                           ;adcc.c: 23: ADCON3 = 0x00;
 10175  081F  0196               	clrf	22	;volatile
 10176                           
 10177                           ;adcc.c: 25: ADACT = 0x00;
 10178  0820  0199               	clrf	25	;volatile
 10179                           
 10180                           ;adcc.c: 27: ADSTAT = 0x00;
 10181  0821  0197               	clrf	23	;volatile
 10182                           
 10183                           ;adcc.c: 29: ADCLK = 0x3F;
 10184  0822  303F               	movlw	63
 10185  0823  0098               	movwf	24	;volatile
 10186                           
 10187                           ;adcc.c: 33: ADREF = 0x00;
 10188  0824  019A               	clrf	26	;volatile
 10189                           
 10190                           ;adcc.c: 35: ADCAP = 0x00;
 10191  0825  019B               	clrf	27	;volatile
 10192                           
 10193                           ;adcc.c: 38: ADPRE = 0x07;
 10194  0826  3007               	movlw	7
 10195  0827  009C               	movwf	28	;volatile
 10196                           
 10197                           ;adcc.c: 40: ADACQ = 0x00;
 10198  0828  019D               	clrf	29	;volatile
 10199                           
 10200                           ;adcc.c: 42: ADPCH = 0x00;
 10201  0829  019E               	clrf	30	;volatile
 10202                           
 10203                           ;adcc.c: 44: ADRPT = 0x00;
 10204  082A  0022               	movlb	2	; select bank2
 10205  082B  018D               	clrf	13	;volatile
 10206                           
 10207                           ;adcc.c: 46: ADLTHL = 0x00;
 10208  082C  018E               	clrf	14	;volatile
 10209                           
 10210                           ;adcc.c: 48: ADLTHH = 0x00;
 10211  082D  018F               	clrf	15	;volatile
 10212                           
 10213                           ;adcc.c: 50: ADUTHL = 0x00;
 10214  082E  0190               	clrf	16	;volatile
 10215                           
 10216                           ;adcc.c: 52: ADUTHH = 0x00;
 10217  082F  0191               	clrf	17	;volatile
 10218                           
 10219                           ;adcc.c: 54: ADSTPTL = 0x00;
 10220  0830  0192               	clrf	18	;volatile
 10221                           
 10222                           ;adcc.c: 56: ADSTPTH = 0x00;
 10223  0831  0193               	clrf	19	;volatile
 10224                           
 10225                           ;adcc.c: 59: ADCON0 = 0x84;
 10226  0832  3084               	movlw	132
 10227  0833  0021               	movlb	1	; select bank1
 10228  0834  0093               	movwf	19	;volatile
 10229  0835  0008               	return
 10230  0836                     __end_of_ADCC_Initialize:	
 10231                           
 10232                           	psect	text27
 10233  17BA                     __ptext27:	
 10234 ;; *************** function _PWM6_LoadDutyValue *****************
 10235 ;; Defined at:
 10236 ;;		line 14 in file "pwm6.c"
 10237 ;; Parameters:    Size  Location     Type
 10238 ;;  dutyCycle       2    0[COMMON] unsigned int 
 10239 ;; Auto vars:     Size  Location     Type
 10240 ;;		None
 10241 ;; Return value:  Size  Location     Type
 10242 ;;                  1    wreg      void 
 10243 ;; Registers used:
 10244 ;;		wreg, status,2, status,0
 10245 ;; Tracked objects:
 10246 ;;		On entry : 0/0
 10247 ;;		On exit  : 0/0
 10248 ;;		Unchanged: 0/0
 10249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10250 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10252 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10253 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10254 ;;Total ram usage:        4 bytes
 10255 ;; Hardware stack levels used:    1
 10256 ;; This function calls:
 10257 ;;		Nothing
 10258 ;; This function is called by:
 10259 ;;		_main
 10260 ;; This function uses a non-reentrant model
 10261 ;;
 10262                           
 10263                           
 10264                           ;psect for function _PWM6_LoadDutyValue
 10265  17BA                     _PWM6_LoadDutyValue:	
 10266                           
 10267                           ;pwm6.c: 16: PWM6DCH = (dutyCycle & 0x03FC)>>2;
 10268                           
 10269                           ;incstack = 0
 10270                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
 10271  17BA  0871               	movf	PWM6_LoadDutyValue@dutyCycle+1,w
 10272  17BB  00F3               	movwf	??_PWM6_LoadDutyValue+1
 10273  17BC  0870               	movf	PWM6_LoadDutyValue@dutyCycle,w
 10274  17BD  00F2               	movwf	??_PWM6_LoadDutyValue
 10275  17BE  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
 10276  17BF  0CF2               	rrf	??_PWM6_LoadDutyValue,f
 10277  17C0  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
 10278  17C1  0CF2               	rrf	??_PWM6_LoadDutyValue,f
 10279  17C2  0872               	movf	??_PWM6_LoadDutyValue,w
 10280  17C3  0027               	movlb	7	; select bank7
 10281  17C4  008D               	movwf	13	;volatile
 10282                           
 10283                           ;pwm6.c: 18: PWM6DCL = (dutyCycle & 0x0003)<<6;
 10284  17C5  0870               	movf	PWM6_LoadDutyValue@dutyCycle,w
 10285  17C6  3903               	andlw	3
 10286  17C7  00F2               	movwf	??_PWM6_LoadDutyValue
 10287  17C8  3005               	movlw	5
 10288  17C9                     u3035:	
 10289  17C9  35F2               	lslf	??_PWM6_LoadDutyValue,f
 10290  17CA  3EFF               	addlw	-1
 10291  17CB  1D03               	skipz
 10292  17CC  2FC9               	goto	u3035
 10293  17CD  3572               	lslf	??_PWM6_LoadDutyValue,w
 10294  17CE  008C               	movwf	12	;volatile
 10295  17CF  0008               	return
 10296  17D0                     __end_of_PWM6_LoadDutyValue:	
 10297                           
 10298                           	psect	text28
 10299  0802                     __ptext28:	
 10300 ;; *************** function _LCD_Write_String *****************
 10301 ;; Defined at:
 10302 ;;		line 239 in file "lcd.c"
 10303 ;; Parameters:    Size  Location     Type
 10304 ;;  a               2    5[COMMON] PTR const unsigned char 
 10305 ;;		 -> STR_16(7), STR_15(9), STR_14(11), STR_13(11), 
 10306 ;;		 -> STR_12(2), STR_11(2), STR_10(2), STR_9(2), 
 10307 ;;		 -> STR_8(2), STR_7(2), STR_6(2), STR_5(2), 
 10308 ;;		 -> STR_4(2), STR_3(2), STR_2(2), STR_1(2), 
 10309 ;; Auto vars:     Size  Location     Type
 10310 ;;  i               2    8[COMMON] int 
 10311 ;; Return value:  Size  Location     Type
 10312 ;;                  1    wreg      void 
 10313 ;; Registers used:
 10314 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10315 ;; Tracked objects:
 10316 ;;		On entry : 0/0
 10317 ;;		On exit  : 0/0
 10318 ;;		Unchanged: 0/0
 10319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10320 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10321 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10322 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10323 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10324 ;;Total ram usage:        5 bytes
 10325 ;; Hardware stack levels used:    1
 10326 ;; Hardware stack levels required when called:    2
 10327 ;; This function calls:
 10328 ;;		_LCD_Write_Char
 10329 ;; This function is called by:
 10330 ;;		_main
 10331 ;; This function uses a non-reentrant model
 10332 ;;
 10333                           
 10334                           
 10335                           ;psect for function _LCD_Write_String
 10336  0802                     _LCD_Write_String:	
 10337                           
 10338                           ;lcd.c: 241: int i;
 10339                           ;lcd.c: 242: for(i=0;a[i]!='\0';i++)
 10340                           
 10341                           ;incstack = 0
 10342                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10343  0802  01F8               	clrf	LCD_Write_String@i
 10344  0803  01F9               	clrf	LCD_Write_String@i+1
 10345  0804                     l2588:	
 10346  0804  0875               	movf	LCD_Write_String@a,w
 10347  0805  0778               	addwf	LCD_Write_String@i,w
 10348  0806  0084               	movwf	4
 10349  0807  0876               	movf	LCD_Write_String@a+1,w
 10350  0808  3D79               	addwfc	LCD_Write_String@i+1,w
 10351  0809  0085               	movwf	5
 10352  080A  0012               	moviw fsr0++
 10353  080B  1903               	btfsc	3,2
 10354  080C  0008               	return
 10355                           
 10356                           ;lcd.c: 243: LCD_Write_Char(a[i]);
 10357  080D  0875               	movf	LCD_Write_String@a,w
 10358  080E  0778               	addwf	LCD_Write_String@i,w
 10359  080F  0084               	movwf	4
 10360  0810  0876               	movf	LCD_Write_String@a+1,w
 10361  0811  3D79               	addwfc	LCD_Write_String@i+1,w
 10362  0812  0085               	movwf	5
 10363  0813  0800               	movf	0,w	;code access
 10364  0814  3188  20B5  3188   	fcall	_LCD_Write_Char
 10365  0817  3001               	movlw	1
 10366  0818  07F8               	addwf	LCD_Write_String@i,f
 10367  0819  3000               	movlw	0
 10368  081A  3DF9               	addwfc	LCD_Write_String@i+1,f
 10369  081B  2804               	goto	l2588
 10370  081C                     __end_of_LCD_Write_String:	
 10371                           
 10372                           	psect	text29
 10373  0F35                     __ptext29:	
 10374 ;; *************** function _LCD_Write_Int *****************
 10375 ;; Defined at:
 10376 ;;		line 246 in file "lcd.c"
 10377 ;; Parameters:    Size  Location     Type
 10378 ;;  value           2    0[BANK0 ] int 
 10379 ;;  fieldLength     1    2[BANK0 ] char 
 10380 ;;  numPlaces       1    3[BANK0 ] char 
 10381 ;;  sign            1    4[BANK0 ] char 
 10382 ;; Auto vars:     Size  Location     Type
 10383 ;;  str             5   10[BANK0 ] unsigned char [5]
 10384 ;;  i               2   17[BANK0 ] int 
 10385 ;;  j               2   15[BANK0 ] int 
 10386 ;; Return value:  Size  Location     Type
 10387 ;;                  1    wreg      void 
 10388 ;; Registers used:
 10389 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10390 ;; Tracked objects:
 10391 ;;		On entry : 0/0
 10392 ;;		On exit  : 0/0
 10393 ;;		Unchanged: 0/0
 10394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10395 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10396 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10397 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10398 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10399 ;;Total ram usage:       19 bytes
 10400 ;; Hardware stack levels used:    1
 10401 ;; Hardware stack levels required when called:    2
 10402 ;; This function calls:
 10403 ;;		_LCD_Write_Char
 10404 ;;		___awdiv
 10405 ;;		___awmod
 10406 ;; This function is called by:
 10407 ;;		_main
 10408 ;; This function uses a non-reentrant model
 10409 ;;
 10410                           
 10411                           
 10412                           ;psect for function _LCD_Write_Int
 10413  0F35                     _LCD_Write_Int:	
 10414                           
 10415                           ;lcd.c: 248: char str[5]={0,0,0,0,0};
 10416                           
 10417                           ;incstack = 0
 10418                           ; Regs used in _LCD_Write_Int: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10419  0F35  30B8               	movlw	low LCD_Write_Int@F13687
 10420  0F36  0086               	movwf	6
 10421  0F37  3000               	movlw	high LCD_Write_Int@F13687
 10422  0F38  0087               	movwf	7
 10423  0F39  302A               	movlw	low LCD_Write_Int@str
 10424  0F3A  0084               	movwf	4
 10425  0F3B  3000               	movlw	high LCD_Write_Int@str
 10426  0F3C  0085               	movwf	5
 10427  0F3D  3005               	movlw	5
 10428  0F3E  0020               	movlb	0	; select bank0
 10429  0F3F  00A5               	movwf	??_LCD_Write_Int
 10430  0F40                     u2940:	
 10431  0F40  0016               	moviw fsr1++
 10432  0F41  001A               	movwi fsr0++
 10433  0F42  0BA5               	decfsz	??_LCD_Write_Int,f
 10434  0F43  2F40               	goto	u2940
 10435                           
 10436                           ;lcd.c: 249: int i=4,j=0;
 10437  0F44  3004               	movlw	4
 10438  0F45  00B1               	movwf	LCD_Write_Int@i
 10439  0F46  3000               	movlw	0
 10440  0F47  00B2               	movwf	LCD_Write_Int@i+1
 10441  0F48  01AF               	clrf	LCD_Write_Int@j
 10442  0F49  01B0               	clrf	LCD_Write_Int@j+1
 10443                           
 10444                           ;lcd.c: 251: if(value<0)
 10445  0F4A  1FA1               	btfss	LCD_Write_Int@value+1,7
 10446  0F4B  2F57               	goto	l2602
 10447                           
 10448                           ;lcd.c: 252: {
 10449                           ;lcd.c: 253: LCD_Write_Char('-');
 10450  0F4C  302D               	movlw	45
 10451  0F4D  3188  20B5  318F   	fcall	_LCD_Write_Char
 10452                           
 10453                           ;lcd.c: 254: value=value*-1;
 10454  0F50  0020               	movlb	0	; select bank0
 10455  0F51  09A0               	comf	LCD_Write_Int@value,f
 10456  0F52  09A1               	comf	LCD_Write_Int@value+1,f
 10457  0F53  0AA0               	incf	LCD_Write_Int@value,f
 10458  0F54  1903               	skipnz
 10459  0F55  0AA1               	incf	LCD_Write_Int@value+1,f
 10460                           
 10461                           ;lcd.c: 255: }
 10462  0F56  2F5E               	goto	l2612
 10463  0F57                     l2602:	
 10464                           
 10465                           ;lcd.c: 257: else
 10466                           ;lcd.c: 258: {
 10467                           ;lcd.c: 259: if(sign == 1)
 10468  0F57  0324               	decf	LCD_Write_Int@sign,w
 10469  0F58  1D03               	btfss	3,2
 10470  0F59  2F5E               	goto	l2612
 10471                           
 10472                           ;lcd.c: 260: {
 10473                           ;lcd.c: 261: LCD_Write_Char('+');
 10474  0F5A  302B               	movlw	43
 10475  0F5B  3188  20B5  318F   	fcall	_LCD_Write_Char
 10476  0F5E                     l2612:	
 10477                           ;lcd.c: 262: }
 10478                           ;lcd.c: 263: }
 10479                           ;lcd.c: 265: while(value)
 10480                           
 10481  0F5E  0020               	movlb	0	; select bank0
 10482  0F5F  0820               	movf	LCD_Write_Int@value,w
 10483  0F60  0421               	iorwf	LCD_Write_Int@value+1,w
 10484  0F61  1903               	btfsc	3,2
 10485  0F62  2F8D               	goto	l2614
 10486                           
 10487                           ;lcd.c: 266: {
 10488                           ;lcd.c: 267: str[i]=value%10;
 10489  0F63  300A               	movlw	10
 10490  0F64  00F0               	movwf	___awmod@divisor
 10491  0F65  3000               	movlw	0
 10492  0F66  00F1               	movwf	___awmod@divisor+1
 10493  0F67  0020               	movlb	0	; select bank0
 10494  0F68  0821               	movf	LCD_Write_Int@value+1,w
 10495  0F69  00F3               	movwf	___awmod@dividend+1
 10496  0F6A  0820               	movf	LCD_Write_Int@value,w
 10497  0F6B  00F2               	movwf	___awmod@dividend
 10498  0F6C  318A  2242  318F   	fcall	___awmod
 10499  0F6F  0870               	movf	?___awmod,w
 10500  0F70  0020               	movlb	0	; select bank0
 10501  0F71  00A5               	movwf	??_LCD_Write_Int
 10502  0F72  0831               	movf	LCD_Write_Int@i,w
 10503  0F73  3E2A               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
 10504  0F74  0086               	movwf	6
 10505  0F75  0187               	clrf	7
 10506  0F76  0825               	movf	??_LCD_Write_Int,w
 10507  0F77  0081               	movwf	1
 10508                           
 10509                           ;lcd.c: 268: value=value/10;
 10510  0F78  300A               	movlw	10
 10511  0F79  00F0               	movwf	___awdiv@divisor
 10512  0F7A  3000               	movlw	0
 10513  0F7B  00F1               	movwf	___awdiv@divisor+1
 10514  0F7C  0821               	movf	LCD_Write_Int@value+1,w
 10515  0F7D  00F3               	movwf	___awdiv@dividend+1
 10516  0F7E  0820               	movf	LCD_Write_Int@value,w
 10517  0F7F  00F2               	movwf	___awdiv@dividend
 10518  0F80  318A  2287  318F   	fcall	___awdiv
 10519  0F83  0871               	movf	?___awdiv+1,w
 10520  0F84  0020               	movlb	0	; select bank0
 10521  0F85  00A1               	movwf	LCD_Write_Int@value+1
 10522  0F86  0870               	movf	?___awdiv,w
 10523  0F87  00A0               	movwf	LCD_Write_Int@value
 10524                           
 10525                           ;lcd.c: 269: i--;
 10526  0F88  30FF               	movlw	255
 10527  0F89  07B1               	addwf	LCD_Write_Int@i,f
 10528  0F8A  30FF               	movlw	255
 10529  0F8B  3DB2               	addwfc	LCD_Write_Int@i+1,f
 10530  0F8C  2F5E               	goto	l2612
 10531  0F8D                     l2614:	
 10532                           
 10533                           ;lcd.c: 270: }
 10534                           ;lcd.c: 271: if(fieldLength==-1)
 10535  0F8D  0A22               	incf	LCD_Write_Int@fieldLength,w
 10536  0F8E  1903               	btfsc	3,2
 10537  0F8F  2F95               	goto	l2620
 10538  0F90  2F9D               	goto	l2622
 10539  0F91                     l2618:	
 10540                           ;lcd.c: 272: {
 10541                           ;lcd.c: 273: while(str[j]==0)
 10542                           
 10543                           
 10544                           ;lcd.c: 274: {
 10545                           ;lcd.c: 275: j++;
 10546  0F91  3001               	movlw	1
 10547  0F92  07AF               	addwf	LCD_Write_Int@j,f
 10548  0F93  3000               	movlw	0
 10549  0F94  3DB0               	addwfc	LCD_Write_Int@j+1,f
 10550  0F95                     l2620:	
 10551  0F95  082F               	movf	LCD_Write_Int@j,w
 10552  0F96  3E2A               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
 10553  0F97  0086               	movwf	6
 10554  0F98  0187               	clrf	7
 10555  0F99  0801               	movf	1,w
 10556  0F9A  1D03               	btfss	3,2
 10557  0F9B  2FAD               	goto	l2624
 10558  0F9C  2F91               	goto	l2618
 10559  0F9D                     l2622:	
 10560                           ;lcd.c: 276: }
 10561                           ;lcd.c: 277: }
 10562                           
 10563                           
 10564                           ;lcd.c: 278: else
 10565                           ;lcd.c: 279: {
 10566                           ;lcd.c: 280: j=5-fieldLength;
 10567  0F9D  0822               	movf	LCD_Write_Int@fieldLength,w
 10568  0F9E  00A5               	movwf	??_LCD_Write_Int
 10569  0F9F  01A6               	clrf	??_LCD_Write_Int+1
 10570  0FA0  1BA5               	btfsc	??_LCD_Write_Int,7
 10571  0FA1  03A6               	decf	??_LCD_Write_Int+1,f
 10572  0FA2  09A5               	comf	??_LCD_Write_Int,f
 10573  0FA3  09A6               	comf	??_LCD_Write_Int+1,f
 10574  0FA4  0AA5               	incf	??_LCD_Write_Int,f
 10575  0FA5  1903               	skipnz
 10576  0FA6  0AA6               	incf	??_LCD_Write_Int+1,f
 10577  0FA7  0825               	movf	??_LCD_Write_Int,w
 10578  0FA8  3E05               	addlw	5
 10579  0FA9  00AF               	movwf	LCD_Write_Int@j
 10580  0FAA  3000               	movlw	0
 10581  0FAB  3D26               	addwfc	??_LCD_Write_Int+1,w
 10582  0FAC  00B0               	movwf	LCD_Write_Int@j+1
 10583  0FAD                     l2624:	
 10584                           
 10585                           ;lcd.c: 281: }
 10586                           ;lcd.c: 283: for(i=j;i<(5-numPlaces);i++)
 10587  0FAD  0830               	movf	LCD_Write_Int@j+1,w
 10588  0FAE  00B2               	movwf	LCD_Write_Int@i+1
 10589  0FAF  082F               	movf	LCD_Write_Int@j,w
 10590  0FB0  00B1               	movwf	LCD_Write_Int@i
 10591  0FB1                     l2630:	
 10592  0FB1  0823               	movf	LCD_Write_Int@numPlaces,w
 10593  0FB2  00A5               	movwf	??_LCD_Write_Int
 10594  0FB3  01A6               	clrf	??_LCD_Write_Int+1
 10595  0FB4  1BA5               	btfsc	??_LCD_Write_Int,7
 10596  0FB5  03A6               	decf	??_LCD_Write_Int+1,f
 10597  0FB6  09A5               	comf	??_LCD_Write_Int,f
 10598  0FB7  09A6               	comf	??_LCD_Write_Int+1,f
 10599  0FB8  0AA5               	incf	??_LCD_Write_Int,f
 10600  0FB9  1903               	skipnz
 10601  0FBA  0AA6               	incf	??_LCD_Write_Int+1,f
 10602  0FBB  0825               	movf	??_LCD_Write_Int,w
 10603  0FBC  3E05               	addlw	5
 10604  0FBD  00A7               	movwf	??_LCD_Write_Int+2
 10605  0FBE  3000               	movlw	0
 10606  0FBF  3D26               	addwfc	??_LCD_Write_Int+1,w
 10607  0FC0  00A8               	movwf	??_LCD_Write_Int+3
 10608  0FC1  0832               	movf	LCD_Write_Int@i+1,w
 10609  0FC2  3A80               	xorlw	128
 10610  0FC3  00A9               	movwf	??_LCD_Write_Int+4
 10611  0FC4  0828               	movf	??_LCD_Write_Int+3,w
 10612  0FC5  3A80               	xorlw	128
 10613  0FC6  0229               	subwf	??_LCD_Write_Int+4,w
 10614  0FC7  1D03               	skipz
 10615  0FC8  2FCB               	goto	u3005
 10616  0FC9  0827               	movf	??_LCD_Write_Int+2,w
 10617  0FCA  0231               	subwf	LCD_Write_Int@i,w
 10618  0FCB                     u3005:	
 10619  0FCB  1803               	btfsc	3,0
 10620  0FCC  2FDD               	goto	l2632
 10621                           
 10622                           ;lcd.c: 284: {
 10623                           ;lcd.c: 285: LCD_Write_Char(48+str[i]);
 10624  0FCD  0020               	movlb	0	; select bank0
 10625  0FCE  0831               	movf	LCD_Write_Int@i,w
 10626  0FCF  3E2A               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
 10627  0FD0  0086               	movwf	6
 10628  0FD1  0187               	clrf	7
 10629  0FD2  0801               	movf	1,w
 10630  0FD3  3E30               	addlw	48
 10631  0FD4  3188  20B5  318F   	fcall	_LCD_Write_Char
 10632  0FD7  3001               	movlw	1
 10633  0FD8  0020               	movlb	0	; select bank0
 10634  0FD9  07B1               	addwf	LCD_Write_Int@i,f
 10635  0FDA  3000               	movlw	0
 10636  0FDB  3DB2               	addwfc	LCD_Write_Int@i+1,f
 10637  0FDC  2FB1               	goto	l2630
 10638  0FDD                     l2632:	
 10639                           
 10640                           ;lcd.c: 286: }
 10641                           ;lcd.c: 288: if(numPlaces == 1)
 10642  0FDD  0020               	movlb	0	; select bank0
 10643  0FDE  0323               	decf	LCD_Write_Int@numPlaces,w
 10644  0FDF  1D03               	btfss	3,2
 10645  0FE0  2FEB               	goto	l2636
 10646                           
 10647                           ;lcd.c: 289: {
 10648                           ;lcd.c: 290: LCD_Write_Char(46);
 10649  0FE1  302E               	movlw	46
 10650  0FE2  3188  20B5  318F   	fcall	_LCD_Write_Char
 10651                           
 10652                           ;lcd.c: 291: LCD_Write_Char(48+str[4]);
 10653  0FE5  0020               	movlb	0	; select bank0
 10654  0FE6  082E               	movf	LCD_Write_Int@str+4,w
 10655  0FE7  3E30               	addlw	48
 10656  0FE8  3188  20B5  318F   	fcall	_LCD_Write_Char
 10657  0FEB                     l2636:	
 10658                           
 10659                           ;lcd.c: 292: }
 10660                           ;lcd.c: 294: if(numPlaces == 2)
 10661  0FEB  3002               	movlw	2
 10662  0FEC  0020               	movlb	0	; select bank0
 10663  0FED  0623               	xorwf	LCD_Write_Int@numPlaces,w
 10664  0FEE  1D03               	btfss	3,2
 10665  0FEF  0008               	return
 10666                           
 10667                           ;lcd.c: 295: {
 10668                           ;lcd.c: 296: LCD_Write_Char(46);
 10669  0FF0  302E               	movlw	46
 10670  0FF1  3188  20B5  318F   	fcall	_LCD_Write_Char
 10671                           
 10672                           ;lcd.c: 297: LCD_Write_Char(48+str[3]);
 10673  0FF4  0020               	movlb	0	; select bank0
 10674  0FF5  082D               	movf	LCD_Write_Int@str+3,w
 10675  0FF6  3E30               	addlw	48
 10676  0FF7  3188  20B5  318F   	fcall	_LCD_Write_Char
 10677                           
 10678                           ;lcd.c: 298: LCD_Write_Char(48+str[4]);
 10679  0FFA  0020               	movlb	0	; select bank0
 10680  0FFB  082E               	movf	LCD_Write_Int@str+4,w
 10681  0FFC  3E30               	addlw	48
 10682  0FFD  3188  20B5         	fcall	_LCD_Write_Char
 10683  0FFF  0008               	return
 10684  1000                     __end_of_LCD_Write_Int:	
 10685                           
 10686                           	psect	text30
 10687  0A42                     __ptext30:	
 10688 ;; *************** function ___awmod *****************
 10689 ;; Defined at:
 10690 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c"
 10691 ;; Parameters:    Size  Location     Type
 10692 ;;  divisor         2    0[COMMON] int 
 10693 ;;  dividend        2    2[COMMON] int 
 10694 ;; Auto vars:     Size  Location     Type
 10695 ;;  sign            1    6[COMMON] unsigned char 
 10696 ;;  counter         1    5[COMMON] unsigned char 
 10697 ;; Return value:  Size  Location     Type
 10698 ;;                  2    0[COMMON] int 
 10699 ;; Registers used:
 10700 ;;		wreg, status,2, status,0
 10701 ;; Tracked objects:
 10702 ;;		On entry : 0/0
 10703 ;;		On exit  : 0/0
 10704 ;;		Unchanged: 0/0
 10705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10706 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10707 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10708 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10709 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10710 ;;Total ram usage:        7 bytes
 10711 ;; Hardware stack levels used:    1
 10712 ;; This function calls:
 10713 ;;		Nothing
 10714 ;; This function is called by:
 10715 ;;		_LCD_Write_Int
 10716 ;; This function uses a non-reentrant model
 10717 ;;
 10718                           
 10719                           
 10720                           ;psect for function ___awmod
 10721  0A42                     ___awmod:	
 10722                           
 10723                           ;incstack = 0
 10724                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 10725  0A42  01F6               	clrf	___awmod@sign
 10726  0A43  1FF3               	btfss	___awmod@dividend+1,7
 10727  0A44  2A4C               	goto	l2462
 10728  0A45  09F2               	comf	___awmod@dividend,f
 10729  0A46  09F3               	comf	___awmod@dividend+1,f
 10730  0A47  0AF2               	incf	___awmod@dividend,f
 10731  0A48  1903               	skipnz
 10732  0A49  0AF3               	incf	___awmod@dividend+1,f
 10733  0A4A  01F6               	clrf	___awmod@sign
 10734  0A4B  0AF6               	incf	___awmod@sign,f
 10735  0A4C                     l2462:	
 10736  0A4C  1FF1               	btfss	___awmod@divisor+1,7
 10737  0A4D  2A53               	goto	l2466
 10738  0A4E  09F0               	comf	___awmod@divisor,f
 10739  0A4F  09F1               	comf	___awmod@divisor+1,f
 10740  0A50  0AF0               	incf	___awmod@divisor,f
 10741  0A51  1903               	skipnz
 10742  0A52  0AF1               	incf	___awmod@divisor+1,f
 10743  0A53                     l2466:	
 10744  0A53  0870               	movf	___awmod@divisor,w
 10745  0A54  0471               	iorwf	___awmod@divisor+1,w
 10746  0A55  1903               	btfsc	3,2
 10747  0A56  2A7A               	goto	l2484
 10748  0A57  01F5               	clrf	___awmod@counter
 10749  0A58  0AF5               	incf	___awmod@counter,f
 10750  0A59                     l2474:	
 10751  0A59  1BF1               	btfsc	___awmod@divisor+1,7
 10752  0A5A  2A65               	goto	l2476
 10753  0A5B  3001               	movlw	1
 10754  0A5C                     u2675:	
 10755  0A5C  35F0               	lslf	___awmod@divisor,f
 10756  0A5D  0DF1               	rlf	___awmod@divisor+1,f
 10757  0A5E  0B89               	decfsz	9,f
 10758  0A5F  2A5C               	goto	u2675
 10759  0A60  3001               	movlw	1
 10760  0A61  00F4               	movwf	??___awmod
 10761  0A62  0874               	movf	??___awmod,w
 10762  0A63  07F5               	addwf	___awmod@counter,f
 10763  0A64  2A59               	goto	l2474
 10764  0A65                     l2476:	
 10765  0A65  0871               	movf	___awmod@divisor+1,w
 10766  0A66  0273               	subwf	___awmod@dividend+1,w
 10767  0A67  1D03               	skipz
 10768  0A68  2A6B               	goto	u2695
 10769  0A69  0870               	movf	___awmod@divisor,w
 10770  0A6A  0272               	subwf	___awmod@dividend,w
 10771  0A6B                     u2695:	
 10772  0A6B  1C03               	skipc
 10773  0A6C  2A71               	goto	l2480
 10774  0A6D  0870               	movf	___awmod@divisor,w
 10775  0A6E  02F2               	subwf	___awmod@dividend,f
 10776  0A6F  0871               	movf	___awmod@divisor+1,w
 10777  0A70  3BF3               	subwfb	___awmod@dividend+1,f
 10778  0A71                     l2480:	
 10779  0A71  3001               	movlw	1
 10780  0A72                     u2705:	
 10781  0A72  36F1               	lsrf	___awmod@divisor+1,f
 10782  0A73  0CF0               	rrf	___awmod@divisor,f
 10783  0A74  0B89               	decfsz	9,f
 10784  0A75  2A72               	goto	u2705
 10785  0A76  3001               	movlw	1
 10786  0A77  02F5               	subwf	___awmod@counter,f
 10787  0A78  1D03               	btfss	3,2
 10788  0A79  2A65               	goto	l2476
 10789  0A7A                     l2484:	
 10790  0A7A  0876               	movf	___awmod@sign,w
 10791  0A7B  1903               	btfsc	3,2
 10792  0A7C  2A82               	goto	l2488
 10793  0A7D  09F2               	comf	___awmod@dividend,f
 10794  0A7E  09F3               	comf	___awmod@dividend+1,f
 10795  0A7F  0AF2               	incf	___awmod@dividend,f
 10796  0A80  1903               	skipnz
 10797  0A81  0AF3               	incf	___awmod@dividend+1,f
 10798  0A82                     l2488:	
 10799  0A82  0873               	movf	___awmod@dividend+1,w
 10800  0A83  00F1               	movwf	?___awmod+1
 10801  0A84  0872               	movf	___awmod@dividend,w
 10802  0A85  00F0               	movwf	?___awmod
 10803  0A86  0008               	return
 10804  0A87                     __end_of___awmod:	
 10805                           
 10806                           	psect	text31
 10807  0A87                     __ptext31:	
 10808 ;; *************** function ___awdiv *****************
 10809 ;; Defined at:
 10810 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c"
 10811 ;; Parameters:    Size  Location     Type
 10812 ;;  divisor         2    0[COMMON] int 
 10813 ;;  dividend        2    2[COMMON] int 
 10814 ;; Auto vars:     Size  Location     Type
 10815 ;;  quotient        2    7[COMMON] int 
 10816 ;;  sign            1    6[COMMON] unsigned char 
 10817 ;;  counter         1    5[COMMON] unsigned char 
 10818 ;; Return value:  Size  Location     Type
 10819 ;;                  2    0[COMMON] int 
 10820 ;; Registers used:
 10821 ;;		wreg, status,2, status,0
 10822 ;; Tracked objects:
 10823 ;;		On entry : 0/0
 10824 ;;		On exit  : 0/0
 10825 ;;		Unchanged: 0/0
 10826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10827 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10828 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10829 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10830 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10831 ;;Total ram usage:        9 bytes
 10832 ;; Hardware stack levels used:    1
 10833 ;; This function calls:
 10834 ;;		Nothing
 10835 ;; This function is called by:
 10836 ;;		_LCD_Write_Int
 10837 ;; This function uses a non-reentrant model
 10838 ;;
 10839                           
 10840                           
 10841                           ;psect for function ___awdiv
 10842  0A87                     ___awdiv:	
 10843                           
 10844                           ;incstack = 0
 10845                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 10846  0A87  01F6               	clrf	___awdiv@sign
 10847  0A88  1FF1               	btfss	___awdiv@divisor+1,7
 10848  0A89  2A91               	goto	l2418
 10849  0A8A  09F0               	comf	___awdiv@divisor,f
 10850  0A8B  09F1               	comf	___awdiv@divisor+1,f
 10851  0A8C  0AF0               	incf	___awdiv@divisor,f
 10852  0A8D  1903               	skipnz
 10853  0A8E  0AF1               	incf	___awdiv@divisor+1,f
 10854  0A8F  01F6               	clrf	___awdiv@sign
 10855  0A90  0AF6               	incf	___awdiv@sign,f
 10856  0A91                     l2418:	
 10857  0A91  1FF3               	btfss	___awdiv@dividend+1,7
 10858  0A92  2A9C               	goto	l2424
 10859  0A93  09F2               	comf	___awdiv@dividend,f
 10860  0A94  09F3               	comf	___awdiv@dividend+1,f
 10861  0A95  0AF2               	incf	___awdiv@dividend,f
 10862  0A96  1903               	skipnz
 10863  0A97  0AF3               	incf	___awdiv@dividend+1,f
 10864  0A98  3001               	movlw	1
 10865  0A99  00F4               	movwf	??___awdiv
 10866  0A9A  0874               	movf	??___awdiv,w
 10867  0A9B  06F6               	xorwf	___awdiv@sign,f
 10868  0A9C                     l2424:	
 10869  0A9C  01F7               	clrf	___awdiv@quotient
 10870  0A9D  01F8               	clrf	___awdiv@quotient+1
 10871  0A9E  0870               	movf	___awdiv@divisor,w
 10872  0A9F  0471               	iorwf	___awdiv@divisor+1,w
 10873  0AA0  1903               	btfsc	3,2
 10874  0AA1  2ACB               	goto	l2446
 10875  0AA2  01F5               	clrf	___awdiv@counter
 10876  0AA3  0AF5               	incf	___awdiv@counter,f
 10877  0AA4                     l2434:	
 10878  0AA4  1BF1               	btfsc	___awdiv@divisor+1,7
 10879  0AA5  2AB0               	goto	l2436
 10880  0AA6  3001               	movlw	1
 10881  0AA7                     u2575:	
 10882  0AA7  35F0               	lslf	___awdiv@divisor,f
 10883  0AA8  0DF1               	rlf	___awdiv@divisor+1,f
 10884  0AA9  0B89               	decfsz	9,f
 10885  0AAA  2AA7               	goto	u2575
 10886  0AAB  3001               	movlw	1
 10887  0AAC  00F4               	movwf	??___awdiv
 10888  0AAD  0874               	movf	??___awdiv,w
 10889  0AAE  07F5               	addwf	___awdiv@counter,f
 10890  0AAF  2AA4               	goto	l2434
 10891  0AB0                     l2436:	
 10892  0AB0  3001               	movlw	1
 10893  0AB1                     u2595:	
 10894  0AB1  35F7               	lslf	___awdiv@quotient,f
 10895  0AB2  0DF8               	rlf	___awdiv@quotient+1,f
 10896  0AB3  0B89               	decfsz	9,f
 10897  0AB4  2AB1               	goto	u2595
 10898  0AB5  0871               	movf	___awdiv@divisor+1,w
 10899  0AB6  0273               	subwf	___awdiv@dividend+1,w
 10900  0AB7  1D03               	skipz
 10901  0AB8  2ABB               	goto	u2605
 10902  0AB9  0870               	movf	___awdiv@divisor,w
 10903  0ABA  0272               	subwf	___awdiv@dividend,w
 10904  0ABB                     u2605:	
 10905  0ABB  1C03               	skipc
 10906  0ABC  2AC2               	goto	l2442
 10907  0ABD  0870               	movf	___awdiv@divisor,w
 10908  0ABE  02F2               	subwf	___awdiv@dividend,f
 10909  0ABF  0871               	movf	___awdiv@divisor+1,w
 10910  0AC0  3BF3               	subwfb	___awdiv@dividend+1,f
 10911  0AC1  1477               	bsf	___awdiv@quotient,0
 10912  0AC2                     l2442:	
 10913  0AC2  3001               	movlw	1
 10914  0AC3                     u2615:	
 10915  0AC3  36F1               	lsrf	___awdiv@divisor+1,f
 10916  0AC4  0CF0               	rrf	___awdiv@divisor,f
 10917  0AC5  0B89               	decfsz	9,f
 10918  0AC6  2AC3               	goto	u2615
 10919  0AC7  3001               	movlw	1
 10920  0AC8  02F5               	subwf	___awdiv@counter,f
 10921  0AC9  1D03               	btfss	3,2
 10922  0ACA  2AB0               	goto	l2436
 10923  0ACB                     l2446:	
 10924  0ACB  0876               	movf	___awdiv@sign,w
 10925  0ACC  1903               	btfsc	3,2
 10926  0ACD  2AD3               	goto	l2450
 10927  0ACE  09F7               	comf	___awdiv@quotient,f
 10928  0ACF  09F8               	comf	___awdiv@quotient+1,f
 10929  0AD0  0AF7               	incf	___awdiv@quotient,f
 10930  0AD1  1903               	skipnz
 10931  0AD2  0AF8               	incf	___awdiv@quotient+1,f
 10932  0AD3                     l2450:	
 10933  0AD3  0878               	movf	___awdiv@quotient+1,w
 10934  0AD4  00F1               	movwf	?___awdiv+1
 10935  0AD5  0877               	movf	___awdiv@quotient,w
 10936  0AD6  00F0               	movwf	?___awdiv
 10937  0AD7  0008               	return
 10938  0AD8                     __end_of___awdiv:	
 10939                           
 10940                           	psect	text32
 10941  08B5                     __ptext32:	
 10942 ;; *************** function _LCD_Write_Char *****************
 10943 ;; Defined at:
 10944 ;;		line 223 in file "lcd.c"
 10945 ;; Parameters:    Size  Location     Type
 10946 ;;  a               1    wreg     const unsigned char 
 10947 ;; Auto vars:     Size  Location     Type
 10948 ;;  a               1    4[COMMON] const unsigned char 
 10949 ;;  y               1    3[COMMON] unsigned char 
 10950 ;;  temp            1    2[COMMON] unsigned char 
 10951 ;; Return value:  Size  Location     Type
 10952 ;;                  1    wreg      void 
 10953 ;; Registers used:
 10954 ;;		wreg, status,2, status,0, pclath, cstack
 10955 ;; Tracked objects:
 10956 ;;		On entry : 0/0
 10957 ;;		On exit  : 0/0
 10958 ;;		Unchanged: 0/0
 10959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10961 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10962 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10963 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10964 ;;Total ram usage:        4 bytes
 10965 ;; Hardware stack levels used:    1
 10966 ;; Hardware stack levels required when called:    1
 10967 ;; This function calls:
 10968 ;;		_LCD_Port
 10969 ;; This function is called by:
 10970 ;;		_InitCustomChars
 10971 ;;		_LCD_Write_String
 10972 ;;		_LCD_Write_Int
 10973 ;;		_main
 10974 ;; This function uses a non-reentrant model
 10975 ;;
 10976                           
 10977                           
 10978                           ;psect for function _LCD_Write_Char
 10979  08B5                     _LCD_Write_Char:	
 10980                           
 10981                           ;incstack = 0
 10982                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
 10983                           ;LCD_Write_Char@a stored from wreg
 10984  08B5  00F4               	movwf	LCD_Write_Char@a
 10985                           
 10986                           ;lcd.c: 225: char temp,y;
 10987                           ;lcd.c: 226: temp = a&0x0F;
 10988  08B6  0874               	movf	LCD_Write_Char@a,w
 10989  08B7  390F               	andlw	15
 10990  08B8  00F1               	movwf	??_LCD_Write_Char
 10991  08B9  0871               	movf	??_LCD_Write_Char,w
 10992  08BA  00F2               	movwf	LCD_Write_Char@temp
 10993                           
 10994                           ;lcd.c: 227: y = a&0xF0;
 10995  08BB  0874               	movf	LCD_Write_Char@a,w
 10996  08BC  39F0               	andlw	240
 10997  08BD  00F1               	movwf	??_LCD_Write_Char
 10998  08BE  0871               	movf	??_LCD_Write_Char,w
 10999  08BF  00F3               	movwf	LCD_Write_Char@y
 11000                           
 11001                           ;lcd.c: 228: RA0 = 1;
 11002  08C0  0020               	movlb	0	; select bank0
 11003  08C1  140C               	bsf	12,0	;volatile
 11004                           
 11005                           ;lcd.c: 229: LCD_Port(y>>4);
 11006  08C2  0873               	movf	LCD_Write_Char@y,w
 11007  08C3  00F1               	movwf	??_LCD_Write_Char
 11008  08C4  3004               	movlw	4
 11009  08C5                     u2305:	
 11010  08C5  36F1               	lsrf	??_LCD_Write_Char,f
 11011  08C6  0B89               	decfsz	9,f
 11012  08C7  28C5               	goto	u2305
 11013  08C8  0871               	movf	??_LCD_Write_Char,w
 11014  08C9  3197  27D0  3188   	fcall	_LCD_Port
 11015                           
 11016                           ;lcd.c: 230: RA2 = 1;
 11017  08CC  0020               	movlb	0	; select bank0
 11018  08CD  150C               	bsf	12,2	;volatile
 11019                           
 11020                           ;lcd.c: 231: RA2 = 0;
 11021  08CE  110C               	bcf	12,2	;volatile
 11022                           
 11023                           ;lcd.c: 232: _delay((unsigned long)((40)*(32000000/4000000.0)));
 11024  08CF  306A               	movlw	106
 11025  08D0  00F1               	movwf	??_LCD_Write_Char
 11026  08D1                     u3787:	
 11027  08D1  0BF1               	decfsz	??_LCD_Write_Char,f
 11028  08D2  28D1               	goto	u3787
 11029  08D3  0000               	nop
 11030                           
 11031                           ;lcd.c: 233: LCD_Port(temp);
 11032  08D4  0872               	movf	LCD_Write_Char@temp,w
 11033  08D5  3197  27D0  3188   	fcall	_LCD_Port
 11034                           
 11035                           ;lcd.c: 234: RA2 = 1;
 11036  08D8  0020               	movlb	0	; select bank0
 11037  08D9  150C               	bsf	12,2	;volatile
 11038                           
 11039                           ;lcd.c: 235: RA2 = 0;
 11040  08DA  110C               	bcf	12,2	;volatile
 11041                           
 11042                           ;lcd.c: 236: _delay((unsigned long)((40)*(32000000/4000000.0)));
 11043  08DB  306A               	movlw	106
 11044  08DC  00F1               	movwf	??_LCD_Write_Char
 11045  08DD                     u3797:	
 11046  08DD  0BF1               	decfsz	??_LCD_Write_Char,f
 11047  08DE  28DD               	goto	u3797
 11048  08DF  0000               	nop
 11049  08E0  0008               	return
 11050  08E1                     __end_of_LCD_Write_Char:	
 11051                           
 11052                           	psect	text33
 11053  09C1                     __ptext33:	
 11054 ;; *************** function _LCD_Set_Cursor *****************
 11055 ;; Defined at:
 11056 ;;		line 82 in file "lcd.c"
 11057 ;; Parameters:    Size  Location     Type
 11058 ;;  x               1    wreg     unsigned char 
 11059 ;;  y               1    4[COMMON] unsigned char 
 11060 ;; Auto vars:     Size  Location     Type
 11061 ;;  x               1    7[COMMON] unsigned char 
 11062 ;;  temp            1   10[COMMON] unsigned char 
 11063 ;;  w               1    9[COMMON] unsigned char 
 11064 ;;  z               1    8[COMMON] unsigned char 
 11065 ;; Return value:  Size  Location     Type
 11066 ;;                  1    wreg      void 
 11067 ;; Registers used:
 11068 ;;		wreg, status,2, status,0, pclath, cstack
 11069 ;; Tracked objects:
 11070 ;;		On entry : 0/0
 11071 ;;		On exit  : 0/0
 11072 ;;		Unchanged: 0/0
 11073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11074 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11075 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11076 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11077 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11078 ;;Total ram usage:        7 bytes
 11079 ;; Hardware stack levels used:    1
 11080 ;; Hardware stack levels required when called:    2
 11081 ;; This function calls:
 11082 ;;		_LCD_Cmd
 11083 ;; This function is called by:
 11084 ;;		_main
 11085 ;; This function uses a non-reentrant model
 11086 ;;
 11087                           
 11088                           
 11089                           ;psect for function _LCD_Set_Cursor
 11090  09C1                     _LCD_Set_Cursor:	
 11091                           
 11092                           ;incstack = 0
 11093                           ; Regs used in _LCD_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
 11094                           ;LCD_Set_Cursor@x stored from wreg
 11095  09C1  00F7               	movwf	LCD_Set_Cursor@x
 11096                           
 11097                           ;lcd.c: 86: char temp,z,w;
 11098                           ;lcd.c: 88: if(y == 0)
 11099  09C2  0874               	movf	LCD_Set_Cursor@y,w
 11100  09C3  1D03               	btfss	3,2
 11101  09C4  29E1               	goto	l2572
 11102                           
 11103                           ;lcd.c: 89: {
 11104                           ;lcd.c: 90: temp = 0x80 + x;
 11105  09C5  0877               	movf	LCD_Set_Cursor@x,w
 11106  09C6  3E80               	addlw	128
 11107  09C7  00F5               	movwf	??_LCD_Set_Cursor
 11108  09C8  0875               	movf	??_LCD_Set_Cursor,w
 11109  09C9  00FA               	movwf	LCD_Set_Cursor@temp
 11110                           
 11111                           ;lcd.c: 91: z = temp>>4;
 11112  09CA  087A               	movf	LCD_Set_Cursor@temp,w
 11113  09CB  00F5               	movwf	??_LCD_Set_Cursor
 11114  09CC  3004               	movlw	4
 11115  09CD                     u2905:	
 11116  09CD  36F5               	lsrf	??_LCD_Set_Cursor,f
 11117  09CE  0B89               	decfsz	9,f
 11118  09CF  29CD               	goto	u2905
 11119  09D0  0875               	movf	??_LCD_Set_Cursor,w
 11120  09D1  00F6               	movwf	??_LCD_Set_Cursor+1
 11121  09D2  0876               	movf	??_LCD_Set_Cursor+1,w
 11122  09D3  00F8               	movwf	LCD_Set_Cursor@z
 11123                           
 11124                           ;lcd.c: 92: w = temp & 0x0F;
 11125  09D4  087A               	movf	LCD_Set_Cursor@temp,w
 11126  09D5  390F               	andlw	15
 11127  09D6  00F5               	movwf	??_LCD_Set_Cursor
 11128  09D7  0875               	movf	??_LCD_Set_Cursor,w
 11129  09D8  00F9               	movwf	LCD_Set_Cursor@w
 11130                           
 11131                           ;lcd.c: 93: LCD_Cmd(z);
 11132  09D9  0878               	movf	LCD_Set_Cursor@z,w
 11133  09DA  3197  2792  3189   	fcall	_LCD_Cmd
 11134                           
 11135                           ;lcd.c: 94: LCD_Cmd(w);
 11136  09DD  0879               	movf	LCD_Set_Cursor@w,w
 11137  09DE  3197  2792         	fcall	_LCD_Cmd
 11138                           
 11139                           ;lcd.c: 95: }
 11140  09E0  0008               	return
 11141  09E1                     l2572:	
 11142                           
 11143                           ;lcd.c: 97: else if(y == 1)
 11144  09E1  0374               	decf	LCD_Set_Cursor@y,w
 11145  09E2  1D03               	btfss	3,2
 11146  09E3  0008               	return
 11147                           
 11148                           ;lcd.c: 98: {
 11149                           ;lcd.c: 99: temp = 0xC0 + x;
 11150  09E4  0877               	movf	LCD_Set_Cursor@x,w
 11151  09E5  3EC0               	addlw	192
 11152  09E6  00F5               	movwf	??_LCD_Set_Cursor
 11153  09E7  0875               	movf	??_LCD_Set_Cursor,w
 11154  09E8  00FA               	movwf	LCD_Set_Cursor@temp
 11155                           
 11156                           ;lcd.c: 100: z = temp>>4;
 11157  09E9  087A               	movf	LCD_Set_Cursor@temp,w
 11158  09EA  00F5               	movwf	??_LCD_Set_Cursor
 11159  09EB  3004               	movlw	4
 11160  09EC                     u2925:	
 11161  09EC  36F5               	lsrf	??_LCD_Set_Cursor,f
 11162  09ED  0B89               	decfsz	9,f
 11163  09EE  29EC               	goto	u2925
 11164  09EF  0875               	movf	??_LCD_Set_Cursor,w
 11165  09F0  00F6               	movwf	??_LCD_Set_Cursor+1
 11166  09F1  0876               	movf	??_LCD_Set_Cursor+1,w
 11167  09F2  00F8               	movwf	LCD_Set_Cursor@z
 11168                           
 11169                           ;lcd.c: 101: w = temp & 0x0F;
 11170  09F3  087A               	movf	LCD_Set_Cursor@temp,w
 11171  09F4  390F               	andlw	15
 11172  09F5  00F5               	movwf	??_LCD_Set_Cursor
 11173  09F6  0875               	movf	??_LCD_Set_Cursor,w
 11174  09F7  00F9               	movwf	LCD_Set_Cursor@w
 11175                           
 11176                           ;lcd.c: 102: LCD_Cmd(z);
 11177  09F8  0878               	movf	LCD_Set_Cursor@z,w
 11178  09F9  3197  2792  3189   	fcall	_LCD_Cmd
 11179                           
 11180                           ;lcd.c: 103: LCD_Cmd(w);
 11181  09FC  0879               	movf	LCD_Set_Cursor@w,w
 11182  09FD  3197  2792         	fcall	_LCD_Cmd
 11183  09FF  0008               	return
 11184  0A00                     __end_of_LCD_Set_Cursor:	
 11185                           
 11186                           	psect	text34
 11187  1792                     __ptext34:	
 11188 ;; *************** function _LCD_Cmd *****************
 11189 ;; Defined at:
 11190 ;;		line 65 in file "lcd.c"
 11191 ;; Parameters:    Size  Location     Type
 11192 ;;  a               1    wreg     unsigned char 
 11193 ;; Auto vars:     Size  Location     Type
 11194 ;;  a               1    3[COMMON] unsigned char 
 11195 ;; Return value:  Size  Location     Type
 11196 ;;                  1    wreg      void 
 11197 ;; Registers used:
 11198 ;;		wreg, status,2, status,0, pclath, cstack
 11199 ;; Tracked objects:
 11200 ;;		On entry : 0/0
 11201 ;;		On exit  : 0/0
 11202 ;;		Unchanged: 0/0
 11203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11205 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11206 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11207 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11208 ;;Total ram usage:        3 bytes
 11209 ;; Hardware stack levels used:    1
 11210 ;; Hardware stack levels required when called:    1
 11211 ;; This function calls:
 11212 ;;		_LCD_Port
 11213 ;; This function is called by:
 11214 ;;		_InitCustomChars
 11215 ;;		_LCD_Clear
 11216 ;;		_LCD_Set_Cursor
 11217 ;;		_LCD_Init
 11218 ;; This function uses a non-reentrant model
 11219 ;;
 11220                           
 11221                           
 11222                           ;psect for function _LCD_Cmd
 11223  1792                     _LCD_Cmd:	
 11224                           
 11225                           ;incstack = 0
 11226                           ; Regs used in _LCD_Cmd: [wreg+status,2+status,0+pclath+cstack]
 11227                           ;LCD_Cmd@a stored from wreg
 11228  1792  00F3               	movwf	LCD_Cmd@a
 11229                           
 11230                           ;lcd.c: 67: RA0 = 0;
 11231  1793  0020               	movlb	0	; select bank0
 11232  1794  100C               	bcf	12,0	;volatile
 11233                           
 11234                           ;lcd.c: 68: LCD_Port(a);
 11235  1795  0873               	movf	LCD_Cmd@a,w
 11236  1796  3197  27D0  3197   	fcall	_LCD_Port
 11237                           
 11238                           ;lcd.c: 69: RA2 = 1;
 11239  1799  0020               	movlb	0	; select bank0
 11240  179A  150C               	bsf	12,2	;volatile
 11241                           
 11242                           ;lcd.c: 70: RA2 = 0;
 11243  179B  110C               	bcf	12,2	;volatile
 11244                           
 11245                           ;lcd.c: 71: _delay((unsigned long)((4)*(32000000/4000.0)));
 11246  179C  302A               	movlw	42
 11247  179D  00F2               	movwf	??_LCD_Cmd+1
 11248  179E  308D               	movlw	141
 11249  179F  00F1               	movwf	??_LCD_Cmd
 11250  17A0                     u3807:	
 11251  17A0  0BF1               	decfsz	??_LCD_Cmd,f
 11252  17A1  2FA0               	goto	u3807
 11253  17A2  0BF2               	decfsz	??_LCD_Cmd+1,f
 11254  17A3  2FA0               	goto	u3807
 11255  17A4  3200               	nop2
 11256  17A5  0008               	return
 11257  17A6                     __end_of_LCD_Cmd:	
 11258                           
 11259                           	psect	text35
 11260  17D0                     __ptext35:	
 11261 ;; *************** function _LCD_Port *****************
 11262 ;; Defined at:
 11263 ;;		line 41 in file "lcd.c"
 11264 ;; Parameters:    Size  Location     Type
 11265 ;;  a               1    wreg     unsigned char 
 11266 ;; Auto vars:     Size  Location     Type
 11267 ;;  a               1    0[COMMON] unsigned char 
 11268 ;; Return value:  Size  Location     Type
 11269 ;;                  1    wreg      void 
 11270 ;; Registers used:
 11271 ;;		wreg
 11272 ;; Tracked objects:
 11273 ;;		On entry : 0/0
 11274 ;;		On exit  : 0/0
 11275 ;;		Unchanged: 0/0
 11276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11278 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11280 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11281 ;;Total ram usage:        1 bytes
 11282 ;; Hardware stack levels used:    1
 11283 ;; This function calls:
 11284 ;;		Nothing
 11285 ;; This function is called by:
 11286 ;;		_LCD_Cmd
 11287 ;;		_LCD_Init
 11288 ;;		_LCD_Write_Char
 11289 ;; This function uses a non-reentrant model
 11290 ;;
 11291                           
 11292                           
 11293                           ;psect for function _LCD_Port
 11294  17D0                     _LCD_Port:	
 11295                           
 11296                           ;incstack = 0
 11297                           ; Regs used in _LCD_Port: [wreg]
 11298                           ;LCD_Port@a stored from wreg
 11299  17D0  00F0               	movwf	LCD_Port@a
 11300                           
 11301                           ;lcd.c: 43: if(a & 1)
 11302  17D1  1C70               	btfss	LCD_Port@a,0
 11303  17D2  2FD6               	goto	l94
 11304                           
 11305                           ;lcd.c: 44: RA7 = 1;
 11306  17D3  0020               	movlb	0	; select bank0
 11307  17D4  178C               	bsf	12,7	;volatile
 11308  17D5  2FD8               	goto	l1970
 11309  17D6                     l94:	
 11310                           
 11311                           ;lcd.c: 45: else
 11312                           ;lcd.c: 46: RA7 = 0;
 11313  17D6  0020               	movlb	0	; select bank0
 11314  17D7  138C               	bcf	12,7	;volatile
 11315  17D8                     l1970:	
 11316                           
 11317                           ;lcd.c: 48: if(a & 2)
 11318  17D8  1CF0               	btfss	LCD_Port@a,1
 11319  17D9  2FDC               	goto	l96
 11320                           
 11321                           ;lcd.c: 49: RA6 = 1;
 11322  17DA  170C               	bsf	12,6	;volatile
 11323  17DB  2FDD               	goto	l1974
 11324  17DC                     l96:	
 11325                           
 11326                           ;lcd.c: 50: else
 11327                           ;lcd.c: 51: RA6 = 0;
 11328  17DC  130C               	bcf	12,6	;volatile
 11329  17DD                     l1974:	
 11330                           
 11331                           ;lcd.c: 53: if(a & 4)
 11332  17DD  1D70               	btfss	LCD_Port@a,2
 11333  17DE  2FE1               	goto	l98
 11334                           
 11335                           ;lcd.c: 54: RC0 = 1;
 11336  17DF  140E               	bsf	14,0	;volatile
 11337  17E0  2FE2               	goto	l1978
 11338  17E1                     l98:	
 11339                           
 11340                           ;lcd.c: 55: else
 11341                           ;lcd.c: 56: RC0 = 0;
 11342  17E1  100E               	bcf	14,0	;volatile
 11343  17E2                     l1978:	
 11344                           
 11345                           ;lcd.c: 58: if(a & 8)
 11346  17E2  1DF0               	btfss	LCD_Port@a,3
 11347  17E3  2FE6               	goto	l100
 11348                           
 11349                           ;lcd.c: 59: RC1 = 1;
 11350  17E4  148E               	bsf	14,1	;volatile
 11351  17E5  0008               	return
 11352  17E6                     l100:	
 11353                           
 11354                           ;lcd.c: 60: else
 11355                           ;lcd.c: 61: RC1 = 0;
 11356  17E6  108E               	bcf	14,1	;volatile
 11357  17E7  0008               	return
 11358  17E8                     __end_of_LCD_Port:	
 11359  007E                     btemp	set	126	;btemp
 11360  007E                     wtemp	set	126
 11361  007E                     wtemp0	set	126
 11362  0080                     wtemp1	set	128
 11363  0082                     wtemp2	set	130
 11364  0084                     wtemp3	set	132
 11365  0086                     wtemp4	set	134
 11366  0088                     wtemp5	set	136
 11367  007F                     wtemp6	set	127
 11368  007E                     ttemp	set	126
 11369  007E                     ttemp0	set	126
 11370  0081                     ttemp1	set	129
 11371  0084                     ttemp2	set	132
 11372  0087                     ttemp3	set	135
 11373  007F                     ttemp4	set	127
 11374  007E                     ltemp	set	126
 11375  007E                     ltemp0	set	126
 11376  0082                     ltemp1	set	130
 11377  0086                     ltemp2	set	134
 11378  0080                     ltemp3	set	128


Data Sizes:
    Strings     45
    Constant    27
    Data        44
    BSS         45
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     76      80
    BANK1            80     28      77
    BANK2            80      0      36
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            48      0       0
    BANK10            0      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 27
		 -> log@coeff(CODE[27]), 

    LCD_Write_String@a	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_16(CODE[7]), STR_15(CODE[9]), STR_14(CODE[11]), STR_13(CODE[11]), 
		 -> STR_12(CODE[2]), STR_11(CODE[2]), STR_10(CODE[2]), STR_9(CODE[2]), 
		 -> STR_8(CODE[2]), STR_7(CODE[2]), STR_6(CODE[2]), STR_5(CODE[2]), 
		 -> STR_4(CODE[2]), STR_3(CODE[2]), STR_2(CODE[2]), STR_1(CODE[2]), 


Critical Paths under _main in COMMON

    _main->___fttol
    _tempCalc->___awtoft
    _log->___awtoft
    ___ftmul->___awtoft
    ___awtoft->___ftpack
    ___ftadd->___awtoft
    ___ftdiv->___awtoft
    _readAnalog->___aldiv
    _SYSTEM_Initialize->_LCD_Init
    _LCD_Init->_LCD_Cmd
    _LCD_Clear->_LCD_Cmd
    _InitCustomChars->_LCD_Write_Char
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Int->___fttol
    _LCD_Write_Char->_LCD_Port
    _LCD_Set_Cursor->_LCD_Cmd
    _LCD_Cmd->_LCD_Port

Critical Paths under _main in BANK0

    _main->_tempCalc
    _tempCalc->_log
    _log->_eval_poly
    _eval_poly->___ftadd
    ___ftsub->___ftadd
    ___ftadd->___ftdiv
    ___ftdiv->___ftmul
    _readAnalog->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                31    31      0   50015
                                             73 BANK0      3     3      0
                                              0 BANK1     28    28      0
                            _ADCRead
                          _LCD_Clear
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                      _LCD_Write_Int
                   _LCD_Write_String
                 _PWM6_LoadDutyValue
                  _SYSTEM_Initialize
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___fttol
                            ___lwdiv
                         _readAnalog
                           _tempCalc
 ---------------------------------------------------------------------------------
 (1) _tempCalc                                            12     9      3   30741
                                             61 BANK0     12     9      3
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftsub
                                _log
 ---------------------------------------------------------------------------------
 (2) _log                                                  6     3      3   16061
                                             55 BANK0      6     3      3
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _frexp                                                6     2      4     330
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) _eval_poly                                           10     3      7    7103
                                             45 BANK0     10     3      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             16    10      6    2749
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6     322
                                              0 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             6     3      3    1904
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3568
                                             45 BANK0      6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             13     7      6    3395
                                             32 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    2729
                                             16 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    1707
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _readAnalog                                          22    20      2    1392
                                              9 COMMON     4     4      0
                                              6 BANK0     18    16      2
                            _ADCRead
                            ___aldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     622
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     406
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _ADCRead                                              4     1      3      22
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              8     4      4     374
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             14    10      4     464
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    3     3      0     709
                                              8 COMMON     3     3      0
                    _ADCC_Initialize
                    _InitCustomChars
                          _LCD_Clear
                           _LCD_Init
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM6_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             4     4      0     220
                                              4 COMMON     4     4      0
                            _LCD_Cmd
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            0     0      0     110
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (2) _InitCustomChars                                      2     2      0     356
                                              5 COMMON     2     2      0
                            _LCD_Cmd
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM6_LoadDutyValue                                   4     2      2     256
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCD_Write_String                                     5     3      2    1116
                                              5 COMMON     5     3      2
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (1) _LCD_Write_Int                                       19    14      5    2759
                                              0 BANK0     19    14      5
                     _LCD_Write_Char
                            ___awdiv
                            ___awmod
                            ___fttol (ARG)
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     402
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     406
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (1) _LCD_Set_Cursor                                       7     6      1    1440
                                              4 COMMON     7     6      1
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (3) _LCD_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (3) _LCD_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCRead
   _LCD_Clear
     _LCD_Cmd
       _LCD_Port
   _LCD_Set_Cursor
     _LCD_Cmd
       _LCD_Port
   _LCD_Write_Char
     _LCD_Port
   _LCD_Write_Int
     _LCD_Write_Char
       _LCD_Port
     ___awdiv
     ___awmod
     ___fttol (ARG)
     ___lwdiv (ARG)
   _LCD_Write_String
     _LCD_Write_Char
       _LCD_Port
   _PWM6_LoadDutyValue
   _SYSTEM_Initialize
     _ADCC_Initialize
     _InitCustomChars
       _LCD_Cmd
         _LCD_Port
       _LCD_Write_Char
         _LCD_Port
     _LCD_Clear
       _LCD_Cmd
         _LCD_Port
     _LCD_Init
       _LCD_Cmd
         _LCD_Port
       _LCD_Port
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM6_Initialize
     _TMR2_Initialize
   ___ftadd
     ___awtoft (ARG)
       ___ftpack
     ___ftdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftpack (ARG)
     ___wmul (ARG)
     _frexp (ARG)
   ___ftdiv
     ___awtoft (ARG)
       ___ftpack
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftpack (ARG)
     ___ftpack (ARG)
   ___ftmul
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)
     _frexp (ARG)
   ___fttol
   ___lwdiv
   _readAnalog
     _ADCRead
     ___aldiv
     ___wmul
   _tempCalc
     ___awtoft
       ___ftpack
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
       _frexp (ARG)
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftsub
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
     _log
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftge
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       _eval_poly
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___wmul
       _frexp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4C      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     1C      4D       7       96.3%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      24       9       45.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      CF      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               30      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK10               0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      CF      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Tue Feb 20 02:55:22 2018

                    __CFG_CP$OFF 0000                               l58 178B                               l94 17D6  
                             l96 17DC                               l98 17E1                     ___awdiv@sign 0076  
            ___wmul@multiplicand 0072      __size_of_PWM6_LoadDutyValue 0016                     ___ftadd@exp1 004C  
                   ___ftadd@exp2 004B                      __CFG_LVP$ON 0000                     ___ftadd@sign 004A  
                            l100 17E6                              l404 083E                              l294 04D4  
                            l295 04DF                              l459 0BAD                              l572 0B7D  
                            l573 0B85                              l565 0B6A                              l656 0C8A  
                            l596 018A                              _GIE 005F                              _RA0 0060  
                            _RA2 0062                              _RC0 0070                              _RC1 0071  
                            _RA6 0066                              _RA7 0067                     __CFG_CPD$OFF 0000  
                            _log 0DD4                  __end_of_ADCRead 1792                     ___awmod@sign 0076  
                _TMR2_Initialize 1776                     __CFG_BORV$LO 0000                              wreg 0009  
                    main@analogs 00BD                  __end_of_LCD_Cmd 17A6                     __CFG_ZCD$OFF 0000  
                   ___ftdiv@cntr 003A                   _LCD_Set_Cursor 09C1                     ___ftdiv@sign 003F  
                           l2002 0113                             l2012 0129                             l2030 0156  
                           l2006 011A                             l2102 0F05                             l2032 0160  
                           l2024 0143                             l2042 017C                             l2034 0165  
                           l2106 0F0D                             l2052 01AE                             l2044 0186  
                           l2036 0169                             l2204 0B31                             l3020 07B5  
                           l2062 01C9                             l3022 07B6                             l2240 089C  
                           l2048 019C                             l2072 0E98                             l3016 07A9  
                           l3008 07A0                             l2402 0C07                             l2154 0879  
                           l2162 0961                             l2090 0EE9                             l2246 08AD  
                           l2406 0C15                             l2166 0977                             l2094 0EF1  
                           l2078 0EAE                             l2424 0A9C                             l2504 0D58  
                           l2360 0E03                             l2450 0AD3                             l2442 0AC2  
                           l2434 0AA4                             l2418 0A91                             l2602 0F57  
                           l2186 0998                             l2354 0DF2                             l2436 0AB0  
                           l2620 0F95                             l2612 0F5E                             l2380 0BBE  
                           l2446 0ACB                             l2462 0A4C                             l2630 0FB1  
                           l2622 0F9D                             l2614 0F8D                             l2390 0BDC  
                           l2526 0DB2                             l2518 0D99                             l2480 0A71  
                           l2632 0FDD                             l2624 0FAD                             l2720 0C9B  
                           l2474 0A59                             l2466 0A53                             l2618 0F91  
                           l2714 0C81                             l2706 0C66                             l2538 0859  
                           l2572 09E1                             l2476 0A65                             l2484 0A7A  
                           l2636 0FEB                             l2716 0C8D                             l2708 0C74  
                           l2388 0BCE                             l2556 02E9                             l2900 0559  
                           l2742 0907                             l2734 08E9                             l2398 0BFC  
                           l1942 0B47                             l2488 0A82                             l2736 08F5  
                           l1952 0B6F                             l1944 0B51                             l2912 058D  
                           l2840 049D                             l1970 17D8                             l2746 0910  
                           l1954 0B77                             l1946 0B56                             l1938 0B40  
                           l2498 0D42                             l2930 05BA                             l2922 05A8  
                           l2588 0804                             l2852 04CB                             l1974 17DD  
                           l2942 05DA                             l2870 050C                             l2846 049F  
                           l2688 0C36                             l1984 0838                             l2936 05C9  
                           l2880 0529                             l2864 04EA                             l2848 04BE  
                           l1978 17E2                             l2954 060E                             l2964 0629  
                           l2894 054B                             l2992 06C7                             l2888 053C  
                           ?_log 0057                             STR_1 103A                             STR_2 1042  
                           STR_3 1044                             STR_4 103E                             STR_5 103A  
                           STR_6 1036                             STR_7 103C                             STR_8 103A  
                           STR_9 1046                             u2105 016A                             u3005 0FCB  
                           u2045 0144                             u2205 0EBA                             _LATA 0016  
                           _LATB 0017                             u2135 017D                             u2215 0ECA  
                           _LATC 0018                             u2400 0949                             u2305 08C5  
                           u3210 031F                             u3035 17C9                             u3115 0C82  
                           u2075 0157                             u2235 0EF2                             u3220 032D  
                           u2245 0EF8                             u3055 0C3D                             u2505 0BF1  
                           _T2PR 028D                             u3155 08EC                             u2515 0BFD  
                           u2275 0F0E                             u2605 0ABB                             u3085 0C67  
                           u2285 0F14                             u2615 0AC3                             u3175 08F6  
                           u1815 0B72                             u2705 0A72                             u3185 0900  
                           u3195 0908                             u2475 0BD1                             u3507 0362  
                           u1925 083F                             u3517 037D                             u2575 0AA7  
                           u2495 0BDD                             u1935 0844                             u1855 0B8C  
                           u1775 0B4C                             u3607 0470                             u3527 0398  
                           u2905 09CD                             u2825 01F6                             u3617 048B  
                           u3537 03B3                             u2595 0AB1                             u2675 0A5C  
                           u3707 0CC8                             u2835 0244                             u1795 0B65  
                           u2755 0D6A                             u3627 0505                             u3547 03CE  
                           u2940 0F40                             u2925 09EC                             u3717 0CD2  
                           u2845 027D                             u2765 0D7A                             u3637 059D  
                           u3557 03E9                             u3807 17A0                             u2695 0A6B  
                           u3727 0CDC                             u2855 02C0                             u2775 0D9A  
                           u3647 061E                             u3567 0404                             u3737 0CEA  
                           u3657 0A1B                             u2865 02D9                             u2785 0DA9  
                           u3577 041F                             u3497 0344                             u3747 0CF8  
                           u3667 0A2B                             u2795 0DB3                             u3587 043A  
                           u3757 0D08                             u3677 0A3A                             u2885 02F5  
                           u3597 0455                             u3767 0D17                             u3687 0CAF  
                           u3777 0D26                             u3697 0CBD                             u3787 08D1  
                           u3797 08DD              tempCalc@analogValue 005D                             _WPUA 0F39  
                           _WPUB 0F44                             _WPUC 0F4F                             _WPUE 0F65  
                   __CFG_WRT$OFF 0000                    __CFG_FCMEN$ON 0000                ?_LCD_Write_String 0075  
                           _main 0311                     ___ftpack@arg 0070               __size_of_LCD_Clear 0008  
                   ___ftpack@exp 0073                             fsr0h 0005                             fsr1h 0007  
                           fsr0l 0004                             indf0 0000                             indf1 0001  
                           fsr1l 0006                             btemp 007E                             log@x 0057  
                  __CFG_BOREN$ON 0000                             ltemp 007E                             start 0002  
             ??_LCD_Write_String 0077                             ttemp 007E                             wtemp 007E  
                  __CFG_CSWEN$ON 0000                    __CFG_MCLRE$ON 0000                     ___ftmul@cntr 002E  
                  _LCD_Write_Int 0F35                     ___ftmul@sign 002F                     ___fttol@exp1 007D  
                          ??_log 005A                     ___fttol@lval 0079                 __end_of_LCD_Init 0D2B  
               __end_of_LCD_Port 17E8   __size_of_OSCILLATOR_Initialize 0009    __end_of_OSCILLATOR_Initialize 1753  
                __end_of___aldiv 0C1E                            _ADACQ 009D                            _ADCAP 009B  
                          _ADACT 0099                            ?_main 0070                            _ADCLK 0098  
                          _ADPCH 009E                            _ADREF 009A                  __end_of___awdiv 0AD8  
                          _ADPRE 009C                  __end_of___ftadd 01E1                            STR_10 1040  
                          STR_11 103C                            STR_12 1038                            STR_13 101B  
                          STR_14 101B                            STR_15 1026                            STR_16 102F  
                  __CFG_WDTE$OFF 0000                  __end_of___awmod 0A87                            _ADRPT 010D  
                __end_of___ftdiv 0DD4                  __end_of___ftmul 0F35                  ___awdiv@divisor 0070  
                __end_of___ftsub 086F                  __end_of___fttol 0CA4                            _T2CON 028E  
                          _T2HLT 028F                  __end_of___lwdiv 0915                            _T2TMR 028C  
                          _T2RST 0291                  ___awdiv@counter 0075                            _OSCEN 0891  
                          _TRISA 0011                            _TRISB 0012                            _TRISC 0013  
                _PWM6_Initialize 1753           __end_of_LCD_Set_Cursor 0A00                    ___awtoft@sign 007D  
                          _frexp 0986                            _errno 006C                    ___ftpack@sign 0074  
                          main@x 00CF                            ltemp0 007E                            ltemp1 0082  
                          ltemp2 0086                            ltemp3 0080                            ttemp0 007E  
                          ttemp1 0081                            ttemp2 0084                            ttemp3 0087  
                          ttemp4 007F                            status 0003                            wtemp0 007E  
                          wtemp1 0080                            wtemp2 0082                            wtemp3 0084  
                          wtemp4 0086                            wtemp5 0088                            wtemp6 007F  
               InitCustomChars@i 0076                   ?_LCD_Write_Int 0020                   _LCD_Write_Char 08B5  
                __initialization 07BD                      log@exponent 005B                     __end_of_main 07BD  
              readAnalog@channel 0026          __end_of_TMR2_Initialize 1784                        ??_ADCRead 0073  
                         ??_main 0069                    ___fttol@sign1 0078                __end_of_LCD_Clear 000C  
                      ??_LCD_Cmd 0071                  ?_LCD_Set_Cursor 0074                           _ADCON0 0093  
                         _ADCON1 0094                           _ADCON2 0095                           _ADCON3 0096  
                         ?_frexp 0070                           _ADLTHH 010F                           _ADLTHL 010E  
                         _ADRESH 008D                           _ADRESL 008C                           _ADSTAT 0097  
                         _ADUTHH 0111                 ___awdiv@dividend 0072                           _ADUTHL 0110  
               __end_of___awtoft 088F                           _ANSELA 0F38                           _ANSELB 0F43  
                         _ANSELC 0F4E                 __end_of___ftpack 0B9C                           _RC2PPS 0F22  
                 __CFG_WDTCCS$SC 0000                           _FVRCON 090C                           _OSCFRQ 0893  
                  main@dutyCycle 00D7           __end_of_LCD_Write_Char 08E1                   __CFG_PWRTE$OFF 0000  
                   _CCPTMRS1bits 021F                           ___ftge 094B           LCD_Write_Int@numPlaces 0023  
                      ??___aldiv 0078                           ___wmul 0836                        ??___awdiv 0074  
                      ??___ftadd 0046                   __CFG_STVREN$ON 0000                        ??___awmod 0074  
                      ??___ftdiv 0036                        ??___ftmul 0026                        ??___ftsub 007E  
                      ??___fttol 0074                        ??___lwdiv 0074          __end_of_PWM6_Initialize 175E  
               ___awdiv@quotient 0077                  ___awmod@divisor 0070                  ___awmod@counter 0075  
                         _totals 00A0            ___ftmul@f3_as_product 002B                 __end_of_tempCalc 00EB  
                _ADCC_Initialize 081C                 LCD_Write_Int@str 002A                  _InitCustomChars 088F  
                LCD_Set_Cursor@w 0079                  LCD_Set_Cursor@x 0077                  LCD_Set_Cursor@y 0074  
                LCD_Set_Cursor@z 0078         readAnalog@analog_channel 0079                _SYSTEM_Initialize 0A00  
               __end_oflog@coeff 101B          __end_of__initialization 07FD                        ?_LCD_Init 0070  
                      ?_LCD_Port 0070                       ___ftadd@f1 0040                       ___ftadd@f2 0043  
                     ___ftge@ff1 0070                       ___ftge@ff2 0073                  ??_LCD_Write_Int 0025  
             ?_SYSTEM_Initialize 0070                     eval_poly@res 0054                       ___ftdiv@f1 0033  
                     ___ftdiv@f2 0030                       ___ftdiv@f3 003B                  ?_LCD_Write_Char 0070  
                  LCD_Init@style 0077                       ___awtoft@c 0078                       ___ftmul@f1 0020  
                     ___ftmul@f2 0023                       ___ftsub@f1 0050                       ___ftsub@f2 004D  
                     ___fttol@f1 0070                   __pcstackCOMMON 0070                        LCD_Port@a 0070  
                   __pidataBANK1 17A6                     __pidataBANK2 17E8              ??_SYSTEM_Initialize 0078  
                  __end_of_frexp 09C1                 ?_TMR2_Initialize 0070                          ??_frexp 0074  
      __end_of_SYSTEM_Initialize 0A42                       __pbssBANK0 006C                       __pbssBANK1 00A0  
                     __pbssBANK2 0138               __size_of_eval_poly 0060                       ??_LCD_Init 0074  
                     ??_LCD_Port 0070                       __pmaintext 0311                          ?___ftge 0070  
                        ?___wmul 0070                  __CFG_PPS1WAY$ON 0000          __end_of_ADCC_Initialize 0836  
     __end_of_PWM6_LoadDutyValue 17D0                          _ADCRead 1784        __size_of_LCD_Write_String 001A  
               ?_PWM6_Initialize 0070                        ?___awtoft 0078                        ?___ftpack 0070  
                        _ADSTPTH 0113                          _ADSTPTL 0112         __CFG_SCANE$not_available 0000  
            __CFG_RSTOSC$HFINT32 0000                 main@displayTemp2 00CC          __end_of_InitCustomChars 08B5  
                        _LCD_Cmd 1792                          _OSCCON1 088D                          _OSCCON3 088F  
                        _OSCTUNE 0892                          _PWM6DCH 038D                          _PWM6DCL 038C  
                        _PWM6CON 038E                          _PPSLOCK 0E8F                        ?_tempCalc 005D  
                     _readAnalog 01E1                          ___aldiv 0B9C                          ___cgram 0120  
                __size_of___ftge 003B                          ___awdiv 0A87                          ___ftadd 00EB  
                        ___awmod 0A42                          ___ftdiv 0D2B                  __size_of___wmul 001B  
                        ___ftmul 0E81                          ___ftsub 0851                          ___fttol 0C1E  
                        ___lwdiv 08E1                       ??___awtoft 007B                       ??___ftpack 0075  
              __end_of_eval_poly 0B38                 ??_LCD_Set_Cursor 0075                          __ptext1 000C  
                        __ptext2 0DD4                          __ptext3 0986                          __ptext4 0AD8  
                        __ptext5 0E81                          __ptext6 094B                          __ptext7 086F  
                        __ptext8 0851                          __ptext9 00EB            _OSCILLATOR_Initialize 174A  
                      _T2CONbits 028E                     __size_of_log 00AD                 ___awmod@dividend 0072  
                 ADCRead@channel 0073                 ___aldiv@dividend 0074         ??_PIN_MANAGER_Initialize 0070  
                        _samples 2300                        _LCD_Clear 0004       __size_of_SYSTEM_Initialize 0042  
                        clrloop0 175F             end_of_initialization 07FD                          init_ram 176A  
                        initloop 176B                       ??_tempCalc 007E                 ___aldiv@quotient 0022  
              LCD_Write_Int@sign 0024                       main@F13661 00E5                       main@F13657 0138  
                   __pstringtext 1000                 ?_ADCC_Initialize 0070            __CFG_WDTCPS$WDTCPS_31 0000  
               ?_InitCustomChars 0070                       ?_LCD_Clear 0070                 __CFG_FEXTOSC$OFF 0000  
              LCD_Write_String@a 0075                LCD_Write_String@i 0078                 ??_LCD_Write_Char 0071  
                    ___ftdiv@exp 003E                __size_of_LCD_Init 0087                __size_of_LCD_Port 0018  
                    ___ftmul@exp 002A                      ?_readAnalog 0026                   __end_of___ftge 0986  
                 __end_of___wmul 0851                 _LCD_Write_String 0802           ?_OSCILLATOR_Initialize 0070  
            start_initialization 07BD                       eval_poly@d 0050                       eval_poly@n 0052  
                     eval_poly@x 004D  __size_of_PIN_MANAGER_Initialize 0036                      __end_of_log 0E81  
                     frexp@value 0070         LCD_Write_Int@fieldLength 0022            __end_of_LCD_Write_Int 1000  
               __CFG_LPBOREN$OFF 0000                         ??___ftge 0076                tempCalc@steinhart 0066  
                       ??___wmul 0074                      __pdataBANK1 00D9                      __pdataBANK2 0120  
                LCD_Write_Char@a 0074                  LCD_Write_Char@y 0073                         ?_ADCRead 0070  
                       ?_LCD_Cmd 0070                __size_of___awtoft 0020                __size_of___ftpack 0064  
                    __pbssBIGRAM 2300                         LCD_Cmd@a 0073                        ___latbits 0002  
                  __pcstackBANK0 0020                    __pcstackBANK1 00BD               _PWM6_LoadDutyValue 17BA  
       __size_of_TMR2_Initialize 000E                      ??_LCD_Clear 0074              __size_of_readAnalog 0130  
            ?_PWM6_LoadDutyValue 0070                 ___lwdiv@dividend 0072           _PIN_MANAGER_Initialize 0915  
                       ?___aldiv 0070                __size_of_tempCalc 00DF                         ?___awdiv 0070  
                       ?___ftadd 0040                         ?___awmod 0070                         ?___ftdiv 0030  
                       ?___ftmul 0020                         ?___ftsub 004D                         ?___fttol 0070  
                       ?___lwdiv 0070                  main@displayTemp 00C9             ??_PWM6_LoadDutyValue 0072  
                      _eval_poly 0AD8         __size_of_PWM6_Initialize 000B                 ___lwdiv@quotient 0075  
                 __size_of_frexp 003B                         _T2CLKCON 0290                  ___aldiv@divisor 0070  
                ___aldiv@counter 0020                         _LCD_Init 0CA4                   ___wmul@product 0074  
                       _LCD_Port 17D0                        clear_ram0 175E                         _PIE0bits 0716  
                       _PIR4bits 0710                 __size_of_ADCRead 000E                       _ADCON0bits 0093  
              ___wmul@multiplier 0070                       ?_eval_poly 004D                 __size_of_LCD_Cmd 0014  
       __end_of_LCD_Write_String 081C                ??_TMR2_Initialize 0070                  readAnalog@value 007B  
                      frexp@eptr 0073                     ??_readAnalog 0028                     _tempCalc$960 0063  
        ??_OSCILLATOR_Initialize 0070                   LCD_Write_Int@i 0031                   LCD_Write_Int@j 002F  
               __size_of___aldiv 0082                 __size_of___awdiv 0051                 __size_of___ftadd 00F6  
               __size_of___awmod 0045                 __size_of___ftdiv 00A9                 __size_of___ftmul 00B4  
               __size_of___ftsub 001E                 __size_of___fttol 0086                 __size_of___lwdiv 0034  
                       ___awtoft 086F                         ___ftpack 0B38         __size_of_ADCC_Initialize 001A  
                       _channels 00D9                  ___lwdiv@divisor 0070                  ___lwdiv@counter 0077  
                       __ptext10 0D2B                         __ptext11 0B38                         __ptext20 1753  
                       __ptext12 01E1                         __ptext21 0915                         __ptext13 0836  
                       __ptext30 0A42                         __ptext22 174A                         __ptext14 0B9C  
                       __ptext31 0A87                         __ptext23 0CA4                         __ptext15 1784  
                       __ptext32 08B5                         __ptext24 0004                         __ptext16 08E1  
                       __ptext33 09C1                         __ptext25 088F                         __ptext17 0C1E  
                       __ptext34 1792                         __ptext26 081C                         __ptext18 0A00  
                       __ptext35 17D0                         __ptext27 17BA                         __ptext19 1776  
                       __ptext28 0802                         __ptext29 0F35               __end_of_readAnalog 0311  
        __size_of_LCD_Set_Cursor 003F                        tempCalc@R 0060         __size_of_InitCustomChars 0026  
            LCD_Write_Int@F13687 00B8                ??_PWM6_Initialize 0070                    __size_of_main 04AC  
           __CFG_WDTCWS$WDTCWS_7 0000                         _tempCalc 000C      PIN_MANAGER_Initialize@state 0070  
                       log@coeff 1000                      ??_eval_poly 007E                      _sampleIndex 006E  
             LCD_Write_Char@temp 0072          ?_PIN_MANAGER_Initialize 0070                __CFG_CLKOUTEN$OFF 0000  
                    _PPSLOCKbits 0E8F          __size_of_LCD_Write_Char 002C               LCD_Set_Cursor@temp 007A  
             LCD_Write_Int@value 0020                     ___aldiv@sign 0021      PWM6_LoadDutyValue@dutyCycle 0070  
         __size_of_LCD_Write_Int 00CB   __end_of_PIN_MANAGER_Initialize 094B                ??_ADCC_Initialize 0070  
              ??_InitCustomChars 0075  
