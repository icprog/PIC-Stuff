

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Wed Feb 28 17:46:34 2018

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	stringtext,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	psect	text32,local,class=CODE,merge=1,delta=2
    51                           	psect	text33,local,class=CODE,merge=1,delta=2
    52                           	psect	text34,local,class=CODE,merge=1,delta=2
    53                           	psect	text35,local,class=CODE,merge=1,delta=2
    54                           	dabs	1,0x620,48
    55                           	dabs	1,0x5A0,80
    56                           	dabs	1,0x520,80
    57                           	dabs	1,0x4D0,32
    58                           	dabs	1,0x2300,0,_samples
    59                           	dabs	1,0x7E,2
    60  0000                     	;# 
    61  0001                     	;# 
    62  0002                     	;# 
    63  0003                     	;# 
    64  0004                     	;# 
    65  0005                     	;# 
    66  0006                     	;# 
    67  0007                     	;# 
    68  0008                     	;# 
    69  0009                     	;# 
    70  000A                     	;# 
    71  000B                     	;# 
    72  000C                     	;# 
    73  000D                     	;# 
    74  000E                     	;# 
    75  0010                     	;# 
    76  0011                     	;# 
    77  0012                     	;# 
    78  0013                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  001C                     	;# 
    83  001C                     	;# 
    84  001D                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  008C                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  008E                     	;# 
    93  008F                     	;# 
    94  0090                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0093                     	;# 
    98  0094                     	;# 
    99  0095                     	;# 
   100  0096                     	;# 
   101  0097                     	;# 
   102  0098                     	;# 
   103  0099                     	;# 
   104  009A                     	;# 
   105  009B                     	;# 
   106  009C                     	;# 
   107  009D                     	;# 
   108  009E                     	;# 
   109  010C                     	;# 
   110  010D                     	;# 
   111  010E                     	;# 
   112  010E                     	;# 
   113  010F                     	;# 
   114  0110                     	;# 
   115  0110                     	;# 
   116  0111                     	;# 
   117  0112                     	;# 
   118  0112                     	;# 
   119  0113                     	;# 
   120  0114                     	;# 
   121  0114                     	;# 
   122  0115                     	;# 
   123  0116                     	;# 
   124  0116                     	;# 
   125  0117                     	;# 
   126  0119                     	;# 
   127  0119                     	;# 
   128  0119                     	;# 
   129  011A                     	;# 
   130  011A                     	;# 
   131  011A                     	;# 
   132  011B                     	;# 
   133  011B                     	;# 
   134  011B                     	;# 
   135  011B                     	;# 
   136  011B                     	;# 
   137  011C                     	;# 
   138  011C                     	;# 
   139  011C                     	;# 
   140  011D                     	;# 
   141  011D                     	;# 
   142  011D                     	;# 
   143  011E                     	;# 
   144  011E                     	;# 
   145  011E                     	;# 
   146  011F                     	;# 
   147  011F                     	;# 
   148  011F                     	;# 
   149  011F                     	;# 
   150  011F                     	;# 
   151  018C                     	;# 
   152  018D                     	;# 
   153  018E                     	;# 
   154  018F                     	;# 
   155  0190                     	;# 
   156  0191                     	;# 
   157  0192                     	;# 
   158  0196                     	;# 
   159  0197                     	;# 
   160  0198                     	;# 
   161  0199                     	;# 
   162  019A                     	;# 
   163  019B                     	;# 
   164  019C                     	;# 
   165  020C                     	;# 
   166  020D                     	;# 
   167  020E                     	;# 
   168  020F                     	;# 
   169  020F                     	;# 
   170  0210                     	;# 
   171  0210                     	;# 
   172  0211                     	;# 
   173  0211                     	;# 
   174  0212                     	;# 
   175  0213                     	;# 
   176  0214                     	;# 
   177  0215                     	;# 
   178  0215                     	;# 
   179  0216                     	;# 
   180  0216                     	;# 
   181  0217                     	;# 
   182  0217                     	;# 
   183  0218                     	;# 
   184  0219                     	;# 
   185  021A                     	;# 
   186  021B                     	;# 
   187  021B                     	;# 
   188  021C                     	;# 
   189  021C                     	;# 
   190  021D                     	;# 
   191  021D                     	;# 
   192  021E                     	;# 
   193  021F                     	;# 
   194  028C                     	;# 
   195  028C                     	;# 
   196  028D                     	;# 
   197  028D                     	;# 
   198  028E                     	;# 
   199  028F                     	;# 
   200  0290                     	;# 
   201  0290                     	;# 
   202  0291                     	;# 
   203  0292                     	;# 
   204  0292                     	;# 
   205  0293                     	;# 
   206  0293                     	;# 
   207  0294                     	;# 
   208  0295                     	;# 
   209  0296                     	;# 
   210  0296                     	;# 
   211  0297                     	;# 
   212  0298                     	;# 
   213  0298                     	;# 
   214  0299                     	;# 
   215  0299                     	;# 
   216  029A                     	;# 
   217  029B                     	;# 
   218  029C                     	;# 
   219  029C                     	;# 
   220  029D                     	;# 
   221  030C                     	;# 
   222  030C                     	;# 
   223  030D                     	;# 
   224  030E                     	;# 
   225  030F                     	;# 
   226  0310                     	;# 
   227  0310                     	;# 
   228  0311                     	;# 
   229  0312                     	;# 
   230  0313                     	;# 
   231  0314                     	;# 
   232  0314                     	;# 
   233  0315                     	;# 
   234  0316                     	;# 
   235  0317                     	;# 
   236  0318                     	;# 
   237  0318                     	;# 
   238  0319                     	;# 
   239  031A                     	;# 
   240  031B                     	;# 
   241  031C                     	;# 
   242  031C                     	;# 
   243  031D                     	;# 
   244  031E                     	;# 
   245  031F                     	;# 
   246  038C                     	;# 
   247  038D                     	;# 
   248  038E                     	;# 
   249  0390                     	;# 
   250  0391                     	;# 
   251  0392                     	;# 
   252  040C                     	;# 
   253  040D                     	;# 
   254  040E                     	;# 
   255  040F                     	;# 
   256  0410                     	;# 
   257  0411                     	;# 
   258  0416                     	;# 
   259  0416                     	;# 
   260  0417                     	;# 
   261  0418                     	;# 
   262  0418                     	;# 
   263  0419                     	;# 
   264  041A                     	;# 
   265  041A                     	;# 
   266  041B                     	;# 
   267  041C                     	;# 
   268  041C                     	;# 
   269  041D                     	;# 
   270  041E                     	;# 
   271  041F                     	;# 
   272  048C                     	;# 
   273  048C                     	;# 
   274  048D                     	;# 
   275  048E                     	;# 
   276  048F                     	;# 
   277  048F                     	;# 
   278  0490                     	;# 
   279  0491                     	;# 
   280  0492                     	;# 
   281  0492                     	;# 
   282  0493                     	;# 
   283  0494                     	;# 
   284  0495                     	;# 
   285  0495                     	;# 
   286  0496                     	;# 
   287  0497                     	;# 
   288  0498                     	;# 
   289  0499                     	;# 
   290  049A                     	;# 
   291  049B                     	;# 
   292  049C                     	;# 
   293  049D                     	;# 
   294  050C                     	;# 
   295  050C                     	;# 
   296  050D                     	;# 
   297  050E                     	;# 
   298  050F                     	;# 
   299  050F                     	;# 
   300  0510                     	;# 
   301  0511                     	;# 
   302  0512                     	;# 
   303  0512                     	;# 
   304  0513                     	;# 
   305  0514                     	;# 
   306  0515                     	;# 
   307  0515                     	;# 
   308  0516                     	;# 
   309  0517                     	;# 
   310  0518                     	;# 
   311  0519                     	;# 
   312  051A                     	;# 
   313  051B                     	;# 
   314  051C                     	;# 
   315  051D                     	;# 
   316  058C                     	;# 
   317  058C                     	;# 
   318  058D                     	;# 
   319  058E                     	;# 
   320  058F                     	;# 
   321  058F                     	;# 
   322  0590                     	;# 
   323  0591                     	;# 
   324  0592                     	;# 
   325  0593                     	;# 
   326  060C                     	;# 
   327  060D                     	;# 
   328  060E                     	;# 
   329  060F                     	;# 
   330  0610                     	;# 
   331  0611                     	;# 
   332  0612                     	;# 
   333  0613                     	;# 
   334  0614                     	;# 
   335  0616                     	;# 
   336  0617                     	;# 
   337  0618                     	;# 
   338  0619                     	;# 
   339  061A                     	;# 
   340  061B                     	;# 
   341  061C                     	;# 
   342  061D                     	;# 
   343  061E                     	;# 
   344  068C                     	;# 
   345  068D                     	;# 
   346  068E                     	;# 
   347  068F                     	;# 
   348  0690                     	;# 
   349  0691                     	;# 
   350  0692                     	;# 
   351  0693                     	;# 
   352  0694                     	;# 
   353  070C                     	;# 
   354  070D                     	;# 
   355  070E                     	;# 
   356  070F                     	;# 
   357  0710                     	;# 
   358  0711                     	;# 
   359  0712                     	;# 
   360  0713                     	;# 
   361  0714                     	;# 
   362  0716                     	;# 
   363  0717                     	;# 
   364  0718                     	;# 
   365  0719                     	;# 
   366  071A                     	;# 
   367  071B                     	;# 
   368  071C                     	;# 
   369  071D                     	;# 
   370  071E                     	;# 
   371  0796                     	;# 
   372  0797                     	;# 
   373  0798                     	;# 
   374  0799                     	;# 
   375  079A                     	;# 
   376  079B                     	;# 
   377  080C                     	;# 
   378  080D                     	;# 
   379  080E                     	;# 
   380  080F                     	;# 
   381  0810                     	;# 
   382  0811                     	;# 
   383  0812                     	;# 
   384  0813                     	;# 
   385  0814                     	;# 
   386  081A                     	;# 
   387  081B                     	;# 
   388  081C                     	;# 
   389  081D                     	;# 
   390  081E                     	;# 
   391  081F                     	;# 
   392  088C                     	;# 
   393  088D                     	;# 
   394  088E                     	;# 
   395  088F                     	;# 
   396  0890                     	;# 
   397  0891                     	;# 
   398  0892                     	;# 
   399  0893                     	;# 
   400  0895                     	;# 
   401  0896                     	;# 
   402  0897                     	;# 
   403  0898                     	;# 
   404  0899                     	;# 
   405  089A                     	;# 
   406  089B                     	;# 
   407  090C                     	;# 
   408  090E                     	;# 
   409  090F                     	;# 
   410  091F                     	;# 
   411  091F                     	;# 
   412  098F                     	;# 
   413  098F                     	;# 
   414  0990                     	;# 
   415  0991                     	;# 
   416  0992                     	;# 
   417  0993                     	;# 
   418  0994                     	;# 
   419  0995                     	;# 
   420  0996                     	;# 
   421  0997                     	;# 
   422  0E0F                     	;# 
   423  0E10                     	;# 
   424  0E11                     	;# 
   425  0E12                     	;# 
   426  0E13                     	;# 
   427  0E14                     	;# 
   428  0E15                     	;# 
   429  0E16                     	;# 
   430  0E17                     	;# 
   431  0E18                     	;# 
   432  0E19                     	;# 
   433  0E1A                     	;# 
   434  0E1B                     	;# 
   435  0E1C                     	;# 
   436  0E1D                     	;# 
   437  0E1E                     	;# 
   438  0E1F                     	;# 
   439  0E20                     	;# 
   440  0E21                     	;# 
   441  0E22                     	;# 
   442  0E23                     	;# 
   443  0E24                     	;# 
   444  0E25                     	;# 
   445  0E26                     	;# 
   446  0E27                     	;# 
   447  0E28                     	;# 
   448  0E29                     	;# 
   449  0E2A                     	;# 
   450  0E2B                     	;# 
   451  0E2C                     	;# 
   452  0E2D                     	;# 
   453  0E2E                     	;# 
   454  0E2F                     	;# 
   455  0E30                     	;# 
   456  0E31                     	;# 
   457  0E32                     	;# 
   458  0E33                     	;# 
   459  0E34                     	;# 
   460  0E35                     	;# 
   461  0E36                     	;# 
   462  0E37                     	;# 
   463  0E8F                     	;# 
   464  0E90                     	;# 
   465  0E91                     	;# 
   466  0E92                     	;# 
   467  0E93                     	;# 
   468  0E94                     	;# 
   469  0E95                     	;# 
   470  0E96                     	;# 
   471  0E97                     	;# 
   472  0E9C                     	;# 
   473  0E9D                     	;# 
   474  0E9E                     	;# 
   475  0EA1                     	;# 
   476  0EA2                     	;# 
   477  0EA3                     	;# 
   478  0EA4                     	;# 
   479  0EA5                     	;# 
   480  0EA9                     	;# 
   481  0EAA                     	;# 
   482  0EAB                     	;# 
   483  0EAC                     	;# 
   484  0EB1                     	;# 
   485  0EB2                     	;# 
   486  0EB3                     	;# 
   487  0EB8                     	;# 
   488  0EB9                     	;# 
   489  0EBA                     	;# 
   490  0EBB                     	;# 
   491  0EBC                     	;# 
   492  0EBD                     	;# 
   493  0EBE                     	;# 
   494  0EC3                     	;# 
   495  0EC5                     	;# 
   496  0EC6                     	;# 
   497  0EC7                     	;# 
   498  0EC8                     	;# 
   499  0EC9                     	;# 
   500  0ECA                     	;# 
   501  0ECB                     	;# 
   502  0ECC                     	;# 
   503  0F10                     	;# 
   504  0F11                     	;# 
   505  0F12                     	;# 
   506  0F13                     	;# 
   507  0F14                     	;# 
   508  0F15                     	;# 
   509  0F16                     	;# 
   510  0F17                     	;# 
   511  0F18                     	;# 
   512  0F19                     	;# 
   513  0F1A                     	;# 
   514  0F1B                     	;# 
   515  0F1C                     	;# 
   516  0F1D                     	;# 
   517  0F1E                     	;# 
   518  0F1F                     	;# 
   519  0F20                     	;# 
   520  0F21                     	;# 
   521  0F22                     	;# 
   522  0F23                     	;# 
   523  0F24                     	;# 
   524  0F25                     	;# 
   525  0F26                     	;# 
   526  0F27                     	;# 
   527  0F38                     	;# 
   528  0F39                     	;# 
   529  0F3A                     	;# 
   530  0F3B                     	;# 
   531  0F3C                     	;# 
   532  0F3D                     	;# 
   533  0F3E                     	;# 
   534  0F3F                     	;# 
   535  0F40                     	;# 
   536  0F41                     	;# 
   537  0F43                     	;# 
   538  0F44                     	;# 
   539  0F45                     	;# 
   540  0F46                     	;# 
   541  0F47                     	;# 
   542  0F48                     	;# 
   543  0F49                     	;# 
   544  0F4A                     	;# 
   545  0F4B                     	;# 
   546  0F4C                     	;# 
   547  0F4E                     	;# 
   548  0F4F                     	;# 
   549  0F50                     	;# 
   550  0F51                     	;# 
   551  0F52                     	;# 
   552  0F53                     	;# 
   553  0F54                     	;# 
   554  0F55                     	;# 
   555  0F56                     	;# 
   556  0F57                     	;# 
   557  0F65                     	;# 
   558  0F68                     	;# 
   559  0F69                     	;# 
   560  0F6A                     	;# 
   561  0F6B                     	;# 
   562  0FE4                     	;# 
   563  0FE5                     	;# 
   564  0FE6                     	;# 
   565  0FE7                     	;# 
   566  0FE8                     	;# 
   567  0FE9                     	;# 
   568  0FEA                     	;# 
   569  0FEB                     	;# 
   570  0FED                     	;# 
   571  0FEE                     	;# 
   572  0FEF                     	;# 
   573  0000                     	;# 
   574  0001                     	;# 
   575  0002                     	;# 
   576  0003                     	;# 
   577  0004                     	;# 
   578  0005                     	;# 
   579  0006                     	;# 
   580  0007                     	;# 
   581  0008                     	;# 
   582  0009                     	;# 
   583  000A                     	;# 
   584  000B                     	;# 
   585  000C                     	;# 
   586  000D                     	;# 
   587  000E                     	;# 
   588  0010                     	;# 
   589  0011                     	;# 
   590  0012                     	;# 
   591  0013                     	;# 
   592  0016                     	;# 
   593  0017                     	;# 
   594  0018                     	;# 
   595  001C                     	;# 
   596  001C                     	;# 
   597  001D                     	;# 
   598  001D                     	;# 
   599  001E                     	;# 
   600  001F                     	;# 
   601  008C                     	;# 
   602  008C                     	;# 
   603  008D                     	;# 
   604  008E                     	;# 
   605  008E                     	;# 
   606  008F                     	;# 
   607  0090                     	;# 
   608  0090                     	;# 
   609  0091                     	;# 
   610  0093                     	;# 
   611  0094                     	;# 
   612  0095                     	;# 
   613  0096                     	;# 
   614  0097                     	;# 
   615  0098                     	;# 
   616  0099                     	;# 
   617  009A                     	;# 
   618  009B                     	;# 
   619  009C                     	;# 
   620  009D                     	;# 
   621  009E                     	;# 
   622  010C                     	;# 
   623  010D                     	;# 
   624  010E                     	;# 
   625  010E                     	;# 
   626  010F                     	;# 
   627  0110                     	;# 
   628  0110                     	;# 
   629  0111                     	;# 
   630  0112                     	;# 
   631  0112                     	;# 
   632  0113                     	;# 
   633  0114                     	;# 
   634  0114                     	;# 
   635  0115                     	;# 
   636  0116                     	;# 
   637  0116                     	;# 
   638  0117                     	;# 
   639  0119                     	;# 
   640  0119                     	;# 
   641  0119                     	;# 
   642  011A                     	;# 
   643  011A                     	;# 
   644  011A                     	;# 
   645  011B                     	;# 
   646  011B                     	;# 
   647  011B                     	;# 
   648  011B                     	;# 
   649  011B                     	;# 
   650  011C                     	;# 
   651  011C                     	;# 
   652  011C                     	;# 
   653  011D                     	;# 
   654  011D                     	;# 
   655  011D                     	;# 
   656  011E                     	;# 
   657  011E                     	;# 
   658  011E                     	;# 
   659  011F                     	;# 
   660  011F                     	;# 
   661  011F                     	;# 
   662  011F                     	;# 
   663  011F                     	;# 
   664  018C                     	;# 
   665  018D                     	;# 
   666  018E                     	;# 
   667  018F                     	;# 
   668  0190                     	;# 
   669  0191                     	;# 
   670  0192                     	;# 
   671  0196                     	;# 
   672  0197                     	;# 
   673  0198                     	;# 
   674  0199                     	;# 
   675  019A                     	;# 
   676  019B                     	;# 
   677  019C                     	;# 
   678  020C                     	;# 
   679  020D                     	;# 
   680  020E                     	;# 
   681  020F                     	;# 
   682  020F                     	;# 
   683  0210                     	;# 
   684  0210                     	;# 
   685  0211                     	;# 
   686  0211                     	;# 
   687  0212                     	;# 
   688  0213                     	;# 
   689  0214                     	;# 
   690  0215                     	;# 
   691  0215                     	;# 
   692  0216                     	;# 
   693  0216                     	;# 
   694  0217                     	;# 
   695  0217                     	;# 
   696  0218                     	;# 
   697  0219                     	;# 
   698  021A                     	;# 
   699  021B                     	;# 
   700  021B                     	;# 
   701  021C                     	;# 
   702  021C                     	;# 
   703  021D                     	;# 
   704  021D                     	;# 
   705  021E                     	;# 
   706  021F                     	;# 
   707  028C                     	;# 
   708  028C                     	;# 
   709  028D                     	;# 
   710  028D                     	;# 
   711  028E                     	;# 
   712  028F                     	;# 
   713  0290                     	;# 
   714  0290                     	;# 
   715  0291                     	;# 
   716  0292                     	;# 
   717  0292                     	;# 
   718  0293                     	;# 
   719  0293                     	;# 
   720  0294                     	;# 
   721  0295                     	;# 
   722  0296                     	;# 
   723  0296                     	;# 
   724  0297                     	;# 
   725  0298                     	;# 
   726  0298                     	;# 
   727  0299                     	;# 
   728  0299                     	;# 
   729  029A                     	;# 
   730  029B                     	;# 
   731  029C                     	;# 
   732  029C                     	;# 
   733  029D                     	;# 
   734  030C                     	;# 
   735  030C                     	;# 
   736  030D                     	;# 
   737  030E                     	;# 
   738  030F                     	;# 
   739  0310                     	;# 
   740  0310                     	;# 
   741  0311                     	;# 
   742  0312                     	;# 
   743  0313                     	;# 
   744  0314                     	;# 
   745  0314                     	;# 
   746  0315                     	;# 
   747  0316                     	;# 
   748  0317                     	;# 
   749  0318                     	;# 
   750  0318                     	;# 
   751  0319                     	;# 
   752  031A                     	;# 
   753  031B                     	;# 
   754  031C                     	;# 
   755  031C                     	;# 
   756  031D                     	;# 
   757  031E                     	;# 
   758  031F                     	;# 
   759  038C                     	;# 
   760  038D                     	;# 
   761  038E                     	;# 
   762  0390                     	;# 
   763  0391                     	;# 
   764  0392                     	;# 
   765  040C                     	;# 
   766  040D                     	;# 
   767  040E                     	;# 
   768  040F                     	;# 
   769  0410                     	;# 
   770  0411                     	;# 
   771  0416                     	;# 
   772  0416                     	;# 
   773  0417                     	;# 
   774  0418                     	;# 
   775  0418                     	;# 
   776  0419                     	;# 
   777  041A                     	;# 
   778  041A                     	;# 
   779  041B                     	;# 
   780  041C                     	;# 
   781  041C                     	;# 
   782  041D                     	;# 
   783  041E                     	;# 
   784  041F                     	;# 
   785  048C                     	;# 
   786  048C                     	;# 
   787  048D                     	;# 
   788  048E                     	;# 
   789  048F                     	;# 
   790  048F                     	;# 
   791  0490                     	;# 
   792  0491                     	;# 
   793  0492                     	;# 
   794  0492                     	;# 
   795  0493                     	;# 
   796  0494                     	;# 
   797  0495                     	;# 
   798  0495                     	;# 
   799  0496                     	;# 
   800  0497                     	;# 
   801  0498                     	;# 
   802  0499                     	;# 
   803  049A                     	;# 
   804  049B                     	;# 
   805  049C                     	;# 
   806  049D                     	;# 
   807  050C                     	;# 
   808  050C                     	;# 
   809  050D                     	;# 
   810  050E                     	;# 
   811  050F                     	;# 
   812  050F                     	;# 
   813  0510                     	;# 
   814  0511                     	;# 
   815  0512                     	;# 
   816  0512                     	;# 
   817  0513                     	;# 
   818  0514                     	;# 
   819  0515                     	;# 
   820  0515                     	;# 
   821  0516                     	;# 
   822  0517                     	;# 
   823  0518                     	;# 
   824  0519                     	;# 
   825  051A                     	;# 
   826  051B                     	;# 
   827  051C                     	;# 
   828  051D                     	;# 
   829  058C                     	;# 
   830  058C                     	;# 
   831  058D                     	;# 
   832  058E                     	;# 
   833  058F                     	;# 
   834  058F                     	;# 
   835  0590                     	;# 
   836  0591                     	;# 
   837  0592                     	;# 
   838  0593                     	;# 
   839  060C                     	;# 
   840  060D                     	;# 
   841  060E                     	;# 
   842  060F                     	;# 
   843  0610                     	;# 
   844  0611                     	;# 
   845  0612                     	;# 
   846  0613                     	;# 
   847  0614                     	;# 
   848  0616                     	;# 
   849  0617                     	;# 
   850  0618                     	;# 
   851  0619                     	;# 
   852  061A                     	;# 
   853  061B                     	;# 
   854  061C                     	;# 
   855  061D                     	;# 
   856  061E                     	;# 
   857  068C                     	;# 
   858  068D                     	;# 
   859  068E                     	;# 
   860  068F                     	;# 
   861  0690                     	;# 
   862  0691                     	;# 
   863  0692                     	;# 
   864  0693                     	;# 
   865  0694                     	;# 
   866  070C                     	;# 
   867  070D                     	;# 
   868  070E                     	;# 
   869  070F                     	;# 
   870  0710                     	;# 
   871  0711                     	;# 
   872  0712                     	;# 
   873  0713                     	;# 
   874  0714                     	;# 
   875  0716                     	;# 
   876  0717                     	;# 
   877  0718                     	;# 
   878  0719                     	;# 
   879  071A                     	;# 
   880  071B                     	;# 
   881  071C                     	;# 
   882  071D                     	;# 
   883  071E                     	;# 
   884  0796                     	;# 
   885  0797                     	;# 
   886  0798                     	;# 
   887  0799                     	;# 
   888  079A                     	;# 
   889  079B                     	;# 
   890  080C                     	;# 
   891  080D                     	;# 
   892  080E                     	;# 
   893  080F                     	;# 
   894  0810                     	;# 
   895  0811                     	;# 
   896  0812                     	;# 
   897  0813                     	;# 
   898  0814                     	;# 
   899  081A                     	;# 
   900  081B                     	;# 
   901  081C                     	;# 
   902  081D                     	;# 
   903  081E                     	;# 
   904  081F                     	;# 
   905  088C                     	;# 
   906  088D                     	;# 
   907  088E                     	;# 
   908  088F                     	;# 
   909  0890                     	;# 
   910  0891                     	;# 
   911  0892                     	;# 
   912  0893                     	;# 
   913  0895                     	;# 
   914  0896                     	;# 
   915  0897                     	;# 
   916  0898                     	;# 
   917  0899                     	;# 
   918  089A                     	;# 
   919  089B                     	;# 
   920  090C                     	;# 
   921  090E                     	;# 
   922  090F                     	;# 
   923  091F                     	;# 
   924  091F                     	;# 
   925  098F                     	;# 
   926  098F                     	;# 
   927  0990                     	;# 
   928  0991                     	;# 
   929  0992                     	;# 
   930  0993                     	;# 
   931  0994                     	;# 
   932  0995                     	;# 
   933  0996                     	;# 
   934  0997                     	;# 
   935  0E0F                     	;# 
   936  0E10                     	;# 
   937  0E11                     	;# 
   938  0E12                     	;# 
   939  0E13                     	;# 
   940  0E14                     	;# 
   941  0E15                     	;# 
   942  0E16                     	;# 
   943  0E17                     	;# 
   944  0E18                     	;# 
   945  0E19                     	;# 
   946  0E1A                     	;# 
   947  0E1B                     	;# 
   948  0E1C                     	;# 
   949  0E1D                     	;# 
   950  0E1E                     	;# 
   951  0E1F                     	;# 
   952  0E20                     	;# 
   953  0E21                     	;# 
   954  0E22                     	;# 
   955  0E23                     	;# 
   956  0E24                     	;# 
   957  0E25                     	;# 
   958  0E26                     	;# 
   959  0E27                     	;# 
   960  0E28                     	;# 
   961  0E29                     	;# 
   962  0E2A                     	;# 
   963  0E2B                     	;# 
   964  0E2C                     	;# 
   965  0E2D                     	;# 
   966  0E2E                     	;# 
   967  0E2F                     	;# 
   968  0E30                     	;# 
   969  0E31                     	;# 
   970  0E32                     	;# 
   971  0E33                     	;# 
   972  0E34                     	;# 
   973  0E35                     	;# 
   974  0E36                     	;# 
   975  0E37                     	;# 
   976  0E8F                     	;# 
   977  0E90                     	;# 
   978  0E91                     	;# 
   979  0E92                     	;# 
   980  0E93                     	;# 
   981  0E94                     	;# 
   982  0E95                     	;# 
   983  0E96                     	;# 
   984  0E97                     	;# 
   985  0E9C                     	;# 
   986  0E9D                     	;# 
   987  0E9E                     	;# 
   988  0EA1                     	;# 
   989  0EA2                     	;# 
   990  0EA3                     	;# 
   991  0EA4                     	;# 
   992  0EA5                     	;# 
   993  0EA9                     	;# 
   994  0EAA                     	;# 
   995  0EAB                     	;# 
   996  0EAC                     	;# 
   997  0EB1                     	;# 
   998  0EB2                     	;# 
   999  0EB3                     	;# 
  1000  0EB8                     	;# 
  1001  0EB9                     	;# 
  1002  0EBA                     	;# 
  1003  0EBB                     	;# 
  1004  0EBC                     	;# 
  1005  0EBD                     	;# 
  1006  0EBE                     	;# 
  1007  0EC3                     	;# 
  1008  0EC5                     	;# 
  1009  0EC6                     	;# 
  1010  0EC7                     	;# 
  1011  0EC8                     	;# 
  1012  0EC9                     	;# 
  1013  0ECA                     	;# 
  1014  0ECB                     	;# 
  1015  0ECC                     	;# 
  1016  0F10                     	;# 
  1017  0F11                     	;# 
  1018  0F12                     	;# 
  1019  0F13                     	;# 
  1020  0F14                     	;# 
  1021  0F15                     	;# 
  1022  0F16                     	;# 
  1023  0F17                     	;# 
  1024  0F18                     	;# 
  1025  0F19                     	;# 
  1026  0F1A                     	;# 
  1027  0F1B                     	;# 
  1028  0F1C                     	;# 
  1029  0F1D                     	;# 
  1030  0F1E                     	;# 
  1031  0F1F                     	;# 
  1032  0F20                     	;# 
  1033  0F21                     	;# 
  1034  0F22                     	;# 
  1035  0F23                     	;# 
  1036  0F24                     	;# 
  1037  0F25                     	;# 
  1038  0F26                     	;# 
  1039  0F27                     	;# 
  1040  0F38                     	;# 
  1041  0F39                     	;# 
  1042  0F3A                     	;# 
  1043  0F3B                     	;# 
  1044  0F3C                     	;# 
  1045  0F3D                     	;# 
  1046  0F3E                     	;# 
  1047  0F3F                     	;# 
  1048  0F40                     	;# 
  1049  0F41                     	;# 
  1050  0F43                     	;# 
  1051  0F44                     	;# 
  1052  0F45                     	;# 
  1053  0F46                     	;# 
  1054  0F47                     	;# 
  1055  0F48                     	;# 
  1056  0F49                     	;# 
  1057  0F4A                     	;# 
  1058  0F4B                     	;# 
  1059  0F4C                     	;# 
  1060  0F4E                     	;# 
  1061  0F4F                     	;# 
  1062  0F50                     	;# 
  1063  0F51                     	;# 
  1064  0F52                     	;# 
  1065  0F53                     	;# 
  1066  0F54                     	;# 
  1067  0F55                     	;# 
  1068  0F56                     	;# 
  1069  0F57                     	;# 
  1070  0F65                     	;# 
  1071  0F68                     	;# 
  1072  0F69                     	;# 
  1073  0F6A                     	;# 
  1074  0F6B                     	;# 
  1075  0FE4                     	;# 
  1076  0FE5                     	;# 
  1077  0FE6                     	;# 
  1078  0FE7                     	;# 
  1079  0FE8                     	;# 
  1080  0FE9                     	;# 
  1081  0FEA                     	;# 
  1082  0FEB                     	;# 
  1083  0FED                     	;# 
  1084  0FEE                     	;# 
  1085  0FEF                     	;# 
  1086  0000                     	;# 
  1087  0001                     	;# 
  1088  0002                     	;# 
  1089  0003                     	;# 
  1090  0004                     	;# 
  1091  0005                     	;# 
  1092  0006                     	;# 
  1093  0007                     	;# 
  1094  0008                     	;# 
  1095  0009                     	;# 
  1096  000A                     	;# 
  1097  000B                     	;# 
  1098  000C                     	;# 
  1099  000D                     	;# 
  1100  000E                     	;# 
  1101  0010                     	;# 
  1102  0011                     	;# 
  1103  0012                     	;# 
  1104  0013                     	;# 
  1105  0016                     	;# 
  1106  0017                     	;# 
  1107  0018                     	;# 
  1108  001C                     	;# 
  1109  001C                     	;# 
  1110  001D                     	;# 
  1111  001D                     	;# 
  1112  001E                     	;# 
  1113  001F                     	;# 
  1114  008C                     	;# 
  1115  008C                     	;# 
  1116  008D                     	;# 
  1117  008E                     	;# 
  1118  008E                     	;# 
  1119  008F                     	;# 
  1120  0090                     	;# 
  1121  0090                     	;# 
  1122  0091                     	;# 
  1123  0093                     	;# 
  1124  0094                     	;# 
  1125  0095                     	;# 
  1126  0096                     	;# 
  1127  0097                     	;# 
  1128  0098                     	;# 
  1129  0099                     	;# 
  1130  009A                     	;# 
  1131  009B                     	;# 
  1132  009C                     	;# 
  1133  009D                     	;# 
  1134  009E                     	;# 
  1135  010C                     	;# 
  1136  010D                     	;# 
  1137  010E                     	;# 
  1138  010E                     	;# 
  1139  010F                     	;# 
  1140  0110                     	;# 
  1141  0110                     	;# 
  1142  0111                     	;# 
  1143  0112                     	;# 
  1144  0112                     	;# 
  1145  0113                     	;# 
  1146  0114                     	;# 
  1147  0114                     	;# 
  1148  0115                     	;# 
  1149  0116                     	;# 
  1150  0116                     	;# 
  1151  0117                     	;# 
  1152  0119                     	;# 
  1153  0119                     	;# 
  1154  0119                     	;# 
  1155  011A                     	;# 
  1156  011A                     	;# 
  1157  011A                     	;# 
  1158  011B                     	;# 
  1159  011B                     	;# 
  1160  011B                     	;# 
  1161  011B                     	;# 
  1162  011B                     	;# 
  1163  011C                     	;# 
  1164  011C                     	;# 
  1165  011C                     	;# 
  1166  011D                     	;# 
  1167  011D                     	;# 
  1168  011D                     	;# 
  1169  011E                     	;# 
  1170  011E                     	;# 
  1171  011E                     	;# 
  1172  011F                     	;# 
  1173  011F                     	;# 
  1174  011F                     	;# 
  1175  011F                     	;# 
  1176  011F                     	;# 
  1177  018C                     	;# 
  1178  018D                     	;# 
  1179  018E                     	;# 
  1180  018F                     	;# 
  1181  0190                     	;# 
  1182  0191                     	;# 
  1183  0192                     	;# 
  1184  0196                     	;# 
  1185  0197                     	;# 
  1186  0198                     	;# 
  1187  0199                     	;# 
  1188  019A                     	;# 
  1189  019B                     	;# 
  1190  019C                     	;# 
  1191  020C                     	;# 
  1192  020D                     	;# 
  1193  020E                     	;# 
  1194  020F                     	;# 
  1195  020F                     	;# 
  1196  0210                     	;# 
  1197  0210                     	;# 
  1198  0211                     	;# 
  1199  0211                     	;# 
  1200  0212                     	;# 
  1201  0213                     	;# 
  1202  0214                     	;# 
  1203  0215                     	;# 
  1204  0215                     	;# 
  1205  0216                     	;# 
  1206  0216                     	;# 
  1207  0217                     	;# 
  1208  0217                     	;# 
  1209  0218                     	;# 
  1210  0219                     	;# 
  1211  021A                     	;# 
  1212  021B                     	;# 
  1213  021B                     	;# 
  1214  021C                     	;# 
  1215  021C                     	;# 
  1216  021D                     	;# 
  1217  021D                     	;# 
  1218  021E                     	;# 
  1219  021F                     	;# 
  1220  028C                     	;# 
  1221  028C                     	;# 
  1222  028D                     	;# 
  1223  028D                     	;# 
  1224  028E                     	;# 
  1225  028F                     	;# 
  1226  0290                     	;# 
  1227  0290                     	;# 
  1228  0291                     	;# 
  1229  0292                     	;# 
  1230  0292                     	;# 
  1231  0293                     	;# 
  1232  0293                     	;# 
  1233  0294                     	;# 
  1234  0295                     	;# 
  1235  0296                     	;# 
  1236  0296                     	;# 
  1237  0297                     	;# 
  1238  0298                     	;# 
  1239  0298                     	;# 
  1240  0299                     	;# 
  1241  0299                     	;# 
  1242  029A                     	;# 
  1243  029B                     	;# 
  1244  029C                     	;# 
  1245  029C                     	;# 
  1246  029D                     	;# 
  1247  030C                     	;# 
  1248  030C                     	;# 
  1249  030D                     	;# 
  1250  030E                     	;# 
  1251  030F                     	;# 
  1252  0310                     	;# 
  1253  0310                     	;# 
  1254  0311                     	;# 
  1255  0312                     	;# 
  1256  0313                     	;# 
  1257  0314                     	;# 
  1258  0314                     	;# 
  1259  0315                     	;# 
  1260  0316                     	;# 
  1261  0317                     	;# 
  1262  0318                     	;# 
  1263  0318                     	;# 
  1264  0319                     	;# 
  1265  031A                     	;# 
  1266  031B                     	;# 
  1267  031C                     	;# 
  1268  031C                     	;# 
  1269  031D                     	;# 
  1270  031E                     	;# 
  1271  031F                     	;# 
  1272  038C                     	;# 
  1273  038D                     	;# 
  1274  038E                     	;# 
  1275  0390                     	;# 
  1276  0391                     	;# 
  1277  0392                     	;# 
  1278  040C                     	;# 
  1279  040D                     	;# 
  1280  040E                     	;# 
  1281  040F                     	;# 
  1282  0410                     	;# 
  1283  0411                     	;# 
  1284  0416                     	;# 
  1285  0416                     	;# 
  1286  0417                     	;# 
  1287  0418                     	;# 
  1288  0418                     	;# 
  1289  0419                     	;# 
  1290  041A                     	;# 
  1291  041A                     	;# 
  1292  041B                     	;# 
  1293  041C                     	;# 
  1294  041C                     	;# 
  1295  041D                     	;# 
  1296  041E                     	;# 
  1297  041F                     	;# 
  1298  048C                     	;# 
  1299  048C                     	;# 
  1300  048D                     	;# 
  1301  048E                     	;# 
  1302  048F                     	;# 
  1303  048F                     	;# 
  1304  0490                     	;# 
  1305  0491                     	;# 
  1306  0492                     	;# 
  1307  0492                     	;# 
  1308  0493                     	;# 
  1309  0494                     	;# 
  1310  0495                     	;# 
  1311  0495                     	;# 
  1312  0496                     	;# 
  1313  0497                     	;# 
  1314  0498                     	;# 
  1315  0499                     	;# 
  1316  049A                     	;# 
  1317  049B                     	;# 
  1318  049C                     	;# 
  1319  049D                     	;# 
  1320  050C                     	;# 
  1321  050C                     	;# 
  1322  050D                     	;# 
  1323  050E                     	;# 
  1324  050F                     	;# 
  1325  050F                     	;# 
  1326  0510                     	;# 
  1327  0511                     	;# 
  1328  0512                     	;# 
  1329  0512                     	;# 
  1330  0513                     	;# 
  1331  0514                     	;# 
  1332  0515                     	;# 
  1333  0515                     	;# 
  1334  0516                     	;# 
  1335  0517                     	;# 
  1336  0518                     	;# 
  1337  0519                     	;# 
  1338  051A                     	;# 
  1339  051B                     	;# 
  1340  051C                     	;# 
  1341  051D                     	;# 
  1342  058C                     	;# 
  1343  058C                     	;# 
  1344  058D                     	;# 
  1345  058E                     	;# 
  1346  058F                     	;# 
  1347  058F                     	;# 
  1348  0590                     	;# 
  1349  0591                     	;# 
  1350  0592                     	;# 
  1351  0593                     	;# 
  1352  060C                     	;# 
  1353  060D                     	;# 
  1354  060E                     	;# 
  1355  060F                     	;# 
  1356  0610                     	;# 
  1357  0611                     	;# 
  1358  0612                     	;# 
  1359  0613                     	;# 
  1360  0614                     	;# 
  1361  0616                     	;# 
  1362  0617                     	;# 
  1363  0618                     	;# 
  1364  0619                     	;# 
  1365  061A                     	;# 
  1366  061B                     	;# 
  1367  061C                     	;# 
  1368  061D                     	;# 
  1369  061E                     	;# 
  1370  068C                     	;# 
  1371  068D                     	;# 
  1372  068E                     	;# 
  1373  068F                     	;# 
  1374  0690                     	;# 
  1375  0691                     	;# 
  1376  0692                     	;# 
  1377  0693                     	;# 
  1378  0694                     	;# 
  1379  070C                     	;# 
  1380  070D                     	;# 
  1381  070E                     	;# 
  1382  070F                     	;# 
  1383  0710                     	;# 
  1384  0711                     	;# 
  1385  0712                     	;# 
  1386  0713                     	;# 
  1387  0714                     	;# 
  1388  0716                     	;# 
  1389  0717                     	;# 
  1390  0718                     	;# 
  1391  0719                     	;# 
  1392  071A                     	;# 
  1393  071B                     	;# 
  1394  071C                     	;# 
  1395  071D                     	;# 
  1396  071E                     	;# 
  1397  0796                     	;# 
  1398  0797                     	;# 
  1399  0798                     	;# 
  1400  0799                     	;# 
  1401  079A                     	;# 
  1402  079B                     	;# 
  1403  080C                     	;# 
  1404  080D                     	;# 
  1405  080E                     	;# 
  1406  080F                     	;# 
  1407  0810                     	;# 
  1408  0811                     	;# 
  1409  0812                     	;# 
  1410  0813                     	;# 
  1411  0814                     	;# 
  1412  081A                     	;# 
  1413  081B                     	;# 
  1414  081C                     	;# 
  1415  081D                     	;# 
  1416  081E                     	;# 
  1417  081F                     	;# 
  1418  088C                     	;# 
  1419  088D                     	;# 
  1420  088E                     	;# 
  1421  088F                     	;# 
  1422  0890                     	;# 
  1423  0891                     	;# 
  1424  0892                     	;# 
  1425  0893                     	;# 
  1426  0895                     	;# 
  1427  0896                     	;# 
  1428  0897                     	;# 
  1429  0898                     	;# 
  1430  0899                     	;# 
  1431  089A                     	;# 
  1432  089B                     	;# 
  1433  090C                     	;# 
  1434  090E                     	;# 
  1435  090F                     	;# 
  1436  091F                     	;# 
  1437  091F                     	;# 
  1438  098F                     	;# 
  1439  098F                     	;# 
  1440  0990                     	;# 
  1441  0991                     	;# 
  1442  0992                     	;# 
  1443  0993                     	;# 
  1444  0994                     	;# 
  1445  0995                     	;# 
  1446  0996                     	;# 
  1447  0997                     	;# 
  1448  0E0F                     	;# 
  1449  0E10                     	;# 
  1450  0E11                     	;# 
  1451  0E12                     	;# 
  1452  0E13                     	;# 
  1453  0E14                     	;# 
  1454  0E15                     	;# 
  1455  0E16                     	;# 
  1456  0E17                     	;# 
  1457  0E18                     	;# 
  1458  0E19                     	;# 
  1459  0E1A                     	;# 
  1460  0E1B                     	;# 
  1461  0E1C                     	;# 
  1462  0E1D                     	;# 
  1463  0E1E                     	;# 
  1464  0E1F                     	;# 
  1465  0E20                     	;# 
  1466  0E21                     	;# 
  1467  0E22                     	;# 
  1468  0E23                     	;# 
  1469  0E24                     	;# 
  1470  0E25                     	;# 
  1471  0E26                     	;# 
  1472  0E27                     	;# 
  1473  0E28                     	;# 
  1474  0E29                     	;# 
  1475  0E2A                     	;# 
  1476  0E2B                     	;# 
  1477  0E2C                     	;# 
  1478  0E2D                     	;# 
  1479  0E2E                     	;# 
  1480  0E2F                     	;# 
  1481  0E30                     	;# 
  1482  0E31                     	;# 
  1483  0E32                     	;# 
  1484  0E33                     	;# 
  1485  0E34                     	;# 
  1486  0E35                     	;# 
  1487  0E36                     	;# 
  1488  0E37                     	;# 
  1489  0E8F                     	;# 
  1490  0E90                     	;# 
  1491  0E91                     	;# 
  1492  0E92                     	;# 
  1493  0E93                     	;# 
  1494  0E94                     	;# 
  1495  0E95                     	;# 
  1496  0E96                     	;# 
  1497  0E97                     	;# 
  1498  0E9C                     	;# 
  1499  0E9D                     	;# 
  1500  0E9E                     	;# 
  1501  0EA1                     	;# 
  1502  0EA2                     	;# 
  1503  0EA3                     	;# 
  1504  0EA4                     	;# 
  1505  0EA5                     	;# 
  1506  0EA9                     	;# 
  1507  0EAA                     	;# 
  1508  0EAB                     	;# 
  1509  0EAC                     	;# 
  1510  0EB1                     	;# 
  1511  0EB2                     	;# 
  1512  0EB3                     	;# 
  1513  0EB8                     	;# 
  1514  0EB9                     	;# 
  1515  0EBA                     	;# 
  1516  0EBB                     	;# 
  1517  0EBC                     	;# 
  1518  0EBD                     	;# 
  1519  0EBE                     	;# 
  1520  0EC3                     	;# 
  1521  0EC5                     	;# 
  1522  0EC6                     	;# 
  1523  0EC7                     	;# 
  1524  0EC8                     	;# 
  1525  0EC9                     	;# 
  1526  0ECA                     	;# 
  1527  0ECB                     	;# 
  1528  0ECC                     	;# 
  1529  0F10                     	;# 
  1530  0F11                     	;# 
  1531  0F12                     	;# 
  1532  0F13                     	;# 
  1533  0F14                     	;# 
  1534  0F15                     	;# 
  1535  0F16                     	;# 
  1536  0F17                     	;# 
  1537  0F18                     	;# 
  1538  0F19                     	;# 
  1539  0F1A                     	;# 
  1540  0F1B                     	;# 
  1541  0F1C                     	;# 
  1542  0F1D                     	;# 
  1543  0F1E                     	;# 
  1544  0F1F                     	;# 
  1545  0F20                     	;# 
  1546  0F21                     	;# 
  1547  0F22                     	;# 
  1548  0F23                     	;# 
  1549  0F24                     	;# 
  1550  0F25                     	;# 
  1551  0F26                     	;# 
  1552  0F27                     	;# 
  1553  0F38                     	;# 
  1554  0F39                     	;# 
  1555  0F3A                     	;# 
  1556  0F3B                     	;# 
  1557  0F3C                     	;# 
  1558  0F3D                     	;# 
  1559  0F3E                     	;# 
  1560  0F3F                     	;# 
  1561  0F40                     	;# 
  1562  0F41                     	;# 
  1563  0F43                     	;# 
  1564  0F44                     	;# 
  1565  0F45                     	;# 
  1566  0F46                     	;# 
  1567  0F47                     	;# 
  1568  0F48                     	;# 
  1569  0F49                     	;# 
  1570  0F4A                     	;# 
  1571  0F4B                     	;# 
  1572  0F4C                     	;# 
  1573  0F4E                     	;# 
  1574  0F4F                     	;# 
  1575  0F50                     	;# 
  1576  0F51                     	;# 
  1577  0F52                     	;# 
  1578  0F53                     	;# 
  1579  0F54                     	;# 
  1580  0F55                     	;# 
  1581  0F56                     	;# 
  1582  0F57                     	;# 
  1583  0F65                     	;# 
  1584  0F68                     	;# 
  1585  0F69                     	;# 
  1586  0F6A                     	;# 
  1587  0F6B                     	;# 
  1588  0FE4                     	;# 
  1589  0FE5                     	;# 
  1590  0FE6                     	;# 
  1591  0FE7                     	;# 
  1592  0FE8                     	;# 
  1593  0FE9                     	;# 
  1594  0FEA                     	;# 
  1595  0FEB                     	;# 
  1596  0FED                     	;# 
  1597  0FEE                     	;# 
  1598  0FEF                     	;# 
  1599  0000                     	;# 
  1600  0001                     	;# 
  1601  0002                     	;# 
  1602  0003                     	;# 
  1603  0004                     	;# 
  1604  0005                     	;# 
  1605  0006                     	;# 
  1606  0007                     	;# 
  1607  0008                     	;# 
  1608  0009                     	;# 
  1609  000A                     	;# 
  1610  000B                     	;# 
  1611  000C                     	;# 
  1612  000D                     	;# 
  1613  000E                     	;# 
  1614  0010                     	;# 
  1615  0011                     	;# 
  1616  0012                     	;# 
  1617  0013                     	;# 
  1618  0016                     	;# 
  1619  0017                     	;# 
  1620  0018                     	;# 
  1621  001C                     	;# 
  1622  001C                     	;# 
  1623  001D                     	;# 
  1624  001D                     	;# 
  1625  001E                     	;# 
  1626  001F                     	;# 
  1627  008C                     	;# 
  1628  008C                     	;# 
  1629  008D                     	;# 
  1630  008E                     	;# 
  1631  008E                     	;# 
  1632  008F                     	;# 
  1633  0090                     	;# 
  1634  0090                     	;# 
  1635  0091                     	;# 
  1636  0093                     	;# 
  1637  0094                     	;# 
  1638  0095                     	;# 
  1639  0096                     	;# 
  1640  0097                     	;# 
  1641  0098                     	;# 
  1642  0099                     	;# 
  1643  009A                     	;# 
  1644  009B                     	;# 
  1645  009C                     	;# 
  1646  009D                     	;# 
  1647  009E                     	;# 
  1648  010C                     	;# 
  1649  010D                     	;# 
  1650  010E                     	;# 
  1651  010E                     	;# 
  1652  010F                     	;# 
  1653  0110                     	;# 
  1654  0110                     	;# 
  1655  0111                     	;# 
  1656  0112                     	;# 
  1657  0112                     	;# 
  1658  0113                     	;# 
  1659  0114                     	;# 
  1660  0114                     	;# 
  1661  0115                     	;# 
  1662  0116                     	;# 
  1663  0116                     	;# 
  1664  0117                     	;# 
  1665  0119                     	;# 
  1666  0119                     	;# 
  1667  0119                     	;# 
  1668  011A                     	;# 
  1669  011A                     	;# 
  1670  011A                     	;# 
  1671  011B                     	;# 
  1672  011B                     	;# 
  1673  011B                     	;# 
  1674  011B                     	;# 
  1675  011B                     	;# 
  1676  011C                     	;# 
  1677  011C                     	;# 
  1678  011C                     	;# 
  1679  011D                     	;# 
  1680  011D                     	;# 
  1681  011D                     	;# 
  1682  011E                     	;# 
  1683  011E                     	;# 
  1684  011E                     	;# 
  1685  011F                     	;# 
  1686  011F                     	;# 
  1687  011F                     	;# 
  1688  011F                     	;# 
  1689  011F                     	;# 
  1690  018C                     	;# 
  1691  018D                     	;# 
  1692  018E                     	;# 
  1693  018F                     	;# 
  1694  0190                     	;# 
  1695  0191                     	;# 
  1696  0192                     	;# 
  1697  0196                     	;# 
  1698  0197                     	;# 
  1699  0198                     	;# 
  1700  0199                     	;# 
  1701  019A                     	;# 
  1702  019B                     	;# 
  1703  019C                     	;# 
  1704  020C                     	;# 
  1705  020D                     	;# 
  1706  020E                     	;# 
  1707  020F                     	;# 
  1708  020F                     	;# 
  1709  0210                     	;# 
  1710  0210                     	;# 
  1711  0211                     	;# 
  1712  0211                     	;# 
  1713  0212                     	;# 
  1714  0213                     	;# 
  1715  0214                     	;# 
  1716  0215                     	;# 
  1717  0215                     	;# 
  1718  0216                     	;# 
  1719  0216                     	;# 
  1720  0217                     	;# 
  1721  0217                     	;# 
  1722  0218                     	;# 
  1723  0219                     	;# 
  1724  021A                     	;# 
  1725  021B                     	;# 
  1726  021B                     	;# 
  1727  021C                     	;# 
  1728  021C                     	;# 
  1729  021D                     	;# 
  1730  021D                     	;# 
  1731  021E                     	;# 
  1732  021F                     	;# 
  1733  028C                     	;# 
  1734  028C                     	;# 
  1735  028D                     	;# 
  1736  028D                     	;# 
  1737  028E                     	;# 
  1738  028F                     	;# 
  1739  0290                     	;# 
  1740  0290                     	;# 
  1741  0291                     	;# 
  1742  0292                     	;# 
  1743  0292                     	;# 
  1744  0293                     	;# 
  1745  0293                     	;# 
  1746  0294                     	;# 
  1747  0295                     	;# 
  1748  0296                     	;# 
  1749  0296                     	;# 
  1750  0297                     	;# 
  1751  0298                     	;# 
  1752  0298                     	;# 
  1753  0299                     	;# 
  1754  0299                     	;# 
  1755  029A                     	;# 
  1756  029B                     	;# 
  1757  029C                     	;# 
  1758  029C                     	;# 
  1759  029D                     	;# 
  1760  030C                     	;# 
  1761  030C                     	;# 
  1762  030D                     	;# 
  1763  030E                     	;# 
  1764  030F                     	;# 
  1765  0310                     	;# 
  1766  0310                     	;# 
  1767  0311                     	;# 
  1768  0312                     	;# 
  1769  0313                     	;# 
  1770  0314                     	;# 
  1771  0314                     	;# 
  1772  0315                     	;# 
  1773  0316                     	;# 
  1774  0317                     	;# 
  1775  0318                     	;# 
  1776  0318                     	;# 
  1777  0319                     	;# 
  1778  031A                     	;# 
  1779  031B                     	;# 
  1780  031C                     	;# 
  1781  031C                     	;# 
  1782  031D                     	;# 
  1783  031E                     	;# 
  1784  031F                     	;# 
  1785  038C                     	;# 
  1786  038D                     	;# 
  1787  038E                     	;# 
  1788  0390                     	;# 
  1789  0391                     	;# 
  1790  0392                     	;# 
  1791  040C                     	;# 
  1792  040D                     	;# 
  1793  040E                     	;# 
  1794  040F                     	;# 
  1795  0410                     	;# 
  1796  0411                     	;# 
  1797  0416                     	;# 
  1798  0416                     	;# 
  1799  0417                     	;# 
  1800  0418                     	;# 
  1801  0418                     	;# 
  1802  0419                     	;# 
  1803  041A                     	;# 
  1804  041A                     	;# 
  1805  041B                     	;# 
  1806  041C                     	;# 
  1807  041C                     	;# 
  1808  041D                     	;# 
  1809  041E                     	;# 
  1810  041F                     	;# 
  1811  048C                     	;# 
  1812  048C                     	;# 
  1813  048D                     	;# 
  1814  048E                     	;# 
  1815  048F                     	;# 
  1816  048F                     	;# 
  1817  0490                     	;# 
  1818  0491                     	;# 
  1819  0492                     	;# 
  1820  0492                     	;# 
  1821  0493                     	;# 
  1822  0494                     	;# 
  1823  0495                     	;# 
  1824  0495                     	;# 
  1825  0496                     	;# 
  1826  0497                     	;# 
  1827  0498                     	;# 
  1828  0499                     	;# 
  1829  049A                     	;# 
  1830  049B                     	;# 
  1831  049C                     	;# 
  1832  049D                     	;# 
  1833  050C                     	;# 
  1834  050C                     	;# 
  1835  050D                     	;# 
  1836  050E                     	;# 
  1837  050F                     	;# 
  1838  050F                     	;# 
  1839  0510                     	;# 
  1840  0511                     	;# 
  1841  0512                     	;# 
  1842  0512                     	;# 
  1843  0513                     	;# 
  1844  0514                     	;# 
  1845  0515                     	;# 
  1846  0515                     	;# 
  1847  0516                     	;# 
  1848  0517                     	;# 
  1849  0518                     	;# 
  1850  0519                     	;# 
  1851  051A                     	;# 
  1852  051B                     	;# 
  1853  051C                     	;# 
  1854  051D                     	;# 
  1855  058C                     	;# 
  1856  058C                     	;# 
  1857  058D                     	;# 
  1858  058E                     	;# 
  1859  058F                     	;# 
  1860  058F                     	;# 
  1861  0590                     	;# 
  1862  0591                     	;# 
  1863  0592                     	;# 
  1864  0593                     	;# 
  1865  060C                     	;# 
  1866  060D                     	;# 
  1867  060E                     	;# 
  1868  060F                     	;# 
  1869  0610                     	;# 
  1870  0611                     	;# 
  1871  0612                     	;# 
  1872  0613                     	;# 
  1873  0614                     	;# 
  1874  0616                     	;# 
  1875  0617                     	;# 
  1876  0618                     	;# 
  1877  0619                     	;# 
  1878  061A                     	;# 
  1879  061B                     	;# 
  1880  061C                     	;# 
  1881  061D                     	;# 
  1882  061E                     	;# 
  1883  068C                     	;# 
  1884  068D                     	;# 
  1885  068E                     	;# 
  1886  068F                     	;# 
  1887  0690                     	;# 
  1888  0691                     	;# 
  1889  0692                     	;# 
  1890  0693                     	;# 
  1891  0694                     	;# 
  1892  070C                     	;# 
  1893  070D                     	;# 
  1894  070E                     	;# 
  1895  070F                     	;# 
  1896  0710                     	;# 
  1897  0711                     	;# 
  1898  0712                     	;# 
  1899  0713                     	;# 
  1900  0714                     	;# 
  1901  0716                     	;# 
  1902  0717                     	;# 
  1903  0718                     	;# 
  1904  0719                     	;# 
  1905  071A                     	;# 
  1906  071B                     	;# 
  1907  071C                     	;# 
  1908  071D                     	;# 
  1909  071E                     	;# 
  1910  0796                     	;# 
  1911  0797                     	;# 
  1912  0798                     	;# 
  1913  0799                     	;# 
  1914  079A                     	;# 
  1915  079B                     	;# 
  1916  080C                     	;# 
  1917  080D                     	;# 
  1918  080E                     	;# 
  1919  080F                     	;# 
  1920  0810                     	;# 
  1921  0811                     	;# 
  1922  0812                     	;# 
  1923  0813                     	;# 
  1924  0814                     	;# 
  1925  081A                     	;# 
  1926  081B                     	;# 
  1927  081C                     	;# 
  1928  081D                     	;# 
  1929  081E                     	;# 
  1930  081F                     	;# 
  1931  088C                     	;# 
  1932  088D                     	;# 
  1933  088E                     	;# 
  1934  088F                     	;# 
  1935  0890                     	;# 
  1936  0891                     	;# 
  1937  0892                     	;# 
  1938  0893                     	;# 
  1939  0895                     	;# 
  1940  0896                     	;# 
  1941  0897                     	;# 
  1942  0898                     	;# 
  1943  0899                     	;# 
  1944  089A                     	;# 
  1945  089B                     	;# 
  1946  090C                     	;# 
  1947  090E                     	;# 
  1948  090F                     	;# 
  1949  091F                     	;# 
  1950  091F                     	;# 
  1951  098F                     	;# 
  1952  098F                     	;# 
  1953  0990                     	;# 
  1954  0991                     	;# 
  1955  0992                     	;# 
  1956  0993                     	;# 
  1957  0994                     	;# 
  1958  0995                     	;# 
  1959  0996                     	;# 
  1960  0997                     	;# 
  1961  0E0F                     	;# 
  1962  0E10                     	;# 
  1963  0E11                     	;# 
  1964  0E12                     	;# 
  1965  0E13                     	;# 
  1966  0E14                     	;# 
  1967  0E15                     	;# 
  1968  0E16                     	;# 
  1969  0E17                     	;# 
  1970  0E18                     	;# 
  1971  0E19                     	;# 
  1972  0E1A                     	;# 
  1973  0E1B                     	;# 
  1974  0E1C                     	;# 
  1975  0E1D                     	;# 
  1976  0E1E                     	;# 
  1977  0E1F                     	;# 
  1978  0E20                     	;# 
  1979  0E21                     	;# 
  1980  0E22                     	;# 
  1981  0E23                     	;# 
  1982  0E24                     	;# 
  1983  0E25                     	;# 
  1984  0E26                     	;# 
  1985  0E27                     	;# 
  1986  0E28                     	;# 
  1987  0E29                     	;# 
  1988  0E2A                     	;# 
  1989  0E2B                     	;# 
  1990  0E2C                     	;# 
  1991  0E2D                     	;# 
  1992  0E2E                     	;# 
  1993  0E2F                     	;# 
  1994  0E30                     	;# 
  1995  0E31                     	;# 
  1996  0E32                     	;# 
  1997  0E33                     	;# 
  1998  0E34                     	;# 
  1999  0E35                     	;# 
  2000  0E36                     	;# 
  2001  0E37                     	;# 
  2002  0E8F                     	;# 
  2003  0E90                     	;# 
  2004  0E91                     	;# 
  2005  0E92                     	;# 
  2006  0E93                     	;# 
  2007  0E94                     	;# 
  2008  0E95                     	;# 
  2009  0E96                     	;# 
  2010  0E97                     	;# 
  2011  0E9C                     	;# 
  2012  0E9D                     	;# 
  2013  0E9E                     	;# 
  2014  0EA1                     	;# 
  2015  0EA2                     	;# 
  2016  0EA3                     	;# 
  2017  0EA4                     	;# 
  2018  0EA5                     	;# 
  2019  0EA9                     	;# 
  2020  0EAA                     	;# 
  2021  0EAB                     	;# 
  2022  0EAC                     	;# 
  2023  0EB1                     	;# 
  2024  0EB2                     	;# 
  2025  0EB3                     	;# 
  2026  0EB8                     	;# 
  2027  0EB9                     	;# 
  2028  0EBA                     	;# 
  2029  0EBB                     	;# 
  2030  0EBC                     	;# 
  2031  0EBD                     	;# 
  2032  0EBE                     	;# 
  2033  0EC3                     	;# 
  2034  0EC5                     	;# 
  2035  0EC6                     	;# 
  2036  0EC7                     	;# 
  2037  0EC8                     	;# 
  2038  0EC9                     	;# 
  2039  0ECA                     	;# 
  2040  0ECB                     	;# 
  2041  0ECC                     	;# 
  2042  0F10                     	;# 
  2043  0F11                     	;# 
  2044  0F12                     	;# 
  2045  0F13                     	;# 
  2046  0F14                     	;# 
  2047  0F15                     	;# 
  2048  0F16                     	;# 
  2049  0F17                     	;# 
  2050  0F18                     	;# 
  2051  0F19                     	;# 
  2052  0F1A                     	;# 
  2053  0F1B                     	;# 
  2054  0F1C                     	;# 
  2055  0F1D                     	;# 
  2056  0F1E                     	;# 
  2057  0F1F                     	;# 
  2058  0F20                     	;# 
  2059  0F21                     	;# 
  2060  0F22                     	;# 
  2061  0F23                     	;# 
  2062  0F24                     	;# 
  2063  0F25                     	;# 
  2064  0F26                     	;# 
  2065  0F27                     	;# 
  2066  0F38                     	;# 
  2067  0F39                     	;# 
  2068  0F3A                     	;# 
  2069  0F3B                     	;# 
  2070  0F3C                     	;# 
  2071  0F3D                     	;# 
  2072  0F3E                     	;# 
  2073  0F3F                     	;# 
  2074  0F40                     	;# 
  2075  0F41                     	;# 
  2076  0F43                     	;# 
  2077  0F44                     	;# 
  2078  0F45                     	;# 
  2079  0F46                     	;# 
  2080  0F47                     	;# 
  2081  0F48                     	;# 
  2082  0F49                     	;# 
  2083  0F4A                     	;# 
  2084  0F4B                     	;# 
  2085  0F4C                     	;# 
  2086  0F4E                     	;# 
  2087  0F4F                     	;# 
  2088  0F50                     	;# 
  2089  0F51                     	;# 
  2090  0F52                     	;# 
  2091  0F53                     	;# 
  2092  0F54                     	;# 
  2093  0F55                     	;# 
  2094  0F56                     	;# 
  2095  0F57                     	;# 
  2096  0F65                     	;# 
  2097  0F68                     	;# 
  2098  0F69                     	;# 
  2099  0F6A                     	;# 
  2100  0F6B                     	;# 
  2101  0FE4                     	;# 
  2102  0FE5                     	;# 
  2103  0FE6                     	;# 
  2104  0FE7                     	;# 
  2105  0FE8                     	;# 
  2106  0FE9                     	;# 
  2107  0FEA                     	;# 
  2108  0FEB                     	;# 
  2109  0FED                     	;# 
  2110  0FEE                     	;# 
  2111  0FEF                     	;# 
  2112  0000                     	;# 
  2113  0001                     	;# 
  2114  0002                     	;# 
  2115  0003                     	;# 
  2116  0004                     	;# 
  2117  0005                     	;# 
  2118  0006                     	;# 
  2119  0007                     	;# 
  2120  0008                     	;# 
  2121  0009                     	;# 
  2122  000A                     	;# 
  2123  000B                     	;# 
  2124  000C                     	;# 
  2125  000D                     	;# 
  2126  000E                     	;# 
  2127  0010                     	;# 
  2128  0011                     	;# 
  2129  0012                     	;# 
  2130  0013                     	;# 
  2131  0016                     	;# 
  2132  0017                     	;# 
  2133  0018                     	;# 
  2134  001C                     	;# 
  2135  001C                     	;# 
  2136  001D                     	;# 
  2137  001D                     	;# 
  2138  001E                     	;# 
  2139  001F                     	;# 
  2140  008C                     	;# 
  2141  008C                     	;# 
  2142  008D                     	;# 
  2143  008E                     	;# 
  2144  008E                     	;# 
  2145  008F                     	;# 
  2146  0090                     	;# 
  2147  0090                     	;# 
  2148  0091                     	;# 
  2149  0093                     	;# 
  2150  0094                     	;# 
  2151  0095                     	;# 
  2152  0096                     	;# 
  2153  0097                     	;# 
  2154  0098                     	;# 
  2155  0099                     	;# 
  2156  009A                     	;# 
  2157  009B                     	;# 
  2158  009C                     	;# 
  2159  009D                     	;# 
  2160  009E                     	;# 
  2161  010C                     	;# 
  2162  010D                     	;# 
  2163  010E                     	;# 
  2164  010E                     	;# 
  2165  010F                     	;# 
  2166  0110                     	;# 
  2167  0110                     	;# 
  2168  0111                     	;# 
  2169  0112                     	;# 
  2170  0112                     	;# 
  2171  0113                     	;# 
  2172  0114                     	;# 
  2173  0114                     	;# 
  2174  0115                     	;# 
  2175  0116                     	;# 
  2176  0116                     	;# 
  2177  0117                     	;# 
  2178  0119                     	;# 
  2179  0119                     	;# 
  2180  0119                     	;# 
  2181  011A                     	;# 
  2182  011A                     	;# 
  2183  011A                     	;# 
  2184  011B                     	;# 
  2185  011B                     	;# 
  2186  011B                     	;# 
  2187  011B                     	;# 
  2188  011B                     	;# 
  2189  011C                     	;# 
  2190  011C                     	;# 
  2191  011C                     	;# 
  2192  011D                     	;# 
  2193  011D                     	;# 
  2194  011D                     	;# 
  2195  011E                     	;# 
  2196  011E                     	;# 
  2197  011E                     	;# 
  2198  011F                     	;# 
  2199  011F                     	;# 
  2200  011F                     	;# 
  2201  011F                     	;# 
  2202  011F                     	;# 
  2203  018C                     	;# 
  2204  018D                     	;# 
  2205  018E                     	;# 
  2206  018F                     	;# 
  2207  0190                     	;# 
  2208  0191                     	;# 
  2209  0192                     	;# 
  2210  0196                     	;# 
  2211  0197                     	;# 
  2212  0198                     	;# 
  2213  0199                     	;# 
  2214  019A                     	;# 
  2215  019B                     	;# 
  2216  019C                     	;# 
  2217  020C                     	;# 
  2218  020D                     	;# 
  2219  020E                     	;# 
  2220  020F                     	;# 
  2221  020F                     	;# 
  2222  0210                     	;# 
  2223  0210                     	;# 
  2224  0211                     	;# 
  2225  0211                     	;# 
  2226  0212                     	;# 
  2227  0213                     	;# 
  2228  0214                     	;# 
  2229  0215                     	;# 
  2230  0215                     	;# 
  2231  0216                     	;# 
  2232  0216                     	;# 
  2233  0217                     	;# 
  2234  0217                     	;# 
  2235  0218                     	;# 
  2236  0219                     	;# 
  2237  021A                     	;# 
  2238  021B                     	;# 
  2239  021B                     	;# 
  2240  021C                     	;# 
  2241  021C                     	;# 
  2242  021D                     	;# 
  2243  021D                     	;# 
  2244  021E                     	;# 
  2245  021F                     	;# 
  2246  028C                     	;# 
  2247  028C                     	;# 
  2248  028D                     	;# 
  2249  028D                     	;# 
  2250  028E                     	;# 
  2251  028F                     	;# 
  2252  0290                     	;# 
  2253  0290                     	;# 
  2254  0291                     	;# 
  2255  0292                     	;# 
  2256  0292                     	;# 
  2257  0293                     	;# 
  2258  0293                     	;# 
  2259  0294                     	;# 
  2260  0295                     	;# 
  2261  0296                     	;# 
  2262  0296                     	;# 
  2263  0297                     	;# 
  2264  0298                     	;# 
  2265  0298                     	;# 
  2266  0299                     	;# 
  2267  0299                     	;# 
  2268  029A                     	;# 
  2269  029B                     	;# 
  2270  029C                     	;# 
  2271  029C                     	;# 
  2272  029D                     	;# 
  2273  030C                     	;# 
  2274  030C                     	;# 
  2275  030D                     	;# 
  2276  030E                     	;# 
  2277  030F                     	;# 
  2278  0310                     	;# 
  2279  0310                     	;# 
  2280  0311                     	;# 
  2281  0312                     	;# 
  2282  0313                     	;# 
  2283  0314                     	;# 
  2284  0314                     	;# 
  2285  0315                     	;# 
  2286  0316                     	;# 
  2287  0317                     	;# 
  2288  0318                     	;# 
  2289  0318                     	;# 
  2290  0319                     	;# 
  2291  031A                     	;# 
  2292  031B                     	;# 
  2293  031C                     	;# 
  2294  031C                     	;# 
  2295  031D                     	;# 
  2296  031E                     	;# 
  2297  031F                     	;# 
  2298  038C                     	;# 
  2299  038D                     	;# 
  2300  038E                     	;# 
  2301  0390                     	;# 
  2302  0391                     	;# 
  2303  0392                     	;# 
  2304  040C                     	;# 
  2305  040D                     	;# 
  2306  040E                     	;# 
  2307  040F                     	;# 
  2308  0410                     	;# 
  2309  0411                     	;# 
  2310  0416                     	;# 
  2311  0416                     	;# 
  2312  0417                     	;# 
  2313  0418                     	;# 
  2314  0418                     	;# 
  2315  0419                     	;# 
  2316  041A                     	;# 
  2317  041A                     	;# 
  2318  041B                     	;# 
  2319  041C                     	;# 
  2320  041C                     	;# 
  2321  041D                     	;# 
  2322  041E                     	;# 
  2323  041F                     	;# 
  2324  048C                     	;# 
  2325  048C                     	;# 
  2326  048D                     	;# 
  2327  048E                     	;# 
  2328  048F                     	;# 
  2329  048F                     	;# 
  2330  0490                     	;# 
  2331  0491                     	;# 
  2332  0492                     	;# 
  2333  0492                     	;# 
  2334  0493                     	;# 
  2335  0494                     	;# 
  2336  0495                     	;# 
  2337  0495                     	;# 
  2338  0496                     	;# 
  2339  0497                     	;# 
  2340  0498                     	;# 
  2341  0499                     	;# 
  2342  049A                     	;# 
  2343  049B                     	;# 
  2344  049C                     	;# 
  2345  049D                     	;# 
  2346  050C                     	;# 
  2347  050C                     	;# 
  2348  050D                     	;# 
  2349  050E                     	;# 
  2350  050F                     	;# 
  2351  050F                     	;# 
  2352  0510                     	;# 
  2353  0511                     	;# 
  2354  0512                     	;# 
  2355  0512                     	;# 
  2356  0513                     	;# 
  2357  0514                     	;# 
  2358  0515                     	;# 
  2359  0515                     	;# 
  2360  0516                     	;# 
  2361  0517                     	;# 
  2362  0518                     	;# 
  2363  0519                     	;# 
  2364  051A                     	;# 
  2365  051B                     	;# 
  2366  051C                     	;# 
  2367  051D                     	;# 
  2368  058C                     	;# 
  2369  058C                     	;# 
  2370  058D                     	;# 
  2371  058E                     	;# 
  2372  058F                     	;# 
  2373  058F                     	;# 
  2374  0590                     	;# 
  2375  0591                     	;# 
  2376  0592                     	;# 
  2377  0593                     	;# 
  2378  060C                     	;# 
  2379  060D                     	;# 
  2380  060E                     	;# 
  2381  060F                     	;# 
  2382  0610                     	;# 
  2383  0611                     	;# 
  2384  0612                     	;# 
  2385  0613                     	;# 
  2386  0614                     	;# 
  2387  0616                     	;# 
  2388  0617                     	;# 
  2389  0618                     	;# 
  2390  0619                     	;# 
  2391  061A                     	;# 
  2392  061B                     	;# 
  2393  061C                     	;# 
  2394  061D                     	;# 
  2395  061E                     	;# 
  2396  068C                     	;# 
  2397  068D                     	;# 
  2398  068E                     	;# 
  2399  068F                     	;# 
  2400  0690                     	;# 
  2401  0691                     	;# 
  2402  0692                     	;# 
  2403  0693                     	;# 
  2404  0694                     	;# 
  2405  070C                     	;# 
  2406  070D                     	;# 
  2407  070E                     	;# 
  2408  070F                     	;# 
  2409  0710                     	;# 
  2410  0711                     	;# 
  2411  0712                     	;# 
  2412  0713                     	;# 
  2413  0714                     	;# 
  2414  0716                     	;# 
  2415  0717                     	;# 
  2416  0718                     	;# 
  2417  0719                     	;# 
  2418  071A                     	;# 
  2419  071B                     	;# 
  2420  071C                     	;# 
  2421  071D                     	;# 
  2422  071E                     	;# 
  2423  0796                     	;# 
  2424  0797                     	;# 
  2425  0798                     	;# 
  2426  0799                     	;# 
  2427  079A                     	;# 
  2428  079B                     	;# 
  2429  080C                     	;# 
  2430  080D                     	;# 
  2431  080E                     	;# 
  2432  080F                     	;# 
  2433  0810                     	;# 
  2434  0811                     	;# 
  2435  0812                     	;# 
  2436  0813                     	;# 
  2437  0814                     	;# 
  2438  081A                     	;# 
  2439  081B                     	;# 
  2440  081C                     	;# 
  2441  081D                     	;# 
  2442  081E                     	;# 
  2443  081F                     	;# 
  2444  088C                     	;# 
  2445  088D                     	;# 
  2446  088E                     	;# 
  2447  088F                     	;# 
  2448  0890                     	;# 
  2449  0891                     	;# 
  2450  0892                     	;# 
  2451  0893                     	;# 
  2452  0895                     	;# 
  2453  0896                     	;# 
  2454  0897                     	;# 
  2455  0898                     	;# 
  2456  0899                     	;# 
  2457  089A                     	;# 
  2458  089B                     	;# 
  2459  090C                     	;# 
  2460  090E                     	;# 
  2461  090F                     	;# 
  2462  091F                     	;# 
  2463  091F                     	;# 
  2464  098F                     	;# 
  2465  098F                     	;# 
  2466  0990                     	;# 
  2467  0991                     	;# 
  2468  0992                     	;# 
  2469  0993                     	;# 
  2470  0994                     	;# 
  2471  0995                     	;# 
  2472  0996                     	;# 
  2473  0997                     	;# 
  2474  0E0F                     	;# 
  2475  0E10                     	;# 
  2476  0E11                     	;# 
  2477  0E12                     	;# 
  2478  0E13                     	;# 
  2479  0E14                     	;# 
  2480  0E15                     	;# 
  2481  0E16                     	;# 
  2482  0E17                     	;# 
  2483  0E18                     	;# 
  2484  0E19                     	;# 
  2485  0E1A                     	;# 
  2486  0E1B                     	;# 
  2487  0E1C                     	;# 
  2488  0E1D                     	;# 
  2489  0E1E                     	;# 
  2490  0E1F                     	;# 
  2491  0E20                     	;# 
  2492  0E21                     	;# 
  2493  0E22                     	;# 
  2494  0E23                     	;# 
  2495  0E24                     	;# 
  2496  0E25                     	;# 
  2497  0E26                     	;# 
  2498  0E27                     	;# 
  2499  0E28                     	;# 
  2500  0E29                     	;# 
  2501  0E2A                     	;# 
  2502  0E2B                     	;# 
  2503  0E2C                     	;# 
  2504  0E2D                     	;# 
  2505  0E2E                     	;# 
  2506  0E2F                     	;# 
  2507  0E30                     	;# 
  2508  0E31                     	;# 
  2509  0E32                     	;# 
  2510  0E33                     	;# 
  2511  0E34                     	;# 
  2512  0E35                     	;# 
  2513  0E36                     	;# 
  2514  0E37                     	;# 
  2515  0E8F                     	;# 
  2516  0E90                     	;# 
  2517  0E91                     	;# 
  2518  0E92                     	;# 
  2519  0E93                     	;# 
  2520  0E94                     	;# 
  2521  0E95                     	;# 
  2522  0E96                     	;# 
  2523  0E97                     	;# 
  2524  0E9C                     	;# 
  2525  0E9D                     	;# 
  2526  0E9E                     	;# 
  2527  0EA1                     	;# 
  2528  0EA2                     	;# 
  2529  0EA3                     	;# 
  2530  0EA4                     	;# 
  2531  0EA5                     	;# 
  2532  0EA9                     	;# 
  2533  0EAA                     	;# 
  2534  0EAB                     	;# 
  2535  0EAC                     	;# 
  2536  0EB1                     	;# 
  2537  0EB2                     	;# 
  2538  0EB3                     	;# 
  2539  0EB8                     	;# 
  2540  0EB9                     	;# 
  2541  0EBA                     	;# 
  2542  0EBB                     	;# 
  2543  0EBC                     	;# 
  2544  0EBD                     	;# 
  2545  0EBE                     	;# 
  2546  0EC3                     	;# 
  2547  0EC5                     	;# 
  2548  0EC6                     	;# 
  2549  0EC7                     	;# 
  2550  0EC8                     	;# 
  2551  0EC9                     	;# 
  2552  0ECA                     	;# 
  2553  0ECB                     	;# 
  2554  0ECC                     	;# 
  2555  0F10                     	;# 
  2556  0F11                     	;# 
  2557  0F12                     	;# 
  2558  0F13                     	;# 
  2559  0F14                     	;# 
  2560  0F15                     	;# 
  2561  0F16                     	;# 
  2562  0F17                     	;# 
  2563  0F18                     	;# 
  2564  0F19                     	;# 
  2565  0F1A                     	;# 
  2566  0F1B                     	;# 
  2567  0F1C                     	;# 
  2568  0F1D                     	;# 
  2569  0F1E                     	;# 
  2570  0F1F                     	;# 
  2571  0F20                     	;# 
  2572  0F21                     	;# 
  2573  0F22                     	;# 
  2574  0F23                     	;# 
  2575  0F24                     	;# 
  2576  0F25                     	;# 
  2577  0F26                     	;# 
  2578  0F27                     	;# 
  2579  0F38                     	;# 
  2580  0F39                     	;# 
  2581  0F3A                     	;# 
  2582  0F3B                     	;# 
  2583  0F3C                     	;# 
  2584  0F3D                     	;# 
  2585  0F3E                     	;# 
  2586  0F3F                     	;# 
  2587  0F40                     	;# 
  2588  0F41                     	;# 
  2589  0F43                     	;# 
  2590  0F44                     	;# 
  2591  0F45                     	;# 
  2592  0F46                     	;# 
  2593  0F47                     	;# 
  2594  0F48                     	;# 
  2595  0F49                     	;# 
  2596  0F4A                     	;# 
  2597  0F4B                     	;# 
  2598  0F4C                     	;# 
  2599  0F4E                     	;# 
  2600  0F4F                     	;# 
  2601  0F50                     	;# 
  2602  0F51                     	;# 
  2603  0F52                     	;# 
  2604  0F53                     	;# 
  2605  0F54                     	;# 
  2606  0F55                     	;# 
  2607  0F56                     	;# 
  2608  0F57                     	;# 
  2609  0F65                     	;# 
  2610  0F68                     	;# 
  2611  0F69                     	;# 
  2612  0F6A                     	;# 
  2613  0F6B                     	;# 
  2614  0FE4                     	;# 
  2615  0FE5                     	;# 
  2616  0FE6                     	;# 
  2617  0FE7                     	;# 
  2618  0FE8                     	;# 
  2619  0FE9                     	;# 
  2620  0FEA                     	;# 
  2621  0FEB                     	;# 
  2622  0FED                     	;# 
  2623  0FEE                     	;# 
  2624  0FEF                     	;# 
  2625  0000                     	;# 
  2626  0001                     	;# 
  2627  0002                     	;# 
  2628  0003                     	;# 
  2629  0004                     	;# 
  2630  0005                     	;# 
  2631  0006                     	;# 
  2632  0007                     	;# 
  2633  0008                     	;# 
  2634  0009                     	;# 
  2635  000A                     	;# 
  2636  000B                     	;# 
  2637  000C                     	;# 
  2638  000D                     	;# 
  2639  000E                     	;# 
  2640  0010                     	;# 
  2641  0011                     	;# 
  2642  0012                     	;# 
  2643  0013                     	;# 
  2644  0016                     	;# 
  2645  0017                     	;# 
  2646  0018                     	;# 
  2647  001C                     	;# 
  2648  001C                     	;# 
  2649  001D                     	;# 
  2650  001D                     	;# 
  2651  001E                     	;# 
  2652  001F                     	;# 
  2653  008C                     	;# 
  2654  008C                     	;# 
  2655  008D                     	;# 
  2656  008E                     	;# 
  2657  008E                     	;# 
  2658  008F                     	;# 
  2659  0090                     	;# 
  2660  0090                     	;# 
  2661  0091                     	;# 
  2662  0093                     	;# 
  2663  0094                     	;# 
  2664  0095                     	;# 
  2665  0096                     	;# 
  2666  0097                     	;# 
  2667  0098                     	;# 
  2668  0099                     	;# 
  2669  009A                     	;# 
  2670  009B                     	;# 
  2671  009C                     	;# 
  2672  009D                     	;# 
  2673  009E                     	;# 
  2674  010C                     	;# 
  2675  010D                     	;# 
  2676  010E                     	;# 
  2677  010E                     	;# 
  2678  010F                     	;# 
  2679  0110                     	;# 
  2680  0110                     	;# 
  2681  0111                     	;# 
  2682  0112                     	;# 
  2683  0112                     	;# 
  2684  0113                     	;# 
  2685  0114                     	;# 
  2686  0114                     	;# 
  2687  0115                     	;# 
  2688  0116                     	;# 
  2689  0116                     	;# 
  2690  0117                     	;# 
  2691  0119                     	;# 
  2692  0119                     	;# 
  2693  0119                     	;# 
  2694  011A                     	;# 
  2695  011A                     	;# 
  2696  011A                     	;# 
  2697  011B                     	;# 
  2698  011B                     	;# 
  2699  011B                     	;# 
  2700  011B                     	;# 
  2701  011B                     	;# 
  2702  011C                     	;# 
  2703  011C                     	;# 
  2704  011C                     	;# 
  2705  011D                     	;# 
  2706  011D                     	;# 
  2707  011D                     	;# 
  2708  011E                     	;# 
  2709  011E                     	;# 
  2710  011E                     	;# 
  2711  011F                     	;# 
  2712  011F                     	;# 
  2713  011F                     	;# 
  2714  011F                     	;# 
  2715  011F                     	;# 
  2716  018C                     	;# 
  2717  018D                     	;# 
  2718  018E                     	;# 
  2719  018F                     	;# 
  2720  0190                     	;# 
  2721  0191                     	;# 
  2722  0192                     	;# 
  2723  0196                     	;# 
  2724  0197                     	;# 
  2725  0198                     	;# 
  2726  0199                     	;# 
  2727  019A                     	;# 
  2728  019B                     	;# 
  2729  019C                     	;# 
  2730  020C                     	;# 
  2731  020D                     	;# 
  2732  020E                     	;# 
  2733  020F                     	;# 
  2734  020F                     	;# 
  2735  0210                     	;# 
  2736  0210                     	;# 
  2737  0211                     	;# 
  2738  0211                     	;# 
  2739  0212                     	;# 
  2740  0213                     	;# 
  2741  0214                     	;# 
  2742  0215                     	;# 
  2743  0215                     	;# 
  2744  0216                     	;# 
  2745  0216                     	;# 
  2746  0217                     	;# 
  2747  0217                     	;# 
  2748  0218                     	;# 
  2749  0219                     	;# 
  2750  021A                     	;# 
  2751  021B                     	;# 
  2752  021B                     	;# 
  2753  021C                     	;# 
  2754  021C                     	;# 
  2755  021D                     	;# 
  2756  021D                     	;# 
  2757  021E                     	;# 
  2758  021F                     	;# 
  2759  028C                     	;# 
  2760  028C                     	;# 
  2761  028D                     	;# 
  2762  028D                     	;# 
  2763  028E                     	;# 
  2764  028F                     	;# 
  2765  0290                     	;# 
  2766  0290                     	;# 
  2767  0291                     	;# 
  2768  0292                     	;# 
  2769  0292                     	;# 
  2770  0293                     	;# 
  2771  0293                     	;# 
  2772  0294                     	;# 
  2773  0295                     	;# 
  2774  0296                     	;# 
  2775  0296                     	;# 
  2776  0297                     	;# 
  2777  0298                     	;# 
  2778  0298                     	;# 
  2779  0299                     	;# 
  2780  0299                     	;# 
  2781  029A                     	;# 
  2782  029B                     	;# 
  2783  029C                     	;# 
  2784  029C                     	;# 
  2785  029D                     	;# 
  2786  030C                     	;# 
  2787  030C                     	;# 
  2788  030D                     	;# 
  2789  030E                     	;# 
  2790  030F                     	;# 
  2791  0310                     	;# 
  2792  0310                     	;# 
  2793  0311                     	;# 
  2794  0312                     	;# 
  2795  0313                     	;# 
  2796  0314                     	;# 
  2797  0314                     	;# 
  2798  0315                     	;# 
  2799  0316                     	;# 
  2800  0317                     	;# 
  2801  0318                     	;# 
  2802  0318                     	;# 
  2803  0319                     	;# 
  2804  031A                     	;# 
  2805  031B                     	;# 
  2806  031C                     	;# 
  2807  031C                     	;# 
  2808  031D                     	;# 
  2809  031E                     	;# 
  2810  031F                     	;# 
  2811  038C                     	;# 
  2812  038D                     	;# 
  2813  038E                     	;# 
  2814  0390                     	;# 
  2815  0391                     	;# 
  2816  0392                     	;# 
  2817  040C                     	;# 
  2818  040D                     	;# 
  2819  040E                     	;# 
  2820  040F                     	;# 
  2821  0410                     	;# 
  2822  0411                     	;# 
  2823  0416                     	;# 
  2824  0416                     	;# 
  2825  0417                     	;# 
  2826  0418                     	;# 
  2827  0418                     	;# 
  2828  0419                     	;# 
  2829  041A                     	;# 
  2830  041A                     	;# 
  2831  041B                     	;# 
  2832  041C                     	;# 
  2833  041C                     	;# 
  2834  041D                     	;# 
  2835  041E                     	;# 
  2836  041F                     	;# 
  2837  048C                     	;# 
  2838  048C                     	;# 
  2839  048D                     	;# 
  2840  048E                     	;# 
  2841  048F                     	;# 
  2842  048F                     	;# 
  2843  0490                     	;# 
  2844  0491                     	;# 
  2845  0492                     	;# 
  2846  0492                     	;# 
  2847  0493                     	;# 
  2848  0494                     	;# 
  2849  0495                     	;# 
  2850  0495                     	;# 
  2851  0496                     	;# 
  2852  0497                     	;# 
  2853  0498                     	;# 
  2854  0499                     	;# 
  2855  049A                     	;# 
  2856  049B                     	;# 
  2857  049C                     	;# 
  2858  049D                     	;# 
  2859  050C                     	;# 
  2860  050C                     	;# 
  2861  050D                     	;# 
  2862  050E                     	;# 
  2863  050F                     	;# 
  2864  050F                     	;# 
  2865  0510                     	;# 
  2866  0511                     	;# 
  2867  0512                     	;# 
  2868  0512                     	;# 
  2869  0513                     	;# 
  2870  0514                     	;# 
  2871  0515                     	;# 
  2872  0515                     	;# 
  2873  0516                     	;# 
  2874  0517                     	;# 
  2875  0518                     	;# 
  2876  0519                     	;# 
  2877  051A                     	;# 
  2878  051B                     	;# 
  2879  051C                     	;# 
  2880  051D                     	;# 
  2881  058C                     	;# 
  2882  058C                     	;# 
  2883  058D                     	;# 
  2884  058E                     	;# 
  2885  058F                     	;# 
  2886  058F                     	;# 
  2887  0590                     	;# 
  2888  0591                     	;# 
  2889  0592                     	;# 
  2890  0593                     	;# 
  2891  060C                     	;# 
  2892  060D                     	;# 
  2893  060E                     	;# 
  2894  060F                     	;# 
  2895  0610                     	;# 
  2896  0611                     	;# 
  2897  0612                     	;# 
  2898  0613                     	;# 
  2899  0614                     	;# 
  2900  0616                     	;# 
  2901  0617                     	;# 
  2902  0618                     	;# 
  2903  0619                     	;# 
  2904  061A                     	;# 
  2905  061B                     	;# 
  2906  061C                     	;# 
  2907  061D                     	;# 
  2908  061E                     	;# 
  2909  068C                     	;# 
  2910  068D                     	;# 
  2911  068E                     	;# 
  2912  068F                     	;# 
  2913  0690                     	;# 
  2914  0691                     	;# 
  2915  0692                     	;# 
  2916  0693                     	;# 
  2917  0694                     	;# 
  2918  070C                     	;# 
  2919  070D                     	;# 
  2920  070E                     	;# 
  2921  070F                     	;# 
  2922  0710                     	;# 
  2923  0711                     	;# 
  2924  0712                     	;# 
  2925  0713                     	;# 
  2926  0714                     	;# 
  2927  0716                     	;# 
  2928  0717                     	;# 
  2929  0718                     	;# 
  2930  0719                     	;# 
  2931  071A                     	;# 
  2932  071B                     	;# 
  2933  071C                     	;# 
  2934  071D                     	;# 
  2935  071E                     	;# 
  2936  0796                     	;# 
  2937  0797                     	;# 
  2938  0798                     	;# 
  2939  0799                     	;# 
  2940  079A                     	;# 
  2941  079B                     	;# 
  2942  080C                     	;# 
  2943  080D                     	;# 
  2944  080E                     	;# 
  2945  080F                     	;# 
  2946  0810                     	;# 
  2947  0811                     	;# 
  2948  0812                     	;# 
  2949  0813                     	;# 
  2950  0814                     	;# 
  2951  081A                     	;# 
  2952  081B                     	;# 
  2953  081C                     	;# 
  2954  081D                     	;# 
  2955  081E                     	;# 
  2956  081F                     	;# 
  2957  088C                     	;# 
  2958  088D                     	;# 
  2959  088E                     	;# 
  2960  088F                     	;# 
  2961  0890                     	;# 
  2962  0891                     	;# 
  2963  0892                     	;# 
  2964  0893                     	;# 
  2965  0895                     	;# 
  2966  0896                     	;# 
  2967  0897                     	;# 
  2968  0898                     	;# 
  2969  0899                     	;# 
  2970  089A                     	;# 
  2971  089B                     	;# 
  2972  090C                     	;# 
  2973  090E                     	;# 
  2974  090F                     	;# 
  2975  091F                     	;# 
  2976  091F                     	;# 
  2977  098F                     	;# 
  2978  098F                     	;# 
  2979  0990                     	;# 
  2980  0991                     	;# 
  2981  0992                     	;# 
  2982  0993                     	;# 
  2983  0994                     	;# 
  2984  0995                     	;# 
  2985  0996                     	;# 
  2986  0997                     	;# 
  2987  0E0F                     	;# 
  2988  0E10                     	;# 
  2989  0E11                     	;# 
  2990  0E12                     	;# 
  2991  0E13                     	;# 
  2992  0E14                     	;# 
  2993  0E15                     	;# 
  2994  0E16                     	;# 
  2995  0E17                     	;# 
  2996  0E18                     	;# 
  2997  0E19                     	;# 
  2998  0E1A                     	;# 
  2999  0E1B                     	;# 
  3000  0E1C                     	;# 
  3001  0E1D                     	;# 
  3002  0E1E                     	;# 
  3003  0E1F                     	;# 
  3004  0E20                     	;# 
  3005  0E21                     	;# 
  3006  0E22                     	;# 
  3007  0E23                     	;# 
  3008  0E24                     	;# 
  3009  0E25                     	;# 
  3010  0E26                     	;# 
  3011  0E27                     	;# 
  3012  0E28                     	;# 
  3013  0E29                     	;# 
  3014  0E2A                     	;# 
  3015  0E2B                     	;# 
  3016  0E2C                     	;# 
  3017  0E2D                     	;# 
  3018  0E2E                     	;# 
  3019  0E2F                     	;# 
  3020  0E30                     	;# 
  3021  0E31                     	;# 
  3022  0E32                     	;# 
  3023  0E33                     	;# 
  3024  0E34                     	;# 
  3025  0E35                     	;# 
  3026  0E36                     	;# 
  3027  0E37                     	;# 
  3028  0E8F                     	;# 
  3029  0E90                     	;# 
  3030  0E91                     	;# 
  3031  0E92                     	;# 
  3032  0E93                     	;# 
  3033  0E94                     	;# 
  3034  0E95                     	;# 
  3035  0E96                     	;# 
  3036  0E97                     	;# 
  3037  0E9C                     	;# 
  3038  0E9D                     	;# 
  3039  0E9E                     	;# 
  3040  0EA1                     	;# 
  3041  0EA2                     	;# 
  3042  0EA3                     	;# 
  3043  0EA4                     	;# 
  3044  0EA5                     	;# 
  3045  0EA9                     	;# 
  3046  0EAA                     	;# 
  3047  0EAB                     	;# 
  3048  0EAC                     	;# 
  3049  0EB1                     	;# 
  3050  0EB2                     	;# 
  3051  0EB3                     	;# 
  3052  0EB8                     	;# 
  3053  0EB9                     	;# 
  3054  0EBA                     	;# 
  3055  0EBB                     	;# 
  3056  0EBC                     	;# 
  3057  0EBD                     	;# 
  3058  0EBE                     	;# 
  3059  0EC3                     	;# 
  3060  0EC5                     	;# 
  3061  0EC6                     	;# 
  3062  0EC7                     	;# 
  3063  0EC8                     	;# 
  3064  0EC9                     	;# 
  3065  0ECA                     	;# 
  3066  0ECB                     	;# 
  3067  0ECC                     	;# 
  3068  0F10                     	;# 
  3069  0F11                     	;# 
  3070  0F12                     	;# 
  3071  0F13                     	;# 
  3072  0F14                     	;# 
  3073  0F15                     	;# 
  3074  0F16                     	;# 
  3075  0F17                     	;# 
  3076  0F18                     	;# 
  3077  0F19                     	;# 
  3078  0F1A                     	;# 
  3079  0F1B                     	;# 
  3080  0F1C                     	;# 
  3081  0F1D                     	;# 
  3082  0F1E                     	;# 
  3083  0F1F                     	;# 
  3084  0F20                     	;# 
  3085  0F21                     	;# 
  3086  0F22                     	;# 
  3087  0F23                     	;# 
  3088  0F24                     	;# 
  3089  0F25                     	;# 
  3090  0F26                     	;# 
  3091  0F27                     	;# 
  3092  0F38                     	;# 
  3093  0F39                     	;# 
  3094  0F3A                     	;# 
  3095  0F3B                     	;# 
  3096  0F3C                     	;# 
  3097  0F3D                     	;# 
  3098  0F3E                     	;# 
  3099  0F3F                     	;# 
  3100  0F40                     	;# 
  3101  0F41                     	;# 
  3102  0F43                     	;# 
  3103  0F44                     	;# 
  3104  0F45                     	;# 
  3105  0F46                     	;# 
  3106  0F47                     	;# 
  3107  0F48                     	;# 
  3108  0F49                     	;# 
  3109  0F4A                     	;# 
  3110  0F4B                     	;# 
  3111  0F4C                     	;# 
  3112  0F4E                     	;# 
  3113  0F4F                     	;# 
  3114  0F50                     	;# 
  3115  0F51                     	;# 
  3116  0F52                     	;# 
  3117  0F53                     	;# 
  3118  0F54                     	;# 
  3119  0F55                     	;# 
  3120  0F56                     	;# 
  3121  0F57                     	;# 
  3122  0F65                     	;# 
  3123  0F68                     	;# 
  3124  0F69                     	;# 
  3125  0F6A                     	;# 
  3126  0F6B                     	;# 
  3127  0FE4                     	;# 
  3128  0FE5                     	;# 
  3129  0FE6                     	;# 
  3130  0FE7                     	;# 
  3131  0FE8                     	;# 
  3132  0FE9                     	;# 
  3133  0FEA                     	;# 
  3134  0FEB                     	;# 
  3135  0FED                     	;# 
  3136  0FEE                     	;# 
  3137  0FEF                     	;# 
  3138  0000                     	;# 
  3139  0001                     	;# 
  3140  0002                     	;# 
  3141  0003                     	;# 
  3142  0004                     	;# 
  3143  0005                     	;# 
  3144  0006                     	;# 
  3145  0007                     	;# 
  3146  0008                     	;# 
  3147  0009                     	;# 
  3148  000A                     	;# 
  3149  000B                     	;# 
  3150  000C                     	;# 
  3151  000D                     	;# 
  3152  000E                     	;# 
  3153  0010                     	;# 
  3154  0011                     	;# 
  3155  0012                     	;# 
  3156  0013                     	;# 
  3157  0016                     	;# 
  3158  0017                     	;# 
  3159  0018                     	;# 
  3160  001C                     	;# 
  3161  001C                     	;# 
  3162  001D                     	;# 
  3163  001D                     	;# 
  3164  001E                     	;# 
  3165  001F                     	;# 
  3166  008C                     	;# 
  3167  008C                     	;# 
  3168  008D                     	;# 
  3169  008E                     	;# 
  3170  008E                     	;# 
  3171  008F                     	;# 
  3172  0090                     	;# 
  3173  0090                     	;# 
  3174  0091                     	;# 
  3175  0093                     	;# 
  3176  0094                     	;# 
  3177  0095                     	;# 
  3178  0096                     	;# 
  3179  0097                     	;# 
  3180  0098                     	;# 
  3181  0099                     	;# 
  3182  009A                     	;# 
  3183  009B                     	;# 
  3184  009C                     	;# 
  3185  009D                     	;# 
  3186  009E                     	;# 
  3187  010C                     	;# 
  3188  010D                     	;# 
  3189  010E                     	;# 
  3190  010E                     	;# 
  3191  010F                     	;# 
  3192  0110                     	;# 
  3193  0110                     	;# 
  3194  0111                     	;# 
  3195  0112                     	;# 
  3196  0112                     	;# 
  3197  0113                     	;# 
  3198  0114                     	;# 
  3199  0114                     	;# 
  3200  0115                     	;# 
  3201  0116                     	;# 
  3202  0116                     	;# 
  3203  0117                     	;# 
  3204  0119                     	;# 
  3205  0119                     	;# 
  3206  0119                     	;# 
  3207  011A                     	;# 
  3208  011A                     	;# 
  3209  011A                     	;# 
  3210  011B                     	;# 
  3211  011B                     	;# 
  3212  011B                     	;# 
  3213  011B                     	;# 
  3214  011B                     	;# 
  3215  011C                     	;# 
  3216  011C                     	;# 
  3217  011C                     	;# 
  3218  011D                     	;# 
  3219  011D                     	;# 
  3220  011D                     	;# 
  3221  011E                     	;# 
  3222  011E                     	;# 
  3223  011E                     	;# 
  3224  011F                     	;# 
  3225  011F                     	;# 
  3226  011F                     	;# 
  3227  011F                     	;# 
  3228  011F                     	;# 
  3229  018C                     	;# 
  3230  018D                     	;# 
  3231  018E                     	;# 
  3232  018F                     	;# 
  3233  0190                     	;# 
  3234  0191                     	;# 
  3235  0192                     	;# 
  3236  0196                     	;# 
  3237  0197                     	;# 
  3238  0198                     	;# 
  3239  0199                     	;# 
  3240  019A                     	;# 
  3241  019B                     	;# 
  3242  019C                     	;# 
  3243  020C                     	;# 
  3244  020D                     	;# 
  3245  020E                     	;# 
  3246  020F                     	;# 
  3247  020F                     	;# 
  3248  0210                     	;# 
  3249  0210                     	;# 
  3250  0211                     	;# 
  3251  0211                     	;# 
  3252  0212                     	;# 
  3253  0213                     	;# 
  3254  0214                     	;# 
  3255  0215                     	;# 
  3256  0215                     	;# 
  3257  0216                     	;# 
  3258  0216                     	;# 
  3259  0217                     	;# 
  3260  0217                     	;# 
  3261  0218                     	;# 
  3262  0219                     	;# 
  3263  021A                     	;# 
  3264  021B                     	;# 
  3265  021B                     	;# 
  3266  021C                     	;# 
  3267  021C                     	;# 
  3268  021D                     	;# 
  3269  021D                     	;# 
  3270  021E                     	;# 
  3271  021F                     	;# 
  3272  028C                     	;# 
  3273  028C                     	;# 
  3274  028D                     	;# 
  3275  028D                     	;# 
  3276  028E                     	;# 
  3277  028F                     	;# 
  3278  0290                     	;# 
  3279  0290                     	;# 
  3280  0291                     	;# 
  3281  0292                     	;# 
  3282  0292                     	;# 
  3283  0293                     	;# 
  3284  0293                     	;# 
  3285  0294                     	;# 
  3286  0295                     	;# 
  3287  0296                     	;# 
  3288  0296                     	;# 
  3289  0297                     	;# 
  3290  0298                     	;# 
  3291  0298                     	;# 
  3292  0299                     	;# 
  3293  0299                     	;# 
  3294  029A                     	;# 
  3295  029B                     	;# 
  3296  029C                     	;# 
  3297  029C                     	;# 
  3298  029D                     	;# 
  3299  030C                     	;# 
  3300  030C                     	;# 
  3301  030D                     	;# 
  3302  030E                     	;# 
  3303  030F                     	;# 
  3304  0310                     	;# 
  3305  0310                     	;# 
  3306  0311                     	;# 
  3307  0312                     	;# 
  3308  0313                     	;# 
  3309  0314                     	;# 
  3310  0314                     	;# 
  3311  0315                     	;# 
  3312  0316                     	;# 
  3313  0317                     	;# 
  3314  0318                     	;# 
  3315  0318                     	;# 
  3316  0319                     	;# 
  3317  031A                     	;# 
  3318  031B                     	;# 
  3319  031C                     	;# 
  3320  031C                     	;# 
  3321  031D                     	;# 
  3322  031E                     	;# 
  3323  031F                     	;# 
  3324  038C                     	;# 
  3325  038D                     	;# 
  3326  038E                     	;# 
  3327  0390                     	;# 
  3328  0391                     	;# 
  3329  0392                     	;# 
  3330  040C                     	;# 
  3331  040D                     	;# 
  3332  040E                     	;# 
  3333  040F                     	;# 
  3334  0410                     	;# 
  3335  0411                     	;# 
  3336  0416                     	;# 
  3337  0416                     	;# 
  3338  0417                     	;# 
  3339  0418                     	;# 
  3340  0418                     	;# 
  3341  0419                     	;# 
  3342  041A                     	;# 
  3343  041A                     	;# 
  3344  041B                     	;# 
  3345  041C                     	;# 
  3346  041C                     	;# 
  3347  041D                     	;# 
  3348  041E                     	;# 
  3349  041F                     	;# 
  3350  048C                     	;# 
  3351  048C                     	;# 
  3352  048D                     	;# 
  3353  048E                     	;# 
  3354  048F                     	;# 
  3355  048F                     	;# 
  3356  0490                     	;# 
  3357  0491                     	;# 
  3358  0492                     	;# 
  3359  0492                     	;# 
  3360  0493                     	;# 
  3361  0494                     	;# 
  3362  0495                     	;# 
  3363  0495                     	;# 
  3364  0496                     	;# 
  3365  0497                     	;# 
  3366  0498                     	;# 
  3367  0499                     	;# 
  3368  049A                     	;# 
  3369  049B                     	;# 
  3370  049C                     	;# 
  3371  049D                     	;# 
  3372  050C                     	;# 
  3373  050C                     	;# 
  3374  050D                     	;# 
  3375  050E                     	;# 
  3376  050F                     	;# 
  3377  050F                     	;# 
  3378  0510                     	;# 
  3379  0511                     	;# 
  3380  0512                     	;# 
  3381  0512                     	;# 
  3382  0513                     	;# 
  3383  0514                     	;# 
  3384  0515                     	;# 
  3385  0515                     	;# 
  3386  0516                     	;# 
  3387  0517                     	;# 
  3388  0518                     	;# 
  3389  0519                     	;# 
  3390  051A                     	;# 
  3391  051B                     	;# 
  3392  051C                     	;# 
  3393  051D                     	;# 
  3394  058C                     	;# 
  3395  058C                     	;# 
  3396  058D                     	;# 
  3397  058E                     	;# 
  3398  058F                     	;# 
  3399  058F                     	;# 
  3400  0590                     	;# 
  3401  0591                     	;# 
  3402  0592                     	;# 
  3403  0593                     	;# 
  3404  060C                     	;# 
  3405  060D                     	;# 
  3406  060E                     	;# 
  3407  060F                     	;# 
  3408  0610                     	;# 
  3409  0611                     	;# 
  3410  0612                     	;# 
  3411  0613                     	;# 
  3412  0614                     	;# 
  3413  0616                     	;# 
  3414  0617                     	;# 
  3415  0618                     	;# 
  3416  0619                     	;# 
  3417  061A                     	;# 
  3418  061B                     	;# 
  3419  061C                     	;# 
  3420  061D                     	;# 
  3421  061E                     	;# 
  3422  068C                     	;# 
  3423  068D                     	;# 
  3424  068E                     	;# 
  3425  068F                     	;# 
  3426  0690                     	;# 
  3427  0691                     	;# 
  3428  0692                     	;# 
  3429  0693                     	;# 
  3430  0694                     	;# 
  3431  070C                     	;# 
  3432  070D                     	;# 
  3433  070E                     	;# 
  3434  070F                     	;# 
  3435  0710                     	;# 
  3436  0711                     	;# 
  3437  0712                     	;# 
  3438  0713                     	;# 
  3439  0714                     	;# 
  3440  0716                     	;# 
  3441  0717                     	;# 
  3442  0718                     	;# 
  3443  0719                     	;# 
  3444  071A                     	;# 
  3445  071B                     	;# 
  3446  071C                     	;# 
  3447  071D                     	;# 
  3448  071E                     	;# 
  3449  0796                     	;# 
  3450  0797                     	;# 
  3451  0798                     	;# 
  3452  0799                     	;# 
  3453  079A                     	;# 
  3454  079B                     	;# 
  3455  080C                     	;# 
  3456  080D                     	;# 
  3457  080E                     	;# 
  3458  080F                     	;# 
  3459  0810                     	;# 
  3460  0811                     	;# 
  3461  0812                     	;# 
  3462  0813                     	;# 
  3463  0814                     	;# 
  3464  081A                     	;# 
  3465  081B                     	;# 
  3466  081C                     	;# 
  3467  081D                     	;# 
  3468  081E                     	;# 
  3469  081F                     	;# 
  3470  088C                     	;# 
  3471  088D                     	;# 
  3472  088E                     	;# 
  3473  088F                     	;# 
  3474  0890                     	;# 
  3475  0891                     	;# 
  3476  0892                     	;# 
  3477  0893                     	;# 
  3478  0895                     	;# 
  3479  0896                     	;# 
  3480  0897                     	;# 
  3481  0898                     	;# 
  3482  0899                     	;# 
  3483  089A                     	;# 
  3484  089B                     	;# 
  3485  090C                     	;# 
  3486  090E                     	;# 
  3487  090F                     	;# 
  3488  091F                     	;# 
  3489  091F                     	;# 
  3490  098F                     	;# 
  3491  098F                     	;# 
  3492  0990                     	;# 
  3493  0991                     	;# 
  3494  0992                     	;# 
  3495  0993                     	;# 
  3496  0994                     	;# 
  3497  0995                     	;# 
  3498  0996                     	;# 
  3499  0997                     	;# 
  3500  0E0F                     	;# 
  3501  0E10                     	;# 
  3502  0E11                     	;# 
  3503  0E12                     	;# 
  3504  0E13                     	;# 
  3505  0E14                     	;# 
  3506  0E15                     	;# 
  3507  0E16                     	;# 
  3508  0E17                     	;# 
  3509  0E18                     	;# 
  3510  0E19                     	;# 
  3511  0E1A                     	;# 
  3512  0E1B                     	;# 
  3513  0E1C                     	;# 
  3514  0E1D                     	;# 
  3515  0E1E                     	;# 
  3516  0E1F                     	;# 
  3517  0E20                     	;# 
  3518  0E21                     	;# 
  3519  0E22                     	;# 
  3520  0E23                     	;# 
  3521  0E24                     	;# 
  3522  0E25                     	;# 
  3523  0E26                     	;# 
  3524  0E27                     	;# 
  3525  0E28                     	;# 
  3526  0E29                     	;# 
  3527  0E2A                     	;# 
  3528  0E2B                     	;# 
  3529  0E2C                     	;# 
  3530  0E2D                     	;# 
  3531  0E2E                     	;# 
  3532  0E2F                     	;# 
  3533  0E30                     	;# 
  3534  0E31                     	;# 
  3535  0E32                     	;# 
  3536  0E33                     	;# 
  3537  0E34                     	;# 
  3538  0E35                     	;# 
  3539  0E36                     	;# 
  3540  0E37                     	;# 
  3541  0E8F                     	;# 
  3542  0E90                     	;# 
  3543  0E91                     	;# 
  3544  0E92                     	;# 
  3545  0E93                     	;# 
  3546  0E94                     	;# 
  3547  0E95                     	;# 
  3548  0E96                     	;# 
  3549  0E97                     	;# 
  3550  0E9C                     	;# 
  3551  0E9D                     	;# 
  3552  0E9E                     	;# 
  3553  0EA1                     	;# 
  3554  0EA2                     	;# 
  3555  0EA3                     	;# 
  3556  0EA4                     	;# 
  3557  0EA5                     	;# 
  3558  0EA9                     	;# 
  3559  0EAA                     	;# 
  3560  0EAB                     	;# 
  3561  0EAC                     	;# 
  3562  0EB1                     	;# 
  3563  0EB2                     	;# 
  3564  0EB3                     	;# 
  3565  0EB8                     	;# 
  3566  0EB9                     	;# 
  3567  0EBA                     	;# 
  3568  0EBB                     	;# 
  3569  0EBC                     	;# 
  3570  0EBD                     	;# 
  3571  0EBE                     	;# 
  3572  0EC3                     	;# 
  3573  0EC5                     	;# 
  3574  0EC6                     	;# 
  3575  0EC7                     	;# 
  3576  0EC8                     	;# 
  3577  0EC9                     	;# 
  3578  0ECA                     	;# 
  3579  0ECB                     	;# 
  3580  0ECC                     	;# 
  3581  0F10                     	;# 
  3582  0F11                     	;# 
  3583  0F12                     	;# 
  3584  0F13                     	;# 
  3585  0F14                     	;# 
  3586  0F15                     	;# 
  3587  0F16                     	;# 
  3588  0F17                     	;# 
  3589  0F18                     	;# 
  3590  0F19                     	;# 
  3591  0F1A                     	;# 
  3592  0F1B                     	;# 
  3593  0F1C                     	;# 
  3594  0F1D                     	;# 
  3595  0F1E                     	;# 
  3596  0F1F                     	;# 
  3597  0F20                     	;# 
  3598  0F21                     	;# 
  3599  0F22                     	;# 
  3600  0F23                     	;# 
  3601  0F24                     	;# 
  3602  0F25                     	;# 
  3603  0F26                     	;# 
  3604  0F27                     	;# 
  3605  0F38                     	;# 
  3606  0F39                     	;# 
  3607  0F3A                     	;# 
  3608  0F3B                     	;# 
  3609  0F3C                     	;# 
  3610  0F3D                     	;# 
  3611  0F3E                     	;# 
  3612  0F3F                     	;# 
  3613  0F40                     	;# 
  3614  0F41                     	;# 
  3615  0F43                     	;# 
  3616  0F44                     	;# 
  3617  0F45                     	;# 
  3618  0F46                     	;# 
  3619  0F47                     	;# 
  3620  0F48                     	;# 
  3621  0F49                     	;# 
  3622  0F4A                     	;# 
  3623  0F4B                     	;# 
  3624  0F4C                     	;# 
  3625  0F4E                     	;# 
  3626  0F4F                     	;# 
  3627  0F50                     	;# 
  3628  0F51                     	;# 
  3629  0F52                     	;# 
  3630  0F53                     	;# 
  3631  0F54                     	;# 
  3632  0F55                     	;# 
  3633  0F56                     	;# 
  3634  0F57                     	;# 
  3635  0F65                     	;# 
  3636  0F68                     	;# 
  3637  0F69                     	;# 
  3638  0F6A                     	;# 
  3639  0F6B                     	;# 
  3640  0FE4                     	;# 
  3641  0FE5                     	;# 
  3642  0FE6                     	;# 
  3643  0FE7                     	;# 
  3644  0FE8                     	;# 
  3645  0FE9                     	;# 
  3646  0FEA                     	;# 
  3647  0FEB                     	;# 
  3648  0FED                     	;# 
  3649  0FEE                     	;# 
  3650  0FEF                     	;# 
  3651  0000                     	;# 
  3652  0001                     	;# 
  3653  0002                     	;# 
  3654  0003                     	;# 
  3655  0004                     	;# 
  3656  0005                     	;# 
  3657  0006                     	;# 
  3658  0007                     	;# 
  3659  0008                     	;# 
  3660  0009                     	;# 
  3661  000A                     	;# 
  3662  000B                     	;# 
  3663  000C                     	;# 
  3664  000D                     	;# 
  3665  000E                     	;# 
  3666  0010                     	;# 
  3667  0011                     	;# 
  3668  0012                     	;# 
  3669  0013                     	;# 
  3670  0016                     	;# 
  3671  0017                     	;# 
  3672  0018                     	;# 
  3673  001C                     	;# 
  3674  001C                     	;# 
  3675  001D                     	;# 
  3676  001D                     	;# 
  3677  001E                     	;# 
  3678  001F                     	;# 
  3679  008C                     	;# 
  3680  008C                     	;# 
  3681  008D                     	;# 
  3682  008E                     	;# 
  3683  008E                     	;# 
  3684  008F                     	;# 
  3685  0090                     	;# 
  3686  0090                     	;# 
  3687  0091                     	;# 
  3688  0093                     	;# 
  3689  0094                     	;# 
  3690  0095                     	;# 
  3691  0096                     	;# 
  3692  0097                     	;# 
  3693  0098                     	;# 
  3694  0099                     	;# 
  3695  009A                     	;# 
  3696  009B                     	;# 
  3697  009C                     	;# 
  3698  009D                     	;# 
  3699  009E                     	;# 
  3700  010C                     	;# 
  3701  010D                     	;# 
  3702  010E                     	;# 
  3703  010E                     	;# 
  3704  010F                     	;# 
  3705  0110                     	;# 
  3706  0110                     	;# 
  3707  0111                     	;# 
  3708  0112                     	;# 
  3709  0112                     	;# 
  3710  0113                     	;# 
  3711  0114                     	;# 
  3712  0114                     	;# 
  3713  0115                     	;# 
  3714  0116                     	;# 
  3715  0116                     	;# 
  3716  0117                     	;# 
  3717  0119                     	;# 
  3718  0119                     	;# 
  3719  0119                     	;# 
  3720  011A                     	;# 
  3721  011A                     	;# 
  3722  011A                     	;# 
  3723  011B                     	;# 
  3724  011B                     	;# 
  3725  011B                     	;# 
  3726  011B                     	;# 
  3727  011B                     	;# 
  3728  011C                     	;# 
  3729  011C                     	;# 
  3730  011C                     	;# 
  3731  011D                     	;# 
  3732  011D                     	;# 
  3733  011D                     	;# 
  3734  011E                     	;# 
  3735  011E                     	;# 
  3736  011E                     	;# 
  3737  011F                     	;# 
  3738  011F                     	;# 
  3739  011F                     	;# 
  3740  011F                     	;# 
  3741  011F                     	;# 
  3742  018C                     	;# 
  3743  018D                     	;# 
  3744  018E                     	;# 
  3745  018F                     	;# 
  3746  0190                     	;# 
  3747  0191                     	;# 
  3748  0192                     	;# 
  3749  0196                     	;# 
  3750  0197                     	;# 
  3751  0198                     	;# 
  3752  0199                     	;# 
  3753  019A                     	;# 
  3754  019B                     	;# 
  3755  019C                     	;# 
  3756  020C                     	;# 
  3757  020D                     	;# 
  3758  020E                     	;# 
  3759  020F                     	;# 
  3760  020F                     	;# 
  3761  0210                     	;# 
  3762  0210                     	;# 
  3763  0211                     	;# 
  3764  0211                     	;# 
  3765  0212                     	;# 
  3766  0213                     	;# 
  3767  0214                     	;# 
  3768  0215                     	;# 
  3769  0215                     	;# 
  3770  0216                     	;# 
  3771  0216                     	;# 
  3772  0217                     	;# 
  3773  0217                     	;# 
  3774  0218                     	;# 
  3775  0219                     	;# 
  3776  021A                     	;# 
  3777  021B                     	;# 
  3778  021B                     	;# 
  3779  021C                     	;# 
  3780  021C                     	;# 
  3781  021D                     	;# 
  3782  021D                     	;# 
  3783  021E                     	;# 
  3784  021F                     	;# 
  3785  028C                     	;# 
  3786  028C                     	;# 
  3787  028D                     	;# 
  3788  028D                     	;# 
  3789  028E                     	;# 
  3790  028F                     	;# 
  3791  0290                     	;# 
  3792  0290                     	;# 
  3793  0291                     	;# 
  3794  0292                     	;# 
  3795  0292                     	;# 
  3796  0293                     	;# 
  3797  0293                     	;# 
  3798  0294                     	;# 
  3799  0295                     	;# 
  3800  0296                     	;# 
  3801  0296                     	;# 
  3802  0297                     	;# 
  3803  0298                     	;# 
  3804  0298                     	;# 
  3805  0299                     	;# 
  3806  0299                     	;# 
  3807  029A                     	;# 
  3808  029B                     	;# 
  3809  029C                     	;# 
  3810  029C                     	;# 
  3811  029D                     	;# 
  3812  030C                     	;# 
  3813  030C                     	;# 
  3814  030D                     	;# 
  3815  030E                     	;# 
  3816  030F                     	;# 
  3817  0310                     	;# 
  3818  0310                     	;# 
  3819  0311                     	;# 
  3820  0312                     	;# 
  3821  0313                     	;# 
  3822  0314                     	;# 
  3823  0314                     	;# 
  3824  0315                     	;# 
  3825  0316                     	;# 
  3826  0317                     	;# 
  3827  0318                     	;# 
  3828  0318                     	;# 
  3829  0319                     	;# 
  3830  031A                     	;# 
  3831  031B                     	;# 
  3832  031C                     	;# 
  3833  031C                     	;# 
  3834  031D                     	;# 
  3835  031E                     	;# 
  3836  031F                     	;# 
  3837  038C                     	;# 
  3838  038D                     	;# 
  3839  038E                     	;# 
  3840  0390                     	;# 
  3841  0391                     	;# 
  3842  0392                     	;# 
  3843  040C                     	;# 
  3844  040D                     	;# 
  3845  040E                     	;# 
  3846  040F                     	;# 
  3847  0410                     	;# 
  3848  0411                     	;# 
  3849  0416                     	;# 
  3850  0416                     	;# 
  3851  0417                     	;# 
  3852  0418                     	;# 
  3853  0418                     	;# 
  3854  0419                     	;# 
  3855  041A                     	;# 
  3856  041A                     	;# 
  3857  041B                     	;# 
  3858  041C                     	;# 
  3859  041C                     	;# 
  3860  041D                     	;# 
  3861  041E                     	;# 
  3862  041F                     	;# 
  3863  048C                     	;# 
  3864  048C                     	;# 
  3865  048D                     	;# 
  3866  048E                     	;# 
  3867  048F                     	;# 
  3868  048F                     	;# 
  3869  0490                     	;# 
  3870  0491                     	;# 
  3871  0492                     	;# 
  3872  0492                     	;# 
  3873  0493                     	;# 
  3874  0494                     	;# 
  3875  0495                     	;# 
  3876  0495                     	;# 
  3877  0496                     	;# 
  3878  0497                     	;# 
  3879  0498                     	;# 
  3880  0499                     	;# 
  3881  049A                     	;# 
  3882  049B                     	;# 
  3883  049C                     	;# 
  3884  049D                     	;# 
  3885  050C                     	;# 
  3886  050C                     	;# 
  3887  050D                     	;# 
  3888  050E                     	;# 
  3889  050F                     	;# 
  3890  050F                     	;# 
  3891  0510                     	;# 
  3892  0511                     	;# 
  3893  0512                     	;# 
  3894  0512                     	;# 
  3895  0513                     	;# 
  3896  0514                     	;# 
  3897  0515                     	;# 
  3898  0515                     	;# 
  3899  0516                     	;# 
  3900  0517                     	;# 
  3901  0518                     	;# 
  3902  0519                     	;# 
  3903  051A                     	;# 
  3904  051B                     	;# 
  3905  051C                     	;# 
  3906  051D                     	;# 
  3907  058C                     	;# 
  3908  058C                     	;# 
  3909  058D                     	;# 
  3910  058E                     	;# 
  3911  058F                     	;# 
  3912  058F                     	;# 
  3913  0590                     	;# 
  3914  0591                     	;# 
  3915  0592                     	;# 
  3916  0593                     	;# 
  3917  060C                     	;# 
  3918  060D                     	;# 
  3919  060E                     	;# 
  3920  060F                     	;# 
  3921  0610                     	;# 
  3922  0611                     	;# 
  3923  0612                     	;# 
  3924  0613                     	;# 
  3925  0614                     	;# 
  3926  0616                     	;# 
  3927  0617                     	;# 
  3928  0618                     	;# 
  3929  0619                     	;# 
  3930  061A                     	;# 
  3931  061B                     	;# 
  3932  061C                     	;# 
  3933  061D                     	;# 
  3934  061E                     	;# 
  3935  068C                     	;# 
  3936  068D                     	;# 
  3937  068E                     	;# 
  3938  068F                     	;# 
  3939  0690                     	;# 
  3940  0691                     	;# 
  3941  0692                     	;# 
  3942  0693                     	;# 
  3943  0694                     	;# 
  3944  070C                     	;# 
  3945  070D                     	;# 
  3946  070E                     	;# 
  3947  070F                     	;# 
  3948  0710                     	;# 
  3949  0711                     	;# 
  3950  0712                     	;# 
  3951  0713                     	;# 
  3952  0714                     	;# 
  3953  0716                     	;# 
  3954  0717                     	;# 
  3955  0718                     	;# 
  3956  0719                     	;# 
  3957  071A                     	;# 
  3958  071B                     	;# 
  3959  071C                     	;# 
  3960  071D                     	;# 
  3961  071E                     	;# 
  3962  0796                     	;# 
  3963  0797                     	;# 
  3964  0798                     	;# 
  3965  0799                     	;# 
  3966  079A                     	;# 
  3967  079B                     	;# 
  3968  080C                     	;# 
  3969  080D                     	;# 
  3970  080E                     	;# 
  3971  080F                     	;# 
  3972  0810                     	;# 
  3973  0811                     	;# 
  3974  0812                     	;# 
  3975  0813                     	;# 
  3976  0814                     	;# 
  3977  081A                     	;# 
  3978  081B                     	;# 
  3979  081C                     	;# 
  3980  081D                     	;# 
  3981  081E                     	;# 
  3982  081F                     	;# 
  3983  088C                     	;# 
  3984  088D                     	;# 
  3985  088E                     	;# 
  3986  088F                     	;# 
  3987  0890                     	;# 
  3988  0891                     	;# 
  3989  0892                     	;# 
  3990  0893                     	;# 
  3991  0895                     	;# 
  3992  0896                     	;# 
  3993  0897                     	;# 
  3994  0898                     	;# 
  3995  0899                     	;# 
  3996  089A                     	;# 
  3997  089B                     	;# 
  3998  090C                     	;# 
  3999  090E                     	;# 
  4000  090F                     	;# 
  4001  091F                     	;# 
  4002  091F                     	;# 
  4003  098F                     	;# 
  4004  098F                     	;# 
  4005  0990                     	;# 
  4006  0991                     	;# 
  4007  0992                     	;# 
  4008  0993                     	;# 
  4009  0994                     	;# 
  4010  0995                     	;# 
  4011  0996                     	;# 
  4012  0997                     	;# 
  4013  0E0F                     	;# 
  4014  0E10                     	;# 
  4015  0E11                     	;# 
  4016  0E12                     	;# 
  4017  0E13                     	;# 
  4018  0E14                     	;# 
  4019  0E15                     	;# 
  4020  0E16                     	;# 
  4021  0E17                     	;# 
  4022  0E18                     	;# 
  4023  0E19                     	;# 
  4024  0E1A                     	;# 
  4025  0E1B                     	;# 
  4026  0E1C                     	;# 
  4027  0E1D                     	;# 
  4028  0E1E                     	;# 
  4029  0E1F                     	;# 
  4030  0E20                     	;# 
  4031  0E21                     	;# 
  4032  0E22                     	;# 
  4033  0E23                     	;# 
  4034  0E24                     	;# 
  4035  0E25                     	;# 
  4036  0E26                     	;# 
  4037  0E27                     	;# 
  4038  0E28                     	;# 
  4039  0E29                     	;# 
  4040  0E2A                     	;# 
  4041  0E2B                     	;# 
  4042  0E2C                     	;# 
  4043  0E2D                     	;# 
  4044  0E2E                     	;# 
  4045  0E2F                     	;# 
  4046  0E30                     	;# 
  4047  0E31                     	;# 
  4048  0E32                     	;# 
  4049  0E33                     	;# 
  4050  0E34                     	;# 
  4051  0E35                     	;# 
  4052  0E36                     	;# 
  4053  0E37                     	;# 
  4054  0E8F                     	;# 
  4055  0E90                     	;# 
  4056  0E91                     	;# 
  4057  0E92                     	;# 
  4058  0E93                     	;# 
  4059  0E94                     	;# 
  4060  0E95                     	;# 
  4061  0E96                     	;# 
  4062  0E97                     	;# 
  4063  0E9C                     	;# 
  4064  0E9D                     	;# 
  4065  0E9E                     	;# 
  4066  0EA1                     	;# 
  4067  0EA2                     	;# 
  4068  0EA3                     	;# 
  4069  0EA4                     	;# 
  4070  0EA5                     	;# 
  4071  0EA9                     	;# 
  4072  0EAA                     	;# 
  4073  0EAB                     	;# 
  4074  0EAC                     	;# 
  4075  0EB1                     	;# 
  4076  0EB2                     	;# 
  4077  0EB3                     	;# 
  4078  0EB8                     	;# 
  4079  0EB9                     	;# 
  4080  0EBA                     	;# 
  4081  0EBB                     	;# 
  4082  0EBC                     	;# 
  4083  0EBD                     	;# 
  4084  0EBE                     	;# 
  4085  0EC3                     	;# 
  4086  0EC5                     	;# 
  4087  0EC6                     	;# 
  4088  0EC7                     	;# 
  4089  0EC8                     	;# 
  4090  0EC9                     	;# 
  4091  0ECA                     	;# 
  4092  0ECB                     	;# 
  4093  0ECC                     	;# 
  4094  0F10                     	;# 
  4095  0F11                     	;# 
  4096  0F12                     	;# 
  4097  0F13                     	;# 
  4098  0F14                     	;# 
  4099  0F15                     	;# 
  4100  0F16                     	;# 
  4101  0F17                     	;# 
  4102  0F18                     	;# 
  4103  0F19                     	;# 
  4104  0F1A                     	;# 
  4105  0F1B                     	;# 
  4106  0F1C                     	;# 
  4107  0F1D                     	;# 
  4108  0F1E                     	;# 
  4109  0F1F                     	;# 
  4110  0F20                     	;# 
  4111  0F21                     	;# 
  4112  0F22                     	;# 
  4113  0F23                     	;# 
  4114  0F24                     	;# 
  4115  0F25                     	;# 
  4116  0F26                     	;# 
  4117  0F27                     	;# 
  4118  0F38                     	;# 
  4119  0F39                     	;# 
  4120  0F3A                     	;# 
  4121  0F3B                     	;# 
  4122  0F3C                     	;# 
  4123  0F3D                     	;# 
  4124  0F3E                     	;# 
  4125  0F3F                     	;# 
  4126  0F40                     	;# 
  4127  0F41                     	;# 
  4128  0F43                     	;# 
  4129  0F44                     	;# 
  4130  0F45                     	;# 
  4131  0F46                     	;# 
  4132  0F47                     	;# 
  4133  0F48                     	;# 
  4134  0F49                     	;# 
  4135  0F4A                     	;# 
  4136  0F4B                     	;# 
  4137  0F4C                     	;# 
  4138  0F4E                     	;# 
  4139  0F4F                     	;# 
  4140  0F50                     	;# 
  4141  0F51                     	;# 
  4142  0F52                     	;# 
  4143  0F53                     	;# 
  4144  0F54                     	;# 
  4145  0F55                     	;# 
  4146  0F56                     	;# 
  4147  0F57                     	;# 
  4148  0F65                     	;# 
  4149  0F68                     	;# 
  4150  0F69                     	;# 
  4151  0F6A                     	;# 
  4152  0F6B                     	;# 
  4153  0FE4                     	;# 
  4154  0FE5                     	;# 
  4155  0FE6                     	;# 
  4156  0FE7                     	;# 
  4157  0FE8                     	;# 
  4158  0FE9                     	;# 
  4159  0FEA                     	;# 
  4160  0FEB                     	;# 
  4161  0FED                     	;# 
  4162  0FEE                     	;# 
  4163  0FEF                     	;_samples
  4164                           
  4165                           	psect	idataBANK1
  4166  1590                     __pidataBANK1:	
  4167                           
  4168                           ;initializer for _channels
  4169  1590  3401               	retlw	1
  4170  1591  3400               	retlw	0
  4171  1592  3403               	retlw	3
  4172  1593  3400               	retlw	0
  4173  1594  3404               	retlw	4
  4174  1595  3400               	retlw	0
  4175  1596  3405               	retlw	5
  4176  1597  3400               	retlw	0
  4177  1598  3409               	retlw	9
  4178  1599  3400               	retlw	0
  4179  159A  340B               	retlw	11
  4180  159B  3400               	retlw	0
  4181                           
  4182                           	psect	idataBANK2
  4183  15B8                     __pidataBANK2:	
  4184                           
  4185                           ;initializer for ___cgram
  4186  15B8  340C               	retlw	12
  4187  15B9  3412               	retlw	18
  4188  15BA  3412               	retlw	18
  4189  15BB  340C               	retlw	12
  4190  15BC  3400               	retlw	0
  4191  15BD  3400               	retlw	0
  4192  15BE  3400               	retlw	0
  4193  15BF  3400               	retlw	0
  4194  15C0  3408               	retlw	8
  4195  15C1  3404               	retlw	4
  4196  15C2  3402               	retlw	2
  4197  15C3  341F               	retlw	31
  4198  15C4  3402               	retlw	2
  4199  15C5  3404               	retlw	4
  4200  15C6  3408               	retlw	8
  4201  15C7  3400               	retlw	0
  4202                           
  4203                           	psect	stringtext
  4204  1000                     __pstringtext:	
  4205  1000                     log@coeff:	
  4206  1000  3400               	retlw	0
  4207  1001  3400               	retlw	0
  4208  1002  3400               	retlw	0
  4209  1003  3400               	retlw	0
  4210  1004  3480               	retlw	128
  4211  1005  343F               	retlw	63
  4212  1006  34F0               	retlw	240
  4213  1007  34FF               	retlw	255
  4214  1008  34BE               	retlw	190
  4215  1009  34E2               	retlw	226
  4216  100A  34A9               	retlw	169
  4217  100B  343E               	retlw	62
  4218  100C  3483               	retlw	131
  4219  100D  3476               	retlw	118
  4220  100E  34BE               	retlw	190
  4221  100F  34AE               	retlw	174
  4222  1010  342B               	retlw	43
  4223  1011  343E               	retlw	62
  4224  1012  343C               	retlw	60
  4225  1013  34C3               	retlw	195
  4226  1014  34BD               	retlw	189
  4227  1015  34D2               	retlw	210
  4228  1016  3413               	retlw	19
  4229  1017  343D               	retlw	61
  4230  1018  3478               	retlw	120
  4231  1019  34D3               	retlw	211
  4232  101A  34BB               	retlw	187
  4233  101B                     __end_oflog@coeff:	
  4234  0016                     _LATA	set	22
  4235  0017                     _LATB	set	23
  4236  0018                     _LATC	set	24
  4237  0011                     _TRISA	set	17
  4238  0012                     _TRISB	set	18
  4239  0013                     _TRISC	set	19
  4240  005F                     _GIE	set	95
  4241  0060                     _RA0	set	96
  4242  0062                     _RA2	set	98
  4243  0066                     _RA6	set	102
  4244  0067                     _RA7	set	103
  4245  0070                     _RC0	set	112
  4246  0071                     _RC1	set	113
  4247  009D                     _ADACQ	set	157
  4248  0099                     _ADACT	set	153
  4249  009B                     _ADCAP	set	155
  4250  0098                     _ADCLK	set	152
  4251  0093                     _ADCON0	set	147
  4252  0093                     _ADCON0bits	set	147
  4253  0094                     _ADCON1	set	148
  4254  0095                     _ADCON2	set	149
  4255  0096                     _ADCON3	set	150
  4256  009E                     _ADPCH	set	158
  4257  009C                     _ADPRE	set	156
  4258  009A                     _ADREF	set	154
  4259  008D                     _ADRESH	set	141
  4260  008C                     _ADRESL	set	140
  4261  0097                     _ADSTAT	set	151
  4262  010F                     _ADLTHH	set	271
  4263  010E                     _ADLTHL	set	270
  4264  010D                     _ADRPT	set	269
  4265  0113                     _ADSTPTH	set	275
  4266  0112                     _ADSTPTL	set	274
  4267  0111                     _ADUTHH	set	273
  4268  0110                     _ADUTHL	set	272
  4269  021F                     _CCPTMRS1bits	set	543
  4270  0290                     _T2CLKCON	set	656
  4271  028E                     _T2CON	set	654
  4272  028E                     _T2CONbits	set	654
  4273  028F                     _T2HLT	set	655
  4274  028D                     _T2PR	set	653
  4275  0291                     _T2RST	set	657
  4276  028C                     _T2TMR	set	652
  4277  038E                     _PWM6CON	set	910
  4278  038D                     _PWM6DCH	set	909
  4279  038C                     _PWM6DCL	set	908
  4280  0716                     _PIE0bits	set	1814
  4281  0710                     _PIR4bits	set	1808
  4282  088D                     _OSCCON1	set	2189
  4283  088F                     _OSCCON3	set	2191
  4284  0891                     _OSCEN	set	2193
  4285  0893                     _OSCFRQ	set	2195
  4286  0892                     _OSCTUNE	set	2194
  4287  090C                     _FVRCON	set	2316
  4288  0E8F                     _PPSLOCK	set	3727
  4289  0E8F                     _PPSLOCKbits	set	3727
  4290  0F38                     _ANSELA	set	3896
  4291  0F43                     _ANSELB	set	3907
  4292  0F4E                     _ANSELC	set	3918
  4293  0F22                     _RC2PPS	set	3874
  4294  0F39                     _WPUA	set	3897
  4295  0F44                     _WPUB	set	3908
  4296  0F4F                     _WPUC	set	3919
  4297  0F65                     _WPUE	set	3941
  4298  101B                     STR_28:	
  4299  101B  3466               	retlw	102	;'f'
  4300  101C  346F               	retlw	111	;'o'
  4301  101D  3472               	retlw	114	;'r'
  4302  101E  3420               	retlw	32	;' '
  4303  101F  3455               	retlw	85	;'U'
  4304  1020  3473               	retlw	115	;'s'
  4305  1021  3465               	retlw	101	;'e'
  4306  1022  3472               	retlw	114	;'r'
  4307  1023  3420               	retlw	32	;' '
  4308  1024  3444               	retlw	68	;'D'
  4309  1025  3469               	retlw	105	;'i'
  4310  1026  3473               	retlw	115	;'s'
  4311  1027  3470               	retlw	112	;'p'
  4312  1028  346C               	retlw	108	;'l'
  4313  1029  3461               	retlw	97	;'a'
  4314  102A  3479               	retlw	121	;'y'
  4315  102B  3400               	retlw	0
  4316  102C                     STR_33:	
  4317  102C  3420               	retlw	32	;' '
  4318  102D  3420               	retlw	32	;' '
  4319  102E  3420               	retlw	32	;' '
  4320  102F  3442               	retlw	66	;'B'
  4321  1030  3461               	retlw	97	;'a'
  4322  1031  3463               	retlw	99	;'c'
  4323  1032  346B               	retlw	107	;'k'
  4324  1033  344C               	retlw	76	;'L'
  4325  1034  3469               	retlw	105	;'i'
  4326  1035  3467               	retlw	103	;'g'
  4327  1036  3468               	retlw	104	;'h'
  4328  1037  3474               	retlw	116	;'t'
  4329  1038  3420               	retlw	32	;' '
  4330  1039  3420               	retlw	32	;' '
  4331  103A  3420               	retlw	32	;' '
  4332  103B  3400               	retlw	0
  4333  103C                     STR_34:	
  4334  103C  3449               	retlw	73	;'I'
  4335  103D  346E               	retlw	110	;'n'
  4336  103E  3474               	retlw	116	;'t'
  4337  103F  3465               	retlw	101	;'e'
  4338  1040  346E               	retlw	110	;'n'
  4339  1041  3473               	retlw	115	;'s'
  4340  1042  3469               	retlw	105	;'i'
  4341  1043  3474               	retlw	116	;'t'
  4342  1044  3479               	retlw	121	;'y'
  4343  1045  343A               	retlw	58	;':'
  4344  1046  3420               	retlw	32	;' '
  4345  1047  3400               	retlw	0
  4346  1048                     STR_27:	
  4347  1048  3459               	retlw	89	;'Y'
  4348  1049  346F               	retlw	111	;'o'
  4349  104A  3475               	retlw	117	;'u'
  4350  104B  3420               	retlw	32	;' '
  4351  104C  3443               	retlw	67	;'C'
  4352  104D  3468               	retlw	104	;'h'
  4353  104E  346F               	retlw	111	;'o'
  4354  104F  3473               	retlw	115	;'s'
  4355  1050  3465               	retlw	101	;'e'
  4356  1051  3420               	retlw	32	;' '
  4357  1052  3400               	retlw	0
  4358  1053                     STR_31:	
  4359  1053  3420               	retlw	32	;' '
  4360  1054  3443               	retlw	67	;'C'
  4361  1055  3468               	retlw	104	;'h'
  4362  1056  346F               	retlw	111	;'o'
  4363  1057  3473               	retlw	115	;'s'
  4364  1058  3465               	retlw	101	;'e'
  4365  1059  346E               	retlw	110	;'n'
  4366  105A  3420               	retlw	32	;' '
  4367  105B  3400               	retlw	0
  4368  105C                     STR_38:	
  4369  105C  3453               	retlw	83	;'S'
  4370  105D  346F               	retlw	111	;'o'
  4371  105E  346C               	retlw	108	;'l'
  4372  105F  3461               	retlw	97	;'a'
  4373  1060  3472               	retlw	114	;'r'
  4374  1061  3400               	retlw	0
  4375  1062                     STR_40:	
  4376  1062  3450               	retlw	80	;'P'
  4377  1063  346F               	retlw	111	;'o'
  4378  1064  346F               	retlw	111	;'o'
  4379  1065  346C               	retlw	108	;'l'
  4380  1066  3400               	retlw	0
  4381  1067                     STR_39:	
  4382  1067  344F               	retlw	79	;'O'
  4383  1068  3475               	retlw	117	;'u'
  4384  1069  3474               	retlw	116	;'t'
  4385  106A  3400               	retlw	0
  4386  106B                     STR_37:	
  4387  106B  3449               	retlw	73	;'I'
  4388  106C  346E               	retlw	110	;'n'
  4389  106D  3400               	retlw	0
  4390  106E                     STR_26:	
  4391  106E  3421               	retlw	33	;'!'
  4392  106F  3400               	retlw	0
  4393  1070                     STR_20:	
  4394  1070  3426               	retlw	38	;'&'
  4395  1071  3400               	retlw	0
  4396  1072                     STR_12:	
  4397  1072  342C               	retlw	44	;','
  4398  1073  3400               	retlw	0
  4399  1074                     STR_1:	
  4400  1074  3441               	retlw	65	;'A'
  4401  1075  3400               	retlw	0
  4402  1076                     STR_7:	
  4403  1076  3444               	retlw	68	;'D'
  4404  1077  3400               	retlw	0
  4405  1078                     STR_18:	
  4406  1078  3445               	retlw	69	;'E'
  4407  1079  3400               	retlw	0
  4408  107A                     STR_4:	
  4409  107A  3448               	retlw	72	;'H'
  4410  107B  3400               	retlw	0
  4411  107C                     STR_10:	
  4412  107C  3449               	retlw	73	;'I'
  4413  107D  3400               	retlw	0
  4414  107E                     STR_22:	
  4415  107E  344B               	retlw	75	;'K'
  4416  107F  3400               	retlw	0
  4417  1080                     STR_2:	
  4418  1080  344C               	retlw	76	;'L'
  4419  1081  3400               	retlw	0
  4420  1082                     STR_3:	
  4421  1082  344F               	retlw	79	;'O'
  4422  1083  3400               	retlw	0
  4423  1084                     STR_15:	
  4424  1084  3450               	retlw	80	;'P'
  4425  1085  3400               	retlw	0
  4426  1086                     STR_13:	
  4427  1086  3453               	retlw	83	;'S'
  4428  1087  3400               	retlw	0
  4429  1088                     STR_9:	
  4430  1088  3456               	retlw	86	;'V'
  4431  1089  3400               	retlw	0
  4432  103A                     
  4433                           ; #config settings
  4434  0000                     
  4435                           	psect	cinit
  4436  07BD                     start_initialization:	
  4437  07BD                     __initialization:		;BIGRAM
  4438                           
  4439                           ; Initialize objects allocated to BANK1
  4440  07BD  3090               	movlw	low __pidataBANK1
  4441  07BE  0084               	movwf	4
  4442  07BF  3095               	movlw	(high __pidataBANK1)| (0+128)
  4443  07C0  0085               	movwf	5
  4444  07C1  30DD               	movlw	low __pdataBANK1
  4445  07C2  0086               	movwf	6
  4446  07C3  3000               	movlw	high __pdataBANK1
  4447  07C4  0087               	movwf	7
  4448  07C5  3000               	movlw	0
  4449  07C6  00FF               	movwf	btemp+1
  4450  07C7  300C               	movlw	12
  4451  07C8  3195  2584  3187   	fcall	init_ram
  4452                           
  4453                           ; Initialize objects allocated to BANK2
  4454  07CB  30B8               	movlw	low __pidataBANK2
  4455  07CC  0084               	movwf	4
  4456  07CD  3095               	movlw	(high __pidataBANK2)| (0+128)
  4457  07CE  0085               	movwf	5
  4458  07CF  3020               	movlw	low __pdataBANK2
  4459  07D0  0086               	movwf	6
  4460  07D1  3001               	movlw	high __pdataBANK2
  4461  07D2  0087               	movwf	7
  4462  07D3  3000               	movlw	0
  4463  07D4  00FF               	movwf	btemp+1
  4464  07D5  3010               	movlw	16
  4465  07D6  3195  2584  3187   	fcall	init_ram
  4466                           
  4467                           ; Clear objects allocated to BIGRAM
  4468  07D9  3000               	movlw	low (0+8960)
  4469  07DA  0084               	movwf	4
  4470  07DB  3023               	movlw	high (0+8960)
  4471  07DC  0085               	movwf	5
  4472  07DD  30F0               	movlw	240
  4473  07DE  00FE               	movwf	btemp
  4474  07DF  3000               	movlw	0
  4475  07E0  00FF               	movwf	btemp+1
  4476  07E1  3195  2578  3187   	fcall	clear_ram0
  4477                           
  4478                           ; Clear objects allocated to BANK0
  4479  07E4  01EC               	clrf	__pbssBANK0& (0+127)
  4480  07E5  01ED               	clrf	(__pbssBANK0+1)& (0+127)
  4481  07E6  01EE               	clrf	(__pbssBANK0+2)& (0+127)
  4482  07E7  01EF               	clrf	(__pbssBANK0+3)& (0+127)
  4483                           
  4484                           ; Clear objects allocated to BANK1
  4485  07E8  30C0               	movlw	low __pbssBANK1
  4486  07E9  0084               	movwf	4
  4487  07EA  3000               	movlw	high __pbssBANK1
  4488  07EB  0085               	movwf	5
  4489  07EC  301D               	movlw	29
  4490  07ED  00FE               	movwf	btemp
  4491  07EE  3000               	movlw	0
  4492  07EF  00FF               	movwf	btemp+1
  4493  07F0  3195  2578  3187   	fcall	clear_ram0
  4494                           
  4495                           ; Clear objects allocated to BANK2
  4496  07F3  3030               	movlw	low __pbssBANK2
  4497  07F4  0084               	movwf	4
  4498  07F5  3001               	movlw	high __pbssBANK2
  4499  07F6  0085               	movwf	5
  4500  07F7  300C               	movlw	12
  4501  07F8  00FE               	movwf	btemp
  4502  07F9  3000               	movlw	0
  4503  07FA  00FF               	movwf	btemp+1
  4504  07FB  3195  2578         	fcall	clear_ram0
  4505  07FD                     end_of_initialization:	
  4506                           ;End of C runtime variable initialization code
  4507                           
  4508  07FD                     __end_of__initialization:	
  4509  07FD  0020               	movlb	0
  4510  07FE  3181  2919         	ljmp	_main	;jump to C main() function
  4511                           
  4512                           	psect	bssBANK0
  4513  006C                     __pbssBANK0:	
  4514  006C                     _errno:	
  4515  006C                     	ds	2
  4516  006E                     _sampleIndex:	
  4517  006E                     	ds	2
  4518                           
  4519                           	psect	bssBANK1
  4520  00C0                     __pbssBANK1:	
  4521  00C0                     _totals:	
  4522  00C0                     	ds	24
  4523  00D8                     LCD_Write_Int@F13687:	
  4524  00D8                     	ds	5
  4525                           
  4526                           	psect	dataBANK1
  4527  00DD                     __pdataBANK1:	
  4528  00DD                     _channels:	
  4529  00DD                     	ds	12
  4530                           
  4531                           	psect	bssBANK2
  4532  0130                     __pbssBANK2:	
  4533  0130                     main@F13657:	
  4534  0130                     	ds	12
  4535                           
  4536                           	psect	dataBANK2
  4537  0120                     __pdataBANK2:	
  4538  0120                     ___cgram:	
  4539  0120                     	ds	16
  4540                           
  4541                           	psect	inittext
  4542  1584                     init_ram:	
  4543  1584  00FE               	movwf	126
  4544  1585                     initloop:	
  4545  1585  0012               	moviw fsr0++
  4546  1586  001E               	movwi fsr1++
  4547  1587  3001               	movlw	1
  4548  1588  02FE               	subwf	126,f
  4549  1589  3000               	movlw	0
  4550  158A  3BFF               	subwfb	127,f
  4551  158B  087F               	movf	127,w
  4552  158C  047E               	iorwf	126,w
  4553  158D  1903               	btfsc	3,2
  4554  158E  3400               	retlw	0
  4555  158F  2D85               	goto	initloop
  4556                           
  4557                           	psect	clrtext
  4558  1578                     clear_ram0:	
  4559                           ;	Called with FSR0 containing the base address, and
  4560                           ;	btemp/btemp+1 has the size to clear
  4561                           
  4562  1578  0064               	clrwdt	;clear the watchdog before getting into this loop
  4563  1579                     clrloop0:	
  4564  1579  0180               	clrf	0	;clear RAM location pointed to by FSR
  4565  157A  3101               	addfsr 0,1
  4566  157B  3001               	movlw	1
  4567  157C  02FE               	subwf	126,f
  4568  157D  3000               	movlw	0
  4569  157E  3BFF               	subwfb	127,f
  4570  157F  087F               	movf	127,w
  4571  1580  047E               	iorwf	126,w
  4572  1581  1903               	btfsc	3,2
  4573  1582  3400               	retlw	0	;all done for this memory range, return
  4574  1583  2D79               	goto	clrloop0	;have we reached the end yet?
  4575                           
  4576                           	psect	cstackBANK1
  4577  00A0                     __pcstackBANK1:	
  4578  00A0                     _main$991:	
  4579                           
  4580                           ; 3 bytes @ 0x0
  4581  00A0                     	ds	3
  4582  00A3                     main@loop:	
  4583                           
  4584                           ; 1 bytes @ 0x3
  4585  00A3                     	ds	1
  4586  00A4                     main@startDelay:	
  4587                           
  4588                           ; 1 bytes @ 0x4
  4589  00A4                     	ds	1
  4590  00A5                     main@analogs:	
  4591                           
  4592                           ; 12 bytes @ 0x5
  4593  00A5                     	ds	12
  4594  00B1                     main@bCount:	
  4595                           
  4596                           ; 2 bytes @ 0x11
  4597  00B1                     	ds	2
  4598  00B3                     main@displayTemp:	
  4599                           
  4600                           ; 3 bytes @ 0x13
  4601  00B3                     	ds	3
  4602  00B6                     main@displayTemp2:	
  4603                           
  4604                           ; 3 bytes @ 0x16
  4605  00B6                     	ds	3
  4606  00B9                     main@resetDelay:	
  4607                           
  4608                           ; 1 bytes @ 0x19
  4609  00B9                     	ds	1
  4610  00BA                     main@tPadCount:	
  4611                           
  4612                           ; 1 bytes @ 0x1A
  4613  00BA                     	ds	1
  4614  00BB                     main@choice:	
  4615                           
  4616                           ; 1 bytes @ 0x1B
  4617  00BB                     	ds	1
  4618  00BC                     main@C_or_F:	
  4619                           
  4620                           ; 1 bytes @ 0x1C
  4621  00BC                     	ds	1
  4622  00BD                     main@x:	
  4623                           
  4624                           ; 1 bytes @ 0x1D
  4625  00BD                     	ds	1
  4626  00BE                     main@dutyCycle:	
  4627                           
  4628                           ; 2 bytes @ 0x1E
  4629  00BE                     	ds	2
  4630                           
  4631                           	psect	cstackCOMMON
  4632  0070                     __pcstackCOMMON:	
  4633  0070                     ?___ftge:	
  4634  0070                     ?_LCD_Cmd:	
  4635                           ; 1 bit 
  4636                           
  4637  0070                     ?_LCD_Write_Char:	
  4638                           ; 1 bytes @ 0x0
  4639                           
  4640  0070                     ?_OSCILLATOR_Initialize:	
  4641                           ; 1 bytes @ 0x0
  4642                           
  4643  0070                     ??_OSCILLATOR_Initialize:	
  4644                           ; 1 bytes @ 0x0
  4645                           
  4646  0070                     ?_TMR2_Initialize:	
  4647                           ; 1 bytes @ 0x0
  4648                           
  4649  0070                     ??_TMR2_Initialize:	
  4650                           ; 1 bytes @ 0x0
  4651                           
  4652  0070                     ?_ADCC_Initialize:	
  4653                           ; 1 bytes @ 0x0
  4654                           
  4655  0070                     ??_ADCC_Initialize:	
  4656                           ; 1 bytes @ 0x0
  4657                           
  4658  0070                     ?_InitCustomChars:	
  4659                           ; 1 bytes @ 0x0
  4660                           
  4661  0070                     ?_LCD_Port:	
  4662                           ; 1 bytes @ 0x0
  4663                           
  4664  0070                     ??_LCD_Port:	
  4665                           ; 1 bytes @ 0x0
  4666                           
  4667  0070                     ?_LCD_Clear:	
  4668                           ; 1 bytes @ 0x0
  4669                           
  4670  0070                     ?_LCD_Init:	
  4671                           ; 1 bytes @ 0x0
  4672                           
  4673  0070                     ?_PIN_MANAGER_Initialize:	
  4674                           ; 1 bytes @ 0x0
  4675                           
  4676  0070                     ??_PIN_MANAGER_Initialize:	
  4677                           ; 1 bytes @ 0x0
  4678                           
  4679  0070                     ?_PWM6_Initialize:	
  4680                           ; 1 bytes @ 0x0
  4681                           
  4682  0070                     ??_PWM6_Initialize:	
  4683                           ; 1 bytes @ 0x0
  4684                           
  4685  0070                     ?_PWM6_LoadDutyValue:	
  4686                           ; 1 bytes @ 0x0
  4687                           
  4688  0070                     ?_SYSTEM_Initialize:	
  4689                           ; 1 bytes @ 0x0
  4690                           
  4691  0070                     ?_main:	
  4692                           ; 1 bytes @ 0x0
  4693                           
  4694  0070                     ?_ADCRead:	
  4695                           ; 1 bytes @ 0x0
  4696                           
  4697  0070                     ?___wmul:	
  4698                           ; 2 bytes @ 0x0
  4699                           
  4700  0070                     ?___awdiv:	
  4701                           ; 2 bytes @ 0x0
  4702                           
  4703  0070                     ?___awmod:	
  4704                           ; 2 bytes @ 0x0
  4705                           
  4706  0070                     ?___lwdiv:	
  4707                           ; 2 bytes @ 0x0
  4708                           
  4709  0070                     ?___ftpack:	
  4710                           ; 2 bytes @ 0x0
  4711                           
  4712  0070                     ?_frexp:	
  4713                           ; 3 bytes @ 0x0
  4714                           
  4715  0070                     ?___aldiv:	
  4716                           ; 3 bytes @ 0x0
  4717                           
  4718  0070                     ?___fttol:	
  4719                           ; 4 bytes @ 0x0
  4720                           
  4721  0070                     LCD_Port@a:	
  4722                           ; 4 bytes @ 0x0
  4723                           
  4724  0070                     PIN_MANAGER_Initialize@state:	
  4725                           ; 1 bytes @ 0x0
  4726                           
  4727  0070                     PWM6_LoadDutyValue@dutyCycle:	
  4728                           ; 1 bytes @ 0x0
  4729                           
  4730  0070                     ___wmul@multiplier:	
  4731                           ; 2 bytes @ 0x0
  4732                           
  4733  0070                     ___awdiv@divisor:	
  4734                           ; 2 bytes @ 0x0
  4735                           
  4736  0070                     ___awmod@divisor:	
  4737                           ; 2 bytes @ 0x0
  4738                           
  4739  0070                     ___lwdiv@divisor:	
  4740                           ; 2 bytes @ 0x0
  4741                           
  4742  0070                     ___ftpack@arg:	
  4743                           ; 2 bytes @ 0x0
  4744                           
  4745  0070                     ___ftge@ff1:	
  4746                           ; 3 bytes @ 0x0
  4747                           
  4748  0070                     ___fttol@f1:	
  4749                           ; 3 bytes @ 0x0
  4750                           
  4751  0070                     frexp@value:	
  4752                           ; 3 bytes @ 0x0
  4753                           
  4754  0070                     ___aldiv@divisor:	
  4755                           ; 3 bytes @ 0x0
  4756                           
  4757                           
  4758                           ; 4 bytes @ 0x0
  4759  0070                     	ds	1
  4760  0071                     ??_LCD_Cmd:	
  4761  0071                     ??_LCD_Write_Char:	
  4762                           ; 1 bytes @ 0x1
  4763                           
  4764                           
  4765                           ; 1 bytes @ 0x1
  4766  0071                     	ds	1
  4767  0072                     ??_PWM6_LoadDutyValue:	
  4768  0072                     LCD_Write_Char@temp:	
  4769                           ; 1 bytes @ 0x2
  4770                           
  4771  0072                     ___wmul@multiplicand:	
  4772                           ; 1 bytes @ 0x2
  4773                           
  4774  0072                     ___awdiv@dividend:	
  4775                           ; 2 bytes @ 0x2
  4776                           
  4777  0072                     ___awmod@dividend:	
  4778                           ; 2 bytes @ 0x2
  4779                           
  4780  0072                     ___lwdiv@dividend:	
  4781                           ; 2 bytes @ 0x2
  4782                           
  4783                           
  4784                           ; 2 bytes @ 0x2
  4785  0072                     	ds	1
  4786  0073                     ??_ADCRead:	
  4787  0073                     ADCRead@channel:	
  4788                           ; 1 bytes @ 0x3
  4789                           
  4790  0073                     LCD_Cmd@a:	
  4791                           ; 1 bytes @ 0x3
  4792                           
  4793  0073                     LCD_Write_Char@y:	
  4794                           ; 1 bytes @ 0x3
  4795                           
  4796  0073                     ___ftpack@exp:	
  4797                           ; 1 bytes @ 0x3
  4798                           
  4799  0073                     frexp@eptr:	
  4800                           ; 1 bytes @ 0x3
  4801                           
  4802  0073                     ___ftge@ff2:	
  4803                           ; 1 bytes @ 0x3
  4804                           
  4805                           
  4806                           ; 3 bytes @ 0x3
  4807  0073                     	ds	1
  4808  0074                     ??_frexp:	
  4809  0074                     ??_LCD_Clear:	
  4810                           ; 1 bytes @ 0x4
  4811                           
  4812  0074                     ?_LCD_Set_Cursor:	
  4813                           ; 1 bytes @ 0x4
  4814                           
  4815  0074                     ??_LCD_Init:	
  4816                           ; 1 bytes @ 0x4
  4817                           
  4818  0074                     ??___wmul:	
  4819                           ; 1 bytes @ 0x4
  4820                           
  4821  0074                     ??___awdiv:	
  4822                           ; 1 bytes @ 0x4
  4823                           
  4824  0074                     ??___awmod:	
  4825                           ; 1 bytes @ 0x4
  4826                           
  4827  0074                     ??___fttol:	
  4828                           ; 1 bytes @ 0x4
  4829                           
  4830  0074                     ??___lwdiv:	
  4831                           ; 1 bytes @ 0x4
  4832                           
  4833  0074                     LCD_Set_Cursor@y:	
  4834                           ; 1 bytes @ 0x4
  4835                           
  4836  0074                     LCD_Write_Char@a:	
  4837                           ; 1 bytes @ 0x4
  4838                           
  4839  0074                     ___ftpack@sign:	
  4840                           ; 1 bytes @ 0x4
  4841                           
  4842  0074                     ___wmul@product:	
  4843                           ; 1 bytes @ 0x4
  4844                           
  4845  0074                     ___aldiv@dividend:	
  4846                           ; 2 bytes @ 0x4
  4847                           
  4848                           
  4849                           ; 4 bytes @ 0x4
  4850  0074                     	ds	1
  4851  0075                     ??___ftpack:	
  4852  0075                     ??_InitCustomChars:	
  4853                           ; 1 bytes @ 0x5
  4854                           
  4855  0075                     ??_LCD_Set_Cursor:	
  4856                           ; 1 bytes @ 0x5
  4857                           
  4858  0075                     ?_LCD_Write_String:	
  4859                           ; 1 bytes @ 0x5
  4860                           
  4861  0075                     ___awdiv@counter:	
  4862                           ; 1 bytes @ 0x5
  4863                           
  4864  0075                     ___awmod@counter:	
  4865                           ; 1 bytes @ 0x5
  4866                           
  4867  0075                     LCD_Write_String@a:	
  4868                           ; 1 bytes @ 0x5
  4869                           
  4870  0075                     ___lwdiv@quotient:	
  4871                           ; 2 bytes @ 0x5
  4872                           
  4873                           
  4874                           ; 2 bytes @ 0x5
  4875  0075                     	ds	1
  4876  0076                     ??___ftge:	
  4877  0076                     InitCustomChars@i:	
  4878                           ; 1 bytes @ 0x6
  4879                           
  4880  0076                     ___awdiv@sign:	
  4881                           ; 1 bytes @ 0x6
  4882                           
  4883  0076                     ___awmod@sign:	
  4884                           ; 1 bytes @ 0x6
  4885                           
  4886                           
  4887                           ; 1 bytes @ 0x6
  4888  0076                     	ds	1
  4889  0077                     ??_LCD_Write_String:	
  4890  0077                     LCD_Set_Cursor@x:	
  4891                           ; 1 bytes @ 0x7
  4892                           
  4893  0077                     LCD_Init@style:	
  4894                           ; 1 bytes @ 0x7
  4895                           
  4896  0077                     ___lwdiv@counter:	
  4897                           ; 1 bytes @ 0x7
  4898                           
  4899  0077                     ___awdiv@quotient:	
  4900                           ; 1 bytes @ 0x7
  4901                           
  4902                           
  4903                           ; 2 bytes @ 0x7
  4904  0077                     	ds	1
  4905  0078                     ??_SYSTEM_Initialize:	
  4906  0078                     ??___aldiv:	
  4907                           ; 1 bytes @ 0x8
  4908                           
  4909  0078                     ?___awtoft:	
  4910                           ; 1 bytes @ 0x8
  4911                           
  4912  0078                     LCD_Set_Cursor@z:	
  4913                           ; 3 bytes @ 0x8
  4914                           
  4915  0078                     ___fttol@sign1:	
  4916                           ; 1 bytes @ 0x8
  4917                           
  4918  0078                     LCD_Write_String@i:	
  4919                           ; 1 bytes @ 0x8
  4920                           
  4921  0078                     ___awtoft@c:	
  4922                           ; 2 bytes @ 0x8
  4923                           
  4924                           
  4925                           ; 2 bytes @ 0x8
  4926  0078                     	ds	1
  4927  0079                     LCD_Set_Cursor@w:	
  4928  0079                     readAnalog@analog_channel:	
  4929                           ; 1 bytes @ 0x9
  4930                           
  4931  0079                     ___fttol@lval:	
  4932                           ; 2 bytes @ 0x9
  4933                           
  4934                           
  4935                           ; 4 bytes @ 0x9
  4936  0079                     	ds	1
  4937  007A                     LCD_Set_Cursor@temp:	
  4938                           
  4939                           ; 1 bytes @ 0xA
  4940  007A                     	ds	1
  4941  007B                     ??___awtoft:	
  4942  007B                     readAnalog@value:	
  4943                           ; 1 bytes @ 0xB
  4944                           
  4945                           
  4946                           ; 2 bytes @ 0xB
  4947  007B                     	ds	2
  4948  007D                     ___awtoft@sign:	
  4949  007D                     ___fttol@exp1:	
  4950                           ; 1 bytes @ 0xD
  4951                           
  4952                           
  4953                           ; 1 bytes @ 0xD
  4954  007D                     	ds	1
  4955  007E                     ??_eval_poly:	
  4956  007E                     ??_tempCalc:	
  4957                           ; 1 bytes @ 0xE
  4958                           
  4959  007E                     ??___ftsub:	
  4960                           ; 1 bytes @ 0xE
  4961                           
  4962                           
  4963                           	psect	cstackBANK0
  4964  0020                     __pcstackBANK0:	
  4965                           ; 1 bytes @ 0xE
  4966                           
  4967  0020                     ?_LCD_Write_Int:	
  4968  0020                     ?___ftmul:	
  4969                           ; 1 bytes @ 0x0
  4970                           
  4971  0020                     ___aldiv@counter:	
  4972                           ; 3 bytes @ 0x0
  4973                           
  4974  0020                     LCD_Write_Int@value:	
  4975                           ; 1 bytes @ 0x0
  4976                           
  4977  0020                     ___ftmul@f1:	
  4978                           ; 2 bytes @ 0x0
  4979                           
  4980                           
  4981                           ; 3 bytes @ 0x0
  4982  0020                     	ds	1
  4983  0021                     ___aldiv@sign:	
  4984                           
  4985                           ; 1 bytes @ 0x1
  4986  0021                     	ds	1
  4987  0022                     LCD_Write_Int@fieldLength:	
  4988  0022                     ___aldiv@quotient:	
  4989                           ; 1 bytes @ 0x2
  4990                           
  4991                           
  4992                           ; 4 bytes @ 0x2
  4993  0022                     	ds	1
  4994  0023                     LCD_Write_Int@numPlaces:	
  4995  0023                     ___ftmul@f2:	
  4996                           ; 1 bytes @ 0x3
  4997                           
  4998                           
  4999                           ; 3 bytes @ 0x3
  5000  0023                     	ds	1
  5001  0024                     LCD_Write_Int@sign:	
  5002                           
  5003                           ; 1 bytes @ 0x4
  5004  0024                     	ds	1
  5005  0025                     ??_LCD_Write_Int:	
  5006                           
  5007                           ; 1 bytes @ 0x5
  5008  0025                     	ds	1
  5009  0026                     ??___ftmul:	
  5010  0026                     ?_readAnalog:	
  5011                           ; 1 bytes @ 0x6
  5012                           
  5013  0026                     readAnalog@channel:	
  5014                           ; 2 bytes @ 0x6
  5015                           
  5016                           
  5017                           ; 2 bytes @ 0x6
  5018  0026                     	ds	2
  5019  0028                     ??_readAnalog:	
  5020                           
  5021                           ; 1 bytes @ 0x8
  5022  0028                     	ds	2
  5023  002A                     ___ftmul@exp:	
  5024  002A                     LCD_Write_Int@str:	
  5025                           ; 1 bytes @ 0xA
  5026                           
  5027                           
  5028                           ; 5 bytes @ 0xA
  5029  002A                     	ds	1
  5030  002B                     ___ftmul@f3_as_product:	
  5031                           
  5032                           ; 3 bytes @ 0xB
  5033  002B                     	ds	3
  5034  002E                     ___ftmul@cntr:	
  5035                           
  5036                           ; 1 bytes @ 0xE
  5037  002E                     	ds	1
  5038  002F                     ___ftmul@sign:	
  5039  002F                     LCD_Write_Int@j:	
  5040                           ; 1 bytes @ 0xF
  5041                           
  5042                           
  5043                           ; 2 bytes @ 0xF
  5044  002F                     	ds	1
  5045  0030                     ?___ftdiv:	
  5046  0030                     ___ftdiv@f2:	
  5047                           ; 3 bytes @ 0x10
  5048                           
  5049                           
  5050                           ; 3 bytes @ 0x10
  5051  0030                     	ds	1
  5052  0031                     LCD_Write_Int@i:	
  5053                           
  5054                           ; 2 bytes @ 0x11
  5055  0031                     	ds	2
  5056  0033                     ___ftdiv@f1:	
  5057                           
  5058                           ; 3 bytes @ 0x13
  5059  0033                     	ds	3
  5060  0036                     ??___ftdiv:	
  5061                           
  5062                           ; 1 bytes @ 0x16
  5063  0036                     	ds	4
  5064  003A                     ___ftdiv@cntr:	
  5065                           
  5066                           ; 1 bytes @ 0x1A
  5067  003A                     	ds	1
  5068  003B                     ___ftdiv@f3:	
  5069                           
  5070                           ; 3 bytes @ 0x1B
  5071  003B                     	ds	3
  5072  003E                     ___ftdiv@exp:	
  5073                           
  5074                           ; 1 bytes @ 0x1E
  5075  003E                     	ds	1
  5076  003F                     ___ftdiv@sign:	
  5077                           
  5078                           ; 1 bytes @ 0x1F
  5079  003F                     	ds	1
  5080  0040                     ?___ftadd:	
  5081  0040                     ___ftadd@f1:	
  5082                           ; 3 bytes @ 0x20
  5083                           
  5084                           
  5085                           ; 3 bytes @ 0x20
  5086  0040                     	ds	3
  5087  0043                     ___ftadd@f2:	
  5088                           
  5089                           ; 3 bytes @ 0x23
  5090  0043                     	ds	3
  5091  0046                     ??___ftadd:	
  5092                           
  5093                           ; 1 bytes @ 0x26
  5094  0046                     	ds	4
  5095  004A                     ___ftadd@sign:	
  5096                           
  5097                           ; 1 bytes @ 0x2A
  5098  004A                     	ds	1
  5099  004B                     ___ftadd@exp2:	
  5100                           
  5101                           ; 1 bytes @ 0x2B
  5102  004B                     	ds	1
  5103  004C                     ___ftadd@exp1:	
  5104                           
  5105                           ; 1 bytes @ 0x2C
  5106  004C                     	ds	1
  5107  004D                     ?_eval_poly:	
  5108  004D                     ?___ftsub:	
  5109                           ; 3 bytes @ 0x2D
  5110                           
  5111  004D                     ___ftsub@f2:	
  5112                           ; 3 bytes @ 0x2D
  5113                           
  5114  004D                     eval_poly@x:	
  5115                           ; 3 bytes @ 0x2D
  5116                           
  5117                           
  5118                           ; 3 bytes @ 0x2D
  5119  004D                     	ds	3
  5120  0050                     eval_poly@d:	
  5121  0050                     ___ftsub@f1:	
  5122                           ; 2 bytes @ 0x30
  5123                           
  5124                           
  5125                           ; 3 bytes @ 0x30
  5126  0050                     	ds	2
  5127  0052                     eval_poly@n:	
  5128                           
  5129                           ; 2 bytes @ 0x32
  5130  0052                     	ds	2
  5131  0054                     eval_poly@res:	
  5132                           
  5133                           ; 3 bytes @ 0x34
  5134  0054                     	ds	3
  5135  0057                     ?_log:	
  5136  0057                     log@x:	
  5137                           ; 3 bytes @ 0x37
  5138                           
  5139                           
  5140                           ; 3 bytes @ 0x37
  5141  0057                     	ds	3
  5142  005A                     ??_log:	
  5143                           
  5144                           ; 1 bytes @ 0x3A
  5145  005A                     	ds	1
  5146  005B                     log@exponent:	
  5147                           
  5148                           ; 2 bytes @ 0x3B
  5149  005B                     	ds	2
  5150  005D                     ?_tempCalc:	
  5151  005D                     tempCalc@analogValue:	
  5152                           ; 3 bytes @ 0x3D
  5153                           
  5154                           
  5155                           ; 2 bytes @ 0x3D
  5156  005D                     	ds	3
  5157  0060                     tempCalc@R:	
  5158                           
  5159                           ; 3 bytes @ 0x40
  5160  0060                     	ds	3
  5161  0063                     _tempCalc$990:	
  5162                           
  5163                           ; 3 bytes @ 0x43
  5164  0063                     	ds	3
  5165  0066                     tempCalc@steinhart:	
  5166                           
  5167                           ; 3 bytes @ 0x46
  5168  0066                     	ds	3
  5169  0069                     ??_main:	
  5170                           
  5171                           ; 1 bytes @ 0x49
  5172  0069                     	ds	3
  5173                           
  5174                           	psect	maintext
  5175  0119                     __pmaintext:	
  5176 ;;
  5177 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  5178 ;;
  5179 ;; *************** function _main *****************
  5180 ;; Defined at:
  5181 ;;		line 15 in file "main.c"
  5182 ;; Parameters:    Size  Location     Type
  5183 ;;		None
  5184 ;; Auto vars:     Size  Location     Type
  5185 ;;  analogs        12    5[BANK1 ] unsigned int [6]
  5186 ;;  displayTemp2    3   22[BANK1 ] float 
  5187 ;;  displayTemp     3   19[BANK1 ] float 
  5188 ;;  dutyCycle       2   30[BANK1 ] unsigned int 
  5189 ;;  bCount          2   17[BANK1 ] unsigned int 
  5190 ;;  x               1   29[BANK1 ] unsigned char 
  5191 ;;  C_or_F          1   28[BANK1 ] unsigned char 
  5192 ;;  choice          1   27[BANK1 ] unsigned char 
  5193 ;;  tPadCount       1   26[BANK1 ] unsigned char 
  5194 ;;  resetDelay      1   25[BANK1 ] unsigned char 
  5195 ;;  startDelay      1    4[BANK1 ] unsigned char 
  5196 ;;  loop            1    3[BANK1 ] unsigned char 
  5197 ;; Return value:  Size  Location     Type
  5198 ;;                  1    wreg      void 
  5199 ;; Registers used:
  5200 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5201 ;; Tracked objects:
  5202 ;;		On entry : B1F/0
  5203 ;;		On exit  : 0/0
  5204 ;;		Unchanged: 0/0
  5205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5207 ;;      Locals:         0       0      32       0       0       0       0       0       0       0       0       0       
      +0       0
  5208 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5209 ;;      Totals:         0       3      32       0       0       0       0       0       0       0       0       0       
      +0       0
  5210 ;;Total ram usage:       35 bytes
  5211 ;; Hardware stack levels required when called:    5
  5212 ;; This function calls:
  5213 ;;		_ADCRead
  5214 ;;		_LCD_Clear
  5215 ;;		_LCD_Set_Cursor
  5216 ;;		_LCD_Write_Char
  5217 ;;		_LCD_Write_Int
  5218 ;;		_LCD_Write_String
  5219 ;;		_PWM6_LoadDutyValue
  5220 ;;		_SYSTEM_Initialize
  5221 ;;		___ftadd
  5222 ;;		___ftdiv
  5223 ;;		___ftmul
  5224 ;;		___fttol
  5225 ;;		___lwdiv
  5226 ;;		_readAnalog
  5227 ;;		_tempCalc
  5228 ;; This function is called by:
  5229 ;;		Startup code after reset
  5230 ;; This function uses a non-reentrant model
  5231 ;;
  5232                           
  5233                           
  5234                           ;psect for function _main
  5235  0119                     _main:	
  5236                           
  5237                           ;main.c: 17: SYSTEM_Initialize();
  5238                           
  5239                           ;incstack = 0
  5240                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5241  0119  3197  27BE  3181   	fcall	_SYSTEM_Initialize
  5242                           
  5243                           ;main.c: 19: uint16_t analogs[6] = {0};
  5244  011C  3030               	movlw	low main@F13657
  5245  011D  0086               	movwf	6
  5246  011E  3001               	movlw	high main@F13657
  5247  011F  0087               	movwf	7
  5248  0120  30A5               	movlw	low main@analogs
  5249  0121  0084               	movwf	4
  5250  0122  3000               	movlw	high main@analogs
  5251  0123  0085               	movwf	5
  5252  0124  300C               	movlw	12
  5253  0125  0020               	movlb	0	; select bank0
  5254  0126  00E9               	movwf	??_main
  5255  0127                     u3210:	
  5256  0127  0016               	moviw fsr1++
  5257  0128  001A               	movwi fsr0++
  5258  0129  0BE9               	decfsz	??_main,f
  5259  012A  2927               	goto	u3210
  5260                           
  5261                           ;main.c: 21: float displayTemp, displayTemp2;
  5262                           ;main.c: 25: char x = 0;
  5263  012B  0021               	movlb	1	; select bank1
  5264  012C  01BD               	clrf	main@x^(0+128)
  5265                           
  5266                           ;main.c: 27: char loop = 64;
  5267  012D  3040               	movlw	64
  5268  012E  0020               	movlb	0	; select bank0
  5269  012F  00E9               	movwf	??_main
  5270  0130  0869               	movf	??_main,w
  5271  0131  0021               	movlb	1	; select bank1
  5272  0132  00A3               	movwf	main@loop^(0+128)
  5273                           
  5274                           ;main.c: 29: char choice = 2;
  5275  0133  3002               	movlw	2
  5276  0134  0020               	movlb	0	; select bank0
  5277  0135  00E9               	movwf	??_main
  5278  0136  0869               	movf	??_main,w
  5279  0137  0021               	movlb	1	; select bank1
  5280  0138  00BB               	movwf	main@choice^(0+128)
  5281                           
  5282                           ;main.c: 31: char C_or_F = 1;
  5283  0139  01BC               	clrf	main@C_or_F^(0+128)
  5284  013A  0ABC               	incf	main@C_or_F^(0+128),f
  5285                           
  5286                           ;main.c: 33: unsigned int bCount = 0;
  5287  013B  01B1               	clrf	main@bCount^(0+128)
  5288  013C  01B2               	clrf	(main@bCount+1)^(0+128)
  5289                           
  5290                           ;main.c: 35: unsigned char startDelay= 0;
  5291  013D  01A4               	clrf	main@startDelay^(0+128)
  5292                           
  5293                           ;main.c: 37: unsigned char resetDelay= 0;
  5294  013E  01B9               	clrf	main@resetDelay^(0+128)
  5295                           
  5296                           ;main.c: 39: unsigned char tPadCount = 10;
  5297  013F  300A               	movlw	10
  5298  0140  0020               	movlb	0	; select bank0
  5299  0141  00E9               	movwf	??_main
  5300  0142  0869               	movf	??_main,w
  5301  0143  0021               	movlb	1	; select bank1
  5302  0144  00BA               	movwf	main@tPadCount^(0+128)
  5303                           
  5304                           ;main.c: 42: uint16_t dutyCycle = 1023;
  5305  0145  30FF               	movlw	255
  5306  0146  00BE               	movwf	main@dutyCycle^(0+128)
  5307  0147  3003               	movlw	3
  5308  0148  00BF               	movwf	(main@dutyCycle^(0+128)+1)
  5309                           
  5310                           ;main.c: 44: PWM6_LoadDutyValue(dutyCycle);
  5311  0149  083F               	movf	(main@dutyCycle+1)^(0+128),w
  5312  014A  00F1               	movwf	PWM6_LoadDutyValue@dutyCycle+1
  5313  014B  083E               	movf	main@dutyCycle^(0+128),w
  5314  014C  00F0               	movwf	PWM6_LoadDutyValue@dutyCycle
  5315  014D  3195  25DC  3181   	fcall	_PWM6_LoadDutyValue
  5316                           
  5317                           ;main.c: 46: _delay((unsigned long)((300)*(32000000/4000.0)));
  5318  0150  300D               	movlw	13
  5319  0151  0020               	movlb	0	; select bank0
  5320  0152  00EB               	movwf	??_main+2
  5321  0153  302D               	movlw	45
  5322  0154  00EA               	movwf	??_main+1
  5323  0155  30E2               	movlw	226
  5324  0156  00E9               	movwf	??_main
  5325  0157                     u3497:	
  5326  0157  0BE9               	decfsz	??_main,f
  5327  0158  2957               	goto	u3497
  5328  0159  0BEA               	decfsz	??_main+1,f
  5329  015A  2957               	goto	u3497
  5330  015B  0BEB               	decfsz	??_main+2,f
  5331  015C  2957               	goto	u3497
  5332  015D  3200               	nop2
  5333                           
  5334                           ;main.c: 48: LCD_Clear();
  5335  015E  3195  255C  3181   	fcall	_LCD_Clear
  5336                           
  5337                           ;main.c: 50: { LCD_Set_Cursor(2,0); LCD_Write_String("A");};
  5338  0161  01F4               	clrf	LCD_Set_Cursor@y
  5339  0162  3002               	movlw	2
  5340  0163  3197  277F  3181   	fcall	_LCD_Set_Cursor
  5341  0166  3074               	movlw	low (STR_1| (0+32768))
  5342  0167  00F5               	movwf	LCD_Write_String@a
  5343  0168  3090               	movlw	high (STR_1| (0+32768))
  5344  0169  00F6               	movwf	LCD_Write_String@a+1
  5345  016A  3196  260A  3181   	fcall	_LCD_Write_String
  5346                           
  5347                           ;main.c: 51: _delay((unsigned long)((200)*(32000000/4000.0)));
  5348  016D  3009               	movlw	9
  5349  016E  0020               	movlb	0	; select bank0
  5350  016F  00EB               	movwf	??_main+2
  5351  0170  301E               	movlw	30
  5352  0171  00EA               	movwf	??_main+1
  5353  0172  30EB               	movlw	235
  5354  0173  00E9               	movwf	??_main
  5355  0174                     u3507:	
  5356  0174  0BE9               	decfsz	??_main,f
  5357  0175  2974               	goto	u3507
  5358  0176  0BEA               	decfsz	??_main+1,f
  5359  0177  2974               	goto	u3507
  5360  0178  0BEB               	decfsz	??_main+2,f
  5361  0179  2974               	goto	u3507
  5362  017A  0000               	nop
  5363                           
  5364                           ;main.c: 52: LCD_Write_String("L");
  5365  017B  3080               	movlw	low (STR_2| (0+32768))
  5366  017C  00F5               	movwf	LCD_Write_String@a
  5367  017D  3090               	movlw	high (STR_2| (0+32768))
  5368  017E  00F6               	movwf	LCD_Write_String@a+1
  5369  017F  3196  260A  3181   	fcall	_LCD_Write_String
  5370                           
  5371                           ;main.c: 53: _delay((unsigned long)((200)*(32000000/4000.0)));
  5372  0182  3009               	movlw	9
  5373  0183  0020               	movlb	0	; select bank0
  5374  0184  00EB               	movwf	??_main+2
  5375  0185  301E               	movlw	30
  5376  0186  00EA               	movwf	??_main+1
  5377  0187  30EB               	movlw	235
  5378  0188  00E9               	movwf	??_main
  5379  0189                     u3517:	
  5380  0189  0BE9               	decfsz	??_main,f
  5381  018A  2989               	goto	u3517
  5382  018B  0BEA               	decfsz	??_main+1,f
  5383  018C  2989               	goto	u3517
  5384  018D  0BEB               	decfsz	??_main+2,f
  5385  018E  2989               	goto	u3517
  5386  018F  0000               	nop
  5387                           
  5388                           ;main.c: 54: LCD_Write_String("O");
  5389  0190  3082               	movlw	low (STR_3| (0+32768))
  5390  0191  00F5               	movwf	LCD_Write_String@a
  5391  0192  3090               	movlw	high (STR_3| (0+32768))
  5392  0193  00F6               	movwf	LCD_Write_String@a+1
  5393  0194  3196  260A  3181   	fcall	_LCD_Write_String
  5394                           
  5395                           ;main.c: 55: _delay((unsigned long)((200)*(32000000/4000.0)));
  5396  0197  3009               	movlw	9
  5397  0198  0020               	movlb	0	; select bank0
  5398  0199  00EB               	movwf	??_main+2
  5399  019A  301E               	movlw	30
  5400  019B  00EA               	movwf	??_main+1
  5401  019C  30EB               	movlw	235
  5402  019D  00E9               	movwf	??_main
  5403  019E                     u3527:	
  5404  019E  0BE9               	decfsz	??_main,f
  5405  019F  299E               	goto	u3527
  5406  01A0  0BEA               	decfsz	??_main+1,f
  5407  01A1  299E               	goto	u3527
  5408  01A2  0BEB               	decfsz	??_main+2,f
  5409  01A3  299E               	goto	u3527
  5410  01A4  0000               	nop
  5411                           
  5412                           ;main.c: 56: LCD_Write_String("H");
  5413  01A5  307A               	movlw	low (STR_4| (0+32768))
  5414  01A6  00F5               	movwf	LCD_Write_String@a
  5415  01A7  3090               	movlw	high (STR_4| (0+32768))
  5416  01A8  00F6               	movwf	LCD_Write_String@a+1
  5417  01A9  3196  260A  3181   	fcall	_LCD_Write_String
  5418                           
  5419                           ;main.c: 57: _delay((unsigned long)((200)*(32000000/4000.0)));
  5420  01AC  3009               	movlw	9
  5421  01AD  0020               	movlb	0	; select bank0
  5422  01AE  00EB               	movwf	??_main+2
  5423  01AF  301E               	movlw	30
  5424  01B0  00EA               	movwf	??_main+1
  5425  01B1  30EB               	movlw	235
  5426  01B2  00E9               	movwf	??_main
  5427  01B3                     u3537:	
  5428  01B3  0BE9               	decfsz	??_main,f
  5429  01B4  29B3               	goto	u3537
  5430  01B5  0BEA               	decfsz	??_main+1,f
  5431  01B6  29B3               	goto	u3537
  5432  01B7  0BEB               	decfsz	??_main+2,f
  5433  01B8  29B3               	goto	u3537
  5434  01B9  0000               	nop
  5435                           
  5436                           ;main.c: 58: LCD_Write_String("A");
  5437  01BA  3074               	movlw	low (STR_1| (0+32768))
  5438  01BB  00F5               	movwf	LCD_Write_String@a
  5439  01BC  3090               	movlw	high (STR_1| (0+32768))
  5440  01BD  00F6               	movwf	LCD_Write_String@a+1
  5441  01BE  3196  260A  3181   	fcall	_LCD_Write_String
  5442                           
  5443                           ;main.c: 59: _delay((unsigned long)((200)*(32000000/4000.0)));
  5444  01C1  3009               	movlw	9
  5445  01C2  0020               	movlb	0	; select bank0
  5446  01C3  00EB               	movwf	??_main+2
  5447  01C4  301E               	movlw	30
  5448  01C5  00EA               	movwf	??_main+1
  5449  01C6  30EB               	movlw	235
  5450  01C7  00E9               	movwf	??_main
  5451  01C8                     u3547:	
  5452  01C8  0BE9               	decfsz	??_main,f
  5453  01C9  29C8               	goto	u3547
  5454  01CA  0BEA               	decfsz	??_main+1,f
  5455  01CB  29C8               	goto	u3547
  5456  01CC  0BEB               	decfsz	??_main+2,f
  5457  01CD  29C8               	goto	u3547
  5458  01CE  0000               	nop
  5459                           
  5460                           ;main.c: 60: LCD_Write_String(" ");
  5461  01CF  303A               	movlw	low ((STR_33+14)| (0+32768))
  5462  01D0  00F5               	movwf	LCD_Write_String@a
  5463  01D1  3090               	movlw	high ((STR_33+14)| (0+32768))
  5464  01D2  00F6               	movwf	LCD_Write_String@a+1
  5465  01D3  3196  260A  3181   	fcall	_LCD_Write_String
  5466                           
  5467                           ;main.c: 61: _delay((unsigned long)((200)*(32000000/4000.0)));
  5468  01D6  3009               	movlw	9
  5469  01D7  0020               	movlb	0	; select bank0
  5470  01D8  00EB               	movwf	??_main+2
  5471  01D9  301E               	movlw	30
  5472  01DA  00EA               	movwf	??_main+1
  5473  01DB  30EB               	movlw	235
  5474  01DC  00E9               	movwf	??_main
  5475  01DD                     u3557:	
  5476  01DD  0BE9               	decfsz	??_main,f
  5477  01DE  29DD               	goto	u3557
  5478  01DF  0BEA               	decfsz	??_main+1,f
  5479  01E0  29DD               	goto	u3557
  5480  01E1  0BEB               	decfsz	??_main+2,f
  5481  01E2  29DD               	goto	u3557
  5482  01E3  0000               	nop
  5483                           
  5484                           ;main.c: 62: LCD_Write_String("D");
  5485  01E4  3076               	movlw	low (STR_7| (0+32768))
  5486  01E5  00F5               	movwf	LCD_Write_String@a
  5487  01E6  3090               	movlw	high (STR_7| (0+32768))
  5488  01E7  00F6               	movwf	LCD_Write_String@a+1
  5489  01E8  3196  260A  3181   	fcall	_LCD_Write_String
  5490                           
  5491                           ;main.c: 63: _delay((unsigned long)((200)*(32000000/4000.0)));
  5492  01EB  3009               	movlw	9
  5493  01EC  0020               	movlb	0	; select bank0
  5494  01ED  00EB               	movwf	??_main+2
  5495  01EE  301E               	movlw	30
  5496  01EF  00EA               	movwf	??_main+1
  5497  01F0  30EB               	movlw	235
  5498  01F1  00E9               	movwf	??_main
  5499  01F2                     u3567:	
  5500  01F2  0BE9               	decfsz	??_main,f
  5501  01F3  29F2               	goto	u3567
  5502  01F4  0BEA               	decfsz	??_main+1,f
  5503  01F5  29F2               	goto	u3567
  5504  01F6  0BEB               	decfsz	??_main+2,f
  5505  01F7  29F2               	goto	u3567
  5506  01F8  0000               	nop
  5507                           
  5508                           ;main.c: 64: LCD_Write_String("A");
  5509  01F9  3074               	movlw	low (STR_1| (0+32768))
  5510  01FA  00F5               	movwf	LCD_Write_String@a
  5511  01FB  3090               	movlw	high (STR_1| (0+32768))
  5512  01FC  00F6               	movwf	LCD_Write_String@a+1
  5513  01FD  3196  260A  3181   	fcall	_LCD_Write_String
  5514                           
  5515                           ;main.c: 65: _delay((unsigned long)((200)*(32000000/4000.0)));
  5516  0200  3009               	movlw	9
  5517  0201  0020               	movlb	0	; select bank0
  5518  0202  00EB               	movwf	??_main+2
  5519  0203  301E               	movlw	30
  5520  0204  00EA               	movwf	??_main+1
  5521  0205  30EB               	movlw	235
  5522  0206  00E9               	movwf	??_main
  5523  0207                     u3577:	
  5524  0207  0BE9               	decfsz	??_main,f
  5525  0208  2A07               	goto	u3577
  5526  0209  0BEA               	decfsz	??_main+1,f
  5527  020A  2A07               	goto	u3577
  5528  020B  0BEB               	decfsz	??_main+2,f
  5529  020C  2A07               	goto	u3577
  5530  020D  0000               	nop
  5531                           
  5532                           ;main.c: 66: LCD_Write_String("V");
  5533  020E  3088               	movlw	low (STR_9| (0+32768))
  5534  020F  00F5               	movwf	LCD_Write_String@a
  5535  0210  3090               	movlw	high (STR_9| (0+32768))
  5536  0211  00F6               	movwf	LCD_Write_String@a+1
  5537  0212  3196  260A  3181   	fcall	_LCD_Write_String
  5538                           
  5539                           ;main.c: 67: _delay((unsigned long)((200)*(32000000/4000.0)));
  5540  0215  3009               	movlw	9
  5541  0216  0020               	movlb	0	; select bank0
  5542  0217  00EB               	movwf	??_main+2
  5543  0218  301E               	movlw	30
  5544  0219  00EA               	movwf	??_main+1
  5545  021A  30EB               	movlw	235
  5546  021B  00E9               	movwf	??_main
  5547  021C                     u3587:	
  5548  021C  0BE9               	decfsz	??_main,f
  5549  021D  2A1C               	goto	u3587
  5550  021E  0BEA               	decfsz	??_main+1,f
  5551  021F  2A1C               	goto	u3587
  5552  0220  0BEB               	decfsz	??_main+2,f
  5553  0221  2A1C               	goto	u3587
  5554  0222  0000               	nop
  5555                           
  5556                           ;main.c: 68: LCD_Write_String("I");
  5557  0223  307C               	movlw	low (STR_10| (0+32768))
  5558  0224  00F5               	movwf	LCD_Write_String@a
  5559  0225  3090               	movlw	high (STR_10| (0+32768))
  5560  0226  00F6               	movwf	LCD_Write_String@a+1
  5561  0227  3196  260A  3181   	fcall	_LCD_Write_String
  5562                           
  5563                           ;main.c: 69: _delay((unsigned long)((200)*(32000000/4000.0)));
  5564  022A  3009               	movlw	9
  5565  022B  0020               	movlb	0	; select bank0
  5566  022C  00EB               	movwf	??_main+2
  5567  022D  301E               	movlw	30
  5568  022E  00EA               	movwf	??_main+1
  5569  022F  30EB               	movlw	235
  5570  0230  00E9               	movwf	??_main
  5571  0231                     u3597:	
  5572  0231  0BE9               	decfsz	??_main,f
  5573  0232  2A31               	goto	u3597
  5574  0233  0BEA               	decfsz	??_main+1,f
  5575  0234  2A31               	goto	u3597
  5576  0235  0BEB               	decfsz	??_main+2,f
  5577  0236  2A31               	goto	u3597
  5578  0237  0000               	nop
  5579                           
  5580                           ;main.c: 70: LCD_Write_String("D");
  5581  0238  3076               	movlw	low (STR_7| (0+32768))
  5582  0239  00F5               	movwf	LCD_Write_String@a
  5583  023A  3090               	movlw	high (STR_7| (0+32768))
  5584  023B  00F6               	movwf	LCD_Write_String@a+1
  5585  023C  3196  260A  3181   	fcall	_LCD_Write_String
  5586                           
  5587                           ;main.c: 71: _delay((unsigned long)((200)*(32000000/4000.0)));
  5588  023F  3009               	movlw	9
  5589  0240  0020               	movlb	0	; select bank0
  5590  0241  00EB               	movwf	??_main+2
  5591  0242  301E               	movlw	30
  5592  0243  00EA               	movwf	??_main+1
  5593  0244  30EB               	movlw	235
  5594  0245  00E9               	movwf	??_main
  5595  0246                     u3607:	
  5596  0246  0BE9               	decfsz	??_main,f
  5597  0247  2A46               	goto	u3607
  5598  0248  0BEA               	decfsz	??_main+1,f
  5599  0249  2A46               	goto	u3607
  5600  024A  0BEB               	decfsz	??_main+2,f
  5601  024B  2A46               	goto	u3607
  5602  024C  0000               	nop
  5603                           
  5604                           ;main.c: 72: LCD_Write_String(",");
  5605  024D  3072               	movlw	low (STR_12| (0+32768))
  5606  024E  00F5               	movwf	LCD_Write_String@a
  5607  024F  3090               	movlw	high (STR_12| (0+32768))
  5608  0250  00F6               	movwf	LCD_Write_String@a+1
  5609  0251  3196  260A  3181   	fcall	_LCD_Write_String
  5610                           
  5611                           ;main.c: 73: _delay((unsigned long)((200)*(32000000/4000.0)));
  5612  0254  3009               	movlw	9
  5613  0255  0020               	movlb	0	; select bank0
  5614  0256  00EB               	movwf	??_main+2
  5615  0257  301E               	movlw	30
  5616  0258  00EA               	movwf	??_main+1
  5617  0259  30EB               	movlw	235
  5618  025A  00E9               	movwf	??_main
  5619  025B                     u3617:	
  5620  025B  0BE9               	decfsz	??_main,f
  5621  025C  2A5B               	goto	u3617
  5622  025D  0BEA               	decfsz	??_main+1,f
  5623  025E  2A5B               	goto	u3617
  5624  025F  0BEB               	decfsz	??_main+2,f
  5625  0260  2A5B               	goto	u3617
  5626  0261  0000               	nop
  5627                           
  5628                           ;main.c: 74: { LCD_Set_Cursor(1,1); LCD_Write_String("S");};
  5629  0262  01F4               	clrf	LCD_Set_Cursor@y
  5630  0263  0AF4               	incf	LCD_Set_Cursor@y,f
  5631  0264  3001               	movlw	1
  5632  0265  3197  277F  3181   	fcall	_LCD_Set_Cursor
  5633  0268  3086               	movlw	low (STR_13| (0+32768))
  5634  0269  00F5               	movwf	LCD_Write_String@a
  5635  026A  3090               	movlw	high (STR_13| (0+32768))
  5636  026B  00F6               	movwf	LCD_Write_String@a+1
  5637  026C  3196  260A  3181   	fcall	_LCD_Write_String
  5638                           
  5639                           ;main.c: 75: _delay((unsigned long)((200)*(32000000/4000.0)));
  5640  026F  3009               	movlw	9
  5641  0270  0020               	movlb	0	; select bank0
  5642  0271  00EB               	movwf	??_main+2
  5643  0272  301E               	movlw	30
  5644  0273  00EA               	movwf	??_main+1
  5645  0274  30EB               	movlw	235
  5646  0275  00E9               	movwf	??_main
  5647  0276                     u3627:	
  5648  0276  0BE9               	decfsz	??_main,f
  5649  0277  2A76               	goto	u3627
  5650  0278  0BEA               	decfsz	??_main+1,f
  5651  0279  2A76               	goto	u3627
  5652  027A  0BEB               	decfsz	??_main+2,f
  5653  027B  2A76               	goto	u3627
  5654  027C  0000               	nop
  5655                           
  5656                           ;main.c: 76: LCD_Write_String("O");
  5657  027D  3082               	movlw	low (STR_3| (0+32768))
  5658  027E  00F5               	movwf	LCD_Write_String@a
  5659  027F  3090               	movlw	high (STR_3| (0+32768))
  5660  0280  00F6               	movwf	LCD_Write_String@a+1
  5661  0281  3196  260A  3181   	fcall	_LCD_Write_String
  5662                           
  5663                           ;main.c: 77: _delay((unsigned long)((200)*(32000000/4000.0)));
  5664  0284  3009               	movlw	9
  5665  0285  0020               	movlb	0	; select bank0
  5666  0286  00EB               	movwf	??_main+2
  5667  0287  301E               	movlw	30
  5668  0288  00EA               	movwf	??_main+1
  5669  0289  30EB               	movlw	235
  5670  028A  00E9               	movwf	??_main
  5671  028B                     u3637:	
  5672  028B  0BE9               	decfsz	??_main,f
  5673  028C  2A8B               	goto	u3637
  5674  028D  0BEA               	decfsz	??_main+1,f
  5675  028E  2A8B               	goto	u3637
  5676  028F  0BEB               	decfsz	??_main+2,f
  5677  0290  2A8B               	goto	u3637
  5678  0291  0000               	nop
  5679                           
  5680                           ;main.c: 78: LCD_Write_String("P");
  5681  0292  3084               	movlw	low (STR_15| (0+32768))
  5682  0293  00F5               	movwf	LCD_Write_String@a
  5683  0294  3090               	movlw	high (STR_15| (0+32768))
  5684  0295  00F6               	movwf	LCD_Write_String@a+1
  5685  0296  3196  260A  3181   	fcall	_LCD_Write_String
  5686                           
  5687                           ;main.c: 79: _delay((unsigned long)((200)*(32000000/4000.0)));
  5688  0299  3009               	movlw	9
  5689  029A  0020               	movlb	0	; select bank0
  5690  029B  00EB               	movwf	??_main+2
  5691  029C  301E               	movlw	30
  5692  029D  00EA               	movwf	??_main+1
  5693  029E  30EB               	movlw	235
  5694  029F  00E9               	movwf	??_main
  5695  02A0                     u3647:	
  5696  02A0  0BE9               	decfsz	??_main,f
  5697  02A1  2AA0               	goto	u3647
  5698  02A2  0BEA               	decfsz	??_main+1,f
  5699  02A3  2AA0               	goto	u3647
  5700  02A4  0BEB               	decfsz	??_main+2,f
  5701  02A5  2AA0               	goto	u3647
  5702  02A6  0000               	nop
  5703                           
  5704                           ;main.c: 80: LCD_Write_String("H");
  5705  02A7  307A               	movlw	low (STR_4| (0+32768))
  5706  02A8  00F5               	movwf	LCD_Write_String@a
  5707  02A9  3090               	movlw	high (STR_4| (0+32768))
  5708  02AA  00F6               	movwf	LCD_Write_String@a+1
  5709  02AB  3196  260A  3181   	fcall	_LCD_Write_String
  5710                           
  5711                           ;main.c: 81: _delay((unsigned long)((200)*(32000000/4000.0)));
  5712  02AE  3009               	movlw	9
  5713  02AF  0020               	movlb	0	; select bank0
  5714  02B0  00EB               	movwf	??_main+2
  5715  02B1  301E               	movlw	30
  5716  02B2  00EA               	movwf	??_main+1
  5717  02B3  30EB               	movlw	235
  5718  02B4  00E9               	movwf	??_main
  5719  02B5                     u3657:	
  5720  02B5  0BE9               	decfsz	??_main,f
  5721  02B6  2AB5               	goto	u3657
  5722  02B7  0BEA               	decfsz	??_main+1,f
  5723  02B8  2AB5               	goto	u3657
  5724  02B9  0BEB               	decfsz	??_main+2,f
  5725  02BA  2AB5               	goto	u3657
  5726  02BB  0000               	nop
  5727                           
  5728                           ;main.c: 82: LCD_Write_String("I");
  5729  02BC  307C               	movlw	low (STR_10| (0+32768))
  5730  02BD  00F5               	movwf	LCD_Write_String@a
  5731  02BE  3090               	movlw	high (STR_10| (0+32768))
  5732  02BF  00F6               	movwf	LCD_Write_String@a+1
  5733  02C0  3196  260A  3181   	fcall	_LCD_Write_String
  5734                           
  5735                           ;main.c: 83: _delay((unsigned long)((200)*(32000000/4000.0)));
  5736  02C3  3009               	movlw	9
  5737  02C4  0020               	movlb	0	; select bank0
  5738  02C5  00EB               	movwf	??_main+2
  5739  02C6  301E               	movlw	30
  5740  02C7  00EA               	movwf	??_main+1
  5741  02C8  30EB               	movlw	235
  5742  02C9  00E9               	movwf	??_main
  5743  02CA                     u3667:	
  5744  02CA  0BE9               	decfsz	??_main,f
  5745  02CB  2ACA               	goto	u3667
  5746  02CC  0BEA               	decfsz	??_main+1,f
  5747  02CD  2ACA               	goto	u3667
  5748  02CE  0BEB               	decfsz	??_main+2,f
  5749  02CF  2ACA               	goto	u3667
  5750  02D0  0000               	nop
  5751                           
  5752                           ;main.c: 84: LCD_Write_String("E");
  5753  02D1  3078               	movlw	low (STR_18| (0+32768))
  5754  02D2  00F5               	movwf	LCD_Write_String@a
  5755  02D3  3090               	movlw	high (STR_18| (0+32768))
  5756  02D4  00F6               	movwf	LCD_Write_String@a+1
  5757  02D5  3196  260A  3181   	fcall	_LCD_Write_String
  5758                           
  5759                           ;main.c: 85: _delay((unsigned long)((200)*(32000000/4000.0)));
  5760  02D8  3009               	movlw	9
  5761  02D9  0020               	movlb	0	; select bank0
  5762  02DA  00EB               	movwf	??_main+2
  5763  02DB  301E               	movlw	30
  5764  02DC  00EA               	movwf	??_main+1
  5765  02DD  30EB               	movlw	235
  5766  02DE  00E9               	movwf	??_main
  5767  02DF                     u3677:	
  5768  02DF  0BE9               	decfsz	??_main,f
  5769  02E0  2ADF               	goto	u3677
  5770  02E1  0BEA               	decfsz	??_main+1,f
  5771  02E2  2ADF               	goto	u3677
  5772  02E3  0BEB               	decfsz	??_main+2,f
  5773  02E4  2ADF               	goto	u3677
  5774  02E5  0000               	nop
  5775                           
  5776                           ;main.c: 86: LCD_Write_String(" ");
  5777  02E6  303A               	movlw	low ((STR_33+14)| (0+32768))
  5778  02E7  00F5               	movwf	LCD_Write_String@a
  5779  02E8  3090               	movlw	high ((STR_33+14)| (0+32768))
  5780  02E9  00F6               	movwf	LCD_Write_String@a+1
  5781  02EA  3196  260A  3181   	fcall	_LCD_Write_String
  5782                           
  5783                           ;main.c: 87: _delay((unsigned long)((200)*(32000000/4000.0)));
  5784  02ED  3009               	movlw	9
  5785  02EE  0020               	movlb	0	; select bank0
  5786  02EF  00EB               	movwf	??_main+2
  5787  02F0  301E               	movlw	30
  5788  02F1  00EA               	movwf	??_main+1
  5789  02F2  30EB               	movlw	235
  5790  02F3  00E9               	movwf	??_main
  5791  02F4                     u3687:	
  5792  02F4  0BE9               	decfsz	??_main,f
  5793  02F5  2AF4               	goto	u3687
  5794  02F6  0BEA               	decfsz	??_main+1,f
  5795  02F7  2AF4               	goto	u3687
  5796  02F8  0BEB               	decfsz	??_main+2,f
  5797  02F9  2AF4               	goto	u3687
  5798  02FA  0000               	nop
  5799                           
  5800                           ;main.c: 88: LCD_Write_String("&");
  5801  02FB  3070               	movlw	low (STR_20| (0+32768))
  5802  02FC  00F5               	movwf	LCD_Write_String@a
  5803  02FD  3090               	movlw	high (STR_20| (0+32768))
  5804  02FE  00F6               	movwf	LCD_Write_String@a+1
  5805  02FF  3196  260A  3181   	fcall	_LCD_Write_String
  5806                           
  5807                           ;main.c: 89: _delay((unsigned long)((200)*(32000000/4000.0)));
  5808  0302  3009               	movlw	9
  5809  0303  0020               	movlb	0	; select bank0
  5810  0304  00EB               	movwf	??_main+2
  5811  0305  301E               	movlw	30
  5812  0306  00EA               	movwf	??_main+1
  5813  0307  30EB               	movlw	235
  5814  0308  00E9               	movwf	??_main
  5815  0309                     u3697:	
  5816  0309  0BE9               	decfsz	??_main,f
  5817  030A  2B09               	goto	u3697
  5818  030B  0BEA               	decfsz	??_main+1,f
  5819  030C  2B09               	goto	u3697
  5820  030D  0BEB               	decfsz	??_main+2,f
  5821  030E  2B09               	goto	u3697
  5822  030F  0000               	nop
  5823                           
  5824                           ;main.c: 90: LCD_Write_String(" ");
  5825  0310  303A               	movlw	low ((STR_33+14)| (0+32768))
  5826  0311  00F5               	movwf	LCD_Write_String@a
  5827  0312  3090               	movlw	high ((STR_33+14)| (0+32768))
  5828  0313  00F6               	movwf	LCD_Write_String@a+1
  5829  0314  3196  260A  3181   	fcall	_LCD_Write_String
  5830                           
  5831                           ;main.c: 91: _delay((unsigned long)((200)*(32000000/4000.0)));
  5832  0317  3009               	movlw	9
  5833  0318  0020               	movlb	0	; select bank0
  5834  0319  00EB               	movwf	??_main+2
  5835  031A  301E               	movlw	30
  5836  031B  00EA               	movwf	??_main+1
  5837  031C  30EB               	movlw	235
  5838  031D  00E9               	movwf	??_main
  5839  031E                     u3707:	
  5840  031E  0BE9               	decfsz	??_main,f
  5841  031F  2B1E               	goto	u3707
  5842  0320  0BEA               	decfsz	??_main+1,f
  5843  0321  2B1E               	goto	u3707
  5844  0322  0BEB               	decfsz	??_main+2,f
  5845  0323  2B1E               	goto	u3707
  5846  0324  0000               	nop
  5847                           
  5848                           ;main.c: 92: LCD_Write_String("K");
  5849  0325  307E               	movlw	low (STR_22| (0+32768))
  5850  0326  00F5               	movwf	LCD_Write_String@a
  5851  0327  3090               	movlw	high (STR_22| (0+32768))
  5852  0328  00F6               	movwf	LCD_Write_String@a+1
  5853  0329  3196  260A  3181   	fcall	_LCD_Write_String
  5854                           
  5855                           ;main.c: 93: _delay((unsigned long)((200)*(32000000/4000.0)));
  5856  032C  3009               	movlw	9
  5857  032D  0020               	movlb	0	; select bank0
  5858  032E  00EB               	movwf	??_main+2
  5859  032F  301E               	movlw	30
  5860  0330  00EA               	movwf	??_main+1
  5861  0331  30EB               	movlw	235
  5862  0332  00E9               	movwf	??_main
  5863  0333                     u3717:	
  5864  0333  0BE9               	decfsz	??_main,f
  5865  0334  2B33               	goto	u3717
  5866  0335  0BEA               	decfsz	??_main+1,f
  5867  0336  2B33               	goto	u3717
  5868  0337  0BEB               	decfsz	??_main+2,f
  5869  0338  2B33               	goto	u3717
  5870  0339  0000               	nop
  5871                           
  5872                           ;main.c: 94: LCD_Write_String("I");
  5873  033A  307C               	movlw	low (STR_10| (0+32768))
  5874  033B  00F5               	movwf	LCD_Write_String@a
  5875  033C  3090               	movlw	high (STR_10| (0+32768))
  5876  033D  00F6               	movwf	LCD_Write_String@a+1
  5877  033E  3196  260A  3181   	fcall	_LCD_Write_String
  5878                           
  5879                           ;main.c: 95: _delay((unsigned long)((200)*(32000000/4000.0)));
  5880  0341  3009               	movlw	9
  5881  0342  0020               	movlb	0	; select bank0
  5882  0343  00EB               	movwf	??_main+2
  5883  0344  301E               	movlw	30
  5884  0345  00EA               	movwf	??_main+1
  5885  0346  30EB               	movlw	235
  5886  0347  00E9               	movwf	??_main
  5887  0348                     u3727:	
  5888  0348  0BE9               	decfsz	??_main,f
  5889  0349  2B48               	goto	u3727
  5890  034A  0BEA               	decfsz	??_main+1,f
  5891  034B  2B48               	goto	u3727
  5892  034C  0BEB               	decfsz	??_main+2,f
  5893  034D  2B48               	goto	u3727
  5894  034E  0000               	nop
  5895                           
  5896                           ;main.c: 96: LCD_Write_String("D");
  5897  034F  3076               	movlw	low (STR_7| (0+32768))
  5898  0350  00F5               	movwf	LCD_Write_String@a
  5899  0351  3090               	movlw	high (STR_7| (0+32768))
  5900  0352  00F6               	movwf	LCD_Write_String@a+1
  5901  0353  3196  260A  3181   	fcall	_LCD_Write_String
  5902                           
  5903                           ;main.c: 97: _delay((unsigned long)((200)*(32000000/4000.0)));
  5904  0356  3009               	movlw	9
  5905  0357  0020               	movlb	0	; select bank0
  5906  0358  00EB               	movwf	??_main+2
  5907  0359  301E               	movlw	30
  5908  035A  00EA               	movwf	??_main+1
  5909  035B  30EB               	movlw	235
  5910  035C  00E9               	movwf	??_main
  5911  035D                     u3737:	
  5912  035D  0BE9               	decfsz	??_main,f
  5913  035E  2B5D               	goto	u3737
  5914  035F  0BEA               	decfsz	??_main+1,f
  5915  0360  2B5D               	goto	u3737
  5916  0361  0BEB               	decfsz	??_main+2,f
  5917  0362  2B5D               	goto	u3737
  5918  0363  0000               	nop
  5919                           
  5920                           ;main.c: 98: LCD_Write_String("S");
  5921  0364  3086               	movlw	low (STR_13| (0+32768))
  5922  0365  00F5               	movwf	LCD_Write_String@a
  5923  0366  3090               	movlw	high (STR_13| (0+32768))
  5924  0367  00F6               	movwf	LCD_Write_String@a+1
  5925  0368  3196  260A  3181   	fcall	_LCD_Write_String
  5926                           
  5927                           ;main.c: 99: _delay((unsigned long)((200)*(32000000/4000.0)));
  5928  036B  3009               	movlw	9
  5929  036C  0020               	movlb	0	; select bank0
  5930  036D  00EB               	movwf	??_main+2
  5931  036E  301E               	movlw	30
  5932  036F  00EA               	movwf	??_main+1
  5933  0370  30EB               	movlw	235
  5934  0371  00E9               	movwf	??_main
  5935  0372                     u3747:	
  5936  0372  0BE9               	decfsz	??_main,f
  5937  0373  2B72               	goto	u3747
  5938  0374  0BEA               	decfsz	??_main+1,f
  5939  0375  2B72               	goto	u3747
  5940  0376  0BEB               	decfsz	??_main+2,f
  5941  0377  2B72               	goto	u3747
  5942  0378  0000               	nop
  5943                           
  5944                           ;main.c: 100: LCD_Write_String("!");
  5945  0379  306E               	movlw	low (STR_26| (0+32768))
  5946  037A  00F5               	movwf	LCD_Write_String@a
  5947  037B  3090               	movlw	high (STR_26| (0+32768))
  5948  037C  00F6               	movwf	LCD_Write_String@a+1
  5949  037D  3196  260A  3181   	fcall	_LCD_Write_String
  5950                           
  5951                           ;main.c: 101: _delay((unsigned long)((5000)*(32000000/4000.0)));
  5952  0380  30CB               	movlw	203
  5953  0381  0020               	movlb	0	; select bank0
  5954  0382  00EB               	movwf	??_main+2
  5955  0383  30ED               	movlw	237
  5956  0384  00EA               	movwf	??_main+1
  5957  0385  304C               	movlw	76
  5958  0386  00E9               	movwf	??_main
  5959  0387                     u3757:	
  5960  0387  0BE9               	decfsz	??_main,f
  5961  0388  2B87               	goto	u3757
  5962  0389  0BEA               	decfsz	??_main+1,f
  5963  038A  2B87               	goto	u3757
  5964  038B  0BEB               	decfsz	??_main+2,f
  5965  038C  2B87               	goto	u3757
  5966  038D  3200               	nop2
  5967                           
  5968                           ;main.c: 103: LCD_Clear();
  5969  038E  3195  255C  3181   	fcall	_LCD_Clear
  5970                           
  5971                           ;main.c: 105: PWM6_LoadDutyValue(dutyCycle);
  5972  0391  0021               	movlb	1	; select bank1
  5973  0392  083F               	movf	(main@dutyCycle+1)^(0+128),w
  5974  0393  00F1               	movwf	PWM6_LoadDutyValue@dutyCycle+1
  5975  0394  083E               	movf	main@dutyCycle^(0+128),w
  5976  0395  00F0               	movwf	PWM6_LoadDutyValue@dutyCycle
  5977  0396  3195  25DC  3181   	fcall	_PWM6_LoadDutyValue
  5978  0399                     l3019:	
  5979                           ;main.c: 108: while (1)
  5980                           
  5981                           
  5982                           ;main.c: 109: {
  5983                           ;main.c: 111: for(x=0;x<6;x++) analogs[x]=readAnalog(x);
  5984  0399  0021               	movlb	1	; select bank1
  5985  039A  01BD               	clrf	main@x^(0+128)
  5986  039B  3006               	movlw	6
  5987  039C  023D               	subwf	main@x^(0+128),w
  5988  039D  1803               	btfsc	3,0
  5989  039E  2BBD               	goto	l3031
  5990  039F                     l3025:	
  5991  039F  083D               	movf	main@x^(0+128),w
  5992  03A0  0020               	movlb	0	; select bank0
  5993  03A1  00E9               	movwf	??_main
  5994  03A2  01EA               	clrf	??_main+1
  5995  03A3  0869               	movf	??_main,w
  5996  03A4  00A6               	movwf	readAnalog@channel
  5997  03A5  086A               	movf	??_main+1,w
  5998  03A6  00A7               	movwf	readAnalog@channel+1
  5999  03A7  318E  26D0  3181   	fcall	_readAnalog
  6000  03AA  0021               	movlb	1	; select bank1
  6001  03AB  353D               	lslf	main@x^(0+128),w
  6002  03AC  3EA5               	addlw	(low (main@analogs| 0))& (0+255)
  6003  03AD  0086               	movwf	6
  6004  03AE  0187               	clrf	7
  6005  03AF  0020               	movlb	0	; select bank0
  6006  03B0  0826               	movf	?_readAnalog,w
  6007  03B1  3FC0               	movwi [0]fsr1
  6008  03B2  0827               	movf	?_readAnalog+1,w
  6009  03B3  3FC1               	movwi [1]fsr1
  6010  03B4  3001               	movlw	1
  6011  03B5  00E9               	movwf	??_main
  6012  03B6  0869               	movf	??_main,w
  6013  03B7  0021               	movlb	1	; select bank1
  6014  03B8  07BD               	addwf	main@x^(0+128),f
  6015  03B9  3006               	movlw	6
  6016  03BA  023D               	subwf	main@x^(0+128),w
  6017  03BB  1C03               	skipc
  6018  03BC  2B9F               	goto	l3025
  6019  03BD                     l3031:	
  6020                           
  6021                           ;main.c: 113: if(analogs[0]<1020)tPadCount+=1;
  6022  03BD  3003               	movlw	3
  6023  03BE  0226               	subwf	(main@analogs+1)^(0+128),w
  6024  03BF  30FC               	movlw	252
  6025  03C0  1903               	skipnz
  6026  03C1  0225               	subwf	main@analogs^(0+128),w
  6027  03C2  1803               	skipnc
  6028  03C3  2BCA               	goto	l3035
  6029  03C4  3001               	movlw	1
  6030  03C5  0020               	movlb	0	; select bank0
  6031  03C6  00E9               	movwf	??_main
  6032  03C7  0869               	movf	??_main,w
  6033  03C8  0021               	movlb	1	; select bank1
  6034  03C9  07BA               	addwf	main@tPadCount^(0+128),f
  6035  03CA                     l3035:	
  6036                           
  6037                           ;main.c: 116: if(analogs[1]<900)tPadCount-=1;
  6038  03CA  3003               	movlw	3
  6039  03CB  0228               	subwf	((main@analogs+1)^(0+128)+2),w
  6040  03CC  3084               	movlw	132
  6041  03CD  1903               	skipnz
  6042  03CE  0227               	subwf	(main@analogs^(0+128)+2),w
  6043  03CF  1803               	skipnc
  6044  03D0  2BD3               	goto	l291
  6045  03D1  3001               	movlw	1
  6046  03D2  02BA               	subwf	main@tPadCount^(0+128),f
  6047  03D3                     l291:	
  6048                           
  6049                           ;main.c: 118: if(tPadCount<1)
  6050  03D3  083A               	movf	main@tPadCount^(0+128),w
  6051  03D4  1D03               	btfss	3,2
  6052  03D5  2C12               	goto	l3057
  6053                           
  6054                           ;main.c: 119: {
  6055                           ;main.c: 120: choice=1;
  6056  03D6  01BB               	clrf	main@choice^(0+128)
  6057  03D7  0ABB               	incf	main@choice^(0+128),f
  6058                           
  6059                           ;main.c: 121: LCD_Clear();
  6060  03D8  3195  255C  3181   	fcall	_LCD_Clear
  6061                           
  6062                           ;main.c: 122: { LCD_Set_Cursor(0,0); LCD_Write_String("You Chose ");};
  6063  03DB  01F4               	clrf	LCD_Set_Cursor@y
  6064  03DC  3000               	movlw	0
  6065  03DD  3197  277F  3181   	fcall	_LCD_Set_Cursor
  6066  03E0  3048               	movlw	low (STR_27| (0+32768))
  6067  03E1  00F5               	movwf	LCD_Write_String@a
  6068  03E2  3090               	movlw	high (STR_27| (0+32768))
  6069  03E3  00F6               	movwf	LCD_Write_String@a+1
  6070  03E4  3196  260A  3181   	fcall	_LCD_Write_String
  6071                           
  6072                           ;main.c: 123: LCD_Write_Char(0);
  6073  03E7  3000               	movlw	0
  6074  03E8  3188  2007  3181   	fcall	_LCD_Write_Char
  6075                           
  6076                           ;main.c: 124: LCD_Write_Char('F');
  6077  03EB  3046               	movlw	70
  6078  03EC  3188  2007  3181   	fcall	_LCD_Write_Char
  6079                           
  6080                           ;main.c: 125: { LCD_Set_Cursor(0,1); LCD_Write_String("for User Display");};
  6081  03EF  01F4               	clrf	LCD_Set_Cursor@y
  6082  03F0  0AF4               	incf	LCD_Set_Cursor@y,f
  6083  03F1  3000               	movlw	0
  6084  03F2  3197  277F  3181   	fcall	_LCD_Set_Cursor
  6085  03F5  301B               	movlw	low (STR_28| (0+32768))
  6086  03F6  00F5               	movwf	LCD_Write_String@a
  6087  03F7  3090               	movlw	high (STR_28| (0+32768))
  6088  03F8  00F6               	movwf	LCD_Write_String@a+1
  6089  03F9  3196  260A  3181   	fcall	_LCD_Write_String
  6090                           
  6091                           ;main.c: 126: tPadCount=10;
  6092  03FC  300A               	movlw	10
  6093  03FD  0020               	movlb	0	; select bank0
  6094  03FE  00E9               	movwf	??_main
  6095  03FF  0869               	movf	??_main,w
  6096  0400  0021               	movlb	1	; select bank1
  6097  0401  00BA               	movwf	main@tPadCount^(0+128)
  6098                           
  6099                           ;main.c: 127: _delay((unsigned long)((1000)*(32000000/4000.0)));
  6100  0402  3029               	movlw	41
  6101  0403  0020               	movlb	0	; select bank0
  6102  0404  00EB               	movwf	??_main+2
  6103  0405  3096               	movlw	150
  6104  0406  00EA               	movwf	??_main+1
  6105  0407  30A6               	movlw	166
  6106  0408  00E9               	movwf	??_main
  6107  0409                     u3767:	
  6108  0409  0BE9               	decfsz	??_main,f
  6109  040A  2C09               	goto	u3767
  6110  040B  0BEA               	decfsz	??_main+1,f
  6111  040C  2C09               	goto	u3767
  6112  040D  0BEB               	decfsz	??_main+2,f
  6113  040E  2C09               	goto	u3767
  6114                           
  6115                           ;main.c: 128: LCD_Clear();
  6116  040F  3195  255C  3181   	fcall	_LCD_Clear
  6117  0412                     l3057:	
  6118                           
  6119                           ;main.c: 129: }
  6120                           ;main.c: 131: if(tPadCount>19)
  6121  0412  3014               	movlw	20
  6122  0413  0021               	movlb	1	; select bank1
  6123  0414  023A               	subwf	main@tPadCount^(0+128),w
  6124  0415  1C03               	skipc
  6125  0416  2C52               	goto	l3081
  6126                           
  6127                           ;main.c: 132: {
  6128                           ;main.c: 133: choice=0;
  6129  0417  01BB               	clrf	main@choice^(0+128)
  6130                           
  6131                           ;main.c: 134: LCD_Clear();
  6132  0418  3195  255C  3181   	fcall	_LCD_Clear
  6133                           
  6134                           ;main.c: 135: { LCD_Set_Cursor(0,0); LCD_Write_String("You Chose ");};
  6135  041B  01F4               	clrf	LCD_Set_Cursor@y
  6136  041C  3000               	movlw	0
  6137  041D  3197  277F  3181   	fcall	_LCD_Set_Cursor
  6138  0420  3048               	movlw	low (STR_27| (0+32768))
  6139  0421  00F5               	movwf	LCD_Write_String@a
  6140  0422  3090               	movlw	high (STR_27| (0+32768))
  6141  0423  00F6               	movwf	LCD_Write_String@a+1
  6142  0424  3196  260A  3181   	fcall	_LCD_Write_String
  6143                           
  6144                           ;main.c: 136: LCD_Write_Char(0);
  6145  0427  3000               	movlw	0
  6146  0428  3188  2007  3181   	fcall	_LCD_Write_Char
  6147                           
  6148                           ;main.c: 137: LCD_Write_Char('C');
  6149  042B  3043               	movlw	67
  6150  042C  3188  2007  3181   	fcall	_LCD_Write_Char
  6151                           
  6152                           ;main.c: 138: { LCD_Set_Cursor(0,1); LCD_Write_String("for User Display");};
  6153  042F  01F4               	clrf	LCD_Set_Cursor@y
  6154  0430  0AF4               	incf	LCD_Set_Cursor@y,f
  6155  0431  3000               	movlw	0
  6156  0432  3197  277F  3181   	fcall	_LCD_Set_Cursor
  6157  0435  301B               	movlw	low (STR_28| (0+32768))
  6158  0436  00F5               	movwf	LCD_Write_String@a
  6159  0437  3090               	movlw	high (STR_28| (0+32768))
  6160  0438  00F6               	movwf	LCD_Write_String@a+1
  6161  0439  3196  260A  3181   	fcall	_LCD_Write_String
  6162                           
  6163                           ;main.c: 139: tPadCount=10;
  6164  043C  300A               	movlw	10
  6165  043D  0020               	movlb	0	; select bank0
  6166  043E  00E9               	movwf	??_main
  6167  043F  0869               	movf	??_main,w
  6168  0440  0021               	movlb	1	; select bank1
  6169  0441  00BA               	movwf	main@tPadCount^(0+128)
  6170                           
  6171                           ;main.c: 140: _delay((unsigned long)((1000)*(32000000/4000.0)));
  6172  0442  3029               	movlw	41
  6173  0443  0020               	movlb	0	; select bank0
  6174  0444  00EB               	movwf	??_main+2
  6175  0445  3096               	movlw	150
  6176  0446  00EA               	movwf	??_main+1
  6177  0447  30A6               	movlw	166
  6178  0448  00E9               	movwf	??_main
  6179  0449                     u3777:	
  6180  0449  0BE9               	decfsz	??_main,f
  6181  044A  2C49               	goto	u3777
  6182  044B  0BEA               	decfsz	??_main+1,f
  6183  044C  2C49               	goto	u3777
  6184  044D  0BEB               	decfsz	??_main+2,f
  6185  044E  2C49               	goto	u3777
  6186                           
  6187                           ;main.c: 141: LCD_Clear();
  6188  044F  3195  255C  3181   	fcall	_LCD_Clear
  6189  0452                     l3081:	
  6190                           
  6191                           ;main.c: 142: }
  6192                           ;main.c: 144: if(analogs[0]<1020&&analogs[1]<970)
  6193  0452  3003               	movlw	3
  6194  0453  0021               	movlb	1	; select bank1
  6195  0454  0226               	subwf	(main@analogs+1)^(0+128),w
  6196  0455  30FC               	movlw	252
  6197  0456  1903               	skipnz
  6198  0457  0225               	subwf	main@analogs^(0+128),w
  6199  0458  1803               	skipnc
  6200  0459  2CB2               	goto	l3111
  6201  045A  3003               	movlw	3
  6202  045B  0228               	subwf	((main@analogs+1)^(0+128)+2),w
  6203  045C  30CA               	movlw	202
  6204  045D  1903               	skipnz
  6205  045E  0227               	subwf	(main@analogs^(0+128)+2),w
  6206  045F  1803               	skipnc
  6207  0460  2CB2               	goto	l3111
  6208                           
  6209                           ;main.c: 145: {
  6210                           ;main.c: 146: tPadCount=10;
  6211  0461  300A               	movlw	10
  6212  0462  0020               	movlb	0	; select bank0
  6213  0463  00E9               	movwf	??_main
  6214  0464  0869               	movf	??_main,w
  6215  0465  0021               	movlb	1	; select bank1
  6216  0466  00BA               	movwf	main@tPadCount^(0+128)
  6217                           
  6218                           ;main.c: 147: choice=2;
  6219  0467  3002               	movlw	2
  6220  0468  0020               	movlb	0	; select bank0
  6221  0469  00E9               	movwf	??_main
  6222  046A  0869               	movf	??_main,w
  6223  046B  0021               	movlb	1	; select bank1
  6224  046C  00BB               	movwf	main@choice^(0+128)
  6225                           
  6226                           ;main.c: 148: LCD_Set_Cursor(0,0);
  6227  046D  01F4               	clrf	LCD_Set_Cursor@y
  6228  046E  3000               	movlw	0
  6229  046F  3197  277F  3181   	fcall	_LCD_Set_Cursor
  6230                           
  6231                           ;main.c: 149: LCD_Write_Char(0);
  6232  0472  3000               	movlw	0
  6233  0473  3188  2007  3181   	fcall	_LCD_Write_Char
  6234                           
  6235                           ;main.c: 150: LCD_Write_Char('F');
  6236  0476  3046               	movlw	70
  6237  0477  3188  2007  3181   	fcall	_LCD_Write_Char
  6238                           
  6239                           ;main.c: 151: LCD_Write_Char(' ');
  6240  047A  3020               	movlw	32
  6241  047B  3188  2007  3181   	fcall	_LCD_Write_Char
  6242                           
  6243                           ;main.c: 152: LCD_Write_Char('&');
  6244  047E  3026               	movlw	38
  6245  047F  3188  2007  3181   	fcall	_LCD_Write_Char
  6246                           
  6247                           ;main.c: 153: LCD_Write_Char(' ');
  6248  0482  3020               	movlw	32
  6249  0483  3188  2007  3181   	fcall	_LCD_Write_Char
  6250                           
  6251                           ;main.c: 154: LCD_Write_Char(0);
  6252  0486  3000               	movlw	0
  6253  0487  3188  2007  3181   	fcall	_LCD_Write_Char
  6254                           
  6255                           ;main.c: 155: LCD_Write_Char('C');
  6256  048A  3043               	movlw	67
  6257  048B  3188  2007  3181   	fcall	_LCD_Write_Char
  6258                           
  6259                           ;main.c: 156: LCD_Write_String(" Chosen ");
  6260  048E  3053               	movlw	low (STR_31| (0+32768))
  6261  048F  00F5               	movwf	LCD_Write_String@a
  6262  0490  3090               	movlw	high (STR_31| (0+32768))
  6263  0491  00F6               	movwf	LCD_Write_String@a+1
  6264  0492  3196  260A  3181   	fcall	_LCD_Write_String
  6265                           
  6266                           ;main.c: 158: { LCD_Set_Cursor(0,1); LCD_Write_String("for User Display");};
  6267  0495  01F4               	clrf	LCD_Set_Cursor@y
  6268  0496  0AF4               	incf	LCD_Set_Cursor@y,f
  6269  0497  3000               	movlw	0
  6270  0498  3197  277F  3181   	fcall	_LCD_Set_Cursor
  6271  049B  301B               	movlw	low (STR_28| (0+32768))
  6272  049C  00F5               	movwf	LCD_Write_String@a
  6273  049D  3090               	movlw	high (STR_28| (0+32768))
  6274  049E  00F6               	movwf	LCD_Write_String@a+1
  6275  049F  3196  260A  3181   	fcall	_LCD_Write_String
  6276                           
  6277                           ;main.c: 159: _delay((unsigned long)((100)*(32000000/4000.0)));
  6278  04A2  3005               	movlw	5
  6279  04A3  0020               	movlb	0	; select bank0
  6280  04A4  00EB               	movwf	??_main+2
  6281  04A5  300F               	movlw	15
  6282  04A6  00EA               	movwf	??_main+1
  6283  04A7  30F4               	movlw	244
  6284  04A8  00E9               	movwf	??_main
  6285  04A9                     u3787:	
  6286  04A9  0BE9               	decfsz	??_main,f
  6287  04AA  2CA9               	goto	u3787
  6288  04AB  0BEA               	decfsz	??_main+1,f
  6289  04AC  2CA9               	goto	u3787
  6290  04AD  0BEB               	decfsz	??_main+2,f
  6291  04AE  2CA9               	goto	u3787
  6292                           
  6293                           ;main.c: 160: LCD_Clear();
  6294  04AF  3195  255C  3181   	fcall	_LCD_Clear
  6295  04B2                     l3111:	
  6296                           
  6297                           ;main.c: 161: }
  6298                           ;main.c: 165: startDelay+=1;
  6299  04B2  3001               	movlw	1
  6300  04B3  0020               	movlb	0	; select bank0
  6301  04B4  00E9               	movwf	??_main
  6302  04B5  0869               	movf	??_main,w
  6303  04B6  0021               	movlb	1	; select bank1
  6304  04B7  07A4               	addwf	main@startDelay^(0+128),f
  6305                           
  6306                           ;main.c: 167: if(startDelay>254)
  6307  04B8  0A24               	incf	main@startDelay^(0+128),w
  6308  04B9  1D03               	btfss	3,2
  6309  04BA  2DEB               	goto	l3213
  6310                           
  6311                           ;main.c: 168: {
  6312                           ;main.c: 169: startDelay=254;
  6313  04BB  30FE               	movlw	254
  6314  04BC  0020               	movlb	0	; select bank0
  6315  04BD  00E9               	movwf	??_main
  6316  04BE  0869               	movf	??_main,w
  6317  04BF  0021               	movlb	1	; select bank1
  6318  04C0  00A4               	movwf	main@startDelay^(0+128)
  6319                           
  6320                           ;main.c: 171: if(analogs[2]<900&&analogs[3]<900)asm("reset");
  6321  04C1  3003               	movlw	3
  6322  04C2  022A               	subwf	((main@analogs+1)^(0+128)+4),w
  6323  04C3  3084               	movlw	132
  6324  04C4  1903               	skipnz
  6325  04C5  0229               	subwf	(main@analogs^(0+128)+4),w
  6326  04C6  1803               	skipnc
  6327  04C7  2CCF               	goto	l3121
  6328  04C8  3003               	movlw	3
  6329  04C9  022C               	subwf	((main@analogs+1)^(0+128)+6),w
  6330  04CA  3084               	movlw	132
  6331  04CB  1903               	skipnz
  6332  04CC  022B               	subwf	(main@analogs^(0+128)+6),w
  6333  04CD  1C03               	btfss	3,0
  6334  04CE  0001               	reset	;# 
  6335  04CF                     l3121:	
  6336                           
  6337                           ;main.c: 173: if(analogs[2]<900)
  6338  04CF  3003               	movlw	3
  6339  04D0  0021               	movlb	1	; select bank1
  6340  04D1  022A               	subwf	((main@analogs+1)^(0+128)+4),w
  6341  04D2  3084               	movlw	132
  6342  04D3  1903               	skipnz
  6343  04D4  0229               	subwf	(main@analogs^(0+128)+4),w
  6344  04D5  1803               	skipnc
  6345  04D6  2D5C               	goto	l3167
  6346                           
  6347                           ;main.c: 174: {
  6348                           ;main.c: 175: resetDelay+=1;
  6349  04D7  3001               	movlw	1
  6350  04D8  0020               	movlb	0	; select bank0
  6351  04D9  00E9               	movwf	??_main
  6352  04DA  0869               	movf	??_main,w
  6353  04DB  0021               	movlb	1	; select bank1
  6354  04DC  07B9               	addwf	main@resetDelay^(0+128),f
  6355                           
  6356                           ;main.c: 177: if(resetDelay>20)
  6357  04DD  3015               	movlw	21
  6358  04DE  0239               	subwf	main@resetDelay^(0+128),w
  6359  04DF  1803               	btfsc	3,0
  6360  04E0  2D40               	goto	l3157
  6361  04E1  2D5C               	goto	l3167
  6362  04E2                     l3129:	
  6363                           ;main.c: 178: {
  6364                           ;main.c: 179: while(analogs[2]<975)
  6365                           
  6366                           
  6367                           ;main.c: 180: {
  6368                           ;main.c: 181: analogs[2]=ADCRead(4);
  6369  04E2  3004               	movlw	4
  6370  04E3  3195  25AA  3181   	fcall	_ADCRead
  6371  04E6  0871               	movf	?_ADCRead+1,w
  6372  04E7  0021               	movlb	1	; select bank1
  6373  04E8  00AA               	movwf	((main@analogs+1)^(0+128)+4)
  6374  04E9  0870               	movf	?_ADCRead,w
  6375  04EA  00A9               	movwf	(main@analogs^(0+128)+4)
  6376                           
  6377                           ;main.c: 183: if(bCount<1)LCD_Clear();
  6378  04EB  0831               	movf	main@bCount^(0+128),w
  6379  04EC  0432               	iorwf	(main@bCount+1)^(0+128),w
  6380  04ED  1D03               	btfss	3,2
  6381  04EE  2CF2               	goto	l3135
  6382  04EF  3195  255C  3181   	fcall	_LCD_Clear
  6383  04F2                     l3135:	
  6384                           
  6385                           ;main.c: 184: bCount+=1;
  6386  04F2  3001               	movlw	1
  6387  04F3  0021               	movlb	1	; select bank1
  6388  04F4  07B1               	addwf	main@bCount^(0+128),f
  6389  04F5  3000               	movlw	0
  6390  04F6  3DB2               	addwfc	(main@bCount+1)^(0+128),f
  6391                           
  6392                           ;main.c: 186: if(dutyCycle>0)dutyCycle-=1;
  6393  04F7  083E               	movf	main@dutyCycle^(0+128),w
  6394  04F8  043F               	iorwf	(main@dutyCycle+1)^(0+128),w
  6395  04F9  1903               	btfsc	3,2
  6396  04FA  2CFF               	goto	l3141
  6397  04FB  3001               	movlw	1
  6398  04FC  02BE               	subwf	main@dutyCycle^(0+128),f
  6399  04FD  3000               	movlw	0
  6400  04FE  3BBF               	subwfb	(main@dutyCycle+1)^(0+128),f
  6401  04FF                     l3141:	
  6402                           
  6403                           ;main.c: 188: { LCD_Set_Cursor(0,0); LCD_Write_String("   BackLight   ");};
  6404  04FF  01F4               	clrf	LCD_Set_Cursor@y
  6405  0500  3000               	movlw	0
  6406  0501  3197  277F  3181   	fcall	_LCD_Set_Cursor
  6407  0504  302C               	movlw	low (STR_33| (0+32768))
  6408  0505  00F5               	movwf	LCD_Write_String@a
  6409  0506  3090               	movlw	high (STR_33| (0+32768))
  6410  0507  00F6               	movwf	LCD_Write_String@a+1
  6411  0508  3196  260A  3181   	fcall	_LCD_Write_String
  6412                           
  6413                           ;main.c: 189: { LCD_Set_Cursor(0,1); LCD_Write_String("Intensity: ");};
  6414  050B  01F4               	clrf	LCD_Set_Cursor@y
  6415  050C  0AF4               	incf	LCD_Set_Cursor@y,f
  6416  050D  3000               	movlw	0
  6417  050E  3197  277F  3181   	fcall	_LCD_Set_Cursor
  6418  0511  303C               	movlw	low (STR_34| (0+32768))
  6419  0512  00F5               	movwf	LCD_Write_String@a
  6420  0513  3090               	movlw	high (STR_34| (0+32768))
  6421  0514  00F6               	movwf	LCD_Write_String@a+1
  6422  0515  3196  260A  3181   	fcall	_LCD_Write_String
  6423                           
  6424                           ;main.c: 190: LCD_Write_Int(dutyCycle/10,-1,0,0);
  6425  0518  300A               	movlw	10
  6426  0519  00F0               	movwf	___lwdiv@divisor
  6427  051A  3000               	movlw	0
  6428  051B  00F1               	movwf	___lwdiv@divisor+1
  6429  051C  0021               	movlb	1	; select bank1
  6430  051D  083F               	movf	(main@dutyCycle+1)^(0+128),w
  6431  051E  00F3               	movwf	___lwdiv@dividend+1
  6432  051F  083E               	movf	main@dutyCycle^(0+128),w
  6433  0520  00F2               	movwf	___lwdiv@dividend
  6434  0521  3196  269F  3181   	fcall	___lwdiv
  6435  0524  0871               	movf	?___lwdiv+1,w
  6436  0525  0020               	movlb	0	; select bank0
  6437  0526  00A1               	movwf	LCD_Write_Int@value+1
  6438  0527  0870               	movf	?___lwdiv,w
  6439  0528  00A0               	movwf	LCD_Write_Int@value
  6440  0529  01A2               	clrf	LCD_Write_Int@fieldLength
  6441  052A  03A2               	decf	LCD_Write_Int@fieldLength,f
  6442  052B  01A3               	clrf	LCD_Write_Int@numPlaces
  6443  052C  01A4               	clrf	LCD_Write_Int@sign
  6444  052D  318D  2526  3181   	fcall	_LCD_Write_Int
  6445                           
  6446                           ;main.c: 191: LCD_Write_Char('%');
  6447  0530  3025               	movlw	37
  6448  0531  3188  2007  3181   	fcall	_LCD_Write_Char
  6449                           
  6450                           ;main.c: 192: LCD_Write_Char(' ');
  6451  0534  3020               	movlw	32
  6452  0535  3188  2007  3181   	fcall	_LCD_Write_Char
  6453                           
  6454                           ;main.c: 193: PWM6_LoadDutyValue(dutyCycle);
  6455  0538  0021               	movlb	1	; select bank1
  6456  0539  083F               	movf	(main@dutyCycle+1)^(0+128),w
  6457  053A  00F1               	movwf	PWM6_LoadDutyValue@dutyCycle+1
  6458  053B  083E               	movf	main@dutyCycle^(0+128),w
  6459  053C  00F0               	movwf	PWM6_LoadDutyValue@dutyCycle
  6460  053D  3195  25DC  3181   	fcall	_PWM6_LoadDutyValue
  6461  0540                     l3157:	
  6462  0540  3003               	movlw	3
  6463  0541  0021               	movlb	1	; select bank1
  6464  0542  022A               	subwf	((main@analogs+1)^(0+128)+4),w
  6465  0543  30CF               	movlw	207
  6466  0544  1903               	skipnz
  6467  0545  0229               	subwf	(main@analogs^(0+128)+4),w
  6468  0546  1C03               	skipc
  6469  0547  2CE2               	goto	l3129
  6470                           
  6471                           ;main.c: 194: }
  6472                           ;main.c: 195: bCount=0;
  6473  0548  01B1               	clrf	main@bCount^(0+128)
  6474  0549  01B2               	clrf	(main@bCount+1)^(0+128)
  6475                           
  6476                           ;main.c: 196: _delay((unsigned long)((100)*(32000000/4000.0)));
  6477  054A  3005               	movlw	5
  6478  054B  0020               	movlb	0	; select bank0
  6479  054C  00EB               	movwf	??_main+2
  6480  054D  300F               	movlw	15
  6481  054E  00EA               	movwf	??_main+1
  6482  054F  30F4               	movlw	244
  6483  0550  00E9               	movwf	??_main
  6484  0551                     u3797:	
  6485  0551  0BE9               	decfsz	??_main,f
  6486  0552  2D51               	goto	u3797
  6487  0553  0BEA               	decfsz	??_main+1,f
  6488  0554  2D51               	goto	u3797
  6489  0555  0BEB               	decfsz	??_main+2,f
  6490  0556  2D51               	goto	u3797
  6491                           
  6492                           ;main.c: 197: LCD_Clear();
  6493  0557  3195  255C  3181   	fcall	_LCD_Clear
  6494                           
  6495                           ;main.c: 198: resetDelay=0;
  6496  055A  0021               	movlb	1	; select bank1
  6497  055B  01B9               	clrf	main@resetDelay^(0+128)
  6498  055C                     l3167:	
  6499                           
  6500                           ;main.c: 199: }
  6501                           ;main.c: 200: }
  6502                           ;main.c: 202: if(analogs[3]<900)
  6503  055C  3003               	movlw	3
  6504  055D  022C               	subwf	((main@analogs+1)^(0+128)+6),w
  6505  055E  3084               	movlw	132
  6506  055F  1903               	skipnz
  6507  0560  022B               	subwf	(main@analogs^(0+128)+6),w
  6508  0561  1803               	skipnc
  6509  0562  2DEB               	goto	l3213
  6510                           
  6511                           ;main.c: 203: {
  6512                           ;main.c: 204: resetDelay+=1;
  6513  0563  3001               	movlw	1
  6514  0564  0020               	movlb	0	; select bank0
  6515  0565  00E9               	movwf	??_main
  6516  0566  0869               	movf	??_main,w
  6517  0567  0021               	movlb	1	; select bank1
  6518  0568  07B9               	addwf	main@resetDelay^(0+128),f
  6519                           
  6520                           ;main.c: 206: if(resetDelay>20)
  6521  0569  3015               	movlw	21
  6522  056A  0239               	subwf	main@resetDelay^(0+128),w
  6523  056B  1803               	btfsc	3,0
  6524  056C  2DCF               	goto	l3203
  6525  056D  2DEB               	goto	l3213
  6526  056E                     l3175:	
  6527                           ;main.c: 207: {
  6528                           ;main.c: 208: while(analogs[3]<975)
  6529                           
  6530                           
  6531                           ;main.c: 209: {
  6532                           ;main.c: 210: analogs[3]=ADCRead(5);
  6533  056E  3005               	movlw	5
  6534  056F  3195  25AA  3181   	fcall	_ADCRead
  6535  0572  0871               	movf	?_ADCRead+1,w
  6536  0573  0021               	movlb	1	; select bank1
  6537  0574  00AC               	movwf	((main@analogs+1)^(0+128)+6)
  6538  0575  0870               	movf	?_ADCRead,w
  6539  0576  00AB               	movwf	(main@analogs^(0+128)+6)
  6540                           
  6541                           ;main.c: 212: if(bCount<1)LCD_Clear();
  6542  0577  0831               	movf	main@bCount^(0+128),w
  6543  0578  0432               	iorwf	(main@bCount+1)^(0+128),w
  6544  0579  1D03               	btfss	3,2
  6545  057A  2D7E               	goto	l3181
  6546  057B  3195  255C  3181   	fcall	_LCD_Clear
  6547  057E                     l3181:	
  6548                           
  6549                           ;main.c: 213: bCount+=1;
  6550  057E  3001               	movlw	1
  6551  057F  0021               	movlb	1	; select bank1
  6552  0580  07B1               	addwf	main@bCount^(0+128),f
  6553  0581  3000               	movlw	0
  6554  0582  3DB2               	addwfc	(main@bCount+1)^(0+128),f
  6555                           
  6556                           ;main.c: 215: if(dutyCycle<1009)dutyCycle+=1;
  6557  0583  3003               	movlw	3
  6558  0584  023F               	subwf	(main@dutyCycle+1)^(0+128),w
  6559  0585  30F1               	movlw	241
  6560  0586  1903               	skipnz
  6561  0587  023E               	subwf	main@dutyCycle^(0+128),w
  6562  0588  1803               	skipnc
  6563  0589  2D8E               	goto	l3187
  6564  058A  3001               	movlw	1
  6565  058B  07BE               	addwf	main@dutyCycle^(0+128),f
  6566  058C  3000               	movlw	0
  6567  058D  3DBF               	addwfc	(main@dutyCycle+1)^(0+128),f
  6568  058E                     l3187:	
  6569                           
  6570                           ;main.c: 217: { LCD_Set_Cursor(0,0); LCD_Write_String("   BackLight   ");};
  6571  058E  01F4               	clrf	LCD_Set_Cursor@y
  6572  058F  3000               	movlw	0
  6573  0590  3197  277F  3181   	fcall	_LCD_Set_Cursor
  6574  0593  302C               	movlw	low (STR_33| (0+32768))
  6575  0594  00F5               	movwf	LCD_Write_String@a
  6576  0595  3090               	movlw	high (STR_33| (0+32768))
  6577  0596  00F6               	movwf	LCD_Write_String@a+1
  6578  0597  3196  260A  3181   	fcall	_LCD_Write_String
  6579                           
  6580                           ;main.c: 218: { LCD_Set_Cursor(0,1); LCD_Write_String("Intensity: ");};
  6581  059A  01F4               	clrf	LCD_Set_Cursor@y
  6582  059B  0AF4               	incf	LCD_Set_Cursor@y,f
  6583  059C  3000               	movlw	0
  6584  059D  3197  277F  3181   	fcall	_LCD_Set_Cursor
  6585  05A0  303C               	movlw	low (STR_34| (0+32768))
  6586  05A1  00F5               	movwf	LCD_Write_String@a
  6587  05A2  3090               	movlw	high (STR_34| (0+32768))
  6588  05A3  00F6               	movwf	LCD_Write_String@a+1
  6589  05A4  3196  260A  3181   	fcall	_LCD_Write_String
  6590                           
  6591                           ;main.c: 219: LCD_Write_Int(dutyCycle/10,-1,0,0);
  6592  05A7  300A               	movlw	10
  6593  05A8  00F0               	movwf	___lwdiv@divisor
  6594  05A9  3000               	movlw	0
  6595  05AA  00F1               	movwf	___lwdiv@divisor+1
  6596  05AB  0021               	movlb	1	; select bank1
  6597  05AC  083F               	movf	(main@dutyCycle+1)^(0+128),w
  6598  05AD  00F3               	movwf	___lwdiv@dividend+1
  6599  05AE  083E               	movf	main@dutyCycle^(0+128),w
  6600  05AF  00F2               	movwf	___lwdiv@dividend
  6601  05B0  3196  269F  3181   	fcall	___lwdiv
  6602  05B3  0871               	movf	?___lwdiv+1,w
  6603  05B4  0020               	movlb	0	; select bank0
  6604  05B5  00A1               	movwf	LCD_Write_Int@value+1
  6605  05B6  0870               	movf	?___lwdiv,w
  6606  05B7  00A0               	movwf	LCD_Write_Int@value
  6607  05B8  01A2               	clrf	LCD_Write_Int@fieldLength
  6608  05B9  03A2               	decf	LCD_Write_Int@fieldLength,f
  6609  05BA  01A3               	clrf	LCD_Write_Int@numPlaces
  6610  05BB  01A4               	clrf	LCD_Write_Int@sign
  6611  05BC  318D  2526  3181   	fcall	_LCD_Write_Int
  6612                           
  6613                           ;main.c: 220: LCD_Write_Char('%');
  6614  05BF  3025               	movlw	37
  6615  05C0  3188  2007  3181   	fcall	_LCD_Write_Char
  6616                           
  6617                           ;main.c: 221: LCD_Write_Char(' ');
  6618  05C3  3020               	movlw	32
  6619  05C4  3188  2007  3181   	fcall	_LCD_Write_Char
  6620                           
  6621                           ;main.c: 222: PWM6_LoadDutyValue(dutyCycle);
  6622  05C7  0021               	movlb	1	; select bank1
  6623  05C8  083F               	movf	(main@dutyCycle+1)^(0+128),w
  6624  05C9  00F1               	movwf	PWM6_LoadDutyValue@dutyCycle+1
  6625  05CA  083E               	movf	main@dutyCycle^(0+128),w
  6626  05CB  00F0               	movwf	PWM6_LoadDutyValue@dutyCycle
  6627  05CC  3195  25DC  3181   	fcall	_PWM6_LoadDutyValue
  6628  05CF                     l3203:	
  6629  05CF  3003               	movlw	3
  6630  05D0  0021               	movlb	1	; select bank1
  6631  05D1  022C               	subwf	((main@analogs+1)^(0+128)+6),w
  6632  05D2  30CF               	movlw	207
  6633  05D3  1903               	skipnz
  6634  05D4  022B               	subwf	(main@analogs^(0+128)+6),w
  6635  05D5  1C03               	skipc
  6636  05D6  2D6E               	goto	l3175
  6637                           
  6638                           ;main.c: 223: }
  6639                           ;main.c: 224: bCount=0;
  6640  05D7  01B1               	clrf	main@bCount^(0+128)
  6641  05D8  01B2               	clrf	(main@bCount+1)^(0+128)
  6642                           
  6643                           ;main.c: 225: _delay((unsigned long)((100)*(32000000/4000.0)));
  6644  05D9  3005               	movlw	5
  6645  05DA  0020               	movlb	0	; select bank0
  6646  05DB  00EB               	movwf	??_main+2
  6647  05DC  300F               	movlw	15
  6648  05DD  00EA               	movwf	??_main+1
  6649  05DE  30F4               	movlw	244
  6650  05DF  00E9               	movwf	??_main
  6651  05E0                     u3807:	
  6652  05E0  0BE9               	decfsz	??_main,f
  6653  05E1  2DE0               	goto	u3807
  6654  05E2  0BEA               	decfsz	??_main+1,f
  6655  05E3  2DE0               	goto	u3807
  6656  05E4  0BEB               	decfsz	??_main+2,f
  6657  05E5  2DE0               	goto	u3807
  6658                           
  6659                           ;main.c: 226: LCD_Clear();
  6660  05E6  3195  255C  3181   	fcall	_LCD_Clear
  6661                           
  6662                           ;main.c: 227: resetDelay=0;
  6663  05E9  0021               	movlb	1	; select bank1
  6664  05EA  01B9               	clrf	main@resetDelay^(0+128)
  6665  05EB                     l3213:	
  6666                           
  6667                           ;main.c: 228: }
  6668                           ;main.c: 229: }
  6669                           ;main.c: 230: }
  6670                           ;main.c: 234: displayTemp = (tempCalc(analogs[4]))-6;
  6671  05EB  082E               	movf	((main@analogs+1)^(0+128)+8),w
  6672  05EC  0020               	movlb	0	; select bank0
  6673  05ED  00DE               	movwf	tempCalc@analogValue+1
  6674  05EE  0021               	movlb	1	; select bank1
  6675  05EF  082D               	movf	(main@analogs^(0+128)+8),w
  6676  05F0  0020               	movlb	0	; select bank0
  6677  05F1  00DD               	movwf	tempCalc@analogValue
  6678  05F2  318D  25F1  3181   	fcall	_tempCalc
  6679  05F5  0020               	movlb	0	; select bank0
  6680  05F6  085D               	movf	?_tempCalc,w
  6681  05F7  0021               	movlb	1	; select bank1
  6682  05F8  00A0               	movwf	_main$991^(0+128)
  6683  05F9  0020               	movlb	0	; select bank0
  6684  05FA  085E               	movf	?_tempCalc+1,w
  6685  05FB  0021               	movlb	1	; select bank1
  6686  05FC  00A1               	movwf	(_main$991+1)^(0+128)
  6687  05FD  0020               	movlb	0	; select bank0
  6688  05FE  085F               	movf	?_tempCalc+2,w
  6689  05FF  0021               	movlb	1	; select bank1
  6690  0600  00A2               	movwf	(_main$991+2)^(0+128)
  6691                           
  6692                           ;main.c: 228: }
  6693                           ;main.c: 229: }
  6694                           ;main.c: 230: }
  6695                           ;main.c: 234: displayTemp = (tempCalc(analogs[4]))-6;
  6696  0601  3000               	movlw	0
  6697  0602  0020               	movlb	0	; select bank0
  6698  0603  00C0               	movwf	___ftadd@f1
  6699  0604  30C0               	movlw	192
  6700  0605  00C1               	movwf	___ftadd@f1+1
  6701  0606  30C0               	movlw	192
  6702  0607  00C2               	movwf	___ftadd@f1+2
  6703  0608  0021               	movlb	1	; select bank1
  6704  0609  0820               	movf	_main$991^(0+128),w
  6705  060A  0020               	movlb	0	; select bank0
  6706  060B  00C3               	movwf	___ftadd@f2
  6707  060C  0021               	movlb	1	; select bank1
  6708  060D  0821               	movf	(_main$991+1)^(0+128),w
  6709  060E  0020               	movlb	0	; select bank0
  6710  060F  00C4               	movwf	___ftadd@f2+1
  6711  0610  0021               	movlb	1	; select bank1
  6712  0611  0822               	movf	(_main$991+2)^(0+128),w
  6713  0612  0020               	movlb	0	; select bank0
  6714  0613  00C5               	movwf	___ftadd@f2+2
  6715  0614  3180  2023  3181   	fcall	___ftadd
  6716  0617  0020               	movlb	0	; select bank0
  6717  0618  0840               	movf	?___ftadd,w
  6718  0619  0021               	movlb	1	; select bank1
  6719  061A  00B3               	movwf	main@displayTemp^(0+128)
  6720  061B  0020               	movlb	0	; select bank0
  6721  061C  0841               	movf	?___ftadd+1,w
  6722  061D  0021               	movlb	1	; select bank1
  6723  061E  00B4               	movwf	(main@displayTemp+1)^(0+128)
  6724  061F  0020               	movlb	0	; select bank0
  6725  0620  0842               	movf	?___ftadd+2,w
  6726  0621  0021               	movlb	1	; select bank1
  6727  0622  00B5               	movwf	(main@displayTemp+2)^(0+128)
  6728                           
  6729                           ;main.c: 236: displayTemp2 = tempCalc(analogs[5]);
  6730  0623  0830               	movf	((main@analogs+1)^(0+128)+10),w
  6731  0624  0020               	movlb	0	; select bank0
  6732  0625  00DE               	movwf	tempCalc@analogValue+1
  6733  0626  0021               	movlb	1	; select bank1
  6734  0627  082F               	movf	(main@analogs^(0+128)+10),w
  6735  0628  0020               	movlb	0	; select bank0
  6736  0629  00DD               	movwf	tempCalc@analogValue
  6737  062A  318D  25F1  3181   	fcall	_tempCalc
  6738  062D  0020               	movlb	0	; select bank0
  6739  062E  085D               	movf	?_tempCalc,w
  6740  062F  0021               	movlb	1	; select bank1
  6741  0630  00B6               	movwf	main@displayTemp2^(0+128)
  6742  0631  0020               	movlb	0	; select bank0
  6743  0632  085E               	movf	?_tempCalc+1,w
  6744  0633  0021               	movlb	1	; select bank1
  6745  0634  00B7               	movwf	(main@displayTemp2+1)^(0+128)
  6746  0635  0020               	movlb	0	; select bank0
  6747  0636  085F               	movf	?_tempCalc+2,w
  6748  0637  0021               	movlb	1	; select bank1
  6749  0638  00B8               	movwf	(main@displayTemp2+2)^(0+128)
  6750                           
  6751                           ;main.c: 238: if(loop>127)
  6752  0639  3080               	movlw	128
  6753  063A  0223               	subwf	main@loop^(0+128),w
  6754  063B  1C03               	skipc
  6755  063C  2FB6               	goto	l3283
  6756                           
  6757                           ;main.c: 239: {
  6758                           ;main.c: 240: tPadCount=10;
  6759  063D  300A               	movlw	10
  6760  063E  0020               	movlb	0	; select bank0
  6761  063F  00E9               	movwf	??_main
  6762  0640  0869               	movf	??_main,w
  6763  0641  0021               	movlb	1	; select bank1
  6764  0642  00BA               	movwf	main@tPadCount^(0+128)
  6765                           
  6766                           ;main.c: 241: { LCD_Set_Cursor(0,0); LCD_Write_String("In");};
  6767  0643  01F4               	clrf	LCD_Set_Cursor@y
  6768  0644  3000               	movlw	0
  6769  0645  3197  277F  3181   	fcall	_LCD_Set_Cursor
  6770  0648  306B               	movlw	low (STR_37| (0+32768))
  6771  0649  00F5               	movwf	LCD_Write_String@a
  6772  064A  3090               	movlw	high (STR_37| (0+32768))
  6773  064B  00F6               	movwf	LCD_Write_String@a+1
  6774  064C  3196  260A  3181   	fcall	_LCD_Write_String
  6775                           
  6776                           ;main.c: 242: LCD_Write_Char(1);
  6777  064F  3001               	movlw	1
  6778  0650  3188  2007  3181   	fcall	_LCD_Write_Char
  6779                           
  6780                           ;main.c: 243: LCD_Write_String("Solar");
  6781  0653  305C               	movlw	low (STR_38| (0+32768))
  6782  0654  00F5               	movwf	LCD_Write_String@a
  6783  0655  3090               	movlw	high (STR_38| (0+32768))
  6784  0656  00F6               	movwf	LCD_Write_String@a+1
  6785  0657  3196  260A  3181   	fcall	_LCD_Write_String
  6786                           
  6787                           ;main.c: 245: { LCD_Set_Cursor(0,1); LCD_Write_String("Out");};
  6788  065A  01F4               	clrf	LCD_Set_Cursor@y
  6789  065B  0AF4               	incf	LCD_Set_Cursor@y,f
  6790  065C  3000               	movlw	0
  6791  065D  3197  277F  3181   	fcall	_LCD_Set_Cursor
  6792  0660  3067               	movlw	low (STR_39| (0+32768))
  6793  0661  00F5               	movwf	LCD_Write_String@a
  6794  0662  3090               	movlw	high (STR_39| (0+32768))
  6795  0663  00F6               	movwf	LCD_Write_String@a+1
  6796  0664  3196  260A  3181   	fcall	_LCD_Write_String
  6797                           
  6798                           ;main.c: 246: LCD_Write_Char(1);
  6799  0667  3001               	movlw	1
  6800  0668  3188  2007  3181   	fcall	_LCD_Write_Char
  6801                           
  6802                           ;main.c: 247: LCD_Write_String("Pool");
  6803  066B  3062               	movlw	low (STR_40| (0+32768))
  6804  066C  00F5               	movwf	LCD_Write_String@a
  6805  066D  3090               	movlw	high (STR_40| (0+32768))
  6806  066E  00F6               	movwf	LCD_Write_String@a+1
  6807  066F  3196  260A  3181   	fcall	_LCD_Write_String
  6808                           
  6809                           ;main.c: 249: if(C_or_F==0)
  6810  0672  0021               	movlb	1	; select bank1
  6811  0673  083C               	movf	main@C_or_F^(0+128),w
  6812  0674  1D03               	btfss	3,2
  6813  0675  2EC7               	goto	l3253
  6814                           
  6815                           ;main.c: 250: {
  6816                           ;main.c: 251: { LCD_Set_Cursor(9,0); LCD_Write_Int((int)displayTemp,-1, 1, 0);};
  6817  0676  01F4               	clrf	LCD_Set_Cursor@y
  6818  0677  3009               	movlw	9
  6819  0678  3197  277F  3181   	fcall	_LCD_Set_Cursor
  6820  067B  0021               	movlb	1	; select bank1
  6821  067C  0833               	movf	main@displayTemp^(0+128),w
  6822  067D  00F0               	movwf	___fttol@f1
  6823  067E  0834               	movf	(main@displayTemp+1)^(0+128),w
  6824  067F  00F1               	movwf	___fttol@f1+1
  6825  0680  0835               	movf	(main@displayTemp+2)^(0+128),w
  6826  0681  00F2               	movwf	___fttol@f1+2
  6827  0682  318A  220F  3181   	fcall	___fttol
  6828  0685  0871               	movf	?___fttol+1,w
  6829  0686  0020               	movlb	0	; select bank0
  6830  0687  00A1               	movwf	LCD_Write_Int@value+1
  6831  0688  0870               	movf	?___fttol,w
  6832  0689  00A0               	movwf	LCD_Write_Int@value
  6833  068A  01A2               	clrf	LCD_Write_Int@fieldLength
  6834  068B  03A2               	decf	LCD_Write_Int@fieldLength,f
  6835  068C  01A3               	clrf	LCD_Write_Int@numPlaces
  6836  068D  0AA3               	incf	LCD_Write_Int@numPlaces,f
  6837  068E  01A4               	clrf	LCD_Write_Int@sign
  6838  068F  318D  2526  3181   	fcall	_LCD_Write_Int
  6839                           
  6840                           ;main.c: 252: LCD_Write_Char(0);
  6841  0692  3000               	movlw	0
  6842  0693  3188  2007  3181   	fcall	_LCD_Write_Char
  6843                           
  6844                           ;main.c: 253: LCD_Write_Char('C');
  6845  0696  3043               	movlw	67
  6846  0697  3188  2007  3181   	fcall	_LCD_Write_Char
  6847                           
  6848                           ;main.c: 254: LCD_Write_Char(' ');
  6849  069A  3020               	movlw	32
  6850  069B  3188  2007  3181   	fcall	_LCD_Write_Char
  6851                           
  6852                           ;main.c: 256: { LCD_Set_Cursor(9,1); LCD_Write_Int((int)displayTemp2,-1, 1, 0);};
  6853  069E  01F4               	clrf	LCD_Set_Cursor@y
  6854  069F  0AF4               	incf	LCD_Set_Cursor@y,f
  6855  06A0  3009               	movlw	9
  6856  06A1  3197  277F  3181   	fcall	_LCD_Set_Cursor
  6857  06A4  0021               	movlb	1	; select bank1
  6858  06A5  0836               	movf	main@displayTemp2^(0+128),w
  6859  06A6  00F0               	movwf	___fttol@f1
  6860  06A7  0837               	movf	(main@displayTemp2+1)^(0+128),w
  6861  06A8  00F1               	movwf	___fttol@f1+1
  6862  06A9  0838               	movf	(main@displayTemp2+2)^(0+128),w
  6863  06AA  00F2               	movwf	___fttol@f1+2
  6864  06AB  318A  220F  3181   	fcall	___fttol
  6865  06AE  0871               	movf	?___fttol+1,w
  6866  06AF  0020               	movlb	0	; select bank0
  6867  06B0  00A1               	movwf	LCD_Write_Int@value+1
  6868  06B1  0870               	movf	?___fttol,w
  6869  06B2  00A0               	movwf	LCD_Write_Int@value
  6870  06B3  01A2               	clrf	LCD_Write_Int@fieldLength
  6871  06B4  03A2               	decf	LCD_Write_Int@fieldLength,f
  6872  06B5  01A3               	clrf	LCD_Write_Int@numPlaces
  6873  06B6  0AA3               	incf	LCD_Write_Int@numPlaces,f
  6874  06B7  01A4               	clrf	LCD_Write_Int@sign
  6875  06B8  318D  2526  3181   	fcall	_LCD_Write_Int
  6876                           
  6877                           ;main.c: 257: LCD_Write_Char(0);
  6878  06BB  3000               	movlw	0
  6879  06BC  3188  2007  3181   	fcall	_LCD_Write_Char
  6880                           
  6881                           ;main.c: 258: LCD_Write_Char('C');
  6882  06BF  3043               	movlw	67
  6883  06C0  3188  2007  3181   	fcall	_LCD_Write_Char
  6884                           
  6885                           ;main.c: 259: LCD_Write_Char(' ');
  6886  06C3  3020               	movlw	32
  6887  06C4  3188  2007  3181   	fcall	_LCD_Write_Char
  6888  06C7                     l3253:	
  6889                           
  6890                           ;main.c: 260: }
  6891                           ;main.c: 262: if(C_or_F==1)
  6892  06C7  0021               	movlb	1	; select bank1
  6893  06C8  033C               	decf	main@C_or_F^(0+128),w
  6894  06C9  1D03               	btfss	3,2
  6895  06CA  2FA0               	goto	l3269
  6896                           
  6897                           ;main.c: 263: {
  6898                           ;main.c: 264: displayTemp = displayTemp*9/5+320;
  6899  06CB  3000               	movlw	0
  6900  06CC  0020               	movlb	0	; select bank0
  6901  06CD  00C0               	movwf	___ftadd@f1
  6902  06CE  30A0               	movlw	160
  6903  06CF  00C1               	movwf	___ftadd@f1+1
  6904  06D0  3043               	movlw	67
  6905  06D1  00C2               	movwf	___ftadd@f1+2
  6906  06D2  3000               	movlw	0
  6907  06D3  00B0               	movwf	___ftdiv@f2
  6908  06D4  30A0               	movlw	160
  6909  06D5  00B1               	movwf	___ftdiv@f2+1
  6910  06D6  3040               	movlw	64
  6911  06D7  00B2               	movwf	___ftdiv@f2+2
  6912  06D8  3000               	movlw	0
  6913  06D9  00A0               	movwf	___ftmul@f1
  6914  06DA  3010               	movlw	16
  6915  06DB  00A1               	movwf	___ftmul@f1+1
  6916  06DC  3041               	movlw	65
  6917  06DD  00A2               	movwf	___ftmul@f1+2
  6918  06DE  0021               	movlb	1	; select bank1
  6919  06DF  0833               	movf	main@displayTemp^(0+128),w
  6920  06E0  0020               	movlb	0	; select bank0
  6921  06E1  00A3               	movwf	___ftmul@f2
  6922  06E2  0021               	movlb	1	; select bank1
  6923  06E3  0834               	movf	(main@displayTemp+1)^(0+128),w
  6924  06E4  0020               	movlb	0	; select bank0
  6925  06E5  00A4               	movwf	___ftmul@f2+1
  6926  06E6  0021               	movlb	1	; select bank1
  6927  06E7  0835               	movf	(main@displayTemp+2)^(0+128),w
  6928  06E8  0020               	movlb	0	; select bank0
  6929  06E9  00A5               	movwf	___ftmul@f2+2
  6930  06EA  318C  2472  3181   	fcall	___ftmul
  6931  06ED  0020               	movlb	0	; select bank0
  6932  06EE  0820               	movf	?___ftmul,w
  6933  06EF  00B3               	movwf	___ftdiv@f1
  6934  06F0  0821               	movf	?___ftmul+1,w
  6935  06F1  00B4               	movwf	___ftdiv@f1+1
  6936  06F2  0822               	movf	?___ftmul+2,w
  6937  06F3  00B5               	movwf	___ftdiv@f1+2
  6938  06F4  318B  231C  3181   	fcall	___ftdiv
  6939  06F7  0020               	movlb	0	; select bank0
  6940  06F8  0830               	movf	?___ftdiv,w
  6941  06F9  00C3               	movwf	___ftadd@f2
  6942  06FA  0831               	movf	?___ftdiv+1,w
  6943  06FB  00C4               	movwf	___ftadd@f2+1
  6944  06FC  0832               	movf	?___ftdiv+2,w
  6945  06FD  00C5               	movwf	___ftadd@f2+2
  6946  06FE  3180  2023  3181   	fcall	___ftadd
  6947  0701  0020               	movlb	0	; select bank0
  6948  0702  0840               	movf	?___ftadd,w
  6949  0703  0021               	movlb	1	; select bank1
  6950  0704  00B3               	movwf	main@displayTemp^(0+128)
  6951  0705  0020               	movlb	0	; select bank0
  6952  0706  0841               	movf	?___ftadd+1,w
  6953  0707  0021               	movlb	1	; select bank1
  6954  0708  00B4               	movwf	(main@displayTemp+1)^(0+128)
  6955  0709  0020               	movlb	0	; select bank0
  6956  070A  0842               	movf	?___ftadd+2,w
  6957  070B  0021               	movlb	1	; select bank1
  6958  070C  00B5               	movwf	(main@displayTemp+2)^(0+128)
  6959                           
  6960                           ;main.c: 265: displayTemp2 = displayTemp2*9/5+320;
  6961  070D  3000               	movlw	0
  6962  070E  0020               	movlb	0	; select bank0
  6963  070F  00C0               	movwf	___ftadd@f1
  6964  0710  30A0               	movlw	160
  6965  0711  00C1               	movwf	___ftadd@f1+1
  6966  0712  3043               	movlw	67
  6967  0713  00C2               	movwf	___ftadd@f1+2
  6968  0714  3000               	movlw	0
  6969  0715  00B0               	movwf	___ftdiv@f2
  6970  0716  30A0               	movlw	160
  6971  0717  00B1               	movwf	___ftdiv@f2+1
  6972  0718  3040               	movlw	64
  6973  0719  00B2               	movwf	___ftdiv@f2+2
  6974  071A  3000               	movlw	0
  6975  071B  00A0               	movwf	___ftmul@f1
  6976  071C  3010               	movlw	16
  6977  071D  00A1               	movwf	___ftmul@f1+1
  6978  071E  3041               	movlw	65
  6979  071F  00A2               	movwf	___ftmul@f1+2
  6980  0720  0021               	movlb	1	; select bank1
  6981  0721  0836               	movf	main@displayTemp2^(0+128),w
  6982  0722  0020               	movlb	0	; select bank0
  6983  0723  00A3               	movwf	___ftmul@f2
  6984  0724  0021               	movlb	1	; select bank1
  6985  0725  0837               	movf	(main@displayTemp2+1)^(0+128),w
  6986  0726  0020               	movlb	0	; select bank0
  6987  0727  00A4               	movwf	___ftmul@f2+1
  6988  0728  0021               	movlb	1	; select bank1
  6989  0729  0838               	movf	(main@displayTemp2+2)^(0+128),w
  6990  072A  0020               	movlb	0	; select bank0
  6991  072B  00A5               	movwf	___ftmul@f2+2
  6992  072C  318C  2472  3181   	fcall	___ftmul
  6993  072F  0020               	movlb	0	; select bank0
  6994  0730  0820               	movf	?___ftmul,w
  6995  0731  00B3               	movwf	___ftdiv@f1
  6996  0732  0821               	movf	?___ftmul+1,w
  6997  0733  00B4               	movwf	___ftdiv@f1+1
  6998  0734  0822               	movf	?___ftmul+2,w
  6999  0735  00B5               	movwf	___ftdiv@f1+2
  7000  0736  318B  231C  3181   	fcall	___ftdiv
  7001  0739  0020               	movlb	0	; select bank0
  7002  073A  0830               	movf	?___ftdiv,w
  7003  073B  00C3               	movwf	___ftadd@f2
  7004  073C  0831               	movf	?___ftdiv+1,w
  7005  073D  00C4               	movwf	___ftadd@f2+1
  7006  073E  0832               	movf	?___ftdiv+2,w
  7007  073F  00C5               	movwf	___ftadd@f2+2
  7008  0740  3180  2023  3181   	fcall	___ftadd
  7009  0743  0020               	movlb	0	; select bank0
  7010  0744  0840               	movf	?___ftadd,w
  7011  0745  0021               	movlb	1	; select bank1
  7012  0746  00B6               	movwf	main@displayTemp2^(0+128)
  7013  0747  0020               	movlb	0	; select bank0
  7014  0748  0841               	movf	?___ftadd+1,w
  7015  0749  0021               	movlb	1	; select bank1
  7016  074A  00B7               	movwf	(main@displayTemp2+1)^(0+128)
  7017  074B  0020               	movlb	0	; select bank0
  7018  074C  0842               	movf	?___ftadd+2,w
  7019  074D  0021               	movlb	1	; select bank1
  7020  074E  00B8               	movwf	(main@displayTemp2+2)^(0+128)
  7021                           
  7022                           ;main.c: 267: { LCD_Set_Cursor(9,0); LCD_Write_Int((int)displayTemp,-1, 1, 0);};
  7023  074F  01F4               	clrf	LCD_Set_Cursor@y
  7024  0750  3009               	movlw	9
  7025  0751  3197  277F  3181   	fcall	_LCD_Set_Cursor
  7026  0754  0021               	movlb	1	; select bank1
  7027  0755  0833               	movf	main@displayTemp^(0+128),w
  7028  0756  00F0               	movwf	___fttol@f1
  7029  0757  0834               	movf	(main@displayTemp+1)^(0+128),w
  7030  0758  00F1               	movwf	___fttol@f1+1
  7031  0759  0835               	movf	(main@displayTemp+2)^(0+128),w
  7032  075A  00F2               	movwf	___fttol@f1+2
  7033  075B  318A  220F  3181   	fcall	___fttol
  7034  075E  0871               	movf	?___fttol+1,w
  7035  075F  0020               	movlb	0	; select bank0
  7036  0760  00A1               	movwf	LCD_Write_Int@value+1
  7037  0761  0870               	movf	?___fttol,w
  7038  0762  00A0               	movwf	LCD_Write_Int@value
  7039  0763  01A2               	clrf	LCD_Write_Int@fieldLength
  7040  0764  03A2               	decf	LCD_Write_Int@fieldLength,f
  7041  0765  01A3               	clrf	LCD_Write_Int@numPlaces
  7042  0766  0AA3               	incf	LCD_Write_Int@numPlaces,f
  7043  0767  01A4               	clrf	LCD_Write_Int@sign
  7044  0768  318D  2526  3181   	fcall	_LCD_Write_Int
  7045                           
  7046                           ;main.c: 268: LCD_Write_Char(0);
  7047  076B  3000               	movlw	0
  7048  076C  3188  2007  3181   	fcall	_LCD_Write_Char
  7049                           
  7050                           ;main.c: 269: LCD_Write_Char('F');
  7051  076F  3046               	movlw	70
  7052  0770  3188  2007  3181   	fcall	_LCD_Write_Char
  7053                           
  7054                           ;main.c: 270: LCD_Write_Char(' ');
  7055  0773  3020               	movlw	32
  7056  0774  3188  2007  3181   	fcall	_LCD_Write_Char
  7057                           
  7058                           ;main.c: 272: { LCD_Set_Cursor(9,1); LCD_Write_Int((int)displayTemp2,-1, 1, 0);};
  7059  0777  01F4               	clrf	LCD_Set_Cursor@y
  7060  0778  0AF4               	incf	LCD_Set_Cursor@y,f
  7061  0779  3009               	movlw	9
  7062  077A  3197  277F  3181   	fcall	_LCD_Set_Cursor
  7063  077D  0021               	movlb	1	; select bank1
  7064  077E  0836               	movf	main@displayTemp2^(0+128),w
  7065  077F  00F0               	movwf	___fttol@f1
  7066  0780  0837               	movf	(main@displayTemp2+1)^(0+128),w
  7067  0781  00F1               	movwf	___fttol@f1+1
  7068  0782  0838               	movf	(main@displayTemp2+2)^(0+128),w
  7069  0783  00F2               	movwf	___fttol@f1+2
  7070  0784  318A  220F  3181   	fcall	___fttol
  7071  0787  0871               	movf	?___fttol+1,w
  7072  0788  0020               	movlb	0	; select bank0
  7073  0789  00A1               	movwf	LCD_Write_Int@value+1
  7074  078A  0870               	movf	?___fttol,w
  7075  078B  00A0               	movwf	LCD_Write_Int@value
  7076  078C  01A2               	clrf	LCD_Write_Int@fieldLength
  7077  078D  03A2               	decf	LCD_Write_Int@fieldLength,f
  7078  078E  01A3               	clrf	LCD_Write_Int@numPlaces
  7079  078F  0AA3               	incf	LCD_Write_Int@numPlaces,f
  7080  0790  01A4               	clrf	LCD_Write_Int@sign
  7081  0791  318D  2526  3181   	fcall	_LCD_Write_Int
  7082                           
  7083                           ;main.c: 273: LCD_Write_Char(0);
  7084  0794  3000               	movlw	0
  7085  0795  3188  2007  3181   	fcall	_LCD_Write_Char
  7086                           
  7087                           ;main.c: 274: LCD_Write_Char('F');
  7088  0798  3046               	movlw	70
  7089  0799  3188  2007  3181   	fcall	_LCD_Write_Char
  7090                           
  7091                           ;main.c: 275: LCD_Write_Char(' ');
  7092  079C  3020               	movlw	32
  7093  079D  3188  2007  3181   	fcall	_LCD_Write_Char
  7094  07A0                     l3269:	
  7095                           
  7096                           ;main.c: 276: }
  7097                           ;main.c: 279: if(choice==0)C_or_F=0;
  7098  07A0  0021               	movlb	1	; select bank1
  7099  07A1  083B               	movf	main@choice^(0+128),w
  7100  07A2  1903               	btfsc	3,2
  7101  07A3  01BC               	clrf	main@C_or_F^(0+128)
  7102                           
  7103                           ;main.c: 281: if(choice==1)C_or_F=1;
  7104  07A4  033B               	decf	main@choice^(0+128),w
  7105  07A5  1D03               	btfss	3,2
  7106  07A6  2FA9               	goto	l3277
  7107  07A7  01BC               	clrf	main@C_or_F^(0+128)
  7108  07A8  0ABC               	incf	main@C_or_F^(0+128),f
  7109  07A9                     l3277:	
  7110                           
  7111                           ;main.c: 283: if(choice==2)C_or_F=1-C_or_F;
  7112  07A9  3002               	movlw	2
  7113  07AA  063B               	xorwf	main@choice^(0+128),w
  7114  07AB  1D03               	btfss	3,2
  7115  07AC  2FB5               	goto	l3281
  7116  07AD  033C               	decf	main@C_or_F^(0+128),w
  7117  07AE  3AFF               	xorlw	255
  7118  07AF  3E01               	addlw	1
  7119  07B0  0020               	movlb	0	; select bank0
  7120  07B1  00E9               	movwf	??_main
  7121  07B2  0869               	movf	??_main,w
  7122  07B3  0021               	movlb	1	; select bank1
  7123  07B4  00BC               	movwf	main@C_or_F^(0+128)
  7124  07B5                     l3281:	
  7125                           
  7126                           ;main.c: 299: loop=0;
  7127  07B5  01A3               	clrf	main@loop^(0+128)
  7128  07B6                     l3283:	
  7129                           
  7130                           ;main.c: 300: }
  7131                           ;main.c: 301: loop+=1;
  7132  07B6  3001               	movlw	1
  7133  07B7  0020               	movlb	0	; select bank0
  7134  07B8  00E9               	movwf	??_main
  7135  07B9  0869               	movf	??_main,w
  7136  07BA  0021               	movlb	1	; select bank1
  7137  07BB  07A3               	addwf	main@loop^(0+128),f
  7138  07BC  2B99               	goto	l3019
  7139  07BD                     __end_of_main:	
  7140                           
  7141                           	psect	text1
  7142  0DF1                     __ptext1:	
  7143 ;; *************** function _tempCalc *****************
  7144 ;; Defined at:
  7145 ;;		line 4 in file "tempCalc.c"
  7146 ;; Parameters:    Size  Location     Type
  7147 ;;  analogValue     2   61[BANK0 ] int 
  7148 ;; Auto vars:     Size  Location     Type
  7149 ;;  steinhart       3   70[BANK0 ] float 
  7150 ;;  R               3   64[BANK0 ] float 
  7151 ;; Return value:  Size  Location     Type
  7152 ;;                  3   61[BANK0 ] float 
  7153 ;; Registers used:
  7154 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7155 ;; Tracked objects:
  7156 ;;		On entry : 0/0
  7157 ;;		On exit  : 0/0
  7158 ;;		Unchanged: 0/0
  7159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7160 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7161 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7163 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7164 ;;Total ram usage:       12 bytes
  7165 ;; Hardware stack levels used:    1
  7166 ;; Hardware stack levels required when called:    4
  7167 ;; This function calls:
  7168 ;;		___awtoft
  7169 ;;		___ftadd
  7170 ;;		___ftdiv
  7171 ;;		___ftmul
  7172 ;;		___ftsub
  7173 ;;		_log
  7174 ;; This function is called by:
  7175 ;;		_main
  7176 ;; This function uses a non-reentrant model
  7177 ;;
  7178                           
  7179                           
  7180                           ;psect for function _tempCalc
  7181  0DF1                     _tempCalc:	
  7182                           
  7183                           ;tempCalc.c: 6: float R, steinhart;
  7184                           ;tempCalc.c: 8: R = 10020/(1023/(float)analogValue - 1);
  7185                           
  7186                           ;incstack = 0
  7187                           ; Regs used in _tempCalc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7188  0DF1  3000               	movlw	0
  7189  0DF2  0020               	movlb	0	; select bank0
  7190  0DF3  00C0               	movwf	___ftadd@f1
  7191  0DF4  3080               	movlw	128
  7192  0DF5  00C1               	movwf	___ftadd@f1+1
  7193  0DF6  30BF               	movlw	191
  7194  0DF7  00C2               	movwf	___ftadd@f1+2
  7195  0DF8  085E               	movf	tempCalc@analogValue+1,w
  7196  0DF9  00F9               	movwf	___awtoft@c+1
  7197  0DFA  085D               	movf	tempCalc@analogValue,w
  7198  0DFB  00F8               	movwf	___awtoft@c
  7199  0DFC  3196  2659  318D   	fcall	___awtoft
  7200  0DFF  0878               	movf	?___awtoft,w
  7201  0E00  0020               	movlb	0	; select bank0
  7202  0E01  00B0               	movwf	___ftdiv@f2
  7203  0E02  0879               	movf	?___awtoft+1,w
  7204  0E03  00B1               	movwf	___ftdiv@f2+1
  7205  0E04  087A               	movf	?___awtoft+2,w
  7206  0E05  00B2               	movwf	___ftdiv@f2+2
  7207  0E06  30C0               	movlw	192
  7208  0E07  00B3               	movwf	___ftdiv@f1
  7209  0E08  307F               	movlw	127
  7210  0E09  00B4               	movwf	___ftdiv@f1+1
  7211  0E0A  3044               	movlw	68
  7212  0E0B  00B5               	movwf	___ftdiv@f1+2
  7213  0E0C  318B  231C  318D   	fcall	___ftdiv
  7214  0E0F  0020               	movlb	0	; select bank0
  7215  0E10  0830               	movf	?___ftdiv,w
  7216  0E11  00C3               	movwf	___ftadd@f2
  7217  0E12  0831               	movf	?___ftdiv+1,w
  7218  0E13  00C4               	movwf	___ftadd@f2+1
  7219  0E14  0832               	movf	?___ftdiv+2,w
  7220  0E15  00C5               	movwf	___ftadd@f2+2
  7221  0E16  3180  2023  318D   	fcall	___ftadd
  7222  0E19  0020               	movlb	0	; select bank0
  7223  0E1A  0840               	movf	?___ftadd,w
  7224  0E1B  00E3               	movwf	_tempCalc$990
  7225  0E1C  0841               	movf	?___ftadd+1,w
  7226  0E1D  00E4               	movwf	_tempCalc$990+1
  7227  0E1E  0842               	movf	?___ftadd+2,w
  7228  0E1F  00E5               	movwf	_tempCalc$990+2
  7229                           
  7230                           ;tempCalc.c: 6: float R, steinhart;
  7231                           ;tempCalc.c: 8: R = 10020/(1023/(float)analogValue - 1);
  7232  0E20  0863               	movf	_tempCalc$990,w
  7233  0E21  00B0               	movwf	___ftdiv@f2
  7234  0E22  0864               	movf	_tempCalc$990+1,w
  7235  0E23  00B1               	movwf	___ftdiv@f2+1
  7236  0E24  0865               	movf	_tempCalc$990+2,w
  7237  0E25  00B2               	movwf	___ftdiv@f2+2
  7238  0E26  3090               	movlw	144
  7239  0E27  00B3               	movwf	___ftdiv@f1
  7240  0E28  301C               	movlw	28
  7241  0E29  00B4               	movwf	___ftdiv@f1+1
  7242  0E2A  3046               	movlw	70
  7243  0E2B  00B5               	movwf	___ftdiv@f1+2
  7244  0E2C  318B  231C  318D   	fcall	___ftdiv
  7245  0E2F  0020               	movlb	0	; select bank0
  7246  0E30  0830               	movf	?___ftdiv,w
  7247  0E31  00E0               	movwf	tempCalc@R
  7248  0E32  0831               	movf	?___ftdiv+1,w
  7249  0E33  00E1               	movwf	tempCalc@R+1
  7250  0E34  0832               	movf	?___ftdiv+2,w
  7251  0E35  00E2               	movwf	tempCalc@R+2
  7252                           
  7253                           ;tempCalc.c: 10: steinhart = R /10061;
  7254  0E36  3034               	movlw	52
  7255  0E37  00B0               	movwf	___ftdiv@f2
  7256  0E38  301D               	movlw	29
  7257  0E39  00B1               	movwf	___ftdiv@f2+1
  7258  0E3A  3046               	movlw	70
  7259  0E3B  00B2               	movwf	___ftdiv@f2+2
  7260  0E3C  0860               	movf	tempCalc@R,w
  7261  0E3D  00B3               	movwf	___ftdiv@f1
  7262  0E3E  0861               	movf	tempCalc@R+1,w
  7263  0E3F  00B4               	movwf	___ftdiv@f1+1
  7264  0E40  0862               	movf	tempCalc@R+2,w
  7265  0E41  00B5               	movwf	___ftdiv@f1+2
  7266  0E42  318B  231C  318D   	fcall	___ftdiv
  7267  0E45  0020               	movlb	0	; select bank0
  7268  0E46  0830               	movf	?___ftdiv,w
  7269  0E47  00E6               	movwf	tempCalc@steinhart
  7270  0E48  0831               	movf	?___ftdiv+1,w
  7271  0E49  00E7               	movwf	tempCalc@steinhart+1
  7272  0E4A  0832               	movf	?___ftdiv+2,w
  7273  0E4B  00E8               	movwf	tempCalc@steinhart+2
  7274                           
  7275                           ;tempCalc.c: 11: steinhart = log(steinhart);
  7276  0E4C  0866               	movf	tempCalc@steinhart,w
  7277  0E4D  00D7               	movwf	log@x
  7278  0E4E  0867               	movf	tempCalc@steinhart+1,w
  7279  0E4F  00D8               	movwf	log@x+1
  7280  0E50  0868               	movf	tempCalc@steinhart+2,w
  7281  0E51  00D9               	movwf	log@x+2
  7282  0E52  318B  23C5  318D   	fcall	_log
  7283  0E55  0020               	movlb	0	; select bank0
  7284  0E56  0857               	movf	?_log,w
  7285  0E57  00E6               	movwf	tempCalc@steinhart
  7286  0E58  0858               	movf	?_log+1,w
  7287  0E59  00E7               	movwf	tempCalc@steinhart+1
  7288  0E5A  0859               	movf	?_log+2,w
  7289  0E5B  00E8               	movwf	tempCalc@steinhart+2
  7290                           
  7291                           ;tempCalc.c: 12: steinhart /= 3995;
  7292  0E5C  30B0               	movlw	176
  7293  0E5D  00B0               	movwf	___ftdiv@f2
  7294  0E5E  3079               	movlw	121
  7295  0E5F  00B1               	movwf	___ftdiv@f2+1
  7296  0E60  3045               	movlw	69
  7297  0E61  00B2               	movwf	___ftdiv@f2+2
  7298  0E62  0866               	movf	tempCalc@steinhart,w
  7299  0E63  00B3               	movwf	___ftdiv@f1
  7300  0E64  0867               	movf	tempCalc@steinhart+1,w
  7301  0E65  00B4               	movwf	___ftdiv@f1+1
  7302  0E66  0868               	movf	tempCalc@steinhart+2,w
  7303  0E67  00B5               	movwf	___ftdiv@f1+2
  7304  0E68  318B  231C  318D   	fcall	___ftdiv
  7305  0E6B  0020               	movlb	0	; select bank0
  7306  0E6C  0830               	movf	?___ftdiv,w
  7307  0E6D  00E6               	movwf	tempCalc@steinhart
  7308  0E6E  0831               	movf	?___ftdiv+1,w
  7309  0E6F  00E7               	movwf	tempCalc@steinhart+1
  7310  0E70  0832               	movf	?___ftdiv+2,w
  7311  0E71  00E8               	movwf	tempCalc@steinhart+2
  7312                           
  7313                           ;tempCalc.c: 13: steinhart += 1.0 / (25 + 273.15);
  7314  0E72  30CF               	movlw	207
  7315  0E73  00C0               	movwf	___ftadd@f1
  7316  0E74  305B               	movlw	91
  7317  0E75  00C1               	movwf	___ftadd@f1+1
  7318  0E76  303B               	movlw	59
  7319  0E77  00C2               	movwf	___ftadd@f1+2
  7320  0E78  0866               	movf	tempCalc@steinhart,w
  7321  0E79  00C3               	movwf	___ftadd@f2
  7322  0E7A  0867               	movf	tempCalc@steinhart+1,w
  7323  0E7B  00C4               	movwf	___ftadd@f2+1
  7324  0E7C  0868               	movf	tempCalc@steinhart+2,w
  7325  0E7D  00C5               	movwf	___ftadd@f2+2
  7326  0E7E  3180  2023  318D   	fcall	___ftadd
  7327  0E81  0020               	movlb	0	; select bank0
  7328  0E82  0840               	movf	?___ftadd,w
  7329  0E83  00E6               	movwf	tempCalc@steinhart
  7330  0E84  0841               	movf	?___ftadd+1,w
  7331  0E85  00E7               	movwf	tempCalc@steinhart+1
  7332  0E86  0842               	movf	?___ftadd+2,w
  7333  0E87  00E8               	movwf	tempCalc@steinhart+2
  7334                           
  7335                           ;tempCalc.c: 14: steinhart = 1.0 / steinhart;
  7336  0E88  0866               	movf	tempCalc@steinhart,w
  7337  0E89  00B0               	movwf	___ftdiv@f2
  7338  0E8A  0867               	movf	tempCalc@steinhart+1,w
  7339  0E8B  00B1               	movwf	___ftdiv@f2+1
  7340  0E8C  0868               	movf	tempCalc@steinhart+2,w
  7341  0E8D  00B2               	movwf	___ftdiv@f2+2
  7342  0E8E  3000               	movlw	0
  7343  0E8F  00B3               	movwf	___ftdiv@f1
  7344  0E90  3080               	movlw	128
  7345  0E91  00B4               	movwf	___ftdiv@f1+1
  7346  0E92  303F               	movlw	63
  7347  0E93  00B5               	movwf	___ftdiv@f1+2
  7348  0E94  318B  231C  318D   	fcall	___ftdiv
  7349  0E97  0020               	movlb	0	; select bank0
  7350  0E98  0830               	movf	?___ftdiv,w
  7351  0E99  00E6               	movwf	tempCalc@steinhart
  7352  0E9A  0831               	movf	?___ftdiv+1,w
  7353  0E9B  00E7               	movwf	tempCalc@steinhart+1
  7354  0E9C  0832               	movf	?___ftdiv+2,w
  7355  0E9D  00E8               	movwf	tempCalc@steinhart+2
  7356                           
  7357                           ;tempCalc.c: 15: steinhart -= 273.15;
  7358  0E9E  3093               	movlw	147
  7359  0E9F  00CD               	movwf	___ftsub@f2
  7360  0EA0  3088               	movlw	136
  7361  0EA1  00CE               	movwf	___ftsub@f2+1
  7362  0EA2  3043               	movlw	67
  7363  0EA3  00CF               	movwf	___ftsub@f2+2
  7364  0EA4  0866               	movf	tempCalc@steinhart,w
  7365  0EA5  00D0               	movwf	___ftsub@f1
  7366  0EA6  0867               	movf	tempCalc@steinhart+1,w
  7367  0EA7  00D1               	movwf	___ftsub@f1+1
  7368  0EA8  0868               	movf	tempCalc@steinhart+2,w
  7369  0EA9  00D2               	movwf	___ftsub@f1+2
  7370  0EAA  3180  2005  318D   	fcall	___ftsub
  7371  0EAD  0020               	movlb	0	; select bank0
  7372  0EAE  084D               	movf	?___ftsub,w
  7373  0EAF  00E6               	movwf	tempCalc@steinhart
  7374  0EB0  084E               	movf	?___ftsub+1,w
  7375  0EB1  00E7               	movwf	tempCalc@steinhart+1
  7376  0EB2  084F               	movf	?___ftsub+2,w
  7377  0EB3  00E8               	movwf	tempCalc@steinhart+2
  7378                           
  7379                           ;tempCalc.c: 17: steinhart*=10;
  7380  0EB4  3000               	movlw	0
  7381  0EB5  00A0               	movwf	___ftmul@f1
  7382  0EB6  3020               	movlw	32
  7383  0EB7  00A1               	movwf	___ftmul@f1+1
  7384  0EB8  3041               	movlw	65
  7385  0EB9  00A2               	movwf	___ftmul@f1+2
  7386  0EBA  0866               	movf	tempCalc@steinhart,w
  7387  0EBB  00A3               	movwf	___ftmul@f2
  7388  0EBC  0867               	movf	tempCalc@steinhart+1,w
  7389  0EBD  00A4               	movwf	___ftmul@f2+1
  7390  0EBE  0868               	movf	tempCalc@steinhart+2,w
  7391  0EBF  00A5               	movwf	___ftmul@f2+2
  7392  0EC0  318C  2472         	fcall	___ftmul
  7393  0EC2  0020               	movlb	0	; select bank0
  7394  0EC3  0820               	movf	?___ftmul,w
  7395  0EC4  00E6               	movwf	tempCalc@steinhart
  7396  0EC5  0821               	movf	?___ftmul+1,w
  7397  0EC6  00E7               	movwf	tempCalc@steinhart+1
  7398  0EC7  0822               	movf	?___ftmul+2,w
  7399  0EC8  00E8               	movwf	tempCalc@steinhart+2
  7400                           
  7401                           ;tempCalc.c: 21: return steinhart;
  7402  0EC9  0866               	movf	tempCalc@steinhart,w
  7403  0ECA  00DD               	movwf	?_tempCalc
  7404  0ECB  0867               	movf	tempCalc@steinhart+1,w
  7405  0ECC  00DE               	movwf	?_tempCalc+1
  7406  0ECD  0868               	movf	tempCalc@steinhart+2,w
  7407  0ECE  00DF               	movwf	?_tempCalc+2
  7408  0ECF  0008               	return
  7409  0ED0                     __end_of_tempCalc:	
  7410                           
  7411                           	psect	text2
  7412  0BC5                     __ptext2:	
  7413 ;; *************** function _log *****************
  7414 ;; Defined at:
  7415 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\log.c"
  7416 ;; Parameters:    Size  Location     Type
  7417 ;;  x               3   55[BANK0 ] float 
  7418 ;; Auto vars:     Size  Location     Type
  7419 ;;  exponent        2   59[BANK0 ] int 
  7420 ;; Return value:  Size  Location     Type
  7421 ;;                  3   55[BANK0 ] int 
  7422 ;; Registers used:
  7423 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7424 ;; Tracked objects:
  7425 ;;		On entry : 0/0
  7426 ;;		On exit  : 0/0
  7427 ;;		Unchanged: 0/0
  7428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7429 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7430 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7431 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7432 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7433 ;;Total ram usage:        6 bytes
  7434 ;; Hardware stack levels used:    1
  7435 ;; Hardware stack levels required when called:    3
  7436 ;; This function calls:
  7437 ;;		___awtoft
  7438 ;;		___ftadd
  7439 ;;		___ftge
  7440 ;;		___ftmul
  7441 ;;		_eval_poly
  7442 ;;		_frexp
  7443 ;; This function is called by:
  7444 ;;		_tempCalc
  7445 ;; This function uses a non-reentrant model
  7446 ;;
  7447                           
  7448                           
  7449                           ;psect for function _log
  7450  0BC5                     _log:	
  7451                           
  7452                           ;incstack = 0
  7453                           ; Regs used in _log: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7454  0BC5  0020               	movlb	0	; select bank0
  7455  0BC6  0857               	movf	log@x,w
  7456  0BC7  00F0               	movwf	___ftge@ff1
  7457  0BC8  0858               	movf	log@x+1,w
  7458  0BC9  00F1               	movwf	___ftge@ff1+1
  7459  0BCA  0859               	movf	log@x+2,w
  7460  0BCB  00F2               	movwf	___ftge@ff1+2
  7461  0BCC  3000               	movlw	0
  7462  0BCD  00F3               	movwf	___ftge@ff2
  7463  0BCE  3000               	movlw	0
  7464  0BCF  00F4               	movwf	___ftge@ff2+1
  7465  0BD0  3000               	movlw	0
  7466  0BD1  00F5               	movwf	___ftge@ff2+2
  7467  0BD2  3197  2709  318B   	fcall	___ftge
  7468  0BD5  1803               	btfsc	3,0
  7469  0BD6  2BE3               	goto	l2483
  7470  0BD7  3021               	movlw	33
  7471  0BD8  0020               	movlb	0	; select bank0
  7472  0BD9  00EC               	movwf	_errno
  7473  0BDA  3000               	movlw	0
  7474  0BDB  00ED               	movwf	_errno+1
  7475  0BDC  3000               	movlw	0
  7476  0BDD  00D7               	movwf	?_log
  7477  0BDE  3000               	movlw	0
  7478  0BDF  00D8               	movwf	?_log+1
  7479  0BE0  3000               	movlw	0
  7480  0BE1  00D9               	movwf	?_log+2
  7481  0BE2  0008               	return
  7482  0BE3                     l2483:	
  7483  0BE3  0020               	movlb	0	; select bank0
  7484  0BE4  0859               	movf	log@x+2,w
  7485  0BE5  0458               	iorwf	log@x+1,w
  7486  0BE6  0457               	iorwf	log@x,w
  7487  0BE7  1D03               	skipz
  7488  0BE8  2BF4               	goto	l2489
  7489  0BE9  3022               	movlw	34
  7490  0BEA  00EC               	movwf	_errno
  7491  0BEB  3000               	movlw	0
  7492  0BEC  00ED               	movwf	_errno+1
  7493  0BED  3000               	movlw	0
  7494  0BEE  00D7               	movwf	?_log
  7495  0BEF  3000               	movlw	0
  7496  0BF0  00D8               	movwf	?_log+1
  7497  0BF1  3000               	movlw	0
  7498  0BF2  00D9               	movwf	?_log+2
  7499  0BF3  0008               	return
  7500  0BF4                     l2489:	
  7501  0BF4  3000               	movlw	0
  7502  0BF5  00C0               	movwf	___ftadd@f1
  7503  0BF6  3080               	movlw	128
  7504  0BF7  00C1               	movwf	___ftadd@f1+1
  7505  0BF8  30BF               	movlw	191
  7506  0BF9  00C2               	movwf	___ftadd@f1+2
  7507  0BFA  3000               	movlw	0
  7508  0BFB  00A0               	movwf	___ftmul@f1
  7509  0BFC  3000               	movlw	0
  7510  0BFD  00A1               	movwf	___ftmul@f1+1
  7511  0BFE  3040               	movlw	64
  7512  0BFF  00A2               	movwf	___ftmul@f1+2
  7513  0C00  305B               	movlw	(low (log@exponent| 0))& (0+255)
  7514  0C01  00DA               	movwf	??_log
  7515  0C02  085A               	movf	??_log,w
  7516  0C03  00F3               	movwf	frexp@eptr
  7517  0C04  0857               	movf	log@x,w
  7518  0C05  00F0               	movwf	frexp@value
  7519  0C06  0858               	movf	log@x+1,w
  7520  0C07  00F1               	movwf	frexp@value+1
  7521  0C08  0859               	movf	log@x+2,w
  7522  0C09  00F2               	movwf	frexp@value+2
  7523  0C0A  3197  2744  318B   	fcall	_frexp
  7524  0C0D  0870               	movf	?_frexp,w
  7525  0C0E  0020               	movlb	0	; select bank0
  7526  0C0F  00A3               	movwf	___ftmul@f2
  7527  0C10  0871               	movf	?_frexp+1,w
  7528  0C11  00A4               	movwf	___ftmul@f2+1
  7529  0C12  0872               	movf	?_frexp+2,w
  7530  0C13  00A5               	movwf	___ftmul@f2+2
  7531  0C14  318C  2472  318B   	fcall	___ftmul
  7532  0C17  0020               	movlb	0	; select bank0
  7533  0C18  0820               	movf	?___ftmul,w
  7534  0C19  00C3               	movwf	___ftadd@f2
  7535  0C1A  0821               	movf	?___ftmul+1,w
  7536  0C1B  00C4               	movwf	___ftadd@f2+1
  7537  0C1C  0822               	movf	?___ftmul+2,w
  7538  0C1D  00C5               	movwf	___ftadd@f2+2
  7539  0C1E  3180  2023  318B   	fcall	___ftadd
  7540  0C21  0020               	movlb	0	; select bank0
  7541  0C22  0840               	movf	?___ftadd,w
  7542  0C23  00D7               	movwf	log@x
  7543  0C24  0841               	movf	?___ftadd+1,w
  7544  0C25  00D8               	movwf	log@x+1
  7545  0C26  0842               	movf	?___ftadd+2,w
  7546  0C27  00D9               	movwf	log@x+2
  7547  0C28  30FF               	movlw	255
  7548  0C29  07DB               	addwf	log@exponent,f
  7549  0C2A  30FF               	movlw	255
  7550  0C2B  3DDC               	addwfc	log@exponent+1,f
  7551  0C2C  0857               	movf	log@x,w
  7552  0C2D  00CD               	movwf	eval_poly@x
  7553  0C2E  0858               	movf	log@x+1,w
  7554  0C2F  00CE               	movwf	eval_poly@x+1
  7555  0C30  0859               	movf	log@x+2,w
  7556  0C31  00CF               	movwf	eval_poly@x+2
  7557  0C32  3000               	movlw	low (log@coeff| (0+32768))
  7558  0C33  00D0               	movwf	eval_poly@d
  7559  0C34  3090               	movlw	high (log@coeff| (0+32768))
  7560  0C35  00D1               	movwf	eval_poly@d+1
  7561  0C36  3008               	movlw	8
  7562  0C37  00D2               	movwf	eval_poly@n
  7563  0C38  3000               	movlw	0
  7564  0C39  00D3               	movwf	eval_poly@n+1
  7565  0C3A  3188  20C9  318B   	fcall	_eval_poly
  7566  0C3D  0020               	movlb	0	; select bank0
  7567  0C3E  084D               	movf	?_eval_poly,w
  7568  0C3F  00D7               	movwf	log@x
  7569  0C40  084E               	movf	?_eval_poly+1,w
  7570  0C41  00D8               	movwf	log@x+1
  7571  0C42  084F               	movf	?_eval_poly+2,w
  7572  0C43  00D9               	movwf	log@x+2
  7573  0C44  0857               	movf	log@x,w
  7574  0C45  00C0               	movwf	___ftadd@f1
  7575  0C46  0858               	movf	log@x+1,w
  7576  0C47  00C1               	movwf	___ftadd@f1+1
  7577  0C48  0859               	movf	log@x+2,w
  7578  0C49  00C2               	movwf	___ftadd@f1+2
  7579  0C4A  3072               	movlw	114
  7580  0C4B  00A0               	movwf	___ftmul@f1
  7581  0C4C  3031               	movlw	49
  7582  0C4D  00A1               	movwf	___ftmul@f1+1
  7583  0C4E  303F               	movlw	63
  7584  0C4F  00A2               	movwf	___ftmul@f1+2
  7585  0C50  085C               	movf	log@exponent+1,w
  7586  0C51  00F9               	movwf	___awtoft@c+1
  7587  0C52  085B               	movf	log@exponent,w
  7588  0C53  00F8               	movwf	___awtoft@c
  7589  0C54  3196  2659  318B   	fcall	___awtoft
  7590  0C57  0878               	movf	?___awtoft,w
  7591  0C58  0020               	movlb	0	; select bank0
  7592  0C59  00A3               	movwf	___ftmul@f2
  7593  0C5A  0879               	movf	?___awtoft+1,w
  7594  0C5B  00A4               	movwf	___ftmul@f2+1
  7595  0C5C  087A               	movf	?___awtoft+2,w
  7596  0C5D  00A5               	movwf	___ftmul@f2+2
  7597  0C5E  318C  2472  318B   	fcall	___ftmul
  7598  0C61  0020               	movlb	0	; select bank0
  7599  0C62  0820               	movf	?___ftmul,w
  7600  0C63  00C3               	movwf	___ftadd@f2
  7601  0C64  0821               	movf	?___ftmul+1,w
  7602  0C65  00C4               	movwf	___ftadd@f2+1
  7603  0C66  0822               	movf	?___ftmul+2,w
  7604  0C67  00C5               	movwf	___ftadd@f2+2
  7605  0C68  3180  2023         	fcall	___ftadd
  7606  0C6A  0020               	movlb	0	; select bank0
  7607  0C6B  0840               	movf	?___ftadd,w
  7608  0C6C  00D7               	movwf	?_log
  7609  0C6D  0841               	movf	?___ftadd+1,w
  7610  0C6E  00D8               	movwf	?_log+1
  7611  0C6F  0842               	movf	?___ftadd+2,w
  7612  0C70  00D9               	movwf	?_log+2
  7613  0C71  0008               	return
  7614  0C72                     __end_of_log:	
  7615                           
  7616                           	psect	text3
  7617  1744                     __ptext3:	
  7618 ;; *************** function _frexp *****************
  7619 ;; Defined at:
  7620 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\frexp.c"
  7621 ;; Parameters:    Size  Location     Type
  7622 ;;  value           3    0[COMMON] int 
  7623 ;;  eptr            1    3[COMMON] PTR int 
  7624 ;;		 -> log@exponent(2), 
  7625 ;; Auto vars:     Size  Location     Type
  7626 ;;		None
  7627 ;; Return value:  Size  Location     Type
  7628 ;;                  3    0[COMMON] PTR int 
  7629 ;; Registers used:
  7630 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7631 ;; Tracked objects:
  7632 ;;		On entry : 0/0
  7633 ;;		On exit  : 0/0
  7634 ;;		Unchanged: 0/0
  7635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7636 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7638 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7639 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7640 ;;Total ram usage:        6 bytes
  7641 ;; Hardware stack levels used:    1
  7642 ;; This function calls:
  7643 ;;		Nothing
  7644 ;; This function is called by:
  7645 ;;		_log
  7646 ;; This function uses a non-reentrant model
  7647 ;;
  7648                           
  7649                           
  7650                           ;psect for function _frexp
  7651  1744                     _frexp:	
  7652                           
  7653                           ;incstack = 0
  7654                           ; Regs used in _frexp: [wreg+fsr1l+fsr1h+status,2+status,0]
  7655  1744  0872               	movf	frexp@value+2,w
  7656  1745  0471               	iorwf	frexp@value+1,w
  7657  1746  0470               	iorwf	frexp@value,w
  7658  1747  1D03               	skipz
  7659  1748  2F56               	goto	l2315
  7660  1749  0873               	movf	frexp@eptr,w
  7661  174A  0086               	movwf	6
  7662  174B  0187               	clrf	7
  7663  174C  3000               	movlw	0
  7664  174D  3FC0               	movwi [0]fsr1
  7665  174E  3FC1               	movwi [1]fsr1
  7666  174F  3000               	movlw	0
  7667  1750  00F0               	movwf	?_frexp
  7668  1751  3000               	movlw	0
  7669  1752  00F1               	movwf	?_frexp+1
  7670  1753  3000               	movlw	0
  7671  1754  00F2               	movwf	?_frexp+2
  7672  1755  0008               	return
  7673  1756                     l2315:	
  7674  1756  0872               	movf	frexp@value+2,w
  7675  1757  397F               	andlw	127
  7676  1758  00F4               	movwf	??_frexp
  7677  1759  01F5               	clrf	??_frexp+1
  7678  175A  35F4               	lslf	??_frexp,f
  7679  175B  0DF5               	rlf	??_frexp+1,f
  7680  175C  0873               	movf	frexp@eptr,w
  7681  175D  0086               	movwf	6
  7682  175E  0187               	clrf	7
  7683  175F  0874               	movf	??_frexp,w
  7684  1760  3FC0               	movwi [0]fsr1
  7685  1761  0875               	movf	??_frexp+1,w
  7686  1762  3FC1               	movwi [1]fsr1
  7687  1763  0D71               	rlf	frexp@value+1,w
  7688  1764  0D71               	rlf	frexp@value+1,w
  7689  1765  3901               	andlw	1
  7690  1766  00F4               	movwf	??_frexp
  7691  1767  01F5               	clrf	??_frexp+1
  7692  1768  0873               	movf	frexp@eptr,w
  7693  1769  0086               	movwf	6
  7694  176A  0187               	clrf	7
  7695  176B  0874               	movf	??_frexp,w
  7696  176C  0481               	iorwf	1,f
  7697  176D  3141               	addfsr 1,1
  7698  176E  0875               	movf	??_frexp+1,w
  7699  176F  0481               	iorwf	1,f
  7700  1770  0873               	movf	frexp@eptr,w
  7701  1771  0086               	movwf	6
  7702  1772  0187               	clrf	7
  7703  1773  3082               	movlw	130
  7704  1774  0781               	addwf	1,f
  7705  1775  3141               	addfsr 1,1
  7706  1776  30FF               	movlw	255
  7707  1777  3D81               	addwfc	1,f
  7708  1778  317F               	addfsr 1,-1
  7709  1779  0872               	movf	frexp@value+2,w
  7710  177A  3980               	andlw	-128
  7711  177B  383F               	iorlw	63
  7712  177C  00F2               	movwf	frexp@value+2
  7713  177D  13F1               	bcf	frexp@value+1,7
  7714  177E  0008               	return
  7715  177F                     __end_of_frexp:	
  7716                           
  7717                           	psect	text4
  7718  08C9                     __ptext4:	
  7719 ;; *************** function _eval_poly *****************
  7720 ;; Defined at:
  7721 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\evalpoly.c"
  7722 ;; Parameters:    Size  Location     Type
  7723 ;;  x               3   45[BANK0 ] PTR int 
  7724 ;;  d               2   48[BANK0 ] PTR const 
  7725 ;;		 -> log@coeff(27), 
  7726 ;;  n               2   50[BANK0 ] int 
  7727 ;; Auto vars:     Size  Location     Type
  7728 ;;  res             3   52[BANK0 ] int 
  7729 ;; Return value:  Size  Location     Type
  7730 ;;                  3   45[BANK0 ] int 
  7731 ;; Registers used:
  7732 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7733 ;; Tracked objects:
  7734 ;;		On entry : 0/0
  7735 ;;		On exit  : 0/0
  7736 ;;		Unchanged: 0/0
  7737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7738 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7739 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7741 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7742 ;;Total ram usage:       10 bytes
  7743 ;; Hardware stack levels used:    1
  7744 ;; Hardware stack levels required when called:    2
  7745 ;; This function calls:
  7746 ;;		___ftadd
  7747 ;;		___ftmul
  7748 ;;		___wmul
  7749 ;; This function is called by:
  7750 ;;		_log
  7751 ;; This function uses a non-reentrant model
  7752 ;;
  7753                           
  7754                           
  7755                           ;psect for function _eval_poly
  7756  08C9                     _eval_poly:	
  7757                           
  7758                           ;incstack = 0
  7759                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7760  08C9  0020               	movlb	0	; select bank0
  7761  08CA  0853               	movf	eval_poly@n+1,w
  7762  08CB  00F1               	movwf	___wmul@multiplier+1
  7763  08CC  0852               	movf	eval_poly@n,w
  7764  08CD  00F0               	movwf	___wmul@multiplier
  7765  08CE  3003               	movlw	3
  7766  08CF  00F2               	movwf	___wmul@multiplicand
  7767  08D0  3000               	movlw	0
  7768  08D1  00F3               	movwf	___wmul@multiplicand+1
  7769  08D2  3196  263E  3188   	fcall	___wmul
  7770  08D5  0020               	movlb	0	; select bank0
  7771  08D6  0850               	movf	eval_poly@d,w
  7772  08D7  0770               	addwf	?___wmul,w
  7773  08D8  0084               	movwf	4
  7774  08D9  0851               	movf	eval_poly@d+1,w
  7775  08DA  3D71               	addwfc	?___wmul+1,w
  7776  08DB  0085               	movwf	5
  7777  08DC  3F00               	moviw [0]fsr0
  7778  08DD  00D4               	movwf	eval_poly@res
  7779  08DE  3F01               	moviw [1]fsr0
  7780  08DF  00D5               	movwf	eval_poly@res+1
  7781  08E0  3F02               	moviw [2]fsr0
  7782  08E1                     L1:	
  7783  08E1  00D6               	movwf	eval_poly@res+2
  7784  08E2  0852               	movf	eval_poly@n,w
  7785  08E3  0453               	iorwf	eval_poly@n+1,w
  7786  08E4  1903               	btfsc	3,2
  7787  08E5  2922               	goto	l2333
  7788  08E6  30FF               	movlw	255
  7789  08E7  07D2               	addwf	eval_poly@n,f
  7790  08E8  30FF               	movlw	255
  7791  08E9  3DD3               	addwfc	eval_poly@n+1,f
  7792  08EA  0853               	movf	eval_poly@n+1,w
  7793  08EB  00F1               	movwf	___wmul@multiplier+1
  7794  08EC  0852               	movf	eval_poly@n,w
  7795  08ED  00F0               	movwf	___wmul@multiplier
  7796  08EE  3003               	movlw	3
  7797  08EF  00F2               	movwf	___wmul@multiplicand
  7798  08F0  3000               	movlw	0
  7799  08F1  00F3               	movwf	___wmul@multiplicand+1
  7800  08F2  3196  263E  3188   	fcall	___wmul
  7801  08F5  0020               	movlb	0	; select bank0
  7802  08F6  0850               	movf	eval_poly@d,w
  7803  08F7  0770               	addwf	?___wmul,w
  7804  08F8  0084               	movwf	4
  7805  08F9  0851               	movf	eval_poly@d+1,w
  7806  08FA  3D71               	addwfc	?___wmul+1,w
  7807  08FB  0085               	movwf	5
  7808  08FC  3F00               	moviw [0]fsr0
  7809  08FD  00C0               	movwf	___ftadd@f1
  7810  08FE  3F01               	moviw [1]fsr0
  7811  08FF  00C1               	movwf	___ftadd@f1+1
  7812  0900  3F02               	moviw [2]fsr0
  7813  0901  00C2               	movwf	___ftadd@f1+2
  7814  0902  0854               	movf	eval_poly@res,w
  7815  0903  00A0               	movwf	___ftmul@f1
  7816  0904  0855               	movf	eval_poly@res+1,w
  7817  0905  00A1               	movwf	___ftmul@f1+1
  7818  0906  0856               	movf	eval_poly@res+2,w
  7819  0907  00A2               	movwf	___ftmul@f1+2
  7820  0908  084D               	movf	eval_poly@x,w
  7821  0909  00A3               	movwf	___ftmul@f2
  7822  090A  084E               	movf	eval_poly@x+1,w
  7823  090B  00A4               	movwf	___ftmul@f2+1
  7824  090C  084F               	movf	eval_poly@x+2,w
  7825  090D  00A5               	movwf	___ftmul@f2+2
  7826  090E  318C  2472  3188   	fcall	___ftmul
  7827  0911  0020               	movlb	0	; select bank0
  7828  0912  0820               	movf	?___ftmul,w
  7829  0913  00C3               	movwf	___ftadd@f2
  7830  0914  0821               	movf	?___ftmul+1,w
  7831  0915  00C4               	movwf	___ftadd@f2+1
  7832  0916  0822               	movf	?___ftmul+2,w
  7833  0917  00C5               	movwf	___ftadd@f2+2
  7834  0918  3180  2023  3188   	fcall	___ftadd
  7835  091B  0020               	movlb	0	; select bank0
  7836  091C  0840               	movf	?___ftadd,w
  7837  091D  00D4               	movwf	eval_poly@res
  7838  091E  0841               	movf	?___ftadd+1,w
  7839  091F  00D5               	movwf	eval_poly@res+1
  7840  0920  0842               	movf	?___ftadd+2,w
  7841  0921  28E1               	goto	L1
  7842  0922                     l2333:	
  7843  0922  0854               	movf	eval_poly@res,w
  7844  0923  00CD               	movwf	?_eval_poly
  7845  0924  0855               	movf	eval_poly@res+1,w
  7846  0925  00CE               	movwf	?_eval_poly+1
  7847  0926  0856               	movf	eval_poly@res+2,w
  7848  0927  00CF               	movwf	?_eval_poly+2
  7849  0928  0008               	return
  7850  0929                     __end_of_eval_poly:	
  7851                           
  7852                           	psect	text5
  7853  0C72                     __ptext5:	
  7854 ;; *************** function ___ftmul *****************
  7855 ;; Defined at:
  7856 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftmul.c"
  7857 ;; Parameters:    Size  Location     Type
  7858 ;;  f1              3    0[BANK0 ] float 
  7859 ;;  f2              3    3[BANK0 ] float 
  7860 ;; Auto vars:     Size  Location     Type
  7861 ;;  f3_as_produc    3   11[BANK0 ] unsigned um
  7862 ;;  sign            1   15[BANK0 ] unsigned char 
  7863 ;;  cntr            1   14[BANK0 ] unsigned char 
  7864 ;;  exp             1   10[BANK0 ] unsigned char 
  7865 ;; Return value:  Size  Location     Type
  7866 ;;                  3    0[BANK0 ] float 
  7867 ;; Registers used:
  7868 ;;		wreg, status,2, status,0, pclath, cstack
  7869 ;; Tracked objects:
  7870 ;;		On entry : 0/0
  7871 ;;		On exit  : 0/0
  7872 ;;		Unchanged: 0/0
  7873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7874 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7875 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7876 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7877 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7878 ;;Total ram usage:       16 bytes
  7879 ;; Hardware stack levels used:    1
  7880 ;; Hardware stack levels required when called:    1
  7881 ;; This function calls:
  7882 ;;		___ftpack
  7883 ;; This function is called by:
  7884 ;;		_tempCalc
  7885 ;;		_main
  7886 ;;		_log
  7887 ;;		_eval_poly
  7888 ;; This function uses a non-reentrant model
  7889 ;;
  7890                           
  7891                           
  7892                           ;psect for function ___ftmul
  7893  0C72                     ___ftmul:	
  7894                           
  7895                           ;incstack = 0
  7896                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  7897  0C72  0020               	movlb	0	; select bank0
  7898  0C73  0820               	movf	___ftmul@f1,w
  7899  0C74  00A6               	movwf	??___ftmul
  7900  0C75  0821               	movf	___ftmul@f1+1,w
  7901  0C76  00A7               	movwf	??___ftmul+1
  7902  0C77  0822               	movf	___ftmul@f1+2,w
  7903  0C78  00A8               	movwf	??___ftmul+2
  7904  0C79  1003               	clrc
  7905  0C7A  0D27               	rlf	??___ftmul+1,w
  7906  0C7B  0D28               	rlf	??___ftmul+2,w
  7907  0C7C  00A9               	movwf	??___ftmul+3
  7908  0C7D  0829               	movf	??___ftmul+3,w
  7909  0C7E  00AA               	movwf	___ftmul@exp
  7910  0C7F  082A               	movf	___ftmul@exp,w
  7911  0C80  1D03               	btfss	3,2
  7912  0C81  2C89               	goto	l2201
  7913  0C82  3000               	movlw	0
  7914  0C83  00A0               	movwf	?___ftmul
  7915  0C84  3000               	movlw	0
  7916  0C85  00A1               	movwf	?___ftmul+1
  7917  0C86  3000               	movlw	0
  7918  0C87  00A2               	movwf	?___ftmul+2
  7919  0C88  0008               	return
  7920  0C89                     l2201:	
  7921  0C89  0823               	movf	___ftmul@f2,w
  7922  0C8A  00A6               	movwf	??___ftmul
  7923  0C8B  0824               	movf	___ftmul@f2+1,w
  7924  0C8C  00A7               	movwf	??___ftmul+1
  7925  0C8D  0825               	movf	___ftmul@f2+2,w
  7926  0C8E  00A8               	movwf	??___ftmul+2
  7927  0C8F  1003               	clrc
  7928  0C90  0D27               	rlf	??___ftmul+1,w
  7929  0C91  0D28               	rlf	??___ftmul+2,w
  7930  0C92  00A9               	movwf	??___ftmul+3
  7931  0C93  0829               	movf	??___ftmul+3,w
  7932  0C94  00AF               	movwf	___ftmul@sign
  7933  0C95  082F               	movf	___ftmul@sign,w
  7934  0C96  1D03               	btfss	3,2
  7935  0C97  2C9F               	goto	l2207
  7936  0C98  3000               	movlw	0
  7937  0C99  00A0               	movwf	?___ftmul
  7938  0C9A  3000               	movlw	0
  7939  0C9B  00A1               	movwf	?___ftmul+1
  7940  0C9C  3000               	movlw	0
  7941  0C9D  00A2               	movwf	?___ftmul+2
  7942  0C9E  0008               	return
  7943  0C9F                     l2207:	
  7944  0C9F  082F               	movf	___ftmul@sign,w
  7945  0CA0  3E7B               	addlw	123
  7946  0CA1  00A6               	movwf	??___ftmul
  7947  0CA2  0826               	movf	??___ftmul,w
  7948  0CA3  07AA               	addwf	___ftmul@exp,f
  7949  0CA4  0820               	movf	___ftmul@f1,w
  7950  0CA5  00A6               	movwf	??___ftmul
  7951  0CA6  0821               	movf	___ftmul@f1+1,w
  7952  0CA7  00A7               	movwf	??___ftmul+1
  7953  0CA8  0822               	movf	___ftmul@f1+2,w
  7954  0CA9  00A8               	movwf	??___ftmul+2
  7955  0CAA  3010               	movlw	16
  7956  0CAB                     u2205:	
  7957  0CAB  36A8               	lsrf	??___ftmul+2,f
  7958  0CAC  0CA7               	rrf	??___ftmul+1,f
  7959  0CAD  0CA6               	rrf	??___ftmul,f
  7960  0CAE  0B89               	decfsz	9,f
  7961  0CAF  2CAB               	goto	u2205
  7962  0CB0  0826               	movf	??___ftmul,w
  7963  0CB1  00A9               	movwf	??___ftmul+3
  7964  0CB2  0829               	movf	??___ftmul+3,w
  7965  0CB3  00AF               	movwf	___ftmul@sign
  7966  0CB4  0823               	movf	___ftmul@f2,w
  7967  0CB5  00A6               	movwf	??___ftmul
  7968  0CB6  0824               	movf	___ftmul@f2+1,w
  7969  0CB7  00A7               	movwf	??___ftmul+1
  7970  0CB8  0825               	movf	___ftmul@f2+2,w
  7971  0CB9  00A8               	movwf	??___ftmul+2
  7972  0CBA  3010               	movlw	16
  7973  0CBB                     u2215:	
  7974  0CBB  36A8               	lsrf	??___ftmul+2,f
  7975  0CBC  0CA7               	rrf	??___ftmul+1,f
  7976  0CBD  0CA6               	rrf	??___ftmul,f
  7977  0CBE  0B89               	decfsz	9,f
  7978  0CBF  2CBB               	goto	u2215
  7979  0CC0  0826               	movf	??___ftmul,w
  7980  0CC1  00A9               	movwf	??___ftmul+3
  7981  0CC2  0829               	movf	??___ftmul+3,w
  7982  0CC3  06AF               	xorwf	___ftmul@sign,f
  7983  0CC4  3080               	movlw	128
  7984  0CC5  00A6               	movwf	??___ftmul
  7985  0CC6  0826               	movf	??___ftmul,w
  7986  0CC7  05AF               	andwf	___ftmul@sign,f
  7987  0CC8  17A1               	bsf	___ftmul@f1+1,7
  7988  0CC9  17A4               	bsf	___ftmul@f2+1,7
  7989  0CCA  30FF               	movlw	255
  7990  0CCB  05A3               	andwf	___ftmul@f2,f
  7991  0CCC  30FF               	movlw	255
  7992  0CCD  05A4               	andwf	___ftmul@f2+1,f
  7993  0CCE  3000               	movlw	0
  7994  0CCF  05A5               	andwf	___ftmul@f2+2,f
  7995  0CD0  3000               	movlw	0
  7996  0CD1  00AB               	movwf	___ftmul@f3_as_product
  7997  0CD2  3000               	movlw	0
  7998  0CD3  00AC               	movwf	___ftmul@f3_as_product+1
  7999  0CD4  3000               	movlw	0
  8000  0CD5  00AD               	movwf	___ftmul@f3_as_product+2
  8001  0CD6  3007               	movlw	7
  8002  0CD7  00A6               	movwf	??___ftmul
  8003  0CD8  0826               	movf	??___ftmul,w
  8004  0CD9  00AE               	movwf	___ftmul@cntr
  8005  0CDA                     l2219:	
  8006  0CDA  1C20               	btfss	___ftmul@f1,0
  8007  0CDB  2CE2               	goto	l2223
  8008  0CDC  0823               	movf	___ftmul@f2,w
  8009  0CDD  07AB               	addwf	___ftmul@f3_as_product,f
  8010  0CDE  0824               	movf	___ftmul@f2+1,w
  8011  0CDF  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  8012  0CE0  0825               	movf	___ftmul@f2+2,w
  8013  0CE1  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  8014  0CE2                     l2223:	
  8015  0CE2  3001               	movlw	1
  8016  0CE3                     u2235:	
  8017  0CE3  36A2               	lsrf	___ftmul@f1+2,f
  8018  0CE4  0CA1               	rrf	___ftmul@f1+1,f
  8019  0CE5  0CA0               	rrf	___ftmul@f1,f
  8020  0CE6  0B89               	decfsz	9,f
  8021  0CE7  2CE3               	goto	u2235
  8022  0CE8  3001               	movlw	1
  8023  0CE9                     u2245:	
  8024  0CE9  35A3               	lslf	___ftmul@f2,f
  8025  0CEA  0DA4               	rlf	___ftmul@f2+1,f
  8026  0CEB  0DA5               	rlf	___ftmul@f2+2,f
  8027  0CEC  0B89               	decfsz	9,f
  8028  0CED  2CE9               	goto	u2245
  8029  0CEE  3001               	movlw	1
  8030  0CEF  02AE               	subwf	___ftmul@cntr,f
  8031  0CF0  1D03               	btfss	3,2
  8032  0CF1  2CDA               	goto	l2219
  8033  0CF2  3009               	movlw	9
  8034  0CF3  00A6               	movwf	??___ftmul
  8035  0CF4  0826               	movf	??___ftmul,w
  8036  0CF5  00AE               	movwf	___ftmul@cntr
  8037  0CF6                     l2231:	
  8038  0CF6  1C20               	btfss	___ftmul@f1,0
  8039  0CF7  2CFE               	goto	l2235
  8040  0CF8  0823               	movf	___ftmul@f2,w
  8041  0CF9  07AB               	addwf	___ftmul@f3_as_product,f
  8042  0CFA  0824               	movf	___ftmul@f2+1,w
  8043  0CFB  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  8044  0CFC  0825               	movf	___ftmul@f2+2,w
  8045  0CFD  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  8046  0CFE                     l2235:	
  8047  0CFE  3001               	movlw	1
  8048  0CFF                     u2275:	
  8049  0CFF  36A2               	lsrf	___ftmul@f1+2,f
  8050  0D00  0CA1               	rrf	___ftmul@f1+1,f
  8051  0D01  0CA0               	rrf	___ftmul@f1,f
  8052  0D02  0B89               	decfsz	9,f
  8053  0D03  2CFF               	goto	u2275
  8054  0D04  3001               	movlw	1
  8055  0D05                     u2285:	
  8056  0D05  36AD               	lsrf	___ftmul@f3_as_product+2,f
  8057  0D06  0CAC               	rrf	___ftmul@f3_as_product+1,f
  8058  0D07  0CAB               	rrf	___ftmul@f3_as_product,f
  8059  0D08  0B89               	decfsz	9,f
  8060  0D09  2D05               	goto	u2285
  8061  0D0A  3001               	movlw	1
  8062  0D0B  02AE               	subwf	___ftmul@cntr,f
  8063  0D0C  1D03               	btfss	3,2
  8064  0D0D  2CF6               	goto	l2231
  8065  0D0E  082B               	movf	___ftmul@f3_as_product,w
  8066  0D0F  00F0               	movwf	___ftpack@arg
  8067  0D10  082C               	movf	___ftmul@f3_as_product+1,w
  8068  0D11  00F1               	movwf	___ftpack@arg+1
  8069  0D12  082D               	movf	___ftmul@f3_as_product+2,w
  8070  0D13  00F2               	movwf	___ftpack@arg+2
  8071  0D14  082A               	movf	___ftmul@exp,w
  8072  0D15  00A6               	movwf	??___ftmul
  8073  0D16  0826               	movf	??___ftmul,w
  8074  0D17  00F3               	movwf	___ftpack@exp
  8075  0D18  082F               	movf	___ftmul@sign,w
  8076  0D19  00A7               	movwf	??___ftmul+1
  8077  0D1A  0827               	movf	??___ftmul+1,w
  8078  0D1B  00F4               	movwf	___ftpack@sign
  8079  0D1C  3189  2129         	fcall	___ftpack
  8080  0D1E  0870               	movf	?___ftpack,w
  8081  0D1F  0020               	movlb	0	; select bank0
  8082  0D20  00A0               	movwf	?___ftmul
  8083  0D21  0871               	movf	?___ftpack+1,w
  8084  0D22  00A1               	movwf	?___ftmul+1
  8085  0D23  0872               	movf	?___ftpack+2,w
  8086  0D24  00A2               	movwf	?___ftmul+2
  8087  0D25  0008               	return
  8088  0D26                     __end_of___ftmul:	
  8089                           
  8090                           	psect	text6
  8091  1709                     __ptext6:	
  8092 ;; *************** function ___ftge *****************
  8093 ;; Defined at:
  8094 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftge.c"
  8095 ;; Parameters:    Size  Location     Type
  8096 ;;  ff1             3    0[COMMON] float 
  8097 ;;  ff2             3    3[COMMON] float 
  8098 ;; Auto vars:     Size  Location     Type
  8099 ;;		None
  8100 ;; Return value:  Size  Location     Type
  8101 ;;		None               void
  8102 ;; Registers used:
  8103 ;;		wreg, status,2, status,0
  8104 ;; Tracked objects:
  8105 ;;		On entry : 0/0
  8106 ;;		On exit  : 0/0
  8107 ;;		Unchanged: 0/0
  8108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8109 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8111 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8112 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8113 ;;Total ram usage:        9 bytes
  8114 ;; Hardware stack levels used:    1
  8115 ;; This function calls:
  8116 ;;		Nothing
  8117 ;; This function is called by:
  8118 ;;		_log
  8119 ;; This function uses a non-reentrant model
  8120 ;;
  8121                           
  8122                           
  8123                           ;psect for function ___ftge
  8124  1709                     ___ftge:	
  8125                           
  8126                           ;incstack = 0
  8127                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  8128  1709  1FF2               	btfss	___ftge@ff1+2,7
  8129  170A  2F1F               	goto	l2291
  8130  170B  0970               	comf	___ftge@ff1,w
  8131  170C  00F6               	movwf	??___ftge
  8132  170D  0971               	comf	___ftge@ff1+1,w
  8133  170E  00F7               	movwf	??___ftge+1
  8134  170F  0972               	comf	___ftge@ff1+2,w
  8135  1710  00F8               	movwf	??___ftge+2
  8136  1711  0AF6               	incf	??___ftge,f
  8137  1712  1903               	skipnz
  8138  1713  0AF7               	incf	??___ftge+1,f
  8139  1714  1903               	skipnz
  8140  1715  0AF8               	incf	??___ftge+2,f
  8141  1716  3000               	movlw	0
  8142  1717  0776               	addwf	??___ftge,w
  8143  1718  00F0               	movwf	___ftge@ff1
  8144  1719  3000               	movlw	0
  8145  171A  3D77               	addwfc	??___ftge+1,w
  8146  171B  00F1               	movwf	___ftge@ff1+1
  8147  171C  3080               	movlw	128
  8148  171D  3D78               	addwfc	??___ftge+2,w
  8149  171E  00F2               	movwf	___ftge@ff1+2
  8150  171F                     l2291:	
  8151  171F  1FF5               	btfss	___ftge@ff2+2,7
  8152  1720  2F35               	goto	l2295
  8153  1721  0973               	comf	___ftge@ff2,w
  8154  1722  00F6               	movwf	??___ftge
  8155  1723  0974               	comf	___ftge@ff2+1,w
  8156  1724  00F7               	movwf	??___ftge+1
  8157  1725  0975               	comf	___ftge@ff2+2,w
  8158  1726  00F8               	movwf	??___ftge+2
  8159  1727  0AF6               	incf	??___ftge,f
  8160  1728  1903               	skipnz
  8161  1729  0AF7               	incf	??___ftge+1,f
  8162  172A  1903               	skipnz
  8163  172B  0AF8               	incf	??___ftge+2,f
  8164  172C  3000               	movlw	0
  8165  172D  0776               	addwf	??___ftge,w
  8166  172E  00F3               	movwf	___ftge@ff2
  8167  172F  3000               	movlw	0
  8168  1730  3D77               	addwfc	??___ftge+1,w
  8169  1731  00F4               	movwf	___ftge@ff2+1
  8170  1732  3080               	movlw	128
  8171  1733  3D78               	addwfc	??___ftge+2,w
  8172  1734  00F5               	movwf	___ftge@ff2+2
  8173  1735                     l2295:	
  8174  1735  3080               	movlw	128
  8175  1736  06F2               	xorwf	___ftge@ff1+2,f
  8176  1737  3080               	movlw	128
  8177  1738  06F5               	xorwf	___ftge@ff2+2,f
  8178  1739  0875               	movf	___ftge@ff2+2,w
  8179  173A  0272               	subwf	___ftge@ff1+2,w
  8180  173B  1D03               	skipz
  8181  173C  0008               	return
  8182  173D  0874               	movf	___ftge@ff2+1,w
  8183  173E  0271               	subwf	___ftge@ff1+1,w
  8184  173F  1D03               	skipz
  8185  1740  0008               	return
  8186  1741  0873               	movf	___ftge@ff2,w
  8187  1742  0270               	subwf	___ftge@ff1,w
  8188  1743  0008               	return
  8189  1744                     __end_of___ftge:	
  8190                           
  8191                           	psect	text7
  8192  1659                     __ptext7:	
  8193 ;; *************** function ___awtoft *****************
  8194 ;; Defined at:
  8195 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awtoft.c"
  8196 ;; Parameters:    Size  Location     Type
  8197 ;;  c               2    8[COMMON] int 
  8198 ;; Auto vars:     Size  Location     Type
  8199 ;;  sign            1   13[COMMON] unsigned char 
  8200 ;; Return value:  Size  Location     Type
  8201 ;;                  3    8[COMMON] float 
  8202 ;; Registers used:
  8203 ;;		wreg, status,2, status,0, pclath, cstack
  8204 ;; Tracked objects:
  8205 ;;		On entry : 0/0
  8206 ;;		On exit  : 0/0
  8207 ;;		Unchanged: 0/0
  8208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8209 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8210 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8211 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8212 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8213 ;;Total ram usage:        6 bytes
  8214 ;; Hardware stack levels used:    1
  8215 ;; Hardware stack levels required when called:    1
  8216 ;; This function calls:
  8217 ;;		___ftpack
  8218 ;; This function is called by:
  8219 ;;		_tempCalc
  8220 ;;		_log
  8221 ;; This function uses a non-reentrant model
  8222 ;;
  8223                           
  8224                           
  8225                           ;psect for function ___awtoft
  8226  1659                     ___awtoft:	
  8227                           
  8228                           ;incstack = 0
  8229                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  8230  1659  01FD               	clrf	___awtoft@sign
  8231  165A  1FF9               	btfss	___awtoft@c+1,7
  8232  165B  2E63               	goto	l2283
  8233  165C  09F8               	comf	___awtoft@c,f
  8234  165D  09F9               	comf	___awtoft@c+1,f
  8235  165E  0AF8               	incf	___awtoft@c,f
  8236  165F  1903               	skipnz
  8237  1660  0AF9               	incf	___awtoft@c+1,f
  8238  1661  01FD               	clrf	___awtoft@sign
  8239  1662  0AFD               	incf	___awtoft@sign,f
  8240  1663                     l2283:	
  8241  1663  0878               	movf	___awtoft@c,w
  8242  1664  00F0               	movwf	___ftpack@arg
  8243  1665  0879               	movf	___awtoft@c+1,w
  8244  1666  00F1               	movwf	___ftpack@arg+1
  8245  1667  01F2               	clrf	___ftpack@arg+2
  8246  1668  308E               	movlw	142
  8247  1669  00FB               	movwf	??___awtoft
  8248  166A  087B               	movf	??___awtoft,w
  8249  166B  00F3               	movwf	___ftpack@exp
  8250  166C  087D               	movf	___awtoft@sign,w
  8251  166D  00FC               	movwf	??___awtoft+1
  8252  166E  087C               	movf	??___awtoft+1,w
  8253  166F  00F4               	movwf	___ftpack@sign
  8254  1670  3189  2129         	fcall	___ftpack
  8255  1672  0870               	movf	?___ftpack,w
  8256  1673  00F8               	movwf	?___awtoft
  8257  1674  0871               	movf	?___ftpack+1,w
  8258  1675  00F9               	movwf	?___awtoft+1
  8259  1676  0872               	movf	?___ftpack+2,w
  8260  1677  00FA               	movwf	?___awtoft+2
  8261  1678  0008               	return
  8262  1679                     __end_of___awtoft:	
  8263                           
  8264                           	psect	text8
  8265  0005                     __ptext8:	
  8266 ;; *************** function ___ftsub *****************
  8267 ;; Defined at:
  8268 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftsub.c"
  8269 ;; Parameters:    Size  Location     Type
  8270 ;;  f2              3   45[BANK0 ] float 
  8271 ;;  f1              3   48[BANK0 ] float 
  8272 ;; Auto vars:     Size  Location     Type
  8273 ;;		None
  8274 ;; Return value:  Size  Location     Type
  8275 ;;                  3   45[BANK0 ] float 
  8276 ;; Registers used:
  8277 ;;		wreg, status,2, status,0, pclath, cstack
  8278 ;; Tracked objects:
  8279 ;;		On entry : 0/0
  8280 ;;		On exit  : 0/0
  8281 ;;		Unchanged: 0/0
  8282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8283 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8286 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8287 ;;Total ram usage:        6 bytes
  8288 ;; Hardware stack levels used:    1
  8289 ;; Hardware stack levels required when called:    2
  8290 ;; This function calls:
  8291 ;;		___ftadd
  8292 ;; This function is called by:
  8293 ;;		_tempCalc
  8294 ;; This function uses a non-reentrant model
  8295 ;;
  8296                           
  8297                           
  8298                           ;psect for function ___ftsub
  8299  0005                     ___ftsub:	
  8300                           
  8301                           ;incstack = 0
  8302                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  8303  0005  0020               	movlb	0	; select bank0
  8304  0006  084F               	movf	___ftsub@f2+2,w
  8305  0007  044E               	iorwf	___ftsub@f2+1,w
  8306  0008  044D               	iorwf	___ftsub@f2,w
  8307  0009  1903               	skipnz
  8308  000A  280D               	goto	l2667
  8309  000B  3080               	movlw	128
  8310  000C  06CF               	xorwf	___ftsub@f2+2,f
  8311  000D                     l2667:	
  8312  000D  0850               	movf	___ftsub@f1,w
  8313  000E  00C0               	movwf	___ftadd@f1
  8314  000F  0851               	movf	___ftsub@f1+1,w
  8315  0010  00C1               	movwf	___ftadd@f1+1
  8316  0011  0852               	movf	___ftsub@f1+2,w
  8317  0012  00C2               	movwf	___ftadd@f1+2
  8318  0013  084D               	movf	___ftsub@f2,w
  8319  0014  00C3               	movwf	___ftadd@f2
  8320  0015  084E               	movf	___ftsub@f2+1,w
  8321  0016  00C4               	movwf	___ftadd@f2+1
  8322  0017  084F               	movf	___ftsub@f2+2,w
  8323  0018  00C5               	movwf	___ftadd@f2+2
  8324  0019  3180  2023         	fcall	___ftadd
  8325  001B  0020               	movlb	0	; select bank0
  8326  001C  0840               	movf	?___ftadd,w
  8327  001D  00CD               	movwf	?___ftsub
  8328  001E  0841               	movf	?___ftadd+1,w
  8329  001F  00CE               	movwf	?___ftsub+1
  8330  0020  0842               	movf	?___ftadd+2,w
  8331  0021  00CF               	movwf	?___ftsub+2
  8332  0022  0008               	return
  8333  0023                     __end_of___ftsub:	
  8334                           
  8335                           	psect	text9
  8336  0023                     __ptext9:	
  8337 ;; *************** function ___ftadd *****************
  8338 ;; Defined at:
  8339 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftadd.c"
  8340 ;; Parameters:    Size  Location     Type
  8341 ;;  f1              3   32[BANK0 ] float 
  8342 ;;  f2              3   35[BANK0 ] float 
  8343 ;; Auto vars:     Size  Location     Type
  8344 ;;  exp1            1   44[BANK0 ] unsigned char 
  8345 ;;  exp2            1   43[BANK0 ] unsigned char 
  8346 ;;  sign            1   42[BANK0 ] unsigned char 
  8347 ;; Return value:  Size  Location     Type
  8348 ;;                  3   32[BANK0 ] float 
  8349 ;; Registers used:
  8350 ;;		wreg, status,2, status,0, pclath, cstack
  8351 ;; Tracked objects:
  8352 ;;		On entry : 0/0
  8353 ;;		On exit  : 0/0
  8354 ;;		Unchanged: 0/0
  8355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8356 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8357 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8358 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8359 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8360 ;;Total ram usage:       13 bytes
  8361 ;; Hardware stack levels used:    1
  8362 ;; Hardware stack levels required when called:    1
  8363 ;; This function calls:
  8364 ;;		___ftpack
  8365 ;; This function is called by:
  8366 ;;		_tempCalc
  8367 ;;		_main
  8368 ;;		___ftsub
  8369 ;;		_log
  8370 ;;		_eval_poly
  8371 ;; This function uses a non-reentrant model
  8372 ;;
  8373                           
  8374                           
  8375                           ;psect for function ___ftadd
  8376  0023                     ___ftadd:	
  8377                           
  8378                           ;incstack = 0
  8379                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  8380  0023  0020               	movlb	0	; select bank0
  8381  0024  0840               	movf	___ftadd@f1,w
  8382  0025  00C6               	movwf	??___ftadd
  8383  0026  0841               	movf	___ftadd@f1+1,w
  8384  0027  00C7               	movwf	??___ftadd+1
  8385  0028  0842               	movf	___ftadd@f1+2,w
  8386  0029  00C8               	movwf	??___ftadd+2
  8387  002A  1003               	clrc
  8388  002B  0D47               	rlf	??___ftadd+1,w
  8389  002C  0D48               	rlf	??___ftadd+2,w
  8390  002D  00C9               	movwf	??___ftadd+3
  8391  002E  0849               	movf	??___ftadd+3,w
  8392  002F  00CC               	movwf	___ftadd@exp1
  8393  0030  0843               	movf	___ftadd@f2,w
  8394  0031  00C6               	movwf	??___ftadd
  8395  0032  0844               	movf	___ftadd@f2+1,w
  8396  0033  00C7               	movwf	??___ftadd+1
  8397  0034  0845               	movf	___ftadd@f2+2,w
  8398  0035  00C8               	movwf	??___ftadd+2
  8399  0036  1003               	clrc
  8400  0037  0D47               	rlf	??___ftadd+1,w
  8401  0038  0D48               	rlf	??___ftadd+2,w
  8402  0039  00C9               	movwf	??___ftadd+3
  8403  003A  0849               	movf	??___ftadd+3,w
  8404  003B  00CB               	movwf	___ftadd@exp2
  8405  003C  084C               	movf	___ftadd@exp1,w
  8406  003D  1903               	btfsc	3,2
  8407  003E  284B               	goto	l2131
  8408  003F  084B               	movf	___ftadd@exp2,w
  8409  0040  024C               	subwf	___ftadd@exp1,w
  8410  0041  1803               	skipnc
  8411  0042  2852               	goto	l2135
  8412  0043  034C               	decf	___ftadd@exp1,w
  8413  0044  3AFF               	xorlw	255
  8414  0045  074B               	addwf	___ftadd@exp2,w
  8415  0046  00C6               	movwf	??___ftadd
  8416  0047  3019               	movlw	25
  8417  0048  0246               	subwf	??___ftadd,w
  8418  0049  1C03               	skipc
  8419  004A  2852               	goto	l2135
  8420  004B                     l2131:	
  8421  004B  0843               	movf	___ftadd@f2,w
  8422  004C  00C0               	movwf	?___ftadd
  8423  004D  0844               	movf	___ftadd@f2+1,w
  8424  004E  00C1               	movwf	?___ftadd+1
  8425  004F  0845               	movf	___ftadd@f2+2,w
  8426  0050  00C2               	movwf	?___ftadd+2
  8427  0051  0008               	return
  8428  0052                     l2135:	
  8429  0052  084B               	movf	___ftadd@exp2,w
  8430  0053  1903               	btfsc	3,2
  8431  0054  0008               	return
  8432  0055  084C               	movf	___ftadd@exp1,w
  8433  0056  024B               	subwf	___ftadd@exp2,w
  8434  0057  1803               	skipnc
  8435  0058  2861               	goto	l2141
  8436  0059  034B               	decf	___ftadd@exp2,w
  8437  005A  3AFF               	xorlw	255
  8438  005B  074C               	addwf	___ftadd@exp1,w
  8439  005C  00C6               	movwf	??___ftadd
  8440  005D  3019               	movlw	25
  8441  005E  0246               	subwf	??___ftadd,w
  8442  005F  1803               	btfsc	3,0
  8443  0060  0008               	return
  8444  0061                     l2141:	
  8445  0061  3006               	movlw	6
  8446  0062  00C6               	movwf	??___ftadd
  8447  0063  0846               	movf	??___ftadd,w
  8448  0064  00CA               	movwf	___ftadd@sign
  8449  0065  1BC2               	btfsc	___ftadd@f1+2,7
  8450  0066  17CA               	bsf	___ftadd@sign,7
  8451  0067  1BC5               	btfsc	___ftadd@f2+2,7
  8452  0068  174A               	bsf	___ftadd@sign,6
  8453  0069  17C1               	bsf	___ftadd@f1+1,7
  8454  006A  30FF               	movlw	255
  8455  006B  05C0               	andwf	___ftadd@f1,f
  8456  006C  30FF               	movlw	255
  8457  006D  05C1               	andwf	___ftadd@f1+1,f
  8458  006E  3000               	movlw	0
  8459  006F  05C2               	andwf	___ftadd@f1+2,f
  8460  0070  17C4               	bsf	___ftadd@f2+1,7
  8461  0071  30FF               	movlw	255
  8462  0072  05C3               	andwf	___ftadd@f2,f
  8463  0073  30FF               	movlw	255
  8464  0074  05C4               	andwf	___ftadd@f2+1,f
  8465  0075  3000               	movlw	0
  8466  0076  05C5               	andwf	___ftadd@f2+2,f
  8467  0077  084B               	movf	___ftadd@exp2,w
  8468  0078  024C               	subwf	___ftadd@exp1,w
  8469  0079  1803               	skipnc
  8470  007A  289D               	goto	l2163
  8471  007B                     l2153:	
  8472  007B  3001               	movlw	1
  8473  007C                     u2045:	
  8474  007C  35C3               	lslf	___ftadd@f2,f
  8475  007D  0DC4               	rlf	___ftadd@f2+1,f
  8476  007E  0DC5               	rlf	___ftadd@f2+2,f
  8477  007F  0B89               	decfsz	9,f
  8478  0080  287C               	goto	u2045
  8479  0081  3001               	movlw	1
  8480  0082  02CB               	subwf	___ftadd@exp2,f
  8481  0083  084B               	movf	___ftadd@exp2,w
  8482  0084  064C               	xorwf	___ftadd@exp1,w
  8483  0085  1903               	skipnz
  8484  0086  2898               	goto	l2161
  8485  0087  3001               	movlw	1
  8486  0088  02CA               	subwf	___ftadd@sign,f
  8487  0089  084A               	movf	___ftadd@sign,w
  8488  008A  3907               	andlw	7
  8489  008B  1903               	btfsc	3,2
  8490  008C  2898               	goto	l2161
  8491  008D  287B               	goto	l2153
  8492  008E                     l2159:	
  8493  008E  3001               	movlw	1
  8494  008F                     u2075:	
  8495  008F  36C2               	lsrf	___ftadd@f1+2,f
  8496  0090  0CC1               	rrf	___ftadd@f1+1,f
  8497  0091  0CC0               	rrf	___ftadd@f1,f
  8498  0092  0B89               	decfsz	9,f
  8499  0093  288F               	goto	u2075
  8500  0094  3001               	movlw	1
  8501  0095  00C6               	movwf	??___ftadd
  8502  0096  0846               	movf	??___ftadd,w
  8503  0097  07CC               	addwf	___ftadd@exp1,f
  8504  0098                     l2161:	
  8505  0098  084C               	movf	___ftadd@exp1,w
  8506  0099  064B               	xorwf	___ftadd@exp2,w
  8507  009A  1903               	btfsc	3,2
  8508  009B  28C2               	goto	l593
  8509  009C  288E               	goto	l2159
  8510  009D                     l2163:	
  8511  009D  084C               	movf	___ftadd@exp1,w
  8512  009E  024B               	subwf	___ftadd@exp2,w
  8513  009F  1803               	skipnc
  8514  00A0  28C2               	goto	l593
  8515  00A1                     l2165:	
  8516  00A1  3001               	movlw	1
  8517  00A2                     u2105:	
  8518  00A2  35C0               	lslf	___ftadd@f1,f
  8519  00A3  0DC1               	rlf	___ftadd@f1+1,f
  8520  00A4  0DC2               	rlf	___ftadd@f1+2,f
  8521  00A5  0B89               	decfsz	9,f
  8522  00A6  28A2               	goto	u2105
  8523  00A7  3001               	movlw	1
  8524  00A8  02CC               	subwf	___ftadd@exp1,f
  8525  00A9  084B               	movf	___ftadd@exp2,w
  8526  00AA  064C               	xorwf	___ftadd@exp1,w
  8527  00AB  1903               	skipnz
  8528  00AC  28BE               	goto	l2173
  8529  00AD  3001               	movlw	1
  8530  00AE  02CA               	subwf	___ftadd@sign,f
  8531  00AF  084A               	movf	___ftadd@sign,w
  8532  00B0  3907               	andlw	7
  8533  00B1  1903               	btfsc	3,2
  8534  00B2  28BE               	goto	l2173
  8535  00B3  28A1               	goto	l2165
  8536  00B4                     l2171:	
  8537  00B4  3001               	movlw	1
  8538  00B5                     u2135:	
  8539  00B5  36C5               	lsrf	___ftadd@f2+2,f
  8540  00B6  0CC4               	rrf	___ftadd@f2+1,f
  8541  00B7  0CC3               	rrf	___ftadd@f2,f
  8542  00B8  0B89               	decfsz	9,f
  8543  00B9  28B5               	goto	u2135
  8544  00BA  3001               	movlw	1
  8545  00BB  00C6               	movwf	??___ftadd
  8546  00BC  0846               	movf	??___ftadd,w
  8547  00BD  07CB               	addwf	___ftadd@exp2,f
  8548  00BE                     l2173:	
  8549  00BE  084C               	movf	___ftadd@exp1,w
  8550  00BF  064B               	xorwf	___ftadd@exp2,w
  8551  00C0  1D03               	skipz
  8552  00C1  28B4               	goto	l2171
  8553  00C2                     l593:	
  8554  00C2  1FCA               	btfss	___ftadd@sign,7
  8555  00C3  28D4               	goto	l2177
  8556  00C4  30FF               	movlw	255
  8557  00C5  06C0               	xorwf	___ftadd@f1,f
  8558  00C6  30FF               	movlw	255
  8559  00C7  06C1               	xorwf	___ftadd@f1+1,f
  8560  00C8  30FF               	movlw	255
  8561  00C9  06C2               	xorwf	___ftadd@f1+2,f
  8562  00CA  3001               	movlw	1
  8563  00CB  07C0               	addwf	___ftadd@f1,f
  8564  00CC  3000               	movlw	0
  8565  00CD  1803               	skipnc
  8566  00CE  3001               	movlw	1
  8567  00CF  07C1               	addwf	___ftadd@f1+1,f
  8568  00D0  3000               	movlw	0
  8569  00D1  1803               	skipnc
  8570  00D2  3001               	movlw	1
  8571  00D3  07C2               	addwf	___ftadd@f1+2,f
  8572  00D4                     l2177:	
  8573  00D4  1F4A               	btfss	___ftadd@sign,6
  8574  00D5  28E6               	goto	l2181
  8575  00D6  30FF               	movlw	255
  8576  00D7  06C3               	xorwf	___ftadd@f2,f
  8577  00D8  30FF               	movlw	255
  8578  00D9  06C4               	xorwf	___ftadd@f2+1,f
  8579  00DA  30FF               	movlw	255
  8580  00DB  06C5               	xorwf	___ftadd@f2+2,f
  8581  00DC  3001               	movlw	1
  8582  00DD  07C3               	addwf	___ftadd@f2,f
  8583  00DE  3000               	movlw	0
  8584  00DF  1803               	skipnc
  8585  00E0  3001               	movlw	1
  8586  00E1  07C4               	addwf	___ftadd@f2+1,f
  8587  00E2  3000               	movlw	0
  8588  00E3  1803               	skipnc
  8589  00E4  3001               	movlw	1
  8590  00E5  07C5               	addwf	___ftadd@f2+2,f
  8591  00E6                     l2181:	
  8592  00E6  01CA               	clrf	___ftadd@sign
  8593  00E7  0840               	movf	___ftadd@f1,w
  8594  00E8  07C3               	addwf	___ftadd@f2,f
  8595  00E9  0841               	movf	___ftadd@f1+1,w
  8596  00EA  3DC4               	addwfc	___ftadd@f2+1,f
  8597  00EB  0842               	movf	___ftadd@f1+2,w
  8598  00EC  3DC5               	addwfc	___ftadd@f2+2,f
  8599  00ED  1FC5               	btfss	___ftadd@f2+2,7
  8600  00EE  2901               	goto	l2191
  8601  00EF  30FF               	movlw	255
  8602  00F0  06C3               	xorwf	___ftadd@f2,f
  8603  00F1  30FF               	movlw	255
  8604  00F2  06C4               	xorwf	___ftadd@f2+1,f
  8605  00F3  30FF               	movlw	255
  8606  00F4  06C5               	xorwf	___ftadd@f2+2,f
  8607  00F5  3001               	movlw	1
  8608  00F6  07C3               	addwf	___ftadd@f2,f
  8609  00F7  3000               	movlw	0
  8610  00F8  1803               	skipnc
  8611  00F9  3001               	movlw	1
  8612  00FA  07C4               	addwf	___ftadd@f2+1,f
  8613  00FB  3000               	movlw	0
  8614  00FC  1803               	skipnc
  8615  00FD  3001               	movlw	1
  8616  00FE  07C5               	addwf	___ftadd@f2+2,f
  8617  00FF  01CA               	clrf	___ftadd@sign
  8618  0100  0ACA               	incf	___ftadd@sign,f
  8619  0101                     l2191:	
  8620  0101  0843               	movf	___ftadd@f2,w
  8621  0102  00F0               	movwf	___ftpack@arg
  8622  0103  0844               	movf	___ftadd@f2+1,w
  8623  0104  00F1               	movwf	___ftpack@arg+1
  8624  0105  0845               	movf	___ftadd@f2+2,w
  8625  0106  00F2               	movwf	___ftpack@arg+2
  8626  0107  084C               	movf	___ftadd@exp1,w
  8627  0108  00C6               	movwf	??___ftadd
  8628  0109  0846               	movf	??___ftadd,w
  8629  010A  00F3               	movwf	___ftpack@exp
  8630  010B  084A               	movf	___ftadd@sign,w
  8631  010C  00C7               	movwf	??___ftadd+1
  8632  010D  0847               	movf	??___ftadd+1,w
  8633  010E  00F4               	movwf	___ftpack@sign
  8634  010F  3189  2129         	fcall	___ftpack
  8635  0111  0870               	movf	?___ftpack,w
  8636  0112  0020               	movlb	0	; select bank0
  8637  0113  00C0               	movwf	?___ftadd
  8638  0114  0871               	movf	?___ftpack+1,w
  8639  0115  00C1               	movwf	?___ftadd+1
  8640  0116  0872               	movf	?___ftpack+2,w
  8641  0117  00C2               	movwf	?___ftadd+2
  8642  0118  0008               	return
  8643  0119                     __end_of___ftadd:	
  8644                           
  8645                           	psect	text10
  8646  0B1C                     __ptext10:	
  8647 ;; *************** function ___ftdiv *****************
  8648 ;; Defined at:
  8649 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftdiv.c"
  8650 ;; Parameters:    Size  Location     Type
  8651 ;;  f2              3   16[BANK0 ] float 
  8652 ;;  f1              3   19[BANK0 ] float 
  8653 ;; Auto vars:     Size  Location     Type
  8654 ;;  f3              3   27[BANK0 ] float 
  8655 ;;  sign            1   31[BANK0 ] unsigned char 
  8656 ;;  exp             1   30[BANK0 ] unsigned char 
  8657 ;;  cntr            1   26[BANK0 ] unsigned char 
  8658 ;; Return value:  Size  Location     Type
  8659 ;;                  3   16[BANK0 ] float 
  8660 ;; Registers used:
  8661 ;;		wreg, status,2, status,0, pclath, cstack
  8662 ;; Tracked objects:
  8663 ;;		On entry : 0/0
  8664 ;;		On exit  : 0/0
  8665 ;;		Unchanged: 0/0
  8666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8667 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8668 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8669 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8670 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8671 ;;Total ram usage:       16 bytes
  8672 ;; Hardware stack levels used:    1
  8673 ;; Hardware stack levels required when called:    1
  8674 ;; This function calls:
  8675 ;;		___ftpack
  8676 ;; This function is called by:
  8677 ;;		_tempCalc
  8678 ;;		_main
  8679 ;; This function uses a non-reentrant model
  8680 ;;
  8681                           
  8682                           
  8683                           ;psect for function ___ftdiv
  8684  0B1C                     ___ftdiv:	
  8685                           
  8686                           ;incstack = 0
  8687                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  8688  0B1C  0020               	movlb	0	; select bank0
  8689  0B1D  0833               	movf	___ftdiv@f1,w
  8690  0B1E  00B6               	movwf	??___ftdiv
  8691  0B1F  0834               	movf	___ftdiv@f1+1,w
  8692  0B20  00B7               	movwf	??___ftdiv+1
  8693  0B21  0835               	movf	___ftdiv@f1+2,w
  8694  0B22  00B8               	movwf	??___ftdiv+2
  8695  0B23  1003               	clrc
  8696  0B24  0D37               	rlf	??___ftdiv+1,w
  8697  0B25  0D38               	rlf	??___ftdiv+2,w
  8698  0B26  00B9               	movwf	??___ftdiv+3
  8699  0B27  0839               	movf	??___ftdiv+3,w
  8700  0B28  00BE               	movwf	___ftdiv@exp
  8701  0B29  083E               	movf	___ftdiv@exp,w
  8702  0B2A  1D03               	btfss	3,2
  8703  0B2B  2B33               	goto	l2627
  8704  0B2C  3000               	movlw	0
  8705  0B2D  00B0               	movwf	?___ftdiv
  8706  0B2E  3000               	movlw	0
  8707  0B2F  00B1               	movwf	?___ftdiv+1
  8708  0B30  3000               	movlw	0
  8709  0B31  00B2               	movwf	?___ftdiv+2
  8710  0B32  0008               	return
  8711  0B33                     l2627:	
  8712  0B33  0830               	movf	___ftdiv@f2,w
  8713  0B34  00B6               	movwf	??___ftdiv
  8714  0B35  0831               	movf	___ftdiv@f2+1,w
  8715  0B36  00B7               	movwf	??___ftdiv+1
  8716  0B37  0832               	movf	___ftdiv@f2+2,w
  8717  0B38  00B8               	movwf	??___ftdiv+2
  8718  0B39  1003               	clrc
  8719  0B3A  0D37               	rlf	??___ftdiv+1,w
  8720  0B3B  0D38               	rlf	??___ftdiv+2,w
  8721  0B3C  00B9               	movwf	??___ftdiv+3
  8722  0B3D  0839               	movf	??___ftdiv+3,w
  8723  0B3E  00BF               	movwf	___ftdiv@sign
  8724  0B3F  083F               	movf	___ftdiv@sign,w
  8725  0B40  1D03               	btfss	3,2
  8726  0B41  2B49               	goto	l2633
  8727  0B42  3000               	movlw	0
  8728  0B43  00B0               	movwf	?___ftdiv
  8729  0B44  3000               	movlw	0
  8730  0B45  00B1               	movwf	?___ftdiv+1
  8731  0B46  3000               	movlw	0
  8732  0B47  00B2               	movwf	?___ftdiv+2
  8733  0B48  0008               	return
  8734  0B49                     l2633:	
  8735  0B49  3000               	movlw	0
  8736  0B4A  00BB               	movwf	___ftdiv@f3
  8737  0B4B  3000               	movlw	0
  8738  0B4C  00BC               	movwf	___ftdiv@f3+1
  8739  0B4D  3000               	movlw	0
  8740  0B4E  00BD               	movwf	___ftdiv@f3+2
  8741  0B4F  3089               	movlw	137
  8742  0B50  073F               	addwf	___ftdiv@sign,w
  8743  0B51  00B6               	movwf	??___ftdiv
  8744  0B52  0836               	movf	??___ftdiv,w
  8745  0B53  02BE               	subwf	___ftdiv@exp,f
  8746  0B54  0833               	movf	___ftdiv@f1,w
  8747  0B55  00B6               	movwf	??___ftdiv
  8748  0B56  0834               	movf	___ftdiv@f1+1,w
  8749  0B57  00B7               	movwf	??___ftdiv+1
  8750  0B58  0835               	movf	___ftdiv@f1+2,w
  8751  0B59  00B8               	movwf	??___ftdiv+2
  8752  0B5A  3010               	movlw	16
  8753  0B5B                     u2755:	
  8754  0B5B  36B8               	lsrf	??___ftdiv+2,f
  8755  0B5C  0CB7               	rrf	??___ftdiv+1,f
  8756  0B5D  0CB6               	rrf	??___ftdiv,f
  8757  0B5E  0B89               	decfsz	9,f
  8758  0B5F  2B5B               	goto	u2755
  8759  0B60  0836               	movf	??___ftdiv,w
  8760  0B61  00B9               	movwf	??___ftdiv+3
  8761  0B62  0839               	movf	??___ftdiv+3,w
  8762  0B63  00BF               	movwf	___ftdiv@sign
  8763  0B64  0830               	movf	___ftdiv@f2,w
  8764  0B65  00B6               	movwf	??___ftdiv
  8765  0B66  0831               	movf	___ftdiv@f2+1,w
  8766  0B67  00B7               	movwf	??___ftdiv+1
  8767  0B68  0832               	movf	___ftdiv@f2+2,w
  8768  0B69  00B8               	movwf	??___ftdiv+2
  8769  0B6A  3010               	movlw	16
  8770  0B6B                     u2765:	
  8771  0B6B  36B8               	lsrf	??___ftdiv+2,f
  8772  0B6C  0CB7               	rrf	??___ftdiv+1,f
  8773  0B6D  0CB6               	rrf	??___ftdiv,f
  8774  0B6E  0B89               	decfsz	9,f
  8775  0B6F  2B6B               	goto	u2765
  8776  0B70  0836               	movf	??___ftdiv,w
  8777  0B71  00B9               	movwf	??___ftdiv+3
  8778  0B72  0839               	movf	??___ftdiv+3,w
  8779  0B73  06BF               	xorwf	___ftdiv@sign,f
  8780  0B74  3080               	movlw	128
  8781  0B75  00B6               	movwf	??___ftdiv
  8782  0B76  0836               	movf	??___ftdiv,w
  8783  0B77  05BF               	andwf	___ftdiv@sign,f
  8784  0B78  17B4               	bsf	___ftdiv@f1+1,7
  8785  0B79  30FF               	movlw	255
  8786  0B7A  05B3               	andwf	___ftdiv@f1,f
  8787  0B7B  30FF               	movlw	255
  8788  0B7C  05B4               	andwf	___ftdiv@f1+1,f
  8789  0B7D  3000               	movlw	0
  8790  0B7E  05B5               	andwf	___ftdiv@f1+2,f
  8791  0B7F  17B1               	bsf	___ftdiv@f2+1,7
  8792  0B80  30FF               	movlw	255
  8793  0B81  05B0               	andwf	___ftdiv@f2,f
  8794  0B82  30FF               	movlw	255
  8795  0B83  05B1               	andwf	___ftdiv@f2+1,f
  8796  0B84  3000               	movlw	0
  8797  0B85  05B2               	andwf	___ftdiv@f2+2,f
  8798  0B86  3018               	movlw	24
  8799  0B87  00B6               	movwf	??___ftdiv
  8800  0B88  0836               	movf	??___ftdiv,w
  8801  0B89  00BA               	movwf	___ftdiv@cntr
  8802  0B8A                     l2647:	
  8803  0B8A  3001               	movlw	1
  8804  0B8B                     u2775:	
  8805  0B8B  35BB               	lslf	___ftdiv@f3,f
  8806  0B8C  0DBC               	rlf	___ftdiv@f3+1,f
  8807  0B8D  0DBD               	rlf	___ftdiv@f3+2,f
  8808  0B8E  0B89               	decfsz	9,f
  8809  0B8F  2B8B               	goto	u2775
  8810  0B90  0832               	movf	___ftdiv@f2+2,w
  8811  0B91  0235               	subwf	___ftdiv@f1+2,w
  8812  0B92  1D03               	skipz
  8813  0B93  2B9A               	goto	u2785
  8814  0B94  0831               	movf	___ftdiv@f2+1,w
  8815  0B95  0234               	subwf	___ftdiv@f1+1,w
  8816  0B96  1D03               	skipz
  8817  0B97  2B9A               	goto	u2785
  8818  0B98  0830               	movf	___ftdiv@f2,w
  8819  0B99  0233               	subwf	___ftdiv@f1,w
  8820  0B9A                     u2785:	
  8821  0B9A  1C03               	skipc
  8822  0B9B  2BA3               	goto	l2655
  8823  0B9C  0830               	movf	___ftdiv@f2,w
  8824  0B9D  02B3               	subwf	___ftdiv@f1,f
  8825  0B9E  0831               	movf	___ftdiv@f2+1,w
  8826  0B9F  3BB4               	subwfb	___ftdiv@f1+1,f
  8827  0BA0  0832               	movf	___ftdiv@f2+2,w
  8828  0BA1  3BB5               	subwfb	___ftdiv@f1+2,f
  8829  0BA2  143B               	bsf	___ftdiv@f3,0
  8830  0BA3                     l2655:	
  8831  0BA3  3001               	movlw	1
  8832  0BA4                     u2795:	
  8833  0BA4  35B3               	lslf	___ftdiv@f1,f
  8834  0BA5  0DB4               	rlf	___ftdiv@f1+1,f
  8835  0BA6  0DB5               	rlf	___ftdiv@f1+2,f
  8836  0BA7  0B89               	decfsz	9,f
  8837  0BA8  2BA4               	goto	u2795
  8838  0BA9  3001               	movlw	1
  8839  0BAA  02BA               	subwf	___ftdiv@cntr,f
  8840  0BAB  1D03               	btfss	3,2
  8841  0BAC  2B8A               	goto	l2647
  8842  0BAD  083B               	movf	___ftdiv@f3,w
  8843  0BAE  00F0               	movwf	___ftpack@arg
  8844  0BAF  083C               	movf	___ftdiv@f3+1,w
  8845  0BB0  00F1               	movwf	___ftpack@arg+1
  8846  0BB1  083D               	movf	___ftdiv@f3+2,w
  8847  0BB2  00F2               	movwf	___ftpack@arg+2
  8848  0BB3  083E               	movf	___ftdiv@exp,w
  8849  0BB4  00B6               	movwf	??___ftdiv
  8850  0BB5  0836               	movf	??___ftdiv,w
  8851  0BB6  00F3               	movwf	___ftpack@exp
  8852  0BB7  083F               	movf	___ftdiv@sign,w
  8853  0BB8  00B7               	movwf	??___ftdiv+1
  8854  0BB9  0837               	movf	??___ftdiv+1,w
  8855  0BBA  00F4               	movwf	___ftpack@sign
  8856  0BBB  3189  2129         	fcall	___ftpack
  8857  0BBD  0870               	movf	?___ftpack,w
  8858  0BBE  0020               	movlb	0	; select bank0
  8859  0BBF  00B0               	movwf	?___ftdiv
  8860  0BC0  0871               	movf	?___ftpack+1,w
  8861  0BC1  00B1               	movwf	?___ftdiv+1
  8862  0BC2  0872               	movf	?___ftpack+2,w
  8863  0BC3  00B2               	movwf	?___ftdiv+2
  8864  0BC4  0008               	return
  8865  0BC5                     __end_of___ftdiv:	
  8866                           
  8867                           	psect	text11
  8868  0929                     __ptext11:	
  8869 ;; *************** function ___ftpack *****************
  8870 ;; Defined at:
  8871 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\float.c"
  8872 ;; Parameters:    Size  Location     Type
  8873 ;;  arg             3    0[COMMON] unsigned um
  8874 ;;  exp             1    3[COMMON] unsigned char 
  8875 ;;  sign            1    4[COMMON] unsigned char 
  8876 ;; Auto vars:     Size  Location     Type
  8877 ;;		None
  8878 ;; Return value:  Size  Location     Type
  8879 ;;                  3    0[COMMON] float 
  8880 ;; Registers used:
  8881 ;;		wreg, status,2, status,0
  8882 ;; Tracked objects:
  8883 ;;		On entry : 0/0
  8884 ;;		On exit  : 0/0
  8885 ;;		Unchanged: 0/0
  8886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8887 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8889 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8890 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8891 ;;Total ram usage:        8 bytes
  8892 ;; Hardware stack levels used:    1
  8893 ;; This function calls:
  8894 ;;		Nothing
  8895 ;; This function is called by:
  8896 ;;		___awtoft
  8897 ;;		___ftadd
  8898 ;;		___ftdiv
  8899 ;;		___ftmul
  8900 ;; This function uses a non-reentrant model
  8901 ;;
  8902                           
  8903                           
  8904                           ;psect for function ___ftpack
  8905  0929                     ___ftpack:	
  8906                           
  8907                           ;incstack = 0
  8908                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  8909  0929  0873               	movf	___ftpack@exp,w
  8910  092A  1903               	btfsc	3,2
  8911  092B  2931               	goto	l2067
  8912  092C  0872               	movf	___ftpack@arg+2,w
  8913  092D  0471               	iorwf	___ftpack@arg+1,w
  8914  092E  0470               	iorwf	___ftpack@arg,w
  8915  092F  1D03               	skipz
  8916  0930  2942               	goto	l2073
  8917  0931                     l2067:	
  8918  0931  3000               	movlw	0
  8919  0932  00F0               	movwf	?___ftpack
  8920  0933  3000               	movlw	0
  8921  0934  00F1               	movwf	?___ftpack+1
  8922  0935  3000               	movlw	0
  8923  0936  00F2               	movwf	?___ftpack+2
  8924  0937  0008               	return
  8925  0938                     l2071:	
  8926  0938  3001               	movlw	1
  8927  0939  00F5               	movwf	??___ftpack
  8928  093A  0875               	movf	??___ftpack,w
  8929  093B  07F3               	addwf	___ftpack@exp,f
  8930  093C  3001               	movlw	1
  8931  093D                     u1775:	
  8932  093D  36F2               	lsrf	___ftpack@arg+2,f
  8933  093E  0CF1               	rrf	___ftpack@arg+1,f
  8934  093F  0CF0               	rrf	___ftpack@arg,f
  8935  0940  0B89               	decfsz	9,f
  8936  0941  293D               	goto	u1775
  8937  0942                     l2073:	
  8938  0942  30FE               	movlw	254
  8939  0943  0572               	andwf	___ftpack@arg+2,w
  8940  0944  1903               	btfsc	3,2
  8941  0945  295B               	goto	l562
  8942  0946  2938               	goto	l2071
  8943  0947                     l2075:	
  8944  0947  3001               	movlw	1
  8945  0948  00F5               	movwf	??___ftpack
  8946  0949  0875               	movf	??___ftpack,w
  8947  094A  07F3               	addwf	___ftpack@exp,f
  8948  094B  3001               	movlw	1
  8949  094C  07F0               	addwf	___ftpack@arg,f
  8950  094D  3000               	movlw	0
  8951  094E  1803               	skipnc
  8952  094F  3001               	movlw	1
  8953  0950  07F1               	addwf	___ftpack@arg+1,f
  8954  0951  3000               	movlw	0
  8955  0952  1803               	skipnc
  8956  0953  3001               	movlw	1
  8957  0954  07F2               	addwf	___ftpack@arg+2,f
  8958  0955  3001               	movlw	1
  8959  0956                     u1795:	
  8960  0956  36F2               	lsrf	___ftpack@arg+2,f
  8961  0957  0CF1               	rrf	___ftpack@arg+1,f
  8962  0958  0CF0               	rrf	___ftpack@arg,f
  8963  0959  0B89               	decfsz	9,f
  8964  095A  2956               	goto	u1795
  8965  095B                     l562:	
  8966  095B  30FF               	movlw	255
  8967  095C  0572               	andwf	___ftpack@arg+2,w
  8968  095D  1903               	btfsc	3,2
  8969  095E  2968               	goto	l2083
  8970  095F  2947               	goto	l2075
  8971  0960                     l2081:	
  8972  0960  3001               	movlw	1
  8973  0961  02F3               	subwf	___ftpack@exp,f
  8974  0962  3001               	movlw	1
  8975  0963                     u1815:	
  8976  0963  35F0               	lslf	___ftpack@arg,f
  8977  0964  0DF1               	rlf	___ftpack@arg+1,f
  8978  0965  0DF2               	rlf	___ftpack@arg+2,f
  8979  0966  0B89               	decfsz	9,f
  8980  0967  2963               	goto	u1815
  8981  0968                     l2083:	
  8982  0968  1BF1               	btfsc	___ftpack@arg+1,7
  8983  0969  296E               	goto	l569
  8984  096A  3002               	movlw	2
  8985  096B  0273               	subwf	___ftpack@exp,w
  8986  096C  1803               	skipnc
  8987  096D  2960               	goto	l2081
  8988  096E                     l569:	
  8989  096E  1873               	btfsc	___ftpack@exp,0
  8990  096F  2976               	goto	l570
  8991  0970  30FF               	movlw	255
  8992  0971  05F0               	andwf	___ftpack@arg,f
  8993  0972  307F               	movlw	127
  8994  0973  05F1               	andwf	___ftpack@arg+1,f
  8995  0974  30FF               	movlw	255
  8996  0975  05F2               	andwf	___ftpack@arg+2,f
  8997  0976                     l570:	
  8998  0976  1003               	clrc
  8999  0977  0CF3               	rrf	___ftpack@exp,f
  9000  0978  0873               	movf	___ftpack@exp,w
  9001  0979  00F5               	movwf	??___ftpack
  9002  097A  01F6               	clrf	??___ftpack+1
  9003  097B  01F7               	clrf	??___ftpack+2
  9004  097C  3010               	movlw	16
  9005  097D                     u1855:	
  9006  097D  35F5               	lslf	??___ftpack,f
  9007  097E  0DF6               	rlf	??___ftpack+1,f
  9008  097F  0DF7               	rlf	??___ftpack+2,f
  9009  0980  0B89               	decfsz	9,f
  9010  0981  297D               	goto	u1855
  9011  0982  0875               	movf	??___ftpack,w
  9012  0983  04F0               	iorwf	___ftpack@arg,f
  9013  0984  0876               	movf	??___ftpack+1,w
  9014  0985  04F1               	iorwf	___ftpack@arg+1,f
  9015  0986  0877               	movf	??___ftpack+2,w
  9016  0987  04F2               	iorwf	___ftpack@arg+2,f
  9017  0988  0874               	movf	___ftpack@sign,w
  9018  0989  1903               	btfsc	3,2
  9019  098A  0008               	return
  9020  098B  17F2               	bsf	___ftpack@arg+2,7
  9021  098C  0008               	return
  9022  098D                     __end_of___ftpack:	
  9023                           
  9024                           	psect	text12
  9025  0ED0                     __ptext12:	
  9026 ;; *************** function _readAnalog *****************
  9027 ;; Defined at:
  9028 ;;		line 88 in file "adcc.c"
  9029 ;; Parameters:    Size  Location     Type
  9030 ;;  channel         2    6[BANK0 ] int 
  9031 ;; Auto vars:     Size  Location     Type
  9032 ;;  value           2   11[COMMON] int 
  9033 ;;  analog_chann    2    9[COMMON] int 
  9034 ;; Return value:  Size  Location     Type
  9035 ;;                  2    6[BANK0 ] int 
  9036 ;; Registers used:
  9037 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9038 ;; Tracked objects:
  9039 ;;		On entry : 0/0
  9040 ;;		On exit  : 0/0
  9041 ;;		Unchanged: 0/0
  9042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9043 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9044 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9045 ;;      Temps:          0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9046 ;;      Totals:         4      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9047 ;;Total ram usage:       22 bytes
  9048 ;; Hardware stack levels used:    1
  9049 ;; Hardware stack levels required when called:    1
  9050 ;; This function calls:
  9051 ;;		_ADCRead
  9052 ;;		___aldiv
  9053 ;;		___wmul
  9054 ;; This function is called by:
  9055 ;;		_main
  9056 ;; This function uses a non-reentrant model
  9057 ;;
  9058                           
  9059                           
  9060                           ;psect for function _readAnalog
  9061  0ED0                     _readAnalog:	
  9062                           
  9063                           ;adcc.c: 90: int value;
  9064                           ;adcc.c: 92: int analog_channel = channels[channel];
  9065                           
  9066                           ;incstack = 0
  9067                           ; Regs used in _readAnalog: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9068  0ED0  0020               	movlb	0	; select bank0
  9069  0ED1  3526               	lslf	readAnalog@channel,w
  9070  0ED2  3EDD               	addlw	(low (_channels| 0))& (0+255)
  9071  0ED3  0086               	movwf	6
  9072  0ED4  0187               	clrf	7
  9073  0ED5  3F40               	moviw [0]fsr1
  9074  0ED6  00F9               	movwf	readAnalog@analog_channel
  9075  0ED7  3F41               	moviw [1]fsr1
  9076  0ED8  00FA               	movwf	readAnalog@analog_channel+1
  9077                           
  9078                           ;adcc.c: 94: value = ADCRead(analog_channel);
  9079  0ED9  0879               	movf	readAnalog@analog_channel,w
  9080  0EDA  3195  25AA  318E   	fcall	_ADCRead
  9081  0EDD  0871               	movf	?_ADCRead+1,w
  9082  0EDE  00FC               	movwf	readAnalog@value+1
  9083  0EDF  0870               	movf	?_ADCRead,w
  9084  0EE0  00FB               	movwf	readAnalog@value
  9085                           
  9086                           ;adcc.c: 98: totals[channel] = totals[channel] - samples[channel][sampleIndex];
  9087  0EE1  0020               	movlb	0	; select bank0
  9088  0EE2  0826               	movf	readAnalog@channel,w
  9089  0EE3  00A8               	movwf	??_readAnalog
  9090  0EE4  3001               	movlw	1
  9091  0EE5                     u2825:	
  9092  0EE5  35A8               	lslf	??_readAnalog,f
  9093  0EE6  3EFF               	addlw	-1
  9094  0EE7  1D03               	skipz
  9095  0EE8  2EE5               	goto	u2825
  9096  0EE9  3528               	lslf	??_readAnalog,w
  9097  0EEA  3EC0               	addlw	(low (_totals| 0))& (0+255)
  9098  0EEB  0086               	movwf	6
  9099  0EEC  0187               	clrf	7
  9100  0EED  3F40               	moviw [0]fsr1
  9101  0EEE  00A9               	movwf	??_readAnalog+1
  9102  0EEF  3F41               	moviw [1]fsr1
  9103  0EF0  00AA               	movwf	??_readAnalog+2
  9104  0EF1  3F42               	moviw [2]fsr1
  9105  0EF2  00AB               	movwf	??_readAnalog+3
  9106  0EF3  3F43               	moviw [3]fsr1
  9107  0EF4  00AC               	movwf	??_readAnalog+4
  9108  0EF5  086F               	movf	_sampleIndex+1,w
  9109  0EF6  00AE               	movwf	??_readAnalog+6
  9110  0EF7  086E               	movf	_sampleIndex,w
  9111  0EF8  00AD               	movwf	??_readAnalog+5
  9112  0EF9  35AD               	lslf	??_readAnalog+5,f
  9113  0EFA  0DAE               	rlf	??_readAnalog+6,f
  9114  0EFB  0827               	movf	readAnalog@channel+1,w
  9115  0EFC  00F1               	movwf	___wmul@multiplier+1
  9116  0EFD  0826               	movf	readAnalog@channel,w
  9117  0EFE  00F0               	movwf	___wmul@multiplier
  9118  0EFF  3028               	movlw	40
  9119  0F00  00F2               	movwf	___wmul@multiplicand
  9120  0F01  3000               	movlw	0
  9121  0F02  00F3               	movwf	___wmul@multiplicand+1
  9122  0F03  3196  263E  318E   	fcall	___wmul
  9123  0F06  3000               	movlw	0
  9124  0F07  0020               	movlb	0	; select bank0
  9125  0F08  00AF               	movwf	??_readAnalog+7
  9126  0F09  3023               	movlw	35
  9127  0F0A  00B0               	movwf	??_readAnalog+8
  9128  0F0B  0870               	movf	?___wmul,w
  9129  0F0C  072F               	addwf	??_readAnalog+7,w
  9130  0F0D  00B1               	movwf	??_readAnalog+9
  9131  0F0E  0871               	movf	?___wmul+1,w
  9132  0F0F  3D30               	addwfc	??_readAnalog+8,w
  9133  0F10  00B2               	movwf	??_readAnalog+10
  9134  0F11  0831               	movf	??_readAnalog+9,w
  9135  0F12  072D               	addwf	??_readAnalog+5,w
  9136  0F13  0084               	movwf	4
  9137  0F14  0832               	movf	??_readAnalog+10,w
  9138  0F15  3D2E               	addwfc	??_readAnalog+6,w
  9139  0F16  0085               	movwf	5
  9140  0F17  3F00               	moviw [0]fsr0
  9141  0F18  00B3               	movwf	??_readAnalog+11
  9142  0F19  3F01               	moviw [1]fsr0
  9143  0F1A  00B4               	movwf	??_readAnalog+12
  9144  0F1B  01B5               	clrf	??_readAnalog+13
  9145  0F1C  01B6               	clrf	??_readAnalog+14
  9146  0F1D  09B3               	comf	??_readAnalog+11,f
  9147  0F1E  09B4               	comf	??_readAnalog+12,f
  9148  0F1F  09B5               	comf	??_readAnalog+13,f
  9149  0F20  09B6               	comf	??_readAnalog+14,f
  9150  0F21  0AB3               	incf	??_readAnalog+11,f
  9151  0F22  1903               	skipnz
  9152  0F23  0AB4               	incf	??_readAnalog+12,f
  9153  0F24  1903               	skipnz
  9154  0F25  0AB5               	incf	??_readAnalog+13,f
  9155  0F26  1903               	skipnz
  9156  0F27  0AB6               	incf	??_readAnalog+14,f
  9157  0F28  0833               	movf	??_readAnalog+11,w
  9158  0F29  07A9               	addwf	??_readAnalog+1,f
  9159  0F2A  0834               	movf	??_readAnalog+12,w
  9160  0F2B  3DAA               	addwfc	??_readAnalog+2,f
  9161  0F2C  0835               	movf	??_readAnalog+13,w
  9162  0F2D  3DAB               	addwfc	??_readAnalog+3,f
  9163  0F2E  0836               	movf	??_readAnalog+14,w
  9164  0F2F  3DAC               	addwfc	??_readAnalog+4,f
  9165  0F30  0826               	movf	readAnalog@channel,w
  9166  0F31  00B7               	movwf	??_readAnalog+15
  9167  0F32  3001               	movlw	1
  9168  0F33                     u2835:	
  9169  0F33  35B7               	lslf	??_readAnalog+15,f
  9170  0F34  3EFF               	addlw	-1
  9171  0F35  1D03               	skipz
  9172  0F36  2F33               	goto	u2835
  9173  0F37  3537               	lslf	??_readAnalog+15,w
  9174  0F38  3EC0               	addlw	(low (_totals| 0))& (0+255)
  9175  0F39  0086               	movwf	6
  9176  0F3A  0187               	clrf	7
  9177  0F3B  0829               	movf	??_readAnalog+1,w
  9178  0F3C  3FC0               	movwi [0]fsr1
  9179  0F3D  082A               	movf	??_readAnalog+2,w
  9180  0F3E  3FC1               	movwi [1]fsr1
  9181  0F3F  082B               	movf	??_readAnalog+3,w
  9182  0F40  3FC2               	movwi [2]fsr1
  9183  0F41  082C               	movf	??_readAnalog+4,w
  9184  0F42  3FC3               	movwi [3]fsr1
  9185                           
  9186                           ;adcc.c: 100: samples[channel][sampleIndex] = value;
  9187  0F43  086F               	movf	_sampleIndex+1,w
  9188  0F44  00A9               	movwf	??_readAnalog+1
  9189  0F45  086E               	movf	_sampleIndex,w
  9190  0F46  00A8               	movwf	??_readAnalog
  9191  0F47  35A8               	lslf	??_readAnalog,f
  9192  0F48  0DA9               	rlf	??_readAnalog+1,f
  9193  0F49  0827               	movf	readAnalog@channel+1,w
  9194  0F4A  00F1               	movwf	___wmul@multiplier+1
  9195  0F4B  0826               	movf	readAnalog@channel,w
  9196  0F4C  00F0               	movwf	___wmul@multiplier
  9197  0F4D  3028               	movlw	40
  9198  0F4E  00F2               	movwf	___wmul@multiplicand
  9199  0F4F  3000               	movlw	0
  9200  0F50  00F3               	movwf	___wmul@multiplicand+1
  9201  0F51  3196  263E  318E   	fcall	___wmul
  9202  0F54  3000               	movlw	0
  9203  0F55  0020               	movlb	0	; select bank0
  9204  0F56  00AA               	movwf	??_readAnalog+2
  9205  0F57  3023               	movlw	35
  9206  0F58  00AB               	movwf	??_readAnalog+3
  9207  0F59  0870               	movf	?___wmul,w
  9208  0F5A  072A               	addwf	??_readAnalog+2,w
  9209  0F5B  00AC               	movwf	??_readAnalog+4
  9210  0F5C  0871               	movf	?___wmul+1,w
  9211  0F5D  3D2B               	addwfc	??_readAnalog+3,w
  9212  0F5E  00AD               	movwf	??_readAnalog+5
  9213  0F5F  0828               	movf	??_readAnalog,w
  9214  0F60  072C               	addwf	??_readAnalog+4,w
  9215  0F61  0086               	movwf	6
  9216  0F62  0829               	movf	??_readAnalog+1,w
  9217  0F63  3D2D               	addwfc	??_readAnalog+5,w
  9218  0F64  0087               	movwf	7
  9219  0F65  087B               	movf	readAnalog@value,w
  9220  0F66  3FC0               	movwi [0]fsr1
  9221  0F67  087C               	movf	readAnalog@value+1,w
  9222  0F68  3FC1               	movwi [1]fsr1
  9223                           
  9224                           ;adcc.c: 102: totals[channel] = totals[channel] + samples[channel][sampleIndex];
  9225  0F69  0826               	movf	readAnalog@channel,w
  9226  0F6A  00A8               	movwf	??_readAnalog
  9227  0F6B  3001               	movlw	1
  9228  0F6C                     u2845:	
  9229  0F6C  35A8               	lslf	??_readAnalog,f
  9230  0F6D  3EFF               	addlw	-1
  9231  0F6E  1D03               	skipz
  9232  0F6F  2F6C               	goto	u2845
  9233  0F70  3528               	lslf	??_readAnalog,w
  9234  0F71  3EC0               	addlw	(low (_totals| 0))& (0+255)
  9235  0F72  0086               	movwf	6
  9236  0F73  0187               	clrf	7
  9237  0F74  3F40               	moviw [0]fsr1
  9238  0F75  00A9               	movwf	??_readAnalog+1
  9239  0F76  3F41               	moviw [1]fsr1
  9240  0F77  00AA               	movwf	??_readAnalog+2
  9241  0F78  3F42               	moviw [2]fsr1
  9242  0F79  00AB               	movwf	??_readAnalog+3
  9243  0F7A  3F43               	moviw [3]fsr1
  9244  0F7B  00AC               	movwf	??_readAnalog+4
  9245  0F7C  086F               	movf	_sampleIndex+1,w
  9246  0F7D  00AE               	movwf	??_readAnalog+6
  9247  0F7E  086E               	movf	_sampleIndex,w
  9248  0F7F  00AD               	movwf	??_readAnalog+5
  9249  0F80  35AD               	lslf	??_readAnalog+5,f
  9250  0F81  0DAE               	rlf	??_readAnalog+6,f
  9251  0F82  0827               	movf	readAnalog@channel+1,w
  9252  0F83  00F1               	movwf	___wmul@multiplier+1
  9253  0F84  0826               	movf	readAnalog@channel,w
  9254  0F85  00F0               	movwf	___wmul@multiplier
  9255  0F86  3028               	movlw	40
  9256  0F87  00F2               	movwf	___wmul@multiplicand
  9257  0F88  3000               	movlw	0
  9258  0F89  00F3               	movwf	___wmul@multiplicand+1
  9259  0F8A  3196  263E  318E   	fcall	___wmul
  9260  0F8D  3000               	movlw	0
  9261  0F8E  0020               	movlb	0	; select bank0
  9262  0F8F  00AF               	movwf	??_readAnalog+7
  9263  0F90  3023               	movlw	35
  9264  0F91  00B0               	movwf	??_readAnalog+8
  9265  0F92  0870               	movf	?___wmul,w
  9266  0F93  072F               	addwf	??_readAnalog+7,w
  9267  0F94  00B1               	movwf	??_readAnalog+9
  9268  0F95  0871               	movf	?___wmul+1,w
  9269  0F96  3D30               	addwfc	??_readAnalog+8,w
  9270  0F97  00B2               	movwf	??_readAnalog+10
  9271  0F98  0831               	movf	??_readAnalog+9,w
  9272  0F99  072D               	addwf	??_readAnalog+5,w
  9273  0F9A  0084               	movwf	4
  9274  0F9B  0832               	movf	??_readAnalog+10,w
  9275  0F9C  3D2E               	addwfc	??_readAnalog+6,w
  9276  0F9D  0085               	movwf	5
  9277  0F9E  3F00               	moviw [0]fsr0
  9278  0F9F  00B3               	movwf	??_readAnalog+11
  9279  0FA0  3F01               	moviw [1]fsr0
  9280  0FA1  00B4               	movwf	??_readAnalog+12
  9281  0FA2  01B5               	clrf	??_readAnalog+13
  9282  0FA3  01B6               	clrf	??_readAnalog+14
  9283  0FA4  0833               	movf	??_readAnalog+11,w
  9284  0FA5  07A9               	addwf	??_readAnalog+1,f
  9285  0FA6  0834               	movf	??_readAnalog+12,w
  9286  0FA7  3DAA               	addwfc	??_readAnalog+2,f
  9287  0FA8  0835               	movf	??_readAnalog+13,w
  9288  0FA9  3DAB               	addwfc	??_readAnalog+3,f
  9289  0FAA  0836               	movf	??_readAnalog+14,w
  9290  0FAB  3DAC               	addwfc	??_readAnalog+4,f
  9291  0FAC  0826               	movf	readAnalog@channel,w
  9292  0FAD  00B7               	movwf	??_readAnalog+15
  9293  0FAE  3001               	movlw	1
  9294  0FAF                     u2855:	
  9295  0FAF  35B7               	lslf	??_readAnalog+15,f
  9296  0FB0  3EFF               	addlw	-1
  9297  0FB1  1D03               	skipz
  9298  0FB2  2FAF               	goto	u2855
  9299  0FB3  3537               	lslf	??_readAnalog+15,w
  9300  0FB4  3EC0               	addlw	(low (_totals| 0))& (0+255)
  9301  0FB5  0086               	movwf	6
  9302  0FB6  0187               	clrf	7
  9303  0FB7  0829               	movf	??_readAnalog+1,w
  9304  0FB8  3FC0               	movwi [0]fsr1
  9305  0FB9  082A               	movf	??_readAnalog+2,w
  9306  0FBA  3FC1               	movwi [1]fsr1
  9307  0FBB  082B               	movf	??_readAnalog+3,w
  9308  0FBC  3FC2               	movwi [2]fsr1
  9309  0FBD  082C               	movf	??_readAnalog+4,w
  9310  0FBE  3FC3               	movwi [3]fsr1
  9311                           
  9312                           ;adcc.c: 104: if(channel>4)
  9313  0FBF  0827               	movf	readAnalog@channel+1,w
  9314  0FC0  3A80               	xorlw	128
  9315  0FC1  00A8               	movwf	??_readAnalog
  9316  0FC2  3080               	movlw	128
  9317  0FC3  0228               	subwf	??_readAnalog,w
  9318  0FC4  1D03               	skipz
  9319  0FC5  2FC8               	goto	u2865
  9320  0FC6  3005               	movlw	5
  9321  0FC7  0226               	subwf	readAnalog@channel,w
  9322  0FC8                     u2865:	
  9323  0FC8  1C03               	skipc
  9324  0FC9  2FD8               	goto	l2685
  9325                           
  9326                           ;adcc.c: 105: {
  9327                           ;adcc.c: 106: sampleIndex += 1;
  9328  0FCA  3001               	movlw	1
  9329  0FCB  0020               	movlb	0	; select bank0
  9330  0FCC  07EE               	addwf	_sampleIndex,f
  9331  0FCD  3000               	movlw	0
  9332  0FCE  3DEF               	addwfc	_sampleIndex+1,f
  9333                           
  9334                           ;adcc.c: 108: if(sampleIndex >= 20)
  9335  0FCF  3000               	movlw	0
  9336  0FD0  026F               	subwf	_sampleIndex+1,w
  9337  0FD1  3014               	movlw	20
  9338  0FD2  1903               	skipnz
  9339  0FD3  026E               	subwf	_sampleIndex,w
  9340  0FD4  1C03               	skipc
  9341  0FD5  2FD8               	goto	l2685
  9342                           
  9343                           ;adcc.c: 109: {
  9344                           ;adcc.c: 110: sampleIndex = 0;
  9345  0FD6  01EE               	clrf	_sampleIndex
  9346  0FD7  01EF               	clrf	_sampleIndex+1
  9347  0FD8                     l2685:	
  9348                           
  9349                           ;adcc.c: 111: }
  9350                           ;adcc.c: 112: }
  9351                           ;adcc.c: 114: value = totals[channel] / 20;
  9352  0FD8  3000               	movlw	0
  9353  0FD9  00F3               	movwf	___aldiv@divisor+3
  9354  0FDA  3000               	movlw	0
  9355  0FDB  00F2               	movwf	___aldiv@divisor+2
  9356  0FDC  3000               	movlw	0
  9357  0FDD  00F1               	movwf	___aldiv@divisor+1
  9358  0FDE  3014               	movlw	20
  9359  0FDF  00F0               	movwf	___aldiv@divisor
  9360  0FE0  0020               	movlb	0	; select bank0
  9361  0FE1  0826               	movf	readAnalog@channel,w
  9362  0FE2  00A8               	movwf	??_readAnalog
  9363  0FE3  3001               	movlw	1
  9364  0FE4                     u2885:	
  9365  0FE4  35A8               	lslf	??_readAnalog,f
  9366  0FE5  3EFF               	addlw	-1
  9367  0FE6  1D03               	skipz
  9368  0FE7  2FE4               	goto	u2885
  9369  0FE8  3528               	lslf	??_readAnalog,w
  9370  0FE9  3EC0               	addlw	(low (_totals| 0))& (0+255)
  9371  0FEA  0086               	movwf	6
  9372  0FEB  0187               	clrf	7
  9373  0FEC  3F40               	moviw [0]fsr1
  9374  0FED  00F4               	movwf	___aldiv@dividend
  9375  0FEE  3F41               	moviw [1]fsr1
  9376  0FEF  00F5               	movwf	___aldiv@dividend+1
  9377  0FF0  3F42               	moviw [2]fsr1
  9378  0FF1  00F6               	movwf	___aldiv@dividend+2
  9379  0FF2  3F43               	moviw [3]fsr1
  9380  0FF3  00F7               	movwf	___aldiv@dividend+3
  9381  0FF4  3189  218D         	fcall	___aldiv
  9382  0FF6  0871               	movf	?___aldiv+1,w
  9383  0FF7  00FC               	movwf	readAnalog@value+1
  9384  0FF8  0870               	movf	?___aldiv,w
  9385  0FF9  00FB               	movwf	readAnalog@value
  9386                           
  9387                           ;adcc.c: 116: return value;
  9388  0FFA  087C               	movf	readAnalog@value+1,w
  9389  0FFB  0020               	movlb	0	; select bank0
  9390  0FFC  00A7               	movwf	?_readAnalog+1
  9391  0FFD  087B               	movf	readAnalog@value,w
  9392  0FFE  00A6               	movwf	?_readAnalog
  9393  0FFF  0008               	return
  9394  1000                     __end_of_readAnalog:	
  9395                           
  9396                           	psect	text13
  9397  163E                     __ptext13:	
  9398 ;; *************** function ___wmul *****************
  9399 ;; Defined at:
  9400 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
  9401 ;; Parameters:    Size  Location     Type
  9402 ;;  multiplier      2    0[COMMON] unsigned int 
  9403 ;;  multiplicand    2    2[COMMON] unsigned int 
  9404 ;; Auto vars:     Size  Location     Type
  9405 ;;  product         2    4[COMMON] unsigned int 
  9406 ;; Return value:  Size  Location     Type
  9407 ;;                  2    0[COMMON] unsigned int 
  9408 ;; Registers used:
  9409 ;;		wreg, status,2, status,0
  9410 ;; Tracked objects:
  9411 ;;		On entry : 0/0
  9412 ;;		On exit  : 0/0
  9413 ;;		Unchanged: 0/0
  9414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9415 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9416 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9418 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9419 ;;Total ram usage:        6 bytes
  9420 ;; Hardware stack levels used:    1
  9421 ;; This function calls:
  9422 ;;		Nothing
  9423 ;; This function is called by:
  9424 ;;		_readAnalog
  9425 ;;		_eval_poly
  9426 ;; This function uses a non-reentrant model
  9427 ;;
  9428                           
  9429                           
  9430                           ;psect for function ___wmul
  9431  163E                     ___wmul:	
  9432                           
  9433                           ;incstack = 0
  9434                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  9435  163E  01F4               	clrf	___wmul@product
  9436  163F  01F5               	clrf	___wmul@product+1
  9437  1640                     l2113:	
  9438  1640  1C70               	btfss	___wmul@multiplier,0
  9439  1641  2E46               	goto	l401
  9440  1642  0872               	movf	___wmul@multiplicand,w
  9441  1643  07F4               	addwf	___wmul@product,f
  9442  1644  0873               	movf	___wmul@multiplicand+1,w
  9443  1645  3DF5               	addwfc	___wmul@product+1,f
  9444  1646                     l401:	
  9445  1646  3001               	movlw	1
  9446  1647                     u1925:	
  9447  1647  35F2               	lslf	___wmul@multiplicand,f
  9448  1648  0DF3               	rlf	___wmul@multiplicand+1,f
  9449  1649  0B89               	decfsz	9,f
  9450  164A  2E47               	goto	u1925
  9451  164B  3001               	movlw	1
  9452  164C                     u1935:	
  9453  164C  36F1               	lsrf	___wmul@multiplier+1,f
  9454  164D  0CF0               	rrf	___wmul@multiplier,f
  9455  164E  0B89               	decfsz	9,f
  9456  164F  2E4C               	goto	u1935
  9457  1650  0870               	movf	___wmul@multiplier,w
  9458  1651  0471               	iorwf	___wmul@multiplier+1,w
  9459  1652  1D03               	btfss	3,2
  9460  1653  2E40               	goto	l2113
  9461  1654  0875               	movf	___wmul@product+1,w
  9462  1655  00F1               	movwf	?___wmul+1
  9463  1656  0874               	movf	___wmul@product,w
  9464  1657  00F0               	movwf	?___wmul
  9465  1658  0008               	return
  9466  1659                     __end_of___wmul:	
  9467                           
  9468                           	psect	text14
  9469  098D                     __ptext14:	
  9470 ;; *************** function ___aldiv *****************
  9471 ;; Defined at:
  9472 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\aldiv.c"
  9473 ;; Parameters:    Size  Location     Type
  9474 ;;  divisor         4    0[COMMON] long 
  9475 ;;  dividend        4    4[COMMON] long 
  9476 ;; Auto vars:     Size  Location     Type
  9477 ;;  quotient        4    2[BANK0 ] long 
  9478 ;;  sign            1    1[BANK0 ] unsigned char 
  9479 ;;  counter         1    0[BANK0 ] unsigned char 
  9480 ;; Return value:  Size  Location     Type
  9481 ;;                  4    0[COMMON] long 
  9482 ;; Registers used:
  9483 ;;		wreg, status,2, status,0
  9484 ;; Tracked objects:
  9485 ;;		On entry : 0/0
  9486 ;;		On exit  : 0/0
  9487 ;;		Unchanged: 0/0
  9488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9489 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9490 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9491 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9492 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9493 ;;Total ram usage:       15 bytes
  9494 ;; Hardware stack levels used:    1
  9495 ;; This function calls:
  9496 ;;		Nothing
  9497 ;; This function is called by:
  9498 ;;		_readAnalog
  9499 ;; This function uses a non-reentrant model
  9500 ;;
  9501                           
  9502                           
  9503                           ;psect for function ___aldiv
  9504  098D                     ___aldiv:	
  9505                           
  9506                           ;incstack = 0
  9507                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  9508  098D  0020               	movlb	0	; select bank0
  9509  098E  01A1               	clrf	___aldiv@sign
  9510  098F  1FF3               	btfss	___aldiv@divisor+3,7
  9511  0990  299E               	goto	l456
  9512  0991  09F0               	comf	___aldiv@divisor,f
  9513  0992  09F1               	comf	___aldiv@divisor+1,f
  9514  0993  09F2               	comf	___aldiv@divisor+2,f
  9515  0994  09F3               	comf	___aldiv@divisor+3,f
  9516  0995  0AF0               	incf	___aldiv@divisor,f
  9517  0996  1903               	skipnz
  9518  0997  0AF1               	incf	___aldiv@divisor+1,f
  9519  0998  1903               	skipnz
  9520  0999  0AF2               	incf	___aldiv@divisor+2,f
  9521  099A  1903               	skipnz
  9522  099B  0AF3               	incf	___aldiv@divisor+3,f
  9523  099C  01A1               	clrf	___aldiv@sign
  9524  099D  0AA1               	incf	___aldiv@sign,f
  9525  099E                     l456:	
  9526  099E  1FF7               	btfss	___aldiv@dividend+3,7
  9527  099F  29AF               	goto	l2509
  9528  09A0  09F4               	comf	___aldiv@dividend,f
  9529  09A1  09F5               	comf	___aldiv@dividend+1,f
  9530  09A2  09F6               	comf	___aldiv@dividend+2,f
  9531  09A3  09F7               	comf	___aldiv@dividend+3,f
  9532  09A4  0AF4               	incf	___aldiv@dividend,f
  9533  09A5  1903               	skipnz
  9534  09A6  0AF5               	incf	___aldiv@dividend+1,f
  9535  09A7  1903               	skipnz
  9536  09A8  0AF6               	incf	___aldiv@dividend+2,f
  9537  09A9  1903               	skipnz
  9538  09AA  0AF7               	incf	___aldiv@dividend+3,f
  9539  09AB  3001               	movlw	1
  9540  09AC  00F8               	movwf	??___aldiv
  9541  09AD  0878               	movf	??___aldiv,w
  9542  09AE  06A1               	xorwf	___aldiv@sign,f
  9543  09AF                     l2509:	
  9544  09AF  3000               	movlw	0
  9545  09B0  00A5               	movwf	___aldiv@quotient+3
  9546  09B1  3000               	movlw	0
  9547  09B2  00A4               	movwf	___aldiv@quotient+2
  9548  09B3  3000               	movlw	0
  9549  09B4  00A3               	movwf	___aldiv@quotient+1
  9550  09B5  3000               	movlw	0
  9551  09B6  00A2               	movwf	___aldiv@quotient
  9552  09B7  0873               	movf	___aldiv@divisor+3,w
  9553  09B8  0472               	iorwf	___aldiv@divisor+2,w
  9554  09B9  0471               	iorwf	___aldiv@divisor+1,w
  9555  09BA  0470               	iorwf	___aldiv@divisor,w
  9556  09BB  1903               	skipnz
  9557  09BC  29F8               	goto	l2531
  9558  09BD  01A0               	clrf	___aldiv@counter
  9559  09BE  0AA0               	incf	___aldiv@counter,f
  9560  09BF                     l2517:	
  9561  09BF  1BF3               	btfsc	___aldiv@divisor+3,7
  9562  09C0  29CD               	goto	l2519
  9563  09C1  3001               	movlw	1
  9564  09C2                     u2475:	
  9565  09C2  35F0               	lslf	___aldiv@divisor,f
  9566  09C3  0DF1               	rlf	___aldiv@divisor+1,f
  9567  09C4  0DF2               	rlf	___aldiv@divisor+2,f
  9568  09C5  0DF3               	rlf	___aldiv@divisor+3,f
  9569  09C6  0B89               	decfsz	9,f
  9570  09C7  29C2               	goto	u2475
  9571  09C8  3001               	movlw	1
  9572  09C9  00F8               	movwf	??___aldiv
  9573  09CA  0878               	movf	??___aldiv,w
  9574  09CB  07A0               	addwf	___aldiv@counter,f
  9575  09CC  29BF               	goto	l2517
  9576  09CD                     l2519:	
  9577  09CD  3001               	movlw	1
  9578  09CE                     u2495:	
  9579  09CE  35A2               	lslf	___aldiv@quotient,f
  9580  09CF  0DA3               	rlf	___aldiv@quotient+1,f
  9581  09D0  0DA4               	rlf	___aldiv@quotient+2,f
  9582  09D1  0DA5               	rlf	___aldiv@quotient+3,f
  9583  09D2  0B89               	decfsz	9,f
  9584  09D3  29CE               	goto	u2495
  9585  09D4  0873               	movf	___aldiv@divisor+3,w
  9586  09D5  0277               	subwf	___aldiv@dividend+3,w
  9587  09D6  1D03               	skipz
  9588  09D7  29E2               	goto	u2505
  9589  09D8  0872               	movf	___aldiv@divisor+2,w
  9590  09D9  0276               	subwf	___aldiv@dividend+2,w
  9591  09DA  1D03               	skipz
  9592  09DB  29E2               	goto	u2505
  9593  09DC  0871               	movf	___aldiv@divisor+1,w
  9594  09DD  0275               	subwf	___aldiv@dividend+1,w
  9595  09DE  1D03               	skipz
  9596  09DF  29E2               	goto	u2505
  9597  09E0  0870               	movf	___aldiv@divisor,w
  9598  09E1  0274               	subwf	___aldiv@dividend,w
  9599  09E2                     u2505:	
  9600  09E2  1C03               	skipc
  9601  09E3  29ED               	goto	l2527
  9602  09E4  0870               	movf	___aldiv@divisor,w
  9603  09E5  02F4               	subwf	___aldiv@dividend,f
  9604  09E6  0871               	movf	___aldiv@divisor+1,w
  9605  09E7  3BF5               	subwfb	___aldiv@dividend+1,f
  9606  09E8  0872               	movf	___aldiv@divisor+2,w
  9607  09E9  3BF6               	subwfb	___aldiv@dividend+2,f
  9608  09EA  0873               	movf	___aldiv@divisor+3,w
  9609  09EB  3BF7               	subwfb	___aldiv@dividend+3,f
  9610  09EC  1422               	bsf	___aldiv@quotient,0
  9611  09ED                     l2527:	
  9612  09ED  3001               	movlw	1
  9613  09EE                     u2515:	
  9614  09EE  36F3               	lsrf	___aldiv@divisor+3,f
  9615  09EF  0CF2               	rrf	___aldiv@divisor+2,f
  9616  09F0  0CF1               	rrf	___aldiv@divisor+1,f
  9617  09F1  0CF0               	rrf	___aldiv@divisor,f
  9618  09F2  0B89               	decfsz	9,f
  9619  09F3  29EE               	goto	u2515
  9620  09F4  3001               	movlw	1
  9621  09F5  02A0               	subwf	___aldiv@counter,f
  9622  09F6  1D03               	btfss	3,2
  9623  09F7  29CD               	goto	l2519
  9624  09F8                     l2531:	
  9625  09F8  0821               	movf	___aldiv@sign,w
  9626  09F9  1903               	btfsc	3,2
  9627  09FA  2A06               	goto	l2535
  9628  09FB  09A2               	comf	___aldiv@quotient,f
  9629  09FC  09A3               	comf	___aldiv@quotient+1,f
  9630  09FD  09A4               	comf	___aldiv@quotient+2,f
  9631  09FE  09A5               	comf	___aldiv@quotient+3,f
  9632  09FF  0AA2               	incf	___aldiv@quotient,f
  9633  0A00  1903               	skipnz
  9634  0A01  0AA3               	incf	___aldiv@quotient+1,f
  9635  0A02  1903               	skipnz
  9636  0A03  0AA4               	incf	___aldiv@quotient+2,f
  9637  0A04  1903               	skipnz
  9638  0A05  0AA5               	incf	___aldiv@quotient+3,f
  9639  0A06                     l2535:	
  9640  0A06  0825               	movf	___aldiv@quotient+3,w
  9641  0A07  00F3               	movwf	?___aldiv+3
  9642  0A08  0824               	movf	___aldiv@quotient+2,w
  9643  0A09  00F2               	movwf	?___aldiv+2
  9644  0A0A  0823               	movf	___aldiv@quotient+1,w
  9645  0A0B  00F1               	movwf	?___aldiv+1
  9646  0A0C  0822               	movf	___aldiv@quotient,w
  9647  0A0D  00F0               	movwf	?___aldiv
  9648  0A0E  0008               	return
  9649  0A0F                     __end_of___aldiv:	
  9650                           
  9651                           	psect	text15
  9652  15AA                     __ptext15:	
  9653 ;; *************** function _ADCRead *****************
  9654 ;; Defined at:
  9655 ;;		line 65 in file "adcc.c"
  9656 ;; Parameters:    Size  Location     Type
  9657 ;;  channel         1    wreg     enum E13559
  9658 ;; Auto vars:     Size  Location     Type
  9659 ;;  channel         1    3[COMMON] enum E13559
  9660 ;; Return value:  Size  Location     Type
  9661 ;;                  2    0[COMMON] unsigned int 
  9662 ;; Registers used:
  9663 ;;		wreg
  9664 ;; Tracked objects:
  9665 ;;		On entry : 0/0
  9666 ;;		On exit  : 0/0
  9667 ;;		Unchanged: 0/0
  9668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9669 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9670 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9672 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9673 ;;Total ram usage:        4 bytes
  9674 ;; Hardware stack levels used:    1
  9675 ;; This function calls:
  9676 ;;		Nothing
  9677 ;; This function is called by:
  9678 ;;		_readAnalog
  9679 ;;		_main
  9680 ;; This function uses a non-reentrant model
  9681 ;;
  9682                           
  9683                           
  9684                           ;psect for function _ADCRead
  9685  15AA                     _ADCRead:	
  9686                           
  9687                           ;incstack = 0
  9688                           ; Regs used in _ADCRead: [wreg]
  9689                           ;ADCRead@channel stored from wreg
  9690  15AA  00F3               	movwf	ADCRead@channel
  9691                           
  9692                           ;adcc.c: 68: ADPCH = channel;
  9693  15AB  0873               	movf	ADCRead@channel,w
  9694  15AC  0021               	movlb	1	; select bank1
  9695  15AD  009E               	movwf	30	;volatile
  9696                           
  9697                           ;adcc.c: 71: ADCON0bits.ADON = 1;
  9698  15AE  1793               	bsf	19,7	;volatile
  9699                           
  9700                           ;adcc.c: 74: ADCON0bits.ADCONT = 0;
  9701  15AF  1313               	bcf	19,6	;volatile
  9702                           
  9703                           ;adcc.c: 77: ADCON0bits.ADGO = 1;
  9704  15B0  1413               	bsf	19,0	;volatile
  9705  15B1                     l58:	
  9706                           ;adcc.c: 81: {
  9707                           
  9708                           ;adcc.c: 80: while (ADCON0bits.ADGO)
  9709                           
  9710  15B1  1813               	btfsc	19,0	;volatile
  9711  15B2  2DB1               	goto	l58
  9712                           
  9713                           ;adcc.c: 82: }
  9714                           ;adcc.c: 85: return ((ADRESH << 8) + ADRESL);
  9715  15B3  080D               	movf	13,w	;volatile
  9716  15B4  00F1               	movwf	?_ADCRead+1
  9717  15B5  080C               	movf	12,w	;volatile
  9718  15B6  00F0               	movwf	?_ADCRead
  9719  15B7  0008               	return
  9720  15B8                     __end_of_ADCRead:	
  9721                           
  9722                           	psect	text16
  9723  169F                     __ptext16:	
  9724 ;; *************** function ___lwdiv *****************
  9725 ;; Defined at:
  9726 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwdiv.c"
  9727 ;; Parameters:    Size  Location     Type
  9728 ;;  divisor         2    0[COMMON] unsigned int 
  9729 ;;  dividend        2    2[COMMON] unsigned int 
  9730 ;; Auto vars:     Size  Location     Type
  9731 ;;  quotient        2    5[COMMON] unsigned int 
  9732 ;;  counter         1    7[COMMON] unsigned char 
  9733 ;; Return value:  Size  Location     Type
  9734 ;;                  2    0[COMMON] unsigned int 
  9735 ;; Registers used:
  9736 ;;		wreg, status,2, status,0
  9737 ;; Tracked objects:
  9738 ;;		On entry : 0/0
  9739 ;;		On exit  : 0/0
  9740 ;;		Unchanged: 0/0
  9741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9742 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9743 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9744 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9745 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9746 ;;Total ram usage:        8 bytes
  9747 ;; Hardware stack levels used:    1
  9748 ;; This function calls:
  9749 ;;		Nothing
  9750 ;; This function is called by:
  9751 ;;		_main
  9752 ;; This function uses a non-reentrant model
  9753 ;;
  9754                           
  9755                           
  9756                           ;psect for function ___lwdiv
  9757  169F                     ___lwdiv:	
  9758                           
  9759                           ;incstack = 0
  9760                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  9761  169F  01F5               	clrf	___lwdiv@quotient
  9762  16A0  01F6               	clrf	___lwdiv@quotient+1
  9763  16A1  0870               	movf	___lwdiv@divisor,w
  9764  16A2  0471               	iorwf	___lwdiv@divisor+1,w
  9765  16A3  1903               	btfsc	3,2
  9766  16A4  2ECE               	goto	l2875
  9767  16A5  01F7               	clrf	___lwdiv@counter
  9768  16A6  0AF7               	incf	___lwdiv@counter,f
  9769  16A7                     l2863:	
  9770  16A7  1BF1               	btfsc	___lwdiv@divisor+1,7
  9771  16A8  2EB3               	goto	l2865
  9772  16A9  3001               	movlw	1
  9773  16AA                     u3155:	
  9774  16AA  35F0               	lslf	___lwdiv@divisor,f
  9775  16AB  0DF1               	rlf	___lwdiv@divisor+1,f
  9776  16AC  0B89               	decfsz	9,f
  9777  16AD  2EAA               	goto	u3155
  9778  16AE  3001               	movlw	1
  9779  16AF  00F4               	movwf	??___lwdiv
  9780  16B0  0874               	movf	??___lwdiv,w
  9781  16B1  07F7               	addwf	___lwdiv@counter,f
  9782  16B2  2EA7               	goto	l2863
  9783  16B3                     l2865:	
  9784  16B3  3001               	movlw	1
  9785  16B4                     u3175:	
  9786  16B4  35F5               	lslf	___lwdiv@quotient,f
  9787  16B5  0DF6               	rlf	___lwdiv@quotient+1,f
  9788  16B6  0B89               	decfsz	9,f
  9789  16B7  2EB4               	goto	u3175
  9790  16B8  0871               	movf	___lwdiv@divisor+1,w
  9791  16B9  0273               	subwf	___lwdiv@dividend+1,w
  9792  16BA  1D03               	skipz
  9793  16BB  2EBE               	goto	u3185
  9794  16BC  0870               	movf	___lwdiv@divisor,w
  9795  16BD  0272               	subwf	___lwdiv@dividend,w
  9796  16BE                     u3185:	
  9797  16BE  1C03               	skipc
  9798  16BF  2EC5               	goto	l2871
  9799  16C0  0870               	movf	___lwdiv@divisor,w
  9800  16C1  02F2               	subwf	___lwdiv@dividend,f
  9801  16C2  0871               	movf	___lwdiv@divisor+1,w
  9802  16C3  3BF3               	subwfb	___lwdiv@dividend+1,f
  9803  16C4  1475               	bsf	___lwdiv@quotient,0
  9804  16C5                     l2871:	
  9805  16C5  3001               	movlw	1
  9806  16C6                     u3195:	
  9807  16C6  36F1               	lsrf	___lwdiv@divisor+1,f
  9808  16C7  0CF0               	rrf	___lwdiv@divisor,f
  9809  16C8  0B89               	decfsz	9,f
  9810  16C9  2EC6               	goto	u3195
  9811  16CA  3001               	movlw	1
  9812  16CB  02F7               	subwf	___lwdiv@counter,f
  9813  16CC  1D03               	btfss	3,2
  9814  16CD  2EB3               	goto	l2865
  9815  16CE                     l2875:	
  9816  16CE  0876               	movf	___lwdiv@quotient+1,w
  9817  16CF  00F1               	movwf	?___lwdiv+1
  9818  16D0  0875               	movf	___lwdiv@quotient,w
  9819  16D1  00F0               	movwf	?___lwdiv
  9820  16D2  0008               	return
  9821  16D3                     __end_of___lwdiv:	
  9822                           
  9823                           	psect	text17
  9824  0A0F                     __ptext17:	
  9825 ;; *************** function ___fttol *****************
  9826 ;; Defined at:
  9827 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fttol.c"
  9828 ;; Parameters:    Size  Location     Type
  9829 ;;  f1              3    0[COMMON] float 
  9830 ;; Auto vars:     Size  Location     Type
  9831 ;;  lval            4    9[COMMON] unsigned long 
  9832 ;;  exp1            1   13[COMMON] unsigned char 
  9833 ;;  sign1           1    8[COMMON] unsigned char 
  9834 ;; Return value:  Size  Location     Type
  9835 ;;                  4    0[COMMON] long 
  9836 ;; Registers used:
  9837 ;;		wreg, status,2, status,0
  9838 ;; Tracked objects:
  9839 ;;		On entry : 0/0
  9840 ;;		On exit  : 0/0
  9841 ;;		Unchanged: 0/0
  9842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9843 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9844 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9845 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9846 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9847 ;;Total ram usage:       14 bytes
  9848 ;; Hardware stack levels used:    1
  9849 ;; This function calls:
  9850 ;;		Nothing
  9851 ;; This function is called by:
  9852 ;;		_main
  9853 ;; This function uses a non-reentrant model
  9854 ;;
  9855                           
  9856                           
  9857                           ;psect for function ___fttol
  9858  0A0F                     ___fttol:	
  9859                           
  9860                           ;incstack = 0
  9861                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  9862  0A0F  0870               	movf	___fttol@f1,w
  9863  0A10  00F4               	movwf	??___fttol
  9864  0A11  0871               	movf	___fttol@f1+1,w
  9865  0A12  00F5               	movwf	??___fttol+1
  9866  0A13  0872               	movf	___fttol@f1+2,w
  9867  0A14  00F6               	movwf	??___fttol+2
  9868  0A15  1003               	clrc
  9869  0A16  0D75               	rlf	??___fttol+1,w
  9870  0A17  0D76               	rlf	??___fttol+2,w
  9871  0A18  00F7               	movwf	??___fttol+3
  9872  0A19  0877               	movf	??___fttol+3,w
  9873  0A1A  00FD               	movwf	___fttol@exp1
  9874  0A1B  087D               	movf	___fttol@exp1,w
  9875  0A1C  1D03               	btfss	3,2
  9876  0A1D  2A27               	goto	l2817
  9877  0A1E  3000               	movlw	0
  9878  0A1F  00F3               	movwf	?___fttol+3
  9879  0A20  3000               	movlw	0
  9880  0A21  00F2               	movwf	?___fttol+2
  9881  0A22  3000               	movlw	0
  9882  0A23  00F1               	movwf	?___fttol+1
  9883  0A24  3000               	movlw	0
  9884  0A25  00F0               	movwf	?___fttol
  9885  0A26  0008               	return
  9886  0A27                     l2817:	
  9887  0A27  0870               	movf	___fttol@f1,w
  9888  0A28  00F4               	movwf	??___fttol
  9889  0A29  0871               	movf	___fttol@f1+1,w
  9890  0A2A  00F5               	movwf	??___fttol+1
  9891  0A2B  0872               	movf	___fttol@f1+2,w
  9892  0A2C  00F6               	movwf	??___fttol+2
  9893  0A2D  3017               	movlw	23
  9894  0A2E                     u3055:	
  9895  0A2E  36F6               	lsrf	??___fttol+2,f
  9896  0A2F  0CF5               	rrf	??___fttol+1,f
  9897  0A30  0CF4               	rrf	??___fttol,f
  9898  0A31  0B89               	decfsz	9,f
  9899  0A32  2A2E               	goto	u3055
  9900  0A33  0874               	movf	??___fttol,w
  9901  0A34  00F7               	movwf	??___fttol+3
  9902  0A35  0877               	movf	??___fttol+3,w
  9903  0A36  00F8               	movwf	___fttol@sign1
  9904  0A37  17F1               	bsf	___fttol@f1+1,7
  9905  0A38  30FF               	movlw	255
  9906  0A39  05F0               	andwf	___fttol@f1,f
  9907  0A3A  30FF               	movlw	255
  9908  0A3B  05F1               	andwf	___fttol@f1+1,f
  9909  0A3C  3000               	movlw	0
  9910  0A3D  05F2               	andwf	___fttol@f1+2,f
  9911  0A3E  0870               	movf	___fttol@f1,w
  9912  0A3F  00F9               	movwf	___fttol@lval
  9913  0A40  0871               	movf	___fttol@f1+1,w
  9914  0A41  00FA               	movwf	___fttol@lval+1
  9915  0A42  0872               	movf	___fttol@f1+2,w
  9916  0A43  00FB               	movwf	___fttol@lval+2
  9917  0A44  01FC               	clrf	___fttol@lval+3
  9918  0A45  308E               	movlw	142
  9919  0A46  02FD               	subwf	___fttol@exp1,f
  9920  0A47  1FFD               	btfss	___fttol@exp1,7
  9921  0A48  2A65               	goto	l2837
  9922  0A49  087D               	movf	___fttol@exp1,w
  9923  0A4A  3A80               	xorlw	128
  9924  0A4B  3E8F               	addlw	143
  9925  0A4C  1803               	skipnc
  9926  0A4D  2A57               	goto	l2835
  9927  0A4E  3000               	movlw	0
  9928  0A4F  00F3               	movwf	?___fttol+3
  9929  0A50  3000               	movlw	0
  9930  0A51  00F2               	movwf	?___fttol+2
  9931  0A52  3000               	movlw	0
  9932  0A53  00F1               	movwf	?___fttol+1
  9933  0A54  3000               	movlw	0
  9934  0A55  00F0               	movwf	?___fttol
  9935  0A56  0008               	return
  9936  0A57                     l2835:	
  9937  0A57  3001               	movlw	1
  9938  0A58                     u3085:	
  9939  0A58  36FC               	lsrf	___fttol@lval+3,f
  9940  0A59  0CFB               	rrf	___fttol@lval+2,f
  9941  0A5A  0CFA               	rrf	___fttol@lval+1,f
  9942  0A5B  0CF9               	rrf	___fttol@lval,f
  9943  0A5C  0B89               	decfsz	9,f
  9944  0A5D  2A58               	goto	u3085
  9945  0A5E  3001               	movlw	1
  9946  0A5F  00F4               	movwf	??___fttol
  9947  0A60  0874               	movf	??___fttol,w
  9948  0A61  07FD               	addwf	___fttol@exp1,f
  9949  0A62  1903               	btfsc	3,2
  9950  0A63  2A7E               	goto	l2845
  9951  0A64  2A57               	goto	l2835
  9952  0A65                     l2837:	
  9953  0A65  3018               	movlw	24
  9954  0A66  027D               	subwf	___fttol@exp1,w
  9955  0A67  1C03               	skipc
  9956  0A68  2A7B               	goto	l653
  9957  0A69  3000               	movlw	0
  9958  0A6A  00F3               	movwf	?___fttol+3
  9959  0A6B  3000               	movlw	0
  9960  0A6C  00F2               	movwf	?___fttol+2
  9961  0A6D  3000               	movlw	0
  9962  0A6E  00F1               	movwf	?___fttol+1
  9963  0A6F  3000               	movlw	0
  9964  0A70  00F0               	movwf	?___fttol
  9965  0A71  0008               	return
  9966  0A72                     l2843:	
  9967  0A72  3001               	movlw	1
  9968  0A73                     u3115:	
  9969  0A73  35F9               	lslf	___fttol@lval,f
  9970  0A74  0DFA               	rlf	___fttol@lval+1,f
  9971  0A75  0DFB               	rlf	___fttol@lval+2,f
  9972  0A76  0DFC               	rlf	___fttol@lval+3,f
  9973  0A77  0B89               	decfsz	9,f
  9974  0A78  2A73               	goto	u3115
  9975  0A79  3001               	movlw	1
  9976  0A7A  02FD               	subwf	___fttol@exp1,f
  9977  0A7B                     l653:	
  9978  0A7B  087D               	movf	___fttol@exp1,w
  9979  0A7C  1D03               	btfss	3,2
  9980  0A7D  2A72               	goto	l2843
  9981  0A7E                     l2845:	
  9982  0A7E  0878               	movf	___fttol@sign1,w
  9983  0A7F  1903               	btfsc	3,2
  9984  0A80  2A8C               	goto	l2849
  9985  0A81  09F9               	comf	___fttol@lval,f
  9986  0A82  09FA               	comf	___fttol@lval+1,f
  9987  0A83  09FB               	comf	___fttol@lval+2,f
  9988  0A84  09FC               	comf	___fttol@lval+3,f
  9989  0A85  0AF9               	incf	___fttol@lval,f
  9990  0A86  1903               	skipnz
  9991  0A87  0AFA               	incf	___fttol@lval+1,f
  9992  0A88  1903               	skipnz
  9993  0A89  0AFB               	incf	___fttol@lval+2,f
  9994  0A8A  1903               	skipnz
  9995  0A8B  0AFC               	incf	___fttol@lval+3,f
  9996  0A8C                     l2849:	
  9997  0A8C  087C               	movf	___fttol@lval+3,w
  9998  0A8D  00F3               	movwf	?___fttol+3
  9999  0A8E  087B               	movf	___fttol@lval+2,w
 10000  0A8F  00F2               	movwf	?___fttol+2
 10001  0A90  087A               	movf	___fttol@lval+1,w
 10002  0A91  00F1               	movwf	?___fttol+1
 10003  0A92  0879               	movf	___fttol@lval,w
 10004  0A93  00F0               	movwf	?___fttol
 10005  0A94  0008               	return
 10006  0A95                     __end_of___fttol:	
 10007                           
 10008                           	psect	text18
 10009  17BE                     __ptext18:	
 10010 ;; *************** function _SYSTEM_Initialize *****************
 10011 ;; Defined at:
 10012 ;;		line 71 in file "system.c"
 10013 ;; Parameters:    Size  Location     Type
 10014 ;;		None
 10015 ;; Auto vars:     Size  Location     Type
 10016 ;;		None
 10017 ;; Return value:  Size  Location     Type
 10018 ;;                  1    wreg      void 
 10019 ;; Registers used:
 10020 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10021 ;; Tracked objects:
 10022 ;;		On entry : 0/0
 10023 ;;		On exit  : 0/0
 10024 ;;		Unchanged: 0/0
 10025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10028 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10029 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10030 ;;Total ram usage:        3 bytes
 10031 ;; Hardware stack levels used:    1
 10032 ;; Hardware stack levels required when called:    3
 10033 ;; This function calls:
 10034 ;;		_ADCC_Initialize
 10035 ;;		_InitCustomChars
 10036 ;;		_LCD_Clear
 10037 ;;		_LCD_Init
 10038 ;;		_OSCILLATOR_Initialize
 10039 ;;		_PIN_MANAGER_Initialize
 10040 ;;		_PWM6_Initialize
 10041 ;;		_TMR2_Initialize
 10042 ;; This function is called by:
 10043 ;;		_main
 10044 ;; This function uses a non-reentrant model
 10045 ;;
 10046                           
 10047                           
 10048                           ;psect for function _SYSTEM_Initialize
 10049  17BE                     _SYSTEM_Initialize:	
 10050                           
 10051                           ;system.c: 73: PIN_MANAGER_Initialize();
 10052                           
 10053                           ;incstack = 0
 10054                           ; Regs used in _SYSTEM_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10055  17BE  3196  26D3  3197   	fcall	_PIN_MANAGER_Initialize
 10056                           
 10057                           ;system.c: 74: OSCILLATOR_Initialize();
 10058  17C1  3195  2564  3197   	fcall	_OSCILLATOR_Initialize
 10059                           
 10060                           ;system.c: 75: FVRCON = 0x00;
 10061  17C4  0032               	movlb	18	; select bank18
 10062  17C5  018C               	clrf	12	;volatile
 10063                           
 10064                           ;system.c: 76: ADCC_Initialize();
 10065  17C6  3196  2624  3197   	fcall	_ADCC_Initialize
 10066                           
 10067                           ;system.c: 77: PWM6_Initialize();
 10068  17C9  3195  256D  3197   	fcall	_PWM6_Initialize
 10069                           
 10070                           ;system.c: 79: TMR2_Initialize();
 10071  17CC  3195  259C  3197   	fcall	_TMR2_Initialize
 10072                           
 10073                           ;system.c: 80: LCD_Init(0X00);
 10074  17CF  3000               	movlw	0
 10075  17D0  318A  2295  3197   	fcall	_LCD_Init
 10076                           
 10077                           ;system.c: 81: _delay((unsigned long)((200)*(32000000/4000.0)));
 10078  17D3  3009               	movlw	9
 10079  17D4  00FA               	movwf	??_SYSTEM_Initialize+2
 10080  17D5  301E               	movlw	30
 10081  17D6  00F9               	movwf	??_SYSTEM_Initialize+1
 10082  17D7  30EB               	movlw	235
 10083  17D8  00F8               	movwf	??_SYSTEM_Initialize
 10084  17D9                     u3817:	
 10085  17D9  0BF8               	decfsz	??_SYSTEM_Initialize,f
 10086  17DA  2FD9               	goto	u3817
 10087  17DB  0BF9               	decfsz	??_SYSTEM_Initialize+1,f
 10088  17DC  2FD9               	goto	u3817
 10089  17DD  0BFA               	decfsz	??_SYSTEM_Initialize+2,f
 10090  17DE  2FD9               	goto	u3817
 10091  17DF  0000               	nop
 10092                           
 10093                           ;system.c: 82: LCD_Clear();
 10094  17E0  3195  255C  3197   	fcall	_LCD_Clear
 10095                           
 10096                           ;system.c: 83: _delay((unsigned long)((100)*(32000000/4000.0)));
 10097  17E3  3005               	movlw	5
 10098  17E4  00FA               	movwf	??_SYSTEM_Initialize+2
 10099  17E5  300F               	movlw	15
 10100  17E6  00F9               	movwf	??_SYSTEM_Initialize+1
 10101  17E7  30F4               	movlw	244
 10102  17E8  00F8               	movwf	??_SYSTEM_Initialize
 10103  17E9                     u3827:	
 10104  17E9  0BF8               	decfsz	??_SYSTEM_Initialize,f
 10105  17EA  2FE9               	goto	u3827
 10106  17EB  0BF9               	decfsz	??_SYSTEM_Initialize+1,f
 10107  17EC  2FE9               	goto	u3827
 10108  17ED  0BFA               	decfsz	??_SYSTEM_Initialize+2,f
 10109  17EE  2FE9               	goto	u3827
 10110                           
 10111                           ;system.c: 84: InitCustomChars();
 10112  17EF  3196  2679  3197   	fcall	_InitCustomChars
 10113                           
 10114                           ;system.c: 85: _delay((unsigned long)((200)*(32000000/4000.0)));
 10115  17F2  3009               	movlw	9
 10116  17F3  00FA               	movwf	??_SYSTEM_Initialize+2
 10117  17F4  301E               	movlw	30
 10118  17F5  00F9               	movwf	??_SYSTEM_Initialize+1
 10119  17F6  30EB               	movlw	235
 10120  17F7  00F8               	movwf	??_SYSTEM_Initialize
 10121  17F8                     u3837:	
 10122  17F8  0BF8               	decfsz	??_SYSTEM_Initialize,f
 10123  17F9  2FF8               	goto	u3837
 10124  17FA  0BF9               	decfsz	??_SYSTEM_Initialize+1,f
 10125  17FB  2FF8               	goto	u3837
 10126  17FC  0BFA               	decfsz	??_SYSTEM_Initialize+2,f
 10127  17FD  2FF8               	goto	u3837
 10128  17FE  0000               	nop
 10129  17FF  0008               	return
 10130  1800                     __end_of_SYSTEM_Initialize:	
 10131                           
 10132                           	psect	text19
 10133  159C                     __ptext19:	
 10134 ;; *************** function _TMR2_Initialize *****************
 10135 ;; Defined at:
 10136 ;;		line 3 in file "tmr2.c"
 10137 ;; Parameters:    Size  Location     Type
 10138 ;;		None
 10139 ;; Auto vars:     Size  Location     Type
 10140 ;;		None
 10141 ;; Return value:  Size  Location     Type
 10142 ;;                  1    wreg      void 
 10143 ;; Registers used:
 10144 ;;		wreg, status,2
 10145 ;; Tracked objects:
 10146 ;;		On entry : 0/0
 10147 ;;		On exit  : 0/0
 10148 ;;		Unchanged: 0/0
 10149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10153 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10154 ;;Total ram usage:        0 bytes
 10155 ;; Hardware stack levels used:    1
 10156 ;; This function calls:
 10157 ;;		Nothing
 10158 ;; This function is called by:
 10159 ;;		_SYSTEM_Initialize
 10160 ;; This function uses a non-reentrant model
 10161 ;;
 10162                           
 10163                           
 10164                           ;psect for function _TMR2_Initialize
 10165  159C                     _TMR2_Initialize:	
 10166                           
 10167                           ;tmr2.c: 5: T2CON = 0x00;
 10168                           
 10169                           ;incstack = 0
 10170                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 10171  159C  0025               	movlb	5	; select bank5
 10172  159D  018E               	clrf	14	;volatile
 10173                           
 10174                           ;tmr2.c: 7: T2CLKCON = 0x01;
 10175  159E  3001               	movlw	1
 10176  159F  0090               	movwf	16	;volatile
 10177                           
 10178                           ;tmr2.c: 9: T2HLT = 0x00;
 10179  15A0  018F               	clrf	15	;volatile
 10180                           
 10181                           ;tmr2.c: 11: T2RST = 0x00;
 10182  15A1  0191               	clrf	17	;volatile
 10183                           
 10184                           ;tmr2.c: 13: T2PR = 0xFF;
 10185  15A2  30FF               	movlw	255
 10186  15A3  008D               	movwf	13	;volatile
 10187                           
 10188                           ;tmr2.c: 15: T2TMR = 0x00;
 10189  15A4  018C               	clrf	12	;volatile
 10190                           
 10191                           ;tmr2.c: 17: PIR4bits.TMR2IF = 0;
 10192  15A5  002E               	movlb	14	; select bank14
 10193  15A6  1090               	bcf	16,1	;volatile
 10194                           
 10195                           ;tmr2.c: 19: T2CONbits.TMR2ON = 1;
 10196  15A7  0025               	movlb	5	; select bank5
 10197  15A8  178E               	bsf	14,7	;volatile
 10198  15A9  0008               	return
 10199  15AA                     __end_of_TMR2_Initialize:	
 10200                           
 10201                           	psect	text20
 10202  156D                     __ptext20:	
 10203 ;; *************** function _PWM6_Initialize *****************
 10204 ;; Defined at:
 10205 ;;		line 3 in file "pwm6.c"
 10206 ;; Parameters:    Size  Location     Type
 10207 ;;		None
 10208 ;; Auto vars:     Size  Location     Type
 10209 ;;		None
 10210 ;; Return value:  Size  Location     Type
 10211 ;;                  1    wreg      void 
 10212 ;; Registers used:
 10213 ;;		wreg, status,2, status,0
 10214 ;; Tracked objects:
 10215 ;;		On entry : 0/0
 10216 ;;		On exit  : 0/0
 10217 ;;		Unchanged: 0/0
 10218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10222 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10223 ;;Total ram usage:        0 bytes
 10224 ;; Hardware stack levels used:    1
 10225 ;; This function calls:
 10226 ;;		Nothing
 10227 ;; This function is called by:
 10228 ;;		_SYSTEM_Initialize
 10229 ;; This function uses a non-reentrant model
 10230 ;;
 10231                           
 10232                           
 10233                           ;psect for function _PWM6_Initialize
 10234  156D                     _PWM6_Initialize:	
 10235                           
 10236                           ;pwm6.c: 5: PWM6CON = 0x80;
 10237                           
 10238                           ;incstack = 0
 10239                           ; Regs used in _PWM6_Initialize: [wreg+status,2+status,0]
 10240  156D  3080               	movlw	128
 10241  156E  0027               	movlb	7	; select bank7
 10242  156F  008E               	movwf	14	;volatile
 10243                           
 10244                           ;pwm6.c: 7: PWM6DCH = 0x00;
 10245  1570  018D               	clrf	13	;volatile
 10246                           
 10247                           ;pwm6.c: 9: PWM6DCL = 0x00;
 10248  1571  018C               	clrf	12	;volatile
 10249                           
 10250                           ;pwm6.c: 11: CCPTMRS1bits.P6TSEL = 0x1;
 10251  1572  0024               	movlb	4	; select bank4
 10252  1573  081F               	movf	31,w	;volatile
 10253  1574  39F3               	andlw	-13
 10254  1575  3804               	iorlw	4
 10255  1576  009F               	movwf	31	;volatile
 10256  1577  0008               	return
 10257  1578                     __end_of_PWM6_Initialize:	
 10258                           
 10259                           	psect	text21
 10260  16D3                     __ptext21:	
 10261 ;; *************** function _PIN_MANAGER_Initialize *****************
 10262 ;; Defined at:
 10263 ;;		line 5 in file "pin_manager.c"
 10264 ;; Parameters:    Size  Location     Type
 10265 ;;		None
 10266 ;; Auto vars:     Size  Location     Type
 10267 ;;  state           1    0[COMMON] unsigned char 
 10268 ;; Return value:  Size  Location     Type
 10269 ;;                  1    wreg      void 
 10270 ;; Registers used:
 10271 ;;		wreg, status,2
 10272 ;; Tracked objects:
 10273 ;;		On entry : 0/0
 10274 ;;		On exit  : 0/0
 10275 ;;		Unchanged: 0/0
 10276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10278 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10280 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10281 ;;Total ram usage:        1 bytes
 10282 ;; Hardware stack levels used:    1
 10283 ;; This function calls:
 10284 ;;		Nothing
 10285 ;; This function is called by:
 10286 ;;		_SYSTEM_Initialize
 10287 ;; This function uses a non-reentrant model
 10288 ;;
 10289                           
 10290                           
 10291                           ;psect for function _PIN_MANAGER_Initialize
 10292  16D3                     _PIN_MANAGER_Initialize:	
 10293                           
 10294                           ;pin_manager.c: 7: LATA = 0x00;
 10295                           
 10296                           ;incstack = 0
 10297                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 10298  16D3  0020               	movlb	0	; select bank0
 10299  16D4  0196               	clrf	22	;volatile
 10300                           
 10301                           ;pin_manager.c: 8: LATB = 0x00;
 10302  16D5  0197               	clrf	23	;volatile
 10303                           
 10304                           ;pin_manager.c: 9: LATC = 0x00;
 10305  16D6  0198               	clrf	24	;volatile
 10306                           
 10307                           ;pin_manager.c: 11: WPUA = 0x02;
 10308  16D7  3002               	movlw	2
 10309  16D8  003E               	movlb	30	; select bank30
 10310  16D9  00B9               	movwf	57	;volatile
 10311                           
 10312                           ;pin_manager.c: 12: WPUB = 0x00;
 10313  16DA  01C4               	clrf	68	;volatile
 10314                           
 10315                           ;pin_manager.c: 13: WPUC = 0x00;
 10316  16DB  01CF               	clrf	79	;volatile
 10317                           
 10318                           ;pin_manager.c: 14: WPUE = 0x8;
 10319  16DC  3008               	movlw	8
 10320  16DD  00E5               	movwf	101	;volatile
 10321                           
 10322                           ;pin_manager.c: 16: TRISA = 0x02;
 10323  16DE  3002               	movlw	2
 10324  16DF  0020               	movlb	0	; select bank0
 10325  16E0  0091               	movwf	17	;volatile
 10326                           
 10327                           ;pin_manager.c: 17: TRISA = 0x3A;
 10328  16E1  303A               	movlw	58
 10329  16E2  0091               	movwf	17	;volatile
 10330                           
 10331                           ;pin_manager.c: 18: TRISB = 0x0A;
 10332  16E3  300A               	movlw	10
 10333  16E4  0092               	movwf	18	;volatile
 10334                           
 10335                           ;pin_manager.c: 19: TRISC = 0x10;
 10336  16E5  3010               	movlw	16
 10337  16E6  0093               	movwf	19	;volatile
 10338                           
 10339                           ;pin_manager.c: 21: ANSELA = 0x3A;
 10340  16E7  303A               	movlw	58
 10341  16E8  003E               	movlb	30	; select bank30
 10342  16E9  00B8               	movwf	56	;volatile
 10343                           
 10344                           ;pin_manager.c: 22: ANSELB = 0x0A;
 10345  16EA  300A               	movlw	10
 10346  16EB  00C3               	movwf	67	;volatile
 10347                           
 10348                           ;pin_manager.c: 23: ANSELC = 0x00;
 10349  16EC  01CE               	clrf	78	;volatile
 10350                           
 10351                           ;pin_manager.c: 25: PIE0bits.IOCIE = 0;
 10352  16ED  002E               	movlb	14	; select bank14
 10353  16EE  1216               	bcf	22,4	;volatile
 10354                           
 10355                           ;pin_manager.c: 26: bool state = GIE;
 10356  16EF  3000               	movlw	0
 10357  16F0  1B8B               	btfsc	11,7	;volatile
 10358  16F1  3001               	movlw	1
 10359  16F2  00F0               	movwf	PIN_MANAGER_Initialize@state
 10360                           
 10361                           ;pin_manager.c: 27: GIE = 0;
 10362  16F3  138B               	bcf	11,7	;volatile
 10363                           
 10364                           ;pin_manager.c: 28: PPSLOCK = 0x55;
 10365  16F4  3055               	movlw	85
 10366  16F5  003D               	movlb	29	; select bank29
 10367  16F6  008F               	movwf	15	;volatile
 10368                           
 10369                           ;pin_manager.c: 29: PPSLOCK = 0xAA;
 10370  16F7  30AA               	movlw	170
 10371  16F8  008F               	movwf	15	;volatile
 10372                           
 10373                           ;pin_manager.c: 30: PPSLOCKbits.PPSLOCKED = 0x00;
 10374  16F9  100F               	bcf	15,0	;volatile
 10375                           
 10376                           ;pin_manager.c: 33: RC2PPS = 0x000E;
 10377  16FA  300E               	movlw	14
 10378  16FB  003E               	movlb	30	; select bank30
 10379  16FC  00A2               	movwf	34	;volatile
 10380                           
 10381                           ;pin_manager.c: 37: PPSLOCK = 0x55;
 10382  16FD  3055               	movlw	85
 10383  16FE  003D               	movlb	29	; select bank29
 10384  16FF  008F               	movwf	15	;volatile
 10385                           
 10386                           ;pin_manager.c: 38: PPSLOCK = 0xAA;
 10387  1700  30AA               	movlw	170
 10388  1701  008F               	movwf	15	;volatile
 10389                           
 10390                           ;pin_manager.c: 39: PPSLOCKbits.PPSLOCKED = 0x01;
 10391  1702  140F               	bsf	15,0	;volatile
 10392                           
 10393                           ;pin_manager.c: 40: GIE = state;
 10394  1703  1C70               	btfss	PIN_MANAGER_Initialize@state,0
 10395  1704  2F07               	goto	u2400
 10396  1705  178B               	bsf	11,7	;volatile
 10397  1706  0008               	return
 10398  1707                     u2400:	
 10399  1707  138B               	bcf	11,7	;volatile
 10400  1708  0008               	return
 10401  1709                     __end_of_PIN_MANAGER_Initialize:	
 10402                           
 10403                           	psect	text22
 10404  1564                     __ptext22:	
 10405 ;; *************** function _OSCILLATOR_Initialize *****************
 10406 ;; Defined at:
 10407 ;;		line 89 in file "system.c"
 10408 ;; Parameters:    Size  Location     Type
 10409 ;;		None
 10410 ;; Auto vars:     Size  Location     Type
 10411 ;;		None
 10412 ;; Return value:  Size  Location     Type
 10413 ;;                  1    wreg      void 
 10414 ;; Registers used:
 10415 ;;		wreg, status,2
 10416 ;; Tracked objects:
 10417 ;;		On entry : 0/0
 10418 ;;		On exit  : 0/0
 10419 ;;		Unchanged: 0/0
 10420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10424 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10425 ;;Total ram usage:        0 bytes
 10426 ;; Hardware stack levels used:    1
 10427 ;; This function calls:
 10428 ;;		Nothing
 10429 ;; This function is called by:
 10430 ;;		_SYSTEM_Initialize
 10431 ;; This function uses a non-reentrant model
 10432 ;;
 10433                           
 10434                           
 10435                           ;psect for function _OSCILLATOR_Initialize
 10436  1564                     _OSCILLATOR_Initialize:	
 10437                           
 10438                           ;system.c: 91: OSCCON1 = 0x60;
 10439                           
 10440                           ;incstack = 0
 10441                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 10442  1564  3060               	movlw	96
 10443  1565  0031               	movlb	17	; select bank17
 10444  1566  008D               	movwf	13	;volatile
 10445                           
 10446                           ;system.c: 92: OSCCON3 = 0x00;
 10447  1567  018F               	clrf	15	;volatile
 10448                           
 10449                           ;system.c: 93: OSCEN = 0x00;
 10450  1568  0191               	clrf	17	;volatile
 10451                           
 10452                           ;system.c: 94: OSCFRQ = 0x06;
 10453  1569  3006               	movlw	6
 10454  156A  0093               	movwf	19	;volatile
 10455                           
 10456                           ;system.c: 95: OSCTUNE = 0x00;
 10457  156B  0192               	clrf	18	;volatile
 10458  156C  0008               	return
 10459  156D                     __end_of_OSCILLATOR_Initialize:	
 10460                           
 10461                           	psect	text23
 10462  0A95                     __ptext23:	
 10463 ;; *************** function _LCD_Init *****************
 10464 ;; Defined at:
 10465 ;;		line 154 in file "lcd.c"
 10466 ;; Parameters:    Size  Location     Type
 10467 ;;  style           1    wreg     unsigned char 
 10468 ;; Auto vars:     Size  Location     Type
 10469 ;;  style           1    7[COMMON] unsigned char 
 10470 ;; Return value:  Size  Location     Type
 10471 ;;                  1    wreg      void 
 10472 ;; Registers used:
 10473 ;;		wreg, status,2, status,0, pclath, cstack
 10474 ;; Tracked objects:
 10475 ;;		On entry : 0/0
 10476 ;;		On exit  : 0/0
 10477 ;;		Unchanged: 0/0
 10478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10480 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10481 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10482 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10483 ;;Total ram usage:        4 bytes
 10484 ;; Hardware stack levels used:    1
 10485 ;; Hardware stack levels required when called:    2
 10486 ;; This function calls:
 10487 ;;		_LCD_Cmd
 10488 ;;		_LCD_Port
 10489 ;; This function is called by:
 10490 ;;		_SYSTEM_Initialize
 10491 ;; This function uses a non-reentrant model
 10492 ;;
 10493                           
 10494                           
 10495                           ;psect for function _LCD_Init
 10496  0A95                     _LCD_Init:	
 10497                           
 10498                           ;incstack = 0
 10499                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
 10500                           ;LCD_Init@style stored from wreg
 10501  0A95  00F7               	movwf	LCD_Init@style
 10502                           
 10503                           ;lcd.c: 156: LCD_Port(0x00);
 10504  0A96  3000               	movlw	0
 10505  0A97  3195  25F2  318A   	fcall	_LCD_Port
 10506                           
 10507                           ;lcd.c: 158: _delay((unsigned long)((100)*(32000000/4000.0)));
 10508  0A9A  3005               	movlw	5
 10509  0A9B  00F6               	movwf	??_LCD_Init+2
 10510  0A9C  300F               	movlw	15
 10511  0A9D  00F5               	movwf	??_LCD_Init+1
 10512  0A9E  30F4               	movlw	244
 10513  0A9F  00F4               	movwf	??_LCD_Init
 10514  0AA0                     u3847:	
 10515  0AA0  0BF4               	decfsz	??_LCD_Init,f
 10516  0AA1  2AA0               	goto	u3847
 10517  0AA2  0BF5               	decfsz	??_LCD_Init+1,f
 10518  0AA3  2AA0               	goto	u3847
 10519  0AA4  0BF6               	decfsz	??_LCD_Init+2,f
 10520  0AA5  2AA0               	goto	u3847
 10521                           
 10522                           ;lcd.c: 160: LCD_Cmd(0x03);
 10523  0AA6  3003               	movlw	3
 10524  0AA7  3195  25C8  318A   	fcall	_LCD_Cmd
 10525                           
 10526                           ;lcd.c: 162: _delay((unsigned long)((10)*(32000000/4000.0)));
 10527  0AAA  3068               	movlw	104
 10528  0AAB  00F5               	movwf	??_LCD_Init+1
 10529  0AAC  30E4               	movlw	228
 10530  0AAD  00F4               	movwf	??_LCD_Init
 10531  0AAE                     u3857:	
 10532  0AAE  0BF4               	decfsz	??_LCD_Init,f
 10533  0AAF  2AAE               	goto	u3857
 10534  0AB0  0BF5               	decfsz	??_LCD_Init+1,f
 10535  0AB1  2AAE               	goto	u3857
 10536  0AB2  0000               	nop
 10537                           
 10538                           ;lcd.c: 164: LCD_Cmd(0x03);
 10539  0AB3  3003               	movlw	3
 10540  0AB4  3195  25C8  318A   	fcall	_LCD_Cmd
 10541                           
 10542                           ;lcd.c: 166: _delay((unsigned long)((120)*(32000000/4000000.0)));
 10543  0AB7  3089               	movlw	137
 10544  0AB8  00F4               	movwf	??_LCD_Init
 10545  0AB9                     u3867:	
 10546  0AB9  3200               	nop2
 10547  0ABA  3200               	nop2
 10548  0ABB  0BF4               	decfsz	??_LCD_Init,f
 10549  0ABC  2AB9               	goto	u3867
 10550                           
 10551                           ;lcd.c: 168: LCD_Cmd(0x03);
 10552  0ABD  3003               	movlw	3
 10553  0ABE  3195  25C8  318A   	fcall	_LCD_Cmd
 10554                           
 10555                           ;lcd.c: 170: _delay((unsigned long)((120)*(32000000/4000000.0)));
 10556  0AC1  3089               	movlw	137
 10557  0AC2  00F4               	movwf	??_LCD_Init
 10558  0AC3                     u3877:	
 10559  0AC3  3200               	nop2
 10560  0AC4  3200               	nop2
 10561  0AC5  0BF4               	decfsz	??_LCD_Init,f
 10562  0AC6  2AC3               	goto	u3877
 10563                           
 10564                           ;lcd.c: 172: LCD_Cmd(0x02);
 10565  0AC7  3002               	movlw	2
 10566  0AC8  3195  25C8  318A   	fcall	_LCD_Cmd
 10567                           
 10568                           ;lcd.c: 174: _delay((unsigned long)((120)*(32000000/4000000.0)));
 10569  0ACB  3089               	movlw	137
 10570  0ACC  00F4               	movwf	??_LCD_Init
 10571  0ACD                     u3887:	
 10572  0ACD  3200               	nop2
 10573  0ACE  3200               	nop2
 10574  0ACF  0BF4               	decfsz	??_LCD_Init,f
 10575  0AD0  2ACD               	goto	u3887
 10576                           
 10577                           ;lcd.c: 176: LCD_Cmd(0x2);
 10578  0AD1  3002               	movlw	2
 10579  0AD2  3195  25C8  318A   	fcall	_LCD_Cmd
 10580                           
 10581                           ;lcd.c: 178: LCD_Cmd(0x8);
 10582  0AD5  3008               	movlw	8
 10583  0AD6  3195  25C8  318A   	fcall	_LCD_Cmd
 10584                           
 10585                           ;lcd.c: 180: _delay((unsigned long)((120)*(32000000/4000000.0)));
 10586  0AD9  3089               	movlw	137
 10587  0ADA  00F4               	movwf	??_LCD_Init
 10588  0ADB                     u3897:	
 10589  0ADB  3200               	nop2
 10590  0ADC  3200               	nop2
 10591  0ADD  0BF4               	decfsz	??_LCD_Init,f
 10592  0ADE  2ADB               	goto	u3897
 10593                           
 10594                           ;lcd.c: 182: LCD_Cmd(0x0);
 10595  0ADF  3000               	movlw	0
 10596  0AE0  3195  25C8  318A   	fcall	_LCD_Cmd
 10597                           
 10598                           ;lcd.c: 184: LCD_Cmd(0x8);
 10599  0AE3  3008               	movlw	8
 10600  0AE4  3195  25C8  318A   	fcall	_LCD_Cmd
 10601                           
 10602                           ;lcd.c: 186: _delay((unsigned long)((120)*(32000000/4000000.0)));
 10603  0AE7  3089               	movlw	137
 10604  0AE8  00F4               	movwf	??_LCD_Init
 10605  0AE9                     u3907:	
 10606  0AE9  3200               	nop2
 10607  0AEA  3200               	nop2
 10608  0AEB  0BF4               	decfsz	??_LCD_Init,f
 10609  0AEC  2AE9               	goto	u3907
 10610                           
 10611                           ;lcd.c: 188: LCD_Cmd(0x0);
 10612  0AED  3000               	movlw	0
 10613  0AEE  3195  25C8  318A   	fcall	_LCD_Cmd
 10614                           
 10615                           ;lcd.c: 190: LCD_Cmd(0x1);
 10616  0AF1  3001               	movlw	1
 10617  0AF2  3195  25C8  318A   	fcall	_LCD_Cmd
 10618                           
 10619                           ;lcd.c: 192: _delay((unsigned long)((5)*(32000000/4000.0)));
 10620  0AF5  3034               	movlw	52
 10621  0AF6  00F5               	movwf	??_LCD_Init+1
 10622  0AF7  30F1               	movlw	241
 10623  0AF8  00F4               	movwf	??_LCD_Init
 10624  0AF9                     u3917:	
 10625  0AF9  0BF4               	decfsz	??_LCD_Init,f
 10626  0AFA  2AF9               	goto	u3917
 10627  0AFB  0BF5               	decfsz	??_LCD_Init+1,f
 10628  0AFC  2AF9               	goto	u3917
 10629  0AFD  3200               	nop2
 10630                           
 10631                           ;lcd.c: 194: LCD_Cmd(0x0);
 10632  0AFE  3000               	movlw	0
 10633  0AFF  3195  25C8  318A   	fcall	_LCD_Cmd
 10634                           
 10635                           ;lcd.c: 196: LCD_Cmd(0x6);
 10636  0B02  3006               	movlw	6
 10637  0B03  3195  25C8  318A   	fcall	_LCD_Cmd
 10638                           
 10639                           ;lcd.c: 198: _delay((unsigned long)((120)*(32000000/4000000.0)));
 10640  0B06  3089               	movlw	137
 10641  0B07  00F4               	movwf	??_LCD_Init
 10642  0B08                     u3927:	
 10643  0B08  3200               	nop2
 10644  0B09  3200               	nop2
 10645  0B0A  0BF4               	decfsz	??_LCD_Init,f
 10646  0B0B  2B08               	goto	u3927
 10647                           
 10648                           ;lcd.c: 200: LCD_Cmd(0x0);
 10649  0B0C  3000               	movlw	0
 10650  0B0D  3195  25C8  318A   	fcall	_LCD_Cmd
 10651                           
 10652                           ;lcd.c: 202: LCD_Cmd(0xc|style);
 10653  0B10  0877               	movf	LCD_Init@style,w
 10654  0B11  380C               	iorlw	12
 10655  0B12  3195  25C8  318A   	fcall	_LCD_Cmd
 10656                           
 10657                           ;lcd.c: 204: _delay((unsigned long)((120)*(32000000/4000000.0)));
 10658  0B15  3089               	movlw	137
 10659  0B16  00F4               	movwf	??_LCD_Init
 10660  0B17                     u3937:	
 10661  0B17  3200               	nop2
 10662  0B18  3200               	nop2
 10663  0B19  0BF4               	decfsz	??_LCD_Init,f
 10664  0B1A  2B17               	goto	u3937
 10665  0B1B  0008               	return
 10666  0B1C                     __end_of_LCD_Init:	
 10667                           
 10668                           	psect	text24
 10669  155C                     __ptext24:	
 10670 ;; *************** function _LCD_Clear *****************
 10671 ;; Defined at:
 10672 ;;		line 75 in file "lcd.c"
 10673 ;; Parameters:    Size  Location     Type
 10674 ;;		None
 10675 ;; Auto vars:     Size  Location     Type
 10676 ;;		None
 10677 ;; Return value:  Size  Location     Type
 10678 ;;                  1    wreg      void 
 10679 ;; Registers used:
 10680 ;;		wreg, status,2, status,0, pclath, cstack
 10681 ;; Tracked objects:
 10682 ;;		On entry : 0/0
 10683 ;;		On exit  : 0/0
 10684 ;;		Unchanged: 0/0
 10685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10689 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10690 ;;Total ram usage:        0 bytes
 10691 ;; Hardware stack levels used:    1
 10692 ;; Hardware stack levels required when called:    2
 10693 ;; This function calls:
 10694 ;;		_LCD_Cmd
 10695 ;; This function is called by:
 10696 ;;		_SYSTEM_Initialize
 10697 ;;		_main
 10698 ;; This function uses a non-reentrant model
 10699 ;;
 10700                           
 10701                           
 10702                           ;psect for function _LCD_Clear
 10703  155C                     _LCD_Clear:	
 10704                           
 10705                           ;lcd.c: 77: LCD_Cmd(0);
 10706                           
 10707                           ;incstack = 0
 10708                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
 10709  155C  3000               	movlw	0
 10710  155D  3195  25C8  3195   	fcall	_LCD_Cmd
 10711                           
 10712                           ;lcd.c: 78: LCD_Cmd(1);
 10713  1560  3001               	movlw	1
 10714  1561  3195  25C8         	fcall	_LCD_Cmd
 10715  1563  0008               	return
 10716  1564                     __end_of_LCD_Clear:	
 10717                           
 10718                           	psect	text25
 10719  1679                     __ptext25:	
 10720 ;; *************** function _InitCustomChars *****************
 10721 ;; Defined at:
 10722 ;;		line 29 in file "lcd.c"
 10723 ;; Parameters:    Size  Location     Type
 10724 ;;		None
 10725 ;; Auto vars:     Size  Location     Type
 10726 ;;  i               1    6[COMMON] unsigned char 
 10727 ;; Return value:  Size  Location     Type
 10728 ;;                  1    wreg      void 
 10729 ;; Registers used:
 10730 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10731 ;; Tracked objects:
 10732 ;;		On entry : 0/0
 10733 ;;		On exit  : 0/0
 10734 ;;		Unchanged: 0/0
 10735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10737 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10738 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10739 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10740 ;;Total ram usage:        2 bytes
 10741 ;; Hardware stack levels used:    1
 10742 ;; Hardware stack levels required when called:    2
 10743 ;; This function calls:
 10744 ;;		_LCD_Cmd
 10745 ;;		_LCD_Write_Char
 10746 ;; This function is called by:
 10747 ;;		_SYSTEM_Initialize
 10748 ;; This function uses a non-reentrant model
 10749 ;;
 10750                           
 10751                           
 10752                           ;psect for function _InitCustomChars
 10753  1679                     _InitCustomChars:	
 10754                           
 10755                           ;lcd.c: 31: uint8_t i;
 10756                           ;lcd.c: 32: LCD_Cmd(0x04);
 10757                           
 10758                           ;incstack = 0
 10759                           ; Regs used in _InitCustomChars: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10760  1679  3004               	movlw	4
 10761  167A  3195  25C8  3196   	fcall	_LCD_Cmd
 10762                           
 10763                           ;lcd.c: 33: LCD_Cmd(0x00);
 10764  167D  3000               	movlw	0
 10765  167E  3195  25C8  3196   	fcall	_LCD_Cmd
 10766                           
 10767                           ;lcd.c: 34: for (i = 0; i < sizeof(__cgram) ; i++)
 10768  1681  01F6               	clrf	InitCustomChars@i
 10769  1682  3010               	movlw	16
 10770  1683  0276               	subwf	InitCustomChars@i,w
 10771  1684  1803               	btfsc	3,0
 10772  1685  2E97               	goto	l2375
 10773  1686                     l2369:	
 10774                           
 10775                           ;lcd.c: 35: LCD_Write_Char(__cgram[i]);
 10776  1686  0876               	movf	InitCustomChars@i,w
 10777  1687  3E20               	addlw	(low (___cgram| (0+256)))& (0+255)
 10778  1688  0086               	movwf	6
 10779  1689  3001               	movlw	1	; select bank2/3
 10780  168A  0087               	movwf	7
 10781  168B  0801               	movf	1,w
 10782  168C  3188  2007  3196   	fcall	_LCD_Write_Char
 10783  168F  3001               	movlw	1
 10784  1690  00F5               	movwf	??_InitCustomChars
 10785  1691  0875               	movf	??_InitCustomChars,w
 10786  1692  07F6               	addwf	InitCustomChars@i,f
 10787  1693  3010               	movlw	16
 10788  1694  0276               	subwf	InitCustomChars@i,w
 10789  1695  1C03               	skipc
 10790  1696  2E86               	goto	l2369
 10791  1697                     l2375:	
 10792                           
 10793                           ;lcd.c: 36: LCD_Cmd(0);
 10794  1697  3000               	movlw	0
 10795  1698  3195  25C8  3196   	fcall	_LCD_Cmd
 10796                           
 10797                           ;lcd.c: 37: LCD_Cmd(2);
 10798  169B  3002               	movlw	2
 10799  169C  3195  25C8         	fcall	_LCD_Cmd
 10800  169E  0008               	return
 10801  169F                     __end_of_InitCustomChars:	
 10802                           
 10803                           	psect	text26
 10804  1624                     __ptext26:	
 10805 ;; *************** function _ADCC_Initialize *****************
 10806 ;; Defined at:
 10807 ;;		line 16 in file "adcc.c"
 10808 ;; Parameters:    Size  Location     Type
 10809 ;;		None
 10810 ;; Auto vars:     Size  Location     Type
 10811 ;;		None
 10812 ;; Return value:  Size  Location     Type
 10813 ;;                  1    wreg      void 
 10814 ;; Registers used:
 10815 ;;		wreg, status,2
 10816 ;; Tracked objects:
 10817 ;;		On entry : 0/0
 10818 ;;		On exit  : 0/0
 10819 ;;		Unchanged: 0/0
 10820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10824 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10825 ;;Total ram usage:        0 bytes
 10826 ;; Hardware stack levels used:    1
 10827 ;; This function calls:
 10828 ;;		Nothing
 10829 ;; This function is called by:
 10830 ;;		_SYSTEM_Initialize
 10831 ;; This function uses a non-reentrant model
 10832 ;;
 10833                           
 10834                           
 10835                           ;psect for function _ADCC_Initialize
 10836  1624                     _ADCC_Initialize:	
 10837                           
 10838                           ;adcc.c: 19: ADCON1 = 0x00;
 10839                           
 10840                           ;incstack = 0
 10841                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
 10842  1624  0021               	movlb	1	; select bank1
 10843  1625  0194               	clrf	20	;volatile
 10844                           
 10845                           ;adcc.c: 21: ADCON2 = 0x00;
 10846  1626  0195               	clrf	21	;volatile
 10847                           
 10848                           ;adcc.c: 23: ADCON3 = 0x00;
 10849  1627  0196               	clrf	22	;volatile
 10850                           
 10851                           ;adcc.c: 25: ADACT = 0x00;
 10852  1628  0199               	clrf	25	;volatile
 10853                           
 10854                           ;adcc.c: 27: ADSTAT = 0x00;
 10855  1629  0197               	clrf	23	;volatile
 10856                           
 10857                           ;adcc.c: 29: ADCLK = 0x3F;
 10858  162A  303F               	movlw	63
 10859  162B  0098               	movwf	24	;volatile
 10860                           
 10861                           ;adcc.c: 33: ADREF = 0x00;
 10862  162C  019A               	clrf	26	;volatile
 10863                           
 10864                           ;adcc.c: 35: ADCAP = 0x00;
 10865  162D  019B               	clrf	27	;volatile
 10866                           
 10867                           ;adcc.c: 38: ADPRE = 0x07;
 10868  162E  3007               	movlw	7
 10869  162F  009C               	movwf	28	;volatile
 10870                           
 10871                           ;adcc.c: 40: ADACQ = 0x00;
 10872  1630  019D               	clrf	29	;volatile
 10873                           
 10874                           ;adcc.c: 42: ADPCH = 0x00;
 10875  1631  019E               	clrf	30	;volatile
 10876                           
 10877                           ;adcc.c: 44: ADRPT = 0x00;
 10878  1632  0022               	movlb	2	; select bank2
 10879  1633  018D               	clrf	13	;volatile
 10880                           
 10881                           ;adcc.c: 46: ADLTHL = 0x00;
 10882  1634  018E               	clrf	14	;volatile
 10883                           
 10884                           ;adcc.c: 48: ADLTHH = 0x00;
 10885  1635  018F               	clrf	15	;volatile
 10886                           
 10887                           ;adcc.c: 50: ADUTHL = 0x00;
 10888  1636  0190               	clrf	16	;volatile
 10889                           
 10890                           ;adcc.c: 52: ADUTHH = 0x00;
 10891  1637  0191               	clrf	17	;volatile
 10892                           
 10893                           ;adcc.c: 54: ADSTPTL = 0x00;
 10894  1638  0192               	clrf	18	;volatile
 10895                           
 10896                           ;adcc.c: 56: ADSTPTH = 0x00;
 10897  1639  0193               	clrf	19	;volatile
 10898                           
 10899                           ;adcc.c: 59: ADCON0 = 0x84;
 10900  163A  3084               	movlw	132
 10901  163B  0021               	movlb	1	; select bank1
 10902  163C  0093               	movwf	19	;volatile
 10903  163D  0008               	return
 10904  163E                     __end_of_ADCC_Initialize:	
 10905                           
 10906                           	psect	text27
 10907  15DC                     __ptext27:	
 10908 ;; *************** function _PWM6_LoadDutyValue *****************
 10909 ;; Defined at:
 10910 ;;		line 14 in file "pwm6.c"
 10911 ;; Parameters:    Size  Location     Type
 10912 ;;  dutyCycle       2    0[COMMON] unsigned int 
 10913 ;; Auto vars:     Size  Location     Type
 10914 ;;		None
 10915 ;; Return value:  Size  Location     Type
 10916 ;;                  1    wreg      void 
 10917 ;; Registers used:
 10918 ;;		wreg, status,2, status,0
 10919 ;; Tracked objects:
 10920 ;;		On entry : 0/0
 10921 ;;		On exit  : 0/0
 10922 ;;		Unchanged: 0/0
 10923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10924 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10926 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10927 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10928 ;;Total ram usage:        4 bytes
 10929 ;; Hardware stack levels used:    1
 10930 ;; This function calls:
 10931 ;;		Nothing
 10932 ;; This function is called by:
 10933 ;;		_main
 10934 ;; This function uses a non-reentrant model
 10935 ;;
 10936                           
 10937                           
 10938                           ;psect for function _PWM6_LoadDutyValue
 10939  15DC                     _PWM6_LoadDutyValue:	
 10940                           
 10941                           ;pwm6.c: 16: PWM6DCH = (dutyCycle & 0x03FC)>>2;
 10942                           
 10943                           ;incstack = 0
 10944                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
 10945  15DC  0871               	movf	PWM6_LoadDutyValue@dutyCycle+1,w
 10946  15DD  00F3               	movwf	??_PWM6_LoadDutyValue+1
 10947  15DE  0870               	movf	PWM6_LoadDutyValue@dutyCycle,w
 10948  15DF  00F2               	movwf	??_PWM6_LoadDutyValue
 10949  15E0  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
 10950  15E1  0CF2               	rrf	??_PWM6_LoadDutyValue,f
 10951  15E2  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
 10952  15E3  0CF2               	rrf	??_PWM6_LoadDutyValue,f
 10953  15E4  0872               	movf	??_PWM6_LoadDutyValue,w
 10954  15E5  0027               	movlb	7	; select bank7
 10955  15E6  008D               	movwf	13	;volatile
 10956                           
 10957                           ;pwm6.c: 18: PWM6DCL = (dutyCycle & 0x0003)<<6;
 10958  15E7  0870               	movf	PWM6_LoadDutyValue@dutyCycle,w
 10959  15E8  3903               	andlw	3
 10960  15E9  00F2               	movwf	??_PWM6_LoadDutyValue
 10961  15EA  3005               	movlw	5
 10962  15EB                     u3035:	
 10963  15EB  35F2               	lslf	??_PWM6_LoadDutyValue,f
 10964  15EC  3EFF               	addlw	-1
 10965  15ED  1D03               	skipz
 10966  15EE  2DEB               	goto	u3035
 10967  15EF  3572               	lslf	??_PWM6_LoadDutyValue,w
 10968  15F0  008C               	movwf	12	;volatile
 10969  15F1  0008               	return
 10970  15F2                     __end_of_PWM6_LoadDutyValue:	
 10971                           
 10972                           	psect	text28
 10973  160A                     __ptext28:	
 10974 ;; *************** function _LCD_Write_String *****************
 10975 ;; Defined at:
 10976 ;;		line 239 in file "lcd.c"
 10977 ;; Parameters:    Size  Location     Type
 10978 ;;  a               2    5[COMMON] PTR const unsigned char 
 10979 ;;		 -> STR_40(5), STR_39(4), STR_38(6), STR_37(3), 
 10980 ;;		 -> STR_36(12), STR_35(16), STR_34(12), STR_33(16), 
 10981 ;;		 -> STR_32(17), STR_31(9), STR_30(17), STR_29(11), 
 10982 ;;		 -> STR_28(17), STR_27(11), STR_26(2), STR_25(2), 
 10983 ;;		 -> STR_24(2), STR_23(2), STR_22(2), STR_21(2), 
 10984 ;;		 -> STR_20(2), STR_19(2), STR_18(2), STR_17(2), 
 10985 ;;		 -> STR_16(2), STR_15(2), STR_14(2), STR_13(2), 
 10986 ;;		 -> STR_12(2), STR_11(2), STR_10(2), STR_9(2), 
 10987 ;;		 -> STR_8(2), STR_7(2), STR_6(2), STR_5(2), 
 10988 ;;		 -> STR_4(2), STR_3(2), STR_2(2), STR_1(2), 
 10989 ;; Auto vars:     Size  Location     Type
 10990 ;;  i               2    8[COMMON] int 
 10991 ;; Return value:  Size  Location     Type
 10992 ;;                  1    wreg      void 
 10993 ;; Registers used:
 10994 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10995 ;; Tracked objects:
 10996 ;;		On entry : 0/0
 10997 ;;		On exit  : 0/0
 10998 ;;		Unchanged: 0/0
 10999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11000 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11001 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11002 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11003 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11004 ;;Total ram usage:        5 bytes
 11005 ;; Hardware stack levels used:    1
 11006 ;; Hardware stack levels required when called:    2
 11007 ;; This function calls:
 11008 ;;		_LCD_Write_Char
 11009 ;; This function is called by:
 11010 ;;		_main
 11011 ;; This function uses a non-reentrant model
 11012 ;;
 11013                           
 11014                           
 11015                           ;psect for function _LCD_Write_String
 11016  160A                     _LCD_Write_String:	
 11017                           
 11018                           ;lcd.c: 241: int i;
 11019                           ;lcd.c: 242: for(i=0;a[i]!='\0';i++)
 11020                           
 11021                           ;incstack = 0
 11022                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11023  160A  01F8               	clrf	LCD_Write_String@i
 11024  160B  01F9               	clrf	LCD_Write_String@i+1
 11025  160C                     l2717:	
 11026  160C  0875               	movf	LCD_Write_String@a,w
 11027  160D  0778               	addwf	LCD_Write_String@i,w
 11028  160E  0084               	movwf	4
 11029  160F  0876               	movf	LCD_Write_String@a+1,w
 11030  1610  3D79               	addwfc	LCD_Write_String@i+1,w
 11031  1611  0085               	movwf	5
 11032  1612  0012               	moviw fsr0++
 11033  1613  1903               	btfsc	3,2
 11034  1614  0008               	return
 11035                           
 11036                           ;lcd.c: 243: LCD_Write_Char(a[i]);
 11037  1615  0875               	movf	LCD_Write_String@a,w
 11038  1616  0778               	addwf	LCD_Write_String@i,w
 11039  1617  0084               	movwf	4
 11040  1618  0876               	movf	LCD_Write_String@a+1,w
 11041  1619  3D79               	addwfc	LCD_Write_String@i+1,w
 11042  161A  0085               	movwf	5
 11043  161B  0800               	movf	0,w	;code access
 11044  161C  3188  2007  3196   	fcall	_LCD_Write_Char
 11045  161F  3001               	movlw	1
 11046  1620  07F8               	addwf	LCD_Write_String@i,f
 11047  1621  3000               	movlw	0
 11048  1622  3DF9               	addwfc	LCD_Write_String@i+1,f
 11049  1623  2E0C               	goto	l2717
 11050  1624                     __end_of_LCD_Write_String:	
 11051                           
 11052                           	psect	text29
 11053  0D26                     __ptext29:	
 11054 ;; *************** function _LCD_Write_Int *****************
 11055 ;; Defined at:
 11056 ;;		line 246 in file "lcd.c"
 11057 ;; Parameters:    Size  Location     Type
 11058 ;;  value           2    0[BANK0 ] int 
 11059 ;;  fieldLength     1    2[BANK0 ] char 
 11060 ;;  numPlaces       1    3[BANK0 ] char 
 11061 ;;  sign            1    4[BANK0 ] char 
 11062 ;; Auto vars:     Size  Location     Type
 11063 ;;  str             5   10[BANK0 ] unsigned char [5]
 11064 ;;  i               2   17[BANK0 ] int 
 11065 ;;  j               2   15[BANK0 ] int 
 11066 ;; Return value:  Size  Location     Type
 11067 ;;                  1    wreg      void 
 11068 ;; Registers used:
 11069 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11070 ;; Tracked objects:
 11071 ;;		On entry : 0/0
 11072 ;;		On exit  : 0/0
 11073 ;;		Unchanged: 0/0
 11074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11075 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11076 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11077 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11078 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11079 ;;Total ram usage:       19 bytes
 11080 ;; Hardware stack levels used:    1
 11081 ;; Hardware stack levels required when called:    2
 11082 ;; This function calls:
 11083 ;;		_LCD_Write_Char
 11084 ;;		___awdiv
 11085 ;;		___awmod
 11086 ;; This function is called by:
 11087 ;;		_main
 11088 ;; This function uses a non-reentrant model
 11089 ;;
 11090                           
 11091                           
 11092                           ;psect for function _LCD_Write_Int
 11093  0D26                     _LCD_Write_Int:	
 11094                           
 11095                           ;lcd.c: 248: char str[5]={0,0,0,0,0};
 11096                           
 11097                           ;incstack = 0
 11098                           ; Regs used in _LCD_Write_Int: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11099  0D26  30D8               	movlw	low LCD_Write_Int@F13687
 11100  0D27  0086               	movwf	6
 11101  0D28  3000               	movlw	high LCD_Write_Int@F13687
 11102  0D29  0087               	movwf	7
 11103  0D2A  302A               	movlw	low LCD_Write_Int@str
 11104  0D2B  0084               	movwf	4
 11105  0D2C  3000               	movlw	high LCD_Write_Int@str
 11106  0D2D  0085               	movwf	5
 11107  0D2E  3005               	movlw	5
 11108  0D2F  0020               	movlb	0	; select bank0
 11109  0D30  00A5               	movwf	??_LCD_Write_Int
 11110  0D31                     u2940:	
 11111  0D31  0016               	moviw fsr1++
 11112  0D32  001A               	movwi fsr0++
 11113  0D33  0BA5               	decfsz	??_LCD_Write_Int,f
 11114  0D34  2D31               	goto	u2940
 11115                           
 11116                           ;lcd.c: 249: int i=4,j=0;
 11117  0D35  3004               	movlw	4
 11118  0D36  00B1               	movwf	LCD_Write_Int@i
 11119  0D37  3000               	movlw	0
 11120  0D38  00B2               	movwf	LCD_Write_Int@i+1
 11121  0D39  01AF               	clrf	LCD_Write_Int@j
 11122  0D3A  01B0               	clrf	LCD_Write_Int@j+1
 11123                           
 11124                           ;lcd.c: 251: if(value<0)
 11125  0D3B  1FA1               	btfss	LCD_Write_Int@value+1,7
 11126  0D3C  2D48               	goto	l2731
 11127                           
 11128                           ;lcd.c: 252: {
 11129                           ;lcd.c: 253: LCD_Write_Char('-');
 11130  0D3D  302D               	movlw	45
 11131  0D3E  3188  2007  318D   	fcall	_LCD_Write_Char
 11132                           
 11133                           ;lcd.c: 254: value=value*-1;
 11134  0D41  0020               	movlb	0	; select bank0
 11135  0D42  09A0               	comf	LCD_Write_Int@value,f
 11136  0D43  09A1               	comf	LCD_Write_Int@value+1,f
 11137  0D44  0AA0               	incf	LCD_Write_Int@value,f
 11138  0D45  1903               	skipnz
 11139  0D46  0AA1               	incf	LCD_Write_Int@value+1,f
 11140                           
 11141                           ;lcd.c: 255: }
 11142  0D47  2D4F               	goto	l2741
 11143  0D48                     l2731:	
 11144                           
 11145                           ;lcd.c: 257: else
 11146                           ;lcd.c: 258: {
 11147                           ;lcd.c: 259: if(sign == 1)
 11148  0D48  0324               	decf	LCD_Write_Int@sign,w
 11149  0D49  1D03               	btfss	3,2
 11150  0D4A  2D4F               	goto	l2741
 11151                           
 11152                           ;lcd.c: 260: {
 11153                           ;lcd.c: 261: LCD_Write_Char('+');
 11154  0D4B  302B               	movlw	43
 11155  0D4C  3188  2007  318D   	fcall	_LCD_Write_Char
 11156  0D4F                     l2741:	
 11157                           ;lcd.c: 262: }
 11158                           ;lcd.c: 263: }
 11159                           ;lcd.c: 265: while(value)
 11160                           
 11161  0D4F  0020               	movlb	0	; select bank0
 11162  0D50  0820               	movf	LCD_Write_Int@value,w
 11163  0D51  0421               	iorwf	LCD_Write_Int@value+1,w
 11164  0D52  1903               	btfsc	3,2
 11165  0D53  2D7E               	goto	l2743
 11166                           
 11167                           ;lcd.c: 266: {
 11168                           ;lcd.c: 267: str[i]=value%10;
 11169  0D54  300A               	movlw	10
 11170  0D55  00F0               	movwf	___awmod@divisor
 11171  0D56  3000               	movlw	0
 11172  0D57  00F1               	movwf	___awmod@divisor+1
 11173  0D58  0020               	movlb	0	; select bank0
 11174  0D59  0821               	movf	LCD_Write_Int@value+1,w
 11175  0D5A  00F3               	movwf	___awmod@dividend+1
 11176  0D5B  0820               	movf	LCD_Write_Int@value,w
 11177  0D5C  00F2               	movwf	___awmod@dividend
 11178  0D5D  3188  2033  318D   	fcall	___awmod
 11179  0D60  0870               	movf	?___awmod,w
 11180  0D61  0020               	movlb	0	; select bank0
 11181  0D62  00A5               	movwf	??_LCD_Write_Int
 11182  0D63  0831               	movf	LCD_Write_Int@i,w
 11183  0D64  3E2A               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
 11184  0D65  0086               	movwf	6
 11185  0D66  0187               	clrf	7
 11186  0D67  0825               	movf	??_LCD_Write_Int,w
 11187  0D68  0081               	movwf	1
 11188                           
 11189                           ;lcd.c: 268: value=value/10;
 11190  0D69  300A               	movlw	10
 11191  0D6A  00F0               	movwf	___awdiv@divisor
 11192  0D6B  3000               	movlw	0
 11193  0D6C  00F1               	movwf	___awdiv@divisor+1
 11194  0D6D  0821               	movf	LCD_Write_Int@value+1,w
 11195  0D6E  00F3               	movwf	___awdiv@dividend+1
 11196  0D6F  0820               	movf	LCD_Write_Int@value,w
 11197  0D70  00F2               	movwf	___awdiv@dividend
 11198  0D71  3188  2078  318D   	fcall	___awdiv
 11199  0D74  0871               	movf	?___awdiv+1,w
 11200  0D75  0020               	movlb	0	; select bank0
 11201  0D76  00A1               	movwf	LCD_Write_Int@value+1
 11202  0D77  0870               	movf	?___awdiv,w
 11203  0D78  00A0               	movwf	LCD_Write_Int@value
 11204                           
 11205                           ;lcd.c: 269: i--;
 11206  0D79  30FF               	movlw	255
 11207  0D7A  07B1               	addwf	LCD_Write_Int@i,f
 11208  0D7B  30FF               	movlw	255
 11209  0D7C  3DB2               	addwfc	LCD_Write_Int@i+1,f
 11210  0D7D  2D4F               	goto	l2741
 11211  0D7E                     l2743:	
 11212                           
 11213                           ;lcd.c: 270: }
 11214                           ;lcd.c: 271: if(fieldLength==-1)
 11215  0D7E  0A22               	incf	LCD_Write_Int@fieldLength,w
 11216  0D7F  1903               	btfsc	3,2
 11217  0D80  2D86               	goto	l2749
 11218  0D81  2D8E               	goto	l2751
 11219  0D82                     l2747:	
 11220                           ;lcd.c: 272: {
 11221                           ;lcd.c: 273: while(str[j]==0)
 11222                           
 11223                           
 11224                           ;lcd.c: 274: {
 11225                           ;lcd.c: 275: j++;
 11226  0D82  3001               	movlw	1
 11227  0D83  07AF               	addwf	LCD_Write_Int@j,f
 11228  0D84  3000               	movlw	0
 11229  0D85  3DB0               	addwfc	LCD_Write_Int@j+1,f
 11230  0D86                     l2749:	
 11231  0D86  082F               	movf	LCD_Write_Int@j,w
 11232  0D87  3E2A               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
 11233  0D88  0086               	movwf	6
 11234  0D89  0187               	clrf	7
 11235  0D8A  0801               	movf	1,w
 11236  0D8B  1D03               	btfss	3,2
 11237  0D8C  2D9E               	goto	l2753
 11238  0D8D  2D82               	goto	l2747
 11239  0D8E                     l2751:	
 11240                           ;lcd.c: 276: }
 11241                           ;lcd.c: 277: }
 11242                           
 11243                           
 11244                           ;lcd.c: 278: else
 11245                           ;lcd.c: 279: {
 11246                           ;lcd.c: 280: j=5-fieldLength;
 11247  0D8E  0822               	movf	LCD_Write_Int@fieldLength,w
 11248  0D8F  00A5               	movwf	??_LCD_Write_Int
 11249  0D90  01A6               	clrf	??_LCD_Write_Int+1
 11250  0D91  1BA5               	btfsc	??_LCD_Write_Int,7
 11251  0D92  03A6               	decf	??_LCD_Write_Int+1,f
 11252  0D93  09A5               	comf	??_LCD_Write_Int,f
 11253  0D94  09A6               	comf	??_LCD_Write_Int+1,f
 11254  0D95  0AA5               	incf	??_LCD_Write_Int,f
 11255  0D96  1903               	skipnz
 11256  0D97  0AA6               	incf	??_LCD_Write_Int+1,f
 11257  0D98  0825               	movf	??_LCD_Write_Int,w
 11258  0D99  3E05               	addlw	5
 11259  0D9A  00AF               	movwf	LCD_Write_Int@j
 11260  0D9B  3000               	movlw	0
 11261  0D9C  3D26               	addwfc	??_LCD_Write_Int+1,w
 11262  0D9D  00B0               	movwf	LCD_Write_Int@j+1
 11263  0D9E                     l2753:	
 11264                           
 11265                           ;lcd.c: 281: }
 11266                           ;lcd.c: 283: for(i=j;i<(5-numPlaces);i++)
 11267  0D9E  0830               	movf	LCD_Write_Int@j+1,w
 11268  0D9F  00B2               	movwf	LCD_Write_Int@i+1
 11269  0DA0  082F               	movf	LCD_Write_Int@j,w
 11270  0DA1  00B1               	movwf	LCD_Write_Int@i
 11271  0DA2                     l2759:	
 11272  0DA2  0823               	movf	LCD_Write_Int@numPlaces,w
 11273  0DA3  00A5               	movwf	??_LCD_Write_Int
 11274  0DA4  01A6               	clrf	??_LCD_Write_Int+1
 11275  0DA5  1BA5               	btfsc	??_LCD_Write_Int,7
 11276  0DA6  03A6               	decf	??_LCD_Write_Int+1,f
 11277  0DA7  09A5               	comf	??_LCD_Write_Int,f
 11278  0DA8  09A6               	comf	??_LCD_Write_Int+1,f
 11279  0DA9  0AA5               	incf	??_LCD_Write_Int,f
 11280  0DAA  1903               	skipnz
 11281  0DAB  0AA6               	incf	??_LCD_Write_Int+1,f
 11282  0DAC  0825               	movf	??_LCD_Write_Int,w
 11283  0DAD  3E05               	addlw	5
 11284  0DAE  00A7               	movwf	??_LCD_Write_Int+2
 11285  0DAF  3000               	movlw	0
 11286  0DB0  3D26               	addwfc	??_LCD_Write_Int+1,w
 11287  0DB1  00A8               	movwf	??_LCD_Write_Int+3
 11288  0DB2  0832               	movf	LCD_Write_Int@i+1,w
 11289  0DB3  3A80               	xorlw	128
 11290  0DB4  00A9               	movwf	??_LCD_Write_Int+4
 11291  0DB5  0828               	movf	??_LCD_Write_Int+3,w
 11292  0DB6  3A80               	xorlw	128
 11293  0DB7  0229               	subwf	??_LCD_Write_Int+4,w
 11294  0DB8  1D03               	skipz
 11295  0DB9  2DBC               	goto	u3005
 11296  0DBA  0827               	movf	??_LCD_Write_Int+2,w
 11297  0DBB  0231               	subwf	LCD_Write_Int@i,w
 11298  0DBC                     u3005:	
 11299  0DBC  1803               	btfsc	3,0
 11300  0DBD  2DCE               	goto	l2761
 11301                           
 11302                           ;lcd.c: 284: {
 11303                           ;lcd.c: 285: LCD_Write_Char(48+str[i]);
 11304  0DBE  0020               	movlb	0	; select bank0
 11305  0DBF  0831               	movf	LCD_Write_Int@i,w
 11306  0DC0  3E2A               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
 11307  0DC1  0086               	movwf	6
 11308  0DC2  0187               	clrf	7
 11309  0DC3  0801               	movf	1,w
 11310  0DC4  3E30               	addlw	48
 11311  0DC5  3188  2007  318D   	fcall	_LCD_Write_Char
 11312  0DC8  3001               	movlw	1
 11313  0DC9  0020               	movlb	0	; select bank0
 11314  0DCA  07B1               	addwf	LCD_Write_Int@i,f
 11315  0DCB  3000               	movlw	0
 11316  0DCC  3DB2               	addwfc	LCD_Write_Int@i+1,f
 11317  0DCD  2DA2               	goto	l2759
 11318  0DCE                     l2761:	
 11319                           
 11320                           ;lcd.c: 286: }
 11321                           ;lcd.c: 288: if(numPlaces == 1)
 11322  0DCE  0020               	movlb	0	; select bank0
 11323  0DCF  0323               	decf	LCD_Write_Int@numPlaces,w
 11324  0DD0  1D03               	btfss	3,2
 11325  0DD1  2DDC               	goto	l2765
 11326                           
 11327                           ;lcd.c: 289: {
 11328                           ;lcd.c: 290: LCD_Write_Char(46);
 11329  0DD2  302E               	movlw	46
 11330  0DD3  3188  2007  318D   	fcall	_LCD_Write_Char
 11331                           
 11332                           ;lcd.c: 291: LCD_Write_Char(48+str[4]);
 11333  0DD6  0020               	movlb	0	; select bank0
 11334  0DD7  082E               	movf	LCD_Write_Int@str+4,w
 11335  0DD8  3E30               	addlw	48
 11336  0DD9  3188  2007  318D   	fcall	_LCD_Write_Char
 11337  0DDC                     l2765:	
 11338                           
 11339                           ;lcd.c: 292: }
 11340                           ;lcd.c: 294: if(numPlaces == 2)
 11341  0DDC  3002               	movlw	2
 11342  0DDD  0020               	movlb	0	; select bank0
 11343  0DDE  0623               	xorwf	LCD_Write_Int@numPlaces,w
 11344  0DDF  1D03               	btfss	3,2
 11345  0DE0  0008               	return
 11346                           
 11347                           ;lcd.c: 295: {
 11348                           ;lcd.c: 296: LCD_Write_Char(46);
 11349  0DE1  302E               	movlw	46
 11350  0DE2  3188  2007  318D   	fcall	_LCD_Write_Char
 11351                           
 11352                           ;lcd.c: 297: LCD_Write_Char(48+str[3]);
 11353  0DE5  0020               	movlb	0	; select bank0
 11354  0DE6  082D               	movf	LCD_Write_Int@str+3,w
 11355  0DE7  3E30               	addlw	48
 11356  0DE8  3188  2007  318D   	fcall	_LCD_Write_Char
 11357                           
 11358                           ;lcd.c: 298: LCD_Write_Char(48+str[4]);
 11359  0DEB  0020               	movlb	0	; select bank0
 11360  0DEC  082E               	movf	LCD_Write_Int@str+4,w
 11361  0DED  3E30               	addlw	48
 11362  0DEE  3188  2007         	fcall	_LCD_Write_Char
 11363  0DF0  0008               	return
 11364  0DF1                     __end_of_LCD_Write_Int:	
 11365                           
 11366                           	psect	text30
 11367  0833                     __ptext30:	
 11368 ;; *************** function ___awmod *****************
 11369 ;; Defined at:
 11370 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c"
 11371 ;; Parameters:    Size  Location     Type
 11372 ;;  divisor         2    0[COMMON] int 
 11373 ;;  dividend        2    2[COMMON] int 
 11374 ;; Auto vars:     Size  Location     Type
 11375 ;;  sign            1    6[COMMON] unsigned char 
 11376 ;;  counter         1    5[COMMON] unsigned char 
 11377 ;; Return value:  Size  Location     Type
 11378 ;;                  2    0[COMMON] int 
 11379 ;; Registers used:
 11380 ;;		wreg, status,2, status,0
 11381 ;; Tracked objects:
 11382 ;;		On entry : 0/0
 11383 ;;		On exit  : 0/0
 11384 ;;		Unchanged: 0/0
 11385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11386 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11387 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11388 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11389 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11390 ;;Total ram usage:        7 bytes
 11391 ;; Hardware stack levels used:    1
 11392 ;; This function calls:
 11393 ;;		Nothing
 11394 ;; This function is called by:
 11395 ;;		_LCD_Write_Int
 11396 ;; This function uses a non-reentrant model
 11397 ;;
 11398                           
 11399                           
 11400                           ;psect for function ___awmod
 11401  0833                     ___awmod:	
 11402                           
 11403                           ;incstack = 0
 11404                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 11405  0833  01F6               	clrf	___awmod@sign
 11406  0834  1FF3               	btfss	___awmod@dividend+1,7
 11407  0835  283D               	goto	l2591
 11408  0836  09F2               	comf	___awmod@dividend,f
 11409  0837  09F3               	comf	___awmod@dividend+1,f
 11410  0838  0AF2               	incf	___awmod@dividend,f
 11411  0839  1903               	skipnz
 11412  083A  0AF3               	incf	___awmod@dividend+1,f
 11413  083B  01F6               	clrf	___awmod@sign
 11414  083C  0AF6               	incf	___awmod@sign,f
 11415  083D                     l2591:	
 11416  083D  1FF1               	btfss	___awmod@divisor+1,7
 11417  083E  2844               	goto	l2595
 11418  083F  09F0               	comf	___awmod@divisor,f
 11419  0840  09F1               	comf	___awmod@divisor+1,f
 11420  0841  0AF0               	incf	___awmod@divisor,f
 11421  0842  1903               	skipnz
 11422  0843  0AF1               	incf	___awmod@divisor+1,f
 11423  0844                     l2595:	
 11424  0844  0870               	movf	___awmod@divisor,w
 11425  0845  0471               	iorwf	___awmod@divisor+1,w
 11426  0846  1903               	btfsc	3,2
 11427  0847  286B               	goto	l2613
 11428  0848  01F5               	clrf	___awmod@counter
 11429  0849  0AF5               	incf	___awmod@counter,f
 11430  084A                     l2603:	
 11431  084A  1BF1               	btfsc	___awmod@divisor+1,7
 11432  084B  2856               	goto	l2605
 11433  084C  3001               	movlw	1
 11434  084D                     u2675:	
 11435  084D  35F0               	lslf	___awmod@divisor,f
 11436  084E  0DF1               	rlf	___awmod@divisor+1,f
 11437  084F  0B89               	decfsz	9,f
 11438  0850  284D               	goto	u2675
 11439  0851  3001               	movlw	1
 11440  0852  00F4               	movwf	??___awmod
 11441  0853  0874               	movf	??___awmod,w
 11442  0854  07F5               	addwf	___awmod@counter,f
 11443  0855  284A               	goto	l2603
 11444  0856                     l2605:	
 11445  0856  0871               	movf	___awmod@divisor+1,w
 11446  0857  0273               	subwf	___awmod@dividend+1,w
 11447  0858  1D03               	skipz
 11448  0859  285C               	goto	u2695
 11449  085A  0870               	movf	___awmod@divisor,w
 11450  085B  0272               	subwf	___awmod@dividend,w
 11451  085C                     u2695:	
 11452  085C  1C03               	skipc
 11453  085D  2862               	goto	l2609
 11454  085E  0870               	movf	___awmod@divisor,w
 11455  085F  02F2               	subwf	___awmod@dividend,f
 11456  0860  0871               	movf	___awmod@divisor+1,w
 11457  0861  3BF3               	subwfb	___awmod@dividend+1,f
 11458  0862                     l2609:	
 11459  0862  3001               	movlw	1
 11460  0863                     u2705:	
 11461  0863  36F1               	lsrf	___awmod@divisor+1,f
 11462  0864  0CF0               	rrf	___awmod@divisor,f
 11463  0865  0B89               	decfsz	9,f
 11464  0866  2863               	goto	u2705
 11465  0867  3001               	movlw	1
 11466  0868  02F5               	subwf	___awmod@counter,f
 11467  0869  1D03               	btfss	3,2
 11468  086A  2856               	goto	l2605
 11469  086B                     l2613:	
 11470  086B  0876               	movf	___awmod@sign,w
 11471  086C  1903               	btfsc	3,2
 11472  086D  2873               	goto	l2617
 11473  086E  09F2               	comf	___awmod@dividend,f
 11474  086F  09F3               	comf	___awmod@dividend+1,f
 11475  0870  0AF2               	incf	___awmod@dividend,f
 11476  0871  1903               	skipnz
 11477  0872  0AF3               	incf	___awmod@dividend+1,f
 11478  0873                     l2617:	
 11479  0873  0873               	movf	___awmod@dividend+1,w
 11480  0874  00F1               	movwf	?___awmod+1
 11481  0875  0872               	movf	___awmod@dividend,w
 11482  0876  00F0               	movwf	?___awmod
 11483  0877  0008               	return
 11484  0878                     __end_of___awmod:	
 11485                           
 11486                           	psect	text31
 11487  0878                     __ptext31:	
 11488 ;; *************** function ___awdiv *****************
 11489 ;; Defined at:
 11490 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c"
 11491 ;; Parameters:    Size  Location     Type
 11492 ;;  divisor         2    0[COMMON] int 
 11493 ;;  dividend        2    2[COMMON] int 
 11494 ;; Auto vars:     Size  Location     Type
 11495 ;;  quotient        2    7[COMMON] int 
 11496 ;;  sign            1    6[COMMON] unsigned char 
 11497 ;;  counter         1    5[COMMON] unsigned char 
 11498 ;; Return value:  Size  Location     Type
 11499 ;;                  2    0[COMMON] int 
 11500 ;; Registers used:
 11501 ;;		wreg, status,2, status,0
 11502 ;; Tracked objects:
 11503 ;;		On entry : 0/0
 11504 ;;		On exit  : 0/0
 11505 ;;		Unchanged: 0/0
 11506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11507 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11508 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11509 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11510 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11511 ;;Total ram usage:        9 bytes
 11512 ;; Hardware stack levels used:    1
 11513 ;; This function calls:
 11514 ;;		Nothing
 11515 ;; This function is called by:
 11516 ;;		_LCD_Write_Int
 11517 ;; This function uses a non-reentrant model
 11518 ;;
 11519                           
 11520                           
 11521                           ;psect for function ___awdiv
 11522  0878                     ___awdiv:	
 11523                           
 11524                           ;incstack = 0
 11525                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 11526  0878  01F6               	clrf	___awdiv@sign
 11527  0879  1FF1               	btfss	___awdiv@divisor+1,7
 11528  087A  2882               	goto	l2547
 11529  087B  09F0               	comf	___awdiv@divisor,f
 11530  087C  09F1               	comf	___awdiv@divisor+1,f
 11531  087D  0AF0               	incf	___awdiv@divisor,f
 11532  087E  1903               	skipnz
 11533  087F  0AF1               	incf	___awdiv@divisor+1,f
 11534  0880  01F6               	clrf	___awdiv@sign
 11535  0881  0AF6               	incf	___awdiv@sign,f
 11536  0882                     l2547:	
 11537  0882  1FF3               	btfss	___awdiv@dividend+1,7
 11538  0883  288D               	goto	l2553
 11539  0884  09F2               	comf	___awdiv@dividend,f
 11540  0885  09F3               	comf	___awdiv@dividend+1,f
 11541  0886  0AF2               	incf	___awdiv@dividend,f
 11542  0887  1903               	skipnz
 11543  0888  0AF3               	incf	___awdiv@dividend+1,f
 11544  0889  3001               	movlw	1
 11545  088A  00F4               	movwf	??___awdiv
 11546  088B  0874               	movf	??___awdiv,w
 11547  088C  06F6               	xorwf	___awdiv@sign,f
 11548  088D                     l2553:	
 11549  088D  01F7               	clrf	___awdiv@quotient
 11550  088E  01F8               	clrf	___awdiv@quotient+1
 11551  088F  0870               	movf	___awdiv@divisor,w
 11552  0890  0471               	iorwf	___awdiv@divisor+1,w
 11553  0891  1903               	btfsc	3,2
 11554  0892  28BC               	goto	l2575
 11555  0893  01F5               	clrf	___awdiv@counter
 11556  0894  0AF5               	incf	___awdiv@counter,f
 11557  0895                     l2563:	
 11558  0895  1BF1               	btfsc	___awdiv@divisor+1,7
 11559  0896  28A1               	goto	l2565
 11560  0897  3001               	movlw	1
 11561  0898                     u2575:	
 11562  0898  35F0               	lslf	___awdiv@divisor,f
 11563  0899  0DF1               	rlf	___awdiv@divisor+1,f
 11564  089A  0B89               	decfsz	9,f
 11565  089B  2898               	goto	u2575
 11566  089C  3001               	movlw	1
 11567  089D  00F4               	movwf	??___awdiv
 11568  089E  0874               	movf	??___awdiv,w
 11569  089F  07F5               	addwf	___awdiv@counter,f
 11570  08A0  2895               	goto	l2563
 11571  08A1                     l2565:	
 11572  08A1  3001               	movlw	1
 11573  08A2                     u2595:	
 11574  08A2  35F7               	lslf	___awdiv@quotient,f
 11575  08A3  0DF8               	rlf	___awdiv@quotient+1,f
 11576  08A4  0B89               	decfsz	9,f
 11577  08A5  28A2               	goto	u2595
 11578  08A6  0871               	movf	___awdiv@divisor+1,w
 11579  08A7  0273               	subwf	___awdiv@dividend+1,w
 11580  08A8  1D03               	skipz
 11581  08A9  28AC               	goto	u2605
 11582  08AA  0870               	movf	___awdiv@divisor,w
 11583  08AB  0272               	subwf	___awdiv@dividend,w
 11584  08AC                     u2605:	
 11585  08AC  1C03               	skipc
 11586  08AD  28B3               	goto	l2571
 11587  08AE  0870               	movf	___awdiv@divisor,w
 11588  08AF  02F2               	subwf	___awdiv@dividend,f
 11589  08B0  0871               	movf	___awdiv@divisor+1,w
 11590  08B1  3BF3               	subwfb	___awdiv@dividend+1,f
 11591  08B2  1477               	bsf	___awdiv@quotient,0
 11592  08B3                     l2571:	
 11593  08B3  3001               	movlw	1
 11594  08B4                     u2615:	
 11595  08B4  36F1               	lsrf	___awdiv@divisor+1,f
 11596  08B5  0CF0               	rrf	___awdiv@divisor,f
 11597  08B6  0B89               	decfsz	9,f
 11598  08B7  28B4               	goto	u2615
 11599  08B8  3001               	movlw	1
 11600  08B9  02F5               	subwf	___awdiv@counter,f
 11601  08BA  1D03               	btfss	3,2
 11602  08BB  28A1               	goto	l2565
 11603  08BC                     l2575:	
 11604  08BC  0876               	movf	___awdiv@sign,w
 11605  08BD  1903               	btfsc	3,2
 11606  08BE  28C4               	goto	l2579
 11607  08BF  09F7               	comf	___awdiv@quotient,f
 11608  08C0  09F8               	comf	___awdiv@quotient+1,f
 11609  08C1  0AF7               	incf	___awdiv@quotient,f
 11610  08C2  1903               	skipnz
 11611  08C3  0AF8               	incf	___awdiv@quotient+1,f
 11612  08C4                     l2579:	
 11613  08C4  0878               	movf	___awdiv@quotient+1,w
 11614  08C5  00F1               	movwf	?___awdiv+1
 11615  08C6  0877               	movf	___awdiv@quotient,w
 11616  08C7  00F0               	movwf	?___awdiv
 11617  08C8  0008               	return
 11618  08C9                     __end_of___awdiv:	
 11619                           
 11620                           	psect	text32
 11621  0807                     __ptext32:	
 11622 ;; *************** function _LCD_Write_Char *****************
 11623 ;; Defined at:
 11624 ;;		line 223 in file "lcd.c"
 11625 ;; Parameters:    Size  Location     Type
 11626 ;;  a               1    wreg     const unsigned char 
 11627 ;; Auto vars:     Size  Location     Type
 11628 ;;  a               1    4[COMMON] const unsigned char 
 11629 ;;  y               1    3[COMMON] unsigned char 
 11630 ;;  temp            1    2[COMMON] unsigned char 
 11631 ;; Return value:  Size  Location     Type
 11632 ;;                  1    wreg      void 
 11633 ;; Registers used:
 11634 ;;		wreg, status,2, status,0, pclath, cstack
 11635 ;; Tracked objects:
 11636 ;;		On entry : 0/0
 11637 ;;		On exit  : 0/0
 11638 ;;		Unchanged: 0/0
 11639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11641 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11642 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11643 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11644 ;;Total ram usage:        4 bytes
 11645 ;; Hardware stack levels used:    1
 11646 ;; Hardware stack levels required when called:    1
 11647 ;; This function calls:
 11648 ;;		_LCD_Port
 11649 ;; This function is called by:
 11650 ;;		_InitCustomChars
 11651 ;;		_LCD_Write_String
 11652 ;;		_LCD_Write_Int
 11653 ;;		_main
 11654 ;; This function uses a non-reentrant model
 11655 ;;
 11656                           
 11657                           
 11658                           ;psect for function _LCD_Write_Char
 11659  0807                     _LCD_Write_Char:	
 11660                           
 11661                           ;incstack = 0
 11662                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
 11663                           ;LCD_Write_Char@a stored from wreg
 11664  0807  00F4               	movwf	LCD_Write_Char@a
 11665                           
 11666                           ;lcd.c: 225: char temp,y;
 11667                           ;lcd.c: 226: temp = a&0x0F;
 11668  0808  0874               	movf	LCD_Write_Char@a,w
 11669  0809  390F               	andlw	15
 11670  080A  00F1               	movwf	??_LCD_Write_Char
 11671  080B  0871               	movf	??_LCD_Write_Char,w
 11672  080C  00F2               	movwf	LCD_Write_Char@temp
 11673                           
 11674                           ;lcd.c: 227: y = a&0xF0;
 11675  080D  0874               	movf	LCD_Write_Char@a,w
 11676  080E  39F0               	andlw	240
 11677  080F  00F1               	movwf	??_LCD_Write_Char
 11678  0810  0871               	movf	??_LCD_Write_Char,w
 11679  0811  00F3               	movwf	LCD_Write_Char@y
 11680                           
 11681                           ;lcd.c: 228: RA0 = 1;
 11682  0812  0020               	movlb	0	; select bank0
 11683  0813  140C               	bsf	12,0	;volatile
 11684                           
 11685                           ;lcd.c: 229: LCD_Port(y>>4);
 11686  0814  0873               	movf	LCD_Write_Char@y,w
 11687  0815  00F1               	movwf	??_LCD_Write_Char
 11688  0816  3004               	movlw	4
 11689  0817                     u2305:	
 11690  0817  36F1               	lsrf	??_LCD_Write_Char,f
 11691  0818  0B89               	decfsz	9,f
 11692  0819  2817               	goto	u2305
 11693  081A  0871               	movf	??_LCD_Write_Char,w
 11694  081B  3195  25F2  3188   	fcall	_LCD_Port
 11695                           
 11696                           ;lcd.c: 230: RA2 = 1;
 11697  081E  0020               	movlb	0	; select bank0
 11698  081F  150C               	bsf	12,2	;volatile
 11699                           
 11700                           ;lcd.c: 231: RA2 = 0;
 11701  0820  110C               	bcf	12,2	;volatile
 11702                           
 11703                           ;lcd.c: 232: _delay((unsigned long)((40)*(32000000/4000000.0)));
 11704  0821  306A               	movlw	106
 11705  0822  00F1               	movwf	??_LCD_Write_Char
 11706  0823                     u3947:	
 11707  0823  0BF1               	decfsz	??_LCD_Write_Char,f
 11708  0824  2823               	goto	u3947
 11709  0825  0000               	nop
 11710                           
 11711                           ;lcd.c: 233: LCD_Port(temp);
 11712  0826  0872               	movf	LCD_Write_Char@temp,w
 11713  0827  3195  25F2  3188   	fcall	_LCD_Port
 11714                           
 11715                           ;lcd.c: 234: RA2 = 1;
 11716  082A  0020               	movlb	0	; select bank0
 11717  082B  150C               	bsf	12,2	;volatile
 11718                           
 11719                           ;lcd.c: 235: RA2 = 0;
 11720  082C  110C               	bcf	12,2	;volatile
 11721                           
 11722                           ;lcd.c: 236: _delay((unsigned long)((40)*(32000000/4000000.0)));
 11723  082D  306A               	movlw	106
 11724  082E  00F1               	movwf	??_LCD_Write_Char
 11725  082F                     u3957:	
 11726  082F  0BF1               	decfsz	??_LCD_Write_Char,f
 11727  0830  282F               	goto	u3957
 11728  0831  0000               	nop
 11729  0832  0008               	return
 11730  0833                     __end_of_LCD_Write_Char:	
 11731                           
 11732                           	psect	text33
 11733  177F                     __ptext33:	
 11734 ;; *************** function _LCD_Set_Cursor *****************
 11735 ;; Defined at:
 11736 ;;		line 82 in file "lcd.c"
 11737 ;; Parameters:    Size  Location     Type
 11738 ;;  x               1    wreg     unsigned char 
 11739 ;;  y               1    4[COMMON] unsigned char 
 11740 ;; Auto vars:     Size  Location     Type
 11741 ;;  x               1    7[COMMON] unsigned char 
 11742 ;;  temp            1   10[COMMON] unsigned char 
 11743 ;;  w               1    9[COMMON] unsigned char 
 11744 ;;  z               1    8[COMMON] unsigned char 
 11745 ;; Return value:  Size  Location     Type
 11746 ;;                  1    wreg      void 
 11747 ;; Registers used:
 11748 ;;		wreg, status,2, status,0, pclath, cstack
 11749 ;; Tracked objects:
 11750 ;;		On entry : 0/0
 11751 ;;		On exit  : 0/0
 11752 ;;		Unchanged: 0/0
 11753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11754 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11755 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11756 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11757 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11758 ;;Total ram usage:        7 bytes
 11759 ;; Hardware stack levels used:    1
 11760 ;; Hardware stack levels required when called:    2
 11761 ;; This function calls:
 11762 ;;		_LCD_Cmd
 11763 ;; This function is called by:
 11764 ;;		_main
 11765 ;; This function uses a non-reentrant model
 11766 ;;
 11767                           
 11768                           
 11769                           ;psect for function _LCD_Set_Cursor
 11770  177F                     _LCD_Set_Cursor:	
 11771                           
 11772                           ;incstack = 0
 11773                           ; Regs used in _LCD_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
 11774                           ;LCD_Set_Cursor@x stored from wreg
 11775  177F  00F7               	movwf	LCD_Set_Cursor@x
 11776                           
 11777                           ;lcd.c: 86: char temp,z,w;
 11778                           ;lcd.c: 88: if(y == 0)
 11779  1780  0874               	movf	LCD_Set_Cursor@y,w
 11780  1781  1D03               	btfss	3,2
 11781  1782  2F9F               	goto	l2701
 11782                           
 11783                           ;lcd.c: 89: {
 11784                           ;lcd.c: 90: temp = 0x80 + x;
 11785  1783  0877               	movf	LCD_Set_Cursor@x,w
 11786  1784  3E80               	addlw	128
 11787  1785  00F5               	movwf	??_LCD_Set_Cursor
 11788  1786  0875               	movf	??_LCD_Set_Cursor,w
 11789  1787  00FA               	movwf	LCD_Set_Cursor@temp
 11790                           
 11791                           ;lcd.c: 91: z = temp>>4;
 11792  1788  087A               	movf	LCD_Set_Cursor@temp,w
 11793  1789  00F5               	movwf	??_LCD_Set_Cursor
 11794  178A  3004               	movlw	4
 11795  178B                     u2905:	
 11796  178B  36F5               	lsrf	??_LCD_Set_Cursor,f
 11797  178C  0B89               	decfsz	9,f
 11798  178D  2F8B               	goto	u2905
 11799  178E  0875               	movf	??_LCD_Set_Cursor,w
 11800  178F  00F6               	movwf	??_LCD_Set_Cursor+1
 11801  1790  0876               	movf	??_LCD_Set_Cursor+1,w
 11802  1791  00F8               	movwf	LCD_Set_Cursor@z
 11803                           
 11804                           ;lcd.c: 92: w = temp & 0x0F;
 11805  1792  087A               	movf	LCD_Set_Cursor@temp,w
 11806  1793  390F               	andlw	15
 11807  1794  00F5               	movwf	??_LCD_Set_Cursor
 11808  1795  0875               	movf	??_LCD_Set_Cursor,w
 11809  1796  00F9               	movwf	LCD_Set_Cursor@w
 11810                           
 11811                           ;lcd.c: 93: LCD_Cmd(z);
 11812  1797  0878               	movf	LCD_Set_Cursor@z,w
 11813  1798  3195  25C8  3197   	fcall	_LCD_Cmd
 11814                           
 11815                           ;lcd.c: 94: LCD_Cmd(w);
 11816  179B  0879               	movf	LCD_Set_Cursor@w,w
 11817  179C  3195  25C8         	fcall	_LCD_Cmd
 11818                           
 11819                           ;lcd.c: 95: }
 11820  179E  0008               	return
 11821  179F                     l2701:	
 11822                           
 11823                           ;lcd.c: 97: else if(y == 1)
 11824  179F  0374               	decf	LCD_Set_Cursor@y,w
 11825  17A0  1D03               	btfss	3,2
 11826  17A1  0008               	return
 11827                           
 11828                           ;lcd.c: 98: {
 11829                           ;lcd.c: 99: temp = 0xC0 + x;
 11830  17A2  0877               	movf	LCD_Set_Cursor@x,w
 11831  17A3  3EC0               	addlw	192
 11832  17A4  00F5               	movwf	??_LCD_Set_Cursor
 11833  17A5  0875               	movf	??_LCD_Set_Cursor,w
 11834  17A6  00FA               	movwf	LCD_Set_Cursor@temp
 11835                           
 11836                           ;lcd.c: 100: z = temp>>4;
 11837  17A7  087A               	movf	LCD_Set_Cursor@temp,w
 11838  17A8  00F5               	movwf	??_LCD_Set_Cursor
 11839  17A9  3004               	movlw	4
 11840  17AA                     u2925:	
 11841  17AA  36F5               	lsrf	??_LCD_Set_Cursor,f
 11842  17AB  0B89               	decfsz	9,f
 11843  17AC  2FAA               	goto	u2925
 11844  17AD  0875               	movf	??_LCD_Set_Cursor,w
 11845  17AE  00F6               	movwf	??_LCD_Set_Cursor+1
 11846  17AF  0876               	movf	??_LCD_Set_Cursor+1,w
 11847  17B0  00F8               	movwf	LCD_Set_Cursor@z
 11848                           
 11849                           ;lcd.c: 101: w = temp & 0x0F;
 11850  17B1  087A               	movf	LCD_Set_Cursor@temp,w
 11851  17B2  390F               	andlw	15
 11852  17B3  00F5               	movwf	??_LCD_Set_Cursor
 11853  17B4  0875               	movf	??_LCD_Set_Cursor,w
 11854  17B5  00F9               	movwf	LCD_Set_Cursor@w
 11855                           
 11856                           ;lcd.c: 102: LCD_Cmd(z);
 11857  17B6  0878               	movf	LCD_Set_Cursor@z,w
 11858  17B7  3195  25C8  3197   	fcall	_LCD_Cmd
 11859                           
 11860                           ;lcd.c: 103: LCD_Cmd(w);
 11861  17BA  0879               	movf	LCD_Set_Cursor@w,w
 11862  17BB  3195  25C8         	fcall	_LCD_Cmd
 11863  17BD  0008               	return
 11864  17BE                     __end_of_LCD_Set_Cursor:	
 11865                           
 11866                           	psect	text34
 11867  15C8                     __ptext34:	
 11868 ;; *************** function _LCD_Cmd *****************
 11869 ;; Defined at:
 11870 ;;		line 65 in file "lcd.c"
 11871 ;; Parameters:    Size  Location     Type
 11872 ;;  a               1    wreg     unsigned char 
 11873 ;; Auto vars:     Size  Location     Type
 11874 ;;  a               1    3[COMMON] unsigned char 
 11875 ;; Return value:  Size  Location     Type
 11876 ;;                  1    wreg      void 
 11877 ;; Registers used:
 11878 ;;		wreg, status,2, status,0, pclath, cstack
 11879 ;; Tracked objects:
 11880 ;;		On entry : 0/0
 11881 ;;		On exit  : 0/0
 11882 ;;		Unchanged: 0/0
 11883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11885 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11886 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11887 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11888 ;;Total ram usage:        3 bytes
 11889 ;; Hardware stack levels used:    1
 11890 ;; Hardware stack levels required when called:    1
 11891 ;; This function calls:
 11892 ;;		_LCD_Port
 11893 ;; This function is called by:
 11894 ;;		_InitCustomChars
 11895 ;;		_LCD_Clear
 11896 ;;		_LCD_Set_Cursor
 11897 ;;		_LCD_Init
 11898 ;; This function uses a non-reentrant model
 11899 ;;
 11900                           
 11901                           
 11902                           ;psect for function _LCD_Cmd
 11903  15C8                     _LCD_Cmd:	
 11904                           
 11905                           ;incstack = 0
 11906                           ; Regs used in _LCD_Cmd: [wreg+status,2+status,0+pclath+cstack]
 11907                           ;LCD_Cmd@a stored from wreg
 11908  15C8  00F3               	movwf	LCD_Cmd@a
 11909                           
 11910                           ;lcd.c: 67: RA0 = 0;
 11911  15C9  0020               	movlb	0	; select bank0
 11912  15CA  100C               	bcf	12,0	;volatile
 11913                           
 11914                           ;lcd.c: 68: LCD_Port(a);
 11915  15CB  0873               	movf	LCD_Cmd@a,w
 11916  15CC  3195  25F2  3195   	fcall	_LCD_Port
 11917                           
 11918                           ;lcd.c: 69: RA2 = 1;
 11919  15CF  0020               	movlb	0	; select bank0
 11920  15D0  150C               	bsf	12,2	;volatile
 11921                           
 11922                           ;lcd.c: 70: RA2 = 0;
 11923  15D1  110C               	bcf	12,2	;volatile
 11924                           
 11925                           ;lcd.c: 71: _delay((unsigned long)((4)*(32000000/4000.0)));
 11926  15D2  302A               	movlw	42
 11927  15D3  00F2               	movwf	??_LCD_Cmd+1
 11928  15D4  308D               	movlw	141
 11929  15D5  00F1               	movwf	??_LCD_Cmd
 11930  15D6                     u3967:	
 11931  15D6  0BF1               	decfsz	??_LCD_Cmd,f
 11932  15D7  2DD6               	goto	u3967
 11933  15D8  0BF2               	decfsz	??_LCD_Cmd+1,f
 11934  15D9  2DD6               	goto	u3967
 11935  15DA  3200               	nop2
 11936  15DB  0008               	return
 11937  15DC                     __end_of_LCD_Cmd:	
 11938                           
 11939                           	psect	text35
 11940  15F2                     __ptext35:	
 11941 ;; *************** function _LCD_Port *****************
 11942 ;; Defined at:
 11943 ;;		line 41 in file "lcd.c"
 11944 ;; Parameters:    Size  Location     Type
 11945 ;;  a               1    wreg     unsigned char 
 11946 ;; Auto vars:     Size  Location     Type
 11947 ;;  a               1    0[COMMON] unsigned char 
 11948 ;; Return value:  Size  Location     Type
 11949 ;;                  1    wreg      void 
 11950 ;; Registers used:
 11951 ;;		wreg
 11952 ;; Tracked objects:
 11953 ;;		On entry : 0/0
 11954 ;;		On exit  : 0/0
 11955 ;;		Unchanged: 0/0
 11956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11958 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11960 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11961 ;;Total ram usage:        1 bytes
 11962 ;; Hardware stack levels used:    1
 11963 ;; This function calls:
 11964 ;;		Nothing
 11965 ;; This function is called by:
 11966 ;;		_LCD_Cmd
 11967 ;;		_LCD_Init
 11968 ;;		_LCD_Write_Char
 11969 ;; This function uses a non-reentrant model
 11970 ;;
 11971                           
 11972                           
 11973                           ;psect for function _LCD_Port
 11974  15F2                     _LCD_Port:	
 11975                           
 11976                           ;incstack = 0
 11977                           ; Regs used in _LCD_Port: [wreg]
 11978                           ;LCD_Port@a stored from wreg
 11979  15F2  00F0               	movwf	LCD_Port@a
 11980                           
 11981                           ;lcd.c: 43: if(a & 1)
 11982  15F3  1C70               	btfss	LCD_Port@a,0
 11983  15F4  2DF8               	goto	l94
 11984                           
 11985                           ;lcd.c: 44: RA7 = 1;
 11986  15F5  0020               	movlb	0	; select bank0
 11987  15F6  178C               	bsf	12,7	;volatile
 11988  15F7  2DFA               	goto	l2099
 11989  15F8                     l94:	
 11990                           
 11991                           ;lcd.c: 45: else
 11992                           ;lcd.c: 46: RA7 = 0;
 11993  15F8  0020               	movlb	0	; select bank0
 11994  15F9  138C               	bcf	12,7	;volatile
 11995  15FA                     l2099:	
 11996                           
 11997                           ;lcd.c: 48: if(a & 2)
 11998  15FA  1CF0               	btfss	LCD_Port@a,1
 11999  15FB  2DFE               	goto	l96
 12000                           
 12001                           ;lcd.c: 49: RA6 = 1;
 12002  15FC  170C               	bsf	12,6	;volatile
 12003  15FD  2DFF               	goto	l2103
 12004  15FE                     l96:	
 12005                           
 12006                           ;lcd.c: 50: else
 12007                           ;lcd.c: 51: RA6 = 0;
 12008  15FE  130C               	bcf	12,6	;volatile
 12009  15FF                     l2103:	
 12010                           
 12011                           ;lcd.c: 53: if(a & 4)
 12012  15FF  1D70               	btfss	LCD_Port@a,2
 12013  1600  2E03               	goto	l98
 12014                           
 12015                           ;lcd.c: 54: RC0 = 1;
 12016  1601  140E               	bsf	14,0	;volatile
 12017  1602  2E04               	goto	l2107
 12018  1603                     l98:	
 12019                           
 12020                           ;lcd.c: 55: else
 12021                           ;lcd.c: 56: RC0 = 0;
 12022  1603  100E               	bcf	14,0	;volatile
 12023  1604                     l2107:	
 12024                           
 12025                           ;lcd.c: 58: if(a & 8)
 12026  1604  1DF0               	btfss	LCD_Port@a,3
 12027  1605  2E08               	goto	l100
 12028                           
 12029                           ;lcd.c: 59: RC1 = 1;
 12030  1606  148E               	bsf	14,1	;volatile
 12031  1607  0008               	return
 12032  1608                     l100:	
 12033                           
 12034                           ;lcd.c: 60: else
 12035                           ;lcd.c: 61: RC1 = 0;
 12036  1608  108E               	bcf	14,1	;volatile
 12037  1609  0008               	return
 12038  160A                     __end_of_LCD_Port:	
 12039  007E                     btemp	set	126	;btemp
 12040  007E                     wtemp	set	126
 12041  007E                     wtemp0	set	126
 12042  0080                     wtemp1	set	128
 12043  0082                     wtemp2	set	130
 12044  0084                     wtemp3	set	132
 12045  0086                     wtemp4	set	134
 12046  0088                     wtemp5	set	136
 12047  007F                     wtemp6	set	127
 12048  007E                     ttemp	set	126
 12049  007E                     ttemp0	set	126
 12050  0081                     ttemp1	set	129
 12051  0084                     ttemp2	set	132
 12052  0087                     ttemp3	set	135
 12053  007F                     ttemp4	set	127
 12054  007E                     ltemp	set	126
 12055  007E                     ltemp0	set	126
 12056  0082                     ltemp1	set	130
 12057  0086                     ltemp2	set	134
 12058  0080                     ltemp3	set	128


Data Sizes:
    Strings     111
    Constant    27
    Data        28
    BSS         45
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     76      80
    BANK1            80     32      73
    BANK2            80      0      28
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            48      0       0
    BANK10            0      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 27
		 -> log@coeff(CODE[27]), 

    LCD_Write_String@a	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_40(CODE[5]), STR_39(CODE[4]), STR_38(CODE[6]), STR_37(CODE[3]), 
		 -> STR_36(CODE[12]), STR_35(CODE[16]), STR_34(CODE[12]), STR_33(CODE[16]), 
		 -> STR_32(CODE[17]), STR_31(CODE[9]), STR_30(CODE[17]), STR_29(CODE[11]), 
		 -> STR_28(CODE[17]), STR_27(CODE[11]), STR_26(CODE[2]), STR_25(CODE[2]), 
		 -> STR_24(CODE[2]), STR_23(CODE[2]), STR_22(CODE[2]), STR_21(CODE[2]), 
		 -> STR_20(CODE[2]), STR_19(CODE[2]), STR_18(CODE[2]), STR_17(CODE[2]), 
		 -> STR_16(CODE[2]), STR_15(CODE[2]), STR_14(CODE[2]), STR_13(CODE[2]), 
		 -> STR_12(CODE[2]), STR_11(CODE[2]), STR_10(CODE[2]), STR_9(CODE[2]), 
		 -> STR_8(CODE[2]), STR_7(CODE[2]), STR_6(CODE[2]), STR_5(CODE[2]), 
		 -> STR_4(CODE[2]), STR_3(CODE[2]), STR_2(CODE[2]), STR_1(CODE[2]), 


Critical Paths under _main in COMMON

    _main->___fttol
    _tempCalc->___awtoft
    _log->___awtoft
    ___ftmul->___awtoft
    ___awtoft->___ftpack
    ___ftadd->___awtoft
    ___ftdiv->___awtoft
    _readAnalog->___aldiv
    _SYSTEM_Initialize->_LCD_Init
    _LCD_Init->_LCD_Cmd
    _LCD_Clear->_LCD_Cmd
    _InitCustomChars->_LCD_Write_Char
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Int->___fttol
    _LCD_Write_Char->_LCD_Port
    _LCD_Set_Cursor->_LCD_Cmd
    _LCD_Cmd->_LCD_Port

Critical Paths under _main in BANK0

    _main->_tempCalc
    _tempCalc->_log
    _log->_eval_poly
    _eval_poly->___ftadd
    ___ftsub->___ftadd
    ___ftadd->___ftdiv
    ___ftdiv->___ftmul
    _readAnalog->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                35    35      0   51245
                                             73 BANK0      3     3      0
                                              0 BANK1     32    32      0
                            _ADCRead
                          _LCD_Clear
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                      _LCD_Write_Int
                   _LCD_Write_String
                 _PWM6_LoadDutyValue
                  _SYSTEM_Initialize
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___fttol
                            ___lwdiv
                         _readAnalog
                           _tempCalc
 ---------------------------------------------------------------------------------
 (1) _tempCalc                                            12     9      3   31165
                                             61 BANK0     12     9      3
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftsub
                                _log
 ---------------------------------------------------------------------------------
 (2) _log                                                  6     3      3   16273
                                             55 BANK0      6     3      3
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _frexp                                                6     2      4     330
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) _eval_poly                                           10     3      7    7209
                                             45 BANK0     10     3      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             16    10      6    2749
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6     322
                                              0 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             6     3      3    1904
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3674
                                             45 BANK0      6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             13     7      6    3501
                                             32 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    2729
                                             16 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    1707
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _readAnalog                                          22    20      2    1392
                                              9 COMMON     4     4      0
                                              6 BANK0     18    16      2
                            _ADCRead
                            ___aldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     622
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     406
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _ADCRead                                              4     1      3      22
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              8     4      4     374
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             14    10      4     464
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    3     3      0     709
                                              8 COMMON     3     3      0
                    _ADCC_Initialize
                    _InitCustomChars
                          _LCD_Clear
                           _LCD_Init
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM6_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             4     4      0     220
                                              4 COMMON     4     4      0
                            _LCD_Cmd
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            0     0      0     110
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (2) _InitCustomChars                                      2     2      0     356
                                              5 COMMON     2     2      0
                            _LCD_Cmd
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM6_LoadDutyValue                                   4     2      2     256
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCD_Write_String                                     5     3      2    2388
                                              5 COMMON     5     3      2
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (1) _LCD_Write_Int                                       19    14      5    2759
                                              0 BANK0     19    14      5
                     _LCD_Write_Char
                            ___awdiv
                            ___awmod
                            ___fttol (ARG)
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     402
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     406
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (1) _LCD_Set_Cursor                                       7     6      1    1334
                                              4 COMMON     7     6      1
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (3) _LCD_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (3) _LCD_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCRead
   _LCD_Clear
     _LCD_Cmd
       _LCD_Port
   _LCD_Set_Cursor
     _LCD_Cmd
       _LCD_Port
   _LCD_Write_Char
     _LCD_Port
   _LCD_Write_Int
     _LCD_Write_Char
       _LCD_Port
     ___awdiv
     ___awmod
     ___fttol (ARG)
     ___lwdiv (ARG)
   _LCD_Write_String
     _LCD_Write_Char
       _LCD_Port
   _PWM6_LoadDutyValue
   _SYSTEM_Initialize
     _ADCC_Initialize
     _InitCustomChars
       _LCD_Cmd
         _LCD_Port
       _LCD_Write_Char
         _LCD_Port
     _LCD_Clear
       _LCD_Cmd
         _LCD_Port
     _LCD_Init
       _LCD_Cmd
         _LCD_Port
       _LCD_Port
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM6_Initialize
     _TMR2_Initialize
   ___ftadd
     ___awtoft (ARG)
       ___ftpack
     ___ftdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftpack (ARG)
     ___wmul (ARG)
     _frexp (ARG)
   ___ftdiv
     ___awtoft (ARG)
       ___ftpack
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftpack (ARG)
     ___ftpack (ARG)
   ___ftmul
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)
     _frexp (ARG)
   ___fttol
   ___lwdiv
   _readAnalog
     _ADCRead
     ___aldiv
     ___wmul
   _tempCalc
     ___awtoft
       ___ftpack
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
       _frexp (ARG)
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftsub
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
     _log
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftge
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       _eval_poly
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___wmul
       _frexp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4C      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     20      49       7       91.3%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      1C       9       35.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      C3      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               30      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK10               0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      C3      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Wed Feb 28 17:46:34 2018

                    __CFG_CP$OFF 0000                               l58 15B1                               l94 15F8  
                             l96 15FE                               l98 1603                     ___awdiv@sign 0076  
            ___wmul@multiplicand 0072      __size_of_PWM6_LoadDutyValue 0016                     ___ftadd@exp1 004C  
                   ___ftadd@exp2 004B                      __CFG_LVP$ON 0000                     ___ftadd@sign 004A  
                            l100 1608                              l401 1646                              l291 03D3  
                            l456 099E                              l570 0976                              l562 095B  
                            l653 0A7B                              l569 096E                              l593 00C2  
                            _GIE 005F                              _RA0 0060                              _RA2 0062  
                            _RC0 0070                              _RC1 0071                              _RA6 0066  
                            _RA7 0067                     __CFG_CPD$OFF 0000                              _log 0BC5  
                __end_of_ADCRead 15B8                     ___awmod@sign 0076                  _TMR2_Initialize 159C  
                   __CFG_BORV$LO 0000                              wreg 0009                      main@analogs 00A5  
                __end_of_LCD_Cmd 15DC                     __CFG_ZCD$OFF 0000                     ___ftdiv@cntr 003A  
                 _LCD_Set_Cursor 177F                     ___ftdiv@sign 003F                             l2103 15FF  
                           l2113 1640                             l2201 0C89                             l2107 1604  
                           l2131 004B                             l2141 0061                             l2071 0938  
                           l2135 0052                             l2231 0CF6                             l2223 0CE2  
                           l2207 0C9F                             l3111 04B2                             l3031 03BD  
                           l2081 0960                             l2073 0942                             l2161 0098  
                           l2153 007B                             l3121 04CF                             l3025 039F  
                           l2083 0968                             l2075 0947                             l2067 0931  
                           l2171 00B4                             l2163 009D                             l2235 0CFE  
                           l2219 0CDA                             l2315 1756                             l3203 05CF  
                           l3035 03CA                             l3019 0399                             l2181 00E6  
                           l2173 00BE                             l2165 00A1                             l2333 0922  
                           l3141 04FF                             l3213 05EB                             l2191 0101  
                           l2159 008E                             l3135 04F2                             l2177 00D4  
                           l3129 04E2                             l3081 0452                             l3057 0412  
                           l2099 15FA                             l2603 084A                             l2531 09F8  
                           l2283 1663                             l2291 171F                             l2701 179F  
                           l2605 0856                             l2613 086B                             l2517 09BF  
                           l2509 09AF                             l3253 06C7                             l3181 057E  
                           l3157 0540                             l2375 1697                             l2535 0A06  
                           l2527 09ED                             l2519 09CD                             l2295 1735  
                           l3175 056E                             l3167 055C                             l2553 088D  
                           l2617 0873                             l2609 0862                             l2369 1686  
                           l2633 0B49                             l3281 07B5                             l2571 08B3  
                           l2563 0895                             l2547 0882                             l2731 0D48  
                           l2627 0B33                             l2483 0BE3                             l3283 07B6  
                           l3187 058E                             l2565 08A1                             l2741 0D4F  
                           l2717 160C                             l3277 07A9                             l3269 07A0  
                           l2575 08BC                             l2591 083D                             l2751 0D8E  
                           l2743 0D7E                             l2655 0BA3                             l2647 0B8A  
                           l2761 0DCE                             l2753 0D9E                             l2817 0A27  
                           l2489 0BF4                             l2579 08C4                             l2595 0844  
                           l2747 0D82                             l2843 0A72                             l2835 0A57  
                           l2667 000D                             l2765 0DDC                             l2749 0D86  
                           l2845 0A7E                             l2837 0A65                             l2685 0FD8  
                           l2759 0DA2                             l2871 16C5                             l2863 16A7  
                           l2849 0A8C                             l2865 16B3                             l2875 16CE  
                           ?_log 0057                             STR_1 1074                             STR_2 1080  
                           STR_3 1082                             STR_4 107A                             STR_5 1074  
                           STR_6 103A                             STR_7 1076                             STR_8 1074  
                           STR_9 1088                             u2105 00A2                             u3005 0DBC  
                           u2045 007C                             u2205 0CAB                             _LATA 0016  
                           _LATB 0017                             u2135 00B5                             u2215 0CBB  
                           _LATC 0018                             u2400 1707                             u2305 0817  
                           u3210 0127                             u3035 15EB                             u3115 0A73  
                           u2075 008F                             u2235 0CE3                             u2245 0CE9  
                           u3055 0A2E                             u2505 09E2                             _T2PR 028D  
                           u3155 16AA                             u2515 09EE                             u2275 0CFF  
                           u2605 08AC                             u3085 0A58                             u2285 0D05  
                           u2615 08B4                             u3175 16B4                             u1815 0963  
                           u2705 0863                             u3185 16BE                             u3195 16C6  
                           u2475 09C2                             u3507 0174                             u1925 1647  
                           u3517 0189                             u2575 0898                             u2495 09CE  
                           u1935 164C                             u1855 097D                             u1775 093D  
                           u3607 0246                             u3527 019E                             u2905 178B  
                           u2825 0EE5                             u3617 025B                             u3537 01B3  
                           u2595 08A2                             u2675 084D                             u2835 0F33  
                           u1795 0956                             u2755 0B5B                             u3707 031E  
                           u3627 0276                             u3547 01C8                             u2940 0D31  
                           u2925 17AA                             u2845 0F6C                             u2765 0B6B  
                           u3717 0333                             u3637 028B                             u3557 01DD  
                           u2695 085C                             u2855 0FAF                             u2775 0B8B  
                           u3807 05E0                             u3727 0348                             u3647 02A0  
                           u3567 01F2                             u3817 17D9                             u2865 0FC8  
                           u2785 0B9A                             u3737 035D                             u3657 02B5  
                           u3577 0207                             u3497 0157                             u3907 0AE9  
                           u3827 17E9                             u2795 0BA4                             u3747 0372  
                           u3667 02CA                             u3587 021C                             u3917 0AF9  
                           u3837 17F8                             u2885 0FE4                             u3757 0387  
                           u3677 02DF                             u3597 0231                             u3927 0B08  
                           u3847 0AA0                             u3767 0409                             u3687 02F4  
                           u3937 0B17                             u3857 0AAE                             u3777 0449  
                           u3697 0309                             u3947 0823                             u3867 0AB9  
                           u3787 04A9                             u3957 082F                             u3877 0AC3  
                           u3797 0551                             u3967 15D6                             u3887 0ACD  
                           u3897 0ADB              tempCalc@analogValue 005D                             _WPUA 0F39  
                           _WPUB 0F44                             _WPUC 0F4F                             _WPUE 0F65  
                   __CFG_WRT$OFF 0000                    __CFG_FCMEN$ON 0000                ?_LCD_Write_String 0075  
                           _main 0119                     ___ftpack@arg 0070               __size_of_LCD_Clear 0008  
                   ___ftpack@exp 0073                             fsr0h 0005                             fsr1h 0007  
                           fsr0l 0004                             indf0 0000                             indf1 0001  
                           fsr1l 0006                             btemp 007E                             log@x 0057  
                  __CFG_BOREN$ON 0000                             ltemp 007E                             start 0002  
             ??_LCD_Write_String 0077                             ttemp 007E                             wtemp 007E  
                  __CFG_CSWEN$ON 0000                    __CFG_MCLRE$ON 0000                     ___ftmul@cntr 002E  
                  _LCD_Write_Int 0D26                     ___ftmul@sign 002F                     ___fttol@exp1 007D  
                          ??_log 005A                     ___fttol@lval 0079                 __end_of_LCD_Init 0B1C  
               __end_of_LCD_Port 160A   __size_of_OSCILLATOR_Initialize 0009    __end_of_OSCILLATOR_Initialize 156D  
                __end_of___aldiv 0A0F                            _ADACQ 009D                            _ADCAP 009B  
                          _ADACT 0099                            ?_main 0070                            _ADCLK 0098  
                          _ADPCH 009E                            _ADREF 009A                  __end_of___awdiv 08C9  
                          _ADPRE 009C                  __end_of___ftadd 0119                            STR_10 107C  
                          STR_11 1076                            STR_12 1072                            STR_20 1070  
                          STR_21 103A                            STR_13 1086                            STR_14 1082  
                          STR_30 101B                            STR_22 107E                            STR_23 107C  
                          STR_15 1084                            STR_31 1053                            STR_24 1076  
                          STR_16 107A                            STR_32 101B                            STR_40 1062  
                          STR_17 107C                            STR_25 1086                            STR_33 102C  
                  __CFG_WDTE$OFF 0000                            STR_18 1078                            STR_26 106E  
                          STR_34 103C                            STR_19 103A                            STR_35 102C  
                          STR_27 1048                            STR_36 103C                            STR_28 101B  
                __end_of___awmod 0878                            STR_29 1048                            STR_37 106B  
                          STR_38 105C                            STR_39 1067                            _ADRPT 010D  
                __end_of___ftdiv 0BC5                  __end_of___ftmul 0D26                  ___awdiv@divisor 0070  
                __end_of___ftsub 0023                  __end_of___fttol 0A95                            _T2CON 028E  
                          _T2HLT 028F                  __end_of___lwdiv 16D3                            _T2TMR 028C  
                          _T2RST 0291                  ___awdiv@counter 0075                            _OSCEN 0891  
                          _TRISA 0011                            _TRISB 0012                            _TRISC 0013  
                _PWM6_Initialize 156D           __end_of_LCD_Set_Cursor 17BE                    ___awtoft@sign 007D  
                          _frexp 1744                            _errno 006C                    ___ftpack@sign 0074  
                          main@x 00BD                            ltemp0 007E                            ltemp1 0082  
                          ltemp2 0086                            ltemp3 0080                            ttemp0 007E  
                          ttemp1 0081                            ttemp2 0084                            ttemp3 0087  
                          ttemp4 007F                            status 0003                            wtemp0 007E  
                          wtemp1 0080                            wtemp2 0082                            wtemp3 0084  
                          wtemp4 0086                            wtemp5 0088                            wtemp6 007F  
               InitCustomChars@i 0076                   ?_LCD_Write_Int 0020                   _LCD_Write_Char 0807  
                __initialization 07BD                      log@exponent 005B                     __end_of_main 07BD  
              readAnalog@channel 0026          __end_of_TMR2_Initialize 15AA                        ??_ADCRead 0073  
                  main@tPadCount 00BA                           ??_main 0069                    ___fttol@sign1 0078  
              __end_of_LCD_Clear 1564                        ??_LCD_Cmd 0071                  ?_LCD_Set_Cursor 0074  
                         _ADCON0 0093                           _ADCON1 0094                           _ADCON2 0095  
                         _ADCON3 0096                           ?_frexp 0070                           _ADLTHH 010F  
                         _ADLTHL 010E                           _ADRESH 008D                           _ADRESL 008C  
                         _ADSTAT 0097                           _ADUTHH 0111                 ___awdiv@dividend 0072  
                         _ADUTHL 0110                 __end_of___awtoft 1679                           _ANSELA 0F38  
                         _ANSELB 0F43                           _ANSELC 0F4E                 __end_of___ftpack 098D  
                         _RC2PPS 0F22                   __CFG_WDTCCS$SC 0000                           _FVRCON 090C  
                         _OSCFRQ 0893                    main@dutyCycle 00BE           __end_of_LCD_Write_Char 0833  
                 __CFG_PWRTE$OFF 0000                     _CCPTMRS1bits 021F                           ___ftge 1709  
         LCD_Write_Int@numPlaces 0023                        ??___aldiv 0078                           ___wmul 163E  
                      ??___awdiv 0074                        ??___ftadd 0046                   __CFG_STVREN$ON 0000  
                      ??___awmod 0074                        ??___ftdiv 0036                        ??___ftmul 0026  
                      ??___ftsub 007E                        ??___fttol 0074                        ??___lwdiv 0074  
        __end_of_PWM6_Initialize 1578                 ___awdiv@quotient 0077                  ___awmod@divisor 0070  
                ___awmod@counter 0075                           _totals 00C0            ___ftmul@f3_as_product 002B  
               __end_of_tempCalc 0ED0                  _ADCC_Initialize 1624                 LCD_Write_Int@str 002A  
                _InitCustomChars 1679                  LCD_Set_Cursor@w 0079                  LCD_Set_Cursor@x 0077  
                LCD_Set_Cursor@y 0074                  LCD_Set_Cursor@z 0078         readAnalog@analog_channel 0079  
              _SYSTEM_Initialize 17BE                 __end_oflog@coeff 101B          __end_of__initialization 07FD  
                      ?_LCD_Init 0070                        ?_LCD_Port 0070                       ___ftadd@f1 0040  
                     ___ftadd@f2 0043                       ___ftge@ff1 0070                       ___ftge@ff2 0073  
                ??_LCD_Write_Int 0025               ?_SYSTEM_Initialize 0070                     eval_poly@res 0054  
                     ___ftdiv@f1 0033                       ___ftdiv@f2 0030                       ___ftdiv@f3 003B  
                ?_LCD_Write_Char 0070                    LCD_Init@style 0077                       ___awtoft@c 0078  
                     ___ftmul@f1 0020                       ___ftmul@f2 0023                       ___ftsub@f1 0050  
                     ___ftsub@f2 004D                       ___fttol@f1 0070                   __pcstackCOMMON 0070  
                      LCD_Port@a 0070                     __pidataBANK1 1590                     __pidataBANK2 15B8  
            ??_SYSTEM_Initialize 0078                    __end_of_frexp 177F                 ?_TMR2_Initialize 0070  
                        ??_frexp 0074        __end_of_SYSTEM_Initialize 1800                       __pbssBANK0 006C  
                     __pbssBANK1 00C0                       __pbssBANK2 0130               __size_of_eval_poly 0060  
                     ??_LCD_Init 0074                       ??_LCD_Port 0070                       __pmaintext 0119  
                        ?___ftge 0070                          ?___wmul 0070                  __CFG_PPS1WAY$ON 0000  
        __end_of_ADCC_Initialize 163E       __end_of_PWM6_LoadDutyValue 15F2                          _ADCRead 15AA  
      __size_of_LCD_Write_String 001A                 ?_PWM6_Initialize 0070                        ?___awtoft 0078  
                      ?___ftpack 0070                          _ADSTPTH 0113                          _ADSTPTL 0112  
       __CFG_SCANE$not_available 0000              __CFG_RSTOSC$HFINT32 0000                 main@displayTemp2 00B6  
        __end_of_InitCustomChars 169F                          _LCD_Cmd 15C8                          _OSCCON1 088D  
                        _OSCCON3 088F                          _OSCTUNE 0892                          _PWM6DCH 038D  
                        _PWM6DCL 038C                          _PWM6CON 038E                          _PPSLOCK 0E8F  
                      ?_tempCalc 005D                       _readAnalog 0ED0                          ___aldiv 098D  
                        ___cgram 0120                  __size_of___ftge 003B                          ___awdiv 0878  
                        ___ftadd 0023                          ___awmod 0833                          ___ftdiv 0B1C  
                __size_of___wmul 001B                          ___ftmul 0C72                          ___ftsub 0005  
                        ___fttol 0A0F                          ___lwdiv 169F                       ??___awtoft 007B  
                     ??___ftpack 0075                __end_of_eval_poly 0929                 ??_LCD_Set_Cursor 0075  
                        __ptext1 0DF1                          __ptext2 0BC5                          __ptext3 1744  
                        __ptext4 08C9                          __ptext5 0C72                          __ptext6 1709  
                        __ptext7 1659                          __ptext8 0005                          __ptext9 0023  
                 main@resetDelay 00B9            _OSCILLATOR_Initialize 1564                        _T2CONbits 028E  
                   __size_of_log 00AD                 ___awmod@dividend 0072                   ADCRead@channel 0073  
               ___aldiv@dividend 0074         ??_PIN_MANAGER_Initialize 0070                          _samples 2300  
                      _LCD_Clear 155C       __size_of_SYSTEM_Initialize 0042                          clrloop0 1579  
           end_of_initialization 07FD                          init_ram 1584                          initloop 1585  
                     ??_tempCalc 007E                 ___aldiv@quotient 0022                   main@startDelay 00A4  
              LCD_Write_Int@sign 0024                       main@F13657 0130                     __pstringtext 1000  
               ?_ADCC_Initialize 0070            __CFG_WDTCPS$WDTCPS_31 0000                 ?_InitCustomChars 0070  
                     main@C_or_F 00BC                       ?_LCD_Clear 0070                 __CFG_FEXTOSC$OFF 0000  
                     main@bCount 00B1                LCD_Write_String@a 0075                LCD_Write_String@i 0078  
               ??_LCD_Write_Char 0071                       main@choice 00BB                      ___ftdiv@exp 003E  
              __size_of_LCD_Init 0087                __size_of_LCD_Port 0018                      ___ftmul@exp 002A  
                    ?_readAnalog 0026                   __end_of___ftge 1744                   __end_of___wmul 1659  
               _LCD_Write_String 160A           ?_OSCILLATOR_Initialize 0070              start_initialization 07BD  
                     eval_poly@d 0050                       eval_poly@n 0052                       eval_poly@x 004D  
__size_of_PIN_MANAGER_Initialize 0036                      __end_of_log 0C72                       frexp@value 0070  
       LCD_Write_Int@fieldLength 0022            __end_of_LCD_Write_Int 0DF1                 __CFG_LPBOREN$OFF 0000  
                       ??___ftge 0076                tempCalc@steinhart 0066                         ??___wmul 0074  
                    __pdataBANK1 00DD                      __pdataBANK2 0120                  LCD_Write_Char@a 0074  
                LCD_Write_Char@y 0073                         ?_ADCRead 0070                         ?_LCD_Cmd 0070  
              __size_of___awtoft 0020                __size_of___ftpack 0064                      __pbssBIGRAM 2300  
                       LCD_Cmd@a 0073                        ___latbits 0002                    __pcstackBANK0 0020  
                  __pcstackBANK1 00A0               _PWM6_LoadDutyValue 15DC         __size_of_TMR2_Initialize 000E  
                    ??_LCD_Clear 0074              __size_of_readAnalog 0130              ?_PWM6_LoadDutyValue 0070  
               ___lwdiv@dividend 0072           _PIN_MANAGER_Initialize 16D3                         ?___aldiv 0070  
              __size_of_tempCalc 00DF                         ?___awdiv 0070                         ?___ftadd 0040  
                       ?___awmod 0070                         ?___ftdiv 0030                         ?___ftmul 0020  
                       ?___ftsub 004D                         ?___fttol 0070                         ?___lwdiv 0070  
                main@displayTemp 00B3             ??_PWM6_LoadDutyValue 0072                        _eval_poly 08C9  
       __size_of_PWM6_Initialize 000B                 ___lwdiv@quotient 0075                   __size_of_frexp 003B  
                       _T2CLKCON 0290                  ___aldiv@divisor 0070                  ___aldiv@counter 0020  
                       _LCD_Init 0A95                   ___wmul@product 0074                         _LCD_Port 15F2  
                      clear_ram0 1578                         _PIE0bits 0716                         _PIR4bits 0710  
               __size_of_ADCRead 000E                       _ADCON0bits 0093                ___wmul@multiplier 0070  
                     ?_eval_poly 004D                 __size_of_LCD_Cmd 0014         __end_of_LCD_Write_String 1624  
              ??_TMR2_Initialize 0070                  readAnalog@value 007B                        frexp@eptr 0073  
                   ??_readAnalog 0028                     _tempCalc$990 0063          ??_OSCILLATOR_Initialize 0070  
                 LCD_Write_Int@i 0031                   LCD_Write_Int@j 002F                 __size_of___aldiv 0082  
               __size_of___awdiv 0051                 __size_of___ftadd 00F6                 __size_of___awmod 0045  
               __size_of___ftdiv 00A9                 __size_of___ftmul 00B4                 __size_of___ftsub 001E  
               __size_of___fttol 0086                 __size_of___lwdiv 0034                         ___awtoft 1659  
                       ___ftpack 0929         __size_of_ADCC_Initialize 001A                         _channels 00DD  
                       _main$991 00A0                  ___lwdiv@divisor 0070                  ___lwdiv@counter 0077  
                       __ptext10 0B1C                         __ptext11 0929                         __ptext20 156D  
                       __ptext12 0ED0                         __ptext21 16D3                         __ptext13 163E  
                       __ptext30 0833                         __ptext22 1564                         __ptext14 098D  
                       __ptext31 0878                         __ptext23 0A95                         __ptext15 15AA  
                       __ptext32 0807                         __ptext24 155C                         __ptext16 169F  
                       __ptext33 177F                         __ptext25 1679                         __ptext17 0A0F  
                       __ptext34 15C8                         __ptext26 1624                         __ptext18 17BE  
                       __ptext35 15F2                         __ptext27 15DC                         __ptext19 159C  
                       __ptext28 160A                         __ptext29 0D26               __end_of_readAnalog 1000  
        __size_of_LCD_Set_Cursor 003F                        tempCalc@R 0060         __size_of_InitCustomChars 0026  
            LCD_Write_Int@F13687 00D8                ??_PWM6_Initialize 0070                    __size_of_main 06A4  
           __CFG_WDTCWS$WDTCWS_7 0000                         _tempCalc 0DF1                         main@loop 00A3  
    PIN_MANAGER_Initialize@state 0070                         log@coeff 1000                      ??_eval_poly 007E  
                    _sampleIndex 006E               LCD_Write_Char@temp 0072          ?_PIN_MANAGER_Initialize 0070  
              __CFG_CLKOUTEN$OFF 0000                      _PPSLOCKbits 0E8F          __size_of_LCD_Write_Char 002C  
             LCD_Set_Cursor@temp 007A               LCD_Write_Int@value 0020                     ___aldiv@sign 0021  
    PWM6_LoadDutyValue@dutyCycle 0070           __size_of_LCD_Write_Int 00CB   __end_of_PIN_MANAGER_Initialize 1709  
              ??_ADCC_Initialize 0070                ??_InitCustomChars 0075  
