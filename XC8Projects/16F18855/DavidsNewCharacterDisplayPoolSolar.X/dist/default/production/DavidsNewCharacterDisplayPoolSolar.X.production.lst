

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Wed Jan 24 03:40:56 2018

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	stringtext,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	psect	text32,local,class=CODE,merge=1,delta=2
    51                           	psect	text33,local,class=CODE,merge=1,delta=2
    52                           	psect	text34,local,class=CODE,merge=1,delta=2
    53                           	dabs	1,0x7E,2
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  0010                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0013                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  001C                     	;# 
    77  001C                     	;# 
    78  001D                     	;# 
    79  001D                     	;# 
    80  001E                     	;# 
    81  001F                     	;# 
    82  008C                     	;# 
    83  008C                     	;# 
    84  008D                     	;# 
    85  008E                     	;# 
    86  008E                     	;# 
    87  008F                     	;# 
    88  0090                     	;# 
    89  0090                     	;# 
    90  0091                     	;# 
    91  0093                     	;# 
    92  0094                     	;# 
    93  0095                     	;# 
    94  0096                     	;# 
    95  0097                     	;# 
    96  0098                     	;# 
    97  0099                     	;# 
    98  009A                     	;# 
    99  009B                     	;# 
   100  009C                     	;# 
   101  009D                     	;# 
   102  009E                     	;# 
   103  010C                     	;# 
   104  010D                     	;# 
   105  010E                     	;# 
   106  010E                     	;# 
   107  010F                     	;# 
   108  0110                     	;# 
   109  0110                     	;# 
   110  0111                     	;# 
   111  0112                     	;# 
   112  0112                     	;# 
   113  0113                     	;# 
   114  0114                     	;# 
   115  0114                     	;# 
   116  0115                     	;# 
   117  0116                     	;# 
   118  0116                     	;# 
   119  0117                     	;# 
   120  0119                     	;# 
   121  0119                     	;# 
   122  0119                     	;# 
   123  011A                     	;# 
   124  011A                     	;# 
   125  011A                     	;# 
   126  011B                     	;# 
   127  011B                     	;# 
   128  011B                     	;# 
   129  011B                     	;# 
   130  011B                     	;# 
   131  011C                     	;# 
   132  011C                     	;# 
   133  011C                     	;# 
   134  011D                     	;# 
   135  011D                     	;# 
   136  011D                     	;# 
   137  011E                     	;# 
   138  011E                     	;# 
   139  011E                     	;# 
   140  011F                     	;# 
   141  011F                     	;# 
   142  011F                     	;# 
   143  011F                     	;# 
   144  011F                     	;# 
   145  018C                     	;# 
   146  018D                     	;# 
   147  018E                     	;# 
   148  018F                     	;# 
   149  0190                     	;# 
   150  0191                     	;# 
   151  0192                     	;# 
   152  0196                     	;# 
   153  0197                     	;# 
   154  0198                     	;# 
   155  0199                     	;# 
   156  019A                     	;# 
   157  019B                     	;# 
   158  019C                     	;# 
   159  020C                     	;# 
   160  020D                     	;# 
   161  020E                     	;# 
   162  020F                     	;# 
   163  020F                     	;# 
   164  0210                     	;# 
   165  0210                     	;# 
   166  0211                     	;# 
   167  0211                     	;# 
   168  0212                     	;# 
   169  0213                     	;# 
   170  0214                     	;# 
   171  0215                     	;# 
   172  0215                     	;# 
   173  0216                     	;# 
   174  0216                     	;# 
   175  0217                     	;# 
   176  0217                     	;# 
   177  0218                     	;# 
   178  0219                     	;# 
   179  021A                     	;# 
   180  021B                     	;# 
   181  021B                     	;# 
   182  021C                     	;# 
   183  021C                     	;# 
   184  021D                     	;# 
   185  021D                     	;# 
   186  021E                     	;# 
   187  021F                     	;# 
   188  028C                     	;# 
   189  028C                     	;# 
   190  028D                     	;# 
   191  028D                     	;# 
   192  028E                     	;# 
   193  028F                     	;# 
   194  0290                     	;# 
   195  0290                     	;# 
   196  0291                     	;# 
   197  0292                     	;# 
   198  0292                     	;# 
   199  0293                     	;# 
   200  0293                     	;# 
   201  0294                     	;# 
   202  0295                     	;# 
   203  0296                     	;# 
   204  0296                     	;# 
   205  0297                     	;# 
   206  0298                     	;# 
   207  0298                     	;# 
   208  0299                     	;# 
   209  0299                     	;# 
   210  029A                     	;# 
   211  029B                     	;# 
   212  029C                     	;# 
   213  029C                     	;# 
   214  029D                     	;# 
   215  030C                     	;# 
   216  030C                     	;# 
   217  030D                     	;# 
   218  030E                     	;# 
   219  030F                     	;# 
   220  0310                     	;# 
   221  0310                     	;# 
   222  0311                     	;# 
   223  0312                     	;# 
   224  0313                     	;# 
   225  0314                     	;# 
   226  0314                     	;# 
   227  0315                     	;# 
   228  0316                     	;# 
   229  0317                     	;# 
   230  0318                     	;# 
   231  0318                     	;# 
   232  0319                     	;# 
   233  031A                     	;# 
   234  031B                     	;# 
   235  031C                     	;# 
   236  031C                     	;# 
   237  031D                     	;# 
   238  031E                     	;# 
   239  031F                     	;# 
   240  038C                     	;# 
   241  038D                     	;# 
   242  038E                     	;# 
   243  0390                     	;# 
   244  0391                     	;# 
   245  0392                     	;# 
   246  040C                     	;# 
   247  040D                     	;# 
   248  040E                     	;# 
   249  040F                     	;# 
   250  0410                     	;# 
   251  0411                     	;# 
   252  0416                     	;# 
   253  0416                     	;# 
   254  0417                     	;# 
   255  0418                     	;# 
   256  0418                     	;# 
   257  0419                     	;# 
   258  041A                     	;# 
   259  041A                     	;# 
   260  041B                     	;# 
   261  041C                     	;# 
   262  041C                     	;# 
   263  041D                     	;# 
   264  041E                     	;# 
   265  041F                     	;# 
   266  048C                     	;# 
   267  048C                     	;# 
   268  048D                     	;# 
   269  048E                     	;# 
   270  048F                     	;# 
   271  048F                     	;# 
   272  0490                     	;# 
   273  0491                     	;# 
   274  0492                     	;# 
   275  0492                     	;# 
   276  0493                     	;# 
   277  0494                     	;# 
   278  0495                     	;# 
   279  0495                     	;# 
   280  0496                     	;# 
   281  0497                     	;# 
   282  0498                     	;# 
   283  0499                     	;# 
   284  049A                     	;# 
   285  049B                     	;# 
   286  049C                     	;# 
   287  049D                     	;# 
   288  050C                     	;# 
   289  050C                     	;# 
   290  050D                     	;# 
   291  050E                     	;# 
   292  050F                     	;# 
   293  050F                     	;# 
   294  0510                     	;# 
   295  0511                     	;# 
   296  0512                     	;# 
   297  0512                     	;# 
   298  0513                     	;# 
   299  0514                     	;# 
   300  0515                     	;# 
   301  0515                     	;# 
   302  0516                     	;# 
   303  0517                     	;# 
   304  0518                     	;# 
   305  0519                     	;# 
   306  051A                     	;# 
   307  051B                     	;# 
   308  051C                     	;# 
   309  051D                     	;# 
   310  058C                     	;# 
   311  058C                     	;# 
   312  058D                     	;# 
   313  058E                     	;# 
   314  058F                     	;# 
   315  058F                     	;# 
   316  0590                     	;# 
   317  0591                     	;# 
   318  0592                     	;# 
   319  0593                     	;# 
   320  060C                     	;# 
   321  060D                     	;# 
   322  060E                     	;# 
   323  060F                     	;# 
   324  0610                     	;# 
   325  0611                     	;# 
   326  0612                     	;# 
   327  0613                     	;# 
   328  0614                     	;# 
   329  0616                     	;# 
   330  0617                     	;# 
   331  0618                     	;# 
   332  0619                     	;# 
   333  061A                     	;# 
   334  061B                     	;# 
   335  061C                     	;# 
   336  061D                     	;# 
   337  061E                     	;# 
   338  068C                     	;# 
   339  068D                     	;# 
   340  068E                     	;# 
   341  068F                     	;# 
   342  0690                     	;# 
   343  0691                     	;# 
   344  0692                     	;# 
   345  0693                     	;# 
   346  0694                     	;# 
   347  070C                     	;# 
   348  070D                     	;# 
   349  070E                     	;# 
   350  070F                     	;# 
   351  0710                     	;# 
   352  0711                     	;# 
   353  0712                     	;# 
   354  0713                     	;# 
   355  0714                     	;# 
   356  0716                     	;# 
   357  0717                     	;# 
   358  0718                     	;# 
   359  0719                     	;# 
   360  071A                     	;# 
   361  071B                     	;# 
   362  071C                     	;# 
   363  071D                     	;# 
   364  071E                     	;# 
   365  0796                     	;# 
   366  0797                     	;# 
   367  0798                     	;# 
   368  0799                     	;# 
   369  079A                     	;# 
   370  079B                     	;# 
   371  080C                     	;# 
   372  080D                     	;# 
   373  080E                     	;# 
   374  080F                     	;# 
   375  0810                     	;# 
   376  0811                     	;# 
   377  0812                     	;# 
   378  0813                     	;# 
   379  0814                     	;# 
   380  081A                     	;# 
   381  081B                     	;# 
   382  081C                     	;# 
   383  081D                     	;# 
   384  081E                     	;# 
   385  081F                     	;# 
   386  088C                     	;# 
   387  088D                     	;# 
   388  088E                     	;# 
   389  088F                     	;# 
   390  0890                     	;# 
   391  0891                     	;# 
   392  0892                     	;# 
   393  0893                     	;# 
   394  0895                     	;# 
   395  0896                     	;# 
   396  0897                     	;# 
   397  0898                     	;# 
   398  0899                     	;# 
   399  089A                     	;# 
   400  089B                     	;# 
   401  090C                     	;# 
   402  090E                     	;# 
   403  090F                     	;# 
   404  091F                     	;# 
   405  091F                     	;# 
   406  098F                     	;# 
   407  098F                     	;# 
   408  0990                     	;# 
   409  0991                     	;# 
   410  0992                     	;# 
   411  0993                     	;# 
   412  0994                     	;# 
   413  0995                     	;# 
   414  0996                     	;# 
   415  0997                     	;# 
   416  0E0F                     	;# 
   417  0E10                     	;# 
   418  0E11                     	;# 
   419  0E12                     	;# 
   420  0E13                     	;# 
   421  0E14                     	;# 
   422  0E15                     	;# 
   423  0E16                     	;# 
   424  0E17                     	;# 
   425  0E18                     	;# 
   426  0E19                     	;# 
   427  0E1A                     	;# 
   428  0E1B                     	;# 
   429  0E1C                     	;# 
   430  0E1D                     	;# 
   431  0E1E                     	;# 
   432  0E1F                     	;# 
   433  0E20                     	;# 
   434  0E21                     	;# 
   435  0E22                     	;# 
   436  0E23                     	;# 
   437  0E24                     	;# 
   438  0E25                     	;# 
   439  0E26                     	;# 
   440  0E27                     	;# 
   441  0E28                     	;# 
   442  0E29                     	;# 
   443  0E2A                     	;# 
   444  0E2B                     	;# 
   445  0E2C                     	;# 
   446  0E2D                     	;# 
   447  0E2E                     	;# 
   448  0E2F                     	;# 
   449  0E30                     	;# 
   450  0E31                     	;# 
   451  0E32                     	;# 
   452  0E33                     	;# 
   453  0E34                     	;# 
   454  0E35                     	;# 
   455  0E36                     	;# 
   456  0E37                     	;# 
   457  0E8F                     	;# 
   458  0E90                     	;# 
   459  0E91                     	;# 
   460  0E92                     	;# 
   461  0E93                     	;# 
   462  0E94                     	;# 
   463  0E95                     	;# 
   464  0E96                     	;# 
   465  0E97                     	;# 
   466  0E9C                     	;# 
   467  0E9D                     	;# 
   468  0E9E                     	;# 
   469  0EA1                     	;# 
   470  0EA2                     	;# 
   471  0EA3                     	;# 
   472  0EA4                     	;# 
   473  0EA5                     	;# 
   474  0EA9                     	;# 
   475  0EAA                     	;# 
   476  0EAB                     	;# 
   477  0EAC                     	;# 
   478  0EB1                     	;# 
   479  0EB2                     	;# 
   480  0EB3                     	;# 
   481  0EB8                     	;# 
   482  0EB9                     	;# 
   483  0EBA                     	;# 
   484  0EBB                     	;# 
   485  0EBC                     	;# 
   486  0EBD                     	;# 
   487  0EBE                     	;# 
   488  0EC3                     	;# 
   489  0EC5                     	;# 
   490  0EC6                     	;# 
   491  0EC7                     	;# 
   492  0EC8                     	;# 
   493  0EC9                     	;# 
   494  0ECA                     	;# 
   495  0ECB                     	;# 
   496  0ECC                     	;# 
   497  0F10                     	;# 
   498  0F11                     	;# 
   499  0F12                     	;# 
   500  0F13                     	;# 
   501  0F14                     	;# 
   502  0F15                     	;# 
   503  0F16                     	;# 
   504  0F17                     	;# 
   505  0F18                     	;# 
   506  0F19                     	;# 
   507  0F1A                     	;# 
   508  0F1B                     	;# 
   509  0F1C                     	;# 
   510  0F1D                     	;# 
   511  0F1E                     	;# 
   512  0F1F                     	;# 
   513  0F20                     	;# 
   514  0F21                     	;# 
   515  0F22                     	;# 
   516  0F23                     	;# 
   517  0F24                     	;# 
   518  0F25                     	;# 
   519  0F26                     	;# 
   520  0F27                     	;# 
   521  0F38                     	;# 
   522  0F39                     	;# 
   523  0F3A                     	;# 
   524  0F3B                     	;# 
   525  0F3C                     	;# 
   526  0F3D                     	;# 
   527  0F3E                     	;# 
   528  0F3F                     	;# 
   529  0F40                     	;# 
   530  0F41                     	;# 
   531  0F43                     	;# 
   532  0F44                     	;# 
   533  0F45                     	;# 
   534  0F46                     	;# 
   535  0F47                     	;# 
   536  0F48                     	;# 
   537  0F49                     	;# 
   538  0F4A                     	;# 
   539  0F4B                     	;# 
   540  0F4C                     	;# 
   541  0F4E                     	;# 
   542  0F4F                     	;# 
   543  0F50                     	;# 
   544  0F51                     	;# 
   545  0F52                     	;# 
   546  0F53                     	;# 
   547  0F54                     	;# 
   548  0F55                     	;# 
   549  0F56                     	;# 
   550  0F57                     	;# 
   551  0F65                     	;# 
   552  0F68                     	;# 
   553  0F69                     	;# 
   554  0F6A                     	;# 
   555  0F6B                     	;# 
   556  0FE4                     	;# 
   557  0FE5                     	;# 
   558  0FE6                     	;# 
   559  0FE7                     	;# 
   560  0FE8                     	;# 
   561  0FE9                     	;# 
   562  0FEA                     	;# 
   563  0FEB                     	;# 
   564  0FED                     	;# 
   565  0FEE                     	;# 
   566  0FEF                     	;# 
   567  0000                     	;# 
   568  0001                     	;# 
   569  0002                     	;# 
   570  0003                     	;# 
   571  0004                     	;# 
   572  0005                     	;# 
   573  0006                     	;# 
   574  0007                     	;# 
   575  0008                     	;# 
   576  0009                     	;# 
   577  000A                     	;# 
   578  000B                     	;# 
   579  000C                     	;# 
   580  000D                     	;# 
   581  000E                     	;# 
   582  0010                     	;# 
   583  0011                     	;# 
   584  0012                     	;# 
   585  0013                     	;# 
   586  0016                     	;# 
   587  0017                     	;# 
   588  0018                     	;# 
   589  001C                     	;# 
   590  001C                     	;# 
   591  001D                     	;# 
   592  001D                     	;# 
   593  001E                     	;# 
   594  001F                     	;# 
   595  008C                     	;# 
   596  008C                     	;# 
   597  008D                     	;# 
   598  008E                     	;# 
   599  008E                     	;# 
   600  008F                     	;# 
   601  0090                     	;# 
   602  0090                     	;# 
   603  0091                     	;# 
   604  0093                     	;# 
   605  0094                     	;# 
   606  0095                     	;# 
   607  0096                     	;# 
   608  0097                     	;# 
   609  0098                     	;# 
   610  0099                     	;# 
   611  009A                     	;# 
   612  009B                     	;# 
   613  009C                     	;# 
   614  009D                     	;# 
   615  009E                     	;# 
   616  010C                     	;# 
   617  010D                     	;# 
   618  010E                     	;# 
   619  010E                     	;# 
   620  010F                     	;# 
   621  0110                     	;# 
   622  0110                     	;# 
   623  0111                     	;# 
   624  0112                     	;# 
   625  0112                     	;# 
   626  0113                     	;# 
   627  0114                     	;# 
   628  0114                     	;# 
   629  0115                     	;# 
   630  0116                     	;# 
   631  0116                     	;# 
   632  0117                     	;# 
   633  0119                     	;# 
   634  0119                     	;# 
   635  0119                     	;# 
   636  011A                     	;# 
   637  011A                     	;# 
   638  011A                     	;# 
   639  011B                     	;# 
   640  011B                     	;# 
   641  011B                     	;# 
   642  011B                     	;# 
   643  011B                     	;# 
   644  011C                     	;# 
   645  011C                     	;# 
   646  011C                     	;# 
   647  011D                     	;# 
   648  011D                     	;# 
   649  011D                     	;# 
   650  011E                     	;# 
   651  011E                     	;# 
   652  011E                     	;# 
   653  011F                     	;# 
   654  011F                     	;# 
   655  011F                     	;# 
   656  011F                     	;# 
   657  011F                     	;# 
   658  018C                     	;# 
   659  018D                     	;# 
   660  018E                     	;# 
   661  018F                     	;# 
   662  0190                     	;# 
   663  0191                     	;# 
   664  0192                     	;# 
   665  0196                     	;# 
   666  0197                     	;# 
   667  0198                     	;# 
   668  0199                     	;# 
   669  019A                     	;# 
   670  019B                     	;# 
   671  019C                     	;# 
   672  020C                     	;# 
   673  020D                     	;# 
   674  020E                     	;# 
   675  020F                     	;# 
   676  020F                     	;# 
   677  0210                     	;# 
   678  0210                     	;# 
   679  0211                     	;# 
   680  0211                     	;# 
   681  0212                     	;# 
   682  0213                     	;# 
   683  0214                     	;# 
   684  0215                     	;# 
   685  0215                     	;# 
   686  0216                     	;# 
   687  0216                     	;# 
   688  0217                     	;# 
   689  0217                     	;# 
   690  0218                     	;# 
   691  0219                     	;# 
   692  021A                     	;# 
   693  021B                     	;# 
   694  021B                     	;# 
   695  021C                     	;# 
   696  021C                     	;# 
   697  021D                     	;# 
   698  021D                     	;# 
   699  021E                     	;# 
   700  021F                     	;# 
   701  028C                     	;# 
   702  028C                     	;# 
   703  028D                     	;# 
   704  028D                     	;# 
   705  028E                     	;# 
   706  028F                     	;# 
   707  0290                     	;# 
   708  0290                     	;# 
   709  0291                     	;# 
   710  0292                     	;# 
   711  0292                     	;# 
   712  0293                     	;# 
   713  0293                     	;# 
   714  0294                     	;# 
   715  0295                     	;# 
   716  0296                     	;# 
   717  0296                     	;# 
   718  0297                     	;# 
   719  0298                     	;# 
   720  0298                     	;# 
   721  0299                     	;# 
   722  0299                     	;# 
   723  029A                     	;# 
   724  029B                     	;# 
   725  029C                     	;# 
   726  029C                     	;# 
   727  029D                     	;# 
   728  030C                     	;# 
   729  030C                     	;# 
   730  030D                     	;# 
   731  030E                     	;# 
   732  030F                     	;# 
   733  0310                     	;# 
   734  0310                     	;# 
   735  0311                     	;# 
   736  0312                     	;# 
   737  0313                     	;# 
   738  0314                     	;# 
   739  0314                     	;# 
   740  0315                     	;# 
   741  0316                     	;# 
   742  0317                     	;# 
   743  0318                     	;# 
   744  0318                     	;# 
   745  0319                     	;# 
   746  031A                     	;# 
   747  031B                     	;# 
   748  031C                     	;# 
   749  031C                     	;# 
   750  031D                     	;# 
   751  031E                     	;# 
   752  031F                     	;# 
   753  038C                     	;# 
   754  038D                     	;# 
   755  038E                     	;# 
   756  0390                     	;# 
   757  0391                     	;# 
   758  0392                     	;# 
   759  040C                     	;# 
   760  040D                     	;# 
   761  040E                     	;# 
   762  040F                     	;# 
   763  0410                     	;# 
   764  0411                     	;# 
   765  0416                     	;# 
   766  0416                     	;# 
   767  0417                     	;# 
   768  0418                     	;# 
   769  0418                     	;# 
   770  0419                     	;# 
   771  041A                     	;# 
   772  041A                     	;# 
   773  041B                     	;# 
   774  041C                     	;# 
   775  041C                     	;# 
   776  041D                     	;# 
   777  041E                     	;# 
   778  041F                     	;# 
   779  048C                     	;# 
   780  048C                     	;# 
   781  048D                     	;# 
   782  048E                     	;# 
   783  048F                     	;# 
   784  048F                     	;# 
   785  0490                     	;# 
   786  0491                     	;# 
   787  0492                     	;# 
   788  0492                     	;# 
   789  0493                     	;# 
   790  0494                     	;# 
   791  0495                     	;# 
   792  0495                     	;# 
   793  0496                     	;# 
   794  0497                     	;# 
   795  0498                     	;# 
   796  0499                     	;# 
   797  049A                     	;# 
   798  049B                     	;# 
   799  049C                     	;# 
   800  049D                     	;# 
   801  050C                     	;# 
   802  050C                     	;# 
   803  050D                     	;# 
   804  050E                     	;# 
   805  050F                     	;# 
   806  050F                     	;# 
   807  0510                     	;# 
   808  0511                     	;# 
   809  0512                     	;# 
   810  0512                     	;# 
   811  0513                     	;# 
   812  0514                     	;# 
   813  0515                     	;# 
   814  0515                     	;# 
   815  0516                     	;# 
   816  0517                     	;# 
   817  0518                     	;# 
   818  0519                     	;# 
   819  051A                     	;# 
   820  051B                     	;# 
   821  051C                     	;# 
   822  051D                     	;# 
   823  058C                     	;# 
   824  058C                     	;# 
   825  058D                     	;# 
   826  058E                     	;# 
   827  058F                     	;# 
   828  058F                     	;# 
   829  0590                     	;# 
   830  0591                     	;# 
   831  0592                     	;# 
   832  0593                     	;# 
   833  060C                     	;# 
   834  060D                     	;# 
   835  060E                     	;# 
   836  060F                     	;# 
   837  0610                     	;# 
   838  0611                     	;# 
   839  0612                     	;# 
   840  0613                     	;# 
   841  0614                     	;# 
   842  0616                     	;# 
   843  0617                     	;# 
   844  0618                     	;# 
   845  0619                     	;# 
   846  061A                     	;# 
   847  061B                     	;# 
   848  061C                     	;# 
   849  061D                     	;# 
   850  061E                     	;# 
   851  068C                     	;# 
   852  068D                     	;# 
   853  068E                     	;# 
   854  068F                     	;# 
   855  0690                     	;# 
   856  0691                     	;# 
   857  0692                     	;# 
   858  0693                     	;# 
   859  0694                     	;# 
   860  070C                     	;# 
   861  070D                     	;# 
   862  070E                     	;# 
   863  070F                     	;# 
   864  0710                     	;# 
   865  0711                     	;# 
   866  0712                     	;# 
   867  0713                     	;# 
   868  0714                     	;# 
   869  0716                     	;# 
   870  0717                     	;# 
   871  0718                     	;# 
   872  0719                     	;# 
   873  071A                     	;# 
   874  071B                     	;# 
   875  071C                     	;# 
   876  071D                     	;# 
   877  071E                     	;# 
   878  0796                     	;# 
   879  0797                     	;# 
   880  0798                     	;# 
   881  0799                     	;# 
   882  079A                     	;# 
   883  079B                     	;# 
   884  080C                     	;# 
   885  080D                     	;# 
   886  080E                     	;# 
   887  080F                     	;# 
   888  0810                     	;# 
   889  0811                     	;# 
   890  0812                     	;# 
   891  0813                     	;# 
   892  0814                     	;# 
   893  081A                     	;# 
   894  081B                     	;# 
   895  081C                     	;# 
   896  081D                     	;# 
   897  081E                     	;# 
   898  081F                     	;# 
   899  088C                     	;# 
   900  088D                     	;# 
   901  088E                     	;# 
   902  088F                     	;# 
   903  0890                     	;# 
   904  0891                     	;# 
   905  0892                     	;# 
   906  0893                     	;# 
   907  0895                     	;# 
   908  0896                     	;# 
   909  0897                     	;# 
   910  0898                     	;# 
   911  0899                     	;# 
   912  089A                     	;# 
   913  089B                     	;# 
   914  090C                     	;# 
   915  090E                     	;# 
   916  090F                     	;# 
   917  091F                     	;# 
   918  091F                     	;# 
   919  098F                     	;# 
   920  098F                     	;# 
   921  0990                     	;# 
   922  0991                     	;# 
   923  0992                     	;# 
   924  0993                     	;# 
   925  0994                     	;# 
   926  0995                     	;# 
   927  0996                     	;# 
   928  0997                     	;# 
   929  0E0F                     	;# 
   930  0E10                     	;# 
   931  0E11                     	;# 
   932  0E12                     	;# 
   933  0E13                     	;# 
   934  0E14                     	;# 
   935  0E15                     	;# 
   936  0E16                     	;# 
   937  0E17                     	;# 
   938  0E18                     	;# 
   939  0E19                     	;# 
   940  0E1A                     	;# 
   941  0E1B                     	;# 
   942  0E1C                     	;# 
   943  0E1D                     	;# 
   944  0E1E                     	;# 
   945  0E1F                     	;# 
   946  0E20                     	;# 
   947  0E21                     	;# 
   948  0E22                     	;# 
   949  0E23                     	;# 
   950  0E24                     	;# 
   951  0E25                     	;# 
   952  0E26                     	;# 
   953  0E27                     	;# 
   954  0E28                     	;# 
   955  0E29                     	;# 
   956  0E2A                     	;# 
   957  0E2B                     	;# 
   958  0E2C                     	;# 
   959  0E2D                     	;# 
   960  0E2E                     	;# 
   961  0E2F                     	;# 
   962  0E30                     	;# 
   963  0E31                     	;# 
   964  0E32                     	;# 
   965  0E33                     	;# 
   966  0E34                     	;# 
   967  0E35                     	;# 
   968  0E36                     	;# 
   969  0E37                     	;# 
   970  0E8F                     	;# 
   971  0E90                     	;# 
   972  0E91                     	;# 
   973  0E92                     	;# 
   974  0E93                     	;# 
   975  0E94                     	;# 
   976  0E95                     	;# 
   977  0E96                     	;# 
   978  0E97                     	;# 
   979  0E9C                     	;# 
   980  0E9D                     	;# 
   981  0E9E                     	;# 
   982  0EA1                     	;# 
   983  0EA2                     	;# 
   984  0EA3                     	;# 
   985  0EA4                     	;# 
   986  0EA5                     	;# 
   987  0EA9                     	;# 
   988  0EAA                     	;# 
   989  0EAB                     	;# 
   990  0EAC                     	;# 
   991  0EB1                     	;# 
   992  0EB2                     	;# 
   993  0EB3                     	;# 
   994  0EB8                     	;# 
   995  0EB9                     	;# 
   996  0EBA                     	;# 
   997  0EBB                     	;# 
   998  0EBC                     	;# 
   999  0EBD                     	;# 
  1000  0EBE                     	;# 
  1001  0EC3                     	;# 
  1002  0EC5                     	;# 
  1003  0EC6                     	;# 
  1004  0EC7                     	;# 
  1005  0EC8                     	;# 
  1006  0EC9                     	;# 
  1007  0ECA                     	;# 
  1008  0ECB                     	;# 
  1009  0ECC                     	;# 
  1010  0F10                     	;# 
  1011  0F11                     	;# 
  1012  0F12                     	;# 
  1013  0F13                     	;# 
  1014  0F14                     	;# 
  1015  0F15                     	;# 
  1016  0F16                     	;# 
  1017  0F17                     	;# 
  1018  0F18                     	;# 
  1019  0F19                     	;# 
  1020  0F1A                     	;# 
  1021  0F1B                     	;# 
  1022  0F1C                     	;# 
  1023  0F1D                     	;# 
  1024  0F1E                     	;# 
  1025  0F1F                     	;# 
  1026  0F20                     	;# 
  1027  0F21                     	;# 
  1028  0F22                     	;# 
  1029  0F23                     	;# 
  1030  0F24                     	;# 
  1031  0F25                     	;# 
  1032  0F26                     	;# 
  1033  0F27                     	;# 
  1034  0F38                     	;# 
  1035  0F39                     	;# 
  1036  0F3A                     	;# 
  1037  0F3B                     	;# 
  1038  0F3C                     	;# 
  1039  0F3D                     	;# 
  1040  0F3E                     	;# 
  1041  0F3F                     	;# 
  1042  0F40                     	;# 
  1043  0F41                     	;# 
  1044  0F43                     	;# 
  1045  0F44                     	;# 
  1046  0F45                     	;# 
  1047  0F46                     	;# 
  1048  0F47                     	;# 
  1049  0F48                     	;# 
  1050  0F49                     	;# 
  1051  0F4A                     	;# 
  1052  0F4B                     	;# 
  1053  0F4C                     	;# 
  1054  0F4E                     	;# 
  1055  0F4F                     	;# 
  1056  0F50                     	;# 
  1057  0F51                     	;# 
  1058  0F52                     	;# 
  1059  0F53                     	;# 
  1060  0F54                     	;# 
  1061  0F55                     	;# 
  1062  0F56                     	;# 
  1063  0F57                     	;# 
  1064  0F65                     	;# 
  1065  0F68                     	;# 
  1066  0F69                     	;# 
  1067  0F6A                     	;# 
  1068  0F6B                     	;# 
  1069  0FE4                     	;# 
  1070  0FE5                     	;# 
  1071  0FE6                     	;# 
  1072  0FE7                     	;# 
  1073  0FE8                     	;# 
  1074  0FE9                     	;# 
  1075  0FEA                     	;# 
  1076  0FEB                     	;# 
  1077  0FED                     	;# 
  1078  0FEE                     	;# 
  1079  0FEF                     	;# 
  1080  0000                     	;# 
  1081  0001                     	;# 
  1082  0002                     	;# 
  1083  0003                     	;# 
  1084  0004                     	;# 
  1085  0005                     	;# 
  1086  0006                     	;# 
  1087  0007                     	;# 
  1088  0008                     	;# 
  1089  0009                     	;# 
  1090  000A                     	;# 
  1091  000B                     	;# 
  1092  000C                     	;# 
  1093  000D                     	;# 
  1094  000E                     	;# 
  1095  0010                     	;# 
  1096  0011                     	;# 
  1097  0012                     	;# 
  1098  0013                     	;# 
  1099  0016                     	;# 
  1100  0017                     	;# 
  1101  0018                     	;# 
  1102  001C                     	;# 
  1103  001C                     	;# 
  1104  001D                     	;# 
  1105  001D                     	;# 
  1106  001E                     	;# 
  1107  001F                     	;# 
  1108  008C                     	;# 
  1109  008C                     	;# 
  1110  008D                     	;# 
  1111  008E                     	;# 
  1112  008E                     	;# 
  1113  008F                     	;# 
  1114  0090                     	;# 
  1115  0090                     	;# 
  1116  0091                     	;# 
  1117  0093                     	;# 
  1118  0094                     	;# 
  1119  0095                     	;# 
  1120  0096                     	;# 
  1121  0097                     	;# 
  1122  0098                     	;# 
  1123  0099                     	;# 
  1124  009A                     	;# 
  1125  009B                     	;# 
  1126  009C                     	;# 
  1127  009D                     	;# 
  1128  009E                     	;# 
  1129  010C                     	;# 
  1130  010D                     	;# 
  1131  010E                     	;# 
  1132  010E                     	;# 
  1133  010F                     	;# 
  1134  0110                     	;# 
  1135  0110                     	;# 
  1136  0111                     	;# 
  1137  0112                     	;# 
  1138  0112                     	;# 
  1139  0113                     	;# 
  1140  0114                     	;# 
  1141  0114                     	;# 
  1142  0115                     	;# 
  1143  0116                     	;# 
  1144  0116                     	;# 
  1145  0117                     	;# 
  1146  0119                     	;# 
  1147  0119                     	;# 
  1148  0119                     	;# 
  1149  011A                     	;# 
  1150  011A                     	;# 
  1151  011A                     	;# 
  1152  011B                     	;# 
  1153  011B                     	;# 
  1154  011B                     	;# 
  1155  011B                     	;# 
  1156  011B                     	;# 
  1157  011C                     	;# 
  1158  011C                     	;# 
  1159  011C                     	;# 
  1160  011D                     	;# 
  1161  011D                     	;# 
  1162  011D                     	;# 
  1163  011E                     	;# 
  1164  011E                     	;# 
  1165  011E                     	;# 
  1166  011F                     	;# 
  1167  011F                     	;# 
  1168  011F                     	;# 
  1169  011F                     	;# 
  1170  011F                     	;# 
  1171  018C                     	;# 
  1172  018D                     	;# 
  1173  018E                     	;# 
  1174  018F                     	;# 
  1175  0190                     	;# 
  1176  0191                     	;# 
  1177  0192                     	;# 
  1178  0196                     	;# 
  1179  0197                     	;# 
  1180  0198                     	;# 
  1181  0199                     	;# 
  1182  019A                     	;# 
  1183  019B                     	;# 
  1184  019C                     	;# 
  1185  020C                     	;# 
  1186  020D                     	;# 
  1187  020E                     	;# 
  1188  020F                     	;# 
  1189  020F                     	;# 
  1190  0210                     	;# 
  1191  0210                     	;# 
  1192  0211                     	;# 
  1193  0211                     	;# 
  1194  0212                     	;# 
  1195  0213                     	;# 
  1196  0214                     	;# 
  1197  0215                     	;# 
  1198  0215                     	;# 
  1199  0216                     	;# 
  1200  0216                     	;# 
  1201  0217                     	;# 
  1202  0217                     	;# 
  1203  0218                     	;# 
  1204  0219                     	;# 
  1205  021A                     	;# 
  1206  021B                     	;# 
  1207  021B                     	;# 
  1208  021C                     	;# 
  1209  021C                     	;# 
  1210  021D                     	;# 
  1211  021D                     	;# 
  1212  021E                     	;# 
  1213  021F                     	;# 
  1214  028C                     	;# 
  1215  028C                     	;# 
  1216  028D                     	;# 
  1217  028D                     	;# 
  1218  028E                     	;# 
  1219  028F                     	;# 
  1220  0290                     	;# 
  1221  0290                     	;# 
  1222  0291                     	;# 
  1223  0292                     	;# 
  1224  0292                     	;# 
  1225  0293                     	;# 
  1226  0293                     	;# 
  1227  0294                     	;# 
  1228  0295                     	;# 
  1229  0296                     	;# 
  1230  0296                     	;# 
  1231  0297                     	;# 
  1232  0298                     	;# 
  1233  0298                     	;# 
  1234  0299                     	;# 
  1235  0299                     	;# 
  1236  029A                     	;# 
  1237  029B                     	;# 
  1238  029C                     	;# 
  1239  029C                     	;# 
  1240  029D                     	;# 
  1241  030C                     	;# 
  1242  030C                     	;# 
  1243  030D                     	;# 
  1244  030E                     	;# 
  1245  030F                     	;# 
  1246  0310                     	;# 
  1247  0310                     	;# 
  1248  0311                     	;# 
  1249  0312                     	;# 
  1250  0313                     	;# 
  1251  0314                     	;# 
  1252  0314                     	;# 
  1253  0315                     	;# 
  1254  0316                     	;# 
  1255  0317                     	;# 
  1256  0318                     	;# 
  1257  0318                     	;# 
  1258  0319                     	;# 
  1259  031A                     	;# 
  1260  031B                     	;# 
  1261  031C                     	;# 
  1262  031C                     	;# 
  1263  031D                     	;# 
  1264  031E                     	;# 
  1265  031F                     	;# 
  1266  038C                     	;# 
  1267  038D                     	;# 
  1268  038E                     	;# 
  1269  0390                     	;# 
  1270  0391                     	;# 
  1271  0392                     	;# 
  1272  040C                     	;# 
  1273  040D                     	;# 
  1274  040E                     	;# 
  1275  040F                     	;# 
  1276  0410                     	;# 
  1277  0411                     	;# 
  1278  0416                     	;# 
  1279  0416                     	;# 
  1280  0417                     	;# 
  1281  0418                     	;# 
  1282  0418                     	;# 
  1283  0419                     	;# 
  1284  041A                     	;# 
  1285  041A                     	;# 
  1286  041B                     	;# 
  1287  041C                     	;# 
  1288  041C                     	;# 
  1289  041D                     	;# 
  1290  041E                     	;# 
  1291  041F                     	;# 
  1292  048C                     	;# 
  1293  048C                     	;# 
  1294  048D                     	;# 
  1295  048E                     	;# 
  1296  048F                     	;# 
  1297  048F                     	;# 
  1298  0490                     	;# 
  1299  0491                     	;# 
  1300  0492                     	;# 
  1301  0492                     	;# 
  1302  0493                     	;# 
  1303  0494                     	;# 
  1304  0495                     	;# 
  1305  0495                     	;# 
  1306  0496                     	;# 
  1307  0497                     	;# 
  1308  0498                     	;# 
  1309  0499                     	;# 
  1310  049A                     	;# 
  1311  049B                     	;# 
  1312  049C                     	;# 
  1313  049D                     	;# 
  1314  050C                     	;# 
  1315  050C                     	;# 
  1316  050D                     	;# 
  1317  050E                     	;# 
  1318  050F                     	;# 
  1319  050F                     	;# 
  1320  0510                     	;# 
  1321  0511                     	;# 
  1322  0512                     	;# 
  1323  0512                     	;# 
  1324  0513                     	;# 
  1325  0514                     	;# 
  1326  0515                     	;# 
  1327  0515                     	;# 
  1328  0516                     	;# 
  1329  0517                     	;# 
  1330  0518                     	;# 
  1331  0519                     	;# 
  1332  051A                     	;# 
  1333  051B                     	;# 
  1334  051C                     	;# 
  1335  051D                     	;# 
  1336  058C                     	;# 
  1337  058C                     	;# 
  1338  058D                     	;# 
  1339  058E                     	;# 
  1340  058F                     	;# 
  1341  058F                     	;# 
  1342  0590                     	;# 
  1343  0591                     	;# 
  1344  0592                     	;# 
  1345  0593                     	;# 
  1346  060C                     	;# 
  1347  060D                     	;# 
  1348  060E                     	;# 
  1349  060F                     	;# 
  1350  0610                     	;# 
  1351  0611                     	;# 
  1352  0612                     	;# 
  1353  0613                     	;# 
  1354  0614                     	;# 
  1355  0616                     	;# 
  1356  0617                     	;# 
  1357  0618                     	;# 
  1358  0619                     	;# 
  1359  061A                     	;# 
  1360  061B                     	;# 
  1361  061C                     	;# 
  1362  061D                     	;# 
  1363  061E                     	;# 
  1364  068C                     	;# 
  1365  068D                     	;# 
  1366  068E                     	;# 
  1367  068F                     	;# 
  1368  0690                     	;# 
  1369  0691                     	;# 
  1370  0692                     	;# 
  1371  0693                     	;# 
  1372  0694                     	;# 
  1373  070C                     	;# 
  1374  070D                     	;# 
  1375  070E                     	;# 
  1376  070F                     	;# 
  1377  0710                     	;# 
  1378  0711                     	;# 
  1379  0712                     	;# 
  1380  0713                     	;# 
  1381  0714                     	;# 
  1382  0716                     	;# 
  1383  0717                     	;# 
  1384  0718                     	;# 
  1385  0719                     	;# 
  1386  071A                     	;# 
  1387  071B                     	;# 
  1388  071C                     	;# 
  1389  071D                     	;# 
  1390  071E                     	;# 
  1391  0796                     	;# 
  1392  0797                     	;# 
  1393  0798                     	;# 
  1394  0799                     	;# 
  1395  079A                     	;# 
  1396  079B                     	;# 
  1397  080C                     	;# 
  1398  080D                     	;# 
  1399  080E                     	;# 
  1400  080F                     	;# 
  1401  0810                     	;# 
  1402  0811                     	;# 
  1403  0812                     	;# 
  1404  0813                     	;# 
  1405  0814                     	;# 
  1406  081A                     	;# 
  1407  081B                     	;# 
  1408  081C                     	;# 
  1409  081D                     	;# 
  1410  081E                     	;# 
  1411  081F                     	;# 
  1412  088C                     	;# 
  1413  088D                     	;# 
  1414  088E                     	;# 
  1415  088F                     	;# 
  1416  0890                     	;# 
  1417  0891                     	;# 
  1418  0892                     	;# 
  1419  0893                     	;# 
  1420  0895                     	;# 
  1421  0896                     	;# 
  1422  0897                     	;# 
  1423  0898                     	;# 
  1424  0899                     	;# 
  1425  089A                     	;# 
  1426  089B                     	;# 
  1427  090C                     	;# 
  1428  090E                     	;# 
  1429  090F                     	;# 
  1430  091F                     	;# 
  1431  091F                     	;# 
  1432  098F                     	;# 
  1433  098F                     	;# 
  1434  0990                     	;# 
  1435  0991                     	;# 
  1436  0992                     	;# 
  1437  0993                     	;# 
  1438  0994                     	;# 
  1439  0995                     	;# 
  1440  0996                     	;# 
  1441  0997                     	;# 
  1442  0E0F                     	;# 
  1443  0E10                     	;# 
  1444  0E11                     	;# 
  1445  0E12                     	;# 
  1446  0E13                     	;# 
  1447  0E14                     	;# 
  1448  0E15                     	;# 
  1449  0E16                     	;# 
  1450  0E17                     	;# 
  1451  0E18                     	;# 
  1452  0E19                     	;# 
  1453  0E1A                     	;# 
  1454  0E1B                     	;# 
  1455  0E1C                     	;# 
  1456  0E1D                     	;# 
  1457  0E1E                     	;# 
  1458  0E1F                     	;# 
  1459  0E20                     	;# 
  1460  0E21                     	;# 
  1461  0E22                     	;# 
  1462  0E23                     	;# 
  1463  0E24                     	;# 
  1464  0E25                     	;# 
  1465  0E26                     	;# 
  1466  0E27                     	;# 
  1467  0E28                     	;# 
  1468  0E29                     	;# 
  1469  0E2A                     	;# 
  1470  0E2B                     	;# 
  1471  0E2C                     	;# 
  1472  0E2D                     	;# 
  1473  0E2E                     	;# 
  1474  0E2F                     	;# 
  1475  0E30                     	;# 
  1476  0E31                     	;# 
  1477  0E32                     	;# 
  1478  0E33                     	;# 
  1479  0E34                     	;# 
  1480  0E35                     	;# 
  1481  0E36                     	;# 
  1482  0E37                     	;# 
  1483  0E8F                     	;# 
  1484  0E90                     	;# 
  1485  0E91                     	;# 
  1486  0E92                     	;# 
  1487  0E93                     	;# 
  1488  0E94                     	;# 
  1489  0E95                     	;# 
  1490  0E96                     	;# 
  1491  0E97                     	;# 
  1492  0E9C                     	;# 
  1493  0E9D                     	;# 
  1494  0E9E                     	;# 
  1495  0EA1                     	;# 
  1496  0EA2                     	;# 
  1497  0EA3                     	;# 
  1498  0EA4                     	;# 
  1499  0EA5                     	;# 
  1500  0EA9                     	;# 
  1501  0EAA                     	;# 
  1502  0EAB                     	;# 
  1503  0EAC                     	;# 
  1504  0EB1                     	;# 
  1505  0EB2                     	;# 
  1506  0EB3                     	;# 
  1507  0EB8                     	;# 
  1508  0EB9                     	;# 
  1509  0EBA                     	;# 
  1510  0EBB                     	;# 
  1511  0EBC                     	;# 
  1512  0EBD                     	;# 
  1513  0EBE                     	;# 
  1514  0EC3                     	;# 
  1515  0EC5                     	;# 
  1516  0EC6                     	;# 
  1517  0EC7                     	;# 
  1518  0EC8                     	;# 
  1519  0EC9                     	;# 
  1520  0ECA                     	;# 
  1521  0ECB                     	;# 
  1522  0ECC                     	;# 
  1523  0F10                     	;# 
  1524  0F11                     	;# 
  1525  0F12                     	;# 
  1526  0F13                     	;# 
  1527  0F14                     	;# 
  1528  0F15                     	;# 
  1529  0F16                     	;# 
  1530  0F17                     	;# 
  1531  0F18                     	;# 
  1532  0F19                     	;# 
  1533  0F1A                     	;# 
  1534  0F1B                     	;# 
  1535  0F1C                     	;# 
  1536  0F1D                     	;# 
  1537  0F1E                     	;# 
  1538  0F1F                     	;# 
  1539  0F20                     	;# 
  1540  0F21                     	;# 
  1541  0F22                     	;# 
  1542  0F23                     	;# 
  1543  0F24                     	;# 
  1544  0F25                     	;# 
  1545  0F26                     	;# 
  1546  0F27                     	;# 
  1547  0F38                     	;# 
  1548  0F39                     	;# 
  1549  0F3A                     	;# 
  1550  0F3B                     	;# 
  1551  0F3C                     	;# 
  1552  0F3D                     	;# 
  1553  0F3E                     	;# 
  1554  0F3F                     	;# 
  1555  0F40                     	;# 
  1556  0F41                     	;# 
  1557  0F43                     	;# 
  1558  0F44                     	;# 
  1559  0F45                     	;# 
  1560  0F46                     	;# 
  1561  0F47                     	;# 
  1562  0F48                     	;# 
  1563  0F49                     	;# 
  1564  0F4A                     	;# 
  1565  0F4B                     	;# 
  1566  0F4C                     	;# 
  1567  0F4E                     	;# 
  1568  0F4F                     	;# 
  1569  0F50                     	;# 
  1570  0F51                     	;# 
  1571  0F52                     	;# 
  1572  0F53                     	;# 
  1573  0F54                     	;# 
  1574  0F55                     	;# 
  1575  0F56                     	;# 
  1576  0F57                     	;# 
  1577  0F65                     	;# 
  1578  0F68                     	;# 
  1579  0F69                     	;# 
  1580  0F6A                     	;# 
  1581  0F6B                     	;# 
  1582  0FE4                     	;# 
  1583  0FE5                     	;# 
  1584  0FE6                     	;# 
  1585  0FE7                     	;# 
  1586  0FE8                     	;# 
  1587  0FE9                     	;# 
  1588  0FEA                     	;# 
  1589  0FEB                     	;# 
  1590  0FED                     	;# 
  1591  0FEE                     	;# 
  1592  0FEF                     	;# 
  1593  0000                     	;# 
  1594  0001                     	;# 
  1595  0002                     	;# 
  1596  0003                     	;# 
  1597  0004                     	;# 
  1598  0005                     	;# 
  1599  0006                     	;# 
  1600  0007                     	;# 
  1601  0008                     	;# 
  1602  0009                     	;# 
  1603  000A                     	;# 
  1604  000B                     	;# 
  1605  000C                     	;# 
  1606  000D                     	;# 
  1607  000E                     	;# 
  1608  0010                     	;# 
  1609  0011                     	;# 
  1610  0012                     	;# 
  1611  0013                     	;# 
  1612  0016                     	;# 
  1613  0017                     	;# 
  1614  0018                     	;# 
  1615  001C                     	;# 
  1616  001C                     	;# 
  1617  001D                     	;# 
  1618  001D                     	;# 
  1619  001E                     	;# 
  1620  001F                     	;# 
  1621  008C                     	;# 
  1622  008C                     	;# 
  1623  008D                     	;# 
  1624  008E                     	;# 
  1625  008E                     	;# 
  1626  008F                     	;# 
  1627  0090                     	;# 
  1628  0090                     	;# 
  1629  0091                     	;# 
  1630  0093                     	;# 
  1631  0094                     	;# 
  1632  0095                     	;# 
  1633  0096                     	;# 
  1634  0097                     	;# 
  1635  0098                     	;# 
  1636  0099                     	;# 
  1637  009A                     	;# 
  1638  009B                     	;# 
  1639  009C                     	;# 
  1640  009D                     	;# 
  1641  009E                     	;# 
  1642  010C                     	;# 
  1643  010D                     	;# 
  1644  010E                     	;# 
  1645  010E                     	;# 
  1646  010F                     	;# 
  1647  0110                     	;# 
  1648  0110                     	;# 
  1649  0111                     	;# 
  1650  0112                     	;# 
  1651  0112                     	;# 
  1652  0113                     	;# 
  1653  0114                     	;# 
  1654  0114                     	;# 
  1655  0115                     	;# 
  1656  0116                     	;# 
  1657  0116                     	;# 
  1658  0117                     	;# 
  1659  0119                     	;# 
  1660  0119                     	;# 
  1661  0119                     	;# 
  1662  011A                     	;# 
  1663  011A                     	;# 
  1664  011A                     	;# 
  1665  011B                     	;# 
  1666  011B                     	;# 
  1667  011B                     	;# 
  1668  011B                     	;# 
  1669  011B                     	;# 
  1670  011C                     	;# 
  1671  011C                     	;# 
  1672  011C                     	;# 
  1673  011D                     	;# 
  1674  011D                     	;# 
  1675  011D                     	;# 
  1676  011E                     	;# 
  1677  011E                     	;# 
  1678  011E                     	;# 
  1679  011F                     	;# 
  1680  011F                     	;# 
  1681  011F                     	;# 
  1682  011F                     	;# 
  1683  011F                     	;# 
  1684  018C                     	;# 
  1685  018D                     	;# 
  1686  018E                     	;# 
  1687  018F                     	;# 
  1688  0190                     	;# 
  1689  0191                     	;# 
  1690  0192                     	;# 
  1691  0196                     	;# 
  1692  0197                     	;# 
  1693  0198                     	;# 
  1694  0199                     	;# 
  1695  019A                     	;# 
  1696  019B                     	;# 
  1697  019C                     	;# 
  1698  020C                     	;# 
  1699  020D                     	;# 
  1700  020E                     	;# 
  1701  020F                     	;# 
  1702  020F                     	;# 
  1703  0210                     	;# 
  1704  0210                     	;# 
  1705  0211                     	;# 
  1706  0211                     	;# 
  1707  0212                     	;# 
  1708  0213                     	;# 
  1709  0214                     	;# 
  1710  0215                     	;# 
  1711  0215                     	;# 
  1712  0216                     	;# 
  1713  0216                     	;# 
  1714  0217                     	;# 
  1715  0217                     	;# 
  1716  0218                     	;# 
  1717  0219                     	;# 
  1718  021A                     	;# 
  1719  021B                     	;# 
  1720  021B                     	;# 
  1721  021C                     	;# 
  1722  021C                     	;# 
  1723  021D                     	;# 
  1724  021D                     	;# 
  1725  021E                     	;# 
  1726  021F                     	;# 
  1727  028C                     	;# 
  1728  028C                     	;# 
  1729  028D                     	;# 
  1730  028D                     	;# 
  1731  028E                     	;# 
  1732  028F                     	;# 
  1733  0290                     	;# 
  1734  0290                     	;# 
  1735  0291                     	;# 
  1736  0292                     	;# 
  1737  0292                     	;# 
  1738  0293                     	;# 
  1739  0293                     	;# 
  1740  0294                     	;# 
  1741  0295                     	;# 
  1742  0296                     	;# 
  1743  0296                     	;# 
  1744  0297                     	;# 
  1745  0298                     	;# 
  1746  0298                     	;# 
  1747  0299                     	;# 
  1748  0299                     	;# 
  1749  029A                     	;# 
  1750  029B                     	;# 
  1751  029C                     	;# 
  1752  029C                     	;# 
  1753  029D                     	;# 
  1754  030C                     	;# 
  1755  030C                     	;# 
  1756  030D                     	;# 
  1757  030E                     	;# 
  1758  030F                     	;# 
  1759  0310                     	;# 
  1760  0310                     	;# 
  1761  0311                     	;# 
  1762  0312                     	;# 
  1763  0313                     	;# 
  1764  0314                     	;# 
  1765  0314                     	;# 
  1766  0315                     	;# 
  1767  0316                     	;# 
  1768  0317                     	;# 
  1769  0318                     	;# 
  1770  0318                     	;# 
  1771  0319                     	;# 
  1772  031A                     	;# 
  1773  031B                     	;# 
  1774  031C                     	;# 
  1775  031C                     	;# 
  1776  031D                     	;# 
  1777  031E                     	;# 
  1778  031F                     	;# 
  1779  038C                     	;# 
  1780  038D                     	;# 
  1781  038E                     	;# 
  1782  0390                     	;# 
  1783  0391                     	;# 
  1784  0392                     	;# 
  1785  040C                     	;# 
  1786  040D                     	;# 
  1787  040E                     	;# 
  1788  040F                     	;# 
  1789  0410                     	;# 
  1790  0411                     	;# 
  1791  0416                     	;# 
  1792  0416                     	;# 
  1793  0417                     	;# 
  1794  0418                     	;# 
  1795  0418                     	;# 
  1796  0419                     	;# 
  1797  041A                     	;# 
  1798  041A                     	;# 
  1799  041B                     	;# 
  1800  041C                     	;# 
  1801  041C                     	;# 
  1802  041D                     	;# 
  1803  041E                     	;# 
  1804  041F                     	;# 
  1805  048C                     	;# 
  1806  048C                     	;# 
  1807  048D                     	;# 
  1808  048E                     	;# 
  1809  048F                     	;# 
  1810  048F                     	;# 
  1811  0490                     	;# 
  1812  0491                     	;# 
  1813  0492                     	;# 
  1814  0492                     	;# 
  1815  0493                     	;# 
  1816  0494                     	;# 
  1817  0495                     	;# 
  1818  0495                     	;# 
  1819  0496                     	;# 
  1820  0497                     	;# 
  1821  0498                     	;# 
  1822  0499                     	;# 
  1823  049A                     	;# 
  1824  049B                     	;# 
  1825  049C                     	;# 
  1826  049D                     	;# 
  1827  050C                     	;# 
  1828  050C                     	;# 
  1829  050D                     	;# 
  1830  050E                     	;# 
  1831  050F                     	;# 
  1832  050F                     	;# 
  1833  0510                     	;# 
  1834  0511                     	;# 
  1835  0512                     	;# 
  1836  0512                     	;# 
  1837  0513                     	;# 
  1838  0514                     	;# 
  1839  0515                     	;# 
  1840  0515                     	;# 
  1841  0516                     	;# 
  1842  0517                     	;# 
  1843  0518                     	;# 
  1844  0519                     	;# 
  1845  051A                     	;# 
  1846  051B                     	;# 
  1847  051C                     	;# 
  1848  051D                     	;# 
  1849  058C                     	;# 
  1850  058C                     	;# 
  1851  058D                     	;# 
  1852  058E                     	;# 
  1853  058F                     	;# 
  1854  058F                     	;# 
  1855  0590                     	;# 
  1856  0591                     	;# 
  1857  0592                     	;# 
  1858  0593                     	;# 
  1859  060C                     	;# 
  1860  060D                     	;# 
  1861  060E                     	;# 
  1862  060F                     	;# 
  1863  0610                     	;# 
  1864  0611                     	;# 
  1865  0612                     	;# 
  1866  0613                     	;# 
  1867  0614                     	;# 
  1868  0616                     	;# 
  1869  0617                     	;# 
  1870  0618                     	;# 
  1871  0619                     	;# 
  1872  061A                     	;# 
  1873  061B                     	;# 
  1874  061C                     	;# 
  1875  061D                     	;# 
  1876  061E                     	;# 
  1877  068C                     	;# 
  1878  068D                     	;# 
  1879  068E                     	;# 
  1880  068F                     	;# 
  1881  0690                     	;# 
  1882  0691                     	;# 
  1883  0692                     	;# 
  1884  0693                     	;# 
  1885  0694                     	;# 
  1886  070C                     	;# 
  1887  070D                     	;# 
  1888  070E                     	;# 
  1889  070F                     	;# 
  1890  0710                     	;# 
  1891  0711                     	;# 
  1892  0712                     	;# 
  1893  0713                     	;# 
  1894  0714                     	;# 
  1895  0716                     	;# 
  1896  0717                     	;# 
  1897  0718                     	;# 
  1898  0719                     	;# 
  1899  071A                     	;# 
  1900  071B                     	;# 
  1901  071C                     	;# 
  1902  071D                     	;# 
  1903  071E                     	;# 
  1904  0796                     	;# 
  1905  0797                     	;# 
  1906  0798                     	;# 
  1907  0799                     	;# 
  1908  079A                     	;# 
  1909  079B                     	;# 
  1910  080C                     	;# 
  1911  080D                     	;# 
  1912  080E                     	;# 
  1913  080F                     	;# 
  1914  0810                     	;# 
  1915  0811                     	;# 
  1916  0812                     	;# 
  1917  0813                     	;# 
  1918  0814                     	;# 
  1919  081A                     	;# 
  1920  081B                     	;# 
  1921  081C                     	;# 
  1922  081D                     	;# 
  1923  081E                     	;# 
  1924  081F                     	;# 
  1925  088C                     	;# 
  1926  088D                     	;# 
  1927  088E                     	;# 
  1928  088F                     	;# 
  1929  0890                     	;# 
  1930  0891                     	;# 
  1931  0892                     	;# 
  1932  0893                     	;# 
  1933  0895                     	;# 
  1934  0896                     	;# 
  1935  0897                     	;# 
  1936  0898                     	;# 
  1937  0899                     	;# 
  1938  089A                     	;# 
  1939  089B                     	;# 
  1940  090C                     	;# 
  1941  090E                     	;# 
  1942  090F                     	;# 
  1943  091F                     	;# 
  1944  091F                     	;# 
  1945  098F                     	;# 
  1946  098F                     	;# 
  1947  0990                     	;# 
  1948  0991                     	;# 
  1949  0992                     	;# 
  1950  0993                     	;# 
  1951  0994                     	;# 
  1952  0995                     	;# 
  1953  0996                     	;# 
  1954  0997                     	;# 
  1955  0E0F                     	;# 
  1956  0E10                     	;# 
  1957  0E11                     	;# 
  1958  0E12                     	;# 
  1959  0E13                     	;# 
  1960  0E14                     	;# 
  1961  0E15                     	;# 
  1962  0E16                     	;# 
  1963  0E17                     	;# 
  1964  0E18                     	;# 
  1965  0E19                     	;# 
  1966  0E1A                     	;# 
  1967  0E1B                     	;# 
  1968  0E1C                     	;# 
  1969  0E1D                     	;# 
  1970  0E1E                     	;# 
  1971  0E1F                     	;# 
  1972  0E20                     	;# 
  1973  0E21                     	;# 
  1974  0E22                     	;# 
  1975  0E23                     	;# 
  1976  0E24                     	;# 
  1977  0E25                     	;# 
  1978  0E26                     	;# 
  1979  0E27                     	;# 
  1980  0E28                     	;# 
  1981  0E29                     	;# 
  1982  0E2A                     	;# 
  1983  0E2B                     	;# 
  1984  0E2C                     	;# 
  1985  0E2D                     	;# 
  1986  0E2E                     	;# 
  1987  0E2F                     	;# 
  1988  0E30                     	;# 
  1989  0E31                     	;# 
  1990  0E32                     	;# 
  1991  0E33                     	;# 
  1992  0E34                     	;# 
  1993  0E35                     	;# 
  1994  0E36                     	;# 
  1995  0E37                     	;# 
  1996  0E8F                     	;# 
  1997  0E90                     	;# 
  1998  0E91                     	;# 
  1999  0E92                     	;# 
  2000  0E93                     	;# 
  2001  0E94                     	;# 
  2002  0E95                     	;# 
  2003  0E96                     	;# 
  2004  0E97                     	;# 
  2005  0E9C                     	;# 
  2006  0E9D                     	;# 
  2007  0E9E                     	;# 
  2008  0EA1                     	;# 
  2009  0EA2                     	;# 
  2010  0EA3                     	;# 
  2011  0EA4                     	;# 
  2012  0EA5                     	;# 
  2013  0EA9                     	;# 
  2014  0EAA                     	;# 
  2015  0EAB                     	;# 
  2016  0EAC                     	;# 
  2017  0EB1                     	;# 
  2018  0EB2                     	;# 
  2019  0EB3                     	;# 
  2020  0EB8                     	;# 
  2021  0EB9                     	;# 
  2022  0EBA                     	;# 
  2023  0EBB                     	;# 
  2024  0EBC                     	;# 
  2025  0EBD                     	;# 
  2026  0EBE                     	;# 
  2027  0EC3                     	;# 
  2028  0EC5                     	;# 
  2029  0EC6                     	;# 
  2030  0EC7                     	;# 
  2031  0EC8                     	;# 
  2032  0EC9                     	;# 
  2033  0ECA                     	;# 
  2034  0ECB                     	;# 
  2035  0ECC                     	;# 
  2036  0F10                     	;# 
  2037  0F11                     	;# 
  2038  0F12                     	;# 
  2039  0F13                     	;# 
  2040  0F14                     	;# 
  2041  0F15                     	;# 
  2042  0F16                     	;# 
  2043  0F17                     	;# 
  2044  0F18                     	;# 
  2045  0F19                     	;# 
  2046  0F1A                     	;# 
  2047  0F1B                     	;# 
  2048  0F1C                     	;# 
  2049  0F1D                     	;# 
  2050  0F1E                     	;# 
  2051  0F1F                     	;# 
  2052  0F20                     	;# 
  2053  0F21                     	;# 
  2054  0F22                     	;# 
  2055  0F23                     	;# 
  2056  0F24                     	;# 
  2057  0F25                     	;# 
  2058  0F26                     	;# 
  2059  0F27                     	;# 
  2060  0F38                     	;# 
  2061  0F39                     	;# 
  2062  0F3A                     	;# 
  2063  0F3B                     	;# 
  2064  0F3C                     	;# 
  2065  0F3D                     	;# 
  2066  0F3E                     	;# 
  2067  0F3F                     	;# 
  2068  0F40                     	;# 
  2069  0F41                     	;# 
  2070  0F43                     	;# 
  2071  0F44                     	;# 
  2072  0F45                     	;# 
  2073  0F46                     	;# 
  2074  0F47                     	;# 
  2075  0F48                     	;# 
  2076  0F49                     	;# 
  2077  0F4A                     	;# 
  2078  0F4B                     	;# 
  2079  0F4C                     	;# 
  2080  0F4E                     	;# 
  2081  0F4F                     	;# 
  2082  0F50                     	;# 
  2083  0F51                     	;# 
  2084  0F52                     	;# 
  2085  0F53                     	;# 
  2086  0F54                     	;# 
  2087  0F55                     	;# 
  2088  0F56                     	;# 
  2089  0F57                     	;# 
  2090  0F65                     	;# 
  2091  0F68                     	;# 
  2092  0F69                     	;# 
  2093  0F6A                     	;# 
  2094  0F6B                     	;# 
  2095  0FE4                     	;# 
  2096  0FE5                     	;# 
  2097  0FE6                     	;# 
  2098  0FE7                     	;# 
  2099  0FE8                     	;# 
  2100  0FE9                     	;# 
  2101  0FEA                     	;# 
  2102  0FEB                     	;# 
  2103  0FED                     	;# 
  2104  0FEE                     	;# 
  2105  0FEF                     	;# 
  2106  0000                     	;# 
  2107  0001                     	;# 
  2108  0002                     	;# 
  2109  0003                     	;# 
  2110  0004                     	;# 
  2111  0005                     	;# 
  2112  0006                     	;# 
  2113  0007                     	;# 
  2114  0008                     	;# 
  2115  0009                     	;# 
  2116  000A                     	;# 
  2117  000B                     	;# 
  2118  000C                     	;# 
  2119  000D                     	;# 
  2120  000E                     	;# 
  2121  0010                     	;# 
  2122  0011                     	;# 
  2123  0012                     	;# 
  2124  0013                     	;# 
  2125  0016                     	;# 
  2126  0017                     	;# 
  2127  0018                     	;# 
  2128  001C                     	;# 
  2129  001C                     	;# 
  2130  001D                     	;# 
  2131  001D                     	;# 
  2132  001E                     	;# 
  2133  001F                     	;# 
  2134  008C                     	;# 
  2135  008C                     	;# 
  2136  008D                     	;# 
  2137  008E                     	;# 
  2138  008E                     	;# 
  2139  008F                     	;# 
  2140  0090                     	;# 
  2141  0090                     	;# 
  2142  0091                     	;# 
  2143  0093                     	;# 
  2144  0094                     	;# 
  2145  0095                     	;# 
  2146  0096                     	;# 
  2147  0097                     	;# 
  2148  0098                     	;# 
  2149  0099                     	;# 
  2150  009A                     	;# 
  2151  009B                     	;# 
  2152  009C                     	;# 
  2153  009D                     	;# 
  2154  009E                     	;# 
  2155  010C                     	;# 
  2156  010D                     	;# 
  2157  010E                     	;# 
  2158  010E                     	;# 
  2159  010F                     	;# 
  2160  0110                     	;# 
  2161  0110                     	;# 
  2162  0111                     	;# 
  2163  0112                     	;# 
  2164  0112                     	;# 
  2165  0113                     	;# 
  2166  0114                     	;# 
  2167  0114                     	;# 
  2168  0115                     	;# 
  2169  0116                     	;# 
  2170  0116                     	;# 
  2171  0117                     	;# 
  2172  0119                     	;# 
  2173  0119                     	;# 
  2174  0119                     	;# 
  2175  011A                     	;# 
  2176  011A                     	;# 
  2177  011A                     	;# 
  2178  011B                     	;# 
  2179  011B                     	;# 
  2180  011B                     	;# 
  2181  011B                     	;# 
  2182  011B                     	;# 
  2183  011C                     	;# 
  2184  011C                     	;# 
  2185  011C                     	;# 
  2186  011D                     	;# 
  2187  011D                     	;# 
  2188  011D                     	;# 
  2189  011E                     	;# 
  2190  011E                     	;# 
  2191  011E                     	;# 
  2192  011F                     	;# 
  2193  011F                     	;# 
  2194  011F                     	;# 
  2195  011F                     	;# 
  2196  011F                     	;# 
  2197  018C                     	;# 
  2198  018D                     	;# 
  2199  018E                     	;# 
  2200  018F                     	;# 
  2201  0190                     	;# 
  2202  0191                     	;# 
  2203  0192                     	;# 
  2204  0196                     	;# 
  2205  0197                     	;# 
  2206  0198                     	;# 
  2207  0199                     	;# 
  2208  019A                     	;# 
  2209  019B                     	;# 
  2210  019C                     	;# 
  2211  020C                     	;# 
  2212  020D                     	;# 
  2213  020E                     	;# 
  2214  020F                     	;# 
  2215  020F                     	;# 
  2216  0210                     	;# 
  2217  0210                     	;# 
  2218  0211                     	;# 
  2219  0211                     	;# 
  2220  0212                     	;# 
  2221  0213                     	;# 
  2222  0214                     	;# 
  2223  0215                     	;# 
  2224  0215                     	;# 
  2225  0216                     	;# 
  2226  0216                     	;# 
  2227  0217                     	;# 
  2228  0217                     	;# 
  2229  0218                     	;# 
  2230  0219                     	;# 
  2231  021A                     	;# 
  2232  021B                     	;# 
  2233  021B                     	;# 
  2234  021C                     	;# 
  2235  021C                     	;# 
  2236  021D                     	;# 
  2237  021D                     	;# 
  2238  021E                     	;# 
  2239  021F                     	;# 
  2240  028C                     	;# 
  2241  028C                     	;# 
  2242  028D                     	;# 
  2243  028D                     	;# 
  2244  028E                     	;# 
  2245  028F                     	;# 
  2246  0290                     	;# 
  2247  0290                     	;# 
  2248  0291                     	;# 
  2249  0292                     	;# 
  2250  0292                     	;# 
  2251  0293                     	;# 
  2252  0293                     	;# 
  2253  0294                     	;# 
  2254  0295                     	;# 
  2255  0296                     	;# 
  2256  0296                     	;# 
  2257  0297                     	;# 
  2258  0298                     	;# 
  2259  0298                     	;# 
  2260  0299                     	;# 
  2261  0299                     	;# 
  2262  029A                     	;# 
  2263  029B                     	;# 
  2264  029C                     	;# 
  2265  029C                     	;# 
  2266  029D                     	;# 
  2267  030C                     	;# 
  2268  030C                     	;# 
  2269  030D                     	;# 
  2270  030E                     	;# 
  2271  030F                     	;# 
  2272  0310                     	;# 
  2273  0310                     	;# 
  2274  0311                     	;# 
  2275  0312                     	;# 
  2276  0313                     	;# 
  2277  0314                     	;# 
  2278  0314                     	;# 
  2279  0315                     	;# 
  2280  0316                     	;# 
  2281  0317                     	;# 
  2282  0318                     	;# 
  2283  0318                     	;# 
  2284  0319                     	;# 
  2285  031A                     	;# 
  2286  031B                     	;# 
  2287  031C                     	;# 
  2288  031C                     	;# 
  2289  031D                     	;# 
  2290  031E                     	;# 
  2291  031F                     	;# 
  2292  038C                     	;# 
  2293  038D                     	;# 
  2294  038E                     	;# 
  2295  0390                     	;# 
  2296  0391                     	;# 
  2297  0392                     	;# 
  2298  040C                     	;# 
  2299  040D                     	;# 
  2300  040E                     	;# 
  2301  040F                     	;# 
  2302  0410                     	;# 
  2303  0411                     	;# 
  2304  0416                     	;# 
  2305  0416                     	;# 
  2306  0417                     	;# 
  2307  0418                     	;# 
  2308  0418                     	;# 
  2309  0419                     	;# 
  2310  041A                     	;# 
  2311  041A                     	;# 
  2312  041B                     	;# 
  2313  041C                     	;# 
  2314  041C                     	;# 
  2315  041D                     	;# 
  2316  041E                     	;# 
  2317  041F                     	;# 
  2318  048C                     	;# 
  2319  048C                     	;# 
  2320  048D                     	;# 
  2321  048E                     	;# 
  2322  048F                     	;# 
  2323  048F                     	;# 
  2324  0490                     	;# 
  2325  0491                     	;# 
  2326  0492                     	;# 
  2327  0492                     	;# 
  2328  0493                     	;# 
  2329  0494                     	;# 
  2330  0495                     	;# 
  2331  0495                     	;# 
  2332  0496                     	;# 
  2333  0497                     	;# 
  2334  0498                     	;# 
  2335  0499                     	;# 
  2336  049A                     	;# 
  2337  049B                     	;# 
  2338  049C                     	;# 
  2339  049D                     	;# 
  2340  050C                     	;# 
  2341  050C                     	;# 
  2342  050D                     	;# 
  2343  050E                     	;# 
  2344  050F                     	;# 
  2345  050F                     	;# 
  2346  0510                     	;# 
  2347  0511                     	;# 
  2348  0512                     	;# 
  2349  0512                     	;# 
  2350  0513                     	;# 
  2351  0514                     	;# 
  2352  0515                     	;# 
  2353  0515                     	;# 
  2354  0516                     	;# 
  2355  0517                     	;# 
  2356  0518                     	;# 
  2357  0519                     	;# 
  2358  051A                     	;# 
  2359  051B                     	;# 
  2360  051C                     	;# 
  2361  051D                     	;# 
  2362  058C                     	;# 
  2363  058C                     	;# 
  2364  058D                     	;# 
  2365  058E                     	;# 
  2366  058F                     	;# 
  2367  058F                     	;# 
  2368  0590                     	;# 
  2369  0591                     	;# 
  2370  0592                     	;# 
  2371  0593                     	;# 
  2372  060C                     	;# 
  2373  060D                     	;# 
  2374  060E                     	;# 
  2375  060F                     	;# 
  2376  0610                     	;# 
  2377  0611                     	;# 
  2378  0612                     	;# 
  2379  0613                     	;# 
  2380  0614                     	;# 
  2381  0616                     	;# 
  2382  0617                     	;# 
  2383  0618                     	;# 
  2384  0619                     	;# 
  2385  061A                     	;# 
  2386  061B                     	;# 
  2387  061C                     	;# 
  2388  061D                     	;# 
  2389  061E                     	;# 
  2390  068C                     	;# 
  2391  068D                     	;# 
  2392  068E                     	;# 
  2393  068F                     	;# 
  2394  0690                     	;# 
  2395  0691                     	;# 
  2396  0692                     	;# 
  2397  0693                     	;# 
  2398  0694                     	;# 
  2399  070C                     	;# 
  2400  070D                     	;# 
  2401  070E                     	;# 
  2402  070F                     	;# 
  2403  0710                     	;# 
  2404  0711                     	;# 
  2405  0712                     	;# 
  2406  0713                     	;# 
  2407  0714                     	;# 
  2408  0716                     	;# 
  2409  0717                     	;# 
  2410  0718                     	;# 
  2411  0719                     	;# 
  2412  071A                     	;# 
  2413  071B                     	;# 
  2414  071C                     	;# 
  2415  071D                     	;# 
  2416  071E                     	;# 
  2417  0796                     	;# 
  2418  0797                     	;# 
  2419  0798                     	;# 
  2420  0799                     	;# 
  2421  079A                     	;# 
  2422  079B                     	;# 
  2423  080C                     	;# 
  2424  080D                     	;# 
  2425  080E                     	;# 
  2426  080F                     	;# 
  2427  0810                     	;# 
  2428  0811                     	;# 
  2429  0812                     	;# 
  2430  0813                     	;# 
  2431  0814                     	;# 
  2432  081A                     	;# 
  2433  081B                     	;# 
  2434  081C                     	;# 
  2435  081D                     	;# 
  2436  081E                     	;# 
  2437  081F                     	;# 
  2438  088C                     	;# 
  2439  088D                     	;# 
  2440  088E                     	;# 
  2441  088F                     	;# 
  2442  0890                     	;# 
  2443  0891                     	;# 
  2444  0892                     	;# 
  2445  0893                     	;# 
  2446  0895                     	;# 
  2447  0896                     	;# 
  2448  0897                     	;# 
  2449  0898                     	;# 
  2450  0899                     	;# 
  2451  089A                     	;# 
  2452  089B                     	;# 
  2453  090C                     	;# 
  2454  090E                     	;# 
  2455  090F                     	;# 
  2456  091F                     	;# 
  2457  091F                     	;# 
  2458  098F                     	;# 
  2459  098F                     	;# 
  2460  0990                     	;# 
  2461  0991                     	;# 
  2462  0992                     	;# 
  2463  0993                     	;# 
  2464  0994                     	;# 
  2465  0995                     	;# 
  2466  0996                     	;# 
  2467  0997                     	;# 
  2468  0E0F                     	;# 
  2469  0E10                     	;# 
  2470  0E11                     	;# 
  2471  0E12                     	;# 
  2472  0E13                     	;# 
  2473  0E14                     	;# 
  2474  0E15                     	;# 
  2475  0E16                     	;# 
  2476  0E17                     	;# 
  2477  0E18                     	;# 
  2478  0E19                     	;# 
  2479  0E1A                     	;# 
  2480  0E1B                     	;# 
  2481  0E1C                     	;# 
  2482  0E1D                     	;# 
  2483  0E1E                     	;# 
  2484  0E1F                     	;# 
  2485  0E20                     	;# 
  2486  0E21                     	;# 
  2487  0E22                     	;# 
  2488  0E23                     	;# 
  2489  0E24                     	;# 
  2490  0E25                     	;# 
  2491  0E26                     	;# 
  2492  0E27                     	;# 
  2493  0E28                     	;# 
  2494  0E29                     	;# 
  2495  0E2A                     	;# 
  2496  0E2B                     	;# 
  2497  0E2C                     	;# 
  2498  0E2D                     	;# 
  2499  0E2E                     	;# 
  2500  0E2F                     	;# 
  2501  0E30                     	;# 
  2502  0E31                     	;# 
  2503  0E32                     	;# 
  2504  0E33                     	;# 
  2505  0E34                     	;# 
  2506  0E35                     	;# 
  2507  0E36                     	;# 
  2508  0E37                     	;# 
  2509  0E8F                     	;# 
  2510  0E90                     	;# 
  2511  0E91                     	;# 
  2512  0E92                     	;# 
  2513  0E93                     	;# 
  2514  0E94                     	;# 
  2515  0E95                     	;# 
  2516  0E96                     	;# 
  2517  0E97                     	;# 
  2518  0E9C                     	;# 
  2519  0E9D                     	;# 
  2520  0E9E                     	;# 
  2521  0EA1                     	;# 
  2522  0EA2                     	;# 
  2523  0EA3                     	;# 
  2524  0EA4                     	;# 
  2525  0EA5                     	;# 
  2526  0EA9                     	;# 
  2527  0EAA                     	;# 
  2528  0EAB                     	;# 
  2529  0EAC                     	;# 
  2530  0EB1                     	;# 
  2531  0EB2                     	;# 
  2532  0EB3                     	;# 
  2533  0EB8                     	;# 
  2534  0EB9                     	;# 
  2535  0EBA                     	;# 
  2536  0EBB                     	;# 
  2537  0EBC                     	;# 
  2538  0EBD                     	;# 
  2539  0EBE                     	;# 
  2540  0EC3                     	;# 
  2541  0EC5                     	;# 
  2542  0EC6                     	;# 
  2543  0EC7                     	;# 
  2544  0EC8                     	;# 
  2545  0EC9                     	;# 
  2546  0ECA                     	;# 
  2547  0ECB                     	;# 
  2548  0ECC                     	;# 
  2549  0F10                     	;# 
  2550  0F11                     	;# 
  2551  0F12                     	;# 
  2552  0F13                     	;# 
  2553  0F14                     	;# 
  2554  0F15                     	;# 
  2555  0F16                     	;# 
  2556  0F17                     	;# 
  2557  0F18                     	;# 
  2558  0F19                     	;# 
  2559  0F1A                     	;# 
  2560  0F1B                     	;# 
  2561  0F1C                     	;# 
  2562  0F1D                     	;# 
  2563  0F1E                     	;# 
  2564  0F1F                     	;# 
  2565  0F20                     	;# 
  2566  0F21                     	;# 
  2567  0F22                     	;# 
  2568  0F23                     	;# 
  2569  0F24                     	;# 
  2570  0F25                     	;# 
  2571  0F26                     	;# 
  2572  0F27                     	;# 
  2573  0F38                     	;# 
  2574  0F39                     	;# 
  2575  0F3A                     	;# 
  2576  0F3B                     	;# 
  2577  0F3C                     	;# 
  2578  0F3D                     	;# 
  2579  0F3E                     	;# 
  2580  0F3F                     	;# 
  2581  0F40                     	;# 
  2582  0F41                     	;# 
  2583  0F43                     	;# 
  2584  0F44                     	;# 
  2585  0F45                     	;# 
  2586  0F46                     	;# 
  2587  0F47                     	;# 
  2588  0F48                     	;# 
  2589  0F49                     	;# 
  2590  0F4A                     	;# 
  2591  0F4B                     	;# 
  2592  0F4C                     	;# 
  2593  0F4E                     	;# 
  2594  0F4F                     	;# 
  2595  0F50                     	;# 
  2596  0F51                     	;# 
  2597  0F52                     	;# 
  2598  0F53                     	;# 
  2599  0F54                     	;# 
  2600  0F55                     	;# 
  2601  0F56                     	;# 
  2602  0F57                     	;# 
  2603  0F65                     	;# 
  2604  0F68                     	;# 
  2605  0F69                     	;# 
  2606  0F6A                     	;# 
  2607  0F6B                     	;# 
  2608  0FE4                     	;# 
  2609  0FE5                     	;# 
  2610  0FE6                     	;# 
  2611  0FE7                     	;# 
  2612  0FE8                     	;# 
  2613  0FE9                     	;# 
  2614  0FEA                     	;# 
  2615  0FEB                     	;# 
  2616  0FED                     	;# 
  2617  0FEE                     	;# 
  2618  0FEF                     	;# 
  2619  0000                     	;# 
  2620  0001                     	;# 
  2621  0002                     	;# 
  2622  0003                     	;# 
  2623  0004                     	;# 
  2624  0005                     	;# 
  2625  0006                     	;# 
  2626  0007                     	;# 
  2627  0008                     	;# 
  2628  0009                     	;# 
  2629  000A                     	;# 
  2630  000B                     	;# 
  2631  000C                     	;# 
  2632  000D                     	;# 
  2633  000E                     	;# 
  2634  0010                     	;# 
  2635  0011                     	;# 
  2636  0012                     	;# 
  2637  0013                     	;# 
  2638  0016                     	;# 
  2639  0017                     	;# 
  2640  0018                     	;# 
  2641  001C                     	;# 
  2642  001C                     	;# 
  2643  001D                     	;# 
  2644  001D                     	;# 
  2645  001E                     	;# 
  2646  001F                     	;# 
  2647  008C                     	;# 
  2648  008C                     	;# 
  2649  008D                     	;# 
  2650  008E                     	;# 
  2651  008E                     	;# 
  2652  008F                     	;# 
  2653  0090                     	;# 
  2654  0090                     	;# 
  2655  0091                     	;# 
  2656  0093                     	;# 
  2657  0094                     	;# 
  2658  0095                     	;# 
  2659  0096                     	;# 
  2660  0097                     	;# 
  2661  0098                     	;# 
  2662  0099                     	;# 
  2663  009A                     	;# 
  2664  009B                     	;# 
  2665  009C                     	;# 
  2666  009D                     	;# 
  2667  009E                     	;# 
  2668  010C                     	;# 
  2669  010D                     	;# 
  2670  010E                     	;# 
  2671  010E                     	;# 
  2672  010F                     	;# 
  2673  0110                     	;# 
  2674  0110                     	;# 
  2675  0111                     	;# 
  2676  0112                     	;# 
  2677  0112                     	;# 
  2678  0113                     	;# 
  2679  0114                     	;# 
  2680  0114                     	;# 
  2681  0115                     	;# 
  2682  0116                     	;# 
  2683  0116                     	;# 
  2684  0117                     	;# 
  2685  0119                     	;# 
  2686  0119                     	;# 
  2687  0119                     	;# 
  2688  011A                     	;# 
  2689  011A                     	;# 
  2690  011A                     	;# 
  2691  011B                     	;# 
  2692  011B                     	;# 
  2693  011B                     	;# 
  2694  011B                     	;# 
  2695  011B                     	;# 
  2696  011C                     	;# 
  2697  011C                     	;# 
  2698  011C                     	;# 
  2699  011D                     	;# 
  2700  011D                     	;# 
  2701  011D                     	;# 
  2702  011E                     	;# 
  2703  011E                     	;# 
  2704  011E                     	;# 
  2705  011F                     	;# 
  2706  011F                     	;# 
  2707  011F                     	;# 
  2708  011F                     	;# 
  2709  011F                     	;# 
  2710  018C                     	;# 
  2711  018D                     	;# 
  2712  018E                     	;# 
  2713  018F                     	;# 
  2714  0190                     	;# 
  2715  0191                     	;# 
  2716  0192                     	;# 
  2717  0196                     	;# 
  2718  0197                     	;# 
  2719  0198                     	;# 
  2720  0199                     	;# 
  2721  019A                     	;# 
  2722  019B                     	;# 
  2723  019C                     	;# 
  2724  020C                     	;# 
  2725  020D                     	;# 
  2726  020E                     	;# 
  2727  020F                     	;# 
  2728  020F                     	;# 
  2729  0210                     	;# 
  2730  0210                     	;# 
  2731  0211                     	;# 
  2732  0211                     	;# 
  2733  0212                     	;# 
  2734  0213                     	;# 
  2735  0214                     	;# 
  2736  0215                     	;# 
  2737  0215                     	;# 
  2738  0216                     	;# 
  2739  0216                     	;# 
  2740  0217                     	;# 
  2741  0217                     	;# 
  2742  0218                     	;# 
  2743  0219                     	;# 
  2744  021A                     	;# 
  2745  021B                     	;# 
  2746  021B                     	;# 
  2747  021C                     	;# 
  2748  021C                     	;# 
  2749  021D                     	;# 
  2750  021D                     	;# 
  2751  021E                     	;# 
  2752  021F                     	;# 
  2753  028C                     	;# 
  2754  028C                     	;# 
  2755  028D                     	;# 
  2756  028D                     	;# 
  2757  028E                     	;# 
  2758  028F                     	;# 
  2759  0290                     	;# 
  2760  0290                     	;# 
  2761  0291                     	;# 
  2762  0292                     	;# 
  2763  0292                     	;# 
  2764  0293                     	;# 
  2765  0293                     	;# 
  2766  0294                     	;# 
  2767  0295                     	;# 
  2768  0296                     	;# 
  2769  0296                     	;# 
  2770  0297                     	;# 
  2771  0298                     	;# 
  2772  0298                     	;# 
  2773  0299                     	;# 
  2774  0299                     	;# 
  2775  029A                     	;# 
  2776  029B                     	;# 
  2777  029C                     	;# 
  2778  029C                     	;# 
  2779  029D                     	;# 
  2780  030C                     	;# 
  2781  030C                     	;# 
  2782  030D                     	;# 
  2783  030E                     	;# 
  2784  030F                     	;# 
  2785  0310                     	;# 
  2786  0310                     	;# 
  2787  0311                     	;# 
  2788  0312                     	;# 
  2789  0313                     	;# 
  2790  0314                     	;# 
  2791  0314                     	;# 
  2792  0315                     	;# 
  2793  0316                     	;# 
  2794  0317                     	;# 
  2795  0318                     	;# 
  2796  0318                     	;# 
  2797  0319                     	;# 
  2798  031A                     	;# 
  2799  031B                     	;# 
  2800  031C                     	;# 
  2801  031C                     	;# 
  2802  031D                     	;# 
  2803  031E                     	;# 
  2804  031F                     	;# 
  2805  038C                     	;# 
  2806  038D                     	;# 
  2807  038E                     	;# 
  2808  0390                     	;# 
  2809  0391                     	;# 
  2810  0392                     	;# 
  2811  040C                     	;# 
  2812  040D                     	;# 
  2813  040E                     	;# 
  2814  040F                     	;# 
  2815  0410                     	;# 
  2816  0411                     	;# 
  2817  0416                     	;# 
  2818  0416                     	;# 
  2819  0417                     	;# 
  2820  0418                     	;# 
  2821  0418                     	;# 
  2822  0419                     	;# 
  2823  041A                     	;# 
  2824  041A                     	;# 
  2825  041B                     	;# 
  2826  041C                     	;# 
  2827  041C                     	;# 
  2828  041D                     	;# 
  2829  041E                     	;# 
  2830  041F                     	;# 
  2831  048C                     	;# 
  2832  048C                     	;# 
  2833  048D                     	;# 
  2834  048E                     	;# 
  2835  048F                     	;# 
  2836  048F                     	;# 
  2837  0490                     	;# 
  2838  0491                     	;# 
  2839  0492                     	;# 
  2840  0492                     	;# 
  2841  0493                     	;# 
  2842  0494                     	;# 
  2843  0495                     	;# 
  2844  0495                     	;# 
  2845  0496                     	;# 
  2846  0497                     	;# 
  2847  0498                     	;# 
  2848  0499                     	;# 
  2849  049A                     	;# 
  2850  049B                     	;# 
  2851  049C                     	;# 
  2852  049D                     	;# 
  2853  050C                     	;# 
  2854  050C                     	;# 
  2855  050D                     	;# 
  2856  050E                     	;# 
  2857  050F                     	;# 
  2858  050F                     	;# 
  2859  0510                     	;# 
  2860  0511                     	;# 
  2861  0512                     	;# 
  2862  0512                     	;# 
  2863  0513                     	;# 
  2864  0514                     	;# 
  2865  0515                     	;# 
  2866  0515                     	;# 
  2867  0516                     	;# 
  2868  0517                     	;# 
  2869  0518                     	;# 
  2870  0519                     	;# 
  2871  051A                     	;# 
  2872  051B                     	;# 
  2873  051C                     	;# 
  2874  051D                     	;# 
  2875  058C                     	;# 
  2876  058C                     	;# 
  2877  058D                     	;# 
  2878  058E                     	;# 
  2879  058F                     	;# 
  2880  058F                     	;# 
  2881  0590                     	;# 
  2882  0591                     	;# 
  2883  0592                     	;# 
  2884  0593                     	;# 
  2885  060C                     	;# 
  2886  060D                     	;# 
  2887  060E                     	;# 
  2888  060F                     	;# 
  2889  0610                     	;# 
  2890  0611                     	;# 
  2891  0612                     	;# 
  2892  0613                     	;# 
  2893  0614                     	;# 
  2894  0616                     	;# 
  2895  0617                     	;# 
  2896  0618                     	;# 
  2897  0619                     	;# 
  2898  061A                     	;# 
  2899  061B                     	;# 
  2900  061C                     	;# 
  2901  061D                     	;# 
  2902  061E                     	;# 
  2903  068C                     	;# 
  2904  068D                     	;# 
  2905  068E                     	;# 
  2906  068F                     	;# 
  2907  0690                     	;# 
  2908  0691                     	;# 
  2909  0692                     	;# 
  2910  0693                     	;# 
  2911  0694                     	;# 
  2912  070C                     	;# 
  2913  070D                     	;# 
  2914  070E                     	;# 
  2915  070F                     	;# 
  2916  0710                     	;# 
  2917  0711                     	;# 
  2918  0712                     	;# 
  2919  0713                     	;# 
  2920  0714                     	;# 
  2921  0716                     	;# 
  2922  0717                     	;# 
  2923  0718                     	;# 
  2924  0719                     	;# 
  2925  071A                     	;# 
  2926  071B                     	;# 
  2927  071C                     	;# 
  2928  071D                     	;# 
  2929  071E                     	;# 
  2930  0796                     	;# 
  2931  0797                     	;# 
  2932  0798                     	;# 
  2933  0799                     	;# 
  2934  079A                     	;# 
  2935  079B                     	;# 
  2936  080C                     	;# 
  2937  080D                     	;# 
  2938  080E                     	;# 
  2939  080F                     	;# 
  2940  0810                     	;# 
  2941  0811                     	;# 
  2942  0812                     	;# 
  2943  0813                     	;# 
  2944  0814                     	;# 
  2945  081A                     	;# 
  2946  081B                     	;# 
  2947  081C                     	;# 
  2948  081D                     	;# 
  2949  081E                     	;# 
  2950  081F                     	;# 
  2951  088C                     	;# 
  2952  088D                     	;# 
  2953  088E                     	;# 
  2954  088F                     	;# 
  2955  0890                     	;# 
  2956  0891                     	;# 
  2957  0892                     	;# 
  2958  0893                     	;# 
  2959  0895                     	;# 
  2960  0896                     	;# 
  2961  0897                     	;# 
  2962  0898                     	;# 
  2963  0899                     	;# 
  2964  089A                     	;# 
  2965  089B                     	;# 
  2966  090C                     	;# 
  2967  090E                     	;# 
  2968  090F                     	;# 
  2969  091F                     	;# 
  2970  091F                     	;# 
  2971  098F                     	;# 
  2972  098F                     	;# 
  2973  0990                     	;# 
  2974  0991                     	;# 
  2975  0992                     	;# 
  2976  0993                     	;# 
  2977  0994                     	;# 
  2978  0995                     	;# 
  2979  0996                     	;# 
  2980  0997                     	;# 
  2981  0E0F                     	;# 
  2982  0E10                     	;# 
  2983  0E11                     	;# 
  2984  0E12                     	;# 
  2985  0E13                     	;# 
  2986  0E14                     	;# 
  2987  0E15                     	;# 
  2988  0E16                     	;# 
  2989  0E17                     	;# 
  2990  0E18                     	;# 
  2991  0E19                     	;# 
  2992  0E1A                     	;# 
  2993  0E1B                     	;# 
  2994  0E1C                     	;# 
  2995  0E1D                     	;# 
  2996  0E1E                     	;# 
  2997  0E1F                     	;# 
  2998  0E20                     	;# 
  2999  0E21                     	;# 
  3000  0E22                     	;# 
  3001  0E23                     	;# 
  3002  0E24                     	;# 
  3003  0E25                     	;# 
  3004  0E26                     	;# 
  3005  0E27                     	;# 
  3006  0E28                     	;# 
  3007  0E29                     	;# 
  3008  0E2A                     	;# 
  3009  0E2B                     	;# 
  3010  0E2C                     	;# 
  3011  0E2D                     	;# 
  3012  0E2E                     	;# 
  3013  0E2F                     	;# 
  3014  0E30                     	;# 
  3015  0E31                     	;# 
  3016  0E32                     	;# 
  3017  0E33                     	;# 
  3018  0E34                     	;# 
  3019  0E35                     	;# 
  3020  0E36                     	;# 
  3021  0E37                     	;# 
  3022  0E8F                     	;# 
  3023  0E90                     	;# 
  3024  0E91                     	;# 
  3025  0E92                     	;# 
  3026  0E93                     	;# 
  3027  0E94                     	;# 
  3028  0E95                     	;# 
  3029  0E96                     	;# 
  3030  0E97                     	;# 
  3031  0E9C                     	;# 
  3032  0E9D                     	;# 
  3033  0E9E                     	;# 
  3034  0EA1                     	;# 
  3035  0EA2                     	;# 
  3036  0EA3                     	;# 
  3037  0EA4                     	;# 
  3038  0EA5                     	;# 
  3039  0EA9                     	;# 
  3040  0EAA                     	;# 
  3041  0EAB                     	;# 
  3042  0EAC                     	;# 
  3043  0EB1                     	;# 
  3044  0EB2                     	;# 
  3045  0EB3                     	;# 
  3046  0EB8                     	;# 
  3047  0EB9                     	;# 
  3048  0EBA                     	;# 
  3049  0EBB                     	;# 
  3050  0EBC                     	;# 
  3051  0EBD                     	;# 
  3052  0EBE                     	;# 
  3053  0EC3                     	;# 
  3054  0EC5                     	;# 
  3055  0EC6                     	;# 
  3056  0EC7                     	;# 
  3057  0EC8                     	;# 
  3058  0EC9                     	;# 
  3059  0ECA                     	;# 
  3060  0ECB                     	;# 
  3061  0ECC                     	;# 
  3062  0F10                     	;# 
  3063  0F11                     	;# 
  3064  0F12                     	;# 
  3065  0F13                     	;# 
  3066  0F14                     	;# 
  3067  0F15                     	;# 
  3068  0F16                     	;# 
  3069  0F17                     	;# 
  3070  0F18                     	;# 
  3071  0F19                     	;# 
  3072  0F1A                     	;# 
  3073  0F1B                     	;# 
  3074  0F1C                     	;# 
  3075  0F1D                     	;# 
  3076  0F1E                     	;# 
  3077  0F1F                     	;# 
  3078  0F20                     	;# 
  3079  0F21                     	;# 
  3080  0F22                     	;# 
  3081  0F23                     	;# 
  3082  0F24                     	;# 
  3083  0F25                     	;# 
  3084  0F26                     	;# 
  3085  0F27                     	;# 
  3086  0F38                     	;# 
  3087  0F39                     	;# 
  3088  0F3A                     	;# 
  3089  0F3B                     	;# 
  3090  0F3C                     	;# 
  3091  0F3D                     	;# 
  3092  0F3E                     	;# 
  3093  0F3F                     	;# 
  3094  0F40                     	;# 
  3095  0F41                     	;# 
  3096  0F43                     	;# 
  3097  0F44                     	;# 
  3098  0F45                     	;# 
  3099  0F46                     	;# 
  3100  0F47                     	;# 
  3101  0F48                     	;# 
  3102  0F49                     	;# 
  3103  0F4A                     	;# 
  3104  0F4B                     	;# 
  3105  0F4C                     	;# 
  3106  0F4E                     	;# 
  3107  0F4F                     	;# 
  3108  0F50                     	;# 
  3109  0F51                     	;# 
  3110  0F52                     	;# 
  3111  0F53                     	;# 
  3112  0F54                     	;# 
  3113  0F55                     	;# 
  3114  0F56                     	;# 
  3115  0F57                     	;# 
  3116  0F65                     	;# 
  3117  0F68                     	;# 
  3118  0F69                     	;# 
  3119  0F6A                     	;# 
  3120  0F6B                     	;# 
  3121  0FE4                     	;# 
  3122  0FE5                     	;# 
  3123  0FE6                     	;# 
  3124  0FE7                     	;# 
  3125  0FE8                     	;# 
  3126  0FE9                     	;# 
  3127  0FEA                     	;# 
  3128  0FEB                     	;# 
  3129  0FED                     	;# 
  3130  0FEE                     	;# 
  3131  0FEF                     	;# 
  3132  0000                     	;# 
  3133  0001                     	;# 
  3134  0002                     	;# 
  3135  0003                     	;# 
  3136  0004                     	;# 
  3137  0005                     	;# 
  3138  0006                     	;# 
  3139  0007                     	;# 
  3140  0008                     	;# 
  3141  0009                     	;# 
  3142  000A                     	;# 
  3143  000B                     	;# 
  3144  000C                     	;# 
  3145  000D                     	;# 
  3146  000E                     	;# 
  3147  0010                     	;# 
  3148  0011                     	;# 
  3149  0012                     	;# 
  3150  0013                     	;# 
  3151  0016                     	;# 
  3152  0017                     	;# 
  3153  0018                     	;# 
  3154  001C                     	;# 
  3155  001C                     	;# 
  3156  001D                     	;# 
  3157  001D                     	;# 
  3158  001E                     	;# 
  3159  001F                     	;# 
  3160  008C                     	;# 
  3161  008C                     	;# 
  3162  008D                     	;# 
  3163  008E                     	;# 
  3164  008E                     	;# 
  3165  008F                     	;# 
  3166  0090                     	;# 
  3167  0090                     	;# 
  3168  0091                     	;# 
  3169  0093                     	;# 
  3170  0094                     	;# 
  3171  0095                     	;# 
  3172  0096                     	;# 
  3173  0097                     	;# 
  3174  0098                     	;# 
  3175  0099                     	;# 
  3176  009A                     	;# 
  3177  009B                     	;# 
  3178  009C                     	;# 
  3179  009D                     	;# 
  3180  009E                     	;# 
  3181  010C                     	;# 
  3182  010D                     	;# 
  3183  010E                     	;# 
  3184  010E                     	;# 
  3185  010F                     	;# 
  3186  0110                     	;# 
  3187  0110                     	;# 
  3188  0111                     	;# 
  3189  0112                     	;# 
  3190  0112                     	;# 
  3191  0113                     	;# 
  3192  0114                     	;# 
  3193  0114                     	;# 
  3194  0115                     	;# 
  3195  0116                     	;# 
  3196  0116                     	;# 
  3197  0117                     	;# 
  3198  0119                     	;# 
  3199  0119                     	;# 
  3200  0119                     	;# 
  3201  011A                     	;# 
  3202  011A                     	;# 
  3203  011A                     	;# 
  3204  011B                     	;# 
  3205  011B                     	;# 
  3206  011B                     	;# 
  3207  011B                     	;# 
  3208  011B                     	;# 
  3209  011C                     	;# 
  3210  011C                     	;# 
  3211  011C                     	;# 
  3212  011D                     	;# 
  3213  011D                     	;# 
  3214  011D                     	;# 
  3215  011E                     	;# 
  3216  011E                     	;# 
  3217  011E                     	;# 
  3218  011F                     	;# 
  3219  011F                     	;# 
  3220  011F                     	;# 
  3221  011F                     	;# 
  3222  011F                     	;# 
  3223  018C                     	;# 
  3224  018D                     	;# 
  3225  018E                     	;# 
  3226  018F                     	;# 
  3227  0190                     	;# 
  3228  0191                     	;# 
  3229  0192                     	;# 
  3230  0196                     	;# 
  3231  0197                     	;# 
  3232  0198                     	;# 
  3233  0199                     	;# 
  3234  019A                     	;# 
  3235  019B                     	;# 
  3236  019C                     	;# 
  3237  020C                     	;# 
  3238  020D                     	;# 
  3239  020E                     	;# 
  3240  020F                     	;# 
  3241  020F                     	;# 
  3242  0210                     	;# 
  3243  0210                     	;# 
  3244  0211                     	;# 
  3245  0211                     	;# 
  3246  0212                     	;# 
  3247  0213                     	;# 
  3248  0214                     	;# 
  3249  0215                     	;# 
  3250  0215                     	;# 
  3251  0216                     	;# 
  3252  0216                     	;# 
  3253  0217                     	;# 
  3254  0217                     	;# 
  3255  0218                     	;# 
  3256  0219                     	;# 
  3257  021A                     	;# 
  3258  021B                     	;# 
  3259  021B                     	;# 
  3260  021C                     	;# 
  3261  021C                     	;# 
  3262  021D                     	;# 
  3263  021D                     	;# 
  3264  021E                     	;# 
  3265  021F                     	;# 
  3266  028C                     	;# 
  3267  028C                     	;# 
  3268  028D                     	;# 
  3269  028D                     	;# 
  3270  028E                     	;# 
  3271  028F                     	;# 
  3272  0290                     	;# 
  3273  0290                     	;# 
  3274  0291                     	;# 
  3275  0292                     	;# 
  3276  0292                     	;# 
  3277  0293                     	;# 
  3278  0293                     	;# 
  3279  0294                     	;# 
  3280  0295                     	;# 
  3281  0296                     	;# 
  3282  0296                     	;# 
  3283  0297                     	;# 
  3284  0298                     	;# 
  3285  0298                     	;# 
  3286  0299                     	;# 
  3287  0299                     	;# 
  3288  029A                     	;# 
  3289  029B                     	;# 
  3290  029C                     	;# 
  3291  029C                     	;# 
  3292  029D                     	;# 
  3293  030C                     	;# 
  3294  030C                     	;# 
  3295  030D                     	;# 
  3296  030E                     	;# 
  3297  030F                     	;# 
  3298  0310                     	;# 
  3299  0310                     	;# 
  3300  0311                     	;# 
  3301  0312                     	;# 
  3302  0313                     	;# 
  3303  0314                     	;# 
  3304  0314                     	;# 
  3305  0315                     	;# 
  3306  0316                     	;# 
  3307  0317                     	;# 
  3308  0318                     	;# 
  3309  0318                     	;# 
  3310  0319                     	;# 
  3311  031A                     	;# 
  3312  031B                     	;# 
  3313  031C                     	;# 
  3314  031C                     	;# 
  3315  031D                     	;# 
  3316  031E                     	;# 
  3317  031F                     	;# 
  3318  038C                     	;# 
  3319  038D                     	;# 
  3320  038E                     	;# 
  3321  0390                     	;# 
  3322  0391                     	;# 
  3323  0392                     	;# 
  3324  040C                     	;# 
  3325  040D                     	;# 
  3326  040E                     	;# 
  3327  040F                     	;# 
  3328  0410                     	;# 
  3329  0411                     	;# 
  3330  0416                     	;# 
  3331  0416                     	;# 
  3332  0417                     	;# 
  3333  0418                     	;# 
  3334  0418                     	;# 
  3335  0419                     	;# 
  3336  041A                     	;# 
  3337  041A                     	;# 
  3338  041B                     	;# 
  3339  041C                     	;# 
  3340  041C                     	;# 
  3341  041D                     	;# 
  3342  041E                     	;# 
  3343  041F                     	;# 
  3344  048C                     	;# 
  3345  048C                     	;# 
  3346  048D                     	;# 
  3347  048E                     	;# 
  3348  048F                     	;# 
  3349  048F                     	;# 
  3350  0490                     	;# 
  3351  0491                     	;# 
  3352  0492                     	;# 
  3353  0492                     	;# 
  3354  0493                     	;# 
  3355  0494                     	;# 
  3356  0495                     	;# 
  3357  0495                     	;# 
  3358  0496                     	;# 
  3359  0497                     	;# 
  3360  0498                     	;# 
  3361  0499                     	;# 
  3362  049A                     	;# 
  3363  049B                     	;# 
  3364  049C                     	;# 
  3365  049D                     	;# 
  3366  050C                     	;# 
  3367  050C                     	;# 
  3368  050D                     	;# 
  3369  050E                     	;# 
  3370  050F                     	;# 
  3371  050F                     	;# 
  3372  0510                     	;# 
  3373  0511                     	;# 
  3374  0512                     	;# 
  3375  0512                     	;# 
  3376  0513                     	;# 
  3377  0514                     	;# 
  3378  0515                     	;# 
  3379  0515                     	;# 
  3380  0516                     	;# 
  3381  0517                     	;# 
  3382  0518                     	;# 
  3383  0519                     	;# 
  3384  051A                     	;# 
  3385  051B                     	;# 
  3386  051C                     	;# 
  3387  051D                     	;# 
  3388  058C                     	;# 
  3389  058C                     	;# 
  3390  058D                     	;# 
  3391  058E                     	;# 
  3392  058F                     	;# 
  3393  058F                     	;# 
  3394  0590                     	;# 
  3395  0591                     	;# 
  3396  0592                     	;# 
  3397  0593                     	;# 
  3398  060C                     	;# 
  3399  060D                     	;# 
  3400  060E                     	;# 
  3401  060F                     	;# 
  3402  0610                     	;# 
  3403  0611                     	;# 
  3404  0612                     	;# 
  3405  0613                     	;# 
  3406  0614                     	;# 
  3407  0616                     	;# 
  3408  0617                     	;# 
  3409  0618                     	;# 
  3410  0619                     	;# 
  3411  061A                     	;# 
  3412  061B                     	;# 
  3413  061C                     	;# 
  3414  061D                     	;# 
  3415  061E                     	;# 
  3416  068C                     	;# 
  3417  068D                     	;# 
  3418  068E                     	;# 
  3419  068F                     	;# 
  3420  0690                     	;# 
  3421  0691                     	;# 
  3422  0692                     	;# 
  3423  0693                     	;# 
  3424  0694                     	;# 
  3425  070C                     	;# 
  3426  070D                     	;# 
  3427  070E                     	;# 
  3428  070F                     	;# 
  3429  0710                     	;# 
  3430  0711                     	;# 
  3431  0712                     	;# 
  3432  0713                     	;# 
  3433  0714                     	;# 
  3434  0716                     	;# 
  3435  0717                     	;# 
  3436  0718                     	;# 
  3437  0719                     	;# 
  3438  071A                     	;# 
  3439  071B                     	;# 
  3440  071C                     	;# 
  3441  071D                     	;# 
  3442  071E                     	;# 
  3443  0796                     	;# 
  3444  0797                     	;# 
  3445  0798                     	;# 
  3446  0799                     	;# 
  3447  079A                     	;# 
  3448  079B                     	;# 
  3449  080C                     	;# 
  3450  080D                     	;# 
  3451  080E                     	;# 
  3452  080F                     	;# 
  3453  0810                     	;# 
  3454  0811                     	;# 
  3455  0812                     	;# 
  3456  0813                     	;# 
  3457  0814                     	;# 
  3458  081A                     	;# 
  3459  081B                     	;# 
  3460  081C                     	;# 
  3461  081D                     	;# 
  3462  081E                     	;# 
  3463  081F                     	;# 
  3464  088C                     	;# 
  3465  088D                     	;# 
  3466  088E                     	;# 
  3467  088F                     	;# 
  3468  0890                     	;# 
  3469  0891                     	;# 
  3470  0892                     	;# 
  3471  0893                     	;# 
  3472  0895                     	;# 
  3473  0896                     	;# 
  3474  0897                     	;# 
  3475  0898                     	;# 
  3476  0899                     	;# 
  3477  089A                     	;# 
  3478  089B                     	;# 
  3479  090C                     	;# 
  3480  090E                     	;# 
  3481  090F                     	;# 
  3482  091F                     	;# 
  3483  091F                     	;# 
  3484  098F                     	;# 
  3485  098F                     	;# 
  3486  0990                     	;# 
  3487  0991                     	;# 
  3488  0992                     	;# 
  3489  0993                     	;# 
  3490  0994                     	;# 
  3491  0995                     	;# 
  3492  0996                     	;# 
  3493  0997                     	;# 
  3494  0E0F                     	;# 
  3495  0E10                     	;# 
  3496  0E11                     	;# 
  3497  0E12                     	;# 
  3498  0E13                     	;# 
  3499  0E14                     	;# 
  3500  0E15                     	;# 
  3501  0E16                     	;# 
  3502  0E17                     	;# 
  3503  0E18                     	;# 
  3504  0E19                     	;# 
  3505  0E1A                     	;# 
  3506  0E1B                     	;# 
  3507  0E1C                     	;# 
  3508  0E1D                     	;# 
  3509  0E1E                     	;# 
  3510  0E1F                     	;# 
  3511  0E20                     	;# 
  3512  0E21                     	;# 
  3513  0E22                     	;# 
  3514  0E23                     	;# 
  3515  0E24                     	;# 
  3516  0E25                     	;# 
  3517  0E26                     	;# 
  3518  0E27                     	;# 
  3519  0E28                     	;# 
  3520  0E29                     	;# 
  3521  0E2A                     	;# 
  3522  0E2B                     	;# 
  3523  0E2C                     	;# 
  3524  0E2D                     	;# 
  3525  0E2E                     	;# 
  3526  0E2F                     	;# 
  3527  0E30                     	;# 
  3528  0E31                     	;# 
  3529  0E32                     	;# 
  3530  0E33                     	;# 
  3531  0E34                     	;# 
  3532  0E35                     	;# 
  3533  0E36                     	;# 
  3534  0E37                     	;# 
  3535  0E8F                     	;# 
  3536  0E90                     	;# 
  3537  0E91                     	;# 
  3538  0E92                     	;# 
  3539  0E93                     	;# 
  3540  0E94                     	;# 
  3541  0E95                     	;# 
  3542  0E96                     	;# 
  3543  0E97                     	;# 
  3544  0E9C                     	;# 
  3545  0E9D                     	;# 
  3546  0E9E                     	;# 
  3547  0EA1                     	;# 
  3548  0EA2                     	;# 
  3549  0EA3                     	;# 
  3550  0EA4                     	;# 
  3551  0EA5                     	;# 
  3552  0EA9                     	;# 
  3553  0EAA                     	;# 
  3554  0EAB                     	;# 
  3555  0EAC                     	;# 
  3556  0EB1                     	;# 
  3557  0EB2                     	;# 
  3558  0EB3                     	;# 
  3559  0EB8                     	;# 
  3560  0EB9                     	;# 
  3561  0EBA                     	;# 
  3562  0EBB                     	;# 
  3563  0EBC                     	;# 
  3564  0EBD                     	;# 
  3565  0EBE                     	;# 
  3566  0EC3                     	;# 
  3567  0EC5                     	;# 
  3568  0EC6                     	;# 
  3569  0EC7                     	;# 
  3570  0EC8                     	;# 
  3571  0EC9                     	;# 
  3572  0ECA                     	;# 
  3573  0ECB                     	;# 
  3574  0ECC                     	;# 
  3575  0F10                     	;# 
  3576  0F11                     	;# 
  3577  0F12                     	;# 
  3578  0F13                     	;# 
  3579  0F14                     	;# 
  3580  0F15                     	;# 
  3581  0F16                     	;# 
  3582  0F17                     	;# 
  3583  0F18                     	;# 
  3584  0F19                     	;# 
  3585  0F1A                     	;# 
  3586  0F1B                     	;# 
  3587  0F1C                     	;# 
  3588  0F1D                     	;# 
  3589  0F1E                     	;# 
  3590  0F1F                     	;# 
  3591  0F20                     	;# 
  3592  0F21                     	;# 
  3593  0F22                     	;# 
  3594  0F23                     	;# 
  3595  0F24                     	;# 
  3596  0F25                     	;# 
  3597  0F26                     	;# 
  3598  0F27                     	;# 
  3599  0F38                     	;# 
  3600  0F39                     	;# 
  3601  0F3A                     	;# 
  3602  0F3B                     	;# 
  3603  0F3C                     	;# 
  3604  0F3D                     	;# 
  3605  0F3E                     	;# 
  3606  0F3F                     	;# 
  3607  0F40                     	;# 
  3608  0F41                     	;# 
  3609  0F43                     	;# 
  3610  0F44                     	;# 
  3611  0F45                     	;# 
  3612  0F46                     	;# 
  3613  0F47                     	;# 
  3614  0F48                     	;# 
  3615  0F49                     	;# 
  3616  0F4A                     	;# 
  3617  0F4B                     	;# 
  3618  0F4C                     	;# 
  3619  0F4E                     	;# 
  3620  0F4F                     	;# 
  3621  0F50                     	;# 
  3622  0F51                     	;# 
  3623  0F52                     	;# 
  3624  0F53                     	;# 
  3625  0F54                     	;# 
  3626  0F55                     	;# 
  3627  0F56                     	;# 
  3628  0F57                     	;# 
  3629  0F65                     	;# 
  3630  0F68                     	;# 
  3631  0F69                     	;# 
  3632  0F6A                     	;# 
  3633  0F6B                     	;# 
  3634  0FE4                     	;# 
  3635  0FE5                     	;# 
  3636  0FE6                     	;# 
  3637  0FE7                     	;# 
  3638  0FE8                     	;# 
  3639  0FE9                     	;# 
  3640  0FEA                     	;# 
  3641  0FEB                     	;# 
  3642  0FED                     	;# 
  3643  0FEE                     	;# 
  3644  0FEF                     	;# 
  3645                           
  3646                           	psect	idataBANK1
  3647  0A0C                     __pidataBANK1:	
  3648                           
  3649                           ;initializer for _totals
  3650  0A0C  34F4               	retlw	244
  3651  0A0D  3401               	retlw	1
  3652  0A0E  3400               	retlw	0
  3653  0A0F  3400               	retlw	0
  3654  0A10  3400               	retlw	0
  3655  0A11  3400               	retlw	0
  3656  0A12  3400               	retlw	0
  3657  0A13  3400               	retlw	0
  3658  0A14  3400               	retlw	0
  3659  0A15  3400               	retlw	0
  3660  0A16  3400               	retlw	0
  3661  0A17  3400               	retlw	0
  3662  0A18  3400               	retlw	0
  3663  0A19  3400               	retlw	0
  3664  0A1A  3400               	retlw	0
  3665  0A1B  3400               	retlw	0
  3666  0A1C  3400               	retlw	0
  3667  0A1D  3400               	retlw	0
  3668  0A1E  3400               	retlw	0
  3669  0A1F  3400               	retlw	0
  3670  0A20  3400               	retlw	0
  3671  0A21  3400               	retlw	0
  3672  0A22  3400               	retlw	0
  3673  0A23  3400               	retlw	0
  3674                           
  3675                           ;initializer for _channels
  3676  0A24  3401               	retlw	1
  3677  0A25  3400               	retlw	0
  3678  0A26  3403               	retlw	3
  3679  0A27  3400               	retlw	0
  3680  0A28  3404               	retlw	4
  3681  0A29  3400               	retlw	0
  3682  0A2A  3405               	retlw	5
  3683  0A2B  3400               	retlw	0
  3684  0A2C  3409               	retlw	9
  3685  0A2D  3400               	retlw	0
  3686  0A2E  340B               	retlw	11
  3687  0A2F  3400               	retlw	0
  3688                           
  3689                           	psect	idataBANK2
  3690  0968                     __pidataBANK2:	
  3691                           
  3692                           ;initializer for ___cgram
  3693  0968  340C               	retlw	12
  3694  0969  3412               	retlw	18
  3695  096A  3412               	retlw	18
  3696  096B  340C               	retlw	12
  3697  096C  3400               	retlw	0
  3698  096D  3400               	retlw	0
  3699  096E  3400               	retlw	0
  3700  096F  3400               	retlw	0
  3701  0970  340A               	retlw	10
  3702  0971  3415               	retlw	21
  3703  0972  3411               	retlw	17
  3704  0973  340A               	retlw	10
  3705  0974  3404               	retlw	4
  3706  0975  3400               	retlw	0
  3707  0976  3400               	retlw	0
  3708  0977  3400               	retlw	0
  3709  0978  340A               	retlw	10
  3710  0979  341F               	retlw	31
  3711  097A  341F               	retlw	31
  3712  097B  340E               	retlw	14
  3713  097C  3404               	retlw	4
  3714  097D  3400               	retlw	0
  3715  097E  3400               	retlw	0
  3716  097F  3400               	retlw	0
  3717                           
  3718                           	psect	stringtext
  3719  1000                     __pstringtext:	
  3720  1000                     log@coeff:	
  3721  1000  3400               	retlw	0
  3722  1001  3400               	retlw	0
  3723  1002  3400               	retlw	0
  3724  1003  3400               	retlw	0
  3725  1004  3480               	retlw	128
  3726  1005  343F               	retlw	63
  3727  1006  34F0               	retlw	240
  3728  1007  34FF               	retlw	255
  3729  1008  34BE               	retlw	190
  3730  1009  34E2               	retlw	226
  3731  100A  34A9               	retlw	169
  3732  100B  343E               	retlw	62
  3733  100C  3483               	retlw	131
  3734  100D  3476               	retlw	118
  3735  100E  34BE               	retlw	190
  3736  100F  34AE               	retlw	174
  3737  1010  342B               	retlw	43
  3738  1011  343E               	retlw	62
  3739  1012  343C               	retlw	60
  3740  1013  34C3               	retlw	195
  3741  1014  34BD               	retlw	189
  3742  1015  34D2               	retlw	210
  3743  1016  3413               	retlw	19
  3744  1017  343D               	retlw	61
  3745  1018  3478               	retlw	120
  3746  1019  34D3               	retlw	211
  3747  101A  34BB               	retlw	187
  3748  101B                     __end_oflog@coeff:	
  3749  0016                     _LATA	set	22
  3750  0017                     _LATB	set	23
  3751  0018                     _LATC	set	24
  3752  0011                     _TRISA	set	17
  3753  0012                     _TRISB	set	18
  3754  0013                     _TRISC	set	19
  3755  005F                     _GIE	set	95
  3756  0060                     _RA0	set	96
  3757  0062                     _RA2	set	98
  3758  0066                     _RA6	set	102
  3759  0067                     _RA7	set	103
  3760  0070                     _RC0	set	112
  3761  0071                     _RC1	set	113
  3762  009D                     _ADACQ	set	157
  3763  0099                     _ADACT	set	153
  3764  009B                     _ADCAP	set	155
  3765  0098                     _ADCLK	set	152
  3766  0093                     _ADCON0	set	147
  3767  0093                     _ADCON0bits	set	147
  3768  0094                     _ADCON1	set	148
  3769  0095                     _ADCON2	set	149
  3770  0096                     _ADCON3	set	150
  3771  009E                     _ADPCH	set	158
  3772  009C                     _ADPRE	set	156
  3773  009A                     _ADREF	set	154
  3774  008D                     _ADRESH	set	141
  3775  008C                     _ADRESL	set	140
  3776  0097                     _ADSTAT	set	151
  3777  010F                     _ADLTHH	set	271
  3778  010E                     _ADLTHL	set	270
  3779  010D                     _ADRPT	set	269
  3780  0113                     _ADSTPTH	set	275
  3781  0112                     _ADSTPTL	set	274
  3782  0111                     _ADUTHH	set	273
  3783  0110                     _ADUTHL	set	272
  3784  021F                     _CCPTMRS1bits	set	543
  3785  0290                     _T2CLKCON	set	656
  3786  028E                     _T2CON	set	654
  3787  028E                     _T2CONbits	set	654
  3788  028F                     _T2HLT	set	655
  3789  028D                     _T2PR	set	653
  3790  0291                     _T2RST	set	657
  3791  028C                     _T2TMR	set	652
  3792  038E                     _PWM6CON	set	910
  3793  038D                     _PWM6DCH	set	909
  3794  038C                     _PWM6DCL	set	908
  3795  0716                     _PIE0bits	set	1814
  3796  0710                     _PIR4bits	set	1808
  3797  088D                     _OSCCON1	set	2189
  3798  088F                     _OSCCON3	set	2191
  3799  0891                     _OSCEN	set	2193
  3800  0893                     _OSCFRQ	set	2195
  3801  0892                     _OSCTUNE	set	2194
  3802  090C                     _FVRCON	set	2316
  3803  0E8F                     _PPSLOCK	set	3727
  3804  0E8F                     _PPSLOCKbits	set	3727
  3805  0F38                     _ANSELA	set	3896
  3806  0F43                     _ANSELB	set	3907
  3807  0F4E                     _ANSELC	set	3918
  3808  0F22                     _RC2PPS	set	3874
  3809  0F39                     _WPUA	set	3897
  3810  0F44                     _WPUB	set	3908
  3811  0F4F                     _WPUC	set	3919
  3812  0F65                     _WPUE	set	3941
  3813  101B                     STR_6:	
  3814  101B  3420               	retlw	32	;' '
  3815  101C  3400               	retlw	0
  3816  101D                     STR_12:	
  3817  101D  3421               	retlw	33	;'!'
  3818  101E  3400               	retlw	0
  3819  101F                     STR_1:	
  3820  101F  3441               	retlw	65	;'A'
  3821  1020  3400               	retlw	0
  3822  1021                     STR_7:	
  3823  1021  3444               	retlw	68	;'D'
  3824  1022  3400               	retlw	0
  3825  1023                     STR_4:	
  3826  1023  3448               	retlw	72	;'H'
  3827  1024  3400               	retlw	0
  3828  1025                     STR_10:	
  3829  1025  3449               	retlw	73	;'I'
  3830  1026  3400               	retlw	0
  3831  1027                     STR_2:	
  3832  1027  344C               	retlw	76	;'L'
  3833  1028  3400               	retlw	0
  3834  1029                     STR_3:	
  3835  1029  344F               	retlw	79	;'O'
  3836  102A  3400               	retlw	0
  3837  102B                     STR_9:	
  3838  102B  3456               	retlw	86	;'V'
  3839  102C  3400               	retlw	0
  3840  101F                     
  3841                           ; #config settings
  3842  0000                     
  3843                           	psect	cinit
  3844  07CE                     start_initialization:	
  3845  07CE                     __initialization:	
  3846                           
  3847                           ; Initialize objects allocated to BANK1
  3848  07CE  300C               	movlw	low __pidataBANK1
  3849  07CF  0084               	movwf	4
  3850  07D0  308A               	movlw	(high __pidataBANK1)| (0+128)
  3851  07D1  0085               	movwf	5
  3852  07D2  30A0               	movlw	low __pdataBANK1
  3853  07D3  0086               	movwf	6
  3854  07D4  3000               	movlw	high __pdataBANK1
  3855  07D5  0087               	movwf	7
  3856  07D6  3024               	movlw	36
  3857  07D7  3188  20D5  3187   	fcall	init_ram
  3858                           
  3859                           ; Initialize objects allocated to BANK2
  3860  07DA  3068               	movlw	low __pidataBANK2
  3861  07DB  0084               	movwf	4
  3862  07DC  3089               	movlw	(high __pidataBANK2)| (0+128)
  3863  07DD  0085               	movwf	5
  3864  07DE  3020               	movlw	low __pdataBANK2
  3865  07DF  0086               	movwf	6
  3866  07E0  3001               	movlw	high __pdataBANK2
  3867  07E1  0087               	movwf	7
  3868  07E2  3018               	movlw	24
  3869  07E3  3188  20D5  3187   	fcall	init_ram
  3870                           
  3871                           ; Clear objects allocated to BANK0
  3872  07E6  3060               	movlw	low __pbssBANK0
  3873  07E7  0084               	movwf	4
  3874  07E8  3000               	movlw	high __pbssBANK0
  3875  07E9  0085               	movwf	5
  3876  07EA  3009               	movlw	9
  3877  07EB  3188  20CF  3187   	fcall	clear_ram0
  3878                           
  3879                           ; Clear objects allocated to BANK1
  3880  07EE  30E3               	movlw	low __pbssBANK1
  3881  07EF  0084               	movwf	4
  3882  07F0  3000               	movlw	high __pbssBANK1
  3883  07F1  0085               	movwf	5
  3884  07F2  300C               	movlw	12
  3885  07F3  3188  20CF  3187   	fcall	clear_ram0
  3886                           
  3887                           ; Clear objects allocated to BANK2
  3888  07F6  3038               	movlw	low __pbssBANK2
  3889  07F7  0084               	movwf	4
  3890  07F8  3001               	movlw	high __pbssBANK2
  3891  07F9  0085               	movwf	5
  3892  07FA  3014               	movlw	20
  3893  07FB  3188  20CF         	fcall	clear_ram0
  3894  07FD                     end_of_initialization:	
  3895                           ;End of C runtime variable initialization code
  3896                           
  3897  07FD                     __end_of__initialization:	
  3898  07FD  0020               	movlb	0
  3899  07FE  3182  2ADF         	ljmp	_main	;jump to C main() function
  3900                           
  3901                           	psect	bssBANK0
  3902  0060                     __pbssBANK0:	
  3903  0060                     LCD_Write_Int@F13685:	
  3904  0060                     	ds	5
  3905  0065                     _errno:	
  3906  0065                     	ds	2
  3907  0067                     _sampleIndex:	
  3908  0067                     	ds	2
  3909                           
  3910                           	psect	bssBANK1
  3911  00E3                     __pbssBANK1:	
  3912  00E3                     main@F13715:	
  3913  00E3                     	ds	12
  3914                           
  3915                           	psect	dataBANK1
  3916  00A0                     __pdataBANK1:	
  3917  00A0                     _totals:	
  3918  00A0                     	ds	24
  3919  00B8                     _channels:	
  3920  00B8                     	ds	12
  3921                           
  3922                           	psect	bssBANK2
  3923  0138                     __pbssBANK2:	
  3924  0138                     _samples:	
  3925  0138                     	ds	20
  3926                           
  3927                           	psect	dataBANK2
  3928  0120                     __pdataBANK2:	
  3929  0120                     ___cgram:	
  3930  0120                     	ds	24
  3931                           
  3932                           	psect	inittext
  3933  08D5                     init_ram:	
  3934  08D5  00FE               	movwf	126
  3935  08D6                     initloop:	
  3936  08D6  0012               	moviw fsr0++
  3937  08D7  001E               	movwi fsr1++
  3938  08D8  0BFE               	decfsz	126,f
  3939  08D9  28D6               	goto	initloop
  3940  08DA  3400               	retlw	0
  3941                           
  3942                           	psect	clrtext
  3943  08CF                     clear_ram0:	
  3944                           ;	Called with FSR0 containing the base address, and
  3945                           ;	WREG with the size to clear
  3946                           
  3947  08CF  0064               	clrwdt	;clear the watchdog before getting into this loop
  3948  08D0                     clrloop0:	
  3949  08D0  0180               	clrf	0	;clear RAM location pointed to by FSR
  3950  08D1  3101               	addfsr 0,1
  3951  08D2  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3952  08D3  28D0               	goto	clrloop0	;have we reached the end yet?
  3953  08D4  3400               	retlw	0	;all done for this memory range, return
  3954                           
  3955                           	psect	cstackBANK1
  3956  00C4                     __pcstackBANK1:	
  3957  00C4                     main@analogs:	
  3958                           
  3959                           ; 12 bytes @ 0x0
  3960  00C4                     	ds	12
  3961  00D0                     main@count:	
  3962                           
  3963                           ; 1 bytes @ 0xC
  3964  00D0                     	ds	1
  3965  00D1                     main@displayTemp:	
  3966                           
  3967                           ; 3 bytes @ 0xD
  3968  00D1                     	ds	3
  3969  00D4                     main@displayTemp2:	
  3970                           
  3971                           ; 3 bytes @ 0x10
  3972  00D4                     	ds	3
  3973  00D7                     main@dutyCycle:	
  3974                           
  3975                           ; 2 bytes @ 0x13
  3976  00D7                     	ds	2
  3977  00D9                     main@R:	
  3978                           
  3979                           ; 3 bytes @ 0x15
  3980  00D9                     	ds	3
  3981  00DC                     _main$949:	
  3982                           
  3983                           ; 3 bytes @ 0x18
  3984  00DC                     	ds	3
  3985  00DF                     main@x:	
  3986                           
  3987                           ; 1 bytes @ 0x1B
  3988  00DF                     	ds	1
  3989  00E0                     main@steinhart:	
  3990                           
  3991                           ; 3 bytes @ 0x1C
  3992  00E0                     	ds	3
  3993                           
  3994                           	psect	cstackCOMMON
  3995  0070                     __pcstackCOMMON:	
  3996  0070                     ?___ftge:	
  3997  0070                     ?_LCD_Cmd:	
  3998                           ; 1 bit 
  3999                           
  4000  0070                     ?_LCD_Write_Char:	
  4001                           ; 1 bytes @ 0x0
  4002                           
  4003  0070                     ?_OSCILLATOR_Initialize:	
  4004                           ; 1 bytes @ 0x0
  4005                           
  4006  0070                     ??_OSCILLATOR_Initialize:	
  4007                           ; 1 bytes @ 0x0
  4008                           
  4009  0070                     ?_PWM6_Initialize:	
  4010                           ; 1 bytes @ 0x0
  4011                           
  4012  0070                     ??_PWM6_Initialize:	
  4013                           ; 1 bytes @ 0x0
  4014                           
  4015  0070                     ?_TMR2_Initialize:	
  4016                           ; 1 bytes @ 0x0
  4017                           
  4018  0070                     ??_TMR2_Initialize:	
  4019                           ; 1 bytes @ 0x0
  4020                           
  4021  0070                     ?_ADCC_Initialize:	
  4022                           ; 1 bytes @ 0x0
  4023                           
  4024  0070                     ??_ADCC_Initialize:	
  4025                           ; 1 bytes @ 0x0
  4026                           
  4027  0070                     ?_InitCustomChars:	
  4028                           ; 1 bytes @ 0x0
  4029                           
  4030  0070                     ?_LCD_Port:	
  4031                           ; 1 bytes @ 0x0
  4032                           
  4033  0070                     ??_LCD_Port:	
  4034                           ; 1 bytes @ 0x0
  4035                           
  4036  0070                     ?_LCD_Clear:	
  4037                           ; 1 bytes @ 0x0
  4038                           
  4039  0070                     ?_LCD_Init:	
  4040                           ; 1 bytes @ 0x0
  4041                           
  4042  0070                     ?_PIN_MANAGER_Initialize:	
  4043                           ; 1 bytes @ 0x0
  4044                           
  4045  0070                     ??_PIN_MANAGER_Initialize:	
  4046                           ; 1 bytes @ 0x0
  4047                           
  4048  0070                     ?_SYSTEM_Initialize:	
  4049                           ; 1 bytes @ 0x0
  4050                           
  4051  0070                     ?_PWM6_LoadDutyValue:	
  4052                           ; 1 bytes @ 0x0
  4053                           
  4054  0070                     ?_main:	
  4055                           ; 1 bytes @ 0x0
  4056                           
  4057  0070                     ?___bmul:	
  4058                           ; 1 bytes @ 0x0
  4059                           
  4060  0070                     ?_ADCRead:	
  4061                           ; 1 bytes @ 0x0
  4062                           
  4063  0070                     ?___wmul:	
  4064                           ; 2 bytes @ 0x0
  4065                           
  4066  0070                     ?___awdiv:	
  4067                           ; 2 bytes @ 0x0
  4068                           
  4069  0070                     ?___awmod:	
  4070                           ; 2 bytes @ 0x0
  4071                           
  4072  0070                     ?___ftpack:	
  4073                           ; 2 bytes @ 0x0
  4074                           
  4075  0070                     ?_frexp:	
  4076                           ; 3 bytes @ 0x0
  4077                           
  4078  0070                     ?___aldiv:	
  4079                           ; 3 bytes @ 0x0
  4080                           
  4081  0070                     LCD_Port@a:	
  4082                           ; 4 bytes @ 0x0
  4083                           
  4084  0070                     PIN_MANAGER_Initialize@state:	
  4085                           ; 1 bytes @ 0x0
  4086                           
  4087  0070                     ___bmul@multiplicand:	
  4088                           ; 1 bytes @ 0x0
  4089                           
  4090  0070                     PWM6_LoadDutyValue@dutyCycle:	
  4091                           ; 1 bytes @ 0x0
  4092                           
  4093  0070                     ___wmul@multiplier:	
  4094                           ; 2 bytes @ 0x0
  4095                           
  4096  0070                     ___awdiv@divisor:	
  4097                           ; 2 bytes @ 0x0
  4098                           
  4099  0070                     ___awmod@divisor:	
  4100                           ; 2 bytes @ 0x0
  4101                           
  4102  0070                     ___ftpack@arg:	
  4103                           ; 2 bytes @ 0x0
  4104                           
  4105  0070                     ___ftge@ff1:	
  4106                           ; 3 bytes @ 0x0
  4107                           
  4108  0070                     frexp@value:	
  4109                           ; 3 bytes @ 0x0
  4110                           
  4111  0070                     ___aldiv@divisor:	
  4112                           ; 3 bytes @ 0x0
  4113                           
  4114                           
  4115                           ; 4 bytes @ 0x0
  4116  0070                     	ds	1
  4117  0071                     ??_LCD_Cmd:	
  4118  0071                     ??_LCD_Write_Char:	
  4119                           ; 1 bytes @ 0x1
  4120                           
  4121  0071                     ??___bmul:	
  4122                           ; 1 bytes @ 0x1
  4123                           
  4124                           
  4125                           ; 1 bytes @ 0x1
  4126  0071                     	ds	1
  4127  0072                     ??_PWM6_LoadDutyValue:	
  4128  0072                     LCD_Cmd@a:	
  4129                           ; 1 bytes @ 0x2
  4130                           
  4131  0072                     LCD_Write_Char@temp:	
  4132                           ; 1 bytes @ 0x2
  4133                           
  4134  0072                     ___bmul@product:	
  4135                           ; 1 bytes @ 0x2
  4136                           
  4137  0072                     ___wmul@multiplicand:	
  4138                           ; 1 bytes @ 0x2
  4139                           
  4140  0072                     ___awdiv@dividend:	
  4141                           ; 2 bytes @ 0x2
  4142                           
  4143  0072                     ___awmod@dividend:	
  4144                           ; 2 bytes @ 0x2
  4145                           
  4146                           
  4147                           ; 2 bytes @ 0x2
  4148  0072                     	ds	1
  4149  0073                     ??_ADCRead:	
  4150  0073                     ??_LCD_Clear:	
  4151                           ; 1 bytes @ 0x3
  4152                           
  4153  0073                     ?_LCD_Set_Cursor:	
  4154                           ; 1 bytes @ 0x3
  4155                           
  4156  0073                     ??_LCD_Init:	
  4157                           ; 1 bytes @ 0x3
  4158                           
  4159  0073                     ADCRead@channel:	
  4160                           ; 1 bytes @ 0x3
  4161                           
  4162  0073                     LCD_Set_Cursor@y:	
  4163                           ; 1 bytes @ 0x3
  4164                           
  4165  0073                     LCD_Write_Char@y:	
  4166                           ; 1 bytes @ 0x3
  4167                           
  4168  0073                     ___bmul@multiplier:	
  4169                           ; 1 bytes @ 0x3
  4170                           
  4171  0073                     ___ftpack@exp:	
  4172                           ; 1 bytes @ 0x3
  4173                           
  4174  0073                     frexp@eptr:	
  4175                           ; 1 bytes @ 0x3
  4176                           
  4177  0073                     ___ftge@ff2:	
  4178                           ; 1 bytes @ 0x3
  4179                           
  4180                           
  4181                           ; 3 bytes @ 0x3
  4182  0073                     	ds	1
  4183  0074                     ??_frexp:	
  4184  0074                     ??_LCD_Set_Cursor:	
  4185                           ; 1 bytes @ 0x4
  4186                           
  4187  0074                     ??___wmul:	
  4188                           ; 1 bytes @ 0x4
  4189                           
  4190  0074                     ??___awdiv:	
  4191                           ; 1 bytes @ 0x4
  4192                           
  4193  0074                     ??___awmod:	
  4194                           ; 1 bytes @ 0x4
  4195                           
  4196  0074                     LCD_Write_Char@a:	
  4197                           ; 1 bytes @ 0x4
  4198                           
  4199  0074                     ___ftpack@sign:	
  4200                           ; 1 bytes @ 0x4
  4201                           
  4202  0074                     ___wmul@product:	
  4203                           ; 1 bytes @ 0x4
  4204                           
  4205  0074                     ___aldiv@dividend:	
  4206                           ; 2 bytes @ 0x4
  4207                           
  4208                           
  4209                           ; 4 bytes @ 0x4
  4210  0074                     	ds	1
  4211  0075                     ??___ftpack:	
  4212  0075                     ??_InitCustomChars:	
  4213                           ; 1 bytes @ 0x5
  4214                           
  4215  0075                     ?_LCD_Write_String:	
  4216                           ; 1 bytes @ 0x5
  4217                           
  4218  0075                     LCD_Init@style:	
  4219                           ; 1 bytes @ 0x5
  4220                           
  4221  0075                     ___awdiv@counter:	
  4222                           ; 1 bytes @ 0x5
  4223                           
  4224  0075                     ___awmod@counter:	
  4225                           ; 1 bytes @ 0x5
  4226                           
  4227  0075                     LCD_Write_String@a:	
  4228                           ; 1 bytes @ 0x5
  4229                           
  4230                           
  4231                           ; 2 bytes @ 0x5
  4232  0075                     	ds	1
  4233  0076                     ??___ftge:	
  4234  0076                     InitCustomChars@i:	
  4235                           ; 1 bytes @ 0x6
  4236                           
  4237  0076                     LCD_Set_Cursor@x:	
  4238                           ; 1 bytes @ 0x6
  4239                           
  4240  0076                     ___awdiv@sign:	
  4241                           ; 1 bytes @ 0x6
  4242                           
  4243  0076                     ___awmod@sign:	
  4244                           ; 1 bytes @ 0x6
  4245                           
  4246                           
  4247                           ; 1 bytes @ 0x6
  4248  0076                     	ds	1
  4249  0077                     ??_LCD_Write_String:	
  4250  0077                     ??_SYSTEM_Initialize:	
  4251                           ; 1 bytes @ 0x7
  4252                           
  4253  0077                     LCD_Set_Cursor@z:	
  4254                           ; 1 bytes @ 0x7
  4255                           
  4256  0077                     ___awdiv@quotient:	
  4257                           ; 1 bytes @ 0x7
  4258                           
  4259                           
  4260                           ; 2 bytes @ 0x7
  4261  0077                     	ds	1
  4262  0078                     ??___aldiv:	
  4263  0078                     ?___awtoft:	
  4264                           ; 1 bytes @ 0x8
  4265                           
  4266  0078                     ?___lwtoft:	
  4267                           ; 3 bytes @ 0x8
  4268                           
  4269  0078                     LCD_Set_Cursor@w:	
  4270                           ; 3 bytes @ 0x8
  4271                           
  4272  0078                     LCD_Write_String@i:	
  4273                           ; 1 bytes @ 0x8
  4274                           
  4275  0078                     ___awtoft@c:	
  4276                           ; 2 bytes @ 0x8
  4277                           
  4278  0078                     ___lwtoft@c:	
  4279                           ; 2 bytes @ 0x8
  4280                           
  4281                           
  4282                           ; 2 bytes @ 0x8
  4283  0078                     	ds	1
  4284  0079                     ?_LCD_Write_Int:	
  4285  0079                     LCD_Set_Cursor@temp:	
  4286                           ; 1 bytes @ 0x9
  4287                           
  4288  0079                     readAnalog@analog_channel:	
  4289                           ; 1 bytes @ 0x9
  4290                           
  4291  0079                     LCD_Write_Int@value:	
  4292                           ; 2 bytes @ 0x9
  4293                           
  4294                           
  4295                           ; 2 bytes @ 0x9
  4296  0079                     	ds	2
  4297  007B                     ??___awtoft:	
  4298  007B                     ??___lwtoft:	
  4299                           ; 1 bytes @ 0xB
  4300                           
  4301  007B                     LCD_Write_Int@fieldLength:	
  4302                           ; 1 bytes @ 0xB
  4303                           
  4304  007B                     readAnalog@value:	
  4305                           ; 1 bytes @ 0xB
  4306                           
  4307                           
  4308                           ; 2 bytes @ 0xB
  4309  007B                     	ds	1
  4310  007C                     LCD_Write_Int@numPlaces:	
  4311                           
  4312                           ; 1 bytes @ 0xC
  4313  007C                     	ds	1
  4314  007D                     LCD_Write_Int@sign:	
  4315  007D                     ___awtoft@sign:	
  4316                           ; 1 bytes @ 0xD
  4317                           
  4318                           
  4319                           ; 1 bytes @ 0xD
  4320  007D                     	ds	1
  4321  007E                     ??_eval_poly:	
  4322  007E                     ??___ftsub:	
  4323                           ; 1 bytes @ 0xE
  4324                           
  4325                           
  4326                           	psect	cstackBANK0
  4327  0020                     __pcstackBANK0:	
  4328                           ; 1 bytes @ 0xE
  4329                           
  4330  0020                     ??_LCD_Write_Int:	
  4331  0020                     ?___ftmul:	
  4332                           ; 1 bytes @ 0x0
  4333                           
  4334  0020                     ___aldiv@counter:	
  4335                           ; 3 bytes @ 0x0
  4336                           
  4337  0020                     ___ftmul@f1:	
  4338                           ; 1 bytes @ 0x0
  4339                           
  4340                           
  4341                           ; 3 bytes @ 0x0
  4342  0020                     	ds	1
  4343  0021                     ___aldiv@sign:	
  4344                           
  4345                           ; 1 bytes @ 0x1
  4346  0021                     	ds	1
  4347  0022                     ___aldiv@quotient:	
  4348                           
  4349                           ; 4 bytes @ 0x2
  4350  0022                     	ds	1
  4351  0023                     ___ftmul@f2:	
  4352                           
  4353                           ; 3 bytes @ 0x3
  4354  0023                     	ds	2
  4355  0025                     LCD_Write_Int@str:	
  4356                           
  4357                           ; 5 bytes @ 0x5
  4358  0025                     	ds	1
  4359  0026                     ??___ftmul:	
  4360  0026                     ?_readAnalog:	
  4361                           ; 1 bytes @ 0x6
  4362                           
  4363  0026                     readAnalog@channel:	
  4364                           ; 2 bytes @ 0x6
  4365                           
  4366                           
  4367                           ; 2 bytes @ 0x6
  4368  0026                     	ds	2
  4369  0028                     ??_readAnalog:	
  4370                           
  4371                           ; 1 bytes @ 0x8
  4372  0028                     	ds	2
  4373  002A                     ___ftmul@exp:	
  4374  002A                     LCD_Write_Int@j:	
  4375                           ; 1 bytes @ 0xA
  4376                           
  4377                           
  4378                           ; 2 bytes @ 0xA
  4379  002A                     	ds	1
  4380  002B                     ___ftmul@f3_as_product:	
  4381                           
  4382                           ; 3 bytes @ 0xB
  4383  002B                     	ds	1
  4384  002C                     LCD_Write_Int@i:	
  4385                           
  4386                           ; 2 bytes @ 0xC
  4387  002C                     	ds	2
  4388  002E                     ___ftmul@cntr:	
  4389                           
  4390                           ; 1 bytes @ 0xE
  4391  002E                     	ds	1
  4392  002F                     ___ftmul@sign:	
  4393                           
  4394                           ; 1 bytes @ 0xF
  4395  002F                     	ds	1
  4396  0030                     ?___ftdiv:	
  4397  0030                     ___ftdiv@f2:	
  4398                           ; 3 bytes @ 0x10
  4399                           
  4400                           
  4401                           ; 3 bytes @ 0x10
  4402  0030                     	ds	3
  4403  0033                     ___ftdiv@f1:	
  4404                           
  4405                           ; 3 bytes @ 0x13
  4406  0033                     	ds	3
  4407  0036                     ??___ftdiv:	
  4408                           
  4409                           ; 1 bytes @ 0x16
  4410  0036                     	ds	4
  4411  003A                     ___ftdiv@cntr:	
  4412                           
  4413                           ; 1 bytes @ 0x1A
  4414  003A                     	ds	1
  4415  003B                     ___ftdiv@f3:	
  4416                           
  4417                           ; 3 bytes @ 0x1B
  4418  003B                     	ds	3
  4419  003E                     ___ftdiv@exp:	
  4420                           
  4421                           ; 1 bytes @ 0x1E
  4422  003E                     	ds	1
  4423  003F                     ___ftdiv@sign:	
  4424                           
  4425                           ; 1 bytes @ 0x1F
  4426  003F                     	ds	1
  4427  0040                     ?___ftadd:	
  4428  0040                     ___ftadd@f1:	
  4429                           ; 3 bytes @ 0x20
  4430                           
  4431                           
  4432                           ; 3 bytes @ 0x20
  4433  0040                     	ds	3
  4434  0043                     ___ftadd@f2:	
  4435                           
  4436                           ; 3 bytes @ 0x23
  4437  0043                     	ds	3
  4438  0046                     ??___ftadd:	
  4439                           
  4440                           ; 1 bytes @ 0x26
  4441  0046                     	ds	4
  4442  004A                     ___ftadd@sign:	
  4443                           
  4444                           ; 1 bytes @ 0x2A
  4445  004A                     	ds	1
  4446  004B                     ___ftadd@exp2:	
  4447                           
  4448                           ; 1 bytes @ 0x2B
  4449  004B                     	ds	1
  4450  004C                     ___ftadd@exp1:	
  4451                           
  4452                           ; 1 bytes @ 0x2C
  4453  004C                     	ds	1
  4454  004D                     ?_eval_poly:	
  4455  004D                     ?___ftsub:	
  4456                           ; 3 bytes @ 0x2D
  4457                           
  4458  004D                     ___ftsub@f2:	
  4459                           ; 3 bytes @ 0x2D
  4460                           
  4461  004D                     eval_poly@x:	
  4462                           ; 3 bytes @ 0x2D
  4463                           
  4464                           
  4465                           ; 3 bytes @ 0x2D
  4466  004D                     	ds	3
  4467  0050                     eval_poly@d:	
  4468  0050                     ___ftsub@f1:	
  4469                           ; 2 bytes @ 0x30
  4470                           
  4471                           
  4472                           ; 3 bytes @ 0x30
  4473  0050                     	ds	2
  4474  0052                     eval_poly@n:	
  4475                           
  4476                           ; 2 bytes @ 0x32
  4477  0052                     	ds	2
  4478  0054                     eval_poly@res:	
  4479                           
  4480                           ; 3 bytes @ 0x34
  4481  0054                     	ds	3
  4482  0057                     ?_log:	
  4483  0057                     log@x:	
  4484                           ; 3 bytes @ 0x37
  4485                           
  4486                           
  4487                           ; 3 bytes @ 0x37
  4488  0057                     	ds	3
  4489  005A                     ??_log:	
  4490                           
  4491                           ; 1 bytes @ 0x3A
  4492  005A                     	ds	1
  4493  005B                     log@exponent:	
  4494                           
  4495                           ; 2 bytes @ 0x3B
  4496  005B                     	ds	2
  4497  005D                     ??_main:	
  4498                           
  4499                           ; 1 bytes @ 0x3D
  4500  005D                     	ds	3
  4501                           
  4502                           	psect	maintext
  4503  02DF                     __pmaintext:	
  4504 ;;
  4505 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  4506 ;;
  4507 ;; *************** function _main *****************
  4508 ;; Defined at:
  4509 ;;		line 21 in file "main.c"
  4510 ;; Parameters:    Size  Location     Type
  4511 ;;		None
  4512 ;; Auto vars:     Size  Location     Type
  4513 ;;  analogs        12    0[BANK1 ] unsigned int [6]
  4514 ;;  steinhart       3   28[BANK1 ] float 
  4515 ;;  R               3   21[BANK1 ] float 
  4516 ;;  displayTemp2    3   16[BANK1 ] float 
  4517 ;;  displayTemp     3   13[BANK1 ] float 
  4518 ;;  dutyCycle       2   19[BANK1 ] unsigned int 
  4519 ;;  x               1   27[BANK1 ] unsigned char 
  4520 ;;  count           1   12[BANK1 ] unsigned char 
  4521 ;; Return value:  Size  Location     Type
  4522 ;;                  1    wreg      void 
  4523 ;; Registers used:
  4524 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4525 ;; Tracked objects:
  4526 ;;		On entry : B1F/0
  4527 ;;		On exit  : 0/0
  4528 ;;		Unchanged: 0/0
  4529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4531 ;;      Locals:         0       0      31       0       0       0       0       0       0       0       0       0       
      +0       0
  4532 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4533 ;;      Totals:         0       3      31       0       0       0       0       0       0       0       0       0       
      +0       0
  4534 ;;Total ram usage:       34 bytes
  4535 ;; Hardware stack levels required when called:    4
  4536 ;; This function calls:
  4537 ;;		_ADCRead
  4538 ;;		_LCD_Clear
  4539 ;;		_LCD_Set_Cursor
  4540 ;;		_LCD_Write_Int
  4541 ;;		_LCD_Write_String
  4542 ;;		_PWM6_LoadDutyValue
  4543 ;;		_SYSTEM_Initialize
  4544 ;;		___ftadd
  4545 ;;		___ftdiv
  4546 ;;		___ftmul
  4547 ;;		___ftsub
  4548 ;;		___lwtoft
  4549 ;;		_log
  4550 ;;		_readAnalog
  4551 ;; This function is called by:
  4552 ;;		Startup code after reset
  4553 ;; This function uses a non-reentrant model
  4554 ;;
  4555                           
  4556                           
  4557                           ;psect for function _main
  4558  02DF                     _main:	
  4559                           
  4560                           ;main.c: 23: SYSTEM_Initialize();
  4561                           
  4562                           ;incstack = 0
  4563                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4564  02DF  318A  22B3  3182   	fcall	_SYSTEM_Initialize
  4565                           
  4566                           ;main.c: 27: uint16_t analogs[6] = {0};
  4567  02E2  30E3               	movlw	low main@F13715
  4568  02E3  0086               	movwf	6
  4569  02E4  3000               	movlw	high main@F13715
  4570  02E5  0087               	movwf	7
  4571  02E6  30C4               	movlw	low main@analogs
  4572  02E7  0084               	movwf	4
  4573  02E8  3000               	movlw	high main@analogs
  4574  02E9  0085               	movwf	5
  4575  02EA  300C               	movlw	12
  4576  02EB  0020               	movlb	0	; select bank0
  4577  02EC  00DD               	movwf	??_main
  4578  02ED                     u2720:	
  4579  02ED  0016               	moviw fsr1++
  4580  02EE  001A               	movwi fsr0++
  4581  02EF  0BDD               	decfsz	??_main,f
  4582  02F0  2AED               	goto	u2720
  4583                           
  4584                           ;main.c: 29: float R, steinhart, displayTemp, displayTemp2;
  4585                           ;main.c: 35: char count = 11;
  4586  02F1  300B               	movlw	11
  4587  02F2  00DD               	movwf	??_main
  4588  02F3  085D               	movf	??_main,w
  4589  02F4  0021               	movlb	1	; select bank1
  4590  02F5  00D0               	movwf	main@count^(0+128)
  4591                           
  4592                           ;main.c: 37: char x = 0;
  4593  02F6  01DF               	clrf	main@x^(0+128)
  4594                           
  4595                           ;main.c: 39: uint16_t dutyCycle = 1023;
  4596  02F7  30FF               	movlw	255
  4597  02F8  00D7               	movwf	main@dutyCycle^(0+128)
  4598  02F9  3003               	movlw	3
  4599  02FA  00D8               	movwf	(main@dutyCycle^(0+128)+1)
  4600                           
  4601                           ;main.c: 41: PWM6_LoadDutyValue(dutyCycle);
  4602  02FB  0858               	movf	(main@dutyCycle+1)^(0+128),w
  4603  02FC  00F1               	movwf	PWM6_LoadDutyValue@dutyCycle+1
  4604  02FD  0857               	movf	main@dutyCycle^(0+128),w
  4605  02FE  00F0               	movwf	PWM6_LoadDutyValue@dutyCycle
  4606  02FF  3189  213A  3182   	fcall	_PWM6_LoadDutyValue
  4607                           
  4608                           ;main.c: 43: _delay((unsigned long)((300)*(1000000/4000.0)));
  4609  0302  3062               	movlw	98
  4610  0303  0020               	movlb	0	; select bank0
  4611  0304  00DE               	movwf	??_main+1
  4612  0305  3065               	movlw	101
  4613  0306  00DD               	movwf	??_main
  4614  0307                     u2757:	
  4615  0307  0BDD               	decfsz	??_main,f
  4616  0308  2B07               	goto	u2757
  4617  0309  0BDE               	decfsz	??_main+1,f
  4618  030A  2B07               	goto	u2757
  4619  030B  3200               	nop2
  4620                           
  4621                           ;main.c: 45: LCD_Clear();
  4622  030C  3188  20DB  3182   	fcall	_LCD_Clear
  4623                           
  4624                           ;main.c: 48: { LCD_Set_Cursor(2,1); LCD_Write_String("A");};
  4625  030F  01F3               	clrf	LCD_Set_Cursor@y
  4626  0310  0AF3               	incf	LCD_Set_Cursor@y,f
  4627  0311  3002               	movlw	2
  4628  0312  318B  2360  3182   	fcall	_LCD_Set_Cursor
  4629  0315  301F               	movlw	low (STR_1| (0+32768))
  4630  0316  00F5               	movwf	LCD_Write_String@a
  4631  0317  3090               	movlw	high (STR_1| (0+32768))
  4632  0318  00F6               	movwf	LCD_Write_String@a+1
  4633  0319  3189  2199  3182   	fcall	_LCD_Write_String
  4634                           
  4635                           ;main.c: 49: _delay((unsigned long)((200)*(1000000/4000.0)));
  4636  031C  3041               	movlw	65
  4637  031D  0020               	movlb	0	; select bank0
  4638  031E  00DE               	movwf	??_main+1
  4639  031F  30EE               	movlw	238
  4640  0320  00DD               	movwf	??_main
  4641  0321                     u2767:	
  4642  0321  0BDD               	decfsz	??_main,f
  4643  0322  2B21               	goto	u2767
  4644  0323  0BDE               	decfsz	??_main+1,f
  4645  0324  2B21               	goto	u2767
  4646  0325  0000               	nop
  4647                           
  4648                           ;main.c: 50: { LCD_Set_Cursor(3,1); LCD_Write_String("L");};
  4649  0326  01F3               	clrf	LCD_Set_Cursor@y
  4650  0327  0AF3               	incf	LCD_Set_Cursor@y,f
  4651  0328  3003               	movlw	3
  4652  0329  318B  2360  3182   	fcall	_LCD_Set_Cursor
  4653  032C  3027               	movlw	low (STR_2| (0+32768))
  4654  032D  00F5               	movwf	LCD_Write_String@a
  4655  032E  3090               	movlw	high (STR_2| (0+32768))
  4656  032F  00F6               	movwf	LCD_Write_String@a+1
  4657  0330  3189  2199  3182   	fcall	_LCD_Write_String
  4658                           
  4659                           ;main.c: 51: _delay((unsigned long)((200)*(1000000/4000.0)));
  4660  0333  3041               	movlw	65
  4661  0334  0020               	movlb	0	; select bank0
  4662  0335  00DE               	movwf	??_main+1
  4663  0336  30EE               	movlw	238
  4664  0337  00DD               	movwf	??_main
  4665  0338                     u2777:	
  4666  0338  0BDD               	decfsz	??_main,f
  4667  0339  2B38               	goto	u2777
  4668  033A  0BDE               	decfsz	??_main+1,f
  4669  033B  2B38               	goto	u2777
  4670  033C  0000               	nop
  4671                           
  4672                           ;main.c: 52: { LCD_Set_Cursor(4,1); LCD_Write_String("O");};
  4673  033D  01F3               	clrf	LCD_Set_Cursor@y
  4674  033E  0AF3               	incf	LCD_Set_Cursor@y,f
  4675  033F  3004               	movlw	4
  4676  0340  318B  2360  3182   	fcall	_LCD_Set_Cursor
  4677  0343  3029               	movlw	low (STR_3| (0+32768))
  4678  0344  00F5               	movwf	LCD_Write_String@a
  4679  0345  3090               	movlw	high (STR_3| (0+32768))
  4680  0346  00F6               	movwf	LCD_Write_String@a+1
  4681  0347  3189  2199  3182   	fcall	_LCD_Write_String
  4682                           
  4683                           ;main.c: 53: _delay((unsigned long)((200)*(1000000/4000.0)));
  4684  034A  3041               	movlw	65
  4685  034B  0020               	movlb	0	; select bank0
  4686  034C  00DE               	movwf	??_main+1
  4687  034D  30EE               	movlw	238
  4688  034E  00DD               	movwf	??_main
  4689  034F                     u2787:	
  4690  034F  0BDD               	decfsz	??_main,f
  4691  0350  2B4F               	goto	u2787
  4692  0351  0BDE               	decfsz	??_main+1,f
  4693  0352  2B4F               	goto	u2787
  4694  0353  0000               	nop
  4695                           
  4696                           ;main.c: 54: { LCD_Set_Cursor(5,1); LCD_Write_String("H");};
  4697  0354  01F3               	clrf	LCD_Set_Cursor@y
  4698  0355  0AF3               	incf	LCD_Set_Cursor@y,f
  4699  0356  3005               	movlw	5
  4700  0357  318B  2360  3182   	fcall	_LCD_Set_Cursor
  4701  035A  3023               	movlw	low (STR_4| (0+32768))
  4702  035B  00F5               	movwf	LCD_Write_String@a
  4703  035C  3090               	movlw	high (STR_4| (0+32768))
  4704  035D  00F6               	movwf	LCD_Write_String@a+1
  4705  035E  3189  2199  3182   	fcall	_LCD_Write_String
  4706                           
  4707                           ;main.c: 55: _delay((unsigned long)((200)*(1000000/4000.0)));
  4708  0361  3041               	movlw	65
  4709  0362  0020               	movlb	0	; select bank0
  4710  0363  00DE               	movwf	??_main+1
  4711  0364  30EE               	movlw	238
  4712  0365  00DD               	movwf	??_main
  4713  0366                     u2797:	
  4714  0366  0BDD               	decfsz	??_main,f
  4715  0367  2B66               	goto	u2797
  4716  0368  0BDE               	decfsz	??_main+1,f
  4717  0369  2B66               	goto	u2797
  4718  036A  0000               	nop
  4719                           
  4720                           ;main.c: 56: { LCD_Set_Cursor(6,1); LCD_Write_String("A");};
  4721  036B  01F3               	clrf	LCD_Set_Cursor@y
  4722  036C  0AF3               	incf	LCD_Set_Cursor@y,f
  4723  036D  3006               	movlw	6
  4724  036E  318B  2360  3182   	fcall	_LCD_Set_Cursor
  4725  0371  301F               	movlw	low (STR_1| (0+32768))
  4726  0372  00F5               	movwf	LCD_Write_String@a
  4727  0373  3090               	movlw	high (STR_1| (0+32768))
  4728  0374  00F6               	movwf	LCD_Write_String@a+1
  4729  0375  3189  2199  3182   	fcall	_LCD_Write_String
  4730                           
  4731                           ;main.c: 57: _delay((unsigned long)((200)*(1000000/4000.0)));
  4732  0378  3041               	movlw	65
  4733  0379  0020               	movlb	0	; select bank0
  4734  037A  00DE               	movwf	??_main+1
  4735  037B  30EE               	movlw	238
  4736  037C  00DD               	movwf	??_main
  4737  037D                     u2807:	
  4738  037D  0BDD               	decfsz	??_main,f
  4739  037E  2B7D               	goto	u2807
  4740  037F  0BDE               	decfsz	??_main+1,f
  4741  0380  2B7D               	goto	u2807
  4742  0381  0000               	nop
  4743                           
  4744                           ;main.c: 58: { LCD_Set_Cursor(7,1); LCD_Write_String(" ");};
  4745  0382  01F3               	clrf	LCD_Set_Cursor@y
  4746  0383  0AF3               	incf	LCD_Set_Cursor@y,f
  4747  0384  3007               	movlw	7
  4748  0385  318B  2360  3182   	fcall	_LCD_Set_Cursor
  4749  0388  301B               	movlw	low (STR_6| (0+32768))
  4750  0389  00F5               	movwf	LCD_Write_String@a
  4751  038A  3090               	movlw	high (STR_6| (0+32768))
  4752  038B  00F6               	movwf	LCD_Write_String@a+1
  4753  038C  3189  2199  3182   	fcall	_LCD_Write_String
  4754                           
  4755                           ;main.c: 59: _delay((unsigned long)((200)*(1000000/4000.0)));
  4756  038F  3041               	movlw	65
  4757  0390  0020               	movlb	0	; select bank0
  4758  0391  00DE               	movwf	??_main+1
  4759  0392  30EE               	movlw	238
  4760  0393  00DD               	movwf	??_main
  4761  0394                     u2817:	
  4762  0394  0BDD               	decfsz	??_main,f
  4763  0395  2B94               	goto	u2817
  4764  0396  0BDE               	decfsz	??_main+1,f
  4765  0397  2B94               	goto	u2817
  4766  0398  0000               	nop
  4767                           
  4768                           ;main.c: 60: { LCD_Set_Cursor(8,1); LCD_Write_String("D");};
  4769  0399  01F3               	clrf	LCD_Set_Cursor@y
  4770  039A  0AF3               	incf	LCD_Set_Cursor@y,f
  4771  039B  3008               	movlw	8
  4772  039C  318B  2360  3182   	fcall	_LCD_Set_Cursor
  4773  039F  3021               	movlw	low (STR_7| (0+32768))
  4774  03A0  00F5               	movwf	LCD_Write_String@a
  4775  03A1  3090               	movlw	high (STR_7| (0+32768))
  4776  03A2  00F6               	movwf	LCD_Write_String@a+1
  4777  03A3  3189  2199  3182   	fcall	_LCD_Write_String
  4778                           
  4779                           ;main.c: 61: _delay((unsigned long)((200)*(1000000/4000.0)));
  4780  03A6  3041               	movlw	65
  4781  03A7  0020               	movlb	0	; select bank0
  4782  03A8  00DE               	movwf	??_main+1
  4783  03A9  30EE               	movlw	238
  4784  03AA  00DD               	movwf	??_main
  4785  03AB                     u2827:	
  4786  03AB  0BDD               	decfsz	??_main,f
  4787  03AC  2BAB               	goto	u2827
  4788  03AD  0BDE               	decfsz	??_main+1,f
  4789  03AE  2BAB               	goto	u2827
  4790  03AF  0000               	nop
  4791                           
  4792                           ;main.c: 62: { LCD_Set_Cursor(9,1); LCD_Write_String("A");};
  4793  03B0  01F3               	clrf	LCD_Set_Cursor@y
  4794  03B1  0AF3               	incf	LCD_Set_Cursor@y,f
  4795  03B2  3009               	movlw	9
  4796  03B3  318B  2360  3182   	fcall	_LCD_Set_Cursor
  4797  03B6  301F               	movlw	low (STR_1| (0+32768))
  4798  03B7  00F5               	movwf	LCD_Write_String@a
  4799  03B8  3090               	movlw	high (STR_1| (0+32768))
  4800  03B9  00F6               	movwf	LCD_Write_String@a+1
  4801  03BA  3189  2199  3182   	fcall	_LCD_Write_String
  4802                           
  4803                           ;main.c: 63: _delay((unsigned long)((200)*(1000000/4000.0)));
  4804  03BD  3041               	movlw	65
  4805  03BE  0020               	movlb	0	; select bank0
  4806  03BF  00DE               	movwf	??_main+1
  4807  03C0  30EE               	movlw	238
  4808  03C1  00DD               	movwf	??_main
  4809  03C2                     u2837:	
  4810  03C2  0BDD               	decfsz	??_main,f
  4811  03C3  2BC2               	goto	u2837
  4812  03C4  0BDE               	decfsz	??_main+1,f
  4813  03C5  2BC2               	goto	u2837
  4814  03C6  0000               	nop
  4815                           
  4816                           ;main.c: 64: { LCD_Set_Cursor(10,1); LCD_Write_String("V");};
  4817  03C7  01F3               	clrf	LCD_Set_Cursor@y
  4818  03C8  0AF3               	incf	LCD_Set_Cursor@y,f
  4819  03C9  300A               	movlw	10
  4820  03CA  318B  2360  3182   	fcall	_LCD_Set_Cursor
  4821  03CD  302B               	movlw	low (STR_9| (0+32768))
  4822  03CE  00F5               	movwf	LCD_Write_String@a
  4823  03CF  3090               	movlw	high (STR_9| (0+32768))
  4824  03D0  00F6               	movwf	LCD_Write_String@a+1
  4825  03D1  3189  2199  3182   	fcall	_LCD_Write_String
  4826                           
  4827                           ;main.c: 65: _delay((unsigned long)((200)*(1000000/4000.0)));
  4828  03D4  3041               	movlw	65
  4829  03D5  0020               	movlb	0	; select bank0
  4830  03D6  00DE               	movwf	??_main+1
  4831  03D7  30EE               	movlw	238
  4832  03D8  00DD               	movwf	??_main
  4833  03D9                     u2847:	
  4834  03D9  0BDD               	decfsz	??_main,f
  4835  03DA  2BD9               	goto	u2847
  4836  03DB  0BDE               	decfsz	??_main+1,f
  4837  03DC  2BD9               	goto	u2847
  4838  03DD  0000               	nop
  4839                           
  4840                           ;main.c: 66: { LCD_Set_Cursor(11,1); LCD_Write_String("I");};
  4841  03DE  01F3               	clrf	LCD_Set_Cursor@y
  4842  03DF  0AF3               	incf	LCD_Set_Cursor@y,f
  4843  03E0  300B               	movlw	11
  4844  03E1  318B  2360  3182   	fcall	_LCD_Set_Cursor
  4845  03E4  3025               	movlw	low (STR_10| (0+32768))
  4846  03E5  00F5               	movwf	LCD_Write_String@a
  4847  03E6  3090               	movlw	high (STR_10| (0+32768))
  4848  03E7  00F6               	movwf	LCD_Write_String@a+1
  4849  03E8  3189  2199  3182   	fcall	_LCD_Write_String
  4850                           
  4851                           ;main.c: 67: _delay((unsigned long)((200)*(1000000/4000.0)));
  4852  03EB  3041               	movlw	65
  4853  03EC  0020               	movlb	0	; select bank0
  4854  03ED  00DE               	movwf	??_main+1
  4855  03EE  30EE               	movlw	238
  4856  03EF  00DD               	movwf	??_main
  4857  03F0                     u2857:	
  4858  03F0  0BDD               	decfsz	??_main,f
  4859  03F1  2BF0               	goto	u2857
  4860  03F2  0BDE               	decfsz	??_main+1,f
  4861  03F3  2BF0               	goto	u2857
  4862  03F4  0000               	nop
  4863                           
  4864                           ;main.c: 68: { LCD_Set_Cursor(12,1); LCD_Write_String("D");};
  4865  03F5  01F3               	clrf	LCD_Set_Cursor@y
  4866  03F6  0AF3               	incf	LCD_Set_Cursor@y,f
  4867  03F7  300C               	movlw	12
  4868  03F8  318B  2360  3182   	fcall	_LCD_Set_Cursor
  4869  03FB  3021               	movlw	low (STR_7| (0+32768))
  4870  03FC  00F5               	movwf	LCD_Write_String@a
  4871  03FD  3090               	movlw	high (STR_7| (0+32768))
  4872  03FE  00F6               	movwf	LCD_Write_String@a+1
  4873  03FF  3189  2199  3182   	fcall	_LCD_Write_String
  4874                           
  4875                           ;main.c: 69: _delay((unsigned long)((200)*(1000000/4000.0)));
  4876  0402  3041               	movlw	65
  4877  0403  0020               	movlb	0	; select bank0
  4878  0404  00DE               	movwf	??_main+1
  4879  0405  30EE               	movlw	238
  4880  0406  00DD               	movwf	??_main
  4881  0407                     u2867:	
  4882  0407  0BDD               	decfsz	??_main,f
  4883  0408  2C07               	goto	u2867
  4884  0409  0BDE               	decfsz	??_main+1,f
  4885  040A  2C07               	goto	u2867
  4886  040B  0000               	nop
  4887                           
  4888                           ;main.c: 70: { LCD_Set_Cursor(13,1); LCD_Write_String("!");};
  4889  040C  01F3               	clrf	LCD_Set_Cursor@y
  4890  040D  0AF3               	incf	LCD_Set_Cursor@y,f
  4891  040E  300D               	movlw	13
  4892  040F  318B  2360  3182   	fcall	_LCD_Set_Cursor
  4893  0412  301D               	movlw	low (STR_12| (0+32768))
  4894  0413  00F5               	movwf	LCD_Write_String@a
  4895  0414  3090               	movlw	high (STR_12| (0+32768))
  4896  0415  00F6               	movwf	LCD_Write_String@a+1
  4897  0416  3189  2199  3182   	fcall	_LCD_Write_String
  4898                           
  4899                           ;main.c: 71: _delay((unsigned long)((5000)*(1000000/4000.0)));
  4900  0419  3007               	movlw	7
  4901  041A  0020               	movlb	0	; select bank0
  4902  041B  00DF               	movwf	??_main+2
  4903  041C  3058               	movlw	88
  4904  041D  00DE               	movwf	??_main+1
  4905  041E  305E               	movlw	94
  4906  041F  00DD               	movwf	??_main
  4907  0420                     u2877:	
  4908  0420  0BDD               	decfsz	??_main,f
  4909  0421  2C20               	goto	u2877
  4910  0422  0BDE               	decfsz	??_main+1,f
  4911  0423  2C20               	goto	u2877
  4912  0424  0BDF               	decfsz	??_main+2,f
  4913  0425  2C20               	goto	u2877
  4914  0426  3200               	nop2
  4915                           
  4916                           ;main.c: 72: LCD_Clear();
  4917  0427  3188  20DB  3182   	fcall	_LCD_Clear
  4918  042A                     l2577:	
  4919                           ;main.c: 75: while (1)
  4920                           
  4921                           
  4922                           ;main.c: 76: {
  4923                           ;main.c: 77: PWM6_LoadDutyValue(dutyCycle);
  4924  042A  0021               	movlb	1	; select bank1
  4925  042B  0858               	movf	(main@dutyCycle+1)^(0+128),w
  4926  042C  00F1               	movwf	PWM6_LoadDutyValue@dutyCycle+1
  4927  042D  0857               	movf	main@dutyCycle^(0+128),w
  4928  042E  00F0               	movwf	PWM6_LoadDutyValue@dutyCycle
  4929  042F  3189  213A  3182   	fcall	_PWM6_LoadDutyValue
  4930                           
  4931                           ;main.c: 79: for(x=0;x<6;x++)
  4932  0432  0021               	movlb	1	; select bank1
  4933  0433  01DF               	clrf	main@x^(0+128)
  4934  0434  3006               	movlw	6
  4935  0435  025F               	subwf	main@x^(0+128),w
  4936  0436  1803               	btfsc	3,0
  4937  0437  2C56               	goto	l2591
  4938  0438                     l2585:	
  4939                           
  4940                           ;main.c: 80: {
  4941                           ;main.c: 81: analogs[x]=readAnalog(x);
  4942  0438  085F               	movf	main@x^(0+128),w
  4943  0439  0020               	movlb	0	; select bank0
  4944  043A  00DD               	movwf	??_main
  4945  043B  01DE               	clrf	??_main+1
  4946  043C  085D               	movf	??_main,w
  4947  043D  00A6               	movwf	readAnalog@channel
  4948  043E  085E               	movf	??_main+1,w
  4949  043F  00A7               	movwf	readAnalog@channel+1
  4950  0440  3181  21D3  3182   	fcall	_readAnalog
  4951  0443  0021               	movlb	1	; select bank1
  4952  0444  355F               	lslf	main@x^(0+128),w
  4953  0445  3EC4               	addlw	(low (main@analogs| 0))& (0+255)
  4954  0446  0086               	movwf	6
  4955  0447  0187               	clrf	7
  4956  0448  0020               	movlb	0	; select bank0
  4957  0449  0826               	movf	?_readAnalog,w
  4958  044A  3FC0               	movwi [0]fsr1
  4959  044B  0827               	movf	?_readAnalog+1,w
  4960  044C  3FC1               	movwi [1]fsr1
  4961  044D  3001               	movlw	1
  4962  044E  00DD               	movwf	??_main
  4963  044F  085D               	movf	??_main,w
  4964  0450  0021               	movlb	1	; select bank1
  4965  0451  07DF               	addwf	main@x^(0+128),f
  4966  0452  3006               	movlw	6
  4967  0453  025F               	subwf	main@x^(0+128),w
  4968  0454  1C03               	skipc
  4969  0455  2C38               	goto	l2585
  4970  0456                     l2591:	
  4971                           
  4972                           ;main.c: 82: }
  4973                           ;main.c: 89: { LCD_Set_Cursor(0,0); LCD_Write_Int(ADCRead(1),-1, 0, 0);};
  4974  0456  01F3               	clrf	LCD_Set_Cursor@y
  4975  0457  3000               	movlw	0
  4976  0458  318B  2360  3182   	fcall	_LCD_Set_Cursor
  4977  045B  3001               	movlw	1
  4978  045C  3180  2006  3182   	fcall	_ADCRead
  4979  045F  0871               	movf	?_ADCRead+1,w
  4980  0460  00FA               	movwf	LCD_Write_Int@value+1
  4981  0461  0870               	movf	?_ADCRead,w
  4982  0462  00F9               	movwf	LCD_Write_Int@value
  4983  0463  01FB               	clrf	LCD_Write_Int@fieldLength
  4984  0464  03FB               	decf	LCD_Write_Int@fieldLength,f
  4985  0465  01FC               	clrf	LCD_Write_Int@numPlaces
  4986  0466  01FD               	clrf	LCD_Write_Int@sign
  4987  0467  3180  2014  3182   	fcall	_LCD_Write_Int
  4988                           
  4989                           ;main.c: 90: { LCD_Set_Cursor(6,0); LCD_Write_Int(ADCRead(3),-1, 0, 0);};
  4990  046A  01F3               	clrf	LCD_Set_Cursor@y
  4991  046B  3006               	movlw	6
  4992  046C  318B  2360  3182   	fcall	_LCD_Set_Cursor
  4993  046F  3003               	movlw	3
  4994  0470  3180  2006  3182   	fcall	_ADCRead
  4995  0473  0871               	movf	?_ADCRead+1,w
  4996  0474  00FA               	movwf	LCD_Write_Int@value+1
  4997  0475  0870               	movf	?_ADCRead,w
  4998  0476  00F9               	movwf	LCD_Write_Int@value
  4999  0477  01FB               	clrf	LCD_Write_Int@fieldLength
  5000  0478  03FB               	decf	LCD_Write_Int@fieldLength,f
  5001  0479  01FC               	clrf	LCD_Write_Int@numPlaces
  5002  047A  01FD               	clrf	LCD_Write_Int@sign
  5003  047B  3180  2014  3182   	fcall	_LCD_Write_Int
  5004                           
  5005                           ;main.c: 91: { LCD_Set_Cursor(11,0); LCD_Write_Int(ADCRead(4),-1, 0, 0);};
  5006  047E  01F3               	clrf	LCD_Set_Cursor@y
  5007  047F  300B               	movlw	11
  5008  0480  318B  2360  3182   	fcall	_LCD_Set_Cursor
  5009  0483  3004               	movlw	4
  5010  0484  3180  2006  3182   	fcall	_ADCRead
  5011  0487  0871               	movf	?_ADCRead+1,w
  5012  0488  00FA               	movwf	LCD_Write_Int@value+1
  5013  0489  0870               	movf	?_ADCRead,w
  5014  048A  00F9               	movwf	LCD_Write_Int@value
  5015  048B  01FB               	clrf	LCD_Write_Int@fieldLength
  5016  048C  03FB               	decf	LCD_Write_Int@fieldLength,f
  5017  048D  01FC               	clrf	LCD_Write_Int@numPlaces
  5018  048E  01FD               	clrf	LCD_Write_Int@sign
  5019  048F  3180  2014  3182   	fcall	_LCD_Write_Int
  5020                           
  5021                           ;main.c: 92: { LCD_Set_Cursor(0,1); LCD_Write_Int(ADCRead(5),-1, 0, 0);};
  5022  0492  01F3               	clrf	LCD_Set_Cursor@y
  5023  0493  0AF3               	incf	LCD_Set_Cursor@y,f
  5024  0494  3000               	movlw	0
  5025  0495  318B  2360  3182   	fcall	_LCD_Set_Cursor
  5026  0498  3005               	movlw	5
  5027  0499  3180  2006  3182   	fcall	_ADCRead
  5028  049C  0871               	movf	?_ADCRead+1,w
  5029  049D  00FA               	movwf	LCD_Write_Int@value+1
  5030  049E  0870               	movf	?_ADCRead,w
  5031  049F  00F9               	movwf	LCD_Write_Int@value
  5032  04A0  01FB               	clrf	LCD_Write_Int@fieldLength
  5033  04A1  03FB               	decf	LCD_Write_Int@fieldLength,f
  5034  04A2  01FC               	clrf	LCD_Write_Int@numPlaces
  5035  04A3  01FD               	clrf	LCD_Write_Int@sign
  5036  04A4  3180  2014  3182   	fcall	_LCD_Write_Int
  5037                           
  5038                           ;main.c: 93: { LCD_Set_Cursor(6,1); LCD_Write_Int(ADCRead(9),-1, 0, 0);};
  5039  04A7  01F3               	clrf	LCD_Set_Cursor@y
  5040  04A8  0AF3               	incf	LCD_Set_Cursor@y,f
  5041  04A9  3006               	movlw	6
  5042  04AA  318B  2360  3182   	fcall	_LCD_Set_Cursor
  5043  04AD  3009               	movlw	9
  5044  04AE  3180  2006  3182   	fcall	_ADCRead
  5045  04B1  0871               	movf	?_ADCRead+1,w
  5046  04B2  00FA               	movwf	LCD_Write_Int@value+1
  5047  04B3  0870               	movf	?_ADCRead,w
  5048  04B4  00F9               	movwf	LCD_Write_Int@value
  5049  04B5  01FB               	clrf	LCD_Write_Int@fieldLength
  5050  04B6  03FB               	decf	LCD_Write_Int@fieldLength,f
  5051  04B7  01FC               	clrf	LCD_Write_Int@numPlaces
  5052  04B8  01FD               	clrf	LCD_Write_Int@sign
  5053  04B9  3180  2014  3182   	fcall	_LCD_Write_Int
  5054                           
  5055                           ;main.c: 94: { LCD_Set_Cursor(11,1); LCD_Write_Int(ADCRead(11),-1, 0, 0);};
  5056  04BC  01F3               	clrf	LCD_Set_Cursor@y
  5057  04BD  0AF3               	incf	LCD_Set_Cursor@y,f
  5058  04BE  300B               	movlw	11
  5059  04BF  318B  2360  3182   	fcall	_LCD_Set_Cursor
  5060  04C2  300B               	movlw	11
  5061  04C3  3180  2006  3182   	fcall	_ADCRead
  5062  04C6  0871               	movf	?_ADCRead+1,w
  5063  04C7  00FA               	movwf	LCD_Write_Int@value+1
  5064  04C8  0870               	movf	?_ADCRead,w
  5065  04C9  00F9               	movwf	LCD_Write_Int@value
  5066  04CA  01FB               	clrf	LCD_Write_Int@fieldLength
  5067  04CB  03FB               	decf	LCD_Write_Int@fieldLength,f
  5068  04CC  01FC               	clrf	LCD_Write_Int@numPlaces
  5069  04CD  01FD               	clrf	LCD_Write_Int@sign
  5070  04CE  3180  2014  3182   	fcall	_LCD_Write_Int
  5071                           
  5072                           ;main.c: 161: R = 10010/(1023/(float)analogs[4] - 1);
  5073  04D1  3000               	movlw	0
  5074  04D2  0020               	movlb	0	; select bank0
  5075  04D3  00C0               	movwf	___ftadd@f1
  5076  04D4  3080               	movlw	128
  5077  04D5  00C1               	movwf	___ftadd@f1+1
  5078  04D6  30BF               	movlw	191
  5079  04D7  00C2               	movwf	___ftadd@f1+2
  5080  04D8  0021               	movlb	1	; select bank1
  5081  04D9  084D               	movf	((main@analogs+1)^(0+128)+8),w
  5082  04DA  00F9               	movwf	___lwtoft@c+1
  5083  04DB  084C               	movf	(main@analogs^(0+128)+8),w
  5084  04DC  00F8               	movwf	___lwtoft@c
  5085  04DD  3189  2127  3182   	fcall	___lwtoft
  5086  04E0  0878               	movf	?___lwtoft,w
  5087  04E1  0020               	movlb	0	; select bank0
  5088  04E2  00B0               	movwf	___ftdiv@f2
  5089  04E3  0879               	movf	?___lwtoft+1,w
  5090  04E4  00B1               	movwf	___ftdiv@f2+1
  5091  04E5  087A               	movf	?___lwtoft+2,w
  5092  04E6  00B2               	movwf	___ftdiv@f2+2
  5093  04E7  30C0               	movlw	192
  5094  04E8  00B3               	movwf	___ftdiv@f1
  5095  04E9  307F               	movlw	127
  5096  04EA  00B4               	movwf	___ftdiv@f1+1
  5097  04EB  3044               	movlw	68
  5098  04EC  00B5               	movwf	___ftdiv@f1+2
  5099  04ED  318D  25F6  3182   	fcall	___ftdiv
  5100  04F0  0020               	movlb	0	; select bank0
  5101  04F1  0830               	movf	?___ftdiv,w
  5102  04F2  00C3               	movwf	___ftadd@f2
  5103  04F3  0831               	movf	?___ftdiv+1,w
  5104  04F4  00C4               	movwf	___ftadd@f2+1
  5105  04F5  0832               	movf	?___ftdiv+2,w
  5106  04F6  00C5               	movwf	___ftadd@f2+2
  5107  04F7  3180  20DD  3182   	fcall	___ftadd
  5108  04FA  0020               	movlb	0	; select bank0
  5109  04FB  0840               	movf	?___ftadd,w
  5110  04FC  0021               	movlb	1	; select bank1
  5111  04FD  00DC               	movwf	_main$949^(0+128)
  5112  04FE  0020               	movlb	0	; select bank0
  5113  04FF  0841               	movf	?___ftadd+1,w
  5114  0500  0021               	movlb	1	; select bank1
  5115  0501  00DD               	movwf	(_main$949+1)^(0+128)
  5116  0502  0020               	movlb	0	; select bank0
  5117  0503  0842               	movf	?___ftadd+2,w
  5118  0504  0021               	movlb	1	; select bank1
  5119  0505  00DE               	movwf	(_main$949+2)^(0+128)
  5120                           
  5121                           ;main.c: 161: R = 10010/(1023/(float)analogs[4] - 1);
  5122  0506  085C               	movf	_main$949^(0+128),w
  5123  0507  0020               	movlb	0	; select bank0
  5124  0508  00B0               	movwf	___ftdiv@f2
  5125  0509  0021               	movlb	1	; select bank1
  5126  050A  085D               	movf	(_main$949+1)^(0+128),w
  5127  050B  0020               	movlb	0	; select bank0
  5128  050C  00B1               	movwf	___ftdiv@f2+1
  5129  050D  0021               	movlb	1	; select bank1
  5130  050E  085E               	movf	(_main$949+2)^(0+128),w
  5131  050F  0020               	movlb	0	; select bank0
  5132  0510  00B2               	movwf	___ftdiv@f2+2
  5133  0511  3068               	movlw	104
  5134  0512  00B3               	movwf	___ftdiv@f1
  5135  0513  301C               	movlw	28
  5136  0514  00B4               	movwf	___ftdiv@f1+1
  5137  0515  3046               	movlw	70
  5138  0516  00B5               	movwf	___ftdiv@f1+2
  5139  0517  318D  25F6  3182   	fcall	___ftdiv
  5140  051A  0020               	movlb	0	; select bank0
  5141  051B  0830               	movf	?___ftdiv,w
  5142  051C  0021               	movlb	1	; select bank1
  5143  051D  00D9               	movwf	main@R^(0+128)
  5144  051E  0020               	movlb	0	; select bank0
  5145  051F  0831               	movf	?___ftdiv+1,w
  5146  0520  0021               	movlb	1	; select bank1
  5147  0521  00DA               	movwf	(main@R+1)^(0+128)
  5148  0522  0020               	movlb	0	; select bank0
  5149  0523  0832               	movf	?___ftdiv+2,w
  5150  0524  0021               	movlb	1	; select bank1
  5151  0525  00DB               	movwf	(main@R+2)^(0+128)
  5152                           
  5153                           ;main.c: 163: steinhart = R /10061;
  5154  0526  3034               	movlw	52
  5155  0527  0020               	movlb	0	; select bank0
  5156  0528  00B0               	movwf	___ftdiv@f2
  5157  0529  301D               	movlw	29
  5158  052A  00B1               	movwf	___ftdiv@f2+1
  5159  052B  3046               	movlw	70
  5160  052C  00B2               	movwf	___ftdiv@f2+2
  5161  052D  0021               	movlb	1	; select bank1
  5162  052E  0859               	movf	main@R^(0+128),w
  5163  052F  0020               	movlb	0	; select bank0
  5164  0530  00B3               	movwf	___ftdiv@f1
  5165  0531  0021               	movlb	1	; select bank1
  5166  0532  085A               	movf	(main@R+1)^(0+128),w
  5167  0533  0020               	movlb	0	; select bank0
  5168  0534  00B4               	movwf	___ftdiv@f1+1
  5169  0535  0021               	movlb	1	; select bank1
  5170  0536  085B               	movf	(main@R+2)^(0+128),w
  5171  0537  0020               	movlb	0	; select bank0
  5172  0538  00B5               	movwf	___ftdiv@f1+2
  5173  0539  318D  25F6  3182   	fcall	___ftdiv
  5174  053C  0020               	movlb	0	; select bank0
  5175  053D  0830               	movf	?___ftdiv,w
  5176  053E  0021               	movlb	1	; select bank1
  5177  053F  00E0               	movwf	main@steinhart^(0+128)
  5178  0540  0020               	movlb	0	; select bank0
  5179  0541  0831               	movf	?___ftdiv+1,w
  5180  0542  0021               	movlb	1	; select bank1
  5181  0543  00E1               	movwf	(main@steinhart+1)^(0+128)
  5182  0544  0020               	movlb	0	; select bank0
  5183  0545  0832               	movf	?___ftdiv+2,w
  5184  0546  0021               	movlb	1	; select bank1
  5185  0547  00E2               	movwf	(main@steinhart+2)^(0+128)
  5186                           
  5187                           ;main.c: 164: steinhart = log(steinhart);
  5188  0548  0860               	movf	main@steinhart^(0+128),w
  5189  0549  0020               	movlb	0	; select bank0
  5190  054A  00D7               	movwf	log@x
  5191  054B  0021               	movlb	1	; select bank1
  5192  054C  0861               	movf	(main@steinhart+1)^(0+128),w
  5193  054D  0020               	movlb	0	; select bank0
  5194  054E  00D8               	movwf	log@x+1
  5195  054F  0021               	movlb	1	; select bank1
  5196  0550  0862               	movf	(main@steinhart+2)^(0+128),w
  5197  0551  0020               	movlb	0	; select bank0
  5198  0552  00D9               	movwf	log@x+2
  5199  0553  318E  269F  3182   	fcall	_log
  5200  0556  0020               	movlb	0	; select bank0
  5201  0557  0857               	movf	?_log,w
  5202  0558  0021               	movlb	1	; select bank1
  5203  0559  00E0               	movwf	main@steinhart^(0+128)
  5204  055A  0020               	movlb	0	; select bank0
  5205  055B  0858               	movf	?_log+1,w
  5206  055C  0021               	movlb	1	; select bank1
  5207  055D  00E1               	movwf	(main@steinhart+1)^(0+128)
  5208  055E  0020               	movlb	0	; select bank0
  5209  055F  0859               	movf	?_log+2,w
  5210  0560  0021               	movlb	1	; select bank1
  5211  0561  00E2               	movwf	(main@steinhart+2)^(0+128)
  5212                           
  5213                           ;main.c: 165: steinhart /= 3995;
  5214  0562  30B0               	movlw	176
  5215  0563  0020               	movlb	0	; select bank0
  5216  0564  00B0               	movwf	___ftdiv@f2
  5217  0565  3079               	movlw	121
  5218  0566  00B1               	movwf	___ftdiv@f2+1
  5219  0567  3045               	movlw	69
  5220  0568  00B2               	movwf	___ftdiv@f2+2
  5221  0569  0021               	movlb	1	; select bank1
  5222  056A  0860               	movf	main@steinhart^(0+128),w
  5223  056B  0020               	movlb	0	; select bank0
  5224  056C  00B3               	movwf	___ftdiv@f1
  5225  056D  0021               	movlb	1	; select bank1
  5226  056E  0861               	movf	(main@steinhart+1)^(0+128),w
  5227  056F  0020               	movlb	0	; select bank0
  5228  0570  00B4               	movwf	___ftdiv@f1+1
  5229  0571  0021               	movlb	1	; select bank1
  5230  0572  0862               	movf	(main@steinhart+2)^(0+128),w
  5231  0573  0020               	movlb	0	; select bank0
  5232  0574  00B5               	movwf	___ftdiv@f1+2
  5233  0575  318D  25F6  3182   	fcall	___ftdiv
  5234  0578  0020               	movlb	0	; select bank0
  5235  0579  0830               	movf	?___ftdiv,w
  5236  057A  0021               	movlb	1	; select bank1
  5237  057B  00E0               	movwf	main@steinhart^(0+128)
  5238  057C  0020               	movlb	0	; select bank0
  5239  057D  0831               	movf	?___ftdiv+1,w
  5240  057E  0021               	movlb	1	; select bank1
  5241  057F  00E1               	movwf	(main@steinhart+1)^(0+128)
  5242  0580  0020               	movlb	0	; select bank0
  5243  0581  0832               	movf	?___ftdiv+2,w
  5244  0582  0021               	movlb	1	; select bank1
  5245  0583  00E2               	movwf	(main@steinhart+2)^(0+128)
  5246                           
  5247                           ;main.c: 166: steinhart += 1.0 / (25 + 273.15);
  5248  0584  30CF               	movlw	207
  5249  0585  0020               	movlb	0	; select bank0
  5250  0586  00C0               	movwf	___ftadd@f1
  5251  0587  305B               	movlw	91
  5252  0588  00C1               	movwf	___ftadd@f1+1
  5253  0589  303B               	movlw	59
  5254  058A  00C2               	movwf	___ftadd@f1+2
  5255  058B  0021               	movlb	1	; select bank1
  5256  058C  0860               	movf	main@steinhart^(0+128),w
  5257  058D  0020               	movlb	0	; select bank0
  5258  058E  00C3               	movwf	___ftadd@f2
  5259  058F  0021               	movlb	1	; select bank1
  5260  0590  0861               	movf	(main@steinhart+1)^(0+128),w
  5261  0591  0020               	movlb	0	; select bank0
  5262  0592  00C4               	movwf	___ftadd@f2+1
  5263  0593  0021               	movlb	1	; select bank1
  5264  0594  0862               	movf	(main@steinhart+2)^(0+128),w
  5265  0595  0020               	movlb	0	; select bank0
  5266  0596  00C5               	movwf	___ftadd@f2+2
  5267  0597  3180  20DD  3182   	fcall	___ftadd
  5268  059A  0020               	movlb	0	; select bank0
  5269  059B  0840               	movf	?___ftadd,w
  5270  059C  0021               	movlb	1	; select bank1
  5271  059D  00E0               	movwf	main@steinhart^(0+128)
  5272  059E  0020               	movlb	0	; select bank0
  5273  059F  0841               	movf	?___ftadd+1,w
  5274  05A0  0021               	movlb	1	; select bank1
  5275  05A1  00E1               	movwf	(main@steinhart+1)^(0+128)
  5276  05A2  0020               	movlb	0	; select bank0
  5277  05A3  0842               	movf	?___ftadd+2,w
  5278  05A4  0021               	movlb	1	; select bank1
  5279  05A5  00E2               	movwf	(main@steinhart+2)^(0+128)
  5280                           
  5281                           ;main.c: 167: steinhart = 1.0 / steinhart;
  5282  05A6  0860               	movf	main@steinhart^(0+128),w
  5283  05A7  0020               	movlb	0	; select bank0
  5284  05A8  00B0               	movwf	___ftdiv@f2
  5285  05A9  0021               	movlb	1	; select bank1
  5286  05AA  0861               	movf	(main@steinhart+1)^(0+128),w
  5287  05AB  0020               	movlb	0	; select bank0
  5288  05AC  00B1               	movwf	___ftdiv@f2+1
  5289  05AD  0021               	movlb	1	; select bank1
  5290  05AE  0862               	movf	(main@steinhart+2)^(0+128),w
  5291  05AF  0020               	movlb	0	; select bank0
  5292  05B0  00B2               	movwf	___ftdiv@f2+2
  5293  05B1  3000               	movlw	0
  5294  05B2  00B3               	movwf	___ftdiv@f1
  5295  05B3  3080               	movlw	128
  5296  05B4  00B4               	movwf	___ftdiv@f1+1
  5297  05B5  303F               	movlw	63
  5298  05B6  00B5               	movwf	___ftdiv@f1+2
  5299  05B7  318D  25F6  3182   	fcall	___ftdiv
  5300  05BA  0020               	movlb	0	; select bank0
  5301  05BB  0830               	movf	?___ftdiv,w
  5302  05BC  0021               	movlb	1	; select bank1
  5303  05BD  00E0               	movwf	main@steinhart^(0+128)
  5304  05BE  0020               	movlb	0	; select bank0
  5305  05BF  0831               	movf	?___ftdiv+1,w
  5306  05C0  0021               	movlb	1	; select bank1
  5307  05C1  00E1               	movwf	(main@steinhart+1)^(0+128)
  5308  05C2  0020               	movlb	0	; select bank0
  5309  05C3  0832               	movf	?___ftdiv+2,w
  5310  05C4  0021               	movlb	1	; select bank1
  5311  05C5  00E2               	movwf	(main@steinhart+2)^(0+128)
  5312                           
  5313                           ;main.c: 168: steinhart -= 273.15;
  5314  05C6  3093               	movlw	147
  5315  05C7  0020               	movlb	0	; select bank0
  5316  05C8  00CD               	movwf	___ftsub@f2
  5317  05C9  3088               	movlw	136
  5318  05CA  00CE               	movwf	___ftsub@f2+1
  5319  05CB  3043               	movlw	67
  5320  05CC  00CF               	movwf	___ftsub@f2+2
  5321  05CD  0021               	movlb	1	; select bank1
  5322  05CE  0860               	movf	main@steinhart^(0+128),w
  5323  05CF  0020               	movlb	0	; select bank0
  5324  05D0  00D0               	movwf	___ftsub@f1
  5325  05D1  0021               	movlb	1	; select bank1
  5326  05D2  0861               	movf	(main@steinhart+1)^(0+128),w
  5327  05D3  0020               	movlb	0	; select bank0
  5328  05D4  00D1               	movwf	___ftsub@f1+1
  5329  05D5  0021               	movlb	1	; select bank1
  5330  05D6  0862               	movf	(main@steinhart+2)^(0+128),w
  5331  05D7  0020               	movlb	0	; select bank0
  5332  05D8  00D2               	movwf	___ftsub@f1+2
  5333  05D9  3189  21CE  3182   	fcall	___ftsub
  5334  05DC  0020               	movlb	0	; select bank0
  5335  05DD  084D               	movf	?___ftsub,w
  5336  05DE  0021               	movlb	1	; select bank1
  5337  05DF  00E0               	movwf	main@steinhart^(0+128)
  5338  05E0  0020               	movlb	0	; select bank0
  5339  05E1  084E               	movf	?___ftsub+1,w
  5340  05E2  0021               	movlb	1	; select bank1
  5341  05E3  00E1               	movwf	(main@steinhart+1)^(0+128)
  5342  05E4  0020               	movlb	0	; select bank0
  5343  05E5  084F               	movf	?___ftsub+2,w
  5344  05E6  0021               	movlb	1	; select bank1
  5345  05E7  00E2               	movwf	(main@steinhart+2)^(0+128)
  5346                           
  5347                           ;main.c: 170: displayTemp = steinhart*10;
  5348  05E8  3000               	movlw	0
  5349  05E9  0020               	movlb	0	; select bank0
  5350  05EA  00A0               	movwf	___ftmul@f1
  5351  05EB  3020               	movlw	32
  5352  05EC  00A1               	movwf	___ftmul@f1+1
  5353  05ED  3041               	movlw	65
  5354  05EE  00A2               	movwf	___ftmul@f1+2
  5355  05EF  0021               	movlb	1	; select bank1
  5356  05F0  0860               	movf	main@steinhart^(0+128),w
  5357  05F1  0020               	movlb	0	; select bank0
  5358  05F2  00A3               	movwf	___ftmul@f2
  5359  05F3  0021               	movlb	1	; select bank1
  5360  05F4  0861               	movf	(main@steinhart+1)^(0+128),w
  5361  05F5  0020               	movlb	0	; select bank0
  5362  05F6  00A4               	movwf	___ftmul@f2+1
  5363  05F7  0021               	movlb	1	; select bank1
  5364  05F8  0862               	movf	(main@steinhart+2)^(0+128),w
  5365  05F9  0020               	movlb	0	; select bank0
  5366  05FA  00A5               	movwf	___ftmul@f2+2
  5367  05FB  318F  274C  3182   	fcall	___ftmul
  5368  05FE  0020               	movlb	0	; select bank0
  5369  05FF  0820               	movf	?___ftmul,w
  5370  0600  0021               	movlb	1	; select bank1
  5371  0601  00D1               	movwf	main@displayTemp^(0+128)
  5372  0602  0020               	movlb	0	; select bank0
  5373  0603  0821               	movf	?___ftmul+1,w
  5374  0604  0021               	movlb	1	; select bank1
  5375  0605  00D2               	movwf	(main@displayTemp+1)^(0+128)
  5376  0606  0020               	movlb	0	; select bank0
  5377  0607  0822               	movf	?___ftmul+2,w
  5378  0608  0021               	movlb	1	; select bank1
  5379  0609  00D3               	movwf	(main@displayTemp+2)^(0+128)
  5380                           
  5381                           ;main.c: 172: displayTemp = displayTemp*9/5+320;
  5382  060A  3000               	movlw	0
  5383  060B  0020               	movlb	0	; select bank0
  5384  060C  00C0               	movwf	___ftadd@f1
  5385  060D  30A0               	movlw	160
  5386  060E  00C1               	movwf	___ftadd@f1+1
  5387  060F  3043               	movlw	67
  5388  0610  00C2               	movwf	___ftadd@f1+2
  5389  0611  3000               	movlw	0
  5390  0612  00B0               	movwf	___ftdiv@f2
  5391  0613  30A0               	movlw	160
  5392  0614  00B1               	movwf	___ftdiv@f2+1
  5393  0615  3040               	movlw	64
  5394  0616  00B2               	movwf	___ftdiv@f2+2
  5395  0617  3000               	movlw	0
  5396  0618  00A0               	movwf	___ftmul@f1
  5397  0619  3010               	movlw	16
  5398  061A  00A1               	movwf	___ftmul@f1+1
  5399  061B  3041               	movlw	65
  5400  061C  00A2               	movwf	___ftmul@f1+2
  5401  061D  0021               	movlb	1	; select bank1
  5402  061E  0851               	movf	main@displayTemp^(0+128),w
  5403  061F  0020               	movlb	0	; select bank0
  5404  0620  00A3               	movwf	___ftmul@f2
  5405  0621  0021               	movlb	1	; select bank1
  5406  0622  0852               	movf	(main@displayTemp+1)^(0+128),w
  5407  0623  0020               	movlb	0	; select bank0
  5408  0624  00A4               	movwf	___ftmul@f2+1
  5409  0625  0021               	movlb	1	; select bank1
  5410  0626  0853               	movf	(main@displayTemp+2)^(0+128),w
  5411  0627  0020               	movlb	0	; select bank0
  5412  0628  00A5               	movwf	___ftmul@f2+2
  5413  0629  318F  274C  3182   	fcall	___ftmul
  5414  062C  0020               	movlb	0	; select bank0
  5415  062D  0820               	movf	?___ftmul,w
  5416  062E  00B3               	movwf	___ftdiv@f1
  5417  062F  0821               	movf	?___ftmul+1,w
  5418  0630  00B4               	movwf	___ftdiv@f1+1
  5419  0631  0822               	movf	?___ftmul+2,w
  5420  0632  00B5               	movwf	___ftdiv@f1+2
  5421  0633  318D  25F6  3182   	fcall	___ftdiv
  5422  0636  0020               	movlb	0	; select bank0
  5423  0637  0830               	movf	?___ftdiv,w
  5424  0638  00C3               	movwf	___ftadd@f2
  5425  0639  0831               	movf	?___ftdiv+1,w
  5426  063A  00C4               	movwf	___ftadd@f2+1
  5427  063B  0832               	movf	?___ftdiv+2,w
  5428  063C  00C5               	movwf	___ftadd@f2+2
  5429  063D  3180  20DD  3182   	fcall	___ftadd
  5430  0640  0020               	movlb	0	; select bank0
  5431  0641  0840               	movf	?___ftadd,w
  5432  0642  0021               	movlb	1	; select bank1
  5433  0643  00D1               	movwf	main@displayTemp^(0+128)
  5434  0644  0020               	movlb	0	; select bank0
  5435  0645  0841               	movf	?___ftadd+1,w
  5436  0646  0021               	movlb	1	; select bank1
  5437  0647  00D2               	movwf	(main@displayTemp+1)^(0+128)
  5438  0648  0020               	movlb	0	; select bank0
  5439  0649  0842               	movf	?___ftadd+2,w
  5440  064A  0021               	movlb	1	; select bank1
  5441  064B  00D3               	movwf	(main@displayTemp+2)^(0+128)
  5442                           
  5443                           ;main.c: 176: R = 9975/(1023/(float)analogs[5] - 1);
  5444  064C  3000               	movlw	0
  5445  064D  0020               	movlb	0	; select bank0
  5446  064E  00C0               	movwf	___ftadd@f1
  5447  064F  3080               	movlw	128
  5448  0650  00C1               	movwf	___ftadd@f1+1
  5449  0651  30BF               	movlw	191
  5450  0652  00C2               	movwf	___ftadd@f1+2
  5451  0653  0021               	movlb	1	; select bank1
  5452  0654  084F               	movf	((main@analogs+1)^(0+128)+10),w
  5453  0655  00F9               	movwf	___lwtoft@c+1
  5454  0656  084E               	movf	(main@analogs^(0+128)+10),w
  5455  0657  00F8               	movwf	___lwtoft@c
  5456  0658  3189  2127  3182   	fcall	___lwtoft
  5457  065B  0878               	movf	?___lwtoft,w
  5458  065C  0020               	movlb	0	; select bank0
  5459  065D  00B0               	movwf	___ftdiv@f2
  5460  065E  0879               	movf	?___lwtoft+1,w
  5461  065F  00B1               	movwf	___ftdiv@f2+1
  5462  0660  087A               	movf	?___lwtoft+2,w
  5463  0661  00B2               	movwf	___ftdiv@f2+2
  5464  0662  30C0               	movlw	192
  5465  0663  00B3               	movwf	___ftdiv@f1
  5466  0664  307F               	movlw	127
  5467  0665  00B4               	movwf	___ftdiv@f1+1
  5468  0666  3044               	movlw	68
  5469  0667  00B5               	movwf	___ftdiv@f1+2
  5470  0668  318D  25F6  3182   	fcall	___ftdiv
  5471  066B  0020               	movlb	0	; select bank0
  5472  066C  0830               	movf	?___ftdiv,w
  5473  066D  00C3               	movwf	___ftadd@f2
  5474  066E  0831               	movf	?___ftdiv+1,w
  5475  066F  00C4               	movwf	___ftadd@f2+1
  5476  0670  0832               	movf	?___ftdiv+2,w
  5477  0671  00C5               	movwf	___ftadd@f2+2
  5478  0672  3180  20DD  3182   	fcall	___ftadd
  5479  0675  0020               	movlb	0	; select bank0
  5480  0676  0840               	movf	?___ftadd,w
  5481  0677  0021               	movlb	1	; select bank1
  5482  0678  00DC               	movwf	_main$949^(0+128)
  5483  0679  0020               	movlb	0	; select bank0
  5484  067A  0841               	movf	?___ftadd+1,w
  5485  067B  0021               	movlb	1	; select bank1
  5486  067C  00DD               	movwf	(_main$949+1)^(0+128)
  5487  067D  0020               	movlb	0	; select bank0
  5488  067E  0842               	movf	?___ftadd+2,w
  5489  067F  0021               	movlb	1	; select bank1
  5490  0680  00DE               	movwf	(_main$949+2)^(0+128)
  5491                           
  5492                           ;main.c: 176: R = 9975/(1023/(float)analogs[5] - 1);
  5493  0681  085C               	movf	_main$949^(0+128),w
  5494  0682  0020               	movlb	0	; select bank0
  5495  0683  00B0               	movwf	___ftdiv@f2
  5496  0684  0021               	movlb	1	; select bank1
  5497  0685  085D               	movf	(_main$949+1)^(0+128),w
  5498  0686  0020               	movlb	0	; select bank0
  5499  0687  00B1               	movwf	___ftdiv@f2+1
  5500  0688  0021               	movlb	1	; select bank1
  5501  0689  085E               	movf	(_main$949+2)^(0+128),w
  5502  068A  0020               	movlb	0	; select bank0
  5503  068B  00B2               	movwf	___ftdiv@f2+2
  5504  068C  30DC               	movlw	220
  5505  068D  00B3               	movwf	___ftdiv@f1
  5506  068E  301B               	movlw	27
  5507  068F  00B4               	movwf	___ftdiv@f1+1
  5508  0690  3046               	movlw	70
  5509  0691  00B5               	movwf	___ftdiv@f1+2
  5510  0692  318D  25F6  3182   	fcall	___ftdiv
  5511  0695  0020               	movlb	0	; select bank0
  5512  0696  0830               	movf	?___ftdiv,w
  5513  0697  0021               	movlb	1	; select bank1
  5514  0698  00D9               	movwf	main@R^(0+128)
  5515  0699  0020               	movlb	0	; select bank0
  5516  069A  0831               	movf	?___ftdiv+1,w
  5517  069B  0021               	movlb	1	; select bank1
  5518  069C  00DA               	movwf	(main@R+1)^(0+128)
  5519  069D  0020               	movlb	0	; select bank0
  5520  069E  0832               	movf	?___ftdiv+2,w
  5521  069F  0021               	movlb	1	; select bank1
  5522  06A0  00DB               	movwf	(main@R+2)^(0+128)
  5523                           
  5524                           ;main.c: 178: steinhart = R /10061;
  5525  06A1  3034               	movlw	52
  5526  06A2  0020               	movlb	0	; select bank0
  5527  06A3  00B0               	movwf	___ftdiv@f2
  5528  06A4  301D               	movlw	29
  5529  06A5  00B1               	movwf	___ftdiv@f2+1
  5530  06A6  3046               	movlw	70
  5531  06A7  00B2               	movwf	___ftdiv@f2+2
  5532  06A8  0021               	movlb	1	; select bank1
  5533  06A9  0859               	movf	main@R^(0+128),w
  5534  06AA  0020               	movlb	0	; select bank0
  5535  06AB  00B3               	movwf	___ftdiv@f1
  5536  06AC  0021               	movlb	1	; select bank1
  5537  06AD  085A               	movf	(main@R+1)^(0+128),w
  5538  06AE  0020               	movlb	0	; select bank0
  5539  06AF  00B4               	movwf	___ftdiv@f1+1
  5540  06B0  0021               	movlb	1	; select bank1
  5541  06B1  085B               	movf	(main@R+2)^(0+128),w
  5542  06B2  0020               	movlb	0	; select bank0
  5543  06B3  00B5               	movwf	___ftdiv@f1+2
  5544  06B4  318D  25F6  3182   	fcall	___ftdiv
  5545  06B7  0020               	movlb	0	; select bank0
  5546  06B8  0830               	movf	?___ftdiv,w
  5547  06B9  0021               	movlb	1	; select bank1
  5548  06BA  00E0               	movwf	main@steinhart^(0+128)
  5549  06BB  0020               	movlb	0	; select bank0
  5550  06BC  0831               	movf	?___ftdiv+1,w
  5551  06BD  0021               	movlb	1	; select bank1
  5552  06BE  00E1               	movwf	(main@steinhart+1)^(0+128)
  5553  06BF  0020               	movlb	0	; select bank0
  5554  06C0  0832               	movf	?___ftdiv+2,w
  5555  06C1  0021               	movlb	1	; select bank1
  5556  06C2  00E2               	movwf	(main@steinhart+2)^(0+128)
  5557                           
  5558                           ;main.c: 179: steinhart = log(steinhart);
  5559  06C3  0860               	movf	main@steinhart^(0+128),w
  5560  06C4  0020               	movlb	0	; select bank0
  5561  06C5  00D7               	movwf	log@x
  5562  06C6  0021               	movlb	1	; select bank1
  5563  06C7  0861               	movf	(main@steinhart+1)^(0+128),w
  5564  06C8  0020               	movlb	0	; select bank0
  5565  06C9  00D8               	movwf	log@x+1
  5566  06CA  0021               	movlb	1	; select bank1
  5567  06CB  0862               	movf	(main@steinhart+2)^(0+128),w
  5568  06CC  0020               	movlb	0	; select bank0
  5569  06CD  00D9               	movwf	log@x+2
  5570  06CE  318E  269F  3182   	fcall	_log
  5571  06D1  0020               	movlb	0	; select bank0
  5572  06D2  0857               	movf	?_log,w
  5573  06D3  0021               	movlb	1	; select bank1
  5574  06D4  00E0               	movwf	main@steinhart^(0+128)
  5575  06D5  0020               	movlb	0	; select bank0
  5576  06D6  0858               	movf	?_log+1,w
  5577  06D7  0021               	movlb	1	; select bank1
  5578  06D8  00E1               	movwf	(main@steinhart+1)^(0+128)
  5579  06D9  0020               	movlb	0	; select bank0
  5580  06DA  0859               	movf	?_log+2,w
  5581  06DB  0021               	movlb	1	; select bank1
  5582  06DC  00E2               	movwf	(main@steinhart+2)^(0+128)
  5583                           
  5584                           ;main.c: 180: steinhart /= 3995;
  5585  06DD  30B0               	movlw	176
  5586  06DE  0020               	movlb	0	; select bank0
  5587  06DF  00B0               	movwf	___ftdiv@f2
  5588  06E0  3079               	movlw	121
  5589  06E1  00B1               	movwf	___ftdiv@f2+1
  5590  06E2  3045               	movlw	69
  5591  06E3  00B2               	movwf	___ftdiv@f2+2
  5592  06E4  0021               	movlb	1	; select bank1
  5593  06E5  0860               	movf	main@steinhart^(0+128),w
  5594  06E6  0020               	movlb	0	; select bank0
  5595  06E7  00B3               	movwf	___ftdiv@f1
  5596  06E8  0021               	movlb	1	; select bank1
  5597  06E9  0861               	movf	(main@steinhart+1)^(0+128),w
  5598  06EA  0020               	movlb	0	; select bank0
  5599  06EB  00B4               	movwf	___ftdiv@f1+1
  5600  06EC  0021               	movlb	1	; select bank1
  5601  06ED  0862               	movf	(main@steinhart+2)^(0+128),w
  5602  06EE  0020               	movlb	0	; select bank0
  5603  06EF  00B5               	movwf	___ftdiv@f1+2
  5604  06F0  318D  25F6  3182   	fcall	___ftdiv
  5605  06F3  0020               	movlb	0	; select bank0
  5606  06F4  0830               	movf	?___ftdiv,w
  5607  06F5  0021               	movlb	1	; select bank1
  5608  06F6  00E0               	movwf	main@steinhart^(0+128)
  5609  06F7  0020               	movlb	0	; select bank0
  5610  06F8  0831               	movf	?___ftdiv+1,w
  5611  06F9  0021               	movlb	1	; select bank1
  5612  06FA  00E1               	movwf	(main@steinhart+1)^(0+128)
  5613  06FB  0020               	movlb	0	; select bank0
  5614  06FC  0832               	movf	?___ftdiv+2,w
  5615  06FD  0021               	movlb	1	; select bank1
  5616  06FE  00E2               	movwf	(main@steinhart+2)^(0+128)
  5617                           
  5618                           ;main.c: 181: steinhart += 1.0 / (25 + 273.15);
  5619  06FF  30CF               	movlw	207
  5620  0700  0020               	movlb	0	; select bank0
  5621  0701  00C0               	movwf	___ftadd@f1
  5622  0702  305B               	movlw	91
  5623  0703  00C1               	movwf	___ftadd@f1+1
  5624  0704  303B               	movlw	59
  5625  0705  00C2               	movwf	___ftadd@f1+2
  5626  0706  0021               	movlb	1	; select bank1
  5627  0707  0860               	movf	main@steinhart^(0+128),w
  5628  0708  0020               	movlb	0	; select bank0
  5629  0709  00C3               	movwf	___ftadd@f2
  5630  070A  0021               	movlb	1	; select bank1
  5631  070B  0861               	movf	(main@steinhart+1)^(0+128),w
  5632  070C  0020               	movlb	0	; select bank0
  5633  070D  00C4               	movwf	___ftadd@f2+1
  5634  070E  0021               	movlb	1	; select bank1
  5635  070F  0862               	movf	(main@steinhart+2)^(0+128),w
  5636  0710  0020               	movlb	0	; select bank0
  5637  0711  00C5               	movwf	___ftadd@f2+2
  5638  0712  3180  20DD  3182   	fcall	___ftadd
  5639  0715  0020               	movlb	0	; select bank0
  5640  0716  0840               	movf	?___ftadd,w
  5641  0717  0021               	movlb	1	; select bank1
  5642  0718  00E0               	movwf	main@steinhart^(0+128)
  5643  0719  0020               	movlb	0	; select bank0
  5644  071A  0841               	movf	?___ftadd+1,w
  5645  071B  0021               	movlb	1	; select bank1
  5646  071C  00E1               	movwf	(main@steinhart+1)^(0+128)
  5647  071D  0020               	movlb	0	; select bank0
  5648  071E  0842               	movf	?___ftadd+2,w
  5649  071F  0021               	movlb	1	; select bank1
  5650  0720  00E2               	movwf	(main@steinhart+2)^(0+128)
  5651                           
  5652                           ;main.c: 182: steinhart = 1.0 / steinhart;
  5653  0721  0860               	movf	main@steinhart^(0+128),w
  5654  0722  0020               	movlb	0	; select bank0
  5655  0723  00B0               	movwf	___ftdiv@f2
  5656  0724  0021               	movlb	1	; select bank1
  5657  0725  0861               	movf	(main@steinhart+1)^(0+128),w
  5658  0726  0020               	movlb	0	; select bank0
  5659  0727  00B1               	movwf	___ftdiv@f2+1
  5660  0728  0021               	movlb	1	; select bank1
  5661  0729  0862               	movf	(main@steinhart+2)^(0+128),w
  5662  072A  0020               	movlb	0	; select bank0
  5663  072B  00B2               	movwf	___ftdiv@f2+2
  5664  072C  3000               	movlw	0
  5665  072D  00B3               	movwf	___ftdiv@f1
  5666  072E  3080               	movlw	128
  5667  072F  00B4               	movwf	___ftdiv@f1+1
  5668  0730  303F               	movlw	63
  5669  0731  00B5               	movwf	___ftdiv@f1+2
  5670  0732  318D  25F6  3182   	fcall	___ftdiv
  5671  0735  0020               	movlb	0	; select bank0
  5672  0736  0830               	movf	?___ftdiv,w
  5673  0737  0021               	movlb	1	; select bank1
  5674  0738  00E0               	movwf	main@steinhart^(0+128)
  5675  0739  0020               	movlb	0	; select bank0
  5676  073A  0831               	movf	?___ftdiv+1,w
  5677  073B  0021               	movlb	1	; select bank1
  5678  073C  00E1               	movwf	(main@steinhart+1)^(0+128)
  5679  073D  0020               	movlb	0	; select bank0
  5680  073E  0832               	movf	?___ftdiv+2,w
  5681  073F  0021               	movlb	1	; select bank1
  5682  0740  00E2               	movwf	(main@steinhart+2)^(0+128)
  5683                           
  5684                           ;main.c: 183: steinhart -= 273.15;
  5685  0741  3093               	movlw	147
  5686  0742  0020               	movlb	0	; select bank0
  5687  0743  00CD               	movwf	___ftsub@f2
  5688  0744  3088               	movlw	136
  5689  0745  00CE               	movwf	___ftsub@f2+1
  5690  0746  3043               	movlw	67
  5691  0747  00CF               	movwf	___ftsub@f2+2
  5692  0748  0021               	movlb	1	; select bank1
  5693  0749  0860               	movf	main@steinhart^(0+128),w
  5694  074A  0020               	movlb	0	; select bank0
  5695  074B  00D0               	movwf	___ftsub@f1
  5696  074C  0021               	movlb	1	; select bank1
  5697  074D  0861               	movf	(main@steinhart+1)^(0+128),w
  5698  074E  0020               	movlb	0	; select bank0
  5699  074F  00D1               	movwf	___ftsub@f1+1
  5700  0750  0021               	movlb	1	; select bank1
  5701  0751  0862               	movf	(main@steinhart+2)^(0+128),w
  5702  0752  0020               	movlb	0	; select bank0
  5703  0753  00D2               	movwf	___ftsub@f1+2
  5704  0754  3189  21CE  3182   	fcall	___ftsub
  5705  0757  0020               	movlb	0	; select bank0
  5706  0758  084D               	movf	?___ftsub,w
  5707  0759  0021               	movlb	1	; select bank1
  5708  075A  00E0               	movwf	main@steinhart^(0+128)
  5709  075B  0020               	movlb	0	; select bank0
  5710  075C  084E               	movf	?___ftsub+1,w
  5711  075D  0021               	movlb	1	; select bank1
  5712  075E  00E1               	movwf	(main@steinhart+1)^(0+128)
  5713  075F  0020               	movlb	0	; select bank0
  5714  0760  084F               	movf	?___ftsub+2,w
  5715  0761  0021               	movlb	1	; select bank1
  5716  0762  00E2               	movwf	(main@steinhart+2)^(0+128)
  5717                           
  5718                           ;main.c: 186: displayTemp2 = steinhart*10;
  5719  0763  3000               	movlw	0
  5720  0764  0020               	movlb	0	; select bank0
  5721  0765  00A0               	movwf	___ftmul@f1
  5722  0766  3020               	movlw	32
  5723  0767  00A1               	movwf	___ftmul@f1+1
  5724  0768  3041               	movlw	65
  5725  0769  00A2               	movwf	___ftmul@f1+2
  5726  076A  0021               	movlb	1	; select bank1
  5727  076B  0860               	movf	main@steinhart^(0+128),w
  5728  076C  0020               	movlb	0	; select bank0
  5729  076D  00A3               	movwf	___ftmul@f2
  5730  076E  0021               	movlb	1	; select bank1
  5731  076F  0861               	movf	(main@steinhart+1)^(0+128),w
  5732  0770  0020               	movlb	0	; select bank0
  5733  0771  00A4               	movwf	___ftmul@f2+1
  5734  0772  0021               	movlb	1	; select bank1
  5735  0773  0862               	movf	(main@steinhart+2)^(0+128),w
  5736  0774  0020               	movlb	0	; select bank0
  5737  0775  00A5               	movwf	___ftmul@f2+2
  5738  0776  318F  274C  3182   	fcall	___ftmul
  5739  0779  0020               	movlb	0	; select bank0
  5740  077A  0820               	movf	?___ftmul,w
  5741  077B  0021               	movlb	1	; select bank1
  5742  077C  00D4               	movwf	main@displayTemp2^(0+128)
  5743  077D  0020               	movlb	0	; select bank0
  5744  077E  0821               	movf	?___ftmul+1,w
  5745  077F  0021               	movlb	1	; select bank1
  5746  0780  00D5               	movwf	(main@displayTemp2+1)^(0+128)
  5747  0781  0020               	movlb	0	; select bank0
  5748  0782  0822               	movf	?___ftmul+2,w
  5749  0783  0021               	movlb	1	; select bank1
  5750  0784  00D6               	movwf	(main@displayTemp2+2)^(0+128)
  5751                           
  5752                           ;main.c: 188: displayTemp2 = displayTemp2*9/5+320;
  5753  0785  3000               	movlw	0
  5754  0786  0020               	movlb	0	; select bank0
  5755  0787  00C0               	movwf	___ftadd@f1
  5756  0788  30A0               	movlw	160
  5757  0789  00C1               	movwf	___ftadd@f1+1
  5758  078A  3043               	movlw	67
  5759  078B  00C2               	movwf	___ftadd@f1+2
  5760  078C  3000               	movlw	0
  5761  078D  00B0               	movwf	___ftdiv@f2
  5762  078E  30A0               	movlw	160
  5763  078F  00B1               	movwf	___ftdiv@f2+1
  5764  0790  3040               	movlw	64
  5765  0791  00B2               	movwf	___ftdiv@f2+2
  5766  0792  3000               	movlw	0
  5767  0793  00A0               	movwf	___ftmul@f1
  5768  0794  3010               	movlw	16
  5769  0795  00A1               	movwf	___ftmul@f1+1
  5770  0796  3041               	movlw	65
  5771  0797  00A2               	movwf	___ftmul@f1+2
  5772  0798  0021               	movlb	1	; select bank1
  5773  0799  0854               	movf	main@displayTemp2^(0+128),w
  5774  079A  0020               	movlb	0	; select bank0
  5775  079B  00A3               	movwf	___ftmul@f2
  5776  079C  0021               	movlb	1	; select bank1
  5777  079D  0855               	movf	(main@displayTemp2+1)^(0+128),w
  5778  079E  0020               	movlb	0	; select bank0
  5779  079F  00A4               	movwf	___ftmul@f2+1
  5780  07A0  0021               	movlb	1	; select bank1
  5781  07A1  0856               	movf	(main@displayTemp2+2)^(0+128),w
  5782  07A2  0020               	movlb	0	; select bank0
  5783  07A3  00A5               	movwf	___ftmul@f2+2
  5784  07A4  318F  274C  3182   	fcall	___ftmul
  5785  07A7  0020               	movlb	0	; select bank0
  5786  07A8  0820               	movf	?___ftmul,w
  5787  07A9  00B3               	movwf	___ftdiv@f1
  5788  07AA  0821               	movf	?___ftmul+1,w
  5789  07AB  00B4               	movwf	___ftdiv@f1+1
  5790  07AC  0822               	movf	?___ftmul+2,w
  5791  07AD  00B5               	movwf	___ftdiv@f1+2
  5792  07AE  318D  25F6  3182   	fcall	___ftdiv
  5793  07B1  0020               	movlb	0	; select bank0
  5794  07B2  0830               	movf	?___ftdiv,w
  5795  07B3  00C3               	movwf	___ftadd@f2
  5796  07B4  0831               	movf	?___ftdiv+1,w
  5797  07B5  00C4               	movwf	___ftadd@f2+1
  5798  07B6  0832               	movf	?___ftdiv+2,w
  5799  07B7  00C5               	movwf	___ftadd@f2+2
  5800  07B8  3180  20DD  3182   	fcall	___ftadd
  5801  07BB  0020               	movlb	0	; select bank0
  5802  07BC  0840               	movf	?___ftadd,w
  5803  07BD  0021               	movlb	1	; select bank1
  5804  07BE  00D4               	movwf	main@displayTemp2^(0+128)
  5805  07BF  0020               	movlb	0	; select bank0
  5806  07C0  0841               	movf	?___ftadd+1,w
  5807  07C1  0021               	movlb	1	; select bank1
  5808  07C2  00D5               	movwf	(main@displayTemp2+1)^(0+128)
  5809  07C3  0020               	movlb	0	; select bank0
  5810  07C4  0842               	movf	?___ftadd+2,w
  5811  07C5  0021               	movlb	1	; select bank1
  5812  07C6  00D6               	movwf	(main@displayTemp2+2)^(0+128)
  5813                           
  5814                           ;main.c: 191: count+=1;
  5815  07C7  3001               	movlw	1
  5816  07C8  0020               	movlb	0	; select bank0
  5817  07C9  00DD               	movwf	??_main
  5818  07CA  085D               	movf	??_main,w
  5819  07CB  0021               	movlb	1	; select bank1
  5820  07CC  07D0               	addwf	main@count^(0+128),f
  5821  07CD  2C2A               	goto	l2577
  5822  07CE                     __end_of_main:	
  5823                           
  5824                           	psect	text1
  5825  01D3                     __ptext1:	
  5826 ;; *************** function _readAnalog *****************
  5827 ;; Defined at:
  5828 ;;		line 89 in file "adcc.c"
  5829 ;; Parameters:    Size  Location     Type
  5830 ;;  channel         2    6[BANK0 ] int 
  5831 ;; Auto vars:     Size  Location     Type
  5832 ;;  value           2   11[COMMON] int 
  5833 ;;  analog_chann    2    9[COMMON] int 
  5834 ;; Return value:  Size  Location     Type
  5835 ;;                  2    6[BANK0 ] int 
  5836 ;; Registers used:
  5837 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5838 ;; Tracked objects:
  5839 ;;		On entry : 0/0
  5840 ;;		On exit  : 0/0
  5841 ;;		Unchanged: 0/0
  5842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5843 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5844 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5845 ;;      Temps:          0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5846 ;;      Totals:         4      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5847 ;;Total ram usage:       21 bytes
  5848 ;; Hardware stack levels used:    1
  5849 ;; Hardware stack levels required when called:    1
  5850 ;; This function calls:
  5851 ;;		_ADCRead
  5852 ;;		___aldiv
  5853 ;;		___bmul
  5854 ;; This function is called by:
  5855 ;;		_main
  5856 ;; This function uses a non-reentrant model
  5857 ;;
  5858                           
  5859                           
  5860                           ;psect for function _readAnalog
  5861  01D3                     _readAnalog:	
  5862                           
  5863                           ;adcc.c: 91: int value;
  5864                           ;adcc.c: 93: int analog_channel = channels[channel];
  5865                           
  5866                           ;incstack = 0
  5867                           ; Regs used in _readAnalog: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5868  01D3  0020               	movlb	0	; select bank0
  5869  01D4  3526               	lslf	readAnalog@channel,w
  5870  01D5  3EB8               	addlw	(low (_channels| 0))& (0+255)
  5871  01D6  0086               	movwf	6
  5872  01D7  0187               	clrf	7
  5873  01D8  3F40               	moviw [0]fsr1
  5874  01D9  00F9               	movwf	readAnalog@analog_channel
  5875  01DA  3F41               	moviw [1]fsr1
  5876  01DB  00FA               	movwf	readAnalog@analog_channel+1
  5877                           
  5878                           ;adcc.c: 95: value = ADCRead(analog_channel);
  5879  01DC  0879               	movf	readAnalog@analog_channel,w
  5880  01DD  3180  2006  3181   	fcall	_ADCRead
  5881  01E0  0871               	movf	?_ADCRead+1,w
  5882  01E1  00FC               	movwf	readAnalog@value+1
  5883  01E2  0870               	movf	?_ADCRead,w
  5884  01E3  00FB               	movwf	readAnalog@value
  5885                           
  5886                           ;adcc.c: 99: totals[channel] = totals[channel] - samples[channel][sampleIndex];
  5887  01E4  0020               	movlb	0	; select bank0
  5888  01E5  0826               	movf	readAnalog@channel,w
  5889  01E6  00A8               	movwf	??_readAnalog
  5890  01E7  3001               	movlw	1
  5891  01E8                     u2365:	
  5892  01E8  35A8               	lslf	??_readAnalog,f
  5893  01E9  3EFF               	addlw	-1
  5894  01EA  1D03               	skipz
  5895  01EB  29E8               	goto	u2365
  5896  01EC  3528               	lslf	??_readAnalog,w
  5897  01ED  3EA0               	addlw	(low (_totals| 0))& (0+255)
  5898  01EE  0086               	movwf	6
  5899  01EF  0187               	clrf	7
  5900  01F0  3F40               	moviw [0]fsr1
  5901  01F1  00A9               	movwf	??_readAnalog+1
  5902  01F2  3F41               	moviw [1]fsr1
  5903  01F3  00AA               	movwf	??_readAnalog+2
  5904  01F4  3F42               	moviw [2]fsr1
  5905  01F5  00AB               	movwf	??_readAnalog+3
  5906  01F6  3F43               	moviw [3]fsr1
  5907  01F7  00AC               	movwf	??_readAnalog+4
  5908  01F8  0867               	movf	_sampleIndex,w
  5909  01F9  00AD               	movwf	??_readAnalog+5
  5910  01FA  3001               	movlw	1
  5911  01FB                     u2375:	
  5912  01FB  35AD               	lslf	??_readAnalog+5,f
  5913  01FC  0B89               	decfsz	9,f
  5914  01FD  29FB               	goto	u2375
  5915  01FE  300A               	movlw	10
  5916  01FF  00AE               	movwf	??_readAnalog+6
  5917  0200  082E               	movf	??_readAnalog+6,w
  5918  0201  00F0               	movwf	___bmul@multiplicand
  5919  0202  0826               	movf	readAnalog@channel,w
  5920  0203  3189  2104  3181   	fcall	___bmul
  5921  0206  3E38               	addlw	(low (_samples| (0+256)))& (0+255)
  5922  0207  0020               	movlb	0	; select bank0
  5923  0208  072D               	addwf	??_readAnalog+5,w
  5924  0209  00AF               	movwf	??_readAnalog+7
  5925  020A  082F               	movf	??_readAnalog+7,w
  5926  020B  0086               	movwf	6
  5927  020C  3001               	movlw	1	; select bank2/3
  5928  020D  0087               	movwf	7
  5929  020E  3F40               	moviw [0]fsr1
  5930  020F  00B0               	movwf	??_readAnalog+8
  5931  0210  3F41               	moviw [1]fsr1
  5932  0211  00B1               	movwf	??_readAnalog+9
  5933  0212  0830               	movf	??_readAnalog+8,w
  5934  0213  00B2               	movwf	??_readAnalog+10
  5935  0214  0831               	movf	??_readAnalog+9,w
  5936  0215  00B3               	movwf	??_readAnalog+11
  5937  0216  01B4               	clrf	??_readAnalog+12
  5938  0217  01B5               	clrf	??_readAnalog+13
  5939  0218  09B2               	comf	??_readAnalog+10,f
  5940  0219  09B3               	comf	??_readAnalog+11,f
  5941  021A  09B4               	comf	??_readAnalog+12,f
  5942  021B  09B5               	comf	??_readAnalog+13,f
  5943  021C  0AB2               	incf	??_readAnalog+10,f
  5944  021D  1903               	skipnz
  5945  021E  0AB3               	incf	??_readAnalog+11,f
  5946  021F  1903               	skipnz
  5947  0220  0AB4               	incf	??_readAnalog+12,f
  5948  0221  1903               	skipnz
  5949  0222  0AB5               	incf	??_readAnalog+13,f
  5950  0223  0832               	movf	??_readAnalog+10,w
  5951  0224  07A9               	addwf	??_readAnalog+1,f
  5952  0225  0833               	movf	??_readAnalog+11,w
  5953  0226  3DAA               	addwfc	??_readAnalog+2,f
  5954  0227  0834               	movf	??_readAnalog+12,w
  5955  0228  3DAB               	addwfc	??_readAnalog+3,f
  5956  0229  0835               	movf	??_readAnalog+13,w
  5957  022A  3DAC               	addwfc	??_readAnalog+4,f
  5958  022B  0826               	movf	readAnalog@channel,w
  5959  022C  00B6               	movwf	??_readAnalog+14
  5960  022D  3001               	movlw	1
  5961  022E                     u2385:	
  5962  022E  35B6               	lslf	??_readAnalog+14,f
  5963  022F  3EFF               	addlw	-1
  5964  0230  1D03               	skipz
  5965  0231  2A2E               	goto	u2385
  5966  0232  3536               	lslf	??_readAnalog+14,w
  5967  0233  3EA0               	addlw	(low (_totals| 0))& (0+255)
  5968  0234  0086               	movwf	6
  5969  0235  0187               	clrf	7
  5970  0236  0829               	movf	??_readAnalog+1,w
  5971  0237  3FC0               	movwi [0]fsr1
  5972  0238  082A               	movf	??_readAnalog+2,w
  5973  0239  3FC1               	movwi [1]fsr1
  5974  023A  082B               	movf	??_readAnalog+3,w
  5975  023B  3FC2               	movwi [2]fsr1
  5976  023C  082C               	movf	??_readAnalog+4,w
  5977  023D  3FC3               	movwi [3]fsr1
  5978                           
  5979                           ;adcc.c: 101: samples[channel][sampleIndex] = value;
  5980  023E  0867               	movf	_sampleIndex,w
  5981  023F  00A8               	movwf	??_readAnalog
  5982  0240  3001               	movlw	1
  5983  0241                     u2395:	
  5984  0241  35A8               	lslf	??_readAnalog,f
  5985  0242  0B89               	decfsz	9,f
  5986  0243  2A41               	goto	u2395
  5987  0244  300A               	movlw	10
  5988  0245  00A9               	movwf	??_readAnalog+1
  5989  0246  0829               	movf	??_readAnalog+1,w
  5990  0247  00F0               	movwf	___bmul@multiplicand
  5991  0248  0826               	movf	readAnalog@channel,w
  5992  0249  3189  2104  3181   	fcall	___bmul
  5993  024C  3E38               	addlw	(low (_samples| (0+256)))& (0+255)
  5994  024D  0020               	movlb	0	; select bank0
  5995  024E  0728               	addwf	??_readAnalog,w
  5996  024F  00AA               	movwf	??_readAnalog+2
  5997  0250  082A               	movf	??_readAnalog+2,w
  5998  0251  0086               	movwf	6
  5999  0252  3001               	movlw	1	; select bank2/3
  6000  0253  0087               	movwf	7
  6001  0254  087B               	movf	readAnalog@value,w
  6002  0255  3FC0               	movwi [0]fsr1
  6003  0256  087C               	movf	readAnalog@value+1,w
  6004  0257  3FC1               	movwi [1]fsr1
  6005                           
  6006                           ;adcc.c: 103: totals[channel] = totals[channel] + samples[channel][sampleIndex];
  6007  0258  0826               	movf	readAnalog@channel,w
  6008  0259  00A8               	movwf	??_readAnalog
  6009  025A  3001               	movlw	1
  6010  025B                     u2405:	
  6011  025B  35A8               	lslf	??_readAnalog,f
  6012  025C  3EFF               	addlw	-1
  6013  025D  1D03               	skipz
  6014  025E  2A5B               	goto	u2405
  6015  025F  3528               	lslf	??_readAnalog,w
  6016  0260  3EA0               	addlw	(low (_totals| 0))& (0+255)
  6017  0261  0086               	movwf	6
  6018  0262  0187               	clrf	7
  6019  0263  3F40               	moviw [0]fsr1
  6020  0264  00A9               	movwf	??_readAnalog+1
  6021  0265  3F41               	moviw [1]fsr1
  6022  0266  00AA               	movwf	??_readAnalog+2
  6023  0267  3F42               	moviw [2]fsr1
  6024  0268  00AB               	movwf	??_readAnalog+3
  6025  0269  3F43               	moviw [3]fsr1
  6026  026A  00AC               	movwf	??_readAnalog+4
  6027  026B  0867               	movf	_sampleIndex,w
  6028  026C  00AD               	movwf	??_readAnalog+5
  6029  026D  3001               	movlw	1
  6030  026E                     u2415:	
  6031  026E  35AD               	lslf	??_readAnalog+5,f
  6032  026F  0B89               	decfsz	9,f
  6033  0270  2A6E               	goto	u2415
  6034  0271  300A               	movlw	10
  6035  0272  00AE               	movwf	??_readAnalog+6
  6036  0273  082E               	movf	??_readAnalog+6,w
  6037  0274  00F0               	movwf	___bmul@multiplicand
  6038  0275  0826               	movf	readAnalog@channel,w
  6039  0276  3189  2104  3181   	fcall	___bmul
  6040  0279  3E38               	addlw	(low (_samples| (0+256)))& (0+255)
  6041  027A  0020               	movlb	0	; select bank0
  6042  027B  072D               	addwf	??_readAnalog+5,w
  6043  027C  00AF               	movwf	??_readAnalog+7
  6044  027D  082F               	movf	??_readAnalog+7,w
  6045  027E  0086               	movwf	6
  6046  027F  3001               	movlw	1	; select bank2/3
  6047  0280  0087               	movwf	7
  6048  0281  3F40               	moviw [0]fsr1
  6049  0282  00B0               	movwf	??_readAnalog+8
  6050  0283  3F41               	moviw [1]fsr1
  6051  0284  00B1               	movwf	??_readAnalog+9
  6052  0285  0830               	movf	??_readAnalog+8,w
  6053  0286  00B2               	movwf	??_readAnalog+10
  6054  0287  0831               	movf	??_readAnalog+9,w
  6055  0288  00B3               	movwf	??_readAnalog+11
  6056  0289  01B4               	clrf	??_readAnalog+12
  6057  028A  01B5               	clrf	??_readAnalog+13
  6058  028B  0832               	movf	??_readAnalog+10,w
  6059  028C  07A9               	addwf	??_readAnalog+1,f
  6060  028D  0833               	movf	??_readAnalog+11,w
  6061  028E  3DAA               	addwfc	??_readAnalog+2,f
  6062  028F  0834               	movf	??_readAnalog+12,w
  6063  0290  3DAB               	addwfc	??_readAnalog+3,f
  6064  0291  0835               	movf	??_readAnalog+13,w
  6065  0292  3DAC               	addwfc	??_readAnalog+4,f
  6066  0293  0826               	movf	readAnalog@channel,w
  6067  0294  00B6               	movwf	??_readAnalog+14
  6068  0295  3001               	movlw	1
  6069  0296                     u2425:	
  6070  0296  35B6               	lslf	??_readAnalog+14,f
  6071  0297  3EFF               	addlw	-1
  6072  0298  1D03               	skipz
  6073  0299  2A96               	goto	u2425
  6074  029A  3536               	lslf	??_readAnalog+14,w
  6075  029B  3EA0               	addlw	(low (_totals| 0))& (0+255)
  6076  029C  0086               	movwf	6
  6077  029D  0187               	clrf	7
  6078  029E  0829               	movf	??_readAnalog+1,w
  6079  029F  3FC0               	movwi [0]fsr1
  6080  02A0  082A               	movf	??_readAnalog+2,w
  6081  02A1  3FC1               	movwi [1]fsr1
  6082  02A2  082B               	movf	??_readAnalog+3,w
  6083  02A3  3FC2               	movwi [2]fsr1
  6084  02A4  082C               	movf	??_readAnalog+4,w
  6085  02A5  3FC3               	movwi [3]fsr1
  6086                           
  6087                           ;adcc.c: 105: if(channel==5)
  6088  02A6  3005               	movlw	5
  6089  02A7  0626               	xorwf	readAnalog@channel,w
  6090  02A8  0427               	iorwf	readAnalog@channel+1,w
  6091  02A9  1D03               	btfss	3,2
  6092  02AA  2AB8               	goto	l2303
  6093                           
  6094                           ;adcc.c: 106: {
  6095                           ;adcc.c: 107: sampleIndex += 1;
  6096  02AB  3001               	movlw	1
  6097  02AC  07E7               	addwf	_sampleIndex,f
  6098  02AD  3000               	movlw	0
  6099  02AE  3DE8               	addwfc	_sampleIndex+1,f
  6100                           
  6101                           ;adcc.c: 109: if(sampleIndex >= 5)
  6102  02AF  3000               	movlw	0
  6103  02B0  0268               	subwf	_sampleIndex+1,w
  6104  02B1  3005               	movlw	5
  6105  02B2  1903               	skipnz
  6106  02B3  0267               	subwf	_sampleIndex,w
  6107  02B4  1C03               	skipc
  6108  02B5  2AB8               	goto	l2303
  6109                           
  6110                           ;adcc.c: 110: {
  6111                           ;adcc.c: 111: sampleIndex = 0;
  6112  02B6  01E7               	clrf	_sampleIndex
  6113  02B7  01E8               	clrf	_sampleIndex+1
  6114  02B8                     l2303:	
  6115                           
  6116                           ;adcc.c: 112: }
  6117                           ;adcc.c: 113: }
  6118                           ;adcc.c: 115: value = totals[channel] / 5;
  6119  02B8  3000               	movlw	0
  6120  02B9  00F3               	movwf	___aldiv@divisor+3
  6121  02BA  3000               	movlw	0
  6122  02BB  00F2               	movwf	___aldiv@divisor+2
  6123  02BC  3000               	movlw	0
  6124  02BD  00F1               	movwf	___aldiv@divisor+1
  6125  02BE  3005               	movlw	5
  6126  02BF  00F0               	movwf	___aldiv@divisor
  6127  02C0  0826               	movf	readAnalog@channel,w
  6128  02C1  00A8               	movwf	??_readAnalog
  6129  02C2  3001               	movlw	1
  6130  02C3                     u2455:	
  6131  02C3  35A8               	lslf	??_readAnalog,f
  6132  02C4  3EFF               	addlw	-1
  6133  02C5  1D03               	skipz
  6134  02C6  2AC3               	goto	u2455
  6135  02C7  3528               	lslf	??_readAnalog,w
  6136  02C8  3EA0               	addlw	(low (_totals| 0))& (0+255)
  6137  02C9  0086               	movwf	6
  6138  02CA  0187               	clrf	7
  6139  02CB  3F40               	moviw [0]fsr1
  6140  02CC  00F4               	movwf	___aldiv@dividend
  6141  02CD  3F41               	moviw [1]fsr1
  6142  02CE  00F5               	movwf	___aldiv@dividend+1
  6143  02CF  3F42               	moviw [2]fsr1
  6144  02D0  00F6               	movwf	___aldiv@dividend+2
  6145  02D1  3F43               	moviw [3]fsr1
  6146  02D2  00F7               	movwf	___aldiv@dividend+3
  6147  02D3  318D  2574         	fcall	___aldiv
  6148  02D5  0871               	movf	?___aldiv+1,w
  6149  02D6  00FC               	movwf	readAnalog@value+1
  6150  02D7  0870               	movf	?___aldiv,w
  6151  02D8  00FB               	movwf	readAnalog@value
  6152                           
  6153                           ;adcc.c: 117: return value;
  6154  02D9  087C               	movf	readAnalog@value+1,w
  6155  02DA  0020               	movlb	0	; select bank0
  6156  02DB  00A7               	movwf	?_readAnalog+1
  6157  02DC  087B               	movf	readAnalog@value,w
  6158  02DD  00A6               	movwf	?_readAnalog
  6159  02DE  0008               	return
  6160  02DF                     __end_of_readAnalog:	
  6161                           
  6162                           	psect	text2
  6163  0904                     __ptext2:	
  6164 ;; *************** function ___bmul *****************
  6165 ;; Defined at:
  6166 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul8.c"
  6167 ;; Parameters:    Size  Location     Type
  6168 ;;  multiplier      1    wreg     unsigned char 
  6169 ;;  multiplicand    1    0[COMMON] unsigned char 
  6170 ;; Auto vars:     Size  Location     Type
  6171 ;;  multiplier      1    3[COMMON] unsigned char 
  6172 ;;  product         1    2[COMMON] unsigned char 
  6173 ;; Return value:  Size  Location     Type
  6174 ;;                  1    wreg      unsigned char 
  6175 ;; Registers used:
  6176 ;;		wreg, status,2, status,0
  6177 ;; Tracked objects:
  6178 ;;		On entry : 0/0
  6179 ;;		On exit  : 0/0
  6180 ;;		Unchanged: 0/0
  6181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6182 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6183 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6184 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6185 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6186 ;;Total ram usage:        4 bytes
  6187 ;; Hardware stack levels used:    1
  6188 ;; This function calls:
  6189 ;;		Nothing
  6190 ;; This function is called by:
  6191 ;;		_readAnalog
  6192 ;; This function uses a non-reentrant model
  6193 ;;
  6194                           
  6195                           
  6196                           ;psect for function ___bmul
  6197  0904                     ___bmul:	
  6198                           
  6199                           ;incstack = 0
  6200                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  6201                           ;___bmul@multiplier stored from wreg
  6202  0904  00F3               	movwf	___bmul@multiplier
  6203  0905  01F2               	clrf	___bmul@product
  6204  0906                     l2091:	
  6205  0906  1C73               	btfss	___bmul@multiplier,0
  6206  0907  290C               	goto	l2095
  6207  0908  0870               	movf	___bmul@multiplicand,w
  6208  0909  00F1               	movwf	??___bmul
  6209  090A  0871               	movf	??___bmul,w
  6210  090B  07F2               	addwf	___bmul@product,f
  6211  090C                     l2095:	
  6212  090C  1003               	clrc
  6213  090D  0DF0               	rlf	___bmul@multiplicand,f
  6214  090E  1003               	clrc
  6215  090F  0CF3               	rrf	___bmul@multiplier,f
  6216  0910  0873               	movf	___bmul@multiplier,w
  6217  0911  1D03               	btfss	3,2
  6218  0912  2906               	goto	l2091
  6219  0913  0872               	movf	___bmul@product,w
  6220  0914  0008               	return
  6221  0915                     __end_of___bmul:	
  6222                           
  6223                           	psect	text3
  6224  0D74                     __ptext3:	
  6225 ;; *************** function ___aldiv *****************
  6226 ;; Defined at:
  6227 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\aldiv.c"
  6228 ;; Parameters:    Size  Location     Type
  6229 ;;  divisor         4    0[COMMON] long 
  6230 ;;  dividend        4    4[COMMON] long 
  6231 ;; Auto vars:     Size  Location     Type
  6232 ;;  quotient        4    2[BANK0 ] long 
  6233 ;;  sign            1    1[BANK0 ] unsigned char 
  6234 ;;  counter         1    0[BANK0 ] unsigned char 
  6235 ;; Return value:  Size  Location     Type
  6236 ;;                  4    0[COMMON] long 
  6237 ;; Registers used:
  6238 ;;		wreg, status,2, status,0
  6239 ;; Tracked objects:
  6240 ;;		On entry : 0/0
  6241 ;;		On exit  : 0/0
  6242 ;;		Unchanged: 0/0
  6243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6244 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6245 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6246 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6247 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6248 ;;Total ram usage:       15 bytes
  6249 ;; Hardware stack levels used:    1
  6250 ;; This function calls:
  6251 ;;		Nothing
  6252 ;; This function is called by:
  6253 ;;		_readAnalog
  6254 ;; This function uses a non-reentrant model
  6255 ;;
  6256                           
  6257                           
  6258                           ;psect for function ___aldiv
  6259  0D74                     ___aldiv:	
  6260                           
  6261                           ;incstack = 0
  6262                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  6263  0D74  0020               	movlb	0	; select bank0
  6264  0D75  01A1               	clrf	___aldiv@sign
  6265  0D76  1FF3               	btfss	___aldiv@divisor+3,7
  6266  0D77  2D85               	goto	l422
  6267  0D78  09F0               	comf	___aldiv@divisor,f
  6268  0D79  09F1               	comf	___aldiv@divisor+1,f
  6269  0D7A  09F2               	comf	___aldiv@divisor+2,f
  6270  0D7B  09F3               	comf	___aldiv@divisor+3,f
  6271  0D7C  0AF0               	incf	___aldiv@divisor,f
  6272  0D7D  1903               	skipnz
  6273  0D7E  0AF1               	incf	___aldiv@divisor+1,f
  6274  0D7F  1903               	skipnz
  6275  0D80  0AF2               	incf	___aldiv@divisor+2,f
  6276  0D81  1903               	skipnz
  6277  0D82  0AF3               	incf	___aldiv@divisor+3,f
  6278  0D83  01A1               	clrf	___aldiv@sign
  6279  0D84  0AA1               	incf	___aldiv@sign,f
  6280  0D85                     l422:	
  6281  0D85  1FF7               	btfss	___aldiv@dividend+3,7
  6282  0D86  2D96               	goto	l2113
  6283  0D87  09F4               	comf	___aldiv@dividend,f
  6284  0D88  09F5               	comf	___aldiv@dividend+1,f
  6285  0D89  09F6               	comf	___aldiv@dividend+2,f
  6286  0D8A  09F7               	comf	___aldiv@dividend+3,f
  6287  0D8B  0AF4               	incf	___aldiv@dividend,f
  6288  0D8C  1903               	skipnz
  6289  0D8D  0AF5               	incf	___aldiv@dividend+1,f
  6290  0D8E  1903               	skipnz
  6291  0D8F  0AF6               	incf	___aldiv@dividend+2,f
  6292  0D90  1903               	skipnz
  6293  0D91  0AF7               	incf	___aldiv@dividend+3,f
  6294  0D92  3001               	movlw	1
  6295  0D93  00F8               	movwf	??___aldiv
  6296  0D94  0878               	movf	??___aldiv,w
  6297  0D95  06A1               	xorwf	___aldiv@sign,f
  6298  0D96                     l2113:	
  6299  0D96  3000               	movlw	0
  6300  0D97  00A5               	movwf	___aldiv@quotient+3
  6301  0D98  3000               	movlw	0
  6302  0D99  00A4               	movwf	___aldiv@quotient+2
  6303  0D9A  3000               	movlw	0
  6304  0D9B  00A3               	movwf	___aldiv@quotient+1
  6305  0D9C  3000               	movlw	0
  6306  0D9D  00A2               	movwf	___aldiv@quotient
  6307  0D9E  0873               	movf	___aldiv@divisor+3,w
  6308  0D9F  0472               	iorwf	___aldiv@divisor+2,w
  6309  0DA0  0471               	iorwf	___aldiv@divisor+1,w
  6310  0DA1  0470               	iorwf	___aldiv@divisor,w
  6311  0DA2  1903               	skipnz
  6312  0DA3  2DDF               	goto	l2135
  6313  0DA4  01A0               	clrf	___aldiv@counter
  6314  0DA5  0AA0               	incf	___aldiv@counter,f
  6315  0DA6                     l2121:	
  6316  0DA6  1BF3               	btfsc	___aldiv@divisor+3,7
  6317  0DA7  2DB4               	goto	l2123
  6318  0DA8  3001               	movlw	1
  6319  0DA9                     u2045:	
  6320  0DA9  35F0               	lslf	___aldiv@divisor,f
  6321  0DAA  0DF1               	rlf	___aldiv@divisor+1,f
  6322  0DAB  0DF2               	rlf	___aldiv@divisor+2,f
  6323  0DAC  0DF3               	rlf	___aldiv@divisor+3,f
  6324  0DAD  0B89               	decfsz	9,f
  6325  0DAE  2DA9               	goto	u2045
  6326  0DAF  3001               	movlw	1
  6327  0DB0  00F8               	movwf	??___aldiv
  6328  0DB1  0878               	movf	??___aldiv,w
  6329  0DB2  07A0               	addwf	___aldiv@counter,f
  6330  0DB3  2DA6               	goto	l2121
  6331  0DB4                     l2123:	
  6332  0DB4  3001               	movlw	1
  6333  0DB5                     u2065:	
  6334  0DB5  35A2               	lslf	___aldiv@quotient,f
  6335  0DB6  0DA3               	rlf	___aldiv@quotient+1,f
  6336  0DB7  0DA4               	rlf	___aldiv@quotient+2,f
  6337  0DB8  0DA5               	rlf	___aldiv@quotient+3,f
  6338  0DB9  0B89               	decfsz	9,f
  6339  0DBA  2DB5               	goto	u2065
  6340  0DBB  0873               	movf	___aldiv@divisor+3,w
  6341  0DBC  0277               	subwf	___aldiv@dividend+3,w
  6342  0DBD  1D03               	skipz
  6343  0DBE  2DC9               	goto	u2075
  6344  0DBF  0872               	movf	___aldiv@divisor+2,w
  6345  0DC0  0276               	subwf	___aldiv@dividend+2,w
  6346  0DC1  1D03               	skipz
  6347  0DC2  2DC9               	goto	u2075
  6348  0DC3  0871               	movf	___aldiv@divisor+1,w
  6349  0DC4  0275               	subwf	___aldiv@dividend+1,w
  6350  0DC5  1D03               	skipz
  6351  0DC6  2DC9               	goto	u2075
  6352  0DC7  0870               	movf	___aldiv@divisor,w
  6353  0DC8  0274               	subwf	___aldiv@dividend,w
  6354  0DC9                     u2075:	
  6355  0DC9  1C03               	skipc
  6356  0DCA  2DD4               	goto	l2131
  6357  0DCB  0870               	movf	___aldiv@divisor,w
  6358  0DCC  02F4               	subwf	___aldiv@dividend,f
  6359  0DCD  0871               	movf	___aldiv@divisor+1,w
  6360  0DCE  3BF5               	subwfb	___aldiv@dividend+1,f
  6361  0DCF  0872               	movf	___aldiv@divisor+2,w
  6362  0DD0  3BF6               	subwfb	___aldiv@dividend+2,f
  6363  0DD1  0873               	movf	___aldiv@divisor+3,w
  6364  0DD2  3BF7               	subwfb	___aldiv@dividend+3,f
  6365  0DD3  1422               	bsf	___aldiv@quotient,0
  6366  0DD4                     l2131:	
  6367  0DD4  3001               	movlw	1
  6368  0DD5                     u2085:	
  6369  0DD5  36F3               	lsrf	___aldiv@divisor+3,f
  6370  0DD6  0CF2               	rrf	___aldiv@divisor+2,f
  6371  0DD7  0CF1               	rrf	___aldiv@divisor+1,f
  6372  0DD8  0CF0               	rrf	___aldiv@divisor,f
  6373  0DD9  0B89               	decfsz	9,f
  6374  0DDA  2DD5               	goto	u2085
  6375  0DDB  3001               	movlw	1
  6376  0DDC  02A0               	subwf	___aldiv@counter,f
  6377  0DDD  1D03               	btfss	3,2
  6378  0DDE  2DB4               	goto	l2123
  6379  0DDF                     l2135:	
  6380  0DDF  0821               	movf	___aldiv@sign,w
  6381  0DE0  1903               	btfsc	3,2
  6382  0DE1  2DED               	goto	l2139
  6383  0DE2  09A2               	comf	___aldiv@quotient,f
  6384  0DE3  09A3               	comf	___aldiv@quotient+1,f
  6385  0DE4  09A4               	comf	___aldiv@quotient+2,f
  6386  0DE5  09A5               	comf	___aldiv@quotient+3,f
  6387  0DE6  0AA2               	incf	___aldiv@quotient,f
  6388  0DE7  1903               	skipnz
  6389  0DE8  0AA3               	incf	___aldiv@quotient+1,f
  6390  0DE9  1903               	skipnz
  6391  0DEA  0AA4               	incf	___aldiv@quotient+2,f
  6392  0DEB  1903               	skipnz
  6393  0DEC  0AA5               	incf	___aldiv@quotient+3,f
  6394  0DED                     l2139:	
  6395  0DED  0825               	movf	___aldiv@quotient+3,w
  6396  0DEE  00F3               	movwf	?___aldiv+3
  6397  0DEF  0824               	movf	___aldiv@quotient+2,w
  6398  0DF0  00F2               	movwf	?___aldiv+2
  6399  0DF1  0823               	movf	___aldiv@quotient+1,w
  6400  0DF2  00F1               	movwf	?___aldiv+1
  6401  0DF3  0822               	movf	___aldiv@quotient,w
  6402  0DF4  00F0               	movwf	?___aldiv
  6403  0DF5  0008               	return
  6404  0DF6                     __end_of___aldiv:	
  6405                           
  6406                           	psect	text4
  6407  0006                     __ptext4:	
  6408 ;; *************** function _ADCRead *****************
  6409 ;; Defined at:
  6410 ;;		line 66 in file "adcc.c"
  6411 ;; Parameters:    Size  Location     Type
  6412 ;;  channel         1    wreg     enum E13559
  6413 ;; Auto vars:     Size  Location     Type
  6414 ;;  channel         1    3[COMMON] enum E13559
  6415 ;; Return value:  Size  Location     Type
  6416 ;;                  2    0[COMMON] unsigned int 
  6417 ;; Registers used:
  6418 ;;		wreg
  6419 ;; Tracked objects:
  6420 ;;		On entry : 0/0
  6421 ;;		On exit  : 0/0
  6422 ;;		Unchanged: 0/0
  6423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6424 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6425 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6427 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6428 ;;Total ram usage:        4 bytes
  6429 ;; Hardware stack levels used:    1
  6430 ;; This function calls:
  6431 ;;		Nothing
  6432 ;; This function is called by:
  6433 ;;		_readAnalog
  6434 ;;		_main
  6435 ;; This function uses a non-reentrant model
  6436 ;;
  6437                           
  6438                           
  6439                           ;psect for function _ADCRead
  6440  0006                     _ADCRead:	
  6441                           
  6442                           ;incstack = 0
  6443                           ; Regs used in _ADCRead: [wreg]
  6444                           ;ADCRead@channel stored from wreg
  6445  0006  00F3               	movwf	ADCRead@channel
  6446                           
  6447                           ;adcc.c: 69: ADPCH = channel;
  6448  0007  0873               	movf	ADCRead@channel,w
  6449  0008  0021               	movlb	1	; select bank1
  6450  0009  009E               	movwf	30	;volatile
  6451                           
  6452                           ;adcc.c: 72: ADCON0bits.ADON = 1;
  6453  000A  1793               	bsf	19,7	;volatile
  6454                           
  6455                           ;adcc.c: 75: ADCON0bits.ADCONT = 0;
  6456  000B  1313               	bcf	19,6	;volatile
  6457                           
  6458                           ;adcc.c: 78: ADCON0bits.ADGO = 1;
  6459  000C  1413               	bsf	19,0	;volatile
  6460  000D                     l58:	
  6461                           ;adcc.c: 82: {
  6462                           
  6463                           ;adcc.c: 81: while (ADCON0bits.ADGO)
  6464                           
  6465  000D  1813               	btfsc	19,0	;volatile
  6466  000E  280D               	goto	l58
  6467                           
  6468                           ;adcc.c: 83: }
  6469                           ;adcc.c: 86: return ((ADRESH << 8) + ADRESL);
  6470  000F  080D               	movf	13,w	;volatile
  6471  0010  00F1               	movwf	?_ADCRead+1
  6472  0011  080C               	movf	12,w	;volatile
  6473  0012  00F0               	movwf	?_ADCRead
  6474  0013  0008               	return
  6475  0014                     __end_of_ADCRead:	
  6476                           
  6477                           	psect	text5
  6478  0E9F                     __ptext5:	
  6479 ;; *************** function _log *****************
  6480 ;; Defined at:
  6481 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\log.c"
  6482 ;; Parameters:    Size  Location     Type
  6483 ;;  x               3   55[BANK0 ] unsigned int 
  6484 ;; Auto vars:     Size  Location     Type
  6485 ;;  exponent        2   59[BANK0 ] int 
  6486 ;; Return value:  Size  Location     Type
  6487 ;;                  3   55[BANK0 ] int 
  6488 ;; Registers used:
  6489 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6490 ;; Tracked objects:
  6491 ;;		On entry : 0/0
  6492 ;;		On exit  : 0/0
  6493 ;;		Unchanged: 0/0
  6494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6495 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6496 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6497 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6498 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6499 ;;Total ram usage:        6 bytes
  6500 ;; Hardware stack levels used:    1
  6501 ;; Hardware stack levels required when called:    3
  6502 ;; This function calls:
  6503 ;;		___awtoft
  6504 ;;		___ftadd
  6505 ;;		___ftge
  6506 ;;		___ftmul
  6507 ;;		_eval_poly
  6508 ;;		_frexp
  6509 ;; This function is called by:
  6510 ;;		_main
  6511 ;; This function uses a non-reentrant model
  6512 ;;
  6513                           
  6514                           
  6515                           ;psect for function _log
  6516  0E9F                     _log:	
  6517                           
  6518                           ;incstack = 0
  6519                           ; Regs used in _log: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6520  0E9F  0020               	movlb	0	; select bank0
  6521  0EA0  0857               	movf	log@x,w
  6522  0EA1  00F0               	movwf	___ftge@ff1
  6523  0EA2  0858               	movf	log@x+1,w
  6524  0EA3  00F1               	movwf	___ftge@ff1+1
  6525  0EA4  0859               	movf	log@x+2,w
  6526  0EA5  00F2               	movwf	___ftge@ff1+2
  6527  0EA6  3000               	movlw	0
  6528  0EA7  00F3               	movwf	___ftge@ff2
  6529  0EA8  3000               	movlw	0
  6530  0EA9  00F4               	movwf	___ftge@ff2+1
  6531  0EAA  3000               	movlw	0
  6532  0EAB  00F5               	movwf	___ftge@ff2+2
  6533  0EAC  318A  22EA  318E   	fcall	___ftge
  6534  0EAF  1803               	btfsc	3,0
  6535  0EB0  2EBD               	goto	l2417
  6536  0EB1  3021               	movlw	33
  6537  0EB2  0020               	movlb	0	; select bank0
  6538  0EB3  00E5               	movwf	_errno
  6539  0EB4  3000               	movlw	0
  6540  0EB5  00E6               	movwf	_errno+1
  6541  0EB6  3000               	movlw	0
  6542  0EB7  00D7               	movwf	?_log
  6543  0EB8  3000               	movlw	0
  6544  0EB9  00D8               	movwf	?_log+1
  6545  0EBA  3000               	movlw	0
  6546  0EBB  00D9               	movwf	?_log+2
  6547  0EBC  0008               	return
  6548  0EBD                     l2417:	
  6549  0EBD  0020               	movlb	0	; select bank0
  6550  0EBE  0859               	movf	log@x+2,w
  6551  0EBF  0458               	iorwf	log@x+1,w
  6552  0EC0  0457               	iorwf	log@x,w
  6553  0EC1  1D03               	skipz
  6554  0EC2  2ECE               	goto	l2423
  6555  0EC3  3022               	movlw	34
  6556  0EC4  00E5               	movwf	_errno
  6557  0EC5  3000               	movlw	0
  6558  0EC6  00E6               	movwf	_errno+1
  6559  0EC7  3000               	movlw	0
  6560  0EC8  00D7               	movwf	?_log
  6561  0EC9  3000               	movlw	0
  6562  0ECA  00D8               	movwf	?_log+1
  6563  0ECB  3000               	movlw	0
  6564  0ECC  00D9               	movwf	?_log+2
  6565  0ECD  0008               	return
  6566  0ECE                     l2423:	
  6567  0ECE  3000               	movlw	0
  6568  0ECF  00C0               	movwf	___ftadd@f1
  6569  0ED0  3080               	movlw	128
  6570  0ED1  00C1               	movwf	___ftadd@f1+1
  6571  0ED2  30BF               	movlw	191
  6572  0ED3  00C2               	movwf	___ftadd@f1+2
  6573  0ED4  3000               	movlw	0
  6574  0ED5  00A0               	movwf	___ftmul@f1
  6575  0ED6  3000               	movlw	0
  6576  0ED7  00A1               	movwf	___ftmul@f1+1
  6577  0ED8  3040               	movlw	64
  6578  0ED9  00A2               	movwf	___ftmul@f1+2
  6579  0EDA  305B               	movlw	(low (log@exponent| 0))& (0+255)
  6580  0EDB  00DA               	movwf	??_log
  6581  0EDC  085A               	movf	??_log,w
  6582  0EDD  00F3               	movwf	frexp@eptr
  6583  0EDE  0857               	movf	log@x,w
  6584  0EDF  00F0               	movwf	frexp@value
  6585  0EE0  0858               	movf	log@x+1,w
  6586  0EE1  00F1               	movwf	frexp@value+1
  6587  0EE2  0859               	movf	log@x+2,w
  6588  0EE3  00F2               	movwf	frexp@value+2
  6589  0EE4  318B  2325  318E   	fcall	_frexp
  6590  0EE7  0870               	movf	?_frexp,w
  6591  0EE8  0020               	movlb	0	; select bank0
  6592  0EE9  00A3               	movwf	___ftmul@f2
  6593  0EEA  0871               	movf	?_frexp+1,w
  6594  0EEB  00A4               	movwf	___ftmul@f2+1
  6595  0EEC  0872               	movf	?_frexp+2,w
  6596  0EED  00A5               	movwf	___ftmul@f2+2
  6597  0EEE  318F  274C  318E   	fcall	___ftmul
  6598  0EF1  0020               	movlb	0	; select bank0
  6599  0EF2  0820               	movf	?___ftmul,w
  6600  0EF3  00C3               	movwf	___ftadd@f2
  6601  0EF4  0821               	movf	?___ftmul+1,w
  6602  0EF5  00C4               	movwf	___ftadd@f2+1
  6603  0EF6  0822               	movf	?___ftmul+2,w
  6604  0EF7  00C5               	movwf	___ftadd@f2+2
  6605  0EF8  3180  20DD  318E   	fcall	___ftadd
  6606  0EFB  0020               	movlb	0	; select bank0
  6607  0EFC  0840               	movf	?___ftadd,w
  6608  0EFD  00D7               	movwf	log@x
  6609  0EFE  0841               	movf	?___ftadd+1,w
  6610  0EFF  00D8               	movwf	log@x+1
  6611  0F00  0842               	movf	?___ftadd+2,w
  6612  0F01  00D9               	movwf	log@x+2
  6613  0F02  30FF               	movlw	255
  6614  0F03  07DB               	addwf	log@exponent,f
  6615  0F04  30FF               	movlw	255
  6616  0F05  3DDC               	addwfc	log@exponent+1,f
  6617  0F06  0857               	movf	log@x,w
  6618  0F07  00CD               	movwf	eval_poly@x
  6619  0F08  0858               	movf	log@x+1,w
  6620  0F09  00CE               	movwf	eval_poly@x+1
  6621  0F0A  0859               	movf	log@x+2,w
  6622  0F0B  00CF               	movwf	eval_poly@x+2
  6623  0F0C  3000               	movlw	low (log@coeff| (0+32768))
  6624  0F0D  00D0               	movwf	eval_poly@d
  6625  0F0E  3090               	movlw	high (log@coeff| (0+32768))
  6626  0F0F  00D1               	movwf	eval_poly@d+1
  6627  0F10  3008               	movlw	8
  6628  0F11  00D2               	movwf	eval_poly@n
  6629  0F12  3000               	movlw	0
  6630  0F13  00D3               	movwf	eval_poly@n+1
  6631  0F14  318C  2435  318E   	fcall	_eval_poly
  6632  0F17  0020               	movlb	0	; select bank0
  6633  0F18  084D               	movf	?_eval_poly,w
  6634  0F19  00D7               	movwf	log@x
  6635  0F1A  084E               	movf	?_eval_poly+1,w
  6636  0F1B  00D8               	movwf	log@x+1
  6637  0F1C  084F               	movf	?_eval_poly+2,w
  6638  0F1D  00D9               	movwf	log@x+2
  6639  0F1E  0857               	movf	log@x,w
  6640  0F1F  00C0               	movwf	___ftadd@f1
  6641  0F20  0858               	movf	log@x+1,w
  6642  0F21  00C1               	movwf	___ftadd@f1+1
  6643  0F22  0859               	movf	log@x+2,w
  6644  0F23  00C2               	movwf	___ftadd@f1+2
  6645  0F24  3072               	movlw	114
  6646  0F25  00A0               	movwf	___ftmul@f1
  6647  0F26  3031               	movlw	49
  6648  0F27  00A1               	movwf	___ftmul@f1+1
  6649  0F28  303F               	movlw	63
  6650  0F29  00A2               	movwf	___ftmul@f1+2
  6651  0F2A  085C               	movf	log@exponent+1,w
  6652  0F2B  00F9               	movwf	___awtoft@c+1
  6653  0F2C  085B               	movf	log@exponent,w
  6654  0F2D  00F8               	movwf	___awtoft@c
  6655  0F2E  3189  21EC  318E   	fcall	___awtoft
  6656  0F31  0878               	movf	?___awtoft,w
  6657  0F32  0020               	movlb	0	; select bank0
  6658  0F33  00A3               	movwf	___ftmul@f2
  6659  0F34  0879               	movf	?___awtoft+1,w
  6660  0F35  00A4               	movwf	___ftmul@f2+1
  6661  0F36  087A               	movf	?___awtoft+2,w
  6662  0F37  00A5               	movwf	___ftmul@f2+2
  6663  0F38  318F  274C  318E   	fcall	___ftmul
  6664  0F3B  0020               	movlb	0	; select bank0
  6665  0F3C  0820               	movf	?___ftmul,w
  6666  0F3D  00C3               	movwf	___ftadd@f2
  6667  0F3E  0821               	movf	?___ftmul+1,w
  6668  0F3F  00C4               	movwf	___ftadd@f2+1
  6669  0F40  0822               	movf	?___ftmul+2,w
  6670  0F41  00C5               	movwf	___ftadd@f2+2
  6671  0F42  3180  20DD         	fcall	___ftadd
  6672  0F44  0020               	movlb	0	; select bank0
  6673  0F45  0840               	movf	?___ftadd,w
  6674  0F46  00D7               	movwf	?_log
  6675  0F47  0841               	movf	?___ftadd+1,w
  6676  0F48  00D8               	movwf	?_log+1
  6677  0F49  0842               	movf	?___ftadd+2,w
  6678  0F4A  00D9               	movwf	?_log+2
  6679  0F4B  0008               	return
  6680  0F4C                     __end_of_log:	
  6681                           
  6682                           	psect	text6
  6683  0B25                     __ptext6:	
  6684 ;; *************** function _frexp *****************
  6685 ;; Defined at:
  6686 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\frexp.c"
  6687 ;; Parameters:    Size  Location     Type
  6688 ;;  value           3    0[COMMON] int 
  6689 ;;  eptr            1    3[COMMON] PTR int 
  6690 ;;		 -> log@exponent(2), 
  6691 ;; Auto vars:     Size  Location     Type
  6692 ;;		None
  6693 ;; Return value:  Size  Location     Type
  6694 ;;                  3    0[COMMON] PTR int 
  6695 ;; Registers used:
  6696 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6697 ;; Tracked objects:
  6698 ;;		On entry : 0/0
  6699 ;;		On exit  : 0/0
  6700 ;;		Unchanged: 0/0
  6701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6702 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6704 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6705 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6706 ;;Total ram usage:        6 bytes
  6707 ;; Hardware stack levels used:    1
  6708 ;; This function calls:
  6709 ;;		Nothing
  6710 ;; This function is called by:
  6711 ;;		_log
  6712 ;; This function uses a non-reentrant model
  6713 ;;
  6714                           
  6715                           
  6716                           ;psect for function _frexp
  6717  0B25                     _frexp:	
  6718                           
  6719                           ;incstack = 0
  6720                           ; Regs used in _frexp: [wreg+fsr1l+fsr1h+status,2+status,0]
  6721  0B25  0872               	movf	frexp@value+2,w
  6722  0B26  0471               	iorwf	frexp@value+1,w
  6723  0B27  0470               	iorwf	frexp@value,w
  6724  0B28  1D03               	skipz
  6725  0B29  2B37               	goto	l2265
  6726  0B2A  0873               	movf	frexp@eptr,w
  6727  0B2B  0086               	movwf	6
  6728  0B2C  0187               	clrf	7
  6729  0B2D  3000               	movlw	0
  6730  0B2E  3FC0               	movwi [0]fsr1
  6731  0B2F  3FC1               	movwi [1]fsr1
  6732  0B30  3000               	movlw	0
  6733  0B31  00F0               	movwf	?_frexp
  6734  0B32  3000               	movlw	0
  6735  0B33  00F1               	movwf	?_frexp+1
  6736  0B34  3000               	movlw	0
  6737  0B35  00F2               	movwf	?_frexp+2
  6738  0B36  0008               	return
  6739  0B37                     l2265:	
  6740  0B37  0872               	movf	frexp@value+2,w
  6741  0B38  397F               	andlw	127
  6742  0B39  00F4               	movwf	??_frexp
  6743  0B3A  01F5               	clrf	??_frexp+1
  6744  0B3B  35F4               	lslf	??_frexp,f
  6745  0B3C  0DF5               	rlf	??_frexp+1,f
  6746  0B3D  0873               	movf	frexp@eptr,w
  6747  0B3E  0086               	movwf	6
  6748  0B3F  0187               	clrf	7
  6749  0B40  0874               	movf	??_frexp,w
  6750  0B41  3FC0               	movwi [0]fsr1
  6751  0B42  0875               	movf	??_frexp+1,w
  6752  0B43  3FC1               	movwi [1]fsr1
  6753  0B44  0D71               	rlf	frexp@value+1,w
  6754  0B45  0D71               	rlf	frexp@value+1,w
  6755  0B46  3901               	andlw	1
  6756  0B47  00F4               	movwf	??_frexp
  6757  0B48  01F5               	clrf	??_frexp+1
  6758  0B49  0873               	movf	frexp@eptr,w
  6759  0B4A  0086               	movwf	6
  6760  0B4B  0187               	clrf	7
  6761  0B4C  0874               	movf	??_frexp,w
  6762  0B4D  0481               	iorwf	1,f
  6763  0B4E  3141               	addfsr 1,1
  6764  0B4F  0875               	movf	??_frexp+1,w
  6765  0B50  0481               	iorwf	1,f
  6766  0B51  0873               	movf	frexp@eptr,w
  6767  0B52  0086               	movwf	6
  6768  0B53  0187               	clrf	7
  6769  0B54  3082               	movlw	130
  6770  0B55  0781               	addwf	1,f
  6771  0B56  3141               	addfsr 1,1
  6772  0B57  30FF               	movlw	255
  6773  0B58  3D81               	addwfc	1,f
  6774  0B59  317F               	addfsr 1,-1
  6775  0B5A  0872               	movf	frexp@value+2,w
  6776  0B5B  3980               	andlw	-128
  6777  0B5C  383F               	iorlw	63
  6778  0B5D  00F2               	movwf	frexp@value+2
  6779  0B5E  13F1               	bcf	frexp@value+1,7
  6780  0B5F  0008               	return
  6781  0B60                     __end_of_frexp:	
  6782                           
  6783                           	psect	text7
  6784  0C35                     __ptext7:	
  6785 ;; *************** function _eval_poly *****************
  6786 ;; Defined at:
  6787 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\evalpoly.c"
  6788 ;; Parameters:    Size  Location     Type
  6789 ;;  x               3   45[BANK0 ] PTR int 
  6790 ;;  d               2   48[BANK0 ] PTR const 
  6791 ;;		 -> log@coeff(27), 
  6792 ;;  n               2   50[BANK0 ] int 
  6793 ;; Auto vars:     Size  Location     Type
  6794 ;;  res             3   52[BANK0 ] int 
  6795 ;; Return value:  Size  Location     Type
  6796 ;;                  3   45[BANK0 ] int 
  6797 ;; Registers used:
  6798 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6799 ;; Tracked objects:
  6800 ;;		On entry : 0/0
  6801 ;;		On exit  : 0/0
  6802 ;;		Unchanged: 0/0
  6803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6804 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6805 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6807 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6808 ;;Total ram usage:       10 bytes
  6809 ;; Hardware stack levels used:    1
  6810 ;; Hardware stack levels required when called:    2
  6811 ;; This function calls:
  6812 ;;		___ftadd
  6813 ;;		___ftmul
  6814 ;;		___wmul
  6815 ;; This function is called by:
  6816 ;;		_log
  6817 ;; This function uses a non-reentrant model
  6818 ;;
  6819                           
  6820                           
  6821                           ;psect for function _eval_poly
  6822  0C35                     _eval_poly:	
  6823                           
  6824                           ;incstack = 0
  6825                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6826  0C35  0020               	movlb	0	; select bank0
  6827  0C36  0853               	movf	eval_poly@n+1,w
  6828  0C37  00F1               	movwf	___wmul@multiplier+1
  6829  0C38  0852               	movf	eval_poly@n,w
  6830  0C39  00F0               	movwf	___wmul@multiplier
  6831  0C3A  3003               	movlw	3
  6832  0C3B  00F2               	movwf	___wmul@multiplicand
  6833  0C3C  3000               	movlw	0
  6834  0C3D  00F3               	movwf	___wmul@multiplicand+1
  6835  0C3E  3189  21B3  318C   	fcall	___wmul
  6836  0C41  0020               	movlb	0	; select bank0
  6837  0C42  0850               	movf	eval_poly@d,w
  6838  0C43  0770               	addwf	?___wmul,w
  6839  0C44  0084               	movwf	4
  6840  0C45  0851               	movf	eval_poly@d+1,w
  6841  0C46  3D71               	addwfc	?___wmul+1,w
  6842  0C47  0085               	movwf	5
  6843  0C48  3F00               	moviw [0]fsr0
  6844  0C49  00D4               	movwf	eval_poly@res
  6845  0C4A  3F01               	moviw [1]fsr0
  6846  0C4B  00D5               	movwf	eval_poly@res+1
  6847  0C4C  3F02               	moviw [2]fsr0
  6848  0C4D                     L1:	
  6849  0C4D  00D6               	movwf	eval_poly@res+2
  6850  0C4E  0852               	movf	eval_poly@n,w
  6851  0C4F  0453               	iorwf	eval_poly@n+1,w
  6852  0C50  1903               	btfsc	3,2
  6853  0C51  2C8E               	goto	l2283
  6854  0C52  30FF               	movlw	255
  6855  0C53  07D2               	addwf	eval_poly@n,f
  6856  0C54  30FF               	movlw	255
  6857  0C55  3DD3               	addwfc	eval_poly@n+1,f
  6858  0C56  0853               	movf	eval_poly@n+1,w
  6859  0C57  00F1               	movwf	___wmul@multiplier+1
  6860  0C58  0852               	movf	eval_poly@n,w
  6861  0C59  00F0               	movwf	___wmul@multiplier
  6862  0C5A  3003               	movlw	3
  6863  0C5B  00F2               	movwf	___wmul@multiplicand
  6864  0C5C  3000               	movlw	0
  6865  0C5D  00F3               	movwf	___wmul@multiplicand+1
  6866  0C5E  3189  21B3  318C   	fcall	___wmul
  6867  0C61  0020               	movlb	0	; select bank0
  6868  0C62  0850               	movf	eval_poly@d,w
  6869  0C63  0770               	addwf	?___wmul,w
  6870  0C64  0084               	movwf	4
  6871  0C65  0851               	movf	eval_poly@d+1,w
  6872  0C66  3D71               	addwfc	?___wmul+1,w
  6873  0C67  0085               	movwf	5
  6874  0C68  3F00               	moviw [0]fsr0
  6875  0C69  00C0               	movwf	___ftadd@f1
  6876  0C6A  3F01               	moviw [1]fsr0
  6877  0C6B  00C1               	movwf	___ftadd@f1+1
  6878  0C6C  3F02               	moviw [2]fsr0
  6879  0C6D  00C2               	movwf	___ftadd@f1+2
  6880  0C6E  0854               	movf	eval_poly@res,w
  6881  0C6F  00A0               	movwf	___ftmul@f1
  6882  0C70  0855               	movf	eval_poly@res+1,w
  6883  0C71  00A1               	movwf	___ftmul@f1+1
  6884  0C72  0856               	movf	eval_poly@res+2,w
  6885  0C73  00A2               	movwf	___ftmul@f1+2
  6886  0C74  084D               	movf	eval_poly@x,w
  6887  0C75  00A3               	movwf	___ftmul@f2
  6888  0C76  084E               	movf	eval_poly@x+1,w
  6889  0C77  00A4               	movwf	___ftmul@f2+1
  6890  0C78  084F               	movf	eval_poly@x+2,w
  6891  0C79  00A5               	movwf	___ftmul@f2+2
  6892  0C7A  318F  274C  318C   	fcall	___ftmul
  6893  0C7D  0020               	movlb	0	; select bank0
  6894  0C7E  0820               	movf	?___ftmul,w
  6895  0C7F  00C3               	movwf	___ftadd@f2
  6896  0C80  0821               	movf	?___ftmul+1,w
  6897  0C81  00C4               	movwf	___ftadd@f2+1
  6898  0C82  0822               	movf	?___ftmul+2,w
  6899  0C83  00C5               	movwf	___ftadd@f2+2
  6900  0C84  3180  20DD  318C   	fcall	___ftadd
  6901  0C87  0020               	movlb	0	; select bank0
  6902  0C88  0840               	movf	?___ftadd,w
  6903  0C89  00D4               	movwf	eval_poly@res
  6904  0C8A  0841               	movf	?___ftadd+1,w
  6905  0C8B  00D5               	movwf	eval_poly@res+1
  6906  0C8C  0842               	movf	?___ftadd+2,w
  6907  0C8D  2C4D               	goto	L1
  6908  0C8E                     l2283:	
  6909  0C8E  0854               	movf	eval_poly@res,w
  6910  0C8F  00CD               	movwf	?_eval_poly
  6911  0C90  0855               	movf	eval_poly@res+1,w
  6912  0C91  00CE               	movwf	?_eval_poly+1
  6913  0C92  0856               	movf	eval_poly@res+2,w
  6914  0C93  00CF               	movwf	?_eval_poly+2
  6915  0C94  0008               	return
  6916  0C95                     __end_of_eval_poly:	
  6917                           
  6918                           	psect	text8
  6919  09B3                     __ptext8:	
  6920 ;; *************** function ___wmul *****************
  6921 ;; Defined at:
  6922 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
  6923 ;; Parameters:    Size  Location     Type
  6924 ;;  multiplier      2    0[COMMON] unsigned int 
  6925 ;;  multiplicand    2    2[COMMON] unsigned int 
  6926 ;; Auto vars:     Size  Location     Type
  6927 ;;  product         2    4[COMMON] unsigned int 
  6928 ;; Return value:  Size  Location     Type
  6929 ;;                  2    0[COMMON] unsigned int 
  6930 ;; Registers used:
  6931 ;;		wreg, status,2, status,0
  6932 ;; Tracked objects:
  6933 ;;		On entry : 0/0
  6934 ;;		On exit  : 0/0
  6935 ;;		Unchanged: 0/0
  6936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6937 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6938 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6940 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6941 ;;Total ram usage:        6 bytes
  6942 ;; Hardware stack levels used:    1
  6943 ;; This function calls:
  6944 ;;		Nothing
  6945 ;; This function is called by:
  6946 ;;		_eval_poly
  6947 ;; This function uses a non-reentrant model
  6948 ;;
  6949                           
  6950                           
  6951                           ;psect for function ___wmul
  6952  09B3                     ___wmul:	
  6953                           
  6954                           ;incstack = 0
  6955                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6956  09B3  01F4               	clrf	___wmul@product
  6957  09B4  01F5               	clrf	___wmul@product+1
  6958  09B5                     l1805:	
  6959  09B5  1C70               	btfss	___wmul@multiplier,0
  6960  09B6  29BB               	goto	l367
  6961  09B7  0872               	movf	___wmul@multiplicand,w
  6962  09B8  07F4               	addwf	___wmul@product,f
  6963  09B9  0873               	movf	___wmul@multiplicand+1,w
  6964  09BA  3DF5               	addwfc	___wmul@product+1,f
  6965  09BB                     l367:	
  6966  09BB  3001               	movlw	1
  6967  09BC                     u1565:	
  6968  09BC  35F2               	lslf	___wmul@multiplicand,f
  6969  09BD  0DF3               	rlf	___wmul@multiplicand+1,f
  6970  09BE  0B89               	decfsz	9,f
  6971  09BF  29BC               	goto	u1565
  6972  09C0  3001               	movlw	1
  6973  09C1                     u1575:	
  6974  09C1  36F1               	lsrf	___wmul@multiplier+1,f
  6975  09C2  0CF0               	rrf	___wmul@multiplier,f
  6976  09C3  0B89               	decfsz	9,f
  6977  09C4  29C1               	goto	u1575
  6978  09C5  0870               	movf	___wmul@multiplier,w
  6979  09C6  0471               	iorwf	___wmul@multiplier+1,w
  6980  09C7  1D03               	btfss	3,2
  6981  09C8  29B5               	goto	l1805
  6982  09C9  0875               	movf	___wmul@product+1,w
  6983  09CA  00F1               	movwf	?___wmul+1
  6984  09CB  0874               	movf	___wmul@product,w
  6985  09CC  00F0               	movwf	?___wmul
  6986  09CD  0008               	return
  6987  09CE                     __end_of___wmul:	
  6988                           
  6989                           	psect	text9
  6990  0F4C                     __ptext9:	
  6991 ;; *************** function ___ftmul *****************
  6992 ;; Defined at:
  6993 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftmul.c"
  6994 ;; Parameters:    Size  Location     Type
  6995 ;;  f1              3    0[BANK0 ] float 
  6996 ;;  f2              3    3[BANK0 ] float 
  6997 ;; Auto vars:     Size  Location     Type
  6998 ;;  f3_as_produc    3   11[BANK0 ] unsigned um
  6999 ;;  sign            1   15[BANK0 ] unsigned char 
  7000 ;;  cntr            1   14[BANK0 ] unsigned char 
  7001 ;;  exp             1   10[BANK0 ] unsigned char 
  7002 ;; Return value:  Size  Location     Type
  7003 ;;                  3    0[BANK0 ] float 
  7004 ;; Registers used:
  7005 ;;		wreg, status,2, status,0, pclath, cstack
  7006 ;; Tracked objects:
  7007 ;;		On entry : 0/0
  7008 ;;		On exit  : 0/0
  7009 ;;		Unchanged: 0/0
  7010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7011 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7012 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7013 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7014 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7015 ;;Total ram usage:       16 bytes
  7016 ;; Hardware stack levels used:    1
  7017 ;; Hardware stack levels required when called:    1
  7018 ;; This function calls:
  7019 ;;		___ftpack
  7020 ;; This function is called by:
  7021 ;;		_main
  7022 ;;		_log
  7023 ;;		_eval_poly
  7024 ;; This function uses a non-reentrant model
  7025 ;;
  7026                           
  7027                           
  7028                           ;psect for function ___ftmul
  7029  0F4C                     ___ftmul:	
  7030                           
  7031                           ;incstack = 0
  7032                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  7033  0F4C  0020               	movlb	0	; select bank0
  7034  0F4D  0820               	movf	___ftmul@f1,w
  7035  0F4E  00A6               	movwf	??___ftmul
  7036  0F4F  0821               	movf	___ftmul@f1+1,w
  7037  0F50  00A7               	movwf	??___ftmul+1
  7038  0F51  0822               	movf	___ftmul@f1+2,w
  7039  0F52  00A8               	movwf	??___ftmul+2
  7040  0F53  1003               	clrc
  7041  0F54  0D27               	rlf	??___ftmul+1,w
  7042  0F55  0D28               	rlf	??___ftmul+2,w
  7043  0F56  00A9               	movwf	??___ftmul+3
  7044  0F57  0829               	movf	??___ftmul+3,w
  7045  0F58  00AA               	movwf	___ftmul@exp
  7046  0F59  082A               	movf	___ftmul@exp,w
  7047  0F5A  1D03               	btfss	3,2
  7048  0F5B  2F63               	goto	l1893
  7049  0F5C  3000               	movlw	0
  7050  0F5D  00A0               	movwf	?___ftmul
  7051  0F5E  3000               	movlw	0
  7052  0F5F  00A1               	movwf	?___ftmul+1
  7053  0F60  3000               	movlw	0
  7054  0F61  00A2               	movwf	?___ftmul+2
  7055  0F62  0008               	return
  7056  0F63                     l1893:	
  7057  0F63  0823               	movf	___ftmul@f2,w
  7058  0F64  00A6               	movwf	??___ftmul
  7059  0F65  0824               	movf	___ftmul@f2+1,w
  7060  0F66  00A7               	movwf	??___ftmul+1
  7061  0F67  0825               	movf	___ftmul@f2+2,w
  7062  0F68  00A8               	movwf	??___ftmul+2
  7063  0F69  1003               	clrc
  7064  0F6A  0D27               	rlf	??___ftmul+1,w
  7065  0F6B  0D28               	rlf	??___ftmul+2,w
  7066  0F6C  00A9               	movwf	??___ftmul+3
  7067  0F6D  0829               	movf	??___ftmul+3,w
  7068  0F6E  00AF               	movwf	___ftmul@sign
  7069  0F6F  082F               	movf	___ftmul@sign,w
  7070  0F70  1D03               	btfss	3,2
  7071  0F71  2F79               	goto	l1899
  7072  0F72  3000               	movlw	0
  7073  0F73  00A0               	movwf	?___ftmul
  7074  0F74  3000               	movlw	0
  7075  0F75  00A1               	movwf	?___ftmul+1
  7076  0F76  3000               	movlw	0
  7077  0F77  00A2               	movwf	?___ftmul+2
  7078  0F78  0008               	return
  7079  0F79                     l1899:	
  7080  0F79  082F               	movf	___ftmul@sign,w
  7081  0F7A  3E7B               	addlw	123
  7082  0F7B  00A6               	movwf	??___ftmul
  7083  0F7C  0826               	movf	??___ftmul,w
  7084  0F7D  07AA               	addwf	___ftmul@exp,f
  7085  0F7E  0820               	movf	___ftmul@f1,w
  7086  0F7F  00A6               	movwf	??___ftmul
  7087  0F80  0821               	movf	___ftmul@f1+1,w
  7088  0F81  00A7               	movwf	??___ftmul+1
  7089  0F82  0822               	movf	___ftmul@f1+2,w
  7090  0F83  00A8               	movwf	??___ftmul+2
  7091  0F84  3010               	movlw	16
  7092  0F85                     u1845:	
  7093  0F85  36A8               	lsrf	??___ftmul+2,f
  7094  0F86  0CA7               	rrf	??___ftmul+1,f
  7095  0F87  0CA6               	rrf	??___ftmul,f
  7096  0F88  0B89               	decfsz	9,f
  7097  0F89  2F85               	goto	u1845
  7098  0F8A  0826               	movf	??___ftmul,w
  7099  0F8B  00A9               	movwf	??___ftmul+3
  7100  0F8C  0829               	movf	??___ftmul+3,w
  7101  0F8D  00AF               	movwf	___ftmul@sign
  7102  0F8E  0823               	movf	___ftmul@f2,w
  7103  0F8F  00A6               	movwf	??___ftmul
  7104  0F90  0824               	movf	___ftmul@f2+1,w
  7105  0F91  00A7               	movwf	??___ftmul+1
  7106  0F92  0825               	movf	___ftmul@f2+2,w
  7107  0F93  00A8               	movwf	??___ftmul+2
  7108  0F94  3010               	movlw	16
  7109  0F95                     u1855:	
  7110  0F95  36A8               	lsrf	??___ftmul+2,f
  7111  0F96  0CA7               	rrf	??___ftmul+1,f
  7112  0F97  0CA6               	rrf	??___ftmul,f
  7113  0F98  0B89               	decfsz	9,f
  7114  0F99  2F95               	goto	u1855
  7115  0F9A  0826               	movf	??___ftmul,w
  7116  0F9B  00A9               	movwf	??___ftmul+3
  7117  0F9C  0829               	movf	??___ftmul+3,w
  7118  0F9D  06AF               	xorwf	___ftmul@sign,f
  7119  0F9E  3080               	movlw	128
  7120  0F9F  00A6               	movwf	??___ftmul
  7121  0FA0  0826               	movf	??___ftmul,w
  7122  0FA1  05AF               	andwf	___ftmul@sign,f
  7123  0FA2  17A1               	bsf	___ftmul@f1+1,7
  7124  0FA3  17A4               	bsf	___ftmul@f2+1,7
  7125  0FA4  30FF               	movlw	255
  7126  0FA5  05A3               	andwf	___ftmul@f2,f
  7127  0FA6  30FF               	movlw	255
  7128  0FA7  05A4               	andwf	___ftmul@f2+1,f
  7129  0FA8  3000               	movlw	0
  7130  0FA9  05A5               	andwf	___ftmul@f2+2,f
  7131  0FAA  3000               	movlw	0
  7132  0FAB  00AB               	movwf	___ftmul@f3_as_product
  7133  0FAC  3000               	movlw	0
  7134  0FAD  00AC               	movwf	___ftmul@f3_as_product+1
  7135  0FAE  3000               	movlw	0
  7136  0FAF  00AD               	movwf	___ftmul@f3_as_product+2
  7137  0FB0  3007               	movlw	7
  7138  0FB1  00A6               	movwf	??___ftmul
  7139  0FB2  0826               	movf	??___ftmul,w
  7140  0FB3  00AE               	movwf	___ftmul@cntr
  7141  0FB4                     l1911:	
  7142  0FB4  1C20               	btfss	___ftmul@f1,0
  7143  0FB5  2FBC               	goto	l1915
  7144  0FB6  0823               	movf	___ftmul@f2,w
  7145  0FB7  07AB               	addwf	___ftmul@f3_as_product,f
  7146  0FB8  0824               	movf	___ftmul@f2+1,w
  7147  0FB9  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  7148  0FBA  0825               	movf	___ftmul@f2+2,w
  7149  0FBB  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  7150  0FBC                     l1915:	
  7151  0FBC  3001               	movlw	1
  7152  0FBD                     u1875:	
  7153  0FBD  36A2               	lsrf	___ftmul@f1+2,f
  7154  0FBE  0CA1               	rrf	___ftmul@f1+1,f
  7155  0FBF  0CA0               	rrf	___ftmul@f1,f
  7156  0FC0  0B89               	decfsz	9,f
  7157  0FC1  2FBD               	goto	u1875
  7158  0FC2  3001               	movlw	1
  7159  0FC3                     u1885:	
  7160  0FC3  35A3               	lslf	___ftmul@f2,f
  7161  0FC4  0DA4               	rlf	___ftmul@f2+1,f
  7162  0FC5  0DA5               	rlf	___ftmul@f2+2,f
  7163  0FC6  0B89               	decfsz	9,f
  7164  0FC7  2FC3               	goto	u1885
  7165  0FC8  3001               	movlw	1
  7166  0FC9  02AE               	subwf	___ftmul@cntr,f
  7167  0FCA  1D03               	btfss	3,2
  7168  0FCB  2FB4               	goto	l1911
  7169  0FCC  3009               	movlw	9
  7170  0FCD  00A6               	movwf	??___ftmul
  7171  0FCE  0826               	movf	??___ftmul,w
  7172  0FCF  00AE               	movwf	___ftmul@cntr
  7173  0FD0                     l1923:	
  7174  0FD0  1C20               	btfss	___ftmul@f1,0
  7175  0FD1  2FD8               	goto	l1927
  7176  0FD2  0823               	movf	___ftmul@f2,w
  7177  0FD3  07AB               	addwf	___ftmul@f3_as_product,f
  7178  0FD4  0824               	movf	___ftmul@f2+1,w
  7179  0FD5  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  7180  0FD6  0825               	movf	___ftmul@f2+2,w
  7181  0FD7  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  7182  0FD8                     l1927:	
  7183  0FD8  3001               	movlw	1
  7184  0FD9                     u1915:	
  7185  0FD9  36A2               	lsrf	___ftmul@f1+2,f
  7186  0FDA  0CA1               	rrf	___ftmul@f1+1,f
  7187  0FDB  0CA0               	rrf	___ftmul@f1,f
  7188  0FDC  0B89               	decfsz	9,f
  7189  0FDD  2FD9               	goto	u1915
  7190  0FDE  3001               	movlw	1
  7191  0FDF                     u1925:	
  7192  0FDF  36AD               	lsrf	___ftmul@f3_as_product+2,f
  7193  0FE0  0CAC               	rrf	___ftmul@f3_as_product+1,f
  7194  0FE1  0CAB               	rrf	___ftmul@f3_as_product,f
  7195  0FE2  0B89               	decfsz	9,f
  7196  0FE3  2FDF               	goto	u1925
  7197  0FE4  3001               	movlw	1
  7198  0FE5  02AE               	subwf	___ftmul@cntr,f
  7199  0FE6  1D03               	btfss	3,2
  7200  0FE7  2FD0               	goto	l1923
  7201  0FE8  082B               	movf	___ftmul@f3_as_product,w
  7202  0FE9  00F0               	movwf	___ftpack@arg
  7203  0FEA  082C               	movf	___ftmul@f3_as_product+1,w
  7204  0FEB  00F1               	movwf	___ftpack@arg+1
  7205  0FEC  082D               	movf	___ftmul@f3_as_product+2,w
  7206  0FED  00F2               	movwf	___ftpack@arg+2
  7207  0FEE  082A               	movf	___ftmul@exp,w
  7208  0FEF  00A6               	movwf	??___ftmul
  7209  0FF0  0826               	movf	??___ftmul,w
  7210  0FF1  00F3               	movwf	___ftpack@exp
  7211  0FF2  082F               	movf	___ftmul@sign,w
  7212  0FF3  00A7               	movwf	??___ftmul+1
  7213  0FF4  0827               	movf	??___ftmul+1,w
  7214  0FF5  00F4               	movwf	___ftpack@sign
  7215  0FF6  318C  2495         	fcall	___ftpack
  7216  0FF8  0870               	movf	?___ftpack,w
  7217  0FF9  0020               	movlb	0	; select bank0
  7218  0FFA  00A0               	movwf	?___ftmul
  7219  0FFB  0871               	movf	?___ftpack+1,w
  7220  0FFC  00A1               	movwf	?___ftmul+1
  7221  0FFD  0872               	movf	?___ftpack+2,w
  7222  0FFE  00A2               	movwf	?___ftmul+2
  7223  0FFF  0008               	return
  7224  1000                     __end_of___ftmul:	
  7225                           
  7226                           	psect	text10
  7227  0AEA                     __ptext10:	
  7228 ;; *************** function ___ftge *****************
  7229 ;; Defined at:
  7230 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftge.c"
  7231 ;; Parameters:    Size  Location     Type
  7232 ;;  ff1             3    0[COMMON] float 
  7233 ;;  ff2             3    3[COMMON] float 
  7234 ;; Auto vars:     Size  Location     Type
  7235 ;;		None
  7236 ;; Return value:  Size  Location     Type
  7237 ;;		None               void
  7238 ;; Registers used:
  7239 ;;		wreg, status,2, status,0
  7240 ;; Tracked objects:
  7241 ;;		On entry : 0/0
  7242 ;;		On exit  : 0/0
  7243 ;;		Unchanged: 0/0
  7244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7245 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7247 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7248 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7249 ;;Total ram usage:        9 bytes
  7250 ;; Hardware stack levels used:    1
  7251 ;; This function calls:
  7252 ;;		Nothing
  7253 ;; This function is called by:
  7254 ;;		_log
  7255 ;; This function uses a non-reentrant model
  7256 ;;
  7257                           
  7258                           
  7259                           ;psect for function ___ftge
  7260  0AEA                     ___ftge:	
  7261                           
  7262                           ;incstack = 0
  7263                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  7264  0AEA  1FF2               	btfss	___ftge@ff1+2,7
  7265  0AEB  2B00               	goto	l2241
  7266  0AEC  0970               	comf	___ftge@ff1,w
  7267  0AED  00F6               	movwf	??___ftge
  7268  0AEE  0971               	comf	___ftge@ff1+1,w
  7269  0AEF  00F7               	movwf	??___ftge+1
  7270  0AF0  0972               	comf	___ftge@ff1+2,w
  7271  0AF1  00F8               	movwf	??___ftge+2
  7272  0AF2  0AF6               	incf	??___ftge,f
  7273  0AF3  1903               	skipnz
  7274  0AF4  0AF7               	incf	??___ftge+1,f
  7275  0AF5  1903               	skipnz
  7276  0AF6  0AF8               	incf	??___ftge+2,f
  7277  0AF7  3000               	movlw	0
  7278  0AF8  0776               	addwf	??___ftge,w
  7279  0AF9  00F0               	movwf	___ftge@ff1
  7280  0AFA  3000               	movlw	0
  7281  0AFB  3D77               	addwfc	??___ftge+1,w
  7282  0AFC  00F1               	movwf	___ftge@ff1+1
  7283  0AFD  3080               	movlw	128
  7284  0AFE  3D78               	addwfc	??___ftge+2,w
  7285  0AFF  00F2               	movwf	___ftge@ff1+2
  7286  0B00                     l2241:	
  7287  0B00  1FF5               	btfss	___ftge@ff2+2,7
  7288  0B01  2B16               	goto	l2245
  7289  0B02  0973               	comf	___ftge@ff2,w
  7290  0B03  00F6               	movwf	??___ftge
  7291  0B04  0974               	comf	___ftge@ff2+1,w
  7292  0B05  00F7               	movwf	??___ftge+1
  7293  0B06  0975               	comf	___ftge@ff2+2,w
  7294  0B07  00F8               	movwf	??___ftge+2
  7295  0B08  0AF6               	incf	??___ftge,f
  7296  0B09  1903               	skipnz
  7297  0B0A  0AF7               	incf	??___ftge+1,f
  7298  0B0B  1903               	skipnz
  7299  0B0C  0AF8               	incf	??___ftge+2,f
  7300  0B0D  3000               	movlw	0
  7301  0B0E  0776               	addwf	??___ftge,w
  7302  0B0F  00F3               	movwf	___ftge@ff2
  7303  0B10  3000               	movlw	0
  7304  0B11  3D77               	addwfc	??___ftge+1,w
  7305  0B12  00F4               	movwf	___ftge@ff2+1
  7306  0B13  3080               	movlw	128
  7307  0B14  3D78               	addwfc	??___ftge+2,w
  7308  0B15  00F5               	movwf	___ftge@ff2+2
  7309  0B16                     l2245:	
  7310  0B16  3080               	movlw	128
  7311  0B17  06F2               	xorwf	___ftge@ff1+2,f
  7312  0B18  3080               	movlw	128
  7313  0B19  06F5               	xorwf	___ftge@ff2+2,f
  7314  0B1A  0875               	movf	___ftge@ff2+2,w
  7315  0B1B  0272               	subwf	___ftge@ff1+2,w
  7316  0B1C  1D03               	skipz
  7317  0B1D  0008               	return
  7318  0B1E  0874               	movf	___ftge@ff2+1,w
  7319  0B1F  0271               	subwf	___ftge@ff1+1,w
  7320  0B20  1D03               	skipz
  7321  0B21  0008               	return
  7322  0B22  0873               	movf	___ftge@ff2,w
  7323  0B23  0270               	subwf	___ftge@ff1,w
  7324  0B24  0008               	return
  7325  0B25                     __end_of___ftge:	
  7326                           
  7327                           	psect	text11
  7328  09EC                     __ptext11:	
  7329 ;; *************** function ___awtoft *****************
  7330 ;; Defined at:
  7331 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awtoft.c"
  7332 ;; Parameters:    Size  Location     Type
  7333 ;;  c               2    8[COMMON] int 
  7334 ;; Auto vars:     Size  Location     Type
  7335 ;;  sign            1   13[COMMON] unsigned char 
  7336 ;; Return value:  Size  Location     Type
  7337 ;;                  3    8[COMMON] float 
  7338 ;; Registers used:
  7339 ;;		wreg, status,2, status,0, pclath, cstack
  7340 ;; Tracked objects:
  7341 ;;		On entry : 0/0
  7342 ;;		On exit  : 0/0
  7343 ;;		Unchanged: 0/0
  7344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7345 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7346 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7347 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7348 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7349 ;;Total ram usage:        6 bytes
  7350 ;; Hardware stack levels used:    1
  7351 ;; Hardware stack levels required when called:    1
  7352 ;; This function calls:
  7353 ;;		___ftpack
  7354 ;; This function is called by:
  7355 ;;		_log
  7356 ;; This function uses a non-reentrant model
  7357 ;;
  7358                           
  7359                           
  7360                           ;psect for function ___awtoft
  7361  09EC                     ___awtoft:	
  7362                           
  7363                           ;incstack = 0
  7364                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  7365  09EC  01FD               	clrf	___awtoft@sign
  7366  09ED  1FF9               	btfss	___awtoft@c+1,7
  7367  09EE  29F6               	goto	l2233
  7368  09EF  09F8               	comf	___awtoft@c,f
  7369  09F0  09F9               	comf	___awtoft@c+1,f
  7370  09F1  0AF8               	incf	___awtoft@c,f
  7371  09F2  1903               	skipnz
  7372  09F3  0AF9               	incf	___awtoft@c+1,f
  7373  09F4  01FD               	clrf	___awtoft@sign
  7374  09F5  0AFD               	incf	___awtoft@sign,f
  7375  09F6                     l2233:	
  7376  09F6  0878               	movf	___awtoft@c,w
  7377  09F7  00F0               	movwf	___ftpack@arg
  7378  09F8  0879               	movf	___awtoft@c+1,w
  7379  09F9  00F1               	movwf	___ftpack@arg+1
  7380  09FA  01F2               	clrf	___ftpack@arg+2
  7381  09FB  308E               	movlw	142
  7382  09FC  00FB               	movwf	??___awtoft
  7383  09FD  087B               	movf	??___awtoft,w
  7384  09FE  00F3               	movwf	___ftpack@exp
  7385  09FF  087D               	movf	___awtoft@sign,w
  7386  0A00  00FC               	movwf	??___awtoft+1
  7387  0A01  087C               	movf	??___awtoft+1,w
  7388  0A02  00F4               	movwf	___ftpack@sign
  7389  0A03  318C  2495         	fcall	___ftpack
  7390  0A05  0870               	movf	?___ftpack,w
  7391  0A06  00F8               	movwf	?___awtoft
  7392  0A07  0871               	movf	?___ftpack+1,w
  7393  0A08  00F9               	movwf	?___awtoft+1
  7394  0A09  0872               	movf	?___ftpack+2,w
  7395  0A0A  00FA               	movwf	?___awtoft+2
  7396  0A0B  0008               	return
  7397  0A0C                     __end_of___awtoft:	
  7398                           
  7399                           	psect	text12
  7400  0927                     __ptext12:	
  7401 ;; *************** function ___lwtoft *****************
  7402 ;; Defined at:
  7403 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwtoft.c"
  7404 ;; Parameters:    Size  Location     Type
  7405 ;;  c               2    8[COMMON] unsigned int 
  7406 ;; Auto vars:     Size  Location     Type
  7407 ;;		None
  7408 ;; Return value:  Size  Location     Type
  7409 ;;                  3    8[COMMON] float 
  7410 ;; Registers used:
  7411 ;;		wreg, status,2, status,0, pclath, cstack
  7412 ;; Tracked objects:
  7413 ;;		On entry : 0/0
  7414 ;;		On exit  : 0/0
  7415 ;;		Unchanged: 0/0
  7416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7417 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7419 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7420 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7421 ;;Total ram usage:        4 bytes
  7422 ;; Hardware stack levels used:    1
  7423 ;; Hardware stack levels required when called:    1
  7424 ;; This function calls:
  7425 ;;		___ftpack
  7426 ;; This function is called by:
  7427 ;;		_main
  7428 ;; This function uses a non-reentrant model
  7429 ;;
  7430                           
  7431                           
  7432                           ;psect for function ___lwtoft
  7433  0927                     ___lwtoft:	
  7434                           
  7435                           ;incstack = 0
  7436                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  7437  0927  0878               	movf	___lwtoft@c,w
  7438  0928  00F0               	movwf	___ftpack@arg
  7439  0929  0879               	movf	___lwtoft@c+1,w
  7440  092A  00F1               	movwf	___ftpack@arg+1
  7441  092B  01F2               	clrf	___ftpack@arg+2
  7442  092C  308E               	movlw	142
  7443  092D  00FB               	movwf	??___lwtoft
  7444  092E  087B               	movf	??___lwtoft,w
  7445  092F  00F3               	movwf	___ftpack@exp
  7446  0930  01F4               	clrf	___ftpack@sign
  7447  0931  318C  2495         	fcall	___ftpack
  7448  0933  0870               	movf	?___ftpack,w
  7449  0934  00F8               	movwf	?___lwtoft
  7450  0935  0871               	movf	?___ftpack+1,w
  7451  0936  00F9               	movwf	?___lwtoft+1
  7452  0937  0872               	movf	?___ftpack+2,w
  7453  0938  00FA               	movwf	?___lwtoft+2
  7454  0939  0008               	return
  7455  093A                     __end_of___lwtoft:	
  7456                           
  7457                           	psect	text13
  7458  09CE                     __ptext13:	
  7459 ;; *************** function ___ftsub *****************
  7460 ;; Defined at:
  7461 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftsub.c"
  7462 ;; Parameters:    Size  Location     Type
  7463 ;;  f2              3   45[BANK0 ] float 
  7464 ;;  f1              3   48[BANK0 ] float 
  7465 ;; Auto vars:     Size  Location     Type
  7466 ;;		None
  7467 ;; Return value:  Size  Location     Type
  7468 ;;                  3   45[BANK0 ] float 
  7469 ;; Registers used:
  7470 ;;		wreg, status,2, status,0, pclath, cstack
  7471 ;; Tracked objects:
  7472 ;;		On entry : 0/0
  7473 ;;		On exit  : 0/0
  7474 ;;		Unchanged: 0/0
  7475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7476 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7479 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7480 ;;Total ram usage:        6 bytes
  7481 ;; Hardware stack levels used:    1
  7482 ;; Hardware stack levels required when called:    2
  7483 ;; This function calls:
  7484 ;;		___ftadd
  7485 ;; This function is called by:
  7486 ;;		_main
  7487 ;; This function uses a non-reentrant model
  7488 ;;
  7489                           
  7490                           
  7491                           ;psect for function ___ftsub
  7492  09CE                     ___ftsub:	
  7493                           
  7494                           ;incstack = 0
  7495                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  7496  09CE  0020               	movlb	0	; select bank0
  7497  09CF  084F               	movf	___ftsub@f2+2,w
  7498  09D0  044E               	iorwf	___ftsub@f2+1,w
  7499  09D1  044D               	iorwf	___ftsub@f2,w
  7500  09D2  1903               	skipnz
  7501  09D3  29D6               	goto	l2479
  7502  09D4  3080               	movlw	128
  7503  09D5  06CF               	xorwf	___ftsub@f2+2,f
  7504  09D6                     l2479:	
  7505  09D6  0850               	movf	___ftsub@f1,w
  7506  09D7  00C0               	movwf	___ftadd@f1
  7507  09D8  0851               	movf	___ftsub@f1+1,w
  7508  09D9  00C1               	movwf	___ftadd@f1+1
  7509  09DA  0852               	movf	___ftsub@f1+2,w
  7510  09DB  00C2               	movwf	___ftadd@f1+2
  7511  09DC  084D               	movf	___ftsub@f2,w
  7512  09DD  00C3               	movwf	___ftadd@f2
  7513  09DE  084E               	movf	___ftsub@f2+1,w
  7514  09DF  00C4               	movwf	___ftadd@f2+1
  7515  09E0  084F               	movf	___ftsub@f2+2,w
  7516  09E1  00C5               	movwf	___ftadd@f2+2
  7517  09E2  3180  20DD         	fcall	___ftadd
  7518  09E4  0020               	movlb	0	; select bank0
  7519  09E5  0840               	movf	?___ftadd,w
  7520  09E6  00CD               	movwf	?___ftsub
  7521  09E7  0841               	movf	?___ftadd+1,w
  7522  09E8  00CE               	movwf	?___ftsub+1
  7523  09E9  0842               	movf	?___ftadd+2,w
  7524  09EA  00CF               	movwf	?___ftsub+2
  7525  09EB  0008               	return
  7526  09EC                     __end_of___ftsub:	
  7527                           
  7528                           	psect	text14
  7529  00DD                     __ptext14:	
  7530 ;; *************** function ___ftadd *****************
  7531 ;; Defined at:
  7532 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftadd.c"
  7533 ;; Parameters:    Size  Location     Type
  7534 ;;  f1              3   32[BANK0 ] float 
  7535 ;;  f2              3   35[BANK0 ] float 
  7536 ;; Auto vars:     Size  Location     Type
  7537 ;;  exp1            1   44[BANK0 ] unsigned char 
  7538 ;;  exp2            1   43[BANK0 ] unsigned char 
  7539 ;;  sign            1   42[BANK0 ] unsigned char 
  7540 ;; Return value:  Size  Location     Type
  7541 ;;                  3   32[BANK0 ] float 
  7542 ;; Registers used:
  7543 ;;		wreg, status,2, status,0, pclath, cstack
  7544 ;; Tracked objects:
  7545 ;;		On entry : 0/0
  7546 ;;		On exit  : 0/0
  7547 ;;		Unchanged: 0/0
  7548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7549 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7550 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7551 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7552 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7553 ;;Total ram usage:       13 bytes
  7554 ;; Hardware stack levels used:    1
  7555 ;; Hardware stack levels required when called:    1
  7556 ;; This function calls:
  7557 ;;		___ftpack
  7558 ;; This function is called by:
  7559 ;;		_main
  7560 ;;		___ftsub
  7561 ;;		_log
  7562 ;;		_eval_poly
  7563 ;; This function uses a non-reentrant model
  7564 ;;
  7565                           
  7566                           
  7567                           ;psect for function ___ftadd
  7568  00DD                     ___ftadd:	
  7569                           
  7570                           ;incstack = 0
  7571                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  7572  00DD  0020               	movlb	0	; select bank0
  7573  00DE  0840               	movf	___ftadd@f1,w
  7574  00DF  00C6               	movwf	??___ftadd
  7575  00E0  0841               	movf	___ftadd@f1+1,w
  7576  00E1  00C7               	movwf	??___ftadd+1
  7577  00E2  0842               	movf	___ftadd@f1+2,w
  7578  00E3  00C8               	movwf	??___ftadd+2
  7579  00E4  1003               	clrc
  7580  00E5  0D47               	rlf	??___ftadd+1,w
  7581  00E6  0D48               	rlf	??___ftadd+2,w
  7582  00E7  00C9               	movwf	??___ftadd+3
  7583  00E8  0849               	movf	??___ftadd+3,w
  7584  00E9  00CC               	movwf	___ftadd@exp1
  7585  00EA  0843               	movf	___ftadd@f2,w
  7586  00EB  00C6               	movwf	??___ftadd
  7587  00EC  0844               	movf	___ftadd@f2+1,w
  7588  00ED  00C7               	movwf	??___ftadd+1
  7589  00EE  0845               	movf	___ftadd@f2+2,w
  7590  00EF  00C8               	movwf	??___ftadd+2
  7591  00F0  1003               	clrc
  7592  00F1  0D47               	rlf	??___ftadd+1,w
  7593  00F2  0D48               	rlf	??___ftadd+2,w
  7594  00F3  00C9               	movwf	??___ftadd+3
  7595  00F4  0849               	movf	??___ftadd+3,w
  7596  00F5  00CB               	movwf	___ftadd@exp2
  7597  00F6  084C               	movf	___ftadd@exp1,w
  7598  00F7  1903               	btfsc	3,2
  7599  00F8  2905               	goto	l1823
  7600  00F9  084B               	movf	___ftadd@exp2,w
  7601  00FA  024C               	subwf	___ftadd@exp1,w
  7602  00FB  1803               	skipnc
  7603  00FC  290C               	goto	l1827
  7604  00FD  034C               	decf	___ftadd@exp1,w
  7605  00FE  3AFF               	xorlw	255
  7606  00FF  074B               	addwf	___ftadd@exp2,w
  7607  0100  00C6               	movwf	??___ftadd
  7608  0101  3019               	movlw	25
  7609  0102  0246               	subwf	??___ftadd,w
  7610  0103  1C03               	skipc
  7611  0104  290C               	goto	l1827
  7612  0105                     l1823:	
  7613  0105  0843               	movf	___ftadd@f2,w
  7614  0106  00C0               	movwf	?___ftadd
  7615  0107  0844               	movf	___ftadd@f2+1,w
  7616  0108  00C1               	movwf	?___ftadd+1
  7617  0109  0845               	movf	___ftadd@f2+2,w
  7618  010A  00C2               	movwf	?___ftadd+2
  7619  010B  0008               	return
  7620  010C                     l1827:	
  7621  010C  084B               	movf	___ftadd@exp2,w
  7622  010D  1903               	btfsc	3,2
  7623  010E  0008               	return
  7624  010F  084C               	movf	___ftadd@exp1,w
  7625  0110  024B               	subwf	___ftadd@exp2,w
  7626  0111  1803               	skipnc
  7627  0112  291B               	goto	l1833
  7628  0113  034B               	decf	___ftadd@exp2,w
  7629  0114  3AFF               	xorlw	255
  7630  0115  074C               	addwf	___ftadd@exp1,w
  7631  0116  00C6               	movwf	??___ftadd
  7632  0117  3019               	movlw	25
  7633  0118  0246               	subwf	??___ftadd,w
  7634  0119  1803               	btfsc	3,0
  7635  011A  0008               	return
  7636  011B                     l1833:	
  7637  011B  3006               	movlw	6
  7638  011C  00C6               	movwf	??___ftadd
  7639  011D  0846               	movf	??___ftadd,w
  7640  011E  00CA               	movwf	___ftadd@sign
  7641  011F  1BC2               	btfsc	___ftadd@f1+2,7
  7642  0120  17CA               	bsf	___ftadd@sign,7
  7643  0121  1BC5               	btfsc	___ftadd@f2+2,7
  7644  0122  174A               	bsf	___ftadd@sign,6
  7645  0123  17C1               	bsf	___ftadd@f1+1,7
  7646  0124  30FF               	movlw	255
  7647  0125  05C0               	andwf	___ftadd@f1,f
  7648  0126  30FF               	movlw	255
  7649  0127  05C1               	andwf	___ftadd@f1+1,f
  7650  0128  3000               	movlw	0
  7651  0129  05C2               	andwf	___ftadd@f1+2,f
  7652  012A  17C4               	bsf	___ftadd@f2+1,7
  7653  012B  30FF               	movlw	255
  7654  012C  05C3               	andwf	___ftadd@f2,f
  7655  012D  30FF               	movlw	255
  7656  012E  05C4               	andwf	___ftadd@f2+1,f
  7657  012F  3000               	movlw	0
  7658  0130  05C5               	andwf	___ftadd@f2+2,f
  7659  0131  084B               	movf	___ftadd@exp2,w
  7660  0132  024C               	subwf	___ftadd@exp1,w
  7661  0133  1803               	skipnc
  7662  0134  2957               	goto	l1855
  7663  0135                     l1845:	
  7664  0135  3001               	movlw	1
  7665  0136                     u1685:	
  7666  0136  35C3               	lslf	___ftadd@f2,f
  7667  0137  0DC4               	rlf	___ftadd@f2+1,f
  7668  0138  0DC5               	rlf	___ftadd@f2+2,f
  7669  0139  0B89               	decfsz	9,f
  7670  013A  2936               	goto	u1685
  7671  013B  3001               	movlw	1
  7672  013C  02CB               	subwf	___ftadd@exp2,f
  7673  013D  084B               	movf	___ftadd@exp2,w
  7674  013E  064C               	xorwf	___ftadd@exp1,w
  7675  013F  1903               	skipnz
  7676  0140  2952               	goto	l1853
  7677  0141  3001               	movlw	1
  7678  0142  02CA               	subwf	___ftadd@sign,f
  7679  0143  084A               	movf	___ftadd@sign,w
  7680  0144  3907               	andlw	7
  7681  0145  1903               	btfsc	3,2
  7682  0146  2952               	goto	l1853
  7683  0147  2935               	goto	l1845
  7684  0148                     l1851:	
  7685  0148  3001               	movlw	1
  7686  0149                     u1715:	
  7687  0149  36C2               	lsrf	___ftadd@f1+2,f
  7688  014A  0CC1               	rrf	___ftadd@f1+1,f
  7689  014B  0CC0               	rrf	___ftadd@f1,f
  7690  014C  0B89               	decfsz	9,f
  7691  014D  2949               	goto	u1715
  7692  014E  3001               	movlw	1
  7693  014F  00C6               	movwf	??___ftadd
  7694  0150  0846               	movf	??___ftadd,w
  7695  0151  07CC               	addwf	___ftadd@exp1,f
  7696  0152                     l1853:	
  7697  0152  084C               	movf	___ftadd@exp1,w
  7698  0153  064B               	xorwf	___ftadd@exp2,w
  7699  0154  1903               	btfsc	3,2
  7700  0155  297C               	goto	l559
  7701  0156  2948               	goto	l1851
  7702  0157                     l1855:	
  7703  0157  084C               	movf	___ftadd@exp1,w
  7704  0158  024B               	subwf	___ftadd@exp2,w
  7705  0159  1803               	skipnc
  7706  015A  297C               	goto	l559
  7707  015B                     l1857:	
  7708  015B  3001               	movlw	1
  7709  015C                     u1745:	
  7710  015C  35C0               	lslf	___ftadd@f1,f
  7711  015D  0DC1               	rlf	___ftadd@f1+1,f
  7712  015E  0DC2               	rlf	___ftadd@f1+2,f
  7713  015F  0B89               	decfsz	9,f
  7714  0160  295C               	goto	u1745
  7715  0161  3001               	movlw	1
  7716  0162  02CC               	subwf	___ftadd@exp1,f
  7717  0163  084B               	movf	___ftadd@exp2,w
  7718  0164  064C               	xorwf	___ftadd@exp1,w
  7719  0165  1903               	skipnz
  7720  0166  2978               	goto	l1865
  7721  0167  3001               	movlw	1
  7722  0168  02CA               	subwf	___ftadd@sign,f
  7723  0169  084A               	movf	___ftadd@sign,w
  7724  016A  3907               	andlw	7
  7725  016B  1903               	btfsc	3,2
  7726  016C  2978               	goto	l1865
  7727  016D  295B               	goto	l1857
  7728  016E                     l1863:	
  7729  016E  3001               	movlw	1
  7730  016F                     u1775:	
  7731  016F  36C5               	lsrf	___ftadd@f2+2,f
  7732  0170  0CC4               	rrf	___ftadd@f2+1,f
  7733  0171  0CC3               	rrf	___ftadd@f2,f
  7734  0172  0B89               	decfsz	9,f
  7735  0173  296F               	goto	u1775
  7736  0174  3001               	movlw	1
  7737  0175  00C6               	movwf	??___ftadd
  7738  0176  0846               	movf	??___ftadd,w
  7739  0177  07CB               	addwf	___ftadd@exp2,f
  7740  0178                     l1865:	
  7741  0178  084C               	movf	___ftadd@exp1,w
  7742  0179  064B               	xorwf	___ftadd@exp2,w
  7743  017A  1D03               	skipz
  7744  017B  296E               	goto	l1863
  7745  017C                     l559:	
  7746  017C  1FCA               	btfss	___ftadd@sign,7
  7747  017D  298E               	goto	l1869
  7748  017E  30FF               	movlw	255
  7749  017F  06C0               	xorwf	___ftadd@f1,f
  7750  0180  30FF               	movlw	255
  7751  0181  06C1               	xorwf	___ftadd@f1+1,f
  7752  0182  30FF               	movlw	255
  7753  0183  06C2               	xorwf	___ftadd@f1+2,f
  7754  0184  3001               	movlw	1
  7755  0185  07C0               	addwf	___ftadd@f1,f
  7756  0186  3000               	movlw	0
  7757  0187  1803               	skipnc
  7758  0188  3001               	movlw	1
  7759  0189  07C1               	addwf	___ftadd@f1+1,f
  7760  018A  3000               	movlw	0
  7761  018B  1803               	skipnc
  7762  018C  3001               	movlw	1
  7763  018D  07C2               	addwf	___ftadd@f1+2,f
  7764  018E                     l1869:	
  7765  018E  1F4A               	btfss	___ftadd@sign,6
  7766  018F  29A0               	goto	l1873
  7767  0190  30FF               	movlw	255
  7768  0191  06C3               	xorwf	___ftadd@f2,f
  7769  0192  30FF               	movlw	255
  7770  0193  06C4               	xorwf	___ftadd@f2+1,f
  7771  0194  30FF               	movlw	255
  7772  0195  06C5               	xorwf	___ftadd@f2+2,f
  7773  0196  3001               	movlw	1
  7774  0197  07C3               	addwf	___ftadd@f2,f
  7775  0198  3000               	movlw	0
  7776  0199  1803               	skipnc
  7777  019A  3001               	movlw	1
  7778  019B  07C4               	addwf	___ftadd@f2+1,f
  7779  019C  3000               	movlw	0
  7780  019D  1803               	skipnc
  7781  019E  3001               	movlw	1
  7782  019F  07C5               	addwf	___ftadd@f2+2,f
  7783  01A0                     l1873:	
  7784  01A0  01CA               	clrf	___ftadd@sign
  7785  01A1  0840               	movf	___ftadd@f1,w
  7786  01A2  07C3               	addwf	___ftadd@f2,f
  7787  01A3  0841               	movf	___ftadd@f1+1,w
  7788  01A4  3DC4               	addwfc	___ftadd@f2+1,f
  7789  01A5  0842               	movf	___ftadd@f1+2,w
  7790  01A6  3DC5               	addwfc	___ftadd@f2+2,f
  7791  01A7  1FC5               	btfss	___ftadd@f2+2,7
  7792  01A8  29BB               	goto	l1883
  7793  01A9  30FF               	movlw	255
  7794  01AA  06C3               	xorwf	___ftadd@f2,f
  7795  01AB  30FF               	movlw	255
  7796  01AC  06C4               	xorwf	___ftadd@f2+1,f
  7797  01AD  30FF               	movlw	255
  7798  01AE  06C5               	xorwf	___ftadd@f2+2,f
  7799  01AF  3001               	movlw	1
  7800  01B0  07C3               	addwf	___ftadd@f2,f
  7801  01B1  3000               	movlw	0
  7802  01B2  1803               	skipnc
  7803  01B3  3001               	movlw	1
  7804  01B4  07C4               	addwf	___ftadd@f2+1,f
  7805  01B5  3000               	movlw	0
  7806  01B6  1803               	skipnc
  7807  01B7  3001               	movlw	1
  7808  01B8  07C5               	addwf	___ftadd@f2+2,f
  7809  01B9  01CA               	clrf	___ftadd@sign
  7810  01BA  0ACA               	incf	___ftadd@sign,f
  7811  01BB                     l1883:	
  7812  01BB  0843               	movf	___ftadd@f2,w
  7813  01BC  00F0               	movwf	___ftpack@arg
  7814  01BD  0844               	movf	___ftadd@f2+1,w
  7815  01BE  00F1               	movwf	___ftpack@arg+1
  7816  01BF  0845               	movf	___ftadd@f2+2,w
  7817  01C0  00F2               	movwf	___ftpack@arg+2
  7818  01C1  084C               	movf	___ftadd@exp1,w
  7819  01C2  00C6               	movwf	??___ftadd
  7820  01C3  0846               	movf	??___ftadd,w
  7821  01C4  00F3               	movwf	___ftpack@exp
  7822  01C5  084A               	movf	___ftadd@sign,w
  7823  01C6  00C7               	movwf	??___ftadd+1
  7824  01C7  0847               	movf	??___ftadd+1,w
  7825  01C8  00F4               	movwf	___ftpack@sign
  7826  01C9  318C  2495         	fcall	___ftpack
  7827  01CB  0870               	movf	?___ftpack,w
  7828  01CC  0020               	movlb	0	; select bank0
  7829  01CD  00C0               	movwf	?___ftadd
  7830  01CE  0871               	movf	?___ftpack+1,w
  7831  01CF  00C1               	movwf	?___ftadd+1
  7832  01D0  0872               	movf	?___ftpack+2,w
  7833  01D1  00C2               	movwf	?___ftadd+2
  7834  01D2  0008               	return
  7835  01D3                     __end_of___ftadd:	
  7836                           
  7837                           	psect	text15
  7838  0DF6                     __ptext15:	
  7839 ;; *************** function ___ftdiv *****************
  7840 ;; Defined at:
  7841 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftdiv.c"
  7842 ;; Parameters:    Size  Location     Type
  7843 ;;  f2              3   16[BANK0 ] float 
  7844 ;;  f1              3   19[BANK0 ] float 
  7845 ;; Auto vars:     Size  Location     Type
  7846 ;;  f3              3   27[BANK0 ] float 
  7847 ;;  sign            1   31[BANK0 ] unsigned char 
  7848 ;;  exp             1   30[BANK0 ] unsigned char 
  7849 ;;  cntr            1   26[BANK0 ] unsigned char 
  7850 ;; Return value:  Size  Location     Type
  7851 ;;                  3   16[BANK0 ] float 
  7852 ;; Registers used:
  7853 ;;		wreg, status,2, status,0, pclath, cstack
  7854 ;; Tracked objects:
  7855 ;;		On entry : 0/0
  7856 ;;		On exit  : 0/0
  7857 ;;		Unchanged: 0/0
  7858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7859 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7860 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7861 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7862 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7863 ;;Total ram usage:       16 bytes
  7864 ;; Hardware stack levels used:    1
  7865 ;; Hardware stack levels required when called:    1
  7866 ;; This function calls:
  7867 ;;		___ftpack
  7868 ;; This function is called by:
  7869 ;;		_main
  7870 ;; This function uses a non-reentrant model
  7871 ;;
  7872                           
  7873                           
  7874                           ;psect for function ___ftdiv
  7875  0DF6                     ___ftdiv:	
  7876                           
  7877                           ;incstack = 0
  7878                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  7879  0DF6  0020               	movlb	0	; select bank0
  7880  0DF7  0833               	movf	___ftdiv@f1,w
  7881  0DF8  00B6               	movwf	??___ftdiv
  7882  0DF9  0834               	movf	___ftdiv@f1+1,w
  7883  0DFA  00B7               	movwf	??___ftdiv+1
  7884  0DFB  0835               	movf	___ftdiv@f1+2,w
  7885  0DFC  00B8               	movwf	??___ftdiv+2
  7886  0DFD  1003               	clrc
  7887  0DFE  0D37               	rlf	??___ftdiv+1,w
  7888  0DFF  0D38               	rlf	??___ftdiv+2,w
  7889  0E00  00B9               	movwf	??___ftdiv+3
  7890  0E01  0839               	movf	??___ftdiv+3,w
  7891  0E02  00BE               	movwf	___ftdiv@exp
  7892  0E03  083E               	movf	___ftdiv@exp,w
  7893  0E04  1D03               	btfss	3,2
  7894  0E05  2E0D               	goto	l2439
  7895  0E06  3000               	movlw	0
  7896  0E07  00B0               	movwf	?___ftdiv
  7897  0E08  3000               	movlw	0
  7898  0E09  00B1               	movwf	?___ftdiv+1
  7899  0E0A  3000               	movlw	0
  7900  0E0B  00B2               	movwf	?___ftdiv+2
  7901  0E0C  0008               	return
  7902  0E0D                     l2439:	
  7903  0E0D  0830               	movf	___ftdiv@f2,w
  7904  0E0E  00B6               	movwf	??___ftdiv
  7905  0E0F  0831               	movf	___ftdiv@f2+1,w
  7906  0E10  00B7               	movwf	??___ftdiv+1
  7907  0E11  0832               	movf	___ftdiv@f2+2,w
  7908  0E12  00B8               	movwf	??___ftdiv+2
  7909  0E13  1003               	clrc
  7910  0E14  0D37               	rlf	??___ftdiv+1,w
  7911  0E15  0D38               	rlf	??___ftdiv+2,w
  7912  0E16  00B9               	movwf	??___ftdiv+3
  7913  0E17  0839               	movf	??___ftdiv+3,w
  7914  0E18  00BF               	movwf	___ftdiv@sign
  7915  0E19  083F               	movf	___ftdiv@sign,w
  7916  0E1A  1D03               	btfss	3,2
  7917  0E1B  2E23               	goto	l2445
  7918  0E1C  3000               	movlw	0
  7919  0E1D  00B0               	movwf	?___ftdiv
  7920  0E1E  3000               	movlw	0
  7921  0E1F  00B1               	movwf	?___ftdiv+1
  7922  0E20  3000               	movlw	0
  7923  0E21  00B2               	movwf	?___ftdiv+2
  7924  0E22  0008               	return
  7925  0E23                     l2445:	
  7926  0E23  3000               	movlw	0
  7927  0E24  00BB               	movwf	___ftdiv@f3
  7928  0E25  3000               	movlw	0
  7929  0E26  00BC               	movwf	___ftdiv@f3+1
  7930  0E27  3000               	movlw	0
  7931  0E28  00BD               	movwf	___ftdiv@f3+2
  7932  0E29  3089               	movlw	137
  7933  0E2A  073F               	addwf	___ftdiv@sign,w
  7934  0E2B  00B6               	movwf	??___ftdiv
  7935  0E2C  0836               	movf	??___ftdiv,w
  7936  0E2D  02BE               	subwf	___ftdiv@exp,f
  7937  0E2E  0833               	movf	___ftdiv@f1,w
  7938  0E2F  00B6               	movwf	??___ftdiv
  7939  0E30  0834               	movf	___ftdiv@f1+1,w
  7940  0E31  00B7               	movwf	??___ftdiv+1
  7941  0E32  0835               	movf	___ftdiv@f1+2,w
  7942  0E33  00B8               	movwf	??___ftdiv+2
  7943  0E34  3010               	movlw	16
  7944  0E35                     u2655:	
  7945  0E35  36B8               	lsrf	??___ftdiv+2,f
  7946  0E36  0CB7               	rrf	??___ftdiv+1,f
  7947  0E37  0CB6               	rrf	??___ftdiv,f
  7948  0E38  0B89               	decfsz	9,f
  7949  0E39  2E35               	goto	u2655
  7950  0E3A  0836               	movf	??___ftdiv,w
  7951  0E3B  00B9               	movwf	??___ftdiv+3
  7952  0E3C  0839               	movf	??___ftdiv+3,w
  7953  0E3D  00BF               	movwf	___ftdiv@sign
  7954  0E3E  0830               	movf	___ftdiv@f2,w
  7955  0E3F  00B6               	movwf	??___ftdiv
  7956  0E40  0831               	movf	___ftdiv@f2+1,w
  7957  0E41  00B7               	movwf	??___ftdiv+1
  7958  0E42  0832               	movf	___ftdiv@f2+2,w
  7959  0E43  00B8               	movwf	??___ftdiv+2
  7960  0E44  3010               	movlw	16
  7961  0E45                     u2665:	
  7962  0E45  36B8               	lsrf	??___ftdiv+2,f
  7963  0E46  0CB7               	rrf	??___ftdiv+1,f
  7964  0E47  0CB6               	rrf	??___ftdiv,f
  7965  0E48  0B89               	decfsz	9,f
  7966  0E49  2E45               	goto	u2665
  7967  0E4A  0836               	movf	??___ftdiv,w
  7968  0E4B  00B9               	movwf	??___ftdiv+3
  7969  0E4C  0839               	movf	??___ftdiv+3,w
  7970  0E4D  06BF               	xorwf	___ftdiv@sign,f
  7971  0E4E  3080               	movlw	128
  7972  0E4F  00B6               	movwf	??___ftdiv
  7973  0E50  0836               	movf	??___ftdiv,w
  7974  0E51  05BF               	andwf	___ftdiv@sign,f
  7975  0E52  17B4               	bsf	___ftdiv@f1+1,7
  7976  0E53  30FF               	movlw	255
  7977  0E54  05B3               	andwf	___ftdiv@f1,f
  7978  0E55  30FF               	movlw	255
  7979  0E56  05B4               	andwf	___ftdiv@f1+1,f
  7980  0E57  3000               	movlw	0
  7981  0E58  05B5               	andwf	___ftdiv@f1+2,f
  7982  0E59  17B1               	bsf	___ftdiv@f2+1,7
  7983  0E5A  30FF               	movlw	255
  7984  0E5B  05B0               	andwf	___ftdiv@f2,f
  7985  0E5C  30FF               	movlw	255
  7986  0E5D  05B1               	andwf	___ftdiv@f2+1,f
  7987  0E5E  3000               	movlw	0
  7988  0E5F  05B2               	andwf	___ftdiv@f2+2,f
  7989  0E60  3018               	movlw	24
  7990  0E61  00B6               	movwf	??___ftdiv
  7991  0E62  0836               	movf	??___ftdiv,w
  7992  0E63  00BA               	movwf	___ftdiv@cntr
  7993  0E64                     l2459:	
  7994  0E64  3001               	movlw	1
  7995  0E65                     u2675:	
  7996  0E65  35BB               	lslf	___ftdiv@f3,f
  7997  0E66  0DBC               	rlf	___ftdiv@f3+1,f
  7998  0E67  0DBD               	rlf	___ftdiv@f3+2,f
  7999  0E68  0B89               	decfsz	9,f
  8000  0E69  2E65               	goto	u2675
  8001  0E6A  0832               	movf	___ftdiv@f2+2,w
  8002  0E6B  0235               	subwf	___ftdiv@f1+2,w
  8003  0E6C  1D03               	skipz
  8004  0E6D  2E74               	goto	u2685
  8005  0E6E  0831               	movf	___ftdiv@f2+1,w
  8006  0E6F  0234               	subwf	___ftdiv@f1+1,w
  8007  0E70  1D03               	skipz
  8008  0E71  2E74               	goto	u2685
  8009  0E72  0830               	movf	___ftdiv@f2,w
  8010  0E73  0233               	subwf	___ftdiv@f1,w
  8011  0E74                     u2685:	
  8012  0E74  1C03               	skipc
  8013  0E75  2E7D               	goto	l2467
  8014  0E76  0830               	movf	___ftdiv@f2,w
  8015  0E77  02B3               	subwf	___ftdiv@f1,f
  8016  0E78  0831               	movf	___ftdiv@f2+1,w
  8017  0E79  3BB4               	subwfb	___ftdiv@f1+1,f
  8018  0E7A  0832               	movf	___ftdiv@f2+2,w
  8019  0E7B  3BB5               	subwfb	___ftdiv@f1+2,f
  8020  0E7C  143B               	bsf	___ftdiv@f3,0
  8021  0E7D                     l2467:	
  8022  0E7D  3001               	movlw	1
  8023  0E7E                     u2695:	
  8024  0E7E  35B3               	lslf	___ftdiv@f1,f
  8025  0E7F  0DB4               	rlf	___ftdiv@f1+1,f
  8026  0E80  0DB5               	rlf	___ftdiv@f1+2,f
  8027  0E81  0B89               	decfsz	9,f
  8028  0E82  2E7E               	goto	u2695
  8029  0E83  3001               	movlw	1
  8030  0E84  02BA               	subwf	___ftdiv@cntr,f
  8031  0E85  1D03               	btfss	3,2
  8032  0E86  2E64               	goto	l2459
  8033  0E87  083B               	movf	___ftdiv@f3,w
  8034  0E88  00F0               	movwf	___ftpack@arg
  8035  0E89  083C               	movf	___ftdiv@f3+1,w
  8036  0E8A  00F1               	movwf	___ftpack@arg+1
  8037  0E8B  083D               	movf	___ftdiv@f3+2,w
  8038  0E8C  00F2               	movwf	___ftpack@arg+2
  8039  0E8D  083E               	movf	___ftdiv@exp,w
  8040  0E8E  00B6               	movwf	??___ftdiv
  8041  0E8F  0836               	movf	??___ftdiv,w
  8042  0E90  00F3               	movwf	___ftpack@exp
  8043  0E91  083F               	movf	___ftdiv@sign,w
  8044  0E92  00B7               	movwf	??___ftdiv+1
  8045  0E93  0837               	movf	??___ftdiv+1,w
  8046  0E94  00F4               	movwf	___ftpack@sign
  8047  0E95  318C  2495         	fcall	___ftpack
  8048  0E97  0870               	movf	?___ftpack,w
  8049  0E98  0020               	movlb	0	; select bank0
  8050  0E99  00B0               	movwf	?___ftdiv
  8051  0E9A  0871               	movf	?___ftpack+1,w
  8052  0E9B  00B1               	movwf	?___ftdiv+1
  8053  0E9C  0872               	movf	?___ftpack+2,w
  8054  0E9D  00B2               	movwf	?___ftdiv+2
  8055  0E9E  0008               	return
  8056  0E9F                     __end_of___ftdiv:	
  8057                           
  8058                           	psect	text16
  8059  0C95                     __ptext16:	
  8060 ;; *************** function ___ftpack *****************
  8061 ;; Defined at:
  8062 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\float.c"
  8063 ;; Parameters:    Size  Location     Type
  8064 ;;  arg             3    0[COMMON] unsigned um
  8065 ;;  exp             1    3[COMMON] unsigned char 
  8066 ;;  sign            1    4[COMMON] unsigned char 
  8067 ;; Auto vars:     Size  Location     Type
  8068 ;;		None
  8069 ;; Return value:  Size  Location     Type
  8070 ;;                  3    0[COMMON] float 
  8071 ;; Registers used:
  8072 ;;		wreg, status,2, status,0
  8073 ;; Tracked objects:
  8074 ;;		On entry : 0/0
  8075 ;;		On exit  : 0/0
  8076 ;;		Unchanged: 0/0
  8077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8078 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8080 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8081 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8082 ;;Total ram usage:        8 bytes
  8083 ;; Hardware stack levels used:    1
  8084 ;; This function calls:
  8085 ;;		Nothing
  8086 ;; This function is called by:
  8087 ;;		___awtoft
  8088 ;;		___ftadd
  8089 ;;		___ftdiv
  8090 ;;		___ftmul
  8091 ;;		___lwtoft
  8092 ;; This function uses a non-reentrant model
  8093 ;;
  8094                           
  8095                           
  8096                           ;psect for function ___ftpack
  8097  0C95                     ___ftpack:	
  8098                           
  8099                           ;incstack = 0
  8100                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  8101  0C95  0873               	movf	___ftpack@exp,w
  8102  0C96  1903               	btfsc	3,2
  8103  0C97  2C9D               	goto	l1745
  8104  0C98  0872               	movf	___ftpack@arg+2,w
  8105  0C99  0471               	iorwf	___ftpack@arg+1,w
  8106  0C9A  0470               	iorwf	___ftpack@arg,w
  8107  0C9B  1D03               	skipz
  8108  0C9C  2CAE               	goto	l1751
  8109  0C9D                     l1745:	
  8110  0C9D  3000               	movlw	0
  8111  0C9E  00F0               	movwf	?___ftpack
  8112  0C9F  3000               	movlw	0
  8113  0CA0  00F1               	movwf	?___ftpack+1
  8114  0CA1  3000               	movlw	0
  8115  0CA2  00F2               	movwf	?___ftpack+2
  8116  0CA3  0008               	return
  8117  0CA4                     l1749:	
  8118  0CA4  3001               	movlw	1
  8119  0CA5  00F5               	movwf	??___ftpack
  8120  0CA6  0875               	movf	??___ftpack,w
  8121  0CA7  07F3               	addwf	___ftpack@exp,f
  8122  0CA8  3001               	movlw	1
  8123  0CA9                     u1445:	
  8124  0CA9  36F2               	lsrf	___ftpack@arg+2,f
  8125  0CAA  0CF1               	rrf	___ftpack@arg+1,f
  8126  0CAB  0CF0               	rrf	___ftpack@arg,f
  8127  0CAC  0B89               	decfsz	9,f
  8128  0CAD  2CA9               	goto	u1445
  8129  0CAE                     l1751:	
  8130  0CAE  30FE               	movlw	254
  8131  0CAF  0572               	andwf	___ftpack@arg+2,w
  8132  0CB0  1903               	btfsc	3,2
  8133  0CB1  2CC7               	goto	l528
  8134  0CB2  2CA4               	goto	l1749
  8135  0CB3                     l1753:	
  8136  0CB3  3001               	movlw	1
  8137  0CB4  00F5               	movwf	??___ftpack
  8138  0CB5  0875               	movf	??___ftpack,w
  8139  0CB6  07F3               	addwf	___ftpack@exp,f
  8140  0CB7  3001               	movlw	1
  8141  0CB8  07F0               	addwf	___ftpack@arg,f
  8142  0CB9  3000               	movlw	0
  8143  0CBA  1803               	skipnc
  8144  0CBB  3001               	movlw	1
  8145  0CBC  07F1               	addwf	___ftpack@arg+1,f
  8146  0CBD  3000               	movlw	0
  8147  0CBE  1803               	skipnc
  8148  0CBF  3001               	movlw	1
  8149  0CC0  07F2               	addwf	___ftpack@arg+2,f
  8150  0CC1  3001               	movlw	1
  8151  0CC2                     u1465:	
  8152  0CC2  36F2               	lsrf	___ftpack@arg+2,f
  8153  0CC3  0CF1               	rrf	___ftpack@arg+1,f
  8154  0CC4  0CF0               	rrf	___ftpack@arg,f
  8155  0CC5  0B89               	decfsz	9,f
  8156  0CC6  2CC2               	goto	u1465
  8157  0CC7                     l528:	
  8158  0CC7  30FF               	movlw	255
  8159  0CC8  0572               	andwf	___ftpack@arg+2,w
  8160  0CC9  1903               	btfsc	3,2
  8161  0CCA  2CD4               	goto	l1761
  8162  0CCB  2CB3               	goto	l1753
  8163  0CCC                     l1759:	
  8164  0CCC  3001               	movlw	1
  8165  0CCD  02F3               	subwf	___ftpack@exp,f
  8166  0CCE  3001               	movlw	1
  8167  0CCF                     u1485:	
  8168  0CCF  35F0               	lslf	___ftpack@arg,f
  8169  0CD0  0DF1               	rlf	___ftpack@arg+1,f
  8170  0CD1  0DF2               	rlf	___ftpack@arg+2,f
  8171  0CD2  0B89               	decfsz	9,f
  8172  0CD3  2CCF               	goto	u1485
  8173  0CD4                     l1761:	
  8174  0CD4  1BF1               	btfsc	___ftpack@arg+1,7
  8175  0CD5  2CDA               	goto	l535
  8176  0CD6  3002               	movlw	2
  8177  0CD7  0273               	subwf	___ftpack@exp,w
  8178  0CD8  1803               	skipnc
  8179  0CD9  2CCC               	goto	l1759
  8180  0CDA                     l535:	
  8181  0CDA  1873               	btfsc	___ftpack@exp,0
  8182  0CDB  2CE2               	goto	l536
  8183  0CDC  30FF               	movlw	255
  8184  0CDD  05F0               	andwf	___ftpack@arg,f
  8185  0CDE  307F               	movlw	127
  8186  0CDF  05F1               	andwf	___ftpack@arg+1,f
  8187  0CE0  30FF               	movlw	255
  8188  0CE1  05F2               	andwf	___ftpack@arg+2,f
  8189  0CE2                     l536:	
  8190  0CE2  1003               	clrc
  8191  0CE3  0CF3               	rrf	___ftpack@exp,f
  8192  0CE4  0873               	movf	___ftpack@exp,w
  8193  0CE5  00F5               	movwf	??___ftpack
  8194  0CE6  01F6               	clrf	??___ftpack+1
  8195  0CE7  01F7               	clrf	??___ftpack+2
  8196  0CE8  3010               	movlw	16
  8197  0CE9                     u1525:	
  8198  0CE9  35F5               	lslf	??___ftpack,f
  8199  0CEA  0DF6               	rlf	??___ftpack+1,f
  8200  0CEB  0DF7               	rlf	??___ftpack+2,f
  8201  0CEC  0B89               	decfsz	9,f
  8202  0CED  2CE9               	goto	u1525
  8203  0CEE  0875               	movf	??___ftpack,w
  8204  0CEF  04F0               	iorwf	___ftpack@arg,f
  8205  0CF0  0876               	movf	??___ftpack+1,w
  8206  0CF1  04F1               	iorwf	___ftpack@arg+1,f
  8207  0CF2  0877               	movf	??___ftpack+2,w
  8208  0CF3  04F2               	iorwf	___ftpack@arg+2,f
  8209  0CF4  0874               	movf	___ftpack@sign,w
  8210  0CF5  1903               	btfsc	3,2
  8211  0CF6  0008               	return
  8212  0CF7  17F2               	bsf	___ftpack@arg+2,7
  8213  0CF8  0008               	return
  8214  0CF9                     __end_of___ftpack:	
  8215                           
  8216                           	psect	text17
  8217  0AB3                     __ptext17:	
  8218 ;; *************** function _SYSTEM_Initialize *****************
  8219 ;; Defined at:
  8220 ;;		line 37 in file "system.c"
  8221 ;; Parameters:    Size  Location     Type
  8222 ;;		None
  8223 ;; Auto vars:     Size  Location     Type
  8224 ;;		None
  8225 ;; Return value:  Size  Location     Type
  8226 ;;                  1    wreg      void 
  8227 ;; Registers used:
  8228 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8229 ;; Tracked objects:
  8230 ;;		On entry : 0/0
  8231 ;;		On exit  : 0/0
  8232 ;;		Unchanged: 0/0
  8233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8236 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8237 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8238 ;;Total ram usage:        2 bytes
  8239 ;; Hardware stack levels used:    1
  8240 ;; Hardware stack levels required when called:    3
  8241 ;; This function calls:
  8242 ;;		_ADCC_Initialize
  8243 ;;		_InitCustomChars
  8244 ;;		_LCD_Clear
  8245 ;;		_LCD_Init
  8246 ;;		_OSCILLATOR_Initialize
  8247 ;;		_PIN_MANAGER_Initialize
  8248 ;;		_PWM6_Initialize
  8249 ;;		_TMR2_Initialize
  8250 ;; This function is called by:
  8251 ;;		_main
  8252 ;; This function uses a non-reentrant model
  8253 ;;
  8254                           
  8255                           
  8256                           ;psect for function _SYSTEM_Initialize
  8257  0AB3                     _SYSTEM_Initialize:	
  8258                           
  8259                           ;system.c: 39: PIN_MANAGER_Initialize();
  8260                           
  8261                           ;incstack = 0
  8262                           ; Regs used in _SYSTEM_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8263  0AB3  318A  2280  318A   	fcall	_PIN_MANAGER_Initialize
  8264                           
  8265                           ;system.c: 40: OSCILLATOR_Initialize();
  8266  0AB6  3188  20E3  318A   	fcall	_OSCILLATOR_Initialize
  8267                           
  8268                           ;system.c: 41: FVRCON = 0x00;
  8269  0AB9  0032               	movlb	18	; select bank18
  8270  0ABA  018C               	clrf	12	;volatile
  8271                           
  8272                           ;system.c: 42: ADCC_Initialize();
  8273  0ABB  3189  2180  318A   	fcall	_ADCC_Initialize
  8274                           
  8275                           ;system.c: 43: PWM6_Initialize();
  8276  0ABE  3188  20EB  318A   	fcall	_PWM6_Initialize
  8277                           
  8278                           ;system.c: 45: TMR2_Initialize();
  8279  0AC1  3188  20F6  318A   	fcall	_TMR2_Initialize
  8280                           
  8281                           ;system.c: 46: LCD_Init(0X00);
  8282  0AC4  3000               	movlw	0
  8283  0AC5  318C  24F9  318A   	fcall	_LCD_Init
  8284                           
  8285                           ;system.c: 47: _delay((unsigned long)((200)*(1000000/4000.0)));
  8286  0AC8  3041               	movlw	65
  8287  0AC9  00F8               	movwf	??_SYSTEM_Initialize+1
  8288  0ACA  30EE               	movlw	238
  8289  0ACB  00F7               	movwf	??_SYSTEM_Initialize
  8290  0ACC                     u2887:	
  8291  0ACC  0BF7               	decfsz	??_SYSTEM_Initialize,f
  8292  0ACD  2ACC               	goto	u2887
  8293  0ACE  0BF8               	decfsz	??_SYSTEM_Initialize+1,f
  8294  0ACF  2ACC               	goto	u2887
  8295  0AD0  0000               	nop
  8296                           
  8297                           ;system.c: 48: LCD_Clear();
  8298  0AD1  3188  20DB  318A   	fcall	_LCD_Clear
  8299                           
  8300                           ;system.c: 49: _delay((unsigned long)((100)*(1000000/4000.0)));
  8301  0AD4  3021               	movlw	33
  8302  0AD5  00F8               	movwf	??_SYSTEM_Initialize+1
  8303  0AD6  3076               	movlw	118
  8304  0AD7  00F7               	movwf	??_SYSTEM_Initialize
  8305  0AD8                     u2897:	
  8306  0AD8  0BF7               	decfsz	??_SYSTEM_Initialize,f
  8307  0AD9  2AD8               	goto	u2897
  8308  0ADA  0BF8               	decfsz	??_SYSTEM_Initialize+1,f
  8309  0ADB  2AD8               	goto	u2897
  8310  0ADC  0000               	nop
  8311                           
  8312                           ;system.c: 50: InitCustomChars();
  8313  0ADD  318A  2230  318A   	fcall	_InitCustomChars
  8314                           
  8315                           ;system.c: 51: _delay((unsigned long)((200)*(1000000/4000.0)));
  8316  0AE0  3041               	movlw	65
  8317  0AE1  00F8               	movwf	??_SYSTEM_Initialize+1
  8318  0AE2  30EE               	movlw	238
  8319  0AE3  00F7               	movwf	??_SYSTEM_Initialize
  8320  0AE4                     u2907:	
  8321  0AE4  0BF7               	decfsz	??_SYSTEM_Initialize,f
  8322  0AE5  2AE4               	goto	u2907
  8323  0AE6  0BF8               	decfsz	??_SYSTEM_Initialize+1,f
  8324  0AE7  2AE4               	goto	u2907
  8325  0AE8  0000               	nop
  8326  0AE9  0008               	return
  8327  0AEA                     __end_of_SYSTEM_Initialize:	
  8328                           
  8329                           	psect	text18
  8330  08F6                     __ptext18:	
  8331 ;; *************** function _TMR2_Initialize *****************
  8332 ;; Defined at:
  8333 ;;		line 3 in file "tmr2.c"
  8334 ;; Parameters:    Size  Location     Type
  8335 ;;		None
  8336 ;; Auto vars:     Size  Location     Type
  8337 ;;		None
  8338 ;; Return value:  Size  Location     Type
  8339 ;;                  1    wreg      void 
  8340 ;; Registers used:
  8341 ;;		wreg, status,2
  8342 ;; Tracked objects:
  8343 ;;		On entry : 0/0
  8344 ;;		On exit  : 0/0
  8345 ;;		Unchanged: 0/0
  8346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8350 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8351 ;;Total ram usage:        0 bytes
  8352 ;; Hardware stack levels used:    1
  8353 ;; This function calls:
  8354 ;;		Nothing
  8355 ;; This function is called by:
  8356 ;;		_SYSTEM_Initialize
  8357 ;; This function uses a non-reentrant model
  8358 ;;
  8359                           
  8360                           
  8361                           ;psect for function _TMR2_Initialize
  8362  08F6                     _TMR2_Initialize:	
  8363                           
  8364                           ;tmr2.c: 5: T2CON = 0x00;
  8365                           
  8366                           ;incstack = 0
  8367                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  8368  08F6  0025               	movlb	5	; select bank5
  8369  08F7  018E               	clrf	14	;volatile
  8370                           
  8371                           ;tmr2.c: 7: T2CLKCON = 0x01;
  8372  08F8  3001               	movlw	1
  8373  08F9  0090               	movwf	16	;volatile
  8374                           
  8375                           ;tmr2.c: 9: T2HLT = 0x00;
  8376  08FA  018F               	clrf	15	;volatile
  8377                           
  8378                           ;tmr2.c: 11: T2RST = 0x00;
  8379  08FB  0191               	clrf	17	;volatile
  8380                           
  8381                           ;tmr2.c: 13: T2PR = 0xFF;
  8382  08FC  30FF               	movlw	255
  8383  08FD  008D               	movwf	13	;volatile
  8384                           
  8385                           ;tmr2.c: 15: T2TMR = 0x00;
  8386  08FE  018C               	clrf	12	;volatile
  8387                           
  8388                           ;tmr2.c: 17: PIR4bits.TMR2IF = 0;
  8389  08FF  002E               	movlb	14	; select bank14
  8390  0900  1090               	bcf	16,1	;volatile
  8391                           
  8392                           ;tmr2.c: 19: T2CONbits.TMR2ON = 1;
  8393  0901  0025               	movlb	5	; select bank5
  8394  0902  178E               	bsf	14,7	;volatile
  8395  0903  0008               	return
  8396  0904                     __end_of_TMR2_Initialize:	
  8397                           
  8398                           	psect	text19
  8399  08EB                     __ptext19:	
  8400 ;; *************** function _PWM6_Initialize *****************
  8401 ;; Defined at:
  8402 ;;		line 3 in file "pwm6.c"
  8403 ;; Parameters:    Size  Location     Type
  8404 ;;		None
  8405 ;; Auto vars:     Size  Location     Type
  8406 ;;		None
  8407 ;; Return value:  Size  Location     Type
  8408 ;;                  1    wreg      void 
  8409 ;; Registers used:
  8410 ;;		wreg, status,2, status,0
  8411 ;; Tracked objects:
  8412 ;;		On entry : 0/0
  8413 ;;		On exit  : 0/0
  8414 ;;		Unchanged: 0/0
  8415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8419 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8420 ;;Total ram usage:        0 bytes
  8421 ;; Hardware stack levels used:    1
  8422 ;; This function calls:
  8423 ;;		Nothing
  8424 ;; This function is called by:
  8425 ;;		_SYSTEM_Initialize
  8426 ;; This function uses a non-reentrant model
  8427 ;;
  8428                           
  8429                           
  8430                           ;psect for function _PWM6_Initialize
  8431  08EB                     _PWM6_Initialize:	
  8432                           
  8433                           ;pwm6.c: 5: PWM6CON = 0x80;
  8434                           
  8435                           ;incstack = 0
  8436                           ; Regs used in _PWM6_Initialize: [wreg+status,2+status,0]
  8437  08EB  3080               	movlw	128
  8438  08EC  0027               	movlb	7	; select bank7
  8439  08ED  008E               	movwf	14	;volatile
  8440                           
  8441                           ;pwm6.c: 7: PWM6DCH = 0x00;
  8442  08EE  018D               	clrf	13	;volatile
  8443                           
  8444                           ;pwm6.c: 9: PWM6DCL = 0x00;
  8445  08EF  018C               	clrf	12	;volatile
  8446                           
  8447                           ;pwm6.c: 11: CCPTMRS1bits.P6TSEL = 0x1;
  8448  08F0  0024               	movlb	4	; select bank4
  8449  08F1  081F               	movf	31,w	;volatile
  8450  08F2  39F3               	andlw	-13
  8451  08F3  3804               	iorlw	4
  8452  08F4  009F               	movwf	31	;volatile
  8453  08F5  0008               	return
  8454  08F6                     __end_of_PWM6_Initialize:	
  8455                           
  8456                           	psect	text20
  8457  0A80                     __ptext20:	
  8458 ;; *************** function _PIN_MANAGER_Initialize *****************
  8459 ;; Defined at:
  8460 ;;		line 5 in file "pin_manager.c"
  8461 ;; Parameters:    Size  Location     Type
  8462 ;;		None
  8463 ;; Auto vars:     Size  Location     Type
  8464 ;;  state           1    0[COMMON] unsigned char 
  8465 ;; Return value:  Size  Location     Type
  8466 ;;                  1    wreg      void 
  8467 ;; Registers used:
  8468 ;;		wreg, status,2
  8469 ;; Tracked objects:
  8470 ;;		On entry : 0/0
  8471 ;;		On exit  : 0/0
  8472 ;;		Unchanged: 0/0
  8473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8475 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8477 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8478 ;;Total ram usage:        1 bytes
  8479 ;; Hardware stack levels used:    1
  8480 ;; This function calls:
  8481 ;;		Nothing
  8482 ;; This function is called by:
  8483 ;;		_SYSTEM_Initialize
  8484 ;; This function uses a non-reentrant model
  8485 ;;
  8486                           
  8487                           
  8488                           ;psect for function _PIN_MANAGER_Initialize
  8489  0A80                     _PIN_MANAGER_Initialize:	
  8490                           
  8491                           ;pin_manager.c: 7: LATA = 0x00;
  8492                           
  8493                           ;incstack = 0
  8494                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  8495  0A80  0020               	movlb	0	; select bank0
  8496  0A81  0196               	clrf	22	;volatile
  8497                           
  8498                           ;pin_manager.c: 8: LATB = 0x00;
  8499  0A82  0197               	clrf	23	;volatile
  8500                           
  8501                           ;pin_manager.c: 9: LATC = 0x00;
  8502  0A83  0198               	clrf	24	;volatile
  8503                           
  8504                           ;pin_manager.c: 11: WPUA = 0x00;
  8505  0A84  003E               	movlb	30	; select bank30
  8506  0A85  01B9               	clrf	57	;volatile
  8507                           
  8508                           ;pin_manager.c: 12: WPUB = 0x00;
  8509  0A86  01C4               	clrf	68	;volatile
  8510                           
  8511                           ;pin_manager.c: 13: WPUC = 0x00;
  8512  0A87  01CF               	clrf	79	;volatile
  8513                           
  8514                           ;pin_manager.c: 14: WPUE = 0x8;
  8515  0A88  3008               	movlw	8
  8516  0A89  00E5               	movwf	101	;volatile
  8517                           
  8518                           ;pin_manager.c: 16: TRISA = 0x32;
  8519  0A8A  3032               	movlw	50
  8520  0A8B  0020               	movlb	0	; select bank0
  8521  0A8C  0091               	movwf	17	;volatile
  8522                           
  8523                           ;pin_manager.c: 17: TRISB = 0x0A;
  8524  0A8D  300A               	movlw	10
  8525  0A8E  0092               	movwf	18	;volatile
  8526                           
  8527                           ;pin_manager.c: 18: TRISC = 0x10;
  8528  0A8F  3010               	movlw	16
  8529  0A90  0093               	movwf	19	;volatile
  8530                           
  8531                           ;pin_manager.c: 20: ANSELA = 0x32;
  8532  0A91  3032               	movlw	50
  8533  0A92  003E               	movlb	30	; select bank30
  8534  0A93  00B8               	movwf	56	;volatile
  8535                           
  8536                           ;pin_manager.c: 21: ANSELB = 0x0A;
  8537  0A94  300A               	movlw	10
  8538  0A95  00C3               	movwf	67	;volatile
  8539                           
  8540                           ;pin_manager.c: 22: ANSELC = 0x00;
  8541  0A96  01CE               	clrf	78	;volatile
  8542                           
  8543                           ;pin_manager.c: 24: PIE0bits.IOCIE = 0;
  8544  0A97  002E               	movlb	14	; select bank14
  8545  0A98  1216               	bcf	22,4	;volatile
  8546                           
  8547                           ;pin_manager.c: 25: bool state = GIE;
  8548  0A99  3000               	movlw	0
  8549  0A9A  1B8B               	btfsc	11,7	;volatile
  8550  0A9B  3001               	movlw	1
  8551  0A9C  00F0               	movwf	PIN_MANAGER_Initialize@state
  8552                           
  8553                           ;pin_manager.c: 26: GIE = 0;
  8554  0A9D  138B               	bcf	11,7	;volatile
  8555                           
  8556                           ;pin_manager.c: 27: PPSLOCK = 0x55;
  8557  0A9E  3055               	movlw	85
  8558  0A9F  003D               	movlb	29	; select bank29
  8559  0AA0  008F               	movwf	15	;volatile
  8560                           
  8561                           ;pin_manager.c: 28: PPSLOCK = 0xAA;
  8562  0AA1  30AA               	movlw	170
  8563  0AA2  008F               	movwf	15	;volatile
  8564                           
  8565                           ;pin_manager.c: 29: PPSLOCKbits.PPSLOCKED = 0x00;
  8566  0AA3  100F               	bcf	15,0	;volatile
  8567                           
  8568                           ;pin_manager.c: 32: RC2PPS = 0x000E;
  8569  0AA4  300E               	movlw	14
  8570  0AA5  003E               	movlb	30	; select bank30
  8571  0AA6  00A2               	movwf	34	;volatile
  8572                           
  8573                           ;pin_manager.c: 36: PPSLOCK = 0x55;
  8574  0AA7  3055               	movlw	85
  8575  0AA8  003D               	movlb	29	; select bank29
  8576  0AA9  008F               	movwf	15	;volatile
  8577                           
  8578                           ;pin_manager.c: 37: PPSLOCK = 0xAA;
  8579  0AAA  30AA               	movlw	170
  8580  0AAB  008F               	movwf	15	;volatile
  8581                           
  8582                           ;pin_manager.c: 38: PPSLOCKbits.PPSLOCKED = 0x01;
  8583  0AAC  140F               	bsf	15,0	;volatile
  8584                           
  8585                           ;pin_manager.c: 39: GIE = state;
  8586  0AAD  1C70               	btfss	PIN_MANAGER_Initialize@state,0
  8587  0AAE  2AB1               	goto	u1970
  8588  0AAF  178B               	bsf	11,7	;volatile
  8589  0AB0  0008               	return
  8590  0AB1                     u1970:	
  8591  0AB1  138B               	bcf	11,7	;volatile
  8592  0AB2  0008               	return
  8593  0AB3                     __end_of_PIN_MANAGER_Initialize:	
  8594                           
  8595                           	psect	text21
  8596  08E3                     __ptext21:	
  8597 ;; *************** function _OSCILLATOR_Initialize *****************
  8598 ;; Defined at:
  8599 ;;		line 55 in file "system.c"
  8600 ;; Parameters:    Size  Location     Type
  8601 ;;		None
  8602 ;; Auto vars:     Size  Location     Type
  8603 ;;		None
  8604 ;; Return value:  Size  Location     Type
  8605 ;;                  1    wreg      void 
  8606 ;; Registers used:
  8607 ;;		wreg, status,2
  8608 ;; Tracked objects:
  8609 ;;		On entry : 0/0
  8610 ;;		On exit  : 0/0
  8611 ;;		Unchanged: 0/0
  8612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8616 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8617 ;;Total ram usage:        0 bytes
  8618 ;; Hardware stack levels used:    1
  8619 ;; This function calls:
  8620 ;;		Nothing
  8621 ;; This function is called by:
  8622 ;;		_SYSTEM_Initialize
  8623 ;; This function uses a non-reentrant model
  8624 ;;
  8625                           
  8626                           
  8627                           ;psect for function _OSCILLATOR_Initialize
  8628  08E3                     _OSCILLATOR_Initialize:	
  8629                           
  8630                           ;system.c: 57: OSCCON1 = 0x60;
  8631                           
  8632                           ;incstack = 0
  8633                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  8634  08E3  3060               	movlw	96
  8635  08E4  0031               	movlb	17	; select bank17
  8636  08E5  008D               	movwf	13	;volatile
  8637                           
  8638                           ;system.c: 58: OSCCON3 = 0x00;
  8639  08E6  018F               	clrf	15	;volatile
  8640                           
  8641                           ;system.c: 59: OSCEN = 0x00;
  8642  08E7  0191               	clrf	17	;volatile
  8643                           
  8644                           ;system.c: 60: OSCFRQ = 0x00;
  8645  08E8  0193               	clrf	19	;volatile
  8646                           
  8647                           ;system.c: 61: OSCTUNE = 0x00;
  8648  08E9  0192               	clrf	18	;volatile
  8649  08EA  0008               	return
  8650  08EB                     __end_of_OSCILLATOR_Initialize:	
  8651                           
  8652                           	psect	text22
  8653  0CF9                     __ptext22:	
  8654 ;; *************** function _LCD_Init *****************
  8655 ;; Defined at:
  8656 ;;		line 154 in file "lcd.c"
  8657 ;; Parameters:    Size  Location     Type
  8658 ;;  style           1    wreg     unsigned char 
  8659 ;; Auto vars:     Size  Location     Type
  8660 ;;  style           1    5[COMMON] unsigned char 
  8661 ;; Return value:  Size  Location     Type
  8662 ;;                  1    wreg      void 
  8663 ;; Registers used:
  8664 ;;		wreg, status,2, status,0, pclath, cstack
  8665 ;; Tracked objects:
  8666 ;;		On entry : 0/0
  8667 ;;		On exit  : 0/0
  8668 ;;		Unchanged: 0/0
  8669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8671 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8672 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8673 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8674 ;;Total ram usage:        3 bytes
  8675 ;; Hardware stack levels used:    1
  8676 ;; Hardware stack levels required when called:    2
  8677 ;; This function calls:
  8678 ;;		_LCD_Cmd
  8679 ;;		_LCD_Port
  8680 ;; This function is called by:
  8681 ;;		_SYSTEM_Initialize
  8682 ;; This function uses a non-reentrant model
  8683 ;;
  8684                           
  8685                           
  8686                           ;psect for function _LCD_Init
  8687  0CF9                     _LCD_Init:	
  8688                           
  8689                           ;incstack = 0
  8690                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  8691                           ;LCD_Init@style stored from wreg
  8692  0CF9  00F5               	movwf	LCD_Init@style
  8693                           
  8694                           ;lcd.c: 156: LCD_Port(0x00);
  8695  0CFA  3000               	movlw	0
  8696  0CFB  3189  2150  318C   	fcall	_LCD_Port
  8697                           
  8698                           ;lcd.c: 158: _delay((unsigned long)((100)*(1000000/4000.0)));
  8699  0CFE  3021               	movlw	33
  8700  0CFF  00F4               	movwf	??_LCD_Init+1
  8701  0D00  3076               	movlw	118
  8702  0D01  00F3               	movwf	??_LCD_Init
  8703  0D02                     u2917:	
  8704  0D02  0BF3               	decfsz	??_LCD_Init,f
  8705  0D03  2D02               	goto	u2917
  8706  0D04  0BF4               	decfsz	??_LCD_Init+1,f
  8707  0D05  2D02               	goto	u2917
  8708  0D06  0000               	nop
  8709                           
  8710                           ;lcd.c: 160: LCD_Cmd(0x03);
  8711  0D07  3003               	movlw	3
  8712  0D08  3189  2115  318C   	fcall	_LCD_Cmd
  8713                           
  8714                           ;lcd.c: 162: _delay((unsigned long)((10)*(1000000/4000.0)));
  8715  0D0B  3004               	movlw	4
  8716  0D0C  00F4               	movwf	??_LCD_Init+1
  8717  0D0D  303D               	movlw	61
  8718  0D0E  00F3               	movwf	??_LCD_Init
  8719  0D0F                     u2927:	
  8720  0D0F  0BF3               	decfsz	??_LCD_Init,f
  8721  0D10  2D0F               	goto	u2927
  8722  0D11  0BF4               	decfsz	??_LCD_Init+1,f
  8723  0D12  2D0F               	goto	u2927
  8724  0D13  3200               	nop2
  8725                           
  8726                           ;lcd.c: 164: LCD_Cmd(0x03);
  8727  0D14  3003               	movlw	3
  8728  0D15  3189  2115  318C   	fcall	_LCD_Cmd
  8729                           
  8730                           ;lcd.c: 166: _delay((unsigned long)((120)*(1000000/4000000.0)));
  8731  0D18  3009               	movlw	9
  8732  0D19  00F3               	movwf	??_LCD_Init
  8733  0D1A                     u2937:	
  8734  0D1A  0BF3               	decfsz	??_LCD_Init,f
  8735  0D1B  2D1A               	goto	u2937
  8736  0D1C  3200               	nop2	;nop
  8737                           
  8738                           ;lcd.c: 168: LCD_Cmd(0x03);
  8739  0D1D  3003               	movlw	3
  8740  0D1E  3189  2115  318C   	fcall	_LCD_Cmd
  8741                           
  8742                           ;lcd.c: 170: _delay((unsigned long)((120)*(1000000/4000000.0)));
  8743  0D21  3009               	movlw	9
  8744  0D22  00F3               	movwf	??_LCD_Init
  8745  0D23                     u2947:	
  8746  0D23  0BF3               	decfsz	??_LCD_Init,f
  8747  0D24  2D23               	goto	u2947
  8748  0D25  3200               	nop2	;nop
  8749                           
  8750                           ;lcd.c: 172: LCD_Cmd(0x02);
  8751  0D26  3002               	movlw	2
  8752  0D27  3189  2115  318C   	fcall	_LCD_Cmd
  8753                           
  8754                           ;lcd.c: 174: _delay((unsigned long)((120)*(1000000/4000000.0)));
  8755  0D2A  3009               	movlw	9
  8756  0D2B  00F3               	movwf	??_LCD_Init
  8757  0D2C                     u2957:	
  8758  0D2C  0BF3               	decfsz	??_LCD_Init,f
  8759  0D2D  2D2C               	goto	u2957
  8760  0D2E  3200               	nop2	;nop
  8761                           
  8762                           ;lcd.c: 176: LCD_Cmd(0x2);
  8763  0D2F  3002               	movlw	2
  8764  0D30  3189  2115  318C   	fcall	_LCD_Cmd
  8765                           
  8766                           ;lcd.c: 178: LCD_Cmd(0x8);
  8767  0D33  3008               	movlw	8
  8768  0D34  3189  2115  318C   	fcall	_LCD_Cmd
  8769                           
  8770                           ;lcd.c: 180: _delay((unsigned long)((120)*(1000000/4000000.0)));
  8771  0D37  3009               	movlw	9
  8772  0D38  00F3               	movwf	??_LCD_Init
  8773  0D39                     u2967:	
  8774  0D39  0BF3               	decfsz	??_LCD_Init,f
  8775  0D3A  2D39               	goto	u2967
  8776  0D3B  3200               	nop2	;nop
  8777                           
  8778                           ;lcd.c: 182: LCD_Cmd(0x0);
  8779  0D3C  3000               	movlw	0
  8780  0D3D  3189  2115  318C   	fcall	_LCD_Cmd
  8781                           
  8782                           ;lcd.c: 184: LCD_Cmd(0x8);
  8783  0D40  3008               	movlw	8
  8784  0D41  3189  2115  318C   	fcall	_LCD_Cmd
  8785                           
  8786                           ;lcd.c: 186: _delay((unsigned long)((120)*(1000000/4000000.0)));
  8787  0D44  3009               	movlw	9
  8788  0D45  00F3               	movwf	??_LCD_Init
  8789  0D46                     u2977:	
  8790  0D46  0BF3               	decfsz	??_LCD_Init,f
  8791  0D47  2D46               	goto	u2977
  8792  0D48  3200               	nop2	;nop
  8793                           
  8794                           ;lcd.c: 188: LCD_Cmd(0x0);
  8795  0D49  3000               	movlw	0
  8796  0D4A  3189  2115  318C   	fcall	_LCD_Cmd
  8797                           
  8798                           ;lcd.c: 190: LCD_Cmd(0x1);
  8799  0D4D  3001               	movlw	1
  8800  0D4E  3189  2115  318C   	fcall	_LCD_Cmd
  8801                           
  8802                           ;lcd.c: 192: _delay((unsigned long)((5)*(1000000/4000.0)));
  8803  0D51  30F9               	movlw	249
  8804  0D52  00F3               	movwf	??_LCD_Init
  8805  0D53                     u2987:	
  8806  0D53  3200               	nop2
  8807  0D54  0BF3               	decfsz	??_LCD_Init,f
  8808  0D55  2D53               	goto	u2987
  8809  0D56  3200               	nop2	;nop
  8810  0D57  3200               	nop2	;nop
  8811                           
  8812                           ;lcd.c: 194: LCD_Cmd(0x0);
  8813  0D58  3000               	movlw	0
  8814  0D59  3189  2115  318C   	fcall	_LCD_Cmd
  8815                           
  8816                           ;lcd.c: 196: LCD_Cmd(0x6);
  8817  0D5C  3006               	movlw	6
  8818  0D5D  3189  2115  318C   	fcall	_LCD_Cmd
  8819                           
  8820                           ;lcd.c: 198: _delay((unsigned long)((120)*(1000000/4000000.0)));
  8821  0D60  3009               	movlw	9
  8822  0D61  00F3               	movwf	??_LCD_Init
  8823  0D62                     u2997:	
  8824  0D62  0BF3               	decfsz	??_LCD_Init,f
  8825  0D63  2D62               	goto	u2997
  8826  0D64  3200               	nop2	;nop
  8827                           
  8828                           ;lcd.c: 200: LCD_Cmd(0x0);
  8829  0D65  3000               	movlw	0
  8830  0D66  3189  2115  318C   	fcall	_LCD_Cmd
  8831                           
  8832                           ;lcd.c: 202: LCD_Cmd(0xc|style);
  8833  0D69  0875               	movf	LCD_Init@style,w
  8834  0D6A  380C               	iorlw	12
  8835  0D6B  3189  2115  318C   	fcall	_LCD_Cmd
  8836                           
  8837                           ;lcd.c: 204: _delay((unsigned long)((120)*(1000000/4000000.0)));
  8838  0D6E  3009               	movlw	9
  8839  0D6F  00F3               	movwf	??_LCD_Init
  8840  0D70                     u3007:	
  8841  0D70  0BF3               	decfsz	??_LCD_Init,f
  8842  0D71  2D70               	goto	u3007
  8843  0D72  3200               	nop2	;nop
  8844  0D73  0008               	return
  8845  0D74                     __end_of_LCD_Init:	
  8846                           
  8847                           	psect	text23
  8848  08DB                     __ptext23:	
  8849 ;; *************** function _LCD_Clear *****************
  8850 ;; Defined at:
  8851 ;;		line 75 in file "lcd.c"
  8852 ;; Parameters:    Size  Location     Type
  8853 ;;		None
  8854 ;; Auto vars:     Size  Location     Type
  8855 ;;		None
  8856 ;; Return value:  Size  Location     Type
  8857 ;;                  1    wreg      void 
  8858 ;; Registers used:
  8859 ;;		wreg, status,2, status,0, pclath, cstack
  8860 ;; Tracked objects:
  8861 ;;		On entry : 0/0
  8862 ;;		On exit  : 0/0
  8863 ;;		Unchanged: 0/0
  8864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8868 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8869 ;;Total ram usage:        0 bytes
  8870 ;; Hardware stack levels used:    1
  8871 ;; Hardware stack levels required when called:    2
  8872 ;; This function calls:
  8873 ;;		_LCD_Cmd
  8874 ;; This function is called by:
  8875 ;;		_SYSTEM_Initialize
  8876 ;;		_main
  8877 ;; This function uses a non-reentrant model
  8878 ;;
  8879                           
  8880                           
  8881                           ;psect for function _LCD_Clear
  8882  08DB                     _LCD_Clear:	
  8883                           
  8884                           ;lcd.c: 77: LCD_Cmd(0);
  8885                           
  8886                           ;incstack = 0
  8887                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  8888  08DB  3000               	movlw	0
  8889  08DC  3189  2115  3188   	fcall	_LCD_Cmd
  8890                           
  8891                           ;lcd.c: 78: LCD_Cmd(1);
  8892  08DF  3001               	movlw	1
  8893  08E0  3189  2115         	fcall	_LCD_Cmd
  8894  08E2  0008               	return
  8895  08E3                     __end_of_LCD_Clear:	
  8896                           
  8897                           	psect	text24
  8898  0A30                     __ptext24:	
  8899 ;; *************** function _InitCustomChars *****************
  8900 ;; Defined at:
  8901 ;;		line 29 in file "lcd.c"
  8902 ;; Parameters:    Size  Location     Type
  8903 ;;		None
  8904 ;; Auto vars:     Size  Location     Type
  8905 ;;  i               1    6[COMMON] unsigned char 
  8906 ;; Return value:  Size  Location     Type
  8907 ;;                  1    wreg      void 
  8908 ;; Registers used:
  8909 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8910 ;; Tracked objects:
  8911 ;;		On entry : 0/0
  8912 ;;		On exit  : 0/0
  8913 ;;		Unchanged: 0/0
  8914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8916 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8917 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8918 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8919 ;;Total ram usage:        2 bytes
  8920 ;; Hardware stack levels used:    1
  8921 ;; Hardware stack levels required when called:    2
  8922 ;; This function calls:
  8923 ;;		_LCD_Cmd
  8924 ;;		_LCD_Write_Char
  8925 ;; This function is called by:
  8926 ;;		_SYSTEM_Initialize
  8927 ;; This function uses a non-reentrant model
  8928 ;;
  8929                           
  8930                           
  8931                           ;psect for function _InitCustomChars
  8932  0A30                     _InitCustomChars:	
  8933                           
  8934                           ;lcd.c: 31: uint8_t i;
  8935                           ;lcd.c: 32: LCD_Cmd(0x04);
  8936                           
  8937                           ;incstack = 0
  8938                           ; Regs used in _InitCustomChars: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8939  0A30  3004               	movlw	4
  8940  0A31  3189  2115  318A   	fcall	_LCD_Cmd
  8941                           
  8942                           ;lcd.c: 33: LCD_Cmd(0x00);
  8943  0A34  3000               	movlw	0
  8944  0A35  3189  2115  318A   	fcall	_LCD_Cmd
  8945                           
  8946                           ;lcd.c: 34: for (i = 0; i < sizeof(__cgram) ; i++)
  8947  0A38  01F6               	clrf	InitCustomChars@i
  8948  0A39  3018               	movlw	24
  8949  0A3A  0276               	subwf	InitCustomChars@i,w
  8950  0A3B  1803               	btfsc	3,0
  8951  0A3C  2A4E               	goto	l1993
  8952  0A3D                     l1987:	
  8953                           
  8954                           ;lcd.c: 35: LCD_Write_Char(__cgram[i]);
  8955  0A3D  0876               	movf	InitCustomChars@i,w
  8956  0A3E  3E20               	addlw	(low (___cgram| (0+256)))& (0+255)
  8957  0A3F  0086               	movwf	6
  8958  0A40  3001               	movlw	1	; select bank2/3
  8959  0A41  0087               	movwf	7
  8960  0A42  0801               	movf	1,w
  8961  0A43  318A  2256  318A   	fcall	_LCD_Write_Char
  8962  0A46  3001               	movlw	1
  8963  0A47  00F5               	movwf	??_InitCustomChars
  8964  0A48  0875               	movf	??_InitCustomChars,w
  8965  0A49  07F6               	addwf	InitCustomChars@i,f
  8966  0A4A  3018               	movlw	24
  8967  0A4B  0276               	subwf	InitCustomChars@i,w
  8968  0A4C  1C03               	skipc
  8969  0A4D  2A3D               	goto	l1987
  8970  0A4E                     l1993:	
  8971                           
  8972                           ;lcd.c: 36: LCD_Cmd(0);
  8973  0A4E  3000               	movlw	0
  8974  0A4F  3189  2115  318A   	fcall	_LCD_Cmd
  8975                           
  8976                           ;lcd.c: 37: LCD_Cmd(2);
  8977  0A52  3002               	movlw	2
  8978  0A53  3189  2115         	fcall	_LCD_Cmd
  8979  0A55  0008               	return
  8980  0A56                     __end_of_InitCustomChars:	
  8981                           
  8982                           	psect	text25
  8983  0980                     __ptext25:	
  8984 ;; *************** function _ADCC_Initialize *****************
  8985 ;; Defined at:
  8986 ;;		line 19 in file "adcc.c"
  8987 ;; Parameters:    Size  Location     Type
  8988 ;;		None
  8989 ;; Auto vars:     Size  Location     Type
  8990 ;;		None
  8991 ;; Return value:  Size  Location     Type
  8992 ;;                  1    wreg      void 
  8993 ;; Registers used:
  8994 ;;		wreg, status,2
  8995 ;; Tracked objects:
  8996 ;;		On entry : 0/0
  8997 ;;		On exit  : 0/0
  8998 ;;		Unchanged: 0/0
  8999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9003 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9004 ;;Total ram usage:        0 bytes
  9005 ;; Hardware stack levels used:    1
  9006 ;; This function calls:
  9007 ;;		Nothing
  9008 ;; This function is called by:
  9009 ;;		_SYSTEM_Initialize
  9010 ;; This function uses a non-reentrant model
  9011 ;;
  9012                           
  9013                           
  9014                           ;psect for function _ADCC_Initialize
  9015  0980                     _ADCC_Initialize:	
  9016                           
  9017                           ;adcc.c: 22: ADCON1 = 0x00;
  9018                           
  9019                           ;incstack = 0
  9020                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
  9021  0980  0021               	movlb	1	; select bank1
  9022  0981  0194               	clrf	20	;volatile
  9023                           
  9024                           ;adcc.c: 24: ADCON2 = 0x00;
  9025  0982  0195               	clrf	21	;volatile
  9026                           
  9027                           ;adcc.c: 26: ADCON3 = 0x00;
  9028  0983  0196               	clrf	22	;volatile
  9029                           
  9030                           ;adcc.c: 28: ADACT = 0x00;
  9031  0984  0199               	clrf	25	;volatile
  9032                           
  9033                           ;adcc.c: 30: ADSTAT = 0x00;
  9034  0985  0197               	clrf	23	;volatile
  9035                           
  9036                           ;adcc.c: 32: ADCLK = 0x0F;
  9037  0986  300F               	movlw	15
  9038  0987  0098               	movwf	24	;volatile
  9039                           
  9040                           ;adcc.c: 35: ADREF = 0x00;
  9041  0988  019A               	clrf	26	;volatile
  9042                           
  9043                           ;adcc.c: 37: ADCAP = 0x00;
  9044  0989  019B               	clrf	27	;volatile
  9045                           
  9046                           ;adcc.c: 39: ADPRE = 0x00;
  9047  098A  019C               	clrf	28	;volatile
  9048                           
  9049                           ;adcc.c: 41: ADACQ = 0x00;
  9050  098B  019D               	clrf	29	;volatile
  9051                           
  9052                           ;adcc.c: 43: ADPCH = 0x00;
  9053  098C  019E               	clrf	30	;volatile
  9054                           
  9055                           ;adcc.c: 45: ADRPT = 0x00;
  9056  098D  0022               	movlb	2	; select bank2
  9057  098E  018D               	clrf	13	;volatile
  9058                           
  9059                           ;adcc.c: 47: ADLTHL = 0x00;
  9060  098F  018E               	clrf	14	;volatile
  9061                           
  9062                           ;adcc.c: 49: ADLTHH = 0x00;
  9063  0990  018F               	clrf	15	;volatile
  9064                           
  9065                           ;adcc.c: 51: ADUTHL = 0x00;
  9066  0991  0190               	clrf	16	;volatile
  9067                           
  9068                           ;adcc.c: 53: ADUTHH = 0x00;
  9069  0992  0191               	clrf	17	;volatile
  9070                           
  9071                           ;adcc.c: 55: ADSTPTL = 0x00;
  9072  0993  0192               	clrf	18	;volatile
  9073                           
  9074                           ;adcc.c: 57: ADSTPTH = 0x00;
  9075  0994  0193               	clrf	19	;volatile
  9076                           
  9077                           ;adcc.c: 60: ADCON0 = 0x84;
  9078  0995  3084               	movlw	132
  9079  0996  0021               	movlb	1	; select bank1
  9080  0997  0093               	movwf	19	;volatile
  9081  0998  0008               	return
  9082  0999                     __end_of_ADCC_Initialize:	
  9083                           
  9084                           	psect	text26
  9085  093A                     __ptext26:	
  9086 ;; *************** function _PWM6_LoadDutyValue *****************
  9087 ;; Defined at:
  9088 ;;		line 14 in file "pwm6.c"
  9089 ;; Parameters:    Size  Location     Type
  9090 ;;  dutyCycle       2    0[COMMON] unsigned int 
  9091 ;; Auto vars:     Size  Location     Type
  9092 ;;		None
  9093 ;; Return value:  Size  Location     Type
  9094 ;;                  1    wreg      void 
  9095 ;; Registers used:
  9096 ;;		wreg, status,2, status,0
  9097 ;; Tracked objects:
  9098 ;;		On entry : 0/0
  9099 ;;		On exit  : 0/0
  9100 ;;		Unchanged: 0/0
  9101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9102 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9104 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9105 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9106 ;;Total ram usage:        4 bytes
  9107 ;; Hardware stack levels used:    1
  9108 ;; This function calls:
  9109 ;;		Nothing
  9110 ;; This function is called by:
  9111 ;;		_main
  9112 ;; This function uses a non-reentrant model
  9113 ;;
  9114                           
  9115                           
  9116                           ;psect for function _PWM6_LoadDutyValue
  9117  093A                     _PWM6_LoadDutyValue:	
  9118                           
  9119                           ;pwm6.c: 16: PWM6DCH = (dutyCycle & 0x03FC)>>2;
  9120                           
  9121                           ;incstack = 0
  9122                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
  9123  093A  0871               	movf	PWM6_LoadDutyValue@dutyCycle+1,w
  9124  093B  00F3               	movwf	??_PWM6_LoadDutyValue+1
  9125  093C  0870               	movf	PWM6_LoadDutyValue@dutyCycle,w
  9126  093D  00F2               	movwf	??_PWM6_LoadDutyValue
  9127  093E  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
  9128  093F  0CF2               	rrf	??_PWM6_LoadDutyValue,f
  9129  0940  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
  9130  0941  0CF2               	rrf	??_PWM6_LoadDutyValue,f
  9131  0942  0872               	movf	??_PWM6_LoadDutyValue,w
  9132  0943  0027               	movlb	7	; select bank7
  9133  0944  008D               	movwf	13	;volatile
  9134                           
  9135                           ;pwm6.c: 18: PWM6DCL = (dutyCycle & 0x0003)<<6;
  9136  0945  0870               	movf	PWM6_LoadDutyValue@dutyCycle,w
  9137  0946  3903               	andlw	3
  9138  0947  00F2               	movwf	??_PWM6_LoadDutyValue
  9139  0948  3005               	movlw	5
  9140  0949                     u2605:	
  9141  0949  35F2               	lslf	??_PWM6_LoadDutyValue,f
  9142  094A  3EFF               	addlw	-1
  9143  094B  1D03               	skipz
  9144  094C  2949               	goto	u2605
  9145  094D  3572               	lslf	??_PWM6_LoadDutyValue,w
  9146  094E  008C               	movwf	12	;volatile
  9147  094F  0008               	return
  9148  0950                     __end_of_PWM6_LoadDutyValue:	
  9149                           
  9150                           	psect	text27
  9151  0999                     __ptext27:	
  9152 ;; *************** function _LCD_Write_String *****************
  9153 ;; Defined at:
  9154 ;;		line 239 in file "lcd.c"
  9155 ;; Parameters:    Size  Location     Type
  9156 ;;  a               2    5[COMMON] PTR const unsigned char 
  9157 ;;		 -> STR_12(2), STR_11(2), STR_10(2), STR_9(2), 
  9158 ;;		 -> STR_8(2), STR_7(2), STR_6(2), STR_5(2), 
  9159 ;;		 -> STR_4(2), STR_3(2), STR_2(2), STR_1(2), 
  9160 ;; Auto vars:     Size  Location     Type
  9161 ;;  i               2    8[COMMON] int 
  9162 ;; Return value:  Size  Location     Type
  9163 ;;                  1    wreg      void 
  9164 ;; Registers used:
  9165 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9166 ;; Tracked objects:
  9167 ;;		On entry : 0/0
  9168 ;;		On exit  : 0/0
  9169 ;;		Unchanged: 0/0
  9170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9171 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9172 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9173 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9174 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9175 ;;Total ram usage:        5 bytes
  9176 ;; Hardware stack levels used:    1
  9177 ;; Hardware stack levels required when called:    2
  9178 ;; This function calls:
  9179 ;;		_LCD_Write_Char
  9180 ;; This function is called by:
  9181 ;;		_main
  9182 ;; This function uses a non-reentrant model
  9183 ;;
  9184                           
  9185                           
  9186                           ;psect for function _LCD_Write_String
  9187  0999                     _LCD_Write_String:	
  9188                           
  9189                           ;lcd.c: 241: int i;
  9190                           ;lcd.c: 242: for(i=0;a[i]!='\0';i++)
  9191                           
  9192                           ;incstack = 0
  9193                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9194  0999  01F8               	clrf	LCD_Write_String@i
  9195  099A  01F9               	clrf	LCD_Write_String@i+1
  9196  099B                     l2335:	
  9197  099B  0875               	movf	LCD_Write_String@a,w
  9198  099C  0778               	addwf	LCD_Write_String@i,w
  9199  099D  0084               	movwf	4
  9200  099E  0876               	movf	LCD_Write_String@a+1,w
  9201  099F  3D79               	addwfc	LCD_Write_String@i+1,w
  9202  09A0  0085               	movwf	5
  9203  09A1  0012               	moviw fsr0++
  9204  09A2  1903               	btfsc	3,2
  9205  09A3  0008               	return
  9206                           
  9207                           ;lcd.c: 243: LCD_Write_Char(a[i]);
  9208  09A4  0875               	movf	LCD_Write_String@a,w
  9209  09A5  0778               	addwf	LCD_Write_String@i,w
  9210  09A6  0084               	movwf	4
  9211  09A7  0876               	movf	LCD_Write_String@a+1,w
  9212  09A8  3D79               	addwfc	LCD_Write_String@i+1,w
  9213  09A9  0085               	movwf	5
  9214  09AA  0800               	movf	0,w	;code access
  9215  09AB  318A  2256  3189   	fcall	_LCD_Write_Char
  9216  09AE  3001               	movlw	1
  9217  09AF  07F8               	addwf	LCD_Write_String@i,f
  9218  09B0  3000               	movlw	0
  9219  09B1  3DF9               	addwfc	LCD_Write_String@i+1,f
  9220  09B2  299B               	goto	l2335
  9221  09B3                     __end_of_LCD_Write_String:	
  9222                           
  9223                           	psect	text28
  9224  0014                     __ptext28:	
  9225 ;; *************** function _LCD_Write_Int *****************
  9226 ;; Defined at:
  9227 ;;		line 246 in file "lcd.c"
  9228 ;; Parameters:    Size  Location     Type
  9229 ;;  value           2    9[COMMON] int 
  9230 ;;  fieldLength     1   11[COMMON] char 
  9231 ;;  numPlaces       1   12[COMMON] char 
  9232 ;;  sign            1   13[COMMON] char 
  9233 ;; Auto vars:     Size  Location     Type
  9234 ;;  str             5    5[BANK0 ] unsigned char [5]
  9235 ;;  i               2   12[BANK0 ] int 
  9236 ;;  j               2   10[BANK0 ] int 
  9237 ;; Return value:  Size  Location     Type
  9238 ;;                  1    wreg      void 
  9239 ;; Registers used:
  9240 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9241 ;; Tracked objects:
  9242 ;;		On entry : 0/0
  9243 ;;		On exit  : 0/0
  9244 ;;		Unchanged: 0/0
  9245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9246 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9247 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9248 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9249 ;;      Totals:         5      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9250 ;;Total ram usage:       19 bytes
  9251 ;; Hardware stack levels used:    1
  9252 ;; Hardware stack levels required when called:    2
  9253 ;; This function calls:
  9254 ;;		_LCD_Write_Char
  9255 ;;		___awdiv
  9256 ;;		___awmod
  9257 ;; This function is called by:
  9258 ;;		_main
  9259 ;; This function uses a non-reentrant model
  9260 ;;
  9261                           
  9262                           
  9263                           ;psect for function _LCD_Write_Int
  9264  0014                     _LCD_Write_Int:	
  9265                           
  9266                           ;lcd.c: 248: char str[5]={0,0,0,0,0};
  9267                           
  9268                           ;incstack = 0
  9269                           ; Regs used in _LCD_Write_Int: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9270  0014  3060               	movlw	low LCD_Write_Int@F13685
  9271  0015  0086               	movwf	6
  9272  0016  3000               	movlw	high LCD_Write_Int@F13685
  9273  0017  0087               	movwf	7
  9274  0018  3025               	movlw	low LCD_Write_Int@str
  9275  0019  0084               	movwf	4
  9276  001A  3000               	movlw	high LCD_Write_Int@str
  9277  001B  0085               	movwf	5
  9278  001C  3005               	movlw	5
  9279  001D  0020               	movlb	0	; select bank0
  9280  001E  00A0               	movwf	??_LCD_Write_Int
  9281  001F                     u2510:	
  9282  001F  0016               	moviw fsr1++
  9283  0020  001A               	movwi fsr0++
  9284  0021  0BA0               	decfsz	??_LCD_Write_Int,f
  9285  0022  281F               	goto	u2510
  9286                           
  9287                           ;lcd.c: 249: int i=4,j=0;
  9288  0023  3004               	movlw	4
  9289  0024  00AC               	movwf	LCD_Write_Int@i
  9290  0025  3000               	movlw	0
  9291  0026  00AD               	movwf	LCD_Write_Int@i+1
  9292  0027  01AA               	clrf	LCD_Write_Int@j
  9293  0028  01AB               	clrf	LCD_Write_Int@j+1
  9294                           
  9295                           ;lcd.c: 251: if(value<0)
  9296  0029  1FFA               	btfss	LCD_Write_Int@value+1,7
  9297  002A  2835               	goto	l2349
  9298                           
  9299                           ;lcd.c: 252: {
  9300                           ;lcd.c: 253: LCD_Write_Char('-');
  9301  002B  302D               	movlw	45
  9302  002C  318A  2256  3180   	fcall	_LCD_Write_Char
  9303                           
  9304                           ;lcd.c: 254: value=value*-1;
  9305  002F  09F9               	comf	LCD_Write_Int@value,f
  9306  0030  09FA               	comf	LCD_Write_Int@value+1,f
  9307  0031  0AF9               	incf	LCD_Write_Int@value,f
  9308  0032  1903               	skipnz
  9309  0033  0AFA               	incf	LCD_Write_Int@value+1,f
  9310                           
  9311                           ;lcd.c: 255: }
  9312  0034  283C               	goto	l2359
  9313  0035                     l2349:	
  9314                           
  9315                           ;lcd.c: 257: else
  9316                           ;lcd.c: 258: {
  9317                           ;lcd.c: 259: if(sign == 1)
  9318  0035  037D               	decf	LCD_Write_Int@sign,w
  9319  0036  1D03               	btfss	3,2
  9320  0037  283C               	goto	l2359
  9321                           
  9322                           ;lcd.c: 260: {
  9323                           ;lcd.c: 261: LCD_Write_Char('+');
  9324  0038  302B               	movlw	43
  9325  0039  318A  2256  3180   	fcall	_LCD_Write_Char
  9326  003C                     l2359:	
  9327                           ;lcd.c: 262: }
  9328                           ;lcd.c: 263: }
  9329                           ;lcd.c: 265: while(value)
  9330                           
  9331  003C  0879               	movf	LCD_Write_Int@value,w
  9332  003D  047A               	iorwf	LCD_Write_Int@value+1,w
  9333  003E  1903               	btfsc	3,2
  9334  003F  2869               	goto	l2361
  9335                           
  9336                           ;lcd.c: 266: {
  9337                           ;lcd.c: 267: str[i]=value%10;
  9338  0040  300A               	movlw	10
  9339  0041  00F0               	movwf	___awmod@divisor
  9340  0042  3000               	movlw	0
  9341  0043  00F1               	movwf	___awmod@divisor+1
  9342  0044  087A               	movf	LCD_Write_Int@value+1,w
  9343  0045  00F3               	movwf	___awmod@dividend+1
  9344  0046  0879               	movf	LCD_Write_Int@value,w
  9345  0047  00F2               	movwf	___awmod@dividend
  9346  0048  318B  239F  3180   	fcall	___awmod
  9347  004B  0870               	movf	?___awmod,w
  9348  004C  0020               	movlb	0	; select bank0
  9349  004D  00A0               	movwf	??_LCD_Write_Int
  9350  004E  082C               	movf	LCD_Write_Int@i,w
  9351  004F  3E25               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
  9352  0050  0086               	movwf	6
  9353  0051  0187               	clrf	7
  9354  0052  0820               	movf	??_LCD_Write_Int,w
  9355  0053  0081               	movwf	1
  9356                           
  9357                           ;lcd.c: 268: value=value/10;
  9358  0054  300A               	movlw	10
  9359  0055  00F0               	movwf	___awdiv@divisor
  9360  0056  3000               	movlw	0
  9361  0057  00F1               	movwf	___awdiv@divisor+1
  9362  0058  087A               	movf	LCD_Write_Int@value+1,w
  9363  0059  00F3               	movwf	___awdiv@dividend+1
  9364  005A  0879               	movf	LCD_Write_Int@value,w
  9365  005B  00F2               	movwf	___awdiv@dividend
  9366  005C  318B  23E4  3180   	fcall	___awdiv
  9367  005F  0871               	movf	?___awdiv+1,w
  9368  0060  00FA               	movwf	LCD_Write_Int@value+1
  9369  0061  0870               	movf	?___awdiv,w
  9370  0062  00F9               	movwf	LCD_Write_Int@value
  9371                           
  9372                           ;lcd.c: 269: i--;
  9373  0063  30FF               	movlw	255
  9374  0064  0020               	movlb	0	; select bank0
  9375  0065  07AC               	addwf	LCD_Write_Int@i,f
  9376  0066  30FF               	movlw	255
  9377  0067  3DAD               	addwfc	LCD_Write_Int@i+1,f
  9378  0068  283C               	goto	l2359
  9379  0069                     l2361:	
  9380                           
  9381                           ;lcd.c: 270: }
  9382                           ;lcd.c: 271: if(fieldLength==-1)
  9383  0069  0A7B               	incf	LCD_Write_Int@fieldLength,w
  9384  006A  1903               	btfsc	3,2
  9385  006B  2872               	goto	l2367
  9386  006C  287B               	goto	l2369
  9387  006D                     l2365:	
  9388                           ;lcd.c: 272: {
  9389                           ;lcd.c: 273: while(str[j]==0)
  9390                           
  9391                           
  9392                           ;lcd.c: 274: {
  9393                           ;lcd.c: 275: j++;
  9394  006D  3001               	movlw	1
  9395  006E  0020               	movlb	0	; select bank0
  9396  006F  07AA               	addwf	LCD_Write_Int@j,f
  9397  0070  3000               	movlw	0
  9398  0071  3DAB               	addwfc	LCD_Write_Int@j+1,f
  9399  0072                     l2367:	
  9400  0072  0020               	movlb	0	; select bank0
  9401  0073  082A               	movf	LCD_Write_Int@j,w
  9402  0074  3E25               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
  9403  0075  0086               	movwf	6
  9404  0076  0187               	clrf	7
  9405  0077  0801               	movf	1,w
  9406  0078  1D03               	btfss	3,2
  9407  0079  288C               	goto	l2371
  9408  007A  286D               	goto	l2365
  9409  007B                     l2369:	
  9410                           ;lcd.c: 276: }
  9411                           ;lcd.c: 277: }
  9412                           
  9413                           
  9414                           ;lcd.c: 278: else
  9415                           ;lcd.c: 279: {
  9416                           ;lcd.c: 280: j=5-fieldLength;
  9417  007B  087B               	movf	LCD_Write_Int@fieldLength,w
  9418  007C  0020               	movlb	0	; select bank0
  9419  007D  00A0               	movwf	??_LCD_Write_Int
  9420  007E  01A1               	clrf	??_LCD_Write_Int+1
  9421  007F  1BA0               	btfsc	??_LCD_Write_Int,7
  9422  0080  03A1               	decf	??_LCD_Write_Int+1,f
  9423  0081  09A0               	comf	??_LCD_Write_Int,f
  9424  0082  09A1               	comf	??_LCD_Write_Int+1,f
  9425  0083  0AA0               	incf	??_LCD_Write_Int,f
  9426  0084  1903               	skipnz
  9427  0085  0AA1               	incf	??_LCD_Write_Int+1,f
  9428  0086  0820               	movf	??_LCD_Write_Int,w
  9429  0087  3E05               	addlw	5
  9430  0088  00AA               	movwf	LCD_Write_Int@j
  9431  0089  3000               	movlw	0
  9432  008A  3D21               	addwfc	??_LCD_Write_Int+1,w
  9433  008B  00AB               	movwf	LCD_Write_Int@j+1
  9434  008C                     l2371:	
  9435                           
  9436                           ;lcd.c: 281: }
  9437                           ;lcd.c: 283: for(i=j;i<(5-numPlaces);i++)
  9438  008C  082B               	movf	LCD_Write_Int@j+1,w
  9439  008D  00AD               	movwf	LCD_Write_Int@i+1
  9440  008E  082A               	movf	LCD_Write_Int@j,w
  9441  008F  00AC               	movwf	LCD_Write_Int@i
  9442  0090                     l2377:	
  9443  0090  087C               	movf	LCD_Write_Int@numPlaces,w
  9444  0091  00A0               	movwf	??_LCD_Write_Int
  9445  0092  01A1               	clrf	??_LCD_Write_Int+1
  9446  0093  1BA0               	btfsc	??_LCD_Write_Int,7
  9447  0094  03A1               	decf	??_LCD_Write_Int+1,f
  9448  0095  09A0               	comf	??_LCD_Write_Int,f
  9449  0096  09A1               	comf	??_LCD_Write_Int+1,f
  9450  0097  0AA0               	incf	??_LCD_Write_Int,f
  9451  0098  1903               	skipnz
  9452  0099  0AA1               	incf	??_LCD_Write_Int+1,f
  9453  009A  0820               	movf	??_LCD_Write_Int,w
  9454  009B  3E05               	addlw	5
  9455  009C  00A2               	movwf	??_LCD_Write_Int+2
  9456  009D  3000               	movlw	0
  9457  009E  3D21               	addwfc	??_LCD_Write_Int+1,w
  9458  009F  00A3               	movwf	??_LCD_Write_Int+3
  9459  00A0  082D               	movf	LCD_Write_Int@i+1,w
  9460  00A1  3A80               	xorlw	128
  9461  00A2  00A4               	movwf	??_LCD_Write_Int+4
  9462  00A3  0823               	movf	??_LCD_Write_Int+3,w
  9463  00A4  3A80               	xorlw	128
  9464  00A5  0224               	subwf	??_LCD_Write_Int+4,w
  9465  00A6  1D03               	skipz
  9466  00A7  28AA               	goto	u2575
  9467  00A8  0822               	movf	??_LCD_Write_Int+2,w
  9468  00A9  022C               	subwf	LCD_Write_Int@i,w
  9469  00AA                     u2575:	
  9470  00AA  1803               	btfsc	3,0
  9471  00AB  28BC               	goto	l2379
  9472                           
  9473                           ;lcd.c: 284: {
  9474                           ;lcd.c: 285: LCD_Write_Char(48+str[i]);
  9475  00AC  0020               	movlb	0	; select bank0
  9476  00AD  082C               	movf	LCD_Write_Int@i,w
  9477  00AE  3E25               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
  9478  00AF  0086               	movwf	6
  9479  00B0  0187               	clrf	7
  9480  00B1  0801               	movf	1,w
  9481  00B2  3E30               	addlw	48
  9482  00B3  318A  2256  3180   	fcall	_LCD_Write_Char
  9483  00B6  3001               	movlw	1
  9484  00B7  0020               	movlb	0	; select bank0
  9485  00B8  07AC               	addwf	LCD_Write_Int@i,f
  9486  00B9  3000               	movlw	0
  9487  00BA  3DAD               	addwfc	LCD_Write_Int@i+1,f
  9488  00BB  2890               	goto	l2377
  9489  00BC                     l2379:	
  9490                           
  9491                           ;lcd.c: 286: }
  9492                           ;lcd.c: 288: if(numPlaces == 1)
  9493  00BC  037C               	decf	LCD_Write_Int@numPlaces,w
  9494  00BD  1D03               	btfss	3,2
  9495  00BE  28C9               	goto	l2383
  9496                           
  9497                           ;lcd.c: 289: {
  9498                           ;lcd.c: 290: LCD_Write_Char(46);
  9499  00BF  302E               	movlw	46
  9500  00C0  318A  2256  3180   	fcall	_LCD_Write_Char
  9501                           
  9502                           ;lcd.c: 291: LCD_Write_Char(48+str[4]);
  9503  00C3  0020               	movlb	0	; select bank0
  9504  00C4  0829               	movf	LCD_Write_Int@str+4,w
  9505  00C5  3E30               	addlw	48
  9506  00C6  318A  2256  3180   	fcall	_LCD_Write_Char
  9507  00C9                     l2383:	
  9508                           
  9509                           ;lcd.c: 292: }
  9510                           ;lcd.c: 294: if(numPlaces == 2)
  9511  00C9  3002               	movlw	2
  9512  00CA  067C               	xorwf	LCD_Write_Int@numPlaces,w
  9513  00CB  1D03               	btfss	3,2
  9514  00CC  0008               	return
  9515                           
  9516                           ;lcd.c: 295: {
  9517                           ;lcd.c: 296: LCD_Write_Char(46);
  9518  00CD  302E               	movlw	46
  9519  00CE  318A  2256  3180   	fcall	_LCD_Write_Char
  9520                           
  9521                           ;lcd.c: 297: LCD_Write_Char(48+str[3]);
  9522  00D1  0020               	movlb	0	; select bank0
  9523  00D2  0828               	movf	LCD_Write_Int@str+3,w
  9524  00D3  3E30               	addlw	48
  9525  00D4  318A  2256  3180   	fcall	_LCD_Write_Char
  9526                           
  9527                           ;lcd.c: 298: LCD_Write_Char(48+str[4]);
  9528  00D7  0020               	movlb	0	; select bank0
  9529  00D8  0829               	movf	LCD_Write_Int@str+4,w
  9530  00D9  3E30               	addlw	48
  9531  00DA  318A  2256         	fcall	_LCD_Write_Char
  9532  00DC  0008               	return
  9533  00DD                     __end_of_LCD_Write_Int:	
  9534                           
  9535                           	psect	text29
  9536  0B9F                     __ptext29:	
  9537 ;; *************** function ___awmod *****************
  9538 ;; Defined at:
  9539 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c"
  9540 ;; Parameters:    Size  Location     Type
  9541 ;;  divisor         2    0[COMMON] int 
  9542 ;;  dividend        2    2[COMMON] int 
  9543 ;; Auto vars:     Size  Location     Type
  9544 ;;  sign            1    6[COMMON] unsigned char 
  9545 ;;  counter         1    5[COMMON] unsigned char 
  9546 ;; Return value:  Size  Location     Type
  9547 ;;                  2    0[COMMON] int 
  9548 ;; Registers used:
  9549 ;;		wreg, status,2, status,0
  9550 ;; Tracked objects:
  9551 ;;		On entry : 0/0
  9552 ;;		On exit  : 0/0
  9553 ;;		Unchanged: 0/0
  9554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9555 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9556 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9557 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9558 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9559 ;;Total ram usage:        7 bytes
  9560 ;; Hardware stack levels used:    1
  9561 ;; This function calls:
  9562 ;;		Nothing
  9563 ;; This function is called by:
  9564 ;;		_LCD_Write_Int
  9565 ;; This function uses a non-reentrant model
  9566 ;;
  9567                           
  9568                           
  9569                           ;psect for function ___awmod
  9570  0B9F                     ___awmod:	
  9571                           
  9572                           ;incstack = 0
  9573                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  9574  0B9F  01F6               	clrf	___awmod@sign
  9575  0BA0  1FF3               	btfss	___awmod@dividend+1,7
  9576  0BA1  2BA9               	goto	l2195
  9577  0BA2  09F2               	comf	___awmod@dividend,f
  9578  0BA3  09F3               	comf	___awmod@dividend+1,f
  9579  0BA4  0AF2               	incf	___awmod@dividend,f
  9580  0BA5  1903               	skipnz
  9581  0BA6  0AF3               	incf	___awmod@dividend+1,f
  9582  0BA7  01F6               	clrf	___awmod@sign
  9583  0BA8  0AF6               	incf	___awmod@sign,f
  9584  0BA9                     l2195:	
  9585  0BA9  1FF1               	btfss	___awmod@divisor+1,7
  9586  0BAA  2BB0               	goto	l2199
  9587  0BAB  09F0               	comf	___awmod@divisor,f
  9588  0BAC  09F1               	comf	___awmod@divisor+1,f
  9589  0BAD  0AF0               	incf	___awmod@divisor,f
  9590  0BAE  1903               	skipnz
  9591  0BAF  0AF1               	incf	___awmod@divisor+1,f
  9592  0BB0                     l2199:	
  9593  0BB0  0870               	movf	___awmod@divisor,w
  9594  0BB1  0471               	iorwf	___awmod@divisor+1,w
  9595  0BB2  1903               	btfsc	3,2
  9596  0BB3  2BD7               	goto	l2217
  9597  0BB4  01F5               	clrf	___awmod@counter
  9598  0BB5  0AF5               	incf	___awmod@counter,f
  9599  0BB6                     l2207:	
  9600  0BB6  1BF1               	btfsc	___awmod@divisor+1,7
  9601  0BB7  2BC2               	goto	l2209
  9602  0BB8  3001               	movlw	1
  9603  0BB9                     u2245:	
  9604  0BB9  35F0               	lslf	___awmod@divisor,f
  9605  0BBA  0DF1               	rlf	___awmod@divisor+1,f
  9606  0BBB  0B89               	decfsz	9,f
  9607  0BBC  2BB9               	goto	u2245
  9608  0BBD  3001               	movlw	1
  9609  0BBE  00F4               	movwf	??___awmod
  9610  0BBF  0874               	movf	??___awmod,w
  9611  0BC0  07F5               	addwf	___awmod@counter,f
  9612  0BC1  2BB6               	goto	l2207
  9613  0BC2                     l2209:	
  9614  0BC2  0871               	movf	___awmod@divisor+1,w
  9615  0BC3  0273               	subwf	___awmod@dividend+1,w
  9616  0BC4  1D03               	skipz
  9617  0BC5  2BC8               	goto	u2265
  9618  0BC6  0870               	movf	___awmod@divisor,w
  9619  0BC7  0272               	subwf	___awmod@dividend,w
  9620  0BC8                     u2265:	
  9621  0BC8  1C03               	skipc
  9622  0BC9  2BCE               	goto	l2213
  9623  0BCA  0870               	movf	___awmod@divisor,w
  9624  0BCB  02F2               	subwf	___awmod@dividend,f
  9625  0BCC  0871               	movf	___awmod@divisor+1,w
  9626  0BCD  3BF3               	subwfb	___awmod@dividend+1,f
  9627  0BCE                     l2213:	
  9628  0BCE  3001               	movlw	1
  9629  0BCF                     u2275:	
  9630  0BCF  36F1               	lsrf	___awmod@divisor+1,f
  9631  0BD0  0CF0               	rrf	___awmod@divisor,f
  9632  0BD1  0B89               	decfsz	9,f
  9633  0BD2  2BCF               	goto	u2275
  9634  0BD3  3001               	movlw	1
  9635  0BD4  02F5               	subwf	___awmod@counter,f
  9636  0BD5  1D03               	btfss	3,2
  9637  0BD6  2BC2               	goto	l2209
  9638  0BD7                     l2217:	
  9639  0BD7  0876               	movf	___awmod@sign,w
  9640  0BD8  1903               	btfsc	3,2
  9641  0BD9  2BDF               	goto	l2221
  9642  0BDA  09F2               	comf	___awmod@dividend,f
  9643  0BDB  09F3               	comf	___awmod@dividend+1,f
  9644  0BDC  0AF2               	incf	___awmod@dividend,f
  9645  0BDD  1903               	skipnz
  9646  0BDE  0AF3               	incf	___awmod@dividend+1,f
  9647  0BDF                     l2221:	
  9648  0BDF  0873               	movf	___awmod@dividend+1,w
  9649  0BE0  00F1               	movwf	?___awmod+1
  9650  0BE1  0872               	movf	___awmod@dividend,w
  9651  0BE2  00F0               	movwf	?___awmod
  9652  0BE3  0008               	return
  9653  0BE4                     __end_of___awmod:	
  9654                           
  9655                           	psect	text30
  9656  0BE4                     __ptext30:	
  9657 ;; *************** function ___awdiv *****************
  9658 ;; Defined at:
  9659 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c"
  9660 ;; Parameters:    Size  Location     Type
  9661 ;;  divisor         2    0[COMMON] int 
  9662 ;;  dividend        2    2[COMMON] int 
  9663 ;; Auto vars:     Size  Location     Type
  9664 ;;  quotient        2    7[COMMON] int 
  9665 ;;  sign            1    6[COMMON] unsigned char 
  9666 ;;  counter         1    5[COMMON] unsigned char 
  9667 ;; Return value:  Size  Location     Type
  9668 ;;                  2    0[COMMON] int 
  9669 ;; Registers used:
  9670 ;;		wreg, status,2, status,0
  9671 ;; Tracked objects:
  9672 ;;		On entry : 0/0
  9673 ;;		On exit  : 0/0
  9674 ;;		Unchanged: 0/0
  9675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9676 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9677 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9678 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9679 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9680 ;;Total ram usage:        9 bytes
  9681 ;; Hardware stack levels used:    1
  9682 ;; This function calls:
  9683 ;;		Nothing
  9684 ;; This function is called by:
  9685 ;;		_LCD_Write_Int
  9686 ;; This function uses a non-reentrant model
  9687 ;;
  9688                           
  9689                           
  9690                           ;psect for function ___awdiv
  9691  0BE4                     ___awdiv:	
  9692                           
  9693                           ;incstack = 0
  9694                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  9695  0BE4  01F6               	clrf	___awdiv@sign
  9696  0BE5  1FF1               	btfss	___awdiv@divisor+1,7
  9697  0BE6  2BEE               	goto	l2151
  9698  0BE7  09F0               	comf	___awdiv@divisor,f
  9699  0BE8  09F1               	comf	___awdiv@divisor+1,f
  9700  0BE9  0AF0               	incf	___awdiv@divisor,f
  9701  0BEA  1903               	skipnz
  9702  0BEB  0AF1               	incf	___awdiv@divisor+1,f
  9703  0BEC  01F6               	clrf	___awdiv@sign
  9704  0BED  0AF6               	incf	___awdiv@sign,f
  9705  0BEE                     l2151:	
  9706  0BEE  1FF3               	btfss	___awdiv@dividend+1,7
  9707  0BEF  2BF9               	goto	l2157
  9708  0BF0  09F2               	comf	___awdiv@dividend,f
  9709  0BF1  09F3               	comf	___awdiv@dividend+1,f
  9710  0BF2  0AF2               	incf	___awdiv@dividend,f
  9711  0BF3  1903               	skipnz
  9712  0BF4  0AF3               	incf	___awdiv@dividend+1,f
  9713  0BF5  3001               	movlw	1
  9714  0BF6  00F4               	movwf	??___awdiv
  9715  0BF7  0874               	movf	??___awdiv,w
  9716  0BF8  06F6               	xorwf	___awdiv@sign,f
  9717  0BF9                     l2157:	
  9718  0BF9  01F7               	clrf	___awdiv@quotient
  9719  0BFA  01F8               	clrf	___awdiv@quotient+1
  9720  0BFB  0870               	movf	___awdiv@divisor,w
  9721  0BFC  0471               	iorwf	___awdiv@divisor+1,w
  9722  0BFD  1903               	btfsc	3,2
  9723  0BFE  2C28               	goto	l2179
  9724  0BFF  01F5               	clrf	___awdiv@counter
  9725  0C00  0AF5               	incf	___awdiv@counter,f
  9726  0C01                     l2167:	
  9727  0C01  1BF1               	btfsc	___awdiv@divisor+1,7
  9728  0C02  2C0D               	goto	l2169
  9729  0C03  3001               	movlw	1
  9730  0C04                     u2145:	
  9731  0C04  35F0               	lslf	___awdiv@divisor,f
  9732  0C05  0DF1               	rlf	___awdiv@divisor+1,f
  9733  0C06  0B89               	decfsz	9,f
  9734  0C07  2C04               	goto	u2145
  9735  0C08  3001               	movlw	1
  9736  0C09  00F4               	movwf	??___awdiv
  9737  0C0A  0874               	movf	??___awdiv,w
  9738  0C0B  07F5               	addwf	___awdiv@counter,f
  9739  0C0C  2C01               	goto	l2167
  9740  0C0D                     l2169:	
  9741  0C0D  3001               	movlw	1
  9742  0C0E                     u2165:	
  9743  0C0E  35F7               	lslf	___awdiv@quotient,f
  9744  0C0F  0DF8               	rlf	___awdiv@quotient+1,f
  9745  0C10  0B89               	decfsz	9,f
  9746  0C11  2C0E               	goto	u2165
  9747  0C12  0871               	movf	___awdiv@divisor+1,w
  9748  0C13  0273               	subwf	___awdiv@dividend+1,w
  9749  0C14  1D03               	skipz
  9750  0C15  2C18               	goto	u2175
  9751  0C16  0870               	movf	___awdiv@divisor,w
  9752  0C17  0272               	subwf	___awdiv@dividend,w
  9753  0C18                     u2175:	
  9754  0C18  1C03               	skipc
  9755  0C19  2C1F               	goto	l2175
  9756  0C1A  0870               	movf	___awdiv@divisor,w
  9757  0C1B  02F2               	subwf	___awdiv@dividend,f
  9758  0C1C  0871               	movf	___awdiv@divisor+1,w
  9759  0C1D  3BF3               	subwfb	___awdiv@dividend+1,f
  9760  0C1E  1477               	bsf	___awdiv@quotient,0
  9761  0C1F                     l2175:	
  9762  0C1F  3001               	movlw	1
  9763  0C20                     u2185:	
  9764  0C20  36F1               	lsrf	___awdiv@divisor+1,f
  9765  0C21  0CF0               	rrf	___awdiv@divisor,f
  9766  0C22  0B89               	decfsz	9,f
  9767  0C23  2C20               	goto	u2185
  9768  0C24  3001               	movlw	1
  9769  0C25  02F5               	subwf	___awdiv@counter,f
  9770  0C26  1D03               	btfss	3,2
  9771  0C27  2C0D               	goto	l2169
  9772  0C28                     l2179:	
  9773  0C28  0876               	movf	___awdiv@sign,w
  9774  0C29  1903               	btfsc	3,2
  9775  0C2A  2C30               	goto	l2183
  9776  0C2B  09F7               	comf	___awdiv@quotient,f
  9777  0C2C  09F8               	comf	___awdiv@quotient+1,f
  9778  0C2D  0AF7               	incf	___awdiv@quotient,f
  9779  0C2E  1903               	skipnz
  9780  0C2F  0AF8               	incf	___awdiv@quotient+1,f
  9781  0C30                     l2183:	
  9782  0C30  0878               	movf	___awdiv@quotient+1,w
  9783  0C31  00F1               	movwf	?___awdiv+1
  9784  0C32  0877               	movf	___awdiv@quotient,w
  9785  0C33  00F0               	movwf	?___awdiv
  9786  0C34  0008               	return
  9787  0C35                     __end_of___awdiv:	
  9788                           
  9789                           	psect	text31
  9790  0A56                     __ptext31:	
  9791 ;; *************** function _LCD_Write_Char *****************
  9792 ;; Defined at:
  9793 ;;		line 223 in file "lcd.c"
  9794 ;; Parameters:    Size  Location     Type
  9795 ;;  a               1    wreg     const unsigned char 
  9796 ;; Auto vars:     Size  Location     Type
  9797 ;;  a               1    4[COMMON] const unsigned char 
  9798 ;;  y               1    3[COMMON] unsigned char 
  9799 ;;  temp            1    2[COMMON] unsigned char 
  9800 ;; Return value:  Size  Location     Type
  9801 ;;                  1    wreg      void 
  9802 ;; Registers used:
  9803 ;;		wreg, status,2, status,0, pclath, cstack
  9804 ;; Tracked objects:
  9805 ;;		On entry : 0/0
  9806 ;;		On exit  : 0/0
  9807 ;;		Unchanged: 0/0
  9808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9810 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9811 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9812 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9813 ;;Total ram usage:        4 bytes
  9814 ;; Hardware stack levels used:    1
  9815 ;; Hardware stack levels required when called:    1
  9816 ;; This function calls:
  9817 ;;		_LCD_Port
  9818 ;; This function is called by:
  9819 ;;		_InitCustomChars
  9820 ;;		_LCD_Write_String
  9821 ;;		_LCD_Write_Int
  9822 ;; This function uses a non-reentrant model
  9823 ;;
  9824                           
  9825                           
  9826                           ;psect for function _LCD_Write_Char
  9827  0A56                     _LCD_Write_Char:	
  9828                           
  9829                           ;incstack = 0
  9830                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  9831                           ;LCD_Write_Char@a stored from wreg
  9832  0A56  00F4               	movwf	LCD_Write_Char@a
  9833                           
  9834                           ;lcd.c: 225: char temp,y;
  9835                           ;lcd.c: 226: temp = a&0x0F;
  9836  0A57  0874               	movf	LCD_Write_Char@a,w
  9837  0A58  390F               	andlw	15
  9838  0A59  00F1               	movwf	??_LCD_Write_Char
  9839  0A5A  0871               	movf	??_LCD_Write_Char,w
  9840  0A5B  00F2               	movwf	LCD_Write_Char@temp
  9841                           
  9842                           ;lcd.c: 227: y = a&0xF0;
  9843  0A5C  0874               	movf	LCD_Write_Char@a,w
  9844  0A5D  39F0               	andlw	240
  9845  0A5E  00F1               	movwf	??_LCD_Write_Char
  9846  0A5F  0871               	movf	??_LCD_Write_Char,w
  9847  0A60  00F3               	movwf	LCD_Write_Char@y
  9848                           
  9849                           ;lcd.c: 228: RA0 = 1;
  9850  0A61  0020               	movlb	0	; select bank0
  9851  0A62  140C               	bsf	12,0	;volatile
  9852                           
  9853                           ;lcd.c: 229: LCD_Port(y>>4);
  9854  0A63  0873               	movf	LCD_Write_Char@y,w
  9855  0A64  00F1               	movwf	??_LCD_Write_Char
  9856  0A65  3004               	movlw	4
  9857  0A66                     u1545:	
  9858  0A66  36F1               	lsrf	??_LCD_Write_Char,f
  9859  0A67  0B89               	decfsz	9,f
  9860  0A68  2A66               	goto	u1545
  9861  0A69  0871               	movf	??_LCD_Write_Char,w
  9862  0A6A  3189  2150  318A   	fcall	_LCD_Port
  9863                           
  9864                           ;lcd.c: 230: RA2 = 1;
  9865  0A6D  0020               	movlb	0	; select bank0
  9866  0A6E  150C               	bsf	12,2	;volatile
  9867                           
  9868                           ;lcd.c: 231: RA2 = 0;
  9869  0A6F  110C               	bcf	12,2	;volatile
  9870                           
  9871                           ;lcd.c: 232: _delay((unsigned long)((40)*(1000000/4000000.0)));
  9872  0A70  3003               	movlw	3
  9873  0A71  00F1               	movwf	??_LCD_Write_Char
  9874  0A72                     u3017:	
  9875  0A72  0BF1               	decfsz	??_LCD_Write_Char,f
  9876  0A73  2A72               	goto	u3017
  9877                           
  9878                           ;lcd.c: 233: LCD_Port(temp);
  9879  0A74  0872               	movf	LCD_Write_Char@temp,w
  9880  0A75  3189  2150  318A   	fcall	_LCD_Port
  9881                           
  9882                           ;lcd.c: 234: RA2 = 1;
  9883  0A78  0020               	movlb	0	; select bank0
  9884  0A79  150C               	bsf	12,2	;volatile
  9885                           
  9886                           ;lcd.c: 235: RA2 = 0;
  9887  0A7A  110C               	bcf	12,2	;volatile
  9888                           
  9889                           ;lcd.c: 236: _delay((unsigned long)((40)*(1000000/4000000.0)));
  9890  0A7B  3003               	movlw	3
  9891  0A7C  00F1               	movwf	??_LCD_Write_Char
  9892  0A7D                     u3027:	
  9893  0A7D  0BF1               	decfsz	??_LCD_Write_Char,f
  9894  0A7E  2A7D               	goto	u3027
  9895  0A7F  0008               	return
  9896  0A80                     __end_of_LCD_Write_Char:	
  9897                           
  9898                           	psect	text32
  9899  0B60                     __ptext32:	
  9900 ;; *************** function _LCD_Set_Cursor *****************
  9901 ;; Defined at:
  9902 ;;		line 82 in file "lcd.c"
  9903 ;; Parameters:    Size  Location     Type
  9904 ;;  x               1    wreg     unsigned char 
  9905 ;;  y               1    3[COMMON] unsigned char 
  9906 ;; Auto vars:     Size  Location     Type
  9907 ;;  x               1    6[COMMON] unsigned char 
  9908 ;;  temp            1    9[COMMON] unsigned char 
  9909 ;;  w               1    8[COMMON] unsigned char 
  9910 ;;  z               1    7[COMMON] unsigned char 
  9911 ;; Return value:  Size  Location     Type
  9912 ;;                  1    wreg      void 
  9913 ;; Registers used:
  9914 ;;		wreg, status,2, status,0, pclath, cstack
  9915 ;; Tracked objects:
  9916 ;;		On entry : 0/0
  9917 ;;		On exit  : 0/0
  9918 ;;		Unchanged: 0/0
  9919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9920 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9921 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9922 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9923 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9924 ;;Total ram usage:        7 bytes
  9925 ;; Hardware stack levels used:    1
  9926 ;; Hardware stack levels required when called:    2
  9927 ;; This function calls:
  9928 ;;		_LCD_Cmd
  9929 ;; This function is called by:
  9930 ;;		_main
  9931 ;; This function uses a non-reentrant model
  9932 ;;
  9933                           
  9934                           
  9935                           ;psect for function _LCD_Set_Cursor
  9936  0B60                     _LCD_Set_Cursor:	
  9937                           
  9938                           ;incstack = 0
  9939                           ; Regs used in _LCD_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  9940                           ;LCD_Set_Cursor@x stored from wreg
  9941  0B60  00F6               	movwf	LCD_Set_Cursor@x
  9942                           
  9943                           ;lcd.c: 86: char temp,z,w;
  9944                           ;lcd.c: 88: if(y == 0)
  9945  0B61  0873               	movf	LCD_Set_Cursor@y,w
  9946  0B62  1D03               	btfss	3,2
  9947  0B63  2B80               	goto	l2319
  9948                           
  9949                           ;lcd.c: 89: {
  9950                           ;lcd.c: 90: temp = 0x80 + x;
  9951  0B64  0876               	movf	LCD_Set_Cursor@x,w
  9952  0B65  3E80               	addlw	128
  9953  0B66  00F4               	movwf	??_LCD_Set_Cursor
  9954  0B67  0874               	movf	??_LCD_Set_Cursor,w
  9955  0B68  00F9               	movwf	LCD_Set_Cursor@temp
  9956                           
  9957                           ;lcd.c: 91: z = temp>>4;
  9958  0B69  0879               	movf	LCD_Set_Cursor@temp,w
  9959  0B6A  00F4               	movwf	??_LCD_Set_Cursor
  9960  0B6B  3004               	movlw	4
  9961  0B6C                     u2475:	
  9962  0B6C  36F4               	lsrf	??_LCD_Set_Cursor,f
  9963  0B6D  0B89               	decfsz	9,f
  9964  0B6E  2B6C               	goto	u2475
  9965  0B6F  0874               	movf	??_LCD_Set_Cursor,w
  9966  0B70  00F5               	movwf	??_LCD_Set_Cursor+1
  9967  0B71  0875               	movf	??_LCD_Set_Cursor+1,w
  9968  0B72  00F7               	movwf	LCD_Set_Cursor@z
  9969                           
  9970                           ;lcd.c: 92: w = temp & 0x0F;
  9971  0B73  0879               	movf	LCD_Set_Cursor@temp,w
  9972  0B74  390F               	andlw	15
  9973  0B75  00F4               	movwf	??_LCD_Set_Cursor
  9974  0B76  0874               	movf	??_LCD_Set_Cursor,w
  9975  0B77  00F8               	movwf	LCD_Set_Cursor@w
  9976                           
  9977                           ;lcd.c: 93: LCD_Cmd(z);
  9978  0B78  0877               	movf	LCD_Set_Cursor@z,w
  9979  0B79  3189  2115  318B   	fcall	_LCD_Cmd
  9980                           
  9981                           ;lcd.c: 94: LCD_Cmd(w);
  9982  0B7C  0878               	movf	LCD_Set_Cursor@w,w
  9983  0B7D  3189  2115         	fcall	_LCD_Cmd
  9984                           
  9985                           ;lcd.c: 95: }
  9986  0B7F  0008               	return
  9987  0B80                     l2319:	
  9988                           
  9989                           ;lcd.c: 97: else if(y == 1)
  9990  0B80  0373               	decf	LCD_Set_Cursor@y,w
  9991  0B81  1D03               	btfss	3,2
  9992  0B82  0008               	return
  9993                           
  9994                           ;lcd.c: 98: {
  9995                           ;lcd.c: 99: temp = 0xC0 + x;
  9996  0B83  0876               	movf	LCD_Set_Cursor@x,w
  9997  0B84  3EC0               	addlw	192
  9998  0B85  00F4               	movwf	??_LCD_Set_Cursor
  9999  0B86  0874               	movf	??_LCD_Set_Cursor,w
 10000  0B87  00F9               	movwf	LCD_Set_Cursor@temp
 10001                           
 10002                           ;lcd.c: 100: z = temp>>4;
 10003  0B88  0879               	movf	LCD_Set_Cursor@temp,w
 10004  0B89  00F4               	movwf	??_LCD_Set_Cursor
 10005  0B8A  3004               	movlw	4
 10006  0B8B                     u2495:	
 10007  0B8B  36F4               	lsrf	??_LCD_Set_Cursor,f
 10008  0B8C  0B89               	decfsz	9,f
 10009  0B8D  2B8B               	goto	u2495
 10010  0B8E  0874               	movf	??_LCD_Set_Cursor,w
 10011  0B8F  00F5               	movwf	??_LCD_Set_Cursor+1
 10012  0B90  0875               	movf	??_LCD_Set_Cursor+1,w
 10013  0B91  00F7               	movwf	LCD_Set_Cursor@z
 10014                           
 10015                           ;lcd.c: 101: w = temp & 0x0F;
 10016  0B92  0879               	movf	LCD_Set_Cursor@temp,w
 10017  0B93  390F               	andlw	15
 10018  0B94  00F4               	movwf	??_LCD_Set_Cursor
 10019  0B95  0874               	movf	??_LCD_Set_Cursor,w
 10020  0B96  00F8               	movwf	LCD_Set_Cursor@w
 10021                           
 10022                           ;lcd.c: 102: LCD_Cmd(z);
 10023  0B97  0877               	movf	LCD_Set_Cursor@z,w
 10024  0B98  3189  2115  318B   	fcall	_LCD_Cmd
 10025                           
 10026                           ;lcd.c: 103: LCD_Cmd(w);
 10027  0B9B  0878               	movf	LCD_Set_Cursor@w,w
 10028  0B9C  3189  2115         	fcall	_LCD_Cmd
 10029  0B9E  0008               	return
 10030  0B9F                     __end_of_LCD_Set_Cursor:	
 10031                           
 10032                           	psect	text33
 10033  0915                     __ptext33:	
 10034 ;; *************** function _LCD_Cmd *****************
 10035 ;; Defined at:
 10036 ;;		line 65 in file "lcd.c"
 10037 ;; Parameters:    Size  Location     Type
 10038 ;;  a               1    wreg     unsigned char 
 10039 ;; Auto vars:     Size  Location     Type
 10040 ;;  a               1    2[COMMON] unsigned char 
 10041 ;; Return value:  Size  Location     Type
 10042 ;;                  1    wreg      void 
 10043 ;; Registers used:
 10044 ;;		wreg, status,2, status,0, pclath, cstack
 10045 ;; Tracked objects:
 10046 ;;		On entry : 0/0
 10047 ;;		On exit  : 0/0
 10048 ;;		Unchanged: 0/0
 10049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10051 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10052 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10053 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10054 ;;Total ram usage:        2 bytes
 10055 ;; Hardware stack levels used:    1
 10056 ;; Hardware stack levels required when called:    1
 10057 ;; This function calls:
 10058 ;;		_LCD_Port
 10059 ;; This function is called by:
 10060 ;;		_InitCustomChars
 10061 ;;		_LCD_Clear
 10062 ;;		_LCD_Set_Cursor
 10063 ;;		_LCD_Init
 10064 ;; This function uses a non-reentrant model
 10065 ;;
 10066                           
 10067                           
 10068                           ;psect for function _LCD_Cmd
 10069  0915                     _LCD_Cmd:	
 10070                           
 10071                           ;incstack = 0
 10072                           ; Regs used in _LCD_Cmd: [wreg+status,2+status,0+pclath+cstack]
 10073                           ;LCD_Cmd@a stored from wreg
 10074  0915  00F2               	movwf	LCD_Cmd@a
 10075                           
 10076                           ;lcd.c: 67: RA0 = 0;
 10077  0916  0020               	movlb	0	; select bank0
 10078  0917  100C               	bcf	12,0	;volatile
 10079                           
 10080                           ;lcd.c: 68: LCD_Port(a);
 10081  0918  0872               	movf	LCD_Cmd@a,w
 10082  0919  3189  2150  3189   	fcall	_LCD_Port
 10083                           
 10084                           ;lcd.c: 69: RA2 = 1;
 10085  091C  0020               	movlb	0	; select bank0
 10086  091D  150C               	bsf	12,2	;volatile
 10087                           
 10088                           ;lcd.c: 70: RA2 = 0;
 10089  091E  110C               	bcf	12,2	;volatile
 10090                           
 10091                           ;lcd.c: 71: _delay((unsigned long)((4)*(1000000/4000.0)));
 10092  091F  30F9               	movlw	249
 10093  0920  00F1               	movwf	??_LCD_Cmd
 10094  0921                     u3037:	
 10095  0921  0000               	nop
 10096  0922  0BF1               	decfsz	??_LCD_Cmd,f
 10097  0923  2921               	goto	u3037
 10098  0924  3200               	nop2	;nop
 10099  0925  0000               	nop
 10100  0926  0008               	return
 10101  0927                     __end_of_LCD_Cmd:	
 10102                           
 10103                           	psect	text34
 10104  0950                     __ptext34:	
 10105 ;; *************** function _LCD_Port *****************
 10106 ;; Defined at:
 10107 ;;		line 41 in file "lcd.c"
 10108 ;; Parameters:    Size  Location     Type
 10109 ;;  a               1    wreg     unsigned char 
 10110 ;; Auto vars:     Size  Location     Type
 10111 ;;  a               1    0[COMMON] unsigned char 
 10112 ;; Return value:  Size  Location     Type
 10113 ;;                  1    wreg      void 
 10114 ;; Registers used:
 10115 ;;		wreg
 10116 ;; Tracked objects:
 10117 ;;		On entry : 0/0
 10118 ;;		On exit  : 0/0
 10119 ;;		Unchanged: 0/0
 10120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10122 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10124 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10125 ;;Total ram usage:        1 bytes
 10126 ;; Hardware stack levels used:    1
 10127 ;; This function calls:
 10128 ;;		Nothing
 10129 ;; This function is called by:
 10130 ;;		_LCD_Cmd
 10131 ;;		_LCD_Init
 10132 ;;		_LCD_Write_Char
 10133 ;; This function uses a non-reentrant model
 10134 ;;
 10135                           
 10136                           
 10137                           ;psect for function _LCD_Port
 10138  0950                     _LCD_Port:	
 10139                           
 10140                           ;incstack = 0
 10141                           ; Regs used in _LCD_Port: [wreg]
 10142                           ;LCD_Port@a stored from wreg
 10143  0950  00F0               	movwf	LCD_Port@a
 10144                           
 10145                           ;lcd.c: 43: if(a & 1)
 10146  0951  1C70               	btfss	LCD_Port@a,0
 10147  0952  2956               	goto	l94
 10148                           
 10149                           ;lcd.c: 44: RA7 = 1;
 10150  0953  0020               	movlb	0	; select bank0
 10151  0954  178C               	bsf	12,7	;volatile
 10152  0955  2958               	goto	l1729
 10153  0956                     l94:	
 10154                           
 10155                           ;lcd.c: 45: else
 10156                           ;lcd.c: 46: RA7 = 0;
 10157  0956  0020               	movlb	0	; select bank0
 10158  0957  138C               	bcf	12,7	;volatile
 10159  0958                     l1729:	
 10160                           
 10161                           ;lcd.c: 48: if(a & 2)
 10162  0958  1CF0               	btfss	LCD_Port@a,1
 10163  0959  295C               	goto	l96
 10164                           
 10165                           ;lcd.c: 49: RA6 = 1;
 10166  095A  170C               	bsf	12,6	;volatile
 10167  095B  295D               	goto	l1733
 10168  095C                     l96:	
 10169                           
 10170                           ;lcd.c: 50: else
 10171                           ;lcd.c: 51: RA6 = 0;
 10172  095C  130C               	bcf	12,6	;volatile
 10173  095D                     l1733:	
 10174                           
 10175                           ;lcd.c: 53: if(a & 4)
 10176  095D  1D70               	btfss	LCD_Port@a,2
 10177  095E  2961               	goto	l98
 10178                           
 10179                           ;lcd.c: 54: RC0 = 1;
 10180  095F  140E               	bsf	14,0	;volatile
 10181  0960  2962               	goto	l1737
 10182  0961                     l98:	
 10183                           
 10184                           ;lcd.c: 55: else
 10185                           ;lcd.c: 56: RC0 = 0;
 10186  0961  100E               	bcf	14,0	;volatile
 10187  0962                     l1737:	
 10188                           
 10189                           ;lcd.c: 58: if(a & 8)
 10190  0962  1DF0               	btfss	LCD_Port@a,3
 10191  0963  2966               	goto	l100
 10192                           
 10193                           ;lcd.c: 59: RC1 = 1;
 10194  0964  148E               	bsf	14,1	;volatile
 10195  0965  0008               	return
 10196  0966                     l100:	
 10197                           
 10198                           ;lcd.c: 60: else
 10199                           ;lcd.c: 61: RC1 = 0;
 10200  0966  108E               	bcf	14,1	;volatile
 10201  0967  0008               	return
 10202  0968                     __end_of_LCD_Port:	
 10203  007E                     btemp	set	126	;btemp
 10204  007E                     wtemp	set	126
 10205  007E                     wtemp0	set	126
 10206  0080                     wtemp1	set	128
 10207  0082                     wtemp2	set	130
 10208  0084                     wtemp3	set	132
 10209  0086                     wtemp4	set	134
 10210  0088                     wtemp5	set	136
 10211  007F                     wtemp6	set	127
 10212  007E                     ttemp	set	126
 10213  007E                     ttemp0	set	126
 10214  0081                     ttemp1	set	129
 10215  0084                     ttemp2	set	132
 10216  0087                     ttemp3	set	135
 10217  007F                     ttemp4	set	127
 10218  007E                     ltemp	set	126
 10219  007E                     ltemp0	set	126
 10220  0082                     ltemp1	set	130
 10221  0086                     ltemp2	set	134
 10222  0080                     ltemp3	set	128


Data Sizes:
    Strings     18
    Constant    27
    Data        60
    BSS         41
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     64      73
    BANK1            80     31      79
    BANK2            80      0      44
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 27
		 -> log@coeff(CODE[27]), 

    LCD_Write_String@a	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_12(CODE[2]), STR_11(CODE[2]), STR_10(CODE[2]), STR_9(CODE[2]), 
		 -> STR_8(CODE[2]), STR_7(CODE[2]), STR_6(CODE[2]), STR_5(CODE[2]), 
		 -> STR_4(CODE[2]), STR_3(CODE[2]), STR_2(CODE[2]), STR_1(CODE[2]), 


Critical Paths under _main in COMMON

    _main->_LCD_Write_Int
    _readAnalog->___aldiv
    _log->___awtoft
    ___ftmul->___awtoft
    ___awtoft->___ftpack
    ___lwtoft->___ftpack
    ___ftadd->___awtoft
    _SYSTEM_Initialize->_InitCustomChars
    _LCD_Init->_LCD_Cmd
    _LCD_Clear->_LCD_Cmd
    _InitCustomChars->_LCD_Write_Char
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Int->___awdiv
    _LCD_Write_Char->_LCD_Port
    _LCD_Set_Cursor->_LCD_Cmd
    _LCD_Cmd->_LCD_Port

Critical Paths under _main in BANK0

    _main->_log
    _readAnalog->___aldiv
    _log->_eval_poly
    _eval_poly->___ftadd
    ___ftsub->___ftadd
    ___ftadd->___ftdiv
    ___ftdiv->___ftmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                37    37      0   39972
                                             61 BANK0      3     3      0
                                              0 BANK1     31    31      0
                            _ADCRead
                          _LCD_Clear
                     _LCD_Set_Cursor
                      _LCD_Write_Int
                   _LCD_Write_String
                 _PWM6_LoadDutyValue
                  _SYSTEM_Initialize
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftsub
                           ___lwtoft
                                _log
                         _readAnalog
 ---------------------------------------------------------------------------------
 (1) _readAnalog                                          21    19      2     940
                                              9 COMMON     4     4      0
                                              6 BANK0     17    15      2
                            _ADCRead
                            ___aldiv
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     170
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     406
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _ADCRead                                              4     1      3      22
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _log                                                  6     3      3   16736
                                             55 BANK0      6     3      3
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (2) _frexp                                                6     2      4     330
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) _eval_poly                                           10     3      7    7343
                                             45 BANK0     10     3      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     466
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    2894
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     322
                                              0 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             6     3      3    1890
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             4     1      3    1874
                                              8 COMMON     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___ftsub                                              6     0      6    3925
                                             45 BANK0      6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    3646
                                             32 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             16    10      6    3298
                                             16 BANK0     16    10      6
                            ___ftmul (ARG)
                           ___ftpack
                           ___ftpack (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1746
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    2     2      0     709
                                              7 COMMON     2     2      0
                    _ADCC_Initialize
                    _InitCustomChars
                          _LCD_Clear
                           _LCD_Init
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM6_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             3     3      0     220
                                              3 COMMON     3     3      0
                            _LCD_Cmd
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            0     0      0     110
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (2) _InitCustomChars                                      2     2      0     356
                                              5 COMMON     2     2      0
                            _LCD_Cmd
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM6_LoadDutyValue                                   4     2      2     150
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCD_Write_String                                     5     3      2     904
                                              5 COMMON     5     3      2
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (1) _LCD_Write_Int                                       19    14      5    2759
                                              9 COMMON     5     0      5
                                              0 BANK0     14    14      0
                            _ADCRead (ARG)
                     _LCD_Write_Char
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     402
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     406
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (1) _LCD_Set_Cursor                                       7     6      1    1334
                                              3 COMMON     7     6      1
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (3) _LCD_Cmd                                              2     2      0     110
                                              1 COMMON     2     2      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (3) _LCD_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCRead
   _LCD_Clear
     _LCD_Cmd
       _LCD_Port
   _LCD_Set_Cursor
     _LCD_Cmd
       _LCD_Port
   _LCD_Write_Int
     _ADCRead (ARG)
     _LCD_Write_Char (ARG)
       _LCD_Port
     ___awdiv (ARG)
     ___awmod (ARG)
   _LCD_Write_String
     _LCD_Write_Char
       _LCD_Port
   _PWM6_LoadDutyValue
   _SYSTEM_Initialize
     _ADCC_Initialize
     _InitCustomChars
       _LCD_Cmd
         _LCD_Port
       _LCD_Write_Char
         _LCD_Port
     _LCD_Clear
       _LCD_Cmd
         _LCD_Port
     _LCD_Init
       _LCD_Cmd
         _LCD_Port
       _LCD_Port
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM6_Initialize
     _TMR2_Initialize
   ___ftadd
     ___awtoft (ARG)
       ___ftpack
     ___ftdiv (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
     ___wmul (ARG)
     _frexp (ARG)
   ___ftdiv
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftpack (ARG)
     ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
   ___ftmul
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)
     _frexp (ARG)
   ___ftsub
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
       _frexp (ARG)
   ___lwtoft
     ___ftpack
   _log
     ___awtoft
       ___ftpack
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
       _frexp (ARG)
     ___ftge
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
     _eval_poly
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
         _frexp (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___wmul
     _frexp
   _readAnalog
     _ADCRead
     ___aldiv
     ___bmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     40      49       5       91.3%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     1F      4F       7       98.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      2C       9       55.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      D2      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      D2      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Wed Jan 24 03:40:56 2018

                 ___bmul@product 0072                      __CFG_CP$OFF 0000                               l58 000D  
                             l94 0956                               l96 095C                               l98 0961  
                   ___awdiv@sign 0076              ___wmul@multiplicand 0072      __size_of_PWM6_LoadDutyValue 0016  
                   ___ftadd@exp1 004C                     ___ftadd@exp2 004B                      __CFG_LVP$ON 0000  
                   ___ftadd@sign 004A                              l100 0966                              l422 0D85  
                            l535 0CDA                              l367 09BB                              l536 0CE2  
                            l528 0CC7                              l559 017C                              _GIE 005F  
                            _RA0 0060                              _RA2 0062                              _RC0 0070  
                            _RC1 0071                              _RA6 0066                              _RA7 0067  
                   __CFG_CPD$OFF 0000                              _log 0E9F                  __end_of_ADCRead 0014  
                   ___awmod@sign 0076                  _TMR2_Initialize 08F6                     __CFG_BORV$LO 0000  
                            wreg 0009                      main@analogs 00C4                  __end_of_LCD_Cmd 0927  
                   __CFG_ZCD$OFF 0000                     ___ftdiv@cntr 003A                   _LCD_Set_Cursor 0B60  
                   ___ftdiv@sign 003F                             l2121 0DA6                             l2113 0D96  
                           l2131 0DD4                             l2123 0DB4                             l2221 0BDF  
                           l2213 0BCE                             l2151 0BEE                             l2207 0BB6  
                           l2135 0DDF                             l2303 02B8                             l2209 0BC2  
                           l2217 0BD7                             l2233 09F6                             l2241 0B00  
                           l2139 0DED                             l2091 0906                             l2157 0BF9  
                           l2245 0B16                             l2319 0B80                             l2183 0C30  
                           l2175 0C1F                             l2167 0C01                             l2335 099B  
                           l2423 0ECE                             l2095 090C                             l2169 0C0D  
                           l2361 0069                             l2265 0B37                             l2417 0EBD  
                           l2179 0C28                             l2195 0BA9                             l2371 008C  
                           l2283 0C8E                             l1733 095D                             l2365 006D  
                           l2349 0035                             l2445 0E23                             l1805 09B5  
                           l2199 0BB0                             l2383 00C9                             l2367 0072  
                           l2359 003C                             l1751 0CAE                             l2439 0E0D  
                           l1823 0105                             l1911 0FB4                             l1737 0962  
                           l1729 0958                             l2377 0090                             l2369 007B  
                           l1761 0CD4                             l1753 0CB3                             l1745 0C9D  
                           l1833 011B                             l2379 00BC                             l2467 0E7D  
                           l2459 0E64                             l1851 0148                             l1827 010C  
                           l1923 0FD0                             l1915 0FBC                             l1749 0CA4  
                           l1853 0152                             l1845 0135                             l1759 0CCC  
                           l1863 016E                             l1855 0157                             l2479 09D6  
                           l1927 0FD8                             l2591 0456                             l1873 01A0  
                           l1865 0178                             l1857 015B                             l2585 0438  
                           l2577 042A                             l1883 01BB                             l1869 018E  
                           l1893 0F63                             l1993 0A4E                             l1987 0A3D  
                           l1899 0F79                             ?_log 0057                             STR_1 101F  
                           STR_2 1027                             STR_3 1029                             STR_4 1023  
                           STR_5 101F                             STR_6 101B                             STR_7 1021  
                           STR_8 101F                             STR_9 102B                             u2045 0DA9  
                           _LATA 0016                             _LATB 0017                             u3007 0D70  
                           _LATC 0018                             u3017 0A72                             u2145 0C04  
                           u2065 0DB5                             u3027 0A7D                             u2075 0DC9  
                           u3037 0921                             u2165 0C0E                             u2245 0BB9  
                           u1525 0CE9                             u1445 0CA9                             u2085 0DD5  
                           u2405 025B                             u2510 001F                             u2175 0C18  
                           u2415 026E                             u1545 0A66                             u2185 0C20  
                           u2265 0BC8                             u1465 0CC2                             u2425 0296  
                           _T2PR 028D                             u2275 0BCF                             u1715 0149  
                           u2605 0949                             u1485 0CCF                             u1565 09BC  
                           u2365 01E8                             u1575 09C1                             u2455 02C3  
                           u2375 01FB                             u2720 02ED                             u1745 015C  
                           u2385 022E                             u2475 0B6C                             u1915 0FD9  
                           u2395 0241                             u1685 0136                             u1925 0FDF  
                           u1845 0F85                             u2495 0B8B                             u2575 00AA  
                           u2655 0E35                             u1775 016F                             u1855 0F95  
                           u2807 037D                             u2665 0E45                             u2817 0394  
                           u1970 0AB1                             u2907 0AE4                             u2675 0E65  
                           u1875 0FBD                             u2827 03AB                             u2917 0D02  
                           u2685 0E74                             u1885 0FC3                             u2837 03C2  
                           u2757 0307                             u2927 0D0F                             u2695 0E7E  
                           u2847 03D9                             u2767 0321                             u2937 0D1A  
                           u2857 03F0                             u2777 0338                             u2947 0D23  
                           u2867 0407                             u2787 034F                             u2957 0D2C  
                           u2877 0420                             u2797 0366                             u2967 0D39  
                           u2887 0ACC                             u2977 0D46                             u2897 0AD8  
                           u2987 0D53                             u2997 0D62                             _WPUA 0F39  
                           _WPUB 0F44                             _WPUC 0F4F                             _WPUE 0F65  
                   __CFG_WRT$OFF 0000                    __CFG_FCMEN$ON 0000                ?_LCD_Write_String 0075  
                           _main 02DF                     ___ftpack@arg 0070               __size_of_LCD_Clear 0008  
                   ___ftpack@exp 0073                             fsr0h 0005                             fsr1h 0007  
                           fsr0l 0004                             indf0 0000                             indf1 0001  
                           fsr1l 0006                             btemp 007E                             log@x 0057  
                           ltemp 007E                             start 0002               ??_LCD_Write_String 0077  
                           ttemp 007E                             wtemp 007E                    __CFG_CSWEN$ON 0000  
              ___bmul@multiplier 0073                    __CFG_MCLRE$ON 0000                     ___ftmul@cntr 002E  
                  _LCD_Write_Int 0014                     ___ftmul@sign 002F                            ??_log 005A  
               __end_of_LCD_Init 0D74                 __end_of_LCD_Port 0968   __size_of_OSCILLATOR_Initialize 0008  
  __end_of_OSCILLATOR_Initialize 08EB                  __end_of___aldiv 0DF6                            _ADACQ 009D  
                          _ADCAP 009B                            _ADACT 0099                            ?_main 0070  
                          _ADCLK 0098                            _ADPCH 009E                            _ADREF 009A  
                __end_of___awdiv 0C35                            _ADPRE 009C                  __end_of___ftadd 01D3  
                          STR_10 1025                            STR_11 1021                            STR_12 101D  
                  __CFG_WDTE$OFF 0000                  __end_of___awmod 0BE4                            _ADRPT 010D  
                __end_of___ftdiv 0E9F                  __end_of___ftmul 1000                  ___awdiv@divisor 0070  
                __end_of___ftsub 09EC                            _T2CON 028E                            _T2HLT 028F  
                          _T2TMR 028C                            _T2RST 0291                  ___awdiv@counter 0075  
                          _OSCEN 0891                            _TRISA 0011                            _TRISB 0012  
                          _TRISC 0013                  _PWM6_Initialize 08EB           __end_of_LCD_Set_Cursor 0B9F  
                  ___awtoft@sign 007D                            _frexp 0B25                            _errno 0065  
                  ___ftpack@sign 0074                            main@R 00D9                            main@x 00DF  
                 __CFG_BOREN$OFF 0000                            ltemp0 007E                            ltemp1 0082  
                          ltemp2 0086                            ltemp3 0080                            ttemp0 007E  
                          ttemp1 0081                            ttemp2 0084                            ttemp3 0087  
                          ttemp4 007F                            status 0003                            wtemp0 007E  
                          wtemp1 0080                            wtemp2 0082                            wtemp3 0084  
                          wtemp4 0086                            wtemp5 0088                            wtemp6 007F  
               InitCustomChars@i 0076                   ?_LCD_Write_Int 0079                   _LCD_Write_Char 0A56  
                __initialization 07CE                      log@exponent 005B                     __end_of_main 07CE  
              readAnalog@channel 0026          __end_of_TMR2_Initialize 0904                        ??_ADCRead 0073  
                         ??_main 005D                __end_of_LCD_Clear 08E3                        ??_LCD_Cmd 0071  
                ?_LCD_Set_Cursor 0073                           _ADCON0 0093                           _ADCON1 0094  
                         _ADCON2 0095                           _ADCON3 0096                           ?_frexp 0070  
                         _ADLTHH 010F                           _ADLTHL 010E                           _ADRESH 008D  
                         _ADRESL 008C                           _ADSTAT 0097                           _ADUTHH 0111  
               ___awdiv@dividend 0072                           _ADUTHL 0110                 __end_of___awtoft 0A0C  
                         _ANSELA 0F38                           _ANSELB 0F43                           _ANSELC 0F4E  
               __end_of___ftpack 0CF9               __CFG_RSTOSC$HFINT1 0000                           _RC2PPS 0F22  
                 __CFG_WDTCCS$SC 0000                           _FVRCON 090C                 __end_of___lwtoft 093A  
                         _OSCFRQ 0893                    main@dutyCycle 00D7           __end_of_LCD_Write_Char 0A80  
                 __CFG_PWRTE$OFF 0000                     _CCPTMRS1bits 021F                           ___bmul 0904  
                         ___ftge 0AEA           LCD_Write_Int@numPlaces 007C                        ??___aldiv 0078  
                         ___wmul 09B3                        ??___awdiv 0074                        ??___ftadd 0046  
                 __CFG_STVREN$ON 0000                        ??___awmod 0074                        ??___ftdiv 0036  
                      ??___ftmul 0026                        ??___ftsub 007E          __end_of_PWM6_Initialize 08F6  
               ___awdiv@quotient 0077                  ___awmod@divisor 0070                  ___awmod@counter 0075  
                         _totals 00A0            ___ftmul@f3_as_product 002B                  _ADCC_Initialize 0980  
               LCD_Write_Int@str 0025                    main@steinhart 00E0                  _InitCustomChars 0A30  
                LCD_Set_Cursor@w 0078                  LCD_Set_Cursor@x 0076                  LCD_Set_Cursor@y 0073  
                LCD_Set_Cursor@z 0077         readAnalog@analog_channel 0079                _SYSTEM_Initialize 0AB3  
               __end_oflog@coeff 101B          __end_of__initialization 07FD                        ?_LCD_Init 0070  
                      ?_LCD_Port 0070                       ___ftadd@f1 0040                       ___ftadd@f2 0043  
                     ___ftge@ff1 0070                       ___ftge@ff2 0073                  ??_LCD_Write_Int 0020  
             ?_SYSTEM_Initialize 0070                     eval_poly@res 0054                       ___ftdiv@f1 0033  
                     ___ftdiv@f2 0030                       ___ftdiv@f3 003B                  ?_LCD_Write_Char 0070  
                  LCD_Init@style 0075                       ___awtoft@c 0078              ___bmul@multiplicand 0070  
                     ___ftmul@f1 0020                       ___ftmul@f2 0023                       ___ftsub@f1 0050  
                     ___ftsub@f2 004D                   __pcstackCOMMON 0070                        LCD_Port@a 0070  
                   __pidataBANK1 0A0C                     __pidataBANK2 0968              ??_SYSTEM_Initialize 0077  
                  __end_of_frexp 0B60                 ?_TMR2_Initialize 0070                       ___lwtoft@c 0078  
                        ??_frexp 0074        __end_of_SYSTEM_Initialize 0AEA                       __pbssBANK0 0060  
                     __pbssBANK1 00E3                       __pbssBANK2 0138               __size_of_eval_poly 0060  
                     ??_LCD_Init 0073                       ??_LCD_Port 0070                       __pmaintext 02DF  
                        ?___bmul 0070                          ?___ftge 0070                          ?___wmul 0070  
                __CFG_PPS1WAY$ON 0000          __end_of_ADCC_Initialize 0999       __end_of_PWM6_LoadDutyValue 0950  
                        _ADCRead 0006        __size_of_LCD_Write_String 001A                 ?_PWM6_Initialize 0070  
                      ?___awtoft 0078                        ?___ftpack 0070                          _ADSTPTH 0113  
                        _ADSTPTL 0112                 main@displayTemp2 00D4                        ?___lwtoft 0078  
        __end_of_InitCustomChars 0A56                          _LCD_Cmd 0915                          _OSCCON1 088D  
                        _OSCCON3 088F                          _OSCTUNE 0892                          _PWM6DCH 038D  
                        _PWM6DCL 038C                          _PWM6CON 038E                          _PPSLOCK 0E8F  
                     _readAnalog 01D3             __CFG_SCANE$available 0000                          ___aldiv 0D74  
                __size_of___bmul 0011                          ___cgram 0120                  __size_of___ftge 003B  
                        ___awdiv 0BE4                          ___ftadd 00DD                          ___awmod 0B9F  
                        ___ftdiv 0DF6                  __size_of___wmul 001B                          ___ftmul 0F4C  
                        ___ftsub 09CE                       ??___awtoft 007B                       ??___ftpack 0075  
              __end_of_eval_poly 0C95                 ??_LCD_Set_Cursor 0074                          __ptext1 01D3  
                        __ptext2 0904                          __ptext3 0D74                          __ptext4 0006  
                        __ptext5 0E9F                          __ptext6 0B25                          __ptext7 0C35  
                        __ptext8 09B3                          __ptext9 0F4C                       ??___lwtoft 007B  
          _OSCILLATOR_Initialize 08E3                        _T2CONbits 028E                     __size_of_log 00AD  
               ___awmod@dividend 0072                   ADCRead@channel 0073                 ___aldiv@dividend 0074  
       ??_PIN_MANAGER_Initialize 0070                          _samples 0138                        _LCD_Clear 08DB  
     __size_of_SYSTEM_Initialize 0037                          clrloop0 08D0             end_of_initialization 07FD  
                        init_ram 08D5                          initloop 08D6                 ___aldiv@quotient 0022  
              LCD_Write_Int@sign 007D                       main@F13715 00E3                     __pstringtext 1000  
               ?_ADCC_Initialize 0070            __CFG_WDTCPS$WDTCPS_31 0000                 ?_InitCustomChars 0070  
                     ?_LCD_Clear 0070                 __CFG_FEXTOSC$OFF 0000                LCD_Write_String@a 0075  
              LCD_Write_String@i 0078                 ??_LCD_Write_Char 0071                      ___ftdiv@exp 003E  
              __size_of_LCD_Init 007B                __size_of_LCD_Port 0018                      ___ftmul@exp 002A  
                    ?_readAnalog 0026                   __end_of___bmul 0915                   __end_of___ftge 0B25  
                 __end_of___wmul 09CE                 _LCD_Write_String 0999           ?_OSCILLATOR_Initialize 0070  
            start_initialization 07CE                       eval_poly@d 0050                       eval_poly@n 0052  
                     eval_poly@x 004D  __size_of_PIN_MANAGER_Initialize 0033                      __end_of_log 0F4C  
                     frexp@value 0070         LCD_Write_Int@fieldLength 007B            __end_of_LCD_Write_Int 00DD  
               __CFG_LPBOREN$OFF 0000                         ??___bmul 0071                         ??___ftge 0076  
                       ??___wmul 0074                      __pdataBANK1 00A0                      __pdataBANK2 0120  
                LCD_Write_Char@a 0074                  LCD_Write_Char@y 0073                         ?_ADCRead 0070  
                       ?_LCD_Cmd 0070                __size_of___awtoft 0020                __size_of___ftpack 0064  
                       LCD_Cmd@a 0072                        ___latbits 0002                __size_of___lwtoft 0013  
                  __pcstackBANK0 0020                    __pcstackBANK1 00C4               _PWM6_LoadDutyValue 093A  
       __size_of_TMR2_Initialize 000E                      ??_LCD_Clear 0073              __size_of_readAnalog 010C  
            ?_PWM6_LoadDutyValue 0070           _PIN_MANAGER_Initialize 0A80                         ?___aldiv 0070  
                       ?___awdiv 0070                         ?___ftadd 0040                         ?___awmod 0070  
                       ?___ftdiv 0030                         ?___ftmul 0020                         ?___ftsub 004D  
                main@displayTemp 00D1             ??_PWM6_LoadDutyValue 0072                        _eval_poly 0C35  
       __size_of_PWM6_Initialize 000B                   __size_of_frexp 003B                         _T2CLKCON 0290  
                ___aldiv@divisor 0070                  ___aldiv@counter 0020                         _LCD_Init 0CF9  
                 ___wmul@product 0074                         _LCD_Port 0950                        clear_ram0 08CF  
                       _PIE0bits 0716                         _PIR4bits 0710                 __size_of_ADCRead 000E  
                     _ADCON0bits 0093                ___wmul@multiplier 0070                        main@count 00D0  
                     ?_eval_poly 004D                 __size_of_LCD_Cmd 0012         __end_of_LCD_Write_String 09B3  
              ??_TMR2_Initialize 0070                  readAnalog@value 007B                        frexp@eptr 0073  
                   ??_readAnalog 0028          ??_OSCILLATOR_Initialize 0070                   LCD_Write_Int@i 002C  
                 LCD_Write_Int@j 002A                 __size_of___aldiv 0082                 __size_of___awdiv 0051  
               __size_of___ftadd 00F6                 __size_of___awmod 0045                 __size_of___ftdiv 00A9  
               __size_of___ftmul 00B4                 __size_of___ftsub 001E                         ___awtoft 09EC  
                       ___ftpack 0C95                         ___lwtoft 0927         __size_of_ADCC_Initialize 0019  
                       _channels 00B8                         _main$949 00DC                         __ptext10 0AEA  
                       __ptext11 09EC                         __ptext20 0A80                         __ptext12 0927  
                       __ptext21 08E3                         __ptext13 09CE                         __ptext30 0BE4  
                       __ptext22 0CF9                         __ptext14 00DD                         __ptext31 0A56  
                       __ptext23 08DB                         __ptext15 0DF6                         __ptext32 0B60  
                       __ptext24 0A30                         __ptext16 0C95                         __ptext33 0915  
                       __ptext25 0980                         __ptext17 0AB3                         __ptext34 0950  
                       __ptext26 093A                         __ptext18 08F6                         __ptext27 0999  
                       __ptext19 08EB                         __ptext28 0014                         __ptext29 0B9F  
             __end_of_readAnalog 02DF          __size_of_LCD_Set_Cursor 003F         __size_of_InitCustomChars 0026  
            LCD_Write_Int@F13685 0060                ??_PWM6_Initialize 0070                    __size_of_main 04EF  
           __CFG_WDTCWS$WDTCWS_7 0000      PIN_MANAGER_Initialize@state 0070                         log@coeff 1000  
                    ??_eval_poly 007E                      _sampleIndex 0067               LCD_Write_Char@temp 0072  
        ?_PIN_MANAGER_Initialize 0070                __CFG_CLKOUTEN$OFF 0000                      _PPSLOCKbits 0E8F  
        __size_of_LCD_Write_Char 002A               LCD_Set_Cursor@temp 0079               LCD_Write_Int@value 0079  
                   ___aldiv@sign 0021      PWM6_LoadDutyValue@dutyCycle 0070           __size_of_LCD_Write_Int 00C9  
 __end_of_PIN_MANAGER_Initialize 0AB3                ??_ADCC_Initialize 0070                ??_InitCustomChars 0075  
