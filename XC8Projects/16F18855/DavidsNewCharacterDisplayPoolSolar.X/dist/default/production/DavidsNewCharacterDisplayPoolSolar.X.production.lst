

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Fri Jan 26 14:54:29 2018

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	stringtext,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	psect	text32,local,class=CODE,merge=1,delta=2
    51                           	psect	text33,local,class=CODE,merge=1,delta=2
    52                           	psect	text34,local,class=CODE,merge=1,delta=2
    53                           	psect	text35,local,class=CODE,merge=1,delta=2
    54                           	dabs	1,0x7E,2
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  001C                     	;# 
    78  001C                     	;# 
    79  001D                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  008C                     	;# 
    84  008C                     	;# 
    85  008D                     	;# 
    86  008E                     	;# 
    87  008E                     	;# 
    88  008F                     	;# 
    89  0090                     	;# 
    90  0090                     	;# 
    91  0091                     	;# 
    92  0093                     	;# 
    93  0094                     	;# 
    94  0095                     	;# 
    95  0096                     	;# 
    96  0097                     	;# 
    97  0098                     	;# 
    98  0099                     	;# 
    99  009A                     	;# 
   100  009B                     	;# 
   101  009C                     	;# 
   102  009D                     	;# 
   103  009E                     	;# 
   104  010C                     	;# 
   105  010D                     	;# 
   106  010E                     	;# 
   107  010E                     	;# 
   108  010F                     	;# 
   109  0110                     	;# 
   110  0110                     	;# 
   111  0111                     	;# 
   112  0112                     	;# 
   113  0112                     	;# 
   114  0113                     	;# 
   115  0114                     	;# 
   116  0114                     	;# 
   117  0115                     	;# 
   118  0116                     	;# 
   119  0116                     	;# 
   120  0117                     	;# 
   121  0119                     	;# 
   122  0119                     	;# 
   123  0119                     	;# 
   124  011A                     	;# 
   125  011A                     	;# 
   126  011A                     	;# 
   127  011B                     	;# 
   128  011B                     	;# 
   129  011B                     	;# 
   130  011B                     	;# 
   131  011B                     	;# 
   132  011C                     	;# 
   133  011C                     	;# 
   134  011C                     	;# 
   135  011D                     	;# 
   136  011D                     	;# 
   137  011D                     	;# 
   138  011E                     	;# 
   139  011E                     	;# 
   140  011E                     	;# 
   141  011F                     	;# 
   142  011F                     	;# 
   143  011F                     	;# 
   144  011F                     	;# 
   145  011F                     	;# 
   146  018C                     	;# 
   147  018D                     	;# 
   148  018E                     	;# 
   149  018F                     	;# 
   150  0190                     	;# 
   151  0191                     	;# 
   152  0192                     	;# 
   153  0196                     	;# 
   154  0197                     	;# 
   155  0198                     	;# 
   156  0199                     	;# 
   157  019A                     	;# 
   158  019B                     	;# 
   159  019C                     	;# 
   160  020C                     	;# 
   161  020D                     	;# 
   162  020E                     	;# 
   163  020F                     	;# 
   164  020F                     	;# 
   165  0210                     	;# 
   166  0210                     	;# 
   167  0211                     	;# 
   168  0211                     	;# 
   169  0212                     	;# 
   170  0213                     	;# 
   171  0214                     	;# 
   172  0215                     	;# 
   173  0215                     	;# 
   174  0216                     	;# 
   175  0216                     	;# 
   176  0217                     	;# 
   177  0217                     	;# 
   178  0218                     	;# 
   179  0219                     	;# 
   180  021A                     	;# 
   181  021B                     	;# 
   182  021B                     	;# 
   183  021C                     	;# 
   184  021C                     	;# 
   185  021D                     	;# 
   186  021D                     	;# 
   187  021E                     	;# 
   188  021F                     	;# 
   189  028C                     	;# 
   190  028C                     	;# 
   191  028D                     	;# 
   192  028D                     	;# 
   193  028E                     	;# 
   194  028F                     	;# 
   195  0290                     	;# 
   196  0290                     	;# 
   197  0291                     	;# 
   198  0292                     	;# 
   199  0292                     	;# 
   200  0293                     	;# 
   201  0293                     	;# 
   202  0294                     	;# 
   203  0295                     	;# 
   204  0296                     	;# 
   205  0296                     	;# 
   206  0297                     	;# 
   207  0298                     	;# 
   208  0298                     	;# 
   209  0299                     	;# 
   210  0299                     	;# 
   211  029A                     	;# 
   212  029B                     	;# 
   213  029C                     	;# 
   214  029C                     	;# 
   215  029D                     	;# 
   216  030C                     	;# 
   217  030C                     	;# 
   218  030D                     	;# 
   219  030E                     	;# 
   220  030F                     	;# 
   221  0310                     	;# 
   222  0310                     	;# 
   223  0311                     	;# 
   224  0312                     	;# 
   225  0313                     	;# 
   226  0314                     	;# 
   227  0314                     	;# 
   228  0315                     	;# 
   229  0316                     	;# 
   230  0317                     	;# 
   231  0318                     	;# 
   232  0318                     	;# 
   233  0319                     	;# 
   234  031A                     	;# 
   235  031B                     	;# 
   236  031C                     	;# 
   237  031C                     	;# 
   238  031D                     	;# 
   239  031E                     	;# 
   240  031F                     	;# 
   241  038C                     	;# 
   242  038D                     	;# 
   243  038E                     	;# 
   244  0390                     	;# 
   245  0391                     	;# 
   246  0392                     	;# 
   247  040C                     	;# 
   248  040D                     	;# 
   249  040E                     	;# 
   250  040F                     	;# 
   251  0410                     	;# 
   252  0411                     	;# 
   253  0416                     	;# 
   254  0416                     	;# 
   255  0417                     	;# 
   256  0418                     	;# 
   257  0418                     	;# 
   258  0419                     	;# 
   259  041A                     	;# 
   260  041A                     	;# 
   261  041B                     	;# 
   262  041C                     	;# 
   263  041C                     	;# 
   264  041D                     	;# 
   265  041E                     	;# 
   266  041F                     	;# 
   267  048C                     	;# 
   268  048C                     	;# 
   269  048D                     	;# 
   270  048E                     	;# 
   271  048F                     	;# 
   272  048F                     	;# 
   273  0490                     	;# 
   274  0491                     	;# 
   275  0492                     	;# 
   276  0492                     	;# 
   277  0493                     	;# 
   278  0494                     	;# 
   279  0495                     	;# 
   280  0495                     	;# 
   281  0496                     	;# 
   282  0497                     	;# 
   283  0498                     	;# 
   284  0499                     	;# 
   285  049A                     	;# 
   286  049B                     	;# 
   287  049C                     	;# 
   288  049D                     	;# 
   289  050C                     	;# 
   290  050C                     	;# 
   291  050D                     	;# 
   292  050E                     	;# 
   293  050F                     	;# 
   294  050F                     	;# 
   295  0510                     	;# 
   296  0511                     	;# 
   297  0512                     	;# 
   298  0512                     	;# 
   299  0513                     	;# 
   300  0514                     	;# 
   301  0515                     	;# 
   302  0515                     	;# 
   303  0516                     	;# 
   304  0517                     	;# 
   305  0518                     	;# 
   306  0519                     	;# 
   307  051A                     	;# 
   308  051B                     	;# 
   309  051C                     	;# 
   310  051D                     	;# 
   311  058C                     	;# 
   312  058C                     	;# 
   313  058D                     	;# 
   314  058E                     	;# 
   315  058F                     	;# 
   316  058F                     	;# 
   317  0590                     	;# 
   318  0591                     	;# 
   319  0592                     	;# 
   320  0593                     	;# 
   321  060C                     	;# 
   322  060D                     	;# 
   323  060E                     	;# 
   324  060F                     	;# 
   325  0610                     	;# 
   326  0611                     	;# 
   327  0612                     	;# 
   328  0613                     	;# 
   329  0614                     	;# 
   330  0616                     	;# 
   331  0617                     	;# 
   332  0618                     	;# 
   333  0619                     	;# 
   334  061A                     	;# 
   335  061B                     	;# 
   336  061C                     	;# 
   337  061D                     	;# 
   338  061E                     	;# 
   339  068C                     	;# 
   340  068D                     	;# 
   341  068E                     	;# 
   342  068F                     	;# 
   343  0690                     	;# 
   344  0691                     	;# 
   345  0692                     	;# 
   346  0693                     	;# 
   347  0694                     	;# 
   348  070C                     	;# 
   349  070D                     	;# 
   350  070E                     	;# 
   351  070F                     	;# 
   352  0710                     	;# 
   353  0711                     	;# 
   354  0712                     	;# 
   355  0713                     	;# 
   356  0714                     	;# 
   357  0716                     	;# 
   358  0717                     	;# 
   359  0718                     	;# 
   360  0719                     	;# 
   361  071A                     	;# 
   362  071B                     	;# 
   363  071C                     	;# 
   364  071D                     	;# 
   365  071E                     	;# 
   366  0796                     	;# 
   367  0797                     	;# 
   368  0798                     	;# 
   369  0799                     	;# 
   370  079A                     	;# 
   371  079B                     	;# 
   372  080C                     	;# 
   373  080D                     	;# 
   374  080E                     	;# 
   375  080F                     	;# 
   376  0810                     	;# 
   377  0811                     	;# 
   378  0812                     	;# 
   379  0813                     	;# 
   380  0814                     	;# 
   381  081A                     	;# 
   382  081B                     	;# 
   383  081C                     	;# 
   384  081D                     	;# 
   385  081E                     	;# 
   386  081F                     	;# 
   387  088C                     	;# 
   388  088D                     	;# 
   389  088E                     	;# 
   390  088F                     	;# 
   391  0890                     	;# 
   392  0891                     	;# 
   393  0892                     	;# 
   394  0893                     	;# 
   395  0895                     	;# 
   396  0896                     	;# 
   397  0897                     	;# 
   398  0898                     	;# 
   399  0899                     	;# 
   400  089A                     	;# 
   401  089B                     	;# 
   402  090C                     	;# 
   403  090E                     	;# 
   404  090F                     	;# 
   405  091F                     	;# 
   406  091F                     	;# 
   407  098F                     	;# 
   408  098F                     	;# 
   409  0990                     	;# 
   410  0991                     	;# 
   411  0992                     	;# 
   412  0993                     	;# 
   413  0994                     	;# 
   414  0995                     	;# 
   415  0996                     	;# 
   416  0997                     	;# 
   417  0E0F                     	;# 
   418  0E10                     	;# 
   419  0E11                     	;# 
   420  0E12                     	;# 
   421  0E13                     	;# 
   422  0E14                     	;# 
   423  0E15                     	;# 
   424  0E16                     	;# 
   425  0E17                     	;# 
   426  0E18                     	;# 
   427  0E19                     	;# 
   428  0E1A                     	;# 
   429  0E1B                     	;# 
   430  0E1C                     	;# 
   431  0E1D                     	;# 
   432  0E1E                     	;# 
   433  0E1F                     	;# 
   434  0E20                     	;# 
   435  0E21                     	;# 
   436  0E22                     	;# 
   437  0E23                     	;# 
   438  0E24                     	;# 
   439  0E25                     	;# 
   440  0E26                     	;# 
   441  0E27                     	;# 
   442  0E28                     	;# 
   443  0E29                     	;# 
   444  0E2A                     	;# 
   445  0E2B                     	;# 
   446  0E2C                     	;# 
   447  0E2D                     	;# 
   448  0E2E                     	;# 
   449  0E2F                     	;# 
   450  0E30                     	;# 
   451  0E31                     	;# 
   452  0E32                     	;# 
   453  0E33                     	;# 
   454  0E34                     	;# 
   455  0E35                     	;# 
   456  0E36                     	;# 
   457  0E37                     	;# 
   458  0E8F                     	;# 
   459  0E90                     	;# 
   460  0E91                     	;# 
   461  0E92                     	;# 
   462  0E93                     	;# 
   463  0E94                     	;# 
   464  0E95                     	;# 
   465  0E96                     	;# 
   466  0E97                     	;# 
   467  0E9C                     	;# 
   468  0E9D                     	;# 
   469  0E9E                     	;# 
   470  0EA1                     	;# 
   471  0EA2                     	;# 
   472  0EA3                     	;# 
   473  0EA4                     	;# 
   474  0EA5                     	;# 
   475  0EA9                     	;# 
   476  0EAA                     	;# 
   477  0EAB                     	;# 
   478  0EAC                     	;# 
   479  0EB1                     	;# 
   480  0EB2                     	;# 
   481  0EB3                     	;# 
   482  0EB8                     	;# 
   483  0EB9                     	;# 
   484  0EBA                     	;# 
   485  0EBB                     	;# 
   486  0EBC                     	;# 
   487  0EBD                     	;# 
   488  0EBE                     	;# 
   489  0EC3                     	;# 
   490  0EC5                     	;# 
   491  0EC6                     	;# 
   492  0EC7                     	;# 
   493  0EC8                     	;# 
   494  0EC9                     	;# 
   495  0ECA                     	;# 
   496  0ECB                     	;# 
   497  0ECC                     	;# 
   498  0F10                     	;# 
   499  0F11                     	;# 
   500  0F12                     	;# 
   501  0F13                     	;# 
   502  0F14                     	;# 
   503  0F15                     	;# 
   504  0F16                     	;# 
   505  0F17                     	;# 
   506  0F18                     	;# 
   507  0F19                     	;# 
   508  0F1A                     	;# 
   509  0F1B                     	;# 
   510  0F1C                     	;# 
   511  0F1D                     	;# 
   512  0F1E                     	;# 
   513  0F1F                     	;# 
   514  0F20                     	;# 
   515  0F21                     	;# 
   516  0F22                     	;# 
   517  0F23                     	;# 
   518  0F24                     	;# 
   519  0F25                     	;# 
   520  0F26                     	;# 
   521  0F27                     	;# 
   522  0F38                     	;# 
   523  0F39                     	;# 
   524  0F3A                     	;# 
   525  0F3B                     	;# 
   526  0F3C                     	;# 
   527  0F3D                     	;# 
   528  0F3E                     	;# 
   529  0F3F                     	;# 
   530  0F40                     	;# 
   531  0F41                     	;# 
   532  0F43                     	;# 
   533  0F44                     	;# 
   534  0F45                     	;# 
   535  0F46                     	;# 
   536  0F47                     	;# 
   537  0F48                     	;# 
   538  0F49                     	;# 
   539  0F4A                     	;# 
   540  0F4B                     	;# 
   541  0F4C                     	;# 
   542  0F4E                     	;# 
   543  0F4F                     	;# 
   544  0F50                     	;# 
   545  0F51                     	;# 
   546  0F52                     	;# 
   547  0F53                     	;# 
   548  0F54                     	;# 
   549  0F55                     	;# 
   550  0F56                     	;# 
   551  0F57                     	;# 
   552  0F65                     	;# 
   553  0F68                     	;# 
   554  0F69                     	;# 
   555  0F6A                     	;# 
   556  0F6B                     	;# 
   557  0FE4                     	;# 
   558  0FE5                     	;# 
   559  0FE6                     	;# 
   560  0FE7                     	;# 
   561  0FE8                     	;# 
   562  0FE9                     	;# 
   563  0FEA                     	;# 
   564  0FEB                     	;# 
   565  0FED                     	;# 
   566  0FEE                     	;# 
   567  0FEF                     	;# 
   568  0000                     	;# 
   569  0001                     	;# 
   570  0002                     	;# 
   571  0003                     	;# 
   572  0004                     	;# 
   573  0005                     	;# 
   574  0006                     	;# 
   575  0007                     	;# 
   576  0008                     	;# 
   577  0009                     	;# 
   578  000A                     	;# 
   579  000B                     	;# 
   580  000C                     	;# 
   581  000D                     	;# 
   582  000E                     	;# 
   583  0010                     	;# 
   584  0011                     	;# 
   585  0012                     	;# 
   586  0013                     	;# 
   587  0016                     	;# 
   588  0017                     	;# 
   589  0018                     	;# 
   590  001C                     	;# 
   591  001C                     	;# 
   592  001D                     	;# 
   593  001D                     	;# 
   594  001E                     	;# 
   595  001F                     	;# 
   596  008C                     	;# 
   597  008C                     	;# 
   598  008D                     	;# 
   599  008E                     	;# 
   600  008E                     	;# 
   601  008F                     	;# 
   602  0090                     	;# 
   603  0090                     	;# 
   604  0091                     	;# 
   605  0093                     	;# 
   606  0094                     	;# 
   607  0095                     	;# 
   608  0096                     	;# 
   609  0097                     	;# 
   610  0098                     	;# 
   611  0099                     	;# 
   612  009A                     	;# 
   613  009B                     	;# 
   614  009C                     	;# 
   615  009D                     	;# 
   616  009E                     	;# 
   617  010C                     	;# 
   618  010D                     	;# 
   619  010E                     	;# 
   620  010E                     	;# 
   621  010F                     	;# 
   622  0110                     	;# 
   623  0110                     	;# 
   624  0111                     	;# 
   625  0112                     	;# 
   626  0112                     	;# 
   627  0113                     	;# 
   628  0114                     	;# 
   629  0114                     	;# 
   630  0115                     	;# 
   631  0116                     	;# 
   632  0116                     	;# 
   633  0117                     	;# 
   634  0119                     	;# 
   635  0119                     	;# 
   636  0119                     	;# 
   637  011A                     	;# 
   638  011A                     	;# 
   639  011A                     	;# 
   640  011B                     	;# 
   641  011B                     	;# 
   642  011B                     	;# 
   643  011B                     	;# 
   644  011B                     	;# 
   645  011C                     	;# 
   646  011C                     	;# 
   647  011C                     	;# 
   648  011D                     	;# 
   649  011D                     	;# 
   650  011D                     	;# 
   651  011E                     	;# 
   652  011E                     	;# 
   653  011E                     	;# 
   654  011F                     	;# 
   655  011F                     	;# 
   656  011F                     	;# 
   657  011F                     	;# 
   658  011F                     	;# 
   659  018C                     	;# 
   660  018D                     	;# 
   661  018E                     	;# 
   662  018F                     	;# 
   663  0190                     	;# 
   664  0191                     	;# 
   665  0192                     	;# 
   666  0196                     	;# 
   667  0197                     	;# 
   668  0198                     	;# 
   669  0199                     	;# 
   670  019A                     	;# 
   671  019B                     	;# 
   672  019C                     	;# 
   673  020C                     	;# 
   674  020D                     	;# 
   675  020E                     	;# 
   676  020F                     	;# 
   677  020F                     	;# 
   678  0210                     	;# 
   679  0210                     	;# 
   680  0211                     	;# 
   681  0211                     	;# 
   682  0212                     	;# 
   683  0213                     	;# 
   684  0214                     	;# 
   685  0215                     	;# 
   686  0215                     	;# 
   687  0216                     	;# 
   688  0216                     	;# 
   689  0217                     	;# 
   690  0217                     	;# 
   691  0218                     	;# 
   692  0219                     	;# 
   693  021A                     	;# 
   694  021B                     	;# 
   695  021B                     	;# 
   696  021C                     	;# 
   697  021C                     	;# 
   698  021D                     	;# 
   699  021D                     	;# 
   700  021E                     	;# 
   701  021F                     	;# 
   702  028C                     	;# 
   703  028C                     	;# 
   704  028D                     	;# 
   705  028D                     	;# 
   706  028E                     	;# 
   707  028F                     	;# 
   708  0290                     	;# 
   709  0290                     	;# 
   710  0291                     	;# 
   711  0292                     	;# 
   712  0292                     	;# 
   713  0293                     	;# 
   714  0293                     	;# 
   715  0294                     	;# 
   716  0295                     	;# 
   717  0296                     	;# 
   718  0296                     	;# 
   719  0297                     	;# 
   720  0298                     	;# 
   721  0298                     	;# 
   722  0299                     	;# 
   723  0299                     	;# 
   724  029A                     	;# 
   725  029B                     	;# 
   726  029C                     	;# 
   727  029C                     	;# 
   728  029D                     	;# 
   729  030C                     	;# 
   730  030C                     	;# 
   731  030D                     	;# 
   732  030E                     	;# 
   733  030F                     	;# 
   734  0310                     	;# 
   735  0310                     	;# 
   736  0311                     	;# 
   737  0312                     	;# 
   738  0313                     	;# 
   739  0314                     	;# 
   740  0314                     	;# 
   741  0315                     	;# 
   742  0316                     	;# 
   743  0317                     	;# 
   744  0318                     	;# 
   745  0318                     	;# 
   746  0319                     	;# 
   747  031A                     	;# 
   748  031B                     	;# 
   749  031C                     	;# 
   750  031C                     	;# 
   751  031D                     	;# 
   752  031E                     	;# 
   753  031F                     	;# 
   754  038C                     	;# 
   755  038D                     	;# 
   756  038E                     	;# 
   757  0390                     	;# 
   758  0391                     	;# 
   759  0392                     	;# 
   760  040C                     	;# 
   761  040D                     	;# 
   762  040E                     	;# 
   763  040F                     	;# 
   764  0410                     	;# 
   765  0411                     	;# 
   766  0416                     	;# 
   767  0416                     	;# 
   768  0417                     	;# 
   769  0418                     	;# 
   770  0418                     	;# 
   771  0419                     	;# 
   772  041A                     	;# 
   773  041A                     	;# 
   774  041B                     	;# 
   775  041C                     	;# 
   776  041C                     	;# 
   777  041D                     	;# 
   778  041E                     	;# 
   779  041F                     	;# 
   780  048C                     	;# 
   781  048C                     	;# 
   782  048D                     	;# 
   783  048E                     	;# 
   784  048F                     	;# 
   785  048F                     	;# 
   786  0490                     	;# 
   787  0491                     	;# 
   788  0492                     	;# 
   789  0492                     	;# 
   790  0493                     	;# 
   791  0494                     	;# 
   792  0495                     	;# 
   793  0495                     	;# 
   794  0496                     	;# 
   795  0497                     	;# 
   796  0498                     	;# 
   797  0499                     	;# 
   798  049A                     	;# 
   799  049B                     	;# 
   800  049C                     	;# 
   801  049D                     	;# 
   802  050C                     	;# 
   803  050C                     	;# 
   804  050D                     	;# 
   805  050E                     	;# 
   806  050F                     	;# 
   807  050F                     	;# 
   808  0510                     	;# 
   809  0511                     	;# 
   810  0512                     	;# 
   811  0512                     	;# 
   812  0513                     	;# 
   813  0514                     	;# 
   814  0515                     	;# 
   815  0515                     	;# 
   816  0516                     	;# 
   817  0517                     	;# 
   818  0518                     	;# 
   819  0519                     	;# 
   820  051A                     	;# 
   821  051B                     	;# 
   822  051C                     	;# 
   823  051D                     	;# 
   824  058C                     	;# 
   825  058C                     	;# 
   826  058D                     	;# 
   827  058E                     	;# 
   828  058F                     	;# 
   829  058F                     	;# 
   830  0590                     	;# 
   831  0591                     	;# 
   832  0592                     	;# 
   833  0593                     	;# 
   834  060C                     	;# 
   835  060D                     	;# 
   836  060E                     	;# 
   837  060F                     	;# 
   838  0610                     	;# 
   839  0611                     	;# 
   840  0612                     	;# 
   841  0613                     	;# 
   842  0614                     	;# 
   843  0616                     	;# 
   844  0617                     	;# 
   845  0618                     	;# 
   846  0619                     	;# 
   847  061A                     	;# 
   848  061B                     	;# 
   849  061C                     	;# 
   850  061D                     	;# 
   851  061E                     	;# 
   852  068C                     	;# 
   853  068D                     	;# 
   854  068E                     	;# 
   855  068F                     	;# 
   856  0690                     	;# 
   857  0691                     	;# 
   858  0692                     	;# 
   859  0693                     	;# 
   860  0694                     	;# 
   861  070C                     	;# 
   862  070D                     	;# 
   863  070E                     	;# 
   864  070F                     	;# 
   865  0710                     	;# 
   866  0711                     	;# 
   867  0712                     	;# 
   868  0713                     	;# 
   869  0714                     	;# 
   870  0716                     	;# 
   871  0717                     	;# 
   872  0718                     	;# 
   873  0719                     	;# 
   874  071A                     	;# 
   875  071B                     	;# 
   876  071C                     	;# 
   877  071D                     	;# 
   878  071E                     	;# 
   879  0796                     	;# 
   880  0797                     	;# 
   881  0798                     	;# 
   882  0799                     	;# 
   883  079A                     	;# 
   884  079B                     	;# 
   885  080C                     	;# 
   886  080D                     	;# 
   887  080E                     	;# 
   888  080F                     	;# 
   889  0810                     	;# 
   890  0811                     	;# 
   891  0812                     	;# 
   892  0813                     	;# 
   893  0814                     	;# 
   894  081A                     	;# 
   895  081B                     	;# 
   896  081C                     	;# 
   897  081D                     	;# 
   898  081E                     	;# 
   899  081F                     	;# 
   900  088C                     	;# 
   901  088D                     	;# 
   902  088E                     	;# 
   903  088F                     	;# 
   904  0890                     	;# 
   905  0891                     	;# 
   906  0892                     	;# 
   907  0893                     	;# 
   908  0895                     	;# 
   909  0896                     	;# 
   910  0897                     	;# 
   911  0898                     	;# 
   912  0899                     	;# 
   913  089A                     	;# 
   914  089B                     	;# 
   915  090C                     	;# 
   916  090E                     	;# 
   917  090F                     	;# 
   918  091F                     	;# 
   919  091F                     	;# 
   920  098F                     	;# 
   921  098F                     	;# 
   922  0990                     	;# 
   923  0991                     	;# 
   924  0992                     	;# 
   925  0993                     	;# 
   926  0994                     	;# 
   927  0995                     	;# 
   928  0996                     	;# 
   929  0997                     	;# 
   930  0E0F                     	;# 
   931  0E10                     	;# 
   932  0E11                     	;# 
   933  0E12                     	;# 
   934  0E13                     	;# 
   935  0E14                     	;# 
   936  0E15                     	;# 
   937  0E16                     	;# 
   938  0E17                     	;# 
   939  0E18                     	;# 
   940  0E19                     	;# 
   941  0E1A                     	;# 
   942  0E1B                     	;# 
   943  0E1C                     	;# 
   944  0E1D                     	;# 
   945  0E1E                     	;# 
   946  0E1F                     	;# 
   947  0E20                     	;# 
   948  0E21                     	;# 
   949  0E22                     	;# 
   950  0E23                     	;# 
   951  0E24                     	;# 
   952  0E25                     	;# 
   953  0E26                     	;# 
   954  0E27                     	;# 
   955  0E28                     	;# 
   956  0E29                     	;# 
   957  0E2A                     	;# 
   958  0E2B                     	;# 
   959  0E2C                     	;# 
   960  0E2D                     	;# 
   961  0E2E                     	;# 
   962  0E2F                     	;# 
   963  0E30                     	;# 
   964  0E31                     	;# 
   965  0E32                     	;# 
   966  0E33                     	;# 
   967  0E34                     	;# 
   968  0E35                     	;# 
   969  0E36                     	;# 
   970  0E37                     	;# 
   971  0E8F                     	;# 
   972  0E90                     	;# 
   973  0E91                     	;# 
   974  0E92                     	;# 
   975  0E93                     	;# 
   976  0E94                     	;# 
   977  0E95                     	;# 
   978  0E96                     	;# 
   979  0E97                     	;# 
   980  0E9C                     	;# 
   981  0E9D                     	;# 
   982  0E9E                     	;# 
   983  0EA1                     	;# 
   984  0EA2                     	;# 
   985  0EA3                     	;# 
   986  0EA4                     	;# 
   987  0EA5                     	;# 
   988  0EA9                     	;# 
   989  0EAA                     	;# 
   990  0EAB                     	;# 
   991  0EAC                     	;# 
   992  0EB1                     	;# 
   993  0EB2                     	;# 
   994  0EB3                     	;# 
   995  0EB8                     	;# 
   996  0EB9                     	;# 
   997  0EBA                     	;# 
   998  0EBB                     	;# 
   999  0EBC                     	;# 
  1000  0EBD                     	;# 
  1001  0EBE                     	;# 
  1002  0EC3                     	;# 
  1003  0EC5                     	;# 
  1004  0EC6                     	;# 
  1005  0EC7                     	;# 
  1006  0EC8                     	;# 
  1007  0EC9                     	;# 
  1008  0ECA                     	;# 
  1009  0ECB                     	;# 
  1010  0ECC                     	;# 
  1011  0F10                     	;# 
  1012  0F11                     	;# 
  1013  0F12                     	;# 
  1014  0F13                     	;# 
  1015  0F14                     	;# 
  1016  0F15                     	;# 
  1017  0F16                     	;# 
  1018  0F17                     	;# 
  1019  0F18                     	;# 
  1020  0F19                     	;# 
  1021  0F1A                     	;# 
  1022  0F1B                     	;# 
  1023  0F1C                     	;# 
  1024  0F1D                     	;# 
  1025  0F1E                     	;# 
  1026  0F1F                     	;# 
  1027  0F20                     	;# 
  1028  0F21                     	;# 
  1029  0F22                     	;# 
  1030  0F23                     	;# 
  1031  0F24                     	;# 
  1032  0F25                     	;# 
  1033  0F26                     	;# 
  1034  0F27                     	;# 
  1035  0F38                     	;# 
  1036  0F39                     	;# 
  1037  0F3A                     	;# 
  1038  0F3B                     	;# 
  1039  0F3C                     	;# 
  1040  0F3D                     	;# 
  1041  0F3E                     	;# 
  1042  0F3F                     	;# 
  1043  0F40                     	;# 
  1044  0F41                     	;# 
  1045  0F43                     	;# 
  1046  0F44                     	;# 
  1047  0F45                     	;# 
  1048  0F46                     	;# 
  1049  0F47                     	;# 
  1050  0F48                     	;# 
  1051  0F49                     	;# 
  1052  0F4A                     	;# 
  1053  0F4B                     	;# 
  1054  0F4C                     	;# 
  1055  0F4E                     	;# 
  1056  0F4F                     	;# 
  1057  0F50                     	;# 
  1058  0F51                     	;# 
  1059  0F52                     	;# 
  1060  0F53                     	;# 
  1061  0F54                     	;# 
  1062  0F55                     	;# 
  1063  0F56                     	;# 
  1064  0F57                     	;# 
  1065  0F65                     	;# 
  1066  0F68                     	;# 
  1067  0F69                     	;# 
  1068  0F6A                     	;# 
  1069  0F6B                     	;# 
  1070  0FE4                     	;# 
  1071  0FE5                     	;# 
  1072  0FE6                     	;# 
  1073  0FE7                     	;# 
  1074  0FE8                     	;# 
  1075  0FE9                     	;# 
  1076  0FEA                     	;# 
  1077  0FEB                     	;# 
  1078  0FED                     	;# 
  1079  0FEE                     	;# 
  1080  0FEF                     	;# 
  1081  0000                     	;# 
  1082  0001                     	;# 
  1083  0002                     	;# 
  1084  0003                     	;# 
  1085  0004                     	;# 
  1086  0005                     	;# 
  1087  0006                     	;# 
  1088  0007                     	;# 
  1089  0008                     	;# 
  1090  0009                     	;# 
  1091  000A                     	;# 
  1092  000B                     	;# 
  1093  000C                     	;# 
  1094  000D                     	;# 
  1095  000E                     	;# 
  1096  0010                     	;# 
  1097  0011                     	;# 
  1098  0012                     	;# 
  1099  0013                     	;# 
  1100  0016                     	;# 
  1101  0017                     	;# 
  1102  0018                     	;# 
  1103  001C                     	;# 
  1104  001C                     	;# 
  1105  001D                     	;# 
  1106  001D                     	;# 
  1107  001E                     	;# 
  1108  001F                     	;# 
  1109  008C                     	;# 
  1110  008C                     	;# 
  1111  008D                     	;# 
  1112  008E                     	;# 
  1113  008E                     	;# 
  1114  008F                     	;# 
  1115  0090                     	;# 
  1116  0090                     	;# 
  1117  0091                     	;# 
  1118  0093                     	;# 
  1119  0094                     	;# 
  1120  0095                     	;# 
  1121  0096                     	;# 
  1122  0097                     	;# 
  1123  0098                     	;# 
  1124  0099                     	;# 
  1125  009A                     	;# 
  1126  009B                     	;# 
  1127  009C                     	;# 
  1128  009D                     	;# 
  1129  009E                     	;# 
  1130  010C                     	;# 
  1131  010D                     	;# 
  1132  010E                     	;# 
  1133  010E                     	;# 
  1134  010F                     	;# 
  1135  0110                     	;# 
  1136  0110                     	;# 
  1137  0111                     	;# 
  1138  0112                     	;# 
  1139  0112                     	;# 
  1140  0113                     	;# 
  1141  0114                     	;# 
  1142  0114                     	;# 
  1143  0115                     	;# 
  1144  0116                     	;# 
  1145  0116                     	;# 
  1146  0117                     	;# 
  1147  0119                     	;# 
  1148  0119                     	;# 
  1149  0119                     	;# 
  1150  011A                     	;# 
  1151  011A                     	;# 
  1152  011A                     	;# 
  1153  011B                     	;# 
  1154  011B                     	;# 
  1155  011B                     	;# 
  1156  011B                     	;# 
  1157  011B                     	;# 
  1158  011C                     	;# 
  1159  011C                     	;# 
  1160  011C                     	;# 
  1161  011D                     	;# 
  1162  011D                     	;# 
  1163  011D                     	;# 
  1164  011E                     	;# 
  1165  011E                     	;# 
  1166  011E                     	;# 
  1167  011F                     	;# 
  1168  011F                     	;# 
  1169  011F                     	;# 
  1170  011F                     	;# 
  1171  011F                     	;# 
  1172  018C                     	;# 
  1173  018D                     	;# 
  1174  018E                     	;# 
  1175  018F                     	;# 
  1176  0190                     	;# 
  1177  0191                     	;# 
  1178  0192                     	;# 
  1179  0196                     	;# 
  1180  0197                     	;# 
  1181  0198                     	;# 
  1182  0199                     	;# 
  1183  019A                     	;# 
  1184  019B                     	;# 
  1185  019C                     	;# 
  1186  020C                     	;# 
  1187  020D                     	;# 
  1188  020E                     	;# 
  1189  020F                     	;# 
  1190  020F                     	;# 
  1191  0210                     	;# 
  1192  0210                     	;# 
  1193  0211                     	;# 
  1194  0211                     	;# 
  1195  0212                     	;# 
  1196  0213                     	;# 
  1197  0214                     	;# 
  1198  0215                     	;# 
  1199  0215                     	;# 
  1200  0216                     	;# 
  1201  0216                     	;# 
  1202  0217                     	;# 
  1203  0217                     	;# 
  1204  0218                     	;# 
  1205  0219                     	;# 
  1206  021A                     	;# 
  1207  021B                     	;# 
  1208  021B                     	;# 
  1209  021C                     	;# 
  1210  021C                     	;# 
  1211  021D                     	;# 
  1212  021D                     	;# 
  1213  021E                     	;# 
  1214  021F                     	;# 
  1215  028C                     	;# 
  1216  028C                     	;# 
  1217  028D                     	;# 
  1218  028D                     	;# 
  1219  028E                     	;# 
  1220  028F                     	;# 
  1221  0290                     	;# 
  1222  0290                     	;# 
  1223  0291                     	;# 
  1224  0292                     	;# 
  1225  0292                     	;# 
  1226  0293                     	;# 
  1227  0293                     	;# 
  1228  0294                     	;# 
  1229  0295                     	;# 
  1230  0296                     	;# 
  1231  0296                     	;# 
  1232  0297                     	;# 
  1233  0298                     	;# 
  1234  0298                     	;# 
  1235  0299                     	;# 
  1236  0299                     	;# 
  1237  029A                     	;# 
  1238  029B                     	;# 
  1239  029C                     	;# 
  1240  029C                     	;# 
  1241  029D                     	;# 
  1242  030C                     	;# 
  1243  030C                     	;# 
  1244  030D                     	;# 
  1245  030E                     	;# 
  1246  030F                     	;# 
  1247  0310                     	;# 
  1248  0310                     	;# 
  1249  0311                     	;# 
  1250  0312                     	;# 
  1251  0313                     	;# 
  1252  0314                     	;# 
  1253  0314                     	;# 
  1254  0315                     	;# 
  1255  0316                     	;# 
  1256  0317                     	;# 
  1257  0318                     	;# 
  1258  0318                     	;# 
  1259  0319                     	;# 
  1260  031A                     	;# 
  1261  031B                     	;# 
  1262  031C                     	;# 
  1263  031C                     	;# 
  1264  031D                     	;# 
  1265  031E                     	;# 
  1266  031F                     	;# 
  1267  038C                     	;# 
  1268  038D                     	;# 
  1269  038E                     	;# 
  1270  0390                     	;# 
  1271  0391                     	;# 
  1272  0392                     	;# 
  1273  040C                     	;# 
  1274  040D                     	;# 
  1275  040E                     	;# 
  1276  040F                     	;# 
  1277  0410                     	;# 
  1278  0411                     	;# 
  1279  0416                     	;# 
  1280  0416                     	;# 
  1281  0417                     	;# 
  1282  0418                     	;# 
  1283  0418                     	;# 
  1284  0419                     	;# 
  1285  041A                     	;# 
  1286  041A                     	;# 
  1287  041B                     	;# 
  1288  041C                     	;# 
  1289  041C                     	;# 
  1290  041D                     	;# 
  1291  041E                     	;# 
  1292  041F                     	;# 
  1293  048C                     	;# 
  1294  048C                     	;# 
  1295  048D                     	;# 
  1296  048E                     	;# 
  1297  048F                     	;# 
  1298  048F                     	;# 
  1299  0490                     	;# 
  1300  0491                     	;# 
  1301  0492                     	;# 
  1302  0492                     	;# 
  1303  0493                     	;# 
  1304  0494                     	;# 
  1305  0495                     	;# 
  1306  0495                     	;# 
  1307  0496                     	;# 
  1308  0497                     	;# 
  1309  0498                     	;# 
  1310  0499                     	;# 
  1311  049A                     	;# 
  1312  049B                     	;# 
  1313  049C                     	;# 
  1314  049D                     	;# 
  1315  050C                     	;# 
  1316  050C                     	;# 
  1317  050D                     	;# 
  1318  050E                     	;# 
  1319  050F                     	;# 
  1320  050F                     	;# 
  1321  0510                     	;# 
  1322  0511                     	;# 
  1323  0512                     	;# 
  1324  0512                     	;# 
  1325  0513                     	;# 
  1326  0514                     	;# 
  1327  0515                     	;# 
  1328  0515                     	;# 
  1329  0516                     	;# 
  1330  0517                     	;# 
  1331  0518                     	;# 
  1332  0519                     	;# 
  1333  051A                     	;# 
  1334  051B                     	;# 
  1335  051C                     	;# 
  1336  051D                     	;# 
  1337  058C                     	;# 
  1338  058C                     	;# 
  1339  058D                     	;# 
  1340  058E                     	;# 
  1341  058F                     	;# 
  1342  058F                     	;# 
  1343  0590                     	;# 
  1344  0591                     	;# 
  1345  0592                     	;# 
  1346  0593                     	;# 
  1347  060C                     	;# 
  1348  060D                     	;# 
  1349  060E                     	;# 
  1350  060F                     	;# 
  1351  0610                     	;# 
  1352  0611                     	;# 
  1353  0612                     	;# 
  1354  0613                     	;# 
  1355  0614                     	;# 
  1356  0616                     	;# 
  1357  0617                     	;# 
  1358  0618                     	;# 
  1359  0619                     	;# 
  1360  061A                     	;# 
  1361  061B                     	;# 
  1362  061C                     	;# 
  1363  061D                     	;# 
  1364  061E                     	;# 
  1365  068C                     	;# 
  1366  068D                     	;# 
  1367  068E                     	;# 
  1368  068F                     	;# 
  1369  0690                     	;# 
  1370  0691                     	;# 
  1371  0692                     	;# 
  1372  0693                     	;# 
  1373  0694                     	;# 
  1374  070C                     	;# 
  1375  070D                     	;# 
  1376  070E                     	;# 
  1377  070F                     	;# 
  1378  0710                     	;# 
  1379  0711                     	;# 
  1380  0712                     	;# 
  1381  0713                     	;# 
  1382  0714                     	;# 
  1383  0716                     	;# 
  1384  0717                     	;# 
  1385  0718                     	;# 
  1386  0719                     	;# 
  1387  071A                     	;# 
  1388  071B                     	;# 
  1389  071C                     	;# 
  1390  071D                     	;# 
  1391  071E                     	;# 
  1392  0796                     	;# 
  1393  0797                     	;# 
  1394  0798                     	;# 
  1395  0799                     	;# 
  1396  079A                     	;# 
  1397  079B                     	;# 
  1398  080C                     	;# 
  1399  080D                     	;# 
  1400  080E                     	;# 
  1401  080F                     	;# 
  1402  0810                     	;# 
  1403  0811                     	;# 
  1404  0812                     	;# 
  1405  0813                     	;# 
  1406  0814                     	;# 
  1407  081A                     	;# 
  1408  081B                     	;# 
  1409  081C                     	;# 
  1410  081D                     	;# 
  1411  081E                     	;# 
  1412  081F                     	;# 
  1413  088C                     	;# 
  1414  088D                     	;# 
  1415  088E                     	;# 
  1416  088F                     	;# 
  1417  0890                     	;# 
  1418  0891                     	;# 
  1419  0892                     	;# 
  1420  0893                     	;# 
  1421  0895                     	;# 
  1422  0896                     	;# 
  1423  0897                     	;# 
  1424  0898                     	;# 
  1425  0899                     	;# 
  1426  089A                     	;# 
  1427  089B                     	;# 
  1428  090C                     	;# 
  1429  090E                     	;# 
  1430  090F                     	;# 
  1431  091F                     	;# 
  1432  091F                     	;# 
  1433  098F                     	;# 
  1434  098F                     	;# 
  1435  0990                     	;# 
  1436  0991                     	;# 
  1437  0992                     	;# 
  1438  0993                     	;# 
  1439  0994                     	;# 
  1440  0995                     	;# 
  1441  0996                     	;# 
  1442  0997                     	;# 
  1443  0E0F                     	;# 
  1444  0E10                     	;# 
  1445  0E11                     	;# 
  1446  0E12                     	;# 
  1447  0E13                     	;# 
  1448  0E14                     	;# 
  1449  0E15                     	;# 
  1450  0E16                     	;# 
  1451  0E17                     	;# 
  1452  0E18                     	;# 
  1453  0E19                     	;# 
  1454  0E1A                     	;# 
  1455  0E1B                     	;# 
  1456  0E1C                     	;# 
  1457  0E1D                     	;# 
  1458  0E1E                     	;# 
  1459  0E1F                     	;# 
  1460  0E20                     	;# 
  1461  0E21                     	;# 
  1462  0E22                     	;# 
  1463  0E23                     	;# 
  1464  0E24                     	;# 
  1465  0E25                     	;# 
  1466  0E26                     	;# 
  1467  0E27                     	;# 
  1468  0E28                     	;# 
  1469  0E29                     	;# 
  1470  0E2A                     	;# 
  1471  0E2B                     	;# 
  1472  0E2C                     	;# 
  1473  0E2D                     	;# 
  1474  0E2E                     	;# 
  1475  0E2F                     	;# 
  1476  0E30                     	;# 
  1477  0E31                     	;# 
  1478  0E32                     	;# 
  1479  0E33                     	;# 
  1480  0E34                     	;# 
  1481  0E35                     	;# 
  1482  0E36                     	;# 
  1483  0E37                     	;# 
  1484  0E8F                     	;# 
  1485  0E90                     	;# 
  1486  0E91                     	;# 
  1487  0E92                     	;# 
  1488  0E93                     	;# 
  1489  0E94                     	;# 
  1490  0E95                     	;# 
  1491  0E96                     	;# 
  1492  0E97                     	;# 
  1493  0E9C                     	;# 
  1494  0E9D                     	;# 
  1495  0E9E                     	;# 
  1496  0EA1                     	;# 
  1497  0EA2                     	;# 
  1498  0EA3                     	;# 
  1499  0EA4                     	;# 
  1500  0EA5                     	;# 
  1501  0EA9                     	;# 
  1502  0EAA                     	;# 
  1503  0EAB                     	;# 
  1504  0EAC                     	;# 
  1505  0EB1                     	;# 
  1506  0EB2                     	;# 
  1507  0EB3                     	;# 
  1508  0EB8                     	;# 
  1509  0EB9                     	;# 
  1510  0EBA                     	;# 
  1511  0EBB                     	;# 
  1512  0EBC                     	;# 
  1513  0EBD                     	;# 
  1514  0EBE                     	;# 
  1515  0EC3                     	;# 
  1516  0EC5                     	;# 
  1517  0EC6                     	;# 
  1518  0EC7                     	;# 
  1519  0EC8                     	;# 
  1520  0EC9                     	;# 
  1521  0ECA                     	;# 
  1522  0ECB                     	;# 
  1523  0ECC                     	;# 
  1524  0F10                     	;# 
  1525  0F11                     	;# 
  1526  0F12                     	;# 
  1527  0F13                     	;# 
  1528  0F14                     	;# 
  1529  0F15                     	;# 
  1530  0F16                     	;# 
  1531  0F17                     	;# 
  1532  0F18                     	;# 
  1533  0F19                     	;# 
  1534  0F1A                     	;# 
  1535  0F1B                     	;# 
  1536  0F1C                     	;# 
  1537  0F1D                     	;# 
  1538  0F1E                     	;# 
  1539  0F1F                     	;# 
  1540  0F20                     	;# 
  1541  0F21                     	;# 
  1542  0F22                     	;# 
  1543  0F23                     	;# 
  1544  0F24                     	;# 
  1545  0F25                     	;# 
  1546  0F26                     	;# 
  1547  0F27                     	;# 
  1548  0F38                     	;# 
  1549  0F39                     	;# 
  1550  0F3A                     	;# 
  1551  0F3B                     	;# 
  1552  0F3C                     	;# 
  1553  0F3D                     	;# 
  1554  0F3E                     	;# 
  1555  0F3F                     	;# 
  1556  0F40                     	;# 
  1557  0F41                     	;# 
  1558  0F43                     	;# 
  1559  0F44                     	;# 
  1560  0F45                     	;# 
  1561  0F46                     	;# 
  1562  0F47                     	;# 
  1563  0F48                     	;# 
  1564  0F49                     	;# 
  1565  0F4A                     	;# 
  1566  0F4B                     	;# 
  1567  0F4C                     	;# 
  1568  0F4E                     	;# 
  1569  0F4F                     	;# 
  1570  0F50                     	;# 
  1571  0F51                     	;# 
  1572  0F52                     	;# 
  1573  0F53                     	;# 
  1574  0F54                     	;# 
  1575  0F55                     	;# 
  1576  0F56                     	;# 
  1577  0F57                     	;# 
  1578  0F65                     	;# 
  1579  0F68                     	;# 
  1580  0F69                     	;# 
  1581  0F6A                     	;# 
  1582  0F6B                     	;# 
  1583  0FE4                     	;# 
  1584  0FE5                     	;# 
  1585  0FE6                     	;# 
  1586  0FE7                     	;# 
  1587  0FE8                     	;# 
  1588  0FE9                     	;# 
  1589  0FEA                     	;# 
  1590  0FEB                     	;# 
  1591  0FED                     	;# 
  1592  0FEE                     	;# 
  1593  0FEF                     	;# 
  1594  0000                     	;# 
  1595  0001                     	;# 
  1596  0002                     	;# 
  1597  0003                     	;# 
  1598  0004                     	;# 
  1599  0005                     	;# 
  1600  0006                     	;# 
  1601  0007                     	;# 
  1602  0008                     	;# 
  1603  0009                     	;# 
  1604  000A                     	;# 
  1605  000B                     	;# 
  1606  000C                     	;# 
  1607  000D                     	;# 
  1608  000E                     	;# 
  1609  0010                     	;# 
  1610  0011                     	;# 
  1611  0012                     	;# 
  1612  0013                     	;# 
  1613  0016                     	;# 
  1614  0017                     	;# 
  1615  0018                     	;# 
  1616  001C                     	;# 
  1617  001C                     	;# 
  1618  001D                     	;# 
  1619  001D                     	;# 
  1620  001E                     	;# 
  1621  001F                     	;# 
  1622  008C                     	;# 
  1623  008C                     	;# 
  1624  008D                     	;# 
  1625  008E                     	;# 
  1626  008E                     	;# 
  1627  008F                     	;# 
  1628  0090                     	;# 
  1629  0090                     	;# 
  1630  0091                     	;# 
  1631  0093                     	;# 
  1632  0094                     	;# 
  1633  0095                     	;# 
  1634  0096                     	;# 
  1635  0097                     	;# 
  1636  0098                     	;# 
  1637  0099                     	;# 
  1638  009A                     	;# 
  1639  009B                     	;# 
  1640  009C                     	;# 
  1641  009D                     	;# 
  1642  009E                     	;# 
  1643  010C                     	;# 
  1644  010D                     	;# 
  1645  010E                     	;# 
  1646  010E                     	;# 
  1647  010F                     	;# 
  1648  0110                     	;# 
  1649  0110                     	;# 
  1650  0111                     	;# 
  1651  0112                     	;# 
  1652  0112                     	;# 
  1653  0113                     	;# 
  1654  0114                     	;# 
  1655  0114                     	;# 
  1656  0115                     	;# 
  1657  0116                     	;# 
  1658  0116                     	;# 
  1659  0117                     	;# 
  1660  0119                     	;# 
  1661  0119                     	;# 
  1662  0119                     	;# 
  1663  011A                     	;# 
  1664  011A                     	;# 
  1665  011A                     	;# 
  1666  011B                     	;# 
  1667  011B                     	;# 
  1668  011B                     	;# 
  1669  011B                     	;# 
  1670  011B                     	;# 
  1671  011C                     	;# 
  1672  011C                     	;# 
  1673  011C                     	;# 
  1674  011D                     	;# 
  1675  011D                     	;# 
  1676  011D                     	;# 
  1677  011E                     	;# 
  1678  011E                     	;# 
  1679  011E                     	;# 
  1680  011F                     	;# 
  1681  011F                     	;# 
  1682  011F                     	;# 
  1683  011F                     	;# 
  1684  011F                     	;# 
  1685  018C                     	;# 
  1686  018D                     	;# 
  1687  018E                     	;# 
  1688  018F                     	;# 
  1689  0190                     	;# 
  1690  0191                     	;# 
  1691  0192                     	;# 
  1692  0196                     	;# 
  1693  0197                     	;# 
  1694  0198                     	;# 
  1695  0199                     	;# 
  1696  019A                     	;# 
  1697  019B                     	;# 
  1698  019C                     	;# 
  1699  020C                     	;# 
  1700  020D                     	;# 
  1701  020E                     	;# 
  1702  020F                     	;# 
  1703  020F                     	;# 
  1704  0210                     	;# 
  1705  0210                     	;# 
  1706  0211                     	;# 
  1707  0211                     	;# 
  1708  0212                     	;# 
  1709  0213                     	;# 
  1710  0214                     	;# 
  1711  0215                     	;# 
  1712  0215                     	;# 
  1713  0216                     	;# 
  1714  0216                     	;# 
  1715  0217                     	;# 
  1716  0217                     	;# 
  1717  0218                     	;# 
  1718  0219                     	;# 
  1719  021A                     	;# 
  1720  021B                     	;# 
  1721  021B                     	;# 
  1722  021C                     	;# 
  1723  021C                     	;# 
  1724  021D                     	;# 
  1725  021D                     	;# 
  1726  021E                     	;# 
  1727  021F                     	;# 
  1728  028C                     	;# 
  1729  028C                     	;# 
  1730  028D                     	;# 
  1731  028D                     	;# 
  1732  028E                     	;# 
  1733  028F                     	;# 
  1734  0290                     	;# 
  1735  0290                     	;# 
  1736  0291                     	;# 
  1737  0292                     	;# 
  1738  0292                     	;# 
  1739  0293                     	;# 
  1740  0293                     	;# 
  1741  0294                     	;# 
  1742  0295                     	;# 
  1743  0296                     	;# 
  1744  0296                     	;# 
  1745  0297                     	;# 
  1746  0298                     	;# 
  1747  0298                     	;# 
  1748  0299                     	;# 
  1749  0299                     	;# 
  1750  029A                     	;# 
  1751  029B                     	;# 
  1752  029C                     	;# 
  1753  029C                     	;# 
  1754  029D                     	;# 
  1755  030C                     	;# 
  1756  030C                     	;# 
  1757  030D                     	;# 
  1758  030E                     	;# 
  1759  030F                     	;# 
  1760  0310                     	;# 
  1761  0310                     	;# 
  1762  0311                     	;# 
  1763  0312                     	;# 
  1764  0313                     	;# 
  1765  0314                     	;# 
  1766  0314                     	;# 
  1767  0315                     	;# 
  1768  0316                     	;# 
  1769  0317                     	;# 
  1770  0318                     	;# 
  1771  0318                     	;# 
  1772  0319                     	;# 
  1773  031A                     	;# 
  1774  031B                     	;# 
  1775  031C                     	;# 
  1776  031C                     	;# 
  1777  031D                     	;# 
  1778  031E                     	;# 
  1779  031F                     	;# 
  1780  038C                     	;# 
  1781  038D                     	;# 
  1782  038E                     	;# 
  1783  0390                     	;# 
  1784  0391                     	;# 
  1785  0392                     	;# 
  1786  040C                     	;# 
  1787  040D                     	;# 
  1788  040E                     	;# 
  1789  040F                     	;# 
  1790  0410                     	;# 
  1791  0411                     	;# 
  1792  0416                     	;# 
  1793  0416                     	;# 
  1794  0417                     	;# 
  1795  0418                     	;# 
  1796  0418                     	;# 
  1797  0419                     	;# 
  1798  041A                     	;# 
  1799  041A                     	;# 
  1800  041B                     	;# 
  1801  041C                     	;# 
  1802  041C                     	;# 
  1803  041D                     	;# 
  1804  041E                     	;# 
  1805  041F                     	;# 
  1806  048C                     	;# 
  1807  048C                     	;# 
  1808  048D                     	;# 
  1809  048E                     	;# 
  1810  048F                     	;# 
  1811  048F                     	;# 
  1812  0490                     	;# 
  1813  0491                     	;# 
  1814  0492                     	;# 
  1815  0492                     	;# 
  1816  0493                     	;# 
  1817  0494                     	;# 
  1818  0495                     	;# 
  1819  0495                     	;# 
  1820  0496                     	;# 
  1821  0497                     	;# 
  1822  0498                     	;# 
  1823  0499                     	;# 
  1824  049A                     	;# 
  1825  049B                     	;# 
  1826  049C                     	;# 
  1827  049D                     	;# 
  1828  050C                     	;# 
  1829  050C                     	;# 
  1830  050D                     	;# 
  1831  050E                     	;# 
  1832  050F                     	;# 
  1833  050F                     	;# 
  1834  0510                     	;# 
  1835  0511                     	;# 
  1836  0512                     	;# 
  1837  0512                     	;# 
  1838  0513                     	;# 
  1839  0514                     	;# 
  1840  0515                     	;# 
  1841  0515                     	;# 
  1842  0516                     	;# 
  1843  0517                     	;# 
  1844  0518                     	;# 
  1845  0519                     	;# 
  1846  051A                     	;# 
  1847  051B                     	;# 
  1848  051C                     	;# 
  1849  051D                     	;# 
  1850  058C                     	;# 
  1851  058C                     	;# 
  1852  058D                     	;# 
  1853  058E                     	;# 
  1854  058F                     	;# 
  1855  058F                     	;# 
  1856  0590                     	;# 
  1857  0591                     	;# 
  1858  0592                     	;# 
  1859  0593                     	;# 
  1860  060C                     	;# 
  1861  060D                     	;# 
  1862  060E                     	;# 
  1863  060F                     	;# 
  1864  0610                     	;# 
  1865  0611                     	;# 
  1866  0612                     	;# 
  1867  0613                     	;# 
  1868  0614                     	;# 
  1869  0616                     	;# 
  1870  0617                     	;# 
  1871  0618                     	;# 
  1872  0619                     	;# 
  1873  061A                     	;# 
  1874  061B                     	;# 
  1875  061C                     	;# 
  1876  061D                     	;# 
  1877  061E                     	;# 
  1878  068C                     	;# 
  1879  068D                     	;# 
  1880  068E                     	;# 
  1881  068F                     	;# 
  1882  0690                     	;# 
  1883  0691                     	;# 
  1884  0692                     	;# 
  1885  0693                     	;# 
  1886  0694                     	;# 
  1887  070C                     	;# 
  1888  070D                     	;# 
  1889  070E                     	;# 
  1890  070F                     	;# 
  1891  0710                     	;# 
  1892  0711                     	;# 
  1893  0712                     	;# 
  1894  0713                     	;# 
  1895  0714                     	;# 
  1896  0716                     	;# 
  1897  0717                     	;# 
  1898  0718                     	;# 
  1899  0719                     	;# 
  1900  071A                     	;# 
  1901  071B                     	;# 
  1902  071C                     	;# 
  1903  071D                     	;# 
  1904  071E                     	;# 
  1905  0796                     	;# 
  1906  0797                     	;# 
  1907  0798                     	;# 
  1908  0799                     	;# 
  1909  079A                     	;# 
  1910  079B                     	;# 
  1911  080C                     	;# 
  1912  080D                     	;# 
  1913  080E                     	;# 
  1914  080F                     	;# 
  1915  0810                     	;# 
  1916  0811                     	;# 
  1917  0812                     	;# 
  1918  0813                     	;# 
  1919  0814                     	;# 
  1920  081A                     	;# 
  1921  081B                     	;# 
  1922  081C                     	;# 
  1923  081D                     	;# 
  1924  081E                     	;# 
  1925  081F                     	;# 
  1926  088C                     	;# 
  1927  088D                     	;# 
  1928  088E                     	;# 
  1929  088F                     	;# 
  1930  0890                     	;# 
  1931  0891                     	;# 
  1932  0892                     	;# 
  1933  0893                     	;# 
  1934  0895                     	;# 
  1935  0896                     	;# 
  1936  0897                     	;# 
  1937  0898                     	;# 
  1938  0899                     	;# 
  1939  089A                     	;# 
  1940  089B                     	;# 
  1941  090C                     	;# 
  1942  090E                     	;# 
  1943  090F                     	;# 
  1944  091F                     	;# 
  1945  091F                     	;# 
  1946  098F                     	;# 
  1947  098F                     	;# 
  1948  0990                     	;# 
  1949  0991                     	;# 
  1950  0992                     	;# 
  1951  0993                     	;# 
  1952  0994                     	;# 
  1953  0995                     	;# 
  1954  0996                     	;# 
  1955  0997                     	;# 
  1956  0E0F                     	;# 
  1957  0E10                     	;# 
  1958  0E11                     	;# 
  1959  0E12                     	;# 
  1960  0E13                     	;# 
  1961  0E14                     	;# 
  1962  0E15                     	;# 
  1963  0E16                     	;# 
  1964  0E17                     	;# 
  1965  0E18                     	;# 
  1966  0E19                     	;# 
  1967  0E1A                     	;# 
  1968  0E1B                     	;# 
  1969  0E1C                     	;# 
  1970  0E1D                     	;# 
  1971  0E1E                     	;# 
  1972  0E1F                     	;# 
  1973  0E20                     	;# 
  1974  0E21                     	;# 
  1975  0E22                     	;# 
  1976  0E23                     	;# 
  1977  0E24                     	;# 
  1978  0E25                     	;# 
  1979  0E26                     	;# 
  1980  0E27                     	;# 
  1981  0E28                     	;# 
  1982  0E29                     	;# 
  1983  0E2A                     	;# 
  1984  0E2B                     	;# 
  1985  0E2C                     	;# 
  1986  0E2D                     	;# 
  1987  0E2E                     	;# 
  1988  0E2F                     	;# 
  1989  0E30                     	;# 
  1990  0E31                     	;# 
  1991  0E32                     	;# 
  1992  0E33                     	;# 
  1993  0E34                     	;# 
  1994  0E35                     	;# 
  1995  0E36                     	;# 
  1996  0E37                     	;# 
  1997  0E8F                     	;# 
  1998  0E90                     	;# 
  1999  0E91                     	;# 
  2000  0E92                     	;# 
  2001  0E93                     	;# 
  2002  0E94                     	;# 
  2003  0E95                     	;# 
  2004  0E96                     	;# 
  2005  0E97                     	;# 
  2006  0E9C                     	;# 
  2007  0E9D                     	;# 
  2008  0E9E                     	;# 
  2009  0EA1                     	;# 
  2010  0EA2                     	;# 
  2011  0EA3                     	;# 
  2012  0EA4                     	;# 
  2013  0EA5                     	;# 
  2014  0EA9                     	;# 
  2015  0EAA                     	;# 
  2016  0EAB                     	;# 
  2017  0EAC                     	;# 
  2018  0EB1                     	;# 
  2019  0EB2                     	;# 
  2020  0EB3                     	;# 
  2021  0EB8                     	;# 
  2022  0EB9                     	;# 
  2023  0EBA                     	;# 
  2024  0EBB                     	;# 
  2025  0EBC                     	;# 
  2026  0EBD                     	;# 
  2027  0EBE                     	;# 
  2028  0EC3                     	;# 
  2029  0EC5                     	;# 
  2030  0EC6                     	;# 
  2031  0EC7                     	;# 
  2032  0EC8                     	;# 
  2033  0EC9                     	;# 
  2034  0ECA                     	;# 
  2035  0ECB                     	;# 
  2036  0ECC                     	;# 
  2037  0F10                     	;# 
  2038  0F11                     	;# 
  2039  0F12                     	;# 
  2040  0F13                     	;# 
  2041  0F14                     	;# 
  2042  0F15                     	;# 
  2043  0F16                     	;# 
  2044  0F17                     	;# 
  2045  0F18                     	;# 
  2046  0F19                     	;# 
  2047  0F1A                     	;# 
  2048  0F1B                     	;# 
  2049  0F1C                     	;# 
  2050  0F1D                     	;# 
  2051  0F1E                     	;# 
  2052  0F1F                     	;# 
  2053  0F20                     	;# 
  2054  0F21                     	;# 
  2055  0F22                     	;# 
  2056  0F23                     	;# 
  2057  0F24                     	;# 
  2058  0F25                     	;# 
  2059  0F26                     	;# 
  2060  0F27                     	;# 
  2061  0F38                     	;# 
  2062  0F39                     	;# 
  2063  0F3A                     	;# 
  2064  0F3B                     	;# 
  2065  0F3C                     	;# 
  2066  0F3D                     	;# 
  2067  0F3E                     	;# 
  2068  0F3F                     	;# 
  2069  0F40                     	;# 
  2070  0F41                     	;# 
  2071  0F43                     	;# 
  2072  0F44                     	;# 
  2073  0F45                     	;# 
  2074  0F46                     	;# 
  2075  0F47                     	;# 
  2076  0F48                     	;# 
  2077  0F49                     	;# 
  2078  0F4A                     	;# 
  2079  0F4B                     	;# 
  2080  0F4C                     	;# 
  2081  0F4E                     	;# 
  2082  0F4F                     	;# 
  2083  0F50                     	;# 
  2084  0F51                     	;# 
  2085  0F52                     	;# 
  2086  0F53                     	;# 
  2087  0F54                     	;# 
  2088  0F55                     	;# 
  2089  0F56                     	;# 
  2090  0F57                     	;# 
  2091  0F65                     	;# 
  2092  0F68                     	;# 
  2093  0F69                     	;# 
  2094  0F6A                     	;# 
  2095  0F6B                     	;# 
  2096  0FE4                     	;# 
  2097  0FE5                     	;# 
  2098  0FE6                     	;# 
  2099  0FE7                     	;# 
  2100  0FE8                     	;# 
  2101  0FE9                     	;# 
  2102  0FEA                     	;# 
  2103  0FEB                     	;# 
  2104  0FED                     	;# 
  2105  0FEE                     	;# 
  2106  0FEF                     	;# 
  2107  0000                     	;# 
  2108  0001                     	;# 
  2109  0002                     	;# 
  2110  0003                     	;# 
  2111  0004                     	;# 
  2112  0005                     	;# 
  2113  0006                     	;# 
  2114  0007                     	;# 
  2115  0008                     	;# 
  2116  0009                     	;# 
  2117  000A                     	;# 
  2118  000B                     	;# 
  2119  000C                     	;# 
  2120  000D                     	;# 
  2121  000E                     	;# 
  2122  0010                     	;# 
  2123  0011                     	;# 
  2124  0012                     	;# 
  2125  0013                     	;# 
  2126  0016                     	;# 
  2127  0017                     	;# 
  2128  0018                     	;# 
  2129  001C                     	;# 
  2130  001C                     	;# 
  2131  001D                     	;# 
  2132  001D                     	;# 
  2133  001E                     	;# 
  2134  001F                     	;# 
  2135  008C                     	;# 
  2136  008C                     	;# 
  2137  008D                     	;# 
  2138  008E                     	;# 
  2139  008E                     	;# 
  2140  008F                     	;# 
  2141  0090                     	;# 
  2142  0090                     	;# 
  2143  0091                     	;# 
  2144  0093                     	;# 
  2145  0094                     	;# 
  2146  0095                     	;# 
  2147  0096                     	;# 
  2148  0097                     	;# 
  2149  0098                     	;# 
  2150  0099                     	;# 
  2151  009A                     	;# 
  2152  009B                     	;# 
  2153  009C                     	;# 
  2154  009D                     	;# 
  2155  009E                     	;# 
  2156  010C                     	;# 
  2157  010D                     	;# 
  2158  010E                     	;# 
  2159  010E                     	;# 
  2160  010F                     	;# 
  2161  0110                     	;# 
  2162  0110                     	;# 
  2163  0111                     	;# 
  2164  0112                     	;# 
  2165  0112                     	;# 
  2166  0113                     	;# 
  2167  0114                     	;# 
  2168  0114                     	;# 
  2169  0115                     	;# 
  2170  0116                     	;# 
  2171  0116                     	;# 
  2172  0117                     	;# 
  2173  0119                     	;# 
  2174  0119                     	;# 
  2175  0119                     	;# 
  2176  011A                     	;# 
  2177  011A                     	;# 
  2178  011A                     	;# 
  2179  011B                     	;# 
  2180  011B                     	;# 
  2181  011B                     	;# 
  2182  011B                     	;# 
  2183  011B                     	;# 
  2184  011C                     	;# 
  2185  011C                     	;# 
  2186  011C                     	;# 
  2187  011D                     	;# 
  2188  011D                     	;# 
  2189  011D                     	;# 
  2190  011E                     	;# 
  2191  011E                     	;# 
  2192  011E                     	;# 
  2193  011F                     	;# 
  2194  011F                     	;# 
  2195  011F                     	;# 
  2196  011F                     	;# 
  2197  011F                     	;# 
  2198  018C                     	;# 
  2199  018D                     	;# 
  2200  018E                     	;# 
  2201  018F                     	;# 
  2202  0190                     	;# 
  2203  0191                     	;# 
  2204  0192                     	;# 
  2205  0196                     	;# 
  2206  0197                     	;# 
  2207  0198                     	;# 
  2208  0199                     	;# 
  2209  019A                     	;# 
  2210  019B                     	;# 
  2211  019C                     	;# 
  2212  020C                     	;# 
  2213  020D                     	;# 
  2214  020E                     	;# 
  2215  020F                     	;# 
  2216  020F                     	;# 
  2217  0210                     	;# 
  2218  0210                     	;# 
  2219  0211                     	;# 
  2220  0211                     	;# 
  2221  0212                     	;# 
  2222  0213                     	;# 
  2223  0214                     	;# 
  2224  0215                     	;# 
  2225  0215                     	;# 
  2226  0216                     	;# 
  2227  0216                     	;# 
  2228  0217                     	;# 
  2229  0217                     	;# 
  2230  0218                     	;# 
  2231  0219                     	;# 
  2232  021A                     	;# 
  2233  021B                     	;# 
  2234  021B                     	;# 
  2235  021C                     	;# 
  2236  021C                     	;# 
  2237  021D                     	;# 
  2238  021D                     	;# 
  2239  021E                     	;# 
  2240  021F                     	;# 
  2241  028C                     	;# 
  2242  028C                     	;# 
  2243  028D                     	;# 
  2244  028D                     	;# 
  2245  028E                     	;# 
  2246  028F                     	;# 
  2247  0290                     	;# 
  2248  0290                     	;# 
  2249  0291                     	;# 
  2250  0292                     	;# 
  2251  0292                     	;# 
  2252  0293                     	;# 
  2253  0293                     	;# 
  2254  0294                     	;# 
  2255  0295                     	;# 
  2256  0296                     	;# 
  2257  0296                     	;# 
  2258  0297                     	;# 
  2259  0298                     	;# 
  2260  0298                     	;# 
  2261  0299                     	;# 
  2262  0299                     	;# 
  2263  029A                     	;# 
  2264  029B                     	;# 
  2265  029C                     	;# 
  2266  029C                     	;# 
  2267  029D                     	;# 
  2268  030C                     	;# 
  2269  030C                     	;# 
  2270  030D                     	;# 
  2271  030E                     	;# 
  2272  030F                     	;# 
  2273  0310                     	;# 
  2274  0310                     	;# 
  2275  0311                     	;# 
  2276  0312                     	;# 
  2277  0313                     	;# 
  2278  0314                     	;# 
  2279  0314                     	;# 
  2280  0315                     	;# 
  2281  0316                     	;# 
  2282  0317                     	;# 
  2283  0318                     	;# 
  2284  0318                     	;# 
  2285  0319                     	;# 
  2286  031A                     	;# 
  2287  031B                     	;# 
  2288  031C                     	;# 
  2289  031C                     	;# 
  2290  031D                     	;# 
  2291  031E                     	;# 
  2292  031F                     	;# 
  2293  038C                     	;# 
  2294  038D                     	;# 
  2295  038E                     	;# 
  2296  0390                     	;# 
  2297  0391                     	;# 
  2298  0392                     	;# 
  2299  040C                     	;# 
  2300  040D                     	;# 
  2301  040E                     	;# 
  2302  040F                     	;# 
  2303  0410                     	;# 
  2304  0411                     	;# 
  2305  0416                     	;# 
  2306  0416                     	;# 
  2307  0417                     	;# 
  2308  0418                     	;# 
  2309  0418                     	;# 
  2310  0419                     	;# 
  2311  041A                     	;# 
  2312  041A                     	;# 
  2313  041B                     	;# 
  2314  041C                     	;# 
  2315  041C                     	;# 
  2316  041D                     	;# 
  2317  041E                     	;# 
  2318  041F                     	;# 
  2319  048C                     	;# 
  2320  048C                     	;# 
  2321  048D                     	;# 
  2322  048E                     	;# 
  2323  048F                     	;# 
  2324  048F                     	;# 
  2325  0490                     	;# 
  2326  0491                     	;# 
  2327  0492                     	;# 
  2328  0492                     	;# 
  2329  0493                     	;# 
  2330  0494                     	;# 
  2331  0495                     	;# 
  2332  0495                     	;# 
  2333  0496                     	;# 
  2334  0497                     	;# 
  2335  0498                     	;# 
  2336  0499                     	;# 
  2337  049A                     	;# 
  2338  049B                     	;# 
  2339  049C                     	;# 
  2340  049D                     	;# 
  2341  050C                     	;# 
  2342  050C                     	;# 
  2343  050D                     	;# 
  2344  050E                     	;# 
  2345  050F                     	;# 
  2346  050F                     	;# 
  2347  0510                     	;# 
  2348  0511                     	;# 
  2349  0512                     	;# 
  2350  0512                     	;# 
  2351  0513                     	;# 
  2352  0514                     	;# 
  2353  0515                     	;# 
  2354  0515                     	;# 
  2355  0516                     	;# 
  2356  0517                     	;# 
  2357  0518                     	;# 
  2358  0519                     	;# 
  2359  051A                     	;# 
  2360  051B                     	;# 
  2361  051C                     	;# 
  2362  051D                     	;# 
  2363  058C                     	;# 
  2364  058C                     	;# 
  2365  058D                     	;# 
  2366  058E                     	;# 
  2367  058F                     	;# 
  2368  058F                     	;# 
  2369  0590                     	;# 
  2370  0591                     	;# 
  2371  0592                     	;# 
  2372  0593                     	;# 
  2373  060C                     	;# 
  2374  060D                     	;# 
  2375  060E                     	;# 
  2376  060F                     	;# 
  2377  0610                     	;# 
  2378  0611                     	;# 
  2379  0612                     	;# 
  2380  0613                     	;# 
  2381  0614                     	;# 
  2382  0616                     	;# 
  2383  0617                     	;# 
  2384  0618                     	;# 
  2385  0619                     	;# 
  2386  061A                     	;# 
  2387  061B                     	;# 
  2388  061C                     	;# 
  2389  061D                     	;# 
  2390  061E                     	;# 
  2391  068C                     	;# 
  2392  068D                     	;# 
  2393  068E                     	;# 
  2394  068F                     	;# 
  2395  0690                     	;# 
  2396  0691                     	;# 
  2397  0692                     	;# 
  2398  0693                     	;# 
  2399  0694                     	;# 
  2400  070C                     	;# 
  2401  070D                     	;# 
  2402  070E                     	;# 
  2403  070F                     	;# 
  2404  0710                     	;# 
  2405  0711                     	;# 
  2406  0712                     	;# 
  2407  0713                     	;# 
  2408  0714                     	;# 
  2409  0716                     	;# 
  2410  0717                     	;# 
  2411  0718                     	;# 
  2412  0719                     	;# 
  2413  071A                     	;# 
  2414  071B                     	;# 
  2415  071C                     	;# 
  2416  071D                     	;# 
  2417  071E                     	;# 
  2418  0796                     	;# 
  2419  0797                     	;# 
  2420  0798                     	;# 
  2421  0799                     	;# 
  2422  079A                     	;# 
  2423  079B                     	;# 
  2424  080C                     	;# 
  2425  080D                     	;# 
  2426  080E                     	;# 
  2427  080F                     	;# 
  2428  0810                     	;# 
  2429  0811                     	;# 
  2430  0812                     	;# 
  2431  0813                     	;# 
  2432  0814                     	;# 
  2433  081A                     	;# 
  2434  081B                     	;# 
  2435  081C                     	;# 
  2436  081D                     	;# 
  2437  081E                     	;# 
  2438  081F                     	;# 
  2439  088C                     	;# 
  2440  088D                     	;# 
  2441  088E                     	;# 
  2442  088F                     	;# 
  2443  0890                     	;# 
  2444  0891                     	;# 
  2445  0892                     	;# 
  2446  0893                     	;# 
  2447  0895                     	;# 
  2448  0896                     	;# 
  2449  0897                     	;# 
  2450  0898                     	;# 
  2451  0899                     	;# 
  2452  089A                     	;# 
  2453  089B                     	;# 
  2454  090C                     	;# 
  2455  090E                     	;# 
  2456  090F                     	;# 
  2457  091F                     	;# 
  2458  091F                     	;# 
  2459  098F                     	;# 
  2460  098F                     	;# 
  2461  0990                     	;# 
  2462  0991                     	;# 
  2463  0992                     	;# 
  2464  0993                     	;# 
  2465  0994                     	;# 
  2466  0995                     	;# 
  2467  0996                     	;# 
  2468  0997                     	;# 
  2469  0E0F                     	;# 
  2470  0E10                     	;# 
  2471  0E11                     	;# 
  2472  0E12                     	;# 
  2473  0E13                     	;# 
  2474  0E14                     	;# 
  2475  0E15                     	;# 
  2476  0E16                     	;# 
  2477  0E17                     	;# 
  2478  0E18                     	;# 
  2479  0E19                     	;# 
  2480  0E1A                     	;# 
  2481  0E1B                     	;# 
  2482  0E1C                     	;# 
  2483  0E1D                     	;# 
  2484  0E1E                     	;# 
  2485  0E1F                     	;# 
  2486  0E20                     	;# 
  2487  0E21                     	;# 
  2488  0E22                     	;# 
  2489  0E23                     	;# 
  2490  0E24                     	;# 
  2491  0E25                     	;# 
  2492  0E26                     	;# 
  2493  0E27                     	;# 
  2494  0E28                     	;# 
  2495  0E29                     	;# 
  2496  0E2A                     	;# 
  2497  0E2B                     	;# 
  2498  0E2C                     	;# 
  2499  0E2D                     	;# 
  2500  0E2E                     	;# 
  2501  0E2F                     	;# 
  2502  0E30                     	;# 
  2503  0E31                     	;# 
  2504  0E32                     	;# 
  2505  0E33                     	;# 
  2506  0E34                     	;# 
  2507  0E35                     	;# 
  2508  0E36                     	;# 
  2509  0E37                     	;# 
  2510  0E8F                     	;# 
  2511  0E90                     	;# 
  2512  0E91                     	;# 
  2513  0E92                     	;# 
  2514  0E93                     	;# 
  2515  0E94                     	;# 
  2516  0E95                     	;# 
  2517  0E96                     	;# 
  2518  0E97                     	;# 
  2519  0E9C                     	;# 
  2520  0E9D                     	;# 
  2521  0E9E                     	;# 
  2522  0EA1                     	;# 
  2523  0EA2                     	;# 
  2524  0EA3                     	;# 
  2525  0EA4                     	;# 
  2526  0EA5                     	;# 
  2527  0EA9                     	;# 
  2528  0EAA                     	;# 
  2529  0EAB                     	;# 
  2530  0EAC                     	;# 
  2531  0EB1                     	;# 
  2532  0EB2                     	;# 
  2533  0EB3                     	;# 
  2534  0EB8                     	;# 
  2535  0EB9                     	;# 
  2536  0EBA                     	;# 
  2537  0EBB                     	;# 
  2538  0EBC                     	;# 
  2539  0EBD                     	;# 
  2540  0EBE                     	;# 
  2541  0EC3                     	;# 
  2542  0EC5                     	;# 
  2543  0EC6                     	;# 
  2544  0EC7                     	;# 
  2545  0EC8                     	;# 
  2546  0EC9                     	;# 
  2547  0ECA                     	;# 
  2548  0ECB                     	;# 
  2549  0ECC                     	;# 
  2550  0F10                     	;# 
  2551  0F11                     	;# 
  2552  0F12                     	;# 
  2553  0F13                     	;# 
  2554  0F14                     	;# 
  2555  0F15                     	;# 
  2556  0F16                     	;# 
  2557  0F17                     	;# 
  2558  0F18                     	;# 
  2559  0F19                     	;# 
  2560  0F1A                     	;# 
  2561  0F1B                     	;# 
  2562  0F1C                     	;# 
  2563  0F1D                     	;# 
  2564  0F1E                     	;# 
  2565  0F1F                     	;# 
  2566  0F20                     	;# 
  2567  0F21                     	;# 
  2568  0F22                     	;# 
  2569  0F23                     	;# 
  2570  0F24                     	;# 
  2571  0F25                     	;# 
  2572  0F26                     	;# 
  2573  0F27                     	;# 
  2574  0F38                     	;# 
  2575  0F39                     	;# 
  2576  0F3A                     	;# 
  2577  0F3B                     	;# 
  2578  0F3C                     	;# 
  2579  0F3D                     	;# 
  2580  0F3E                     	;# 
  2581  0F3F                     	;# 
  2582  0F40                     	;# 
  2583  0F41                     	;# 
  2584  0F43                     	;# 
  2585  0F44                     	;# 
  2586  0F45                     	;# 
  2587  0F46                     	;# 
  2588  0F47                     	;# 
  2589  0F48                     	;# 
  2590  0F49                     	;# 
  2591  0F4A                     	;# 
  2592  0F4B                     	;# 
  2593  0F4C                     	;# 
  2594  0F4E                     	;# 
  2595  0F4F                     	;# 
  2596  0F50                     	;# 
  2597  0F51                     	;# 
  2598  0F52                     	;# 
  2599  0F53                     	;# 
  2600  0F54                     	;# 
  2601  0F55                     	;# 
  2602  0F56                     	;# 
  2603  0F57                     	;# 
  2604  0F65                     	;# 
  2605  0F68                     	;# 
  2606  0F69                     	;# 
  2607  0F6A                     	;# 
  2608  0F6B                     	;# 
  2609  0FE4                     	;# 
  2610  0FE5                     	;# 
  2611  0FE6                     	;# 
  2612  0FE7                     	;# 
  2613  0FE8                     	;# 
  2614  0FE9                     	;# 
  2615  0FEA                     	;# 
  2616  0FEB                     	;# 
  2617  0FED                     	;# 
  2618  0FEE                     	;# 
  2619  0FEF                     	;# 
  2620  0000                     	;# 
  2621  0001                     	;# 
  2622  0002                     	;# 
  2623  0003                     	;# 
  2624  0004                     	;# 
  2625  0005                     	;# 
  2626  0006                     	;# 
  2627  0007                     	;# 
  2628  0008                     	;# 
  2629  0009                     	;# 
  2630  000A                     	;# 
  2631  000B                     	;# 
  2632  000C                     	;# 
  2633  000D                     	;# 
  2634  000E                     	;# 
  2635  0010                     	;# 
  2636  0011                     	;# 
  2637  0012                     	;# 
  2638  0013                     	;# 
  2639  0016                     	;# 
  2640  0017                     	;# 
  2641  0018                     	;# 
  2642  001C                     	;# 
  2643  001C                     	;# 
  2644  001D                     	;# 
  2645  001D                     	;# 
  2646  001E                     	;# 
  2647  001F                     	;# 
  2648  008C                     	;# 
  2649  008C                     	;# 
  2650  008D                     	;# 
  2651  008E                     	;# 
  2652  008E                     	;# 
  2653  008F                     	;# 
  2654  0090                     	;# 
  2655  0090                     	;# 
  2656  0091                     	;# 
  2657  0093                     	;# 
  2658  0094                     	;# 
  2659  0095                     	;# 
  2660  0096                     	;# 
  2661  0097                     	;# 
  2662  0098                     	;# 
  2663  0099                     	;# 
  2664  009A                     	;# 
  2665  009B                     	;# 
  2666  009C                     	;# 
  2667  009D                     	;# 
  2668  009E                     	;# 
  2669  010C                     	;# 
  2670  010D                     	;# 
  2671  010E                     	;# 
  2672  010E                     	;# 
  2673  010F                     	;# 
  2674  0110                     	;# 
  2675  0110                     	;# 
  2676  0111                     	;# 
  2677  0112                     	;# 
  2678  0112                     	;# 
  2679  0113                     	;# 
  2680  0114                     	;# 
  2681  0114                     	;# 
  2682  0115                     	;# 
  2683  0116                     	;# 
  2684  0116                     	;# 
  2685  0117                     	;# 
  2686  0119                     	;# 
  2687  0119                     	;# 
  2688  0119                     	;# 
  2689  011A                     	;# 
  2690  011A                     	;# 
  2691  011A                     	;# 
  2692  011B                     	;# 
  2693  011B                     	;# 
  2694  011B                     	;# 
  2695  011B                     	;# 
  2696  011B                     	;# 
  2697  011C                     	;# 
  2698  011C                     	;# 
  2699  011C                     	;# 
  2700  011D                     	;# 
  2701  011D                     	;# 
  2702  011D                     	;# 
  2703  011E                     	;# 
  2704  011E                     	;# 
  2705  011E                     	;# 
  2706  011F                     	;# 
  2707  011F                     	;# 
  2708  011F                     	;# 
  2709  011F                     	;# 
  2710  011F                     	;# 
  2711  018C                     	;# 
  2712  018D                     	;# 
  2713  018E                     	;# 
  2714  018F                     	;# 
  2715  0190                     	;# 
  2716  0191                     	;# 
  2717  0192                     	;# 
  2718  0196                     	;# 
  2719  0197                     	;# 
  2720  0198                     	;# 
  2721  0199                     	;# 
  2722  019A                     	;# 
  2723  019B                     	;# 
  2724  019C                     	;# 
  2725  020C                     	;# 
  2726  020D                     	;# 
  2727  020E                     	;# 
  2728  020F                     	;# 
  2729  020F                     	;# 
  2730  0210                     	;# 
  2731  0210                     	;# 
  2732  0211                     	;# 
  2733  0211                     	;# 
  2734  0212                     	;# 
  2735  0213                     	;# 
  2736  0214                     	;# 
  2737  0215                     	;# 
  2738  0215                     	;# 
  2739  0216                     	;# 
  2740  0216                     	;# 
  2741  0217                     	;# 
  2742  0217                     	;# 
  2743  0218                     	;# 
  2744  0219                     	;# 
  2745  021A                     	;# 
  2746  021B                     	;# 
  2747  021B                     	;# 
  2748  021C                     	;# 
  2749  021C                     	;# 
  2750  021D                     	;# 
  2751  021D                     	;# 
  2752  021E                     	;# 
  2753  021F                     	;# 
  2754  028C                     	;# 
  2755  028C                     	;# 
  2756  028D                     	;# 
  2757  028D                     	;# 
  2758  028E                     	;# 
  2759  028F                     	;# 
  2760  0290                     	;# 
  2761  0290                     	;# 
  2762  0291                     	;# 
  2763  0292                     	;# 
  2764  0292                     	;# 
  2765  0293                     	;# 
  2766  0293                     	;# 
  2767  0294                     	;# 
  2768  0295                     	;# 
  2769  0296                     	;# 
  2770  0296                     	;# 
  2771  0297                     	;# 
  2772  0298                     	;# 
  2773  0298                     	;# 
  2774  0299                     	;# 
  2775  0299                     	;# 
  2776  029A                     	;# 
  2777  029B                     	;# 
  2778  029C                     	;# 
  2779  029C                     	;# 
  2780  029D                     	;# 
  2781  030C                     	;# 
  2782  030C                     	;# 
  2783  030D                     	;# 
  2784  030E                     	;# 
  2785  030F                     	;# 
  2786  0310                     	;# 
  2787  0310                     	;# 
  2788  0311                     	;# 
  2789  0312                     	;# 
  2790  0313                     	;# 
  2791  0314                     	;# 
  2792  0314                     	;# 
  2793  0315                     	;# 
  2794  0316                     	;# 
  2795  0317                     	;# 
  2796  0318                     	;# 
  2797  0318                     	;# 
  2798  0319                     	;# 
  2799  031A                     	;# 
  2800  031B                     	;# 
  2801  031C                     	;# 
  2802  031C                     	;# 
  2803  031D                     	;# 
  2804  031E                     	;# 
  2805  031F                     	;# 
  2806  038C                     	;# 
  2807  038D                     	;# 
  2808  038E                     	;# 
  2809  0390                     	;# 
  2810  0391                     	;# 
  2811  0392                     	;# 
  2812  040C                     	;# 
  2813  040D                     	;# 
  2814  040E                     	;# 
  2815  040F                     	;# 
  2816  0410                     	;# 
  2817  0411                     	;# 
  2818  0416                     	;# 
  2819  0416                     	;# 
  2820  0417                     	;# 
  2821  0418                     	;# 
  2822  0418                     	;# 
  2823  0419                     	;# 
  2824  041A                     	;# 
  2825  041A                     	;# 
  2826  041B                     	;# 
  2827  041C                     	;# 
  2828  041C                     	;# 
  2829  041D                     	;# 
  2830  041E                     	;# 
  2831  041F                     	;# 
  2832  048C                     	;# 
  2833  048C                     	;# 
  2834  048D                     	;# 
  2835  048E                     	;# 
  2836  048F                     	;# 
  2837  048F                     	;# 
  2838  0490                     	;# 
  2839  0491                     	;# 
  2840  0492                     	;# 
  2841  0492                     	;# 
  2842  0493                     	;# 
  2843  0494                     	;# 
  2844  0495                     	;# 
  2845  0495                     	;# 
  2846  0496                     	;# 
  2847  0497                     	;# 
  2848  0498                     	;# 
  2849  0499                     	;# 
  2850  049A                     	;# 
  2851  049B                     	;# 
  2852  049C                     	;# 
  2853  049D                     	;# 
  2854  050C                     	;# 
  2855  050C                     	;# 
  2856  050D                     	;# 
  2857  050E                     	;# 
  2858  050F                     	;# 
  2859  050F                     	;# 
  2860  0510                     	;# 
  2861  0511                     	;# 
  2862  0512                     	;# 
  2863  0512                     	;# 
  2864  0513                     	;# 
  2865  0514                     	;# 
  2866  0515                     	;# 
  2867  0515                     	;# 
  2868  0516                     	;# 
  2869  0517                     	;# 
  2870  0518                     	;# 
  2871  0519                     	;# 
  2872  051A                     	;# 
  2873  051B                     	;# 
  2874  051C                     	;# 
  2875  051D                     	;# 
  2876  058C                     	;# 
  2877  058C                     	;# 
  2878  058D                     	;# 
  2879  058E                     	;# 
  2880  058F                     	;# 
  2881  058F                     	;# 
  2882  0590                     	;# 
  2883  0591                     	;# 
  2884  0592                     	;# 
  2885  0593                     	;# 
  2886  060C                     	;# 
  2887  060D                     	;# 
  2888  060E                     	;# 
  2889  060F                     	;# 
  2890  0610                     	;# 
  2891  0611                     	;# 
  2892  0612                     	;# 
  2893  0613                     	;# 
  2894  0614                     	;# 
  2895  0616                     	;# 
  2896  0617                     	;# 
  2897  0618                     	;# 
  2898  0619                     	;# 
  2899  061A                     	;# 
  2900  061B                     	;# 
  2901  061C                     	;# 
  2902  061D                     	;# 
  2903  061E                     	;# 
  2904  068C                     	;# 
  2905  068D                     	;# 
  2906  068E                     	;# 
  2907  068F                     	;# 
  2908  0690                     	;# 
  2909  0691                     	;# 
  2910  0692                     	;# 
  2911  0693                     	;# 
  2912  0694                     	;# 
  2913  070C                     	;# 
  2914  070D                     	;# 
  2915  070E                     	;# 
  2916  070F                     	;# 
  2917  0710                     	;# 
  2918  0711                     	;# 
  2919  0712                     	;# 
  2920  0713                     	;# 
  2921  0714                     	;# 
  2922  0716                     	;# 
  2923  0717                     	;# 
  2924  0718                     	;# 
  2925  0719                     	;# 
  2926  071A                     	;# 
  2927  071B                     	;# 
  2928  071C                     	;# 
  2929  071D                     	;# 
  2930  071E                     	;# 
  2931  0796                     	;# 
  2932  0797                     	;# 
  2933  0798                     	;# 
  2934  0799                     	;# 
  2935  079A                     	;# 
  2936  079B                     	;# 
  2937  080C                     	;# 
  2938  080D                     	;# 
  2939  080E                     	;# 
  2940  080F                     	;# 
  2941  0810                     	;# 
  2942  0811                     	;# 
  2943  0812                     	;# 
  2944  0813                     	;# 
  2945  0814                     	;# 
  2946  081A                     	;# 
  2947  081B                     	;# 
  2948  081C                     	;# 
  2949  081D                     	;# 
  2950  081E                     	;# 
  2951  081F                     	;# 
  2952  088C                     	;# 
  2953  088D                     	;# 
  2954  088E                     	;# 
  2955  088F                     	;# 
  2956  0890                     	;# 
  2957  0891                     	;# 
  2958  0892                     	;# 
  2959  0893                     	;# 
  2960  0895                     	;# 
  2961  0896                     	;# 
  2962  0897                     	;# 
  2963  0898                     	;# 
  2964  0899                     	;# 
  2965  089A                     	;# 
  2966  089B                     	;# 
  2967  090C                     	;# 
  2968  090E                     	;# 
  2969  090F                     	;# 
  2970  091F                     	;# 
  2971  091F                     	;# 
  2972  098F                     	;# 
  2973  098F                     	;# 
  2974  0990                     	;# 
  2975  0991                     	;# 
  2976  0992                     	;# 
  2977  0993                     	;# 
  2978  0994                     	;# 
  2979  0995                     	;# 
  2980  0996                     	;# 
  2981  0997                     	;# 
  2982  0E0F                     	;# 
  2983  0E10                     	;# 
  2984  0E11                     	;# 
  2985  0E12                     	;# 
  2986  0E13                     	;# 
  2987  0E14                     	;# 
  2988  0E15                     	;# 
  2989  0E16                     	;# 
  2990  0E17                     	;# 
  2991  0E18                     	;# 
  2992  0E19                     	;# 
  2993  0E1A                     	;# 
  2994  0E1B                     	;# 
  2995  0E1C                     	;# 
  2996  0E1D                     	;# 
  2997  0E1E                     	;# 
  2998  0E1F                     	;# 
  2999  0E20                     	;# 
  3000  0E21                     	;# 
  3001  0E22                     	;# 
  3002  0E23                     	;# 
  3003  0E24                     	;# 
  3004  0E25                     	;# 
  3005  0E26                     	;# 
  3006  0E27                     	;# 
  3007  0E28                     	;# 
  3008  0E29                     	;# 
  3009  0E2A                     	;# 
  3010  0E2B                     	;# 
  3011  0E2C                     	;# 
  3012  0E2D                     	;# 
  3013  0E2E                     	;# 
  3014  0E2F                     	;# 
  3015  0E30                     	;# 
  3016  0E31                     	;# 
  3017  0E32                     	;# 
  3018  0E33                     	;# 
  3019  0E34                     	;# 
  3020  0E35                     	;# 
  3021  0E36                     	;# 
  3022  0E37                     	;# 
  3023  0E8F                     	;# 
  3024  0E90                     	;# 
  3025  0E91                     	;# 
  3026  0E92                     	;# 
  3027  0E93                     	;# 
  3028  0E94                     	;# 
  3029  0E95                     	;# 
  3030  0E96                     	;# 
  3031  0E97                     	;# 
  3032  0E9C                     	;# 
  3033  0E9D                     	;# 
  3034  0E9E                     	;# 
  3035  0EA1                     	;# 
  3036  0EA2                     	;# 
  3037  0EA3                     	;# 
  3038  0EA4                     	;# 
  3039  0EA5                     	;# 
  3040  0EA9                     	;# 
  3041  0EAA                     	;# 
  3042  0EAB                     	;# 
  3043  0EAC                     	;# 
  3044  0EB1                     	;# 
  3045  0EB2                     	;# 
  3046  0EB3                     	;# 
  3047  0EB8                     	;# 
  3048  0EB9                     	;# 
  3049  0EBA                     	;# 
  3050  0EBB                     	;# 
  3051  0EBC                     	;# 
  3052  0EBD                     	;# 
  3053  0EBE                     	;# 
  3054  0EC3                     	;# 
  3055  0EC5                     	;# 
  3056  0EC6                     	;# 
  3057  0EC7                     	;# 
  3058  0EC8                     	;# 
  3059  0EC9                     	;# 
  3060  0ECA                     	;# 
  3061  0ECB                     	;# 
  3062  0ECC                     	;# 
  3063  0F10                     	;# 
  3064  0F11                     	;# 
  3065  0F12                     	;# 
  3066  0F13                     	;# 
  3067  0F14                     	;# 
  3068  0F15                     	;# 
  3069  0F16                     	;# 
  3070  0F17                     	;# 
  3071  0F18                     	;# 
  3072  0F19                     	;# 
  3073  0F1A                     	;# 
  3074  0F1B                     	;# 
  3075  0F1C                     	;# 
  3076  0F1D                     	;# 
  3077  0F1E                     	;# 
  3078  0F1F                     	;# 
  3079  0F20                     	;# 
  3080  0F21                     	;# 
  3081  0F22                     	;# 
  3082  0F23                     	;# 
  3083  0F24                     	;# 
  3084  0F25                     	;# 
  3085  0F26                     	;# 
  3086  0F27                     	;# 
  3087  0F38                     	;# 
  3088  0F39                     	;# 
  3089  0F3A                     	;# 
  3090  0F3B                     	;# 
  3091  0F3C                     	;# 
  3092  0F3D                     	;# 
  3093  0F3E                     	;# 
  3094  0F3F                     	;# 
  3095  0F40                     	;# 
  3096  0F41                     	;# 
  3097  0F43                     	;# 
  3098  0F44                     	;# 
  3099  0F45                     	;# 
  3100  0F46                     	;# 
  3101  0F47                     	;# 
  3102  0F48                     	;# 
  3103  0F49                     	;# 
  3104  0F4A                     	;# 
  3105  0F4B                     	;# 
  3106  0F4C                     	;# 
  3107  0F4E                     	;# 
  3108  0F4F                     	;# 
  3109  0F50                     	;# 
  3110  0F51                     	;# 
  3111  0F52                     	;# 
  3112  0F53                     	;# 
  3113  0F54                     	;# 
  3114  0F55                     	;# 
  3115  0F56                     	;# 
  3116  0F57                     	;# 
  3117  0F65                     	;# 
  3118  0F68                     	;# 
  3119  0F69                     	;# 
  3120  0F6A                     	;# 
  3121  0F6B                     	;# 
  3122  0FE4                     	;# 
  3123  0FE5                     	;# 
  3124  0FE6                     	;# 
  3125  0FE7                     	;# 
  3126  0FE8                     	;# 
  3127  0FE9                     	;# 
  3128  0FEA                     	;# 
  3129  0FEB                     	;# 
  3130  0FED                     	;# 
  3131  0FEE                     	;# 
  3132  0FEF                     	;# 
  3133  0000                     	;# 
  3134  0001                     	;# 
  3135  0002                     	;# 
  3136  0003                     	;# 
  3137  0004                     	;# 
  3138  0005                     	;# 
  3139  0006                     	;# 
  3140  0007                     	;# 
  3141  0008                     	;# 
  3142  0009                     	;# 
  3143  000A                     	;# 
  3144  000B                     	;# 
  3145  000C                     	;# 
  3146  000D                     	;# 
  3147  000E                     	;# 
  3148  0010                     	;# 
  3149  0011                     	;# 
  3150  0012                     	;# 
  3151  0013                     	;# 
  3152  0016                     	;# 
  3153  0017                     	;# 
  3154  0018                     	;# 
  3155  001C                     	;# 
  3156  001C                     	;# 
  3157  001D                     	;# 
  3158  001D                     	;# 
  3159  001E                     	;# 
  3160  001F                     	;# 
  3161  008C                     	;# 
  3162  008C                     	;# 
  3163  008D                     	;# 
  3164  008E                     	;# 
  3165  008E                     	;# 
  3166  008F                     	;# 
  3167  0090                     	;# 
  3168  0090                     	;# 
  3169  0091                     	;# 
  3170  0093                     	;# 
  3171  0094                     	;# 
  3172  0095                     	;# 
  3173  0096                     	;# 
  3174  0097                     	;# 
  3175  0098                     	;# 
  3176  0099                     	;# 
  3177  009A                     	;# 
  3178  009B                     	;# 
  3179  009C                     	;# 
  3180  009D                     	;# 
  3181  009E                     	;# 
  3182  010C                     	;# 
  3183  010D                     	;# 
  3184  010E                     	;# 
  3185  010E                     	;# 
  3186  010F                     	;# 
  3187  0110                     	;# 
  3188  0110                     	;# 
  3189  0111                     	;# 
  3190  0112                     	;# 
  3191  0112                     	;# 
  3192  0113                     	;# 
  3193  0114                     	;# 
  3194  0114                     	;# 
  3195  0115                     	;# 
  3196  0116                     	;# 
  3197  0116                     	;# 
  3198  0117                     	;# 
  3199  0119                     	;# 
  3200  0119                     	;# 
  3201  0119                     	;# 
  3202  011A                     	;# 
  3203  011A                     	;# 
  3204  011A                     	;# 
  3205  011B                     	;# 
  3206  011B                     	;# 
  3207  011B                     	;# 
  3208  011B                     	;# 
  3209  011B                     	;# 
  3210  011C                     	;# 
  3211  011C                     	;# 
  3212  011C                     	;# 
  3213  011D                     	;# 
  3214  011D                     	;# 
  3215  011D                     	;# 
  3216  011E                     	;# 
  3217  011E                     	;# 
  3218  011E                     	;# 
  3219  011F                     	;# 
  3220  011F                     	;# 
  3221  011F                     	;# 
  3222  011F                     	;# 
  3223  011F                     	;# 
  3224  018C                     	;# 
  3225  018D                     	;# 
  3226  018E                     	;# 
  3227  018F                     	;# 
  3228  0190                     	;# 
  3229  0191                     	;# 
  3230  0192                     	;# 
  3231  0196                     	;# 
  3232  0197                     	;# 
  3233  0198                     	;# 
  3234  0199                     	;# 
  3235  019A                     	;# 
  3236  019B                     	;# 
  3237  019C                     	;# 
  3238  020C                     	;# 
  3239  020D                     	;# 
  3240  020E                     	;# 
  3241  020F                     	;# 
  3242  020F                     	;# 
  3243  0210                     	;# 
  3244  0210                     	;# 
  3245  0211                     	;# 
  3246  0211                     	;# 
  3247  0212                     	;# 
  3248  0213                     	;# 
  3249  0214                     	;# 
  3250  0215                     	;# 
  3251  0215                     	;# 
  3252  0216                     	;# 
  3253  0216                     	;# 
  3254  0217                     	;# 
  3255  0217                     	;# 
  3256  0218                     	;# 
  3257  0219                     	;# 
  3258  021A                     	;# 
  3259  021B                     	;# 
  3260  021B                     	;# 
  3261  021C                     	;# 
  3262  021C                     	;# 
  3263  021D                     	;# 
  3264  021D                     	;# 
  3265  021E                     	;# 
  3266  021F                     	;# 
  3267  028C                     	;# 
  3268  028C                     	;# 
  3269  028D                     	;# 
  3270  028D                     	;# 
  3271  028E                     	;# 
  3272  028F                     	;# 
  3273  0290                     	;# 
  3274  0290                     	;# 
  3275  0291                     	;# 
  3276  0292                     	;# 
  3277  0292                     	;# 
  3278  0293                     	;# 
  3279  0293                     	;# 
  3280  0294                     	;# 
  3281  0295                     	;# 
  3282  0296                     	;# 
  3283  0296                     	;# 
  3284  0297                     	;# 
  3285  0298                     	;# 
  3286  0298                     	;# 
  3287  0299                     	;# 
  3288  0299                     	;# 
  3289  029A                     	;# 
  3290  029B                     	;# 
  3291  029C                     	;# 
  3292  029C                     	;# 
  3293  029D                     	;# 
  3294  030C                     	;# 
  3295  030C                     	;# 
  3296  030D                     	;# 
  3297  030E                     	;# 
  3298  030F                     	;# 
  3299  0310                     	;# 
  3300  0310                     	;# 
  3301  0311                     	;# 
  3302  0312                     	;# 
  3303  0313                     	;# 
  3304  0314                     	;# 
  3305  0314                     	;# 
  3306  0315                     	;# 
  3307  0316                     	;# 
  3308  0317                     	;# 
  3309  0318                     	;# 
  3310  0318                     	;# 
  3311  0319                     	;# 
  3312  031A                     	;# 
  3313  031B                     	;# 
  3314  031C                     	;# 
  3315  031C                     	;# 
  3316  031D                     	;# 
  3317  031E                     	;# 
  3318  031F                     	;# 
  3319  038C                     	;# 
  3320  038D                     	;# 
  3321  038E                     	;# 
  3322  0390                     	;# 
  3323  0391                     	;# 
  3324  0392                     	;# 
  3325  040C                     	;# 
  3326  040D                     	;# 
  3327  040E                     	;# 
  3328  040F                     	;# 
  3329  0410                     	;# 
  3330  0411                     	;# 
  3331  0416                     	;# 
  3332  0416                     	;# 
  3333  0417                     	;# 
  3334  0418                     	;# 
  3335  0418                     	;# 
  3336  0419                     	;# 
  3337  041A                     	;# 
  3338  041A                     	;# 
  3339  041B                     	;# 
  3340  041C                     	;# 
  3341  041C                     	;# 
  3342  041D                     	;# 
  3343  041E                     	;# 
  3344  041F                     	;# 
  3345  048C                     	;# 
  3346  048C                     	;# 
  3347  048D                     	;# 
  3348  048E                     	;# 
  3349  048F                     	;# 
  3350  048F                     	;# 
  3351  0490                     	;# 
  3352  0491                     	;# 
  3353  0492                     	;# 
  3354  0492                     	;# 
  3355  0493                     	;# 
  3356  0494                     	;# 
  3357  0495                     	;# 
  3358  0495                     	;# 
  3359  0496                     	;# 
  3360  0497                     	;# 
  3361  0498                     	;# 
  3362  0499                     	;# 
  3363  049A                     	;# 
  3364  049B                     	;# 
  3365  049C                     	;# 
  3366  049D                     	;# 
  3367  050C                     	;# 
  3368  050C                     	;# 
  3369  050D                     	;# 
  3370  050E                     	;# 
  3371  050F                     	;# 
  3372  050F                     	;# 
  3373  0510                     	;# 
  3374  0511                     	;# 
  3375  0512                     	;# 
  3376  0512                     	;# 
  3377  0513                     	;# 
  3378  0514                     	;# 
  3379  0515                     	;# 
  3380  0515                     	;# 
  3381  0516                     	;# 
  3382  0517                     	;# 
  3383  0518                     	;# 
  3384  0519                     	;# 
  3385  051A                     	;# 
  3386  051B                     	;# 
  3387  051C                     	;# 
  3388  051D                     	;# 
  3389  058C                     	;# 
  3390  058C                     	;# 
  3391  058D                     	;# 
  3392  058E                     	;# 
  3393  058F                     	;# 
  3394  058F                     	;# 
  3395  0590                     	;# 
  3396  0591                     	;# 
  3397  0592                     	;# 
  3398  0593                     	;# 
  3399  060C                     	;# 
  3400  060D                     	;# 
  3401  060E                     	;# 
  3402  060F                     	;# 
  3403  0610                     	;# 
  3404  0611                     	;# 
  3405  0612                     	;# 
  3406  0613                     	;# 
  3407  0614                     	;# 
  3408  0616                     	;# 
  3409  0617                     	;# 
  3410  0618                     	;# 
  3411  0619                     	;# 
  3412  061A                     	;# 
  3413  061B                     	;# 
  3414  061C                     	;# 
  3415  061D                     	;# 
  3416  061E                     	;# 
  3417  068C                     	;# 
  3418  068D                     	;# 
  3419  068E                     	;# 
  3420  068F                     	;# 
  3421  0690                     	;# 
  3422  0691                     	;# 
  3423  0692                     	;# 
  3424  0693                     	;# 
  3425  0694                     	;# 
  3426  070C                     	;# 
  3427  070D                     	;# 
  3428  070E                     	;# 
  3429  070F                     	;# 
  3430  0710                     	;# 
  3431  0711                     	;# 
  3432  0712                     	;# 
  3433  0713                     	;# 
  3434  0714                     	;# 
  3435  0716                     	;# 
  3436  0717                     	;# 
  3437  0718                     	;# 
  3438  0719                     	;# 
  3439  071A                     	;# 
  3440  071B                     	;# 
  3441  071C                     	;# 
  3442  071D                     	;# 
  3443  071E                     	;# 
  3444  0796                     	;# 
  3445  0797                     	;# 
  3446  0798                     	;# 
  3447  0799                     	;# 
  3448  079A                     	;# 
  3449  079B                     	;# 
  3450  080C                     	;# 
  3451  080D                     	;# 
  3452  080E                     	;# 
  3453  080F                     	;# 
  3454  0810                     	;# 
  3455  0811                     	;# 
  3456  0812                     	;# 
  3457  0813                     	;# 
  3458  0814                     	;# 
  3459  081A                     	;# 
  3460  081B                     	;# 
  3461  081C                     	;# 
  3462  081D                     	;# 
  3463  081E                     	;# 
  3464  081F                     	;# 
  3465  088C                     	;# 
  3466  088D                     	;# 
  3467  088E                     	;# 
  3468  088F                     	;# 
  3469  0890                     	;# 
  3470  0891                     	;# 
  3471  0892                     	;# 
  3472  0893                     	;# 
  3473  0895                     	;# 
  3474  0896                     	;# 
  3475  0897                     	;# 
  3476  0898                     	;# 
  3477  0899                     	;# 
  3478  089A                     	;# 
  3479  089B                     	;# 
  3480  090C                     	;# 
  3481  090E                     	;# 
  3482  090F                     	;# 
  3483  091F                     	;# 
  3484  091F                     	;# 
  3485  098F                     	;# 
  3486  098F                     	;# 
  3487  0990                     	;# 
  3488  0991                     	;# 
  3489  0992                     	;# 
  3490  0993                     	;# 
  3491  0994                     	;# 
  3492  0995                     	;# 
  3493  0996                     	;# 
  3494  0997                     	;# 
  3495  0E0F                     	;# 
  3496  0E10                     	;# 
  3497  0E11                     	;# 
  3498  0E12                     	;# 
  3499  0E13                     	;# 
  3500  0E14                     	;# 
  3501  0E15                     	;# 
  3502  0E16                     	;# 
  3503  0E17                     	;# 
  3504  0E18                     	;# 
  3505  0E19                     	;# 
  3506  0E1A                     	;# 
  3507  0E1B                     	;# 
  3508  0E1C                     	;# 
  3509  0E1D                     	;# 
  3510  0E1E                     	;# 
  3511  0E1F                     	;# 
  3512  0E20                     	;# 
  3513  0E21                     	;# 
  3514  0E22                     	;# 
  3515  0E23                     	;# 
  3516  0E24                     	;# 
  3517  0E25                     	;# 
  3518  0E26                     	;# 
  3519  0E27                     	;# 
  3520  0E28                     	;# 
  3521  0E29                     	;# 
  3522  0E2A                     	;# 
  3523  0E2B                     	;# 
  3524  0E2C                     	;# 
  3525  0E2D                     	;# 
  3526  0E2E                     	;# 
  3527  0E2F                     	;# 
  3528  0E30                     	;# 
  3529  0E31                     	;# 
  3530  0E32                     	;# 
  3531  0E33                     	;# 
  3532  0E34                     	;# 
  3533  0E35                     	;# 
  3534  0E36                     	;# 
  3535  0E37                     	;# 
  3536  0E8F                     	;# 
  3537  0E90                     	;# 
  3538  0E91                     	;# 
  3539  0E92                     	;# 
  3540  0E93                     	;# 
  3541  0E94                     	;# 
  3542  0E95                     	;# 
  3543  0E96                     	;# 
  3544  0E97                     	;# 
  3545  0E9C                     	;# 
  3546  0E9D                     	;# 
  3547  0E9E                     	;# 
  3548  0EA1                     	;# 
  3549  0EA2                     	;# 
  3550  0EA3                     	;# 
  3551  0EA4                     	;# 
  3552  0EA5                     	;# 
  3553  0EA9                     	;# 
  3554  0EAA                     	;# 
  3555  0EAB                     	;# 
  3556  0EAC                     	;# 
  3557  0EB1                     	;# 
  3558  0EB2                     	;# 
  3559  0EB3                     	;# 
  3560  0EB8                     	;# 
  3561  0EB9                     	;# 
  3562  0EBA                     	;# 
  3563  0EBB                     	;# 
  3564  0EBC                     	;# 
  3565  0EBD                     	;# 
  3566  0EBE                     	;# 
  3567  0EC3                     	;# 
  3568  0EC5                     	;# 
  3569  0EC6                     	;# 
  3570  0EC7                     	;# 
  3571  0EC8                     	;# 
  3572  0EC9                     	;# 
  3573  0ECA                     	;# 
  3574  0ECB                     	;# 
  3575  0ECC                     	;# 
  3576  0F10                     	;# 
  3577  0F11                     	;# 
  3578  0F12                     	;# 
  3579  0F13                     	;# 
  3580  0F14                     	;# 
  3581  0F15                     	;# 
  3582  0F16                     	;# 
  3583  0F17                     	;# 
  3584  0F18                     	;# 
  3585  0F19                     	;# 
  3586  0F1A                     	;# 
  3587  0F1B                     	;# 
  3588  0F1C                     	;# 
  3589  0F1D                     	;# 
  3590  0F1E                     	;# 
  3591  0F1F                     	;# 
  3592  0F20                     	;# 
  3593  0F21                     	;# 
  3594  0F22                     	;# 
  3595  0F23                     	;# 
  3596  0F24                     	;# 
  3597  0F25                     	;# 
  3598  0F26                     	;# 
  3599  0F27                     	;# 
  3600  0F38                     	;# 
  3601  0F39                     	;# 
  3602  0F3A                     	;# 
  3603  0F3B                     	;# 
  3604  0F3C                     	;# 
  3605  0F3D                     	;# 
  3606  0F3E                     	;# 
  3607  0F3F                     	;# 
  3608  0F40                     	;# 
  3609  0F41                     	;# 
  3610  0F43                     	;# 
  3611  0F44                     	;# 
  3612  0F45                     	;# 
  3613  0F46                     	;# 
  3614  0F47                     	;# 
  3615  0F48                     	;# 
  3616  0F49                     	;# 
  3617  0F4A                     	;# 
  3618  0F4B                     	;# 
  3619  0F4C                     	;# 
  3620  0F4E                     	;# 
  3621  0F4F                     	;# 
  3622  0F50                     	;# 
  3623  0F51                     	;# 
  3624  0F52                     	;# 
  3625  0F53                     	;# 
  3626  0F54                     	;# 
  3627  0F55                     	;# 
  3628  0F56                     	;# 
  3629  0F57                     	;# 
  3630  0F65                     	;# 
  3631  0F68                     	;# 
  3632  0F69                     	;# 
  3633  0F6A                     	;# 
  3634  0F6B                     	;# 
  3635  0FE4                     	;# 
  3636  0FE5                     	;# 
  3637  0FE6                     	;# 
  3638  0FE7                     	;# 
  3639  0FE8                     	;# 
  3640  0FE9                     	;# 
  3641  0FEA                     	;# 
  3642  0FEB                     	;# 
  3643  0FED                     	;# 
  3644  0FEE                     	;# 
  3645  0FEF                     	;# 
  3646  0000                     	;# 
  3647  0001                     	;# 
  3648  0002                     	;# 
  3649  0003                     	;# 
  3650  0004                     	;# 
  3651  0005                     	;# 
  3652  0006                     	;# 
  3653  0007                     	;# 
  3654  0008                     	;# 
  3655  0009                     	;# 
  3656  000A                     	;# 
  3657  000B                     	;# 
  3658  000C                     	;# 
  3659  000D                     	;# 
  3660  000E                     	;# 
  3661  0010                     	;# 
  3662  0011                     	;# 
  3663  0012                     	;# 
  3664  0013                     	;# 
  3665  0016                     	;# 
  3666  0017                     	;# 
  3667  0018                     	;# 
  3668  001C                     	;# 
  3669  001C                     	;# 
  3670  001D                     	;# 
  3671  001D                     	;# 
  3672  001E                     	;# 
  3673  001F                     	;# 
  3674  008C                     	;# 
  3675  008C                     	;# 
  3676  008D                     	;# 
  3677  008E                     	;# 
  3678  008E                     	;# 
  3679  008F                     	;# 
  3680  0090                     	;# 
  3681  0090                     	;# 
  3682  0091                     	;# 
  3683  0093                     	;# 
  3684  0094                     	;# 
  3685  0095                     	;# 
  3686  0096                     	;# 
  3687  0097                     	;# 
  3688  0098                     	;# 
  3689  0099                     	;# 
  3690  009A                     	;# 
  3691  009B                     	;# 
  3692  009C                     	;# 
  3693  009D                     	;# 
  3694  009E                     	;# 
  3695  010C                     	;# 
  3696  010D                     	;# 
  3697  010E                     	;# 
  3698  010E                     	;# 
  3699  010F                     	;# 
  3700  0110                     	;# 
  3701  0110                     	;# 
  3702  0111                     	;# 
  3703  0112                     	;# 
  3704  0112                     	;# 
  3705  0113                     	;# 
  3706  0114                     	;# 
  3707  0114                     	;# 
  3708  0115                     	;# 
  3709  0116                     	;# 
  3710  0116                     	;# 
  3711  0117                     	;# 
  3712  0119                     	;# 
  3713  0119                     	;# 
  3714  0119                     	;# 
  3715  011A                     	;# 
  3716  011A                     	;# 
  3717  011A                     	;# 
  3718  011B                     	;# 
  3719  011B                     	;# 
  3720  011B                     	;# 
  3721  011B                     	;# 
  3722  011B                     	;# 
  3723  011C                     	;# 
  3724  011C                     	;# 
  3725  011C                     	;# 
  3726  011D                     	;# 
  3727  011D                     	;# 
  3728  011D                     	;# 
  3729  011E                     	;# 
  3730  011E                     	;# 
  3731  011E                     	;# 
  3732  011F                     	;# 
  3733  011F                     	;# 
  3734  011F                     	;# 
  3735  011F                     	;# 
  3736  011F                     	;# 
  3737  018C                     	;# 
  3738  018D                     	;# 
  3739  018E                     	;# 
  3740  018F                     	;# 
  3741  0190                     	;# 
  3742  0191                     	;# 
  3743  0192                     	;# 
  3744  0196                     	;# 
  3745  0197                     	;# 
  3746  0198                     	;# 
  3747  0199                     	;# 
  3748  019A                     	;# 
  3749  019B                     	;# 
  3750  019C                     	;# 
  3751  020C                     	;# 
  3752  020D                     	;# 
  3753  020E                     	;# 
  3754  020F                     	;# 
  3755  020F                     	;# 
  3756  0210                     	;# 
  3757  0210                     	;# 
  3758  0211                     	;# 
  3759  0211                     	;# 
  3760  0212                     	;# 
  3761  0213                     	;# 
  3762  0214                     	;# 
  3763  0215                     	;# 
  3764  0215                     	;# 
  3765  0216                     	;# 
  3766  0216                     	;# 
  3767  0217                     	;# 
  3768  0217                     	;# 
  3769  0218                     	;# 
  3770  0219                     	;# 
  3771  021A                     	;# 
  3772  021B                     	;# 
  3773  021B                     	;# 
  3774  021C                     	;# 
  3775  021C                     	;# 
  3776  021D                     	;# 
  3777  021D                     	;# 
  3778  021E                     	;# 
  3779  021F                     	;# 
  3780  028C                     	;# 
  3781  028C                     	;# 
  3782  028D                     	;# 
  3783  028D                     	;# 
  3784  028E                     	;# 
  3785  028F                     	;# 
  3786  0290                     	;# 
  3787  0290                     	;# 
  3788  0291                     	;# 
  3789  0292                     	;# 
  3790  0292                     	;# 
  3791  0293                     	;# 
  3792  0293                     	;# 
  3793  0294                     	;# 
  3794  0295                     	;# 
  3795  0296                     	;# 
  3796  0296                     	;# 
  3797  0297                     	;# 
  3798  0298                     	;# 
  3799  0298                     	;# 
  3800  0299                     	;# 
  3801  0299                     	;# 
  3802  029A                     	;# 
  3803  029B                     	;# 
  3804  029C                     	;# 
  3805  029C                     	;# 
  3806  029D                     	;# 
  3807  030C                     	;# 
  3808  030C                     	;# 
  3809  030D                     	;# 
  3810  030E                     	;# 
  3811  030F                     	;# 
  3812  0310                     	;# 
  3813  0310                     	;# 
  3814  0311                     	;# 
  3815  0312                     	;# 
  3816  0313                     	;# 
  3817  0314                     	;# 
  3818  0314                     	;# 
  3819  0315                     	;# 
  3820  0316                     	;# 
  3821  0317                     	;# 
  3822  0318                     	;# 
  3823  0318                     	;# 
  3824  0319                     	;# 
  3825  031A                     	;# 
  3826  031B                     	;# 
  3827  031C                     	;# 
  3828  031C                     	;# 
  3829  031D                     	;# 
  3830  031E                     	;# 
  3831  031F                     	;# 
  3832  038C                     	;# 
  3833  038D                     	;# 
  3834  038E                     	;# 
  3835  0390                     	;# 
  3836  0391                     	;# 
  3837  0392                     	;# 
  3838  040C                     	;# 
  3839  040D                     	;# 
  3840  040E                     	;# 
  3841  040F                     	;# 
  3842  0410                     	;# 
  3843  0411                     	;# 
  3844  0416                     	;# 
  3845  0416                     	;# 
  3846  0417                     	;# 
  3847  0418                     	;# 
  3848  0418                     	;# 
  3849  0419                     	;# 
  3850  041A                     	;# 
  3851  041A                     	;# 
  3852  041B                     	;# 
  3853  041C                     	;# 
  3854  041C                     	;# 
  3855  041D                     	;# 
  3856  041E                     	;# 
  3857  041F                     	;# 
  3858  048C                     	;# 
  3859  048C                     	;# 
  3860  048D                     	;# 
  3861  048E                     	;# 
  3862  048F                     	;# 
  3863  048F                     	;# 
  3864  0490                     	;# 
  3865  0491                     	;# 
  3866  0492                     	;# 
  3867  0492                     	;# 
  3868  0493                     	;# 
  3869  0494                     	;# 
  3870  0495                     	;# 
  3871  0495                     	;# 
  3872  0496                     	;# 
  3873  0497                     	;# 
  3874  0498                     	;# 
  3875  0499                     	;# 
  3876  049A                     	;# 
  3877  049B                     	;# 
  3878  049C                     	;# 
  3879  049D                     	;# 
  3880  050C                     	;# 
  3881  050C                     	;# 
  3882  050D                     	;# 
  3883  050E                     	;# 
  3884  050F                     	;# 
  3885  050F                     	;# 
  3886  0510                     	;# 
  3887  0511                     	;# 
  3888  0512                     	;# 
  3889  0512                     	;# 
  3890  0513                     	;# 
  3891  0514                     	;# 
  3892  0515                     	;# 
  3893  0515                     	;# 
  3894  0516                     	;# 
  3895  0517                     	;# 
  3896  0518                     	;# 
  3897  0519                     	;# 
  3898  051A                     	;# 
  3899  051B                     	;# 
  3900  051C                     	;# 
  3901  051D                     	;# 
  3902  058C                     	;# 
  3903  058C                     	;# 
  3904  058D                     	;# 
  3905  058E                     	;# 
  3906  058F                     	;# 
  3907  058F                     	;# 
  3908  0590                     	;# 
  3909  0591                     	;# 
  3910  0592                     	;# 
  3911  0593                     	;# 
  3912  060C                     	;# 
  3913  060D                     	;# 
  3914  060E                     	;# 
  3915  060F                     	;# 
  3916  0610                     	;# 
  3917  0611                     	;# 
  3918  0612                     	;# 
  3919  0613                     	;# 
  3920  0614                     	;# 
  3921  0616                     	;# 
  3922  0617                     	;# 
  3923  0618                     	;# 
  3924  0619                     	;# 
  3925  061A                     	;# 
  3926  061B                     	;# 
  3927  061C                     	;# 
  3928  061D                     	;# 
  3929  061E                     	;# 
  3930  068C                     	;# 
  3931  068D                     	;# 
  3932  068E                     	;# 
  3933  068F                     	;# 
  3934  0690                     	;# 
  3935  0691                     	;# 
  3936  0692                     	;# 
  3937  0693                     	;# 
  3938  0694                     	;# 
  3939  070C                     	;# 
  3940  070D                     	;# 
  3941  070E                     	;# 
  3942  070F                     	;# 
  3943  0710                     	;# 
  3944  0711                     	;# 
  3945  0712                     	;# 
  3946  0713                     	;# 
  3947  0714                     	;# 
  3948  0716                     	;# 
  3949  0717                     	;# 
  3950  0718                     	;# 
  3951  0719                     	;# 
  3952  071A                     	;# 
  3953  071B                     	;# 
  3954  071C                     	;# 
  3955  071D                     	;# 
  3956  071E                     	;# 
  3957  0796                     	;# 
  3958  0797                     	;# 
  3959  0798                     	;# 
  3960  0799                     	;# 
  3961  079A                     	;# 
  3962  079B                     	;# 
  3963  080C                     	;# 
  3964  080D                     	;# 
  3965  080E                     	;# 
  3966  080F                     	;# 
  3967  0810                     	;# 
  3968  0811                     	;# 
  3969  0812                     	;# 
  3970  0813                     	;# 
  3971  0814                     	;# 
  3972  081A                     	;# 
  3973  081B                     	;# 
  3974  081C                     	;# 
  3975  081D                     	;# 
  3976  081E                     	;# 
  3977  081F                     	;# 
  3978  088C                     	;# 
  3979  088D                     	;# 
  3980  088E                     	;# 
  3981  088F                     	;# 
  3982  0890                     	;# 
  3983  0891                     	;# 
  3984  0892                     	;# 
  3985  0893                     	;# 
  3986  0895                     	;# 
  3987  0896                     	;# 
  3988  0897                     	;# 
  3989  0898                     	;# 
  3990  0899                     	;# 
  3991  089A                     	;# 
  3992  089B                     	;# 
  3993  090C                     	;# 
  3994  090E                     	;# 
  3995  090F                     	;# 
  3996  091F                     	;# 
  3997  091F                     	;# 
  3998  098F                     	;# 
  3999  098F                     	;# 
  4000  0990                     	;# 
  4001  0991                     	;# 
  4002  0992                     	;# 
  4003  0993                     	;# 
  4004  0994                     	;# 
  4005  0995                     	;# 
  4006  0996                     	;# 
  4007  0997                     	;# 
  4008  0E0F                     	;# 
  4009  0E10                     	;# 
  4010  0E11                     	;# 
  4011  0E12                     	;# 
  4012  0E13                     	;# 
  4013  0E14                     	;# 
  4014  0E15                     	;# 
  4015  0E16                     	;# 
  4016  0E17                     	;# 
  4017  0E18                     	;# 
  4018  0E19                     	;# 
  4019  0E1A                     	;# 
  4020  0E1B                     	;# 
  4021  0E1C                     	;# 
  4022  0E1D                     	;# 
  4023  0E1E                     	;# 
  4024  0E1F                     	;# 
  4025  0E20                     	;# 
  4026  0E21                     	;# 
  4027  0E22                     	;# 
  4028  0E23                     	;# 
  4029  0E24                     	;# 
  4030  0E25                     	;# 
  4031  0E26                     	;# 
  4032  0E27                     	;# 
  4033  0E28                     	;# 
  4034  0E29                     	;# 
  4035  0E2A                     	;# 
  4036  0E2B                     	;# 
  4037  0E2C                     	;# 
  4038  0E2D                     	;# 
  4039  0E2E                     	;# 
  4040  0E2F                     	;# 
  4041  0E30                     	;# 
  4042  0E31                     	;# 
  4043  0E32                     	;# 
  4044  0E33                     	;# 
  4045  0E34                     	;# 
  4046  0E35                     	;# 
  4047  0E36                     	;# 
  4048  0E37                     	;# 
  4049  0E8F                     	;# 
  4050  0E90                     	;# 
  4051  0E91                     	;# 
  4052  0E92                     	;# 
  4053  0E93                     	;# 
  4054  0E94                     	;# 
  4055  0E95                     	;# 
  4056  0E96                     	;# 
  4057  0E97                     	;# 
  4058  0E9C                     	;# 
  4059  0E9D                     	;# 
  4060  0E9E                     	;# 
  4061  0EA1                     	;# 
  4062  0EA2                     	;# 
  4063  0EA3                     	;# 
  4064  0EA4                     	;# 
  4065  0EA5                     	;# 
  4066  0EA9                     	;# 
  4067  0EAA                     	;# 
  4068  0EAB                     	;# 
  4069  0EAC                     	;# 
  4070  0EB1                     	;# 
  4071  0EB2                     	;# 
  4072  0EB3                     	;# 
  4073  0EB8                     	;# 
  4074  0EB9                     	;# 
  4075  0EBA                     	;# 
  4076  0EBB                     	;# 
  4077  0EBC                     	;# 
  4078  0EBD                     	;# 
  4079  0EBE                     	;# 
  4080  0EC3                     	;# 
  4081  0EC5                     	;# 
  4082  0EC6                     	;# 
  4083  0EC7                     	;# 
  4084  0EC8                     	;# 
  4085  0EC9                     	;# 
  4086  0ECA                     	;# 
  4087  0ECB                     	;# 
  4088  0ECC                     	;# 
  4089  0F10                     	;# 
  4090  0F11                     	;# 
  4091  0F12                     	;# 
  4092  0F13                     	;# 
  4093  0F14                     	;# 
  4094  0F15                     	;# 
  4095  0F16                     	;# 
  4096  0F17                     	;# 
  4097  0F18                     	;# 
  4098  0F19                     	;# 
  4099  0F1A                     	;# 
  4100  0F1B                     	;# 
  4101  0F1C                     	;# 
  4102  0F1D                     	;# 
  4103  0F1E                     	;# 
  4104  0F1F                     	;# 
  4105  0F20                     	;# 
  4106  0F21                     	;# 
  4107  0F22                     	;# 
  4108  0F23                     	;# 
  4109  0F24                     	;# 
  4110  0F25                     	;# 
  4111  0F26                     	;# 
  4112  0F27                     	;# 
  4113  0F38                     	;# 
  4114  0F39                     	;# 
  4115  0F3A                     	;# 
  4116  0F3B                     	;# 
  4117  0F3C                     	;# 
  4118  0F3D                     	;# 
  4119  0F3E                     	;# 
  4120  0F3F                     	;# 
  4121  0F40                     	;# 
  4122  0F41                     	;# 
  4123  0F43                     	;# 
  4124  0F44                     	;# 
  4125  0F45                     	;# 
  4126  0F46                     	;# 
  4127  0F47                     	;# 
  4128  0F48                     	;# 
  4129  0F49                     	;# 
  4130  0F4A                     	;# 
  4131  0F4B                     	;# 
  4132  0F4C                     	;# 
  4133  0F4E                     	;# 
  4134  0F4F                     	;# 
  4135  0F50                     	;# 
  4136  0F51                     	;# 
  4137  0F52                     	;# 
  4138  0F53                     	;# 
  4139  0F54                     	;# 
  4140  0F55                     	;# 
  4141  0F56                     	;# 
  4142  0F57                     	;# 
  4143  0F65                     	;# 
  4144  0F68                     	;# 
  4145  0F69                     	;# 
  4146  0F6A                     	;# 
  4147  0F6B                     	;# 
  4148  0FE4                     	;# 
  4149  0FE5                     	;# 
  4150  0FE6                     	;# 
  4151  0FE7                     	;# 
  4152  0FE8                     	;# 
  4153  0FE9                     	;# 
  4154  0FEA                     	;# 
  4155  0FEB                     	;# 
  4156  0FED                     	;# 
  4157  0FEE                     	;# 
  4158  0FEF                     	;# 
  4159                           
  4160                           	psect	idataBANK1
  4161  0B54                     __pidataBANK1:	
  4162                           
  4163                           ;initializer for _channels
  4164  0B54  3401               	retlw	1
  4165  0B55  3400               	retlw	0
  4166  0B56  3403               	retlw	3
  4167  0B57  3400               	retlw	0
  4168  0B58  3404               	retlw	4
  4169  0B59  3400               	retlw	0
  4170  0B5A  3405               	retlw	5
  4171  0B5B  3400               	retlw	0
  4172  0B5C  3409               	retlw	9
  4173  0B5D  3400               	retlw	0
  4174  0B5E  340B               	retlw	11
  4175  0B5F  3400               	retlw	0
  4176                           
  4177                           	psect	idataBANK2
  4178  0BCD                     __pidataBANK2:	
  4179                           
  4180                           ;initializer for ___cgram
  4181  0BCD  340C               	retlw	12
  4182  0BCE  3412               	retlw	18
  4183  0BCF  3412               	retlw	18
  4184  0BD0  340C               	retlw	12
  4185  0BD1  3400               	retlw	0
  4186  0BD2  3400               	retlw	0
  4187  0BD3  3400               	retlw	0
  4188  0BD4  3400               	retlw	0
  4189  0BD5  340A               	retlw	10
  4190  0BD6  3415               	retlw	21
  4191  0BD7  3411               	retlw	17
  4192  0BD8  340A               	retlw	10
  4193  0BD9  3404               	retlw	4
  4194  0BDA  3400               	retlw	0
  4195  0BDB  3400               	retlw	0
  4196  0BDC  3400               	retlw	0
  4197  0BDD  340A               	retlw	10
  4198  0BDE  341F               	retlw	31
  4199  0BDF  341F               	retlw	31
  4200  0BE0  340E               	retlw	14
  4201  0BE1  3404               	retlw	4
  4202  0BE2  3400               	retlw	0
  4203  0BE3  3400               	retlw	0
  4204  0BE4  3400               	retlw	0
  4205                           
  4206                           	psect	stringtext
  4207  1000                     __pstringtext:	
  4208  1000                     log@coeff:	
  4209  1000  3400               	retlw	0
  4210  1001  3400               	retlw	0
  4211  1002  3400               	retlw	0
  4212  1003  3400               	retlw	0
  4213  1004  3480               	retlw	128
  4214  1005  343F               	retlw	63
  4215  1006  34F0               	retlw	240
  4216  1007  34FF               	retlw	255
  4217  1008  34BE               	retlw	190
  4218  1009  34E2               	retlw	226
  4219  100A  34A9               	retlw	169
  4220  100B  343E               	retlw	62
  4221  100C  3483               	retlw	131
  4222  100D  3476               	retlw	118
  4223  100E  34BE               	retlw	190
  4224  100F  34AE               	retlw	174
  4225  1010  342B               	retlw	43
  4226  1011  343E               	retlw	62
  4227  1012  343C               	retlw	60
  4228  1013  34C3               	retlw	195
  4229  1014  34BD               	retlw	189
  4230  1015  34D2               	retlw	210
  4231  1016  3413               	retlw	19
  4232  1017  343D               	retlw	61
  4233  1018  3478               	retlw	120
  4234  1019  34D3               	retlw	211
  4235  101A  34BB               	retlw	187
  4236  101B                     __end_oflog@coeff:	
  4237  0016                     _LATA	set	22
  4238  0017                     _LATB	set	23
  4239  0018                     _LATC	set	24
  4240  0011                     _TRISA	set	17
  4241  0012                     _TRISB	set	18
  4242  0013                     _TRISC	set	19
  4243  005F                     _GIE	set	95
  4244  0060                     _RA0	set	96
  4245  0062                     _RA2	set	98
  4246  0066                     _RA6	set	102
  4247  0067                     _RA7	set	103
  4248  0070                     _RC0	set	112
  4249  0071                     _RC1	set	113
  4250  009D                     _ADACQ	set	157
  4251  0099                     _ADACT	set	153
  4252  009B                     _ADCAP	set	155
  4253  0098                     _ADCLK	set	152
  4254  0093                     _ADCON0	set	147
  4255  0093                     _ADCON0bits	set	147
  4256  0094                     _ADCON1	set	148
  4257  0095                     _ADCON2	set	149
  4258  0096                     _ADCON3	set	150
  4259  009E                     _ADPCH	set	158
  4260  009C                     _ADPRE	set	156
  4261  009A                     _ADREF	set	154
  4262  008D                     _ADRESH	set	141
  4263  008C                     _ADRESL	set	140
  4264  0097                     _ADSTAT	set	151
  4265  010F                     _ADLTHH	set	271
  4266  010E                     _ADLTHL	set	270
  4267  010D                     _ADRPT	set	269
  4268  0113                     _ADSTPTH	set	275
  4269  0112                     _ADSTPTL	set	274
  4270  0111                     _ADUTHH	set	273
  4271  0110                     _ADUTHL	set	272
  4272  021F                     _CCPTMRS1bits	set	543
  4273  0290                     _T2CLKCON	set	656
  4274  028E                     _T2CON	set	654
  4275  028E                     _T2CONbits	set	654
  4276  028F                     _T2HLT	set	655
  4277  028D                     _T2PR	set	653
  4278  0291                     _T2RST	set	657
  4279  028C                     _T2TMR	set	652
  4280  038E                     _PWM6CON	set	910
  4281  038D                     _PWM6DCH	set	909
  4282  038C                     _PWM6DCL	set	908
  4283  0716                     _PIE0bits	set	1814
  4284  0710                     _PIR4bits	set	1808
  4285  088D                     _OSCCON1	set	2189
  4286  088F                     _OSCCON3	set	2191
  4287  0891                     _OSCEN	set	2193
  4288  0893                     _OSCFRQ	set	2195
  4289  0892                     _OSCTUNE	set	2194
  4290  090C                     _FVRCON	set	2316
  4291  0E8F                     _PPSLOCK	set	3727
  4292  0E8F                     _PPSLOCKbits	set	3727
  4293  0F38                     _ANSELA	set	3896
  4294  0F43                     _ANSELB	set	3907
  4295  0F4E                     _ANSELC	set	3918
  4296  0F22                     _RC2PPS	set	3874
  4297  0F39                     _WPUA	set	3897
  4298  0F44                     _WPUB	set	3908
  4299  0F4F                     _WPUC	set	3919
  4300  0F65                     _WPUE	set	3941
  4301  101B                     STR_1:	
  4302  101B  3453               	retlw	83	;'S'
  4303  101C  346F               	retlw	111	;'o'
  4304  101D  346C               	retlw	108	;'l'
  4305  101E  3461               	retlw	97	;'a'
  4306  101F  3472               	retlw	114	;'r'
  4307  1020  3420               	retlw	32	;' '
  4308  1021  3449               	retlw	73	;'I'
  4309  1022  346E               	retlw	110	;'n'
  4310  1023  3400               	retlw	0
  4311                           
  4312                           ; #config settings
  4313  0000                     
  4314                           	psect	cinit
  4315  07D2                     start_initialization:	
  4316  07D2                     __initialization:	
  4317                           
  4318                           ; Initialize objects allocated to BANK1
  4319  07D2  3054               	movlw	low __pidataBANK1
  4320  07D3  0084               	movwf	4
  4321  07D4  308B               	movlw	(high __pidataBANK1)| (0+128)
  4322  07D5  0085               	movwf	5
  4323  07D6  30DF               	movlw	low __pdataBANK1
  4324  07D7  0086               	movwf	6
  4325  07D8  3000               	movlw	high __pdataBANK1
  4326  07D9  0087               	movwf	7
  4327  07DA  300C               	movlw	12
  4328  07DB  318B  2333  3187   	fcall	init_ram
  4329                           
  4330                           ; Initialize objects allocated to BANK2
  4331  07DE  30CD               	movlw	low __pidataBANK2
  4332  07DF  0084               	movwf	4
  4333  07E0  308B               	movlw	(high __pidataBANK2)| (0+128)
  4334  07E1  0085               	movwf	5
  4335  07E2  3044               	movlw	low __pdataBANK2
  4336  07E3  0086               	movwf	6
  4337  07E4  3001               	movlw	high __pdataBANK2
  4338  07E5  0087               	movwf	7
  4339  07E6  3018               	movlw	24
  4340  07E7  318B  2333  3187   	fcall	init_ram
  4341                           
  4342                           ; Clear objects allocated to BANK0
  4343  07EA  01EB               	clrf	__pbssBANK0& (0+127)
  4344  07EB  01EC               	clrf	(__pbssBANK0+1)& (0+127)
  4345  07EC  01ED               	clrf	(__pbssBANK0+2)& (0+127)
  4346  07ED  01EE               	clrf	(__pbssBANK0+3)& (0+127)
  4347                           
  4348                           ; Clear objects allocated to BANK1
  4349  07EE  30A0               	movlw	low __pbssBANK1
  4350  07EF  0084               	movwf	4
  4351  07F0  3000               	movlw	high __pbssBANK1
  4352  07F1  0085               	movwf	5
  4353  07F2  3029               	movlw	41
  4354  07F3  318B  232D  3187   	fcall	clear_ram0
  4355                           
  4356                           ; Clear objects allocated to BANK2
  4357  07F6  3020               	movlw	low __pbssBANK2
  4358  07F7  0084               	movwf	4
  4359  07F8  3001               	movlw	high __pbssBANK2
  4360  07F9  0085               	movwf	5
  4361  07FA  3024               	movlw	36
  4362  07FB  318B  232D         	fcall	clear_ram0
  4363  07FD                     end_of_initialization:	
  4364                           ;End of C runtime variable initialization code
  4365                           
  4366  07FD                     __end_of__initialization:	
  4367  07FD  0020               	movlb	0
  4368  07FE  3186  2EBB         	ljmp	_main	;jump to C main() function
  4369                           
  4370                           	psect	bssBANK0
  4371  006B                     __pbssBANK0:	
  4372  006B                     _errno:	
  4373  006B                     	ds	2
  4374  006D                     _sampleIndex:	
  4375  006D                     	ds	2
  4376                           
  4377                           	psect	bssBANK1
  4378  00A0                     __pbssBANK1:	
  4379  00A0                     _totals:	
  4380  00A0                     	ds	24
  4381  00B8                     main@F13657:	
  4382  00B8                     	ds	12
  4383  00C4                     LCD_Write_Int@F13687:	
  4384  00C4                     	ds	5
  4385                           
  4386                           	psect	dataBANK1
  4387  00DF                     __pdataBANK1:	
  4388  00DF                     _channels:	
  4389  00DF                     	ds	12
  4390                           
  4391                           	psect	bssBANK2
  4392  0120                     __pbssBANK2:	
  4393  0120                     _samples:	
  4394  0120                     	ds	36
  4395                           
  4396                           	psect	dataBANK2
  4397  0144                     __pdataBANK2:	
  4398  0144                     ___cgram:	
  4399  0144                     	ds	24
  4400                           
  4401                           	psect	inittext
  4402  0B33                     init_ram:	
  4403  0B33  00FE               	movwf	126
  4404  0B34                     initloop:	
  4405  0B34  0012               	moviw fsr0++
  4406  0B35  001E               	movwi fsr1++
  4407  0B36  0BFE               	decfsz	126,f
  4408  0B37  2B34               	goto	initloop
  4409  0B38  3400               	retlw	0
  4410                           
  4411                           	psect	clrtext
  4412  0B2D                     clear_ram0:	
  4413                           ;	Called with FSR0 containing the base address, and
  4414                           ;	WREG with the size to clear
  4415                           
  4416  0B2D  0064               	clrwdt	;clear the watchdog before getting into this loop
  4417  0B2E                     clrloop0:	
  4418  0B2E  0180               	clrf	0	;clear RAM location pointed to by FSR
  4419  0B2F  3101               	addfsr 0,1
  4420  0B30  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  4421  0B31  2B2E               	goto	clrloop0	;have we reached the end yet?
  4422  0B32  3400               	retlw	0	;all done for this memory range, return
  4423                           
  4424                           	psect	cstackBANK1
  4425  00C9                     __pcstackBANK1:	
  4426  00C9                     main@displayTemp2:	
  4427                           
  4428                           ; 3 bytes @ 0x0
  4429  00C9                     	ds	3
  4430  00CC                     main@analogs:	
  4431                           
  4432                           ; 12 bytes @ 0x3
  4433  00CC                     	ds	12
  4434  00D8                     main@displayTemp:	
  4435                           
  4436                           ; 3 bytes @ 0xF
  4437  00D8                     	ds	3
  4438  00DB                     main@count:	
  4439                           
  4440                           ; 1 bytes @ 0x12
  4441  00DB                     	ds	1
  4442  00DC                     main@dutyCycle:	
  4443                           
  4444                           ; 2 bytes @ 0x13
  4445  00DC                     	ds	2
  4446  00DE                     main@x:	
  4447                           
  4448                           ; 1 bytes @ 0x15
  4449  00DE                     	ds	1
  4450                           
  4451                           	psect	cstackCOMMON
  4452  0070                     __pcstackCOMMON:	
  4453  0070                     ?___ftge:	
  4454  0070                     ?_LCD_Cmd:	
  4455                           ; 1 bit 
  4456                           
  4457  0070                     ?_LCD_Write_Char:	
  4458                           ; 1 bytes @ 0x0
  4459                           
  4460  0070                     ?_OSCILLATOR_Initialize:	
  4461                           ; 1 bytes @ 0x0
  4462                           
  4463  0070                     ??_OSCILLATOR_Initialize:	
  4464                           ; 1 bytes @ 0x0
  4465                           
  4466  0070                     ?_PWM6_Initialize:	
  4467                           ; 1 bytes @ 0x0
  4468                           
  4469  0070                     ??_PWM6_Initialize:	
  4470                           ; 1 bytes @ 0x0
  4471                           
  4472  0070                     ?_TMR2_Initialize:	
  4473                           ; 1 bytes @ 0x0
  4474                           
  4475  0070                     ??_TMR2_Initialize:	
  4476                           ; 1 bytes @ 0x0
  4477                           
  4478  0070                     ?_ADCC_Initialize:	
  4479                           ; 1 bytes @ 0x0
  4480                           
  4481  0070                     ??_ADCC_Initialize:	
  4482                           ; 1 bytes @ 0x0
  4483                           
  4484  0070                     ?_InitCustomChars:	
  4485                           ; 1 bytes @ 0x0
  4486                           
  4487  0070                     ?_LCD_Port:	
  4488                           ; 1 bytes @ 0x0
  4489                           
  4490  0070                     ??_LCD_Port:	
  4491                           ; 1 bytes @ 0x0
  4492                           
  4493  0070                     ?_LCD_Clear:	
  4494                           ; 1 bytes @ 0x0
  4495                           
  4496  0070                     ?_LCD_Init:	
  4497                           ; 1 bytes @ 0x0
  4498                           
  4499  0070                     ?_PIN_MANAGER_Initialize:	
  4500                           ; 1 bytes @ 0x0
  4501                           
  4502  0070                     ??_PIN_MANAGER_Initialize:	
  4503                           ; 1 bytes @ 0x0
  4504                           
  4505  0070                     ?_SYSTEM_Initialize:	
  4506                           ; 1 bytes @ 0x0
  4507                           
  4508  0070                     ?_PWM6_LoadDutyValue:	
  4509                           ; 1 bytes @ 0x0
  4510                           
  4511  0070                     ?_main:	
  4512                           ; 1 bytes @ 0x0
  4513                           
  4514  0070                     ?___bmul:	
  4515                           ; 1 bytes @ 0x0
  4516                           
  4517  0070                     ?_ADCRead:	
  4518                           ; 1 bytes @ 0x0
  4519                           
  4520  0070                     ?___wmul:	
  4521                           ; 2 bytes @ 0x0
  4522                           
  4523  0070                     ?___awdiv:	
  4524                           ; 2 bytes @ 0x0
  4525                           
  4526  0070                     ?___awmod:	
  4527                           ; 2 bytes @ 0x0
  4528                           
  4529  0070                     ?___ftpack:	
  4530                           ; 2 bytes @ 0x0
  4531                           
  4532  0070                     ?_frexp:	
  4533                           ; 3 bytes @ 0x0
  4534                           
  4535  0070                     ?___aldiv:	
  4536                           ; 3 bytes @ 0x0
  4537                           
  4538  0070                     ?___fttol:	
  4539                           ; 4 bytes @ 0x0
  4540                           
  4541  0070                     LCD_Port@a:	
  4542                           ; 4 bytes @ 0x0
  4543                           
  4544  0070                     PIN_MANAGER_Initialize@state:	
  4545                           ; 1 bytes @ 0x0
  4546                           
  4547  0070                     ___bmul@multiplicand:	
  4548                           ; 1 bytes @ 0x0
  4549                           
  4550  0070                     PWM6_LoadDutyValue@dutyCycle:	
  4551                           ; 1 bytes @ 0x0
  4552                           
  4553  0070                     ___wmul@multiplier:	
  4554                           ; 2 bytes @ 0x0
  4555                           
  4556  0070                     ___awdiv@divisor:	
  4557                           ; 2 bytes @ 0x0
  4558                           
  4559  0070                     ___awmod@divisor:	
  4560                           ; 2 bytes @ 0x0
  4561                           
  4562  0070                     ___ftpack@arg:	
  4563                           ; 2 bytes @ 0x0
  4564                           
  4565  0070                     ___ftge@ff1:	
  4566                           ; 3 bytes @ 0x0
  4567                           
  4568  0070                     ___fttol@f1:	
  4569                           ; 3 bytes @ 0x0
  4570                           
  4571  0070                     frexp@value:	
  4572                           ; 3 bytes @ 0x0
  4573                           
  4574  0070                     ___aldiv@divisor:	
  4575                           ; 3 bytes @ 0x0
  4576                           
  4577                           
  4578                           ; 4 bytes @ 0x0
  4579  0070                     	ds	1
  4580  0071                     ??_LCD_Cmd:	
  4581  0071                     ??_LCD_Write_Char:	
  4582                           ; 1 bytes @ 0x1
  4583                           
  4584  0071                     ??___bmul:	
  4585                           ; 1 bytes @ 0x1
  4586                           
  4587                           
  4588                           ; 1 bytes @ 0x1
  4589  0071                     	ds	1
  4590  0072                     ??_PWM6_LoadDutyValue:	
  4591  0072                     LCD_Cmd@a:	
  4592                           ; 1 bytes @ 0x2
  4593                           
  4594  0072                     LCD_Write_Char@temp:	
  4595                           ; 1 bytes @ 0x2
  4596                           
  4597  0072                     ___bmul@product:	
  4598                           ; 1 bytes @ 0x2
  4599                           
  4600  0072                     ___wmul@multiplicand:	
  4601                           ; 1 bytes @ 0x2
  4602                           
  4603  0072                     ___awdiv@dividend:	
  4604                           ; 2 bytes @ 0x2
  4605                           
  4606  0072                     ___awmod@dividend:	
  4607                           ; 2 bytes @ 0x2
  4608                           
  4609                           
  4610                           ; 2 bytes @ 0x2
  4611  0072                     	ds	1
  4612  0073                     ??_ADCRead:	
  4613  0073                     ??_LCD_Clear:	
  4614                           ; 1 bytes @ 0x3
  4615                           
  4616  0073                     ?_LCD_Set_Cursor:	
  4617                           ; 1 bytes @ 0x3
  4618                           
  4619  0073                     ??_LCD_Init:	
  4620                           ; 1 bytes @ 0x3
  4621                           
  4622  0073                     ADCRead@channel:	
  4623                           ; 1 bytes @ 0x3
  4624                           
  4625  0073                     LCD_Set_Cursor@y:	
  4626                           ; 1 bytes @ 0x3
  4627                           
  4628  0073                     LCD_Write_Char@y:	
  4629                           ; 1 bytes @ 0x3
  4630                           
  4631  0073                     ___bmul@multiplier:	
  4632                           ; 1 bytes @ 0x3
  4633                           
  4634  0073                     ___ftpack@exp:	
  4635                           ; 1 bytes @ 0x3
  4636                           
  4637  0073                     frexp@eptr:	
  4638                           ; 1 bytes @ 0x3
  4639                           
  4640  0073                     ___ftge@ff2:	
  4641                           ; 1 bytes @ 0x3
  4642                           
  4643                           
  4644                           ; 3 bytes @ 0x3
  4645  0073                     	ds	1
  4646  0074                     ??_frexp:	
  4647  0074                     ??_LCD_Set_Cursor:	
  4648                           ; 1 bytes @ 0x4
  4649                           
  4650  0074                     ??___wmul:	
  4651                           ; 1 bytes @ 0x4
  4652                           
  4653  0074                     ??___awdiv:	
  4654                           ; 1 bytes @ 0x4
  4655                           
  4656  0074                     ??___awmod:	
  4657                           ; 1 bytes @ 0x4
  4658                           
  4659  0074                     ??___fttol:	
  4660                           ; 1 bytes @ 0x4
  4661                           
  4662  0074                     LCD_Write_Char@a:	
  4663                           ; 1 bytes @ 0x4
  4664                           
  4665  0074                     ___ftpack@sign:	
  4666                           ; 1 bytes @ 0x4
  4667                           
  4668  0074                     ___wmul@product:	
  4669                           ; 1 bytes @ 0x4
  4670                           
  4671  0074                     ___aldiv@dividend:	
  4672                           ; 2 bytes @ 0x4
  4673                           
  4674                           
  4675                           ; 4 bytes @ 0x4
  4676  0074                     	ds	1
  4677  0075                     ??___ftpack:	
  4678  0075                     ??_InitCustomChars:	
  4679                           ; 1 bytes @ 0x5
  4680                           
  4681  0075                     ?_LCD_Write_String:	
  4682                           ; 1 bytes @ 0x5
  4683                           
  4684  0075                     LCD_Init@style:	
  4685                           ; 1 bytes @ 0x5
  4686                           
  4687  0075                     ___awdiv@counter:	
  4688                           ; 1 bytes @ 0x5
  4689                           
  4690  0075                     ___awmod@counter:	
  4691                           ; 1 bytes @ 0x5
  4692                           
  4693  0075                     LCD_Write_String@a:	
  4694                           ; 1 bytes @ 0x5
  4695                           
  4696                           
  4697                           ; 2 bytes @ 0x5
  4698  0075                     	ds	1
  4699  0076                     ??___ftge:	
  4700  0076                     InitCustomChars@i:	
  4701                           ; 1 bytes @ 0x6
  4702                           
  4703  0076                     LCD_Set_Cursor@x:	
  4704                           ; 1 bytes @ 0x6
  4705                           
  4706  0076                     ___awdiv@sign:	
  4707                           ; 1 bytes @ 0x6
  4708                           
  4709  0076                     ___awmod@sign:	
  4710                           ; 1 bytes @ 0x6
  4711                           
  4712                           
  4713                           ; 1 bytes @ 0x6
  4714  0076                     	ds	1
  4715  0077                     ??_LCD_Write_String:	
  4716  0077                     ??_SYSTEM_Initialize:	
  4717                           ; 1 bytes @ 0x7
  4718                           
  4719  0077                     LCD_Set_Cursor@z:	
  4720                           ; 1 bytes @ 0x7
  4721                           
  4722  0077                     ___awdiv@quotient:	
  4723                           ; 1 bytes @ 0x7
  4724                           
  4725                           
  4726                           ; 2 bytes @ 0x7
  4727  0077                     	ds	1
  4728  0078                     ??___aldiv:	
  4729  0078                     ?___awtoft:	
  4730                           ; 1 bytes @ 0x8
  4731                           
  4732  0078                     LCD_Set_Cursor@w:	
  4733                           ; 3 bytes @ 0x8
  4734                           
  4735  0078                     ___fttol@sign1:	
  4736                           ; 1 bytes @ 0x8
  4737                           
  4738  0078                     LCD_Write_String@i:	
  4739                           ; 1 bytes @ 0x8
  4740                           
  4741  0078                     ___awtoft@c:	
  4742                           ; 2 bytes @ 0x8
  4743                           
  4744                           
  4745                           ; 2 bytes @ 0x8
  4746  0078                     	ds	1
  4747  0079                     LCD_Set_Cursor@temp:	
  4748  0079                     readAnalog@analog_channel:	
  4749                           ; 1 bytes @ 0x9
  4750                           
  4751  0079                     ___fttol@lval:	
  4752                           ; 2 bytes @ 0x9
  4753                           
  4754                           
  4755                           ; 4 bytes @ 0x9
  4756  0079                     	ds	2
  4757  007B                     ??___awtoft:	
  4758  007B                     readAnalog@value:	
  4759                           ; 1 bytes @ 0xB
  4760                           
  4761                           
  4762                           ; 2 bytes @ 0xB
  4763  007B                     	ds	2
  4764  007D                     ___awtoft@sign:	
  4765  007D                     ___fttol@exp1:	
  4766                           ; 1 bytes @ 0xD
  4767                           
  4768                           
  4769                           ; 1 bytes @ 0xD
  4770  007D                     	ds	1
  4771  007E                     ??_eval_poly:	
  4772  007E                     ??_tempCalc:	
  4773                           ; 1 bytes @ 0xE
  4774                           
  4775  007E                     ??___ftsub:	
  4776                           ; 1 bytes @ 0xE
  4777                           
  4778                           
  4779                           	psect	cstackBANK0
  4780  0020                     __pcstackBANK0:	
  4781                           ; 1 bytes @ 0xE
  4782                           
  4783  0020                     ?_LCD_Write_Int:	
  4784  0020                     ?___ftmul:	
  4785                           ; 1 bytes @ 0x0
  4786                           
  4787  0020                     ___aldiv@counter:	
  4788                           ; 3 bytes @ 0x0
  4789                           
  4790  0020                     LCD_Write_Int@value:	
  4791                           ; 1 bytes @ 0x0
  4792                           
  4793  0020                     ___ftmul@f1:	
  4794                           ; 2 bytes @ 0x0
  4795                           
  4796                           
  4797                           ; 3 bytes @ 0x0
  4798  0020                     	ds	1
  4799  0021                     ___aldiv@sign:	
  4800                           
  4801                           ; 1 bytes @ 0x1
  4802  0021                     	ds	1
  4803  0022                     LCD_Write_Int@fieldLength:	
  4804  0022                     ___aldiv@quotient:	
  4805                           ; 1 bytes @ 0x2
  4806                           
  4807                           
  4808                           ; 4 bytes @ 0x2
  4809  0022                     	ds	1
  4810  0023                     LCD_Write_Int@numPlaces:	
  4811  0023                     ___ftmul@f2:	
  4812                           ; 1 bytes @ 0x3
  4813                           
  4814                           
  4815                           ; 3 bytes @ 0x3
  4816  0023                     	ds	1
  4817  0024                     LCD_Write_Int@sign:	
  4818                           
  4819                           ; 1 bytes @ 0x4
  4820  0024                     	ds	1
  4821  0025                     ??_LCD_Write_Int:	
  4822                           
  4823                           ; 1 bytes @ 0x5
  4824  0025                     	ds	1
  4825  0026                     ??___ftmul:	
  4826  0026                     ?_readAnalog:	
  4827                           ; 1 bytes @ 0x6
  4828                           
  4829  0026                     readAnalog@channel:	
  4830                           ; 2 bytes @ 0x6
  4831                           
  4832                           
  4833                           ; 2 bytes @ 0x6
  4834  0026                     	ds	2
  4835  0028                     ??_readAnalog:	
  4836                           
  4837                           ; 1 bytes @ 0x8
  4838  0028                     	ds	2
  4839  002A                     ___ftmul@exp:	
  4840  002A                     LCD_Write_Int@str:	
  4841                           ; 1 bytes @ 0xA
  4842                           
  4843                           
  4844                           ; 5 bytes @ 0xA
  4845  002A                     	ds	1
  4846  002B                     ___ftmul@f3_as_product:	
  4847                           
  4848                           ; 3 bytes @ 0xB
  4849  002B                     	ds	3
  4850  002E                     ___ftmul@cntr:	
  4851                           
  4852                           ; 1 bytes @ 0xE
  4853  002E                     	ds	1
  4854  002F                     ___ftmul@sign:	
  4855  002F                     LCD_Write_Int@j:	
  4856                           ; 1 bytes @ 0xF
  4857                           
  4858                           
  4859                           ; 2 bytes @ 0xF
  4860  002F                     	ds	1
  4861  0030                     ?___ftdiv:	
  4862  0030                     ___ftdiv@f2:	
  4863                           ; 3 bytes @ 0x10
  4864                           
  4865                           
  4866                           ; 3 bytes @ 0x10
  4867  0030                     	ds	1
  4868  0031                     LCD_Write_Int@i:	
  4869                           
  4870                           ; 2 bytes @ 0x11
  4871  0031                     	ds	2
  4872  0033                     ___ftdiv@f1:	
  4873                           
  4874                           ; 3 bytes @ 0x13
  4875  0033                     	ds	3
  4876  0036                     ??___ftdiv:	
  4877                           
  4878                           ; 1 bytes @ 0x16
  4879  0036                     	ds	4
  4880  003A                     ___ftdiv@cntr:	
  4881                           
  4882                           ; 1 bytes @ 0x1A
  4883  003A                     	ds	1
  4884  003B                     ___ftdiv@f3:	
  4885                           
  4886                           ; 3 bytes @ 0x1B
  4887  003B                     	ds	3
  4888  003E                     ___ftdiv@exp:	
  4889                           
  4890                           ; 1 bytes @ 0x1E
  4891  003E                     	ds	1
  4892  003F                     ___ftdiv@sign:	
  4893                           
  4894                           ; 1 bytes @ 0x1F
  4895  003F                     	ds	1
  4896  0040                     ?___ftadd:	
  4897  0040                     ___ftadd@f1:	
  4898                           ; 3 bytes @ 0x20
  4899                           
  4900                           
  4901                           ; 3 bytes @ 0x20
  4902  0040                     	ds	3
  4903  0043                     ___ftadd@f2:	
  4904                           
  4905                           ; 3 bytes @ 0x23
  4906  0043                     	ds	3
  4907  0046                     ??___ftadd:	
  4908                           
  4909                           ; 1 bytes @ 0x26
  4910  0046                     	ds	4
  4911  004A                     ___ftadd@sign:	
  4912                           
  4913                           ; 1 bytes @ 0x2A
  4914  004A                     	ds	1
  4915  004B                     ___ftadd@exp2:	
  4916                           
  4917                           ; 1 bytes @ 0x2B
  4918  004B                     	ds	1
  4919  004C                     ___ftadd@exp1:	
  4920                           
  4921                           ; 1 bytes @ 0x2C
  4922  004C                     	ds	1
  4923  004D                     ?_eval_poly:	
  4924  004D                     ?___ftsub:	
  4925                           ; 3 bytes @ 0x2D
  4926                           
  4927  004D                     ___ftsub@f2:	
  4928                           ; 3 bytes @ 0x2D
  4929                           
  4930  004D                     eval_poly@x:	
  4931                           ; 3 bytes @ 0x2D
  4932                           
  4933                           
  4934                           ; 3 bytes @ 0x2D
  4935  004D                     	ds	3
  4936  0050                     eval_poly@d:	
  4937  0050                     ___ftsub@f1:	
  4938                           ; 2 bytes @ 0x30
  4939                           
  4940                           
  4941                           ; 3 bytes @ 0x30
  4942  0050                     	ds	2
  4943  0052                     eval_poly@n:	
  4944                           
  4945                           ; 2 bytes @ 0x32
  4946  0052                     	ds	2
  4947  0054                     eval_poly@res:	
  4948                           
  4949                           ; 3 bytes @ 0x34
  4950  0054                     	ds	3
  4951  0057                     ?_log:	
  4952  0057                     log@x:	
  4953                           ; 3 bytes @ 0x37
  4954                           
  4955                           
  4956                           ; 3 bytes @ 0x37
  4957  0057                     	ds	3
  4958  005A                     ??_log:	
  4959                           
  4960                           ; 1 bytes @ 0x3A
  4961  005A                     	ds	1
  4962  005B                     log@exponent:	
  4963                           
  4964                           ; 2 bytes @ 0x3B
  4965  005B                     	ds	2
  4966  005D                     ?_tempCalc:	
  4967  005D                     tempCalc@analogValue:	
  4968                           ; 3 bytes @ 0x3D
  4969                           
  4970                           
  4971                           ; 2 bytes @ 0x3D
  4972  005D                     	ds	3
  4973  0060                     tempCalc@R:	
  4974                           
  4975                           ; 3 bytes @ 0x40
  4976  0060                     	ds	3
  4977  0063                     _tempCalc$941:	
  4978                           
  4979                           ; 3 bytes @ 0x43
  4980  0063                     	ds	3
  4981  0066                     tempCalc@steinhart:	
  4982                           
  4983                           ; 3 bytes @ 0x46
  4984  0066                     	ds	3
  4985  0069                     ??_main:	
  4986                           
  4987                           ; 1 bytes @ 0x49
  4988  0069                     	ds	2
  4989                           
  4990                           	psect	maintext
  4991  06BB                     __pmaintext:	
  4992 ;;
  4993 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  4994 ;;
  4995 ;; *************** function _main *****************
  4996 ;; Defined at:
  4997 ;;		line 12 in file "main.c"
  4998 ;; Parameters:    Size  Location     Type
  4999 ;;		None
  5000 ;; Auto vars:     Size  Location     Type
  5001 ;;  analogs        12    3[BANK1 ] unsigned int [6]
  5002 ;;  displayTemp     3   15[BANK1 ] float 
  5003 ;;  displayTemp2    3    0[BANK1 ] float 
  5004 ;;  steinhart       3    0        float 
  5005 ;;  R               3    0        float 
  5006 ;;  dutyCycle       2   19[BANK1 ] unsigned int 
  5007 ;;  x               1   21[BANK1 ] unsigned char 
  5008 ;;  count           1   18[BANK1 ] unsigned char 
  5009 ;; Return value:  Size  Location     Type
  5010 ;;                  1    wreg      void 
  5011 ;; Registers used:
  5012 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5013 ;; Tracked objects:
  5014 ;;		On entry : B1F/0
  5015 ;;		On exit  : 0/0
  5016 ;;		Unchanged: 0/0
  5017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5019 ;;      Locals:         0       0      22       0       0       0       0       0       0       0       0       0       
      +0       0
  5020 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5021 ;;      Totals:         0       2      22       0       0       0       0       0       0       0       0       0       
      +0       0
  5022 ;;Total ram usage:       24 bytes
  5023 ;; Hardware stack levels required when called:    5
  5024 ;; This function calls:
  5025 ;;		_LCD_Clear
  5026 ;;		_LCD_Set_Cursor
  5027 ;;		_LCD_Write_Char
  5028 ;;		_LCD_Write_Int
  5029 ;;		_LCD_Write_String
  5030 ;;		_PWM6_LoadDutyValue
  5031 ;;		_SYSTEM_Initialize
  5032 ;;		___fttol
  5033 ;;		_readAnalog
  5034 ;;		_tempCalc
  5035 ;; This function is called by:
  5036 ;;		Startup code after reset
  5037 ;; This function uses a non-reentrant model
  5038 ;;
  5039                           
  5040                           
  5041                           ;psect for function _main
  5042  06BB                     _main:	
  5043                           
  5044                           ;main.c: 14: SYSTEM_Initialize();
  5045                           
  5046                           ;incstack = 0
  5047                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5048  06BB  318C  24F8  3186   	fcall	_SYSTEM_Initialize
  5049                           
  5050                           ;main.c: 16: uint16_t analogs[6] = {0};
  5051  06BE  30B8               	movlw	low main@F13657
  5052  06BF  0086               	movwf	6
  5053  06C0  3000               	movlw	high main@F13657
  5054  06C1  0087               	movwf	7
  5055  06C2  30CC               	movlw	low main@analogs
  5056  06C3  0084               	movwf	4
  5057  06C4  3000               	movlw	high main@analogs
  5058  06C5  0085               	movwf	5
  5059  06C6  300C               	movlw	12
  5060  06C7  0020               	movlb	0	; select bank0
  5061  06C8  00E9               	movwf	??_main
  5062  06C9                     u2930:	
  5063  06C9  0016               	moviw fsr1++
  5064  06CA  001A               	movwi fsr0++
  5065  06CB  0BE9               	decfsz	??_main,f
  5066  06CC  2EC9               	goto	u2930
  5067                           
  5068                           ;main.c: 18: float R, steinhart, displayTemp, displayTemp2;
  5069                           ;main.c: 20: char count = 11;
  5070  06CD  300B               	movlw	11
  5071  06CE  00E9               	movwf	??_main
  5072  06CF  0869               	movf	??_main,w
  5073  06D0  0021               	movlb	1	; select bank1
  5074  06D1  00DB               	movwf	main@count^(0+128)
  5075                           
  5076                           ;main.c: 22: char x = 0;
  5077  06D2  01DE               	clrf	main@x^(0+128)
  5078                           
  5079                           ;main.c: 24: uint16_t dutyCycle = 1023;
  5080  06D3  30FF               	movlw	255
  5081  06D4  00DC               	movwf	main@dutyCycle^(0+128)
  5082  06D5  3003               	movlw	3
  5083  06D6  00DD               	movwf	(main@dutyCycle^(0+128)+1)
  5084                           
  5085                           ;main.c: 26: PWM6_LoadDutyValue(dutyCycle);
  5086  06D7  085D               	movf	(main@dutyCycle+1)^(0+128),w
  5087  06D8  00F1               	movwf	PWM6_LoadDutyValue@dutyCycle+1
  5088  06D9  085C               	movf	main@dutyCycle^(0+128),w
  5089  06DA  00F0               	movwf	PWM6_LoadDutyValue@dutyCycle
  5090  06DB  318B  239F  3186   	fcall	_PWM6_LoadDutyValue
  5091                           
  5092                           ;main.c: 28: _delay((unsigned long)((300)*(1000000/4000.0)));
  5093  06DE  3062               	movlw	98
  5094  06DF  0020               	movlb	0	; select bank0
  5095  06E0  00EA               	movwf	??_main+1
  5096  06E1  3065               	movlw	101
  5097  06E2  00E9               	movwf	??_main
  5098  06E3                     u2977:	
  5099  06E3  0BE9               	decfsz	??_main,f
  5100  06E4  2EE3               	goto	u2977
  5101  06E5  0BEA               	decfsz	??_main+1,f
  5102  06E6  2EE3               	goto	u2977
  5103  06E7  3200               	nop2
  5104                           
  5105                           ;main.c: 30: LCD_Clear();
  5106  06E8  318B  2339  3186   	fcall	_LCD_Clear
  5107                           
  5108                           ;main.c: 57: LCD_Clear();
  5109  06EB  318B  2339  3186   	fcall	_LCD_Clear
  5110  06EE                     l2549:	
  5111                           ;main.c: 60: while (1)
  5112                           
  5113                           
  5114                           ;main.c: 61: {
  5115                           ;main.c: 62: PWM6_LoadDutyValue(dutyCycle);
  5116  06EE  0021               	movlb	1	; select bank1
  5117  06EF  085D               	movf	(main@dutyCycle+1)^(0+128),w
  5118  06F0  00F1               	movwf	PWM6_LoadDutyValue@dutyCycle+1
  5119  06F1  085C               	movf	main@dutyCycle^(0+128),w
  5120  06F2  00F0               	movwf	PWM6_LoadDutyValue@dutyCycle
  5121  06F3  318B  239F  3186   	fcall	_PWM6_LoadDutyValue
  5122                           
  5123                           ;main.c: 64: for(x=0;x<6;x++)
  5124  06F6  0021               	movlb	1	; select bank1
  5125  06F7  01DE               	clrf	main@x^(0+128)
  5126  06F8  3006               	movlw	6
  5127  06F9  025E               	subwf	main@x^(0+128),w
  5128  06FA  1803               	btfsc	3,0
  5129  06FB  2F1A               	goto	l2563
  5130  06FC                     l2557:	
  5131                           
  5132                           ;main.c: 65: {
  5133                           ;main.c: 66: analogs[x]=readAnalog(x);
  5134  06FC  085E               	movf	main@x^(0+128),w
  5135  06FD  0020               	movlb	0	; select bank0
  5136  06FE  00E9               	movwf	??_main
  5137  06FF  01EA               	clrf	??_main+1
  5138  0700  0869               	movf	??_main,w
  5139  0701  00A6               	movwf	readAnalog@channel
  5140  0702  086A               	movf	??_main+1,w
  5141  0703  00A7               	movwf	readAnalog@channel+1
  5142  0704  3184  2492  3186   	fcall	_readAnalog
  5143  0707  0021               	movlb	1	; select bank1
  5144  0708  355E               	lslf	main@x^(0+128),w
  5145  0709  3ECC               	addlw	(low (main@analogs| 0))& (0+255)
  5146  070A  0086               	movwf	6
  5147  070B  0187               	clrf	7
  5148  070C  0020               	movlb	0	; select bank0
  5149  070D  0826               	movf	?_readAnalog,w
  5150  070E  3FC0               	movwi [0]fsr1
  5151  070F  0827               	movf	?_readAnalog+1,w
  5152  0710  3FC1               	movwi [1]fsr1
  5153  0711  3001               	movlw	1
  5154  0712  00E9               	movwf	??_main
  5155  0713  0869               	movf	??_main,w
  5156  0714  0021               	movlb	1	; select bank1
  5157  0715  07DE               	addwf	main@x^(0+128),f
  5158  0716  3006               	movlw	6
  5159  0717  025E               	subwf	main@x^(0+128),w
  5160  0718  1C03               	skipc
  5161  0719  2EFC               	goto	l2557
  5162  071A                     l2563:	
  5163                           
  5164                           ;main.c: 67: }
  5165                           ;main.c: 69: if(count>10)
  5166  071A  300B               	movlw	11
  5167  071B  025B               	subwf	main@count^(0+128),w
  5168  071C  1C03               	skipc
  5169  071D  2F9F               	goto	l2599
  5170                           
  5171                           ;main.c: 70: {
  5172                           ;main.c: 71: { LCD_Set_Cursor(0,0); LCD_Write_String("Solar In");};
  5173  071E  01F3               	clrf	LCD_Set_Cursor@y
  5174  071F  3000               	movlw	0
  5175  0720  318D  256A  3186   	fcall	_LCD_Set_Cursor
  5176  0723  301B               	movlw	low (STR_1| (0+32768))
  5177  0724  00F5               	movwf	LCD_Write_String@a
  5178  0725  3090               	movlw	high (STR_1| (0+32768))
  5179  0726  00F6               	movwf	LCD_Write_String@a+1
  5180  0727  318B  23E5  3186   	fcall	_LCD_Write_String
  5181                           
  5182                           ;main.c: 72: { LCD_Set_Cursor(9,0); LCD_Write_Int((int)displayTemp,-1, 1, 0);};
  5183  072A  01F3               	clrf	LCD_Set_Cursor@y
  5184  072B  3009               	movlw	9
  5185  072C  318D  256A  3186   	fcall	_LCD_Set_Cursor
  5186  072F  0021               	movlb	1	; select bank1
  5187  0730  0858               	movf	main@displayTemp^(0+128),w
  5188  0731  00F0               	movwf	___fttol@f1
  5189  0732  0859               	movf	(main@displayTemp+1)^(0+128),w
  5190  0733  00F1               	movwf	___fttol@f1+1
  5191  0734  085A               	movf	(main@displayTemp+2)^(0+128),w
  5192  0735  00F2               	movwf	___fttol@f1+2
  5193  0736  3180  2041  3186   	fcall	___fttol
  5194  0739  0871               	movf	?___fttol+1,w
  5195  073A  0020               	movlb	0	; select bank0
  5196  073B  00A1               	movwf	LCD_Write_Int@value+1
  5197  073C  0870               	movf	?___fttol,w
  5198  073D  00A0               	movwf	LCD_Write_Int@value
  5199  073E  01A2               	clrf	LCD_Write_Int@fieldLength
  5200  073F  03A2               	decf	LCD_Write_Int@fieldLength,f
  5201  0740  01A3               	clrf	LCD_Write_Int@numPlaces
  5202  0741  0AA3               	incf	LCD_Write_Int@numPlaces,f
  5203  0742  01A4               	clrf	LCD_Write_Int@sign
  5204  0743  3182  22D1  3186   	fcall	_LCD_Write_Int
  5205                           
  5206                           ;main.c: 73: LCD_Write_Char(0);
  5207  0746  3000               	movlw	0
  5208  0747  318C  2498  3186   	fcall	_LCD_Write_Char
  5209                           
  5210                           ;main.c: 74: LCD_Write_Char('F');
  5211  074A  3046               	movlw	70
  5212  074B  318C  2498  3186   	fcall	_LCD_Write_Char
  5213                           
  5214                           ;main.c: 75: LCD_Write_Char(' ');
  5215  074E  3020               	movlw	32
  5216  074F  318C  2498  3186   	fcall	_LCD_Write_Char
  5217                           
  5218                           ;main.c: 77: { LCD_Set_Cursor(0,1); LCD_Write_Int(analogs[0],-1, 0, 0);};
  5219  0752  01F3               	clrf	LCD_Set_Cursor@y
  5220  0753  0AF3               	incf	LCD_Set_Cursor@y,f
  5221  0754  3000               	movlw	0
  5222  0755  318D  256A  3186   	fcall	_LCD_Set_Cursor
  5223  0758  0021               	movlb	1	; select bank1
  5224  0759  084D               	movf	(main@analogs+1)^(0+128),w
  5225  075A  0020               	movlb	0	; select bank0
  5226  075B  00A1               	movwf	LCD_Write_Int@value+1
  5227  075C  0021               	movlb	1	; select bank1
  5228  075D  084C               	movf	main@analogs^(0+128),w
  5229  075E  0020               	movlb	0	; select bank0
  5230  075F  00A0               	movwf	LCD_Write_Int@value
  5231  0760  01A2               	clrf	LCD_Write_Int@fieldLength
  5232  0761  03A2               	decf	LCD_Write_Int@fieldLength,f
  5233  0762  01A3               	clrf	LCD_Write_Int@numPlaces
  5234  0763  01A4               	clrf	LCD_Write_Int@sign
  5235  0764  3182  22D1  3186   	fcall	_LCD_Write_Int
  5236                           
  5237                           ;main.c: 78: LCD_Write_Char(' ');
  5238  0767  3020               	movlw	32
  5239  0768  318C  2498  3186   	fcall	_LCD_Write_Char
  5240                           
  5241                           ;main.c: 79: { LCD_Set_Cursor(6,1); LCD_Write_Int(analogs[1],-1, 0, 0);};
  5242  076B  01F3               	clrf	LCD_Set_Cursor@y
  5243  076C  0AF3               	incf	LCD_Set_Cursor@y,f
  5244  076D  3006               	movlw	6
  5245  076E  318D  256A  3186   	fcall	_LCD_Set_Cursor
  5246  0771  0021               	movlb	1	; select bank1
  5247  0772  084F               	movf	((main@analogs+1)^(0+128)+2),w
  5248  0773  0020               	movlb	0	; select bank0
  5249  0774  00A1               	movwf	LCD_Write_Int@value+1
  5250  0775  0021               	movlb	1	; select bank1
  5251  0776  084E               	movf	(main@analogs^(0+128)+2),w
  5252  0777  0020               	movlb	0	; select bank0
  5253  0778  00A0               	movwf	LCD_Write_Int@value
  5254  0779  01A2               	clrf	LCD_Write_Int@fieldLength
  5255  077A  03A2               	decf	LCD_Write_Int@fieldLength,f
  5256  077B  01A3               	clrf	LCD_Write_Int@numPlaces
  5257  077C  01A4               	clrf	LCD_Write_Int@sign
  5258  077D  3182  22D1  3186   	fcall	_LCD_Write_Int
  5259                           
  5260                           ;main.c: 80: LCD_Write_Char(' ');
  5261  0780  3020               	movlw	32
  5262  0781  318C  2498  3186   	fcall	_LCD_Write_Char
  5263                           
  5264                           ;main.c: 81: { LCD_Set_Cursor(11,1); LCD_Write_Int(analogs[2],-1, 0, 0);};
  5265  0784  01F3               	clrf	LCD_Set_Cursor@y
  5266  0785  0AF3               	incf	LCD_Set_Cursor@y,f
  5267  0786  300B               	movlw	11
  5268  0787  318D  256A  3186   	fcall	_LCD_Set_Cursor
  5269  078A  0021               	movlb	1	; select bank1
  5270  078B  0851               	movf	((main@analogs+1)^(0+128)+4),w
  5271  078C  0020               	movlb	0	; select bank0
  5272  078D  00A1               	movwf	LCD_Write_Int@value+1
  5273  078E  0021               	movlb	1	; select bank1
  5274  078F  0850               	movf	(main@analogs^(0+128)+4),w
  5275  0790  0020               	movlb	0	; select bank0
  5276  0791  00A0               	movwf	LCD_Write_Int@value
  5277  0792  01A2               	clrf	LCD_Write_Int@fieldLength
  5278  0793  03A2               	decf	LCD_Write_Int@fieldLength,f
  5279  0794  01A3               	clrf	LCD_Write_Int@numPlaces
  5280  0795  01A4               	clrf	LCD_Write_Int@sign
  5281  0796  3182  22D1  3186   	fcall	_LCD_Write_Int
  5282                           
  5283                           ;main.c: 82: LCD_Write_Char(' ');
  5284  0799  3020               	movlw	32
  5285  079A  318C  2498  3186   	fcall	_LCD_Write_Char
  5286                           
  5287                           ;main.c: 91: count=0;
  5288  079D  0021               	movlb	1	; select bank1
  5289  079E  01DB               	clrf	main@count^(0+128)
  5290  079F                     l2599:	
  5291                           
  5292                           ;main.c: 92: }
  5293                           ;main.c: 96: displayTemp = tempCalc(analogs[4]);
  5294  079F  0855               	movf	((main@analogs+1)^(0+128)+8),w
  5295  07A0  0020               	movlb	0	; select bank0
  5296  07A1  00DE               	movwf	tempCalc@analogValue+1
  5297  07A2  0021               	movlb	1	; select bank1
  5298  07A3  0854               	movf	(main@analogs^(0+128)+8),w
  5299  07A4  0020               	movlb	0	; select bank0
  5300  07A5  00DD               	movwf	tempCalc@analogValue
  5301  07A6  3185  25A6  3186   	fcall	_tempCalc
  5302  07A9  0020               	movlb	0	; select bank0
  5303  07AA  085D               	movf	?_tempCalc,w
  5304  07AB  0021               	movlb	1	; select bank1
  5305  07AC  00D8               	movwf	main@displayTemp^(0+128)
  5306  07AD  0020               	movlb	0	; select bank0
  5307  07AE  085E               	movf	?_tempCalc+1,w
  5308  07AF  0021               	movlb	1	; select bank1
  5309  07B0  00D9               	movwf	(main@displayTemp+1)^(0+128)
  5310  07B1  0020               	movlb	0	; select bank0
  5311  07B2  085F               	movf	?_tempCalc+2,w
  5312  07B3  0021               	movlb	1	; select bank1
  5313  07B4  00DA               	movwf	(main@displayTemp+2)^(0+128)
  5314                           
  5315                           ;main.c: 98: displayTemp2 = tempCalc(analogs[5]);
  5316  07B5  0857               	movf	((main@analogs+1)^(0+128)+10),w
  5317  07B6  0020               	movlb	0	; select bank0
  5318  07B7  00DE               	movwf	tempCalc@analogValue+1
  5319  07B8  0021               	movlb	1	; select bank1
  5320  07B9  0856               	movf	(main@analogs^(0+128)+10),w
  5321  07BA  0020               	movlb	0	; select bank0
  5322  07BB  00DD               	movwf	tempCalc@analogValue
  5323  07BC  3185  25A6  3186   	fcall	_tempCalc
  5324  07BF  0020               	movlb	0	; select bank0
  5325  07C0  085D               	movf	?_tempCalc,w
  5326  07C1  0021               	movlb	1	; select bank1
  5327  07C2  00C9               	movwf	main@displayTemp2^(0+128)
  5328  07C3  0020               	movlb	0	; select bank0
  5329  07C4  085E               	movf	?_tempCalc+1,w
  5330  07C5  0021               	movlb	1	; select bank1
  5331  07C6  00CA               	movwf	(main@displayTemp2+1)^(0+128)
  5332  07C7  0020               	movlb	0	; select bank0
  5333  07C8  085F               	movf	?_tempCalc+2,w
  5334  07C9  0021               	movlb	1	; select bank1
  5335  07CA  00CB               	movwf	(main@displayTemp2+2)^(0+128)
  5336                           
  5337                           ;main.c: 128: count+=1;
  5338  07CB  3001               	movlw	1
  5339  07CC  0020               	movlb	0	; select bank0
  5340  07CD  00E9               	movwf	??_main
  5341  07CE  0869               	movf	??_main,w
  5342  07CF  0021               	movlb	1	; select bank1
  5343  07D0  07DB               	addwf	main@count^(0+128),f
  5344  07D1  2EEE               	goto	l2549
  5345  07D2                     __end_of_main:	
  5346                           
  5347                           	psect	text1
  5348  05A6                     __ptext1:	
  5349 ;; *************** function _tempCalc *****************
  5350 ;; Defined at:
  5351 ;;		line 4 in file "tempCalc.c"
  5352 ;; Parameters:    Size  Location     Type
  5353 ;;  analogValue     2   61[BANK0 ] int 
  5354 ;; Auto vars:     Size  Location     Type
  5355 ;;  steinhart       3   70[BANK0 ] float 
  5356 ;;  R               3   64[BANK0 ] float 
  5357 ;; Return value:  Size  Location     Type
  5358 ;;                  3   61[BANK0 ] float 
  5359 ;; Registers used:
  5360 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5361 ;; Tracked objects:
  5362 ;;		On entry : 0/0
  5363 ;;		On exit  : 0/0
  5364 ;;		Unchanged: 0/0
  5365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5366 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5367 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5369 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5370 ;;Total ram usage:       12 bytes
  5371 ;; Hardware stack levels used:    1
  5372 ;; Hardware stack levels required when called:    4
  5373 ;; This function calls:
  5374 ;;		___awtoft
  5375 ;;		___ftadd
  5376 ;;		___ftdiv
  5377 ;;		___ftmul
  5378 ;;		___ftsub
  5379 ;;		_log
  5380 ;; This function is called by:
  5381 ;;		_main
  5382 ;; This function uses a non-reentrant model
  5383 ;;
  5384                           
  5385                           
  5386                           ;psect for function _tempCalc
  5387  05A6                     _tempCalc:	
  5388                           
  5389                           ;tempCalc.c: 6: float R, steinhart;
  5390                           ;tempCalc.c: 8: R = 10020/(1023/(float)analogValue - 1);
  5391                           
  5392                           ;incstack = 0
  5393                           ; Regs used in _tempCalc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5394  05A6  3000               	movlw	0
  5395  05A7  0020               	movlb	0	; select bank0
  5396  05A8  00C0               	movwf	___ftadd@f1
  5397  05A9  3080               	movlw	128
  5398  05AA  00C1               	movwf	___ftadd@f1+1
  5399  05AB  30BF               	movlw	191
  5400  05AC  00C2               	movwf	___ftadd@f1+2
  5401  05AD  085E               	movf	tempCalc@analogValue+1,w
  5402  05AE  00F9               	movwf	___awtoft@c+1
  5403  05AF  085D               	movf	tempCalc@analogValue,w
  5404  05B0  00F8               	movwf	___awtoft@c
  5405  05B1  318C  2452  3185   	fcall	___awtoft
  5406  05B4  0878               	movf	?___awtoft,w
  5407  05B5  0020               	movlb	0	; select bank0
  5408  05B6  00B0               	movwf	___ftdiv@f2
  5409  05B7  0879               	movf	?___awtoft+1,w
  5410  05B8  00B1               	movwf	___ftdiv@f2+1
  5411  05B9  087A               	movf	?___awtoft+2,w
  5412  05BA  00B2               	movwf	___ftdiv@f2+2
  5413  05BB  30C0               	movlw	192
  5414  05BC  00B3               	movwf	___ftdiv@f1
  5415  05BD  307F               	movlw	127
  5416  05BE  00B4               	movwf	___ftdiv@f1+1
  5417  05BF  3044               	movlw	68
  5418  05C0  00B5               	movwf	___ftdiv@f1+2
  5419  05C1  3180  20C7  3185   	fcall	___ftdiv
  5420  05C4  0020               	movlb	0	; select bank0
  5421  05C5  0830               	movf	?___ftdiv,w
  5422  05C6  00C3               	movwf	___ftadd@f2
  5423  05C7  0831               	movf	?___ftdiv+1,w
  5424  05C8  00C4               	movwf	___ftadd@f2+1
  5425  05C9  0832               	movf	?___ftdiv+2,w
  5426  05CA  00C5               	movwf	___ftadd@f2+2
  5427  05CB  3183  239C  3185   	fcall	___ftadd
  5428  05CE  0020               	movlb	0	; select bank0
  5429  05CF  0840               	movf	?___ftadd,w
  5430  05D0  00E3               	movwf	_tempCalc$941
  5431  05D1  0841               	movf	?___ftadd+1,w
  5432  05D2  00E4               	movwf	_tempCalc$941+1
  5433  05D3  0842               	movf	?___ftadd+2,w
  5434  05D4  00E5               	movwf	_tempCalc$941+2
  5435                           
  5436                           ;tempCalc.c: 6: float R, steinhart;
  5437                           ;tempCalc.c: 8: R = 10020/(1023/(float)analogValue - 1);
  5438  05D5  0863               	movf	_tempCalc$941,w
  5439  05D6  00B0               	movwf	___ftdiv@f2
  5440  05D7  0864               	movf	_tempCalc$941+1,w
  5441  05D8  00B1               	movwf	___ftdiv@f2+1
  5442  05D9  0865               	movf	_tempCalc$941+2,w
  5443  05DA  00B2               	movwf	___ftdiv@f2+2
  5444  05DB  3090               	movlw	144
  5445  05DC  00B3               	movwf	___ftdiv@f1
  5446  05DD  301C               	movlw	28
  5447  05DE  00B4               	movwf	___ftdiv@f1+1
  5448  05DF  3046               	movlw	70
  5449  05E0  00B5               	movwf	___ftdiv@f1+2
  5450  05E1  3180  20C7  3185   	fcall	___ftdiv
  5451  05E4  0020               	movlb	0	; select bank0
  5452  05E5  0830               	movf	?___ftdiv,w
  5453  05E6  00E0               	movwf	tempCalc@R
  5454  05E7  0831               	movf	?___ftdiv+1,w
  5455  05E8  00E1               	movwf	tempCalc@R+1
  5456  05E9  0832               	movf	?___ftdiv+2,w
  5457  05EA  00E2               	movwf	tempCalc@R+2
  5458                           
  5459                           ;tempCalc.c: 10: steinhart = R /10061;
  5460  05EB  3034               	movlw	52
  5461  05EC  00B0               	movwf	___ftdiv@f2
  5462  05ED  301D               	movlw	29
  5463  05EE  00B1               	movwf	___ftdiv@f2+1
  5464  05EF  3046               	movlw	70
  5465  05F0  00B2               	movwf	___ftdiv@f2+2
  5466  05F1  0860               	movf	tempCalc@R,w
  5467  05F2  00B3               	movwf	___ftdiv@f1
  5468  05F3  0861               	movf	tempCalc@R+1,w
  5469  05F4  00B4               	movwf	___ftdiv@f1+1
  5470  05F5  0862               	movf	tempCalc@R+2,w
  5471  05F6  00B5               	movwf	___ftdiv@f1+2
  5472  05F7  3180  20C7  3185   	fcall	___ftdiv
  5473  05FA  0020               	movlb	0	; select bank0
  5474  05FB  0830               	movf	?___ftdiv,w
  5475  05FC  00E6               	movwf	tempCalc@steinhart
  5476  05FD  0831               	movf	?___ftdiv+1,w
  5477  05FE  00E7               	movwf	tempCalc@steinhart+1
  5478  05FF  0832               	movf	?___ftdiv+2,w
  5479  0600  00E8               	movwf	tempCalc@steinhart+2
  5480                           
  5481                           ;tempCalc.c: 11: steinhart = log(steinhart);
  5482  0601  0866               	movf	tempCalc@steinhart,w
  5483  0602  00D7               	movwf	log@x
  5484  0603  0867               	movf	tempCalc@steinhart+1,w
  5485  0604  00D8               	movwf	log@x+1
  5486  0605  0868               	movf	tempCalc@steinhart+2,w
  5487  0606  00D9               	movwf	log@x+2
  5488  0607  3181  2170  3185   	fcall	_log
  5489  060A  0020               	movlb	0	; select bank0
  5490  060B  0857               	movf	?_log,w
  5491  060C  00E6               	movwf	tempCalc@steinhart
  5492  060D  0858               	movf	?_log+1,w
  5493  060E  00E7               	movwf	tempCalc@steinhart+1
  5494  060F  0859               	movf	?_log+2,w
  5495  0610  00E8               	movwf	tempCalc@steinhart+2
  5496                           
  5497                           ;tempCalc.c: 12: steinhart /= 3995;
  5498  0611  30B0               	movlw	176
  5499  0612  00B0               	movwf	___ftdiv@f2
  5500  0613  3079               	movlw	121
  5501  0614  00B1               	movwf	___ftdiv@f2+1
  5502  0615  3045               	movlw	69
  5503  0616  00B2               	movwf	___ftdiv@f2+2
  5504  0617  0866               	movf	tempCalc@steinhart,w
  5505  0618  00B3               	movwf	___ftdiv@f1
  5506  0619  0867               	movf	tempCalc@steinhart+1,w
  5507  061A  00B4               	movwf	___ftdiv@f1+1
  5508  061B  0868               	movf	tempCalc@steinhart+2,w
  5509  061C  00B5               	movwf	___ftdiv@f1+2
  5510  061D  3180  20C7  3185   	fcall	___ftdiv
  5511  0620  0020               	movlb	0	; select bank0
  5512  0621  0830               	movf	?___ftdiv,w
  5513  0622  00E6               	movwf	tempCalc@steinhart
  5514  0623  0831               	movf	?___ftdiv+1,w
  5515  0624  00E7               	movwf	tempCalc@steinhart+1
  5516  0625  0832               	movf	?___ftdiv+2,w
  5517  0626  00E8               	movwf	tempCalc@steinhart+2
  5518                           
  5519                           ;tempCalc.c: 13: steinhart += 1.0 / (25 + 273.15);
  5520  0627  30CF               	movlw	207
  5521  0628  00C0               	movwf	___ftadd@f1
  5522  0629  305B               	movlw	91
  5523  062A  00C1               	movwf	___ftadd@f1+1
  5524  062B  303B               	movlw	59
  5525  062C  00C2               	movwf	___ftadd@f1+2
  5526  062D  0866               	movf	tempCalc@steinhart,w
  5527  062E  00C3               	movwf	___ftadd@f2
  5528  062F  0867               	movf	tempCalc@steinhart+1,w
  5529  0630  00C4               	movwf	___ftadd@f2+1
  5530  0631  0868               	movf	tempCalc@steinhart+2,w
  5531  0632  00C5               	movwf	___ftadd@f2+2
  5532  0633  3183  239C  3185   	fcall	___ftadd
  5533  0636  0020               	movlb	0	; select bank0
  5534  0637  0840               	movf	?___ftadd,w
  5535  0638  00E6               	movwf	tempCalc@steinhart
  5536  0639  0841               	movf	?___ftadd+1,w
  5537  063A  00E7               	movwf	tempCalc@steinhart+1
  5538  063B  0842               	movf	?___ftadd+2,w
  5539  063C  00E8               	movwf	tempCalc@steinhart+2
  5540                           
  5541                           ;tempCalc.c: 14: steinhart = 1.0 / steinhart;
  5542  063D  0866               	movf	tempCalc@steinhart,w
  5543  063E  00B0               	movwf	___ftdiv@f2
  5544  063F  0867               	movf	tempCalc@steinhart+1,w
  5545  0640  00B1               	movwf	___ftdiv@f2+1
  5546  0641  0868               	movf	tempCalc@steinhart+2,w
  5547  0642  00B2               	movwf	___ftdiv@f2+2
  5548  0643  3000               	movlw	0
  5549  0644  00B3               	movwf	___ftdiv@f1
  5550  0645  3080               	movlw	128
  5551  0646  00B4               	movwf	___ftdiv@f1+1
  5552  0647  303F               	movlw	63
  5553  0648  00B5               	movwf	___ftdiv@f1+2
  5554  0649  3180  20C7  3185   	fcall	___ftdiv
  5555  064C  0020               	movlb	0	; select bank0
  5556  064D  0830               	movf	?___ftdiv,w
  5557  064E  00E6               	movwf	tempCalc@steinhart
  5558  064F  0831               	movf	?___ftdiv+1,w
  5559  0650  00E7               	movwf	tempCalc@steinhart+1
  5560  0651  0832               	movf	?___ftdiv+2,w
  5561  0652  00E8               	movwf	tempCalc@steinhart+2
  5562                           
  5563                           ;tempCalc.c: 15: steinhart -= 273.15;
  5564  0653  3093               	movlw	147
  5565  0654  00CD               	movwf	___ftsub@f2
  5566  0655  3088               	movlw	136
  5567  0656  00CE               	movwf	___ftsub@f2+1
  5568  0657  3043               	movlw	67
  5569  0658  00CF               	movwf	___ftsub@f2+2
  5570  0659  0866               	movf	tempCalc@steinhart,w
  5571  065A  00D0               	movwf	___ftsub@f1
  5572  065B  0867               	movf	tempCalc@steinhart+1,w
  5573  065C  00D1               	movwf	___ftsub@f1+1
  5574  065D  0868               	movf	tempCalc@steinhart+2,w
  5575  065E  00D2               	movwf	___ftsub@f1+2
  5576  065F  318C  2434  3185   	fcall	___ftsub
  5577  0662  0020               	movlb	0	; select bank0
  5578  0663  084D               	movf	?___ftsub,w
  5579  0664  00E6               	movwf	tempCalc@steinhart
  5580  0665  084E               	movf	?___ftsub+1,w
  5581  0666  00E7               	movwf	tempCalc@steinhart+1
  5582  0667  084F               	movf	?___ftsub+2,w
  5583  0668  00E8               	movwf	tempCalc@steinhart+2
  5584                           
  5585                           ;tempCalc.c: 17: steinhart*=10;
  5586  0669  3000               	movlw	0
  5587  066A  00A0               	movwf	___ftmul@f1
  5588  066B  3020               	movlw	32
  5589  066C  00A1               	movwf	___ftmul@f1+1
  5590  066D  3041               	movlw	65
  5591  066E  00A2               	movwf	___ftmul@f1+2
  5592  066F  0866               	movf	tempCalc@steinhart,w
  5593  0670  00A3               	movwf	___ftmul@f2
  5594  0671  0867               	movf	tempCalc@steinhart+1,w
  5595  0672  00A4               	movwf	___ftmul@f2+1
  5596  0673  0868               	movf	tempCalc@steinhart+2,w
  5597  0674  00A5               	movwf	___ftmul@f2+2
  5598  0675  3182  221D  3185   	fcall	___ftmul
  5599  0678  0020               	movlb	0	; select bank0
  5600  0679  0820               	movf	?___ftmul,w
  5601  067A  00E6               	movwf	tempCalc@steinhart
  5602  067B  0821               	movf	?___ftmul+1,w
  5603  067C  00E7               	movwf	tempCalc@steinhart+1
  5604  067D  0822               	movf	?___ftmul+2,w
  5605  067E  00E8               	movwf	tempCalc@steinhart+2
  5606                           
  5607                           ;tempCalc.c: 19: steinhart = steinhart*9/5+320;
  5608  067F  3000               	movlw	0
  5609  0680  00C0               	movwf	___ftadd@f1
  5610  0681  30A0               	movlw	160
  5611  0682  00C1               	movwf	___ftadd@f1+1
  5612  0683  3043               	movlw	67
  5613  0684  00C2               	movwf	___ftadd@f1+2
  5614  0685  3000               	movlw	0
  5615  0686  00B0               	movwf	___ftdiv@f2
  5616  0687  30A0               	movlw	160
  5617  0688  00B1               	movwf	___ftdiv@f2+1
  5618  0689  3040               	movlw	64
  5619  068A  00B2               	movwf	___ftdiv@f2+2
  5620  068B  3000               	movlw	0
  5621  068C  00A0               	movwf	___ftmul@f1
  5622  068D  3010               	movlw	16
  5623  068E  00A1               	movwf	___ftmul@f1+1
  5624  068F  3041               	movlw	65
  5625  0690  00A2               	movwf	___ftmul@f1+2
  5626  0691  0866               	movf	tempCalc@steinhart,w
  5627  0692  00A3               	movwf	___ftmul@f2
  5628  0693  0867               	movf	tempCalc@steinhart+1,w
  5629  0694  00A4               	movwf	___ftmul@f2+1
  5630  0695  0868               	movf	tempCalc@steinhart+2,w
  5631  0696  00A5               	movwf	___ftmul@f2+2
  5632  0697  3182  221D  3185   	fcall	___ftmul
  5633  069A  0020               	movlb	0	; select bank0
  5634  069B  0820               	movf	?___ftmul,w
  5635  069C  00B3               	movwf	___ftdiv@f1
  5636  069D  0821               	movf	?___ftmul+1,w
  5637  069E  00B4               	movwf	___ftdiv@f1+1
  5638  069F  0822               	movf	?___ftmul+2,w
  5639  06A0  00B5               	movwf	___ftdiv@f1+2
  5640  06A1  3180  20C7  3185   	fcall	___ftdiv
  5641  06A4  0020               	movlb	0	; select bank0
  5642  06A5  0830               	movf	?___ftdiv,w
  5643  06A6  00C3               	movwf	___ftadd@f2
  5644  06A7  0831               	movf	?___ftdiv+1,w
  5645  06A8  00C4               	movwf	___ftadd@f2+1
  5646  06A9  0832               	movf	?___ftdiv+2,w
  5647  06AA  00C5               	movwf	___ftadd@f2+2
  5648  06AB  3183  239C         	fcall	___ftadd
  5649  06AD  0020               	movlb	0	; select bank0
  5650  06AE  0840               	movf	?___ftadd,w
  5651  06AF  00E6               	movwf	tempCalc@steinhart
  5652  06B0  0841               	movf	?___ftadd+1,w
  5653  06B1  00E7               	movwf	tempCalc@steinhart+1
  5654  06B2  0842               	movf	?___ftadd+2,w
  5655  06B3  00E8               	movwf	tempCalc@steinhart+2
  5656                           
  5657                           ;tempCalc.c: 21: return steinhart;
  5658  06B4  0866               	movf	tempCalc@steinhart,w
  5659  06B5  00DD               	movwf	?_tempCalc
  5660  06B6  0867               	movf	tempCalc@steinhart+1,w
  5661  06B7  00DE               	movwf	?_tempCalc+1
  5662  06B8  0868               	movf	tempCalc@steinhart+2,w
  5663  06B9  00DF               	movwf	?_tempCalc+2
  5664  06BA  0008               	return
  5665  06BB                     __end_of_tempCalc:	
  5666                           
  5667                           	psect	text2
  5668  0170                     __ptext2:	
  5669 ;; *************** function _log *****************
  5670 ;; Defined at:
  5671 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\log.c"
  5672 ;; Parameters:    Size  Location     Type
  5673 ;;  x               3   55[BANK0 ] float 
  5674 ;; Auto vars:     Size  Location     Type
  5675 ;;  exponent        2   59[BANK0 ] int 
  5676 ;; Return value:  Size  Location     Type
  5677 ;;                  3   55[BANK0 ] int 
  5678 ;; Registers used:
  5679 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5680 ;; Tracked objects:
  5681 ;;		On entry : 0/0
  5682 ;;		On exit  : 0/0
  5683 ;;		Unchanged: 0/0
  5684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5685 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5686 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5687 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5688 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5689 ;;Total ram usage:        6 bytes
  5690 ;; Hardware stack levels used:    1
  5691 ;; Hardware stack levels required when called:    3
  5692 ;; This function calls:
  5693 ;;		___awtoft
  5694 ;;		___ftadd
  5695 ;;		___ftge
  5696 ;;		___ftmul
  5697 ;;		_eval_poly
  5698 ;;		_frexp
  5699 ;; This function is called by:
  5700 ;;		_tempCalc
  5701 ;; This function uses a non-reentrant model
  5702 ;;
  5703                           
  5704                           
  5705                           ;psect for function _log
  5706  0170                     _log:	
  5707                           
  5708                           ;incstack = 0
  5709                           ; Regs used in _log: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5710  0170  0020               	movlb	0	; select bank0
  5711  0171  0857               	movf	log@x,w
  5712  0172  00F0               	movwf	___ftge@ff1
  5713  0173  0858               	movf	log@x+1,w
  5714  0174  00F1               	movwf	___ftge@ff1+1
  5715  0175  0859               	movf	log@x+2,w
  5716  0176  00F2               	movwf	___ftge@ff1+2
  5717  0177  3000               	movlw	0
  5718  0178  00F3               	movwf	___ftge@ff2
  5719  0179  3000               	movlw	0
  5720  017A  00F4               	movwf	___ftge@ff2+1
  5721  017B  3000               	movlw	0
  5722  017C  00F5               	movwf	___ftge@ff2+2
  5723  017D  318D  252F  3181   	fcall	___ftge
  5724  0180  1803               	btfsc	3,0
  5725  0181  298E               	goto	l2145
  5726  0182  3021               	movlw	33
  5727  0183  0020               	movlb	0	; select bank0
  5728  0184  00EB               	movwf	_errno
  5729  0185  3000               	movlw	0
  5730  0186  00EC               	movwf	_errno+1
  5731  0187  3000               	movlw	0
  5732  0188  00D7               	movwf	?_log
  5733  0189  3000               	movlw	0
  5734  018A  00D8               	movwf	?_log+1
  5735  018B  3000               	movlw	0
  5736  018C  00D9               	movwf	?_log+2
  5737  018D  0008               	return
  5738  018E                     l2145:	
  5739  018E  0020               	movlb	0	; select bank0
  5740  018F  0859               	movf	log@x+2,w
  5741  0190  0458               	iorwf	log@x+1,w
  5742  0191  0457               	iorwf	log@x,w
  5743  0192  1D03               	skipz
  5744  0193  299F               	goto	l2151
  5745  0194  3022               	movlw	34
  5746  0195  00EB               	movwf	_errno
  5747  0196  3000               	movlw	0
  5748  0197  00EC               	movwf	_errno+1
  5749  0198  3000               	movlw	0
  5750  0199  00D7               	movwf	?_log
  5751  019A  3000               	movlw	0
  5752  019B  00D8               	movwf	?_log+1
  5753  019C  3000               	movlw	0
  5754  019D  00D9               	movwf	?_log+2
  5755  019E  0008               	return
  5756  019F                     l2151:	
  5757  019F  3000               	movlw	0
  5758  01A0  00C0               	movwf	___ftadd@f1
  5759  01A1  3080               	movlw	128
  5760  01A2  00C1               	movwf	___ftadd@f1+1
  5761  01A3  30BF               	movlw	191
  5762  01A4  00C2               	movwf	___ftadd@f1+2
  5763  01A5  3000               	movlw	0
  5764  01A6  00A0               	movwf	___ftmul@f1
  5765  01A7  3000               	movlw	0
  5766  01A8  00A1               	movwf	___ftmul@f1+1
  5767  01A9  3040               	movlw	64
  5768  01AA  00A2               	movwf	___ftmul@f1+2
  5769  01AB  305B               	movlw	(low (log@exponent| 0))& (0+255)
  5770  01AC  00DA               	movwf	??_log
  5771  01AD  085A               	movf	??_log,w
  5772  01AE  00F3               	movwf	frexp@eptr
  5773  01AF  0857               	movf	log@x,w
  5774  01B0  00F0               	movwf	frexp@value
  5775  01B1  0858               	movf	log@x+1,w
  5776  01B2  00F1               	movwf	frexp@value+1
  5777  01B3  0859               	movf	log@x+2,w
  5778  01B4  00F2               	movwf	frexp@value+2
  5779  01B5  3180  2006  3181   	fcall	_frexp
  5780  01B8  0870               	movf	?_frexp,w
  5781  01B9  0020               	movlb	0	; select bank0
  5782  01BA  00A3               	movwf	___ftmul@f2
  5783  01BB  0871               	movf	?_frexp+1,w
  5784  01BC  00A4               	movwf	___ftmul@f2+1
  5785  01BD  0872               	movf	?_frexp+2,w
  5786  01BE  00A5               	movwf	___ftmul@f2+2
  5787  01BF  3182  221D  3181   	fcall	___ftmul
  5788  01C2  0020               	movlb	0	; select bank0
  5789  01C3  0820               	movf	?___ftmul,w
  5790  01C4  00C3               	movwf	___ftadd@f2
  5791  01C5  0821               	movf	?___ftmul+1,w
  5792  01C6  00C4               	movwf	___ftadd@f2+1
  5793  01C7  0822               	movf	?___ftmul+2,w
  5794  01C8  00C5               	movwf	___ftadd@f2+2
  5795  01C9  3183  239C  3181   	fcall	___ftadd
  5796  01CC  0020               	movlb	0	; select bank0
  5797  01CD  0840               	movf	?___ftadd,w
  5798  01CE  00D7               	movwf	log@x
  5799  01CF  0841               	movf	?___ftadd+1,w
  5800  01D0  00D8               	movwf	log@x+1
  5801  01D1  0842               	movf	?___ftadd+2,w
  5802  01D2  00D9               	movwf	log@x+2
  5803  01D3  30FF               	movlw	255
  5804  01D4  07DB               	addwf	log@exponent,f
  5805  01D5  30FF               	movlw	255
  5806  01D6  3DDC               	addwfc	log@exponent+1,f
  5807  01D7  0857               	movf	log@x,w
  5808  01D8  00CD               	movwf	eval_poly@x
  5809  01D9  0858               	movf	log@x+1,w
  5810  01DA  00CE               	movwf	eval_poly@x+1
  5811  01DB  0859               	movf	log@x+2,w
  5812  01DC  00CF               	movwf	eval_poly@x+2
  5813  01DD  3000               	movlw	low (log@coeff| (0+32768))
  5814  01DE  00D0               	movwf	eval_poly@d
  5815  01DF  3090               	movlw	high (log@coeff| (0+32768))
  5816  01E0  00D1               	movwf	eval_poly@d+1
  5817  01E1  3008               	movlw	8
  5818  01E2  00D2               	movwf	eval_poly@n
  5819  01E3  3000               	movlw	0
  5820  01E4  00D3               	movwf	eval_poly@n+1
  5821  01E5  318E  263F  3181   	fcall	_eval_poly
  5822  01E8  0020               	movlb	0	; select bank0
  5823  01E9  084D               	movf	?_eval_poly,w
  5824  01EA  00D7               	movwf	log@x
  5825  01EB  084E               	movf	?_eval_poly+1,w
  5826  01EC  00D8               	movwf	log@x+1
  5827  01ED  084F               	movf	?_eval_poly+2,w
  5828  01EE  00D9               	movwf	log@x+2
  5829  01EF  0857               	movf	log@x,w
  5830  01F0  00C0               	movwf	___ftadd@f1
  5831  01F1  0858               	movf	log@x+1,w
  5832  01F2  00C1               	movwf	___ftadd@f1+1
  5833  01F3  0859               	movf	log@x+2,w
  5834  01F4  00C2               	movwf	___ftadd@f1+2
  5835  01F5  3072               	movlw	114
  5836  01F6  00A0               	movwf	___ftmul@f1
  5837  01F7  3031               	movlw	49
  5838  01F8  00A1               	movwf	___ftmul@f1+1
  5839  01F9  303F               	movlw	63
  5840  01FA  00A2               	movwf	___ftmul@f1+2
  5841  01FB  085C               	movf	log@exponent+1,w
  5842  01FC  00F9               	movwf	___awtoft@c+1
  5843  01FD  085B               	movf	log@exponent,w
  5844  01FE  00F8               	movwf	___awtoft@c
  5845  01FF  318C  2452  3181   	fcall	___awtoft
  5846  0202  0878               	movf	?___awtoft,w
  5847  0203  0020               	movlb	0	; select bank0
  5848  0204  00A3               	movwf	___ftmul@f2
  5849  0205  0879               	movf	?___awtoft+1,w
  5850  0206  00A4               	movwf	___ftmul@f2+1
  5851  0207  087A               	movf	?___awtoft+2,w
  5852  0208  00A5               	movwf	___ftmul@f2+2
  5853  0209  3182  221D  3181   	fcall	___ftmul
  5854  020C  0020               	movlb	0	; select bank0
  5855  020D  0820               	movf	?___ftmul,w
  5856  020E  00C3               	movwf	___ftadd@f2
  5857  020F  0821               	movf	?___ftmul+1,w
  5858  0210  00C4               	movwf	___ftadd@f2+1
  5859  0211  0822               	movf	?___ftmul+2,w
  5860  0212  00C5               	movwf	___ftadd@f2+2
  5861  0213  3183  239C         	fcall	___ftadd
  5862  0215  0020               	movlb	0	; select bank0
  5863  0216  0840               	movf	?___ftadd,w
  5864  0217  00D7               	movwf	?_log
  5865  0218  0841               	movf	?___ftadd+1,w
  5866  0219  00D8               	movwf	?_log+1
  5867  021A  0842               	movf	?___ftadd+2,w
  5868  021B  00D9               	movwf	?_log+2
  5869  021C  0008               	return
  5870  021D                     __end_of_log:	
  5871                           
  5872                           	psect	text3
  5873  0006                     __ptext3:	
  5874 ;; *************** function _frexp *****************
  5875 ;; Defined at:
  5876 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\frexp.c"
  5877 ;; Parameters:    Size  Location     Type
  5878 ;;  value           3    0[COMMON] int 
  5879 ;;  eptr            1    3[COMMON] PTR int 
  5880 ;;		 -> log@exponent(2), 
  5881 ;; Auto vars:     Size  Location     Type
  5882 ;;		None
  5883 ;; Return value:  Size  Location     Type
  5884 ;;                  3    0[COMMON] PTR int 
  5885 ;; Registers used:
  5886 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5887 ;; Tracked objects:
  5888 ;;		On entry : 0/0
  5889 ;;		On exit  : 0/0
  5890 ;;		Unchanged: 0/0
  5891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5892 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5894 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5895 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5896 ;;Total ram usage:        6 bytes
  5897 ;; Hardware stack levels used:    1
  5898 ;; This function calls:
  5899 ;;		Nothing
  5900 ;; This function is called by:
  5901 ;;		_log
  5902 ;; This function uses a non-reentrant model
  5903 ;;
  5904                           
  5905                           
  5906                           ;psect for function _frexp
  5907  0006                     _frexp:	
  5908                           
  5909                           ;incstack = 0
  5910                           ; Regs used in _frexp: [wreg+fsr1l+fsr1h+status,2+status,0]
  5911  0006  0872               	movf	frexp@value+2,w
  5912  0007  0471               	iorwf	frexp@value+1,w
  5913  0008  0470               	iorwf	frexp@value,w
  5914  0009  1D03               	skipz
  5915  000A  2818               	goto	l1961
  5916  000B  0873               	movf	frexp@eptr,w
  5917  000C  0086               	movwf	6
  5918  000D  0187               	clrf	7
  5919  000E  3000               	movlw	0
  5920  000F  3FC0               	movwi [0]fsr1
  5921  0010  3FC1               	movwi [1]fsr1
  5922  0011  3000               	movlw	0
  5923  0012  00F0               	movwf	?_frexp
  5924  0013  3000               	movlw	0
  5925  0014  00F1               	movwf	?_frexp+1
  5926  0015  3000               	movlw	0
  5927  0016  00F2               	movwf	?_frexp+2
  5928  0017  0008               	return
  5929  0018                     l1961:	
  5930  0018  0872               	movf	frexp@value+2,w
  5931  0019  397F               	andlw	127
  5932  001A  00F4               	movwf	??_frexp
  5933  001B  01F5               	clrf	??_frexp+1
  5934  001C  35F4               	lslf	??_frexp,f
  5935  001D  0DF5               	rlf	??_frexp+1,f
  5936  001E  0873               	movf	frexp@eptr,w
  5937  001F  0086               	movwf	6
  5938  0020  0187               	clrf	7
  5939  0021  0874               	movf	??_frexp,w
  5940  0022  3FC0               	movwi [0]fsr1
  5941  0023  0875               	movf	??_frexp+1,w
  5942  0024  3FC1               	movwi [1]fsr1
  5943  0025  0D71               	rlf	frexp@value+1,w
  5944  0026  0D71               	rlf	frexp@value+1,w
  5945  0027  3901               	andlw	1
  5946  0028  00F4               	movwf	??_frexp
  5947  0029  01F5               	clrf	??_frexp+1
  5948  002A  0873               	movf	frexp@eptr,w
  5949  002B  0086               	movwf	6
  5950  002C  0187               	clrf	7
  5951  002D  0874               	movf	??_frexp,w
  5952  002E  0481               	iorwf	1,f
  5953  002F  3141               	addfsr 1,1
  5954  0030  0875               	movf	??_frexp+1,w
  5955  0031  0481               	iorwf	1,f
  5956  0032  0873               	movf	frexp@eptr,w
  5957  0033  0086               	movwf	6
  5958  0034  0187               	clrf	7
  5959  0035  3082               	movlw	130
  5960  0036  0781               	addwf	1,f
  5961  0037  3141               	addfsr 1,1
  5962  0038  30FF               	movlw	255
  5963  0039  3D81               	addwfc	1,f
  5964  003A  317F               	addfsr 1,-1
  5965  003B  0872               	movf	frexp@value+2,w
  5966  003C  3980               	andlw	-128
  5967  003D  383F               	iorlw	63
  5968  003E  00F2               	movwf	frexp@value+2
  5969  003F  13F1               	bcf	frexp@value+1,7
  5970  0040  0008               	return
  5971  0041                     __end_of_frexp:	
  5972                           
  5973                           	psect	text4
  5974  0E3F                     __ptext4:	
  5975 ;; *************** function _eval_poly *****************
  5976 ;; Defined at:
  5977 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\evalpoly.c"
  5978 ;; Parameters:    Size  Location     Type
  5979 ;;  x               3   45[BANK0 ] PTR int 
  5980 ;;  d               2   48[BANK0 ] PTR const 
  5981 ;;		 -> log@coeff(27), 
  5982 ;;  n               2   50[BANK0 ] int 
  5983 ;; Auto vars:     Size  Location     Type
  5984 ;;  res             3   52[BANK0 ] int 
  5985 ;; Return value:  Size  Location     Type
  5986 ;;                  3   45[BANK0 ] int 
  5987 ;; Registers used:
  5988 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5989 ;; Tracked objects:
  5990 ;;		On entry : 0/0
  5991 ;;		On exit  : 0/0
  5992 ;;		Unchanged: 0/0
  5993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5994 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5995 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5997 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5998 ;;Total ram usage:       10 bytes
  5999 ;; Hardware stack levels used:    1
  6000 ;; Hardware stack levels required when called:    2
  6001 ;; This function calls:
  6002 ;;		___ftadd
  6003 ;;		___ftmul
  6004 ;;		___wmul
  6005 ;; This function is called by:
  6006 ;;		_log
  6007 ;; This function uses a non-reentrant model
  6008 ;;
  6009                           
  6010                           
  6011                           ;psect for function _eval_poly
  6012  0E3F                     _eval_poly:	
  6013                           
  6014                           ;incstack = 0
  6015                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6016  0E3F  0020               	movlb	0	; select bank0
  6017  0E40  0853               	movf	eval_poly@n+1,w
  6018  0E41  00F1               	movwf	___wmul@multiplier+1
  6019  0E42  0852               	movf	eval_poly@n,w
  6020  0E43  00F0               	movwf	___wmul@multiplier
  6021  0E44  3003               	movlw	3
  6022  0E45  00F2               	movwf	___wmul@multiplicand
  6023  0E46  3000               	movlw	0
  6024  0E47  00F3               	movwf	___wmul@multiplicand+1
  6025  0E48  318C  2419  318E   	fcall	___wmul
  6026  0E4B  0020               	movlb	0	; select bank0
  6027  0E4C  0850               	movf	eval_poly@d,w
  6028  0E4D  0770               	addwf	?___wmul,w
  6029  0E4E  0084               	movwf	4
  6030  0E4F  0851               	movf	eval_poly@d+1,w
  6031  0E50  3D71               	addwfc	?___wmul+1,w
  6032  0E51  0085               	movwf	5
  6033  0E52  3F00               	moviw [0]fsr0
  6034  0E53  00D4               	movwf	eval_poly@res
  6035  0E54  3F01               	moviw [1]fsr0
  6036  0E55  00D5               	movwf	eval_poly@res+1
  6037  0E56  3F02               	moviw [2]fsr0
  6038  0E57                     L1:	
  6039  0E57  00D6               	movwf	eval_poly@res+2
  6040  0E58  0852               	movf	eval_poly@n,w
  6041  0E59  0453               	iorwf	eval_poly@n+1,w
  6042  0E5A  1903               	btfsc	3,2
  6043  0E5B  2E98               	goto	l1979
  6044  0E5C  30FF               	movlw	255
  6045  0E5D  07D2               	addwf	eval_poly@n,f
  6046  0E5E  30FF               	movlw	255
  6047  0E5F  3DD3               	addwfc	eval_poly@n+1,f
  6048  0E60  0853               	movf	eval_poly@n+1,w
  6049  0E61  00F1               	movwf	___wmul@multiplier+1
  6050  0E62  0852               	movf	eval_poly@n,w
  6051  0E63  00F0               	movwf	___wmul@multiplier
  6052  0E64  3003               	movlw	3
  6053  0E65  00F2               	movwf	___wmul@multiplicand
  6054  0E66  3000               	movlw	0
  6055  0E67  00F3               	movwf	___wmul@multiplicand+1
  6056  0E68  318C  2419  318E   	fcall	___wmul
  6057  0E6B  0020               	movlb	0	; select bank0
  6058  0E6C  0850               	movf	eval_poly@d,w
  6059  0E6D  0770               	addwf	?___wmul,w
  6060  0E6E  0084               	movwf	4
  6061  0E6F  0851               	movf	eval_poly@d+1,w
  6062  0E70  3D71               	addwfc	?___wmul+1,w
  6063  0E71  0085               	movwf	5
  6064  0E72  3F00               	moviw [0]fsr0
  6065  0E73  00C0               	movwf	___ftadd@f1
  6066  0E74  3F01               	moviw [1]fsr0
  6067  0E75  00C1               	movwf	___ftadd@f1+1
  6068  0E76  3F02               	moviw [2]fsr0
  6069  0E77  00C2               	movwf	___ftadd@f1+2
  6070  0E78  0854               	movf	eval_poly@res,w
  6071  0E79  00A0               	movwf	___ftmul@f1
  6072  0E7A  0855               	movf	eval_poly@res+1,w
  6073  0E7B  00A1               	movwf	___ftmul@f1+1
  6074  0E7C  0856               	movf	eval_poly@res+2,w
  6075  0E7D  00A2               	movwf	___ftmul@f1+2
  6076  0E7E  084D               	movf	eval_poly@x,w
  6077  0E7F  00A3               	movwf	___ftmul@f2
  6078  0E80  084E               	movf	eval_poly@x+1,w
  6079  0E81  00A4               	movwf	___ftmul@f2+1
  6080  0E82  084F               	movf	eval_poly@x+2,w
  6081  0E83  00A5               	movwf	___ftmul@f2+2
  6082  0E84  3182  221D  318E   	fcall	___ftmul
  6083  0E87  0020               	movlb	0	; select bank0
  6084  0E88  0820               	movf	?___ftmul,w
  6085  0E89  00C3               	movwf	___ftadd@f2
  6086  0E8A  0821               	movf	?___ftmul+1,w
  6087  0E8B  00C4               	movwf	___ftadd@f2+1
  6088  0E8C  0822               	movf	?___ftmul+2,w
  6089  0E8D  00C5               	movwf	___ftadd@f2+2
  6090  0E8E  3183  239C  318E   	fcall	___ftadd
  6091  0E91  0020               	movlb	0	; select bank0
  6092  0E92  0840               	movf	?___ftadd,w
  6093  0E93  00D4               	movwf	eval_poly@res
  6094  0E94  0841               	movf	?___ftadd+1,w
  6095  0E95  00D5               	movwf	eval_poly@res+1
  6096  0E96  0842               	movf	?___ftadd+2,w
  6097  0E97  2E57               	goto	L1
  6098  0E98                     l1979:	
  6099  0E98  0854               	movf	eval_poly@res,w
  6100  0E99  00CD               	movwf	?_eval_poly
  6101  0E9A  0855               	movf	eval_poly@res+1,w
  6102  0E9B  00CE               	movwf	?_eval_poly+1
  6103  0E9C  0856               	movf	eval_poly@res+2,w
  6104  0E9D  00CF               	movwf	?_eval_poly+2
  6105  0E9E  0008               	return
  6106  0E9F                     __end_of_eval_poly:	
  6107                           
  6108                           	psect	text5
  6109  0C19                     __ptext5:	
  6110 ;; *************** function ___wmul *****************
  6111 ;; Defined at:
  6112 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
  6113 ;; Parameters:    Size  Location     Type
  6114 ;;  multiplier      2    0[COMMON] unsigned int 
  6115 ;;  multiplicand    2    2[COMMON] unsigned int 
  6116 ;; Auto vars:     Size  Location     Type
  6117 ;;  product         2    4[COMMON] unsigned int 
  6118 ;; Return value:  Size  Location     Type
  6119 ;;                  2    0[COMMON] unsigned int 
  6120 ;; Registers used:
  6121 ;;		wreg, status,2, status,0
  6122 ;; Tracked objects:
  6123 ;;		On entry : 0/0
  6124 ;;		On exit  : 0/0
  6125 ;;		Unchanged: 0/0
  6126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6127 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6128 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6130 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6131 ;;Total ram usage:        6 bytes
  6132 ;; Hardware stack levels used:    1
  6133 ;; This function calls:
  6134 ;;		Nothing
  6135 ;; This function is called by:
  6136 ;;		_eval_poly
  6137 ;; This function uses a non-reentrant model
  6138 ;;
  6139                           
  6140                           
  6141                           ;psect for function ___wmul
  6142  0C19                     ___wmul:	
  6143                           
  6144                           ;incstack = 0
  6145                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6146  0C19  01F4               	clrf	___wmul@product
  6147  0C1A  01F5               	clrf	___wmul@product+1
  6148  0C1B                     l1759:	
  6149  0C1B  1C70               	btfss	___wmul@multiplier,0
  6150  0C1C  2C21               	goto	l373
  6151  0C1D  0872               	movf	___wmul@multiplicand,w
  6152  0C1E  07F4               	addwf	___wmul@product,f
  6153  0C1F  0873               	movf	___wmul@multiplicand+1,w
  6154  0C20  3DF5               	addwfc	___wmul@product+1,f
  6155  0C21                     l373:	
  6156  0C21  3001               	movlw	1
  6157  0C22                     u1665:	
  6158  0C22  35F2               	lslf	___wmul@multiplicand,f
  6159  0C23  0DF3               	rlf	___wmul@multiplicand+1,f
  6160  0C24  0B89               	decfsz	9,f
  6161  0C25  2C22               	goto	u1665
  6162  0C26  3001               	movlw	1
  6163  0C27                     u1675:	
  6164  0C27  36F1               	lsrf	___wmul@multiplier+1,f
  6165  0C28  0CF0               	rrf	___wmul@multiplier,f
  6166  0C29  0B89               	decfsz	9,f
  6167  0C2A  2C27               	goto	u1675
  6168  0C2B  0870               	movf	___wmul@multiplier,w
  6169  0C2C  0471               	iorwf	___wmul@multiplier+1,w
  6170  0C2D  1D03               	btfss	3,2
  6171  0C2E  2C1B               	goto	l1759
  6172  0C2F  0875               	movf	___wmul@product+1,w
  6173  0C30  00F1               	movwf	?___wmul+1
  6174  0C31  0874               	movf	___wmul@product,w
  6175  0C32  00F0               	movwf	?___wmul
  6176  0C33  0008               	return
  6177  0C34                     __end_of___wmul:	
  6178                           
  6179                           	psect	text6
  6180  021D                     __ptext6:	
  6181 ;; *************** function ___ftmul *****************
  6182 ;; Defined at:
  6183 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftmul.c"
  6184 ;; Parameters:    Size  Location     Type
  6185 ;;  f1              3    0[BANK0 ] float 
  6186 ;;  f2              3    3[BANK0 ] float 
  6187 ;; Auto vars:     Size  Location     Type
  6188 ;;  f3_as_produc    3   11[BANK0 ] unsigned um
  6189 ;;  sign            1   15[BANK0 ] unsigned char 
  6190 ;;  cntr            1   14[BANK0 ] unsigned char 
  6191 ;;  exp             1   10[BANK0 ] unsigned char 
  6192 ;; Return value:  Size  Location     Type
  6193 ;;                  3    0[BANK0 ] float 
  6194 ;; Registers used:
  6195 ;;		wreg, status,2, status,0, pclath, cstack
  6196 ;; Tracked objects:
  6197 ;;		On entry : 0/0
  6198 ;;		On exit  : 0/0
  6199 ;;		Unchanged: 0/0
  6200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6201 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6202 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6203 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6204 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6205 ;;Total ram usage:       16 bytes
  6206 ;; Hardware stack levels used:    1
  6207 ;; Hardware stack levels required when called:    1
  6208 ;; This function calls:
  6209 ;;		___ftpack
  6210 ;; This function is called by:
  6211 ;;		_tempCalc
  6212 ;;		_log
  6213 ;;		_eval_poly
  6214 ;; This function uses a non-reentrant model
  6215 ;;
  6216                           
  6217                           
  6218                           ;psect for function ___ftmul
  6219  021D                     ___ftmul:	
  6220                           
  6221                           ;incstack = 0
  6222                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  6223  021D  0020               	movlb	0	; select bank0
  6224  021E  0820               	movf	___ftmul@f1,w
  6225  021F  00A6               	movwf	??___ftmul
  6226  0220  0821               	movf	___ftmul@f1+1,w
  6227  0221  00A7               	movwf	??___ftmul+1
  6228  0222  0822               	movf	___ftmul@f1+2,w
  6229  0223  00A8               	movwf	??___ftmul+2
  6230  0224  1003               	clrc
  6231  0225  0D27               	rlf	??___ftmul+1,w
  6232  0226  0D28               	rlf	??___ftmul+2,w
  6233  0227  00A9               	movwf	??___ftmul+3
  6234  0228  0829               	movf	??___ftmul+3,w
  6235  0229  00AA               	movwf	___ftmul@exp
  6236  022A  082A               	movf	___ftmul@exp,w
  6237  022B  1D03               	btfss	3,2
  6238  022C  2A34               	goto	l1847
  6239  022D  3000               	movlw	0
  6240  022E  00A0               	movwf	?___ftmul
  6241  022F  3000               	movlw	0
  6242  0230  00A1               	movwf	?___ftmul+1
  6243  0231  3000               	movlw	0
  6244  0232  00A2               	movwf	?___ftmul+2
  6245  0233  0008               	return
  6246  0234                     l1847:	
  6247  0234  0823               	movf	___ftmul@f2,w
  6248  0235  00A6               	movwf	??___ftmul
  6249  0236  0824               	movf	___ftmul@f2+1,w
  6250  0237  00A7               	movwf	??___ftmul+1
  6251  0238  0825               	movf	___ftmul@f2+2,w
  6252  0239  00A8               	movwf	??___ftmul+2
  6253  023A  1003               	clrc
  6254  023B  0D27               	rlf	??___ftmul+1,w
  6255  023C  0D28               	rlf	??___ftmul+2,w
  6256  023D  00A9               	movwf	??___ftmul+3
  6257  023E  0829               	movf	??___ftmul+3,w
  6258  023F  00AF               	movwf	___ftmul@sign
  6259  0240  082F               	movf	___ftmul@sign,w
  6260  0241  1D03               	btfss	3,2
  6261  0242  2A4A               	goto	l1853
  6262  0243  3000               	movlw	0
  6263  0244  00A0               	movwf	?___ftmul
  6264  0245  3000               	movlw	0
  6265  0246  00A1               	movwf	?___ftmul+1
  6266  0247  3000               	movlw	0
  6267  0248  00A2               	movwf	?___ftmul+2
  6268  0249  0008               	return
  6269  024A                     l1853:	
  6270  024A  082F               	movf	___ftmul@sign,w
  6271  024B  3E7B               	addlw	123
  6272  024C  00A6               	movwf	??___ftmul
  6273  024D  0826               	movf	??___ftmul,w
  6274  024E  07AA               	addwf	___ftmul@exp,f
  6275  024F  0820               	movf	___ftmul@f1,w
  6276  0250  00A6               	movwf	??___ftmul
  6277  0251  0821               	movf	___ftmul@f1+1,w
  6278  0252  00A7               	movwf	??___ftmul+1
  6279  0253  0822               	movf	___ftmul@f1+2,w
  6280  0254  00A8               	movwf	??___ftmul+2
  6281  0255  3010               	movlw	16
  6282  0256                     u1945:	
  6283  0256  36A8               	lsrf	??___ftmul+2,f
  6284  0257  0CA7               	rrf	??___ftmul+1,f
  6285  0258  0CA6               	rrf	??___ftmul,f
  6286  0259  0B89               	decfsz	9,f
  6287  025A  2A56               	goto	u1945
  6288  025B  0826               	movf	??___ftmul,w
  6289  025C  00A9               	movwf	??___ftmul+3
  6290  025D  0829               	movf	??___ftmul+3,w
  6291  025E  00AF               	movwf	___ftmul@sign
  6292  025F  0823               	movf	___ftmul@f2,w
  6293  0260  00A6               	movwf	??___ftmul
  6294  0261  0824               	movf	___ftmul@f2+1,w
  6295  0262  00A7               	movwf	??___ftmul+1
  6296  0263  0825               	movf	___ftmul@f2+2,w
  6297  0264  00A8               	movwf	??___ftmul+2
  6298  0265  3010               	movlw	16
  6299  0266                     u1955:	
  6300  0266  36A8               	lsrf	??___ftmul+2,f
  6301  0267  0CA7               	rrf	??___ftmul+1,f
  6302  0268  0CA6               	rrf	??___ftmul,f
  6303  0269  0B89               	decfsz	9,f
  6304  026A  2A66               	goto	u1955
  6305  026B  0826               	movf	??___ftmul,w
  6306  026C  00A9               	movwf	??___ftmul+3
  6307  026D  0829               	movf	??___ftmul+3,w
  6308  026E  06AF               	xorwf	___ftmul@sign,f
  6309  026F  3080               	movlw	128
  6310  0270  00A6               	movwf	??___ftmul
  6311  0271  0826               	movf	??___ftmul,w
  6312  0272  05AF               	andwf	___ftmul@sign,f
  6313  0273  17A1               	bsf	___ftmul@f1+1,7
  6314  0274  17A4               	bsf	___ftmul@f2+1,7
  6315  0275  30FF               	movlw	255
  6316  0276  05A3               	andwf	___ftmul@f2,f
  6317  0277  30FF               	movlw	255
  6318  0278  05A4               	andwf	___ftmul@f2+1,f
  6319  0279  3000               	movlw	0
  6320  027A  05A5               	andwf	___ftmul@f2+2,f
  6321  027B  3000               	movlw	0
  6322  027C  00AB               	movwf	___ftmul@f3_as_product
  6323  027D  3000               	movlw	0
  6324  027E  00AC               	movwf	___ftmul@f3_as_product+1
  6325  027F  3000               	movlw	0
  6326  0280  00AD               	movwf	___ftmul@f3_as_product+2
  6327  0281  3007               	movlw	7
  6328  0282  00A6               	movwf	??___ftmul
  6329  0283  0826               	movf	??___ftmul,w
  6330  0284  00AE               	movwf	___ftmul@cntr
  6331  0285                     l1865:	
  6332  0285  1C20               	btfss	___ftmul@f1,0
  6333  0286  2A8D               	goto	l1869
  6334  0287  0823               	movf	___ftmul@f2,w
  6335  0288  07AB               	addwf	___ftmul@f3_as_product,f
  6336  0289  0824               	movf	___ftmul@f2+1,w
  6337  028A  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  6338  028B  0825               	movf	___ftmul@f2+2,w
  6339  028C  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  6340  028D                     l1869:	
  6341  028D  3001               	movlw	1
  6342  028E                     u1975:	
  6343  028E  36A2               	lsrf	___ftmul@f1+2,f
  6344  028F  0CA1               	rrf	___ftmul@f1+1,f
  6345  0290  0CA0               	rrf	___ftmul@f1,f
  6346  0291  0B89               	decfsz	9,f
  6347  0292  2A8E               	goto	u1975
  6348  0293  3001               	movlw	1
  6349  0294                     u1985:	
  6350  0294  35A3               	lslf	___ftmul@f2,f
  6351  0295  0DA4               	rlf	___ftmul@f2+1,f
  6352  0296  0DA5               	rlf	___ftmul@f2+2,f
  6353  0297  0B89               	decfsz	9,f
  6354  0298  2A94               	goto	u1985
  6355  0299  3001               	movlw	1
  6356  029A  02AE               	subwf	___ftmul@cntr,f
  6357  029B  1D03               	btfss	3,2
  6358  029C  2A85               	goto	l1865
  6359  029D  3009               	movlw	9
  6360  029E  00A6               	movwf	??___ftmul
  6361  029F  0826               	movf	??___ftmul,w
  6362  02A0  00AE               	movwf	___ftmul@cntr
  6363  02A1                     l1877:	
  6364  02A1  1C20               	btfss	___ftmul@f1,0
  6365  02A2  2AA9               	goto	l1881
  6366  02A3  0823               	movf	___ftmul@f2,w
  6367  02A4  07AB               	addwf	___ftmul@f3_as_product,f
  6368  02A5  0824               	movf	___ftmul@f2+1,w
  6369  02A6  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  6370  02A7  0825               	movf	___ftmul@f2+2,w
  6371  02A8  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  6372  02A9                     l1881:	
  6373  02A9  3001               	movlw	1
  6374  02AA                     u2015:	
  6375  02AA  36A2               	lsrf	___ftmul@f1+2,f
  6376  02AB  0CA1               	rrf	___ftmul@f1+1,f
  6377  02AC  0CA0               	rrf	___ftmul@f1,f
  6378  02AD  0B89               	decfsz	9,f
  6379  02AE  2AAA               	goto	u2015
  6380  02AF  3001               	movlw	1
  6381  02B0                     u2025:	
  6382  02B0  36AD               	lsrf	___ftmul@f3_as_product+2,f
  6383  02B1  0CAC               	rrf	___ftmul@f3_as_product+1,f
  6384  02B2  0CAB               	rrf	___ftmul@f3_as_product,f
  6385  02B3  0B89               	decfsz	9,f
  6386  02B4  2AB0               	goto	u2025
  6387  02B5  3001               	movlw	1
  6388  02B6  02AE               	subwf	___ftmul@cntr,f
  6389  02B7  1D03               	btfss	3,2
  6390  02B8  2AA1               	goto	l1877
  6391  02B9  082B               	movf	___ftmul@f3_as_product,w
  6392  02BA  00F0               	movwf	___ftpack@arg
  6393  02BB  082C               	movf	___ftmul@f3_as_product+1,w
  6394  02BC  00F1               	movwf	___ftpack@arg+1
  6395  02BD  082D               	movf	___ftmul@f3_as_product+2,w
  6396  02BE  00F2               	movwf	___ftpack@arg+2
  6397  02BF  082A               	movf	___ftmul@exp,w
  6398  02C0  00A6               	movwf	??___ftmul
  6399  02C1  0826               	movf	??___ftmul,w
  6400  02C2  00F3               	movwf	___ftpack@exp
  6401  02C3  082F               	movf	___ftmul@sign,w
  6402  02C4  00A7               	movwf	??___ftmul+1
  6403  02C5  0827               	movf	??___ftmul+1,w
  6404  02C6  00F4               	movwf	___ftpack@sign
  6405  02C7  318E  269F         	fcall	___ftpack
  6406  02C9  0870               	movf	?___ftpack,w
  6407  02CA  0020               	movlb	0	; select bank0
  6408  02CB  00A0               	movwf	?___ftmul
  6409  02CC  0871               	movf	?___ftpack+1,w
  6410  02CD  00A1               	movwf	?___ftmul+1
  6411  02CE  0872               	movf	?___ftpack+2,w
  6412  02CF  00A2               	movwf	?___ftmul+2
  6413  02D0  0008               	return
  6414  02D1                     __end_of___ftmul:	
  6415                           
  6416                           	psect	text7
  6417  0D2F                     __ptext7:	
  6418 ;; *************** function ___ftge *****************
  6419 ;; Defined at:
  6420 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftge.c"
  6421 ;; Parameters:    Size  Location     Type
  6422 ;;  ff1             3    0[COMMON] float 
  6423 ;;  ff2             3    3[COMMON] float 
  6424 ;; Auto vars:     Size  Location     Type
  6425 ;;		None
  6426 ;; Return value:  Size  Location     Type
  6427 ;;		None               void
  6428 ;; Registers used:
  6429 ;;		wreg, status,2, status,0
  6430 ;; Tracked objects:
  6431 ;;		On entry : 0/0
  6432 ;;		On exit  : 0/0
  6433 ;;		Unchanged: 0/0
  6434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6435 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6437 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6438 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6439 ;;Total ram usage:        9 bytes
  6440 ;; Hardware stack levels used:    1
  6441 ;; This function calls:
  6442 ;;		Nothing
  6443 ;; This function is called by:
  6444 ;;		_log
  6445 ;; This function uses a non-reentrant model
  6446 ;;
  6447                           
  6448                           
  6449                           ;psect for function ___ftge
  6450  0D2F                     ___ftge:	
  6451                           
  6452                           ;incstack = 0
  6453                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  6454  0D2F  1FF2               	btfss	___ftge@ff1+2,7
  6455  0D30  2D45               	goto	l1937
  6456  0D31  0970               	comf	___ftge@ff1,w
  6457  0D32  00F6               	movwf	??___ftge
  6458  0D33  0971               	comf	___ftge@ff1+1,w
  6459  0D34  00F7               	movwf	??___ftge+1
  6460  0D35  0972               	comf	___ftge@ff1+2,w
  6461  0D36  00F8               	movwf	??___ftge+2
  6462  0D37  0AF6               	incf	??___ftge,f
  6463  0D38  1903               	skipnz
  6464  0D39  0AF7               	incf	??___ftge+1,f
  6465  0D3A  1903               	skipnz
  6466  0D3B  0AF8               	incf	??___ftge+2,f
  6467  0D3C  3000               	movlw	0
  6468  0D3D  0776               	addwf	??___ftge,w
  6469  0D3E  00F0               	movwf	___ftge@ff1
  6470  0D3F  3000               	movlw	0
  6471  0D40  3D77               	addwfc	??___ftge+1,w
  6472  0D41  00F1               	movwf	___ftge@ff1+1
  6473  0D42  3080               	movlw	128
  6474  0D43  3D78               	addwfc	??___ftge+2,w
  6475  0D44  00F2               	movwf	___ftge@ff1+2
  6476  0D45                     l1937:	
  6477  0D45  1FF5               	btfss	___ftge@ff2+2,7
  6478  0D46  2D5B               	goto	l1941
  6479  0D47  0973               	comf	___ftge@ff2,w
  6480  0D48  00F6               	movwf	??___ftge
  6481  0D49  0974               	comf	___ftge@ff2+1,w
  6482  0D4A  00F7               	movwf	??___ftge+1
  6483  0D4B  0975               	comf	___ftge@ff2+2,w
  6484  0D4C  00F8               	movwf	??___ftge+2
  6485  0D4D  0AF6               	incf	??___ftge,f
  6486  0D4E  1903               	skipnz
  6487  0D4F  0AF7               	incf	??___ftge+1,f
  6488  0D50  1903               	skipnz
  6489  0D51  0AF8               	incf	??___ftge+2,f
  6490  0D52  3000               	movlw	0
  6491  0D53  0776               	addwf	??___ftge,w
  6492  0D54  00F3               	movwf	___ftge@ff2
  6493  0D55  3000               	movlw	0
  6494  0D56  3D77               	addwfc	??___ftge+1,w
  6495  0D57  00F4               	movwf	___ftge@ff2+1
  6496  0D58  3080               	movlw	128
  6497  0D59  3D78               	addwfc	??___ftge+2,w
  6498  0D5A  00F5               	movwf	___ftge@ff2+2
  6499  0D5B                     l1941:	
  6500  0D5B  3080               	movlw	128
  6501  0D5C  06F2               	xorwf	___ftge@ff1+2,f
  6502  0D5D  3080               	movlw	128
  6503  0D5E  06F5               	xorwf	___ftge@ff2+2,f
  6504  0D5F  0875               	movf	___ftge@ff2+2,w
  6505  0D60  0272               	subwf	___ftge@ff1+2,w
  6506  0D61  1D03               	skipz
  6507  0D62  0008               	return
  6508  0D63  0874               	movf	___ftge@ff2+1,w
  6509  0D64  0271               	subwf	___ftge@ff1+1,w
  6510  0D65  1D03               	skipz
  6511  0D66  0008               	return
  6512  0D67  0873               	movf	___ftge@ff2,w
  6513  0D68  0270               	subwf	___ftge@ff1,w
  6514  0D69  0008               	return
  6515  0D6A                     __end_of___ftge:	
  6516                           
  6517                           	psect	text8
  6518  0C52                     __ptext8:	
  6519 ;; *************** function ___awtoft *****************
  6520 ;; Defined at:
  6521 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awtoft.c"
  6522 ;; Parameters:    Size  Location     Type
  6523 ;;  c               2    8[COMMON] int 
  6524 ;; Auto vars:     Size  Location     Type
  6525 ;;  sign            1   13[COMMON] unsigned char 
  6526 ;; Return value:  Size  Location     Type
  6527 ;;                  3    8[COMMON] float 
  6528 ;; Registers used:
  6529 ;;		wreg, status,2, status,0, pclath, cstack
  6530 ;; Tracked objects:
  6531 ;;		On entry : 0/0
  6532 ;;		On exit  : 0/0
  6533 ;;		Unchanged: 0/0
  6534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6535 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6536 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6537 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6538 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6539 ;;Total ram usage:        6 bytes
  6540 ;; Hardware stack levels used:    1
  6541 ;; Hardware stack levels required when called:    1
  6542 ;; This function calls:
  6543 ;;		___ftpack
  6544 ;; This function is called by:
  6545 ;;		_tempCalc
  6546 ;;		_log
  6547 ;; This function uses a non-reentrant model
  6548 ;;
  6549                           
  6550                           
  6551                           ;psect for function ___awtoft
  6552  0C52                     ___awtoft:	
  6553                           
  6554                           ;incstack = 0
  6555                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  6556  0C52  01FD               	clrf	___awtoft@sign
  6557  0C53  1FF9               	btfss	___awtoft@c+1,7
  6558  0C54  2C5C               	goto	l1929
  6559  0C55  09F8               	comf	___awtoft@c,f
  6560  0C56  09F9               	comf	___awtoft@c+1,f
  6561  0C57  0AF8               	incf	___awtoft@c,f
  6562  0C58  1903               	skipnz
  6563  0C59  0AF9               	incf	___awtoft@c+1,f
  6564  0C5A  01FD               	clrf	___awtoft@sign
  6565  0C5B  0AFD               	incf	___awtoft@sign,f
  6566  0C5C                     l1929:	
  6567  0C5C  0878               	movf	___awtoft@c,w
  6568  0C5D  00F0               	movwf	___ftpack@arg
  6569  0C5E  0879               	movf	___awtoft@c+1,w
  6570  0C5F  00F1               	movwf	___ftpack@arg+1
  6571  0C60  01F2               	clrf	___ftpack@arg+2
  6572  0C61  308E               	movlw	142
  6573  0C62  00FB               	movwf	??___awtoft
  6574  0C63  087B               	movf	??___awtoft,w
  6575  0C64  00F3               	movwf	___ftpack@exp
  6576  0C65  087D               	movf	___awtoft@sign,w
  6577  0C66  00FC               	movwf	??___awtoft+1
  6578  0C67  087C               	movf	??___awtoft+1,w
  6579  0C68  00F4               	movwf	___ftpack@sign
  6580  0C69  318E  269F         	fcall	___ftpack
  6581  0C6B  0870               	movf	?___ftpack,w
  6582  0C6C  00F8               	movwf	?___awtoft
  6583  0C6D  0871               	movf	?___ftpack+1,w
  6584  0C6E  00F9               	movwf	?___awtoft+1
  6585  0C6F  0872               	movf	?___ftpack+2,w
  6586  0C70  00FA               	movwf	?___awtoft+2
  6587  0C71  0008               	return
  6588  0C72                     __end_of___awtoft:	
  6589                           
  6590                           	psect	text9
  6591  0C34                     __ptext9:	
  6592 ;; *************** function ___ftsub *****************
  6593 ;; Defined at:
  6594 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftsub.c"
  6595 ;; Parameters:    Size  Location     Type
  6596 ;;  f2              3   45[BANK0 ] float 
  6597 ;;  f1              3   48[BANK0 ] float 
  6598 ;; Auto vars:     Size  Location     Type
  6599 ;;		None
  6600 ;; Return value:  Size  Location     Type
  6601 ;;                  3   45[BANK0 ] float 
  6602 ;; Registers used:
  6603 ;;		wreg, status,2, status,0, pclath, cstack
  6604 ;; Tracked objects:
  6605 ;;		On entry : 0/0
  6606 ;;		On exit  : 0/0
  6607 ;;		Unchanged: 0/0
  6608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6609 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6612 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6613 ;;Total ram usage:        6 bytes
  6614 ;; Hardware stack levels used:    1
  6615 ;; Hardware stack levels required when called:    2
  6616 ;; This function calls:
  6617 ;;		___ftadd
  6618 ;; This function is called by:
  6619 ;;		_tempCalc
  6620 ;; This function uses a non-reentrant model
  6621 ;;
  6622                           
  6623                           
  6624                           ;psect for function ___ftsub
  6625  0C34                     ___ftsub:	
  6626                           
  6627                           ;incstack = 0
  6628                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  6629  0C34  0020               	movlb	0	; select bank0
  6630  0C35  084F               	movf	___ftsub@f2+2,w
  6631  0C36  044E               	iorwf	___ftsub@f2+1,w
  6632  0C37  044D               	iorwf	___ftsub@f2,w
  6633  0C38  1903               	skipnz
  6634  0C39  2C3C               	goto	l2343
  6635  0C3A  3080               	movlw	128
  6636  0C3B  06CF               	xorwf	___ftsub@f2+2,f
  6637  0C3C                     l2343:	
  6638  0C3C  0850               	movf	___ftsub@f1,w
  6639  0C3D  00C0               	movwf	___ftadd@f1
  6640  0C3E  0851               	movf	___ftsub@f1+1,w
  6641  0C3F  00C1               	movwf	___ftadd@f1+1
  6642  0C40  0852               	movf	___ftsub@f1+2,w
  6643  0C41  00C2               	movwf	___ftadd@f1+2
  6644  0C42  084D               	movf	___ftsub@f2,w
  6645  0C43  00C3               	movwf	___ftadd@f2
  6646  0C44  084E               	movf	___ftsub@f2+1,w
  6647  0C45  00C4               	movwf	___ftadd@f2+1
  6648  0C46  084F               	movf	___ftsub@f2+2,w
  6649  0C47  00C5               	movwf	___ftadd@f2+2
  6650  0C48  3183  239C         	fcall	___ftadd
  6651  0C4A  0020               	movlb	0	; select bank0
  6652  0C4B  0840               	movf	?___ftadd,w
  6653  0C4C  00CD               	movwf	?___ftsub
  6654  0C4D  0841               	movf	?___ftadd+1,w
  6655  0C4E  00CE               	movwf	?___ftsub+1
  6656  0C4F  0842               	movf	?___ftadd+2,w
  6657  0C50  00CF               	movwf	?___ftsub+2
  6658  0C51  0008               	return
  6659  0C52                     __end_of___ftsub:	
  6660                           
  6661                           	psect	text10
  6662  039C                     __ptext10:	
  6663 ;; *************** function ___ftadd *****************
  6664 ;; Defined at:
  6665 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftadd.c"
  6666 ;; Parameters:    Size  Location     Type
  6667 ;;  f1              3   32[BANK0 ] float 
  6668 ;;  f2              3   35[BANK0 ] float 
  6669 ;; Auto vars:     Size  Location     Type
  6670 ;;  exp1            1   44[BANK0 ] unsigned char 
  6671 ;;  exp2            1   43[BANK0 ] unsigned char 
  6672 ;;  sign            1   42[BANK0 ] unsigned char 
  6673 ;; Return value:  Size  Location     Type
  6674 ;;                  3   32[BANK0 ] float 
  6675 ;; Registers used:
  6676 ;;		wreg, status,2, status,0, pclath, cstack
  6677 ;; Tracked objects:
  6678 ;;		On entry : 0/0
  6679 ;;		On exit  : 0/0
  6680 ;;		Unchanged: 0/0
  6681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6682 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6683 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6684 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6685 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6686 ;;Total ram usage:       13 bytes
  6687 ;; Hardware stack levels used:    1
  6688 ;; Hardware stack levels required when called:    1
  6689 ;; This function calls:
  6690 ;;		___ftpack
  6691 ;; This function is called by:
  6692 ;;		_tempCalc
  6693 ;;		___ftsub
  6694 ;;		_log
  6695 ;;		_eval_poly
  6696 ;; This function uses a non-reentrant model
  6697 ;;
  6698                           
  6699                           
  6700                           ;psect for function ___ftadd
  6701  039C                     ___ftadd:	
  6702                           
  6703                           ;incstack = 0
  6704                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  6705  039C  0020               	movlb	0	; select bank0
  6706  039D  0840               	movf	___ftadd@f1,w
  6707  039E  00C6               	movwf	??___ftadd
  6708  039F  0841               	movf	___ftadd@f1+1,w
  6709  03A0  00C7               	movwf	??___ftadd+1
  6710  03A1  0842               	movf	___ftadd@f1+2,w
  6711  03A2  00C8               	movwf	??___ftadd+2
  6712  03A3  1003               	clrc
  6713  03A4  0D47               	rlf	??___ftadd+1,w
  6714  03A5  0D48               	rlf	??___ftadd+2,w
  6715  03A6  00C9               	movwf	??___ftadd+3
  6716  03A7  0849               	movf	??___ftadd+3,w
  6717  03A8  00CC               	movwf	___ftadd@exp1
  6718  03A9  0843               	movf	___ftadd@f2,w
  6719  03AA  00C6               	movwf	??___ftadd
  6720  03AB  0844               	movf	___ftadd@f2+1,w
  6721  03AC  00C7               	movwf	??___ftadd+1
  6722  03AD  0845               	movf	___ftadd@f2+2,w
  6723  03AE  00C8               	movwf	??___ftadd+2
  6724  03AF  1003               	clrc
  6725  03B0  0D47               	rlf	??___ftadd+1,w
  6726  03B1  0D48               	rlf	??___ftadd+2,w
  6727  03B2  00C9               	movwf	??___ftadd+3
  6728  03B3  0849               	movf	??___ftadd+3,w
  6729  03B4  00CB               	movwf	___ftadd@exp2
  6730  03B5  084C               	movf	___ftadd@exp1,w
  6731  03B6  1903               	btfsc	3,2
  6732  03B7  2BC4               	goto	l1777
  6733  03B8  084B               	movf	___ftadd@exp2,w
  6734  03B9  024C               	subwf	___ftadd@exp1,w
  6735  03BA  1803               	skipnc
  6736  03BB  2BCB               	goto	l1781
  6737  03BC  034C               	decf	___ftadd@exp1,w
  6738  03BD  3AFF               	xorlw	255
  6739  03BE  074B               	addwf	___ftadd@exp2,w
  6740  03BF  00C6               	movwf	??___ftadd
  6741  03C0  3019               	movlw	25
  6742  03C1  0246               	subwf	??___ftadd,w
  6743  03C2  1C03               	skipc
  6744  03C3  2BCB               	goto	l1781
  6745  03C4                     l1777:	
  6746  03C4  0843               	movf	___ftadd@f2,w
  6747  03C5  00C0               	movwf	?___ftadd
  6748  03C6  0844               	movf	___ftadd@f2+1,w
  6749  03C7  00C1               	movwf	?___ftadd+1
  6750  03C8  0845               	movf	___ftadd@f2+2,w
  6751  03C9  00C2               	movwf	?___ftadd+2
  6752  03CA  0008               	return
  6753  03CB                     l1781:	
  6754  03CB  084B               	movf	___ftadd@exp2,w
  6755  03CC  1903               	btfsc	3,2
  6756  03CD  0008               	return
  6757  03CE  084C               	movf	___ftadd@exp1,w
  6758  03CF  024B               	subwf	___ftadd@exp2,w
  6759  03D0  1803               	skipnc
  6760  03D1  2BDA               	goto	l1787
  6761  03D2  034B               	decf	___ftadd@exp2,w
  6762  03D3  3AFF               	xorlw	255
  6763  03D4  074C               	addwf	___ftadd@exp1,w
  6764  03D5  00C6               	movwf	??___ftadd
  6765  03D6  3019               	movlw	25
  6766  03D7  0246               	subwf	??___ftadd,w
  6767  03D8  1803               	btfsc	3,0
  6768  03D9  0008               	return
  6769  03DA                     l1787:	
  6770  03DA  3006               	movlw	6
  6771  03DB  00C6               	movwf	??___ftadd
  6772  03DC  0846               	movf	??___ftadd,w
  6773  03DD  00CA               	movwf	___ftadd@sign
  6774  03DE  1BC2               	btfsc	___ftadd@f1+2,7
  6775  03DF  17CA               	bsf	___ftadd@sign,7
  6776  03E0  1BC5               	btfsc	___ftadd@f2+2,7
  6777  03E1  174A               	bsf	___ftadd@sign,6
  6778  03E2  17C1               	bsf	___ftadd@f1+1,7
  6779  03E3  30FF               	movlw	255
  6780  03E4  05C0               	andwf	___ftadd@f1,f
  6781  03E5  30FF               	movlw	255
  6782  03E6  05C1               	andwf	___ftadd@f1+1,f
  6783  03E7  3000               	movlw	0
  6784  03E8  05C2               	andwf	___ftadd@f1+2,f
  6785  03E9  17C4               	bsf	___ftadd@f2+1,7
  6786  03EA  30FF               	movlw	255
  6787  03EB  05C3               	andwf	___ftadd@f2,f
  6788  03EC  30FF               	movlw	255
  6789  03ED  05C4               	andwf	___ftadd@f2+1,f
  6790  03EE  3000               	movlw	0
  6791  03EF  05C5               	andwf	___ftadd@f2+2,f
  6792  03F0  084B               	movf	___ftadd@exp2,w
  6793  03F1  024C               	subwf	___ftadd@exp1,w
  6794  03F2  1803               	skipnc
  6795  03F3  2C16               	goto	l1809
  6796  03F4                     l1799:	
  6797  03F4  3001               	movlw	1
  6798  03F5                     u1785:	
  6799  03F5  35C3               	lslf	___ftadd@f2,f
  6800  03F6  0DC4               	rlf	___ftadd@f2+1,f
  6801  03F7  0DC5               	rlf	___ftadd@f2+2,f
  6802  03F8  0B89               	decfsz	9,f
  6803  03F9  2BF5               	goto	u1785
  6804  03FA  3001               	movlw	1
  6805  03FB  02CB               	subwf	___ftadd@exp2,f
  6806  03FC  084B               	movf	___ftadd@exp2,w
  6807  03FD  064C               	xorwf	___ftadd@exp1,w
  6808  03FE  1903               	skipnz
  6809  03FF  2C11               	goto	l1807
  6810  0400  3001               	movlw	1
  6811  0401  02CA               	subwf	___ftadd@sign,f
  6812  0402  084A               	movf	___ftadd@sign,w
  6813  0403  3907               	andlw	7
  6814  0404  1903               	btfsc	3,2
  6815  0405  2C11               	goto	l1807
  6816  0406  2BF4               	goto	l1799
  6817  0407                     l1805:	
  6818  0407  3001               	movlw	1
  6819  0408                     u1815:	
  6820  0408  36C2               	lsrf	___ftadd@f1+2,f
  6821  0409  0CC1               	rrf	___ftadd@f1+1,f
  6822  040A  0CC0               	rrf	___ftadd@f1,f
  6823  040B  0B89               	decfsz	9,f
  6824  040C  2C08               	goto	u1815
  6825  040D  3001               	movlw	1
  6826  040E  00C6               	movwf	??___ftadd
  6827  040F  0846               	movf	??___ftadd,w
  6828  0410  07CC               	addwf	___ftadd@exp1,f
  6829  0411                     l1807:	
  6830  0411  084C               	movf	___ftadd@exp1,w
  6831  0412  064B               	xorwf	___ftadd@exp2,w
  6832  0413  1903               	btfsc	3,2
  6833  0414  2C3B               	goto	l565
  6834  0415  2C07               	goto	l1805
  6835  0416                     l1809:	
  6836  0416  084C               	movf	___ftadd@exp1,w
  6837  0417  024B               	subwf	___ftadd@exp2,w
  6838  0418  1803               	skipnc
  6839  0419  2C3B               	goto	l565
  6840  041A                     l1811:	
  6841  041A  3001               	movlw	1
  6842  041B                     u1845:	
  6843  041B  35C0               	lslf	___ftadd@f1,f
  6844  041C  0DC1               	rlf	___ftadd@f1+1,f
  6845  041D  0DC2               	rlf	___ftadd@f1+2,f
  6846  041E  0B89               	decfsz	9,f
  6847  041F  2C1B               	goto	u1845
  6848  0420  3001               	movlw	1
  6849  0421  02CC               	subwf	___ftadd@exp1,f
  6850  0422  084B               	movf	___ftadd@exp2,w
  6851  0423  064C               	xorwf	___ftadd@exp1,w
  6852  0424  1903               	skipnz
  6853  0425  2C37               	goto	l1819
  6854  0426  3001               	movlw	1
  6855  0427  02CA               	subwf	___ftadd@sign,f
  6856  0428  084A               	movf	___ftadd@sign,w
  6857  0429  3907               	andlw	7
  6858  042A  1903               	btfsc	3,2
  6859  042B  2C37               	goto	l1819
  6860  042C  2C1A               	goto	l1811
  6861  042D                     l1817:	
  6862  042D  3001               	movlw	1
  6863  042E                     u1875:	
  6864  042E  36C5               	lsrf	___ftadd@f2+2,f
  6865  042F  0CC4               	rrf	___ftadd@f2+1,f
  6866  0430  0CC3               	rrf	___ftadd@f2,f
  6867  0431  0B89               	decfsz	9,f
  6868  0432  2C2E               	goto	u1875
  6869  0433  3001               	movlw	1
  6870  0434  00C6               	movwf	??___ftadd
  6871  0435  0846               	movf	??___ftadd,w
  6872  0436  07CB               	addwf	___ftadd@exp2,f
  6873  0437                     l1819:	
  6874  0437  084C               	movf	___ftadd@exp1,w
  6875  0438  064B               	xorwf	___ftadd@exp2,w
  6876  0439  1D03               	skipz
  6877  043A  2C2D               	goto	l1817
  6878  043B                     l565:	
  6879  043B  1FCA               	btfss	___ftadd@sign,7
  6880  043C  2C4D               	goto	l1823
  6881  043D  30FF               	movlw	255
  6882  043E  06C0               	xorwf	___ftadd@f1,f
  6883  043F  30FF               	movlw	255
  6884  0440  06C1               	xorwf	___ftadd@f1+1,f
  6885  0441  30FF               	movlw	255
  6886  0442  06C2               	xorwf	___ftadd@f1+2,f
  6887  0443  3001               	movlw	1
  6888  0444  07C0               	addwf	___ftadd@f1,f
  6889  0445  3000               	movlw	0
  6890  0446  1803               	skipnc
  6891  0447  3001               	movlw	1
  6892  0448  07C1               	addwf	___ftadd@f1+1,f
  6893  0449  3000               	movlw	0
  6894  044A  1803               	skipnc
  6895  044B  3001               	movlw	1
  6896  044C  07C2               	addwf	___ftadd@f1+2,f
  6897  044D                     l1823:	
  6898  044D  1F4A               	btfss	___ftadd@sign,6
  6899  044E  2C5F               	goto	l1827
  6900  044F  30FF               	movlw	255
  6901  0450  06C3               	xorwf	___ftadd@f2,f
  6902  0451  30FF               	movlw	255
  6903  0452  06C4               	xorwf	___ftadd@f2+1,f
  6904  0453  30FF               	movlw	255
  6905  0454  06C5               	xorwf	___ftadd@f2+2,f
  6906  0455  3001               	movlw	1
  6907  0456  07C3               	addwf	___ftadd@f2,f
  6908  0457  3000               	movlw	0
  6909  0458  1803               	skipnc
  6910  0459  3001               	movlw	1
  6911  045A  07C4               	addwf	___ftadd@f2+1,f
  6912  045B  3000               	movlw	0
  6913  045C  1803               	skipnc
  6914  045D  3001               	movlw	1
  6915  045E  07C5               	addwf	___ftadd@f2+2,f
  6916  045F                     l1827:	
  6917  045F  01CA               	clrf	___ftadd@sign
  6918  0460  0840               	movf	___ftadd@f1,w
  6919  0461  07C3               	addwf	___ftadd@f2,f
  6920  0462  0841               	movf	___ftadd@f1+1,w
  6921  0463  3DC4               	addwfc	___ftadd@f2+1,f
  6922  0464  0842               	movf	___ftadd@f1+2,w
  6923  0465  3DC5               	addwfc	___ftadd@f2+2,f
  6924  0466  1FC5               	btfss	___ftadd@f2+2,7
  6925  0467  2C7A               	goto	l1837
  6926  0468  30FF               	movlw	255
  6927  0469  06C3               	xorwf	___ftadd@f2,f
  6928  046A  30FF               	movlw	255
  6929  046B  06C4               	xorwf	___ftadd@f2+1,f
  6930  046C  30FF               	movlw	255
  6931  046D  06C5               	xorwf	___ftadd@f2+2,f
  6932  046E  3001               	movlw	1
  6933  046F  07C3               	addwf	___ftadd@f2,f
  6934  0470  3000               	movlw	0
  6935  0471  1803               	skipnc
  6936  0472  3001               	movlw	1
  6937  0473  07C4               	addwf	___ftadd@f2+1,f
  6938  0474  3000               	movlw	0
  6939  0475  1803               	skipnc
  6940  0476  3001               	movlw	1
  6941  0477  07C5               	addwf	___ftadd@f2+2,f
  6942  0478  01CA               	clrf	___ftadd@sign
  6943  0479  0ACA               	incf	___ftadd@sign,f
  6944  047A                     l1837:	
  6945  047A  0843               	movf	___ftadd@f2,w
  6946  047B  00F0               	movwf	___ftpack@arg
  6947  047C  0844               	movf	___ftadd@f2+1,w
  6948  047D  00F1               	movwf	___ftpack@arg+1
  6949  047E  0845               	movf	___ftadd@f2+2,w
  6950  047F  00F2               	movwf	___ftpack@arg+2
  6951  0480  084C               	movf	___ftadd@exp1,w
  6952  0481  00C6               	movwf	??___ftadd
  6953  0482  0846               	movf	??___ftadd,w
  6954  0483  00F3               	movwf	___ftpack@exp
  6955  0484  084A               	movf	___ftadd@sign,w
  6956  0485  00C7               	movwf	??___ftadd+1
  6957  0486  0847               	movf	??___ftadd+1,w
  6958  0487  00F4               	movwf	___ftpack@sign
  6959  0488  318E  269F         	fcall	___ftpack
  6960  048A  0870               	movf	?___ftpack,w
  6961  048B  0020               	movlb	0	; select bank0
  6962  048C  00C0               	movwf	?___ftadd
  6963  048D  0871               	movf	?___ftpack+1,w
  6964  048E  00C1               	movwf	?___ftadd+1
  6965  048F  0872               	movf	?___ftpack+2,w
  6966  0490  00C2               	movwf	?___ftadd+2
  6967  0491  0008               	return
  6968  0492                     __end_of___ftadd:	
  6969                           
  6970                           	psect	text11
  6971  00C7                     __ptext11:	
  6972 ;; *************** function ___ftdiv *****************
  6973 ;; Defined at:
  6974 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftdiv.c"
  6975 ;; Parameters:    Size  Location     Type
  6976 ;;  f2              3   16[BANK0 ] float 
  6977 ;;  f1              3   19[BANK0 ] float 
  6978 ;; Auto vars:     Size  Location     Type
  6979 ;;  f3              3   27[BANK0 ] float 
  6980 ;;  sign            1   31[BANK0 ] unsigned char 
  6981 ;;  exp             1   30[BANK0 ] unsigned char 
  6982 ;;  cntr            1   26[BANK0 ] unsigned char 
  6983 ;; Return value:  Size  Location     Type
  6984 ;;                  3   16[BANK0 ] float 
  6985 ;; Registers used:
  6986 ;;		wreg, status,2, status,0, pclath, cstack
  6987 ;; Tracked objects:
  6988 ;;		On entry : 0/0
  6989 ;;		On exit  : 0/0
  6990 ;;		Unchanged: 0/0
  6991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6992 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6993 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6994 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6995 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6996 ;;Total ram usage:       16 bytes
  6997 ;; Hardware stack levels used:    1
  6998 ;; Hardware stack levels required when called:    1
  6999 ;; This function calls:
  7000 ;;		___ftpack
  7001 ;; This function is called by:
  7002 ;;		_tempCalc
  7003 ;; This function uses a non-reentrant model
  7004 ;;
  7005                           
  7006                           
  7007                           ;psect for function ___ftdiv
  7008  00C7                     ___ftdiv:	
  7009                           
  7010                           ;incstack = 0
  7011                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  7012  00C7  0020               	movlb	0	; select bank0
  7013  00C8  0833               	movf	___ftdiv@f1,w
  7014  00C9  00B6               	movwf	??___ftdiv
  7015  00CA  0834               	movf	___ftdiv@f1+1,w
  7016  00CB  00B7               	movwf	??___ftdiv+1
  7017  00CC  0835               	movf	___ftdiv@f1+2,w
  7018  00CD  00B8               	movwf	??___ftdiv+2
  7019  00CE  1003               	clrc
  7020  00CF  0D37               	rlf	??___ftdiv+1,w
  7021  00D0  0D38               	rlf	??___ftdiv+2,w
  7022  00D1  00B9               	movwf	??___ftdiv+3
  7023  00D2  0839               	movf	??___ftdiv+3,w
  7024  00D3  00BE               	movwf	___ftdiv@exp
  7025  00D4  083E               	movf	___ftdiv@exp,w
  7026  00D5  1D03               	btfss	3,2
  7027  00D6  28DE               	goto	l2303
  7028  00D7  3000               	movlw	0
  7029  00D8  00B0               	movwf	?___ftdiv
  7030  00D9  3000               	movlw	0
  7031  00DA  00B1               	movwf	?___ftdiv+1
  7032  00DB  3000               	movlw	0
  7033  00DC  00B2               	movwf	?___ftdiv+2
  7034  00DD  0008               	return
  7035  00DE                     l2303:	
  7036  00DE  0830               	movf	___ftdiv@f2,w
  7037  00DF  00B6               	movwf	??___ftdiv
  7038  00E0  0831               	movf	___ftdiv@f2+1,w
  7039  00E1  00B7               	movwf	??___ftdiv+1
  7040  00E2  0832               	movf	___ftdiv@f2+2,w
  7041  00E3  00B8               	movwf	??___ftdiv+2
  7042  00E4  1003               	clrc
  7043  00E5  0D37               	rlf	??___ftdiv+1,w
  7044  00E6  0D38               	rlf	??___ftdiv+2,w
  7045  00E7  00B9               	movwf	??___ftdiv+3
  7046  00E8  0839               	movf	??___ftdiv+3,w
  7047  00E9  00BF               	movwf	___ftdiv@sign
  7048  00EA  083F               	movf	___ftdiv@sign,w
  7049  00EB  1D03               	btfss	3,2
  7050  00EC  28F4               	goto	l2309
  7051  00ED  3000               	movlw	0
  7052  00EE  00B0               	movwf	?___ftdiv
  7053  00EF  3000               	movlw	0
  7054  00F0  00B1               	movwf	?___ftdiv+1
  7055  00F1  3000               	movlw	0
  7056  00F2  00B2               	movwf	?___ftdiv+2
  7057  00F3  0008               	return
  7058  00F4                     l2309:	
  7059  00F4  3000               	movlw	0
  7060  00F5  00BB               	movwf	___ftdiv@f3
  7061  00F6  3000               	movlw	0
  7062  00F7  00BC               	movwf	___ftdiv@f3+1
  7063  00F8  3000               	movlw	0
  7064  00F9  00BD               	movwf	___ftdiv@f3+2
  7065  00FA  3089               	movlw	137
  7066  00FB  073F               	addwf	___ftdiv@sign,w
  7067  00FC  00B6               	movwf	??___ftdiv
  7068  00FD  0836               	movf	??___ftdiv,w
  7069  00FE  02BE               	subwf	___ftdiv@exp,f
  7070  00FF  0833               	movf	___ftdiv@f1,w
  7071  0100  00B6               	movwf	??___ftdiv
  7072  0101  0834               	movf	___ftdiv@f1+1,w
  7073  0102  00B7               	movwf	??___ftdiv+1
  7074  0103  0835               	movf	___ftdiv@f1+2,w
  7075  0104  00B8               	movwf	??___ftdiv+2
  7076  0105  3010               	movlw	16
  7077  0106                     u2515:	
  7078  0106  36B8               	lsrf	??___ftdiv+2,f
  7079  0107  0CB7               	rrf	??___ftdiv+1,f
  7080  0108  0CB6               	rrf	??___ftdiv,f
  7081  0109  0B89               	decfsz	9,f
  7082  010A  2906               	goto	u2515
  7083  010B  0836               	movf	??___ftdiv,w
  7084  010C  00B9               	movwf	??___ftdiv+3
  7085  010D  0839               	movf	??___ftdiv+3,w
  7086  010E  00BF               	movwf	___ftdiv@sign
  7087  010F  0830               	movf	___ftdiv@f2,w
  7088  0110  00B6               	movwf	??___ftdiv
  7089  0111  0831               	movf	___ftdiv@f2+1,w
  7090  0112  00B7               	movwf	??___ftdiv+1
  7091  0113  0832               	movf	___ftdiv@f2+2,w
  7092  0114  00B8               	movwf	??___ftdiv+2
  7093  0115  3010               	movlw	16
  7094  0116                     u2525:	
  7095  0116  36B8               	lsrf	??___ftdiv+2,f
  7096  0117  0CB7               	rrf	??___ftdiv+1,f
  7097  0118  0CB6               	rrf	??___ftdiv,f
  7098  0119  0B89               	decfsz	9,f
  7099  011A  2916               	goto	u2525
  7100  011B  0836               	movf	??___ftdiv,w
  7101  011C  00B9               	movwf	??___ftdiv+3
  7102  011D  0839               	movf	??___ftdiv+3,w
  7103  011E  06BF               	xorwf	___ftdiv@sign,f
  7104  011F  3080               	movlw	128
  7105  0120  00B6               	movwf	??___ftdiv
  7106  0121  0836               	movf	??___ftdiv,w
  7107  0122  05BF               	andwf	___ftdiv@sign,f
  7108  0123  17B4               	bsf	___ftdiv@f1+1,7
  7109  0124  30FF               	movlw	255
  7110  0125  05B3               	andwf	___ftdiv@f1,f
  7111  0126  30FF               	movlw	255
  7112  0127  05B4               	andwf	___ftdiv@f1+1,f
  7113  0128  3000               	movlw	0
  7114  0129  05B5               	andwf	___ftdiv@f1+2,f
  7115  012A  17B1               	bsf	___ftdiv@f2+1,7
  7116  012B  30FF               	movlw	255
  7117  012C  05B0               	andwf	___ftdiv@f2,f
  7118  012D  30FF               	movlw	255
  7119  012E  05B1               	andwf	___ftdiv@f2+1,f
  7120  012F  3000               	movlw	0
  7121  0130  05B2               	andwf	___ftdiv@f2+2,f
  7122  0131  3018               	movlw	24
  7123  0132  00B6               	movwf	??___ftdiv
  7124  0133  0836               	movf	??___ftdiv,w
  7125  0134  00BA               	movwf	___ftdiv@cntr
  7126  0135                     l2323:	
  7127  0135  3001               	movlw	1
  7128  0136                     u2535:	
  7129  0136  35BB               	lslf	___ftdiv@f3,f
  7130  0137  0DBC               	rlf	___ftdiv@f3+1,f
  7131  0138  0DBD               	rlf	___ftdiv@f3+2,f
  7132  0139  0B89               	decfsz	9,f
  7133  013A  2936               	goto	u2535
  7134  013B  0832               	movf	___ftdiv@f2+2,w
  7135  013C  0235               	subwf	___ftdiv@f1+2,w
  7136  013D  1D03               	skipz
  7137  013E  2945               	goto	u2545
  7138  013F  0831               	movf	___ftdiv@f2+1,w
  7139  0140  0234               	subwf	___ftdiv@f1+1,w
  7140  0141  1D03               	skipz
  7141  0142  2945               	goto	u2545
  7142  0143  0830               	movf	___ftdiv@f2,w
  7143  0144  0233               	subwf	___ftdiv@f1,w
  7144  0145                     u2545:	
  7145  0145  1C03               	skipc
  7146  0146  294E               	goto	l2331
  7147  0147  0830               	movf	___ftdiv@f2,w
  7148  0148  02B3               	subwf	___ftdiv@f1,f
  7149  0149  0831               	movf	___ftdiv@f2+1,w
  7150  014A  3BB4               	subwfb	___ftdiv@f1+1,f
  7151  014B  0832               	movf	___ftdiv@f2+2,w
  7152  014C  3BB5               	subwfb	___ftdiv@f1+2,f
  7153  014D  143B               	bsf	___ftdiv@f3,0
  7154  014E                     l2331:	
  7155  014E  3001               	movlw	1
  7156  014F                     u2555:	
  7157  014F  35B3               	lslf	___ftdiv@f1,f
  7158  0150  0DB4               	rlf	___ftdiv@f1+1,f
  7159  0151  0DB5               	rlf	___ftdiv@f1+2,f
  7160  0152  0B89               	decfsz	9,f
  7161  0153  294F               	goto	u2555
  7162  0154  3001               	movlw	1
  7163  0155  02BA               	subwf	___ftdiv@cntr,f
  7164  0156  1D03               	btfss	3,2
  7165  0157  2935               	goto	l2323
  7166  0158  083B               	movf	___ftdiv@f3,w
  7167  0159  00F0               	movwf	___ftpack@arg
  7168  015A  083C               	movf	___ftdiv@f3+1,w
  7169  015B  00F1               	movwf	___ftpack@arg+1
  7170  015C  083D               	movf	___ftdiv@f3+2,w
  7171  015D  00F2               	movwf	___ftpack@arg+2
  7172  015E  083E               	movf	___ftdiv@exp,w
  7173  015F  00B6               	movwf	??___ftdiv
  7174  0160  0836               	movf	??___ftdiv,w
  7175  0161  00F3               	movwf	___ftpack@exp
  7176  0162  083F               	movf	___ftdiv@sign,w
  7177  0163  00B7               	movwf	??___ftdiv+1
  7178  0164  0837               	movf	??___ftdiv+1,w
  7179  0165  00F4               	movwf	___ftpack@sign
  7180  0166  318E  269F         	fcall	___ftpack
  7181  0168  0870               	movf	?___ftpack,w
  7182  0169  0020               	movlb	0	; select bank0
  7183  016A  00B0               	movwf	?___ftdiv
  7184  016B  0871               	movf	?___ftpack+1,w
  7185  016C  00B1               	movwf	?___ftdiv+1
  7186  016D  0872               	movf	?___ftpack+2,w
  7187  016E  00B2               	movwf	?___ftdiv+2
  7188  016F  0008               	return
  7189  0170                     __end_of___ftdiv:	
  7190                           
  7191                           	psect	text12
  7192  0E9F                     __ptext12:	
  7193 ;; *************** function ___ftpack *****************
  7194 ;; Defined at:
  7195 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\float.c"
  7196 ;; Parameters:    Size  Location     Type
  7197 ;;  arg             3    0[COMMON] unsigned um
  7198 ;;  exp             1    3[COMMON] unsigned char 
  7199 ;;  sign            1    4[COMMON] unsigned char 
  7200 ;; Auto vars:     Size  Location     Type
  7201 ;;		None
  7202 ;; Return value:  Size  Location     Type
  7203 ;;                  3    0[COMMON] float 
  7204 ;; Registers used:
  7205 ;;		wreg, status,2, status,0
  7206 ;; Tracked objects:
  7207 ;;		On entry : 0/0
  7208 ;;		On exit  : 0/0
  7209 ;;		Unchanged: 0/0
  7210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7211 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7213 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7214 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7215 ;;Total ram usage:        8 bytes
  7216 ;; Hardware stack levels used:    1
  7217 ;; This function calls:
  7218 ;;		Nothing
  7219 ;; This function is called by:
  7220 ;;		___awtoft
  7221 ;;		___ftadd
  7222 ;;		___ftdiv
  7223 ;;		___ftmul
  7224 ;; This function uses a non-reentrant model
  7225 ;;
  7226                           
  7227                           
  7228                           ;psect for function ___ftpack
  7229  0E9F                     ___ftpack:	
  7230                           
  7231                           ;incstack = 0
  7232                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  7233  0E9F  0873               	movf	___ftpack@exp,w
  7234  0EA0  1903               	btfsc	3,2
  7235  0EA1  2EA7               	goto	l1713
  7236  0EA2  0872               	movf	___ftpack@arg+2,w
  7237  0EA3  0471               	iorwf	___ftpack@arg+1,w
  7238  0EA4  0470               	iorwf	___ftpack@arg,w
  7239  0EA5  1D03               	skipz
  7240  0EA6  2EB8               	goto	l1719
  7241  0EA7                     l1713:	
  7242  0EA7  3000               	movlw	0
  7243  0EA8  00F0               	movwf	?___ftpack
  7244  0EA9  3000               	movlw	0
  7245  0EAA  00F1               	movwf	?___ftpack+1
  7246  0EAB  3000               	movlw	0
  7247  0EAC  00F2               	movwf	?___ftpack+2
  7248  0EAD  0008               	return
  7249  0EAE                     l1717:	
  7250  0EAE  3001               	movlw	1
  7251  0EAF  00F5               	movwf	??___ftpack
  7252  0EB0  0875               	movf	??___ftpack,w
  7253  0EB1  07F3               	addwf	___ftpack@exp,f
  7254  0EB2  3001               	movlw	1
  7255  0EB3                     u1515:	
  7256  0EB3  36F2               	lsrf	___ftpack@arg+2,f
  7257  0EB4  0CF1               	rrf	___ftpack@arg+1,f
  7258  0EB5  0CF0               	rrf	___ftpack@arg,f
  7259  0EB6  0B89               	decfsz	9,f
  7260  0EB7  2EB3               	goto	u1515
  7261  0EB8                     l1719:	
  7262  0EB8  30FE               	movlw	254
  7263  0EB9  0572               	andwf	___ftpack@arg+2,w
  7264  0EBA  1903               	btfsc	3,2
  7265  0EBB  2ED1               	goto	l534
  7266  0EBC  2EAE               	goto	l1717
  7267  0EBD                     l1721:	
  7268  0EBD  3001               	movlw	1
  7269  0EBE  00F5               	movwf	??___ftpack
  7270  0EBF  0875               	movf	??___ftpack,w
  7271  0EC0  07F3               	addwf	___ftpack@exp,f
  7272  0EC1  3001               	movlw	1
  7273  0EC2  07F0               	addwf	___ftpack@arg,f
  7274  0EC3  3000               	movlw	0
  7275  0EC4  1803               	skipnc
  7276  0EC5  3001               	movlw	1
  7277  0EC6  07F1               	addwf	___ftpack@arg+1,f
  7278  0EC7  3000               	movlw	0
  7279  0EC8  1803               	skipnc
  7280  0EC9  3001               	movlw	1
  7281  0ECA  07F2               	addwf	___ftpack@arg+2,f
  7282  0ECB  3001               	movlw	1
  7283  0ECC                     u1535:	
  7284  0ECC  36F2               	lsrf	___ftpack@arg+2,f
  7285  0ECD  0CF1               	rrf	___ftpack@arg+1,f
  7286  0ECE  0CF0               	rrf	___ftpack@arg,f
  7287  0ECF  0B89               	decfsz	9,f
  7288  0ED0  2ECC               	goto	u1535
  7289  0ED1                     l534:	
  7290  0ED1  30FF               	movlw	255
  7291  0ED2  0572               	andwf	___ftpack@arg+2,w
  7292  0ED3  1903               	btfsc	3,2
  7293  0ED4  2EDE               	goto	l1729
  7294  0ED5  2EBD               	goto	l1721
  7295  0ED6                     l1727:	
  7296  0ED6  3001               	movlw	1
  7297  0ED7  02F3               	subwf	___ftpack@exp,f
  7298  0ED8  3001               	movlw	1
  7299  0ED9                     u1555:	
  7300  0ED9  35F0               	lslf	___ftpack@arg,f
  7301  0EDA  0DF1               	rlf	___ftpack@arg+1,f
  7302  0EDB  0DF2               	rlf	___ftpack@arg+2,f
  7303  0EDC  0B89               	decfsz	9,f
  7304  0EDD  2ED9               	goto	u1555
  7305  0EDE                     l1729:	
  7306  0EDE  1BF1               	btfsc	___ftpack@arg+1,7
  7307  0EDF  2EE4               	goto	l541
  7308  0EE0  3002               	movlw	2
  7309  0EE1  0273               	subwf	___ftpack@exp,w
  7310  0EE2  1803               	skipnc
  7311  0EE3  2ED6               	goto	l1727
  7312  0EE4                     l541:	
  7313  0EE4  1873               	btfsc	___ftpack@exp,0
  7314  0EE5  2EEC               	goto	l542
  7315  0EE6  30FF               	movlw	255
  7316  0EE7  05F0               	andwf	___ftpack@arg,f
  7317  0EE8  307F               	movlw	127
  7318  0EE9  05F1               	andwf	___ftpack@arg+1,f
  7319  0EEA  30FF               	movlw	255
  7320  0EEB  05F2               	andwf	___ftpack@arg+2,f
  7321  0EEC                     l542:	
  7322  0EEC  1003               	clrc
  7323  0EED  0CF3               	rrf	___ftpack@exp,f
  7324  0EEE  0873               	movf	___ftpack@exp,w
  7325  0EEF  00F5               	movwf	??___ftpack
  7326  0EF0  01F6               	clrf	??___ftpack+1
  7327  0EF1  01F7               	clrf	??___ftpack+2
  7328  0EF2  3010               	movlw	16
  7329  0EF3                     u1595:	
  7330  0EF3  35F5               	lslf	??___ftpack,f
  7331  0EF4  0DF6               	rlf	??___ftpack+1,f
  7332  0EF5  0DF7               	rlf	??___ftpack+2,f
  7333  0EF6  0B89               	decfsz	9,f
  7334  0EF7  2EF3               	goto	u1595
  7335  0EF8  0875               	movf	??___ftpack,w
  7336  0EF9  04F0               	iorwf	___ftpack@arg,f
  7337  0EFA  0876               	movf	??___ftpack+1,w
  7338  0EFB  04F1               	iorwf	___ftpack@arg+1,f
  7339  0EFC  0877               	movf	??___ftpack+2,w
  7340  0EFD  04F2               	iorwf	___ftpack@arg+2,f
  7341  0EFE  0874               	movf	___ftpack@sign,w
  7342  0EFF  1903               	btfsc	3,2
  7343  0F00  0008               	return
  7344  0F01  17F2               	bsf	___ftpack@arg+2,7
  7345  0F02  0008               	return
  7346  0F03                     __end_of___ftpack:	
  7347                           
  7348                           	psect	text13
  7349  0492                     __ptext13:	
  7350 ;; *************** function _readAnalog *****************
  7351 ;; Defined at:
  7352 ;;		line 87 in file "adcc.c"
  7353 ;; Parameters:    Size  Location     Type
  7354 ;;  channel         2    6[BANK0 ] int 
  7355 ;; Auto vars:     Size  Location     Type
  7356 ;;  value           2   11[COMMON] int 
  7357 ;;  analog_chann    2    9[COMMON] int 
  7358 ;; Return value:  Size  Location     Type
  7359 ;;                  2    6[BANK0 ] int 
  7360 ;; Registers used:
  7361 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7362 ;; Tracked objects:
  7363 ;;		On entry : 0/0
  7364 ;;		On exit  : 0/0
  7365 ;;		Unchanged: 0/0
  7366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7367 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7368 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7369 ;;      Temps:          0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7370 ;;      Totals:         4      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7371 ;;Total ram usage:       21 bytes
  7372 ;; Hardware stack levels used:    1
  7373 ;; Hardware stack levels required when called:    1
  7374 ;; This function calls:
  7375 ;;		_ADCRead
  7376 ;;		___aldiv
  7377 ;;		___bmul
  7378 ;; This function is called by:
  7379 ;;		_main
  7380 ;; This function uses a non-reentrant model
  7381 ;;
  7382                           
  7383                           
  7384                           ;psect for function _readAnalog
  7385  0492                     _readAnalog:	
  7386                           
  7387                           ;adcc.c: 89: int value;
  7388                           ;adcc.c: 91: int analog_channel = channels[channel];
  7389                           
  7390                           ;incstack = 0
  7391                           ; Regs used in _readAnalog: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7392  0492  0020               	movlb	0	; select bank0
  7393  0493  3526               	lslf	readAnalog@channel,w
  7394  0494  3EDF               	addlw	(low (_channels| 0))& (0+255)
  7395  0495  0086               	movwf	6
  7396  0496  0187               	clrf	7
  7397  0497  3F40               	moviw [0]fsr1
  7398  0498  00F9               	movwf	readAnalog@analog_channel
  7399  0499  3F41               	moviw [1]fsr1
  7400  049A  00FA               	movwf	readAnalog@analog_channel+1
  7401                           
  7402                           ;adcc.c: 93: value = ADCRead(analog_channel);
  7403  049B  0879               	movf	readAnalog@analog_channel,w
  7404  049C  318B  236E  3184   	fcall	_ADCRead
  7405  049F  0871               	movf	?_ADCRead+1,w
  7406  04A0  00FC               	movwf	readAnalog@value+1
  7407  04A1  0870               	movf	?_ADCRead,w
  7408  04A2  00FB               	movwf	readAnalog@value
  7409                           
  7410                           ;adcc.c: 97: totals[channel] = totals[channel] - samples[channel][sampleIndex];
  7411  04A3  0020               	movlb	0	; select bank0
  7412  04A4  0826               	movf	readAnalog@channel,w
  7413  04A5  00A8               	movwf	??_readAnalog
  7414  04A6  3001               	movlw	1
  7415  04A7                     u2585:	
  7416  04A7  35A8               	lslf	??_readAnalog,f
  7417  04A8  3EFF               	addlw	-1
  7418  04A9  1D03               	skipz
  7419  04AA  2CA7               	goto	u2585
  7420  04AB  3528               	lslf	??_readAnalog,w
  7421  04AC  3EA0               	addlw	(low (_totals| 0))& (0+255)
  7422  04AD  0086               	movwf	6
  7423  04AE  0187               	clrf	7
  7424  04AF  3F40               	moviw [0]fsr1
  7425  04B0  00A9               	movwf	??_readAnalog+1
  7426  04B1  3F41               	moviw [1]fsr1
  7427  04B2  00AA               	movwf	??_readAnalog+2
  7428  04B3  3F42               	moviw [2]fsr1
  7429  04B4  00AB               	movwf	??_readAnalog+3
  7430  04B5  3F43               	moviw [3]fsr1
  7431  04B6  00AC               	movwf	??_readAnalog+4
  7432  04B7  086D               	movf	_sampleIndex,w
  7433  04B8  00AD               	movwf	??_readAnalog+5
  7434  04B9  3001               	movlw	1
  7435  04BA                     u2595:	
  7436  04BA  35AD               	lslf	??_readAnalog+5,f
  7437  04BB  0B89               	decfsz	9,f
  7438  04BC  2CBA               	goto	u2595
  7439  04BD  3006               	movlw	6
  7440  04BE  00AE               	movwf	??_readAnalog+6
  7441  04BF  082E               	movf	??_readAnalog+6,w
  7442  04C0  00F0               	movwf	___bmul@multiplicand
  7443  04C1  0826               	movf	readAnalog@channel,w
  7444  04C2  318B  237C  3184   	fcall	___bmul
  7445  04C5  3E20               	addlw	(low (_samples| (0+256)))& (0+255)
  7446  04C6  0020               	movlb	0	; select bank0
  7447  04C7  072D               	addwf	??_readAnalog+5,w
  7448  04C8  00AF               	movwf	??_readAnalog+7
  7449  04C9  082F               	movf	??_readAnalog+7,w
  7450  04CA  0086               	movwf	6
  7451  04CB  3001               	movlw	1	; select bank2/3
  7452  04CC  0087               	movwf	7
  7453  04CD  3F40               	moviw [0]fsr1
  7454  04CE  00B0               	movwf	??_readAnalog+8
  7455  04CF  3F41               	moviw [1]fsr1
  7456  04D0  00B1               	movwf	??_readAnalog+9
  7457  04D1  0830               	movf	??_readAnalog+8,w
  7458  04D2  00B2               	movwf	??_readAnalog+10
  7459  04D3  0831               	movf	??_readAnalog+9,w
  7460  04D4  00B3               	movwf	??_readAnalog+11
  7461  04D5  01B4               	clrf	??_readAnalog+12
  7462  04D6  01B5               	clrf	??_readAnalog+13
  7463  04D7  09B2               	comf	??_readAnalog+10,f
  7464  04D8  09B3               	comf	??_readAnalog+11,f
  7465  04D9  09B4               	comf	??_readAnalog+12,f
  7466  04DA  09B5               	comf	??_readAnalog+13,f
  7467  04DB  0AB2               	incf	??_readAnalog+10,f
  7468  04DC  1903               	skipnz
  7469  04DD  0AB3               	incf	??_readAnalog+11,f
  7470  04DE  1903               	skipnz
  7471  04DF  0AB4               	incf	??_readAnalog+12,f
  7472  04E0  1903               	skipnz
  7473  04E1  0AB5               	incf	??_readAnalog+13,f
  7474  04E2  0832               	movf	??_readAnalog+10,w
  7475  04E3  07A9               	addwf	??_readAnalog+1,f
  7476  04E4  0833               	movf	??_readAnalog+11,w
  7477  04E5  3DAA               	addwfc	??_readAnalog+2,f
  7478  04E6  0834               	movf	??_readAnalog+12,w
  7479  04E7  3DAB               	addwfc	??_readAnalog+3,f
  7480  04E8  0835               	movf	??_readAnalog+13,w
  7481  04E9  3DAC               	addwfc	??_readAnalog+4,f
  7482  04EA  0826               	movf	readAnalog@channel,w
  7483  04EB  00B6               	movwf	??_readAnalog+14
  7484  04EC  3001               	movlw	1
  7485  04ED                     u2605:	
  7486  04ED  35B6               	lslf	??_readAnalog+14,f
  7487  04EE  3EFF               	addlw	-1
  7488  04EF  1D03               	skipz
  7489  04F0  2CED               	goto	u2605
  7490  04F1  3536               	lslf	??_readAnalog+14,w
  7491  04F2  3EA0               	addlw	(low (_totals| 0))& (0+255)
  7492  04F3  0086               	movwf	6
  7493  04F4  0187               	clrf	7
  7494  04F5  0829               	movf	??_readAnalog+1,w
  7495  04F6  3FC0               	movwi [0]fsr1
  7496  04F7  082A               	movf	??_readAnalog+2,w
  7497  04F8  3FC1               	movwi [1]fsr1
  7498  04F9  082B               	movf	??_readAnalog+3,w
  7499  04FA  3FC2               	movwi [2]fsr1
  7500  04FB  082C               	movf	??_readAnalog+4,w
  7501  04FC  3FC3               	movwi [3]fsr1
  7502                           
  7503                           ;adcc.c: 99: samples[channel][sampleIndex] = value;
  7504  04FD  086D               	movf	_sampleIndex,w
  7505  04FE  00A8               	movwf	??_readAnalog
  7506  04FF  3001               	movlw	1
  7507  0500                     u2615:	
  7508  0500  35A8               	lslf	??_readAnalog,f
  7509  0501  0B89               	decfsz	9,f
  7510  0502  2D00               	goto	u2615
  7511  0503  3006               	movlw	6
  7512  0504  00A9               	movwf	??_readAnalog+1
  7513  0505  0829               	movf	??_readAnalog+1,w
  7514  0506  00F0               	movwf	___bmul@multiplicand
  7515  0507  0826               	movf	readAnalog@channel,w
  7516  0508  318B  237C  3184   	fcall	___bmul
  7517  050B  3E20               	addlw	(low (_samples| (0+256)))& (0+255)
  7518  050C  0020               	movlb	0	; select bank0
  7519  050D  0728               	addwf	??_readAnalog,w
  7520  050E  00AA               	movwf	??_readAnalog+2
  7521  050F  082A               	movf	??_readAnalog+2,w
  7522  0510  0086               	movwf	6
  7523  0511  3001               	movlw	1	; select bank2/3
  7524  0512  0087               	movwf	7
  7525  0513  087B               	movf	readAnalog@value,w
  7526  0514  3FC0               	movwi [0]fsr1
  7527  0515  087C               	movf	readAnalog@value+1,w
  7528  0516  3FC1               	movwi [1]fsr1
  7529                           
  7530                           ;adcc.c: 101: totals[channel] = totals[channel] + samples[channel][sampleIndex];
  7531  0517  0826               	movf	readAnalog@channel,w
  7532  0518  00A8               	movwf	??_readAnalog
  7533  0519  3001               	movlw	1
  7534  051A                     u2625:	
  7535  051A  35A8               	lslf	??_readAnalog,f
  7536  051B  3EFF               	addlw	-1
  7537  051C  1D03               	skipz
  7538  051D  2D1A               	goto	u2625
  7539  051E  3528               	lslf	??_readAnalog,w
  7540  051F  3EA0               	addlw	(low (_totals| 0))& (0+255)
  7541  0520  0086               	movwf	6
  7542  0521  0187               	clrf	7
  7543  0522  3F40               	moviw [0]fsr1
  7544  0523  00A9               	movwf	??_readAnalog+1
  7545  0524  3F41               	moviw [1]fsr1
  7546  0525  00AA               	movwf	??_readAnalog+2
  7547  0526  3F42               	moviw [2]fsr1
  7548  0527  00AB               	movwf	??_readAnalog+3
  7549  0528  3F43               	moviw [3]fsr1
  7550  0529  00AC               	movwf	??_readAnalog+4
  7551  052A  086D               	movf	_sampleIndex,w
  7552  052B  00AD               	movwf	??_readAnalog+5
  7553  052C  3001               	movlw	1
  7554  052D                     u2635:	
  7555  052D  35AD               	lslf	??_readAnalog+5,f
  7556  052E  0B89               	decfsz	9,f
  7557  052F  2D2D               	goto	u2635
  7558  0530  3006               	movlw	6
  7559  0531  00AE               	movwf	??_readAnalog+6
  7560  0532  082E               	movf	??_readAnalog+6,w
  7561  0533  00F0               	movwf	___bmul@multiplicand
  7562  0534  0826               	movf	readAnalog@channel,w
  7563  0535  318B  237C  3184   	fcall	___bmul
  7564  0538  3E20               	addlw	(low (_samples| (0+256)))& (0+255)
  7565  0539  0020               	movlb	0	; select bank0
  7566  053A  072D               	addwf	??_readAnalog+5,w
  7567  053B  00AF               	movwf	??_readAnalog+7
  7568  053C  082F               	movf	??_readAnalog+7,w
  7569  053D  0086               	movwf	6
  7570  053E  3001               	movlw	1	; select bank2/3
  7571  053F  0087               	movwf	7
  7572  0540  3F40               	moviw [0]fsr1
  7573  0541  00B0               	movwf	??_readAnalog+8
  7574  0542  3F41               	moviw [1]fsr1
  7575  0543  00B1               	movwf	??_readAnalog+9
  7576  0544  0830               	movf	??_readAnalog+8,w
  7577  0545  00B2               	movwf	??_readAnalog+10
  7578  0546  0831               	movf	??_readAnalog+9,w
  7579  0547  00B3               	movwf	??_readAnalog+11
  7580  0548  01B4               	clrf	??_readAnalog+12
  7581  0549  01B5               	clrf	??_readAnalog+13
  7582  054A  0832               	movf	??_readAnalog+10,w
  7583  054B  07A9               	addwf	??_readAnalog+1,f
  7584  054C  0833               	movf	??_readAnalog+11,w
  7585  054D  3DAA               	addwfc	??_readAnalog+2,f
  7586  054E  0834               	movf	??_readAnalog+12,w
  7587  054F  3DAB               	addwfc	??_readAnalog+3,f
  7588  0550  0835               	movf	??_readAnalog+13,w
  7589  0551  3DAC               	addwfc	??_readAnalog+4,f
  7590  0552  0826               	movf	readAnalog@channel,w
  7591  0553  00B6               	movwf	??_readAnalog+14
  7592  0554  3001               	movlw	1
  7593  0555                     u2645:	
  7594  0555  35B6               	lslf	??_readAnalog+14,f
  7595  0556  3EFF               	addlw	-1
  7596  0557  1D03               	skipz
  7597  0558  2D55               	goto	u2645
  7598  0559  3536               	lslf	??_readAnalog+14,w
  7599  055A  3EA0               	addlw	(low (_totals| 0))& (0+255)
  7600  055B  0086               	movwf	6
  7601  055C  0187               	clrf	7
  7602  055D  0829               	movf	??_readAnalog+1,w
  7603  055E  3FC0               	movwi [0]fsr1
  7604  055F  082A               	movf	??_readAnalog+2,w
  7605  0560  3FC1               	movwi [1]fsr1
  7606  0561  082B               	movf	??_readAnalog+3,w
  7607  0562  3FC2               	movwi [2]fsr1
  7608  0563  082C               	movf	??_readAnalog+4,w
  7609  0564  3FC3               	movwi [3]fsr1
  7610                           
  7611                           ;adcc.c: 103: if(channel>4)
  7612  0565  0827               	movf	readAnalog@channel+1,w
  7613  0566  3A80               	xorlw	128
  7614  0567  00A8               	movwf	??_readAnalog
  7615  0568  3080               	movlw	128
  7616  0569  0228               	subwf	??_readAnalog,w
  7617  056A  1D03               	skipz
  7618  056B  2D6E               	goto	u2655
  7619  056C  3005               	movlw	5
  7620  056D  0226               	subwf	readAnalog@channel,w
  7621  056E                     u2655:	
  7622  056E  1C03               	skipc
  7623  056F  2D7E               	goto	l2361
  7624                           
  7625                           ;adcc.c: 104: {
  7626                           ;adcc.c: 105: sampleIndex += 1;
  7627  0570  3001               	movlw	1
  7628  0571  0020               	movlb	0	; select bank0
  7629  0572  07ED               	addwf	_sampleIndex,f
  7630  0573  3000               	movlw	0
  7631  0574  3DEE               	addwfc	_sampleIndex+1,f
  7632                           
  7633                           ;adcc.c: 107: if(sampleIndex >= 3)
  7634  0575  3000               	movlw	0
  7635  0576  026E               	subwf	_sampleIndex+1,w
  7636  0577  3003               	movlw	3
  7637  0578  1903               	skipnz
  7638  0579  026D               	subwf	_sampleIndex,w
  7639  057A  1C03               	skipc
  7640  057B  2D7E               	goto	l2361
  7641                           
  7642                           ;adcc.c: 108: {
  7643                           ;adcc.c: 109: sampleIndex = 0;
  7644  057C  01ED               	clrf	_sampleIndex
  7645  057D  01EE               	clrf	_sampleIndex+1
  7646  057E                     l2361:	
  7647                           
  7648                           ;adcc.c: 110: }
  7649                           ;adcc.c: 111: }
  7650                           ;adcc.c: 113: value = totals[channel] / 3;
  7651  057E  3000               	movlw	0
  7652  057F  00F3               	movwf	___aldiv@divisor+3
  7653  0580  3000               	movlw	0
  7654  0581  00F2               	movwf	___aldiv@divisor+2
  7655  0582  3000               	movlw	0
  7656  0583  00F1               	movwf	___aldiv@divisor+1
  7657  0584  3003               	movlw	3
  7658  0585  00F0               	movwf	___aldiv@divisor
  7659  0586  0020               	movlb	0	; select bank0
  7660  0587  0826               	movf	readAnalog@channel,w
  7661  0588  00A8               	movwf	??_readAnalog
  7662  0589  3001               	movlw	1
  7663  058A                     u2675:	
  7664  058A  35A8               	lslf	??_readAnalog,f
  7665  058B  3EFF               	addlw	-1
  7666  058C  1D03               	skipz
  7667  058D  2D8A               	goto	u2675
  7668  058E  3528               	lslf	??_readAnalog,w
  7669  058F  3EA0               	addlw	(low (_totals| 0))& (0+255)
  7670  0590  0086               	movwf	6
  7671  0591  0187               	clrf	7
  7672  0592  3F40               	moviw [0]fsr1
  7673  0593  00F4               	movwf	___aldiv@dividend
  7674  0594  3F41               	moviw [1]fsr1
  7675  0595  00F5               	movwf	___aldiv@dividend+1
  7676  0596  3F42               	moviw [2]fsr1
  7677  0597  00F6               	movwf	___aldiv@dividend+2
  7678  0598  3F43               	moviw [3]fsr1
  7679  0599  00F7               	movwf	___aldiv@dividend+3
  7680  059A  318F  277E         	fcall	___aldiv
  7681  059C  0871               	movf	?___aldiv+1,w
  7682  059D  00FC               	movwf	readAnalog@value+1
  7683  059E  0870               	movf	?___aldiv,w
  7684  059F  00FB               	movwf	readAnalog@value
  7685                           
  7686                           ;adcc.c: 115: return value;
  7687  05A0  087C               	movf	readAnalog@value+1,w
  7688  05A1  0020               	movlb	0	; select bank0
  7689  05A2  00A7               	movwf	?_readAnalog+1
  7690  05A3  087B               	movf	readAnalog@value,w
  7691  05A4  00A6               	movwf	?_readAnalog
  7692  05A5  0008               	return
  7693  05A6                     __end_of_readAnalog:	
  7694                           
  7695                           	psect	text14
  7696  0B7C                     __ptext14:	
  7697 ;; *************** function ___bmul *****************
  7698 ;; Defined at:
  7699 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul8.c"
  7700 ;; Parameters:    Size  Location     Type
  7701 ;;  multiplier      1    wreg     unsigned char 
  7702 ;;  multiplicand    1    0[COMMON] unsigned char 
  7703 ;; Auto vars:     Size  Location     Type
  7704 ;;  multiplier      1    3[COMMON] unsigned char 
  7705 ;;  product         1    2[COMMON] unsigned char 
  7706 ;; Return value:  Size  Location     Type
  7707 ;;                  1    wreg      unsigned char 
  7708 ;; Registers used:
  7709 ;;		wreg, status,2, status,0
  7710 ;; Tracked objects:
  7711 ;;		On entry : 0/0
  7712 ;;		On exit  : 0/0
  7713 ;;		Unchanged: 0/0
  7714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7715 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7716 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7717 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7718 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7719 ;;Total ram usage:        4 bytes
  7720 ;; Hardware stack levels used:    1
  7721 ;; This function calls:
  7722 ;;		Nothing
  7723 ;; This function is called by:
  7724 ;;		_readAnalog
  7725 ;; This function uses a non-reentrant model
  7726 ;;
  7727                           
  7728                           
  7729                           ;psect for function ___bmul
  7730  0B7C                     ___bmul:	
  7731                           
  7732                           ;incstack = 0
  7733                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  7734                           ;___bmul@multiplier stored from wreg
  7735  0B7C  00F3               	movwf	___bmul@multiplier
  7736  0B7D  01F2               	clrf	___bmul@product
  7737  0B7E                     l2163:	
  7738  0B7E  1C73               	btfss	___bmul@multiplier,0
  7739  0B7F  2B84               	goto	l2167
  7740  0B80  0870               	movf	___bmul@multiplicand,w
  7741  0B81  00F1               	movwf	??___bmul
  7742  0B82  0871               	movf	??___bmul,w
  7743  0B83  07F2               	addwf	___bmul@product,f
  7744  0B84                     l2167:	
  7745  0B84  1003               	clrc
  7746  0B85  0DF0               	rlf	___bmul@multiplicand,f
  7747  0B86  1003               	clrc
  7748  0B87  0CF3               	rrf	___bmul@multiplier,f
  7749  0B88  0873               	movf	___bmul@multiplier,w
  7750  0B89  1D03               	btfss	3,2
  7751  0B8A  2B7E               	goto	l2163
  7752  0B8B  0872               	movf	___bmul@product,w
  7753  0B8C  0008               	return
  7754  0B8D                     __end_of___bmul:	
  7755                           
  7756                           	psect	text15
  7757  0F7E                     __ptext15:	
  7758 ;; *************** function ___aldiv *****************
  7759 ;; Defined at:
  7760 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\aldiv.c"
  7761 ;; Parameters:    Size  Location     Type
  7762 ;;  divisor         4    0[COMMON] long 
  7763 ;;  dividend        4    4[COMMON] long 
  7764 ;; Auto vars:     Size  Location     Type
  7765 ;;  quotient        4    2[BANK0 ] long 
  7766 ;;  sign            1    1[BANK0 ] unsigned char 
  7767 ;;  counter         1    0[BANK0 ] unsigned char 
  7768 ;; Return value:  Size  Location     Type
  7769 ;;                  4    0[COMMON] long 
  7770 ;; Registers used:
  7771 ;;		wreg, status,2, status,0
  7772 ;; Tracked objects:
  7773 ;;		On entry : 0/0
  7774 ;;		On exit  : 0/0
  7775 ;;		Unchanged: 0/0
  7776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7777 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7778 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7779 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7780 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7781 ;;Total ram usage:       15 bytes
  7782 ;; Hardware stack levels used:    1
  7783 ;; This function calls:
  7784 ;;		Nothing
  7785 ;; This function is called by:
  7786 ;;		_readAnalog
  7787 ;; This function uses a non-reentrant model
  7788 ;;
  7789                           
  7790                           
  7791                           ;psect for function ___aldiv
  7792  0F7E                     ___aldiv:	
  7793                           
  7794                           ;incstack = 0
  7795                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  7796  0F7E  0020               	movlb	0	; select bank0
  7797  0F7F  01A1               	clrf	___aldiv@sign
  7798  0F80  1FF3               	btfss	___aldiv@divisor+3,7
  7799  0F81  2F8F               	goto	l428
  7800  0F82  09F0               	comf	___aldiv@divisor,f
  7801  0F83  09F1               	comf	___aldiv@divisor+1,f
  7802  0F84  09F2               	comf	___aldiv@divisor+2,f
  7803  0F85  09F3               	comf	___aldiv@divisor+3,f
  7804  0F86  0AF0               	incf	___aldiv@divisor,f
  7805  0F87  1903               	skipnz
  7806  0F88  0AF1               	incf	___aldiv@divisor+1,f
  7807  0F89  1903               	skipnz
  7808  0F8A  0AF2               	incf	___aldiv@divisor+2,f
  7809  0F8B  1903               	skipnz
  7810  0F8C  0AF3               	incf	___aldiv@divisor+3,f
  7811  0F8D  01A1               	clrf	___aldiv@sign
  7812  0F8E  0AA1               	incf	___aldiv@sign,f
  7813  0F8F                     l428:	
  7814  0F8F  1FF7               	btfss	___aldiv@dividend+3,7
  7815  0F90  2FA0               	goto	l2185
  7816  0F91  09F4               	comf	___aldiv@dividend,f
  7817  0F92  09F5               	comf	___aldiv@dividend+1,f
  7818  0F93  09F6               	comf	___aldiv@dividend+2,f
  7819  0F94  09F7               	comf	___aldiv@dividend+3,f
  7820  0F95  0AF4               	incf	___aldiv@dividend,f
  7821  0F96  1903               	skipnz
  7822  0F97  0AF5               	incf	___aldiv@dividend+1,f
  7823  0F98  1903               	skipnz
  7824  0F99  0AF6               	incf	___aldiv@dividend+2,f
  7825  0F9A  1903               	skipnz
  7826  0F9B  0AF7               	incf	___aldiv@dividend+3,f
  7827  0F9C  3001               	movlw	1
  7828  0F9D  00F8               	movwf	??___aldiv
  7829  0F9E  0878               	movf	??___aldiv,w
  7830  0F9F  06A1               	xorwf	___aldiv@sign,f
  7831  0FA0                     l2185:	
  7832  0FA0  3000               	movlw	0
  7833  0FA1  00A5               	movwf	___aldiv@quotient+3
  7834  0FA2  3000               	movlw	0
  7835  0FA3  00A4               	movwf	___aldiv@quotient+2
  7836  0FA4  3000               	movlw	0
  7837  0FA5  00A3               	movwf	___aldiv@quotient+1
  7838  0FA6  3000               	movlw	0
  7839  0FA7  00A2               	movwf	___aldiv@quotient
  7840  0FA8  0873               	movf	___aldiv@divisor+3,w
  7841  0FA9  0472               	iorwf	___aldiv@divisor+2,w
  7842  0FAA  0471               	iorwf	___aldiv@divisor+1,w
  7843  0FAB  0470               	iorwf	___aldiv@divisor,w
  7844  0FAC  1903               	skipnz
  7845  0FAD  2FE9               	goto	l2207
  7846  0FAE  01A0               	clrf	___aldiv@counter
  7847  0FAF  0AA0               	incf	___aldiv@counter,f
  7848  0FB0                     l2193:	
  7849  0FB0  1BF3               	btfsc	___aldiv@divisor+3,7
  7850  0FB1  2FBE               	goto	l2195
  7851  0FB2  3001               	movlw	1
  7852  0FB3                     u2235:	
  7853  0FB3  35F0               	lslf	___aldiv@divisor,f
  7854  0FB4  0DF1               	rlf	___aldiv@divisor+1,f
  7855  0FB5  0DF2               	rlf	___aldiv@divisor+2,f
  7856  0FB6  0DF3               	rlf	___aldiv@divisor+3,f
  7857  0FB7  0B89               	decfsz	9,f
  7858  0FB8  2FB3               	goto	u2235
  7859  0FB9  3001               	movlw	1
  7860  0FBA  00F8               	movwf	??___aldiv
  7861  0FBB  0878               	movf	??___aldiv,w
  7862  0FBC  07A0               	addwf	___aldiv@counter,f
  7863  0FBD  2FB0               	goto	l2193
  7864  0FBE                     l2195:	
  7865  0FBE  3001               	movlw	1
  7866  0FBF                     u2255:	
  7867  0FBF  35A2               	lslf	___aldiv@quotient,f
  7868  0FC0  0DA3               	rlf	___aldiv@quotient+1,f
  7869  0FC1  0DA4               	rlf	___aldiv@quotient+2,f
  7870  0FC2  0DA5               	rlf	___aldiv@quotient+3,f
  7871  0FC3  0B89               	decfsz	9,f
  7872  0FC4  2FBF               	goto	u2255
  7873  0FC5  0873               	movf	___aldiv@divisor+3,w
  7874  0FC6  0277               	subwf	___aldiv@dividend+3,w
  7875  0FC7  1D03               	skipz
  7876  0FC8  2FD3               	goto	u2265
  7877  0FC9  0872               	movf	___aldiv@divisor+2,w
  7878  0FCA  0276               	subwf	___aldiv@dividend+2,w
  7879  0FCB  1D03               	skipz
  7880  0FCC  2FD3               	goto	u2265
  7881  0FCD  0871               	movf	___aldiv@divisor+1,w
  7882  0FCE  0275               	subwf	___aldiv@dividend+1,w
  7883  0FCF  1D03               	skipz
  7884  0FD0  2FD3               	goto	u2265
  7885  0FD1  0870               	movf	___aldiv@divisor,w
  7886  0FD2  0274               	subwf	___aldiv@dividend,w
  7887  0FD3                     u2265:	
  7888  0FD3  1C03               	skipc
  7889  0FD4  2FDE               	goto	l2203
  7890  0FD5  0870               	movf	___aldiv@divisor,w
  7891  0FD6  02F4               	subwf	___aldiv@dividend,f
  7892  0FD7  0871               	movf	___aldiv@divisor+1,w
  7893  0FD8  3BF5               	subwfb	___aldiv@dividend+1,f
  7894  0FD9  0872               	movf	___aldiv@divisor+2,w
  7895  0FDA  3BF6               	subwfb	___aldiv@dividend+2,f
  7896  0FDB  0873               	movf	___aldiv@divisor+3,w
  7897  0FDC  3BF7               	subwfb	___aldiv@dividend+3,f
  7898  0FDD  1422               	bsf	___aldiv@quotient,0
  7899  0FDE                     l2203:	
  7900  0FDE  3001               	movlw	1
  7901  0FDF                     u2275:	
  7902  0FDF  36F3               	lsrf	___aldiv@divisor+3,f
  7903  0FE0  0CF2               	rrf	___aldiv@divisor+2,f
  7904  0FE1  0CF1               	rrf	___aldiv@divisor+1,f
  7905  0FE2  0CF0               	rrf	___aldiv@divisor,f
  7906  0FE3  0B89               	decfsz	9,f
  7907  0FE4  2FDF               	goto	u2275
  7908  0FE5  3001               	movlw	1
  7909  0FE6  02A0               	subwf	___aldiv@counter,f
  7910  0FE7  1D03               	btfss	3,2
  7911  0FE8  2FBE               	goto	l2195
  7912  0FE9                     l2207:	
  7913  0FE9  0821               	movf	___aldiv@sign,w
  7914  0FEA  1903               	btfsc	3,2
  7915  0FEB  2FF7               	goto	l2211
  7916  0FEC  09A2               	comf	___aldiv@quotient,f
  7917  0FED  09A3               	comf	___aldiv@quotient+1,f
  7918  0FEE  09A4               	comf	___aldiv@quotient+2,f
  7919  0FEF  09A5               	comf	___aldiv@quotient+3,f
  7920  0FF0  0AA2               	incf	___aldiv@quotient,f
  7921  0FF1  1903               	skipnz
  7922  0FF2  0AA3               	incf	___aldiv@quotient+1,f
  7923  0FF3  1903               	skipnz
  7924  0FF4  0AA4               	incf	___aldiv@quotient+2,f
  7925  0FF5  1903               	skipnz
  7926  0FF6  0AA5               	incf	___aldiv@quotient+3,f
  7927  0FF7                     l2211:	
  7928  0FF7  0825               	movf	___aldiv@quotient+3,w
  7929  0FF8  00F3               	movwf	?___aldiv+3
  7930  0FF9  0824               	movf	___aldiv@quotient+2,w
  7931  0FFA  00F2               	movwf	?___aldiv+2
  7932  0FFB  0823               	movf	___aldiv@quotient+1,w
  7933  0FFC  00F1               	movwf	?___aldiv+1
  7934  0FFD  0822               	movf	___aldiv@quotient,w
  7935  0FFE  00F0               	movwf	?___aldiv
  7936  0FFF  0008               	return
  7937  1000                     __end_of___aldiv:	
  7938                           
  7939                           	psect	text16
  7940  0B6E                     __ptext16:	
  7941 ;; *************** function _ADCRead *****************
  7942 ;; Defined at:
  7943 ;;		line 64 in file "adcc.c"
  7944 ;; Parameters:    Size  Location     Type
  7945 ;;  channel         1    wreg     enum E13559
  7946 ;; Auto vars:     Size  Location     Type
  7947 ;;  channel         1    3[COMMON] enum E13559
  7948 ;; Return value:  Size  Location     Type
  7949 ;;                  2    0[COMMON] unsigned int 
  7950 ;; Registers used:
  7951 ;;		wreg
  7952 ;; Tracked objects:
  7953 ;;		On entry : 0/0
  7954 ;;		On exit  : 0/0
  7955 ;;		Unchanged: 0/0
  7956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7957 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7958 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7960 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7961 ;;Total ram usage:        4 bytes
  7962 ;; Hardware stack levels used:    1
  7963 ;; This function calls:
  7964 ;;		Nothing
  7965 ;; This function is called by:
  7966 ;;		_readAnalog
  7967 ;; This function uses a non-reentrant model
  7968 ;;
  7969                           
  7970                           
  7971                           ;psect for function _ADCRead
  7972  0B6E                     _ADCRead:	
  7973                           
  7974                           ;incstack = 0
  7975                           ; Regs used in _ADCRead: [wreg]
  7976                           ;ADCRead@channel stored from wreg
  7977  0B6E  00F3               	movwf	ADCRead@channel
  7978                           
  7979                           ;adcc.c: 67: ADPCH = channel;
  7980  0B6F  0873               	movf	ADCRead@channel,w
  7981  0B70  0021               	movlb	1	; select bank1
  7982  0B71  009E               	movwf	30	;volatile
  7983                           
  7984                           ;adcc.c: 70: ADCON0bits.ADON = 1;
  7985  0B72  1793               	bsf	19,7	;volatile
  7986                           
  7987                           ;adcc.c: 73: ADCON0bits.ADCONT = 0;
  7988  0B73  1313               	bcf	19,6	;volatile
  7989                           
  7990                           ;adcc.c: 76: ADCON0bits.ADGO = 1;
  7991  0B74  1413               	bsf	19,0	;volatile
  7992  0B75                     l58:	
  7993                           ;adcc.c: 80: {
  7994                           
  7995                           ;adcc.c: 79: while (ADCON0bits.ADGO)
  7996                           
  7997  0B75  1813               	btfsc	19,0	;volatile
  7998  0B76  2B75               	goto	l58
  7999                           
  8000                           ;adcc.c: 81: }
  8001                           ;adcc.c: 84: return ((ADRESH << 8) + ADRESL);
  8002  0B77  080D               	movf	13,w	;volatile
  8003  0B78  00F1               	movwf	?_ADCRead+1
  8004  0B79  080C               	movf	12,w	;volatile
  8005  0B7A  00F0               	movwf	?_ADCRead
  8006  0B7B  0008               	return
  8007  0B7C                     __end_of_ADCRead:	
  8008                           
  8009                           	psect	text17
  8010  0041                     __ptext17:	
  8011 ;; *************** function ___fttol *****************
  8012 ;; Defined at:
  8013 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fttol.c"
  8014 ;; Parameters:    Size  Location     Type
  8015 ;;  f1              3    0[COMMON] float 
  8016 ;; Auto vars:     Size  Location     Type
  8017 ;;  lval            4    9[COMMON] unsigned long 
  8018 ;;  exp1            1   13[COMMON] unsigned char 
  8019 ;;  sign1           1    8[COMMON] unsigned char 
  8020 ;; Return value:  Size  Location     Type
  8021 ;;                  4    0[COMMON] long 
  8022 ;; Registers used:
  8023 ;;		wreg, status,2, status,0
  8024 ;; Tracked objects:
  8025 ;;		On entry : 0/0
  8026 ;;		On exit  : 0/0
  8027 ;;		Unchanged: 0/0
  8028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8029 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8030 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8031 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8032 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8033 ;;Total ram usage:       14 bytes
  8034 ;; Hardware stack levels used:    1
  8035 ;; This function calls:
  8036 ;;		Nothing
  8037 ;; This function is called by:
  8038 ;;		_main
  8039 ;; This function uses a non-reentrant model
  8040 ;;
  8041                           
  8042                           
  8043                           ;psect for function ___fttol
  8044  0041                     ___fttol:	
  8045                           
  8046                           ;incstack = 0
  8047                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  8048  0041  0870               	movf	___fttol@f1,w
  8049  0042  00F4               	movwf	??___fttol
  8050  0043  0871               	movf	___fttol@f1+1,w
  8051  0044  00F5               	movwf	??___fttol+1
  8052  0045  0872               	movf	___fttol@f1+2,w
  8053  0046  00F6               	movwf	??___fttol+2
  8054  0047  1003               	clrc
  8055  0048  0D75               	rlf	??___fttol+1,w
  8056  0049  0D76               	rlf	??___fttol+2,w
  8057  004A  00F7               	movwf	??___fttol+3
  8058  004B  0877               	movf	??___fttol+3,w
  8059  004C  00FD               	movwf	___fttol@exp1
  8060  004D  087D               	movf	___fttol@exp1,w
  8061  004E  1D03               	btfss	3,2
  8062  004F  2859               	goto	l2495
  8063  0050  3000               	movlw	0
  8064  0051  00F3               	movwf	?___fttol+3
  8065  0052  3000               	movlw	0
  8066  0053  00F2               	movwf	?___fttol+2
  8067  0054  3000               	movlw	0
  8068  0055  00F1               	movwf	?___fttol+1
  8069  0056  3000               	movlw	0
  8070  0057  00F0               	movwf	?___fttol
  8071  0058  0008               	return
  8072  0059                     l2495:	
  8073  0059  0870               	movf	___fttol@f1,w
  8074  005A  00F4               	movwf	??___fttol
  8075  005B  0871               	movf	___fttol@f1+1,w
  8076  005C  00F5               	movwf	??___fttol+1
  8077  005D  0872               	movf	___fttol@f1+2,w
  8078  005E  00F6               	movwf	??___fttol+2
  8079  005F  3017               	movlw	23
  8080  0060                     u2845:	
  8081  0060  36F6               	lsrf	??___fttol+2,f
  8082  0061  0CF5               	rrf	??___fttol+1,f
  8083  0062  0CF4               	rrf	??___fttol,f
  8084  0063  0B89               	decfsz	9,f
  8085  0064  2860               	goto	u2845
  8086  0065  0874               	movf	??___fttol,w
  8087  0066  00F7               	movwf	??___fttol+3
  8088  0067  0877               	movf	??___fttol+3,w
  8089  0068  00F8               	movwf	___fttol@sign1
  8090  0069  17F1               	bsf	___fttol@f1+1,7
  8091  006A  30FF               	movlw	255
  8092  006B  05F0               	andwf	___fttol@f1,f
  8093  006C  30FF               	movlw	255
  8094  006D  05F1               	andwf	___fttol@f1+1,f
  8095  006E  3000               	movlw	0
  8096  006F  05F2               	andwf	___fttol@f1+2,f
  8097  0070  0870               	movf	___fttol@f1,w
  8098  0071  00F9               	movwf	___fttol@lval
  8099  0072  0871               	movf	___fttol@f1+1,w
  8100  0073  00FA               	movwf	___fttol@lval+1
  8101  0074  0872               	movf	___fttol@f1+2,w
  8102  0075  00FB               	movwf	___fttol@lval+2
  8103  0076  01FC               	clrf	___fttol@lval+3
  8104  0077  308E               	movlw	142
  8105  0078  02FD               	subwf	___fttol@exp1,f
  8106  0079  1FFD               	btfss	___fttol@exp1,7
  8107  007A  2897               	goto	l2515
  8108  007B  087D               	movf	___fttol@exp1,w
  8109  007C  3A80               	xorlw	128
  8110  007D  3E8F               	addlw	143
  8111  007E  1803               	skipnc
  8112  007F  2889               	goto	l2513
  8113  0080  3000               	movlw	0
  8114  0081  00F3               	movwf	?___fttol+3
  8115  0082  3000               	movlw	0
  8116  0083  00F2               	movwf	?___fttol+2
  8117  0084  3000               	movlw	0
  8118  0085  00F1               	movwf	?___fttol+1
  8119  0086  3000               	movlw	0
  8120  0087  00F0               	movwf	?___fttol
  8121  0088  0008               	return
  8122  0089                     l2513:	
  8123  0089  3001               	movlw	1
  8124  008A                     u2875:	
  8125  008A  36FC               	lsrf	___fttol@lval+3,f
  8126  008B  0CFB               	rrf	___fttol@lval+2,f
  8127  008C  0CFA               	rrf	___fttol@lval+1,f
  8128  008D  0CF9               	rrf	___fttol@lval,f
  8129  008E  0B89               	decfsz	9,f
  8130  008F  288A               	goto	u2875
  8131  0090  3001               	movlw	1
  8132  0091  00F4               	movwf	??___fttol
  8133  0092  0874               	movf	??___fttol,w
  8134  0093  07FD               	addwf	___fttol@exp1,f
  8135  0094  1903               	btfsc	3,2
  8136  0095  28B0               	goto	l2523
  8137  0096  2889               	goto	l2513
  8138  0097                     l2515:	
  8139  0097  3018               	movlw	24
  8140  0098  027D               	subwf	___fttol@exp1,w
  8141  0099  1C03               	skipc
  8142  009A  28AD               	goto	l625
  8143  009B  3000               	movlw	0
  8144  009C  00F3               	movwf	?___fttol+3
  8145  009D  3000               	movlw	0
  8146  009E  00F2               	movwf	?___fttol+2
  8147  009F  3000               	movlw	0
  8148  00A0  00F1               	movwf	?___fttol+1
  8149  00A1  3000               	movlw	0
  8150  00A2  00F0               	movwf	?___fttol
  8151  00A3  0008               	return
  8152  00A4                     l2521:	
  8153  00A4  3001               	movlw	1
  8154  00A5                     u2905:	
  8155  00A5  35F9               	lslf	___fttol@lval,f
  8156  00A6  0DFA               	rlf	___fttol@lval+1,f
  8157  00A7  0DFB               	rlf	___fttol@lval+2,f
  8158  00A8  0DFC               	rlf	___fttol@lval+3,f
  8159  00A9  0B89               	decfsz	9,f
  8160  00AA  28A5               	goto	u2905
  8161  00AB  3001               	movlw	1
  8162  00AC  02FD               	subwf	___fttol@exp1,f
  8163  00AD                     l625:	
  8164  00AD  087D               	movf	___fttol@exp1,w
  8165  00AE  1D03               	btfss	3,2
  8166  00AF  28A4               	goto	l2521
  8167  00B0                     l2523:	
  8168  00B0  0878               	movf	___fttol@sign1,w
  8169  00B1  1903               	btfsc	3,2
  8170  00B2  28BE               	goto	l2527
  8171  00B3  09F9               	comf	___fttol@lval,f
  8172  00B4  09FA               	comf	___fttol@lval+1,f
  8173  00B5  09FB               	comf	___fttol@lval+2,f
  8174  00B6  09FC               	comf	___fttol@lval+3,f
  8175  00B7  0AF9               	incf	___fttol@lval,f
  8176  00B8  1903               	skipnz
  8177  00B9  0AFA               	incf	___fttol@lval+1,f
  8178  00BA  1903               	skipnz
  8179  00BB  0AFB               	incf	___fttol@lval+2,f
  8180  00BC  1903               	skipnz
  8181  00BD  0AFC               	incf	___fttol@lval+3,f
  8182  00BE                     l2527:	
  8183  00BE  087C               	movf	___fttol@lval+3,w
  8184  00BF  00F3               	movwf	?___fttol+3
  8185  00C0  087B               	movf	___fttol@lval+2,w
  8186  00C1  00F2               	movwf	?___fttol+2
  8187  00C2  087A               	movf	___fttol@lval+1,w
  8188  00C3  00F1               	movwf	?___fttol+1
  8189  00C4  0879               	movf	___fttol@lval,w
  8190  00C5  00F0               	movwf	?___fttol
  8191  00C6  0008               	return
  8192  00C7                     __end_of___fttol:	
  8193                           
  8194                           	psect	text18
  8195  0CF8                     __ptext18:	
  8196 ;; *************** function _SYSTEM_Initialize *****************
  8197 ;; Defined at:
  8198 ;;		line 37 in file "system.c"
  8199 ;; Parameters:    Size  Location     Type
  8200 ;;		None
  8201 ;; Auto vars:     Size  Location     Type
  8202 ;;		None
  8203 ;; Return value:  Size  Location     Type
  8204 ;;                  1    wreg      void 
  8205 ;; Registers used:
  8206 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8207 ;; Tracked objects:
  8208 ;;		On entry : 0/0
  8209 ;;		On exit  : 0/0
  8210 ;;		Unchanged: 0/0
  8211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8214 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8215 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8216 ;;Total ram usage:        2 bytes
  8217 ;; Hardware stack levels used:    1
  8218 ;; Hardware stack levels required when called:    3
  8219 ;; This function calls:
  8220 ;;		_ADCC_Initialize
  8221 ;;		_InitCustomChars
  8222 ;;		_LCD_Clear
  8223 ;;		_LCD_Init
  8224 ;;		_OSCILLATOR_Initialize
  8225 ;;		_PIN_MANAGER_Initialize
  8226 ;;		_PWM6_Initialize
  8227 ;;		_TMR2_Initialize
  8228 ;; This function is called by:
  8229 ;;		_main
  8230 ;; This function uses a non-reentrant model
  8231 ;;
  8232                           
  8233                           
  8234                           ;psect for function _SYSTEM_Initialize
  8235  0CF8                     _SYSTEM_Initialize:	
  8236                           
  8237                           ;system.c: 39: PIN_MANAGER_Initialize();
  8238                           
  8239                           ;incstack = 0
  8240                           ; Regs used in _SYSTEM_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8241  0CF8  318C  24C2  318C   	fcall	_PIN_MANAGER_Initialize
  8242                           
  8243                           ;system.c: 40: OSCILLATOR_Initialize();
  8244  0CFB  318B  2341  318C   	fcall	_OSCILLATOR_Initialize
  8245                           
  8246                           ;system.c: 41: FVRCON = 0x00;
  8247  0CFE  0032               	movlb	18	; select bank18
  8248  0CFF  018C               	clrf	12	;volatile
  8249                           
  8250                           ;system.c: 42: ADCC_Initialize();
  8251  0D00  318B  23FF  318C   	fcall	_ADCC_Initialize
  8252                           
  8253                           ;system.c: 43: PWM6_Initialize();
  8254  0D03  318B  2349  318C   	fcall	_PWM6_Initialize
  8255                           
  8256                           ;system.c: 45: TMR2_Initialize();
  8257  0D06  318B  2360  318C   	fcall	_TMR2_Initialize
  8258                           
  8259                           ;system.c: 46: LCD_Init(0X00);
  8260  0D09  3000               	movlw	0
  8261  0D0A  318F  2703  318C   	fcall	_LCD_Init
  8262                           
  8263                           ;system.c: 47: _delay((unsigned long)((200)*(1000000/4000.0)));
  8264  0D0D  3041               	movlw	65
  8265  0D0E  00F8               	movwf	??_SYSTEM_Initialize+1
  8266  0D0F  30EE               	movlw	238
  8267  0D10  00F7               	movwf	??_SYSTEM_Initialize
  8268  0D11                     u2987:	
  8269  0D11  0BF7               	decfsz	??_SYSTEM_Initialize,f
  8270  0D12  2D11               	goto	u2987
  8271  0D13  0BF8               	decfsz	??_SYSTEM_Initialize+1,f
  8272  0D14  2D11               	goto	u2987
  8273  0D15  0000               	nop
  8274                           
  8275                           ;system.c: 48: LCD_Clear();
  8276  0D16  318B  2339  318C   	fcall	_LCD_Clear
  8277                           
  8278                           ;system.c: 49: _delay((unsigned long)((100)*(1000000/4000.0)));
  8279  0D19  3021               	movlw	33
  8280  0D1A  00F8               	movwf	??_SYSTEM_Initialize+1
  8281  0D1B  3076               	movlw	118
  8282  0D1C  00F7               	movwf	??_SYSTEM_Initialize
  8283  0D1D                     u2997:	
  8284  0D1D  0BF7               	decfsz	??_SYSTEM_Initialize,f
  8285  0D1E  2D1D               	goto	u2997
  8286  0D1F  0BF8               	decfsz	??_SYSTEM_Initialize+1,f
  8287  0D20  2D1D               	goto	u2997
  8288  0D21  0000               	nop
  8289                           
  8290                           ;system.c: 50: InitCustomChars();
  8291  0D22  318C  2472  318C   	fcall	_InitCustomChars
  8292                           
  8293                           ;system.c: 51: _delay((unsigned long)((200)*(1000000/4000.0)));
  8294  0D25  3041               	movlw	65
  8295  0D26  00F8               	movwf	??_SYSTEM_Initialize+1
  8296  0D27  30EE               	movlw	238
  8297  0D28  00F7               	movwf	??_SYSTEM_Initialize
  8298  0D29                     u3007:	
  8299  0D29  0BF7               	decfsz	??_SYSTEM_Initialize,f
  8300  0D2A  2D29               	goto	u3007
  8301  0D2B  0BF8               	decfsz	??_SYSTEM_Initialize+1,f
  8302  0D2C  2D29               	goto	u3007
  8303  0D2D  0000               	nop
  8304  0D2E  0008               	return
  8305  0D2F                     __end_of_SYSTEM_Initialize:	
  8306                           
  8307                           	psect	text19
  8308  0B60                     __ptext19:	
  8309 ;; *************** function _TMR2_Initialize *****************
  8310 ;; Defined at:
  8311 ;;		line 3 in file "tmr2.c"
  8312 ;; Parameters:    Size  Location     Type
  8313 ;;		None
  8314 ;; Auto vars:     Size  Location     Type
  8315 ;;		None
  8316 ;; Return value:  Size  Location     Type
  8317 ;;                  1    wreg      void 
  8318 ;; Registers used:
  8319 ;;		wreg, status,2
  8320 ;; Tracked objects:
  8321 ;;		On entry : 0/0
  8322 ;;		On exit  : 0/0
  8323 ;;		Unchanged: 0/0
  8324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8328 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8329 ;;Total ram usage:        0 bytes
  8330 ;; Hardware stack levels used:    1
  8331 ;; This function calls:
  8332 ;;		Nothing
  8333 ;; This function is called by:
  8334 ;;		_SYSTEM_Initialize
  8335 ;; This function uses a non-reentrant model
  8336 ;;
  8337                           
  8338                           
  8339                           ;psect for function _TMR2_Initialize
  8340  0B60                     _TMR2_Initialize:	
  8341                           
  8342                           ;tmr2.c: 5: T2CON = 0x00;
  8343                           
  8344                           ;incstack = 0
  8345                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  8346  0B60  0025               	movlb	5	; select bank5
  8347  0B61  018E               	clrf	14	;volatile
  8348                           
  8349                           ;tmr2.c: 7: T2CLKCON = 0x01;
  8350  0B62  3001               	movlw	1
  8351  0B63  0090               	movwf	16	;volatile
  8352                           
  8353                           ;tmr2.c: 9: T2HLT = 0x00;
  8354  0B64  018F               	clrf	15	;volatile
  8355                           
  8356                           ;tmr2.c: 11: T2RST = 0x00;
  8357  0B65  0191               	clrf	17	;volatile
  8358                           
  8359                           ;tmr2.c: 13: T2PR = 0xFF;
  8360  0B66  30FF               	movlw	255
  8361  0B67  008D               	movwf	13	;volatile
  8362                           
  8363                           ;tmr2.c: 15: T2TMR = 0x00;
  8364  0B68  018C               	clrf	12	;volatile
  8365                           
  8366                           ;tmr2.c: 17: PIR4bits.TMR2IF = 0;
  8367  0B69  002E               	movlb	14	; select bank14
  8368  0B6A  1090               	bcf	16,1	;volatile
  8369                           
  8370                           ;tmr2.c: 19: T2CONbits.TMR2ON = 1;
  8371  0B6B  0025               	movlb	5	; select bank5
  8372  0B6C  178E               	bsf	14,7	;volatile
  8373  0B6D  0008               	return
  8374  0B6E                     __end_of_TMR2_Initialize:	
  8375                           
  8376                           	psect	text20
  8377  0B49                     __ptext20:	
  8378 ;; *************** function _PWM6_Initialize *****************
  8379 ;; Defined at:
  8380 ;;		line 3 in file "pwm6.c"
  8381 ;; Parameters:    Size  Location     Type
  8382 ;;		None
  8383 ;; Auto vars:     Size  Location     Type
  8384 ;;		None
  8385 ;; Return value:  Size  Location     Type
  8386 ;;                  1    wreg      void 
  8387 ;; Registers used:
  8388 ;;		wreg, status,2, status,0
  8389 ;; Tracked objects:
  8390 ;;		On entry : 0/0
  8391 ;;		On exit  : 0/0
  8392 ;;		Unchanged: 0/0
  8393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8397 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8398 ;;Total ram usage:        0 bytes
  8399 ;; Hardware stack levels used:    1
  8400 ;; This function calls:
  8401 ;;		Nothing
  8402 ;; This function is called by:
  8403 ;;		_SYSTEM_Initialize
  8404 ;; This function uses a non-reentrant model
  8405 ;;
  8406                           
  8407                           
  8408                           ;psect for function _PWM6_Initialize
  8409  0B49                     _PWM6_Initialize:	
  8410                           
  8411                           ;pwm6.c: 5: PWM6CON = 0x80;
  8412                           
  8413                           ;incstack = 0
  8414                           ; Regs used in _PWM6_Initialize: [wreg+status,2+status,0]
  8415  0B49  3080               	movlw	128
  8416  0B4A  0027               	movlb	7	; select bank7
  8417  0B4B  008E               	movwf	14	;volatile
  8418                           
  8419                           ;pwm6.c: 7: PWM6DCH = 0x00;
  8420  0B4C  018D               	clrf	13	;volatile
  8421                           
  8422                           ;pwm6.c: 9: PWM6DCL = 0x00;
  8423  0B4D  018C               	clrf	12	;volatile
  8424                           
  8425                           ;pwm6.c: 11: CCPTMRS1bits.P6TSEL = 0x1;
  8426  0B4E  0024               	movlb	4	; select bank4
  8427  0B4F  081F               	movf	31,w	;volatile
  8428  0B50  39F3               	andlw	-13
  8429  0B51  3804               	iorlw	4
  8430  0B52  009F               	movwf	31	;volatile
  8431  0B53  0008               	return
  8432  0B54                     __end_of_PWM6_Initialize:	
  8433                           
  8434                           	psect	text21
  8435  0CC2                     __ptext21:	
  8436 ;; *************** function _PIN_MANAGER_Initialize *****************
  8437 ;; Defined at:
  8438 ;;		line 5 in file "pin_manager.c"
  8439 ;; Parameters:    Size  Location     Type
  8440 ;;		None
  8441 ;; Auto vars:     Size  Location     Type
  8442 ;;  state           1    0[COMMON] unsigned char 
  8443 ;; Return value:  Size  Location     Type
  8444 ;;                  1    wreg      void 
  8445 ;; Registers used:
  8446 ;;		wreg, status,2
  8447 ;; Tracked objects:
  8448 ;;		On entry : 0/0
  8449 ;;		On exit  : 0/0
  8450 ;;		Unchanged: 0/0
  8451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8453 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8455 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8456 ;;Total ram usage:        1 bytes
  8457 ;; Hardware stack levels used:    1
  8458 ;; This function calls:
  8459 ;;		Nothing
  8460 ;; This function is called by:
  8461 ;;		_SYSTEM_Initialize
  8462 ;; This function uses a non-reentrant model
  8463 ;;
  8464                           
  8465                           
  8466                           ;psect for function _PIN_MANAGER_Initialize
  8467  0CC2                     _PIN_MANAGER_Initialize:	
  8468                           
  8469                           ;pin_manager.c: 7: LATA = 0x00;
  8470                           
  8471                           ;incstack = 0
  8472                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  8473  0CC2  0020               	movlb	0	; select bank0
  8474  0CC3  0196               	clrf	22	;volatile
  8475                           
  8476                           ;pin_manager.c: 8: LATB = 0x00;
  8477  0CC4  0197               	clrf	23	;volatile
  8478                           
  8479                           ;pin_manager.c: 9: LATC = 0x00;
  8480  0CC5  0198               	clrf	24	;volatile
  8481                           
  8482                           ;pin_manager.c: 11: WPUA = 0x02;
  8483  0CC6  3002               	movlw	2
  8484  0CC7  003E               	movlb	30	; select bank30
  8485  0CC8  00B9               	movwf	57	;volatile
  8486                           
  8487                           ;pin_manager.c: 12: WPUB = 0x00;
  8488  0CC9  01C4               	clrf	68	;volatile
  8489                           
  8490                           ;pin_manager.c: 13: WPUC = 0x00;
  8491  0CCA  01CF               	clrf	79	;volatile
  8492                           
  8493                           ;pin_manager.c: 14: WPUE = 0x8;
  8494  0CCB  3008               	movlw	8
  8495  0CCC  00E5               	movwf	101	;volatile
  8496                           
  8497                           ;pin_manager.c: 16: TRISA = 0x02;
  8498  0CCD  3002               	movlw	2
  8499  0CCE  0020               	movlb	0	; select bank0
  8500  0CCF  0091               	movwf	17	;volatile
  8501                           
  8502                           ;pin_manager.c: 17: TRISA = 0x3A;
  8503  0CD0  303A               	movlw	58
  8504  0CD1  0091               	movwf	17	;volatile
  8505                           
  8506                           ;pin_manager.c: 18: TRISB = 0x0A;
  8507  0CD2  300A               	movlw	10
  8508  0CD3  0092               	movwf	18	;volatile
  8509                           
  8510                           ;pin_manager.c: 19: TRISC = 0x10;
  8511  0CD4  3010               	movlw	16
  8512  0CD5  0093               	movwf	19	;volatile
  8513                           
  8514                           ;pin_manager.c: 21: ANSELA = 0x3A;
  8515  0CD6  303A               	movlw	58
  8516  0CD7  003E               	movlb	30	; select bank30
  8517  0CD8  00B8               	movwf	56	;volatile
  8518                           
  8519                           ;pin_manager.c: 22: ANSELB = 0x0A;
  8520  0CD9  300A               	movlw	10
  8521  0CDA  00C3               	movwf	67	;volatile
  8522                           
  8523                           ;pin_manager.c: 23: ANSELC = 0x00;
  8524  0CDB  01CE               	clrf	78	;volatile
  8525                           
  8526                           ;pin_manager.c: 25: PIE0bits.IOCIE = 0;
  8527  0CDC  002E               	movlb	14	; select bank14
  8528  0CDD  1216               	bcf	22,4	;volatile
  8529                           
  8530                           ;pin_manager.c: 26: bool state = GIE;
  8531  0CDE  3000               	movlw	0
  8532  0CDF  1B8B               	btfsc	11,7	;volatile
  8533  0CE0  3001               	movlw	1
  8534  0CE1  00F0               	movwf	PIN_MANAGER_Initialize@state
  8535                           
  8536                           ;pin_manager.c: 27: GIE = 0;
  8537  0CE2  138B               	bcf	11,7	;volatile
  8538                           
  8539                           ;pin_manager.c: 28: PPSLOCK = 0x55;
  8540  0CE3  3055               	movlw	85
  8541  0CE4  003D               	movlb	29	; select bank29
  8542  0CE5  008F               	movwf	15	;volatile
  8543                           
  8544                           ;pin_manager.c: 29: PPSLOCK = 0xAA;
  8545  0CE6  30AA               	movlw	170
  8546  0CE7  008F               	movwf	15	;volatile
  8547                           
  8548                           ;pin_manager.c: 30: PPSLOCKbits.PPSLOCKED = 0x00;
  8549  0CE8  100F               	bcf	15,0	;volatile
  8550                           
  8551                           ;pin_manager.c: 33: RC2PPS = 0x000E;
  8552  0CE9  300E               	movlw	14
  8553  0CEA  003E               	movlb	30	; select bank30
  8554  0CEB  00A2               	movwf	34	;volatile
  8555                           
  8556                           ;pin_manager.c: 37: PPSLOCK = 0x55;
  8557  0CEC  3055               	movlw	85
  8558  0CED  003D               	movlb	29	; select bank29
  8559  0CEE  008F               	movwf	15	;volatile
  8560                           
  8561                           ;pin_manager.c: 38: PPSLOCK = 0xAA;
  8562  0CEF  30AA               	movlw	170
  8563  0CF0  008F               	movwf	15	;volatile
  8564                           
  8565                           ;pin_manager.c: 39: PPSLOCKbits.PPSLOCKED = 0x01;
  8566  0CF1  140F               	bsf	15,0	;volatile
  8567                           
  8568                           ;pin_manager.c: 40: GIE = state;
  8569  0CF2  1C70               	btfss	PIN_MANAGER_Initialize@state,0
  8570  0CF3  2CF6               	goto	u2140
  8571  0CF4  178B               	bsf	11,7	;volatile
  8572  0CF5  0008               	return
  8573  0CF6                     u2140:	
  8574  0CF6  138B               	bcf	11,7	;volatile
  8575  0CF7  0008               	return
  8576  0CF8                     __end_of_PIN_MANAGER_Initialize:	
  8577                           
  8578                           	psect	text22
  8579  0B41                     __ptext22:	
  8580 ;; *************** function _OSCILLATOR_Initialize *****************
  8581 ;; Defined at:
  8582 ;;		line 55 in file "system.c"
  8583 ;; Parameters:    Size  Location     Type
  8584 ;;		None
  8585 ;; Auto vars:     Size  Location     Type
  8586 ;;		None
  8587 ;; Return value:  Size  Location     Type
  8588 ;;                  1    wreg      void 
  8589 ;; Registers used:
  8590 ;;		wreg, status,2
  8591 ;; Tracked objects:
  8592 ;;		On entry : 0/0
  8593 ;;		On exit  : 0/0
  8594 ;;		Unchanged: 0/0
  8595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8599 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8600 ;;Total ram usage:        0 bytes
  8601 ;; Hardware stack levels used:    1
  8602 ;; This function calls:
  8603 ;;		Nothing
  8604 ;; This function is called by:
  8605 ;;		_SYSTEM_Initialize
  8606 ;; This function uses a non-reentrant model
  8607 ;;
  8608                           
  8609                           
  8610                           ;psect for function _OSCILLATOR_Initialize
  8611  0B41                     _OSCILLATOR_Initialize:	
  8612                           
  8613                           ;system.c: 57: OSCCON1 = 0x60;
  8614                           
  8615                           ;incstack = 0
  8616                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  8617  0B41  3060               	movlw	96
  8618  0B42  0031               	movlb	17	; select bank17
  8619  0B43  008D               	movwf	13	;volatile
  8620                           
  8621                           ;system.c: 58: OSCCON3 = 0x00;
  8622  0B44  018F               	clrf	15	;volatile
  8623                           
  8624                           ;system.c: 59: OSCEN = 0x00;
  8625  0B45  0191               	clrf	17	;volatile
  8626                           
  8627                           ;system.c: 60: OSCFRQ = 0x00;
  8628  0B46  0193               	clrf	19	;volatile
  8629                           
  8630                           ;system.c: 61: OSCTUNE = 0x00;
  8631  0B47  0192               	clrf	18	;volatile
  8632  0B48  0008               	return
  8633  0B49                     __end_of_OSCILLATOR_Initialize:	
  8634                           
  8635                           	psect	text23
  8636  0F03                     __ptext23:	
  8637 ;; *************** function _LCD_Init *****************
  8638 ;; Defined at:
  8639 ;;		line 154 in file "lcd.c"
  8640 ;; Parameters:    Size  Location     Type
  8641 ;;  style           1    wreg     unsigned char 
  8642 ;; Auto vars:     Size  Location     Type
  8643 ;;  style           1    5[COMMON] unsigned char 
  8644 ;; Return value:  Size  Location     Type
  8645 ;;                  1    wreg      void 
  8646 ;; Registers used:
  8647 ;;		wreg, status,2, status,0, pclath, cstack
  8648 ;; Tracked objects:
  8649 ;;		On entry : 0/0
  8650 ;;		On exit  : 0/0
  8651 ;;		Unchanged: 0/0
  8652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8654 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8655 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8656 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8657 ;;Total ram usage:        3 bytes
  8658 ;; Hardware stack levels used:    1
  8659 ;; Hardware stack levels required when called:    2
  8660 ;; This function calls:
  8661 ;;		_LCD_Cmd
  8662 ;;		_LCD_Port
  8663 ;; This function is called by:
  8664 ;;		_SYSTEM_Initialize
  8665 ;; This function uses a non-reentrant model
  8666 ;;
  8667                           
  8668                           
  8669                           ;psect for function _LCD_Init
  8670  0F03                     _LCD_Init:	
  8671                           
  8672                           ;incstack = 0
  8673                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  8674                           ;LCD_Init@style stored from wreg
  8675  0F03  00F5               	movwf	LCD_Init@style
  8676                           
  8677                           ;lcd.c: 156: LCD_Port(0x00);
  8678  0F04  3000               	movlw	0
  8679  0F05  318B  23B5  318F   	fcall	_LCD_Port
  8680                           
  8681                           ;lcd.c: 158: _delay((unsigned long)((100)*(1000000/4000.0)));
  8682  0F08  3021               	movlw	33
  8683  0F09  00F4               	movwf	??_LCD_Init+1
  8684  0F0A  3076               	movlw	118
  8685  0F0B  00F3               	movwf	??_LCD_Init
  8686  0F0C                     u3017:	
  8687  0F0C  0BF3               	decfsz	??_LCD_Init,f
  8688  0F0D  2F0C               	goto	u3017
  8689  0F0E  0BF4               	decfsz	??_LCD_Init+1,f
  8690  0F0F  2F0C               	goto	u3017
  8691  0F10  0000               	nop
  8692                           
  8693                           ;lcd.c: 160: LCD_Cmd(0x03);
  8694  0F11  3003               	movlw	3
  8695  0F12  318B  238D  318F   	fcall	_LCD_Cmd
  8696                           
  8697                           ;lcd.c: 162: _delay((unsigned long)((10)*(1000000/4000.0)));
  8698  0F15  3004               	movlw	4
  8699  0F16  00F4               	movwf	??_LCD_Init+1
  8700  0F17  303D               	movlw	61
  8701  0F18  00F3               	movwf	??_LCD_Init
  8702  0F19                     u3027:	
  8703  0F19  0BF3               	decfsz	??_LCD_Init,f
  8704  0F1A  2F19               	goto	u3027
  8705  0F1B  0BF4               	decfsz	??_LCD_Init+1,f
  8706  0F1C  2F19               	goto	u3027
  8707  0F1D  3200               	nop2
  8708                           
  8709                           ;lcd.c: 164: LCD_Cmd(0x03);
  8710  0F1E  3003               	movlw	3
  8711  0F1F  318B  238D  318F   	fcall	_LCD_Cmd
  8712                           
  8713                           ;lcd.c: 166: _delay((unsigned long)((120)*(1000000/4000000.0)));
  8714  0F22  3009               	movlw	9
  8715  0F23  00F3               	movwf	??_LCD_Init
  8716  0F24                     u3037:	
  8717  0F24  0BF3               	decfsz	??_LCD_Init,f
  8718  0F25  2F24               	goto	u3037
  8719  0F26  3200               	nop2	;nop
  8720                           
  8721                           ;lcd.c: 168: LCD_Cmd(0x03);
  8722  0F27  3003               	movlw	3
  8723  0F28  318B  238D  318F   	fcall	_LCD_Cmd
  8724                           
  8725                           ;lcd.c: 170: _delay((unsigned long)((120)*(1000000/4000000.0)));
  8726  0F2B  3009               	movlw	9
  8727  0F2C  00F3               	movwf	??_LCD_Init
  8728  0F2D                     u3047:	
  8729  0F2D  0BF3               	decfsz	??_LCD_Init,f
  8730  0F2E  2F2D               	goto	u3047
  8731  0F2F  3200               	nop2	;nop
  8732                           
  8733                           ;lcd.c: 172: LCD_Cmd(0x02);
  8734  0F30  3002               	movlw	2
  8735  0F31  318B  238D  318F   	fcall	_LCD_Cmd
  8736                           
  8737                           ;lcd.c: 174: _delay((unsigned long)((120)*(1000000/4000000.0)));
  8738  0F34  3009               	movlw	9
  8739  0F35  00F3               	movwf	??_LCD_Init
  8740  0F36                     u3057:	
  8741  0F36  0BF3               	decfsz	??_LCD_Init,f
  8742  0F37  2F36               	goto	u3057
  8743  0F38  3200               	nop2	;nop
  8744                           
  8745                           ;lcd.c: 176: LCD_Cmd(0x2);
  8746  0F39  3002               	movlw	2
  8747  0F3A  318B  238D  318F   	fcall	_LCD_Cmd
  8748                           
  8749                           ;lcd.c: 178: LCD_Cmd(0x8);
  8750  0F3D  3008               	movlw	8
  8751  0F3E  318B  238D  318F   	fcall	_LCD_Cmd
  8752                           
  8753                           ;lcd.c: 180: _delay((unsigned long)((120)*(1000000/4000000.0)));
  8754  0F41  3009               	movlw	9
  8755  0F42  00F3               	movwf	??_LCD_Init
  8756  0F43                     u3067:	
  8757  0F43  0BF3               	decfsz	??_LCD_Init,f
  8758  0F44  2F43               	goto	u3067
  8759  0F45  3200               	nop2	;nop
  8760                           
  8761                           ;lcd.c: 182: LCD_Cmd(0x0);
  8762  0F46  3000               	movlw	0
  8763  0F47  318B  238D  318F   	fcall	_LCD_Cmd
  8764                           
  8765                           ;lcd.c: 184: LCD_Cmd(0x8);
  8766  0F4A  3008               	movlw	8
  8767  0F4B  318B  238D  318F   	fcall	_LCD_Cmd
  8768                           
  8769                           ;lcd.c: 186: _delay((unsigned long)((120)*(1000000/4000000.0)));
  8770  0F4E  3009               	movlw	9
  8771  0F4F  00F3               	movwf	??_LCD_Init
  8772  0F50                     u3077:	
  8773  0F50  0BF3               	decfsz	??_LCD_Init,f
  8774  0F51  2F50               	goto	u3077
  8775  0F52  3200               	nop2	;nop
  8776                           
  8777                           ;lcd.c: 188: LCD_Cmd(0x0);
  8778  0F53  3000               	movlw	0
  8779  0F54  318B  238D  318F   	fcall	_LCD_Cmd
  8780                           
  8781                           ;lcd.c: 190: LCD_Cmd(0x1);
  8782  0F57  3001               	movlw	1
  8783  0F58  318B  238D  318F   	fcall	_LCD_Cmd
  8784                           
  8785                           ;lcd.c: 192: _delay((unsigned long)((5)*(1000000/4000.0)));
  8786  0F5B  30F9               	movlw	249
  8787  0F5C  00F3               	movwf	??_LCD_Init
  8788  0F5D                     u3087:	
  8789  0F5D  3200               	nop2
  8790  0F5E  0BF3               	decfsz	??_LCD_Init,f
  8791  0F5F  2F5D               	goto	u3087
  8792  0F60  3200               	nop2	;nop
  8793  0F61  3200               	nop2	;nop
  8794                           
  8795                           ;lcd.c: 194: LCD_Cmd(0x0);
  8796  0F62  3000               	movlw	0
  8797  0F63  318B  238D  318F   	fcall	_LCD_Cmd
  8798                           
  8799                           ;lcd.c: 196: LCD_Cmd(0x6);
  8800  0F66  3006               	movlw	6
  8801  0F67  318B  238D  318F   	fcall	_LCD_Cmd
  8802                           
  8803                           ;lcd.c: 198: _delay((unsigned long)((120)*(1000000/4000000.0)));
  8804  0F6A  3009               	movlw	9
  8805  0F6B  00F3               	movwf	??_LCD_Init
  8806  0F6C                     u3097:	
  8807  0F6C  0BF3               	decfsz	??_LCD_Init,f
  8808  0F6D  2F6C               	goto	u3097
  8809  0F6E  3200               	nop2	;nop
  8810                           
  8811                           ;lcd.c: 200: LCD_Cmd(0x0);
  8812  0F6F  3000               	movlw	0
  8813  0F70  318B  238D  318F   	fcall	_LCD_Cmd
  8814                           
  8815                           ;lcd.c: 202: LCD_Cmd(0xc|style);
  8816  0F73  0875               	movf	LCD_Init@style,w
  8817  0F74  380C               	iorlw	12
  8818  0F75  318B  238D  318F   	fcall	_LCD_Cmd
  8819                           
  8820                           ;lcd.c: 204: _delay((unsigned long)((120)*(1000000/4000000.0)));
  8821  0F78  3009               	movlw	9
  8822  0F79  00F3               	movwf	??_LCD_Init
  8823  0F7A                     u3107:	
  8824  0F7A  0BF3               	decfsz	??_LCD_Init,f
  8825  0F7B  2F7A               	goto	u3107
  8826  0F7C  3200               	nop2	;nop
  8827  0F7D  0008               	return
  8828  0F7E                     __end_of_LCD_Init:	
  8829                           
  8830                           	psect	text24
  8831  0B39                     __ptext24:	
  8832 ;; *************** function _LCD_Clear *****************
  8833 ;; Defined at:
  8834 ;;		line 75 in file "lcd.c"
  8835 ;; Parameters:    Size  Location     Type
  8836 ;;		None
  8837 ;; Auto vars:     Size  Location     Type
  8838 ;;		None
  8839 ;; Return value:  Size  Location     Type
  8840 ;;                  1    wreg      void 
  8841 ;; Registers used:
  8842 ;;		wreg, status,2, status,0, pclath, cstack
  8843 ;; Tracked objects:
  8844 ;;		On entry : 0/0
  8845 ;;		On exit  : 0/0
  8846 ;;		Unchanged: 0/0
  8847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8851 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8852 ;;Total ram usage:        0 bytes
  8853 ;; Hardware stack levels used:    1
  8854 ;; Hardware stack levels required when called:    2
  8855 ;; This function calls:
  8856 ;;		_LCD_Cmd
  8857 ;; This function is called by:
  8858 ;;		_SYSTEM_Initialize
  8859 ;;		_main
  8860 ;; This function uses a non-reentrant model
  8861 ;;
  8862                           
  8863                           
  8864                           ;psect for function _LCD_Clear
  8865  0B39                     _LCD_Clear:	
  8866                           
  8867                           ;lcd.c: 77: LCD_Cmd(0);
  8868                           
  8869                           ;incstack = 0
  8870                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  8871  0B39  3000               	movlw	0
  8872  0B3A  318B  238D  318B   	fcall	_LCD_Cmd
  8873                           
  8874                           ;lcd.c: 78: LCD_Cmd(1);
  8875  0B3D  3001               	movlw	1
  8876  0B3E  318B  238D         	fcall	_LCD_Cmd
  8877  0B40  0008               	return
  8878  0B41                     __end_of_LCD_Clear:	
  8879                           
  8880                           	psect	text25
  8881  0C72                     __ptext25:	
  8882 ;; *************** function _InitCustomChars *****************
  8883 ;; Defined at:
  8884 ;;		line 29 in file "lcd.c"
  8885 ;; Parameters:    Size  Location     Type
  8886 ;;		None
  8887 ;; Auto vars:     Size  Location     Type
  8888 ;;  i               1    6[COMMON] unsigned char 
  8889 ;; Return value:  Size  Location     Type
  8890 ;;                  1    wreg      void 
  8891 ;; Registers used:
  8892 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8893 ;; Tracked objects:
  8894 ;;		On entry : 0/0
  8895 ;;		On exit  : 0/0
  8896 ;;		Unchanged: 0/0
  8897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8899 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8900 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8901 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8902 ;;Total ram usage:        2 bytes
  8903 ;; Hardware stack levels used:    1
  8904 ;; Hardware stack levels required when called:    2
  8905 ;; This function calls:
  8906 ;;		_LCD_Cmd
  8907 ;;		_LCD_Write_Char
  8908 ;; This function is called by:
  8909 ;;		_SYSTEM_Initialize
  8910 ;; This function uses a non-reentrant model
  8911 ;;
  8912                           
  8913                           
  8914                           ;psect for function _InitCustomChars
  8915  0C72                     _InitCustomChars:	
  8916                           
  8917                           ;lcd.c: 31: uint8_t i;
  8918                           ;lcd.c: 32: LCD_Cmd(0x04);
  8919                           
  8920                           ;incstack = 0
  8921                           ; Regs used in _InitCustomChars: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8922  0C72  3004               	movlw	4
  8923  0C73  318B  238D  318C   	fcall	_LCD_Cmd
  8924                           
  8925                           ;lcd.c: 33: LCD_Cmd(0x00);
  8926  0C76  3000               	movlw	0
  8927  0C77  318B  238D  318C   	fcall	_LCD_Cmd
  8928                           
  8929                           ;lcd.c: 34: for (i = 0; i < sizeof(__cgram) ; i++)
  8930  0C7A  01F6               	clrf	InitCustomChars@i
  8931  0C7B  3018               	movlw	24
  8932  0C7C  0276               	subwf	InitCustomChars@i,w
  8933  0C7D  1803               	btfsc	3,0
  8934  0C7E  2C90               	goto	l2035
  8935  0C7F                     l2029:	
  8936                           
  8937                           ;lcd.c: 35: LCD_Write_Char(__cgram[i]);
  8938  0C7F  0876               	movf	InitCustomChars@i,w
  8939  0C80  3E44               	addlw	(low (___cgram| (0+256)))& (0+255)
  8940  0C81  0086               	movwf	6
  8941  0C82  3001               	movlw	1	; select bank2/3
  8942  0C83  0087               	movwf	7
  8943  0C84  0801               	movf	1,w
  8944  0C85  318C  2498  318C   	fcall	_LCD_Write_Char
  8945  0C88  3001               	movlw	1
  8946  0C89  00F5               	movwf	??_InitCustomChars
  8947  0C8A  0875               	movf	??_InitCustomChars,w
  8948  0C8B  07F6               	addwf	InitCustomChars@i,f
  8949  0C8C  3018               	movlw	24
  8950  0C8D  0276               	subwf	InitCustomChars@i,w
  8951  0C8E  1C03               	skipc
  8952  0C8F  2C7F               	goto	l2029
  8953  0C90                     l2035:	
  8954                           
  8955                           ;lcd.c: 36: LCD_Cmd(0);
  8956  0C90  3000               	movlw	0
  8957  0C91  318B  238D  318C   	fcall	_LCD_Cmd
  8958                           
  8959                           ;lcd.c: 37: LCD_Cmd(2);
  8960  0C94  3002               	movlw	2
  8961  0C95  318B  238D         	fcall	_LCD_Cmd
  8962  0C97  0008               	return
  8963  0C98                     __end_of_InitCustomChars:	
  8964                           
  8965                           	psect	text26
  8966  0BFF                     __ptext26:	
  8967 ;; *************** function _ADCC_Initialize *****************
  8968 ;; Defined at:
  8969 ;;		line 16 in file "adcc.c"
  8970 ;; Parameters:    Size  Location     Type
  8971 ;;		None
  8972 ;; Auto vars:     Size  Location     Type
  8973 ;;		None
  8974 ;; Return value:  Size  Location     Type
  8975 ;;                  1    wreg      void 
  8976 ;; Registers used:
  8977 ;;		wreg, status,2
  8978 ;; Tracked objects:
  8979 ;;		On entry : 0/0
  8980 ;;		On exit  : 0/0
  8981 ;;		Unchanged: 0/0
  8982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8986 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8987 ;;Total ram usage:        0 bytes
  8988 ;; Hardware stack levels used:    1
  8989 ;; This function calls:
  8990 ;;		Nothing
  8991 ;; This function is called by:
  8992 ;;		_SYSTEM_Initialize
  8993 ;; This function uses a non-reentrant model
  8994 ;;
  8995                           
  8996                           
  8997                           ;psect for function _ADCC_Initialize
  8998  0BFF                     _ADCC_Initialize:	
  8999                           
  9000                           ;adcc.c: 19: ADCON1 = 0x00;
  9001                           
  9002                           ;incstack = 0
  9003                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
  9004  0BFF  0021               	movlb	1	; select bank1
  9005  0C00  0194               	clrf	20	;volatile
  9006                           
  9007                           ;adcc.c: 21: ADCON2 = 0x00;
  9008  0C01  0195               	clrf	21	;volatile
  9009                           
  9010                           ;adcc.c: 23: ADCON3 = 0x00;
  9011  0C02  0196               	clrf	22	;volatile
  9012                           
  9013                           ;adcc.c: 25: ADACT = 0x00;
  9014  0C03  0199               	clrf	25	;volatile
  9015                           
  9016                           ;adcc.c: 27: ADSTAT = 0x00;
  9017  0C04  0197               	clrf	23	;volatile
  9018                           
  9019                           ;adcc.c: 29: ADCLK = 0x0F;
  9020  0C05  300F               	movlw	15
  9021  0C06  0098               	movwf	24	;volatile
  9022                           
  9023                           ;adcc.c: 33: ADREF = 0x00;
  9024  0C07  019A               	clrf	26	;volatile
  9025                           
  9026                           ;adcc.c: 35: ADCAP = 0x1F;
  9027  0C08  301F               	movlw	31
  9028  0C09  009B               	movwf	27	;volatile
  9029                           
  9030                           ;adcc.c: 37: ADPRE = 0x00;
  9031  0C0A  019C               	clrf	28	;volatile
  9032                           
  9033                           ;adcc.c: 39: ADACQ = 0x00;
  9034  0C0B  019D               	clrf	29	;volatile
  9035                           
  9036                           ;adcc.c: 41: ADPCH = 0x00;
  9037  0C0C  019E               	clrf	30	;volatile
  9038                           
  9039                           ;adcc.c: 43: ADRPT = 0x00;
  9040  0C0D  0022               	movlb	2	; select bank2
  9041  0C0E  018D               	clrf	13	;volatile
  9042                           
  9043                           ;adcc.c: 45: ADLTHL = 0x00;
  9044  0C0F  018E               	clrf	14	;volatile
  9045                           
  9046                           ;adcc.c: 47: ADLTHH = 0x00;
  9047  0C10  018F               	clrf	15	;volatile
  9048                           
  9049                           ;adcc.c: 49: ADUTHL = 0x00;
  9050  0C11  0190               	clrf	16	;volatile
  9051                           
  9052                           ;adcc.c: 51: ADUTHH = 0x00;
  9053  0C12  0191               	clrf	17	;volatile
  9054                           
  9055                           ;adcc.c: 53: ADSTPTL = 0x00;
  9056  0C13  0192               	clrf	18	;volatile
  9057                           
  9058                           ;adcc.c: 55: ADSTPTH = 0x00;
  9059  0C14  0193               	clrf	19	;volatile
  9060                           
  9061                           ;adcc.c: 58: ADCON0 = 0x84;
  9062  0C15  3084               	movlw	132
  9063  0C16  0021               	movlb	1	; select bank1
  9064  0C17  0093               	movwf	19	;volatile
  9065  0C18  0008               	return
  9066  0C19                     __end_of_ADCC_Initialize:	
  9067                           
  9068                           	psect	text27
  9069  0B9F                     __ptext27:	
  9070 ;; *************** function _PWM6_LoadDutyValue *****************
  9071 ;; Defined at:
  9072 ;;		line 14 in file "pwm6.c"
  9073 ;; Parameters:    Size  Location     Type
  9074 ;;  dutyCycle       2    0[COMMON] unsigned int 
  9075 ;; Auto vars:     Size  Location     Type
  9076 ;;		None
  9077 ;; Return value:  Size  Location     Type
  9078 ;;                  1    wreg      void 
  9079 ;; Registers used:
  9080 ;;		wreg, status,2, status,0
  9081 ;; Tracked objects:
  9082 ;;		On entry : 0/0
  9083 ;;		On exit  : 0/0
  9084 ;;		Unchanged: 0/0
  9085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9086 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9088 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9089 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9090 ;;Total ram usage:        4 bytes
  9091 ;; Hardware stack levels used:    1
  9092 ;; This function calls:
  9093 ;;		Nothing
  9094 ;; This function is called by:
  9095 ;;		_main
  9096 ;; This function uses a non-reentrant model
  9097 ;;
  9098                           
  9099                           
  9100                           ;psect for function _PWM6_LoadDutyValue
  9101  0B9F                     _PWM6_LoadDutyValue:	
  9102                           
  9103                           ;pwm6.c: 16: PWM6DCH = (dutyCycle & 0x03FC)>>2;
  9104                           
  9105                           ;incstack = 0
  9106                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
  9107  0B9F  0871               	movf	PWM6_LoadDutyValue@dutyCycle+1,w
  9108  0BA0  00F3               	movwf	??_PWM6_LoadDutyValue+1
  9109  0BA1  0870               	movf	PWM6_LoadDutyValue@dutyCycle,w
  9110  0BA2  00F2               	movwf	??_PWM6_LoadDutyValue
  9111  0BA3  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
  9112  0BA4  0CF2               	rrf	??_PWM6_LoadDutyValue,f
  9113  0BA5  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
  9114  0BA6  0CF2               	rrf	??_PWM6_LoadDutyValue,f
  9115  0BA7  0872               	movf	??_PWM6_LoadDutyValue,w
  9116  0BA8  0027               	movlb	7	; select bank7
  9117  0BA9  008D               	movwf	13	;volatile
  9118                           
  9119                           ;pwm6.c: 18: PWM6DCL = (dutyCycle & 0x0003)<<6;
  9120  0BAA  0870               	movf	PWM6_LoadDutyValue@dutyCycle,w
  9121  0BAB  3903               	andlw	3
  9122  0BAC  00F2               	movwf	??_PWM6_LoadDutyValue
  9123  0BAD  3005               	movlw	5
  9124  0BAE                     u2825:	
  9125  0BAE  35F2               	lslf	??_PWM6_LoadDutyValue,f
  9126  0BAF  3EFF               	addlw	-1
  9127  0BB0  1D03               	skipz
  9128  0BB1  2BAE               	goto	u2825
  9129  0BB2  3572               	lslf	??_PWM6_LoadDutyValue,w
  9130  0BB3  008C               	movwf	12	;volatile
  9131  0BB4  0008               	return
  9132  0BB5                     __end_of_PWM6_LoadDutyValue:	
  9133                           
  9134                           	psect	text28
  9135  0BE5                     __ptext28:	
  9136 ;; *************** function _LCD_Write_String *****************
  9137 ;; Defined at:
  9138 ;;		line 239 in file "lcd.c"
  9139 ;; Parameters:    Size  Location     Type
  9140 ;;  a               2    5[COMMON] PTR const unsigned char 
  9141 ;;		 -> STR_1(9), 
  9142 ;; Auto vars:     Size  Location     Type
  9143 ;;  i               2    8[COMMON] int 
  9144 ;; Return value:  Size  Location     Type
  9145 ;;                  1    wreg      void 
  9146 ;; Registers used:
  9147 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9148 ;; Tracked objects:
  9149 ;;		On entry : 0/0
  9150 ;;		On exit  : 0/0
  9151 ;;		Unchanged: 0/0
  9152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9153 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9154 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9155 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9156 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9157 ;;Total ram usage:        5 bytes
  9158 ;; Hardware stack levels used:    1
  9159 ;; Hardware stack levels required when called:    2
  9160 ;; This function calls:
  9161 ;;		_LCD_Write_Char
  9162 ;; This function is called by:
  9163 ;;		_main
  9164 ;; This function uses a non-reentrant model
  9165 ;;
  9166                           
  9167                           
  9168                           ;psect for function _LCD_Write_String
  9169  0BE5                     _LCD_Write_String:	
  9170                           
  9171                           ;lcd.c: 241: int i;
  9172                           ;lcd.c: 242: for(i=0;a[i]!='\0';i++)
  9173                           
  9174                           ;incstack = 0
  9175                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9176  0BE5  01F8               	clrf	LCD_Write_String@i
  9177  0BE6  01F9               	clrf	LCD_Write_String@i+1
  9178  0BE7                     l2393:	
  9179  0BE7  0875               	movf	LCD_Write_String@a,w
  9180  0BE8  0778               	addwf	LCD_Write_String@i,w
  9181  0BE9  0084               	movwf	4
  9182  0BEA  0876               	movf	LCD_Write_String@a+1,w
  9183  0BEB  3D79               	addwfc	LCD_Write_String@i+1,w
  9184  0BEC  0085               	movwf	5
  9185  0BED  0012               	moviw fsr0++
  9186  0BEE  1903               	btfsc	3,2
  9187  0BEF  0008               	return
  9188                           
  9189                           ;lcd.c: 243: LCD_Write_Char(a[i]);
  9190  0BF0  0875               	movf	LCD_Write_String@a,w
  9191  0BF1  0778               	addwf	LCD_Write_String@i,w
  9192  0BF2  0084               	movwf	4
  9193  0BF3  0876               	movf	LCD_Write_String@a+1,w
  9194  0BF4  3D79               	addwfc	LCD_Write_String@i+1,w
  9195  0BF5  0085               	movwf	5
  9196  0BF6  0800               	movf	0,w	;code access
  9197  0BF7  318C  2498  318B   	fcall	_LCD_Write_Char
  9198  0BFA  3001               	movlw	1
  9199  0BFB  07F8               	addwf	LCD_Write_String@i,f
  9200  0BFC  3000               	movlw	0
  9201  0BFD  3DF9               	addwfc	LCD_Write_String@i+1,f
  9202  0BFE  2BE7               	goto	l2393
  9203  0BFF                     __end_of_LCD_Write_String:	
  9204                           
  9205                           	psect	text29
  9206  02D1                     __ptext29:	
  9207 ;; *************** function _LCD_Write_Int *****************
  9208 ;; Defined at:
  9209 ;;		line 246 in file "lcd.c"
  9210 ;; Parameters:    Size  Location     Type
  9211 ;;  value           2    0[BANK0 ] int 
  9212 ;;  fieldLength     1    2[BANK0 ] char 
  9213 ;;  numPlaces       1    3[BANK0 ] char 
  9214 ;;  sign            1    4[BANK0 ] char 
  9215 ;; Auto vars:     Size  Location     Type
  9216 ;;  str             5   10[BANK0 ] unsigned char [5]
  9217 ;;  i               2   17[BANK0 ] int 
  9218 ;;  j               2   15[BANK0 ] int 
  9219 ;; Return value:  Size  Location     Type
  9220 ;;                  1    wreg      void 
  9221 ;; Registers used:
  9222 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9223 ;; Tracked objects:
  9224 ;;		On entry : 0/0
  9225 ;;		On exit  : 0/0
  9226 ;;		Unchanged: 0/0
  9227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9228 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9229 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9230 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9231 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9232 ;;Total ram usage:       19 bytes
  9233 ;; Hardware stack levels used:    1
  9234 ;; Hardware stack levels required when called:    2
  9235 ;; This function calls:
  9236 ;;		_LCD_Write_Char
  9237 ;;		___awdiv
  9238 ;;		___awmod
  9239 ;; This function is called by:
  9240 ;;		_main
  9241 ;; This function uses a non-reentrant model
  9242 ;;
  9243                           
  9244                           
  9245                           ;psect for function _LCD_Write_Int
  9246  02D1                     _LCD_Write_Int:	
  9247                           
  9248                           ;lcd.c: 248: char str[5]={0,0,0,0,0};
  9249                           
  9250                           ;incstack = 0
  9251                           ; Regs used in _LCD_Write_Int: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9252  02D1  30C4               	movlw	low LCD_Write_Int@F13687
  9253  02D2  0086               	movwf	6
  9254  02D3  3000               	movlw	high LCD_Write_Int@F13687
  9255  02D4  0087               	movwf	7
  9256  02D5  302A               	movlw	low LCD_Write_Int@str
  9257  02D6  0084               	movwf	4
  9258  02D7  3000               	movlw	high LCD_Write_Int@str
  9259  02D8  0085               	movwf	5
  9260  02D9  3005               	movlw	5
  9261  02DA  0020               	movlb	0	; select bank0
  9262  02DB  00A5               	movwf	??_LCD_Write_Int
  9263  02DC                     u2730:	
  9264  02DC  0016               	moviw fsr1++
  9265  02DD  001A               	movwi fsr0++
  9266  02DE  0BA5               	decfsz	??_LCD_Write_Int,f
  9267  02DF  2ADC               	goto	u2730
  9268                           
  9269                           ;lcd.c: 249: int i=4,j=0;
  9270  02E0  3004               	movlw	4
  9271  02E1  00B1               	movwf	LCD_Write_Int@i
  9272  02E2  3000               	movlw	0
  9273  02E3  00B2               	movwf	LCD_Write_Int@i+1
  9274  02E4  01AF               	clrf	LCD_Write_Int@j
  9275  02E5  01B0               	clrf	LCD_Write_Int@j+1
  9276                           
  9277                           ;lcd.c: 251: if(value<0)
  9278  02E6  1FA1               	btfss	LCD_Write_Int@value+1,7
  9279  02E7  2AF3               	goto	l2407
  9280                           
  9281                           ;lcd.c: 252: {
  9282                           ;lcd.c: 253: LCD_Write_Char('-');
  9283  02E8  302D               	movlw	45
  9284  02E9  318C  2498  3182   	fcall	_LCD_Write_Char
  9285                           
  9286                           ;lcd.c: 254: value=value*-1;
  9287  02EC  0020               	movlb	0	; select bank0
  9288  02ED  09A0               	comf	LCD_Write_Int@value,f
  9289  02EE  09A1               	comf	LCD_Write_Int@value+1,f
  9290  02EF  0AA0               	incf	LCD_Write_Int@value,f
  9291  02F0  1903               	skipnz
  9292  02F1  0AA1               	incf	LCD_Write_Int@value+1,f
  9293                           
  9294                           ;lcd.c: 255: }
  9295  02F2  2AFA               	goto	l2417
  9296  02F3                     l2407:	
  9297                           
  9298                           ;lcd.c: 257: else
  9299                           ;lcd.c: 258: {
  9300                           ;lcd.c: 259: if(sign == 1)
  9301  02F3  0324               	decf	LCD_Write_Int@sign,w
  9302  02F4  1D03               	btfss	3,2
  9303  02F5  2AFA               	goto	l2417
  9304                           
  9305                           ;lcd.c: 260: {
  9306                           ;lcd.c: 261: LCD_Write_Char('+');
  9307  02F6  302B               	movlw	43
  9308  02F7  318C  2498  3182   	fcall	_LCD_Write_Char
  9309  02FA                     l2417:	
  9310                           ;lcd.c: 262: }
  9311                           ;lcd.c: 263: }
  9312                           ;lcd.c: 265: while(value)
  9313                           
  9314  02FA  0020               	movlb	0	; select bank0
  9315  02FB  0820               	movf	LCD_Write_Int@value,w
  9316  02FC  0421               	iorwf	LCD_Write_Int@value+1,w
  9317  02FD  1903               	btfsc	3,2
  9318  02FE  2B29               	goto	l2419
  9319                           
  9320                           ;lcd.c: 266: {
  9321                           ;lcd.c: 267: str[i]=value%10;
  9322  02FF  300A               	movlw	10
  9323  0300  00F0               	movwf	___awmod@divisor
  9324  0301  3000               	movlw	0
  9325  0302  00F1               	movwf	___awmod@divisor+1
  9326  0303  0020               	movlb	0	; select bank0
  9327  0304  0821               	movf	LCD_Write_Int@value+1,w
  9328  0305  00F3               	movwf	___awmod@dividend+1
  9329  0306  0820               	movf	LCD_Write_Int@value,w
  9330  0307  00F2               	movwf	___awmod@dividend
  9331  0308  318D  25A9  3182   	fcall	___awmod
  9332  030B  0870               	movf	?___awmod,w
  9333  030C  0020               	movlb	0	; select bank0
  9334  030D  00A5               	movwf	??_LCD_Write_Int
  9335  030E  0831               	movf	LCD_Write_Int@i,w
  9336  030F  3E2A               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
  9337  0310  0086               	movwf	6
  9338  0311  0187               	clrf	7
  9339  0312  0825               	movf	??_LCD_Write_Int,w
  9340  0313  0081               	movwf	1
  9341                           
  9342                           ;lcd.c: 268: value=value/10;
  9343  0314  300A               	movlw	10
  9344  0315  00F0               	movwf	___awdiv@divisor
  9345  0316  3000               	movlw	0
  9346  0317  00F1               	movwf	___awdiv@divisor+1
  9347  0318  0821               	movf	LCD_Write_Int@value+1,w
  9348  0319  00F3               	movwf	___awdiv@dividend+1
  9349  031A  0820               	movf	LCD_Write_Int@value,w
  9350  031B  00F2               	movwf	___awdiv@dividend
  9351  031C  318D  25EE  3182   	fcall	___awdiv
  9352  031F  0871               	movf	?___awdiv+1,w
  9353  0320  0020               	movlb	0	; select bank0
  9354  0321  00A1               	movwf	LCD_Write_Int@value+1
  9355  0322  0870               	movf	?___awdiv,w
  9356  0323  00A0               	movwf	LCD_Write_Int@value
  9357                           
  9358                           ;lcd.c: 269: i--;
  9359  0324  30FF               	movlw	255
  9360  0325  07B1               	addwf	LCD_Write_Int@i,f
  9361  0326  30FF               	movlw	255
  9362  0327  3DB2               	addwfc	LCD_Write_Int@i+1,f
  9363  0328  2AFA               	goto	l2417
  9364  0329                     l2419:	
  9365                           
  9366                           ;lcd.c: 270: }
  9367                           ;lcd.c: 271: if(fieldLength==-1)
  9368  0329  0A22               	incf	LCD_Write_Int@fieldLength,w
  9369  032A  1903               	btfsc	3,2
  9370  032B  2B31               	goto	l2425
  9371  032C  2B39               	goto	l2427
  9372  032D                     l2423:	
  9373                           ;lcd.c: 272: {
  9374                           ;lcd.c: 273: while(str[j]==0)
  9375                           
  9376                           
  9377                           ;lcd.c: 274: {
  9378                           ;lcd.c: 275: j++;
  9379  032D  3001               	movlw	1
  9380  032E  07AF               	addwf	LCD_Write_Int@j,f
  9381  032F  3000               	movlw	0
  9382  0330  3DB0               	addwfc	LCD_Write_Int@j+1,f
  9383  0331                     l2425:	
  9384  0331  082F               	movf	LCD_Write_Int@j,w
  9385  0332  3E2A               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
  9386  0333  0086               	movwf	6
  9387  0334  0187               	clrf	7
  9388  0335  0801               	movf	1,w
  9389  0336  1D03               	btfss	3,2
  9390  0337  2B49               	goto	l2429
  9391  0338  2B2D               	goto	l2423
  9392  0339                     l2427:	
  9393                           ;lcd.c: 276: }
  9394                           ;lcd.c: 277: }
  9395                           
  9396                           
  9397                           ;lcd.c: 278: else
  9398                           ;lcd.c: 279: {
  9399                           ;lcd.c: 280: j=5-fieldLength;
  9400  0339  0822               	movf	LCD_Write_Int@fieldLength,w
  9401  033A  00A5               	movwf	??_LCD_Write_Int
  9402  033B  01A6               	clrf	??_LCD_Write_Int+1
  9403  033C  1BA5               	btfsc	??_LCD_Write_Int,7
  9404  033D  03A6               	decf	??_LCD_Write_Int+1,f
  9405  033E  09A5               	comf	??_LCD_Write_Int,f
  9406  033F  09A6               	comf	??_LCD_Write_Int+1,f
  9407  0340  0AA5               	incf	??_LCD_Write_Int,f
  9408  0341  1903               	skipnz
  9409  0342  0AA6               	incf	??_LCD_Write_Int+1,f
  9410  0343  0825               	movf	??_LCD_Write_Int,w
  9411  0344  3E05               	addlw	5
  9412  0345  00AF               	movwf	LCD_Write_Int@j
  9413  0346  3000               	movlw	0
  9414  0347  3D26               	addwfc	??_LCD_Write_Int+1,w
  9415  0348  00B0               	movwf	LCD_Write_Int@j+1
  9416  0349                     l2429:	
  9417                           
  9418                           ;lcd.c: 281: }
  9419                           ;lcd.c: 283: for(i=j;i<(5-numPlaces);i++)
  9420  0349  0830               	movf	LCD_Write_Int@j+1,w
  9421  034A  00B2               	movwf	LCD_Write_Int@i+1
  9422  034B  082F               	movf	LCD_Write_Int@j,w
  9423  034C  00B1               	movwf	LCD_Write_Int@i
  9424  034D                     l2435:	
  9425  034D  0823               	movf	LCD_Write_Int@numPlaces,w
  9426  034E  00A5               	movwf	??_LCD_Write_Int
  9427  034F  01A6               	clrf	??_LCD_Write_Int+1
  9428  0350  1BA5               	btfsc	??_LCD_Write_Int,7
  9429  0351  03A6               	decf	??_LCD_Write_Int+1,f
  9430  0352  09A5               	comf	??_LCD_Write_Int,f
  9431  0353  09A6               	comf	??_LCD_Write_Int+1,f
  9432  0354  0AA5               	incf	??_LCD_Write_Int,f
  9433  0355  1903               	skipnz
  9434  0356  0AA6               	incf	??_LCD_Write_Int+1,f
  9435  0357  0825               	movf	??_LCD_Write_Int,w
  9436  0358  3E05               	addlw	5
  9437  0359  00A7               	movwf	??_LCD_Write_Int+2
  9438  035A  3000               	movlw	0
  9439  035B  3D26               	addwfc	??_LCD_Write_Int+1,w
  9440  035C  00A8               	movwf	??_LCD_Write_Int+3
  9441  035D  0832               	movf	LCD_Write_Int@i+1,w
  9442  035E  3A80               	xorlw	128
  9443  035F  00A9               	movwf	??_LCD_Write_Int+4
  9444  0360  0828               	movf	??_LCD_Write_Int+3,w
  9445  0361  3A80               	xorlw	128
  9446  0362  0229               	subwf	??_LCD_Write_Int+4,w
  9447  0363  1D03               	skipz
  9448  0364  2B67               	goto	u2795
  9449  0365  0827               	movf	??_LCD_Write_Int+2,w
  9450  0366  0231               	subwf	LCD_Write_Int@i,w
  9451  0367                     u2795:	
  9452  0367  1803               	btfsc	3,0
  9453  0368  2B79               	goto	l2437
  9454                           
  9455                           ;lcd.c: 284: {
  9456                           ;lcd.c: 285: LCD_Write_Char(48+str[i]);
  9457  0369  0020               	movlb	0	; select bank0
  9458  036A  0831               	movf	LCD_Write_Int@i,w
  9459  036B  3E2A               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
  9460  036C  0086               	movwf	6
  9461  036D  0187               	clrf	7
  9462  036E  0801               	movf	1,w
  9463  036F  3E30               	addlw	48
  9464  0370  318C  2498  3182   	fcall	_LCD_Write_Char
  9465  0373  3001               	movlw	1
  9466  0374  0020               	movlb	0	; select bank0
  9467  0375  07B1               	addwf	LCD_Write_Int@i,f
  9468  0376  3000               	movlw	0
  9469  0377  3DB2               	addwfc	LCD_Write_Int@i+1,f
  9470  0378  2B4D               	goto	l2435
  9471  0379                     l2437:	
  9472                           
  9473                           ;lcd.c: 286: }
  9474                           ;lcd.c: 288: if(numPlaces == 1)
  9475  0379  0020               	movlb	0	; select bank0
  9476  037A  0323               	decf	LCD_Write_Int@numPlaces,w
  9477  037B  1D03               	btfss	3,2
  9478  037C  2B87               	goto	l2441
  9479                           
  9480                           ;lcd.c: 289: {
  9481                           ;lcd.c: 290: LCD_Write_Char(46);
  9482  037D  302E               	movlw	46
  9483  037E  318C  2498  3182   	fcall	_LCD_Write_Char
  9484                           
  9485                           ;lcd.c: 291: LCD_Write_Char(48+str[4]);
  9486  0381  0020               	movlb	0	; select bank0
  9487  0382  082E               	movf	LCD_Write_Int@str+4,w
  9488  0383  3E30               	addlw	48
  9489  0384  318C  2498  3182   	fcall	_LCD_Write_Char
  9490  0387                     l2441:	
  9491                           
  9492                           ;lcd.c: 292: }
  9493                           ;lcd.c: 294: if(numPlaces == 2)
  9494  0387  3002               	movlw	2
  9495  0388  0020               	movlb	0	; select bank0
  9496  0389  0623               	xorwf	LCD_Write_Int@numPlaces,w
  9497  038A  1D03               	btfss	3,2
  9498  038B  0008               	return
  9499                           
  9500                           ;lcd.c: 295: {
  9501                           ;lcd.c: 296: LCD_Write_Char(46);
  9502  038C  302E               	movlw	46
  9503  038D  318C  2498  3182   	fcall	_LCD_Write_Char
  9504                           
  9505                           ;lcd.c: 297: LCD_Write_Char(48+str[3]);
  9506  0390  0020               	movlb	0	; select bank0
  9507  0391  082D               	movf	LCD_Write_Int@str+3,w
  9508  0392  3E30               	addlw	48
  9509  0393  318C  2498  3182   	fcall	_LCD_Write_Char
  9510                           
  9511                           ;lcd.c: 298: LCD_Write_Char(48+str[4]);
  9512  0396  0020               	movlb	0	; select bank0
  9513  0397  082E               	movf	LCD_Write_Int@str+4,w
  9514  0398  3E30               	addlw	48
  9515  0399  318C  2498         	fcall	_LCD_Write_Char
  9516  039B  0008               	return
  9517  039C                     __end_of_LCD_Write_Int:	
  9518                           
  9519                           	psect	text30
  9520  0DA9                     __ptext30:	
  9521 ;; *************** function ___awmod *****************
  9522 ;; Defined at:
  9523 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c"
  9524 ;; Parameters:    Size  Location     Type
  9525 ;;  divisor         2    0[COMMON] int 
  9526 ;;  dividend        2    2[COMMON] int 
  9527 ;; Auto vars:     Size  Location     Type
  9528 ;;  sign            1    6[COMMON] unsigned char 
  9529 ;;  counter         1    5[COMMON] unsigned char 
  9530 ;; Return value:  Size  Location     Type
  9531 ;;                  2    0[COMMON] int 
  9532 ;; Registers used:
  9533 ;;		wreg, status,2, status,0
  9534 ;; Tracked objects:
  9535 ;;		On entry : 0/0
  9536 ;;		On exit  : 0/0
  9537 ;;		Unchanged: 0/0
  9538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9539 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9540 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9541 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9542 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9543 ;;Total ram usage:        7 bytes
  9544 ;; Hardware stack levels used:    1
  9545 ;; This function calls:
  9546 ;;		Nothing
  9547 ;; This function is called by:
  9548 ;;		_LCD_Write_Int
  9549 ;; This function uses a non-reentrant model
  9550 ;;
  9551                           
  9552                           
  9553                           ;psect for function ___awmod
  9554  0DA9                     ___awmod:	
  9555                           
  9556                           ;incstack = 0
  9557                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  9558  0DA9  01F6               	clrf	___awmod@sign
  9559  0DAA  1FF3               	btfss	___awmod@dividend+1,7
  9560  0DAB  2DB3               	goto	l2267
  9561  0DAC  09F2               	comf	___awmod@dividend,f
  9562  0DAD  09F3               	comf	___awmod@dividend+1,f
  9563  0DAE  0AF2               	incf	___awmod@dividend,f
  9564  0DAF  1903               	skipnz
  9565  0DB0  0AF3               	incf	___awmod@dividend+1,f
  9566  0DB1  01F6               	clrf	___awmod@sign
  9567  0DB2  0AF6               	incf	___awmod@sign,f
  9568  0DB3                     l2267:	
  9569  0DB3  1FF1               	btfss	___awmod@divisor+1,7
  9570  0DB4  2DBA               	goto	l2271
  9571  0DB5  09F0               	comf	___awmod@divisor,f
  9572  0DB6  09F1               	comf	___awmod@divisor+1,f
  9573  0DB7  0AF0               	incf	___awmod@divisor,f
  9574  0DB8  1903               	skipnz
  9575  0DB9  0AF1               	incf	___awmod@divisor+1,f
  9576  0DBA                     l2271:	
  9577  0DBA  0870               	movf	___awmod@divisor,w
  9578  0DBB  0471               	iorwf	___awmod@divisor+1,w
  9579  0DBC  1903               	btfsc	3,2
  9580  0DBD  2DE1               	goto	l2289
  9581  0DBE  01F5               	clrf	___awmod@counter
  9582  0DBF  0AF5               	incf	___awmod@counter,f
  9583  0DC0                     l2279:	
  9584  0DC0  1BF1               	btfsc	___awmod@divisor+1,7
  9585  0DC1  2DCC               	goto	l2281
  9586  0DC2  3001               	movlw	1
  9587  0DC3                     u2435:	
  9588  0DC3  35F0               	lslf	___awmod@divisor,f
  9589  0DC4  0DF1               	rlf	___awmod@divisor+1,f
  9590  0DC5  0B89               	decfsz	9,f
  9591  0DC6  2DC3               	goto	u2435
  9592  0DC7  3001               	movlw	1
  9593  0DC8  00F4               	movwf	??___awmod
  9594  0DC9  0874               	movf	??___awmod,w
  9595  0DCA  07F5               	addwf	___awmod@counter,f
  9596  0DCB  2DC0               	goto	l2279
  9597  0DCC                     l2281:	
  9598  0DCC  0871               	movf	___awmod@divisor+1,w
  9599  0DCD  0273               	subwf	___awmod@dividend+1,w
  9600  0DCE  1D03               	skipz
  9601  0DCF  2DD2               	goto	u2455
  9602  0DD0  0870               	movf	___awmod@divisor,w
  9603  0DD1  0272               	subwf	___awmod@dividend,w
  9604  0DD2                     u2455:	
  9605  0DD2  1C03               	skipc
  9606  0DD3  2DD8               	goto	l2285
  9607  0DD4  0870               	movf	___awmod@divisor,w
  9608  0DD5  02F2               	subwf	___awmod@dividend,f
  9609  0DD6  0871               	movf	___awmod@divisor+1,w
  9610  0DD7  3BF3               	subwfb	___awmod@dividend+1,f
  9611  0DD8                     l2285:	
  9612  0DD8  3001               	movlw	1
  9613  0DD9                     u2465:	
  9614  0DD9  36F1               	lsrf	___awmod@divisor+1,f
  9615  0DDA  0CF0               	rrf	___awmod@divisor,f
  9616  0DDB  0B89               	decfsz	9,f
  9617  0DDC  2DD9               	goto	u2465
  9618  0DDD  3001               	movlw	1
  9619  0DDE  02F5               	subwf	___awmod@counter,f
  9620  0DDF  1D03               	btfss	3,2
  9621  0DE0  2DCC               	goto	l2281
  9622  0DE1                     l2289:	
  9623  0DE1  0876               	movf	___awmod@sign,w
  9624  0DE2  1903               	btfsc	3,2
  9625  0DE3  2DE9               	goto	l2293
  9626  0DE4  09F2               	comf	___awmod@dividend,f
  9627  0DE5  09F3               	comf	___awmod@dividend+1,f
  9628  0DE6  0AF2               	incf	___awmod@dividend,f
  9629  0DE7  1903               	skipnz
  9630  0DE8  0AF3               	incf	___awmod@dividend+1,f
  9631  0DE9                     l2293:	
  9632  0DE9  0873               	movf	___awmod@dividend+1,w
  9633  0DEA  00F1               	movwf	?___awmod+1
  9634  0DEB  0872               	movf	___awmod@dividend,w
  9635  0DEC  00F0               	movwf	?___awmod
  9636  0DED  0008               	return
  9637  0DEE                     __end_of___awmod:	
  9638                           
  9639                           	psect	text31
  9640  0DEE                     __ptext31:	
  9641 ;; *************** function ___awdiv *****************
  9642 ;; Defined at:
  9643 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c"
  9644 ;; Parameters:    Size  Location     Type
  9645 ;;  divisor         2    0[COMMON] int 
  9646 ;;  dividend        2    2[COMMON] int 
  9647 ;; Auto vars:     Size  Location     Type
  9648 ;;  quotient        2    7[COMMON] int 
  9649 ;;  sign            1    6[COMMON] unsigned char 
  9650 ;;  counter         1    5[COMMON] unsigned char 
  9651 ;; Return value:  Size  Location     Type
  9652 ;;                  2    0[COMMON] int 
  9653 ;; Registers used:
  9654 ;;		wreg, status,2, status,0
  9655 ;; Tracked objects:
  9656 ;;		On entry : 0/0
  9657 ;;		On exit  : 0/0
  9658 ;;		Unchanged: 0/0
  9659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9660 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9661 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9662 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9663 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9664 ;;Total ram usage:        9 bytes
  9665 ;; Hardware stack levels used:    1
  9666 ;; This function calls:
  9667 ;;		Nothing
  9668 ;; This function is called by:
  9669 ;;		_LCD_Write_Int
  9670 ;; This function uses a non-reentrant model
  9671 ;;
  9672                           
  9673                           
  9674                           ;psect for function ___awdiv
  9675  0DEE                     ___awdiv:	
  9676                           
  9677                           ;incstack = 0
  9678                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  9679  0DEE  01F6               	clrf	___awdiv@sign
  9680  0DEF  1FF1               	btfss	___awdiv@divisor+1,7
  9681  0DF0  2DF8               	goto	l2223
  9682  0DF1  09F0               	comf	___awdiv@divisor,f
  9683  0DF2  09F1               	comf	___awdiv@divisor+1,f
  9684  0DF3  0AF0               	incf	___awdiv@divisor,f
  9685  0DF4  1903               	skipnz
  9686  0DF5  0AF1               	incf	___awdiv@divisor+1,f
  9687  0DF6  01F6               	clrf	___awdiv@sign
  9688  0DF7  0AF6               	incf	___awdiv@sign,f
  9689  0DF8                     l2223:	
  9690  0DF8  1FF3               	btfss	___awdiv@dividend+1,7
  9691  0DF9  2E03               	goto	l2229
  9692  0DFA  09F2               	comf	___awdiv@dividend,f
  9693  0DFB  09F3               	comf	___awdiv@dividend+1,f
  9694  0DFC  0AF2               	incf	___awdiv@dividend,f
  9695  0DFD  1903               	skipnz
  9696  0DFE  0AF3               	incf	___awdiv@dividend+1,f
  9697  0DFF  3001               	movlw	1
  9698  0E00  00F4               	movwf	??___awdiv
  9699  0E01  0874               	movf	??___awdiv,w
  9700  0E02  06F6               	xorwf	___awdiv@sign,f
  9701  0E03                     l2229:	
  9702  0E03  01F7               	clrf	___awdiv@quotient
  9703  0E04  01F8               	clrf	___awdiv@quotient+1
  9704  0E05  0870               	movf	___awdiv@divisor,w
  9705  0E06  0471               	iorwf	___awdiv@divisor+1,w
  9706  0E07  1903               	btfsc	3,2
  9707  0E08  2E32               	goto	l2251
  9708  0E09  01F5               	clrf	___awdiv@counter
  9709  0E0A  0AF5               	incf	___awdiv@counter,f
  9710  0E0B                     l2239:	
  9711  0E0B  1BF1               	btfsc	___awdiv@divisor+1,7
  9712  0E0C  2E17               	goto	l2241
  9713  0E0D  3001               	movlw	1
  9714  0E0E                     u2335:	
  9715  0E0E  35F0               	lslf	___awdiv@divisor,f
  9716  0E0F  0DF1               	rlf	___awdiv@divisor+1,f
  9717  0E10  0B89               	decfsz	9,f
  9718  0E11  2E0E               	goto	u2335
  9719  0E12  3001               	movlw	1
  9720  0E13  00F4               	movwf	??___awdiv
  9721  0E14  0874               	movf	??___awdiv,w
  9722  0E15  07F5               	addwf	___awdiv@counter,f
  9723  0E16  2E0B               	goto	l2239
  9724  0E17                     l2241:	
  9725  0E17  3001               	movlw	1
  9726  0E18                     u2355:	
  9727  0E18  35F7               	lslf	___awdiv@quotient,f
  9728  0E19  0DF8               	rlf	___awdiv@quotient+1,f
  9729  0E1A  0B89               	decfsz	9,f
  9730  0E1B  2E18               	goto	u2355
  9731  0E1C  0871               	movf	___awdiv@divisor+1,w
  9732  0E1D  0273               	subwf	___awdiv@dividend+1,w
  9733  0E1E  1D03               	skipz
  9734  0E1F  2E22               	goto	u2365
  9735  0E20  0870               	movf	___awdiv@divisor,w
  9736  0E21  0272               	subwf	___awdiv@dividend,w
  9737  0E22                     u2365:	
  9738  0E22  1C03               	skipc
  9739  0E23  2E29               	goto	l2247
  9740  0E24  0870               	movf	___awdiv@divisor,w
  9741  0E25  02F2               	subwf	___awdiv@dividend,f
  9742  0E26  0871               	movf	___awdiv@divisor+1,w
  9743  0E27  3BF3               	subwfb	___awdiv@dividend+1,f
  9744  0E28  1477               	bsf	___awdiv@quotient,0
  9745  0E29                     l2247:	
  9746  0E29  3001               	movlw	1
  9747  0E2A                     u2375:	
  9748  0E2A  36F1               	lsrf	___awdiv@divisor+1,f
  9749  0E2B  0CF0               	rrf	___awdiv@divisor,f
  9750  0E2C  0B89               	decfsz	9,f
  9751  0E2D  2E2A               	goto	u2375
  9752  0E2E  3001               	movlw	1
  9753  0E2F  02F5               	subwf	___awdiv@counter,f
  9754  0E30  1D03               	btfss	3,2
  9755  0E31  2E17               	goto	l2241
  9756  0E32                     l2251:	
  9757  0E32  0876               	movf	___awdiv@sign,w
  9758  0E33  1903               	btfsc	3,2
  9759  0E34  2E3A               	goto	l2255
  9760  0E35  09F7               	comf	___awdiv@quotient,f
  9761  0E36  09F8               	comf	___awdiv@quotient+1,f
  9762  0E37  0AF7               	incf	___awdiv@quotient,f
  9763  0E38  1903               	skipnz
  9764  0E39  0AF8               	incf	___awdiv@quotient+1,f
  9765  0E3A                     l2255:	
  9766  0E3A  0878               	movf	___awdiv@quotient+1,w
  9767  0E3B  00F1               	movwf	?___awdiv+1
  9768  0E3C  0877               	movf	___awdiv@quotient,w
  9769  0E3D  00F0               	movwf	?___awdiv
  9770  0E3E  0008               	return
  9771  0E3F                     __end_of___awdiv:	
  9772                           
  9773                           	psect	text32
  9774  0C98                     __ptext32:	
  9775 ;; *************** function _LCD_Write_Char *****************
  9776 ;; Defined at:
  9777 ;;		line 223 in file "lcd.c"
  9778 ;; Parameters:    Size  Location     Type
  9779 ;;  a               1    wreg     const unsigned char 
  9780 ;; Auto vars:     Size  Location     Type
  9781 ;;  a               1    4[COMMON] const unsigned char 
  9782 ;;  y               1    3[COMMON] unsigned char 
  9783 ;;  temp            1    2[COMMON] unsigned char 
  9784 ;; Return value:  Size  Location     Type
  9785 ;;                  1    wreg      void 
  9786 ;; Registers used:
  9787 ;;		wreg, status,2, status,0, pclath, cstack
  9788 ;; Tracked objects:
  9789 ;;		On entry : 0/0
  9790 ;;		On exit  : 0/0
  9791 ;;		Unchanged: 0/0
  9792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9794 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9795 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9796 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9797 ;;Total ram usage:        4 bytes
  9798 ;; Hardware stack levels used:    1
  9799 ;; Hardware stack levels required when called:    1
  9800 ;; This function calls:
  9801 ;;		_LCD_Port
  9802 ;; This function is called by:
  9803 ;;		_InitCustomChars
  9804 ;;		_LCD_Write_String
  9805 ;;		_LCD_Write_Int
  9806 ;;		_main
  9807 ;; This function uses a non-reentrant model
  9808 ;;
  9809                           
  9810                           
  9811                           ;psect for function _LCD_Write_Char
  9812  0C98                     _LCD_Write_Char:	
  9813                           
  9814                           ;incstack = 0
  9815                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  9816                           ;LCD_Write_Char@a stored from wreg
  9817  0C98  00F4               	movwf	LCD_Write_Char@a
  9818                           
  9819                           ;lcd.c: 225: char temp,y;
  9820                           ;lcd.c: 226: temp = a&0x0F;
  9821  0C99  0874               	movf	LCD_Write_Char@a,w
  9822  0C9A  390F               	andlw	15
  9823  0C9B  00F1               	movwf	??_LCD_Write_Char
  9824  0C9C  0871               	movf	??_LCD_Write_Char,w
  9825  0C9D  00F2               	movwf	LCD_Write_Char@temp
  9826                           
  9827                           ;lcd.c: 227: y = a&0xF0;
  9828  0C9E  0874               	movf	LCD_Write_Char@a,w
  9829  0C9F  39F0               	andlw	240
  9830  0CA0  00F1               	movwf	??_LCD_Write_Char
  9831  0CA1  0871               	movf	??_LCD_Write_Char,w
  9832  0CA2  00F3               	movwf	LCD_Write_Char@y
  9833                           
  9834                           ;lcd.c: 228: RA0 = 1;
  9835  0CA3  0020               	movlb	0	; select bank0
  9836  0CA4  140C               	bsf	12,0	;volatile
  9837                           
  9838                           ;lcd.c: 229: LCD_Port(y>>4);
  9839  0CA5  0873               	movf	LCD_Write_Char@y,w
  9840  0CA6  00F1               	movwf	??_LCD_Write_Char
  9841  0CA7  3004               	movlw	4
  9842  0CA8                     u2045:	
  9843  0CA8  36F1               	lsrf	??_LCD_Write_Char,f
  9844  0CA9  0B89               	decfsz	9,f
  9845  0CAA  2CA8               	goto	u2045
  9846  0CAB  0871               	movf	??_LCD_Write_Char,w
  9847  0CAC  318B  23B5  318C   	fcall	_LCD_Port
  9848                           
  9849                           ;lcd.c: 230: RA2 = 1;
  9850  0CAF  0020               	movlb	0	; select bank0
  9851  0CB0  150C               	bsf	12,2	;volatile
  9852                           
  9853                           ;lcd.c: 231: RA2 = 0;
  9854  0CB1  110C               	bcf	12,2	;volatile
  9855                           
  9856                           ;lcd.c: 232: _delay((unsigned long)((40)*(1000000/4000000.0)));
  9857  0CB2  3003               	movlw	3
  9858  0CB3  00F1               	movwf	??_LCD_Write_Char
  9859  0CB4                     u3117:	
  9860  0CB4  0BF1               	decfsz	??_LCD_Write_Char,f
  9861  0CB5  2CB4               	goto	u3117
  9862                           
  9863                           ;lcd.c: 233: LCD_Port(temp);
  9864  0CB6  0872               	movf	LCD_Write_Char@temp,w
  9865  0CB7  318B  23B5  318C   	fcall	_LCD_Port
  9866                           
  9867                           ;lcd.c: 234: RA2 = 1;
  9868  0CBA  0020               	movlb	0	; select bank0
  9869  0CBB  150C               	bsf	12,2	;volatile
  9870                           
  9871                           ;lcd.c: 235: RA2 = 0;
  9872  0CBC  110C               	bcf	12,2	;volatile
  9873                           
  9874                           ;lcd.c: 236: _delay((unsigned long)((40)*(1000000/4000000.0)));
  9875  0CBD  3003               	movlw	3
  9876  0CBE  00F1               	movwf	??_LCD_Write_Char
  9877  0CBF                     u3127:	
  9878  0CBF  0BF1               	decfsz	??_LCD_Write_Char,f
  9879  0CC0  2CBF               	goto	u3127
  9880  0CC1  0008               	return
  9881  0CC2                     __end_of_LCD_Write_Char:	
  9882                           
  9883                           	psect	text33
  9884  0D6A                     __ptext33:	
  9885 ;; *************** function _LCD_Set_Cursor *****************
  9886 ;; Defined at:
  9887 ;;		line 82 in file "lcd.c"
  9888 ;; Parameters:    Size  Location     Type
  9889 ;;  x               1    wreg     unsigned char 
  9890 ;;  y               1    3[COMMON] unsigned char 
  9891 ;; Auto vars:     Size  Location     Type
  9892 ;;  x               1    6[COMMON] unsigned char 
  9893 ;;  temp            1    9[COMMON] unsigned char 
  9894 ;;  w               1    8[COMMON] unsigned char 
  9895 ;;  z               1    7[COMMON] unsigned char 
  9896 ;; Return value:  Size  Location     Type
  9897 ;;                  1    wreg      void 
  9898 ;; Registers used:
  9899 ;;		wreg, status,2, status,0, pclath, cstack
  9900 ;; Tracked objects:
  9901 ;;		On entry : 0/0
  9902 ;;		On exit  : 0/0
  9903 ;;		Unchanged: 0/0
  9904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9905 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9906 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9907 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9908 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9909 ;;Total ram usage:        7 bytes
  9910 ;; Hardware stack levels used:    1
  9911 ;; Hardware stack levels required when called:    2
  9912 ;; This function calls:
  9913 ;;		_LCD_Cmd
  9914 ;; This function is called by:
  9915 ;;		_main
  9916 ;; This function uses a non-reentrant model
  9917 ;;
  9918                           
  9919                           
  9920                           ;psect for function _LCD_Set_Cursor
  9921  0D6A                     _LCD_Set_Cursor:	
  9922                           
  9923                           ;incstack = 0
  9924                           ; Regs used in _LCD_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  9925                           ;LCD_Set_Cursor@x stored from wreg
  9926  0D6A  00F6               	movwf	LCD_Set_Cursor@x
  9927                           
  9928                           ;lcd.c: 86: char temp,z,w;
  9929                           ;lcd.c: 88: if(y == 0)
  9930  0D6B  0873               	movf	LCD_Set_Cursor@y,w
  9931  0D6C  1D03               	btfss	3,2
  9932  0D6D  2D8A               	goto	l2377
  9933                           
  9934                           ;lcd.c: 89: {
  9935                           ;lcd.c: 90: temp = 0x80 + x;
  9936  0D6E  0876               	movf	LCD_Set_Cursor@x,w
  9937  0D6F  3E80               	addlw	128
  9938  0D70  00F4               	movwf	??_LCD_Set_Cursor
  9939  0D71  0874               	movf	??_LCD_Set_Cursor,w
  9940  0D72  00F9               	movwf	LCD_Set_Cursor@temp
  9941                           
  9942                           ;lcd.c: 91: z = temp>>4;
  9943  0D73  0879               	movf	LCD_Set_Cursor@temp,w
  9944  0D74  00F4               	movwf	??_LCD_Set_Cursor
  9945  0D75  3004               	movlw	4
  9946  0D76                     u2695:	
  9947  0D76  36F4               	lsrf	??_LCD_Set_Cursor,f
  9948  0D77  0B89               	decfsz	9,f
  9949  0D78  2D76               	goto	u2695
  9950  0D79  0874               	movf	??_LCD_Set_Cursor,w
  9951  0D7A  00F5               	movwf	??_LCD_Set_Cursor+1
  9952  0D7B  0875               	movf	??_LCD_Set_Cursor+1,w
  9953  0D7C  00F7               	movwf	LCD_Set_Cursor@z
  9954                           
  9955                           ;lcd.c: 92: w = temp & 0x0F;
  9956  0D7D  0879               	movf	LCD_Set_Cursor@temp,w
  9957  0D7E  390F               	andlw	15
  9958  0D7F  00F4               	movwf	??_LCD_Set_Cursor
  9959  0D80  0874               	movf	??_LCD_Set_Cursor,w
  9960  0D81  00F8               	movwf	LCD_Set_Cursor@w
  9961                           
  9962                           ;lcd.c: 93: LCD_Cmd(z);
  9963  0D82  0877               	movf	LCD_Set_Cursor@z,w
  9964  0D83  318B  238D  318D   	fcall	_LCD_Cmd
  9965                           
  9966                           ;lcd.c: 94: LCD_Cmd(w);
  9967  0D86  0878               	movf	LCD_Set_Cursor@w,w
  9968  0D87  318B  238D         	fcall	_LCD_Cmd
  9969                           
  9970                           ;lcd.c: 95: }
  9971  0D89  0008               	return
  9972  0D8A                     l2377:	
  9973                           
  9974                           ;lcd.c: 97: else if(y == 1)
  9975  0D8A  0373               	decf	LCD_Set_Cursor@y,w
  9976  0D8B  1D03               	btfss	3,2
  9977  0D8C  0008               	return
  9978                           
  9979                           ;lcd.c: 98: {
  9980                           ;lcd.c: 99: temp = 0xC0 + x;
  9981  0D8D  0876               	movf	LCD_Set_Cursor@x,w
  9982  0D8E  3EC0               	addlw	192
  9983  0D8F  00F4               	movwf	??_LCD_Set_Cursor
  9984  0D90  0874               	movf	??_LCD_Set_Cursor,w
  9985  0D91  00F9               	movwf	LCD_Set_Cursor@temp
  9986                           
  9987                           ;lcd.c: 100: z = temp>>4;
  9988  0D92  0879               	movf	LCD_Set_Cursor@temp,w
  9989  0D93  00F4               	movwf	??_LCD_Set_Cursor
  9990  0D94  3004               	movlw	4
  9991  0D95                     u2715:	
  9992  0D95  36F4               	lsrf	??_LCD_Set_Cursor,f
  9993  0D96  0B89               	decfsz	9,f
  9994  0D97  2D95               	goto	u2715
  9995  0D98  0874               	movf	??_LCD_Set_Cursor,w
  9996  0D99  00F5               	movwf	??_LCD_Set_Cursor+1
  9997  0D9A  0875               	movf	??_LCD_Set_Cursor+1,w
  9998  0D9B  00F7               	movwf	LCD_Set_Cursor@z
  9999                           
 10000                           ;lcd.c: 101: w = temp & 0x0F;
 10001  0D9C  0879               	movf	LCD_Set_Cursor@temp,w
 10002  0D9D  390F               	andlw	15
 10003  0D9E  00F4               	movwf	??_LCD_Set_Cursor
 10004  0D9F  0874               	movf	??_LCD_Set_Cursor,w
 10005  0DA0  00F8               	movwf	LCD_Set_Cursor@w
 10006                           
 10007                           ;lcd.c: 102: LCD_Cmd(z);
 10008  0DA1  0877               	movf	LCD_Set_Cursor@z,w
 10009  0DA2  318B  238D  318D   	fcall	_LCD_Cmd
 10010                           
 10011                           ;lcd.c: 103: LCD_Cmd(w);
 10012  0DA5  0878               	movf	LCD_Set_Cursor@w,w
 10013  0DA6  318B  238D         	fcall	_LCD_Cmd
 10014  0DA8  0008               	return
 10015  0DA9                     __end_of_LCD_Set_Cursor:	
 10016                           
 10017                           	psect	text34
 10018  0B8D                     __ptext34:	
 10019 ;; *************** function _LCD_Cmd *****************
 10020 ;; Defined at:
 10021 ;;		line 65 in file "lcd.c"
 10022 ;; Parameters:    Size  Location     Type
 10023 ;;  a               1    wreg     unsigned char 
 10024 ;; Auto vars:     Size  Location     Type
 10025 ;;  a               1    2[COMMON] unsigned char 
 10026 ;; Return value:  Size  Location     Type
 10027 ;;                  1    wreg      void 
 10028 ;; Registers used:
 10029 ;;		wreg, status,2, status,0, pclath, cstack
 10030 ;; Tracked objects:
 10031 ;;		On entry : 0/0
 10032 ;;		On exit  : 0/0
 10033 ;;		Unchanged: 0/0
 10034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10036 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10037 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10038 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10039 ;;Total ram usage:        2 bytes
 10040 ;; Hardware stack levels used:    1
 10041 ;; Hardware stack levels required when called:    1
 10042 ;; This function calls:
 10043 ;;		_LCD_Port
 10044 ;; This function is called by:
 10045 ;;		_InitCustomChars
 10046 ;;		_LCD_Clear
 10047 ;;		_LCD_Set_Cursor
 10048 ;;		_LCD_Init
 10049 ;; This function uses a non-reentrant model
 10050 ;;
 10051                           
 10052                           
 10053                           ;psect for function _LCD_Cmd
 10054  0B8D                     _LCD_Cmd:	
 10055                           
 10056                           ;incstack = 0
 10057                           ; Regs used in _LCD_Cmd: [wreg+status,2+status,0+pclath+cstack]
 10058                           ;LCD_Cmd@a stored from wreg
 10059  0B8D  00F2               	movwf	LCD_Cmd@a
 10060                           
 10061                           ;lcd.c: 67: RA0 = 0;
 10062  0B8E  0020               	movlb	0	; select bank0
 10063  0B8F  100C               	bcf	12,0	;volatile
 10064                           
 10065                           ;lcd.c: 68: LCD_Port(a);
 10066  0B90  0872               	movf	LCD_Cmd@a,w
 10067  0B91  318B  23B5  318B   	fcall	_LCD_Port
 10068                           
 10069                           ;lcd.c: 69: RA2 = 1;
 10070  0B94  0020               	movlb	0	; select bank0
 10071  0B95  150C               	bsf	12,2	;volatile
 10072                           
 10073                           ;lcd.c: 70: RA2 = 0;
 10074  0B96  110C               	bcf	12,2	;volatile
 10075                           
 10076                           ;lcd.c: 71: _delay((unsigned long)((4)*(1000000/4000.0)));
 10077  0B97  30F9               	movlw	249
 10078  0B98  00F1               	movwf	??_LCD_Cmd
 10079  0B99                     u3137:	
 10080  0B99  0000               	nop
 10081  0B9A  0BF1               	decfsz	??_LCD_Cmd,f
 10082  0B9B  2B99               	goto	u3137
 10083  0B9C  3200               	nop2	;nop
 10084  0B9D  0000               	nop
 10085  0B9E  0008               	return
 10086  0B9F                     __end_of_LCD_Cmd:	
 10087                           
 10088                           	psect	text35
 10089  0BB5                     __ptext35:	
 10090 ;; *************** function _LCD_Port *****************
 10091 ;; Defined at:
 10092 ;;		line 41 in file "lcd.c"
 10093 ;; Parameters:    Size  Location     Type
 10094 ;;  a               1    wreg     unsigned char 
 10095 ;; Auto vars:     Size  Location     Type
 10096 ;;  a               1    0[COMMON] unsigned char 
 10097 ;; Return value:  Size  Location     Type
 10098 ;;                  1    wreg      void 
 10099 ;; Registers used:
 10100 ;;		wreg
 10101 ;; Tracked objects:
 10102 ;;		On entry : 0/0
 10103 ;;		On exit  : 0/0
 10104 ;;		Unchanged: 0/0
 10105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10107 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10109 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10110 ;;Total ram usage:        1 bytes
 10111 ;; Hardware stack levels used:    1
 10112 ;; This function calls:
 10113 ;;		Nothing
 10114 ;; This function is called by:
 10115 ;;		_LCD_Cmd
 10116 ;;		_LCD_Init
 10117 ;;		_LCD_Write_Char
 10118 ;; This function uses a non-reentrant model
 10119 ;;
 10120                           
 10121                           
 10122                           ;psect for function _LCD_Port
 10123  0BB5                     _LCD_Port:	
 10124                           
 10125                           ;incstack = 0
 10126                           ; Regs used in _LCD_Port: [wreg]
 10127                           ;LCD_Port@a stored from wreg
 10128  0BB5  00F0               	movwf	LCD_Port@a
 10129                           
 10130                           ;lcd.c: 43: if(a & 1)
 10131  0BB6  1C70               	btfss	LCD_Port@a,0
 10132  0BB7  2BBB               	goto	l94
 10133                           
 10134                           ;lcd.c: 44: RA7 = 1;
 10135  0BB8  0020               	movlb	0	; select bank0
 10136  0BB9  178C               	bsf	12,7	;volatile
 10137  0BBA  2BBD               	goto	l1745
 10138  0BBB                     l94:	
 10139                           
 10140                           ;lcd.c: 45: else
 10141                           ;lcd.c: 46: RA7 = 0;
 10142  0BBB  0020               	movlb	0	; select bank0
 10143  0BBC  138C               	bcf	12,7	;volatile
 10144  0BBD                     l1745:	
 10145                           
 10146                           ;lcd.c: 48: if(a & 2)
 10147  0BBD  1CF0               	btfss	LCD_Port@a,1
 10148  0BBE  2BC1               	goto	l96
 10149                           
 10150                           ;lcd.c: 49: RA6 = 1;
 10151  0BBF  170C               	bsf	12,6	;volatile
 10152  0BC0  2BC2               	goto	l1749
 10153  0BC1                     l96:	
 10154                           
 10155                           ;lcd.c: 50: else
 10156                           ;lcd.c: 51: RA6 = 0;
 10157  0BC1  130C               	bcf	12,6	;volatile
 10158  0BC2                     l1749:	
 10159                           
 10160                           ;lcd.c: 53: if(a & 4)
 10161  0BC2  1D70               	btfss	LCD_Port@a,2
 10162  0BC3  2BC6               	goto	l98
 10163                           
 10164                           ;lcd.c: 54: RC0 = 1;
 10165  0BC4  140E               	bsf	14,0	;volatile
 10166  0BC5  2BC7               	goto	l1753
 10167  0BC6                     l98:	
 10168                           
 10169                           ;lcd.c: 55: else
 10170                           ;lcd.c: 56: RC0 = 0;
 10171  0BC6  100E               	bcf	14,0	;volatile
 10172  0BC7                     l1753:	
 10173                           
 10174                           ;lcd.c: 58: if(a & 8)
 10175  0BC7  1DF0               	btfss	LCD_Port@a,3
 10176  0BC8  2BCB               	goto	l100
 10177                           
 10178                           ;lcd.c: 59: RC1 = 1;
 10179  0BC9  148E               	bsf	14,1	;volatile
 10180  0BCA  0008               	return
 10181  0BCB                     l100:	
 10182                           
 10183                           ;lcd.c: 60: else
 10184                           ;lcd.c: 61: RC1 = 0;
 10185  0BCB  108E               	bcf	14,1	;volatile
 10186  0BCC  0008               	return
 10187  0BCD                     __end_of_LCD_Port:	
 10188  007E                     btemp	set	126	;btemp
 10189  007E                     wtemp	set	126
 10190  007E                     wtemp0	set	126
 10191  0080                     wtemp1	set	128
 10192  0082                     wtemp2	set	130
 10193  0084                     wtemp3	set	132
 10194  0086                     wtemp4	set	134
 10195  0088                     wtemp5	set	136
 10196  007F                     wtemp6	set	127
 10197  007E                     ttemp	set	126
 10198  007E                     ttemp0	set	126
 10199  0081                     ttemp1	set	129
 10200  0084                     ttemp2	set	132
 10201  0087                     ttemp3	set	135
 10202  007F                     ttemp4	set	127
 10203  007E                     ltemp	set	126
 10204  007E                     ltemp0	set	126
 10205  0082                     ltemp1	set	130
 10206  0086                     ltemp2	set	134
 10207  0080                     ltemp3	set	128


Data Sizes:
    Strings     9
    Constant    27
    Data        36
    BSS         81
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     75      79
    BANK1            80     22      75
    BANK2            80      0      60
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 27
		 -> log@coeff(CODE[27]), 

    LCD_Write_String@a	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_1(CODE[9]), 


Critical Paths under _main in COMMON

    _main->___fttol
    _tempCalc->___awtoft
    _log->___awtoft
    ___ftmul->___awtoft
    ___awtoft->___ftpack
    ___ftadd->___awtoft
    ___ftdiv->___awtoft
    _readAnalog->___aldiv
    _SYSTEM_Initialize->_InitCustomChars
    _LCD_Init->_LCD_Cmd
    _LCD_Clear->_LCD_Cmd
    _InitCustomChars->_LCD_Write_Char
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Int->___fttol
    _LCD_Write_Char->_LCD_Port
    _LCD_Set_Cursor->_LCD_Cmd
    _LCD_Cmd->_LCD_Port

Critical Paths under _main in BANK0

    _main->_tempCalc
    _tempCalc->_log
    _log->_eval_poly
    _eval_poly->___ftadd
    ___ftsub->___ftadd
    ___ftadd->___ftdiv
    ___ftdiv->___ftmul
    _readAnalog->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                30    30      0   35777
                                             73 BANK0      2     2      0
                                              0 BANK1     22    22      0
                          _LCD_Clear
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                      _LCD_Write_Int
                   _LCD_Write_String
                 _PWM6_LoadDutyValue
                  _SYSTEM_Initialize
                            ___fttol
                         _readAnalog
                           _tempCalc
 ---------------------------------------------------------------------------------
 (1) _tempCalc                                            12     9      3   29760
                                             61 BANK0     12     9      3
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftsub
                                _log
 ---------------------------------------------------------------------------------
 (2) _log                                                  6     3      3   15481
                                             55 BANK0      6     3      3
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _frexp                                                6     2      4     330
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) _eval_poly                                           10     3      7    6735
                                             45 BANK0     10     3      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     466
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             16    10      6    2643
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6     322
                                              0 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             6     3      3    1904
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3462
                                             45 BANK0      6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             13     7      6    3289
                                             32 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    2623
                                             16 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    1707
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _readAnalog                                          21    19      2     940
                                              9 COMMON     4     4      0
                                              6 BANK0     17    15      2
                            _ADCRead
                            ___aldiv
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     170
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     406
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _ADCRead                                              4     1      3      22
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             14    10      4     305
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    2     2      0     709
                                              7 COMMON     2     2      0
                    _ADCC_Initialize
                    _InitCustomChars
                          _LCD_Clear
                           _LCD_Init
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM6_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             3     3      0     220
                                              3 COMMON     3     3      0
                            _LCD_Cmd
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            0     0      0     110
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (2) _InitCustomChars                                      2     2      0     356
                                              5 COMMON     2     2      0
                            _LCD_Cmd
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM6_LoadDutyValue                                   4     2      2     150
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCD_Write_String                                     5     3      2     321
                                              5 COMMON     5     3      2
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (1) _LCD_Write_Int                                       19    14      5    2335
                                              0 BANK0     19    14      5
                     _LCD_Write_Char
                            ___awdiv
                            ___awmod
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     402
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     406
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (1) _LCD_Set_Cursor                                       7     6      1     645
                                              3 COMMON     7     6      1
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (3) _LCD_Cmd                                              2     2      0     110
                                              1 COMMON     2     2      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (3) _LCD_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Clear
     _LCD_Cmd
       _LCD_Port
   _LCD_Set_Cursor
     _LCD_Cmd
       _LCD_Port
   _LCD_Write_Char
     _LCD_Port
   _LCD_Write_Int
     _LCD_Write_Char
       _LCD_Port
     ___awdiv
     ___awmod
     ___fttol (ARG)
   _LCD_Write_String
     _LCD_Write_Char
       _LCD_Port
   _PWM6_LoadDutyValue
   _SYSTEM_Initialize
     _ADCC_Initialize
     _InitCustomChars
       _LCD_Cmd
         _LCD_Port
       _LCD_Write_Char
         _LCD_Port
     _LCD_Clear
       _LCD_Cmd
         _LCD_Port
     _LCD_Init
       _LCD_Cmd
         _LCD_Port
       _LCD_Port
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM6_Initialize
     _TMR2_Initialize
   ___fttol
   _readAnalog
     _ADCRead
     ___aldiv
     ___bmul
   _tempCalc
     ___awtoft
       ___ftpack
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
       _frexp (ARG)
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftsub
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
     _log
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftge
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       _eval_poly
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___wmul
       _frexp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4B      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     16      4B       7       93.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      3C       9       75.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      E4      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      E4      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Fri Jan 26 14:54:29 2018

                 ___bmul@product 0072                      __CFG_CP$OFF 0000                               l58 0B75  
                             l94 0BBB                               l96 0BC1                               l98 0BC6  
                   ___awdiv@sign 0076              ___wmul@multiplicand 0072      __size_of_PWM6_LoadDutyValue 0016  
                   ___ftadd@exp1 004C                     ___ftadd@exp2 004B                      __CFG_LVP$ON 0000  
                   ___ftadd@sign 004A                              l100 0BCB                              l428 0F8F  
                            l541 0EE4                              l373 0C21                              l542 0EEC  
                            l534 0ED1                              l625 00AD                              l565 043B  
                            _GIE 005F                              _RA0 0060                              _RA2 0062  
                            _RC0 0070                              _RC1 0071                              _RA6 0066  
                            _RA7 0067                     __CFG_CPD$OFF 0000                              _log 0170  
                __end_of_ADCRead 0B7C                     ___awmod@sign 0076                  _TMR2_Initialize 0B60  
                   __CFG_BORV$LO 0000                              wreg 0009                      main@analogs 00CC  
                __end_of_LCD_Cmd 0B9F                     __CFG_ZCD$OFF 0000                     ___ftdiv@cntr 003A  
                 _LCD_Set_Cursor 0D6A                     ___ftdiv@sign 003F                             l2035 0C90  
                           l2211 0FF7                             l2203 0FDE                             l2029 0C7F  
                           l2223 0DF8                             l2207 0FE9                             l2303 00DE  
                           l2151 019F                             l2241 0E17                             l2145 018E  
                           l2251 0E32                             l2163 0B7E                             l2331 014E  
                           l2323 0135                             l2229 0E03                             l2309 00F4  
                           l2255 0E3A                             l2247 0E29                             l2239 0E0B  
                           l2271 0DBA                             l2423 032D                             l2407 02F3  
                           l2167 0B84                             l2343 0C3C                             l2281 0DCC  
                           l2441 0387                             l2425 0331                             l2417 02FA  
                           l2521 00A4                             l2513 0089                             l2193 0FB0  
                           l2185 0FA0                             l2361 057E                             l1721 0EBD  
                           l1713 0EA7                             l2267 0DB3                             l2435 034D  
                           l2427 0339                             l2419 0329                             l2523 00B0  
                           l2515 0097                             l2195 0FBE                             l1811 041A  
                           l2293 0DE9                             l2285 0DD8                             l2437 0379  
                           l2429 0349                             l1717 0EAE                             l1805 0407  
                           l2279 0DC0                             l2527 00BE                             l1727 0ED6  
                           l1719 0EB8                             l1823 044D                             l1807 0411  
                           l1753 0BC7                             l1745 0BBD                             l2377 0D8A  
                           l2289 0DE1                             l2393 0BE7                             l1729 0EDE  
                           l1817 042D                             l1809 0416                             l1827 045F  
                           l1819 0437                             l2563 071A                             l1749 0BC2  
                           l1837 047A                             l1781 03CB                             l1941 0D5B  
                           l1853 024A                             l2557 06FC                             l2549 06EE  
                           l2495 0059                             l1847 0234                             l1759 0C1B  
                           l1777 03C4                             l1929 0C5C                             l1937 0D45  
                           l1881 02A9                             l1865 0285                             l1961 0018  
                           l1787 03DA                             l1877 02A1                             l1869 028D  
                           l1799 03F4                             l2599 079F                             l1979 0E98  
                           ?_log 0057                             STR_1 101B                             u2015 02AA  
                           u2025 02B0                             u2140 0CF6                             u2045 0CA8  
                           _LATA 0016                             _LATB 0017                             u3007 0D29  
                           _LATC 0018                             u3017 0F0C                             u3107 0F7A  
                           u3027 0F19                             u2235 0FB3                             u1515 0EB3  
                           u3117 0CB4                             u3037 0F24                             u3127 0CBF  
                           u2335 0E0E                             u3047 0F2D                             u2255 0FBF  
                           u1535 0ECC                             u3137 0B99                             u3057 0F36  
                           u2265 0FD3                             _T2PR 028D                             u2355 0E18  
                           u2435 0DC3                             u3067 0F43                             u2275 0FDF  
                           u1555 0ED9                             u2515 0106                             u2365 0E22  
                           u3077 0F50                             u2605 04ED                             u2525 0116  
                           u2375 0E2A                             u2455 0DD2                             u3087 0F5D  
                           u2615 0500                             u2535 0136                             u1815 0408  
                           u2465 0DD9                             u3097 0F6C                             u2625 051A  
                           u2545 0145                             u1665 0C22                             u2730 02DC  
                           u2715 0D95                             u2635 052D                             u1595 0EF3  
                           u2555 014F                             u1675 0C27                             u2645 0555  
                           u1845 041B                             u2655 056E                             u2825 0BAE  
                           u2905 00A5                             u2585 04A7                             u1785 03F5  
                           u1945 0256                             u2930 06C9                             u2675 058A  
                           u2595 04BA                             u1875 042E                             u1955 0266  
                           u2845 0060                             u2695 0D76                             u1975 028E  
                           u1985 0294                             u2795 0367                             u2875 008A  
                           u2977 06E3                             u2987 0D11                             u2997 0D1D  
            tempCalc@analogValue 005D                             _WPUA 0F39                             _WPUB 0F44  
                           _WPUC 0F4F                             _WPUE 0F65                     __CFG_WRT$OFF 0000  
                  __CFG_FCMEN$ON 0000                ?_LCD_Write_String 0075                             _main 06BB  
                   ___ftpack@arg 0070               __size_of_LCD_Clear 0008                     ___ftpack@exp 0073  
                           fsr0h 0005                             fsr1h 0007                             fsr0l 0004  
                           indf0 0000                             indf1 0001                             fsr1l 0006  
                           btemp 007E                             log@x 0057                             ltemp 007E  
                           start 0002               ??_LCD_Write_String 0077                             ttemp 007E  
                           wtemp 007E                    __CFG_CSWEN$ON 0000                ___bmul@multiplier 0073  
                  __CFG_MCLRE$ON 0000                     ___ftmul@cntr 002E                    _LCD_Write_Int 02D1  
                   ___ftmul@sign 002F                     ___fttol@exp1 007D                            ??_log 005A  
                   ___fttol@lval 0079                 __end_of_LCD_Init 0F7E                 __end_of_LCD_Port 0BCD  
 __size_of_OSCILLATOR_Initialize 0008    __end_of_OSCILLATOR_Initialize 0B49                  __end_of___aldiv 1000  
                          _ADACQ 009D                            _ADCAP 009B                            _ADACT 0099  
                          ?_main 0070                            _ADCLK 0098                            _ADPCH 009E  
                          _ADREF 009A                  __end_of___awdiv 0E3F                            _ADPRE 009C  
                __end_of___ftadd 0492                    __CFG_WDTE$OFF 0000                  __end_of___awmod 0DEE  
                          _ADRPT 010D                  __end_of___ftdiv 0170                  __end_of___ftmul 02D1  
                ___awdiv@divisor 0070                  __end_of___ftsub 0C52                  __end_of___fttol 00C7  
                          _T2CON 028E                            _T2HLT 028F                            _T2TMR 028C  
                          _T2RST 0291                  ___awdiv@counter 0075                            _OSCEN 0891  
                          _TRISA 0011                            _TRISB 0012                            _TRISC 0013  
                _PWM6_Initialize 0B49           __end_of_LCD_Set_Cursor 0DA9                    ___awtoft@sign 007D  
                          _frexp 0006                            _errno 006B                    ___ftpack@sign 0074  
                          main@x 00DE                   __CFG_BOREN$OFF 0000                            ltemp0 007E  
                          ltemp1 0082                            ltemp2 0086                            ltemp3 0080  
                          ttemp0 007E                            ttemp1 0081                            ttemp2 0084  
                          ttemp3 0087                            ttemp4 007F                            status 0003  
                          wtemp0 007E                            wtemp1 0080                            wtemp2 0082  
                          wtemp3 0084                            wtemp4 0086                            wtemp5 0088  
                          wtemp6 007F                 InitCustomChars@i 0076                   ?_LCD_Write_Int 0020  
                 _LCD_Write_Char 0C98                  __initialization 07D2                      log@exponent 005B  
                   __end_of_main 07D2                readAnalog@channel 0026          __end_of_TMR2_Initialize 0B6E  
                      ??_ADCRead 0073                           ??_main 0069                    ___fttol@sign1 0078  
              __end_of_LCD_Clear 0B41                        ??_LCD_Cmd 0071                  ?_LCD_Set_Cursor 0073  
                         _ADCON0 0093                           _ADCON1 0094                           _ADCON2 0095  
                         _ADCON3 0096                           ?_frexp 0070                           _ADLTHH 010F  
                         _ADLTHL 010E                           _ADRESH 008D                           _ADRESL 008C  
                         _ADSTAT 0097                           _ADUTHH 0111                 ___awdiv@dividend 0072  
                         _ADUTHL 0110                 __end_of___awtoft 0C72                           _ANSELA 0F38  
                         _ANSELB 0F43                           _ANSELC 0F4E                 __end_of___ftpack 0F03  
             __CFG_RSTOSC$HFINT1 0000                           _RC2PPS 0F22                   __CFG_WDTCCS$SC 0000  
                         _FVRCON 090C                           _OSCFRQ 0893                    main@dutyCycle 00DC  
         __end_of_LCD_Write_Char 0CC2                   __CFG_PWRTE$OFF 0000                     _CCPTMRS1bits 021F  
                         ___bmul 0B7C                           ___ftge 0D2F           LCD_Write_Int@numPlaces 0023  
                      ??___aldiv 0078                           ___wmul 0C19                        ??___awdiv 0074  
                      ??___ftadd 0046                   __CFG_STVREN$ON 0000                        ??___awmod 0074  
                      ??___ftdiv 0036                        ??___ftmul 0026                        ??___ftsub 007E  
                      ??___fttol 0074          __end_of_PWM6_Initialize 0B54                 ___awdiv@quotient 0077  
                ___awmod@divisor 0070                  ___awmod@counter 0075                           _totals 00A0  
          ___ftmul@f3_as_product 002B                 __end_of_tempCalc 06BB                  _ADCC_Initialize 0BFF  
               LCD_Write_Int@str 002A                  _InitCustomChars 0C72                  LCD_Set_Cursor@w 0078  
                LCD_Set_Cursor@x 0076                  LCD_Set_Cursor@y 0073                  LCD_Set_Cursor@z 0077  
       readAnalog@analog_channel 0079                _SYSTEM_Initialize 0CF8                 __end_oflog@coeff 101B  
        __end_of__initialization 07FD                        ?_LCD_Init 0070                        ?_LCD_Port 0070  
                     ___ftadd@f1 0040                       ___ftadd@f2 0043                       ___ftge@ff1 0070  
                     ___ftge@ff2 0073                  ??_LCD_Write_Int 0025               ?_SYSTEM_Initialize 0070  
                   eval_poly@res 0054                       ___ftdiv@f1 0033                       ___ftdiv@f2 0030  
                     ___ftdiv@f3 003B                  ?_LCD_Write_Char 0070                    LCD_Init@style 0075  
                     ___awtoft@c 0078              ___bmul@multiplicand 0070                       ___ftmul@f1 0020  
                     ___ftmul@f2 0023                       ___ftsub@f1 0050                       ___ftsub@f2 004D  
                     ___fttol@f1 0070                   __pcstackCOMMON 0070                        LCD_Port@a 0070  
                   __pidataBANK1 0B54                     __pidataBANK2 0BCD              ??_SYSTEM_Initialize 0077  
                  __end_of_frexp 0041                 ?_TMR2_Initialize 0070                          ??_frexp 0074  
      __end_of_SYSTEM_Initialize 0D2F                       __pbssBANK0 006B                       __pbssBANK1 00A0  
                     __pbssBANK2 0120               __size_of_eval_poly 0060                       ??_LCD_Init 0073  
                     ??_LCD_Port 0070                       __pmaintext 06BB                          ?___bmul 0070  
                        ?___ftge 0070                          ?___wmul 0070                  __CFG_PPS1WAY$ON 0000  
        __end_of_ADCC_Initialize 0C19       __end_of_PWM6_LoadDutyValue 0BB5                          _ADCRead 0B6E  
      __size_of_LCD_Write_String 001A                 ?_PWM6_Initialize 0070                        ?___awtoft 0078  
                      ?___ftpack 0070                          _ADSTPTH 0113                          _ADSTPTL 0112  
               main@displayTemp2 00C9          __end_of_InitCustomChars 0C98                          _LCD_Cmd 0B8D  
                        _OSCCON1 088D                          _OSCCON3 088F                          _OSCTUNE 0892  
                        _PWM6DCH 038D                          _PWM6DCL 038C                          _PWM6CON 038E  
                        _PPSLOCK 0E8F                        ?_tempCalc 005D                       _readAnalog 0492  
           __CFG_SCANE$available 0000                          ___aldiv 0F7E                  __size_of___bmul 0011  
                        ___cgram 0144                  __size_of___ftge 003B                          ___awdiv 0DEE  
                        ___ftadd 039C                          ___awmod 0DA9                          ___ftdiv 00C7  
                __size_of___wmul 001B                          ___ftmul 021D                          ___ftsub 0C34  
                        ___fttol 0041                       ??___awtoft 007B                       ??___ftpack 0075  
              __end_of_eval_poly 0E9F                 ??_LCD_Set_Cursor 0074                          __ptext1 05A6  
                        __ptext2 0170                          __ptext3 0006                          __ptext4 0E3F  
                        __ptext5 0C19                          __ptext6 021D                          __ptext7 0D2F  
                        __ptext8 0C52                          __ptext9 0C34            _OSCILLATOR_Initialize 0B41  
                      _T2CONbits 028E                     __size_of_log 00AD                 ___awmod@dividend 0072  
                 ADCRead@channel 0073                 ___aldiv@dividend 0074         ??_PIN_MANAGER_Initialize 0070  
                        _samples 0120                        _LCD_Clear 0B39       __size_of_SYSTEM_Initialize 0037  
                        clrloop0 0B2E             end_of_initialization 07FD                          init_ram 0B33  
                        initloop 0B34                       ??_tempCalc 007E                 ___aldiv@quotient 0022  
              LCD_Write_Int@sign 0024                       main@F13657 00B8                     __pstringtext 1000  
               ?_ADCC_Initialize 0070            __CFG_WDTCPS$WDTCPS_31 0000                 ?_InitCustomChars 0070  
                     ?_LCD_Clear 0070                 __CFG_FEXTOSC$OFF 0000                LCD_Write_String@a 0075  
              LCD_Write_String@i 0078                 ??_LCD_Write_Char 0071                      ___ftdiv@exp 003E  
              __size_of_LCD_Init 007B                __size_of_LCD_Port 0018                      ___ftmul@exp 002A  
                    ?_readAnalog 0026                   __end_of___bmul 0B8D                   __end_of___ftge 0D6A  
                 __end_of___wmul 0C34                 _LCD_Write_String 0BE5           ?_OSCILLATOR_Initialize 0070  
            start_initialization 07D2                       eval_poly@d 0050                       eval_poly@n 0052  
                     eval_poly@x 004D  __size_of_PIN_MANAGER_Initialize 0036                      __end_of_log 021D  
                     frexp@value 0070         LCD_Write_Int@fieldLength 0022            __end_of_LCD_Write_Int 039C  
               __CFG_LPBOREN$OFF 0000                         ??___bmul 0071                         ??___ftge 0076  
              tempCalc@steinhart 0066                         ??___wmul 0074                      __pdataBANK1 00DF  
                    __pdataBANK2 0144                  LCD_Write_Char@a 0074                  LCD_Write_Char@y 0073  
                       ?_ADCRead 0070                         ?_LCD_Cmd 0070                __size_of___awtoft 0020  
              __size_of___ftpack 0064                         LCD_Cmd@a 0072                        ___latbits 0002  
                  __pcstackBANK0 0020                    __pcstackBANK1 00C9               _PWM6_LoadDutyValue 0B9F  
       __size_of_TMR2_Initialize 000E                      ??_LCD_Clear 0073              __size_of_readAnalog 0114  
            ?_PWM6_LoadDutyValue 0070           _PIN_MANAGER_Initialize 0CC2                         ?___aldiv 0070  
              __size_of_tempCalc 0115                         ?___awdiv 0070                         ?___ftadd 0040  
                       ?___awmod 0070                         ?___ftdiv 0030                         ?___ftmul 0020  
                       ?___ftsub 004D                         ?___fttol 0070                  main@displayTemp 00D8  
           ??_PWM6_LoadDutyValue 0072                        _eval_poly 0E3F         __size_of_PWM6_Initialize 000B  
                 __size_of_frexp 003B                         _T2CLKCON 0290                  ___aldiv@divisor 0070  
                ___aldiv@counter 0020                         _LCD_Init 0F03                   ___wmul@product 0074  
                       _LCD_Port 0BB5                        clear_ram0 0B2D                         _PIE0bits 0716  
                       _PIR4bits 0710                 __size_of_ADCRead 000E                       _ADCON0bits 0093  
              ___wmul@multiplier 0070                        main@count 00DB                       ?_eval_poly 004D  
               __size_of_LCD_Cmd 0012         __end_of_LCD_Write_String 0BFF                ??_TMR2_Initialize 0070  
                readAnalog@value 007B                        frexp@eptr 0073                     ??_readAnalog 0028  
                   _tempCalc$941 0063          ??_OSCILLATOR_Initialize 0070                   LCD_Write_Int@i 0031  
                 LCD_Write_Int@j 002F                 __size_of___aldiv 0082                 __size_of___awdiv 0051  
               __size_of___ftadd 00F6                 __size_of___awmod 0045                 __size_of___ftdiv 00A9  
               __size_of___ftmul 00B4                 __size_of___ftsub 001E                 __size_of___fttol 0086  
                       ___awtoft 0C52                         ___ftpack 0E9F         __size_of_ADCC_Initialize 001A  
                       _channels 00DF                         __ptext10 039C                         __ptext11 00C7  
                       __ptext20 0B49                         __ptext12 0E9F                         __ptext21 0CC2  
                       __ptext13 0492                         __ptext30 0DA9                         __ptext22 0B41  
                       __ptext14 0B7C                         __ptext31 0DEE                         __ptext23 0F03  
                       __ptext15 0F7E                         __ptext32 0C98                         __ptext24 0B39  
                       __ptext16 0B6E                         __ptext33 0D6A                         __ptext25 0C72  
                       __ptext17 0041                         __ptext34 0B8D                         __ptext26 0BFF  
                       __ptext18 0CF8                         __ptext35 0BB5                         __ptext27 0B9F  
                       __ptext19 0B60                         __ptext28 0BE5                         __ptext29 02D1  
             __end_of_readAnalog 05A6          __size_of_LCD_Set_Cursor 003F                        tempCalc@R 0060  
       __size_of_InitCustomChars 0026              LCD_Write_Int@F13687 00C4                ??_PWM6_Initialize 0070  
                  __size_of_main 0117             __CFG_WDTCWS$WDTCWS_7 0000                         _tempCalc 05A6  
    PIN_MANAGER_Initialize@state 0070                         log@coeff 1000                      ??_eval_poly 007E  
                    _sampleIndex 006D               LCD_Write_Char@temp 0072          ?_PIN_MANAGER_Initialize 0070  
              __CFG_CLKOUTEN$OFF 0000                      _PPSLOCKbits 0E8F          __size_of_LCD_Write_Char 002A  
             LCD_Set_Cursor@temp 0079               LCD_Write_Int@value 0020                     ___aldiv@sign 0021  
    PWM6_LoadDutyValue@dutyCycle 0070           __size_of_LCD_Write_Int 00CB   __end_of_PIN_MANAGER_Initialize 0CF8  
              ??_ADCC_Initialize 0070                ??_InitCustomChars 0075  
