

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Sun Jan 28 16:06:51 2018

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	stringtext,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2
    45                           	psect	text28,local,class=CODE,merge=1,delta=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2
    50                           	dabs	1,0x620,48
    51                           	dabs	1,0x5A0,80
    52                           	dabs	1,0x520,80
    53                           	dabs	1,0x4D0,32
    54                           	dabs	1,0x2300,0,_samples
    55                           	dabs	1,0x7E,2
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  0006                     	;# 
    63  0007                     	;# 
    64  0008                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  001C                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  008C                     	;# 
    85  008C                     	;# 
    86  008D                     	;# 
    87  008E                     	;# 
    88  008E                     	;# 
    89  008F                     	;# 
    90  0090                     	;# 
    91  0090                     	;# 
    92  0091                     	;# 
    93  0093                     	;# 
    94  0094                     	;# 
    95  0095                     	;# 
    96  0096                     	;# 
    97  0097                     	;# 
    98  0098                     	;# 
    99  0099                     	;# 
   100  009A                     	;# 
   101  009B                     	;# 
   102  009C                     	;# 
   103  009D                     	;# 
   104  009E                     	;# 
   105  010C                     	;# 
   106  010D                     	;# 
   107  010E                     	;# 
   108  010E                     	;# 
   109  010F                     	;# 
   110  0110                     	;# 
   111  0110                     	;# 
   112  0111                     	;# 
   113  0112                     	;# 
   114  0112                     	;# 
   115  0113                     	;# 
   116  0114                     	;# 
   117  0114                     	;# 
   118  0115                     	;# 
   119  0116                     	;# 
   120  0116                     	;# 
   121  0117                     	;# 
   122  0119                     	;# 
   123  0119                     	;# 
   124  0119                     	;# 
   125  011A                     	;# 
   126  011A                     	;# 
   127  011A                     	;# 
   128  011B                     	;# 
   129  011B                     	;# 
   130  011B                     	;# 
   131  011B                     	;# 
   132  011B                     	;# 
   133  011C                     	;# 
   134  011C                     	;# 
   135  011C                     	;# 
   136  011D                     	;# 
   137  011D                     	;# 
   138  011D                     	;# 
   139  011E                     	;# 
   140  011E                     	;# 
   141  011E                     	;# 
   142  011F                     	;# 
   143  011F                     	;# 
   144  011F                     	;# 
   145  011F                     	;# 
   146  011F                     	;# 
   147  018C                     	;# 
   148  018D                     	;# 
   149  018E                     	;# 
   150  018F                     	;# 
   151  0190                     	;# 
   152  0191                     	;# 
   153  0192                     	;# 
   154  0196                     	;# 
   155  0197                     	;# 
   156  0198                     	;# 
   157  0199                     	;# 
   158  019A                     	;# 
   159  019B                     	;# 
   160  019C                     	;# 
   161  020C                     	;# 
   162  020D                     	;# 
   163  020E                     	;# 
   164  020F                     	;# 
   165  020F                     	;# 
   166  0210                     	;# 
   167  0210                     	;# 
   168  0211                     	;# 
   169  0211                     	;# 
   170  0212                     	;# 
   171  0213                     	;# 
   172  0214                     	;# 
   173  0215                     	;# 
   174  0215                     	;# 
   175  0216                     	;# 
   176  0216                     	;# 
   177  0217                     	;# 
   178  0217                     	;# 
   179  0218                     	;# 
   180  0219                     	;# 
   181  021A                     	;# 
   182  021B                     	;# 
   183  021B                     	;# 
   184  021C                     	;# 
   185  021C                     	;# 
   186  021D                     	;# 
   187  021D                     	;# 
   188  021E                     	;# 
   189  021F                     	;# 
   190  028C                     	;# 
   191  028C                     	;# 
   192  028D                     	;# 
   193  028D                     	;# 
   194  028E                     	;# 
   195  028F                     	;# 
   196  0290                     	;# 
   197  0290                     	;# 
   198  0291                     	;# 
   199  0292                     	;# 
   200  0292                     	;# 
   201  0293                     	;# 
   202  0293                     	;# 
   203  0294                     	;# 
   204  0295                     	;# 
   205  0296                     	;# 
   206  0296                     	;# 
   207  0297                     	;# 
   208  0298                     	;# 
   209  0298                     	;# 
   210  0299                     	;# 
   211  0299                     	;# 
   212  029A                     	;# 
   213  029B                     	;# 
   214  029C                     	;# 
   215  029C                     	;# 
   216  029D                     	;# 
   217  030C                     	;# 
   218  030C                     	;# 
   219  030D                     	;# 
   220  030E                     	;# 
   221  030F                     	;# 
   222  0310                     	;# 
   223  0310                     	;# 
   224  0311                     	;# 
   225  0312                     	;# 
   226  0313                     	;# 
   227  0314                     	;# 
   228  0314                     	;# 
   229  0315                     	;# 
   230  0316                     	;# 
   231  0317                     	;# 
   232  0318                     	;# 
   233  0318                     	;# 
   234  0319                     	;# 
   235  031A                     	;# 
   236  031B                     	;# 
   237  031C                     	;# 
   238  031C                     	;# 
   239  031D                     	;# 
   240  031E                     	;# 
   241  031F                     	;# 
   242  038C                     	;# 
   243  038D                     	;# 
   244  038E                     	;# 
   245  0390                     	;# 
   246  0391                     	;# 
   247  0392                     	;# 
   248  040C                     	;# 
   249  040D                     	;# 
   250  040E                     	;# 
   251  040F                     	;# 
   252  0410                     	;# 
   253  0411                     	;# 
   254  0416                     	;# 
   255  0416                     	;# 
   256  0417                     	;# 
   257  0418                     	;# 
   258  0418                     	;# 
   259  0419                     	;# 
   260  041A                     	;# 
   261  041A                     	;# 
   262  041B                     	;# 
   263  041C                     	;# 
   264  041C                     	;# 
   265  041D                     	;# 
   266  041E                     	;# 
   267  041F                     	;# 
   268  048C                     	;# 
   269  048C                     	;# 
   270  048D                     	;# 
   271  048E                     	;# 
   272  048F                     	;# 
   273  048F                     	;# 
   274  0490                     	;# 
   275  0491                     	;# 
   276  0492                     	;# 
   277  0492                     	;# 
   278  0493                     	;# 
   279  0494                     	;# 
   280  0495                     	;# 
   281  0495                     	;# 
   282  0496                     	;# 
   283  0497                     	;# 
   284  0498                     	;# 
   285  0499                     	;# 
   286  049A                     	;# 
   287  049B                     	;# 
   288  049C                     	;# 
   289  049D                     	;# 
   290  050C                     	;# 
   291  050C                     	;# 
   292  050D                     	;# 
   293  050E                     	;# 
   294  050F                     	;# 
   295  050F                     	;# 
   296  0510                     	;# 
   297  0511                     	;# 
   298  0512                     	;# 
   299  0512                     	;# 
   300  0513                     	;# 
   301  0514                     	;# 
   302  0515                     	;# 
   303  0515                     	;# 
   304  0516                     	;# 
   305  0517                     	;# 
   306  0518                     	;# 
   307  0519                     	;# 
   308  051A                     	;# 
   309  051B                     	;# 
   310  051C                     	;# 
   311  051D                     	;# 
   312  058C                     	;# 
   313  058C                     	;# 
   314  058D                     	;# 
   315  058E                     	;# 
   316  058F                     	;# 
   317  058F                     	;# 
   318  0590                     	;# 
   319  0591                     	;# 
   320  0592                     	;# 
   321  0593                     	;# 
   322  060C                     	;# 
   323  060D                     	;# 
   324  060E                     	;# 
   325  060F                     	;# 
   326  0610                     	;# 
   327  0611                     	;# 
   328  0612                     	;# 
   329  0613                     	;# 
   330  0614                     	;# 
   331  0616                     	;# 
   332  0617                     	;# 
   333  0618                     	;# 
   334  0619                     	;# 
   335  061A                     	;# 
   336  061B                     	;# 
   337  061C                     	;# 
   338  061D                     	;# 
   339  061E                     	;# 
   340  068C                     	;# 
   341  068D                     	;# 
   342  068E                     	;# 
   343  068F                     	;# 
   344  0690                     	;# 
   345  0691                     	;# 
   346  0692                     	;# 
   347  0693                     	;# 
   348  0694                     	;# 
   349  070C                     	;# 
   350  070D                     	;# 
   351  070E                     	;# 
   352  070F                     	;# 
   353  0710                     	;# 
   354  0711                     	;# 
   355  0712                     	;# 
   356  0713                     	;# 
   357  0714                     	;# 
   358  0716                     	;# 
   359  0717                     	;# 
   360  0718                     	;# 
   361  0719                     	;# 
   362  071A                     	;# 
   363  071B                     	;# 
   364  071C                     	;# 
   365  071D                     	;# 
   366  071E                     	;# 
   367  0796                     	;# 
   368  0797                     	;# 
   369  0798                     	;# 
   370  0799                     	;# 
   371  079A                     	;# 
   372  079B                     	;# 
   373  080C                     	;# 
   374  080D                     	;# 
   375  080E                     	;# 
   376  080F                     	;# 
   377  0810                     	;# 
   378  0811                     	;# 
   379  0812                     	;# 
   380  0813                     	;# 
   381  0814                     	;# 
   382  081A                     	;# 
   383  081B                     	;# 
   384  081C                     	;# 
   385  081D                     	;# 
   386  081E                     	;# 
   387  081F                     	;# 
   388  088C                     	;# 
   389  088D                     	;# 
   390  088E                     	;# 
   391  088F                     	;# 
   392  0890                     	;# 
   393  0891                     	;# 
   394  0892                     	;# 
   395  0893                     	;# 
   396  0895                     	;# 
   397  0896                     	;# 
   398  0897                     	;# 
   399  0898                     	;# 
   400  0899                     	;# 
   401  089A                     	;# 
   402  089B                     	;# 
   403  090C                     	;# 
   404  090E                     	;# 
   405  090F                     	;# 
   406  091F                     	;# 
   407  091F                     	;# 
   408  098F                     	;# 
   409  098F                     	;# 
   410  0990                     	;# 
   411  0991                     	;# 
   412  0992                     	;# 
   413  0993                     	;# 
   414  0994                     	;# 
   415  0995                     	;# 
   416  0996                     	;# 
   417  0997                     	;# 
   418  0E0F                     	;# 
   419  0E10                     	;# 
   420  0E11                     	;# 
   421  0E12                     	;# 
   422  0E13                     	;# 
   423  0E14                     	;# 
   424  0E15                     	;# 
   425  0E16                     	;# 
   426  0E17                     	;# 
   427  0E18                     	;# 
   428  0E19                     	;# 
   429  0E1A                     	;# 
   430  0E1B                     	;# 
   431  0E1C                     	;# 
   432  0E1D                     	;# 
   433  0E1E                     	;# 
   434  0E1F                     	;# 
   435  0E20                     	;# 
   436  0E21                     	;# 
   437  0E22                     	;# 
   438  0E23                     	;# 
   439  0E24                     	;# 
   440  0E25                     	;# 
   441  0E26                     	;# 
   442  0E27                     	;# 
   443  0E28                     	;# 
   444  0E29                     	;# 
   445  0E2A                     	;# 
   446  0E2B                     	;# 
   447  0E2C                     	;# 
   448  0E2D                     	;# 
   449  0E2E                     	;# 
   450  0E2F                     	;# 
   451  0E30                     	;# 
   452  0E31                     	;# 
   453  0E32                     	;# 
   454  0E33                     	;# 
   455  0E34                     	;# 
   456  0E35                     	;# 
   457  0E36                     	;# 
   458  0E37                     	;# 
   459  0E8F                     	;# 
   460  0E90                     	;# 
   461  0E91                     	;# 
   462  0E92                     	;# 
   463  0E93                     	;# 
   464  0E94                     	;# 
   465  0E95                     	;# 
   466  0E96                     	;# 
   467  0E97                     	;# 
   468  0E9C                     	;# 
   469  0E9D                     	;# 
   470  0E9E                     	;# 
   471  0EA1                     	;# 
   472  0EA2                     	;# 
   473  0EA3                     	;# 
   474  0EA4                     	;# 
   475  0EA5                     	;# 
   476  0EA9                     	;# 
   477  0EAA                     	;# 
   478  0EAB                     	;# 
   479  0EAC                     	;# 
   480  0EB1                     	;# 
   481  0EB2                     	;# 
   482  0EB3                     	;# 
   483  0EB8                     	;# 
   484  0EB9                     	;# 
   485  0EBA                     	;# 
   486  0EBB                     	;# 
   487  0EBC                     	;# 
   488  0EBD                     	;# 
   489  0EBE                     	;# 
   490  0EC3                     	;# 
   491  0EC5                     	;# 
   492  0EC6                     	;# 
   493  0EC7                     	;# 
   494  0EC8                     	;# 
   495  0EC9                     	;# 
   496  0ECA                     	;# 
   497  0ECB                     	;# 
   498  0ECC                     	;# 
   499  0F10                     	;# 
   500  0F11                     	;# 
   501  0F12                     	;# 
   502  0F13                     	;# 
   503  0F14                     	;# 
   504  0F15                     	;# 
   505  0F16                     	;# 
   506  0F17                     	;# 
   507  0F18                     	;# 
   508  0F19                     	;# 
   509  0F1A                     	;# 
   510  0F1B                     	;# 
   511  0F1C                     	;# 
   512  0F1D                     	;# 
   513  0F1E                     	;# 
   514  0F1F                     	;# 
   515  0F20                     	;# 
   516  0F21                     	;# 
   517  0F22                     	;# 
   518  0F23                     	;# 
   519  0F24                     	;# 
   520  0F25                     	;# 
   521  0F26                     	;# 
   522  0F27                     	;# 
   523  0F38                     	;# 
   524  0F39                     	;# 
   525  0F3A                     	;# 
   526  0F3B                     	;# 
   527  0F3C                     	;# 
   528  0F3D                     	;# 
   529  0F3E                     	;# 
   530  0F3F                     	;# 
   531  0F40                     	;# 
   532  0F41                     	;# 
   533  0F43                     	;# 
   534  0F44                     	;# 
   535  0F45                     	;# 
   536  0F46                     	;# 
   537  0F47                     	;# 
   538  0F48                     	;# 
   539  0F49                     	;# 
   540  0F4A                     	;# 
   541  0F4B                     	;# 
   542  0F4C                     	;# 
   543  0F4E                     	;# 
   544  0F4F                     	;# 
   545  0F50                     	;# 
   546  0F51                     	;# 
   547  0F52                     	;# 
   548  0F53                     	;# 
   549  0F54                     	;# 
   550  0F55                     	;# 
   551  0F56                     	;# 
   552  0F57                     	;# 
   553  0F65                     	;# 
   554  0F68                     	;# 
   555  0F69                     	;# 
   556  0F6A                     	;# 
   557  0F6B                     	;# 
   558  0FE4                     	;# 
   559  0FE5                     	;# 
   560  0FE6                     	;# 
   561  0FE7                     	;# 
   562  0FE8                     	;# 
   563  0FE9                     	;# 
   564  0FEA                     	;# 
   565  0FEB                     	;# 
   566  0FED                     	;# 
   567  0FEE                     	;# 
   568  0FEF                     	;# 
   569  0000                     	;# 
   570  0001                     	;# 
   571  0002                     	;# 
   572  0003                     	;# 
   573  0004                     	;# 
   574  0005                     	;# 
   575  0006                     	;# 
   576  0007                     	;# 
   577  0008                     	;# 
   578  0009                     	;# 
   579  000A                     	;# 
   580  000B                     	;# 
   581  000C                     	;# 
   582  000D                     	;# 
   583  000E                     	;# 
   584  0010                     	;# 
   585  0011                     	;# 
   586  0012                     	;# 
   587  0013                     	;# 
   588  0016                     	;# 
   589  0017                     	;# 
   590  0018                     	;# 
   591  001C                     	;# 
   592  001C                     	;# 
   593  001D                     	;# 
   594  001D                     	;# 
   595  001E                     	;# 
   596  001F                     	;# 
   597  008C                     	;# 
   598  008C                     	;# 
   599  008D                     	;# 
   600  008E                     	;# 
   601  008E                     	;# 
   602  008F                     	;# 
   603  0090                     	;# 
   604  0090                     	;# 
   605  0091                     	;# 
   606  0093                     	;# 
   607  0094                     	;# 
   608  0095                     	;# 
   609  0096                     	;# 
   610  0097                     	;# 
   611  0098                     	;# 
   612  0099                     	;# 
   613  009A                     	;# 
   614  009B                     	;# 
   615  009C                     	;# 
   616  009D                     	;# 
   617  009E                     	;# 
   618  010C                     	;# 
   619  010D                     	;# 
   620  010E                     	;# 
   621  010E                     	;# 
   622  010F                     	;# 
   623  0110                     	;# 
   624  0110                     	;# 
   625  0111                     	;# 
   626  0112                     	;# 
   627  0112                     	;# 
   628  0113                     	;# 
   629  0114                     	;# 
   630  0114                     	;# 
   631  0115                     	;# 
   632  0116                     	;# 
   633  0116                     	;# 
   634  0117                     	;# 
   635  0119                     	;# 
   636  0119                     	;# 
   637  0119                     	;# 
   638  011A                     	;# 
   639  011A                     	;# 
   640  011A                     	;# 
   641  011B                     	;# 
   642  011B                     	;# 
   643  011B                     	;# 
   644  011B                     	;# 
   645  011B                     	;# 
   646  011C                     	;# 
   647  011C                     	;# 
   648  011C                     	;# 
   649  011D                     	;# 
   650  011D                     	;# 
   651  011D                     	;# 
   652  011E                     	;# 
   653  011E                     	;# 
   654  011E                     	;# 
   655  011F                     	;# 
   656  011F                     	;# 
   657  011F                     	;# 
   658  011F                     	;# 
   659  011F                     	;# 
   660  018C                     	;# 
   661  018D                     	;# 
   662  018E                     	;# 
   663  018F                     	;# 
   664  0190                     	;# 
   665  0191                     	;# 
   666  0192                     	;# 
   667  0196                     	;# 
   668  0197                     	;# 
   669  0198                     	;# 
   670  0199                     	;# 
   671  019A                     	;# 
   672  019B                     	;# 
   673  019C                     	;# 
   674  020C                     	;# 
   675  020D                     	;# 
   676  020E                     	;# 
   677  020F                     	;# 
   678  020F                     	;# 
   679  0210                     	;# 
   680  0210                     	;# 
   681  0211                     	;# 
   682  0211                     	;# 
   683  0212                     	;# 
   684  0213                     	;# 
   685  0214                     	;# 
   686  0215                     	;# 
   687  0215                     	;# 
   688  0216                     	;# 
   689  0216                     	;# 
   690  0217                     	;# 
   691  0217                     	;# 
   692  0218                     	;# 
   693  0219                     	;# 
   694  021A                     	;# 
   695  021B                     	;# 
   696  021B                     	;# 
   697  021C                     	;# 
   698  021C                     	;# 
   699  021D                     	;# 
   700  021D                     	;# 
   701  021E                     	;# 
   702  021F                     	;# 
   703  028C                     	;# 
   704  028C                     	;# 
   705  028D                     	;# 
   706  028D                     	;# 
   707  028E                     	;# 
   708  028F                     	;# 
   709  0290                     	;# 
   710  0290                     	;# 
   711  0291                     	;# 
   712  0292                     	;# 
   713  0292                     	;# 
   714  0293                     	;# 
   715  0293                     	;# 
   716  0294                     	;# 
   717  0295                     	;# 
   718  0296                     	;# 
   719  0296                     	;# 
   720  0297                     	;# 
   721  0298                     	;# 
   722  0298                     	;# 
   723  0299                     	;# 
   724  0299                     	;# 
   725  029A                     	;# 
   726  029B                     	;# 
   727  029C                     	;# 
   728  029C                     	;# 
   729  029D                     	;# 
   730  030C                     	;# 
   731  030C                     	;# 
   732  030D                     	;# 
   733  030E                     	;# 
   734  030F                     	;# 
   735  0310                     	;# 
   736  0310                     	;# 
   737  0311                     	;# 
   738  0312                     	;# 
   739  0313                     	;# 
   740  0314                     	;# 
   741  0314                     	;# 
   742  0315                     	;# 
   743  0316                     	;# 
   744  0317                     	;# 
   745  0318                     	;# 
   746  0318                     	;# 
   747  0319                     	;# 
   748  031A                     	;# 
   749  031B                     	;# 
   750  031C                     	;# 
   751  031C                     	;# 
   752  031D                     	;# 
   753  031E                     	;# 
   754  031F                     	;# 
   755  038C                     	;# 
   756  038D                     	;# 
   757  038E                     	;# 
   758  0390                     	;# 
   759  0391                     	;# 
   760  0392                     	;# 
   761  040C                     	;# 
   762  040D                     	;# 
   763  040E                     	;# 
   764  040F                     	;# 
   765  0410                     	;# 
   766  0411                     	;# 
   767  0416                     	;# 
   768  0416                     	;# 
   769  0417                     	;# 
   770  0418                     	;# 
   771  0418                     	;# 
   772  0419                     	;# 
   773  041A                     	;# 
   774  041A                     	;# 
   775  041B                     	;# 
   776  041C                     	;# 
   777  041C                     	;# 
   778  041D                     	;# 
   779  041E                     	;# 
   780  041F                     	;# 
   781  048C                     	;# 
   782  048C                     	;# 
   783  048D                     	;# 
   784  048E                     	;# 
   785  048F                     	;# 
   786  048F                     	;# 
   787  0490                     	;# 
   788  0491                     	;# 
   789  0492                     	;# 
   790  0492                     	;# 
   791  0493                     	;# 
   792  0494                     	;# 
   793  0495                     	;# 
   794  0495                     	;# 
   795  0496                     	;# 
   796  0497                     	;# 
   797  0498                     	;# 
   798  0499                     	;# 
   799  049A                     	;# 
   800  049B                     	;# 
   801  049C                     	;# 
   802  049D                     	;# 
   803  050C                     	;# 
   804  050C                     	;# 
   805  050D                     	;# 
   806  050E                     	;# 
   807  050F                     	;# 
   808  050F                     	;# 
   809  0510                     	;# 
   810  0511                     	;# 
   811  0512                     	;# 
   812  0512                     	;# 
   813  0513                     	;# 
   814  0514                     	;# 
   815  0515                     	;# 
   816  0515                     	;# 
   817  0516                     	;# 
   818  0517                     	;# 
   819  0518                     	;# 
   820  0519                     	;# 
   821  051A                     	;# 
   822  051B                     	;# 
   823  051C                     	;# 
   824  051D                     	;# 
   825  058C                     	;# 
   826  058C                     	;# 
   827  058D                     	;# 
   828  058E                     	;# 
   829  058F                     	;# 
   830  058F                     	;# 
   831  0590                     	;# 
   832  0591                     	;# 
   833  0592                     	;# 
   834  0593                     	;# 
   835  060C                     	;# 
   836  060D                     	;# 
   837  060E                     	;# 
   838  060F                     	;# 
   839  0610                     	;# 
   840  0611                     	;# 
   841  0612                     	;# 
   842  0613                     	;# 
   843  0614                     	;# 
   844  0616                     	;# 
   845  0617                     	;# 
   846  0618                     	;# 
   847  0619                     	;# 
   848  061A                     	;# 
   849  061B                     	;# 
   850  061C                     	;# 
   851  061D                     	;# 
   852  061E                     	;# 
   853  068C                     	;# 
   854  068D                     	;# 
   855  068E                     	;# 
   856  068F                     	;# 
   857  0690                     	;# 
   858  0691                     	;# 
   859  0692                     	;# 
   860  0693                     	;# 
   861  0694                     	;# 
   862  070C                     	;# 
   863  070D                     	;# 
   864  070E                     	;# 
   865  070F                     	;# 
   866  0710                     	;# 
   867  0711                     	;# 
   868  0712                     	;# 
   869  0713                     	;# 
   870  0714                     	;# 
   871  0716                     	;# 
   872  0717                     	;# 
   873  0718                     	;# 
   874  0719                     	;# 
   875  071A                     	;# 
   876  071B                     	;# 
   877  071C                     	;# 
   878  071D                     	;# 
   879  071E                     	;# 
   880  0796                     	;# 
   881  0797                     	;# 
   882  0798                     	;# 
   883  0799                     	;# 
   884  079A                     	;# 
   885  079B                     	;# 
   886  080C                     	;# 
   887  080D                     	;# 
   888  080E                     	;# 
   889  080F                     	;# 
   890  0810                     	;# 
   891  0811                     	;# 
   892  0812                     	;# 
   893  0813                     	;# 
   894  0814                     	;# 
   895  081A                     	;# 
   896  081B                     	;# 
   897  081C                     	;# 
   898  081D                     	;# 
   899  081E                     	;# 
   900  081F                     	;# 
   901  088C                     	;# 
   902  088D                     	;# 
   903  088E                     	;# 
   904  088F                     	;# 
   905  0890                     	;# 
   906  0891                     	;# 
   907  0892                     	;# 
   908  0893                     	;# 
   909  0895                     	;# 
   910  0896                     	;# 
   911  0897                     	;# 
   912  0898                     	;# 
   913  0899                     	;# 
   914  089A                     	;# 
   915  089B                     	;# 
   916  090C                     	;# 
   917  090E                     	;# 
   918  090F                     	;# 
   919  091F                     	;# 
   920  091F                     	;# 
   921  098F                     	;# 
   922  098F                     	;# 
   923  0990                     	;# 
   924  0991                     	;# 
   925  0992                     	;# 
   926  0993                     	;# 
   927  0994                     	;# 
   928  0995                     	;# 
   929  0996                     	;# 
   930  0997                     	;# 
   931  0E0F                     	;# 
   932  0E10                     	;# 
   933  0E11                     	;# 
   934  0E12                     	;# 
   935  0E13                     	;# 
   936  0E14                     	;# 
   937  0E15                     	;# 
   938  0E16                     	;# 
   939  0E17                     	;# 
   940  0E18                     	;# 
   941  0E19                     	;# 
   942  0E1A                     	;# 
   943  0E1B                     	;# 
   944  0E1C                     	;# 
   945  0E1D                     	;# 
   946  0E1E                     	;# 
   947  0E1F                     	;# 
   948  0E20                     	;# 
   949  0E21                     	;# 
   950  0E22                     	;# 
   951  0E23                     	;# 
   952  0E24                     	;# 
   953  0E25                     	;# 
   954  0E26                     	;# 
   955  0E27                     	;# 
   956  0E28                     	;# 
   957  0E29                     	;# 
   958  0E2A                     	;# 
   959  0E2B                     	;# 
   960  0E2C                     	;# 
   961  0E2D                     	;# 
   962  0E2E                     	;# 
   963  0E2F                     	;# 
   964  0E30                     	;# 
   965  0E31                     	;# 
   966  0E32                     	;# 
   967  0E33                     	;# 
   968  0E34                     	;# 
   969  0E35                     	;# 
   970  0E36                     	;# 
   971  0E37                     	;# 
   972  0E8F                     	;# 
   973  0E90                     	;# 
   974  0E91                     	;# 
   975  0E92                     	;# 
   976  0E93                     	;# 
   977  0E94                     	;# 
   978  0E95                     	;# 
   979  0E96                     	;# 
   980  0E97                     	;# 
   981  0E9C                     	;# 
   982  0E9D                     	;# 
   983  0E9E                     	;# 
   984  0EA1                     	;# 
   985  0EA2                     	;# 
   986  0EA3                     	;# 
   987  0EA4                     	;# 
   988  0EA5                     	;# 
   989  0EA9                     	;# 
   990  0EAA                     	;# 
   991  0EAB                     	;# 
   992  0EAC                     	;# 
   993  0EB1                     	;# 
   994  0EB2                     	;# 
   995  0EB3                     	;# 
   996  0EB8                     	;# 
   997  0EB9                     	;# 
   998  0EBA                     	;# 
   999  0EBB                     	;# 
  1000  0EBC                     	;# 
  1001  0EBD                     	;# 
  1002  0EBE                     	;# 
  1003  0EC3                     	;# 
  1004  0EC5                     	;# 
  1005  0EC6                     	;# 
  1006  0EC7                     	;# 
  1007  0EC8                     	;# 
  1008  0EC9                     	;# 
  1009  0ECA                     	;# 
  1010  0ECB                     	;# 
  1011  0ECC                     	;# 
  1012  0F10                     	;# 
  1013  0F11                     	;# 
  1014  0F12                     	;# 
  1015  0F13                     	;# 
  1016  0F14                     	;# 
  1017  0F15                     	;# 
  1018  0F16                     	;# 
  1019  0F17                     	;# 
  1020  0F18                     	;# 
  1021  0F19                     	;# 
  1022  0F1A                     	;# 
  1023  0F1B                     	;# 
  1024  0F1C                     	;# 
  1025  0F1D                     	;# 
  1026  0F1E                     	;# 
  1027  0F1F                     	;# 
  1028  0F20                     	;# 
  1029  0F21                     	;# 
  1030  0F22                     	;# 
  1031  0F23                     	;# 
  1032  0F24                     	;# 
  1033  0F25                     	;# 
  1034  0F26                     	;# 
  1035  0F27                     	;# 
  1036  0F38                     	;# 
  1037  0F39                     	;# 
  1038  0F3A                     	;# 
  1039  0F3B                     	;# 
  1040  0F3C                     	;# 
  1041  0F3D                     	;# 
  1042  0F3E                     	;# 
  1043  0F3F                     	;# 
  1044  0F40                     	;# 
  1045  0F41                     	;# 
  1046  0F43                     	;# 
  1047  0F44                     	;# 
  1048  0F45                     	;# 
  1049  0F46                     	;# 
  1050  0F47                     	;# 
  1051  0F48                     	;# 
  1052  0F49                     	;# 
  1053  0F4A                     	;# 
  1054  0F4B                     	;# 
  1055  0F4C                     	;# 
  1056  0F4E                     	;# 
  1057  0F4F                     	;# 
  1058  0F50                     	;# 
  1059  0F51                     	;# 
  1060  0F52                     	;# 
  1061  0F53                     	;# 
  1062  0F54                     	;# 
  1063  0F55                     	;# 
  1064  0F56                     	;# 
  1065  0F57                     	;# 
  1066  0F65                     	;# 
  1067  0F68                     	;# 
  1068  0F69                     	;# 
  1069  0F6A                     	;# 
  1070  0F6B                     	;# 
  1071  0FE4                     	;# 
  1072  0FE5                     	;# 
  1073  0FE6                     	;# 
  1074  0FE7                     	;# 
  1075  0FE8                     	;# 
  1076  0FE9                     	;# 
  1077  0FEA                     	;# 
  1078  0FEB                     	;# 
  1079  0FED                     	;# 
  1080  0FEE                     	;# 
  1081  0FEF                     	;# 
  1082  0000                     	;# 
  1083  0001                     	;# 
  1084  0002                     	;# 
  1085  0003                     	;# 
  1086  0004                     	;# 
  1087  0005                     	;# 
  1088  0006                     	;# 
  1089  0007                     	;# 
  1090  0008                     	;# 
  1091  0009                     	;# 
  1092  000A                     	;# 
  1093  000B                     	;# 
  1094  000C                     	;# 
  1095  000D                     	;# 
  1096  000E                     	;# 
  1097  0010                     	;# 
  1098  0011                     	;# 
  1099  0012                     	;# 
  1100  0013                     	;# 
  1101  0016                     	;# 
  1102  0017                     	;# 
  1103  0018                     	;# 
  1104  001C                     	;# 
  1105  001C                     	;# 
  1106  001D                     	;# 
  1107  001D                     	;# 
  1108  001E                     	;# 
  1109  001F                     	;# 
  1110  008C                     	;# 
  1111  008C                     	;# 
  1112  008D                     	;# 
  1113  008E                     	;# 
  1114  008E                     	;# 
  1115  008F                     	;# 
  1116  0090                     	;# 
  1117  0090                     	;# 
  1118  0091                     	;# 
  1119  0093                     	;# 
  1120  0094                     	;# 
  1121  0095                     	;# 
  1122  0096                     	;# 
  1123  0097                     	;# 
  1124  0098                     	;# 
  1125  0099                     	;# 
  1126  009A                     	;# 
  1127  009B                     	;# 
  1128  009C                     	;# 
  1129  009D                     	;# 
  1130  009E                     	;# 
  1131  010C                     	;# 
  1132  010D                     	;# 
  1133  010E                     	;# 
  1134  010E                     	;# 
  1135  010F                     	;# 
  1136  0110                     	;# 
  1137  0110                     	;# 
  1138  0111                     	;# 
  1139  0112                     	;# 
  1140  0112                     	;# 
  1141  0113                     	;# 
  1142  0114                     	;# 
  1143  0114                     	;# 
  1144  0115                     	;# 
  1145  0116                     	;# 
  1146  0116                     	;# 
  1147  0117                     	;# 
  1148  0119                     	;# 
  1149  0119                     	;# 
  1150  0119                     	;# 
  1151  011A                     	;# 
  1152  011A                     	;# 
  1153  011A                     	;# 
  1154  011B                     	;# 
  1155  011B                     	;# 
  1156  011B                     	;# 
  1157  011B                     	;# 
  1158  011B                     	;# 
  1159  011C                     	;# 
  1160  011C                     	;# 
  1161  011C                     	;# 
  1162  011D                     	;# 
  1163  011D                     	;# 
  1164  011D                     	;# 
  1165  011E                     	;# 
  1166  011E                     	;# 
  1167  011E                     	;# 
  1168  011F                     	;# 
  1169  011F                     	;# 
  1170  011F                     	;# 
  1171  011F                     	;# 
  1172  011F                     	;# 
  1173  018C                     	;# 
  1174  018D                     	;# 
  1175  018E                     	;# 
  1176  018F                     	;# 
  1177  0190                     	;# 
  1178  0191                     	;# 
  1179  0192                     	;# 
  1180  0196                     	;# 
  1181  0197                     	;# 
  1182  0198                     	;# 
  1183  0199                     	;# 
  1184  019A                     	;# 
  1185  019B                     	;# 
  1186  019C                     	;# 
  1187  020C                     	;# 
  1188  020D                     	;# 
  1189  020E                     	;# 
  1190  020F                     	;# 
  1191  020F                     	;# 
  1192  0210                     	;# 
  1193  0210                     	;# 
  1194  0211                     	;# 
  1195  0211                     	;# 
  1196  0212                     	;# 
  1197  0213                     	;# 
  1198  0214                     	;# 
  1199  0215                     	;# 
  1200  0215                     	;# 
  1201  0216                     	;# 
  1202  0216                     	;# 
  1203  0217                     	;# 
  1204  0217                     	;# 
  1205  0218                     	;# 
  1206  0219                     	;# 
  1207  021A                     	;# 
  1208  021B                     	;# 
  1209  021B                     	;# 
  1210  021C                     	;# 
  1211  021C                     	;# 
  1212  021D                     	;# 
  1213  021D                     	;# 
  1214  021E                     	;# 
  1215  021F                     	;# 
  1216  028C                     	;# 
  1217  028C                     	;# 
  1218  028D                     	;# 
  1219  028D                     	;# 
  1220  028E                     	;# 
  1221  028F                     	;# 
  1222  0290                     	;# 
  1223  0290                     	;# 
  1224  0291                     	;# 
  1225  0292                     	;# 
  1226  0292                     	;# 
  1227  0293                     	;# 
  1228  0293                     	;# 
  1229  0294                     	;# 
  1230  0295                     	;# 
  1231  0296                     	;# 
  1232  0296                     	;# 
  1233  0297                     	;# 
  1234  0298                     	;# 
  1235  0298                     	;# 
  1236  0299                     	;# 
  1237  0299                     	;# 
  1238  029A                     	;# 
  1239  029B                     	;# 
  1240  029C                     	;# 
  1241  029C                     	;# 
  1242  029D                     	;# 
  1243  030C                     	;# 
  1244  030C                     	;# 
  1245  030D                     	;# 
  1246  030E                     	;# 
  1247  030F                     	;# 
  1248  0310                     	;# 
  1249  0310                     	;# 
  1250  0311                     	;# 
  1251  0312                     	;# 
  1252  0313                     	;# 
  1253  0314                     	;# 
  1254  0314                     	;# 
  1255  0315                     	;# 
  1256  0316                     	;# 
  1257  0317                     	;# 
  1258  0318                     	;# 
  1259  0318                     	;# 
  1260  0319                     	;# 
  1261  031A                     	;# 
  1262  031B                     	;# 
  1263  031C                     	;# 
  1264  031C                     	;# 
  1265  031D                     	;# 
  1266  031E                     	;# 
  1267  031F                     	;# 
  1268  038C                     	;# 
  1269  038D                     	;# 
  1270  038E                     	;# 
  1271  0390                     	;# 
  1272  0391                     	;# 
  1273  0392                     	;# 
  1274  040C                     	;# 
  1275  040D                     	;# 
  1276  040E                     	;# 
  1277  040F                     	;# 
  1278  0410                     	;# 
  1279  0411                     	;# 
  1280  0416                     	;# 
  1281  0416                     	;# 
  1282  0417                     	;# 
  1283  0418                     	;# 
  1284  0418                     	;# 
  1285  0419                     	;# 
  1286  041A                     	;# 
  1287  041A                     	;# 
  1288  041B                     	;# 
  1289  041C                     	;# 
  1290  041C                     	;# 
  1291  041D                     	;# 
  1292  041E                     	;# 
  1293  041F                     	;# 
  1294  048C                     	;# 
  1295  048C                     	;# 
  1296  048D                     	;# 
  1297  048E                     	;# 
  1298  048F                     	;# 
  1299  048F                     	;# 
  1300  0490                     	;# 
  1301  0491                     	;# 
  1302  0492                     	;# 
  1303  0492                     	;# 
  1304  0493                     	;# 
  1305  0494                     	;# 
  1306  0495                     	;# 
  1307  0495                     	;# 
  1308  0496                     	;# 
  1309  0497                     	;# 
  1310  0498                     	;# 
  1311  0499                     	;# 
  1312  049A                     	;# 
  1313  049B                     	;# 
  1314  049C                     	;# 
  1315  049D                     	;# 
  1316  050C                     	;# 
  1317  050C                     	;# 
  1318  050D                     	;# 
  1319  050E                     	;# 
  1320  050F                     	;# 
  1321  050F                     	;# 
  1322  0510                     	;# 
  1323  0511                     	;# 
  1324  0512                     	;# 
  1325  0512                     	;# 
  1326  0513                     	;# 
  1327  0514                     	;# 
  1328  0515                     	;# 
  1329  0515                     	;# 
  1330  0516                     	;# 
  1331  0517                     	;# 
  1332  0518                     	;# 
  1333  0519                     	;# 
  1334  051A                     	;# 
  1335  051B                     	;# 
  1336  051C                     	;# 
  1337  051D                     	;# 
  1338  058C                     	;# 
  1339  058C                     	;# 
  1340  058D                     	;# 
  1341  058E                     	;# 
  1342  058F                     	;# 
  1343  058F                     	;# 
  1344  0590                     	;# 
  1345  0591                     	;# 
  1346  0592                     	;# 
  1347  0593                     	;# 
  1348  060C                     	;# 
  1349  060D                     	;# 
  1350  060E                     	;# 
  1351  060F                     	;# 
  1352  0610                     	;# 
  1353  0611                     	;# 
  1354  0612                     	;# 
  1355  0613                     	;# 
  1356  0614                     	;# 
  1357  0616                     	;# 
  1358  0617                     	;# 
  1359  0618                     	;# 
  1360  0619                     	;# 
  1361  061A                     	;# 
  1362  061B                     	;# 
  1363  061C                     	;# 
  1364  061D                     	;# 
  1365  061E                     	;# 
  1366  068C                     	;# 
  1367  068D                     	;# 
  1368  068E                     	;# 
  1369  068F                     	;# 
  1370  0690                     	;# 
  1371  0691                     	;# 
  1372  0692                     	;# 
  1373  0693                     	;# 
  1374  0694                     	;# 
  1375  070C                     	;# 
  1376  070D                     	;# 
  1377  070E                     	;# 
  1378  070F                     	;# 
  1379  0710                     	;# 
  1380  0711                     	;# 
  1381  0712                     	;# 
  1382  0713                     	;# 
  1383  0714                     	;# 
  1384  0716                     	;# 
  1385  0717                     	;# 
  1386  0718                     	;# 
  1387  0719                     	;# 
  1388  071A                     	;# 
  1389  071B                     	;# 
  1390  071C                     	;# 
  1391  071D                     	;# 
  1392  071E                     	;# 
  1393  0796                     	;# 
  1394  0797                     	;# 
  1395  0798                     	;# 
  1396  0799                     	;# 
  1397  079A                     	;# 
  1398  079B                     	;# 
  1399  080C                     	;# 
  1400  080D                     	;# 
  1401  080E                     	;# 
  1402  080F                     	;# 
  1403  0810                     	;# 
  1404  0811                     	;# 
  1405  0812                     	;# 
  1406  0813                     	;# 
  1407  0814                     	;# 
  1408  081A                     	;# 
  1409  081B                     	;# 
  1410  081C                     	;# 
  1411  081D                     	;# 
  1412  081E                     	;# 
  1413  081F                     	;# 
  1414  088C                     	;# 
  1415  088D                     	;# 
  1416  088E                     	;# 
  1417  088F                     	;# 
  1418  0890                     	;# 
  1419  0891                     	;# 
  1420  0892                     	;# 
  1421  0893                     	;# 
  1422  0895                     	;# 
  1423  0896                     	;# 
  1424  0897                     	;# 
  1425  0898                     	;# 
  1426  0899                     	;# 
  1427  089A                     	;# 
  1428  089B                     	;# 
  1429  090C                     	;# 
  1430  090E                     	;# 
  1431  090F                     	;# 
  1432  091F                     	;# 
  1433  091F                     	;# 
  1434  098F                     	;# 
  1435  098F                     	;# 
  1436  0990                     	;# 
  1437  0991                     	;# 
  1438  0992                     	;# 
  1439  0993                     	;# 
  1440  0994                     	;# 
  1441  0995                     	;# 
  1442  0996                     	;# 
  1443  0997                     	;# 
  1444  0E0F                     	;# 
  1445  0E10                     	;# 
  1446  0E11                     	;# 
  1447  0E12                     	;# 
  1448  0E13                     	;# 
  1449  0E14                     	;# 
  1450  0E15                     	;# 
  1451  0E16                     	;# 
  1452  0E17                     	;# 
  1453  0E18                     	;# 
  1454  0E19                     	;# 
  1455  0E1A                     	;# 
  1456  0E1B                     	;# 
  1457  0E1C                     	;# 
  1458  0E1D                     	;# 
  1459  0E1E                     	;# 
  1460  0E1F                     	;# 
  1461  0E20                     	;# 
  1462  0E21                     	;# 
  1463  0E22                     	;# 
  1464  0E23                     	;# 
  1465  0E24                     	;# 
  1466  0E25                     	;# 
  1467  0E26                     	;# 
  1468  0E27                     	;# 
  1469  0E28                     	;# 
  1470  0E29                     	;# 
  1471  0E2A                     	;# 
  1472  0E2B                     	;# 
  1473  0E2C                     	;# 
  1474  0E2D                     	;# 
  1475  0E2E                     	;# 
  1476  0E2F                     	;# 
  1477  0E30                     	;# 
  1478  0E31                     	;# 
  1479  0E32                     	;# 
  1480  0E33                     	;# 
  1481  0E34                     	;# 
  1482  0E35                     	;# 
  1483  0E36                     	;# 
  1484  0E37                     	;# 
  1485  0E8F                     	;# 
  1486  0E90                     	;# 
  1487  0E91                     	;# 
  1488  0E92                     	;# 
  1489  0E93                     	;# 
  1490  0E94                     	;# 
  1491  0E95                     	;# 
  1492  0E96                     	;# 
  1493  0E97                     	;# 
  1494  0E9C                     	;# 
  1495  0E9D                     	;# 
  1496  0E9E                     	;# 
  1497  0EA1                     	;# 
  1498  0EA2                     	;# 
  1499  0EA3                     	;# 
  1500  0EA4                     	;# 
  1501  0EA5                     	;# 
  1502  0EA9                     	;# 
  1503  0EAA                     	;# 
  1504  0EAB                     	;# 
  1505  0EAC                     	;# 
  1506  0EB1                     	;# 
  1507  0EB2                     	;# 
  1508  0EB3                     	;# 
  1509  0EB8                     	;# 
  1510  0EB9                     	;# 
  1511  0EBA                     	;# 
  1512  0EBB                     	;# 
  1513  0EBC                     	;# 
  1514  0EBD                     	;# 
  1515  0EBE                     	;# 
  1516  0EC3                     	;# 
  1517  0EC5                     	;# 
  1518  0EC6                     	;# 
  1519  0EC7                     	;# 
  1520  0EC8                     	;# 
  1521  0EC9                     	;# 
  1522  0ECA                     	;# 
  1523  0ECB                     	;# 
  1524  0ECC                     	;# 
  1525  0F10                     	;# 
  1526  0F11                     	;# 
  1527  0F12                     	;# 
  1528  0F13                     	;# 
  1529  0F14                     	;# 
  1530  0F15                     	;# 
  1531  0F16                     	;# 
  1532  0F17                     	;# 
  1533  0F18                     	;# 
  1534  0F19                     	;# 
  1535  0F1A                     	;# 
  1536  0F1B                     	;# 
  1537  0F1C                     	;# 
  1538  0F1D                     	;# 
  1539  0F1E                     	;# 
  1540  0F1F                     	;# 
  1541  0F20                     	;# 
  1542  0F21                     	;# 
  1543  0F22                     	;# 
  1544  0F23                     	;# 
  1545  0F24                     	;# 
  1546  0F25                     	;# 
  1547  0F26                     	;# 
  1548  0F27                     	;# 
  1549  0F38                     	;# 
  1550  0F39                     	;# 
  1551  0F3A                     	;# 
  1552  0F3B                     	;# 
  1553  0F3C                     	;# 
  1554  0F3D                     	;# 
  1555  0F3E                     	;# 
  1556  0F3F                     	;# 
  1557  0F40                     	;# 
  1558  0F41                     	;# 
  1559  0F43                     	;# 
  1560  0F44                     	;# 
  1561  0F45                     	;# 
  1562  0F46                     	;# 
  1563  0F47                     	;# 
  1564  0F48                     	;# 
  1565  0F49                     	;# 
  1566  0F4A                     	;# 
  1567  0F4B                     	;# 
  1568  0F4C                     	;# 
  1569  0F4E                     	;# 
  1570  0F4F                     	;# 
  1571  0F50                     	;# 
  1572  0F51                     	;# 
  1573  0F52                     	;# 
  1574  0F53                     	;# 
  1575  0F54                     	;# 
  1576  0F55                     	;# 
  1577  0F56                     	;# 
  1578  0F57                     	;# 
  1579  0F65                     	;# 
  1580  0F68                     	;# 
  1581  0F69                     	;# 
  1582  0F6A                     	;# 
  1583  0F6B                     	;# 
  1584  0FE4                     	;# 
  1585  0FE5                     	;# 
  1586  0FE6                     	;# 
  1587  0FE7                     	;# 
  1588  0FE8                     	;# 
  1589  0FE9                     	;# 
  1590  0FEA                     	;# 
  1591  0FEB                     	;# 
  1592  0FED                     	;# 
  1593  0FEE                     	;# 
  1594  0FEF                     	;# 
  1595  0000                     	;# 
  1596  0001                     	;# 
  1597  0002                     	;# 
  1598  0003                     	;# 
  1599  0004                     	;# 
  1600  0005                     	;# 
  1601  0006                     	;# 
  1602  0007                     	;# 
  1603  0008                     	;# 
  1604  0009                     	;# 
  1605  000A                     	;# 
  1606  000B                     	;# 
  1607  000C                     	;# 
  1608  000D                     	;# 
  1609  000E                     	;# 
  1610  0010                     	;# 
  1611  0011                     	;# 
  1612  0012                     	;# 
  1613  0013                     	;# 
  1614  0016                     	;# 
  1615  0017                     	;# 
  1616  0018                     	;# 
  1617  001C                     	;# 
  1618  001C                     	;# 
  1619  001D                     	;# 
  1620  001D                     	;# 
  1621  001E                     	;# 
  1622  001F                     	;# 
  1623  008C                     	;# 
  1624  008C                     	;# 
  1625  008D                     	;# 
  1626  008E                     	;# 
  1627  008E                     	;# 
  1628  008F                     	;# 
  1629  0090                     	;# 
  1630  0090                     	;# 
  1631  0091                     	;# 
  1632  0093                     	;# 
  1633  0094                     	;# 
  1634  0095                     	;# 
  1635  0096                     	;# 
  1636  0097                     	;# 
  1637  0098                     	;# 
  1638  0099                     	;# 
  1639  009A                     	;# 
  1640  009B                     	;# 
  1641  009C                     	;# 
  1642  009D                     	;# 
  1643  009E                     	;# 
  1644  010C                     	;# 
  1645  010D                     	;# 
  1646  010E                     	;# 
  1647  010E                     	;# 
  1648  010F                     	;# 
  1649  0110                     	;# 
  1650  0110                     	;# 
  1651  0111                     	;# 
  1652  0112                     	;# 
  1653  0112                     	;# 
  1654  0113                     	;# 
  1655  0114                     	;# 
  1656  0114                     	;# 
  1657  0115                     	;# 
  1658  0116                     	;# 
  1659  0116                     	;# 
  1660  0117                     	;# 
  1661  0119                     	;# 
  1662  0119                     	;# 
  1663  0119                     	;# 
  1664  011A                     	;# 
  1665  011A                     	;# 
  1666  011A                     	;# 
  1667  011B                     	;# 
  1668  011B                     	;# 
  1669  011B                     	;# 
  1670  011B                     	;# 
  1671  011B                     	;# 
  1672  011C                     	;# 
  1673  011C                     	;# 
  1674  011C                     	;# 
  1675  011D                     	;# 
  1676  011D                     	;# 
  1677  011D                     	;# 
  1678  011E                     	;# 
  1679  011E                     	;# 
  1680  011E                     	;# 
  1681  011F                     	;# 
  1682  011F                     	;# 
  1683  011F                     	;# 
  1684  011F                     	;# 
  1685  011F                     	;# 
  1686  018C                     	;# 
  1687  018D                     	;# 
  1688  018E                     	;# 
  1689  018F                     	;# 
  1690  0190                     	;# 
  1691  0191                     	;# 
  1692  0192                     	;# 
  1693  0196                     	;# 
  1694  0197                     	;# 
  1695  0198                     	;# 
  1696  0199                     	;# 
  1697  019A                     	;# 
  1698  019B                     	;# 
  1699  019C                     	;# 
  1700  020C                     	;# 
  1701  020D                     	;# 
  1702  020E                     	;# 
  1703  020F                     	;# 
  1704  020F                     	;# 
  1705  0210                     	;# 
  1706  0210                     	;# 
  1707  0211                     	;# 
  1708  0211                     	;# 
  1709  0212                     	;# 
  1710  0213                     	;# 
  1711  0214                     	;# 
  1712  0215                     	;# 
  1713  0215                     	;# 
  1714  0216                     	;# 
  1715  0216                     	;# 
  1716  0217                     	;# 
  1717  0217                     	;# 
  1718  0218                     	;# 
  1719  0219                     	;# 
  1720  021A                     	;# 
  1721  021B                     	;# 
  1722  021B                     	;# 
  1723  021C                     	;# 
  1724  021C                     	;# 
  1725  021D                     	;# 
  1726  021D                     	;# 
  1727  021E                     	;# 
  1728  021F                     	;# 
  1729  028C                     	;# 
  1730  028C                     	;# 
  1731  028D                     	;# 
  1732  028D                     	;# 
  1733  028E                     	;# 
  1734  028F                     	;# 
  1735  0290                     	;# 
  1736  0290                     	;# 
  1737  0291                     	;# 
  1738  0292                     	;# 
  1739  0292                     	;# 
  1740  0293                     	;# 
  1741  0293                     	;# 
  1742  0294                     	;# 
  1743  0295                     	;# 
  1744  0296                     	;# 
  1745  0296                     	;# 
  1746  0297                     	;# 
  1747  0298                     	;# 
  1748  0298                     	;# 
  1749  0299                     	;# 
  1750  0299                     	;# 
  1751  029A                     	;# 
  1752  029B                     	;# 
  1753  029C                     	;# 
  1754  029C                     	;# 
  1755  029D                     	;# 
  1756  030C                     	;# 
  1757  030C                     	;# 
  1758  030D                     	;# 
  1759  030E                     	;# 
  1760  030F                     	;# 
  1761  0310                     	;# 
  1762  0310                     	;# 
  1763  0311                     	;# 
  1764  0312                     	;# 
  1765  0313                     	;# 
  1766  0314                     	;# 
  1767  0314                     	;# 
  1768  0315                     	;# 
  1769  0316                     	;# 
  1770  0317                     	;# 
  1771  0318                     	;# 
  1772  0318                     	;# 
  1773  0319                     	;# 
  1774  031A                     	;# 
  1775  031B                     	;# 
  1776  031C                     	;# 
  1777  031C                     	;# 
  1778  031D                     	;# 
  1779  031E                     	;# 
  1780  031F                     	;# 
  1781  038C                     	;# 
  1782  038D                     	;# 
  1783  038E                     	;# 
  1784  0390                     	;# 
  1785  0391                     	;# 
  1786  0392                     	;# 
  1787  040C                     	;# 
  1788  040D                     	;# 
  1789  040E                     	;# 
  1790  040F                     	;# 
  1791  0410                     	;# 
  1792  0411                     	;# 
  1793  0416                     	;# 
  1794  0416                     	;# 
  1795  0417                     	;# 
  1796  0418                     	;# 
  1797  0418                     	;# 
  1798  0419                     	;# 
  1799  041A                     	;# 
  1800  041A                     	;# 
  1801  041B                     	;# 
  1802  041C                     	;# 
  1803  041C                     	;# 
  1804  041D                     	;# 
  1805  041E                     	;# 
  1806  041F                     	;# 
  1807  048C                     	;# 
  1808  048C                     	;# 
  1809  048D                     	;# 
  1810  048E                     	;# 
  1811  048F                     	;# 
  1812  048F                     	;# 
  1813  0490                     	;# 
  1814  0491                     	;# 
  1815  0492                     	;# 
  1816  0492                     	;# 
  1817  0493                     	;# 
  1818  0494                     	;# 
  1819  0495                     	;# 
  1820  0495                     	;# 
  1821  0496                     	;# 
  1822  0497                     	;# 
  1823  0498                     	;# 
  1824  0499                     	;# 
  1825  049A                     	;# 
  1826  049B                     	;# 
  1827  049C                     	;# 
  1828  049D                     	;# 
  1829  050C                     	;# 
  1830  050C                     	;# 
  1831  050D                     	;# 
  1832  050E                     	;# 
  1833  050F                     	;# 
  1834  050F                     	;# 
  1835  0510                     	;# 
  1836  0511                     	;# 
  1837  0512                     	;# 
  1838  0512                     	;# 
  1839  0513                     	;# 
  1840  0514                     	;# 
  1841  0515                     	;# 
  1842  0515                     	;# 
  1843  0516                     	;# 
  1844  0517                     	;# 
  1845  0518                     	;# 
  1846  0519                     	;# 
  1847  051A                     	;# 
  1848  051B                     	;# 
  1849  051C                     	;# 
  1850  051D                     	;# 
  1851  058C                     	;# 
  1852  058C                     	;# 
  1853  058D                     	;# 
  1854  058E                     	;# 
  1855  058F                     	;# 
  1856  058F                     	;# 
  1857  0590                     	;# 
  1858  0591                     	;# 
  1859  0592                     	;# 
  1860  0593                     	;# 
  1861  060C                     	;# 
  1862  060D                     	;# 
  1863  060E                     	;# 
  1864  060F                     	;# 
  1865  0610                     	;# 
  1866  0611                     	;# 
  1867  0612                     	;# 
  1868  0613                     	;# 
  1869  0614                     	;# 
  1870  0616                     	;# 
  1871  0617                     	;# 
  1872  0618                     	;# 
  1873  0619                     	;# 
  1874  061A                     	;# 
  1875  061B                     	;# 
  1876  061C                     	;# 
  1877  061D                     	;# 
  1878  061E                     	;# 
  1879  068C                     	;# 
  1880  068D                     	;# 
  1881  068E                     	;# 
  1882  068F                     	;# 
  1883  0690                     	;# 
  1884  0691                     	;# 
  1885  0692                     	;# 
  1886  0693                     	;# 
  1887  0694                     	;# 
  1888  070C                     	;# 
  1889  070D                     	;# 
  1890  070E                     	;# 
  1891  070F                     	;# 
  1892  0710                     	;# 
  1893  0711                     	;# 
  1894  0712                     	;# 
  1895  0713                     	;# 
  1896  0714                     	;# 
  1897  0716                     	;# 
  1898  0717                     	;# 
  1899  0718                     	;# 
  1900  0719                     	;# 
  1901  071A                     	;# 
  1902  071B                     	;# 
  1903  071C                     	;# 
  1904  071D                     	;# 
  1905  071E                     	;# 
  1906  0796                     	;# 
  1907  0797                     	;# 
  1908  0798                     	;# 
  1909  0799                     	;# 
  1910  079A                     	;# 
  1911  079B                     	;# 
  1912  080C                     	;# 
  1913  080D                     	;# 
  1914  080E                     	;# 
  1915  080F                     	;# 
  1916  0810                     	;# 
  1917  0811                     	;# 
  1918  0812                     	;# 
  1919  0813                     	;# 
  1920  0814                     	;# 
  1921  081A                     	;# 
  1922  081B                     	;# 
  1923  081C                     	;# 
  1924  081D                     	;# 
  1925  081E                     	;# 
  1926  081F                     	;# 
  1927  088C                     	;# 
  1928  088D                     	;# 
  1929  088E                     	;# 
  1930  088F                     	;# 
  1931  0890                     	;# 
  1932  0891                     	;# 
  1933  0892                     	;# 
  1934  0893                     	;# 
  1935  0895                     	;# 
  1936  0896                     	;# 
  1937  0897                     	;# 
  1938  0898                     	;# 
  1939  0899                     	;# 
  1940  089A                     	;# 
  1941  089B                     	;# 
  1942  090C                     	;# 
  1943  090E                     	;# 
  1944  090F                     	;# 
  1945  091F                     	;# 
  1946  091F                     	;# 
  1947  098F                     	;# 
  1948  098F                     	;# 
  1949  0990                     	;# 
  1950  0991                     	;# 
  1951  0992                     	;# 
  1952  0993                     	;# 
  1953  0994                     	;# 
  1954  0995                     	;# 
  1955  0996                     	;# 
  1956  0997                     	;# 
  1957  0E0F                     	;# 
  1958  0E10                     	;# 
  1959  0E11                     	;# 
  1960  0E12                     	;# 
  1961  0E13                     	;# 
  1962  0E14                     	;# 
  1963  0E15                     	;# 
  1964  0E16                     	;# 
  1965  0E17                     	;# 
  1966  0E18                     	;# 
  1967  0E19                     	;# 
  1968  0E1A                     	;# 
  1969  0E1B                     	;# 
  1970  0E1C                     	;# 
  1971  0E1D                     	;# 
  1972  0E1E                     	;# 
  1973  0E1F                     	;# 
  1974  0E20                     	;# 
  1975  0E21                     	;# 
  1976  0E22                     	;# 
  1977  0E23                     	;# 
  1978  0E24                     	;# 
  1979  0E25                     	;# 
  1980  0E26                     	;# 
  1981  0E27                     	;# 
  1982  0E28                     	;# 
  1983  0E29                     	;# 
  1984  0E2A                     	;# 
  1985  0E2B                     	;# 
  1986  0E2C                     	;# 
  1987  0E2D                     	;# 
  1988  0E2E                     	;# 
  1989  0E2F                     	;# 
  1990  0E30                     	;# 
  1991  0E31                     	;# 
  1992  0E32                     	;# 
  1993  0E33                     	;# 
  1994  0E34                     	;# 
  1995  0E35                     	;# 
  1996  0E36                     	;# 
  1997  0E37                     	;# 
  1998  0E8F                     	;# 
  1999  0E90                     	;# 
  2000  0E91                     	;# 
  2001  0E92                     	;# 
  2002  0E93                     	;# 
  2003  0E94                     	;# 
  2004  0E95                     	;# 
  2005  0E96                     	;# 
  2006  0E97                     	;# 
  2007  0E9C                     	;# 
  2008  0E9D                     	;# 
  2009  0E9E                     	;# 
  2010  0EA1                     	;# 
  2011  0EA2                     	;# 
  2012  0EA3                     	;# 
  2013  0EA4                     	;# 
  2014  0EA5                     	;# 
  2015  0EA9                     	;# 
  2016  0EAA                     	;# 
  2017  0EAB                     	;# 
  2018  0EAC                     	;# 
  2019  0EB1                     	;# 
  2020  0EB2                     	;# 
  2021  0EB3                     	;# 
  2022  0EB8                     	;# 
  2023  0EB9                     	;# 
  2024  0EBA                     	;# 
  2025  0EBB                     	;# 
  2026  0EBC                     	;# 
  2027  0EBD                     	;# 
  2028  0EBE                     	;# 
  2029  0EC3                     	;# 
  2030  0EC5                     	;# 
  2031  0EC6                     	;# 
  2032  0EC7                     	;# 
  2033  0EC8                     	;# 
  2034  0EC9                     	;# 
  2035  0ECA                     	;# 
  2036  0ECB                     	;# 
  2037  0ECC                     	;# 
  2038  0F10                     	;# 
  2039  0F11                     	;# 
  2040  0F12                     	;# 
  2041  0F13                     	;# 
  2042  0F14                     	;# 
  2043  0F15                     	;# 
  2044  0F16                     	;# 
  2045  0F17                     	;# 
  2046  0F18                     	;# 
  2047  0F19                     	;# 
  2048  0F1A                     	;# 
  2049  0F1B                     	;# 
  2050  0F1C                     	;# 
  2051  0F1D                     	;# 
  2052  0F1E                     	;# 
  2053  0F1F                     	;# 
  2054  0F20                     	;# 
  2055  0F21                     	;# 
  2056  0F22                     	;# 
  2057  0F23                     	;# 
  2058  0F24                     	;# 
  2059  0F25                     	;# 
  2060  0F26                     	;# 
  2061  0F27                     	;# 
  2062  0F38                     	;# 
  2063  0F39                     	;# 
  2064  0F3A                     	;# 
  2065  0F3B                     	;# 
  2066  0F3C                     	;# 
  2067  0F3D                     	;# 
  2068  0F3E                     	;# 
  2069  0F3F                     	;# 
  2070  0F40                     	;# 
  2071  0F41                     	;# 
  2072  0F43                     	;# 
  2073  0F44                     	;# 
  2074  0F45                     	;# 
  2075  0F46                     	;# 
  2076  0F47                     	;# 
  2077  0F48                     	;# 
  2078  0F49                     	;# 
  2079  0F4A                     	;# 
  2080  0F4B                     	;# 
  2081  0F4C                     	;# 
  2082  0F4E                     	;# 
  2083  0F4F                     	;# 
  2084  0F50                     	;# 
  2085  0F51                     	;# 
  2086  0F52                     	;# 
  2087  0F53                     	;# 
  2088  0F54                     	;# 
  2089  0F55                     	;# 
  2090  0F56                     	;# 
  2091  0F57                     	;# 
  2092  0F65                     	;# 
  2093  0F68                     	;# 
  2094  0F69                     	;# 
  2095  0F6A                     	;# 
  2096  0F6B                     	;# 
  2097  0FE4                     	;# 
  2098  0FE5                     	;# 
  2099  0FE6                     	;# 
  2100  0FE7                     	;# 
  2101  0FE8                     	;# 
  2102  0FE9                     	;# 
  2103  0FEA                     	;# 
  2104  0FEB                     	;# 
  2105  0FED                     	;# 
  2106  0FEE                     	;# 
  2107  0FEF                     	;# 
  2108  0000                     	;# 
  2109  0001                     	;# 
  2110  0002                     	;# 
  2111  0003                     	;# 
  2112  0004                     	;# 
  2113  0005                     	;# 
  2114  0006                     	;# 
  2115  0007                     	;# 
  2116  0008                     	;# 
  2117  0009                     	;# 
  2118  000A                     	;# 
  2119  000B                     	;# 
  2120  000C                     	;# 
  2121  000D                     	;# 
  2122  000E                     	;# 
  2123  0010                     	;# 
  2124  0011                     	;# 
  2125  0012                     	;# 
  2126  0013                     	;# 
  2127  0016                     	;# 
  2128  0017                     	;# 
  2129  0018                     	;# 
  2130  001C                     	;# 
  2131  001C                     	;# 
  2132  001D                     	;# 
  2133  001D                     	;# 
  2134  001E                     	;# 
  2135  001F                     	;# 
  2136  008C                     	;# 
  2137  008C                     	;# 
  2138  008D                     	;# 
  2139  008E                     	;# 
  2140  008E                     	;# 
  2141  008F                     	;# 
  2142  0090                     	;# 
  2143  0090                     	;# 
  2144  0091                     	;# 
  2145  0093                     	;# 
  2146  0094                     	;# 
  2147  0095                     	;# 
  2148  0096                     	;# 
  2149  0097                     	;# 
  2150  0098                     	;# 
  2151  0099                     	;# 
  2152  009A                     	;# 
  2153  009B                     	;# 
  2154  009C                     	;# 
  2155  009D                     	;# 
  2156  009E                     	;# 
  2157  010C                     	;# 
  2158  010D                     	;# 
  2159  010E                     	;# 
  2160  010E                     	;# 
  2161  010F                     	;# 
  2162  0110                     	;# 
  2163  0110                     	;# 
  2164  0111                     	;# 
  2165  0112                     	;# 
  2166  0112                     	;# 
  2167  0113                     	;# 
  2168  0114                     	;# 
  2169  0114                     	;# 
  2170  0115                     	;# 
  2171  0116                     	;# 
  2172  0116                     	;# 
  2173  0117                     	;# 
  2174  0119                     	;# 
  2175  0119                     	;# 
  2176  0119                     	;# 
  2177  011A                     	;# 
  2178  011A                     	;# 
  2179  011A                     	;# 
  2180  011B                     	;# 
  2181  011B                     	;# 
  2182  011B                     	;# 
  2183  011B                     	;# 
  2184  011B                     	;# 
  2185  011C                     	;# 
  2186  011C                     	;# 
  2187  011C                     	;# 
  2188  011D                     	;# 
  2189  011D                     	;# 
  2190  011D                     	;# 
  2191  011E                     	;# 
  2192  011E                     	;# 
  2193  011E                     	;# 
  2194  011F                     	;# 
  2195  011F                     	;# 
  2196  011F                     	;# 
  2197  011F                     	;# 
  2198  011F                     	;# 
  2199  018C                     	;# 
  2200  018D                     	;# 
  2201  018E                     	;# 
  2202  018F                     	;# 
  2203  0190                     	;# 
  2204  0191                     	;# 
  2205  0192                     	;# 
  2206  0196                     	;# 
  2207  0197                     	;# 
  2208  0198                     	;# 
  2209  0199                     	;# 
  2210  019A                     	;# 
  2211  019B                     	;# 
  2212  019C                     	;# 
  2213  020C                     	;# 
  2214  020D                     	;# 
  2215  020E                     	;# 
  2216  020F                     	;# 
  2217  020F                     	;# 
  2218  0210                     	;# 
  2219  0210                     	;# 
  2220  0211                     	;# 
  2221  0211                     	;# 
  2222  0212                     	;# 
  2223  0213                     	;# 
  2224  0214                     	;# 
  2225  0215                     	;# 
  2226  0215                     	;# 
  2227  0216                     	;# 
  2228  0216                     	;# 
  2229  0217                     	;# 
  2230  0217                     	;# 
  2231  0218                     	;# 
  2232  0219                     	;# 
  2233  021A                     	;# 
  2234  021B                     	;# 
  2235  021B                     	;# 
  2236  021C                     	;# 
  2237  021C                     	;# 
  2238  021D                     	;# 
  2239  021D                     	;# 
  2240  021E                     	;# 
  2241  021F                     	;# 
  2242  028C                     	;# 
  2243  028C                     	;# 
  2244  028D                     	;# 
  2245  028D                     	;# 
  2246  028E                     	;# 
  2247  028F                     	;# 
  2248  0290                     	;# 
  2249  0290                     	;# 
  2250  0291                     	;# 
  2251  0292                     	;# 
  2252  0292                     	;# 
  2253  0293                     	;# 
  2254  0293                     	;# 
  2255  0294                     	;# 
  2256  0295                     	;# 
  2257  0296                     	;# 
  2258  0296                     	;# 
  2259  0297                     	;# 
  2260  0298                     	;# 
  2261  0298                     	;# 
  2262  0299                     	;# 
  2263  0299                     	;# 
  2264  029A                     	;# 
  2265  029B                     	;# 
  2266  029C                     	;# 
  2267  029C                     	;# 
  2268  029D                     	;# 
  2269  030C                     	;# 
  2270  030C                     	;# 
  2271  030D                     	;# 
  2272  030E                     	;# 
  2273  030F                     	;# 
  2274  0310                     	;# 
  2275  0310                     	;# 
  2276  0311                     	;# 
  2277  0312                     	;# 
  2278  0313                     	;# 
  2279  0314                     	;# 
  2280  0314                     	;# 
  2281  0315                     	;# 
  2282  0316                     	;# 
  2283  0317                     	;# 
  2284  0318                     	;# 
  2285  0318                     	;# 
  2286  0319                     	;# 
  2287  031A                     	;# 
  2288  031B                     	;# 
  2289  031C                     	;# 
  2290  031C                     	;# 
  2291  031D                     	;# 
  2292  031E                     	;# 
  2293  031F                     	;# 
  2294  038C                     	;# 
  2295  038D                     	;# 
  2296  038E                     	;# 
  2297  0390                     	;# 
  2298  0391                     	;# 
  2299  0392                     	;# 
  2300  040C                     	;# 
  2301  040D                     	;# 
  2302  040E                     	;# 
  2303  040F                     	;# 
  2304  0410                     	;# 
  2305  0411                     	;# 
  2306  0416                     	;# 
  2307  0416                     	;# 
  2308  0417                     	;# 
  2309  0418                     	;# 
  2310  0418                     	;# 
  2311  0419                     	;# 
  2312  041A                     	;# 
  2313  041A                     	;# 
  2314  041B                     	;# 
  2315  041C                     	;# 
  2316  041C                     	;# 
  2317  041D                     	;# 
  2318  041E                     	;# 
  2319  041F                     	;# 
  2320  048C                     	;# 
  2321  048C                     	;# 
  2322  048D                     	;# 
  2323  048E                     	;# 
  2324  048F                     	;# 
  2325  048F                     	;# 
  2326  0490                     	;# 
  2327  0491                     	;# 
  2328  0492                     	;# 
  2329  0492                     	;# 
  2330  0493                     	;# 
  2331  0494                     	;# 
  2332  0495                     	;# 
  2333  0495                     	;# 
  2334  0496                     	;# 
  2335  0497                     	;# 
  2336  0498                     	;# 
  2337  0499                     	;# 
  2338  049A                     	;# 
  2339  049B                     	;# 
  2340  049C                     	;# 
  2341  049D                     	;# 
  2342  050C                     	;# 
  2343  050C                     	;# 
  2344  050D                     	;# 
  2345  050E                     	;# 
  2346  050F                     	;# 
  2347  050F                     	;# 
  2348  0510                     	;# 
  2349  0511                     	;# 
  2350  0512                     	;# 
  2351  0512                     	;# 
  2352  0513                     	;# 
  2353  0514                     	;# 
  2354  0515                     	;# 
  2355  0515                     	;# 
  2356  0516                     	;# 
  2357  0517                     	;# 
  2358  0518                     	;# 
  2359  0519                     	;# 
  2360  051A                     	;# 
  2361  051B                     	;# 
  2362  051C                     	;# 
  2363  051D                     	;# 
  2364  058C                     	;# 
  2365  058C                     	;# 
  2366  058D                     	;# 
  2367  058E                     	;# 
  2368  058F                     	;# 
  2369  058F                     	;# 
  2370  0590                     	;# 
  2371  0591                     	;# 
  2372  0592                     	;# 
  2373  0593                     	;# 
  2374  060C                     	;# 
  2375  060D                     	;# 
  2376  060E                     	;# 
  2377  060F                     	;# 
  2378  0610                     	;# 
  2379  0611                     	;# 
  2380  0612                     	;# 
  2381  0613                     	;# 
  2382  0614                     	;# 
  2383  0616                     	;# 
  2384  0617                     	;# 
  2385  0618                     	;# 
  2386  0619                     	;# 
  2387  061A                     	;# 
  2388  061B                     	;# 
  2389  061C                     	;# 
  2390  061D                     	;# 
  2391  061E                     	;# 
  2392  068C                     	;# 
  2393  068D                     	;# 
  2394  068E                     	;# 
  2395  068F                     	;# 
  2396  0690                     	;# 
  2397  0691                     	;# 
  2398  0692                     	;# 
  2399  0693                     	;# 
  2400  0694                     	;# 
  2401  070C                     	;# 
  2402  070D                     	;# 
  2403  070E                     	;# 
  2404  070F                     	;# 
  2405  0710                     	;# 
  2406  0711                     	;# 
  2407  0712                     	;# 
  2408  0713                     	;# 
  2409  0714                     	;# 
  2410  0716                     	;# 
  2411  0717                     	;# 
  2412  0718                     	;# 
  2413  0719                     	;# 
  2414  071A                     	;# 
  2415  071B                     	;# 
  2416  071C                     	;# 
  2417  071D                     	;# 
  2418  071E                     	;# 
  2419  0796                     	;# 
  2420  0797                     	;# 
  2421  0798                     	;# 
  2422  0799                     	;# 
  2423  079A                     	;# 
  2424  079B                     	;# 
  2425  080C                     	;# 
  2426  080D                     	;# 
  2427  080E                     	;# 
  2428  080F                     	;# 
  2429  0810                     	;# 
  2430  0811                     	;# 
  2431  0812                     	;# 
  2432  0813                     	;# 
  2433  0814                     	;# 
  2434  081A                     	;# 
  2435  081B                     	;# 
  2436  081C                     	;# 
  2437  081D                     	;# 
  2438  081E                     	;# 
  2439  081F                     	;# 
  2440  088C                     	;# 
  2441  088D                     	;# 
  2442  088E                     	;# 
  2443  088F                     	;# 
  2444  0890                     	;# 
  2445  0891                     	;# 
  2446  0892                     	;# 
  2447  0893                     	;# 
  2448  0895                     	;# 
  2449  0896                     	;# 
  2450  0897                     	;# 
  2451  0898                     	;# 
  2452  0899                     	;# 
  2453  089A                     	;# 
  2454  089B                     	;# 
  2455  090C                     	;# 
  2456  090E                     	;# 
  2457  090F                     	;# 
  2458  091F                     	;# 
  2459  091F                     	;# 
  2460  098F                     	;# 
  2461  098F                     	;# 
  2462  0990                     	;# 
  2463  0991                     	;# 
  2464  0992                     	;# 
  2465  0993                     	;# 
  2466  0994                     	;# 
  2467  0995                     	;# 
  2468  0996                     	;# 
  2469  0997                     	;# 
  2470  0E0F                     	;# 
  2471  0E10                     	;# 
  2472  0E11                     	;# 
  2473  0E12                     	;# 
  2474  0E13                     	;# 
  2475  0E14                     	;# 
  2476  0E15                     	;# 
  2477  0E16                     	;# 
  2478  0E17                     	;# 
  2479  0E18                     	;# 
  2480  0E19                     	;# 
  2481  0E1A                     	;# 
  2482  0E1B                     	;# 
  2483  0E1C                     	;# 
  2484  0E1D                     	;# 
  2485  0E1E                     	;# 
  2486  0E1F                     	;# 
  2487  0E20                     	;# 
  2488  0E21                     	;# 
  2489  0E22                     	;# 
  2490  0E23                     	;# 
  2491  0E24                     	;# 
  2492  0E25                     	;# 
  2493  0E26                     	;# 
  2494  0E27                     	;# 
  2495  0E28                     	;# 
  2496  0E29                     	;# 
  2497  0E2A                     	;# 
  2498  0E2B                     	;# 
  2499  0E2C                     	;# 
  2500  0E2D                     	;# 
  2501  0E2E                     	;# 
  2502  0E2F                     	;# 
  2503  0E30                     	;# 
  2504  0E31                     	;# 
  2505  0E32                     	;# 
  2506  0E33                     	;# 
  2507  0E34                     	;# 
  2508  0E35                     	;# 
  2509  0E36                     	;# 
  2510  0E37                     	;# 
  2511  0E8F                     	;# 
  2512  0E90                     	;# 
  2513  0E91                     	;# 
  2514  0E92                     	;# 
  2515  0E93                     	;# 
  2516  0E94                     	;# 
  2517  0E95                     	;# 
  2518  0E96                     	;# 
  2519  0E97                     	;# 
  2520  0E9C                     	;# 
  2521  0E9D                     	;# 
  2522  0E9E                     	;# 
  2523  0EA1                     	;# 
  2524  0EA2                     	;# 
  2525  0EA3                     	;# 
  2526  0EA4                     	;# 
  2527  0EA5                     	;# 
  2528  0EA9                     	;# 
  2529  0EAA                     	;# 
  2530  0EAB                     	;# 
  2531  0EAC                     	;# 
  2532  0EB1                     	;# 
  2533  0EB2                     	;# 
  2534  0EB3                     	;# 
  2535  0EB8                     	;# 
  2536  0EB9                     	;# 
  2537  0EBA                     	;# 
  2538  0EBB                     	;# 
  2539  0EBC                     	;# 
  2540  0EBD                     	;# 
  2541  0EBE                     	;# 
  2542  0EC3                     	;# 
  2543  0EC5                     	;# 
  2544  0EC6                     	;# 
  2545  0EC7                     	;# 
  2546  0EC8                     	;# 
  2547  0EC9                     	;# 
  2548  0ECA                     	;# 
  2549  0ECB                     	;# 
  2550  0ECC                     	;# 
  2551  0F10                     	;# 
  2552  0F11                     	;# 
  2553  0F12                     	;# 
  2554  0F13                     	;# 
  2555  0F14                     	;# 
  2556  0F15                     	;# 
  2557  0F16                     	;# 
  2558  0F17                     	;# 
  2559  0F18                     	;# 
  2560  0F19                     	;# 
  2561  0F1A                     	;# 
  2562  0F1B                     	;# 
  2563  0F1C                     	;# 
  2564  0F1D                     	;# 
  2565  0F1E                     	;# 
  2566  0F1F                     	;# 
  2567  0F20                     	;# 
  2568  0F21                     	;# 
  2569  0F22                     	;# 
  2570  0F23                     	;# 
  2571  0F24                     	;# 
  2572  0F25                     	;# 
  2573  0F26                     	;# 
  2574  0F27                     	;# 
  2575  0F38                     	;# 
  2576  0F39                     	;# 
  2577  0F3A                     	;# 
  2578  0F3B                     	;# 
  2579  0F3C                     	;# 
  2580  0F3D                     	;# 
  2581  0F3E                     	;# 
  2582  0F3F                     	;# 
  2583  0F40                     	;# 
  2584  0F41                     	;# 
  2585  0F43                     	;# 
  2586  0F44                     	;# 
  2587  0F45                     	;# 
  2588  0F46                     	;# 
  2589  0F47                     	;# 
  2590  0F48                     	;# 
  2591  0F49                     	;# 
  2592  0F4A                     	;# 
  2593  0F4B                     	;# 
  2594  0F4C                     	;# 
  2595  0F4E                     	;# 
  2596  0F4F                     	;# 
  2597  0F50                     	;# 
  2598  0F51                     	;# 
  2599  0F52                     	;# 
  2600  0F53                     	;# 
  2601  0F54                     	;# 
  2602  0F55                     	;# 
  2603  0F56                     	;# 
  2604  0F57                     	;# 
  2605  0F65                     	;# 
  2606  0F68                     	;# 
  2607  0F69                     	;# 
  2608  0F6A                     	;# 
  2609  0F6B                     	;# 
  2610  0FE4                     	;# 
  2611  0FE5                     	;# 
  2612  0FE6                     	;# 
  2613  0FE7                     	;# 
  2614  0FE8                     	;# 
  2615  0FE9                     	;# 
  2616  0FEA                     	;# 
  2617  0FEB                     	;# 
  2618  0FED                     	;# 
  2619  0FEE                     	;# 
  2620  0FEF                     	;# 
  2621  0000                     	;# 
  2622  0001                     	;# 
  2623  0002                     	;# 
  2624  0003                     	;# 
  2625  0004                     	;# 
  2626  0005                     	;# 
  2627  0006                     	;# 
  2628  0007                     	;# 
  2629  0008                     	;# 
  2630  0009                     	;# 
  2631  000A                     	;# 
  2632  000B                     	;# 
  2633  000C                     	;# 
  2634  000D                     	;# 
  2635  000E                     	;# 
  2636  0010                     	;# 
  2637  0011                     	;# 
  2638  0012                     	;# 
  2639  0013                     	;# 
  2640  0016                     	;# 
  2641  0017                     	;# 
  2642  0018                     	;# 
  2643  001C                     	;# 
  2644  001C                     	;# 
  2645  001D                     	;# 
  2646  001D                     	;# 
  2647  001E                     	;# 
  2648  001F                     	;# 
  2649  008C                     	;# 
  2650  008C                     	;# 
  2651  008D                     	;# 
  2652  008E                     	;# 
  2653  008E                     	;# 
  2654  008F                     	;# 
  2655  0090                     	;# 
  2656  0090                     	;# 
  2657  0091                     	;# 
  2658  0093                     	;# 
  2659  0094                     	;# 
  2660  0095                     	;# 
  2661  0096                     	;# 
  2662  0097                     	;# 
  2663  0098                     	;# 
  2664  0099                     	;# 
  2665  009A                     	;# 
  2666  009B                     	;# 
  2667  009C                     	;# 
  2668  009D                     	;# 
  2669  009E                     	;# 
  2670  010C                     	;# 
  2671  010D                     	;# 
  2672  010E                     	;# 
  2673  010E                     	;# 
  2674  010F                     	;# 
  2675  0110                     	;# 
  2676  0110                     	;# 
  2677  0111                     	;# 
  2678  0112                     	;# 
  2679  0112                     	;# 
  2680  0113                     	;# 
  2681  0114                     	;# 
  2682  0114                     	;# 
  2683  0115                     	;# 
  2684  0116                     	;# 
  2685  0116                     	;# 
  2686  0117                     	;# 
  2687  0119                     	;# 
  2688  0119                     	;# 
  2689  0119                     	;# 
  2690  011A                     	;# 
  2691  011A                     	;# 
  2692  011A                     	;# 
  2693  011B                     	;# 
  2694  011B                     	;# 
  2695  011B                     	;# 
  2696  011B                     	;# 
  2697  011B                     	;# 
  2698  011C                     	;# 
  2699  011C                     	;# 
  2700  011C                     	;# 
  2701  011D                     	;# 
  2702  011D                     	;# 
  2703  011D                     	;# 
  2704  011E                     	;# 
  2705  011E                     	;# 
  2706  011E                     	;# 
  2707  011F                     	;# 
  2708  011F                     	;# 
  2709  011F                     	;# 
  2710  011F                     	;# 
  2711  011F                     	;# 
  2712  018C                     	;# 
  2713  018D                     	;# 
  2714  018E                     	;# 
  2715  018F                     	;# 
  2716  0190                     	;# 
  2717  0191                     	;# 
  2718  0192                     	;# 
  2719  0196                     	;# 
  2720  0197                     	;# 
  2721  0198                     	;# 
  2722  0199                     	;# 
  2723  019A                     	;# 
  2724  019B                     	;# 
  2725  019C                     	;# 
  2726  020C                     	;# 
  2727  020D                     	;# 
  2728  020E                     	;# 
  2729  020F                     	;# 
  2730  020F                     	;# 
  2731  0210                     	;# 
  2732  0210                     	;# 
  2733  0211                     	;# 
  2734  0211                     	;# 
  2735  0212                     	;# 
  2736  0213                     	;# 
  2737  0214                     	;# 
  2738  0215                     	;# 
  2739  0215                     	;# 
  2740  0216                     	;# 
  2741  0216                     	;# 
  2742  0217                     	;# 
  2743  0217                     	;# 
  2744  0218                     	;# 
  2745  0219                     	;# 
  2746  021A                     	;# 
  2747  021B                     	;# 
  2748  021B                     	;# 
  2749  021C                     	;# 
  2750  021C                     	;# 
  2751  021D                     	;# 
  2752  021D                     	;# 
  2753  021E                     	;# 
  2754  021F                     	;# 
  2755  028C                     	;# 
  2756  028C                     	;# 
  2757  028D                     	;# 
  2758  028D                     	;# 
  2759  028E                     	;# 
  2760  028F                     	;# 
  2761  0290                     	;# 
  2762  0290                     	;# 
  2763  0291                     	;# 
  2764  0292                     	;# 
  2765  0292                     	;# 
  2766  0293                     	;# 
  2767  0293                     	;# 
  2768  0294                     	;# 
  2769  0295                     	;# 
  2770  0296                     	;# 
  2771  0296                     	;# 
  2772  0297                     	;# 
  2773  0298                     	;# 
  2774  0298                     	;# 
  2775  0299                     	;# 
  2776  0299                     	;# 
  2777  029A                     	;# 
  2778  029B                     	;# 
  2779  029C                     	;# 
  2780  029C                     	;# 
  2781  029D                     	;# 
  2782  030C                     	;# 
  2783  030C                     	;# 
  2784  030D                     	;# 
  2785  030E                     	;# 
  2786  030F                     	;# 
  2787  0310                     	;# 
  2788  0310                     	;# 
  2789  0311                     	;# 
  2790  0312                     	;# 
  2791  0313                     	;# 
  2792  0314                     	;# 
  2793  0314                     	;# 
  2794  0315                     	;# 
  2795  0316                     	;# 
  2796  0317                     	;# 
  2797  0318                     	;# 
  2798  0318                     	;# 
  2799  0319                     	;# 
  2800  031A                     	;# 
  2801  031B                     	;# 
  2802  031C                     	;# 
  2803  031C                     	;# 
  2804  031D                     	;# 
  2805  031E                     	;# 
  2806  031F                     	;# 
  2807  038C                     	;# 
  2808  038D                     	;# 
  2809  038E                     	;# 
  2810  0390                     	;# 
  2811  0391                     	;# 
  2812  0392                     	;# 
  2813  040C                     	;# 
  2814  040D                     	;# 
  2815  040E                     	;# 
  2816  040F                     	;# 
  2817  0410                     	;# 
  2818  0411                     	;# 
  2819  0416                     	;# 
  2820  0416                     	;# 
  2821  0417                     	;# 
  2822  0418                     	;# 
  2823  0418                     	;# 
  2824  0419                     	;# 
  2825  041A                     	;# 
  2826  041A                     	;# 
  2827  041B                     	;# 
  2828  041C                     	;# 
  2829  041C                     	;# 
  2830  041D                     	;# 
  2831  041E                     	;# 
  2832  041F                     	;# 
  2833  048C                     	;# 
  2834  048C                     	;# 
  2835  048D                     	;# 
  2836  048E                     	;# 
  2837  048F                     	;# 
  2838  048F                     	;# 
  2839  0490                     	;# 
  2840  0491                     	;# 
  2841  0492                     	;# 
  2842  0492                     	;# 
  2843  0493                     	;# 
  2844  0494                     	;# 
  2845  0495                     	;# 
  2846  0495                     	;# 
  2847  0496                     	;# 
  2848  0497                     	;# 
  2849  0498                     	;# 
  2850  0499                     	;# 
  2851  049A                     	;# 
  2852  049B                     	;# 
  2853  049C                     	;# 
  2854  049D                     	;# 
  2855  050C                     	;# 
  2856  050C                     	;# 
  2857  050D                     	;# 
  2858  050E                     	;# 
  2859  050F                     	;# 
  2860  050F                     	;# 
  2861  0510                     	;# 
  2862  0511                     	;# 
  2863  0512                     	;# 
  2864  0512                     	;# 
  2865  0513                     	;# 
  2866  0514                     	;# 
  2867  0515                     	;# 
  2868  0515                     	;# 
  2869  0516                     	;# 
  2870  0517                     	;# 
  2871  0518                     	;# 
  2872  0519                     	;# 
  2873  051A                     	;# 
  2874  051B                     	;# 
  2875  051C                     	;# 
  2876  051D                     	;# 
  2877  058C                     	;# 
  2878  058C                     	;# 
  2879  058D                     	;# 
  2880  058E                     	;# 
  2881  058F                     	;# 
  2882  058F                     	;# 
  2883  0590                     	;# 
  2884  0591                     	;# 
  2885  0592                     	;# 
  2886  0593                     	;# 
  2887  060C                     	;# 
  2888  060D                     	;# 
  2889  060E                     	;# 
  2890  060F                     	;# 
  2891  0610                     	;# 
  2892  0611                     	;# 
  2893  0612                     	;# 
  2894  0613                     	;# 
  2895  0614                     	;# 
  2896  0616                     	;# 
  2897  0617                     	;# 
  2898  0618                     	;# 
  2899  0619                     	;# 
  2900  061A                     	;# 
  2901  061B                     	;# 
  2902  061C                     	;# 
  2903  061D                     	;# 
  2904  061E                     	;# 
  2905  068C                     	;# 
  2906  068D                     	;# 
  2907  068E                     	;# 
  2908  068F                     	;# 
  2909  0690                     	;# 
  2910  0691                     	;# 
  2911  0692                     	;# 
  2912  0693                     	;# 
  2913  0694                     	;# 
  2914  070C                     	;# 
  2915  070D                     	;# 
  2916  070E                     	;# 
  2917  070F                     	;# 
  2918  0710                     	;# 
  2919  0711                     	;# 
  2920  0712                     	;# 
  2921  0713                     	;# 
  2922  0714                     	;# 
  2923  0716                     	;# 
  2924  0717                     	;# 
  2925  0718                     	;# 
  2926  0719                     	;# 
  2927  071A                     	;# 
  2928  071B                     	;# 
  2929  071C                     	;# 
  2930  071D                     	;# 
  2931  071E                     	;# 
  2932  0796                     	;# 
  2933  0797                     	;# 
  2934  0798                     	;# 
  2935  0799                     	;# 
  2936  079A                     	;# 
  2937  079B                     	;# 
  2938  080C                     	;# 
  2939  080D                     	;# 
  2940  080E                     	;# 
  2941  080F                     	;# 
  2942  0810                     	;# 
  2943  0811                     	;# 
  2944  0812                     	;# 
  2945  0813                     	;# 
  2946  0814                     	;# 
  2947  081A                     	;# 
  2948  081B                     	;# 
  2949  081C                     	;# 
  2950  081D                     	;# 
  2951  081E                     	;# 
  2952  081F                     	;# 
  2953  088C                     	;# 
  2954  088D                     	;# 
  2955  088E                     	;# 
  2956  088F                     	;# 
  2957  0890                     	;# 
  2958  0891                     	;# 
  2959  0892                     	;# 
  2960  0893                     	;# 
  2961  0895                     	;# 
  2962  0896                     	;# 
  2963  0897                     	;# 
  2964  0898                     	;# 
  2965  0899                     	;# 
  2966  089A                     	;# 
  2967  089B                     	;# 
  2968  090C                     	;# 
  2969  090E                     	;# 
  2970  090F                     	;# 
  2971  091F                     	;# 
  2972  091F                     	;# 
  2973  098F                     	;# 
  2974  098F                     	;# 
  2975  0990                     	;# 
  2976  0991                     	;# 
  2977  0992                     	;# 
  2978  0993                     	;# 
  2979  0994                     	;# 
  2980  0995                     	;# 
  2981  0996                     	;# 
  2982  0997                     	;# 
  2983  0E0F                     	;# 
  2984  0E10                     	;# 
  2985  0E11                     	;# 
  2986  0E12                     	;# 
  2987  0E13                     	;# 
  2988  0E14                     	;# 
  2989  0E15                     	;# 
  2990  0E16                     	;# 
  2991  0E17                     	;# 
  2992  0E18                     	;# 
  2993  0E19                     	;# 
  2994  0E1A                     	;# 
  2995  0E1B                     	;# 
  2996  0E1C                     	;# 
  2997  0E1D                     	;# 
  2998  0E1E                     	;# 
  2999  0E1F                     	;# 
  3000  0E20                     	;# 
  3001  0E21                     	;# 
  3002  0E22                     	;# 
  3003  0E23                     	;# 
  3004  0E24                     	;# 
  3005  0E25                     	;# 
  3006  0E26                     	;# 
  3007  0E27                     	;# 
  3008  0E28                     	;# 
  3009  0E29                     	;# 
  3010  0E2A                     	;# 
  3011  0E2B                     	;# 
  3012  0E2C                     	;# 
  3013  0E2D                     	;# 
  3014  0E2E                     	;# 
  3015  0E2F                     	;# 
  3016  0E30                     	;# 
  3017  0E31                     	;# 
  3018  0E32                     	;# 
  3019  0E33                     	;# 
  3020  0E34                     	;# 
  3021  0E35                     	;# 
  3022  0E36                     	;# 
  3023  0E37                     	;# 
  3024  0E8F                     	;# 
  3025  0E90                     	;# 
  3026  0E91                     	;# 
  3027  0E92                     	;# 
  3028  0E93                     	;# 
  3029  0E94                     	;# 
  3030  0E95                     	;# 
  3031  0E96                     	;# 
  3032  0E97                     	;# 
  3033  0E9C                     	;# 
  3034  0E9D                     	;# 
  3035  0E9E                     	;# 
  3036  0EA1                     	;# 
  3037  0EA2                     	;# 
  3038  0EA3                     	;# 
  3039  0EA4                     	;# 
  3040  0EA5                     	;# 
  3041  0EA9                     	;# 
  3042  0EAA                     	;# 
  3043  0EAB                     	;# 
  3044  0EAC                     	;# 
  3045  0EB1                     	;# 
  3046  0EB2                     	;# 
  3047  0EB3                     	;# 
  3048  0EB8                     	;# 
  3049  0EB9                     	;# 
  3050  0EBA                     	;# 
  3051  0EBB                     	;# 
  3052  0EBC                     	;# 
  3053  0EBD                     	;# 
  3054  0EBE                     	;# 
  3055  0EC3                     	;# 
  3056  0EC5                     	;# 
  3057  0EC6                     	;# 
  3058  0EC7                     	;# 
  3059  0EC8                     	;# 
  3060  0EC9                     	;# 
  3061  0ECA                     	;# 
  3062  0ECB                     	;# 
  3063  0ECC                     	;# 
  3064  0F10                     	;# 
  3065  0F11                     	;# 
  3066  0F12                     	;# 
  3067  0F13                     	;# 
  3068  0F14                     	;# 
  3069  0F15                     	;# 
  3070  0F16                     	;# 
  3071  0F17                     	;# 
  3072  0F18                     	;# 
  3073  0F19                     	;# 
  3074  0F1A                     	;# 
  3075  0F1B                     	;# 
  3076  0F1C                     	;# 
  3077  0F1D                     	;# 
  3078  0F1E                     	;# 
  3079  0F1F                     	;# 
  3080  0F20                     	;# 
  3081  0F21                     	;# 
  3082  0F22                     	;# 
  3083  0F23                     	;# 
  3084  0F24                     	;# 
  3085  0F25                     	;# 
  3086  0F26                     	;# 
  3087  0F27                     	;# 
  3088  0F38                     	;# 
  3089  0F39                     	;# 
  3090  0F3A                     	;# 
  3091  0F3B                     	;# 
  3092  0F3C                     	;# 
  3093  0F3D                     	;# 
  3094  0F3E                     	;# 
  3095  0F3F                     	;# 
  3096  0F40                     	;# 
  3097  0F41                     	;# 
  3098  0F43                     	;# 
  3099  0F44                     	;# 
  3100  0F45                     	;# 
  3101  0F46                     	;# 
  3102  0F47                     	;# 
  3103  0F48                     	;# 
  3104  0F49                     	;# 
  3105  0F4A                     	;# 
  3106  0F4B                     	;# 
  3107  0F4C                     	;# 
  3108  0F4E                     	;# 
  3109  0F4F                     	;# 
  3110  0F50                     	;# 
  3111  0F51                     	;# 
  3112  0F52                     	;# 
  3113  0F53                     	;# 
  3114  0F54                     	;# 
  3115  0F55                     	;# 
  3116  0F56                     	;# 
  3117  0F57                     	;# 
  3118  0F65                     	;# 
  3119  0F68                     	;# 
  3120  0F69                     	;# 
  3121  0F6A                     	;# 
  3122  0F6B                     	;# 
  3123  0FE4                     	;# 
  3124  0FE5                     	;# 
  3125  0FE6                     	;# 
  3126  0FE7                     	;# 
  3127  0FE8                     	;# 
  3128  0FE9                     	;# 
  3129  0FEA                     	;# 
  3130  0FEB                     	;# 
  3131  0FED                     	;# 
  3132  0FEE                     	;# 
  3133  0FEF                     	;# 
  3134  0000                     	;# 
  3135  0001                     	;# 
  3136  0002                     	;# 
  3137  0003                     	;# 
  3138  0004                     	;# 
  3139  0005                     	;# 
  3140  0006                     	;# 
  3141  0007                     	;# 
  3142  0008                     	;# 
  3143  0009                     	;# 
  3144  000A                     	;# 
  3145  000B                     	;# 
  3146  000C                     	;# 
  3147  000D                     	;# 
  3148  000E                     	;# 
  3149  0010                     	;# 
  3150  0011                     	;# 
  3151  0012                     	;# 
  3152  0013                     	;# 
  3153  0016                     	;# 
  3154  0017                     	;# 
  3155  0018                     	;# 
  3156  001C                     	;# 
  3157  001C                     	;# 
  3158  001D                     	;# 
  3159  001D                     	;# 
  3160  001E                     	;# 
  3161  001F                     	;# 
  3162  008C                     	;# 
  3163  008C                     	;# 
  3164  008D                     	;# 
  3165  008E                     	;# 
  3166  008E                     	;# 
  3167  008F                     	;# 
  3168  0090                     	;# 
  3169  0090                     	;# 
  3170  0091                     	;# 
  3171  0093                     	;# 
  3172  0094                     	;# 
  3173  0095                     	;# 
  3174  0096                     	;# 
  3175  0097                     	;# 
  3176  0098                     	;# 
  3177  0099                     	;# 
  3178  009A                     	;# 
  3179  009B                     	;# 
  3180  009C                     	;# 
  3181  009D                     	;# 
  3182  009E                     	;# 
  3183  010C                     	;# 
  3184  010D                     	;# 
  3185  010E                     	;# 
  3186  010E                     	;# 
  3187  010F                     	;# 
  3188  0110                     	;# 
  3189  0110                     	;# 
  3190  0111                     	;# 
  3191  0112                     	;# 
  3192  0112                     	;# 
  3193  0113                     	;# 
  3194  0114                     	;# 
  3195  0114                     	;# 
  3196  0115                     	;# 
  3197  0116                     	;# 
  3198  0116                     	;# 
  3199  0117                     	;# 
  3200  0119                     	;# 
  3201  0119                     	;# 
  3202  0119                     	;# 
  3203  011A                     	;# 
  3204  011A                     	;# 
  3205  011A                     	;# 
  3206  011B                     	;# 
  3207  011B                     	;# 
  3208  011B                     	;# 
  3209  011B                     	;# 
  3210  011B                     	;# 
  3211  011C                     	;# 
  3212  011C                     	;# 
  3213  011C                     	;# 
  3214  011D                     	;# 
  3215  011D                     	;# 
  3216  011D                     	;# 
  3217  011E                     	;# 
  3218  011E                     	;# 
  3219  011E                     	;# 
  3220  011F                     	;# 
  3221  011F                     	;# 
  3222  011F                     	;# 
  3223  011F                     	;# 
  3224  011F                     	;# 
  3225  018C                     	;# 
  3226  018D                     	;# 
  3227  018E                     	;# 
  3228  018F                     	;# 
  3229  0190                     	;# 
  3230  0191                     	;# 
  3231  0192                     	;# 
  3232  0196                     	;# 
  3233  0197                     	;# 
  3234  0198                     	;# 
  3235  0199                     	;# 
  3236  019A                     	;# 
  3237  019B                     	;# 
  3238  019C                     	;# 
  3239  020C                     	;# 
  3240  020D                     	;# 
  3241  020E                     	;# 
  3242  020F                     	;# 
  3243  020F                     	;# 
  3244  0210                     	;# 
  3245  0210                     	;# 
  3246  0211                     	;# 
  3247  0211                     	;# 
  3248  0212                     	;# 
  3249  0213                     	;# 
  3250  0214                     	;# 
  3251  0215                     	;# 
  3252  0215                     	;# 
  3253  0216                     	;# 
  3254  0216                     	;# 
  3255  0217                     	;# 
  3256  0217                     	;# 
  3257  0218                     	;# 
  3258  0219                     	;# 
  3259  021A                     	;# 
  3260  021B                     	;# 
  3261  021B                     	;# 
  3262  021C                     	;# 
  3263  021C                     	;# 
  3264  021D                     	;# 
  3265  021D                     	;# 
  3266  021E                     	;# 
  3267  021F                     	;# 
  3268  028C                     	;# 
  3269  028C                     	;# 
  3270  028D                     	;# 
  3271  028D                     	;# 
  3272  028E                     	;# 
  3273  028F                     	;# 
  3274  0290                     	;# 
  3275  0290                     	;# 
  3276  0291                     	;# 
  3277  0292                     	;# 
  3278  0292                     	;# 
  3279  0293                     	;# 
  3280  0293                     	;# 
  3281  0294                     	;# 
  3282  0295                     	;# 
  3283  0296                     	;# 
  3284  0296                     	;# 
  3285  0297                     	;# 
  3286  0298                     	;# 
  3287  0298                     	;# 
  3288  0299                     	;# 
  3289  0299                     	;# 
  3290  029A                     	;# 
  3291  029B                     	;# 
  3292  029C                     	;# 
  3293  029C                     	;# 
  3294  029D                     	;# 
  3295  030C                     	;# 
  3296  030C                     	;# 
  3297  030D                     	;# 
  3298  030E                     	;# 
  3299  030F                     	;# 
  3300  0310                     	;# 
  3301  0310                     	;# 
  3302  0311                     	;# 
  3303  0312                     	;# 
  3304  0313                     	;# 
  3305  0314                     	;# 
  3306  0314                     	;# 
  3307  0315                     	;# 
  3308  0316                     	;# 
  3309  0317                     	;# 
  3310  0318                     	;# 
  3311  0318                     	;# 
  3312  0319                     	;# 
  3313  031A                     	;# 
  3314  031B                     	;# 
  3315  031C                     	;# 
  3316  031C                     	;# 
  3317  031D                     	;# 
  3318  031E                     	;# 
  3319  031F                     	;# 
  3320  038C                     	;# 
  3321  038D                     	;# 
  3322  038E                     	;# 
  3323  0390                     	;# 
  3324  0391                     	;# 
  3325  0392                     	;# 
  3326  040C                     	;# 
  3327  040D                     	;# 
  3328  040E                     	;# 
  3329  040F                     	;# 
  3330  0410                     	;# 
  3331  0411                     	;# 
  3332  0416                     	;# 
  3333  0416                     	;# 
  3334  0417                     	;# 
  3335  0418                     	;# 
  3336  0418                     	;# 
  3337  0419                     	;# 
  3338  041A                     	;# 
  3339  041A                     	;# 
  3340  041B                     	;# 
  3341  041C                     	;# 
  3342  041C                     	;# 
  3343  041D                     	;# 
  3344  041E                     	;# 
  3345  041F                     	;# 
  3346  048C                     	;# 
  3347  048C                     	;# 
  3348  048D                     	;# 
  3349  048E                     	;# 
  3350  048F                     	;# 
  3351  048F                     	;# 
  3352  0490                     	;# 
  3353  0491                     	;# 
  3354  0492                     	;# 
  3355  0492                     	;# 
  3356  0493                     	;# 
  3357  0494                     	;# 
  3358  0495                     	;# 
  3359  0495                     	;# 
  3360  0496                     	;# 
  3361  0497                     	;# 
  3362  0498                     	;# 
  3363  0499                     	;# 
  3364  049A                     	;# 
  3365  049B                     	;# 
  3366  049C                     	;# 
  3367  049D                     	;# 
  3368  050C                     	;# 
  3369  050C                     	;# 
  3370  050D                     	;# 
  3371  050E                     	;# 
  3372  050F                     	;# 
  3373  050F                     	;# 
  3374  0510                     	;# 
  3375  0511                     	;# 
  3376  0512                     	;# 
  3377  0512                     	;# 
  3378  0513                     	;# 
  3379  0514                     	;# 
  3380  0515                     	;# 
  3381  0515                     	;# 
  3382  0516                     	;# 
  3383  0517                     	;# 
  3384  0518                     	;# 
  3385  0519                     	;# 
  3386  051A                     	;# 
  3387  051B                     	;# 
  3388  051C                     	;# 
  3389  051D                     	;# 
  3390  058C                     	;# 
  3391  058C                     	;# 
  3392  058D                     	;# 
  3393  058E                     	;# 
  3394  058F                     	;# 
  3395  058F                     	;# 
  3396  0590                     	;# 
  3397  0591                     	;# 
  3398  0592                     	;# 
  3399  0593                     	;# 
  3400  060C                     	;# 
  3401  060D                     	;# 
  3402  060E                     	;# 
  3403  060F                     	;# 
  3404  0610                     	;# 
  3405  0611                     	;# 
  3406  0612                     	;# 
  3407  0613                     	;# 
  3408  0614                     	;# 
  3409  0616                     	;# 
  3410  0617                     	;# 
  3411  0618                     	;# 
  3412  0619                     	;# 
  3413  061A                     	;# 
  3414  061B                     	;# 
  3415  061C                     	;# 
  3416  061D                     	;# 
  3417  061E                     	;# 
  3418  068C                     	;# 
  3419  068D                     	;# 
  3420  068E                     	;# 
  3421  068F                     	;# 
  3422  0690                     	;# 
  3423  0691                     	;# 
  3424  0692                     	;# 
  3425  0693                     	;# 
  3426  0694                     	;# 
  3427  070C                     	;# 
  3428  070D                     	;# 
  3429  070E                     	;# 
  3430  070F                     	;# 
  3431  0710                     	;# 
  3432  0711                     	;# 
  3433  0712                     	;# 
  3434  0713                     	;# 
  3435  0714                     	;# 
  3436  0716                     	;# 
  3437  0717                     	;# 
  3438  0718                     	;# 
  3439  0719                     	;# 
  3440  071A                     	;# 
  3441  071B                     	;# 
  3442  071C                     	;# 
  3443  071D                     	;# 
  3444  071E                     	;# 
  3445  0796                     	;# 
  3446  0797                     	;# 
  3447  0798                     	;# 
  3448  0799                     	;# 
  3449  079A                     	;# 
  3450  079B                     	;# 
  3451  080C                     	;# 
  3452  080D                     	;# 
  3453  080E                     	;# 
  3454  080F                     	;# 
  3455  0810                     	;# 
  3456  0811                     	;# 
  3457  0812                     	;# 
  3458  0813                     	;# 
  3459  0814                     	;# 
  3460  081A                     	;# 
  3461  081B                     	;# 
  3462  081C                     	;# 
  3463  081D                     	;# 
  3464  081E                     	;# 
  3465  081F                     	;# 
  3466  088C                     	;# 
  3467  088D                     	;# 
  3468  088E                     	;# 
  3469  088F                     	;# 
  3470  0890                     	;# 
  3471  0891                     	;# 
  3472  0892                     	;# 
  3473  0893                     	;# 
  3474  0895                     	;# 
  3475  0896                     	;# 
  3476  0897                     	;# 
  3477  0898                     	;# 
  3478  0899                     	;# 
  3479  089A                     	;# 
  3480  089B                     	;# 
  3481  090C                     	;# 
  3482  090E                     	;# 
  3483  090F                     	;# 
  3484  091F                     	;# 
  3485  091F                     	;# 
  3486  098F                     	;# 
  3487  098F                     	;# 
  3488  0990                     	;# 
  3489  0991                     	;# 
  3490  0992                     	;# 
  3491  0993                     	;# 
  3492  0994                     	;# 
  3493  0995                     	;# 
  3494  0996                     	;# 
  3495  0997                     	;# 
  3496  0E0F                     	;# 
  3497  0E10                     	;# 
  3498  0E11                     	;# 
  3499  0E12                     	;# 
  3500  0E13                     	;# 
  3501  0E14                     	;# 
  3502  0E15                     	;# 
  3503  0E16                     	;# 
  3504  0E17                     	;# 
  3505  0E18                     	;# 
  3506  0E19                     	;# 
  3507  0E1A                     	;# 
  3508  0E1B                     	;# 
  3509  0E1C                     	;# 
  3510  0E1D                     	;# 
  3511  0E1E                     	;# 
  3512  0E1F                     	;# 
  3513  0E20                     	;# 
  3514  0E21                     	;# 
  3515  0E22                     	;# 
  3516  0E23                     	;# 
  3517  0E24                     	;# 
  3518  0E25                     	;# 
  3519  0E26                     	;# 
  3520  0E27                     	;# 
  3521  0E28                     	;# 
  3522  0E29                     	;# 
  3523  0E2A                     	;# 
  3524  0E2B                     	;# 
  3525  0E2C                     	;# 
  3526  0E2D                     	;# 
  3527  0E2E                     	;# 
  3528  0E2F                     	;# 
  3529  0E30                     	;# 
  3530  0E31                     	;# 
  3531  0E32                     	;# 
  3532  0E33                     	;# 
  3533  0E34                     	;# 
  3534  0E35                     	;# 
  3535  0E36                     	;# 
  3536  0E37                     	;# 
  3537  0E8F                     	;# 
  3538  0E90                     	;# 
  3539  0E91                     	;# 
  3540  0E92                     	;# 
  3541  0E93                     	;# 
  3542  0E94                     	;# 
  3543  0E95                     	;# 
  3544  0E96                     	;# 
  3545  0E97                     	;# 
  3546  0E9C                     	;# 
  3547  0E9D                     	;# 
  3548  0E9E                     	;# 
  3549  0EA1                     	;# 
  3550  0EA2                     	;# 
  3551  0EA3                     	;# 
  3552  0EA4                     	;# 
  3553  0EA5                     	;# 
  3554  0EA9                     	;# 
  3555  0EAA                     	;# 
  3556  0EAB                     	;# 
  3557  0EAC                     	;# 
  3558  0EB1                     	;# 
  3559  0EB2                     	;# 
  3560  0EB3                     	;# 
  3561  0EB8                     	;# 
  3562  0EB9                     	;# 
  3563  0EBA                     	;# 
  3564  0EBB                     	;# 
  3565  0EBC                     	;# 
  3566  0EBD                     	;# 
  3567  0EBE                     	;# 
  3568  0EC3                     	;# 
  3569  0EC5                     	;# 
  3570  0EC6                     	;# 
  3571  0EC7                     	;# 
  3572  0EC8                     	;# 
  3573  0EC9                     	;# 
  3574  0ECA                     	;# 
  3575  0ECB                     	;# 
  3576  0ECC                     	;# 
  3577  0F10                     	;# 
  3578  0F11                     	;# 
  3579  0F12                     	;# 
  3580  0F13                     	;# 
  3581  0F14                     	;# 
  3582  0F15                     	;# 
  3583  0F16                     	;# 
  3584  0F17                     	;# 
  3585  0F18                     	;# 
  3586  0F19                     	;# 
  3587  0F1A                     	;# 
  3588  0F1B                     	;# 
  3589  0F1C                     	;# 
  3590  0F1D                     	;# 
  3591  0F1E                     	;# 
  3592  0F1F                     	;# 
  3593  0F20                     	;# 
  3594  0F21                     	;# 
  3595  0F22                     	;# 
  3596  0F23                     	;# 
  3597  0F24                     	;# 
  3598  0F25                     	;# 
  3599  0F26                     	;# 
  3600  0F27                     	;# 
  3601  0F38                     	;# 
  3602  0F39                     	;# 
  3603  0F3A                     	;# 
  3604  0F3B                     	;# 
  3605  0F3C                     	;# 
  3606  0F3D                     	;# 
  3607  0F3E                     	;# 
  3608  0F3F                     	;# 
  3609  0F40                     	;# 
  3610  0F41                     	;# 
  3611  0F43                     	;# 
  3612  0F44                     	;# 
  3613  0F45                     	;# 
  3614  0F46                     	;# 
  3615  0F47                     	;# 
  3616  0F48                     	;# 
  3617  0F49                     	;# 
  3618  0F4A                     	;# 
  3619  0F4B                     	;# 
  3620  0F4C                     	;# 
  3621  0F4E                     	;# 
  3622  0F4F                     	;# 
  3623  0F50                     	;# 
  3624  0F51                     	;# 
  3625  0F52                     	;# 
  3626  0F53                     	;# 
  3627  0F54                     	;# 
  3628  0F55                     	;# 
  3629  0F56                     	;# 
  3630  0F57                     	;# 
  3631  0F65                     	;# 
  3632  0F68                     	;# 
  3633  0F69                     	;# 
  3634  0F6A                     	;# 
  3635  0F6B                     	;# 
  3636  0FE4                     	;# 
  3637  0FE5                     	;# 
  3638  0FE6                     	;# 
  3639  0FE7                     	;# 
  3640  0FE8                     	;# 
  3641  0FE9                     	;# 
  3642  0FEA                     	;# 
  3643  0FEB                     	;# 
  3644  0FED                     	;# 
  3645  0FEE                     	;# 
  3646  0FEF                     	;# 
  3647  0000                     	;# 
  3648  0001                     	;# 
  3649  0002                     	;# 
  3650  0003                     	;# 
  3651  0004                     	;# 
  3652  0005                     	;# 
  3653  0006                     	;# 
  3654  0007                     	;# 
  3655  0008                     	;# 
  3656  0009                     	;# 
  3657  000A                     	;# 
  3658  000B                     	;# 
  3659  000C                     	;# 
  3660  000D                     	;# 
  3661  000E                     	;# 
  3662  0010                     	;# 
  3663  0011                     	;# 
  3664  0012                     	;# 
  3665  0013                     	;# 
  3666  0016                     	;# 
  3667  0017                     	;# 
  3668  0018                     	;# 
  3669  001C                     	;# 
  3670  001C                     	;# 
  3671  001D                     	;# 
  3672  001D                     	;# 
  3673  001E                     	;# 
  3674  001F                     	;# 
  3675  008C                     	;# 
  3676  008C                     	;# 
  3677  008D                     	;# 
  3678  008E                     	;# 
  3679  008E                     	;# 
  3680  008F                     	;# 
  3681  0090                     	;# 
  3682  0090                     	;# 
  3683  0091                     	;# 
  3684  0093                     	;# 
  3685  0094                     	;# 
  3686  0095                     	;# 
  3687  0096                     	;# 
  3688  0097                     	;# 
  3689  0098                     	;# 
  3690  0099                     	;# 
  3691  009A                     	;# 
  3692  009B                     	;# 
  3693  009C                     	;# 
  3694  009D                     	;# 
  3695  009E                     	;# 
  3696  010C                     	;# 
  3697  010D                     	;# 
  3698  010E                     	;# 
  3699  010E                     	;# 
  3700  010F                     	;# 
  3701  0110                     	;# 
  3702  0110                     	;# 
  3703  0111                     	;# 
  3704  0112                     	;# 
  3705  0112                     	;# 
  3706  0113                     	;# 
  3707  0114                     	;# 
  3708  0114                     	;# 
  3709  0115                     	;# 
  3710  0116                     	;# 
  3711  0116                     	;# 
  3712  0117                     	;# 
  3713  0119                     	;# 
  3714  0119                     	;# 
  3715  0119                     	;# 
  3716  011A                     	;# 
  3717  011A                     	;# 
  3718  011A                     	;# 
  3719  011B                     	;# 
  3720  011B                     	;# 
  3721  011B                     	;# 
  3722  011B                     	;# 
  3723  011B                     	;# 
  3724  011C                     	;# 
  3725  011C                     	;# 
  3726  011C                     	;# 
  3727  011D                     	;# 
  3728  011D                     	;# 
  3729  011D                     	;# 
  3730  011E                     	;# 
  3731  011E                     	;# 
  3732  011E                     	;# 
  3733  011F                     	;# 
  3734  011F                     	;# 
  3735  011F                     	;# 
  3736  011F                     	;# 
  3737  011F                     	;# 
  3738  018C                     	;# 
  3739  018D                     	;# 
  3740  018E                     	;# 
  3741  018F                     	;# 
  3742  0190                     	;# 
  3743  0191                     	;# 
  3744  0192                     	;# 
  3745  0196                     	;# 
  3746  0197                     	;# 
  3747  0198                     	;# 
  3748  0199                     	;# 
  3749  019A                     	;# 
  3750  019B                     	;# 
  3751  019C                     	;# 
  3752  020C                     	;# 
  3753  020D                     	;# 
  3754  020E                     	;# 
  3755  020F                     	;# 
  3756  020F                     	;# 
  3757  0210                     	;# 
  3758  0210                     	;# 
  3759  0211                     	;# 
  3760  0211                     	;# 
  3761  0212                     	;# 
  3762  0213                     	;# 
  3763  0214                     	;# 
  3764  0215                     	;# 
  3765  0215                     	;# 
  3766  0216                     	;# 
  3767  0216                     	;# 
  3768  0217                     	;# 
  3769  0217                     	;# 
  3770  0218                     	;# 
  3771  0219                     	;# 
  3772  021A                     	;# 
  3773  021B                     	;# 
  3774  021B                     	;# 
  3775  021C                     	;# 
  3776  021C                     	;# 
  3777  021D                     	;# 
  3778  021D                     	;# 
  3779  021E                     	;# 
  3780  021F                     	;# 
  3781  028C                     	;# 
  3782  028C                     	;# 
  3783  028D                     	;# 
  3784  028D                     	;# 
  3785  028E                     	;# 
  3786  028F                     	;# 
  3787  0290                     	;# 
  3788  0290                     	;# 
  3789  0291                     	;# 
  3790  0292                     	;# 
  3791  0292                     	;# 
  3792  0293                     	;# 
  3793  0293                     	;# 
  3794  0294                     	;# 
  3795  0295                     	;# 
  3796  0296                     	;# 
  3797  0296                     	;# 
  3798  0297                     	;# 
  3799  0298                     	;# 
  3800  0298                     	;# 
  3801  0299                     	;# 
  3802  0299                     	;# 
  3803  029A                     	;# 
  3804  029B                     	;# 
  3805  029C                     	;# 
  3806  029C                     	;# 
  3807  029D                     	;# 
  3808  030C                     	;# 
  3809  030C                     	;# 
  3810  030D                     	;# 
  3811  030E                     	;# 
  3812  030F                     	;# 
  3813  0310                     	;# 
  3814  0310                     	;# 
  3815  0311                     	;# 
  3816  0312                     	;# 
  3817  0313                     	;# 
  3818  0314                     	;# 
  3819  0314                     	;# 
  3820  0315                     	;# 
  3821  0316                     	;# 
  3822  0317                     	;# 
  3823  0318                     	;# 
  3824  0318                     	;# 
  3825  0319                     	;# 
  3826  031A                     	;# 
  3827  031B                     	;# 
  3828  031C                     	;# 
  3829  031C                     	;# 
  3830  031D                     	;# 
  3831  031E                     	;# 
  3832  031F                     	;# 
  3833  038C                     	;# 
  3834  038D                     	;# 
  3835  038E                     	;# 
  3836  0390                     	;# 
  3837  0391                     	;# 
  3838  0392                     	;# 
  3839  040C                     	;# 
  3840  040D                     	;# 
  3841  040E                     	;# 
  3842  040F                     	;# 
  3843  0410                     	;# 
  3844  0411                     	;# 
  3845  0416                     	;# 
  3846  0416                     	;# 
  3847  0417                     	;# 
  3848  0418                     	;# 
  3849  0418                     	;# 
  3850  0419                     	;# 
  3851  041A                     	;# 
  3852  041A                     	;# 
  3853  041B                     	;# 
  3854  041C                     	;# 
  3855  041C                     	;# 
  3856  041D                     	;# 
  3857  041E                     	;# 
  3858  041F                     	;# 
  3859  048C                     	;# 
  3860  048C                     	;# 
  3861  048D                     	;# 
  3862  048E                     	;# 
  3863  048F                     	;# 
  3864  048F                     	;# 
  3865  0490                     	;# 
  3866  0491                     	;# 
  3867  0492                     	;# 
  3868  0492                     	;# 
  3869  0493                     	;# 
  3870  0494                     	;# 
  3871  0495                     	;# 
  3872  0495                     	;# 
  3873  0496                     	;# 
  3874  0497                     	;# 
  3875  0498                     	;# 
  3876  0499                     	;# 
  3877  049A                     	;# 
  3878  049B                     	;# 
  3879  049C                     	;# 
  3880  049D                     	;# 
  3881  050C                     	;# 
  3882  050C                     	;# 
  3883  050D                     	;# 
  3884  050E                     	;# 
  3885  050F                     	;# 
  3886  050F                     	;# 
  3887  0510                     	;# 
  3888  0511                     	;# 
  3889  0512                     	;# 
  3890  0512                     	;# 
  3891  0513                     	;# 
  3892  0514                     	;# 
  3893  0515                     	;# 
  3894  0515                     	;# 
  3895  0516                     	;# 
  3896  0517                     	;# 
  3897  0518                     	;# 
  3898  0519                     	;# 
  3899  051A                     	;# 
  3900  051B                     	;# 
  3901  051C                     	;# 
  3902  051D                     	;# 
  3903  058C                     	;# 
  3904  058C                     	;# 
  3905  058D                     	;# 
  3906  058E                     	;# 
  3907  058F                     	;# 
  3908  058F                     	;# 
  3909  0590                     	;# 
  3910  0591                     	;# 
  3911  0592                     	;# 
  3912  0593                     	;# 
  3913  060C                     	;# 
  3914  060D                     	;# 
  3915  060E                     	;# 
  3916  060F                     	;# 
  3917  0610                     	;# 
  3918  0611                     	;# 
  3919  0612                     	;# 
  3920  0613                     	;# 
  3921  0614                     	;# 
  3922  0616                     	;# 
  3923  0617                     	;# 
  3924  0618                     	;# 
  3925  0619                     	;# 
  3926  061A                     	;# 
  3927  061B                     	;# 
  3928  061C                     	;# 
  3929  061D                     	;# 
  3930  061E                     	;# 
  3931  068C                     	;# 
  3932  068D                     	;# 
  3933  068E                     	;# 
  3934  068F                     	;# 
  3935  0690                     	;# 
  3936  0691                     	;# 
  3937  0692                     	;# 
  3938  0693                     	;# 
  3939  0694                     	;# 
  3940  070C                     	;# 
  3941  070D                     	;# 
  3942  070E                     	;# 
  3943  070F                     	;# 
  3944  0710                     	;# 
  3945  0711                     	;# 
  3946  0712                     	;# 
  3947  0713                     	;# 
  3948  0714                     	;# 
  3949  0716                     	;# 
  3950  0717                     	;# 
  3951  0718                     	;# 
  3952  0719                     	;# 
  3953  071A                     	;# 
  3954  071B                     	;# 
  3955  071C                     	;# 
  3956  071D                     	;# 
  3957  071E                     	;# 
  3958  0796                     	;# 
  3959  0797                     	;# 
  3960  0798                     	;# 
  3961  0799                     	;# 
  3962  079A                     	;# 
  3963  079B                     	;# 
  3964  080C                     	;# 
  3965  080D                     	;# 
  3966  080E                     	;# 
  3967  080F                     	;# 
  3968  0810                     	;# 
  3969  0811                     	;# 
  3970  0812                     	;# 
  3971  0813                     	;# 
  3972  0814                     	;# 
  3973  081A                     	;# 
  3974  081B                     	;# 
  3975  081C                     	;# 
  3976  081D                     	;# 
  3977  081E                     	;# 
  3978  081F                     	;# 
  3979  088C                     	;# 
  3980  088D                     	;# 
  3981  088E                     	;# 
  3982  088F                     	;# 
  3983  0890                     	;# 
  3984  0891                     	;# 
  3985  0892                     	;# 
  3986  0893                     	;# 
  3987  0895                     	;# 
  3988  0896                     	;# 
  3989  0897                     	;# 
  3990  0898                     	;# 
  3991  0899                     	;# 
  3992  089A                     	;# 
  3993  089B                     	;# 
  3994  090C                     	;# 
  3995  090E                     	;# 
  3996  090F                     	;# 
  3997  091F                     	;# 
  3998  091F                     	;# 
  3999  098F                     	;# 
  4000  098F                     	;# 
  4001  0990                     	;# 
  4002  0991                     	;# 
  4003  0992                     	;# 
  4004  0993                     	;# 
  4005  0994                     	;# 
  4006  0995                     	;# 
  4007  0996                     	;# 
  4008  0997                     	;# 
  4009  0E0F                     	;# 
  4010  0E10                     	;# 
  4011  0E11                     	;# 
  4012  0E12                     	;# 
  4013  0E13                     	;# 
  4014  0E14                     	;# 
  4015  0E15                     	;# 
  4016  0E16                     	;# 
  4017  0E17                     	;# 
  4018  0E18                     	;# 
  4019  0E19                     	;# 
  4020  0E1A                     	;# 
  4021  0E1B                     	;# 
  4022  0E1C                     	;# 
  4023  0E1D                     	;# 
  4024  0E1E                     	;# 
  4025  0E1F                     	;# 
  4026  0E20                     	;# 
  4027  0E21                     	;# 
  4028  0E22                     	;# 
  4029  0E23                     	;# 
  4030  0E24                     	;# 
  4031  0E25                     	;# 
  4032  0E26                     	;# 
  4033  0E27                     	;# 
  4034  0E28                     	;# 
  4035  0E29                     	;# 
  4036  0E2A                     	;# 
  4037  0E2B                     	;# 
  4038  0E2C                     	;# 
  4039  0E2D                     	;# 
  4040  0E2E                     	;# 
  4041  0E2F                     	;# 
  4042  0E30                     	;# 
  4043  0E31                     	;# 
  4044  0E32                     	;# 
  4045  0E33                     	;# 
  4046  0E34                     	;# 
  4047  0E35                     	;# 
  4048  0E36                     	;# 
  4049  0E37                     	;# 
  4050  0E8F                     	;# 
  4051  0E90                     	;# 
  4052  0E91                     	;# 
  4053  0E92                     	;# 
  4054  0E93                     	;# 
  4055  0E94                     	;# 
  4056  0E95                     	;# 
  4057  0E96                     	;# 
  4058  0E97                     	;# 
  4059  0E9C                     	;# 
  4060  0E9D                     	;# 
  4061  0E9E                     	;# 
  4062  0EA1                     	;# 
  4063  0EA2                     	;# 
  4064  0EA3                     	;# 
  4065  0EA4                     	;# 
  4066  0EA5                     	;# 
  4067  0EA9                     	;# 
  4068  0EAA                     	;# 
  4069  0EAB                     	;# 
  4070  0EAC                     	;# 
  4071  0EB1                     	;# 
  4072  0EB2                     	;# 
  4073  0EB3                     	;# 
  4074  0EB8                     	;# 
  4075  0EB9                     	;# 
  4076  0EBA                     	;# 
  4077  0EBB                     	;# 
  4078  0EBC                     	;# 
  4079  0EBD                     	;# 
  4080  0EBE                     	;# 
  4081  0EC3                     	;# 
  4082  0EC5                     	;# 
  4083  0EC6                     	;# 
  4084  0EC7                     	;# 
  4085  0EC8                     	;# 
  4086  0EC9                     	;# 
  4087  0ECA                     	;# 
  4088  0ECB                     	;# 
  4089  0ECC                     	;# 
  4090  0F10                     	;# 
  4091  0F11                     	;# 
  4092  0F12                     	;# 
  4093  0F13                     	;# 
  4094  0F14                     	;# 
  4095  0F15                     	;# 
  4096  0F16                     	;# 
  4097  0F17                     	;# 
  4098  0F18                     	;# 
  4099  0F19                     	;# 
  4100  0F1A                     	;# 
  4101  0F1B                     	;# 
  4102  0F1C                     	;# 
  4103  0F1D                     	;# 
  4104  0F1E                     	;# 
  4105  0F1F                     	;# 
  4106  0F20                     	;# 
  4107  0F21                     	;# 
  4108  0F22                     	;# 
  4109  0F23                     	;# 
  4110  0F24                     	;# 
  4111  0F25                     	;# 
  4112  0F26                     	;# 
  4113  0F27                     	;# 
  4114  0F38                     	;# 
  4115  0F39                     	;# 
  4116  0F3A                     	;# 
  4117  0F3B                     	;# 
  4118  0F3C                     	;# 
  4119  0F3D                     	;# 
  4120  0F3E                     	;# 
  4121  0F3F                     	;# 
  4122  0F40                     	;# 
  4123  0F41                     	;# 
  4124  0F43                     	;# 
  4125  0F44                     	;# 
  4126  0F45                     	;# 
  4127  0F46                     	;# 
  4128  0F47                     	;# 
  4129  0F48                     	;# 
  4130  0F49                     	;# 
  4131  0F4A                     	;# 
  4132  0F4B                     	;# 
  4133  0F4C                     	;# 
  4134  0F4E                     	;# 
  4135  0F4F                     	;# 
  4136  0F50                     	;# 
  4137  0F51                     	;# 
  4138  0F52                     	;# 
  4139  0F53                     	;# 
  4140  0F54                     	;# 
  4141  0F55                     	;# 
  4142  0F56                     	;# 
  4143  0F57                     	;# 
  4144  0F65                     	;# 
  4145  0F68                     	;# 
  4146  0F69                     	;# 
  4147  0F6A                     	;# 
  4148  0F6B                     	;# 
  4149  0FE4                     	;# 
  4150  0FE5                     	;# 
  4151  0FE6                     	;# 
  4152  0FE7                     	;# 
  4153  0FE8                     	;# 
  4154  0FE9                     	;# 
  4155  0FEA                     	;# 
  4156  0FEB                     	;# 
  4157  0FED                     	;# 
  4158  0FEE                     	;# 
  4159  0FEF                     	;_samples
  4160                           
  4161                           	psect	idataBANK1
  4162  0BBE                     __pidataBANK1:	
  4163                           
  4164                           ;initializer for _channels
  4165  0BBE  3401               	retlw	1
  4166  0BBF  3400               	retlw	0
  4167  0BC0  3403               	retlw	3
  4168  0BC1  3400               	retlw	0
  4169  0BC2  3404               	retlw	4
  4170  0BC3  3400               	retlw	0
  4171  0BC4  3405               	retlw	5
  4172  0BC5  3400               	retlw	0
  4173  0BC6  3409               	retlw	9
  4174  0BC7  3400               	retlw	0
  4175  0BC8  340B               	retlw	11
  4176  0BC9  3400               	retlw	0
  4177                           
  4178                           	psect	idataBANK2
  4179  0C1A                     __pidataBANK2:	
  4180                           
  4181                           ;initializer for ___cgram
  4182  0C1A  340C               	retlw	12
  4183  0C1B  3412               	retlw	18
  4184  0C1C  3412               	retlw	18
  4185  0C1D  340C               	retlw	12
  4186  0C1E  3400               	retlw	0
  4187  0C1F  3400               	retlw	0
  4188  0C20  3400               	retlw	0
  4189  0C21  3400               	retlw	0
  4190  0C22  340A               	retlw	10
  4191  0C23  3415               	retlw	21
  4192  0C24  3411               	retlw	17
  4193  0C25  340A               	retlw	10
  4194  0C26  3404               	retlw	4
  4195  0C27  3400               	retlw	0
  4196  0C28  3400               	retlw	0
  4197  0C29  3400               	retlw	0
  4198  0C2A  340A               	retlw	10
  4199  0C2B  341F               	retlw	31
  4200  0C2C  341F               	retlw	31
  4201  0C2D  340E               	retlw	14
  4202  0C2E  3404               	retlw	4
  4203  0C2F  3400               	retlw	0
  4204  0C30  3400               	retlw	0
  4205  0C31  3400               	retlw	0
  4206                           
  4207                           	psect	stringtext
  4208  1000                     __pstringtext:	
  4209  1000                     log@coeff:	
  4210  1000  3400               	retlw	0
  4211  1001  3400               	retlw	0
  4212  1002  3400               	retlw	0
  4213  1003  3400               	retlw	0
  4214  1004  3480               	retlw	128
  4215  1005  343F               	retlw	63
  4216  1006  34F0               	retlw	240
  4217  1007  34FF               	retlw	255
  4218  1008  34BE               	retlw	190
  4219  1009  34E2               	retlw	226
  4220  100A  34A9               	retlw	169
  4221  100B  343E               	retlw	62
  4222  100C  3483               	retlw	131
  4223  100D  3476               	retlw	118
  4224  100E  34BE               	retlw	190
  4225  100F  34AE               	retlw	174
  4226  1010  342B               	retlw	43
  4227  1011  343E               	retlw	62
  4228  1012  343C               	retlw	60
  4229  1013  34C3               	retlw	195
  4230  1014  34BD               	retlw	189
  4231  1015  34D2               	retlw	210
  4232  1016  3413               	retlw	19
  4233  1017  343D               	retlw	61
  4234  1018  3478               	retlw	120
  4235  1019  34D3               	retlw	211
  4236  101A  34BB               	retlw	187
  4237  101B                     __end_oflog@coeff:	
  4238  0016                     _LATA	set	22
  4239  0017                     _LATB	set	23
  4240  0018                     _LATC	set	24
  4241  0011                     _TRISA	set	17
  4242  0012                     _TRISB	set	18
  4243  0013                     _TRISC	set	19
  4244  005F                     _GIE	set	95
  4245  0060                     _RA0	set	96
  4246  0062                     _RA2	set	98
  4247  0066                     _RA6	set	102
  4248  0067                     _RA7	set	103
  4249  0070                     _RC0	set	112
  4250  0071                     _RC1	set	113
  4251  009D                     _ADACQ	set	157
  4252  0099                     _ADACT	set	153
  4253  009B                     _ADCAP	set	155
  4254  0098                     _ADCLK	set	152
  4255  0093                     _ADCON0	set	147
  4256  0093                     _ADCON0bits	set	147
  4257  0094                     _ADCON1	set	148
  4258  0095                     _ADCON2	set	149
  4259  0096                     _ADCON3	set	150
  4260  009E                     _ADPCH	set	158
  4261  009C                     _ADPRE	set	156
  4262  009A                     _ADREF	set	154
  4263  008D                     _ADRESH	set	141
  4264  008C                     _ADRESL	set	140
  4265  0097                     _ADSTAT	set	151
  4266  010F                     _ADLTHH	set	271
  4267  010E                     _ADLTHL	set	270
  4268  010D                     _ADRPT	set	269
  4269  0113                     _ADSTPTH	set	275
  4270  0112                     _ADSTPTL	set	274
  4271  0111                     _ADUTHH	set	273
  4272  0110                     _ADUTHL	set	272
  4273  021F                     _CCPTMRS1bits	set	543
  4274  0290                     _T2CLKCON	set	656
  4275  028E                     _T2CON	set	654
  4276  028E                     _T2CONbits	set	654
  4277  028F                     _T2HLT	set	655
  4278  028D                     _T2PR	set	653
  4279  0291                     _T2RST	set	657
  4280  028C                     _T2TMR	set	652
  4281  038E                     _PWM6CON	set	910
  4282  038D                     _PWM6DCH	set	909
  4283  038C                     _PWM6DCL	set	908
  4284  0716                     _PIE0bits	set	1814
  4285  0710                     _PIR4bits	set	1808
  4286  088D                     _OSCCON1	set	2189
  4287  088F                     _OSCCON3	set	2191
  4288  0891                     _OSCEN	set	2193
  4289  0893                     _OSCFRQ	set	2195
  4290  0892                     _OSCTUNE	set	2194
  4291  090C                     _FVRCON	set	2316
  4292  0E8F                     _PPSLOCK	set	3727
  4293  0E8F                     _PPSLOCKbits	set	3727
  4294  0F38                     _ANSELA	set	3896
  4295  0F43                     _ANSELB	set	3907
  4296  0F4E                     _ANSELC	set	3918
  4297  0F22                     _RC2PPS	set	3874
  4298  0F39                     _WPUA	set	3897
  4299  0F44                     _WPUB	set	3908
  4300  0F4F                     _WPUC	set	3919
  4301  0F65                     _WPUE	set	3941
  4302                           
  4303                           ; #config settings
  4304  0000                     
  4305                           	psect	cinit
  4306  07C8                     start_initialization:	
  4307  07C8                     __initialization:		;BIGRAM
  4308                           
  4309                           ; Initialize objects allocated to BANK1
  4310  07C8  30BE               	movlw	low __pidataBANK1
  4311  07C9  0084               	movwf	4
  4312  07CA  308B               	movlw	(high __pidataBANK1)| (0+128)
  4313  07CB  0085               	movwf	5
  4314  07CC  30DF               	movlw	low __pdataBANK1
  4315  07CD  0086               	movwf	6
  4316  07CE  3000               	movlw	high __pdataBANK1
  4317  07CF  0087               	movwf	7
  4318  07D0  3000               	movlw	0
  4319  07D1  00FF               	movwf	btemp+1
  4320  07D2  300C               	movlw	12
  4321  07D3  318B  23B2  3187   	fcall	init_ram
  4322                           
  4323                           ; Initialize objects allocated to BANK2
  4324  07D6  301A               	movlw	low __pidataBANK2
  4325  07D7  0084               	movwf	4
  4326  07D8  308C               	movlw	(high __pidataBANK2)| (0+128)
  4327  07D9  0085               	movwf	5
  4328  07DA  3020               	movlw	low __pdataBANK2
  4329  07DB  0086               	movwf	6
  4330  07DC  3001               	movlw	high __pdataBANK2
  4331  07DD  0087               	movwf	7
  4332  07DE  3000               	movlw	0
  4333  07DF  00FF               	movwf	btemp+1
  4334  07E0  3018               	movlw	24
  4335  07E1  318B  23B2  3187   	fcall	init_ram
  4336                           
  4337                           ; Clear objects allocated to BIGRAM
  4338  07E4  3000               	movlw	low (0+8960)
  4339  07E5  0084               	movwf	4
  4340  07E6  3023               	movlw	high (0+8960)
  4341  07E7  0085               	movwf	5
  4342  07E8  30F0               	movlw	240
  4343  07E9  00FE               	movwf	btemp
  4344  07EA  3000               	movlw	0
  4345  07EB  00FF               	movwf	btemp+1
  4346  07EC  318B  23A6  3187   	fcall	clear_ram0
  4347                           
  4348                           ; Clear objects allocated to BANK0
  4349  07EF  01EC               	clrf	__pbssBANK0& (0+127)
  4350  07F0  01ED               	clrf	(__pbssBANK0+1)& (0+127)
  4351  07F1  01EE               	clrf	(__pbssBANK0+2)& (0+127)
  4352  07F2  01EF               	clrf	(__pbssBANK0+3)& (0+127)
  4353                           
  4354                           ; Clear objects allocated to BANK1
  4355  07F3  30A0               	movlw	low __pbssBANK1
  4356  07F4  0084               	movwf	4
  4357  07F5  3000               	movlw	high __pbssBANK1
  4358  07F6  0085               	movwf	5
  4359  07F7  3029               	movlw	41
  4360  07F8  00FE               	movwf	btemp
  4361  07F9  3000               	movlw	0
  4362  07FA  00FF               	movwf	btemp+1
  4363  07FB  318B  23A6         	fcall	clear_ram0
  4364  07FD                     end_of_initialization:	
  4365                           ;End of C runtime variable initialization code
  4366                           
  4367  07FD                     __end_of__initialization:	
  4368  07FD  0020               	movlb	0
  4369  07FE  3185  2D7B         	ljmp	_main	;jump to C main() function
  4370                           
  4371                           	psect	bssBANK0
  4372  006C                     __pbssBANK0:	
  4373  006C                     _errno:	
  4374  006C                     	ds	2
  4375  006E                     _sampleIndex:	
  4376  006E                     	ds	2
  4377                           
  4378                           	psect	bssBANK1
  4379  00A0                     __pbssBANK1:	
  4380  00A0                     _totals:	
  4381  00A0                     	ds	24
  4382  00B8                     main@F13657:	
  4383  00B8                     	ds	12
  4384  00C4                     LCD_Write_Int@F13687:	
  4385  00C4                     	ds	5
  4386                           
  4387                           	psect	dataBANK1
  4388  00DF                     __pdataBANK1:	
  4389  00DF                     _channels:	
  4390  00DF                     	ds	12
  4391                           
  4392                           	psect	dataBANK2
  4393  0120                     __pdataBANK2:	
  4394  0120                     ___cgram:	
  4395  0120                     	ds	24
  4396                           
  4397                           	psect	inittext
  4398  0BB2                     init_ram:	
  4399  0BB2  00FE               	movwf	126
  4400  0BB3                     initloop:	
  4401  0BB3  0012               	moviw fsr0++
  4402  0BB4  001E               	movwi fsr1++
  4403  0BB5  3001               	movlw	1
  4404  0BB6  02FE               	subwf	126,f
  4405  0BB7  3000               	movlw	0
  4406  0BB8  3BFF               	subwfb	127,f
  4407  0BB9  087F               	movf	127,w
  4408  0BBA  047E               	iorwf	126,w
  4409  0BBB  1903               	btfsc	3,2
  4410  0BBC  3400               	retlw	0
  4411  0BBD  2BB3               	goto	initloop
  4412                           
  4413                           	psect	clrtext
  4414  0BA6                     clear_ram0:	
  4415                           ;	Called with FSR0 containing the base address, and
  4416                           ;	btemp/btemp+1 has the size to clear
  4417                           
  4418  0BA6  0064               	clrwdt	;clear the watchdog before getting into this loop
  4419  0BA7                     clrloop0:	
  4420  0BA7  0180               	clrf	0	;clear RAM location pointed to by FSR
  4421  0BA8  3101               	addfsr 0,1
  4422  0BA9  3001               	movlw	1
  4423  0BAA  02FE               	subwf	126,f
  4424  0BAB  3000               	movlw	0
  4425  0BAC  3BFF               	subwfb	127,f
  4426  0BAD  087F               	movf	127,w
  4427  0BAE  047E               	iorwf	126,w
  4428  0BAF  1903               	btfsc	3,2
  4429  0BB0  3400               	retlw	0	;all done for this memory range, return
  4430  0BB1  2BA7               	goto	clrloop0	;have we reached the end yet?
  4431                           
  4432                           	psect	cstackBANK1
  4433  00C9                     __pcstackBANK1:	
  4434  00C9                     main@displayTemp:	
  4435                           
  4436                           ; 3 bytes @ 0x0
  4437  00C9                     	ds	3
  4438  00CC                     main@displayTemp2:	
  4439                           
  4440                           ; 3 bytes @ 0x3
  4441  00CC                     	ds	3
  4442  00CF                     main@analogs:	
  4443                           
  4444                           ; 12 bytes @ 0x6
  4445  00CF                     	ds	12
  4446  00DB                     main@count:	
  4447                           
  4448                           ; 1 bytes @ 0x12
  4449  00DB                     	ds	1
  4450  00DC                     main@dutyCycle:	
  4451                           
  4452                           ; 2 bytes @ 0x13
  4453  00DC                     	ds	2
  4454  00DE                     main@x:	
  4455                           
  4456                           ; 1 bytes @ 0x15
  4457  00DE                     	ds	1
  4458                           
  4459                           	psect	cstackCOMMON
  4460  0070                     __pcstackCOMMON:	
  4461  0070                     ?___ftge:	
  4462  0070                     ?_LCD_Cmd:	
  4463                           ; 1 bit 
  4464                           
  4465  0070                     ?_LCD_Write_Char:	
  4466                           ; 1 bytes @ 0x0
  4467                           
  4468  0070                     ?_OSCILLATOR_Initialize:	
  4469                           ; 1 bytes @ 0x0
  4470                           
  4471  0070                     ??_OSCILLATOR_Initialize:	
  4472                           ; 1 bytes @ 0x0
  4473                           
  4474  0070                     ?_PWM6_Initialize:	
  4475                           ; 1 bytes @ 0x0
  4476                           
  4477  0070                     ??_PWM6_Initialize:	
  4478                           ; 1 bytes @ 0x0
  4479                           
  4480  0070                     ?_TMR2_Initialize:	
  4481                           ; 1 bytes @ 0x0
  4482                           
  4483  0070                     ??_TMR2_Initialize:	
  4484                           ; 1 bytes @ 0x0
  4485                           
  4486  0070                     ?_ADCC_Initialize:	
  4487                           ; 1 bytes @ 0x0
  4488                           
  4489  0070                     ??_ADCC_Initialize:	
  4490                           ; 1 bytes @ 0x0
  4491                           
  4492  0070                     ?_InitCustomChars:	
  4493                           ; 1 bytes @ 0x0
  4494                           
  4495  0070                     ?_LCD_Port:	
  4496                           ; 1 bytes @ 0x0
  4497                           
  4498  0070                     ??_LCD_Port:	
  4499                           ; 1 bytes @ 0x0
  4500                           
  4501  0070                     ?_LCD_Clear:	
  4502                           ; 1 bytes @ 0x0
  4503                           
  4504  0070                     ?_LCD_Init:	
  4505                           ; 1 bytes @ 0x0
  4506                           
  4507  0070                     ?_PIN_MANAGER_Initialize:	
  4508                           ; 1 bytes @ 0x0
  4509                           
  4510  0070                     ??_PIN_MANAGER_Initialize:	
  4511                           ; 1 bytes @ 0x0
  4512                           
  4513  0070                     ?_SYSTEM_Initialize:	
  4514                           ; 1 bytes @ 0x0
  4515                           
  4516  0070                     ?_PWM6_LoadDutyValue:	
  4517                           ; 1 bytes @ 0x0
  4518                           
  4519  0070                     ?_main:	
  4520                           ; 1 bytes @ 0x0
  4521                           
  4522  0070                     ?_ADCRead:	
  4523                           ; 1 bytes @ 0x0
  4524                           
  4525  0070                     ?___wmul:	
  4526                           ; 2 bytes @ 0x0
  4527                           
  4528  0070                     ?___awdiv:	
  4529                           ; 2 bytes @ 0x0
  4530                           
  4531  0070                     ?___awmod:	
  4532                           ; 2 bytes @ 0x0
  4533                           
  4534  0070                     ?___ftpack:	
  4535                           ; 2 bytes @ 0x0
  4536                           
  4537  0070                     ?_frexp:	
  4538                           ; 3 bytes @ 0x0
  4539                           
  4540  0070                     ?___aldiv:	
  4541                           ; 3 bytes @ 0x0
  4542                           
  4543  0070                     LCD_Port@a:	
  4544                           ; 4 bytes @ 0x0
  4545                           
  4546  0070                     PIN_MANAGER_Initialize@state:	
  4547                           ; 1 bytes @ 0x0
  4548                           
  4549  0070                     PWM6_LoadDutyValue@dutyCycle:	
  4550                           ; 1 bytes @ 0x0
  4551                           
  4552  0070                     ___wmul@multiplier:	
  4553                           ; 2 bytes @ 0x0
  4554                           
  4555  0070                     ___awdiv@divisor:	
  4556                           ; 2 bytes @ 0x0
  4557                           
  4558  0070                     ___awmod@divisor:	
  4559                           ; 2 bytes @ 0x0
  4560                           
  4561  0070                     ___ftpack@arg:	
  4562                           ; 2 bytes @ 0x0
  4563                           
  4564  0070                     ___ftge@ff1:	
  4565                           ; 3 bytes @ 0x0
  4566                           
  4567  0070                     frexp@value:	
  4568                           ; 3 bytes @ 0x0
  4569                           
  4570  0070                     ___aldiv@divisor:	
  4571                           ; 3 bytes @ 0x0
  4572                           
  4573                           
  4574                           ; 4 bytes @ 0x0
  4575  0070                     	ds	1
  4576  0071                     ??_LCD_Cmd:	
  4577  0071                     ??_LCD_Write_Char:	
  4578                           ; 1 bytes @ 0x1
  4579                           
  4580                           
  4581                           ; 1 bytes @ 0x1
  4582  0071                     	ds	1
  4583  0072                     ??_PWM6_LoadDutyValue:	
  4584  0072                     LCD_Write_Char@temp:	
  4585                           ; 1 bytes @ 0x2
  4586                           
  4587  0072                     ___wmul@multiplicand:	
  4588                           ; 1 bytes @ 0x2
  4589                           
  4590  0072                     ___awdiv@dividend:	
  4591                           ; 2 bytes @ 0x2
  4592                           
  4593  0072                     ___awmod@dividend:	
  4594                           ; 2 bytes @ 0x2
  4595                           
  4596                           
  4597                           ; 2 bytes @ 0x2
  4598  0072                     	ds	1
  4599  0073                     ??_ADCRead:	
  4600  0073                     ADCRead@channel:	
  4601                           ; 1 bytes @ 0x3
  4602                           
  4603  0073                     LCD_Cmd@a:	
  4604                           ; 1 bytes @ 0x3
  4605                           
  4606  0073                     LCD_Write_Char@y:	
  4607                           ; 1 bytes @ 0x3
  4608                           
  4609  0073                     ___ftpack@exp:	
  4610                           ; 1 bytes @ 0x3
  4611                           
  4612  0073                     frexp@eptr:	
  4613                           ; 1 bytes @ 0x3
  4614                           
  4615  0073                     ___ftge@ff2:	
  4616                           ; 1 bytes @ 0x3
  4617                           
  4618                           
  4619                           ; 3 bytes @ 0x3
  4620  0073                     	ds	1
  4621  0074                     ??_frexp:	
  4622  0074                     ??_LCD_Clear:	
  4623                           ; 1 bytes @ 0x4
  4624                           
  4625  0074                     ?_LCD_Set_Cursor:	
  4626                           ; 1 bytes @ 0x4
  4627                           
  4628  0074                     ??_LCD_Init:	
  4629                           ; 1 bytes @ 0x4
  4630                           
  4631  0074                     ??___wmul:	
  4632                           ; 1 bytes @ 0x4
  4633                           
  4634  0074                     ??___awdiv:	
  4635                           ; 1 bytes @ 0x4
  4636                           
  4637  0074                     ??___awmod:	
  4638                           ; 1 bytes @ 0x4
  4639                           
  4640  0074                     LCD_Set_Cursor@y:	
  4641                           ; 1 bytes @ 0x4
  4642                           
  4643  0074                     LCD_Write_Char@a:	
  4644                           ; 1 bytes @ 0x4
  4645                           
  4646  0074                     ___ftpack@sign:	
  4647                           ; 1 bytes @ 0x4
  4648                           
  4649  0074                     ___wmul@product:	
  4650                           ; 1 bytes @ 0x4
  4651                           
  4652  0074                     ___aldiv@dividend:	
  4653                           ; 2 bytes @ 0x4
  4654                           
  4655                           
  4656                           ; 4 bytes @ 0x4
  4657  0074                     	ds	1
  4658  0075                     ??___ftpack:	
  4659  0075                     ??_InitCustomChars:	
  4660                           ; 1 bytes @ 0x5
  4661                           
  4662  0075                     ??_LCD_Set_Cursor:	
  4663                           ; 1 bytes @ 0x5
  4664                           
  4665  0075                     ___awdiv@counter:	
  4666                           ; 1 bytes @ 0x5
  4667                           
  4668  0075                     ___awmod@counter:	
  4669                           ; 1 bytes @ 0x5
  4670                           
  4671                           
  4672                           ; 1 bytes @ 0x5
  4673  0075                     	ds	1
  4674  0076                     ??___ftge:	
  4675  0076                     InitCustomChars@i:	
  4676                           ; 1 bytes @ 0x6
  4677                           
  4678  0076                     ___awdiv@sign:	
  4679                           ; 1 bytes @ 0x6
  4680                           
  4681  0076                     ___awmod@sign:	
  4682                           ; 1 bytes @ 0x6
  4683                           
  4684                           
  4685                           ; 1 bytes @ 0x6
  4686  0076                     	ds	1
  4687  0077                     LCD_Set_Cursor@x:	
  4688  0077                     LCD_Init@style:	
  4689                           ; 1 bytes @ 0x7
  4690                           
  4691  0077                     ___awdiv@quotient:	
  4692                           ; 1 bytes @ 0x7
  4693                           
  4694                           
  4695                           ; 2 bytes @ 0x7
  4696  0077                     	ds	1
  4697  0078                     ??_SYSTEM_Initialize:	
  4698  0078                     ??___aldiv:	
  4699                           ; 1 bytes @ 0x8
  4700                           
  4701  0078                     ?___awtoft:	
  4702                           ; 1 bytes @ 0x8
  4703                           
  4704  0078                     LCD_Set_Cursor@z:	
  4705                           ; 3 bytes @ 0x8
  4706                           
  4707  0078                     ___awtoft@c:	
  4708                           ; 1 bytes @ 0x8
  4709                           
  4710                           
  4711                           ; 2 bytes @ 0x8
  4712  0078                     	ds	1
  4713  0079                     ?_LCD_Write_Int:	
  4714  0079                     LCD_Set_Cursor@w:	
  4715                           ; 1 bytes @ 0x9
  4716                           
  4717  0079                     readAnalog@analog_channel:	
  4718                           ; 1 bytes @ 0x9
  4719                           
  4720  0079                     LCD_Write_Int@value:	
  4721                           ; 2 bytes @ 0x9
  4722                           
  4723                           
  4724                           ; 2 bytes @ 0x9
  4725  0079                     	ds	1
  4726  007A                     LCD_Set_Cursor@temp:	
  4727                           
  4728                           ; 1 bytes @ 0xA
  4729  007A                     	ds	1
  4730  007B                     ??___awtoft:	
  4731  007B                     LCD_Write_Int@fieldLength:	
  4732                           ; 1 bytes @ 0xB
  4733                           
  4734  007B                     readAnalog@value:	
  4735                           ; 1 bytes @ 0xB
  4736                           
  4737                           
  4738                           ; 2 bytes @ 0xB
  4739  007B                     	ds	1
  4740  007C                     LCD_Write_Int@numPlaces:	
  4741                           
  4742                           ; 1 bytes @ 0xC
  4743  007C                     	ds	1
  4744  007D                     LCD_Write_Int@sign:	
  4745  007D                     ___awtoft@sign:	
  4746                           ; 1 bytes @ 0xD
  4747                           
  4748                           
  4749                           ; 1 bytes @ 0xD
  4750  007D                     	ds	1
  4751  007E                     ??_eval_poly:	
  4752  007E                     ??_tempCalc:	
  4753                           ; 1 bytes @ 0xE
  4754                           
  4755  007E                     ??___ftsub:	
  4756                           ; 1 bytes @ 0xE
  4757                           
  4758                           
  4759                           	psect	cstackBANK0
  4760  0020                     __pcstackBANK0:	
  4761                           ; 1 bytes @ 0xE
  4762                           
  4763  0020                     ??_LCD_Write_Int:	
  4764  0020                     ?___ftmul:	
  4765                           ; 1 bytes @ 0x0
  4766                           
  4767  0020                     ___aldiv@counter:	
  4768                           ; 3 bytes @ 0x0
  4769                           
  4770  0020                     ___ftmul@f1:	
  4771                           ; 1 bytes @ 0x0
  4772                           
  4773                           
  4774                           ; 3 bytes @ 0x0
  4775  0020                     	ds	1
  4776  0021                     ___aldiv@sign:	
  4777                           
  4778                           ; 1 bytes @ 0x1
  4779  0021                     	ds	1
  4780  0022                     ___aldiv@quotient:	
  4781                           
  4782                           ; 4 bytes @ 0x2
  4783  0022                     	ds	1
  4784  0023                     ___ftmul@f2:	
  4785                           
  4786                           ; 3 bytes @ 0x3
  4787  0023                     	ds	2
  4788  0025                     LCD_Write_Int@str:	
  4789                           
  4790                           ; 5 bytes @ 0x5
  4791  0025                     	ds	1
  4792  0026                     ??___ftmul:	
  4793  0026                     ?_readAnalog:	
  4794                           ; 1 bytes @ 0x6
  4795                           
  4796  0026                     readAnalog@channel:	
  4797                           ; 2 bytes @ 0x6
  4798                           
  4799                           
  4800                           ; 2 bytes @ 0x6
  4801  0026                     	ds	2
  4802  0028                     ??_readAnalog:	
  4803                           
  4804                           ; 1 bytes @ 0x8
  4805  0028                     	ds	2
  4806  002A                     ___ftmul@exp:	
  4807  002A                     LCD_Write_Int@j:	
  4808                           ; 1 bytes @ 0xA
  4809                           
  4810                           
  4811                           ; 2 bytes @ 0xA
  4812  002A                     	ds	1
  4813  002B                     ___ftmul@f3_as_product:	
  4814                           
  4815                           ; 3 bytes @ 0xB
  4816  002B                     	ds	1
  4817  002C                     LCD_Write_Int@i:	
  4818                           
  4819                           ; 2 bytes @ 0xC
  4820  002C                     	ds	2
  4821  002E                     ___ftmul@cntr:	
  4822                           
  4823                           ; 1 bytes @ 0xE
  4824  002E                     	ds	1
  4825  002F                     ___ftmul@sign:	
  4826                           
  4827                           ; 1 bytes @ 0xF
  4828  002F                     	ds	1
  4829  0030                     ?___ftdiv:	
  4830  0030                     ___ftdiv@f2:	
  4831                           ; 3 bytes @ 0x10
  4832                           
  4833                           
  4834                           ; 3 bytes @ 0x10
  4835  0030                     	ds	3
  4836  0033                     ___ftdiv@f1:	
  4837                           
  4838                           ; 3 bytes @ 0x13
  4839  0033                     	ds	3
  4840  0036                     ??___ftdiv:	
  4841                           
  4842                           ; 1 bytes @ 0x16
  4843  0036                     	ds	4
  4844  003A                     ___ftdiv@cntr:	
  4845                           
  4846                           ; 1 bytes @ 0x1A
  4847  003A                     	ds	1
  4848  003B                     ___ftdiv@f3:	
  4849                           
  4850                           ; 3 bytes @ 0x1B
  4851  003B                     	ds	3
  4852  003E                     ___ftdiv@exp:	
  4853                           
  4854                           ; 1 bytes @ 0x1E
  4855  003E                     	ds	1
  4856  003F                     ___ftdiv@sign:	
  4857                           
  4858                           ; 1 bytes @ 0x1F
  4859  003F                     	ds	1
  4860  0040                     ?___ftadd:	
  4861  0040                     ___ftadd@f1:	
  4862                           ; 3 bytes @ 0x20
  4863                           
  4864                           
  4865                           ; 3 bytes @ 0x20
  4866  0040                     	ds	3
  4867  0043                     ___ftadd@f2:	
  4868                           
  4869                           ; 3 bytes @ 0x23
  4870  0043                     	ds	3
  4871  0046                     ??___ftadd:	
  4872                           
  4873                           ; 1 bytes @ 0x26
  4874  0046                     	ds	4
  4875  004A                     ___ftadd@sign:	
  4876                           
  4877                           ; 1 bytes @ 0x2A
  4878  004A                     	ds	1
  4879  004B                     ___ftadd@exp2:	
  4880                           
  4881                           ; 1 bytes @ 0x2B
  4882  004B                     	ds	1
  4883  004C                     ___ftadd@exp1:	
  4884                           
  4885                           ; 1 bytes @ 0x2C
  4886  004C                     	ds	1
  4887  004D                     ?_eval_poly:	
  4888  004D                     ?___ftsub:	
  4889                           ; 3 bytes @ 0x2D
  4890                           
  4891  004D                     ___ftsub@f2:	
  4892                           ; 3 bytes @ 0x2D
  4893                           
  4894  004D                     eval_poly@x:	
  4895                           ; 3 bytes @ 0x2D
  4896                           
  4897                           
  4898                           ; 3 bytes @ 0x2D
  4899  004D                     	ds	3
  4900  0050                     eval_poly@d:	
  4901  0050                     ___ftsub@f1:	
  4902                           ; 2 bytes @ 0x30
  4903                           
  4904                           
  4905                           ; 3 bytes @ 0x30
  4906  0050                     	ds	2
  4907  0052                     eval_poly@n:	
  4908                           
  4909                           ; 2 bytes @ 0x32
  4910  0052                     	ds	2
  4911  0054                     eval_poly@res:	
  4912                           
  4913                           ; 3 bytes @ 0x34
  4914  0054                     	ds	3
  4915  0057                     ?_log:	
  4916  0057                     log@x:	
  4917                           ; 3 bytes @ 0x37
  4918                           
  4919                           
  4920                           ; 3 bytes @ 0x37
  4921  0057                     	ds	3
  4922  005A                     ??_log:	
  4923                           
  4924                           ; 1 bytes @ 0x3A
  4925  005A                     	ds	1
  4926  005B                     log@exponent:	
  4927                           
  4928                           ; 2 bytes @ 0x3B
  4929  005B                     	ds	2
  4930  005D                     ?_tempCalc:	
  4931  005D                     tempCalc@analogValue:	
  4932                           ; 3 bytes @ 0x3D
  4933                           
  4934                           
  4935                           ; 2 bytes @ 0x3D
  4936  005D                     	ds	3
  4937  0060                     tempCalc@R:	
  4938                           
  4939                           ; 3 bytes @ 0x40
  4940  0060                     	ds	3
  4941  0063                     _tempCalc$939:	
  4942                           
  4943                           ; 3 bytes @ 0x43
  4944  0063                     	ds	3
  4945  0066                     tempCalc@steinhart:	
  4946                           
  4947                           ; 3 bytes @ 0x46
  4948  0066                     	ds	3
  4949  0069                     ??_main:	
  4950                           
  4951                           ; 1 bytes @ 0x49
  4952  0069                     	ds	3
  4953                           
  4954                           	psect	maintext
  4955  057B                     __pmaintext:	
  4956 ;;
  4957 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  4958 ;;
  4959 ;; *************** function _main *****************
  4960 ;; Defined at:
  4961 ;;		line 12 in file "main.c"
  4962 ;; Parameters:    Size  Location     Type
  4963 ;;		None
  4964 ;; Auto vars:     Size  Location     Type
  4965 ;;  analogs        12    6[BANK1 ] unsigned int [6]
  4966 ;;  displayTemp2    3    3[BANK1 ] float 
  4967 ;;  displayTemp     3    0[BANK1 ] float 
  4968 ;;  steinhart       3    0        float 
  4969 ;;  R               3    0        float 
  4970 ;;  dutyCycle       2   19[BANK1 ] unsigned int 
  4971 ;;  x               1   21[BANK1 ] unsigned char 
  4972 ;;  count           1   18[BANK1 ] unsigned char 
  4973 ;; Return value:  Size  Location     Type
  4974 ;;                  1    wreg      void 
  4975 ;; Registers used:
  4976 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4977 ;; Tracked objects:
  4978 ;;		On entry : B1F/0
  4979 ;;		On exit  : 0/0
  4980 ;;		Unchanged: 0/0
  4981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4983 ;;      Locals:         0       0      22       0       0       0       0       0       0       0       0       0       
      +0       0
  4984 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4985 ;;      Totals:         0       3      22       0       0       0       0       0       0       0       0       0       
      +0       0
  4986 ;;Total ram usage:       25 bytes
  4987 ;; Hardware stack levels required when called:    5
  4988 ;; This function calls:
  4989 ;;		_LCD_Clear
  4990 ;;		_LCD_Set_Cursor
  4991 ;;		_LCD_Write_Char
  4992 ;;		_LCD_Write_Int
  4993 ;;		_PWM6_LoadDutyValue
  4994 ;;		_SYSTEM_Initialize
  4995 ;;		_readAnalog
  4996 ;;		_tempCalc
  4997 ;; This function is called by:
  4998 ;;		Startup code after reset
  4999 ;; This function uses a non-reentrant model
  5000 ;;
  5001                           
  5002                           
  5003                           ;psect for function _main
  5004  057B                     _main:	
  5005                           
  5006                           ;main.c: 14: SYSTEM_Initialize();
  5007                           
  5008                           ;incstack = 0
  5009                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5010  057B  318D  25E2  3185   	fcall	_SYSTEM_Initialize
  5011                           
  5012                           ;main.c: 16: uint16_t analogs[6] = {0};
  5013  057E  30B8               	movlw	low main@F13657
  5014  057F  0086               	movwf	6
  5015  0580  3000               	movlw	high main@F13657
  5016  0581  0087               	movwf	7
  5017  0582  30CF               	movlw	low main@analogs
  5018  0583  0084               	movwf	4
  5019  0584  3000               	movlw	high main@analogs
  5020  0585  0085               	movwf	5
  5021  0586  300C               	movlw	12
  5022  0587  0020               	movlb	0	; select bank0
  5023  0588  00E9               	movwf	??_main
  5024  0589                     u2630:	
  5025  0589  0016               	moviw fsr1++
  5026  058A  001A               	movwi fsr0++
  5027  058B  0BE9               	decfsz	??_main,f
  5028  058C  2D89               	goto	u2630
  5029                           
  5030                           ;main.c: 18: float R, steinhart, displayTemp, displayTemp2;
  5031                           ;main.c: 20: char count = 11;
  5032  058D  300B               	movlw	11
  5033  058E  00E9               	movwf	??_main
  5034  058F  0869               	movf	??_main,w
  5035  0590  0021               	movlb	1	; select bank1
  5036  0591  00DB               	movwf	main@count^(0+128)
  5037                           
  5038                           ;main.c: 22: char x = 0;
  5039  0592  01DE               	clrf	main@x^(0+128)
  5040                           
  5041                           ;main.c: 24: uint16_t dutyCycle = 1023;
  5042  0593  30FF               	movlw	255
  5043  0594  00DC               	movwf	main@dutyCycle^(0+128)
  5044  0595  3003               	movlw	3
  5045  0596  00DD               	movwf	(main@dutyCycle^(0+128)+1)
  5046                           
  5047                           ;main.c: 26: PWM6_LoadDutyValue(dutyCycle);
  5048  0597  085D               	movf	(main@dutyCycle+1)^(0+128),w
  5049  0598  00F1               	movwf	PWM6_LoadDutyValue@dutyCycle+1
  5050  0599  085C               	movf	main@dutyCycle^(0+128),w
  5051  059A  00F0               	movwf	PWM6_LoadDutyValue@dutyCycle
  5052  059B  318B  23EC  3185   	fcall	_PWM6_LoadDutyValue
  5053                           
  5054                           ;main.c: 28: _delay((unsigned long)((300)*(32000000/4000.0)));
  5055  059E  300D               	movlw	13
  5056  059F  0020               	movlb	0	; select bank0
  5057  05A0  00EB               	movwf	??_main+2
  5058  05A1  302D               	movlw	45
  5059  05A2  00EA               	movwf	??_main+1
  5060  05A3  30E2               	movlw	226
  5061  05A4  00E9               	movwf	??_main
  5062  05A5                     u2677:	
  5063  05A5  0BE9               	decfsz	??_main,f
  5064  05A6  2DA5               	goto	u2677
  5065  05A7  0BEA               	decfsz	??_main+1,f
  5066  05A8  2DA5               	goto	u2677
  5067  05A9  0BEB               	decfsz	??_main+2,f
  5068  05AA  2DA5               	goto	u2677
  5069  05AB  3200               	nop2
  5070                           
  5071                           ;main.c: 30: LCD_Clear();
  5072  05AC  318B  238A  3185   	fcall	_LCD_Clear
  5073                           
  5074                           ;main.c: 57: LCD_Clear();
  5075  05AF  318B  238A  3185   	fcall	_LCD_Clear
  5076  05B2                     l2397:	
  5077                           ;main.c: 60: while (1)
  5078                           
  5079                           
  5080                           ;main.c: 61: {
  5081                           ;main.c: 62: PWM6_LoadDutyValue(dutyCycle);
  5082  05B2  0021               	movlb	1	; select bank1
  5083  05B3  085D               	movf	(main@dutyCycle+1)^(0+128),w
  5084  05B4  00F1               	movwf	PWM6_LoadDutyValue@dutyCycle+1
  5085  05B5  085C               	movf	main@dutyCycle^(0+128),w
  5086  05B6  00F0               	movwf	PWM6_LoadDutyValue@dutyCycle
  5087  05B7  318B  23EC  3185   	fcall	_PWM6_LoadDutyValue
  5088                           
  5089                           ;main.c: 64: for(x=0;x<6;x++)
  5090  05BA  0021               	movlb	1	; select bank1
  5091  05BB  01DE               	clrf	main@x^(0+128)
  5092  05BC  3006               	movlw	6
  5093  05BD  025E               	subwf	main@x^(0+128),w
  5094  05BE  1803               	btfsc	3,0
  5095  05BF  2DDE               	goto	l2411
  5096  05C0                     l2405:	
  5097                           
  5098                           ;main.c: 65: {
  5099                           ;main.c: 66: analogs[x]=readAnalog(x);
  5100  05C0  085E               	movf	main@x^(0+128),w
  5101  05C1  0020               	movlb	0	; select bank0
  5102  05C2  00E9               	movwf	??_main
  5103  05C3  01EA               	clrf	??_main+1
  5104  05C4  0869               	movf	??_main,w
  5105  05C5  00A6               	movwf	readAnalog@channel
  5106  05C6  086A               	movf	??_main+1,w
  5107  05C7  00A7               	movwf	readAnalog@channel+1
  5108  05C8  3186  2698  3185   	fcall	_readAnalog
  5109  05CB  0021               	movlb	1	; select bank1
  5110  05CC  355E               	lslf	main@x^(0+128),w
  5111  05CD  3ECF               	addlw	(low (main@analogs| 0))& (0+255)
  5112  05CE  0086               	movwf	6
  5113  05CF  0187               	clrf	7
  5114  05D0  0020               	movlb	0	; select bank0
  5115  05D1  0826               	movf	?_readAnalog,w
  5116  05D2  3FC0               	movwi [0]fsr1
  5117  05D3  0827               	movf	?_readAnalog+1,w
  5118  05D4  3FC1               	movwi [1]fsr1
  5119  05D5  3001               	movlw	1
  5120  05D6  00E9               	movwf	??_main
  5121  05D7  0869               	movf	??_main,w
  5122  05D8  0021               	movlb	1	; select bank1
  5123  05D9  07DE               	addwf	main@x^(0+128),f
  5124  05DA  3006               	movlw	6
  5125  05DB  025E               	subwf	main@x^(0+128),w
  5126  05DC  1C03               	skipc
  5127  05DD  2DC0               	goto	l2405
  5128  05DE                     l2411:	
  5129                           
  5130                           ;main.c: 67: }
  5131                           ;main.c: 69: if(count>10)
  5132  05DE  300B               	movlw	11
  5133  05DF  025B               	subwf	main@count^(0+128),w
  5134  05E0  1C03               	skipc
  5135  05E1  2E65               	goto	l2441
  5136                           
  5137                           ;main.c: 70: {
  5138                           ;main.c: 77: { LCD_Set_Cursor(0,0); LCD_Write_Int(analogs[0],-1, 0, 0);};
  5139  05E2  01F4               	clrf	LCD_Set_Cursor@y
  5140  05E3  3000               	movlw	0
  5141  05E4  318D  25A3  3185   	fcall	_LCD_Set_Cursor
  5142  05E7  0021               	movlb	1	; select bank1
  5143  05E8  0850               	movf	(main@analogs+1)^(0+128),w
  5144  05E9  00FA               	movwf	LCD_Write_Int@value+1
  5145  05EA  084F               	movf	main@analogs^(0+128),w
  5146  05EB  00F9               	movwf	LCD_Write_Int@value
  5147  05EC  01FB               	clrf	LCD_Write_Int@fieldLength
  5148  05ED  03FB               	decf	LCD_Write_Int@fieldLength,f
  5149  05EE  01FC               	clrf	LCD_Write_Int@numPlaces
  5150  05EF  01FD               	clrf	LCD_Write_Int@sign
  5151  05F0  3182  22A7  3185   	fcall	_LCD_Write_Int
  5152                           
  5153                           ;main.c: 78: LCD_Write_Char(' ');
  5154  05F3  3020               	movlw	32
  5155  05F4  318C  24CB  3185   	fcall	_LCD_Write_Char
  5156                           
  5157                           ;main.c: 79: { LCD_Set_Cursor(6,0); LCD_Write_Int(analogs[1],-1, 0, 0);};
  5158  05F7  01F4               	clrf	LCD_Set_Cursor@y
  5159  05F8  3006               	movlw	6
  5160  05F9  318D  25A3  3185   	fcall	_LCD_Set_Cursor
  5161  05FC  0021               	movlb	1	; select bank1
  5162  05FD  0852               	movf	((main@analogs+1)^(0+128)+2),w
  5163  05FE  00FA               	movwf	LCD_Write_Int@value+1
  5164  05FF  0851               	movf	(main@analogs^(0+128)+2),w
  5165  0600  00F9               	movwf	LCD_Write_Int@value
  5166  0601  01FB               	clrf	LCD_Write_Int@fieldLength
  5167  0602  03FB               	decf	LCD_Write_Int@fieldLength,f
  5168  0603  01FC               	clrf	LCD_Write_Int@numPlaces
  5169  0604  01FD               	clrf	LCD_Write_Int@sign
  5170  0605  3182  22A7  3185   	fcall	_LCD_Write_Int
  5171                           
  5172                           ;main.c: 80: LCD_Write_Char(' ');
  5173  0608  3020               	movlw	32
  5174  0609  318C  24CB  3185   	fcall	_LCD_Write_Char
  5175                           
  5176                           ;main.c: 81: { LCD_Set_Cursor(11,0); LCD_Write_Int(analogs[2],-1, 0, 0);};
  5177  060C  01F4               	clrf	LCD_Set_Cursor@y
  5178  060D  300B               	movlw	11
  5179  060E  318D  25A3  3185   	fcall	_LCD_Set_Cursor
  5180  0611  0021               	movlb	1	; select bank1
  5181  0612  0854               	movf	((main@analogs+1)^(0+128)+4),w
  5182  0613  00FA               	movwf	LCD_Write_Int@value+1
  5183  0614  0853               	movf	(main@analogs^(0+128)+4),w
  5184  0615  00F9               	movwf	LCD_Write_Int@value
  5185  0616  01FB               	clrf	LCD_Write_Int@fieldLength
  5186  0617  03FB               	decf	LCD_Write_Int@fieldLength,f
  5187  0618  01FC               	clrf	LCD_Write_Int@numPlaces
  5188  0619  01FD               	clrf	LCD_Write_Int@sign
  5189  061A  3182  22A7  3185   	fcall	_LCD_Write_Int
  5190                           
  5191                           ;main.c: 82: LCD_Write_Char(' ');
  5192  061D  3020               	movlw	32
  5193  061E  318C  24CB  3185   	fcall	_LCD_Write_Char
  5194                           
  5195                           ;main.c: 84: { LCD_Set_Cursor(0,1); LCD_Write_Int(analogs[3],-1, 0, 0);};
  5196  0621  01F4               	clrf	LCD_Set_Cursor@y
  5197  0622  0AF4               	incf	LCD_Set_Cursor@y,f
  5198  0623  3000               	movlw	0
  5199  0624  318D  25A3  3185   	fcall	_LCD_Set_Cursor
  5200  0627  0021               	movlb	1	; select bank1
  5201  0628  0856               	movf	((main@analogs+1)^(0+128)+6),w
  5202  0629  00FA               	movwf	LCD_Write_Int@value+1
  5203  062A  0855               	movf	(main@analogs^(0+128)+6),w
  5204  062B  00F9               	movwf	LCD_Write_Int@value
  5205  062C  01FB               	clrf	LCD_Write_Int@fieldLength
  5206  062D  03FB               	decf	LCD_Write_Int@fieldLength,f
  5207  062E  01FC               	clrf	LCD_Write_Int@numPlaces
  5208  062F  01FD               	clrf	LCD_Write_Int@sign
  5209  0630  3182  22A7  3185   	fcall	_LCD_Write_Int
  5210                           
  5211                           ;main.c: 85: LCD_Write_Char(' ');
  5212  0633  3020               	movlw	32
  5213  0634  318C  24CB  3185   	fcall	_LCD_Write_Char
  5214                           
  5215                           ;main.c: 86: { LCD_Set_Cursor(6,1); LCD_Write_Int(analogs[4],-1, 0, 0);};
  5216  0637  01F4               	clrf	LCD_Set_Cursor@y
  5217  0638  0AF4               	incf	LCD_Set_Cursor@y,f
  5218  0639  3006               	movlw	6
  5219  063A  318D  25A3  3185   	fcall	_LCD_Set_Cursor
  5220  063D  0021               	movlb	1	; select bank1
  5221  063E  0858               	movf	((main@analogs+1)^(0+128)+8),w
  5222  063F  00FA               	movwf	LCD_Write_Int@value+1
  5223  0640  0857               	movf	(main@analogs^(0+128)+8),w
  5224  0641  00F9               	movwf	LCD_Write_Int@value
  5225  0642  01FB               	clrf	LCD_Write_Int@fieldLength
  5226  0643  03FB               	decf	LCD_Write_Int@fieldLength,f
  5227  0644  01FC               	clrf	LCD_Write_Int@numPlaces
  5228  0645  01FD               	clrf	LCD_Write_Int@sign
  5229  0646  3182  22A7  3185   	fcall	_LCD_Write_Int
  5230                           
  5231                           ;main.c: 87: LCD_Write_Char(' ');
  5232  0649  3020               	movlw	32
  5233  064A  318C  24CB  3185   	fcall	_LCD_Write_Char
  5234                           
  5235                           ;main.c: 88: { LCD_Set_Cursor(11,1); LCD_Write_Int(analogs[5],-1, 0, 0);};
  5236  064D  01F4               	clrf	LCD_Set_Cursor@y
  5237  064E  0AF4               	incf	LCD_Set_Cursor@y,f
  5238  064F  300B               	movlw	11
  5239  0650  318D  25A3  3185   	fcall	_LCD_Set_Cursor
  5240  0653  0021               	movlb	1	; select bank1
  5241  0654  085A               	movf	((main@analogs+1)^(0+128)+10),w
  5242  0655  00FA               	movwf	LCD_Write_Int@value+1
  5243  0656  0859               	movf	(main@analogs^(0+128)+10),w
  5244  0657  00F9               	movwf	LCD_Write_Int@value
  5245  0658  01FB               	clrf	LCD_Write_Int@fieldLength
  5246  0659  03FB               	decf	LCD_Write_Int@fieldLength,f
  5247  065A  01FC               	clrf	LCD_Write_Int@numPlaces
  5248  065B  01FD               	clrf	LCD_Write_Int@sign
  5249  065C  3182  22A7  3185   	fcall	_LCD_Write_Int
  5250                           
  5251                           ;main.c: 89: LCD_Write_Char(' ');
  5252  065F  3020               	movlw	32
  5253  0660  318C  24CB  3185   	fcall	_LCD_Write_Char
  5254                           
  5255                           ;main.c: 98: count=0;
  5256  0663  0021               	movlb	1	; select bank1
  5257  0664  01DB               	clrf	main@count^(0+128)
  5258  0665                     l2441:	
  5259                           
  5260                           ;main.c: 99: }
  5261                           ;main.c: 103: displayTemp = tempCalc(analogs[4]);
  5262  0665  0858               	movf	((main@analogs+1)^(0+128)+8),w
  5263  0666  0020               	movlb	0	; select bank0
  5264  0667  00DE               	movwf	tempCalc@analogValue+1
  5265  0668  0021               	movlb	1	; select bank1
  5266  0669  0857               	movf	(main@analogs^(0+128)+8),w
  5267  066A  0020               	movlb	0	; select bank0
  5268  066B  00DD               	movwf	tempCalc@analogValue
  5269  066C  3184  2466  3185   	fcall	_tempCalc
  5270  066F  0020               	movlb	0	; select bank0
  5271  0670  085D               	movf	?_tempCalc,w
  5272  0671  0021               	movlb	1	; select bank1
  5273  0672  00C9               	movwf	main@displayTemp^(0+128)
  5274  0673  0020               	movlb	0	; select bank0
  5275  0674  085E               	movf	?_tempCalc+1,w
  5276  0675  0021               	movlb	1	; select bank1
  5277  0676  00CA               	movwf	(main@displayTemp+1)^(0+128)
  5278  0677  0020               	movlb	0	; select bank0
  5279  0678  085F               	movf	?_tempCalc+2,w
  5280  0679  0021               	movlb	1	; select bank1
  5281  067A  00CB               	movwf	(main@displayTemp+2)^(0+128)
  5282                           
  5283                           ;main.c: 105: displayTemp2 = tempCalc(analogs[5]);
  5284  067B  085A               	movf	((main@analogs+1)^(0+128)+10),w
  5285  067C  0020               	movlb	0	; select bank0
  5286  067D  00DE               	movwf	tempCalc@analogValue+1
  5287  067E  0021               	movlb	1	; select bank1
  5288  067F  0859               	movf	(main@analogs^(0+128)+10),w
  5289  0680  0020               	movlb	0	; select bank0
  5290  0681  00DD               	movwf	tempCalc@analogValue
  5291  0682  3184  2466  3185   	fcall	_tempCalc
  5292  0685  0020               	movlb	0	; select bank0
  5293  0686  085D               	movf	?_tempCalc,w
  5294  0687  0021               	movlb	1	; select bank1
  5295  0688  00CC               	movwf	main@displayTemp2^(0+128)
  5296  0689  0020               	movlb	0	; select bank0
  5297  068A  085E               	movf	?_tempCalc+1,w
  5298  068B  0021               	movlb	1	; select bank1
  5299  068C  00CD               	movwf	(main@displayTemp2+1)^(0+128)
  5300  068D  0020               	movlb	0	; select bank0
  5301  068E  085F               	movf	?_tempCalc+2,w
  5302  068F  0021               	movlb	1	; select bank1
  5303  0690  00CE               	movwf	(main@displayTemp2+2)^(0+128)
  5304                           
  5305                           ;main.c: 135: count+=1;
  5306  0691  3001               	movlw	1
  5307  0692  0020               	movlb	0	; select bank0
  5308  0693  00E9               	movwf	??_main
  5309  0694  0869               	movf	??_main,w
  5310  0695  0021               	movlb	1	; select bank1
  5311  0696  07DB               	addwf	main@count^(0+128),f
  5312  0697  2DB2               	goto	l2397
  5313  0698                     __end_of_main:	
  5314                           
  5315                           	psect	text1
  5316  0466                     __ptext1:	
  5317 ;; *************** function _tempCalc *****************
  5318 ;; Defined at:
  5319 ;;		line 4 in file "tempCalc.c"
  5320 ;; Parameters:    Size  Location     Type
  5321 ;;  analogValue     2   61[BANK0 ] int 
  5322 ;; Auto vars:     Size  Location     Type
  5323 ;;  steinhart       3   70[BANK0 ] float 
  5324 ;;  R               3   64[BANK0 ] float 
  5325 ;; Return value:  Size  Location     Type
  5326 ;;                  3   61[BANK0 ] float 
  5327 ;; Registers used:
  5328 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5329 ;; Tracked objects:
  5330 ;;		On entry : 0/0
  5331 ;;		On exit  : 0/0
  5332 ;;		Unchanged: 0/0
  5333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5334 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5335 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5337 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5338 ;;Total ram usage:       12 bytes
  5339 ;; Hardware stack levels used:    1
  5340 ;; Hardware stack levels required when called:    4
  5341 ;; This function calls:
  5342 ;;		___awtoft
  5343 ;;		___ftadd
  5344 ;;		___ftdiv
  5345 ;;		___ftmul
  5346 ;;		___ftsub
  5347 ;;		_log
  5348 ;; This function is called by:
  5349 ;;		_main
  5350 ;; This function uses a non-reentrant model
  5351 ;;
  5352                           
  5353                           
  5354                           ;psect for function _tempCalc
  5355  0466                     _tempCalc:	
  5356                           
  5357                           ;tempCalc.c: 6: float R, steinhart;
  5358                           ;tempCalc.c: 8: R = 10020/(1023/(float)analogValue - 1);
  5359                           
  5360                           ;incstack = 0
  5361                           ; Regs used in _tempCalc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5362  0466  3000               	movlw	0
  5363  0467  0020               	movlb	0	; select bank0
  5364  0468  00C0               	movwf	___ftadd@f1
  5365  0469  3080               	movlw	128
  5366  046A  00C1               	movwf	___ftadd@f1+1
  5367  046B  30BF               	movlw	191
  5368  046C  00C2               	movwf	___ftadd@f1+2
  5369  046D  085E               	movf	tempCalc@analogValue+1,w
  5370  046E  00F9               	movwf	___awtoft@c+1
  5371  046F  085D               	movf	tempCalc@analogValue,w
  5372  0470  00F8               	movwf	___awtoft@c
  5373  0471  318C  2485  3184   	fcall	___awtoft
  5374  0474  0878               	movf	?___awtoft,w
  5375  0475  0020               	movlb	0	; select bank0
  5376  0476  00B0               	movwf	___ftdiv@f2
  5377  0477  0879               	movf	?___awtoft+1,w
  5378  0478  00B1               	movwf	___ftdiv@f2+1
  5379  0479  087A               	movf	?___awtoft+2,w
  5380  047A  00B2               	movwf	___ftdiv@f2+2
  5381  047B  30C0               	movlw	192
  5382  047C  00B3               	movwf	___ftdiv@f1
  5383  047D  307F               	movlw	127
  5384  047E  00B4               	movwf	___ftdiv@f1+1
  5385  047F  3044               	movlw	68
  5386  0480  00B5               	movwf	___ftdiv@f1+2
  5387  0481  3180  209D  3184   	fcall	___ftdiv
  5388  0484  0020               	movlb	0	; select bank0
  5389  0485  0830               	movf	?___ftdiv,w
  5390  0486  00C3               	movwf	___ftadd@f2
  5391  0487  0831               	movf	?___ftdiv+1,w
  5392  0488  00C4               	movwf	___ftadd@f2+1
  5393  0489  0832               	movf	?___ftdiv+2,w
  5394  048A  00C5               	movwf	___ftadd@f2+2
  5395  048B  3183  2370  3184   	fcall	___ftadd
  5396  048E  0020               	movlb	0	; select bank0
  5397  048F  0840               	movf	?___ftadd,w
  5398  0490  00E3               	movwf	_tempCalc$939
  5399  0491  0841               	movf	?___ftadd+1,w
  5400  0492  00E4               	movwf	_tempCalc$939+1
  5401  0493  0842               	movf	?___ftadd+2,w
  5402  0494  00E5               	movwf	_tempCalc$939+2
  5403                           
  5404                           ;tempCalc.c: 6: float R, steinhart;
  5405                           ;tempCalc.c: 8: R = 10020/(1023/(float)analogValue - 1);
  5406  0495  0863               	movf	_tempCalc$939,w
  5407  0496  00B0               	movwf	___ftdiv@f2
  5408  0497  0864               	movf	_tempCalc$939+1,w
  5409  0498  00B1               	movwf	___ftdiv@f2+1
  5410  0499  0865               	movf	_tempCalc$939+2,w
  5411  049A  00B2               	movwf	___ftdiv@f2+2
  5412  049B  3090               	movlw	144
  5413  049C  00B3               	movwf	___ftdiv@f1
  5414  049D  301C               	movlw	28
  5415  049E  00B4               	movwf	___ftdiv@f1+1
  5416  049F  3046               	movlw	70
  5417  04A0  00B5               	movwf	___ftdiv@f1+2
  5418  04A1  3180  209D  3184   	fcall	___ftdiv
  5419  04A4  0020               	movlb	0	; select bank0
  5420  04A5  0830               	movf	?___ftdiv,w
  5421  04A6  00E0               	movwf	tempCalc@R
  5422  04A7  0831               	movf	?___ftdiv+1,w
  5423  04A8  00E1               	movwf	tempCalc@R+1
  5424  04A9  0832               	movf	?___ftdiv+2,w
  5425  04AA  00E2               	movwf	tempCalc@R+2
  5426                           
  5427                           ;tempCalc.c: 10: steinhart = R /10061;
  5428  04AB  3034               	movlw	52
  5429  04AC  00B0               	movwf	___ftdiv@f2
  5430  04AD  301D               	movlw	29
  5431  04AE  00B1               	movwf	___ftdiv@f2+1
  5432  04AF  3046               	movlw	70
  5433  04B0  00B2               	movwf	___ftdiv@f2+2
  5434  04B1  0860               	movf	tempCalc@R,w
  5435  04B2  00B3               	movwf	___ftdiv@f1
  5436  04B3  0861               	movf	tempCalc@R+1,w
  5437  04B4  00B4               	movwf	___ftdiv@f1+1
  5438  04B5  0862               	movf	tempCalc@R+2,w
  5439  04B6  00B5               	movwf	___ftdiv@f1+2
  5440  04B7  3180  209D  3184   	fcall	___ftdiv
  5441  04BA  0020               	movlb	0	; select bank0
  5442  04BB  0830               	movf	?___ftdiv,w
  5443  04BC  00E6               	movwf	tempCalc@steinhart
  5444  04BD  0831               	movf	?___ftdiv+1,w
  5445  04BE  00E7               	movwf	tempCalc@steinhart+1
  5446  04BF  0832               	movf	?___ftdiv+2,w
  5447  04C0  00E8               	movwf	tempCalc@steinhart+2
  5448                           
  5449                           ;tempCalc.c: 11: steinhart = log(steinhart);
  5450  04C1  0866               	movf	tempCalc@steinhart,w
  5451  04C2  00D7               	movwf	log@x
  5452  04C3  0867               	movf	tempCalc@steinhart+1,w
  5453  04C4  00D8               	movwf	log@x+1
  5454  04C5  0868               	movf	tempCalc@steinhart+2,w
  5455  04C6  00D9               	movwf	log@x+2
  5456  04C7  3181  2146  3184   	fcall	_log
  5457  04CA  0020               	movlb	0	; select bank0
  5458  04CB  0857               	movf	?_log,w
  5459  04CC  00E6               	movwf	tempCalc@steinhart
  5460  04CD  0858               	movf	?_log+1,w
  5461  04CE  00E7               	movwf	tempCalc@steinhart+1
  5462  04CF  0859               	movf	?_log+2,w
  5463  04D0  00E8               	movwf	tempCalc@steinhart+2
  5464                           
  5465                           ;tempCalc.c: 12: steinhart /= 3995;
  5466  04D1  30B0               	movlw	176
  5467  04D2  00B0               	movwf	___ftdiv@f2
  5468  04D3  3079               	movlw	121
  5469  04D4  00B1               	movwf	___ftdiv@f2+1
  5470  04D5  3045               	movlw	69
  5471  04D6  00B2               	movwf	___ftdiv@f2+2
  5472  04D7  0866               	movf	tempCalc@steinhart,w
  5473  04D8  00B3               	movwf	___ftdiv@f1
  5474  04D9  0867               	movf	tempCalc@steinhart+1,w
  5475  04DA  00B4               	movwf	___ftdiv@f1+1
  5476  04DB  0868               	movf	tempCalc@steinhart+2,w
  5477  04DC  00B5               	movwf	___ftdiv@f1+2
  5478  04DD  3180  209D  3184   	fcall	___ftdiv
  5479  04E0  0020               	movlb	0	; select bank0
  5480  04E1  0830               	movf	?___ftdiv,w
  5481  04E2  00E6               	movwf	tempCalc@steinhart
  5482  04E3  0831               	movf	?___ftdiv+1,w
  5483  04E4  00E7               	movwf	tempCalc@steinhart+1
  5484  04E5  0832               	movf	?___ftdiv+2,w
  5485  04E6  00E8               	movwf	tempCalc@steinhart+2
  5486                           
  5487                           ;tempCalc.c: 13: steinhart += 1.0 / (25 + 273.15);
  5488  04E7  30CF               	movlw	207
  5489  04E8  00C0               	movwf	___ftadd@f1
  5490  04E9  305B               	movlw	91
  5491  04EA  00C1               	movwf	___ftadd@f1+1
  5492  04EB  303B               	movlw	59
  5493  04EC  00C2               	movwf	___ftadd@f1+2
  5494  04ED  0866               	movf	tempCalc@steinhart,w
  5495  04EE  00C3               	movwf	___ftadd@f2
  5496  04EF  0867               	movf	tempCalc@steinhart+1,w
  5497  04F0  00C4               	movwf	___ftadd@f2+1
  5498  04F1  0868               	movf	tempCalc@steinhart+2,w
  5499  04F2  00C5               	movwf	___ftadd@f2+2
  5500  04F3  3183  2370  3184   	fcall	___ftadd
  5501  04F6  0020               	movlb	0	; select bank0
  5502  04F7  0840               	movf	?___ftadd,w
  5503  04F8  00E6               	movwf	tempCalc@steinhart
  5504  04F9  0841               	movf	?___ftadd+1,w
  5505  04FA  00E7               	movwf	tempCalc@steinhart+1
  5506  04FB  0842               	movf	?___ftadd+2,w
  5507  04FC  00E8               	movwf	tempCalc@steinhart+2
  5508                           
  5509                           ;tempCalc.c: 14: steinhart = 1.0 / steinhart;
  5510  04FD  0866               	movf	tempCalc@steinhart,w
  5511  04FE  00B0               	movwf	___ftdiv@f2
  5512  04FF  0867               	movf	tempCalc@steinhart+1,w
  5513  0500  00B1               	movwf	___ftdiv@f2+1
  5514  0501  0868               	movf	tempCalc@steinhart+2,w
  5515  0502  00B2               	movwf	___ftdiv@f2+2
  5516  0503  3000               	movlw	0
  5517  0504  00B3               	movwf	___ftdiv@f1
  5518  0505  3080               	movlw	128
  5519  0506  00B4               	movwf	___ftdiv@f1+1
  5520  0507  303F               	movlw	63
  5521  0508  00B5               	movwf	___ftdiv@f1+2
  5522  0509  3180  209D  3184   	fcall	___ftdiv
  5523  050C  0020               	movlb	0	; select bank0
  5524  050D  0830               	movf	?___ftdiv,w
  5525  050E  00E6               	movwf	tempCalc@steinhart
  5526  050F  0831               	movf	?___ftdiv+1,w
  5527  0510  00E7               	movwf	tempCalc@steinhart+1
  5528  0511  0832               	movf	?___ftdiv+2,w
  5529  0512  00E8               	movwf	tempCalc@steinhart+2
  5530                           
  5531                           ;tempCalc.c: 15: steinhart -= 273.15;
  5532  0513  3093               	movlw	147
  5533  0514  00CD               	movwf	___ftsub@f2
  5534  0515  3088               	movlw	136
  5535  0516  00CE               	movwf	___ftsub@f2+1
  5536  0517  3043               	movlw	67
  5537  0518  00CF               	movwf	___ftsub@f2+2
  5538  0519  0866               	movf	tempCalc@steinhart,w
  5539  051A  00D0               	movwf	___ftsub@f1
  5540  051B  0867               	movf	tempCalc@steinhart+1,w
  5541  051C  00D1               	movwf	___ftsub@f1+1
  5542  051D  0868               	movf	tempCalc@steinhart+2,w
  5543  051E  00D2               	movwf	___ftsub@f1+2
  5544  051F  318C  2467  3184   	fcall	___ftsub
  5545  0522  0020               	movlb	0	; select bank0
  5546  0523  084D               	movf	?___ftsub,w
  5547  0524  00E6               	movwf	tempCalc@steinhart
  5548  0525  084E               	movf	?___ftsub+1,w
  5549  0526  00E7               	movwf	tempCalc@steinhart+1
  5550  0527  084F               	movf	?___ftsub+2,w
  5551  0528  00E8               	movwf	tempCalc@steinhart+2
  5552                           
  5553                           ;tempCalc.c: 17: steinhart*=10;
  5554  0529  3000               	movlw	0
  5555  052A  00A0               	movwf	___ftmul@f1
  5556  052B  3020               	movlw	32
  5557  052C  00A1               	movwf	___ftmul@f1+1
  5558  052D  3041               	movlw	65
  5559  052E  00A2               	movwf	___ftmul@f1+2
  5560  052F  0866               	movf	tempCalc@steinhart,w
  5561  0530  00A3               	movwf	___ftmul@f2
  5562  0531  0867               	movf	tempCalc@steinhart+1,w
  5563  0532  00A4               	movwf	___ftmul@f2+1
  5564  0533  0868               	movf	tempCalc@steinhart+2,w
  5565  0534  00A5               	movwf	___ftmul@f2+2
  5566  0535  3181  21F3  3184   	fcall	___ftmul
  5567  0538  0020               	movlb	0	; select bank0
  5568  0539  0820               	movf	?___ftmul,w
  5569  053A  00E6               	movwf	tempCalc@steinhart
  5570  053B  0821               	movf	?___ftmul+1,w
  5571  053C  00E7               	movwf	tempCalc@steinhart+1
  5572  053D  0822               	movf	?___ftmul+2,w
  5573  053E  00E8               	movwf	tempCalc@steinhart+2
  5574                           
  5575                           ;tempCalc.c: 19: steinhart = steinhart*9/5+320;
  5576  053F  3000               	movlw	0
  5577  0540  00C0               	movwf	___ftadd@f1
  5578  0541  30A0               	movlw	160
  5579  0542  00C1               	movwf	___ftadd@f1+1
  5580  0543  3043               	movlw	67
  5581  0544  00C2               	movwf	___ftadd@f1+2
  5582  0545  3000               	movlw	0
  5583  0546  00B0               	movwf	___ftdiv@f2
  5584  0547  30A0               	movlw	160
  5585  0548  00B1               	movwf	___ftdiv@f2+1
  5586  0549  3040               	movlw	64
  5587  054A  00B2               	movwf	___ftdiv@f2+2
  5588  054B  3000               	movlw	0
  5589  054C  00A0               	movwf	___ftmul@f1
  5590  054D  3010               	movlw	16
  5591  054E  00A1               	movwf	___ftmul@f1+1
  5592  054F  3041               	movlw	65
  5593  0550  00A2               	movwf	___ftmul@f1+2
  5594  0551  0866               	movf	tempCalc@steinhart,w
  5595  0552  00A3               	movwf	___ftmul@f2
  5596  0553  0867               	movf	tempCalc@steinhart+1,w
  5597  0554  00A4               	movwf	___ftmul@f2+1
  5598  0555  0868               	movf	tempCalc@steinhart+2,w
  5599  0556  00A5               	movwf	___ftmul@f2+2
  5600  0557  3181  21F3  3184   	fcall	___ftmul
  5601  055A  0020               	movlb	0	; select bank0
  5602  055B  0820               	movf	?___ftmul,w
  5603  055C  00B3               	movwf	___ftdiv@f1
  5604  055D  0821               	movf	?___ftmul+1,w
  5605  055E  00B4               	movwf	___ftdiv@f1+1
  5606  055F  0822               	movf	?___ftmul+2,w
  5607  0560  00B5               	movwf	___ftdiv@f1+2
  5608  0561  3180  209D  3184   	fcall	___ftdiv
  5609  0564  0020               	movlb	0	; select bank0
  5610  0565  0830               	movf	?___ftdiv,w
  5611  0566  00C3               	movwf	___ftadd@f2
  5612  0567  0831               	movf	?___ftdiv+1,w
  5613  0568  00C4               	movwf	___ftadd@f2+1
  5614  0569  0832               	movf	?___ftdiv+2,w
  5615  056A  00C5               	movwf	___ftadd@f2+2
  5616  056B  3183  2370         	fcall	___ftadd
  5617  056D  0020               	movlb	0	; select bank0
  5618  056E  0840               	movf	?___ftadd,w
  5619  056F  00E6               	movwf	tempCalc@steinhart
  5620  0570  0841               	movf	?___ftadd+1,w
  5621  0571  00E7               	movwf	tempCalc@steinhart+1
  5622  0572  0842               	movf	?___ftadd+2,w
  5623  0573  00E8               	movwf	tempCalc@steinhart+2
  5624                           
  5625                           ;tempCalc.c: 21: return steinhart;
  5626  0574  0866               	movf	tempCalc@steinhart,w
  5627  0575  00DD               	movwf	?_tempCalc
  5628  0576  0867               	movf	tempCalc@steinhart+1,w
  5629  0577  00DE               	movwf	?_tempCalc+1
  5630  0578  0868               	movf	tempCalc@steinhart+2,w
  5631  0579  00DF               	movwf	?_tempCalc+2
  5632  057A  0008               	return
  5633  057B                     __end_of_tempCalc:	
  5634                           
  5635                           	psect	text2
  5636  0146                     __ptext2:	
  5637 ;; *************** function _log *****************
  5638 ;; Defined at:
  5639 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\log.c"
  5640 ;; Parameters:    Size  Location     Type
  5641 ;;  x               3   55[BANK0 ] float 
  5642 ;; Auto vars:     Size  Location     Type
  5643 ;;  exponent        2   59[BANK0 ] int 
  5644 ;; Return value:  Size  Location     Type
  5645 ;;                  3   55[BANK0 ] int 
  5646 ;; Registers used:
  5647 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5648 ;; Tracked objects:
  5649 ;;		On entry : 0/0
  5650 ;;		On exit  : 0/0
  5651 ;;		Unchanged: 0/0
  5652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5653 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5654 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5655 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5656 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5657 ;;Total ram usage:        6 bytes
  5658 ;; Hardware stack levels used:    1
  5659 ;; Hardware stack levels required when called:    3
  5660 ;; This function calls:
  5661 ;;		___awtoft
  5662 ;;		___ftadd
  5663 ;;		___ftge
  5664 ;;		___ftmul
  5665 ;;		_eval_poly
  5666 ;;		_frexp
  5667 ;; This function is called by:
  5668 ;;		_tempCalc
  5669 ;; This function uses a non-reentrant model
  5670 ;;
  5671                           
  5672                           
  5673                           ;psect for function _log
  5674  0146                     _log:	
  5675                           
  5676                           ;incstack = 0
  5677                           ; Regs used in _log: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5678  0146  0020               	movlb	0	; select bank0
  5679  0147  0857               	movf	log@x,w
  5680  0148  00F0               	movwf	___ftge@ff1
  5681  0149  0858               	movf	log@x+1,w
  5682  014A  00F1               	movwf	___ftge@ff1+1
  5683  014B  0859               	movf	log@x+2,w
  5684  014C  00F2               	movwf	___ftge@ff1+2
  5685  014D  3000               	movlw	0
  5686  014E  00F3               	movwf	___ftge@ff2
  5687  014F  3000               	movlw	0
  5688  0150  00F4               	movwf	___ftge@ff2+1
  5689  0151  3000               	movlw	0
  5690  0152  00F5               	movwf	___ftge@ff2+2
  5691  0153  318D  252D  3181   	fcall	___ftge
  5692  0156  1803               	btfsc	3,0
  5693  0157  2964               	goto	l2049
  5694  0158  3021               	movlw	33
  5695  0159  0020               	movlb	0	; select bank0
  5696  015A  00EC               	movwf	_errno
  5697  015B  3000               	movlw	0
  5698  015C  00ED               	movwf	_errno+1
  5699  015D  3000               	movlw	0
  5700  015E  00D7               	movwf	?_log
  5701  015F  3000               	movlw	0
  5702  0160  00D8               	movwf	?_log+1
  5703  0161  3000               	movlw	0
  5704  0162  00D9               	movwf	?_log+2
  5705  0163  0008               	return
  5706  0164                     l2049:	
  5707  0164  0020               	movlb	0	; select bank0
  5708  0165  0859               	movf	log@x+2,w
  5709  0166  0458               	iorwf	log@x+1,w
  5710  0167  0457               	iorwf	log@x,w
  5711  0168  1D03               	skipz
  5712  0169  2975               	goto	l2055
  5713  016A  3022               	movlw	34
  5714  016B  00EC               	movwf	_errno
  5715  016C  3000               	movlw	0
  5716  016D  00ED               	movwf	_errno+1
  5717  016E  3000               	movlw	0
  5718  016F  00D7               	movwf	?_log
  5719  0170  3000               	movlw	0
  5720  0171  00D8               	movwf	?_log+1
  5721  0172  3000               	movlw	0
  5722  0173  00D9               	movwf	?_log+2
  5723  0174  0008               	return
  5724  0175                     l2055:	
  5725  0175  3000               	movlw	0
  5726  0176  00C0               	movwf	___ftadd@f1
  5727  0177  3080               	movlw	128
  5728  0178  00C1               	movwf	___ftadd@f1+1
  5729  0179  30BF               	movlw	191
  5730  017A  00C2               	movwf	___ftadd@f1+2
  5731  017B  3000               	movlw	0
  5732  017C  00A0               	movwf	___ftmul@f1
  5733  017D  3000               	movlw	0
  5734  017E  00A1               	movwf	___ftmul@f1+1
  5735  017F  3040               	movlw	64
  5736  0180  00A2               	movwf	___ftmul@f1+2
  5737  0181  305B               	movlw	(low (log@exponent| 0))& (0+255)
  5738  0182  00DA               	movwf	??_log
  5739  0183  085A               	movf	??_log,w
  5740  0184  00F3               	movwf	frexp@eptr
  5741  0185  0857               	movf	log@x,w
  5742  0186  00F0               	movwf	frexp@value
  5743  0187  0858               	movf	log@x+1,w
  5744  0188  00F1               	movwf	frexp@value+1
  5745  0189  0859               	movf	log@x+2,w
  5746  018A  00F2               	movwf	frexp@value+2
  5747  018B  318D  2568  3181   	fcall	_frexp
  5748  018E  0870               	movf	?_frexp,w
  5749  018F  0020               	movlb	0	; select bank0
  5750  0190  00A3               	movwf	___ftmul@f2
  5751  0191  0871               	movf	?_frexp+1,w
  5752  0192  00A4               	movwf	___ftmul@f2+1
  5753  0193  0872               	movf	?_frexp+2,w
  5754  0194  00A5               	movwf	___ftmul@f2+2
  5755  0195  3181  21F3  3181   	fcall	___ftmul
  5756  0198  0020               	movlb	0	; select bank0
  5757  0199  0820               	movf	?___ftmul,w
  5758  019A  00C3               	movwf	___ftadd@f2
  5759  019B  0821               	movf	?___ftmul+1,w
  5760  019C  00C4               	movwf	___ftadd@f2+1
  5761  019D  0822               	movf	?___ftmul+2,w
  5762  019E  00C5               	movwf	___ftadd@f2+2
  5763  019F  3183  2370  3181   	fcall	___ftadd
  5764  01A2  0020               	movlb	0	; select bank0
  5765  01A3  0840               	movf	?___ftadd,w
  5766  01A4  00D7               	movwf	log@x
  5767  01A5  0841               	movf	?___ftadd+1,w
  5768  01A6  00D8               	movwf	log@x+1
  5769  01A7  0842               	movf	?___ftadd+2,w
  5770  01A8  00D9               	movwf	log@x+2
  5771  01A9  30FF               	movlw	255
  5772  01AA  07DB               	addwf	log@exponent,f
  5773  01AB  30FF               	movlw	255
  5774  01AC  3DDC               	addwfc	log@exponent+1,f
  5775  01AD  0857               	movf	log@x,w
  5776  01AE  00CD               	movwf	eval_poly@x
  5777  01AF  0858               	movf	log@x+1,w
  5778  01B0  00CE               	movwf	eval_poly@x+1
  5779  01B1  0859               	movf	log@x+2,w
  5780  01B2  00CF               	movwf	eval_poly@x+2
  5781  01B3  3000               	movlw	low (log@coeff| (0+32768))
  5782  01B4  00D0               	movwf	eval_poly@d
  5783  01B5  3090               	movlw	high (log@coeff| (0+32768))
  5784  01B6  00D1               	movwf	eval_poly@d+1
  5785  01B7  3008               	movlw	8
  5786  01B8  00D2               	movwf	eval_poly@n
  5787  01B9  3000               	movlw	0
  5788  01BA  00D3               	movwf	eval_poly@n+1
  5789  01BB  318E  26BA  3181   	fcall	_eval_poly
  5790  01BE  0020               	movlb	0	; select bank0
  5791  01BF  084D               	movf	?_eval_poly,w
  5792  01C0  00D7               	movwf	log@x
  5793  01C1  084E               	movf	?_eval_poly+1,w
  5794  01C2  00D8               	movwf	log@x+1
  5795  01C3  084F               	movf	?_eval_poly+2,w
  5796  01C4  00D9               	movwf	log@x+2
  5797  01C5  0857               	movf	log@x,w
  5798  01C6  00C0               	movwf	___ftadd@f1
  5799  01C7  0858               	movf	log@x+1,w
  5800  01C8  00C1               	movwf	___ftadd@f1+1
  5801  01C9  0859               	movf	log@x+2,w
  5802  01CA  00C2               	movwf	___ftadd@f1+2
  5803  01CB  3072               	movlw	114
  5804  01CC  00A0               	movwf	___ftmul@f1
  5805  01CD  3031               	movlw	49
  5806  01CE  00A1               	movwf	___ftmul@f1+1
  5807  01CF  303F               	movlw	63
  5808  01D0  00A2               	movwf	___ftmul@f1+2
  5809  01D1  085C               	movf	log@exponent+1,w
  5810  01D2  00F9               	movwf	___awtoft@c+1
  5811  01D3  085B               	movf	log@exponent,w
  5812  01D4  00F8               	movwf	___awtoft@c
  5813  01D5  318C  2485  3181   	fcall	___awtoft
  5814  01D8  0878               	movf	?___awtoft,w
  5815  01D9  0020               	movlb	0	; select bank0
  5816  01DA  00A3               	movwf	___ftmul@f2
  5817  01DB  0879               	movf	?___awtoft+1,w
  5818  01DC  00A4               	movwf	___ftmul@f2+1
  5819  01DD  087A               	movf	?___awtoft+2,w
  5820  01DE  00A5               	movwf	___ftmul@f2+2
  5821  01DF  3181  21F3  3181   	fcall	___ftmul
  5822  01E2  0020               	movlb	0	; select bank0
  5823  01E3  0820               	movf	?___ftmul,w
  5824  01E4  00C3               	movwf	___ftadd@f2
  5825  01E5  0821               	movf	?___ftmul+1,w
  5826  01E6  00C4               	movwf	___ftadd@f2+1
  5827  01E7  0822               	movf	?___ftmul+2,w
  5828  01E8  00C5               	movwf	___ftadd@f2+2
  5829  01E9  3183  2370         	fcall	___ftadd
  5830  01EB  0020               	movlb	0	; select bank0
  5831  01EC  0840               	movf	?___ftadd,w
  5832  01ED  00D7               	movwf	?_log
  5833  01EE  0841               	movf	?___ftadd+1,w
  5834  01EF  00D8               	movwf	?_log+1
  5835  01F0  0842               	movf	?___ftadd+2,w
  5836  01F1  00D9               	movwf	?_log+2
  5837  01F2  0008               	return
  5838  01F3                     __end_of_log:	
  5839                           
  5840                           	psect	text3
  5841  0D68                     __ptext3:	
  5842 ;; *************** function _frexp *****************
  5843 ;; Defined at:
  5844 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\frexp.c"
  5845 ;; Parameters:    Size  Location     Type
  5846 ;;  value           3    0[COMMON] int 
  5847 ;;  eptr            1    3[COMMON] PTR int 
  5848 ;;		 -> log@exponent(2), 
  5849 ;; Auto vars:     Size  Location     Type
  5850 ;;		None
  5851 ;; Return value:  Size  Location     Type
  5852 ;;                  3    0[COMMON] PTR int 
  5853 ;; Registers used:
  5854 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5855 ;; Tracked objects:
  5856 ;;		On entry : 0/0
  5857 ;;		On exit  : 0/0
  5858 ;;		Unchanged: 0/0
  5859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5860 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5862 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5863 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5864 ;;Total ram usage:        6 bytes
  5865 ;; Hardware stack levels used:    1
  5866 ;; This function calls:
  5867 ;;		Nothing
  5868 ;; This function is called by:
  5869 ;;		_log
  5870 ;; This function uses a non-reentrant model
  5871 ;;
  5872                           
  5873                           
  5874                           ;psect for function _frexp
  5875  0D68                     _frexp:	
  5876                           
  5877                           ;incstack = 0
  5878                           ; Regs used in _frexp: [wreg+fsr1l+fsr1h+status,2+status,0]
  5879  0D68  0872               	movf	frexp@value+2,w
  5880  0D69  0471               	iorwf	frexp@value+1,w
  5881  0D6A  0470               	iorwf	frexp@value,w
  5882  0D6B  1D03               	skipz
  5883  0D6C  2D7A               	goto	l1881
  5884  0D6D  0873               	movf	frexp@eptr,w
  5885  0D6E  0086               	movwf	6
  5886  0D6F  0187               	clrf	7
  5887  0D70  3000               	movlw	0
  5888  0D71  3FC0               	movwi [0]fsr1
  5889  0D72  3FC1               	movwi [1]fsr1
  5890  0D73  3000               	movlw	0
  5891  0D74  00F0               	movwf	?_frexp
  5892  0D75  3000               	movlw	0
  5893  0D76  00F1               	movwf	?_frexp+1
  5894  0D77  3000               	movlw	0
  5895  0D78  00F2               	movwf	?_frexp+2
  5896  0D79  0008               	return
  5897  0D7A                     l1881:	
  5898  0D7A  0872               	movf	frexp@value+2,w
  5899  0D7B  397F               	andlw	127
  5900  0D7C  00F4               	movwf	??_frexp
  5901  0D7D  01F5               	clrf	??_frexp+1
  5902  0D7E  35F4               	lslf	??_frexp,f
  5903  0D7F  0DF5               	rlf	??_frexp+1,f
  5904  0D80  0873               	movf	frexp@eptr,w
  5905  0D81  0086               	movwf	6
  5906  0D82  0187               	clrf	7
  5907  0D83  0874               	movf	??_frexp,w
  5908  0D84  3FC0               	movwi [0]fsr1
  5909  0D85  0875               	movf	??_frexp+1,w
  5910  0D86  3FC1               	movwi [1]fsr1
  5911  0D87  0D71               	rlf	frexp@value+1,w
  5912  0D88  0D71               	rlf	frexp@value+1,w
  5913  0D89  3901               	andlw	1
  5914  0D8A  00F4               	movwf	??_frexp
  5915  0D8B  01F5               	clrf	??_frexp+1
  5916  0D8C  0873               	movf	frexp@eptr,w
  5917  0D8D  0086               	movwf	6
  5918  0D8E  0187               	clrf	7
  5919  0D8F  0874               	movf	??_frexp,w
  5920  0D90  0481               	iorwf	1,f
  5921  0D91  3141               	addfsr 1,1
  5922  0D92  0875               	movf	??_frexp+1,w
  5923  0D93  0481               	iorwf	1,f
  5924  0D94  0873               	movf	frexp@eptr,w
  5925  0D95  0086               	movwf	6
  5926  0D96  0187               	clrf	7
  5927  0D97  3082               	movlw	130
  5928  0D98  0781               	addwf	1,f
  5929  0D99  3141               	addfsr 1,1
  5930  0D9A  30FF               	movlw	255
  5931  0D9B  3D81               	addwfc	1,f
  5932  0D9C  317F               	addfsr 1,-1
  5933  0D9D  0872               	movf	frexp@value+2,w
  5934  0D9E  3980               	andlw	-128
  5935  0D9F  383F               	iorlw	63
  5936  0DA0  00F2               	movwf	frexp@value+2
  5937  0DA1  13F1               	bcf	frexp@value+1,7
  5938  0DA2  0008               	return
  5939  0DA3                     __end_of_frexp:	
  5940                           
  5941                           	psect	text4
  5942  0EBA                     __ptext4:	
  5943 ;; *************** function _eval_poly *****************
  5944 ;; Defined at:
  5945 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\evalpoly.c"
  5946 ;; Parameters:    Size  Location     Type
  5947 ;;  x               3   45[BANK0 ] PTR int 
  5948 ;;  d               2   48[BANK0 ] PTR const 
  5949 ;;		 -> log@coeff(27), 
  5950 ;;  n               2   50[BANK0 ] int 
  5951 ;; Auto vars:     Size  Location     Type
  5952 ;;  res             3   52[BANK0 ] int 
  5953 ;; Return value:  Size  Location     Type
  5954 ;;                  3   45[BANK0 ] int 
  5955 ;; Registers used:
  5956 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5957 ;; Tracked objects:
  5958 ;;		On entry : 0/0
  5959 ;;		On exit  : 0/0
  5960 ;;		Unchanged: 0/0
  5961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5962 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5963 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5965 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5966 ;;Total ram usage:       10 bytes
  5967 ;; Hardware stack levels used:    1
  5968 ;; Hardware stack levels required when called:    2
  5969 ;; This function calls:
  5970 ;;		___ftadd
  5971 ;;		___ftmul
  5972 ;;		___wmul
  5973 ;; This function is called by:
  5974 ;;		_log
  5975 ;; This function uses a non-reentrant model
  5976 ;;
  5977                           
  5978                           
  5979                           ;psect for function _eval_poly
  5980  0EBA                     _eval_poly:	
  5981                           
  5982                           ;incstack = 0
  5983                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5984  0EBA  0020               	movlb	0	; select bank0
  5985  0EBB  0853               	movf	eval_poly@n+1,w
  5986  0EBC  00F1               	movwf	___wmul@multiplier+1
  5987  0EBD  0852               	movf	eval_poly@n,w
  5988  0EBE  00F0               	movwf	___wmul@multiplier
  5989  0EBF  3003               	movlw	3
  5990  0EC0  00F2               	movwf	___wmul@multiplicand
  5991  0EC1  3000               	movlw	0
  5992  0EC2  00F3               	movwf	___wmul@multiplicand+1
  5993  0EC3  318C  244C  318E   	fcall	___wmul
  5994  0EC6  0020               	movlb	0	; select bank0
  5995  0EC7  0850               	movf	eval_poly@d,w
  5996  0EC8  0770               	addwf	?___wmul,w
  5997  0EC9  0084               	movwf	4
  5998  0ECA  0851               	movf	eval_poly@d+1,w
  5999  0ECB  3D71               	addwfc	?___wmul+1,w
  6000  0ECC  0085               	movwf	5
  6001  0ECD  3F00               	moviw [0]fsr0
  6002  0ECE  00D4               	movwf	eval_poly@res
  6003  0ECF  3F01               	moviw [1]fsr0
  6004  0ED0  00D5               	movwf	eval_poly@res+1
  6005  0ED1  3F02               	moviw [2]fsr0
  6006  0ED2                     L1:	
  6007  0ED2  00D6               	movwf	eval_poly@res+2
  6008  0ED3  0852               	movf	eval_poly@n,w
  6009  0ED4  0453               	iorwf	eval_poly@n+1,w
  6010  0ED5  1903               	btfsc	3,2
  6011  0ED6  2F13               	goto	l1899
  6012  0ED7  30FF               	movlw	255
  6013  0ED8  07D2               	addwf	eval_poly@n,f
  6014  0ED9  30FF               	movlw	255
  6015  0EDA  3DD3               	addwfc	eval_poly@n+1,f
  6016  0EDB  0853               	movf	eval_poly@n+1,w
  6017  0EDC  00F1               	movwf	___wmul@multiplier+1
  6018  0EDD  0852               	movf	eval_poly@n,w
  6019  0EDE  00F0               	movwf	___wmul@multiplier
  6020  0EDF  3003               	movlw	3
  6021  0EE0  00F2               	movwf	___wmul@multiplicand
  6022  0EE1  3000               	movlw	0
  6023  0EE2  00F3               	movwf	___wmul@multiplicand+1
  6024  0EE3  318C  244C  318E   	fcall	___wmul
  6025  0EE6  0020               	movlb	0	; select bank0
  6026  0EE7  0850               	movf	eval_poly@d,w
  6027  0EE8  0770               	addwf	?___wmul,w
  6028  0EE9  0084               	movwf	4
  6029  0EEA  0851               	movf	eval_poly@d+1,w
  6030  0EEB  3D71               	addwfc	?___wmul+1,w
  6031  0EEC  0085               	movwf	5
  6032  0EED  3F00               	moviw [0]fsr0
  6033  0EEE  00C0               	movwf	___ftadd@f1
  6034  0EEF  3F01               	moviw [1]fsr0
  6035  0EF0  00C1               	movwf	___ftadd@f1+1
  6036  0EF1  3F02               	moviw [2]fsr0
  6037  0EF2  00C2               	movwf	___ftadd@f1+2
  6038  0EF3  0854               	movf	eval_poly@res,w
  6039  0EF4  00A0               	movwf	___ftmul@f1
  6040  0EF5  0855               	movf	eval_poly@res+1,w
  6041  0EF6  00A1               	movwf	___ftmul@f1+1
  6042  0EF7  0856               	movf	eval_poly@res+2,w
  6043  0EF8  00A2               	movwf	___ftmul@f1+2
  6044  0EF9  084D               	movf	eval_poly@x,w
  6045  0EFA  00A3               	movwf	___ftmul@f2
  6046  0EFB  084E               	movf	eval_poly@x+1,w
  6047  0EFC  00A4               	movwf	___ftmul@f2+1
  6048  0EFD  084F               	movf	eval_poly@x+2,w
  6049  0EFE  00A5               	movwf	___ftmul@f2+2
  6050  0EFF  3181  21F3  318E   	fcall	___ftmul
  6051  0F02  0020               	movlb	0	; select bank0
  6052  0F03  0820               	movf	?___ftmul,w
  6053  0F04  00C3               	movwf	___ftadd@f2
  6054  0F05  0821               	movf	?___ftmul+1,w
  6055  0F06  00C4               	movwf	___ftadd@f2+1
  6056  0F07  0822               	movf	?___ftmul+2,w
  6057  0F08  00C5               	movwf	___ftadd@f2+2
  6058  0F09  3183  2370  318E   	fcall	___ftadd
  6059  0F0C  0020               	movlb	0	; select bank0
  6060  0F0D  0840               	movf	?___ftadd,w
  6061  0F0E  00D4               	movwf	eval_poly@res
  6062  0F0F  0841               	movf	?___ftadd+1,w
  6063  0F10  00D5               	movwf	eval_poly@res+1
  6064  0F11  0842               	movf	?___ftadd+2,w
  6065  0F12  2ED2               	goto	L1
  6066  0F13                     l1899:	
  6067  0F13  0854               	movf	eval_poly@res,w
  6068  0F14  00CD               	movwf	?_eval_poly
  6069  0F15  0855               	movf	eval_poly@res+1,w
  6070  0F16  00CE               	movwf	?_eval_poly+1
  6071  0F17  0856               	movf	eval_poly@res+2,w
  6072  0F18  00CF               	movwf	?_eval_poly+2
  6073  0F19  0008               	return
  6074  0F1A                     __end_of_eval_poly:	
  6075                           
  6076                           	psect	text5
  6077  01F3                     __ptext5:	
  6078 ;; *************** function ___ftmul *****************
  6079 ;; Defined at:
  6080 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftmul.c"
  6081 ;; Parameters:    Size  Location     Type
  6082 ;;  f1              3    0[BANK0 ] float 
  6083 ;;  f2              3    3[BANK0 ] float 
  6084 ;; Auto vars:     Size  Location     Type
  6085 ;;  f3_as_produc    3   11[BANK0 ] unsigned um
  6086 ;;  sign            1   15[BANK0 ] unsigned char 
  6087 ;;  cntr            1   14[BANK0 ] unsigned char 
  6088 ;;  exp             1   10[BANK0 ] unsigned char 
  6089 ;; Return value:  Size  Location     Type
  6090 ;;                  3    0[BANK0 ] float 
  6091 ;; Registers used:
  6092 ;;		wreg, status,2, status,0, pclath, cstack
  6093 ;; Tracked objects:
  6094 ;;		On entry : 0/0
  6095 ;;		On exit  : 0/0
  6096 ;;		Unchanged: 0/0
  6097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6098 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6099 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6100 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6101 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6102 ;;Total ram usage:       16 bytes
  6103 ;; Hardware stack levels used:    1
  6104 ;; Hardware stack levels required when called:    1
  6105 ;; This function calls:
  6106 ;;		___ftpack
  6107 ;; This function is called by:
  6108 ;;		_tempCalc
  6109 ;;		_log
  6110 ;;		_eval_poly
  6111 ;; This function uses a non-reentrant model
  6112 ;;
  6113                           
  6114                           
  6115                           ;psect for function ___ftmul
  6116  01F3                     ___ftmul:	
  6117                           
  6118                           ;incstack = 0
  6119                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  6120  01F3  0020               	movlb	0	; select bank0
  6121  01F4  0820               	movf	___ftmul@f1,w
  6122  01F5  00A6               	movwf	??___ftmul
  6123  01F6  0821               	movf	___ftmul@f1+1,w
  6124  01F7  00A7               	movwf	??___ftmul+1
  6125  01F8  0822               	movf	___ftmul@f1+2,w
  6126  01F9  00A8               	movwf	??___ftmul+2
  6127  01FA  1003               	clrc
  6128  01FB  0D27               	rlf	??___ftmul+1,w
  6129  01FC  0D28               	rlf	??___ftmul+2,w
  6130  01FD  00A9               	movwf	??___ftmul+3
  6131  01FE  0829               	movf	??___ftmul+3,w
  6132  01FF  00AA               	movwf	___ftmul@exp
  6133  0200  082A               	movf	___ftmul@exp,w
  6134  0201  1D03               	btfss	3,2
  6135  0202  2A0A               	goto	l1767
  6136  0203  3000               	movlw	0
  6137  0204  00A0               	movwf	?___ftmul
  6138  0205  3000               	movlw	0
  6139  0206  00A1               	movwf	?___ftmul+1
  6140  0207  3000               	movlw	0
  6141  0208  00A2               	movwf	?___ftmul+2
  6142  0209  0008               	return
  6143  020A                     l1767:	
  6144  020A  0823               	movf	___ftmul@f2,w
  6145  020B  00A6               	movwf	??___ftmul
  6146  020C  0824               	movf	___ftmul@f2+1,w
  6147  020D  00A7               	movwf	??___ftmul+1
  6148  020E  0825               	movf	___ftmul@f2+2,w
  6149  020F  00A8               	movwf	??___ftmul+2
  6150  0210  1003               	clrc
  6151  0211  0D27               	rlf	??___ftmul+1,w
  6152  0212  0D28               	rlf	??___ftmul+2,w
  6153  0213  00A9               	movwf	??___ftmul+3
  6154  0214  0829               	movf	??___ftmul+3,w
  6155  0215  00AF               	movwf	___ftmul@sign
  6156  0216  082F               	movf	___ftmul@sign,w
  6157  0217  1D03               	btfss	3,2
  6158  0218  2A20               	goto	l1773
  6159  0219  3000               	movlw	0
  6160  021A  00A0               	movwf	?___ftmul
  6161  021B  3000               	movlw	0
  6162  021C  00A1               	movwf	?___ftmul+1
  6163  021D  3000               	movlw	0
  6164  021E  00A2               	movwf	?___ftmul+2
  6165  021F  0008               	return
  6166  0220                     l1773:	
  6167  0220  082F               	movf	___ftmul@sign,w
  6168  0221  3E7B               	addlw	123
  6169  0222  00A6               	movwf	??___ftmul
  6170  0223  0826               	movf	??___ftmul,w
  6171  0224  07AA               	addwf	___ftmul@exp,f
  6172  0225  0820               	movf	___ftmul@f1,w
  6173  0226  00A6               	movwf	??___ftmul
  6174  0227  0821               	movf	___ftmul@f1+1,w
  6175  0228  00A7               	movwf	??___ftmul+1
  6176  0229  0822               	movf	___ftmul@f1+2,w
  6177  022A  00A8               	movwf	??___ftmul+2
  6178  022B  3010               	movlw	16
  6179  022C                     u1795:	
  6180  022C  36A8               	lsrf	??___ftmul+2,f
  6181  022D  0CA7               	rrf	??___ftmul+1,f
  6182  022E  0CA6               	rrf	??___ftmul,f
  6183  022F  0B89               	decfsz	9,f
  6184  0230  2A2C               	goto	u1795
  6185  0231  0826               	movf	??___ftmul,w
  6186  0232  00A9               	movwf	??___ftmul+3
  6187  0233  0829               	movf	??___ftmul+3,w
  6188  0234  00AF               	movwf	___ftmul@sign
  6189  0235  0823               	movf	___ftmul@f2,w
  6190  0236  00A6               	movwf	??___ftmul
  6191  0237  0824               	movf	___ftmul@f2+1,w
  6192  0238  00A7               	movwf	??___ftmul+1
  6193  0239  0825               	movf	___ftmul@f2+2,w
  6194  023A  00A8               	movwf	??___ftmul+2
  6195  023B  3010               	movlw	16
  6196  023C                     u1805:	
  6197  023C  36A8               	lsrf	??___ftmul+2,f
  6198  023D  0CA7               	rrf	??___ftmul+1,f
  6199  023E  0CA6               	rrf	??___ftmul,f
  6200  023F  0B89               	decfsz	9,f
  6201  0240  2A3C               	goto	u1805
  6202  0241  0826               	movf	??___ftmul,w
  6203  0242  00A9               	movwf	??___ftmul+3
  6204  0243  0829               	movf	??___ftmul+3,w
  6205  0244  06AF               	xorwf	___ftmul@sign,f
  6206  0245  3080               	movlw	128
  6207  0246  00A6               	movwf	??___ftmul
  6208  0247  0826               	movf	??___ftmul,w
  6209  0248  05AF               	andwf	___ftmul@sign,f
  6210  0249  17A1               	bsf	___ftmul@f1+1,7
  6211  024A  17A4               	bsf	___ftmul@f2+1,7
  6212  024B  30FF               	movlw	255
  6213  024C  05A3               	andwf	___ftmul@f2,f
  6214  024D  30FF               	movlw	255
  6215  024E  05A4               	andwf	___ftmul@f2+1,f
  6216  024F  3000               	movlw	0
  6217  0250  05A5               	andwf	___ftmul@f2+2,f
  6218  0251  3000               	movlw	0
  6219  0252  00AB               	movwf	___ftmul@f3_as_product
  6220  0253  3000               	movlw	0
  6221  0254  00AC               	movwf	___ftmul@f3_as_product+1
  6222  0255  3000               	movlw	0
  6223  0256  00AD               	movwf	___ftmul@f3_as_product+2
  6224  0257  3007               	movlw	7
  6225  0258  00A6               	movwf	??___ftmul
  6226  0259  0826               	movf	??___ftmul,w
  6227  025A  00AE               	movwf	___ftmul@cntr
  6228  025B                     l1785:	
  6229  025B  1C20               	btfss	___ftmul@f1,0
  6230  025C  2A63               	goto	l1789
  6231  025D  0823               	movf	___ftmul@f2,w
  6232  025E  07AB               	addwf	___ftmul@f3_as_product,f
  6233  025F  0824               	movf	___ftmul@f2+1,w
  6234  0260  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  6235  0261  0825               	movf	___ftmul@f2+2,w
  6236  0262  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  6237  0263                     l1789:	
  6238  0263  3001               	movlw	1
  6239  0264                     u1825:	
  6240  0264  36A2               	lsrf	___ftmul@f1+2,f
  6241  0265  0CA1               	rrf	___ftmul@f1+1,f
  6242  0266  0CA0               	rrf	___ftmul@f1,f
  6243  0267  0B89               	decfsz	9,f
  6244  0268  2A64               	goto	u1825
  6245  0269  3001               	movlw	1
  6246  026A                     u1835:	
  6247  026A  35A3               	lslf	___ftmul@f2,f
  6248  026B  0DA4               	rlf	___ftmul@f2+1,f
  6249  026C  0DA5               	rlf	___ftmul@f2+2,f
  6250  026D  0B89               	decfsz	9,f
  6251  026E  2A6A               	goto	u1835
  6252  026F  3001               	movlw	1
  6253  0270  02AE               	subwf	___ftmul@cntr,f
  6254  0271  1D03               	btfss	3,2
  6255  0272  2A5B               	goto	l1785
  6256  0273  3009               	movlw	9
  6257  0274  00A6               	movwf	??___ftmul
  6258  0275  0826               	movf	??___ftmul,w
  6259  0276  00AE               	movwf	___ftmul@cntr
  6260  0277                     l1797:	
  6261  0277  1C20               	btfss	___ftmul@f1,0
  6262  0278  2A7F               	goto	l1801
  6263  0279  0823               	movf	___ftmul@f2,w
  6264  027A  07AB               	addwf	___ftmul@f3_as_product,f
  6265  027B  0824               	movf	___ftmul@f2+1,w
  6266  027C  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  6267  027D  0825               	movf	___ftmul@f2+2,w
  6268  027E  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  6269  027F                     l1801:	
  6270  027F  3001               	movlw	1
  6271  0280                     u1865:	
  6272  0280  36A2               	lsrf	___ftmul@f1+2,f
  6273  0281  0CA1               	rrf	___ftmul@f1+1,f
  6274  0282  0CA0               	rrf	___ftmul@f1,f
  6275  0283  0B89               	decfsz	9,f
  6276  0284  2A80               	goto	u1865
  6277  0285  3001               	movlw	1
  6278  0286                     u1875:	
  6279  0286  36AD               	lsrf	___ftmul@f3_as_product+2,f
  6280  0287  0CAC               	rrf	___ftmul@f3_as_product+1,f
  6281  0288  0CAB               	rrf	___ftmul@f3_as_product,f
  6282  0289  0B89               	decfsz	9,f
  6283  028A  2A86               	goto	u1875
  6284  028B  3001               	movlw	1
  6285  028C  02AE               	subwf	___ftmul@cntr,f
  6286  028D  1D03               	btfss	3,2
  6287  028E  2A77               	goto	l1797
  6288  028F  082B               	movf	___ftmul@f3_as_product,w
  6289  0290  00F0               	movwf	___ftpack@arg
  6290  0291  082C               	movf	___ftmul@f3_as_product+1,w
  6291  0292  00F1               	movwf	___ftpack@arg+1
  6292  0293  082D               	movf	___ftmul@f3_as_product+2,w
  6293  0294  00F2               	movwf	___ftpack@arg+2
  6294  0295  082A               	movf	___ftmul@exp,w
  6295  0296  00A6               	movwf	??___ftmul
  6296  0297  0826               	movf	??___ftmul,w
  6297  0298  00F3               	movwf	___ftpack@exp
  6298  0299  082F               	movf	___ftmul@sign,w
  6299  029A  00A7               	movwf	??___ftmul+1
  6300  029B  0827               	movf	??___ftmul+1,w
  6301  029C  00F4               	movwf	___ftpack@sign
  6302  029D  318F  271A         	fcall	___ftpack
  6303  029F  0870               	movf	?___ftpack,w
  6304  02A0  0020               	movlb	0	; select bank0
  6305  02A1  00A0               	movwf	?___ftmul
  6306  02A2  0871               	movf	?___ftpack+1,w
  6307  02A3  00A1               	movwf	?___ftmul+1
  6308  02A4  0872               	movf	?___ftpack+2,w
  6309  02A5  00A2               	movwf	?___ftmul+2
  6310  02A6  0008               	return
  6311  02A7                     __end_of___ftmul:	
  6312                           
  6313                           	psect	text6
  6314  0D2D                     __ptext6:	
  6315 ;; *************** function ___ftge *****************
  6316 ;; Defined at:
  6317 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftge.c"
  6318 ;; Parameters:    Size  Location     Type
  6319 ;;  ff1             3    0[COMMON] float 
  6320 ;;  ff2             3    3[COMMON] float 
  6321 ;; Auto vars:     Size  Location     Type
  6322 ;;		None
  6323 ;; Return value:  Size  Location     Type
  6324 ;;		None               void
  6325 ;; Registers used:
  6326 ;;		wreg, status,2, status,0
  6327 ;; Tracked objects:
  6328 ;;		On entry : 0/0
  6329 ;;		On exit  : 0/0
  6330 ;;		Unchanged: 0/0
  6331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6332 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6334 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6335 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6336 ;;Total ram usage:        9 bytes
  6337 ;; Hardware stack levels used:    1
  6338 ;; This function calls:
  6339 ;;		Nothing
  6340 ;; This function is called by:
  6341 ;;		_log
  6342 ;; This function uses a non-reentrant model
  6343 ;;
  6344                           
  6345                           
  6346                           ;psect for function ___ftge
  6347  0D2D                     ___ftge:	
  6348                           
  6349                           ;incstack = 0
  6350                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  6351  0D2D  1FF2               	btfss	___ftge@ff1+2,7
  6352  0D2E  2D43               	goto	l1857
  6353  0D2F  0970               	comf	___ftge@ff1,w
  6354  0D30  00F6               	movwf	??___ftge
  6355  0D31  0971               	comf	___ftge@ff1+1,w
  6356  0D32  00F7               	movwf	??___ftge+1
  6357  0D33  0972               	comf	___ftge@ff1+2,w
  6358  0D34  00F8               	movwf	??___ftge+2
  6359  0D35  0AF6               	incf	??___ftge,f
  6360  0D36  1903               	skipnz
  6361  0D37  0AF7               	incf	??___ftge+1,f
  6362  0D38  1903               	skipnz
  6363  0D39  0AF8               	incf	??___ftge+2,f
  6364  0D3A  3000               	movlw	0
  6365  0D3B  0776               	addwf	??___ftge,w
  6366  0D3C  00F0               	movwf	___ftge@ff1
  6367  0D3D  3000               	movlw	0
  6368  0D3E  3D77               	addwfc	??___ftge+1,w
  6369  0D3F  00F1               	movwf	___ftge@ff1+1
  6370  0D40  3080               	movlw	128
  6371  0D41  3D78               	addwfc	??___ftge+2,w
  6372  0D42  00F2               	movwf	___ftge@ff1+2
  6373  0D43                     l1857:	
  6374  0D43  1FF5               	btfss	___ftge@ff2+2,7
  6375  0D44  2D59               	goto	l1861
  6376  0D45  0973               	comf	___ftge@ff2,w
  6377  0D46  00F6               	movwf	??___ftge
  6378  0D47  0974               	comf	___ftge@ff2+1,w
  6379  0D48  00F7               	movwf	??___ftge+1
  6380  0D49  0975               	comf	___ftge@ff2+2,w
  6381  0D4A  00F8               	movwf	??___ftge+2
  6382  0D4B  0AF6               	incf	??___ftge,f
  6383  0D4C  1903               	skipnz
  6384  0D4D  0AF7               	incf	??___ftge+1,f
  6385  0D4E  1903               	skipnz
  6386  0D4F  0AF8               	incf	??___ftge+2,f
  6387  0D50  3000               	movlw	0
  6388  0D51  0776               	addwf	??___ftge,w
  6389  0D52  00F3               	movwf	___ftge@ff2
  6390  0D53  3000               	movlw	0
  6391  0D54  3D77               	addwfc	??___ftge+1,w
  6392  0D55  00F4               	movwf	___ftge@ff2+1
  6393  0D56  3080               	movlw	128
  6394  0D57  3D78               	addwfc	??___ftge+2,w
  6395  0D58  00F5               	movwf	___ftge@ff2+2
  6396  0D59                     l1861:	
  6397  0D59  3080               	movlw	128
  6398  0D5A  06F2               	xorwf	___ftge@ff1+2,f
  6399  0D5B  3080               	movlw	128
  6400  0D5C  06F5               	xorwf	___ftge@ff2+2,f
  6401  0D5D  0875               	movf	___ftge@ff2+2,w
  6402  0D5E  0272               	subwf	___ftge@ff1+2,w
  6403  0D5F  1D03               	skipz
  6404  0D60  0008               	return
  6405  0D61  0874               	movf	___ftge@ff2+1,w
  6406  0D62  0271               	subwf	___ftge@ff1+1,w
  6407  0D63  1D03               	skipz
  6408  0D64  0008               	return
  6409  0D65  0873               	movf	___ftge@ff2,w
  6410  0D66  0270               	subwf	___ftge@ff1,w
  6411  0D67  0008               	return
  6412  0D68                     __end_of___ftge:	
  6413                           
  6414                           	psect	text7
  6415  0C85                     __ptext7:	
  6416 ;; *************** function ___awtoft *****************
  6417 ;; Defined at:
  6418 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awtoft.c"
  6419 ;; Parameters:    Size  Location     Type
  6420 ;;  c               2    8[COMMON] int 
  6421 ;; Auto vars:     Size  Location     Type
  6422 ;;  sign            1   13[COMMON] unsigned char 
  6423 ;; Return value:  Size  Location     Type
  6424 ;;                  3    8[COMMON] float 
  6425 ;; Registers used:
  6426 ;;		wreg, status,2, status,0, pclath, cstack
  6427 ;; Tracked objects:
  6428 ;;		On entry : 0/0
  6429 ;;		On exit  : 0/0
  6430 ;;		Unchanged: 0/0
  6431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6432 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6433 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6434 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6435 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6436 ;;Total ram usage:        6 bytes
  6437 ;; Hardware stack levels used:    1
  6438 ;; Hardware stack levels required when called:    1
  6439 ;; This function calls:
  6440 ;;		___ftpack
  6441 ;; This function is called by:
  6442 ;;		_tempCalc
  6443 ;;		_log
  6444 ;; This function uses a non-reentrant model
  6445 ;;
  6446                           
  6447                           
  6448                           ;psect for function ___awtoft
  6449  0C85                     ___awtoft:	
  6450                           
  6451                           ;incstack = 0
  6452                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  6453  0C85  01FD               	clrf	___awtoft@sign
  6454  0C86  1FF9               	btfss	___awtoft@c+1,7
  6455  0C87  2C8F               	goto	l1849
  6456  0C88  09F8               	comf	___awtoft@c,f
  6457  0C89  09F9               	comf	___awtoft@c+1,f
  6458  0C8A  0AF8               	incf	___awtoft@c,f
  6459  0C8B  1903               	skipnz
  6460  0C8C  0AF9               	incf	___awtoft@c+1,f
  6461  0C8D  01FD               	clrf	___awtoft@sign
  6462  0C8E  0AFD               	incf	___awtoft@sign,f
  6463  0C8F                     l1849:	
  6464  0C8F  0878               	movf	___awtoft@c,w
  6465  0C90  00F0               	movwf	___ftpack@arg
  6466  0C91  0879               	movf	___awtoft@c+1,w
  6467  0C92  00F1               	movwf	___ftpack@arg+1
  6468  0C93  01F2               	clrf	___ftpack@arg+2
  6469  0C94  308E               	movlw	142
  6470  0C95  00FB               	movwf	??___awtoft
  6471  0C96  087B               	movf	??___awtoft,w
  6472  0C97  00F3               	movwf	___ftpack@exp
  6473  0C98  087D               	movf	___awtoft@sign,w
  6474  0C99  00FC               	movwf	??___awtoft+1
  6475  0C9A  087C               	movf	??___awtoft+1,w
  6476  0C9B  00F4               	movwf	___ftpack@sign
  6477  0C9C  318F  271A         	fcall	___ftpack
  6478  0C9E  0870               	movf	?___ftpack,w
  6479  0C9F  00F8               	movwf	?___awtoft
  6480  0CA0  0871               	movf	?___ftpack+1,w
  6481  0CA1  00F9               	movwf	?___awtoft+1
  6482  0CA2  0872               	movf	?___ftpack+2,w
  6483  0CA3  00FA               	movwf	?___awtoft+2
  6484  0CA4  0008               	return
  6485  0CA5                     __end_of___awtoft:	
  6486                           
  6487                           	psect	text8
  6488  0C67                     __ptext8:	
  6489 ;; *************** function ___ftsub *****************
  6490 ;; Defined at:
  6491 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftsub.c"
  6492 ;; Parameters:    Size  Location     Type
  6493 ;;  f2              3   45[BANK0 ] float 
  6494 ;;  f1              3   48[BANK0 ] float 
  6495 ;; Auto vars:     Size  Location     Type
  6496 ;;		None
  6497 ;; Return value:  Size  Location     Type
  6498 ;;                  3   45[BANK0 ] float 
  6499 ;; Registers used:
  6500 ;;		wreg, status,2, status,0, pclath, cstack
  6501 ;; Tracked objects:
  6502 ;;		On entry : 0/0
  6503 ;;		On exit  : 0/0
  6504 ;;		Unchanged: 0/0
  6505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6506 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6509 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6510 ;;Total ram usage:        6 bytes
  6511 ;; Hardware stack levels used:    1
  6512 ;; Hardware stack levels required when called:    2
  6513 ;; This function calls:
  6514 ;;		___ftadd
  6515 ;; This function is called by:
  6516 ;;		_tempCalc
  6517 ;; This function uses a non-reentrant model
  6518 ;;
  6519                           
  6520                           
  6521                           ;psect for function ___ftsub
  6522  0C67                     ___ftsub:	
  6523                           
  6524                           ;incstack = 0
  6525                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  6526  0C67  0020               	movlb	0	; select bank0
  6527  0C68  084F               	movf	___ftsub@f2+2,w
  6528  0C69  044E               	iorwf	___ftsub@f2+1,w
  6529  0C6A  044D               	iorwf	___ftsub@f2,w
  6530  0C6B  1903               	skipnz
  6531  0C6C  2C6F               	goto	l2233
  6532  0C6D  3080               	movlw	128
  6533  0C6E  06CF               	xorwf	___ftsub@f2+2,f
  6534  0C6F                     l2233:	
  6535  0C6F  0850               	movf	___ftsub@f1,w
  6536  0C70  00C0               	movwf	___ftadd@f1
  6537  0C71  0851               	movf	___ftsub@f1+1,w
  6538  0C72  00C1               	movwf	___ftadd@f1+1
  6539  0C73  0852               	movf	___ftsub@f1+2,w
  6540  0C74  00C2               	movwf	___ftadd@f1+2
  6541  0C75  084D               	movf	___ftsub@f2,w
  6542  0C76  00C3               	movwf	___ftadd@f2
  6543  0C77  084E               	movf	___ftsub@f2+1,w
  6544  0C78  00C4               	movwf	___ftadd@f2+1
  6545  0C79  084F               	movf	___ftsub@f2+2,w
  6546  0C7A  00C5               	movwf	___ftadd@f2+2
  6547  0C7B  3183  2370         	fcall	___ftadd
  6548  0C7D  0020               	movlb	0	; select bank0
  6549  0C7E  0840               	movf	?___ftadd,w
  6550  0C7F  00CD               	movwf	?___ftsub
  6551  0C80  0841               	movf	?___ftadd+1,w
  6552  0C81  00CE               	movwf	?___ftsub+1
  6553  0C82  0842               	movf	?___ftadd+2,w
  6554  0C83  00CF               	movwf	?___ftsub+2
  6555  0C84  0008               	return
  6556  0C85                     __end_of___ftsub:	
  6557                           
  6558                           	psect	text9
  6559  0370                     __ptext9:	
  6560 ;; *************** function ___ftadd *****************
  6561 ;; Defined at:
  6562 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftadd.c"
  6563 ;; Parameters:    Size  Location     Type
  6564 ;;  f1              3   32[BANK0 ] float 
  6565 ;;  f2              3   35[BANK0 ] float 
  6566 ;; Auto vars:     Size  Location     Type
  6567 ;;  exp1            1   44[BANK0 ] unsigned char 
  6568 ;;  exp2            1   43[BANK0 ] unsigned char 
  6569 ;;  sign            1   42[BANK0 ] unsigned char 
  6570 ;; Return value:  Size  Location     Type
  6571 ;;                  3   32[BANK0 ] float 
  6572 ;; Registers used:
  6573 ;;		wreg, status,2, status,0, pclath, cstack
  6574 ;; Tracked objects:
  6575 ;;		On entry : 0/0
  6576 ;;		On exit  : 0/0
  6577 ;;		Unchanged: 0/0
  6578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6579 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6580 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6581 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6582 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6583 ;;Total ram usage:       13 bytes
  6584 ;; Hardware stack levels used:    1
  6585 ;; Hardware stack levels required when called:    1
  6586 ;; This function calls:
  6587 ;;		___ftpack
  6588 ;; This function is called by:
  6589 ;;		_tempCalc
  6590 ;;		___ftsub
  6591 ;;		_log
  6592 ;;		_eval_poly
  6593 ;; This function uses a non-reentrant model
  6594 ;;
  6595                           
  6596                           
  6597                           ;psect for function ___ftadd
  6598  0370                     ___ftadd:	
  6599                           
  6600                           ;incstack = 0
  6601                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  6602  0370  0020               	movlb	0	; select bank0
  6603  0371  0840               	movf	___ftadd@f1,w
  6604  0372  00C6               	movwf	??___ftadd
  6605  0373  0841               	movf	___ftadd@f1+1,w
  6606  0374  00C7               	movwf	??___ftadd+1
  6607  0375  0842               	movf	___ftadd@f1+2,w
  6608  0376  00C8               	movwf	??___ftadd+2
  6609  0377  1003               	clrc
  6610  0378  0D47               	rlf	??___ftadd+1,w
  6611  0379  0D48               	rlf	??___ftadd+2,w
  6612  037A  00C9               	movwf	??___ftadd+3
  6613  037B  0849               	movf	??___ftadd+3,w
  6614  037C  00CC               	movwf	___ftadd@exp1
  6615  037D  0843               	movf	___ftadd@f2,w
  6616  037E  00C6               	movwf	??___ftadd
  6617  037F  0844               	movf	___ftadd@f2+1,w
  6618  0380  00C7               	movwf	??___ftadd+1
  6619  0381  0845               	movf	___ftadd@f2+2,w
  6620  0382  00C8               	movwf	??___ftadd+2
  6621  0383  1003               	clrc
  6622  0384  0D47               	rlf	??___ftadd+1,w
  6623  0385  0D48               	rlf	??___ftadd+2,w
  6624  0386  00C9               	movwf	??___ftadd+3
  6625  0387  0849               	movf	??___ftadd+3,w
  6626  0388  00CB               	movwf	___ftadd@exp2
  6627  0389  084C               	movf	___ftadd@exp1,w
  6628  038A  1903               	btfsc	3,2
  6629  038B  2B98               	goto	l1697
  6630  038C  084B               	movf	___ftadd@exp2,w
  6631  038D  024C               	subwf	___ftadd@exp1,w
  6632  038E  1803               	skipnc
  6633  038F  2B9F               	goto	l1701
  6634  0390  034C               	decf	___ftadd@exp1,w
  6635  0391  3AFF               	xorlw	255
  6636  0392  074B               	addwf	___ftadd@exp2,w
  6637  0393  00C6               	movwf	??___ftadd
  6638  0394  3019               	movlw	25
  6639  0395  0246               	subwf	??___ftadd,w
  6640  0396  1C03               	skipc
  6641  0397  2B9F               	goto	l1701
  6642  0398                     l1697:	
  6643  0398  0843               	movf	___ftadd@f2,w
  6644  0399  00C0               	movwf	?___ftadd
  6645  039A  0844               	movf	___ftadd@f2+1,w
  6646  039B  00C1               	movwf	?___ftadd+1
  6647  039C  0845               	movf	___ftadd@f2+2,w
  6648  039D  00C2               	movwf	?___ftadd+2
  6649  039E  0008               	return
  6650  039F                     l1701:	
  6651  039F  084B               	movf	___ftadd@exp2,w
  6652  03A0  1903               	btfsc	3,2
  6653  03A1  0008               	return
  6654  03A2  084C               	movf	___ftadd@exp1,w
  6655  03A3  024B               	subwf	___ftadd@exp2,w
  6656  03A4  1803               	skipnc
  6657  03A5  2BAE               	goto	l1707
  6658  03A6  034B               	decf	___ftadd@exp2,w
  6659  03A7  3AFF               	xorlw	255
  6660  03A8  074C               	addwf	___ftadd@exp1,w
  6661  03A9  00C6               	movwf	??___ftadd
  6662  03AA  3019               	movlw	25
  6663  03AB  0246               	subwf	??___ftadd,w
  6664  03AC  1803               	btfsc	3,0
  6665  03AD  0008               	return
  6666  03AE                     l1707:	
  6667  03AE  3006               	movlw	6
  6668  03AF  00C6               	movwf	??___ftadd
  6669  03B0  0846               	movf	??___ftadd,w
  6670  03B1  00CA               	movwf	___ftadd@sign
  6671  03B2  1BC2               	btfsc	___ftadd@f1+2,7
  6672  03B3  17CA               	bsf	___ftadd@sign,7
  6673  03B4  1BC5               	btfsc	___ftadd@f2+2,7
  6674  03B5  174A               	bsf	___ftadd@sign,6
  6675  03B6  17C1               	bsf	___ftadd@f1+1,7
  6676  03B7  30FF               	movlw	255
  6677  03B8  05C0               	andwf	___ftadd@f1,f
  6678  03B9  30FF               	movlw	255
  6679  03BA  05C1               	andwf	___ftadd@f1+1,f
  6680  03BB  3000               	movlw	0
  6681  03BC  05C2               	andwf	___ftadd@f1+2,f
  6682  03BD  17C4               	bsf	___ftadd@f2+1,7
  6683  03BE  30FF               	movlw	255
  6684  03BF  05C3               	andwf	___ftadd@f2,f
  6685  03C0  30FF               	movlw	255
  6686  03C1  05C4               	andwf	___ftadd@f2+1,f
  6687  03C2  3000               	movlw	0
  6688  03C3  05C5               	andwf	___ftadd@f2+2,f
  6689  03C4  084B               	movf	___ftadd@exp2,w
  6690  03C5  024C               	subwf	___ftadd@exp1,w
  6691  03C6  1803               	skipnc
  6692  03C7  2BEA               	goto	l1729
  6693  03C8                     l1719:	
  6694  03C8  3001               	movlw	1
  6695  03C9                     u1635:	
  6696  03C9  35C3               	lslf	___ftadd@f2,f
  6697  03CA  0DC4               	rlf	___ftadd@f2+1,f
  6698  03CB  0DC5               	rlf	___ftadd@f2+2,f
  6699  03CC  0B89               	decfsz	9,f
  6700  03CD  2BC9               	goto	u1635
  6701  03CE  3001               	movlw	1
  6702  03CF  02CB               	subwf	___ftadd@exp2,f
  6703  03D0  084B               	movf	___ftadd@exp2,w
  6704  03D1  064C               	xorwf	___ftadd@exp1,w
  6705  03D2  1903               	skipnz
  6706  03D3  2BE5               	goto	l1727
  6707  03D4  3001               	movlw	1
  6708  03D5  02CA               	subwf	___ftadd@sign,f
  6709  03D6  084A               	movf	___ftadd@sign,w
  6710  03D7  3907               	andlw	7
  6711  03D8  1903               	btfsc	3,2
  6712  03D9  2BE5               	goto	l1727
  6713  03DA  2BC8               	goto	l1719
  6714  03DB                     l1725:	
  6715  03DB  3001               	movlw	1
  6716  03DC                     u1665:	
  6717  03DC  36C2               	lsrf	___ftadd@f1+2,f
  6718  03DD  0CC1               	rrf	___ftadd@f1+1,f
  6719  03DE  0CC0               	rrf	___ftadd@f1,f
  6720  03DF  0B89               	decfsz	9,f
  6721  03E0  2BDC               	goto	u1665
  6722  03E1  3001               	movlw	1
  6723  03E2  00C6               	movwf	??___ftadd
  6724  03E3  0846               	movf	??___ftadd,w
  6725  03E4  07CC               	addwf	___ftadd@exp1,f
  6726  03E5                     l1727:	
  6727  03E5  084C               	movf	___ftadd@exp1,w
  6728  03E6  064B               	xorwf	___ftadd@exp2,w
  6729  03E7  1903               	btfsc	3,2
  6730  03E8  2C0F               	goto	l563
  6731  03E9  2BDB               	goto	l1725
  6732  03EA                     l1729:	
  6733  03EA  084C               	movf	___ftadd@exp1,w
  6734  03EB  024B               	subwf	___ftadd@exp2,w
  6735  03EC  1803               	skipnc
  6736  03ED  2C0F               	goto	l563
  6737  03EE                     l1731:	
  6738  03EE  3001               	movlw	1
  6739  03EF                     u1695:	
  6740  03EF  35C0               	lslf	___ftadd@f1,f
  6741  03F0  0DC1               	rlf	___ftadd@f1+1,f
  6742  03F1  0DC2               	rlf	___ftadd@f1+2,f
  6743  03F2  0B89               	decfsz	9,f
  6744  03F3  2BEF               	goto	u1695
  6745  03F4  3001               	movlw	1
  6746  03F5  02CC               	subwf	___ftadd@exp1,f
  6747  03F6  084B               	movf	___ftadd@exp2,w
  6748  03F7  064C               	xorwf	___ftadd@exp1,w
  6749  03F8  1903               	skipnz
  6750  03F9  2C0B               	goto	l1739
  6751  03FA  3001               	movlw	1
  6752  03FB  02CA               	subwf	___ftadd@sign,f
  6753  03FC  084A               	movf	___ftadd@sign,w
  6754  03FD  3907               	andlw	7
  6755  03FE  1903               	btfsc	3,2
  6756  03FF  2C0B               	goto	l1739
  6757  0400  2BEE               	goto	l1731
  6758  0401                     l1737:	
  6759  0401  3001               	movlw	1
  6760  0402                     u1725:	
  6761  0402  36C5               	lsrf	___ftadd@f2+2,f
  6762  0403  0CC4               	rrf	___ftadd@f2+1,f
  6763  0404  0CC3               	rrf	___ftadd@f2,f
  6764  0405  0B89               	decfsz	9,f
  6765  0406  2C02               	goto	u1725
  6766  0407  3001               	movlw	1
  6767  0408  00C6               	movwf	??___ftadd
  6768  0409  0846               	movf	??___ftadd,w
  6769  040A  07CB               	addwf	___ftadd@exp2,f
  6770  040B                     l1739:	
  6771  040B  084C               	movf	___ftadd@exp1,w
  6772  040C  064B               	xorwf	___ftadd@exp2,w
  6773  040D  1D03               	skipz
  6774  040E  2C01               	goto	l1737
  6775  040F                     l563:	
  6776  040F  1FCA               	btfss	___ftadd@sign,7
  6777  0410  2C21               	goto	l1743
  6778  0411  30FF               	movlw	255
  6779  0412  06C0               	xorwf	___ftadd@f1,f
  6780  0413  30FF               	movlw	255
  6781  0414  06C1               	xorwf	___ftadd@f1+1,f
  6782  0415  30FF               	movlw	255
  6783  0416  06C2               	xorwf	___ftadd@f1+2,f
  6784  0417  3001               	movlw	1
  6785  0418  07C0               	addwf	___ftadd@f1,f
  6786  0419  3000               	movlw	0
  6787  041A  1803               	skipnc
  6788  041B  3001               	movlw	1
  6789  041C  07C1               	addwf	___ftadd@f1+1,f
  6790  041D  3000               	movlw	0
  6791  041E  1803               	skipnc
  6792  041F  3001               	movlw	1
  6793  0420  07C2               	addwf	___ftadd@f1+2,f
  6794  0421                     l1743:	
  6795  0421  1F4A               	btfss	___ftadd@sign,6
  6796  0422  2C33               	goto	l1747
  6797  0423  30FF               	movlw	255
  6798  0424  06C3               	xorwf	___ftadd@f2,f
  6799  0425  30FF               	movlw	255
  6800  0426  06C4               	xorwf	___ftadd@f2+1,f
  6801  0427  30FF               	movlw	255
  6802  0428  06C5               	xorwf	___ftadd@f2+2,f
  6803  0429  3001               	movlw	1
  6804  042A  07C3               	addwf	___ftadd@f2,f
  6805  042B  3000               	movlw	0
  6806  042C  1803               	skipnc
  6807  042D  3001               	movlw	1
  6808  042E  07C4               	addwf	___ftadd@f2+1,f
  6809  042F  3000               	movlw	0
  6810  0430  1803               	skipnc
  6811  0431  3001               	movlw	1
  6812  0432  07C5               	addwf	___ftadd@f2+2,f
  6813  0433                     l1747:	
  6814  0433  01CA               	clrf	___ftadd@sign
  6815  0434  0840               	movf	___ftadd@f1,w
  6816  0435  07C3               	addwf	___ftadd@f2,f
  6817  0436  0841               	movf	___ftadd@f1+1,w
  6818  0437  3DC4               	addwfc	___ftadd@f2+1,f
  6819  0438  0842               	movf	___ftadd@f1+2,w
  6820  0439  3DC5               	addwfc	___ftadd@f2+2,f
  6821  043A  1FC5               	btfss	___ftadd@f2+2,7
  6822  043B  2C4E               	goto	l1757
  6823  043C  30FF               	movlw	255
  6824  043D  06C3               	xorwf	___ftadd@f2,f
  6825  043E  30FF               	movlw	255
  6826  043F  06C4               	xorwf	___ftadd@f2+1,f
  6827  0440  30FF               	movlw	255
  6828  0441  06C5               	xorwf	___ftadd@f2+2,f
  6829  0442  3001               	movlw	1
  6830  0443  07C3               	addwf	___ftadd@f2,f
  6831  0444  3000               	movlw	0
  6832  0445  1803               	skipnc
  6833  0446  3001               	movlw	1
  6834  0447  07C4               	addwf	___ftadd@f2+1,f
  6835  0448  3000               	movlw	0
  6836  0449  1803               	skipnc
  6837  044A  3001               	movlw	1
  6838  044B  07C5               	addwf	___ftadd@f2+2,f
  6839  044C  01CA               	clrf	___ftadd@sign
  6840  044D  0ACA               	incf	___ftadd@sign,f
  6841  044E                     l1757:	
  6842  044E  0843               	movf	___ftadd@f2,w
  6843  044F  00F0               	movwf	___ftpack@arg
  6844  0450  0844               	movf	___ftadd@f2+1,w
  6845  0451  00F1               	movwf	___ftpack@arg+1
  6846  0452  0845               	movf	___ftadd@f2+2,w
  6847  0453  00F2               	movwf	___ftpack@arg+2
  6848  0454  084C               	movf	___ftadd@exp1,w
  6849  0455  00C6               	movwf	??___ftadd
  6850  0456  0846               	movf	??___ftadd,w
  6851  0457  00F3               	movwf	___ftpack@exp
  6852  0458  084A               	movf	___ftadd@sign,w
  6853  0459  00C7               	movwf	??___ftadd+1
  6854  045A  0847               	movf	??___ftadd+1,w
  6855  045B  00F4               	movwf	___ftpack@sign
  6856  045C  318F  271A         	fcall	___ftpack
  6857  045E  0870               	movf	?___ftpack,w
  6858  045F  0020               	movlb	0	; select bank0
  6859  0460  00C0               	movwf	?___ftadd
  6860  0461  0871               	movf	?___ftpack+1,w
  6861  0462  00C1               	movwf	?___ftadd+1
  6862  0463  0872               	movf	?___ftpack+2,w
  6863  0464  00C2               	movwf	?___ftadd+2
  6864  0465  0008               	return
  6865  0466                     __end_of___ftadd:	
  6866                           
  6867                           	psect	text10
  6868  009D                     __ptext10:	
  6869 ;; *************** function ___ftdiv *****************
  6870 ;; Defined at:
  6871 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftdiv.c"
  6872 ;; Parameters:    Size  Location     Type
  6873 ;;  f2              3   16[BANK0 ] float 
  6874 ;;  f1              3   19[BANK0 ] float 
  6875 ;; Auto vars:     Size  Location     Type
  6876 ;;  f3              3   27[BANK0 ] float 
  6877 ;;  sign            1   31[BANK0 ] unsigned char 
  6878 ;;  exp             1   30[BANK0 ] unsigned char 
  6879 ;;  cntr            1   26[BANK0 ] unsigned char 
  6880 ;; Return value:  Size  Location     Type
  6881 ;;                  3   16[BANK0 ] float 
  6882 ;; Registers used:
  6883 ;;		wreg, status,2, status,0, pclath, cstack
  6884 ;; Tracked objects:
  6885 ;;		On entry : 0/0
  6886 ;;		On exit  : 0/0
  6887 ;;		Unchanged: 0/0
  6888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6889 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6890 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6891 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6892 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6893 ;;Total ram usage:       16 bytes
  6894 ;; Hardware stack levels used:    1
  6895 ;; Hardware stack levels required when called:    1
  6896 ;; This function calls:
  6897 ;;		___ftpack
  6898 ;; This function is called by:
  6899 ;;		_tempCalc
  6900 ;; This function uses a non-reentrant model
  6901 ;;
  6902                           
  6903                           
  6904                           ;psect for function ___ftdiv
  6905  009D                     ___ftdiv:	
  6906                           
  6907                           ;incstack = 0
  6908                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  6909  009D  0020               	movlb	0	; select bank0
  6910  009E  0833               	movf	___ftdiv@f1,w
  6911  009F  00B6               	movwf	??___ftdiv
  6912  00A0  0834               	movf	___ftdiv@f1+1,w
  6913  00A1  00B7               	movwf	??___ftdiv+1
  6914  00A2  0835               	movf	___ftdiv@f1+2,w
  6915  00A3  00B8               	movwf	??___ftdiv+2
  6916  00A4  1003               	clrc
  6917  00A5  0D37               	rlf	??___ftdiv+1,w
  6918  00A6  0D38               	rlf	??___ftdiv+2,w
  6919  00A7  00B9               	movwf	??___ftdiv+3
  6920  00A8  0839               	movf	??___ftdiv+3,w
  6921  00A9  00BE               	movwf	___ftdiv@exp
  6922  00AA  083E               	movf	___ftdiv@exp,w
  6923  00AB  1D03               	btfss	3,2
  6924  00AC  28B4               	goto	l2193
  6925  00AD  3000               	movlw	0
  6926  00AE  00B0               	movwf	?___ftdiv
  6927  00AF  3000               	movlw	0
  6928  00B0  00B1               	movwf	?___ftdiv+1
  6929  00B1  3000               	movlw	0
  6930  00B2  00B2               	movwf	?___ftdiv+2
  6931  00B3  0008               	return
  6932  00B4                     l2193:	
  6933  00B4  0830               	movf	___ftdiv@f2,w
  6934  00B5  00B6               	movwf	??___ftdiv
  6935  00B6  0831               	movf	___ftdiv@f2+1,w
  6936  00B7  00B7               	movwf	??___ftdiv+1
  6937  00B8  0832               	movf	___ftdiv@f2+2,w
  6938  00B9  00B8               	movwf	??___ftdiv+2
  6939  00BA  1003               	clrc
  6940  00BB  0D37               	rlf	??___ftdiv+1,w
  6941  00BC  0D38               	rlf	??___ftdiv+2,w
  6942  00BD  00B9               	movwf	??___ftdiv+3
  6943  00BE  0839               	movf	??___ftdiv+3,w
  6944  00BF  00BF               	movwf	___ftdiv@sign
  6945  00C0  083F               	movf	___ftdiv@sign,w
  6946  00C1  1D03               	btfss	3,2
  6947  00C2  28CA               	goto	l2199
  6948  00C3  3000               	movlw	0
  6949  00C4  00B0               	movwf	?___ftdiv
  6950  00C5  3000               	movlw	0
  6951  00C6  00B1               	movwf	?___ftdiv+1
  6952  00C7  3000               	movlw	0
  6953  00C8  00B2               	movwf	?___ftdiv+2
  6954  00C9  0008               	return
  6955  00CA                     l2199:	
  6956  00CA  3000               	movlw	0
  6957  00CB  00BB               	movwf	___ftdiv@f3
  6958  00CC  3000               	movlw	0
  6959  00CD  00BC               	movwf	___ftdiv@f3+1
  6960  00CE  3000               	movlw	0
  6961  00CF  00BD               	movwf	___ftdiv@f3+2
  6962  00D0  3089               	movlw	137
  6963  00D1  073F               	addwf	___ftdiv@sign,w
  6964  00D2  00B6               	movwf	??___ftdiv
  6965  00D3  0836               	movf	??___ftdiv,w
  6966  00D4  02BE               	subwf	___ftdiv@exp,f
  6967  00D5  0833               	movf	___ftdiv@f1,w
  6968  00D6  00B6               	movwf	??___ftdiv
  6969  00D7  0834               	movf	___ftdiv@f1+1,w
  6970  00D8  00B7               	movwf	??___ftdiv+1
  6971  00D9  0835               	movf	___ftdiv@f1+2,w
  6972  00DA  00B8               	movwf	??___ftdiv+2
  6973  00DB  3010               	movlw	16
  6974  00DC                     u2345:	
  6975  00DC  36B8               	lsrf	??___ftdiv+2,f
  6976  00DD  0CB7               	rrf	??___ftdiv+1,f
  6977  00DE  0CB6               	rrf	??___ftdiv,f
  6978  00DF  0B89               	decfsz	9,f
  6979  00E0  28DC               	goto	u2345
  6980  00E1  0836               	movf	??___ftdiv,w
  6981  00E2  00B9               	movwf	??___ftdiv+3
  6982  00E3  0839               	movf	??___ftdiv+3,w
  6983  00E4  00BF               	movwf	___ftdiv@sign
  6984  00E5  0830               	movf	___ftdiv@f2,w
  6985  00E6  00B6               	movwf	??___ftdiv
  6986  00E7  0831               	movf	___ftdiv@f2+1,w
  6987  00E8  00B7               	movwf	??___ftdiv+1
  6988  00E9  0832               	movf	___ftdiv@f2+2,w
  6989  00EA  00B8               	movwf	??___ftdiv+2
  6990  00EB  3010               	movlw	16
  6991  00EC                     u2355:	
  6992  00EC  36B8               	lsrf	??___ftdiv+2,f
  6993  00ED  0CB7               	rrf	??___ftdiv+1,f
  6994  00EE  0CB6               	rrf	??___ftdiv,f
  6995  00EF  0B89               	decfsz	9,f
  6996  00F0  28EC               	goto	u2355
  6997  00F1  0836               	movf	??___ftdiv,w
  6998  00F2  00B9               	movwf	??___ftdiv+3
  6999  00F3  0839               	movf	??___ftdiv+3,w
  7000  00F4  06BF               	xorwf	___ftdiv@sign,f
  7001  00F5  3080               	movlw	128
  7002  00F6  00B6               	movwf	??___ftdiv
  7003  00F7  0836               	movf	??___ftdiv,w
  7004  00F8  05BF               	andwf	___ftdiv@sign,f
  7005  00F9  17B4               	bsf	___ftdiv@f1+1,7
  7006  00FA  30FF               	movlw	255
  7007  00FB  05B3               	andwf	___ftdiv@f1,f
  7008  00FC  30FF               	movlw	255
  7009  00FD  05B4               	andwf	___ftdiv@f1+1,f
  7010  00FE  3000               	movlw	0
  7011  00FF  05B5               	andwf	___ftdiv@f1+2,f
  7012  0100  17B1               	bsf	___ftdiv@f2+1,7
  7013  0101  30FF               	movlw	255
  7014  0102  05B0               	andwf	___ftdiv@f2,f
  7015  0103  30FF               	movlw	255
  7016  0104  05B1               	andwf	___ftdiv@f2+1,f
  7017  0105  3000               	movlw	0
  7018  0106  05B2               	andwf	___ftdiv@f2+2,f
  7019  0107  3018               	movlw	24
  7020  0108  00B6               	movwf	??___ftdiv
  7021  0109  0836               	movf	??___ftdiv,w
  7022  010A  00BA               	movwf	___ftdiv@cntr
  7023  010B                     l2213:	
  7024  010B  3001               	movlw	1
  7025  010C                     u2365:	
  7026  010C  35BB               	lslf	___ftdiv@f3,f
  7027  010D  0DBC               	rlf	___ftdiv@f3+1,f
  7028  010E  0DBD               	rlf	___ftdiv@f3+2,f
  7029  010F  0B89               	decfsz	9,f
  7030  0110  290C               	goto	u2365
  7031  0111  0832               	movf	___ftdiv@f2+2,w
  7032  0112  0235               	subwf	___ftdiv@f1+2,w
  7033  0113  1D03               	skipz
  7034  0114  291B               	goto	u2375
  7035  0115  0831               	movf	___ftdiv@f2+1,w
  7036  0116  0234               	subwf	___ftdiv@f1+1,w
  7037  0117  1D03               	skipz
  7038  0118  291B               	goto	u2375
  7039  0119  0830               	movf	___ftdiv@f2,w
  7040  011A  0233               	subwf	___ftdiv@f1,w
  7041  011B                     u2375:	
  7042  011B  1C03               	skipc
  7043  011C  2924               	goto	l2221
  7044  011D  0830               	movf	___ftdiv@f2,w
  7045  011E  02B3               	subwf	___ftdiv@f1,f
  7046  011F  0831               	movf	___ftdiv@f2+1,w
  7047  0120  3BB4               	subwfb	___ftdiv@f1+1,f
  7048  0121  0832               	movf	___ftdiv@f2+2,w
  7049  0122  3BB5               	subwfb	___ftdiv@f1+2,f
  7050  0123  143B               	bsf	___ftdiv@f3,0
  7051  0124                     l2221:	
  7052  0124  3001               	movlw	1
  7053  0125                     u2385:	
  7054  0125  35B3               	lslf	___ftdiv@f1,f
  7055  0126  0DB4               	rlf	___ftdiv@f1+1,f
  7056  0127  0DB5               	rlf	___ftdiv@f1+2,f
  7057  0128  0B89               	decfsz	9,f
  7058  0129  2925               	goto	u2385
  7059  012A  3001               	movlw	1
  7060  012B  02BA               	subwf	___ftdiv@cntr,f
  7061  012C  1D03               	btfss	3,2
  7062  012D  290B               	goto	l2213
  7063  012E  083B               	movf	___ftdiv@f3,w
  7064  012F  00F0               	movwf	___ftpack@arg
  7065  0130  083C               	movf	___ftdiv@f3+1,w
  7066  0131  00F1               	movwf	___ftpack@arg+1
  7067  0132  083D               	movf	___ftdiv@f3+2,w
  7068  0133  00F2               	movwf	___ftpack@arg+2
  7069  0134  083E               	movf	___ftdiv@exp,w
  7070  0135  00B6               	movwf	??___ftdiv
  7071  0136  0836               	movf	??___ftdiv,w
  7072  0137  00F3               	movwf	___ftpack@exp
  7073  0138  083F               	movf	___ftdiv@sign,w
  7074  0139  00B7               	movwf	??___ftdiv+1
  7075  013A  0837               	movf	??___ftdiv+1,w
  7076  013B  00F4               	movwf	___ftpack@sign
  7077  013C  318F  271A         	fcall	___ftpack
  7078  013E  0870               	movf	?___ftpack,w
  7079  013F  0020               	movlb	0	; select bank0
  7080  0140  00B0               	movwf	?___ftdiv
  7081  0141  0871               	movf	?___ftpack+1,w
  7082  0142  00B1               	movwf	?___ftdiv+1
  7083  0143  0872               	movf	?___ftpack+2,w
  7084  0144  00B2               	movwf	?___ftdiv+2
  7085  0145  0008               	return
  7086  0146                     __end_of___ftdiv:	
  7087                           
  7088                           	psect	text11
  7089  0F1A                     __ptext11:	
  7090 ;; *************** function ___ftpack *****************
  7091 ;; Defined at:
  7092 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\float.c"
  7093 ;; Parameters:    Size  Location     Type
  7094 ;;  arg             3    0[COMMON] unsigned um
  7095 ;;  exp             1    3[COMMON] unsigned char 
  7096 ;;  sign            1    4[COMMON] unsigned char 
  7097 ;; Auto vars:     Size  Location     Type
  7098 ;;		None
  7099 ;; Return value:  Size  Location     Type
  7100 ;;                  3    0[COMMON] float 
  7101 ;; Registers used:
  7102 ;;		wreg, status,2, status,0
  7103 ;; Tracked objects:
  7104 ;;		On entry : 0/0
  7105 ;;		On exit  : 0/0
  7106 ;;		Unchanged: 0/0
  7107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7108 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7110 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7111 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7112 ;;Total ram usage:        8 bytes
  7113 ;; Hardware stack levels used:    1
  7114 ;; This function calls:
  7115 ;;		Nothing
  7116 ;; This function is called by:
  7117 ;;		___awtoft
  7118 ;;		___ftadd
  7119 ;;		___ftdiv
  7120 ;;		___ftmul
  7121 ;; This function uses a non-reentrant model
  7122 ;;
  7123                           
  7124                           
  7125                           ;psect for function ___ftpack
  7126  0F1A                     ___ftpack:	
  7127                           
  7128                           ;incstack = 0
  7129                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  7130  0F1A  0873               	movf	___ftpack@exp,w
  7131  0F1B  1903               	btfsc	3,2
  7132  0F1C  2F22               	goto	l1633
  7133  0F1D  0872               	movf	___ftpack@arg+2,w
  7134  0F1E  0471               	iorwf	___ftpack@arg+1,w
  7135  0F1F  0470               	iorwf	___ftpack@arg,w
  7136  0F20  1D03               	skipz
  7137  0F21  2F33               	goto	l1639
  7138  0F22                     l1633:	
  7139  0F22  3000               	movlw	0
  7140  0F23  00F0               	movwf	?___ftpack
  7141  0F24  3000               	movlw	0
  7142  0F25  00F1               	movwf	?___ftpack+1
  7143  0F26  3000               	movlw	0
  7144  0F27  00F2               	movwf	?___ftpack+2
  7145  0F28  0008               	return
  7146  0F29                     l1637:	
  7147  0F29  3001               	movlw	1
  7148  0F2A  00F5               	movwf	??___ftpack
  7149  0F2B  0875               	movf	??___ftpack,w
  7150  0F2C  07F3               	addwf	___ftpack@exp,f
  7151  0F2D  3001               	movlw	1
  7152  0F2E                     u1365:	
  7153  0F2E  36F2               	lsrf	___ftpack@arg+2,f
  7154  0F2F  0CF1               	rrf	___ftpack@arg+1,f
  7155  0F30  0CF0               	rrf	___ftpack@arg,f
  7156  0F31  0B89               	decfsz	9,f
  7157  0F32  2F2E               	goto	u1365
  7158  0F33                     l1639:	
  7159  0F33  30FE               	movlw	254
  7160  0F34  0572               	andwf	___ftpack@arg+2,w
  7161  0F35  1903               	btfsc	3,2
  7162  0F36  2F4C               	goto	l532
  7163  0F37  2F29               	goto	l1637
  7164  0F38                     l1641:	
  7165  0F38  3001               	movlw	1
  7166  0F39  00F5               	movwf	??___ftpack
  7167  0F3A  0875               	movf	??___ftpack,w
  7168  0F3B  07F3               	addwf	___ftpack@exp,f
  7169  0F3C  3001               	movlw	1
  7170  0F3D  07F0               	addwf	___ftpack@arg,f
  7171  0F3E  3000               	movlw	0
  7172  0F3F  1803               	skipnc
  7173  0F40  3001               	movlw	1
  7174  0F41  07F1               	addwf	___ftpack@arg+1,f
  7175  0F42  3000               	movlw	0
  7176  0F43  1803               	skipnc
  7177  0F44  3001               	movlw	1
  7178  0F45  07F2               	addwf	___ftpack@arg+2,f
  7179  0F46  3001               	movlw	1
  7180  0F47                     u1385:	
  7181  0F47  36F2               	lsrf	___ftpack@arg+2,f
  7182  0F48  0CF1               	rrf	___ftpack@arg+1,f
  7183  0F49  0CF0               	rrf	___ftpack@arg,f
  7184  0F4A  0B89               	decfsz	9,f
  7185  0F4B  2F47               	goto	u1385
  7186  0F4C                     l532:	
  7187  0F4C  30FF               	movlw	255
  7188  0F4D  0572               	andwf	___ftpack@arg+2,w
  7189  0F4E  1903               	btfsc	3,2
  7190  0F4F  2F59               	goto	l1649
  7191  0F50  2F38               	goto	l1641
  7192  0F51                     l1647:	
  7193  0F51  3001               	movlw	1
  7194  0F52  02F3               	subwf	___ftpack@exp,f
  7195  0F53  3001               	movlw	1
  7196  0F54                     u1405:	
  7197  0F54  35F0               	lslf	___ftpack@arg,f
  7198  0F55  0DF1               	rlf	___ftpack@arg+1,f
  7199  0F56  0DF2               	rlf	___ftpack@arg+2,f
  7200  0F57  0B89               	decfsz	9,f
  7201  0F58  2F54               	goto	u1405
  7202  0F59                     l1649:	
  7203  0F59  1BF1               	btfsc	___ftpack@arg+1,7
  7204  0F5A  2F5F               	goto	l539
  7205  0F5B  3002               	movlw	2
  7206  0F5C  0273               	subwf	___ftpack@exp,w
  7207  0F5D  1803               	skipnc
  7208  0F5E  2F51               	goto	l1647
  7209  0F5F                     l539:	
  7210  0F5F  1873               	btfsc	___ftpack@exp,0
  7211  0F60  2F67               	goto	l540
  7212  0F61  30FF               	movlw	255
  7213  0F62  05F0               	andwf	___ftpack@arg,f
  7214  0F63  307F               	movlw	127
  7215  0F64  05F1               	andwf	___ftpack@arg+1,f
  7216  0F65  30FF               	movlw	255
  7217  0F66  05F2               	andwf	___ftpack@arg+2,f
  7218  0F67                     l540:	
  7219  0F67  1003               	clrc
  7220  0F68  0CF3               	rrf	___ftpack@exp,f
  7221  0F69  0873               	movf	___ftpack@exp,w
  7222  0F6A  00F5               	movwf	??___ftpack
  7223  0F6B  01F6               	clrf	??___ftpack+1
  7224  0F6C  01F7               	clrf	??___ftpack+2
  7225  0F6D  3010               	movlw	16
  7226  0F6E                     u1445:	
  7227  0F6E  35F5               	lslf	??___ftpack,f
  7228  0F6F  0DF6               	rlf	??___ftpack+1,f
  7229  0F70  0DF7               	rlf	??___ftpack+2,f
  7230  0F71  0B89               	decfsz	9,f
  7231  0F72  2F6E               	goto	u1445
  7232  0F73  0875               	movf	??___ftpack,w
  7233  0F74  04F0               	iorwf	___ftpack@arg,f
  7234  0F75  0876               	movf	??___ftpack+1,w
  7235  0F76  04F1               	iorwf	___ftpack@arg+1,f
  7236  0F77  0877               	movf	??___ftpack+2,w
  7237  0F78  04F2               	iorwf	___ftpack@arg+2,f
  7238  0F79  0874               	movf	___ftpack@sign,w
  7239  0F7A  1903               	btfsc	3,2
  7240  0F7B  0008               	return
  7241  0F7C  17F2               	bsf	___ftpack@arg+2,7
  7242  0F7D  0008               	return
  7243  0F7E                     __end_of___ftpack:	
  7244                           
  7245                           	psect	text12
  7246  0698                     __ptext12:	
  7247 ;; *************** function _readAnalog *****************
  7248 ;; Defined at:
  7249 ;;		line 88 in file "adcc.c"
  7250 ;; Parameters:    Size  Location     Type
  7251 ;;  channel         2    6[BANK0 ] int 
  7252 ;; Auto vars:     Size  Location     Type
  7253 ;;  value           2   11[COMMON] int 
  7254 ;;  analog_chann    2    9[COMMON] int 
  7255 ;; Return value:  Size  Location     Type
  7256 ;;                  2    6[BANK0 ] int 
  7257 ;; Registers used:
  7258 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7259 ;; Tracked objects:
  7260 ;;		On entry : 0/0
  7261 ;;		On exit  : 0/0
  7262 ;;		Unchanged: 0/0
  7263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7264 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7265 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7266 ;;      Temps:          0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7267 ;;      Totals:         4      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7268 ;;Total ram usage:       22 bytes
  7269 ;; Hardware stack levels used:    1
  7270 ;; Hardware stack levels required when called:    1
  7271 ;; This function calls:
  7272 ;;		_ADCRead
  7273 ;;		___aldiv
  7274 ;;		___wmul
  7275 ;; This function is called by:
  7276 ;;		_main
  7277 ;; This function uses a non-reentrant model
  7278 ;;
  7279                           
  7280                           
  7281                           ;psect for function _readAnalog
  7282  0698                     _readAnalog:	
  7283                           
  7284                           ;adcc.c: 90: int value;
  7285                           ;adcc.c: 92: int analog_channel = channels[channel];
  7286                           
  7287                           ;incstack = 0
  7288                           ; Regs used in _readAnalog: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7289  0698  0020               	movlb	0	; select bank0
  7290  0699  3526               	lslf	readAnalog@channel,w
  7291  069A  3EDF               	addlw	(low (_channels| 0))& (0+255)
  7292  069B  0086               	movwf	6
  7293  069C  0187               	clrf	7
  7294  069D  3F40               	moviw [0]fsr1
  7295  069E  00F9               	movwf	readAnalog@analog_channel
  7296  069F  3F41               	moviw [1]fsr1
  7297  06A0  00FA               	movwf	readAnalog@analog_channel+1
  7298                           
  7299                           ;adcc.c: 94: value = ADCRead(analog_channel);
  7300  06A1  0879               	movf	readAnalog@analog_channel,w
  7301  06A2  3180  2008  3186   	fcall	_ADCRead
  7302  06A5  0871               	movf	?_ADCRead+1,w
  7303  06A6  00FC               	movwf	readAnalog@value+1
  7304  06A7  0870               	movf	?_ADCRead,w
  7305  06A8  00FB               	movwf	readAnalog@value
  7306                           
  7307                           ;adcc.c: 98: totals[channel] = totals[channel] - samples[channel][sampleIndex];
  7308  06A9  0020               	movlb	0	; select bank0
  7309  06AA  0826               	movf	readAnalog@channel,w
  7310  06AB  00A8               	movwf	??_readAnalog
  7311  06AC  3001               	movlw	1
  7312  06AD                     u2415:	
  7313  06AD  35A8               	lslf	??_readAnalog,f
  7314  06AE  3EFF               	addlw	-1
  7315  06AF  1D03               	skipz
  7316  06B0  2EAD               	goto	u2415
  7317  06B1  3528               	lslf	??_readAnalog,w
  7318  06B2  3EA0               	addlw	(low (_totals| 0))& (0+255)
  7319  06B3  0086               	movwf	6
  7320  06B4  0187               	clrf	7
  7321  06B5  3F40               	moviw [0]fsr1
  7322  06B6  00A9               	movwf	??_readAnalog+1
  7323  06B7  3F41               	moviw [1]fsr1
  7324  06B8  00AA               	movwf	??_readAnalog+2
  7325  06B9  3F42               	moviw [2]fsr1
  7326  06BA  00AB               	movwf	??_readAnalog+3
  7327  06BB  3F43               	moviw [3]fsr1
  7328  06BC  00AC               	movwf	??_readAnalog+4
  7329  06BD  086F               	movf	_sampleIndex+1,w
  7330  06BE  00AE               	movwf	??_readAnalog+6
  7331  06BF  086E               	movf	_sampleIndex,w
  7332  06C0  00AD               	movwf	??_readAnalog+5
  7333  06C1  35AD               	lslf	??_readAnalog+5,f
  7334  06C2  0DAE               	rlf	??_readAnalog+6,f
  7335  06C3  0827               	movf	readAnalog@channel+1,w
  7336  06C4  00F1               	movwf	___wmul@multiplier+1
  7337  06C5  0826               	movf	readAnalog@channel,w
  7338  06C6  00F0               	movwf	___wmul@multiplier
  7339  06C7  3028               	movlw	40
  7340  06C8  00F2               	movwf	___wmul@multiplicand
  7341  06C9  3000               	movlw	0
  7342  06CA  00F3               	movwf	___wmul@multiplicand+1
  7343  06CB  318C  244C  3186   	fcall	___wmul
  7344  06CE  3000               	movlw	0
  7345  06CF  0020               	movlb	0	; select bank0
  7346  06D0  00AF               	movwf	??_readAnalog+7
  7347  06D1  3023               	movlw	35
  7348  06D2  00B0               	movwf	??_readAnalog+8
  7349  06D3  0870               	movf	?___wmul,w
  7350  06D4  072F               	addwf	??_readAnalog+7,w
  7351  06D5  00B1               	movwf	??_readAnalog+9
  7352  06D6  0871               	movf	?___wmul+1,w
  7353  06D7  3D30               	addwfc	??_readAnalog+8,w
  7354  06D8  00B2               	movwf	??_readAnalog+10
  7355  06D9  0831               	movf	??_readAnalog+9,w
  7356  06DA  072D               	addwf	??_readAnalog+5,w
  7357  06DB  0084               	movwf	4
  7358  06DC  0832               	movf	??_readAnalog+10,w
  7359  06DD  3D2E               	addwfc	??_readAnalog+6,w
  7360  06DE  0085               	movwf	5
  7361  06DF  3F00               	moviw [0]fsr0
  7362  06E0  00B3               	movwf	??_readAnalog+11
  7363  06E1  3F01               	moviw [1]fsr0
  7364  06E2  00B4               	movwf	??_readAnalog+12
  7365  06E3  01B5               	clrf	??_readAnalog+13
  7366  06E4  01B6               	clrf	??_readAnalog+14
  7367  06E5  09B3               	comf	??_readAnalog+11,f
  7368  06E6  09B4               	comf	??_readAnalog+12,f
  7369  06E7  09B5               	comf	??_readAnalog+13,f
  7370  06E8  09B6               	comf	??_readAnalog+14,f
  7371  06E9  0AB3               	incf	??_readAnalog+11,f
  7372  06EA  1903               	skipnz
  7373  06EB  0AB4               	incf	??_readAnalog+12,f
  7374  06EC  1903               	skipnz
  7375  06ED  0AB5               	incf	??_readAnalog+13,f
  7376  06EE  1903               	skipnz
  7377  06EF  0AB6               	incf	??_readAnalog+14,f
  7378  06F0  0833               	movf	??_readAnalog+11,w
  7379  06F1  07A9               	addwf	??_readAnalog+1,f
  7380  06F2  0834               	movf	??_readAnalog+12,w
  7381  06F3  3DAA               	addwfc	??_readAnalog+2,f
  7382  06F4  0835               	movf	??_readAnalog+13,w
  7383  06F5  3DAB               	addwfc	??_readAnalog+3,f
  7384  06F6  0836               	movf	??_readAnalog+14,w
  7385  06F7  3DAC               	addwfc	??_readAnalog+4,f
  7386  06F8  0826               	movf	readAnalog@channel,w
  7387  06F9  00B7               	movwf	??_readAnalog+15
  7388  06FA  3001               	movlw	1
  7389  06FB                     u2425:	
  7390  06FB  35B7               	lslf	??_readAnalog+15,f
  7391  06FC  3EFF               	addlw	-1
  7392  06FD  1D03               	skipz
  7393  06FE  2EFB               	goto	u2425
  7394  06FF  3537               	lslf	??_readAnalog+15,w
  7395  0700  3EA0               	addlw	(low (_totals| 0))& (0+255)
  7396  0701  0086               	movwf	6
  7397  0702  0187               	clrf	7
  7398  0703  0829               	movf	??_readAnalog+1,w
  7399  0704  3FC0               	movwi [0]fsr1
  7400  0705  082A               	movf	??_readAnalog+2,w
  7401  0706  3FC1               	movwi [1]fsr1
  7402  0707  082B               	movf	??_readAnalog+3,w
  7403  0708  3FC2               	movwi [2]fsr1
  7404  0709  082C               	movf	??_readAnalog+4,w
  7405  070A  3FC3               	movwi [3]fsr1
  7406                           
  7407                           ;adcc.c: 100: samples[channel][sampleIndex] = value;
  7408  070B  086F               	movf	_sampleIndex+1,w
  7409  070C  00A9               	movwf	??_readAnalog+1
  7410  070D  086E               	movf	_sampleIndex,w
  7411  070E  00A8               	movwf	??_readAnalog
  7412  070F  35A8               	lslf	??_readAnalog,f
  7413  0710  0DA9               	rlf	??_readAnalog+1,f
  7414  0711  0827               	movf	readAnalog@channel+1,w
  7415  0712  00F1               	movwf	___wmul@multiplier+1
  7416  0713  0826               	movf	readAnalog@channel,w
  7417  0714  00F0               	movwf	___wmul@multiplier
  7418  0715  3028               	movlw	40
  7419  0716  00F2               	movwf	___wmul@multiplicand
  7420  0717  3000               	movlw	0
  7421  0718  00F3               	movwf	___wmul@multiplicand+1
  7422  0719  318C  244C  3186   	fcall	___wmul
  7423  071C  3000               	movlw	0
  7424  071D  0020               	movlb	0	; select bank0
  7425  071E  00AA               	movwf	??_readAnalog+2
  7426  071F  3023               	movlw	35
  7427  0720  00AB               	movwf	??_readAnalog+3
  7428  0721  0870               	movf	?___wmul,w
  7429  0722  072A               	addwf	??_readAnalog+2,w
  7430  0723  00AC               	movwf	??_readAnalog+4
  7431  0724  0871               	movf	?___wmul+1,w
  7432  0725  3D2B               	addwfc	??_readAnalog+3,w
  7433  0726  00AD               	movwf	??_readAnalog+5
  7434  0727  0828               	movf	??_readAnalog,w
  7435  0728  072C               	addwf	??_readAnalog+4,w
  7436  0729  0086               	movwf	6
  7437  072A  0829               	movf	??_readAnalog+1,w
  7438  072B  3D2D               	addwfc	??_readAnalog+5,w
  7439  072C  0087               	movwf	7
  7440  072D  087B               	movf	readAnalog@value,w
  7441  072E  3FC0               	movwi [0]fsr1
  7442  072F  087C               	movf	readAnalog@value+1,w
  7443  0730  3FC1               	movwi [1]fsr1
  7444                           
  7445                           ;adcc.c: 102: totals[channel] = totals[channel] + samples[channel][sampleIndex];
  7446  0731  0826               	movf	readAnalog@channel,w
  7447  0732  00A8               	movwf	??_readAnalog
  7448  0733  3001               	movlw	1
  7449  0734                     u2435:	
  7450  0734  35A8               	lslf	??_readAnalog,f
  7451  0735  3EFF               	addlw	-1
  7452  0736  1D03               	skipz
  7453  0737  2F34               	goto	u2435
  7454  0738  3528               	lslf	??_readAnalog,w
  7455  0739  3EA0               	addlw	(low (_totals| 0))& (0+255)
  7456  073A  0086               	movwf	6
  7457  073B  0187               	clrf	7
  7458  073C  3F40               	moviw [0]fsr1
  7459  073D  00A9               	movwf	??_readAnalog+1
  7460  073E  3F41               	moviw [1]fsr1
  7461  073F  00AA               	movwf	??_readAnalog+2
  7462  0740  3F42               	moviw [2]fsr1
  7463  0741  00AB               	movwf	??_readAnalog+3
  7464  0742  3F43               	moviw [3]fsr1
  7465  0743  00AC               	movwf	??_readAnalog+4
  7466  0744  086F               	movf	_sampleIndex+1,w
  7467  0745  00AE               	movwf	??_readAnalog+6
  7468  0746  086E               	movf	_sampleIndex,w
  7469  0747  00AD               	movwf	??_readAnalog+5
  7470  0748  35AD               	lslf	??_readAnalog+5,f
  7471  0749  0DAE               	rlf	??_readAnalog+6,f
  7472  074A  0827               	movf	readAnalog@channel+1,w
  7473  074B  00F1               	movwf	___wmul@multiplier+1
  7474  074C  0826               	movf	readAnalog@channel,w
  7475  074D  00F0               	movwf	___wmul@multiplier
  7476  074E  3028               	movlw	40
  7477  074F  00F2               	movwf	___wmul@multiplicand
  7478  0750  3000               	movlw	0
  7479  0751  00F3               	movwf	___wmul@multiplicand+1
  7480  0752  318C  244C  3186   	fcall	___wmul
  7481  0755  3000               	movlw	0
  7482  0756  0020               	movlb	0	; select bank0
  7483  0757  00AF               	movwf	??_readAnalog+7
  7484  0758  3023               	movlw	35
  7485  0759  00B0               	movwf	??_readAnalog+8
  7486  075A  0870               	movf	?___wmul,w
  7487  075B  072F               	addwf	??_readAnalog+7,w
  7488  075C  00B1               	movwf	??_readAnalog+9
  7489  075D  0871               	movf	?___wmul+1,w
  7490  075E  3D30               	addwfc	??_readAnalog+8,w
  7491  075F  00B2               	movwf	??_readAnalog+10
  7492  0760  0831               	movf	??_readAnalog+9,w
  7493  0761  072D               	addwf	??_readAnalog+5,w
  7494  0762  0084               	movwf	4
  7495  0763  0832               	movf	??_readAnalog+10,w
  7496  0764  3D2E               	addwfc	??_readAnalog+6,w
  7497  0765  0085               	movwf	5
  7498  0766  3F00               	moviw [0]fsr0
  7499  0767  00B3               	movwf	??_readAnalog+11
  7500  0768  3F01               	moviw [1]fsr0
  7501  0769  00B4               	movwf	??_readAnalog+12
  7502  076A  01B5               	clrf	??_readAnalog+13
  7503  076B  01B6               	clrf	??_readAnalog+14
  7504  076C  0833               	movf	??_readAnalog+11,w
  7505  076D  07A9               	addwf	??_readAnalog+1,f
  7506  076E  0834               	movf	??_readAnalog+12,w
  7507  076F  3DAA               	addwfc	??_readAnalog+2,f
  7508  0770  0835               	movf	??_readAnalog+13,w
  7509  0771  3DAB               	addwfc	??_readAnalog+3,f
  7510  0772  0836               	movf	??_readAnalog+14,w
  7511  0773  3DAC               	addwfc	??_readAnalog+4,f
  7512  0774  0826               	movf	readAnalog@channel,w
  7513  0775  00B7               	movwf	??_readAnalog+15
  7514  0776  3001               	movlw	1
  7515  0777                     u2445:	
  7516  0777  35B7               	lslf	??_readAnalog+15,f
  7517  0778  3EFF               	addlw	-1
  7518  0779  1D03               	skipz
  7519  077A  2F77               	goto	u2445
  7520  077B  3537               	lslf	??_readAnalog+15,w
  7521  077C  3EA0               	addlw	(low (_totals| 0))& (0+255)
  7522  077D  0086               	movwf	6
  7523  077E  0187               	clrf	7
  7524  077F  0829               	movf	??_readAnalog+1,w
  7525  0780  3FC0               	movwi [0]fsr1
  7526  0781  082A               	movf	??_readAnalog+2,w
  7527  0782  3FC1               	movwi [1]fsr1
  7528  0783  082B               	movf	??_readAnalog+3,w
  7529  0784  3FC2               	movwi [2]fsr1
  7530  0785  082C               	movf	??_readAnalog+4,w
  7531  0786  3FC3               	movwi [3]fsr1
  7532                           
  7533                           ;adcc.c: 104: if(channel>4)
  7534  0787  0827               	movf	readAnalog@channel+1,w
  7535  0788  3A80               	xorlw	128
  7536  0789  00A8               	movwf	??_readAnalog
  7537  078A  3080               	movlw	128
  7538  078B  0228               	subwf	??_readAnalog,w
  7539  078C  1D03               	skipz
  7540  078D  2F90               	goto	u2455
  7541  078E  3005               	movlw	5
  7542  078F  0226               	subwf	readAnalog@channel,w
  7543  0790                     u2455:	
  7544  0790  1C03               	skipc
  7545  0791  2FA0               	goto	l2251
  7546                           
  7547                           ;adcc.c: 105: {
  7548                           ;adcc.c: 106: sampleIndex += 1;
  7549  0792  3001               	movlw	1
  7550  0793  0020               	movlb	0	; select bank0
  7551  0794  07EE               	addwf	_sampleIndex,f
  7552  0795  3000               	movlw	0
  7553  0796  3DEF               	addwfc	_sampleIndex+1,f
  7554                           
  7555                           ;adcc.c: 108: if(sampleIndex >= 20)
  7556  0797  3000               	movlw	0
  7557  0798  026F               	subwf	_sampleIndex+1,w
  7558  0799  3014               	movlw	20
  7559  079A  1903               	skipnz
  7560  079B  026E               	subwf	_sampleIndex,w
  7561  079C  1C03               	skipc
  7562  079D  2FA0               	goto	l2251
  7563                           
  7564                           ;adcc.c: 109: {
  7565                           ;adcc.c: 110: sampleIndex = 0;
  7566  079E  01EE               	clrf	_sampleIndex
  7567  079F  01EF               	clrf	_sampleIndex+1
  7568  07A0                     l2251:	
  7569                           
  7570                           ;adcc.c: 111: }
  7571                           ;adcc.c: 112: }
  7572                           ;adcc.c: 114: value = totals[channel] / 20;
  7573  07A0  3000               	movlw	0
  7574  07A1  00F3               	movwf	___aldiv@divisor+3
  7575  07A2  3000               	movlw	0
  7576  07A3  00F2               	movwf	___aldiv@divisor+2
  7577  07A4  3000               	movlw	0
  7578  07A5  00F1               	movwf	___aldiv@divisor+1
  7579  07A6  3014               	movlw	20
  7580  07A7  00F0               	movwf	___aldiv@divisor
  7581  07A8  0020               	movlb	0	; select bank0
  7582  07A9  0826               	movf	readAnalog@channel,w
  7583  07AA  00A8               	movwf	??_readAnalog
  7584  07AB  3001               	movlw	1
  7585  07AC                     u2475:	
  7586  07AC  35A8               	lslf	??_readAnalog,f
  7587  07AD  3EFF               	addlw	-1
  7588  07AE  1D03               	skipz
  7589  07AF  2FAC               	goto	u2475
  7590  07B0  3528               	lslf	??_readAnalog,w
  7591  07B1  3EA0               	addlw	(low (_totals| 0))& (0+255)
  7592  07B2  0086               	movwf	6
  7593  07B3  0187               	clrf	7
  7594  07B4  3F40               	moviw [0]fsr1
  7595  07B5  00F4               	movwf	___aldiv@dividend
  7596  07B6  3F41               	moviw [1]fsr1
  7597  07B7  00F5               	movwf	___aldiv@dividend+1
  7598  07B8  3F42               	moviw [2]fsr1
  7599  07B9  00F6               	movwf	___aldiv@dividend+2
  7600  07BA  3F43               	moviw [3]fsr1
  7601  07BB  00F7               	movwf	___aldiv@dividend+3
  7602  07BC  318F  277E         	fcall	___aldiv
  7603  07BE  0871               	movf	?___aldiv+1,w
  7604  07BF  00FC               	movwf	readAnalog@value+1
  7605  07C0  0870               	movf	?___aldiv,w
  7606  07C1  00FB               	movwf	readAnalog@value
  7607                           
  7608                           ;adcc.c: 116: return value;
  7609  07C2  087C               	movf	readAnalog@value+1,w
  7610  07C3  0020               	movlb	0	; select bank0
  7611  07C4  00A7               	movwf	?_readAnalog+1
  7612  07C5  087B               	movf	readAnalog@value,w
  7613  07C6  00A6               	movwf	?_readAnalog
  7614  07C7  0008               	return
  7615  07C8                     __end_of_readAnalog:	
  7616                           
  7617                           	psect	text13
  7618  0C4C                     __ptext13:	
  7619 ;; *************** function ___wmul *****************
  7620 ;; Defined at:
  7621 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
  7622 ;; Parameters:    Size  Location     Type
  7623 ;;  multiplier      2    0[COMMON] unsigned int 
  7624 ;;  multiplicand    2    2[COMMON] unsigned int 
  7625 ;; Auto vars:     Size  Location     Type
  7626 ;;  product         2    4[COMMON] unsigned int 
  7627 ;; Return value:  Size  Location     Type
  7628 ;;                  2    0[COMMON] unsigned int 
  7629 ;; Registers used:
  7630 ;;		wreg, status,2, status,0
  7631 ;; Tracked objects:
  7632 ;;		On entry : 0/0
  7633 ;;		On exit  : 0/0
  7634 ;;		Unchanged: 0/0
  7635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7636 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7637 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7639 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7640 ;;Total ram usage:        6 bytes
  7641 ;; Hardware stack levels used:    1
  7642 ;; This function calls:
  7643 ;;		Nothing
  7644 ;; This function is called by:
  7645 ;;		_readAnalog
  7646 ;;		_eval_poly
  7647 ;; This function uses a non-reentrant model
  7648 ;;
  7649                           
  7650                           
  7651                           ;psect for function ___wmul
  7652  0C4C                     ___wmul:	
  7653                           
  7654                           ;incstack = 0
  7655                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7656  0C4C  01F4               	clrf	___wmul@product
  7657  0C4D  01F5               	clrf	___wmul@product+1
  7658  0C4E                     l1679:	
  7659  0C4E  1C70               	btfss	___wmul@multiplier,0
  7660  0C4F  2C54               	goto	l371
  7661  0C50  0872               	movf	___wmul@multiplicand,w
  7662  0C51  07F4               	addwf	___wmul@product,f
  7663  0C52  0873               	movf	___wmul@multiplicand+1,w
  7664  0C53  3DF5               	addwfc	___wmul@product+1,f
  7665  0C54                     l371:	
  7666  0C54  3001               	movlw	1
  7667  0C55                     u1515:	
  7668  0C55  35F2               	lslf	___wmul@multiplicand,f
  7669  0C56  0DF3               	rlf	___wmul@multiplicand+1,f
  7670  0C57  0B89               	decfsz	9,f
  7671  0C58  2C55               	goto	u1515
  7672  0C59  3001               	movlw	1
  7673  0C5A                     u1525:	
  7674  0C5A  36F1               	lsrf	___wmul@multiplier+1,f
  7675  0C5B  0CF0               	rrf	___wmul@multiplier,f
  7676  0C5C  0B89               	decfsz	9,f
  7677  0C5D  2C5A               	goto	u1525
  7678  0C5E  0870               	movf	___wmul@multiplier,w
  7679  0C5F  0471               	iorwf	___wmul@multiplier+1,w
  7680  0C60  1D03               	btfss	3,2
  7681  0C61  2C4E               	goto	l1679
  7682  0C62  0875               	movf	___wmul@product+1,w
  7683  0C63  00F1               	movwf	?___wmul+1
  7684  0C64  0874               	movf	___wmul@product,w
  7685  0C65  00F0               	movwf	?___wmul
  7686  0C66  0008               	return
  7687  0C67                     __end_of___wmul:	
  7688                           
  7689                           	psect	text14
  7690  0F7E                     __ptext14:	
  7691 ;; *************** function ___aldiv *****************
  7692 ;; Defined at:
  7693 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\aldiv.c"
  7694 ;; Parameters:    Size  Location     Type
  7695 ;;  divisor         4    0[COMMON] long 
  7696 ;;  dividend        4    4[COMMON] long 
  7697 ;; Auto vars:     Size  Location     Type
  7698 ;;  quotient        4    2[BANK0 ] long 
  7699 ;;  sign            1    1[BANK0 ] unsigned char 
  7700 ;;  counter         1    0[BANK0 ] unsigned char 
  7701 ;; Return value:  Size  Location     Type
  7702 ;;                  4    0[COMMON] long 
  7703 ;; Registers used:
  7704 ;;		wreg, status,2, status,0
  7705 ;; Tracked objects:
  7706 ;;		On entry : 0/0
  7707 ;;		On exit  : 0/0
  7708 ;;		Unchanged: 0/0
  7709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7710 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7711 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7712 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7713 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7714 ;;Total ram usage:       15 bytes
  7715 ;; Hardware stack levels used:    1
  7716 ;; This function calls:
  7717 ;;		Nothing
  7718 ;; This function is called by:
  7719 ;;		_readAnalog
  7720 ;; This function uses a non-reentrant model
  7721 ;;
  7722                           
  7723                           
  7724                           ;psect for function ___aldiv
  7725  0F7E                     ___aldiv:	
  7726                           
  7727                           ;incstack = 0
  7728                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  7729  0F7E  0020               	movlb	0	; select bank0
  7730  0F7F  01A1               	clrf	___aldiv@sign
  7731  0F80  1FF3               	btfss	___aldiv@divisor+3,7
  7732  0F81  2F8F               	goto	l426
  7733  0F82  09F0               	comf	___aldiv@divisor,f
  7734  0F83  09F1               	comf	___aldiv@divisor+1,f
  7735  0F84  09F2               	comf	___aldiv@divisor+2,f
  7736  0F85  09F3               	comf	___aldiv@divisor+3,f
  7737  0F86  0AF0               	incf	___aldiv@divisor,f
  7738  0F87  1903               	skipnz
  7739  0F88  0AF1               	incf	___aldiv@divisor+1,f
  7740  0F89  1903               	skipnz
  7741  0F8A  0AF2               	incf	___aldiv@divisor+2,f
  7742  0F8B  1903               	skipnz
  7743  0F8C  0AF3               	incf	___aldiv@divisor+3,f
  7744  0F8D  01A1               	clrf	___aldiv@sign
  7745  0F8E  0AA1               	incf	___aldiv@sign,f
  7746  0F8F                     l426:	
  7747  0F8F  1FF7               	btfss	___aldiv@dividend+3,7
  7748  0F90  2FA0               	goto	l2075
  7749  0F91  09F4               	comf	___aldiv@dividend,f
  7750  0F92  09F5               	comf	___aldiv@dividend+1,f
  7751  0F93  09F6               	comf	___aldiv@dividend+2,f
  7752  0F94  09F7               	comf	___aldiv@dividend+3,f
  7753  0F95  0AF4               	incf	___aldiv@dividend,f
  7754  0F96  1903               	skipnz
  7755  0F97  0AF5               	incf	___aldiv@dividend+1,f
  7756  0F98  1903               	skipnz
  7757  0F99  0AF6               	incf	___aldiv@dividend+2,f
  7758  0F9A  1903               	skipnz
  7759  0F9B  0AF7               	incf	___aldiv@dividend+3,f
  7760  0F9C  3001               	movlw	1
  7761  0F9D  00F8               	movwf	??___aldiv
  7762  0F9E  0878               	movf	??___aldiv,w
  7763  0F9F  06A1               	xorwf	___aldiv@sign,f
  7764  0FA0                     l2075:	
  7765  0FA0  3000               	movlw	0
  7766  0FA1  00A5               	movwf	___aldiv@quotient+3
  7767  0FA2  3000               	movlw	0
  7768  0FA3  00A4               	movwf	___aldiv@quotient+2
  7769  0FA4  3000               	movlw	0
  7770  0FA5  00A3               	movwf	___aldiv@quotient+1
  7771  0FA6  3000               	movlw	0
  7772  0FA7  00A2               	movwf	___aldiv@quotient
  7773  0FA8  0873               	movf	___aldiv@divisor+3,w
  7774  0FA9  0472               	iorwf	___aldiv@divisor+2,w
  7775  0FAA  0471               	iorwf	___aldiv@divisor+1,w
  7776  0FAB  0470               	iorwf	___aldiv@divisor,w
  7777  0FAC  1903               	skipnz
  7778  0FAD  2FE9               	goto	l2097
  7779  0FAE  01A0               	clrf	___aldiv@counter
  7780  0FAF  0AA0               	incf	___aldiv@counter,f
  7781  0FB0                     l2083:	
  7782  0FB0  1BF3               	btfsc	___aldiv@divisor+3,7
  7783  0FB1  2FBE               	goto	l2085
  7784  0FB2  3001               	movlw	1
  7785  0FB3                     u2065:	
  7786  0FB3  35F0               	lslf	___aldiv@divisor,f
  7787  0FB4  0DF1               	rlf	___aldiv@divisor+1,f
  7788  0FB5  0DF2               	rlf	___aldiv@divisor+2,f
  7789  0FB6  0DF3               	rlf	___aldiv@divisor+3,f
  7790  0FB7  0B89               	decfsz	9,f
  7791  0FB8  2FB3               	goto	u2065
  7792  0FB9  3001               	movlw	1
  7793  0FBA  00F8               	movwf	??___aldiv
  7794  0FBB  0878               	movf	??___aldiv,w
  7795  0FBC  07A0               	addwf	___aldiv@counter,f
  7796  0FBD  2FB0               	goto	l2083
  7797  0FBE                     l2085:	
  7798  0FBE  3001               	movlw	1
  7799  0FBF                     u2085:	
  7800  0FBF  35A2               	lslf	___aldiv@quotient,f
  7801  0FC0  0DA3               	rlf	___aldiv@quotient+1,f
  7802  0FC1  0DA4               	rlf	___aldiv@quotient+2,f
  7803  0FC2  0DA5               	rlf	___aldiv@quotient+3,f
  7804  0FC3  0B89               	decfsz	9,f
  7805  0FC4  2FBF               	goto	u2085
  7806  0FC5  0873               	movf	___aldiv@divisor+3,w
  7807  0FC6  0277               	subwf	___aldiv@dividend+3,w
  7808  0FC7  1D03               	skipz
  7809  0FC8  2FD3               	goto	u2095
  7810  0FC9  0872               	movf	___aldiv@divisor+2,w
  7811  0FCA  0276               	subwf	___aldiv@dividend+2,w
  7812  0FCB  1D03               	skipz
  7813  0FCC  2FD3               	goto	u2095
  7814  0FCD  0871               	movf	___aldiv@divisor+1,w
  7815  0FCE  0275               	subwf	___aldiv@dividend+1,w
  7816  0FCF  1D03               	skipz
  7817  0FD0  2FD3               	goto	u2095
  7818  0FD1  0870               	movf	___aldiv@divisor,w
  7819  0FD2  0274               	subwf	___aldiv@dividend,w
  7820  0FD3                     u2095:	
  7821  0FD3  1C03               	skipc
  7822  0FD4  2FDE               	goto	l2093
  7823  0FD5  0870               	movf	___aldiv@divisor,w
  7824  0FD6  02F4               	subwf	___aldiv@dividend,f
  7825  0FD7  0871               	movf	___aldiv@divisor+1,w
  7826  0FD8  3BF5               	subwfb	___aldiv@dividend+1,f
  7827  0FD9  0872               	movf	___aldiv@divisor+2,w
  7828  0FDA  3BF6               	subwfb	___aldiv@dividend+2,f
  7829  0FDB  0873               	movf	___aldiv@divisor+3,w
  7830  0FDC  3BF7               	subwfb	___aldiv@dividend+3,f
  7831  0FDD  1422               	bsf	___aldiv@quotient,0
  7832  0FDE                     l2093:	
  7833  0FDE  3001               	movlw	1
  7834  0FDF                     u2105:	
  7835  0FDF  36F3               	lsrf	___aldiv@divisor+3,f
  7836  0FE0  0CF2               	rrf	___aldiv@divisor+2,f
  7837  0FE1  0CF1               	rrf	___aldiv@divisor+1,f
  7838  0FE2  0CF0               	rrf	___aldiv@divisor,f
  7839  0FE3  0B89               	decfsz	9,f
  7840  0FE4  2FDF               	goto	u2105
  7841  0FE5  3001               	movlw	1
  7842  0FE6  02A0               	subwf	___aldiv@counter,f
  7843  0FE7  1D03               	btfss	3,2
  7844  0FE8  2FBE               	goto	l2085
  7845  0FE9                     l2097:	
  7846  0FE9  0821               	movf	___aldiv@sign,w
  7847  0FEA  1903               	btfsc	3,2
  7848  0FEB  2FF7               	goto	l2101
  7849  0FEC  09A2               	comf	___aldiv@quotient,f
  7850  0FED  09A3               	comf	___aldiv@quotient+1,f
  7851  0FEE  09A4               	comf	___aldiv@quotient+2,f
  7852  0FEF  09A5               	comf	___aldiv@quotient+3,f
  7853  0FF0  0AA2               	incf	___aldiv@quotient,f
  7854  0FF1  1903               	skipnz
  7855  0FF2  0AA3               	incf	___aldiv@quotient+1,f
  7856  0FF3  1903               	skipnz
  7857  0FF4  0AA4               	incf	___aldiv@quotient+2,f
  7858  0FF5  1903               	skipnz
  7859  0FF6  0AA5               	incf	___aldiv@quotient+3,f
  7860  0FF7                     l2101:	
  7861  0FF7  0825               	movf	___aldiv@quotient+3,w
  7862  0FF8  00F3               	movwf	?___aldiv+3
  7863  0FF9  0824               	movf	___aldiv@quotient+2,w
  7864  0FFA  00F2               	movwf	?___aldiv+2
  7865  0FFB  0823               	movf	___aldiv@quotient+1,w
  7866  0FFC  00F1               	movwf	?___aldiv+1
  7867  0FFD  0822               	movf	___aldiv@quotient,w
  7868  0FFE  00F0               	movwf	?___aldiv
  7869  0FFF  0008               	return
  7870  1000                     __end_of___aldiv:	
  7871                           
  7872                           	psect	text15
  7873  0008                     __ptext15:	
  7874 ;; *************** function _ADCRead *****************
  7875 ;; Defined at:
  7876 ;;		line 65 in file "adcc.c"
  7877 ;; Parameters:    Size  Location     Type
  7878 ;;  channel         1    wreg     enum E13559
  7879 ;; Auto vars:     Size  Location     Type
  7880 ;;  channel         1    3[COMMON] enum E13559
  7881 ;; Return value:  Size  Location     Type
  7882 ;;                  2    0[COMMON] unsigned int 
  7883 ;; Registers used:
  7884 ;;		wreg
  7885 ;; Tracked objects:
  7886 ;;		On entry : 0/0
  7887 ;;		On exit  : 0/0
  7888 ;;		Unchanged: 0/0
  7889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7890 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7891 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7893 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7894 ;;Total ram usage:        4 bytes
  7895 ;; Hardware stack levels used:    1
  7896 ;; This function calls:
  7897 ;;		Nothing
  7898 ;; This function is called by:
  7899 ;;		_readAnalog
  7900 ;; This function uses a non-reentrant model
  7901 ;;
  7902                           
  7903                           
  7904                           ;psect for function _ADCRead
  7905  0008                     _ADCRead:	
  7906                           
  7907                           ;incstack = 0
  7908                           ; Regs used in _ADCRead: [wreg]
  7909                           ;ADCRead@channel stored from wreg
  7910  0008  00F3               	movwf	ADCRead@channel
  7911                           
  7912                           ;adcc.c: 68: ADPCH = channel;
  7913  0009  0873               	movf	ADCRead@channel,w
  7914  000A  0021               	movlb	1	; select bank1
  7915  000B  009E               	movwf	30	;volatile
  7916                           
  7917                           ;adcc.c: 71: ADCON0bits.ADON = 1;
  7918  000C  1793               	bsf	19,7	;volatile
  7919                           
  7920                           ;adcc.c: 74: ADCON0bits.ADCONT = 0;
  7921  000D  1313               	bcf	19,6	;volatile
  7922                           
  7923                           ;adcc.c: 77: ADCON0bits.ADGO = 1;
  7924  000E  1413               	bsf	19,0	;volatile
  7925  000F                     l58:	
  7926                           ;adcc.c: 81: {
  7927                           
  7928                           ;adcc.c: 80: while (ADCON0bits.ADGO)
  7929                           
  7930  000F  1813               	btfsc	19,0	;volatile
  7931  0010  280F               	goto	l58
  7932                           
  7933                           ;adcc.c: 82: }
  7934                           ;adcc.c: 85: return ((ADRESH << 8) + ADRESL);
  7935  0011  080D               	movf	13,w	;volatile
  7936  0012  00F1               	movwf	?_ADCRead+1
  7937  0013  080C               	movf	12,w	;volatile
  7938  0014  00F0               	movwf	?_ADCRead
  7939  0015  0008               	return
  7940  0016                     __end_of_ADCRead:	
  7941                           
  7942                           	psect	text16
  7943  0DE2                     __ptext16:	
  7944 ;; *************** function _SYSTEM_Initialize *****************
  7945 ;; Defined at:
  7946 ;;		line 71 in file "system.c"
  7947 ;; Parameters:    Size  Location     Type
  7948 ;;		None
  7949 ;; Auto vars:     Size  Location     Type
  7950 ;;		None
  7951 ;; Return value:  Size  Location     Type
  7952 ;;                  1    wreg      void 
  7953 ;; Registers used:
  7954 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7955 ;; Tracked objects:
  7956 ;;		On entry : 0/0
  7957 ;;		On exit  : 0/0
  7958 ;;		Unchanged: 0/0
  7959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7962 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7963 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7964 ;;Total ram usage:        3 bytes
  7965 ;; Hardware stack levels used:    1
  7966 ;; Hardware stack levels required when called:    3
  7967 ;; This function calls:
  7968 ;;		_ADCC_Initialize
  7969 ;;		_InitCustomChars
  7970 ;;		_LCD_Clear
  7971 ;;		_LCD_Init
  7972 ;;		_OSCILLATOR_Initialize
  7973 ;;		_PIN_MANAGER_Initialize
  7974 ;;		_PWM6_Initialize
  7975 ;;		_TMR2_Initialize
  7976 ;; This function is called by:
  7977 ;;		_main
  7978 ;; This function uses a non-reentrant model
  7979 ;;
  7980                           
  7981                           
  7982                           ;psect for function _SYSTEM_Initialize
  7983  0DE2                     _SYSTEM_Initialize:	
  7984                           
  7985                           ;system.c: 73: PIN_MANAGER_Initialize();
  7986                           
  7987                           ;incstack = 0
  7988                           ; Regs used in _SYSTEM_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7989  0DE2  318C  24F7  318D   	fcall	_PIN_MANAGER_Initialize
  7990                           
  7991                           ;system.c: 74: OSCILLATOR_Initialize();
  7992  0DE5  318B  2392  318D   	fcall	_OSCILLATOR_Initialize
  7993                           
  7994                           ;system.c: 75: FVRCON = 0x00;
  7995  0DE8  0032               	movlb	18	; select bank18
  7996  0DE9  018C               	clrf	12	;volatile
  7997                           
  7998                           ;system.c: 76: ADCC_Initialize();
  7999  0DEA  318C  2432  318D   	fcall	_ADCC_Initialize
  8000                           
  8001                           ;system.c: 77: PWM6_Initialize();
  8002  0DED  318B  239B  318D   	fcall	_PWM6_Initialize
  8003                           
  8004                           ;system.c: 79: TMR2_Initialize();
  8005  0DF0  318B  23CA  318D   	fcall	_TMR2_Initialize
  8006                           
  8007                           ;system.c: 80: LCD_Init(0X00);
  8008  0DF3  3000               	movlw	0
  8009  0DF4  3180  2016  318D   	fcall	_LCD_Init
  8010                           
  8011                           ;system.c: 81: _delay((unsigned long)((200)*(32000000/4000.0)));
  8012  0DF7  3009               	movlw	9
  8013  0DF8  00FA               	movwf	??_SYSTEM_Initialize+2
  8014  0DF9  301E               	movlw	30
  8015  0DFA  00F9               	movwf	??_SYSTEM_Initialize+1
  8016  0DFB  30EB               	movlw	235
  8017  0DFC  00F8               	movwf	??_SYSTEM_Initialize
  8018  0DFD                     u2687:	
  8019  0DFD  0BF8               	decfsz	??_SYSTEM_Initialize,f
  8020  0DFE  2DFD               	goto	u2687
  8021  0DFF  0BF9               	decfsz	??_SYSTEM_Initialize+1,f
  8022  0E00  2DFD               	goto	u2687
  8023  0E01  0BFA               	decfsz	??_SYSTEM_Initialize+2,f
  8024  0E02  2DFD               	goto	u2687
  8025  0E03  0000               	nop
  8026                           
  8027                           ;system.c: 82: LCD_Clear();
  8028  0E04  318B  238A  318D   	fcall	_LCD_Clear
  8029                           
  8030                           ;system.c: 83: _delay((unsigned long)((100)*(32000000/4000.0)));
  8031  0E07  3005               	movlw	5
  8032  0E08  00FA               	movwf	??_SYSTEM_Initialize+2
  8033  0E09  300F               	movlw	15
  8034  0E0A  00F9               	movwf	??_SYSTEM_Initialize+1
  8035  0E0B  30F4               	movlw	244
  8036  0E0C  00F8               	movwf	??_SYSTEM_Initialize
  8037  0E0D                     u2697:	
  8038  0E0D  0BF8               	decfsz	??_SYSTEM_Initialize,f
  8039  0E0E  2E0D               	goto	u2697
  8040  0E0F  0BF9               	decfsz	??_SYSTEM_Initialize+1,f
  8041  0E10  2E0D               	goto	u2697
  8042  0E11  0BFA               	decfsz	??_SYSTEM_Initialize+2,f
  8043  0E12  2E0D               	goto	u2697
  8044                           
  8045                           ;system.c: 84: InitCustomChars();
  8046  0E13  318C  24A5  318D   	fcall	_InitCustomChars
  8047                           
  8048                           ;system.c: 85: _delay((unsigned long)((200)*(32000000/4000.0)));
  8049  0E16  3009               	movlw	9
  8050  0E17  00FA               	movwf	??_SYSTEM_Initialize+2
  8051  0E18  301E               	movlw	30
  8052  0E19  00F9               	movwf	??_SYSTEM_Initialize+1
  8053  0E1A  30EB               	movlw	235
  8054  0E1B  00F8               	movwf	??_SYSTEM_Initialize
  8055  0E1C                     u2707:	
  8056  0E1C  0BF8               	decfsz	??_SYSTEM_Initialize,f
  8057  0E1D  2E1C               	goto	u2707
  8058  0E1E  0BF9               	decfsz	??_SYSTEM_Initialize+1,f
  8059  0E1F  2E1C               	goto	u2707
  8060  0E20  0BFA               	decfsz	??_SYSTEM_Initialize+2,f
  8061  0E21  2E1C               	goto	u2707
  8062  0E22  0000               	nop
  8063  0E23  0008               	return
  8064  0E24                     __end_of_SYSTEM_Initialize:	
  8065                           
  8066                           	psect	text17
  8067  0BCA                     __ptext17:	
  8068 ;; *************** function _TMR2_Initialize *****************
  8069 ;; Defined at:
  8070 ;;		line 3 in file "tmr2.c"
  8071 ;; Parameters:    Size  Location     Type
  8072 ;;		None
  8073 ;; Auto vars:     Size  Location     Type
  8074 ;;		None
  8075 ;; Return value:  Size  Location     Type
  8076 ;;                  1    wreg      void 
  8077 ;; Registers used:
  8078 ;;		wreg, status,2
  8079 ;; Tracked objects:
  8080 ;;		On entry : 0/0
  8081 ;;		On exit  : 0/0
  8082 ;;		Unchanged: 0/0
  8083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8087 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8088 ;;Total ram usage:        0 bytes
  8089 ;; Hardware stack levels used:    1
  8090 ;; This function calls:
  8091 ;;		Nothing
  8092 ;; This function is called by:
  8093 ;;		_SYSTEM_Initialize
  8094 ;; This function uses a non-reentrant model
  8095 ;;
  8096                           
  8097                           
  8098                           ;psect for function _TMR2_Initialize
  8099  0BCA                     _TMR2_Initialize:	
  8100                           
  8101                           ;tmr2.c: 5: T2CON = 0x00;
  8102                           
  8103                           ;incstack = 0
  8104                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  8105  0BCA  0025               	movlb	5	; select bank5
  8106  0BCB  018E               	clrf	14	;volatile
  8107                           
  8108                           ;tmr2.c: 7: T2CLKCON = 0x01;
  8109  0BCC  3001               	movlw	1
  8110  0BCD  0090               	movwf	16	;volatile
  8111                           
  8112                           ;tmr2.c: 9: T2HLT = 0x00;
  8113  0BCE  018F               	clrf	15	;volatile
  8114                           
  8115                           ;tmr2.c: 11: T2RST = 0x00;
  8116  0BCF  0191               	clrf	17	;volatile
  8117                           
  8118                           ;tmr2.c: 13: T2PR = 0xFF;
  8119  0BD0  30FF               	movlw	255
  8120  0BD1  008D               	movwf	13	;volatile
  8121                           
  8122                           ;tmr2.c: 15: T2TMR = 0x00;
  8123  0BD2  018C               	clrf	12	;volatile
  8124                           
  8125                           ;tmr2.c: 17: PIR4bits.TMR2IF = 0;
  8126  0BD3  002E               	movlb	14	; select bank14
  8127  0BD4  1090               	bcf	16,1	;volatile
  8128                           
  8129                           ;tmr2.c: 19: T2CONbits.TMR2ON = 1;
  8130  0BD5  0025               	movlb	5	; select bank5
  8131  0BD6  178E               	bsf	14,7	;volatile
  8132  0BD7  0008               	return
  8133  0BD8                     __end_of_TMR2_Initialize:	
  8134                           
  8135                           	psect	text18
  8136  0B9B                     __ptext18:	
  8137 ;; *************** function _PWM6_Initialize *****************
  8138 ;; Defined at:
  8139 ;;		line 3 in file "pwm6.c"
  8140 ;; Parameters:    Size  Location     Type
  8141 ;;		None
  8142 ;; Auto vars:     Size  Location     Type
  8143 ;;		None
  8144 ;; Return value:  Size  Location     Type
  8145 ;;                  1    wreg      void 
  8146 ;; Registers used:
  8147 ;;		wreg, status,2, status,0
  8148 ;; Tracked objects:
  8149 ;;		On entry : 0/0
  8150 ;;		On exit  : 0/0
  8151 ;;		Unchanged: 0/0
  8152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8156 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8157 ;;Total ram usage:        0 bytes
  8158 ;; Hardware stack levels used:    1
  8159 ;; This function calls:
  8160 ;;		Nothing
  8161 ;; This function is called by:
  8162 ;;		_SYSTEM_Initialize
  8163 ;; This function uses a non-reentrant model
  8164 ;;
  8165                           
  8166                           
  8167                           ;psect for function _PWM6_Initialize
  8168  0B9B                     _PWM6_Initialize:	
  8169                           
  8170                           ;pwm6.c: 5: PWM6CON = 0x80;
  8171                           
  8172                           ;incstack = 0
  8173                           ; Regs used in _PWM6_Initialize: [wreg+status,2+status,0]
  8174  0B9B  3080               	movlw	128
  8175  0B9C  0027               	movlb	7	; select bank7
  8176  0B9D  008E               	movwf	14	;volatile
  8177                           
  8178                           ;pwm6.c: 7: PWM6DCH = 0x00;
  8179  0B9E  018D               	clrf	13	;volatile
  8180                           
  8181                           ;pwm6.c: 9: PWM6DCL = 0x00;
  8182  0B9F  018C               	clrf	12	;volatile
  8183                           
  8184                           ;pwm6.c: 11: CCPTMRS1bits.P6TSEL = 0x1;
  8185  0BA0  0024               	movlb	4	; select bank4
  8186  0BA1  081F               	movf	31,w	;volatile
  8187  0BA2  39F3               	andlw	-13
  8188  0BA3  3804               	iorlw	4
  8189  0BA4  009F               	movwf	31	;volatile
  8190  0BA5  0008               	return
  8191  0BA6                     __end_of_PWM6_Initialize:	
  8192                           
  8193                           	psect	text19
  8194  0CF7                     __ptext19:	
  8195 ;; *************** function _PIN_MANAGER_Initialize *****************
  8196 ;; Defined at:
  8197 ;;		line 5 in file "pin_manager.c"
  8198 ;; Parameters:    Size  Location     Type
  8199 ;;		None
  8200 ;; Auto vars:     Size  Location     Type
  8201 ;;  state           1    0[COMMON] unsigned char 
  8202 ;; Return value:  Size  Location     Type
  8203 ;;                  1    wreg      void 
  8204 ;; Registers used:
  8205 ;;		wreg, status,2
  8206 ;; Tracked objects:
  8207 ;;		On entry : 0/0
  8208 ;;		On exit  : 0/0
  8209 ;;		Unchanged: 0/0
  8210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8212 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8214 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8215 ;;Total ram usage:        1 bytes
  8216 ;; Hardware stack levels used:    1
  8217 ;; This function calls:
  8218 ;;		Nothing
  8219 ;; This function is called by:
  8220 ;;		_SYSTEM_Initialize
  8221 ;; This function uses a non-reentrant model
  8222 ;;
  8223                           
  8224                           
  8225                           ;psect for function _PIN_MANAGER_Initialize
  8226  0CF7                     _PIN_MANAGER_Initialize:	
  8227                           
  8228                           ;pin_manager.c: 7: LATA = 0x00;
  8229                           
  8230                           ;incstack = 0
  8231                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  8232  0CF7  0020               	movlb	0	; select bank0
  8233  0CF8  0196               	clrf	22	;volatile
  8234                           
  8235                           ;pin_manager.c: 8: LATB = 0x00;
  8236  0CF9  0197               	clrf	23	;volatile
  8237                           
  8238                           ;pin_manager.c: 9: LATC = 0x00;
  8239  0CFA  0198               	clrf	24	;volatile
  8240                           
  8241                           ;pin_manager.c: 11: WPUA = 0x02;
  8242  0CFB  3002               	movlw	2
  8243  0CFC  003E               	movlb	30	; select bank30
  8244  0CFD  00B9               	movwf	57	;volatile
  8245                           
  8246                           ;pin_manager.c: 12: WPUB = 0x00;
  8247  0CFE  01C4               	clrf	68	;volatile
  8248                           
  8249                           ;pin_manager.c: 13: WPUC = 0x00;
  8250  0CFF  01CF               	clrf	79	;volatile
  8251                           
  8252                           ;pin_manager.c: 14: WPUE = 0x8;
  8253  0D00  3008               	movlw	8
  8254  0D01  00E5               	movwf	101	;volatile
  8255                           
  8256                           ;pin_manager.c: 16: TRISA = 0x02;
  8257  0D02  3002               	movlw	2
  8258  0D03  0020               	movlb	0	; select bank0
  8259  0D04  0091               	movwf	17	;volatile
  8260                           
  8261                           ;pin_manager.c: 17: TRISA = 0x3A;
  8262  0D05  303A               	movlw	58
  8263  0D06  0091               	movwf	17	;volatile
  8264                           
  8265                           ;pin_manager.c: 18: TRISB = 0x0A;
  8266  0D07  300A               	movlw	10
  8267  0D08  0092               	movwf	18	;volatile
  8268                           
  8269                           ;pin_manager.c: 19: TRISC = 0x10;
  8270  0D09  3010               	movlw	16
  8271  0D0A  0093               	movwf	19	;volatile
  8272                           
  8273                           ;pin_manager.c: 21: ANSELA = 0x3A;
  8274  0D0B  303A               	movlw	58
  8275  0D0C  003E               	movlb	30	; select bank30
  8276  0D0D  00B8               	movwf	56	;volatile
  8277                           
  8278                           ;pin_manager.c: 22: ANSELB = 0x0A;
  8279  0D0E  300A               	movlw	10
  8280  0D0F  00C3               	movwf	67	;volatile
  8281                           
  8282                           ;pin_manager.c: 23: ANSELC = 0x00;
  8283  0D10  01CE               	clrf	78	;volatile
  8284                           
  8285                           ;pin_manager.c: 25: PIE0bits.IOCIE = 0;
  8286  0D11  002E               	movlb	14	; select bank14
  8287  0D12  1216               	bcf	22,4	;volatile
  8288                           
  8289                           ;pin_manager.c: 26: bool state = GIE;
  8290  0D13  3000               	movlw	0
  8291  0D14  1B8B               	btfsc	11,7	;volatile
  8292  0D15  3001               	movlw	1
  8293  0D16  00F0               	movwf	PIN_MANAGER_Initialize@state
  8294                           
  8295                           ;pin_manager.c: 27: GIE = 0;
  8296  0D17  138B               	bcf	11,7	;volatile
  8297                           
  8298                           ;pin_manager.c: 28: PPSLOCK = 0x55;
  8299  0D18  3055               	movlw	85
  8300  0D19  003D               	movlb	29	; select bank29
  8301  0D1A  008F               	movwf	15	;volatile
  8302                           
  8303                           ;pin_manager.c: 29: PPSLOCK = 0xAA;
  8304  0D1B  30AA               	movlw	170
  8305  0D1C  008F               	movwf	15	;volatile
  8306                           
  8307                           ;pin_manager.c: 30: PPSLOCKbits.PPSLOCKED = 0x00;
  8308  0D1D  100F               	bcf	15,0	;volatile
  8309                           
  8310                           ;pin_manager.c: 33: RC2PPS = 0x000E;
  8311  0D1E  300E               	movlw	14
  8312  0D1F  003E               	movlb	30	; select bank30
  8313  0D20  00A2               	movwf	34	;volatile
  8314                           
  8315                           ;pin_manager.c: 37: PPSLOCK = 0x55;
  8316  0D21  3055               	movlw	85
  8317  0D22  003D               	movlb	29	; select bank29
  8318  0D23  008F               	movwf	15	;volatile
  8319                           
  8320                           ;pin_manager.c: 38: PPSLOCK = 0xAA;
  8321  0D24  30AA               	movlw	170
  8322  0D25  008F               	movwf	15	;volatile
  8323                           
  8324                           ;pin_manager.c: 39: PPSLOCKbits.PPSLOCKED = 0x01;
  8325  0D26  140F               	bsf	15,0	;volatile
  8326                           
  8327                           ;pin_manager.c: 40: GIE = state;
  8328  0D27  1C70               	btfss	PIN_MANAGER_Initialize@state,0
  8329  0D28  2D2B               	goto	u1990
  8330  0D29  178B               	bsf	11,7	;volatile
  8331  0D2A  0008               	return
  8332  0D2B                     u1990:	
  8333  0D2B  138B               	bcf	11,7	;volatile
  8334  0D2C  0008               	return
  8335  0D2D                     __end_of_PIN_MANAGER_Initialize:	
  8336                           
  8337                           	psect	text20
  8338  0B92                     __ptext20:	
  8339 ;; *************** function _OSCILLATOR_Initialize *****************
  8340 ;; Defined at:
  8341 ;;		line 89 in file "system.c"
  8342 ;; Parameters:    Size  Location     Type
  8343 ;;		None
  8344 ;; Auto vars:     Size  Location     Type
  8345 ;;		None
  8346 ;; Return value:  Size  Location     Type
  8347 ;;                  1    wreg      void 
  8348 ;; Registers used:
  8349 ;;		wreg, status,2
  8350 ;; Tracked objects:
  8351 ;;		On entry : 0/0
  8352 ;;		On exit  : 0/0
  8353 ;;		Unchanged: 0/0
  8354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8358 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8359 ;;Total ram usage:        0 bytes
  8360 ;; Hardware stack levels used:    1
  8361 ;; This function calls:
  8362 ;;		Nothing
  8363 ;; This function is called by:
  8364 ;;		_SYSTEM_Initialize
  8365 ;; This function uses a non-reentrant model
  8366 ;;
  8367                           
  8368                           
  8369                           ;psect for function _OSCILLATOR_Initialize
  8370  0B92                     _OSCILLATOR_Initialize:	
  8371                           
  8372                           ;system.c: 91: OSCCON1 = 0x60;
  8373                           
  8374                           ;incstack = 0
  8375                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  8376  0B92  3060               	movlw	96
  8377  0B93  0031               	movlb	17	; select bank17
  8378  0B94  008D               	movwf	13	;volatile
  8379                           
  8380                           ;system.c: 92: OSCCON3 = 0x00;
  8381  0B95  018F               	clrf	15	;volatile
  8382                           
  8383                           ;system.c: 93: OSCEN = 0x00;
  8384  0B96  0191               	clrf	17	;volatile
  8385                           
  8386                           ;system.c: 94: OSCFRQ = 0x06;
  8387  0B97  3006               	movlw	6
  8388  0B98  0093               	movwf	19	;volatile
  8389                           
  8390                           ;system.c: 95: OSCTUNE = 0x00;
  8391  0B99  0192               	clrf	18	;volatile
  8392  0B9A  0008               	return
  8393  0B9B                     __end_of_OSCILLATOR_Initialize:	
  8394                           
  8395                           	psect	text21
  8396  0016                     __ptext21:	
  8397 ;; *************** function _LCD_Init *****************
  8398 ;; Defined at:
  8399 ;;		line 154 in file "lcd.c"
  8400 ;; Parameters:    Size  Location     Type
  8401 ;;  style           1    wreg     unsigned char 
  8402 ;; Auto vars:     Size  Location     Type
  8403 ;;  style           1    7[COMMON] unsigned char 
  8404 ;; Return value:  Size  Location     Type
  8405 ;;                  1    wreg      void 
  8406 ;; Registers used:
  8407 ;;		wreg, status,2, status,0, pclath, cstack
  8408 ;; Tracked objects:
  8409 ;;		On entry : 0/0
  8410 ;;		On exit  : 0/0
  8411 ;;		Unchanged: 0/0
  8412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8414 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8415 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8416 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8417 ;;Total ram usage:        4 bytes
  8418 ;; Hardware stack levels used:    1
  8419 ;; Hardware stack levels required when called:    2
  8420 ;; This function calls:
  8421 ;;		_LCD_Cmd
  8422 ;;		_LCD_Port
  8423 ;; This function is called by:
  8424 ;;		_SYSTEM_Initialize
  8425 ;; This function uses a non-reentrant model
  8426 ;;
  8427                           
  8428                           
  8429                           ;psect for function _LCD_Init
  8430  0016                     _LCD_Init:	
  8431                           
  8432                           ;incstack = 0
  8433                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  8434                           ;LCD_Init@style stored from wreg
  8435  0016  00F7               	movwf	LCD_Init@style
  8436                           
  8437                           ;lcd.c: 156: LCD_Port(0x00);
  8438  0017  3000               	movlw	0
  8439  0018  318C  2402  3180   	fcall	_LCD_Port
  8440                           
  8441                           ;lcd.c: 158: _delay((unsigned long)((100)*(32000000/4000.0)));
  8442  001B  3005               	movlw	5
  8443  001C  00F6               	movwf	??_LCD_Init+2
  8444  001D  300F               	movlw	15
  8445  001E  00F5               	movwf	??_LCD_Init+1
  8446  001F  30F4               	movlw	244
  8447  0020  00F4               	movwf	??_LCD_Init
  8448  0021                     u2717:	
  8449  0021  0BF4               	decfsz	??_LCD_Init,f
  8450  0022  2821               	goto	u2717
  8451  0023  0BF5               	decfsz	??_LCD_Init+1,f
  8452  0024  2821               	goto	u2717
  8453  0025  0BF6               	decfsz	??_LCD_Init+2,f
  8454  0026  2821               	goto	u2717
  8455                           
  8456                           ;lcd.c: 160: LCD_Cmd(0x03);
  8457  0027  3003               	movlw	3
  8458  0028  318B  23D8  3180   	fcall	_LCD_Cmd
  8459                           
  8460                           ;lcd.c: 162: _delay((unsigned long)((10)*(32000000/4000.0)));
  8461  002B  3068               	movlw	104
  8462  002C  00F5               	movwf	??_LCD_Init+1
  8463  002D  30E4               	movlw	228
  8464  002E  00F4               	movwf	??_LCD_Init
  8465  002F                     u2727:	
  8466  002F  0BF4               	decfsz	??_LCD_Init,f
  8467  0030  282F               	goto	u2727
  8468  0031  0BF5               	decfsz	??_LCD_Init+1,f
  8469  0032  282F               	goto	u2727
  8470  0033  0000               	nop
  8471                           
  8472                           ;lcd.c: 164: LCD_Cmd(0x03);
  8473  0034  3003               	movlw	3
  8474  0035  318B  23D8  3180   	fcall	_LCD_Cmd
  8475                           
  8476                           ;lcd.c: 166: _delay((unsigned long)((120)*(32000000/4000000.0)));
  8477  0038  3089               	movlw	137
  8478  0039  00F4               	movwf	??_LCD_Init
  8479  003A                     u2737:	
  8480  003A  3200               	nop2
  8481  003B  3200               	nop2
  8482  003C  0BF4               	decfsz	??_LCD_Init,f
  8483  003D  283A               	goto	u2737
  8484                           
  8485                           ;lcd.c: 168: LCD_Cmd(0x03);
  8486  003E  3003               	movlw	3
  8487  003F  318B  23D8  3180   	fcall	_LCD_Cmd
  8488                           
  8489                           ;lcd.c: 170: _delay((unsigned long)((120)*(32000000/4000000.0)));
  8490  0042  3089               	movlw	137
  8491  0043  00F4               	movwf	??_LCD_Init
  8492  0044                     u2747:	
  8493  0044  3200               	nop2
  8494  0045  3200               	nop2
  8495  0046  0BF4               	decfsz	??_LCD_Init,f
  8496  0047  2844               	goto	u2747
  8497                           
  8498                           ;lcd.c: 172: LCD_Cmd(0x02);
  8499  0048  3002               	movlw	2
  8500  0049  318B  23D8  3180   	fcall	_LCD_Cmd
  8501                           
  8502                           ;lcd.c: 174: _delay((unsigned long)((120)*(32000000/4000000.0)));
  8503  004C  3089               	movlw	137
  8504  004D  00F4               	movwf	??_LCD_Init
  8505  004E                     u2757:	
  8506  004E  3200               	nop2
  8507  004F  3200               	nop2
  8508  0050  0BF4               	decfsz	??_LCD_Init,f
  8509  0051  284E               	goto	u2757
  8510                           
  8511                           ;lcd.c: 176: LCD_Cmd(0x2);
  8512  0052  3002               	movlw	2
  8513  0053  318B  23D8  3180   	fcall	_LCD_Cmd
  8514                           
  8515                           ;lcd.c: 178: LCD_Cmd(0x8);
  8516  0056  3008               	movlw	8
  8517  0057  318B  23D8  3180   	fcall	_LCD_Cmd
  8518                           
  8519                           ;lcd.c: 180: _delay((unsigned long)((120)*(32000000/4000000.0)));
  8520  005A  3089               	movlw	137
  8521  005B  00F4               	movwf	??_LCD_Init
  8522  005C                     u2767:	
  8523  005C  3200               	nop2
  8524  005D  3200               	nop2
  8525  005E  0BF4               	decfsz	??_LCD_Init,f
  8526  005F  285C               	goto	u2767
  8527                           
  8528                           ;lcd.c: 182: LCD_Cmd(0x0);
  8529  0060  3000               	movlw	0
  8530  0061  318B  23D8  3180   	fcall	_LCD_Cmd
  8531                           
  8532                           ;lcd.c: 184: LCD_Cmd(0x8);
  8533  0064  3008               	movlw	8
  8534  0065  318B  23D8  3180   	fcall	_LCD_Cmd
  8535                           
  8536                           ;lcd.c: 186: _delay((unsigned long)((120)*(32000000/4000000.0)));
  8537  0068  3089               	movlw	137
  8538  0069  00F4               	movwf	??_LCD_Init
  8539  006A                     u2777:	
  8540  006A  3200               	nop2
  8541  006B  3200               	nop2
  8542  006C  0BF4               	decfsz	??_LCD_Init,f
  8543  006D  286A               	goto	u2777
  8544                           
  8545                           ;lcd.c: 188: LCD_Cmd(0x0);
  8546  006E  3000               	movlw	0
  8547  006F  318B  23D8  3180   	fcall	_LCD_Cmd
  8548                           
  8549                           ;lcd.c: 190: LCD_Cmd(0x1);
  8550  0072  3001               	movlw	1
  8551  0073  318B  23D8  3180   	fcall	_LCD_Cmd
  8552                           
  8553                           ;lcd.c: 192: _delay((unsigned long)((5)*(32000000/4000.0)));
  8554  0076  3034               	movlw	52
  8555  0077  00F5               	movwf	??_LCD_Init+1
  8556  0078  30F1               	movlw	241
  8557  0079  00F4               	movwf	??_LCD_Init
  8558  007A                     u2787:	
  8559  007A  0BF4               	decfsz	??_LCD_Init,f
  8560  007B  287A               	goto	u2787
  8561  007C  0BF5               	decfsz	??_LCD_Init+1,f
  8562  007D  287A               	goto	u2787
  8563  007E  3200               	nop2
  8564                           
  8565                           ;lcd.c: 194: LCD_Cmd(0x0);
  8566  007F  3000               	movlw	0
  8567  0080  318B  23D8  3180   	fcall	_LCD_Cmd
  8568                           
  8569                           ;lcd.c: 196: LCD_Cmd(0x6);
  8570  0083  3006               	movlw	6
  8571  0084  318B  23D8  3180   	fcall	_LCD_Cmd
  8572                           
  8573                           ;lcd.c: 198: _delay((unsigned long)((120)*(32000000/4000000.0)));
  8574  0087  3089               	movlw	137
  8575  0088  00F4               	movwf	??_LCD_Init
  8576  0089                     u2797:	
  8577  0089  3200               	nop2
  8578  008A  3200               	nop2
  8579  008B  0BF4               	decfsz	??_LCD_Init,f
  8580  008C  2889               	goto	u2797
  8581                           
  8582                           ;lcd.c: 200: LCD_Cmd(0x0);
  8583  008D  3000               	movlw	0
  8584  008E  318B  23D8  3180   	fcall	_LCD_Cmd
  8585                           
  8586                           ;lcd.c: 202: LCD_Cmd(0xc|style);
  8587  0091  0877               	movf	LCD_Init@style,w
  8588  0092  380C               	iorlw	12
  8589  0093  318B  23D8  3180   	fcall	_LCD_Cmd
  8590                           
  8591                           ;lcd.c: 204: _delay((unsigned long)((120)*(32000000/4000000.0)));
  8592  0096  3089               	movlw	137
  8593  0097  00F4               	movwf	??_LCD_Init
  8594  0098                     u2807:	
  8595  0098  3200               	nop2
  8596  0099  3200               	nop2
  8597  009A  0BF4               	decfsz	??_LCD_Init,f
  8598  009B  2898               	goto	u2807
  8599  009C  0008               	return
  8600  009D                     __end_of_LCD_Init:	
  8601                           
  8602                           	psect	text22
  8603  0B8A                     __ptext22:	
  8604 ;; *************** function _LCD_Clear *****************
  8605 ;; Defined at:
  8606 ;;		line 75 in file "lcd.c"
  8607 ;; Parameters:    Size  Location     Type
  8608 ;;		None
  8609 ;; Auto vars:     Size  Location     Type
  8610 ;;		None
  8611 ;; Return value:  Size  Location     Type
  8612 ;;                  1    wreg      void 
  8613 ;; Registers used:
  8614 ;;		wreg, status,2, status,0, pclath, cstack
  8615 ;; Tracked objects:
  8616 ;;		On entry : 0/0
  8617 ;;		On exit  : 0/0
  8618 ;;		Unchanged: 0/0
  8619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8623 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8624 ;;Total ram usage:        0 bytes
  8625 ;; Hardware stack levels used:    1
  8626 ;; Hardware stack levels required when called:    2
  8627 ;; This function calls:
  8628 ;;		_LCD_Cmd
  8629 ;; This function is called by:
  8630 ;;		_SYSTEM_Initialize
  8631 ;;		_main
  8632 ;; This function uses a non-reentrant model
  8633 ;;
  8634                           
  8635                           
  8636                           ;psect for function _LCD_Clear
  8637  0B8A                     _LCD_Clear:	
  8638                           
  8639                           ;lcd.c: 77: LCD_Cmd(0);
  8640                           
  8641                           ;incstack = 0
  8642                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  8643  0B8A  3000               	movlw	0
  8644  0B8B  318B  23D8  318B   	fcall	_LCD_Cmd
  8645                           
  8646                           ;lcd.c: 78: LCD_Cmd(1);
  8647  0B8E  3001               	movlw	1
  8648  0B8F  318B  23D8         	fcall	_LCD_Cmd
  8649  0B91  0008               	return
  8650  0B92                     __end_of_LCD_Clear:	
  8651                           
  8652                           	psect	text23
  8653  0CA5                     __ptext23:	
  8654 ;; *************** function _InitCustomChars *****************
  8655 ;; Defined at:
  8656 ;;		line 29 in file "lcd.c"
  8657 ;; Parameters:    Size  Location     Type
  8658 ;;		None
  8659 ;; Auto vars:     Size  Location     Type
  8660 ;;  i               1    6[COMMON] unsigned char 
  8661 ;; Return value:  Size  Location     Type
  8662 ;;                  1    wreg      void 
  8663 ;; Registers used:
  8664 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8665 ;; Tracked objects:
  8666 ;;		On entry : 0/0
  8667 ;;		On exit  : 0/0
  8668 ;;		Unchanged: 0/0
  8669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8671 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8672 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8673 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8674 ;;Total ram usage:        2 bytes
  8675 ;; Hardware stack levels used:    1
  8676 ;; Hardware stack levels required when called:    2
  8677 ;; This function calls:
  8678 ;;		_LCD_Cmd
  8679 ;;		_LCD_Write_Char
  8680 ;; This function is called by:
  8681 ;;		_SYSTEM_Initialize
  8682 ;; This function uses a non-reentrant model
  8683 ;;
  8684                           
  8685                           
  8686                           ;psect for function _InitCustomChars
  8687  0CA5                     _InitCustomChars:	
  8688                           
  8689                           ;lcd.c: 31: uint8_t i;
  8690                           ;lcd.c: 32: LCD_Cmd(0x04);
  8691                           
  8692                           ;incstack = 0
  8693                           ; Regs used in _InitCustomChars: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8694  0CA5  3004               	movlw	4
  8695  0CA6  318B  23D8  318C   	fcall	_LCD_Cmd
  8696                           
  8697                           ;lcd.c: 33: LCD_Cmd(0x00);
  8698  0CA9  3000               	movlw	0
  8699  0CAA  318B  23D8  318C   	fcall	_LCD_Cmd
  8700                           
  8701                           ;lcd.c: 34: for (i = 0; i < sizeof(__cgram) ; i++)
  8702  0CAD  01F6               	clrf	InitCustomChars@i
  8703  0CAE  3018               	movlw	24
  8704  0CAF  0276               	subwf	InitCustomChars@i,w
  8705  0CB0  1803               	btfsc	3,0
  8706  0CB1  2CC3               	goto	l1941
  8707  0CB2                     l1935:	
  8708                           
  8709                           ;lcd.c: 35: LCD_Write_Char(__cgram[i]);
  8710  0CB2  0876               	movf	InitCustomChars@i,w
  8711  0CB3  3E20               	addlw	(low (___cgram| (0+256)))& (0+255)
  8712  0CB4  0086               	movwf	6
  8713  0CB5  3001               	movlw	1	; select bank2/3
  8714  0CB6  0087               	movwf	7
  8715  0CB7  0801               	movf	1,w
  8716  0CB8  318C  24CB  318C   	fcall	_LCD_Write_Char
  8717  0CBB  3001               	movlw	1
  8718  0CBC  00F5               	movwf	??_InitCustomChars
  8719  0CBD  0875               	movf	??_InitCustomChars,w
  8720  0CBE  07F6               	addwf	InitCustomChars@i,f
  8721  0CBF  3018               	movlw	24
  8722  0CC0  0276               	subwf	InitCustomChars@i,w
  8723  0CC1  1C03               	skipc
  8724  0CC2  2CB2               	goto	l1935
  8725  0CC3                     l1941:	
  8726                           
  8727                           ;lcd.c: 36: LCD_Cmd(0);
  8728  0CC3  3000               	movlw	0
  8729  0CC4  318B  23D8  318C   	fcall	_LCD_Cmd
  8730                           
  8731                           ;lcd.c: 37: LCD_Cmd(2);
  8732  0CC7  3002               	movlw	2
  8733  0CC8  318B  23D8         	fcall	_LCD_Cmd
  8734  0CCA  0008               	return
  8735  0CCB                     __end_of_InitCustomChars:	
  8736                           
  8737                           	psect	text24
  8738  0C32                     __ptext24:	
  8739 ;; *************** function _ADCC_Initialize *****************
  8740 ;; Defined at:
  8741 ;;		line 16 in file "adcc.c"
  8742 ;; Parameters:    Size  Location     Type
  8743 ;;		None
  8744 ;; Auto vars:     Size  Location     Type
  8745 ;;		None
  8746 ;; Return value:  Size  Location     Type
  8747 ;;                  1    wreg      void 
  8748 ;; Registers used:
  8749 ;;		wreg, status,2
  8750 ;; Tracked objects:
  8751 ;;		On entry : 0/0
  8752 ;;		On exit  : 0/0
  8753 ;;		Unchanged: 0/0
  8754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8759 ;;Total ram usage:        0 bytes
  8760 ;; Hardware stack levels used:    1
  8761 ;; This function calls:
  8762 ;;		Nothing
  8763 ;; This function is called by:
  8764 ;;		_SYSTEM_Initialize
  8765 ;; This function uses a non-reentrant model
  8766 ;;
  8767                           
  8768                           
  8769                           ;psect for function _ADCC_Initialize
  8770  0C32                     _ADCC_Initialize:	
  8771                           
  8772                           ;adcc.c: 19: ADCON1 = 0x00;
  8773                           
  8774                           ;incstack = 0
  8775                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
  8776  0C32  0021               	movlb	1	; select bank1
  8777  0C33  0194               	clrf	20	;volatile
  8778                           
  8779                           ;adcc.c: 21: ADCON2 = 0x00;
  8780  0C34  0195               	clrf	21	;volatile
  8781                           
  8782                           ;adcc.c: 23: ADCON3 = 0x00;
  8783  0C35  0196               	clrf	22	;volatile
  8784                           
  8785                           ;adcc.c: 25: ADACT = 0x00;
  8786  0C36  0199               	clrf	25	;volatile
  8787                           
  8788                           ;adcc.c: 27: ADSTAT = 0x00;
  8789  0C37  0197               	clrf	23	;volatile
  8790                           
  8791                           ;adcc.c: 29: ADCLK = 0x3F;
  8792  0C38  303F               	movlw	63
  8793  0C39  0098               	movwf	24	;volatile
  8794                           
  8795                           ;adcc.c: 33: ADREF = 0x00;
  8796  0C3A  019A               	clrf	26	;volatile
  8797                           
  8798                           ;adcc.c: 35: ADCAP = 0x00;
  8799  0C3B  019B               	clrf	27	;volatile
  8800                           
  8801                           ;adcc.c: 38: ADPRE = 0x07;
  8802  0C3C  3007               	movlw	7
  8803  0C3D  009C               	movwf	28	;volatile
  8804                           
  8805                           ;adcc.c: 40: ADACQ = 0x00;
  8806  0C3E  019D               	clrf	29	;volatile
  8807                           
  8808                           ;adcc.c: 42: ADPCH = 0x00;
  8809  0C3F  019E               	clrf	30	;volatile
  8810                           
  8811                           ;adcc.c: 44: ADRPT = 0x00;
  8812  0C40  0022               	movlb	2	; select bank2
  8813  0C41  018D               	clrf	13	;volatile
  8814                           
  8815                           ;adcc.c: 46: ADLTHL = 0x00;
  8816  0C42  018E               	clrf	14	;volatile
  8817                           
  8818                           ;adcc.c: 48: ADLTHH = 0x00;
  8819  0C43  018F               	clrf	15	;volatile
  8820                           
  8821                           ;adcc.c: 50: ADUTHL = 0x00;
  8822  0C44  0190               	clrf	16	;volatile
  8823                           
  8824                           ;adcc.c: 52: ADUTHH = 0x00;
  8825  0C45  0191               	clrf	17	;volatile
  8826                           
  8827                           ;adcc.c: 54: ADSTPTL = 0x00;
  8828  0C46  0192               	clrf	18	;volatile
  8829                           
  8830                           ;adcc.c: 56: ADSTPTH = 0x00;
  8831  0C47  0193               	clrf	19	;volatile
  8832                           
  8833                           ;adcc.c: 59: ADCON0 = 0x84;
  8834  0C48  3084               	movlw	132
  8835  0C49  0021               	movlb	1	; select bank1
  8836  0C4A  0093               	movwf	19	;volatile
  8837  0C4B  0008               	return
  8838  0C4C                     __end_of_ADCC_Initialize:	
  8839                           
  8840                           	psect	text25
  8841  0BEC                     __ptext25:	
  8842 ;; *************** function _PWM6_LoadDutyValue *****************
  8843 ;; Defined at:
  8844 ;;		line 14 in file "pwm6.c"
  8845 ;; Parameters:    Size  Location     Type
  8846 ;;  dutyCycle       2    0[COMMON] unsigned int 
  8847 ;; Auto vars:     Size  Location     Type
  8848 ;;		None
  8849 ;; Return value:  Size  Location     Type
  8850 ;;                  1    wreg      void 
  8851 ;; Registers used:
  8852 ;;		wreg, status,2, status,0
  8853 ;; Tracked objects:
  8854 ;;		On entry : 0/0
  8855 ;;		On exit  : 0/0
  8856 ;;		Unchanged: 0/0
  8857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8858 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8860 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8861 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8862 ;;Total ram usage:        4 bytes
  8863 ;; Hardware stack levels used:    1
  8864 ;; This function calls:
  8865 ;;		Nothing
  8866 ;; This function is called by:
  8867 ;;		_main
  8868 ;; This function uses a non-reentrant model
  8869 ;;
  8870                           
  8871                           
  8872                           ;psect for function _PWM6_LoadDutyValue
  8873  0BEC                     _PWM6_LoadDutyValue:	
  8874                           
  8875                           ;pwm6.c: 16: PWM6DCH = (dutyCycle & 0x03FC)>>2;
  8876                           
  8877                           ;incstack = 0
  8878                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
  8879  0BEC  0871               	movf	PWM6_LoadDutyValue@dutyCycle+1,w
  8880  0BED  00F3               	movwf	??_PWM6_LoadDutyValue+1
  8881  0BEE  0870               	movf	PWM6_LoadDutyValue@dutyCycle,w
  8882  0BEF  00F2               	movwf	??_PWM6_LoadDutyValue
  8883  0BF0  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
  8884  0BF1  0CF2               	rrf	??_PWM6_LoadDutyValue,f
  8885  0BF2  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
  8886  0BF3  0CF2               	rrf	??_PWM6_LoadDutyValue,f
  8887  0BF4  0872               	movf	??_PWM6_LoadDutyValue,w
  8888  0BF5  0027               	movlb	7	; select bank7
  8889  0BF6  008D               	movwf	13	;volatile
  8890                           
  8891                           ;pwm6.c: 18: PWM6DCL = (dutyCycle & 0x0003)<<6;
  8892  0BF7  0870               	movf	PWM6_LoadDutyValue@dutyCycle,w
  8893  0BF8  3903               	andlw	3
  8894  0BF9  00F2               	movwf	??_PWM6_LoadDutyValue
  8895  0BFA  3005               	movlw	5
  8896  0BFB                     u2615:	
  8897  0BFB  35F2               	lslf	??_PWM6_LoadDutyValue,f
  8898  0BFC  3EFF               	addlw	-1
  8899  0BFD  1D03               	skipz
  8900  0BFE  2BFB               	goto	u2615
  8901  0BFF  3572               	lslf	??_PWM6_LoadDutyValue,w
  8902  0C00  008C               	movwf	12	;volatile
  8903  0C01  0008               	return
  8904  0C02                     __end_of_PWM6_LoadDutyValue:	
  8905                           
  8906                           	psect	text26
  8907  02A7                     __ptext26:	
  8908 ;; *************** function _LCD_Write_Int *****************
  8909 ;; Defined at:
  8910 ;;		line 246 in file "lcd.c"
  8911 ;; Parameters:    Size  Location     Type
  8912 ;;  value           2    9[COMMON] int 
  8913 ;;  fieldLength     1   11[COMMON] char 
  8914 ;;  numPlaces       1   12[COMMON] char 
  8915 ;;  sign            1   13[COMMON] char 
  8916 ;; Auto vars:     Size  Location     Type
  8917 ;;  str             5    5[BANK0 ] unsigned char [5]
  8918 ;;  i               2   12[BANK0 ] int 
  8919 ;;  j               2   10[BANK0 ] int 
  8920 ;; Return value:  Size  Location     Type
  8921 ;;                  1    wreg      void 
  8922 ;; Registers used:
  8923 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8924 ;; Tracked objects:
  8925 ;;		On entry : 0/0
  8926 ;;		On exit  : 0/0
  8927 ;;		Unchanged: 0/0
  8928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8929 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8930 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8931 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8932 ;;      Totals:         5      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8933 ;;Total ram usage:       19 bytes
  8934 ;; Hardware stack levels used:    1
  8935 ;; Hardware stack levels required when called:    2
  8936 ;; This function calls:
  8937 ;;		_LCD_Write_Char
  8938 ;;		___awdiv
  8939 ;;		___awmod
  8940 ;; This function is called by:
  8941 ;;		_main
  8942 ;; This function uses a non-reentrant model
  8943 ;;
  8944                           
  8945                           
  8946                           ;psect for function _LCD_Write_Int
  8947  02A7                     _LCD_Write_Int:	
  8948                           
  8949                           ;lcd.c: 248: char str[5]={0,0,0,0,0};
  8950                           
  8951                           ;incstack = 0
  8952                           ; Regs used in _LCD_Write_Int: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8953  02A7  30C4               	movlw	low LCD_Write_Int@F13687
  8954  02A8  0086               	movwf	6
  8955  02A9  3000               	movlw	high LCD_Write_Int@F13687
  8956  02AA  0087               	movwf	7
  8957  02AB  3025               	movlw	low LCD_Write_Int@str
  8958  02AC  0084               	movwf	4
  8959  02AD  3000               	movlw	high LCD_Write_Int@str
  8960  02AE  0085               	movwf	5
  8961  02AF  3005               	movlw	5
  8962  02B0  0020               	movlb	0	; select bank0
  8963  02B1  00A0               	movwf	??_LCD_Write_Int
  8964  02B2                     u2520:	
  8965  02B2  0016               	moviw fsr1++
  8966  02B3  001A               	movwi fsr0++
  8967  02B4  0BA0               	decfsz	??_LCD_Write_Int,f
  8968  02B5  2AB2               	goto	u2520
  8969                           
  8970                           ;lcd.c: 249: int i=4,j=0;
  8971  02B6  3004               	movlw	4
  8972  02B7  00AC               	movwf	LCD_Write_Int@i
  8973  02B8  3000               	movlw	0
  8974  02B9  00AD               	movwf	LCD_Write_Int@i+1
  8975  02BA  01AA               	clrf	LCD_Write_Int@j
  8976  02BB  01AB               	clrf	LCD_Write_Int@j+1
  8977                           
  8978                           ;lcd.c: 251: if(value<0)
  8979  02BC  1FFA               	btfss	LCD_Write_Int@value+1,7
  8980  02BD  2AC8               	goto	l2289
  8981                           
  8982                           ;lcd.c: 252: {
  8983                           ;lcd.c: 253: LCD_Write_Char('-');
  8984  02BE  302D               	movlw	45
  8985  02BF  318C  24CB  3182   	fcall	_LCD_Write_Char
  8986                           
  8987                           ;lcd.c: 254: value=value*-1;
  8988  02C2  09F9               	comf	LCD_Write_Int@value,f
  8989  02C3  09FA               	comf	LCD_Write_Int@value+1,f
  8990  02C4  0AF9               	incf	LCD_Write_Int@value,f
  8991  02C5  1903               	skipnz
  8992  02C6  0AFA               	incf	LCD_Write_Int@value+1,f
  8993                           
  8994                           ;lcd.c: 255: }
  8995  02C7  2ACF               	goto	l2299
  8996  02C8                     l2289:	
  8997                           
  8998                           ;lcd.c: 257: else
  8999                           ;lcd.c: 258: {
  9000                           ;lcd.c: 259: if(sign == 1)
  9001  02C8  037D               	decf	LCD_Write_Int@sign,w
  9002  02C9  1D03               	btfss	3,2
  9003  02CA  2ACF               	goto	l2299
  9004                           
  9005                           ;lcd.c: 260: {
  9006                           ;lcd.c: 261: LCD_Write_Char('+');
  9007  02CB  302B               	movlw	43
  9008  02CC  318C  24CB  3182   	fcall	_LCD_Write_Char
  9009  02CF                     l2299:	
  9010                           ;lcd.c: 262: }
  9011                           ;lcd.c: 263: }
  9012                           ;lcd.c: 265: while(value)
  9013                           
  9014  02CF  0879               	movf	LCD_Write_Int@value,w
  9015  02D0  047A               	iorwf	LCD_Write_Int@value+1,w
  9016  02D1  1903               	btfsc	3,2
  9017  02D2  2AFC               	goto	l2301
  9018                           
  9019                           ;lcd.c: 266: {
  9020                           ;lcd.c: 267: str[i]=value%10;
  9021  02D3  300A               	movlw	10
  9022  02D4  00F0               	movwf	___awmod@divisor
  9023  02D5  3000               	movlw	0
  9024  02D6  00F1               	movwf	___awmod@divisor+1
  9025  02D7  087A               	movf	LCD_Write_Int@value+1,w
  9026  02D8  00F3               	movwf	___awmod@dividend+1
  9027  02D9  0879               	movf	LCD_Write_Int@value,w
  9028  02DA  00F2               	movwf	___awmod@dividend
  9029  02DB  318E  2624  3182   	fcall	___awmod
  9030  02DE  0870               	movf	?___awmod,w
  9031  02DF  0020               	movlb	0	; select bank0
  9032  02E0  00A0               	movwf	??_LCD_Write_Int
  9033  02E1  082C               	movf	LCD_Write_Int@i,w
  9034  02E2  3E25               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
  9035  02E3  0086               	movwf	6
  9036  02E4  0187               	clrf	7
  9037  02E5  0820               	movf	??_LCD_Write_Int,w
  9038  02E6  0081               	movwf	1
  9039                           
  9040                           ;lcd.c: 268: value=value/10;
  9041  02E7  300A               	movlw	10
  9042  02E8  00F0               	movwf	___awdiv@divisor
  9043  02E9  3000               	movlw	0
  9044  02EA  00F1               	movwf	___awdiv@divisor+1
  9045  02EB  087A               	movf	LCD_Write_Int@value+1,w
  9046  02EC  00F3               	movwf	___awdiv@dividend+1
  9047  02ED  0879               	movf	LCD_Write_Int@value,w
  9048  02EE  00F2               	movwf	___awdiv@dividend
  9049  02EF  318E  2669  3182   	fcall	___awdiv
  9050  02F2  0871               	movf	?___awdiv+1,w
  9051  02F3  00FA               	movwf	LCD_Write_Int@value+1
  9052  02F4  0870               	movf	?___awdiv,w
  9053  02F5  00F9               	movwf	LCD_Write_Int@value
  9054                           
  9055                           ;lcd.c: 269: i--;
  9056  02F6  30FF               	movlw	255
  9057  02F7  0020               	movlb	0	; select bank0
  9058  02F8  07AC               	addwf	LCD_Write_Int@i,f
  9059  02F9  30FF               	movlw	255
  9060  02FA  3DAD               	addwfc	LCD_Write_Int@i+1,f
  9061  02FB  2ACF               	goto	l2299
  9062  02FC                     l2301:	
  9063                           
  9064                           ;lcd.c: 270: }
  9065                           ;lcd.c: 271: if(fieldLength==-1)
  9066  02FC  0A7B               	incf	LCD_Write_Int@fieldLength,w
  9067  02FD  1903               	btfsc	3,2
  9068  02FE  2B05               	goto	l2307
  9069  02FF  2B0E               	goto	l2309
  9070  0300                     l2305:	
  9071                           ;lcd.c: 272: {
  9072                           ;lcd.c: 273: while(str[j]==0)
  9073                           
  9074                           
  9075                           ;lcd.c: 274: {
  9076                           ;lcd.c: 275: j++;
  9077  0300  3001               	movlw	1
  9078  0301  0020               	movlb	0	; select bank0
  9079  0302  07AA               	addwf	LCD_Write_Int@j,f
  9080  0303  3000               	movlw	0
  9081  0304  3DAB               	addwfc	LCD_Write_Int@j+1,f
  9082  0305                     l2307:	
  9083  0305  0020               	movlb	0	; select bank0
  9084  0306  082A               	movf	LCD_Write_Int@j,w
  9085  0307  3E25               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
  9086  0308  0086               	movwf	6
  9087  0309  0187               	clrf	7
  9088  030A  0801               	movf	1,w
  9089  030B  1D03               	btfss	3,2
  9090  030C  2B1F               	goto	l2311
  9091  030D  2B00               	goto	l2305
  9092  030E                     l2309:	
  9093                           ;lcd.c: 276: }
  9094                           ;lcd.c: 277: }
  9095                           
  9096                           
  9097                           ;lcd.c: 278: else
  9098                           ;lcd.c: 279: {
  9099                           ;lcd.c: 280: j=5-fieldLength;
  9100  030E  087B               	movf	LCD_Write_Int@fieldLength,w
  9101  030F  0020               	movlb	0	; select bank0
  9102  0310  00A0               	movwf	??_LCD_Write_Int
  9103  0311  01A1               	clrf	??_LCD_Write_Int+1
  9104  0312  1BA0               	btfsc	??_LCD_Write_Int,7
  9105  0313  03A1               	decf	??_LCD_Write_Int+1,f
  9106  0314  09A0               	comf	??_LCD_Write_Int,f
  9107  0315  09A1               	comf	??_LCD_Write_Int+1,f
  9108  0316  0AA0               	incf	??_LCD_Write_Int,f
  9109  0317  1903               	skipnz
  9110  0318  0AA1               	incf	??_LCD_Write_Int+1,f
  9111  0319  0820               	movf	??_LCD_Write_Int,w
  9112  031A  3E05               	addlw	5
  9113  031B  00AA               	movwf	LCD_Write_Int@j
  9114  031C  3000               	movlw	0
  9115  031D  3D21               	addwfc	??_LCD_Write_Int+1,w
  9116  031E  00AB               	movwf	LCD_Write_Int@j+1
  9117  031F                     l2311:	
  9118                           
  9119                           ;lcd.c: 281: }
  9120                           ;lcd.c: 283: for(i=j;i<(5-numPlaces);i++)
  9121  031F  082B               	movf	LCD_Write_Int@j+1,w
  9122  0320  00AD               	movwf	LCD_Write_Int@i+1
  9123  0321  082A               	movf	LCD_Write_Int@j,w
  9124  0322  00AC               	movwf	LCD_Write_Int@i
  9125  0323                     l2317:	
  9126  0323  087C               	movf	LCD_Write_Int@numPlaces,w
  9127  0324  00A0               	movwf	??_LCD_Write_Int
  9128  0325  01A1               	clrf	??_LCD_Write_Int+1
  9129  0326  1BA0               	btfsc	??_LCD_Write_Int,7
  9130  0327  03A1               	decf	??_LCD_Write_Int+1,f
  9131  0328  09A0               	comf	??_LCD_Write_Int,f
  9132  0329  09A1               	comf	??_LCD_Write_Int+1,f
  9133  032A  0AA0               	incf	??_LCD_Write_Int,f
  9134  032B  1903               	skipnz
  9135  032C  0AA1               	incf	??_LCD_Write_Int+1,f
  9136  032D  0820               	movf	??_LCD_Write_Int,w
  9137  032E  3E05               	addlw	5
  9138  032F  00A2               	movwf	??_LCD_Write_Int+2
  9139  0330  3000               	movlw	0
  9140  0331  3D21               	addwfc	??_LCD_Write_Int+1,w
  9141  0332  00A3               	movwf	??_LCD_Write_Int+3
  9142  0333  082D               	movf	LCD_Write_Int@i+1,w
  9143  0334  3A80               	xorlw	128
  9144  0335  00A4               	movwf	??_LCD_Write_Int+4
  9145  0336  0823               	movf	??_LCD_Write_Int+3,w
  9146  0337  3A80               	xorlw	128
  9147  0338  0224               	subwf	??_LCD_Write_Int+4,w
  9148  0339  1D03               	skipz
  9149  033A  2B3D               	goto	u2585
  9150  033B  0822               	movf	??_LCD_Write_Int+2,w
  9151  033C  022C               	subwf	LCD_Write_Int@i,w
  9152  033D                     u2585:	
  9153  033D  1803               	btfsc	3,0
  9154  033E  2B4F               	goto	l2319
  9155                           
  9156                           ;lcd.c: 284: {
  9157                           ;lcd.c: 285: LCD_Write_Char(48+str[i]);
  9158  033F  0020               	movlb	0	; select bank0
  9159  0340  082C               	movf	LCD_Write_Int@i,w
  9160  0341  3E25               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
  9161  0342  0086               	movwf	6
  9162  0343  0187               	clrf	7
  9163  0344  0801               	movf	1,w
  9164  0345  3E30               	addlw	48
  9165  0346  318C  24CB  3182   	fcall	_LCD_Write_Char
  9166  0349  3001               	movlw	1
  9167  034A  0020               	movlb	0	; select bank0
  9168  034B  07AC               	addwf	LCD_Write_Int@i,f
  9169  034C  3000               	movlw	0
  9170  034D  3DAD               	addwfc	LCD_Write_Int@i+1,f
  9171  034E  2B23               	goto	l2317
  9172  034F                     l2319:	
  9173                           
  9174                           ;lcd.c: 286: }
  9175                           ;lcd.c: 288: if(numPlaces == 1)
  9176  034F  037C               	decf	LCD_Write_Int@numPlaces,w
  9177  0350  1D03               	btfss	3,2
  9178  0351  2B5C               	goto	l2323
  9179                           
  9180                           ;lcd.c: 289: {
  9181                           ;lcd.c: 290: LCD_Write_Char(46);
  9182  0352  302E               	movlw	46
  9183  0353  318C  24CB  3182   	fcall	_LCD_Write_Char
  9184                           
  9185                           ;lcd.c: 291: LCD_Write_Char(48+str[4]);
  9186  0356  0020               	movlb	0	; select bank0
  9187  0357  0829               	movf	LCD_Write_Int@str+4,w
  9188  0358  3E30               	addlw	48
  9189  0359  318C  24CB  3182   	fcall	_LCD_Write_Char
  9190  035C                     l2323:	
  9191                           
  9192                           ;lcd.c: 292: }
  9193                           ;lcd.c: 294: if(numPlaces == 2)
  9194  035C  3002               	movlw	2
  9195  035D  067C               	xorwf	LCD_Write_Int@numPlaces,w
  9196  035E  1D03               	btfss	3,2
  9197  035F  0008               	return
  9198                           
  9199                           ;lcd.c: 295: {
  9200                           ;lcd.c: 296: LCD_Write_Char(46);
  9201  0360  302E               	movlw	46
  9202  0361  318C  24CB  3182   	fcall	_LCD_Write_Char
  9203                           
  9204                           ;lcd.c: 297: LCD_Write_Char(48+str[3]);
  9205  0364  0020               	movlb	0	; select bank0
  9206  0365  0828               	movf	LCD_Write_Int@str+3,w
  9207  0366  3E30               	addlw	48
  9208  0367  318C  24CB  3182   	fcall	_LCD_Write_Char
  9209                           
  9210                           ;lcd.c: 298: LCD_Write_Char(48+str[4]);
  9211  036A  0020               	movlb	0	; select bank0
  9212  036B  0829               	movf	LCD_Write_Int@str+4,w
  9213  036C  3E30               	addlw	48
  9214  036D  318C  24CB         	fcall	_LCD_Write_Char
  9215  036F  0008               	return
  9216  0370                     __end_of_LCD_Write_Int:	
  9217                           
  9218                           	psect	text27
  9219  0E24                     __ptext27:	
  9220 ;; *************** function ___awmod *****************
  9221 ;; Defined at:
  9222 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c"
  9223 ;; Parameters:    Size  Location     Type
  9224 ;;  divisor         2    0[COMMON] int 
  9225 ;;  dividend        2    2[COMMON] int 
  9226 ;; Auto vars:     Size  Location     Type
  9227 ;;  sign            1    6[COMMON] unsigned char 
  9228 ;;  counter         1    5[COMMON] unsigned char 
  9229 ;; Return value:  Size  Location     Type
  9230 ;;                  2    0[COMMON] int 
  9231 ;; Registers used:
  9232 ;;		wreg, status,2, status,0
  9233 ;; Tracked objects:
  9234 ;;		On entry : 0/0
  9235 ;;		On exit  : 0/0
  9236 ;;		Unchanged: 0/0
  9237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9238 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9239 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9240 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9241 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9242 ;;Total ram usage:        7 bytes
  9243 ;; Hardware stack levels used:    1
  9244 ;; This function calls:
  9245 ;;		Nothing
  9246 ;; This function is called by:
  9247 ;;		_LCD_Write_Int
  9248 ;; This function uses a non-reentrant model
  9249 ;;
  9250                           
  9251                           
  9252                           ;psect for function ___awmod
  9253  0E24                     ___awmod:	
  9254                           
  9255                           ;incstack = 0
  9256                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  9257  0E24  01F6               	clrf	___awmod@sign
  9258  0E25  1FF3               	btfss	___awmod@dividend+1,7
  9259  0E26  2E2E               	goto	l2157
  9260  0E27  09F2               	comf	___awmod@dividend,f
  9261  0E28  09F3               	comf	___awmod@dividend+1,f
  9262  0E29  0AF2               	incf	___awmod@dividend,f
  9263  0E2A  1903               	skipnz
  9264  0E2B  0AF3               	incf	___awmod@dividend+1,f
  9265  0E2C  01F6               	clrf	___awmod@sign
  9266  0E2D  0AF6               	incf	___awmod@sign,f
  9267  0E2E                     l2157:	
  9268  0E2E  1FF1               	btfss	___awmod@divisor+1,7
  9269  0E2F  2E35               	goto	l2161
  9270  0E30  09F0               	comf	___awmod@divisor,f
  9271  0E31  09F1               	comf	___awmod@divisor+1,f
  9272  0E32  0AF0               	incf	___awmod@divisor,f
  9273  0E33  1903               	skipnz
  9274  0E34  0AF1               	incf	___awmod@divisor+1,f
  9275  0E35                     l2161:	
  9276  0E35  0870               	movf	___awmod@divisor,w
  9277  0E36  0471               	iorwf	___awmod@divisor+1,w
  9278  0E37  1903               	btfsc	3,2
  9279  0E38  2E5C               	goto	l2179
  9280  0E39  01F5               	clrf	___awmod@counter
  9281  0E3A  0AF5               	incf	___awmod@counter,f
  9282  0E3B                     l2169:	
  9283  0E3B  1BF1               	btfsc	___awmod@divisor+1,7
  9284  0E3C  2E47               	goto	l2171
  9285  0E3D  3001               	movlw	1
  9286  0E3E                     u2265:	
  9287  0E3E  35F0               	lslf	___awmod@divisor,f
  9288  0E3F  0DF1               	rlf	___awmod@divisor+1,f
  9289  0E40  0B89               	decfsz	9,f
  9290  0E41  2E3E               	goto	u2265
  9291  0E42  3001               	movlw	1
  9292  0E43  00F4               	movwf	??___awmod
  9293  0E44  0874               	movf	??___awmod,w
  9294  0E45  07F5               	addwf	___awmod@counter,f
  9295  0E46  2E3B               	goto	l2169
  9296  0E47                     l2171:	
  9297  0E47  0871               	movf	___awmod@divisor+1,w
  9298  0E48  0273               	subwf	___awmod@dividend+1,w
  9299  0E49  1D03               	skipz
  9300  0E4A  2E4D               	goto	u2285
  9301  0E4B  0870               	movf	___awmod@divisor,w
  9302  0E4C  0272               	subwf	___awmod@dividend,w
  9303  0E4D                     u2285:	
  9304  0E4D  1C03               	skipc
  9305  0E4E  2E53               	goto	l2175
  9306  0E4F  0870               	movf	___awmod@divisor,w
  9307  0E50  02F2               	subwf	___awmod@dividend,f
  9308  0E51  0871               	movf	___awmod@divisor+1,w
  9309  0E52  3BF3               	subwfb	___awmod@dividend+1,f
  9310  0E53                     l2175:	
  9311  0E53  3001               	movlw	1
  9312  0E54                     u2295:	
  9313  0E54  36F1               	lsrf	___awmod@divisor+1,f
  9314  0E55  0CF0               	rrf	___awmod@divisor,f
  9315  0E56  0B89               	decfsz	9,f
  9316  0E57  2E54               	goto	u2295
  9317  0E58  3001               	movlw	1
  9318  0E59  02F5               	subwf	___awmod@counter,f
  9319  0E5A  1D03               	btfss	3,2
  9320  0E5B  2E47               	goto	l2171
  9321  0E5C                     l2179:	
  9322  0E5C  0876               	movf	___awmod@sign,w
  9323  0E5D  1903               	btfsc	3,2
  9324  0E5E  2E64               	goto	l2183
  9325  0E5F  09F2               	comf	___awmod@dividend,f
  9326  0E60  09F3               	comf	___awmod@dividend+1,f
  9327  0E61  0AF2               	incf	___awmod@dividend,f
  9328  0E62  1903               	skipnz
  9329  0E63  0AF3               	incf	___awmod@dividend+1,f
  9330  0E64                     l2183:	
  9331  0E64  0873               	movf	___awmod@dividend+1,w
  9332  0E65  00F1               	movwf	?___awmod+1
  9333  0E66  0872               	movf	___awmod@dividend,w
  9334  0E67  00F0               	movwf	?___awmod
  9335  0E68  0008               	return
  9336  0E69                     __end_of___awmod:	
  9337                           
  9338                           	psect	text28
  9339  0E69                     __ptext28:	
  9340 ;; *************** function ___awdiv *****************
  9341 ;; Defined at:
  9342 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c"
  9343 ;; Parameters:    Size  Location     Type
  9344 ;;  divisor         2    0[COMMON] int 
  9345 ;;  dividend        2    2[COMMON] int 
  9346 ;; Auto vars:     Size  Location     Type
  9347 ;;  quotient        2    7[COMMON] int 
  9348 ;;  sign            1    6[COMMON] unsigned char 
  9349 ;;  counter         1    5[COMMON] unsigned char 
  9350 ;; Return value:  Size  Location     Type
  9351 ;;                  2    0[COMMON] int 
  9352 ;; Registers used:
  9353 ;;		wreg, status,2, status,0
  9354 ;; Tracked objects:
  9355 ;;		On entry : 0/0
  9356 ;;		On exit  : 0/0
  9357 ;;		Unchanged: 0/0
  9358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9359 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9360 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9361 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9362 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9363 ;;Total ram usage:        9 bytes
  9364 ;; Hardware stack levels used:    1
  9365 ;; This function calls:
  9366 ;;		Nothing
  9367 ;; This function is called by:
  9368 ;;		_LCD_Write_Int
  9369 ;; This function uses a non-reentrant model
  9370 ;;
  9371                           
  9372                           
  9373                           ;psect for function ___awdiv
  9374  0E69                     ___awdiv:	
  9375                           
  9376                           ;incstack = 0
  9377                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  9378  0E69  01F6               	clrf	___awdiv@sign
  9379  0E6A  1FF1               	btfss	___awdiv@divisor+1,7
  9380  0E6B  2E73               	goto	l2113
  9381  0E6C  09F0               	comf	___awdiv@divisor,f
  9382  0E6D  09F1               	comf	___awdiv@divisor+1,f
  9383  0E6E  0AF0               	incf	___awdiv@divisor,f
  9384  0E6F  1903               	skipnz
  9385  0E70  0AF1               	incf	___awdiv@divisor+1,f
  9386  0E71  01F6               	clrf	___awdiv@sign
  9387  0E72  0AF6               	incf	___awdiv@sign,f
  9388  0E73                     l2113:	
  9389  0E73  1FF3               	btfss	___awdiv@dividend+1,7
  9390  0E74  2E7E               	goto	l2119
  9391  0E75  09F2               	comf	___awdiv@dividend,f
  9392  0E76  09F3               	comf	___awdiv@dividend+1,f
  9393  0E77  0AF2               	incf	___awdiv@dividend,f
  9394  0E78  1903               	skipnz
  9395  0E79  0AF3               	incf	___awdiv@dividend+1,f
  9396  0E7A  3001               	movlw	1
  9397  0E7B  00F4               	movwf	??___awdiv
  9398  0E7C  0874               	movf	??___awdiv,w
  9399  0E7D  06F6               	xorwf	___awdiv@sign,f
  9400  0E7E                     l2119:	
  9401  0E7E  01F7               	clrf	___awdiv@quotient
  9402  0E7F  01F8               	clrf	___awdiv@quotient+1
  9403  0E80  0870               	movf	___awdiv@divisor,w
  9404  0E81  0471               	iorwf	___awdiv@divisor+1,w
  9405  0E82  1903               	btfsc	3,2
  9406  0E83  2EAD               	goto	l2141
  9407  0E84  01F5               	clrf	___awdiv@counter
  9408  0E85  0AF5               	incf	___awdiv@counter,f
  9409  0E86                     l2129:	
  9410  0E86  1BF1               	btfsc	___awdiv@divisor+1,7
  9411  0E87  2E92               	goto	l2131
  9412  0E88  3001               	movlw	1
  9413  0E89                     u2165:	
  9414  0E89  35F0               	lslf	___awdiv@divisor,f
  9415  0E8A  0DF1               	rlf	___awdiv@divisor+1,f
  9416  0E8B  0B89               	decfsz	9,f
  9417  0E8C  2E89               	goto	u2165
  9418  0E8D  3001               	movlw	1
  9419  0E8E  00F4               	movwf	??___awdiv
  9420  0E8F  0874               	movf	??___awdiv,w
  9421  0E90  07F5               	addwf	___awdiv@counter,f
  9422  0E91  2E86               	goto	l2129
  9423  0E92                     l2131:	
  9424  0E92  3001               	movlw	1
  9425  0E93                     u2185:	
  9426  0E93  35F7               	lslf	___awdiv@quotient,f
  9427  0E94  0DF8               	rlf	___awdiv@quotient+1,f
  9428  0E95  0B89               	decfsz	9,f
  9429  0E96  2E93               	goto	u2185
  9430  0E97  0871               	movf	___awdiv@divisor+1,w
  9431  0E98  0273               	subwf	___awdiv@dividend+1,w
  9432  0E99  1D03               	skipz
  9433  0E9A  2E9D               	goto	u2195
  9434  0E9B  0870               	movf	___awdiv@divisor,w
  9435  0E9C  0272               	subwf	___awdiv@dividend,w
  9436  0E9D                     u2195:	
  9437  0E9D  1C03               	skipc
  9438  0E9E  2EA4               	goto	l2137
  9439  0E9F  0870               	movf	___awdiv@divisor,w
  9440  0EA0  02F2               	subwf	___awdiv@dividend,f
  9441  0EA1  0871               	movf	___awdiv@divisor+1,w
  9442  0EA2  3BF3               	subwfb	___awdiv@dividend+1,f
  9443  0EA3  1477               	bsf	___awdiv@quotient,0
  9444  0EA4                     l2137:	
  9445  0EA4  3001               	movlw	1
  9446  0EA5                     u2205:	
  9447  0EA5  36F1               	lsrf	___awdiv@divisor+1,f
  9448  0EA6  0CF0               	rrf	___awdiv@divisor,f
  9449  0EA7  0B89               	decfsz	9,f
  9450  0EA8  2EA5               	goto	u2205
  9451  0EA9  3001               	movlw	1
  9452  0EAA  02F5               	subwf	___awdiv@counter,f
  9453  0EAB  1D03               	btfss	3,2
  9454  0EAC  2E92               	goto	l2131
  9455  0EAD                     l2141:	
  9456  0EAD  0876               	movf	___awdiv@sign,w
  9457  0EAE  1903               	btfsc	3,2
  9458  0EAF  2EB5               	goto	l2145
  9459  0EB0  09F7               	comf	___awdiv@quotient,f
  9460  0EB1  09F8               	comf	___awdiv@quotient+1,f
  9461  0EB2  0AF7               	incf	___awdiv@quotient,f
  9462  0EB3  1903               	skipnz
  9463  0EB4  0AF8               	incf	___awdiv@quotient+1,f
  9464  0EB5                     l2145:	
  9465  0EB5  0878               	movf	___awdiv@quotient+1,w
  9466  0EB6  00F1               	movwf	?___awdiv+1
  9467  0EB7  0877               	movf	___awdiv@quotient,w
  9468  0EB8  00F0               	movwf	?___awdiv
  9469  0EB9  0008               	return
  9470  0EBA                     __end_of___awdiv:	
  9471                           
  9472                           	psect	text29
  9473  0CCB                     __ptext29:	
  9474 ;; *************** function _LCD_Write_Char *****************
  9475 ;; Defined at:
  9476 ;;		line 223 in file "lcd.c"
  9477 ;; Parameters:    Size  Location     Type
  9478 ;;  a               1    wreg     const unsigned char 
  9479 ;; Auto vars:     Size  Location     Type
  9480 ;;  a               1    4[COMMON] const unsigned char 
  9481 ;;  y               1    3[COMMON] unsigned char 
  9482 ;;  temp            1    2[COMMON] unsigned char 
  9483 ;; Return value:  Size  Location     Type
  9484 ;;                  1    wreg      void 
  9485 ;; Registers used:
  9486 ;;		wreg, status,2, status,0, pclath, cstack
  9487 ;; Tracked objects:
  9488 ;;		On entry : 0/0
  9489 ;;		On exit  : 0/0
  9490 ;;		Unchanged: 0/0
  9491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9493 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9494 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9495 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9496 ;;Total ram usage:        4 bytes
  9497 ;; Hardware stack levels used:    1
  9498 ;; Hardware stack levels required when called:    1
  9499 ;; This function calls:
  9500 ;;		_LCD_Port
  9501 ;; This function is called by:
  9502 ;;		_InitCustomChars
  9503 ;;		_LCD_Write_Int
  9504 ;;		_main
  9505 ;;		_LCD_Write_String
  9506 ;; This function uses a non-reentrant model
  9507 ;;
  9508                           
  9509                           
  9510                           ;psect for function _LCD_Write_Char
  9511  0CCB                     _LCD_Write_Char:	
  9512                           
  9513                           ;incstack = 0
  9514                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  9515                           ;LCD_Write_Char@a stored from wreg
  9516  0CCB  00F4               	movwf	LCD_Write_Char@a
  9517                           
  9518                           ;lcd.c: 225: char temp,y;
  9519                           ;lcd.c: 226: temp = a&0x0F;
  9520  0CCC  0874               	movf	LCD_Write_Char@a,w
  9521  0CCD  390F               	andlw	15
  9522  0CCE  00F1               	movwf	??_LCD_Write_Char
  9523  0CCF  0871               	movf	??_LCD_Write_Char,w
  9524  0CD0  00F2               	movwf	LCD_Write_Char@temp
  9525                           
  9526                           ;lcd.c: 227: y = a&0xF0;
  9527  0CD1  0874               	movf	LCD_Write_Char@a,w
  9528  0CD2  39F0               	andlw	240
  9529  0CD3  00F1               	movwf	??_LCD_Write_Char
  9530  0CD4  0871               	movf	??_LCD_Write_Char,w
  9531  0CD5  00F3               	movwf	LCD_Write_Char@y
  9532                           
  9533                           ;lcd.c: 228: RA0 = 1;
  9534  0CD6  0020               	movlb	0	; select bank0
  9535  0CD7  140C               	bsf	12,0	;volatile
  9536                           
  9537                           ;lcd.c: 229: LCD_Port(y>>4);
  9538  0CD8  0873               	movf	LCD_Write_Char@y,w
  9539  0CD9  00F1               	movwf	??_LCD_Write_Char
  9540  0CDA  3004               	movlw	4
  9541  0CDB                     u1895:	
  9542  0CDB  36F1               	lsrf	??_LCD_Write_Char,f
  9543  0CDC  0B89               	decfsz	9,f
  9544  0CDD  2CDB               	goto	u1895
  9545  0CDE  0871               	movf	??_LCD_Write_Char,w
  9546  0CDF  318C  2402  318C   	fcall	_LCD_Port
  9547                           
  9548                           ;lcd.c: 230: RA2 = 1;
  9549  0CE2  0020               	movlb	0	; select bank0
  9550  0CE3  150C               	bsf	12,2	;volatile
  9551                           
  9552                           ;lcd.c: 231: RA2 = 0;
  9553  0CE4  110C               	bcf	12,2	;volatile
  9554                           
  9555                           ;lcd.c: 232: _delay((unsigned long)((40)*(32000000/4000000.0)));
  9556  0CE5  306A               	movlw	106
  9557  0CE6  00F1               	movwf	??_LCD_Write_Char
  9558  0CE7                     u2817:	
  9559  0CE7  0BF1               	decfsz	??_LCD_Write_Char,f
  9560  0CE8  2CE7               	goto	u2817
  9561  0CE9  0000               	nop
  9562                           
  9563                           ;lcd.c: 233: LCD_Port(temp);
  9564  0CEA  0872               	movf	LCD_Write_Char@temp,w
  9565  0CEB  318C  2402  318C   	fcall	_LCD_Port
  9566                           
  9567                           ;lcd.c: 234: RA2 = 1;
  9568  0CEE  0020               	movlb	0	; select bank0
  9569  0CEF  150C               	bsf	12,2	;volatile
  9570                           
  9571                           ;lcd.c: 235: RA2 = 0;
  9572  0CF0  110C               	bcf	12,2	;volatile
  9573                           
  9574                           ;lcd.c: 236: _delay((unsigned long)((40)*(32000000/4000000.0)));
  9575  0CF1  306A               	movlw	106
  9576  0CF2  00F1               	movwf	??_LCD_Write_Char
  9577  0CF3                     u2827:	
  9578  0CF3  0BF1               	decfsz	??_LCD_Write_Char,f
  9579  0CF4  2CF3               	goto	u2827
  9580  0CF5  0000               	nop
  9581  0CF6  0008               	return
  9582  0CF7                     __end_of_LCD_Write_Char:	
  9583                           
  9584                           	psect	text30
  9585  0DA3                     __ptext30:	
  9586 ;; *************** function _LCD_Set_Cursor *****************
  9587 ;; Defined at:
  9588 ;;		line 82 in file "lcd.c"
  9589 ;; Parameters:    Size  Location     Type
  9590 ;;  x               1    wreg     unsigned char 
  9591 ;;  y               1    4[COMMON] unsigned char 
  9592 ;; Auto vars:     Size  Location     Type
  9593 ;;  x               1    7[COMMON] unsigned char 
  9594 ;;  temp            1   10[COMMON] unsigned char 
  9595 ;;  w               1    9[COMMON] unsigned char 
  9596 ;;  z               1    8[COMMON] unsigned char 
  9597 ;; Return value:  Size  Location     Type
  9598 ;;                  1    wreg      void 
  9599 ;; Registers used:
  9600 ;;		wreg, status,2, status,0, pclath, cstack
  9601 ;; Tracked objects:
  9602 ;;		On entry : 0/0
  9603 ;;		On exit  : 0/0
  9604 ;;		Unchanged: 0/0
  9605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9606 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9607 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9608 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9609 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9610 ;;Total ram usage:        7 bytes
  9611 ;; Hardware stack levels used:    1
  9612 ;; Hardware stack levels required when called:    2
  9613 ;; This function calls:
  9614 ;;		_LCD_Cmd
  9615 ;; This function is called by:
  9616 ;;		_main
  9617 ;; This function uses a non-reentrant model
  9618 ;;
  9619                           
  9620                           
  9621                           ;psect for function _LCD_Set_Cursor
  9622  0DA3                     _LCD_Set_Cursor:	
  9623                           
  9624                           ;incstack = 0
  9625                           ; Regs used in _LCD_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  9626                           ;LCD_Set_Cursor@x stored from wreg
  9627  0DA3  00F7               	movwf	LCD_Set_Cursor@x
  9628                           
  9629                           ;lcd.c: 86: char temp,z,w;
  9630                           ;lcd.c: 88: if(y == 0)
  9631  0DA4  0874               	movf	LCD_Set_Cursor@y,w
  9632  0DA5  1D03               	btfss	3,2
  9633  0DA6  2DC3               	goto	l2267
  9634                           
  9635                           ;lcd.c: 89: {
  9636                           ;lcd.c: 90: temp = 0x80 + x;
  9637  0DA7  0877               	movf	LCD_Set_Cursor@x,w
  9638  0DA8  3E80               	addlw	128
  9639  0DA9  00F5               	movwf	??_LCD_Set_Cursor
  9640  0DAA  0875               	movf	??_LCD_Set_Cursor,w
  9641  0DAB  00FA               	movwf	LCD_Set_Cursor@temp
  9642                           
  9643                           ;lcd.c: 91: z = temp>>4;
  9644  0DAC  087A               	movf	LCD_Set_Cursor@temp,w
  9645  0DAD  00F5               	movwf	??_LCD_Set_Cursor
  9646  0DAE  3004               	movlw	4
  9647  0DAF                     u2495:	
  9648  0DAF  36F5               	lsrf	??_LCD_Set_Cursor,f
  9649  0DB0  0B89               	decfsz	9,f
  9650  0DB1  2DAF               	goto	u2495
  9651  0DB2  0875               	movf	??_LCD_Set_Cursor,w
  9652  0DB3  00F6               	movwf	??_LCD_Set_Cursor+1
  9653  0DB4  0876               	movf	??_LCD_Set_Cursor+1,w
  9654  0DB5  00F8               	movwf	LCD_Set_Cursor@z
  9655                           
  9656                           ;lcd.c: 92: w = temp & 0x0F;
  9657  0DB6  087A               	movf	LCD_Set_Cursor@temp,w
  9658  0DB7  390F               	andlw	15
  9659  0DB8  00F5               	movwf	??_LCD_Set_Cursor
  9660  0DB9  0875               	movf	??_LCD_Set_Cursor,w
  9661  0DBA  00F9               	movwf	LCD_Set_Cursor@w
  9662                           
  9663                           ;lcd.c: 93: LCD_Cmd(z);
  9664  0DBB  0878               	movf	LCD_Set_Cursor@z,w
  9665  0DBC  318B  23D8  318D   	fcall	_LCD_Cmd
  9666                           
  9667                           ;lcd.c: 94: LCD_Cmd(w);
  9668  0DBF  0879               	movf	LCD_Set_Cursor@w,w
  9669  0DC0  318B  23D8         	fcall	_LCD_Cmd
  9670                           
  9671                           ;lcd.c: 95: }
  9672  0DC2  0008               	return
  9673  0DC3                     l2267:	
  9674                           
  9675                           ;lcd.c: 97: else if(y == 1)
  9676  0DC3  0374               	decf	LCD_Set_Cursor@y,w
  9677  0DC4  1D03               	btfss	3,2
  9678  0DC5  0008               	return
  9679                           
  9680                           ;lcd.c: 98: {
  9681                           ;lcd.c: 99: temp = 0xC0 + x;
  9682  0DC6  0877               	movf	LCD_Set_Cursor@x,w
  9683  0DC7  3EC0               	addlw	192
  9684  0DC8  00F5               	movwf	??_LCD_Set_Cursor
  9685  0DC9  0875               	movf	??_LCD_Set_Cursor,w
  9686  0DCA  00FA               	movwf	LCD_Set_Cursor@temp
  9687                           
  9688                           ;lcd.c: 100: z = temp>>4;
  9689  0DCB  087A               	movf	LCD_Set_Cursor@temp,w
  9690  0DCC  00F5               	movwf	??_LCD_Set_Cursor
  9691  0DCD  3004               	movlw	4
  9692  0DCE                     u2515:	
  9693  0DCE  36F5               	lsrf	??_LCD_Set_Cursor,f
  9694  0DCF  0B89               	decfsz	9,f
  9695  0DD0  2DCE               	goto	u2515
  9696  0DD1  0875               	movf	??_LCD_Set_Cursor,w
  9697  0DD2  00F6               	movwf	??_LCD_Set_Cursor+1
  9698  0DD3  0876               	movf	??_LCD_Set_Cursor+1,w
  9699  0DD4  00F8               	movwf	LCD_Set_Cursor@z
  9700                           
  9701                           ;lcd.c: 101: w = temp & 0x0F;
  9702  0DD5  087A               	movf	LCD_Set_Cursor@temp,w
  9703  0DD6  390F               	andlw	15
  9704  0DD7  00F5               	movwf	??_LCD_Set_Cursor
  9705  0DD8  0875               	movf	??_LCD_Set_Cursor,w
  9706  0DD9  00F9               	movwf	LCD_Set_Cursor@w
  9707                           
  9708                           ;lcd.c: 102: LCD_Cmd(z);
  9709  0DDA  0878               	movf	LCD_Set_Cursor@z,w
  9710  0DDB  318B  23D8  318D   	fcall	_LCD_Cmd
  9711                           
  9712                           ;lcd.c: 103: LCD_Cmd(w);
  9713  0DDE  0879               	movf	LCD_Set_Cursor@w,w
  9714  0DDF  318B  23D8         	fcall	_LCD_Cmd
  9715  0DE1  0008               	return
  9716  0DE2                     __end_of_LCD_Set_Cursor:	
  9717                           
  9718                           	psect	text31
  9719  0BD8                     __ptext31:	
  9720 ;; *************** function _LCD_Cmd *****************
  9721 ;; Defined at:
  9722 ;;		line 65 in file "lcd.c"
  9723 ;; Parameters:    Size  Location     Type
  9724 ;;  a               1    wreg     unsigned char 
  9725 ;; Auto vars:     Size  Location     Type
  9726 ;;  a               1    3[COMMON] unsigned char 
  9727 ;; Return value:  Size  Location     Type
  9728 ;;                  1    wreg      void 
  9729 ;; Registers used:
  9730 ;;		wreg, status,2, status,0, pclath, cstack
  9731 ;; Tracked objects:
  9732 ;;		On entry : 0/0
  9733 ;;		On exit  : 0/0
  9734 ;;		Unchanged: 0/0
  9735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9737 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9738 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9739 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9740 ;;Total ram usage:        3 bytes
  9741 ;; Hardware stack levels used:    1
  9742 ;; Hardware stack levels required when called:    1
  9743 ;; This function calls:
  9744 ;;		_LCD_Port
  9745 ;; This function is called by:
  9746 ;;		_InitCustomChars
  9747 ;;		_LCD_Clear
  9748 ;;		_LCD_Set_Cursor
  9749 ;;		_LCD_Init
  9750 ;; This function uses a non-reentrant model
  9751 ;;
  9752                           
  9753                           
  9754                           ;psect for function _LCD_Cmd
  9755  0BD8                     _LCD_Cmd:	
  9756                           
  9757                           ;incstack = 0
  9758                           ; Regs used in _LCD_Cmd: [wreg+status,2+status,0+pclath+cstack]
  9759                           ;LCD_Cmd@a stored from wreg
  9760  0BD8  00F3               	movwf	LCD_Cmd@a
  9761                           
  9762                           ;lcd.c: 67: RA0 = 0;
  9763  0BD9  0020               	movlb	0	; select bank0
  9764  0BDA  100C               	bcf	12,0	;volatile
  9765                           
  9766                           ;lcd.c: 68: LCD_Port(a);
  9767  0BDB  0873               	movf	LCD_Cmd@a,w
  9768  0BDC  318C  2402  318B   	fcall	_LCD_Port
  9769                           
  9770                           ;lcd.c: 69: RA2 = 1;
  9771  0BDF  0020               	movlb	0	; select bank0
  9772  0BE0  150C               	bsf	12,2	;volatile
  9773                           
  9774                           ;lcd.c: 70: RA2 = 0;
  9775  0BE1  110C               	bcf	12,2	;volatile
  9776                           
  9777                           ;lcd.c: 71: _delay((unsigned long)((4)*(32000000/4000.0)));
  9778  0BE2  302A               	movlw	42
  9779  0BE3  00F2               	movwf	??_LCD_Cmd+1
  9780  0BE4  308D               	movlw	141
  9781  0BE5  00F1               	movwf	??_LCD_Cmd
  9782  0BE6                     u2837:	
  9783  0BE6  0BF1               	decfsz	??_LCD_Cmd,f
  9784  0BE7  2BE6               	goto	u2837
  9785  0BE8  0BF2               	decfsz	??_LCD_Cmd+1,f
  9786  0BE9  2BE6               	goto	u2837
  9787  0BEA  3200               	nop2
  9788  0BEB  0008               	return
  9789  0BEC                     __end_of_LCD_Cmd:	
  9790                           
  9791                           	psect	text32
  9792  0C02                     __ptext32:	
  9793 ;; *************** function _LCD_Port *****************
  9794 ;; Defined at:
  9795 ;;		line 41 in file "lcd.c"
  9796 ;; Parameters:    Size  Location     Type
  9797 ;;  a               1    wreg     unsigned char 
  9798 ;; Auto vars:     Size  Location     Type
  9799 ;;  a               1    0[COMMON] unsigned char 
  9800 ;; Return value:  Size  Location     Type
  9801 ;;                  1    wreg      void 
  9802 ;; Registers used:
  9803 ;;		wreg
  9804 ;; Tracked objects:
  9805 ;;		On entry : 0/0
  9806 ;;		On exit  : 0/0
  9807 ;;		Unchanged: 0/0
  9808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9810 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9812 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9813 ;;Total ram usage:        1 bytes
  9814 ;; Hardware stack levels used:    1
  9815 ;; This function calls:
  9816 ;;		Nothing
  9817 ;; This function is called by:
  9818 ;;		_LCD_Cmd
  9819 ;;		_LCD_Init
  9820 ;;		_LCD_Write_Char
  9821 ;; This function uses a non-reentrant model
  9822 ;;
  9823                           
  9824                           
  9825                           ;psect for function _LCD_Port
  9826  0C02                     _LCD_Port:	
  9827                           
  9828                           ;incstack = 0
  9829                           ; Regs used in _LCD_Port: [wreg]
  9830                           ;LCD_Port@a stored from wreg
  9831  0C02  00F0               	movwf	LCD_Port@a
  9832                           
  9833                           ;lcd.c: 43: if(a & 1)
  9834  0C03  1C70               	btfss	LCD_Port@a,0
  9835  0C04  2C08               	goto	l94
  9836                           
  9837                           ;lcd.c: 44: RA7 = 1;
  9838  0C05  0020               	movlb	0	; select bank0
  9839  0C06  178C               	bsf	12,7	;volatile
  9840  0C07  2C0A               	goto	l1665
  9841  0C08                     l94:	
  9842                           
  9843                           ;lcd.c: 45: else
  9844                           ;lcd.c: 46: RA7 = 0;
  9845  0C08  0020               	movlb	0	; select bank0
  9846  0C09  138C               	bcf	12,7	;volatile
  9847  0C0A                     l1665:	
  9848                           
  9849                           ;lcd.c: 48: if(a & 2)
  9850  0C0A  1CF0               	btfss	LCD_Port@a,1
  9851  0C0B  2C0E               	goto	l96
  9852                           
  9853                           ;lcd.c: 49: RA6 = 1;
  9854  0C0C  170C               	bsf	12,6	;volatile
  9855  0C0D  2C0F               	goto	l1669
  9856  0C0E                     l96:	
  9857                           
  9858                           ;lcd.c: 50: else
  9859                           ;lcd.c: 51: RA6 = 0;
  9860  0C0E  130C               	bcf	12,6	;volatile
  9861  0C0F                     l1669:	
  9862                           
  9863                           ;lcd.c: 53: if(a & 4)
  9864  0C0F  1D70               	btfss	LCD_Port@a,2
  9865  0C10  2C13               	goto	l98
  9866                           
  9867                           ;lcd.c: 54: RC0 = 1;
  9868  0C11  140E               	bsf	14,0	;volatile
  9869  0C12  2C14               	goto	l1673
  9870  0C13                     l98:	
  9871                           
  9872                           ;lcd.c: 55: else
  9873                           ;lcd.c: 56: RC0 = 0;
  9874  0C13  100E               	bcf	14,0	;volatile
  9875  0C14                     l1673:	
  9876                           
  9877                           ;lcd.c: 58: if(a & 8)
  9878  0C14  1DF0               	btfss	LCD_Port@a,3
  9879  0C15  2C18               	goto	l100
  9880                           
  9881                           ;lcd.c: 59: RC1 = 1;
  9882  0C16  148E               	bsf	14,1	;volatile
  9883  0C17  0008               	return
  9884  0C18                     l100:	
  9885                           
  9886                           ;lcd.c: 60: else
  9887                           ;lcd.c: 61: RC1 = 0;
  9888  0C18  108E               	bcf	14,1	;volatile
  9889  0C19  0008               	return
  9890  0C1A                     __end_of_LCD_Port:	
  9891  007E                     btemp	set	126	;btemp
  9892  007E                     wtemp	set	126
  9893  007E                     wtemp0	set	126
  9894  0080                     wtemp1	set	128
  9895  0082                     wtemp2	set	130
  9896  0084                     wtemp3	set	132
  9897  0086                     wtemp4	set	134
  9898  0088                     wtemp5	set	136
  9899  007F                     wtemp6	set	127
  9900  007E                     ttemp	set	126
  9901  007E                     ttemp0	set	126
  9902  0081                     ttemp1	set	129
  9903  0084                     ttemp2	set	132
  9904  0087                     ttemp3	set	135
  9905  007F                     ttemp4	set	127
  9906  007E                     ltemp	set	126
  9907  007E                     ltemp0	set	126
  9908  0082                     ltemp1	set	130
  9909  0086                     ltemp2	set	134
  9910  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    27
    Data        36
    BSS         45
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     76      80
    BANK1            80     22      75
    BANK2            80      0      24
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            48      0       0
    BANK10            0      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 27
		 -> log@coeff(CODE[27]), 


Critical Paths under _main in COMMON

    _main->_LCD_Write_Int
    _tempCalc->___awtoft
    _log->___awtoft
    ___ftmul->___awtoft
    ___awtoft->___ftpack
    ___ftadd->___awtoft
    ___ftdiv->___awtoft
    _readAnalog->___aldiv
    _SYSTEM_Initialize->_LCD_Init
    _LCD_Init->_LCD_Cmd
    _LCD_Clear->_LCD_Cmd
    _InitCustomChars->_LCD_Write_Char
    _LCD_Write_Int->___awdiv
    _LCD_Write_Char->_LCD_Port
    _LCD_Set_Cursor->_LCD_Cmd
    _LCD_Cmd->_LCD_Port

Critical Paths under _main in BANK0

    _main->_tempCalc
    _tempCalc->_log
    _log->_eval_poly
    _eval_poly->___ftadd
    ___ftsub->___ftadd
    ___ftadd->___ftdiv
    ___ftdiv->___ftmul
    _readAnalog->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                31    31      0   36283
                                             73 BANK0      3     3      0
                                              0 BANK1     22    22      0
                          _LCD_Clear
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                      _LCD_Write_Int
                 _PWM6_LoadDutyValue
                  _SYSTEM_Initialize
                         _readAnalog
                           _tempCalc
 ---------------------------------------------------------------------------------
 (1) _tempCalc                                            12     9      3   29916
                                             61 BANK0     12     9      3
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftsub
                                _log
 ---------------------------------------------------------------------------------
 (2) _log                                                  6     3      3   15637
                                             55 BANK0      6     3      3
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _frexp                                                6     2      4     330
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) _eval_poly                                           10     3      7    6891
                                             45 BANK0     10     3      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             16    10      6    2643
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6     322
                                              0 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             6     3      3    1904
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3462
                                             45 BANK0      6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             13     7      6    3289
                                             32 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    2623
                                             16 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    1707
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _readAnalog                                          22    20      2    1392
                                              9 COMMON     4     4      0
                                              6 BANK0     18    16      2
                            _ADCRead
                            ___aldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     622
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     406
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _ADCRead                                              4     1      3      22
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    3     3      0     709
                                              8 COMMON     3     3      0
                    _ADCC_Initialize
                    _InitCustomChars
                          _LCD_Clear
                           _LCD_Init
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM6_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             4     4      0     220
                                              4 COMMON     4     4      0
                            _LCD_Cmd
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            0     0      0     110
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (2) _InitCustomChars                                      2     2      0     356
                                              5 COMMON     2     2      0
                            _LCD_Cmd
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM6_LoadDutyValue                                   4     2      2     150
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCD_Write_Int                                       19    14      5    2759
                                              9 COMMON     5     0      5
                                              0 BANK0     14    14      0
                     _LCD_Write_Char
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     402
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     406
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (1) _LCD_Set_Cursor                                       7     6      1     698
                                              4 COMMON     7     6      1
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (3) _LCD_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (3) _LCD_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Clear
     _LCD_Cmd
       _LCD_Port
   _LCD_Set_Cursor
     _LCD_Cmd
       _LCD_Port
   _LCD_Write_Char
     _LCD_Port
   _LCD_Write_Int
     _LCD_Write_Char
       _LCD_Port
     ___awdiv
     ___awmod
   _PWM6_LoadDutyValue
   _SYSTEM_Initialize
     _ADCC_Initialize
     _InitCustomChars
       _LCD_Cmd
         _LCD_Port
       _LCD_Write_Char
         _LCD_Port
     _LCD_Clear
       _LCD_Cmd
         _LCD_Port
     _LCD_Init
       _LCD_Cmd
         _LCD_Port
       _LCD_Port
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM6_Initialize
     _TMR2_Initialize
   _readAnalog
     _ADCRead
     ___aldiv
     ___wmul
   _tempCalc
     ___awtoft
       ___ftpack
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
       _frexp (ARG)
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftsub
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
     _log
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftge
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       _eval_poly
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___wmul
       _frexp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4C      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     16      4B       7       93.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      18       9       30.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      C1      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               30      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK10               0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      C1      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Sun Jan 28 16:06:51 2018

                    __CFG_CP$OFF 0000                               l58 000F                               l94 0C08  
                             l96 0C0E                               l98 0C13                     ___awdiv@sign 0076  
            ___wmul@multiplicand 0072      __size_of_PWM6_LoadDutyValue 0016                     ___ftadd@exp1 004C  
                   ___ftadd@exp2 004B                      __CFG_LVP$ON 0000                     ___ftadd@sign 004A  
                            l100 0C18                              l426 0F8F                              l371 0C54  
                            l540 0F67                              l532 0F4C                              l539 0F5F  
                            l563 040F                              _GIE 005F                              _RA0 0060  
                            _RA2 0062                              _RC0 0070                              _RC1 0071  
                            _RA6 0066                              _RA7 0067                     __CFG_CPD$OFF 0000  
                            _log 0146                  __end_of_ADCRead 0016                     ___awmod@sign 0076  
                _TMR2_Initialize 0BCA                     __CFG_BORV$LO 0000                              wreg 0009  
                    main@analogs 00CF                  __end_of_LCD_Cmd 0BEC                     __CFG_ZCD$OFF 0000  
                   ___ftdiv@cntr 003A                   _LCD_Set_Cursor 0DA3                     ___ftdiv@sign 003F  
                           l2101 0FF7                             l2113 0E73                             l2131 0E92  
                           l2141 0EAD                             l2301 02FC                             l2221 0124  
                           l2213 010B                             l2119 0E7E                             l2311 031F  
                           l2055 0175                             l2145 0EB5                             l2137 0EA4  
                           l2129 0E86                             l2161 0E35                             l2305 0300  
                           l2233 0C6F                             l2049 0164                             l2171 0E47  
                           l2323 035C                             l2307 0305                             l2083 0FB0  
                           l2075 0FA0                             l2251 07A0                             l2411 05DE  
                           l2157 0E2E                             l2317 0323                             l2309 030E  
                           l2093 0FDE                             l2085 0FBE                             l1701 039F  
                           l2405 05C0                             l2183 0E64                             l2175 0E53  
                           l2319 034F                             l2169 0E3B                             l2097 0FE9  
                           l1641 0F38                             l1633 0F22                             l2193 00B4  
                           l1801 027F                             l2441 0665                             l2267 0DC3  
                           l2179 0E5C                             l1731 03EE                             l1707 03AE  
                           l1637 0F29                             l1725 03DB                             l1647 0F51  
                           l1639 0F33                             l2199 00CA                             l1743 0421  
                           l1727 03E5                             l1719 03C8                             l1673 0C14  
                           l1665 0C0A                             l2289 02C8                             l1649 0F59  
                           l1737 0401                             l1729 03EA                             l2299 02CF  
                           l1747 0433                             l1739 040B                             l1669 0C0F  
                           l1941 0CC3                             l1757 044E                             l1861 0D59  
                           l1773 0220                             l2397 05B2                             l1935 0CB2  
                           l1679 0C4E                             l1767 020A                             l1697 0398  
                           l1849 0C8F                             l1857 0D43                             l1785 025B  
                           l1881 0D7A                             l1797 0277                             l1789 0263  
                           l1899 0F13                             ?_log 0057                             u2105 0FDF  
                           u2205 0EA5                             u1405 0F54                             _LATA 0016  
                           _LATB 0017                             _LATC 0018                             u2065 0FB3  
                           u1515 0C55                             u2165 0E89                             u2085 0FBF  
                           u1525 0C5A                             u1445 0F6E                             u1365 0F2E  
                           u2095 0FD3                             u2415 06AD                             u2520 02B2  
                           u2185 0E93                             u2265 0E3E                             u2425 06FB  
                           u1385 0F47                             u2345 00DC                             _T2PR 028D  
                           u2515 0DCE                             u2195 0E9D                             u2435 0734  
                           u2355 00EC                             u1635 03C9                             u2285 0E4D  
                           u2445 0777                             u2365 010C                             u1725 0402  
                           u1805 023C                             u2630 0589                             u2295 0E54  
                           u2615 0BFB                             u2455 0790                             u2375 011B  
                           u2385 0125                             u1665 03DC                             u1825 0264  
                           u2707 0E1C                             u2475 07AC                             u1835 026A  
                           u2717 0021                             u2495 0DAF                             u2807 0098  
                           u2727 002F                             u1695 03EF                             u2817 0CE7  
                           u2585 033D                             u2737 003A                             u1865 0280  
                           u2827 0CF3                             u2747 0044                             u1875 0286  
                           u1795 022C                             u2837 0BE6                             u2757 004E  
                           u2677 05A5                             u1990 0D2B                             u1895 0CDB  
                           u2767 005C                             u2687 0DFD                             u2777 006A  
                           u2697 0E0D                             u2787 007A                             u2797 0089  
            tempCalc@analogValue 005D                             _WPUA 0F39                             _WPUB 0F44  
                           _WPUC 0F4F                             _WPUE 0F65                     __CFG_WRT$OFF 0000  
                  __CFG_FCMEN$ON 0000                             _main 057B                     ___ftpack@arg 0070  
             __size_of_LCD_Clear 0008                     ___ftpack@exp 0073                             fsr0h 0005  
                           fsr1h 0007                             fsr0l 0004                             indf0 0000  
                           indf1 0001                             fsr1l 0006                             btemp 007E  
                           log@x 0057                    __CFG_BOREN$ON 0000                             ltemp 007E  
                           start 0002                             ttemp 007E                             wtemp 007E  
                  __CFG_CSWEN$ON 0000                    __CFG_MCLRE$ON 0000                     ___ftmul@cntr 002E  
                  _LCD_Write_Int 02A7                     ___ftmul@sign 002F                            ??_log 005A  
               __end_of_LCD_Init 009D                 __end_of_LCD_Port 0C1A   __size_of_OSCILLATOR_Initialize 0009  
  __end_of_OSCILLATOR_Initialize 0B9B                  __end_of___aldiv 1000                            _ADACQ 009D  
                          _ADCAP 009B                            _ADACT 0099                            ?_main 0070  
                          _ADCLK 0098                            _ADPCH 009E                            _ADREF 009A  
                __end_of___awdiv 0EBA                            _ADPRE 009C                  __end_of___ftadd 0466  
                  __CFG_WDTE$OFF 0000                  __end_of___awmod 0E69                            _ADRPT 010D  
                __end_of___ftdiv 0146                  __end_of___ftmul 02A7                  ___awdiv@divisor 0070  
                __end_of___ftsub 0C85                            _T2CON 028E                            _T2HLT 028F  
                          _T2TMR 028C                            _T2RST 0291                  ___awdiv@counter 0075  
                          _OSCEN 0891                            _TRISA 0011                            _TRISB 0012  
                          _TRISC 0013                  _PWM6_Initialize 0B9B           __end_of_LCD_Set_Cursor 0DE2  
                  ___awtoft@sign 007D                            _frexp 0D68                            _errno 006C  
                  ___ftpack@sign 0074                            main@x 00DE                            ltemp0 007E  
                          ltemp1 0082                            ltemp2 0086                            ltemp3 0080  
                          ttemp0 007E                            ttemp1 0081                            ttemp2 0084  
                          ttemp3 0087                            ttemp4 007F                            status 0003  
                          wtemp0 007E                            wtemp1 0080                            wtemp2 0082  
                          wtemp3 0084                            wtemp4 0086                            wtemp5 0088  
                          wtemp6 007F                 InitCustomChars@i 0076                   ?_LCD_Write_Int 0079  
                 _LCD_Write_Char 0CCB                  __initialization 07C8                      log@exponent 005B  
                   __end_of_main 0698                readAnalog@channel 0026          __end_of_TMR2_Initialize 0BD8  
                      ??_ADCRead 0073                           ??_main 0069                __end_of_LCD_Clear 0B92  
                      ??_LCD_Cmd 0071                  ?_LCD_Set_Cursor 0074                           _ADCON0 0093  
                         _ADCON1 0094                           _ADCON2 0095                           _ADCON3 0096  
                         ?_frexp 0070                           _ADLTHH 010F                           _ADLTHL 010E  
                         _ADRESH 008D                           _ADRESL 008C                           _ADSTAT 0097  
                         _ADUTHH 0111                 ___awdiv@dividend 0072                           _ADUTHL 0110  
               __end_of___awtoft 0CA5                           _ANSELA 0F38                           _ANSELB 0F43  
                         _ANSELC 0F4E                 __end_of___ftpack 0F7E                           _RC2PPS 0F22  
                 __CFG_WDTCCS$SC 0000                           _FVRCON 090C                           _OSCFRQ 0893  
                  main@dutyCycle 00DC           __end_of_LCD_Write_Char 0CF7                   __CFG_PWRTE$OFF 0000  
                   _CCPTMRS1bits 021F                           ___ftge 0D2D           LCD_Write_Int@numPlaces 007C  
                      ??___aldiv 0078                           ___wmul 0C4C                        ??___awdiv 0074  
                      ??___ftadd 0046                   __CFG_STVREN$ON 0000                        ??___awmod 0074  
                      ??___ftdiv 0036                        ??___ftmul 0026                        ??___ftsub 007E  
        __end_of_PWM6_Initialize 0BA6                 ___awdiv@quotient 0077                  ___awmod@divisor 0070  
                ___awmod@counter 0075                           _totals 00A0            ___ftmul@f3_as_product 002B  
               __end_of_tempCalc 057B                  _ADCC_Initialize 0C32                 LCD_Write_Int@str 0025  
                _InitCustomChars 0CA5                  LCD_Set_Cursor@w 0079                  LCD_Set_Cursor@x 0077  
                LCD_Set_Cursor@y 0074                  LCD_Set_Cursor@z 0078         readAnalog@analog_channel 0079  
              _SYSTEM_Initialize 0DE2                 __end_oflog@coeff 101B          __end_of__initialization 07FD  
                      ?_LCD_Init 0070                        ?_LCD_Port 0070                       ___ftadd@f1 0040  
                     ___ftadd@f2 0043                       ___ftge@ff1 0070                       ___ftge@ff2 0073  
                ??_LCD_Write_Int 0020               ?_SYSTEM_Initialize 0070                     eval_poly@res 0054  
                     ___ftdiv@f1 0033                       ___ftdiv@f2 0030                       ___ftdiv@f3 003B  
                ?_LCD_Write_Char 0070                    LCD_Init@style 0077                       ___awtoft@c 0078  
                     ___ftmul@f1 0020                       ___ftmul@f2 0023                       ___ftsub@f1 0050  
                     ___ftsub@f2 004D                   __pcstackCOMMON 0070                        LCD_Port@a 0070  
                   __pidataBANK1 0BBE                     __pidataBANK2 0C1A              ??_SYSTEM_Initialize 0078  
                  __end_of_frexp 0DA3                 ?_TMR2_Initialize 0070                          ??_frexp 0074  
      __end_of_SYSTEM_Initialize 0E24                       __pbssBANK0 006C                       __pbssBANK1 00A0  
             __size_of_eval_poly 0060                       ??_LCD_Init 0074                       ??_LCD_Port 0070  
                     __pmaintext 057B                          ?___ftge 0070                          ?___wmul 0070  
                __CFG_PPS1WAY$ON 0000          __end_of_ADCC_Initialize 0C4C       __end_of_PWM6_LoadDutyValue 0C02  
                        _ADCRead 0008                 ?_PWM6_Initialize 0070                        ?___awtoft 0078  
                      ?___ftpack 0070                          _ADSTPTH 0113                          _ADSTPTL 0112  
       __CFG_SCANE$not_available 0000              __CFG_RSTOSC$HFINT32 0000                 main@displayTemp2 00CC  
        __end_of_InitCustomChars 0CCB                          _LCD_Cmd 0BD8                          _OSCCON1 088D  
                        _OSCCON3 088F                          _OSCTUNE 0892                          _PWM6DCH 038D  
                        _PWM6DCL 038C                          _PWM6CON 038E                          _PPSLOCK 0E8F  
                      ?_tempCalc 005D                       _readAnalog 0698                          ___aldiv 0F7E  
                        ___cgram 0120                  __size_of___ftge 003B                          ___awdiv 0E69  
                        ___ftadd 0370                          ___awmod 0E24                          ___ftdiv 009D  
                __size_of___wmul 001B                          ___ftmul 01F3                          ___ftsub 0C67  
                     ??___awtoft 007B                       ??___ftpack 0075                __end_of_eval_poly 0F1A  
               ??_LCD_Set_Cursor 0075                          __ptext1 0466                          __ptext2 0146  
                        __ptext3 0D68                          __ptext4 0EBA                          __ptext5 01F3  
                        __ptext6 0D2D                          __ptext7 0C85                          __ptext8 0C67  
                        __ptext9 0370            _OSCILLATOR_Initialize 0B92                        _T2CONbits 028E  
                   __size_of_log 00AD                 ___awmod@dividend 0072                   ADCRead@channel 0073  
               ___aldiv@dividend 0074         ??_PIN_MANAGER_Initialize 0070                          _samples 2300  
                      _LCD_Clear 0B8A       __size_of_SYSTEM_Initialize 0042                          clrloop0 0BA7  
           end_of_initialization 07FD                          init_ram 0BB2                          initloop 0BB3  
                     ??_tempCalc 007E                 ___aldiv@quotient 0022                LCD_Write_Int@sign 007D  
                     main@F13657 00B8                     __pstringtext 1000                 ?_ADCC_Initialize 0070  
          __CFG_WDTCPS$WDTCPS_31 0000                 ?_InitCustomChars 0070                       ?_LCD_Clear 0070  
               __CFG_FEXTOSC$OFF 0000                 ??_LCD_Write_Char 0071                      ___ftdiv@exp 003E  
              __size_of_LCD_Init 0087                __size_of_LCD_Port 0018                      ___ftmul@exp 002A  
                    ?_readAnalog 0026                   __end_of___ftge 0D68                   __end_of___wmul 0C67  
         ?_OSCILLATOR_Initialize 0070              start_initialization 07C8                       eval_poly@d 0050  
                     eval_poly@n 0052                       eval_poly@x 004D  __size_of_PIN_MANAGER_Initialize 0036  
                    __end_of_log 01F3                       frexp@value 0070         LCD_Write_Int@fieldLength 007B  
          __end_of_LCD_Write_Int 0370                 __CFG_LPBOREN$OFF 0000                         ??___ftge 0076  
              tempCalc@steinhart 0066                         ??___wmul 0074                      __pdataBANK1 00DF  
                    __pdataBANK2 0120                  LCD_Write_Char@a 0074                  LCD_Write_Char@y 0073  
                       ?_ADCRead 0070                         ?_LCD_Cmd 0070                __size_of___awtoft 0020  
              __size_of___ftpack 0064                      __pbssBIGRAM 2300                         LCD_Cmd@a 0073  
                      ___latbits 0002                    __pcstackBANK0 0020                    __pcstackBANK1 00C9  
             _PWM6_LoadDutyValue 0BEC         __size_of_TMR2_Initialize 000E                      ??_LCD_Clear 0074  
            __size_of_readAnalog 0130              ?_PWM6_LoadDutyValue 0070           _PIN_MANAGER_Initialize 0CF7  
                       ?___aldiv 0070                __size_of_tempCalc 0115                         ?___awdiv 0070  
                       ?___ftadd 0040                         ?___awmod 0070                         ?___ftdiv 0030  
                       ?___ftmul 0020                         ?___ftsub 004D                  main@displayTemp 00C9  
           ??_PWM6_LoadDutyValue 0072                        _eval_poly 0EBA         __size_of_PWM6_Initialize 000B  
                 __size_of_frexp 003B                         _T2CLKCON 0290                  ___aldiv@divisor 0070  
                ___aldiv@counter 0020                         _LCD_Init 0016                   ___wmul@product 0074  
                       _LCD_Port 0C02                        clear_ram0 0BA6                         _PIE0bits 0716  
                       _PIR4bits 0710                 __size_of_ADCRead 000E                       _ADCON0bits 0093  
              ___wmul@multiplier 0070                        main@count 00DB                       ?_eval_poly 004D  
               __size_of_LCD_Cmd 0014                ??_TMR2_Initialize 0070                  readAnalog@value 007B  
                      frexp@eptr 0073                     ??_readAnalog 0028                     _tempCalc$939 0063  
        ??_OSCILLATOR_Initialize 0070                   LCD_Write_Int@i 002C                   LCD_Write_Int@j 002A  
               __size_of___aldiv 0082                 __size_of___awdiv 0051                 __size_of___ftadd 00F6  
               __size_of___awmod 0045                 __size_of___ftdiv 00A9                 __size_of___ftmul 00B4  
               __size_of___ftsub 001E                         ___awtoft 0C85                         ___ftpack 0F1A  
       __size_of_ADCC_Initialize 001A                         _channels 00DF                         __ptext10 009D  
                       __ptext11 0F1A                         __ptext20 0B92                         __ptext12 0698  
                       __ptext21 0016                         __ptext13 0C4C                         __ptext30 0DA3  
                       __ptext22 0B8A                         __ptext14 0F7E                         __ptext31 0BD8  
                       __ptext23 0CA5                         __ptext15 0008                         __ptext32 0C02  
                       __ptext24 0C32                         __ptext16 0DE2                         __ptext25 0BEC  
                       __ptext17 0BCA                         __ptext26 02A7                         __ptext18 0B9B  
                       __ptext27 0E24                         __ptext19 0CF7                         __ptext28 0E69  
                       __ptext29 0CCB               __end_of_readAnalog 07C8          __size_of_LCD_Set_Cursor 003F  
                      tempCalc@R 0060         __size_of_InitCustomChars 0026              LCD_Write_Int@F13687 00C4  
              ??_PWM6_Initialize 0070                    __size_of_main 011D             __CFG_WDTCWS$WDTCWS_7 0000  
                       _tempCalc 0466      PIN_MANAGER_Initialize@state 0070                         log@coeff 1000  
                    ??_eval_poly 007E                      _sampleIndex 006E               LCD_Write_Char@temp 0072  
        ?_PIN_MANAGER_Initialize 0070                __CFG_CLKOUTEN$OFF 0000                      _PPSLOCKbits 0E8F  
        __size_of_LCD_Write_Char 002C               LCD_Set_Cursor@temp 007A               LCD_Write_Int@value 0079  
                   ___aldiv@sign 0021      PWM6_LoadDutyValue@dutyCycle 0070           __size_of_LCD_Write_Int 00C9  
 __end_of_PIN_MANAGER_Initialize 0D2D                ??_ADCC_Initialize 0070                ??_InitCustomChars 0075  
