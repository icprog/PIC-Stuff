

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Mon Feb 26 17:18:28 2018

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	stringtext,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	psect	text32,local,class=CODE,merge=1,delta=2
    51                           	psect	text33,local,class=CODE,merge=1,delta=2
    52                           	psect	text34,local,class=CODE,merge=1,delta=2
    53                           	psect	text35,local,class=CODE,merge=1,delta=2
    54                           	dabs	1,0x620,48
    55                           	dabs	1,0x5A0,80
    56                           	dabs	1,0x520,80
    57                           	dabs	1,0x4D0,32
    58                           	dabs	1,0x2300,0,_samples
    59                           	dabs	1,0x7E,2
    60  0000                     	;# 
    61  0001                     	;# 
    62  0002                     	;# 
    63  0003                     	;# 
    64  0004                     	;# 
    65  0005                     	;# 
    66  0006                     	;# 
    67  0007                     	;# 
    68  0008                     	;# 
    69  0009                     	;# 
    70  000A                     	;# 
    71  000B                     	;# 
    72  000C                     	;# 
    73  000D                     	;# 
    74  000E                     	;# 
    75  0010                     	;# 
    76  0011                     	;# 
    77  0012                     	;# 
    78  0013                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  001C                     	;# 
    83  001C                     	;# 
    84  001D                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  008C                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  008E                     	;# 
    93  008F                     	;# 
    94  0090                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0093                     	;# 
    98  0094                     	;# 
    99  0095                     	;# 
   100  0096                     	;# 
   101  0097                     	;# 
   102  0098                     	;# 
   103  0099                     	;# 
   104  009A                     	;# 
   105  009B                     	;# 
   106  009C                     	;# 
   107  009D                     	;# 
   108  009E                     	;# 
   109  010C                     	;# 
   110  010D                     	;# 
   111  010E                     	;# 
   112  010E                     	;# 
   113  010F                     	;# 
   114  0110                     	;# 
   115  0110                     	;# 
   116  0111                     	;# 
   117  0112                     	;# 
   118  0112                     	;# 
   119  0113                     	;# 
   120  0114                     	;# 
   121  0114                     	;# 
   122  0115                     	;# 
   123  0116                     	;# 
   124  0116                     	;# 
   125  0117                     	;# 
   126  0119                     	;# 
   127  0119                     	;# 
   128  0119                     	;# 
   129  011A                     	;# 
   130  011A                     	;# 
   131  011A                     	;# 
   132  011B                     	;# 
   133  011B                     	;# 
   134  011B                     	;# 
   135  011B                     	;# 
   136  011B                     	;# 
   137  011C                     	;# 
   138  011C                     	;# 
   139  011C                     	;# 
   140  011D                     	;# 
   141  011D                     	;# 
   142  011D                     	;# 
   143  011E                     	;# 
   144  011E                     	;# 
   145  011E                     	;# 
   146  011F                     	;# 
   147  011F                     	;# 
   148  011F                     	;# 
   149  011F                     	;# 
   150  011F                     	;# 
   151  018C                     	;# 
   152  018D                     	;# 
   153  018E                     	;# 
   154  018F                     	;# 
   155  0190                     	;# 
   156  0191                     	;# 
   157  0192                     	;# 
   158  0196                     	;# 
   159  0197                     	;# 
   160  0198                     	;# 
   161  0199                     	;# 
   162  019A                     	;# 
   163  019B                     	;# 
   164  019C                     	;# 
   165  020C                     	;# 
   166  020D                     	;# 
   167  020E                     	;# 
   168  020F                     	;# 
   169  020F                     	;# 
   170  0210                     	;# 
   171  0210                     	;# 
   172  0211                     	;# 
   173  0211                     	;# 
   174  0212                     	;# 
   175  0213                     	;# 
   176  0214                     	;# 
   177  0215                     	;# 
   178  0215                     	;# 
   179  0216                     	;# 
   180  0216                     	;# 
   181  0217                     	;# 
   182  0217                     	;# 
   183  0218                     	;# 
   184  0219                     	;# 
   185  021A                     	;# 
   186  021B                     	;# 
   187  021B                     	;# 
   188  021C                     	;# 
   189  021C                     	;# 
   190  021D                     	;# 
   191  021D                     	;# 
   192  021E                     	;# 
   193  021F                     	;# 
   194  028C                     	;# 
   195  028C                     	;# 
   196  028D                     	;# 
   197  028D                     	;# 
   198  028E                     	;# 
   199  028F                     	;# 
   200  0290                     	;# 
   201  0290                     	;# 
   202  0291                     	;# 
   203  0292                     	;# 
   204  0292                     	;# 
   205  0293                     	;# 
   206  0293                     	;# 
   207  0294                     	;# 
   208  0295                     	;# 
   209  0296                     	;# 
   210  0296                     	;# 
   211  0297                     	;# 
   212  0298                     	;# 
   213  0298                     	;# 
   214  0299                     	;# 
   215  0299                     	;# 
   216  029A                     	;# 
   217  029B                     	;# 
   218  029C                     	;# 
   219  029C                     	;# 
   220  029D                     	;# 
   221  030C                     	;# 
   222  030C                     	;# 
   223  030D                     	;# 
   224  030E                     	;# 
   225  030F                     	;# 
   226  0310                     	;# 
   227  0310                     	;# 
   228  0311                     	;# 
   229  0312                     	;# 
   230  0313                     	;# 
   231  0314                     	;# 
   232  0314                     	;# 
   233  0315                     	;# 
   234  0316                     	;# 
   235  0317                     	;# 
   236  0318                     	;# 
   237  0318                     	;# 
   238  0319                     	;# 
   239  031A                     	;# 
   240  031B                     	;# 
   241  031C                     	;# 
   242  031C                     	;# 
   243  031D                     	;# 
   244  031E                     	;# 
   245  031F                     	;# 
   246  038C                     	;# 
   247  038D                     	;# 
   248  038E                     	;# 
   249  0390                     	;# 
   250  0391                     	;# 
   251  0392                     	;# 
   252  040C                     	;# 
   253  040D                     	;# 
   254  040E                     	;# 
   255  040F                     	;# 
   256  0410                     	;# 
   257  0411                     	;# 
   258  0416                     	;# 
   259  0416                     	;# 
   260  0417                     	;# 
   261  0418                     	;# 
   262  0418                     	;# 
   263  0419                     	;# 
   264  041A                     	;# 
   265  041A                     	;# 
   266  041B                     	;# 
   267  041C                     	;# 
   268  041C                     	;# 
   269  041D                     	;# 
   270  041E                     	;# 
   271  041F                     	;# 
   272  048C                     	;# 
   273  048C                     	;# 
   274  048D                     	;# 
   275  048E                     	;# 
   276  048F                     	;# 
   277  048F                     	;# 
   278  0490                     	;# 
   279  0491                     	;# 
   280  0492                     	;# 
   281  0492                     	;# 
   282  0493                     	;# 
   283  0494                     	;# 
   284  0495                     	;# 
   285  0495                     	;# 
   286  0496                     	;# 
   287  0497                     	;# 
   288  0498                     	;# 
   289  0499                     	;# 
   290  049A                     	;# 
   291  049B                     	;# 
   292  049C                     	;# 
   293  049D                     	;# 
   294  050C                     	;# 
   295  050C                     	;# 
   296  050D                     	;# 
   297  050E                     	;# 
   298  050F                     	;# 
   299  050F                     	;# 
   300  0510                     	;# 
   301  0511                     	;# 
   302  0512                     	;# 
   303  0512                     	;# 
   304  0513                     	;# 
   305  0514                     	;# 
   306  0515                     	;# 
   307  0515                     	;# 
   308  0516                     	;# 
   309  0517                     	;# 
   310  0518                     	;# 
   311  0519                     	;# 
   312  051A                     	;# 
   313  051B                     	;# 
   314  051C                     	;# 
   315  051D                     	;# 
   316  058C                     	;# 
   317  058C                     	;# 
   318  058D                     	;# 
   319  058E                     	;# 
   320  058F                     	;# 
   321  058F                     	;# 
   322  0590                     	;# 
   323  0591                     	;# 
   324  0592                     	;# 
   325  0593                     	;# 
   326  060C                     	;# 
   327  060D                     	;# 
   328  060E                     	;# 
   329  060F                     	;# 
   330  0610                     	;# 
   331  0611                     	;# 
   332  0612                     	;# 
   333  0613                     	;# 
   334  0614                     	;# 
   335  0616                     	;# 
   336  0617                     	;# 
   337  0618                     	;# 
   338  0619                     	;# 
   339  061A                     	;# 
   340  061B                     	;# 
   341  061C                     	;# 
   342  061D                     	;# 
   343  061E                     	;# 
   344  068C                     	;# 
   345  068D                     	;# 
   346  068E                     	;# 
   347  068F                     	;# 
   348  0690                     	;# 
   349  0691                     	;# 
   350  0692                     	;# 
   351  0693                     	;# 
   352  0694                     	;# 
   353  070C                     	;# 
   354  070D                     	;# 
   355  070E                     	;# 
   356  070F                     	;# 
   357  0710                     	;# 
   358  0711                     	;# 
   359  0712                     	;# 
   360  0713                     	;# 
   361  0714                     	;# 
   362  0716                     	;# 
   363  0717                     	;# 
   364  0718                     	;# 
   365  0719                     	;# 
   366  071A                     	;# 
   367  071B                     	;# 
   368  071C                     	;# 
   369  071D                     	;# 
   370  071E                     	;# 
   371  0796                     	;# 
   372  0797                     	;# 
   373  0798                     	;# 
   374  0799                     	;# 
   375  079A                     	;# 
   376  079B                     	;# 
   377  080C                     	;# 
   378  080D                     	;# 
   379  080E                     	;# 
   380  080F                     	;# 
   381  0810                     	;# 
   382  0811                     	;# 
   383  0812                     	;# 
   384  0813                     	;# 
   385  0814                     	;# 
   386  081A                     	;# 
   387  081B                     	;# 
   388  081C                     	;# 
   389  081D                     	;# 
   390  081E                     	;# 
   391  081F                     	;# 
   392  088C                     	;# 
   393  088D                     	;# 
   394  088E                     	;# 
   395  088F                     	;# 
   396  0890                     	;# 
   397  0891                     	;# 
   398  0892                     	;# 
   399  0893                     	;# 
   400  0895                     	;# 
   401  0896                     	;# 
   402  0897                     	;# 
   403  0898                     	;# 
   404  0899                     	;# 
   405  089A                     	;# 
   406  089B                     	;# 
   407  090C                     	;# 
   408  090E                     	;# 
   409  090F                     	;# 
   410  091F                     	;# 
   411  091F                     	;# 
   412  098F                     	;# 
   413  098F                     	;# 
   414  0990                     	;# 
   415  0991                     	;# 
   416  0992                     	;# 
   417  0993                     	;# 
   418  0994                     	;# 
   419  0995                     	;# 
   420  0996                     	;# 
   421  0997                     	;# 
   422  0E0F                     	;# 
   423  0E10                     	;# 
   424  0E11                     	;# 
   425  0E12                     	;# 
   426  0E13                     	;# 
   427  0E14                     	;# 
   428  0E15                     	;# 
   429  0E16                     	;# 
   430  0E17                     	;# 
   431  0E18                     	;# 
   432  0E19                     	;# 
   433  0E1A                     	;# 
   434  0E1B                     	;# 
   435  0E1C                     	;# 
   436  0E1D                     	;# 
   437  0E1E                     	;# 
   438  0E1F                     	;# 
   439  0E20                     	;# 
   440  0E21                     	;# 
   441  0E22                     	;# 
   442  0E23                     	;# 
   443  0E24                     	;# 
   444  0E25                     	;# 
   445  0E26                     	;# 
   446  0E27                     	;# 
   447  0E28                     	;# 
   448  0E29                     	;# 
   449  0E2A                     	;# 
   450  0E2B                     	;# 
   451  0E2C                     	;# 
   452  0E2D                     	;# 
   453  0E2E                     	;# 
   454  0E2F                     	;# 
   455  0E30                     	;# 
   456  0E31                     	;# 
   457  0E32                     	;# 
   458  0E33                     	;# 
   459  0E34                     	;# 
   460  0E35                     	;# 
   461  0E36                     	;# 
   462  0E37                     	;# 
   463  0E8F                     	;# 
   464  0E90                     	;# 
   465  0E91                     	;# 
   466  0E92                     	;# 
   467  0E93                     	;# 
   468  0E94                     	;# 
   469  0E95                     	;# 
   470  0E96                     	;# 
   471  0E97                     	;# 
   472  0E9C                     	;# 
   473  0E9D                     	;# 
   474  0E9E                     	;# 
   475  0EA1                     	;# 
   476  0EA2                     	;# 
   477  0EA3                     	;# 
   478  0EA4                     	;# 
   479  0EA5                     	;# 
   480  0EA9                     	;# 
   481  0EAA                     	;# 
   482  0EAB                     	;# 
   483  0EAC                     	;# 
   484  0EB1                     	;# 
   485  0EB2                     	;# 
   486  0EB3                     	;# 
   487  0EB8                     	;# 
   488  0EB9                     	;# 
   489  0EBA                     	;# 
   490  0EBB                     	;# 
   491  0EBC                     	;# 
   492  0EBD                     	;# 
   493  0EBE                     	;# 
   494  0EC3                     	;# 
   495  0EC5                     	;# 
   496  0EC6                     	;# 
   497  0EC7                     	;# 
   498  0EC8                     	;# 
   499  0EC9                     	;# 
   500  0ECA                     	;# 
   501  0ECB                     	;# 
   502  0ECC                     	;# 
   503  0F10                     	;# 
   504  0F11                     	;# 
   505  0F12                     	;# 
   506  0F13                     	;# 
   507  0F14                     	;# 
   508  0F15                     	;# 
   509  0F16                     	;# 
   510  0F17                     	;# 
   511  0F18                     	;# 
   512  0F19                     	;# 
   513  0F1A                     	;# 
   514  0F1B                     	;# 
   515  0F1C                     	;# 
   516  0F1D                     	;# 
   517  0F1E                     	;# 
   518  0F1F                     	;# 
   519  0F20                     	;# 
   520  0F21                     	;# 
   521  0F22                     	;# 
   522  0F23                     	;# 
   523  0F24                     	;# 
   524  0F25                     	;# 
   525  0F26                     	;# 
   526  0F27                     	;# 
   527  0F38                     	;# 
   528  0F39                     	;# 
   529  0F3A                     	;# 
   530  0F3B                     	;# 
   531  0F3C                     	;# 
   532  0F3D                     	;# 
   533  0F3E                     	;# 
   534  0F3F                     	;# 
   535  0F40                     	;# 
   536  0F41                     	;# 
   537  0F43                     	;# 
   538  0F44                     	;# 
   539  0F45                     	;# 
   540  0F46                     	;# 
   541  0F47                     	;# 
   542  0F48                     	;# 
   543  0F49                     	;# 
   544  0F4A                     	;# 
   545  0F4B                     	;# 
   546  0F4C                     	;# 
   547  0F4E                     	;# 
   548  0F4F                     	;# 
   549  0F50                     	;# 
   550  0F51                     	;# 
   551  0F52                     	;# 
   552  0F53                     	;# 
   553  0F54                     	;# 
   554  0F55                     	;# 
   555  0F56                     	;# 
   556  0F57                     	;# 
   557  0F65                     	;# 
   558  0F68                     	;# 
   559  0F69                     	;# 
   560  0F6A                     	;# 
   561  0F6B                     	;# 
   562  0FE4                     	;# 
   563  0FE5                     	;# 
   564  0FE6                     	;# 
   565  0FE7                     	;# 
   566  0FE8                     	;# 
   567  0FE9                     	;# 
   568  0FEA                     	;# 
   569  0FEB                     	;# 
   570  0FED                     	;# 
   571  0FEE                     	;# 
   572  0FEF                     	;# 
   573  0000                     	;# 
   574  0001                     	;# 
   575  0002                     	;# 
   576  0003                     	;# 
   577  0004                     	;# 
   578  0005                     	;# 
   579  0006                     	;# 
   580  0007                     	;# 
   581  0008                     	;# 
   582  0009                     	;# 
   583  000A                     	;# 
   584  000B                     	;# 
   585  000C                     	;# 
   586  000D                     	;# 
   587  000E                     	;# 
   588  0010                     	;# 
   589  0011                     	;# 
   590  0012                     	;# 
   591  0013                     	;# 
   592  0016                     	;# 
   593  0017                     	;# 
   594  0018                     	;# 
   595  001C                     	;# 
   596  001C                     	;# 
   597  001D                     	;# 
   598  001D                     	;# 
   599  001E                     	;# 
   600  001F                     	;# 
   601  008C                     	;# 
   602  008C                     	;# 
   603  008D                     	;# 
   604  008E                     	;# 
   605  008E                     	;# 
   606  008F                     	;# 
   607  0090                     	;# 
   608  0090                     	;# 
   609  0091                     	;# 
   610  0093                     	;# 
   611  0094                     	;# 
   612  0095                     	;# 
   613  0096                     	;# 
   614  0097                     	;# 
   615  0098                     	;# 
   616  0099                     	;# 
   617  009A                     	;# 
   618  009B                     	;# 
   619  009C                     	;# 
   620  009D                     	;# 
   621  009E                     	;# 
   622  010C                     	;# 
   623  010D                     	;# 
   624  010E                     	;# 
   625  010E                     	;# 
   626  010F                     	;# 
   627  0110                     	;# 
   628  0110                     	;# 
   629  0111                     	;# 
   630  0112                     	;# 
   631  0112                     	;# 
   632  0113                     	;# 
   633  0114                     	;# 
   634  0114                     	;# 
   635  0115                     	;# 
   636  0116                     	;# 
   637  0116                     	;# 
   638  0117                     	;# 
   639  0119                     	;# 
   640  0119                     	;# 
   641  0119                     	;# 
   642  011A                     	;# 
   643  011A                     	;# 
   644  011A                     	;# 
   645  011B                     	;# 
   646  011B                     	;# 
   647  011B                     	;# 
   648  011B                     	;# 
   649  011B                     	;# 
   650  011C                     	;# 
   651  011C                     	;# 
   652  011C                     	;# 
   653  011D                     	;# 
   654  011D                     	;# 
   655  011D                     	;# 
   656  011E                     	;# 
   657  011E                     	;# 
   658  011E                     	;# 
   659  011F                     	;# 
   660  011F                     	;# 
   661  011F                     	;# 
   662  011F                     	;# 
   663  011F                     	;# 
   664  018C                     	;# 
   665  018D                     	;# 
   666  018E                     	;# 
   667  018F                     	;# 
   668  0190                     	;# 
   669  0191                     	;# 
   670  0192                     	;# 
   671  0196                     	;# 
   672  0197                     	;# 
   673  0198                     	;# 
   674  0199                     	;# 
   675  019A                     	;# 
   676  019B                     	;# 
   677  019C                     	;# 
   678  020C                     	;# 
   679  020D                     	;# 
   680  020E                     	;# 
   681  020F                     	;# 
   682  020F                     	;# 
   683  0210                     	;# 
   684  0210                     	;# 
   685  0211                     	;# 
   686  0211                     	;# 
   687  0212                     	;# 
   688  0213                     	;# 
   689  0214                     	;# 
   690  0215                     	;# 
   691  0215                     	;# 
   692  0216                     	;# 
   693  0216                     	;# 
   694  0217                     	;# 
   695  0217                     	;# 
   696  0218                     	;# 
   697  0219                     	;# 
   698  021A                     	;# 
   699  021B                     	;# 
   700  021B                     	;# 
   701  021C                     	;# 
   702  021C                     	;# 
   703  021D                     	;# 
   704  021D                     	;# 
   705  021E                     	;# 
   706  021F                     	;# 
   707  028C                     	;# 
   708  028C                     	;# 
   709  028D                     	;# 
   710  028D                     	;# 
   711  028E                     	;# 
   712  028F                     	;# 
   713  0290                     	;# 
   714  0290                     	;# 
   715  0291                     	;# 
   716  0292                     	;# 
   717  0292                     	;# 
   718  0293                     	;# 
   719  0293                     	;# 
   720  0294                     	;# 
   721  0295                     	;# 
   722  0296                     	;# 
   723  0296                     	;# 
   724  0297                     	;# 
   725  0298                     	;# 
   726  0298                     	;# 
   727  0299                     	;# 
   728  0299                     	;# 
   729  029A                     	;# 
   730  029B                     	;# 
   731  029C                     	;# 
   732  029C                     	;# 
   733  029D                     	;# 
   734  030C                     	;# 
   735  030C                     	;# 
   736  030D                     	;# 
   737  030E                     	;# 
   738  030F                     	;# 
   739  0310                     	;# 
   740  0310                     	;# 
   741  0311                     	;# 
   742  0312                     	;# 
   743  0313                     	;# 
   744  0314                     	;# 
   745  0314                     	;# 
   746  0315                     	;# 
   747  0316                     	;# 
   748  0317                     	;# 
   749  0318                     	;# 
   750  0318                     	;# 
   751  0319                     	;# 
   752  031A                     	;# 
   753  031B                     	;# 
   754  031C                     	;# 
   755  031C                     	;# 
   756  031D                     	;# 
   757  031E                     	;# 
   758  031F                     	;# 
   759  038C                     	;# 
   760  038D                     	;# 
   761  038E                     	;# 
   762  0390                     	;# 
   763  0391                     	;# 
   764  0392                     	;# 
   765  040C                     	;# 
   766  040D                     	;# 
   767  040E                     	;# 
   768  040F                     	;# 
   769  0410                     	;# 
   770  0411                     	;# 
   771  0416                     	;# 
   772  0416                     	;# 
   773  0417                     	;# 
   774  0418                     	;# 
   775  0418                     	;# 
   776  0419                     	;# 
   777  041A                     	;# 
   778  041A                     	;# 
   779  041B                     	;# 
   780  041C                     	;# 
   781  041C                     	;# 
   782  041D                     	;# 
   783  041E                     	;# 
   784  041F                     	;# 
   785  048C                     	;# 
   786  048C                     	;# 
   787  048D                     	;# 
   788  048E                     	;# 
   789  048F                     	;# 
   790  048F                     	;# 
   791  0490                     	;# 
   792  0491                     	;# 
   793  0492                     	;# 
   794  0492                     	;# 
   795  0493                     	;# 
   796  0494                     	;# 
   797  0495                     	;# 
   798  0495                     	;# 
   799  0496                     	;# 
   800  0497                     	;# 
   801  0498                     	;# 
   802  0499                     	;# 
   803  049A                     	;# 
   804  049B                     	;# 
   805  049C                     	;# 
   806  049D                     	;# 
   807  050C                     	;# 
   808  050C                     	;# 
   809  050D                     	;# 
   810  050E                     	;# 
   811  050F                     	;# 
   812  050F                     	;# 
   813  0510                     	;# 
   814  0511                     	;# 
   815  0512                     	;# 
   816  0512                     	;# 
   817  0513                     	;# 
   818  0514                     	;# 
   819  0515                     	;# 
   820  0515                     	;# 
   821  0516                     	;# 
   822  0517                     	;# 
   823  0518                     	;# 
   824  0519                     	;# 
   825  051A                     	;# 
   826  051B                     	;# 
   827  051C                     	;# 
   828  051D                     	;# 
   829  058C                     	;# 
   830  058C                     	;# 
   831  058D                     	;# 
   832  058E                     	;# 
   833  058F                     	;# 
   834  058F                     	;# 
   835  0590                     	;# 
   836  0591                     	;# 
   837  0592                     	;# 
   838  0593                     	;# 
   839  060C                     	;# 
   840  060D                     	;# 
   841  060E                     	;# 
   842  060F                     	;# 
   843  0610                     	;# 
   844  0611                     	;# 
   845  0612                     	;# 
   846  0613                     	;# 
   847  0614                     	;# 
   848  0616                     	;# 
   849  0617                     	;# 
   850  0618                     	;# 
   851  0619                     	;# 
   852  061A                     	;# 
   853  061B                     	;# 
   854  061C                     	;# 
   855  061D                     	;# 
   856  061E                     	;# 
   857  068C                     	;# 
   858  068D                     	;# 
   859  068E                     	;# 
   860  068F                     	;# 
   861  0690                     	;# 
   862  0691                     	;# 
   863  0692                     	;# 
   864  0693                     	;# 
   865  0694                     	;# 
   866  070C                     	;# 
   867  070D                     	;# 
   868  070E                     	;# 
   869  070F                     	;# 
   870  0710                     	;# 
   871  0711                     	;# 
   872  0712                     	;# 
   873  0713                     	;# 
   874  0714                     	;# 
   875  0716                     	;# 
   876  0717                     	;# 
   877  0718                     	;# 
   878  0719                     	;# 
   879  071A                     	;# 
   880  071B                     	;# 
   881  071C                     	;# 
   882  071D                     	;# 
   883  071E                     	;# 
   884  0796                     	;# 
   885  0797                     	;# 
   886  0798                     	;# 
   887  0799                     	;# 
   888  079A                     	;# 
   889  079B                     	;# 
   890  080C                     	;# 
   891  080D                     	;# 
   892  080E                     	;# 
   893  080F                     	;# 
   894  0810                     	;# 
   895  0811                     	;# 
   896  0812                     	;# 
   897  0813                     	;# 
   898  0814                     	;# 
   899  081A                     	;# 
   900  081B                     	;# 
   901  081C                     	;# 
   902  081D                     	;# 
   903  081E                     	;# 
   904  081F                     	;# 
   905  088C                     	;# 
   906  088D                     	;# 
   907  088E                     	;# 
   908  088F                     	;# 
   909  0890                     	;# 
   910  0891                     	;# 
   911  0892                     	;# 
   912  0893                     	;# 
   913  0895                     	;# 
   914  0896                     	;# 
   915  0897                     	;# 
   916  0898                     	;# 
   917  0899                     	;# 
   918  089A                     	;# 
   919  089B                     	;# 
   920  090C                     	;# 
   921  090E                     	;# 
   922  090F                     	;# 
   923  091F                     	;# 
   924  091F                     	;# 
   925  098F                     	;# 
   926  098F                     	;# 
   927  0990                     	;# 
   928  0991                     	;# 
   929  0992                     	;# 
   930  0993                     	;# 
   931  0994                     	;# 
   932  0995                     	;# 
   933  0996                     	;# 
   934  0997                     	;# 
   935  0E0F                     	;# 
   936  0E10                     	;# 
   937  0E11                     	;# 
   938  0E12                     	;# 
   939  0E13                     	;# 
   940  0E14                     	;# 
   941  0E15                     	;# 
   942  0E16                     	;# 
   943  0E17                     	;# 
   944  0E18                     	;# 
   945  0E19                     	;# 
   946  0E1A                     	;# 
   947  0E1B                     	;# 
   948  0E1C                     	;# 
   949  0E1D                     	;# 
   950  0E1E                     	;# 
   951  0E1F                     	;# 
   952  0E20                     	;# 
   953  0E21                     	;# 
   954  0E22                     	;# 
   955  0E23                     	;# 
   956  0E24                     	;# 
   957  0E25                     	;# 
   958  0E26                     	;# 
   959  0E27                     	;# 
   960  0E28                     	;# 
   961  0E29                     	;# 
   962  0E2A                     	;# 
   963  0E2B                     	;# 
   964  0E2C                     	;# 
   965  0E2D                     	;# 
   966  0E2E                     	;# 
   967  0E2F                     	;# 
   968  0E30                     	;# 
   969  0E31                     	;# 
   970  0E32                     	;# 
   971  0E33                     	;# 
   972  0E34                     	;# 
   973  0E35                     	;# 
   974  0E36                     	;# 
   975  0E37                     	;# 
   976  0E8F                     	;# 
   977  0E90                     	;# 
   978  0E91                     	;# 
   979  0E92                     	;# 
   980  0E93                     	;# 
   981  0E94                     	;# 
   982  0E95                     	;# 
   983  0E96                     	;# 
   984  0E97                     	;# 
   985  0E9C                     	;# 
   986  0E9D                     	;# 
   987  0E9E                     	;# 
   988  0EA1                     	;# 
   989  0EA2                     	;# 
   990  0EA3                     	;# 
   991  0EA4                     	;# 
   992  0EA5                     	;# 
   993  0EA9                     	;# 
   994  0EAA                     	;# 
   995  0EAB                     	;# 
   996  0EAC                     	;# 
   997  0EB1                     	;# 
   998  0EB2                     	;# 
   999  0EB3                     	;# 
  1000  0EB8                     	;# 
  1001  0EB9                     	;# 
  1002  0EBA                     	;# 
  1003  0EBB                     	;# 
  1004  0EBC                     	;# 
  1005  0EBD                     	;# 
  1006  0EBE                     	;# 
  1007  0EC3                     	;# 
  1008  0EC5                     	;# 
  1009  0EC6                     	;# 
  1010  0EC7                     	;# 
  1011  0EC8                     	;# 
  1012  0EC9                     	;# 
  1013  0ECA                     	;# 
  1014  0ECB                     	;# 
  1015  0ECC                     	;# 
  1016  0F10                     	;# 
  1017  0F11                     	;# 
  1018  0F12                     	;# 
  1019  0F13                     	;# 
  1020  0F14                     	;# 
  1021  0F15                     	;# 
  1022  0F16                     	;# 
  1023  0F17                     	;# 
  1024  0F18                     	;# 
  1025  0F19                     	;# 
  1026  0F1A                     	;# 
  1027  0F1B                     	;# 
  1028  0F1C                     	;# 
  1029  0F1D                     	;# 
  1030  0F1E                     	;# 
  1031  0F1F                     	;# 
  1032  0F20                     	;# 
  1033  0F21                     	;# 
  1034  0F22                     	;# 
  1035  0F23                     	;# 
  1036  0F24                     	;# 
  1037  0F25                     	;# 
  1038  0F26                     	;# 
  1039  0F27                     	;# 
  1040  0F38                     	;# 
  1041  0F39                     	;# 
  1042  0F3A                     	;# 
  1043  0F3B                     	;# 
  1044  0F3C                     	;# 
  1045  0F3D                     	;# 
  1046  0F3E                     	;# 
  1047  0F3F                     	;# 
  1048  0F40                     	;# 
  1049  0F41                     	;# 
  1050  0F43                     	;# 
  1051  0F44                     	;# 
  1052  0F45                     	;# 
  1053  0F46                     	;# 
  1054  0F47                     	;# 
  1055  0F48                     	;# 
  1056  0F49                     	;# 
  1057  0F4A                     	;# 
  1058  0F4B                     	;# 
  1059  0F4C                     	;# 
  1060  0F4E                     	;# 
  1061  0F4F                     	;# 
  1062  0F50                     	;# 
  1063  0F51                     	;# 
  1064  0F52                     	;# 
  1065  0F53                     	;# 
  1066  0F54                     	;# 
  1067  0F55                     	;# 
  1068  0F56                     	;# 
  1069  0F57                     	;# 
  1070  0F65                     	;# 
  1071  0F68                     	;# 
  1072  0F69                     	;# 
  1073  0F6A                     	;# 
  1074  0F6B                     	;# 
  1075  0FE4                     	;# 
  1076  0FE5                     	;# 
  1077  0FE6                     	;# 
  1078  0FE7                     	;# 
  1079  0FE8                     	;# 
  1080  0FE9                     	;# 
  1081  0FEA                     	;# 
  1082  0FEB                     	;# 
  1083  0FED                     	;# 
  1084  0FEE                     	;# 
  1085  0FEF                     	;# 
  1086  0000                     	;# 
  1087  0001                     	;# 
  1088  0002                     	;# 
  1089  0003                     	;# 
  1090  0004                     	;# 
  1091  0005                     	;# 
  1092  0006                     	;# 
  1093  0007                     	;# 
  1094  0008                     	;# 
  1095  0009                     	;# 
  1096  000A                     	;# 
  1097  000B                     	;# 
  1098  000C                     	;# 
  1099  000D                     	;# 
  1100  000E                     	;# 
  1101  0010                     	;# 
  1102  0011                     	;# 
  1103  0012                     	;# 
  1104  0013                     	;# 
  1105  0016                     	;# 
  1106  0017                     	;# 
  1107  0018                     	;# 
  1108  001C                     	;# 
  1109  001C                     	;# 
  1110  001D                     	;# 
  1111  001D                     	;# 
  1112  001E                     	;# 
  1113  001F                     	;# 
  1114  008C                     	;# 
  1115  008C                     	;# 
  1116  008D                     	;# 
  1117  008E                     	;# 
  1118  008E                     	;# 
  1119  008F                     	;# 
  1120  0090                     	;# 
  1121  0090                     	;# 
  1122  0091                     	;# 
  1123  0093                     	;# 
  1124  0094                     	;# 
  1125  0095                     	;# 
  1126  0096                     	;# 
  1127  0097                     	;# 
  1128  0098                     	;# 
  1129  0099                     	;# 
  1130  009A                     	;# 
  1131  009B                     	;# 
  1132  009C                     	;# 
  1133  009D                     	;# 
  1134  009E                     	;# 
  1135  010C                     	;# 
  1136  010D                     	;# 
  1137  010E                     	;# 
  1138  010E                     	;# 
  1139  010F                     	;# 
  1140  0110                     	;# 
  1141  0110                     	;# 
  1142  0111                     	;# 
  1143  0112                     	;# 
  1144  0112                     	;# 
  1145  0113                     	;# 
  1146  0114                     	;# 
  1147  0114                     	;# 
  1148  0115                     	;# 
  1149  0116                     	;# 
  1150  0116                     	;# 
  1151  0117                     	;# 
  1152  0119                     	;# 
  1153  0119                     	;# 
  1154  0119                     	;# 
  1155  011A                     	;# 
  1156  011A                     	;# 
  1157  011A                     	;# 
  1158  011B                     	;# 
  1159  011B                     	;# 
  1160  011B                     	;# 
  1161  011B                     	;# 
  1162  011B                     	;# 
  1163  011C                     	;# 
  1164  011C                     	;# 
  1165  011C                     	;# 
  1166  011D                     	;# 
  1167  011D                     	;# 
  1168  011D                     	;# 
  1169  011E                     	;# 
  1170  011E                     	;# 
  1171  011E                     	;# 
  1172  011F                     	;# 
  1173  011F                     	;# 
  1174  011F                     	;# 
  1175  011F                     	;# 
  1176  011F                     	;# 
  1177  018C                     	;# 
  1178  018D                     	;# 
  1179  018E                     	;# 
  1180  018F                     	;# 
  1181  0190                     	;# 
  1182  0191                     	;# 
  1183  0192                     	;# 
  1184  0196                     	;# 
  1185  0197                     	;# 
  1186  0198                     	;# 
  1187  0199                     	;# 
  1188  019A                     	;# 
  1189  019B                     	;# 
  1190  019C                     	;# 
  1191  020C                     	;# 
  1192  020D                     	;# 
  1193  020E                     	;# 
  1194  020F                     	;# 
  1195  020F                     	;# 
  1196  0210                     	;# 
  1197  0210                     	;# 
  1198  0211                     	;# 
  1199  0211                     	;# 
  1200  0212                     	;# 
  1201  0213                     	;# 
  1202  0214                     	;# 
  1203  0215                     	;# 
  1204  0215                     	;# 
  1205  0216                     	;# 
  1206  0216                     	;# 
  1207  0217                     	;# 
  1208  0217                     	;# 
  1209  0218                     	;# 
  1210  0219                     	;# 
  1211  021A                     	;# 
  1212  021B                     	;# 
  1213  021B                     	;# 
  1214  021C                     	;# 
  1215  021C                     	;# 
  1216  021D                     	;# 
  1217  021D                     	;# 
  1218  021E                     	;# 
  1219  021F                     	;# 
  1220  028C                     	;# 
  1221  028C                     	;# 
  1222  028D                     	;# 
  1223  028D                     	;# 
  1224  028E                     	;# 
  1225  028F                     	;# 
  1226  0290                     	;# 
  1227  0290                     	;# 
  1228  0291                     	;# 
  1229  0292                     	;# 
  1230  0292                     	;# 
  1231  0293                     	;# 
  1232  0293                     	;# 
  1233  0294                     	;# 
  1234  0295                     	;# 
  1235  0296                     	;# 
  1236  0296                     	;# 
  1237  0297                     	;# 
  1238  0298                     	;# 
  1239  0298                     	;# 
  1240  0299                     	;# 
  1241  0299                     	;# 
  1242  029A                     	;# 
  1243  029B                     	;# 
  1244  029C                     	;# 
  1245  029C                     	;# 
  1246  029D                     	;# 
  1247  030C                     	;# 
  1248  030C                     	;# 
  1249  030D                     	;# 
  1250  030E                     	;# 
  1251  030F                     	;# 
  1252  0310                     	;# 
  1253  0310                     	;# 
  1254  0311                     	;# 
  1255  0312                     	;# 
  1256  0313                     	;# 
  1257  0314                     	;# 
  1258  0314                     	;# 
  1259  0315                     	;# 
  1260  0316                     	;# 
  1261  0317                     	;# 
  1262  0318                     	;# 
  1263  0318                     	;# 
  1264  0319                     	;# 
  1265  031A                     	;# 
  1266  031B                     	;# 
  1267  031C                     	;# 
  1268  031C                     	;# 
  1269  031D                     	;# 
  1270  031E                     	;# 
  1271  031F                     	;# 
  1272  038C                     	;# 
  1273  038D                     	;# 
  1274  038E                     	;# 
  1275  0390                     	;# 
  1276  0391                     	;# 
  1277  0392                     	;# 
  1278  040C                     	;# 
  1279  040D                     	;# 
  1280  040E                     	;# 
  1281  040F                     	;# 
  1282  0410                     	;# 
  1283  0411                     	;# 
  1284  0416                     	;# 
  1285  0416                     	;# 
  1286  0417                     	;# 
  1287  0418                     	;# 
  1288  0418                     	;# 
  1289  0419                     	;# 
  1290  041A                     	;# 
  1291  041A                     	;# 
  1292  041B                     	;# 
  1293  041C                     	;# 
  1294  041C                     	;# 
  1295  041D                     	;# 
  1296  041E                     	;# 
  1297  041F                     	;# 
  1298  048C                     	;# 
  1299  048C                     	;# 
  1300  048D                     	;# 
  1301  048E                     	;# 
  1302  048F                     	;# 
  1303  048F                     	;# 
  1304  0490                     	;# 
  1305  0491                     	;# 
  1306  0492                     	;# 
  1307  0492                     	;# 
  1308  0493                     	;# 
  1309  0494                     	;# 
  1310  0495                     	;# 
  1311  0495                     	;# 
  1312  0496                     	;# 
  1313  0497                     	;# 
  1314  0498                     	;# 
  1315  0499                     	;# 
  1316  049A                     	;# 
  1317  049B                     	;# 
  1318  049C                     	;# 
  1319  049D                     	;# 
  1320  050C                     	;# 
  1321  050C                     	;# 
  1322  050D                     	;# 
  1323  050E                     	;# 
  1324  050F                     	;# 
  1325  050F                     	;# 
  1326  0510                     	;# 
  1327  0511                     	;# 
  1328  0512                     	;# 
  1329  0512                     	;# 
  1330  0513                     	;# 
  1331  0514                     	;# 
  1332  0515                     	;# 
  1333  0515                     	;# 
  1334  0516                     	;# 
  1335  0517                     	;# 
  1336  0518                     	;# 
  1337  0519                     	;# 
  1338  051A                     	;# 
  1339  051B                     	;# 
  1340  051C                     	;# 
  1341  051D                     	;# 
  1342  058C                     	;# 
  1343  058C                     	;# 
  1344  058D                     	;# 
  1345  058E                     	;# 
  1346  058F                     	;# 
  1347  058F                     	;# 
  1348  0590                     	;# 
  1349  0591                     	;# 
  1350  0592                     	;# 
  1351  0593                     	;# 
  1352  060C                     	;# 
  1353  060D                     	;# 
  1354  060E                     	;# 
  1355  060F                     	;# 
  1356  0610                     	;# 
  1357  0611                     	;# 
  1358  0612                     	;# 
  1359  0613                     	;# 
  1360  0614                     	;# 
  1361  0616                     	;# 
  1362  0617                     	;# 
  1363  0618                     	;# 
  1364  0619                     	;# 
  1365  061A                     	;# 
  1366  061B                     	;# 
  1367  061C                     	;# 
  1368  061D                     	;# 
  1369  061E                     	;# 
  1370  068C                     	;# 
  1371  068D                     	;# 
  1372  068E                     	;# 
  1373  068F                     	;# 
  1374  0690                     	;# 
  1375  0691                     	;# 
  1376  0692                     	;# 
  1377  0693                     	;# 
  1378  0694                     	;# 
  1379  070C                     	;# 
  1380  070D                     	;# 
  1381  070E                     	;# 
  1382  070F                     	;# 
  1383  0710                     	;# 
  1384  0711                     	;# 
  1385  0712                     	;# 
  1386  0713                     	;# 
  1387  0714                     	;# 
  1388  0716                     	;# 
  1389  0717                     	;# 
  1390  0718                     	;# 
  1391  0719                     	;# 
  1392  071A                     	;# 
  1393  071B                     	;# 
  1394  071C                     	;# 
  1395  071D                     	;# 
  1396  071E                     	;# 
  1397  0796                     	;# 
  1398  0797                     	;# 
  1399  0798                     	;# 
  1400  0799                     	;# 
  1401  079A                     	;# 
  1402  079B                     	;# 
  1403  080C                     	;# 
  1404  080D                     	;# 
  1405  080E                     	;# 
  1406  080F                     	;# 
  1407  0810                     	;# 
  1408  0811                     	;# 
  1409  0812                     	;# 
  1410  0813                     	;# 
  1411  0814                     	;# 
  1412  081A                     	;# 
  1413  081B                     	;# 
  1414  081C                     	;# 
  1415  081D                     	;# 
  1416  081E                     	;# 
  1417  081F                     	;# 
  1418  088C                     	;# 
  1419  088D                     	;# 
  1420  088E                     	;# 
  1421  088F                     	;# 
  1422  0890                     	;# 
  1423  0891                     	;# 
  1424  0892                     	;# 
  1425  0893                     	;# 
  1426  0895                     	;# 
  1427  0896                     	;# 
  1428  0897                     	;# 
  1429  0898                     	;# 
  1430  0899                     	;# 
  1431  089A                     	;# 
  1432  089B                     	;# 
  1433  090C                     	;# 
  1434  090E                     	;# 
  1435  090F                     	;# 
  1436  091F                     	;# 
  1437  091F                     	;# 
  1438  098F                     	;# 
  1439  098F                     	;# 
  1440  0990                     	;# 
  1441  0991                     	;# 
  1442  0992                     	;# 
  1443  0993                     	;# 
  1444  0994                     	;# 
  1445  0995                     	;# 
  1446  0996                     	;# 
  1447  0997                     	;# 
  1448  0E0F                     	;# 
  1449  0E10                     	;# 
  1450  0E11                     	;# 
  1451  0E12                     	;# 
  1452  0E13                     	;# 
  1453  0E14                     	;# 
  1454  0E15                     	;# 
  1455  0E16                     	;# 
  1456  0E17                     	;# 
  1457  0E18                     	;# 
  1458  0E19                     	;# 
  1459  0E1A                     	;# 
  1460  0E1B                     	;# 
  1461  0E1C                     	;# 
  1462  0E1D                     	;# 
  1463  0E1E                     	;# 
  1464  0E1F                     	;# 
  1465  0E20                     	;# 
  1466  0E21                     	;# 
  1467  0E22                     	;# 
  1468  0E23                     	;# 
  1469  0E24                     	;# 
  1470  0E25                     	;# 
  1471  0E26                     	;# 
  1472  0E27                     	;# 
  1473  0E28                     	;# 
  1474  0E29                     	;# 
  1475  0E2A                     	;# 
  1476  0E2B                     	;# 
  1477  0E2C                     	;# 
  1478  0E2D                     	;# 
  1479  0E2E                     	;# 
  1480  0E2F                     	;# 
  1481  0E30                     	;# 
  1482  0E31                     	;# 
  1483  0E32                     	;# 
  1484  0E33                     	;# 
  1485  0E34                     	;# 
  1486  0E35                     	;# 
  1487  0E36                     	;# 
  1488  0E37                     	;# 
  1489  0E8F                     	;# 
  1490  0E90                     	;# 
  1491  0E91                     	;# 
  1492  0E92                     	;# 
  1493  0E93                     	;# 
  1494  0E94                     	;# 
  1495  0E95                     	;# 
  1496  0E96                     	;# 
  1497  0E97                     	;# 
  1498  0E9C                     	;# 
  1499  0E9D                     	;# 
  1500  0E9E                     	;# 
  1501  0EA1                     	;# 
  1502  0EA2                     	;# 
  1503  0EA3                     	;# 
  1504  0EA4                     	;# 
  1505  0EA5                     	;# 
  1506  0EA9                     	;# 
  1507  0EAA                     	;# 
  1508  0EAB                     	;# 
  1509  0EAC                     	;# 
  1510  0EB1                     	;# 
  1511  0EB2                     	;# 
  1512  0EB3                     	;# 
  1513  0EB8                     	;# 
  1514  0EB9                     	;# 
  1515  0EBA                     	;# 
  1516  0EBB                     	;# 
  1517  0EBC                     	;# 
  1518  0EBD                     	;# 
  1519  0EBE                     	;# 
  1520  0EC3                     	;# 
  1521  0EC5                     	;# 
  1522  0EC6                     	;# 
  1523  0EC7                     	;# 
  1524  0EC8                     	;# 
  1525  0EC9                     	;# 
  1526  0ECA                     	;# 
  1527  0ECB                     	;# 
  1528  0ECC                     	;# 
  1529  0F10                     	;# 
  1530  0F11                     	;# 
  1531  0F12                     	;# 
  1532  0F13                     	;# 
  1533  0F14                     	;# 
  1534  0F15                     	;# 
  1535  0F16                     	;# 
  1536  0F17                     	;# 
  1537  0F18                     	;# 
  1538  0F19                     	;# 
  1539  0F1A                     	;# 
  1540  0F1B                     	;# 
  1541  0F1C                     	;# 
  1542  0F1D                     	;# 
  1543  0F1E                     	;# 
  1544  0F1F                     	;# 
  1545  0F20                     	;# 
  1546  0F21                     	;# 
  1547  0F22                     	;# 
  1548  0F23                     	;# 
  1549  0F24                     	;# 
  1550  0F25                     	;# 
  1551  0F26                     	;# 
  1552  0F27                     	;# 
  1553  0F38                     	;# 
  1554  0F39                     	;# 
  1555  0F3A                     	;# 
  1556  0F3B                     	;# 
  1557  0F3C                     	;# 
  1558  0F3D                     	;# 
  1559  0F3E                     	;# 
  1560  0F3F                     	;# 
  1561  0F40                     	;# 
  1562  0F41                     	;# 
  1563  0F43                     	;# 
  1564  0F44                     	;# 
  1565  0F45                     	;# 
  1566  0F46                     	;# 
  1567  0F47                     	;# 
  1568  0F48                     	;# 
  1569  0F49                     	;# 
  1570  0F4A                     	;# 
  1571  0F4B                     	;# 
  1572  0F4C                     	;# 
  1573  0F4E                     	;# 
  1574  0F4F                     	;# 
  1575  0F50                     	;# 
  1576  0F51                     	;# 
  1577  0F52                     	;# 
  1578  0F53                     	;# 
  1579  0F54                     	;# 
  1580  0F55                     	;# 
  1581  0F56                     	;# 
  1582  0F57                     	;# 
  1583  0F65                     	;# 
  1584  0F68                     	;# 
  1585  0F69                     	;# 
  1586  0F6A                     	;# 
  1587  0F6B                     	;# 
  1588  0FE4                     	;# 
  1589  0FE5                     	;# 
  1590  0FE6                     	;# 
  1591  0FE7                     	;# 
  1592  0FE8                     	;# 
  1593  0FE9                     	;# 
  1594  0FEA                     	;# 
  1595  0FEB                     	;# 
  1596  0FED                     	;# 
  1597  0FEE                     	;# 
  1598  0FEF                     	;# 
  1599  0000                     	;# 
  1600  0001                     	;# 
  1601  0002                     	;# 
  1602  0003                     	;# 
  1603  0004                     	;# 
  1604  0005                     	;# 
  1605  0006                     	;# 
  1606  0007                     	;# 
  1607  0008                     	;# 
  1608  0009                     	;# 
  1609  000A                     	;# 
  1610  000B                     	;# 
  1611  000C                     	;# 
  1612  000D                     	;# 
  1613  000E                     	;# 
  1614  0010                     	;# 
  1615  0011                     	;# 
  1616  0012                     	;# 
  1617  0013                     	;# 
  1618  0016                     	;# 
  1619  0017                     	;# 
  1620  0018                     	;# 
  1621  001C                     	;# 
  1622  001C                     	;# 
  1623  001D                     	;# 
  1624  001D                     	;# 
  1625  001E                     	;# 
  1626  001F                     	;# 
  1627  008C                     	;# 
  1628  008C                     	;# 
  1629  008D                     	;# 
  1630  008E                     	;# 
  1631  008E                     	;# 
  1632  008F                     	;# 
  1633  0090                     	;# 
  1634  0090                     	;# 
  1635  0091                     	;# 
  1636  0093                     	;# 
  1637  0094                     	;# 
  1638  0095                     	;# 
  1639  0096                     	;# 
  1640  0097                     	;# 
  1641  0098                     	;# 
  1642  0099                     	;# 
  1643  009A                     	;# 
  1644  009B                     	;# 
  1645  009C                     	;# 
  1646  009D                     	;# 
  1647  009E                     	;# 
  1648  010C                     	;# 
  1649  010D                     	;# 
  1650  010E                     	;# 
  1651  010E                     	;# 
  1652  010F                     	;# 
  1653  0110                     	;# 
  1654  0110                     	;# 
  1655  0111                     	;# 
  1656  0112                     	;# 
  1657  0112                     	;# 
  1658  0113                     	;# 
  1659  0114                     	;# 
  1660  0114                     	;# 
  1661  0115                     	;# 
  1662  0116                     	;# 
  1663  0116                     	;# 
  1664  0117                     	;# 
  1665  0119                     	;# 
  1666  0119                     	;# 
  1667  0119                     	;# 
  1668  011A                     	;# 
  1669  011A                     	;# 
  1670  011A                     	;# 
  1671  011B                     	;# 
  1672  011B                     	;# 
  1673  011B                     	;# 
  1674  011B                     	;# 
  1675  011B                     	;# 
  1676  011C                     	;# 
  1677  011C                     	;# 
  1678  011C                     	;# 
  1679  011D                     	;# 
  1680  011D                     	;# 
  1681  011D                     	;# 
  1682  011E                     	;# 
  1683  011E                     	;# 
  1684  011E                     	;# 
  1685  011F                     	;# 
  1686  011F                     	;# 
  1687  011F                     	;# 
  1688  011F                     	;# 
  1689  011F                     	;# 
  1690  018C                     	;# 
  1691  018D                     	;# 
  1692  018E                     	;# 
  1693  018F                     	;# 
  1694  0190                     	;# 
  1695  0191                     	;# 
  1696  0192                     	;# 
  1697  0196                     	;# 
  1698  0197                     	;# 
  1699  0198                     	;# 
  1700  0199                     	;# 
  1701  019A                     	;# 
  1702  019B                     	;# 
  1703  019C                     	;# 
  1704  020C                     	;# 
  1705  020D                     	;# 
  1706  020E                     	;# 
  1707  020F                     	;# 
  1708  020F                     	;# 
  1709  0210                     	;# 
  1710  0210                     	;# 
  1711  0211                     	;# 
  1712  0211                     	;# 
  1713  0212                     	;# 
  1714  0213                     	;# 
  1715  0214                     	;# 
  1716  0215                     	;# 
  1717  0215                     	;# 
  1718  0216                     	;# 
  1719  0216                     	;# 
  1720  0217                     	;# 
  1721  0217                     	;# 
  1722  0218                     	;# 
  1723  0219                     	;# 
  1724  021A                     	;# 
  1725  021B                     	;# 
  1726  021B                     	;# 
  1727  021C                     	;# 
  1728  021C                     	;# 
  1729  021D                     	;# 
  1730  021D                     	;# 
  1731  021E                     	;# 
  1732  021F                     	;# 
  1733  028C                     	;# 
  1734  028C                     	;# 
  1735  028D                     	;# 
  1736  028D                     	;# 
  1737  028E                     	;# 
  1738  028F                     	;# 
  1739  0290                     	;# 
  1740  0290                     	;# 
  1741  0291                     	;# 
  1742  0292                     	;# 
  1743  0292                     	;# 
  1744  0293                     	;# 
  1745  0293                     	;# 
  1746  0294                     	;# 
  1747  0295                     	;# 
  1748  0296                     	;# 
  1749  0296                     	;# 
  1750  0297                     	;# 
  1751  0298                     	;# 
  1752  0298                     	;# 
  1753  0299                     	;# 
  1754  0299                     	;# 
  1755  029A                     	;# 
  1756  029B                     	;# 
  1757  029C                     	;# 
  1758  029C                     	;# 
  1759  029D                     	;# 
  1760  030C                     	;# 
  1761  030C                     	;# 
  1762  030D                     	;# 
  1763  030E                     	;# 
  1764  030F                     	;# 
  1765  0310                     	;# 
  1766  0310                     	;# 
  1767  0311                     	;# 
  1768  0312                     	;# 
  1769  0313                     	;# 
  1770  0314                     	;# 
  1771  0314                     	;# 
  1772  0315                     	;# 
  1773  0316                     	;# 
  1774  0317                     	;# 
  1775  0318                     	;# 
  1776  0318                     	;# 
  1777  0319                     	;# 
  1778  031A                     	;# 
  1779  031B                     	;# 
  1780  031C                     	;# 
  1781  031C                     	;# 
  1782  031D                     	;# 
  1783  031E                     	;# 
  1784  031F                     	;# 
  1785  038C                     	;# 
  1786  038D                     	;# 
  1787  038E                     	;# 
  1788  0390                     	;# 
  1789  0391                     	;# 
  1790  0392                     	;# 
  1791  040C                     	;# 
  1792  040D                     	;# 
  1793  040E                     	;# 
  1794  040F                     	;# 
  1795  0410                     	;# 
  1796  0411                     	;# 
  1797  0416                     	;# 
  1798  0416                     	;# 
  1799  0417                     	;# 
  1800  0418                     	;# 
  1801  0418                     	;# 
  1802  0419                     	;# 
  1803  041A                     	;# 
  1804  041A                     	;# 
  1805  041B                     	;# 
  1806  041C                     	;# 
  1807  041C                     	;# 
  1808  041D                     	;# 
  1809  041E                     	;# 
  1810  041F                     	;# 
  1811  048C                     	;# 
  1812  048C                     	;# 
  1813  048D                     	;# 
  1814  048E                     	;# 
  1815  048F                     	;# 
  1816  048F                     	;# 
  1817  0490                     	;# 
  1818  0491                     	;# 
  1819  0492                     	;# 
  1820  0492                     	;# 
  1821  0493                     	;# 
  1822  0494                     	;# 
  1823  0495                     	;# 
  1824  0495                     	;# 
  1825  0496                     	;# 
  1826  0497                     	;# 
  1827  0498                     	;# 
  1828  0499                     	;# 
  1829  049A                     	;# 
  1830  049B                     	;# 
  1831  049C                     	;# 
  1832  049D                     	;# 
  1833  050C                     	;# 
  1834  050C                     	;# 
  1835  050D                     	;# 
  1836  050E                     	;# 
  1837  050F                     	;# 
  1838  050F                     	;# 
  1839  0510                     	;# 
  1840  0511                     	;# 
  1841  0512                     	;# 
  1842  0512                     	;# 
  1843  0513                     	;# 
  1844  0514                     	;# 
  1845  0515                     	;# 
  1846  0515                     	;# 
  1847  0516                     	;# 
  1848  0517                     	;# 
  1849  0518                     	;# 
  1850  0519                     	;# 
  1851  051A                     	;# 
  1852  051B                     	;# 
  1853  051C                     	;# 
  1854  051D                     	;# 
  1855  058C                     	;# 
  1856  058C                     	;# 
  1857  058D                     	;# 
  1858  058E                     	;# 
  1859  058F                     	;# 
  1860  058F                     	;# 
  1861  0590                     	;# 
  1862  0591                     	;# 
  1863  0592                     	;# 
  1864  0593                     	;# 
  1865  060C                     	;# 
  1866  060D                     	;# 
  1867  060E                     	;# 
  1868  060F                     	;# 
  1869  0610                     	;# 
  1870  0611                     	;# 
  1871  0612                     	;# 
  1872  0613                     	;# 
  1873  0614                     	;# 
  1874  0616                     	;# 
  1875  0617                     	;# 
  1876  0618                     	;# 
  1877  0619                     	;# 
  1878  061A                     	;# 
  1879  061B                     	;# 
  1880  061C                     	;# 
  1881  061D                     	;# 
  1882  061E                     	;# 
  1883  068C                     	;# 
  1884  068D                     	;# 
  1885  068E                     	;# 
  1886  068F                     	;# 
  1887  0690                     	;# 
  1888  0691                     	;# 
  1889  0692                     	;# 
  1890  0693                     	;# 
  1891  0694                     	;# 
  1892  070C                     	;# 
  1893  070D                     	;# 
  1894  070E                     	;# 
  1895  070F                     	;# 
  1896  0710                     	;# 
  1897  0711                     	;# 
  1898  0712                     	;# 
  1899  0713                     	;# 
  1900  0714                     	;# 
  1901  0716                     	;# 
  1902  0717                     	;# 
  1903  0718                     	;# 
  1904  0719                     	;# 
  1905  071A                     	;# 
  1906  071B                     	;# 
  1907  071C                     	;# 
  1908  071D                     	;# 
  1909  071E                     	;# 
  1910  0796                     	;# 
  1911  0797                     	;# 
  1912  0798                     	;# 
  1913  0799                     	;# 
  1914  079A                     	;# 
  1915  079B                     	;# 
  1916  080C                     	;# 
  1917  080D                     	;# 
  1918  080E                     	;# 
  1919  080F                     	;# 
  1920  0810                     	;# 
  1921  0811                     	;# 
  1922  0812                     	;# 
  1923  0813                     	;# 
  1924  0814                     	;# 
  1925  081A                     	;# 
  1926  081B                     	;# 
  1927  081C                     	;# 
  1928  081D                     	;# 
  1929  081E                     	;# 
  1930  081F                     	;# 
  1931  088C                     	;# 
  1932  088D                     	;# 
  1933  088E                     	;# 
  1934  088F                     	;# 
  1935  0890                     	;# 
  1936  0891                     	;# 
  1937  0892                     	;# 
  1938  0893                     	;# 
  1939  0895                     	;# 
  1940  0896                     	;# 
  1941  0897                     	;# 
  1942  0898                     	;# 
  1943  0899                     	;# 
  1944  089A                     	;# 
  1945  089B                     	;# 
  1946  090C                     	;# 
  1947  090E                     	;# 
  1948  090F                     	;# 
  1949  091F                     	;# 
  1950  091F                     	;# 
  1951  098F                     	;# 
  1952  098F                     	;# 
  1953  0990                     	;# 
  1954  0991                     	;# 
  1955  0992                     	;# 
  1956  0993                     	;# 
  1957  0994                     	;# 
  1958  0995                     	;# 
  1959  0996                     	;# 
  1960  0997                     	;# 
  1961  0E0F                     	;# 
  1962  0E10                     	;# 
  1963  0E11                     	;# 
  1964  0E12                     	;# 
  1965  0E13                     	;# 
  1966  0E14                     	;# 
  1967  0E15                     	;# 
  1968  0E16                     	;# 
  1969  0E17                     	;# 
  1970  0E18                     	;# 
  1971  0E19                     	;# 
  1972  0E1A                     	;# 
  1973  0E1B                     	;# 
  1974  0E1C                     	;# 
  1975  0E1D                     	;# 
  1976  0E1E                     	;# 
  1977  0E1F                     	;# 
  1978  0E20                     	;# 
  1979  0E21                     	;# 
  1980  0E22                     	;# 
  1981  0E23                     	;# 
  1982  0E24                     	;# 
  1983  0E25                     	;# 
  1984  0E26                     	;# 
  1985  0E27                     	;# 
  1986  0E28                     	;# 
  1987  0E29                     	;# 
  1988  0E2A                     	;# 
  1989  0E2B                     	;# 
  1990  0E2C                     	;# 
  1991  0E2D                     	;# 
  1992  0E2E                     	;# 
  1993  0E2F                     	;# 
  1994  0E30                     	;# 
  1995  0E31                     	;# 
  1996  0E32                     	;# 
  1997  0E33                     	;# 
  1998  0E34                     	;# 
  1999  0E35                     	;# 
  2000  0E36                     	;# 
  2001  0E37                     	;# 
  2002  0E8F                     	;# 
  2003  0E90                     	;# 
  2004  0E91                     	;# 
  2005  0E92                     	;# 
  2006  0E93                     	;# 
  2007  0E94                     	;# 
  2008  0E95                     	;# 
  2009  0E96                     	;# 
  2010  0E97                     	;# 
  2011  0E9C                     	;# 
  2012  0E9D                     	;# 
  2013  0E9E                     	;# 
  2014  0EA1                     	;# 
  2015  0EA2                     	;# 
  2016  0EA3                     	;# 
  2017  0EA4                     	;# 
  2018  0EA5                     	;# 
  2019  0EA9                     	;# 
  2020  0EAA                     	;# 
  2021  0EAB                     	;# 
  2022  0EAC                     	;# 
  2023  0EB1                     	;# 
  2024  0EB2                     	;# 
  2025  0EB3                     	;# 
  2026  0EB8                     	;# 
  2027  0EB9                     	;# 
  2028  0EBA                     	;# 
  2029  0EBB                     	;# 
  2030  0EBC                     	;# 
  2031  0EBD                     	;# 
  2032  0EBE                     	;# 
  2033  0EC3                     	;# 
  2034  0EC5                     	;# 
  2035  0EC6                     	;# 
  2036  0EC7                     	;# 
  2037  0EC8                     	;# 
  2038  0EC9                     	;# 
  2039  0ECA                     	;# 
  2040  0ECB                     	;# 
  2041  0ECC                     	;# 
  2042  0F10                     	;# 
  2043  0F11                     	;# 
  2044  0F12                     	;# 
  2045  0F13                     	;# 
  2046  0F14                     	;# 
  2047  0F15                     	;# 
  2048  0F16                     	;# 
  2049  0F17                     	;# 
  2050  0F18                     	;# 
  2051  0F19                     	;# 
  2052  0F1A                     	;# 
  2053  0F1B                     	;# 
  2054  0F1C                     	;# 
  2055  0F1D                     	;# 
  2056  0F1E                     	;# 
  2057  0F1F                     	;# 
  2058  0F20                     	;# 
  2059  0F21                     	;# 
  2060  0F22                     	;# 
  2061  0F23                     	;# 
  2062  0F24                     	;# 
  2063  0F25                     	;# 
  2064  0F26                     	;# 
  2065  0F27                     	;# 
  2066  0F38                     	;# 
  2067  0F39                     	;# 
  2068  0F3A                     	;# 
  2069  0F3B                     	;# 
  2070  0F3C                     	;# 
  2071  0F3D                     	;# 
  2072  0F3E                     	;# 
  2073  0F3F                     	;# 
  2074  0F40                     	;# 
  2075  0F41                     	;# 
  2076  0F43                     	;# 
  2077  0F44                     	;# 
  2078  0F45                     	;# 
  2079  0F46                     	;# 
  2080  0F47                     	;# 
  2081  0F48                     	;# 
  2082  0F49                     	;# 
  2083  0F4A                     	;# 
  2084  0F4B                     	;# 
  2085  0F4C                     	;# 
  2086  0F4E                     	;# 
  2087  0F4F                     	;# 
  2088  0F50                     	;# 
  2089  0F51                     	;# 
  2090  0F52                     	;# 
  2091  0F53                     	;# 
  2092  0F54                     	;# 
  2093  0F55                     	;# 
  2094  0F56                     	;# 
  2095  0F57                     	;# 
  2096  0F65                     	;# 
  2097  0F68                     	;# 
  2098  0F69                     	;# 
  2099  0F6A                     	;# 
  2100  0F6B                     	;# 
  2101  0FE4                     	;# 
  2102  0FE5                     	;# 
  2103  0FE6                     	;# 
  2104  0FE7                     	;# 
  2105  0FE8                     	;# 
  2106  0FE9                     	;# 
  2107  0FEA                     	;# 
  2108  0FEB                     	;# 
  2109  0FED                     	;# 
  2110  0FEE                     	;# 
  2111  0FEF                     	;# 
  2112  0000                     	;# 
  2113  0001                     	;# 
  2114  0002                     	;# 
  2115  0003                     	;# 
  2116  0004                     	;# 
  2117  0005                     	;# 
  2118  0006                     	;# 
  2119  0007                     	;# 
  2120  0008                     	;# 
  2121  0009                     	;# 
  2122  000A                     	;# 
  2123  000B                     	;# 
  2124  000C                     	;# 
  2125  000D                     	;# 
  2126  000E                     	;# 
  2127  0010                     	;# 
  2128  0011                     	;# 
  2129  0012                     	;# 
  2130  0013                     	;# 
  2131  0016                     	;# 
  2132  0017                     	;# 
  2133  0018                     	;# 
  2134  001C                     	;# 
  2135  001C                     	;# 
  2136  001D                     	;# 
  2137  001D                     	;# 
  2138  001E                     	;# 
  2139  001F                     	;# 
  2140  008C                     	;# 
  2141  008C                     	;# 
  2142  008D                     	;# 
  2143  008E                     	;# 
  2144  008E                     	;# 
  2145  008F                     	;# 
  2146  0090                     	;# 
  2147  0090                     	;# 
  2148  0091                     	;# 
  2149  0093                     	;# 
  2150  0094                     	;# 
  2151  0095                     	;# 
  2152  0096                     	;# 
  2153  0097                     	;# 
  2154  0098                     	;# 
  2155  0099                     	;# 
  2156  009A                     	;# 
  2157  009B                     	;# 
  2158  009C                     	;# 
  2159  009D                     	;# 
  2160  009E                     	;# 
  2161  010C                     	;# 
  2162  010D                     	;# 
  2163  010E                     	;# 
  2164  010E                     	;# 
  2165  010F                     	;# 
  2166  0110                     	;# 
  2167  0110                     	;# 
  2168  0111                     	;# 
  2169  0112                     	;# 
  2170  0112                     	;# 
  2171  0113                     	;# 
  2172  0114                     	;# 
  2173  0114                     	;# 
  2174  0115                     	;# 
  2175  0116                     	;# 
  2176  0116                     	;# 
  2177  0117                     	;# 
  2178  0119                     	;# 
  2179  0119                     	;# 
  2180  0119                     	;# 
  2181  011A                     	;# 
  2182  011A                     	;# 
  2183  011A                     	;# 
  2184  011B                     	;# 
  2185  011B                     	;# 
  2186  011B                     	;# 
  2187  011B                     	;# 
  2188  011B                     	;# 
  2189  011C                     	;# 
  2190  011C                     	;# 
  2191  011C                     	;# 
  2192  011D                     	;# 
  2193  011D                     	;# 
  2194  011D                     	;# 
  2195  011E                     	;# 
  2196  011E                     	;# 
  2197  011E                     	;# 
  2198  011F                     	;# 
  2199  011F                     	;# 
  2200  011F                     	;# 
  2201  011F                     	;# 
  2202  011F                     	;# 
  2203  018C                     	;# 
  2204  018D                     	;# 
  2205  018E                     	;# 
  2206  018F                     	;# 
  2207  0190                     	;# 
  2208  0191                     	;# 
  2209  0192                     	;# 
  2210  0196                     	;# 
  2211  0197                     	;# 
  2212  0198                     	;# 
  2213  0199                     	;# 
  2214  019A                     	;# 
  2215  019B                     	;# 
  2216  019C                     	;# 
  2217  020C                     	;# 
  2218  020D                     	;# 
  2219  020E                     	;# 
  2220  020F                     	;# 
  2221  020F                     	;# 
  2222  0210                     	;# 
  2223  0210                     	;# 
  2224  0211                     	;# 
  2225  0211                     	;# 
  2226  0212                     	;# 
  2227  0213                     	;# 
  2228  0214                     	;# 
  2229  0215                     	;# 
  2230  0215                     	;# 
  2231  0216                     	;# 
  2232  0216                     	;# 
  2233  0217                     	;# 
  2234  0217                     	;# 
  2235  0218                     	;# 
  2236  0219                     	;# 
  2237  021A                     	;# 
  2238  021B                     	;# 
  2239  021B                     	;# 
  2240  021C                     	;# 
  2241  021C                     	;# 
  2242  021D                     	;# 
  2243  021D                     	;# 
  2244  021E                     	;# 
  2245  021F                     	;# 
  2246  028C                     	;# 
  2247  028C                     	;# 
  2248  028D                     	;# 
  2249  028D                     	;# 
  2250  028E                     	;# 
  2251  028F                     	;# 
  2252  0290                     	;# 
  2253  0290                     	;# 
  2254  0291                     	;# 
  2255  0292                     	;# 
  2256  0292                     	;# 
  2257  0293                     	;# 
  2258  0293                     	;# 
  2259  0294                     	;# 
  2260  0295                     	;# 
  2261  0296                     	;# 
  2262  0296                     	;# 
  2263  0297                     	;# 
  2264  0298                     	;# 
  2265  0298                     	;# 
  2266  0299                     	;# 
  2267  0299                     	;# 
  2268  029A                     	;# 
  2269  029B                     	;# 
  2270  029C                     	;# 
  2271  029C                     	;# 
  2272  029D                     	;# 
  2273  030C                     	;# 
  2274  030C                     	;# 
  2275  030D                     	;# 
  2276  030E                     	;# 
  2277  030F                     	;# 
  2278  0310                     	;# 
  2279  0310                     	;# 
  2280  0311                     	;# 
  2281  0312                     	;# 
  2282  0313                     	;# 
  2283  0314                     	;# 
  2284  0314                     	;# 
  2285  0315                     	;# 
  2286  0316                     	;# 
  2287  0317                     	;# 
  2288  0318                     	;# 
  2289  0318                     	;# 
  2290  0319                     	;# 
  2291  031A                     	;# 
  2292  031B                     	;# 
  2293  031C                     	;# 
  2294  031C                     	;# 
  2295  031D                     	;# 
  2296  031E                     	;# 
  2297  031F                     	;# 
  2298  038C                     	;# 
  2299  038D                     	;# 
  2300  038E                     	;# 
  2301  0390                     	;# 
  2302  0391                     	;# 
  2303  0392                     	;# 
  2304  040C                     	;# 
  2305  040D                     	;# 
  2306  040E                     	;# 
  2307  040F                     	;# 
  2308  0410                     	;# 
  2309  0411                     	;# 
  2310  0416                     	;# 
  2311  0416                     	;# 
  2312  0417                     	;# 
  2313  0418                     	;# 
  2314  0418                     	;# 
  2315  0419                     	;# 
  2316  041A                     	;# 
  2317  041A                     	;# 
  2318  041B                     	;# 
  2319  041C                     	;# 
  2320  041C                     	;# 
  2321  041D                     	;# 
  2322  041E                     	;# 
  2323  041F                     	;# 
  2324  048C                     	;# 
  2325  048C                     	;# 
  2326  048D                     	;# 
  2327  048E                     	;# 
  2328  048F                     	;# 
  2329  048F                     	;# 
  2330  0490                     	;# 
  2331  0491                     	;# 
  2332  0492                     	;# 
  2333  0492                     	;# 
  2334  0493                     	;# 
  2335  0494                     	;# 
  2336  0495                     	;# 
  2337  0495                     	;# 
  2338  0496                     	;# 
  2339  0497                     	;# 
  2340  0498                     	;# 
  2341  0499                     	;# 
  2342  049A                     	;# 
  2343  049B                     	;# 
  2344  049C                     	;# 
  2345  049D                     	;# 
  2346  050C                     	;# 
  2347  050C                     	;# 
  2348  050D                     	;# 
  2349  050E                     	;# 
  2350  050F                     	;# 
  2351  050F                     	;# 
  2352  0510                     	;# 
  2353  0511                     	;# 
  2354  0512                     	;# 
  2355  0512                     	;# 
  2356  0513                     	;# 
  2357  0514                     	;# 
  2358  0515                     	;# 
  2359  0515                     	;# 
  2360  0516                     	;# 
  2361  0517                     	;# 
  2362  0518                     	;# 
  2363  0519                     	;# 
  2364  051A                     	;# 
  2365  051B                     	;# 
  2366  051C                     	;# 
  2367  051D                     	;# 
  2368  058C                     	;# 
  2369  058C                     	;# 
  2370  058D                     	;# 
  2371  058E                     	;# 
  2372  058F                     	;# 
  2373  058F                     	;# 
  2374  0590                     	;# 
  2375  0591                     	;# 
  2376  0592                     	;# 
  2377  0593                     	;# 
  2378  060C                     	;# 
  2379  060D                     	;# 
  2380  060E                     	;# 
  2381  060F                     	;# 
  2382  0610                     	;# 
  2383  0611                     	;# 
  2384  0612                     	;# 
  2385  0613                     	;# 
  2386  0614                     	;# 
  2387  0616                     	;# 
  2388  0617                     	;# 
  2389  0618                     	;# 
  2390  0619                     	;# 
  2391  061A                     	;# 
  2392  061B                     	;# 
  2393  061C                     	;# 
  2394  061D                     	;# 
  2395  061E                     	;# 
  2396  068C                     	;# 
  2397  068D                     	;# 
  2398  068E                     	;# 
  2399  068F                     	;# 
  2400  0690                     	;# 
  2401  0691                     	;# 
  2402  0692                     	;# 
  2403  0693                     	;# 
  2404  0694                     	;# 
  2405  070C                     	;# 
  2406  070D                     	;# 
  2407  070E                     	;# 
  2408  070F                     	;# 
  2409  0710                     	;# 
  2410  0711                     	;# 
  2411  0712                     	;# 
  2412  0713                     	;# 
  2413  0714                     	;# 
  2414  0716                     	;# 
  2415  0717                     	;# 
  2416  0718                     	;# 
  2417  0719                     	;# 
  2418  071A                     	;# 
  2419  071B                     	;# 
  2420  071C                     	;# 
  2421  071D                     	;# 
  2422  071E                     	;# 
  2423  0796                     	;# 
  2424  0797                     	;# 
  2425  0798                     	;# 
  2426  0799                     	;# 
  2427  079A                     	;# 
  2428  079B                     	;# 
  2429  080C                     	;# 
  2430  080D                     	;# 
  2431  080E                     	;# 
  2432  080F                     	;# 
  2433  0810                     	;# 
  2434  0811                     	;# 
  2435  0812                     	;# 
  2436  0813                     	;# 
  2437  0814                     	;# 
  2438  081A                     	;# 
  2439  081B                     	;# 
  2440  081C                     	;# 
  2441  081D                     	;# 
  2442  081E                     	;# 
  2443  081F                     	;# 
  2444  088C                     	;# 
  2445  088D                     	;# 
  2446  088E                     	;# 
  2447  088F                     	;# 
  2448  0890                     	;# 
  2449  0891                     	;# 
  2450  0892                     	;# 
  2451  0893                     	;# 
  2452  0895                     	;# 
  2453  0896                     	;# 
  2454  0897                     	;# 
  2455  0898                     	;# 
  2456  0899                     	;# 
  2457  089A                     	;# 
  2458  089B                     	;# 
  2459  090C                     	;# 
  2460  090E                     	;# 
  2461  090F                     	;# 
  2462  091F                     	;# 
  2463  091F                     	;# 
  2464  098F                     	;# 
  2465  098F                     	;# 
  2466  0990                     	;# 
  2467  0991                     	;# 
  2468  0992                     	;# 
  2469  0993                     	;# 
  2470  0994                     	;# 
  2471  0995                     	;# 
  2472  0996                     	;# 
  2473  0997                     	;# 
  2474  0E0F                     	;# 
  2475  0E10                     	;# 
  2476  0E11                     	;# 
  2477  0E12                     	;# 
  2478  0E13                     	;# 
  2479  0E14                     	;# 
  2480  0E15                     	;# 
  2481  0E16                     	;# 
  2482  0E17                     	;# 
  2483  0E18                     	;# 
  2484  0E19                     	;# 
  2485  0E1A                     	;# 
  2486  0E1B                     	;# 
  2487  0E1C                     	;# 
  2488  0E1D                     	;# 
  2489  0E1E                     	;# 
  2490  0E1F                     	;# 
  2491  0E20                     	;# 
  2492  0E21                     	;# 
  2493  0E22                     	;# 
  2494  0E23                     	;# 
  2495  0E24                     	;# 
  2496  0E25                     	;# 
  2497  0E26                     	;# 
  2498  0E27                     	;# 
  2499  0E28                     	;# 
  2500  0E29                     	;# 
  2501  0E2A                     	;# 
  2502  0E2B                     	;# 
  2503  0E2C                     	;# 
  2504  0E2D                     	;# 
  2505  0E2E                     	;# 
  2506  0E2F                     	;# 
  2507  0E30                     	;# 
  2508  0E31                     	;# 
  2509  0E32                     	;# 
  2510  0E33                     	;# 
  2511  0E34                     	;# 
  2512  0E35                     	;# 
  2513  0E36                     	;# 
  2514  0E37                     	;# 
  2515  0E8F                     	;# 
  2516  0E90                     	;# 
  2517  0E91                     	;# 
  2518  0E92                     	;# 
  2519  0E93                     	;# 
  2520  0E94                     	;# 
  2521  0E95                     	;# 
  2522  0E96                     	;# 
  2523  0E97                     	;# 
  2524  0E9C                     	;# 
  2525  0E9D                     	;# 
  2526  0E9E                     	;# 
  2527  0EA1                     	;# 
  2528  0EA2                     	;# 
  2529  0EA3                     	;# 
  2530  0EA4                     	;# 
  2531  0EA5                     	;# 
  2532  0EA9                     	;# 
  2533  0EAA                     	;# 
  2534  0EAB                     	;# 
  2535  0EAC                     	;# 
  2536  0EB1                     	;# 
  2537  0EB2                     	;# 
  2538  0EB3                     	;# 
  2539  0EB8                     	;# 
  2540  0EB9                     	;# 
  2541  0EBA                     	;# 
  2542  0EBB                     	;# 
  2543  0EBC                     	;# 
  2544  0EBD                     	;# 
  2545  0EBE                     	;# 
  2546  0EC3                     	;# 
  2547  0EC5                     	;# 
  2548  0EC6                     	;# 
  2549  0EC7                     	;# 
  2550  0EC8                     	;# 
  2551  0EC9                     	;# 
  2552  0ECA                     	;# 
  2553  0ECB                     	;# 
  2554  0ECC                     	;# 
  2555  0F10                     	;# 
  2556  0F11                     	;# 
  2557  0F12                     	;# 
  2558  0F13                     	;# 
  2559  0F14                     	;# 
  2560  0F15                     	;# 
  2561  0F16                     	;# 
  2562  0F17                     	;# 
  2563  0F18                     	;# 
  2564  0F19                     	;# 
  2565  0F1A                     	;# 
  2566  0F1B                     	;# 
  2567  0F1C                     	;# 
  2568  0F1D                     	;# 
  2569  0F1E                     	;# 
  2570  0F1F                     	;# 
  2571  0F20                     	;# 
  2572  0F21                     	;# 
  2573  0F22                     	;# 
  2574  0F23                     	;# 
  2575  0F24                     	;# 
  2576  0F25                     	;# 
  2577  0F26                     	;# 
  2578  0F27                     	;# 
  2579  0F38                     	;# 
  2580  0F39                     	;# 
  2581  0F3A                     	;# 
  2582  0F3B                     	;# 
  2583  0F3C                     	;# 
  2584  0F3D                     	;# 
  2585  0F3E                     	;# 
  2586  0F3F                     	;# 
  2587  0F40                     	;# 
  2588  0F41                     	;# 
  2589  0F43                     	;# 
  2590  0F44                     	;# 
  2591  0F45                     	;# 
  2592  0F46                     	;# 
  2593  0F47                     	;# 
  2594  0F48                     	;# 
  2595  0F49                     	;# 
  2596  0F4A                     	;# 
  2597  0F4B                     	;# 
  2598  0F4C                     	;# 
  2599  0F4E                     	;# 
  2600  0F4F                     	;# 
  2601  0F50                     	;# 
  2602  0F51                     	;# 
  2603  0F52                     	;# 
  2604  0F53                     	;# 
  2605  0F54                     	;# 
  2606  0F55                     	;# 
  2607  0F56                     	;# 
  2608  0F57                     	;# 
  2609  0F65                     	;# 
  2610  0F68                     	;# 
  2611  0F69                     	;# 
  2612  0F6A                     	;# 
  2613  0F6B                     	;# 
  2614  0FE4                     	;# 
  2615  0FE5                     	;# 
  2616  0FE6                     	;# 
  2617  0FE7                     	;# 
  2618  0FE8                     	;# 
  2619  0FE9                     	;# 
  2620  0FEA                     	;# 
  2621  0FEB                     	;# 
  2622  0FED                     	;# 
  2623  0FEE                     	;# 
  2624  0FEF                     	;# 
  2625  0000                     	;# 
  2626  0001                     	;# 
  2627  0002                     	;# 
  2628  0003                     	;# 
  2629  0004                     	;# 
  2630  0005                     	;# 
  2631  0006                     	;# 
  2632  0007                     	;# 
  2633  0008                     	;# 
  2634  0009                     	;# 
  2635  000A                     	;# 
  2636  000B                     	;# 
  2637  000C                     	;# 
  2638  000D                     	;# 
  2639  000E                     	;# 
  2640  0010                     	;# 
  2641  0011                     	;# 
  2642  0012                     	;# 
  2643  0013                     	;# 
  2644  0016                     	;# 
  2645  0017                     	;# 
  2646  0018                     	;# 
  2647  001C                     	;# 
  2648  001C                     	;# 
  2649  001D                     	;# 
  2650  001D                     	;# 
  2651  001E                     	;# 
  2652  001F                     	;# 
  2653  008C                     	;# 
  2654  008C                     	;# 
  2655  008D                     	;# 
  2656  008E                     	;# 
  2657  008E                     	;# 
  2658  008F                     	;# 
  2659  0090                     	;# 
  2660  0090                     	;# 
  2661  0091                     	;# 
  2662  0093                     	;# 
  2663  0094                     	;# 
  2664  0095                     	;# 
  2665  0096                     	;# 
  2666  0097                     	;# 
  2667  0098                     	;# 
  2668  0099                     	;# 
  2669  009A                     	;# 
  2670  009B                     	;# 
  2671  009C                     	;# 
  2672  009D                     	;# 
  2673  009E                     	;# 
  2674  010C                     	;# 
  2675  010D                     	;# 
  2676  010E                     	;# 
  2677  010E                     	;# 
  2678  010F                     	;# 
  2679  0110                     	;# 
  2680  0110                     	;# 
  2681  0111                     	;# 
  2682  0112                     	;# 
  2683  0112                     	;# 
  2684  0113                     	;# 
  2685  0114                     	;# 
  2686  0114                     	;# 
  2687  0115                     	;# 
  2688  0116                     	;# 
  2689  0116                     	;# 
  2690  0117                     	;# 
  2691  0119                     	;# 
  2692  0119                     	;# 
  2693  0119                     	;# 
  2694  011A                     	;# 
  2695  011A                     	;# 
  2696  011A                     	;# 
  2697  011B                     	;# 
  2698  011B                     	;# 
  2699  011B                     	;# 
  2700  011B                     	;# 
  2701  011B                     	;# 
  2702  011C                     	;# 
  2703  011C                     	;# 
  2704  011C                     	;# 
  2705  011D                     	;# 
  2706  011D                     	;# 
  2707  011D                     	;# 
  2708  011E                     	;# 
  2709  011E                     	;# 
  2710  011E                     	;# 
  2711  011F                     	;# 
  2712  011F                     	;# 
  2713  011F                     	;# 
  2714  011F                     	;# 
  2715  011F                     	;# 
  2716  018C                     	;# 
  2717  018D                     	;# 
  2718  018E                     	;# 
  2719  018F                     	;# 
  2720  0190                     	;# 
  2721  0191                     	;# 
  2722  0192                     	;# 
  2723  0196                     	;# 
  2724  0197                     	;# 
  2725  0198                     	;# 
  2726  0199                     	;# 
  2727  019A                     	;# 
  2728  019B                     	;# 
  2729  019C                     	;# 
  2730  020C                     	;# 
  2731  020D                     	;# 
  2732  020E                     	;# 
  2733  020F                     	;# 
  2734  020F                     	;# 
  2735  0210                     	;# 
  2736  0210                     	;# 
  2737  0211                     	;# 
  2738  0211                     	;# 
  2739  0212                     	;# 
  2740  0213                     	;# 
  2741  0214                     	;# 
  2742  0215                     	;# 
  2743  0215                     	;# 
  2744  0216                     	;# 
  2745  0216                     	;# 
  2746  0217                     	;# 
  2747  0217                     	;# 
  2748  0218                     	;# 
  2749  0219                     	;# 
  2750  021A                     	;# 
  2751  021B                     	;# 
  2752  021B                     	;# 
  2753  021C                     	;# 
  2754  021C                     	;# 
  2755  021D                     	;# 
  2756  021D                     	;# 
  2757  021E                     	;# 
  2758  021F                     	;# 
  2759  028C                     	;# 
  2760  028C                     	;# 
  2761  028D                     	;# 
  2762  028D                     	;# 
  2763  028E                     	;# 
  2764  028F                     	;# 
  2765  0290                     	;# 
  2766  0290                     	;# 
  2767  0291                     	;# 
  2768  0292                     	;# 
  2769  0292                     	;# 
  2770  0293                     	;# 
  2771  0293                     	;# 
  2772  0294                     	;# 
  2773  0295                     	;# 
  2774  0296                     	;# 
  2775  0296                     	;# 
  2776  0297                     	;# 
  2777  0298                     	;# 
  2778  0298                     	;# 
  2779  0299                     	;# 
  2780  0299                     	;# 
  2781  029A                     	;# 
  2782  029B                     	;# 
  2783  029C                     	;# 
  2784  029C                     	;# 
  2785  029D                     	;# 
  2786  030C                     	;# 
  2787  030C                     	;# 
  2788  030D                     	;# 
  2789  030E                     	;# 
  2790  030F                     	;# 
  2791  0310                     	;# 
  2792  0310                     	;# 
  2793  0311                     	;# 
  2794  0312                     	;# 
  2795  0313                     	;# 
  2796  0314                     	;# 
  2797  0314                     	;# 
  2798  0315                     	;# 
  2799  0316                     	;# 
  2800  0317                     	;# 
  2801  0318                     	;# 
  2802  0318                     	;# 
  2803  0319                     	;# 
  2804  031A                     	;# 
  2805  031B                     	;# 
  2806  031C                     	;# 
  2807  031C                     	;# 
  2808  031D                     	;# 
  2809  031E                     	;# 
  2810  031F                     	;# 
  2811  038C                     	;# 
  2812  038D                     	;# 
  2813  038E                     	;# 
  2814  0390                     	;# 
  2815  0391                     	;# 
  2816  0392                     	;# 
  2817  040C                     	;# 
  2818  040D                     	;# 
  2819  040E                     	;# 
  2820  040F                     	;# 
  2821  0410                     	;# 
  2822  0411                     	;# 
  2823  0416                     	;# 
  2824  0416                     	;# 
  2825  0417                     	;# 
  2826  0418                     	;# 
  2827  0418                     	;# 
  2828  0419                     	;# 
  2829  041A                     	;# 
  2830  041A                     	;# 
  2831  041B                     	;# 
  2832  041C                     	;# 
  2833  041C                     	;# 
  2834  041D                     	;# 
  2835  041E                     	;# 
  2836  041F                     	;# 
  2837  048C                     	;# 
  2838  048C                     	;# 
  2839  048D                     	;# 
  2840  048E                     	;# 
  2841  048F                     	;# 
  2842  048F                     	;# 
  2843  0490                     	;# 
  2844  0491                     	;# 
  2845  0492                     	;# 
  2846  0492                     	;# 
  2847  0493                     	;# 
  2848  0494                     	;# 
  2849  0495                     	;# 
  2850  0495                     	;# 
  2851  0496                     	;# 
  2852  0497                     	;# 
  2853  0498                     	;# 
  2854  0499                     	;# 
  2855  049A                     	;# 
  2856  049B                     	;# 
  2857  049C                     	;# 
  2858  049D                     	;# 
  2859  050C                     	;# 
  2860  050C                     	;# 
  2861  050D                     	;# 
  2862  050E                     	;# 
  2863  050F                     	;# 
  2864  050F                     	;# 
  2865  0510                     	;# 
  2866  0511                     	;# 
  2867  0512                     	;# 
  2868  0512                     	;# 
  2869  0513                     	;# 
  2870  0514                     	;# 
  2871  0515                     	;# 
  2872  0515                     	;# 
  2873  0516                     	;# 
  2874  0517                     	;# 
  2875  0518                     	;# 
  2876  0519                     	;# 
  2877  051A                     	;# 
  2878  051B                     	;# 
  2879  051C                     	;# 
  2880  051D                     	;# 
  2881  058C                     	;# 
  2882  058C                     	;# 
  2883  058D                     	;# 
  2884  058E                     	;# 
  2885  058F                     	;# 
  2886  058F                     	;# 
  2887  0590                     	;# 
  2888  0591                     	;# 
  2889  0592                     	;# 
  2890  0593                     	;# 
  2891  060C                     	;# 
  2892  060D                     	;# 
  2893  060E                     	;# 
  2894  060F                     	;# 
  2895  0610                     	;# 
  2896  0611                     	;# 
  2897  0612                     	;# 
  2898  0613                     	;# 
  2899  0614                     	;# 
  2900  0616                     	;# 
  2901  0617                     	;# 
  2902  0618                     	;# 
  2903  0619                     	;# 
  2904  061A                     	;# 
  2905  061B                     	;# 
  2906  061C                     	;# 
  2907  061D                     	;# 
  2908  061E                     	;# 
  2909  068C                     	;# 
  2910  068D                     	;# 
  2911  068E                     	;# 
  2912  068F                     	;# 
  2913  0690                     	;# 
  2914  0691                     	;# 
  2915  0692                     	;# 
  2916  0693                     	;# 
  2917  0694                     	;# 
  2918  070C                     	;# 
  2919  070D                     	;# 
  2920  070E                     	;# 
  2921  070F                     	;# 
  2922  0710                     	;# 
  2923  0711                     	;# 
  2924  0712                     	;# 
  2925  0713                     	;# 
  2926  0714                     	;# 
  2927  0716                     	;# 
  2928  0717                     	;# 
  2929  0718                     	;# 
  2930  0719                     	;# 
  2931  071A                     	;# 
  2932  071B                     	;# 
  2933  071C                     	;# 
  2934  071D                     	;# 
  2935  071E                     	;# 
  2936  0796                     	;# 
  2937  0797                     	;# 
  2938  0798                     	;# 
  2939  0799                     	;# 
  2940  079A                     	;# 
  2941  079B                     	;# 
  2942  080C                     	;# 
  2943  080D                     	;# 
  2944  080E                     	;# 
  2945  080F                     	;# 
  2946  0810                     	;# 
  2947  0811                     	;# 
  2948  0812                     	;# 
  2949  0813                     	;# 
  2950  0814                     	;# 
  2951  081A                     	;# 
  2952  081B                     	;# 
  2953  081C                     	;# 
  2954  081D                     	;# 
  2955  081E                     	;# 
  2956  081F                     	;# 
  2957  088C                     	;# 
  2958  088D                     	;# 
  2959  088E                     	;# 
  2960  088F                     	;# 
  2961  0890                     	;# 
  2962  0891                     	;# 
  2963  0892                     	;# 
  2964  0893                     	;# 
  2965  0895                     	;# 
  2966  0896                     	;# 
  2967  0897                     	;# 
  2968  0898                     	;# 
  2969  0899                     	;# 
  2970  089A                     	;# 
  2971  089B                     	;# 
  2972  090C                     	;# 
  2973  090E                     	;# 
  2974  090F                     	;# 
  2975  091F                     	;# 
  2976  091F                     	;# 
  2977  098F                     	;# 
  2978  098F                     	;# 
  2979  0990                     	;# 
  2980  0991                     	;# 
  2981  0992                     	;# 
  2982  0993                     	;# 
  2983  0994                     	;# 
  2984  0995                     	;# 
  2985  0996                     	;# 
  2986  0997                     	;# 
  2987  0E0F                     	;# 
  2988  0E10                     	;# 
  2989  0E11                     	;# 
  2990  0E12                     	;# 
  2991  0E13                     	;# 
  2992  0E14                     	;# 
  2993  0E15                     	;# 
  2994  0E16                     	;# 
  2995  0E17                     	;# 
  2996  0E18                     	;# 
  2997  0E19                     	;# 
  2998  0E1A                     	;# 
  2999  0E1B                     	;# 
  3000  0E1C                     	;# 
  3001  0E1D                     	;# 
  3002  0E1E                     	;# 
  3003  0E1F                     	;# 
  3004  0E20                     	;# 
  3005  0E21                     	;# 
  3006  0E22                     	;# 
  3007  0E23                     	;# 
  3008  0E24                     	;# 
  3009  0E25                     	;# 
  3010  0E26                     	;# 
  3011  0E27                     	;# 
  3012  0E28                     	;# 
  3013  0E29                     	;# 
  3014  0E2A                     	;# 
  3015  0E2B                     	;# 
  3016  0E2C                     	;# 
  3017  0E2D                     	;# 
  3018  0E2E                     	;# 
  3019  0E2F                     	;# 
  3020  0E30                     	;# 
  3021  0E31                     	;# 
  3022  0E32                     	;# 
  3023  0E33                     	;# 
  3024  0E34                     	;# 
  3025  0E35                     	;# 
  3026  0E36                     	;# 
  3027  0E37                     	;# 
  3028  0E8F                     	;# 
  3029  0E90                     	;# 
  3030  0E91                     	;# 
  3031  0E92                     	;# 
  3032  0E93                     	;# 
  3033  0E94                     	;# 
  3034  0E95                     	;# 
  3035  0E96                     	;# 
  3036  0E97                     	;# 
  3037  0E9C                     	;# 
  3038  0E9D                     	;# 
  3039  0E9E                     	;# 
  3040  0EA1                     	;# 
  3041  0EA2                     	;# 
  3042  0EA3                     	;# 
  3043  0EA4                     	;# 
  3044  0EA5                     	;# 
  3045  0EA9                     	;# 
  3046  0EAA                     	;# 
  3047  0EAB                     	;# 
  3048  0EAC                     	;# 
  3049  0EB1                     	;# 
  3050  0EB2                     	;# 
  3051  0EB3                     	;# 
  3052  0EB8                     	;# 
  3053  0EB9                     	;# 
  3054  0EBA                     	;# 
  3055  0EBB                     	;# 
  3056  0EBC                     	;# 
  3057  0EBD                     	;# 
  3058  0EBE                     	;# 
  3059  0EC3                     	;# 
  3060  0EC5                     	;# 
  3061  0EC6                     	;# 
  3062  0EC7                     	;# 
  3063  0EC8                     	;# 
  3064  0EC9                     	;# 
  3065  0ECA                     	;# 
  3066  0ECB                     	;# 
  3067  0ECC                     	;# 
  3068  0F10                     	;# 
  3069  0F11                     	;# 
  3070  0F12                     	;# 
  3071  0F13                     	;# 
  3072  0F14                     	;# 
  3073  0F15                     	;# 
  3074  0F16                     	;# 
  3075  0F17                     	;# 
  3076  0F18                     	;# 
  3077  0F19                     	;# 
  3078  0F1A                     	;# 
  3079  0F1B                     	;# 
  3080  0F1C                     	;# 
  3081  0F1D                     	;# 
  3082  0F1E                     	;# 
  3083  0F1F                     	;# 
  3084  0F20                     	;# 
  3085  0F21                     	;# 
  3086  0F22                     	;# 
  3087  0F23                     	;# 
  3088  0F24                     	;# 
  3089  0F25                     	;# 
  3090  0F26                     	;# 
  3091  0F27                     	;# 
  3092  0F38                     	;# 
  3093  0F39                     	;# 
  3094  0F3A                     	;# 
  3095  0F3B                     	;# 
  3096  0F3C                     	;# 
  3097  0F3D                     	;# 
  3098  0F3E                     	;# 
  3099  0F3F                     	;# 
  3100  0F40                     	;# 
  3101  0F41                     	;# 
  3102  0F43                     	;# 
  3103  0F44                     	;# 
  3104  0F45                     	;# 
  3105  0F46                     	;# 
  3106  0F47                     	;# 
  3107  0F48                     	;# 
  3108  0F49                     	;# 
  3109  0F4A                     	;# 
  3110  0F4B                     	;# 
  3111  0F4C                     	;# 
  3112  0F4E                     	;# 
  3113  0F4F                     	;# 
  3114  0F50                     	;# 
  3115  0F51                     	;# 
  3116  0F52                     	;# 
  3117  0F53                     	;# 
  3118  0F54                     	;# 
  3119  0F55                     	;# 
  3120  0F56                     	;# 
  3121  0F57                     	;# 
  3122  0F65                     	;# 
  3123  0F68                     	;# 
  3124  0F69                     	;# 
  3125  0F6A                     	;# 
  3126  0F6B                     	;# 
  3127  0FE4                     	;# 
  3128  0FE5                     	;# 
  3129  0FE6                     	;# 
  3130  0FE7                     	;# 
  3131  0FE8                     	;# 
  3132  0FE9                     	;# 
  3133  0FEA                     	;# 
  3134  0FEB                     	;# 
  3135  0FED                     	;# 
  3136  0FEE                     	;# 
  3137  0FEF                     	;# 
  3138  0000                     	;# 
  3139  0001                     	;# 
  3140  0002                     	;# 
  3141  0003                     	;# 
  3142  0004                     	;# 
  3143  0005                     	;# 
  3144  0006                     	;# 
  3145  0007                     	;# 
  3146  0008                     	;# 
  3147  0009                     	;# 
  3148  000A                     	;# 
  3149  000B                     	;# 
  3150  000C                     	;# 
  3151  000D                     	;# 
  3152  000E                     	;# 
  3153  0010                     	;# 
  3154  0011                     	;# 
  3155  0012                     	;# 
  3156  0013                     	;# 
  3157  0016                     	;# 
  3158  0017                     	;# 
  3159  0018                     	;# 
  3160  001C                     	;# 
  3161  001C                     	;# 
  3162  001D                     	;# 
  3163  001D                     	;# 
  3164  001E                     	;# 
  3165  001F                     	;# 
  3166  008C                     	;# 
  3167  008C                     	;# 
  3168  008D                     	;# 
  3169  008E                     	;# 
  3170  008E                     	;# 
  3171  008F                     	;# 
  3172  0090                     	;# 
  3173  0090                     	;# 
  3174  0091                     	;# 
  3175  0093                     	;# 
  3176  0094                     	;# 
  3177  0095                     	;# 
  3178  0096                     	;# 
  3179  0097                     	;# 
  3180  0098                     	;# 
  3181  0099                     	;# 
  3182  009A                     	;# 
  3183  009B                     	;# 
  3184  009C                     	;# 
  3185  009D                     	;# 
  3186  009E                     	;# 
  3187  010C                     	;# 
  3188  010D                     	;# 
  3189  010E                     	;# 
  3190  010E                     	;# 
  3191  010F                     	;# 
  3192  0110                     	;# 
  3193  0110                     	;# 
  3194  0111                     	;# 
  3195  0112                     	;# 
  3196  0112                     	;# 
  3197  0113                     	;# 
  3198  0114                     	;# 
  3199  0114                     	;# 
  3200  0115                     	;# 
  3201  0116                     	;# 
  3202  0116                     	;# 
  3203  0117                     	;# 
  3204  0119                     	;# 
  3205  0119                     	;# 
  3206  0119                     	;# 
  3207  011A                     	;# 
  3208  011A                     	;# 
  3209  011A                     	;# 
  3210  011B                     	;# 
  3211  011B                     	;# 
  3212  011B                     	;# 
  3213  011B                     	;# 
  3214  011B                     	;# 
  3215  011C                     	;# 
  3216  011C                     	;# 
  3217  011C                     	;# 
  3218  011D                     	;# 
  3219  011D                     	;# 
  3220  011D                     	;# 
  3221  011E                     	;# 
  3222  011E                     	;# 
  3223  011E                     	;# 
  3224  011F                     	;# 
  3225  011F                     	;# 
  3226  011F                     	;# 
  3227  011F                     	;# 
  3228  011F                     	;# 
  3229  018C                     	;# 
  3230  018D                     	;# 
  3231  018E                     	;# 
  3232  018F                     	;# 
  3233  0190                     	;# 
  3234  0191                     	;# 
  3235  0192                     	;# 
  3236  0196                     	;# 
  3237  0197                     	;# 
  3238  0198                     	;# 
  3239  0199                     	;# 
  3240  019A                     	;# 
  3241  019B                     	;# 
  3242  019C                     	;# 
  3243  020C                     	;# 
  3244  020D                     	;# 
  3245  020E                     	;# 
  3246  020F                     	;# 
  3247  020F                     	;# 
  3248  0210                     	;# 
  3249  0210                     	;# 
  3250  0211                     	;# 
  3251  0211                     	;# 
  3252  0212                     	;# 
  3253  0213                     	;# 
  3254  0214                     	;# 
  3255  0215                     	;# 
  3256  0215                     	;# 
  3257  0216                     	;# 
  3258  0216                     	;# 
  3259  0217                     	;# 
  3260  0217                     	;# 
  3261  0218                     	;# 
  3262  0219                     	;# 
  3263  021A                     	;# 
  3264  021B                     	;# 
  3265  021B                     	;# 
  3266  021C                     	;# 
  3267  021C                     	;# 
  3268  021D                     	;# 
  3269  021D                     	;# 
  3270  021E                     	;# 
  3271  021F                     	;# 
  3272  028C                     	;# 
  3273  028C                     	;# 
  3274  028D                     	;# 
  3275  028D                     	;# 
  3276  028E                     	;# 
  3277  028F                     	;# 
  3278  0290                     	;# 
  3279  0290                     	;# 
  3280  0291                     	;# 
  3281  0292                     	;# 
  3282  0292                     	;# 
  3283  0293                     	;# 
  3284  0293                     	;# 
  3285  0294                     	;# 
  3286  0295                     	;# 
  3287  0296                     	;# 
  3288  0296                     	;# 
  3289  0297                     	;# 
  3290  0298                     	;# 
  3291  0298                     	;# 
  3292  0299                     	;# 
  3293  0299                     	;# 
  3294  029A                     	;# 
  3295  029B                     	;# 
  3296  029C                     	;# 
  3297  029C                     	;# 
  3298  029D                     	;# 
  3299  030C                     	;# 
  3300  030C                     	;# 
  3301  030D                     	;# 
  3302  030E                     	;# 
  3303  030F                     	;# 
  3304  0310                     	;# 
  3305  0310                     	;# 
  3306  0311                     	;# 
  3307  0312                     	;# 
  3308  0313                     	;# 
  3309  0314                     	;# 
  3310  0314                     	;# 
  3311  0315                     	;# 
  3312  0316                     	;# 
  3313  0317                     	;# 
  3314  0318                     	;# 
  3315  0318                     	;# 
  3316  0319                     	;# 
  3317  031A                     	;# 
  3318  031B                     	;# 
  3319  031C                     	;# 
  3320  031C                     	;# 
  3321  031D                     	;# 
  3322  031E                     	;# 
  3323  031F                     	;# 
  3324  038C                     	;# 
  3325  038D                     	;# 
  3326  038E                     	;# 
  3327  0390                     	;# 
  3328  0391                     	;# 
  3329  0392                     	;# 
  3330  040C                     	;# 
  3331  040D                     	;# 
  3332  040E                     	;# 
  3333  040F                     	;# 
  3334  0410                     	;# 
  3335  0411                     	;# 
  3336  0416                     	;# 
  3337  0416                     	;# 
  3338  0417                     	;# 
  3339  0418                     	;# 
  3340  0418                     	;# 
  3341  0419                     	;# 
  3342  041A                     	;# 
  3343  041A                     	;# 
  3344  041B                     	;# 
  3345  041C                     	;# 
  3346  041C                     	;# 
  3347  041D                     	;# 
  3348  041E                     	;# 
  3349  041F                     	;# 
  3350  048C                     	;# 
  3351  048C                     	;# 
  3352  048D                     	;# 
  3353  048E                     	;# 
  3354  048F                     	;# 
  3355  048F                     	;# 
  3356  0490                     	;# 
  3357  0491                     	;# 
  3358  0492                     	;# 
  3359  0492                     	;# 
  3360  0493                     	;# 
  3361  0494                     	;# 
  3362  0495                     	;# 
  3363  0495                     	;# 
  3364  0496                     	;# 
  3365  0497                     	;# 
  3366  0498                     	;# 
  3367  0499                     	;# 
  3368  049A                     	;# 
  3369  049B                     	;# 
  3370  049C                     	;# 
  3371  049D                     	;# 
  3372  050C                     	;# 
  3373  050C                     	;# 
  3374  050D                     	;# 
  3375  050E                     	;# 
  3376  050F                     	;# 
  3377  050F                     	;# 
  3378  0510                     	;# 
  3379  0511                     	;# 
  3380  0512                     	;# 
  3381  0512                     	;# 
  3382  0513                     	;# 
  3383  0514                     	;# 
  3384  0515                     	;# 
  3385  0515                     	;# 
  3386  0516                     	;# 
  3387  0517                     	;# 
  3388  0518                     	;# 
  3389  0519                     	;# 
  3390  051A                     	;# 
  3391  051B                     	;# 
  3392  051C                     	;# 
  3393  051D                     	;# 
  3394  058C                     	;# 
  3395  058C                     	;# 
  3396  058D                     	;# 
  3397  058E                     	;# 
  3398  058F                     	;# 
  3399  058F                     	;# 
  3400  0590                     	;# 
  3401  0591                     	;# 
  3402  0592                     	;# 
  3403  0593                     	;# 
  3404  060C                     	;# 
  3405  060D                     	;# 
  3406  060E                     	;# 
  3407  060F                     	;# 
  3408  0610                     	;# 
  3409  0611                     	;# 
  3410  0612                     	;# 
  3411  0613                     	;# 
  3412  0614                     	;# 
  3413  0616                     	;# 
  3414  0617                     	;# 
  3415  0618                     	;# 
  3416  0619                     	;# 
  3417  061A                     	;# 
  3418  061B                     	;# 
  3419  061C                     	;# 
  3420  061D                     	;# 
  3421  061E                     	;# 
  3422  068C                     	;# 
  3423  068D                     	;# 
  3424  068E                     	;# 
  3425  068F                     	;# 
  3426  0690                     	;# 
  3427  0691                     	;# 
  3428  0692                     	;# 
  3429  0693                     	;# 
  3430  0694                     	;# 
  3431  070C                     	;# 
  3432  070D                     	;# 
  3433  070E                     	;# 
  3434  070F                     	;# 
  3435  0710                     	;# 
  3436  0711                     	;# 
  3437  0712                     	;# 
  3438  0713                     	;# 
  3439  0714                     	;# 
  3440  0716                     	;# 
  3441  0717                     	;# 
  3442  0718                     	;# 
  3443  0719                     	;# 
  3444  071A                     	;# 
  3445  071B                     	;# 
  3446  071C                     	;# 
  3447  071D                     	;# 
  3448  071E                     	;# 
  3449  0796                     	;# 
  3450  0797                     	;# 
  3451  0798                     	;# 
  3452  0799                     	;# 
  3453  079A                     	;# 
  3454  079B                     	;# 
  3455  080C                     	;# 
  3456  080D                     	;# 
  3457  080E                     	;# 
  3458  080F                     	;# 
  3459  0810                     	;# 
  3460  0811                     	;# 
  3461  0812                     	;# 
  3462  0813                     	;# 
  3463  0814                     	;# 
  3464  081A                     	;# 
  3465  081B                     	;# 
  3466  081C                     	;# 
  3467  081D                     	;# 
  3468  081E                     	;# 
  3469  081F                     	;# 
  3470  088C                     	;# 
  3471  088D                     	;# 
  3472  088E                     	;# 
  3473  088F                     	;# 
  3474  0890                     	;# 
  3475  0891                     	;# 
  3476  0892                     	;# 
  3477  0893                     	;# 
  3478  0895                     	;# 
  3479  0896                     	;# 
  3480  0897                     	;# 
  3481  0898                     	;# 
  3482  0899                     	;# 
  3483  089A                     	;# 
  3484  089B                     	;# 
  3485  090C                     	;# 
  3486  090E                     	;# 
  3487  090F                     	;# 
  3488  091F                     	;# 
  3489  091F                     	;# 
  3490  098F                     	;# 
  3491  098F                     	;# 
  3492  0990                     	;# 
  3493  0991                     	;# 
  3494  0992                     	;# 
  3495  0993                     	;# 
  3496  0994                     	;# 
  3497  0995                     	;# 
  3498  0996                     	;# 
  3499  0997                     	;# 
  3500  0E0F                     	;# 
  3501  0E10                     	;# 
  3502  0E11                     	;# 
  3503  0E12                     	;# 
  3504  0E13                     	;# 
  3505  0E14                     	;# 
  3506  0E15                     	;# 
  3507  0E16                     	;# 
  3508  0E17                     	;# 
  3509  0E18                     	;# 
  3510  0E19                     	;# 
  3511  0E1A                     	;# 
  3512  0E1B                     	;# 
  3513  0E1C                     	;# 
  3514  0E1D                     	;# 
  3515  0E1E                     	;# 
  3516  0E1F                     	;# 
  3517  0E20                     	;# 
  3518  0E21                     	;# 
  3519  0E22                     	;# 
  3520  0E23                     	;# 
  3521  0E24                     	;# 
  3522  0E25                     	;# 
  3523  0E26                     	;# 
  3524  0E27                     	;# 
  3525  0E28                     	;# 
  3526  0E29                     	;# 
  3527  0E2A                     	;# 
  3528  0E2B                     	;# 
  3529  0E2C                     	;# 
  3530  0E2D                     	;# 
  3531  0E2E                     	;# 
  3532  0E2F                     	;# 
  3533  0E30                     	;# 
  3534  0E31                     	;# 
  3535  0E32                     	;# 
  3536  0E33                     	;# 
  3537  0E34                     	;# 
  3538  0E35                     	;# 
  3539  0E36                     	;# 
  3540  0E37                     	;# 
  3541  0E8F                     	;# 
  3542  0E90                     	;# 
  3543  0E91                     	;# 
  3544  0E92                     	;# 
  3545  0E93                     	;# 
  3546  0E94                     	;# 
  3547  0E95                     	;# 
  3548  0E96                     	;# 
  3549  0E97                     	;# 
  3550  0E9C                     	;# 
  3551  0E9D                     	;# 
  3552  0E9E                     	;# 
  3553  0EA1                     	;# 
  3554  0EA2                     	;# 
  3555  0EA3                     	;# 
  3556  0EA4                     	;# 
  3557  0EA5                     	;# 
  3558  0EA9                     	;# 
  3559  0EAA                     	;# 
  3560  0EAB                     	;# 
  3561  0EAC                     	;# 
  3562  0EB1                     	;# 
  3563  0EB2                     	;# 
  3564  0EB3                     	;# 
  3565  0EB8                     	;# 
  3566  0EB9                     	;# 
  3567  0EBA                     	;# 
  3568  0EBB                     	;# 
  3569  0EBC                     	;# 
  3570  0EBD                     	;# 
  3571  0EBE                     	;# 
  3572  0EC3                     	;# 
  3573  0EC5                     	;# 
  3574  0EC6                     	;# 
  3575  0EC7                     	;# 
  3576  0EC8                     	;# 
  3577  0EC9                     	;# 
  3578  0ECA                     	;# 
  3579  0ECB                     	;# 
  3580  0ECC                     	;# 
  3581  0F10                     	;# 
  3582  0F11                     	;# 
  3583  0F12                     	;# 
  3584  0F13                     	;# 
  3585  0F14                     	;# 
  3586  0F15                     	;# 
  3587  0F16                     	;# 
  3588  0F17                     	;# 
  3589  0F18                     	;# 
  3590  0F19                     	;# 
  3591  0F1A                     	;# 
  3592  0F1B                     	;# 
  3593  0F1C                     	;# 
  3594  0F1D                     	;# 
  3595  0F1E                     	;# 
  3596  0F1F                     	;# 
  3597  0F20                     	;# 
  3598  0F21                     	;# 
  3599  0F22                     	;# 
  3600  0F23                     	;# 
  3601  0F24                     	;# 
  3602  0F25                     	;# 
  3603  0F26                     	;# 
  3604  0F27                     	;# 
  3605  0F38                     	;# 
  3606  0F39                     	;# 
  3607  0F3A                     	;# 
  3608  0F3B                     	;# 
  3609  0F3C                     	;# 
  3610  0F3D                     	;# 
  3611  0F3E                     	;# 
  3612  0F3F                     	;# 
  3613  0F40                     	;# 
  3614  0F41                     	;# 
  3615  0F43                     	;# 
  3616  0F44                     	;# 
  3617  0F45                     	;# 
  3618  0F46                     	;# 
  3619  0F47                     	;# 
  3620  0F48                     	;# 
  3621  0F49                     	;# 
  3622  0F4A                     	;# 
  3623  0F4B                     	;# 
  3624  0F4C                     	;# 
  3625  0F4E                     	;# 
  3626  0F4F                     	;# 
  3627  0F50                     	;# 
  3628  0F51                     	;# 
  3629  0F52                     	;# 
  3630  0F53                     	;# 
  3631  0F54                     	;# 
  3632  0F55                     	;# 
  3633  0F56                     	;# 
  3634  0F57                     	;# 
  3635  0F65                     	;# 
  3636  0F68                     	;# 
  3637  0F69                     	;# 
  3638  0F6A                     	;# 
  3639  0F6B                     	;# 
  3640  0FE4                     	;# 
  3641  0FE5                     	;# 
  3642  0FE6                     	;# 
  3643  0FE7                     	;# 
  3644  0FE8                     	;# 
  3645  0FE9                     	;# 
  3646  0FEA                     	;# 
  3647  0FEB                     	;# 
  3648  0FED                     	;# 
  3649  0FEE                     	;# 
  3650  0FEF                     	;# 
  3651  0000                     	;# 
  3652  0001                     	;# 
  3653  0002                     	;# 
  3654  0003                     	;# 
  3655  0004                     	;# 
  3656  0005                     	;# 
  3657  0006                     	;# 
  3658  0007                     	;# 
  3659  0008                     	;# 
  3660  0009                     	;# 
  3661  000A                     	;# 
  3662  000B                     	;# 
  3663  000C                     	;# 
  3664  000D                     	;# 
  3665  000E                     	;# 
  3666  0010                     	;# 
  3667  0011                     	;# 
  3668  0012                     	;# 
  3669  0013                     	;# 
  3670  0016                     	;# 
  3671  0017                     	;# 
  3672  0018                     	;# 
  3673  001C                     	;# 
  3674  001C                     	;# 
  3675  001D                     	;# 
  3676  001D                     	;# 
  3677  001E                     	;# 
  3678  001F                     	;# 
  3679  008C                     	;# 
  3680  008C                     	;# 
  3681  008D                     	;# 
  3682  008E                     	;# 
  3683  008E                     	;# 
  3684  008F                     	;# 
  3685  0090                     	;# 
  3686  0090                     	;# 
  3687  0091                     	;# 
  3688  0093                     	;# 
  3689  0094                     	;# 
  3690  0095                     	;# 
  3691  0096                     	;# 
  3692  0097                     	;# 
  3693  0098                     	;# 
  3694  0099                     	;# 
  3695  009A                     	;# 
  3696  009B                     	;# 
  3697  009C                     	;# 
  3698  009D                     	;# 
  3699  009E                     	;# 
  3700  010C                     	;# 
  3701  010D                     	;# 
  3702  010E                     	;# 
  3703  010E                     	;# 
  3704  010F                     	;# 
  3705  0110                     	;# 
  3706  0110                     	;# 
  3707  0111                     	;# 
  3708  0112                     	;# 
  3709  0112                     	;# 
  3710  0113                     	;# 
  3711  0114                     	;# 
  3712  0114                     	;# 
  3713  0115                     	;# 
  3714  0116                     	;# 
  3715  0116                     	;# 
  3716  0117                     	;# 
  3717  0119                     	;# 
  3718  0119                     	;# 
  3719  0119                     	;# 
  3720  011A                     	;# 
  3721  011A                     	;# 
  3722  011A                     	;# 
  3723  011B                     	;# 
  3724  011B                     	;# 
  3725  011B                     	;# 
  3726  011B                     	;# 
  3727  011B                     	;# 
  3728  011C                     	;# 
  3729  011C                     	;# 
  3730  011C                     	;# 
  3731  011D                     	;# 
  3732  011D                     	;# 
  3733  011D                     	;# 
  3734  011E                     	;# 
  3735  011E                     	;# 
  3736  011E                     	;# 
  3737  011F                     	;# 
  3738  011F                     	;# 
  3739  011F                     	;# 
  3740  011F                     	;# 
  3741  011F                     	;# 
  3742  018C                     	;# 
  3743  018D                     	;# 
  3744  018E                     	;# 
  3745  018F                     	;# 
  3746  0190                     	;# 
  3747  0191                     	;# 
  3748  0192                     	;# 
  3749  0196                     	;# 
  3750  0197                     	;# 
  3751  0198                     	;# 
  3752  0199                     	;# 
  3753  019A                     	;# 
  3754  019B                     	;# 
  3755  019C                     	;# 
  3756  020C                     	;# 
  3757  020D                     	;# 
  3758  020E                     	;# 
  3759  020F                     	;# 
  3760  020F                     	;# 
  3761  0210                     	;# 
  3762  0210                     	;# 
  3763  0211                     	;# 
  3764  0211                     	;# 
  3765  0212                     	;# 
  3766  0213                     	;# 
  3767  0214                     	;# 
  3768  0215                     	;# 
  3769  0215                     	;# 
  3770  0216                     	;# 
  3771  0216                     	;# 
  3772  0217                     	;# 
  3773  0217                     	;# 
  3774  0218                     	;# 
  3775  0219                     	;# 
  3776  021A                     	;# 
  3777  021B                     	;# 
  3778  021B                     	;# 
  3779  021C                     	;# 
  3780  021C                     	;# 
  3781  021D                     	;# 
  3782  021D                     	;# 
  3783  021E                     	;# 
  3784  021F                     	;# 
  3785  028C                     	;# 
  3786  028C                     	;# 
  3787  028D                     	;# 
  3788  028D                     	;# 
  3789  028E                     	;# 
  3790  028F                     	;# 
  3791  0290                     	;# 
  3792  0290                     	;# 
  3793  0291                     	;# 
  3794  0292                     	;# 
  3795  0292                     	;# 
  3796  0293                     	;# 
  3797  0293                     	;# 
  3798  0294                     	;# 
  3799  0295                     	;# 
  3800  0296                     	;# 
  3801  0296                     	;# 
  3802  0297                     	;# 
  3803  0298                     	;# 
  3804  0298                     	;# 
  3805  0299                     	;# 
  3806  0299                     	;# 
  3807  029A                     	;# 
  3808  029B                     	;# 
  3809  029C                     	;# 
  3810  029C                     	;# 
  3811  029D                     	;# 
  3812  030C                     	;# 
  3813  030C                     	;# 
  3814  030D                     	;# 
  3815  030E                     	;# 
  3816  030F                     	;# 
  3817  0310                     	;# 
  3818  0310                     	;# 
  3819  0311                     	;# 
  3820  0312                     	;# 
  3821  0313                     	;# 
  3822  0314                     	;# 
  3823  0314                     	;# 
  3824  0315                     	;# 
  3825  0316                     	;# 
  3826  0317                     	;# 
  3827  0318                     	;# 
  3828  0318                     	;# 
  3829  0319                     	;# 
  3830  031A                     	;# 
  3831  031B                     	;# 
  3832  031C                     	;# 
  3833  031C                     	;# 
  3834  031D                     	;# 
  3835  031E                     	;# 
  3836  031F                     	;# 
  3837  038C                     	;# 
  3838  038D                     	;# 
  3839  038E                     	;# 
  3840  0390                     	;# 
  3841  0391                     	;# 
  3842  0392                     	;# 
  3843  040C                     	;# 
  3844  040D                     	;# 
  3845  040E                     	;# 
  3846  040F                     	;# 
  3847  0410                     	;# 
  3848  0411                     	;# 
  3849  0416                     	;# 
  3850  0416                     	;# 
  3851  0417                     	;# 
  3852  0418                     	;# 
  3853  0418                     	;# 
  3854  0419                     	;# 
  3855  041A                     	;# 
  3856  041A                     	;# 
  3857  041B                     	;# 
  3858  041C                     	;# 
  3859  041C                     	;# 
  3860  041D                     	;# 
  3861  041E                     	;# 
  3862  041F                     	;# 
  3863  048C                     	;# 
  3864  048C                     	;# 
  3865  048D                     	;# 
  3866  048E                     	;# 
  3867  048F                     	;# 
  3868  048F                     	;# 
  3869  0490                     	;# 
  3870  0491                     	;# 
  3871  0492                     	;# 
  3872  0492                     	;# 
  3873  0493                     	;# 
  3874  0494                     	;# 
  3875  0495                     	;# 
  3876  0495                     	;# 
  3877  0496                     	;# 
  3878  0497                     	;# 
  3879  0498                     	;# 
  3880  0499                     	;# 
  3881  049A                     	;# 
  3882  049B                     	;# 
  3883  049C                     	;# 
  3884  049D                     	;# 
  3885  050C                     	;# 
  3886  050C                     	;# 
  3887  050D                     	;# 
  3888  050E                     	;# 
  3889  050F                     	;# 
  3890  050F                     	;# 
  3891  0510                     	;# 
  3892  0511                     	;# 
  3893  0512                     	;# 
  3894  0512                     	;# 
  3895  0513                     	;# 
  3896  0514                     	;# 
  3897  0515                     	;# 
  3898  0515                     	;# 
  3899  0516                     	;# 
  3900  0517                     	;# 
  3901  0518                     	;# 
  3902  0519                     	;# 
  3903  051A                     	;# 
  3904  051B                     	;# 
  3905  051C                     	;# 
  3906  051D                     	;# 
  3907  058C                     	;# 
  3908  058C                     	;# 
  3909  058D                     	;# 
  3910  058E                     	;# 
  3911  058F                     	;# 
  3912  058F                     	;# 
  3913  0590                     	;# 
  3914  0591                     	;# 
  3915  0592                     	;# 
  3916  0593                     	;# 
  3917  060C                     	;# 
  3918  060D                     	;# 
  3919  060E                     	;# 
  3920  060F                     	;# 
  3921  0610                     	;# 
  3922  0611                     	;# 
  3923  0612                     	;# 
  3924  0613                     	;# 
  3925  0614                     	;# 
  3926  0616                     	;# 
  3927  0617                     	;# 
  3928  0618                     	;# 
  3929  0619                     	;# 
  3930  061A                     	;# 
  3931  061B                     	;# 
  3932  061C                     	;# 
  3933  061D                     	;# 
  3934  061E                     	;# 
  3935  068C                     	;# 
  3936  068D                     	;# 
  3937  068E                     	;# 
  3938  068F                     	;# 
  3939  0690                     	;# 
  3940  0691                     	;# 
  3941  0692                     	;# 
  3942  0693                     	;# 
  3943  0694                     	;# 
  3944  070C                     	;# 
  3945  070D                     	;# 
  3946  070E                     	;# 
  3947  070F                     	;# 
  3948  0710                     	;# 
  3949  0711                     	;# 
  3950  0712                     	;# 
  3951  0713                     	;# 
  3952  0714                     	;# 
  3953  0716                     	;# 
  3954  0717                     	;# 
  3955  0718                     	;# 
  3956  0719                     	;# 
  3957  071A                     	;# 
  3958  071B                     	;# 
  3959  071C                     	;# 
  3960  071D                     	;# 
  3961  071E                     	;# 
  3962  0796                     	;# 
  3963  0797                     	;# 
  3964  0798                     	;# 
  3965  0799                     	;# 
  3966  079A                     	;# 
  3967  079B                     	;# 
  3968  080C                     	;# 
  3969  080D                     	;# 
  3970  080E                     	;# 
  3971  080F                     	;# 
  3972  0810                     	;# 
  3973  0811                     	;# 
  3974  0812                     	;# 
  3975  0813                     	;# 
  3976  0814                     	;# 
  3977  081A                     	;# 
  3978  081B                     	;# 
  3979  081C                     	;# 
  3980  081D                     	;# 
  3981  081E                     	;# 
  3982  081F                     	;# 
  3983  088C                     	;# 
  3984  088D                     	;# 
  3985  088E                     	;# 
  3986  088F                     	;# 
  3987  0890                     	;# 
  3988  0891                     	;# 
  3989  0892                     	;# 
  3990  0893                     	;# 
  3991  0895                     	;# 
  3992  0896                     	;# 
  3993  0897                     	;# 
  3994  0898                     	;# 
  3995  0899                     	;# 
  3996  089A                     	;# 
  3997  089B                     	;# 
  3998  090C                     	;# 
  3999  090E                     	;# 
  4000  090F                     	;# 
  4001  091F                     	;# 
  4002  091F                     	;# 
  4003  098F                     	;# 
  4004  098F                     	;# 
  4005  0990                     	;# 
  4006  0991                     	;# 
  4007  0992                     	;# 
  4008  0993                     	;# 
  4009  0994                     	;# 
  4010  0995                     	;# 
  4011  0996                     	;# 
  4012  0997                     	;# 
  4013  0E0F                     	;# 
  4014  0E10                     	;# 
  4015  0E11                     	;# 
  4016  0E12                     	;# 
  4017  0E13                     	;# 
  4018  0E14                     	;# 
  4019  0E15                     	;# 
  4020  0E16                     	;# 
  4021  0E17                     	;# 
  4022  0E18                     	;# 
  4023  0E19                     	;# 
  4024  0E1A                     	;# 
  4025  0E1B                     	;# 
  4026  0E1C                     	;# 
  4027  0E1D                     	;# 
  4028  0E1E                     	;# 
  4029  0E1F                     	;# 
  4030  0E20                     	;# 
  4031  0E21                     	;# 
  4032  0E22                     	;# 
  4033  0E23                     	;# 
  4034  0E24                     	;# 
  4035  0E25                     	;# 
  4036  0E26                     	;# 
  4037  0E27                     	;# 
  4038  0E28                     	;# 
  4039  0E29                     	;# 
  4040  0E2A                     	;# 
  4041  0E2B                     	;# 
  4042  0E2C                     	;# 
  4043  0E2D                     	;# 
  4044  0E2E                     	;# 
  4045  0E2F                     	;# 
  4046  0E30                     	;# 
  4047  0E31                     	;# 
  4048  0E32                     	;# 
  4049  0E33                     	;# 
  4050  0E34                     	;# 
  4051  0E35                     	;# 
  4052  0E36                     	;# 
  4053  0E37                     	;# 
  4054  0E8F                     	;# 
  4055  0E90                     	;# 
  4056  0E91                     	;# 
  4057  0E92                     	;# 
  4058  0E93                     	;# 
  4059  0E94                     	;# 
  4060  0E95                     	;# 
  4061  0E96                     	;# 
  4062  0E97                     	;# 
  4063  0E9C                     	;# 
  4064  0E9D                     	;# 
  4065  0E9E                     	;# 
  4066  0EA1                     	;# 
  4067  0EA2                     	;# 
  4068  0EA3                     	;# 
  4069  0EA4                     	;# 
  4070  0EA5                     	;# 
  4071  0EA9                     	;# 
  4072  0EAA                     	;# 
  4073  0EAB                     	;# 
  4074  0EAC                     	;# 
  4075  0EB1                     	;# 
  4076  0EB2                     	;# 
  4077  0EB3                     	;# 
  4078  0EB8                     	;# 
  4079  0EB9                     	;# 
  4080  0EBA                     	;# 
  4081  0EBB                     	;# 
  4082  0EBC                     	;# 
  4083  0EBD                     	;# 
  4084  0EBE                     	;# 
  4085  0EC3                     	;# 
  4086  0EC5                     	;# 
  4087  0EC6                     	;# 
  4088  0EC7                     	;# 
  4089  0EC8                     	;# 
  4090  0EC9                     	;# 
  4091  0ECA                     	;# 
  4092  0ECB                     	;# 
  4093  0ECC                     	;# 
  4094  0F10                     	;# 
  4095  0F11                     	;# 
  4096  0F12                     	;# 
  4097  0F13                     	;# 
  4098  0F14                     	;# 
  4099  0F15                     	;# 
  4100  0F16                     	;# 
  4101  0F17                     	;# 
  4102  0F18                     	;# 
  4103  0F19                     	;# 
  4104  0F1A                     	;# 
  4105  0F1B                     	;# 
  4106  0F1C                     	;# 
  4107  0F1D                     	;# 
  4108  0F1E                     	;# 
  4109  0F1F                     	;# 
  4110  0F20                     	;# 
  4111  0F21                     	;# 
  4112  0F22                     	;# 
  4113  0F23                     	;# 
  4114  0F24                     	;# 
  4115  0F25                     	;# 
  4116  0F26                     	;# 
  4117  0F27                     	;# 
  4118  0F38                     	;# 
  4119  0F39                     	;# 
  4120  0F3A                     	;# 
  4121  0F3B                     	;# 
  4122  0F3C                     	;# 
  4123  0F3D                     	;# 
  4124  0F3E                     	;# 
  4125  0F3F                     	;# 
  4126  0F40                     	;# 
  4127  0F41                     	;# 
  4128  0F43                     	;# 
  4129  0F44                     	;# 
  4130  0F45                     	;# 
  4131  0F46                     	;# 
  4132  0F47                     	;# 
  4133  0F48                     	;# 
  4134  0F49                     	;# 
  4135  0F4A                     	;# 
  4136  0F4B                     	;# 
  4137  0F4C                     	;# 
  4138  0F4E                     	;# 
  4139  0F4F                     	;# 
  4140  0F50                     	;# 
  4141  0F51                     	;# 
  4142  0F52                     	;# 
  4143  0F53                     	;# 
  4144  0F54                     	;# 
  4145  0F55                     	;# 
  4146  0F56                     	;# 
  4147  0F57                     	;# 
  4148  0F65                     	;# 
  4149  0F68                     	;# 
  4150  0F69                     	;# 
  4151  0F6A                     	;# 
  4152  0F6B                     	;# 
  4153  0FE4                     	;# 
  4154  0FE5                     	;# 
  4155  0FE6                     	;# 
  4156  0FE7                     	;# 
  4157  0FE8                     	;# 
  4158  0FE9                     	;# 
  4159  0FEA                     	;# 
  4160  0FEB                     	;# 
  4161  0FED                     	;# 
  4162  0FEE                     	;# 
  4163  0FEF                     	;_samples
  4164                           
  4165                           	psect	idataBANK1
  4166  15A8                     __pidataBANK1:	
  4167                           
  4168                           ;initializer for _channels
  4169  15A8  3401               	retlw	1
  4170  15A9  3400               	retlw	0
  4171  15AA  3403               	retlw	3
  4172  15AB  3400               	retlw	0
  4173  15AC  3404               	retlw	4
  4174  15AD  3400               	retlw	0
  4175  15AE  3405               	retlw	5
  4176  15AF  3400               	retlw	0
  4177  15B0  3409               	retlw	9
  4178  15B1  3400               	retlw	0
  4179  15B2  340B               	retlw	11
  4180  15B3  3400               	retlw	0
  4181                           
  4182                           	psect	idataBANK2
  4183  15D0                     __pidataBANK2:	
  4184                           
  4185                           ;initializer for ___cgram
  4186  15D0  340C               	retlw	12
  4187  15D1  3412               	retlw	18
  4188  15D2  3412               	retlw	18
  4189  15D3  340C               	retlw	12
  4190  15D4  3400               	retlw	0
  4191  15D5  3400               	retlw	0
  4192  15D6  3400               	retlw	0
  4193  15D7  3400               	retlw	0
  4194  15D8  3408               	retlw	8
  4195  15D9  3404               	retlw	4
  4196  15DA  3402               	retlw	2
  4197  15DB  341F               	retlw	31
  4198  15DC  3402               	retlw	2
  4199  15DD  3404               	retlw	4
  4200  15DE  3408               	retlw	8
  4201  15DF  3400               	retlw	0
  4202                           
  4203                           	psect	stringtext
  4204  1000                     __pstringtext:	
  4205  1000                     log@coeff:	
  4206  1000  3400               	retlw	0
  4207  1001  3400               	retlw	0
  4208  1002  3400               	retlw	0
  4209  1003  3400               	retlw	0
  4210  1004  3480               	retlw	128
  4211  1005  343F               	retlw	63
  4212  1006  34F0               	retlw	240
  4213  1007  34FF               	retlw	255
  4214  1008  34BE               	retlw	190
  4215  1009  34E2               	retlw	226
  4216  100A  34A9               	retlw	169
  4217  100B  343E               	retlw	62
  4218  100C  3483               	retlw	131
  4219  100D  3476               	retlw	118
  4220  100E  34BE               	retlw	190
  4221  100F  34AE               	retlw	174
  4222  1010  342B               	retlw	43
  4223  1011  343E               	retlw	62
  4224  1012  343C               	retlw	60
  4225  1013  34C3               	retlw	195
  4226  1014  34BD               	retlw	189
  4227  1015  34D2               	retlw	210
  4228  1016  3413               	retlw	19
  4229  1017  343D               	retlw	61
  4230  1018  3478               	retlw	120
  4231  1019  34D3               	retlw	211
  4232  101A  34BB               	retlw	187
  4233  101B                     __end_oflog@coeff:	
  4234  0016                     _LATA	set	22
  4235  0017                     _LATB	set	23
  4236  0018                     _LATC	set	24
  4237  0011                     _TRISA	set	17
  4238  0012                     _TRISB	set	18
  4239  0013                     _TRISC	set	19
  4240  005F                     _GIE	set	95
  4241  0060                     _RA0	set	96
  4242  0062                     _RA2	set	98
  4243  0066                     _RA6	set	102
  4244  0067                     _RA7	set	103
  4245  0070                     _RC0	set	112
  4246  0071                     _RC1	set	113
  4247  009D                     _ADACQ	set	157
  4248  0099                     _ADACT	set	153
  4249  009B                     _ADCAP	set	155
  4250  0098                     _ADCLK	set	152
  4251  0093                     _ADCON0	set	147
  4252  0093                     _ADCON0bits	set	147
  4253  0094                     _ADCON1	set	148
  4254  0095                     _ADCON2	set	149
  4255  0096                     _ADCON3	set	150
  4256  009E                     _ADPCH	set	158
  4257  009C                     _ADPRE	set	156
  4258  009A                     _ADREF	set	154
  4259  008D                     _ADRESH	set	141
  4260  008C                     _ADRESL	set	140
  4261  0097                     _ADSTAT	set	151
  4262  010F                     _ADLTHH	set	271
  4263  010E                     _ADLTHL	set	270
  4264  010D                     _ADRPT	set	269
  4265  0113                     _ADSTPTH	set	275
  4266  0112                     _ADSTPTL	set	274
  4267  0111                     _ADUTHH	set	273
  4268  0110                     _ADUTHL	set	272
  4269  021F                     _CCPTMRS1bits	set	543
  4270  0290                     _T2CLKCON	set	656
  4271  028E                     _T2CON	set	654
  4272  028E                     _T2CONbits	set	654
  4273  028F                     _T2HLT	set	655
  4274  028D                     _T2PR	set	653
  4275  0291                     _T2RST	set	657
  4276  028C                     _T2TMR	set	652
  4277  038E                     _PWM6CON	set	910
  4278  038D                     _PWM6DCH	set	909
  4279  038C                     _PWM6DCL	set	908
  4280  0716                     _PIE0bits	set	1814
  4281  0710                     _PIR4bits	set	1808
  4282  088D                     _OSCCON1	set	2189
  4283  088F                     _OSCCON3	set	2191
  4284  0891                     _OSCEN	set	2193
  4285  0893                     _OSCFRQ	set	2195
  4286  0892                     _OSCTUNE	set	2194
  4287  090C                     _FVRCON	set	2316
  4288  0E8F                     _PPSLOCK	set	3727
  4289  0E8F                     _PPSLOCKbits	set	3727
  4290  0F38                     _ANSELA	set	3896
  4291  0F43                     _ANSELB	set	3907
  4292  0F4E                     _ANSELC	set	3918
  4293  0F22                     _RC2PPS	set	3874
  4294  0F39                     _WPUA	set	3897
  4295  0F44                     _WPUB	set	3908
  4296  0F4F                     _WPUC	set	3919
  4297  0F65                     _WPUE	set	3941
  4298  101B                     STR_28:	
  4299  101B  3466               	retlw	102	;'f'
  4300  101C  346F               	retlw	111	;'o'
  4301  101D  3472               	retlw	114	;'r'
  4302  101E  3420               	retlw	32	;' '
  4303  101F  3455               	retlw	85	;'U'
  4304  1020  3473               	retlw	115	;'s'
  4305  1021  3465               	retlw	101	;'e'
  4306  1022  3472               	retlw	114	;'r'
  4307  1023  3420               	retlw	32	;' '
  4308  1024  3444               	retlw	68	;'D'
  4309  1025  3469               	retlw	105	;'i'
  4310  1026  3473               	retlw	115	;'s'
  4311  1027  3470               	retlw	112	;'p'
  4312  1028  346C               	retlw	108	;'l'
  4313  1029  3461               	retlw	97	;'a'
  4314  102A  3479               	retlw	121	;'y'
  4315  102B  3400               	retlw	0
  4316  102C                     STR_27:	
  4317  102C  3459               	retlw	89	;'Y'
  4318  102D  346F               	retlw	111	;'o'
  4319  102E  3475               	retlw	117	;'u'
  4320  102F  3420               	retlw	32	;' '
  4321  1030  3443               	retlw	67	;'C'
  4322  1031  3468               	retlw	104	;'h'
  4323  1032  346F               	retlw	111	;'o'
  4324  1033  3473               	retlw	115	;'s'
  4325  1034  3465               	retlw	101	;'e'
  4326  1035  3420               	retlw	32	;' '
  4327  1036  3400               	retlw	0
  4328  1037                     STR_33:	
  4329  1037  3442               	retlw	66	;'B'
  4330  1038  3461               	retlw	97	;'a'
  4331  1039  3463               	retlw	99	;'c'
  4332  103A  346B               	retlw	107	;'k'
  4333  103B  344C               	retlw	76	;'L'
  4334  103C  3469               	retlw	105	;'i'
  4335  103D  3467               	retlw	103	;'g'
  4336  103E  3468               	retlw	104	;'h'
  4337  103F  3474               	retlw	116	;'t'
  4338  1040  343A               	retlw	58	;':'
  4339  1041  3400               	retlw	0
  4340  1042                     STR_31:	
  4341  1042  3420               	retlw	32	;' '
  4342  1043  3443               	retlw	67	;'C'
  4343  1044  3468               	retlw	104	;'h'
  4344  1045  346F               	retlw	111	;'o'
  4345  1046  3473               	retlw	115	;'s'
  4346  1047  3465               	retlw	101	;'e'
  4347  1048  346E               	retlw	110	;'n'
  4348  1049  3420               	retlw	32	;' '
  4349  104A  3400               	retlw	0
  4350  104B                     STR_36:	
  4351  104B  3453               	retlw	83	;'S'
  4352  104C  346F               	retlw	111	;'o'
  4353  104D  346C               	retlw	108	;'l'
  4354  104E  3461               	retlw	97	;'a'
  4355  104F  3472               	retlw	114	;'r'
  4356  1050  3400               	retlw	0
  4357  1051                     STR_38:	
  4358  1051  3450               	retlw	80	;'P'
  4359  1052  346F               	retlw	111	;'o'
  4360  1053  346F               	retlw	111	;'o'
  4361  1054  346C               	retlw	108	;'l'
  4362  1055  3400               	retlw	0
  4363  1056                     STR_37:	
  4364  1056  344F               	retlw	79	;'O'
  4365  1057  3475               	retlw	117	;'u'
  4366  1058  3474               	retlw	116	;'t'
  4367  1059  3400               	retlw	0
  4368  105A                     STR_35:	
  4369  105A  3449               	retlw	73	;'I'
  4370  105B  346E               	retlw	110	;'n'
  4371  105C  3400               	retlw	0
  4372  105D                     STR_26:	
  4373  105D  3421               	retlw	33	;'!'
  4374  105E  3400               	retlw	0
  4375  105F                     STR_20:	
  4376  105F  3426               	retlw	38	;'&'
  4377  1060  3400               	retlw	0
  4378  1061                     STR_12:	
  4379  1061  342C               	retlw	44	;','
  4380  1062  3400               	retlw	0
  4381  1063                     STR_1:	
  4382  1063  3441               	retlw	65	;'A'
  4383  1064  3400               	retlw	0
  4384  1065                     STR_7:	
  4385  1065  3444               	retlw	68	;'D'
  4386  1066  3400               	retlw	0
  4387  1067                     STR_18:	
  4388  1067  3445               	retlw	69	;'E'
  4389  1068  3400               	retlw	0
  4390  1069                     STR_4:	
  4391  1069  3448               	retlw	72	;'H'
  4392  106A  3400               	retlw	0
  4393  106B                     STR_10:	
  4394  106B  3449               	retlw	73	;'I'
  4395  106C  3400               	retlw	0
  4396  106D                     STR_22:	
  4397  106D  344B               	retlw	75	;'K'
  4398  106E  3400               	retlw	0
  4399  106F                     STR_2:	
  4400  106F  344C               	retlw	76	;'L'
  4401  1070  3400               	retlw	0
  4402  1071                     STR_3:	
  4403  1071  344F               	retlw	79	;'O'
  4404  1072  3400               	retlw	0
  4405  1073                     STR_15:	
  4406  1073  3450               	retlw	80	;'P'
  4407  1074  3400               	retlw	0
  4408  1075                     STR_13:	
  4409  1075  3453               	retlw	83	;'S'
  4410  1076  3400               	retlw	0
  4411  1077                     STR_9:	
  4412  1077  3456               	retlw	86	;'V'
  4413  1078  3400               	retlw	0
  4414  1035                     
  4415                           ; #config settings
  4416  0000                     
  4417                           	psect	cinit
  4418  07BD                     start_initialization:	
  4419  07BD                     __initialization:		;BIGRAM
  4420                           
  4421                           ; Initialize objects allocated to BANK1
  4422  07BD  30A8               	movlw	low __pidataBANK1
  4423  07BE  0084               	movwf	4
  4424  07BF  3095               	movlw	(high __pidataBANK1)| (0+128)
  4425  07C0  0085               	movwf	5
  4426  07C1  30DD               	movlw	low __pdataBANK1
  4427  07C2  0086               	movwf	6
  4428  07C3  3000               	movlw	high __pdataBANK1
  4429  07C4  0087               	movwf	7
  4430  07C5  3000               	movlw	0
  4431  07C6  00FF               	movwf	btemp+1
  4432  07C7  300C               	movlw	12
  4433  07C8  3195  259C  3187   	fcall	init_ram
  4434                           
  4435                           ; Initialize objects allocated to BANK2
  4436  07CB  30D0               	movlw	low __pidataBANK2
  4437  07CC  0084               	movwf	4
  4438  07CD  3095               	movlw	(high __pidataBANK2)| (0+128)
  4439  07CE  0085               	movwf	5
  4440  07CF  3020               	movlw	low __pdataBANK2
  4441  07D0  0086               	movwf	6
  4442  07D1  3001               	movlw	high __pdataBANK2
  4443  07D2  0087               	movwf	7
  4444  07D3  3000               	movlw	0
  4445  07D4  00FF               	movwf	btemp+1
  4446  07D5  3010               	movlw	16
  4447  07D6  3195  259C  3187   	fcall	init_ram
  4448                           
  4449                           ; Clear objects allocated to BIGRAM
  4450  07D9  3000               	movlw	low (0+8960)
  4451  07DA  0084               	movwf	4
  4452  07DB  3023               	movlw	high (0+8960)
  4453  07DC  0085               	movwf	5
  4454  07DD  30F0               	movlw	240
  4455  07DE  00FE               	movwf	btemp
  4456  07DF  3000               	movlw	0
  4457  07E0  00FF               	movwf	btemp+1
  4458  07E1  3195  2590  3187   	fcall	clear_ram0
  4459                           
  4460                           ; Clear objects allocated to BANK0
  4461  07E4  01EC               	clrf	__pbssBANK0& (0+127)
  4462  07E5  01ED               	clrf	(__pbssBANK0+1)& (0+127)
  4463  07E6  01EE               	clrf	(__pbssBANK0+2)& (0+127)
  4464  07E7  01EF               	clrf	(__pbssBANK0+3)& (0+127)
  4465                           
  4466                           ; Clear objects allocated to BANK1
  4467  07E8  30C0               	movlw	low __pbssBANK1
  4468  07E9  0084               	movwf	4
  4469  07EA  3000               	movlw	high __pbssBANK1
  4470  07EB  0085               	movwf	5
  4471  07EC  301D               	movlw	29
  4472  07ED  00FE               	movwf	btemp
  4473  07EE  3000               	movlw	0
  4474  07EF  00FF               	movwf	btemp+1
  4475  07F0  3195  2590  3187   	fcall	clear_ram0
  4476                           
  4477                           ; Clear objects allocated to BANK2
  4478  07F3  3030               	movlw	low __pbssBANK2
  4479  07F4  0084               	movwf	4
  4480  07F5  3001               	movlw	high __pbssBANK2
  4481  07F6  0085               	movwf	5
  4482  07F7  300C               	movlw	12
  4483  07F8  00FE               	movwf	btemp
  4484  07F9  3000               	movlw	0
  4485  07FA  00FF               	movwf	btemp+1
  4486  07FB  3195  2590         	fcall	clear_ram0
  4487  07FD                     end_of_initialization:	
  4488                           ;End of C runtime variable initialization code
  4489                           
  4490  07FD                     __end_of__initialization:	
  4491  07FD  0020               	movlb	0
  4492  07FE  3181  2933         	ljmp	_main	;jump to C main() function
  4493                           
  4494                           	psect	bssBANK0
  4495  006C                     __pbssBANK0:	
  4496  006C                     _errno:	
  4497  006C                     	ds	2
  4498  006E                     _sampleIndex:	
  4499  006E                     	ds	2
  4500                           
  4501                           	psect	bssBANK1
  4502  00C0                     __pbssBANK1:	
  4503  00C0                     _totals:	
  4504  00C0                     	ds	24
  4505  00D8                     LCD_Write_Int@F13687:	
  4506  00D8                     	ds	5
  4507                           
  4508                           	psect	dataBANK1
  4509  00DD                     __pdataBANK1:	
  4510  00DD                     _channels:	
  4511  00DD                     	ds	12
  4512                           
  4513                           	psect	bssBANK2
  4514  0130                     __pbssBANK2:	
  4515  0130                     main@F13657:	
  4516  0130                     	ds	12
  4517                           
  4518                           	psect	dataBANK2
  4519  0120                     __pdataBANK2:	
  4520  0120                     ___cgram:	
  4521  0120                     	ds	16
  4522                           
  4523                           	psect	inittext
  4524  159C                     init_ram:	
  4525  159C  00FE               	movwf	126
  4526  159D                     initloop:	
  4527  159D  0012               	moviw fsr0++
  4528  159E  001E               	movwi fsr1++
  4529  159F  3001               	movlw	1
  4530  15A0  02FE               	subwf	126,f
  4531  15A1  3000               	movlw	0
  4532  15A2  3BFF               	subwfb	127,f
  4533  15A3  087F               	movf	127,w
  4534  15A4  047E               	iorwf	126,w
  4535  15A5  1903               	btfsc	3,2
  4536  15A6  3400               	retlw	0
  4537  15A7  2D9D               	goto	initloop
  4538                           
  4539                           	psect	clrtext
  4540  1590                     clear_ram0:	
  4541                           ;	Called with FSR0 containing the base address, and
  4542                           ;	btemp/btemp+1 has the size to clear
  4543                           
  4544  1590  0064               	clrwdt	;clear the watchdog before getting into this loop
  4545  1591                     clrloop0:	
  4546  1591  0180               	clrf	0	;clear RAM location pointed to by FSR
  4547  1592  3101               	addfsr 0,1
  4548  1593  3001               	movlw	1
  4549  1594  02FE               	subwf	126,f
  4550  1595  3000               	movlw	0
  4551  1596  3BFF               	subwfb	127,f
  4552  1597  087F               	movf	127,w
  4553  1598  047E               	iorwf	126,w
  4554  1599  1903               	btfsc	3,2
  4555  159A  3400               	retlw	0	;all done for this memory range, return
  4556  159B  2D91               	goto	clrloop0	;have we reached the end yet?
  4557                           
  4558                           	psect	cstackBANK1
  4559  00A0                     __pcstackBANK1:	
  4560  00A0                     _main$989:	
  4561                           
  4562                           ; 3 bytes @ 0x0
  4563  00A0                     	ds	3
  4564  00A3                     main@loop:	
  4565                           
  4566                           ; 1 bytes @ 0x3
  4567  00A3                     	ds	1
  4568  00A4                     main@startDelay:	
  4569                           
  4570                           ; 1 bytes @ 0x4
  4571  00A4                     	ds	1
  4572  00A5                     main@analogs:	
  4573                           
  4574                           ; 12 bytes @ 0x5
  4575  00A5                     	ds	12
  4576  00B1                     main@bCount:	
  4577                           
  4578                           ; 2 bytes @ 0x11
  4579  00B1                     	ds	2
  4580  00B3                     main@displayTemp:	
  4581                           
  4582                           ; 3 bytes @ 0x13
  4583  00B3                     	ds	3
  4584  00B6                     main@displayTemp2:	
  4585                           
  4586                           ; 3 bytes @ 0x16
  4587  00B6                     	ds	3
  4588  00B9                     main@resetDelay:	
  4589                           
  4590                           ; 1 bytes @ 0x19
  4591  00B9                     	ds	1
  4592  00BA                     main@tPadCount:	
  4593                           
  4594                           ; 1 bytes @ 0x1A
  4595  00BA                     	ds	1
  4596  00BB                     main@choice:	
  4597                           
  4598                           ; 1 bytes @ 0x1B
  4599  00BB                     	ds	1
  4600  00BC                     main@C_or_F:	
  4601                           
  4602                           ; 1 bytes @ 0x1C
  4603  00BC                     	ds	1
  4604  00BD                     main@x:	
  4605                           
  4606                           ; 1 bytes @ 0x1D
  4607  00BD                     	ds	1
  4608  00BE                     main@dutyCycle:	
  4609                           
  4610                           ; 2 bytes @ 0x1E
  4611  00BE                     	ds	2
  4612                           
  4613                           	psect	cstackCOMMON
  4614  0070                     __pcstackCOMMON:	
  4615  0070                     ?___ftge:	
  4616  0070                     ?_LCD_Cmd:	
  4617                           ; 1 bit 
  4618                           
  4619  0070                     ?_LCD_Write_Char:	
  4620                           ; 1 bytes @ 0x0
  4621                           
  4622  0070                     ?_OSCILLATOR_Initialize:	
  4623                           ; 1 bytes @ 0x0
  4624                           
  4625  0070                     ??_OSCILLATOR_Initialize:	
  4626                           ; 1 bytes @ 0x0
  4627                           
  4628  0070                     ?_TMR2_Initialize:	
  4629                           ; 1 bytes @ 0x0
  4630                           
  4631  0070                     ??_TMR2_Initialize:	
  4632                           ; 1 bytes @ 0x0
  4633                           
  4634  0070                     ?_ADCC_Initialize:	
  4635                           ; 1 bytes @ 0x0
  4636                           
  4637  0070                     ??_ADCC_Initialize:	
  4638                           ; 1 bytes @ 0x0
  4639                           
  4640  0070                     ?_InitCustomChars:	
  4641                           ; 1 bytes @ 0x0
  4642                           
  4643  0070                     ?_LCD_Port:	
  4644                           ; 1 bytes @ 0x0
  4645                           
  4646  0070                     ??_LCD_Port:	
  4647                           ; 1 bytes @ 0x0
  4648                           
  4649  0070                     ?_LCD_Clear:	
  4650                           ; 1 bytes @ 0x0
  4651                           
  4652  0070                     ?_LCD_Init:	
  4653                           ; 1 bytes @ 0x0
  4654                           
  4655  0070                     ?_PIN_MANAGER_Initialize:	
  4656                           ; 1 bytes @ 0x0
  4657                           
  4658  0070                     ??_PIN_MANAGER_Initialize:	
  4659                           ; 1 bytes @ 0x0
  4660                           
  4661  0070                     ?_PWM6_Initialize:	
  4662                           ; 1 bytes @ 0x0
  4663                           
  4664  0070                     ??_PWM6_Initialize:	
  4665                           ; 1 bytes @ 0x0
  4666                           
  4667  0070                     ?_PWM6_LoadDutyValue:	
  4668                           ; 1 bytes @ 0x0
  4669                           
  4670  0070                     ?_SYSTEM_Initialize:	
  4671                           ; 1 bytes @ 0x0
  4672                           
  4673  0070                     ?_main:	
  4674                           ; 1 bytes @ 0x0
  4675                           
  4676  0070                     ?_ADCRead:	
  4677                           ; 1 bytes @ 0x0
  4678                           
  4679  0070                     ?___wmul:	
  4680                           ; 2 bytes @ 0x0
  4681                           
  4682  0070                     ?___awdiv:	
  4683                           ; 2 bytes @ 0x0
  4684                           
  4685  0070                     ?___awmod:	
  4686                           ; 2 bytes @ 0x0
  4687                           
  4688  0070                     ?___lwdiv:	
  4689                           ; 2 bytes @ 0x0
  4690                           
  4691  0070                     ?___ftpack:	
  4692                           ; 2 bytes @ 0x0
  4693                           
  4694  0070                     ?_frexp:	
  4695                           ; 3 bytes @ 0x0
  4696                           
  4697  0070                     ?___aldiv:	
  4698                           ; 3 bytes @ 0x0
  4699                           
  4700  0070                     ?___fttol:	
  4701                           ; 4 bytes @ 0x0
  4702                           
  4703  0070                     LCD_Port@a:	
  4704                           ; 4 bytes @ 0x0
  4705                           
  4706  0070                     PIN_MANAGER_Initialize@state:	
  4707                           ; 1 bytes @ 0x0
  4708                           
  4709  0070                     PWM6_LoadDutyValue@dutyCycle:	
  4710                           ; 1 bytes @ 0x0
  4711                           
  4712  0070                     ___wmul@multiplier:	
  4713                           ; 2 bytes @ 0x0
  4714                           
  4715  0070                     ___awdiv@divisor:	
  4716                           ; 2 bytes @ 0x0
  4717                           
  4718  0070                     ___awmod@divisor:	
  4719                           ; 2 bytes @ 0x0
  4720                           
  4721  0070                     ___lwdiv@divisor:	
  4722                           ; 2 bytes @ 0x0
  4723                           
  4724  0070                     ___ftpack@arg:	
  4725                           ; 2 bytes @ 0x0
  4726                           
  4727  0070                     ___ftge@ff1:	
  4728                           ; 3 bytes @ 0x0
  4729                           
  4730  0070                     ___fttol@f1:	
  4731                           ; 3 bytes @ 0x0
  4732                           
  4733  0070                     frexp@value:	
  4734                           ; 3 bytes @ 0x0
  4735                           
  4736  0070                     ___aldiv@divisor:	
  4737                           ; 3 bytes @ 0x0
  4738                           
  4739                           
  4740                           ; 4 bytes @ 0x0
  4741  0070                     	ds	1
  4742  0071                     ??_LCD_Cmd:	
  4743  0071                     ??_LCD_Write_Char:	
  4744                           ; 1 bytes @ 0x1
  4745                           
  4746                           
  4747                           ; 1 bytes @ 0x1
  4748  0071                     	ds	1
  4749  0072                     ??_PWM6_LoadDutyValue:	
  4750  0072                     LCD_Write_Char@temp:	
  4751                           ; 1 bytes @ 0x2
  4752                           
  4753  0072                     ___wmul@multiplicand:	
  4754                           ; 1 bytes @ 0x2
  4755                           
  4756  0072                     ___awdiv@dividend:	
  4757                           ; 2 bytes @ 0x2
  4758                           
  4759  0072                     ___awmod@dividend:	
  4760                           ; 2 bytes @ 0x2
  4761                           
  4762  0072                     ___lwdiv@dividend:	
  4763                           ; 2 bytes @ 0x2
  4764                           
  4765                           
  4766                           ; 2 bytes @ 0x2
  4767  0072                     	ds	1
  4768  0073                     ??_ADCRead:	
  4769  0073                     ADCRead@channel:	
  4770                           ; 1 bytes @ 0x3
  4771                           
  4772  0073                     LCD_Cmd@a:	
  4773                           ; 1 bytes @ 0x3
  4774                           
  4775  0073                     LCD_Write_Char@y:	
  4776                           ; 1 bytes @ 0x3
  4777                           
  4778  0073                     ___ftpack@exp:	
  4779                           ; 1 bytes @ 0x3
  4780                           
  4781  0073                     frexp@eptr:	
  4782                           ; 1 bytes @ 0x3
  4783                           
  4784  0073                     ___ftge@ff2:	
  4785                           ; 1 bytes @ 0x3
  4786                           
  4787                           
  4788                           ; 3 bytes @ 0x3
  4789  0073                     	ds	1
  4790  0074                     ??_frexp:	
  4791  0074                     ??_LCD_Clear:	
  4792                           ; 1 bytes @ 0x4
  4793                           
  4794  0074                     ?_LCD_Set_Cursor:	
  4795                           ; 1 bytes @ 0x4
  4796                           
  4797  0074                     ??_LCD_Init:	
  4798                           ; 1 bytes @ 0x4
  4799                           
  4800  0074                     ??___wmul:	
  4801                           ; 1 bytes @ 0x4
  4802                           
  4803  0074                     ??___awdiv:	
  4804                           ; 1 bytes @ 0x4
  4805                           
  4806  0074                     ??___awmod:	
  4807                           ; 1 bytes @ 0x4
  4808                           
  4809  0074                     ??___fttol:	
  4810                           ; 1 bytes @ 0x4
  4811                           
  4812  0074                     ??___lwdiv:	
  4813                           ; 1 bytes @ 0x4
  4814                           
  4815  0074                     LCD_Set_Cursor@y:	
  4816                           ; 1 bytes @ 0x4
  4817                           
  4818  0074                     LCD_Write_Char@a:	
  4819                           ; 1 bytes @ 0x4
  4820                           
  4821  0074                     ___ftpack@sign:	
  4822                           ; 1 bytes @ 0x4
  4823                           
  4824  0074                     ___wmul@product:	
  4825                           ; 1 bytes @ 0x4
  4826                           
  4827  0074                     ___aldiv@dividend:	
  4828                           ; 2 bytes @ 0x4
  4829                           
  4830                           
  4831                           ; 4 bytes @ 0x4
  4832  0074                     	ds	1
  4833  0075                     ??___ftpack:	
  4834  0075                     ??_InitCustomChars:	
  4835                           ; 1 bytes @ 0x5
  4836                           
  4837  0075                     ??_LCD_Set_Cursor:	
  4838                           ; 1 bytes @ 0x5
  4839                           
  4840  0075                     ?_LCD_Write_String:	
  4841                           ; 1 bytes @ 0x5
  4842                           
  4843  0075                     ___awdiv@counter:	
  4844                           ; 1 bytes @ 0x5
  4845                           
  4846  0075                     ___awmod@counter:	
  4847                           ; 1 bytes @ 0x5
  4848                           
  4849  0075                     LCD_Write_String@a:	
  4850                           ; 1 bytes @ 0x5
  4851                           
  4852  0075                     ___lwdiv@quotient:	
  4853                           ; 2 bytes @ 0x5
  4854                           
  4855                           
  4856                           ; 2 bytes @ 0x5
  4857  0075                     	ds	1
  4858  0076                     ??___ftge:	
  4859  0076                     InitCustomChars@i:	
  4860                           ; 1 bytes @ 0x6
  4861                           
  4862  0076                     ___awdiv@sign:	
  4863                           ; 1 bytes @ 0x6
  4864                           
  4865  0076                     ___awmod@sign:	
  4866                           ; 1 bytes @ 0x6
  4867                           
  4868                           
  4869                           ; 1 bytes @ 0x6
  4870  0076                     	ds	1
  4871  0077                     ??_LCD_Write_String:	
  4872  0077                     LCD_Set_Cursor@x:	
  4873                           ; 1 bytes @ 0x7
  4874                           
  4875  0077                     LCD_Init@style:	
  4876                           ; 1 bytes @ 0x7
  4877                           
  4878  0077                     ___lwdiv@counter:	
  4879                           ; 1 bytes @ 0x7
  4880                           
  4881  0077                     ___awdiv@quotient:	
  4882                           ; 1 bytes @ 0x7
  4883                           
  4884                           
  4885                           ; 2 bytes @ 0x7
  4886  0077                     	ds	1
  4887  0078                     ??_SYSTEM_Initialize:	
  4888  0078                     ??___aldiv:	
  4889                           ; 1 bytes @ 0x8
  4890                           
  4891  0078                     ?___awtoft:	
  4892                           ; 1 bytes @ 0x8
  4893                           
  4894  0078                     LCD_Set_Cursor@z:	
  4895                           ; 3 bytes @ 0x8
  4896                           
  4897  0078                     ___fttol@sign1:	
  4898                           ; 1 bytes @ 0x8
  4899                           
  4900  0078                     LCD_Write_String@i:	
  4901                           ; 1 bytes @ 0x8
  4902                           
  4903  0078                     ___awtoft@c:	
  4904                           ; 2 bytes @ 0x8
  4905                           
  4906                           
  4907                           ; 2 bytes @ 0x8
  4908  0078                     	ds	1
  4909  0079                     LCD_Set_Cursor@w:	
  4910  0079                     readAnalog@analog_channel:	
  4911                           ; 1 bytes @ 0x9
  4912                           
  4913  0079                     ___fttol@lval:	
  4914                           ; 2 bytes @ 0x9
  4915                           
  4916                           
  4917                           ; 4 bytes @ 0x9
  4918  0079                     	ds	1
  4919  007A                     LCD_Set_Cursor@temp:	
  4920                           
  4921                           ; 1 bytes @ 0xA
  4922  007A                     	ds	1
  4923  007B                     ??___awtoft:	
  4924  007B                     readAnalog@value:	
  4925                           ; 1 bytes @ 0xB
  4926                           
  4927                           
  4928                           ; 2 bytes @ 0xB
  4929  007B                     	ds	2
  4930  007D                     ___awtoft@sign:	
  4931  007D                     ___fttol@exp1:	
  4932                           ; 1 bytes @ 0xD
  4933                           
  4934                           
  4935                           ; 1 bytes @ 0xD
  4936  007D                     	ds	1
  4937  007E                     ??_eval_poly:	
  4938  007E                     ??_tempCalc:	
  4939                           ; 1 bytes @ 0xE
  4940                           
  4941  007E                     ??___ftsub:	
  4942                           ; 1 bytes @ 0xE
  4943                           
  4944                           
  4945                           	psect	cstackBANK0
  4946  0020                     __pcstackBANK0:	
  4947                           ; 1 bytes @ 0xE
  4948                           
  4949  0020                     ?_LCD_Write_Int:	
  4950  0020                     ?___ftmul:	
  4951                           ; 1 bytes @ 0x0
  4952                           
  4953  0020                     ___aldiv@counter:	
  4954                           ; 3 bytes @ 0x0
  4955                           
  4956  0020                     LCD_Write_Int@value:	
  4957                           ; 1 bytes @ 0x0
  4958                           
  4959  0020                     ___ftmul@f1:	
  4960                           ; 2 bytes @ 0x0
  4961                           
  4962                           
  4963                           ; 3 bytes @ 0x0
  4964  0020                     	ds	1
  4965  0021                     ___aldiv@sign:	
  4966                           
  4967                           ; 1 bytes @ 0x1
  4968  0021                     	ds	1
  4969  0022                     LCD_Write_Int@fieldLength:	
  4970  0022                     ___aldiv@quotient:	
  4971                           ; 1 bytes @ 0x2
  4972                           
  4973                           
  4974                           ; 4 bytes @ 0x2
  4975  0022                     	ds	1
  4976  0023                     LCD_Write_Int@numPlaces:	
  4977  0023                     ___ftmul@f2:	
  4978                           ; 1 bytes @ 0x3
  4979                           
  4980                           
  4981                           ; 3 bytes @ 0x3
  4982  0023                     	ds	1
  4983  0024                     LCD_Write_Int@sign:	
  4984                           
  4985                           ; 1 bytes @ 0x4
  4986  0024                     	ds	1
  4987  0025                     ??_LCD_Write_Int:	
  4988                           
  4989                           ; 1 bytes @ 0x5
  4990  0025                     	ds	1
  4991  0026                     ??___ftmul:	
  4992  0026                     ?_readAnalog:	
  4993                           ; 1 bytes @ 0x6
  4994                           
  4995  0026                     readAnalog@channel:	
  4996                           ; 2 bytes @ 0x6
  4997                           
  4998                           
  4999                           ; 2 bytes @ 0x6
  5000  0026                     	ds	2
  5001  0028                     ??_readAnalog:	
  5002                           
  5003                           ; 1 bytes @ 0x8
  5004  0028                     	ds	2
  5005  002A                     ___ftmul@exp:	
  5006  002A                     LCD_Write_Int@str:	
  5007                           ; 1 bytes @ 0xA
  5008                           
  5009                           
  5010                           ; 5 bytes @ 0xA
  5011  002A                     	ds	1
  5012  002B                     ___ftmul@f3_as_product:	
  5013                           
  5014                           ; 3 bytes @ 0xB
  5015  002B                     	ds	3
  5016  002E                     ___ftmul@cntr:	
  5017                           
  5018                           ; 1 bytes @ 0xE
  5019  002E                     	ds	1
  5020  002F                     ___ftmul@sign:	
  5021  002F                     LCD_Write_Int@j:	
  5022                           ; 1 bytes @ 0xF
  5023                           
  5024                           
  5025                           ; 2 bytes @ 0xF
  5026  002F                     	ds	1
  5027  0030                     ?___ftdiv:	
  5028  0030                     ___ftdiv@f2:	
  5029                           ; 3 bytes @ 0x10
  5030                           
  5031                           
  5032                           ; 3 bytes @ 0x10
  5033  0030                     	ds	1
  5034  0031                     LCD_Write_Int@i:	
  5035                           
  5036                           ; 2 bytes @ 0x11
  5037  0031                     	ds	2
  5038  0033                     ___ftdiv@f1:	
  5039                           
  5040                           ; 3 bytes @ 0x13
  5041  0033                     	ds	3
  5042  0036                     ??___ftdiv:	
  5043                           
  5044                           ; 1 bytes @ 0x16
  5045  0036                     	ds	4
  5046  003A                     ___ftdiv@cntr:	
  5047                           
  5048                           ; 1 bytes @ 0x1A
  5049  003A                     	ds	1
  5050  003B                     ___ftdiv@f3:	
  5051                           
  5052                           ; 3 bytes @ 0x1B
  5053  003B                     	ds	3
  5054  003E                     ___ftdiv@exp:	
  5055                           
  5056                           ; 1 bytes @ 0x1E
  5057  003E                     	ds	1
  5058  003F                     ___ftdiv@sign:	
  5059                           
  5060                           ; 1 bytes @ 0x1F
  5061  003F                     	ds	1
  5062  0040                     ?___ftadd:	
  5063  0040                     ___ftadd@f1:	
  5064                           ; 3 bytes @ 0x20
  5065                           
  5066                           
  5067                           ; 3 bytes @ 0x20
  5068  0040                     	ds	3
  5069  0043                     ___ftadd@f2:	
  5070                           
  5071                           ; 3 bytes @ 0x23
  5072  0043                     	ds	3
  5073  0046                     ??___ftadd:	
  5074                           
  5075                           ; 1 bytes @ 0x26
  5076  0046                     	ds	4
  5077  004A                     ___ftadd@sign:	
  5078                           
  5079                           ; 1 bytes @ 0x2A
  5080  004A                     	ds	1
  5081  004B                     ___ftadd@exp2:	
  5082                           
  5083                           ; 1 bytes @ 0x2B
  5084  004B                     	ds	1
  5085  004C                     ___ftadd@exp1:	
  5086                           
  5087                           ; 1 bytes @ 0x2C
  5088  004C                     	ds	1
  5089  004D                     ?_eval_poly:	
  5090  004D                     ?___ftsub:	
  5091                           ; 3 bytes @ 0x2D
  5092                           
  5093  004D                     ___ftsub@f2:	
  5094                           ; 3 bytes @ 0x2D
  5095                           
  5096  004D                     eval_poly@x:	
  5097                           ; 3 bytes @ 0x2D
  5098                           
  5099                           
  5100                           ; 3 bytes @ 0x2D
  5101  004D                     	ds	3
  5102  0050                     eval_poly@d:	
  5103  0050                     ___ftsub@f1:	
  5104                           ; 2 bytes @ 0x30
  5105                           
  5106                           
  5107                           ; 3 bytes @ 0x30
  5108  0050                     	ds	2
  5109  0052                     eval_poly@n:	
  5110                           
  5111                           ; 2 bytes @ 0x32
  5112  0052                     	ds	2
  5113  0054                     eval_poly@res:	
  5114                           
  5115                           ; 3 bytes @ 0x34
  5116  0054                     	ds	3
  5117  0057                     ?_log:	
  5118  0057                     log@x:	
  5119                           ; 3 bytes @ 0x37
  5120                           
  5121                           
  5122                           ; 3 bytes @ 0x37
  5123  0057                     	ds	3
  5124  005A                     ??_log:	
  5125                           
  5126                           ; 1 bytes @ 0x3A
  5127  005A                     	ds	1
  5128  005B                     log@exponent:	
  5129                           
  5130                           ; 2 bytes @ 0x3B
  5131  005B                     	ds	2
  5132  005D                     ?_tempCalc:	
  5133  005D                     tempCalc@analogValue:	
  5134                           ; 3 bytes @ 0x3D
  5135                           
  5136                           
  5137                           ; 2 bytes @ 0x3D
  5138  005D                     	ds	3
  5139  0060                     tempCalc@R:	
  5140                           
  5141                           ; 3 bytes @ 0x40
  5142  0060                     	ds	3
  5143  0063                     _tempCalc$988:	
  5144                           
  5145                           ; 3 bytes @ 0x43
  5146  0063                     	ds	3
  5147  0066                     tempCalc@steinhart:	
  5148                           
  5149                           ; 3 bytes @ 0x46
  5150  0066                     	ds	3
  5151  0069                     ??_main:	
  5152                           
  5153                           ; 1 bytes @ 0x49
  5154  0069                     	ds	3
  5155                           
  5156                           	psect	maintext
  5157  0133                     __pmaintext:	
  5158 ;;
  5159 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  5160 ;;
  5161 ;; *************** function _main *****************
  5162 ;; Defined at:
  5163 ;;		line 15 in file "main.c"
  5164 ;; Parameters:    Size  Location     Type
  5165 ;;		None
  5166 ;; Auto vars:     Size  Location     Type
  5167 ;;  analogs        12    5[BANK1 ] unsigned int [6]
  5168 ;;  displayTemp2    3   22[BANK1 ] float 
  5169 ;;  displayTemp     3   19[BANK1 ] float 
  5170 ;;  dutyCycle       2   30[BANK1 ] unsigned int 
  5171 ;;  bCount          2   17[BANK1 ] unsigned int 
  5172 ;;  x               1   29[BANK1 ] unsigned char 
  5173 ;;  C_or_F          1   28[BANK1 ] unsigned char 
  5174 ;;  choice          1   27[BANK1 ] unsigned char 
  5175 ;;  tPadCount       1   26[BANK1 ] unsigned char 
  5176 ;;  resetDelay      1   25[BANK1 ] unsigned char 
  5177 ;;  startDelay      1    4[BANK1 ] unsigned char 
  5178 ;;  loop            1    3[BANK1 ] unsigned char 
  5179 ;; Return value:  Size  Location     Type
  5180 ;;                  1    wreg      void 
  5181 ;; Registers used:
  5182 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5183 ;; Tracked objects:
  5184 ;;		On entry : B1F/0
  5185 ;;		On exit  : 0/0
  5186 ;;		Unchanged: 0/0
  5187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5189 ;;      Locals:         0       0      32       0       0       0       0       0       0       0       0       0       
      +0       0
  5190 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5191 ;;      Totals:         0       3      32       0       0       0       0       0       0       0       0       0       
      +0       0
  5192 ;;Total ram usage:       35 bytes
  5193 ;; Hardware stack levels required when called:    5
  5194 ;; This function calls:
  5195 ;;		_ADCRead
  5196 ;;		_LCD_Clear
  5197 ;;		_LCD_Set_Cursor
  5198 ;;		_LCD_Write_Char
  5199 ;;		_LCD_Write_Int
  5200 ;;		_LCD_Write_String
  5201 ;;		_PWM6_LoadDutyValue
  5202 ;;		_SYSTEM_Initialize
  5203 ;;		___ftadd
  5204 ;;		___ftdiv
  5205 ;;		___ftmul
  5206 ;;		___fttol
  5207 ;;		___lwdiv
  5208 ;;		_readAnalog
  5209 ;;		_tempCalc
  5210 ;; This function is called by:
  5211 ;;		Startup code after reset
  5212 ;; This function uses a non-reentrant model
  5213 ;;
  5214                           
  5215                           
  5216                           ;psect for function _main
  5217  0133                     _main:	
  5218                           
  5219                           ;main.c: 17: SYSTEM_Initialize();
  5220                           
  5221                           ;incstack = 0
  5222                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5223  0133  3197  27BE  3181   	fcall	_SYSTEM_Initialize
  5224                           
  5225                           ;main.c: 19: uint16_t analogs[6] = {0};
  5226  0136  3030               	movlw	low main@F13657
  5227  0137  0086               	movwf	6
  5228  0138  3001               	movlw	high main@F13657
  5229  0139  0087               	movwf	7
  5230  013A  30A5               	movlw	low main@analogs
  5231  013B  0084               	movwf	4
  5232  013C  3000               	movlw	high main@analogs
  5233  013D  0085               	movwf	5
  5234  013E  300C               	movlw	12
  5235  013F  0020               	movlb	0	; select bank0
  5236  0140  00E9               	movwf	??_main
  5237  0141                     u3210:	
  5238  0141  0016               	moviw fsr1++
  5239  0142  001A               	movwi fsr0++
  5240  0143  0BE9               	decfsz	??_main,f
  5241  0144  2941               	goto	u3210
  5242                           
  5243                           ;main.c: 21: float displayTemp, displayTemp2;
  5244                           ;main.c: 25: char x = 0;
  5245  0145  0021               	movlb	1	; select bank1
  5246  0146  01BD               	clrf	main@x^(0+128)
  5247                           
  5248                           ;main.c: 27: char loop = 64;
  5249  0147  3040               	movlw	64
  5250  0148  0020               	movlb	0	; select bank0
  5251  0149  00E9               	movwf	??_main
  5252  014A  0869               	movf	??_main,w
  5253  014B  0021               	movlb	1	; select bank1
  5254  014C  00A3               	movwf	main@loop^(0+128)
  5255                           
  5256                           ;main.c: 29: char choice = 2;
  5257  014D  3002               	movlw	2
  5258  014E  0020               	movlb	0	; select bank0
  5259  014F  00E9               	movwf	??_main
  5260  0150  0869               	movf	??_main,w
  5261  0151  0021               	movlb	1	; select bank1
  5262  0152  00BB               	movwf	main@choice^(0+128)
  5263                           
  5264                           ;main.c: 31: char C_or_F = 1;
  5265  0153  01BC               	clrf	main@C_or_F^(0+128)
  5266  0154  0ABC               	incf	main@C_or_F^(0+128),f
  5267                           
  5268                           ;main.c: 33: unsigned int bCount = 0;
  5269  0155  01B1               	clrf	main@bCount^(0+128)
  5270  0156  01B2               	clrf	(main@bCount+1)^(0+128)
  5271                           
  5272                           ;main.c: 35: unsigned char startDelay= 0;
  5273  0157  01A4               	clrf	main@startDelay^(0+128)
  5274                           
  5275                           ;main.c: 37: unsigned char resetDelay= 0;
  5276  0158  01B9               	clrf	main@resetDelay^(0+128)
  5277                           
  5278                           ;main.c: 39: unsigned char tPadCount = 10;
  5279  0159  300A               	movlw	10
  5280  015A  0020               	movlb	0	; select bank0
  5281  015B  00E9               	movwf	??_main
  5282  015C  0869               	movf	??_main,w
  5283  015D  0021               	movlb	1	; select bank1
  5284  015E  00BA               	movwf	main@tPadCount^(0+128)
  5285                           
  5286                           ;main.c: 42: uint16_t dutyCycle = 1023;
  5287  015F  30FF               	movlw	255
  5288  0160  00BE               	movwf	main@dutyCycle^(0+128)
  5289  0161  3003               	movlw	3
  5290  0162  00BF               	movwf	(main@dutyCycle^(0+128)+1)
  5291                           
  5292                           ;main.c: 44: PWM6_LoadDutyValue(dutyCycle);
  5293  0163  083F               	movf	(main@dutyCycle+1)^(0+128),w
  5294  0164  00F1               	movwf	PWM6_LoadDutyValue@dutyCycle+1
  5295  0165  083E               	movf	main@dutyCycle^(0+128),w
  5296  0166  00F0               	movwf	PWM6_LoadDutyValue@dutyCycle
  5297  0167  3195  25F4  3181   	fcall	_PWM6_LoadDutyValue
  5298                           
  5299                           ;main.c: 46: _delay((unsigned long)((300)*(32000000/4000.0)));
  5300  016A  300D               	movlw	13
  5301  016B  0020               	movlb	0	; select bank0
  5302  016C  00EB               	movwf	??_main+2
  5303  016D  302D               	movlw	45
  5304  016E  00EA               	movwf	??_main+1
  5305  016F  30E2               	movlw	226
  5306  0170  00E9               	movwf	??_main
  5307  0171                     u3497:	
  5308  0171  0BE9               	decfsz	??_main,f
  5309  0172  2971               	goto	u3497
  5310  0173  0BEA               	decfsz	??_main+1,f
  5311  0174  2971               	goto	u3497
  5312  0175  0BEB               	decfsz	??_main+2,f
  5313  0176  2971               	goto	u3497
  5314  0177  3200               	nop2
  5315                           
  5316                           ;main.c: 48: LCD_Clear();
  5317  0178  3195  2574  3181   	fcall	_LCD_Clear
  5318                           
  5319                           ;main.c: 50: { LCD_Set_Cursor(2,0); LCD_Write_String("A");};
  5320  017B  01F4               	clrf	LCD_Set_Cursor@y
  5321  017C  3002               	movlw	2
  5322  017D  3197  277F  3181   	fcall	_LCD_Set_Cursor
  5323  0180  3063               	movlw	low (STR_1| (0+32768))
  5324  0181  00F5               	movwf	LCD_Write_String@a
  5325  0182  3090               	movlw	high (STR_1| (0+32768))
  5326  0183  00F6               	movwf	LCD_Write_String@a+1
  5327  0184  3196  2622  3181   	fcall	_LCD_Write_String
  5328                           
  5329                           ;main.c: 51: _delay((unsigned long)((200)*(32000000/4000.0)));
  5330  0187  3009               	movlw	9
  5331  0188  0020               	movlb	0	; select bank0
  5332  0189  00EB               	movwf	??_main+2
  5333  018A  301E               	movlw	30
  5334  018B  00EA               	movwf	??_main+1
  5335  018C  30EB               	movlw	235
  5336  018D  00E9               	movwf	??_main
  5337  018E                     u3507:	
  5338  018E  0BE9               	decfsz	??_main,f
  5339  018F  298E               	goto	u3507
  5340  0190  0BEA               	decfsz	??_main+1,f
  5341  0191  298E               	goto	u3507
  5342  0192  0BEB               	decfsz	??_main+2,f
  5343  0193  298E               	goto	u3507
  5344  0194  0000               	nop
  5345                           
  5346                           ;main.c: 52: LCD_Write_String("L");
  5347  0195  306F               	movlw	low (STR_2| (0+32768))
  5348  0196  00F5               	movwf	LCD_Write_String@a
  5349  0197  3090               	movlw	high (STR_2| (0+32768))
  5350  0198  00F6               	movwf	LCD_Write_String@a+1
  5351  0199  3196  2622  3181   	fcall	_LCD_Write_String
  5352                           
  5353                           ;main.c: 53: _delay((unsigned long)((200)*(32000000/4000.0)));
  5354  019C  3009               	movlw	9
  5355  019D  0020               	movlb	0	; select bank0
  5356  019E  00EB               	movwf	??_main+2
  5357  019F  301E               	movlw	30
  5358  01A0  00EA               	movwf	??_main+1
  5359  01A1  30EB               	movlw	235
  5360  01A2  00E9               	movwf	??_main
  5361  01A3                     u3517:	
  5362  01A3  0BE9               	decfsz	??_main,f
  5363  01A4  29A3               	goto	u3517
  5364  01A5  0BEA               	decfsz	??_main+1,f
  5365  01A6  29A3               	goto	u3517
  5366  01A7  0BEB               	decfsz	??_main+2,f
  5367  01A8  29A3               	goto	u3517
  5368  01A9  0000               	nop
  5369                           
  5370                           ;main.c: 54: LCD_Write_String("O");
  5371  01AA  3071               	movlw	low (STR_3| (0+32768))
  5372  01AB  00F5               	movwf	LCD_Write_String@a
  5373  01AC  3090               	movlw	high (STR_3| (0+32768))
  5374  01AD  00F6               	movwf	LCD_Write_String@a+1
  5375  01AE  3196  2622  3181   	fcall	_LCD_Write_String
  5376                           
  5377                           ;main.c: 55: _delay((unsigned long)((200)*(32000000/4000.0)));
  5378  01B1  3009               	movlw	9
  5379  01B2  0020               	movlb	0	; select bank0
  5380  01B3  00EB               	movwf	??_main+2
  5381  01B4  301E               	movlw	30
  5382  01B5  00EA               	movwf	??_main+1
  5383  01B6  30EB               	movlw	235
  5384  01B7  00E9               	movwf	??_main
  5385  01B8                     u3527:	
  5386  01B8  0BE9               	decfsz	??_main,f
  5387  01B9  29B8               	goto	u3527
  5388  01BA  0BEA               	decfsz	??_main+1,f
  5389  01BB  29B8               	goto	u3527
  5390  01BC  0BEB               	decfsz	??_main+2,f
  5391  01BD  29B8               	goto	u3527
  5392  01BE  0000               	nop
  5393                           
  5394                           ;main.c: 56: LCD_Write_String("H");
  5395  01BF  3069               	movlw	low (STR_4| (0+32768))
  5396  01C0  00F5               	movwf	LCD_Write_String@a
  5397  01C1  3090               	movlw	high (STR_4| (0+32768))
  5398  01C2  00F6               	movwf	LCD_Write_String@a+1
  5399  01C3  3196  2622  3181   	fcall	_LCD_Write_String
  5400                           
  5401                           ;main.c: 57: _delay((unsigned long)((200)*(32000000/4000.0)));
  5402  01C6  3009               	movlw	9
  5403  01C7  0020               	movlb	0	; select bank0
  5404  01C8  00EB               	movwf	??_main+2
  5405  01C9  301E               	movlw	30
  5406  01CA  00EA               	movwf	??_main+1
  5407  01CB  30EB               	movlw	235
  5408  01CC  00E9               	movwf	??_main
  5409  01CD                     u3537:	
  5410  01CD  0BE9               	decfsz	??_main,f
  5411  01CE  29CD               	goto	u3537
  5412  01CF  0BEA               	decfsz	??_main+1,f
  5413  01D0  29CD               	goto	u3537
  5414  01D1  0BEB               	decfsz	??_main+2,f
  5415  01D2  29CD               	goto	u3537
  5416  01D3  0000               	nop
  5417                           
  5418                           ;main.c: 58: LCD_Write_String("A");
  5419  01D4  3063               	movlw	low (STR_1| (0+32768))
  5420  01D5  00F5               	movwf	LCD_Write_String@a
  5421  01D6  3090               	movlw	high (STR_1| (0+32768))
  5422  01D7  00F6               	movwf	LCD_Write_String@a+1
  5423  01D8  3196  2622  3181   	fcall	_LCD_Write_String
  5424                           
  5425                           ;main.c: 59: _delay((unsigned long)((200)*(32000000/4000.0)));
  5426  01DB  3009               	movlw	9
  5427  01DC  0020               	movlb	0	; select bank0
  5428  01DD  00EB               	movwf	??_main+2
  5429  01DE  301E               	movlw	30
  5430  01DF  00EA               	movwf	??_main+1
  5431  01E0  30EB               	movlw	235
  5432  01E1  00E9               	movwf	??_main
  5433  01E2                     u3547:	
  5434  01E2  0BE9               	decfsz	??_main,f
  5435  01E3  29E2               	goto	u3547
  5436  01E4  0BEA               	decfsz	??_main+1,f
  5437  01E5  29E2               	goto	u3547
  5438  01E6  0BEB               	decfsz	??_main+2,f
  5439  01E7  29E2               	goto	u3547
  5440  01E8  0000               	nop
  5441                           
  5442                           ;main.c: 60: LCD_Write_String(" ");
  5443  01E9  3035               	movlw	low ((STR_27+9)| (0+32768))
  5444  01EA  00F5               	movwf	LCD_Write_String@a
  5445  01EB  3090               	movlw	high ((STR_27+9)| (0+32768))
  5446  01EC  00F6               	movwf	LCD_Write_String@a+1
  5447  01ED  3196  2622  3181   	fcall	_LCD_Write_String
  5448                           
  5449                           ;main.c: 61: _delay((unsigned long)((200)*(32000000/4000.0)));
  5450  01F0  3009               	movlw	9
  5451  01F1  0020               	movlb	0	; select bank0
  5452  01F2  00EB               	movwf	??_main+2
  5453  01F3  301E               	movlw	30
  5454  01F4  00EA               	movwf	??_main+1
  5455  01F5  30EB               	movlw	235
  5456  01F6  00E9               	movwf	??_main
  5457  01F7                     u3557:	
  5458  01F7  0BE9               	decfsz	??_main,f
  5459  01F8  29F7               	goto	u3557
  5460  01F9  0BEA               	decfsz	??_main+1,f
  5461  01FA  29F7               	goto	u3557
  5462  01FB  0BEB               	decfsz	??_main+2,f
  5463  01FC  29F7               	goto	u3557
  5464  01FD  0000               	nop
  5465                           
  5466                           ;main.c: 62: LCD_Write_String("D");
  5467  01FE  3065               	movlw	low (STR_7| (0+32768))
  5468  01FF  00F5               	movwf	LCD_Write_String@a
  5469  0200  3090               	movlw	high (STR_7| (0+32768))
  5470  0201  00F6               	movwf	LCD_Write_String@a+1
  5471  0202  3196  2622  3181   	fcall	_LCD_Write_String
  5472                           
  5473                           ;main.c: 63: _delay((unsigned long)((200)*(32000000/4000.0)));
  5474  0205  3009               	movlw	9
  5475  0206  0020               	movlb	0	; select bank0
  5476  0207  00EB               	movwf	??_main+2
  5477  0208  301E               	movlw	30
  5478  0209  00EA               	movwf	??_main+1
  5479  020A  30EB               	movlw	235
  5480  020B  00E9               	movwf	??_main
  5481  020C                     u3567:	
  5482  020C  0BE9               	decfsz	??_main,f
  5483  020D  2A0C               	goto	u3567
  5484  020E  0BEA               	decfsz	??_main+1,f
  5485  020F  2A0C               	goto	u3567
  5486  0210  0BEB               	decfsz	??_main+2,f
  5487  0211  2A0C               	goto	u3567
  5488  0212  0000               	nop
  5489                           
  5490                           ;main.c: 64: LCD_Write_String("A");
  5491  0213  3063               	movlw	low (STR_1| (0+32768))
  5492  0214  00F5               	movwf	LCD_Write_String@a
  5493  0215  3090               	movlw	high (STR_1| (0+32768))
  5494  0216  00F6               	movwf	LCD_Write_String@a+1
  5495  0217  3196  2622  3181   	fcall	_LCD_Write_String
  5496                           
  5497                           ;main.c: 65: _delay((unsigned long)((200)*(32000000/4000.0)));
  5498  021A  3009               	movlw	9
  5499  021B  0020               	movlb	0	; select bank0
  5500  021C  00EB               	movwf	??_main+2
  5501  021D  301E               	movlw	30
  5502  021E  00EA               	movwf	??_main+1
  5503  021F  30EB               	movlw	235
  5504  0220  00E9               	movwf	??_main
  5505  0221                     u3577:	
  5506  0221  0BE9               	decfsz	??_main,f
  5507  0222  2A21               	goto	u3577
  5508  0223  0BEA               	decfsz	??_main+1,f
  5509  0224  2A21               	goto	u3577
  5510  0225  0BEB               	decfsz	??_main+2,f
  5511  0226  2A21               	goto	u3577
  5512  0227  0000               	nop
  5513                           
  5514                           ;main.c: 66: LCD_Write_String("V");
  5515  0228  3077               	movlw	low (STR_9| (0+32768))
  5516  0229  00F5               	movwf	LCD_Write_String@a
  5517  022A  3090               	movlw	high (STR_9| (0+32768))
  5518  022B  00F6               	movwf	LCD_Write_String@a+1
  5519  022C  3196  2622  3181   	fcall	_LCD_Write_String
  5520                           
  5521                           ;main.c: 67: _delay((unsigned long)((200)*(32000000/4000.0)));
  5522  022F  3009               	movlw	9
  5523  0230  0020               	movlb	0	; select bank0
  5524  0231  00EB               	movwf	??_main+2
  5525  0232  301E               	movlw	30
  5526  0233  00EA               	movwf	??_main+1
  5527  0234  30EB               	movlw	235
  5528  0235  00E9               	movwf	??_main
  5529  0236                     u3587:	
  5530  0236  0BE9               	decfsz	??_main,f
  5531  0237  2A36               	goto	u3587
  5532  0238  0BEA               	decfsz	??_main+1,f
  5533  0239  2A36               	goto	u3587
  5534  023A  0BEB               	decfsz	??_main+2,f
  5535  023B  2A36               	goto	u3587
  5536  023C  0000               	nop
  5537                           
  5538                           ;main.c: 68: LCD_Write_String("I");
  5539  023D  306B               	movlw	low (STR_10| (0+32768))
  5540  023E  00F5               	movwf	LCD_Write_String@a
  5541  023F  3090               	movlw	high (STR_10| (0+32768))
  5542  0240  00F6               	movwf	LCD_Write_String@a+1
  5543  0241  3196  2622  3181   	fcall	_LCD_Write_String
  5544                           
  5545                           ;main.c: 69: _delay((unsigned long)((200)*(32000000/4000.0)));
  5546  0244  3009               	movlw	9
  5547  0245  0020               	movlb	0	; select bank0
  5548  0246  00EB               	movwf	??_main+2
  5549  0247  301E               	movlw	30
  5550  0248  00EA               	movwf	??_main+1
  5551  0249  30EB               	movlw	235
  5552  024A  00E9               	movwf	??_main
  5553  024B                     u3597:	
  5554  024B  0BE9               	decfsz	??_main,f
  5555  024C  2A4B               	goto	u3597
  5556  024D  0BEA               	decfsz	??_main+1,f
  5557  024E  2A4B               	goto	u3597
  5558  024F  0BEB               	decfsz	??_main+2,f
  5559  0250  2A4B               	goto	u3597
  5560  0251  0000               	nop
  5561                           
  5562                           ;main.c: 70: LCD_Write_String("D");
  5563  0252  3065               	movlw	low (STR_7| (0+32768))
  5564  0253  00F5               	movwf	LCD_Write_String@a
  5565  0254  3090               	movlw	high (STR_7| (0+32768))
  5566  0255  00F6               	movwf	LCD_Write_String@a+1
  5567  0256  3196  2622  3181   	fcall	_LCD_Write_String
  5568                           
  5569                           ;main.c: 71: _delay((unsigned long)((200)*(32000000/4000.0)));
  5570  0259  3009               	movlw	9
  5571  025A  0020               	movlb	0	; select bank0
  5572  025B  00EB               	movwf	??_main+2
  5573  025C  301E               	movlw	30
  5574  025D  00EA               	movwf	??_main+1
  5575  025E  30EB               	movlw	235
  5576  025F  00E9               	movwf	??_main
  5577  0260                     u3607:	
  5578  0260  0BE9               	decfsz	??_main,f
  5579  0261  2A60               	goto	u3607
  5580  0262  0BEA               	decfsz	??_main+1,f
  5581  0263  2A60               	goto	u3607
  5582  0264  0BEB               	decfsz	??_main+2,f
  5583  0265  2A60               	goto	u3607
  5584  0266  0000               	nop
  5585                           
  5586                           ;main.c: 72: LCD_Write_String(",");
  5587  0267  3061               	movlw	low (STR_12| (0+32768))
  5588  0268  00F5               	movwf	LCD_Write_String@a
  5589  0269  3090               	movlw	high (STR_12| (0+32768))
  5590  026A  00F6               	movwf	LCD_Write_String@a+1
  5591  026B  3196  2622  3181   	fcall	_LCD_Write_String
  5592                           
  5593                           ;main.c: 73: _delay((unsigned long)((200)*(32000000/4000.0)));
  5594  026E  3009               	movlw	9
  5595  026F  0020               	movlb	0	; select bank0
  5596  0270  00EB               	movwf	??_main+2
  5597  0271  301E               	movlw	30
  5598  0272  00EA               	movwf	??_main+1
  5599  0273  30EB               	movlw	235
  5600  0274  00E9               	movwf	??_main
  5601  0275                     u3617:	
  5602  0275  0BE9               	decfsz	??_main,f
  5603  0276  2A75               	goto	u3617
  5604  0277  0BEA               	decfsz	??_main+1,f
  5605  0278  2A75               	goto	u3617
  5606  0279  0BEB               	decfsz	??_main+2,f
  5607  027A  2A75               	goto	u3617
  5608  027B  0000               	nop
  5609                           
  5610                           ;main.c: 74: { LCD_Set_Cursor(1,1); LCD_Write_String("S");};
  5611  027C  01F4               	clrf	LCD_Set_Cursor@y
  5612  027D  0AF4               	incf	LCD_Set_Cursor@y,f
  5613  027E  3001               	movlw	1
  5614  027F  3197  277F  3181   	fcall	_LCD_Set_Cursor
  5615  0282  3075               	movlw	low (STR_13| (0+32768))
  5616  0283  00F5               	movwf	LCD_Write_String@a
  5617  0284  3090               	movlw	high (STR_13| (0+32768))
  5618  0285  00F6               	movwf	LCD_Write_String@a+1
  5619  0286  3196  2622  3181   	fcall	_LCD_Write_String
  5620                           
  5621                           ;main.c: 75: _delay((unsigned long)((200)*(32000000/4000.0)));
  5622  0289  3009               	movlw	9
  5623  028A  0020               	movlb	0	; select bank0
  5624  028B  00EB               	movwf	??_main+2
  5625  028C  301E               	movlw	30
  5626  028D  00EA               	movwf	??_main+1
  5627  028E  30EB               	movlw	235
  5628  028F  00E9               	movwf	??_main
  5629  0290                     u3627:	
  5630  0290  0BE9               	decfsz	??_main,f
  5631  0291  2A90               	goto	u3627
  5632  0292  0BEA               	decfsz	??_main+1,f
  5633  0293  2A90               	goto	u3627
  5634  0294  0BEB               	decfsz	??_main+2,f
  5635  0295  2A90               	goto	u3627
  5636  0296  0000               	nop
  5637                           
  5638                           ;main.c: 76: LCD_Write_String("O");
  5639  0297  3071               	movlw	low (STR_3| (0+32768))
  5640  0298  00F5               	movwf	LCD_Write_String@a
  5641  0299  3090               	movlw	high (STR_3| (0+32768))
  5642  029A  00F6               	movwf	LCD_Write_String@a+1
  5643  029B  3196  2622  3181   	fcall	_LCD_Write_String
  5644                           
  5645                           ;main.c: 77: _delay((unsigned long)((200)*(32000000/4000.0)));
  5646  029E  3009               	movlw	9
  5647  029F  0020               	movlb	0	; select bank0
  5648  02A0  00EB               	movwf	??_main+2
  5649  02A1  301E               	movlw	30
  5650  02A2  00EA               	movwf	??_main+1
  5651  02A3  30EB               	movlw	235
  5652  02A4  00E9               	movwf	??_main
  5653  02A5                     u3637:	
  5654  02A5  0BE9               	decfsz	??_main,f
  5655  02A6  2AA5               	goto	u3637
  5656  02A7  0BEA               	decfsz	??_main+1,f
  5657  02A8  2AA5               	goto	u3637
  5658  02A9  0BEB               	decfsz	??_main+2,f
  5659  02AA  2AA5               	goto	u3637
  5660  02AB  0000               	nop
  5661                           
  5662                           ;main.c: 78: LCD_Write_String("P");
  5663  02AC  3073               	movlw	low (STR_15| (0+32768))
  5664  02AD  00F5               	movwf	LCD_Write_String@a
  5665  02AE  3090               	movlw	high (STR_15| (0+32768))
  5666  02AF  00F6               	movwf	LCD_Write_String@a+1
  5667  02B0  3196  2622  3181   	fcall	_LCD_Write_String
  5668                           
  5669                           ;main.c: 79: _delay((unsigned long)((200)*(32000000/4000.0)));
  5670  02B3  3009               	movlw	9
  5671  02B4  0020               	movlb	0	; select bank0
  5672  02B5  00EB               	movwf	??_main+2
  5673  02B6  301E               	movlw	30
  5674  02B7  00EA               	movwf	??_main+1
  5675  02B8  30EB               	movlw	235
  5676  02B9  00E9               	movwf	??_main
  5677  02BA                     u3647:	
  5678  02BA  0BE9               	decfsz	??_main,f
  5679  02BB  2ABA               	goto	u3647
  5680  02BC  0BEA               	decfsz	??_main+1,f
  5681  02BD  2ABA               	goto	u3647
  5682  02BE  0BEB               	decfsz	??_main+2,f
  5683  02BF  2ABA               	goto	u3647
  5684  02C0  0000               	nop
  5685                           
  5686                           ;main.c: 80: LCD_Write_String("H");
  5687  02C1  3069               	movlw	low (STR_4| (0+32768))
  5688  02C2  00F5               	movwf	LCD_Write_String@a
  5689  02C3  3090               	movlw	high (STR_4| (0+32768))
  5690  02C4  00F6               	movwf	LCD_Write_String@a+1
  5691  02C5  3196  2622  3181   	fcall	_LCD_Write_String
  5692                           
  5693                           ;main.c: 81: _delay((unsigned long)((200)*(32000000/4000.0)));
  5694  02C8  3009               	movlw	9
  5695  02C9  0020               	movlb	0	; select bank0
  5696  02CA  00EB               	movwf	??_main+2
  5697  02CB  301E               	movlw	30
  5698  02CC  00EA               	movwf	??_main+1
  5699  02CD  30EB               	movlw	235
  5700  02CE  00E9               	movwf	??_main
  5701  02CF                     u3657:	
  5702  02CF  0BE9               	decfsz	??_main,f
  5703  02D0  2ACF               	goto	u3657
  5704  02D1  0BEA               	decfsz	??_main+1,f
  5705  02D2  2ACF               	goto	u3657
  5706  02D3  0BEB               	decfsz	??_main+2,f
  5707  02D4  2ACF               	goto	u3657
  5708  02D5  0000               	nop
  5709                           
  5710                           ;main.c: 82: LCD_Write_String("I");
  5711  02D6  306B               	movlw	low (STR_10| (0+32768))
  5712  02D7  00F5               	movwf	LCD_Write_String@a
  5713  02D8  3090               	movlw	high (STR_10| (0+32768))
  5714  02D9  00F6               	movwf	LCD_Write_String@a+1
  5715  02DA  3196  2622  3181   	fcall	_LCD_Write_String
  5716                           
  5717                           ;main.c: 83: _delay((unsigned long)((200)*(32000000/4000.0)));
  5718  02DD  3009               	movlw	9
  5719  02DE  0020               	movlb	0	; select bank0
  5720  02DF  00EB               	movwf	??_main+2
  5721  02E0  301E               	movlw	30
  5722  02E1  00EA               	movwf	??_main+1
  5723  02E2  30EB               	movlw	235
  5724  02E3  00E9               	movwf	??_main
  5725  02E4                     u3667:	
  5726  02E4  0BE9               	decfsz	??_main,f
  5727  02E5  2AE4               	goto	u3667
  5728  02E6  0BEA               	decfsz	??_main+1,f
  5729  02E7  2AE4               	goto	u3667
  5730  02E8  0BEB               	decfsz	??_main+2,f
  5731  02E9  2AE4               	goto	u3667
  5732  02EA  0000               	nop
  5733                           
  5734                           ;main.c: 84: LCD_Write_String("E");
  5735  02EB  3067               	movlw	low (STR_18| (0+32768))
  5736  02EC  00F5               	movwf	LCD_Write_String@a
  5737  02ED  3090               	movlw	high (STR_18| (0+32768))
  5738  02EE  00F6               	movwf	LCD_Write_String@a+1
  5739  02EF  3196  2622  3181   	fcall	_LCD_Write_String
  5740                           
  5741                           ;main.c: 85: _delay((unsigned long)((200)*(32000000/4000.0)));
  5742  02F2  3009               	movlw	9
  5743  02F3  0020               	movlb	0	; select bank0
  5744  02F4  00EB               	movwf	??_main+2
  5745  02F5  301E               	movlw	30
  5746  02F6  00EA               	movwf	??_main+1
  5747  02F7  30EB               	movlw	235
  5748  02F8  00E9               	movwf	??_main
  5749  02F9                     u3677:	
  5750  02F9  0BE9               	decfsz	??_main,f
  5751  02FA  2AF9               	goto	u3677
  5752  02FB  0BEA               	decfsz	??_main+1,f
  5753  02FC  2AF9               	goto	u3677
  5754  02FD  0BEB               	decfsz	??_main+2,f
  5755  02FE  2AF9               	goto	u3677
  5756  02FF  0000               	nop
  5757                           
  5758                           ;main.c: 86: LCD_Write_String(" ");
  5759  0300  3035               	movlw	low ((STR_27+9)| (0+32768))
  5760  0301  00F5               	movwf	LCD_Write_String@a
  5761  0302  3090               	movlw	high ((STR_27+9)| (0+32768))
  5762  0303  00F6               	movwf	LCD_Write_String@a+1
  5763  0304  3196  2622  3181   	fcall	_LCD_Write_String
  5764                           
  5765                           ;main.c: 87: _delay((unsigned long)((200)*(32000000/4000.0)));
  5766  0307  3009               	movlw	9
  5767  0308  0020               	movlb	0	; select bank0
  5768  0309  00EB               	movwf	??_main+2
  5769  030A  301E               	movlw	30
  5770  030B  00EA               	movwf	??_main+1
  5771  030C  30EB               	movlw	235
  5772  030D  00E9               	movwf	??_main
  5773  030E                     u3687:	
  5774  030E  0BE9               	decfsz	??_main,f
  5775  030F  2B0E               	goto	u3687
  5776  0310  0BEA               	decfsz	??_main+1,f
  5777  0311  2B0E               	goto	u3687
  5778  0312  0BEB               	decfsz	??_main+2,f
  5779  0313  2B0E               	goto	u3687
  5780  0314  0000               	nop
  5781                           
  5782                           ;main.c: 88: LCD_Write_String("&");
  5783  0315  305F               	movlw	low (STR_20| (0+32768))
  5784  0316  00F5               	movwf	LCD_Write_String@a
  5785  0317  3090               	movlw	high (STR_20| (0+32768))
  5786  0318  00F6               	movwf	LCD_Write_String@a+1
  5787  0319  3196  2622  3181   	fcall	_LCD_Write_String
  5788                           
  5789                           ;main.c: 89: _delay((unsigned long)((200)*(32000000/4000.0)));
  5790  031C  3009               	movlw	9
  5791  031D  0020               	movlb	0	; select bank0
  5792  031E  00EB               	movwf	??_main+2
  5793  031F  301E               	movlw	30
  5794  0320  00EA               	movwf	??_main+1
  5795  0321  30EB               	movlw	235
  5796  0322  00E9               	movwf	??_main
  5797  0323                     u3697:	
  5798  0323  0BE9               	decfsz	??_main,f
  5799  0324  2B23               	goto	u3697
  5800  0325  0BEA               	decfsz	??_main+1,f
  5801  0326  2B23               	goto	u3697
  5802  0327  0BEB               	decfsz	??_main+2,f
  5803  0328  2B23               	goto	u3697
  5804  0329  0000               	nop
  5805                           
  5806                           ;main.c: 90: LCD_Write_String(" ");
  5807  032A  3035               	movlw	low ((STR_27+9)| (0+32768))
  5808  032B  00F5               	movwf	LCD_Write_String@a
  5809  032C  3090               	movlw	high ((STR_27+9)| (0+32768))
  5810  032D  00F6               	movwf	LCD_Write_String@a+1
  5811  032E  3196  2622  3181   	fcall	_LCD_Write_String
  5812                           
  5813                           ;main.c: 91: _delay((unsigned long)((200)*(32000000/4000.0)));
  5814  0331  3009               	movlw	9
  5815  0332  0020               	movlb	0	; select bank0
  5816  0333  00EB               	movwf	??_main+2
  5817  0334  301E               	movlw	30
  5818  0335  00EA               	movwf	??_main+1
  5819  0336  30EB               	movlw	235
  5820  0337  00E9               	movwf	??_main
  5821  0338                     u3707:	
  5822  0338  0BE9               	decfsz	??_main,f
  5823  0339  2B38               	goto	u3707
  5824  033A  0BEA               	decfsz	??_main+1,f
  5825  033B  2B38               	goto	u3707
  5826  033C  0BEB               	decfsz	??_main+2,f
  5827  033D  2B38               	goto	u3707
  5828  033E  0000               	nop
  5829                           
  5830                           ;main.c: 92: LCD_Write_String("K");
  5831  033F  306D               	movlw	low (STR_22| (0+32768))
  5832  0340  00F5               	movwf	LCD_Write_String@a
  5833  0341  3090               	movlw	high (STR_22| (0+32768))
  5834  0342  00F6               	movwf	LCD_Write_String@a+1
  5835  0343  3196  2622  3181   	fcall	_LCD_Write_String
  5836                           
  5837                           ;main.c: 93: _delay((unsigned long)((200)*(32000000/4000.0)));
  5838  0346  3009               	movlw	9
  5839  0347  0020               	movlb	0	; select bank0
  5840  0348  00EB               	movwf	??_main+2
  5841  0349  301E               	movlw	30
  5842  034A  00EA               	movwf	??_main+1
  5843  034B  30EB               	movlw	235
  5844  034C  00E9               	movwf	??_main
  5845  034D                     u3717:	
  5846  034D  0BE9               	decfsz	??_main,f
  5847  034E  2B4D               	goto	u3717
  5848  034F  0BEA               	decfsz	??_main+1,f
  5849  0350  2B4D               	goto	u3717
  5850  0351  0BEB               	decfsz	??_main+2,f
  5851  0352  2B4D               	goto	u3717
  5852  0353  0000               	nop
  5853                           
  5854                           ;main.c: 94: LCD_Write_String("I");
  5855  0354  306B               	movlw	low (STR_10| (0+32768))
  5856  0355  00F5               	movwf	LCD_Write_String@a
  5857  0356  3090               	movlw	high (STR_10| (0+32768))
  5858  0357  00F6               	movwf	LCD_Write_String@a+1
  5859  0358  3196  2622  3181   	fcall	_LCD_Write_String
  5860                           
  5861                           ;main.c: 95: _delay((unsigned long)((200)*(32000000/4000.0)));
  5862  035B  3009               	movlw	9
  5863  035C  0020               	movlb	0	; select bank0
  5864  035D  00EB               	movwf	??_main+2
  5865  035E  301E               	movlw	30
  5866  035F  00EA               	movwf	??_main+1
  5867  0360  30EB               	movlw	235
  5868  0361  00E9               	movwf	??_main
  5869  0362                     u3727:	
  5870  0362  0BE9               	decfsz	??_main,f
  5871  0363  2B62               	goto	u3727
  5872  0364  0BEA               	decfsz	??_main+1,f
  5873  0365  2B62               	goto	u3727
  5874  0366  0BEB               	decfsz	??_main+2,f
  5875  0367  2B62               	goto	u3727
  5876  0368  0000               	nop
  5877                           
  5878                           ;main.c: 96: LCD_Write_String("D");
  5879  0369  3065               	movlw	low (STR_7| (0+32768))
  5880  036A  00F5               	movwf	LCD_Write_String@a
  5881  036B  3090               	movlw	high (STR_7| (0+32768))
  5882  036C  00F6               	movwf	LCD_Write_String@a+1
  5883  036D  3196  2622  3181   	fcall	_LCD_Write_String
  5884                           
  5885                           ;main.c: 97: _delay((unsigned long)((200)*(32000000/4000.0)));
  5886  0370  3009               	movlw	9
  5887  0371  0020               	movlb	0	; select bank0
  5888  0372  00EB               	movwf	??_main+2
  5889  0373  301E               	movlw	30
  5890  0374  00EA               	movwf	??_main+1
  5891  0375  30EB               	movlw	235
  5892  0376  00E9               	movwf	??_main
  5893  0377                     u3737:	
  5894  0377  0BE9               	decfsz	??_main,f
  5895  0378  2B77               	goto	u3737
  5896  0379  0BEA               	decfsz	??_main+1,f
  5897  037A  2B77               	goto	u3737
  5898  037B  0BEB               	decfsz	??_main+2,f
  5899  037C  2B77               	goto	u3737
  5900  037D  0000               	nop
  5901                           
  5902                           ;main.c: 98: LCD_Write_String("S");
  5903  037E  3075               	movlw	low (STR_13| (0+32768))
  5904  037F  00F5               	movwf	LCD_Write_String@a
  5905  0380  3090               	movlw	high (STR_13| (0+32768))
  5906  0381  00F6               	movwf	LCD_Write_String@a+1
  5907  0382  3196  2622  3181   	fcall	_LCD_Write_String
  5908                           
  5909                           ;main.c: 99: _delay((unsigned long)((200)*(32000000/4000.0)));
  5910  0385  3009               	movlw	9
  5911  0386  0020               	movlb	0	; select bank0
  5912  0387  00EB               	movwf	??_main+2
  5913  0388  301E               	movlw	30
  5914  0389  00EA               	movwf	??_main+1
  5915  038A  30EB               	movlw	235
  5916  038B  00E9               	movwf	??_main
  5917  038C                     u3747:	
  5918  038C  0BE9               	decfsz	??_main,f
  5919  038D  2B8C               	goto	u3747
  5920  038E  0BEA               	decfsz	??_main+1,f
  5921  038F  2B8C               	goto	u3747
  5922  0390  0BEB               	decfsz	??_main+2,f
  5923  0391  2B8C               	goto	u3747
  5924  0392  0000               	nop
  5925                           
  5926                           ;main.c: 100: LCD_Write_String("!");
  5927  0393  305D               	movlw	low (STR_26| (0+32768))
  5928  0394  00F5               	movwf	LCD_Write_String@a
  5929  0395  3090               	movlw	high (STR_26| (0+32768))
  5930  0396  00F6               	movwf	LCD_Write_String@a+1
  5931  0397  3196  2622  3181   	fcall	_LCD_Write_String
  5932                           
  5933                           ;main.c: 101: _delay((unsigned long)((5000)*(32000000/4000.0)));
  5934  039A  30CB               	movlw	203
  5935  039B  0020               	movlb	0	; select bank0
  5936  039C  00EB               	movwf	??_main+2
  5937  039D  30ED               	movlw	237
  5938  039E  00EA               	movwf	??_main+1
  5939  039F  304C               	movlw	76
  5940  03A0  00E9               	movwf	??_main
  5941  03A1                     u3757:	
  5942  03A1  0BE9               	decfsz	??_main,f
  5943  03A2  2BA1               	goto	u3757
  5944  03A3  0BEA               	decfsz	??_main+1,f
  5945  03A4  2BA1               	goto	u3757
  5946  03A5  0BEB               	decfsz	??_main+2,f
  5947  03A6  2BA1               	goto	u3757
  5948  03A7  3200               	nop2
  5949                           
  5950                           ;main.c: 103: LCD_Clear();
  5951  03A8  3195  2574  3181   	fcall	_LCD_Clear
  5952                           
  5953                           ;main.c: 105: PWM6_LoadDutyValue(dutyCycle);
  5954  03AB  0021               	movlb	1	; select bank1
  5955  03AC  083F               	movf	(main@dutyCycle+1)^(0+128),w
  5956  03AD  00F1               	movwf	PWM6_LoadDutyValue@dutyCycle+1
  5957  03AE  083E               	movf	main@dutyCycle^(0+128),w
  5958  03AF  00F0               	movwf	PWM6_LoadDutyValue@dutyCycle
  5959  03B0  3195  25F4  3181   	fcall	_PWM6_LoadDutyValue
  5960  03B3                     l3011:	
  5961                           ;main.c: 108: while (1)
  5962                           
  5963                           
  5964                           ;main.c: 109: {
  5965                           ;main.c: 111: for(x=0;x<6;x++) analogs[x]=readAnalog(x);
  5966  03B3  0021               	movlb	1	; select bank1
  5967  03B4  01BD               	clrf	main@x^(0+128)
  5968  03B5  3006               	movlw	6
  5969  03B6  023D               	subwf	main@x^(0+128),w
  5970  03B7  1803               	btfsc	3,0
  5971  03B8  2BD7               	goto	l3023
  5972  03B9                     l3017:	
  5973  03B9  083D               	movf	main@x^(0+128),w
  5974  03BA  0020               	movlb	0	; select bank0
  5975  03BB  00E9               	movwf	??_main
  5976  03BC  01EA               	clrf	??_main+1
  5977  03BD  0869               	movf	??_main,w
  5978  03BE  00A6               	movwf	readAnalog@channel
  5979  03BF  086A               	movf	??_main+1,w
  5980  03C0  00A7               	movwf	readAnalog@channel+1
  5981  03C1  318E  26D0  3181   	fcall	_readAnalog
  5982  03C4  0021               	movlb	1	; select bank1
  5983  03C5  353D               	lslf	main@x^(0+128),w
  5984  03C6  3EA5               	addlw	(low (main@analogs| 0))& (0+255)
  5985  03C7  0086               	movwf	6
  5986  03C8  0187               	clrf	7
  5987  03C9  0020               	movlb	0	; select bank0
  5988  03CA  0826               	movf	?_readAnalog,w
  5989  03CB  3FC0               	movwi [0]fsr1
  5990  03CC  0827               	movf	?_readAnalog+1,w
  5991  03CD  3FC1               	movwi [1]fsr1
  5992  03CE  3001               	movlw	1
  5993  03CF  00E9               	movwf	??_main
  5994  03D0  0869               	movf	??_main,w
  5995  03D1  0021               	movlb	1	; select bank1
  5996  03D2  07BD               	addwf	main@x^(0+128),f
  5997  03D3  3006               	movlw	6
  5998  03D4  023D               	subwf	main@x^(0+128),w
  5999  03D5  1C03               	skipc
  6000  03D6  2BB9               	goto	l3017
  6001  03D7                     l3023:	
  6002                           
  6003                           ;main.c: 113: if(analogs[0]<1020)tPadCount+=1;
  6004  03D7  3003               	movlw	3
  6005  03D8  0226               	subwf	(main@analogs+1)^(0+128),w
  6006  03D9  30FC               	movlw	252
  6007  03DA  1903               	skipnz
  6008  03DB  0225               	subwf	main@analogs^(0+128),w
  6009  03DC  1803               	skipnc
  6010  03DD  2BE4               	goto	l3027
  6011  03DE  3001               	movlw	1
  6012  03DF  0020               	movlb	0	; select bank0
  6013  03E0  00E9               	movwf	??_main
  6014  03E1  0869               	movf	??_main,w
  6015  03E2  0021               	movlb	1	; select bank1
  6016  03E3  07BA               	addwf	main@tPadCount^(0+128),f
  6017  03E4                     l3027:	
  6018                           
  6019                           ;main.c: 116: if(analogs[1]<900)tPadCount-=1;
  6020  03E4  3003               	movlw	3
  6021  03E5  0228               	subwf	((main@analogs+1)^(0+128)+2),w
  6022  03E6  3084               	movlw	132
  6023  03E7  1903               	skipnz
  6024  03E8  0227               	subwf	(main@analogs^(0+128)+2),w
  6025  03E9  1803               	skipnc
  6026  03EA  2BED               	goto	l291
  6027  03EB  3001               	movlw	1
  6028  03EC  02BA               	subwf	main@tPadCount^(0+128),f
  6029  03ED                     l291:	
  6030                           
  6031                           ;main.c: 118: if(tPadCount<1)
  6032  03ED  083A               	movf	main@tPadCount^(0+128),w
  6033  03EE  1D03               	btfss	3,2
  6034  03EF  2C2C               	goto	l3049
  6035                           
  6036                           ;main.c: 119: {
  6037                           ;main.c: 120: choice=1;
  6038  03F0  01BB               	clrf	main@choice^(0+128)
  6039  03F1  0ABB               	incf	main@choice^(0+128),f
  6040                           
  6041                           ;main.c: 121: LCD_Clear();
  6042  03F2  3195  2574  3181   	fcall	_LCD_Clear
  6043                           
  6044                           ;main.c: 122: { LCD_Set_Cursor(0,0); LCD_Write_String("You Chose ");};
  6045  03F5  01F4               	clrf	LCD_Set_Cursor@y
  6046  03F6  3000               	movlw	0
  6047  03F7  3197  277F  3181   	fcall	_LCD_Set_Cursor
  6048  03FA  302C               	movlw	low (STR_27| (0+32768))
  6049  03FB  00F5               	movwf	LCD_Write_String@a
  6050  03FC  3090               	movlw	high (STR_27| (0+32768))
  6051  03FD  00F6               	movwf	LCD_Write_String@a+1
  6052  03FE  3196  2622  3181   	fcall	_LCD_Write_String
  6053                           
  6054                           ;main.c: 123: LCD_Write_Char(0);
  6055  0401  3000               	movlw	0
  6056  0402  3188  2007  3181   	fcall	_LCD_Write_Char
  6057                           
  6058                           ;main.c: 124: LCD_Write_Char('F');
  6059  0405  3046               	movlw	70
  6060  0406  3188  2007  3181   	fcall	_LCD_Write_Char
  6061                           
  6062                           ;main.c: 125: { LCD_Set_Cursor(0,1); LCD_Write_String("for User Display");};
  6063  0409  01F4               	clrf	LCD_Set_Cursor@y
  6064  040A  0AF4               	incf	LCD_Set_Cursor@y,f
  6065  040B  3000               	movlw	0
  6066  040C  3197  277F  3181   	fcall	_LCD_Set_Cursor
  6067  040F  301B               	movlw	low (STR_28| (0+32768))
  6068  0410  00F5               	movwf	LCD_Write_String@a
  6069  0411  3090               	movlw	high (STR_28| (0+32768))
  6070  0412  00F6               	movwf	LCD_Write_String@a+1
  6071  0413  3196  2622  3181   	fcall	_LCD_Write_String
  6072                           
  6073                           ;main.c: 126: tPadCount=10;
  6074  0416  300A               	movlw	10
  6075  0417  0020               	movlb	0	; select bank0
  6076  0418  00E9               	movwf	??_main
  6077  0419  0869               	movf	??_main,w
  6078  041A  0021               	movlb	1	; select bank1
  6079  041B  00BA               	movwf	main@tPadCount^(0+128)
  6080                           
  6081                           ;main.c: 127: _delay((unsigned long)((1000)*(32000000/4000.0)));
  6082  041C  3029               	movlw	41
  6083  041D  0020               	movlb	0	; select bank0
  6084  041E  00EB               	movwf	??_main+2
  6085  041F  3096               	movlw	150
  6086  0420  00EA               	movwf	??_main+1
  6087  0421  30A6               	movlw	166
  6088  0422  00E9               	movwf	??_main
  6089  0423                     u3767:	
  6090  0423  0BE9               	decfsz	??_main,f
  6091  0424  2C23               	goto	u3767
  6092  0425  0BEA               	decfsz	??_main+1,f
  6093  0426  2C23               	goto	u3767
  6094  0427  0BEB               	decfsz	??_main+2,f
  6095  0428  2C23               	goto	u3767
  6096                           
  6097                           ;main.c: 128: LCD_Clear();
  6098  0429  3195  2574  3181   	fcall	_LCD_Clear
  6099  042C                     l3049:	
  6100                           
  6101                           ;main.c: 129: }
  6102                           ;main.c: 131: if(tPadCount>19)
  6103  042C  3014               	movlw	20
  6104  042D  0021               	movlb	1	; select bank1
  6105  042E  023A               	subwf	main@tPadCount^(0+128),w
  6106  042F  1C03               	skipc
  6107  0430  2C6C               	goto	l3073
  6108                           
  6109                           ;main.c: 132: {
  6110                           ;main.c: 133: choice=0;
  6111  0431  01BB               	clrf	main@choice^(0+128)
  6112                           
  6113                           ;main.c: 134: LCD_Clear();
  6114  0432  3195  2574  3181   	fcall	_LCD_Clear
  6115                           
  6116                           ;main.c: 135: { LCD_Set_Cursor(0,0); LCD_Write_String("You Chose ");};
  6117  0435  01F4               	clrf	LCD_Set_Cursor@y
  6118  0436  3000               	movlw	0
  6119  0437  3197  277F  3181   	fcall	_LCD_Set_Cursor
  6120  043A  302C               	movlw	low (STR_27| (0+32768))
  6121  043B  00F5               	movwf	LCD_Write_String@a
  6122  043C  3090               	movlw	high (STR_27| (0+32768))
  6123  043D  00F6               	movwf	LCD_Write_String@a+1
  6124  043E  3196  2622  3181   	fcall	_LCD_Write_String
  6125                           
  6126                           ;main.c: 136: LCD_Write_Char(0);
  6127  0441  3000               	movlw	0
  6128  0442  3188  2007  3181   	fcall	_LCD_Write_Char
  6129                           
  6130                           ;main.c: 137: LCD_Write_Char('C');
  6131  0445  3043               	movlw	67
  6132  0446  3188  2007  3181   	fcall	_LCD_Write_Char
  6133                           
  6134                           ;main.c: 138: { LCD_Set_Cursor(0,1); LCD_Write_String("for User Display");};
  6135  0449  01F4               	clrf	LCD_Set_Cursor@y
  6136  044A  0AF4               	incf	LCD_Set_Cursor@y,f
  6137  044B  3000               	movlw	0
  6138  044C  3197  277F  3181   	fcall	_LCD_Set_Cursor
  6139  044F  301B               	movlw	low (STR_28| (0+32768))
  6140  0450  00F5               	movwf	LCD_Write_String@a
  6141  0451  3090               	movlw	high (STR_28| (0+32768))
  6142  0452  00F6               	movwf	LCD_Write_String@a+1
  6143  0453  3196  2622  3181   	fcall	_LCD_Write_String
  6144                           
  6145                           ;main.c: 139: tPadCount=10;
  6146  0456  300A               	movlw	10
  6147  0457  0020               	movlb	0	; select bank0
  6148  0458  00E9               	movwf	??_main
  6149  0459  0869               	movf	??_main,w
  6150  045A  0021               	movlb	1	; select bank1
  6151  045B  00BA               	movwf	main@tPadCount^(0+128)
  6152                           
  6153                           ;main.c: 140: _delay((unsigned long)((1000)*(32000000/4000.0)));
  6154  045C  3029               	movlw	41
  6155  045D  0020               	movlb	0	; select bank0
  6156  045E  00EB               	movwf	??_main+2
  6157  045F  3096               	movlw	150
  6158  0460  00EA               	movwf	??_main+1
  6159  0461  30A6               	movlw	166
  6160  0462  00E9               	movwf	??_main
  6161  0463                     u3777:	
  6162  0463  0BE9               	decfsz	??_main,f
  6163  0464  2C63               	goto	u3777
  6164  0465  0BEA               	decfsz	??_main+1,f
  6165  0466  2C63               	goto	u3777
  6166  0467  0BEB               	decfsz	??_main+2,f
  6167  0468  2C63               	goto	u3777
  6168                           
  6169                           ;main.c: 141: LCD_Clear();
  6170  0469  3195  2574  3181   	fcall	_LCD_Clear
  6171  046C                     l3073:	
  6172                           
  6173                           ;main.c: 142: }
  6174                           ;main.c: 144: if(analogs[0]<1020&&analogs[1]<970)
  6175  046C  3003               	movlw	3
  6176  046D  0021               	movlb	1	; select bank1
  6177  046E  0226               	subwf	(main@analogs+1)^(0+128),w
  6178  046F  30FC               	movlw	252
  6179  0470  1903               	skipnz
  6180  0471  0225               	subwf	main@analogs^(0+128),w
  6181  0472  1803               	skipnc
  6182  0473  2CCC               	goto	l3103
  6183  0474  3003               	movlw	3
  6184  0475  0228               	subwf	((main@analogs+1)^(0+128)+2),w
  6185  0476  30CA               	movlw	202
  6186  0477  1903               	skipnz
  6187  0478  0227               	subwf	(main@analogs^(0+128)+2),w
  6188  0479  1803               	skipnc
  6189  047A  2CCC               	goto	l3103
  6190                           
  6191                           ;main.c: 145: {
  6192                           ;main.c: 146: tPadCount=10;
  6193  047B  300A               	movlw	10
  6194  047C  0020               	movlb	0	; select bank0
  6195  047D  00E9               	movwf	??_main
  6196  047E  0869               	movf	??_main,w
  6197  047F  0021               	movlb	1	; select bank1
  6198  0480  00BA               	movwf	main@tPadCount^(0+128)
  6199                           
  6200                           ;main.c: 147: choice=2;
  6201  0481  3002               	movlw	2
  6202  0482  0020               	movlb	0	; select bank0
  6203  0483  00E9               	movwf	??_main
  6204  0484  0869               	movf	??_main,w
  6205  0485  0021               	movlb	1	; select bank1
  6206  0486  00BB               	movwf	main@choice^(0+128)
  6207                           
  6208                           ;main.c: 148: LCD_Set_Cursor(0,0);
  6209  0487  01F4               	clrf	LCD_Set_Cursor@y
  6210  0488  3000               	movlw	0
  6211  0489  3197  277F  3181   	fcall	_LCD_Set_Cursor
  6212                           
  6213                           ;main.c: 149: LCD_Write_Char(0);
  6214  048C  3000               	movlw	0
  6215  048D  3188  2007  3181   	fcall	_LCD_Write_Char
  6216                           
  6217                           ;main.c: 150: LCD_Write_Char('F');
  6218  0490  3046               	movlw	70
  6219  0491  3188  2007  3181   	fcall	_LCD_Write_Char
  6220                           
  6221                           ;main.c: 151: LCD_Write_Char(' ');
  6222  0494  3020               	movlw	32
  6223  0495  3188  2007  3181   	fcall	_LCD_Write_Char
  6224                           
  6225                           ;main.c: 152: LCD_Write_Char('&');
  6226  0498  3026               	movlw	38
  6227  0499  3188  2007  3181   	fcall	_LCD_Write_Char
  6228                           
  6229                           ;main.c: 153: LCD_Write_Char(' ');
  6230  049C  3020               	movlw	32
  6231  049D  3188  2007  3181   	fcall	_LCD_Write_Char
  6232                           
  6233                           ;main.c: 154: LCD_Write_Char(0);
  6234  04A0  3000               	movlw	0
  6235  04A1  3188  2007  3181   	fcall	_LCD_Write_Char
  6236                           
  6237                           ;main.c: 155: LCD_Write_Char('C');
  6238  04A4  3043               	movlw	67
  6239  04A5  3188  2007  3181   	fcall	_LCD_Write_Char
  6240                           
  6241                           ;main.c: 156: LCD_Write_String(" Chosen ");
  6242  04A8  3042               	movlw	low (STR_31| (0+32768))
  6243  04A9  00F5               	movwf	LCD_Write_String@a
  6244  04AA  3090               	movlw	high (STR_31| (0+32768))
  6245  04AB  00F6               	movwf	LCD_Write_String@a+1
  6246  04AC  3196  2622  3181   	fcall	_LCD_Write_String
  6247                           
  6248                           ;main.c: 158: { LCD_Set_Cursor(0,1); LCD_Write_String("for User Display");};
  6249  04AF  01F4               	clrf	LCD_Set_Cursor@y
  6250  04B0  0AF4               	incf	LCD_Set_Cursor@y,f
  6251  04B1  3000               	movlw	0
  6252  04B2  3197  277F  3181   	fcall	_LCD_Set_Cursor
  6253  04B5  301B               	movlw	low (STR_28| (0+32768))
  6254  04B6  00F5               	movwf	LCD_Write_String@a
  6255  04B7  3090               	movlw	high (STR_28| (0+32768))
  6256  04B8  00F6               	movwf	LCD_Write_String@a+1
  6257  04B9  3196  2622  3181   	fcall	_LCD_Write_String
  6258                           
  6259                           ;main.c: 159: _delay((unsigned long)((100)*(32000000/4000.0)));
  6260  04BC  3005               	movlw	5
  6261  04BD  0020               	movlb	0	; select bank0
  6262  04BE  00EB               	movwf	??_main+2
  6263  04BF  300F               	movlw	15
  6264  04C0  00EA               	movwf	??_main+1
  6265  04C1  30F4               	movlw	244
  6266  04C2  00E9               	movwf	??_main
  6267  04C3                     u3787:	
  6268  04C3  0BE9               	decfsz	??_main,f
  6269  04C4  2CC3               	goto	u3787
  6270  04C5  0BEA               	decfsz	??_main+1,f
  6271  04C6  2CC3               	goto	u3787
  6272  04C7  0BEB               	decfsz	??_main+2,f
  6273  04C8  2CC3               	goto	u3787
  6274                           
  6275                           ;main.c: 160: LCD_Clear();
  6276  04C9  3195  2574  3181   	fcall	_LCD_Clear
  6277  04CC                     l3103:	
  6278                           
  6279                           ;main.c: 161: }
  6280                           ;main.c: 165: startDelay+=1;
  6281  04CC  3001               	movlw	1
  6282  04CD  0020               	movlb	0	; select bank0
  6283  04CE  00E9               	movwf	??_main
  6284  04CF  0869               	movf	??_main,w
  6285  04D0  0021               	movlb	1	; select bank1
  6286  04D1  07A4               	addwf	main@startDelay^(0+128),f
  6287                           
  6288                           ;main.c: 167: if(startDelay>254)
  6289  04D2  0A24               	incf	main@startDelay^(0+128),w
  6290  04D3  1D03               	btfss	3,2
  6291  04D4  2DEB               	goto	l3197
  6292                           
  6293                           ;main.c: 168: {
  6294                           ;main.c: 169: startDelay=254;
  6295  04D5  30FE               	movlw	254
  6296  04D6  0020               	movlb	0	; select bank0
  6297  04D7  00E9               	movwf	??_main
  6298  04D8  0869               	movf	??_main,w
  6299  04D9  0021               	movlb	1	; select bank1
  6300  04DA  00A4               	movwf	main@startDelay^(0+128)
  6301                           
  6302                           ;main.c: 171: if(analogs[2]<900&&analogs[3]<900)asm("reset");
  6303  04DB  3003               	movlw	3
  6304  04DC  022A               	subwf	((main@analogs+1)^(0+128)+4),w
  6305  04DD  3084               	movlw	132
  6306  04DE  1903               	skipnz
  6307  04DF  0229               	subwf	(main@analogs^(0+128)+4),w
  6308  04E0  1803               	skipnc
  6309  04E1  2CE9               	goto	l3113
  6310  04E2  3003               	movlw	3
  6311  04E3  022C               	subwf	((main@analogs+1)^(0+128)+6),w
  6312  04E4  3084               	movlw	132
  6313  04E5  1903               	skipnz
  6314  04E6  022B               	subwf	(main@analogs^(0+128)+6),w
  6315  04E7  1C03               	btfss	3,0
  6316  04E8  0001               	reset	;# 
  6317  04E9                     l3113:	
  6318                           
  6319                           ;main.c: 173: if(analogs[2]<900)
  6320  04E9  3003               	movlw	3
  6321  04EA  0021               	movlb	1	; select bank1
  6322  04EB  022A               	subwf	((main@analogs+1)^(0+128)+4),w
  6323  04EC  3084               	movlw	132
  6324  04ED  1903               	skipnz
  6325  04EE  0229               	subwf	(main@analogs^(0+128)+4),w
  6326  04EF  1803               	skipnc
  6327  04F0  2D69               	goto	l3155
  6328                           
  6329                           ;main.c: 174: {
  6330                           ;main.c: 175: resetDelay+=1;
  6331  04F1  3001               	movlw	1
  6332  04F2  0020               	movlb	0	; select bank0
  6333  04F3  00E9               	movwf	??_main
  6334  04F4  0869               	movf	??_main,w
  6335  04F5  0021               	movlb	1	; select bank1
  6336  04F6  07B9               	addwf	main@resetDelay^(0+128),f
  6337                           
  6338                           ;main.c: 177: if(resetDelay>20)
  6339  04F7  3015               	movlw	21
  6340  04F8  0239               	subwf	main@resetDelay^(0+128),w
  6341  04F9  1803               	btfsc	3,0
  6342  04FA  2D4D               	goto	l3145
  6343  04FB  2D69               	goto	l3155
  6344  04FC                     l3121:	
  6345                           ;main.c: 178: {
  6346                           ;main.c: 179: while(analogs[2]<975)
  6347                           
  6348                           
  6349                           ;main.c: 180: {
  6350                           ;main.c: 181: analogs[2]=ADCRead(4);
  6351  04FC  3004               	movlw	4
  6352  04FD  3195  25C2  3181   	fcall	_ADCRead
  6353  0500  0871               	movf	?_ADCRead+1,w
  6354  0501  0021               	movlb	1	; select bank1
  6355  0502  00AA               	movwf	((main@analogs+1)^(0+128)+4)
  6356  0503  0870               	movf	?_ADCRead,w
  6357  0504  00A9               	movwf	(main@analogs^(0+128)+4)
  6358                           
  6359                           ;main.c: 183: if(bCount<1)LCD_Clear();
  6360  0505  0831               	movf	main@bCount^(0+128),w
  6361  0506  0432               	iorwf	(main@bCount+1)^(0+128),w
  6362  0507  1D03               	btfss	3,2
  6363  0508  2D0C               	goto	l3127
  6364  0509  3195  2574  3181   	fcall	_LCD_Clear
  6365  050C                     l3127:	
  6366                           
  6367                           ;main.c: 184: bCount+=1;
  6368  050C  3001               	movlw	1
  6369  050D  0021               	movlb	1	; select bank1
  6370  050E  07B1               	addwf	main@bCount^(0+128),f
  6371  050F  3000               	movlw	0
  6372  0510  3DB2               	addwfc	(main@bCount+1)^(0+128),f
  6373                           
  6374                           ;main.c: 186: if(dutyCycle>0)dutyCycle-=1;
  6375  0511  083E               	movf	main@dutyCycle^(0+128),w
  6376  0512  043F               	iorwf	(main@dutyCycle+1)^(0+128),w
  6377  0513  1903               	btfsc	3,2
  6378  0514  2D19               	goto	l3133
  6379  0515  3001               	movlw	1
  6380  0516  02BE               	subwf	main@dutyCycle^(0+128),f
  6381  0517  3000               	movlw	0
  6382  0518  3BBF               	subwfb	(main@dutyCycle+1)^(0+128),f
  6383  0519                     l3133:	
  6384                           
  6385                           ;main.c: 188: { LCD_Set_Cursor(0,0); LCD_Write_String("BackLight:");};
  6386  0519  01F4               	clrf	LCD_Set_Cursor@y
  6387  051A  3000               	movlw	0
  6388  051B  3197  277F  3181   	fcall	_LCD_Set_Cursor
  6389  051E  3037               	movlw	low (STR_33| (0+32768))
  6390  051F  00F5               	movwf	LCD_Write_String@a
  6391  0520  3090               	movlw	high (STR_33| (0+32768))
  6392  0521  00F6               	movwf	LCD_Write_String@a+1
  6393  0522  3196  2622  3181   	fcall	_LCD_Write_String
  6394                           
  6395                           ;main.c: 189: LCD_Write_Int(dutyCycle/10,-1,0,0);
  6396  0525  300A               	movlw	10
  6397  0526  00F0               	movwf	___lwdiv@divisor
  6398  0527  3000               	movlw	0
  6399  0528  00F1               	movwf	___lwdiv@divisor+1
  6400  0529  0021               	movlb	1	; select bank1
  6401  052A  083F               	movf	(main@dutyCycle+1)^(0+128),w
  6402  052B  00F3               	movwf	___lwdiv@dividend+1
  6403  052C  083E               	movf	main@dutyCycle^(0+128),w
  6404  052D  00F2               	movwf	___lwdiv@dividend
  6405  052E  3196  26D5  3181   	fcall	___lwdiv
  6406  0531  0871               	movf	?___lwdiv+1,w
  6407  0532  0020               	movlb	0	; select bank0
  6408  0533  00A1               	movwf	LCD_Write_Int@value+1
  6409  0534  0870               	movf	?___lwdiv,w
  6410  0535  00A0               	movwf	LCD_Write_Int@value
  6411  0536  01A2               	clrf	LCD_Write_Int@fieldLength
  6412  0537  03A2               	decf	LCD_Write_Int@fieldLength,f
  6413  0538  01A3               	clrf	LCD_Write_Int@numPlaces
  6414  0539  01A4               	clrf	LCD_Write_Int@sign
  6415  053A  318D  2526  3181   	fcall	_LCD_Write_Int
  6416                           
  6417                           ;main.c: 190: LCD_Write_Char('%');
  6418  053D  3025               	movlw	37
  6419  053E  3188  2007  3181   	fcall	_LCD_Write_Char
  6420                           
  6421                           ;main.c: 191: LCD_Write_Char(' ');
  6422  0541  3020               	movlw	32
  6423  0542  3188  2007  3181   	fcall	_LCD_Write_Char
  6424                           
  6425                           ;main.c: 192: PWM6_LoadDutyValue(dutyCycle);
  6426  0545  0021               	movlb	1	; select bank1
  6427  0546  083F               	movf	(main@dutyCycle+1)^(0+128),w
  6428  0547  00F1               	movwf	PWM6_LoadDutyValue@dutyCycle+1
  6429  0548  083E               	movf	main@dutyCycle^(0+128),w
  6430  0549  00F0               	movwf	PWM6_LoadDutyValue@dutyCycle
  6431  054A  3195  25F4  3181   	fcall	_PWM6_LoadDutyValue
  6432  054D                     l3145:	
  6433  054D  3003               	movlw	3
  6434  054E  0021               	movlb	1	; select bank1
  6435  054F  022A               	subwf	((main@analogs+1)^(0+128)+4),w
  6436  0550  30CF               	movlw	207
  6437  0551  1903               	skipnz
  6438  0552  0229               	subwf	(main@analogs^(0+128)+4),w
  6439  0553  1C03               	skipc
  6440  0554  2CFC               	goto	l3121
  6441                           
  6442                           ;main.c: 193: }
  6443                           ;main.c: 194: bCount=0;
  6444  0555  01B1               	clrf	main@bCount^(0+128)
  6445  0556  01B2               	clrf	(main@bCount+1)^(0+128)
  6446                           
  6447                           ;main.c: 195: _delay((unsigned long)((100)*(32000000/4000.0)));
  6448  0557  3005               	movlw	5
  6449  0558  0020               	movlb	0	; select bank0
  6450  0559  00EB               	movwf	??_main+2
  6451  055A  300F               	movlw	15
  6452  055B  00EA               	movwf	??_main+1
  6453  055C  30F4               	movlw	244
  6454  055D  00E9               	movwf	??_main
  6455  055E                     u3797:	
  6456  055E  0BE9               	decfsz	??_main,f
  6457  055F  2D5E               	goto	u3797
  6458  0560  0BEA               	decfsz	??_main+1,f
  6459  0561  2D5E               	goto	u3797
  6460  0562  0BEB               	decfsz	??_main+2,f
  6461  0563  2D5E               	goto	u3797
  6462                           
  6463                           ;main.c: 196: LCD_Clear();
  6464  0564  3195  2574  3181   	fcall	_LCD_Clear
  6465                           
  6466                           ;main.c: 197: resetDelay=0;
  6467  0567  0021               	movlb	1	; select bank1
  6468  0568  01B9               	clrf	main@resetDelay^(0+128)
  6469  0569                     l3155:	
  6470                           
  6471                           ;main.c: 198: }
  6472                           ;main.c: 199: }
  6473                           ;main.c: 201: if(analogs[3]<900)
  6474  0569  3003               	movlw	3
  6475  056A  022C               	subwf	((main@analogs+1)^(0+128)+6),w
  6476  056B  3084               	movlw	132
  6477  056C  1903               	skipnz
  6478  056D  022B               	subwf	(main@analogs^(0+128)+6),w
  6479  056E  1803               	skipnc
  6480  056F  2DEB               	goto	l3197
  6481                           
  6482                           ;main.c: 202: {
  6483                           ;main.c: 203: resetDelay+=1;
  6484  0570  3001               	movlw	1
  6485  0571  0020               	movlb	0	; select bank0
  6486  0572  00E9               	movwf	??_main
  6487  0573  0869               	movf	??_main,w
  6488  0574  0021               	movlb	1	; select bank1
  6489  0575  07B9               	addwf	main@resetDelay^(0+128),f
  6490                           
  6491                           ;main.c: 205: if(resetDelay>20)
  6492  0576  3015               	movlw	21
  6493  0577  0239               	subwf	main@resetDelay^(0+128),w
  6494  0578  1803               	btfsc	3,0
  6495  0579  2DCF               	goto	l3187
  6496  057A  2DEB               	goto	l3197
  6497  057B                     l3163:	
  6498                           ;main.c: 206: {
  6499                           ;main.c: 207: while(analogs[3]<975)
  6500                           
  6501                           
  6502                           ;main.c: 208: {
  6503                           ;main.c: 209: analogs[3]=ADCRead(5);
  6504  057B  3005               	movlw	5
  6505  057C  3195  25C2  3181   	fcall	_ADCRead
  6506  057F  0871               	movf	?_ADCRead+1,w
  6507  0580  0021               	movlb	1	; select bank1
  6508  0581  00AC               	movwf	((main@analogs+1)^(0+128)+6)
  6509  0582  0870               	movf	?_ADCRead,w
  6510  0583  00AB               	movwf	(main@analogs^(0+128)+6)
  6511                           
  6512                           ;main.c: 211: if(bCount<1)LCD_Clear();
  6513  0584  0831               	movf	main@bCount^(0+128),w
  6514  0585  0432               	iorwf	(main@bCount+1)^(0+128),w
  6515  0586  1D03               	btfss	3,2
  6516  0587  2D8B               	goto	l3169
  6517  0588  3195  2574  3181   	fcall	_LCD_Clear
  6518  058B                     l3169:	
  6519                           
  6520                           ;main.c: 212: bCount+=1;
  6521  058B  3001               	movlw	1
  6522  058C  0021               	movlb	1	; select bank1
  6523  058D  07B1               	addwf	main@bCount^(0+128),f
  6524  058E  3000               	movlw	0
  6525  058F  3DB2               	addwfc	(main@bCount+1)^(0+128),f
  6526                           
  6527                           ;main.c: 214: if(dutyCycle<1009)dutyCycle+=1;
  6528  0590  3003               	movlw	3
  6529  0591  023F               	subwf	(main@dutyCycle+1)^(0+128),w
  6530  0592  30F1               	movlw	241
  6531  0593  1903               	skipnz
  6532  0594  023E               	subwf	main@dutyCycle^(0+128),w
  6533  0595  1803               	skipnc
  6534  0596  2D9B               	goto	l3175
  6535  0597  3001               	movlw	1
  6536  0598  07BE               	addwf	main@dutyCycle^(0+128),f
  6537  0599  3000               	movlw	0
  6538  059A  3DBF               	addwfc	(main@dutyCycle+1)^(0+128),f
  6539  059B                     l3175:	
  6540                           
  6541                           ;main.c: 216: { LCD_Set_Cursor(0,0); LCD_Write_String("BackLight:");};
  6542  059B  01F4               	clrf	LCD_Set_Cursor@y
  6543  059C  3000               	movlw	0
  6544  059D  3197  277F  3181   	fcall	_LCD_Set_Cursor
  6545  05A0  3037               	movlw	low (STR_33| (0+32768))
  6546  05A1  00F5               	movwf	LCD_Write_String@a
  6547  05A2  3090               	movlw	high (STR_33| (0+32768))
  6548  05A3  00F6               	movwf	LCD_Write_String@a+1
  6549  05A4  3196  2622  3181   	fcall	_LCD_Write_String
  6550                           
  6551                           ;main.c: 217: LCD_Write_Int(dutyCycle/10,-1,0,0);
  6552  05A7  300A               	movlw	10
  6553  05A8  00F0               	movwf	___lwdiv@divisor
  6554  05A9  3000               	movlw	0
  6555  05AA  00F1               	movwf	___lwdiv@divisor+1
  6556  05AB  0021               	movlb	1	; select bank1
  6557  05AC  083F               	movf	(main@dutyCycle+1)^(0+128),w
  6558  05AD  00F3               	movwf	___lwdiv@dividend+1
  6559  05AE  083E               	movf	main@dutyCycle^(0+128),w
  6560  05AF  00F2               	movwf	___lwdiv@dividend
  6561  05B0  3196  26D5  3181   	fcall	___lwdiv
  6562  05B3  0871               	movf	?___lwdiv+1,w
  6563  05B4  0020               	movlb	0	; select bank0
  6564  05B5  00A1               	movwf	LCD_Write_Int@value+1
  6565  05B6  0870               	movf	?___lwdiv,w
  6566  05B7  00A0               	movwf	LCD_Write_Int@value
  6567  05B8  01A2               	clrf	LCD_Write_Int@fieldLength
  6568  05B9  03A2               	decf	LCD_Write_Int@fieldLength,f
  6569  05BA  01A3               	clrf	LCD_Write_Int@numPlaces
  6570  05BB  01A4               	clrf	LCD_Write_Int@sign
  6571  05BC  318D  2526  3181   	fcall	_LCD_Write_Int
  6572                           
  6573                           ;main.c: 218: LCD_Write_Char('%');
  6574  05BF  3025               	movlw	37
  6575  05C0  3188  2007  3181   	fcall	_LCD_Write_Char
  6576                           
  6577                           ;main.c: 219: LCD_Write_Char(' ');
  6578  05C3  3020               	movlw	32
  6579  05C4  3188  2007  3181   	fcall	_LCD_Write_Char
  6580                           
  6581                           ;main.c: 220: PWM6_LoadDutyValue(dutyCycle);
  6582  05C7  0021               	movlb	1	; select bank1
  6583  05C8  083F               	movf	(main@dutyCycle+1)^(0+128),w
  6584  05C9  00F1               	movwf	PWM6_LoadDutyValue@dutyCycle+1
  6585  05CA  083E               	movf	main@dutyCycle^(0+128),w
  6586  05CB  00F0               	movwf	PWM6_LoadDutyValue@dutyCycle
  6587  05CC  3195  25F4  3181   	fcall	_PWM6_LoadDutyValue
  6588  05CF                     l3187:	
  6589  05CF  3003               	movlw	3
  6590  05D0  0021               	movlb	1	; select bank1
  6591  05D1  022C               	subwf	((main@analogs+1)^(0+128)+6),w
  6592  05D2  30CF               	movlw	207
  6593  05D3  1903               	skipnz
  6594  05D4  022B               	subwf	(main@analogs^(0+128)+6),w
  6595  05D5  1C03               	skipc
  6596  05D6  2D7B               	goto	l3163
  6597                           
  6598                           ;main.c: 221: }
  6599                           ;main.c: 222: bCount=0;
  6600  05D7  01B1               	clrf	main@bCount^(0+128)
  6601  05D8  01B2               	clrf	(main@bCount+1)^(0+128)
  6602                           
  6603                           ;main.c: 223: _delay((unsigned long)((100)*(32000000/4000.0)));
  6604  05D9  3005               	movlw	5
  6605  05DA  0020               	movlb	0	; select bank0
  6606  05DB  00EB               	movwf	??_main+2
  6607  05DC  300F               	movlw	15
  6608  05DD  00EA               	movwf	??_main+1
  6609  05DE  30F4               	movlw	244
  6610  05DF  00E9               	movwf	??_main
  6611  05E0                     u3807:	
  6612  05E0  0BE9               	decfsz	??_main,f
  6613  05E1  2DE0               	goto	u3807
  6614  05E2  0BEA               	decfsz	??_main+1,f
  6615  05E3  2DE0               	goto	u3807
  6616  05E4  0BEB               	decfsz	??_main+2,f
  6617  05E5  2DE0               	goto	u3807
  6618                           
  6619                           ;main.c: 224: LCD_Clear();
  6620  05E6  3195  2574  3181   	fcall	_LCD_Clear
  6621                           
  6622                           ;main.c: 225: resetDelay=0;
  6623  05E9  0021               	movlb	1	; select bank1
  6624  05EA  01B9               	clrf	main@resetDelay^(0+128)
  6625  05EB                     l3197:	
  6626                           
  6627                           ;main.c: 226: }
  6628                           ;main.c: 227: }
  6629                           ;main.c: 228: }
  6630                           ;main.c: 232: displayTemp = (tempCalc(analogs[4]))-3;
  6631  05EB  082E               	movf	((main@analogs+1)^(0+128)+8),w
  6632  05EC  0020               	movlb	0	; select bank0
  6633  05ED  00DE               	movwf	tempCalc@analogValue+1
  6634  05EE  0021               	movlb	1	; select bank1
  6635  05EF  082D               	movf	(main@analogs^(0+128)+8),w
  6636  05F0  0020               	movlb	0	; select bank0
  6637  05F1  00DD               	movwf	tempCalc@analogValue
  6638  05F2  318D  25F1  3181   	fcall	_tempCalc
  6639  05F5  0020               	movlb	0	; select bank0
  6640  05F6  085D               	movf	?_tempCalc,w
  6641  05F7  0021               	movlb	1	; select bank1
  6642  05F8  00A0               	movwf	_main$989^(0+128)
  6643  05F9  0020               	movlb	0	; select bank0
  6644  05FA  085E               	movf	?_tempCalc+1,w
  6645  05FB  0021               	movlb	1	; select bank1
  6646  05FC  00A1               	movwf	(_main$989+1)^(0+128)
  6647  05FD  0020               	movlb	0	; select bank0
  6648  05FE  085F               	movf	?_tempCalc+2,w
  6649  05FF  0021               	movlb	1	; select bank1
  6650  0600  00A2               	movwf	(_main$989+2)^(0+128)
  6651                           
  6652                           ;main.c: 226: }
  6653                           ;main.c: 227: }
  6654                           ;main.c: 228: }
  6655                           ;main.c: 232: displayTemp = (tempCalc(analogs[4]))-3;
  6656  0601  3000               	movlw	0
  6657  0602  0020               	movlb	0	; select bank0
  6658  0603  00C0               	movwf	___ftadd@f1
  6659  0604  3040               	movlw	64
  6660  0605  00C1               	movwf	___ftadd@f1+1
  6661  0606  30C0               	movlw	192
  6662  0607  00C2               	movwf	___ftadd@f1+2
  6663  0608  0021               	movlb	1	; select bank1
  6664  0609  0820               	movf	_main$989^(0+128),w
  6665  060A  0020               	movlb	0	; select bank0
  6666  060B  00C3               	movwf	___ftadd@f2
  6667  060C  0021               	movlb	1	; select bank1
  6668  060D  0821               	movf	(_main$989+1)^(0+128),w
  6669  060E  0020               	movlb	0	; select bank0
  6670  060F  00C4               	movwf	___ftadd@f2+1
  6671  0610  0021               	movlb	1	; select bank1
  6672  0611  0822               	movf	(_main$989+2)^(0+128),w
  6673  0612  0020               	movlb	0	; select bank0
  6674  0613  00C5               	movwf	___ftadd@f2+2
  6675  0614  3180  203D  3181   	fcall	___ftadd
  6676  0617  0020               	movlb	0	; select bank0
  6677  0618  0840               	movf	?___ftadd,w
  6678  0619  0021               	movlb	1	; select bank1
  6679  061A  00B3               	movwf	main@displayTemp^(0+128)
  6680  061B  0020               	movlb	0	; select bank0
  6681  061C  0841               	movf	?___ftadd+1,w
  6682  061D  0021               	movlb	1	; select bank1
  6683  061E  00B4               	movwf	(main@displayTemp+1)^(0+128)
  6684  061F  0020               	movlb	0	; select bank0
  6685  0620  0842               	movf	?___ftadd+2,w
  6686  0621  0021               	movlb	1	; select bank1
  6687  0622  00B5               	movwf	(main@displayTemp+2)^(0+128)
  6688                           
  6689                           ;main.c: 234: displayTemp2 = tempCalc(analogs[5]);
  6690  0623  0830               	movf	((main@analogs+1)^(0+128)+10),w
  6691  0624  0020               	movlb	0	; select bank0
  6692  0625  00DE               	movwf	tempCalc@analogValue+1
  6693  0626  0021               	movlb	1	; select bank1
  6694  0627  082F               	movf	(main@analogs^(0+128)+10),w
  6695  0628  0020               	movlb	0	; select bank0
  6696  0629  00DD               	movwf	tempCalc@analogValue
  6697  062A  318D  25F1  3181   	fcall	_tempCalc
  6698  062D  0020               	movlb	0	; select bank0
  6699  062E  085D               	movf	?_tempCalc,w
  6700  062F  0021               	movlb	1	; select bank1
  6701  0630  00B6               	movwf	main@displayTemp2^(0+128)
  6702  0631  0020               	movlb	0	; select bank0
  6703  0632  085E               	movf	?_tempCalc+1,w
  6704  0633  0021               	movlb	1	; select bank1
  6705  0634  00B7               	movwf	(main@displayTemp2+1)^(0+128)
  6706  0635  0020               	movlb	0	; select bank0
  6707  0636  085F               	movf	?_tempCalc+2,w
  6708  0637  0021               	movlb	1	; select bank1
  6709  0638  00B8               	movwf	(main@displayTemp2+2)^(0+128)
  6710                           
  6711                           ;main.c: 236: if(loop>127)
  6712  0639  3080               	movlw	128
  6713  063A  0223               	subwf	main@loop^(0+128),w
  6714  063B  1C03               	skipc
  6715  063C  2FB6               	goto	l3267
  6716                           
  6717                           ;main.c: 237: {
  6718                           ;main.c: 238: tPadCount=10;
  6719  063D  300A               	movlw	10
  6720  063E  0020               	movlb	0	; select bank0
  6721  063F  00E9               	movwf	??_main
  6722  0640  0869               	movf	??_main,w
  6723  0641  0021               	movlb	1	; select bank1
  6724  0642  00BA               	movwf	main@tPadCount^(0+128)
  6725                           
  6726                           ;main.c: 239: { LCD_Set_Cursor(0,0); LCD_Write_String("In");};
  6727  0643  01F4               	clrf	LCD_Set_Cursor@y
  6728  0644  3000               	movlw	0
  6729  0645  3197  277F  3181   	fcall	_LCD_Set_Cursor
  6730  0648  305A               	movlw	low (STR_35| (0+32768))
  6731  0649  00F5               	movwf	LCD_Write_String@a
  6732  064A  3090               	movlw	high (STR_35| (0+32768))
  6733  064B  00F6               	movwf	LCD_Write_String@a+1
  6734  064C  3196  2622  3181   	fcall	_LCD_Write_String
  6735                           
  6736                           ;main.c: 240: LCD_Write_Char(1);
  6737  064F  3001               	movlw	1
  6738  0650  3188  2007  3181   	fcall	_LCD_Write_Char
  6739                           
  6740                           ;main.c: 241: LCD_Write_String("Solar");
  6741  0653  304B               	movlw	low (STR_36| (0+32768))
  6742  0654  00F5               	movwf	LCD_Write_String@a
  6743  0655  3090               	movlw	high (STR_36| (0+32768))
  6744  0656  00F6               	movwf	LCD_Write_String@a+1
  6745  0657  3196  2622  3181   	fcall	_LCD_Write_String
  6746                           
  6747                           ;main.c: 243: { LCD_Set_Cursor(0,1); LCD_Write_String("Out");};
  6748  065A  01F4               	clrf	LCD_Set_Cursor@y
  6749  065B  0AF4               	incf	LCD_Set_Cursor@y,f
  6750  065C  3000               	movlw	0
  6751  065D  3197  277F  3181   	fcall	_LCD_Set_Cursor
  6752  0660  3056               	movlw	low (STR_37| (0+32768))
  6753  0661  00F5               	movwf	LCD_Write_String@a
  6754  0662  3090               	movlw	high (STR_37| (0+32768))
  6755  0663  00F6               	movwf	LCD_Write_String@a+1
  6756  0664  3196  2622  3181   	fcall	_LCD_Write_String
  6757                           
  6758                           ;main.c: 244: LCD_Write_Char(1);
  6759  0667  3001               	movlw	1
  6760  0668  3188  2007  3181   	fcall	_LCD_Write_Char
  6761                           
  6762                           ;main.c: 245: LCD_Write_String("Pool");
  6763  066B  3051               	movlw	low (STR_38| (0+32768))
  6764  066C  00F5               	movwf	LCD_Write_String@a
  6765  066D  3090               	movlw	high (STR_38| (0+32768))
  6766  066E  00F6               	movwf	LCD_Write_String@a+1
  6767  066F  3196  2622  3181   	fcall	_LCD_Write_String
  6768                           
  6769                           ;main.c: 247: if(C_or_F==0)
  6770  0672  0021               	movlb	1	; select bank1
  6771  0673  083C               	movf	main@C_or_F^(0+128),w
  6772  0674  1D03               	btfss	3,2
  6773  0675  2EC7               	goto	l3237
  6774                           
  6775                           ;main.c: 248: {
  6776                           ;main.c: 249: { LCD_Set_Cursor(9,0); LCD_Write_Int((int)displayTemp,-1, 1, 0);};
  6777  0676  01F4               	clrf	LCD_Set_Cursor@y
  6778  0677  3009               	movlw	9
  6779  0678  3197  277F  3181   	fcall	_LCD_Set_Cursor
  6780  067B  0021               	movlb	1	; select bank1
  6781  067C  0833               	movf	main@displayTemp^(0+128),w
  6782  067D  00F0               	movwf	___fttol@f1
  6783  067E  0834               	movf	(main@displayTemp+1)^(0+128),w
  6784  067F  00F1               	movwf	___fttol@f1+1
  6785  0680  0835               	movf	(main@displayTemp+2)^(0+128),w
  6786  0681  00F2               	movwf	___fttol@f1+2
  6787  0682  318A  220F  3181   	fcall	___fttol
  6788  0685  0871               	movf	?___fttol+1,w
  6789  0686  0020               	movlb	0	; select bank0
  6790  0687  00A1               	movwf	LCD_Write_Int@value+1
  6791  0688  0870               	movf	?___fttol,w
  6792  0689  00A0               	movwf	LCD_Write_Int@value
  6793  068A  01A2               	clrf	LCD_Write_Int@fieldLength
  6794  068B  03A2               	decf	LCD_Write_Int@fieldLength,f
  6795  068C  01A3               	clrf	LCD_Write_Int@numPlaces
  6796  068D  0AA3               	incf	LCD_Write_Int@numPlaces,f
  6797  068E  01A4               	clrf	LCD_Write_Int@sign
  6798  068F  318D  2526  3181   	fcall	_LCD_Write_Int
  6799                           
  6800                           ;main.c: 250: LCD_Write_Char(0);
  6801  0692  3000               	movlw	0
  6802  0693  3188  2007  3181   	fcall	_LCD_Write_Char
  6803                           
  6804                           ;main.c: 251: LCD_Write_Char('C');
  6805  0696  3043               	movlw	67
  6806  0697  3188  2007  3181   	fcall	_LCD_Write_Char
  6807                           
  6808                           ;main.c: 252: LCD_Write_Char(' ');
  6809  069A  3020               	movlw	32
  6810  069B  3188  2007  3181   	fcall	_LCD_Write_Char
  6811                           
  6812                           ;main.c: 254: { LCD_Set_Cursor(9,1); LCD_Write_Int((int)displayTemp2,-1, 1, 0);};
  6813  069E  01F4               	clrf	LCD_Set_Cursor@y
  6814  069F  0AF4               	incf	LCD_Set_Cursor@y,f
  6815  06A0  3009               	movlw	9
  6816  06A1  3197  277F  3181   	fcall	_LCD_Set_Cursor
  6817  06A4  0021               	movlb	1	; select bank1
  6818  06A5  0836               	movf	main@displayTemp2^(0+128),w
  6819  06A6  00F0               	movwf	___fttol@f1
  6820  06A7  0837               	movf	(main@displayTemp2+1)^(0+128),w
  6821  06A8  00F1               	movwf	___fttol@f1+1
  6822  06A9  0838               	movf	(main@displayTemp2+2)^(0+128),w
  6823  06AA  00F2               	movwf	___fttol@f1+2
  6824  06AB  318A  220F  3181   	fcall	___fttol
  6825  06AE  0871               	movf	?___fttol+1,w
  6826  06AF  0020               	movlb	0	; select bank0
  6827  06B0  00A1               	movwf	LCD_Write_Int@value+1
  6828  06B1  0870               	movf	?___fttol,w
  6829  06B2  00A0               	movwf	LCD_Write_Int@value
  6830  06B3  01A2               	clrf	LCD_Write_Int@fieldLength
  6831  06B4  03A2               	decf	LCD_Write_Int@fieldLength,f
  6832  06B5  01A3               	clrf	LCD_Write_Int@numPlaces
  6833  06B6  0AA3               	incf	LCD_Write_Int@numPlaces,f
  6834  06B7  01A4               	clrf	LCD_Write_Int@sign
  6835  06B8  318D  2526  3181   	fcall	_LCD_Write_Int
  6836                           
  6837                           ;main.c: 255: LCD_Write_Char(0);
  6838  06BB  3000               	movlw	0
  6839  06BC  3188  2007  3181   	fcall	_LCD_Write_Char
  6840                           
  6841                           ;main.c: 256: LCD_Write_Char('C');
  6842  06BF  3043               	movlw	67
  6843  06C0  3188  2007  3181   	fcall	_LCD_Write_Char
  6844                           
  6845                           ;main.c: 257: LCD_Write_Char(' ');
  6846  06C3  3020               	movlw	32
  6847  06C4  3188  2007  3181   	fcall	_LCD_Write_Char
  6848  06C7                     l3237:	
  6849                           
  6850                           ;main.c: 258: }
  6851                           ;main.c: 260: if(C_or_F==1)
  6852  06C7  0021               	movlb	1	; select bank1
  6853  06C8  033C               	decf	main@C_or_F^(0+128),w
  6854  06C9  1D03               	btfss	3,2
  6855  06CA  2FA0               	goto	l3253
  6856                           
  6857                           ;main.c: 261: {
  6858                           ;main.c: 262: displayTemp = displayTemp*9/5+320;
  6859  06CB  3000               	movlw	0
  6860  06CC  0020               	movlb	0	; select bank0
  6861  06CD  00C0               	movwf	___ftadd@f1
  6862  06CE  30A0               	movlw	160
  6863  06CF  00C1               	movwf	___ftadd@f1+1
  6864  06D0  3043               	movlw	67
  6865  06D1  00C2               	movwf	___ftadd@f1+2
  6866  06D2  3000               	movlw	0
  6867  06D3  00B0               	movwf	___ftdiv@f2
  6868  06D4  30A0               	movlw	160
  6869  06D5  00B1               	movwf	___ftdiv@f2+1
  6870  06D6  3040               	movlw	64
  6871  06D7  00B2               	movwf	___ftdiv@f2+2
  6872  06D8  3000               	movlw	0
  6873  06D9  00A0               	movwf	___ftmul@f1
  6874  06DA  3010               	movlw	16
  6875  06DB  00A1               	movwf	___ftmul@f1+1
  6876  06DC  3041               	movlw	65
  6877  06DD  00A2               	movwf	___ftmul@f1+2
  6878  06DE  0021               	movlb	1	; select bank1
  6879  06DF  0833               	movf	main@displayTemp^(0+128),w
  6880  06E0  0020               	movlb	0	; select bank0
  6881  06E1  00A3               	movwf	___ftmul@f2
  6882  06E2  0021               	movlb	1	; select bank1
  6883  06E3  0834               	movf	(main@displayTemp+1)^(0+128),w
  6884  06E4  0020               	movlb	0	; select bank0
  6885  06E5  00A4               	movwf	___ftmul@f2+1
  6886  06E6  0021               	movlb	1	; select bank1
  6887  06E7  0835               	movf	(main@displayTemp+2)^(0+128),w
  6888  06E8  0020               	movlb	0	; select bank0
  6889  06E9  00A5               	movwf	___ftmul@f2+2
  6890  06EA  318C  2472  3181   	fcall	___ftmul
  6891  06ED  0020               	movlb	0	; select bank0
  6892  06EE  0820               	movf	?___ftmul,w
  6893  06EF  00B3               	movwf	___ftdiv@f1
  6894  06F0  0821               	movf	?___ftmul+1,w
  6895  06F1  00B4               	movwf	___ftdiv@f1+1
  6896  06F2  0822               	movf	?___ftmul+2,w
  6897  06F3  00B5               	movwf	___ftdiv@f1+2
  6898  06F4  318B  231C  3181   	fcall	___ftdiv
  6899  06F7  0020               	movlb	0	; select bank0
  6900  06F8  0830               	movf	?___ftdiv,w
  6901  06F9  00C3               	movwf	___ftadd@f2
  6902  06FA  0831               	movf	?___ftdiv+1,w
  6903  06FB  00C4               	movwf	___ftadd@f2+1
  6904  06FC  0832               	movf	?___ftdiv+2,w
  6905  06FD  00C5               	movwf	___ftadd@f2+2
  6906  06FE  3180  203D  3181   	fcall	___ftadd
  6907  0701  0020               	movlb	0	; select bank0
  6908  0702  0840               	movf	?___ftadd,w
  6909  0703  0021               	movlb	1	; select bank1
  6910  0704  00B3               	movwf	main@displayTemp^(0+128)
  6911  0705  0020               	movlb	0	; select bank0
  6912  0706  0841               	movf	?___ftadd+1,w
  6913  0707  0021               	movlb	1	; select bank1
  6914  0708  00B4               	movwf	(main@displayTemp+1)^(0+128)
  6915  0709  0020               	movlb	0	; select bank0
  6916  070A  0842               	movf	?___ftadd+2,w
  6917  070B  0021               	movlb	1	; select bank1
  6918  070C  00B5               	movwf	(main@displayTemp+2)^(0+128)
  6919                           
  6920                           ;main.c: 263: displayTemp2 = displayTemp2*9/5+320;
  6921  070D  3000               	movlw	0
  6922  070E  0020               	movlb	0	; select bank0
  6923  070F  00C0               	movwf	___ftadd@f1
  6924  0710  30A0               	movlw	160
  6925  0711  00C1               	movwf	___ftadd@f1+1
  6926  0712  3043               	movlw	67
  6927  0713  00C2               	movwf	___ftadd@f1+2
  6928  0714  3000               	movlw	0
  6929  0715  00B0               	movwf	___ftdiv@f2
  6930  0716  30A0               	movlw	160
  6931  0717  00B1               	movwf	___ftdiv@f2+1
  6932  0718  3040               	movlw	64
  6933  0719  00B2               	movwf	___ftdiv@f2+2
  6934  071A  3000               	movlw	0
  6935  071B  00A0               	movwf	___ftmul@f1
  6936  071C  3010               	movlw	16
  6937  071D  00A1               	movwf	___ftmul@f1+1
  6938  071E  3041               	movlw	65
  6939  071F  00A2               	movwf	___ftmul@f1+2
  6940  0720  0021               	movlb	1	; select bank1
  6941  0721  0836               	movf	main@displayTemp2^(0+128),w
  6942  0722  0020               	movlb	0	; select bank0
  6943  0723  00A3               	movwf	___ftmul@f2
  6944  0724  0021               	movlb	1	; select bank1
  6945  0725  0837               	movf	(main@displayTemp2+1)^(0+128),w
  6946  0726  0020               	movlb	0	; select bank0
  6947  0727  00A4               	movwf	___ftmul@f2+1
  6948  0728  0021               	movlb	1	; select bank1
  6949  0729  0838               	movf	(main@displayTemp2+2)^(0+128),w
  6950  072A  0020               	movlb	0	; select bank0
  6951  072B  00A5               	movwf	___ftmul@f2+2
  6952  072C  318C  2472  3181   	fcall	___ftmul
  6953  072F  0020               	movlb	0	; select bank0
  6954  0730  0820               	movf	?___ftmul,w
  6955  0731  00B3               	movwf	___ftdiv@f1
  6956  0732  0821               	movf	?___ftmul+1,w
  6957  0733  00B4               	movwf	___ftdiv@f1+1
  6958  0734  0822               	movf	?___ftmul+2,w
  6959  0735  00B5               	movwf	___ftdiv@f1+2
  6960  0736  318B  231C  3181   	fcall	___ftdiv
  6961  0739  0020               	movlb	0	; select bank0
  6962  073A  0830               	movf	?___ftdiv,w
  6963  073B  00C3               	movwf	___ftadd@f2
  6964  073C  0831               	movf	?___ftdiv+1,w
  6965  073D  00C4               	movwf	___ftadd@f2+1
  6966  073E  0832               	movf	?___ftdiv+2,w
  6967  073F  00C5               	movwf	___ftadd@f2+2
  6968  0740  3180  203D  3181   	fcall	___ftadd
  6969  0743  0020               	movlb	0	; select bank0
  6970  0744  0840               	movf	?___ftadd,w
  6971  0745  0021               	movlb	1	; select bank1
  6972  0746  00B6               	movwf	main@displayTemp2^(0+128)
  6973  0747  0020               	movlb	0	; select bank0
  6974  0748  0841               	movf	?___ftadd+1,w
  6975  0749  0021               	movlb	1	; select bank1
  6976  074A  00B7               	movwf	(main@displayTemp2+1)^(0+128)
  6977  074B  0020               	movlb	0	; select bank0
  6978  074C  0842               	movf	?___ftadd+2,w
  6979  074D  0021               	movlb	1	; select bank1
  6980  074E  00B8               	movwf	(main@displayTemp2+2)^(0+128)
  6981                           
  6982                           ;main.c: 265: { LCD_Set_Cursor(9,0); LCD_Write_Int((int)displayTemp,-1, 1, 0);};
  6983  074F  01F4               	clrf	LCD_Set_Cursor@y
  6984  0750  3009               	movlw	9
  6985  0751  3197  277F  3181   	fcall	_LCD_Set_Cursor
  6986  0754  0021               	movlb	1	; select bank1
  6987  0755  0833               	movf	main@displayTemp^(0+128),w
  6988  0756  00F0               	movwf	___fttol@f1
  6989  0757  0834               	movf	(main@displayTemp+1)^(0+128),w
  6990  0758  00F1               	movwf	___fttol@f1+1
  6991  0759  0835               	movf	(main@displayTemp+2)^(0+128),w
  6992  075A  00F2               	movwf	___fttol@f1+2
  6993  075B  318A  220F  3181   	fcall	___fttol
  6994  075E  0871               	movf	?___fttol+1,w
  6995  075F  0020               	movlb	0	; select bank0
  6996  0760  00A1               	movwf	LCD_Write_Int@value+1
  6997  0761  0870               	movf	?___fttol,w
  6998  0762  00A0               	movwf	LCD_Write_Int@value
  6999  0763  01A2               	clrf	LCD_Write_Int@fieldLength
  7000  0764  03A2               	decf	LCD_Write_Int@fieldLength,f
  7001  0765  01A3               	clrf	LCD_Write_Int@numPlaces
  7002  0766  0AA3               	incf	LCD_Write_Int@numPlaces,f
  7003  0767  01A4               	clrf	LCD_Write_Int@sign
  7004  0768  318D  2526  3181   	fcall	_LCD_Write_Int
  7005                           
  7006                           ;main.c: 266: LCD_Write_Char(0);
  7007  076B  3000               	movlw	0
  7008  076C  3188  2007  3181   	fcall	_LCD_Write_Char
  7009                           
  7010                           ;main.c: 267: LCD_Write_Char('F');
  7011  076F  3046               	movlw	70
  7012  0770  3188  2007  3181   	fcall	_LCD_Write_Char
  7013                           
  7014                           ;main.c: 268: LCD_Write_Char(' ');
  7015  0773  3020               	movlw	32
  7016  0774  3188  2007  3181   	fcall	_LCD_Write_Char
  7017                           
  7018                           ;main.c: 270: { LCD_Set_Cursor(9,1); LCD_Write_Int((int)displayTemp2,-1, 1, 0);};
  7019  0777  01F4               	clrf	LCD_Set_Cursor@y
  7020  0778  0AF4               	incf	LCD_Set_Cursor@y,f
  7021  0779  3009               	movlw	9
  7022  077A  3197  277F  3181   	fcall	_LCD_Set_Cursor
  7023  077D  0021               	movlb	1	; select bank1
  7024  077E  0836               	movf	main@displayTemp2^(0+128),w
  7025  077F  00F0               	movwf	___fttol@f1
  7026  0780  0837               	movf	(main@displayTemp2+1)^(0+128),w
  7027  0781  00F1               	movwf	___fttol@f1+1
  7028  0782  0838               	movf	(main@displayTemp2+2)^(0+128),w
  7029  0783  00F2               	movwf	___fttol@f1+2
  7030  0784  318A  220F  3181   	fcall	___fttol
  7031  0787  0871               	movf	?___fttol+1,w
  7032  0788  0020               	movlb	0	; select bank0
  7033  0789  00A1               	movwf	LCD_Write_Int@value+1
  7034  078A  0870               	movf	?___fttol,w
  7035  078B  00A0               	movwf	LCD_Write_Int@value
  7036  078C  01A2               	clrf	LCD_Write_Int@fieldLength
  7037  078D  03A2               	decf	LCD_Write_Int@fieldLength,f
  7038  078E  01A3               	clrf	LCD_Write_Int@numPlaces
  7039  078F  0AA3               	incf	LCD_Write_Int@numPlaces,f
  7040  0790  01A4               	clrf	LCD_Write_Int@sign
  7041  0791  318D  2526  3181   	fcall	_LCD_Write_Int
  7042                           
  7043                           ;main.c: 271: LCD_Write_Char(0);
  7044  0794  3000               	movlw	0
  7045  0795  3188  2007  3181   	fcall	_LCD_Write_Char
  7046                           
  7047                           ;main.c: 272: LCD_Write_Char('F');
  7048  0798  3046               	movlw	70
  7049  0799  3188  2007  3181   	fcall	_LCD_Write_Char
  7050                           
  7051                           ;main.c: 273: LCD_Write_Char(' ');
  7052  079C  3020               	movlw	32
  7053  079D  3188  2007  3181   	fcall	_LCD_Write_Char
  7054  07A0                     l3253:	
  7055                           
  7056                           ;main.c: 274: }
  7057                           ;main.c: 277: if(choice==0)C_or_F=0;
  7058  07A0  0021               	movlb	1	; select bank1
  7059  07A1  083B               	movf	main@choice^(0+128),w
  7060  07A2  1903               	btfsc	3,2
  7061  07A3  01BC               	clrf	main@C_or_F^(0+128)
  7062                           
  7063                           ;main.c: 279: if(choice==1)C_or_F=1;
  7064  07A4  033B               	decf	main@choice^(0+128),w
  7065  07A5  1D03               	btfss	3,2
  7066  07A6  2FA9               	goto	l3261
  7067  07A7  01BC               	clrf	main@C_or_F^(0+128)
  7068  07A8  0ABC               	incf	main@C_or_F^(0+128),f
  7069  07A9                     l3261:	
  7070                           
  7071                           ;main.c: 281: if(choice==2)C_or_F=1-C_or_F;
  7072  07A9  3002               	movlw	2
  7073  07AA  063B               	xorwf	main@choice^(0+128),w
  7074  07AB  1D03               	btfss	3,2
  7075  07AC  2FB5               	goto	l3265
  7076  07AD  033C               	decf	main@C_or_F^(0+128),w
  7077  07AE  3AFF               	xorlw	255
  7078  07AF  3E01               	addlw	1
  7079  07B0  0020               	movlb	0	; select bank0
  7080  07B1  00E9               	movwf	??_main
  7081  07B2  0869               	movf	??_main,w
  7082  07B3  0021               	movlb	1	; select bank1
  7083  07B4  00BC               	movwf	main@C_or_F^(0+128)
  7084  07B5                     l3265:	
  7085                           
  7086                           ;main.c: 297: loop=0;
  7087  07B5  01A3               	clrf	main@loop^(0+128)
  7088  07B6                     l3267:	
  7089                           
  7090                           ;main.c: 298: }
  7091                           ;main.c: 299: loop+=1;
  7092  07B6  3001               	movlw	1
  7093  07B7  0020               	movlb	0	; select bank0
  7094  07B8  00E9               	movwf	??_main
  7095  07B9  0869               	movf	??_main,w
  7096  07BA  0021               	movlb	1	; select bank1
  7097  07BB  07A3               	addwf	main@loop^(0+128),f
  7098  07BC  2BB3               	goto	l3011
  7099  07BD                     __end_of_main:	
  7100                           
  7101                           	psect	text1
  7102  0DF1                     __ptext1:	
  7103 ;; *************** function _tempCalc *****************
  7104 ;; Defined at:
  7105 ;;		line 4 in file "tempCalc.c"
  7106 ;; Parameters:    Size  Location     Type
  7107 ;;  analogValue     2   61[BANK0 ] int 
  7108 ;; Auto vars:     Size  Location     Type
  7109 ;;  steinhart       3   70[BANK0 ] float 
  7110 ;;  R               3   64[BANK0 ] float 
  7111 ;; Return value:  Size  Location     Type
  7112 ;;                  3   61[BANK0 ] float 
  7113 ;; Registers used:
  7114 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7115 ;; Tracked objects:
  7116 ;;		On entry : 0/0
  7117 ;;		On exit  : 0/0
  7118 ;;		Unchanged: 0/0
  7119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7120 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7121 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7123 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7124 ;;Total ram usage:       12 bytes
  7125 ;; Hardware stack levels used:    1
  7126 ;; Hardware stack levels required when called:    4
  7127 ;; This function calls:
  7128 ;;		___awtoft
  7129 ;;		___ftadd
  7130 ;;		___ftdiv
  7131 ;;		___ftmul
  7132 ;;		___ftsub
  7133 ;;		_log
  7134 ;; This function is called by:
  7135 ;;		_main
  7136 ;; This function uses a non-reentrant model
  7137 ;;
  7138                           
  7139                           
  7140                           ;psect for function _tempCalc
  7141  0DF1                     _tempCalc:	
  7142                           
  7143                           ;tempCalc.c: 6: float R, steinhart;
  7144                           ;tempCalc.c: 8: R = 10020/(1023/(float)analogValue - 1);
  7145                           
  7146                           ;incstack = 0
  7147                           ; Regs used in _tempCalc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7148  0DF1  3000               	movlw	0
  7149  0DF2  0020               	movlb	0	; select bank0
  7150  0DF3  00C0               	movwf	___ftadd@f1
  7151  0DF4  3080               	movlw	128
  7152  0DF5  00C1               	movwf	___ftadd@f1+1
  7153  0DF6  30BF               	movlw	191
  7154  0DF7  00C2               	movwf	___ftadd@f1+2
  7155  0DF8  085E               	movf	tempCalc@analogValue+1,w
  7156  0DF9  00F9               	movwf	___awtoft@c+1
  7157  0DFA  085D               	movf	tempCalc@analogValue,w
  7158  0DFB  00F8               	movwf	___awtoft@c
  7159  0DFC  3196  268F  318D   	fcall	___awtoft
  7160  0DFF  0878               	movf	?___awtoft,w
  7161  0E00  0020               	movlb	0	; select bank0
  7162  0E01  00B0               	movwf	___ftdiv@f2
  7163  0E02  0879               	movf	?___awtoft+1,w
  7164  0E03  00B1               	movwf	___ftdiv@f2+1
  7165  0E04  087A               	movf	?___awtoft+2,w
  7166  0E05  00B2               	movwf	___ftdiv@f2+2
  7167  0E06  30C0               	movlw	192
  7168  0E07  00B3               	movwf	___ftdiv@f1
  7169  0E08  307F               	movlw	127
  7170  0E09  00B4               	movwf	___ftdiv@f1+1
  7171  0E0A  3044               	movlw	68
  7172  0E0B  00B5               	movwf	___ftdiv@f1+2
  7173  0E0C  318B  231C  318D   	fcall	___ftdiv
  7174  0E0F  0020               	movlb	0	; select bank0
  7175  0E10  0830               	movf	?___ftdiv,w
  7176  0E11  00C3               	movwf	___ftadd@f2
  7177  0E12  0831               	movf	?___ftdiv+1,w
  7178  0E13  00C4               	movwf	___ftadd@f2+1
  7179  0E14  0832               	movf	?___ftdiv+2,w
  7180  0E15  00C5               	movwf	___ftadd@f2+2
  7181  0E16  3180  203D  318D   	fcall	___ftadd
  7182  0E19  0020               	movlb	0	; select bank0
  7183  0E1A  0840               	movf	?___ftadd,w
  7184  0E1B  00E3               	movwf	_tempCalc$988
  7185  0E1C  0841               	movf	?___ftadd+1,w
  7186  0E1D  00E4               	movwf	_tempCalc$988+1
  7187  0E1E  0842               	movf	?___ftadd+2,w
  7188  0E1F  00E5               	movwf	_tempCalc$988+2
  7189                           
  7190                           ;tempCalc.c: 6: float R, steinhart;
  7191                           ;tempCalc.c: 8: R = 10020/(1023/(float)analogValue - 1);
  7192  0E20  0863               	movf	_tempCalc$988,w
  7193  0E21  00B0               	movwf	___ftdiv@f2
  7194  0E22  0864               	movf	_tempCalc$988+1,w
  7195  0E23  00B1               	movwf	___ftdiv@f2+1
  7196  0E24  0865               	movf	_tempCalc$988+2,w
  7197  0E25  00B2               	movwf	___ftdiv@f2+2
  7198  0E26  3090               	movlw	144
  7199  0E27  00B3               	movwf	___ftdiv@f1
  7200  0E28  301C               	movlw	28
  7201  0E29  00B4               	movwf	___ftdiv@f1+1
  7202  0E2A  3046               	movlw	70
  7203  0E2B  00B5               	movwf	___ftdiv@f1+2
  7204  0E2C  318B  231C  318D   	fcall	___ftdiv
  7205  0E2F  0020               	movlb	0	; select bank0
  7206  0E30  0830               	movf	?___ftdiv,w
  7207  0E31  00E0               	movwf	tempCalc@R
  7208  0E32  0831               	movf	?___ftdiv+1,w
  7209  0E33  00E1               	movwf	tempCalc@R+1
  7210  0E34  0832               	movf	?___ftdiv+2,w
  7211  0E35  00E2               	movwf	tempCalc@R+2
  7212                           
  7213                           ;tempCalc.c: 10: steinhart = R /10061;
  7214  0E36  3034               	movlw	52
  7215  0E37  00B0               	movwf	___ftdiv@f2
  7216  0E38  301D               	movlw	29
  7217  0E39  00B1               	movwf	___ftdiv@f2+1
  7218  0E3A  3046               	movlw	70
  7219  0E3B  00B2               	movwf	___ftdiv@f2+2
  7220  0E3C  0860               	movf	tempCalc@R,w
  7221  0E3D  00B3               	movwf	___ftdiv@f1
  7222  0E3E  0861               	movf	tempCalc@R+1,w
  7223  0E3F  00B4               	movwf	___ftdiv@f1+1
  7224  0E40  0862               	movf	tempCalc@R+2,w
  7225  0E41  00B5               	movwf	___ftdiv@f1+2
  7226  0E42  318B  231C  318D   	fcall	___ftdiv
  7227  0E45  0020               	movlb	0	; select bank0
  7228  0E46  0830               	movf	?___ftdiv,w
  7229  0E47  00E6               	movwf	tempCalc@steinhart
  7230  0E48  0831               	movf	?___ftdiv+1,w
  7231  0E49  00E7               	movwf	tempCalc@steinhart+1
  7232  0E4A  0832               	movf	?___ftdiv+2,w
  7233  0E4B  00E8               	movwf	tempCalc@steinhart+2
  7234                           
  7235                           ;tempCalc.c: 11: steinhart = log(steinhart);
  7236  0E4C  0866               	movf	tempCalc@steinhart,w
  7237  0E4D  00D7               	movwf	log@x
  7238  0E4E  0867               	movf	tempCalc@steinhart+1,w
  7239  0E4F  00D8               	movwf	log@x+1
  7240  0E50  0868               	movf	tempCalc@steinhart+2,w
  7241  0E51  00D9               	movwf	log@x+2
  7242  0E52  318B  23C5  318D   	fcall	_log
  7243  0E55  0020               	movlb	0	; select bank0
  7244  0E56  0857               	movf	?_log,w
  7245  0E57  00E6               	movwf	tempCalc@steinhart
  7246  0E58  0858               	movf	?_log+1,w
  7247  0E59  00E7               	movwf	tempCalc@steinhart+1
  7248  0E5A  0859               	movf	?_log+2,w
  7249  0E5B  00E8               	movwf	tempCalc@steinhart+2
  7250                           
  7251                           ;tempCalc.c: 12: steinhart /= 3995;
  7252  0E5C  30B0               	movlw	176
  7253  0E5D  00B0               	movwf	___ftdiv@f2
  7254  0E5E  3079               	movlw	121
  7255  0E5F  00B1               	movwf	___ftdiv@f2+1
  7256  0E60  3045               	movlw	69
  7257  0E61  00B2               	movwf	___ftdiv@f2+2
  7258  0E62  0866               	movf	tempCalc@steinhart,w
  7259  0E63  00B3               	movwf	___ftdiv@f1
  7260  0E64  0867               	movf	tempCalc@steinhart+1,w
  7261  0E65  00B4               	movwf	___ftdiv@f1+1
  7262  0E66  0868               	movf	tempCalc@steinhart+2,w
  7263  0E67  00B5               	movwf	___ftdiv@f1+2
  7264  0E68  318B  231C  318D   	fcall	___ftdiv
  7265  0E6B  0020               	movlb	0	; select bank0
  7266  0E6C  0830               	movf	?___ftdiv,w
  7267  0E6D  00E6               	movwf	tempCalc@steinhart
  7268  0E6E  0831               	movf	?___ftdiv+1,w
  7269  0E6F  00E7               	movwf	tempCalc@steinhart+1
  7270  0E70  0832               	movf	?___ftdiv+2,w
  7271  0E71  00E8               	movwf	tempCalc@steinhart+2
  7272                           
  7273                           ;tempCalc.c: 13: steinhart += 1.0 / (25 + 273.15);
  7274  0E72  30CF               	movlw	207
  7275  0E73  00C0               	movwf	___ftadd@f1
  7276  0E74  305B               	movlw	91
  7277  0E75  00C1               	movwf	___ftadd@f1+1
  7278  0E76  303B               	movlw	59
  7279  0E77  00C2               	movwf	___ftadd@f1+2
  7280  0E78  0866               	movf	tempCalc@steinhart,w
  7281  0E79  00C3               	movwf	___ftadd@f2
  7282  0E7A  0867               	movf	tempCalc@steinhart+1,w
  7283  0E7B  00C4               	movwf	___ftadd@f2+1
  7284  0E7C  0868               	movf	tempCalc@steinhart+2,w
  7285  0E7D  00C5               	movwf	___ftadd@f2+2
  7286  0E7E  3180  203D  318D   	fcall	___ftadd
  7287  0E81  0020               	movlb	0	; select bank0
  7288  0E82  0840               	movf	?___ftadd,w
  7289  0E83  00E6               	movwf	tempCalc@steinhart
  7290  0E84  0841               	movf	?___ftadd+1,w
  7291  0E85  00E7               	movwf	tempCalc@steinhart+1
  7292  0E86  0842               	movf	?___ftadd+2,w
  7293  0E87  00E8               	movwf	tempCalc@steinhart+2
  7294                           
  7295                           ;tempCalc.c: 14: steinhart = 1.0 / steinhart;
  7296  0E88  0866               	movf	tempCalc@steinhart,w
  7297  0E89  00B0               	movwf	___ftdiv@f2
  7298  0E8A  0867               	movf	tempCalc@steinhart+1,w
  7299  0E8B  00B1               	movwf	___ftdiv@f2+1
  7300  0E8C  0868               	movf	tempCalc@steinhart+2,w
  7301  0E8D  00B2               	movwf	___ftdiv@f2+2
  7302  0E8E  3000               	movlw	0
  7303  0E8F  00B3               	movwf	___ftdiv@f1
  7304  0E90  3080               	movlw	128
  7305  0E91  00B4               	movwf	___ftdiv@f1+1
  7306  0E92  303F               	movlw	63
  7307  0E93  00B5               	movwf	___ftdiv@f1+2
  7308  0E94  318B  231C  318D   	fcall	___ftdiv
  7309  0E97  0020               	movlb	0	; select bank0
  7310  0E98  0830               	movf	?___ftdiv,w
  7311  0E99  00E6               	movwf	tempCalc@steinhart
  7312  0E9A  0831               	movf	?___ftdiv+1,w
  7313  0E9B  00E7               	movwf	tempCalc@steinhart+1
  7314  0E9C  0832               	movf	?___ftdiv+2,w
  7315  0E9D  00E8               	movwf	tempCalc@steinhart+2
  7316                           
  7317                           ;tempCalc.c: 15: steinhart -= 273.15;
  7318  0E9E  3093               	movlw	147
  7319  0E9F  00CD               	movwf	___ftsub@f2
  7320  0EA0  3088               	movlw	136
  7321  0EA1  00CE               	movwf	___ftsub@f2+1
  7322  0EA2  3043               	movlw	67
  7323  0EA3  00CF               	movwf	___ftsub@f2+2
  7324  0EA4  0866               	movf	tempCalc@steinhart,w
  7325  0EA5  00D0               	movwf	___ftsub@f1
  7326  0EA6  0867               	movf	tempCalc@steinhart+1,w
  7327  0EA7  00D1               	movwf	___ftsub@f1+1
  7328  0EA8  0868               	movf	tempCalc@steinhart+2,w
  7329  0EA9  00D2               	movwf	___ftsub@f1+2
  7330  0EAA  3196  2671  318D   	fcall	___ftsub
  7331  0EAD  0020               	movlb	0	; select bank0
  7332  0EAE  084D               	movf	?___ftsub,w
  7333  0EAF  00E6               	movwf	tempCalc@steinhart
  7334  0EB0  084E               	movf	?___ftsub+1,w
  7335  0EB1  00E7               	movwf	tempCalc@steinhart+1
  7336  0EB2  084F               	movf	?___ftsub+2,w
  7337  0EB3  00E8               	movwf	tempCalc@steinhart+2
  7338                           
  7339                           ;tempCalc.c: 17: steinhart*=10;
  7340  0EB4  3000               	movlw	0
  7341  0EB5  00A0               	movwf	___ftmul@f1
  7342  0EB6  3020               	movlw	32
  7343  0EB7  00A1               	movwf	___ftmul@f1+1
  7344  0EB8  3041               	movlw	65
  7345  0EB9  00A2               	movwf	___ftmul@f1+2
  7346  0EBA  0866               	movf	tempCalc@steinhart,w
  7347  0EBB  00A3               	movwf	___ftmul@f2
  7348  0EBC  0867               	movf	tempCalc@steinhart+1,w
  7349  0EBD  00A4               	movwf	___ftmul@f2+1
  7350  0EBE  0868               	movf	tempCalc@steinhart+2,w
  7351  0EBF  00A5               	movwf	___ftmul@f2+2
  7352  0EC0  318C  2472         	fcall	___ftmul
  7353  0EC2  0020               	movlb	0	; select bank0
  7354  0EC3  0820               	movf	?___ftmul,w
  7355  0EC4  00E6               	movwf	tempCalc@steinhart
  7356  0EC5  0821               	movf	?___ftmul+1,w
  7357  0EC6  00E7               	movwf	tempCalc@steinhart+1
  7358  0EC7  0822               	movf	?___ftmul+2,w
  7359  0EC8  00E8               	movwf	tempCalc@steinhart+2
  7360                           
  7361                           ;tempCalc.c: 21: return steinhart;
  7362  0EC9  0866               	movf	tempCalc@steinhart,w
  7363  0ECA  00DD               	movwf	?_tempCalc
  7364  0ECB  0867               	movf	tempCalc@steinhart+1,w
  7365  0ECC  00DE               	movwf	?_tempCalc+1
  7366  0ECD  0868               	movf	tempCalc@steinhart+2,w
  7367  0ECE  00DF               	movwf	?_tempCalc+2
  7368  0ECF  0008               	return
  7369  0ED0                     __end_of_tempCalc:	
  7370                           
  7371                           	psect	text2
  7372  0BC5                     __ptext2:	
  7373 ;; *************** function _log *****************
  7374 ;; Defined at:
  7375 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\log.c"
  7376 ;; Parameters:    Size  Location     Type
  7377 ;;  x               3   55[BANK0 ] float 
  7378 ;; Auto vars:     Size  Location     Type
  7379 ;;  exponent        2   59[BANK0 ] int 
  7380 ;; Return value:  Size  Location     Type
  7381 ;;                  3   55[BANK0 ] int 
  7382 ;; Registers used:
  7383 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7384 ;; Tracked objects:
  7385 ;;		On entry : 0/0
  7386 ;;		On exit  : 0/0
  7387 ;;		Unchanged: 0/0
  7388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7389 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7390 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7391 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7392 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7393 ;;Total ram usage:        6 bytes
  7394 ;; Hardware stack levels used:    1
  7395 ;; Hardware stack levels required when called:    3
  7396 ;; This function calls:
  7397 ;;		___awtoft
  7398 ;;		___ftadd
  7399 ;;		___ftge
  7400 ;;		___ftmul
  7401 ;;		_eval_poly
  7402 ;;		_frexp
  7403 ;; This function is called by:
  7404 ;;		_tempCalc
  7405 ;; This function uses a non-reentrant model
  7406 ;;
  7407                           
  7408                           
  7409                           ;psect for function _log
  7410  0BC5                     _log:	
  7411                           
  7412                           ;incstack = 0
  7413                           ; Regs used in _log: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7414  0BC5  0020               	movlb	0	; select bank0
  7415  0BC6  0857               	movf	log@x,w
  7416  0BC7  00F0               	movwf	___ftge@ff1
  7417  0BC8  0858               	movf	log@x+1,w
  7418  0BC9  00F1               	movwf	___ftge@ff1+1
  7419  0BCA  0859               	movf	log@x+2,w
  7420  0BCB  00F2               	movwf	___ftge@ff1+2
  7421  0BCC  3000               	movlw	0
  7422  0BCD  00F3               	movwf	___ftge@ff2
  7423  0BCE  3000               	movlw	0
  7424  0BCF  00F4               	movwf	___ftge@ff2+1
  7425  0BD0  3000               	movlw	0
  7426  0BD1  00F5               	movwf	___ftge@ff2+2
  7427  0BD2  3197  2709  318B   	fcall	___ftge
  7428  0BD5  1803               	btfsc	3,0
  7429  0BD6  2BE3               	goto	l2475
  7430  0BD7  3021               	movlw	33
  7431  0BD8  0020               	movlb	0	; select bank0
  7432  0BD9  00EC               	movwf	_errno
  7433  0BDA  3000               	movlw	0
  7434  0BDB  00ED               	movwf	_errno+1
  7435  0BDC  3000               	movlw	0
  7436  0BDD  00D7               	movwf	?_log
  7437  0BDE  3000               	movlw	0
  7438  0BDF  00D8               	movwf	?_log+1
  7439  0BE0  3000               	movlw	0
  7440  0BE1  00D9               	movwf	?_log+2
  7441  0BE2  0008               	return
  7442  0BE3                     l2475:	
  7443  0BE3  0020               	movlb	0	; select bank0
  7444  0BE4  0859               	movf	log@x+2,w
  7445  0BE5  0458               	iorwf	log@x+1,w
  7446  0BE6  0457               	iorwf	log@x,w
  7447  0BE7  1D03               	skipz
  7448  0BE8  2BF4               	goto	l2481
  7449  0BE9  3022               	movlw	34
  7450  0BEA  00EC               	movwf	_errno
  7451  0BEB  3000               	movlw	0
  7452  0BEC  00ED               	movwf	_errno+1
  7453  0BED  3000               	movlw	0
  7454  0BEE  00D7               	movwf	?_log
  7455  0BEF  3000               	movlw	0
  7456  0BF0  00D8               	movwf	?_log+1
  7457  0BF1  3000               	movlw	0
  7458  0BF2  00D9               	movwf	?_log+2
  7459  0BF3  0008               	return
  7460  0BF4                     l2481:	
  7461  0BF4  3000               	movlw	0
  7462  0BF5  00C0               	movwf	___ftadd@f1
  7463  0BF6  3080               	movlw	128
  7464  0BF7  00C1               	movwf	___ftadd@f1+1
  7465  0BF8  30BF               	movlw	191
  7466  0BF9  00C2               	movwf	___ftadd@f1+2
  7467  0BFA  3000               	movlw	0
  7468  0BFB  00A0               	movwf	___ftmul@f1
  7469  0BFC  3000               	movlw	0
  7470  0BFD  00A1               	movwf	___ftmul@f1+1
  7471  0BFE  3040               	movlw	64
  7472  0BFF  00A2               	movwf	___ftmul@f1+2
  7473  0C00  305B               	movlw	(low (log@exponent| 0))& (0+255)
  7474  0C01  00DA               	movwf	??_log
  7475  0C02  085A               	movf	??_log,w
  7476  0C03  00F3               	movwf	frexp@eptr
  7477  0C04  0857               	movf	log@x,w
  7478  0C05  00F0               	movwf	frexp@value
  7479  0C06  0858               	movf	log@x+1,w
  7480  0C07  00F1               	movwf	frexp@value+1
  7481  0C08  0859               	movf	log@x+2,w
  7482  0C09  00F2               	movwf	frexp@value+2
  7483  0C0A  3197  2744  318B   	fcall	_frexp
  7484  0C0D  0870               	movf	?_frexp,w
  7485  0C0E  0020               	movlb	0	; select bank0
  7486  0C0F  00A3               	movwf	___ftmul@f2
  7487  0C10  0871               	movf	?_frexp+1,w
  7488  0C11  00A4               	movwf	___ftmul@f2+1
  7489  0C12  0872               	movf	?_frexp+2,w
  7490  0C13  00A5               	movwf	___ftmul@f2+2
  7491  0C14  318C  2472  318B   	fcall	___ftmul
  7492  0C17  0020               	movlb	0	; select bank0
  7493  0C18  0820               	movf	?___ftmul,w
  7494  0C19  00C3               	movwf	___ftadd@f2
  7495  0C1A  0821               	movf	?___ftmul+1,w
  7496  0C1B  00C4               	movwf	___ftadd@f2+1
  7497  0C1C  0822               	movf	?___ftmul+2,w
  7498  0C1D  00C5               	movwf	___ftadd@f2+2
  7499  0C1E  3180  203D  318B   	fcall	___ftadd
  7500  0C21  0020               	movlb	0	; select bank0
  7501  0C22  0840               	movf	?___ftadd,w
  7502  0C23  00D7               	movwf	log@x
  7503  0C24  0841               	movf	?___ftadd+1,w
  7504  0C25  00D8               	movwf	log@x+1
  7505  0C26  0842               	movf	?___ftadd+2,w
  7506  0C27  00D9               	movwf	log@x+2
  7507  0C28  30FF               	movlw	255
  7508  0C29  07DB               	addwf	log@exponent,f
  7509  0C2A  30FF               	movlw	255
  7510  0C2B  3DDC               	addwfc	log@exponent+1,f
  7511  0C2C  0857               	movf	log@x,w
  7512  0C2D  00CD               	movwf	eval_poly@x
  7513  0C2E  0858               	movf	log@x+1,w
  7514  0C2F  00CE               	movwf	eval_poly@x+1
  7515  0C30  0859               	movf	log@x+2,w
  7516  0C31  00CF               	movwf	eval_poly@x+2
  7517  0C32  3000               	movlw	low (log@coeff| (0+32768))
  7518  0C33  00D0               	movwf	eval_poly@d
  7519  0C34  3090               	movlw	high (log@coeff| (0+32768))
  7520  0C35  00D1               	movwf	eval_poly@d+1
  7521  0C36  3008               	movlw	8
  7522  0C37  00D2               	movwf	eval_poly@n
  7523  0C38  3000               	movlw	0
  7524  0C39  00D3               	movwf	eval_poly@n+1
  7525  0C3A  3188  20C9  318B   	fcall	_eval_poly
  7526  0C3D  0020               	movlb	0	; select bank0
  7527  0C3E  084D               	movf	?_eval_poly,w
  7528  0C3F  00D7               	movwf	log@x
  7529  0C40  084E               	movf	?_eval_poly+1,w
  7530  0C41  00D8               	movwf	log@x+1
  7531  0C42  084F               	movf	?_eval_poly+2,w
  7532  0C43  00D9               	movwf	log@x+2
  7533  0C44  0857               	movf	log@x,w
  7534  0C45  00C0               	movwf	___ftadd@f1
  7535  0C46  0858               	movf	log@x+1,w
  7536  0C47  00C1               	movwf	___ftadd@f1+1
  7537  0C48  0859               	movf	log@x+2,w
  7538  0C49  00C2               	movwf	___ftadd@f1+2
  7539  0C4A  3072               	movlw	114
  7540  0C4B  00A0               	movwf	___ftmul@f1
  7541  0C4C  3031               	movlw	49
  7542  0C4D  00A1               	movwf	___ftmul@f1+1
  7543  0C4E  303F               	movlw	63
  7544  0C4F  00A2               	movwf	___ftmul@f1+2
  7545  0C50  085C               	movf	log@exponent+1,w
  7546  0C51  00F9               	movwf	___awtoft@c+1
  7547  0C52  085B               	movf	log@exponent,w
  7548  0C53  00F8               	movwf	___awtoft@c
  7549  0C54  3196  268F  318B   	fcall	___awtoft
  7550  0C57  0878               	movf	?___awtoft,w
  7551  0C58  0020               	movlb	0	; select bank0
  7552  0C59  00A3               	movwf	___ftmul@f2
  7553  0C5A  0879               	movf	?___awtoft+1,w
  7554  0C5B  00A4               	movwf	___ftmul@f2+1
  7555  0C5C  087A               	movf	?___awtoft+2,w
  7556  0C5D  00A5               	movwf	___ftmul@f2+2
  7557  0C5E  318C  2472  318B   	fcall	___ftmul
  7558  0C61  0020               	movlb	0	; select bank0
  7559  0C62  0820               	movf	?___ftmul,w
  7560  0C63  00C3               	movwf	___ftadd@f2
  7561  0C64  0821               	movf	?___ftmul+1,w
  7562  0C65  00C4               	movwf	___ftadd@f2+1
  7563  0C66  0822               	movf	?___ftmul+2,w
  7564  0C67  00C5               	movwf	___ftadd@f2+2
  7565  0C68  3180  203D         	fcall	___ftadd
  7566  0C6A  0020               	movlb	0	; select bank0
  7567  0C6B  0840               	movf	?___ftadd,w
  7568  0C6C  00D7               	movwf	?_log
  7569  0C6D  0841               	movf	?___ftadd+1,w
  7570  0C6E  00D8               	movwf	?_log+1
  7571  0C6F  0842               	movf	?___ftadd+2,w
  7572  0C70  00D9               	movwf	?_log+2
  7573  0C71  0008               	return
  7574  0C72                     __end_of_log:	
  7575                           
  7576                           	psect	text3
  7577  1744                     __ptext3:	
  7578 ;; *************** function _frexp *****************
  7579 ;; Defined at:
  7580 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\frexp.c"
  7581 ;; Parameters:    Size  Location     Type
  7582 ;;  value           3    0[COMMON] int 
  7583 ;;  eptr            1    3[COMMON] PTR int 
  7584 ;;		 -> log@exponent(2), 
  7585 ;; Auto vars:     Size  Location     Type
  7586 ;;		None
  7587 ;; Return value:  Size  Location     Type
  7588 ;;                  3    0[COMMON] PTR int 
  7589 ;; Registers used:
  7590 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7591 ;; Tracked objects:
  7592 ;;		On entry : 0/0
  7593 ;;		On exit  : 0/0
  7594 ;;		Unchanged: 0/0
  7595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7596 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7598 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7599 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7600 ;;Total ram usage:        6 bytes
  7601 ;; Hardware stack levels used:    1
  7602 ;; This function calls:
  7603 ;;		Nothing
  7604 ;; This function is called by:
  7605 ;;		_log
  7606 ;; This function uses a non-reentrant model
  7607 ;;
  7608                           
  7609                           
  7610                           ;psect for function _frexp
  7611  1744                     _frexp:	
  7612                           
  7613                           ;incstack = 0
  7614                           ; Regs used in _frexp: [wreg+fsr1l+fsr1h+status,2+status,0]
  7615  1744  0872               	movf	frexp@value+2,w
  7616  1745  0471               	iorwf	frexp@value+1,w
  7617  1746  0470               	iorwf	frexp@value,w
  7618  1747  1D03               	skipz
  7619  1748  2F56               	goto	l2307
  7620  1749  0873               	movf	frexp@eptr,w
  7621  174A  0086               	movwf	6
  7622  174B  0187               	clrf	7
  7623  174C  3000               	movlw	0
  7624  174D  3FC0               	movwi [0]fsr1
  7625  174E  3FC1               	movwi [1]fsr1
  7626  174F  3000               	movlw	0
  7627  1750  00F0               	movwf	?_frexp
  7628  1751  3000               	movlw	0
  7629  1752  00F1               	movwf	?_frexp+1
  7630  1753  3000               	movlw	0
  7631  1754  00F2               	movwf	?_frexp+2
  7632  1755  0008               	return
  7633  1756                     l2307:	
  7634  1756  0872               	movf	frexp@value+2,w
  7635  1757  397F               	andlw	127
  7636  1758  00F4               	movwf	??_frexp
  7637  1759  01F5               	clrf	??_frexp+1
  7638  175A  35F4               	lslf	??_frexp,f
  7639  175B  0DF5               	rlf	??_frexp+1,f
  7640  175C  0873               	movf	frexp@eptr,w
  7641  175D  0086               	movwf	6
  7642  175E  0187               	clrf	7
  7643  175F  0874               	movf	??_frexp,w
  7644  1760  3FC0               	movwi [0]fsr1
  7645  1761  0875               	movf	??_frexp+1,w
  7646  1762  3FC1               	movwi [1]fsr1
  7647  1763  0D71               	rlf	frexp@value+1,w
  7648  1764  0D71               	rlf	frexp@value+1,w
  7649  1765  3901               	andlw	1
  7650  1766  00F4               	movwf	??_frexp
  7651  1767  01F5               	clrf	??_frexp+1
  7652  1768  0873               	movf	frexp@eptr,w
  7653  1769  0086               	movwf	6
  7654  176A  0187               	clrf	7
  7655  176B  0874               	movf	??_frexp,w
  7656  176C  0481               	iorwf	1,f
  7657  176D  3141               	addfsr 1,1
  7658  176E  0875               	movf	??_frexp+1,w
  7659  176F  0481               	iorwf	1,f
  7660  1770  0873               	movf	frexp@eptr,w
  7661  1771  0086               	movwf	6
  7662  1772  0187               	clrf	7
  7663  1773  3082               	movlw	130
  7664  1774  0781               	addwf	1,f
  7665  1775  3141               	addfsr 1,1
  7666  1776  30FF               	movlw	255
  7667  1777  3D81               	addwfc	1,f
  7668  1778  317F               	addfsr 1,-1
  7669  1779  0872               	movf	frexp@value+2,w
  7670  177A  3980               	andlw	-128
  7671  177B  383F               	iorlw	63
  7672  177C  00F2               	movwf	frexp@value+2
  7673  177D  13F1               	bcf	frexp@value+1,7
  7674  177E  0008               	return
  7675  177F                     __end_of_frexp:	
  7676                           
  7677                           	psect	text4
  7678  08C9                     __ptext4:	
  7679 ;; *************** function _eval_poly *****************
  7680 ;; Defined at:
  7681 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\evalpoly.c"
  7682 ;; Parameters:    Size  Location     Type
  7683 ;;  x               3   45[BANK0 ] PTR int 
  7684 ;;  d               2   48[BANK0 ] PTR const 
  7685 ;;		 -> log@coeff(27), 
  7686 ;;  n               2   50[BANK0 ] int 
  7687 ;; Auto vars:     Size  Location     Type
  7688 ;;  res             3   52[BANK0 ] int 
  7689 ;; Return value:  Size  Location     Type
  7690 ;;                  3   45[BANK0 ] int 
  7691 ;; Registers used:
  7692 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7693 ;; Tracked objects:
  7694 ;;		On entry : 0/0
  7695 ;;		On exit  : 0/0
  7696 ;;		Unchanged: 0/0
  7697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7698 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7699 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7701 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7702 ;;Total ram usage:       10 bytes
  7703 ;; Hardware stack levels used:    1
  7704 ;; Hardware stack levels required when called:    2
  7705 ;; This function calls:
  7706 ;;		___ftadd
  7707 ;;		___ftmul
  7708 ;;		___wmul
  7709 ;; This function is called by:
  7710 ;;		_log
  7711 ;; This function uses a non-reentrant model
  7712 ;;
  7713                           
  7714                           
  7715                           ;psect for function _eval_poly
  7716  08C9                     _eval_poly:	
  7717                           
  7718                           ;incstack = 0
  7719                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7720  08C9  0020               	movlb	0	; select bank0
  7721  08CA  0853               	movf	eval_poly@n+1,w
  7722  08CB  00F1               	movwf	___wmul@multiplier+1
  7723  08CC  0852               	movf	eval_poly@n,w
  7724  08CD  00F0               	movwf	___wmul@multiplier
  7725  08CE  3003               	movlw	3
  7726  08CF  00F2               	movwf	___wmul@multiplicand
  7727  08D0  3000               	movlw	0
  7728  08D1  00F3               	movwf	___wmul@multiplicand+1
  7729  08D2  3196  2656  3188   	fcall	___wmul
  7730  08D5  0020               	movlb	0	; select bank0
  7731  08D6  0850               	movf	eval_poly@d,w
  7732  08D7  0770               	addwf	?___wmul,w
  7733  08D8  0084               	movwf	4
  7734  08D9  0851               	movf	eval_poly@d+1,w
  7735  08DA  3D71               	addwfc	?___wmul+1,w
  7736  08DB  0085               	movwf	5
  7737  08DC  3F00               	moviw [0]fsr0
  7738  08DD  00D4               	movwf	eval_poly@res
  7739  08DE  3F01               	moviw [1]fsr0
  7740  08DF  00D5               	movwf	eval_poly@res+1
  7741  08E0  3F02               	moviw [2]fsr0
  7742  08E1                     L1:	
  7743  08E1  00D6               	movwf	eval_poly@res+2
  7744  08E2  0852               	movf	eval_poly@n,w
  7745  08E3  0453               	iorwf	eval_poly@n+1,w
  7746  08E4  1903               	btfsc	3,2
  7747  08E5  2922               	goto	l2325
  7748  08E6  30FF               	movlw	255
  7749  08E7  07D2               	addwf	eval_poly@n,f
  7750  08E8  30FF               	movlw	255
  7751  08E9  3DD3               	addwfc	eval_poly@n+1,f
  7752  08EA  0853               	movf	eval_poly@n+1,w
  7753  08EB  00F1               	movwf	___wmul@multiplier+1
  7754  08EC  0852               	movf	eval_poly@n,w
  7755  08ED  00F0               	movwf	___wmul@multiplier
  7756  08EE  3003               	movlw	3
  7757  08EF  00F2               	movwf	___wmul@multiplicand
  7758  08F0  3000               	movlw	0
  7759  08F1  00F3               	movwf	___wmul@multiplicand+1
  7760  08F2  3196  2656  3188   	fcall	___wmul
  7761  08F5  0020               	movlb	0	; select bank0
  7762  08F6  0850               	movf	eval_poly@d,w
  7763  08F7  0770               	addwf	?___wmul,w
  7764  08F8  0084               	movwf	4
  7765  08F9  0851               	movf	eval_poly@d+1,w
  7766  08FA  3D71               	addwfc	?___wmul+1,w
  7767  08FB  0085               	movwf	5
  7768  08FC  3F00               	moviw [0]fsr0
  7769  08FD  00C0               	movwf	___ftadd@f1
  7770  08FE  3F01               	moviw [1]fsr0
  7771  08FF  00C1               	movwf	___ftadd@f1+1
  7772  0900  3F02               	moviw [2]fsr0
  7773  0901  00C2               	movwf	___ftadd@f1+2
  7774  0902  0854               	movf	eval_poly@res,w
  7775  0903  00A0               	movwf	___ftmul@f1
  7776  0904  0855               	movf	eval_poly@res+1,w
  7777  0905  00A1               	movwf	___ftmul@f1+1
  7778  0906  0856               	movf	eval_poly@res+2,w
  7779  0907  00A2               	movwf	___ftmul@f1+2
  7780  0908  084D               	movf	eval_poly@x,w
  7781  0909  00A3               	movwf	___ftmul@f2
  7782  090A  084E               	movf	eval_poly@x+1,w
  7783  090B  00A4               	movwf	___ftmul@f2+1
  7784  090C  084F               	movf	eval_poly@x+2,w
  7785  090D  00A5               	movwf	___ftmul@f2+2
  7786  090E  318C  2472  3188   	fcall	___ftmul
  7787  0911  0020               	movlb	0	; select bank0
  7788  0912  0820               	movf	?___ftmul,w
  7789  0913  00C3               	movwf	___ftadd@f2
  7790  0914  0821               	movf	?___ftmul+1,w
  7791  0915  00C4               	movwf	___ftadd@f2+1
  7792  0916  0822               	movf	?___ftmul+2,w
  7793  0917  00C5               	movwf	___ftadd@f2+2
  7794  0918  3180  203D  3188   	fcall	___ftadd
  7795  091B  0020               	movlb	0	; select bank0
  7796  091C  0840               	movf	?___ftadd,w
  7797  091D  00D4               	movwf	eval_poly@res
  7798  091E  0841               	movf	?___ftadd+1,w
  7799  091F  00D5               	movwf	eval_poly@res+1
  7800  0920  0842               	movf	?___ftadd+2,w
  7801  0921  28E1               	goto	L1
  7802  0922                     l2325:	
  7803  0922  0854               	movf	eval_poly@res,w
  7804  0923  00CD               	movwf	?_eval_poly
  7805  0924  0855               	movf	eval_poly@res+1,w
  7806  0925  00CE               	movwf	?_eval_poly+1
  7807  0926  0856               	movf	eval_poly@res+2,w
  7808  0927  00CF               	movwf	?_eval_poly+2
  7809  0928  0008               	return
  7810  0929                     __end_of_eval_poly:	
  7811                           
  7812                           	psect	text5
  7813  0C72                     __ptext5:	
  7814 ;; *************** function ___ftmul *****************
  7815 ;; Defined at:
  7816 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftmul.c"
  7817 ;; Parameters:    Size  Location     Type
  7818 ;;  f1              3    0[BANK0 ] float 
  7819 ;;  f2              3    3[BANK0 ] float 
  7820 ;; Auto vars:     Size  Location     Type
  7821 ;;  f3_as_produc    3   11[BANK0 ] unsigned um
  7822 ;;  sign            1   15[BANK0 ] unsigned char 
  7823 ;;  cntr            1   14[BANK0 ] unsigned char 
  7824 ;;  exp             1   10[BANK0 ] unsigned char 
  7825 ;; Return value:  Size  Location     Type
  7826 ;;                  3    0[BANK0 ] float 
  7827 ;; Registers used:
  7828 ;;		wreg, status,2, status,0, pclath, cstack
  7829 ;; Tracked objects:
  7830 ;;		On entry : 0/0
  7831 ;;		On exit  : 0/0
  7832 ;;		Unchanged: 0/0
  7833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7834 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7835 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7836 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7837 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7838 ;;Total ram usage:       16 bytes
  7839 ;; Hardware stack levels used:    1
  7840 ;; Hardware stack levels required when called:    1
  7841 ;; This function calls:
  7842 ;;		___ftpack
  7843 ;; This function is called by:
  7844 ;;		_tempCalc
  7845 ;;		_main
  7846 ;;		_log
  7847 ;;		_eval_poly
  7848 ;; This function uses a non-reentrant model
  7849 ;;
  7850                           
  7851                           
  7852                           ;psect for function ___ftmul
  7853  0C72                     ___ftmul:	
  7854                           
  7855                           ;incstack = 0
  7856                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  7857  0C72  0020               	movlb	0	; select bank0
  7858  0C73  0820               	movf	___ftmul@f1,w
  7859  0C74  00A6               	movwf	??___ftmul
  7860  0C75  0821               	movf	___ftmul@f1+1,w
  7861  0C76  00A7               	movwf	??___ftmul+1
  7862  0C77  0822               	movf	___ftmul@f1+2,w
  7863  0C78  00A8               	movwf	??___ftmul+2
  7864  0C79  1003               	clrc
  7865  0C7A  0D27               	rlf	??___ftmul+1,w
  7866  0C7B  0D28               	rlf	??___ftmul+2,w
  7867  0C7C  00A9               	movwf	??___ftmul+3
  7868  0C7D  0829               	movf	??___ftmul+3,w
  7869  0C7E  00AA               	movwf	___ftmul@exp
  7870  0C7F  082A               	movf	___ftmul@exp,w
  7871  0C80  1D03               	btfss	3,2
  7872  0C81  2C89               	goto	l2193
  7873  0C82  3000               	movlw	0
  7874  0C83  00A0               	movwf	?___ftmul
  7875  0C84  3000               	movlw	0
  7876  0C85  00A1               	movwf	?___ftmul+1
  7877  0C86  3000               	movlw	0
  7878  0C87  00A2               	movwf	?___ftmul+2
  7879  0C88  0008               	return
  7880  0C89                     l2193:	
  7881  0C89  0823               	movf	___ftmul@f2,w
  7882  0C8A  00A6               	movwf	??___ftmul
  7883  0C8B  0824               	movf	___ftmul@f2+1,w
  7884  0C8C  00A7               	movwf	??___ftmul+1
  7885  0C8D  0825               	movf	___ftmul@f2+2,w
  7886  0C8E  00A8               	movwf	??___ftmul+2
  7887  0C8F  1003               	clrc
  7888  0C90  0D27               	rlf	??___ftmul+1,w
  7889  0C91  0D28               	rlf	??___ftmul+2,w
  7890  0C92  00A9               	movwf	??___ftmul+3
  7891  0C93  0829               	movf	??___ftmul+3,w
  7892  0C94  00AF               	movwf	___ftmul@sign
  7893  0C95  082F               	movf	___ftmul@sign,w
  7894  0C96  1D03               	btfss	3,2
  7895  0C97  2C9F               	goto	l2199
  7896  0C98  3000               	movlw	0
  7897  0C99  00A0               	movwf	?___ftmul
  7898  0C9A  3000               	movlw	0
  7899  0C9B  00A1               	movwf	?___ftmul+1
  7900  0C9C  3000               	movlw	0
  7901  0C9D  00A2               	movwf	?___ftmul+2
  7902  0C9E  0008               	return
  7903  0C9F                     l2199:	
  7904  0C9F  082F               	movf	___ftmul@sign,w
  7905  0CA0  3E7B               	addlw	123
  7906  0CA1  00A6               	movwf	??___ftmul
  7907  0CA2  0826               	movf	??___ftmul,w
  7908  0CA3  07AA               	addwf	___ftmul@exp,f
  7909  0CA4  0820               	movf	___ftmul@f1,w
  7910  0CA5  00A6               	movwf	??___ftmul
  7911  0CA6  0821               	movf	___ftmul@f1+1,w
  7912  0CA7  00A7               	movwf	??___ftmul+1
  7913  0CA8  0822               	movf	___ftmul@f1+2,w
  7914  0CA9  00A8               	movwf	??___ftmul+2
  7915  0CAA  3010               	movlw	16
  7916  0CAB                     u2205:	
  7917  0CAB  36A8               	lsrf	??___ftmul+2,f
  7918  0CAC  0CA7               	rrf	??___ftmul+1,f
  7919  0CAD  0CA6               	rrf	??___ftmul,f
  7920  0CAE  0B89               	decfsz	9,f
  7921  0CAF  2CAB               	goto	u2205
  7922  0CB0  0826               	movf	??___ftmul,w
  7923  0CB1  00A9               	movwf	??___ftmul+3
  7924  0CB2  0829               	movf	??___ftmul+3,w
  7925  0CB3  00AF               	movwf	___ftmul@sign
  7926  0CB4  0823               	movf	___ftmul@f2,w
  7927  0CB5  00A6               	movwf	??___ftmul
  7928  0CB6  0824               	movf	___ftmul@f2+1,w
  7929  0CB7  00A7               	movwf	??___ftmul+1
  7930  0CB8  0825               	movf	___ftmul@f2+2,w
  7931  0CB9  00A8               	movwf	??___ftmul+2
  7932  0CBA  3010               	movlw	16
  7933  0CBB                     u2215:	
  7934  0CBB  36A8               	lsrf	??___ftmul+2,f
  7935  0CBC  0CA7               	rrf	??___ftmul+1,f
  7936  0CBD  0CA6               	rrf	??___ftmul,f
  7937  0CBE  0B89               	decfsz	9,f
  7938  0CBF  2CBB               	goto	u2215
  7939  0CC0  0826               	movf	??___ftmul,w
  7940  0CC1  00A9               	movwf	??___ftmul+3
  7941  0CC2  0829               	movf	??___ftmul+3,w
  7942  0CC3  06AF               	xorwf	___ftmul@sign,f
  7943  0CC4  3080               	movlw	128
  7944  0CC5  00A6               	movwf	??___ftmul
  7945  0CC6  0826               	movf	??___ftmul,w
  7946  0CC7  05AF               	andwf	___ftmul@sign,f
  7947  0CC8  17A1               	bsf	___ftmul@f1+1,7
  7948  0CC9  17A4               	bsf	___ftmul@f2+1,7
  7949  0CCA  30FF               	movlw	255
  7950  0CCB  05A3               	andwf	___ftmul@f2,f
  7951  0CCC  30FF               	movlw	255
  7952  0CCD  05A4               	andwf	___ftmul@f2+1,f
  7953  0CCE  3000               	movlw	0
  7954  0CCF  05A5               	andwf	___ftmul@f2+2,f
  7955  0CD0  3000               	movlw	0
  7956  0CD1  00AB               	movwf	___ftmul@f3_as_product
  7957  0CD2  3000               	movlw	0
  7958  0CD3  00AC               	movwf	___ftmul@f3_as_product+1
  7959  0CD4  3000               	movlw	0
  7960  0CD5  00AD               	movwf	___ftmul@f3_as_product+2
  7961  0CD6  3007               	movlw	7
  7962  0CD7  00A6               	movwf	??___ftmul
  7963  0CD8  0826               	movf	??___ftmul,w
  7964  0CD9  00AE               	movwf	___ftmul@cntr
  7965  0CDA                     l2211:	
  7966  0CDA  1C20               	btfss	___ftmul@f1,0
  7967  0CDB  2CE2               	goto	l2215
  7968  0CDC  0823               	movf	___ftmul@f2,w
  7969  0CDD  07AB               	addwf	___ftmul@f3_as_product,f
  7970  0CDE  0824               	movf	___ftmul@f2+1,w
  7971  0CDF  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  7972  0CE0  0825               	movf	___ftmul@f2+2,w
  7973  0CE1  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  7974  0CE2                     l2215:	
  7975  0CE2  3001               	movlw	1
  7976  0CE3                     u2235:	
  7977  0CE3  36A2               	lsrf	___ftmul@f1+2,f
  7978  0CE4  0CA1               	rrf	___ftmul@f1+1,f
  7979  0CE5  0CA0               	rrf	___ftmul@f1,f
  7980  0CE6  0B89               	decfsz	9,f
  7981  0CE7  2CE3               	goto	u2235
  7982  0CE8  3001               	movlw	1
  7983  0CE9                     u2245:	
  7984  0CE9  35A3               	lslf	___ftmul@f2,f
  7985  0CEA  0DA4               	rlf	___ftmul@f2+1,f
  7986  0CEB  0DA5               	rlf	___ftmul@f2+2,f
  7987  0CEC  0B89               	decfsz	9,f
  7988  0CED  2CE9               	goto	u2245
  7989  0CEE  3001               	movlw	1
  7990  0CEF  02AE               	subwf	___ftmul@cntr,f
  7991  0CF0  1D03               	btfss	3,2
  7992  0CF1  2CDA               	goto	l2211
  7993  0CF2  3009               	movlw	9
  7994  0CF3  00A6               	movwf	??___ftmul
  7995  0CF4  0826               	movf	??___ftmul,w
  7996  0CF5  00AE               	movwf	___ftmul@cntr
  7997  0CF6                     l2223:	
  7998  0CF6  1C20               	btfss	___ftmul@f1,0
  7999  0CF7  2CFE               	goto	l2227
  8000  0CF8  0823               	movf	___ftmul@f2,w
  8001  0CF9  07AB               	addwf	___ftmul@f3_as_product,f
  8002  0CFA  0824               	movf	___ftmul@f2+1,w
  8003  0CFB  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  8004  0CFC  0825               	movf	___ftmul@f2+2,w
  8005  0CFD  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  8006  0CFE                     l2227:	
  8007  0CFE  3001               	movlw	1
  8008  0CFF                     u2275:	
  8009  0CFF  36A2               	lsrf	___ftmul@f1+2,f
  8010  0D00  0CA1               	rrf	___ftmul@f1+1,f
  8011  0D01  0CA0               	rrf	___ftmul@f1,f
  8012  0D02  0B89               	decfsz	9,f
  8013  0D03  2CFF               	goto	u2275
  8014  0D04  3001               	movlw	1
  8015  0D05                     u2285:	
  8016  0D05  36AD               	lsrf	___ftmul@f3_as_product+2,f
  8017  0D06  0CAC               	rrf	___ftmul@f3_as_product+1,f
  8018  0D07  0CAB               	rrf	___ftmul@f3_as_product,f
  8019  0D08  0B89               	decfsz	9,f
  8020  0D09  2D05               	goto	u2285
  8021  0D0A  3001               	movlw	1
  8022  0D0B  02AE               	subwf	___ftmul@cntr,f
  8023  0D0C  1D03               	btfss	3,2
  8024  0D0D  2CF6               	goto	l2223
  8025  0D0E  082B               	movf	___ftmul@f3_as_product,w
  8026  0D0F  00F0               	movwf	___ftpack@arg
  8027  0D10  082C               	movf	___ftmul@f3_as_product+1,w
  8028  0D11  00F1               	movwf	___ftpack@arg+1
  8029  0D12  082D               	movf	___ftmul@f3_as_product+2,w
  8030  0D13  00F2               	movwf	___ftpack@arg+2
  8031  0D14  082A               	movf	___ftmul@exp,w
  8032  0D15  00A6               	movwf	??___ftmul
  8033  0D16  0826               	movf	??___ftmul,w
  8034  0D17  00F3               	movwf	___ftpack@exp
  8035  0D18  082F               	movf	___ftmul@sign,w
  8036  0D19  00A7               	movwf	??___ftmul+1
  8037  0D1A  0827               	movf	??___ftmul+1,w
  8038  0D1B  00F4               	movwf	___ftpack@sign
  8039  0D1C  3189  2129         	fcall	___ftpack
  8040  0D1E  0870               	movf	?___ftpack,w
  8041  0D1F  0020               	movlb	0	; select bank0
  8042  0D20  00A0               	movwf	?___ftmul
  8043  0D21  0871               	movf	?___ftpack+1,w
  8044  0D22  00A1               	movwf	?___ftmul+1
  8045  0D23  0872               	movf	?___ftpack+2,w
  8046  0D24  00A2               	movwf	?___ftmul+2
  8047  0D25  0008               	return
  8048  0D26                     __end_of___ftmul:	
  8049                           
  8050                           	psect	text6
  8051  1709                     __ptext6:	
  8052 ;; *************** function ___ftge *****************
  8053 ;; Defined at:
  8054 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftge.c"
  8055 ;; Parameters:    Size  Location     Type
  8056 ;;  ff1             3    0[COMMON] float 
  8057 ;;  ff2             3    3[COMMON] float 
  8058 ;; Auto vars:     Size  Location     Type
  8059 ;;		None
  8060 ;; Return value:  Size  Location     Type
  8061 ;;		None               void
  8062 ;; Registers used:
  8063 ;;		wreg, status,2, status,0
  8064 ;; Tracked objects:
  8065 ;;		On entry : 0/0
  8066 ;;		On exit  : 0/0
  8067 ;;		Unchanged: 0/0
  8068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8069 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8071 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8072 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8073 ;;Total ram usage:        9 bytes
  8074 ;; Hardware stack levels used:    1
  8075 ;; This function calls:
  8076 ;;		Nothing
  8077 ;; This function is called by:
  8078 ;;		_log
  8079 ;; This function uses a non-reentrant model
  8080 ;;
  8081                           
  8082                           
  8083                           ;psect for function ___ftge
  8084  1709                     ___ftge:	
  8085                           
  8086                           ;incstack = 0
  8087                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  8088  1709  1FF2               	btfss	___ftge@ff1+2,7
  8089  170A  2F1F               	goto	l2283
  8090  170B  0970               	comf	___ftge@ff1,w
  8091  170C  00F6               	movwf	??___ftge
  8092  170D  0971               	comf	___ftge@ff1+1,w
  8093  170E  00F7               	movwf	??___ftge+1
  8094  170F  0972               	comf	___ftge@ff1+2,w
  8095  1710  00F8               	movwf	??___ftge+2
  8096  1711  0AF6               	incf	??___ftge,f
  8097  1712  1903               	skipnz
  8098  1713  0AF7               	incf	??___ftge+1,f
  8099  1714  1903               	skipnz
  8100  1715  0AF8               	incf	??___ftge+2,f
  8101  1716  3000               	movlw	0
  8102  1717  0776               	addwf	??___ftge,w
  8103  1718  00F0               	movwf	___ftge@ff1
  8104  1719  3000               	movlw	0
  8105  171A  3D77               	addwfc	??___ftge+1,w
  8106  171B  00F1               	movwf	___ftge@ff1+1
  8107  171C  3080               	movlw	128
  8108  171D  3D78               	addwfc	??___ftge+2,w
  8109  171E  00F2               	movwf	___ftge@ff1+2
  8110  171F                     l2283:	
  8111  171F  1FF5               	btfss	___ftge@ff2+2,7
  8112  1720  2F35               	goto	l2287
  8113  1721  0973               	comf	___ftge@ff2,w
  8114  1722  00F6               	movwf	??___ftge
  8115  1723  0974               	comf	___ftge@ff2+1,w
  8116  1724  00F7               	movwf	??___ftge+1
  8117  1725  0975               	comf	___ftge@ff2+2,w
  8118  1726  00F8               	movwf	??___ftge+2
  8119  1727  0AF6               	incf	??___ftge,f
  8120  1728  1903               	skipnz
  8121  1729  0AF7               	incf	??___ftge+1,f
  8122  172A  1903               	skipnz
  8123  172B  0AF8               	incf	??___ftge+2,f
  8124  172C  3000               	movlw	0
  8125  172D  0776               	addwf	??___ftge,w
  8126  172E  00F3               	movwf	___ftge@ff2
  8127  172F  3000               	movlw	0
  8128  1730  3D77               	addwfc	??___ftge+1,w
  8129  1731  00F4               	movwf	___ftge@ff2+1
  8130  1732  3080               	movlw	128
  8131  1733  3D78               	addwfc	??___ftge+2,w
  8132  1734  00F5               	movwf	___ftge@ff2+2
  8133  1735                     l2287:	
  8134  1735  3080               	movlw	128
  8135  1736  06F2               	xorwf	___ftge@ff1+2,f
  8136  1737  3080               	movlw	128
  8137  1738  06F5               	xorwf	___ftge@ff2+2,f
  8138  1739  0875               	movf	___ftge@ff2+2,w
  8139  173A  0272               	subwf	___ftge@ff1+2,w
  8140  173B  1D03               	skipz
  8141  173C  0008               	return
  8142  173D  0874               	movf	___ftge@ff2+1,w
  8143  173E  0271               	subwf	___ftge@ff1+1,w
  8144  173F  1D03               	skipz
  8145  1740  0008               	return
  8146  1741  0873               	movf	___ftge@ff2,w
  8147  1742  0270               	subwf	___ftge@ff1,w
  8148  1743  0008               	return
  8149  1744                     __end_of___ftge:	
  8150                           
  8151                           	psect	text7
  8152  168F                     __ptext7:	
  8153 ;; *************** function ___awtoft *****************
  8154 ;; Defined at:
  8155 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awtoft.c"
  8156 ;; Parameters:    Size  Location     Type
  8157 ;;  c               2    8[COMMON] int 
  8158 ;; Auto vars:     Size  Location     Type
  8159 ;;  sign            1   13[COMMON] unsigned char 
  8160 ;; Return value:  Size  Location     Type
  8161 ;;                  3    8[COMMON] float 
  8162 ;; Registers used:
  8163 ;;		wreg, status,2, status,0, pclath, cstack
  8164 ;; Tracked objects:
  8165 ;;		On entry : 0/0
  8166 ;;		On exit  : 0/0
  8167 ;;		Unchanged: 0/0
  8168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8169 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8170 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8171 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8172 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8173 ;;Total ram usage:        6 bytes
  8174 ;; Hardware stack levels used:    1
  8175 ;; Hardware stack levels required when called:    1
  8176 ;; This function calls:
  8177 ;;		___ftpack
  8178 ;; This function is called by:
  8179 ;;		_tempCalc
  8180 ;;		_log
  8181 ;; This function uses a non-reentrant model
  8182 ;;
  8183                           
  8184                           
  8185                           ;psect for function ___awtoft
  8186  168F                     ___awtoft:	
  8187                           
  8188                           ;incstack = 0
  8189                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  8190  168F  01FD               	clrf	___awtoft@sign
  8191  1690  1FF9               	btfss	___awtoft@c+1,7
  8192  1691  2E99               	goto	l2275
  8193  1692  09F8               	comf	___awtoft@c,f
  8194  1693  09F9               	comf	___awtoft@c+1,f
  8195  1694  0AF8               	incf	___awtoft@c,f
  8196  1695  1903               	skipnz
  8197  1696  0AF9               	incf	___awtoft@c+1,f
  8198  1697  01FD               	clrf	___awtoft@sign
  8199  1698  0AFD               	incf	___awtoft@sign,f
  8200  1699                     l2275:	
  8201  1699  0878               	movf	___awtoft@c,w
  8202  169A  00F0               	movwf	___ftpack@arg
  8203  169B  0879               	movf	___awtoft@c+1,w
  8204  169C  00F1               	movwf	___ftpack@arg+1
  8205  169D  01F2               	clrf	___ftpack@arg+2
  8206  169E  308E               	movlw	142
  8207  169F  00FB               	movwf	??___awtoft
  8208  16A0  087B               	movf	??___awtoft,w
  8209  16A1  00F3               	movwf	___ftpack@exp
  8210  16A2  087D               	movf	___awtoft@sign,w
  8211  16A3  00FC               	movwf	??___awtoft+1
  8212  16A4  087C               	movf	??___awtoft+1,w
  8213  16A5  00F4               	movwf	___ftpack@sign
  8214  16A6  3189  2129         	fcall	___ftpack
  8215  16A8  0870               	movf	?___ftpack,w
  8216  16A9  00F8               	movwf	?___awtoft
  8217  16AA  0871               	movf	?___ftpack+1,w
  8218  16AB  00F9               	movwf	?___awtoft+1
  8219  16AC  0872               	movf	?___ftpack+2,w
  8220  16AD  00FA               	movwf	?___awtoft+2
  8221  16AE  0008               	return
  8222  16AF                     __end_of___awtoft:	
  8223                           
  8224                           	psect	text8
  8225  1671                     __ptext8:	
  8226 ;; *************** function ___ftsub *****************
  8227 ;; Defined at:
  8228 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftsub.c"
  8229 ;; Parameters:    Size  Location     Type
  8230 ;;  f2              3   45[BANK0 ] float 
  8231 ;;  f1              3   48[BANK0 ] float 
  8232 ;; Auto vars:     Size  Location     Type
  8233 ;;		None
  8234 ;; Return value:  Size  Location     Type
  8235 ;;                  3   45[BANK0 ] float 
  8236 ;; Registers used:
  8237 ;;		wreg, status,2, status,0, pclath, cstack
  8238 ;; Tracked objects:
  8239 ;;		On entry : 0/0
  8240 ;;		On exit  : 0/0
  8241 ;;		Unchanged: 0/0
  8242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8243 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8246 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8247 ;;Total ram usage:        6 bytes
  8248 ;; Hardware stack levels used:    1
  8249 ;; Hardware stack levels required when called:    2
  8250 ;; This function calls:
  8251 ;;		___ftadd
  8252 ;; This function is called by:
  8253 ;;		_tempCalc
  8254 ;; This function uses a non-reentrant model
  8255 ;;
  8256                           
  8257                           
  8258                           ;psect for function ___ftsub
  8259  1671                     ___ftsub:	
  8260                           
  8261                           ;incstack = 0
  8262                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  8263  1671  0020               	movlb	0	; select bank0
  8264  1672  084F               	movf	___ftsub@f2+2,w
  8265  1673  044E               	iorwf	___ftsub@f2+1,w
  8266  1674  044D               	iorwf	___ftsub@f2,w
  8267  1675  1903               	skipnz
  8268  1676  2E79               	goto	l2659
  8269  1677  3080               	movlw	128
  8270  1678  06CF               	xorwf	___ftsub@f2+2,f
  8271  1679                     l2659:	
  8272  1679  0850               	movf	___ftsub@f1,w
  8273  167A  00C0               	movwf	___ftadd@f1
  8274  167B  0851               	movf	___ftsub@f1+1,w
  8275  167C  00C1               	movwf	___ftadd@f1+1
  8276  167D  0852               	movf	___ftsub@f1+2,w
  8277  167E  00C2               	movwf	___ftadd@f1+2
  8278  167F  084D               	movf	___ftsub@f2,w
  8279  1680  00C3               	movwf	___ftadd@f2
  8280  1681  084E               	movf	___ftsub@f2+1,w
  8281  1682  00C4               	movwf	___ftadd@f2+1
  8282  1683  084F               	movf	___ftsub@f2+2,w
  8283  1684  00C5               	movwf	___ftadd@f2+2
  8284  1685  3180  203D         	fcall	___ftadd
  8285  1687  0020               	movlb	0	; select bank0
  8286  1688  0840               	movf	?___ftadd,w
  8287  1689  00CD               	movwf	?___ftsub
  8288  168A  0841               	movf	?___ftadd+1,w
  8289  168B  00CE               	movwf	?___ftsub+1
  8290  168C  0842               	movf	?___ftadd+2,w
  8291  168D  00CF               	movwf	?___ftsub+2
  8292  168E  0008               	return
  8293  168F                     __end_of___ftsub:	
  8294                           
  8295                           	psect	text9
  8296  003D                     __ptext9:	
  8297 ;; *************** function ___ftadd *****************
  8298 ;; Defined at:
  8299 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftadd.c"
  8300 ;; Parameters:    Size  Location     Type
  8301 ;;  f1              3   32[BANK0 ] float 
  8302 ;;  f2              3   35[BANK0 ] float 
  8303 ;; Auto vars:     Size  Location     Type
  8304 ;;  exp1            1   44[BANK0 ] unsigned char 
  8305 ;;  exp2            1   43[BANK0 ] unsigned char 
  8306 ;;  sign            1   42[BANK0 ] unsigned char 
  8307 ;; Return value:  Size  Location     Type
  8308 ;;                  3   32[BANK0 ] float 
  8309 ;; Registers used:
  8310 ;;		wreg, status,2, status,0, pclath, cstack
  8311 ;; Tracked objects:
  8312 ;;		On entry : 0/0
  8313 ;;		On exit  : 0/0
  8314 ;;		Unchanged: 0/0
  8315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8316 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8317 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8318 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8319 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8320 ;;Total ram usage:       13 bytes
  8321 ;; Hardware stack levels used:    1
  8322 ;; Hardware stack levels required when called:    1
  8323 ;; This function calls:
  8324 ;;		___ftpack
  8325 ;; This function is called by:
  8326 ;;		_tempCalc
  8327 ;;		_main
  8328 ;;		___ftsub
  8329 ;;		_log
  8330 ;;		_eval_poly
  8331 ;; This function uses a non-reentrant model
  8332 ;;
  8333                           
  8334                           
  8335                           ;psect for function ___ftadd
  8336  003D                     ___ftadd:	
  8337                           
  8338                           ;incstack = 0
  8339                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  8340  003D  0020               	movlb	0	; select bank0
  8341  003E  0840               	movf	___ftadd@f1,w
  8342  003F  00C6               	movwf	??___ftadd
  8343  0040  0841               	movf	___ftadd@f1+1,w
  8344  0041  00C7               	movwf	??___ftadd+1
  8345  0042  0842               	movf	___ftadd@f1+2,w
  8346  0043  00C8               	movwf	??___ftadd+2
  8347  0044  1003               	clrc
  8348  0045  0D47               	rlf	??___ftadd+1,w
  8349  0046  0D48               	rlf	??___ftadd+2,w
  8350  0047  00C9               	movwf	??___ftadd+3
  8351  0048  0849               	movf	??___ftadd+3,w
  8352  0049  00CC               	movwf	___ftadd@exp1
  8353  004A  0843               	movf	___ftadd@f2,w
  8354  004B  00C6               	movwf	??___ftadd
  8355  004C  0844               	movf	___ftadd@f2+1,w
  8356  004D  00C7               	movwf	??___ftadd+1
  8357  004E  0845               	movf	___ftadd@f2+2,w
  8358  004F  00C8               	movwf	??___ftadd+2
  8359  0050  1003               	clrc
  8360  0051  0D47               	rlf	??___ftadd+1,w
  8361  0052  0D48               	rlf	??___ftadd+2,w
  8362  0053  00C9               	movwf	??___ftadd+3
  8363  0054  0849               	movf	??___ftadd+3,w
  8364  0055  00CB               	movwf	___ftadd@exp2
  8365  0056  084C               	movf	___ftadd@exp1,w
  8366  0057  1903               	btfsc	3,2
  8367  0058  2865               	goto	l2123
  8368  0059  084B               	movf	___ftadd@exp2,w
  8369  005A  024C               	subwf	___ftadd@exp1,w
  8370  005B  1803               	skipnc
  8371  005C  286C               	goto	l2127
  8372  005D  034C               	decf	___ftadd@exp1,w
  8373  005E  3AFF               	xorlw	255
  8374  005F  074B               	addwf	___ftadd@exp2,w
  8375  0060  00C6               	movwf	??___ftadd
  8376  0061  3019               	movlw	25
  8377  0062  0246               	subwf	??___ftadd,w
  8378  0063  1C03               	skipc
  8379  0064  286C               	goto	l2127
  8380  0065                     l2123:	
  8381  0065  0843               	movf	___ftadd@f2,w
  8382  0066  00C0               	movwf	?___ftadd
  8383  0067  0844               	movf	___ftadd@f2+1,w
  8384  0068  00C1               	movwf	?___ftadd+1
  8385  0069  0845               	movf	___ftadd@f2+2,w
  8386  006A  00C2               	movwf	?___ftadd+2
  8387  006B  0008               	return
  8388  006C                     l2127:	
  8389  006C  084B               	movf	___ftadd@exp2,w
  8390  006D  1903               	btfsc	3,2
  8391  006E  0008               	return
  8392  006F  084C               	movf	___ftadd@exp1,w
  8393  0070  024B               	subwf	___ftadd@exp2,w
  8394  0071  1803               	skipnc
  8395  0072  287B               	goto	l2133
  8396  0073  034B               	decf	___ftadd@exp2,w
  8397  0074  3AFF               	xorlw	255
  8398  0075  074C               	addwf	___ftadd@exp1,w
  8399  0076  00C6               	movwf	??___ftadd
  8400  0077  3019               	movlw	25
  8401  0078  0246               	subwf	??___ftadd,w
  8402  0079  1803               	btfsc	3,0
  8403  007A  0008               	return
  8404  007B                     l2133:	
  8405  007B  3006               	movlw	6
  8406  007C  00C6               	movwf	??___ftadd
  8407  007D  0846               	movf	??___ftadd,w
  8408  007E  00CA               	movwf	___ftadd@sign
  8409  007F  1BC2               	btfsc	___ftadd@f1+2,7
  8410  0080  17CA               	bsf	___ftadd@sign,7
  8411  0081  1BC5               	btfsc	___ftadd@f2+2,7
  8412  0082  174A               	bsf	___ftadd@sign,6
  8413  0083  17C1               	bsf	___ftadd@f1+1,7
  8414  0084  30FF               	movlw	255
  8415  0085  05C0               	andwf	___ftadd@f1,f
  8416  0086  30FF               	movlw	255
  8417  0087  05C1               	andwf	___ftadd@f1+1,f
  8418  0088  3000               	movlw	0
  8419  0089  05C2               	andwf	___ftadd@f1+2,f
  8420  008A  17C4               	bsf	___ftadd@f2+1,7
  8421  008B  30FF               	movlw	255
  8422  008C  05C3               	andwf	___ftadd@f2,f
  8423  008D  30FF               	movlw	255
  8424  008E  05C4               	andwf	___ftadd@f2+1,f
  8425  008F  3000               	movlw	0
  8426  0090  05C5               	andwf	___ftadd@f2+2,f
  8427  0091  084B               	movf	___ftadd@exp2,w
  8428  0092  024C               	subwf	___ftadd@exp1,w
  8429  0093  1803               	skipnc
  8430  0094  28B7               	goto	l2155
  8431  0095                     l2145:	
  8432  0095  3001               	movlw	1
  8433  0096                     u2045:	
  8434  0096  35C3               	lslf	___ftadd@f2,f
  8435  0097  0DC4               	rlf	___ftadd@f2+1,f
  8436  0098  0DC5               	rlf	___ftadd@f2+2,f
  8437  0099  0B89               	decfsz	9,f
  8438  009A  2896               	goto	u2045
  8439  009B  3001               	movlw	1
  8440  009C  02CB               	subwf	___ftadd@exp2,f
  8441  009D  084B               	movf	___ftadd@exp2,w
  8442  009E  064C               	xorwf	___ftadd@exp1,w
  8443  009F  1903               	skipnz
  8444  00A0  28B2               	goto	l2153
  8445  00A1  3001               	movlw	1
  8446  00A2  02CA               	subwf	___ftadd@sign,f
  8447  00A3  084A               	movf	___ftadd@sign,w
  8448  00A4  3907               	andlw	7
  8449  00A5  1903               	btfsc	3,2
  8450  00A6  28B2               	goto	l2153
  8451  00A7  2895               	goto	l2145
  8452  00A8                     l2151:	
  8453  00A8  3001               	movlw	1
  8454  00A9                     u2075:	
  8455  00A9  36C2               	lsrf	___ftadd@f1+2,f
  8456  00AA  0CC1               	rrf	___ftadd@f1+1,f
  8457  00AB  0CC0               	rrf	___ftadd@f1,f
  8458  00AC  0B89               	decfsz	9,f
  8459  00AD  28A9               	goto	u2075
  8460  00AE  3001               	movlw	1
  8461  00AF  00C6               	movwf	??___ftadd
  8462  00B0  0846               	movf	??___ftadd,w
  8463  00B1  07CC               	addwf	___ftadd@exp1,f
  8464  00B2                     l2153:	
  8465  00B2  084C               	movf	___ftadd@exp1,w
  8466  00B3  064B               	xorwf	___ftadd@exp2,w
  8467  00B4  1903               	btfsc	3,2
  8468  00B5  28DC               	goto	l593
  8469  00B6  28A8               	goto	l2151
  8470  00B7                     l2155:	
  8471  00B7  084C               	movf	___ftadd@exp1,w
  8472  00B8  024B               	subwf	___ftadd@exp2,w
  8473  00B9  1803               	skipnc
  8474  00BA  28DC               	goto	l593
  8475  00BB                     l2157:	
  8476  00BB  3001               	movlw	1
  8477  00BC                     u2105:	
  8478  00BC  35C0               	lslf	___ftadd@f1,f
  8479  00BD  0DC1               	rlf	___ftadd@f1+1,f
  8480  00BE  0DC2               	rlf	___ftadd@f1+2,f
  8481  00BF  0B89               	decfsz	9,f
  8482  00C0  28BC               	goto	u2105
  8483  00C1  3001               	movlw	1
  8484  00C2  02CC               	subwf	___ftadd@exp1,f
  8485  00C3  084B               	movf	___ftadd@exp2,w
  8486  00C4  064C               	xorwf	___ftadd@exp1,w
  8487  00C5  1903               	skipnz
  8488  00C6  28D8               	goto	l2165
  8489  00C7  3001               	movlw	1
  8490  00C8  02CA               	subwf	___ftadd@sign,f
  8491  00C9  084A               	movf	___ftadd@sign,w
  8492  00CA  3907               	andlw	7
  8493  00CB  1903               	btfsc	3,2
  8494  00CC  28D8               	goto	l2165
  8495  00CD  28BB               	goto	l2157
  8496  00CE                     l2163:	
  8497  00CE  3001               	movlw	1
  8498  00CF                     u2135:	
  8499  00CF  36C5               	lsrf	___ftadd@f2+2,f
  8500  00D0  0CC4               	rrf	___ftadd@f2+1,f
  8501  00D1  0CC3               	rrf	___ftadd@f2,f
  8502  00D2  0B89               	decfsz	9,f
  8503  00D3  28CF               	goto	u2135
  8504  00D4  3001               	movlw	1
  8505  00D5  00C6               	movwf	??___ftadd
  8506  00D6  0846               	movf	??___ftadd,w
  8507  00D7  07CB               	addwf	___ftadd@exp2,f
  8508  00D8                     l2165:	
  8509  00D8  084C               	movf	___ftadd@exp1,w
  8510  00D9  064B               	xorwf	___ftadd@exp2,w
  8511  00DA  1D03               	skipz
  8512  00DB  28CE               	goto	l2163
  8513  00DC                     l593:	
  8514  00DC  1FCA               	btfss	___ftadd@sign,7
  8515  00DD  28EE               	goto	l2169
  8516  00DE  30FF               	movlw	255
  8517  00DF  06C0               	xorwf	___ftadd@f1,f
  8518  00E0  30FF               	movlw	255
  8519  00E1  06C1               	xorwf	___ftadd@f1+1,f
  8520  00E2  30FF               	movlw	255
  8521  00E3  06C2               	xorwf	___ftadd@f1+2,f
  8522  00E4  3001               	movlw	1
  8523  00E5  07C0               	addwf	___ftadd@f1,f
  8524  00E6  3000               	movlw	0
  8525  00E7  1803               	skipnc
  8526  00E8  3001               	movlw	1
  8527  00E9  07C1               	addwf	___ftadd@f1+1,f
  8528  00EA  3000               	movlw	0
  8529  00EB  1803               	skipnc
  8530  00EC  3001               	movlw	1
  8531  00ED  07C2               	addwf	___ftadd@f1+2,f
  8532  00EE                     l2169:	
  8533  00EE  1F4A               	btfss	___ftadd@sign,6
  8534  00EF  2900               	goto	l2173
  8535  00F0  30FF               	movlw	255
  8536  00F1  06C3               	xorwf	___ftadd@f2,f
  8537  00F2  30FF               	movlw	255
  8538  00F3  06C4               	xorwf	___ftadd@f2+1,f
  8539  00F4  30FF               	movlw	255
  8540  00F5  06C5               	xorwf	___ftadd@f2+2,f
  8541  00F6  3001               	movlw	1
  8542  00F7  07C3               	addwf	___ftadd@f2,f
  8543  00F8  3000               	movlw	0
  8544  00F9  1803               	skipnc
  8545  00FA  3001               	movlw	1
  8546  00FB  07C4               	addwf	___ftadd@f2+1,f
  8547  00FC  3000               	movlw	0
  8548  00FD  1803               	skipnc
  8549  00FE  3001               	movlw	1
  8550  00FF  07C5               	addwf	___ftadd@f2+2,f
  8551  0100                     l2173:	
  8552  0100  01CA               	clrf	___ftadd@sign
  8553  0101  0840               	movf	___ftadd@f1,w
  8554  0102  07C3               	addwf	___ftadd@f2,f
  8555  0103  0841               	movf	___ftadd@f1+1,w
  8556  0104  3DC4               	addwfc	___ftadd@f2+1,f
  8557  0105  0842               	movf	___ftadd@f1+2,w
  8558  0106  3DC5               	addwfc	___ftadd@f2+2,f
  8559  0107  1FC5               	btfss	___ftadd@f2+2,7
  8560  0108  291B               	goto	l2183
  8561  0109  30FF               	movlw	255
  8562  010A  06C3               	xorwf	___ftadd@f2,f
  8563  010B  30FF               	movlw	255
  8564  010C  06C4               	xorwf	___ftadd@f2+1,f
  8565  010D  30FF               	movlw	255
  8566  010E  06C5               	xorwf	___ftadd@f2+2,f
  8567  010F  3001               	movlw	1
  8568  0110  07C3               	addwf	___ftadd@f2,f
  8569  0111  3000               	movlw	0
  8570  0112  1803               	skipnc
  8571  0113  3001               	movlw	1
  8572  0114  07C4               	addwf	___ftadd@f2+1,f
  8573  0115  3000               	movlw	0
  8574  0116  1803               	skipnc
  8575  0117  3001               	movlw	1
  8576  0118  07C5               	addwf	___ftadd@f2+2,f
  8577  0119  01CA               	clrf	___ftadd@sign
  8578  011A  0ACA               	incf	___ftadd@sign,f
  8579  011B                     l2183:	
  8580  011B  0843               	movf	___ftadd@f2,w
  8581  011C  00F0               	movwf	___ftpack@arg
  8582  011D  0844               	movf	___ftadd@f2+1,w
  8583  011E  00F1               	movwf	___ftpack@arg+1
  8584  011F  0845               	movf	___ftadd@f2+2,w
  8585  0120  00F2               	movwf	___ftpack@arg+2
  8586  0121  084C               	movf	___ftadd@exp1,w
  8587  0122  00C6               	movwf	??___ftadd
  8588  0123  0846               	movf	??___ftadd,w
  8589  0124  00F3               	movwf	___ftpack@exp
  8590  0125  084A               	movf	___ftadd@sign,w
  8591  0126  00C7               	movwf	??___ftadd+1
  8592  0127  0847               	movf	??___ftadd+1,w
  8593  0128  00F4               	movwf	___ftpack@sign
  8594  0129  3189  2129         	fcall	___ftpack
  8595  012B  0870               	movf	?___ftpack,w
  8596  012C  0020               	movlb	0	; select bank0
  8597  012D  00C0               	movwf	?___ftadd
  8598  012E  0871               	movf	?___ftpack+1,w
  8599  012F  00C1               	movwf	?___ftadd+1
  8600  0130  0872               	movf	?___ftpack+2,w
  8601  0131  00C2               	movwf	?___ftadd+2
  8602  0132  0008               	return
  8603  0133                     __end_of___ftadd:	
  8604                           
  8605                           	psect	text10
  8606  0B1C                     __ptext10:	
  8607 ;; *************** function ___ftdiv *****************
  8608 ;; Defined at:
  8609 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftdiv.c"
  8610 ;; Parameters:    Size  Location     Type
  8611 ;;  f2              3   16[BANK0 ] float 
  8612 ;;  f1              3   19[BANK0 ] float 
  8613 ;; Auto vars:     Size  Location     Type
  8614 ;;  f3              3   27[BANK0 ] float 
  8615 ;;  sign            1   31[BANK0 ] unsigned char 
  8616 ;;  exp             1   30[BANK0 ] unsigned char 
  8617 ;;  cntr            1   26[BANK0 ] unsigned char 
  8618 ;; Return value:  Size  Location     Type
  8619 ;;                  3   16[BANK0 ] float 
  8620 ;; Registers used:
  8621 ;;		wreg, status,2, status,0, pclath, cstack
  8622 ;; Tracked objects:
  8623 ;;		On entry : 0/0
  8624 ;;		On exit  : 0/0
  8625 ;;		Unchanged: 0/0
  8626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8627 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8628 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8629 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8630 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8631 ;;Total ram usage:       16 bytes
  8632 ;; Hardware stack levels used:    1
  8633 ;; Hardware stack levels required when called:    1
  8634 ;; This function calls:
  8635 ;;		___ftpack
  8636 ;; This function is called by:
  8637 ;;		_tempCalc
  8638 ;;		_main
  8639 ;; This function uses a non-reentrant model
  8640 ;;
  8641                           
  8642                           
  8643                           ;psect for function ___ftdiv
  8644  0B1C                     ___ftdiv:	
  8645                           
  8646                           ;incstack = 0
  8647                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  8648  0B1C  0020               	movlb	0	; select bank0
  8649  0B1D  0833               	movf	___ftdiv@f1,w
  8650  0B1E  00B6               	movwf	??___ftdiv
  8651  0B1F  0834               	movf	___ftdiv@f1+1,w
  8652  0B20  00B7               	movwf	??___ftdiv+1
  8653  0B21  0835               	movf	___ftdiv@f1+2,w
  8654  0B22  00B8               	movwf	??___ftdiv+2
  8655  0B23  1003               	clrc
  8656  0B24  0D37               	rlf	??___ftdiv+1,w
  8657  0B25  0D38               	rlf	??___ftdiv+2,w
  8658  0B26  00B9               	movwf	??___ftdiv+3
  8659  0B27  0839               	movf	??___ftdiv+3,w
  8660  0B28  00BE               	movwf	___ftdiv@exp
  8661  0B29  083E               	movf	___ftdiv@exp,w
  8662  0B2A  1D03               	btfss	3,2
  8663  0B2B  2B33               	goto	l2619
  8664  0B2C  3000               	movlw	0
  8665  0B2D  00B0               	movwf	?___ftdiv
  8666  0B2E  3000               	movlw	0
  8667  0B2F  00B1               	movwf	?___ftdiv+1
  8668  0B30  3000               	movlw	0
  8669  0B31  00B2               	movwf	?___ftdiv+2
  8670  0B32  0008               	return
  8671  0B33                     l2619:	
  8672  0B33  0830               	movf	___ftdiv@f2,w
  8673  0B34  00B6               	movwf	??___ftdiv
  8674  0B35  0831               	movf	___ftdiv@f2+1,w
  8675  0B36  00B7               	movwf	??___ftdiv+1
  8676  0B37  0832               	movf	___ftdiv@f2+2,w
  8677  0B38  00B8               	movwf	??___ftdiv+2
  8678  0B39  1003               	clrc
  8679  0B3A  0D37               	rlf	??___ftdiv+1,w
  8680  0B3B  0D38               	rlf	??___ftdiv+2,w
  8681  0B3C  00B9               	movwf	??___ftdiv+3
  8682  0B3D  0839               	movf	??___ftdiv+3,w
  8683  0B3E  00BF               	movwf	___ftdiv@sign
  8684  0B3F  083F               	movf	___ftdiv@sign,w
  8685  0B40  1D03               	btfss	3,2
  8686  0B41  2B49               	goto	l2625
  8687  0B42  3000               	movlw	0
  8688  0B43  00B0               	movwf	?___ftdiv
  8689  0B44  3000               	movlw	0
  8690  0B45  00B1               	movwf	?___ftdiv+1
  8691  0B46  3000               	movlw	0
  8692  0B47  00B2               	movwf	?___ftdiv+2
  8693  0B48  0008               	return
  8694  0B49                     l2625:	
  8695  0B49  3000               	movlw	0
  8696  0B4A  00BB               	movwf	___ftdiv@f3
  8697  0B4B  3000               	movlw	0
  8698  0B4C  00BC               	movwf	___ftdiv@f3+1
  8699  0B4D  3000               	movlw	0
  8700  0B4E  00BD               	movwf	___ftdiv@f3+2
  8701  0B4F  3089               	movlw	137
  8702  0B50  073F               	addwf	___ftdiv@sign,w
  8703  0B51  00B6               	movwf	??___ftdiv
  8704  0B52  0836               	movf	??___ftdiv,w
  8705  0B53  02BE               	subwf	___ftdiv@exp,f
  8706  0B54  0833               	movf	___ftdiv@f1,w
  8707  0B55  00B6               	movwf	??___ftdiv
  8708  0B56  0834               	movf	___ftdiv@f1+1,w
  8709  0B57  00B7               	movwf	??___ftdiv+1
  8710  0B58  0835               	movf	___ftdiv@f1+2,w
  8711  0B59  00B8               	movwf	??___ftdiv+2
  8712  0B5A  3010               	movlw	16
  8713  0B5B                     u2755:	
  8714  0B5B  36B8               	lsrf	??___ftdiv+2,f
  8715  0B5C  0CB7               	rrf	??___ftdiv+1,f
  8716  0B5D  0CB6               	rrf	??___ftdiv,f
  8717  0B5E  0B89               	decfsz	9,f
  8718  0B5F  2B5B               	goto	u2755
  8719  0B60  0836               	movf	??___ftdiv,w
  8720  0B61  00B9               	movwf	??___ftdiv+3
  8721  0B62  0839               	movf	??___ftdiv+3,w
  8722  0B63  00BF               	movwf	___ftdiv@sign
  8723  0B64  0830               	movf	___ftdiv@f2,w
  8724  0B65  00B6               	movwf	??___ftdiv
  8725  0B66  0831               	movf	___ftdiv@f2+1,w
  8726  0B67  00B7               	movwf	??___ftdiv+1
  8727  0B68  0832               	movf	___ftdiv@f2+2,w
  8728  0B69  00B8               	movwf	??___ftdiv+2
  8729  0B6A  3010               	movlw	16
  8730  0B6B                     u2765:	
  8731  0B6B  36B8               	lsrf	??___ftdiv+2,f
  8732  0B6C  0CB7               	rrf	??___ftdiv+1,f
  8733  0B6D  0CB6               	rrf	??___ftdiv,f
  8734  0B6E  0B89               	decfsz	9,f
  8735  0B6F  2B6B               	goto	u2765
  8736  0B70  0836               	movf	??___ftdiv,w
  8737  0B71  00B9               	movwf	??___ftdiv+3
  8738  0B72  0839               	movf	??___ftdiv+3,w
  8739  0B73  06BF               	xorwf	___ftdiv@sign,f
  8740  0B74  3080               	movlw	128
  8741  0B75  00B6               	movwf	??___ftdiv
  8742  0B76  0836               	movf	??___ftdiv,w
  8743  0B77  05BF               	andwf	___ftdiv@sign,f
  8744  0B78  17B4               	bsf	___ftdiv@f1+1,7
  8745  0B79  30FF               	movlw	255
  8746  0B7A  05B3               	andwf	___ftdiv@f1,f
  8747  0B7B  30FF               	movlw	255
  8748  0B7C  05B4               	andwf	___ftdiv@f1+1,f
  8749  0B7D  3000               	movlw	0
  8750  0B7E  05B5               	andwf	___ftdiv@f1+2,f
  8751  0B7F  17B1               	bsf	___ftdiv@f2+1,7
  8752  0B80  30FF               	movlw	255
  8753  0B81  05B0               	andwf	___ftdiv@f2,f
  8754  0B82  30FF               	movlw	255
  8755  0B83  05B1               	andwf	___ftdiv@f2+1,f
  8756  0B84  3000               	movlw	0
  8757  0B85  05B2               	andwf	___ftdiv@f2+2,f
  8758  0B86  3018               	movlw	24
  8759  0B87  00B6               	movwf	??___ftdiv
  8760  0B88  0836               	movf	??___ftdiv,w
  8761  0B89  00BA               	movwf	___ftdiv@cntr
  8762  0B8A                     l2639:	
  8763  0B8A  3001               	movlw	1
  8764  0B8B                     u2775:	
  8765  0B8B  35BB               	lslf	___ftdiv@f3,f
  8766  0B8C  0DBC               	rlf	___ftdiv@f3+1,f
  8767  0B8D  0DBD               	rlf	___ftdiv@f3+2,f
  8768  0B8E  0B89               	decfsz	9,f
  8769  0B8F  2B8B               	goto	u2775
  8770  0B90  0832               	movf	___ftdiv@f2+2,w
  8771  0B91  0235               	subwf	___ftdiv@f1+2,w
  8772  0B92  1D03               	skipz
  8773  0B93  2B9A               	goto	u2785
  8774  0B94  0831               	movf	___ftdiv@f2+1,w
  8775  0B95  0234               	subwf	___ftdiv@f1+1,w
  8776  0B96  1D03               	skipz
  8777  0B97  2B9A               	goto	u2785
  8778  0B98  0830               	movf	___ftdiv@f2,w
  8779  0B99  0233               	subwf	___ftdiv@f1,w
  8780  0B9A                     u2785:	
  8781  0B9A  1C03               	skipc
  8782  0B9B  2BA3               	goto	l2647
  8783  0B9C  0830               	movf	___ftdiv@f2,w
  8784  0B9D  02B3               	subwf	___ftdiv@f1,f
  8785  0B9E  0831               	movf	___ftdiv@f2+1,w
  8786  0B9F  3BB4               	subwfb	___ftdiv@f1+1,f
  8787  0BA0  0832               	movf	___ftdiv@f2+2,w
  8788  0BA1  3BB5               	subwfb	___ftdiv@f1+2,f
  8789  0BA2  143B               	bsf	___ftdiv@f3,0
  8790  0BA3                     l2647:	
  8791  0BA3  3001               	movlw	1
  8792  0BA4                     u2795:	
  8793  0BA4  35B3               	lslf	___ftdiv@f1,f
  8794  0BA5  0DB4               	rlf	___ftdiv@f1+1,f
  8795  0BA6  0DB5               	rlf	___ftdiv@f1+2,f
  8796  0BA7  0B89               	decfsz	9,f
  8797  0BA8  2BA4               	goto	u2795
  8798  0BA9  3001               	movlw	1
  8799  0BAA  02BA               	subwf	___ftdiv@cntr,f
  8800  0BAB  1D03               	btfss	3,2
  8801  0BAC  2B8A               	goto	l2639
  8802  0BAD  083B               	movf	___ftdiv@f3,w
  8803  0BAE  00F0               	movwf	___ftpack@arg
  8804  0BAF  083C               	movf	___ftdiv@f3+1,w
  8805  0BB0  00F1               	movwf	___ftpack@arg+1
  8806  0BB1  083D               	movf	___ftdiv@f3+2,w
  8807  0BB2  00F2               	movwf	___ftpack@arg+2
  8808  0BB3  083E               	movf	___ftdiv@exp,w
  8809  0BB4  00B6               	movwf	??___ftdiv
  8810  0BB5  0836               	movf	??___ftdiv,w
  8811  0BB6  00F3               	movwf	___ftpack@exp
  8812  0BB7  083F               	movf	___ftdiv@sign,w
  8813  0BB8  00B7               	movwf	??___ftdiv+1
  8814  0BB9  0837               	movf	??___ftdiv+1,w
  8815  0BBA  00F4               	movwf	___ftpack@sign
  8816  0BBB  3189  2129         	fcall	___ftpack
  8817  0BBD  0870               	movf	?___ftpack,w
  8818  0BBE  0020               	movlb	0	; select bank0
  8819  0BBF  00B0               	movwf	?___ftdiv
  8820  0BC0  0871               	movf	?___ftpack+1,w
  8821  0BC1  00B1               	movwf	?___ftdiv+1
  8822  0BC2  0872               	movf	?___ftpack+2,w
  8823  0BC3  00B2               	movwf	?___ftdiv+2
  8824  0BC4  0008               	return
  8825  0BC5                     __end_of___ftdiv:	
  8826                           
  8827                           	psect	text11
  8828  0929                     __ptext11:	
  8829 ;; *************** function ___ftpack *****************
  8830 ;; Defined at:
  8831 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\float.c"
  8832 ;; Parameters:    Size  Location     Type
  8833 ;;  arg             3    0[COMMON] unsigned um
  8834 ;;  exp             1    3[COMMON] unsigned char 
  8835 ;;  sign            1    4[COMMON] unsigned char 
  8836 ;; Auto vars:     Size  Location     Type
  8837 ;;		None
  8838 ;; Return value:  Size  Location     Type
  8839 ;;                  3    0[COMMON] float 
  8840 ;; Registers used:
  8841 ;;		wreg, status,2, status,0
  8842 ;; Tracked objects:
  8843 ;;		On entry : 0/0
  8844 ;;		On exit  : 0/0
  8845 ;;		Unchanged: 0/0
  8846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8847 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8849 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8850 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8851 ;;Total ram usage:        8 bytes
  8852 ;; Hardware stack levels used:    1
  8853 ;; This function calls:
  8854 ;;		Nothing
  8855 ;; This function is called by:
  8856 ;;		___awtoft
  8857 ;;		___ftadd
  8858 ;;		___ftdiv
  8859 ;;		___ftmul
  8860 ;; This function uses a non-reentrant model
  8861 ;;
  8862                           
  8863                           
  8864                           ;psect for function ___ftpack
  8865  0929                     ___ftpack:	
  8866                           
  8867                           ;incstack = 0
  8868                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  8869  0929  0873               	movf	___ftpack@exp,w
  8870  092A  1903               	btfsc	3,2
  8871  092B  2931               	goto	l2059
  8872  092C  0872               	movf	___ftpack@arg+2,w
  8873  092D  0471               	iorwf	___ftpack@arg+1,w
  8874  092E  0470               	iorwf	___ftpack@arg,w
  8875  092F  1D03               	skipz
  8876  0930  2942               	goto	l2065
  8877  0931                     l2059:	
  8878  0931  3000               	movlw	0
  8879  0932  00F0               	movwf	?___ftpack
  8880  0933  3000               	movlw	0
  8881  0934  00F1               	movwf	?___ftpack+1
  8882  0935  3000               	movlw	0
  8883  0936  00F2               	movwf	?___ftpack+2
  8884  0937  0008               	return
  8885  0938                     l2063:	
  8886  0938  3001               	movlw	1
  8887  0939  00F5               	movwf	??___ftpack
  8888  093A  0875               	movf	??___ftpack,w
  8889  093B  07F3               	addwf	___ftpack@exp,f
  8890  093C  3001               	movlw	1
  8891  093D                     u1775:	
  8892  093D  36F2               	lsrf	___ftpack@arg+2,f
  8893  093E  0CF1               	rrf	___ftpack@arg+1,f
  8894  093F  0CF0               	rrf	___ftpack@arg,f
  8895  0940  0B89               	decfsz	9,f
  8896  0941  293D               	goto	u1775
  8897  0942                     l2065:	
  8898  0942  30FE               	movlw	254
  8899  0943  0572               	andwf	___ftpack@arg+2,w
  8900  0944  1903               	btfsc	3,2
  8901  0945  295B               	goto	l562
  8902  0946  2938               	goto	l2063
  8903  0947                     l2067:	
  8904  0947  3001               	movlw	1
  8905  0948  00F5               	movwf	??___ftpack
  8906  0949  0875               	movf	??___ftpack,w
  8907  094A  07F3               	addwf	___ftpack@exp,f
  8908  094B  3001               	movlw	1
  8909  094C  07F0               	addwf	___ftpack@arg,f
  8910  094D  3000               	movlw	0
  8911  094E  1803               	skipnc
  8912  094F  3001               	movlw	1
  8913  0950  07F1               	addwf	___ftpack@arg+1,f
  8914  0951  3000               	movlw	0
  8915  0952  1803               	skipnc
  8916  0953  3001               	movlw	1
  8917  0954  07F2               	addwf	___ftpack@arg+2,f
  8918  0955  3001               	movlw	1
  8919  0956                     u1795:	
  8920  0956  36F2               	lsrf	___ftpack@arg+2,f
  8921  0957  0CF1               	rrf	___ftpack@arg+1,f
  8922  0958  0CF0               	rrf	___ftpack@arg,f
  8923  0959  0B89               	decfsz	9,f
  8924  095A  2956               	goto	u1795
  8925  095B                     l562:	
  8926  095B  30FF               	movlw	255
  8927  095C  0572               	andwf	___ftpack@arg+2,w
  8928  095D  1903               	btfsc	3,2
  8929  095E  2968               	goto	l2075
  8930  095F  2947               	goto	l2067
  8931  0960                     l2073:	
  8932  0960  3001               	movlw	1
  8933  0961  02F3               	subwf	___ftpack@exp,f
  8934  0962  3001               	movlw	1
  8935  0963                     u1815:	
  8936  0963  35F0               	lslf	___ftpack@arg,f
  8937  0964  0DF1               	rlf	___ftpack@arg+1,f
  8938  0965  0DF2               	rlf	___ftpack@arg+2,f
  8939  0966  0B89               	decfsz	9,f
  8940  0967  2963               	goto	u1815
  8941  0968                     l2075:	
  8942  0968  1BF1               	btfsc	___ftpack@arg+1,7
  8943  0969  296E               	goto	l569
  8944  096A  3002               	movlw	2
  8945  096B  0273               	subwf	___ftpack@exp,w
  8946  096C  1803               	skipnc
  8947  096D  2960               	goto	l2073
  8948  096E                     l569:	
  8949  096E  1873               	btfsc	___ftpack@exp,0
  8950  096F  2976               	goto	l570
  8951  0970  30FF               	movlw	255
  8952  0971  05F0               	andwf	___ftpack@arg,f
  8953  0972  307F               	movlw	127
  8954  0973  05F1               	andwf	___ftpack@arg+1,f
  8955  0974  30FF               	movlw	255
  8956  0975  05F2               	andwf	___ftpack@arg+2,f
  8957  0976                     l570:	
  8958  0976  1003               	clrc
  8959  0977  0CF3               	rrf	___ftpack@exp,f
  8960  0978  0873               	movf	___ftpack@exp,w
  8961  0979  00F5               	movwf	??___ftpack
  8962  097A  01F6               	clrf	??___ftpack+1
  8963  097B  01F7               	clrf	??___ftpack+2
  8964  097C  3010               	movlw	16
  8965  097D                     u1855:	
  8966  097D  35F5               	lslf	??___ftpack,f
  8967  097E  0DF6               	rlf	??___ftpack+1,f
  8968  097F  0DF7               	rlf	??___ftpack+2,f
  8969  0980  0B89               	decfsz	9,f
  8970  0981  297D               	goto	u1855
  8971  0982  0875               	movf	??___ftpack,w
  8972  0983  04F0               	iorwf	___ftpack@arg,f
  8973  0984  0876               	movf	??___ftpack+1,w
  8974  0985  04F1               	iorwf	___ftpack@arg+1,f
  8975  0986  0877               	movf	??___ftpack+2,w
  8976  0987  04F2               	iorwf	___ftpack@arg+2,f
  8977  0988  0874               	movf	___ftpack@sign,w
  8978  0989  1903               	btfsc	3,2
  8979  098A  0008               	return
  8980  098B  17F2               	bsf	___ftpack@arg+2,7
  8981  098C  0008               	return
  8982  098D                     __end_of___ftpack:	
  8983                           
  8984                           	psect	text12
  8985  0ED0                     __ptext12:	
  8986 ;; *************** function _readAnalog *****************
  8987 ;; Defined at:
  8988 ;;		line 88 in file "adcc.c"
  8989 ;; Parameters:    Size  Location     Type
  8990 ;;  channel         2    6[BANK0 ] int 
  8991 ;; Auto vars:     Size  Location     Type
  8992 ;;  value           2   11[COMMON] int 
  8993 ;;  analog_chann    2    9[COMMON] int 
  8994 ;; Return value:  Size  Location     Type
  8995 ;;                  2    6[BANK0 ] int 
  8996 ;; Registers used:
  8997 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8998 ;; Tracked objects:
  8999 ;;		On entry : 0/0
  9000 ;;		On exit  : 0/0
  9001 ;;		Unchanged: 0/0
  9002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9003 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9004 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9005 ;;      Temps:          0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9006 ;;      Totals:         4      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9007 ;;Total ram usage:       22 bytes
  9008 ;; Hardware stack levels used:    1
  9009 ;; Hardware stack levels required when called:    1
  9010 ;; This function calls:
  9011 ;;		_ADCRead
  9012 ;;		___aldiv
  9013 ;;		___wmul
  9014 ;; This function is called by:
  9015 ;;		_main
  9016 ;; This function uses a non-reentrant model
  9017 ;;
  9018                           
  9019                           
  9020                           ;psect for function _readAnalog
  9021  0ED0                     _readAnalog:	
  9022                           
  9023                           ;adcc.c: 90: int value;
  9024                           ;adcc.c: 92: int analog_channel = channels[channel];
  9025                           
  9026                           ;incstack = 0
  9027                           ; Regs used in _readAnalog: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9028  0ED0  0020               	movlb	0	; select bank0
  9029  0ED1  3526               	lslf	readAnalog@channel,w
  9030  0ED2  3EDD               	addlw	(low (_channels| 0))& (0+255)
  9031  0ED3  0086               	movwf	6
  9032  0ED4  0187               	clrf	7
  9033  0ED5  3F40               	moviw [0]fsr1
  9034  0ED6  00F9               	movwf	readAnalog@analog_channel
  9035  0ED7  3F41               	moviw [1]fsr1
  9036  0ED8  00FA               	movwf	readAnalog@analog_channel+1
  9037                           
  9038                           ;adcc.c: 94: value = ADCRead(analog_channel);
  9039  0ED9  0879               	movf	readAnalog@analog_channel,w
  9040  0EDA  3195  25C2  318E   	fcall	_ADCRead
  9041  0EDD  0871               	movf	?_ADCRead+1,w
  9042  0EDE  00FC               	movwf	readAnalog@value+1
  9043  0EDF  0870               	movf	?_ADCRead,w
  9044  0EE0  00FB               	movwf	readAnalog@value
  9045                           
  9046                           ;adcc.c: 98: totals[channel] = totals[channel] - samples[channel][sampleIndex];
  9047  0EE1  0020               	movlb	0	; select bank0
  9048  0EE2  0826               	movf	readAnalog@channel,w
  9049  0EE3  00A8               	movwf	??_readAnalog
  9050  0EE4  3001               	movlw	1
  9051  0EE5                     u2825:	
  9052  0EE5  35A8               	lslf	??_readAnalog,f
  9053  0EE6  3EFF               	addlw	-1
  9054  0EE7  1D03               	skipz
  9055  0EE8  2EE5               	goto	u2825
  9056  0EE9  3528               	lslf	??_readAnalog,w
  9057  0EEA  3EC0               	addlw	(low (_totals| 0))& (0+255)
  9058  0EEB  0086               	movwf	6
  9059  0EEC  0187               	clrf	7
  9060  0EED  3F40               	moviw [0]fsr1
  9061  0EEE  00A9               	movwf	??_readAnalog+1
  9062  0EEF  3F41               	moviw [1]fsr1
  9063  0EF0  00AA               	movwf	??_readAnalog+2
  9064  0EF1  3F42               	moviw [2]fsr1
  9065  0EF2  00AB               	movwf	??_readAnalog+3
  9066  0EF3  3F43               	moviw [3]fsr1
  9067  0EF4  00AC               	movwf	??_readAnalog+4
  9068  0EF5  086F               	movf	_sampleIndex+1,w
  9069  0EF6  00AE               	movwf	??_readAnalog+6
  9070  0EF7  086E               	movf	_sampleIndex,w
  9071  0EF8  00AD               	movwf	??_readAnalog+5
  9072  0EF9  35AD               	lslf	??_readAnalog+5,f
  9073  0EFA  0DAE               	rlf	??_readAnalog+6,f
  9074  0EFB  0827               	movf	readAnalog@channel+1,w
  9075  0EFC  00F1               	movwf	___wmul@multiplier+1
  9076  0EFD  0826               	movf	readAnalog@channel,w
  9077  0EFE  00F0               	movwf	___wmul@multiplier
  9078  0EFF  3028               	movlw	40
  9079  0F00  00F2               	movwf	___wmul@multiplicand
  9080  0F01  3000               	movlw	0
  9081  0F02  00F3               	movwf	___wmul@multiplicand+1
  9082  0F03  3196  2656  318E   	fcall	___wmul
  9083  0F06  3000               	movlw	0
  9084  0F07  0020               	movlb	0	; select bank0
  9085  0F08  00AF               	movwf	??_readAnalog+7
  9086  0F09  3023               	movlw	35
  9087  0F0A  00B0               	movwf	??_readAnalog+8
  9088  0F0B  0870               	movf	?___wmul,w
  9089  0F0C  072F               	addwf	??_readAnalog+7,w
  9090  0F0D  00B1               	movwf	??_readAnalog+9
  9091  0F0E  0871               	movf	?___wmul+1,w
  9092  0F0F  3D30               	addwfc	??_readAnalog+8,w
  9093  0F10  00B2               	movwf	??_readAnalog+10
  9094  0F11  0831               	movf	??_readAnalog+9,w
  9095  0F12  072D               	addwf	??_readAnalog+5,w
  9096  0F13  0084               	movwf	4
  9097  0F14  0832               	movf	??_readAnalog+10,w
  9098  0F15  3D2E               	addwfc	??_readAnalog+6,w
  9099  0F16  0085               	movwf	5
  9100  0F17  3F00               	moviw [0]fsr0
  9101  0F18  00B3               	movwf	??_readAnalog+11
  9102  0F19  3F01               	moviw [1]fsr0
  9103  0F1A  00B4               	movwf	??_readAnalog+12
  9104  0F1B  01B5               	clrf	??_readAnalog+13
  9105  0F1C  01B6               	clrf	??_readAnalog+14
  9106  0F1D  09B3               	comf	??_readAnalog+11,f
  9107  0F1E  09B4               	comf	??_readAnalog+12,f
  9108  0F1F  09B5               	comf	??_readAnalog+13,f
  9109  0F20  09B6               	comf	??_readAnalog+14,f
  9110  0F21  0AB3               	incf	??_readAnalog+11,f
  9111  0F22  1903               	skipnz
  9112  0F23  0AB4               	incf	??_readAnalog+12,f
  9113  0F24  1903               	skipnz
  9114  0F25  0AB5               	incf	??_readAnalog+13,f
  9115  0F26  1903               	skipnz
  9116  0F27  0AB6               	incf	??_readAnalog+14,f
  9117  0F28  0833               	movf	??_readAnalog+11,w
  9118  0F29  07A9               	addwf	??_readAnalog+1,f
  9119  0F2A  0834               	movf	??_readAnalog+12,w
  9120  0F2B  3DAA               	addwfc	??_readAnalog+2,f
  9121  0F2C  0835               	movf	??_readAnalog+13,w
  9122  0F2D  3DAB               	addwfc	??_readAnalog+3,f
  9123  0F2E  0836               	movf	??_readAnalog+14,w
  9124  0F2F  3DAC               	addwfc	??_readAnalog+4,f
  9125  0F30  0826               	movf	readAnalog@channel,w
  9126  0F31  00B7               	movwf	??_readAnalog+15
  9127  0F32  3001               	movlw	1
  9128  0F33                     u2835:	
  9129  0F33  35B7               	lslf	??_readAnalog+15,f
  9130  0F34  3EFF               	addlw	-1
  9131  0F35  1D03               	skipz
  9132  0F36  2F33               	goto	u2835
  9133  0F37  3537               	lslf	??_readAnalog+15,w
  9134  0F38  3EC0               	addlw	(low (_totals| 0))& (0+255)
  9135  0F39  0086               	movwf	6
  9136  0F3A  0187               	clrf	7
  9137  0F3B  0829               	movf	??_readAnalog+1,w
  9138  0F3C  3FC0               	movwi [0]fsr1
  9139  0F3D  082A               	movf	??_readAnalog+2,w
  9140  0F3E  3FC1               	movwi [1]fsr1
  9141  0F3F  082B               	movf	??_readAnalog+3,w
  9142  0F40  3FC2               	movwi [2]fsr1
  9143  0F41  082C               	movf	??_readAnalog+4,w
  9144  0F42  3FC3               	movwi [3]fsr1
  9145                           
  9146                           ;adcc.c: 100: samples[channel][sampleIndex] = value;
  9147  0F43  086F               	movf	_sampleIndex+1,w
  9148  0F44  00A9               	movwf	??_readAnalog+1
  9149  0F45  086E               	movf	_sampleIndex,w
  9150  0F46  00A8               	movwf	??_readAnalog
  9151  0F47  35A8               	lslf	??_readAnalog,f
  9152  0F48  0DA9               	rlf	??_readAnalog+1,f
  9153  0F49  0827               	movf	readAnalog@channel+1,w
  9154  0F4A  00F1               	movwf	___wmul@multiplier+1
  9155  0F4B  0826               	movf	readAnalog@channel,w
  9156  0F4C  00F0               	movwf	___wmul@multiplier
  9157  0F4D  3028               	movlw	40
  9158  0F4E  00F2               	movwf	___wmul@multiplicand
  9159  0F4F  3000               	movlw	0
  9160  0F50  00F3               	movwf	___wmul@multiplicand+1
  9161  0F51  3196  2656  318E   	fcall	___wmul
  9162  0F54  3000               	movlw	0
  9163  0F55  0020               	movlb	0	; select bank0
  9164  0F56  00AA               	movwf	??_readAnalog+2
  9165  0F57  3023               	movlw	35
  9166  0F58  00AB               	movwf	??_readAnalog+3
  9167  0F59  0870               	movf	?___wmul,w
  9168  0F5A  072A               	addwf	??_readAnalog+2,w
  9169  0F5B  00AC               	movwf	??_readAnalog+4
  9170  0F5C  0871               	movf	?___wmul+1,w
  9171  0F5D  3D2B               	addwfc	??_readAnalog+3,w
  9172  0F5E  00AD               	movwf	??_readAnalog+5
  9173  0F5F  0828               	movf	??_readAnalog,w
  9174  0F60  072C               	addwf	??_readAnalog+4,w
  9175  0F61  0086               	movwf	6
  9176  0F62  0829               	movf	??_readAnalog+1,w
  9177  0F63  3D2D               	addwfc	??_readAnalog+5,w
  9178  0F64  0087               	movwf	7
  9179  0F65  087B               	movf	readAnalog@value,w
  9180  0F66  3FC0               	movwi [0]fsr1
  9181  0F67  087C               	movf	readAnalog@value+1,w
  9182  0F68  3FC1               	movwi [1]fsr1
  9183                           
  9184                           ;adcc.c: 102: totals[channel] = totals[channel] + samples[channel][sampleIndex];
  9185  0F69  0826               	movf	readAnalog@channel,w
  9186  0F6A  00A8               	movwf	??_readAnalog
  9187  0F6B  3001               	movlw	1
  9188  0F6C                     u2845:	
  9189  0F6C  35A8               	lslf	??_readAnalog,f
  9190  0F6D  3EFF               	addlw	-1
  9191  0F6E  1D03               	skipz
  9192  0F6F  2F6C               	goto	u2845
  9193  0F70  3528               	lslf	??_readAnalog,w
  9194  0F71  3EC0               	addlw	(low (_totals| 0))& (0+255)
  9195  0F72  0086               	movwf	6
  9196  0F73  0187               	clrf	7
  9197  0F74  3F40               	moviw [0]fsr1
  9198  0F75  00A9               	movwf	??_readAnalog+1
  9199  0F76  3F41               	moviw [1]fsr1
  9200  0F77  00AA               	movwf	??_readAnalog+2
  9201  0F78  3F42               	moviw [2]fsr1
  9202  0F79  00AB               	movwf	??_readAnalog+3
  9203  0F7A  3F43               	moviw [3]fsr1
  9204  0F7B  00AC               	movwf	??_readAnalog+4
  9205  0F7C  086F               	movf	_sampleIndex+1,w
  9206  0F7D  00AE               	movwf	??_readAnalog+6
  9207  0F7E  086E               	movf	_sampleIndex,w
  9208  0F7F  00AD               	movwf	??_readAnalog+5
  9209  0F80  35AD               	lslf	??_readAnalog+5,f
  9210  0F81  0DAE               	rlf	??_readAnalog+6,f
  9211  0F82  0827               	movf	readAnalog@channel+1,w
  9212  0F83  00F1               	movwf	___wmul@multiplier+1
  9213  0F84  0826               	movf	readAnalog@channel,w
  9214  0F85  00F0               	movwf	___wmul@multiplier
  9215  0F86  3028               	movlw	40
  9216  0F87  00F2               	movwf	___wmul@multiplicand
  9217  0F88  3000               	movlw	0
  9218  0F89  00F3               	movwf	___wmul@multiplicand+1
  9219  0F8A  3196  2656  318E   	fcall	___wmul
  9220  0F8D  3000               	movlw	0
  9221  0F8E  0020               	movlb	0	; select bank0
  9222  0F8F  00AF               	movwf	??_readAnalog+7
  9223  0F90  3023               	movlw	35
  9224  0F91  00B0               	movwf	??_readAnalog+8
  9225  0F92  0870               	movf	?___wmul,w
  9226  0F93  072F               	addwf	??_readAnalog+7,w
  9227  0F94  00B1               	movwf	??_readAnalog+9
  9228  0F95  0871               	movf	?___wmul+1,w
  9229  0F96  3D30               	addwfc	??_readAnalog+8,w
  9230  0F97  00B2               	movwf	??_readAnalog+10
  9231  0F98  0831               	movf	??_readAnalog+9,w
  9232  0F99  072D               	addwf	??_readAnalog+5,w
  9233  0F9A  0084               	movwf	4
  9234  0F9B  0832               	movf	??_readAnalog+10,w
  9235  0F9C  3D2E               	addwfc	??_readAnalog+6,w
  9236  0F9D  0085               	movwf	5
  9237  0F9E  3F00               	moviw [0]fsr0
  9238  0F9F  00B3               	movwf	??_readAnalog+11
  9239  0FA0  3F01               	moviw [1]fsr0
  9240  0FA1  00B4               	movwf	??_readAnalog+12
  9241  0FA2  01B5               	clrf	??_readAnalog+13
  9242  0FA3  01B6               	clrf	??_readAnalog+14
  9243  0FA4  0833               	movf	??_readAnalog+11,w
  9244  0FA5  07A9               	addwf	??_readAnalog+1,f
  9245  0FA6  0834               	movf	??_readAnalog+12,w
  9246  0FA7  3DAA               	addwfc	??_readAnalog+2,f
  9247  0FA8  0835               	movf	??_readAnalog+13,w
  9248  0FA9  3DAB               	addwfc	??_readAnalog+3,f
  9249  0FAA  0836               	movf	??_readAnalog+14,w
  9250  0FAB  3DAC               	addwfc	??_readAnalog+4,f
  9251  0FAC  0826               	movf	readAnalog@channel,w
  9252  0FAD  00B7               	movwf	??_readAnalog+15
  9253  0FAE  3001               	movlw	1
  9254  0FAF                     u2855:	
  9255  0FAF  35B7               	lslf	??_readAnalog+15,f
  9256  0FB0  3EFF               	addlw	-1
  9257  0FB1  1D03               	skipz
  9258  0FB2  2FAF               	goto	u2855
  9259  0FB3  3537               	lslf	??_readAnalog+15,w
  9260  0FB4  3EC0               	addlw	(low (_totals| 0))& (0+255)
  9261  0FB5  0086               	movwf	6
  9262  0FB6  0187               	clrf	7
  9263  0FB7  0829               	movf	??_readAnalog+1,w
  9264  0FB8  3FC0               	movwi [0]fsr1
  9265  0FB9  082A               	movf	??_readAnalog+2,w
  9266  0FBA  3FC1               	movwi [1]fsr1
  9267  0FBB  082B               	movf	??_readAnalog+3,w
  9268  0FBC  3FC2               	movwi [2]fsr1
  9269  0FBD  082C               	movf	??_readAnalog+4,w
  9270  0FBE  3FC3               	movwi [3]fsr1
  9271                           
  9272                           ;adcc.c: 104: if(channel>4)
  9273  0FBF  0827               	movf	readAnalog@channel+1,w
  9274  0FC0  3A80               	xorlw	128
  9275  0FC1  00A8               	movwf	??_readAnalog
  9276  0FC2  3080               	movlw	128
  9277  0FC3  0228               	subwf	??_readAnalog,w
  9278  0FC4  1D03               	skipz
  9279  0FC5  2FC8               	goto	u2865
  9280  0FC6  3005               	movlw	5
  9281  0FC7  0226               	subwf	readAnalog@channel,w
  9282  0FC8                     u2865:	
  9283  0FC8  1C03               	skipc
  9284  0FC9  2FD8               	goto	l2677
  9285                           
  9286                           ;adcc.c: 105: {
  9287                           ;adcc.c: 106: sampleIndex += 1;
  9288  0FCA  3001               	movlw	1
  9289  0FCB  0020               	movlb	0	; select bank0
  9290  0FCC  07EE               	addwf	_sampleIndex,f
  9291  0FCD  3000               	movlw	0
  9292  0FCE  3DEF               	addwfc	_sampleIndex+1,f
  9293                           
  9294                           ;adcc.c: 108: if(sampleIndex >= 20)
  9295  0FCF  3000               	movlw	0
  9296  0FD0  026F               	subwf	_sampleIndex+1,w
  9297  0FD1  3014               	movlw	20
  9298  0FD2  1903               	skipnz
  9299  0FD3  026E               	subwf	_sampleIndex,w
  9300  0FD4  1C03               	skipc
  9301  0FD5  2FD8               	goto	l2677
  9302                           
  9303                           ;adcc.c: 109: {
  9304                           ;adcc.c: 110: sampleIndex = 0;
  9305  0FD6  01EE               	clrf	_sampleIndex
  9306  0FD7  01EF               	clrf	_sampleIndex+1
  9307  0FD8                     l2677:	
  9308                           
  9309                           ;adcc.c: 111: }
  9310                           ;adcc.c: 112: }
  9311                           ;adcc.c: 114: value = totals[channel] / 20;
  9312  0FD8  3000               	movlw	0
  9313  0FD9  00F3               	movwf	___aldiv@divisor+3
  9314  0FDA  3000               	movlw	0
  9315  0FDB  00F2               	movwf	___aldiv@divisor+2
  9316  0FDC  3000               	movlw	0
  9317  0FDD  00F1               	movwf	___aldiv@divisor+1
  9318  0FDE  3014               	movlw	20
  9319  0FDF  00F0               	movwf	___aldiv@divisor
  9320  0FE0  0020               	movlb	0	; select bank0
  9321  0FE1  0826               	movf	readAnalog@channel,w
  9322  0FE2  00A8               	movwf	??_readAnalog
  9323  0FE3  3001               	movlw	1
  9324  0FE4                     u2885:	
  9325  0FE4  35A8               	lslf	??_readAnalog,f
  9326  0FE5  3EFF               	addlw	-1
  9327  0FE6  1D03               	skipz
  9328  0FE7  2FE4               	goto	u2885
  9329  0FE8  3528               	lslf	??_readAnalog,w
  9330  0FE9  3EC0               	addlw	(low (_totals| 0))& (0+255)
  9331  0FEA  0086               	movwf	6
  9332  0FEB  0187               	clrf	7
  9333  0FEC  3F40               	moviw [0]fsr1
  9334  0FED  00F4               	movwf	___aldiv@dividend
  9335  0FEE  3F41               	moviw [1]fsr1
  9336  0FEF  00F5               	movwf	___aldiv@dividend+1
  9337  0FF0  3F42               	moviw [2]fsr1
  9338  0FF1  00F6               	movwf	___aldiv@dividend+2
  9339  0FF2  3F43               	moviw [3]fsr1
  9340  0FF3  00F7               	movwf	___aldiv@dividend+3
  9341  0FF4  3189  218D         	fcall	___aldiv
  9342  0FF6  0871               	movf	?___aldiv+1,w
  9343  0FF7  00FC               	movwf	readAnalog@value+1
  9344  0FF8  0870               	movf	?___aldiv,w
  9345  0FF9  00FB               	movwf	readAnalog@value
  9346                           
  9347                           ;adcc.c: 116: return value;
  9348  0FFA  087C               	movf	readAnalog@value+1,w
  9349  0FFB  0020               	movlb	0	; select bank0
  9350  0FFC  00A7               	movwf	?_readAnalog+1
  9351  0FFD  087B               	movf	readAnalog@value,w
  9352  0FFE  00A6               	movwf	?_readAnalog
  9353  0FFF  0008               	return
  9354  1000                     __end_of_readAnalog:	
  9355                           
  9356                           	psect	text13
  9357  1656                     __ptext13:	
  9358 ;; *************** function ___wmul *****************
  9359 ;; Defined at:
  9360 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
  9361 ;; Parameters:    Size  Location     Type
  9362 ;;  multiplier      2    0[COMMON] unsigned int 
  9363 ;;  multiplicand    2    2[COMMON] unsigned int 
  9364 ;; Auto vars:     Size  Location     Type
  9365 ;;  product         2    4[COMMON] unsigned int 
  9366 ;; Return value:  Size  Location     Type
  9367 ;;                  2    0[COMMON] unsigned int 
  9368 ;; Registers used:
  9369 ;;		wreg, status,2, status,0
  9370 ;; Tracked objects:
  9371 ;;		On entry : 0/0
  9372 ;;		On exit  : 0/0
  9373 ;;		Unchanged: 0/0
  9374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9375 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9376 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9378 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9379 ;;Total ram usage:        6 bytes
  9380 ;; Hardware stack levels used:    1
  9381 ;; This function calls:
  9382 ;;		Nothing
  9383 ;; This function is called by:
  9384 ;;		_readAnalog
  9385 ;;		_eval_poly
  9386 ;; This function uses a non-reentrant model
  9387 ;;
  9388                           
  9389                           
  9390                           ;psect for function ___wmul
  9391  1656                     ___wmul:	
  9392                           
  9393                           ;incstack = 0
  9394                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  9395  1656  01F4               	clrf	___wmul@product
  9396  1657  01F5               	clrf	___wmul@product+1
  9397  1658                     l2105:	
  9398  1658  1C70               	btfss	___wmul@multiplier,0
  9399  1659  2E5E               	goto	l401
  9400  165A  0872               	movf	___wmul@multiplicand,w
  9401  165B  07F4               	addwf	___wmul@product,f
  9402  165C  0873               	movf	___wmul@multiplicand+1,w
  9403  165D  3DF5               	addwfc	___wmul@product+1,f
  9404  165E                     l401:	
  9405  165E  3001               	movlw	1
  9406  165F                     u1925:	
  9407  165F  35F2               	lslf	___wmul@multiplicand,f
  9408  1660  0DF3               	rlf	___wmul@multiplicand+1,f
  9409  1661  0B89               	decfsz	9,f
  9410  1662  2E5F               	goto	u1925
  9411  1663  3001               	movlw	1
  9412  1664                     u1935:	
  9413  1664  36F1               	lsrf	___wmul@multiplier+1,f
  9414  1665  0CF0               	rrf	___wmul@multiplier,f
  9415  1666  0B89               	decfsz	9,f
  9416  1667  2E64               	goto	u1935
  9417  1668  0870               	movf	___wmul@multiplier,w
  9418  1669  0471               	iorwf	___wmul@multiplier+1,w
  9419  166A  1D03               	btfss	3,2
  9420  166B  2E58               	goto	l2105
  9421  166C  0875               	movf	___wmul@product+1,w
  9422  166D  00F1               	movwf	?___wmul+1
  9423  166E  0874               	movf	___wmul@product,w
  9424  166F  00F0               	movwf	?___wmul
  9425  1670  0008               	return
  9426  1671                     __end_of___wmul:	
  9427                           
  9428                           	psect	text14
  9429  098D                     __ptext14:	
  9430 ;; *************** function ___aldiv *****************
  9431 ;; Defined at:
  9432 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\aldiv.c"
  9433 ;; Parameters:    Size  Location     Type
  9434 ;;  divisor         4    0[COMMON] long 
  9435 ;;  dividend        4    4[COMMON] long 
  9436 ;; Auto vars:     Size  Location     Type
  9437 ;;  quotient        4    2[BANK0 ] long 
  9438 ;;  sign            1    1[BANK0 ] unsigned char 
  9439 ;;  counter         1    0[BANK0 ] unsigned char 
  9440 ;; Return value:  Size  Location     Type
  9441 ;;                  4    0[COMMON] long 
  9442 ;; Registers used:
  9443 ;;		wreg, status,2, status,0
  9444 ;; Tracked objects:
  9445 ;;		On entry : 0/0
  9446 ;;		On exit  : 0/0
  9447 ;;		Unchanged: 0/0
  9448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9449 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9450 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9451 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9452 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9453 ;;Total ram usage:       15 bytes
  9454 ;; Hardware stack levels used:    1
  9455 ;; This function calls:
  9456 ;;		Nothing
  9457 ;; This function is called by:
  9458 ;;		_readAnalog
  9459 ;; This function uses a non-reentrant model
  9460 ;;
  9461                           
  9462                           
  9463                           ;psect for function ___aldiv
  9464  098D                     ___aldiv:	
  9465                           
  9466                           ;incstack = 0
  9467                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  9468  098D  0020               	movlb	0	; select bank0
  9469  098E  01A1               	clrf	___aldiv@sign
  9470  098F  1FF3               	btfss	___aldiv@divisor+3,7
  9471  0990  299E               	goto	l456
  9472  0991  09F0               	comf	___aldiv@divisor,f
  9473  0992  09F1               	comf	___aldiv@divisor+1,f
  9474  0993  09F2               	comf	___aldiv@divisor+2,f
  9475  0994  09F3               	comf	___aldiv@divisor+3,f
  9476  0995  0AF0               	incf	___aldiv@divisor,f
  9477  0996  1903               	skipnz
  9478  0997  0AF1               	incf	___aldiv@divisor+1,f
  9479  0998  1903               	skipnz
  9480  0999  0AF2               	incf	___aldiv@divisor+2,f
  9481  099A  1903               	skipnz
  9482  099B  0AF3               	incf	___aldiv@divisor+3,f
  9483  099C  01A1               	clrf	___aldiv@sign
  9484  099D  0AA1               	incf	___aldiv@sign,f
  9485  099E                     l456:	
  9486  099E  1FF7               	btfss	___aldiv@dividend+3,7
  9487  099F  29AF               	goto	l2501
  9488  09A0  09F4               	comf	___aldiv@dividend,f
  9489  09A1  09F5               	comf	___aldiv@dividend+1,f
  9490  09A2  09F6               	comf	___aldiv@dividend+2,f
  9491  09A3  09F7               	comf	___aldiv@dividend+3,f
  9492  09A4  0AF4               	incf	___aldiv@dividend,f
  9493  09A5  1903               	skipnz
  9494  09A6  0AF5               	incf	___aldiv@dividend+1,f
  9495  09A7  1903               	skipnz
  9496  09A8  0AF6               	incf	___aldiv@dividend+2,f
  9497  09A9  1903               	skipnz
  9498  09AA  0AF7               	incf	___aldiv@dividend+3,f
  9499  09AB  3001               	movlw	1
  9500  09AC  00F8               	movwf	??___aldiv
  9501  09AD  0878               	movf	??___aldiv,w
  9502  09AE  06A1               	xorwf	___aldiv@sign,f
  9503  09AF                     l2501:	
  9504  09AF  3000               	movlw	0
  9505  09B0  00A5               	movwf	___aldiv@quotient+3
  9506  09B1  3000               	movlw	0
  9507  09B2  00A4               	movwf	___aldiv@quotient+2
  9508  09B3  3000               	movlw	0
  9509  09B4  00A3               	movwf	___aldiv@quotient+1
  9510  09B5  3000               	movlw	0
  9511  09B6  00A2               	movwf	___aldiv@quotient
  9512  09B7  0873               	movf	___aldiv@divisor+3,w
  9513  09B8  0472               	iorwf	___aldiv@divisor+2,w
  9514  09B9  0471               	iorwf	___aldiv@divisor+1,w
  9515  09BA  0470               	iorwf	___aldiv@divisor,w
  9516  09BB  1903               	skipnz
  9517  09BC  29F8               	goto	l2523
  9518  09BD  01A0               	clrf	___aldiv@counter
  9519  09BE  0AA0               	incf	___aldiv@counter,f
  9520  09BF                     l2509:	
  9521  09BF  1BF3               	btfsc	___aldiv@divisor+3,7
  9522  09C0  29CD               	goto	l2511
  9523  09C1  3001               	movlw	1
  9524  09C2                     u2475:	
  9525  09C2  35F0               	lslf	___aldiv@divisor,f
  9526  09C3  0DF1               	rlf	___aldiv@divisor+1,f
  9527  09C4  0DF2               	rlf	___aldiv@divisor+2,f
  9528  09C5  0DF3               	rlf	___aldiv@divisor+3,f
  9529  09C6  0B89               	decfsz	9,f
  9530  09C7  29C2               	goto	u2475
  9531  09C8  3001               	movlw	1
  9532  09C9  00F8               	movwf	??___aldiv
  9533  09CA  0878               	movf	??___aldiv,w
  9534  09CB  07A0               	addwf	___aldiv@counter,f
  9535  09CC  29BF               	goto	l2509
  9536  09CD                     l2511:	
  9537  09CD  3001               	movlw	1
  9538  09CE                     u2495:	
  9539  09CE  35A2               	lslf	___aldiv@quotient,f
  9540  09CF  0DA3               	rlf	___aldiv@quotient+1,f
  9541  09D0  0DA4               	rlf	___aldiv@quotient+2,f
  9542  09D1  0DA5               	rlf	___aldiv@quotient+3,f
  9543  09D2  0B89               	decfsz	9,f
  9544  09D3  29CE               	goto	u2495
  9545  09D4  0873               	movf	___aldiv@divisor+3,w
  9546  09D5  0277               	subwf	___aldiv@dividend+3,w
  9547  09D6  1D03               	skipz
  9548  09D7  29E2               	goto	u2505
  9549  09D8  0872               	movf	___aldiv@divisor+2,w
  9550  09D9  0276               	subwf	___aldiv@dividend+2,w
  9551  09DA  1D03               	skipz
  9552  09DB  29E2               	goto	u2505
  9553  09DC  0871               	movf	___aldiv@divisor+1,w
  9554  09DD  0275               	subwf	___aldiv@dividend+1,w
  9555  09DE  1D03               	skipz
  9556  09DF  29E2               	goto	u2505
  9557  09E0  0870               	movf	___aldiv@divisor,w
  9558  09E1  0274               	subwf	___aldiv@dividend,w
  9559  09E2                     u2505:	
  9560  09E2  1C03               	skipc
  9561  09E3  29ED               	goto	l2519
  9562  09E4  0870               	movf	___aldiv@divisor,w
  9563  09E5  02F4               	subwf	___aldiv@dividend,f
  9564  09E6  0871               	movf	___aldiv@divisor+1,w
  9565  09E7  3BF5               	subwfb	___aldiv@dividend+1,f
  9566  09E8  0872               	movf	___aldiv@divisor+2,w
  9567  09E9  3BF6               	subwfb	___aldiv@dividend+2,f
  9568  09EA  0873               	movf	___aldiv@divisor+3,w
  9569  09EB  3BF7               	subwfb	___aldiv@dividend+3,f
  9570  09EC  1422               	bsf	___aldiv@quotient,0
  9571  09ED                     l2519:	
  9572  09ED  3001               	movlw	1
  9573  09EE                     u2515:	
  9574  09EE  36F3               	lsrf	___aldiv@divisor+3,f
  9575  09EF  0CF2               	rrf	___aldiv@divisor+2,f
  9576  09F0  0CF1               	rrf	___aldiv@divisor+1,f
  9577  09F1  0CF0               	rrf	___aldiv@divisor,f
  9578  09F2  0B89               	decfsz	9,f
  9579  09F3  29EE               	goto	u2515
  9580  09F4  3001               	movlw	1
  9581  09F5  02A0               	subwf	___aldiv@counter,f
  9582  09F6  1D03               	btfss	3,2
  9583  09F7  29CD               	goto	l2511
  9584  09F8                     l2523:	
  9585  09F8  0821               	movf	___aldiv@sign,w
  9586  09F9  1903               	btfsc	3,2
  9587  09FA  2A06               	goto	l2527
  9588  09FB  09A2               	comf	___aldiv@quotient,f
  9589  09FC  09A3               	comf	___aldiv@quotient+1,f
  9590  09FD  09A4               	comf	___aldiv@quotient+2,f
  9591  09FE  09A5               	comf	___aldiv@quotient+3,f
  9592  09FF  0AA2               	incf	___aldiv@quotient,f
  9593  0A00  1903               	skipnz
  9594  0A01  0AA3               	incf	___aldiv@quotient+1,f
  9595  0A02  1903               	skipnz
  9596  0A03  0AA4               	incf	___aldiv@quotient+2,f
  9597  0A04  1903               	skipnz
  9598  0A05  0AA5               	incf	___aldiv@quotient+3,f
  9599  0A06                     l2527:	
  9600  0A06  0825               	movf	___aldiv@quotient+3,w
  9601  0A07  00F3               	movwf	?___aldiv+3
  9602  0A08  0824               	movf	___aldiv@quotient+2,w
  9603  0A09  00F2               	movwf	?___aldiv+2
  9604  0A0A  0823               	movf	___aldiv@quotient+1,w
  9605  0A0B  00F1               	movwf	?___aldiv+1
  9606  0A0C  0822               	movf	___aldiv@quotient,w
  9607  0A0D  00F0               	movwf	?___aldiv
  9608  0A0E  0008               	return
  9609  0A0F                     __end_of___aldiv:	
  9610                           
  9611                           	psect	text15
  9612  15C2                     __ptext15:	
  9613 ;; *************** function _ADCRead *****************
  9614 ;; Defined at:
  9615 ;;		line 65 in file "adcc.c"
  9616 ;; Parameters:    Size  Location     Type
  9617 ;;  channel         1    wreg     enum E13559
  9618 ;; Auto vars:     Size  Location     Type
  9619 ;;  channel         1    3[COMMON] enum E13559
  9620 ;; Return value:  Size  Location     Type
  9621 ;;                  2    0[COMMON] unsigned int 
  9622 ;; Registers used:
  9623 ;;		wreg
  9624 ;; Tracked objects:
  9625 ;;		On entry : 0/0
  9626 ;;		On exit  : 0/0
  9627 ;;		Unchanged: 0/0
  9628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9629 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9630 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9632 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9633 ;;Total ram usage:        4 bytes
  9634 ;; Hardware stack levels used:    1
  9635 ;; This function calls:
  9636 ;;		Nothing
  9637 ;; This function is called by:
  9638 ;;		_readAnalog
  9639 ;;		_main
  9640 ;; This function uses a non-reentrant model
  9641 ;;
  9642                           
  9643                           
  9644                           ;psect for function _ADCRead
  9645  15C2                     _ADCRead:	
  9646                           
  9647                           ;incstack = 0
  9648                           ; Regs used in _ADCRead: [wreg]
  9649                           ;ADCRead@channel stored from wreg
  9650  15C2  00F3               	movwf	ADCRead@channel
  9651                           
  9652                           ;adcc.c: 68: ADPCH = channel;
  9653  15C3  0873               	movf	ADCRead@channel,w
  9654  15C4  0021               	movlb	1	; select bank1
  9655  15C5  009E               	movwf	30	;volatile
  9656                           
  9657                           ;adcc.c: 71: ADCON0bits.ADON = 1;
  9658  15C6  1793               	bsf	19,7	;volatile
  9659                           
  9660                           ;adcc.c: 74: ADCON0bits.ADCONT = 0;
  9661  15C7  1313               	bcf	19,6	;volatile
  9662                           
  9663                           ;adcc.c: 77: ADCON0bits.ADGO = 1;
  9664  15C8  1413               	bsf	19,0	;volatile
  9665  15C9                     l58:	
  9666                           ;adcc.c: 81: {
  9667                           
  9668                           ;adcc.c: 80: while (ADCON0bits.ADGO)
  9669                           
  9670  15C9  1813               	btfsc	19,0	;volatile
  9671  15CA  2DC9               	goto	l58
  9672                           
  9673                           ;adcc.c: 82: }
  9674                           ;adcc.c: 85: return ((ADRESH << 8) + ADRESL);
  9675  15CB  080D               	movf	13,w	;volatile
  9676  15CC  00F1               	movwf	?_ADCRead+1
  9677  15CD  080C               	movf	12,w	;volatile
  9678  15CE  00F0               	movwf	?_ADCRead
  9679  15CF  0008               	return
  9680  15D0                     __end_of_ADCRead:	
  9681                           
  9682                           	psect	text16
  9683  16D5                     __ptext16:	
  9684 ;; *************** function ___lwdiv *****************
  9685 ;; Defined at:
  9686 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwdiv.c"
  9687 ;; Parameters:    Size  Location     Type
  9688 ;;  divisor         2    0[COMMON] unsigned int 
  9689 ;;  dividend        2    2[COMMON] unsigned int 
  9690 ;; Auto vars:     Size  Location     Type
  9691 ;;  quotient        2    5[COMMON] unsigned int 
  9692 ;;  counter         1    7[COMMON] unsigned char 
  9693 ;; Return value:  Size  Location     Type
  9694 ;;                  2    0[COMMON] unsigned int 
  9695 ;; Registers used:
  9696 ;;		wreg, status,2, status,0
  9697 ;; Tracked objects:
  9698 ;;		On entry : 0/0
  9699 ;;		On exit  : 0/0
  9700 ;;		Unchanged: 0/0
  9701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9702 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9703 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9704 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9705 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9706 ;;Total ram usage:        8 bytes
  9707 ;; Hardware stack levels used:    1
  9708 ;; This function calls:
  9709 ;;		Nothing
  9710 ;; This function is called by:
  9711 ;;		_main
  9712 ;; This function uses a non-reentrant model
  9713 ;;
  9714                           
  9715                           
  9716                           ;psect for function ___lwdiv
  9717  16D5                     ___lwdiv:	
  9718                           
  9719                           ;incstack = 0
  9720                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  9721  16D5  01F5               	clrf	___lwdiv@quotient
  9722  16D6  01F6               	clrf	___lwdiv@quotient+1
  9723  16D7  0870               	movf	___lwdiv@divisor,w
  9724  16D8  0471               	iorwf	___lwdiv@divisor+1,w
  9725  16D9  1903               	btfsc	3,2
  9726  16DA  2F04               	goto	l2867
  9727  16DB  01F7               	clrf	___lwdiv@counter
  9728  16DC  0AF7               	incf	___lwdiv@counter,f
  9729  16DD                     l2855:	
  9730  16DD  1BF1               	btfsc	___lwdiv@divisor+1,7
  9731  16DE  2EE9               	goto	l2857
  9732  16DF  3001               	movlw	1
  9733  16E0                     u3155:	
  9734  16E0  35F0               	lslf	___lwdiv@divisor,f
  9735  16E1  0DF1               	rlf	___lwdiv@divisor+1,f
  9736  16E2  0B89               	decfsz	9,f
  9737  16E3  2EE0               	goto	u3155
  9738  16E4  3001               	movlw	1
  9739  16E5  00F4               	movwf	??___lwdiv
  9740  16E6  0874               	movf	??___lwdiv,w
  9741  16E7  07F7               	addwf	___lwdiv@counter,f
  9742  16E8  2EDD               	goto	l2855
  9743  16E9                     l2857:	
  9744  16E9  3001               	movlw	1
  9745  16EA                     u3175:	
  9746  16EA  35F5               	lslf	___lwdiv@quotient,f
  9747  16EB  0DF6               	rlf	___lwdiv@quotient+1,f
  9748  16EC  0B89               	decfsz	9,f
  9749  16ED  2EEA               	goto	u3175
  9750  16EE  0871               	movf	___lwdiv@divisor+1,w
  9751  16EF  0273               	subwf	___lwdiv@dividend+1,w
  9752  16F0  1D03               	skipz
  9753  16F1  2EF4               	goto	u3185
  9754  16F2  0870               	movf	___lwdiv@divisor,w
  9755  16F3  0272               	subwf	___lwdiv@dividend,w
  9756  16F4                     u3185:	
  9757  16F4  1C03               	skipc
  9758  16F5  2EFB               	goto	l2863
  9759  16F6  0870               	movf	___lwdiv@divisor,w
  9760  16F7  02F2               	subwf	___lwdiv@dividend,f
  9761  16F8  0871               	movf	___lwdiv@divisor+1,w
  9762  16F9  3BF3               	subwfb	___lwdiv@dividend+1,f
  9763  16FA  1475               	bsf	___lwdiv@quotient,0
  9764  16FB                     l2863:	
  9765  16FB  3001               	movlw	1
  9766  16FC                     u3195:	
  9767  16FC  36F1               	lsrf	___lwdiv@divisor+1,f
  9768  16FD  0CF0               	rrf	___lwdiv@divisor,f
  9769  16FE  0B89               	decfsz	9,f
  9770  16FF  2EFC               	goto	u3195
  9771  1700  3001               	movlw	1
  9772  1701  02F7               	subwf	___lwdiv@counter,f
  9773  1702  1D03               	btfss	3,2
  9774  1703  2EE9               	goto	l2857
  9775  1704                     l2867:	
  9776  1704  0876               	movf	___lwdiv@quotient+1,w
  9777  1705  00F1               	movwf	?___lwdiv+1
  9778  1706  0875               	movf	___lwdiv@quotient,w
  9779  1707  00F0               	movwf	?___lwdiv
  9780  1708  0008               	return
  9781  1709                     __end_of___lwdiv:	
  9782                           
  9783                           	psect	text17
  9784  0A0F                     __ptext17:	
  9785 ;; *************** function ___fttol *****************
  9786 ;; Defined at:
  9787 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fttol.c"
  9788 ;; Parameters:    Size  Location     Type
  9789 ;;  f1              3    0[COMMON] float 
  9790 ;; Auto vars:     Size  Location     Type
  9791 ;;  lval            4    9[COMMON] unsigned long 
  9792 ;;  exp1            1   13[COMMON] unsigned char 
  9793 ;;  sign1           1    8[COMMON] unsigned char 
  9794 ;; Return value:  Size  Location     Type
  9795 ;;                  4    0[COMMON] long 
  9796 ;; Registers used:
  9797 ;;		wreg, status,2, status,0
  9798 ;; Tracked objects:
  9799 ;;		On entry : 0/0
  9800 ;;		On exit  : 0/0
  9801 ;;		Unchanged: 0/0
  9802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9803 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9804 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9805 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9806 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9807 ;;Total ram usage:       14 bytes
  9808 ;; Hardware stack levels used:    1
  9809 ;; This function calls:
  9810 ;;		Nothing
  9811 ;; This function is called by:
  9812 ;;		_main
  9813 ;; This function uses a non-reentrant model
  9814 ;;
  9815                           
  9816                           
  9817                           ;psect for function ___fttol
  9818  0A0F                     ___fttol:	
  9819                           
  9820                           ;incstack = 0
  9821                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  9822  0A0F  0870               	movf	___fttol@f1,w
  9823  0A10  00F4               	movwf	??___fttol
  9824  0A11  0871               	movf	___fttol@f1+1,w
  9825  0A12  00F5               	movwf	??___fttol+1
  9826  0A13  0872               	movf	___fttol@f1+2,w
  9827  0A14  00F6               	movwf	??___fttol+2
  9828  0A15  1003               	clrc
  9829  0A16  0D75               	rlf	??___fttol+1,w
  9830  0A17  0D76               	rlf	??___fttol+2,w
  9831  0A18  00F7               	movwf	??___fttol+3
  9832  0A19  0877               	movf	??___fttol+3,w
  9833  0A1A  00FD               	movwf	___fttol@exp1
  9834  0A1B  087D               	movf	___fttol@exp1,w
  9835  0A1C  1D03               	btfss	3,2
  9836  0A1D  2A27               	goto	l2809
  9837  0A1E  3000               	movlw	0
  9838  0A1F  00F3               	movwf	?___fttol+3
  9839  0A20  3000               	movlw	0
  9840  0A21  00F2               	movwf	?___fttol+2
  9841  0A22  3000               	movlw	0
  9842  0A23  00F1               	movwf	?___fttol+1
  9843  0A24  3000               	movlw	0
  9844  0A25  00F0               	movwf	?___fttol
  9845  0A26  0008               	return
  9846  0A27                     l2809:	
  9847  0A27  0870               	movf	___fttol@f1,w
  9848  0A28  00F4               	movwf	??___fttol
  9849  0A29  0871               	movf	___fttol@f1+1,w
  9850  0A2A  00F5               	movwf	??___fttol+1
  9851  0A2B  0872               	movf	___fttol@f1+2,w
  9852  0A2C  00F6               	movwf	??___fttol+2
  9853  0A2D  3017               	movlw	23
  9854  0A2E                     u3055:	
  9855  0A2E  36F6               	lsrf	??___fttol+2,f
  9856  0A2F  0CF5               	rrf	??___fttol+1,f
  9857  0A30  0CF4               	rrf	??___fttol,f
  9858  0A31  0B89               	decfsz	9,f
  9859  0A32  2A2E               	goto	u3055
  9860  0A33  0874               	movf	??___fttol,w
  9861  0A34  00F7               	movwf	??___fttol+3
  9862  0A35  0877               	movf	??___fttol+3,w
  9863  0A36  00F8               	movwf	___fttol@sign1
  9864  0A37  17F1               	bsf	___fttol@f1+1,7
  9865  0A38  30FF               	movlw	255
  9866  0A39  05F0               	andwf	___fttol@f1,f
  9867  0A3A  30FF               	movlw	255
  9868  0A3B  05F1               	andwf	___fttol@f1+1,f
  9869  0A3C  3000               	movlw	0
  9870  0A3D  05F2               	andwf	___fttol@f1+2,f
  9871  0A3E  0870               	movf	___fttol@f1,w
  9872  0A3F  00F9               	movwf	___fttol@lval
  9873  0A40  0871               	movf	___fttol@f1+1,w
  9874  0A41  00FA               	movwf	___fttol@lval+1
  9875  0A42  0872               	movf	___fttol@f1+2,w
  9876  0A43  00FB               	movwf	___fttol@lval+2
  9877  0A44  01FC               	clrf	___fttol@lval+3
  9878  0A45  308E               	movlw	142
  9879  0A46  02FD               	subwf	___fttol@exp1,f
  9880  0A47  1FFD               	btfss	___fttol@exp1,7
  9881  0A48  2A65               	goto	l2829
  9882  0A49  087D               	movf	___fttol@exp1,w
  9883  0A4A  3A80               	xorlw	128
  9884  0A4B  3E8F               	addlw	143
  9885  0A4C  1803               	skipnc
  9886  0A4D  2A57               	goto	l2827
  9887  0A4E  3000               	movlw	0
  9888  0A4F  00F3               	movwf	?___fttol+3
  9889  0A50  3000               	movlw	0
  9890  0A51  00F2               	movwf	?___fttol+2
  9891  0A52  3000               	movlw	0
  9892  0A53  00F1               	movwf	?___fttol+1
  9893  0A54  3000               	movlw	0
  9894  0A55  00F0               	movwf	?___fttol
  9895  0A56  0008               	return
  9896  0A57                     l2827:	
  9897  0A57  3001               	movlw	1
  9898  0A58                     u3085:	
  9899  0A58  36FC               	lsrf	___fttol@lval+3,f
  9900  0A59  0CFB               	rrf	___fttol@lval+2,f
  9901  0A5A  0CFA               	rrf	___fttol@lval+1,f
  9902  0A5B  0CF9               	rrf	___fttol@lval,f
  9903  0A5C  0B89               	decfsz	9,f
  9904  0A5D  2A58               	goto	u3085
  9905  0A5E  3001               	movlw	1
  9906  0A5F  00F4               	movwf	??___fttol
  9907  0A60  0874               	movf	??___fttol,w
  9908  0A61  07FD               	addwf	___fttol@exp1,f
  9909  0A62  1903               	btfsc	3,2
  9910  0A63  2A7E               	goto	l2837
  9911  0A64  2A57               	goto	l2827
  9912  0A65                     l2829:	
  9913  0A65  3018               	movlw	24
  9914  0A66  027D               	subwf	___fttol@exp1,w
  9915  0A67  1C03               	skipc
  9916  0A68  2A7B               	goto	l653
  9917  0A69  3000               	movlw	0
  9918  0A6A  00F3               	movwf	?___fttol+3
  9919  0A6B  3000               	movlw	0
  9920  0A6C  00F2               	movwf	?___fttol+2
  9921  0A6D  3000               	movlw	0
  9922  0A6E  00F1               	movwf	?___fttol+1
  9923  0A6F  3000               	movlw	0
  9924  0A70  00F0               	movwf	?___fttol
  9925  0A71  0008               	return
  9926  0A72                     l2835:	
  9927  0A72  3001               	movlw	1
  9928  0A73                     u3115:	
  9929  0A73  35F9               	lslf	___fttol@lval,f
  9930  0A74  0DFA               	rlf	___fttol@lval+1,f
  9931  0A75  0DFB               	rlf	___fttol@lval+2,f
  9932  0A76  0DFC               	rlf	___fttol@lval+3,f
  9933  0A77  0B89               	decfsz	9,f
  9934  0A78  2A73               	goto	u3115
  9935  0A79  3001               	movlw	1
  9936  0A7A  02FD               	subwf	___fttol@exp1,f
  9937  0A7B                     l653:	
  9938  0A7B  087D               	movf	___fttol@exp1,w
  9939  0A7C  1D03               	btfss	3,2
  9940  0A7D  2A72               	goto	l2835
  9941  0A7E                     l2837:	
  9942  0A7E  0878               	movf	___fttol@sign1,w
  9943  0A7F  1903               	btfsc	3,2
  9944  0A80  2A8C               	goto	l2841
  9945  0A81  09F9               	comf	___fttol@lval,f
  9946  0A82  09FA               	comf	___fttol@lval+1,f
  9947  0A83  09FB               	comf	___fttol@lval+2,f
  9948  0A84  09FC               	comf	___fttol@lval+3,f
  9949  0A85  0AF9               	incf	___fttol@lval,f
  9950  0A86  1903               	skipnz
  9951  0A87  0AFA               	incf	___fttol@lval+1,f
  9952  0A88  1903               	skipnz
  9953  0A89  0AFB               	incf	___fttol@lval+2,f
  9954  0A8A  1903               	skipnz
  9955  0A8B  0AFC               	incf	___fttol@lval+3,f
  9956  0A8C                     l2841:	
  9957  0A8C  087C               	movf	___fttol@lval+3,w
  9958  0A8D  00F3               	movwf	?___fttol+3
  9959  0A8E  087B               	movf	___fttol@lval+2,w
  9960  0A8F  00F2               	movwf	?___fttol+2
  9961  0A90  087A               	movf	___fttol@lval+1,w
  9962  0A91  00F1               	movwf	?___fttol+1
  9963  0A92  0879               	movf	___fttol@lval,w
  9964  0A93  00F0               	movwf	?___fttol
  9965  0A94  0008               	return
  9966  0A95                     __end_of___fttol:	
  9967                           
  9968                           	psect	text18
  9969  17BE                     __ptext18:	
  9970 ;; *************** function _SYSTEM_Initialize *****************
  9971 ;; Defined at:
  9972 ;;		line 71 in file "system.c"
  9973 ;; Parameters:    Size  Location     Type
  9974 ;;		None
  9975 ;; Auto vars:     Size  Location     Type
  9976 ;;		None
  9977 ;; Return value:  Size  Location     Type
  9978 ;;                  1    wreg      void 
  9979 ;; Registers used:
  9980 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9981 ;; Tracked objects:
  9982 ;;		On entry : 0/0
  9983 ;;		On exit  : 0/0
  9984 ;;		Unchanged: 0/0
  9985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9988 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9989 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9990 ;;Total ram usage:        3 bytes
  9991 ;; Hardware stack levels used:    1
  9992 ;; Hardware stack levels required when called:    3
  9993 ;; This function calls:
  9994 ;;		_ADCC_Initialize
  9995 ;;		_InitCustomChars
  9996 ;;		_LCD_Clear
  9997 ;;		_LCD_Init
  9998 ;;		_OSCILLATOR_Initialize
  9999 ;;		_PIN_MANAGER_Initialize
 10000 ;;		_PWM6_Initialize
 10001 ;;		_TMR2_Initialize
 10002 ;; This function is called by:
 10003 ;;		_main
 10004 ;; This function uses a non-reentrant model
 10005 ;;
 10006                           
 10007                           
 10008                           ;psect for function _SYSTEM_Initialize
 10009  17BE                     _SYSTEM_Initialize:	
 10010                           
 10011                           ;system.c: 73: PIN_MANAGER_Initialize();
 10012                           
 10013                           ;incstack = 0
 10014                           ; Regs used in _SYSTEM_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10015  17BE  3180  2007  3197   	fcall	_PIN_MANAGER_Initialize
 10016                           
 10017                           ;system.c: 74: OSCILLATOR_Initialize();
 10018  17C1  3195  257C  3197   	fcall	_OSCILLATOR_Initialize
 10019                           
 10020                           ;system.c: 75: FVRCON = 0x00;
 10021  17C4  0032               	movlb	18	; select bank18
 10022  17C5  018C               	clrf	12	;volatile
 10023                           
 10024                           ;system.c: 76: ADCC_Initialize();
 10025  17C6  3196  263C  3197   	fcall	_ADCC_Initialize
 10026                           
 10027                           ;system.c: 77: PWM6_Initialize();
 10028  17C9  3195  2585  3197   	fcall	_PWM6_Initialize
 10029                           
 10030                           ;system.c: 79: TMR2_Initialize();
 10031  17CC  3195  25B4  3197   	fcall	_TMR2_Initialize
 10032                           
 10033                           ;system.c: 80: LCD_Init(0X00);
 10034  17CF  3000               	movlw	0
 10035  17D0  318A  2295  3197   	fcall	_LCD_Init
 10036                           
 10037                           ;system.c: 81: _delay((unsigned long)((200)*(32000000/4000.0)));
 10038  17D3  3009               	movlw	9
 10039  17D4  00FA               	movwf	??_SYSTEM_Initialize+2
 10040  17D5  301E               	movlw	30
 10041  17D6  00F9               	movwf	??_SYSTEM_Initialize+1
 10042  17D7  30EB               	movlw	235
 10043  17D8  00F8               	movwf	??_SYSTEM_Initialize
 10044  17D9                     u3817:	
 10045  17D9  0BF8               	decfsz	??_SYSTEM_Initialize,f
 10046  17DA  2FD9               	goto	u3817
 10047  17DB  0BF9               	decfsz	??_SYSTEM_Initialize+1,f
 10048  17DC  2FD9               	goto	u3817
 10049  17DD  0BFA               	decfsz	??_SYSTEM_Initialize+2,f
 10050  17DE  2FD9               	goto	u3817
 10051  17DF  0000               	nop
 10052                           
 10053                           ;system.c: 82: LCD_Clear();
 10054  17E0  3195  2574  3197   	fcall	_LCD_Clear
 10055                           
 10056                           ;system.c: 83: _delay((unsigned long)((100)*(32000000/4000.0)));
 10057  17E3  3005               	movlw	5
 10058  17E4  00FA               	movwf	??_SYSTEM_Initialize+2
 10059  17E5  300F               	movlw	15
 10060  17E6  00F9               	movwf	??_SYSTEM_Initialize+1
 10061  17E7  30F4               	movlw	244
 10062  17E8  00F8               	movwf	??_SYSTEM_Initialize
 10063  17E9                     u3827:	
 10064  17E9  0BF8               	decfsz	??_SYSTEM_Initialize,f
 10065  17EA  2FE9               	goto	u3827
 10066  17EB  0BF9               	decfsz	??_SYSTEM_Initialize+1,f
 10067  17EC  2FE9               	goto	u3827
 10068  17ED  0BFA               	decfsz	??_SYSTEM_Initialize+2,f
 10069  17EE  2FE9               	goto	u3827
 10070                           
 10071                           ;system.c: 84: InitCustomChars();
 10072  17EF  3196  26AF  3197   	fcall	_InitCustomChars
 10073                           
 10074                           ;system.c: 85: _delay((unsigned long)((200)*(32000000/4000.0)));
 10075  17F2  3009               	movlw	9
 10076  17F3  00FA               	movwf	??_SYSTEM_Initialize+2
 10077  17F4  301E               	movlw	30
 10078  17F5  00F9               	movwf	??_SYSTEM_Initialize+1
 10079  17F6  30EB               	movlw	235
 10080  17F7  00F8               	movwf	??_SYSTEM_Initialize
 10081  17F8                     u3837:	
 10082  17F8  0BF8               	decfsz	??_SYSTEM_Initialize,f
 10083  17F9  2FF8               	goto	u3837
 10084  17FA  0BF9               	decfsz	??_SYSTEM_Initialize+1,f
 10085  17FB  2FF8               	goto	u3837
 10086  17FC  0BFA               	decfsz	??_SYSTEM_Initialize+2,f
 10087  17FD  2FF8               	goto	u3837
 10088  17FE  0000               	nop
 10089  17FF  0008               	return
 10090  1800                     __end_of_SYSTEM_Initialize:	
 10091                           
 10092                           	psect	text19
 10093  15B4                     __ptext19:	
 10094 ;; *************** function _TMR2_Initialize *****************
 10095 ;; Defined at:
 10096 ;;		line 3 in file "tmr2.c"
 10097 ;; Parameters:    Size  Location     Type
 10098 ;;		None
 10099 ;; Auto vars:     Size  Location     Type
 10100 ;;		None
 10101 ;; Return value:  Size  Location     Type
 10102 ;;                  1    wreg      void 
 10103 ;; Registers used:
 10104 ;;		wreg, status,2
 10105 ;; Tracked objects:
 10106 ;;		On entry : 0/0
 10107 ;;		On exit  : 0/0
 10108 ;;		Unchanged: 0/0
 10109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10113 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10114 ;;Total ram usage:        0 bytes
 10115 ;; Hardware stack levels used:    1
 10116 ;; This function calls:
 10117 ;;		Nothing
 10118 ;; This function is called by:
 10119 ;;		_SYSTEM_Initialize
 10120 ;; This function uses a non-reentrant model
 10121 ;;
 10122                           
 10123                           
 10124                           ;psect for function _TMR2_Initialize
 10125  15B4                     _TMR2_Initialize:	
 10126                           
 10127                           ;tmr2.c: 5: T2CON = 0x00;
 10128                           
 10129                           ;incstack = 0
 10130                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 10131  15B4  0025               	movlb	5	; select bank5
 10132  15B5  018E               	clrf	14	;volatile
 10133                           
 10134                           ;tmr2.c: 7: T2CLKCON = 0x01;
 10135  15B6  3001               	movlw	1
 10136  15B7  0090               	movwf	16	;volatile
 10137                           
 10138                           ;tmr2.c: 9: T2HLT = 0x00;
 10139  15B8  018F               	clrf	15	;volatile
 10140                           
 10141                           ;tmr2.c: 11: T2RST = 0x00;
 10142  15B9  0191               	clrf	17	;volatile
 10143                           
 10144                           ;tmr2.c: 13: T2PR = 0xFF;
 10145  15BA  30FF               	movlw	255
 10146  15BB  008D               	movwf	13	;volatile
 10147                           
 10148                           ;tmr2.c: 15: T2TMR = 0x00;
 10149  15BC  018C               	clrf	12	;volatile
 10150                           
 10151                           ;tmr2.c: 17: PIR4bits.TMR2IF = 0;
 10152  15BD  002E               	movlb	14	; select bank14
 10153  15BE  1090               	bcf	16,1	;volatile
 10154                           
 10155                           ;tmr2.c: 19: T2CONbits.TMR2ON = 1;
 10156  15BF  0025               	movlb	5	; select bank5
 10157  15C0  178E               	bsf	14,7	;volatile
 10158  15C1  0008               	return
 10159  15C2                     __end_of_TMR2_Initialize:	
 10160                           
 10161                           	psect	text20
 10162  1585                     __ptext20:	
 10163 ;; *************** function _PWM6_Initialize *****************
 10164 ;; Defined at:
 10165 ;;		line 3 in file "pwm6.c"
 10166 ;; Parameters:    Size  Location     Type
 10167 ;;		None
 10168 ;; Auto vars:     Size  Location     Type
 10169 ;;		None
 10170 ;; Return value:  Size  Location     Type
 10171 ;;                  1    wreg      void 
 10172 ;; Registers used:
 10173 ;;		wreg, status,2, status,0
 10174 ;; Tracked objects:
 10175 ;;		On entry : 0/0
 10176 ;;		On exit  : 0/0
 10177 ;;		Unchanged: 0/0
 10178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10182 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10183 ;;Total ram usage:        0 bytes
 10184 ;; Hardware stack levels used:    1
 10185 ;; This function calls:
 10186 ;;		Nothing
 10187 ;; This function is called by:
 10188 ;;		_SYSTEM_Initialize
 10189 ;; This function uses a non-reentrant model
 10190 ;;
 10191                           
 10192                           
 10193                           ;psect for function _PWM6_Initialize
 10194  1585                     _PWM6_Initialize:	
 10195                           
 10196                           ;pwm6.c: 5: PWM6CON = 0x80;
 10197                           
 10198                           ;incstack = 0
 10199                           ; Regs used in _PWM6_Initialize: [wreg+status,2+status,0]
 10200  1585  3080               	movlw	128
 10201  1586  0027               	movlb	7	; select bank7
 10202  1587  008E               	movwf	14	;volatile
 10203                           
 10204                           ;pwm6.c: 7: PWM6DCH = 0x00;
 10205  1588  018D               	clrf	13	;volatile
 10206                           
 10207                           ;pwm6.c: 9: PWM6DCL = 0x00;
 10208  1589  018C               	clrf	12	;volatile
 10209                           
 10210                           ;pwm6.c: 11: CCPTMRS1bits.P6TSEL = 0x1;
 10211  158A  0024               	movlb	4	; select bank4
 10212  158B  081F               	movf	31,w	;volatile
 10213  158C  39F3               	andlw	-13
 10214  158D  3804               	iorlw	4
 10215  158E  009F               	movwf	31	;volatile
 10216  158F  0008               	return
 10217  1590                     __end_of_PWM6_Initialize:	
 10218                           
 10219                           	psect	text21
 10220  0007                     __ptext21:	
 10221 ;; *************** function _PIN_MANAGER_Initialize *****************
 10222 ;; Defined at:
 10223 ;;		line 5 in file "pin_manager.c"
 10224 ;; Parameters:    Size  Location     Type
 10225 ;;		None
 10226 ;; Auto vars:     Size  Location     Type
 10227 ;;  state           1    0[COMMON] unsigned char 
 10228 ;; Return value:  Size  Location     Type
 10229 ;;                  1    wreg      void 
 10230 ;; Registers used:
 10231 ;;		wreg, status,2
 10232 ;; Tracked objects:
 10233 ;;		On entry : 0/0
 10234 ;;		On exit  : 0/0
 10235 ;;		Unchanged: 0/0
 10236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10238 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10240 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10241 ;;Total ram usage:        1 bytes
 10242 ;; Hardware stack levels used:    1
 10243 ;; This function calls:
 10244 ;;		Nothing
 10245 ;; This function is called by:
 10246 ;;		_SYSTEM_Initialize
 10247 ;; This function uses a non-reentrant model
 10248 ;;
 10249                           
 10250                           
 10251                           ;psect for function _PIN_MANAGER_Initialize
 10252  0007                     _PIN_MANAGER_Initialize:	
 10253                           
 10254                           ;pin_manager.c: 7: LATA = 0x00;
 10255                           
 10256                           ;incstack = 0
 10257                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 10258  0007  0020               	movlb	0	; select bank0
 10259  0008  0196               	clrf	22	;volatile
 10260                           
 10261                           ;pin_manager.c: 8: LATB = 0x00;
 10262  0009  0197               	clrf	23	;volatile
 10263                           
 10264                           ;pin_manager.c: 9: LATC = 0x00;
 10265  000A  0198               	clrf	24	;volatile
 10266                           
 10267                           ;pin_manager.c: 11: WPUA = 0x02;
 10268  000B  3002               	movlw	2
 10269  000C  003E               	movlb	30	; select bank30
 10270  000D  00B9               	movwf	57	;volatile
 10271                           
 10272                           ;pin_manager.c: 12: WPUB = 0x00;
 10273  000E  01C4               	clrf	68	;volatile
 10274                           
 10275                           ;pin_manager.c: 13: WPUC = 0x00;
 10276  000F  01CF               	clrf	79	;volatile
 10277                           
 10278                           ;pin_manager.c: 14: WPUE = 0x8;
 10279  0010  3008               	movlw	8
 10280  0011  00E5               	movwf	101	;volatile
 10281                           
 10282                           ;pin_manager.c: 16: TRISA = 0x02;
 10283  0012  3002               	movlw	2
 10284  0013  0020               	movlb	0	; select bank0
 10285  0014  0091               	movwf	17	;volatile
 10286                           
 10287                           ;pin_manager.c: 17: TRISA = 0x3A;
 10288  0015  303A               	movlw	58
 10289  0016  0091               	movwf	17	;volatile
 10290                           
 10291                           ;pin_manager.c: 18: TRISB = 0x0A;
 10292  0017  300A               	movlw	10
 10293  0018  0092               	movwf	18	;volatile
 10294                           
 10295                           ;pin_manager.c: 19: TRISC = 0x10;
 10296  0019  3010               	movlw	16
 10297  001A  0093               	movwf	19	;volatile
 10298                           
 10299                           ;pin_manager.c: 21: ANSELA = 0x3A;
 10300  001B  303A               	movlw	58
 10301  001C  003E               	movlb	30	; select bank30
 10302  001D  00B8               	movwf	56	;volatile
 10303                           
 10304                           ;pin_manager.c: 22: ANSELB = 0x0A;
 10305  001E  300A               	movlw	10
 10306  001F  00C3               	movwf	67	;volatile
 10307                           
 10308                           ;pin_manager.c: 23: ANSELC = 0x00;
 10309  0020  01CE               	clrf	78	;volatile
 10310                           
 10311                           ;pin_manager.c: 25: PIE0bits.IOCIE = 0;
 10312  0021  002E               	movlb	14	; select bank14
 10313  0022  1216               	bcf	22,4	;volatile
 10314                           
 10315                           ;pin_manager.c: 26: bool state = GIE;
 10316  0023  3000               	movlw	0
 10317  0024  1B8B               	btfsc	11,7	;volatile
 10318  0025  3001               	movlw	1
 10319  0026  00F0               	movwf	PIN_MANAGER_Initialize@state
 10320                           
 10321                           ;pin_manager.c: 27: GIE = 0;
 10322  0027  138B               	bcf	11,7	;volatile
 10323                           
 10324                           ;pin_manager.c: 28: PPSLOCK = 0x55;
 10325  0028  3055               	movlw	85
 10326  0029  003D               	movlb	29	; select bank29
 10327  002A  008F               	movwf	15	;volatile
 10328                           
 10329                           ;pin_manager.c: 29: PPSLOCK = 0xAA;
 10330  002B  30AA               	movlw	170
 10331  002C  008F               	movwf	15	;volatile
 10332                           
 10333                           ;pin_manager.c: 30: PPSLOCKbits.PPSLOCKED = 0x00;
 10334  002D  100F               	bcf	15,0	;volatile
 10335                           
 10336                           ;pin_manager.c: 33: RC2PPS = 0x000E;
 10337  002E  300E               	movlw	14
 10338  002F  003E               	movlb	30	; select bank30
 10339  0030  00A2               	movwf	34	;volatile
 10340                           
 10341                           ;pin_manager.c: 37: PPSLOCK = 0x55;
 10342  0031  3055               	movlw	85
 10343  0032  003D               	movlb	29	; select bank29
 10344  0033  008F               	movwf	15	;volatile
 10345                           
 10346                           ;pin_manager.c: 38: PPSLOCK = 0xAA;
 10347  0034  30AA               	movlw	170
 10348  0035  008F               	movwf	15	;volatile
 10349                           
 10350                           ;pin_manager.c: 39: PPSLOCKbits.PPSLOCKED = 0x01;
 10351  0036  140F               	bsf	15,0	;volatile
 10352                           
 10353                           ;pin_manager.c: 40: GIE = state;
 10354  0037  1C70               	btfss	PIN_MANAGER_Initialize@state,0
 10355  0038  283B               	goto	u2400
 10356  0039  178B               	bsf	11,7	;volatile
 10357  003A  0008               	return
 10358  003B                     u2400:	
 10359  003B  138B               	bcf	11,7	;volatile
 10360  003C  0008               	return
 10361  003D                     __end_of_PIN_MANAGER_Initialize:	
 10362                           
 10363                           	psect	text22
 10364  157C                     __ptext22:	
 10365 ;; *************** function _OSCILLATOR_Initialize *****************
 10366 ;; Defined at:
 10367 ;;		line 89 in file "system.c"
 10368 ;; Parameters:    Size  Location     Type
 10369 ;;		None
 10370 ;; Auto vars:     Size  Location     Type
 10371 ;;		None
 10372 ;; Return value:  Size  Location     Type
 10373 ;;                  1    wreg      void 
 10374 ;; Registers used:
 10375 ;;		wreg, status,2
 10376 ;; Tracked objects:
 10377 ;;		On entry : 0/0
 10378 ;;		On exit  : 0/0
 10379 ;;		Unchanged: 0/0
 10380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10384 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10385 ;;Total ram usage:        0 bytes
 10386 ;; Hardware stack levels used:    1
 10387 ;; This function calls:
 10388 ;;		Nothing
 10389 ;; This function is called by:
 10390 ;;		_SYSTEM_Initialize
 10391 ;; This function uses a non-reentrant model
 10392 ;;
 10393                           
 10394                           
 10395                           ;psect for function _OSCILLATOR_Initialize
 10396  157C                     _OSCILLATOR_Initialize:	
 10397                           
 10398                           ;system.c: 91: OSCCON1 = 0x60;
 10399                           
 10400                           ;incstack = 0
 10401                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 10402  157C  3060               	movlw	96
 10403  157D  0031               	movlb	17	; select bank17
 10404  157E  008D               	movwf	13	;volatile
 10405                           
 10406                           ;system.c: 92: OSCCON3 = 0x00;
 10407  157F  018F               	clrf	15	;volatile
 10408                           
 10409                           ;system.c: 93: OSCEN = 0x00;
 10410  1580  0191               	clrf	17	;volatile
 10411                           
 10412                           ;system.c: 94: OSCFRQ = 0x06;
 10413  1581  3006               	movlw	6
 10414  1582  0093               	movwf	19	;volatile
 10415                           
 10416                           ;system.c: 95: OSCTUNE = 0x00;
 10417  1583  0192               	clrf	18	;volatile
 10418  1584  0008               	return
 10419  1585                     __end_of_OSCILLATOR_Initialize:	
 10420                           
 10421                           	psect	text23
 10422  0A95                     __ptext23:	
 10423 ;; *************** function _LCD_Init *****************
 10424 ;; Defined at:
 10425 ;;		line 154 in file "lcd.c"
 10426 ;; Parameters:    Size  Location     Type
 10427 ;;  style           1    wreg     unsigned char 
 10428 ;; Auto vars:     Size  Location     Type
 10429 ;;  style           1    7[COMMON] unsigned char 
 10430 ;; Return value:  Size  Location     Type
 10431 ;;                  1    wreg      void 
 10432 ;; Registers used:
 10433 ;;		wreg, status,2, status,0, pclath, cstack
 10434 ;; Tracked objects:
 10435 ;;		On entry : 0/0
 10436 ;;		On exit  : 0/0
 10437 ;;		Unchanged: 0/0
 10438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10440 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10441 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10442 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10443 ;;Total ram usage:        4 bytes
 10444 ;; Hardware stack levels used:    1
 10445 ;; Hardware stack levels required when called:    2
 10446 ;; This function calls:
 10447 ;;		_LCD_Cmd
 10448 ;;		_LCD_Port
 10449 ;; This function is called by:
 10450 ;;		_SYSTEM_Initialize
 10451 ;; This function uses a non-reentrant model
 10452 ;;
 10453                           
 10454                           
 10455                           ;psect for function _LCD_Init
 10456  0A95                     _LCD_Init:	
 10457                           
 10458                           ;incstack = 0
 10459                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
 10460                           ;LCD_Init@style stored from wreg
 10461  0A95  00F7               	movwf	LCD_Init@style
 10462                           
 10463                           ;lcd.c: 156: LCD_Port(0x00);
 10464  0A96  3000               	movlw	0
 10465  0A97  3196  260A  318A   	fcall	_LCD_Port
 10466                           
 10467                           ;lcd.c: 158: _delay((unsigned long)((100)*(32000000/4000.0)));
 10468  0A9A  3005               	movlw	5
 10469  0A9B  00F6               	movwf	??_LCD_Init+2
 10470  0A9C  300F               	movlw	15
 10471  0A9D  00F5               	movwf	??_LCD_Init+1
 10472  0A9E  30F4               	movlw	244
 10473  0A9F  00F4               	movwf	??_LCD_Init
 10474  0AA0                     u3847:	
 10475  0AA0  0BF4               	decfsz	??_LCD_Init,f
 10476  0AA1  2AA0               	goto	u3847
 10477  0AA2  0BF5               	decfsz	??_LCD_Init+1,f
 10478  0AA3  2AA0               	goto	u3847
 10479  0AA4  0BF6               	decfsz	??_LCD_Init+2,f
 10480  0AA5  2AA0               	goto	u3847
 10481                           
 10482                           ;lcd.c: 160: LCD_Cmd(0x03);
 10483  0AA6  3003               	movlw	3
 10484  0AA7  3195  25E0  318A   	fcall	_LCD_Cmd
 10485                           
 10486                           ;lcd.c: 162: _delay((unsigned long)((10)*(32000000/4000.0)));
 10487  0AAA  3068               	movlw	104
 10488  0AAB  00F5               	movwf	??_LCD_Init+1
 10489  0AAC  30E4               	movlw	228
 10490  0AAD  00F4               	movwf	??_LCD_Init
 10491  0AAE                     u3857:	
 10492  0AAE  0BF4               	decfsz	??_LCD_Init,f
 10493  0AAF  2AAE               	goto	u3857
 10494  0AB0  0BF5               	decfsz	??_LCD_Init+1,f
 10495  0AB1  2AAE               	goto	u3857
 10496  0AB2  0000               	nop
 10497                           
 10498                           ;lcd.c: 164: LCD_Cmd(0x03);
 10499  0AB3  3003               	movlw	3
 10500  0AB4  3195  25E0  318A   	fcall	_LCD_Cmd
 10501                           
 10502                           ;lcd.c: 166: _delay((unsigned long)((120)*(32000000/4000000.0)));
 10503  0AB7  3089               	movlw	137
 10504  0AB8  00F4               	movwf	??_LCD_Init
 10505  0AB9                     u3867:	
 10506  0AB9  3200               	nop2
 10507  0ABA  3200               	nop2
 10508  0ABB  0BF4               	decfsz	??_LCD_Init,f
 10509  0ABC  2AB9               	goto	u3867
 10510                           
 10511                           ;lcd.c: 168: LCD_Cmd(0x03);
 10512  0ABD  3003               	movlw	3
 10513  0ABE  3195  25E0  318A   	fcall	_LCD_Cmd
 10514                           
 10515                           ;lcd.c: 170: _delay((unsigned long)((120)*(32000000/4000000.0)));
 10516  0AC1  3089               	movlw	137
 10517  0AC2  00F4               	movwf	??_LCD_Init
 10518  0AC3                     u3877:	
 10519  0AC3  3200               	nop2
 10520  0AC4  3200               	nop2
 10521  0AC5  0BF4               	decfsz	??_LCD_Init,f
 10522  0AC6  2AC3               	goto	u3877
 10523                           
 10524                           ;lcd.c: 172: LCD_Cmd(0x02);
 10525  0AC7  3002               	movlw	2
 10526  0AC8  3195  25E0  318A   	fcall	_LCD_Cmd
 10527                           
 10528                           ;lcd.c: 174: _delay((unsigned long)((120)*(32000000/4000000.0)));
 10529  0ACB  3089               	movlw	137
 10530  0ACC  00F4               	movwf	??_LCD_Init
 10531  0ACD                     u3887:	
 10532  0ACD  3200               	nop2
 10533  0ACE  3200               	nop2
 10534  0ACF  0BF4               	decfsz	??_LCD_Init,f
 10535  0AD0  2ACD               	goto	u3887
 10536                           
 10537                           ;lcd.c: 176: LCD_Cmd(0x2);
 10538  0AD1  3002               	movlw	2
 10539  0AD2  3195  25E0  318A   	fcall	_LCD_Cmd
 10540                           
 10541                           ;lcd.c: 178: LCD_Cmd(0x8);
 10542  0AD5  3008               	movlw	8
 10543  0AD6  3195  25E0  318A   	fcall	_LCD_Cmd
 10544                           
 10545                           ;lcd.c: 180: _delay((unsigned long)((120)*(32000000/4000000.0)));
 10546  0AD9  3089               	movlw	137
 10547  0ADA  00F4               	movwf	??_LCD_Init
 10548  0ADB                     u3897:	
 10549  0ADB  3200               	nop2
 10550  0ADC  3200               	nop2
 10551  0ADD  0BF4               	decfsz	??_LCD_Init,f
 10552  0ADE  2ADB               	goto	u3897
 10553                           
 10554                           ;lcd.c: 182: LCD_Cmd(0x0);
 10555  0ADF  3000               	movlw	0
 10556  0AE0  3195  25E0  318A   	fcall	_LCD_Cmd
 10557                           
 10558                           ;lcd.c: 184: LCD_Cmd(0x8);
 10559  0AE3  3008               	movlw	8
 10560  0AE4  3195  25E0  318A   	fcall	_LCD_Cmd
 10561                           
 10562                           ;lcd.c: 186: _delay((unsigned long)((120)*(32000000/4000000.0)));
 10563  0AE7  3089               	movlw	137
 10564  0AE8  00F4               	movwf	??_LCD_Init
 10565  0AE9                     u3907:	
 10566  0AE9  3200               	nop2
 10567  0AEA  3200               	nop2
 10568  0AEB  0BF4               	decfsz	??_LCD_Init,f
 10569  0AEC  2AE9               	goto	u3907
 10570                           
 10571                           ;lcd.c: 188: LCD_Cmd(0x0);
 10572  0AED  3000               	movlw	0
 10573  0AEE  3195  25E0  318A   	fcall	_LCD_Cmd
 10574                           
 10575                           ;lcd.c: 190: LCD_Cmd(0x1);
 10576  0AF1  3001               	movlw	1
 10577  0AF2  3195  25E0  318A   	fcall	_LCD_Cmd
 10578                           
 10579                           ;lcd.c: 192: _delay((unsigned long)((5)*(32000000/4000.0)));
 10580  0AF5  3034               	movlw	52
 10581  0AF6  00F5               	movwf	??_LCD_Init+1
 10582  0AF7  30F1               	movlw	241
 10583  0AF8  00F4               	movwf	??_LCD_Init
 10584  0AF9                     u3917:	
 10585  0AF9  0BF4               	decfsz	??_LCD_Init,f
 10586  0AFA  2AF9               	goto	u3917
 10587  0AFB  0BF5               	decfsz	??_LCD_Init+1,f
 10588  0AFC  2AF9               	goto	u3917
 10589  0AFD  3200               	nop2
 10590                           
 10591                           ;lcd.c: 194: LCD_Cmd(0x0);
 10592  0AFE  3000               	movlw	0
 10593  0AFF  3195  25E0  318A   	fcall	_LCD_Cmd
 10594                           
 10595                           ;lcd.c: 196: LCD_Cmd(0x6);
 10596  0B02  3006               	movlw	6
 10597  0B03  3195  25E0  318A   	fcall	_LCD_Cmd
 10598                           
 10599                           ;lcd.c: 198: _delay((unsigned long)((120)*(32000000/4000000.0)));
 10600  0B06  3089               	movlw	137
 10601  0B07  00F4               	movwf	??_LCD_Init
 10602  0B08                     u3927:	
 10603  0B08  3200               	nop2
 10604  0B09  3200               	nop2
 10605  0B0A  0BF4               	decfsz	??_LCD_Init,f
 10606  0B0B  2B08               	goto	u3927
 10607                           
 10608                           ;lcd.c: 200: LCD_Cmd(0x0);
 10609  0B0C  3000               	movlw	0
 10610  0B0D  3195  25E0  318A   	fcall	_LCD_Cmd
 10611                           
 10612                           ;lcd.c: 202: LCD_Cmd(0xc|style);
 10613  0B10  0877               	movf	LCD_Init@style,w
 10614  0B11  380C               	iorlw	12
 10615  0B12  3195  25E0  318A   	fcall	_LCD_Cmd
 10616                           
 10617                           ;lcd.c: 204: _delay((unsigned long)((120)*(32000000/4000000.0)));
 10618  0B15  3089               	movlw	137
 10619  0B16  00F4               	movwf	??_LCD_Init
 10620  0B17                     u3937:	
 10621  0B17  3200               	nop2
 10622  0B18  3200               	nop2
 10623  0B19  0BF4               	decfsz	??_LCD_Init,f
 10624  0B1A  2B17               	goto	u3937
 10625  0B1B  0008               	return
 10626  0B1C                     __end_of_LCD_Init:	
 10627                           
 10628                           	psect	text24
 10629  1574                     __ptext24:	
 10630 ;; *************** function _LCD_Clear *****************
 10631 ;; Defined at:
 10632 ;;		line 75 in file "lcd.c"
 10633 ;; Parameters:    Size  Location     Type
 10634 ;;		None
 10635 ;; Auto vars:     Size  Location     Type
 10636 ;;		None
 10637 ;; Return value:  Size  Location     Type
 10638 ;;                  1    wreg      void 
 10639 ;; Registers used:
 10640 ;;		wreg, status,2, status,0, pclath, cstack
 10641 ;; Tracked objects:
 10642 ;;		On entry : 0/0
 10643 ;;		On exit  : 0/0
 10644 ;;		Unchanged: 0/0
 10645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10649 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10650 ;;Total ram usage:        0 bytes
 10651 ;; Hardware stack levels used:    1
 10652 ;; Hardware stack levels required when called:    2
 10653 ;; This function calls:
 10654 ;;		_LCD_Cmd
 10655 ;; This function is called by:
 10656 ;;		_SYSTEM_Initialize
 10657 ;;		_main
 10658 ;; This function uses a non-reentrant model
 10659 ;;
 10660                           
 10661                           
 10662                           ;psect for function _LCD_Clear
 10663  1574                     _LCD_Clear:	
 10664                           
 10665                           ;lcd.c: 77: LCD_Cmd(0);
 10666                           
 10667                           ;incstack = 0
 10668                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
 10669  1574  3000               	movlw	0
 10670  1575  3195  25E0  3195   	fcall	_LCD_Cmd
 10671                           
 10672                           ;lcd.c: 78: LCD_Cmd(1);
 10673  1578  3001               	movlw	1
 10674  1579  3195  25E0         	fcall	_LCD_Cmd
 10675  157B  0008               	return
 10676  157C                     __end_of_LCD_Clear:	
 10677                           
 10678                           	psect	text25
 10679  16AF                     __ptext25:	
 10680 ;; *************** function _InitCustomChars *****************
 10681 ;; Defined at:
 10682 ;;		line 29 in file "lcd.c"
 10683 ;; Parameters:    Size  Location     Type
 10684 ;;		None
 10685 ;; Auto vars:     Size  Location     Type
 10686 ;;  i               1    6[COMMON] unsigned char 
 10687 ;; Return value:  Size  Location     Type
 10688 ;;                  1    wreg      void 
 10689 ;; Registers used:
 10690 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10691 ;; Tracked objects:
 10692 ;;		On entry : 0/0
 10693 ;;		On exit  : 0/0
 10694 ;;		Unchanged: 0/0
 10695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10697 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10698 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10699 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10700 ;;Total ram usage:        2 bytes
 10701 ;; Hardware stack levels used:    1
 10702 ;; Hardware stack levels required when called:    2
 10703 ;; This function calls:
 10704 ;;		_LCD_Cmd
 10705 ;;		_LCD_Write_Char
 10706 ;; This function is called by:
 10707 ;;		_SYSTEM_Initialize
 10708 ;; This function uses a non-reentrant model
 10709 ;;
 10710                           
 10711                           
 10712                           ;psect for function _InitCustomChars
 10713  16AF                     _InitCustomChars:	
 10714                           
 10715                           ;lcd.c: 31: uint8_t i;
 10716                           ;lcd.c: 32: LCD_Cmd(0x04);
 10717                           
 10718                           ;incstack = 0
 10719                           ; Regs used in _InitCustomChars: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10720  16AF  3004               	movlw	4
 10721  16B0  3195  25E0  3196   	fcall	_LCD_Cmd
 10722                           
 10723                           ;lcd.c: 33: LCD_Cmd(0x00);
 10724  16B3  3000               	movlw	0
 10725  16B4  3195  25E0  3196   	fcall	_LCD_Cmd
 10726                           
 10727                           ;lcd.c: 34: for (i = 0; i < sizeof(__cgram) ; i++)
 10728  16B7  01F6               	clrf	InitCustomChars@i
 10729  16B8  3010               	movlw	16
 10730  16B9  0276               	subwf	InitCustomChars@i,w
 10731  16BA  1803               	btfsc	3,0
 10732  16BB  2ECD               	goto	l2367
 10733  16BC                     l2361:	
 10734                           
 10735                           ;lcd.c: 35: LCD_Write_Char(__cgram[i]);
 10736  16BC  0876               	movf	InitCustomChars@i,w
 10737  16BD  3E20               	addlw	(low (___cgram| (0+256)))& (0+255)
 10738  16BE  0086               	movwf	6
 10739  16BF  3001               	movlw	1	; select bank2/3
 10740  16C0  0087               	movwf	7
 10741  16C1  0801               	movf	1,w
 10742  16C2  3188  2007  3196   	fcall	_LCD_Write_Char
 10743  16C5  3001               	movlw	1
 10744  16C6  00F5               	movwf	??_InitCustomChars
 10745  16C7  0875               	movf	??_InitCustomChars,w
 10746  16C8  07F6               	addwf	InitCustomChars@i,f
 10747  16C9  3010               	movlw	16
 10748  16CA  0276               	subwf	InitCustomChars@i,w
 10749  16CB  1C03               	skipc
 10750  16CC  2EBC               	goto	l2361
 10751  16CD                     l2367:	
 10752                           
 10753                           ;lcd.c: 36: LCD_Cmd(0);
 10754  16CD  3000               	movlw	0
 10755  16CE  3195  25E0  3196   	fcall	_LCD_Cmd
 10756                           
 10757                           ;lcd.c: 37: LCD_Cmd(2);
 10758  16D1  3002               	movlw	2
 10759  16D2  3195  25E0         	fcall	_LCD_Cmd
 10760  16D4  0008               	return
 10761  16D5                     __end_of_InitCustomChars:	
 10762                           
 10763                           	psect	text26
 10764  163C                     __ptext26:	
 10765 ;; *************** function _ADCC_Initialize *****************
 10766 ;; Defined at:
 10767 ;;		line 16 in file "adcc.c"
 10768 ;; Parameters:    Size  Location     Type
 10769 ;;		None
 10770 ;; Auto vars:     Size  Location     Type
 10771 ;;		None
 10772 ;; Return value:  Size  Location     Type
 10773 ;;                  1    wreg      void 
 10774 ;; Registers used:
 10775 ;;		wreg, status,2
 10776 ;; Tracked objects:
 10777 ;;		On entry : 0/0
 10778 ;;		On exit  : 0/0
 10779 ;;		Unchanged: 0/0
 10780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10784 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10785 ;;Total ram usage:        0 bytes
 10786 ;; Hardware stack levels used:    1
 10787 ;; This function calls:
 10788 ;;		Nothing
 10789 ;; This function is called by:
 10790 ;;		_SYSTEM_Initialize
 10791 ;; This function uses a non-reentrant model
 10792 ;;
 10793                           
 10794                           
 10795                           ;psect for function _ADCC_Initialize
 10796  163C                     _ADCC_Initialize:	
 10797                           
 10798                           ;adcc.c: 19: ADCON1 = 0x00;
 10799                           
 10800                           ;incstack = 0
 10801                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
 10802  163C  0021               	movlb	1	; select bank1
 10803  163D  0194               	clrf	20	;volatile
 10804                           
 10805                           ;adcc.c: 21: ADCON2 = 0x00;
 10806  163E  0195               	clrf	21	;volatile
 10807                           
 10808                           ;adcc.c: 23: ADCON3 = 0x00;
 10809  163F  0196               	clrf	22	;volatile
 10810                           
 10811                           ;adcc.c: 25: ADACT = 0x00;
 10812  1640  0199               	clrf	25	;volatile
 10813                           
 10814                           ;adcc.c: 27: ADSTAT = 0x00;
 10815  1641  0197               	clrf	23	;volatile
 10816                           
 10817                           ;adcc.c: 29: ADCLK = 0x3F;
 10818  1642  303F               	movlw	63
 10819  1643  0098               	movwf	24	;volatile
 10820                           
 10821                           ;adcc.c: 33: ADREF = 0x00;
 10822  1644  019A               	clrf	26	;volatile
 10823                           
 10824                           ;adcc.c: 35: ADCAP = 0x00;
 10825  1645  019B               	clrf	27	;volatile
 10826                           
 10827                           ;adcc.c: 38: ADPRE = 0x07;
 10828  1646  3007               	movlw	7
 10829  1647  009C               	movwf	28	;volatile
 10830                           
 10831                           ;adcc.c: 40: ADACQ = 0x00;
 10832  1648  019D               	clrf	29	;volatile
 10833                           
 10834                           ;adcc.c: 42: ADPCH = 0x00;
 10835  1649  019E               	clrf	30	;volatile
 10836                           
 10837                           ;adcc.c: 44: ADRPT = 0x00;
 10838  164A  0022               	movlb	2	; select bank2
 10839  164B  018D               	clrf	13	;volatile
 10840                           
 10841                           ;adcc.c: 46: ADLTHL = 0x00;
 10842  164C  018E               	clrf	14	;volatile
 10843                           
 10844                           ;adcc.c: 48: ADLTHH = 0x00;
 10845  164D  018F               	clrf	15	;volatile
 10846                           
 10847                           ;adcc.c: 50: ADUTHL = 0x00;
 10848  164E  0190               	clrf	16	;volatile
 10849                           
 10850                           ;adcc.c: 52: ADUTHH = 0x00;
 10851  164F  0191               	clrf	17	;volatile
 10852                           
 10853                           ;adcc.c: 54: ADSTPTL = 0x00;
 10854  1650  0192               	clrf	18	;volatile
 10855                           
 10856                           ;adcc.c: 56: ADSTPTH = 0x00;
 10857  1651  0193               	clrf	19	;volatile
 10858                           
 10859                           ;adcc.c: 59: ADCON0 = 0x84;
 10860  1652  3084               	movlw	132
 10861  1653  0021               	movlb	1	; select bank1
 10862  1654  0093               	movwf	19	;volatile
 10863  1655  0008               	return
 10864  1656                     __end_of_ADCC_Initialize:	
 10865                           
 10866                           	psect	text27
 10867  15F4                     __ptext27:	
 10868 ;; *************** function _PWM6_LoadDutyValue *****************
 10869 ;; Defined at:
 10870 ;;		line 14 in file "pwm6.c"
 10871 ;; Parameters:    Size  Location     Type
 10872 ;;  dutyCycle       2    0[COMMON] unsigned int 
 10873 ;; Auto vars:     Size  Location     Type
 10874 ;;		None
 10875 ;; Return value:  Size  Location     Type
 10876 ;;                  1    wreg      void 
 10877 ;; Registers used:
 10878 ;;		wreg, status,2, status,0
 10879 ;; Tracked objects:
 10880 ;;		On entry : 0/0
 10881 ;;		On exit  : 0/0
 10882 ;;		Unchanged: 0/0
 10883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10884 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10886 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10887 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10888 ;;Total ram usage:        4 bytes
 10889 ;; Hardware stack levels used:    1
 10890 ;; This function calls:
 10891 ;;		Nothing
 10892 ;; This function is called by:
 10893 ;;		_main
 10894 ;; This function uses a non-reentrant model
 10895 ;;
 10896                           
 10897                           
 10898                           ;psect for function _PWM6_LoadDutyValue
 10899  15F4                     _PWM6_LoadDutyValue:	
 10900                           
 10901                           ;pwm6.c: 16: PWM6DCH = (dutyCycle & 0x03FC)>>2;
 10902                           
 10903                           ;incstack = 0
 10904                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
 10905  15F4  0871               	movf	PWM6_LoadDutyValue@dutyCycle+1,w
 10906  15F5  00F3               	movwf	??_PWM6_LoadDutyValue+1
 10907  15F6  0870               	movf	PWM6_LoadDutyValue@dutyCycle,w
 10908  15F7  00F2               	movwf	??_PWM6_LoadDutyValue
 10909  15F8  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
 10910  15F9  0CF2               	rrf	??_PWM6_LoadDutyValue,f
 10911  15FA  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
 10912  15FB  0CF2               	rrf	??_PWM6_LoadDutyValue,f
 10913  15FC  0872               	movf	??_PWM6_LoadDutyValue,w
 10914  15FD  0027               	movlb	7	; select bank7
 10915  15FE  008D               	movwf	13	;volatile
 10916                           
 10917                           ;pwm6.c: 18: PWM6DCL = (dutyCycle & 0x0003)<<6;
 10918  15FF  0870               	movf	PWM6_LoadDutyValue@dutyCycle,w
 10919  1600  3903               	andlw	3
 10920  1601  00F2               	movwf	??_PWM6_LoadDutyValue
 10921  1602  3005               	movlw	5
 10922  1603                     u3035:	
 10923  1603  35F2               	lslf	??_PWM6_LoadDutyValue,f
 10924  1604  3EFF               	addlw	-1
 10925  1605  1D03               	skipz
 10926  1606  2E03               	goto	u3035
 10927  1607  3572               	lslf	??_PWM6_LoadDutyValue,w
 10928  1608  008C               	movwf	12	;volatile
 10929  1609  0008               	return
 10930  160A                     __end_of_PWM6_LoadDutyValue:	
 10931                           
 10932                           	psect	text28
 10933  1622                     __ptext28:	
 10934 ;; *************** function _LCD_Write_String *****************
 10935 ;; Defined at:
 10936 ;;		line 239 in file "lcd.c"
 10937 ;; Parameters:    Size  Location     Type
 10938 ;;  a               2    5[COMMON] PTR const unsigned char 
 10939 ;;		 -> STR_38(5), STR_37(4), STR_36(6), STR_35(3), 
 10940 ;;		 -> STR_34(11), STR_33(11), STR_32(17), STR_31(9), 
 10941 ;;		 -> STR_30(17), STR_29(11), STR_28(17), STR_27(11), 
 10942 ;;		 -> STR_26(2), STR_25(2), STR_24(2), STR_23(2), 
 10943 ;;		 -> STR_22(2), STR_21(2), STR_20(2), STR_19(2), 
 10944 ;;		 -> STR_18(2), STR_17(2), STR_16(2), STR_15(2), 
 10945 ;;		 -> STR_14(2), STR_13(2), STR_12(2), STR_11(2), 
 10946 ;;		 -> STR_10(2), STR_9(2), STR_8(2), STR_7(2), 
 10947 ;;		 -> STR_6(2), STR_5(2), STR_4(2), STR_3(2), 
 10948 ;;		 -> STR_2(2), STR_1(2), 
 10949 ;; Auto vars:     Size  Location     Type
 10950 ;;  i               2    8[COMMON] int 
 10951 ;; Return value:  Size  Location     Type
 10952 ;;                  1    wreg      void 
 10953 ;; Registers used:
 10954 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10955 ;; Tracked objects:
 10956 ;;		On entry : 0/0
 10957 ;;		On exit  : 0/0
 10958 ;;		Unchanged: 0/0
 10959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10960 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10961 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10962 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10963 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10964 ;;Total ram usage:        5 bytes
 10965 ;; Hardware stack levels used:    1
 10966 ;; Hardware stack levels required when called:    2
 10967 ;; This function calls:
 10968 ;;		_LCD_Write_Char
 10969 ;; This function is called by:
 10970 ;;		_main
 10971 ;; This function uses a non-reentrant model
 10972 ;;
 10973                           
 10974                           
 10975                           ;psect for function _LCD_Write_String
 10976  1622                     _LCD_Write_String:	
 10977                           
 10978                           ;lcd.c: 241: int i;
 10979                           ;lcd.c: 242: for(i=0;a[i]!='\0';i++)
 10980                           
 10981                           ;incstack = 0
 10982                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10983  1622  01F8               	clrf	LCD_Write_String@i
 10984  1623  01F9               	clrf	LCD_Write_String@i+1
 10985  1624                     l2709:	
 10986  1624  0875               	movf	LCD_Write_String@a,w
 10987  1625  0778               	addwf	LCD_Write_String@i,w
 10988  1626  0084               	movwf	4
 10989  1627  0876               	movf	LCD_Write_String@a+1,w
 10990  1628  3D79               	addwfc	LCD_Write_String@i+1,w
 10991  1629  0085               	movwf	5
 10992  162A  0012               	moviw fsr0++
 10993  162B  1903               	btfsc	3,2
 10994  162C  0008               	return
 10995                           
 10996                           ;lcd.c: 243: LCD_Write_Char(a[i]);
 10997  162D  0875               	movf	LCD_Write_String@a,w
 10998  162E  0778               	addwf	LCD_Write_String@i,w
 10999  162F  0084               	movwf	4
 11000  1630  0876               	movf	LCD_Write_String@a+1,w
 11001  1631  3D79               	addwfc	LCD_Write_String@i+1,w
 11002  1632  0085               	movwf	5
 11003  1633  0800               	movf	0,w	;code access
 11004  1634  3188  2007  3196   	fcall	_LCD_Write_Char
 11005  1637  3001               	movlw	1
 11006  1638  07F8               	addwf	LCD_Write_String@i,f
 11007  1639  3000               	movlw	0
 11008  163A  3DF9               	addwfc	LCD_Write_String@i+1,f
 11009  163B  2E24               	goto	l2709
 11010  163C                     __end_of_LCD_Write_String:	
 11011                           
 11012                           	psect	text29
 11013  0D26                     __ptext29:	
 11014 ;; *************** function _LCD_Write_Int *****************
 11015 ;; Defined at:
 11016 ;;		line 246 in file "lcd.c"
 11017 ;; Parameters:    Size  Location     Type
 11018 ;;  value           2    0[BANK0 ] int 
 11019 ;;  fieldLength     1    2[BANK0 ] char 
 11020 ;;  numPlaces       1    3[BANK0 ] char 
 11021 ;;  sign            1    4[BANK0 ] char 
 11022 ;; Auto vars:     Size  Location     Type
 11023 ;;  str             5   10[BANK0 ] unsigned char [5]
 11024 ;;  i               2   17[BANK0 ] int 
 11025 ;;  j               2   15[BANK0 ] int 
 11026 ;; Return value:  Size  Location     Type
 11027 ;;                  1    wreg      void 
 11028 ;; Registers used:
 11029 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11030 ;; Tracked objects:
 11031 ;;		On entry : 0/0
 11032 ;;		On exit  : 0/0
 11033 ;;		Unchanged: 0/0
 11034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11035 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11036 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11037 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11038 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11039 ;;Total ram usage:       19 bytes
 11040 ;; Hardware stack levels used:    1
 11041 ;; Hardware stack levels required when called:    2
 11042 ;; This function calls:
 11043 ;;		_LCD_Write_Char
 11044 ;;		___awdiv
 11045 ;;		___awmod
 11046 ;; This function is called by:
 11047 ;;		_main
 11048 ;; This function uses a non-reentrant model
 11049 ;;
 11050                           
 11051                           
 11052                           ;psect for function _LCD_Write_Int
 11053  0D26                     _LCD_Write_Int:	
 11054                           
 11055                           ;lcd.c: 248: char str[5]={0,0,0,0,0};
 11056                           
 11057                           ;incstack = 0
 11058                           ; Regs used in _LCD_Write_Int: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11059  0D26  30D8               	movlw	low LCD_Write_Int@F13687
 11060  0D27  0086               	movwf	6
 11061  0D28  3000               	movlw	high LCD_Write_Int@F13687
 11062  0D29  0087               	movwf	7
 11063  0D2A  302A               	movlw	low LCD_Write_Int@str
 11064  0D2B  0084               	movwf	4
 11065  0D2C  3000               	movlw	high LCD_Write_Int@str
 11066  0D2D  0085               	movwf	5
 11067  0D2E  3005               	movlw	5
 11068  0D2F  0020               	movlb	0	; select bank0
 11069  0D30  00A5               	movwf	??_LCD_Write_Int
 11070  0D31                     u2940:	
 11071  0D31  0016               	moviw fsr1++
 11072  0D32  001A               	movwi fsr0++
 11073  0D33  0BA5               	decfsz	??_LCD_Write_Int,f
 11074  0D34  2D31               	goto	u2940
 11075                           
 11076                           ;lcd.c: 249: int i=4,j=0;
 11077  0D35  3004               	movlw	4
 11078  0D36  00B1               	movwf	LCD_Write_Int@i
 11079  0D37  3000               	movlw	0
 11080  0D38  00B2               	movwf	LCD_Write_Int@i+1
 11081  0D39  01AF               	clrf	LCD_Write_Int@j
 11082  0D3A  01B0               	clrf	LCD_Write_Int@j+1
 11083                           
 11084                           ;lcd.c: 251: if(value<0)
 11085  0D3B  1FA1               	btfss	LCD_Write_Int@value+1,7
 11086  0D3C  2D48               	goto	l2723
 11087                           
 11088                           ;lcd.c: 252: {
 11089                           ;lcd.c: 253: LCD_Write_Char('-');
 11090  0D3D  302D               	movlw	45
 11091  0D3E  3188  2007  318D   	fcall	_LCD_Write_Char
 11092                           
 11093                           ;lcd.c: 254: value=value*-1;
 11094  0D41  0020               	movlb	0	; select bank0
 11095  0D42  09A0               	comf	LCD_Write_Int@value,f
 11096  0D43  09A1               	comf	LCD_Write_Int@value+1,f
 11097  0D44  0AA0               	incf	LCD_Write_Int@value,f
 11098  0D45  1903               	skipnz
 11099  0D46  0AA1               	incf	LCD_Write_Int@value+1,f
 11100                           
 11101                           ;lcd.c: 255: }
 11102  0D47  2D4F               	goto	l2733
 11103  0D48                     l2723:	
 11104                           
 11105                           ;lcd.c: 257: else
 11106                           ;lcd.c: 258: {
 11107                           ;lcd.c: 259: if(sign == 1)
 11108  0D48  0324               	decf	LCD_Write_Int@sign,w
 11109  0D49  1D03               	btfss	3,2
 11110  0D4A  2D4F               	goto	l2733
 11111                           
 11112                           ;lcd.c: 260: {
 11113                           ;lcd.c: 261: LCD_Write_Char('+');
 11114  0D4B  302B               	movlw	43
 11115  0D4C  3188  2007  318D   	fcall	_LCD_Write_Char
 11116  0D4F                     l2733:	
 11117                           ;lcd.c: 262: }
 11118                           ;lcd.c: 263: }
 11119                           ;lcd.c: 265: while(value)
 11120                           
 11121  0D4F  0020               	movlb	0	; select bank0
 11122  0D50  0820               	movf	LCD_Write_Int@value,w
 11123  0D51  0421               	iorwf	LCD_Write_Int@value+1,w
 11124  0D52  1903               	btfsc	3,2
 11125  0D53  2D7E               	goto	l2735
 11126                           
 11127                           ;lcd.c: 266: {
 11128                           ;lcd.c: 267: str[i]=value%10;
 11129  0D54  300A               	movlw	10
 11130  0D55  00F0               	movwf	___awmod@divisor
 11131  0D56  3000               	movlw	0
 11132  0D57  00F1               	movwf	___awmod@divisor+1
 11133  0D58  0020               	movlb	0	; select bank0
 11134  0D59  0821               	movf	LCD_Write_Int@value+1,w
 11135  0D5A  00F3               	movwf	___awmod@dividend+1
 11136  0D5B  0820               	movf	LCD_Write_Int@value,w
 11137  0D5C  00F2               	movwf	___awmod@dividend
 11138  0D5D  3188  2033  318D   	fcall	___awmod
 11139  0D60  0870               	movf	?___awmod,w
 11140  0D61  0020               	movlb	0	; select bank0
 11141  0D62  00A5               	movwf	??_LCD_Write_Int
 11142  0D63  0831               	movf	LCD_Write_Int@i,w
 11143  0D64  3E2A               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
 11144  0D65  0086               	movwf	6
 11145  0D66  0187               	clrf	7
 11146  0D67  0825               	movf	??_LCD_Write_Int,w
 11147  0D68  0081               	movwf	1
 11148                           
 11149                           ;lcd.c: 268: value=value/10;
 11150  0D69  300A               	movlw	10
 11151  0D6A  00F0               	movwf	___awdiv@divisor
 11152  0D6B  3000               	movlw	0
 11153  0D6C  00F1               	movwf	___awdiv@divisor+1
 11154  0D6D  0821               	movf	LCD_Write_Int@value+1,w
 11155  0D6E  00F3               	movwf	___awdiv@dividend+1
 11156  0D6F  0820               	movf	LCD_Write_Int@value,w
 11157  0D70  00F2               	movwf	___awdiv@dividend
 11158  0D71  3188  2078  318D   	fcall	___awdiv
 11159  0D74  0871               	movf	?___awdiv+1,w
 11160  0D75  0020               	movlb	0	; select bank0
 11161  0D76  00A1               	movwf	LCD_Write_Int@value+1
 11162  0D77  0870               	movf	?___awdiv,w
 11163  0D78  00A0               	movwf	LCD_Write_Int@value
 11164                           
 11165                           ;lcd.c: 269: i--;
 11166  0D79  30FF               	movlw	255
 11167  0D7A  07B1               	addwf	LCD_Write_Int@i,f
 11168  0D7B  30FF               	movlw	255
 11169  0D7C  3DB2               	addwfc	LCD_Write_Int@i+1,f
 11170  0D7D  2D4F               	goto	l2733
 11171  0D7E                     l2735:	
 11172                           
 11173                           ;lcd.c: 270: }
 11174                           ;lcd.c: 271: if(fieldLength==-1)
 11175  0D7E  0A22               	incf	LCD_Write_Int@fieldLength,w
 11176  0D7F  1903               	btfsc	3,2
 11177  0D80  2D86               	goto	l2741
 11178  0D81  2D8E               	goto	l2743
 11179  0D82                     l2739:	
 11180                           ;lcd.c: 272: {
 11181                           ;lcd.c: 273: while(str[j]==0)
 11182                           
 11183                           
 11184                           ;lcd.c: 274: {
 11185                           ;lcd.c: 275: j++;
 11186  0D82  3001               	movlw	1
 11187  0D83  07AF               	addwf	LCD_Write_Int@j,f
 11188  0D84  3000               	movlw	0
 11189  0D85  3DB0               	addwfc	LCD_Write_Int@j+1,f
 11190  0D86                     l2741:	
 11191  0D86  082F               	movf	LCD_Write_Int@j,w
 11192  0D87  3E2A               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
 11193  0D88  0086               	movwf	6
 11194  0D89  0187               	clrf	7
 11195  0D8A  0801               	movf	1,w
 11196  0D8B  1D03               	btfss	3,2
 11197  0D8C  2D9E               	goto	l2745
 11198  0D8D  2D82               	goto	l2739
 11199  0D8E                     l2743:	
 11200                           ;lcd.c: 276: }
 11201                           ;lcd.c: 277: }
 11202                           
 11203                           
 11204                           ;lcd.c: 278: else
 11205                           ;lcd.c: 279: {
 11206                           ;lcd.c: 280: j=5-fieldLength;
 11207  0D8E  0822               	movf	LCD_Write_Int@fieldLength,w
 11208  0D8F  00A5               	movwf	??_LCD_Write_Int
 11209  0D90  01A6               	clrf	??_LCD_Write_Int+1
 11210  0D91  1BA5               	btfsc	??_LCD_Write_Int,7
 11211  0D92  03A6               	decf	??_LCD_Write_Int+1,f
 11212  0D93  09A5               	comf	??_LCD_Write_Int,f
 11213  0D94  09A6               	comf	??_LCD_Write_Int+1,f
 11214  0D95  0AA5               	incf	??_LCD_Write_Int,f
 11215  0D96  1903               	skipnz
 11216  0D97  0AA6               	incf	??_LCD_Write_Int+1,f
 11217  0D98  0825               	movf	??_LCD_Write_Int,w
 11218  0D99  3E05               	addlw	5
 11219  0D9A  00AF               	movwf	LCD_Write_Int@j
 11220  0D9B  3000               	movlw	0
 11221  0D9C  3D26               	addwfc	??_LCD_Write_Int+1,w
 11222  0D9D  00B0               	movwf	LCD_Write_Int@j+1
 11223  0D9E                     l2745:	
 11224                           
 11225                           ;lcd.c: 281: }
 11226                           ;lcd.c: 283: for(i=j;i<(5-numPlaces);i++)
 11227  0D9E  0830               	movf	LCD_Write_Int@j+1,w
 11228  0D9F  00B2               	movwf	LCD_Write_Int@i+1
 11229  0DA0  082F               	movf	LCD_Write_Int@j,w
 11230  0DA1  00B1               	movwf	LCD_Write_Int@i
 11231  0DA2                     l2751:	
 11232  0DA2  0823               	movf	LCD_Write_Int@numPlaces,w
 11233  0DA3  00A5               	movwf	??_LCD_Write_Int
 11234  0DA4  01A6               	clrf	??_LCD_Write_Int+1
 11235  0DA5  1BA5               	btfsc	??_LCD_Write_Int,7
 11236  0DA6  03A6               	decf	??_LCD_Write_Int+1,f
 11237  0DA7  09A5               	comf	??_LCD_Write_Int,f
 11238  0DA8  09A6               	comf	??_LCD_Write_Int+1,f
 11239  0DA9  0AA5               	incf	??_LCD_Write_Int,f
 11240  0DAA  1903               	skipnz
 11241  0DAB  0AA6               	incf	??_LCD_Write_Int+1,f
 11242  0DAC  0825               	movf	??_LCD_Write_Int,w
 11243  0DAD  3E05               	addlw	5
 11244  0DAE  00A7               	movwf	??_LCD_Write_Int+2
 11245  0DAF  3000               	movlw	0
 11246  0DB0  3D26               	addwfc	??_LCD_Write_Int+1,w
 11247  0DB1  00A8               	movwf	??_LCD_Write_Int+3
 11248  0DB2  0832               	movf	LCD_Write_Int@i+1,w
 11249  0DB3  3A80               	xorlw	128
 11250  0DB4  00A9               	movwf	??_LCD_Write_Int+4
 11251  0DB5  0828               	movf	??_LCD_Write_Int+3,w
 11252  0DB6  3A80               	xorlw	128
 11253  0DB7  0229               	subwf	??_LCD_Write_Int+4,w
 11254  0DB8  1D03               	skipz
 11255  0DB9  2DBC               	goto	u3005
 11256  0DBA  0827               	movf	??_LCD_Write_Int+2,w
 11257  0DBB  0231               	subwf	LCD_Write_Int@i,w
 11258  0DBC                     u3005:	
 11259  0DBC  1803               	btfsc	3,0
 11260  0DBD  2DCE               	goto	l2753
 11261                           
 11262                           ;lcd.c: 284: {
 11263                           ;lcd.c: 285: LCD_Write_Char(48+str[i]);
 11264  0DBE  0020               	movlb	0	; select bank0
 11265  0DBF  0831               	movf	LCD_Write_Int@i,w
 11266  0DC0  3E2A               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
 11267  0DC1  0086               	movwf	6
 11268  0DC2  0187               	clrf	7
 11269  0DC3  0801               	movf	1,w
 11270  0DC4  3E30               	addlw	48
 11271  0DC5  3188  2007  318D   	fcall	_LCD_Write_Char
 11272  0DC8  3001               	movlw	1
 11273  0DC9  0020               	movlb	0	; select bank0
 11274  0DCA  07B1               	addwf	LCD_Write_Int@i,f
 11275  0DCB  3000               	movlw	0
 11276  0DCC  3DB2               	addwfc	LCD_Write_Int@i+1,f
 11277  0DCD  2DA2               	goto	l2751
 11278  0DCE                     l2753:	
 11279                           
 11280                           ;lcd.c: 286: }
 11281                           ;lcd.c: 288: if(numPlaces == 1)
 11282  0DCE  0020               	movlb	0	; select bank0
 11283  0DCF  0323               	decf	LCD_Write_Int@numPlaces,w
 11284  0DD0  1D03               	btfss	3,2
 11285  0DD1  2DDC               	goto	l2757
 11286                           
 11287                           ;lcd.c: 289: {
 11288                           ;lcd.c: 290: LCD_Write_Char(46);
 11289  0DD2  302E               	movlw	46
 11290  0DD3  3188  2007  318D   	fcall	_LCD_Write_Char
 11291                           
 11292                           ;lcd.c: 291: LCD_Write_Char(48+str[4]);
 11293  0DD6  0020               	movlb	0	; select bank0
 11294  0DD7  082E               	movf	LCD_Write_Int@str+4,w
 11295  0DD8  3E30               	addlw	48
 11296  0DD9  3188  2007  318D   	fcall	_LCD_Write_Char
 11297  0DDC                     l2757:	
 11298                           
 11299                           ;lcd.c: 292: }
 11300                           ;lcd.c: 294: if(numPlaces == 2)
 11301  0DDC  3002               	movlw	2
 11302  0DDD  0020               	movlb	0	; select bank0
 11303  0DDE  0623               	xorwf	LCD_Write_Int@numPlaces,w
 11304  0DDF  1D03               	btfss	3,2
 11305  0DE0  0008               	return
 11306                           
 11307                           ;lcd.c: 295: {
 11308                           ;lcd.c: 296: LCD_Write_Char(46);
 11309  0DE1  302E               	movlw	46
 11310  0DE2  3188  2007  318D   	fcall	_LCD_Write_Char
 11311                           
 11312                           ;lcd.c: 297: LCD_Write_Char(48+str[3]);
 11313  0DE5  0020               	movlb	0	; select bank0
 11314  0DE6  082D               	movf	LCD_Write_Int@str+3,w
 11315  0DE7  3E30               	addlw	48
 11316  0DE8  3188  2007  318D   	fcall	_LCD_Write_Char
 11317                           
 11318                           ;lcd.c: 298: LCD_Write_Char(48+str[4]);
 11319  0DEB  0020               	movlb	0	; select bank0
 11320  0DEC  082E               	movf	LCD_Write_Int@str+4,w
 11321  0DED  3E30               	addlw	48
 11322  0DEE  3188  2007         	fcall	_LCD_Write_Char
 11323  0DF0  0008               	return
 11324  0DF1                     __end_of_LCD_Write_Int:	
 11325                           
 11326                           	psect	text30
 11327  0833                     __ptext30:	
 11328 ;; *************** function ___awmod *****************
 11329 ;; Defined at:
 11330 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c"
 11331 ;; Parameters:    Size  Location     Type
 11332 ;;  divisor         2    0[COMMON] int 
 11333 ;;  dividend        2    2[COMMON] int 
 11334 ;; Auto vars:     Size  Location     Type
 11335 ;;  sign            1    6[COMMON] unsigned char 
 11336 ;;  counter         1    5[COMMON] unsigned char 
 11337 ;; Return value:  Size  Location     Type
 11338 ;;                  2    0[COMMON] int 
 11339 ;; Registers used:
 11340 ;;		wreg, status,2, status,0
 11341 ;; Tracked objects:
 11342 ;;		On entry : 0/0
 11343 ;;		On exit  : 0/0
 11344 ;;		Unchanged: 0/0
 11345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11346 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11347 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11348 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11349 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11350 ;;Total ram usage:        7 bytes
 11351 ;; Hardware stack levels used:    1
 11352 ;; This function calls:
 11353 ;;		Nothing
 11354 ;; This function is called by:
 11355 ;;		_LCD_Write_Int
 11356 ;; This function uses a non-reentrant model
 11357 ;;
 11358                           
 11359                           
 11360                           ;psect for function ___awmod
 11361  0833                     ___awmod:	
 11362                           
 11363                           ;incstack = 0
 11364                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 11365  0833  01F6               	clrf	___awmod@sign
 11366  0834  1FF3               	btfss	___awmod@dividend+1,7
 11367  0835  283D               	goto	l2583
 11368  0836  09F2               	comf	___awmod@dividend,f
 11369  0837  09F3               	comf	___awmod@dividend+1,f
 11370  0838  0AF2               	incf	___awmod@dividend,f
 11371  0839  1903               	skipnz
 11372  083A  0AF3               	incf	___awmod@dividend+1,f
 11373  083B  01F6               	clrf	___awmod@sign
 11374  083C  0AF6               	incf	___awmod@sign,f
 11375  083D                     l2583:	
 11376  083D  1FF1               	btfss	___awmod@divisor+1,7
 11377  083E  2844               	goto	l2587
 11378  083F  09F0               	comf	___awmod@divisor,f
 11379  0840  09F1               	comf	___awmod@divisor+1,f
 11380  0841  0AF0               	incf	___awmod@divisor,f
 11381  0842  1903               	skipnz
 11382  0843  0AF1               	incf	___awmod@divisor+1,f
 11383  0844                     l2587:	
 11384  0844  0870               	movf	___awmod@divisor,w
 11385  0845  0471               	iorwf	___awmod@divisor+1,w
 11386  0846  1903               	btfsc	3,2
 11387  0847  286B               	goto	l2605
 11388  0848  01F5               	clrf	___awmod@counter
 11389  0849  0AF5               	incf	___awmod@counter,f
 11390  084A                     l2595:	
 11391  084A  1BF1               	btfsc	___awmod@divisor+1,7
 11392  084B  2856               	goto	l2597
 11393  084C  3001               	movlw	1
 11394  084D                     u2675:	
 11395  084D  35F0               	lslf	___awmod@divisor,f
 11396  084E  0DF1               	rlf	___awmod@divisor+1,f
 11397  084F  0B89               	decfsz	9,f
 11398  0850  284D               	goto	u2675
 11399  0851  3001               	movlw	1
 11400  0852  00F4               	movwf	??___awmod
 11401  0853  0874               	movf	??___awmod,w
 11402  0854  07F5               	addwf	___awmod@counter,f
 11403  0855  284A               	goto	l2595
 11404  0856                     l2597:	
 11405  0856  0871               	movf	___awmod@divisor+1,w
 11406  0857  0273               	subwf	___awmod@dividend+1,w
 11407  0858  1D03               	skipz
 11408  0859  285C               	goto	u2695
 11409  085A  0870               	movf	___awmod@divisor,w
 11410  085B  0272               	subwf	___awmod@dividend,w
 11411  085C                     u2695:	
 11412  085C  1C03               	skipc
 11413  085D  2862               	goto	l2601
 11414  085E  0870               	movf	___awmod@divisor,w
 11415  085F  02F2               	subwf	___awmod@dividend,f
 11416  0860  0871               	movf	___awmod@divisor+1,w
 11417  0861  3BF3               	subwfb	___awmod@dividend+1,f
 11418  0862                     l2601:	
 11419  0862  3001               	movlw	1
 11420  0863                     u2705:	
 11421  0863  36F1               	lsrf	___awmod@divisor+1,f
 11422  0864  0CF0               	rrf	___awmod@divisor,f
 11423  0865  0B89               	decfsz	9,f
 11424  0866  2863               	goto	u2705
 11425  0867  3001               	movlw	1
 11426  0868  02F5               	subwf	___awmod@counter,f
 11427  0869  1D03               	btfss	3,2
 11428  086A  2856               	goto	l2597
 11429  086B                     l2605:	
 11430  086B  0876               	movf	___awmod@sign,w
 11431  086C  1903               	btfsc	3,2
 11432  086D  2873               	goto	l2609
 11433  086E  09F2               	comf	___awmod@dividend,f
 11434  086F  09F3               	comf	___awmod@dividend+1,f
 11435  0870  0AF2               	incf	___awmod@dividend,f
 11436  0871  1903               	skipnz
 11437  0872  0AF3               	incf	___awmod@dividend+1,f
 11438  0873                     l2609:	
 11439  0873  0873               	movf	___awmod@dividend+1,w
 11440  0874  00F1               	movwf	?___awmod+1
 11441  0875  0872               	movf	___awmod@dividend,w
 11442  0876  00F0               	movwf	?___awmod
 11443  0877  0008               	return
 11444  0878                     __end_of___awmod:	
 11445                           
 11446                           	psect	text31
 11447  0878                     __ptext31:	
 11448 ;; *************** function ___awdiv *****************
 11449 ;; Defined at:
 11450 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c"
 11451 ;; Parameters:    Size  Location     Type
 11452 ;;  divisor         2    0[COMMON] int 
 11453 ;;  dividend        2    2[COMMON] int 
 11454 ;; Auto vars:     Size  Location     Type
 11455 ;;  quotient        2    7[COMMON] int 
 11456 ;;  sign            1    6[COMMON] unsigned char 
 11457 ;;  counter         1    5[COMMON] unsigned char 
 11458 ;; Return value:  Size  Location     Type
 11459 ;;                  2    0[COMMON] int 
 11460 ;; Registers used:
 11461 ;;		wreg, status,2, status,0
 11462 ;; Tracked objects:
 11463 ;;		On entry : 0/0
 11464 ;;		On exit  : 0/0
 11465 ;;		Unchanged: 0/0
 11466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11467 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11468 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11469 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11470 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11471 ;;Total ram usage:        9 bytes
 11472 ;; Hardware stack levels used:    1
 11473 ;; This function calls:
 11474 ;;		Nothing
 11475 ;; This function is called by:
 11476 ;;		_LCD_Write_Int
 11477 ;; This function uses a non-reentrant model
 11478 ;;
 11479                           
 11480                           
 11481                           ;psect for function ___awdiv
 11482  0878                     ___awdiv:	
 11483                           
 11484                           ;incstack = 0
 11485                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 11486  0878  01F6               	clrf	___awdiv@sign
 11487  0879  1FF1               	btfss	___awdiv@divisor+1,7
 11488  087A  2882               	goto	l2539
 11489  087B  09F0               	comf	___awdiv@divisor,f
 11490  087C  09F1               	comf	___awdiv@divisor+1,f
 11491  087D  0AF0               	incf	___awdiv@divisor,f
 11492  087E  1903               	skipnz
 11493  087F  0AF1               	incf	___awdiv@divisor+1,f
 11494  0880  01F6               	clrf	___awdiv@sign
 11495  0881  0AF6               	incf	___awdiv@sign,f
 11496  0882                     l2539:	
 11497  0882  1FF3               	btfss	___awdiv@dividend+1,7
 11498  0883  288D               	goto	l2545
 11499  0884  09F2               	comf	___awdiv@dividend,f
 11500  0885  09F3               	comf	___awdiv@dividend+1,f
 11501  0886  0AF2               	incf	___awdiv@dividend,f
 11502  0887  1903               	skipnz
 11503  0888  0AF3               	incf	___awdiv@dividend+1,f
 11504  0889  3001               	movlw	1
 11505  088A  00F4               	movwf	??___awdiv
 11506  088B  0874               	movf	??___awdiv,w
 11507  088C  06F6               	xorwf	___awdiv@sign,f
 11508  088D                     l2545:	
 11509  088D  01F7               	clrf	___awdiv@quotient
 11510  088E  01F8               	clrf	___awdiv@quotient+1
 11511  088F  0870               	movf	___awdiv@divisor,w
 11512  0890  0471               	iorwf	___awdiv@divisor+1,w
 11513  0891  1903               	btfsc	3,2
 11514  0892  28BC               	goto	l2567
 11515  0893  01F5               	clrf	___awdiv@counter
 11516  0894  0AF5               	incf	___awdiv@counter,f
 11517  0895                     l2555:	
 11518  0895  1BF1               	btfsc	___awdiv@divisor+1,7
 11519  0896  28A1               	goto	l2557
 11520  0897  3001               	movlw	1
 11521  0898                     u2575:	
 11522  0898  35F0               	lslf	___awdiv@divisor,f
 11523  0899  0DF1               	rlf	___awdiv@divisor+1,f
 11524  089A  0B89               	decfsz	9,f
 11525  089B  2898               	goto	u2575
 11526  089C  3001               	movlw	1
 11527  089D  00F4               	movwf	??___awdiv
 11528  089E  0874               	movf	??___awdiv,w
 11529  089F  07F5               	addwf	___awdiv@counter,f
 11530  08A0  2895               	goto	l2555
 11531  08A1                     l2557:	
 11532  08A1  3001               	movlw	1
 11533  08A2                     u2595:	
 11534  08A2  35F7               	lslf	___awdiv@quotient,f
 11535  08A3  0DF8               	rlf	___awdiv@quotient+1,f
 11536  08A4  0B89               	decfsz	9,f
 11537  08A5  28A2               	goto	u2595
 11538  08A6  0871               	movf	___awdiv@divisor+1,w
 11539  08A7  0273               	subwf	___awdiv@dividend+1,w
 11540  08A8  1D03               	skipz
 11541  08A9  28AC               	goto	u2605
 11542  08AA  0870               	movf	___awdiv@divisor,w
 11543  08AB  0272               	subwf	___awdiv@dividend,w
 11544  08AC                     u2605:	
 11545  08AC  1C03               	skipc
 11546  08AD  28B3               	goto	l2563
 11547  08AE  0870               	movf	___awdiv@divisor,w
 11548  08AF  02F2               	subwf	___awdiv@dividend,f
 11549  08B0  0871               	movf	___awdiv@divisor+1,w
 11550  08B1  3BF3               	subwfb	___awdiv@dividend+1,f
 11551  08B2  1477               	bsf	___awdiv@quotient,0
 11552  08B3                     l2563:	
 11553  08B3  3001               	movlw	1
 11554  08B4                     u2615:	
 11555  08B4  36F1               	lsrf	___awdiv@divisor+1,f
 11556  08B5  0CF0               	rrf	___awdiv@divisor,f
 11557  08B6  0B89               	decfsz	9,f
 11558  08B7  28B4               	goto	u2615
 11559  08B8  3001               	movlw	1
 11560  08B9  02F5               	subwf	___awdiv@counter,f
 11561  08BA  1D03               	btfss	3,2
 11562  08BB  28A1               	goto	l2557
 11563  08BC                     l2567:	
 11564  08BC  0876               	movf	___awdiv@sign,w
 11565  08BD  1903               	btfsc	3,2
 11566  08BE  28C4               	goto	l2571
 11567  08BF  09F7               	comf	___awdiv@quotient,f
 11568  08C0  09F8               	comf	___awdiv@quotient+1,f
 11569  08C1  0AF7               	incf	___awdiv@quotient,f
 11570  08C2  1903               	skipnz
 11571  08C3  0AF8               	incf	___awdiv@quotient+1,f
 11572  08C4                     l2571:	
 11573  08C4  0878               	movf	___awdiv@quotient+1,w
 11574  08C5  00F1               	movwf	?___awdiv+1
 11575  08C6  0877               	movf	___awdiv@quotient,w
 11576  08C7  00F0               	movwf	?___awdiv
 11577  08C8  0008               	return
 11578  08C9                     __end_of___awdiv:	
 11579                           
 11580                           	psect	text32
 11581  0807                     __ptext32:	
 11582 ;; *************** function _LCD_Write_Char *****************
 11583 ;; Defined at:
 11584 ;;		line 223 in file "lcd.c"
 11585 ;; Parameters:    Size  Location     Type
 11586 ;;  a               1    wreg     const unsigned char 
 11587 ;; Auto vars:     Size  Location     Type
 11588 ;;  a               1    4[COMMON] const unsigned char 
 11589 ;;  y               1    3[COMMON] unsigned char 
 11590 ;;  temp            1    2[COMMON] unsigned char 
 11591 ;; Return value:  Size  Location     Type
 11592 ;;                  1    wreg      void 
 11593 ;; Registers used:
 11594 ;;		wreg, status,2, status,0, pclath, cstack
 11595 ;; Tracked objects:
 11596 ;;		On entry : 0/0
 11597 ;;		On exit  : 0/0
 11598 ;;		Unchanged: 0/0
 11599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11601 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11602 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11603 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11604 ;;Total ram usage:        4 bytes
 11605 ;; Hardware stack levels used:    1
 11606 ;; Hardware stack levels required when called:    1
 11607 ;; This function calls:
 11608 ;;		_LCD_Port
 11609 ;; This function is called by:
 11610 ;;		_InitCustomChars
 11611 ;;		_LCD_Write_String
 11612 ;;		_LCD_Write_Int
 11613 ;;		_main
 11614 ;; This function uses a non-reentrant model
 11615 ;;
 11616                           
 11617                           
 11618                           ;psect for function _LCD_Write_Char
 11619  0807                     _LCD_Write_Char:	
 11620                           
 11621                           ;incstack = 0
 11622                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
 11623                           ;LCD_Write_Char@a stored from wreg
 11624  0807  00F4               	movwf	LCD_Write_Char@a
 11625                           
 11626                           ;lcd.c: 225: char temp,y;
 11627                           ;lcd.c: 226: temp = a&0x0F;
 11628  0808  0874               	movf	LCD_Write_Char@a,w
 11629  0809  390F               	andlw	15
 11630  080A  00F1               	movwf	??_LCD_Write_Char
 11631  080B  0871               	movf	??_LCD_Write_Char,w
 11632  080C  00F2               	movwf	LCD_Write_Char@temp
 11633                           
 11634                           ;lcd.c: 227: y = a&0xF0;
 11635  080D  0874               	movf	LCD_Write_Char@a,w
 11636  080E  39F0               	andlw	240
 11637  080F  00F1               	movwf	??_LCD_Write_Char
 11638  0810  0871               	movf	??_LCD_Write_Char,w
 11639  0811  00F3               	movwf	LCD_Write_Char@y
 11640                           
 11641                           ;lcd.c: 228: RA0 = 1;
 11642  0812  0020               	movlb	0	; select bank0
 11643  0813  140C               	bsf	12,0	;volatile
 11644                           
 11645                           ;lcd.c: 229: LCD_Port(y>>4);
 11646  0814  0873               	movf	LCD_Write_Char@y,w
 11647  0815  00F1               	movwf	??_LCD_Write_Char
 11648  0816  3004               	movlw	4
 11649  0817                     u2305:	
 11650  0817  36F1               	lsrf	??_LCD_Write_Char,f
 11651  0818  0B89               	decfsz	9,f
 11652  0819  2817               	goto	u2305
 11653  081A  0871               	movf	??_LCD_Write_Char,w
 11654  081B  3196  260A  3188   	fcall	_LCD_Port
 11655                           
 11656                           ;lcd.c: 230: RA2 = 1;
 11657  081E  0020               	movlb	0	; select bank0
 11658  081F  150C               	bsf	12,2	;volatile
 11659                           
 11660                           ;lcd.c: 231: RA2 = 0;
 11661  0820  110C               	bcf	12,2	;volatile
 11662                           
 11663                           ;lcd.c: 232: _delay((unsigned long)((40)*(32000000/4000000.0)));
 11664  0821  306A               	movlw	106
 11665  0822  00F1               	movwf	??_LCD_Write_Char
 11666  0823                     u3947:	
 11667  0823  0BF1               	decfsz	??_LCD_Write_Char,f
 11668  0824  2823               	goto	u3947
 11669  0825  0000               	nop
 11670                           
 11671                           ;lcd.c: 233: LCD_Port(temp);
 11672  0826  0872               	movf	LCD_Write_Char@temp,w
 11673  0827  3196  260A  3188   	fcall	_LCD_Port
 11674                           
 11675                           ;lcd.c: 234: RA2 = 1;
 11676  082A  0020               	movlb	0	; select bank0
 11677  082B  150C               	bsf	12,2	;volatile
 11678                           
 11679                           ;lcd.c: 235: RA2 = 0;
 11680  082C  110C               	bcf	12,2	;volatile
 11681                           
 11682                           ;lcd.c: 236: _delay((unsigned long)((40)*(32000000/4000000.0)));
 11683  082D  306A               	movlw	106
 11684  082E  00F1               	movwf	??_LCD_Write_Char
 11685  082F                     u3957:	
 11686  082F  0BF1               	decfsz	??_LCD_Write_Char,f
 11687  0830  282F               	goto	u3957
 11688  0831  0000               	nop
 11689  0832  0008               	return
 11690  0833                     __end_of_LCD_Write_Char:	
 11691                           
 11692                           	psect	text33
 11693  177F                     __ptext33:	
 11694 ;; *************** function _LCD_Set_Cursor *****************
 11695 ;; Defined at:
 11696 ;;		line 82 in file "lcd.c"
 11697 ;; Parameters:    Size  Location     Type
 11698 ;;  x               1    wreg     unsigned char 
 11699 ;;  y               1    4[COMMON] unsigned char 
 11700 ;; Auto vars:     Size  Location     Type
 11701 ;;  x               1    7[COMMON] unsigned char 
 11702 ;;  temp            1   10[COMMON] unsigned char 
 11703 ;;  w               1    9[COMMON] unsigned char 
 11704 ;;  z               1    8[COMMON] unsigned char 
 11705 ;; Return value:  Size  Location     Type
 11706 ;;                  1    wreg      void 
 11707 ;; Registers used:
 11708 ;;		wreg, status,2, status,0, pclath, cstack
 11709 ;; Tracked objects:
 11710 ;;		On entry : 0/0
 11711 ;;		On exit  : 0/0
 11712 ;;		Unchanged: 0/0
 11713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11714 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11715 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11716 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11717 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11718 ;;Total ram usage:        7 bytes
 11719 ;; Hardware stack levels used:    1
 11720 ;; Hardware stack levels required when called:    2
 11721 ;; This function calls:
 11722 ;;		_LCD_Cmd
 11723 ;; This function is called by:
 11724 ;;		_main
 11725 ;; This function uses a non-reentrant model
 11726 ;;
 11727                           
 11728                           
 11729                           ;psect for function _LCD_Set_Cursor
 11730  177F                     _LCD_Set_Cursor:	
 11731                           
 11732                           ;incstack = 0
 11733                           ; Regs used in _LCD_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
 11734                           ;LCD_Set_Cursor@x stored from wreg
 11735  177F  00F7               	movwf	LCD_Set_Cursor@x
 11736                           
 11737                           ;lcd.c: 86: char temp,z,w;
 11738                           ;lcd.c: 88: if(y == 0)
 11739  1780  0874               	movf	LCD_Set_Cursor@y,w
 11740  1781  1D03               	btfss	3,2
 11741  1782  2F9F               	goto	l2693
 11742                           
 11743                           ;lcd.c: 89: {
 11744                           ;lcd.c: 90: temp = 0x80 + x;
 11745  1783  0877               	movf	LCD_Set_Cursor@x,w
 11746  1784  3E80               	addlw	128
 11747  1785  00F5               	movwf	??_LCD_Set_Cursor
 11748  1786  0875               	movf	??_LCD_Set_Cursor,w
 11749  1787  00FA               	movwf	LCD_Set_Cursor@temp
 11750                           
 11751                           ;lcd.c: 91: z = temp>>4;
 11752  1788  087A               	movf	LCD_Set_Cursor@temp,w
 11753  1789  00F5               	movwf	??_LCD_Set_Cursor
 11754  178A  3004               	movlw	4
 11755  178B                     u2905:	
 11756  178B  36F5               	lsrf	??_LCD_Set_Cursor,f
 11757  178C  0B89               	decfsz	9,f
 11758  178D  2F8B               	goto	u2905
 11759  178E  0875               	movf	??_LCD_Set_Cursor,w
 11760  178F  00F6               	movwf	??_LCD_Set_Cursor+1
 11761  1790  0876               	movf	??_LCD_Set_Cursor+1,w
 11762  1791  00F8               	movwf	LCD_Set_Cursor@z
 11763                           
 11764                           ;lcd.c: 92: w = temp & 0x0F;
 11765  1792  087A               	movf	LCD_Set_Cursor@temp,w
 11766  1793  390F               	andlw	15
 11767  1794  00F5               	movwf	??_LCD_Set_Cursor
 11768  1795  0875               	movf	??_LCD_Set_Cursor,w
 11769  1796  00F9               	movwf	LCD_Set_Cursor@w
 11770                           
 11771                           ;lcd.c: 93: LCD_Cmd(z);
 11772  1797  0878               	movf	LCD_Set_Cursor@z,w
 11773  1798  3195  25E0  3197   	fcall	_LCD_Cmd
 11774                           
 11775                           ;lcd.c: 94: LCD_Cmd(w);
 11776  179B  0879               	movf	LCD_Set_Cursor@w,w
 11777  179C  3195  25E0         	fcall	_LCD_Cmd
 11778                           
 11779                           ;lcd.c: 95: }
 11780  179E  0008               	return
 11781  179F                     l2693:	
 11782                           
 11783                           ;lcd.c: 97: else if(y == 1)
 11784  179F  0374               	decf	LCD_Set_Cursor@y,w
 11785  17A0  1D03               	btfss	3,2
 11786  17A1  0008               	return
 11787                           
 11788                           ;lcd.c: 98: {
 11789                           ;lcd.c: 99: temp = 0xC0 + x;
 11790  17A2  0877               	movf	LCD_Set_Cursor@x,w
 11791  17A3  3EC0               	addlw	192
 11792  17A4  00F5               	movwf	??_LCD_Set_Cursor
 11793  17A5  0875               	movf	??_LCD_Set_Cursor,w
 11794  17A6  00FA               	movwf	LCD_Set_Cursor@temp
 11795                           
 11796                           ;lcd.c: 100: z = temp>>4;
 11797  17A7  087A               	movf	LCD_Set_Cursor@temp,w
 11798  17A8  00F5               	movwf	??_LCD_Set_Cursor
 11799  17A9  3004               	movlw	4
 11800  17AA                     u2925:	
 11801  17AA  36F5               	lsrf	??_LCD_Set_Cursor,f
 11802  17AB  0B89               	decfsz	9,f
 11803  17AC  2FAA               	goto	u2925
 11804  17AD  0875               	movf	??_LCD_Set_Cursor,w
 11805  17AE  00F6               	movwf	??_LCD_Set_Cursor+1
 11806  17AF  0876               	movf	??_LCD_Set_Cursor+1,w
 11807  17B0  00F8               	movwf	LCD_Set_Cursor@z
 11808                           
 11809                           ;lcd.c: 101: w = temp & 0x0F;
 11810  17B1  087A               	movf	LCD_Set_Cursor@temp,w
 11811  17B2  390F               	andlw	15
 11812  17B3  00F5               	movwf	??_LCD_Set_Cursor
 11813  17B4  0875               	movf	??_LCD_Set_Cursor,w
 11814  17B5  00F9               	movwf	LCD_Set_Cursor@w
 11815                           
 11816                           ;lcd.c: 102: LCD_Cmd(z);
 11817  17B6  0878               	movf	LCD_Set_Cursor@z,w
 11818  17B7  3195  25E0  3197   	fcall	_LCD_Cmd
 11819                           
 11820                           ;lcd.c: 103: LCD_Cmd(w);
 11821  17BA  0879               	movf	LCD_Set_Cursor@w,w
 11822  17BB  3195  25E0         	fcall	_LCD_Cmd
 11823  17BD  0008               	return
 11824  17BE                     __end_of_LCD_Set_Cursor:	
 11825                           
 11826                           	psect	text34
 11827  15E0                     __ptext34:	
 11828 ;; *************** function _LCD_Cmd *****************
 11829 ;; Defined at:
 11830 ;;		line 65 in file "lcd.c"
 11831 ;; Parameters:    Size  Location     Type
 11832 ;;  a               1    wreg     unsigned char 
 11833 ;; Auto vars:     Size  Location     Type
 11834 ;;  a               1    3[COMMON] unsigned char 
 11835 ;; Return value:  Size  Location     Type
 11836 ;;                  1    wreg      void 
 11837 ;; Registers used:
 11838 ;;		wreg, status,2, status,0, pclath, cstack
 11839 ;; Tracked objects:
 11840 ;;		On entry : 0/0
 11841 ;;		On exit  : 0/0
 11842 ;;		Unchanged: 0/0
 11843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11845 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11846 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11847 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11848 ;;Total ram usage:        3 bytes
 11849 ;; Hardware stack levels used:    1
 11850 ;; Hardware stack levels required when called:    1
 11851 ;; This function calls:
 11852 ;;		_LCD_Port
 11853 ;; This function is called by:
 11854 ;;		_InitCustomChars
 11855 ;;		_LCD_Clear
 11856 ;;		_LCD_Set_Cursor
 11857 ;;		_LCD_Init
 11858 ;; This function uses a non-reentrant model
 11859 ;;
 11860                           
 11861                           
 11862                           ;psect for function _LCD_Cmd
 11863  15E0                     _LCD_Cmd:	
 11864                           
 11865                           ;incstack = 0
 11866                           ; Regs used in _LCD_Cmd: [wreg+status,2+status,0+pclath+cstack]
 11867                           ;LCD_Cmd@a stored from wreg
 11868  15E0  00F3               	movwf	LCD_Cmd@a
 11869                           
 11870                           ;lcd.c: 67: RA0 = 0;
 11871  15E1  0020               	movlb	0	; select bank0
 11872  15E2  100C               	bcf	12,0	;volatile
 11873                           
 11874                           ;lcd.c: 68: LCD_Port(a);
 11875  15E3  0873               	movf	LCD_Cmd@a,w
 11876  15E4  3196  260A  3195   	fcall	_LCD_Port
 11877                           
 11878                           ;lcd.c: 69: RA2 = 1;
 11879  15E7  0020               	movlb	0	; select bank0
 11880  15E8  150C               	bsf	12,2	;volatile
 11881                           
 11882                           ;lcd.c: 70: RA2 = 0;
 11883  15E9  110C               	bcf	12,2	;volatile
 11884                           
 11885                           ;lcd.c: 71: _delay((unsigned long)((4)*(32000000/4000.0)));
 11886  15EA  302A               	movlw	42
 11887  15EB  00F2               	movwf	??_LCD_Cmd+1
 11888  15EC  308D               	movlw	141
 11889  15ED  00F1               	movwf	??_LCD_Cmd
 11890  15EE                     u3967:	
 11891  15EE  0BF1               	decfsz	??_LCD_Cmd,f
 11892  15EF  2DEE               	goto	u3967
 11893  15F0  0BF2               	decfsz	??_LCD_Cmd+1,f
 11894  15F1  2DEE               	goto	u3967
 11895  15F2  3200               	nop2
 11896  15F3  0008               	return
 11897  15F4                     __end_of_LCD_Cmd:	
 11898                           
 11899                           	psect	text35
 11900  160A                     __ptext35:	
 11901 ;; *************** function _LCD_Port *****************
 11902 ;; Defined at:
 11903 ;;		line 41 in file "lcd.c"
 11904 ;; Parameters:    Size  Location     Type
 11905 ;;  a               1    wreg     unsigned char 
 11906 ;; Auto vars:     Size  Location     Type
 11907 ;;  a               1    0[COMMON] unsigned char 
 11908 ;; Return value:  Size  Location     Type
 11909 ;;                  1    wreg      void 
 11910 ;; Registers used:
 11911 ;;		wreg
 11912 ;; Tracked objects:
 11913 ;;		On entry : 0/0
 11914 ;;		On exit  : 0/0
 11915 ;;		Unchanged: 0/0
 11916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11918 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11920 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11921 ;;Total ram usage:        1 bytes
 11922 ;; Hardware stack levels used:    1
 11923 ;; This function calls:
 11924 ;;		Nothing
 11925 ;; This function is called by:
 11926 ;;		_LCD_Cmd
 11927 ;;		_LCD_Init
 11928 ;;		_LCD_Write_Char
 11929 ;; This function uses a non-reentrant model
 11930 ;;
 11931                           
 11932                           
 11933                           ;psect for function _LCD_Port
 11934  160A                     _LCD_Port:	
 11935                           
 11936                           ;incstack = 0
 11937                           ; Regs used in _LCD_Port: [wreg]
 11938                           ;LCD_Port@a stored from wreg
 11939  160A  00F0               	movwf	LCD_Port@a
 11940                           
 11941                           ;lcd.c: 43: if(a & 1)
 11942  160B  1C70               	btfss	LCD_Port@a,0
 11943  160C  2E10               	goto	l94
 11944                           
 11945                           ;lcd.c: 44: RA7 = 1;
 11946  160D  0020               	movlb	0	; select bank0
 11947  160E  178C               	bsf	12,7	;volatile
 11948  160F  2E12               	goto	l2091
 11949  1610                     l94:	
 11950                           
 11951                           ;lcd.c: 45: else
 11952                           ;lcd.c: 46: RA7 = 0;
 11953  1610  0020               	movlb	0	; select bank0
 11954  1611  138C               	bcf	12,7	;volatile
 11955  1612                     l2091:	
 11956                           
 11957                           ;lcd.c: 48: if(a & 2)
 11958  1612  1CF0               	btfss	LCD_Port@a,1
 11959  1613  2E16               	goto	l96
 11960                           
 11961                           ;lcd.c: 49: RA6 = 1;
 11962  1614  170C               	bsf	12,6	;volatile
 11963  1615  2E17               	goto	l2095
 11964  1616                     l96:	
 11965                           
 11966                           ;lcd.c: 50: else
 11967                           ;lcd.c: 51: RA6 = 0;
 11968  1616  130C               	bcf	12,6	;volatile
 11969  1617                     l2095:	
 11970                           
 11971                           ;lcd.c: 53: if(a & 4)
 11972  1617  1D70               	btfss	LCD_Port@a,2
 11973  1618  2E1B               	goto	l98
 11974                           
 11975                           ;lcd.c: 54: RC0 = 1;
 11976  1619  140E               	bsf	14,0	;volatile
 11977  161A  2E1C               	goto	l2099
 11978  161B                     l98:	
 11979                           
 11980                           ;lcd.c: 55: else
 11981                           ;lcd.c: 56: RC0 = 0;
 11982  161B  100E               	bcf	14,0	;volatile
 11983  161C                     l2099:	
 11984                           
 11985                           ;lcd.c: 58: if(a & 8)
 11986  161C  1DF0               	btfss	LCD_Port@a,3
 11987  161D  2E20               	goto	l100
 11988                           
 11989                           ;lcd.c: 59: RC1 = 1;
 11990  161E  148E               	bsf	14,1	;volatile
 11991  161F  0008               	return
 11992  1620                     l100:	
 11993                           
 11994                           ;lcd.c: 60: else
 11995                           ;lcd.c: 61: RC1 = 0;
 11996  1620  108E               	bcf	14,1	;volatile
 11997  1621  0008               	return
 11998  1622                     __end_of_LCD_Port:	
 11999  007E                     btemp	set	126	;btemp
 12000  007E                     wtemp	set	126
 12001  007E                     wtemp0	set	126
 12002  0080                     wtemp1	set	128
 12003  0082                     wtemp2	set	130
 12004  0084                     wtemp3	set	132
 12005  0086                     wtemp4	set	134
 12006  0088                     wtemp5	set	136
 12007  007F                     wtemp6	set	127
 12008  007E                     ttemp	set	126
 12009  007E                     ttemp0	set	126
 12010  0081                     ttemp1	set	129
 12011  0084                     ttemp2	set	132
 12012  0087                     ttemp3	set	135
 12013  007F                     ttemp4	set	127
 12014  007E                     ltemp	set	126
 12015  007E                     ltemp0	set	126
 12016  0082                     ltemp1	set	130
 12017  0086                     ltemp2	set	134
 12018  0080                     ltemp3	set	128


Data Sizes:
    Strings     94
    Constant    27
    Data        28
    BSS         45
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     76      80
    BANK1            80     32      73
    BANK2            80      0      28
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            48      0       0
    BANK10            0      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 27
		 -> log@coeff(CODE[27]), 

    LCD_Write_String@a	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_38(CODE[5]), STR_37(CODE[4]), STR_36(CODE[6]), STR_35(CODE[3]), 
		 -> STR_34(CODE[11]), STR_33(CODE[11]), STR_32(CODE[17]), STR_31(CODE[9]), 
		 -> STR_30(CODE[17]), STR_29(CODE[11]), STR_28(CODE[17]), STR_27(CODE[11]), 
		 -> STR_26(CODE[2]), STR_25(CODE[2]), STR_24(CODE[2]), STR_23(CODE[2]), 
		 -> STR_22(CODE[2]), STR_21(CODE[2]), STR_20(CODE[2]), STR_19(CODE[2]), 
		 -> STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[2]), STR_15(CODE[2]), 
		 -> STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[2]), STR_11(CODE[2]), 
		 -> STR_10(CODE[2]), STR_9(CODE[2]), STR_8(CODE[2]), STR_7(CODE[2]), 
		 -> STR_6(CODE[2]), STR_5(CODE[2]), STR_4(CODE[2]), STR_3(CODE[2]), 
		 -> STR_2(CODE[2]), STR_1(CODE[2]), 


Critical Paths under _main in COMMON

    _main->___fttol
    _tempCalc->___awtoft
    _log->___awtoft
    ___ftmul->___awtoft
    ___awtoft->___ftpack
    ___ftadd->___awtoft
    ___ftdiv->___awtoft
    _readAnalog->___aldiv
    _SYSTEM_Initialize->_LCD_Init
    _LCD_Init->_LCD_Cmd
    _LCD_Clear->_LCD_Cmd
    _InitCustomChars->_LCD_Write_Char
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Int->___fttol
    _LCD_Write_Char->_LCD_Port
    _LCD_Set_Cursor->_LCD_Cmd
    _LCD_Cmd->_LCD_Port

Critical Paths under _main in BANK0

    _main->_tempCalc
    _tempCalc->_log
    _log->_eval_poly
    _eval_poly->___ftadd
    ___ftsub->___ftadd
    ___ftadd->___ftdiv
    ___ftdiv->___ftmul
    _readAnalog->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                35    35      0   51033
                                             73 BANK0      3     3      0
                                              0 BANK1     32    32      0
                            _ADCRead
                          _LCD_Clear
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                      _LCD_Write_Int
                   _LCD_Write_String
                 _PWM6_LoadDutyValue
                  _SYSTEM_Initialize
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___fttol
                            ___lwdiv
                         _readAnalog
                           _tempCalc
 ---------------------------------------------------------------------------------
 (1) _tempCalc                                            12     9      3   31165
                                             61 BANK0     12     9      3
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftsub
                                _log
 ---------------------------------------------------------------------------------
 (2) _log                                                  6     3      3   16273
                                             55 BANK0      6     3      3
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _frexp                                                6     2      4     330
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) _eval_poly                                           10     3      7    7209
                                             45 BANK0     10     3      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             16    10      6    2749
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6     322
                                              0 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             6     3      3    1904
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3674
                                             45 BANK0      6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             13     7      6    3501
                                             32 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    2729
                                             16 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    1707
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _readAnalog                                          22    20      2    1392
                                              9 COMMON     4     4      0
                                              6 BANK0     18    16      2
                            _ADCRead
                            ___aldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     622
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     406
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _ADCRead                                              4     1      3      22
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              8     4      4     374
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             14    10      4     464
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    3     3      0     709
                                              8 COMMON     3     3      0
                    _ADCC_Initialize
                    _InitCustomChars
                          _LCD_Clear
                           _LCD_Init
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM6_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             4     4      0     220
                                              4 COMMON     4     4      0
                            _LCD_Cmd
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            0     0      0     110
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (2) _InitCustomChars                                      2     2      0     356
                                              5 COMMON     2     2      0
                            _LCD_Cmd
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM6_LoadDutyValue                                   4     2      2     256
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCD_Write_String                                     5     3      2    2282
                                              5 COMMON     5     3      2
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (1) _LCD_Write_Int                                       19    14      5    2759
                                              0 BANK0     19    14      5
                     _LCD_Write_Char
                            ___awdiv
                            ___awmod
                            ___fttol (ARG)
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     402
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     406
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (1) _LCD_Set_Cursor                                       7     6      1    1228
                                              4 COMMON     7     6      1
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (3) _LCD_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (3) _LCD_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCRead
   _LCD_Clear
     _LCD_Cmd
       _LCD_Port
   _LCD_Set_Cursor
     _LCD_Cmd
       _LCD_Port
   _LCD_Write_Char
     _LCD_Port
   _LCD_Write_Int
     _LCD_Write_Char
       _LCD_Port
     ___awdiv
     ___awmod
     ___fttol (ARG)
     ___lwdiv (ARG)
   _LCD_Write_String
     _LCD_Write_Char
       _LCD_Port
   _PWM6_LoadDutyValue
   _SYSTEM_Initialize
     _ADCC_Initialize
     _InitCustomChars
       _LCD_Cmd
         _LCD_Port
       _LCD_Write_Char
         _LCD_Port
     _LCD_Clear
       _LCD_Cmd
         _LCD_Port
     _LCD_Init
       _LCD_Cmd
         _LCD_Port
       _LCD_Port
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM6_Initialize
     _TMR2_Initialize
   ___ftadd
     ___awtoft (ARG)
       ___ftpack
     ___ftdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftpack (ARG)
     ___wmul (ARG)
     _frexp (ARG)
   ___ftdiv
     ___awtoft (ARG)
       ___ftpack
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftpack (ARG)
     ___ftpack (ARG)
   ___ftmul
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)
     _frexp (ARG)
   ___fttol
   ___lwdiv
   _readAnalog
     _ADCRead
     ___aldiv
     ___wmul
   _tempCalc
     ___awtoft
       ___ftpack
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
       _frexp (ARG)
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftsub
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
     _log
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftge
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       _eval_poly
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___wmul
       _frexp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4C      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     20      49       7       91.3%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      1C       9       35.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      C3      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               30      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK10               0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      C3      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Mon Feb 26 17:18:28 2018

                    __CFG_CP$OFF 0000                               l58 15C9                               l94 1610  
                             l96 1616                               l98 161B                     ___awdiv@sign 0076  
            ___wmul@multiplicand 0072      __size_of_PWM6_LoadDutyValue 0016                     ___ftadd@exp1 004C  
                   ___ftadd@exp2 004B                      __CFG_LVP$ON 0000                     ___ftadd@sign 004A  
                            l100 1620                              l401 165E                              l291 03ED  
                            l456 099E                              l570 0976                              l562 095B  
                            l653 0A7B                              l569 096E                              l593 00DC  
                            _GIE 005F                              _RA0 0060                              _RA2 0062  
                            _RC0 0070                              _RC1 0071                              _RA6 0066  
                            _RA7 0067                     __CFG_CPD$OFF 0000                              _log 0BC5  
                __end_of_ADCRead 15D0                     ___awmod@sign 0076                  _TMR2_Initialize 15B4  
                   __CFG_BORV$LO 0000                              wreg 0009                      main@analogs 00A5  
                __end_of_LCD_Cmd 15F4                     __CFG_ZCD$OFF 0000                     ___ftdiv@cntr 003A  
                 _LCD_Set_Cursor 177F                     ___ftdiv@sign 003F                             l2105 1658  
                           l2123 0065                             l2211 0CDA                             l3011 03B3  
                           l2133 007B                             l2063 0938                             l2151 00A8  
                           l2127 006C                             l2223 0CF6                             l2215 0CE2  
                           l3103 04CC                             l3023 03D7                             l2073 0960  
                           l2065 0942                             l2153 00B2                             l2145 0095  
                           l3121 04FC                             l3113 04E9                             l3017 03B9  
                           l2091 1612                             l2075 0968                             l2067 0947  
                           l2059 0931                             l2163 00CE                             l2155 00B7  
                           l2227 0CFE                             l2307 1756                             l3027 03E4  
                           l2501 09AF                             l2173 0100                             l2165 00D8  
                           l2157 00BB                             l2325 0922                             l3133 0519  
                           l2095 1617                             l2511 09CD                             l2183 011B  
                           l3127 050C                             l2601 0862                             l2361 16BC  
                           l2169 00EE                             l2193 0C89                             l3145 054D  
                           l3073 046C                             l3049 042C                             l2099 161C  
                           l2523 09F8                             l2275 1699                             l2283 171F  
                           l3163 057B                             l3155 0569                             l2605 086B  
                           l2509 09BF                             l3261 07A9                             l3253 07A0  
                           l3237 06C7                             l2367 16CD                             l2527 0A06  
                           l2519 09ED                             l2287 1735                             l2199 0C9F  
                           l3175 059B                             l2545 088D                             l2609 0873  
                           l2625 0B49                             l2481 0BF4                             l3265 07B5  
                           l3169 058B                             l2571 08C4                             l2563 08B3  
                           l2555 0895                             l2539 0882                             l2723 0D48  
                           l2619 0B33                             l2475 0BE3                             l3267 07B6  
                           l3187 05CF                             l2557 08A1                             l2741 0D86  
                           l2733 0D4F                             l2709 1624                             l3197 05EB  
                           l2567 08BC                             l2583 083D                             l2751 0DA2  
                           l2743 0D8E                             l2735 0D7E                             l2647 0BA3  
                           l2639 0B8A                             l2753 0DCE                             l2745 0D9E  
                           l2841 0A8C                             l2809 0A27                             l2595 084A  
                           l2587 0844                             l2739 0D82                             l2835 0A72  
                           l2827 0A57                             l2659 1679                             l2693 179F  
                           l2597 0856                             l2757 0DDC                             l2837 0A7E  
                           l2829 0A65                             l2677 0FD8                             l2863 16FB  
                           l2855 16DD                             l2857 16E9                             l2867 1704  
                           ?_log 0057                             STR_1 1063                             STR_2 106F  
                           STR_3 1071                             STR_4 1069                             STR_5 1063  
                           STR_6 1035                             STR_7 1065                             STR_8 1063  
                           STR_9 1077                             u2105 00BC                             u3005 0DBC  
                           u2045 0096                             u2205 0CAB                             _LATA 0016  
                           _LATB 0017                             u2135 00CF                             u2215 0CBB  
                           _LATC 0018                             u2400 003B                             u2305 0817  
                           u3210 0141                             u3035 1603                             u3115 0A73  
                           u2075 00A9                             u2235 0CE3                             u2245 0CE9  
                           u3055 0A2E                             u2505 09E2                             _T2PR 028D  
                           u3155 16E0                             u2515 09EE                             u2275 0CFF  
                           u2605 08AC                             u3085 0A58                             u2285 0D05  
                           u2615 08B4                             u3175 16EA                             u1815 0963  
                           u2705 0863                             u3185 16F4                             u3195 16FC  
                           u2475 09C2                             u3507 018E                             u1925 165F  
                           u3517 01A3                             u2575 0898                             u2495 09CE  
                           u1935 1664                             u1855 097D                             u1775 093D  
                           u3607 0260                             u3527 01B8                             u2905 178B  
                           u2825 0EE5                             u3617 0275                             u3537 01CD  
                           u2595 08A2                             u2675 084D                             u2835 0F33  
                           u1795 0956                             u2755 0B5B                             u3707 0338  
                           u3627 0290                             u3547 01E2                             u2940 0D31  
                           u2925 17AA                             u2845 0F6C                             u2765 0B6B  
                           u3717 034D                             u3637 02A5                             u3557 01F7  
                           u2695 085C                             u2855 0FAF                             u2775 0B8B  
                           u3807 05E0                             u3727 0362                             u3647 02BA  
                           u3567 020C                             u3817 17D9                             u2865 0FC8  
                           u2785 0B9A                             u3737 0377                             u3657 02CF  
                           u3577 0221                             u3497 0171                             u3907 0AE9  
                           u3827 17E9                             u2795 0BA4                             u3747 038C  
                           u3667 02E4                             u3587 0236                             u3917 0AF9  
                           u3837 17F8                             u2885 0FE4                             u3757 03A1  
                           u3677 02F9                             u3597 024B                             u3927 0B08  
                           u3847 0AA0                             u3767 0423                             u3687 030E  
                           u3937 0B17                             u3857 0AAE                             u3777 0463  
                           u3697 0323                             u3947 0823                             u3867 0AB9  
                           u3787 04C3                             u3957 082F                             u3877 0AC3  
                           u3797 055E                             u3967 15EE                             u3887 0ACD  
                           u3897 0ADB              tempCalc@analogValue 005D                             _WPUA 0F39  
                           _WPUB 0F44                             _WPUC 0F4F                             _WPUE 0F65  
                   __CFG_WRT$OFF 0000                    __CFG_FCMEN$ON 0000                ?_LCD_Write_String 0075  
                           _main 0133                     ___ftpack@arg 0070               __size_of_LCD_Clear 0008  
                   ___ftpack@exp 0073                             fsr0h 0005                             fsr1h 0007  
                           fsr0l 0004                             indf0 0000                             indf1 0001  
                           fsr1l 0006                             btemp 007E                             log@x 0057  
                  __CFG_BOREN$ON 0000                             ltemp 007E                             start 0002  
             ??_LCD_Write_String 0077                             ttemp 007E                             wtemp 007E  
                  __CFG_CSWEN$ON 0000                    __CFG_MCLRE$ON 0000                     ___ftmul@cntr 002E  
                  _LCD_Write_Int 0D26                     ___ftmul@sign 002F                     ___fttol@exp1 007D  
                          ??_log 005A                     ___fttol@lval 0079                 __end_of_LCD_Init 0B1C  
               __end_of_LCD_Port 1622   __size_of_OSCILLATOR_Initialize 0009    __end_of_OSCILLATOR_Initialize 1585  
                __end_of___aldiv 0A0F                            _ADACQ 009D                            _ADCAP 009B  
                          _ADACT 0099                            ?_main 0070                            _ADCLK 0098  
                          _ADPCH 009E                            _ADREF 009A                  __end_of___awdiv 08C9  
                          _ADPRE 009C                  __end_of___ftadd 0133                            STR_10 106B  
                          STR_11 1065                            STR_12 1061                            STR_20 105F  
                          STR_21 1035                            STR_13 1075                            STR_14 1071  
                          STR_30 101B                            STR_22 106D                            STR_23 106B  
                          STR_15 1073                            STR_31 1042                            STR_24 1065  
                          STR_16 1069                            STR_32 101B                            STR_17 106B  
                          STR_25 1075                            STR_33 1037                    __CFG_WDTE$OFF 0000  
                          STR_34 1037                            STR_18 1067                            STR_26 105D  
                          STR_19 1035                            STR_35 105A                            STR_27 102C  
                          STR_36 104B                            STR_28 101B                  __end_of___awmod 0878  
                          STR_29 102C                            STR_37 1056                            STR_38 1051  
                          _ADRPT 010D                  __end_of___ftdiv 0BC5                  __end_of___ftmul 0D26  
                ___awdiv@divisor 0070                  __end_of___ftsub 168F                  __end_of___fttol 0A95  
                          _T2CON 028E                            _T2HLT 028F                  __end_of___lwdiv 1709  
                          _T2TMR 028C                            _T2RST 0291                  ___awdiv@counter 0075  
                          _OSCEN 0891                            _TRISA 0011                            _TRISB 0012  
                          _TRISC 0013                  _PWM6_Initialize 1585           __end_of_LCD_Set_Cursor 17BE  
                  ___awtoft@sign 007D                            _frexp 1744                            _errno 006C  
                  ___ftpack@sign 0074                            main@x 00BD                            ltemp0 007E  
                          ltemp1 0082                            ltemp2 0086                            ltemp3 0080  
                          ttemp0 007E                            ttemp1 0081                            ttemp2 0084  
                          ttemp3 0087                            ttemp4 007F                            status 0003  
                          wtemp0 007E                            wtemp1 0080                            wtemp2 0082  
                          wtemp3 0084                            wtemp4 0086                            wtemp5 0088  
                          wtemp6 007F                 InitCustomChars@i 0076                   ?_LCD_Write_Int 0020  
                 _LCD_Write_Char 0807                  __initialization 07BD                      log@exponent 005B  
                   __end_of_main 07BD                readAnalog@channel 0026          __end_of_TMR2_Initialize 15C2  
                      ??_ADCRead 0073                    main@tPadCount 00BA                           ??_main 0069  
                  ___fttol@sign1 0078                __end_of_LCD_Clear 157C                        ??_LCD_Cmd 0071  
                ?_LCD_Set_Cursor 0074                           _ADCON0 0093                           _ADCON1 0094  
                         _ADCON2 0095                           _ADCON3 0096                           ?_frexp 0070  
                         _ADLTHH 010F                           _ADLTHL 010E                           _ADRESH 008D  
                         _ADRESL 008C                           _ADSTAT 0097                           _ADUTHH 0111  
               ___awdiv@dividend 0072                           _ADUTHL 0110                 __end_of___awtoft 16AF  
                         _ANSELA 0F38                           _ANSELB 0F43                           _ANSELC 0F4E  
               __end_of___ftpack 098D                           _RC2PPS 0F22                   __CFG_WDTCCS$SC 0000  
                         _FVRCON 090C                           _OSCFRQ 0893                    main@dutyCycle 00BE  
         __end_of_LCD_Write_Char 0833                   __CFG_PWRTE$OFF 0000                     _CCPTMRS1bits 021F  
                         ___ftge 1709           LCD_Write_Int@numPlaces 0023                        ??___aldiv 0078  
                         ___wmul 1656                        ??___awdiv 0074                        ??___ftadd 0046  
                 __CFG_STVREN$ON 0000                        ??___awmod 0074                        ??___ftdiv 0036  
                      ??___ftmul 0026                        ??___ftsub 007E                        ??___fttol 0074  
                      ??___lwdiv 0074          __end_of_PWM6_Initialize 1590                 ___awdiv@quotient 0077  
                ___awmod@divisor 0070                  ___awmod@counter 0075                           _totals 00C0  
          ___ftmul@f3_as_product 002B                 __end_of_tempCalc 0ED0                  _ADCC_Initialize 163C  
               LCD_Write_Int@str 002A                  _InitCustomChars 16AF                  LCD_Set_Cursor@w 0079  
                LCD_Set_Cursor@x 0077                  LCD_Set_Cursor@y 0074                  LCD_Set_Cursor@z 0078  
       readAnalog@analog_channel 0079                _SYSTEM_Initialize 17BE                 __end_oflog@coeff 101B  
        __end_of__initialization 07FD                        ?_LCD_Init 0070                        ?_LCD_Port 0070  
                     ___ftadd@f1 0040                       ___ftadd@f2 0043                       ___ftge@ff1 0070  
                     ___ftge@ff2 0073                  ??_LCD_Write_Int 0025               ?_SYSTEM_Initialize 0070  
                   eval_poly@res 0054                       ___ftdiv@f1 0033                       ___ftdiv@f2 0030  
                     ___ftdiv@f3 003B                  ?_LCD_Write_Char 0070                    LCD_Init@style 0077  
                     ___awtoft@c 0078                       ___ftmul@f1 0020                       ___ftmul@f2 0023  
                     ___ftsub@f1 0050                       ___ftsub@f2 004D                       ___fttol@f1 0070  
                 __pcstackCOMMON 0070                        LCD_Port@a 0070                     __pidataBANK1 15A8  
                   __pidataBANK2 15D0              ??_SYSTEM_Initialize 0078                    __end_of_frexp 177F  
               ?_TMR2_Initialize 0070                          ??_frexp 0074        __end_of_SYSTEM_Initialize 1800  
                     __pbssBANK0 006C                       __pbssBANK1 00C0                       __pbssBANK2 0130  
             __size_of_eval_poly 0060                       ??_LCD_Init 0074                       ??_LCD_Port 0070  
                     __pmaintext 0133                          ?___ftge 0070                          ?___wmul 0070  
                __CFG_PPS1WAY$ON 0000          __end_of_ADCC_Initialize 1656       __end_of_PWM6_LoadDutyValue 160A  
                        _ADCRead 15C2        __size_of_LCD_Write_String 001A                 ?_PWM6_Initialize 0070  
                      ?___awtoft 0078                        ?___ftpack 0070                          _ADSTPTH 0113  
                        _ADSTPTL 0112         __CFG_SCANE$not_available 0000              __CFG_RSTOSC$HFINT32 0000  
               main@displayTemp2 00B6          __end_of_InitCustomChars 16D5                          _LCD_Cmd 15E0  
                        _OSCCON1 088D                          _OSCCON3 088F                          _OSCTUNE 0892  
                        _PWM6DCH 038D                          _PWM6DCL 038C                          _PWM6CON 038E  
                        _PPSLOCK 0E8F                        ?_tempCalc 005D                       _readAnalog 0ED0  
                        ___aldiv 098D                          ___cgram 0120                  __size_of___ftge 003B  
                        ___awdiv 0878                          ___ftadd 003D                          ___awmod 0833  
                        ___ftdiv 0B1C                  __size_of___wmul 001B                          ___ftmul 0C72  
                        ___ftsub 1671                          ___fttol 0A0F                          ___lwdiv 16D5  
                     ??___awtoft 007B                       ??___ftpack 0075                __end_of_eval_poly 0929  
               ??_LCD_Set_Cursor 0075                          __ptext1 0DF1                          __ptext2 0BC5  
                        __ptext3 1744                          __ptext4 08C9                          __ptext5 0C72  
                        __ptext6 1709                          __ptext7 168F                          __ptext8 1671  
                        __ptext9 003D                   main@resetDelay 00B9            _OSCILLATOR_Initialize 157C  
                      _T2CONbits 028E                     __size_of_log 00AD                 ___awmod@dividend 0072  
                 ADCRead@channel 0073                 ___aldiv@dividend 0074         ??_PIN_MANAGER_Initialize 0070  
                        _samples 2300                        _LCD_Clear 1574       __size_of_SYSTEM_Initialize 0042  
                        clrloop0 1591             end_of_initialization 07FD                          init_ram 159C  
                        initloop 159D                       ??_tempCalc 007E                 ___aldiv@quotient 0022  
                 main@startDelay 00A4                LCD_Write_Int@sign 0024                       main@F13657 0130  
                   __pstringtext 1000                 ?_ADCC_Initialize 0070            __CFG_WDTCPS$WDTCPS_31 0000  
               ?_InitCustomChars 0070                       main@C_or_F 00BC                       ?_LCD_Clear 0070  
               __CFG_FEXTOSC$OFF 0000                       main@bCount 00B1                LCD_Write_String@a 0075  
              LCD_Write_String@i 0078                 ??_LCD_Write_Char 0071                       main@choice 00BB  
                    ___ftdiv@exp 003E                __size_of_LCD_Init 0087                __size_of_LCD_Port 0018  
                    ___ftmul@exp 002A                      ?_readAnalog 0026                   __end_of___ftge 1744  
                 __end_of___wmul 1671                 _LCD_Write_String 1622           ?_OSCILLATOR_Initialize 0070  
            start_initialization 07BD                       eval_poly@d 0050                       eval_poly@n 0052  
                     eval_poly@x 004D  __size_of_PIN_MANAGER_Initialize 0036                      __end_of_log 0C72  
                     frexp@value 0070         LCD_Write_Int@fieldLength 0022            __end_of_LCD_Write_Int 0DF1  
               __CFG_LPBOREN$OFF 0000                         ??___ftge 0076                tempCalc@steinhart 0066  
                       ??___wmul 0074                      __pdataBANK1 00DD                      __pdataBANK2 0120  
                LCD_Write_Char@a 0074                  LCD_Write_Char@y 0073                         ?_ADCRead 0070  
                       ?_LCD_Cmd 0070                __size_of___awtoft 0020                __size_of___ftpack 0064  
                    __pbssBIGRAM 2300                         LCD_Cmd@a 0073                        ___latbits 0002  
                  __pcstackBANK0 0020                    __pcstackBANK1 00A0               _PWM6_LoadDutyValue 15F4  
       __size_of_TMR2_Initialize 000E                      ??_LCD_Clear 0074              __size_of_readAnalog 0130  
            ?_PWM6_LoadDutyValue 0070                 ___lwdiv@dividend 0072           _PIN_MANAGER_Initialize 0007  
                       ?___aldiv 0070                __size_of_tempCalc 00DF                         ?___awdiv 0070  
                       ?___ftadd 0040                         ?___awmod 0070                         ?___ftdiv 0030  
                       ?___ftmul 0020                         ?___ftsub 004D                         ?___fttol 0070  
                       ?___lwdiv 0070                  main@displayTemp 00B3             ??_PWM6_LoadDutyValue 0072  
                      _eval_poly 08C9         __size_of_PWM6_Initialize 000B                 ___lwdiv@quotient 0075  
                 __size_of_frexp 003B                         _T2CLKCON 0290                  ___aldiv@divisor 0070  
                ___aldiv@counter 0020                         _LCD_Init 0A95                   ___wmul@product 0074  
                       _LCD_Port 160A                        clear_ram0 1590                         _PIE0bits 0716  
                       _PIR4bits 0710                 __size_of_ADCRead 000E                       _ADCON0bits 0093  
              ___wmul@multiplier 0070                       ?_eval_poly 004D                 __size_of_LCD_Cmd 0014  
       __end_of_LCD_Write_String 163C                ??_TMR2_Initialize 0070                  readAnalog@value 007B  
                      frexp@eptr 0073                     ??_readAnalog 0028                     _tempCalc$988 0063  
        ??_OSCILLATOR_Initialize 0070                   LCD_Write_Int@i 0031                   LCD_Write_Int@j 002F  
               __size_of___aldiv 0082                 __size_of___awdiv 0051                 __size_of___ftadd 00F6  
               __size_of___awmod 0045                 __size_of___ftdiv 00A9                 __size_of___ftmul 00B4  
               __size_of___ftsub 001E                 __size_of___fttol 0086                 __size_of___lwdiv 0034  
                       ___awtoft 168F                         ___ftpack 0929         __size_of_ADCC_Initialize 001A  
                       _channels 00DD                         _main$989 00A0                  ___lwdiv@divisor 0070  
                ___lwdiv@counter 0077                         __ptext10 0B1C                         __ptext11 0929  
                       __ptext20 1585                         __ptext12 0ED0                         __ptext21 0007  
                       __ptext13 1656                         __ptext30 0833                         __ptext22 157C  
                       __ptext14 098D                         __ptext31 0878                         __ptext23 0A95  
                       __ptext15 15C2                         __ptext32 0807                         __ptext24 1574  
                       __ptext16 16D5                         __ptext33 177F                         __ptext25 16AF  
                       __ptext17 0A0F                         __ptext34 15E0                         __ptext26 163C  
                       __ptext18 17BE                         __ptext35 160A                         __ptext27 15F4  
                       __ptext19 15B4                         __ptext28 1622                         __ptext29 0D26  
             __end_of_readAnalog 1000          __size_of_LCD_Set_Cursor 003F                        tempCalc@R 0060  
       __size_of_InitCustomChars 0026              LCD_Write_Int@F13687 00D8                ??_PWM6_Initialize 0070  
                  __size_of_main 068A             __CFG_WDTCWS$WDTCWS_7 0000                         _tempCalc 0DF1  
                       main@loop 00A3      PIN_MANAGER_Initialize@state 0070                         log@coeff 1000  
                    ??_eval_poly 007E                      _sampleIndex 006E               LCD_Write_Char@temp 0072  
        ?_PIN_MANAGER_Initialize 0070                __CFG_CLKOUTEN$OFF 0000                      _PPSLOCKbits 0E8F  
        __size_of_LCD_Write_Char 002C               LCD_Set_Cursor@temp 007A               LCD_Write_Int@value 0020  
                   ___aldiv@sign 0021      PWM6_LoadDutyValue@dutyCycle 0070           __size_of_LCD_Write_Int 00CB  
 __end_of_PIN_MANAGER_Initialize 003D                ??_ADCC_Initialize 0070                ??_InitCustomChars 0075  
